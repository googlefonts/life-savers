{
.appVersion = "3309";
.formatVersion = 3;
axes = (
{
name = Weight;
tag = wght;
}
);
customParameters = (
{
name = panose;
value = (
3,
5,
9,
2,
4,
3,
2,
0,
0,
4
);
},
{
name = fsType;
value = (
);
},
{
name = "Use Typo Metrics";
value = 1;
}
);
date = "2013-08-22 21:28:00 +0000";
familyName = "Life Savers";
featurePrefixes = (
{
automatic = 1;
code = "languagesystem DFLT dflt;

languagesystem latn dflt;
languagesystem latn CAT;
";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature salt;
feature ss01;
feature locl;
feature subs;
feature sinf;
feature sups;
feature frac;
feature ordn;
";
tag = aalt;
},
{
automatic = 1;
code = "script latn;
language CAT;
lookup locl_latn_0 {
	sub  l' periodcentered' l by ldot;
	sub  L' periodcentered' L by Ldot;
} locl_latn_0;
";
tag = locl;
},
{
automatic = 1;
code = "sub zero by zeroinferior;
sub one by oneinferior;
sub two by twoinferior;
sub three by threeinferior;
sub four by fourinferior;
sub five by fiveinferior;
sub six by sixinferior;
sub seven by seveninferior;
sub eight by eightinferior;
sub nine by nineinferior;
";
tag = subs;
},
{
automatic = 1;
code = "sub zero by zeroinferior;
sub one by oneinferior;
sub two by twoinferior;
sub three by threeinferior;
sub four by fourinferior;
sub five by fiveinferior;
sub six by sixinferior;
sub seven by seveninferior;
sub eight by eightinferior;
sub nine by nineinferior;
";
tag = sinf;
},
{
automatic = 1;
code = "sub zero by zerosuperior;
sub one by onesuperior;
sub two by twosuperior;
sub three by threesuperior;
sub four by foursuperior;
sub five by fivesuperior;
sub six by sixsuperior;
sub seven by sevensuperior;
sub eight by eightsuperior;
sub nine by ninesuperior;
";
tag = sups;
},
{
automatic = 1;
code = "sub one slash eight by oneeighth;
sub one slash four by onequarter;
sub three slash eight by threeeighths;
sub one slash two by onehalf;
sub five slash eight by fiveeighths;
sub three slash four by threequarters;
sub seven slash eight by seveneighths;
sub one slash three by onethird;
sub two slash three by twothirds;
";
tag = frac;
},
{
automatic = 1;
code = "sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;
sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;
";
tag = ordn;
},
{
automatic = 1;
code = "lookupflag IgnoreMarks;
sub f f b by f_f_b;
sub f f h by f_f_h;
sub f f j by f_f_j;
sub f f k by f_f_k;
sub c h by c_h;
sub c k by c_k;
sub c p by c_p;
sub c t by c_t;
sub f b by f_b;
sub f h by f_h;
sub f j by f_j;
sub f k by f_k;
sub f t by f_t;
sub l l by l_l;
sub s p by s_p;
sub s t by s_t;
sub t t by t_t;
sub t z by t_z;
";
tag = dlig;
},
{
automatic = 1;
code = "lookupflag IgnoreMarks;
sub f f i by f_f_i;
sub f f l by f_f_l;
sub f f by f_f;
sub f i by f_i;
sub f l by f_l;
";
tag = liga;
},
{
code = "script latn;
language dflt;
lookup SUB_2 {
	sub K by K.salt;
	sub R by R.salt;
	sub a by a.salt;
	sub c by c.salt;
	sub g by g.salt;
	sub k by k.salt;
	sub s by s.salt;
} SUB_2;
";
tag = salt;
},
{
code = "script latn;
language dflt;
lookup SUB_3 {
	sub K by K.salt;
	sub R by R.salt;
	sub a by a.salt;
	sub c by c.salt;
	sub g by g.salt;
	sub k by k.salt;
	sub s by s.salt;
} SUB_3;
";
labels = (
{
language = dflt;
value = "";
}
);
tag = ss01;
}
);
fontMaster = (
{
axesValues = (
400
);
customParameters = (
{
name = typoAscender;
value = 972;
},
{
name = typoDescender;
value = -250;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 972;
},
{
name = winDescent;
value = 250;
},
{
name = hheaAscender;
value = 972;
},
{
name = hheaDescender;
value = -250;
},
{
name = strikeoutPosition;
value = 250;
},
{
name = strikeoutSize;
value = 50;
},
{
name = "prep Table Assembly";
value = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
200
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 1
INSTCTRL[ ]	/* SetInstrExecControl */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
2048 2048
MUL[ ]	/* Multiply */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
3
SWAP[ ]	/* SwapTopStack */
WCVTF[ ]	/* WriteCVTInFUnits */
PUSHB[ ]	/* 1 value pushed */
23
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
14
LTEQ[ ]	/* LessThenOrEqual */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
6
GTEQ[ ]	/* GreaterThanOrEqual */
AND[ ]	/* LogicalAnd */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
52
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
40
EIF[ ]	/* EndIf */
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
2
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 3 values pushed */
11 1 6
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 3 values pushed */
12 6 6
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 3 values pushed */
20 6 6
LOOPCALL[ ]	/* LoopAndCallFunction */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 40 9
RCVT[ ]	/* ReadCVT */
GT[ ]	/* GreaterThan */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 3 values pushed */
12 8 7
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
6 1
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 2 values pushed */
36 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
GETINFO[ ]	/* GetInfo */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
6 3
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 2 values pushed */
38 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1024
GETINFO[ ]	/* GetInfo */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
6 1
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
511
SCANCTRL[ ]	/* ScanConversionControl */
PUSHB[ ]	/* 1 value pushed */
4
SCANTYPE[ ]	/* ScanType */
PUSHB[ ]	/* 2 values pushed */
5 0
WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */
0
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192
LT[ ]	/* LessThan */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
AND[ ]	/* LogicalAnd */
PUSHB[ ]	/* 1 value pushed */
4
RCVT[ ]	/* ReadCVT */
OR[ ]	/* LogicalOr */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
ROLL[ ]	/* RollTopThreeStack */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
80
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
56
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
56
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
11
RCVT[ ]	/* ReadCVT */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
40
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
11
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
48
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
48
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
10
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
54
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
54
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
2
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
3
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 2 values pushed */
5 98
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
11 1 2
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
48 5
CINDEX[ ]	/* CopyXToTopStack */
ROLL[ ]	/* RollTopThreeStack */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
ADD[ ]	/* Add */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
SUB[ ]	/* Subtract */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
EIF[ ]	/* EndIf */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
4
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 3 values pushed */
0 2 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
5
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
6
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 2 values pushed */
8 4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
0
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
48
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 5
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
9
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
9
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
9
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
10
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHW[ ]	/* 1 value pushed */
1024
MUL[ ]	/* Multiply */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
11
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
11
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
7 1
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
DEPTH[ ]	/* GetDepthStack */
PUSHB[ ]	/* 1 value pushed */
13
NEG[ ]	/* Negate */
SWAP[ ]	/* SwapTopStack */
JROT[ ]	/* JumpRelativeOnTrue */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
12
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
MPPEM[ ]	/* MeasurePixelPerEm */
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
7 1
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
DEPTH[ ]	/* GetDepthStack */
PUSHB[ ]	/* 1 value pushed */
19
NEG[ ]	/* Negate */
SWAP[ ]	/* SwapTopStack */
JROT[ ]	/* JumpRelativeOnTrue */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
13
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 12
RS[ ]	/* ReadStore */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
12 12
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
9 2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
10 2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
9
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
9
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
9
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
0 0
SZP0[ ]	/* SetZonePointer0 */
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
0
MIAP[0]	/* MoveIndirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
1 1 1
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
14
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
12
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 6 values pushed */
13 13 1 0 11 0
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
13 5
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
109
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
15
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
16
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
17
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
18
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
3 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
19
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
4 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
20
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
21
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
6 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
22
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
7 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
23
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
24
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
9 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
25
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
12
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 6 values pushed */
13 13 1 0 11 0
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
13 5
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
109
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
26
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
27
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
28
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
29
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
3 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
30
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
4 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
31
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
6 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
33
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
7 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
34
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
35
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
9 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
36
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
37
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
13
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
36
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
38
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
37
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
37
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
39
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
40
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
39
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 1 value pushed */
1
SZP2[ ]	/* SetZonePointer2 */
IUP[0]	/* InterpolateUntPts */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
41
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
39
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 1 value pushed */
1
SZP2[ ]	/* SetZonePointer2 */
IUP[0]	/* InterpolateUntPts */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
42
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
SHC[1]	/* ShiftContourByLastPt */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
43
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 5 values pushed */
0 0 0 0 0
WCVTP[ ]	/* WriteCVTInPixels */
MIAP[0]	/* MoveIndirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
42 1
SZP2[ ]	/* SetZonePointer2 */
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
44
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
45
FDEF[ ]	/* FunctionDefinition */
MDAP[0]	/* MoveDirectAbsPt */
SLOOP[ ]	/* SetLoopVariable */
ALIGNRP[ ]	/* AlignRelativePt */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
46
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 0
SZPS[ ]	/* SetZonePointerS */
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
IF[ ]	/* If */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
46 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
NEG[ ]	/* Negate */
ROLL[ ]	/* RollTopThreeStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
2 32 3 32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
2 38 3 26
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
0
EQ[ ]	/* Equal */
IF[ ]	/* If */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
IF[ ]	/* If */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
32
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
54
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
55
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
56
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
57
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
58
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
CALL[ ]	/* CallFunction */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
38
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
59
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
60
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 4
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
2 32 3 32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
2 38 3 26
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
61
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
62
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
CALL[ ]	/* CallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
38
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
63
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
44
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
64
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
44
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
65
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 1
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
PUSHB[ ]	/* 1 value pushed */
45
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
66
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
67
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
RCVT[ ]	/* ReadCVT */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
68
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
69
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
70
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
71
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
72
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
73
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
74
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
75
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
76
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
77
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
78
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
79
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
80
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
81
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
82
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
83
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
84
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
85
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
86
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
87
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
88
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
89
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
90
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
91
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
92
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
93
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
94
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
95
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
96
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
97
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
98
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
99
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
100
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
101
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
102
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
103
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
104
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
105
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
106
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
107
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
108
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
109
FDEF[ ]	/* FunctionDefinition */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
8
NEG[ ]	/* Negate */
PUSHB[ ]	/* 1 value pushed */
3
DEPTH[ ]	/* GetDepthStack */
LT[ ]	/* LessThan */
JROT[ ]	/* JumpRelativeOnTrue */
PUSHB[ ]	/* 1 value pushed */
1
SZP2[ ]	/* SetZonePointer2 */
IUP[0]	/* InterpolateUntPts */
ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    44,
    30,
    44,
    30,
    821,
    0,
    817,
    436,
    \"-2\",
    \"-202\",
    972,
    \"-250\",
    838,
    \"-14\",
    817,
    475,
    \"-11\",
    \"-221\",
    972,
    \"-250\"
)";
}
);
id = "E59D8378-1062-4241-9A8F-EEB295F00E05";
metricValues = (
{
pos = 972;
},
{
pos = 821;
},
{
pos = 436;
},
{
},
{
pos = -250;
},
{
}
);
name = Regular;
},
{
axesValues = (
700
);
customParameters = (
{
name = typoAscender;
value = 972;
},
{
name = typoDescender;
value = -250;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 972;
},
{
name = winDescent;
value = 250;
},
{
name = hheaAscender;
value = 972;
},
{
name = hheaDescender;
value = -250;
},
{
name = strikeoutPosition;
value = 250;
},
{
name = strikeoutSize;
value = 50;
},
{
name = "prep Table Assembly";
value = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
200
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 1
INSTCTRL[ ]	/* SetInstrExecControl */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
2048 2048
MUL[ ]	/* Multiply */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
3
SWAP[ ]	/* SwapTopStack */
WCVTF[ ]	/* WriteCVTInFUnits */
PUSHB[ ]	/* 1 value pushed */
23
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
14
LTEQ[ ]	/* LessThenOrEqual */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
6
GTEQ[ ]	/* GreaterThanOrEqual */
AND[ ]	/* LogicalAnd */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
52
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
40
EIF[ ]	/* EndIf */
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
2
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 3 values pushed */
11 1 6
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 3 values pushed */
12 6 6
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 3 values pushed */
20 6 6
LOOPCALL[ ]	/* LoopAndCallFunction */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 40 9
RCVT[ ]	/* ReadCVT */
GT[ ]	/* GreaterThan */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 3 values pushed */
12 8 7
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
6 1
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 2 values pushed */
36 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
GETINFO[ ]	/* GetInfo */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
6 3
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 2 values pushed */
38 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1024
GETINFO[ ]	/* GetInfo */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
6 1
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
511
SCANCTRL[ ]	/* ScanConversionControl */
PUSHB[ ]	/* 1 value pushed */
4
SCANTYPE[ ]	/* ScanType */
PUSHB[ ]	/* 2 values pushed */
5 0
WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */
0
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192
LT[ ]	/* LessThan */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
AND[ ]	/* LogicalAnd */
PUSHB[ ]	/* 1 value pushed */
4
RCVT[ ]	/* ReadCVT */
OR[ ]	/* LogicalOr */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
ROLL[ ]	/* RollTopThreeStack */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
80
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
56
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
56
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
11
RCVT[ ]	/* ReadCVT */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
40
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
11
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
48
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
48
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
10
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
54
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
54
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
2
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
3
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 2 values pushed */
5 98
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
11 1 2
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
48 5
CINDEX[ ]	/* CopyXToTopStack */
ROLL[ ]	/* RollTopThreeStack */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
ADD[ ]	/* Add */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
SUB[ ]	/* Subtract */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
EIF[ ]	/* EndIf */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
4
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 3 values pushed */
0 2 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
5
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
6
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 2 values pushed */
8 4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
0
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
48
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 5
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
9
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
9
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
9
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
10
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHW[ ]	/* 1 value pushed */
1024
MUL[ ]	/* Multiply */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
11
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
11
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
7 1
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
DEPTH[ ]	/* GetDepthStack */
PUSHB[ ]	/* 1 value pushed */
13
NEG[ ]	/* Negate */
SWAP[ ]	/* SwapTopStack */
JROT[ ]	/* JumpRelativeOnTrue */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
12
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
MPPEM[ ]	/* MeasurePixelPerEm */
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
7 1
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
DEPTH[ ]	/* GetDepthStack */
PUSHB[ ]	/* 1 value pushed */
19
NEG[ ]	/* Negate */
SWAP[ ]	/* SwapTopStack */
JROT[ ]	/* JumpRelativeOnTrue */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
13
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 12
RS[ ]	/* ReadStore */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
12 12
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
9 2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
10 2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
9
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
9
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
9
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
0 0
SZP0[ ]	/* SetZonePointer0 */
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
0
MIAP[0]	/* MoveIndirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
1 1 1
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
14
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
12
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 6 values pushed */
13 13 1 0 11 0
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
13 5
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
109
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
15
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
16
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
17
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
18
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
3 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
19
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
4 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
20
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
21
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
6 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
22
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
7 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
23
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
24
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
9 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
25
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
12
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 6 values pushed */
13 13 1 0 11 0
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
13 5
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
109
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
26
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
27
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
28
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
29
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
3 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
30
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
4 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
31
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
6 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
33
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
7 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
34
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
35
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
9 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
36
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
37
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
13
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
36
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
38
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
37
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
37
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
39
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
40
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
39
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 1 value pushed */
1
SZP2[ ]	/* SetZonePointer2 */
IUP[0]	/* InterpolateUntPts */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
41
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
39
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 1 value pushed */
1
SZP2[ ]	/* SetZonePointer2 */
IUP[0]	/* InterpolateUntPts */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
42
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
SHC[1]	/* ShiftContourByLastPt */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
43
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 5 values pushed */
0 0 0 0 0
WCVTP[ ]	/* WriteCVTInPixels */
MIAP[0]	/* MoveIndirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
42 1
SZP2[ ]	/* SetZonePointer2 */
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
44
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
45
FDEF[ ]	/* FunctionDefinition */
MDAP[0]	/* MoveDirectAbsPt */
SLOOP[ ]	/* SetLoopVariable */
ALIGNRP[ ]	/* AlignRelativePt */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
46
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 0
SZPS[ ]	/* SetZonePointerS */
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
IF[ ]	/* If */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
46 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
NEG[ ]	/* Negate */
ROLL[ ]	/* RollTopThreeStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
2 32 3 32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
2 38 3 26
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
0
EQ[ ]	/* Equal */
IF[ ]	/* If */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
IF[ ]	/* If */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
32
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
54
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
55
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
56
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
57
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
58
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
CALL[ ]	/* CallFunction */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
38
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
59
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
60
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 4
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
2 32 3 32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
2 38 3 26
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
61
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
62
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
CALL[ ]	/* CallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
38
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
63
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
44
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
64
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
44
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
65
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 1
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
PUSHB[ ]	/* 1 value pushed */
45
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
66
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
67
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
RCVT[ ]	/* ReadCVT */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
68
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
69
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
70
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
71
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
72
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
73
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
74
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
75
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
76
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
77
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
78
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
79
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
80
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
81
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
82
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
83
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
84
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
85
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
86
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
87
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
88
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
89
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
90
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
91
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
92
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
93
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
94
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
95
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
96
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
97
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
98
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
99
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
100
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
101
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
102
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
103
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
104
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
105
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
106
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
107
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
108
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
109
FDEF[ ]	/* FunctionDefinition */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
8
NEG[ ]	/* Negate */
PUSHB[ ]	/* 1 value pushed */
3
DEPTH[ ]	/* GetDepthStack */
LT[ ]	/* LessThan */
JROT[ ]	/* JumpRelativeOnTrue */
PUSHB[ ]	/* 1 value pushed */
1
SZP2[ ]	/* SetZonePointer2 */
IUP[0]	/* InterpolateUntPts */
ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    74,
    60,
    74,
    60,
    821,
    0,
    817,
    436,
    \"-2\",
    \"-202\",
    972,
    \"-250\",
    838,
    \"-14\",
    817,
    475,
    \"-11\",
    \"-233\",
    972,
    \"-250\"
)";
}
);
iconName = Bold;
id = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
metricValues = (
{
pos = 972;
},
{
pos = 821;
},
{
pos = 436;
},
{
},
{
pos = -250;
},
{
}
);
name = Bold;
},
{
axesValues = (
800
);
customParameters = (
{
name = typoAscender;
value = 972;
},
{
name = typoDescender;
value = -250;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 972;
},
{
name = winDescent;
value = 250;
},
{
name = hheaAscender;
value = 972;
},
{
name = hheaDescender;
value = -250;
},
{
name = strikeoutPosition;
value = 250;
},
{
name = strikeoutSize;
value = 50;
},
{
name = "prep Table Assembly";
value = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
200
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 1
INSTCTRL[ ]	/* SetInstrExecControl */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
2048 2048
MUL[ ]	/* Multiply */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
3
SWAP[ ]	/* SwapTopStack */
WCVTF[ ]	/* WriteCVTInFUnits */
PUSHB[ ]	/* 1 value pushed */
23
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
14
LTEQ[ ]	/* LessThenOrEqual */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
6
GTEQ[ ]	/* GreaterThanOrEqual */
AND[ ]	/* LogicalAnd */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
52
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
40
EIF[ ]	/* EndIf */
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
2
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 3 values pushed */
11 1 6
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 3 values pushed */
12 6 6
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 3 values pushed */
20 6 6
LOOPCALL[ ]	/* LoopAndCallFunction */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 40 9
RCVT[ ]	/* ReadCVT */
GT[ ]	/* GreaterThan */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 3 values pushed */
12 8 7
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
6 1
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 2 values pushed */
36 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
GETINFO[ ]	/* GetInfo */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
6 3
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 2 values pushed */
38 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1024
GETINFO[ ]	/* GetInfo */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
6 1
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
511
SCANCTRL[ ]	/* ScanConversionControl */
PUSHB[ ]	/* 1 value pushed */
4
SCANTYPE[ ]	/* ScanType */
PUSHB[ ]	/* 2 values pushed */
5 0
WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */
0
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192
LT[ ]	/* LessThan */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
AND[ ]	/* LogicalAnd */
PUSHB[ ]	/* 1 value pushed */
4
RCVT[ ]	/* ReadCVT */
OR[ ]	/* LogicalOr */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
ROLL[ ]	/* RollTopThreeStack */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
80
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
56
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
56
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
11
RCVT[ ]	/* ReadCVT */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
40
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
11
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
48
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
48
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
10
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
54
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
54
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
2
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
3
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 2 values pushed */
5 98
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
11 1 2
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
48 5
CINDEX[ ]	/* CopyXToTopStack */
ROLL[ ]	/* RollTopThreeStack */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
ADD[ ]	/* Add */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
SUB[ ]	/* Subtract */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
EIF[ ]	/* EndIf */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
4
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 3 values pushed */
0 2 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
5
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
6
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 2 values pushed */
8 4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
0
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
48
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 5
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
9
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
9
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
9
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
10
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHW[ ]	/* 1 value pushed */
1024
MUL[ ]	/* Multiply */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
11
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
11
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
7 1
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
DEPTH[ ]	/* GetDepthStack */
PUSHB[ ]	/* 1 value pushed */
13
NEG[ ]	/* Negate */
SWAP[ ]	/* SwapTopStack */
JROT[ ]	/* JumpRelativeOnTrue */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
12
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
MPPEM[ ]	/* MeasurePixelPerEm */
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
7 1
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
DEPTH[ ]	/* GetDepthStack */
PUSHB[ ]	/* 1 value pushed */
19
NEG[ ]	/* Negate */
SWAP[ ]	/* SwapTopStack */
JROT[ ]	/* JumpRelativeOnTrue */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
13
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 12
RS[ ]	/* ReadStore */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
12 12
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
9 2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
10 2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
9
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
9
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
9
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
0 0
SZP0[ ]	/* SetZonePointer0 */
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
0
MIAP[0]	/* MoveIndirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
1 1 1
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
14
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
12
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 6 values pushed */
13 13 1 0 11 0
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
13 5
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
109
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
15
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
16
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
17
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
18
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
3 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
19
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
4 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
20
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
21
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
6 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
22
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
7 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
23
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
24
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
9 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
25
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
12
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 6 values pushed */
13 13 1 0 11 0
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
13 5
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
109
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
26
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
27
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
28
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
29
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
3 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
30
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
4 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
31
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
6 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
33
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
7 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
34
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
35
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
9 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
36
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
37
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
13
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
36
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
38
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
37
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
37
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
39
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
40
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
39
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 1 value pushed */
1
SZP2[ ]	/* SetZonePointer2 */
IUP[0]	/* InterpolateUntPts */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
41
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
39
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 1 value pushed */
1
SZP2[ ]	/* SetZonePointer2 */
IUP[0]	/* InterpolateUntPts */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
42
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
SHC[1]	/* ShiftContourByLastPt */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
43
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 5 values pushed */
0 0 0 0 0
WCVTP[ ]	/* WriteCVTInPixels */
MIAP[0]	/* MoveIndirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
42 1
SZP2[ ]	/* SetZonePointer2 */
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
44
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
45
FDEF[ ]	/* FunctionDefinition */
MDAP[0]	/* MoveDirectAbsPt */
SLOOP[ ]	/* SetLoopVariable */
ALIGNRP[ ]	/* AlignRelativePt */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
46
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 0
SZPS[ ]	/* SetZonePointerS */
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
IF[ ]	/* If */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
46 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
NEG[ ]	/* Negate */
ROLL[ ]	/* RollTopThreeStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
2 32 3 32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
2 38 3 26
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
0
EQ[ ]	/* Equal */
IF[ ]	/* If */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
IF[ ]	/* If */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
32
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
54
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
55
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
56
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
57
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
58
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
CALL[ ]	/* CallFunction */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
38
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
59
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
60
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 4
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
2 32 3 32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
2 38 3 26
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
61
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
62
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
CALL[ ]	/* CallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
38
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
63
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
44
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
64
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
44
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
65
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 1
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
PUSHB[ ]	/* 1 value pushed */
45
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
66
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
67
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
RCVT[ ]	/* ReadCVT */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
68
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
69
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
70
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
71
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
72
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
73
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
74
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
75
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
76
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
77
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
78
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
79
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
80
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
81
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
82
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
83
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
84
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
85
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
86
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
87
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
88
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
89
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
90
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
91
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
92
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
93
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
94
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
95
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
96
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
97
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
98
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
99
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
100
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
101
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
102
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
103
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
104
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
105
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
106
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
107
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
108
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
109
FDEF[ ]	/* FunctionDefinition */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
8
NEG[ ]	/* Negate */
PUSHB[ ]	/* 1 value pushed */
3
DEPTH[ ]	/* GetDepthStack */
LT[ ]	/* LessThan */
JROT[ ]	/* JumpRelativeOnTrue */
PUSHB[ ]	/* 1 value pushed */
1
SZP2[ ]	/* SetZonePointer2 */
IUP[0]	/* InterpolateUntPts */
ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    95,
    78,
    95,
    78,
    821,
    0,
    817,
    436,
    \"-2\",
    \"-202\",
    972,
    \"-250\",
    838,
    \"-14\",
    817,
    475,
    \"-11\",
    \"-240\",
    972,
    \"-250\"
)";
}
);
id = m01;
metricValues = (
{
pos = 972;
},
{
pos = 821;
},
{
pos = 436;
},
{
},
{
pos = -250;
},
{
}
);
name = ExtraBold;
}
);
glyphs = (
{
glyphname = A;
kernLeft = Aacute;
kernRight = Aacute;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(404,816,o),
(380,838,o),
(359,838,qs),
(333,838,o),
(312,815,o),
(305,792,qs),
(295,760,o),
(266,655,o),
(232,529,o),
(194,391,o),
(156,259,o),
(121,142,o),
(107,101,qs),
(100,81,o),
(76,65,o),
(58,63,qs),
(56,63,o),
(39,61,o),
(19,59,o),
(3,57,o),
(1,57,qs),
(-9,57,o),
(-28,43,o),
(-28,30,qs),
(-28,16,o),
(-14,0,o),
(-5,0,qs),
(273,0,ls),
(293,0,o),
(307,18,o),
(307,29,qs),
(307,47,o),
(290,61,o),
(274,61,qs),
(239,61,o),
(202,69,o),
(202,77,qs),
(202,85,o),
(208,117,o),
(218,156,o),
(231,197,o),
(238,214,q),
(470,214,l),
(473,203,o),
(489,150,o),
(505,92,o),
(517,42,o),
(517,35,qs),
(517,14,o),
(500,-1,o),
(481,-8,o),
(464,-17,o),
(464,-33,qs),
(464,-41,o),
(477,-55,o),
(495,-55,qs),
(742,-55,ls),
(759,-55,o),
(777,-43,o),
(777,-25,qs),
(777,-8,o),
(747,3,o),
(733,3,qs),
(697,3,o),
(652,6,o),
(626,14,o),
(615,26,o),
(613,35,qs),
(410,793,ls)
);
},
{
closed = 1;
nodes = (
(393,541,o),
(416,440,o),
(441,342,o),
(453,298,q),
(444,298,o),
(419,297,o),
(392,296,o),
(367,296,o),
(358,296,qs),
(343,296,o),
(320,296,o),
(300,297,o),
(277,298,o),
(262,298,q),
(273,338,o),
(301,451,o),
(330,565,o),
(355,664,o),
(362,691,q),
(371,643,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
69 1 8 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 7 8 7 106 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 6 5 2 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
168 44 19 36 52 39 28 52 51 9 24
CALL[ ]	/* CallFunction */";
};
width = 710;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(382,837,o),
(353,837,qs),
(335,837,o),
(319,824,o),
(317,816,qs),
(307,783,o),
(276,673,o),
(240,540,o),
(199,393,o),
(160,253,o),
(123,131,o),
(108,89,qs),
(102,71,o),
(80,53,o),
(59,51,qs),
(56,51,o),
(39,49,o),
(17,47,o),
(-5,45,o),
(-12,45,qs),
(-22,45,o),
(-37,34,o),
(-37,24,qs),
(-37,13,o),
(-23,0,o),
(-14,0,qs),
(253,0,ls),
(273,0,o),
(287,15,o),
(287,24,qs),
(287,39,o),
(268,49,o),
(258,49,qs),
(247,49,o),
(220,49,o),
(197,52,o),
(182,59,o),
(182,65,qs),
(182,74,o),
(190,111,o),
(203,156,o),
(218,203,o),
(225,223,q),
(473,223,l),
(475,215,o),
(485,181,o),
(497,139,o),
(509,92,o),
(519,51,o),
(526,20,o),
(526,15,qs),
(526,-4,o),
(504,-18,o),
(477,-23,o),
(455,-28,o),
(455,-39,qs),
(455,-47,o),
(468,-55,o),
(486,-55,qs),
(719,-55,ls),
(736,-55,o),
(754,-45,o),
(754,-31,qs),
(754,-17,o),
(727,-9,o),
(713,-9,qs),
(665,-9,o),
(606,0,o),
(600,23,qs),
(388,816,ls)
);
},
{
closed = 1;
nodes = (
(393,553,o),
(420,441,o),
(446,335,o),
(458,289,q),
(435,288,o),
(386,288,o),
(363,288,qs),
(332,288,o),
(275,288,o),
(244,289,q),
(251,317,o),
(271,392,o),
(292,474,o),
(315,558,o),
(335,634,o),
(351,696,o),
(356,715,q),
(367,664,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
70 1 8 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 7 8 7 106 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 6 5 2 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
105 44 19 36 52 56 30 52 34 9 24
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(362,827,o),
(350,835,o),
(345,835,qs),
(337,835,o),
(326,824,o),
(324,816,qs),
(314,782,o),
(283,669,o),
(245,532,o),
(204,381,o),
(164,237,o),
(125,112,o),
(110,69,qs),
(103,51,o),
(83,33,o),
(61,31,qs),
(57,31,o),
(36,29,o),
(9,27,o),
(-20,25,o),
(-30,25,qs),
(-50,25,o),
(-50,14,qs),
(-50,6,o),
(-36,0,o),
(-27,0,qs),
(225,0,ls),
(245,0,o),
(259,10,o),
(259,15,qs),
(259,26,o),
(235,29,o),
(225,29,qs),
(214,29,o),
(189,29,o),
(168,32,o),
(154,38,o),
(154,45,qs),
(154,56,o),
(165,101,o),
(181,156,o),
(199,214,o),
(206,238,q),
(477,238,l),
(479,229,o),
(490,189,o),
(504,140,o),
(518,85,o),
(530,37,o),
(538,1,o),
(538,-5,qs),
(538,-17,o),
(508,-25,o),
(472,-27,o),
(442,-32,o),
(442,-41,qs),
(442,-49,o),
(455,-55,o),
(473,-55,qs),
(686,-55,ls),
(721,-55,o),
(721,-41,qs),
(721,-32,o),
(699,-29,o),
(685,-29,qs),
(637,-29,o),
(587,-17,o),
(582,3,qs),
(365,816,ls)
);
},
{
closed = 1;
nodes = (
(390,573,o),
(423,445,o),
(453,323,o),
(465,274,q),
(434,273,o),
(371,272,o),
(340,272,qs),
(309,272,o),
(249,273,o),
(218,274,q),
(225,304,o),
(246,388,o),
(271,481,o),
(297,578,o),
(321,664,o),
(339,735,o),
(343,755,q),
(358,700,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
69 1 9 8 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 9 0 3 4 9 3 90 2 1 0 0 1 0 1 87 0 8 8 20 67 7 6 2 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 8 9 8 106 0 9 0 3 4 9 3 90 2 1 0 0 1 0 1 87 7 6 2 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
82 76 44 18 51 52 56 25 20 51 34 10 24
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = A;
unicode = 65;
},
{
glyphname = Aacute;
kernLeft = Aacute;
kernRight = Aacute;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(428,972,o),
(408,972,qs),
(394,972,o),
(355,949,o),
(319,916,o),
(294,882,o),
(294,872,qs),
(294,860,o),
(314,841,o),
(329,841,qs),
(342,841,o),
(382,860,o),
(421,888,o),
(449,921,o),
(449,936,qs),
(449,949,o)
);
},
{
closed = 1;
nodes = (
(404,816,o),
(380,838,o),
(359,838,qs),
(333,838,o),
(312,815,o),
(305,792,qs),
(295,760,o),
(266,655,o),
(232,529,o),
(194,391,o),
(156,259,o),
(121,142,o),
(107,101,qs),
(100,81,o),
(76,65,o),
(58,63,qs),
(56,63,o),
(39,61,o),
(19,59,o),
(3,57,o),
(1,57,qs),
(-9,57,o),
(-28,43,o),
(-28,30,qs),
(-28,16,o),
(-14,0,o),
(-5,0,qs),
(273,0,ls),
(293,0,o),
(307,18,o),
(307,29,qs),
(307,47,o),
(290,61,o),
(274,61,qs),
(239,61,o),
(202,69,o),
(202,77,qs),
(202,85,o),
(208,117,o),
(218,156,o),
(231,197,o),
(238,214,q),
(470,214,l),
(473,203,o),
(489,150,o),
(505,92,o),
(517,42,o),
(517,35,qs),
(517,14,o),
(500,-1,o),
(481,-8,o),
(464,-17,o),
(464,-33,qs),
(464,-41,o),
(477,-55,o),
(495,-55,qs),
(742,-55,ls),
(759,-55,o),
(777,-43,o),
(777,-25,qs),
(777,-8,o),
(747,3,o),
(733,3,qs),
(697,3,o),
(652,6,o),
(626,14,o),
(615,26,o),
(613,35,qs),
(410,793,ls)
);
},
{
closed = 1;
nodes = (
(393,541,o),
(416,440,o),
(441,342,o),
(453,298,q),
(444,298,o),
(419,297,o),
(392,296,o),
(367,296,o),
(358,296,qs),
(343,296,o),
(320,296,o),
(300,297,o),
(277,298,o),
(262,298,q),
(273,338,o),
(301,451,o),
(330,565,o),
(355,664,o),
(362,691,q),
(371,643,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
85 1 10 9 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 1 106 0 0 9 0 106 0 10 0 4 5 10 4 90 0 2 0 3 2 3 87 0 9 9 20 67 8 7 2 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 1 106 0 0 9 0 106 0 9 10 9 106 0 10 0 4 5 10 4 90 0 2 0 3 2 3 87 8 7 2 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
100 90 82 80 19 36 52 39 28 52 53 38 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 710;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(412,972,o),
(397,972,qs),
(386,972,o),
(350,950,o),
(316,919,o),
(291,887,o),
(291,877,qs),
(291,867,o),
(304,854,o),
(315,854,qs),
(325,854,o),
(364,872,o),
(401,899,o),
(429,929,o),
(429,941,qs),
(429,955,o)
);
},
{
closed = 1;
nodes = (
(382,837,o),
(353,837,qs),
(335,837,o),
(319,824,o),
(317,816,qs),
(307,783,o),
(276,673,o),
(240,540,o),
(199,393,o),
(160,253,o),
(123,131,o),
(108,89,qs),
(102,71,o),
(80,53,o),
(59,51,qs),
(56,51,o),
(39,49,o),
(17,47,o),
(-5,45,o),
(-12,45,qs),
(-22,45,o),
(-37,34,o),
(-37,24,qs),
(-37,13,o),
(-23,0,o),
(-14,0,qs),
(253,0,ls),
(273,0,o),
(287,15,o),
(287,24,qs),
(287,39,o),
(268,49,o),
(258,49,qs),
(247,49,o),
(220,49,o),
(197,52,o),
(182,59,o),
(182,65,qs),
(182,74,o),
(190,111,o),
(203,156,o),
(218,203,o),
(225,223,q),
(473,223,l),
(475,215,o),
(485,181,o),
(497,139,o),
(509,92,o),
(519,51,o),
(526,20,o),
(526,15,qs),
(526,-4,o),
(504,-18,o),
(477,-23,o),
(455,-28,o),
(455,-39,qs),
(455,-47,o),
(468,-55,o),
(486,-55,qs),
(719,-55,ls),
(736,-55,o),
(754,-45,o),
(754,-31,qs),
(754,-17,o),
(727,-9,o),
(713,-9,qs),
(665,-9,o),
(606,0,o),
(600,23,qs),
(388,816,ls)
);
},
{
closed = 1;
nodes = (
(393,553,o),
(420,441,o),
(446,335,o),
(458,289,q),
(435,288,o),
(386,288,o),
(363,288,qs),
(332,288,o),
(275,288,o),
(244,289,q),
(251,317,o),
(271,392,o),
(292,474,o),
(315,558,o),
(335,634,o),
(351,696,o),
(356,715,q),
(367,664,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
86 1 10 9 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 1 106 0 0 9 0 106 0 10 0 4 5 10 4 90 0 2 0 3 2 3 87 0 9 9 20 67 8 7 2 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 1 106 0 0 9 0 106 0 9 10 9 106 0 10 0 4 5 10 4 90 0 2 0 3 2 3 87 8 7 2 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
99 93 84 82 19 36 52 56 30 52 36 38 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(390,972,o),
(382,972,qs),
(375,972,o),
(343,952,o),
(311,925,o),
(287,895,o),
(287,886,qs),
(287,875,o),
(295,875,qs),
(302,875,o),
(337,893,o),
(373,917,o),
(401,942,o),
(401,950,qs),
(401,964,o)
);
},
{
closed = 1;
nodes = (
(362,827,o),
(350,835,o),
(345,835,qs),
(337,835,o),
(326,824,o),
(324,816,qs),
(314,782,o),
(283,669,o),
(245,532,o),
(204,381,o),
(164,237,o),
(125,112,o),
(110,69,qs),
(103,51,o),
(83,33,o),
(61,31,qs),
(57,31,o),
(36,29,o),
(9,27,o),
(-20,25,o),
(-30,25,qs),
(-50,25,o),
(-50,14,qs),
(-50,6,o),
(-36,0,o),
(-27,0,qs),
(225,0,ls),
(245,0,o),
(259,10,o),
(259,15,qs),
(259,26,o),
(235,29,o),
(225,29,qs),
(214,29,o),
(189,29,o),
(168,32,o),
(154,38,o),
(154,45,qs),
(154,56,o),
(165,101,o),
(181,156,o),
(199,214,o),
(206,238,q),
(477,238,l),
(479,229,o),
(490,189,o),
(504,140,o),
(518,85,o),
(530,37,o),
(538,1,o),
(538,-5,qs),
(538,-17,o),
(508,-25,o),
(472,-27,o),
(442,-32,o),
(442,-41,qs),
(442,-49,o),
(455,-55,o),
(473,-55,qs),
(686,-55,ls),
(721,-55,o),
(721,-41,qs),
(721,-32,o),
(699,-29,o),
(685,-29,qs),
(637,-29,o),
(587,-17,o),
(582,3,qs),
(365,816,ls)
);
},
{
closed = 1;
nodes = (
(390,573,o),
(423,445,o),
(453,323,o),
(465,274,q),
(434,273,o),
(371,272,o),
(340,272,qs),
(309,272,o),
(249,273,o),
(218,274,q),
(225,304,o),
(246,388,o),
(271,481,o),
(297,578,o),
(321,664,o),
(339,735,o),
(343,755,q),
(358,700,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
84 1 11 10 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 0 10 0 106 0 11 0 5 6 11 5 90 4 1 2 0 3 2 3 87 0 10 10 20 67 9 8 2 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 0 10 0 106 0 10 11 10 106 0 11 0 5 6 11 5 90 4 1 2 0 3 2 3 87 9 8 2 6 6 7 83 0 7 7 13 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
97 91 81 79 67 66 51 52 56 25 20 51 36 37 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = Aacute;
unicode = 193;
},
{
glyphname = Abreve;
kernLeft = Aacute;
kernRight = Aacute;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(404,816,o),
(380,838,o),
(359,838,qs),
(333,838,o),
(312,815,o),
(305,792,qs),
(295,760,o),
(266,655,o),
(232,529,o),
(194,391,o),
(156,259,o),
(121,142,o),
(107,101,qs),
(100,81,o),
(76,65,o),
(58,63,qs),
(56,63,o),
(39,61,o),
(19,59,o),
(3,57,o),
(1,57,qs),
(-9,57,o),
(-28,43,o),
(-28,30,qs),
(-28,16,o),
(-14,0,o),
(-5,0,qs),
(273,0,ls),
(293,0,o),
(307,18,o),
(307,29,qs),
(307,47,o),
(290,61,o),
(274,61,qs),
(239,61,o),
(202,69,o),
(202,77,qs),
(202,85,o),
(208,117,o),
(218,156,o),
(231,197,o),
(238,214,q),
(470,214,l),
(473,203,o),
(489,150,o),
(505,92,o),
(517,42,o),
(517,35,qs),
(517,14,o),
(500,-1,o),
(481,-8,o),
(464,-17,o),
(464,-33,qs),
(464,-41,o),
(477,-55,o),
(495,-55,qs),
(742,-55,ls),
(759,-55,o),
(777,-43,o),
(777,-25,qs),
(777,-8,o),
(747,3,o),
(733,3,qs),
(697,3,o),
(652,6,o),
(626,14,o),
(615,26,o),
(613,35,qs),
(410,793,ls)
);
},
{
closed = 1;
nodes = (
(393,541,o),
(416,440,o),
(441,342,o),
(453,298,q),
(444,298,o),
(419,297,o),
(392,296,o),
(367,296,o),
(358,296,qs),
(343,296,o),
(320,296,o),
(300,297,o),
(277,298,o),
(262,298,q),
(273,338,o),
(301,451,o),
(330,565,o),
(355,664,o),
(362,691,q),
(371,643,o)
);
},
{
closed = 1;
nodes = (
(472,971,o),
(457,971,qs),
(444,971,o),
(425,953,o),
(425,942,qs),
(425,934,o),
(398,919,o),
(369,919,qs),
(360,919,o),
(339,921,o),
(321,927,o),
(310,936,o),
(310,942,qs),
(310,959,o),
(291,971,o),
(274,971,qs),
(257,971,o),
(242,954,o),
(242,941,qs),
(242,909,o),
(309,862,o),
(374,862,qs),
(393,862,o),
(436,872,o),
(472,892,o),
(495,921,o),
(495,941,qs),
(495,961,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
69 1 8 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
12 1 10 11 10 106 0 11 0 9 7 11 9 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
12 1 10 11 10 106 0 7 9 8 9 7 8 104 0 11 0 9 7 11 9 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 6 5 2 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
115 113 109 107 101 99 95 93 168 44 19 36 52 39 28 52 51 13 24
CALL[ ]	/* CallFunction */";
};
width = 710;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
ref = .ttfautohint;
},
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (246,355);
ref = breve;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
71 1 8 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
12 1 10 11 10 106 0 11 0 9 7 11 9 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
12 1 10 11 10 106 0 7 9 8 9 7 8 104 0 11 0 9 7 11 9 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 6 5 2 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
114 112 108 106 100 98 95 93 105 44 19 36 52 56 30 52 35 13 35
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(447,972,o),
(439,972,qs),
(422,972,o),
(422,949,qs),
(422,939,o),
(409,921,o),
(387,908,o),
(360,900,o),
(347,900,qs),
(333,900,o),
(306,904,o),
(285,914,o),
(273,934,o),
(273,949,qs),
(273,961,o),
(267,972,o),
(256,972,qs),
(239,972,o),
(239,948,qs),
(239,918,o),
(302,875,o),
(347,875,qs),
(366,875,o),
(406,884,o),
(438,902,o),
(458,930,o),
(458,948,qs),
(458,964,o)
);
},
{
closed = 1;
nodes = (
(362,827,o),
(350,835,o),
(345,835,qs),
(337,835,o),
(326,824,o),
(324,816,qs),
(314,782,o),
(283,669,o),
(245,532,o),
(204,381,o),
(164,237,o),
(125,112,o),
(110,69,qs),
(103,51,o),
(83,33,o),
(61,31,qs),
(57,31,o),
(36,29,o),
(9,27,o),
(-20,25,o),
(-30,25,qs),
(-50,25,o),
(-50,14,qs),
(-50,6,o),
(-36,0,o),
(-27,0,qs),
(225,0,ls),
(245,0,o),
(259,10,o),
(259,15,qs),
(259,26,o),
(235,29,o),
(225,29,qs),
(214,29,o),
(189,29,o),
(168,32,o),
(154,38,o),
(154,45,qs),
(154,56,o),
(165,101,o),
(181,156,o),
(199,214,o),
(206,238,q),
(477,238,l),
(479,229,o),
(490,189,o),
(504,140,o),
(518,85,o),
(530,37,o),
(538,1,o),
(538,-5,qs),
(538,-17,o),
(508,-25,o),
(472,-27,o),
(442,-32,o),
(442,-41,qs),
(442,-49,o),
(455,-55,o),
(473,-55,qs),
(686,-55,ls),
(721,-55,o),
(721,-41,qs),
(721,-32,o),
(699,-29,o),
(685,-29,qs),
(637,-29,o),
(587,-17,o),
(582,3,qs),
(365,816,ls)
);
},
{
closed = 1;
nodes = (
(390,573,o),
(423,445,o),
(453,323,o),
(465,274,q),
(434,273,o),
(371,272,o),
(340,272,qs),
(309,272,o),
(249,273,o),
(218,274,q),
(225,304,o),
(246,388,o),
(271,481,o),
(297,578,o),
(321,664,o),
(339,735,o),
(343,755,q),
(358,700,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
97 1 13 12 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
3 1 1 2 1 106 0 2 0 0 12 2 0 91 0 13 0 7 8 13 7 90 6 1 4 0 5 4 5 87 0 12 12 20 67 11 10 2 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
3 1 1 2 1 106 0 12 0 13 0 12 13 104 0 2 0 0 12 2 0 91 0 13 0 7 8 13 7 90 6 1 4 0 5 4 5 87 11 10 2 8 8 9 83 0 9 9 13 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
110 104 94 92 80 79 77 74 71 68 56 25 20 51 36 37 38 35 36 14 24
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = Abreve;
unicode = 258;
},
{
glyphname = Acircumflex;
kernLeft = Aacute;
kernRight = Aacute;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(501,845,o),
(501,852,qs),
(501,868,o),
(466,910,o),
(420,947,o),
(377,972,o),
(368,972,qs),
(361,972,o),
(318,947,o),
(272,910,o),
(236,865,o),
(236,846,qs),
(236,841,o),
(242,832,o),
(249,832,qs),
(260,832,o),
(328,858,o),
(368,880,q),
(408,858,o),
(477,832,o),
(488,832,qs),
(496,832,o)
);
},
{
closed = 1;
nodes = (
(404,816,o),
(380,838,o),
(359,838,qs),
(333,838,o),
(312,815,o),
(305,792,qs),
(295,760,o),
(266,655,o),
(232,529,o),
(194,391,o),
(156,259,o),
(121,142,o),
(107,101,qs),
(100,81,o),
(76,65,o),
(58,63,qs),
(56,63,o),
(39,61,o),
(19,59,o),
(3,57,o),
(1,57,qs),
(-9,57,o),
(-28,43,o),
(-28,30,qs),
(-28,16,o),
(-14,0,o),
(-5,0,qs),
(273,0,ls),
(293,0,o),
(307,18,o),
(307,29,qs),
(307,47,o),
(290,61,o),
(274,61,qs),
(239,61,o),
(202,69,o),
(202,77,qs),
(202,85,o),
(208,117,o),
(218,156,o),
(231,197,o),
(238,214,q),
(470,214,l),
(473,203,o),
(489,150,o),
(505,92,o),
(517,42,o),
(517,35,qs),
(517,14,o),
(500,-1,o),
(481,-8,o),
(464,-17,o),
(464,-33,qs),
(464,-41,o),
(477,-55,o),
(495,-55,qs),
(742,-55,ls),
(759,-55,o),
(777,-43,o),
(777,-25,qs),
(777,-8,o),
(747,3,o),
(733,3,qs),
(697,3,o),
(652,6,o),
(626,14,o),
(615,26,o),
(613,35,qs),
(410,793,ls)
);
},
{
closed = 1;
nodes = (
(393,541,o),
(416,440,o),
(441,342,o),
(453,298,q),
(444,298,o),
(419,297,o),
(392,296,o),
(367,296,o),
(358,296,qs),
(343,296,o),
(320,296,o),
(300,297,o),
(277,298,o),
(262,298,q),
(273,338,o),
(301,451,o),
(330,565,o),
(355,664,o),
(362,691,q),
(371,643,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
3 1 10 2 91 1 11 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 2 10 2 106 1 12 2 0 10 11 10 0 11 104 0 11 0 5 6 11 5 90 0 3 0 4 3 4 87 0 10 10 20 67 9 8 2 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 2 10 2 106 0 10 0 10 106 1 12 2 0 11 0 106 0 11 0 5 6 11 5 90 0 3 0 4 3 4 87 9 8 2 6 6 7 83 0 7 7 13 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 106 96 88 86 74 73 70 68 64 61 57 55 48 47 35 32 28 25 15 13 7 5 0 21 1 21 13 15
CALL[ ]	/* CallFunction */";
};
width = 710;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(489,858,o),
(489,865,qs),
(489,878,o),
(455,915,o),
(410,949,o),
(367,972,o),
(358,972,qs),
(350,972,o),
(308,949,o),
(263,915,o),
(228,877,o),
(228,861,qs),
(228,848,o),
(239,848,qs),
(244,848,o),
(270,856,o),
(303,870,o),
(341,888,o),
(358,898,q),
(375,888,o),
(413,870,o),
(447,856,o),
(473,848,o),
(478,848,qs),
(484,848,o)
);
},
{
closed = 1;
nodes = (
(382,837,o),
(353,837,qs),
(335,837,o),
(319,824,o),
(317,816,qs),
(307,783,o),
(276,673,o),
(240,540,o),
(199,393,o),
(160,253,o),
(123,131,o),
(108,89,qs),
(102,71,o),
(80,53,o),
(59,51,qs),
(56,51,o),
(39,49,o),
(17,47,o),
(-5,45,o),
(-12,45,qs),
(-22,45,o),
(-37,34,o),
(-37,24,qs),
(-37,13,o),
(-23,0,o),
(-14,0,qs),
(253,0,ls),
(273,0,o),
(287,15,o),
(287,24,qs),
(287,39,o),
(268,49,o),
(258,49,qs),
(247,49,o),
(220,49,o),
(197,52,o),
(182,59,o),
(182,65,qs),
(182,74,o),
(190,111,o),
(203,156,o),
(218,203,o),
(225,223,q),
(473,223,l),
(475,215,o),
(485,181,o),
(497,139,o),
(509,92,o),
(519,51,o),
(526,20,o),
(526,15,qs),
(526,-4,o),
(504,-18,o),
(477,-23,o),
(455,-28,o),
(455,-39,qs),
(455,-47,o),
(468,-55,o),
(486,-55,qs),
(719,-55,ls),
(736,-55,o),
(754,-45,o),
(754,-31,qs),
(754,-17,o),
(727,-9,o),
(713,-9,qs),
(665,-9,o),
(606,0,o),
(600,23,qs),
(388,816,ls)
);
},
{
closed = 1;
nodes = (
(393,553,o),
(420,441,o),
(446,335,o),
(458,289,q),
(435,288,o),
(386,288,o),
(363,288,qs),
(332,288,o),
(275,288,o),
(244,289,q),
(251,317,o),
(271,392,o),
(292,474,o),
(315,558,o),
(335,634,o),
(351,696,o),
(356,715,q),
(367,664,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
5 1 0 2 95 1 11 10 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 0 2 106 1 12 2 0 10 0 106 0 11 0 5 6 11 5 90 0 3 0 4 3 4 87 0 10 10 20 67 9 8 2 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 2 0 2 106 1 12 2 0 10 0 106 0 10 11 10 106 0 11 0 5 6 11 5 90 0 3 0 4 3 4 87 9 8 2 6 6 7 83 0 7 7 13 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 108 102 93 91 79 78 75 73 69 66 62 59 51 50 36 33 29 27 18 16 11 9 0 24 1 24 13 15
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(472,886,qs),
(472,895,o),
(439,925,o),
(396,952,o),
(353,972,o),
(344,972,qs),
(335,972,o),
(294,952,o),
(250,925,o),
(217,895,o),
(217,886,qs),
(217,875,o),
(225,875,qs),
(230,875,o),
(259,885,o),
(294,901,o),
(330,919,o),
(344,928,q),
(357,919,o),
(394,901,o),
(430,885,o),
(459,875,o),
(464,875,qs),
(472,875,o)
);
},
{
closed = 1;
nodes = (
(362,827,o),
(350,835,o),
(345,835,qs),
(337,835,o),
(326,824,o),
(324,816,qs),
(314,782,o),
(283,669,o),
(245,532,o),
(204,381,o),
(164,237,o),
(125,112,o),
(110,69,qs),
(103,51,o),
(83,33,o),
(61,31,qs),
(57,31,o),
(36,29,o),
(9,27,o),
(-20,25,o),
(-30,25,qs),
(-50,25,o),
(-50,14,qs),
(-50,6,o),
(-36,0,o),
(-27,0,qs),
(225,0,ls),
(245,0,o),
(259,10,o),
(259,15,qs),
(259,26,o),
(235,29,o),
(225,29,qs),
(214,29,o),
(189,29,o),
(168,32,o),
(154,38,o),
(154,45,qs),
(154,56,o),
(165,101,o),
(181,156,o),
(199,214,o),
(206,238,q),
(477,238,l),
(479,229,o),
(490,189,o),
(504,140,o),
(518,85,o),
(530,37,o),
(538,1,o),
(538,-5,qs),
(538,-17,o),
(508,-25,o),
(472,-27,o),
(442,-32,o),
(442,-41,qs),
(442,-49,o),
(455,-55,o),
(473,-55,qs),
(686,-55,ls),
(721,-55,o),
(721,-41,qs),
(721,-32,o),
(699,-29,o),
(685,-29,qs),
(637,-29,o),
(587,-17,o),
(582,3,qs),
(365,816,ls)
);
},
{
closed = 1;
nodes = (
(390,573,o),
(423,445,o),
(453,323,o),
(465,274,q),
(434,273,o),
(371,272,o),
(340,272,qs),
(309,272,o),
(249,273,o),
(218,274,q),
(225,304,o),
(246,388,o),
(271,481,o),
(297,578,o),
(321,664,o),
(339,735,o),
(343,755,q),
(358,700,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
5 1 0 2 93 1 12 11 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 2 0 2 106 1 13 2 0 11 0 106 0 12 0 6 7 12 6 90 5 1 3 0 4 3 4 87 0 11 11 20 67 10 9 2 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 2 0 2 106 1 13 2 0 11 0 106 0 11 12 11 106 0 12 0 6 7 12 6 90 5 1 3 0 4 3 4 87 10 9 2 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
1 0 106 100 90 88 76 75 73 70 67 64 60 57 49 48 39 38 34 31 28 26 18 16 11 9 0 23 1 23 14 15
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = Acircumflex;
unicode = 194;
},
{
glyphname = Adieresis;
kernLeft = Aacute;
kernRight = Aacute;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(231,841,o),
(256,841,qs),
(267,841,o),
(291,847,o),
(310,863,o),
(323,890,o),
(323,911,qs),
(323,938,o),
(287,972,o),
(263,972,qs),
(245,972,o),
(220,958,o),
(204,938,o),
(197,915,o),
(197,907,qs),
(197,878,o)
);
},
{
closed = 1;
nodes = (
(438,830,o),
(463,830,qs),
(474,830,o),
(498,836,o),
(517,852,o),
(530,879,o),
(530,900,qs),
(530,928,o),
(494,961,o),
(470,961,qs),
(452,961,o),
(427,947,o),
(411,927,o),
(404,904,o),
(404,896,qs),
(404,867,o)
);
},
{
closed = 1;
nodes = (
(404,816,o),
(380,838,o),
(359,838,qs),
(333,838,o),
(312,815,o),
(305,792,qs),
(295,760,o),
(266,655,o),
(232,529,o),
(194,391,o),
(156,259,o),
(121,142,o),
(107,101,qs),
(100,81,o),
(76,65,o),
(58,63,qs),
(56,63,o),
(39,61,o),
(19,59,o),
(3,57,o),
(1,57,qs),
(-9,57,o),
(-28,43,o),
(-28,30,qs),
(-28,16,o),
(-14,0,o),
(-5,0,qs),
(273,0,ls),
(293,0,o),
(307,18,o),
(307,29,qs),
(307,47,o),
(290,61,o),
(274,61,qs),
(239,61,o),
(202,69,o),
(202,77,qs),
(202,85,o),
(208,117,o),
(218,156,o),
(231,197,o),
(238,214,q),
(470,214,l),
(473,203,o),
(489,150,o),
(505,92,o),
(517,42,o),
(517,35,qs),
(517,14,o),
(500,-1,o),
(481,-8,o),
(464,-17,o),
(464,-33,qs),
(464,-41,o),
(477,-55,o),
(495,-55,qs),
(742,-55,ls),
(759,-55,o),
(777,-43,o),
(777,-25,qs),
(777,-8,o),
(747,3,o),
(733,3,qs),
(697,3,o),
(652,6,o),
(626,14,o),
(615,26,o),
(613,35,qs),
(410,793,ls)
);
},
{
closed = 1;
nodes = (
(393,541,o),
(416,440,o),
(441,342,o),
(453,298,q),
(444,298,o),
(419,297,o),
(392,296,o),
(367,296,o),
(358,296,qs),
(343,296,o),
(320,296,o),
(300,297,o),
(277,298,o),
(262,298,q),
(273,338,o),
(301,451,o),
(330,565,o),
(355,664,o),
(362,691,q),
(371,643,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
101 1 12 11 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
101 1 12 3 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
2 1 0 3 1 1 11 0 1 91 0 12 0 6 7 12 6 90 0 4 0 5 4 5 87 0 11 11 20 67 10 9 2 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 0 0 1 11 0 1 91 0 2 0 3 12 2 3 91 0 12 0 6 7 12 6 90 0 4 0 5 4 5 87 0 11 11 20 67 10 9 2 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 11 1 3 1 11 3 104 0 0 0 1 11 0 1 91 0 2 0 3 12 2 3 91 0 12 0 6 7 12 6 90 0 4 0 5 4 5 87 10 9 2 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
116 106 98 96 84 83 80 78 52 39 28 52 53 38 38 38 36 13 24
CALL[ ]	/* CallFunction */";
};
width = 710;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(229,859,o),
(249,859,qs),
(268,859,o),
(305,884,o),
(305,920,qs),
(305,943,o),
(276,972,o),
(256,972,qs),
(241,972,o),
(220,960,o),
(206,942,o),
(200,923,o),
(200,916,qs),
(200,891,o)
);
},
{
closed = 1;
nodes = (
(436,847,o),
(456,847,qs),
(475,847,o),
(512,872,o),
(512,908,qs),
(512,931,o),
(483,960,o),
(463,960,qs),
(448,960,o),
(427,948,o),
(413,930,o),
(407,911,o),
(407,904,qs),
(407,879,o)
);
},
{
closed = 1;
nodes = (
(382,837,o),
(353,837,qs),
(335,837,o),
(319,824,o),
(317,816,qs),
(307,783,o),
(276,673,o),
(240,540,o),
(199,393,o),
(160,253,o),
(123,131,o),
(108,89,qs),
(102,71,o),
(80,53,o),
(59,51,qs),
(56,51,o),
(39,49,o),
(17,47,o),
(-5,45,o),
(-12,45,qs),
(-22,45,o),
(-37,34,o),
(-37,24,qs),
(-37,13,o),
(-23,0,o),
(-14,0,qs),
(253,0,ls),
(273,0,o),
(287,15,o),
(287,24,qs),
(287,39,o),
(268,49,o),
(258,49,qs),
(247,49,o),
(220,49,o),
(197,52,o),
(182,59,o),
(182,65,qs),
(182,74,o),
(190,111,o),
(203,156,o),
(218,203,o),
(225,223,q),
(473,223,l),
(475,215,o),
(485,181,o),
(497,139,o),
(509,92,o),
(519,51,o),
(526,20,o),
(526,15,qs),
(526,-4,o),
(504,-18,o),
(477,-23,o),
(455,-28,o),
(455,-39,qs),
(455,-47,o),
(468,-55,o),
(486,-55,qs),
(719,-55,ls),
(736,-55,o),
(754,-45,o),
(754,-31,qs),
(754,-17,o),
(727,-9,o),
(713,-9,qs),
(665,-9,o),
(606,0,o),
(600,23,qs),
(388,816,ls)
);
},
{
closed = 1;
nodes = (
(393,553,o),
(420,441,o),
(446,335,o),
(458,289,q),
(435,288,o),
(386,288,o),
(363,288,qs),
(332,288,o),
(275,288,o),
(244,289,q),
(251,317,o),
(271,392,o),
(292,474,o),
(315,558,o),
(335,634,o),
(351,696,o),
(356,715,q),
(367,664,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
98 1 12 11 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 11 2 3 91 0 12 0 6 7 12 6 90 0 4 0 5 4 5 87 0 11 11 20 67 10 9 2 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 11 3 12 3 11 12 104 0 0 0 1 3 0 1 91 0 2 0 3 11 2 3 91 0 12 0 6 7 12 6 90 0 4 0 5 4 5 87 10 9 2 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
111 105 96 94 82 81 78 76 52 56 30 52 36 36 38 36 36 13 24
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(225,889,o),
(239,889,qs),
(253,889,o),
(280,908,o),
(280,935,qs),
(280,952,o),
(260,972,o),
(246,972,qs),
(235,972,o),
(220,963,o),
(210,950,o),
(205,936,o),
(205,931,qs),
(205,913,o)
);
},
{
closed = 1;
nodes = (
(432,875,o),
(446,875,qs),
(460,875,o),
(487,894,o),
(487,921,qs),
(487,938,o),
(467,958,o),
(453,958,qs),
(442,958,o),
(427,949,o),
(417,936,o),
(412,922,o),
(412,917,qs),
(412,899,o)
);
},
{
closed = 1;
nodes = (
(362,827,o),
(350,835,o),
(345,835,qs),
(337,835,o),
(326,824,o),
(324,816,qs),
(314,782,o),
(283,669,o),
(245,532,o),
(204,381,o),
(164,237,o),
(125,112,o),
(110,69,qs),
(103,51,o),
(83,33,o),
(61,31,qs),
(57,31,o),
(36,29,o),
(9,27,o),
(-20,25,o),
(-30,25,qs),
(-50,25,o),
(-50,14,qs),
(-50,6,o),
(-36,0,o),
(-27,0,qs),
(225,0,ls),
(245,0,o),
(259,10,o),
(259,15,qs),
(259,26,o),
(235,29,o),
(225,29,qs),
(214,29,o),
(189,29,o),
(168,32,o),
(154,38,o),
(154,45,qs),
(154,56,o),
(165,101,o),
(181,156,o),
(199,214,o),
(206,238,q),
(477,238,l),
(479,229,o),
(490,189,o),
(504,140,o),
(518,85,o),
(530,37,o),
(538,1,o),
(538,-5,qs),
(538,-17,o),
(508,-25,o),
(472,-27,o),
(442,-32,o),
(442,-41,qs),
(442,-49,o),
(455,-55,o),
(473,-55,qs),
(686,-55,ls),
(721,-55,o),
(721,-41,qs),
(721,-32,o),
(699,-29,o),
(685,-29,qs),
(637,-29,o),
(587,-17,o),
(582,3,qs),
(365,816,ls)
);
},
{
closed = 1;
nodes = (
(390,573,o),
(423,445,o),
(453,323,o),
(465,274,q),
(434,273,o),
(371,272,o),
(340,272,qs),
(309,272,o),
(249,273,o),
(218,274,q),
(225,304,o),
(246,388,o),
(271,481,o),
(297,578,o),
(321,664,o),
(339,735,o),
(343,755,q),
(358,700,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
97 1 13 12 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 12 2 3 91 0 13 0 7 8 13 7 90 6 1 4 0 5 4 5 87 0 12 12 20 67 11 10 2 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 12 3 13 3 12 13 104 0 0 0 1 3 0 1 91 0 2 0 3 12 2 3 91 0 13 0 7 8 13 7 90 6 1 4 0 5 4 5 87 11 10 2 8 8 9 83 0 9 9 13 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
110 104 94 92 80 79 77 74 71 68 56 25 20 51 36 36 38 36 36 14 24
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = Adieresis;
unicode = 196;
},
{
glyphname = Agrave;
kernLeft = Aacute;
kernRight = Aacute;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(321,888,o),
(359,860,o),
(400,841,o),
(413,841,qs),
(428,841,o),
(448,860,o),
(448,872,qs),
(448,882,o),
(423,916,o),
(387,949,o),
(348,972,o),
(334,972,qs),
(314,972,o),
(293,949,o),
(293,936,qs),
(293,921,o)
);
},
{
closed = 1;
nodes = (
(404,816,o),
(380,838,o),
(359,838,qs),
(333,838,o),
(312,815,o),
(305,792,qs),
(295,760,o),
(266,655,o),
(232,529,o),
(194,391,o),
(156,259,o),
(121,142,o),
(107,101,qs),
(100,81,o),
(76,65,o),
(58,63,qs),
(56,63,o),
(39,61,o),
(19,59,o),
(3,57,o),
(1,57,qs),
(-9,57,o),
(-28,43,o),
(-28,30,qs),
(-28,16,o),
(-14,0,o),
(-5,0,qs),
(273,0,ls),
(293,0,o),
(307,18,o),
(307,29,qs),
(307,47,o),
(290,61,o),
(274,61,qs),
(239,61,o),
(202,69,o),
(202,77,qs),
(202,85,o),
(208,117,o),
(218,156,o),
(231,197,o),
(238,214,q),
(470,214,l),
(473,203,o),
(489,150,o),
(505,92,o),
(517,42,o),
(517,35,qs),
(517,14,o),
(500,-1,o),
(481,-8,o),
(464,-17,o),
(464,-33,qs),
(464,-41,o),
(477,-55,o),
(495,-55,qs),
(742,-55,ls),
(759,-55,o),
(777,-43,o),
(777,-25,qs),
(777,-8,o),
(747,3,o),
(733,3,qs),
(697,3,o),
(652,6,o),
(626,14,o),
(615,26,o),
(613,35,qs),
(410,793,ls)
);
},
{
closed = 1;
nodes = (
(393,541,o),
(416,440,o),
(441,342,o),
(453,298,q),
(444,298,o),
(419,297,o),
(392,296,o),
(367,296,o),
(358,296,qs),
(343,296,o),
(320,296,o),
(300,297,o),
(277,298,o),
(262,298,q),
(273,338,o),
(301,451,o),
(330,565,o),
(355,664,o),
(362,691,q),
(371,643,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
85 1 10 9 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 1 0 106 0 1 9 1 106 0 10 0 4 5 10 4 90 0 2 0 3 2 3 87 0 9 9 20 67 8 7 2 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 0 1 0 106 0 1 9 1 106 0 9 10 9 106 0 10 0 4 5 10 4 90 0 2 0 3 2 3 87 8 7 2 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
100 90 82 80 19 36 52 39 28 52 55 38 34 11 24
CALL[ ]	/* CallFunction */";
};
width = 710;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(319,899,o),
(356,872,o),
(394,854,o),
(405,854,qs),
(416,854,o),
(429,867,o),
(429,877,qs),
(429,887,o),
(404,919,o),
(370,950,o),
(334,972,o),
(323,972,qs),
(308,972,o),
(291,955,o),
(291,941,qs),
(291,929,o)
);
},
{
closed = 1;
nodes = (
(382,837,o),
(353,837,qs),
(335,837,o),
(319,824,o),
(317,816,qs),
(307,783,o),
(276,673,o),
(240,540,o),
(199,393,o),
(160,253,o),
(123,131,o),
(108,89,qs),
(102,71,o),
(80,53,o),
(59,51,qs),
(56,51,o),
(39,49,o),
(17,47,o),
(-5,45,o),
(-12,45,qs),
(-22,45,o),
(-37,34,o),
(-37,24,qs),
(-37,13,o),
(-23,0,o),
(-14,0,qs),
(253,0,ls),
(273,0,o),
(287,15,o),
(287,24,qs),
(287,39,o),
(268,49,o),
(258,49,qs),
(247,49,o),
(220,49,o),
(197,52,o),
(182,59,o),
(182,65,qs),
(182,74,o),
(190,111,o),
(203,156,o),
(218,203,o),
(225,223,q),
(473,223,l),
(475,215,o),
(485,181,o),
(497,139,o),
(509,92,o),
(519,51,o),
(526,20,o),
(526,15,qs),
(526,-4,o),
(504,-18,o),
(477,-23,o),
(455,-28,o),
(455,-39,qs),
(455,-47,o),
(468,-55,o),
(486,-55,qs),
(719,-55,ls),
(736,-55,o),
(754,-45,o),
(754,-31,qs),
(754,-17,o),
(727,-9,o),
(713,-9,qs),
(665,-9,o),
(606,0,o),
(600,23,qs),
(388,816,ls)
);
},
{
closed = 1;
nodes = (
(393,553,o),
(420,441,o),
(446,335,o),
(458,289,q),
(435,288,o),
(386,288,o),
(363,288,qs),
(332,288,o),
(275,288,o),
(244,289,q),
(251,317,o),
(271,392,o),
(292,474,o),
(315,558,o),
(335,634,o),
(351,696,o),
(356,715,q),
(367,664,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
86 1 10 9 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 1 0 106 0 1 9 1 106 0 10 0 4 5 10 4 90 0 2 0 3 2 3 87 0 9 9 20 67 8 7 2 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 0 1 0 106 0 1 9 1 106 0 9 10 9 106 0 10 0 4 5 10 4 90 0 2 0 3 2 3 87 8 7 2 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
99 93 84 82 19 36 52 56 30 52 38 38 34 11 24
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(316,917,o),
(352,893,o),
(387,875,o),
(394,875,qs),
(402,875,o),
(402,886,qs),
(402,895,o),
(378,925,o),
(346,952,o),
(314,972,o),
(307,972,qs),
(299,972,o),
(288,964,o),
(288,950,qs),
(288,942,o)
);
},
{
closed = 1;
nodes = (
(362,827,o),
(350,835,o),
(345,835,qs),
(337,835,o),
(326,824,o),
(324,816,qs),
(314,782,o),
(283,669,o),
(245,532,o),
(204,381,o),
(164,237,o),
(125,112,o),
(110,69,qs),
(103,51,o),
(83,33,o),
(61,31,qs),
(57,31,o),
(36,29,o),
(9,27,o),
(-20,25,o),
(-30,25,qs),
(-50,25,o),
(-50,14,qs),
(-50,6,o),
(-36,0,o),
(-27,0,qs),
(225,0,ls),
(245,0,o),
(259,10,o),
(259,15,qs),
(259,26,o),
(235,29,o),
(225,29,qs),
(214,29,o),
(189,29,o),
(168,32,o),
(154,38,o),
(154,45,qs),
(154,56,o),
(165,101,o),
(181,156,o),
(199,214,o),
(206,238,q),
(477,238,l),
(479,229,o),
(490,189,o),
(504,140,o),
(518,85,o),
(530,37,o),
(538,1,o),
(538,-5,qs),
(538,-17,o),
(508,-25,o),
(472,-27,o),
(442,-32,o),
(442,-41,qs),
(442,-49,o),
(455,-55,o),
(473,-55,qs),
(686,-55,ls),
(721,-55,o),
(721,-41,qs),
(721,-32,o),
(699,-29,o),
(685,-29,qs),
(637,-29,o),
(587,-17,o),
(582,3,qs),
(365,816,ls)
);
},
{
closed = 1;
nodes = (
(390,573,o),
(423,445,o),
(453,323,o),
(465,274,q),
(434,273,o),
(371,272,o),
(340,272,qs),
(309,272,o),
(249,273,o),
(218,274,q),
(225,304,o),
(246,388,o),
(271,481,o),
(297,578,o),
(321,664,o),
(339,735,o),
(343,755,q),
(358,700,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
84 1 11 10 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 0 1 0 106 0 1 10 1 106 0 11 0 5 6 11 5 90 4 1 2 0 3 2 3 87 0 10 10 20 67 9 8 2 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 0 1 0 106 0 1 10 1 106 0 10 11 10 106 0 11 0 5 6 11 5 90 4 1 2 0 3 2 3 87 9 8 2 6 6 7 83 0 7 7 13 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
97 91 81 79 67 66 51 52 56 25 20 51 38 37 34 12 24
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = Agrave;
unicode = 192;
},
{
glyphname = Amacron;
kernLeft = Aacute;
kernRight = Aacute;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(404,816,o),
(380,838,o),
(359,838,qs),
(333,838,o),
(312,815,o),
(305,792,qs),
(295,760,o),
(266,655,o),
(232,529,o),
(194,391,o),
(156,259,o),
(121,142,o),
(107,101,qs),
(100,81,o),
(76,65,o),
(58,63,qs),
(56,63,o),
(39,61,o),
(19,59,o),
(3,57,o),
(1,57,qs),
(-9,57,o),
(-28,43,o),
(-28,30,qs),
(-28,16,o),
(-14,0,o),
(-5,0,qs),
(273,0,ls),
(293,0,o),
(307,18,o),
(307,29,qs),
(307,47,o),
(290,61,o),
(274,61,qs),
(239,61,o),
(202,69,o),
(202,77,qs),
(202,85,o),
(208,117,o),
(218,156,o),
(231,197,o),
(238,214,q),
(470,214,l),
(473,203,o),
(489,150,o),
(505,92,o),
(517,42,o),
(517,35,qs),
(517,14,o),
(500,-1,o),
(481,-8,o),
(464,-17,o),
(464,-33,qs),
(464,-41,o),
(477,-55,o),
(495,-55,qs),
(742,-55,ls),
(759,-55,o),
(777,-43,o),
(777,-25,qs),
(777,-8,o),
(747,3,o),
(733,3,qs),
(697,3,o),
(652,6,o),
(626,14,o),
(615,26,o),
(613,35,qs),
(410,793,ls)
);
},
{
closed = 1;
nodes = (
(393,541,o),
(416,440,o),
(441,342,o),
(453,298,q),
(444,298,o),
(419,297,o),
(392,296,o),
(367,296,o),
(358,296,qs),
(343,296,o),
(320,296,o),
(300,297,o),
(277,298,o),
(262,298,q),
(273,338,o),
(301,451,o),
(330,565,o),
(355,664,o),
(362,691,q),
(371,643,o)
);
},
{
closed = 1;
nodes = (
(421,957,o),
(379,957,qs),
(366,957,o),
(331,958,o),
(295,958,o),
(265,959,o),
(258,959,qs),
(241,959,o),
(225,934,o),
(225,920,qs),
(225,906,o),
(244,880,o),
(258,880,qs),
(276,880,o),
(340,880,o),
(412,881,o),
(479,881,o),
(499,881,qs),
(510,881,o),
(524,890,o),
(532,903,o),
(535,918,o),
(535,923,qs),
(535,938,o),
(518,960,o),
(507,960,qs),
(483,960,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
69 1 8 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
11 1 9 0 10 7 9 10 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 7 10 8 10 7 8 104 11 1 9 0 10 7 9 10 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 6 5 2 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
90 89 103 96 89 115 90 107 168 44 19 36 52 39 28 52 51 12 24
CALL[ ]	/* CallFunction */";
};
width = 710;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
ref = .ttfautohint;
},
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (213,382);
ref = macron;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
71 1 8 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
11 1 9 0 10 7 9 10 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 7 10 8 10 7 8 104 11 1 9 0 10 7 9 10 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 6 5 2 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
90 89 101 94 89 113 90 105 105 44 19 36 52 56 30 52 35 12 35
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(362,827,o),
(350,835,o),
(345,835,qs),
(337,835,o),
(326,824,o),
(324,816,qs),
(314,782,o),
(283,669,o),
(245,532,o),
(204,381,o),
(164,237,o),
(125,112,o),
(110,69,qs),
(103,51,o),
(83,33,o),
(61,31,qs),
(57,31,o),
(36,29,o),
(9,27,o),
(-20,25,o),
(-30,25,qs),
(-50,25,o),
(-50,14,qs),
(-50,6,o),
(-36,0,o),
(-27,0,qs),
(225,0,ls),
(245,0,o),
(259,10,o),
(259,15,qs),
(259,26,o),
(235,29,o),
(225,29,qs),
(214,29,o),
(189,29,o),
(168,32,o),
(154,38,o),
(154,45,qs),
(154,56,o),
(165,101,o),
(181,156,o),
(199,214,o),
(206,238,q),
(477,238,l),
(479,229,o),
(490,189,o),
(504,140,o),
(518,85,o),
(530,37,o),
(538,1,o),
(538,-5,qs),
(538,-17,o),
(508,-25,o),
(472,-27,o),
(442,-32,o),
(442,-41,qs),
(442,-49,o),
(455,-55,o),
(473,-55,qs),
(686,-55,ls),
(721,-55,o),
(721,-41,qs),
(721,-32,o),
(699,-29,o),
(685,-29,qs),
(637,-29,o),
(587,-17,o),
(582,3,qs),
(365,816,ls)
);
},
{
closed = 1;
nodes = (
(390,573,o),
(423,445,o),
(453,323,o),
(465,274,q),
(434,273,o),
(371,272,o),
(340,272,qs),
(309,272,o),
(249,273,o),
(218,274,q),
(225,304,o),
(246,388,o),
(271,481,o),
(297,578,o),
(321,664,o),
(339,735,o),
(343,755,q),
(358,700,o)
);
},
{
closed = 1;
nodes = (
(399,904,o),
(357,904,qs),
(344,904,o),
(309,905,o),
(273,905,o),
(243,906,o),
(236,906,qs),
(228,906,o),
(220,896,o),
(220,891,qs),
(220,886,o),
(229,875,o),
(236,875,qs),
(254,875,o),
(318,875,o),
(390,876,o),
(457,876,o),
(477,876,qs),
(488,876,o),
(496,889,o),
(496,894,qs),
(496,899,o),
(489,907,o),
(485,907,qs),
(461,907,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
69 1 9 8 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
12 1 10 0 11 8 10 11 91 0 9 0 3 4 9 3 90 2 1 0 0 1 0 1 87 0 8 8 20 67 7 6 2 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 8 11 9 11 8 9 104 12 1 10 0 11 8 10 11 91 0 9 0 3 4 9 3 90 2 1 0 0 1 0 1 87 7 6 2 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
88 87 99 92 87 111 88 103 82 76 44 18 51 52 56 25 20 51 34 13 24
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = Amacron;
unicode = 256;
},
{
glyphname = Aogonek;
kernLeft = Aacute;
kernRight = Aacute;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(675,-201,o),
(695,-185,o),
(705,-167,o),
(705,-159,qs),
(705,-150,o),
(690,-135,o),
(680,-135,qs),
(672,-135,o),
(663,-143,o),
(652,-152,o),
(635,-159,o),
(620,-159,qs),
(609,-159,o),
(591,-149,o),
(591,-138,qs),
(591,-118,o),
(614,-66,o),
(636,-55,q),
(742,-55,ls),
(759,-55,o),
(777,-43,o),
(777,-25,qs),
(777,-8,o),
(747,3,o),
(733,3,qs),
(697,3,o),
(652,6,o),
(626,14,o),
(615,26,o),
(613,35,qs),
(410,793,ls),
(404,816,o),
(380,838,o),
(359,838,qs),
(333,838,o),
(312,815,o),
(305,792,qs),
(295,760,o),
(266,655,o),
(232,529,o),
(194,391,o),
(156,259,o),
(121,142,o),
(107,101,qs),
(100,81,o),
(76,65,o),
(58,63,qs),
(56,63,o),
(39,61,o),
(19,59,o),
(3,57,o),
(1,57,qs),
(-9,57,o),
(-28,43,o),
(-28,30,qs),
(-28,16,o),
(-14,0,o),
(-5,0,qs),
(273,0,ls),
(293,0,o),
(307,18,o),
(307,29,qs),
(307,47,o),
(290,61,o),
(274,61,qs),
(239,61,o),
(202,69,o),
(202,77,qs),
(202,85,o),
(208,117,o),
(218,156,o),
(231,197,o),
(238,214,q),
(470,214,l),
(473,203,o),
(489,150,o),
(505,92,o),
(517,42,o),
(517,35,qs),
(517,14,o),
(500,-1,o),
(481,-8,o),
(464,-17,o),
(464,-33,qs),
(464,-41,o),
(477,-55,o),
(495,-55,qs),
(579,-55,l),
(570,-60,o),
(547,-74,o),
(526,-95,o),
(512,-121,o),
(512,-137,qs),
(512,-156,o),
(532,-184,o),
(563,-203,o),
(602,-212,o),
(622,-212,qs),
(643,-212,o)
);
},
{
closed = 1;
nodes = (
(393,541,o),
(416,440,o),
(441,342,o),
(453,298,q),
(444,298,o),
(419,297,o),
(392,296,o),
(367,296,o),
(358,296,qs),
(343,296,o),
(320,296,o),
(300,297,o),
(277,298,o),
(262,298,q),
(273,338,o),
(301,451,o),
(330,565,o),
(355,664,o),
(362,691,q),
(371,643,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
99 1 12 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 11 1 10 1 11 10 104 0 12 0 2 3 12 2 90 0 8 9 1 1 11 8 1 91 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 67 0 10 10 0 83 13 1 0 0 17 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 11 1 10 1 11 10 104 0 12 0 2 3 12 2 90 0 8 9 1 1 11 8 1 91 0 10 13 1 0 10 0 87 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 7 12 7 106 0 11 1 10 1 11 10 104 0 12 0 2 3 12 2 90 0 8 9 1 1 11 8 1 91 0 10 13 1 0 10 0 87 6 5 2 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
1 0 114 104 92 90 87 85 80 78 74 71 65 63 51 50 47 45 41 38 34 32 25 24 12 10 0 98 1 98 14 15
CALL[ ]	/* CallFunction */";
};
width = 710;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
ref = .ttfautohint;
},
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (488,-52);
ref = ogonek;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
71 1 8 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 0 4 12 12 0 96 0 10 1 9 1 10 9 104 0 8 0 2 3 8 2 90 13 1 12 0 1 10 12 1 92 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 67 0 9 9 11 83 0 11 11 17 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 0 4 12 12 0 96 0 10 1 9 1 10 9 104 0 8 0 2 3 8 2 90 13 1 12 0 1 10 12 1 92 0 9 0 11 9 11 87 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 0 4 12 4 0 12 104 0 10 1 9 1 10 9 104 0 8 0 2 3 8 2 90 13 1 12 0 1 10 12 1 92 0 9 0 11 9 11 87 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 7 8 7 106 0 0 4 12 4 0 12 104 0 10 1 9 1 10 9 104 0 8 0 2 3 8 2 90 13 1 12 0 1 10 12 1 92 0 9 0 11 9 11 87 6 5 2 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
89 89 89 118 89 118 111 109 103 101 98 96 105 44 19 36 52 56 30 52 35 14 35
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(362,827,o),
(350,835,o),
(345,835,qs),
(337,835,o),
(326,824,o),
(324,816,qs),
(314,782,o),
(283,669,o),
(245,532,o),
(204,381,o),
(164,237,o),
(125,112,o),
(110,69,qs),
(103,51,o),
(83,33,o),
(61,31,qs),
(57,31,o),
(36,29,o),
(9,27,o),
(-20,25,o),
(-30,25,qs),
(-50,25,o),
(-50,14,qs),
(-50,6,o),
(-36,0,o),
(-27,0,qs),
(225,0,ls),
(245,0,o),
(259,10,o),
(259,15,qs),
(259,26,o),
(235,29,o),
(225,29,qs),
(214,29,o),
(189,29,o),
(168,32,o),
(154,38,o),
(154,45,qs),
(154,56,o),
(165,101,o),
(181,156,o),
(199,214,o),
(206,238,q),
(477,238,l),
(479,229,o),
(490,189,o),
(504,140,o),
(518,85,o),
(530,37,o),
(538,1,o),
(538,-5,qs),
(538,-17,o),
(508,-25,o),
(472,-27,o),
(442,-32,o),
(442,-41,qs),
(442,-49,o),
(455,-55,o),
(473,-55,qs),
(540,-55,l),
(526,-66,o),
(499,-103,o),
(499,-129,qs),
(499,-161,o),
(545,-202,o),
(580,-202,qs),
(598,-202,o),
(626,-189,o),
(647,-172,o),
(658,-155,o),
(658,-151,qs),
(658,-145,o),
(653,-135,o),
(644,-135,qs),
(637,-135,o),
(626,-148,o),
(613,-163,o),
(595,-175,o),
(582,-175,qs),
(570,-175,o),
(555,-165,o),
(546,-150,o),
(543,-134,o),
(543,-128,qs),
(543,-123,o),
(546,-105,o),
(553,-85,o),
(566,-64,o),
(576,-55,q),
(686,-55,ls),
(721,-55,o),
(721,-41,qs),
(721,-32,o),
(699,-29,o),
(685,-29,qs),
(637,-29,o),
(587,-17,o),
(582,3,qs),
(365,816,ls)
);
},
{
closed = 1;
nodes = (
(390,573,o),
(423,445,o),
(453,323,o),
(465,274,q),
(434,273,o),
(371,272,o),
(340,272,qs),
(309,272,o),
(249,273,o),
(218,274,q),
(225,304,o),
(246,388,o),
(271,481,o),
(297,578,o),
(321,664,o),
(339,735,o),
(343,755,q),
(358,700,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
99 1 13 12 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 3 1 2 1 3 2 104 0 13 0 7 8 13 7 90 6 1 0 5 1 1 3 0 1 91 0 12 12 20 67 11 10 2 8 8 9 83 0 9 9 13 67 0 2 2 4 83 0 4 4 17 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 3 1 2 1 3 2 104 0 13 0 7 8 13 7 90 6 1 0 5 1 1 3 0 1 91 0 2 0 4 2 4 87 0 12 12 20 67 11 10 2 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 12 13 12 106 0 3 1 2 1 3 2 104 0 13 0 7 8 13 7 90 6 1 0 5 1 1 3 0 1 91 0 2 0 4 2 4 87 11 10 2 8 8 9 83 0 9 9 13 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
112 106 96 94 82 81 79 76 73 70 56 25 20 37 38 35 41 35 34 14 24
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = Aogonek;
unicode = 260;
},
{
glyphname = Aring;
kernLeft = Aacute;
kernRight = Aacute;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(371,972,qs),
(340,972,o),
(297,934,o),
(297,905,qs),
(297,876,o),
(342,840,o),
(376,840,qs),
(406,840,o),
(449,873,o),
(449,907,qs),
(449,972,o)
);
},
{
closed = 1;
nodes = (
(394,922,o),
(394,906,qs),
(394,891,o),
(381,882,o),
(376,882,qs),
(369,882,o),
(352,891,o),
(352,905,qs),
(352,922,o),
(369,930,o),
(373,930,qs),
(378,930,o)
);
},
{
closed = 1;
nodes = (
(404,816,o),
(380,838,o),
(359,838,qs),
(333,838,o),
(312,815,o),
(305,792,qs),
(295,760,o),
(266,655,o),
(232,529,o),
(194,391,o),
(156,259,o),
(121,142,o),
(107,101,qs),
(100,81,o),
(76,65,o),
(58,63,qs),
(56,63,o),
(39,61,o),
(19,59,o),
(3,57,o),
(1,57,qs),
(-9,57,o),
(-28,43,o),
(-28,30,qs),
(-28,16,o),
(-14,0,o),
(-5,0,qs),
(273,0,ls),
(293,0,o),
(307,18,o),
(307,29,qs),
(307,47,o),
(290,61,o),
(274,61,qs),
(239,61,o),
(202,69,o),
(202,77,qs),
(202,85,o),
(208,117,o),
(218,156,o),
(231,197,o),
(238,214,q),
(470,214,l),
(473,203,o),
(489,150,o),
(505,92,o),
(517,42,o),
(517,35,qs),
(517,14,o),
(500,-1,o),
(481,-8,o),
(464,-17,o),
(464,-33,qs),
(464,-41,o),
(477,-55,o),
(495,-55,qs),
(742,-55,ls),
(759,-55,o),
(777,-43,o),
(777,-25,qs),
(777,-8,o),
(747,3,o),
(733,3,qs),
(697,3,o),
(652,6,o),
(626,14,o),
(615,26,o),
(613,35,qs),
(410,793,ls)
);
},
{
closed = 1;
nodes = (
(393,541,o),
(416,440,o),
(441,342,o),
(453,298,q),
(444,298,o),
(419,297,o),
(392,296,o),
(367,296,o),
(358,296,qs),
(343,296,o),
(320,296,o),
(300,297,o),
(277,298,o),
(262,298,q),
(273,338,o),
(301,451,o),
(330,565,o),
(355,664,o),
(362,691,q),
(371,643,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
92 1 12 11 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
13 1 2 1 3 0 2 96 0 3 0 1 3 94 0 1 0 0 11 1 0 91 0 12 0 6 7 12 6 90 0 4 0 5 4 5 87 0 11 11 20 67 10 9 2 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
13 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 1 0 0 11 1 0 91 0 12 0 6 7 12 6 90 0 4 0 5 4 5 87 0 11 11 20 67 10 9 2 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
13 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 11 0 12 0 11 12 104 0 1 0 0 11 1 0 91 0 12 0 6 7 12 6 90 0 4 0 5 4 5 87 10 9 2 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
12 11 107 97 89 87 75 74 71 69 65 62 58 56 49 48 36 33 29 26 18 16 11 22 12 22 36 34 14 17
CALL[ ]	/* CallFunction */";
};
width = 710;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(362,972,qs),
(332,972,o),
(291,938,o),
(291,912,qs),
(291,886,o),
(333,853,o),
(363,853,qs),
(390,853,o),
(433,883,o),
(433,914,qs),
(433,972,o)
);
},
{
closed = 1;
nodes = (
(388,927,o),
(388,913,qs),
(388,897,o),
(368,887,o),
(363,887,qs),
(357,887,o),
(336,897,o),
(336,912,qs),
(336,927,o),
(354,938,o),
(362,938,qs),
(372,938,o)
);
},
{
closed = 1;
nodes = (
(382,837,o),
(353,837,qs),
(335,837,o),
(319,824,o),
(317,816,qs),
(307,783,o),
(276,673,o),
(240,540,o),
(199,393,o),
(160,253,o),
(123,131,o),
(108,89,qs),
(102,71,o),
(80,53,o),
(59,51,qs),
(56,51,o),
(39,49,o),
(17,47,o),
(-5,45,o),
(-12,45,qs),
(-22,45,o),
(-37,34,o),
(-37,24,qs),
(-37,13,o),
(-23,0,o),
(-14,0,qs),
(253,0,ls),
(273,0,o),
(287,15,o),
(287,24,qs),
(287,39,o),
(268,49,o),
(258,49,qs),
(247,49,o),
(220,49,o),
(197,52,o),
(182,59,o),
(182,65,qs),
(182,74,o),
(190,111,o),
(203,156,o),
(218,203,o),
(225,223,q),
(473,223,l),
(475,215,o),
(485,181,o),
(497,139,o),
(509,92,o),
(519,51,o),
(526,20,o),
(526,15,qs),
(526,-4,o),
(504,-18,o),
(477,-23,o),
(455,-28,o),
(455,-39,qs),
(455,-47,o),
(468,-55,o),
(486,-55,qs),
(719,-55,ls),
(736,-55,o),
(754,-45,o),
(754,-31,qs),
(754,-17,o),
(727,-9,o),
(713,-9,qs),
(665,-9,o),
(606,0,o),
(600,23,qs),
(388,816,ls)
);
},
{
closed = 1;
nodes = (
(393,553,o),
(420,441,o),
(446,335,o),
(458,289,q),
(435,288,o),
(386,288,o),
(363,288,qs),
(332,288,o),
(275,288,o),
(244,289,q),
(251,317,o),
(271,392,o),
(292,474,o),
(315,558,o),
(335,634,o),
(351,696,o),
(356,715,q),
(367,664,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
93 1 12 11 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
13 1 2 1 3 0 2 96 0 3 0 1 3 94 0 1 0 0 11 1 0 91 0 12 0 6 7 12 6 90 0 4 0 5 4 5 87 0 11 11 20 67 10 9 2 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
13 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 1 0 0 11 1 0 91 0 12 0 6 7 12 6 90 0 4 0 5 4 5 87 0 11 11 20 67 10 9 2 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
13 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 11 0 12 0 11 12 104 0 1 0 0 11 1 0 91 0 12 0 6 7 12 6 90 0 4 0 5 4 5 87 10 9 2 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
12 11 106 100 91 89 77 76 73 71 67 64 60 57 49 48 34 31 27 25 18 16 11 22 12 22 36 34 14 17
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(379,972,o),
(349,972,qs),
(320,972,o),
(283,944,o),
(283,923,qs),
(283,902,o),
(319,875,o),
(345,875,qs),
(356,875,o),
(379,881,o),
(398,893,o),
(410,912,o),
(410,925,qs),
(410,944,o)
);
},
{
closed = 1;
nodes = (
(380,933,o),
(380,924,qs),
(380,895,o),
(345,895,qs),
(328,895,o),
(313,912,o),
(313,923,qs),
(313,932,o),
(328,951,o),
(347,951,qs),
(367,951,o)
);
},
{
closed = 1;
nodes = (
(362,827,o),
(350,835,o),
(345,835,qs),
(337,835,o),
(326,824,o),
(324,816,qs),
(314,782,o),
(283,669,o),
(245,532,o),
(204,381,o),
(164,237,o),
(125,112,o),
(110,69,qs),
(103,51,o),
(83,33,o),
(61,31,qs),
(57,31,o),
(36,29,o),
(9,27,o),
(-20,25,o),
(-30,25,qs),
(-50,25,o),
(-50,14,qs),
(-50,6,o),
(-36,0,o),
(-27,0,qs),
(225,0,ls),
(245,0,o),
(259,10,o),
(259,15,qs),
(259,26,o),
(235,29,o),
(225,29,qs),
(214,29,o),
(189,29,o),
(168,32,o),
(154,38,o),
(154,45,qs),
(154,56,o),
(165,101,o),
(181,156,o),
(199,214,o),
(206,238,q),
(477,238,l),
(479,229,o),
(490,189,o),
(504,140,o),
(518,85,o),
(530,37,o),
(538,1,o),
(538,-5,qs),
(538,-17,o),
(508,-25,o),
(472,-27,o),
(442,-32,o),
(442,-41,qs),
(442,-49,o),
(455,-55,o),
(473,-55,qs),
(686,-55,ls),
(721,-55,o),
(721,-41,qs),
(721,-32,o),
(699,-29,o),
(685,-29,qs),
(637,-29,o),
(587,-17,o),
(582,3,qs),
(365,816,ls)
);
},
{
closed = 1;
nodes = (
(390,573,o),
(423,445,o),
(453,323,o),
(465,274,q),
(434,273,o),
(371,272,o),
(340,272,qs),
(309,272,o),
(249,273,o),
(218,274,q),
(225,304,o),
(246,388,o),
(271,481,o),
(297,578,o),
(321,664,o),
(339,735,o),
(343,755,q),
(358,700,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
94 1 13 12 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 14 1 2 3 1 2 91 0 3 0 0 12 3 0 91 0 13 0 7 8 13 7 90 6 1 4 0 5 4 5 87 0 12 12 20 67 11 10 2 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 12 0 13 0 12 13 104 0 1 14 1 2 3 1 2 91 0 3 0 0 12 3 0 91 0 13 0 7 8 13 7 90 6 1 4 0 5 4 5 87 11 10 2 8 8 9 83 0 9 9 13 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
15 14 107 101 91 89 77 76 74 71 68 65 61 58 50 49 40 39 35 32 29 27 21 19 14 24 15 24 36 36 15 17
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = Aring;
unicode = 197;
},
{
glyphname = Aringacute;
kernLeft = Aacute;
kernRight = Aacute;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(397,853,q),
(411,860,o),
(440,879,o),
(464,902,o),
(479,925,o),
(479,936,qs),
(479,949,o),
(458,972,o),
(438,972,qs),
(424,972,o),
(385,949,o),
(349,916,o),
(324,882,o),
(324,872,qs),
(324,862,o),
(330,855,q),
(309,847,o),
(282,814,o),
(282,792,qs),
(282,770,o),
(307,740,o),
(327,732,q),
(318,727,o),
(316,717,q),
(308,693,o),
(278,602,o),
(242,488,o),
(200,361,o),
(160,240,o),
(123,135,o),
(110,101,qs),
(102,81,o),
(80,65,o),
(61,63,qs),
(59,63,o),
(42,61,o),
(23,59,o),
(6,57,o),
(4,57,qs),
(-6,57,o),
(-24,43,o),
(-24,30,qs),
(-24,16,o),
(-10,0,o),
(-1,0,qs),
(36,0,o),
(108,4,o),
(145,4,qs),
(178,4,o),
(244,0,o),
(276,0,qs),
(296,0,o),
(310,18,o),
(310,29,qs),
(310,47,o),
(295,61,o),
(285,61,qs),
(237,61,o),
(206,73,o),
(206,77,qs),
(206,79,o),
(216,110,o),
(231,152,o),
(247,197,o),
(254,214,q),
(464,214,l),
(468,203,o),
(487,148,o),
(507,86,o),
(521,34,o),
(521,27,qs),
(521,4,o),
(504,-13,o),
(485,-20,o),
(468,-26,o),
(468,-38,qs),
(468,-46,o),
(481,-58,o),
(499,-58,qs),
(533,-58,o),
(596,-53,o),
(634,-53,qs),
(657,-53,o),
(722,-55,o),
(746,-55,qs),
(763,-55,o),
(781,-43,o),
(781,-25,qs),
(781,-8,o),
(750,3,o),
(736,3,qs),
(683,3,o),
(623,14,o),
(616,35,qs),
(408,717,ls),
(405,726,o),
(395,732,q),
(412,740,o),
(434,771,o),
(434,794,qs),
(434,840,o)
);
},
{
closed = 1;
nodes = (
(394,482,o),
(415,400,o),
(437,324,o),
(447,298,q),
(433,297,o),
(389,297,o),
(375,297,qs),
(348,297,o),
(305,297,o),
(278,298,q),
(282,313,o),
(297,363,o),
(315,421,o),
(334,484,o),
(351,539,o),
(365,582,o),
(369,592,q),
(376,562,o)
);
},
{
closed = 1;
nodes = (
(382,809,o),
(382,793,qs),
(382,777,o),
(366,767,o),
(361,767,qs),
(356,767,o),
(335,776,o),
(335,792,qs),
(335,809,o),
(353,818,o),
(358,818,qs),
(365,818,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
99 84 2 10 8 114 101 78 3 4 9 11 2 66 0 8 10 8 106 12 1 10 11 10 106 0 11 9 11 106 0 9 0 3 4 9 3 90 0 0 2 1 1 0 1 87 7 6 2 4 4 5 83 0 5 5 13 5 68 120 119 126 124 119 130 120 130 113 108 92 90 19 36 132 39 28 33 84 40 13 23
CALL[ ]	/* CallFunction */";
};
width = 716;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(385,737,o),
(356,737,qs),
(338,737,o),
(322,724,o),
(320,716,qs),
(310,688,o),
(279,594,o),
(243,480,o),
(202,353,o),
(163,232,o),
(126,126,o),
(111,89,qs),
(105,71,o),
(83,53,o),
(62,51,qs),
(59,51,o),
(42,49,o),
(20,47,o),
(-2,45,o),
(-9,45,qs),
(-19,45,o),
(-34,34,o),
(-34,24,qs),
(-34,13,o),
(-20,0,o),
(-11,0,qs),
(256,0,ls),
(276,0,o),
(290,15,o),
(290,24,qs),
(290,39,o),
(271,49,o),
(261,49,qs),
(250,49,o),
(223,49,o),
(200,52,o),
(185,59,o),
(185,65,qs),
(186,73,o),
(197,110,o),
(212,155,o),
(230,203,o),
(238,223,q),
(466,223,l),
(469,215,o),
(480,181,o),
(494,139,o),
(509,92,o),
(521,51,o),
(529,20,o),
(529,15,qs),
(529,-4,o),
(507,-18,o),
(480,-23,o),
(458,-28,o),
(458,-39,qs),
(458,-47,o),
(471,-55,o),
(489,-55,qs),
(722,-55,ls),
(739,-55,o),
(757,-45,o),
(757,-31,qs),
(757,-17,o),
(730,-9,o),
(716,-9,qs),
(668,-9,o),
(610,0,o),
(603,23,qs),
(391,716,ls)
);
},
{
closed = 1;
nodes = (
(392,490,o),
(416,404,o),
(440,323,o),
(451,289,q),
(430,288,o),
(387,288,o),
(366,288,qs),
(337,288,o),
(286,288,o),
(257,289,q),
(265,320,o),
(294,414,o),
(326,510,o),
(353,594,o),
(359,615,q),
(369,576,o)
);
},
{
closed = 1;
nodes = (
(437,970,o),
(422,972,q),
(410,972,o),
(375,952,o),
(341,923,o),
(316,892,o),
(315,882,qs),
(315,873,o),
(321,860,o),
(330,859,q),
(314,851,o),
(296,824,o),
(296,807,qs),
(296,781,o),
(338,748,o),
(368,748,qs),
(395,748,o),
(438,778,o),
(438,809,qs),
(438,867,o),
(367,867,qs),
(363,867,l),
(377,873,o),
(409,890,o),
(435,909,o),
(452,930,o),
(452,939,qs),
(452,953,o)
);
},
{
closed = 1;
nodes = (
(393,822,o),
(393,808,qs),
(393,792,o),
(373,782,o),
(368,782,qs),
(362,782,o),
(341,792,o),
(341,807,qs),
(341,822,o),
(359,833,o),
(367,833,qs),
(377,833,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
106 1 9 11 103 1 12 9 70 1 8 7 31 1 3 2 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 11 9 11 106 14 1 12 9 13 10 12 96 0 13 10 9 13 94 0 7 10 8 10 7 8 104 0 9 0 10 7 9 10 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 11 9 11 106 14 1 12 9 13 9 12 13 104 0 13 10 9 13 10 102 0 7 10 8 10 7 8 104 0 9 0 10 7 9 10 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 6 5 2 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
115 114 121 119 114 125 115 125 111 110 98 96 93 91 103 44 19 36 52 56 30 52 34 15 24
CALL[ ]	/* CallFunction */";
};
width = 703;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(364,725,o),
(352,733,o),
(347,733,qs),
(339,733,o),
(328,722,o),
(326,714,qs),
(316,680,o),
(285,582,o),
(247,468,o),
(206,343,o),
(166,222,o),
(127,112,o),
(112,69,qs),
(105,51,o),
(85,33,o),
(63,31,qs),
(59,31,o),
(38,29,o),
(11,27,o),
(-18,25,o),
(-28,25,qs),
(-48,25,o),
(-48,14,qs),
(-48,6,o),
(-34,0,o),
(-25,0,qs),
(7,1,o),
(69,2,o),
(101,2,qs),
(133,2,o),
(195,0,o),
(227,0,qs),
(247,0,o),
(261,10,o),
(261,15,qs),
(261,26,o),
(237,29,o),
(227,29,qs),
(216,29,o),
(191,29,o),
(170,32,o),
(156,38,o),
(156,45,qs),
(156,56,o),
(169,101,o),
(188,156,o),
(208,214,o),
(215,238,q),
(469,238,l),
(471,229,o),
(484,189,o),
(499,140,o),
(516,85,o),
(531,37,o),
(540,1,o),
(540,-5,qs),
(540,-17,o),
(510,-25,o),
(474,-27,o),
(444,-32,o),
(444,-41,qs),
(444,-49,o),
(457,-55,o),
(475,-55,qs),
(501,-55,o),
(554,-53,o),
(581,-53,qs),
(607,-53,o),
(662,-55,o),
(688,-55,qs),
(723,-55,o),
(723,-41,qs),
(723,-32,o),
(701,-29,o),
(687,-29,qs),
(639,-29,o),
(590,-17,o),
(584,3,qs),
(367,714,ls)
);
},
{
closed = 1;
nodes = (
(389,503,o),
(418,413,o),
(445,323,o),
(457,274,q),
(426,273,o),
(373,272,o),
(342,272,qs),
(311,272,o),
(258,273,o),
(227,274,q),
(237,320,o),
(272,427,o),
(308,530,o),
(339,622,o),
(345,653,q),
(360,598,o)
);
},
{
closed = 1;
nodes = (
(381,856,o),
(351,856,qs),
(322,856,o),
(285,828,o),
(285,807,qs),
(285,786,o),
(321,759,o),
(347,759,qs),
(358,759,o),
(381,765,o),
(400,777,o),
(412,796,o),
(412,809,qs),
(412,828,o)
);
},
{
closed = 1;
nodes = (
(377,817,o),
(377,808,qs),
(377,794,o),
(364,782,o),
(347,782,qs),
(330,782,o),
(319,796,o),
(319,807,qs),
(319,816,o),
(330,833,o),
(349,833,qs),
(369,833,o)
);
},
{
closed = 1;
nodes = (
(402,972,o),
(394,972,qs),
(387,972,o),
(355,952,o),
(323,925,o),
(299,895,o),
(299,886,qs),
(299,875,o),
(307,875,qs),
(314,875,o),
(349,893,o),
(385,917,o),
(413,942,o),
(413,950,qs),
(413,964,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
79 1 9 8 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 15 14 15 106 0 14 11 14 106 0 8 10 9 10 8 9 104 0 13 0 10 8 13 10 91 0 9 0 3 4 9 3 90 2 1 0 0 1 0 1 87 16 1 12 12 11 83 0 11 11 20 67 7 6 2 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
0 15 14 15 106 0 14 11 14 106 0 8 10 9 10 8 9 104 0 11 16 1 12 13 11 12 91 0 13 0 10 8 13 10 91 0 9 0 3 4 9 3 90 2 1 0 0 1 0 1 87 7 6 2 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
110 109 134 132 127 125 116 114 109 120 110 120 107 105 101 99 90 84 44 18 51 132 56 25 20 131 34 17 24
CALL[ ]	/* CallFunction */";
};
width = 685;
}
);
note = Aringacute;
unicode = 506;
},
{
glyphname = Atilde;
kernLeft = Aacute;
kernRight = Aacute;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(404,816,o),
(380,838,o),
(359,838,qs),
(333,838,o),
(312,815,o),
(305,792,qs),
(295,760,o),
(266,655,o),
(232,529,o),
(194,391,o),
(156,259,o),
(121,142,o),
(107,101,qs),
(100,81,o),
(76,65,o),
(58,63,qs),
(56,63,o),
(39,61,o),
(19,59,o),
(3,57,o),
(1,57,qs),
(-9,57,o),
(-28,43,o),
(-28,30,qs),
(-28,16,o),
(-14,0,o),
(-5,0,qs),
(273,0,ls),
(293,0,o),
(307,18,o),
(307,29,qs),
(307,47,o),
(290,61,o),
(274,61,qs),
(239,61,o),
(202,69,o),
(202,77,qs),
(202,85,o),
(208,117,o),
(218,156,o),
(231,197,o),
(238,214,q),
(470,214,l),
(473,203,o),
(489,150,o),
(505,92,o),
(517,42,o),
(517,35,qs),
(517,14,o),
(500,-1,o),
(481,-8,o),
(464,-17,o),
(464,-33,qs),
(464,-41,o),
(477,-55,o),
(495,-55,qs),
(742,-55,ls),
(759,-55,o),
(777,-43,o),
(777,-25,qs),
(777,-8,o),
(747,3,o),
(733,3,qs),
(697,3,o),
(652,6,o),
(626,14,o),
(615,26,o),
(613,35,qs),
(410,793,ls)
);
},
{
closed = 1;
nodes = (
(393,541,o),
(416,440,o),
(441,342,o),
(453,298,q),
(444,298,o),
(419,297,o),
(392,296,o),
(367,296,o),
(358,296,qs),
(343,296,o),
(320,296,o),
(300,297,o),
(277,298,o),
(262,298,q),
(273,338,o),
(301,451,o),
(330,565,o),
(355,664,o),
(362,691,q),
(371,643,o)
);
},
{
closed = 1;
nodes = (
(190,861,o),
(199,861,qs),
(206,861,o),
(224,869,o),
(244,878,o),
(268,886,o),
(283,886,qs),
(297,886,o),
(329,878,o),
(364,869,o),
(401,862,o),
(420,862,qs),
(431,862,o),
(469,869,o),
(505,886,o),
(531,915,o),
(531,937,qs),
(531,953,o),
(514,972,o),
(509,972,qs),
(502,972,o),
(479,959,qs),
(465,951,o),
(433,942,o),
(419,942,qs),
(404,942,o),
(368,951,o),
(332,961,o),
(297,970,o),
(282,970,qs),
(245,970,o),
(214,952,qs),
(200,944,o),
(180,919,o),
(180,897,qs),
(180,882,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
69 1 8 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
11 1 9 0 13 12 9 13 91 0 10 14 1 12 7 10 12 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 88 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 7 12 8 12 7 8 104 11 1 9 0 13 12 9 13 91 0 10 14 1 12 7 10 12 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 88 6 5 2 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
123 121 118 116 113 111 105 103 100 98 95 93 168 44 19 36 52 39 28 52 51 15 24
CALL[ ]	/* CallFunction */";
};
width = 710;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
ref = .ttfautohint;
},
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (183,372);
ref = tilde;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
71 1 8 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
11 1 9 0 13 12 9 13 91 0 10 14 1 12 7 10 12 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 88 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 7 12 8 12 7 8 104 11 1 9 0 13 12 9 13 91 0 10 14 1 12 7 10 12 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 88 6 5 2 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
123 121 118 116 113 111 105 103 100 98 95 93 105 44 19 36 52 56 30 52 35 15 35
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(362,827,o),
(350,835,o),
(345,835,qs),
(337,835,o),
(326,824,o),
(324,816,qs),
(314,782,o),
(283,669,o),
(245,532,o),
(204,381,o),
(164,237,o),
(125,112,o),
(110,69,qs),
(103,51,o),
(83,33,o),
(61,31,qs),
(57,31,o),
(36,29,o),
(9,27,o),
(-20,25,o),
(-30,25,qs),
(-50,25,o),
(-50,14,qs),
(-50,6,o),
(-36,0,o),
(-27,0,qs),
(225,0,ls),
(245,0,o),
(259,10,o),
(259,15,qs),
(259,26,o),
(235,29,o),
(225,29,qs),
(214,29,o),
(189,29,o),
(168,32,o),
(154,38,o),
(154,45,qs),
(154,56,o),
(165,101,o),
(181,156,o),
(199,214,o),
(206,238,q),
(477,238,l),
(479,229,o),
(490,189,o),
(504,140,o),
(518,85,o),
(530,37,o),
(538,1,o),
(538,-5,qs),
(538,-17,o),
(508,-25,o),
(472,-27,o),
(442,-32,o),
(442,-41,qs),
(442,-49,o),
(455,-55,o),
(473,-55,qs),
(686,-55,ls),
(721,-55,o),
(721,-41,qs),
(721,-32,o),
(699,-29,o),
(685,-29,qs),
(637,-29,o),
(587,-17,o),
(582,3,qs),
(365,816,ls)
);
},
{
closed = 1;
nodes = (
(390,573,o),
(423,445,o),
(453,323,o),
(465,274,q),
(434,273,o),
(371,272,o),
(340,272,qs),
(309,272,o),
(249,273,o),
(218,274,q),
(225,304,o),
(246,388,o),
(271,481,o),
(297,578,o),
(321,664,o),
(339,735,o),
(343,755,q),
(358,700,o)
);
},
{
closed = 1;
nodes = (
(188,888,o),
(193,888,qs),
(198,888,o),
(214,896,o),
(236,905,o),
(262,913,o),
(277,913,qs),
(291,913,o),
(323,905,o),
(358,896,o),
(395,889,o),
(414,889,qs),
(435,889,o),
(472,896,o),
(500,909,o),
(516,925,o),
(516,934,qs),
(516,941,o),
(508,951,o),
(503,951,qs),
(498,951,o),
(487,946,o),
(473,938,qs),
(439,921,o),
(413,921,qs),
(398,921,o),
(362,930,o),
(326,940,o),
(291,949,o),
(276,949,qs),
(239,949,o),
(208,931,qs),
(179,914,o),
(179,903,qs),
(179,898,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
69 1 9 8 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
12 1 10 0 14 13 10 14 91 0 11 15 1 13 8 11 13 91 0 9 0 3 4 9 3 90 2 1 0 0 1 0 1 88 0 8 8 20 67 7 6 2 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 8 13 9 13 8 9 104 12 1 10 0 14 13 10 14 91 0 11 15 1 13 8 11 13 91 0 9 0 3 4 9 3 90 2 1 0 0 1 0 1 88 7 6 2 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
120 118 115 113 110 108 102 100 97 95 92 90 82 76 44 18 51 52 56 25 20 51 34 16 24
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = Atilde;
unicode = 195;
},
{
glyphname = AE;
kernLeft = AE;
kernRight = AE;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(957,293,o),
(956,273,qs),
(955,255,o),
(951,207,o),
(947,162,o),
(943,126,o),
(943,121,qs),
(942,108,o),
(934,93,o),
(922,86,o),
(907,84,o),
(900,84,qs),
(622,84,l),
(622,377,l),
(638,378,o),
(669,379,o),
(685,379,qs),
(714,379,o),
(750,378,o),
(764,378,qs),
(779,378,o),
(798,364,o),
(808,343,o),
(812,319,o),
(812,309,qs),
(812,296,o),
(832,270,o),
(853,270,qs),
(877,270,o),
(895,293,o),
(895,307,qs),
(895,335,o),
(893,391,o),
(893,420,qs),
(893,449,o),
(895,504,o),
(895,533,qs),
(895,544,o),
(877,570,o),
(854,570,qs),
(837,570,o),
(810,556,o),
(810,530,qs),
(810,499,o),
(803,464,o),
(793,464,qs),
(788,464,o),
(764,463,o),
(733,462,o),
(699,461,o),
(685,461,qs),
(668,461,o),
(638,463,o),
(622,464,q),
(622,737,l),
(874,737,ls),
(892,737,o),
(911,726,o),
(911,709,qs),
(911,645,ls),
(911,638,o),
(913,622,o),
(922,608,o),
(940,599,o),
(955,599,qs),
(980,599,o),
(999,632,o),
(999,651,qs),
(999,785,ls),
(999,806,o),
(985,821,o),
(971,821,qs),
(917,821,o),
(850,820,o),
(796,820,o),
(738,819,o),
(693,819,qs),
(674,819,o),
(619,820,o),
(555,820,o),
(485,821,o),
(452,821,qs),
(444,821,o),
(424,820,o),
(406,813,o),
(394,798,o),
(394,785,qs),
(394,776,o),
(403,765,o),
(416,759,o),
(430,757,o),
(434,757,qs),
(445,757,o),
(472,756,o),
(483,751,q),
(463,713,o),
(412,610,o),
(355,491,o),
(294,365,o),
(234,245,o),
(179,140,o),
(155,101,qs),
(144,83,o),
(120,65,o),
(98,63,qs),
(95,63,o),
(72,61,o),
(42,59,o),
(9,57,o),
(-3,57,qs),
(-19,57,o),
(-42,43,o),
(-42,27,qs),
(-42,12,o),
(-22,0,o),
(-5,0,qs),
(27,0,o),
(97,2,o),
(129,2,qs),
(161,2,o),
(216,0,o),
(248,0,qs),
(268,0,o),
(293,11,o),
(293,31,qs),
(293,46,o),
(280,59,o),
(270,60,qs),
(258,61,o),
(242,64,o),
(242,68,qs),
(242,71,o),
(257,102,o),
(280,145,o),
(308,193,o),
(321,214,q),
(529,214,l),
(529,186,o),
(528,135,o),
(528,96,qs),
(528,75,o),
(494,60,o),
(447,60,qs),
(427,60,o),
(408,49,o),
(408,32,qs),
(408,14,o),
(439,0,o),
(454,0,qs),
(515,0,o),
(636,2,o),
(697,2,qs),
(771,2,o),
(911,0,o),
(985,0,qs),
(1007,0,o),
(1025,16,o),
(1027,33,qs),
(1031,63,o),
(1037,141,o),
(1041,213,o),
(1043,268,o),
(1043,277,qs),
(1043,283,o),
(1040,300,o),
(1032,315,o),
(1015,326,o),
(1002,326,qs),
(976,326,o)
);
},
{
closed = 1;
nodes = (
(358,297,o),
(341,298,q),
(357,341,o),
(410,445,o),
(465,546,o),
(513,635,o),
(524,664,q),
(524,660,ls),
(524,626,o),
(526,586,o),
(528,543,o),
(530,481,o),
(530,425,qs),
(530,382,o),
(530,321,o),
(529,297,q),
(500,296,o),
(442,296,o),
(413,296,qs),
(395,296,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
73 1 10 7 181 1 9 10 161 1 15 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 85 values pushed */
0 7 8 10 10 7 96 0 9 10 12 10 9 96 17 1 0 14 16 14 0 16 104 0 12 0 13 3 12 13 91 18 1 16 0 3 15 16 3 89 0 10 10 8 84 0 8 8 12 67 0 14 14 11 83 0 11 11 23 67 0 15 15 1 84 4 1 1 1 13 67 6 5 2 2 2 1 83 4 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 86 values pushed */
0 7 8 10 10 7 96 0 9 10 12 10 9 12 104 17 1 0 14 16 14 0 16 104 0 12 0 13 3 12 13 91 18 1 16 0 3 15 16 3 89 0 10 10 8 84 0 8 8 12 67 0 14 14 11 83 0 11 11 23 67 0 15 15 1 84 4 1 1 1 13 67 6 5 2 2 2 1 83 4 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 84 values pushed */
0 7 8 10 10 7 96 0 9 10 12 10 9 12 104 17 1 0 14 16 14 0 16 104 0 11 0 14 0 11 14 91 0 12 0 13 3 12 13 91 18 1 16 0 3 15 16 3 89 0 10 10 8 84 0 8 8 12 67 0 15 15 1 84 4 1 1 1 13 67 6 5 2 2 2 1 83 4 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 84 values pushed */
0 7 8 10 10 7 96 0 9 10 12 10 9 12 104 17 1 0 14 16 14 0 16 104 0 11 0 14 0 11 14 91 0 12 0 13 3 12 13 91 18 1 16 0 3 15 16 3 89 0 10 10 8 84 0 8 8 14 67 0 15 15 1 84 4 1 1 1 13 67 6 5 2 2 2 1 83 4 1 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 44 values pushed */
172 169 1 0 169 188 172 186 157 155 154 147 141 139 129 127 123 114 113 111 104 102 97 84 77 74 63 62 61 57 53 45 32 31 26 24 20 12 0 168 1 168 19 15
CALL[ ]	/* CallFunction */";
};
width = 1076;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(954,293,o),
(953,273,qs),
(952,255,o),
(949,207,o),
(945,157,o),
(941,115,o),
(940,103,qs),
(939,90,o),
(931,75,o),
(919,68,o),
(904,66,o),
(897,66,qs),
(598,66,l),
(598,386,l),
(619,387,o),
(661,388,o),
(682,388,qs),
(711,388,o),
(747,387,o),
(761,387,qs),
(776,387,o),
(795,371,o),
(805,347,o),
(809,320,o),
(809,309,qs),
(809,296,o),
(825,274,o),
(840,274,qs),
(856,274,o),
(871,292,o),
(871,307,qs),
(871,335,o),
(869,391,o),
(869,420,qs),
(869,449,o),
(871,504,o),
(871,533,qs),
(871,544,o),
(858,566,o),
(841,566,qs),
(826,566,o),
(807,551,o),
(807,530,qs),
(807,522,o),
(806,497,o),
(803,473,o),
(796,455,o),
(790,455,qs),
(785,455,o),
(761,454,o),
(730,453,o),
(696,452,o),
(682,452,qs),
(660,452,o),
(619,454,o),
(598,455,q),
(598,755,l),
(871,755,ls),
(876,755,o),
(889,754,o),
(900,749,o),
(908,737,o),
(908,727,qs),
(908,645,ls),
(908,638,o),
(910,623,o),
(916,610,o),
(930,601,o),
(942,601,qs),
(962,601,o),
(975,632,o),
(975,651,qs),
(975,785,ls),
(975,806,o),
(961,821,o),
(947,821,qs),
(897,821,o),
(835,820,o),
(785,820,o),
(732,819,o),
(690,819,qs),
(671,819,o),
(616,820,o),
(552,820,o),
(482,821,o),
(449,821,qs),
(441,821,o),
(424,820,o),
(408,814,o),
(398,802,o),
(398,792,qs),
(398,776,o),
(426,769,o),
(438,769,qs),
(449,769,o),
(476,768,o),
(487,763,q),
(467,725,o),
(414,618,o),
(353,494,o),
(289,362,o),
(226,238,o),
(169,129,o),
(145,89,qs),
(134,71,o),
(110,53,o),
(88,51,qs),
(84,51,o),
(61,49,o),
(32,47,o),
(2,45,o),
(-9,45,qs),
(-23,45,o),
(-41,34,o),
(-41,22,qs),
(-41,10,o),
(-25,0,o),
(-11,0,qs),
(21,0,o),
(87,2,o),
(119,2,qs),
(151,2,o),
(210,0,o),
(242,0,qs),
(262,0,o),
(284,11,o),
(284,25,qs),
(284,41,o),
(258,49,o),
(248,49,qs),
(236,50,o),
(217,51,o),
(217,65,qs),
(217,71,o),
(233,105,o),
(257,150,o),
(286,201,o),
(299,223,q),
(526,223,l),
(526,190,o),
(525,130,o),
(525,84,qs),
(525,63,o),
(491,48,o),
(444,48,qs),
(424,48,o),
(405,39,o),
(405,24,qs),
(405,10,o),
(436,0,o),
(451,0,qs),
(512,1,o),
(633,2,o),
(694,2,qs),
(763,2,o),
(892,0,o),
(961,0,qs),
(982,0,o),
(1001,13,o),
(1003,33,qs),
(1006,63,o),
(1012,141,o),
(1017,213,o),
(1019,268,o),
(1019,277,qs),
(1019,283,o),
(1018,298,o),
(1012,311,o),
(1001,320,o),
(991,320,qs),
(970,320,o)
);
},
{
closed = 1;
nodes = (
(342,289,o),
(319,289,q),
(331,318,o),
(365,391,o),
(405,469,o),
(446,547,o),
(483,619,o),
(513,678,o),
(521,698,q),
(521,694,ls),
(521,660,o),
(523,609,o),
(525,554,o),
(527,481,o),
(527,425,qs),
(527,379,o),
(527,314,o),
(526,288,q),
(497,287,o),
(439,287,o),
(410,287,qs),
(386,287,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
73 1 12 9 183 1 11 12 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 88 values pushed */
0 9 10 12 12 9 96 0 11 12 14 12 11 14 104 19 1 0 16 18 16 0 18 104 0 14 0 15 3 14 15 91 20 1 18 0 3 17 18 3 89 0 12 12 10 84 0 10 10 12 67 0 16 16 13 83 0 13 13 15 67 0 17 17 1 84 6 1 1 1 13 67 8 7 5 4 4 2 2 1 83 6 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 86 values pushed */
0 9 10 12 12 9 96 0 11 12 14 12 11 14 104 19 1 0 16 18 16 0 18 104 0 13 0 16 0 13 16 91 0 14 0 15 3 14 15 91 20 1 18 0 3 17 18 3 89 0 12 12 10 84 0 10 10 12 67 0 17 17 1 84 6 1 1 1 13 67 8 7 5 4 4 2 2 1 83 6 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 86 values pushed */
0 9 10 12 12 9 96 0 11 12 14 12 11 14 104 19 1 0 16 18 16 0 18 104 0 13 0 16 0 13 16 91 0 14 0 15 3 14 15 91 20 1 18 0 3 17 18 3 89 0 12 12 10 84 0 10 10 14 67 0 17 17 1 84 6 1 1 1 13 67 8 7 5 4 4 2 2 1 83 6 1 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 48 values pushed */
174 171 1 0 171 192 174 190 159 157 156 149 143 141 131 129 123 114 113 111 102 100 95 82 77 74 63 62 61 57 53 45 41 40 39 38 32 31 26 24 20 12 0 170 1 170 21 15
CALL[ ]	/* CallFunction */";
};
width = 1054;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(950,293,o),
(949,273,qs),
(948,252,o),
(945,195,o),
(941,137,o),
(937,86,o),
(936,73,qs),
(935,60,o),
(927,45,o),
(915,38,o),
(900,36,o),
(893,36,qs),
(564,36,l),
(564,401,l),
(593,402,o),
(649,403,o),
(678,403,qs),
(707,403,o),
(743,402,o),
(757,402,qs),
(772,402,o),
(791,383,o),
(801,355,o),
(805,322,o),
(805,309,qs),
(805,296,o),
(815,280,o),
(822,280,qs),
(826,280,o),
(837,290,o),
(837,307,qs),
(837,335,o),
(835,391,o),
(835,420,qs),
(835,449,o),
(837,504,o),
(837,533,qs),
(837,544,o),
(832,560,o),
(820,560,qs),
(814,560,o),
(807,552,o),
(804,541,o),
(803,531,o),
(803,530,qs),
(803,521,o),
(802,490,o),
(799,461,o),
(792,440,o),
(786,440,qs),
(781,440,o),
(757,439,o),
(726,438,o),
(692,437,o),
(678,437,qs),
(649,437,o),
(593,439,o),
(564,440,q),
(564,785,l),
(867,785,ls),
(877,785,o),
(904,776,o),
(904,757,qs),
(904,645,ls),
(904,631,o),
(909,605,o),
(924,605,qs),
(935,605,o),
(941,632,o),
(941,651,qs),
(941,785,ls),
(941,806,o),
(927,821,o),
(913,821,qs),
(869,821,o),
(815,820,o),
(770,820,o),
(723,819,o),
(686,819,qs),
(667,819,o),
(612,820,o),
(548,820,o),
(478,821,o),
(445,821,qs),
(430,821,o),
(404,815,o),
(404,804,qs),
(404,793,o),
(427,789,o),
(444,789,qs),
(455,789,o),
(482,788,o),
(493,783,q),
(473,744,o),
(417,631,o),
(352,499,o),
(282,358,o),
(215,226,o),
(154,110,o),
(131,69,qs),
(120,51,o),
(96,33,o),
(74,31,qs),
(70,31,o),
(49,29,o),
(22,27,o),
(-7,25,o),
(-18,25,qs),
(-40,25,o),
(-40,14,qs),
(-40,0,o),
(-20,0,qs),
(12,1,o),
(73,2,o),
(105,2,qs),
(137,2,o),
(202,0,o),
(234,0,qs),
(254,0,o),
(271,10,o),
(271,15,qs),
(271,26,o),
(250,29,o),
(240,29,qs),
(229,29,o),
(205,29,o),
(186,32,o),
(173,38,o),
(173,45,qs),
(173,51,o),
(193,95,o),
(223,152,o),
(256,214,o),
(268,238,q),
(522,238,l),
(522,217,o),
(522,180,o),
(521,139,o),
(521,93,o),
(521,64,qs),
(521,43,o),
(487,28,o),
(440,28,qs),
(420,28,o),
(401,22,o),
(401,11,qs),
(401,3,o),
(432,0,o),
(447,0,qs),
(508,1,o),
(629,2,o),
(690,2,qs),
(751,2,o),
(866,0,o),
(927,0,qs),
(947,0,o),
(967,8,o),
(969,33,qs),
(972,63,o),
(977,141,o),
(982,213,o),
(985,268,o),
(985,277,qs),
(985,289,o),
(980,310,o),
(966,310,qs),
(961,310,o)
);
},
{
closed = 1;
nodes = (
(318,274,o),
(288,274,q),
(301,304,o),
(341,388,o),
(386,481,o),
(432,577,o),
(474,663,o),
(508,734,o),
(517,754,q),
(517,750,ls),
(517,716,o),
(519,648,o),
(521,571,o),
(523,481,o),
(523,425,qs),
(523,374,o),
(523,302,o),
(522,273,q),
(493,272,o),
(435,272,o),
(406,272,qs),
(374,272,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
179 73 2 10 8 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 81 values pushed */
0 10 8 13 8 10 13 104 18 1 0 15 14 15 0 14 104 0 13 0 14 17 13 14 91 19 1 17 0 3 16 17 3 89 11 1 8 8 9 83 0 9 9 12 67 0 15 15 12 83 0 12 12 15 67 0 16 16 1 83 5 1 1 1 13 67 7 6 4 3 2 2 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 79 values pushed */
0 10 8 13 8 10 13 104 18 1 0 15 14 15 0 14 104 0 12 0 15 0 12 15 91 0 13 0 14 17 13 14 91 19 1 17 0 3 16 17 3 89 11 1 8 8 9 83 0 9 9 12 67 0 16 16 1 83 5 1 1 1 13 67 7 6 4 3 2 2 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 79 values pushed */
0 10 8 13 8 10 13 104 18 1 0 15 14 15 0 14 104 0 12 0 15 0 12 15 91 0 13 0 14 17 13 14 91 19 1 17 0 3 16 17 3 89 11 1 8 8 9 83 0 9 9 14 67 0 16 16 1 83 5 1 1 1 13 67 7 6 4 3 2 2 1 83 5 1 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 46 values pushed */
170 167 1 0 167 188 170 186 155 153 152 145 139 137 127 125 117 108 107 105 100 98 93 81 77 74 63 62 60 57 55 47 43 40 32 31 24 22 18 10 0 166 1 166 20 15
CALL[ ]	/* CallFunction */";
};
width = 1023;
}
);
note = AE;
unicode = 198;
},
{
glyphname = AEacute;
kernLeft = AE;
kernRight = AE;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(650,972,o),
(630,972,qs),
(616,972,o),
(577,948,o),
(541,916,o),
(516,881,o),
(516,871,qs),
(516,860,o),
(536,841,o),
(552,841,qs),
(565,841,o),
(605,860,o),
(643,888,o),
(671,921,o),
(671,936,qs),
(671,949,o)
);
},
{
closed = 1;
nodes = (
(957,293,o),
(956,273,qs),
(955,255,o),
(951,207,o),
(947,162,o),
(943,126,o),
(943,121,qs),
(942,108,o),
(934,93,o),
(922,86,o),
(907,84,o),
(900,84,qs),
(622,84,l),
(622,377,l),
(638,378,o),
(669,379,o),
(685,379,qs),
(714,379,o),
(750,378,o),
(764,378,qs),
(779,378,o),
(798,364,o),
(808,343,o),
(812,319,o),
(812,309,qs),
(812,296,o),
(832,270,o),
(853,270,qs),
(877,270,o),
(895,293,o),
(895,307,qs),
(895,335,o),
(893,391,o),
(893,420,qs),
(893,449,o),
(895,504,o),
(895,533,qs),
(895,544,o),
(877,570,o),
(854,570,qs),
(837,570,o),
(810,556,o),
(810,530,qs),
(810,499,o),
(803,464,o),
(793,464,qs),
(788,464,o),
(764,463,o),
(733,462,o),
(699,461,o),
(685,461,qs),
(668,461,o),
(638,463,o),
(622,464,q),
(622,737,l),
(874,737,ls),
(892,737,o),
(911,726,o),
(911,709,qs),
(911,645,ls),
(911,638,o),
(913,622,o),
(922,608,o),
(940,599,o),
(955,599,qs),
(980,599,o),
(999,632,o),
(999,651,qs),
(999,785,ls),
(999,806,o),
(985,821,o),
(971,821,qs),
(917,821,o),
(850,820,o),
(796,820,o),
(738,819,o),
(693,819,qs),
(674,819,o),
(619,820,o),
(555,820,o),
(485,821,o),
(452,821,qs),
(444,821,o),
(424,820,o),
(406,813,o),
(394,798,o),
(394,785,qs),
(394,776,o),
(403,765,o),
(416,759,o),
(430,757,o),
(434,757,qs),
(445,757,o),
(472,756,o),
(483,751,q),
(463,713,o),
(412,610,o),
(355,491,o),
(294,365,o),
(234,245,o),
(179,140,o),
(155,101,qs),
(144,83,o),
(120,65,o),
(98,63,qs),
(95,63,o),
(72,61,o),
(42,59,o),
(9,57,o),
(-3,57,qs),
(-19,57,o),
(-42,43,o),
(-42,27,qs),
(-42,12,o),
(-22,0,o),
(-5,0,qs),
(27,0,o),
(97,2,o),
(129,2,qs),
(161,2,o),
(216,0,o),
(248,0,qs),
(268,0,o),
(293,11,o),
(293,31,qs),
(293,46,o),
(280,59,o),
(270,60,qs),
(258,61,o),
(242,64,o),
(242,68,qs),
(242,71,o),
(257,102,o),
(280,145,o),
(308,193,o),
(321,214,q),
(529,214,l),
(529,186,o),
(528,135,o),
(528,96,qs),
(528,75,o),
(494,60,o),
(447,60,qs),
(427,60,o),
(408,49,o),
(408,32,qs),
(408,14,o),
(439,0,o),
(454,0,qs),
(515,0,o),
(636,2,o),
(697,2,qs),
(771,2,o),
(911,0,o),
(985,0,qs),
(1007,0,o),
(1025,16,o),
(1027,33,qs),
(1031,63,o),
(1037,141,o),
(1041,213,o),
(1043,268,o),
(1043,277,qs),
(1043,283,o),
(1040,300,o),
(1032,315,o),
(1015,326,o),
(1002,326,qs),
(976,326,o)
);
},
{
closed = 1;
nodes = (
(358,297,o),
(341,298,q),
(357,341,o),
(410,445,o),
(465,546,o),
(513,635,o),
(524,664,q),
(524,660,ls),
(524,626,o),
(526,586,o),
(528,543,o),
(530,481,o),
(530,425,qs),
(530,382,o),
(530,321,o),
(529,297,q),
(500,296,o),
(442,296,o),
(413,296,qs),
(395,296,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
89 1 12 9 197 1 11 12 177 1 17 5 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 95 values pushed */
0 1 0 1 106 0 0 10 0 106 0 9 10 12 12 9 96 0 11 12 14 12 11 96 19 1 2 16 18 16 2 18 104 0 14 0 15 5 14 15 91 20 1 18 0 5 17 18 5 89 0 12 12 10 84 0 10 10 12 67 0 16 16 13 83 0 13 13 23 67 0 17 17 3 84 6 1 3 3 13 67 8 7 2 4 4 3 83 6 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 96 values pushed */
0 1 0 1 106 0 0 10 0 106 0 9 10 12 12 9 96 0 11 12 14 12 11 14 104 19 1 2 16 18 16 2 18 104 0 14 0 15 5 14 15 91 20 1 18 0 5 17 18 5 89 0 12 12 10 84 0 10 10 12 67 0 16 16 13 83 0 13 13 23 67 0 17 17 3 84 6 1 3 3 13 67 8 7 2 4 4 3 83 6 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 94 values pushed */
0 1 0 1 106 0 0 10 0 106 0 9 10 12 12 9 96 0 11 12 14 12 11 14 104 19 1 2 16 18 16 2 18 104 0 13 0 16 2 13 16 91 0 14 0 15 5 14 15 91 20 1 18 0 5 17 18 5 89 0 12 12 10 84 0 10 10 12 67 0 17 17 3 84 6 1 3 3 13 67 8 7 2 4 4 3 83 6 1 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 94 values pushed */
0 1 0 1 106 0 0 10 0 106 0 9 10 12 12 9 96 0 11 12 14 12 11 14 104 19 1 2 16 18 16 2 18 104 0 13 0 16 2 13 16 91 0 14 0 15 5 14 15 91 20 1 18 0 5 17 18 5 89 0 12 12 10 84 0 10 10 14 67 0 17 17 3 84 6 1 3 3 13 67 8 7 2 4 4 3 83 6 1 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 46 values pushed */
188 185 17 16 185 204 188 202 173 171 170 163 157 155 145 143 139 130 129 127 120 118 113 100 93 90 79 78 77 73 69 61 48 47 42 40 36 28 16 184 17 184 38 36 21 17
CALL[ ]	/* CallFunction */";
};
width = 1076;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(643,972,o),
(628,972,qs),
(617,972,o),
(581,950,o),
(547,919,o),
(522,887,o),
(522,877,qs),
(522,867,o),
(535,854,o),
(546,854,qs),
(556,854,o),
(595,872,o),
(632,899,o),
(660,929,o),
(660,941,qs),
(660,955,o)
);
},
{
closed = 1;
nodes = (
(954,293,o),
(953,273,qs),
(952,255,o),
(949,207,o),
(945,157,o),
(941,115,o),
(940,103,qs),
(939,90,o),
(931,75,o),
(919,68,o),
(904,66,o),
(897,66,qs),
(598,66,l),
(598,386,l),
(619,387,o),
(661,388,o),
(682,388,qs),
(711,388,o),
(747,387,o),
(761,387,qs),
(776,387,o),
(795,371,o),
(805,347,o),
(809,320,o),
(809,309,qs),
(809,296,o),
(825,274,o),
(840,274,qs),
(856,274,o),
(871,292,o),
(871,307,qs),
(871,335,o),
(869,391,o),
(869,420,qs),
(869,449,o),
(871,504,o),
(871,533,qs),
(871,544,o),
(858,566,o),
(841,566,qs),
(826,566,o),
(807,551,o),
(807,530,qs),
(807,522,o),
(806,497,o),
(803,473,o),
(796,455,o),
(790,455,qs),
(785,455,o),
(761,454,o),
(730,453,o),
(696,452,o),
(682,452,qs),
(660,452,o),
(619,454,o),
(598,455,q),
(598,755,l),
(871,755,ls),
(876,755,o),
(889,754,o),
(900,749,o),
(908,737,o),
(908,727,qs),
(908,645,ls),
(908,638,o),
(910,623,o),
(916,610,o),
(930,601,o),
(942,601,qs),
(962,601,o),
(975,632,o),
(975,651,qs),
(975,785,ls),
(975,806,o),
(961,821,o),
(947,821,qs),
(897,821,o),
(835,820,o),
(785,820,o),
(732,819,o),
(690,819,qs),
(671,819,o),
(616,820,o),
(552,820,o),
(482,821,o),
(449,821,qs),
(441,821,o),
(424,820,o),
(408,814,o),
(398,802,o),
(398,792,qs),
(398,776,o),
(426,769,o),
(438,769,qs),
(449,769,o),
(476,768,o),
(487,763,q),
(467,725,o),
(414,618,o),
(353,494,o),
(289,362,o),
(226,238,o),
(169,129,o),
(145,89,qs),
(134,71,o),
(110,53,o),
(88,51,qs),
(84,51,o),
(61,49,o),
(32,47,o),
(2,45,o),
(-9,45,qs),
(-23,45,o),
(-41,34,o),
(-41,22,qs),
(-41,10,o),
(-25,0,o),
(-11,0,qs),
(21,0,o),
(87,2,o),
(119,2,qs),
(151,2,o),
(210,0,o),
(242,0,qs),
(262,0,o),
(284,11,o),
(284,25,qs),
(284,41,o),
(258,49,o),
(248,49,qs),
(236,50,o),
(217,51,o),
(217,65,qs),
(217,71,o),
(233,105,o),
(257,150,o),
(286,201,o),
(299,223,q),
(526,223,l),
(526,190,o),
(525,130,o),
(525,84,qs),
(525,63,o),
(491,48,o),
(444,48,qs),
(424,48,o),
(405,39,o),
(405,24,qs),
(405,10,o),
(436,0,o),
(451,0,qs),
(512,1,o),
(633,2,o),
(694,2,qs),
(763,2,o),
(892,0,o),
(961,0,qs),
(982,0,o),
(1001,13,o),
(1003,33,qs),
(1006,63,o),
(1012,141,o),
(1017,213,o),
(1019,268,o),
(1019,277,qs),
(1019,283,o),
(1018,298,o),
(1012,311,o),
(1001,320,o),
(991,320,qs),
(970,320,o)
);
},
{
closed = 1;
nodes = (
(342,289,o),
(319,289,q),
(331,318,o),
(365,391,o),
(405,469,o),
(446,547,o),
(483,619,o),
(513,678,o),
(521,698,q),
(521,694,ls),
(521,660,o),
(523,609,o),
(525,554,o),
(527,481,o),
(527,425,qs),
(527,379,o),
(527,314,o),
(526,288,q),
(497,287,o),
(439,287,o),
(410,287,qs),
(386,287,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
89 1 14 11 199 1 13 14 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 98 values pushed */
0 1 0 1 106 0 0 12 0 106 0 11 12 14 14 11 96 0 13 14 16 14 13 16 104 21 1 2 18 20 18 2 20 104 0 16 0 17 5 16 17 91 22 1 20 0 5 19 20 5 89 0 14 14 12 84 0 12 12 12 67 0 18 18 15 83 0 15 15 15 67 0 19 19 3 84 8 1 3 3 13 67 10 9 7 6 4 4 4 3 83 8 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 96 values pushed */
0 1 0 1 106 0 0 12 0 106 0 11 12 14 14 11 96 0 13 14 16 14 13 16 104 21 1 2 18 20 18 2 20 104 0 15 0 18 2 15 18 91 0 16 0 17 5 16 17 91 22 1 20 0 5 19 20 5 89 0 14 14 12 84 0 12 12 12 67 0 19 19 3 84 8 1 3 3 13 67 10 9 7 6 4 4 4 3 83 8 1 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 96 values pushed */
0 1 0 1 106 0 0 12 0 106 0 11 12 14 14 11 96 0 13 14 16 14 13 16 104 21 1 2 18 20 18 2 20 104 0 15 0 18 2 15 18 91 0 16 0 17 5 16 17 91 22 1 20 0 5 19 20 5 89 0 14 14 12 84 0 12 12 14 67 0 19 19 3 84 8 1 3 3 13 67 10 9 7 6 4 4 4 3 83 8 1 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 50 values pushed */
190 187 17 16 187 208 190 206 175 173 172 165 159 157 147 145 139 130 129 127 118 116 111 98 93 90 79 78 77 73 69 61 57 56 55 54 48 47 42 40 36 28 16 186 17 186 38 36 23 17
CALL[ ]	/* CallFunction */";
};
width = 1054;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(633,972,o),
(625,972,qs),
(618,972,o),
(586,952,o),
(554,925,o),
(530,896,o),
(530,887,qs),
(530,876,o),
(538,876,qs),
(545,876,o),
(580,893,o),
(616,917,o),
(644,942,o),
(644,950,qs),
(644,964,o)
);
},
{
closed = 1;
nodes = (
(950,293,o),
(949,273,qs),
(948,252,o),
(945,195,o),
(941,137,o),
(937,86,o),
(936,73,qs),
(935,60,o),
(927,45,o),
(915,38,o),
(900,36,o),
(893,36,qs),
(564,36,l),
(564,401,l),
(593,402,o),
(649,403,o),
(678,403,qs),
(707,403,o),
(743,402,o),
(757,402,qs),
(772,402,o),
(791,383,o),
(801,355,o),
(805,322,o),
(805,309,qs),
(805,296,o),
(815,280,o),
(822,280,qs),
(826,280,o),
(837,290,o),
(837,307,qs),
(837,335,o),
(835,391,o),
(835,420,qs),
(835,449,o),
(837,504,o),
(837,533,qs),
(837,544,o),
(832,560,o),
(820,560,qs),
(814,560,o),
(807,552,o),
(804,541,o),
(803,531,o),
(803,530,qs),
(803,521,o),
(802,490,o),
(799,461,o),
(792,440,o),
(786,440,qs),
(781,440,o),
(757,439,o),
(726,438,o),
(692,437,o),
(678,437,qs),
(649,437,o),
(593,439,o),
(564,440,q),
(564,785,l),
(867,785,ls),
(877,785,o),
(904,776,o),
(904,757,qs),
(904,645,ls),
(904,631,o),
(909,605,o),
(924,605,qs),
(935,605,o),
(941,632,o),
(941,651,qs),
(941,785,ls),
(941,806,o),
(927,821,o),
(913,821,qs),
(869,821,o),
(815,820,o),
(770,820,o),
(723,819,o),
(686,819,qs),
(667,819,o),
(612,820,o),
(548,820,o),
(478,821,o),
(445,821,qs),
(430,821,o),
(404,815,o),
(404,804,qs),
(404,793,o),
(427,789,o),
(444,789,qs),
(455,789,o),
(482,788,o),
(493,783,q),
(473,744,o),
(417,631,o),
(352,499,o),
(282,358,o),
(215,226,o),
(154,110,o),
(131,69,qs),
(120,51,o),
(96,33,o),
(74,31,qs),
(70,31,o),
(49,29,o),
(22,27,o),
(-7,25,o),
(-18,25,qs),
(-40,25,o),
(-40,14,qs),
(-40,0,o),
(-20,0,qs),
(12,1,o),
(73,2,o),
(105,2,qs),
(137,2,o),
(202,0,o),
(234,0,qs),
(254,0,o),
(271,10,o),
(271,15,qs),
(271,26,o),
(250,29,o),
(240,29,qs),
(229,29,o),
(205,29,o),
(186,32,o),
(173,38,o),
(173,45,qs),
(173,51,o),
(193,95,o),
(223,152,o),
(256,214,o),
(268,238,q),
(522,238,l),
(522,217,o),
(522,180,o),
(521,139,o),
(521,93,o),
(521,64,qs),
(521,43,o),
(487,28,o),
(440,28,qs),
(420,28,o),
(401,22,o),
(401,11,qs),
(401,3,o),
(432,0,o),
(447,0,qs),
(508,1,o),
(629,2,o),
(690,2,qs),
(751,2,o),
(866,0,o),
(927,0,qs),
(947,0,o),
(967,8,o),
(969,33,qs),
(972,63,o),
(977,141,o),
(982,213,o),
(985,268,o),
(985,277,qs),
(985,289,o),
(980,310,o),
(966,310,qs),
(961,310,o)
);
},
{
closed = 1;
nodes = (
(318,274,o),
(288,274,q),
(301,304,o),
(341,388,o),
(386,481,o),
(432,577,o),
(474,663,o),
(508,734,o),
(517,754,q),
(517,750,ls),
(517,716,o),
(519,648,o),
(521,571,o),
(523,481,o),
(523,425,qs),
(523,374,o),
(523,302,o),
(522,273,q),
(493,272,o),
(435,272,o),
(406,272,qs),
(374,272,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
194 88 2 12 10 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 91 values pushed */
0 1 0 1 106 0 0 11 0 106 0 12 10 15 10 12 15 104 20 1 2 17 16 17 2 16 104 0 15 0 16 19 15 16 91 21 1 19 0 5 18 19 5 89 13 1 10 10 11 83 0 11 11 12 67 0 17 17 14 83 0 14 14 15 67 0 18 18 3 83 7 1 3 3 13 67 9 8 6 3 4 4 3 83 7 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 89 values pushed */
0 1 0 1 106 0 0 11 0 106 0 12 10 15 10 12 15 104 20 1 2 17 16 17 2 16 104 0 14 0 17 2 14 17 91 0 15 0 16 19 15 16 91 21 1 19 0 5 18 19 5 89 13 1 10 10 11 83 0 11 11 12 67 0 18 18 3 83 7 1 3 3 13 67 9 8 6 3 4 4 3 83 7 1 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 89 values pushed */
0 1 0 1 106 0 0 11 0 106 0 12 10 15 10 12 15 104 20 1 2 17 16 17 2 16 104 0 14 0 17 2 14 17 91 0 15 0 16 19 15 16 91 21 1 19 0 5 18 19 5 89 13 1 10 10 11 83 0 11 11 14 67 0 18 18 3 83 7 1 3 3 13 67 9 8 6 3 4 4 3 83 7 1 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 48 values pushed */
185 182 16 15 182 203 185 201 170 168 167 160 154 152 142 140 132 123 122 120 115 113 108 96 92 89 78 77 75 72 70 62 58 55 47 46 39 37 33 25 15 181 16 181 37 36 22 17
CALL[ ]	/* CallFunction */";
};
width = 1023;
}
);
note = AEacute;
unicode = 508;
},
{
glyphname = B;
kernLeft = B;
kernRight = B;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,52,o),
(46,35,qs),
(46,18,o),
(68,0,o),
(94,0,qs),
(308,0,ls),
(380,0,o),
(513,23,o),
(615,75,o),
(676,159,o),
(676,220,qs),
(676,299,o),
(574,405,o),
(488,421,q),
(556,439,o),
(634,542,o),
(634,612,qs),
(634,664,o),
(590,742,o),
(517,794,o),
(420,821,o),
(367,821,qs),
(357,821,o),
(294,820,o),
(210,819,o),
(118,818,o),
(79,818,qs),
(63,818,o),
(40,796,o),
(40,780,qs),
(40,761,o),
(57,738,o),
(80,738,qs),
(109,738,o),
(128,724,o),
(130,701,qs),
(131,676,o),
(134,585,o),
(137,477,o),
(138,362,o),
(138,313,qs),
(138,275,o),
(137,164,o),
(137,100,qs),
(137,92,o),
(126,83,o),
(109,78,o),
(89,76,o),
(81,76,qs),
(62,76,o)
);
},
{
closed = 1;
nodes = (
(455,362,o),
(533,331,o),
(581,272,o),
(581,222,qs),
(581,181,o),
(536,127,o),
(447,94,o),
(316,80,o),
(229,80,q),
(229,368,l),
(249,369,o),
(279,371,o),
(308,371,qs),
(357,371,o)
);
},
{
closed = 1;
nodes = (
(434,729,o),
(500,699,o),
(541,646,o),
(541,605,qs),
(541,560,o),
(503,502,o),
(437,467,o),
(349,453,o),
(299,453,qs),
(266,453,o),
(237,454,o),
(229,456,q),
(229,737,l),
(237,738,o),
(275,741,o),
(310,741,qs),
(352,741,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
68 67 13 3 7 1 35 1 4 7 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
10 6 2 1 1 2 83 0 2 2 12 67 9 1 4 4 7 83 0 7 7 15 67 5 8 2 0 0 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 7 9 1 4 0 7 4 91 10 6 2 1 1 2 83 0 2 2 12 67 5 8 2 0 0 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 7 9 1 4 0 7 4 91 10 6 2 1 1 2 83 0 2 2 14 67 5 8 2 0 0 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
65 64 53 50 1 0 72 69 64 80 65 80 55 54 50 63 53 63 45 42 28 21 17 15 0 49 1 49 11 15
CALL[ ]	/* CallFunction */";
};
width = 705;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(38,39,o),
(38,25,qs),
(38,11,o),
(64,0,o),
(89,0,qs),
(289,0,ls),
(361,0,o),
(494,23,o),
(596,75,o),
(657,159,o),
(657,220,qs),
(657,299,o),
(555,405,o),
(469,421,q),
(537,439,o),
(615,542,o),
(615,612,qs),
(615,664,o),
(571,742,o),
(498,794,o),
(401,821,o),
(348,821,qs),
(339,821,o),
(277,820,o),
(195,819,o),
(104,818,o),
(67,818,qs),
(56,818,o),
(41,805,o),
(41,794,qs),
(41,769,o),
(67,769,qs),
(100,769,o),
(131,760,o),
(132,733,qs),
(133,707,o),
(135,608,o),
(138,489,o),
(140,364,o),
(140,313,qs),
(140,272,o),
(139,140,o),
(139,72,qs),
(139,63,o),
(124,54,o),
(102,49,o),
(77,48,o),
(67,48,qs),
(54,48,o)
);
},
{
closed = 1;
nodes = (
(448,370,o),
(531,337,o),
(583,275,o),
(583,222,qs),
(583,184,o),
(551,131,o),
(495,95,o),
(421,75,o),
(338,65,o),
(251,62,o),
(210,62,q),
(210,377,l),
(220,377,o),
(233,378,o),
(248,379,o),
(270,380,o),
(289,380,qs),
(343,380,o)
);
},
{
closed = 1;
nodes = (
(426,744,o),
(498,711,o),
(543,651,o),
(543,605,qs),
(543,546,o),
(485,482,o),
(402,451,o),
(312,444,o),
(280,444,qs),
(247,444,o),
(210,445,o),
(210,447,qs),
(210,753,l),
(220,754,o),
(233,755,qs),
(244,756,o),
(274,757,o),
(291,757,qs),
(336,757,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
72 1 8 7 34 1 4 8 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 2 7 7 1 96 9 1 0 6 3 6 0 96 11 1 7 7 2 84 0 2 2 12 67 5 10 2 4 4 8 83 0 8 8 15 67 0 6 6 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 2 7 7 1 96 9 1 0 6 3 6 0 96 0 8 5 10 2 4 6 8 4 91 11 1 7 7 2 84 0 2 2 12 67 0 6 6 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 2 7 7 1 96 9 1 0 6 3 6 0 96 0 8 5 10 2 4 6 8 4 91 11 1 7 7 2 84 0 2 2 14 67 0 6 6 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
69 67 52 49 2 0 77 74 67 85 69 85 57 55 54 53 49 66 52 66 44 41 27 20 17 15 0 48 2 48 12 15
CALL[ ]	/* CallFunction */";
};
width = 689;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(21,20,o),
(21,12,qs),
(21,3,o),
(49,0,o),
(72,0,qs),
(262,0,ls),
(334,0,o),
(467,23,o),
(569,75,o),
(630,159,o),
(630,220,qs),
(630,299,o),
(528,405,o),
(442,421,q),
(510,439,o),
(588,542,o),
(588,612,qs),
(588,664,o),
(544,742,o),
(471,794,o),
(374,821,o),
(321,821,qs),
(312,821,o),
(252,820,o),
(173,819,o),
(86,818,o),
(50,818,qs),
(39,818,o),
(24,812,o),
(24,804,qs),
(24,798,o),
(36,789,o),
(50,789,qs),
(93,789,o),
(134,779,o),
(135,753,qs),
(136,726,o),
(138,622,o),
(141,497,o),
(143,367,o),
(143,313,qs),
(143,268,o),
(142,126,o),
(142,52,qs),
(142,43,o),
(124,34,o),
(97,29,o),
(65,28,o),
(50,28,qs),
(37,28,o)
);
},
{
closed = 1;
nodes = (
(437,384,o),
(529,348,o),
(586,280,o),
(586,222,qs),
(586,177,o),
(551,114,o),
(491,72,o),
(411,47,o),
(321,35,o),
(227,32,o),
(183,32,q),
(183,392,l),
(193,392,o),
(206,393,o),
(221,394,o),
(243,395,o),
(262,395,qs),
(321,395,o)
);
},
{
closed = 1;
nodes = (
(415,772,o),
(496,731,o),
(546,660,o),
(546,605,qs),
(546,562,o),
(516,503,o),
(467,464,o),
(404,442,o),
(339,432,o),
(277,429,o),
(253,429,qs),
(220,429,o),
(183,430,o),
(183,432,qs),
(183,783,l),
(193,784,o),
(206,785,qs),
(217,786,o),
(247,787,o),
(264,787,qs),
(315,787,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
73 1 8 1 35 1 4 8 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
11 7 2 1 1 2 83 0 2 2 12 67 5 10 2 4 4 8 83 0 8 8 15 67 6 9 2 0 0 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 8 5 10 2 4 0 8 4 91 11 7 2 1 1 2 83 0 2 2 12 67 6 9 2 0 0 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
9 1 0 6 3 6 0 96 0 8 5 10 2 4 6 8 4 91 11 7 2 1 1 2 83 0 2 2 14 67 0 6 6 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
70 68 53 50 2 0 79 75 68 88 70 88 58 56 55 54 50 67 53 67 45 42 28 21 17 15 0 49 2 49 12 15
CALL[ ]	/* CallFunction */";
};
width = 666;
}
);
note = B;
unicode = 66;
},
{
glyphname = C;
kernLeft = C;
kernRight = C;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(592,253,qs),
(573,253,o),
(555,235,o),
(546,207,qs),
(533,168,o),
(497,114,o),
(446,81,o),
(380,66,o),
(337,66,qs),
(285,66,o),
(207,120,o),
(156,212,o),
(130,335,o),
(130,404,qs),
(130,473,o),
(161,601,o),
(218,700,o),
(296,759,o),
(343,759,qs),
(391,759,o),
(458,718,o),
(501,652,o),
(521,567,o),
(522,524,qs),
(523,486,o),
(546,465,o),
(570,465,qs),
(595,465,o),
(613,489,o),
(613,513,qs),
(613,545,o),
(611,602,o),
(611,634,qs),
(611,670,o),
(615,752,o),
(615,787,qs),
(615,791,o),
(613,805,o),
(605,819,o),
(586,829,o),
(570,829,qs),
(546,829,o),
(532,807,o),
(532,793,qs),
(532,791,o),
(533,759,o),
(536,707,q),
(528,728,o),
(497,774,o),
(449,813,o),
(383,838,o),
(342,838,qs),
(279,838,o),
(167,771,o),
(83,654,o),
(34,496,o),
(34,405,qs),
(34,293,o),
(85,134,o),
(169,33,o),
(275,-14,o),
(329,-14,qs),
(410,-14,o),
(524,36,o),
(595,109,o),
(628,190,o),
(628,222,qs),
(628,253,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 6 3 5 3 6 5 104 0 4 4 1 83 2 1 1 1 20 67 0 3 3 1 83 2 1 1 1 20 67 0 5 5 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 6 3 5 3 6 5 104 0 4 4 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 12 67 0 5 5 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 6 3 5 3 6 5 104 0 1 0 4 3 1 4 91 0 2 0 3 6 2 3 91 0 5 5 0 83 0 0 0 21 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 40 38 44 41 40 36 7 22
CALL[ ]	/* CallFunction */";
};
width = 661;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(581,249,qs),
(563,249,o),
(553,223,o),
(549,203,qs),
(543,170,o),
(509,114,o),
(456,72,o),
(384,48,o),
(340,48,qs),
(283,48,o),
(197,104,o),
(140,201,o),
(112,331,o),
(112,404,qs),
(112,476,o),
(146,611,o),
(208,715,o),
(294,777,o),
(346,777,qs),
(395,777,o),
(463,736,o),
(506,667,o),
(525,576,o),
(525,527,qs),
(525,490,o),
(543,468,o),
(561,468,qs),
(583,468,o),
(595,493,o),
(595,502,qs),
(595,534,o),
(593,602,o),
(593,634,qs),
(593,670,o),
(597,755,o),
(597,790,qs),
(597,793,o),
(595,805,o),
(588,815,o),
(573,823,o),
(561,823,qs),
(543,823,o),
(528,800,o),
(528,788,q),
(528,788,o),
(528,784,o),
(529,767,o),
(531,733,o),
(533,702,q),
(525,723,o),
(496,771,o),
(450,811,o),
(386,838,o),
(345,838,qs),
(282,838,o),
(170,771,o),
(86,654,o),
(37,496,o),
(37,405,qs),
(37,293,o),
(88,134,o),
(172,33,o),
(278,-14,o),
(332,-14,qs),
(407,-14,o),
(513,35,o),
(579,107,o),
(610,187,o),
(610,219,qs),
(610,249,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
25 1 4 2 20 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 6 3 5 3 6 5 104 0 4 4 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 12 67 0 5 5 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 6 3 5 3 6 5 104 0 1 0 4 3 1 4 91 0 3 3 2 83 0 2 2 14 67 0 5 5 0 83 0 0 0 21 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 40 38 44 43 40 36 7 22
CALL[ ]	/* CallFunction */";
};
width = 646;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(570,243,qs),
(565,243,o),
(559,233,o),
(556,219,o),
(554,203,o),
(553,197,qs),
(544,158,o),
(509,92,o),
(457,44,o),
(388,18,o),
(344,18,qs),
(279,18,o),
(182,79,o),
(118,184,o),
(86,325,o),
(86,404,qs),
(86,482,o),
(125,627,o),
(194,740,o),
(291,807,o),
(350,807,qs),
(399,807,o),
(467,762,o),
(510,687,o),
(529,587,o),
(529,532,qs),
(529,510,o),
(536,473,o),
(550,473,qs),
(563,473,o),
(569,493,o),
(569,507,qs),
(569,539,o),
(567,602,o),
(567,634,qs),
(567,670,o),
(571,755,o),
(571,790,qs),
(571,797,o),
(561,813,o),
(551,813,qs),
(532,813,o),
(532,788,q),
(532,788,o),
(532,784,o),
(533,767,o),
(535,733,o),
(537,702,q),
(529,723,o),
(500,771,o),
(454,811,o),
(390,838,o),
(349,838,qs),
(286,838,o),
(174,771,o),
(90,654,o),
(41,496,o),
(41,405,qs),
(41,293,o),
(92,134,o),
(176,33,o),
(282,-14,o),
(336,-14,qs),
(403,-14,o),
(497,34,o),
(557,103,o),
(584,182,o),
(584,214,qs),
(584,243,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
25 20 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 6 3 5 3 6 5 104 0 4 4 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 14 67 0 5 5 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 6 3 5 3 6 5 104 0 1 0 4 3 1 4 91 0 3 3 2 83 0 2 2 14 67 0 5 5 0 83 0 0 0 21 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
40 40 38 42 42 40 36 7 22
CALL[ ]	/* CallFunction */";
};
width = 625;
}
);
note = C;
unicode = 67;
},
{
glyphname = Cacute;
kernLeft = C;
kernRight = C;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(415,972,o),
(395,972,qs),
(381,972,o),
(342,948,o),
(306,916,o),
(281,881,o),
(281,871,qs),
(281,859,o),
(301,840,o),
(317,840,qs),
(330,840,o),
(370,859,o),
(408,887,o),
(436,921,o),
(436,935,qs),
(436,949,o)
);
},
{
closed = 1;
nodes = (
(592,253,qs),
(573,253,o),
(555,235,o),
(546,207,qs),
(533,168,o),
(497,114,o),
(446,81,o),
(380,66,o),
(337,66,qs),
(285,66,o),
(207,120,o),
(156,212,o),
(130,335,o),
(130,404,qs),
(130,473,o),
(161,601,o),
(218,700,o),
(296,759,o),
(343,759,qs),
(391,759,o),
(458,718,o),
(501,652,o),
(521,567,o),
(522,524,qs),
(523,486,o),
(546,465,o),
(570,465,qs),
(595,465,o),
(613,489,o),
(613,513,qs),
(613,545,o),
(611,602,o),
(611,634,qs),
(611,670,o),
(615,752,o),
(615,787,qs),
(615,791,o),
(613,805,o),
(605,819,o),
(586,829,o),
(570,829,qs),
(546,829,o),
(532,807,o),
(532,793,qs),
(532,791,o),
(533,759,o),
(536,707,q),
(528,728,o),
(497,774,o),
(449,813,o),
(383,838,o),
(342,838,qs),
(279,838,o),
(167,771,o),
(83,654,o),
(34,496,o),
(34,405,qs),
(34,293,o),
(85,134,o),
(169,33,o),
(275,-14,o),
(329,-14,qs),
(410,-14,o),
(524,36,o),
(595,109,o),
(628,190,o),
(628,222,qs),
(628,253,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
36 1 5 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 1 0 3 1 94 0 0 3 0 106 0 8 5 7 5 8 7 104 0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 7 7 2 83 0 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 1 106 0 0 3 0 106 0 8 5 7 5 8 7 104 0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 7 7 2 83 0 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 3 0 106 0 8 5 7 5 8 7 104 0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 12 67 0 7 7 2 83 0 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 0 0 3 0 106 0 8 5 7 5 8 7 104 0 3 0 6 5 3 6 92 0 4 0 5 8 4 5 91 0 7 7 2 83 0 2 2 21 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 40 38 44 41 40 38 38 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 661;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(424,972,o),
(409,972,qs),
(398,972,o),
(362,950,o),
(328,919,o),
(303,887,o),
(303,877,qs),
(303,867,o),
(316,854,o),
(327,854,qs),
(337,854,o),
(376,872,o),
(413,899,o),
(441,929,o),
(441,941,qs),
(441,955,o)
);
},
{
closed = 1;
nodes = (
(581,249,qs),
(563,249,o),
(553,223,o),
(549,203,qs),
(543,170,o),
(509,114,o),
(456,72,o),
(384,48,o),
(340,48,qs),
(283,48,o),
(197,104,o),
(140,201,o),
(112,331,o),
(112,404,qs),
(112,476,o),
(146,611,o),
(208,715,o),
(294,777,o),
(346,777,qs),
(395,777,o),
(463,736,o),
(506,667,o),
(525,576,o),
(525,527,qs),
(525,490,o),
(543,468,o),
(561,468,qs),
(583,468,o),
(595,493,o),
(595,502,qs),
(595,534,o),
(593,602,o),
(593,634,qs),
(593,670,o),
(597,755,o),
(597,790,qs),
(597,793,o),
(595,805,o),
(588,815,o),
(573,823,o),
(561,823,qs),
(543,823,o),
(528,800,o),
(528,788,q),
(528,788,o),
(528,784,o),
(529,767,o),
(531,733,o),
(533,702,q),
(525,723,o),
(496,771,o),
(450,811,o),
(386,838,o),
(345,838,qs),
(282,838,o),
(170,771,o),
(86,654,o),
(37,496,o),
(37,405,qs),
(37,293,o),
(88,134,o),
(172,33,o),
(278,-14,o),
(332,-14,qs),
(407,-14,o),
(513,35,o),
(579,107,o),
(610,187,o),
(610,219,qs),
(610,249,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
41 1 6 4 36 1 5 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 3 0 106 0 8 5 7 5 8 7 104 0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 12 67 0 7 7 2 84 0 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 106 0 0 3 0 106 0 8 5 7 5 8 7 104 0 3 0 6 5 3 6 91 0 5 5 4 83 0 4 4 14 67 0 7 7 2 84 0 2 2 21 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 40 38 44 43 40 38 38 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 646;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(394,971,o),
(386,971,qs),
(379,971,o),
(347,951,o),
(315,924,o),
(291,895,o),
(291,886,qs),
(291,875,o),
(299,875,qs),
(306,875,o),
(341,892,o),
(377,916,o),
(405,941,o),
(405,949,qs),
(405,963,o)
);
},
{
closed = 1;
nodes = (
(570,243,qs),
(565,243,o),
(559,233,o),
(556,219,o),
(554,203,o),
(553,197,qs),
(544,158,o),
(509,92,o),
(457,44,o),
(388,18,o),
(344,18,qs),
(279,18,o),
(182,79,o),
(118,184,o),
(86,325,o),
(86,404,qs),
(86,482,o),
(125,627,o),
(194,740,o),
(291,807,o),
(350,807,qs),
(399,807,o),
(467,762,o),
(510,687,o),
(529,587,o),
(529,532,qs),
(529,510,o),
(536,473,o),
(550,473,qs),
(563,473,o),
(569,493,o),
(569,507,qs),
(569,539,o),
(567,602,o),
(567,634,qs),
(567,670,o),
(571,755,o),
(571,790,qs),
(571,797,o),
(561,813,o),
(551,813,qs),
(532,813,o),
(532,788,q),
(532,788,o),
(532,784,o),
(533,767,o),
(535,733,o),
(537,702,q),
(529,723,o),
(500,771,o),
(454,811,o),
(390,838,o),
(349,838,qs),
(286,838,o),
(174,771,o),
(90,654,o),
(41,496,o),
(41,405,qs),
(41,293,o),
(92,134,o),
(176,33,o),
(282,-14,o),
(336,-14,qs),
(403,-14,o),
(497,34,o),
(557,103,o),
(584,182,o),
(584,214,qs),
(584,243,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
40 35 2 5 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 3 1 94 0 0 3 0 106 0 8 5 7 5 8 7 104 0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 14 67 0 7 7 2 83 0 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 3 0 106 0 8 5 7 5 8 7 104 0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 14 67 0 7 7 2 83 0 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 106 0 0 3 0 106 0 8 5 7 5 8 7 104 0 3 0 6 5 3 6 92 0 5 5 4 83 0 4 4 14 67 0 7 7 2 83 0 2 2 21 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
40 40 38 42 42 40 38 37 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 625;
}
);
note = Cacute;
unicode = 262;
},
{
glyphname = Ccaron;
kernLeft = C;
kernRight = C;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(592,253,qs),
(573,253,o),
(555,235,o),
(546,207,qs),
(533,168,o),
(497,114,o),
(446,81,o),
(380,66,o),
(337,66,qs),
(285,66,o),
(207,120,o),
(156,212,o),
(130,335,o),
(130,404,qs),
(130,473,o),
(161,601,o),
(218,700,o),
(296,759,o),
(343,759,qs),
(391,759,o),
(458,718,o),
(501,652,o),
(521,567,o),
(522,524,qs),
(523,486,o),
(546,465,o),
(570,465,qs),
(595,465,o),
(613,489,o),
(613,513,qs),
(613,545,o),
(611,602,o),
(611,634,qs),
(611,670,o),
(615,752,o),
(615,787,qs),
(615,791,o),
(613,805,o),
(605,819,o),
(586,829,o),
(570,829,qs),
(546,829,o),
(532,807,o),
(532,793,qs),
(532,791,o),
(533,759,o),
(536,707,q),
(529,726,o),
(501,769,o),
(458,806,o),
(401,833,o),
(365,837,q),
(380,844,o),
(419,872,o),
(454,905,o),
(478,938,o),
(478,951,qs),
(478,958,o),
(473,972,o),
(465,972,qs),
(460,972,o),
(434,965,o),
(400,951,o),
(362,933,o),
(345,922,q),
(330,933,o),
(293,951,o),
(259,965,o),
(231,972,o),
(226,972,qs),
(220,972,o),
(213,963,o),
(213,958,qs),
(213,942,o),
(238,906,o),
(273,872,o),
(312,844,o),
(326,837,q),
(266,833,o),
(159,763,o),
(80,647,o),
(34,493,o),
(34,405,qs),
(34,293,o),
(85,134,o),
(169,33,o),
(275,-14,o),
(329,-14,qs),
(410,-14,o),
(524,36,o),
(595,109,o),
(628,190,o),
(628,222,qs),
(628,253,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
41 28 2 1 2 46 1 5 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
3 1 2 1 2 106 0 8 5 7 5 8 7 104 0 6 6 1 83 4 1 1 1 20 67 0 5 5 1 83 4 1 1 1 20 67 0 7 7 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
3 1 2 1 2 106 0 8 5 7 5 8 7 104 0 6 6 1 83 0 1 1 20 67 0 5 5 4 83 0 4 4 12 67 0 7 7 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
3 1 2 1 2 106 0 8 5 7 5 8 7 104 0 1 0 6 5 1 6 91 0 4 0 5 8 4 5 91 0 7 7 0 83 0 0 0 21 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
93 91 85 83 75 73 67 65 53 51 40 39 24 36 9 19
CALL[ ]	/* CallFunction */";
};
width = 661;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(430,964,o),
(396,950,o),
(358,931,o),
(341,921,q),
(324,931,o),
(286,950,o),
(253,964,o),
(227,972,o),
(222,972,qs),
(211,972,o),
(211,959,qs),
(211,943,o),
(246,904,o),
(291,870,o),
(333,847,o),
(341,847,qs),
(350,847,o),
(393,871,o),
(438,904,o),
(472,941,o),
(472,955,qs),
(472,962,o),
(467,972,o),
(461,972,qs),
(456,972,o)
);
},
{
closed = 1;
nodes = (
(581,249,qs),
(563,249,o),
(553,223,o),
(549,203,qs),
(543,170,o),
(509,114,o),
(456,72,o),
(384,48,o),
(340,48,qs),
(283,48,o),
(197,104,o),
(140,201,o),
(112,331,o),
(112,404,qs),
(112,476,o),
(146,611,o),
(208,715,o),
(294,777,o),
(346,777,qs),
(395,777,o),
(463,736,o),
(506,667,o),
(525,576,o),
(525,527,qs),
(525,490,o),
(543,468,o),
(561,468,qs),
(583,468,o),
(595,493,o),
(595,502,qs),
(595,534,o),
(593,602,o),
(593,634,qs),
(593,670,o),
(597,755,o),
(597,790,qs),
(597,793,o),
(595,805,o),
(588,815,o),
(573,823,o),
(561,823,qs),
(543,823,o),
(528,800,o),
(528,788,q),
(528,788,o),
(528,784,o),
(529,767,o),
(531,733,o),
(533,702,q),
(525,723,o),
(496,771,o),
(450,811,o),
(386,838,o),
(345,838,qs),
(282,838,o),
(170,771,o),
(86,654,o),
(37,496,o),
(37,405,qs),
(37,293,o),
(88,134,o),
(172,33,o),
(278,-14,o),
(332,-14,qs),
(407,-14,o),
(513,35,o),
(579,107,o),
(610,187,o),
(610,219,qs),
(610,249,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
20 1 1 0 50 1 7 5 45 1 6 7 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
2 10 2 0 1 0 106 0 1 4 1 106 0 9 6 8 6 9 8 104 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 12 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
2 10 2 0 1 0 106 0 1 4 1 106 0 9 6 8 6 9 8 104 0 4 0 7 6 4 7 91 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 94 92 86 84 76 74 68 66 54 52 41 39 31 29 16 14 9 7 0 24 1 24 11 15
CALL[ ]	/* CallFunction */";
};
width = 646;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(434,962,o),
(400,947,o),
(362,929,o),
(345,920,q),
(324,929,o),
(285,947,o),
(254,962,o),
(231,972,o),
(226,972,qs),
(218,972,o),
(218,961,qs),
(218,952,o),
(251,923,o),
(295,896,o),
(336,876,o),
(345,876,qs),
(354,876,o),
(397,896,o),
(440,923,o),
(473,952,o),
(473,961,qs),
(473,972,o),
(465,972,qs),
(460,972,o)
);
},
{
closed = 1;
nodes = (
(570,243,qs),
(565,243,o),
(559,233,o),
(556,219,o),
(554,203,o),
(553,197,qs),
(544,158,o),
(509,92,o),
(457,44,o),
(388,18,o),
(344,18,qs),
(279,18,o),
(182,79,o),
(118,184,o),
(86,325,o),
(86,404,qs),
(86,482,o),
(125,627,o),
(194,740,o),
(291,807,o),
(350,807,qs),
(399,807,o),
(467,762,o),
(510,687,o),
(529,587,o),
(529,532,qs),
(529,510,o),
(536,473,o),
(550,473,qs),
(563,473,o),
(569,493,o),
(569,507,qs),
(569,539,o),
(567,602,o),
(567,634,qs),
(567,670,o),
(571,755,o),
(571,790,qs),
(571,797,o),
(561,813,o),
(551,813,qs),
(532,813,o),
(532,788,q),
(532,788,o),
(532,784,o),
(533,767,o),
(535,733,o),
(537,702,q),
(529,723,o),
(500,771,o),
(454,811,o),
(390,838,o),
(349,838,qs),
(286,838,o),
(174,771,o),
(90,654,o),
(41,496,o),
(41,405,qs),
(41,293,o),
(92,134,o),
(176,33,o),
(282,-14,o),
(336,-14,qs),
(403,-14,o),
(497,34,o),
(557,103,o),
(584,182,o),
(584,214,qs),
(584,243,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
19 1 1 0 49 44 2 6 7 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
2 10 2 0 1 0 106 0 1 4 1 106 0 9 6 8 6 9 8 104 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
2 10 2 0 1 0 106 0 1 4 1 106 0 9 6 8 6 9 8 104 0 4 0 7 6 4 7 91 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 92 90 82 80 72 70 64 62 52 50 40 38 30 28 15 13 8 6 0 23 1 23 11 15
CALL[ ]	/* CallFunction */";
};
width = 625;
}
);
note = Ccaron;
unicode = 268;
},
{
glyphname = Ccedilla;
kernLeft = C;
kernRight = C;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(592,253,qs),
(573,253,o),
(555,235,o),
(546,207,qs),
(533,168,o),
(497,114,o),
(446,81,o),
(380,66,o),
(337,66,qs),
(285,66,o),
(207,120,o),
(156,212,o),
(130,335,o),
(130,404,qs),
(130,473,o),
(161,601,o),
(218,700,o),
(296,759,o),
(343,759,qs),
(391,759,o),
(458,718,o),
(501,652,o),
(521,567,o),
(522,524,qs),
(523,486,o),
(546,465,o),
(570,465,qs),
(595,465,o),
(613,489,o),
(613,513,qs),
(613,545,o),
(611,602,o),
(611,634,qs),
(611,670,o),
(615,752,o),
(615,787,qs),
(615,791,o),
(613,805,o),
(605,819,o),
(586,829,o),
(570,829,qs),
(546,829,o),
(532,807,o),
(532,793,qs),
(532,791,o),
(533,759,o),
(536,707,q),
(528,728,o),
(497,774,o),
(449,813,o),
(383,838,o),
(342,838,qs),
(279,838,o),
(167,771,o),
(83,654,o),
(34,496,o),
(34,405,qs),
(34,302,o),
(78,151,o),
(150,50,o),
(243,-4,o),
(293,-11,q),
(291,-24,o),
(287,-63,o),
(283,-80,qs),
(282,-84,o),
(280,-94,o),
(280,-97,qs),
(280,-108,o),
(295,-130,o),
(318,-130,qs),
(334,-130,o),
(356,-121,o),
(375,-111,o),
(394,-102,o),
(408,-102,qs),
(416,-102,o),
(431,-110,o),
(431,-118,qs),
(431,-130,o),
(413,-140,o),
(386,-140,qs),
(359,-140,o),
(329,-146,o),
(314,-155,o),
(311,-165,o),
(311,-168,qs),
(311,-181,o),
(348,-190,o),
(390,-190,qs),
(415,-190,o),
(462,-180,o),
(498,-161,o),
(519,-132,o),
(519,-112,qs),
(519,-83,o),
(475,-49,o),
(442,-49,qs),
(421,-49,o),
(386,-64,o),
(362,-78,q),
(374,-11,l),
(442,-4,o),
(539,49,o),
(600,118,o),
(628,193,o),
(628,222,qs),
(628,253,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
60 1 7 8 45 1 0 9 6 1 3 0 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 10 7 9 7 10 9 104 0 0 9 3 9 0 3 104 0 3 4 9 3 4 102 0 9 0 4 2 9 4 91 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 67 0 2 2 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 10 7 9 7 10 9 104 0 0 9 3 9 0 3 104 0 3 4 9 3 4 102 0 9 0 4 2 9 4 91 0 2 0 1 2 1 87 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 10 7 9 7 10 9 104 0 0 9 3 9 0 3 104 0 3 4 9 3 4 102 0 9 0 4 2 9 4 91 0 2 0 1 2 1 87 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 10 7 9 7 10 9 104 0 0 9 3 9 0 3 104 0 3 4 9 3 4 102 0 5 0 8 7 5 8 91 0 6 0 7 10 6 7 91 0 9 0 4 2 9 4 91 0 2 1 1 2 79 0 2 2 1 83 0 1 2 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
107 105 99 97 89 87 81 79 67 65 56 54 35 36 38 38 40 11 20
CALL[ ]	/* CallFunction */";
};
width = 661;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (37,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = C;
},
{
alignment = -1;
pos = (316,0);
ref = cedilla;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
26 1 4 2 21 1 3 4 72 1 0 12 73 1 10 7 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 6 3 5 3 6 5 104 13 1 12 5 0 5 12 96 0 11 10 9 0 11 96 0 7 0 10 11 7 10 91 0 4 4 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 12 67 0 5 5 0 83 0 0 0 21 67 0 9 9 8 83 0 8 8 17 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 6 3 5 3 6 5 104 13 1 12 5 0 5 12 96 0 11 10 9 10 11 9 104 0 7 0 10 11 7 10 91 0 4 4 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 12 67 0 5 5 0 83 0 0 0 21 67 0 9 9 8 83 0 8 8 17 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 6 3 5 3 6 5 104 13 1 12 5 0 5 12 96 0 11 10 9 10 11 9 104 0 7 0 10 11 7 10 91 0 9 0 8 9 8 87 0 4 4 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 12 67 0 5 5 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
0 6 3 5 3 6 5 104 13 1 12 5 0 5 12 0 104 0 11 10 9 10 11 9 104 0 7 0 10 11 7 10 91 0 9 0 8 9 8 87 0 4 4 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 12 67 0 5 5 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 69 values pushed */
0 6 3 5 3 6 5 104 13 1 12 5 0 5 12 0 104 0 11 10 9 10 11 9 104 0 1 0 4 3 1 4 91 0 7 0 10 11 7 10 91 0 9 0 8 9 8 87 0 3 3 2 83 0 2 2 14 67 0 5 5 0 83 0 0 0 21 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
71 71 71 110 71 110 102 100 97 95 91 89 38 37 38 40 38 44 43 40 37 14 35
CALL[ ]	/* CallFunction */";
};
width = 646;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(570,243,qs),
(565,243,o),
(559,233,o),
(556,219,o),
(554,203,o),
(553,197,qs),
(544,158,o),
(509,92,o),
(457,44,o),
(388,18,o),
(344,18,qs),
(279,18,o),
(182,79,o),
(118,184,o),
(86,325,o),
(86,404,qs),
(86,482,o),
(125,627,o),
(194,740,o),
(291,807,o),
(350,807,qs),
(399,807,o),
(467,762,o),
(510,687,o),
(529,587,o),
(529,532,qs),
(529,510,o),
(536,473,o),
(550,473,qs),
(563,473,o),
(569,493,o),
(569,507,qs),
(569,539,o),
(567,602,o),
(567,634,qs),
(567,670,o),
(571,755,o),
(571,790,qs),
(571,797,o),
(561,813,o),
(551,813,qs),
(532,813,o),
(532,788,q),
(532,788,o),
(532,784,o),
(533,767,o),
(535,733,o),
(537,702,q),
(529,723,o),
(500,771,o),
(454,811,o),
(390,838,o),
(349,838,qs),
(286,838,o),
(174,771,o),
(90,654,o),
(41,496,o),
(41,405,qs),
(41,296,o),
(90,139,o),
(169,38,o),
(271,-12,o),
(324,-14,q),
(322,-31,o),
(313,-80,o),
(310,-96,qs),
(309,-100,o),
(307,-110,o),
(307,-113,qs),
(307,-117,o),
(315,-125,o),
(323,-125,qs),
(330,-125,o),
(350,-116,o),
(374,-106,o),
(401,-97,o),
(415,-97,qs),
(437,-97,o),
(458,-120,o),
(458,-134,qs),
(458,-157,o),
(408,-177,o),
(362,-177,qs),
(342,-177,o),
(321,-180,o),
(321,-189,qs),
(321,-196,o),
(338,-206,o),
(366,-206,qs),
(391,-206,o),
(438,-196,o),
(474,-177,o),
(495,-148,o),
(495,-128,qs),
(495,-99,o),
(451,-65,o),
(418,-65,qs),
(397,-65,o),
(362,-80,o),
(338,-94,q),
(353,-13,l),
(415,-10,o),
(503,39,o),
(558,108,o),
(584,184,o),
(584,214,qs),
(584,243,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
63 58 2 9 10 6 1 4 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 12 9 11 9 12 11 104 0 5 4 3 0 5 96 0 1 0 4 5 1 4 91 0 10 10 7 83 0 7 7 20 67 0 9 9 8 83 0 8 8 14 67 0 11 11 0 83 6 1 0 0 21 67 0 3 3 2 83 0 2 2 17 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 12 9 11 9 12 11 104 0 5 4 3 4 5 3 104 0 1 0 4 5 1 4 91 0 10 10 7 83 0 7 7 20 67 0 9 9 8 83 0 8 8 14 67 0 11 11 0 83 6 1 0 0 24 67 0 3 3 2 83 0 2 2 17 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 12 9 11 9 12 11 104 0 5 4 3 4 5 3 104 0 1 0 4 5 1 4 91 0 3 0 2 3 2 87 0 10 10 7 83 0 7 7 20 67 0 9 9 8 83 0 8 8 14 67 0 11 11 0 83 6 1 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 12 9 11 9 12 11 104 0 5 4 3 4 5 3 104 0 7 0 10 9 7 10 91 0 1 0 4 5 1 4 91 0 3 0 2 3 2 87 0 9 9 8 83 0 8 8 14 67 0 11 11 0 83 6 1 0 0 24 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
106 104 96 94 86 84 78 76 42 40 24 35 36 36 38 35 20 13 24
CALL[ ]	/* CallFunction */";
};
width = 625;
}
);
note = Ccedilla;
unicode = 199;
},
{
glyphname = Ccircumflex;
kernLeft = C;
kernRight = C;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(470,844,o),
(470,851,qs),
(470,867,o),
(435,908,o),
(389,946,o),
(346,972,o),
(337,972,qs),
(330,972,o),
(287,947,o),
(241,909,o),
(205,864,o),
(205,844,qs),
(205,839,o),
(211,830,o),
(218,830,qs),
(229,830,o),
(297,858,o),
(337,880,q),
(377,858,o),
(446,830,o),
(457,830,qs),
(465,830,o)
);
},
{
closed = 1;
nodes = (
(592,253,qs),
(573,253,o),
(555,235,o),
(546,207,qs),
(533,168,o),
(497,114,o),
(446,81,o),
(380,66,o),
(337,66,qs),
(285,66,o),
(207,120,o),
(156,212,o),
(130,335,o),
(130,404,qs),
(130,473,o),
(161,601,o),
(218,700,o),
(296,759,o),
(343,759,qs),
(391,759,o),
(458,718,o),
(501,652,o),
(521,567,o),
(522,524,qs),
(523,486,o),
(546,465,o),
(570,465,qs),
(595,465,o),
(613,489,o),
(613,513,qs),
(613,545,o),
(611,602,o),
(611,634,qs),
(611,670,o),
(615,752,o),
(615,787,qs),
(615,791,o),
(613,805,o),
(605,819,o),
(586,829,o),
(570,829,qs),
(546,829,o),
(532,807,o),
(532,793,qs),
(532,791,o),
(533,759,o),
(536,707,q),
(528,728,o),
(497,774,o),
(449,813,o),
(383,838,o),
(342,838,qs),
(279,838,o),
(167,771,o),
(83,654,o),
(34,496,o),
(34,405,qs),
(34,293,o),
(85,134,o),
(169,33,o),
(275,-14,o),
(329,-14,qs),
(410,-14,o),
(524,36,o),
(595,109,o),
(628,190,o),
(628,222,qs),
(628,253,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
3 1 4 2 42 1 6 7 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 2 4 4 2 94 1 10 2 0 4 7 4 0 7 104 0 9 6 8 6 9 8 104 0 7 7 4 83 5 1 4 4 20 67 0 6 6 4 83 5 1 4 4 20 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 2 4 2 106 1 10 2 0 4 7 4 0 7 104 0 9 6 8 6 9 8 104 0 7 7 4 83 5 1 4 4 20 67 0 6 6 4 83 5 1 4 4 20 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 2 4 2 106 1 10 2 0 4 5 4 0 5 104 0 9 6 8 6 9 8 104 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 12 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 2 4 2 106 1 10 2 0 4 5 4 0 5 104 0 9 6 8 6 9 8 104 0 4 0 7 6 4 7 92 0 5 0 6 9 5 6 91 0 8 8 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 89 87 81 79 71 69 63 61 49 47 38 36 28 26 15 13 7 5 0 21 1 21 11 15
CALL[ ]	/* CallFunction */";
};
width = 661;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(472,857,o),
(472,864,qs),
(472,877,o),
(438,915,o),
(393,948,o),
(350,972,o),
(341,972,qs),
(333,972,o),
(291,949,o),
(246,915,o),
(211,876,o),
(211,860,qs),
(211,847,o),
(222,847,qs),
(227,847,o),
(253,855,o),
(286,869,o),
(324,888,o),
(341,898,q),
(358,888,o),
(396,869,o),
(430,855,o),
(456,847,o),
(461,847,qs),
(467,847,o)
);
},
{
closed = 1;
nodes = (
(581,249,qs),
(563,249,o),
(553,223,o),
(549,203,qs),
(543,170,o),
(509,114,o),
(456,72,o),
(384,48,o),
(340,48,qs),
(283,48,o),
(197,104,o),
(140,201,o),
(112,331,o),
(112,404,qs),
(112,476,o),
(146,611,o),
(208,715,o),
(294,777,o),
(346,777,qs),
(395,777,o),
(463,736,o),
(506,667,o),
(525,576,o),
(525,527,qs),
(525,490,o),
(543,468,o),
(561,468,qs),
(583,468,o),
(595,493,o),
(595,502,qs),
(595,534,o),
(593,602,o),
(593,634,qs),
(593,670,o),
(597,755,o),
(597,790,qs),
(597,793,o),
(595,805,o),
(588,815,o),
(573,823,o),
(561,823,qs),
(543,823,o),
(528,800,o),
(528,788,q),
(528,788,o),
(528,784,o),
(529,767,o),
(531,733,o),
(533,702,q),
(525,723,o),
(496,771,o),
(450,811,o),
(386,838,o),
(345,838,qs),
(282,838,o),
(170,771,o),
(86,654,o),
(37,496,o),
(37,405,qs),
(37,293,o),
(88,134,o),
(172,33,o),
(278,-14,o),
(332,-14,qs),
(407,-14,o),
(513,35,o),
(579,107,o),
(610,187,o),
(610,219,qs),
(610,249,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
5 1 0 2 50 1 7 5 45 1 6 7 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 0 4 2 94 1 10 2 0 4 0 106 0 9 6 8 6 9 8 104 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 12 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 2 0 2 106 1 10 2 0 4 0 106 0 9 6 8 6 9 8 104 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 12 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 2 0 2 106 1 10 2 0 4 0 106 0 9 6 8 6 9 8 104 0 4 0 7 6 4 7 92 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 94 92 86 84 76 74 68 66 54 52 41 39 31 29 18 16 11 9 0 24 1 24 11 15
CALL[ ]	/* CallFunction */";
};
width = 646;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(475,886,qs),
(475,895,o),
(442,925,o),
(399,952,o),
(356,972,o),
(347,972,qs),
(338,972,o),
(297,952,o),
(253,925,o),
(220,895,o),
(220,886,qs),
(220,875,o),
(228,875,qs),
(233,875,o),
(262,885,o),
(297,901,o),
(333,919,o),
(347,928,q),
(360,919,o),
(397,901,o),
(433,885,o),
(462,875,o),
(467,875,qs),
(475,875,o)
);
},
{
closed = 1;
nodes = (
(570,243,qs),
(565,243,o),
(559,233,o),
(556,219,o),
(554,203,o),
(553,197,qs),
(544,158,o),
(509,92,o),
(457,44,o),
(388,18,o),
(344,18,qs),
(279,18,o),
(182,79,o),
(118,184,o),
(86,325,o),
(86,404,qs),
(86,482,o),
(125,627,o),
(194,740,o),
(291,807,o),
(350,807,qs),
(399,807,o),
(467,762,o),
(510,687,o),
(529,587,o),
(529,532,qs),
(529,510,o),
(536,473,o),
(550,473,qs),
(563,473,o),
(569,493,o),
(569,507,qs),
(569,539,o),
(567,602,o),
(567,634,qs),
(567,670,o),
(571,755,o),
(571,790,qs),
(571,797,o),
(561,813,o),
(551,813,qs),
(532,813,o),
(532,788,q),
(532,788,o),
(532,784,o),
(533,767,o),
(535,733,o),
(537,702,q),
(529,723,o),
(500,771,o),
(454,811,o),
(390,838,o),
(349,838,qs),
(286,838,o),
(174,771,o),
(90,654,o),
(41,496,o),
(41,405,qs),
(41,293,o),
(92,134,o),
(176,33,o),
(282,-14,o),
(336,-14,qs),
(403,-14,o),
(497,34,o),
(557,103,o),
(584,182,o),
(584,214,qs),
(584,243,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
5 1 0 2 49 44 2 6 7 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 0 4 2 94 1 10 2 0 4 0 106 0 9 6 8 6 9 8 104 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 2 0 2 106 1 10 2 0 4 0 106 0 9 6 8 6 9 8 104 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 2 0 2 106 1 10 2 0 4 0 106 0 9 6 8 6 9 8 104 0 4 0 7 6 4 7 92 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 92 90 82 80 72 70 64 62 52 50 40 38 30 28 18 16 11 9 0 23 1 23 11 15
CALL[ ]	/* CallFunction */";
};
width = 625;
}
);
note = Ccircumflex;
unicode = 264;
},
{
glyphname = Cdotaccent;
kernLeft = C;
kernRight = C;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(592,253,qs),
(573,253,o),
(555,235,o),
(546,207,qs),
(533,168,o),
(497,114,o),
(446,81,o),
(380,66,o),
(337,66,qs),
(285,66,o),
(207,120,o),
(156,212,o),
(130,335,o),
(130,404,qs),
(130,473,o),
(161,601,o),
(218,700,o),
(296,759,o),
(343,759,qs),
(391,759,o),
(458,718,o),
(501,652,o),
(521,567,o),
(522,524,qs),
(523,486,o),
(546,465,o),
(570,465,qs),
(595,465,o),
(613,489,o),
(613,513,qs),
(613,545,o),
(611,602,o),
(611,634,qs),
(611,670,o),
(615,752,o),
(615,787,qs),
(615,791,o),
(613,805,o),
(605,819,o),
(586,829,o),
(570,829,qs),
(546,829,o),
(532,807,o),
(532,793,qs),
(532,791,o),
(533,759,o),
(536,707,q),
(528,728,o),
(497,774,o),
(449,813,o),
(383,838,o),
(342,838,qs),
(279,838,o),
(167,771,o),
(83,654,o),
(34,496,o),
(34,405,qs),
(34,293,o),
(85,134,o),
(169,33,o),
(275,-14,o),
(329,-14,qs),
(410,-14,o),
(524,36,o),
(595,109,o),
(628,190,o),
(628,222,qs),
(628,253,o)
);
},
{
closed = 1;
nodes = (
(318,840,o),
(343,840,qs),
(354,840,o),
(378,846,o),
(397,862,o),
(410,889,o),
(410,910,qs),
(410,937,o),
(374,971,o),
(350,971,qs),
(332,971,o),
(307,958,o),
(291,939,o),
(284,916,o),
(284,906,qs),
(284,874,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 6 3 5 3 6 5 104 0 7 0 8 1 7 8 91 0 4 4 1 83 2 1 1 1 20 67 0 3 3 1 83 2 1 1 1 20 67 0 5 5 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 6 3 5 3 6 5 104 0 7 0 8 1 7 8 91 0 4 4 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 12 67 0 5 5 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 6 3 5 3 6 5 104 0 7 0 8 1 7 8 91 0 1 0 4 3 1 4 91 0 2 0 3 6 2 3 91 0 5 5 0 83 0 0 0 21 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 37 38 40 38 44 41 40 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 661;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (37,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = C;
},
{
alignment = -1;
pos = (281,336);
ref = dotaccent;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
26 1 4 2 21 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 6 3 5 3 6 5 104 0 7 0 8 1 7 8 91 0 4 4 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 12 67 0 5 5 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 6 3 5 3 6 5 104 0 7 0 8 1 7 8 91 0 1 0 4 3 1 4 91 0 3 3 2 83 0 2 2 14 67 0 5 5 0 83 0 0 0 21 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 37 38 40 38 44 43 40 37 9 35
CALL[ ]	/* CallFunction */";
};
width = 646;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(570,243,qs),
(565,243,o),
(559,233,o),
(556,219,o),
(554,203,o),
(553,197,qs),
(544,158,o),
(509,92,o),
(457,44,o),
(388,18,o),
(344,18,qs),
(279,18,o),
(182,79,o),
(118,184,o),
(86,325,o),
(86,404,qs),
(86,482,o),
(125,627,o),
(194,740,o),
(291,807,o),
(350,807,qs),
(399,807,o),
(467,762,o),
(510,687,o),
(529,587,o),
(529,532,qs),
(529,510,o),
(536,473,o),
(550,473,qs),
(563,473,o),
(569,493,o),
(569,507,qs),
(569,539,o),
(567,602,o),
(567,634,qs),
(567,670,o),
(571,755,o),
(571,790,qs),
(571,797,o),
(561,813,o),
(551,813,qs),
(532,813,o),
(532,788,q),
(532,788,o),
(532,784,o),
(533,767,o),
(535,733,o),
(537,702,q),
(529,723,o),
(500,771,o),
(454,811,o),
(390,838,o),
(349,838,qs),
(286,838,o),
(174,771,o),
(90,654,o),
(41,496,o),
(41,405,qs),
(41,293,o),
(92,134,o),
(176,33,o),
(282,-14,o),
(336,-14,qs),
(403,-14,o),
(497,34,o),
(557,103,o),
(584,182,o),
(584,214,qs),
(584,243,o)
);
},
{
closed = 1;
nodes = (
(334,889,o),
(348,889,qs),
(362,889,o),
(389,908,o),
(389,935,qs),
(389,952,o),
(369,972,o),
(355,972,qs),
(344,972,o),
(329,963,o),
(319,950,o),
(314,936,o),
(314,931,qs),
(314,913,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
25 20 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 6 3 5 3 6 5 104 0 7 0 8 1 7 8 91 0 4 4 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 14 67 0 5 5 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 6 3 5 3 6 5 104 0 7 0 8 1 7 8 91 0 1 0 4 3 1 4 91 0 3 3 2 83 0 2 2 14 67 0 5 5 0 83 0 0 0 21 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 37 40 40 38 42 42 40 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 625;
}
);
note = Cdotaccent;
unicode = 266;
},
{
glyphname = D;
kernLeft = B;
kernRight = D;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(78,738,qs),
(100,738,o),
(132,722,o),
(132,696,qs),
(132,673,o),
(134,600,o),
(137,523,o),
(139,455,o),
(139,437,qs),
(139,371,o),
(139,288,o),
(138,220,o),
(138,150,o),
(138,97,qs),
(138,85,o),
(111,75,o),
(83,73,qs),
(63,71,o),
(41,54,o),
(41,31,qs),
(41,0,o),
(78,0,qs),
(289,0,ls),
(387,0,o),
(535,70,o),
(633,189,o),
(682,349,o),
(682,439,qs),
(682,545,o),
(610,691,o),
(498,781,o),
(362,821,o),
(299,821,qs),
(238,821,o),
(126,820,o),
(76,818,qs),
(59,817,o),
(41,794,o),
(41,776,qs),
(41,738,o)
);
},
{
closed = 1;
nodes = (
(480,691,o),
(552,609,o),
(586,500,o),
(586,439,qs),
(586,363,o),
(552,232,o),
(481,136,o),
(370,82,o),
(293,82,qs),
(284,82,o),
(262,82,o),
(244,84,o),
(231,88,o),
(231,92,qs),
(231,734,l),
(246,735,o),
(278,738,o),
(293,738,qs),
(369,738,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
4 6 3 3 2 2 0 83 0 0 0 12 67 0 5 5 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
4 6 3 3 2 2 0 83 0 0 0 14 67 0 5 5 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
41 40 50 47 43 42 40 58 41 58 39 37 56 82 7 17
CALL[ ]	/* CallFunction */";
};
width = 715;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(42,802,o),
(42,794,qs),
(42,784,o),
(53,769,o),
(65,769,qs),
(78,769,o),
(103,767,o),
(122,759,o),
(133,742,o),
(133,727,qs),
(133,704,o),
(135,621,o),
(138,533,o),
(140,455,o),
(140,437,qs),
(140,369,o),
(140,279,o),
(139,203,o),
(139,127,o),
(139,72,qs),
(139,63,o),
(124,53,o),
(102,49,o),
(79,48,o),
(70,48,qs),
(53,48,o),
(39,37,o),
(39,24,qs),
(39,11,o),
(58,0,o),
(75,0,qs),
(269,0,ls),
(367,0,o),
(515,70,o),
(613,189,o),
(662,349,o),
(662,439,qs),
(662,545,o),
(590,691,o),
(478,781,o),
(342,821,o),
(279,821,qs),
(218,821,o),
(113,820,o),
(63,818,qs),
(52,817,o)
);
},
{
closed = 1;
nodes = (
(473,706,o),
(550,620,o),
(587,504,o),
(587,439,qs),
(587,359,o),
(551,222,o),
(474,121,o),
(355,64,o),
(273,64,qs),
(264,64,o),
(242,64,o),
(224,66,o),
(211,70,o),
(211,74,qs),
(211,752,l),
(226,753,o),
(258,756,o),
(273,756,qs),
(355,756,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 3 0 4 4 3 96 0 2 6 1 6 2 96 5 7 2 4 4 0 84 0 0 0 12 67 0 6 6 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 0 4 4 3 96 0 2 6 1 6 2 96 5 7 2 4 4 0 84 0 0 0 14 67 0 6 6 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
47 46 56 53 49 48 46 64 47 64 41 39 52 56 64 8 18
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(24,805,qs),
(24,800,o),
(34,789,o),
(47,789,qs),
(68,789,o),
(100,787,o),
(123,779,o),
(135,762,o),
(135,747,qs),
(135,722,o),
(137,634,o),
(140,540,o),
(142,456,o),
(142,437,qs),
(142,365,o),
(142,270,o),
(141,190,o),
(141,110,o),
(141,52,qs),
(141,43,o),
(123,33,o),
(96,29,o),
(65,28,o),
(52,28,qs),
(35,28,o),
(21,19,o),
(21,12,qs),
(21,4,o),
(40,0,o),
(57,0,qs),
(241,0,ls),
(339,0,o),
(487,70,o),
(585,189,o),
(634,349,o),
(634,439,qs),
(634,545,o),
(562,691,o),
(450,781,o),
(314,821,o),
(251,821,qs),
(190,821,o),
(95,820,o),
(45,818,qs),
(24,817,o)
);
},
{
closed = 1;
nodes = (
(465,731,o),
(549,637,o),
(589,511,o),
(589,439,qs),
(589,353,o),
(549,205,o),
(465,96,o),
(335,34,o),
(245,34,qs),
(236,34,o),
(214,34,o),
(196,36,o),
(183,40,o),
(183,44,qs),
(183,782,l),
(198,783,o),
(230,786,o),
(245,786,qs),
(335,786,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 5 3 6 3 5 96 0 2 6 1 6 2 96 8 4 2 3 3 0 83 7 1 0 0 12 67 0 6 6 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 5 3 6 3 5 96 0 2 6 1 6 2 96 8 4 2 3 3 0 83 7 1 0 0 14 67 0 6 6 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
46 45 4 0 55 52 48 47 45 63 46 63 41 38 22 19 15 12 0 44 4 44 9 15
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = D;
unicode = 68;
},
{
glyphname = Dcaron;
kernLeft = B;
kernRight = D;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(410,965,o),
(375,952,o),
(338,933,o),
(323,922,q),
(308,933,o),
(271,952,o),
(237,965,o),
(209,972,o),
(204,972,qs),
(197,972,o),
(191,963,o),
(191,958,qs),
(191,938,o),
(227,894,o),
(273,855,o),
(316,830,o),
(323,830,qs),
(332,830,o),
(375,856,o),
(421,893,o),
(456,935,o),
(456,951,qs),
(456,958,o),
(451,972,o),
(443,972,qs),
(438,972,o)
);
},
{
closed = 1;
nodes = (
(78,738,qs),
(100,738,o),
(132,722,o),
(132,696,qs),
(132,673,o),
(134,600,o),
(137,523,o),
(139,455,o),
(139,437,qs),
(139,371,o),
(139,288,o),
(138,220,o),
(138,150,o),
(138,97,qs),
(138,85,o),
(111,75,o),
(83,73,qs),
(63,71,o),
(41,54,o),
(41,31,qs),
(41,0,o),
(78,0,qs),
(289,0,ls),
(387,0,o),
(535,70,o),
(633,189,o),
(682,349,o),
(682,439,qs),
(682,545,o),
(610,691,o),
(498,781,o),
(362,821,o),
(299,821,qs),
(238,821,o),
(126,820,o),
(76,818,qs),
(59,817,o),
(41,794,o),
(41,776,qs),
(41,738,o)
);
},
{
closed = 1;
nodes = (
(480,691,o),
(552,609,o),
(586,500,o),
(586,439,qs),
(586,363,o),
(552,232,o),
(481,136,o),
(370,82,o),
(293,82,qs),
(284,82,o),
(262,82,o),
(244,84,o),
(231,88,o),
(231,92,qs),
(231,734,l),
(246,735,o),
(278,738,o),
(293,738,qs),
(369,738,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
2 9 2 0 1 0 106 0 1 3 1 106 7 10 6 3 5 5 3 83 0 3 3 12 67 0 8 8 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
2 9 2 0 1 0 106 0 1 3 1 106 7 10 6 3 5 5 3 83 0 3 3 14 67 0 8 8 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
67 66 1 0 76 73 69 68 66 84 67 84 65 63 44 41 33 28 17 15 9 7 0 25 1 25 11 15
CALL[ ]	/* CallFunction */";
};
width = 715;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(392,964,o),
(358,950,o),
(320,931,o),
(303,921,q),
(286,931,o),
(248,950,o),
(215,964,o),
(189,972,o),
(184,972,qs),
(173,972,o),
(173,959,qs),
(173,943,o),
(208,904,o),
(253,870,o),
(295,847,o),
(303,847,qs),
(312,847,o),
(355,871,o),
(400,904,o),
(434,941,o),
(434,955,qs),
(434,962,o),
(429,972,o),
(423,972,qs),
(418,972,o)
);
},
{
closed = 1;
nodes = (
(42,802,o),
(42,794,qs),
(42,784,o),
(53,769,o),
(65,769,qs),
(78,769,o),
(103,767,o),
(122,759,o),
(133,742,o),
(133,727,qs),
(133,704,o),
(135,621,o),
(138,533,o),
(140,455,o),
(140,437,qs),
(140,369,o),
(140,279,o),
(139,203,o),
(139,127,o),
(139,72,qs),
(139,63,o),
(124,53,o),
(102,49,o),
(79,48,o),
(70,48,qs),
(53,48,o),
(39,37,o),
(39,24,qs),
(39,11,o),
(58,0,o),
(75,0,qs),
(269,0,ls),
(367,0,o),
(515,70,o),
(613,189,o),
(662,349,o),
(662,439,qs),
(662,545,o),
(590,691,o),
(478,781,o),
(342,821,o),
(279,821,qs),
(218,821,o),
(113,820,o),
(63,818,qs),
(52,817,o)
);
},
{
closed = 1;
nodes = (
(473,706,o),
(550,620,o),
(587,504,o),
(587,439,qs),
(587,359,o),
(551,222,o),
(474,121,o),
(355,64,o),
(273,64,qs),
(264,64,o),
(242,64,o),
(224,66,o),
(211,70,o),
(211,74,qs),
(211,752,l),
(226,753,o),
(258,756,o),
(273,756,qs),
(355,756,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
2 10 2 0 1 0 106 0 1 3 1 106 0 6 3 7 7 6 96 0 5 9 4 9 5 96 8 11 2 7 7 3 84 0 3 3 12 67 0 9 9 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
2 10 2 0 1 0 106 0 1 3 1 106 0 6 3 7 7 6 96 0 5 9 4 9 5 96 8 11 2 7 7 3 84 0 3 3 14 67 0 9 9 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
72 71 1 0 81 78 74 73 71 89 72 89 66 64 47 44 40 37 29 25 16 14 9 7 0 24 1 24 12 15
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(367,962,o),
(335,946,o),
(296,928,o),
(275,919,q),
(254,928,o),
(215,946,o),
(184,962,o),
(161,972,o),
(156,972,qs),
(148,972,o),
(148,961,qs),
(148,952,o),
(181,922,o),
(225,895,o),
(266,875,o),
(275,875,qs),
(284,875,o),
(327,895,o),
(370,922,o),
(403,952,o),
(403,961,qs),
(403,972,o),
(395,972,qs),
(390,972,o)
);
},
{
closed = 1;
nodes = (
(24,805,qs),
(24,800,o),
(34,789,o),
(47,789,qs),
(68,789,o),
(100,787,o),
(123,779,o),
(135,762,o),
(135,747,qs),
(135,722,o),
(137,634,o),
(140,540,o),
(142,456,o),
(142,437,qs),
(142,365,o),
(142,270,o),
(141,190,o),
(141,110,o),
(141,52,qs),
(141,43,o),
(123,33,o),
(96,29,o),
(65,28,o),
(52,28,qs),
(35,28,o),
(21,19,o),
(21,12,qs),
(21,4,o),
(40,0,o),
(57,0,qs),
(241,0,ls),
(339,0,o),
(487,70,o),
(585,189,o),
(634,349,o),
(634,439,qs),
(634,545,o),
(562,691,o),
(450,781,o),
(314,821,o),
(251,821,qs),
(190,821,o),
(95,820,o),
(45,818,qs),
(24,817,o)
);
},
{
closed = 1;
nodes = (
(465,731,o),
(549,637,o),
(589,511,o),
(589,439,qs),
(589,353,o),
(549,205,o),
(465,96,o),
(335,34,o),
(245,34,qs),
(236,34,o),
(214,34,o),
(196,36,o),
(183,40,o),
(183,44,qs),
(183,782,l),
(198,783,o),
(230,786,o),
(245,786,qs),
(335,786,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
19 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
2 10 2 0 1 0 106 0 1 3 1 106 0 8 6 9 6 8 96 0 5 9 4 9 5 96 12 7 2 6 6 3 83 11 1 3 3 12 67 0 9 9 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
2 10 2 0 1 0 106 0 1 3 1 106 0 8 6 9 6 8 96 0 5 9 4 9 5 96 12 7 2 6 6 3 83 11 1 3 3 14 67 0 9 9 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
70 69 28 24 1 0 79 76 72 71 69 87 70 87 65 62 46 43 39 36 24 68 28 68 15 13 8 6 0 23 1 23 13 15
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = Dcaron;
unicode = 270;
},
{
glyphname = Dcroat;
kernLeft = B;
kernRight = D;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(81,738,qs),
(103,738,o),
(135,722,o),
(135,696,qs),
(135,675,o),
(137,610,o),
(139,539,o),
(142,473,o),
(142,451,q),
(128,451,o),
(104,452,o),
(98,452,qs),
(81,452,o),
(65,422,o),
(65,409,qs),
(65,403,o),
(70,388,o),
(79,375,o),
(91,365,o),
(98,365,qs),
(142,365,l),
(142,324,o),
(142,263,o),
(141,205,o),
(141,140,o),
(141,97,qs),
(141,85,o),
(114,75,o),
(86,73,qs),
(66,71,o),
(44,54,o),
(44,31,qs),
(44,0,o),
(81,0,qs),
(292,0,ls),
(390,0,o),
(538,70,o),
(636,189,o),
(685,349,o),
(685,439,qs),
(685,545,o),
(613,691,o),
(501,781,o),
(365,821,o),
(302,821,qs),
(241,821,o),
(129,820,o),
(79,818,qs),
(62,817,o),
(44,794,o),
(44,776,qs),
(44,738,o)
);
},
{
closed = 1;
nodes = (
(483,691,o),
(555,609,o),
(589,500,o),
(589,439,qs),
(589,363,o),
(555,232,o),
(484,136,o),
(373,82,o),
(296,82,qs),
(287,82,o),
(265,82,o),
(247,84,o),
(234,88,o),
(234,92,qs),
(234,365,l),
(265,365,o),
(322,366,o),
(339,366,qs),
(350,366,o),
(364,377,o),
(372,392,o),
(375,407,o),
(375,412,qs),
(375,425,o),
(358,453,o),
(347,453,qs),
(325,453,o),
(269,450,o),
(234,450,q),
(234,734,l),
(249,735,o),
(281,738,o),
(296,738,qs),
(372,738,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
6 10 5 3 4 4 0 83 0 0 0 12 67 8 1 2 2 3 83 7 1 3 3 15 67 0 9 9 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
7 1 3 8 1 2 9 3 2 91 6 10 5 3 4 4 0 83 0 0 0 12 67 0 9 9 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
7 1 3 8 1 2 9 3 2 91 6 10 5 3 4 4 0 83 0 0 0 14 67 0 9 9 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
53 52 77 74 70 66 60 56 55 54 52 85 53 85 39 70 44 56 82 11 20
CALL[ ]	/* CallFunction */";
};
width = 718;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(240,441,o),
(198,441,qs),
(185,441,o),
(150,442,o),
(114,442,o),
(84,443,o),
(77,443,qs),
(63,443,o),
(51,419,o),
(51,409,qs),
(51,400,o),
(66,374,o),
(77,374,qs),
(95,374,o),
(159,374,o),
(231,375,o),
(298,375,o),
(318,375,qs),
(327,375,o),
(338,384,o),
(344,396,o),
(347,408,o),
(347,412,qs),
(347,422,o),
(334,444,o),
(326,444,qs),
(302,444,o)
);
},
{
closed = 1;
nodes = (
(44,802,o),
(44,794,qs),
(44,784,o),
(55,769,o),
(67,769,qs),
(80,769,o),
(105,767,o),
(124,759,o),
(135,742,o),
(135,727,qs),
(135,704,o),
(137,621,o),
(140,533,o),
(142,455,o),
(142,437,qs),
(142,369,o),
(142,279,o),
(141,203,o),
(141,127,o),
(141,72,qs),
(141,63,o),
(126,53,o),
(104,49,o),
(81,48,o),
(72,48,qs),
(55,48,o),
(41,37,o),
(41,24,qs),
(41,11,o),
(60,0,o),
(77,0,qs),
(271,0,ls),
(369,0,o),
(517,70,o),
(615,189,o),
(664,349,o),
(664,439,qs),
(664,545,o),
(592,691,o),
(480,781,o),
(344,821,o),
(281,821,qs),
(220,821,o),
(115,820,o),
(65,818,qs),
(54,817,o)
);
},
{
closed = 1;
nodes = (
(475,706,o),
(552,620,o),
(589,504,o),
(589,439,qs),
(589,359,o),
(553,222,o),
(476,121,o),
(357,64,o),
(275,64,qs),
(266,64,o),
(244,64,o),
(226,66,o),
(213,70,o),
(213,74,qs),
(213,752,l),
(228,753,o),
(260,756,o),
(275,756,qs),
(357,756,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 5 2 6 6 5 96 0 4 8 3 8 4 96 7 10 2 6 6 2 84 0 2 2 12 67 0 1 1 0 83 9 1 0 0 15 67 0 8 8 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 5 2 6 6 5 96 0 4 8 3 8 4 96 9 1 0 0 1 8 0 1 91 7 10 2 6 6 2 84 0 2 2 12 67 0 8 8 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 5 2 6 6 5 96 0 4 8 3 8 4 96 9 1 0 0 1 8 0 1 91 7 10 2 6 6 2 84 0 2 2 14 67 0 8 8 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
74 73 1 0 83 80 76 75 73 91 74 91 68 66 49 46 42 39 31 27 14 7 0 26 1 18 11 15
CALL[ ]	/* CallFunction */";
};
width = 700;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(24,805,qs),
(24,800,o),
(34,789,o),
(47,789,qs),
(68,789,o),
(100,787,o),
(123,779,o),
(135,762,o),
(135,747,qs),
(135,722,o),
(137,634,o),
(140,540,o),
(142,456,o),
(142,437,qs),
(142,426,l),
(116,426,o),
(58,428,o),
(47,428,qs),
(39,428,o),
(31,414,o),
(31,409,qs),
(31,404,o),
(40,389,o),
(47,389,qs),
(142,389,l),
(142,334,o),
(142,254,o),
(141,181,o),
(141,104,o),
(141,52,qs),
(141,43,o),
(123,33,o),
(96,29,o),
(65,28,o),
(52,28,qs),
(35,28,o),
(21,19,o),
(21,12,qs),
(21,4,o),
(40,0,o),
(57,0,qs),
(241,0,ls),
(339,0,o),
(487,70,o),
(585,189,o),
(634,349,o),
(634,439,qs),
(634,545,o),
(562,691,o),
(450,781,o),
(314,821,o),
(251,821,qs),
(190,821,o),
(95,820,o),
(45,818,qs),
(24,817,o)
);
},
{
closed = 1;
nodes = (
(465,731,o),
(549,637,o),
(589,511,o),
(589,439,qs),
(589,353,o),
(549,205,o),
(465,96,o),
(335,34,o),
(245,34,qs),
(236,34,o),
(214,34,o),
(196,36,o),
(183,40,o),
(183,44,qs),
(183,389,l),
(214,389,o),
(271,390,o),
(288,390,qs),
(299,390,o),
(307,407,o),
(307,412,qs),
(307,417,o),
(300,429,o),
(296,429,qs),
(274,429,o),
(218,426,o),
(183,426,q),
(183,782,l),
(198,783,o),
(230,786,o),
(245,786,qs),
(335,786,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 7 5 4 5 7 96 0 2 10 1 10 2 96 12 6 2 5 5 0 83 11 1 0 0 12 67 9 1 3 3 4 83 8 1 4 4 15 67 0 10 10 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 7 5 4 5 7 96 0 2 10 1 10 2 96 8 1 4 9 1 3 10 4 3 91 12 6 2 5 5 0 83 11 1 0 0 12 67 0 10 10 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 7 5 4 5 7 96 0 2 10 1 10 2 96 8 1 4 9 1 3 10 4 3 91 12 6 2 5 5 0 83 11 1 0 0 14 67 0 10 10 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
57 56 4 0 79 76 72 68 64 60 59 58 56 87 57 87 52 49 40 36 32 30 22 19 15 12 0 55 4 55 13 15
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = Dcroat;
unicode = 272;
},
{
glyphname = Eth;
kernLeft = B;
kernRight = D;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(81,738,qs),
(103,738,o),
(135,722,o),
(135,696,qs),
(135,675,o),
(137,610,o),
(139,539,o),
(142,473,o),
(142,451,q),
(128,451,o),
(104,452,o),
(98,452,qs),
(81,452,o),
(65,422,o),
(65,409,qs),
(65,403,o),
(70,388,o),
(79,375,o),
(91,365,o),
(98,365,qs),
(142,365,l),
(142,324,o),
(142,263,o),
(141,205,o),
(141,140,o),
(141,97,qs),
(141,85,o),
(114,75,o),
(86,73,qs),
(66,71,o),
(44,54,o),
(44,31,qs),
(44,0,o),
(81,0,qs),
(292,0,ls),
(390,0,o),
(538,70,o),
(636,189,o),
(685,349,o),
(685,439,qs),
(685,545,o),
(613,691,o),
(501,781,o),
(365,821,o),
(302,821,qs),
(241,821,o),
(129,820,o),
(79,818,qs),
(62,817,o),
(44,794,o),
(44,776,qs),
(44,738,o)
);
},
{
closed = 1;
nodes = (
(483,691,o),
(555,609,o),
(589,500,o),
(589,439,qs),
(589,363,o),
(555,232,o),
(484,136,o),
(373,82,o),
(296,82,qs),
(287,82,o),
(265,82,o),
(247,84,o),
(234,88,o),
(234,92,qs),
(234,365,l),
(265,365,o),
(322,366,o),
(339,366,qs),
(350,366,o),
(364,377,o),
(372,392,o),
(375,407,o),
(375,412,qs),
(375,425,o),
(358,453,o),
(347,453,qs),
(325,453,o),
(269,450,o),
(234,450,q),
(234,734,l),
(249,735,o),
(281,738,o),
(296,738,qs),
(372,738,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
6 10 5 3 4 4 0 83 0 0 0 12 67 8 1 2 2 3 83 7 1 3 3 15 67 0 9 9 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
7 1 3 8 1 2 9 3 2 91 6 10 5 3 4 4 0 83 0 0 0 12 67 0 9 9 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
7 1 3 8 1 2 9 3 2 91 6 10 5 3 4 4 0 83 0 0 0 14 67 0 9 9 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
53 52 77 74 70 66 60 56 55 54 52 85 53 85 39 70 44 56 82 11 20
CALL[ ]	/* CallFunction */";
};
width = 718;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(240,441,o),
(198,441,qs),
(185,441,o),
(150,442,o),
(114,442,o),
(84,443,o),
(77,443,qs),
(63,443,o),
(51,419,o),
(51,409,qs),
(51,400,o),
(66,374,o),
(77,374,qs),
(95,374,o),
(159,374,o),
(231,375,o),
(298,375,o),
(318,375,qs),
(327,375,o),
(338,384,o),
(344,396,o),
(347,408,o),
(347,412,qs),
(347,422,o),
(334,444,o),
(326,444,qs),
(302,444,o)
);
},
{
closed = 1;
nodes = (
(44,802,o),
(44,794,qs),
(44,784,o),
(55,769,o),
(67,769,qs),
(80,769,o),
(105,767,o),
(124,759,o),
(135,742,o),
(135,727,qs),
(135,704,o),
(137,621,o),
(140,533,o),
(142,455,o),
(142,437,qs),
(142,369,o),
(142,279,o),
(141,203,o),
(141,127,o),
(141,72,qs),
(141,63,o),
(126,53,o),
(104,49,o),
(81,48,o),
(72,48,qs),
(55,48,o),
(41,37,o),
(41,24,qs),
(41,11,o),
(60,0,o),
(77,0,qs),
(271,0,ls),
(369,0,o),
(517,70,o),
(615,189,o),
(664,349,o),
(664,439,qs),
(664,545,o),
(592,691,o),
(480,781,o),
(344,821,o),
(281,821,qs),
(220,821,o),
(115,820,o),
(65,818,qs),
(54,817,o)
);
},
{
closed = 1;
nodes = (
(475,706,o),
(552,620,o),
(589,504,o),
(589,439,qs),
(589,359,o),
(553,222,o),
(476,121,o),
(357,64,o),
(275,64,qs),
(266,64,o),
(244,64,o),
(226,66,o),
(213,70,o),
(213,74,qs),
(213,752,l),
(228,753,o),
(260,756,o),
(275,756,qs),
(357,756,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 5 2 6 6 5 96 0 4 8 3 8 4 96 7 10 2 6 6 2 84 0 2 2 12 67 0 1 1 0 83 9 1 0 0 15 67 0 8 8 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 5 2 6 6 5 96 0 4 8 3 8 4 96 9 1 0 0 1 8 0 1 91 7 10 2 6 6 2 84 0 2 2 12 67 0 8 8 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 5 2 6 6 5 96 0 4 8 3 8 4 96 9 1 0 0 1 8 0 1 91 7 10 2 6 6 2 84 0 2 2 14 67 0 8 8 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
74 73 1 0 83 80 76 75 73 91 74 91 68 66 49 46 42 39 31 27 14 7 0 26 1 18 11 15
CALL[ ]	/* CallFunction */";
};
width = 700;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(24,805,qs),
(24,800,o),
(34,789,o),
(47,789,qs),
(68,789,o),
(100,787,o),
(123,779,o),
(135,762,o),
(135,747,qs),
(135,722,o),
(137,634,o),
(140,540,o),
(142,456,o),
(142,437,qs),
(142,426,l),
(116,426,o),
(58,428,o),
(47,428,qs),
(39,428,o),
(31,414,o),
(31,409,qs),
(31,404,o),
(40,389,o),
(47,389,qs),
(142,389,l),
(142,334,o),
(142,254,o),
(141,181,o),
(141,104,o),
(141,52,qs),
(141,43,o),
(123,33,o),
(96,29,o),
(65,28,o),
(52,28,qs),
(35,28,o),
(21,19,o),
(21,12,qs),
(21,4,o),
(40,0,o),
(57,0,qs),
(241,0,ls),
(339,0,o),
(487,70,o),
(585,189,o),
(634,349,o),
(634,439,qs),
(634,545,o),
(562,691,o),
(450,781,o),
(314,821,o),
(251,821,qs),
(190,821,o),
(95,820,o),
(45,818,qs),
(24,817,o)
);
},
{
closed = 1;
nodes = (
(465,731,o),
(549,637,o),
(589,511,o),
(589,439,qs),
(589,353,o),
(549,205,o),
(465,96,o),
(335,34,o),
(245,34,qs),
(236,34,o),
(214,34,o),
(196,36,o),
(183,40,o),
(183,44,qs),
(183,389,l),
(214,389,o),
(271,390,o),
(288,390,qs),
(299,390,o),
(307,407,o),
(307,412,qs),
(307,417,o),
(300,429,o),
(296,429,qs),
(274,429,o),
(218,426,o),
(183,426,q),
(183,782,l),
(198,783,o),
(230,786,o),
(245,786,qs),
(335,786,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 7 5 4 5 7 96 0 2 10 1 10 2 96 12 6 2 5 5 0 83 11 1 0 0 12 67 9 1 3 3 4 83 8 1 4 4 15 67 0 10 10 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 7 5 4 5 7 96 0 2 10 1 10 2 96 8 1 4 9 1 3 10 4 3 91 12 6 2 5 5 0 83 11 1 0 0 12 67 0 10 10 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 7 5 4 5 7 96 0 2 10 1 10 2 96 8 1 4 9 1 3 10 4 3 91 12 6 2 5 5 0 83 11 1 0 0 14 67 0 10 10 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
57 56 4 0 79 76 72 68 64 60 59 58 56 87 57 87 52 49 40 36 32 30 22 19 15 12 0 55 4 55 13 15
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = Eth;
unicode = 208;
},
{
glyphname = E;
kernLeft = B;
kernRight = AE;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(565,303,o),
(564,281,qs),
(563,264,o),
(560,222,o),
(556,178,o),
(552,136,o),
(551,121,qs),
(550,108,o),
(542,93,o),
(530,86,o),
(515,84,o),
(508,84,qs),
(230,84,l),
(230,377,l),
(244,377,o),
(265,378,o),
(283,379,o),
(304,379,o),
(318,379,qs),
(338,379,o),
(364,378,o),
(372,378,qs),
(386,378,o),
(405,363,o),
(416,341,o),
(420,318,o),
(420,310,qs),
(420,297,o),
(435,275,o),
(461,275,qs),
(503,275,o),
(503,308,qs),
(503,331,o),
(501,391,o),
(501,420,qs),
(501,449,o),
(503,502,o),
(503,531,qs),
(503,555,o),
(477,570,o),
(460,570,qs),
(439,570,o),
(418,548,o),
(418,533,qs),
(418,526,o),
(417,503,o),
(414,480,o),
(407,464,o),
(401,464,qs),
(397,464,o),
(378,463,o),
(354,462,o),
(328,461,o),
(318,461,qs),
(303,461,o),
(283,461,o),
(264,462,o),
(244,463,o),
(230,464,q),
(230,737,l),
(482,737,ls),
(499,737,o),
(519,727,o),
(519,709,qs),
(519,637,ls),
(519,623,o),
(540,597,o),
(566,597,qs),
(588,597,o),
(607,616,o),
(607,643,qs),
(607,785,ls),
(607,806,o),
(593,821,o),
(579,821,qs),
(535,821,o),
(481,820,o),
(436,820,o),
(389,819,o),
(352,819,qs),
(333,819,o),
(273,820,o),
(202,820,o),
(127,821,o),
(94,821,qs),
(62,821,o),
(37,807,o),
(37,781,qs),
(37,764,o),
(68,747,o),
(93,747,qs),
(114,747,o),
(132,737,o),
(132,708,qs),
(132,678,o),
(134,620,o),
(136,554,o),
(138,476,o),
(138,425,qs),
(138,379,o),
(138,315,o),
(137,266,o),
(137,227,o),
(136,187,o),
(136,141,o),
(136,109,qs),
(136,92,o),
(118,75,o),
(89,73,qs),
(68,72,o),
(38,55,o),
(38,33,qs),
(38,16,o),
(60,0,o),
(86,0,qs),
(116,0,o),
(186,1,o),
(256,1,o),
(326,2,o),
(356,2,qs),
(417,2,o),
(532,0,o),
(593,0,qs),
(618,0,o),
(633,12,o),
(635,33,qs),
(638,63,o),
(644,143,o),
(649,218,o),
(651,276,o),
(651,285,qs),
(651,302,o),
(627,318,o),
(613,318,qs),
(595,318,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
75 1 7 8 127 1 2 9 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
75 1 7 8 127 1 11 9 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 5 3 8 3 5 8 104 12 1 0 10 9 10 0 9 104 0 8 0 9 2 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 10 10 7 83 0 7 7 23 67 11 1 2 2 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 5 3 8 3 5 8 104 12 1 0 10 9 10 0 9 104 0 7 0 10 0 7 10 91 0 8 0 9 2 8 9 91 6 1 3 3 4 83 0 4 4 12 67 11 1 2 2 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 5 3 8 3 5 8 104 12 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 12 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 68 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 12 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 14 67 0 11 11 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 123 121 120 111 105 103 94 92 86 76 74 72 67 65 60 48 44 42 26 24 20 10 0 134 1 134 13 15
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(567,299,o),
(566,278,qs),
(565,260,o),
(562,210,o),
(558,159,o),
(554,115,o),
(553,103,qs),
(552,90,o),
(544,75,o),
(532,68,o),
(517,66,o),
(510,66,qs),
(211,66,l),
(211,386,l),
(240,387,o),
(281,388,o),
(310,388,qs),
(333,388,o),
(363,387,o),
(374,387,qs),
(389,387,o),
(407,370,o),
(418,345,o),
(422,317,o),
(422,306,qs),
(422,293,o),
(434,277,o),
(453,277,qs),
(466,277,o),
(484,287,o),
(484,304,qs),
(484,332,o),
(482,391,o),
(482,420,qs),
(482,449,o),
(484,506,o),
(484,535,qs),
(484,552,o),
(466,566,o),
(452,566,qs),
(434,566,o),
(420,543,o),
(420,532,qs),
(420,524,o),
(419,498,o),
(416,473,o),
(409,455,o),
(403,455,qs),
(399,455,o),
(378,454,o),
(351,453,o),
(322,452,o),
(310,452,qs),
(281,452,o),
(239,454,o),
(211,455,q),
(211,755,l),
(484,755,ls),
(489,755,o),
(502,754,o),
(513,749,o),
(521,737,o),
(521,727,qs),
(521,640,ls),
(521,626,o),
(535,600,o),
(557,600,qs),
(574,600,o),
(588,622,o),
(588,646,qs),
(588,785,ls),
(588,806,o),
(574,821,o),
(560,821,qs),
(516,821,o),
(462,820,o),
(417,820,o),
(370,819,o),
(333,819,qs),
(314,819,o),
(256,820,o),
(188,820,o),
(115,821,o),
(82,821,qs),
(67,821,o),
(41,812,o),
(41,794,qs),
(41,781,o),
(64,769,o),
(81,769,qs),
(87,769,o),
(105,768,o),
(122,760,o),
(134,745,o),
(134,730,qs),
(134,698,o),
(136,634,o),
(138,562,o),
(140,478,o),
(140,425,qs),
(140,377,o),
(140,309,o),
(139,255,o),
(139,211,o),
(138,167,o),
(138,117,o),
(138,84,qs),
(138,63,o),
(106,48,o),
(77,48,qs),
(57,48,o),
(38,37,o),
(38,21,qs),
(38,7,o),
(67,0,o),
(84,0,qs),
(145,0,o),
(276,2,o),
(337,2,qs),
(398,2,o),
(513,0,o),
(574,0,qs),
(594,0,o),
(614,8,o),
(616,33,qs),
(619,63,o),
(624,142,o),
(629,216,o),
(632,273,o),
(632,282,qs),
(632,297,o),
(616,315,o),
(602,315,qs),
(589,315,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 12 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 10 10 7 83 0 7 7 15 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 12 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 68 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 12 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 14 67 0 11 11 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 122 120 119 112 106 104 94 92 86 77 76 74 67 65 60 48 44 41 24 22 18 10 0 133 1 133 13 15
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(570,293,o),
(569,273,qs),
(568,252,o),
(565,195,o),
(561,137,o),
(557,86,o),
(556,73,qs),
(555,60,o),
(547,45,o),
(535,38,o),
(520,36,o),
(513,36,qs),
(184,36,l),
(184,401,l),
(213,402,o),
(269,403,o),
(298,403,qs),
(327,403,o),
(363,402,o),
(377,402,qs),
(392,402,o),
(411,383,o),
(421,355,o),
(425,322,o),
(425,309,qs),
(425,296,o),
(435,280,o),
(442,280,qs),
(446,280,o),
(457,290,o),
(457,307,qs),
(457,335,o),
(455,391,o),
(455,420,qs),
(455,449,o),
(457,504,o),
(457,533,qs),
(457,544,o),
(452,560,o),
(440,560,qs),
(434,560,o),
(427,552,o),
(424,541,o),
(423,531,o),
(423,530,qs),
(423,521,o),
(422,490,o),
(419,461,o),
(412,440,o),
(406,440,qs),
(401,440,o),
(377,439,o),
(346,438,o),
(312,437,o),
(298,437,qs),
(269,437,o),
(213,439,o),
(184,440,q),
(184,785,l),
(487,785,ls),
(497,785,o),
(524,776,o),
(524,757,qs),
(524,645,ls),
(524,631,o),
(529,605,o),
(544,605,qs),
(555,605,o),
(561,632,o),
(561,651,qs),
(561,785,ls),
(561,806,o),
(547,821,o),
(533,821,qs),
(489,821,o),
(435,820,o),
(390,820,o),
(343,819,o),
(306,819,qs),
(287,819,o),
(232,820,o),
(168,820,o),
(98,821,o),
(65,821,qs),
(50,821,o),
(24,815,o),
(24,804,qs),
(24,793,o),
(47,789,o),
(64,789,qs),
(74,789,o),
(99,788,o),
(122,780,o),
(137,765,o),
(137,750,qs),
(137,716,o),
(139,648,o),
(141,571,o),
(143,481,o),
(143,425,qs),
(143,375,o),
(143,302,o),
(142,245,o),
(142,199,o),
(141,152,o),
(141,99,o),
(141,64,qs),
(141,43,o),
(107,28,o),
(60,28,qs),
(40,28,o),
(21,22,o),
(21,11,qs),
(21,3,o),
(52,0,o),
(67,0,qs),
(128,1,o),
(249,2,o),
(310,2,qs),
(371,2,o),
(486,0,o),
(547,0,qs),
(567,0,o),
(587,8,o),
(589,33,qs),
(592,63,o),
(597,141,o),
(602,213,o),
(605,268,o),
(605,277,qs),
(605,289,o),
(600,310,o),
(586,310,qs),
(581,310,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 5 3 8 3 5 8 104 12 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 10 10 7 83 0 7 7 15 67 0 11 11 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 5 3 8 3 5 8 104 12 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 11 11 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 5 3 8 3 5 8 104 12 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 14 67 0 11 11 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 122 120 119 112 106 104 94 92 84 75 74 72 67 65 60 48 44 41 24 22 18 10 0 133 1 133 13 15
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = E;
unicode = 69;
},
{
glyphname = Eacute;
kernLeft = B;
kernRight = AE;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(441,972,o),
(421,972,qs),
(407,972,o),
(368,949,o),
(332,916,o),
(307,882,o),
(307,872,qs),
(307,860,o),
(327,841,o),
(342,841,qs),
(355,841,o),
(396,860,o),
(434,888,o),
(462,921,o),
(462,936,qs),
(462,949,o)
);
},
{
closed = 1;
nodes = (
(565,303,o),
(564,281,qs),
(563,264,o),
(560,222,o),
(556,178,o),
(552,136,o),
(551,121,qs),
(550,108,o),
(542,93,o),
(530,86,o),
(515,84,o),
(508,84,qs),
(230,84,l),
(230,377,l),
(244,377,o),
(265,378,o),
(283,379,o),
(304,379,o),
(318,379,qs),
(338,379,o),
(364,378,o),
(372,378,qs),
(386,378,o),
(405,363,o),
(416,341,o),
(420,318,o),
(420,310,qs),
(420,297,o),
(435,275,o),
(461,275,qs),
(503,275,o),
(503,308,qs),
(503,331,o),
(501,391,o),
(501,420,qs),
(501,449,o),
(503,502,o),
(503,531,qs),
(503,555,o),
(477,570,o),
(460,570,qs),
(439,570,o),
(418,548,o),
(418,533,qs),
(418,526,o),
(417,503,o),
(414,480,o),
(407,464,o),
(401,464,qs),
(397,464,o),
(378,463,o),
(354,462,o),
(328,461,o),
(318,461,qs),
(303,461,o),
(283,461,o),
(264,462,o),
(244,463,o),
(230,464,q),
(230,737,l),
(482,737,ls),
(499,737,o),
(519,727,o),
(519,709,qs),
(519,637,ls),
(519,623,o),
(540,597,o),
(566,597,qs),
(588,597,o),
(607,616,o),
(607,643,qs),
(607,785,ls),
(607,806,o),
(593,821,o),
(579,821,qs),
(535,821,o),
(481,820,o),
(436,820,o),
(389,819,o),
(352,819,qs),
(333,819,o),
(273,820,o),
(202,820,o),
(127,821,o),
(94,821,qs),
(62,821,o),
(37,807,o),
(37,781,qs),
(37,764,o),
(68,747,o),
(93,747,qs),
(114,747,o),
(132,737,o),
(132,708,qs),
(132,678,o),
(134,620,o),
(136,554,o),
(138,476,o),
(138,425,qs),
(138,379,o),
(138,315,o),
(137,266,o),
(137,227,o),
(136,187,o),
(136,141,o),
(136,109,qs),
(136,92,o),
(118,75,o),
(89,73,qs),
(68,72,o),
(38,55,o),
(38,33,qs),
(38,16,o),
(60,0,o),
(86,0,qs),
(116,0,o),
(186,1,o),
(256,1,o),
(326,2,o),
(356,2,qs),
(417,2,o),
(532,0,o),
(593,0,qs),
(618,0,o),
(633,12,o),
(635,33,qs),
(638,63,o),
(644,143,o),
(649,218,o),
(651,276,o),
(651,285,qs),
(651,302,o),
(627,318,o),
(613,318,qs),
(595,318,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
91 1 9 10 143 1 4 11 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
91 1 9 10 143 1 13 11 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 1 0 1 106 0 0 6 0 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 10 0 11 4 10 11 91 8 1 5 5 6 83 0 6 6 12 67 0 12 12 9 83 0 9 9 23 67 13 1 4 4 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 1 0 1 106 0 0 6 0 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 9 0 12 2 9 12 91 0 10 0 11 4 10 11 91 8 1 5 5 6 83 0 6 6 12 67 13 1 4 4 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 1 0 1 106 0 0 6 0 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 8 1 5 5 6 83 0 6 6 12 67 0 13 13 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 6 8 8 5 96 0 7 8 10 8 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 0 8 8 6 84 0 6 6 12 67 0 13 13 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 6 8 8 5 96 0 7 8 10 8 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 0 8 8 6 84 0 6 6 14 67 0 13 13 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
17 16 139 137 136 127 121 119 110 108 102 92 90 88 83 81 76 64 60 58 42 40 36 26 16 150 17 150 38 36 15 17
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(412,972,o),
(397,972,qs),
(386,972,o),
(350,950,o),
(316,919,o),
(291,887,o),
(291,877,qs),
(291,867,o),
(304,854,o),
(315,854,qs),
(325,854,o),
(364,872,o),
(401,899,o),
(429,929,o),
(429,941,qs),
(429,955,o)
);
},
{
closed = 1;
nodes = (
(567,299,o),
(566,278,qs),
(565,260,o),
(562,210,o),
(558,159,o),
(554,115,o),
(553,103,qs),
(552,90,o),
(544,75,o),
(532,68,o),
(517,66,o),
(510,66,qs),
(211,66,l),
(211,386,l),
(240,387,o),
(281,388,o),
(310,388,qs),
(333,388,o),
(363,387,o),
(374,387,qs),
(389,387,o),
(407,370,o),
(418,345,o),
(422,317,o),
(422,306,qs),
(422,293,o),
(434,277,o),
(453,277,qs),
(466,277,o),
(484,287,o),
(484,304,qs),
(484,332,o),
(482,391,o),
(482,420,qs),
(482,449,o),
(484,506,o),
(484,535,qs),
(484,552,o),
(466,566,o),
(452,566,qs),
(434,566,o),
(420,543,o),
(420,532,qs),
(420,524,o),
(419,498,o),
(416,473,o),
(409,455,o),
(403,455,qs),
(399,455,o),
(378,454,o),
(351,453,o),
(322,452,o),
(310,452,qs),
(281,452,o),
(239,454,o),
(211,455,q),
(211,755,l),
(484,755,ls),
(489,755,o),
(502,754,o),
(513,749,o),
(521,737,o),
(521,727,qs),
(521,640,ls),
(521,626,o),
(535,600,o),
(557,600,qs),
(574,600,o),
(588,622,o),
(588,646,qs),
(588,785,ls),
(588,806,o),
(574,821,o),
(560,821,qs),
(516,821,o),
(462,820,o),
(417,820,o),
(370,819,o),
(333,819,qs),
(314,819,o),
(256,820,o),
(188,820,o),
(115,821,o),
(82,821,qs),
(67,821,o),
(41,812,o),
(41,794,qs),
(41,781,o),
(64,769,o),
(81,769,qs),
(87,769,o),
(105,768,o),
(122,760,o),
(134,745,o),
(134,730,qs),
(134,698,o),
(136,634,o),
(138,562,o),
(140,478,o),
(140,425,qs),
(140,377,o),
(140,309,o),
(139,255,o),
(139,211,o),
(138,167,o),
(138,117,o),
(138,84,qs),
(138,63,o),
(106,48,o),
(77,48,qs),
(57,48,o),
(38,37,o),
(38,21,qs),
(38,7,o),
(67,0,o),
(84,0,qs),
(145,0,o),
(276,2,o),
(337,2,qs),
(398,2,o),
(513,0,o),
(574,0,qs),
(594,0,o),
(614,8,o),
(616,33,qs),
(619,63,o),
(624,142,o),
(629,216,o),
(632,273,o),
(632,282,qs),
(632,297,o),
(616,315,o),
(602,315,qs),
(589,315,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 6 8 8 5 96 0 7 8 10 8 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 10 0 11 13 10 11 91 0 8 8 6 84 0 6 6 12 67 0 12 12 9 83 0 9 9 15 67 0 13 13 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 6 8 8 5 96 0 7 8 10 8 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 0 8 8 6 84 0 6 6 12 67 0 13 13 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 6 8 8 5 96 0 7 8 10 8 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 0 8 8 6 84 0 6 6 14 67 0 13 13 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
17 16 138 136 135 128 122 120 110 108 102 93 92 90 83 81 76 64 60 57 40 38 34 26 16 149 17 149 38 36 15 17
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(371,972,o),
(363,972,qs),
(356,972,o),
(324,952,o),
(292,925,o),
(268,895,o),
(268,886,qs),
(268,875,o),
(276,875,qs),
(283,875,o),
(318,893,o),
(354,917,o),
(382,942,o),
(382,950,qs),
(382,964,o)
);
},
{
closed = 1;
nodes = (
(570,293,o),
(569,273,qs),
(568,252,o),
(565,195,o),
(561,137,o),
(557,86,o),
(556,73,qs),
(555,60,o),
(547,45,o),
(535,38,o),
(520,36,o),
(513,36,qs),
(184,36,l),
(184,401,l),
(213,402,o),
(269,403,o),
(298,403,qs),
(327,403,o),
(363,402,o),
(377,402,qs),
(392,402,o),
(411,383,o),
(421,355,o),
(425,322,o),
(425,309,qs),
(425,296,o),
(435,280,o),
(442,280,qs),
(446,280,o),
(457,290,o),
(457,307,qs),
(457,335,o),
(455,391,o),
(455,420,qs),
(455,449,o),
(457,504,o),
(457,533,qs),
(457,544,o),
(452,560,o),
(440,560,qs),
(434,560,o),
(427,552,o),
(424,541,o),
(423,531,o),
(423,530,qs),
(423,521,o),
(422,490,o),
(419,461,o),
(412,440,o),
(406,440,qs),
(401,440,o),
(377,439,o),
(346,438,o),
(312,437,o),
(298,437,qs),
(269,437,o),
(213,439,o),
(184,440,q),
(184,785,l),
(487,785,ls),
(497,785,o),
(524,776,o),
(524,757,qs),
(524,645,ls),
(524,631,o),
(529,605,o),
(544,605,qs),
(555,605,o),
(561,632,o),
(561,651,qs),
(561,785,ls),
(561,806,o),
(547,821,o),
(533,821,qs),
(489,821,o),
(435,820,o),
(390,820,o),
(343,819,o),
(306,819,qs),
(287,819,o),
(232,820,o),
(168,820,o),
(98,821,o),
(65,821,qs),
(50,821,o),
(24,815,o),
(24,804,qs),
(24,793,o),
(47,789,o),
(64,789,qs),
(74,789,o),
(99,788,o),
(122,780,o),
(137,765,o),
(137,750,qs),
(137,716,o),
(139,648,o),
(141,571,o),
(143,481,o),
(143,425,qs),
(143,375,o),
(143,302,o),
(142,245,o),
(142,199,o),
(141,152,o),
(141,99,o),
(141,64,qs),
(141,43,o),
(107,28,o),
(60,28,qs),
(40,28,o),
(21,22,o),
(21,11,qs),
(21,3,o),
(52,0,o),
(67,0,qs),
(128,1,o),
(249,2,o),
(310,2,qs),
(371,2,o),
(486,0,o),
(547,0,qs),
(567,0,o),
(587,8,o),
(589,33,qs),
(592,63,o),
(597,141,o),
(602,213,o),
(605,268,o),
(605,277,qs),
(605,289,o),
(600,310,o),
(586,310,qs),
(581,310,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 1 0 1 106 0 0 6 0 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 10 0 11 13 10 11 91 8 1 5 5 6 83 0 6 6 12 67 0 12 12 9 83 0 9 9 15 67 0 13 13 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 1 0 1 106 0 0 6 0 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 8 1 5 5 6 83 0 6 6 12 67 0 13 13 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 72 values pushed */
0 1 0 1 106 0 0 6 0 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 8 1 5 5 6 83 0 6 6 14 67 0 13 13 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
16 15 137 135 134 127 121 119 109 107 99 90 89 87 82 80 75 63 59 56 39 37 33 25 15 148 16 148 37 36 15 17
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = Eacute;
unicode = 201;
},
{
glyphname = Ebreve;
kernLeft = B;
kernRight = AE;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(565,303,o),
(564,281,qs),
(563,264,o),
(560,222,o),
(556,178,o),
(552,136,o),
(551,121,qs),
(550,108,o),
(542,93,o),
(530,86,o),
(515,84,o),
(508,84,qs),
(230,84,l),
(230,377,l),
(244,377,o),
(265,378,o),
(283,379,o),
(304,379,o),
(318,379,qs),
(338,379,o),
(364,378,o),
(372,378,qs),
(386,378,o),
(405,363,o),
(416,341,o),
(420,318,o),
(420,310,qs),
(420,297,o),
(435,275,o),
(461,275,qs),
(503,275,o),
(503,308,qs),
(503,331,o),
(501,391,o),
(501,420,qs),
(501,449,o),
(503,502,o),
(503,531,qs),
(503,555,o),
(477,570,o),
(460,570,qs),
(439,570,o),
(418,548,o),
(418,533,qs),
(418,526,o),
(417,503,o),
(414,480,o),
(407,464,o),
(401,464,qs),
(397,464,o),
(378,463,o),
(354,462,o),
(328,461,o),
(318,461,qs),
(303,461,o),
(283,461,o),
(264,462,o),
(244,463,o),
(230,464,q),
(230,737,l),
(482,737,ls),
(499,737,o),
(519,727,o),
(519,709,qs),
(519,637,ls),
(519,623,o),
(540,597,o),
(566,597,qs),
(588,597,o),
(607,616,o),
(607,643,qs),
(607,785,ls),
(607,806,o),
(593,821,o),
(579,821,qs),
(535,821,o),
(481,820,o),
(436,820,o),
(389,819,o),
(352,819,qs),
(333,819,o),
(273,820,o),
(202,820,o),
(127,821,o),
(94,821,qs),
(62,821,o),
(37,807,o),
(37,781,qs),
(37,764,o),
(68,747,o),
(93,747,qs),
(114,747,o),
(132,737,o),
(132,708,qs),
(132,678,o),
(134,620,o),
(136,554,o),
(138,476,o),
(138,425,qs),
(138,379,o),
(138,315,o),
(137,266,o),
(137,227,o),
(136,187,o),
(136,141,o),
(136,109,qs),
(136,92,o),
(118,75,o),
(89,73,qs),
(68,72,o),
(38,55,o),
(38,33,qs),
(38,16,o),
(60,0,o),
(86,0,qs),
(116,0,o),
(186,1,o),
(256,1,o),
(326,2,o),
(356,2,qs),
(417,2,o),
(532,0,o),
(593,0,qs),
(618,0,o),
(633,12,o),
(635,33,qs),
(638,63,o),
(644,143,o),
(649,218,o),
(651,276,o),
(651,285,qs),
(651,302,o),
(627,318,o),
(613,318,qs),
(595,318,o)
);
},
{
closed = 1;
nodes = (
(477,971,o),
(462,971,qs),
(449,971,o),
(430,953,o),
(430,942,qs),
(430,934,o),
(403,919,o),
(374,919,qs),
(365,919,o),
(344,921,o),
(326,927,o),
(315,936,o),
(315,942,qs),
(315,959,o),
(296,971,o),
(279,971,qs),
(262,971,o),
(247,954,o),
(247,941,qs),
(247,909,o),
(314,862,o),
(379,862,qs),
(398,862,o),
(441,872,o),
(477,892,o),
(500,921,o),
(500,941,qs),
(500,961,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
75 1 7 8 127 1 2 9 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
75 1 7 8 127 1 11 9 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
15 1 13 14 13 106 0 5 3 8 3 5 8 104 16 1 0 10 9 10 0 9 104 0 14 0 12 4 14 12 91 0 8 0 9 2 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 10 10 7 83 0 7 7 23 67 11 1 2 2 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
15 1 13 14 13 106 0 5 3 8 3 5 8 104 16 1 0 10 9 10 0 9 104 0 14 0 12 4 14 12 91 0 7 0 10 0 7 10 91 0 8 0 9 2 8 9 91 6 1 3 3 4 83 0 4 4 12 67 11 1 2 2 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
15 1 13 14 13 106 0 5 3 8 3 5 8 104 16 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 14 0 12 4 14 12 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
15 1 13 14 13 106 0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 16 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 14 0 12 4 14 12 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 82 values pushed */
15 1 13 14 13 106 0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 16 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 14 0 12 4 14 12 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 14 67 0 11 11 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
1 0 161 159 155 153 147 145 141 139 123 121 120 111 105 103 94 92 86 76 74 72 67 65 60 48 44 42 26 24 20 10 0 134 1 134 17 15
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (38,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (241,355);
ref = breve;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 84 values pushed */
15 1 13 14 13 106 0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 16 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 14 0 12 4 14 12 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 10 10 7 83 0 7 7 15 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
15 1 13 14 13 106 0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 16 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 14 0 12 4 14 12 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 82 values pushed */
15 1 13 14 13 106 0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 16 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 14 0 12 4 14 12 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 14 67 0 11 11 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
2 1 160 158 154 152 146 144 141 139 123 121 120 113 107 105 95 93 87 78 77 75 68 66 61 49 45 42 25 23 19 11 1 134 2 134 17 26
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(428,972,o),
(420,972,qs),
(403,972,o),
(403,949,qs),
(403,939,o),
(390,921,o),
(368,908,o),
(341,900,o),
(328,900,qs),
(314,900,o),
(287,904,o),
(266,914,o),
(254,934,o),
(254,949,qs),
(254,961,o),
(248,972,o),
(237,972,qs),
(220,972,o),
(220,948,qs),
(220,918,o),
(283,875,o),
(328,875,qs),
(347,875,o),
(387,884,o),
(419,902,o),
(439,930,o),
(439,948,qs),
(439,964,o)
);
},
{
closed = 1;
nodes = (
(570,293,o),
(569,273,qs),
(568,252,o),
(565,195,o),
(561,137,o),
(557,86,o),
(556,73,qs),
(555,60,o),
(547,45,o),
(535,38,o),
(520,36,o),
(513,36,qs),
(184,36,l),
(184,401,l),
(213,402,o),
(269,403,o),
(298,403,qs),
(327,403,o),
(363,402,o),
(377,402,qs),
(392,402,o),
(411,383,o),
(421,355,o),
(425,322,o),
(425,309,qs),
(425,296,o),
(435,280,o),
(442,280,qs),
(446,280,o),
(457,290,o),
(457,307,qs),
(457,335,o),
(455,391,o),
(455,420,qs),
(455,449,o),
(457,504,o),
(457,533,qs),
(457,544,o),
(452,560,o),
(440,560,qs),
(434,560,o),
(427,552,o),
(424,541,o),
(423,531,o),
(423,530,qs),
(423,521,o),
(422,490,o),
(419,461,o),
(412,440,o),
(406,440,qs),
(401,440,o),
(377,439,o),
(346,438,o),
(312,437,o),
(298,437,qs),
(269,437,o),
(213,439,o),
(184,440,q),
(184,785,l),
(487,785,ls),
(497,785,o),
(524,776,o),
(524,757,qs),
(524,645,ls),
(524,631,o),
(529,605,o),
(544,605,qs),
(555,605,o),
(561,632,o),
(561,651,qs),
(561,785,ls),
(561,806,o),
(547,821,o),
(533,821,qs),
(489,821,o),
(435,820,o),
(390,820,o),
(343,819,o),
(306,819,qs),
(287,819,o),
(232,820,o),
(168,820,o),
(98,821,o),
(65,821,qs),
(50,821,o),
(24,815,o),
(24,804,qs),
(24,793,o),
(47,789,o),
(64,789,qs),
(74,789,o),
(99,788,o),
(122,780,o),
(137,765,o),
(137,750,qs),
(137,716,o),
(139,648,o),
(141,571,o),
(143,481,o),
(143,425,qs),
(143,375,o),
(143,302,o),
(142,245,o),
(142,199,o),
(141,152,o),
(141,99,o),
(141,64,qs),
(141,43,o),
(107,28,o),
(60,28,qs),
(40,28,o),
(21,22,o),
(21,11,qs),
(21,3,o),
(52,0,o),
(67,0,qs),
(128,1,o),
(249,2,o),
(310,2,qs),
(371,2,o),
(486,0,o),
(547,0,qs),
(567,0,o),
(587,8,o),
(589,33,qs),
(592,63,o),
(597,141,o),
(602,213,o),
(605,268,o),
(605,277,qs),
(605,289,o),
(600,310,o),
(586,310,qs),
(581,310,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
3 1 1 2 1 106 0 9 7 12 7 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 2 0 0 8 2 0 91 0 12 0 13 15 12 13 91 10 1 7 7 8 83 0 8 8 12 67 0 14 14 11 83 0 11 11 15 67 0 15 15 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
3 1 1 2 1 106 0 9 7 12 7 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 2 0 0 8 2 0 91 0 11 0 14 4 11 14 91 0 12 0 13 15 12 13 91 10 1 7 7 8 83 0 8 8 12 67 0 15 15 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 76 values pushed */
3 1 1 2 1 106 0 9 7 12 7 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 2 0 0 8 2 0 91 0 11 0 14 4 11 14 91 0 12 0 13 15 12 13 91 10 1 7 7 8 83 0 8 8 14 67 0 15 15 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
29 28 150 148 147 140 134 132 122 120 112 103 102 100 95 93 88 76 72 69 52 50 46 38 28 161 29 161 37 38 35 36 17 19
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = Ebreve;
unicode = 276;
},
{
glyphname = Ecaron;
kernLeft = B;
kernRight = AE;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(453,965,o),
(418,951,o),
(381,933,o),
(366,922,q),
(351,933,o),
(314,951,o),
(280,965,o),
(252,972,o),
(247,972,qs),
(241,972,o),
(234,963,o),
(234,958,qs),
(234,938,o),
(270,894,o),
(316,855,o),
(359,830,o),
(366,830,qs),
(375,830,o),
(419,856,o),
(464,893,o),
(499,935,o),
(499,951,qs),
(499,958,o),
(494,972,o),
(486,972,qs),
(481,972,o)
);
},
{
closed = 1;
nodes = (
(565,303,o),
(564,281,qs),
(563,264,o),
(560,222,o),
(556,178,o),
(552,136,o),
(551,121,qs),
(550,108,o),
(542,93,o),
(530,86,o),
(515,84,o),
(508,84,qs),
(230,84,l),
(230,377,l),
(244,377,o),
(265,378,o),
(283,379,o),
(304,379,o),
(318,379,qs),
(338,379,o),
(364,378,o),
(372,378,qs),
(386,378,o),
(405,363,o),
(416,341,o),
(420,318,o),
(420,310,qs),
(420,297,o),
(435,275,o),
(461,275,qs),
(503,275,o),
(503,308,qs),
(503,331,o),
(501,391,o),
(501,420,qs),
(501,449,o),
(503,502,o),
(503,531,qs),
(503,555,o),
(477,570,o),
(460,570,qs),
(439,570,o),
(418,548,o),
(418,533,qs),
(418,526,o),
(417,503,o),
(414,480,o),
(407,464,o),
(401,464,qs),
(397,464,o),
(378,463,o),
(354,462,o),
(328,461,o),
(318,461,qs),
(303,461,o),
(283,461,o),
(264,462,o),
(244,463,o),
(230,464,q),
(230,737,l),
(482,737,ls),
(499,737,o),
(519,727,o),
(519,709,qs),
(519,637,ls),
(519,623,o),
(540,597,o),
(566,597,qs),
(588,597,o),
(607,616,o),
(607,643,qs),
(607,785,ls),
(607,806,o),
(593,821,o),
(579,821,qs),
(535,821,o),
(481,820,o),
(436,820,o),
(389,819,o),
(352,819,qs),
(333,819,o),
(273,820,o),
(202,820,o),
(127,821,o),
(94,821,qs),
(62,821,o),
(37,807,o),
(37,781,qs),
(37,764,o),
(68,747,o),
(93,747,qs),
(114,747,o),
(132,737,o),
(132,708,qs),
(132,678,o),
(134,620,o),
(136,554,o),
(138,476,o),
(138,425,qs),
(138,379,o),
(138,315,o),
(137,266,o),
(137,227,o),
(136,187,o),
(136,141,o),
(136,109,qs),
(136,92,o),
(118,75,o),
(89,73,qs),
(68,72,o),
(38,55,o),
(38,33,qs),
(38,16,o),
(60,0,o),
(86,0,qs),
(116,0,o),
(186,1,o),
(256,1,o),
(326,2,o),
(356,2,qs),
(417,2,o),
(532,0,o),
(593,0,qs),
(618,0,o),
(633,12,o),
(635,33,qs),
(638,63,o),
(644,143,o),
(649,218,o),
(651,276,o),
(651,285,qs),
(651,302,o),
(627,318,o),
(613,318,qs),
(595,318,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
21 1 1 0 101 1 10 11 153 1 5 12 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
21 1 1 0 101 1 10 11 153 1 14 12 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
2 15 2 0 1 0 106 0 1 7 1 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 11 0 12 5 11 12 91 9 1 6 6 7 83 0 7 7 12 67 0 13 13 10 83 0 10 10 23 67 14 1 5 5 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
2 15 2 0 1 0 106 0 1 7 1 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 10 0 13 3 10 13 91 0 11 0 12 5 11 12 91 9 1 6 6 7 83 0 7 7 12 67 14 1 5 5 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
2 15 2 0 1 0 106 0 1 7 1 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 9 1 6 6 7 83 0 7 7 12 67 0 14 14 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
2 15 2 0 1 0 106 0 1 7 1 106 0 6 7 9 9 6 96 0 8 9 11 9 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 0 9 9 7 84 0 7 7 12 67 0 14 14 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 80 values pushed */
2 15 2 0 1 0 106 0 1 7 1 106 0 6 7 9 9 6 96 0 8 9 11 9 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 0 9 9 7 84 0 7 7 14 67 0 14 14 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
27 26 1 0 149 147 146 137 131 129 120 118 112 102 100 98 93 91 86 74 70 68 52 50 46 36 26 160 27 160 17 15 9 7 0 25 1 25 17 15
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(437,964,o),
(403,950,o),
(365,931,o),
(348,921,q),
(331,931,o),
(293,950,o),
(260,964,o),
(234,972,o),
(229,972,qs),
(218,972,o),
(218,959,qs),
(218,943,o),
(253,904,o),
(298,870,o),
(340,847,o),
(348,847,qs),
(357,847,o),
(400,871,o),
(445,904,o),
(479,941,o),
(479,955,qs),
(479,962,o),
(474,972,o),
(468,972,qs),
(463,972,o)
);
},
{
closed = 1;
nodes = (
(567,299,o),
(566,278,qs),
(565,260,o),
(562,210,o),
(558,159,o),
(554,115,o),
(553,103,qs),
(552,90,o),
(544,75,o),
(532,68,o),
(517,66,o),
(510,66,qs),
(211,66,l),
(211,386,l),
(240,387,o),
(281,388,o),
(310,388,qs),
(333,388,o),
(363,387,o),
(374,387,qs),
(389,387,o),
(407,370,o),
(418,345,o),
(422,317,o),
(422,306,qs),
(422,293,o),
(434,277,o),
(453,277,qs),
(466,277,o),
(484,287,o),
(484,304,qs),
(484,332,o),
(482,391,o),
(482,420,qs),
(482,449,o),
(484,506,o),
(484,535,qs),
(484,552,o),
(466,566,o),
(452,566,qs),
(434,566,o),
(420,543,o),
(420,532,qs),
(420,524,o),
(419,498,o),
(416,473,o),
(409,455,o),
(403,455,qs),
(399,455,o),
(378,454,o),
(351,453,o),
(322,452,o),
(310,452,qs),
(281,452,o),
(239,454,o),
(211,455,q),
(211,755,l),
(484,755,ls),
(489,755,o),
(502,754,o),
(513,749,o),
(521,737,o),
(521,727,qs),
(521,640,ls),
(521,626,o),
(535,600,o),
(557,600,qs),
(574,600,o),
(588,622,o),
(588,646,qs),
(588,785,ls),
(588,806,o),
(574,821,o),
(560,821,qs),
(516,821,o),
(462,820,o),
(417,820,o),
(370,819,o),
(333,819,qs),
(314,819,o),
(256,820,o),
(188,820,o),
(115,821,o),
(82,821,qs),
(67,821,o),
(41,812,o),
(41,794,qs),
(41,781,o),
(64,769,o),
(81,769,qs),
(87,769,o),
(105,768,o),
(122,760,o),
(134,745,o),
(134,730,qs),
(134,698,o),
(136,634,o),
(138,562,o),
(140,478,o),
(140,425,qs),
(140,377,o),
(140,309,o),
(139,255,o),
(139,211,o),
(138,167,o),
(138,117,o),
(138,84,qs),
(138,63,o),
(106,48,o),
(77,48,qs),
(57,48,o),
(38,37,o),
(38,21,qs),
(38,7,o),
(67,0,o),
(84,0,qs),
(145,0,o),
(276,2,o),
(337,2,qs),
(398,2,o),
(513,0,o),
(574,0,qs),
(594,0,o),
(614,8,o),
(616,33,qs),
(619,63,o),
(624,142,o),
(629,216,o),
(632,273,o),
(632,282,qs),
(632,297,o),
(616,315,o),
(602,315,qs),
(589,315,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
2 15 2 0 1 0 106 0 1 7 1 106 0 6 7 9 9 6 96 0 8 9 11 9 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 11 0 12 14 11 12 91 0 9 9 7 84 0 7 7 12 67 0 13 13 10 83 0 10 10 15 67 0 14 14 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
2 15 2 0 1 0 106 0 1 7 1 106 0 6 7 9 9 6 96 0 8 9 11 9 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 0 9 9 7 84 0 7 7 12 67 0 14 14 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 80 values pushed */
2 15 2 0 1 0 106 0 1 7 1 106 0 6 7 9 9 6 96 0 8 9 11 9 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 0 9 9 7 84 0 7 7 14 67 0 14 14 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
26 25 1 0 147 145 144 137 131 129 119 117 111 102 101 99 92 90 85 73 69 66 49 47 43 35 25 158 26 158 16 14 9 7 0 24 1 24 17 15
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(414,962,o),
(382,947,o),
(343,929,o),
(322,920,q),
(301,929,o),
(262,947,o),
(231,962,o),
(208,972,o),
(203,972,qs),
(195,972,o),
(195,961,qs),
(195,952,o),
(228,923,o),
(272,896,o),
(313,876,o),
(322,876,qs),
(331,876,o),
(374,896,o),
(417,923,o),
(450,952,o),
(450,961,qs),
(450,972,o),
(442,972,qs),
(437,972,o)
);
},
{
closed = 1;
nodes = (
(570,293,o),
(569,273,qs),
(568,252,o),
(565,195,o),
(561,137,o),
(557,86,o),
(556,73,qs),
(555,60,o),
(547,45,o),
(535,38,o),
(520,36,o),
(513,36,qs),
(184,36,l),
(184,401,l),
(213,402,o),
(269,403,o),
(298,403,qs),
(327,403,o),
(363,402,o),
(377,402,qs),
(392,402,o),
(411,383,o),
(421,355,o),
(425,322,o),
(425,309,qs),
(425,296,o),
(435,280,o),
(442,280,qs),
(446,280,o),
(457,290,o),
(457,307,qs),
(457,335,o),
(455,391,o),
(455,420,qs),
(455,449,o),
(457,504,o),
(457,533,qs),
(457,544,o),
(452,560,o),
(440,560,qs),
(434,560,o),
(427,552,o),
(424,541,o),
(423,531,o),
(423,530,qs),
(423,521,o),
(422,490,o),
(419,461,o),
(412,440,o),
(406,440,qs),
(401,440,o),
(377,439,o),
(346,438,o),
(312,437,o),
(298,437,qs),
(269,437,o),
(213,439,o),
(184,440,q),
(184,785,l),
(487,785,ls),
(497,785,o),
(524,776,o),
(524,757,qs),
(524,645,ls),
(524,631,o),
(529,605,o),
(544,605,qs),
(555,605,o),
(561,632,o),
(561,651,qs),
(561,785,ls),
(561,806,o),
(547,821,o),
(533,821,qs),
(489,821,o),
(435,820,o),
(390,820,o),
(343,819,o),
(306,819,qs),
(287,819,o),
(232,820,o),
(168,820,o),
(98,821,o),
(65,821,qs),
(50,821,o),
(24,815,o),
(24,804,qs),
(24,793,o),
(47,789,o),
(64,789,qs),
(74,789,o),
(99,788,o),
(122,780,o),
(137,765,o),
(137,750,qs),
(137,716,o),
(139,648,o),
(141,571,o),
(143,481,o),
(143,425,qs),
(143,375,o),
(143,302,o),
(142,245,o),
(142,199,o),
(141,152,o),
(141,99,o),
(141,64,qs),
(141,43,o),
(107,28,o),
(60,28,qs),
(40,28,o),
(21,22,o),
(21,11,qs),
(21,3,o),
(52,0,o),
(67,0,qs),
(128,1,o),
(249,2,o),
(310,2,qs),
(371,2,o),
(486,0,o),
(547,0,qs),
(567,0,o),
(587,8,o),
(589,33,qs),
(592,63,o),
(597,141,o),
(602,213,o),
(605,268,o),
(605,277,qs),
(605,289,o),
(600,310,o),
(586,310,qs),
(581,310,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
19 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
2 15 2 0 1 0 106 0 1 7 1 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 11 0 12 14 11 12 91 9 1 6 6 7 83 0 7 7 12 67 0 13 13 10 83 0 10 10 15 67 0 14 14 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
2 15 2 0 1 0 106 0 1 7 1 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 9 1 6 6 7 83 0 7 7 12 67 0 14 14 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
2 15 2 0 1 0 106 0 1 7 1 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 9 1 6 6 7 83 0 7 7 14 67 0 14 14 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
25 24 1 0 146 144 143 136 130 128 118 116 108 99 98 96 91 89 84 72 68 65 48 46 42 34 24 157 25 157 15 13 8 6 0 23 1 23 17 15
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = Ecaron;
unicode = 282;
},
{
glyphname = Ecircumflex;
kernLeft = B;
kernRight = AE;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(497,844,o),
(497,851,qs),
(497,867,o),
(462,908,o),
(416,946,o),
(373,972,o),
(364,972,qs),
(357,972,o),
(314,947,o),
(268,909,o),
(232,864,o),
(232,844,qs),
(232,839,o),
(239,830,o),
(245,830,qs),
(251,830,o),
(276,837,o),
(309,851,o),
(347,869,o),
(364,880,q),
(381,869,o),
(419,851,o),
(453,837,o),
(479,830,o),
(484,830,qs),
(492,830,o)
);
},
{
closed = 1;
nodes = (
(565,303,o),
(564,281,qs),
(563,264,o),
(560,222,o),
(556,178,o),
(552,136,o),
(551,121,qs),
(550,108,o),
(542,93,o),
(530,86,o),
(515,84,o),
(508,84,qs),
(230,84,l),
(230,377,l),
(244,377,o),
(265,378,o),
(283,379,o),
(304,379,o),
(318,379,qs),
(338,379,o),
(364,378,o),
(372,378,qs),
(386,378,o),
(405,363,o),
(416,341,o),
(420,318,o),
(420,310,qs),
(420,297,o),
(435,275,o),
(461,275,qs),
(503,275,o),
(503,308,qs),
(503,331,o),
(501,391,o),
(501,420,qs),
(501,449,o),
(503,502,o),
(503,531,qs),
(503,555,o),
(477,570,o),
(460,570,qs),
(439,570,o),
(418,548,o),
(418,533,qs),
(418,526,o),
(417,503,o),
(414,480,o),
(407,464,o),
(401,464,qs),
(397,464,o),
(378,463,o),
(354,462,o),
(328,461,o),
(318,461,qs),
(303,461,o),
(283,461,o),
(264,462,o),
(244,463,o),
(230,464,q),
(230,737,l),
(482,737,ls),
(499,737,o),
(519,727,o),
(519,709,qs),
(519,637,ls),
(519,623,o),
(540,597,o),
(566,597,qs),
(588,597,o),
(607,616,o),
(607,643,qs),
(607,785,ls),
(607,806,o),
(593,821,o),
(579,821,qs),
(535,821,o),
(481,820,o),
(436,820,o),
(389,819,o),
(352,819,qs),
(333,819,o),
(273,820,o),
(202,820,o),
(127,821,o),
(94,821,qs),
(62,821,o),
(37,807,o),
(37,781,qs),
(37,764,o),
(68,747,o),
(93,747,qs),
(114,747,o),
(132,737,o),
(132,708,qs),
(132,678,o),
(134,620,o),
(136,554,o),
(138,476,o),
(138,425,qs),
(138,379,o),
(138,315,o),
(137,266,o),
(137,227,o),
(136,187,o),
(136,141,o),
(136,109,qs),
(136,92,o),
(118,75,o),
(89,73,qs),
(68,72,o),
(38,55,o),
(38,33,qs),
(38,16,o),
(60,0,o),
(86,0,qs),
(116,0,o),
(186,1,o),
(256,1,o),
(326,2,o),
(356,2,qs),
(417,2,o),
(532,0,o),
(593,0,qs),
(618,0,o),
(633,12,o),
(635,33,qs),
(638,63,o),
(644,143,o),
(649,218,o),
(651,276,o),
(651,285,qs),
(651,302,o),
(627,318,o),
(613,318,qs),
(595,318,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
5 1 0 2 101 1 10 11 153 1 5 12 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
5 1 0 2 101 1 10 11 153 1 14 12 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 2 0 2 106 1 15 2 0 7 0 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 11 0 12 5 11 12 91 9 1 6 6 7 83 0 7 7 12 67 0 13 13 10 83 0 10 10 23 67 14 1 5 5 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 2 0 2 106 1 15 2 0 7 0 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 10 0 13 3 10 13 91 0 11 0 12 5 11 12 91 9 1 6 6 7 83 0 7 7 12 67 14 1 5 5 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 2 0 2 106 1 15 2 0 7 0 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 9 1 6 6 7 83 0 7 7 12 67 0 14 14 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 2 0 2 106 1 15 2 0 7 0 106 0 6 7 9 9 6 96 0 8 9 11 9 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 0 9 9 7 84 0 7 7 12 67 0 14 14 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 80 values pushed */
0 2 0 2 106 1 15 2 0 7 0 106 0 6 7 9 9 6 96 0 8 9 11 9 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 0 9 9 7 84 0 7 7 14 67 0 14 14 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
27 26 1 0 149 147 146 137 131 129 120 118 112 102 100 98 93 91 86 74 70 68 52 50 46 36 26 160 27 160 19 17 11 9 0 25 1 25 17 15
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(479,857,o),
(479,864,qs),
(479,877,o),
(445,915,o),
(400,948,o),
(357,972,o),
(348,972,qs),
(340,972,o),
(298,949,o),
(253,915,o),
(218,876,o),
(218,860,qs),
(218,847,o),
(229,847,qs),
(234,847,o),
(260,855,o),
(293,869,o),
(331,888,o),
(348,898,q),
(365,888,o),
(403,869,o),
(437,855,o),
(463,847,o),
(468,847,qs),
(474,847,o)
);
},
{
closed = 1;
nodes = (
(567,299,o),
(566,278,qs),
(565,260,o),
(562,210,o),
(558,159,o),
(554,115,o),
(553,103,qs),
(552,90,o),
(544,75,o),
(532,68,o),
(517,66,o),
(510,66,qs),
(211,66,l),
(211,386,l),
(240,387,o),
(281,388,o),
(310,388,qs),
(333,388,o),
(363,387,o),
(374,387,qs),
(389,387,o),
(407,370,o),
(418,345,o),
(422,317,o),
(422,306,qs),
(422,293,o),
(434,277,o),
(453,277,qs),
(466,277,o),
(484,287,o),
(484,304,qs),
(484,332,o),
(482,391,o),
(482,420,qs),
(482,449,o),
(484,506,o),
(484,535,qs),
(484,552,o),
(466,566,o),
(452,566,qs),
(434,566,o),
(420,543,o),
(420,532,qs),
(420,524,o),
(419,498,o),
(416,473,o),
(409,455,o),
(403,455,qs),
(399,455,o),
(378,454,o),
(351,453,o),
(322,452,o),
(310,452,qs),
(281,452,o),
(239,454,o),
(211,455,q),
(211,755,l),
(484,755,ls),
(489,755,o),
(502,754,o),
(513,749,o),
(521,737,o),
(521,727,qs),
(521,640,ls),
(521,626,o),
(535,600,o),
(557,600,qs),
(574,600,o),
(588,622,o),
(588,646,qs),
(588,785,ls),
(588,806,o),
(574,821,o),
(560,821,qs),
(516,821,o),
(462,820,o),
(417,820,o),
(370,819,o),
(333,819,qs),
(314,819,o),
(256,820,o),
(188,820,o),
(115,821,o),
(82,821,qs),
(67,821,o),
(41,812,o),
(41,794,qs),
(41,781,o),
(64,769,o),
(81,769,qs),
(87,769,o),
(105,768,o),
(122,760,o),
(134,745,o),
(134,730,qs),
(134,698,o),
(136,634,o),
(138,562,o),
(140,478,o),
(140,425,qs),
(140,377,o),
(140,309,o),
(139,255,o),
(139,211,o),
(138,167,o),
(138,117,o),
(138,84,qs),
(138,63,o),
(106,48,o),
(77,48,qs),
(57,48,o),
(38,37,o),
(38,21,qs),
(38,7,o),
(67,0,o),
(84,0,qs),
(145,0,o),
(276,2,o),
(337,2,qs),
(398,2,o),
(513,0,o),
(574,0,qs),
(594,0,o),
(614,8,o),
(616,33,qs),
(619,63,o),
(624,142,o),
(629,216,o),
(632,273,o),
(632,282,qs),
(632,297,o),
(616,315,o),
(602,315,qs),
(589,315,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
0 2 0 2 106 1 15 2 0 7 0 106 0 6 7 9 9 6 96 0 8 9 11 9 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 11 0 12 14 11 12 91 0 9 9 7 84 0 7 7 12 67 0 13 13 10 83 0 10 10 15 67 0 14 14 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 2 0 2 106 1 15 2 0 7 0 106 0 6 7 9 9 6 96 0 8 9 11 9 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 0 9 9 7 84 0 7 7 12 67 0 14 14 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 80 values pushed */
0 2 0 2 106 1 15 2 0 7 0 106 0 6 7 9 9 6 96 0 8 9 11 9 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 0 9 9 7 84 0 7 7 14 67 0 14 14 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
26 25 1 0 147 145 144 137 131 129 119 117 111 102 101 99 92 90 85 73 69 66 49 47 43 35 25 158 26 158 18 16 11 9 0 24 1 24 17 15
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(453,886,qs),
(453,895,o),
(420,925,o),
(377,952,o),
(334,972,o),
(325,972,qs),
(316,972,o),
(275,952,o),
(231,925,o),
(198,895,o),
(198,886,qs),
(198,875,o),
(206,875,qs),
(211,875,o),
(236,885,o),
(270,901,o),
(308,919,o),
(325,928,q),
(342,919,o),
(380,901,o),
(414,885,o),
(440,875,o),
(445,875,qs),
(453,875,o)
);
},
{
closed = 1;
nodes = (
(570,293,o),
(569,273,qs),
(568,252,o),
(565,195,o),
(561,137,o),
(557,86,o),
(556,73,qs),
(555,60,o),
(547,45,o),
(535,38,o),
(520,36,o),
(513,36,qs),
(184,36,l),
(184,401,l),
(213,402,o),
(269,403,o),
(298,403,qs),
(327,403,o),
(363,402,o),
(377,402,qs),
(392,402,o),
(411,383,o),
(421,355,o),
(425,322,o),
(425,309,qs),
(425,296,o),
(435,280,o),
(442,280,qs),
(446,280,o),
(457,290,o),
(457,307,qs),
(457,335,o),
(455,391,o),
(455,420,qs),
(455,449,o),
(457,504,o),
(457,533,qs),
(457,544,o),
(452,560,o),
(440,560,qs),
(434,560,o),
(427,552,o),
(424,541,o),
(423,531,o),
(423,530,qs),
(423,521,o),
(422,490,o),
(419,461,o),
(412,440,o),
(406,440,qs),
(401,440,o),
(377,439,o),
(346,438,o),
(312,437,o),
(298,437,qs),
(269,437,o),
(213,439,o),
(184,440,q),
(184,785,l),
(487,785,ls),
(497,785,o),
(524,776,o),
(524,757,qs),
(524,645,ls),
(524,631,o),
(529,605,o),
(544,605,qs),
(555,605,o),
(561,632,o),
(561,651,qs),
(561,785,ls),
(561,806,o),
(547,821,o),
(533,821,qs),
(489,821,o),
(435,820,o),
(390,820,o),
(343,819,o),
(306,819,qs),
(287,819,o),
(232,820,o),
(168,820,o),
(98,821,o),
(65,821,qs),
(50,821,o),
(24,815,o),
(24,804,qs),
(24,793,o),
(47,789,o),
(64,789,qs),
(74,789,o),
(99,788,o),
(122,780,o),
(137,765,o),
(137,750,qs),
(137,716,o),
(139,648,o),
(141,571,o),
(143,481,o),
(143,425,qs),
(143,375,o),
(143,302,o),
(142,245,o),
(142,199,o),
(141,152,o),
(141,99,o),
(141,64,qs),
(141,43,o),
(107,28,o),
(60,28,qs),
(40,28,o),
(21,22,o),
(21,11,qs),
(21,3,o),
(52,0,o),
(67,0,qs),
(128,1,o),
(249,2,o),
(310,2,qs),
(371,2,o),
(486,0,o),
(547,0,qs),
(567,0,o),
(587,8,o),
(589,33,qs),
(592,63,o),
(597,141,o),
(602,213,o),
(605,268,o),
(605,277,qs),
(605,289,o),
(600,310,o),
(586,310,qs),
(581,310,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
0 2 0 2 106 1 15 2 0 7 0 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 11 0 12 14 11 12 91 9 1 6 6 7 83 0 7 7 12 67 0 13 13 10 83 0 10 10 15 67 0 14 14 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 2 0 2 106 1 15 2 0 7 0 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 9 1 6 6 7 83 0 7 7 12 67 0 14 14 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
0 2 0 2 106 1 15 2 0 7 0 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 9 1 6 6 7 83 0 7 7 14 67 0 14 14 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
25 24 1 0 146 144 143 136 130 128 118 116 108 99 98 96 91 89 84 72 68 65 48 46 42 34 24 157 25 157 18 16 11 9 0 23 1 23 17 15
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = Ecircumflex;
unicode = 202;
},
{
glyphname = Edieresis;
kernLeft = B;
kernRight = AE;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(224,841,o),
(249,841,qs),
(260,841,o),
(284,847,o),
(303,863,o),
(315,890,o),
(315,911,qs),
(315,938,o),
(280,972,o),
(256,972,qs),
(238,972,o),
(213,958,o),
(196,938,o),
(189,915,o),
(189,907,qs),
(189,878,o)
);
},
{
closed = 1;
nodes = (
(431,830,o),
(456,830,qs),
(467,830,o),
(491,836,o),
(510,852,o),
(522,879,o),
(522,900,qs),
(522,928,o),
(487,961,o),
(463,961,qs),
(445,961,o),
(420,947,o),
(403,927,o),
(396,904,o),
(396,896,qs),
(396,867,o)
);
},
{
closed = 1;
nodes = (
(565,303,o),
(564,281,qs),
(563,264,o),
(560,222,o),
(556,178,o),
(552,136,o),
(551,121,qs),
(550,108,o),
(542,93,o),
(530,86,o),
(515,84,o),
(508,84,qs),
(230,84,l),
(230,377,l),
(244,377,o),
(265,378,o),
(283,379,o),
(304,379,o),
(318,379,qs),
(338,379,o),
(364,378,o),
(372,378,qs),
(386,378,o),
(405,363,o),
(416,341,o),
(420,318,o),
(420,310,qs),
(420,297,o),
(435,275,o),
(461,275,qs),
(503,275,o),
(503,308,qs),
(503,331,o),
(501,391,o),
(501,420,qs),
(501,449,o),
(503,502,o),
(503,531,qs),
(503,555,o),
(477,570,o),
(460,570,qs),
(439,570,o),
(418,548,o),
(418,533,qs),
(418,526,o),
(417,503,o),
(414,480,o),
(407,464,o),
(401,464,qs),
(397,464,o),
(378,463,o),
(354,462,o),
(328,461,o),
(318,461,qs),
(303,461,o),
(283,461,o),
(264,462,o),
(244,463,o),
(230,464,q),
(230,737,l),
(482,737,ls),
(499,737,o),
(519,727,o),
(519,709,qs),
(519,637,ls),
(519,623,o),
(540,597,o),
(566,597,qs),
(588,597,o),
(607,616,o),
(607,643,qs),
(607,785,ls),
(607,806,o),
(593,821,o),
(579,821,qs),
(535,821,o),
(481,820,o),
(436,820,o),
(389,819,o),
(352,819,qs),
(333,819,o),
(273,820,o),
(202,820,o),
(127,821,o),
(94,821,qs),
(62,821,o),
(37,807,o),
(37,781,qs),
(37,764,o),
(68,747,o),
(93,747,qs),
(114,747,o),
(132,737,o),
(132,708,qs),
(132,678,o),
(134,620,o),
(136,554,o),
(138,476,o),
(138,425,qs),
(138,379,o),
(138,315,o),
(137,266,o),
(137,227,o),
(136,187,o),
(136,141,o),
(136,109,qs),
(136,92,o),
(118,75,o),
(89,73,qs),
(68,72,o),
(38,55,o),
(38,33,qs),
(38,16,o),
(60,0,o),
(86,0,qs),
(116,0,o),
(186,1,o),
(256,1,o),
(326,2,o),
(356,2,qs),
(417,2,o),
(532,0,o),
(593,0,qs),
(618,0,o),
(633,12,o),
(635,33,qs),
(638,63,o),
(644,143,o),
(649,218,o),
(651,276,o),
(651,285,qs),
(651,302,o),
(627,318,o),
(613,318,qs),
(595,318,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
107 1 11 12 159 1 6 13 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
107 1 11 12 159 1 15 13 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 9 7 12 7 9 12 104 16 1 4 14 13 14 4 13 104 2 1 0 3 1 1 8 0 1 91 0 12 0 13 6 12 13 91 10 1 7 7 8 83 0 8 8 12 67 0 14 14 11 83 0 11 11 23 67 15 1 6 6 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 9 7 12 7 9 12 104 16 1 4 14 13 14 4 13 104 2 1 0 3 1 1 8 0 1 91 0 11 0 14 4 11 14 91 0 12 0 13 6 12 13 91 10 1 7 7 8 83 0 8 8 12 67 15 1 6 6 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 9 7 12 7 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 0 11 0 14 4 11 14 91 0 12 0 13 15 12 13 91 10 1 7 7 8 83 0 8 8 12 67 0 15 15 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 84 values pushed */
0 7 8 10 10 7 96 0 9 10 12 10 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 0 11 0 14 4 11 14 91 0 12 0 13 15 12 13 91 0 10 10 8 84 0 8 8 12 67 0 15 15 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 84 values pushed */
0 7 8 10 10 7 96 0 9 10 12 10 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 0 11 0 14 4 11 14 91 0 12 0 13 15 12 13 91 0 10 10 8 84 0 8 8 14 67 0 15 15 5 84 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
33 32 155 153 152 143 137 135 126 124 118 108 106 104 99 97 92 80 76 74 58 56 52 42 32 166 33 166 38 38 38 36 17 19
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(217,859,o),
(237,859,qs),
(256,859,o),
(293,884,o),
(293,920,qs),
(293,943,o),
(264,972,o),
(244,972,qs),
(229,972,o),
(208,960,o),
(194,942,o),
(188,923,o),
(188,916,qs),
(188,891,o)
);
},
{
closed = 1;
nodes = (
(424,847,o),
(444,847,qs),
(463,847,o),
(500,872,o),
(500,908,qs),
(500,931,o),
(471,960,o),
(451,960,qs),
(436,960,o),
(415,948,o),
(401,930,o),
(395,911,o),
(395,904,qs),
(395,879,o)
);
},
{
closed = 1;
nodes = (
(567,299,o),
(566,278,qs),
(565,260,o),
(562,210,o),
(558,159,o),
(554,115,o),
(553,103,qs),
(552,90,o),
(544,75,o),
(532,68,o),
(517,66,o),
(510,66,qs),
(211,66,l),
(211,386,l),
(240,387,o),
(281,388,o),
(310,388,qs),
(333,388,o),
(363,387,o),
(374,387,qs),
(389,387,o),
(407,370,o),
(418,345,o),
(422,317,o),
(422,306,qs),
(422,293,o),
(434,277,o),
(453,277,qs),
(466,277,o),
(484,287,o),
(484,304,qs),
(484,332,o),
(482,391,o),
(482,420,qs),
(482,449,o),
(484,506,o),
(484,535,qs),
(484,552,o),
(466,566,o),
(452,566,qs),
(434,566,o),
(420,543,o),
(420,532,qs),
(420,524,o),
(419,498,o),
(416,473,o),
(409,455,o),
(403,455,qs),
(399,455,o),
(378,454,o),
(351,453,o),
(322,452,o),
(310,452,qs),
(281,452,o),
(239,454,o),
(211,455,q),
(211,755,l),
(484,755,ls),
(489,755,o),
(502,754,o),
(513,749,o),
(521,737,o),
(521,727,qs),
(521,640,ls),
(521,626,o),
(535,600,o),
(557,600,qs),
(574,600,o),
(588,622,o),
(588,646,qs),
(588,785,ls),
(588,806,o),
(574,821,o),
(560,821,qs),
(516,821,o),
(462,820,o),
(417,820,o),
(370,819,o),
(333,819,qs),
(314,819,o),
(256,820,o),
(188,820,o),
(115,821,o),
(82,821,qs),
(67,821,o),
(41,812,o),
(41,794,qs),
(41,781,o),
(64,769,o),
(81,769,qs),
(87,769,o),
(105,768,o),
(122,760,o),
(134,745,o),
(134,730,qs),
(134,698,o),
(136,634,o),
(138,562,o),
(140,478,o),
(140,425,qs),
(140,377,o),
(140,309,o),
(139,255,o),
(139,211,o),
(138,167,o),
(138,117,o),
(138,84,qs),
(138,63,o),
(106,48,o),
(77,48,qs),
(57,48,o),
(38,37,o),
(38,21,qs),
(38,7,o),
(67,0,o),
(84,0,qs),
(145,0,o),
(276,2,o),
(337,2,qs),
(398,2,o),
(513,0,o),
(574,0,qs),
(594,0,o),
(614,8,o),
(616,33,qs),
(619,63,o),
(624,142,o),
(629,216,o),
(632,273,o),
(632,282,qs),
(632,297,o),
(616,315,o),
(602,315,qs),
(589,315,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 86 values pushed */
0 7 8 10 10 7 96 0 9 10 12 10 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 0 12 0 13 15 12 13 91 0 10 10 8 84 0 8 8 12 67 0 14 14 11 83 0 11 11 15 67 0 15 15 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 84 values pushed */
0 7 8 10 10 7 96 0 9 10 12 10 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 0 11 0 14 4 11 14 91 0 12 0 13 15 12 13 91 0 10 10 8 84 0 8 8 12 67 0 15 15 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 84 values pushed */
0 7 8 10 10 7 96 0 9 10 12 10 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 0 11 0 14 4 11 14 91 0 12 0 13 15 12 13 91 0 10 10 8 84 0 8 8 14 67 0 15 15 5 84 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
29 28 150 148 147 140 134 132 122 120 114 105 104 102 95 93 88 76 72 69 52 50 46 38 28 161 29 161 36 38 36 36 17 19
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(206,889,o),
(220,889,qs),
(234,889,o),
(261,908,o),
(261,935,qs),
(261,952,o),
(241,972,o),
(227,972,qs),
(216,972,o),
(201,963,o),
(191,950,o),
(186,936,o),
(186,931,qs),
(186,913,o)
);
},
{
closed = 1;
nodes = (
(413,875,o),
(427,875,qs),
(441,875,o),
(468,894,o),
(468,921,qs),
(468,938,o),
(448,958,o),
(434,958,qs),
(423,958,o),
(408,949,o),
(398,936,o),
(393,922,o),
(393,917,qs),
(393,899,o)
);
},
{
closed = 1;
nodes = (
(570,293,o),
(569,273,qs),
(568,252,o),
(565,195,o),
(561,137,o),
(557,86,o),
(556,73,qs),
(555,60,o),
(547,45,o),
(535,38,o),
(520,36,o),
(513,36,qs),
(184,36,l),
(184,401,l),
(213,402,o),
(269,403,o),
(298,403,qs),
(327,403,o),
(363,402,o),
(377,402,qs),
(392,402,o),
(411,383,o),
(421,355,o),
(425,322,o),
(425,309,qs),
(425,296,o),
(435,280,o),
(442,280,qs),
(446,280,o),
(457,290,o),
(457,307,qs),
(457,335,o),
(455,391,o),
(455,420,qs),
(455,449,o),
(457,504,o),
(457,533,qs),
(457,544,o),
(452,560,o),
(440,560,qs),
(434,560,o),
(427,552,o),
(424,541,o),
(423,531,o),
(423,530,qs),
(423,521,o),
(422,490,o),
(419,461,o),
(412,440,o),
(406,440,qs),
(401,440,o),
(377,439,o),
(346,438,o),
(312,437,o),
(298,437,qs),
(269,437,o),
(213,439,o),
(184,440,q),
(184,785,l),
(487,785,ls),
(497,785,o),
(524,776,o),
(524,757,qs),
(524,645,ls),
(524,631,o),
(529,605,o),
(544,605,qs),
(555,605,o),
(561,632,o),
(561,651,qs),
(561,785,ls),
(561,806,o),
(547,821,o),
(533,821,qs),
(489,821,o),
(435,820,o),
(390,820,o),
(343,819,o),
(306,819,qs),
(287,819,o),
(232,820,o),
(168,820,o),
(98,821,o),
(65,821,qs),
(50,821,o),
(24,815,o),
(24,804,qs),
(24,793,o),
(47,789,o),
(64,789,qs),
(74,789,o),
(99,788,o),
(122,780,o),
(137,765,o),
(137,750,qs),
(137,716,o),
(139,648,o),
(141,571,o),
(143,481,o),
(143,425,qs),
(143,375,o),
(143,302,o),
(142,245,o),
(142,199,o),
(141,152,o),
(141,99,o),
(141,64,qs),
(141,43,o),
(107,28,o),
(60,28,qs),
(40,28,o),
(21,22,o),
(21,11,qs),
(21,3,o),
(52,0,o),
(67,0,qs),
(128,1,o),
(249,2,o),
(310,2,qs),
(371,2,o),
(486,0,o),
(547,0,qs),
(567,0,o),
(587,8,o),
(589,33,qs),
(592,63,o),
(597,141,o),
(602,213,o),
(605,268,o),
(605,277,qs),
(605,289,o),
(600,310,o),
(586,310,qs),
(581,310,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 9 7 12 7 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 0 12 0 13 15 12 13 91 10 1 7 7 8 83 0 8 8 12 67 0 14 14 11 83 0 11 11 15 67 0 15 15 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 9 7 12 7 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 0 11 0 14 4 11 14 91 0 12 0 13 15 12 13 91 10 1 7 7 8 83 0 8 8 12 67 0 15 15 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
0 9 7 12 7 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 0 11 0 14 4 11 14 91 0 12 0 13 15 12 13 91 10 1 7 7 8 83 0 8 8 14 67 0 15 15 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
29 28 150 148 147 140 134 132 122 120 112 103 102 100 95 93 88 76 72 69 52 50 46 38 28 161 29 161 36 38 36 36 17 19
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = Edieresis;
unicode = 203;
},
{
glyphname = Edotaccent;
kernLeft = B;
kernRight = AE;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(565,303,o),
(564,281,qs),
(563,264,o),
(560,222,o),
(556,178,o),
(552,136,o),
(551,121,qs),
(550,108,o),
(542,93,o),
(530,86,o),
(515,84,o),
(508,84,qs),
(230,84,l),
(230,377,l),
(244,377,o),
(265,378,o),
(283,379,o),
(304,379,o),
(318,379,qs),
(338,379,o),
(364,378,o),
(372,378,qs),
(386,378,o),
(405,363,o),
(416,341,o),
(420,318,o),
(420,310,qs),
(420,297,o),
(435,275,o),
(461,275,qs),
(503,275,o),
(503,308,qs),
(503,331,o),
(501,391,o),
(501,420,qs),
(501,449,o),
(503,502,o),
(503,531,qs),
(503,555,o),
(477,570,o),
(460,570,qs),
(439,570,o),
(418,548,o),
(418,533,qs),
(418,526,o),
(417,503,o),
(414,480,o),
(407,464,o),
(401,464,qs),
(397,464,o),
(378,463,o),
(354,462,o),
(328,461,o),
(318,461,qs),
(303,461,o),
(283,461,o),
(264,462,o),
(244,463,o),
(230,464,q),
(230,737,l),
(482,737,ls),
(499,737,o),
(519,727,o),
(519,709,qs),
(519,637,ls),
(519,623,o),
(540,597,o),
(566,597,qs),
(588,597,o),
(607,616,o),
(607,643,qs),
(607,785,ls),
(607,806,o),
(593,821,o),
(579,821,qs),
(535,821,o),
(481,820,o),
(436,820,o),
(389,819,o),
(352,819,qs),
(333,819,o),
(273,820,o),
(202,820,o),
(127,821,o),
(94,821,qs),
(62,821,o),
(37,807,o),
(37,781,qs),
(37,764,o),
(68,747,o),
(93,747,qs),
(114,747,o),
(132,737,o),
(132,708,qs),
(132,678,o),
(134,620,o),
(136,554,o),
(138,476,o),
(138,425,qs),
(138,379,o),
(138,315,o),
(137,266,o),
(137,227,o),
(136,187,o),
(136,141,o),
(136,109,qs),
(136,92,o),
(118,75,o),
(89,73,qs),
(68,72,o),
(38,55,o),
(38,33,qs),
(38,16,o),
(60,0,o),
(86,0,qs),
(116,0,o),
(186,1,o),
(256,1,o),
(326,2,o),
(356,2,qs),
(417,2,o),
(532,0,o),
(593,0,qs),
(618,0,o),
(633,12,o),
(635,33,qs),
(638,63,o),
(644,143,o),
(649,218,o),
(651,276,o),
(651,285,qs),
(651,302,o),
(627,318,o),
(613,318,qs),
(595,318,o)
);
},
{
closed = 1;
nodes = (
(322,840,o),
(347,840,qs),
(358,840,o),
(382,846,o),
(401,862,o),
(414,889,o),
(414,910,qs),
(414,937,o),
(378,971,o),
(354,971,qs),
(336,971,o),
(311,958,o),
(295,939,o),
(288,916,o),
(288,906,qs),
(288,874,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
75 1 7 8 127 1 2 9 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
75 1 7 8 127 1 11 9 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 0 12 0 13 4 12 13 91 0 8 0 9 2 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 10 10 7 83 0 7 7 23 67 11 1 2 2 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 0 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 2 8 9 91 6 1 3 3 4 83 0 4 4 12 67 11 1 2 2 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 76 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 14 67 0 11 11 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
1 0 149 147 141 139 123 121 120 111 105 103 94 92 86 76 74 72 67 65 60 48 44 42 26 24 20 10 0 134 1 134 15 15
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (38,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (274,336);
ref = dotaccent;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 12 0 13 4 12 13 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 10 10 7 83 0 7 7 15 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 76 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 14 67 0 11 11 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
2 1 147 145 141 139 123 121 120 113 107 105 95 93 87 78 77 75 68 66 61 49 45 42 25 23 19 11 1 134 2 134 15 26
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(570,293,o),
(569,273,qs),
(568,252,o),
(565,195,o),
(561,137,o),
(557,86,o),
(556,73,qs),
(555,60,o),
(547,45,o),
(535,38,o),
(520,36,o),
(513,36,qs),
(184,36,l),
(184,401,l),
(213,402,o),
(269,403,o),
(298,403,qs),
(327,403,o),
(363,402,o),
(377,402,qs),
(392,402,o),
(411,383,o),
(421,355,o),
(425,322,o),
(425,309,qs),
(425,296,o),
(435,280,o),
(442,280,qs),
(446,280,o),
(457,290,o),
(457,307,qs),
(457,335,o),
(455,391,o),
(455,420,qs),
(455,449,o),
(457,504,o),
(457,533,qs),
(457,544,o),
(452,560,o),
(440,560,qs),
(434,560,o),
(427,552,o),
(424,541,o),
(423,531,o),
(423,530,qs),
(423,521,o),
(422,490,o),
(419,461,o),
(412,440,o),
(406,440,qs),
(401,440,o),
(377,439,o),
(346,438,o),
(312,437,o),
(298,437,qs),
(269,437,o),
(213,439,o),
(184,440,q),
(184,785,l),
(487,785,ls),
(497,785,o),
(524,776,o),
(524,757,qs),
(524,645,ls),
(524,631,o),
(529,605,o),
(544,605,qs),
(555,605,o),
(561,632,o),
(561,651,qs),
(561,785,ls),
(561,806,o),
(547,821,o),
(533,821,qs),
(489,821,o),
(435,820,o),
(390,820,o),
(343,819,o),
(306,819,qs),
(287,819,o),
(232,820,o),
(168,820,o),
(98,821,o),
(65,821,qs),
(50,821,o),
(24,815,o),
(24,804,qs),
(24,793,o),
(47,789,o),
(64,789,qs),
(74,789,o),
(99,788,o),
(122,780,o),
(137,765,o),
(137,750,qs),
(137,716,o),
(139,648,o),
(141,571,o),
(143,481,o),
(143,425,qs),
(143,375,o),
(143,302,o),
(142,245,o),
(142,199,o),
(141,152,o),
(141,99,o),
(141,64,qs),
(141,43,o),
(107,28,o),
(60,28,qs),
(40,28,o),
(21,22,o),
(21,11,qs),
(21,3,o),
(52,0,o),
(67,0,qs),
(128,1,o),
(249,2,o),
(310,2,qs),
(371,2,o),
(486,0,o),
(547,0,qs),
(567,0,o),
(587,8,o),
(589,33,qs),
(592,63,o),
(597,141,o),
(602,213,o),
(605,268,o),
(605,277,qs),
(605,289,o),
(600,310,o),
(586,310,qs),
(581,310,o)
);
},
{
closed = 1;
nodes = (
(311,889,o),
(325,889,qs),
(339,889,o),
(366,908,o),
(366,935,qs),
(366,952,o),
(346,972,o),
(332,972,qs),
(321,972,o),
(306,963,o),
(296,950,o),
(291,936,o),
(291,931,qs),
(291,913,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 12 0 13 4 12 13 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 10 10 7 83 0 7 7 15 67 0 11 11 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 11 11 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 70 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 14 67 0 11 11 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
1 0 146 144 140 138 122 120 119 112 106 104 94 92 84 75 74 72 67 65 60 48 44 41 24 22 18 10 0 133 1 133 15 15
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = Edotaccent;
unicode = 278;
},
{
glyphname = Egrave;
kernLeft = B;
kernRight = AE;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(307,888,o),
(346,860,o),
(386,841,o),
(399,841,qs),
(414,841,o),
(434,860,o),
(434,872,qs),
(434,882,o),
(409,916,o),
(373,949,o),
(334,972,o),
(320,972,qs),
(300,972,o),
(279,949,o),
(279,936,qs),
(279,921,o)
);
},
{
closed = 1;
nodes = (
(565,303,o),
(564,281,qs),
(563,264,o),
(560,222,o),
(556,178,o),
(552,136,o),
(551,121,qs),
(550,108,o),
(542,93,o),
(530,86,o),
(515,84,o),
(508,84,qs),
(230,84,l),
(230,377,l),
(244,377,o),
(265,378,o),
(283,379,o),
(304,379,o),
(318,379,qs),
(338,379,o),
(364,378,o),
(372,378,qs),
(386,378,o),
(405,363,o),
(416,341,o),
(420,318,o),
(420,310,qs),
(420,297,o),
(435,275,o),
(461,275,qs),
(503,275,o),
(503,308,qs),
(503,331,o),
(501,391,o),
(501,420,qs),
(501,449,o),
(503,502,o),
(503,531,qs),
(503,555,o),
(477,570,o),
(460,570,qs),
(439,570,o),
(418,548,o),
(418,533,qs),
(418,526,o),
(417,503,o),
(414,480,o),
(407,464,o),
(401,464,qs),
(397,464,o),
(378,463,o),
(354,462,o),
(328,461,o),
(318,461,qs),
(303,461,o),
(283,461,o),
(264,462,o),
(244,463,o),
(230,464,q),
(230,737,l),
(482,737,ls),
(499,737,o),
(519,727,o),
(519,709,qs),
(519,637,ls),
(519,623,o),
(540,597,o),
(566,597,qs),
(588,597,o),
(607,616,o),
(607,643,qs),
(607,785,ls),
(607,806,o),
(593,821,o),
(579,821,qs),
(535,821,o),
(481,820,o),
(436,820,o),
(389,819,o),
(352,819,qs),
(333,819,o),
(273,820,o),
(202,820,o),
(127,821,o),
(94,821,qs),
(62,821,o),
(37,807,o),
(37,781,qs),
(37,764,o),
(68,747,o),
(93,747,qs),
(114,747,o),
(132,737,o),
(132,708,qs),
(132,678,o),
(134,620,o),
(136,554,o),
(138,476,o),
(138,425,qs),
(138,379,o),
(138,315,o),
(137,266,o),
(137,227,o),
(136,187,o),
(136,141,o),
(136,109,qs),
(136,92,o),
(118,75,o),
(89,73,qs),
(68,72,o),
(38,55,o),
(38,33,qs),
(38,16,o),
(60,0,o),
(86,0,qs),
(116,0,o),
(186,1,o),
(256,1,o),
(326,2,o),
(356,2,qs),
(417,2,o),
(532,0,o),
(593,0,qs),
(618,0,o),
(633,12,o),
(635,33,qs),
(638,63,o),
(644,143,o),
(649,218,o),
(651,276,o),
(651,285,qs),
(651,302,o),
(627,318,o),
(613,318,qs),
(595,318,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
91 1 9 10 143 1 4 11 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
91 1 9 10 143 1 13 11 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 0 1 0 106 0 1 6 1 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 10 0 11 4 10 11 91 8 1 5 5 6 83 0 6 6 12 67 0 12 12 9 83 0 9 9 23 67 13 1 4 4 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 0 1 0 106 0 1 6 1 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 9 0 12 2 9 12 91 0 10 0 11 4 10 11 91 8 1 5 5 6 83 0 6 6 12 67 13 1 4 4 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 0 1 0 106 0 1 6 1 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 8 1 5 5 6 83 0 6 6 12 67 0 13 13 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 0 1 0 106 0 1 6 1 106 0 5 6 8 8 5 96 0 7 8 10 8 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 0 8 8 6 84 0 6 6 12 67 0 13 13 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
0 0 1 0 106 0 1 6 1 106 0 5 6 8 8 5 96 0 7 8 10 8 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 0 8 8 6 84 0 6 6 14 67 0 13 13 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
17 16 139 137 136 127 121 119 110 108 102 92 90 88 83 81 76 64 60 58 42 40 36 26 16 150 17 150 38 34 15 17
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(303,899,o),
(340,872,o),
(378,854,o),
(389,854,qs),
(400,854,o),
(413,867,o),
(413,877,qs),
(413,887,o),
(388,919,o),
(354,950,o),
(318,972,o),
(307,972,qs),
(292,972,o),
(275,955,o),
(275,941,qs),
(275,929,o)
);
},
{
closed = 1;
nodes = (
(567,299,o),
(566,278,qs),
(565,260,o),
(562,210,o),
(558,159,o),
(554,115,o),
(553,103,qs),
(552,90,o),
(544,75,o),
(532,68,o),
(517,66,o),
(510,66,qs),
(211,66,l),
(211,386,l),
(240,387,o),
(281,388,o),
(310,388,qs),
(333,388,o),
(363,387,o),
(374,387,qs),
(389,387,o),
(407,370,o),
(418,345,o),
(422,317,o),
(422,306,qs),
(422,293,o),
(434,277,o),
(453,277,qs),
(466,277,o),
(484,287,o),
(484,304,qs),
(484,332,o),
(482,391,o),
(482,420,qs),
(482,449,o),
(484,506,o),
(484,535,qs),
(484,552,o),
(466,566,o),
(452,566,qs),
(434,566,o),
(420,543,o),
(420,532,qs),
(420,524,o),
(419,498,o),
(416,473,o),
(409,455,o),
(403,455,qs),
(399,455,o),
(378,454,o),
(351,453,o),
(322,452,o),
(310,452,qs),
(281,452,o),
(239,454,o),
(211,455,q),
(211,755,l),
(484,755,ls),
(489,755,o),
(502,754,o),
(513,749,o),
(521,737,o),
(521,727,qs),
(521,640,ls),
(521,626,o),
(535,600,o),
(557,600,qs),
(574,600,o),
(588,622,o),
(588,646,qs),
(588,785,ls),
(588,806,o),
(574,821,o),
(560,821,qs),
(516,821,o),
(462,820,o),
(417,820,o),
(370,819,o),
(333,819,qs),
(314,819,o),
(256,820,o),
(188,820,o),
(115,821,o),
(82,821,qs),
(67,821,o),
(41,812,o),
(41,794,qs),
(41,781,o),
(64,769,o),
(81,769,qs),
(87,769,o),
(105,768,o),
(122,760,o),
(134,745,o),
(134,730,qs),
(134,698,o),
(136,634,o),
(138,562,o),
(140,478,o),
(140,425,qs),
(140,377,o),
(140,309,o),
(139,255,o),
(139,211,o),
(138,167,o),
(138,117,o),
(138,84,qs),
(138,63,o),
(106,48,o),
(77,48,qs),
(57,48,o),
(38,37,o),
(38,21,qs),
(38,7,o),
(67,0,o),
(84,0,qs),
(145,0,o),
(276,2,o),
(337,2,qs),
(398,2,o),
(513,0,o),
(574,0,qs),
(594,0,o),
(614,8,o),
(616,33,qs),
(619,63,o),
(624,142,o),
(629,216,o),
(632,273,o),
(632,282,qs),
(632,297,o),
(616,315,o),
(602,315,qs),
(589,315,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 0 1 0 106 0 1 6 1 106 0 5 6 8 8 5 96 0 7 8 10 8 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 10 0 11 13 10 11 91 0 8 8 6 84 0 6 6 12 67 0 12 12 9 83 0 9 9 15 67 0 13 13 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 0 1 0 106 0 1 6 1 106 0 5 6 8 8 5 96 0 7 8 10 8 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 0 8 8 6 84 0 6 6 12 67 0 13 13 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
0 0 1 0 106 0 1 6 1 106 0 5 6 8 8 5 96 0 7 8 10 8 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 0 8 8 6 84 0 6 6 14 67 0 13 13 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
17 16 138 136 135 128 122 120 110 108 102 93 92 90 83 81 76 64 60 57 40 38 34 26 16 149 17 149 38 34 15 17
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(297,917,o),
(333,893,o),
(368,875,o),
(375,875,qs),
(383,875,o),
(383,886,qs),
(383,895,o),
(359,925,o),
(327,952,o),
(295,972,o),
(288,972,qs),
(280,972,o),
(269,964,o),
(269,950,qs),
(269,942,o)
);
},
{
closed = 1;
nodes = (
(570,293,o),
(569,273,qs),
(568,252,o),
(565,195,o),
(561,137,o),
(557,86,o),
(556,73,qs),
(555,60,o),
(547,45,o),
(535,38,o),
(520,36,o),
(513,36,qs),
(184,36,l),
(184,401,l),
(213,402,o),
(269,403,o),
(298,403,qs),
(327,403,o),
(363,402,o),
(377,402,qs),
(392,402,o),
(411,383,o),
(421,355,o),
(425,322,o),
(425,309,qs),
(425,296,o),
(435,280,o),
(442,280,qs),
(446,280,o),
(457,290,o),
(457,307,qs),
(457,335,o),
(455,391,o),
(455,420,qs),
(455,449,o),
(457,504,o),
(457,533,qs),
(457,544,o),
(452,560,o),
(440,560,qs),
(434,560,o),
(427,552,o),
(424,541,o),
(423,531,o),
(423,530,qs),
(423,521,o),
(422,490,o),
(419,461,o),
(412,440,o),
(406,440,qs),
(401,440,o),
(377,439,o),
(346,438,o),
(312,437,o),
(298,437,qs),
(269,437,o),
(213,439,o),
(184,440,q),
(184,785,l),
(487,785,ls),
(497,785,o),
(524,776,o),
(524,757,qs),
(524,645,ls),
(524,631,o),
(529,605,o),
(544,605,qs),
(555,605,o),
(561,632,o),
(561,651,qs),
(561,785,ls),
(561,806,o),
(547,821,o),
(533,821,qs),
(489,821,o),
(435,820,o),
(390,820,o),
(343,819,o),
(306,819,qs),
(287,819,o),
(232,820,o),
(168,820,o),
(98,821,o),
(65,821,qs),
(50,821,o),
(24,815,o),
(24,804,qs),
(24,793,o),
(47,789,o),
(64,789,qs),
(74,789,o),
(99,788,o),
(122,780,o),
(137,765,o),
(137,750,qs),
(137,716,o),
(139,648,o),
(141,571,o),
(143,481,o),
(143,425,qs),
(143,375,o),
(143,302,o),
(142,245,o),
(142,199,o),
(141,152,o),
(141,99,o),
(141,64,qs),
(141,43,o),
(107,28,o),
(60,28,qs),
(40,28,o),
(21,22,o),
(21,11,qs),
(21,3,o),
(52,0,o),
(67,0,qs),
(128,1,o),
(249,2,o),
(310,2,qs),
(371,2,o),
(486,0,o),
(547,0,qs),
(567,0,o),
(587,8,o),
(589,33,qs),
(592,63,o),
(597,141,o),
(602,213,o),
(605,268,o),
(605,277,qs),
(605,289,o),
(600,310,o),
(586,310,qs),
(581,310,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 0 1 0 106 0 1 6 1 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 10 0 11 13 10 11 91 8 1 5 5 6 83 0 6 6 12 67 0 12 12 9 83 0 9 9 15 67 0 13 13 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 0 1 0 106 0 1 6 1 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 8 1 5 5 6 83 0 6 6 12 67 0 13 13 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 72 values pushed */
0 0 1 0 106 0 1 6 1 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 8 1 5 5 6 83 0 6 6 14 67 0 13 13 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
16 15 137 135 134 127 121 119 109 107 99 90 89 87 82 80 75 63 59 56 39 37 33 25 15 148 16 148 37 34 15 17
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = Egrave;
unicode = 200;
},
{
glyphname = Emacron;
kernLeft = B;
kernRight = AE;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(565,303,o),
(564,281,qs),
(563,264,o),
(560,222,o),
(556,178,o),
(552,136,o),
(551,121,qs),
(550,108,o),
(542,93,o),
(530,86,o),
(515,84,o),
(508,84,qs),
(230,84,l),
(230,377,l),
(244,377,o),
(265,378,o),
(283,379,o),
(304,379,o),
(318,379,qs),
(338,379,o),
(364,378,o),
(372,378,qs),
(386,378,o),
(405,363,o),
(416,341,o),
(420,318,o),
(420,310,qs),
(420,297,o),
(435,275,o),
(461,275,qs),
(503,275,o),
(503,308,qs),
(503,331,o),
(501,391,o),
(501,420,qs),
(501,449,o),
(503,502,o),
(503,531,qs),
(503,555,o),
(477,570,o),
(460,570,qs),
(439,570,o),
(418,548,o),
(418,533,qs),
(418,526,o),
(417,503,o),
(414,480,o),
(407,464,o),
(401,464,qs),
(397,464,o),
(378,463,o),
(354,462,o),
(328,461,o),
(318,461,qs),
(303,461,o),
(283,461,o),
(264,462,o),
(244,463,o),
(230,464,q),
(230,737,l),
(482,737,ls),
(499,737,o),
(519,727,o),
(519,709,qs),
(519,637,ls),
(519,623,o),
(540,597,o),
(566,597,qs),
(588,597,o),
(607,616,o),
(607,643,qs),
(607,785,ls),
(607,806,o),
(593,821,o),
(579,821,qs),
(535,821,o),
(481,820,o),
(436,820,o),
(389,819,o),
(352,819,qs),
(333,819,o),
(273,820,o),
(202,820,o),
(127,821,o),
(94,821,qs),
(62,821,o),
(37,807,o),
(37,781,qs),
(37,764,o),
(68,747,o),
(93,747,qs),
(114,747,o),
(132,737,o),
(132,708,qs),
(132,678,o),
(134,620,o),
(136,554,o),
(138,476,o),
(138,425,qs),
(138,379,o),
(138,315,o),
(137,266,o),
(137,227,o),
(136,187,o),
(136,141,o),
(136,109,qs),
(136,92,o),
(118,75,o),
(89,73,qs),
(68,72,o),
(38,55,o),
(38,33,qs),
(38,16,o),
(60,0,o),
(86,0,qs),
(116,0,o),
(186,1,o),
(256,1,o),
(326,2,o),
(356,2,qs),
(417,2,o),
(532,0,o),
(593,0,qs),
(618,0,o),
(633,12,o),
(635,33,qs),
(638,63,o),
(644,143,o),
(649,218,o),
(651,276,o),
(651,285,qs),
(651,302,o),
(627,318,o),
(613,318,qs),
(595,318,o)
);
},
{
closed = 1;
nodes = (
(423,962,o),
(381,962,qs),
(368,962,o),
(333,963,o),
(297,963,o),
(267,964,o),
(260,964,qs),
(243,964,o),
(227,939,o),
(227,925,qs),
(227,911,o),
(246,885,o),
(260,885,qs),
(278,885,o),
(342,885,o),
(414,886,o),
(481,886,o),
(501,886,qs),
(512,886,o),
(526,895,o),
(534,908,o),
(537,923,o),
(537,928,qs),
(537,943,o),
(520,965,o),
(509,965,qs),
(485,965,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
75 1 7 8 127 1 2 9 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
75 1 7 8 127 1 11 9 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 15 1 12 0 13 4 12 13 91 0 8 0 9 2 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 10 10 7 83 0 7 7 23 67 11 1 2 2 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 15 1 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 2 8 9 91 6 1 3 3 4 83 0 4 4 12 67 11 1 2 2 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 15 1 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 15 1 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 77 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 15 1 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 14 67 0 11 11 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
136 135 1 0 149 142 135 161 136 153 123 121 120 111 105 103 94 92 86 76 74 72 67 65 60 48 44 42 26 24 20 10 0 134 1 134 16 15
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (38,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (206,385);
ref = macron;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 79 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 15 1 12 0 13 4 12 13 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 10 10 7 83 0 7 7 15 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 15 1 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 77 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 15 1 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 14 67 0 11 11 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
136 135 2 1 147 140 135 159 136 151 123 121 120 113 107 105 95 93 87 78 77 75 68 66 61 49 45 42 25 23 19 11 1 134 2 134 16 26
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(570,293,o),
(569,273,qs),
(568,252,o),
(565,195,o),
(561,137,o),
(557,86,o),
(556,73,qs),
(555,60,o),
(547,45,o),
(535,38,o),
(520,36,o),
(513,36,qs),
(184,36,l),
(184,401,l),
(213,402,o),
(269,403,o),
(298,403,qs),
(327,403,o),
(363,402,o),
(377,402,qs),
(392,402,o),
(411,383,o),
(421,355,o),
(425,322,o),
(425,309,qs),
(425,296,o),
(435,280,o),
(442,280,qs),
(446,280,o),
(457,290,o),
(457,307,qs),
(457,335,o),
(455,391,o),
(455,420,qs),
(455,449,o),
(457,504,o),
(457,533,qs),
(457,544,o),
(452,560,o),
(440,560,qs),
(434,560,o),
(427,552,o),
(424,541,o),
(423,531,o),
(423,530,qs),
(423,521,o),
(422,490,o),
(419,461,o),
(412,440,o),
(406,440,qs),
(401,440,o),
(377,439,o),
(346,438,o),
(312,437,o),
(298,437,qs),
(269,437,o),
(213,439,o),
(184,440,q),
(184,785,l),
(487,785,ls),
(497,785,o),
(524,776,o),
(524,757,qs),
(524,645,ls),
(524,631,o),
(529,605,o),
(544,605,qs),
(555,605,o),
(561,632,o),
(561,651,qs),
(561,785,ls),
(561,806,o),
(547,821,o),
(533,821,qs),
(489,821,o),
(435,820,o),
(390,820,o),
(343,819,o),
(306,819,qs),
(287,819,o),
(232,820,o),
(168,820,o),
(98,821,o),
(65,821,qs),
(50,821,o),
(24,815,o),
(24,804,qs),
(24,793,o),
(47,789,o),
(64,789,qs),
(74,789,o),
(99,788,o),
(122,780,o),
(137,765,o),
(137,750,qs),
(137,716,o),
(139,648,o),
(141,571,o),
(143,481,o),
(143,425,qs),
(143,375,o),
(143,302,o),
(142,245,o),
(142,199,o),
(141,152,o),
(141,99,o),
(141,64,qs),
(141,43,o),
(107,28,o),
(60,28,qs),
(40,28,o),
(21,22,o),
(21,11,qs),
(21,3,o),
(52,0,o),
(67,0,qs),
(128,1,o),
(249,2,o),
(310,2,qs),
(371,2,o),
(486,0,o),
(547,0,qs),
(567,0,o),
(587,8,o),
(589,33,qs),
(592,63,o),
(597,141,o),
(602,213,o),
(605,268,o),
(605,277,qs),
(605,289,o),
(600,310,o),
(586,310,qs),
(581,310,o)
);
},
{
closed = 1;
nodes = (
(380,904,o),
(338,904,qs),
(325,904,o),
(290,905,o),
(254,905,o),
(224,906,o),
(217,906,qs),
(209,906,o),
(201,896,o),
(201,891,qs),
(201,886,o),
(210,875,o),
(217,875,qs),
(235,875,o),
(299,875,o),
(371,876,o),
(438,876,o),
(458,876,qs),
(469,876,o),
(477,889,o),
(477,894,qs),
(477,899,o),
(470,907,o),
(466,907,qs),
(442,907,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 15 1 12 0 13 4 12 13 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 10 10 7 83 0 7 7 15 67 0 11 11 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 15 1 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 11 11 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 71 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 15 1 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 14 67 0 11 11 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
135 134 1 0 146 139 134 158 135 150 122 120 119 112 106 104 94 92 84 75 74 72 67 65 60 48 44 41 24 22 18 10 0 133 1 133 16 15
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = Emacron;
unicode = 274;
},
{
glyphname = Eogonek;
kernLeft = B;
kernRight = AE;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(565,303,o),
(564,281,qs),
(563,264,o),
(560,222,o),
(556,178,o),
(552,136,o),
(551,121,qs),
(550,108,o),
(542,93,o),
(530,86,o),
(515,84,o),
(508,84,qs),
(230,84,l),
(230,377,l),
(244,377,o),
(265,378,o),
(283,379,o),
(304,379,o),
(318,379,qs),
(338,379,o),
(364,378,o),
(372,378,qs),
(386,378,o),
(405,363,o),
(416,341,o),
(420,318,o),
(420,310,qs),
(420,297,o),
(435,275,o),
(461,275,qs),
(503,275,o),
(503,308,qs),
(503,331,o),
(501,391,o),
(501,420,qs),
(501,449,o),
(503,502,o),
(503,531,qs),
(503,555,o),
(477,570,o),
(460,570,qs),
(439,570,o),
(418,548,o),
(418,533,qs),
(418,526,o),
(417,503,o),
(414,480,o),
(407,464,o),
(401,464,qs),
(397,464,o),
(378,463,o),
(354,462,o),
(328,461,o),
(318,461,qs),
(303,461,o),
(283,461,o),
(264,462,o),
(244,463,o),
(230,464,q),
(230,737,l),
(482,737,ls),
(499,737,o),
(519,727,o),
(519,709,qs),
(519,637,ls),
(519,623,o),
(540,597,o),
(566,597,qs),
(588,597,o),
(607,616,o),
(607,643,qs),
(607,785,ls),
(607,806,o),
(593,821,o),
(579,821,qs),
(535,821,o),
(481,820,o),
(436,820,o),
(389,819,o),
(352,819,qs),
(333,819,o),
(273,820,o),
(202,820,o),
(127,821,o),
(94,821,qs),
(62,821,o),
(37,807,o),
(37,781,qs),
(37,764,o),
(68,747,o),
(93,747,qs),
(114,747,o),
(132,737,o),
(132,708,qs),
(132,678,o),
(134,620,o),
(136,554,o),
(138,476,o),
(138,425,qs),
(138,379,o),
(138,315,o),
(137,266,o),
(137,227,o),
(136,187,o),
(136,141,o),
(136,109,qs),
(136,92,o),
(118,75,o),
(89,73,qs),
(68,72,o),
(38,55,o),
(38,33,qs),
(38,16,o),
(60,0,o),
(86,0,qs),
(116,0,o),
(186,1,o),
(256,1,o),
(326,2,o),
(356,2,qs),
(393,2,o),
(464,1,o),
(499,0,q),
(490,-5,o),
(467,-19,o),
(448,-39,o),
(435,-65,o),
(435,-80,qs),
(435,-99,o),
(455,-127,o),
(486,-146,o),
(525,-155,o),
(545,-155,qs),
(566,-155,o),
(598,-144,o),
(618,-128,o),
(628,-110,o),
(628,-102,qs),
(628,-93,o),
(613,-78,o),
(603,-78,qs),
(595,-78,o),
(586,-86,o),
(575,-95,o),
(558,-102,o),
(543,-102,qs),
(532,-102,o),
(514,-92,o),
(514,-81,qs),
(514,-61,o),
(535,-13,o),
(555,0,q),
(593,0,ls),
(618,0,o),
(633,12,o),
(635,33,qs),
(638,63,o),
(644,143,o),
(649,218,o),
(651,276,o),
(651,285,qs),
(651,302,o),
(627,318,o),
(613,318,qs),
(595,318,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
105 1 11 12 157 1 6 13 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
105 1 11 12 157 1 15 13 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 9 7 12 7 9 12 104 0 3 1 2 1 3 2 104 0 12 0 13 6 12 13 91 0 2 0 4 2 4 87 10 1 7 7 8 83 0 8 8 12 67 0 14 14 11 83 0 11 11 23 67 16 1 0 0 1 83 5 1 1 1 13 67 15 1 6 6 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 9 7 12 7 9 12 104 0 3 1 2 1 3 2 104 0 11 0 14 0 11 14 91 0 12 0 13 6 12 13 91 0 2 0 4 2 4 87 10 1 7 7 8 83 0 8 8 12 67 16 1 0 0 1 83 5 1 1 1 13 67 15 1 6 6 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 81 values pushed */
0 9 7 12 7 9 12 104 0 6 15 1 15 6 96 0 3 1 2 1 3 2 104 0 11 0 14 0 11 14 91 0 12 0 13 15 12 13 91 0 2 0 4 2 4 87 10 1 7 7 8 83 0 8 8 12 67 16 1 0 0 1 83 5 1 1 1 13 67 0 15 15 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 87 values pushed */
0 7 8 10 10 7 96 0 9 10 12 10 9 12 104 0 6 15 1 15 6 96 0 3 1 2 1 3 2 104 0 11 0 14 0 11 14 91 0 12 0 13 15 12 13 91 0 2 0 4 2 4 87 0 10 10 8 84 0 8 8 12 67 16 1 0 0 1 83 5 1 1 1 13 67 0 15 15 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 87 values pushed */
0 7 8 10 10 7 96 0 9 10 12 10 9 12 104 0 6 15 1 15 6 96 0 3 1 2 1 3 2 104 0 11 0 14 0 11 14 91 0 12 0 13 15 12 13 91 0 2 0 4 2 4 87 0 10 10 8 84 0 8 8 14 67 16 1 0 0 1 83 5 1 1 1 13 67 0 15 15 1 83 5 1 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
1 0 153 151 150 141 135 133 124 122 116 106 104 102 97 95 90 78 74 72 56 54 50 41 32 30 24 22 19 17 12 10 0 164 1 164 17 15
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (38,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (241,0);
ref = ogonek;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 92 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 16 1 0 10 9 10 0 9 104 0 11 9 2 15 11 96 0 2 15 15 2 94 0 13 1 12 1 13 12 104 0 8 0 9 11 8 9 91 0 12 0 14 12 14 87 0 6 6 4 84 0 4 4 12 67 0 10 10 7 83 0 7 7 15 67 17 1 15 15 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 90 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 16 1 0 10 9 10 0 9 104 0 11 9 2 15 11 96 0 2 15 15 2 94 0 13 1 12 1 13 12 104 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 12 0 14 12 14 87 0 6 6 4 84 0 4 4 12 67 17 1 15 15 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 91 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 16 1 0 10 9 10 0 9 104 0 11 9 2 9 11 2 104 0 2 15 15 2 94 0 13 1 12 1 13 12 104 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 12 0 14 12 14 87 0 6 6 4 84 0 4 4 12 67 17 1 15 15 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 92 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 16 1 0 10 9 10 0 9 104 0 11 9 2 9 11 2 104 0 2 15 9 2 15 102 0 13 1 12 1 13 12 104 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 12 0 14 12 14 87 0 6 6 4 84 0 4 4 12 67 17 1 15 15 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 92 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 16 1 0 10 9 10 0 9 104 0 11 9 2 9 11 2 104 0 2 15 9 2 15 102 0 13 1 12 1 13 12 104 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 12 0 14 12 14 87 0 6 6 4 84 0 4 4 14 67 17 1 15 15 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
135 135 2 1 135 164 135 164 157 155 149 147 144 142 123 121 120 113 107 105 95 93 87 78 77 75 68 66 61 49 45 42 25 23 19 11 1 134 2 134 18 26
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(570,293,o),
(569,273,qs),
(568,252,o),
(565,195,o),
(561,137,o),
(557,86,o),
(556,73,qs),
(555,60,o),
(547,45,o),
(535,38,o),
(520,36,o),
(513,36,qs),
(184,36,l),
(184,401,l),
(213,402,o),
(269,403,o),
(298,403,qs),
(327,403,o),
(363,402,o),
(377,402,qs),
(392,402,o),
(411,383,o),
(421,355,o),
(425,322,o),
(425,309,qs),
(425,296,o),
(435,280,o),
(442,280,qs),
(446,280,o),
(457,290,o),
(457,307,qs),
(457,335,o),
(455,391,o),
(455,420,qs),
(455,449,o),
(457,504,o),
(457,533,qs),
(457,544,o),
(452,560,o),
(440,560,qs),
(434,560,o),
(427,552,o),
(424,541,o),
(423,531,o),
(423,530,qs),
(423,521,o),
(422,490,o),
(419,461,o),
(412,440,o),
(406,440,qs),
(401,440,o),
(377,439,o),
(346,438,o),
(312,437,o),
(298,437,qs),
(269,437,o),
(213,439,o),
(184,440,q),
(184,785,l),
(487,785,ls),
(497,785,o),
(524,776,o),
(524,757,qs),
(524,645,ls),
(524,631,o),
(529,605,o),
(544,605,qs),
(555,605,o),
(561,632,o),
(561,651,qs),
(561,785,ls),
(561,806,o),
(547,821,o),
(533,821,qs),
(489,821,o),
(435,820,o),
(390,820,o),
(343,819,o),
(306,819,qs),
(287,819,o),
(232,820,o),
(168,820,o),
(98,821,o),
(65,821,qs),
(50,821,o),
(24,815,o),
(24,804,qs),
(24,793,o),
(47,789,o),
(64,789,qs),
(74,789,o),
(99,788,o),
(122,780,o),
(137,765,o),
(137,750,qs),
(137,716,o),
(139,648,o),
(141,571,o),
(143,481,o),
(143,425,qs),
(143,375,o),
(143,302,o),
(142,245,o),
(142,199,o),
(141,152,o),
(141,99,o),
(141,64,qs),
(141,43,o),
(107,28,o),
(60,28,qs),
(40,28,o),
(21,22,o),
(21,11,qs),
(21,3,o),
(52,0,o),
(67,0,qs),
(124,1,o),
(238,2,o),
(295,2,q),
(280,-9,o),
(248,-47,o),
(248,-76,qs),
(248,-108,o),
(294,-149,o),
(329,-149,qs),
(347,-149,o),
(375,-136,o),
(396,-119,o),
(407,-102,o),
(407,-98,qs),
(407,-92,o),
(402,-82,o),
(393,-82,qs),
(386,-82,o),
(375,-95,o),
(362,-110,o),
(344,-122,o),
(331,-122,qs),
(319,-122,o),
(304,-112,o),
(295,-97,o),
(292,-81,o),
(292,-75,qs),
(292,-64,o),
(307,-16,o),
(330,1,q),
(385,0,o),
(490,0,o),
(547,0,qs),
(567,0,o),
(587,8,o),
(589,33,qs),
(592,63,o),
(597,141,o),
(602,213,o),
(605,268,o),
(605,277,qs),
(605,289,o),
(600,310,o),
(586,310,qs),
(581,310,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 81 values pushed */
0 9 7 12 7 9 12 104 16 1 0 14 13 14 0 13 104 0 6 15 1 15 6 1 104 0 3 1 2 1 3 2 104 0 12 0 13 15 12 13 91 0 2 0 4 2 4 87 10 1 7 7 8 83 0 8 8 12 67 0 14 14 11 83 0 11 11 15 67 0 15 15 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 79 values pushed */
0 9 7 12 7 9 12 104 16 1 0 14 13 14 0 13 104 0 6 15 1 15 6 1 104 0 3 1 2 1 3 2 104 0 11 0 14 0 11 14 91 0 12 0 13 15 12 13 91 0 2 0 4 2 4 87 10 1 7 7 8 83 0 8 8 12 67 0 15 15 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 79 values pushed */
0 9 7 12 7 9 12 104 16 1 0 14 13 14 0 13 104 0 6 15 1 15 6 1 104 0 3 1 2 1 3 2 104 0 11 0 14 0 11 14 91 0 12 0 13 15 12 13 91 0 2 0 4 2 4 87 10 1 7 7 8 83 0 8 8 14 67 0 15 15 1 83 5 1 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
1 0 149 147 146 139 133 131 121 119 111 102 101 99 94 92 87 75 71 68 51 49 45 41 36 34 28 26 23 21 14 10 0 160 1 160 17 15
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = Eogonek;
unicode = 280;
},
{
glyphname = Etilde;
kernLeft = B;
kernRight = AE;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(565,303,o),
(564,281,qs),
(563,264,o),
(560,222,o),
(556,178,o),
(552,136,o),
(551,121,qs),
(550,108,o),
(542,93,o),
(530,86,o),
(515,84,o),
(508,84,qs),
(230,84,l),
(230,377,l),
(244,377,o),
(265,378,o),
(283,379,o),
(304,379,o),
(318,379,qs),
(338,379,o),
(364,378,o),
(372,378,qs),
(386,378,o),
(405,363,o),
(416,341,o),
(420,318,o),
(420,310,qs),
(420,297,o),
(435,275,o),
(461,275,qs),
(503,275,o),
(503,308,qs),
(503,331,o),
(501,391,o),
(501,420,qs),
(501,449,o),
(503,502,o),
(503,531,qs),
(503,555,o),
(477,570,o),
(460,570,qs),
(439,570,o),
(418,548,o),
(418,533,qs),
(418,526,o),
(417,503,o),
(414,480,o),
(407,464,o),
(401,464,qs),
(397,464,o),
(378,463,o),
(354,462,o),
(328,461,o),
(318,461,qs),
(303,461,o),
(283,461,o),
(264,462,o),
(244,463,o),
(230,464,q),
(230,737,l),
(482,737,ls),
(499,737,o),
(519,727,o),
(519,709,qs),
(519,637,ls),
(519,623,o),
(540,597,o),
(566,597,qs),
(588,597,o),
(607,616,o),
(607,643,qs),
(607,785,ls),
(607,806,o),
(593,821,o),
(579,821,qs),
(535,821,o),
(481,820,o),
(436,820,o),
(389,819,o),
(352,819,qs),
(333,819,o),
(273,820,o),
(202,820,o),
(127,821,o),
(94,821,qs),
(62,821,o),
(37,807,o),
(37,781,qs),
(37,764,o),
(68,747,o),
(93,747,qs),
(114,747,o),
(132,737,o),
(132,708,qs),
(132,678,o),
(134,620,o),
(136,554,o),
(138,476,o),
(138,425,qs),
(138,379,o),
(138,315,o),
(137,266,o),
(137,227,o),
(136,187,o),
(136,141,o),
(136,109,qs),
(136,92,o),
(118,75,o),
(89,73,qs),
(68,72,o),
(38,55,o),
(38,33,qs),
(38,16,o),
(60,0,o),
(86,0,qs),
(116,0,o),
(186,1,o),
(256,1,o),
(326,2,o),
(356,2,qs),
(417,2,o),
(532,0,o),
(593,0,qs),
(618,0,o),
(633,12,o),
(635,33,qs),
(638,63,o),
(644,143,o),
(649,218,o),
(651,276,o),
(651,285,qs),
(651,302,o),
(627,318,o),
(613,318,qs),
(595,318,o)
);
},
{
closed = 1;
nodes = (
(188,842,o),
(197,842,qs),
(204,842,o),
(222,850,o),
(242,859,o),
(266,867,o),
(281,867,qs),
(295,867,o),
(327,859,o),
(362,850,o),
(399,843,o),
(418,843,qs),
(429,843,o),
(467,850,o),
(503,867,o),
(529,896,o),
(529,918,qs),
(529,934,o),
(512,953,o),
(507,953,qs),
(500,953,o),
(477,940,qs),
(463,932,o),
(431,923,o),
(417,923,qs),
(402,923,o),
(366,932,o),
(330,942,o),
(295,951,o),
(280,951,qs),
(243,951,o),
(212,933,qs),
(198,925,o),
(178,900,o),
(178,878,qs),
(178,863,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
75 1 7 8 127 1 2 9 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
75 1 7 8 127 1 11 9 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
0 5 3 8 3 5 8 104 18 1 0 10 9 10 0 9 104 14 1 12 0 16 15 12 16 91 0 13 17 1 15 4 13 15 91 0 8 0 9 2 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 10 10 7 83 0 7 7 23 67 11 1 2 2 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 5 3 8 3 5 8 104 18 1 0 10 9 10 0 9 104 14 1 12 0 16 15 12 16 91 0 13 17 1 15 4 13 15 91 0 7 0 10 0 7 10 91 0 8 0 9 2 8 9 91 6 1 3 3 4 83 0 4 4 12 67 11 1 2 2 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 5 3 8 3 5 8 104 18 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 14 1 12 0 16 15 12 16 91 0 13 17 1 15 4 13 15 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 86 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 18 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 14 1 12 0 16 15 12 16 91 0 13 17 1 15 4 13 15 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 86 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 18 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 14 1 12 0 16 15 12 16 91 0 13 17 1 15 4 13 15 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 14 67 0 11 11 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
1 0 169 167 164 162 159 157 151 149 146 144 141 139 123 121 120 111 105 103 94 92 86 76 74 72 67 65 60 48 44 42 26 24 20 10 0 134 1 134 19 15
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (38,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (154,353);
ref = tilde;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 88 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 18 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 14 1 12 0 16 15 12 16 91 0 13 17 1 15 4 13 15 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 10 10 7 83 0 7 7 15 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 86 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 18 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 14 1 12 0 16 15 12 16 91 0 13 17 1 15 4 13 15 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 86 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 18 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 14 1 12 0 16 15 12 16 91 0 13 17 1 15 4 13 15 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 14 67 0 11 11 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
2 1 169 167 164 162 159 157 151 149 146 144 141 139 123 121 120 113 107 105 95 93 87 78 77 75 68 66 61 49 45 42 25 23 19 11 1 134 2 134 19 26
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(570,293,o),
(569,273,qs),
(568,252,o),
(565,195,o),
(561,137,o),
(557,86,o),
(556,73,qs),
(555,60,o),
(547,45,o),
(535,38,o),
(520,36,o),
(513,36,qs),
(184,36,l),
(184,401,l),
(213,402,o),
(269,403,o),
(298,403,qs),
(327,403,o),
(363,402,o),
(377,402,qs),
(392,402,o),
(411,383,o),
(421,355,o),
(425,322,o),
(425,309,qs),
(425,296,o),
(435,280,o),
(442,280,qs),
(446,280,o),
(457,290,o),
(457,307,qs),
(457,335,o),
(455,391,o),
(455,420,qs),
(455,449,o),
(457,504,o),
(457,533,qs),
(457,544,o),
(452,560,o),
(440,560,qs),
(434,560,o),
(427,552,o),
(424,541,o),
(423,531,o),
(423,530,qs),
(423,521,o),
(422,490,o),
(419,461,o),
(412,440,o),
(406,440,qs),
(401,440,o),
(377,439,o),
(346,438,o),
(312,437,o),
(298,437,qs),
(269,437,o),
(213,439,o),
(184,440,q),
(184,785,l),
(487,785,ls),
(497,785,o),
(524,776,o),
(524,757,qs),
(524,645,ls),
(524,631,o),
(529,605,o),
(544,605,qs),
(555,605,o),
(561,632,o),
(561,651,qs),
(561,785,ls),
(561,806,o),
(547,821,o),
(533,821,qs),
(489,821,o),
(435,820,o),
(390,820,o),
(343,819,o),
(306,819,qs),
(287,819,o),
(232,820,o),
(168,820,o),
(98,821,o),
(65,821,qs),
(50,821,o),
(24,815,o),
(24,804,qs),
(24,793,o),
(47,789,o),
(64,789,qs),
(74,789,o),
(99,788,o),
(122,780,o),
(137,765,o),
(137,750,qs),
(137,716,o),
(139,648,o),
(141,571,o),
(143,481,o),
(143,425,qs),
(143,375,o),
(143,302,o),
(142,245,o),
(142,199,o),
(141,152,o),
(141,99,o),
(141,64,qs),
(141,43,o),
(107,28,o),
(60,28,qs),
(40,28,o),
(21,22,o),
(21,11,qs),
(21,3,o),
(52,0,o),
(67,0,qs),
(128,1,o),
(249,2,o),
(310,2,qs),
(371,2,o),
(486,0,o),
(547,0,qs),
(567,0,o),
(587,8,o),
(589,33,qs),
(592,63,o),
(597,141,o),
(602,213,o),
(605,268,o),
(605,277,qs),
(605,289,o),
(600,310,o),
(586,310,qs),
(581,310,o)
);
},
{
closed = 1;
nodes = (
(155,888,o),
(160,888,qs),
(165,888,o),
(181,896,o),
(203,905,o),
(229,913,o),
(244,913,qs),
(258,913,o),
(290,905,o),
(325,896,o),
(362,889,o),
(381,889,qs),
(402,889,o),
(439,896,o),
(467,909,o),
(483,925,o),
(483,934,qs),
(483,941,o),
(475,951,o),
(470,951,qs),
(465,951,o),
(454,946,o),
(440,938,qs),
(406,921,o),
(380,921,qs),
(365,921,o),
(329,930,o),
(293,940,o),
(258,949,o),
(243,949,qs),
(206,949,o),
(175,931,qs),
(146,914,o),
(146,903,qs),
(146,898,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
0 5 3 8 3 5 8 104 18 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 14 1 12 0 16 15 12 16 91 0 13 17 1 15 4 13 15 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 10 10 7 83 0 7 7 15 67 0 11 11 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 5 3 8 3 5 8 104 18 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 14 1 12 0 16 15 12 16 91 0 13 17 1 15 4 13 15 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 11 11 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 80 values pushed */
0 5 3 8 3 5 8 104 18 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 14 1 12 0 16 15 12 16 91 0 13 17 1 15 4 13 15 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 14 67 0 11 11 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
1 0 167 165 162 160 157 155 149 147 144 142 139 137 122 120 119 112 106 104 94 92 84 75 74 72 67 65 60 48 44 41 24 22 18 10 0 133 1 133 19 15
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = Etilde;
unicode = 7868;
},
{
glyphname = Schwa;
kernRight = O;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(524,271,o),
(497,186,o),
(449,115,o),
(376,70,o),
(324,70,qs),
(285,70,o),
(218,112,o),
(169,173,o),
(141,243,o),
(141,270,qs),
(141,285,o),
(150,303,o),
(165,303,qs),
(532,310,l)
);
},
{
closed = 1;
nodes = (
(451,391,o),
(373,391,o),
(303,390,o),
(286,390,qs),
(230,390,o),
(125,390,o),
(90,388,qs),
(64,387,o),
(41,327,o),
(41,290,qs),
(41,255,o),
(69,153,o),
(132,57,o),
(235,-11,o),
(311,-11,qs),
(384,-11,o),
(505,53,o),
(592,168,o),
(641,329,o),
(641,425,qs),
(641,512,o),
(603,663,o),
(523,774,o),
(400,837,o),
(315,837,qs),
(256,837,o),
(152,795,o),
(73,720,o),
(27,618,o),
(27,559,qs),
(27,545,o),
(52,512,o),
(76,512,qs),
(102,512,o),
(125,545,o),
(125,559,qs),
(125,598,o),
(161,669,o),
(216,723,o),
(285,756,o),
(318,756,qs),
(370,756,o),
(455,697,o),
(513,605,o),
(545,493,o),
(545,439,qs),
(545,429,o),
(543,404,o),
(542,392,q),
(523,392,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 2 6 2 3 6 104 8 1 6 7 1 0 1 6 0 91 0 2 2 4 83 0 4 4 20 67 0 1 1 5 83 0 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 2 6 2 3 6 104 0 4 0 2 3 4 2 91 8 1 6 7 1 0 1 6 0 91 0 1 1 5 83 0 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
14 14 1 0 14 63 14 55 49 47 39 37 31 29 23 21 9 7 0 13 1 13 9 15
CALL[ ]	/* CallFunction */";
};
width = 677;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(527,275,o),
(495,181,o),
(442,103,o),
(365,52,o),
(313,52,qs),
(269,52,o),
(198,100,o),
(148,169,o),
(121,248,o),
(121,279,qs),
(121,294,o),
(130,312,o),
(145,312,qs),
(535,319,l)
);
},
{
closed = 1;
nodes = (
(452,382,o),
(374,382,o),
(304,381,o),
(287,381,qs),
(231,381,o),
(126,381,o),
(91,379,qs),
(65,378,o),
(42,323,o),
(42,290,qs),
(42,267,o),
(54,204,o),
(80,137,o),
(122,72,o),
(180,21,o),
(256,-11,o),
(304,-11,qs),
(372,-11,o),
(488,53,o),
(573,168,o),
(621,329,o),
(621,425,qs),
(621,512,o),
(583,663,o),
(506,774,o),
(388,837,o),
(308,837,qs),
(254,837,o),
(153,795,o),
(75,721,o),
(28,619,o),
(28,559,qs),
(28,545,o),
(47,518,o),
(66,518,qs),
(86,518,o),
(105,545,o),
(105,559,qs),
(105,601,o),
(142,679,o),
(201,739,o),
(274,774,o),
(311,774,qs),
(368,774,o),
(455,712,o),
(515,614,o),
(546,496,o),
(546,439,qs),
(546,427,o),
(544,397,o),
(543,383,q),
(524,383,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 2 6 2 3 6 104 8 1 6 7 1 0 1 6 0 91 0 2 2 4 83 0 4 4 20 67 0 1 1 5 83 0 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 2 6 2 3 6 104 0 4 0 2 3 4 2 91 8 1 6 7 1 0 1 6 0 91 0 1 1 5 83 0 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
14 14 1 0 14 65 14 57 49 47 39 37 31 29 23 21 9 7 0 13 1 13 9 15
CALL[ ]	/* CallFunction */";
};
width = 659;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(531,283,o),
(493,172,o),
(433,81,o),
(350,22,o),
(298,22,qs),
(246,22,o),
(169,79,o),
(118,163,o),
(92,257,o),
(92,294,qs),
(92,309,o),
(102,327,o),
(116,327,qs),
(539,334,l)
);
},
{
closed = 1;
nodes = (
(453,367,o),
(375,367,o),
(305,366,o),
(288,366,qs),
(232,366,o),
(127,366,o),
(92,364,qs),
(66,363,o),
(43,317,o),
(43,290,qs),
(43,266,o),
(56,204,o),
(82,137,o),
(122,72,o),
(178,21,o),
(250,-11,o),
(294,-11,qs),
(356,-11,o),
(464,53,o),
(545,168,o),
(592,329,o),
(592,425,qs),
(592,512,o),
(555,663,o),
(481,774,o),
(371,837,o),
(298,837,qs),
(251,837,o),
(156,796,o),
(78,722,o),
(29,620,o),
(29,559,qs),
(29,528,o),
(52,528,qs),
(63,528,o),
(76,545,o),
(76,559,qs),
(76,607,o),
(115,696,o),
(178,764,o),
(259,804,o),
(301,804,qs),
(364,804,o),
(456,736,o),
(517,630,o),
(547,501,o),
(547,439,qs),
(547,423,o),
(545,386,o),
(544,368,q),
(525,368,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 2 6 2 3 6 104 8 1 6 7 1 0 1 6 0 91 0 2 2 4 83 0 4 4 20 67 0 1 1 5 83 0 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 2 6 2 3 6 104 0 4 0 2 3 4 2 91 8 1 6 7 1 0 1 6 0 91 0 1 1 5 83 0 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
14 14 1 0 14 64 14 56 48 46 38 36 31 29 23 21 9 7 0 13 1 13 9 15
CALL[ ]	/* CallFunction */";
};
width = 634;
}
);
note = Schwa;
unicode = 399;
},
{
glyphname = F;
kernLeft = B;
kernRight = F;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(104,72,o),
(78,70,qs),
(61,68,o),
(40,51,o),
(40,31,qs),
(40,14,o),
(61,0,o),
(83,0,qs),
(359,0,ls),
(367,0,o),
(384,3,o),
(397,12,o),
(406,28,o),
(406,41,qs),
(406,64,o),
(374,78,o),
(353,78,qs),
(232,78,l),
(232,82,o),
(231,112,o),
(230,150,o),
(229,190,o),
(229,205,qs),
(229,223,o),
(229,268,o),
(230,314,o),
(230,359,o),
(230,377,q),
(244,378,o),
(265,379,o),
(284,380,o),
(305,380,o),
(319,380,qs),
(333,380,o),
(364,378,o),
(378,376,qs),
(392,374,o),
(418,346,o),
(420,305,qs),
(421,286,o),
(445,266,o),
(462,266,qs),
(482,266,o),
(503,283,o),
(503,304,qs),
(503,328,o),
(501,390,o),
(501,415,qs),
(501,440,o),
(503,494,o),
(503,519,qs),
(503,540,o),
(489,566,o),
(462,566,qs),
(433,566,o),
(418,536,o),
(418,513,qs),
(418,510,o),
(418,494,o),
(415,477,o),
(409,464,o),
(404,464,qs),
(401,464,o),
(381,463,o),
(355,463,o),
(327,462,o),
(316,462,qs),
(302,462,o),
(283,462,o),
(265,462,o),
(245,463,o),
(230,464,q),
(230,737,l),
(480,737,ls),
(500,737,o),
(519,723,o),
(519,696,qs),
(519,655,ls),
(519,646,o),
(523,626,o),
(532,608,o),
(548,597,o),
(561,597,qs),
(587,597,o),
(607,624,o),
(607,655,qs),
(607,773,ls),
(607,799,o),
(594,821,o),
(573,821,qs),
(520,821,o),
(416,819,o),
(363,819,qs),
(299,819,o),
(148,821,o),
(84,821,qs),
(59,821,o),
(36,807,o),
(36,787,qs),
(36,768,o),
(57,752,o),
(77,751,qs),
(106,750,o),
(131,728,o),
(133,708,qs),
(135,680,o),
(138,629,o),
(139,577,o),
(140,522,o),
(140,489,qs),
(140,392,o),
(137,216,o),
(135,119,qs),
(134,90,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
85 1 6 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 2 0 5 0 2 5 104 0 5 0 6 8 5 6 91 3 1 0 0 1 83 0 1 1 12 67 0 7 7 4 83 0 4 4 23 67 0 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 0 1 3 3 0 96 0 2 3 5 3 2 5 104 0 5 0 6 8 5 6 91 0 3 3 1 84 0 1 1 12 67 0 7 7 4 83 0 4 4 23 67 0 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 0 1 3 3 0 96 0 2 3 5 3 2 5 104 0 4 0 7 6 4 7 91 0 5 0 6 8 5 6 91 0 3 3 1 84 0 1 1 12 67 0 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 0 1 3 3 0 96 0 2 3 5 3 2 5 104 0 4 0 7 6 4 7 91 0 5 0 6 8 5 6 91 0 3 3 1 84 0 1 1 14 67 0 8 8 9 83 0 9 9 13 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
106 103 43 102 42 38 177 39 37 132 42 10 24
CALL[ ]	/* CallFunction */";
};
width = 611;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(125,59,o),
(106,50,o),
(80,48,o),
(66,48,qs),
(53,48,o),
(38,39,o),
(38,23,qs),
(38,6,o),
(68,0,o),
(81,0,qs),
(346,0,ls),
(357,0,o),
(376,10,o),
(376,26,qs),
(376,39,o),
(369,53,o),
(358,59,o),
(346,60,o),
(340,60,qs),
(213,60,l),
(213,64,o),
(212,98,o),
(211,142,o),
(210,188,o),
(210,205,qs),
(210,224,o),
(210,271,o),
(211,320,o),
(211,367,o),
(211,386,q),
(240,388,o),
(282,389,o),
(311,389,qs),
(328,389,o),
(361,388,o),
(378,387,qs),
(384,387,o),
(399,378,o),
(413,357,o),
(422,324,o),
(422,299,qs),
(422,285,o),
(440,271,o),
(454,271,qs),
(469,271,o),
(484,288,o),
(484,309,qs),
(484,333,o),
(482,390,o),
(482,415,qs),
(482,440,o),
(484,492,o),
(484,517,qs),
(484,533,o),
(476,564,o),
(454,564,qs),
(441,564,o),
(427,557,o),
(421,544,o),
(420,527,o),
(420,517,qs),
(420,513,o),
(420,493,o),
(417,472,o),
(411,455,o),
(406,455,qs),
(403,455,o),
(380,454,o),
(351,454,o),
(320,453,o),
(308,453,qs),
(280,453,o),
(240,453,o),
(211,455,q),
(211,755,l),
(482,755,ls),
(502,755,o),
(521,742,o),
(521,714,qs),
(521,647,ls),
(521,629,o),
(533,600,o),
(554,600,qs),
(574,600,o),
(588,622,o),
(588,647,qs),
(588,773,ls),
(588,799,o),
(575,821,o),
(554,821,qs),
(501,821,o),
(397,819,o),
(344,819,qs),
(280,819,o),
(143,821,o),
(79,821,qs),
(57,821,o),
(41,807,o),
(41,796,qs),
(41,788,o),
(51,771,o),
(63,771,qs),
(135,771,o),
(135,732,qs),
(135,697,o),
(137,639,o),
(139,582,o),
(141,523,o),
(141,489,qs),
(141,389,o),
(139,192,o),
(137,92,qs),
(137,77,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 0 1 3 3 0 96 0 2 3 5 3 2 5 104 0 10 8 9 8 10 96 0 5 0 6 8 5 6 91 0 3 3 1 84 0 1 1 12 67 0 7 7 4 83 0 4 4 15 67 0 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 0 1 3 3 0 96 0 2 3 5 3 2 5 104 0 10 8 9 8 10 96 0 4 0 7 6 4 7 91 0 5 0 6 8 5 6 91 0 3 3 1 84 0 1 1 12 67 0 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
0 0 1 3 3 0 96 0 2 3 5 3 2 5 104 0 10 8 9 8 10 96 0 4 0 7 6 4 7 91 0 5 0 6 8 5 6 91 0 3 3 1 84 0 1 1 14 67 0 8 8 9 83 0 9 9 13 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
109 107 103 100 42 118 42 40 145 37 37 132 41 11 24
CALL[ ]	/* CallFunction */";
};
width = 595;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(92,28,o),
(49,28,qs),
(21,28,o),
(21,13,qs),
(21,3,o),
(51,0,o),
(64,0,qs),
(309,0,ls),
(329,0,o),
(329,11,qs),
(329,21,o),
(314,30,o),
(303,30,qs),
(186,30,l),
(186,35,o),
(185,76,o),
(184,129,o),
(183,185,o),
(183,205,qs),
(183,225,o),
(183,276,o),
(184,330,o),
(184,381,o),
(184,401,q),
(241,404,o),
(299,404,qs),
(319,404,o),
(361,403,o),
(381,402,qs),
(387,402,o),
(402,394,o),
(416,373,o),
(425,336,o),
(425,307,qs),
(427,279,o),
(442,279,qs),
(451,279,o),
(457,296,o),
(457,317,qs),
(457,341,o),
(455,390,o),
(455,415,qs),
(455,440,o),
(457,488,o),
(457,513,qs),
(457,529,o),
(453,560,o),
(442,560,qs),
(428,560,o),
(423,533,o),
(423,513,qs),
(423,508,o),
(423,484,o),
(420,459,o),
(414,440,o),
(409,440,qs),
(405,440,o),
(379,439,o),
(346,439,o),
(310,438,o),
(296,438,qs),
(268,438,o),
(213,438,o),
(184,440,q),
(184,785,l),
(485,785,ls),
(505,785,o),
(524,773,o),
(524,744,qs),
(524,651,ls),
(524,633,o),
(530,605,o),
(544,605,qs),
(550,605,o),
(557,615,o),
(560,629,o),
(561,645,o),
(561,651,qs),
(561,773,ls),
(561,799,o),
(548,821,o),
(527,821,qs),
(474,821,o),
(370,819,o),
(317,819,qs),
(253,819,o),
(126,821,o),
(62,821,qs),
(48,821,o),
(24,817,o),
(24,806,qs),
(24,801,o),
(32,791,o),
(46,791,qs),
(100,791,o),
(138,772,o),
(138,752,qs),
(138,714,o),
(140,651,o),
(142,590,o),
(144,526,o),
(144,489,qs),
(144,384,o),
(142,177,o),
(140,72,qs),
(139,41,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
71 1 6 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 0 1 3 3 0 96 0 2 3 5 3 2 5 104 0 5 0 6 8 5 6 91 0 3 3 1 84 0 1 1 12 67 0 7 7 4 83 0 4 4 15 67 10 1 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 0 1 3 3 0 96 0 2 3 5 3 2 5 104 0 4 0 7 6 4 7 91 0 5 0 6 8 5 6 91 0 3 3 1 84 0 1 1 12 67 10 1 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 0 1 3 3 0 96 0 2 3 5 3 2 5 104 0 4 0 7 6 4 7 91 0 5 0 6 8 5 6 91 0 3 3 1 84 0 1 1 14 67 10 1 8 8 9 83 0 9 9 13 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
104 102 99 96 42 101 42 38 145 37 39 132 42 11 24
CALL[ ]	/* CallFunction */";
};
width = 572;
}
);
note = F;
unicode = 70;
},
{
glyphname = G;
kernLeft = C;
kernRight = G;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(534,238,o),
(534,225,qs),
(534,201,o),
(502,145,o),
(450,98,o),
(381,67,o),
(344,67,qs),
(286,67,o),
(204,126,o),
(153,221,o),
(130,342,o),
(130,404,qs),
(130,477,o),
(163,606,o),
(220,703,o),
(295,759,o),
(338,759,qs),
(388,759,o),
(458,723,o),
(502,659,o),
(522,572,o),
(522,521,qs),
(522,491,o),
(551,468,o),
(568,468,qs),
(591,468,o),
(613,500,o),
(613,524,qs),
(613,550,o),
(611,622,o),
(611,648,qs),
(611,668,o),
(612,701,o),
(614,733,o),
(615,766,o),
(615,787,qs),
(615,799,o),
(594,826,o),
(568,826,qs),
(547,826,o),
(530,809,o),
(530,795,qs),
(535,709,l),
(521,745,o),
(479,795,o),
(429,825,o),
(374,838,o),
(347,838,qs),
(278,838,o),
(162,768,o),
(80,649,o),
(34,491,o),
(34,404,qs),
(34,288,o),
(88,128,o),
(174,29,o),
(281,-14,o),
(334,-14,qs),
(364,-14,o),
(425,-2,o),
(480,25,o),
(527,68,o),
(543,98,q),
(543,90,o),
(541,52,o),
(541,32,qs),
(541,10,o),
(564,-4,o),
(582,-4,qs),
(599,-4,o),
(623,17,o),
(623,36,qs),
(623,56,o),
(621,114,o),
(621,164,qs),
(621,200,o),
(623,256,o),
(623,273,qs),
(623,305,o),
(574,330,o),
(542,330,qs),
(515,330,o),
(471,327,o),
(427,324,o),
(379,322,o),
(348,322,qs),
(328,322,o),
(297,301,o),
(297,273,qs),
(297,260,o),
(321,238,o),
(342,238,qs),
(369,238,o),
(409,240,o),
(446,243,o),
(484,245,o),
(509,245,qs),
(523,245,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
54 1 7 8 34 1 9 0 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
54 1 7 8 34 1 9 1 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 2 1 10 2 0 9 2 0 91 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 67 0 9 9 3 83 4 1 3 3 16 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 1 10 2 0 9 2 0 91 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 9 9 3 83 4 1 3 3 16 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 2 1 10 2 0 9 2 0 91 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 16 67 0 9 9 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 9 0 1 96 0 5 0 8 7 5 8 91 0 2 10 1 0 1 2 0 91 0 7 7 6 83 0 6 6 14 67 0 3 3 16 67 0 9 9 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
2 0 91 89 81 79 73 71 59 57 50 48 40 38 29 27 17 10 6 3 0 97 2 97 11 15
CALL[ ]	/* CallFunction */";
};
width = 671;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(537,242,o),
(537,225,qs),
(537,189,o),
(505,125,o),
(451,77,o),
(382,49,o),
(345,49,qs),
(281,49,o),
(192,111,o),
(137,211,o),
(112,339,o),
(112,404,qs),
(112,481,o),
(148,617,o),
(211,718,o),
(294,777,o),
(341,777,qs),
(391,777,o),
(461,737,o),
(505,667,o),
(525,572,o),
(525,517,qs),
(525,493,o),
(544,464,o),
(561,464,qs),
(580,464,o),
(595,494,o),
(595,520,qs),
(595,546,o),
(593,622,o),
(593,648,qs),
(593,668,o),
(594,702,o),
(596,734,o),
(597,767,o),
(597,788,qs),
(597,800,o),
(578,821,o),
(560,821,qs),
(545,821,o),
(528,802,o),
(528,789,qs),
(533,702,l),
(505,775,o),
(404,838,o),
(350,838,qs),
(281,838,o),
(165,768,o),
(83,649,o),
(37,491,o),
(37,404,qs),
(37,288,o),
(90,128,o),
(176,29,o),
(283,-14,o),
(336,-14,qs),
(366,-14,o),
(426,-1,o),
(481,28,o),
(527,72,o),
(544,103,q),
(544,95,o),
(542,55,o),
(542,36,qs),
(542,19,o),
(560,2,o),
(574,2,qs),
(586,2,o),
(605,19,o),
(605,35,qs),
(605,55,o),
(603,116,o),
(603,164,qs),
(603,200,o),
(605,256,o),
(605,273,qs),
(605,299,o),
(569,321,o),
(545,321,qs),
(491,320,o),
(372,310,o),
(310,310,qs),
(294,310,o),
(259,295,o),
(259,275,qs),
(259,264,o),
(280,247,o),
(301,247,qs),
(355,247,o),
(462,254,o),
(512,254,qs),
(531,254,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
48 1 7 8 30 1 9 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
2 1 1 10 1 0 9 1 0 91 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 7 1 1 2 96 0 1 10 1 0 9 1 0 92 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 2 7 1 1 2 96 0 5 0 8 7 5 8 91 0 1 10 1 0 9 1 0 92 0 7 7 6 83 0 6 6 14 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
4 0 85 83 75 73 67 65 53 51 46 44 36 34 25 23 13 11 10 8 0 91 4 91 11 15
CALL[ ]	/* CallFunction */";
};
width = 656;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(541,251,o),
(541,225,qs),
(541,171,o),
(508,93,o),
(454,43,o),
(384,19,o),
(347,19,qs),
(275,19,o),
(175,86,o),
(114,195,o),
(86,333,o),
(86,404,qs),
(86,487,o),
(127,634,o),
(198,743,o),
(292,807,o),
(345,807,qs),
(395,807,o),
(465,766,o),
(509,692,o),
(529,589,o),
(529,527,qs),
(529,520,o),
(530,502,o),
(534,485,o),
(543,474,o),
(551,474,qs),
(565,474,o),
(569,502,o),
(569,530,qs),
(569,556,o),
(567,622,o),
(567,648,qs),
(567,688,o),
(571,749,o),
(571,790,qs),
(571,802,o),
(557,813,o),
(549,813,qs),
(542,813,o),
(532,801,o),
(532,791,qs),
(537,702,l),
(509,775,o),
(408,838,o),
(354,838,qs),
(285,838,o),
(169,768,o),
(87,649,o),
(41,491,o),
(41,404,qs),
(41,288,o),
(94,128,o),
(179,29,o),
(286,-14,o),
(339,-14,qs),
(368,-14,o),
(428,-1,o),
(483,27,o),
(531,71,o),
(548,103,q),
(548,96,o),
(546,51,o),
(546,34,qs),
(546,12,o),
(563,12,qs),
(568,12,o),
(579,22,o),
(579,33,qs),
(579,51,o),
(577,119,o),
(577,164,qs),
(577,200,o),
(579,256,o),
(579,273,qs),
(579,291,o),
(561,306,o),
(549,306,qs),
(495,304,o),
(386,298,o),
(324,295,qs),
(307,294,o),
(273,288,o),
(273,278,qs),
(273,272,o),
(290,262,o),
(311,262,qs),
(365,262,o),
(466,269,o),
(516,269,qs),
(535,269,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
47 1 6 7 29 1 8 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 9 1 0 8 1 0 91 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 14 67 0 2 2 13 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 2 8 3 8 2 3 104 0 1 9 1 0 8 1 0 91 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 2 8 3 8 2 3 104 0 4 0 7 6 4 7 91 0 1 9 1 0 8 1 0 91 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
4 0 84 82 74 72 64 62 52 50 45 43 35 33 25 23 13 8 0 90 4 90 10 15
CALL[ ]	/* CallFunction */";
};
width = 635;
}
);
note = G;
unicode = 71;
},
{
glyphname = Gbreve;
kernLeft = C;
kernRight = G;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(534,238,o),
(534,225,qs),
(534,201,o),
(502,145,o),
(450,98,o),
(381,67,o),
(344,67,qs),
(286,67,o),
(204,126,o),
(153,221,o),
(130,342,o),
(130,404,qs),
(130,477,o),
(163,606,o),
(220,703,o),
(295,759,o),
(338,759,qs),
(388,759,o),
(458,723,o),
(502,659,o),
(522,572,o),
(522,521,qs),
(522,491,o),
(551,468,o),
(568,468,qs),
(591,468,o),
(613,500,o),
(613,524,qs),
(613,550,o),
(611,622,o),
(611,648,qs),
(611,668,o),
(612,701,o),
(614,733,o),
(615,766,o),
(615,787,qs),
(615,799,o),
(594,826,o),
(568,826,qs),
(547,826,o),
(530,809,o),
(530,795,qs),
(535,709,l),
(521,745,o),
(479,795,o),
(429,825,o),
(374,838,o),
(347,838,qs),
(278,838,o),
(162,768,o),
(80,649,o),
(34,491,o),
(34,404,qs),
(34,288,o),
(88,128,o),
(174,29,o),
(281,-14,o),
(334,-14,qs),
(364,-14,o),
(425,-2,o),
(480,25,o),
(527,68,o),
(543,98,q),
(543,90,o),
(541,52,o),
(541,32,qs),
(541,10,o),
(564,-4,o),
(582,-4,qs),
(599,-4,o),
(623,17,o),
(623,36,qs),
(623,56,o),
(621,114,o),
(621,164,qs),
(621,200,o),
(623,256,o),
(623,273,qs),
(623,305,o),
(574,330,o),
(542,330,qs),
(515,330,o),
(471,327,o),
(427,324,o),
(379,322,o),
(348,322,qs),
(328,322,o),
(297,301,o),
(297,273,qs),
(297,260,o),
(321,238,o),
(342,238,qs),
(369,238,o),
(409,240,o),
(446,243,o),
(484,245,o),
(509,245,qs),
(523,245,o)
);
},
{
closed = 1;
nodes = (
(459,971,o),
(444,971,qs),
(431,971,o),
(412,953,o),
(412,942,qs),
(412,934,o),
(385,919,o),
(356,919,qs),
(347,919,o),
(326,921,o),
(308,927,o),
(297,936,o),
(297,942,qs),
(297,959,o),
(278,971,o),
(261,971,qs),
(244,971,o),
(229,954,o),
(229,941,qs),
(229,909,o),
(296,862,o),
(361,862,qs),
(380,862,o),
(423,872,o),
(459,892,o),
(482,921,o),
(482,941,qs),
(482,961,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
54 1 7 8 34 1 9 0 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
54 1 7 8 34 1 9 1 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
13 1 11 12 11 106 0 12 0 10 5 12 10 91 0 2 1 14 2 0 9 2 0 92 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 67 0 9 9 3 83 4 1 3 3 16 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
13 1 11 12 11 106 0 12 0 10 5 12 10 91 0 2 1 14 2 0 9 2 0 92 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 9 9 3 83 4 1 3 3 16 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
13 1 11 12 11 106 0 12 0 10 5 12 10 91 0 2 1 14 2 0 9 2 0 92 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 16 67 0 9 9 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
13 1 11 12 11 106 0 1 0 9 0 1 96 0 12 0 10 5 12 10 91 0 5 0 8 7 5 8 91 0 2 14 1 0 1 2 0 92 0 7 7 6 83 0 6 6 14 67 0 3 3 16 67 0 9 9 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
2 0 124 122 118 116 110 108 104 102 91 89 81 79 73 71 59 57 50 48 40 38 29 27 17 10 6 3 0 97 2 97 15 15
CALL[ ]	/* CallFunction */";
};
width = 671;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (37,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = G;
},
{
alignment = -1;
pos = (238,355);
ref = breve;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
49 1 7 8 31 1 9 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
13 1 11 12 11 106 0 12 0 10 5 12 10 91 2 1 1 14 1 0 9 1 0 92 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
13 1 11 12 11 106 0 2 7 1 1 2 96 0 12 0 10 5 12 10 91 0 1 14 1 0 9 1 0 92 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
13 1 11 12 11 106 0 2 7 1 1 2 96 0 12 0 10 5 12 10 91 0 5 0 8 7 5 8 91 0 1 14 1 0 9 1 0 92 0 7 7 6 83 0 6 6 14 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
5 1 118 116 112 110 104 102 99 97 86 84 76 74 68 66 54 52 47 45 37 35 26 24 14 12 11 9 1 92 5 92 15 26
CALL[ ]	/* CallFunction */";
};
width = 656;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(449,972,o),
(441,972,qs),
(424,972,o),
(424,949,qs),
(424,939,o),
(411,921,o),
(389,908,o),
(362,900,o),
(349,900,qs),
(335,900,o),
(308,904,o),
(287,914,o),
(275,934,o),
(275,949,qs),
(275,961,o),
(269,972,o),
(258,972,qs),
(241,972,o),
(241,948,qs),
(241,918,o),
(304,875,o),
(349,875,qs),
(368,875,o),
(408,884,o),
(440,902,o),
(460,930,o),
(460,948,qs),
(460,964,o)
);
},
{
closed = 1;
nodes = (
(541,251,o),
(541,225,qs),
(541,171,o),
(508,93,o),
(454,43,o),
(384,19,o),
(347,19,qs),
(275,19,o),
(175,86,o),
(114,195,o),
(86,333,o),
(86,404,qs),
(86,487,o),
(127,634,o),
(198,743,o),
(292,807,o),
(345,807,qs),
(395,807,o),
(465,766,o),
(509,692,o),
(529,589,o),
(529,527,qs),
(529,520,o),
(530,502,o),
(534,485,o),
(543,474,o),
(551,474,qs),
(565,474,o),
(569,502,o),
(569,530,qs),
(569,556,o),
(567,622,o),
(567,648,qs),
(567,688,o),
(571,749,o),
(571,790,qs),
(571,802,o),
(557,813,o),
(549,813,qs),
(542,813,o),
(532,801,o),
(532,791,qs),
(537,702,l),
(509,775,o),
(408,838,o),
(354,838,qs),
(285,838,o),
(169,768,o),
(87,649,o),
(41,491,o),
(41,404,qs),
(41,288,o),
(94,128,o),
(179,29,o),
(286,-14,o),
(339,-14,qs),
(368,-14,o),
(428,-1,o),
(483,27,o),
(531,71,o),
(548,103,q),
(548,96,o),
(546,51,o),
(546,34,qs),
(546,12,o),
(563,12,qs),
(568,12,o),
(579,22,o),
(579,33,qs),
(579,51,o),
(577,119,o),
(577,164,qs),
(577,200,o),
(579,256,o),
(579,273,qs),
(579,291,o),
(561,306,o),
(549,306,qs),
(495,304,o),
(386,298,o),
(324,295,qs),
(307,294,o),
(273,288,o),
(273,278,qs),
(273,272,o),
(290,262,o),
(311,262,qs),
(365,262,o),
(466,269,o),
(516,269,qs),
(535,269,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
75 1 10 11 57 1 12 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
3 1 1 2 1 106 0 2 0 0 8 2 0 91 0 5 13 1 4 12 5 4 92 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 14 67 0 6 6 13 67 0 12 12 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
3 1 1 2 1 106 0 6 12 7 12 6 7 104 0 2 0 0 8 2 0 91 0 5 13 1 4 12 5 4 92 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 14 67 0 12 12 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
3 1 1 2 1 106 0 6 12 7 12 6 7 104 0 2 0 0 8 2 0 91 0 8 0 11 10 8 11 91 0 5 13 1 4 12 5 4 92 0 10 10 9 83 0 9 9 14 67 0 12 12 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
32 28 112 110 102 100 92 90 80 78 73 71 63 61 53 51 41 36 28 118 32 118 37 38 35 36 14 19
CALL[ ]	/* CallFunction */";
};
width = 635;
}
);
note = Gbreve;
unicode = 286;
},
{
glyphname = Gcircumflex;
kernLeft = C;
kernRight = G;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(477,844,o),
(477,851,qs),
(477,867,o),
(442,908,o),
(397,946,o),
(353,972,o),
(344,972,qs),
(337,972,o),
(294,947,o),
(248,909,o),
(212,864,o),
(212,844,qs),
(212,839,o),
(219,830,o),
(225,830,qs),
(230,830,o),
(258,837,o),
(292,851,o),
(329,869,o),
(344,880,q),
(359,869,o),
(396,851,o),
(431,837,o),
(459,830,o),
(464,830,qs),
(472,830,o)
);
},
{
closed = 1;
nodes = (
(534,238,o),
(534,225,qs),
(534,201,o),
(502,145,o),
(450,98,o),
(381,67,o),
(344,67,qs),
(286,67,o),
(204,126,o),
(153,221,o),
(130,342,o),
(130,404,qs),
(130,477,o),
(163,606,o),
(220,703,o),
(295,759,o),
(338,759,qs),
(388,759,o),
(458,723,o),
(502,659,o),
(522,572,o),
(522,521,qs),
(522,491,o),
(551,468,o),
(568,468,qs),
(591,468,o),
(613,500,o),
(613,524,qs),
(613,550,o),
(611,622,o),
(611,648,qs),
(611,668,o),
(612,701,o),
(614,733,o),
(615,766,o),
(615,787,qs),
(615,799,o),
(594,826,o),
(568,826,qs),
(547,826,o),
(530,809,o),
(530,795,qs),
(535,709,l),
(521,745,o),
(479,795,o),
(429,825,o),
(374,838,o),
(347,838,qs),
(278,838,o),
(162,768,o),
(80,649,o),
(34,491,o),
(34,404,qs),
(34,288,o),
(88,128,o),
(174,29,o),
(281,-14,o),
(334,-14,qs),
(364,-14,o),
(425,-2,o),
(480,25,o),
(527,68,o),
(543,98,q),
(543,90,o),
(541,52,o),
(541,32,qs),
(541,10,o),
(564,-4,o),
(582,-4,qs),
(599,-4,o),
(623,17,o),
(623,36,qs),
(623,56,o),
(621,114,o),
(621,164,qs),
(621,200,o),
(623,256,o),
(623,273,qs),
(623,305,o),
(574,330,o),
(542,330,qs),
(515,330,o),
(471,327,o),
(427,324,o),
(379,322,o),
(348,322,qs),
(328,322,o),
(297,301,o),
(297,273,qs),
(297,260,o),
(321,238,o),
(342,238,qs),
(369,238,o),
(409,240,o),
(446,243,o),
(484,245,o),
(509,245,qs),
(523,245,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
5 1 8 2 80 1 10 11 60 1 12 3 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
5 1 8 2 80 1 10 11 60 1 12 4 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 2 8 8 2 94 1 13 2 0 8 11 8 0 11 104 0 5 4 14 2 3 12 5 3 91 0 11 11 8 83 9 1 8 8 20 67 0 10 10 8 83 9 1 8 8 20 67 0 12 12 6 83 7 1 6 6 16 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 2 8 2 106 1 13 2 0 8 11 8 0 11 104 0 5 4 14 2 3 12 5 3 91 0 11 11 8 83 9 1 8 8 20 67 0 10 10 8 83 9 1 8 8 20 67 0 12 12 6 83 7 1 6 6 16 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 2 8 2 106 1 13 2 0 8 9 8 0 9 104 0 5 4 14 2 3 12 5 3 91 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 12 67 0 12 12 6 83 7 1 6 6 16 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 2 8 2 106 1 13 2 0 8 9 8 0 9 104 0 5 4 14 2 3 12 5 3 91 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 12 67 0 6 6 16 67 0 12 12 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 2 8 2 106 1 13 2 0 8 9 8 0 9 104 0 4 3 12 3 4 96 0 8 0 11 10 8 11 92 0 5 14 1 3 4 5 3 91 0 10 10 9 83 0 9 9 14 67 0 6 6 16 67 0 12 12 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
28 26 1 0 117 115 107 105 99 97 85 83 76 74 66 64 55 53 43 36 32 29 26 123 28 123 19 17 11 9 0 25 1 25 15 15
CALL[ ]	/* CallFunction */";
};
width = 671;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(476,857,o),
(476,864,qs),
(476,877,o),
(442,915,o),
(397,948,o),
(354,972,o),
(345,972,qs),
(337,972,o),
(295,949,o),
(250,915,o),
(215,876,o),
(215,860,qs),
(215,847,o),
(226,847,qs),
(231,847,o),
(257,855,o),
(290,869,o),
(328,888,o),
(345,898,q),
(362,888,o),
(400,869,o),
(434,855,o),
(460,847,o),
(465,847,qs),
(471,847,o)
);
},
{
closed = 1;
nodes = (
(537,242,o),
(537,225,qs),
(537,189,o),
(505,125,o),
(451,77,o),
(382,49,o),
(345,49,qs),
(281,49,o),
(192,111,o),
(137,211,o),
(112,339,o),
(112,404,qs),
(112,481,o),
(148,617,o),
(211,718,o),
(294,777,o),
(341,777,qs),
(391,777,o),
(461,737,o),
(505,667,o),
(525,572,o),
(525,517,qs),
(525,493,o),
(544,464,o),
(561,464,qs),
(580,464,o),
(595,494,o),
(595,520,qs),
(595,546,o),
(593,622,o),
(593,648,qs),
(593,668,o),
(594,702,o),
(596,734,o),
(597,767,o),
(597,788,qs),
(597,800,o),
(578,821,o),
(560,821,qs),
(545,821,o),
(528,802,o),
(528,789,qs),
(533,702,l),
(505,775,o),
(404,838,o),
(350,838,qs),
(281,838,o),
(165,768,o),
(83,649,o),
(37,491,o),
(37,404,qs),
(37,288,o),
(90,128,o),
(176,29,o),
(283,-14,o),
(336,-14,qs),
(366,-14,o),
(426,-1,o),
(481,28,o),
(527,72,o),
(544,103,q),
(544,95,o),
(542,55,o),
(542,36,qs),
(542,19,o),
(560,2,o),
(574,2,qs),
(586,2,o),
(605,19,o),
(605,35,qs),
(605,55,o),
(603,116,o),
(603,164,qs),
(603,200,o),
(605,256,o),
(605,273,qs),
(605,299,o),
(569,321,o),
(545,321,qs),
(491,320,o),
(372,310,o),
(310,310,qs),
(294,310,o),
(259,295,o),
(259,275,qs),
(259,264,o),
(280,247,o),
(301,247,qs),
(355,247,o),
(462,254,o),
(512,254,qs),
(531,254,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
5 1 0 2 73 1 10 11 55 1 12 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 2 0 8 2 94 1 13 2 0 8 0 106 5 1 4 14 1 3 12 4 3 91 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 12 67 0 6 6 13 67 0 12 12 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 2 0 2 106 1 13 2 0 8 0 106 5 1 4 14 1 3 12 4 3 91 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 12 67 0 6 6 13 67 0 12 12 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 2 0 2 106 1 13 2 0 8 0 106 0 5 10 4 4 5 96 0 4 14 1 3 12 4 3 92 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 12 67 0 6 6 13 67 0 12 12 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 2 0 2 106 1 13 2 0 8 0 106 0 5 10 4 4 5 96 0 8 0 11 10 8 11 92 0 4 14 1 3 12 4 3 92 0 10 10 9 83 0 9 9 14 67 0 6 6 13 67 0 12 12 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
29 25 1 0 110 108 100 98 92 90 78 76 71 69 61 59 50 48 38 36 35 33 25 116 29 116 18 16 11 9 0 24 1 24 15 15
CALL[ ]	/* CallFunction */";
};
width = 656;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(474,886,qs),
(474,895,o),
(441,925,o),
(398,952,o),
(355,972,o),
(346,972,qs),
(337,972,o),
(296,952,o),
(252,925,o),
(219,895,o),
(219,886,qs),
(219,875,o),
(227,875,qs),
(232,875,o),
(255,885,o),
(286,901,o),
(325,919,o),
(346,928,q),
(367,919,o),
(406,901,o),
(438,885,o),
(461,875,o),
(466,875,qs),
(474,875,o)
);
},
{
closed = 1;
nodes = (
(541,251,o),
(541,225,qs),
(541,171,o),
(508,93,o),
(454,43,o),
(384,19,o),
(347,19,qs),
(275,19,o),
(175,86,o),
(114,195,o),
(86,333,o),
(86,404,qs),
(86,487,o),
(127,634,o),
(198,743,o),
(292,807,o),
(345,807,qs),
(395,807,o),
(465,766,o),
(509,692,o),
(529,589,o),
(529,527,qs),
(529,520,o),
(530,502,o),
(534,485,o),
(543,474,o),
(551,474,qs),
(565,474,o),
(569,502,o),
(569,530,qs),
(569,556,o),
(567,622,o),
(567,648,qs),
(567,688,o),
(571,749,o),
(571,790,qs),
(571,802,o),
(557,813,o),
(549,813,qs),
(542,813,o),
(532,801,o),
(532,791,qs),
(537,702,l),
(509,775,o),
(408,838,o),
(354,838,qs),
(285,838,o),
(169,768,o),
(87,649,o),
(41,491,o),
(41,404,qs),
(41,288,o),
(94,128,o),
(179,29,o),
(286,-14,o),
(339,-14,qs),
(368,-14,o),
(428,-1,o),
(483,27,o),
(531,71,o),
(548,103,q),
(548,96,o),
(546,51,o),
(546,34,qs),
(546,12,o),
(563,12,qs),
(568,12,o),
(579,22,o),
(579,33,qs),
(579,51,o),
(577,119,o),
(577,164,qs),
(577,200,o),
(579,256,o),
(579,273,qs),
(579,291,o),
(561,306,o),
(549,306,qs),
(495,304,o),
(386,298,o),
(324,295,qs),
(307,294,o),
(273,288,o),
(273,278,qs),
(273,272,o),
(290,262,o),
(311,262,qs),
(365,262,o),
(466,269,o),
(516,269,qs),
(535,269,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
5 1 0 2 71 1 9 10 53 1 11 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 2 0 7 2 94 1 12 2 0 7 0 106 0 4 13 1 3 11 4 3 91 0 10 10 7 83 0 7 7 20 67 0 9 9 8 83 0 8 8 14 67 0 5 5 13 67 0 11 11 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 2 0 2 106 1 12 2 0 7 0 106 0 4 13 1 3 11 4 3 91 0 10 10 7 83 0 7 7 20 67 0 9 9 8 83 0 8 8 14 67 0 5 5 13 67 0 11 11 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 2 0 2 106 1 12 2 0 7 0 106 0 5 11 6 11 5 6 104 0 4 13 1 3 11 4 3 91 0 10 10 7 83 0 7 7 20 67 0 9 9 8 83 0 8 8 14 67 0 11 11 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 2 0 2 106 1 12 2 0 7 0 106 0 5 11 6 11 5 6 104 0 7 0 10 9 7 10 92 0 4 13 1 3 11 4 3 91 0 9 9 8 83 0 8 8 14 67 0 11 11 6 83 0 6 6 21 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
28 24 1 0 108 106 98 96 88 86 76 74 69 67 59 57 49 47 37 32 24 114 28 114 18 16 11 9 0 23 1 23 14 15
CALL[ ]	/* CallFunction */";
};
width = 635;
}
);
note = Gcircumflex;
unicode = 284;
},
{
glyphname = Gcommaaccent;
kernLeft = C;
kernRight = G;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(311,-132,o),
(325,-142,o),
(336,-151,o),
(336,-157,qs),
(336,-187,o),
(321,-216,o),
(321,-226,qs),
(321,-243,o),
(342,-249,o),
(347,-249,qs),
(353,-249,o),
(380,-234,o),
(407,-205,o),
(428,-160,o),
(428,-130,qs),
(428,-87,o),
(384,-49,o),
(360,-49,qs),
(327,-49,o),
(300,-86,o),
(300,-107,qs),
(300,-119,o)
);
},
{
closed = 1;
nodes = (
(536,238,o),
(536,225,qs),
(536,201,o),
(504,145,o),
(452,98,o),
(383,67,o),
(346,67,qs),
(288,67,o),
(206,126,o),
(155,221,o),
(132,342,o),
(132,404,qs),
(132,477,o),
(165,606,o),
(222,703,o),
(297,759,o),
(340,759,qs),
(390,759,o),
(460,723,o),
(504,659,o),
(524,572,o),
(524,521,qs),
(524,491,o),
(553,468,o),
(570,468,qs),
(593,468,o),
(615,500,o),
(615,524,qs),
(615,550,o),
(613,622,o),
(613,648,qs),
(613,668,o),
(614,701,o),
(616,733,o),
(617,766,o),
(617,787,qs),
(617,799,o),
(596,826,o),
(570,826,qs),
(549,826,o),
(532,809,o),
(532,795,qs),
(537,709,l),
(523,745,o),
(481,795,o),
(431,825,o),
(376,838,o),
(349,838,qs),
(280,838,o),
(164,768,o),
(82,649,o),
(36,491,o),
(36,404,qs),
(36,288,o),
(90,128,o),
(176,29,o),
(283,-14,o),
(336,-14,qs),
(366,-14,o),
(427,-2,o),
(482,25,o),
(529,68,o),
(545,98,q),
(545,90,o),
(543,52,o),
(543,32,qs),
(543,10,o),
(566,-4,o),
(584,-4,qs),
(601,-4,o),
(625,17,o),
(625,36,qs),
(625,56,o),
(623,114,o),
(623,164,qs),
(623,200,o),
(625,256,o),
(625,273,qs),
(625,305,o),
(576,330,o),
(544,330,qs),
(517,330,o),
(473,327,o),
(429,324,o),
(381,322,o),
(350,322,qs),
(330,322,o),
(299,301,o),
(299,273,qs),
(299,260,o),
(323,238,o),
(344,238,qs),
(371,238,o),
(411,240,o),
(448,243,o),
(486,245,o),
(511,245,qs),
(525,245,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
76 1 9 10 56 1 11 2 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
76 1 9 10 56 1 11 3 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 4 3 12 2 2 11 4 2 91 0 10 10 7 83 8 1 7 7 20 67 0 9 9 7 83 8 1 7 7 20 67 0 11 11 5 83 6 1 5 5 16 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 4 3 12 2 2 11 4 2 91 0 0 0 1 0 1 87 0 10 10 7 83 0 7 7 20 67 0 9 9 8 83 0 8 8 12 67 0 11 11 5 83 6 1 5 5 16 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 4 3 12 2 2 11 4 2 91 0 0 0 1 0 1 87 0 10 10 7 83 0 7 7 20 67 0 9 9 8 83 0 8 8 12 67 0 5 5 16 67 0 11 11 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 3 2 11 2 3 96 0 7 0 10 9 7 10 91 0 4 12 1 2 3 4 2 91 0 0 0 1 0 1 87 0 9 9 8 83 0 8 8 14 67 0 5 5 16 67 0 11 11 6 83 0 6 6 21 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
24 22 113 111 103 101 95 93 81 79 72 70 62 60 51 49 39 32 28 25 22 119 24 119 38 34 13 17
CALL[ ]	/* CallFunction */";
};
width = 672;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (38,0);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (1,0);
ref = G;
},
{
alignment = -1;
pos = (256,-139);
ref = comma;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
49 1 7 8 31 1 9 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
2 1 1 12 1 0 9 1 0 91 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 67 0 10 10 11 83 0 11 11 25 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 2 7 1 1 2 96 0 1 12 1 0 9 1 0 92 0 10 0 11 10 11 87 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 2 7 1 1 2 96 0 5 0 8 7 5 8 91 0 1 12 1 0 9 1 0 92 0 10 0 11 10 11 87 0 7 7 6 83 0 6 6 14 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
5 1 105 103 97 95 86 84 76 74 68 66 54 52 47 45 37 35 26 24 14 12 11 9 1 92 5 92 13 26
CALL[ ]	/* CallFunction */";
};
width = 657;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(542,251,o),
(542,225,qs),
(542,171,o),
(509,93,o),
(455,43,o),
(385,19,o),
(348,19,qs),
(276,19,o),
(176,86,o),
(115,195,o),
(87,333,o),
(87,404,qs),
(87,487,o),
(128,634,o),
(199,743,o),
(293,807,o),
(346,807,qs),
(396,807,o),
(466,766,o),
(510,692,o),
(530,589,o),
(530,527,qs),
(530,520,o),
(531,502,o),
(535,485,o),
(544,474,o),
(552,474,qs),
(566,474,o),
(570,502,o),
(570,530,qs),
(570,556,o),
(568,622,o),
(568,648,qs),
(568,688,o),
(572,749,o),
(572,790,qs),
(572,802,o),
(558,813,o),
(550,813,qs),
(543,813,o),
(533,801,o),
(533,791,qs),
(538,702,l),
(510,775,o),
(409,838,o),
(355,838,qs),
(286,838,o),
(170,768,o),
(88,649,o),
(42,491,o),
(42,404,qs),
(42,288,o),
(95,128,o),
(180,29,o),
(287,-14,o),
(340,-14,qs),
(369,-14,o),
(429,-1,o),
(484,27,o),
(532,71,o),
(549,103,q),
(549,96,o),
(547,51,o),
(547,34,qs),
(547,12,o),
(564,12,qs),
(569,12,o),
(580,22,o),
(580,33,qs),
(580,51,o),
(578,119,o),
(578,164,qs),
(578,200,o),
(580,256,o),
(580,273,qs),
(580,291,o),
(562,306,o),
(550,306,qs),
(496,304,o),
(387,298,o),
(325,295,qs),
(308,294,o),
(274,288,o),
(274,278,qs),
(274,272,o),
(291,262,o),
(312,262,qs),
(366,262,o),
(467,269,o),
(517,269,qs),
(536,269,o)
);
},
{
closed = 1;
nodes = (
(316,-124,o),
(330,-131,o),
(341,-138,o),
(341,-144,qs),
(341,-154,o),
(330,-183,o),
(330,-190,qs),
(330,-195,o),
(339,-202,o),
(344,-202,qs),
(354,-202,o),
(371,-185,o),
(381,-160,o),
(387,-133,o),
(387,-123,qs),
(387,-89,o),
(360,-66,o),
(345,-66,qs),
(325,-66,o),
(305,-87,o),
(305,-100,qs),
(305,-112,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
47 1 6 7 29 1 8 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 1 11 1 0 8 1 0 91 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 14 67 0 2 2 13 67 0 8 8 3 83 0 3 3 21 67 0 9 9 10 83 0 10 10 17 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 1 11 1 0 8 1 0 91 0 9 0 10 9 10 87 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 14 67 0 2 2 13 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 2 8 3 8 2 3 104 0 1 11 1 0 8 1 0 91 0 9 0 10 9 10 87 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 2 8 3 8 2 3 104 0 4 0 7 6 4 7 91 0 1 11 1 0 8 1 0 91 0 9 0 10 9 10 87 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
4 0 103 101 95 93 84 82 74 72 64 62 52 50 45 43 35 33 25 23 13 8 0 90 4 90 12 15
CALL[ ]	/* CallFunction */";
};
width = 636;
}
);
note = Gcommaaccent;
unicode = 290;
},
{
glyphname = Gdotaccent;
kernLeft = C;
kernRight = G;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(534,238,o),
(534,225,qs),
(534,201,o),
(502,145,o),
(450,98,o),
(381,67,o),
(344,67,qs),
(286,67,o),
(204,126,o),
(153,221,o),
(130,342,o),
(130,404,qs),
(130,477,o),
(163,606,o),
(220,703,o),
(295,759,o),
(338,759,qs),
(388,759,o),
(458,723,o),
(502,659,o),
(522,572,o),
(522,521,qs),
(522,491,o),
(551,468,o),
(568,468,qs),
(591,468,o),
(613,500,o),
(613,524,qs),
(613,550,o),
(611,622,o),
(611,648,qs),
(611,668,o),
(612,701,o),
(614,733,o),
(615,766,o),
(615,787,qs),
(615,799,o),
(594,826,o),
(568,826,qs),
(547,826,o),
(530,809,o),
(530,795,qs),
(535,709,l),
(521,745,o),
(479,795,o),
(429,825,o),
(374,838,o),
(347,838,qs),
(278,838,o),
(162,768,o),
(80,649,o),
(34,491,o),
(34,404,qs),
(34,288,o),
(88,128,o),
(174,29,o),
(281,-14,o),
(334,-14,qs),
(364,-14,o),
(425,-2,o),
(480,25,o),
(527,68,o),
(543,98,q),
(543,90,o),
(541,52,o),
(541,32,qs),
(541,10,o),
(564,-4,o),
(582,-4,qs),
(599,-4,o),
(623,17,o),
(623,36,qs),
(623,56,o),
(621,114,o),
(621,164,qs),
(621,200,o),
(623,256,o),
(623,273,qs),
(623,305,o),
(574,330,o),
(542,330,qs),
(515,330,o),
(471,327,o),
(427,324,o),
(379,322,o),
(348,322,qs),
(328,322,o),
(297,301,o),
(297,273,qs),
(297,260,o),
(321,238,o),
(342,238,qs),
(369,238,o),
(409,240,o),
(446,243,o),
(484,245,o),
(509,245,qs),
(523,245,o)
);
},
{
closed = 1;
nodes = (
(339,840,o),
(364,840,qs),
(375,840,o),
(399,846,o),
(418,862,o),
(431,889,o),
(431,910,qs),
(431,937,o),
(395,971,o),
(371,971,qs),
(353,971,o),
(328,958,o),
(312,939,o),
(305,916,o),
(305,906,qs),
(305,874,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
54 1 7 8 34 1 9 0 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
54 1 7 8 34 1 9 1 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 10 0 11 5 10 11 91 0 2 1 12 2 0 9 2 0 91 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 67 0 9 9 3 83 4 1 3 3 16 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 10 0 11 5 10 11 91 0 2 1 12 2 0 9 2 0 91 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 9 9 3 83 4 1 3 3 16 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 10 0 11 5 10 11 91 0 2 1 12 2 0 9 2 0 91 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 16 67 0 9 9 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 1 0 9 0 1 96 0 10 0 11 5 10 11 91 0 5 0 8 7 5 8 91 0 2 12 1 0 1 2 0 91 0 7 7 6 83 0 6 6 14 67 0 3 3 16 67 0 9 9 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
2 0 112 110 104 102 91 89 81 79 73 71 59 57 50 48 40 38 29 27 17 10 6 3 0 97 2 97 13 15
CALL[ ]	/* CallFunction */";
};
width = 671;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (37,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = G;
},
{
alignment = -1;
pos = (293,336);
ref = dotaccent;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
49 1 7 8 31 1 9 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 10 0 11 5 10 11 91 2 1 1 12 1 0 9 1 0 91 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 2 7 1 1 2 96 0 10 0 11 5 10 11 91 0 1 12 1 0 9 1 0 92 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 2 7 1 1 2 96 0 10 0 11 5 10 11 91 0 5 0 8 7 5 8 91 0 1 12 1 0 9 1 0 92 0 7 7 6 83 0 6 6 14 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
5 1 105 103 99 97 86 84 76 74 68 66 54 52 47 45 37 35 26 24 14 12 11 9 1 92 5 92 13 26
CALL[ ]	/* CallFunction */";
};
width = 656;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(541,251,o),
(541,225,qs),
(541,171,o),
(508,93,o),
(454,43,o),
(384,19,o),
(347,19,qs),
(275,19,o),
(175,86,o),
(114,195,o),
(86,333,o),
(86,404,qs),
(86,487,o),
(127,634,o),
(198,743,o),
(292,807,o),
(345,807,qs),
(395,807,o),
(465,766,o),
(509,692,o),
(529,589,o),
(529,527,qs),
(529,520,o),
(530,502,o),
(534,485,o),
(543,474,o),
(551,474,qs),
(565,474,o),
(569,502,o),
(569,530,qs),
(569,556,o),
(567,622,o),
(567,648,qs),
(567,688,o),
(571,749,o),
(571,790,qs),
(571,802,o),
(557,813,o),
(549,813,qs),
(542,813,o),
(532,801,o),
(532,791,qs),
(537,702,l),
(509,775,o),
(408,838,o),
(354,838,qs),
(285,838,o),
(169,768,o),
(87,649,o),
(41,491,o),
(41,404,qs),
(41,288,o),
(94,128,o),
(179,29,o),
(286,-14,o),
(339,-14,qs),
(368,-14,o),
(428,-1,o),
(483,27,o),
(531,71,o),
(548,103,q),
(548,96,o),
(546,51,o),
(546,34,qs),
(546,12,o),
(563,12,qs),
(568,12,o),
(579,22,o),
(579,33,qs),
(579,51,o),
(577,119,o),
(577,164,qs),
(577,200,o),
(579,256,o),
(579,273,qs),
(579,291,o),
(561,306,o),
(549,306,qs),
(495,304,o),
(386,298,o),
(324,295,qs),
(307,294,o),
(273,288,o),
(273,278,qs),
(273,272,o),
(290,262,o),
(311,262,qs),
(365,262,o),
(466,269,o),
(516,269,qs),
(535,269,o)
);
},
{
closed = 1;
nodes = (
(332,889,o),
(346,889,qs),
(360,889,o),
(387,908,o),
(387,935,qs),
(387,952,o),
(367,972,o),
(353,972,qs),
(342,972,o),
(327,963,o),
(317,950,o),
(312,936,o),
(312,931,qs),
(312,913,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
47 1 6 7 29 1 8 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 9 0 10 4 9 10 91 0 1 11 1 0 8 1 0 91 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 14 67 0 2 2 13 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 2 8 3 8 2 3 104 0 9 0 10 4 9 10 91 0 1 11 1 0 8 1 0 91 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 2 8 3 8 2 3 104 0 9 0 10 4 9 10 91 0 4 0 7 6 4 7 91 0 1 11 1 0 8 1 0 91 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
4 0 103 101 97 95 84 82 74 72 64 62 52 50 45 43 35 33 25 23 13 8 0 90 4 90 12 15
CALL[ ]	/* CallFunction */";
};
width = 635;
}
);
note = Gdotaccent;
unicode = 288;
},
{
glyphname = H;
kernLeft = B;
kernRight = H;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(681,730,o),
(698,740,o),
(730,745,o),
(758,745,qs),
(764,745,o),
(780,747,o),
(793,753,o),
(803,765,o),
(803,776,qs),
(803,796,o),
(776,807,o),
(744,807,qs),
(555,807,ls),
(534,807,o),
(505,793,o),
(505,775,qs),
(505,742,o),
(545,738,qs),
(562,736,o),
(581,724,o),
(581,712,qs),
(581,463,l),
(582,463,o),
(551,462,o),
(505,461,o),
(454,461,o),
(435,461,qs),
(384,461,o),
(282,461,o),
(231,462,q),
(231,717,ls),
(231,740,o),
(258,757,o),
(295,757,qs),
(303,757,o),
(321,760,o),
(337,768,o),
(347,781,o),
(347,790,qs),
(347,808,o),
(320,821,o),
(288,821,qs),
(89,821,ls),
(76,821,o),
(50,807,o),
(50,788,qs),
(50,752,o),
(89,752,qs),
(115,752,o),
(135,738,o),
(135,721,qs),
(135,642,o),
(139,480,o),
(139,401,qs),
(139,362,o),
(138,290,o),
(136,220,o),
(135,151,o),
(135,114,qs),
(135,85,o),
(112,68,o),
(96,68,qs),
(73,68,o),
(53,44,o),
(53,29,qs),
(53,11,o),
(88,0,o),
(108,0,qs),
(337,0,ls),
(347,0,o),
(365,12,o),
(365,35,qs),
(365,46,o),
(346,63,o),
(327,63,qs),
(231,63,l),
(231,377,l),
(282,378,o),
(384,379,o),
(435,379,qs),
(454,379,o),
(506,378,o),
(529,378,qs),
(556,377,o),
(584,377,q),
(584,62,ls),
(584,33,o),
(565,16,o),
(554,16,qs),
(533,16,o),
(504,-3,o),
(504,-22,qs),
(504,-41,o),
(529,-55,o),
(556,-55,qs),
(791,-55,ls),
(801,-55,o),
(819,-44,o),
(819,-26,qs),
(819,-3,o),
(792,8,o),
(781,8,qs),
(685,8,l),
(685,18,o),
(682,94,o),
(678,204,o),
(675,335,o),
(675,401,qs),
(675,427,o),
(676,515,o),
(676,607,o),
(677,687,o),
(677,705,qs),
(677,715,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 11 7 10 7 11 10 104 2 1 0 0 1 0 1 87 13 9 2 7 7 8 83 12 1 8 8 12 67 0 3 3 10 83 0 10 10 23 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 11 7 10 7 11 10 104 2 1 0 0 1 0 1 87 13 9 2 7 7 8 83 0 8 8 12 67 13 9 2 7 7 12 83 0 12 12 14 67 0 3 3 10 83 0 10 10 23 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 11 7 10 7 11 10 104 0 10 0 3 4 10 3 89 2 1 0 0 1 0 1 87 13 9 2 7 7 8 83 0 8 8 12 67 13 9 2 7 7 12 83 0 12 12 14 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 11 7 10 7 11 10 104 0 2 4 0 0 2 96 0 10 0 3 4 10 3 89 0 0 0 1 0 1 88 13 9 2 7 7 8 83 0 8 8 12 67 13 9 2 7 7 12 83 0 12 12 14 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 11 13 10 13 11 10 104 0 2 4 0 0 2 96 0 10 0 3 4 10 3 89 0 0 0 1 0 1 88 9 1 7 7 8 83 0 8 8 12 67 0 13 13 12 83 0 12 12 14 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 7 9 13 9 7 96 0 11 13 10 13 11 10 104 0 6 3 4 4 6 96 0 2 4 0 0 2 96 0 10 0 3 6 10 3 89 0 0 0 1 0 1 88 0 9 9 8 83 0 8 8 14 67 0 13 13 12 83 0 12 12 14 67 0 4 4 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 7 9 13 9 7 96 0 11 13 10 13 11 10 104 0 6 3 4 4 6 96 0 2 4 0 0 2 96 0 12 0 13 11 12 13 91 0 10 0 3 6 10 3 89 0 0 0 1 0 1 88 0 9 9 8 83 0 8 8 14 67 0 4 4 5 84 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
110 108 102 99 91 90 90 83 80 78 51 44 36 52 33 131 36 52 42 14 24
CALL[ ]	/* CallFunction */";
};
width = 829;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(679,752,o),
(707,756,o),
(733,757,o),
(738,757,qs),
(750,757,o),
(780,765,o),
(780,782,qs),
(780,797,o),
(756,807,o),
(724,807,qs),
(532,807,ls),
(523,807,o),
(495,797,o),
(495,782,qs),
(495,768,o),
(521,757,o),
(532,757,qs),
(539,757,o),
(557,756,o),
(572,752,o),
(582,743,o),
(582,734,qs),
(582,454,l),
(583,454,o),
(548,453,o),
(495,452,o),
(437,452,o),
(415,452,qs),
(364,452,o),
(262,452,o),
(211,454,q),
(211,746,ls),
(211,755,o),
(230,766,o),
(254,770,o),
(277,771,o),
(282,771,qs),
(294,771,o),
(324,780,o),
(324,796,qs),
(324,810,o),
(300,821,o),
(268,821,qs),
(76,821,ls),
(67,821,o),
(39,814,o),
(39,796,qs),
(39,781,o),
(65,771,o),
(76,771,qs),
(83,771,o),
(104,770,o),
(123,766,o),
(136,757,o),
(136,748,qs),
(136,666,o),
(140,483,o),
(140,401,qs),
(140,319,o),
(136,171,o),
(136,94,qs),
(136,77,o),
(125,58,o),
(109,49,o),
(90,48,o),
(83,48,qs),
(74,48,o),
(54,41,o),
(54,27,qs),
(54,10,o),
(81,0,o),
(95,0,qs),
(317,0,ls),
(327,0,o),
(342,10,o),
(342,27,qs),
(342,37,o),
(326,51,o),
(307,51,qs),
(211,51,l),
(211,386,l),
(262,387,o),
(364,388,o),
(415,388,qs),
(437,388,o),
(496,387,o),
(522,387,qs),
(553,386,o),
(585,386,q),
(585,39,ls),
(585,22,o),
(576,3,o),
(563,-6,o),
(548,-7,o),
(541,-7,qs),
(532,-7,o),
(512,-17,o),
(512,-32,qs),
(512,-48,o),
(539,-55,o),
(553,-55,qs),
(771,-55,ls),
(781,-55,o),
(796,-46,o),
(796,-32,qs),
(796,-15,o),
(772,-4,o),
(761,-4,qs),
(665,-4,l),
(665,6,o),
(662,85,o),
(658,198,o),
(655,333,o),
(655,401,qs),
(655,428,o),
(656,524,o),
(656,625,o),
(657,713,o),
(657,732,qs),
(657,741,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 11 12 10 12 11 10 104 2 1 0 0 1 0 1 87 9 1 7 7 8 83 0 8 8 12 67 14 1 12 12 13 83 0 13 13 14 67 0 3 3 10 83 0 10 10 15 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 11 12 10 12 11 10 104 0 10 0 3 4 10 3 89 2 1 0 0 1 0 1 87 9 1 7 7 8 83 0 8 8 12 67 14 1 12 12 13 83 0 13 13 14 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 11 12 10 12 11 10 104 0 10 0 3 4 10 3 89 2 1 0 0 1 0 1 87 9 1 7 7 8 83 0 8 8 14 67 14 1 12 12 13 83 0 13 13 14 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 11 12 10 12 11 10 104 0 13 14 1 12 11 13 12 91 0 10 0 3 4 10 3 89 2 1 0 0 1 0 1 87 9 1 7 7 8 83 0 8 8 14 67 6 1 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
117 114 110 107 103 100 96 95 95 88 84 81 52 60 52 52 33 132 52 52 42 15 24
CALL[ ]	/* CallFunction */";
};
width = 807;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(651,772,o),
(679,776,o),
(705,777,o),
(710,777,qs),
(722,777,o),
(747,781,o),
(747,792,qs),
(747,800,o),
(728,807,o),
(696,807,qs),
(514,807,ls),
(505,807,o),
(477,803,o),
(477,792,qs),
(477,782,o),
(503,777,o),
(514,777,qs),
(524,777,o),
(549,776,o),
(570,772,o),
(584,763,o),
(584,754,qs),
(584,439,l),
(585,439,o),
(543,438,o),
(481,437,o),
(412,437,o),
(387,437,qs),
(336,437,o),
(234,437,o),
(183,439,q),
(183,766,ls),
(183,775,o),
(202,786,o),
(226,790,o),
(249,791,o),
(254,791,qs),
(266,791,o),
(291,795,o),
(291,806,qs),
(291,814,o),
(272,821,o),
(240,821,qs),
(58,821,ls),
(49,821,o),
(21,817,o),
(21,806,qs),
(21,796,o),
(47,791,o),
(58,791,qs),
(68,791,o),
(96,790,o),
(121,786,o),
(138,777,o),
(138,768,qs),
(138,680,o),
(142,489,o),
(142,401,qs),
(142,313,o),
(138,156,o),
(138,74,qs),
(138,57,o),
(123,38,o),
(100,29,o),
(75,28,o),
(65,28,qs),
(56,28,o),
(36,22,o),
(36,13,qs),
(36,5,o),
(63,0,o),
(77,0,qs),
(289,0,ls),
(309,0,o),
(309,13,qs),
(309,21,o),
(298,31,o),
(279,31,qs),
(183,31,l),
(183,401,l),
(234,402,o),
(336,403,o),
(387,403,qs),
(413,403,o),
(480,402,o),
(512,402,qs),
(548,401,o),
(587,401,q),
(587,19,ls),
(587,2,o),
(575,-17,o),
(556,-26,o),
(533,-27,o),
(523,-27,qs),
(514,-27,o),
(494,-33,o),
(494,-42,qs),
(494,-50,o),
(521,-55,o),
(535,-55,qs),
(743,-55,ls),
(763,-55,o),
(763,-42,qs),
(763,-34,o),
(744,-24,o),
(733,-24,qs),
(637,-24,l),
(637,-13,o),
(634,69,o),
(630,188,o),
(627,330,o),
(627,401,qs),
(627,420,o),
(627,479,o),
(628,548,o),
(628,621,o),
(629,687,o),
(629,739,o),
(629,752,qs),
(629,761,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 11 12 10 12 11 10 104 2 1 0 0 1 0 1 87 9 1 7 7 8 83 0 8 8 12 67 14 1 12 12 13 83 0 13 13 14 67 0 3 3 10 83 0 10 10 15 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 11 12 10 12 11 10 104 0 10 0 3 4 10 3 89 2 1 0 0 1 0 1 87 9 1 7 7 8 83 0 8 8 12 67 14 1 12 12 13 83 0 13 13 14 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 11 12 10 12 11 10 104 0 10 0 3 4 10 3 89 2 1 0 0 1 0 1 87 9 1 7 7 8 83 0 8 8 14 67 14 1 12 12 13 83 0 13 13 14 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 11 12 10 12 11 10 104 0 13 14 1 12 11 13 12 91 0 10 0 3 4 10 3 89 2 1 0 0 1 0 1 87 9 1 7 7 8 83 0 8 8 14 67 6 1 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
117 114 110 107 103 100 96 95 95 88 84 81 52 60 52 51 33 132 52 51 44 15 24
CALL[ ]	/* CallFunction */";
};
width = 775;
}
);
note = H;
unicode = 72;
},
{
glyphname = Hbar;
kernLeft = B;
kernRight = H;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(680,715,o),
(684,730,o),
(701,740,o),
(733,745,o),
(761,745,qs),
(767,745,o),
(783,747,o),
(796,753,o),
(806,765,o),
(806,776,qs),
(806,796,o),
(779,807,o),
(747,807,qs),
(558,807,ls),
(537,807,o),
(508,793,o),
(508,775,qs),
(508,742,o),
(548,738,qs),
(565,736,o),
(584,724,o),
(584,712,qs),
(584,634,l),
(537,634,o),
(450,633,o),
(430,633,qs),
(422,633,o),
(382,633,o),
(328,633,o),
(264,634,o),
(234,634,q),
(234,717,ls),
(234,740,o),
(261,757,o),
(298,757,qs),
(306,757,o),
(324,760,o),
(340,768,o),
(350,781,o),
(350,790,qs),
(350,808,o),
(323,821,o),
(291,821,qs),
(92,821,ls),
(79,821,o),
(53,807,o),
(53,788,qs),
(53,752,o),
(92,752,qs),
(118,752,o),
(138,738,o),
(138,721,qs),
(138,635,l),
(114,635,ls),
(97,635,o),
(73,609,o),
(73,594,qs),
(73,580,o),
(100,552,o),
(114,552,qs),
(140,552,l),
(141,514,o),
(142,438,o),
(142,401,qs),
(142,362,o),
(141,290,o),
(139,220,o),
(138,151,o),
(138,114,qs),
(138,85,o),
(115,68,o),
(99,68,qs),
(76,68,o),
(56,44,o),
(56,29,qs),
(56,11,o),
(91,0,o),
(111,0,qs),
(340,0,ls),
(350,0,o),
(368,12,o),
(368,35,qs),
(368,46,o),
(349,63,o),
(330,63,qs),
(234,63,l),
(234,377,l),
(285,378,o),
(387,379,o),
(438,379,qs),
(457,379,o),
(509,378,o),
(532,378,qs),
(559,377,o),
(587,377,q),
(587,62,ls),
(587,33,o),
(568,16,o),
(557,16,qs),
(536,16,o),
(507,-3,o),
(507,-22,qs),
(507,-41,o),
(532,-55,o),
(559,-55,qs),
(794,-55,ls),
(804,-55,o),
(822,-44,o),
(822,-26,qs),
(822,-3,o),
(795,8,o),
(784,8,qs),
(688,8,l),
(688,18,o),
(685,94,o),
(681,204,o),
(678,335,o),
(678,401,qs),
(678,553,l),
(719,553,ls),
(729,553,o),
(745,563,o),
(754,577,o),
(759,592,o),
(759,597,qs),
(759,613,o),
(737,636,o),
(727,636,qs),
(680,636,l),
(680,705,ls)
);
},
{
closed = 1;
nodes = (
(585,463,o),
(554,462,o),
(508,461,o),
(457,461,o),
(438,461,qs),
(387,461,o),
(285,461,o),
(234,462,q),
(234,552,l),
(273,552,o),
(361,552,o),
(452,553,o),
(542,553,o),
(584,553,q),
(584,463,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 19 1 18 1 19 18 104 14 10 2 0 17 9 2 1 19 0 1 91 4 1 2 0 3 2 3 87 16 13 2 11 11 12 83 15 1 12 12 12 67 0 5 5 18 83 0 18 18 23 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 19 1 18 1 19 18 104 14 10 2 0 17 9 2 1 19 0 1 91 4 1 2 0 3 2 3 87 16 13 2 11 11 12 83 0 12 12 12 67 16 13 2 11 11 15 83 0 15 15 14 67 0 5 5 18 83 0 18 18 23 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 19 1 18 1 19 18 104 14 10 2 0 17 9 2 1 19 0 1 91 0 18 0 5 6 18 5 89 4 1 2 0 3 2 3 87 16 13 2 11 11 12 83 0 12 12 12 67 16 13 2 11 11 15 83 0 15 15 14 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 19 1 18 1 19 18 104 0 4 6 2 2 4 96 14 10 2 0 17 9 2 1 19 0 1 91 0 18 0 5 6 18 5 89 0 2 0 3 2 3 88 16 13 2 11 11 12 83 0 12 12 12 67 16 13 2 11 11 15 83 0 15 15 14 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 19 1 18 1 19 18 104 0 4 6 2 2 4 96 14 10 2 0 17 9 2 1 19 0 1 91 0 18 0 5 6 18 5 89 0 2 0 3 2 3 88 13 1 11 11 12 83 0 12 12 12 67 0 16 16 15 83 0 15 15 14 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 87 values pushed */
0 11 13 16 13 11 96 0 19 1 18 1 19 18 104 0 8 5 6 6 8 96 0 4 6 2 2 4 96 14 10 2 0 17 9 2 1 19 0 1 91 0 18 0 5 8 18 5 89 0 2 0 3 2 3 88 0 13 13 12 83 0 12 12 14 67 0 16 16 15 83 0 15 15 14 67 0 6 6 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 85 values pushed */
0 11 13 16 13 11 96 0 19 1 18 1 19 18 104 0 8 5 6 6 8 96 0 4 6 2 2 4 96 0 15 0 16 0 15 16 91 14 10 2 0 17 9 2 1 19 0 1 91 0 18 0 5 8 18 5 89 0 2 0 3 2 3 88 0 13 13 12 83 0 12 12 14 67 0 6 6 7 84 0 7 7 13 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
144 143 143 136 135 130 125 123 117 114 106 98 95 93 87 84 81 79 76 74 70 68 36 52 33 131 36 52 38 38 32 20 24
CALL[ ]	/* CallFunction */";
};
width = 838;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(659,625,o),
(603,624,o),
(538,623,o),
(477,622,o),
(427,622,o),
(413,622,qs),
(404,622,o),
(355,622,o),
(291,623,o),
(219,623,o),
(158,624,o),
(114,624,o),
(109,624,qs),
(95,624,o),
(83,603,o),
(83,592,qs),
(83,581,o),
(98,559,o),
(109,559,qs),
(121,559,o),
(210,559,o),
(333,559,o),
(473,560,o),
(597,560,o),
(689,560,o),
(702,560,qs),
(719,560,o),
(731,587,o),
(731,595,qs),
(731,607,o),
(718,625,o),
(710,625,qs),
(702,625,o)
);
},
{
closed = 1;
nodes = (
(681,752,o),
(709,756,o),
(735,757,o),
(740,757,qs),
(752,757,o),
(782,765,o),
(782,782,qs),
(782,797,o),
(758,807,o),
(726,807,qs),
(534,807,ls),
(525,807,o),
(497,797,o),
(497,782,qs),
(497,768,o),
(523,757,o),
(534,757,qs),
(541,757,o),
(559,756,o),
(574,752,o),
(584,743,o),
(584,734,qs),
(584,454,l),
(585,454,o),
(550,453,o),
(497,452,o),
(439,452,o),
(417,452,qs),
(366,452,o),
(264,452,o),
(213,454,q),
(213,746,ls),
(213,755,o),
(232,766,o),
(256,770,o),
(279,771,o),
(284,771,qs),
(296,771,o),
(326,780,o),
(326,796,qs),
(326,810,o),
(302,821,o),
(270,821,qs),
(78,821,ls),
(69,821,o),
(41,814,o),
(41,796,qs),
(41,781,o),
(67,771,o),
(78,771,qs),
(85,771,o),
(106,770,o),
(125,766,o),
(138,757,o),
(138,748,qs),
(138,666,o),
(142,483,o),
(142,401,qs),
(142,319,o),
(138,171,o),
(138,94,qs),
(138,77,o),
(127,58,o),
(111,49,o),
(92,48,o),
(85,48,qs),
(76,48,o),
(56,41,o),
(56,27,qs),
(56,10,o),
(83,0,o),
(97,0,qs),
(319,0,ls),
(329,0,o),
(344,10,o),
(344,27,qs),
(344,37,o),
(328,51,o),
(309,51,qs),
(213,51,l),
(213,386,l),
(264,387,o),
(366,388,o),
(417,388,qs),
(439,388,o),
(498,387,o),
(524,387,qs),
(555,386,o),
(587,386,q),
(587,39,ls),
(587,22,o),
(578,3,o),
(565,-6,o),
(550,-7,o),
(543,-7,qs),
(534,-7,o),
(514,-17,o),
(514,-32,qs),
(514,-48,o),
(541,-55,o),
(555,-55,qs),
(773,-55,ls),
(783,-55,o),
(798,-46,o),
(798,-32,qs),
(798,-15,o),
(774,-4,o),
(763,-4,qs),
(667,-4,l),
(667,6,o),
(664,85,o),
(660,198,o),
(657,333,o),
(657,401,qs),
(657,428,o),
(658,524,o),
(658,625,o),
(659,713,o),
(659,732,qs),
(659,741,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
0 13 1 12 1 13 12 104 17 1 0 0 1 13 0 1 91 4 1 2 0 3 2 3 87 11 1 9 9 10 83 0 10 10 12 67 16 1 14 14 15 83 0 15 15 14 67 0 5 5 12 83 0 12 12 15 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 13 1 12 1 13 12 104 17 1 0 0 1 13 0 1 91 0 12 0 5 6 12 5 89 4 1 2 0 3 2 3 87 11 1 9 9 10 83 0 10 10 12 67 16 1 14 14 15 83 0 15 15 14 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 13 1 12 1 13 12 104 17 1 0 0 1 13 0 1 91 0 12 0 5 6 12 5 89 4 1 2 0 3 2 3 87 11 1 9 9 10 83 0 10 10 14 67 16 1 14 14 15 83 0 15 15 14 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 13 1 12 1 13 12 104 0 15 16 1 14 0 15 14 91 17 1 0 0 1 13 0 1 91 0 12 0 5 6 12 5 89 4 1 2 0 3 2 3 87 11 1 9 9 10 83 0 10 10 14 67 8 1 6 6 7 83 0 7 7 13 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
1 0 150 147 143 140 136 133 129 128 128 121 117 114 110 107 103 100 88 85 81 78 74 72 71 63 59 56 52 49 45 43 14 5 0 32 1 18 18 15
CALL[ ]	/* CallFunction */";
};
width = 812;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(648,606,o),
(628,605,q),
(628,653,o),
(629,733,o),
(629,752,qs),
(629,761,o),
(651,772,o),
(679,776,o),
(705,777,o),
(710,777,qs),
(722,777,o),
(747,781,o),
(747,792,qs),
(747,800,o),
(728,807,o),
(696,807,qs),
(514,807,ls),
(505,807,o),
(477,803,o),
(477,792,qs),
(477,782,o),
(503,777,o),
(514,777,qs),
(524,777,o),
(549,776,o),
(570,772,o),
(584,763,o),
(584,754,qs),
(584,605,l),
(557,605,o),
(498,604,o),
(445,603,o),
(401,603,o),
(389,603,qs),
(381,603,o),
(337,603,o),
(279,604,o),
(213,604,o),
(183,604,q),
(183,766,ls),
(183,775,o),
(202,786,o),
(226,790,o),
(249,791,o),
(254,791,qs),
(266,791,o),
(291,795,o),
(291,806,qs),
(291,814,o),
(272,821,o),
(240,821,qs),
(58,821,ls),
(49,821,o),
(21,817,o),
(21,806,qs),
(21,796,o),
(47,791,o),
(58,791,qs),
(68,791,o),
(96,790,o),
(121,786,o),
(138,777,o),
(138,768,qs),
(138,729,o),
(138,647,o),
(139,605,q),
(85,605,ls),
(77,605,o),
(69,594,o),
(69,588,qs),
(69,582,o),
(78,570,o),
(85,570,qs),
(140,570,l),
(141,526,o),
(142,441,o),
(142,401,qs),
(142,313,o),
(138,156,o),
(138,74,qs),
(138,57,o),
(123,38,o),
(100,29,o),
(75,28,o),
(65,28,qs),
(56,28,o),
(36,22,o),
(36,13,qs),
(36,5,o),
(63,0,o),
(77,0,qs),
(289,0,ls),
(309,0,o),
(309,13,qs),
(309,21,o),
(298,31,o),
(279,31,qs),
(183,31,l),
(183,401,l),
(234,402,o),
(336,403,o),
(387,403,qs),
(413,403,o),
(480,402,o),
(512,402,qs),
(548,401,o),
(587,401,q),
(587,19,ls),
(587,2,o),
(575,-17,o),
(556,-26,o),
(533,-27,o),
(523,-27,qs),
(514,-27,o),
(494,-33,o),
(494,-42,qs),
(494,-50,o),
(521,-55,o),
(535,-55,qs),
(743,-55,ls),
(763,-55,o),
(763,-42,qs),
(763,-34,o),
(744,-24,o),
(733,-24,qs),
(637,-24,l),
(637,-13,o),
(634,69,o),
(630,188,o),
(627,330,o),
(627,401,qs),
(627,571,l),
(678,571,ls),
(689,571,o),
(697,586,o),
(697,591,qs),
(697,597,o),
(690,606,o),
(686,606,qs),
(679,606,o)
);
},
{
closed = 1;
nodes = (
(234,437,o),
(183,439,q),
(183,570,l),
(226,570,o),
(331,570,o),
(438,571,o),
(541,571,o),
(584,571,q),
(584,439,l),
(585,439,o),
(543,438,o),
(481,437,o),
(412,437,o),
(387,437,qs),
(336,437,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 19 1 18 1 19 18 104 14 10 21 3 0 20 9 2 1 19 0 1 91 4 1 2 0 3 2 3 87 13 1 11 11 12 83 0 12 12 12 67 17 1 15 15 16 83 0 16 16 14 67 0 5 5 18 83 22 1 18 18 15 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 19 1 18 1 19 18 104 14 10 21 3 0 20 9 2 1 19 0 1 91 22 1 18 0 5 6 18 5 89 4 1 2 0 3 2 3 87 13 1 11 11 12 83 0 12 12 12 67 17 1 15 15 16 83 0 16 16 14 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 19 1 18 1 19 18 104 14 10 21 3 0 20 9 2 1 19 0 1 91 22 1 18 0 5 6 18 5 89 4 1 2 0 3 2 3 87 13 1 11 11 12 83 0 12 12 14 67 17 1 15 15 16 83 0 16 16 14 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 70 values pushed */
0 19 1 18 1 19 18 104 0 16 17 1 15 0 16 15 91 14 10 21 3 0 20 9 2 1 19 0 1 91 22 1 18 0 5 6 18 5 89 4 1 2 0 3 2 3 87 13 1 11 11 12 83 0 12 12 14 67 8 1 6 6 7 83 0 7 7 13 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 52 values pushed */
144 140 1 0 151 146 145 144 140 154 144 152 131 128 124 121 117 114 110 100 96 93 89 86 82 79 73 71 67 65 56 53 49 46 43 41 40 32 28 25 21 18 15 13 7 5 0 139 1 137 23 15
CALL[ ]	/* CallFunction */";
};
width = 775;
}
);
note = Hbar;
unicode = 294;
},
{
glyphname = Hcircumflex;
kernLeft = B;
kernRight = H;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(564,843,o),
(564,850,qs),
(564,866,o),
(529,908,o),
(483,946,o),
(440,972,o),
(431,972,qs),
(424,972,o),
(381,947,o),
(334,908,o),
(298,863,o),
(298,844,qs),
(298,830,o),
(312,830,qs),
(317,830,o),
(343,837,o),
(376,851,o),
(414,869,o),
(431,880,q),
(448,869,o),
(486,851,o),
(520,837,o),
(546,830,o),
(551,830,qs),
(559,830,o)
);
},
{
closed = 1;
nodes = (
(681,730,o),
(698,740,o),
(730,745,o),
(758,745,qs),
(764,745,o),
(780,747,o),
(793,753,o),
(803,765,o),
(803,776,qs),
(803,796,o),
(776,807,o),
(744,807,qs),
(555,807,ls),
(534,807,o),
(505,793,o),
(505,775,qs),
(505,742,o),
(545,738,qs),
(562,736,o),
(581,724,o),
(581,712,qs),
(581,463,l),
(582,463,o),
(551,462,o),
(505,461,o),
(454,461,o),
(435,461,qs),
(384,461,o),
(282,461,o),
(231,462,q),
(231,717,ls),
(231,740,o),
(258,757,o),
(295,757,qs),
(303,757,o),
(321,760,o),
(337,768,o),
(347,781,o),
(347,790,qs),
(347,808,o),
(320,821,o),
(288,821,qs),
(89,821,ls),
(76,821,o),
(50,807,o),
(50,788,qs),
(50,752,o),
(89,752,qs),
(115,752,o),
(135,738,o),
(135,721,qs),
(135,642,o),
(139,480,o),
(139,401,qs),
(139,362,o),
(138,290,o),
(136,220,o),
(135,151,o),
(135,114,qs),
(135,85,o),
(112,68,o),
(96,68,qs),
(73,68,o),
(53,44,o),
(53,29,qs),
(53,11,o),
(88,0,o),
(108,0,qs),
(337,0,ls),
(347,0,o),
(365,12,o),
(365,35,qs),
(365,46,o),
(346,63,o),
(327,63,qs),
(231,63,l),
(231,377,l),
(282,378,o),
(384,379,o),
(435,379,qs),
(454,379,o),
(506,378,o),
(529,378,qs),
(556,377,o),
(584,377,q),
(584,62,ls),
(584,33,o),
(565,16,o),
(554,16,qs),
(533,16,o),
(504,-3,o),
(504,-22,qs),
(504,-41,o),
(529,-55,o),
(556,-55,qs),
(791,-55,ls),
(801,-55,o),
(819,-44,o),
(819,-26,qs),
(819,-3,o),
(792,8,o),
(781,8,qs),
(685,8,l),
(685,18,o),
(682,94,o),
(678,204,o),
(675,335,o),
(675,401,qs),
(675,427,o),
(676,515,o),
(676,607,o),
(677,687,o),
(677,705,qs),
(677,715,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 2 0 2 106 1 17 2 0 11 0 106 0 14 10 13 10 14 13 104 5 1 3 0 4 3 4 87 16 12 2 10 10 11 83 15 1 11 11 12 67 0 6 6 13 83 0 13 13 23 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 2 0 2 106 1 17 2 0 11 0 106 0 14 10 13 10 14 13 104 5 1 3 0 4 3 4 87 16 12 2 10 10 11 83 0 11 11 12 67 16 12 2 10 10 15 83 0 15 15 14 67 0 6 6 13 83 0 13 13 23 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 2 0 2 106 1 17 2 0 11 0 106 0 14 10 13 10 14 13 104 0 13 0 6 7 13 6 90 5 1 3 0 4 3 4 87 16 12 2 10 10 11 83 0 11 11 12 67 16 12 2 10 10 15 83 0 15 15 14 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 2 0 2 106 1 17 2 0 11 0 106 0 14 10 13 10 14 13 104 0 5 7 3 3 5 96 0 13 0 6 7 13 6 90 0 3 0 4 3 4 88 16 12 2 10 10 11 83 0 11 11 12 67 16 12 2 10 10 15 83 0 15 15 14 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 2 0 2 106 1 17 2 0 11 0 106 0 14 16 13 16 14 13 104 0 5 7 3 3 5 96 0 13 0 6 7 13 6 90 0 3 0 4 3 4 88 12 1 10 10 11 83 0 11 11 12 67 0 16 16 15 83 0 15 15 14 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 87 values pushed */
0 2 0 2 106 1 17 2 0 11 0 106 0 10 12 16 12 10 96 0 14 16 13 16 14 13 104 0 9 6 7 7 9 96 0 5 7 3 3 5 96 0 13 0 6 9 13 6 90 0 3 0 4 3 4 88 0 12 12 11 83 0 11 11 14 67 0 16 16 15 83 0 15 15 14 67 0 7 7 8 84 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 85 values pushed */
0 2 0 2 106 1 17 2 0 11 0 106 0 10 12 16 12 10 96 0 14 16 13 16 14 13 104 0 9 6 7 7 9 96 0 5 7 3 3 5 96 0 15 0 16 14 15 16 91 0 13 0 6 9 13 6 90 0 3 0 4 3 4 88 0 12 12 11 83 0 11 11 14 67 0 7 7 8 84 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
1 0 135 133 127 124 116 115 115 108 105 103 97 94 91 89 77 75 71 68 64 62 61 53 50 48 44 41 37 35 18 16 11 9 0 24 1 24 18 15
CALL[ ]	/* CallFunction */";
};
width = 829;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(544,857,o),
(544,864,qs),
(544,877,o),
(510,915,o),
(465,948,o),
(422,972,o),
(413,972,qs),
(405,972,o),
(363,949,o),
(318,915,o),
(283,876,o),
(283,860,qs),
(283,847,o),
(294,847,qs),
(299,847,o),
(325,855,o),
(358,869,o),
(396,888,o),
(413,898,q),
(430,888,o),
(468,869,o),
(502,855,o),
(528,847,o),
(533,847,qs),
(539,847,o)
);
},
{
closed = 1;
nodes = (
(679,752,o),
(707,756,o),
(733,757,o),
(738,757,qs),
(750,757,o),
(780,765,o),
(780,782,qs),
(780,797,o),
(756,807,o),
(724,807,qs),
(532,807,ls),
(523,807,o),
(495,797,o),
(495,782,qs),
(495,768,o),
(521,757,o),
(532,757,qs),
(539,757,o),
(557,756,o),
(572,752,o),
(582,743,o),
(582,734,qs),
(582,454,l),
(583,454,o),
(548,453,o),
(495,452,o),
(437,452,o),
(415,452,qs),
(364,452,o),
(262,452,o),
(211,454,q),
(211,746,ls),
(211,755,o),
(230,766,o),
(254,770,o),
(277,771,o),
(282,771,qs),
(294,771,o),
(324,780,o),
(324,796,qs),
(324,810,o),
(300,821,o),
(268,821,qs),
(76,821,ls),
(67,821,o),
(39,814,o),
(39,796,qs),
(39,781,o),
(65,771,o),
(76,771,qs),
(83,771,o),
(104,770,o),
(123,766,o),
(136,757,o),
(136,748,qs),
(136,666,o),
(140,483,o),
(140,401,qs),
(140,319,o),
(136,171,o),
(136,94,qs),
(136,77,o),
(125,58,o),
(109,49,o),
(90,48,o),
(83,48,qs),
(74,48,o),
(54,41,o),
(54,27,qs),
(54,10,o),
(81,0,o),
(95,0,qs),
(317,0,ls),
(327,0,o),
(342,10,o),
(342,27,qs),
(342,37,o),
(326,51,o),
(307,51,qs),
(211,51,l),
(211,386,l),
(262,387,o),
(364,388,o),
(415,388,qs),
(437,388,o),
(496,387,o),
(522,387,qs),
(553,386,o),
(585,386,q),
(585,39,ls),
(585,22,o),
(576,3,o),
(563,-6,o),
(548,-7,o),
(541,-7,qs),
(532,-7,o),
(512,-17,o),
(512,-32,qs),
(512,-48,o),
(539,-55,o),
(553,-55,qs),
(771,-55,ls),
(781,-55,o),
(796,-46,o),
(796,-32,qs),
(796,-15,o),
(772,-4,o),
(761,-4,qs),
(665,-4,l),
(665,6,o),
(662,85,o),
(658,198,o),
(655,333,o),
(655,401,qs),
(655,428,o),
(656,524,o),
(656,625,o),
(657,713,o),
(657,732,qs),
(657,741,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 2 0 2 106 1 18 2 0 11 0 106 0 14 15 13 15 14 13 104 5 1 3 0 4 3 4 87 12 1 10 10 11 83 0 11 11 12 67 17 1 15 15 16 83 0 16 16 14 67 0 6 6 13 83 0 13 13 15 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 2 0 2 106 1 18 2 0 11 0 106 0 14 15 13 15 14 13 104 0 13 0 6 7 13 6 90 5 1 3 0 4 3 4 87 12 1 10 10 11 83 0 11 11 12 67 17 1 15 15 16 83 0 16 16 14 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 2 0 2 106 1 18 2 0 11 0 106 0 14 15 13 15 14 13 104 0 13 0 6 7 13 6 90 5 1 3 0 4 3 4 87 12 1 10 10 11 83 0 11 11 14 67 17 1 15 15 16 83 0 16 16 14 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 68 values pushed */
0 2 0 2 106 1 18 2 0 11 0 106 0 14 15 13 15 14 13 104 0 16 17 1 15 14 16 15 91 0 13 0 6 7 13 6 90 5 1 3 0 4 3 4 87 12 1 10 10 11 83 0 11 11 14 67 9 1 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
1 0 142 139 135 132 128 125 121 120 120 113 109 106 102 99 95 92 80 77 73 70 66 64 63 55 51 48 44 41 37 35 18 16 11 9 0 24 1 24 19 15
CALL[ ]	/* CallFunction */";
};
width = 807;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(516,887,qs),
(516,896,o),
(483,925,o),
(440,952,o),
(397,972,o),
(388,972,qs),
(379,972,o),
(338,952,o),
(294,925,o),
(261,896,o),
(261,887,qs),
(261,876,o),
(269,876,qs),
(274,876,o),
(300,886,o),
(333,901,o),
(371,919,o),
(388,928,q),
(405,919,o),
(443,901,o),
(477,886,o),
(503,876,o),
(508,876,qs),
(516,876,o)
);
},
{
closed = 1;
nodes = (
(651,772,o),
(679,776,o),
(705,777,o),
(710,777,qs),
(722,777,o),
(747,781,o),
(747,792,qs),
(747,800,o),
(728,807,o),
(696,807,qs),
(514,807,ls),
(505,807,o),
(477,803,o),
(477,792,qs),
(477,782,o),
(503,777,o),
(514,777,qs),
(524,777,o),
(549,776,o),
(570,772,o),
(584,763,o),
(584,754,qs),
(584,439,l),
(585,439,o),
(543,438,o),
(481,437,o),
(412,437,o),
(387,437,qs),
(336,437,o),
(234,437,o),
(183,439,q),
(183,766,ls),
(183,775,o),
(202,786,o),
(226,790,o),
(249,791,o),
(254,791,qs),
(266,791,o),
(291,795,o),
(291,806,qs),
(291,814,o),
(272,821,o),
(240,821,qs),
(58,821,ls),
(49,821,o),
(21,817,o),
(21,806,qs),
(21,796,o),
(47,791,o),
(58,791,qs),
(68,791,o),
(96,790,o),
(121,786,o),
(138,777,o),
(138,768,qs),
(138,680,o),
(142,489,o),
(142,401,qs),
(142,313,o),
(138,156,o),
(138,74,qs),
(138,57,o),
(123,38,o),
(100,29,o),
(75,28,o),
(65,28,qs),
(56,28,o),
(36,22,o),
(36,13,qs),
(36,5,o),
(63,0,o),
(77,0,qs),
(289,0,ls),
(309,0,o),
(309,13,qs),
(309,21,o),
(298,31,o),
(279,31,qs),
(183,31,l),
(183,401,l),
(234,402,o),
(336,403,o),
(387,403,qs),
(413,403,o),
(480,402,o),
(512,402,qs),
(548,401,o),
(587,401,q),
(587,19,ls),
(587,2,o),
(575,-17,o),
(556,-26,o),
(533,-27,o),
(523,-27,qs),
(514,-27,o),
(494,-33,o),
(494,-42,qs),
(494,-50,o),
(521,-55,o),
(535,-55,qs),
(743,-55,ls),
(763,-55,o),
(763,-42,qs),
(763,-34,o),
(744,-24,o),
(733,-24,qs),
(637,-24,l),
(637,-13,o),
(634,69,o),
(630,188,o),
(627,330,o),
(627,401,qs),
(627,420,o),
(627,479,o),
(628,548,o),
(628,621,o),
(629,687,o),
(629,739,o),
(629,752,qs),
(629,761,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 2 0 2 106 1 18 2 0 11 0 106 0 14 15 13 15 14 13 104 5 1 3 0 4 3 4 87 12 1 10 10 11 83 0 11 11 12 67 17 1 15 15 16 83 0 16 16 14 67 0 6 6 13 83 0 13 13 15 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 2 0 2 106 1 18 2 0 11 0 106 0 14 15 13 15 14 13 104 0 13 0 6 7 13 6 90 5 1 3 0 4 3 4 87 12 1 10 10 11 83 0 11 11 12 67 17 1 15 15 16 83 0 16 16 14 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 2 0 2 106 1 18 2 0 11 0 106 0 14 15 13 15 14 13 104 0 13 0 6 7 13 6 90 5 1 3 0 4 3 4 87 12 1 10 10 11 83 0 11 11 14 67 17 1 15 15 16 83 0 16 16 14 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 68 values pushed */
0 2 0 2 106 1 18 2 0 11 0 106 0 14 15 13 15 14 13 104 0 16 17 1 15 14 16 15 91 0 13 0 6 7 13 6 90 5 1 3 0 4 3 4 87 12 1 10 10 11 83 0 11 11 14 67 9 1 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
1 0 141 138 134 131 127 124 120 119 119 112 108 105 101 98 94 91 79 76 72 69 66 64 63 55 51 48 44 41 38 36 18 16 11 9 0 23 1 23 19 15
CALL[ ]	/* CallFunction */";
};
width = 775;
}
);
note = Hcircumflex;
unicode = 292;
},
{
glyphname = I;
kernLeft = B;
kernRight = I;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(236,738,o),
(268,750,o),
(289,753,qs),
(317,757,o),
(335,775,o),
(335,790,qs),
(335,806,o),
(316,821,o),
(284,821,qs),
(78,821,ls),
(61,821,o),
(31,810,o),
(31,789,qs),
(31,769,o),
(52,754,o),
(78,752,qs),
(115,750,o),
(140,734,o),
(140,717,qs),
(140,637,o),
(144,481,o),
(144,401,qs),
(144,322,o),
(140,187,o),
(140,113,qs),
(140,85,o),
(111,67,o),
(75,64,qs),
(63,63,o),
(43,46,o),
(43,29,qs),
(43,10,o),
(61,0,o),
(77,0,qs),
(305,0,ls),
(353,0,o),
(353,29,qs),
(353,46,o),
(338,65,o),
(319,65,qs),
(234,65,l),
(236,719,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 2 2 3 83 0 3 3 12 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 2 2 3 83 0 3 3 14 67 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
33 30 25 24 51 32 4 17
CALL[ ]	/* CallFunction */";
};
width = 374;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(214,755,o),
(232,766,o),
(255,770,o),
(276,771,o),
(280,771,qs),
(292,771,o),
(317,782,o),
(317,796,qs),
(317,809,o),
(298,821,o),
(266,821,qs),
(64,821,ls),
(55,821,o),
(27,813,o),
(27,796,qs),
(27,788,o),
(35,778,o),
(46,773,o),
(59,771,o),
(64,771,qs),
(73,771,o),
(98,770,o),
(122,766,o),
(139,757,o),
(139,748,qs),
(139,665,o),
(143,484,o),
(143,401,qs),
(143,319,o),
(139,171,o),
(139,94,qs),
(139,77,o),
(124,58,o),
(102,49,o),
(79,48,o),
(71,48,qs),
(62,48,o),
(42,37,o),
(42,23,qs),
(42,8,o),
(68,0,o),
(83,0,qs),
(315,0,ls),
(328,0,o),
(335,17,o),
(335,23,qs),
(335,37,o),
(316,51,o),
(305,51,qs),
(214,51,l),
(214,746,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
5 1 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
5 1 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
52 54 60 52 52 32 6 21
CALL[ ]	/* CallFunction */";
};
width = 354;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(183,775,o),
(202,786,o),
(226,790,o),
(249,791,o),
(254,791,qs),
(266,791,o),
(291,795,o),
(291,806,qs),
(291,814,o),
(272,821,o),
(240,821,qs),
(58,821,ls),
(49,821,o),
(21,817,o),
(21,806,qs),
(21,796,o),
(47,791,o),
(58,791,qs),
(68,791,o),
(96,790,o),
(121,786,o),
(138,777,o),
(138,768,qs),
(138,680,o),
(142,489,o),
(142,401,qs),
(142,313,o),
(138,156,o),
(138,74,qs),
(138,57,o),
(123,38,o),
(100,29,o),
(75,28,o),
(65,28,qs),
(56,28,o),
(36,22,o),
(36,13,qs),
(36,5,o),
(63,0,o),
(77,0,qs),
(289,0,ls),
(309,0,o),
(309,13,qs),
(309,21,o),
(290,31,o),
(279,31,qs),
(183,31,l),
(183,766,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
5 1 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
5 1 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
52 52 60 52 51 32 6 21
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
note = I;
unicode = 73;
},
{
glyphname = IJ;
kernLeft = B;
kernRight = IJ;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(236,738,o),
(268,750,o),
(289,753,qs),
(317,757,o),
(335,775,o),
(335,790,qs),
(335,806,o),
(316,821,o),
(284,821,qs),
(78,821,ls),
(61,821,o),
(31,810,o),
(31,789,qs),
(31,769,o),
(52,754,o),
(78,752,qs),
(115,750,o),
(140,734,o),
(140,717,qs),
(140,637,o),
(144,481,o),
(144,401,qs),
(144,322,o),
(140,187,o),
(140,113,qs),
(140,85,o),
(111,67,o),
(75,64,qs),
(63,63,o),
(43,46,o),
(43,29,qs),
(43,10,o),
(61,0,o),
(77,0,qs),
(305,0,ls),
(353,0,o),
(353,29,qs),
(353,46,o),
(338,65,o),
(319,65,qs),
(234,65,l),
(236,719,ls)
);
},
{
closed = 1;
nodes = (
(455,177,o),
(460,181,q),
(475,168,o),
(495,168,qs),
(516,168,o),
(544,197,o),
(544,222,qs),
(544,238,o),
(532,260,o),
(512,274,o),
(489,280,o),
(479,280,qs),
(458,280,o),
(421,261,o),
(393,225,o),
(376,175,o),
(376,145,qs),
(376,73,o),
(472,-14,o),
(566,-14,qs),
(682,-14,o),
(810,132,o),
(810,279,qs),
(810,723,ls),
(810,737,o),
(837,752,o),
(871,752,qs),
(889,752,o),
(914,769,o),
(914,786,qs),
(914,802,o),
(894,821,o),
(862,821,qs),
(625,821,ls),
(608,821,o),
(588,806,o),
(588,787,qs),
(588,753,o),
(635,753,qs),
(645,753,o),
(673,752,o),
(697,748,o),
(714,739,o),
(714,730,qs),
(714,718,o),
(715,647,o),
(716,548,o),
(717,431,o),
(717,371,qs),
(717,311,o),
(711,197,o),
(681,108,o),
(616,53,o),
(557,53,qs),
(503,53,o),
(446,99,o),
(446,135,qs),
(446,150,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
97 1 10 9 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 9 0 10 0 9 10 91 7 5 2 2 2 3 83 6 1 3 3 12 67 4 1 0 0 1 83 8 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 9 0 10 0 9 10 91 7 5 2 2 2 3 83 6 1 3 3 12 67 4 1 0 0 1 83 0 1 1 13 67 4 1 0 0 8 83 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 9 0 10 0 9 10 91 7 5 2 2 2 3 83 6 1 3 3 12 67 0 0 0 1 83 0 1 1 13 67 0 4 4 8 83 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 9 0 10 0 9 10 91 7 5 2 2 2 3 83 6 1 3 3 14 67 0 0 0 1 83 0 1 1 13 67 0 4 4 8 83 0 8 8 21 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
96 94 88 86 80 78 73 71 67 64 61 58 46 44 33 30 25 24 51 32 11 17
CALL[ ]	/* CallFunction */";
};
width = 919;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (27,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (354,0);
ref = J;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
112 1 12 11 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 11 0 12 0 11 12 91 9 7 5 3 3 3 4 83 8 1 4 4 12 67 6 2 2 0 0 1 83 0 1 1 13 67 6 2 2 0 0 10 83 0 10 10 21 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 11 0 12 0 11 12 91 9 7 5 3 3 3 4 83 8 1 4 4 14 67 6 2 2 0 0 1 83 0 1 1 13 67 6 2 2 0 0 10 83 0 10 10 21 10 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
111 109 103 101 95 93 87 84 52 60 40 52 54 60 52 52 33 13 35
CALL[ ]	/* CallFunction */";
};
width = 877;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
alignment = -1;
pos = (21,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (315,0);
ref = J;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
112 1 12 11 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 11 0 12 0 11 12 91 9 7 5 3 3 3 4 83 8 1 4 4 12 67 2 1 0 0 1 83 0 1 1 13 67 0 6 6 10 83 0 10 10 21 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 11 0 12 0 11 12 91 9 7 5 3 3 3 4 83 8 1 4 4 14 67 2 1 0 0 1 83 0 1 1 13 67 0 6 6 10 83 0 10 10 21 10 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
110 108 104 102 94 92 86 83 52 62 40 52 52 60 52 51 33 13 35
CALL[ ]	/* CallFunction */";
};
width = 817;
}
);
note = IJ;
unicode = 306;
},
{
glyphname = Iacute;
kernLeft = B;
kernRight = I;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(239,972,o),
(219,972,qs),
(205,972,o),
(166,949,o),
(130,916,o),
(105,882,o),
(105,872,qs),
(105,860,o),
(125,841,o),
(140,841,qs),
(153,841,o),
(193,860,o),
(232,888,o),
(260,921,o),
(260,936,qs),
(260,949,o)
);
},
{
closed = 1;
nodes = (
(236,738,o),
(268,750,o),
(289,753,qs),
(317,757,o),
(335,775,o),
(335,790,qs),
(335,806,o),
(316,821,o),
(284,821,qs),
(78,821,ls),
(61,821,o),
(31,810,o),
(31,789,qs),
(31,769,o),
(52,754,o),
(78,752,qs),
(115,750,o),
(140,734,o),
(140,717,qs),
(140,637,o),
(144,481,o),
(144,401,qs),
(144,322,o),
(140,187,o),
(140,113,qs),
(140,85,o),
(111,67,o),
(75,64,qs),
(63,63,o),
(43,46,o),
(43,29,qs),
(43,10,o),
(61,0,o),
(77,0,qs),
(305,0,ls),
(353,0,o),
(353,29,qs),
(353,46,o),
(338,65,o),
(319,65,qs),
(234,65,l),
(236,719,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 1 0 1 106 0 0 5 0 106 0 4 4 5 83 0 5 5 12 67 0 2 2 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 1 0 1 106 0 0 5 0 106 0 4 4 5 83 0 5 5 14 67 0 2 2 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
49 46 41 40 51 34 38 36 6 19
CALL[ ]	/* CallFunction */";
};
width = 374;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(223,972,o),
(208,972,qs),
(197,972,o),
(161,950,o),
(127,919,o),
(102,887,o),
(102,877,qs),
(102,867,o),
(115,854,o),
(126,854,qs),
(136,854,o),
(175,872,o),
(212,899,o),
(240,929,o),
(240,941,qs),
(240,955,o)
);
},
{
closed = 1;
nodes = (
(214,755,o),
(232,766,o),
(255,770,o),
(276,771,o),
(280,771,qs),
(292,771,o),
(317,782,o),
(317,796,qs),
(317,809,o),
(298,821,o),
(266,821,qs),
(64,821,ls),
(55,821,o),
(27,813,o),
(27,796,qs),
(27,788,o),
(35,778,o),
(46,773,o),
(59,771,o),
(64,771,qs),
(73,771,o),
(98,770,o),
(122,766,o),
(139,757,o),
(139,748,qs),
(139,665,o),
(143,484,o),
(143,401,qs),
(143,319,o),
(139,171,o),
(139,94,qs),
(139,77,o),
(124,58,o),
(102,49,o),
(79,48,o),
(71,48,qs),
(62,48,o),
(42,37,o),
(42,23,qs),
(42,8,o),
(68,0,o),
(83,0,qs),
(315,0,ls),
(328,0,o),
(335,17,o),
(335,23,qs),
(335,37,o),
(316,51,o),
(305,51,qs),
(214,51,l),
(214,746,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 1 0 1 106 0 0 6 0 106 7 1 5 5 6 83 0 6 6 12 67 4 1 2 2 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 0 1 106 0 0 6 0 106 7 1 5 5 6 83 0 6 6 14 67 4 1 2 2 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
52 54 60 52 52 34 38 36 8 23
CALL[ ]	/* CallFunction */";
};
width = 354;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(201,972,o),
(193,972,qs),
(186,972,o),
(154,952,o),
(122,925,o),
(98,895,o),
(98,886,qs),
(98,875,o),
(106,875,qs),
(113,875,o),
(148,893,o),
(184,917,o),
(212,942,o),
(212,950,qs),
(212,964,o)
);
},
{
closed = 1;
nodes = (
(183,775,o),
(202,786,o),
(226,790,o),
(249,791,o),
(254,791,qs),
(266,791,o),
(291,795,o),
(291,806,qs),
(291,814,o),
(272,821,o),
(240,821,qs),
(58,821,ls),
(49,821,o),
(21,817,o),
(21,806,qs),
(21,796,o),
(47,791,o),
(58,791,qs),
(68,791,o),
(96,790,o),
(121,786,o),
(138,777,o),
(138,768,qs),
(138,680,o),
(142,489,o),
(142,401,qs),
(142,313,o),
(138,156,o),
(138,74,qs),
(138,57,o),
(123,38,o),
(100,29,o),
(75,28,o),
(65,28,qs),
(56,28,o),
(36,22,o),
(36,13,qs),
(36,5,o),
(63,0,o),
(77,0,qs),
(289,0,ls),
(309,0,o),
(309,13,qs),
(309,21,o),
(290,31,o),
(279,31,qs),
(183,31,l),
(183,766,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 1 0 1 106 0 0 6 0 106 7 1 5 5 6 83 0 6 6 12 67 4 1 2 2 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 0 1 106 0 0 6 0 106 7 1 5 5 6 83 0 6 6 14 67 4 1 2 2 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
52 52 60 52 51 34 37 36 8 23
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
note = Iacute;
unicode = 205;
},
{
glyphname = Ibreve;
kernLeft = B;
kernRight = I;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(236,738,o),
(268,750,o),
(289,753,qs),
(317,757,o),
(335,775,o),
(335,790,qs),
(335,806,o),
(316,821,o),
(284,821,qs),
(78,821,ls),
(61,821,o),
(31,810,o),
(31,789,qs),
(31,769,o),
(52,754,o),
(78,752,qs),
(115,750,o),
(140,734,o),
(140,717,qs),
(140,637,o),
(144,481,o),
(144,401,qs),
(144,322,o),
(140,187,o),
(140,113,qs),
(140,85,o),
(111,67,o),
(75,64,qs),
(63,63,o),
(43,46,o),
(43,29,qs),
(43,10,o),
(61,0,o),
(77,0,qs),
(305,0,ls),
(353,0,o),
(353,29,qs),
(353,46,o),
(338,65,o),
(319,65,qs),
(234,65,l),
(236,719,ls)
);
},
{
closed = 1;
nodes = (
(287,971,o),
(272,971,qs),
(259,971,o),
(240,953,o),
(240,942,qs),
(240,934,o),
(213,919,o),
(184,919,qs),
(175,919,o),
(154,921,o),
(136,927,o),
(125,936,o),
(125,942,qs),
(125,959,o),
(106,971,o),
(89,971,qs),
(72,971,o),
(57,954,o),
(57,941,qs),
(57,909,o),
(124,862,o),
(189,862,qs),
(208,862,o),
(251,872,o),
(287,892,o),
(310,921,o),
(310,941,qs),
(310,961,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
7 1 5 6 5 106 0 6 0 4 3 6 4 91 0 2 2 3 83 0 3 3 12 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
7 1 5 6 5 106 0 6 0 4 3 6 4 91 0 2 2 3 83 0 3 3 14 67 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
68 66 62 60 54 52 48 46 33 30 25 24 51 32 8 17
CALL[ ]	/* CallFunction */";
};
width = 374;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (27,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (60,355);
ref = breve;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
9 1 7 8 7 106 0 8 0 6 4 8 6 91 5 1 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
9 1 7 8 7 106 0 8 0 6 4 8 6 91 5 1 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
77 75 38 35 40 52 54 60 52 52 33 10 35
CALL[ ]	/* CallFunction */";
};
width = 354;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(258,972,o),
(250,972,qs),
(233,972,o),
(233,949,qs),
(233,939,o),
(220,921,o),
(198,908,o),
(171,900,o),
(158,900,qs),
(144,900,o),
(117,904,o),
(96,914,o),
(84,934,o),
(84,949,qs),
(84,961,o),
(78,972,o),
(67,972,qs),
(50,972,o),
(50,948,qs),
(50,918,o),
(113,875,o),
(158,875,qs),
(177,875,o),
(217,884,o),
(249,902,o),
(269,930,o),
(269,948,qs),
(269,964,o)
);
},
{
closed = 1;
nodes = (
(183,775,o),
(202,786,o),
(226,790,o),
(249,791,o),
(254,791,qs),
(266,791,o),
(291,795,o),
(291,806,qs),
(291,814,o),
(272,821,o),
(240,821,qs),
(58,821,ls),
(49,821,o),
(21,817,o),
(21,806,qs),
(21,796,o),
(47,791,o),
(58,791,qs),
(68,791,o),
(96,790,o),
(121,786,o),
(138,777,o),
(138,768,qs),
(138,680,o),
(142,489,o),
(142,401,qs),
(142,313,o),
(138,156,o),
(138,74,qs),
(138,57,o),
(123,38,o),
(100,29,o),
(75,28,o),
(65,28,qs),
(56,28,o),
(36,22,o),
(36,13,qs),
(36,5,o),
(63,0,o),
(77,0,qs),
(289,0,ls),
(309,0,o),
(309,13,qs),
(309,21,o),
(290,31,o),
(279,31,qs),
(183,31,l),
(183,766,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
3 1 1 2 1 106 0 2 0 0 8 2 0 91 9 1 7 7 8 83 0 8 8 12 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
3 1 1 2 1 106 0 2 0 0 8 2 0 91 9 1 7 7 8 83 0 8 8 14 67 6 1 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
72 69 52 60 52 51 34 37 38 35 36 10 24
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
note = Ibreve;
unicode = 300;
},
{
glyphname = Icircumflex;
kernLeft = B;
kernRight = I;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(315,844,o),
(315,851,qs),
(315,867,o),
(280,908,o),
(235,946,o),
(191,972,o),
(182,972,qs),
(175,972,o),
(132,947,o),
(86,909,o),
(50,864,o),
(50,844,qs),
(50,839,o),
(57,830,o),
(63,830,qs),
(69,830,o),
(94,837,o),
(127,851,o),
(165,869,o),
(182,880,q),
(199,869,o),
(237,851,o),
(271,837,o),
(297,830,o),
(302,830,qs),
(310,830,o)
);
},
{
closed = 1;
nodes = (
(236,738,o),
(268,750,o),
(289,753,qs),
(317,757,o),
(335,775,o),
(335,790,qs),
(335,806,o),
(316,821,o),
(284,821,qs),
(78,821,ls),
(61,821,o),
(31,810,o),
(31,789,qs),
(31,769,o),
(52,754,o),
(78,752,qs),
(115,750,o),
(140,734,o),
(140,717,qs),
(140,637,o),
(144,481,o),
(144,401,qs),
(144,322,o),
(140,187,o),
(140,113,qs),
(140,85,o),
(111,67,o),
(75,64,qs),
(63,63,o),
(43,46,o),
(43,29,qs),
(43,10,o),
(61,0,o),
(77,0,qs),
(305,0,ls),
(353,0,o),
(353,29,qs),
(353,46,o),
(338,65,o),
(319,65,qs),
(234,65,l),
(236,719,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 2 106 1 7 2 0 6 0 106 0 5 5 6 83 0 6 6 12 67 0 3 3 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 2 106 1 7 2 0 6 0 106 0 5 5 6 83 0 6 6 14 67 0 3 3 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
1 0 59 56 51 50 34 31 28 26 19 17 11 9 0 25 1 25 8 15
CALL[ ]	/* CallFunction */";
};
width = 374;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(302,857,o),
(302,864,qs),
(302,877,o),
(268,915,o),
(223,948,o),
(180,972,o),
(171,972,qs),
(163,972,o),
(121,949,o),
(76,915,o),
(41,876,o),
(41,860,qs),
(41,847,o),
(52,847,qs),
(57,847,o),
(83,855,o),
(116,869,o),
(154,888,o),
(171,898,q),
(188,888,o),
(226,869,o),
(260,855,o),
(286,847,o),
(291,847,qs),
(297,847,o)
);
},
{
closed = 1;
nodes = (
(214,755,o),
(232,766,o),
(255,770,o),
(276,771,o),
(280,771,qs),
(292,771,o),
(317,782,o),
(317,796,qs),
(317,809,o),
(298,821,o),
(266,821,qs),
(64,821,ls),
(55,821,o),
(27,813,o),
(27,796,qs),
(27,788,o),
(35,778,o),
(46,773,o),
(59,771,o),
(64,771,qs),
(73,771,o),
(98,770,o),
(122,766,o),
(139,757,o),
(139,748,qs),
(139,665,o),
(143,484,o),
(143,401,qs),
(143,319,o),
(139,171,o),
(139,94,qs),
(139,77,o),
(124,58,o),
(102,49,o),
(79,48,o),
(71,48,qs),
(62,48,o),
(42,37,o),
(42,23,qs),
(42,8,o),
(68,0,o),
(83,0,qs),
(315,0,ls),
(328,0,o),
(335,17,o),
(335,23,qs),
(335,37,o),
(316,51,o),
(305,51,qs),
(214,51,l),
(214,746,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 2 0 2 106 1 9 2 0 7 0 106 8 1 6 6 7 83 0 7 7 12 67 5 1 3 3 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 0 2 106 1 9 2 0 7 0 106 8 1 6 6 7 83 0 7 7 14 67 5 1 3 3 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
1 0 72 69 65 62 56 53 41 38 34 31 27 25 18 16 11 9 0 24 1 24 10 15
CALL[ ]	/* CallFunction */";
};
width = 354;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(283,886,qs),
(283,895,o),
(250,925,o),
(207,952,o),
(164,972,o),
(155,972,qs),
(146,972,o),
(105,952,o),
(61,925,o),
(28,895,o),
(28,886,qs),
(28,875,o),
(36,875,qs),
(41,875,o),
(66,885,o),
(100,901,o),
(138,919,o),
(155,928,q),
(172,919,o),
(210,901,o),
(244,885,o),
(270,875,o),
(275,875,qs),
(283,875,o)
);
},
{
closed = 1;
nodes = (
(183,775,o),
(202,786,o),
(226,790,o),
(249,791,o),
(254,791,qs),
(266,791,o),
(291,795,o),
(291,806,qs),
(291,814,o),
(272,821,o),
(240,821,qs),
(58,821,ls),
(49,821,o),
(21,817,o),
(21,806,qs),
(21,796,o),
(47,791,o),
(58,791,qs),
(68,791,o),
(96,790,o),
(121,786,o),
(138,777,o),
(138,768,qs),
(138,680,o),
(142,489,o),
(142,401,qs),
(142,313,o),
(138,156,o),
(138,74,qs),
(138,57,o),
(123,38,o),
(100,29,o),
(75,28,o),
(65,28,qs),
(56,28,o),
(36,22,o),
(36,13,qs),
(36,5,o),
(63,0,o),
(77,0,qs),
(289,0,ls),
(309,0,o),
(309,13,qs),
(309,21,o),
(290,31,o),
(279,31,qs),
(183,31,l),
(183,766,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 2 0 2 106 1 9 2 0 7 0 106 8 1 6 6 7 83 0 7 7 12 67 5 1 3 3 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 0 2 106 1 9 2 0 7 0 106 8 1 6 6 7 83 0 7 7 14 67 5 1 3 3 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
1 0 68 65 61 58 54 51 39 36 32 29 26 24 18 16 11 9 0 23 1 23 10 15
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
note = Icircumflex;
unicode = 206;
},
{
glyphname = Idieresis;
kernLeft = B;
kernRight = I;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(53,841,o),
(77,841,qs),
(88,841,o),
(112,847,o),
(131,863,o),
(144,890,o),
(144,911,qs),
(144,938,o),
(108,972,o),
(84,972,qs),
(66,972,o),
(41,958,o),
(25,938,o),
(18,915,o),
(18,907,qs),
(18,878,o)
);
},
{
closed = 1;
nodes = (
(260,830,o),
(284,830,qs),
(295,830,o),
(319,836,o),
(338,852,o),
(351,879,o),
(351,900,qs),
(351,928,o),
(315,961,o),
(291,961,qs),
(273,961,o),
(248,947,o),
(232,927,o),
(225,904,o),
(225,896,qs),
(225,867,o)
);
},
{
closed = 1;
nodes = (
(236,738,o),
(268,750,o),
(289,753,qs),
(317,757,o),
(335,775,o),
(335,790,qs),
(335,806,o),
(316,821,o),
(284,821,qs),
(78,821,ls),
(61,821,o),
(31,810,o),
(31,789,qs),
(31,769,o),
(52,754,o),
(78,752,qs),
(115,750,o),
(140,734,o),
(140,717,qs),
(140,637,o),
(144,481,o),
(144,401,qs),
(144,322,o),
(140,187,o),
(140,113,qs),
(140,85,o),
(111,67,o),
(75,64,qs),
(63,63,o),
(43,46,o),
(43,29,qs),
(43,10,o),
(61,0,o),
(77,0,qs),
(305,0,ls),
(353,0,o),
(353,29,qs),
(353,46,o),
(338,65,o),
(319,65,qs),
(234,65,l),
(236,719,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
2 1 0 3 1 1 7 0 1 91 0 6 6 7 83 0 7 7 12 67 0 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 7 2 3 91 0 6 6 7 83 0 7 7 12 67 0 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 7 2 3 91 0 6 6 7 83 0 7 7 14 67 0 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
65 62 57 56 51 34 38 38 38 36 8 21
CALL[ ]	/* CallFunction */";
};
width = 374;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(46,859,o),
(66,859,qs),
(85,859,o),
(122,884,o),
(122,920,qs),
(122,943,o),
(93,972,o),
(73,972,qs),
(58,972,o),
(37,960,o),
(23,942,o),
(17,923,o),
(17,916,qs),
(17,891,o)
);
},
{
closed = 1;
nodes = (
(253,847,o),
(273,847,qs),
(292,847,o),
(329,872,o),
(329,908,qs),
(329,931,o),
(300,960,o),
(280,960,qs),
(265,960,o),
(244,948,o),
(230,930,o),
(224,911,o),
(224,904,qs),
(224,879,o)
);
},
{
closed = 1;
nodes = (
(214,755,o),
(232,766,o),
(255,770,o),
(276,771,o),
(280,771,qs),
(292,771,o),
(317,782,o),
(317,796,qs),
(317,809,o),
(298,821,o),
(266,821,qs),
(64,821,ls),
(55,821,o),
(27,813,o),
(27,796,qs),
(27,788,o),
(35,778,o),
(46,773,o),
(59,771,o),
(64,771,qs),
(73,771,o),
(98,770,o),
(122,766,o),
(139,757,o),
(139,748,qs),
(139,665,o),
(143,484,o),
(143,401,qs),
(143,319,o),
(139,171,o),
(139,94,qs),
(139,77,o),
(124,58,o),
(102,49,o),
(79,48,o),
(71,48,qs),
(62,48,o),
(42,37,o),
(42,23,qs),
(42,8,o),
(68,0,o),
(83,0,qs),
(315,0,ls),
(328,0,o),
(335,17,o),
(335,23,qs),
(335,37,o),
(316,51,o),
(305,51,qs),
(214,51,l),
(214,746,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 9 1 7 7 8 83 0 8 8 12 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 9 1 7 7 8 83 0 8 8 14 67 6 1 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
75 72 54 60 52 52 34 36 38 36 36 10 24
CALL[ ]	/* CallFunction */";
};
width = 354;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(36,889,o),
(50,889,qs),
(64,889,o),
(91,908,o),
(91,935,qs),
(91,952,o),
(71,972,o),
(57,972,qs),
(46,972,o),
(31,963,o),
(21,950,o),
(16,936,o),
(16,931,qs),
(16,913,o)
);
},
{
closed = 1;
nodes = (
(243,875,o),
(257,875,qs),
(271,875,o),
(298,894,o),
(298,921,qs),
(298,938,o),
(278,958,o),
(264,958,qs),
(253,958,o),
(238,949,o),
(228,936,o),
(223,922,o),
(223,917,qs),
(223,899,o)
);
},
{
closed = 1;
nodes = (
(183,775,o),
(202,786,o),
(226,790,o),
(249,791,o),
(254,791,qs),
(266,791,o),
(291,795,o),
(291,806,qs),
(291,814,o),
(272,821,o),
(240,821,qs),
(58,821,ls),
(49,821,o),
(21,817,o),
(21,806,qs),
(21,796,o),
(47,791,o),
(58,791,qs),
(68,791,o),
(96,790,o),
(121,786,o),
(138,777,o),
(138,768,qs),
(138,680,o),
(142,489,o),
(142,401,qs),
(142,313,o),
(138,156,o),
(138,74,qs),
(138,57,o),
(123,38,o),
(100,29,o),
(75,28,o),
(65,28,qs),
(56,28,o),
(36,22,o),
(36,13,qs),
(36,5,o),
(63,0,o),
(77,0,qs),
(289,0,ls),
(309,0,o),
(309,13,qs),
(309,21,o),
(290,31,o),
(279,31,qs),
(183,31,l),
(183,766,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 9 1 7 7 8 83 0 8 8 12 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 9 1 7 7 8 83 0 8 8 14 67 6 1 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
72 69 52 60 52 51 34 36 38 36 36 10 24
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
note = Idieresis;
unicode = 207;
},
{
glyphname = Idotaccent;
kernLeft = B;
kernRight = I;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(236,738,o),
(268,750,o),
(289,753,qs),
(317,757,o),
(335,775,o),
(335,790,qs),
(335,806,o),
(316,821,o),
(284,821,qs),
(78,821,ls),
(61,821,o),
(31,810,o),
(31,789,qs),
(31,769,o),
(52,754,o),
(78,752,qs),
(115,750,o),
(140,734,o),
(140,717,qs),
(140,637,o),
(144,481,o),
(144,401,qs),
(144,322,o),
(140,187,o),
(140,113,qs),
(140,85,o),
(111,67,o),
(75,64,qs),
(63,63,o),
(43,46,o),
(43,29,qs),
(43,10,o),
(61,0,o),
(77,0,qs),
(305,0,ls),
(353,0,o),
(353,29,qs),
(353,46,o),
(338,65,o),
(319,65,qs),
(234,65,l),
(236,719,ls)
);
},
{
closed = 1;
nodes = (
(158,840,o),
(183,840,qs),
(194,840,o),
(218,846,o),
(237,862,o),
(250,889,o),
(250,910,qs),
(250,937,o),
(214,971,o),
(190,971,qs),
(172,971,o),
(147,958,o),
(131,939,o),
(124,916,o),
(124,906,qs),
(124,874,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 0 5 3 4 5 91 0 2 2 3 83 0 3 3 12 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 4 0 5 3 4 5 91 0 2 2 3 83 0 3 3 14 67 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
56 54 48 46 33 30 25 24 51 32 6 17
CALL[ ]	/* CallFunction */";
};
width = 374;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (27,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (107,336);
ref = dotaccent;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 6 0 7 4 6 7 91 5 1 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 6 0 7 4 6 7 91 5 1 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
36 40 52 54 60 52 52 33 8 34
CALL[ ]	/* CallFunction */";
};
width = 354;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(183,775,o),
(202,786,o),
(226,790,o),
(249,791,o),
(254,791,qs),
(266,791,o),
(291,795,o),
(291,806,qs),
(291,814,o),
(272,821,o),
(240,821,qs),
(58,821,ls),
(49,821,o),
(21,817,o),
(21,806,qs),
(21,796,o),
(47,791,o),
(58,791,qs),
(68,791,o),
(96,790,o),
(121,786,o),
(138,777,o),
(138,768,qs),
(138,680,o),
(142,489,o),
(142,401,qs),
(142,313,o),
(138,156,o),
(138,74,qs),
(138,57,o),
(123,38,o),
(100,29,o),
(75,28,o),
(65,28,qs),
(56,28,o),
(36,22,o),
(36,13,qs),
(36,5,o),
(63,0,o),
(77,0,qs),
(289,0,ls),
(309,0,o),
(309,13,qs),
(309,21,o),
(290,31,o),
(279,31,qs),
(183,31,l),
(183,766,ls)
);
},
{
closed = 1;
nodes = (
(141,889,o),
(155,889,qs),
(169,889,o),
(196,908,o),
(196,935,qs),
(196,952,o),
(176,972,o),
(162,972,qs),
(151,972,o),
(136,963,o),
(126,950,o),
(121,936,o),
(121,931,qs),
(121,913,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 6 0 7 4 6 7 91 5 1 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 6 0 7 4 6 7 91 5 1 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
36 40 52 52 60 52 51 32 8 23
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
note = Idotaccent;
unicode = 304;
},
{
glyphname = Igrave;
kernLeft = B;
kernRight = I;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(92,887,o),
(130,859,o),
(170,840,o),
(183,840,qs),
(199,840,o),
(219,859,o),
(219,871,qs),
(219,881,o),
(194,916,o),
(158,948,o),
(119,972,o),
(105,972,qs),
(85,972,o),
(64,949,o),
(64,935,qs),
(64,921,o)
);
},
{
closed = 1;
nodes = (
(236,738,o),
(268,750,o),
(289,753,qs),
(317,757,o),
(335,775,o),
(335,790,qs),
(335,806,o),
(316,821,o),
(284,821,qs),
(78,821,ls),
(61,821,o),
(31,810,o),
(31,789,qs),
(31,769,o),
(52,754,o),
(78,752,qs),
(115,750,o),
(140,734,o),
(140,717,qs),
(140,637,o),
(144,481,o),
(144,401,qs),
(144,322,o),
(140,187,o),
(140,113,qs),
(140,85,o),
(111,67,o),
(75,64,qs),
(63,63,o),
(43,46,o),
(43,29,qs),
(43,10,o),
(61,0,o),
(77,0,qs),
(305,0,ls),
(353,0,o),
(353,29,qs),
(353,46,o),
(338,65,o),
(319,65,qs),
(234,65,l),
(236,719,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 1 0 106 0 1 5 1 106 0 4 4 5 83 0 5 5 12 67 0 2 2 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 1 0 106 0 1 5 1 106 0 4 4 5 83 0 5 5 14 67 0 2 2 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
49 46 41 40 51 36 38 34 6 19
CALL[ ]	/* CallFunction */";
};
width = 374;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(131,899,o),
(168,872,o),
(206,854,o),
(217,854,qs),
(228,854,o),
(241,867,o),
(241,877,qs),
(241,887,o),
(216,919,o),
(182,950,o),
(146,972,o),
(135,972,qs),
(120,972,o),
(103,955,o),
(103,941,qs),
(103,929,o)
);
},
{
closed = 1;
nodes = (
(214,755,o),
(232,766,o),
(255,770,o),
(276,771,o),
(280,771,qs),
(292,771,o),
(317,782,o),
(317,796,qs),
(317,809,o),
(298,821,o),
(266,821,qs),
(64,821,ls),
(55,821,o),
(27,813,o),
(27,796,qs),
(27,788,o),
(35,778,o),
(46,773,o),
(59,771,o),
(64,771,qs),
(73,771,o),
(98,770,o),
(122,766,o),
(139,757,o),
(139,748,qs),
(139,665,o),
(143,484,o),
(143,401,qs),
(143,319,o),
(139,171,o),
(139,94,qs),
(139,77,o),
(124,58,o),
(102,49,o),
(79,48,o),
(71,48,qs),
(62,48,o),
(42,37,o),
(42,23,qs),
(42,8,o),
(68,0,o),
(83,0,qs),
(315,0,ls),
(328,0,o),
(335,17,o),
(335,23,qs),
(335,37,o),
(316,51,o),
(305,51,qs),
(214,51,l),
(214,746,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 0 1 0 106 0 1 6 1 106 7 1 5 5 6 83 0 6 6 12 67 4 1 2 2 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 1 0 106 0 1 6 1 106 7 1 5 5 6 83 0 6 6 14 67 4 1 2 2 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
52 54 60 52 52 36 38 34 8 23
CALL[ ]	/* CallFunction */";
};
width = 354;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(127,916,o),
(163,892,o),
(198,875,o),
(205,875,qs),
(213,875,o),
(213,886,qs),
(213,895,o),
(189,924,o),
(157,951,o),
(125,971,o),
(118,971,qs),
(110,971,o),
(99,963,o),
(99,949,qs),
(99,941,o)
);
},
{
closed = 1;
nodes = (
(183,775,o),
(202,786,o),
(226,790,o),
(249,791,o),
(254,791,qs),
(266,791,o),
(291,795,o),
(291,806,qs),
(291,814,o),
(272,821,o),
(240,821,qs),
(58,821,ls),
(49,821,o),
(21,817,o),
(21,806,qs),
(21,796,o),
(47,791,o),
(58,791,qs),
(68,791,o),
(96,790,o),
(121,786,o),
(138,777,o),
(138,768,qs),
(138,680,o),
(142,489,o),
(142,401,qs),
(142,313,o),
(138,156,o),
(138,74,qs),
(138,57,o),
(123,38,o),
(100,29,o),
(75,28,o),
(65,28,qs),
(56,28,o),
(36,22,o),
(36,13,qs),
(36,5,o),
(63,0,o),
(77,0,qs),
(289,0,ls),
(309,0,o),
(309,13,qs),
(309,21,o),
(290,31,o),
(279,31,qs),
(183,31,l),
(183,766,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 0 1 0 106 0 1 6 1 106 7 1 5 5 6 83 0 6 6 12 67 4 1 2 2 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 1 0 106 0 1 6 1 106 7 1 5 5 6 83 0 6 6 14 67 4 1 2 2 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
52 52 60 52 51 36 37 34 8 23
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
note = Igrave;
unicode = 204;
},
{
glyphname = Imacron;
kernLeft = B;
kernRight = I;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(236,738,o),
(268,750,o),
(289,753,qs),
(317,757,o),
(335,775,o),
(335,790,qs),
(335,806,o),
(316,821,o),
(284,821,qs),
(78,821,ls),
(61,821,o),
(31,810,o),
(31,789,qs),
(31,769,o),
(52,754,o),
(78,752,qs),
(115,750,o),
(140,734,o),
(140,717,qs),
(140,637,o),
(144,481,o),
(144,401,qs),
(144,322,o),
(140,187,o),
(140,113,qs),
(140,85,o),
(111,67,o),
(75,64,qs),
(63,63,o),
(43,46,o),
(43,29,qs),
(43,10,o),
(61,0,o),
(77,0,qs),
(305,0,ls),
(353,0,o),
(353,29,qs),
(353,46,o),
(338,65,o),
(319,65,qs),
(234,65,l),
(236,719,ls)
);
},
{
closed = 1;
nodes = (
(236,962,o),
(194,962,qs),
(181,962,o),
(146,963,o),
(110,963,o),
(80,964,o),
(73,964,qs),
(56,964,o),
(40,939,o),
(40,925,qs),
(40,911,o),
(59,885,o),
(73,885,qs),
(91,885,o),
(155,885,o),
(227,886,o),
(294,886,o),
(314,886,qs),
(325,886,o),
(339,895,o),
(347,908,o),
(350,923,o),
(350,928,qs),
(350,943,o),
(333,965,o),
(322,965,qs),
(298,965,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
6 1 4 0 5 3 4 5 91 0 2 2 3 83 0 3 3 12 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
6 1 4 0 5 3 4 5 91 0 2 2 3 83 0 3 3 14 67 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
43 42 56 49 42 68 43 60 33 30 25 24 51 32 7 17
CALL[ ]	/* CallFunction */";
};
width = 374;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (27,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (26,385);
ref = macron;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
8 1 6 0 7 4 6 7 91 5 1 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
8 1 6 0 7 4 6 7 91 5 1 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
53 52 64 57 52 76 53 68 52 54 60 52 52 33 9 32
CALL[ ]	/* CallFunction */";
};
width = 354;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(183,775,o),
(202,786,o),
(226,790,o),
(249,791,o),
(254,791,qs),
(266,791,o),
(291,795,o),
(291,806,qs),
(291,814,o),
(272,821,o),
(240,821,qs),
(58,821,ls),
(49,821,o),
(21,817,o),
(21,806,qs),
(21,796,o),
(47,791,o),
(58,791,qs),
(68,791,o),
(96,790,o),
(121,786,o),
(138,777,o),
(138,768,qs),
(138,680,o),
(142,489,o),
(142,401,qs),
(142,313,o),
(138,156,o),
(138,74,qs),
(138,57,o),
(123,38,o),
(100,29,o),
(75,28,o),
(65,28,qs),
(56,28,o),
(36,22,o),
(36,13,qs),
(36,5,o),
(63,0,o),
(77,0,qs),
(289,0,ls),
(309,0,o),
(309,13,qs),
(309,21,o),
(290,31,o),
(279,31,qs),
(183,31,l),
(183,766,ls)
);
},
{
closed = 1;
nodes = (
(210,904,o),
(168,904,qs),
(155,904,o),
(120,905,o),
(84,905,o),
(54,906,o),
(47,906,qs),
(39,906,o),
(31,896,o),
(31,891,qs),
(31,886,o),
(40,875,o),
(47,875,qs),
(65,875,o),
(129,875,o),
(201,876,o),
(268,876,o),
(288,876,qs),
(299,876,o),
(307,889,o),
(307,894,qs),
(307,899,o),
(300,907,o),
(296,907,qs),
(272,907,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
8 1 6 0 7 4 6 7 91 5 1 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
8 1 6 0 7 4 6 7 91 5 1 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
49 48 60 53 48 72 49 64 52 52 60 52 51 32 9 21
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
note = Imacron;
unicode = 298;
},
{
glyphname = Iogonek;
kernLeft = B;
kernRight = I;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(252,-146,o),
(272,-130,o),
(282,-112,o),
(282,-104,qs),
(282,-95,o),
(267,-80,o),
(257,-80,qs),
(249,-80,o),
(240,-88,o),
(229,-97,o),
(212,-104,o),
(197,-104,qs),
(186,-104,o),
(168,-94,o),
(168,-83,qs),
(168,-63,o),
(191,-11,o),
(213,0,q),
(305,0,ls),
(353,0,o),
(353,29,qs),
(353,46,o),
(338,65,o),
(319,65,qs),
(234,65,l),
(234,91,o),
(235,199,o),
(235,335,o),
(236,482,o),
(236,610,o),
(236,704,o),
(236,719,qs),
(236,738,o),
(268,750,o),
(289,753,qs),
(317,757,o),
(335,775,o),
(335,790,qs),
(335,806,o),
(316,821,o),
(284,821,qs),
(78,821,ls),
(61,821,o),
(31,810,o),
(31,789,qs),
(31,769,o),
(52,754,o),
(78,752,qs),
(115,750,o),
(140,734,o),
(140,717,qs),
(140,637,o),
(144,481,o),
(144,401,qs),
(144,322,o),
(140,187,o),
(140,113,qs),
(140,85,o),
(111,67,o),
(75,64,qs),
(63,63,o),
(43,46,o),
(43,29,qs),
(43,10,o),
(61,0,o),
(77,0,qs),
(156,0,l),
(147,-5,o),
(124,-19,o),
(103,-40,o),
(89,-66,o),
(89,-82,qs),
(89,-101,o),
(109,-129,o),
(140,-148,o),
(179,-157,o),
(199,-157,qs),
(220,-157,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 7 1 6 1 7 6 104 0 6 8 1 0 6 0 87 0 2 2 3 83 0 3 3 12 67 0 4 4 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 7 1 6 1 7 6 104 0 6 8 1 0 6 0 87 0 2 2 3 83 0 3 3 14 67 0 4 4 1 83 5 1 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
1 0 71 69 66 64 59 57 54 52 37 34 29 28 12 10 0 77 1 77 9 15
CALL[ ]	/* CallFunction */";
};
width = 374;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (27,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (69,0);
ref = ogonek;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
2 1 0 3 9 9 0 96 0 7 1 6 1 7 6 104 0 6 0 8 6 8 87 5 1 3 3 4 83 0 4 4 12 67 10 1 9 9 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
2 1 0 3 9 3 0 9 104 0 7 1 6 1 7 6 104 0 6 0 8 6 8 87 5 1 3 3 4 83 0 4 4 12 67 10 1 9 9 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
2 1 0 3 9 3 0 9 104 0 7 1 6 1 7 6 104 0 6 0 8 6 8 87 5 1 3 3 4 83 0 4 4 14 67 10 1 9 9 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
52 52 52 81 52 81 38 35 43 52 54 60 52 52 33 11 35
CALL[ ]	/* CallFunction */";
};
width = 354;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(183,775,o),
(202,786,o),
(226,790,o),
(249,791,o),
(254,791,qs),
(266,791,o),
(291,795,o),
(291,806,qs),
(291,814,o),
(272,821,o),
(240,821,qs),
(58,821,ls),
(49,821,o),
(21,817,o),
(21,806,qs),
(21,796,o),
(47,791,o),
(58,791,qs),
(68,791,o),
(96,790,o),
(121,786,o),
(138,777,o),
(138,768,qs),
(138,680,o),
(142,489,o),
(142,401,qs),
(142,313,o),
(138,156,o),
(138,74,qs),
(138,57,o),
(123,38,o),
(100,29,o),
(75,28,o),
(65,28,qs),
(56,28,o),
(36,22,o),
(36,13,qs),
(36,5,o),
(63,0,o),
(77,0,qs),
(124,0,l),
(110,-11,o),
(80,-48,o),
(80,-76,qs),
(80,-108,o),
(126,-149,o),
(161,-149,qs),
(179,-149,o),
(207,-136,o),
(228,-119,o),
(239,-102,o),
(239,-98,qs),
(239,-92,o),
(234,-82,o),
(225,-82,qs),
(218,-82,o),
(207,-95,o),
(194,-110,o),
(176,-122,o),
(163,-122,qs),
(151,-122,o),
(136,-112,o),
(127,-97,o),
(124,-81,o),
(124,-75,qs),
(124,-70,o),
(127,-51,o),
(134,-30,o),
(148,-9,o),
(159,0,q),
(289,0,ls),
(309,0,o),
(309,13,qs),
(309,21,o),
(290,31,o),
(279,31,qs),
(183,31,l),
(183,766,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 1 2 1 3 2 104 0 2 0 4 2 4 87 9 1 7 7 8 83 0 8 8 12 67 6 1 0 0 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 3 1 2 1 3 2 104 0 2 0 4 2 4 87 9 1 7 7 8 83 0 8 8 14 67 6 1 0 0 1 83 5 1 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
74 71 52 60 52 37 38 35 41 35 32 10 24
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
note = Iogonek;
unicode = 302;
},
{
glyphname = Itilde;
kernLeft = B;
kernRight = I;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(236,738,o),
(268,750,o),
(289,753,qs),
(317,757,o),
(335,775,o),
(335,790,qs),
(335,806,o),
(316,821,o),
(284,821,qs),
(78,821,ls),
(61,821,o),
(31,810,o),
(31,789,qs),
(31,769,o),
(52,754,o),
(78,752,qs),
(115,750,o),
(140,734,o),
(140,717,qs),
(140,637,o),
(144,481,o),
(144,401,qs),
(144,322,o),
(140,187,o),
(140,113,qs),
(140,85,o),
(111,67,o),
(75,64,qs),
(63,63,o),
(43,46,o),
(43,29,qs),
(43,10,o),
(61,0,o),
(77,0,qs),
(305,0,ls),
(353,0,o),
(353,29,qs),
(353,46,o),
(338,65,o),
(319,65,qs),
(234,65,l),
(236,719,ls)
);
},
{
closed = 1;
nodes = (
(24,859,o),
(33,859,qs),
(40,859,o),
(58,867,o),
(78,876,o),
(102,884,o),
(117,884,qs),
(131,884,o),
(163,876,o),
(198,867,o),
(235,860,o),
(254,860,qs),
(265,860,o),
(303,867,o),
(339,884,o),
(365,913,o),
(365,935,qs),
(365,951,o),
(348,970,o),
(343,970,qs),
(336,970,o),
(313,957,qs),
(299,949,o),
(267,940,o),
(253,940,qs),
(238,940,o),
(202,949,o),
(166,959,o),
(131,968,o),
(116,968,qs),
(79,968,o),
(48,950,qs),
(34,942,o),
(14,917,o),
(14,895,qs),
(14,880,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 3 5 7 91 0 2 2 3 83 0 3 3 12 67 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 3 5 7 91 0 2 2 3 83 0 3 3 14 67 0 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
76 74 71 69 66 64 58 56 53 51 48 46 33 30 25 24 51 32 10 17
CALL[ ]	/* CallFunction */";
};
width = 374;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (6,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-5,363);
ref = tilde;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
8 1 6 0 10 9 6 10 91 0 7 11 1 9 4 7 9 91 5 1 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
8 1 6 0 10 9 6 10 91 0 7 11 1 9 4 7 9 91 5 1 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
86 84 81 79 76 74 35 35 40 52 54 60 52 52 33 12 35
CALL[ ]	/* CallFunction */";
};
width = 354;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(183,775,o),
(202,786,o),
(226,790,o),
(249,791,o),
(254,791,qs),
(266,791,o),
(291,795,o),
(291,806,qs),
(291,814,o),
(272,821,o),
(240,821,qs),
(58,821,ls),
(49,821,o),
(21,817,o),
(21,806,qs),
(21,796,o),
(47,791,o),
(58,791,qs),
(68,791,o),
(96,790,o),
(121,786,o),
(138,777,o),
(138,768,qs),
(138,680,o),
(142,489,o),
(142,401,qs),
(142,313,o),
(138,156,o),
(138,74,qs),
(138,57,o),
(123,38,o),
(100,29,o),
(75,28,o),
(65,28,qs),
(56,28,o),
(36,22,o),
(36,13,qs),
(36,5,o),
(63,0,o),
(77,0,qs),
(289,0,ls),
(309,0,o),
(309,13,qs),
(309,21,o),
(290,31,o),
(279,31,qs),
(183,31,l),
(183,766,ls)
);
},
{
closed = 1;
nodes = (
(1,888,o),
(6,888,qs),
(11,888,o),
(27,896,o),
(49,905,o),
(75,913,o),
(90,913,qs),
(104,913,o),
(136,905,o),
(171,896,o),
(208,889,o),
(227,889,qs),
(248,889,o),
(285,896,o),
(313,909,o),
(329,925,o),
(329,934,qs),
(329,941,o),
(321,951,o),
(316,951,qs),
(311,951,o),
(300,946,o),
(286,938,qs),
(252,921,o),
(226,921,qs),
(211,921,o),
(175,930,o),
(139,940,o),
(104,949,o),
(89,949,qs),
(52,949,o),
(21,931,qs),
(-8,914,o),
(-8,903,qs),
(-8,898,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
8 1 6 0 10 9 6 10 91 0 7 11 1 9 4 7 9 91 5 1 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
8 1 6 0 10 9 6 10 91 0 7 11 1 9 4 7 9 91 5 1 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
81 79 76 74 71 69 35 35 39 52 52 60 52 51 32 12 24
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
note = Itilde;
unicode = 296;
},
{
glyphname = J;
kernLeft = J;
kernRight = IJ;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(74,177,o),
(79,181,q),
(94,168,o),
(114,168,qs),
(135,168,o),
(163,197,o),
(163,222,qs),
(163,238,o),
(151,260,o),
(131,274,o),
(108,280,o),
(98,280,qs),
(77,280,o),
(40,261,o),
(12,225,o),
(-5,175,o),
(-5,145,qs),
(-5,73,o),
(91,-14,o),
(185,-14,qs),
(301,-14,o),
(429,132,o),
(429,279,qs),
(429,723,ls),
(429,737,o),
(456,752,o),
(490,752,qs),
(508,752,o),
(533,769,o),
(533,786,qs),
(533,802,o),
(513,821,o),
(481,821,qs),
(244,821,ls),
(227,821,o),
(207,806,o),
(207,787,qs),
(207,753,o),
(254,753,qs),
(264,753,o),
(292,752,o),
(316,748,o),
(333,739,o),
(333,730,qs),
(333,718,o),
(334,647,o),
(335,548,o),
(336,431,o),
(336,371,qs),
(336,311,o),
(330,197,o),
(300,108,o),
(235,53,o),
(176,53,qs),
(122,53,o),
(65,99,o),
(65,135,qs),
(65,150,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
55 1 6 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 3 1 1 1 2 83 0 2 2 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 3 1 1 1 2 83 0 2 2 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 38 37 36 51 60 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 538;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(66,177,o),
(74,182,q),
(87,170,o),
(107,170,qs),
(126,170,o),
(143,198,o),
(143,216,qs),
(143,229,o),
(132,247,o),
(116,259,o),
(97,264,o),
(89,264,qs),
(48,264,o),
(-4,194,o),
(-4,137,qs),
(-4,104,o),
(22,49,o),
(69,9,o),
(131,-14,o),
(167,-14,qs),
(292,-14,o),
(409,132,o),
(409,279,qs),
(409,746,ls),
(409,755,o),
(423,766,o),
(441,770,o),
(457,771,o),
(460,771,qs),
(472,771,o),
(497,782,o),
(497,796,qs),
(497,809,o),
(478,821,o),
(446,821,qs),
(249,821,ls),
(240,821,o),
(212,813,o),
(212,796,qs),
(212,782,o),
(238,771,o),
(249,771,qs),
(259,771,o),
(289,770,o),
(315,766,o),
(334,757,o),
(334,748,qs),
(334,738,o),
(335,660,o),
(336,553,o),
(337,432,o),
(337,379,qs),
(337,314,o),
(331,196,o),
(299,104,o),
(233,50,o),
(172,50,qs),
(152,50,o),
(111,61,o),
(78,82,o),
(57,114,o),
(57,135,qs),
(57,150,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
60 1 6 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 3 1 1 1 2 83 0 2 2 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 3 1 1 1 2 83 0 2 2 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 38 38 52 52 60 36 7 22
CALL[ ]	/* CallFunction */";
};
width = 523;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(37,177,o),
(50,182,q),
(55,176,o),
(69,167,o),
(77,167,qs),
(89,167,o),
(114,184,o),
(114,204,qs),
(114,221,o),
(88,237,o),
(78,237,qs),
(51,237,o),
(20,212,o),
(3,179,o),
(-2,146,o),
(-2,137,qs),
(-2,104,o),
(23,49,o),
(67,9,o),
(128,-14,o),
(164,-14,qs),
(276,-14,o),
(381,132,o),
(381,279,qs),
(381,766,ls),
(381,775,o),
(400,786,o),
(424,790,o),
(447,791,o),
(452,791,qs),
(464,791,o),
(489,795,o),
(489,806,qs),
(489,814,o),
(470,821,o),
(438,821,qs),
(256,821,ls),
(247,821,o),
(219,817,o),
(219,806,qs),
(219,796,o),
(245,791,o),
(256,791,qs),
(266,791,o),
(294,790,o),
(319,786,o),
(336,777,o),
(336,768,qs),
(336,761,o),
(336,719,o),
(337,657,o),
(338,581,o),
(339,499,o),
(339,416,o),
(339,379,qs),
(339,308,o),
(334,178,o),
(302,79,o),
(233,20,o),
(169,20,qs),
(141,20,o),
(91,34,o),
(52,63,o),
(29,104,o),
(29,131,qs),
(29,146,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
63 1 6 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 3 1 1 1 2 83 0 2 2 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 3 1 1 1 2 83 0 2 2 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
36 40 38 52 52 62 36 7 22
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = J;
unicode = 74;
},
{
glyphname = Jcircumflex;
kernLeft = J;
kernRight = IJ;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(490,844,o),
(490,851,qs),
(490,867,o),
(455,908,o),
(409,946,o),
(366,972,o),
(357,972,qs),
(350,972,o),
(307,947,o),
(261,909,o),
(225,864,o),
(225,844,qs),
(225,839,o),
(231,830,o),
(238,830,qs),
(243,830,o),
(269,837,o),
(302,850,o),
(340,868,o),
(357,879,q),
(374,868,o),
(412,850,o),
(446,837,o),
(472,830,o),
(477,830,qs),
(485,830,o)
);
},
{
closed = 1;
nodes = (
(74,177,o),
(79,181,q),
(94,168,o),
(114,168,qs),
(135,168,o),
(163,197,o),
(163,222,qs),
(163,238,o),
(151,260,o),
(131,274,o),
(108,280,o),
(98,280,qs),
(77,280,o),
(40,261,o),
(12,225,o),
(-5,175,o),
(-5,145,qs),
(-5,73,o),
(91,-14,o),
(185,-14,qs),
(301,-14,o),
(429,132,o),
(429,279,qs),
(429,723,ls),
(429,737,o),
(456,752,o),
(490,752,qs),
(508,752,o),
(533,769,o),
(533,786,qs),
(533,802,o),
(513,821,o),
(481,821,qs),
(244,821,ls),
(227,821,o),
(207,806,o),
(207,787,qs),
(207,753,o),
(254,753,qs),
(264,753,o),
(292,752,o),
(316,748,o),
(333,739,o),
(333,730,qs),
(333,718,o),
(334,647,o),
(335,548,o),
(336,431,o),
(336,371,qs),
(336,311,o),
(330,197,o),
(300,108,o),
(235,53,o),
(176,53,qs),
(122,53,o),
(65,99,o),
(65,135,qs),
(65,150,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
5 1 0 2 81 1 9 8 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 0 2 106 1 10 2 0 5 0 106 0 8 0 9 3 8 9 91 6 1 4 4 5 83 0 5 5 12 67 0 3 3 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 2 0 2 106 1 10 2 0 5 0 106 0 8 0 9 3 8 9 91 6 1 4 4 5 83 0 5 5 14 67 0 3 3 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 80 78 72 70 64 62 57 55 51 48 45 42 30 28 19 17 11 9 0 25 1 25 11 15
CALL[ ]	/* CallFunction */";
};
width = 538;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(489,857,o),
(489,864,qs),
(489,877,o),
(455,915,o),
(410,948,o),
(367,972,o),
(358,972,qs),
(350,972,o),
(308,949,o),
(263,915,o),
(228,876,o),
(228,860,qs),
(228,847,o),
(239,847,qs),
(244,847,o),
(270,855,o),
(303,869,o),
(341,888,o),
(358,898,q),
(375,888,o),
(413,869,o),
(447,855,o),
(473,847,o),
(478,847,qs),
(484,847,o)
);
},
{
closed = 1;
nodes = (
(66,177,o),
(74,182,q),
(87,170,o),
(107,170,qs),
(126,170,o),
(143,198,o),
(143,216,qs),
(143,229,o),
(132,247,o),
(116,259,o),
(97,264,o),
(89,264,qs),
(48,264,o),
(-4,194,o),
(-4,137,qs),
(-4,104,o),
(22,49,o),
(69,9,o),
(131,-14,o),
(167,-14,qs),
(292,-14,o),
(409,132,o),
(409,279,qs),
(409,746,ls),
(409,755,o),
(423,766,o),
(441,770,o),
(457,771,o),
(460,771,qs),
(472,771,o),
(497,782,o),
(497,796,qs),
(497,809,o),
(478,821,o),
(446,821,qs),
(249,821,ls),
(240,821,o),
(212,813,o),
(212,796,qs),
(212,782,o),
(238,771,o),
(249,771,qs),
(259,771,o),
(289,770,o),
(315,766,o),
(334,757,o),
(334,748,qs),
(334,738,o),
(335,660,o),
(336,553,o),
(337,432,o),
(337,379,qs),
(337,314,o),
(331,196,o),
(299,104,o),
(233,50,o),
(172,50,qs),
(152,50,o),
(111,61,o),
(78,82,o),
(57,114,o),
(57,135,qs),
(57,150,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
5 1 0 2 85 1 9 8 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 0 2 106 1 10 2 0 5 0 106 0 8 0 9 3 8 9 91 6 1 4 4 5 83 0 5 5 12 67 0 3 3 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 2 0 2 106 1 10 2 0 5 0 106 0 8 0 9 3 8 9 91 6 1 4 4 5 83 0 5 5 14 67 0 3 3 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 84 82 76 74 68 66 60 57 53 50 46 43 31 29 18 16 11 9 0 24 1 24 11 15
CALL[ ]	/* CallFunction */";
};
width = 523;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(488,886,qs),
(488,895,o),
(455,925,o),
(412,952,o),
(369,972,o),
(360,972,qs),
(351,972,o),
(310,952,o),
(266,925,o),
(233,895,o),
(233,886,qs),
(233,875,o),
(241,875,qs),
(246,875,o),
(272,885,o),
(305,901,o),
(343,920,o),
(360,929,q),
(377,920,o),
(415,901,o),
(449,885,o),
(475,875,o),
(480,875,qs),
(488,875,o)
);
},
{
closed = 1;
nodes = (
(37,177,o),
(50,182,q),
(55,176,o),
(69,167,o),
(77,167,qs),
(89,167,o),
(114,184,o),
(114,204,qs),
(114,221,o),
(88,237,o),
(78,237,qs),
(51,237,o),
(20,212,o),
(3,179,o),
(-2,146,o),
(-2,137,qs),
(-2,104,o),
(23,49,o),
(67,9,o),
(128,-14,o),
(164,-14,qs),
(276,-14,o),
(381,132,o),
(381,279,qs),
(381,766,ls),
(381,775,o),
(400,786,o),
(424,790,o),
(447,791,o),
(452,791,qs),
(464,791,o),
(489,795,o),
(489,806,qs),
(489,814,o),
(470,821,o),
(438,821,qs),
(256,821,ls),
(247,821,o),
(219,817,o),
(219,806,qs),
(219,796,o),
(245,791,o),
(256,791,qs),
(266,791,o),
(294,790,o),
(319,786,o),
(336,777,o),
(336,768,qs),
(336,761,o),
(336,719,o),
(337,657,o),
(338,581,o),
(339,499,o),
(339,416,o),
(339,379,qs),
(339,308,o),
(334,178,o),
(302,79,o),
(233,20,o),
(169,20,qs),
(141,20,o),
(91,34,o),
(52,63,o),
(29,104,o),
(29,131,qs),
(29,146,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
5 1 0 2 87 1 9 8 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 0 2 106 1 10 2 0 5 0 106 0 8 0 9 3 8 9 91 6 1 4 4 5 83 0 5 5 12 67 0 3 3 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 2 0 2 106 1 10 2 0 5 0 106 0 8 0 9 3 8 9 91 6 1 4 4 5 83 0 5 5 14 67 0 3 3 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 85 83 79 77 69 67 61 58 54 51 47 44 30 28 18 16 11 9 0 23 1 23 11 15
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = Jcircumflex;
unicode = 308;
},
{
glyphname = K;
kernLeft = B;
kernRight = K;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(229,740,o),
(244,751,o),
(266,757,o),
(291,759,o),
(300,759,qs),
(312,760,o),
(339,775,o),
(339,794,qs),
(339,811,o),
(318,821,o),
(286,821,qs),
(94,821,ls),
(77,821,o),
(50,810,o),
(50,790,qs),
(50,773,o),
(69,758,o),
(94,756,qs),
(111,755,o),
(133,742,o),
(133,729,qs),
(133,649,o),
(137,481,o),
(137,401,qs),
(137,362,o),
(136,291,o),
(134,224,o),
(133,156,o),
(133,119,qs),
(133,90,o),
(113,69,o),
(95,67,qs),
(75,65,o),
(49,50,o),
(49,33,qs),
(49,14,o),
(73,0,o),
(108,0,qs),
(316,0,ls),
(326,0,o),
(344,16,o),
(344,35,qs),
(344,51,o),
(322,62,o),
(303,62,qs),
(229,62,l),
(229,335,l),
(235,343,l),
(261,310,o),
(322,228,o),
(385,144,o),
(446,64,o),
(498,2,o),
(536,-36,o),
(545,-36,qs),
(625,-36,o),
(713,-33,o),
(754,-24,o),
(761,-10,o),
(761,1,qs),
(761,22,o),
(719,37,o),
(687,37,qs),
(645,37,o),
(578,41,o),
(570,49,qs),
(552,69,o),
(509,120,o),
(464,176,o),
(417,235,o),
(396,262,qs),
(346,326,o),
(294,395,q),
(374,483,o),
(519,645,o),
(590,713,qs),
(605,727,o),
(658,736,o),
(700,738,qs),
(710,738,o),
(731,752,o),
(731,767,qs),
(731,782,o),
(713,797,o),
(704,797,qs),
(461,797,ls),
(441,797,o),
(427,777,o),
(427,764,qs),
(427,749,o),
(450,737,o),
(460,736,qs),
(474,735,o),
(483,730,o),
(483,720,qs),
(483,716,o),
(456,681,o),
(412,630,o),
(356,570,o),
(300,510,o),
(248,457,o),
(229,439,q),
(229,731,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
55 54 29 0 4 4 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
8 1 6 6 7 83 0 7 7 12 67 0 1 1 0 83 0 0 0 14 67 0 4 4 5 83 0 5 5 13 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 1 4 0 1 91 0 2 0 3 2 3 87 8 1 6 6 7 83 0 7 7 12 67 0 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 1 4 0 1 91 0 2 0 3 2 3 87 8 1 6 6 7 83 0 7 7 14 67 0 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
98 97 92 89 84 83 52 40 53 61 36 63 9 21
CALL[ ]	/* CallFunction */";
};
width = 765;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(210,755,o),
(229,766,o),
(253,770,o),
(276,771,o),
(281,771,qs),
(287,771,o),
(302,773,o),
(314,778,o),
(323,788,o),
(323,796,qs),
(323,811,o),
(299,821,o),
(267,821,qs),
(79,821,ls),
(74,821,o),
(61,820,o),
(47,815,o),
(38,805,o),
(38,796,qs),
(38,782,o),
(68,771,o),
(79,771,qs),
(85,771,o),
(104,770,o),
(122,766,o),
(135,757,o),
(135,748,qs),
(135,665,o),
(139,484,o),
(139,401,qs),
(139,319,o),
(135,171,o),
(135,94,qs),
(135,77,o),
(124,58,o),
(109,49,o),
(93,48,o),
(87,48,qs),
(78,48,o),
(53,40,o),
(53,23,qs),
(53,14,o),
(62,5,o),
(76,1,o),
(92,0,o),
(99,0,qs),
(316,0,ls),
(326,0,o),
(341,13,o),
(341,27,qs),
(341,40,o),
(317,50,o),
(306,50,qs),
(210,50,l),
(210,335,l),
(228,353,l),
(254,320,o),
(316,236,o),
(381,150,o),
(445,67,o),
(498,3,o),
(538,-36,o),
(547,-36,qs),
(612,-36,o),
(691,-32,o),
(735,-24,o),
(749,-11,o),
(749,-2,qs),
(749,11,o),
(709,16,o),
(686,16,qs),
(644,16,o),
(575,20,o),
(567,28,qs),
(548,49,o),
(502,103,o),
(454,163,o),
(405,225,o),
(383,254,qs),
(330,323,o),
(275,395,q),
(315,438,o),
(399,528,o),
(483,614,o),
(564,694,o),
(600,729,qs),
(608,736,o),
(640,744,o),
(679,748,o),
(721,749,o),
(739,750,qs),
(749,750,o),
(759,764,o),
(759,771,qs),
(759,783,o),
(745,795,o),
(736,795,qs),
(468,795,ls),
(448,795,o),
(434,780,o),
(434,770,qs),
(434,756,o),
(458,746,o),
(468,746,qs),
(481,745,o),
(500,744,o),
(500,730,qs),
(500,725,o),
(468,687,o),
(417,631,o),
(353,564,o),
(289,498,o),
(230,440,o),
(210,421,q),
(210,746,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
59 58 33 0 4 6 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
11 1 9 9 10 83 0 10 10 12 67 3 1 2 0 0 2 83 0 2 2 14 67 8 1 6 6 7 83 0 7 7 13 67 0 4 4 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 2 3 1 2 0 6 2 0 91 11 1 9 9 10 83 0 10 10 12 67 8 1 6 6 7 83 0 7 7 13 67 0 4 4 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 2 3 1 2 0 6 2 0 91 0 4 0 5 4 5 87 11 1 9 9 10 83 0 10 10 12 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
1 1 0 3 6 3 0 96 0 2 0 3 0 2 3 91 0 4 0 5 4 5 87 11 1 9 9 10 83 0 10 10 14 67 8 1 6 6 7 83 0 7 7 13 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
111 108 102 99 93 90 78 75 70 66 62 60 52 49 44 41 52 52 17 24 12 19
CALL[ ]	/* CallFunction */";
};
width = 747;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(183,775,o),
(202,786,o),
(226,790,o),
(249,791,o),
(254,791,qs),
(266,791,o),
(291,795,o),
(291,806,qs),
(291,814,o),
(272,821,o),
(240,821,qs),
(58,821,ls),
(49,821,o),
(21,817,o),
(21,806,qs),
(21,796,o),
(47,791,o),
(58,791,qs),
(68,791,o),
(96,790,o),
(121,786,o),
(138,777,o),
(138,768,qs),
(138,680,o),
(142,489,o),
(142,401,qs),
(142,313,o),
(138,156,o),
(138,74,qs),
(138,57,o),
(123,38,o),
(100,29,o),
(75,28,o),
(65,28,qs),
(56,28,o),
(36,22,o),
(36,13,qs),
(36,5,o),
(63,0,o),
(77,0,qs),
(289,0,ls),
(309,0,o),
(309,13,qs),
(309,21,o),
(290,30,o),
(279,30,qs),
(183,30,l),
(183,335,l),
(218,370,l),
(244,337,o),
(308,251,o),
(376,161,o),
(443,74,o),
(499,6,o),
(541,-36,o),
(550,-36,qs),
(585,-36,o),
(648,-35,o),
(695,-32,o),
(722,-24,o),
(722,-17,qs),
(722,-7,o),
(699,-4,o),
(676,-4,qs),
(634,-4,o),
(565,0,o),
(557,8,qs),
(536,30,o),
(488,87,o),
(437,150,o),
(386,215,o),
(362,246,qs),
(306,318,o),
(248,395,q),
(288,438,o),
(378,534,o),
(470,628,o),
(557,714,o),
(593,749,qs),
(601,756,o),
(627,764,o),
(658,768,o),
(694,769,o),
(712,770,qs),
(732,770,o),
(732,781,qs),
(732,789,o),
(718,795,o),
(709,795,qs),
(452,795,ls),
(432,795,o),
(418,785,o),
(418,780,qs),
(418,769,o),
(442,766,o),
(452,766,qs),
(463,766,o),
(488,766,o),
(509,763,o),
(523,757,o),
(523,750,qs),
(523,745,o),
(485,699,o),
(424,633,o),
(348,554,o),
(273,478,o),
(205,411,o),
(183,391,q),
(183,766,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
60 59 34 0 4 5 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
10 1 8 8 9 83 0 9 9 12 67 2 1 0 0 1 83 0 1 1 14 67 7 1 5 5 6 83 0 6 6 13 67 0 3 3 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 2 1 0 5 1 0 91 10 1 8 8 9 83 0 9 9 12 67 7 1 5 5 6 83 0 6 6 13 67 0 3 3 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 1 2 1 0 5 1 0 91 0 3 0 4 3 4 87 10 1 8 8 9 83 0 9 9 12 67 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 1 2 1 0 5 1 0 91 0 3 0 4 3 4 87 10 1 8 8 9 83 0 9 9 14 67 7 1 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
105 102 98 95 91 88 76 73 69 66 63 61 53 49 45 42 51 52 58 11 18
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = K;
unicode = 75;
},
{
glyphname = Kcommaaccent;
kernLeft = B;
kernRight = K;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(229,740,o),
(244,751,o),
(266,757,o),
(291,759,o),
(300,759,qs),
(312,760,o),
(339,775,o),
(339,794,qs),
(339,811,o),
(318,821,o),
(286,821,qs),
(94,821,ls),
(77,821,o),
(50,810,o),
(50,790,qs),
(50,773,o),
(69,758,o),
(94,756,qs),
(111,755,o),
(133,742,o),
(133,729,qs),
(133,649,o),
(137,481,o),
(137,401,qs),
(137,362,o),
(136,291,o),
(134,224,o),
(133,156,o),
(133,119,qs),
(133,90,o),
(113,69,o),
(95,67,qs),
(75,65,o),
(49,50,o),
(49,33,qs),
(49,14,o),
(73,0,o),
(108,0,qs),
(316,0,ls),
(326,0,o),
(344,16,o),
(344,35,qs),
(344,51,o),
(322,62,o),
(303,62,qs),
(229,62,l),
(229,335,l),
(235,343,l),
(261,310,o),
(322,228,o),
(385,144,o),
(446,64,o),
(498,2,o),
(536,-36,o),
(545,-36,qs),
(625,-36,o),
(713,-33,o),
(754,-24,o),
(761,-10,o),
(761,1,qs),
(761,22,o),
(719,37,o),
(687,37,qs),
(645,37,o),
(578,41,o),
(570,49,qs),
(552,69,o),
(509,120,o),
(464,176,o),
(417,235,o),
(396,262,qs),
(346,326,o),
(294,395,q),
(374,483,o),
(519,645,o),
(590,713,qs),
(605,727,o),
(658,736,o),
(700,738,qs),
(710,738,o),
(731,752,o),
(731,767,qs),
(731,782,o),
(713,797,o),
(704,797,qs),
(461,797,ls),
(441,797,o),
(427,777,o),
(427,764,qs),
(427,749,o),
(450,737,o),
(460,736,qs),
(474,735,o),
(483,730,o),
(483,720,qs),
(483,716,o),
(456,681,o),
(412,630,o),
(356,570,o),
(300,510,o),
(248,457,o),
(229,439,q),
(229,731,ls)
);
},
{
closed = 1;
nodes = (
(337,-117,o),
(351,-127,o),
(362,-136,o),
(362,-142,qs),
(362,-172,o),
(347,-201,o),
(347,-211,qs),
(347,-228,o),
(368,-234,o),
(373,-234,qs),
(379,-234,o),
(406,-219,o),
(433,-190,o),
(454,-145,o),
(454,-115,qs),
(454,-72,o),
(410,-34,o),
(386,-34,qs),
(353,-34,o),
(326,-71,o),
(326,-92,qs),
(326,-104,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
55 54 29 0 4 4 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
8 1 6 6 7 83 0 7 7 12 67 0 1 1 0 83 0 0 0 14 67 0 4 4 5 83 0 5 5 13 67 0 2 2 3 83 0 3 3 21 67 0 9 9 10 83 0 10 10 25 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 9 0 10 9 10 87 8 1 6 6 7 83 0 7 7 12 67 0 1 1 0 83 0 0 0 14 67 0 4 4 5 83 0 5 5 13 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 1 4 0 1 91 0 2 0 3 10 2 3 91 0 9 0 10 9 10 87 8 1 6 6 7 83 0 7 7 12 67 0 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 1 4 0 1 91 0 2 0 3 10 2 3 91 0 9 0 10 9 10 87 8 1 6 6 7 83 0 7 7 14 67 0 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
115 113 107 105 98 97 92 89 84 83 52 40 53 61 36 63 11 21
CALL[ ]	/* CallFunction */";
};
width = 765;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (38,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = K;
},
{
alignment = -1;
pos = (280,-130);
ref = comma;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
60 59 34 1 4 6 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
11 1 9 9 10 83 0 10 10 12 67 3 1 2 0 0 2 83 0 2 2 14 67 8 1 6 6 7 83 0 7 7 13 67 0 4 4 5 83 0 5 5 21 67 0 12 12 13 83 0 13 13 25 13 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 2 3 1 2 0 6 2 0 91 11 1 9 9 10 83 0 10 10 12 67 8 1 6 6 7 83 0 7 7 13 67 0 4 4 5 83 0 5 5 21 67 0 12 12 13 83 0 13 13 25 13 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 2 3 1 2 0 6 2 0 91 0 4 0 5 12 4 5 91 0 12 0 13 12 13 87 11 1 9 9 10 83 0 10 10 12 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
1 1 0 3 6 3 0 96 0 2 0 3 0 2 3 91 0 4 0 5 12 4 5 91 0 12 0 13 12 13 87 11 1 9 9 10 83 0 10 10 14 67 8 1 6 6 7 83 0 7 7 13 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
128 126 120 118 112 109 103 100 94 91 79 76 71 67 63 61 53 50 45 42 52 52 17 25 14 30
CALL[ ]	/* CallFunction */";
};
width = 747;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(183,775,o),
(202,786,o),
(226,790,o),
(249,791,o),
(254,791,qs),
(266,791,o),
(291,795,o),
(291,806,qs),
(291,814,o),
(272,821,o),
(240,821,qs),
(58,821,ls),
(49,821,o),
(21,817,o),
(21,806,qs),
(21,796,o),
(47,791,o),
(58,791,qs),
(68,791,o),
(96,790,o),
(121,786,o),
(138,777,o),
(138,768,qs),
(138,680,o),
(142,489,o),
(142,401,qs),
(142,313,o),
(138,156,o),
(138,74,qs),
(138,57,o),
(123,38,o),
(100,29,o),
(75,28,o),
(65,28,qs),
(56,28,o),
(36,22,o),
(36,13,qs),
(36,5,o),
(63,0,o),
(77,0,qs),
(289,0,ls),
(309,0,o),
(309,13,qs),
(309,21,o),
(290,30,o),
(279,30,qs),
(183,30,l),
(183,335,l),
(218,370,l),
(244,337,o),
(308,251,o),
(376,161,o),
(443,74,o),
(499,6,o),
(541,-36,o),
(550,-36,qs),
(585,-36,o),
(648,-35,o),
(695,-32,o),
(722,-24,o),
(722,-17,qs),
(722,-7,o),
(699,-4,o),
(676,-4,qs),
(634,-4,o),
(565,0,o),
(557,8,qs),
(536,30,o),
(488,87,o),
(437,150,o),
(386,215,o),
(362,246,qs),
(306,318,o),
(248,395,q),
(288,438,o),
(378,534,o),
(470,628,o),
(557,714,o),
(593,749,qs),
(601,756,o),
(627,764,o),
(658,768,o),
(694,769,o),
(712,770,qs),
(732,770,o),
(732,781,qs),
(732,789,o),
(718,795,o),
(709,795,qs),
(452,795,ls),
(432,795,o),
(418,785,o),
(418,780,qs),
(418,769,o),
(442,766,o),
(452,766,qs),
(463,766,o),
(488,766,o),
(509,763,o),
(523,757,o),
(523,750,qs),
(523,745,o),
(485,699,o),
(424,633,o),
(348,554,o),
(273,478,o),
(205,411,o),
(183,391,q),
(183,766,ls)
);
},
{
closed = 1;
nodes = (
(337,-124,o),
(351,-131,o),
(362,-138,o),
(362,-144,qs),
(362,-154,o),
(351,-183,o),
(351,-190,qs),
(351,-195,o),
(360,-202,o),
(365,-202,qs),
(375,-202,o),
(392,-185,o),
(402,-160,o),
(408,-133,o),
(408,-123,qs),
(408,-89,o),
(381,-66,o),
(366,-66,qs),
(346,-66,o),
(326,-87,o),
(326,-100,qs),
(326,-112,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
60 59 34 0 4 5 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
10 1 8 8 9 83 0 9 9 12 67 2 1 0 0 1 83 0 1 1 14 67 7 1 5 5 6 83 0 6 6 13 67 0 3 3 4 83 0 4 4 21 67 0 11 11 12 83 0 12 12 17 12 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 1 2 1 0 5 1 0 91 10 1 8 8 9 83 0 9 9 12 67 7 1 5 5 6 83 0 6 6 13 67 0 3 3 4 83 0 4 4 21 67 0 11 11 12 83 0 12 12 17 12 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 2 1 0 5 1 0 91 0 3 0 4 11 3 4 91 10 1 8 8 9 83 0 9 9 12 67 7 1 5 5 6 83 0 6 6 13 67 0 11 11 12 83 0 12 12 17 12 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 2 1 0 5 1 0 91 0 3 0 4 11 3 4 91 0 11 0 12 11 12 87 10 1 8 8 9 83 0 9 9 12 67 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 2 1 0 5 1 0 91 0 3 0 4 11 3 4 91 0 11 0 12 11 12 87 10 1 8 8 9 83 0 9 9 14 67 7 1 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
121 119 113 111 105 102 98 95 91 88 76 73 69 66 63 61 53 49 45 42 51 52 58 13 18
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = Kcommaaccent;
unicode = 310;
},
{
glyphname = L;
kernLeft = B;
kernRight = L;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(12,58,o),
(12,34,qs),
(12,20,o),
(32,0,o),
(66,0,qs),
(505,0,ls),
(520,0,o),
(536,12,o),
(538,29,qs),
(543,98,o),
(549,187,o),
(552,241,o),
(553,267,o),
(553,274,qs),
(553,315,o),
(515,315,qs),
(486,315,o),
(472,288,o),
(472,265,qs),
(472,257,o),
(468,212,o),
(464,162,o),
(460,119,o),
(459,115,qs),
(455,98,o),
(433,84,o),
(419,84,qs),
(229,84,l),
(229,720,ls),
(229,739,o),
(254,759,o),
(296,759,qs),
(308,759,o),
(334,771,o),
(334,790,qs),
(334,807,o),
(315,821,o),
(283,821,qs),
(63,821,ls),
(46,821,o),
(21,807,o),
(21,786,qs),
(21,764,o),
(44,750,o),
(63,749,qs),
(73,749,o),
(96,745,o),
(117,736,o),
(131,722,o),
(131,712,qs),
(131,685,o),
(133,631,o),
(135,563,o),
(137,476,o),
(137,416,qs),
(137,373,o),
(136,280,o),
(136,198,o),
(135,137,o),
(135,126,qs),
(135,103,o),
(102,80,o),
(77,77,qs),
(45,73,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 4 0 3 0 4 3 104 2 1 0 0 1 83 0 1 1 12 67 0 3 3 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 2 4 2 0 96 0 4 3 2 4 3 102 0 2 2 1 83 0 1 1 12 67 0 3 3 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 2 4 2 0 96 0 4 3 2 4 3 102 0 2 2 1 83 0 1 1 14 67 0 3 3 5 84 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
59 56 48 46 37 35 32 30 26 23 19 17 6 15
CALL[ ]	/* CallFunction */";
};
width = 581;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(32,39,o),
(32,24,qs),
(32,19,o),
(39,0,o),
(56,0,qs),
(494,0,ls),
(509,0,o),
(525,12,o),
(527,29,qs),
(529,55,o),
(534,128,o),
(539,201,o),
(543,266,o),
(543,284,qs),
(543,298,o),
(523,309,o),
(509,309,qs),
(487,309,o),
(476,282,o),
(476,259,qs),
(476,251,o),
(472,202,o),
(468,148,o),
(464,102,o),
(463,97,qs),
(460,80,o),
(438,66,o),
(423,66,qs),
(212,66,l),
(212,746,ls),
(212,755,o),
(233,766,o),
(259,770,o),
(284,771,o),
(289,771,qs),
(301,771,o),
(326,780,o),
(326,796,qs),
(326,810,o),
(307,821,o),
(275,821,qs),
(73,821,ls),
(64,821,o),
(36,813,o),
(36,796,qs),
(36,779,o),
(62,771,o),
(73,771,qs),
(80,771,o),
(101,769,o),
(121,762,o),
(135,747,o),
(135,734,qs),
(135,705,o),
(137,646,o),
(139,573,o),
(141,479,o),
(141,416,qs),
(141,371,o),
(140,263,o),
(140,165,o),
(139,90,o),
(139,78,qs),
(139,67,o),
(125,55,o),
(103,49,o),
(78,48,o),
(67,48,qs),
(50,48,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 5 1 4 1 5 4 104 7 1 0 4 6 4 0 96 3 1 1 1 2 83 0 2 2 12 67 0 4 4 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 5 1 4 1 5 4 104 7 1 0 4 6 4 0 96 3 1 1 1 2 83 0 2 2 14 67 0 4 4 6 84 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
2 0 64 61 52 50 41 39 35 32 28 25 21 19 0 68 2 68 8 15
CALL[ ]	/* CallFunction */";
};
width = 565;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(18,11,qs),
(18,6,o),
(25,0,o),
(42,0,qs),
(470,0,ls),
(485,0,o),
(501,12,o),
(503,29,qs),
(505,55,o),
(510,126,o),
(515,198,o),
(519,261,o),
(519,279,qs),
(519,290,o),
(505,299,o),
(500,299,qs),
(488,299,o),
(482,272,o),
(482,249,qs),
(482,239,o),
(478,184,o),
(474,124,o),
(470,73,o),
(469,67,qs),
(467,50,o),
(446,36,o),
(429,36,qs),
(188,36,l),
(188,766,ls),
(188,775,o),
(206,786,o),
(228,790,o),
(250,791,o),
(255,791,qs),
(267,791,o),
(292,795,o),
(292,806,qs),
(292,814,o),
(273,821,o),
(241,821,qs),
(59,821,ls),
(50,821,o),
(22,817,o),
(22,806,qs),
(22,796,o),
(48,791,o),
(59,791,qs),
(69,791,o),
(98,789,o),
(123,781,o),
(141,767,o),
(141,754,qs),
(141,724,o),
(143,661,o),
(145,583,o),
(147,483,o),
(147,416,qs),
(147,369,o),
(146,254,o),
(146,150,o),
(145,70,o),
(145,58,qs),
(145,47,o),
(128,35,o),
(102,29,o),
(69,28,o),
(53,28,qs),
(18,28,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 5 1 4 1 5 4 104 7 1 0 4 6 4 0 96 3 1 1 1 2 83 0 2 2 12 67 0 4 4 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 5 1 4 1 5 4 104 7 1 0 4 6 4 0 96 3 1 1 1 2 83 0 2 2 14 67 0 4 4 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
2 0 64 61 52 50 41 39 35 32 28 25 21 18 0 67 2 67 8 15
CALL[ ]	/* CallFunction */";
};
width = 542;
}
);
note = L;
unicode = 76;
},
{
glyphname = Lacute;
kernLeft = B;
kernRight = L;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(277,972,o),
(257,972,qs),
(243,972,o),
(204,948,o),
(169,916,o),
(144,881,o),
(144,871,qs),
(144,859,o),
(163,840,o),
(179,840,qs),
(192,840,o),
(232,859,o),
(270,887,o),
(298,921,o),
(298,935,qs),
(298,949,o)
);
},
{
closed = 1;
nodes = (
(12,58,o),
(12,34,qs),
(12,20,o),
(32,0,o),
(66,0,qs),
(505,0,ls),
(520,0,o),
(536,12,o),
(538,29,qs),
(543,98,o),
(549,187,o),
(552,241,o),
(553,267,o),
(553,274,qs),
(553,315,o),
(515,315,qs),
(486,315,o),
(472,288,o),
(472,265,qs),
(472,257,o),
(468,212,o),
(464,162,o),
(460,119,o),
(459,115,qs),
(455,98,o),
(433,84,o),
(419,84,qs),
(229,84,l),
(229,720,ls),
(229,739,o),
(254,759,o),
(296,759,qs),
(308,759,o),
(334,771,o),
(334,790,qs),
(334,807,o),
(315,821,o),
(283,821,qs),
(63,821,ls),
(46,821,o),
(21,807,o),
(21,786,qs),
(21,764,o),
(44,750,o),
(63,749,qs),
(73,749,o),
(96,745,o),
(117,736,o),
(131,722,o),
(131,712,qs),
(131,685,o),
(133,631,o),
(135,563,o),
(137,476,o),
(137,416,qs),
(137,373,o),
(136,280,o),
(136,198,o),
(135,137,o),
(135,126,qs),
(135,103,o),
(102,80,o),
(77,77,qs),
(45,73,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 1 0 1 106 0 0 3 0 106 0 6 2 5 2 6 5 104 4 1 2 2 3 83 0 3 3 12 67 0 5 5 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 0 0 3 0 106 0 2 4 6 4 2 96 0 6 5 4 6 5 102 0 4 4 3 83 0 3 3 12 67 0 5 5 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 0 0 3 0 106 0 2 4 6 4 2 96 0 6 5 4 6 5 102 0 4 4 3 83 0 3 3 14 67 0 5 5 7 84 0 7 7 13 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
75 72 64 62 53 51 48 46 42 39 35 33 38 36 8 17
CALL[ ]	/* CallFunction */";
};
width = 581;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(231,972,o),
(216,972,qs),
(205,972,o),
(169,950,o),
(135,919,o),
(110,887,o),
(110,877,qs),
(110,867,o),
(123,854,o),
(134,854,qs),
(144,854,o),
(183,872,o),
(220,899,o),
(248,929,o),
(248,941,qs),
(248,955,o)
);
},
{
closed = 1;
nodes = (
(32,39,o),
(32,24,qs),
(32,19,o),
(39,0,o),
(56,0,qs),
(494,0,ls),
(509,0,o),
(525,12,o),
(527,29,qs),
(529,55,o),
(534,128,o),
(539,201,o),
(543,266,o),
(543,284,qs),
(543,298,o),
(523,309,o),
(509,309,qs),
(487,309,o),
(476,282,o),
(476,259,qs),
(476,251,o),
(472,202,o),
(468,148,o),
(464,102,o),
(463,97,qs),
(460,80,o),
(438,66,o),
(423,66,qs),
(212,66,l),
(212,746,ls),
(212,755,o),
(233,766,o),
(259,770,o),
(284,771,o),
(289,771,qs),
(301,771,o),
(326,780,o),
(326,796,qs),
(326,810,o),
(307,821,o),
(275,821,qs),
(73,821,ls),
(64,821,o),
(36,813,o),
(36,796,qs),
(36,779,o),
(62,771,o),
(73,771,qs),
(80,771,o),
(101,769,o),
(121,762,o),
(135,747,o),
(135,734,qs),
(135,705,o),
(137,646,o),
(139,573,o),
(141,479,o),
(141,416,qs),
(141,371,o),
(140,263,o),
(140,165,o),
(139,90,o),
(139,78,qs),
(139,67,o),
(125,55,o),
(103,49,o),
(78,48,o),
(67,48,qs),
(50,48,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 1 0 1 106 0 0 4 0 106 0 7 3 6 3 7 6 104 9 1 2 6 8 6 2 96 5 1 3 3 4 83 0 4 4 12 67 0 6 6 8 84 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 0 1 106 0 0 4 0 106 0 7 3 6 3 7 6 104 9 1 2 6 8 6 2 96 5 1 3 3 4 83 0 4 4 14 67 0 6 6 8 84 0 8 8 13 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
18 16 80 77 68 66 57 55 51 48 44 41 37 35 16 84 18 84 38 36 10 17
CALL[ ]	/* CallFunction */";
};
width = 565;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(208,971,o),
(200,971,qs),
(193,971,o),
(161,951,o),
(129,924,o),
(105,895,o),
(105,886,qs),
(105,875,o),
(113,875,qs),
(120,875,o),
(155,892,o),
(191,916,o),
(219,941,o),
(219,949,qs),
(219,963,o)
);
},
{
closed = 1;
nodes = (
(18,11,qs),
(18,6,o),
(25,0,o),
(42,0,qs),
(470,0,ls),
(485,0,o),
(501,12,o),
(503,29,qs),
(505,55,o),
(510,126,o),
(515,198,o),
(519,261,o),
(519,279,qs),
(519,290,o),
(505,299,o),
(500,299,qs),
(488,299,o),
(482,272,o),
(482,249,qs),
(482,239,o),
(478,184,o),
(474,124,o),
(470,73,o),
(469,67,qs),
(467,50,o),
(446,36,o),
(429,36,qs),
(188,36,l),
(188,766,ls),
(188,775,o),
(206,786,o),
(228,790,o),
(250,791,o),
(255,791,qs),
(267,791,o),
(292,795,o),
(292,806,qs),
(292,814,o),
(273,821,o),
(241,821,qs),
(59,821,ls),
(50,821,o),
(22,817,o),
(22,806,qs),
(22,796,o),
(48,791,o),
(59,791,qs),
(69,791,o),
(98,789,o),
(123,781,o),
(141,767,o),
(141,754,qs),
(141,724,o),
(143,661,o),
(145,583,o),
(147,483,o),
(147,416,qs),
(147,369,o),
(146,254,o),
(146,150,o),
(145,70,o),
(145,58,qs),
(145,47,o),
(128,35,o),
(102,29,o),
(69,28,o),
(53,28,qs),
(18,28,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 1 0 1 106 0 0 4 0 106 0 7 3 6 3 7 6 104 9 1 2 6 8 6 2 96 5 1 3 3 4 83 0 4 4 12 67 0 6 6 8 84 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 0 1 106 0 0 4 0 106 0 7 3 6 3 7 6 104 9 1 2 6 8 6 2 96 5 1 3 3 4 83 0 4 4 14 67 0 6 6 8 84 0 8 8 13 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
17 15 79 76 67 65 56 54 50 47 43 40 36 33 15 82 17 82 37 36 10 17
CALL[ ]	/* CallFunction */";
};
width = 542;
}
);
note = Lacute;
unicode = 313;
},
{
glyphname = Lcaron;
kernLeft = B;
kernRight = L;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(286,965,o),
(251,952,o),
(214,933,o),
(199,922,q),
(184,933,o),
(147,952,o),
(113,965,o),
(85,972,o),
(80,972,qs),
(74,972,o),
(67,963,o),
(67,958,qs),
(67,938,o),
(103,894,o),
(150,855,o),
(193,830,o),
(199,830,qs),
(208,830,o),
(252,856,o),
(298,893,o),
(333,935,o),
(333,951,qs),
(333,958,o),
(327,972,o),
(319,972,qs),
(314,972,o)
);
},
{
closed = 1;
nodes = (
(12,58,o),
(12,34,qs),
(12,20,o),
(32,0,o),
(66,0,qs),
(505,0,ls),
(520,0,o),
(536,12,o),
(538,29,qs),
(543,98,o),
(549,187,o),
(552,241,o),
(553,267,o),
(553,274,qs),
(553,315,o),
(515,315,qs),
(486,315,o),
(472,288,o),
(472,265,qs),
(472,257,o),
(468,212,o),
(464,162,o),
(460,119,o),
(459,115,qs),
(455,98,o),
(433,84,o),
(419,84,qs),
(229,84,l),
(229,720,ls),
(229,739,o),
(254,759,o),
(296,759,qs),
(308,759,o),
(334,771,o),
(334,790,qs),
(334,807,o),
(315,821,o),
(283,821,qs),
(63,821,ls),
(46,821,o),
(21,807,o),
(21,786,qs),
(21,764,o),
(44,750,o),
(63,749,qs),
(73,749,o),
(96,745,o),
(117,736,o),
(131,722,o),
(131,712,qs),
(131,685,o),
(133,631,o),
(135,563,o),
(137,476,o),
(137,416,qs),
(137,373,o),
(136,280,o),
(136,198,o),
(135,137,o),
(135,126,qs),
(135,103,o),
(102,80,o),
(77,77,qs),
(45,73,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
2 9 2 0 1 0 106 0 1 4 1 106 0 7 3 6 3 7 6 104 5 1 3 3 4 83 0 4 4 12 67 0 6 6 8 84 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
2 9 2 0 1 0 106 0 1 4 1 106 0 3 5 7 5 3 96 0 7 6 5 7 6 102 0 5 5 4 83 0 4 4 12 67 0 6 6 8 84 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
2 9 2 0 1 0 106 0 1 4 1 106 0 3 5 7 5 3 96 0 7 6 5 7 6 102 0 5 5 4 83 0 4 4 14 67 0 6 6 8 84 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
1 0 85 82 74 72 63 61 58 56 52 49 45 43 17 15 9 7 0 25 1 25 10 15
CALL[ ]	/* CallFunction */";
};
width = 580;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(273,964,o),
(239,950,o),
(201,931,o),
(184,921,q),
(167,931,o),
(129,950,o),
(96,964,o),
(70,972,o),
(65,972,qs),
(54,972,o),
(54,959,qs),
(54,943,o),
(89,904,o),
(134,870,o),
(176,847,o),
(184,847,qs),
(193,847,o),
(236,871,o),
(281,904,o),
(315,941,o),
(315,955,qs),
(315,962,o),
(310,972,o),
(304,972,qs),
(299,972,o)
);
},
{
closed = 1;
nodes = (
(32,39,o),
(32,24,qs),
(32,19,o),
(39,0,o),
(56,0,qs),
(494,0,ls),
(509,0,o),
(525,12,o),
(527,29,qs),
(529,55,o),
(534,128,o),
(539,201,o),
(543,266,o),
(543,284,qs),
(543,298,o),
(523,309,o),
(509,309,qs),
(487,309,o),
(476,282,o),
(476,259,qs),
(476,251,o),
(472,202,o),
(468,148,o),
(464,102,o),
(463,97,qs),
(460,80,o),
(438,66,o),
(423,66,qs),
(212,66,l),
(212,746,ls),
(212,755,o),
(233,766,o),
(259,770,o),
(284,771,o),
(289,771,qs),
(301,771,o),
(326,780,o),
(326,796,qs),
(326,810,o),
(307,821,o),
(275,821,qs),
(73,821,ls),
(64,821,o),
(36,813,o),
(36,796,qs),
(36,779,o),
(62,771,o),
(73,771,qs),
(80,771,o),
(101,769,o),
(121,762,o),
(135,747,o),
(135,734,qs),
(135,705,o),
(137,646,o),
(139,573,o),
(141,479,o),
(141,416,qs),
(141,371,o),
(140,263,o),
(140,165,o),
(139,90,o),
(139,78,qs),
(139,67,o),
(125,55,o),
(103,49,o),
(78,48,o),
(67,48,qs),
(50,48,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
2 10 2 0 1 0 106 0 1 5 1 106 0 8 4 7 4 8 7 104 11 1 3 7 9 7 3 96 6 1 4 4 5 83 0 5 5 12 67 0 7 7 9 84 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
2 10 2 0 1 0 106 0 1 5 1 106 0 8 4 7 4 8 7 104 11 1 3 7 9 7 3 96 6 1 4 4 5 83 0 5 5 14 67 0 7 7 9 84 0 9 9 13 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
27 25 1 0 89 86 77 75 66 64 60 57 53 50 46 44 25 93 27 93 16 14 9 7 0 24 1 24 12 15
CALL[ ]	/* CallFunction */";
};
width = 565;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(19,11,qs),
(19,6,o),
(26,0,o),
(43,0,qs),
(471,0,ls),
(486,0,o),
(502,12,o),
(504,29,qs),
(506,55,o),
(511,126,o),
(516,198,o),
(520,261,o),
(520,279,qs),
(520,290,o),
(506,299,o),
(501,299,qs),
(489,299,o),
(483,272,o),
(483,249,qs),
(483,239,o),
(479,184,o),
(475,124,o),
(471,73,o),
(470,67,qs),
(468,50,o),
(447,36,o),
(430,36,qs),
(189,36,l),
(189,736,ls),
(189,745,o),
(207,756,o),
(229,760,o),
(251,761,o),
(256,761,qs),
(268,761,o),
(293,765,o),
(293,776,qs),
(293,784,o),
(274,791,o),
(242,791,qs),
(60,791,ls),
(51,791,o),
(23,787,o),
(23,776,qs),
(23,766,o),
(49,761,o),
(60,761,qs),
(70,761,o),
(99,759,o),
(124,751,o),
(142,737,o),
(142,724,qs),
(142,694,o),
(144,640,o),
(146,573,o),
(148,483,o),
(148,416,qs),
(148,369,o),
(147,254,o),
(147,150,o),
(146,70,o),
(146,58,qs),
(146,47,o),
(129,35,o),
(103,29,o),
(70,28,o),
(54,28,qs),
(19,28,o)
);
},
{
closed = 1;
nodes = (
(254,962,o),
(222,946,o),
(183,928,o),
(162,919,q),
(141,928,o),
(102,946,o),
(71,962,o),
(48,972,o),
(43,972,qs),
(35,972,o),
(35,961,qs),
(35,952,o),
(68,922,o),
(112,895,o),
(153,875,o),
(162,875,qs),
(171,875,o),
(214,895,o),
(257,922,o),
(290,952,o),
(290,961,qs),
(290,972,o),
(282,972,qs),
(277,972,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
87 1 8 7 1 66 9 11 2 7 8 7 106 0 8 2 8 106 0 5 1 4 1 5 4 104 10 1 0 4 6 4 0 96 0 2 3 1 1 5 2 1 91 0 4 4 6 84 0 6 6 13 6 68 69 68 2 0 83 81 76 74 68 91 69 91 64 61 52 50 41 39 35 32 28 25 21 18 0 67 2 67 12 15
CALL[ ]	/* CallFunction */";
};
width = 543;
}
);
note = Lcaron;
unicode = 317;
},
{
glyphname = Lcommaaccent;
kernLeft = B;
kernRight = L;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(260,-133,o),
(274,-143,o),
(285,-152,o),
(285,-158,qs),
(285,-188,o),
(270,-217,o),
(270,-227,qs),
(270,-244,o),
(291,-250,o),
(296,-250,qs),
(302,-250,o),
(329,-235,o),
(356,-206,o),
(377,-161,o),
(377,-131,qs),
(377,-88,o),
(333,-50,o),
(309,-50,qs),
(276,-50,o),
(249,-87,o),
(249,-108,qs),
(249,-120,o)
);
},
{
closed = 1;
nodes = (
(12,58,o),
(12,34,qs),
(12,20,o),
(32,0,o),
(66,0,qs),
(505,0,ls),
(520,0,o),
(536,12,o),
(538,29,qs),
(543,98,o),
(549,187,o),
(552,241,o),
(553,267,o),
(553,274,qs),
(553,315,o),
(515,315,qs),
(486,315,o),
(472,288,o),
(472,265,qs),
(472,257,o),
(468,212,o),
(464,162,o),
(460,119,o),
(459,115,qs),
(455,98,o),
(433,84,o),
(419,84,qs),
(229,84,l),
(229,720,ls),
(229,739,o),
(254,759,o),
(296,759,qs),
(308,759,o),
(334,771,o),
(334,790,qs),
(334,807,o),
(315,821,o),
(283,821,qs),
(63,821,ls),
(46,821,o),
(21,807,o),
(21,786,qs),
(21,764,o),
(44,750,o),
(63,749,qs),
(73,749,o),
(96,745,o),
(117,736,o),
(131,722,o),
(131,712,qs),
(131,685,o),
(133,631,o),
(135,563,o),
(137,476,o),
(137,416,qs),
(137,373,o),
(136,280,o),
(136,198,o),
(135,137,o),
(135,126,qs),
(135,103,o),
(102,80,o),
(77,77,qs),
(45,73,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 6 2 5 2 6 5 104 4 1 2 2 3 83 0 3 3 12 67 0 5 5 7 84 0 7 7 13 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 6 2 5 2 6 5 104 0 0 0 1 0 1 87 4 1 2 2 3 83 0 3 3 12 67 0 5 5 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 4 6 4 2 96 0 6 5 4 6 5 102 0 0 0 1 0 1 87 0 4 4 3 83 0 3 3 12 67 0 5 5 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 2 4 6 4 2 96 0 6 5 4 6 5 102 0 0 0 1 0 1 87 0 4 4 3 83 0 3 3 14 67 0 5 5 7 84 0 7 7 13 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
81 78 70 68 59 57 54 52 48 45 41 39 38 34 8 17
CALL[ ]	/* CallFunction */";
};
width = 581;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (32,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = L;
},
{
alignment = -1;
pos = (205,-141);
ref = comma;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 5 1 4 1 5 4 104 9 1 0 4 6 4 0 96 3 1 1 1 2 83 0 2 2 12 67 0 4 4 6 84 0 6 6 13 67 0 7 7 8 83 0 8 8 25 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 5 1 4 1 5 4 104 9 1 0 4 6 4 0 96 0 7 0 8 7 8 87 3 1 1 1 2 83 0 2 2 12 67 0 4 4 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 5 1 4 1 5 4 104 9 1 0 4 6 4 0 96 0 7 0 8 7 8 87 3 1 1 1 2 83 0 2 2 14 67 0 4 4 6 84 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
3 1 82 80 74 72 65 62 53 51 42 40 36 33 29 26 22 20 1 69 3 69 10 26
CALL[ ]	/* CallFunction */";
};
width = 565;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(264,-126,o),
(278,-133,o),
(289,-140,o),
(289,-146,qs),
(289,-156,o),
(278,-185,o),
(278,-192,qs),
(278,-197,o),
(287,-204,o),
(292,-204,qs),
(302,-204,o),
(319,-187,o),
(329,-162,o),
(335,-135,o),
(335,-125,qs),
(335,-91,o),
(308,-68,o),
(293,-68,qs),
(273,-68,o),
(253,-89,o),
(253,-102,qs),
(253,-114,o)
);
},
{
closed = 1;
nodes = (
(18,11,qs),
(18,6,o),
(25,0,o),
(42,0,qs),
(470,0,ls),
(485,0,o),
(501,12,o),
(503,29,qs),
(505,55,o),
(510,126,o),
(515,198,o),
(519,261,o),
(519,279,qs),
(519,290,o),
(505,299,o),
(500,299,qs),
(488,299,o),
(482,272,o),
(482,249,qs),
(482,239,o),
(478,184,o),
(474,124,o),
(470,73,o),
(469,67,qs),
(467,50,o),
(446,36,o),
(429,36,qs),
(188,36,l),
(188,766,ls),
(188,775,o),
(206,786,o),
(228,790,o),
(250,791,o),
(255,791,qs),
(267,791,o),
(292,795,o),
(292,806,qs),
(292,814,o),
(273,821,o),
(241,821,qs),
(59,821,ls),
(50,821,o),
(22,817,o),
(22,806,qs),
(22,796,o),
(48,791,o),
(59,791,qs),
(69,791,o),
(98,789,o),
(123,781,o),
(141,767,o),
(141,754,qs),
(141,724,o),
(143,661,o),
(145,583,o),
(147,483,o),
(147,416,qs),
(147,369,o),
(146,254,o),
(146,150,o),
(145,70,o),
(145,58,qs),
(145,47,o),
(128,35,o),
(102,29,o),
(69,28,o),
(53,28,qs),
(18,28,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 7 3 6 3 7 6 104 9 1 2 6 8 6 2 96 5 1 3 3 4 83 0 4 4 12 67 0 6 6 8 83 0 8 8 13 67 0 0 0 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 7 3 6 3 7 6 104 9 1 2 6 8 6 2 96 0 0 0 1 0 1 87 5 1 3 3 4 83 0 4 4 12 67 0 6 6 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 7 3 6 3 7 6 104 9 1 2 6 8 6 2 96 0 0 0 1 0 1 87 5 1 3 3 4 83 0 4 4 14 67 0 6 6 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
24 22 86 83 74 72 63 61 57 54 50 47 43 40 22 89 24 89 38 34 10 17
CALL[ ]	/* CallFunction */";
};
width = 542;
}
);
note = Lcommaaccent;
unicode = 315;
},
{
glyphname = Ldot;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(12,58,o),
(12,34,qs),
(12,20,o),
(32,0,o),
(66,0,qs),
(505,0,ls),
(520,0,o),
(536,12,o),
(538,29,qs),
(543,98,o),
(549,187,o),
(552,241,o),
(553,267,o),
(553,274,qs),
(553,315,o),
(515,315,qs),
(486,315,o),
(472,288,o),
(472,265,qs),
(472,257,o),
(468,212,o),
(464,162,o),
(460,119,o),
(459,115,qs),
(455,98,o),
(433,84,o),
(419,84,qs),
(229,84,l),
(229,720,ls),
(229,739,o),
(254,759,o),
(296,759,qs),
(308,759,o),
(334,771,o),
(334,790,qs),
(334,807,o),
(315,821,o),
(283,821,qs),
(63,821,ls),
(46,821,o),
(21,807,o),
(21,786,qs),
(21,764,o),
(44,750,o),
(63,749,qs),
(73,749,o),
(96,745,o),
(117,736,o),
(131,722,o),
(131,712,qs),
(131,685,o),
(133,631,o),
(135,563,o),
(137,476,o),
(137,416,qs),
(137,373,o),
(136,280,o),
(136,198,o),
(135,137,o),
(135,126,qs),
(135,103,o),
(102,80,o),
(77,77,qs),
(45,73,o)
);
},
{
closed = 1;
nodes = (
(335,295,o),
(360,295,qs),
(371,295,o),
(395,301,o),
(414,317,o),
(427,344,o),
(427,365,qs),
(427,392,o),
(391,426,o),
(367,426,qs),
(349,426,o),
(324,413,o),
(308,394,o),
(301,371,o),
(301,361,qs),
(301,329,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 4 6 7 6 4 7 104 2 1 0 0 1 83 0 1 1 12 67 0 7 7 6 83 0 6 6 15 67 0 3 3 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 4 6 7 6 4 7 104 0 6 0 7 3 6 7 91 2 1 0 0 1 83 0 1 1 12 67 0 3 3 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 0 2 6 2 0 96 0 4 6 7 6 4 7 104 0 6 0 7 3 6 7 91 0 2 2 1 83 0 1 1 12 67 0 3 3 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 0 2 6 2 0 96 0 4 6 7 6 4 7 104 0 6 0 7 3 6 7 91 0 2 2 1 83 0 1 1 14 67 0 3 3 5 84 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
78 76 70 68 59 56 48 46 37 35 32 30 26 23 19 17 8 15
CALL[ ]	/* CallFunction */";
};
width = 577;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (32,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = L;
},
{
alignment = -1;
pos = (285,-219);
ref = dotaccent;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 5 7 8 7 5 8 104 9 1 0 4 6 4 0 96 3 1 1 1 2 83 0 2 2 12 67 0 8 8 7 83 0 7 7 15 67 0 4 4 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 5 7 8 7 5 8 104 9 1 0 4 6 4 0 96 0 7 0 8 4 7 8 91 3 1 1 1 2 83 0 2 2 12 67 0 4 4 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 5 7 8 7 5 8 104 9 1 0 4 6 4 0 96 0 7 0 8 4 7 8 91 3 1 1 1 2 83 0 2 2 14 67 0 4 4 6 84 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
3 1 82 80 76 74 65 62 53 51 42 40 36 33 29 26 22 20 1 69 3 69 10 26
CALL[ ]	/* CallFunction */";
};
width = 562;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(312,319,o),
(335,319,qs),
(357,319,o),
(380,344,o),
(380,359,qs),
(380,373,o),
(360,397,o),
(337,397,qs),
(313,397,o),
(293,370,o),
(293,357,qs),
(293,344,o)
);
},
{
closed = 1;
nodes = (
(18,11,qs),
(18,6,o),
(25,0,o),
(42,0,qs),
(470,0,ls),
(485,0,o),
(501,12,o),
(503,29,qs),
(505,55,o),
(510,126,o),
(515,198,o),
(519,261,o),
(519,279,qs),
(519,290,o),
(505,299,o),
(500,299,qs),
(488,299,o),
(482,272,o),
(482,249,qs),
(482,239,o),
(478,184,o),
(474,124,o),
(470,73,o),
(469,67,qs),
(467,50,o),
(446,36,o),
(429,36,qs),
(188,36,l),
(188,766,ls),
(188,775,o),
(206,786,o),
(228,790,o),
(250,791,o),
(255,791,qs),
(267,791,o),
(292,795,o),
(292,806,qs),
(292,814,o),
(273,821,o),
(241,821,qs),
(59,821,ls),
(50,821,o),
(22,817,o),
(22,806,qs),
(22,796,o),
(48,791,o),
(59,791,qs),
(69,791,o),
(98,789,o),
(123,781,o),
(141,767,o),
(141,754,qs),
(141,724,o),
(143,661,o),
(145,583,o),
(147,483,o),
(147,416,qs),
(147,369,o),
(146,254,o),
(146,150,o),
(145,70,o),
(145,58,qs),
(145,47,o),
(128,35,o),
(102,29,o),
(69,28,o),
(53,28,qs),
(18,28,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 7 1 6 1 7 6 104 9 1 2 6 8 6 2 96 0 0 0 1 7 0 1 91 5 1 3 3 4 83 0 4 4 12 67 0 6 6 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 7 1 6 1 7 6 104 9 1 2 6 8 6 2 96 0 0 0 1 7 0 1 91 5 1 3 3 4 83 0 4 4 14 67 0 6 6 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
14 12 76 73 64 62 53 51 47 44 40 37 33 30 12 79 14 79 36 34 10 17
CALL[ ]	/* CallFunction */";
};
width = 541;
}
);
note = Ldot;
unicode = 319;
},
{
glyphname = Lslash;
kernLeft = B;
kernRight = L;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(16,58,o),
(16,34,qs),
(16,20,o),
(36,0,o),
(70,0,qs),
(509,0,ls),
(524,0,o),
(540,12,o),
(542,29,qs),
(547,98,o),
(553,187,o),
(556,241,o),
(557,267,o),
(557,274,qs),
(557,315,o),
(519,315,qs),
(490,315,o),
(476,288,o),
(476,265,qs),
(476,257,o),
(472,212,o),
(468,162,o),
(464,119,o),
(463,115,qs),
(459,98,o),
(437,84,o),
(423,84,qs),
(233,84,l),
(233,387,l),
(357,434,ls),
(374,440,o),
(386,464,o),
(386,475,qs),
(386,492,o),
(363,518,o),
(347,518,qs),
(338,518,o),
(274,496,o),
(233,481,q),
(233,720,ls),
(233,739,o),
(258,759,o),
(300,759,qs),
(312,759,o),
(338,771,o),
(338,790,qs),
(338,807,o),
(319,821,o),
(287,821,qs),
(67,821,ls),
(50,821,o),
(25,807,o),
(25,786,qs),
(25,764,o),
(48,750,o),
(67,749,qs),
(77,749,o),
(100,745,o),
(121,736,o),
(135,722,o),
(135,712,qs),
(135,686,o),
(137,636,o),
(139,575,o),
(141,498,o),
(141,446,q),
(67,419,ls),
(52,414,o),
(41,392,o),
(41,381,qs),
(41,368,o),
(64,339,o),
(84,339,qs),
(89,339,o),
(120,347,o),
(141,355,q),
(141,317,o),
(140,243,o),
(139,181,o),
(139,135,o),
(139,126,qs),
(139,103,o),
(106,80,o),
(81,77,qs),
(49,73,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
55 45 18 8 4 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 4 1 0 1 4 0 104 0 0 6 1 0 6 102 0 6 5 1 6 5 102 3 1 1 1 2 83 0 2 2 12 67 0 5 5 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 3 4 3 1 96 0 4 0 3 4 0 102 0 0 6 3 0 6 102 0 6 5 3 6 5 102 0 3 3 2 83 0 2 2 12 67 0 5 5 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 1 3 4 3 1 96 0 4 0 3 4 0 102 0 0 6 3 0 6 102 0 6 5 3 6 5 102 0 3 3 2 83 0 2 2 14 67 0 5 5 7 84 0 7 7 13 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
56 41 39 37 36 52 47 42 8 23
CALL[ ]	/* CallFunction */";
};
width = 586;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(309,441,o),
(271,440,o),
(227,439,o),
(198,439,qs),
(162,439,o),
(87,441,o),
(67,441,qs),
(50,441,o),
(35,419,o),
(35,409,qs),
(35,399,o),
(54,376,o),
(67,376,qs),
(92,376,o),
(164,376,o),
(243,377,o),
(318,377,o),
(346,377,qs),
(368,377,o),
(383,404,o),
(383,412,qs),
(383,423,o),
(367,442,o),
(358,442,qs),
(341,442,o)
);
},
{
closed = 1;
nodes = (
(34,39,o),
(34,24,qs),
(34,19,o),
(41,0,o),
(58,0,qs),
(496,0,ls),
(511,0,o),
(527,12,o),
(529,29,qs),
(531,55,o),
(536,128,o),
(541,201,o),
(545,266,o),
(545,284,qs),
(545,298,o),
(525,309,o),
(511,309,qs),
(489,309,o),
(478,282,o),
(478,259,qs),
(478,251,o),
(474,202,o),
(470,148,o),
(466,102,o),
(465,97,qs),
(462,80,o),
(440,66,o),
(425,66,qs),
(214,66,l),
(214,746,ls),
(214,755,o),
(235,766,o),
(261,770,o),
(286,771,o),
(291,771,qs),
(303,771,o),
(328,780,o),
(328,796,qs),
(328,810,o),
(309,821,o),
(277,821,qs),
(75,821,ls),
(66,821,o),
(38,813,o),
(38,796,qs),
(38,779,o),
(64,771,o),
(75,771,qs),
(82,771,o),
(103,769,o),
(123,762,o),
(137,747,o),
(137,734,qs),
(137,705,o),
(139,646,o),
(141,573,o),
(143,479,o),
(143,416,qs),
(143,371,o),
(142,263,o),
(142,165,o),
(141,90,o),
(141,78,qs),
(141,67,o),
(127,55,o),
(105,49,o),
(80,48,o),
(69,48,qs),
(52,48,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 7 1 6 1 7 6 104 10 1 2 6 8 6 2 96 5 1 3 3 4 83 0 4 4 12 67 0 1 1 0 83 9 1 0 0 15 67 0 6 6 8 84 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 1 6 1 7 6 104 10 1 2 6 8 6 2 96 9 1 0 0 1 7 0 1 91 5 1 3 3 4 83 0 4 4 12 67 0 6 6 8 84 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 7 1 6 1 7 6 104 10 1 2 6 8 6 2 96 9 1 0 0 1 7 0 1 91 5 1 3 3 4 83 0 4 4 14 67 0 6 6 8 84 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
27 25 1 0 89 86 77 75 66 64 60 57 53 50 46 44 25 93 27 93 12 5 0 24 1 16 11 15
CALL[ ]	/* CallFunction */";
};
width = 567;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(16,11,qs),
(16,6,o),
(23,0,o),
(40,0,qs),
(468,0,ls),
(483,0,o),
(499,12,o),
(501,29,qs),
(503,55,o),
(508,126,o),
(513,198,o),
(517,261,o),
(517,279,qs),
(517,290,o),
(503,299,o),
(498,299,qs),
(486,299,o),
(480,272,o),
(480,249,qs),
(480,239,o),
(476,184,o),
(472,124,o),
(468,73,o),
(467,67,qs),
(465,50,o),
(444,36,o),
(427,36,qs),
(186,36,l),
(186,391,l),
(223,391,o),
(293,392,o),
(319,392,qs),
(335,392,o),
(346,407,o),
(346,412,qs),
(346,417,o),
(336,427,o),
(331,427,qs),
(299,427,o),
(236,424,o),
(186,424,q),
(186,766,ls),
(186,775,o),
(204,786,o),
(226,790,o),
(248,791,o),
(253,791,qs),
(265,791,o),
(290,795,o),
(290,806,qs),
(290,814,o),
(271,821,o),
(239,821,qs),
(57,821,ls),
(48,821,o),
(20,817,o),
(20,806,qs),
(20,796,o),
(46,791,o),
(57,791,qs),
(67,791,o),
(96,789,o),
(121,781,o),
(139,767,o),
(139,754,qs),
(139,724,o),
(141,662,o),
(143,586,o),
(145,489,o),
(145,424,q),
(114,424,o),
(57,426,o),
(40,426,qs),
(29,426,o),
(18,414,o),
(18,409,qs),
(18,404,o),
(31,391,o),
(40,391,qs),
(145,391,l),
(145,344,o),
(144,237,o),
(144,141,o),
(143,70,o),
(143,58,qs),
(143,47,o),
(126,35,o),
(100,29,o),
(67,28,o),
(51,28,qs),
(16,28,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 9 1 8 1 9 8 104 11 1 0 8 10 8 0 96 5 1 3 3 4 83 0 4 4 12 67 7 1 1 1 2 83 6 1 2 2 15 67 0 8 8 10 83 0 10 10 13 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 9 1 8 1 9 8 104 11 1 0 8 10 8 0 96 6 1 2 7 1 1 9 2 1 91 5 1 3 3 4 83 0 4 4 12 67 0 8 8 10 83 0 10 10 13 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 9 1 8 1 9 8 104 11 1 0 8 10 8 0 96 6 1 2 7 1 1 9 2 1 91 5 1 3 3 4 83 0 4 4 14 67 0 8 8 10 83 0 10 10 13 10 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
2 0 87 84 75 73 64 62 61 57 53 49 45 42 38 35 31 28 20 16 12 10 0 90 2 90 12 15
CALL[ ]	/* CallFunction */";
};
width = 540;
}
);
note = Lslash;
unicode = 321;
},
{
glyphname = M;
kernLeft = M;
kernRight = M;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1032,734,o),
(1032,752,qs),
(1032,771,o),
(1003,781,o),
(980,781,qs),
(840,781,ls),
(809,781,o),
(772,779,o),
(751,770,o),
(741,753,o),
(736,738,qs),
(725,703,o),
(692,603,o),
(653,487,o),
(611,363,o),
(571,246,o),
(535,144,o),
(522,108,q),
(506,144,o),
(460,252,o),
(408,376,o),
(354,508,o),
(306,628,o),
(268,726,o),
(258,756,qs),
(249,783,o),
(227,801,o),
(214,801,qs),
(116,801,ls),
(56,801,o),
(8,787,o),
(8,765,qs),
(8,749,o),
(27,733,o),
(54,726,o),
(87,723,o),
(114,717,o),
(133,702,o),
(133,686,qs),
(133,608,o),
(136,465,o),
(136,383,qs),
(136,333,o),
(135,265,o),
(132,209,o),
(129,157,o),
(128,123,qs),
(126,92,o),
(111,66,o),
(93,64,qs),
(63,60,o),
(24,48,o),
(24,28,qs),
(24,11,o),
(40,0,o),
(58,0,qs),
(311,0,ls),
(334,0,o),
(351,18,o),
(351,29,qs),
(351,52,o),
(321,63,o),
(301,63,qs),
(228,63,l),
(228,607,l),
(238,577,o),
(273,488,o),
(315,385,o),
(362,273,o),
(406,164,o),
(445,67,o),
(458,30,qs),
(460,25,o),
(468,5,o),
(481,-14,o),
(501,-28,o),
(515,-28,qs),
(538,-28,o),
(568,-10,o),
(577,18,qs),
(586,46,o),
(627,156,o),
(681,304,o),
(745,482,o),
(778,580,q),
(778,84,ls),
(778,50,o),
(756,29,o),
(735,26,qs),
(708,22,o),
(677,8,o),
(677,-7,qs),
(677,-17,o),
(680,-30,o),
(690,-38,o),
(711,-41,o),
(728,-41,qs),
(969,-41,ls),
(994,-41,o),
(1009,-21,o),
(1009,-7,qs),
(1009,10,o),
(986,22,o),
(959,22,qs),
(875,22,l),
(875,42,o),
(873,128,o),
(872,232,o),
(870,339,o),
(870,380,qs),
(870,433,o),
(871,516,o),
(873,581,o),
(874,631,o),
(874,652,qs),
(874,671,o),
(885,697,o),
(905,699,qs),
(927,703,o),
(966,705,o),
(987,707,qs),
(1009,709,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
103 56 36 3 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 7 0 0 4 7 0 91 0 1 3 1 2 1 2 87 0 6 6 14 67 0 4 4 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 7 0 0 4 7 0 91 0 1 0 2 1 2 87 0 6 6 14 67 0 4 4 5 84 0 5 5 13 67 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 6 7 6 106 0 7 0 0 4 7 0 91 0 1 0 2 1 2 87 0 4 4 5 84 0 5 5 13 67 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 6 7 6 106 0 3 5 2 5 3 2 104 0 7 0 0 4 7 0 91 0 1 0 2 1 2 87 0 4 4 5 84 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
117 113 94 91 66 63 59 57 45 43 52 46 17 8 18
CALL[ ]	/* CallFunction */";
};
width = 1057;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(1036,741,o),
(1036,758,qs),
(1036,775,o),
(1007,781,o),
(991,781,qs),
(843,781,ls),
(815,781,o),
(787,778,o),
(772,769,o),
(764,753,o),
(757,739,q),
(744,703,o),
(706,597,o),
(662,474,o),
(616,342,o),
(571,218,o),
(532,111,o),
(518,74,q),
(506,111,o),
(462,225,o),
(408,358,o),
(351,498,o),
(299,626,o),
(260,731,o),
(251,761,qs),
(243,788,o),
(228,801,o),
(214,801,qs),
(89,801,ls),
(60,801,o),
(31,792,o),
(31,775,qs),
(31,759,o),
(64,752,o),
(104,748,o),
(137,734,o),
(137,712,qs),
(137,631,o),
(140,469,o),
(140,383,qs),
(140,308,o),
(136,162,o),
(131,94,qs),
(131,77,o),
(120,58,o),
(105,49,o),
(89,48,o),
(83,48,qs),
(74,48,o),
(54,40,o),
(54,23,qs),
(54,8,o),
(81,0,o),
(95,0,qs),
(321,0,ls),
(331,0,o),
(341,14,o),
(341,23,qs),
(341,40,o),
(322,51,o),
(311,51,qs),
(211,51,l),
(211,650,l),
(222,619,o),
(261,522,o),
(309,407,o),
(362,281,o),
(412,161,o),
(454,54,o),
(468,16,qs),
(470,11,o),
(477,-4,o),
(489,-18,o),
(504,-28,o),
(515,-28,qs),
(543,-28,o),
(555,7,qs),
(565,37,o),
(612,164,o),
(674,334,o),
(746,531,o),
(782,632,q),
(782,53,ls),
(782,36,o),
(774,17,o),
(762,8,o),
(748,7,o),
(743,7,qs),
(734,7,o),
(714,0,o),
(714,-15,qs),
(714,-32,o),
(741,-41,o),
(755,-41,qs),
(980,-41,ls),
(1000,-41,o),
(1000,-15,qs),
(1000,0,o),
(981,10,o),
(970,10,qs),
(858,10,l),
(858,31,o),
(856,120,o),
(855,227,o),
(853,337,o),
(853,380,qs),
(853,491,o),
(857,635,o),
(857,678,qs),
(857,694,o),
(866,723,o),
(888,725,qs),
(919,728,o),
(967,730,o),
(998,733,q),
(1013,737,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
97 72 52 33 4 5 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 9 0 0 5 9 0 91 3 1 1 0 2 1 2 87 0 8 8 14 67 7 1 5 5 6 84 0 6 6 13 67 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 8 9 8 106 0 9 0 0 5 9 0 91 3 1 1 0 2 1 2 87 7 1 5 5 6 84 0 6 6 13 67 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 8 9 8 106 0 4 6 2 6 4 2 104 0 9 0 0 5 9 0 91 3 1 1 0 2 1 2 87 7 1 5 5 6 84 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
111 108 88 85 52 52 44 43 36 51 44 17 10 23
CALL[ ]	/* CallFunction */";
};
width = 1033;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(1002,768,qs),
(1002,778,o),
(983,781,o),
(967,781,qs),
(831,781,ls),
(813,781,o),
(795,778,o),
(785,769,o),
(780,753,o),
(775,739,qs),
(762,701,o),
(719,591,o),
(668,463,o),
(614,325,o),
(562,196,o),
(518,84,o),
(504,45,q),
(492,84,o),
(445,203,o),
(386,341,o),
(323,487,o),
(267,621,o),
(223,730,o),
(213,761,qs),
(205,788,o),
(190,801,o),
(176,801,qs),
(65,801,ls),
(61,801,o),
(45,800,o),
(29,797,o),
(17,788,o),
(17,781,qs),
(17,770,o),
(56,767,o),
(104,765,o),
(143,756,o),
(143,738,qs),
(143,652,o),
(146,474,o),
(146,383,qs),
(146,302,o),
(142,146,o),
(137,74,qs),
(137,57,o),
(123,38,o),
(103,29,o),
(79,28,o),
(69,28,qs),
(60,28,o),
(40,22,o),
(40,13,qs),
(40,5,o),
(67,0,o),
(81,0,qs),
(293,0,ls),
(313,0,o),
(313,13,qs),
(313,21,o),
(294,31,o),
(283,31,qs),
(187,31,l),
(187,704,l),
(199,672,o),
(244,564,o),
(300,433,o),
(361,288,o),
(419,152,o),
(467,33,o),
(482,-7,qs),
(489,-28,o),
(501,-28,qs),
(509,-28,o),
(520,-16,o),
(522,-12,qs),
(532,9,o),
(564,87,o),
(606,190,o),
(654,313,o),
(707,449,o),
(761,592,o),
(788,662,q),
(788,33,ls),
(788,16,o),
(776,-3,o),
(757,-12,o),
(734,-13,o),
(724,-13,qs),
(715,-13,o),
(695,-19,o),
(695,-28,qs),
(695,-36,o),
(722,-41,o),
(736,-41,qs),
(946,-41,ls),
(966,-41,o),
(966,-28,qs),
(966,-20,o),
(947,-10,o),
(936,-10,qs),
(834,-10,l),
(834,12,o),
(832,106,o),
(831,218,o),
(829,335,o),
(829,380,qs),
(829,498,o),
(833,652,o),
(833,698,qs),
(833,714,o),
(842,743,o),
(864,745,qs),
(895,748,o),
(943,750,o),
(974,753,qs),
(1002,756,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
98 52 33 3 5 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 10 0 0 5 10 0 91 3 1 1 0 2 1 2 87 0 8 8 9 83 0 9 9 14 67 7 1 5 5 6 83 0 6 6 13 67 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 9 0 8 0 9 8 91 0 10 0 0 5 10 0 91 3 1 1 0 2 1 2 87 7 1 5 5 6 83 0 6 6 13 67 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 4 1 2 1 4 2 104 0 9 0 8 0 9 8 91 0 10 0 0 5 10 0 91 3 1 1 0 2 1 2 87 7 1 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
112 109 89 85 27 52 51 41 45 52 51 44 17 11 24
CALL[ ]	/* CallFunction */";
};
width = 999;
}
);
note = M;
unicode = 77;
},
{
glyphname = N;
kernLeft = B;
kernRight = Eng;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(607,5,o),
(638,-11,o),
(654,-11,qs),
(680,-11,o),
(703,23,o),
(703,47,qs),
(703,82,o),
(702,167,o),
(702,253,o),
(701,335,o),
(701,368,qs),
(701,424,o),
(702,506,o),
(704,580,o),
(705,659,o),
(705,712,qs),
(705,728,o),
(740,739,o),
(790,744,qs),
(809,746,o),
(829,758,o),
(829,776,qs),
(829,792,o),
(807,804,o),
(775,804,qs),
(548,804,ls),
(524,804,o),
(497,790,o),
(497,774,qs),
(497,754,o),
(522,740,o),
(539,738,qs),
(582,734,o),
(610,722,o),
(610,705,qs),
(610,179,l),
(603,198,o),
(558,287,o),
(496,402,o),
(424,533,o),
(358,654,o),
(303,754,o),
(288,781,qs),
(274,806,o),
(260,821,o),
(248,821,qs),
(118,821,ls),
(90,821,o),
(55,818,o),
(34,810,o),
(26,799,o),
(26,791,qs),
(26,771,o),
(61,755,o),
(103,748,o),
(138,739,o),
(138,726,qs),
(138,648,o),
(141,471,o),
(141,388,qs),
(141,316,o),
(135,184,o),
(135,119,qs),
(135,90,o),
(114,71,o),
(94,68,qs),
(60,63,o),
(29,51,o),
(29,32,qs),
(29,12,o),
(55,0,o),
(70,0,qs),
(335,0,ls),
(347,0,o),
(365,15,o),
(365,32,qs),
(365,51,o),
(334,63,o),
(315,63,qs),
(233,63,l),
(233,655,l),
(596,25,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
45 0 2 0 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 2 2 12 67 0 3 3 14 67 0 0 0 1 84 4 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 2 2 12 67 0 3 3 14 67 0 0 0 1 84 0 1 1 13 67 0 4 4 24 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 2 2 12 67 0 0 0 1 84 0 1 1 13 67 0 3 3 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 2 2 14 67 0 0 0 1 84 0 1 1 13 67 0 3 3 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
79 77 57 54 36 33 52 33 5 17
CALL[ ]	/* CallFunction */";
};
width = 849;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(612,-3,o),
(634,-11,o),
(648,-11,qs),
(664,-11,o),
(683,7,o),
(683,21,qs),
(683,56,o),
(682,149,o),
(682,245,o),
(681,335,o),
(681,368,qs),
(681,426,o),
(682,512,o),
(683,591,o),
(684,674,o),
(685,729,qs),
(685,738,o),
(710,749,o),
(742,753,o),
(771,754,o),
(776,754,qs),
(788,754,o),
(813,764,o),
(813,781,qs),
(813,794,o),
(794,804,o),
(762,804,qs),
(556,804,ls),
(519,804,o),
(519,781,qs),
(519,764,o),
(545,754,o),
(556,754,qs),
(562,754,o),
(581,753,o),
(599,749,o),
(611,740,o),
(611,731,qs),
(611,132,l),
(602,152,o),
(554,247,o),
(489,371,o),
(414,512,o),
(343,643,o),
(285,751,o),
(269,781,qs),
(255,806,o),
(241,821,o),
(229,821,qs),
(91,821,ls),
(33,821,o),
(33,804,qs),
(33,784,o),
(66,770,o),
(106,763,o),
(139,753,o),
(139,738,qs),
(139,657,o),
(142,474,o),
(142,388,qs),
(142,313,o),
(135,162,o),
(133,94,qs),
(132,77,o),
(121,58,o),
(106,49,o),
(91,48,o),
(85,48,qs),
(76,48,o),
(56,38,o),
(56,25,qs),
(56,9,o),
(83,0,o),
(97,0,qs),
(323,0,ls),
(343,0,o),
(343,25,qs),
(343,40,o),
(324,51,o),
(313,51,qs),
(213,51,l),
(213,708,l),
(607,6,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
43 0 2 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 7 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 5 6 1 4 0 5 4 91 0 3 3 12 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 5 6 1 4 0 5 4 91 0 3 3 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
47 52 51 61 63 52 51 33 8 23
CALL[ ]	/* CallFunction */";
};
width = 824;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(616,-4,o),
(627,-11,o),
(634,-11,qs),
(639,-11,o),
(655,-5,o),
(655,6,qs),
(655,41,o),
(654,139,o),
(653,241,o),
(653,335,o),
(653,368,qs),
(653,429,o),
(654,520,o),
(655,604,o),
(656,691,o),
(657,749,qs),
(657,758,o),
(679,769,o),
(707,773,o),
(733,774,o),
(738,774,qs),
(750,774,o),
(775,778,o),
(775,789,qs),
(775,797,o),
(756,804,o),
(724,804,qs),
(533,804,ls),
(524,804,o),
(496,800,o),
(496,789,qs),
(496,779,o),
(522,774,o),
(533,774,qs),
(543,774,o),
(571,773,o),
(596,769,o),
(613,760,o),
(613,751,qs),
(613,80,l),
(605,95,o),
(568,161,o),
(517,251,o),
(454,358,o),
(389,471,o),
(324,582,o),
(268,680,o),
(223,758,o),
(211,781,qs),
(197,806,o),
(183,821,o),
(171,821,qs),
(63,821,ls),
(59,821,o),
(43,821,o),
(27,818,o),
(15,813,o),
(15,809,qs),
(15,798,o),
(54,792,o),
(102,788,o),
(141,776,o),
(141,758,qs),
(141,672,o),
(144,479,o),
(144,388,qs),
(144,307,o),
(140,146,o),
(135,74,qs),
(135,57,o),
(121,38,o),
(101,29,o),
(77,28,o),
(67,28,qs),
(58,28,o),
(38,22,o),
(38,13,qs),
(38,5,o),
(65,0,o),
(79,0,qs),
(291,0,ls),
(311,0,o),
(311,13,qs),
(311,21,o),
(292,31,o),
(281,31,qs),
(185,31,l),
(185,738,l),
(610,6,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
48 0 2 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 5 6 1 4 0 5 4 91 0 3 3 12 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 5 6 1 4 0 5 4 91 0 3 3 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
86 84 69 66 62 59 55 52 37 33 52 51 33 8 18
CALL[ ]	/* CallFunction */";
};
width = 788;
}
);
note = N;
unicode = 78;
},
{
glyphname = Nacute;
kernLeft = B;
kernRight = Eng;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(496,972,o),
(476,972,qs),
(462,972,o),
(425,949,o),
(392,916,o),
(369,882,o),
(369,872,qs),
(369,860,o),
(389,841,o),
(404,841,qs),
(417,841,o),
(456,860,o),
(492,888,o),
(517,921,o),
(517,936,qs),
(517,949,o)
);
},
{
closed = 1;
nodes = (
(607,5,o),
(638,-11,o),
(654,-11,qs),
(680,-11,o),
(703,23,o),
(703,47,qs),
(703,82,o),
(702,167,o),
(702,253,o),
(701,335,o),
(701,368,qs),
(701,424,o),
(702,506,o),
(704,580,o),
(705,659,o),
(705,712,qs),
(705,728,o),
(740,739,o),
(790,744,qs),
(809,746,o),
(829,758,o),
(829,776,qs),
(829,792,o),
(807,804,o),
(775,804,qs),
(548,804,ls),
(524,804,o),
(497,790,o),
(497,774,qs),
(497,754,o),
(522,740,o),
(539,738,qs),
(582,734,o),
(610,722,o),
(610,705,qs),
(610,179,l),
(603,198,o),
(558,287,o),
(496,402,o),
(424,533,o),
(358,654,o),
(303,754,o),
(288,781,qs),
(274,806,o),
(260,821,o),
(248,821,qs),
(118,821,ls),
(90,821,o),
(55,818,o),
(34,810,o),
(26,799,o),
(26,791,qs),
(26,771,o),
(61,755,o),
(103,748,o),
(138,739,o),
(138,726,qs),
(138,648,o),
(141,471,o),
(141,388,qs),
(141,316,o),
(135,184,o),
(135,119,qs),
(135,90,o),
(114,71,o),
(94,68,qs),
(60,63,o),
(29,51,o),
(29,32,qs),
(29,12,o),
(55,0,o),
(70,0,qs),
(335,0,ls),
(347,0,o),
(365,15,o),
(365,32,qs),
(365,51,o),
(334,63,o),
(315,63,qs),
(233,63,l),
(233,655,l),
(596,25,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
61 16 2 2 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 1 106 0 0 4 0 106 0 4 4 12 67 0 5 5 14 67 0 2 2 3 84 6 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 0 1 106 0 0 4 0 106 0 4 4 12 67 0 5 5 14 67 0 2 2 3 84 0 3 3 13 67 0 6 6 24 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 0 1 106 0 0 4 0 106 0 4 4 12 67 0 2 2 3 84 0 3 3 13 67 0 5 5 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 1 0 1 106 0 0 4 0 106 0 4 4 14 67 0 2 2 3 84 0 3 3 13 67 0 5 5 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
95 93 73 70 52 49 52 35 38 36 7 19
CALL[ ]	/* CallFunction */";
};
width = 849;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(474,972,o),
(459,972,qs),
(448,972,o),
(412,950,o),
(378,919,o),
(353,887,o),
(353,877,qs),
(353,867,o),
(366,854,o),
(377,854,qs),
(387,854,o),
(426,872,o),
(463,899,o),
(491,929,o),
(491,941,qs),
(491,955,o)
);
},
{
closed = 1;
nodes = (
(612,-3,o),
(634,-11,o),
(648,-11,qs),
(664,-11,o),
(683,7,o),
(683,21,qs),
(683,56,o),
(682,149,o),
(682,245,o),
(681,335,o),
(681,368,qs),
(681,426,o),
(682,512,o),
(683,591,o),
(684,674,o),
(685,729,qs),
(685,738,o),
(710,749,o),
(742,753,o),
(771,754,o),
(776,754,qs),
(788,754,o),
(813,764,o),
(813,781,qs),
(813,794,o),
(794,804,o),
(762,804,qs),
(556,804,ls),
(519,804,o),
(519,781,qs),
(519,764,o),
(545,754,o),
(556,754,qs),
(562,754,o),
(581,753,o),
(599,749,o),
(611,740,o),
(611,731,qs),
(611,132,l),
(602,152,o),
(554,247,o),
(489,371,o),
(414,512,o),
(343,643,o),
(285,751,o),
(269,781,qs),
(255,806,o),
(241,821,o),
(229,821,qs),
(91,821,ls),
(33,821,o),
(33,804,qs),
(33,784,o),
(66,770,o),
(106,763,o),
(139,753,o),
(139,738,qs),
(139,657,o),
(142,474,o),
(142,388,qs),
(142,313,o),
(135,162,o),
(133,94,qs),
(132,77,o),
(121,58,o),
(106,49,o),
(91,48,o),
(85,48,qs),
(76,48,o),
(56,38,o),
(56,25,qs),
(56,9,o),
(83,0,o),
(97,0,qs),
(323,0,ls),
(343,0,o),
(343,25,qs),
(343,40,o),
(324,51,o),
(313,51,qs),
(213,51,l),
(213,708,l),
(607,6,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
59 16 2 2 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 1 106 0 0 5 0 106 0 5 5 12 67 8 1 6 6 7 83 0 7 7 14 67 4 1 2 2 3 84 0 3 3 13 67 0 9 9 24 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 1 0 1 106 0 0 5 0 106 0 5 5 12 67 8 1 6 6 7 83 0 7 7 14 67 4 1 2 2 3 84 9 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 1 106 0 0 5 0 106 0 5 5 12 67 8 1 6 6 7 83 0 7 7 14 67 4 1 2 2 3 84 0 3 3 13 67 0 9 9 24 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 5 0 106 0 7 8 1 6 2 7 6 91 0 5 5 12 67 4 1 2 2 3 84 0 3 3 13 67 0 9 9 24 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 5 0 106 0 7 8 1 6 2 7 6 91 0 5 5 14 67 4 1 2 2 3 84 0 3 3 13 67 0 9 9 24 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
96 94 52 51 61 63 52 51 35 38 36 10 24
CALL[ ]	/* CallFunction */";
};
width = 824;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(443,972,o),
(435,972,qs),
(428,972,o),
(393,952,o),
(357,925,o),
(330,895,o),
(330,886,qs),
(330,875,o),
(338,875,qs),
(345,875,o),
(383,893,o),
(423,917,o),
(454,942,o),
(454,950,qs),
(454,964,o)
);
},
{
closed = 1;
nodes = (
(616,-4,o),
(627,-11,o),
(634,-11,qs),
(639,-11,o),
(655,-5,o),
(655,6,qs),
(655,41,o),
(654,139,o),
(653,241,o),
(653,335,o),
(653,368,qs),
(653,429,o),
(654,520,o),
(655,604,o),
(656,691,o),
(657,749,qs),
(657,758,o),
(679,769,o),
(707,773,o),
(733,774,o),
(738,774,qs),
(750,774,o),
(775,778,o),
(775,789,qs),
(775,797,o),
(756,804,o),
(724,804,qs),
(533,804,ls),
(524,804,o),
(496,800,o),
(496,789,qs),
(496,779,o),
(522,774,o),
(533,774,qs),
(543,774,o),
(571,773,o),
(596,769,o),
(613,760,o),
(613,751,qs),
(613,80,l),
(605,95,o),
(568,161,o),
(517,251,o),
(454,358,o),
(389,471,o),
(324,582,o),
(268,680,o),
(223,758,o),
(211,781,qs),
(197,806,o),
(183,821,o),
(171,821,qs),
(63,821,ls),
(59,821,o),
(43,821,o),
(27,818,o),
(15,813,o),
(15,809,qs),
(15,798,o),
(54,792,o),
(102,788,o),
(141,776,o),
(141,758,qs),
(141,672,o),
(144,479,o),
(144,388,qs),
(144,307,o),
(140,146,o),
(135,74,qs),
(135,57,o),
(121,38,o),
(101,29,o),
(77,28,o),
(67,28,qs),
(58,28,o),
(38,22,o),
(38,13,qs),
(38,5,o),
(65,0,o),
(79,0,qs),
(291,0,ls),
(311,0,o),
(311,13,qs),
(311,21,o),
(292,31,o),
(281,31,qs),
(185,31,l),
(185,738,l),
(610,6,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
63 15 2 2 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 1 106 0 0 5 0 106 0 5 5 12 67 8 1 6 6 7 83 0 7 7 14 67 4 1 2 2 3 84 0 3 3 13 67 0 9 9 24 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 5 0 106 0 7 8 1 6 2 7 6 91 0 5 5 12 67 4 1 2 2 3 84 0 3 3 13 67 0 9 9 24 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 5 0 106 0 7 8 1 6 2 7 6 91 0 5 5 14 67 4 1 2 2 3 84 0 3 3 13 67 0 9 9 24 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
101 99 84 81 77 74 70 67 52 48 52 51 35 37 36 10 20
CALL[ ]	/* CallFunction */";
};
width = 788;
}
);
note = Nacute;
unicode = 323;
},
{
glyphname = Ncaron;
kernLeft = B;
kernRight = Eng;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(521,965,o),
(487,951,o),
(449,933,o),
(432,922,q),
(415,933,o),
(377,951,o),
(344,965,o),
(318,972,o),
(313,972,qs),
(306,972,o),
(300,963,o),
(300,958,qs),
(300,938,o),
(336,894,o),
(382,855,o),
(425,830,o),
(432,830,qs),
(441,830,o),
(484,856,o),
(530,893,o),
(565,935,o),
(565,951,qs),
(565,958,o),
(560,972,o),
(552,972,qs),
(547,972,o)
);
},
{
closed = 1;
nodes = (
(607,5,o),
(638,-11,o),
(654,-11,qs),
(680,-11,o),
(703,23,o),
(703,47,qs),
(703,82,o),
(702,167,o),
(702,253,o),
(701,335,o),
(701,368,qs),
(701,424,o),
(702,506,o),
(704,580,o),
(705,659,o),
(705,712,qs),
(705,728,o),
(740,739,o),
(790,744,qs),
(809,746,o),
(829,758,o),
(829,776,qs),
(829,792,o),
(807,804,o),
(775,804,qs),
(548,804,ls),
(524,804,o),
(497,790,o),
(497,774,qs),
(497,754,o),
(522,740,o),
(539,738,qs),
(582,734,o),
(610,722,o),
(610,705,qs),
(610,179,l),
(603,198,o),
(558,287,o),
(496,402,o),
(424,533,o),
(358,654,o),
(303,754,o),
(288,781,qs),
(274,806,o),
(260,821,o),
(248,821,qs),
(118,821,ls),
(90,821,o),
(55,818,o),
(34,810,o),
(26,799,o),
(26,791,qs),
(26,771,o),
(61,755,o),
(103,748,o),
(138,739,o),
(138,726,qs),
(138,648,o),
(141,471,o),
(141,388,qs),
(141,316,o),
(135,184,o),
(135,119,qs),
(135,90,o),
(114,71,o),
(94,68,qs),
(60,63,o),
(29,51,o),
(29,32,qs),
(29,12,o),
(55,0,o),
(70,0,qs),
(335,0,ls),
(347,0,o),
(365,15,o),
(365,32,qs),
(365,51,o),
(334,63,o),
(315,63,qs),
(233,63,l),
(233,655,l),
(596,25,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
21 1 1 0 71 26 2 3 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
2 8 2 0 1 0 106 0 1 5 1 106 0 5 5 12 67 0 6 6 14 67 0 3 3 4 84 7 1 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
2 8 2 0 1 0 106 0 1 5 1 106 0 5 5 12 67 0 6 6 14 67 0 3 3 4 84 0 4 4 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
2 8 2 0 1 0 106 0 1 5 1 106 0 5 5 12 67 0 3 3 4 84 0 4 4 13 67 0 6 6 7 83 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
2 8 2 0 1 0 106 0 1 5 1 106 0 5 5 14 67 0 3 3 4 84 0 4 4 13 67 0 6 6 7 83 0 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
1 0 105 103 83 80 62 59 36 33 29 27 17 15 9 7 0 25 1 25 9 15
CALL[ ]	/* CallFunction */";
};
width = 849;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(501,964,o),
(467,950,o),
(429,931,o),
(412,921,q),
(395,931,o),
(357,950,o),
(324,964,o),
(298,972,o),
(293,972,qs),
(282,972,o),
(282,959,qs),
(282,943,o),
(317,904,o),
(362,870,o),
(404,847,o),
(412,847,qs),
(421,847,o),
(464,871,o),
(509,904,o),
(543,941,o),
(543,955,qs),
(543,962,o),
(538,972,o),
(532,972,qs),
(527,972,o)
);
},
{
closed = 1;
nodes = (
(612,-3,o),
(634,-11,o),
(648,-11,qs),
(664,-11,o),
(683,7,o),
(683,21,qs),
(683,56,o),
(682,149,o),
(682,245,o),
(681,335,o),
(681,368,qs),
(681,426,o),
(682,512,o),
(683,591,o),
(684,674,o),
(685,729,qs),
(685,738,o),
(710,749,o),
(742,753,o),
(771,754,o),
(776,754,qs),
(788,754,o),
(813,764,o),
(813,781,qs),
(813,794,o),
(794,804,o),
(762,804,qs),
(556,804,ls),
(519,804,o),
(519,781,qs),
(519,764,o),
(545,754,o),
(556,754,qs),
(562,754,o),
(581,753,o),
(599,749,o),
(611,740,o),
(611,731,qs),
(611,132,l),
(602,152,o),
(554,247,o),
(489,371,o),
(414,512,o),
(343,643,o),
(285,751,o),
(269,781,qs),
(255,806,o),
(241,821,o),
(229,821,qs),
(91,821,ls),
(33,821,o),
(33,804,qs),
(33,784,o),
(66,770,o),
(106,763,o),
(139,753,o),
(139,738,qs),
(139,657,o),
(142,474,o),
(142,388,qs),
(142,313,o),
(135,162,o),
(133,94,qs),
(132,77,o),
(121,58,o),
(106,49,o),
(91,48,o),
(85,48,qs),
(76,48,o),
(56,38,o),
(56,25,qs),
(56,9,o),
(83,0,o),
(97,0,qs),
(323,0,ls),
(343,0,o),
(343,25,qs),
(343,40,o),
(324,51,o),
(313,51,qs),
(213,51,l),
(213,708,l),
(607,6,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
20 1 1 0 68 25 2 3 7 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 6 6 12 67 9 1 7 7 8 83 0 8 8 14 67 5 1 3 3 4 84 0 4 4 13 67 0 10 10 24 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 6 6 12 67 9 1 7 7 8 83 0 8 8 14 67 5 1 3 3 4 84 10 1 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 6 6 12 67 9 1 7 7 8 83 0 8 8 14 67 5 1 3 3 4 84 0 4 4 13 67 0 10 10 24 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 8 9 1 7 3 8 7 91 0 6 6 12 67 5 1 3 3 4 84 0 4 4 13 67 0 10 10 24 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 8 9 1 7 3 8 7 91 0 6 6 14 67 5 1 3 3 4 84 0 4 4 13 67 0 10 10 24 10 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 105 103 88 85 81 78 75 72 59 56 41 38 34 31 28 26 16 14 9 7 0 24 1 24 12 15
CALL[ ]	/* CallFunction */";
};
width = 824;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(473,962,o),
(439,947,o),
(401,929,o),
(384,920,q),
(367,929,o),
(329,947,o),
(296,962,o),
(270,972,o),
(265,972,qs),
(257,972,o),
(257,961,qs),
(257,952,o),
(290,923,o),
(334,896,o),
(375,876,o),
(384,876,qs),
(393,876,o),
(436,896,o),
(479,923,o),
(512,952,o),
(512,961,qs),
(512,972,o),
(504,972,qs),
(499,972,o)
);
},
{
closed = 1;
nodes = (
(616,-4,o),
(627,-11,o),
(634,-11,qs),
(639,-11,o),
(655,-5,o),
(655,6,qs),
(655,41,o),
(654,139,o),
(653,241,o),
(653,335,o),
(653,368,qs),
(653,429,o),
(654,520,o),
(655,604,o),
(656,691,o),
(657,749,qs),
(657,758,o),
(679,769,o),
(707,773,o),
(733,774,o),
(738,774,qs),
(750,774,o),
(775,778,o),
(775,789,qs),
(775,797,o),
(756,804,o),
(724,804,qs),
(533,804,ls),
(524,804,o),
(496,800,o),
(496,789,qs),
(496,779,o),
(522,774,o),
(533,774,qs),
(543,774,o),
(571,773,o),
(596,769,o),
(613,760,o),
(613,751,qs),
(613,80,l),
(605,95,o),
(568,161,o),
(517,251,o),
(454,358,o),
(389,471,o),
(324,582,o),
(268,680,o),
(223,758,o),
(211,781,qs),
(197,806,o),
(183,821,o),
(171,821,qs),
(63,821,ls),
(59,821,o),
(43,821,o),
(27,818,o),
(15,813,o),
(15,809,qs),
(15,798,o),
(54,792,o),
(102,788,o),
(141,776,o),
(141,758,qs),
(141,672,o),
(144,479,o),
(144,388,qs),
(144,307,o),
(140,146,o),
(135,74,qs),
(135,57,o),
(121,38,o),
(101,29,o),
(77,28,o),
(67,28,qs),
(58,28,o),
(38,22,o),
(38,13,qs),
(38,5,o),
(65,0,o),
(79,0,qs),
(291,0,ls),
(311,0,o),
(311,13,qs),
(311,21,o),
(292,31,o),
(281,31,qs),
(185,31,l),
(185,738,l),
(610,6,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
19 1 1 0 72 24 2 3 7 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 6 6 12 67 9 1 7 7 8 83 0 8 8 14 67 5 1 3 3 4 84 0 4 4 13 67 0 10 10 24 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 8 9 1 7 3 8 7 91 0 6 6 12 67 5 1 3 3 4 84 0 4 4 13 67 0 10 10 24 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 8 9 1 7 3 8 7 91 0 6 6 14 67 5 1 3 3 4 84 0 4 4 13 67 0 10 10 24 10 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 110 108 93 90 86 83 79 76 61 57 40 37 33 30 27 25 15 13 8 6 0 23 1 23 12 15
CALL[ ]	/* CallFunction */";
};
width = 788;
}
);
note = Ncaron;
unicode = 327;
},
{
glyphname = Ncommaaccent;
kernLeft = B;
kernRight = Eng;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(396,-130,o),
(410,-140,o),
(421,-149,o),
(421,-155,qs),
(421,-185,o),
(406,-214,o),
(406,-224,qs),
(406,-241,o),
(427,-247,o),
(432,-247,qs),
(438,-247,o),
(465,-232,o),
(492,-203,o),
(513,-158,o),
(513,-128,qs),
(513,-85,o),
(469,-47,o),
(445,-47,qs),
(412,-47,o),
(385,-84,o),
(385,-105,qs),
(385,-117,o)
);
},
{
closed = 1;
nodes = (
(607,5,o),
(638,-11,o),
(654,-11,qs),
(680,-11,o),
(703,23,o),
(703,47,qs),
(703,82,o),
(702,167,o),
(702,253,o),
(701,335,o),
(701,368,qs),
(701,424,o),
(702,506,o),
(704,580,o),
(705,659,o),
(705,712,qs),
(705,728,o),
(740,739,o),
(790,744,qs),
(809,746,o),
(829,758,o),
(829,776,qs),
(829,792,o),
(807,804,o),
(775,804,qs),
(548,804,ls),
(524,804,o),
(497,790,o),
(497,774,qs),
(497,754,o),
(522,740,o),
(539,738,qs),
(582,734,o),
(610,722,o),
(610,705,qs),
(610,179,l),
(603,198,o),
(558,287,o),
(496,402,o),
(424,533,o),
(358,654,o),
(303,754,o),
(288,781,qs),
(274,806,o),
(260,821,o),
(248,821,qs),
(118,821,ls),
(90,821,o),
(55,818,o),
(34,810,o),
(26,799,o),
(26,791,qs),
(26,771,o),
(61,755,o),
(103,748,o),
(138,739,o),
(138,726,qs),
(138,648,o),
(141,471,o),
(141,388,qs),
(141,316,o),
(135,184,o),
(135,119,qs),
(135,90,o),
(114,71,o),
(94,68,qs),
(60,63,o),
(29,51,o),
(29,32,qs),
(29,12,o),
(55,0,o),
(70,0,qs),
(335,0,ls),
(347,0,o),
(365,15,o),
(365,32,qs),
(365,51,o),
(334,63,o),
(315,63,qs),
(233,63,l),
(233,655,l),
(596,25,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
67 22 2 2 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 4 4 12 67 0 5 5 14 67 0 2 2 3 84 6 1 3 3 13 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 0 0 1 0 1 87 0 4 4 12 67 0 5 5 14 67 0 2 2 3 84 6 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 0 0 1 0 1 87 0 4 4 12 67 0 5 5 14 67 0 2 2 3 84 0 3 3 13 67 0 6 6 24 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 0 0 1 0 1 87 0 4 4 12 67 0 2 2 3 84 0 3 3 13 67 0 5 5 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 0 1 0 1 87 0 4 4 14 67 0 2 2 3 84 0 3 3 13 67 0 5 5 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
101 99 79 76 58 55 52 43 38 34 7 19
CALL[ ]	/* CallFunction */";
};
width = 849;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (33,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (338,-138);
ref = comma;
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
44 1 2 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 7 1 1 1 13 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 8 0 9 8 9 87 0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 5 6 1 4 0 5 4 91 0 8 0 9 8 9 87 0 3 3 12 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 5 6 1 4 0 5 4 91 0 8 0 9 8 9 87 0 3 3 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
96 94 37 47 52 51 61 63 52 51 34 10 35
CALL[ ]	/* CallFunction */";
};
width = 824;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(616,-4,o),
(627,-11,o),
(634,-11,qs),
(639,-11,o),
(655,-5,o),
(655,6,qs),
(655,41,o),
(654,139,o),
(653,241,o),
(653,335,o),
(653,368,qs),
(653,429,o),
(654,520,o),
(655,604,o),
(656,691,o),
(657,749,qs),
(657,758,o),
(679,769,o),
(707,773,o),
(733,774,o),
(738,774,qs),
(750,774,o),
(775,778,o),
(775,789,qs),
(775,797,o),
(756,804,o),
(724,804,qs),
(533,804,ls),
(524,804,o),
(496,800,o),
(496,789,qs),
(496,779,o),
(522,774,o),
(533,774,qs),
(543,774,o),
(571,773,o),
(596,769,o),
(613,760,o),
(613,751,qs),
(613,80,l),
(605,95,o),
(568,161,o),
(517,251,o),
(454,358,o),
(389,471,o),
(324,582,o),
(268,680,o),
(223,758,o),
(211,781,qs),
(197,806,o),
(183,821,o),
(171,821,qs),
(63,821,ls),
(59,821,o),
(43,821,o),
(27,818,o),
(15,813,o),
(15,809,qs),
(15,798,o),
(54,792,o),
(102,788,o),
(141,776,o),
(141,758,qs),
(141,672,o),
(144,479,o),
(144,388,qs),
(144,307,o),
(140,146,o),
(135,74,qs),
(135,57,o),
(121,38,o),
(101,29,o),
(77,28,o),
(67,28,qs),
(58,28,o),
(38,22,o),
(38,13,qs),
(38,5,o),
(65,0,o),
(79,0,qs),
(291,0,ls),
(311,0,o),
(311,13,qs),
(311,21,o),
(292,31,o),
(281,31,qs),
(185,31,l),
(185,738,l),
(610,6,ls)
);
},
{
closed = 1;
nodes = (
(394,-125,o),
(408,-132,o),
(419,-139,o),
(419,-145,qs),
(419,-155,o),
(408,-184,o),
(408,-191,qs),
(408,-196,o),
(417,-203,o),
(422,-203,qs),
(432,-203,o),
(449,-186,o),
(459,-161,o),
(465,-134,o),
(465,-124,qs),
(465,-90,o),
(438,-67,o),
(423,-67,qs),
(403,-67,o),
(383,-88,o),
(383,-101,qs),
(383,-113,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
48 0 2 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 67 0 8 8 9 83 0 9 9 17 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 5 6 1 4 0 5 4 91 0 3 3 12 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 67 0 8 8 9 83 0 9 9 17 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 5 6 1 4 0 5 4 91 0 8 0 9 8 9 87 0 3 3 12 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 5 6 1 4 0 5 4 91 0 8 0 9 8 9 87 0 3 3 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
101 99 93 91 86 84 69 66 62 59 55 52 37 33 52 51 33 10 18
CALL[ ]	/* CallFunction */";
};
width = 788;
}
);
note = Ncommaaccent;
unicode = 325;
},
{
glyphname = Ndotaccent;
kernLeft = B;
kernRight = Eng;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(409,840,o),
(434,840,qs),
(445,840,o),
(469,846,o),
(488,862,o),
(501,889,o),
(501,910,qs),
(501,937,o),
(465,971,o),
(441,971,qs),
(423,971,o),
(398,958,o),
(382,939,o),
(375,916,o),
(375,906,qs),
(375,874,o)
);
},
{
closed = 1;
nodes = (
(607,5,o),
(638,-11,o),
(654,-11,qs),
(680,-11,o),
(703,23,o),
(703,47,qs),
(703,82,o),
(702,167,o),
(702,253,o),
(701,335,o),
(701,368,qs),
(701,424,o),
(702,506,o),
(704,580,o),
(705,659,o),
(705,712,qs),
(705,728,o),
(740,739,o),
(790,744,qs),
(809,746,o),
(829,758,o),
(829,776,qs),
(829,792,o),
(807,804,o),
(775,804,qs),
(548,804,ls),
(524,804,o),
(497,790,o),
(497,774,qs),
(497,754,o),
(522,740,o),
(539,738,qs),
(582,734,o),
(610,722,o),
(610,705,qs),
(610,179,l),
(603,198,o),
(558,287,o),
(496,402,o),
(424,533,o),
(358,654,o),
(303,754,o),
(288,781,qs),
(274,806,o),
(260,821,o),
(248,821,qs),
(118,821,ls),
(90,821,o),
(55,818,o),
(34,810,o),
(26,799,o),
(26,791,qs),
(26,771,o),
(61,755,o),
(103,748,o),
(138,739,o),
(138,726,qs),
(138,648,o),
(141,471,o),
(141,388,qs),
(141,316,o),
(135,184,o),
(135,119,qs),
(135,90,o),
(114,71,o),
(94,68,qs),
(60,63,o),
(29,51,o),
(29,32,qs),
(29,12,o),
(55,0,o),
(70,0,qs),
(335,0,ls),
(347,0,o),
(365,15,o),
(365,32,qs),
(365,51,o),
(334,63,o),
(315,63,qs),
(233,63,l),
(233,655,l),
(596,25,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
61 16 2 2 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 0 0 1 4 0 1 91 0 4 4 12 67 0 5 5 14 67 0 2 2 3 84 6 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 0 0 1 4 0 1 91 0 4 4 12 67 0 5 5 14 67 0 2 2 3 84 0 3 3 13 67 0 6 6 24 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 0 0 1 4 0 1 91 0 4 4 12 67 0 2 2 3 84 0 3 3 13 67 0 5 5 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 0 0 1 4 0 1 91 0 4 4 14 67 0 2 2 3 84 0 3 3 13 67 0 5 5 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
95 93 73 70 52 49 52 35 38 36 7 19
CALL[ ]	/* CallFunction */";
};
width = 849;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (33,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (351,336);
ref = dotaccent;
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
44 1 2 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 8 0 9 3 8 9 91 0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 8 0 9 3 8 9 91 0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 7 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 8 0 9 3 8 9 91 0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 8 0 9 3 8 9 91 0 5 6 1 4 0 5 4 91 0 3 3 12 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 8 0 9 3 8 9 91 0 5 6 1 4 0 5 4 91 0 3 3 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
96 94 39 47 52 51 61 63 52 51 34 10 35
CALL[ ]	/* CallFunction */";
};
width = 824;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(616,-4,o),
(627,-11,o),
(634,-11,qs),
(639,-11,o),
(655,-5,o),
(655,6,qs),
(655,41,o),
(654,139,o),
(653,241,o),
(653,335,o),
(653,368,qs),
(653,429,o),
(654,520,o),
(655,604,o),
(656,691,o),
(657,749,qs),
(657,758,o),
(679,769,o),
(707,773,o),
(733,774,o),
(738,774,qs),
(750,774,o),
(775,778,o),
(775,789,qs),
(775,797,o),
(756,804,o),
(724,804,qs),
(533,804,ls),
(524,804,o),
(496,800,o),
(496,789,qs),
(496,779,o),
(522,774,o),
(533,774,qs),
(543,774,o),
(571,773,o),
(596,769,o),
(613,760,o),
(613,751,qs),
(613,80,l),
(605,95,o),
(568,161,o),
(517,251,o),
(454,358,o),
(389,471,o),
(324,582,o),
(268,680,o),
(223,758,o),
(211,781,qs),
(197,806,o),
(183,821,o),
(171,821,qs),
(63,821,ls),
(59,821,o),
(43,821,o),
(27,818,o),
(15,813,o),
(15,809,qs),
(15,798,o),
(54,792,o),
(102,788,o),
(141,776,o),
(141,758,qs),
(141,672,o),
(144,479,o),
(144,388,qs),
(144,307,o),
(140,146,o),
(135,74,qs),
(135,57,o),
(121,38,o),
(101,29,o),
(77,28,o),
(67,28,qs),
(58,28,o),
(38,22,o),
(38,13,qs),
(38,5,o),
(65,0,o),
(79,0,qs),
(291,0,ls),
(311,0,o),
(311,13,qs),
(311,21,o),
(292,31,o),
(281,31,qs),
(185,31,l),
(185,738,l),
(610,6,ls)
);
},
{
closed = 1;
nodes = (
(373,889,o),
(387,889,qs),
(401,889,o),
(428,908,o),
(428,935,qs),
(428,952,o),
(408,972,o),
(394,972,qs),
(383,972,o),
(368,963,o),
(358,950,o),
(353,936,o),
(353,931,qs),
(353,913,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
48 0 2 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 8 0 9 3 8 9 91 0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 8 0 9 3 8 9 91 0 5 6 1 4 0 5 4 91 0 3 3 12 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 8 0 9 3 8 9 91 0 5 6 1 4 0 5 4 91 0 3 3 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
101 99 95 93 86 84 69 66 62 59 55 52 37 33 52 51 33 10 18
CALL[ ]	/* CallFunction */";
};
width = 788;
}
);
note = Ndotaccent;
unicode = 7748;
},
{
glyphname = Ntilde;
kernLeft = B;
kernRight = Eng;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(607,5,o),
(638,-11,o),
(654,-11,qs),
(680,-11,o),
(703,23,o),
(703,47,qs),
(703,82,o),
(702,167,o),
(702,253,o),
(701,335,o),
(701,368,qs),
(701,424,o),
(702,506,o),
(704,580,o),
(705,659,o),
(705,712,qs),
(705,728,o),
(740,739,o),
(790,744,qs),
(809,746,o),
(829,758,o),
(829,776,qs),
(829,792,o),
(807,804,o),
(775,804,qs),
(548,804,ls),
(524,804,o),
(497,790,o),
(497,774,qs),
(497,754,o),
(522,740,o),
(539,738,qs),
(582,734,o),
(610,722,o),
(610,705,qs),
(610,179,l),
(603,198,o),
(558,287,o),
(496,402,o),
(424,533,o),
(358,654,o),
(303,754,o),
(288,781,qs),
(274,806,o),
(260,821,o),
(248,821,qs),
(118,821,ls),
(90,821,o),
(55,818,o),
(34,810,o),
(26,799,o),
(26,791,qs),
(26,771,o),
(61,755,o),
(103,748,o),
(138,739,o),
(138,726,qs),
(138,648,o),
(141,471,o),
(141,388,qs),
(141,316,o),
(135,184,o),
(135,119,qs),
(135,90,o),
(114,71,o),
(94,68,qs),
(60,63,o),
(29,51,o),
(29,32,qs),
(29,12,o),
(55,0,o),
(70,0,qs),
(335,0,ls),
(347,0,o),
(365,15,o),
(365,32,qs),
(365,51,o),
(334,63,o),
(315,63,qs),
(233,63,l),
(233,655,l),
(596,25,ls)
);
},
{
closed = 1;
nodes = (
(249,861,o),
(258,861,qs),
(265,861,o),
(283,869,o),
(303,878,o),
(327,886,o),
(342,886,qs),
(356,886,o),
(388,878,o),
(423,869,o),
(460,862,o),
(479,862,qs),
(490,862,o),
(528,869,o),
(564,886,o),
(590,915,o),
(590,937,qs),
(590,953,o),
(573,972,o),
(568,972,qs),
(561,972,o),
(538,959,qs),
(524,951,o),
(492,942,o),
(478,942,qs),
(463,942,o),
(427,951,o),
(391,961,o),
(356,970,o),
(341,970,qs),
(304,970,o),
(273,952,qs),
(259,944,o),
(239,919,o),
(239,897,qs),
(239,882,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
45 0 2 0 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
7 1 5 0 9 8 5 9 91 0 6 10 1 8 2 6 8 91 0 2 2 12 67 0 3 3 14 67 0 0 0 1 84 4 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
7 1 5 0 9 8 5 9 91 0 6 10 1 8 2 6 8 91 0 2 2 12 67 0 3 3 14 67 0 0 0 1 84 0 1 1 13 67 0 4 4 24 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
7 1 5 0 9 8 5 9 91 0 6 10 1 8 2 6 8 91 0 2 2 12 67 0 0 0 1 84 0 1 1 13 67 0 3 3 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
7 1 5 0 9 8 5 9 91 0 6 10 1 8 2 6 8 91 0 2 2 14 67 0 0 0 1 84 0 1 1 13 67 0 3 3 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
116 114 111 109 106 104 98 96 93 91 88 86 79 77 57 54 36 33 52 33 11 17
CALL[ ]	/* CallFunction */";
};
width = 849;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (33,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (239,372);
ref = tilde;
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
44 1 2 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 3 9 11 91 0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 3 9 11 91 0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 7 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 3 9 11 91 0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 3 9 11 91 0 5 6 1 4 0 5 4 91 0 3 3 12 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 3 9 11 91 0 5 6 1 4 0 5 4 91 0 3 3 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
118 116 113 111 108 106 100 98 95 93 39 47 52 51 61 63 52 51 34 14 35
CALL[ ]	/* CallFunction */";
};
width = 824;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(616,-4,o),
(627,-11,o),
(634,-11,qs),
(639,-11,o),
(655,-5,o),
(655,6,qs),
(655,41,o),
(654,139,o),
(653,241,o),
(653,335,o),
(653,368,qs),
(653,429,o),
(654,520,o),
(655,604,o),
(656,691,o),
(657,749,qs),
(657,758,o),
(679,769,o),
(707,773,o),
(733,774,o),
(738,774,qs),
(750,774,o),
(775,778,o),
(775,789,qs),
(775,797,o),
(756,804,o),
(724,804,qs),
(533,804,ls),
(524,804,o),
(496,800,o),
(496,789,qs),
(496,779,o),
(522,774,o),
(533,774,qs),
(543,774,o),
(571,773,o),
(596,769,o),
(613,760,o),
(613,751,qs),
(613,80,l),
(605,95,o),
(568,161,o),
(517,251,o),
(454,358,o),
(389,471,o),
(324,582,o),
(268,680,o),
(223,758,o),
(211,781,qs),
(197,806,o),
(183,821,o),
(171,821,qs),
(63,821,ls),
(59,821,o),
(43,821,o),
(27,818,o),
(15,813,o),
(15,809,qs),
(15,798,o),
(54,792,o),
(102,788,o),
(141,776,o),
(141,758,qs),
(141,672,o),
(144,479,o),
(144,388,qs),
(144,307,o),
(140,146,o),
(135,74,qs),
(135,57,o),
(121,38,o),
(101,29,o),
(77,28,o),
(67,28,qs),
(58,28,o),
(38,22,o),
(38,13,qs),
(38,5,o),
(65,0,o),
(79,0,qs),
(291,0,ls),
(311,0,o),
(311,13,qs),
(311,21,o),
(292,31,o),
(281,31,qs),
(185,31,l),
(185,738,l),
(610,6,ls)
);
},
{
closed = 1;
nodes = (
(231,888,o),
(236,888,qs),
(241,888,o),
(257,896,o),
(279,905,o),
(305,913,o),
(320,913,qs),
(334,913,o),
(366,905,o),
(401,896,o),
(438,889,o),
(457,889,qs),
(478,889,o),
(515,896,o),
(543,909,o),
(559,925,o),
(559,934,qs),
(559,941,o),
(551,951,o),
(546,951,qs),
(541,951,o),
(530,946,o),
(516,938,qs),
(482,921,o),
(456,921,qs),
(441,921,o),
(405,930,o),
(369,940,o),
(334,949,o),
(319,949,qs),
(282,949,o),
(251,931,qs),
(222,914,o),
(222,903,qs),
(222,898,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
48 0 2 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 3 9 11 91 0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 3 9 11 91 0 5 6 1 4 0 5 4 92 0 3 3 12 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 3 9 11 91 0 5 6 1 4 0 5 4 92 0 3 3 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
122 120 117 115 112 110 104 102 99 97 94 92 86 84 69 66 62 59 55 52 37 33 52 51 33 14 18
CALL[ ]	/* CallFunction */";
};
width = 788;
}
);
note = Ntilde;
unicode = 209;
},
{
glyphname = Eng;
kernLeft = B;
kernRight = Eng;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(703,-133,o),
(703,-20,qs),
(703,23,o),
(702,93,o),
(702,153,o),
(701,206,o),
(701,232,qs),
(701,248,o),
(702,312,o),
(703,394,o),
(704,489,o),
(705,585,o),
(706,676,o),
(706,714,qs),
(706,723,o),
(722,734,o),
(749,740,o),
(784,742,o),
(803,742,qs),
(815,742,o),
(840,756,o),
(840,776,qs),
(840,792,o),
(821,804,o),
(789,804,qs),
(572,804,ls),
(535,804,o),
(535,776,qs),
(535,756,o),
(558,742,o),
(572,742,qs),
(595,742,o),
(610,728,o),
(610,709,qs),
(610,163,l),
(605,177,o),
(576,242,o),
(533,330,o),
(481,434,o),
(428,540,o),
(377,640,o),
(337,720,o),
(310,774,o),
(308,780,qs),
(298,808,o),
(279,821,o),
(270,821,qs),
(111,821,ls),
(70,821,o),
(46,806,o),
(46,792,qs),
(46,772,o),
(74,754,o),
(85,754,qs),
(120,754,o),
(138,750,o),
(138,748,qs),
(138,688,o),
(139,599,o),
(140,524,o),
(141,453,o),
(141,410,qs),
(141,383,o),
(138,306,o),
(133,222,o),
(128,139,o),
(126,106,qs),
(125,91,o),
(118,72,o),
(109,63,o),
(99,60,o),
(96,60,qs),
(86,60,o),
(69,46,o),
(69,32,qs),
(69,12,o),
(97,0,o),
(110,0,qs),
(349,0,ls),
(359,0,o),
(379,14,o),
(379,32,qs),
(379,52,o),
(356,63,o),
(339,63,qs),
(233,63,l),
(233,690,l),
(293,567,o),
(384,390,o),
(454,261,o),
(507,170,o),
(551,98,o),
(590,34,o),
(612,-4,q),
(612,-87,o),
(564,-167,o),
(522,-167,qs),
(496,-167,o),
(457,-139,o),
(457,-115,qs),
(457,-108,o),
(461,-90,o),
(472,-85,q),
(477,-91,o),
(499,-105,o),
(514,-105,qs),
(533,-105,o),
(556,-80,o),
(556,-56,qs),
(556,-42,o),
(545,-24,o),
(527,-13,o),
(507,-8,o),
(498,-8,qs),
(466,-8,o),
(421,-26,o),
(393,-56,o),
(380,-95,o),
(380,-116,qs),
(380,-148,o),
(405,-197,o),
(448,-232,o),
(505,-250,o),
(537,-250,qs),
(618,-250,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
89 37 2 4 7 30 1 1 5 21 1 2 1 3 66
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
89 37 2 4 11 30 1 1 5 21 1 2 1 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
89 37 2 4 9 30 1 1 5 21 1 2 1 3 66
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 1 0 2 3 1 2 91 11 9 2 7 7 8 83 0 8 8 12 67 11 9 2 7 7 10 83 0 10 10 14 67 6 1 4 4 5 83 0 5 5 13 67 0 3 3 0 83 12 1 0 0 25 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 1 0 2 3 1 2 91 9 1 7 7 8 83 0 8 8 12 67 0 11 11 10 84 0 10 10 14 67 6 1 4 4 5 83 0 5 5 13 67 0 3 3 0 83 12 1 0 0 25 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 2 3 1 2 91 0 3 12 1 0 3 0 87 0 7 7 8 83 0 8 8 12 67 11 1 9 9 10 83 0 10 10 14 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 10 11 1 9 4 10 9 91 0 1 0 2 3 1 2 91 0 3 12 1 0 3 0 87 0 7 7 8 83 0 8 8 12 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 10 11 1 9 4 10 9 91 0 1 0 2 3 1 2 91 0 3 12 1 0 3 0 87 0 7 7 8 83 0 8 8 14 67 6 1 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 107 104 100 97 94 92 78 75 71 69 53 51 47 44 40 38 28 26 19 17 11 9 0 124 1 124 13 15
CALL[ ]	/* CallFunction */";
};
width = 849;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(312,532,o),
(447,291,o),
(536,133,o),
(584,48,o),
(606,8,o),
(611,1,o),
(611,0,qs),
(609,-48,o),
(597,-114,o),
(575,-155,o),
(540,-173,o),
(514,-173,qs),
(502,-173,o),
(474,-167,o),
(450,-152,o),
(435,-130,o),
(435,-113,qs),
(435,-111,o),
(436,-101,o),
(440,-89,o),
(446,-79,o),
(452,-76,q),
(457,-82,o),
(476,-92,o),
(488,-92,qs),
(504,-92,o),
(528,-72,o),
(528,-50,qs),
(528,-27,o),
(496,-7,o),
(478,-7,qs),
(452,-7,o),
(414,-25,o),
(388,-55,o),
(375,-94,o),
(375,-115,qs),
(375,-147,o),
(401,-193,o),
(444,-224,o),
(499,-239,o),
(527,-239,qs),
(611,-239,o),
(683,-108,o),
(683,33,qs),
(683,69,o),
(682,159,o),
(682,251,o),
(681,336,o),
(681,368,qs),
(681,426,o),
(682,512,o),
(683,591,o),
(684,674,o),
(685,729,qs),
(685,738,o),
(710,749,o),
(742,753,o),
(771,754,o),
(776,754,qs),
(788,754,o),
(813,764,o),
(813,781,qs),
(813,794,o),
(794,804,o),
(762,804,qs),
(556,804,ls),
(519,804,o),
(519,781,qs),
(519,764,o),
(545,754,o),
(556,754,qs),
(562,754,o),
(581,753,o),
(599,749,o),
(611,740,o),
(611,731,qs),
(611,132,l),
(602,152,o),
(554,247,o),
(489,371,o),
(414,512,o),
(343,643,o),
(285,751,o),
(269,781,qs),
(255,806,o),
(241,821,o),
(229,821,qs),
(91,821,ls),
(33,821,o),
(33,804,qs),
(33,784,o),
(66,770,o),
(106,763,o),
(139,753,o),
(139,738,qs),
(139,657,o),
(142,474,o),
(142,388,qs),
(142,313,o),
(135,162,o),
(133,94,qs),
(132,77,o),
(121,58,o),
(106,49,o),
(91,48,o),
(85,48,qs),
(76,48,o),
(56,38,o),
(56,25,qs),
(56,9,o),
(83,0,o),
(97,0,qs),
(323,0,ls),
(343,0,o),
(343,25,qs),
(343,40,o),
(324,51,o),
(313,51,qs),
(213,51,l),
(213,708,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
119 42 2 0 4 97 1 9 8 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 8 0 9 10 8 9 91 0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 10 10 7 83 0 7 7 25 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 8 0 9 10 8 9 91 0 10 0 7 10 7 87 0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 5 6 1 4 0 5 4 91 0 8 0 9 10 8 9 91 0 10 0 7 10 7 87 0 3 3 12 67 2 1 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 5 6 1 4 0 5 4 91 0 8 0 9 10 8 9 91 0 10 0 7 10 7 87 0 3 3 14 67 2 1 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
108 106 95 93 40 47 52 51 61 63 52 51 32 11 24
CALL[ ]	/* CallFunction */";
};
width = 824;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(411,-66,o),
(424,-61,q),
(429,-67,o),
(443,-76,o),
(451,-76,qs),
(463,-76,o),
(488,-58,o),
(488,-40,qs),
(488,-24,o),
(465,-6,o),
(447,-6,qs),
(429,-6,o),
(399,-24,o),
(379,-54,o),
(368,-93,o),
(368,-114,qs),
(368,-146,o),
(391,-186,o),
(427,-210,o),
(473,-219,o),
(496,-219,qs),
(544,-219,o),
(605,-183,o),
(641,-102,o),
(655,28,o),
(655,122,qs),
(655,145,o),
(654,206,o),
(654,310,o),
(653,471,o),
(653,594,qs),
(653,595,o),
(653,605,o),
(653,636,o),
(654,697,o),
(655,749,qs),
(655,758,o),
(675,768,o),
(702,773,o),
(730,774,o),
(737,774,qs),
(750,774,o),
(775,778,o),
(775,789,qs),
(775,797,o),
(756,804,o),
(724,804,qs),
(533,804,ls),
(524,804,o),
(496,800,o),
(496,789,qs),
(496,779,o),
(522,774,o),
(533,774,qs),
(543,774,o),
(571,773,o),
(596,769,o),
(613,760,o),
(613,751,qs),
(613,80,l),
(601,102,o),
(552,187,o),
(487,300,o),
(410,434,o),
(329,575,o),
(248,717,o),
(211,781,qs),
(197,807,o),
(183,821,o),
(171,821,qs),
(63,821,ls),
(35,821,o),
(15,814,o),
(15,805,qs),
(15,794,o),
(41,788,o),
(80,788,qs),
(103,788,o),
(141,760,o),
(141,721,qs),
(141,716,o),
(141,673,o),
(142,610,o),
(143,532,o),
(144,453,o),
(144,379,o),
(144,351,qs),
(144,296,o),
(144,222,o),
(143,163,o),
(143,109,o),
(143,74,qs),
(143,41,o),
(102,28,o),
(67,28,qs),
(57,28,o),
(38,22,o),
(38,14,qs),
(38,5,o),
(64,0,o),
(79,0,qs),
(271,0,ls),
(291,0,o),
(291,13,qs),
(291,21,o),
(272,31,o),
(261,31,qs),
(185,31,l),
(185,738,l),
(610,6,l),
(607,-52,o),
(595,-125,o),
(570,-167,o),
(527,-183,o),
(493,-183,qs),
(482,-183,o),
(451,-180,o),
(423,-165,o),
(403,-136,o),
(403,-110,qs),
(403,-96,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
60 11 2 1 6 10 1 2 1 118 1 11 10 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 10 0 11 0 10 11 91 0 4 4 5 83 0 5 5 12 67 8 1 6 6 7 83 0 7 7 14 67 3 1 1 1 2 83 0 2 2 13 67 0 0 0 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 7 8 1 6 1 7 6 91 0 10 0 11 0 10 11 91 0 4 4 5 83 0 5 5 12 67 3 1 1 1 2 83 0 2 2 13 67 0 0 0 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 7 8 1 6 1 7 6 91 0 10 0 11 0 10 11 91 0 0 0 9 0 9 87 0 4 4 5 83 0 5 5 12 67 3 1 1 1 2 83 0 2 2 13 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 7 8 1 6 1 7 6 91 0 10 0 11 0 10 11 91 0 0 0 9 0 9 87 0 4 4 5 83 0 5 5 14 67 3 1 1 1 2 83 0 2 2 13 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
116 114 110 108 100 98 81 78 74 71 67 64 51 48 44 42 36 51 38 36 12 19
CALL[ ]	/* CallFunction */";
};
width = 788;
}
);
note = Eng;
unicode = 330;
},
{
glyphname = O;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(162,602,o),
(225,702,o),
(318,762,o),
(379,762,qs),
(431,762,o),
(511,707,o),
(565,611,o),
(593,483,o),
(593,410,qs),
(593,238,o),
(469,63,o),
(357,63,qs),
(308,63,o),
(225,110,o),
(164,198,o),
(130,323,o),
(130,400,qs),
(130,471,o)
);
},
{
closed = 1;
nodes = (
(83,135,o),
(170,33,o),
(287,-16,o),
(355,-16,qs),
(409,-16,o),
(527,25,o),
(625,123,o),
(689,286,o),
(689,408,qs),
(689,495,o),
(651,651,o),
(573,769,o),
(455,838,o),
(375,838,qs),
(315,838,o),
(217,802,o),
(142,740,o),
(87,655,o),
(51,559,o),
(34,455,o),
(34,404,qs),
(34,294,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
40 42 38 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(145,601,o),
(210,709,o),
(308,777,o),
(373,777,qs),
(425,777,o),
(507,720,o),
(565,620,o),
(596,486,o),
(596,410,qs),
(596,320,o),
(561,184,o),
(497,94,o),
(406,48,o),
(351,48,qs),
(298,48,o),
(210,97,o),
(147,188,o),
(112,319,o),
(112,400,qs),
(112,467,o)
);
},
{
closed = 1;
nodes = (
(87,135,o),
(173,33,o),
(286,-16,o),
(349,-16,qs),
(383,-16,o),
(457,2,o),
(528,41,o),
(593,106,o),
(642,200,o),
(671,327,o),
(671,408,qs),
(671,495,o),
(633,651,o),
(556,769,o),
(442,838,o),
(367,838,qs),
(310,838,o),
(218,802,o),
(144,740,o),
(90,655,o),
(55,559,o),
(37,455,o),
(37,404,qs),
(37,294,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
42 42 40 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 709;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(119,617,o),
(188,734,o),
(291,807,o),
(362,807,qs),
(414,807,o),
(501,745,o),
(564,638,o),
(600,493,o),
(600,410,qs),
(600,312,o),
(561,166,o),
(492,67,o),
(397,18,o),
(342,18,qs),
(284,18,o),
(189,71,o),
(122,170,o),
(86,312,o),
(86,400,qs),
(86,472,o)
);
},
{
closed = 1;
nodes = (
(93,135,o),
(177,33,o),
(284,-16,o),
(340,-16,qs),
(386,-16,o),
(493,25,o),
(584,123,o),
(645,286,o),
(645,408,qs),
(645,495,o),
(606,651,o),
(532,769,o),
(424,838,o),
(356,838,qs),
(305,838,o),
(218,802,o),
(148,740,o),
(95,655,o),
(59,559,o),
(41,455,o),
(41,404,qs),
(41,294,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
40 42 40 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = O;
unicode = 79;
},
{
glyphname = Oacute;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(421,972,o),
(401,972,qs),
(387,972,o),
(348,949,o),
(313,916,o),
(288,882,o),
(288,872,qs),
(288,860,o),
(307,841,o),
(323,841,qs),
(336,841,o),
(376,860,o),
(414,888,o),
(442,921,o),
(442,936,qs),
(442,949,o)
);
},
{
closed = 1;
nodes = (
(162,602,o),
(225,702,o),
(318,762,o),
(379,762,qs),
(431,762,o),
(511,707,o),
(565,611,o),
(593,483,o),
(593,410,qs),
(593,238,o),
(469,63,o),
(357,63,qs),
(308,63,o),
(225,110,o),
(164,198,o),
(130,323,o),
(130,400,qs),
(130,471,o)
);
},
{
closed = 1;
nodes = (
(83,135,o),
(170,33,o),
(287,-16,o),
(355,-16,qs),
(409,-16,o),
(527,25,o),
(625,123,o),
(689,286,o),
(689,408,qs),
(689,495,o),
(651,651,o),
(573,769,o),
(455,838,o),
(375,838,qs),
(315,838,o),
(217,802,o),
(142,740,o),
(87,655,o),
(51,559,o),
(34,455,o),
(34,404,qs),
(34,294,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 4 1 94 0 0 4 0 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 1 0 1 106 0 0 4 0 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 1 0 1 106 0 0 4 0 106 0 4 0 3 2 4 3 92 0 2 2 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
40 42 38 38 38 36 6 21
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(412,972,o),
(397,972,qs),
(386,972,o),
(350,950,o),
(316,919,o),
(291,887,o),
(291,877,qs),
(291,867,o),
(304,854,o),
(315,854,qs),
(325,854,o),
(364,872,o),
(401,899,o),
(429,929,o),
(429,941,qs),
(429,955,o)
);
},
{
closed = 1;
nodes = (
(145,601,o),
(210,709,o),
(308,777,o),
(373,777,qs),
(425,777,o),
(507,720,o),
(565,620,o),
(596,486,o),
(596,410,qs),
(596,320,o),
(561,184,o),
(497,94,o),
(406,48,o),
(351,48,qs),
(298,48,o),
(210,97,o),
(147,188,o),
(112,319,o),
(112,400,qs),
(112,467,o)
);
},
{
closed = 1;
nodes = (
(87,135,o),
(173,33,o),
(286,-16,o),
(349,-16,qs),
(383,-16,o),
(457,2,o),
(528,41,o),
(593,106,o),
(642,200,o),
(671,327,o),
(671,408,qs),
(671,495,o),
(633,651,o),
(556,769,o),
(442,838,o),
(367,838,qs),
(310,838,o),
(218,802,o),
(144,740,o),
(90,655,o),
(55,559,o),
(37,455,o),
(37,404,qs),
(37,294,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 4 1 94 0 0 4 0 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 1 0 1 106 0 0 4 0 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 1 0 1 106 0 0 4 0 106 0 4 0 3 2 4 3 92 0 2 2 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
42 42 40 38 38 36 6 21
CALL[ ]	/* CallFunction */";
};
width = 709;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(399,972,o),
(391,972,qs),
(384,972,o),
(352,952,o),
(320,925,o),
(296,895,o),
(296,886,qs),
(296,875,o),
(304,875,qs),
(311,875,o),
(346,893,o),
(382,917,o),
(410,942,o),
(410,950,qs),
(410,964,o)
);
},
{
closed = 1;
nodes = (
(119,617,o),
(188,734,o),
(291,807,o),
(362,807,qs),
(414,807,o),
(501,745,o),
(564,638,o),
(600,493,o),
(600,410,qs),
(600,312,o),
(561,166,o),
(492,67,o),
(397,18,o),
(342,18,qs),
(284,18,o),
(189,71,o),
(122,170,o),
(86,312,o),
(86,400,qs),
(86,472,o)
);
},
{
closed = 1;
nodes = (
(93,135,o),
(177,33,o),
(284,-16,o),
(340,-16,qs),
(386,-16,o),
(493,25,o),
(584,123,o),
(645,286,o),
(645,408,qs),
(645,495,o),
(606,651,o),
(532,769,o),
(424,838,o),
(356,838,qs),
(305,838,o),
(218,802,o),
(148,740,o),
(95,655,o),
(59,559,o),
(41,455,o),
(41,404,qs),
(41,294,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 4 1 94 0 0 4 0 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 1 0 1 106 0 0 4 0 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 1 0 1 106 0 0 4 0 106 0 4 0 3 2 4 3 92 0 2 2 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
40 42 40 38 37 36 6 21
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = Oacute;
unicode = 211;
},
{
glyphname = Obreve;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(162,602,o),
(225,702,o),
(318,762,o),
(379,762,qs),
(431,762,o),
(511,707,o),
(565,611,o),
(593,483,o),
(593,410,qs),
(593,238,o),
(469,63,o),
(357,63,qs),
(308,63,o),
(225,110,o),
(164,198,o),
(130,323,o),
(130,400,qs),
(130,471,o)
);
},
{
closed = 1;
nodes = (
(83,135,o),
(170,33,o),
(287,-16,o),
(355,-16,qs),
(409,-16,o),
(527,25,o),
(625,123,o),
(689,286,o),
(689,408,qs),
(689,495,o),
(651,651,o),
(573,769,o),
(455,838,o),
(375,838,qs),
(315,838,o),
(217,802,o),
(142,740,o),
(87,655,o),
(51,559,o),
(34,455,o),
(34,404,qs),
(34,294,o)
);
},
{
closed = 1;
nodes = (
(461,971,o),
(446,971,qs),
(433,971,o),
(414,953,o),
(414,942,qs),
(414,934,o),
(387,919,o),
(358,919,qs),
(349,919,o),
(328,921,o),
(310,927,o),
(299,936,o),
(299,942,qs),
(299,959,o),
(280,971,o),
(263,971,qs),
(246,971,o),
(231,954,o),
(231,941,qs),
(231,909,o),
(298,862,o),
(363,862,qs),
(382,862,o),
(425,872,o),
(461,892,o),
(484,921,o),
(484,941,qs),
(484,961,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
7 1 5 6 5 106 0 6 0 4 2 6 4 91 0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
7 1 5 6 5 106 0 6 0 4 2 6 4 91 0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
36 38 36 40 40 42 38 36 8 23
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (37,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (244,355);
ref = breve;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
7 1 5 6 5 106 0 6 0 4 2 6 4 91 0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
7 1 5 6 5 106 0 6 0 4 2 6 4 91 0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
36 38 35 40 42 42 40 37 8 34
CALL[ ]	/* CallFunction */";
};
width = 709;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(456,972,o),
(448,972,qs),
(431,972,o),
(431,949,qs),
(431,939,o),
(418,921,o),
(396,908,o),
(369,900,o),
(356,900,qs),
(342,900,o),
(315,904,o),
(294,914,o),
(282,934,o),
(282,949,qs),
(282,961,o),
(276,972,o),
(265,972,qs),
(248,972,o),
(248,948,qs),
(248,918,o),
(311,875,o),
(356,875,qs),
(375,875,o),
(415,884,o),
(447,902,o),
(467,930,o),
(467,948,qs),
(467,964,o)
);
},
{
closed = 1;
nodes = (
(119,617,o),
(188,734,o),
(291,807,o),
(362,807,qs),
(414,807,o),
(501,745,o),
(564,638,o),
(600,493,o),
(600,410,qs),
(600,312,o),
(561,166,o),
(492,67,o),
(397,18,o),
(342,18,qs),
(284,18,o),
(189,71,o),
(122,170,o),
(86,312,o),
(86,400,qs),
(86,472,o)
);
},
{
closed = 1;
nodes = (
(93,135,o),
(177,33,o),
(284,-16,o),
(340,-16,qs),
(386,-16,o),
(493,25,o),
(584,123,o),
(645,286,o),
(645,408,qs),
(645,495,o),
(606,651,o),
(532,769,o),
(424,838,o),
(356,838,qs),
(305,838,o),
(218,802,o),
(148,740,o),
(95,655,o),
(59,559,o),
(41,455,o),
(41,404,qs),
(41,294,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
3 1 1 2 1 106 0 2 0 0 6 2 0 91 0 5 5 6 83 0 6 6 20 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
3 1 1 2 1 106 0 2 0 0 6 2 0 91 0 6 0 5 4 6 5 91 0 4 4 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
40 42 40 38 37 38 35 36 8 23
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = Obreve;
unicode = 334;
},
{
glyphname = Ocircumflex;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(486,844,o),
(486,851,qs),
(486,867,o),
(451,908,o),
(405,946,o),
(362,972,o),
(353,972,qs),
(346,972,o),
(303,947,o),
(257,909,o),
(221,864,o),
(221,844,qs),
(221,839,o),
(228,830,o),
(234,830,qs),
(240,830,o),
(265,837,o),
(298,851,o),
(336,869,o),
(353,880,q),
(370,869,o),
(408,851,o),
(442,837,o),
(468,830,o),
(473,830,qs),
(481,830,o)
);
},
{
closed = 1;
nodes = (
(162,602,o),
(225,702,o),
(318,762,o),
(379,762,qs),
(431,762,o),
(511,707,o),
(565,611,o),
(593,483,o),
(593,410,qs),
(593,238,o),
(469,63,o),
(357,63,qs),
(308,63,o),
(225,110,o),
(164,198,o),
(130,323,o),
(130,400,qs),
(130,471,o)
);
},
{
closed = 1;
nodes = (
(83,135,o),
(170,33,o),
(287,-16,o),
(355,-16,qs),
(409,-16,o),
(527,25,o),
(625,123,o),
(689,286,o),
(689,408,qs),
(689,495,o),
(651,651,o),
(573,769,o),
(455,838,o),
(375,838,qs),
(315,838,o),
(217,802,o),
(142,740,o),
(87,655,o),
(51,559,o),
(34,455,o),
(34,404,qs),
(34,294,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 5 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 2 5 5 2 94 1 7 2 0 5 4 5 0 4 104 0 4 4 5 83 0 5 5 20 67 0 3 3 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 5 2 106 1 7 2 0 5 4 5 0 4 104 0 4 4 5 83 0 5 5 20 67 0 3 3 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 5 2 106 1 7 2 0 5 4 5 0 4 104 0 5 0 4 3 5 4 92 0 3 3 6 83 0 6 6 21 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
1 0 62 60 52 50 40 38 32 30 19 17 11 9 0 25 1 25 8 15
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(484,857,o),
(484,864,qs),
(484,877,o),
(450,915,o),
(405,948,o),
(362,972,o),
(353,972,qs),
(345,972,o),
(303,949,o),
(258,915,o),
(223,876,o),
(223,860,qs),
(223,847,o),
(234,847,qs),
(239,847,o),
(265,855,o),
(298,869,o),
(336,888,o),
(353,898,q),
(370,888,o),
(408,869,o),
(442,855,o),
(468,847,o),
(473,847,qs),
(479,847,o)
);
},
{
closed = 1;
nodes = (
(145,601,o),
(210,709,o),
(308,777,o),
(373,777,qs),
(425,777,o),
(507,720,o),
(565,620,o),
(596,486,o),
(596,410,qs),
(596,320,o),
(561,184,o),
(497,94,o),
(406,48,o),
(351,48,qs),
(298,48,o),
(210,97,o),
(147,188,o),
(112,319,o),
(112,400,qs),
(112,467,o)
);
},
{
closed = 1;
nodes = (
(87,135,o),
(173,33,o),
(286,-16,o),
(349,-16,qs),
(383,-16,o),
(457,2,o),
(528,41,o),
(593,106,o),
(642,200,o),
(671,327,o),
(671,408,qs),
(671,495,o),
(633,651,o),
(556,769,o),
(442,838,o),
(367,838,qs),
(310,838,o),
(218,802,o),
(144,740,o),
(90,655,o),
(55,559,o),
(37,455,o),
(37,404,qs),
(37,294,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 0 5 2 94 1 7 2 0 5 0 106 0 4 4 5 83 0 5 5 20 67 0 3 3 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 2 106 1 7 2 0 5 0 106 0 4 4 5 83 0 5 5 20 67 0 3 3 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 0 2 106 1 7 2 0 5 0 106 0 5 0 4 3 5 4 92 0 3 3 6 83 0 6 6 21 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
1 0 65 63 53 51 41 39 31 29 18 16 11 9 0 24 1 24 8 15
CALL[ ]	/* CallFunction */";
};
width = 709;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(481,886,qs),
(481,895,o),
(448,925,o),
(405,952,o),
(362,972,o),
(353,972,qs),
(344,972,o),
(303,952,o),
(259,925,o),
(226,895,o),
(226,886,qs),
(226,875,o),
(234,875,qs),
(239,875,o),
(264,885,o),
(298,901,o),
(336,919,o),
(353,928,q),
(370,919,o),
(408,901,o),
(442,885,o),
(468,875,o),
(473,875,qs),
(481,875,o)
);
},
{
closed = 1;
nodes = (
(119,617,o),
(188,734,o),
(291,807,o),
(362,807,qs),
(414,807,o),
(501,745,o),
(564,638,o),
(600,493,o),
(600,410,qs),
(600,312,o),
(561,166,o),
(492,67,o),
(397,18,o),
(342,18,qs),
(284,18,o),
(189,71,o),
(122,170,o),
(86,312,o),
(86,400,qs),
(86,472,o)
);
},
{
closed = 1;
nodes = (
(93,135,o),
(177,33,o),
(284,-16,o),
(340,-16,qs),
(386,-16,o),
(493,25,o),
(584,123,o),
(645,286,o),
(645,408,qs),
(645,495,o),
(606,651,o),
(532,769,o),
(424,838,o),
(356,838,qs),
(305,838,o),
(218,802,o),
(148,740,o),
(95,655,o),
(59,559,o),
(41,455,o),
(41,404,qs),
(41,294,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 0 5 2 94 1 7 2 0 5 0 106 0 4 4 5 83 0 5 5 20 67 0 3 3 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 2 106 1 7 2 0 5 0 106 0 4 4 5 83 0 5 5 20 67 0 3 3 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 0 2 106 1 7 2 0 5 0 106 0 5 0 4 3 5 4 92 0 3 3 6 83 0 6 6 21 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
1 0 62 60 52 50 40 38 30 28 18 16 11 9 0 23 1 23 8 15
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = Ocircumflex;
unicode = 212;
},
{
glyphname = Odieresis;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(237,841,o),
(262,841,qs),
(273,841,o),
(297,847,o),
(316,863,o),
(328,890,o),
(328,911,qs),
(328,938,o),
(292,972,o),
(269,972,qs),
(251,972,o),
(226,958,o),
(209,938,o),
(202,915,o),
(202,907,qs),
(202,878,o)
);
},
{
closed = 1;
nodes = (
(444,830,o),
(469,830,qs),
(480,830,o),
(504,836,o),
(523,852,o),
(535,879,o),
(535,900,qs),
(535,928,o),
(499,961,o),
(476,961,qs),
(458,961,o),
(433,947,o),
(416,927,o),
(409,904,o),
(409,896,qs),
(409,867,o)
);
},
{
closed = 1;
nodes = (
(162,602,o),
(225,702,o),
(318,762,o),
(379,762,qs),
(431,762,o),
(511,707,o),
(565,611,o),
(593,483,o),
(593,410,qs),
(593,238,o),
(469,63,o),
(357,63,qs),
(308,63,o),
(225,110,o),
(164,198,o),
(130,323,o),
(130,400,qs),
(130,471,o)
);
},
{
closed = 1;
nodes = (
(83,135,o),
(170,33,o),
(287,-16,o),
(355,-16,qs),
(409,-16,o),
(527,25,o),
(625,123,o),
(689,286,o),
(689,408,qs),
(689,495,o),
(651,651,o),
(573,769,o),
(455,838,o),
(375,838,qs),
(315,838,o),
(217,802,o),
(142,740,o),
(87,655,o),
(51,559,o),
(34,455,o),
(34,404,qs),
(34,294,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
2 1 0 3 1 1 6 0 1 91 0 5 5 6 83 0 6 6 20 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 1 6 0 1 91 0 2 0 3 5 2 3 91 0 5 5 6 83 0 6 6 20 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 0 1 6 0 1 91 0 2 0 3 5 2 3 91 0 6 0 5 4 6 5 91 0 4 4 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
40 42 38 38 38 38 38 36 8 23
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(236,859,o),
(256,859,qs),
(275,859,o),
(312,884,o),
(312,920,qs),
(312,943,o),
(283,972,o),
(263,972,qs),
(248,972,o),
(227,960,o),
(213,942,o),
(207,923,o),
(207,916,qs),
(207,891,o)
);
},
{
closed = 1;
nodes = (
(443,847,o),
(463,847,qs),
(482,847,o),
(519,872,o),
(519,908,qs),
(519,931,o),
(490,960,o),
(470,960,qs),
(455,960,o),
(434,948,o),
(420,930,o),
(414,911,o),
(414,904,qs),
(414,879,o)
);
},
{
closed = 1;
nodes = (
(145,601,o),
(210,709,o),
(308,777,o),
(373,777,qs),
(425,777,o),
(507,720,o),
(565,620,o),
(596,486,o),
(596,410,qs),
(596,320,o),
(561,184,o),
(497,94,o),
(406,48,o),
(351,48,qs),
(298,48,o),
(210,97,o),
(147,188,o),
(112,319,o),
(112,400,qs),
(112,467,o)
);
},
{
closed = 1;
nodes = (
(87,135,o),
(173,33,o),
(286,-16,o),
(349,-16,qs),
(383,-16,o),
(457,2,o),
(528,41,o),
(593,106,o),
(642,200,o),
(671,327,o),
(671,408,qs),
(671,495,o),
(633,651,o),
(556,769,o),
(442,838,o),
(367,838,qs),
(310,838,o),
(218,802,o),
(144,740,o),
(90,655,o),
(55,559,o),
(37,455,o),
(37,404,qs),
(37,294,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 6 2 3 91 0 5 5 6 83 0 6 6 20 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 6 2 3 91 0 6 0 5 4 6 5 91 0 4 4 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
42 42 40 38 36 38 36 36 8 23
CALL[ ]	/* CallFunction */";
};
width = 709;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(234,889,o),
(248,889,qs),
(262,889,o),
(289,908,o),
(289,935,qs),
(289,952,o),
(269,972,o),
(255,972,qs),
(244,972,o),
(229,963,o),
(219,950,o),
(214,936,o),
(214,931,qs),
(214,913,o)
);
},
{
closed = 1;
nodes = (
(441,875,o),
(455,875,qs),
(469,875,o),
(496,894,o),
(496,921,qs),
(496,938,o),
(476,958,o),
(462,958,qs),
(451,958,o),
(436,949,o),
(426,936,o),
(421,922,o),
(421,917,qs),
(421,899,o)
);
},
{
closed = 1;
nodes = (
(119,617,o),
(188,734,o),
(291,807,o),
(362,807,qs),
(414,807,o),
(501,745,o),
(564,638,o),
(600,493,o),
(600,410,qs),
(600,312,o),
(561,166,o),
(492,67,o),
(397,18,o),
(342,18,qs),
(284,18,o),
(189,71,o),
(122,170,o),
(86,312,o),
(86,400,qs),
(86,472,o)
);
},
{
closed = 1;
nodes = (
(93,135,o),
(177,33,o),
(284,-16,o),
(340,-16,qs),
(386,-16,o),
(493,25,o),
(584,123,o),
(645,286,o),
(645,408,qs),
(645,495,o),
(606,651,o),
(532,769,o),
(424,838,o),
(356,838,qs),
(305,838,o),
(218,802,o),
(148,740,o),
(95,655,o),
(59,559,o),
(41,455,o),
(41,404,qs),
(41,294,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 6 2 3 91 0 5 5 6 83 0 6 6 20 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 6 2 3 91 0 6 0 5 4 6 5 91 0 4 4 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
40 42 40 38 36 38 36 36 8 23
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = Odieresis;
unicode = 214;
},
{
glyphname = Ograve;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(318,888,o),
(357,860,o),
(397,841,o),
(410,841,qs),
(425,841,o),
(445,860,o),
(445,872,qs),
(445,882,o),
(420,916,o),
(384,949,o),
(345,972,o),
(331,972,qs),
(311,972,o),
(290,949,o),
(290,936,qs),
(290,921,o)
);
},
{
closed = 1;
nodes = (
(162,602,o),
(225,702,o),
(318,762,o),
(379,762,qs),
(431,762,o),
(511,707,o),
(565,611,o),
(593,483,o),
(593,410,qs),
(593,238,o),
(469,63,o),
(357,63,qs),
(308,63,o),
(225,110,o),
(164,198,o),
(130,323,o),
(130,400,qs),
(130,471,o)
);
},
{
closed = 1;
nodes = (
(83,135,o),
(170,33,o),
(287,-16,o),
(355,-16,qs),
(409,-16,o),
(527,25,o),
(625,123,o),
(689,286,o),
(689,408,qs),
(689,495,o),
(651,651,o),
(573,769,o),
(455,838,o),
(375,838,qs),
(315,838,o),
(217,802,o),
(142,740,o),
(87,655,o),
(51,559,o),
(34,455,o),
(34,404,qs),
(34,294,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 1 4 0 94 0 1 4 1 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 1 0 106 0 1 4 1 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 0 1 0 106 0 1 4 1 106 0 4 0 3 2 4 3 92 0 2 2 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
40 42 38 40 38 34 6 21
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(321,899,o),
(358,872,o),
(396,854,o),
(407,854,qs),
(418,854,o),
(431,867,o),
(431,877,qs),
(431,887,o),
(406,919,o),
(372,950,o),
(336,972,o),
(325,972,qs),
(310,972,o),
(293,955,o),
(293,941,qs),
(293,929,o)
);
},
{
closed = 1;
nodes = (
(145,601,o),
(210,709,o),
(308,777,o),
(373,777,qs),
(425,777,o),
(507,720,o),
(565,620,o),
(596,486,o),
(596,410,qs),
(596,320,o),
(561,184,o),
(497,94,o),
(406,48,o),
(351,48,qs),
(298,48,o),
(210,97,o),
(147,188,o),
(112,319,o),
(112,400,qs),
(112,467,o)
);
},
{
closed = 1;
nodes = (
(87,135,o),
(173,33,o),
(286,-16,o),
(349,-16,qs),
(383,-16,o),
(457,2,o),
(528,41,o),
(593,106,o),
(642,200,o),
(671,327,o),
(671,408,qs),
(671,495,o),
(633,651,o),
(556,769,o),
(442,838,o),
(367,838,qs),
(310,838,o),
(218,802,o),
(144,740,o),
(90,655,o),
(55,559,o),
(37,455,o),
(37,404,qs),
(37,294,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 1 4 0 94 0 1 4 1 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 1 0 106 0 1 4 1 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 0 1 0 106 0 1 4 1 106 0 4 0 3 2 4 3 92 0 2 2 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
42 42 40 40 38 34 6 21
CALL[ ]	/* CallFunction */";
};
width = 709;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(325,917,o),
(361,893,o),
(396,875,o),
(403,875,qs),
(411,875,o),
(411,886,qs),
(411,895,o),
(387,925,o),
(355,952,o),
(323,972,o),
(316,972,qs),
(308,972,o),
(297,964,o),
(297,950,qs),
(297,942,o)
);
},
{
closed = 1;
nodes = (
(119,617,o),
(188,734,o),
(291,807,o),
(362,807,qs),
(414,807,o),
(501,745,o),
(564,638,o),
(600,493,o),
(600,410,qs),
(600,312,o),
(561,166,o),
(492,67,o),
(397,18,o),
(342,18,qs),
(284,18,o),
(189,71,o),
(122,170,o),
(86,312,o),
(86,400,qs),
(86,472,o)
);
},
{
closed = 1;
nodes = (
(93,135,o),
(177,33,o),
(284,-16,o),
(340,-16,qs),
(386,-16,o),
(493,25,o),
(584,123,o),
(645,286,o),
(645,408,qs),
(645,495,o),
(606,651,o),
(532,769,o),
(424,838,o),
(356,838,qs),
(305,838,o),
(218,802,o),
(148,740,o),
(95,655,o),
(59,559,o),
(41,455,o),
(41,404,qs),
(41,294,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 1 4 0 94 0 1 4 1 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 1 0 106 0 1 4 1 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 0 1 0 106 0 1 4 1 106 0 4 0 3 2 4 3 92 0 2 2 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
40 42 40 40 37 34 6 21
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = Ograve;
unicode = 210;
},
{
glyphname = Ohungarumlaut;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(347,972,o),
(327,972,qs),
(313,972,o),
(274,949,o),
(238,916,o),
(213,882,o),
(213,872,qs),
(213,860,o),
(233,841,o),
(249,841,qs),
(262,841,o),
(302,860,o),
(340,888,o),
(368,921,o),
(368,936,qs),
(368,949,o)
);
},
{
closed = 1;
nodes = (
(511,972,o),
(491,972,qs),
(477,972,o),
(438,949,o),
(403,916,o),
(378,882,o),
(378,872,qs),
(378,860,o),
(397,841,o),
(413,841,qs),
(426,841,o),
(466,860,o),
(504,888,o),
(532,921,o),
(532,936,qs),
(532,949,o)
);
},
{
closed = 1;
nodes = (
(162,602,o),
(225,702,o),
(318,762,o),
(379,762,qs),
(431,762,o),
(511,707,o),
(565,611,o),
(593,483,o),
(593,410,qs),
(593,238,o),
(469,63,o),
(357,63,qs),
(308,63,o),
(225,110,o),
(164,198,o),
(130,323,o),
(130,400,qs),
(130,471,o)
);
},
{
closed = 1;
nodes = (
(83,135,o),
(170,33,o),
(287,-16,o),
(355,-16,qs),
(409,-16,o),
(527,25,o),
(625,123,o),
(689,286,o),
(689,408,qs),
(689,495,o),
(651,651,o),
(573,769,o),
(455,838,o),
(375,838,qs),
(315,838,o),
(217,802,o),
(142,740,o),
(87,655,o),
(51,559,o),
(34,455,o),
(34,404,qs),
(34,294,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
3 1 1 0 6 1 94 2 1 0 6 0 106 0 5 5 6 83 0 6 6 20 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
3 1 1 0 1 106 2 1 0 6 0 106 0 5 5 6 83 0 6 6 20 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
3 1 1 0 1 106 2 1 0 6 0 106 0 6 0 5 4 6 5 92 0 4 4 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
40 42 38 38 38 38 38 36 8 23
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(342,972,o),
(327,972,qs),
(316,972,o),
(280,950,o),
(246,919,o),
(221,887,o),
(221,877,qs),
(221,867,o),
(234,854,o),
(245,854,qs),
(255,854,o),
(294,872,o),
(331,899,o),
(359,929,o),
(359,941,qs),
(359,955,o)
);
},
{
closed = 1;
nodes = (
(502,972,o),
(487,972,qs),
(476,972,o),
(440,950,o),
(406,919,o),
(381,887,o),
(381,877,qs),
(381,867,o),
(394,854,o),
(405,854,qs),
(415,854,o),
(454,872,o),
(491,899,o),
(519,929,o),
(519,941,qs),
(519,955,o)
);
},
{
closed = 1;
nodes = (
(145,601,o),
(210,709,o),
(308,777,o),
(373,777,qs),
(425,777,o),
(507,720,o),
(565,620,o),
(596,486,o),
(596,410,qs),
(596,320,o),
(561,184,o),
(497,94,o),
(406,48,o),
(351,48,qs),
(298,48,o),
(210,97,o),
(147,188,o),
(112,319,o),
(112,400,qs),
(112,467,o)
);
},
{
closed = 1;
nodes = (
(87,135,o),
(173,33,o),
(286,-16,o),
(349,-16,qs),
(383,-16,o),
(457,2,o),
(528,41,o),
(593,106,o),
(642,200,o),
(671,327,o),
(671,408,qs),
(671,495,o),
(633,651,o),
(556,769,o),
(442,838,o),
(367,838,qs),
(310,838,o),
(218,802,o),
(144,740,o),
(90,655,o),
(55,559,o),
(37,455,o),
(37,404,qs),
(37,294,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
3 1 1 0 6 1 94 2 1 0 6 0 106 0 5 5 6 83 0 6 6 20 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
3 1 1 0 1 106 2 1 0 6 0 106 0 5 5 6 83 0 6 6 20 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
3 1 1 0 1 106 2 1 0 6 0 106 0 6 0 5 4 6 5 92 0 4 4 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
42 42 40 38 38 38 38 36 8 23
CALL[ ]	/* CallFunction */";
};
width = 709;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(335,972,o),
(327,972,qs),
(320,972,o),
(288,952,o),
(256,925,o),
(232,895,o),
(232,886,qs),
(232,875,o),
(240,875,qs),
(247,875,o),
(282,893,o),
(318,917,o),
(346,942,o),
(346,950,qs),
(346,964,o)
);
},
{
closed = 1;
nodes = (
(489,972,o),
(481,972,qs),
(474,972,o),
(442,952,o),
(410,925,o),
(386,895,o),
(386,886,qs),
(386,875,o),
(394,875,qs),
(401,875,o),
(436,893,o),
(472,917,o),
(500,942,o),
(500,950,qs),
(500,964,o)
);
},
{
closed = 1;
nodes = (
(119,617,o),
(188,734,o),
(291,807,o),
(362,807,qs),
(414,807,o),
(501,745,o),
(564,638,o),
(600,493,o),
(600,410,qs),
(600,312,o),
(561,166,o),
(492,67,o),
(397,18,o),
(342,18,qs),
(284,18,o),
(189,71,o),
(122,170,o),
(86,312,o),
(86,400,qs),
(86,472,o)
);
},
{
closed = 1;
nodes = (
(93,135,o),
(177,33,o),
(284,-16,o),
(340,-16,qs),
(386,-16,o),
(493,25,o),
(584,123,o),
(645,286,o),
(645,408,qs),
(645,495,o),
(606,651,o),
(532,769,o),
(424,838,o),
(356,838,qs),
(305,838,o),
(218,802,o),
(148,740,o),
(95,655,o),
(59,559,o),
(41,455,o),
(41,404,qs),
(41,294,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
3 1 1 0 6 1 94 2 1 0 6 0 106 0 5 5 6 83 0 6 6 20 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
3 1 1 0 1 106 2 1 0 6 0 106 0 5 5 6 83 0 6 6 20 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
3 1 1 0 1 106 2 1 0 6 0 106 0 6 0 5 4 6 5 92 0 4 4 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
40 42 40 38 37 38 37 36 8 23
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = Ohungarumlaut;
unicode = 336;
},
{
glyphname = Omacron;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(406,962,o),
(364,962,qs),
(351,962,o),
(316,963,o),
(280,963,o),
(250,964,o),
(243,964,qs),
(226,964,o),
(210,939,o),
(210,925,qs),
(210,911,o),
(229,885,o),
(243,885,qs),
(261,885,o),
(325,885,o),
(397,886,o),
(464,886,o),
(484,886,qs),
(495,886,o),
(509,895,o),
(517,908,o),
(520,923,o),
(520,928,qs),
(520,943,o),
(503,965,o),
(492,965,qs),
(468,965,o)
);
},
{
closed = 1;
nodes = (
(162,602,o),
(225,702,o),
(318,762,o),
(379,762,qs),
(431,762,o),
(511,707,o),
(565,611,o),
(593,483,o),
(593,410,qs),
(593,238,o),
(469,63,o),
(357,63,qs),
(308,63,o),
(225,110,o),
(164,198,o),
(130,323,o),
(130,400,qs),
(130,471,o)
);
},
{
closed = 1;
nodes = (
(83,135,o),
(170,33,o),
(287,-16,o),
(355,-16,qs),
(409,-16,o),
(527,25,o),
(625,123,o),
(689,286,o),
(689,408,qs),
(689,495,o),
(651,651,o),
(573,769,o),
(455,838,o),
(375,838,qs),
(315,838,o),
(217,802,o),
(142,740,o),
(87,655,o),
(51,559,o),
(34,455,o),
(34,404,qs),
(34,294,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
6 1 0 0 1 4 0 1 91 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
6 1 0 0 1 4 0 1 91 0 4 0 3 2 4 3 91 0 2 2 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
1 0 63 61 53 51 41 39 33 31 14 7 0 26 1 18 7 15
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (37,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (208,390);
ref = macron;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
6 1 4 0 5 2 4 5 91 0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
6 1 4 0 5 2 4 5 91 0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
46 45 57 50 45 69 46 61 42 42 40 37 7 30
CALL[ ]	/* CallFunction */";
};
width = 709;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(119,617,o),
(188,734,o),
(291,807,o),
(362,807,qs),
(414,807,o),
(501,745,o),
(564,638,o),
(600,493,o),
(600,410,qs),
(600,312,o),
(561,166,o),
(492,67,o),
(397,18,o),
(342,18,qs),
(284,18,o),
(189,71,o),
(122,170,o),
(86,312,o),
(86,400,qs),
(86,472,o)
);
},
{
closed = 1;
nodes = (
(93,135,o),
(177,33,o),
(284,-16,o),
(340,-16,qs),
(386,-16,o),
(493,25,o),
(584,123,o),
(645,286,o),
(645,408,qs),
(645,495,o),
(606,651,o),
(532,769,o),
(424,838,o),
(356,838,qs),
(305,838,o),
(218,802,o),
(148,740,o),
(95,655,o),
(59,559,o),
(41,455,o),
(41,404,qs),
(41,294,o)
);
},
{
closed = 1;
nodes = (
(408,904,o),
(366,904,qs),
(353,904,o),
(318,905,o),
(282,905,o),
(252,906,o),
(245,906,qs),
(237,906,o),
(229,896,o),
(229,891,qs),
(229,886,o),
(238,875,o),
(245,875,qs),
(263,875,o),
(327,875,o),
(399,876,o),
(466,876,o),
(486,876,qs),
(497,876,o),
(505,889,o),
(505,894,qs),
(505,899,o),
(498,907,o),
(494,907,qs),
(470,907,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
6 1 4 0 5 2 4 5 91 0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
6 1 4 0 5 2 4 5 91 0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
43 42 54 47 42 66 43 58 40 42 40 36 7 19
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = Omacron;
unicode = 332;
},
{
glyphname = Oogonek;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(76,147,o),
(154,44,o),
(260,-10,o),
(322,-15,q),
(313,-20,o),
(292,-35,o),
(273,-55,o),
(261,-79,o),
(261,-94,qs),
(261,-113,o),
(281,-141,o),
(312,-160,o),
(351,-169,o),
(371,-169,qs),
(392,-169,o),
(424,-158,o),
(444,-142,o),
(454,-124,o),
(454,-116,qs),
(454,-107,o),
(439,-92,o),
(429,-92,qs),
(421,-92,o),
(412,-100,o),
(401,-109,o),
(384,-116,o),
(369,-116,qs),
(358,-116,o),
(340,-106,o),
(340,-95,qs),
(340,-75,o),
(360,-28,o),
(380,-15,q),
(432,-11,o),
(541,37,o),
(630,136,o),
(687,293,o),
(687,408,qs),
(687,495,o),
(649,651,o),
(571,769,o),
(453,838,o),
(373,838,qs),
(313,838,o),
(215,802,o),
(140,740,o),
(85,655,o),
(49,559,o),
(32,455,o),
(32,404,qs),
(32,300,o)
);
},
{
closed = 1;
nodes = (
(160,602,o),
(223,702,o),
(316,762,o),
(377,762,qs),
(429,762,o),
(509,707,o),
(563,611,o),
(591,483,o),
(591,410,qs),
(591,238,o),
(467,63,o),
(355,63,qs),
(306,63,o),
(223,110,o),
(162,198,o),
(128,323,o),
(128,400,qs),
(128,471,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
46 1 2 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 5 2 5 4 2 104 0 2 1 5 2 1 102 0 1 0 3 1 3 88 0 5 5 0 83 0 0 0 20 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 5 2 5 4 2 104 0 2 1 5 2 1 102 0 0 0 5 4 0 5 91 0 1 3 3 1 79 0 1 1 3 84 0 3 1 3 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
65 63 57 55 38 35 46 38 6 19
CALL[ ]	/* CallFunction */";
};
width = 722;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (37,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (250,-19);
ref = ogonek;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 0 1 7 7 0 96 0 5 3 4 3 5 4 104 0 4 0 6 4 6 87 0 1 1 2 83 0 2 2 20 67 8 1 7 7 3 84 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 1 7 1 0 7 104 0 5 3 4 3 5 4 104 0 4 0 6 4 6 87 0 1 1 2 83 0 2 2 20 67 8 1 7 7 3 84 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 0 1 7 1 0 7 104 0 5 3 4 3 5 4 104 0 2 0 1 0 2 1 91 0 4 0 6 4 6 87 8 1 7 7 3 84 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
45 45 45 74 45 74 38 35 43 42 42 40 37 9 33
CALL[ ]	/* CallFunction */";
};
width = 707;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(88,144,o),
(166,41,o),
(267,-11,o),
(320,-15,q),
(305,-25,o),
(269,-65,o),
(269,-96,qs),
(269,-128,o),
(315,-169,o),
(350,-169,qs),
(368,-169,o),
(396,-156,o),
(417,-139,o),
(428,-122,o),
(428,-118,qs),
(428,-112,o),
(423,-102,o),
(414,-102,qs),
(407,-102,o),
(396,-115,o),
(383,-130,o),
(365,-142,o),
(352,-142,qs),
(340,-142,o),
(325,-132,o),
(316,-117,o),
(313,-101,o),
(313,-95,qs),
(313,-89,o),
(316,-69,o),
(325,-46,o),
(341,-23,o),
(354,-15,q),
(400,-12,o),
(502,33,o),
(588,131,o),
(644,291,o),
(644,408,qs),
(644,495,o),
(605,651,o),
(531,769,o),
(423,838,o),
(355,838,qs),
(304,838,o),
(217,802,o),
(147,740,o),
(94,655,o),
(58,559,o),
(40,455,o),
(40,404,qs),
(40,298,o)
);
},
{
closed = 1;
nodes = (
(118,617,o),
(187,734,o),
(290,807,o),
(361,807,qs),
(413,807,o),
(500,745,o),
(563,638,o),
(599,493,o),
(599,410,qs),
(599,312,o),
(560,166,o),
(491,67,o),
(396,18,o),
(341,18,qs),
(283,18,o),
(188,71,o),
(121,170,o),
(85,312,o),
(85,400,qs),
(85,472,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
46 1 3 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 3 1 2 1 3 2 104 0 2 0 4 2 4 87 0 6 6 0 83 0 0 0 20 67 0 5 5 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 3 1 2 1 3 2 104 0 0 0 6 5 0 6 91 0 2 0 4 2 4 87 0 5 5 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
40 46 38 35 41 24 38 7 22
CALL[ ]	/* CallFunction */";
};
width = 685;
}
);
note = Oogonek;
unicode = 490;
},
{
glyphname = Oslash;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(110,22,o),
(109,16,o),
(109,14,qs),
(109,-2,o),
(135,-19,o),
(146,-19,qs),
(166,-19,o),
(192,-6,o),
(197,5,qs),
(205,19,l),
(272,-16,o),
(355,-16,qs),
(409,-16,o),
(527,25,o),
(625,123,o),
(689,286,o),
(689,408,qs),
(689,508,o),
(639,681,o),
(588,741,q),
(602,768,ls),
(606,774,o),
(616,799,o),
(616,807,qs),
(616,819,o),
(592,838,o),
(571,838,qs),
(554,838,o),
(533,823,o),
(520,800,q),
(489,818,o),
(417,838,o),
(375,838,qs),
(315,838,o),
(217,802,o),
(142,740,o),
(87,655,o),
(51,559,o),
(34,455,o),
(34,404,qs),
(34,287,o),
(88,124,o),
(136,73,q),
(111,24,ls)
);
},
{
closed = 1;
nodes = (
(162,602,o),
(225,702,o),
(318,762,o),
(379,762,qs),
(409,762,o),
(460,742,o),
(482,725,q),
(465,691,o),
(444,647,o),
(427,612,o),
(410,579,o),
(386,534,o),
(352,471,o),
(326,423,qs),
(186,166,l),
(160,210,o),
(130,328,o),
(130,400,qs),
(130,471,o)
);
},
{
closed = 1;
nodes = (
(469,63,o),
(357,63,qs),
(295,63,o),
(247,99,q),
(541,653,l),
(567,605,o),
(593,481,o),
(593,410,qs),
(593,238,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
13 1 4 0 67 66 55 47 23 0 6 5 4 33 1 2 5 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 4 4 0 83 1 1 0 0 20 67 0 5 5 2 83 3 1 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
1 1 0 0 4 5 0 4 91 0 5 5 2 83 3 1 2 2 21 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
70 68 59 57 36 45 36 41 6 19
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (37,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (89,0);
ref = slash;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 2 83 4 1 2 2 20 67 0 0 0 3 83 5 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 4 4 20 67 0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 5 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 4 2 1 2 4 1 104 0 2 0 1 0 2 1 91 0 0 0 3 83 5 1 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
75 73 65 63 42 42 40 37 6 30
CALL[ ]	/* CallFunction */";
};
width = 709;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(115,13,o),
(112,-1,o),
(112,-7,qs),
(112,-19,o),
(126,-19,qs),
(138,-19,o),
(148,-9,o),
(155,5,qs),
(175,43,l),
(212,13,o),
(296,-16,o),
(340,-16,qs),
(386,-16,o),
(493,25,o),
(584,123,o),
(645,286,o),
(645,408,qs),
(645,508,o),
(594,681,o),
(546,741,q),
(560,768,ls),
(564,776,o),
(574,799,o),
(574,807,qs),
(574,813,o),
(568,821,o),
(559,821,qs),
(550,821,o),
(535,809,o),
(523,792,o),
(516,777,o),
(515,774,q),
(482,804,o),
(403,838,o),
(356,838,qs),
(305,838,o),
(218,802,o),
(148,740,o),
(95,655,o),
(59,559,o),
(41,455,o),
(41,404,qs),
(41,286,o),
(98,122,o),
(145,71,q),
(117,18,ls)
);
},
{
closed = 1;
nodes = (
(119,617,o),
(188,734,o),
(291,807,o),
(362,807,qs),
(400,807,o),
(469,771,o),
(498,739,q),
(482,706,o),
(461,664,o),
(444,629,o),
(427,595,o),
(402,546,o),
(364,476,o),
(335,423,qs),
(306,369,o),
(275,314,o),
(258,283,o),
(247,264,o),
(228,229,o),
(195,167,o),
(164,108,q),
(126,159,o),
(86,306,o),
(86,400,qs),
(86,472,o)
);
},
{
closed = 1;
nodes = (
(561,166,o),
(492,67,o),
(397,18,o),
(342,18,qs),
(256,18,o),
(193,76,q),
(525,703,l),
(560,648,o),
(600,498,o),
(600,410,qs),
(600,312,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
75 74 63 49 36 25 13 0 8 5 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 1 1 12 67 0 4 4 0 83 0 0 0 20 67 0 5 5 2 83 3 1 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 4 5 0 4 91 0 1 1 14 67 0 5 5 2 83 3 1 2 2 21 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
78 76 67 65 37 45 38 41 6 19
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = Oslash;
unicode = 216;
},
{
glyphname = Oslashacute;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(110,22,o),
(109,16,o),
(109,14,qs),
(109,-2,o),
(135,-19,o),
(146,-19,qs),
(166,-19,o),
(192,-6,o),
(197,5,qs),
(205,19,l),
(272,-16,o),
(355,-16,qs),
(409,-16,o),
(527,25,o),
(625,123,o),
(689,286,o),
(689,408,qs),
(689,508,o),
(639,681,o),
(588,741,q),
(602,768,ls),
(606,774,o),
(616,799,o),
(616,807,qs),
(616,819,o),
(592,838,o),
(571,838,qs),
(554,838,o),
(533,823,o),
(520,800,q),
(489,818,o),
(417,838,o),
(375,838,qs),
(315,838,o),
(217,802,o),
(142,740,o),
(87,655,o),
(51,559,o),
(34,455,o),
(34,404,qs),
(34,287,o),
(88,124,o),
(136,73,q),
(111,24,ls)
);
},
{
closed = 1;
nodes = (
(162,602,o),
(225,702,o),
(318,762,o),
(379,762,qs),
(409,762,o),
(460,742,o),
(482,725,q),
(465,691,o),
(444,647,o),
(427,612,o),
(410,579,o),
(386,534,o),
(352,471,o),
(326,423,qs),
(186,166,l),
(160,210,o),
(130,328,o),
(130,400,qs),
(130,471,o)
);
},
{
closed = 1;
nodes = (
(469,63,o),
(357,63,qs),
(295,63,o),
(247,99,q),
(541,653,l),
(567,605,o),
(593,481,o),
(593,410,qs),
(593,238,o)
);
},
{
closed = 1;
nodes = (
(441,972,o),
(421,972,qs),
(407,972,o),
(368,948,o),
(333,916,o),
(308,881,o),
(308,871,qs),
(308,860,o),
(327,841,o),
(343,841,qs),
(356,841,o),
(396,860,o),
(434,888,o),
(462,921,o),
(462,936,qs),
(462,949,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
13 1 4 0 67 66 55 47 23 0 6 5 4 33 1 2 5 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 7 6 7 106 0 6 0 6 106 0 4 4 0 83 1 1 0 0 20 67 0 5 5 2 83 3 1 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 7 6 7 106 0 6 0 6 106 1 1 0 0 4 5 0 4 91 0 5 5 2 83 3 1 2 2 21 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
86 84 78 76 70 68 59 57 36 45 36 41 8 19
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(432,972,o),
(417,972,qs),
(406,972,o),
(370,950,o),
(336,919,o),
(311,887,o),
(311,877,qs),
(311,867,o),
(324,854,o),
(335,854,qs),
(345,854,o),
(384,872,o),
(421,899,o),
(449,929,o),
(449,941,qs),
(449,955,o)
);
},
{
closed = 1;
nodes = (
(145,601,o),
(210,709,o),
(308,777,o),
(373,777,qs),
(425,777,o),
(507,720,o),
(565,620,o),
(596,486,o),
(596,410,qs),
(596,320,o),
(561,184,o),
(497,94,o),
(406,48,o),
(351,48,qs),
(298,48,o),
(210,97,o),
(147,188,o),
(112,319,o),
(112,400,qs),
(112,467,o)
);
},
{
closed = 1;
nodes = (
(87,135,o),
(173,33,o),
(286,-16,o),
(349,-16,qs),
(383,-16,o),
(457,2,o),
(528,41,o),
(593,106,o),
(642,200,o),
(671,327,o),
(671,408,qs),
(671,495,o),
(633,651,o),
(556,769,o),
(442,838,o),
(367,838,qs),
(310,838,o),
(218,802,o),
(144,740,o),
(90,655,o),
(55,559,o),
(37,455,o),
(37,404,qs),
(37,294,o)
);
},
{
closed = 1;
nodes = (
(110,9,qs),
(110,-2,o),
(129,-19,o),
(138,-19,qs),
(152,-19,o),
(175,-6,o),
(180,5,qs),
(585,768,ls),
(589,775,o),
(599,799,o),
(599,807,qs),
(599,813,o),
(592,831,o),
(574,831,qs),
(550,831,o),
(525,805,o),
(510,774,qs),
(489,731,o),
(463,678,o),
(444,638,o),
(427,603,o),
(401,553,o),
(361,480,o),
(330,423,qs),
(306,379,o),
(276,326,o),
(258,295,o),
(246,277,o),
(235,257,o),
(218,228,o),
(190,173,o),
(146,86,o),
(112,18,qs),
(110,15,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 1 0 4 1 94 0 0 4 0 106 0 3 3 4 83 6 1 4 4 20 67 0 2 2 5 83 7 1 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 1 0 1 106 0 0 4 0 106 0 3 3 4 83 6 1 4 4 20 67 0 2 2 5 83 7 1 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 1 0 1 106 0 0 4 0 106 0 6 6 20 67 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 7 1 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 1 0 1 106 0 0 4 0 106 0 6 4 3 4 6 3 104 0 4 0 3 2 4 3 92 0 2 2 5 83 7 1 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
90 88 80 78 42 42 40 38 38 36 8 21
CALL[ ]	/* CallFunction */";
};
width = 709;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(115,13,o),
(112,-1,o),
(112,-7,qs),
(112,-19,o),
(126,-19,qs),
(138,-19,o),
(148,-9,o),
(155,5,qs),
(175,43,l),
(212,13,o),
(296,-16,o),
(340,-16,qs),
(386,-16,o),
(493,25,o),
(584,123,o),
(645,286,o),
(645,408,qs),
(645,508,o),
(594,681,o),
(546,741,q),
(560,768,ls),
(564,776,o),
(574,799,o),
(574,807,qs),
(574,813,o),
(568,821,o),
(559,821,qs),
(550,821,o),
(535,809,o),
(523,792,o),
(516,777,o),
(515,774,q),
(482,804,o),
(403,838,o),
(356,838,qs),
(305,838,o),
(218,802,o),
(148,740,o),
(95,655,o),
(59,559,o),
(41,455,o),
(41,404,qs),
(41,286,o),
(98,122,o),
(145,71,q),
(117,18,ls)
);
},
{
closed = 1;
nodes = (
(119,617,o),
(188,734,o),
(291,807,o),
(362,807,qs),
(400,807,o),
(469,771,o),
(498,739,q),
(482,706,o),
(461,664,o),
(444,629,o),
(427,595,o),
(402,546,o),
(364,476,o),
(335,423,qs),
(306,369,o),
(275,314,o),
(258,283,o),
(247,264,o),
(228,229,o),
(195,167,o),
(164,108,q),
(126,159,o),
(86,306,o),
(86,400,qs),
(86,472,o)
);
},
{
closed = 1;
nodes = (
(561,166,o),
(492,67,o),
(397,18,o),
(342,18,qs),
(256,18,o),
(193,76,q),
(525,703,l),
(560,648,o),
(600,498,o),
(600,410,qs),
(600,312,o)
);
},
{
closed = 1;
nodes = (
(419,972,o),
(411,972,qs),
(404,972,o),
(372,952,o),
(340,925,o),
(316,896,o),
(316,887,qs),
(316,876,o),
(324,876,qs),
(331,876,o),
(366,893,o),
(402,917,o),
(430,942,o),
(430,950,qs),
(430,964,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
75 74 63 49 36 25 13 0 8 5 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 7 6 7 106 0 6 0 6 106 0 1 1 12 67 0 4 4 0 83 0 0 0 20 67 0 5 5 2 83 3 1 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 7 6 7 106 0 6 0 6 106 0 0 0 4 5 0 4 91 0 1 1 14 67 0 5 5 2 83 3 1 2 2 21 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
95 93 88 86 78 76 67 65 37 45 38 41 8 19
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = Oslashacute;
unicode = 510;
},
{
glyphname = Otilde;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(162,602,o),
(225,702,o),
(318,762,o),
(379,762,qs),
(431,762,o),
(511,707,o),
(565,611,o),
(593,483,o),
(593,410,qs),
(593,238,o),
(469,63,o),
(357,63,qs),
(308,63,o),
(225,110,o),
(164,198,o),
(130,323,o),
(130,400,qs),
(130,471,o)
);
},
{
closed = 1;
nodes = (
(83,135,o),
(170,33,o),
(287,-16,o),
(355,-16,qs),
(409,-16,o),
(527,25,o),
(625,123,o),
(689,286,o),
(689,408,qs),
(689,495,o),
(651,651,o),
(573,769,o),
(455,838,o),
(375,838,qs),
(315,838,o),
(217,802,o),
(142,740,o),
(87,655,o),
(51,559,o),
(34,455,o),
(34,404,qs),
(34,294,o)
);
},
{
closed = 1;
nodes = (
(208,861,o),
(217,861,qs),
(224,861,o),
(242,869,o),
(262,878,o),
(286,886,o),
(301,886,qs),
(315,886,o),
(347,878,o),
(382,869,o),
(419,862,o),
(438,862,qs),
(449,862,o),
(487,869,o),
(523,886,o),
(549,915,o),
(549,937,qs),
(549,953,o),
(532,972,o),
(527,972,qs),
(520,972,o),
(497,959,qs),
(483,951,o),
(451,942,o),
(437,942,qs),
(422,942,o),
(386,951,o),
(350,961,o),
(315,970,o),
(300,970,qs),
(263,970,o),
(232,952,qs),
(218,944,o),
(198,919,o),
(198,897,qs),
(198,882,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 2 5 7 91 0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 2 5 7 91 0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
74 72 35 38 35 35 40 40 42 38 36 10 24
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (37,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (161,372);
ref = tilde;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 2 5 7 91 0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 2 5 7 91 0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
79 77 35 38 35 35 40 42 42 40 37 10 35
CALL[ ]	/* CallFunction */";
};
width = 709;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(119,617,o),
(188,734,o),
(291,807,o),
(362,807,qs),
(414,807,o),
(501,745,o),
(564,638,o),
(600,493,o),
(600,410,qs),
(600,312,o),
(561,166,o),
(492,67,o),
(397,18,o),
(342,18,qs),
(284,18,o),
(189,71,o),
(122,170,o),
(86,312,o),
(86,400,qs),
(86,472,o)
);
},
{
closed = 1;
nodes = (
(93,135,o),
(177,33,o),
(284,-16,o),
(340,-16,qs),
(386,-16,o),
(493,25,o),
(584,123,o),
(645,286,o),
(645,408,qs),
(645,495,o),
(606,651,o),
(532,769,o),
(424,838,o),
(356,838,qs),
(305,838,o),
(218,802,o),
(148,740,o),
(95,655,o),
(59,559,o),
(41,455,o),
(41,404,qs),
(41,294,o)
);
},
{
closed = 1;
nodes = (
(185,888,o),
(190,888,qs),
(195,888,o),
(211,896,o),
(233,905,o),
(259,913,o),
(274,913,qs),
(288,913,o),
(320,905,o),
(355,896,o),
(392,889,o),
(411,889,qs),
(432,889,o),
(469,896,o),
(497,909,o),
(513,925,o),
(513,934,qs),
(513,941,o),
(505,951,o),
(500,951,qs),
(495,951,o),
(484,946,o),
(470,938,qs),
(436,921,o),
(410,921,qs),
(395,921,o),
(359,930,o),
(323,940,o),
(288,949,o),
(273,949,qs),
(236,949,o),
(205,931,qs),
(176,914,o),
(176,903,qs),
(176,898,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 2 5 7 91 0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 2 5 7 91 0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
75 73 35 38 35 35 39 40 42 40 36 10 24
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = Otilde;
unicode = 213;
},
{
glyphname = OE;
kernLeft = C;
kernRight = AE;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,135,o),
(168,33,o),
(281,-16,o),
(345,-16,qs),
(405,-16,o),
(487,9,o),
(544,54,o),
(581,115,o),
(596,150,q),
(596,64,ls),
(596,44,o),
(598,19,o),
(609,5,o),
(632,0,o),
(654,0,qs),
(679,0,o),
(747,2,o),
(808,2,qs),
(847,2,o),
(904,1,o),
(957,1,o),
(1014,0,o),
(1053,0,qs),
(1075,0,o),
(1093,13,o),
(1095,33,qs),
(1098,63,o),
(1104,141,o),
(1109,213,o),
(1111,268,o),
(1111,277,qs),
(1111,283,o),
(1109,298,o),
(1102,312,o),
(1086,321,o),
(1072,321,qs),
(1046,321,o),
(1025,293,o),
(1024,273,qs),
(1023,255,o),
(1019,207,o),
(1015,162,o),
(1011,126,o),
(1011,121,qs),
(1010,108,o),
(1002,93,o),
(990,86,o),
(975,84,o),
(968,84,qs),
(690,84,l),
(690,377,l),
(706,378,o),
(737,379,o),
(753,379,qs),
(782,379,o),
(818,378,o),
(832,378,qs),
(847,378,o),
(866,364,o),
(876,343,o),
(880,319,o),
(880,309,qs),
(880,296,o),
(895,275,o),
(921,275,qs),
(936,275,o),
(963,290,o),
(963,307,qs),
(963,335,o),
(961,391,o),
(961,420,qs),
(961,449,o),
(963,498,o),
(963,527,qs),
(963,543,o),
(943,563,o),
(921,563,qs),
(895,563,o),
(878,538,o),
(878,530,qs),
(878,523,o),
(877,500,o),
(874,479,o),
(867,464,o),
(861,464,qs),
(856,464,o),
(832,463,o),
(801,462,o),
(767,461,o),
(753,461,qs),
(736,461,o),
(706,463,o),
(690,464,q),
(690,737,l),
(942,737,ls),
(959,737,o),
(979,715,o),
(979,677,qs),
(979,645,ls),
(979,619,o),
(997,595,o),
(1023,595,qs),
(1049,595,o),
(1067,620,o),
(1067,651,qs),
(1067,785,ls),
(1067,806,o),
(1053,821,o),
(1039,821,qs),
(985,821,o),
(918,820,o),
(864,820,o),
(806,819,o),
(761,819,qs),
(723,819,o),
(668,821,o),
(636,821,qs),
(619,821,o),
(602,809,o),
(593,789,o),
(592,763,o),
(592,750,qs),
(592,737,o),
(592,719,o),
(592,702,o),
(593,682,o),
(593,669,q),
(591,688,o),
(567,746,o),
(513,800,o),
(425,838,o),
(359,838,qs),
(303,838,o),
(212,802,o),
(140,740,o),
(86,655,o),
(51,559,o),
(34,455,o),
(34,404,qs),
(34,294,o)
);
},
{
closed = 1;
nodes = (
(157,592,o),
(212,695,o),
(297,759,o),
(355,759,qs),
(407,759,o),
(494,703,o),
(557,608,o),
(593,481,o),
(593,410,qs),
(593,324,o),
(554,196,o),
(485,109,o),
(390,66,o),
(335,66,qs),
(288,66,o),
(213,112,o),
(159,199,o),
(130,323,o),
(130,400,qs),
(130,464,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
12 1 2 3 130 95 2 8 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 2 3 5 3 2 96 0 9 7 6 7 9 6 104 0 5 0 6 8 5 6 91 0 13 13 0 83 0 0 0 20 67 0 3 3 1 83 0 1 1 12 67 0 7 7 4 83 0 4 4 23 67 0 8 8 10 84 0 10 10 13 67 0 12 12 11 83 0 11 11 21 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 2 3 5 3 2 5 104 0 9 7 6 7 9 6 104 0 5 0 6 8 5 6 91 0 13 13 0 83 0 0 0 20 67 0 3 3 1 83 0 1 1 12 67 0 7 7 4 83 0 4 4 23 67 0 8 8 10 84 0 10 10 13 67 0 12 12 11 83 0 11 11 21 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 2 3 5 3 2 5 104 0 9 7 6 7 9 6 104 0 4 0 7 9 4 7 91 0 5 0 6 8 5 6 91 0 13 13 0 83 0 0 0 20 67 0 3 3 1 83 0 1 1 12 67 0 8 8 10 84 0 10 10 13 67 0 12 12 11 83 0 11 11 21 11 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 71 values pushed */
0 2 3 5 3 2 5 104 0 9 7 6 7 9 6 104 0 0 0 13 3 0 13 91 0 4 0 7 9 4 7 91 0 5 0 6 8 5 6 91 0 3 3 1 83 0 1 1 14 67 0 8 8 10 84 0 10 10 13 67 0 12 12 11 83 0 11 11 21 11 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
156 154 146 144 136 134 125 115 104 102 33 118 42 38 145 37 37 173 38 14 24
CALL[ ]	/* CallFunction */";
};
width = 1144;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(87,135,o),
(171,33,o),
(282,-16,o),
(343,-16,qs),
(440,-16,o),
(562,74,o),
(599,159,q),
(599,64,ls),
(599,44,o),
(601,19,o),
(612,5,o),
(635,0,o),
(657,0,qs),
(682,0,o),
(750,2,o),
(811,2,qs),
(846,2,o),
(899,1,o),
(947,1,o),
(1000,0,o),
(1035,0,qs),
(1056,0,o),
(1075,11,o),
(1077,33,qs),
(1080,63,o),
(1086,141,o),
(1090,213,o),
(1093,268,o),
(1093,277,qs),
(1093,289,o),
(1084,317,o),
(1062,317,qs),
(1045,317,o),
(1028,293,o),
(1027,273,qs),
(1026,255,o),
(1023,207,o),
(1019,157,o),
(1015,115,o),
(1014,103,qs),
(1013,90,o),
(1005,75,o),
(993,68,o),
(978,66,o),
(971,66,qs),
(672,66,l),
(672,386,l),
(693,387,o),
(735,388,o),
(756,388,qs),
(785,388,o),
(821,387,o),
(835,387,qs),
(850,387,o),
(869,371,o),
(879,347,o),
(883,320,o),
(883,309,qs),
(883,296,o),
(896,277,o),
(914,277,qs),
(925,277,o),
(945,290,o),
(945,307,qs),
(945,335,o),
(943,391,o),
(943,420,qs),
(943,449,o),
(945,504,o),
(945,533,qs),
(945,544,o),
(931,562,o),
(913,562,qs),
(901,562,o),
(888,553,o),
(882,542,o),
(881,531,o),
(881,530,qs),
(881,522,o),
(880,497,o),
(877,473,o),
(870,455,o),
(864,455,qs),
(859,455,o),
(835,454,o),
(804,453,o),
(770,452,o),
(756,452,qs),
(734,452,o),
(693,454,o),
(672,455,q),
(672,755,l),
(945,755,ls),
(950,755,o),
(963,753,o),
(974,744,o),
(982,725,o),
(982,707,qs),
(982,645,ls),
(982,624,o),
(994,599,o),
(1016,599,qs),
(1036,599,o),
(1049,625,o),
(1049,651,qs),
(1049,785,ls),
(1049,806,o),
(1035,821,o),
(1021,821,qs),
(971,821,o),
(909,820,o),
(859,820,o),
(806,819,o),
(764,819,qs),
(726,819,o),
(671,821,o),
(639,821,qs),
(622,821,o),
(605,809,o),
(596,789,o),
(595,763,o),
(595,750,qs),
(595,724,o),
(595,688,o),
(596,661,q),
(588,689,o),
(553,751,o),
(496,804,o),
(414,838,o),
(358,838,qs),
(304,838,o),
(214,802,o),
(143,740,o),
(90,655,o),
(55,559,o),
(37,455,o),
(37,404,qs),
(37,294,o)
);
},
{
closed = 1;
nodes = (
(142,601,o),
(202,709,o),
(295,777,o),
(358,777,qs),
(410,777,o),
(497,719,o),
(560,619,o),
(596,485,o),
(596,410,qs),
(596,320,o),
(557,184,o),
(488,94,o),
(393,48,o),
(338,48,qs),
(287,48,o),
(203,97,o),
(144,188,o),
(112,319,o),
(112,400,qs),
(112,467,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 2 3 130 1 8 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 2 3 5 3 2 5 104 0 9 7 6 7 9 6 104 0 5 0 6 8 5 6 91 0 13 13 0 83 0 0 0 20 67 0 3 3 1 83 0 1 1 12 67 0 7 7 4 83 0 4 4 15 67 0 8 8 10 84 0 10 10 13 67 0 12 12 11 83 0 11 11 21 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 2 3 5 3 2 5 104 0 9 7 6 7 9 6 104 0 4 0 7 9 4 7 91 0 5 0 6 8 5 6 91 0 13 13 0 83 0 0 0 20 67 0 3 3 1 83 0 1 1 12 67 0 8 8 10 84 0 10 10 13 67 0 12 12 11 83 0 11 11 21 11 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 71 values pushed */
0 2 3 5 3 2 5 104 0 9 7 6 7 9 6 104 0 0 0 13 3 0 13 91 0 4 0 7 9 4 7 91 0 5 0 6 8 5 6 91 0 3 3 1 83 0 1 1 14 67 0 8 8 10 84 0 10 10 13 67 0 12 12 11 83 0 11 11 21 11 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
154 152 144 142 134 132 125 115 106 104 33 118 42 40 145 39 37 171 38 14 24
CALL[ ]	/* CallFunction */";
};
width = 1128;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(93,135,o),
(177,33,o),
(284,-16,o),
(340,-16,qs),
(372,-16,o),
(445,3,o),
(516,48,o),
(580,121,o),
(603,174,q),
(603,64,ls),
(603,44,o),
(605,19,o),
(616,5,o),
(639,0,o),
(661,0,qs),
(686,0,o),
(754,2,o),
(815,2,qs),
(845,2,o),
(891,1,o),
(933,1,o),
(979,0,o),
(1009,0,qs),
(1029,0,o),
(1049,8,o),
(1051,33,qs),
(1054,63,o),
(1059,141,o),
(1064,213,o),
(1067,268,o),
(1067,277,qs),
(1067,289,o),
(1062,310,o),
(1048,310,qs),
(1043,310,o),
(1032,293,o),
(1031,273,qs),
(1030,252,o),
(1027,195,o),
(1023,137,o),
(1019,86,o),
(1018,73,qs),
(1017,60,o),
(1009,45,o),
(997,38,o),
(982,36,o),
(975,36,qs),
(646,36,l),
(646,401,l),
(675,402,o),
(731,403,o),
(760,403,qs),
(789,403,o),
(825,402,o),
(839,402,qs),
(854,402,o),
(873,383,o),
(883,355,o),
(887,322,o),
(887,309,qs),
(887,296,o),
(897,280,o),
(904,280,qs),
(908,280,o),
(919,290,o),
(919,307,qs),
(919,335,o),
(917,391,o),
(917,420,qs),
(917,449,o),
(919,504,o),
(919,533,qs),
(919,544,o),
(914,560,o),
(902,560,qs),
(896,560,o),
(889,552,o),
(886,541,o),
(885,531,o),
(885,530,qs),
(885,521,o),
(884,490,o),
(881,461,o),
(874,440,o),
(868,440,qs),
(863,440,o),
(839,439,o),
(808,438,o),
(774,437,o),
(760,437,qs),
(731,437,o),
(675,439,o),
(646,440,q),
(646,785,l),
(949,785,ls),
(959,785,o),
(986,776,o),
(986,757,qs),
(986,645,ls),
(986,631,o),
(991,605,o),
(1006,605,qs),
(1017,605,o),
(1023,632,o),
(1023,651,qs),
(1023,785,ls),
(1023,806,o),
(1009,821,o),
(995,821,qs),
(951,821,o),
(897,820,o),
(852,820,o),
(805,819,o),
(768,819,qs),
(730,819,o),
(675,821,o),
(643,821,qs),
(626,821,o),
(609,809,o),
(600,789,o),
(599,763,o),
(599,750,qs),
(599,724,o),
(599,674,o),
(600,647,q),
(565,733,o),
(441,838,o),
(356,838,qs),
(305,838,o),
(218,802,o),
(148,740,o),
(95,655,o),
(59,559,o),
(41,455,o),
(41,404,qs),
(41,294,o)
);
},
{
closed = 1;
nodes = (
(119,617,o),
(188,734,o),
(291,807,o),
(362,807,qs),
(414,807,o),
(501,745,o),
(564,638,o),
(600,493,o),
(600,410,qs),
(600,312,o),
(561,166,o),
(492,67,o),
(397,18,o),
(342,18,qs),
(284,18,o),
(189,71,o),
(122,170,o),
(86,312,o),
(86,400,qs),
(86,472,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
10 1 2 3 126 1 8 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 2 3 5 3 2 5 104 0 9 7 6 7 9 6 104 0 5 0 6 8 5 6 91 0 13 13 0 83 0 0 0 20 67 0 3 3 1 83 0 1 1 12 67 0 7 7 4 83 0 4 4 15 67 0 8 8 10 83 0 10 10 13 67 0 12 12 11 83 0 11 11 21 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 2 3 5 3 2 5 104 0 9 7 6 7 9 6 104 0 4 0 7 9 4 7 91 0 5 0 6 8 5 6 91 0 13 13 0 83 0 0 0 20 67 0 3 3 1 83 0 1 1 12 67 0 8 8 10 83 0 10 10 13 67 0 12 12 11 83 0 11 11 21 11 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 71 values pushed */
0 2 3 5 3 2 5 104 0 9 7 6 7 9 6 104 0 0 0 13 3 0 13 91 0 4 0 7 9 4 7 91 0 5 0 6 8 5 6 91 0 3 3 1 83 0 1 1 14 67 0 8 8 10 83 0 10 10 13 67 0 12 12 11 83 0 11 11 21 11 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
152 150 142 140 132 130 121 111 102 100 33 118 42 40 145 37 37 169 38 14 24
CALL[ ]	/* CallFunction */";
};
width = 1105;
}
);
note = OE;
unicode = 338;
},
{
glyphname = P;
kernLeft = B;
kernRight = P;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(20,43,o),
(20,30,qs),
(20,11,o),
(49,0,o),
(81,0,qs),
(334,0,ls),
(362,0,o),
(379,18,o),
(379,32,qs),
(379,49,o),
(358,63,o),
(336,63,qs),
(231,63,l),
(231,332,l),
(253,331,o),
(284,330,o),
(299,330,qs),
(354,330,o),
(473,357,o),
(572,419,o),
(636,520,o),
(636,595,qs),
(636,657,o),
(591,743,o),
(512,797,o),
(406,821,o),
(345,821,qs),
(303,821,o),
(232,820,o),
(165,819,o),
(99,818,o),
(63,818,qs),
(25,818,o),
(25,787,qs),
(25,773,o),
(37,756,o),
(48,755,qs),
(100,751,ls),
(119,749,o),
(131,729,o),
(132,712,qs),
(134,664,o),
(138,523,o),
(138,437,qs),
(138,381,o),
(138,304,o),
(137,235,o),
(137,160,o),
(137,106,qs),
(137,82,o),
(105,62,o),
(78,60,qs),
(43,57,o)
);
},
{
closed = 1;
nodes = (
(412,735,o),
(487,706,o),
(540,646,o),
(540,592,qs),
(540,551,o),
(506,485,o),
(444,438,o),
(356,412,o),
(302,412,qs),
(286,412,o),
(247,413,o),
(231,414,q),
(231,734,l),
(248,737,o),
(284,741,o),
(303,741,qs),
(331,741,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
56 1 5 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
6 1 4 4 0 83 0 0 0 12 67 0 1 1 5 83 0 5 5 15 67 0 2 2 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 1 2 5 1 91 6 1 4 4 0 83 0 0 0 12 67 0 2 2 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 1 2 5 1 91 6 1 4 4 0 83 0 0 0 14 67 0 2 2 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
54 53 61 57 53 69 54 69 48 45 41 39 38 34 26 19 7 15
CALL[ ]	/* CallFunction */";
};
width = 642;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(39,31,o),
(39,23,qs),
(39,8,o),
(75,0,o),
(100,0,qs),
(316,0,ls),
(342,0,o),
(361,12,o),
(361,25,qs),
(361,51,o),
(318,51,qs),
(211,51,l),
(211,341,l),
(223,340,o),
(235,340,qs),
(246,339,o),
(268,339,o),
(277,339,qs),
(333,339,o),
(453,365,o),
(552,425,o),
(616,523,o),
(616,595,qs),
(616,657,o),
(571,743,o),
(492,797,o),
(386,821,o),
(325,821,qs),
(283,821,o),
(220,820,o),
(163,819,o),
(106,818,o),
(70,818,qs),
(52,818,o),
(42,801,o),
(42,794,qs),
(42,783,o),
(53,769,o),
(70,769,qs),
(84,769,ls),
(116,769,o),
(133,744,o),
(133,729,qs),
(133,679,o),
(139,527,o),
(139,437,qs),
(139,379,o),
(139,299,o),
(138,227,o),
(138,148,o),
(138,92,qs),
(138,73,o),
(116,48,o),
(81,48,qs),
(52,48,o)
);
},
{
closed = 1;
nodes = (
(402,750,o),
(483,719,o),
(541,652,o),
(541,592,qs),
(541,548,o),
(510,486,o),
(462,444,o),
(402,420,o),
(343,407,o),
(291,403,o),
(276,403,qs),
(263,403,o),
(240,403,o),
(231,404,qs),
(220,404,o),
(211,405,q),
(211,750,l),
(228,753,o),
(264,757,o),
(283,757,qs),
(314,757,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
59 58 2 8 7 41 1 3 8 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
11 1 7 1 8 1 7 96 9 1 8 4 1 3 0 8 3 91 0 1 1 2 83 0 2 2 12 67 5 10 2 0 0 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
11 1 7 1 8 1 7 96 9 1 8 4 1 3 0 8 3 91 0 1 1 2 83 0 2 2 14 67 5 10 2 0 0 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
56 55 1 0 65 62 61 60 55 75 56 75 50 47 44 42 40 39 38 35 27 20 16 13 0 54 1 54 12 15
CALL[ ]	/* CallFunction */";
};
width = 624;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(21,17,o),
(21,12,qs),
(21,7,o),
(34,3,o),
(53,0,o),
(74,0,o),
(82,0,qs),
(278,0,ls),
(302,0,o),
(323,3,o),
(323,13,qs),
(323,31,o),
(280,31,qs),
(183,31,l),
(183,356,l),
(195,355,o),
(207,355,qs),
(218,354,o),
(240,354,o),
(249,354,qs),
(305,354,o),
(425,378,o),
(524,435,o),
(588,527,o),
(588,595,qs),
(588,657,o),
(543,743,o),
(464,797,o),
(358,821,o),
(297,821,qs),
(255,821,o),
(195,820,o),
(142,819,o),
(88,818,o),
(52,818,qs),
(34,818,o),
(24,809,o),
(24,804,qs),
(24,799,o),
(35,789,o),
(52,789,qs),
(86,789,ls),
(118,789,o),
(135,765,o),
(135,749,qs),
(135,696,o),
(141,533,o),
(141,437,qs),
(141,376,o),
(141,291,o),
(140,215,o),
(140,132,o),
(140,72,qs),
(140,67,o),
(138,52,o),
(123,38,o),
(92,28,o),
(63,28,qs),
(34,28,o)
);
},
{
closed = 1;
nodes = (
(339,784,o),
(403,773,o),
(464,748,o),
(513,705,o),
(543,639,o),
(543,592,qs),
(543,545,o),
(509,478,o),
(455,432,o),
(388,406,o),
(322,392,o),
(265,388,o),
(248,388,qs),
(235,388,o),
(212,388,o),
(203,389,qs),
(192,389,o),
(183,390,q),
(183,780,l),
(200,783,o),
(236,787,o),
(255,787,qs),
(278,787,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
63 62 2 8 1 43 1 3 8 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
9 1 8 4 1 3 0 8 3 91 11 7 2 1 1 2 83 0 2 2 12 67 5 10 2 0 0 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
9 1 8 4 1 3 0 8 3 91 11 7 2 1 1 2 83 0 2 2 14 67 5 10 2 0 0 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
60 59 1 0 70 66 65 64 59 81 60 80 53 49 46 44 42 41 40 37 29 22 18 15 0 58 1 58 12 15
CALL[ ]	/* CallFunction */";
};
width = 599;
}
);
note = P;
unicode = 80;
},
{
glyphname = Thorn;
kernLeft = B;
kernRight = Thorn;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(52,31,qs),
(52,22,o),
(56,11,o),
(72,3,o),
(103,0,o),
(130,0,qs),
(326,0,ls),
(358,0,o),
(388,13,o),
(388,32,qs),
(388,51,o),
(350,63,o),
(328,63,qs),
(231,63,l),
(231,184,l),
(243,183,o),
(255,183,qs),
(266,182,o),
(288,182,o),
(297,182,qs),
(353,182,o),
(473,206,o),
(572,263,o),
(636,355,o),
(636,423,qs),
(636,485,o),
(591,571,o),
(512,625,o),
(406,649,o),
(345,649,qs),
(308,649,o),
(254,649,o),
(230,648,q),
(230,720,ls),
(230,743,o),
(258,759,o),
(296,759,qs),
(322,759,o),
(355,773,o),
(355,792,qs),
(355,812,o),
(318,821,o),
(298,821,qs),
(286,821,o),
(234,820,o),
(174,820,o),
(117,819,o),
(100,819,qs),
(82,819,o),
(55,803,o),
(55,786,qs),
(55,773,o),
(73,758,o),
(87,758,qs),
(103,758,ls),
(121,758,o),
(132,732,o),
(132,718,qs),
(132,694,o),
(134,620,o),
(136,532,o),
(138,438,o),
(138,395,qs),
(138,358,o),
(138,306,o),
(138,266,o),
(137,230,o),
(137,190,o),
(137,140,o),
(137,104,qs),
(137,85,o),
(127,60,o),
(111,60,qs),
(52,60,o)
);
},
{
closed = 1;
nodes = (
(412,561,o),
(487,533,o),
(540,474,o),
(540,420,qs),
(540,384,o),
(512,333,o),
(467,298,o),
(412,278,o),
(357,267,o),
(310,264,o),
(296,264,qs),
(283,264,o),
(260,264,o),
(251,265,qs),
(240,265,o),
(231,266,q),
(231,560,l),
(248,563,o),
(284,567,o),
(303,567,qs),
(331,567,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
78 77 2 10 9 58 1 5 10 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 4 13 1 9 10 4 9 91 11 1 10 6 1 5 0 10 5 91 3 1 1 1 2 83 0 2 2 12 67 7 12 2 0 0 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 4 13 1 9 10 4 9 91 11 1 10 6 1 5 0 10 5 91 3 1 1 1 2 83 0 2 2 14 67 7 12 2 0 0 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
75 74 1 0 85 81 80 79 74 94 75 94 68 65 61 59 57 56 55 52 44 40 37 35 31 24 20 17 0 73 1 73 14 15
CALL[ ]	/* CallFunction */";
};
width = 650;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(39,35,o),
(39,24,qs),
(39,10,o),
(72,0,o),
(110,0,qs),
(306,0,ls),
(330,0,o),
(361,6,o),
(361,25,qs),
(361,40,o),
(330,51,o),
(308,51,qs),
(211,51,l),
(211,184,l),
(223,183,o),
(235,183,qs),
(246,182,o),
(268,182,o),
(277,182,qs),
(333,182,o),
(453,206,o),
(552,263,o),
(616,355,o),
(616,423,qs),
(616,485,o),
(571,571,o),
(492,625,o),
(386,649,o),
(325,649,qs),
(288,649,o),
(234,649,o),
(210,648,q),
(210,740,ls),
(210,752,o),
(224,764,o),
(244,770,o),
(267,771,o),
(276,771,qs),
(283,771,o),
(301,772,o),
(317,777,o),
(328,788,o),
(328,797,qs),
(328,805,o),
(318,815,o),
(303,820,o),
(285,821,o),
(278,821,qs),
(266,821,o),
(214,820,o),
(154,820,o),
(97,819,o),
(80,819,qs),
(42,819,o),
(42,793,qs),
(42,783,o),
(58,770,o),
(80,770,qs),
(84,770,ls),
(116,770,o),
(133,745,o),
(133,730,qs),
(133,705,o),
(135,628,o),
(137,537,o),
(139,440,o),
(139,395,qs),
(139,357,o),
(139,303,o),
(139,260,o),
(138,224,o),
(138,182,o),
(138,129,o),
(138,92,qs),
(138,87,o),
(137,72,o),
(128,58,o),
(109,48,o),
(91,48,qs),
(62,48,o)
);
},
{
closed = 1;
nodes = (
(402,578,o),
(483,547,o),
(541,480,o),
(541,420,qs),
(541,380,o),
(510,323,o),
(462,284,o),
(402,261,o),
(343,249,o),
(291,246,o),
(276,246,qs),
(263,246,o),
(240,246,o),
(231,247,qs),
(220,247,o),
(211,248,q),
(211,578,l),
(228,581,o),
(264,585,o),
(283,585,qs),
(314,585,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
84 83 2 10 9 65 1 5 10 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 4 13 1 9 10 4 9 91 11 1 10 6 1 5 0 10 5 91 3 1 1 1 2 83 0 2 2 12 67 7 12 2 0 0 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 4 13 1 9 10 4 9 91 11 1 10 6 1 5 0 10 5 91 3 1 1 1 2 83 0 2 2 14 67 7 12 2 0 0 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
81 80 1 0 91 87 86 85 80 100 81 100 75 72 68 66 64 63 62 59 51 47 43 39 33 25 22 19 0 79 1 79 14 15
CALL[ ]	/* CallFunction */";
};
width = 633;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(21,17,o),
(21,12,qs),
(21,7,o),
(34,3,o),
(53,0,o),
(74,0,o),
(82,0,qs),
(278,0,ls),
(302,0,o),
(323,3,o),
(323,13,qs),
(323,31,o),
(280,31,qs),
(183,31,l),
(183,184,l),
(195,183,o),
(207,183,qs),
(218,182,o),
(240,182,o),
(249,182,qs),
(305,182,o),
(425,206,o),
(524,263,o),
(588,355,o),
(588,423,qs),
(588,485,o),
(543,571,o),
(464,625,o),
(358,649,o),
(297,649,qs),
(260,649,o),
(206,649,o),
(182,648,q),
(182,760,ls),
(182,772,o),
(196,784,o),
(216,790,o),
(239,791,o),
(248,791,qs),
(262,791,o),
(290,795,o),
(290,806,qs),
(290,812,o),
(280,818,o),
(267,821,o),
(254,821,o),
(250,821,qs),
(238,821,o),
(186,820,o),
(126,820,o),
(69,819,o),
(52,819,qs),
(34,819,o),
(24,810,o),
(24,805,qs),
(24,800,o),
(35,790,o),
(52,790,qs),
(86,790,ls),
(118,790,o),
(135,766,o),
(135,750,qs),
(135,724,o),
(137,642,o),
(139,546,o),
(141,443,o),
(141,395,qs),
(141,354,o),
(141,297,o),
(141,252,o),
(140,212,o),
(140,168,o),
(140,112,o),
(140,72,qs),
(140,67,o),
(138,52,o),
(123,38,o),
(92,28,o),
(63,28,qs),
(34,28,o)
);
},
{
closed = 1;
nodes = (
(339,612,o),
(403,601,o),
(464,576,o),
(513,533,o),
(543,467,o),
(543,420,qs),
(543,373,o),
(509,306,o),
(455,260,o),
(388,234,o),
(322,220,o),
(265,216,o),
(248,216,qs),
(235,216,o),
(212,216,o),
(203,217,qs),
(192,217,o),
(183,218,q),
(183,608,l),
(200,611,o),
(236,615,o),
(255,615,qs),
(278,615,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
84 83 2 10 9 64 1 5 10 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 4 13 1 9 10 4 9 91 11 1 10 6 1 5 0 10 5 91 3 1 1 1 2 83 0 2 2 12 67 7 12 2 0 0 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 4 13 1 9 10 4 9 91 11 1 10 6 1 5 0 10 5 91 3 1 1 1 2 83 0 2 2 14 67 7 12 2 0 0 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
81 80 1 0 91 87 86 85 80 102 81 101 74 70 67 65 63 62 61 58 50 46 42 39 34 26 22 19 0 79 1 79 14 15
CALL[ ]	/* CallFunction */";
};
width = 609;
}
);
note = Thorn;
unicode = 222;
},
{
glyphname = Q;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(73,159,o),
(144,57,o),
(240,-2,o),
(297,-11,q),
(279,-16,o),
(244,-31,o),
(215,-51,o),
(197,-74,o),
(197,-87,qs),
(197,-101,o),
(226,-109,o),
(243,-109,qs),
(250,-109,o),
(272,-102,o),
(301,-93,o),
(335,-85,o),
(353,-85,qs),
(367,-85,o),
(401,-98,o),
(437,-115,o),
(476,-128,o),
(495,-128,qs),
(516,-128,o),
(558,-117,o),
(592,-100,o),
(614,-78,o),
(614,-67,qs),
(614,-53,o),
(598,-35,o),
(580,-35,qs),
(551,-35,o),
(500,-48,o),
(494,-48,qs),
(474,-48,o),
(423,-24,o),
(398,-13,q),
(449,-6,o),
(553,44,o),
(636,143,o),
(689,297,o),
(689,408,qs),
(689,495,o),
(649,651,o),
(568,769,o),
(447,838,o),
(367,838,qs),
(307,838,o),
(211,802,o),
(137,740,o),
(84,655,o),
(50,559,o),
(34,455,o),
(34,404,qs),
(34,306,o)
);
},
{
closed = 1;
nodes = (
(159,602,o),
(219,702,o),
(310,762,o),
(371,762,qs),
(423,762,o),
(505,707,o),
(562,611,o),
(593,483,o),
(593,410,qs),
(593,238,o),
(469,63,o),
(357,63,qs),
(308,63,o),
(225,110,o),
(164,198,o),
(130,323,o),
(130,400,qs),
(130,471,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 7 values pushed */
49 17 2 1 6 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 7 values pushed */
49 17 2 2 6 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 5 4 3 4 5 3 104 0 6 0 4 5 6 4 91 2 1 1 0 3 1 3 87 0 7 7 0 83 0 0 0 20 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 6 1 6 2 1 104 0 5 4 3 4 5 3 104 0 6 0 4 5 6 4 91 0 1 0 3 1 3 87 0 7 7 0 83 0 0 0 20 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 2 6 1 6 2 1 104 0 5 4 3 4 5 3 104 0 0 0 7 6 0 7 91 0 1 4 3 1 79 0 6 0 4 5 6 4 91 0 1 1 3 83 0 3 1 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
68 66 60 58 35 35 38 33 43 38 8 21
CALL[ ]	/* CallFunction */";
};
width = 723;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(209,-98,o),
(221,-98,qs),
(228,-98,o),
(252,-90,o),
(283,-79,o),
(319,-71,o),
(337,-71,qs),
(351,-71,o),
(385,-84,o),
(421,-101,o),
(460,-114,o),
(479,-114,qs),
(500,-114,o),
(540,-105,o),
(571,-90,o),
(591,-71,o),
(591,-62,qs),
(591,-51,o),
(580,-36,o),
(567,-36,qs),
(546,-36,o),
(497,-52,o),
(478,-52,qs),
(455,-52,o),
(400,-24,o),
(374,-14,q),
(423,-8,o),
(529,41,o),
(615,140,o),
(671,296,o),
(671,408,qs),
(671,495,o),
(629,651,o),
(549,769,o),
(431,838,o),
(356,838,qs),
(303,838,o),
(215,802,o),
(145,740,o),
(91,655,o),
(55,559,o),
(37,455,o),
(37,404,qs),
(37,305,o),
(78,158,o),
(148,56,o),
(240,-2,o),
(291,-11,q),
(273,-16,o),
(236,-29,o),
(207,-47,o),
(188,-68,o),
(188,-80,qs),
(188,-91,o)
);
},
{
closed = 1;
nodes = (
(142,601,o),
(204,709,o),
(297,777,o),
(360,777,qs),
(412,777,o),
(498,720,o),
(561,620,o),
(596,486,o),
(596,410,qs),
(596,320,o),
(559,184,o),
(491,94,o),
(398,48,o),
(343,48,qs),
(292,48,o),
(207,97,o),
(146,188,o),
(112,319,o),
(112,400,qs),
(112,467,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
27 5 2 2 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 6 1 6 2 1 104 0 5 4 3 4 5 3 104 0 6 0 4 5 6 4 91 0 1 0 3 1 3 87 0 7 7 0 83 0 0 0 20 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 2 6 1 6 2 1 104 0 5 4 3 4 5 3 104 0 0 0 7 6 0 7 91 0 1 4 3 1 79 0 6 0 4 5 6 4 91 0 1 1 3 83 0 3 1 3 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
70 68 60 58 52 50 47 45 42 40 34 32 31 29 18 16 8 15
CALL[ ]	/* CallFunction */";
};
width = 708;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(212,-80,o),
(217,-80,qs),
(224,-80,o),
(251,-70,o),
(285,-57,o),
(323,-47,o),
(341,-47,qs),
(355,-47,o),
(389,-60,o),
(425,-77,o),
(464,-90,o),
(483,-90,qs),
(504,-90,o),
(541,-84,o),
(569,-73,o),
(585,-60,o),
(585,-53,qs),
(585,-37,o),
(575,-37,qs),
(570,-37,o),
(554,-42,o),
(542,-47,qs),
(526,-53,o),
(496,-58,o),
(482,-58,qs),
(469,-58,o),
(439,-48,o),
(408,-34,o),
(376,-19,o),
(362,-15,q),
(392,-12,o),
(458,10,o),
(521,53,o),
(577,119,o),
(620,211,o),
(645,331,o),
(645,408,qs),
(645,495,o),
(606,651,o),
(532,769,o),
(424,838,o),
(356,838,qs),
(305,838,o),
(218,802,o),
(148,740,o),
(95,655,o),
(59,559,o),
(41,455,o),
(41,404,qs),
(41,301,o),
(86,149,o),
(161,47,o),
(257,-8,o),
(309,-14,q),
(276,-20,o),
(247,-34,qs),
(203,-54,o),
(203,-68,qs),
(203,-73,o)
);
},
{
closed = 1;
nodes = (
(119,617,o),
(188,734,o),
(291,807,o),
(362,807,qs),
(414,807,o),
(501,745,o),
(564,638,o),
(600,493,o),
(600,410,qs),
(600,312,o),
(561,166,o),
(492,67,o),
(397,18,o),
(342,18,qs),
(284,18,o),
(189,71,o),
(122,170,o),
(86,312,o),
(86,400,qs),
(86,472,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
28 4 2 2 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 6 4 6 2 4 104 0 5 1 3 1 5 3 104 0 6 0 4 1 6 4 91 0 1 0 3 1 3 87 0 7 7 0 83 0 0 0 20 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 2 6 4 6 2 4 104 0 5 1 3 1 5 3 104 0 0 0 7 6 0 7 91 0 6 0 4 1 6 4 91 0 1 5 3 1 79 0 1 1 3 83 0 3 1 3 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
40 38 35 35 37 36 47 47 8 23
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = Q;
unicode = 81;
},
{
glyphname = R;
kernLeft = B;
kernRight = R;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(488,464,o),
(409,425,o),
(316,411,o),
(274,411,qs),
(264,411,o),
(241,412,o),
(231,414,q),
(231,732,l),
(242,734,o),
(282,739,o),
(303,739,qs),
(329,739,o),
(409,728,o),
(485,696,o),
(540,636,o),
(540,588,qs),
(540,533,o)
);
},
{
closed = 1;
nodes = (
(376,122,o),
(428,47,o),
(472,-10,o),
(503,-44,o),
(510,-44,qs),
(582,-44,o),
(663,-41,o),
(702,-34,o),
(711,-20,o),
(711,-8,qs),
(711,9,o),
(687,22,o),
(661,22,qs),
(553,22,l),
(536,41,o),
(500,87,o),
(464,138,o),
(427,190,o),
(411,214,qs),
(372,270,o),
(335,330,q),
(395,337,o),
(504,375,o),
(587,439,o),
(636,532,o),
(636,594,qs),
(636,657,o),
(577,744,o),
(489,797,o),
(385,821,o),
(339,821,qs),
(294,821,o),
(227,820,o),
(166,819,o),
(104,818,o),
(64,818,qs),
(42,818,o),
(25,796,o),
(25,785,qs),
(25,755,o),
(72,749,qs),
(100,745,o),
(131,721,o),
(133,685,qs),
(134,645,o),
(137,580,o),
(138,517,o),
(139,452,o),
(139,412,qs),
(139,336,o),
(137,184,o),
(137,109,qs),
(137,95,o),
(129,77,o),
(115,67,o),
(98,63,o),
(89,62,qs),
(51,57,o),
(25,43,o),
(25,31,qs),
(25,15,o),
(40,0,o),
(69,0,qs),
(280,0,ls),
(302,0,o),
(329,6,o),
(343,15,o),
(347,27,o),
(347,33,qs),
(347,53,o),
(315,63,o),
(296,63,qs),
(226,63,l),
(226,325,l),
(236,325,l),
(348,163,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
9 8 2 1 0 71 1 2 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 2 0 1 2 104 0 2 3 0 2 3 102 0 6 0 7 6 7 87 0 0 0 5 83 0 5 5 12 67 0 3 3 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 2 0 1 2 104 0 2 3 0 2 3 102 0 6 0 7 6 7 87 0 0 0 5 83 0 5 5 14 67 0 3 3 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
88 85 80 78 62 55 54 33 20 52 36 8 20
CALL[ ]	/* CallFunction */";
};
width = 715;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(485,458,o),
(399,417,o),
(298,403,o),
(253,403,qs),
(252,403,o),
(239,404,o),
(224,404,o),
(212,405,o),
(211,405,q),
(211,750,l),
(221,751,o),
(233,753,qs),
(243,755,o),
(269,757,o),
(283,757,qs),
(302,757,o),
(355,752,o),
(412,739,o),
(469,715,o),
(513,677,o),
(541,624,o),
(541,588,qs),
(541,530,o)
);
},
{
closed = 1;
nodes = (
(247,305,o),
(304,224,o),
(362,139,o),
(419,58,o),
(467,-5,o),
(503,-44,o),
(512,-44,qs),
(579,-44,o),
(659,-41,o),
(701,-35,o),
(714,-25,o),
(714,-18,qs),
(714,-2,o),
(691,6,o),
(668,6,qs),
(545,6,l),
(509,47,o),
(425,159,o),
(390,212,qs),
(349,273,o),
(308,338,q),
(368,343,o),
(479,376,o),
(564,437,o),
(616,530,o),
(616,594,qs),
(616,657,o),
(557,744,o),
(469,797,o),
(365,821,o),
(319,821,qs),
(274,821,o),
(215,820,o),
(164,819,o),
(111,818,o),
(71,818,qs),
(61,818,o),
(42,810,o),
(42,799,qs),
(42,770,o),
(74,770,qs),
(99,770,o),
(134,758,o),
(134,735,qs),
(134,653,o),
(140,494,o),
(140,412,qs),
(140,333,o),
(138,175,o),
(138,97,qs),
(138,81,o),
(129,62,o),
(115,51,o),
(98,48,o),
(91,48,qs),
(58,48,o),
(39,37,o),
(39,27,qs),
(39,16,o),
(53,0,o),
(82,0,qs),
(269,0,ls),
(313,0,o),
(338,14,o),
(338,25,qs),
(338,42,o),
(310,51,o),
(291,51,qs),
(211,51,l),
(211,338,l),
(212,337,o),
(214,337,qs),
(222,337,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
12 1 1 0 74 25 2 4 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 0 8 1 8 0 96 3 2 2 1 4 8 1 4 102 12 1 4 5 8 4 5 102 0 10 0 11 10 11 87 0 8 8 9 83 0 9 9 12 67 7 1 5 5 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 0 8 1 8 0 96 3 2 2 1 4 8 1 4 102 12 1 4 5 8 4 5 102 0 10 0 11 10 11 87 0 8 8 9 83 0 9 9 14 67 7 1 5 5 6 84 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
24 23 89 86 81 79 65 58 55 53 41 39 35 32 28 26 23 95 24 95 33 17 21 38 13 19
CALL[ ]	/* CallFunction */";
};
width = 691;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(481,448,o),
(387,404,o),
(275,388,o),
(225,388,qs),
(224,388,o),
(211,389,o),
(196,389,o),
(184,390,o),
(183,390,q),
(183,780,l),
(193,781,o),
(205,783,qs),
(215,785,o),
(241,787,o),
(255,787,qs),
(276,787,o),
(335,781,o),
(399,766,o),
(462,738,o),
(512,693,o),
(543,631,o),
(543,588,qs),
(543,526,o)
);
},
{
closed = 1;
nodes = (
(239,319,o),
(299,234,o),
(360,146,o),
(418,62,o),
(468,-4,o),
(505,-44,o),
(514,-44,qs),
(566,-44,o),
(630,-44,o),
(665,-41,o),
(676,-34,o),
(676,-28,qs),
(676,-18,o),
(653,-14,o),
(630,-14,qs),
(534,-14,l),
(513,8,o),
(469,63,o),
(424,123,o),
(380,185,o),
(361,214,qs),
(315,282,o),
(270,352,q),
(330,352,o),
(444,377,o),
(533,434,o),
(588,527,o),
(588,594,qs),
(588,657,o),
(529,744,o),
(441,797,o),
(337,821,o),
(291,821,qs),
(246,821,o),
(190,820,o),
(143,819,o),
(93,818,o),
(53,818,qs),
(51,818,o),
(41,818,o),
(31,815,o),
(24,810,o),
(24,805,qs),
(24,793,o),
(48,789,o),
(56,789,qs),
(76,789,o),
(106,788,o),
(126,780,o),
(136,763,o),
(136,747,qs),
(136,662,o),
(142,497,o),
(142,412,qs),
(142,327,o),
(140,161,o),
(140,77,qs),
(140,61,o),
(129,42,o),
(110,31,o),
(86,28,o),
(73,28,qs),
(40,28,o),
(21,20,o),
(21,14,qs),
(21,9,o),
(35,0,o),
(64,0,qs),
(236,0,ls),
(258,0,o),
(285,0,o),
(299,3,o),
(303,7,o),
(303,12,qs),
(303,24,o),
(277,31,o),
(258,31,qs),
(183,31,l),
(183,353,l),
(186,352,o),
(190,352,qs),
(213,352,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 1 0 25 1 4 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
3 2 2 1 10 13 2 4 5 1 4 91 0 11 0 12 11 12 87 8 1 0 0 9 83 0 9 9 12 67 7 1 5 5 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
3 2 2 1 10 13 2 4 5 1 4 91 0 11 0 12 11 12 87 8 1 0 0 9 83 0 9 9 14 67 7 1 5 5 6 84 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
24 23 98 95 90 88 81 80 72 64 59 56 43 41 37 33 28 26 23 104 24 104 33 17 21 38 14 19
CALL[ ]	/* CallFunction */";
};
width = 657;
}
);
note = R;
unicode = 82;
},
{
glyphname = Racute;
kernLeft = B;
kernRight = R;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(384,972,o),
(364,972,qs),
(350,972,o),
(311,949,o),
(276,916,o),
(251,882,o),
(251,872,qs),
(251,860,o),
(271,841,o),
(286,841,qs),
(299,841,o),
(339,860,o),
(378,888,o),
(406,921,o),
(406,936,qs),
(406,949,o)
);
},
{
closed = 1;
nodes = (
(578,464,o),
(499,425,o),
(406,411,o),
(364,411,qs),
(354,411,o),
(331,412,o),
(321,414,q),
(321,732,l),
(332,734,o),
(372,739,o),
(393,739,qs),
(419,739,o),
(499,728,o),
(575,696,o),
(630,636,o),
(630,588,qs),
(630,533,o)
);
},
{
closed = 1;
nodes = (
(466,122,o),
(518,47,o),
(562,-10,o),
(593,-44,o),
(600,-44,qs),
(672,-44,o),
(753,-41,o),
(792,-34,o),
(801,-20,o),
(801,-8,qs),
(801,9,o),
(777,22,o),
(751,22,qs),
(643,22,l),
(626,41,o),
(590,87,o),
(554,138,o),
(517,190,o),
(501,214,qs),
(462,270,o),
(425,330,q),
(485,337,o),
(594,375,o),
(677,439,o),
(726,532,o),
(726,594,qs),
(726,657,o),
(667,744,o),
(579,797,o),
(475,821,o),
(429,821,qs),
(384,821,o),
(317,820,o),
(256,819,o),
(194,818,o),
(154,818,qs),
(132,818,o),
(115,796,o),
(115,785,qs),
(115,755,o),
(162,749,qs),
(190,745,o),
(221,721,o),
(223,685,qs),
(224,645,o),
(227,580,o),
(228,517,o),
(229,452,o),
(229,412,qs),
(229,336,o),
(227,184,o),
(227,109,qs),
(227,95,o),
(219,77,o),
(205,67,o),
(188,63,o),
(179,62,qs),
(141,57,o),
(115,43,o),
(115,31,qs),
(115,15,o),
(130,0,o),
(159,0,qs),
(370,0,ls),
(392,0,o),
(419,6,o),
(433,15,o),
(437,27,o),
(437,33,qs),
(437,53,o),
(405,63,o),
(386,63,qs),
(316,63,l),
(316,325,l),
(326,325,l),
(438,163,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
25 24 2 3 2 87 1 4 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 1 0 1 106 0 0 7 0 106 0 3 2 4 2 3 4 104 0 4 5 2 4 5 102 0 8 0 9 8 9 87 0 2 2 7 83 0 7 7 12 67 0 5 5 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 1 0 1 106 0 0 7 0 106 0 3 2 4 2 3 4 104 0 4 5 2 4 5 102 0 8 0 9 8 9 87 0 2 2 7 83 0 7 7 14 67 0 5 5 6 84 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
104 101 96 94 78 71 54 33 20 52 38 38 36 10 22
CALL[ ]	/* CallFunction */";
};
width = 715;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(364,972,o),
(349,972,qs),
(338,972,o),
(302,950,o),
(268,919,o),
(243,887,o),
(243,877,qs),
(243,867,o),
(256,854,o),
(267,854,qs),
(277,854,o),
(316,872,o),
(353,899,o),
(381,929,o),
(381,941,qs),
(381,955,o)
);
},
{
closed = 1;
nodes = (
(485,458,o),
(399,417,o),
(298,403,o),
(253,403,qs),
(252,403,o),
(239,404,o),
(224,404,o),
(212,405,o),
(211,405,q),
(211,750,l),
(221,751,o),
(233,753,qs),
(243,755,o),
(269,757,o),
(283,757,qs),
(302,757,o),
(355,752,o),
(412,739,o),
(469,715,o),
(513,677,o),
(541,624,o),
(541,588,qs),
(541,530,o)
);
},
{
closed = 1;
nodes = (
(247,305,o),
(304,224,o),
(362,139,o),
(419,58,o),
(467,-5,o),
(503,-44,o),
(512,-44,qs),
(579,-44,o),
(659,-41,o),
(701,-35,o),
(714,-25,o),
(714,-18,qs),
(714,-2,o),
(691,6,o),
(668,6,qs),
(545,6,l),
(509,47,o),
(425,159,o),
(390,212,qs),
(349,273,o),
(308,338,q),
(368,343,o),
(479,376,o),
(564,437,o),
(616,530,o),
(616,594,qs),
(616,657,o),
(557,744,o),
(469,797,o),
(365,821,o),
(319,821,qs),
(274,821,o),
(215,820,o),
(164,819,o),
(111,818,o),
(71,818,qs),
(61,818,o),
(42,810,o),
(42,799,qs),
(42,770,o),
(74,770,qs),
(99,770,o),
(134,758,o),
(134,735,qs),
(134,653,o),
(140,494,o),
(140,412,qs),
(140,333,o),
(138,175,o),
(138,97,qs),
(138,81,o),
(129,62,o),
(115,51,o),
(98,48,o),
(91,48,qs),
(58,48,o),
(39,37,o),
(39,27,qs),
(39,16,o),
(53,0,o),
(82,0,qs),
(269,0,ls),
(313,0,o),
(338,14,o),
(338,25,qs),
(338,42,o),
(310,51,o),
(291,51,qs),
(211,51,l),
(211,338,l),
(212,337,o),
(214,337,qs),
(222,337,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
28 1 3 2 90 41 2 6 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 1 0 1 106 0 0 11 0 106 0 2 10 3 10 2 96 5 4 2 3 6 10 3 6 102 14 1 6 7 10 6 7 102 0 12 0 13 12 13 87 0 10 10 11 83 0 11 11 12 67 9 1 7 7 8 84 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 1 0 1 106 0 0 11 0 106 0 2 10 3 10 2 96 5 4 2 3 6 10 3 6 102 14 1 6 7 10 6 7 102 0 12 0 13 12 13 87 0 10 10 11 83 0 11 11 14 67 9 1 7 7 8 84 0 8 8 13 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
40 39 105 102 97 95 81 74 71 69 57 55 51 48 44 42 39 111 40 111 33 17 21 40 38 36 15 21
CALL[ ]	/* CallFunction */";
};
width = 691;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(335,972,o),
(327,972,qs),
(320,972,o),
(288,952,o),
(256,925,o),
(232,895,o),
(232,886,qs),
(232,875,o),
(240,875,qs),
(247,875,o),
(282,893,o),
(318,917,o),
(346,942,o),
(346,950,qs),
(346,964,o)
);
},
{
closed = 1;
nodes = (
(481,448,o),
(387,404,o),
(275,388,o),
(225,388,qs),
(224,388,o),
(211,389,o),
(196,389,o),
(184,390,o),
(183,390,q),
(183,780,l),
(193,781,o),
(205,783,qs),
(215,785,o),
(241,787,o),
(255,787,qs),
(276,787,o),
(335,781,o),
(399,766,o),
(462,738,o),
(512,693,o),
(543,631,o),
(543,588,qs),
(543,526,o)
);
},
{
closed = 1;
nodes = (
(239,319,o),
(299,234,o),
(360,146,o),
(418,62,o),
(468,-4,o),
(505,-44,o),
(514,-44,qs),
(566,-44,o),
(630,-44,o),
(665,-41,o),
(676,-34,o),
(676,-28,qs),
(676,-18,o),
(653,-14,o),
(630,-14,qs),
(534,-14,l),
(513,8,o),
(469,63,o),
(424,123,o),
(380,185,o),
(361,214,qs),
(315,282,o),
(270,352,q),
(330,352,o),
(444,377,o),
(533,434,o),
(588,527,o),
(588,594,qs),
(588,657,o),
(529,744,o),
(441,797,o),
(337,821,o),
(291,821,qs),
(246,821,o),
(190,820,o),
(143,819,o),
(93,818,o),
(53,818,qs),
(51,818,o),
(41,818,o),
(31,815,o),
(24,810,o),
(24,805,qs),
(24,793,o),
(48,789,o),
(56,789,qs),
(76,789,o),
(106,788,o),
(126,780,o),
(136,763,o),
(136,747,qs),
(136,662,o),
(142,497,o),
(142,412,qs),
(142,327,o),
(140,161,o),
(140,77,qs),
(140,61,o),
(129,42,o),
(110,31,o),
(86,28,o),
(73,28,qs),
(40,28,o),
(21,20,o),
(21,14,qs),
(21,9,o),
(35,0,o),
(64,0,qs),
(236,0,ls),
(258,0,o),
(285,0,o),
(299,3,o),
(303,7,o),
(303,12,qs),
(303,24,o),
(277,31,o),
(258,31,qs),
(183,31,l),
(183,353,l),
(186,352,o),
(190,352,qs),
(213,352,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
27 1 3 2 40 1 6 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 1 0 1 106 0 0 11 0 106 5 4 2 3 12 15 2 6 7 3 6 91 0 13 0 14 13 14 87 10 1 2 2 11 83 0 11 11 12 67 9 1 7 7 8 84 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 1 0 1 106 0 0 11 0 106 5 4 2 3 12 15 2 6 7 3 6 91 0 13 0 14 13 14 87 10 1 2 2 11 83 0 11 11 14 67 9 1 7 7 8 84 0 8 8 13 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
39 38 113 110 105 103 96 95 87 79 74 71 58 56 52 48 43 41 38 119 39 119 33 17 21 40 37 36 16 21
CALL[ ]	/* CallFunction */";
};
width = 657;
}
);
note = Racute;
unicode = 340;
},
{
glyphname = Rcaron;
kernLeft = B;
kernRight = R;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(432,965,o),
(398,951,o),
(360,933,o),
(343,922,q),
(326,933,o),
(288,951,o),
(255,965,o),
(229,972,o),
(224,972,qs),
(218,972,o),
(211,963,o),
(211,958,qs),
(211,938,o),
(247,894,o),
(293,855,o),
(336,830,o),
(343,830,qs),
(352,830,o),
(396,856,o),
(441,893,o),
(476,935,o),
(476,951,qs),
(476,958,o),
(471,972,o),
(463,972,qs),
(458,972,o)
);
},
{
closed = 1;
nodes = (
(578,464,o),
(499,425,o),
(406,411,o),
(364,411,qs),
(354,411,o),
(331,412,o),
(321,414,q),
(321,732,l),
(332,734,o),
(372,739,o),
(393,739,qs),
(419,739,o),
(499,728,o),
(575,696,o),
(630,636,o),
(630,588,qs),
(630,533,o)
);
},
{
closed = 1;
nodes = (
(466,122,o),
(518,47,o),
(562,-10,o),
(593,-44,o),
(600,-44,qs),
(672,-44,o),
(753,-41,o),
(792,-34,o),
(801,-20,o),
(801,-8,qs),
(801,9,o),
(777,22,o),
(751,22,qs),
(643,22,l),
(626,41,o),
(590,87,o),
(554,138,o),
(517,190,o),
(501,214,qs),
(462,270,o),
(425,330,q),
(485,337,o),
(594,375,o),
(677,439,o),
(726,532,o),
(726,594,qs),
(726,657,o),
(667,744,o),
(579,797,o),
(475,821,o),
(429,821,qs),
(384,821,o),
(317,820,o),
(256,819,o),
(194,818,o),
(154,818,qs),
(132,818,o),
(115,796,o),
(115,785,qs),
(115,755,o),
(162,749,qs),
(190,745,o),
(221,721,o),
(223,685,qs),
(224,645,o),
(227,580,o),
(228,517,o),
(229,452,o),
(229,412,qs),
(229,336,o),
(227,184,o),
(227,109,qs),
(227,95,o),
(219,77,o),
(205,67,o),
(188,63,o),
(179,62,qs),
(141,57,o),
(115,43,o),
(115,31,qs),
(115,15,o),
(130,0,o),
(159,0,qs),
(370,0,ls),
(392,0,o),
(419,6,o),
(433,15,o),
(437,27,o),
(437,33,qs),
(437,53,o),
(405,63,o),
(386,63,qs),
(316,63,l),
(316,325,l),
(326,325,l),
(438,163,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
21 1 1 0 35 34 2 4 3 97 1 5 4 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
2 11 2 0 1 0 106 0 1 8 1 106 0 4 3 5 3 4 5 104 0 5 6 3 5 6 102 0 9 0 10 9 10 87 0 3 3 8 83 0 8 8 12 67 0 6 6 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
2 11 2 0 1 0 106 0 1 8 1 106 0 4 3 5 3 4 5 104 0 5 6 3 5 6 102 0 9 0 10 9 10 87 0 3 3 8 83 0 8 8 14 67 0 6 6 7 84 0 7 7 13 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 114 111 106 104 88 81 56 53 47 45 44 43 39 36 32 30 17 15 9 7 0 25 1 25 12 15
CALL[ ]	/* CallFunction */";
};
width = 715;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(414,964,o),
(380,950,o),
(342,931,o),
(325,921,q),
(308,931,o),
(270,950,o),
(237,964,o),
(211,972,o),
(206,972,qs),
(195,972,o),
(195,959,qs),
(195,943,o),
(230,904,o),
(275,870,o),
(317,847,o),
(325,847,qs),
(334,847,o),
(377,871,o),
(422,904,o),
(456,941,o),
(456,955,qs),
(456,962,o),
(451,972,o),
(445,972,qs),
(440,972,o)
);
},
{
closed = 1;
nodes = (
(485,458,o),
(399,417,o),
(298,403,o),
(253,403,qs),
(252,403,o),
(239,404,o),
(224,404,o),
(212,405,o),
(211,405,q),
(211,750,l),
(221,751,o),
(233,753,qs),
(243,755,o),
(269,757,o),
(283,757,qs),
(302,757,o),
(355,752,o),
(412,739,o),
(469,715,o),
(513,677,o),
(541,624,o),
(541,588,qs),
(541,530,o)
);
},
{
closed = 1;
nodes = (
(247,305,o),
(304,224,o),
(362,139,o),
(419,58,o),
(467,-5,o),
(503,-44,o),
(512,-44,qs),
(579,-44,o),
(659,-41,o),
(701,-35,o),
(714,-25,o),
(714,-18,qs),
(714,-2,o),
(691,6,o),
(668,6,qs),
(545,6,l),
(509,47,o),
(425,159,o),
(390,212,qs),
(349,273,o),
(308,338,q),
(368,343,o),
(479,376,o),
(564,437,o),
(616,530,o),
(616,594,qs),
(616,657,o),
(557,744,o),
(469,797,o),
(365,821,o),
(319,821,qs),
(274,821,o),
(215,820,o),
(164,819,o),
(111,818,o),
(71,818,qs),
(61,818,o),
(42,810,o),
(42,799,qs),
(42,770,o),
(74,770,qs),
(99,770,o),
(134,758,o),
(134,735,qs),
(134,653,o),
(140,494,o),
(140,412,qs),
(140,333,o),
(138,175,o),
(138,97,qs),
(138,81,o),
(129,62,o),
(115,51,o),
(98,48,o),
(91,48,qs),
(58,48,o),
(39,37,o),
(39,27,qs),
(39,16,o),
(53,0,o),
(82,0,qs),
(269,0,ls),
(313,0,o),
(338,14,o),
(338,25,qs),
(338,42,o),
(310,51,o),
(291,51,qs),
(211,51,l),
(211,338,l),
(212,337,o),
(214,337,qs),
(222,337,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
20 1 1 0 37 1 4 3 99 50 2 7 4 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
2 15 2 0 1 0 106 0 1 12 1 106 0 3 11 4 11 3 96 6 5 2 4 7 11 4 7 102 16 1 7 8 11 7 8 102 0 13 0 14 13 14 87 0 11 11 12 83 0 12 12 12 67 10 1 8 8 9 84 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
2 15 2 0 1 0 106 0 1 12 1 106 0 3 11 4 11 3 96 6 5 2 4 7 11 4 7 102 16 1 7 8 11 7 8 102 0 13 0 14 13 14 87 0 11 11 12 83 0 12 12 14 67 10 1 8 8 9 84 0 9 9 13 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
49 48 1 0 114 111 106 104 90 83 80 78 66 64 60 57 53 51 48 120 49 120 44 42 41 40 39 38 33 31 16 14 9 7 0 24 1 24 17 15
CALL[ ]	/* CallFunction */";
};
width = 691;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(388,962,o),
(354,947,o),
(316,929,o),
(299,920,q),
(282,929,o),
(244,947,o),
(211,962,o),
(185,972,o),
(180,972,qs),
(172,972,o),
(172,961,qs),
(172,952,o),
(205,923,o),
(249,896,o),
(290,876,o),
(299,876,qs),
(308,876,o),
(351,896,o),
(394,923,o),
(427,952,o),
(427,961,qs),
(427,972,o),
(419,972,qs),
(414,972,o)
);
},
{
closed = 1;
nodes = (
(481,448,o),
(387,404,o),
(275,388,o),
(225,388,qs),
(224,388,o),
(211,389,o),
(196,389,o),
(184,390,o),
(183,390,q),
(183,780,l),
(193,781,o),
(205,783,qs),
(215,785,o),
(241,787,o),
(255,787,qs),
(276,787,o),
(335,781,o),
(399,766,o),
(462,738,o),
(512,693,o),
(543,631,o),
(543,588,qs),
(543,526,o)
);
},
{
closed = 1;
nodes = (
(239,319,o),
(299,234,o),
(360,146,o),
(418,62,o),
(468,-4,o),
(505,-44,o),
(514,-44,qs),
(566,-44,o),
(630,-44,o),
(665,-41,o),
(676,-34,o),
(676,-28,qs),
(676,-18,o),
(653,-14,o),
(630,-14,qs),
(534,-14,l),
(513,8,o),
(469,63,o),
(424,123,o),
(380,185,o),
(361,214,qs),
(315,282,o),
(270,352,q),
(330,352,o),
(444,377,o),
(533,434,o),
(588,527,o),
(588,594,qs),
(588,657,o),
(529,744,o),
(441,797,o),
(337,821,o),
(291,821,qs),
(246,821,o),
(190,820,o),
(143,819,o),
(93,818,o),
(53,818,qs),
(51,818,o),
(41,818,o),
(31,815,o),
(24,810,o),
(24,805,qs),
(24,793,o),
(48,789,o),
(56,789,qs),
(76,789,o),
(106,788,o),
(126,780,o),
(136,763,o),
(136,747,qs),
(136,662,o),
(142,497,o),
(142,412,qs),
(142,327,o),
(140,161,o),
(140,77,qs),
(140,61,o),
(129,42,o),
(110,31,o),
(86,28,o),
(73,28,qs),
(40,28,o),
(21,20,o),
(21,14,qs),
(21,9,o),
(35,0,o),
(64,0,qs),
(236,0,ls),
(258,0,o),
(285,0,o),
(299,3,o),
(303,7,o),
(303,12,qs),
(303,24,o),
(277,31,o),
(258,31,qs),
(183,31,l),
(183,353,l),
(186,352,o),
(190,352,qs),
(213,352,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
19 1 1 0 36 1 4 3 49 1 7 4 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
2 16 2 0 1 0 106 0 1 12 1 106 6 5 2 4 13 17 2 7 8 4 7 91 0 14 0 15 14 15 87 11 1 3 3 12 83 0 12 12 12 67 10 1 8 8 9 84 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
2 16 2 0 1 0 106 0 1 12 1 106 6 5 2 4 13 17 2 7 8 4 7 91 0 14 0 15 14 15 87 11 1 3 3 12 83 0 12 12 14 67 10 1 8 8 9 84 0 9 9 13 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
48 47 1 0 122 119 114 112 105 104 96 88 83 80 67 65 61 57 52 50 47 128 48 128 43 41 40 39 38 37 32 30 15 13 8 6 0 23 1 23 18 15
CALL[ ]	/* CallFunction */";
};
width = 657;
}
);
note = Rcaron;
unicode = 344;
},
{
glyphname = Rcommaaccent;
kernLeft = B;
kernRight = R;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(578,464,o),
(499,425,o),
(406,411,o),
(364,411,qs),
(354,411,o),
(331,412,o),
(321,414,q),
(321,732,l),
(332,734,o),
(372,739,o),
(393,739,qs),
(419,739,o),
(499,728,o),
(575,696,o),
(630,636,o),
(630,588,qs),
(630,533,o)
);
},
{
closed = 1;
nodes = (
(466,122,o),
(518,47,o),
(562,-10,o),
(593,-44,o),
(600,-44,qs),
(672,-44,o),
(753,-41,o),
(792,-34,o),
(801,-20,o),
(801,-8,qs),
(801,9,o),
(777,22,o),
(751,22,qs),
(643,22,l),
(626,41,o),
(590,87,o),
(554,138,o),
(517,190,o),
(501,214,qs),
(462,270,o),
(425,330,q),
(485,337,o),
(594,375,o),
(677,439,o),
(726,532,o),
(726,594,qs),
(726,657,o),
(667,744,o),
(579,797,o),
(475,821,o),
(429,821,qs),
(384,821,o),
(317,820,o),
(256,819,o),
(194,818,o),
(154,818,qs),
(132,818,o),
(115,796,o),
(115,785,qs),
(115,755,o),
(162,749,qs),
(190,745,o),
(221,721,o),
(223,685,qs),
(224,645,o),
(227,580,o),
(228,517,o),
(229,452,o),
(229,412,qs),
(229,336,o),
(227,184,o),
(227,109,qs),
(227,95,o),
(219,77,o),
(205,67,o),
(188,63,o),
(179,62,qs),
(141,57,o),
(115,43,o),
(115,31,qs),
(115,15,o),
(130,0,o),
(159,0,qs),
(370,0,ls),
(392,0,o),
(419,6,o),
(433,15,o),
(437,27,o),
(437,33,qs),
(437,53,o),
(405,63,o),
(386,63,qs),
(316,63,l),
(316,325,l),
(326,325,l),
(438,163,ls)
);
},
{
closed = 1;
nodes = (
(313,-127,o),
(327,-137,o),
(338,-146,o),
(338,-152,qs),
(338,-182,o),
(323,-211,o),
(323,-221,qs),
(323,-238,o),
(344,-244,o),
(349,-244,qs),
(355,-244,o),
(382,-229,o),
(409,-200,o),
(430,-155,o),
(430,-125,qs),
(430,-82,o),
(386,-44,o),
(362,-44,qs),
(329,-44,o),
(302,-81,o),
(302,-102,qs),
(302,-114,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
9 8 2 1 0 71 1 2 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 1 0 2 0 1 2 104 0 2 3 0 2 3 102 0 6 0 7 8 6 7 91 0 0 0 5 83 0 5 5 12 67 0 3 3 4 84 0 4 4 13 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 2 0 1 2 104 0 2 3 0 2 3 102 0 6 0 7 8 6 7 91 0 8 0 9 8 9 87 0 0 0 5 83 0 5 5 12 67 0 3 3 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 2 0 1 2 104 0 2 3 0 2 3 102 0 6 0 7 8 6 7 91 0 8 0 9 8 9 87 0 0 0 5 83 0 5 5 14 67 0 3 3 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
105 103 97 95 88 85 80 78 62 55 54 33 20 52 36 10 20
CALL[ ]	/* CallFunction */";
};
width = 715;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (39,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = R;
},
{
alignment = -1;
pos = (255,-136);
ref = comma;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
13 1 1 0 75 26 2 4 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 0 8 1 8 0 96 3 2 2 1 4 8 1 4 102 14 1 4 5 8 4 5 102 0 10 0 11 12 10 11 91 0 8 8 9 83 0 9 9 12 67 7 1 5 5 6 84 0 6 6 13 67 0 12 12 13 83 0 13 13 25 13 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 0 8 1 8 0 96 3 2 2 1 4 8 1 4 102 14 1 4 5 8 4 5 102 0 10 0 11 12 10 11 91 0 12 0 13 12 13 87 0 8 8 9 83 0 9 9 12 67 7 1 5 5 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 0 8 1 8 0 96 3 2 2 1 4 8 1 4 102 14 1 4 5 8 4 5 102 0 10 0 11 12 10 11 91 0 12 0 13 12 13 87 0 8 8 9 83 0 9 9 14 67 7 1 5 5 6 84 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
25 24 109 107 101 99 90 87 82 80 66 59 56 54 42 40 36 33 29 27 24 96 25 96 33 17 21 39 15 30
CALL[ ]	/* CallFunction */";
};
width = 691;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(481,448,o),
(387,404,o),
(275,388,o),
(225,388,qs),
(224,388,o),
(211,389,o),
(196,389,o),
(184,390,o),
(183,390,q),
(183,780,l),
(193,781,o),
(205,783,qs),
(215,785,o),
(241,787,o),
(255,787,qs),
(276,787,o),
(335,781,o),
(399,766,o),
(462,738,o),
(512,693,o),
(543,631,o),
(543,588,qs),
(543,526,o)
);
},
{
closed = 1;
nodes = (
(239,319,o),
(299,234,o),
(360,146,o),
(418,62,o),
(468,-4,o),
(505,-44,o),
(514,-44,qs),
(566,-44,o),
(630,-44,o),
(665,-41,o),
(676,-34,o),
(676,-28,qs),
(676,-18,o),
(653,-14,o),
(630,-14,qs),
(534,-14,l),
(513,8,o),
(469,63,o),
(424,123,o),
(380,185,o),
(361,214,qs),
(315,282,o),
(270,352,q),
(330,352,o),
(444,377,o),
(533,434,o),
(588,527,o),
(588,594,qs),
(588,657,o),
(529,744,o),
(441,797,o),
(337,821,o),
(291,821,qs),
(246,821,o),
(190,820,o),
(143,819,o),
(93,818,o),
(53,818,qs),
(51,818,o),
(41,818,o),
(31,815,o),
(24,810,o),
(24,805,qs),
(24,793,o),
(48,789,o),
(56,789,qs),
(76,789,o),
(106,788,o),
(126,780,o),
(136,763,o),
(136,747,qs),
(136,662,o),
(142,497,o),
(142,412,qs),
(142,327,o),
(140,161,o),
(140,77,qs),
(140,61,o),
(129,42,o),
(110,31,o),
(86,28,o),
(73,28,qs),
(40,28,o),
(21,20,o),
(21,14,qs),
(21,9,o),
(35,0,o),
(64,0,qs),
(236,0,ls),
(258,0,o),
(285,0,o),
(299,3,o),
(303,7,o),
(303,12,qs),
(303,24,o),
(277,31,o),
(258,31,qs),
(183,31,l),
(183,353,l),
(186,352,o),
(190,352,qs),
(213,352,l)
);
},
{
closed = 1;
nodes = (
(311,-124,o),
(325,-131,o),
(336,-138,o),
(336,-144,qs),
(336,-154,o),
(325,-183,o),
(325,-190,qs),
(325,-195,o),
(334,-202,o),
(339,-202,qs),
(349,-202,o),
(366,-185,o),
(376,-160,o),
(382,-133,o),
(382,-123,qs),
(382,-89,o),
(355,-66,o),
(340,-66,qs),
(320,-66,o),
(300,-87,o),
(300,-100,qs),
(300,-112,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 1 0 25 1 4 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
3 2 2 1 10 15 2 4 5 1 4 91 0 11 0 12 13 11 12 91 8 1 0 0 9 83 0 9 9 12 67 7 1 5 5 6 84 0 6 6 13 67 0 13 13 14 83 0 14 14 17 14 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
3 2 2 1 10 15 2 4 5 1 4 91 0 11 0 12 13 11 12 91 0 13 0 14 13 14 87 8 1 0 0 9 83 0 9 9 12 67 7 1 5 5 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
3 2 2 1 10 15 2 4 5 1 4 91 0 11 0 12 13 11 12 91 0 13 0 14 13 14 87 8 1 0 0 9 83 0 9 9 14 67 7 1 5 5 6 84 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
24 23 117 115 109 107 98 95 90 88 81 80 72 64 59 56 43 41 37 33 28 26 23 104 24 104 33 17 21 38 16 19
CALL[ ]	/* CallFunction */";
};
width = 657;
}
);
note = Rcommaaccent;
unicode = 342;
},
{
glyphname = S;
kernLeft = S;
kernRight = S;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(275,-16,o),
(338,-16,qs),
(378,-16,o),
(455,3,o),
(517,44,o),
(555,106,o),
(555,149,qs),
(555,189,o),
(522,253,o),
(470,303,o),
(404,342,o),
(338,371,o),
(279,393,o),
(259,402,qs),
(238,411,o),
(198,437,o),
(166,476,o),
(146,530,o),
(146,567,qs),
(146,612,o),
(175,683,o),
(223,732,o),
(284,759,o),
(316,759,qs),
(350,759,o),
(404,728,o),
(443,673,o),
(467,597,o),
(471,551,qs),
(472,541,o),
(475,520,o),
(484,503,o),
(502,492,o),
(517,492,qs),
(557,492,o),
(557,526,qs),
(557,557,o),
(555,622,o),
(555,649,qs),
(555,687,o),
(559,766,o),
(559,791,qs),
(559,797,o),
(557,813,o),
(549,827,o),
(533,837,o),
(518,837,qs),
(504,837,o),
(486,829,o),
(477,816,o),
(474,802,o),
(474,796,qs),
(474,793,o),
(475,787,o),
(476,772,o),
(479,741,o),
(481,713,q),
(455,782,o),
(381,837,o),
(322,837,qs),
(269,837,o),
(172,799,o),
(99,727,o),
(55,625,o),
(55,562,qs),
(55,505,o),
(90,423,o),
(144,366,o),
(210,328,o),
(240,314,qs),
(282,295,o),
(362,261,o),
(425,224,o),
(463,182,o),
(463,154,qs),
(463,117,o),
(392,62,o),
(329,62,qs),
(290,62,o),
(223,87,o),
(172,124,o),
(140,168,o),
(135,187,qs),
(133,196,o),
(129,224,o),
(119,251,o),
(101,271,o),
(84,271,qs),
(70,271,o),
(54,255,o),
(46,233,o),
(44,206,o),
(44,196,qs),
(44,181,o),
(46,133,o),
(46,113,qs),
(46,99,o),
(45,66,o),
(43,36,o),
(42,13,o),
(42,9,qs),
(42,-5,o),
(60,-32,o),
(83,-32,qs),
(104,-32,o),
(127,-8,o),
(127,9,qs),
(127,19,o),
(126,49,o),
(123,85,q),
(162,29,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
53 1 5 6 0 1 2 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 1 0 0 1 0 87 0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 2 2 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 6 5 3 6 79 4 1 3 0 5 1 3 5 91 0 1 0 0 1 0 87 0 2 2 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
109 107 87 85 77 75 64 62 51 49 40 46 37 8 18
CALL[ ]	/* CallFunction */";
};
width = 628;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(168,17,o),
(222,-6,o),
(281,-16,o),
(308,-16,qs),
(346,-16,o),
(433,1,o),
(507,38,o),
(556,100,o),
(556,145,qs),
(556,178,o),
(524,234,o),
(472,279,o),
(406,316,o),
(339,347,o),
(277,371,o),
(255,381,qs),
(231,392,o),
(184,418,o),
(147,459,o),
(125,520,o),
(125,565,qs),
(125,605,o),
(156,681,o),
(208,741,o),
(279,777,o),
(320,777,qs),
(351,777,o),
(414,744,o),
(466,685,o),
(502,605,o),
(506,557,q),
(506,535,o),
(520,498,o),
(540,498,qs),
(558,498,o),
(576,518,o),
(576,532,qs),
(576,564,o),
(574,620,o),
(574,652,qs),
(574,688,o),
(578,763,o),
(578,798,qs),
(578,801,o),
(576,813,o),
(569,823,o),
(555,831,o),
(543,831,qs),
(522,831,o),
(509,808,o),
(509,796,qs),
(509,795,o),
(513,734,o),
(517,671,q),
(487,758,o),
(385,837,o),
(312,837,qs),
(267,837,o),
(175,797,o),
(101,726,o),
(54,630,o),
(54,574,qs),
(54,509,o),
(89,423,o),
(144,366,o),
(211,329,o),
(243,314,qs),
(278,297,o),
(362,263,o),
(436,223,o),
(485,175,o),
(485,145,qs),
(485,122,o),
(455,85,o),
(406,59,o),
(341,44,o),
(305,44,qs),
(260,44,o),
(190,67,o),
(142,106,o),
(117,154,o),
(117,180,qs),
(117,191,o),
(115,215,o),
(107,236,o),
(93,249,o),
(80,249,qs),
(58,249,o),
(46,219,o),
(46,205,qs),
(46,189,o),
(47,167,o),
(47,146,o),
(48,124,o),
(48,108,qs),
(48,97,o),
(47,67,o),
(45,37,o),
(44,13,o),
(44,7,qs),
(44,0,o),
(62,-26,o),
(79,-26,qs),
(97,-26,o),
(113,-3,o),
(113,9,qs),
(111,47,ls),
(110,64,o),
(110,85,q),
(123,56,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
78 55 2 5 6 0 1 2 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 20 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 1 0 0 1 0 87 0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 20 67 0 2 2 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 0 0 1 0 87 0 2 2 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
106 104 84 82 76 74 62 60 53 51 40 46 37 8 18
CALL[ ]	/* CallFunction */";
};
width = 613;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(151,21,o),
(213,-4,o),
(280,-16,o),
(312,-16,qs),
(345,-16,o),
(425,1,o),
(494,40,o),
(540,101,o),
(540,145,qs),
(540,187,o),
(475,251,o),
(384,301,o),
(289,337,o),
(259,351,qs),
(229,365,o),
(171,398,o),
(126,447,o),
(99,515,o),
(99,565,qs),
(99,611,o),
(133,698,o),
(192,766,o),
(273,807,o),
(320,807,qs),
(360,807,o),
(427,773,o),
(476,710,o),
(506,621,o),
(510,567,qs),
(510,545,o),
(517,508,o),
(531,508,qs),
(544,508,o),
(550,528,o),
(550,542,qs),
(550,574,o),
(548,620,o),
(548,652,qs),
(548,688,o),
(552,763,o),
(552,798,qs),
(552,805,o),
(542,821,o),
(532,821,qs),
(513,821,o),
(513,796,qs),
(513,795,o),
(517,734,o),
(521,671,q),
(491,758,o),
(389,837,o),
(316,837,qs),
(271,837,o),
(179,797,o),
(105,726,o),
(58,630,o),
(58,574,qs),
(58,511,o),
(93,426,o),
(149,367,o),
(215,329,o),
(247,314,qs),
(283,297,o),
(370,263,o),
(447,224,o),
(499,176,o),
(499,145,qs),
(499,114,o),
(466,65,o),
(413,32,o),
(345,14,o),
(309,14,qs),
(256,14,o),
(175,43,o),
(120,89,o),
(91,149,o),
(91,180,qs),
(91,202,o),
(83,239,o),
(69,239,qs),
(56,239,o),
(50,219,o),
(50,205,qs),
(50,189,o),
(51,167,o),
(51,146,o),
(52,124,o),
(52,108,qs),
(52,97,o),
(51,67,o),
(49,37,o),
(48,13,o),
(48,7,qs),
(48,0,o),
(58,-16,o),
(68,-16,qs),
(87,-16,o),
(87,9,q),
(86,15,o),
(86,22,qs),
(86,28,o),
(85,42,o),
(85,50,qs),
(84,68,o),
(84,91,q),
(100,62,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
76 56 2 5 6 0 1 2 1 7 1 0 2 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 12 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 3 0 6 5 3 6 91 0 5 5 4 83 0 4 4 14 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
102 100 82 80 74 72 62 60 54 52 38 46 40 8 18
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = S;
unicode = 83;
},
{
glyphname = Sacute;
kernLeft = S;
kernRight = S;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(383,972,o),
(363,972,qs),
(349,972,o),
(310,949,o),
(274,916,o),
(249,882,o),
(249,872,qs),
(249,860,o),
(269,841,o),
(284,841,qs),
(297,841,o),
(337,860,o),
(376,888,o),
(404,921,o),
(404,936,qs),
(404,949,o)
);
},
{
closed = 1;
nodes = (
(275,-16,o),
(338,-16,qs),
(378,-16,o),
(455,3,o),
(517,44,o),
(555,106,o),
(555,149,qs),
(555,189,o),
(522,253,o),
(470,303,o),
(404,342,o),
(338,371,o),
(279,393,o),
(259,402,qs),
(238,411,o),
(198,437,o),
(166,476,o),
(146,530,o),
(146,567,qs),
(146,612,o),
(175,683,o),
(223,732,o),
(284,759,o),
(316,759,qs),
(350,759,o),
(404,728,o),
(443,673,o),
(467,597,o),
(471,551,qs),
(472,541,o),
(475,520,o),
(484,503,o),
(502,492,o),
(517,492,qs),
(557,492,o),
(557,526,qs),
(557,557,o),
(555,622,o),
(555,649,qs),
(555,687,o),
(559,766,o),
(559,791,qs),
(559,797,o),
(557,813,o),
(549,827,o),
(533,837,o),
(518,837,qs),
(504,837,o),
(486,829,o),
(477,816,o),
(474,802,o),
(474,796,qs),
(474,793,o),
(475,787,o),
(476,772,o),
(479,741,o),
(481,713,q),
(455,782,o),
(381,837,o),
(322,837,qs),
(269,837,o),
(172,799,o),
(99,727,o),
(55,625,o),
(55,562,qs),
(55,505,o),
(90,423,o),
(144,366,o),
(210,328,o),
(240,314,qs),
(282,295,o),
(362,261,o),
(425,224,o),
(463,182,o),
(463,154,qs),
(463,117,o),
(392,62,o),
(329,62,qs),
(290,62,o),
(223,87,o),
(172,124,o),
(140,168,o),
(135,187,qs),
(133,196,o),
(129,224,o),
(119,251,o),
(101,271,o),
(84,271,qs),
(70,271,o),
(54,255,o),
(46,233,o),
(44,206,o),
(44,196,qs),
(44,181,o),
(46,133,o),
(46,113,qs),
(46,99,o),
(45,66,o),
(43,36,o),
(42,13,o),
(42,9,qs),
(42,-5,o),
(60,-32,o),
(83,-32,qs),
(104,-32,o),
(127,-8,o),
(127,9,qs),
(127,19,o),
(126,49,o),
(123,85,q),
(162,29,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
69 1 7 8 16 1 4 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 1 0 1 106 0 0 5 0 106 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 67 0 4 4 9 84 0 9 9 21 67 0 3 3 2 83 0 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 1 106 0 0 5 0 106 0 3 0 2 3 2 87 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 67 0 4 4 9 84 0 9 9 21 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 1 106 0 0 5 0 106 0 8 7 5 8 79 6 1 5 0 7 3 5 7 91 0 3 0 2 3 2 87 0 4 4 9 84 0 9 9 21 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
125 123 103 101 93 91 80 78 67 65 40 46 39 38 36 10 20
CALL[ ]	/* CallFunction */";
};
width = 628;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(374,972,o),
(359,972,qs),
(348,972,o),
(312,950,o),
(278,919,o),
(253,887,o),
(253,877,qs),
(253,867,o),
(266,854,o),
(277,854,qs),
(287,854,o),
(326,872,o),
(363,899,o),
(391,929,o),
(391,941,qs),
(391,955,o)
);
},
{
closed = 1;
nodes = (
(168,17,o),
(222,-6,o),
(281,-16,o),
(308,-16,qs),
(346,-16,o),
(433,1,o),
(507,38,o),
(556,100,o),
(556,145,qs),
(556,178,o),
(524,234,o),
(472,279,o),
(406,316,o),
(339,347,o),
(277,371,o),
(255,381,qs),
(231,392,o),
(184,418,o),
(147,459,o),
(125,520,o),
(125,565,qs),
(125,605,o),
(156,681,o),
(208,741,o),
(279,777,o),
(320,777,qs),
(351,777,o),
(414,744,o),
(466,685,o),
(502,605,o),
(506,557,q),
(506,535,o),
(520,498,o),
(540,498,qs),
(558,498,o),
(576,518,o),
(576,532,qs),
(576,564,o),
(574,620,o),
(574,652,qs),
(574,688,o),
(578,763,o),
(578,798,qs),
(578,801,o),
(576,813,o),
(569,823,o),
(555,831,o),
(543,831,qs),
(522,831,o),
(509,808,o),
(509,796,qs),
(509,795,o),
(513,734,o),
(517,671,q),
(487,758,o),
(385,837,o),
(312,837,qs),
(267,837,o),
(175,797,o),
(101,726,o),
(54,630,o),
(54,574,qs),
(54,509,o),
(89,423,o),
(144,366,o),
(211,329,o),
(243,314,qs),
(278,297,o),
(362,263,o),
(436,223,o),
(485,175,o),
(485,145,qs),
(485,122,o),
(455,85,o),
(406,59,o),
(341,44,o),
(305,44,qs),
(260,44,o),
(190,67,o),
(142,106,o),
(117,154,o),
(117,180,qs),
(117,191,o),
(115,215,o),
(107,236,o),
(93,249,o),
(80,249,qs),
(58,249,o),
(46,219,o),
(46,205,qs),
(46,189,o),
(47,167,o),
(47,146,o),
(48,124,o),
(48,108,qs),
(48,97,o),
(47,67,o),
(45,37,o),
(44,13,o),
(44,7,qs),
(44,0,o),
(62,-26,o),
(79,-26,qs),
(97,-26,o),
(113,-3,o),
(113,9,qs),
(111,47,ls),
(110,64,o),
(110,85,q),
(123,56,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
94 71 2 7 8 16 1 4 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 1 0 5 1 94 0 0 5 0 106 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 67 0 3 3 2 83 9 1 2 2 21 67 0 4 4 2 83 9 1 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 1 0 1 106 0 0 5 0 106 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 67 0 3 3 2 83 9 1 2 2 21 67 0 4 4 2 83 9 1 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 1 0 1 106 0 0 5 0 106 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 67 0 4 4 9 83 0 9 9 21 67 0 3 3 2 83 0 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 1 106 0 0 5 0 106 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 20 67 0 4 4 9 83 0 9 9 21 67 0 3 3 2 83 0 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 1 0 1 106 0 0 5 0 106 0 3 0 2 3 2 87 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 20 67 0 4 4 9 83 0 9 9 21 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 0 5 0 106 0 5 0 8 7 5 8 92 0 6 0 7 3 6 7 91 0 3 0 2 3 2 87 0 4 4 9 83 0 9 9 21 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
122 120 100 98 92 90 78 76 69 67 40 46 39 38 36 10 20
CALL[ ]	/* CallFunction */";
};
width = 613;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(362,972,o),
(354,972,qs),
(347,972,o),
(315,952,o),
(283,925,o),
(259,895,o),
(259,886,qs),
(259,875,o),
(267,875,qs),
(274,875,o),
(309,893,o),
(345,917,o),
(373,942,o),
(373,950,qs),
(373,964,o)
);
},
{
closed = 1;
nodes = (
(151,21,o),
(213,-4,o),
(280,-16,o),
(312,-16,qs),
(345,-16,o),
(425,1,o),
(494,40,o),
(540,101,o),
(540,145,qs),
(540,187,o),
(475,251,o),
(384,301,o),
(289,337,o),
(259,351,qs),
(229,365,o),
(171,398,o),
(126,447,o),
(99,515,o),
(99,565,qs),
(99,611,o),
(133,698,o),
(192,766,o),
(273,807,o),
(320,807,qs),
(360,807,o),
(427,773,o),
(476,710,o),
(506,621,o),
(510,567,qs),
(510,545,o),
(517,508,o),
(531,508,qs),
(544,508,o),
(550,528,o),
(550,542,qs),
(550,574,o),
(548,620,o),
(548,652,qs),
(548,688,o),
(552,763,o),
(552,798,qs),
(552,805,o),
(542,821,o),
(532,821,qs),
(513,821,o),
(513,796,qs),
(513,795,o),
(517,734,o),
(521,671,q),
(491,758,o),
(389,837,o),
(316,837,qs),
(271,837,o),
(179,797,o),
(105,726,o),
(58,630,o),
(58,574,qs),
(58,511,o),
(93,426,o),
(149,367,o),
(215,329,o),
(247,314,qs),
(283,297,o),
(370,263,o),
(447,224,o),
(499,176,o),
(499,145,qs),
(499,114,o),
(466,65,o),
(413,32,o),
(345,14,o),
(309,14,qs),
(256,14,o),
(175,43,o),
(120,89,o),
(91,149,o),
(91,180,qs),
(91,202,o),
(83,239,o),
(69,239,qs),
(56,239,o),
(50,219,o),
(50,205,qs),
(50,189,o),
(51,167,o),
(51,146,o),
(52,124,o),
(52,108,qs),
(52,97,o),
(51,67,o),
(49,37,o),
(48,13,o),
(48,7,qs),
(48,0,o),
(58,-16,o),
(68,-16,qs),
(87,-16,o),
(87,9,q),
(86,15,o),
(86,22,qs),
(86,28,o),
(85,42,o),
(85,50,qs),
(84,68,o),
(84,91,q),
(100,62,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
91 71 2 7 8 15 1 4 3 22 1 2 4 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 1 0 5 1 94 0 0 5 0 106 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 2 83 9 1 2 2 21 67 0 4 4 2 83 9 1 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 1 0 1 106 0 0 5 0 106 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 2 83 9 1 2 2 21 67 0 4 4 2 83 9 1 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 1 106 0 0 5 0 106 0 5 0 8 7 5 8 92 0 7 7 6 83 0 6 6 14 67 0 3 3 2 83 9 1 2 2 21 67 0 4 4 2 83 9 1 2 2 21 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
117 115 97 95 89 87 77 75 69 67 38 46 42 37 36 10 20
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = Sacute;
unicode = 346;
},
{
glyphname = Scaron;
kernLeft = S;
kernRight = S;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(275,-16,o),
(338,-16,qs),
(378,-16,o),
(455,3,o),
(517,44,o),
(555,106,o),
(555,149,qs),
(555,189,o),
(522,253,o),
(470,303,o),
(404,342,o),
(338,371,o),
(279,393,o),
(259,402,qs),
(238,411,o),
(198,437,o),
(166,476,o),
(146,530,o),
(146,567,qs),
(146,612,o),
(175,683,o),
(223,732,o),
(284,759,o),
(316,759,qs),
(350,759,o),
(404,728,o),
(443,673,o),
(467,597,o),
(471,551,qs),
(472,541,o),
(475,520,o),
(484,503,o),
(502,492,o),
(517,492,qs),
(557,492,o),
(557,526,qs),
(557,557,o),
(555,622,o),
(555,649,qs),
(555,687,o),
(559,766,o),
(559,791,qs),
(559,797,o),
(557,813,o),
(549,827,o),
(533,837,o),
(518,837,qs),
(504,837,o),
(486,829,o),
(477,816,o),
(474,802,o),
(474,796,qs),
(474,793,o),
(475,787,o),
(476,772,o),
(479,741,o),
(481,713,q),
(456,779,o),
(386,835,o),
(331,837,q),
(346,844,o),
(385,872,o),
(420,905,o),
(444,938,o),
(444,951,qs),
(444,958,o),
(439,972,o),
(431,972,qs),
(426,972,o),
(400,965,o),
(366,951,o),
(328,933,o),
(311,922,q),
(294,933,o),
(256,951,o),
(223,965,o),
(197,972,o),
(192,972,qs),
(186,972,o),
(179,963,o),
(179,958,qs),
(179,941,o),
(205,904,o),
(242,869,o),
(282,842,o),
(296,835,q),
(247,830,o),
(160,788,o),
(94,718,o),
(55,621,o),
(55,562,qs),
(55,505,o),
(90,423,o),
(144,366,o),
(210,328,o),
(240,314,qs),
(282,295,o),
(362,261,o),
(425,224,o),
(463,182,o),
(463,154,qs),
(463,117,o),
(392,62,o),
(329,62,qs),
(290,62,o),
(223,87,o),
(172,124,o),
(140,168,o),
(135,187,qs),
(133,196,o),
(129,224,o),
(119,251,o),
(101,271,o),
(84,271,qs),
(70,271,o),
(54,255,o),
(46,233,o),
(44,206,o),
(44,196,qs),
(44,181,o),
(46,133,o),
(46,113,qs),
(46,99,o),
(45,66,o),
(43,36,o),
(42,13,o),
(42,9,qs),
(42,-5,o),
(60,-32,o),
(83,-32,qs),
(104,-32,o),
(127,-8,o),
(127,9,qs),
(127,19,o),
(126,49,o),
(123,85,q),
(162,29,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
63 1 5 3 50 1 8 5 79 1 7 8 0 1 2 1 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
4 1 3 5 3 106 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 67 0 2 2 9 83 0 9 9 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
4 1 3 5 3 106 0 1 0 0 1 0 87 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 67 0 2 2 9 83 0 9 9 21 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
4 1 3 5 3 106 0 8 7 5 8 79 6 1 5 0 7 1 5 7 91 0 1 0 0 1 0 87 0 2 2 9 83 0 9 9 21 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
135 133 113 111 103 101 90 88 77 76 69 67 59 57 40 46 37 10 18
CALL[ ]	/* CallFunction */";
};
width = 628;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(401,964,o),
(367,950,o),
(329,931,o),
(312,921,q),
(295,931,o),
(257,950,o),
(224,964,o),
(198,972,o),
(193,972,qs),
(182,972,o),
(182,959,qs),
(182,943,o),
(217,904,o),
(262,870,o),
(304,847,o),
(312,847,qs),
(321,847,o),
(364,871,o),
(409,904,o),
(443,941,o),
(443,955,qs),
(443,962,o),
(438,972,o),
(432,972,qs),
(427,972,o)
);
},
{
closed = 1;
nodes = (
(168,17,o),
(222,-6,o),
(281,-16,o),
(308,-16,qs),
(346,-16,o),
(433,1,o),
(507,38,o),
(556,100,o),
(556,145,qs),
(556,178,o),
(524,234,o),
(472,279,o),
(406,316,o),
(339,347,o),
(277,371,o),
(255,381,qs),
(231,392,o),
(184,418,o),
(147,459,o),
(125,520,o),
(125,565,qs),
(125,605,o),
(156,681,o),
(208,741,o),
(279,777,o),
(320,777,qs),
(351,777,o),
(414,744,o),
(466,685,o),
(502,605,o),
(506,557,q),
(506,535,o),
(520,498,o),
(540,498,qs),
(558,498,o),
(576,518,o),
(576,532,qs),
(576,564,o),
(574,620,o),
(574,652,qs),
(574,688,o),
(578,763,o),
(578,798,qs),
(578,801,o),
(576,813,o),
(569,823,o),
(555,831,o),
(543,831,qs),
(522,831,o),
(509,808,o),
(509,796,qs),
(509,795,o),
(513,734,o),
(517,671,q),
(487,758,o),
(385,837,o),
(312,837,qs),
(267,837,o),
(175,797,o),
(101,726,o),
(54,630,o),
(54,574,qs),
(54,509,o),
(89,423,o),
(144,366,o),
(211,329,o),
(243,314,qs),
(278,297,o),
(362,263,o),
(436,223,o),
(485,175,o),
(485,145,qs),
(485,122,o),
(455,85,o),
(406,59,o),
(341,44,o),
(305,44,qs),
(260,44,o),
(190,67,o),
(142,106,o),
(117,154,o),
(117,180,qs),
(117,191,o),
(115,215,o),
(107,236,o),
(93,249,o),
(80,249,qs),
(58,249,o),
(46,219,o),
(46,205,qs),
(46,189,o),
(47,167,o),
(47,146,o),
(48,124,o),
(48,108,qs),
(48,97,o),
(47,67,o),
(45,37,o),
(44,13,o),
(44,7,qs),
(44,0,o),
(62,-26,o),
(79,-26,qs),
(97,-26,o),
(113,-3,o),
(113,9,qs),
(111,47,ls),
(110,64,o),
(110,85,q),
(123,56,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
20 1 1 0 103 80 2 8 9 25 1 5 4 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 9 9 6 83 7 1 6 6 20 67 0 8 8 6 83 7 1 6 6 20 67 0 4 4 3 83 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 9 9 6 83 7 1 6 6 20 67 0 8 8 6 83 7 1 6 6 20 67 0 5 5 10 83 0 10 10 21 67 0 4 4 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 9 9 6 83 0 6 6 20 67 0 8 8 7 83 0 7 7 20 67 0 5 5 10 83 0 10 10 21 67 0 4 4 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 4 0 3 4 3 87 0 9 9 6 83 0 6 6 20 67 0 8 8 7 83 0 7 7 20 67 0 5 5 10 83 0 10 10 21 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 6 0 9 8 6 9 91 0 7 0 8 4 7 8 91 0 4 0 3 4 3 87 0 5 5 10 83 0 10 10 21 10 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 131 129 109 107 101 99 87 85 78 76 58 56 48 46 32 30 16 14 9 7 0 24 1 24 12 15
CALL[ ]	/* CallFunction */";
};
width = 613;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(402,962,o),
(368,947,o),
(330,929,o),
(313,920,q),
(296,929,o),
(258,947,o),
(225,962,o),
(199,972,o),
(194,972,qs),
(186,972,o),
(186,961,qs),
(186,952,o),
(219,923,o),
(263,896,o),
(304,876,o),
(313,876,qs),
(322,876,o),
(365,896,o),
(408,923,o),
(441,952,o),
(441,961,qs),
(441,972,o),
(433,972,qs),
(428,972,o)
);
},
{
closed = 1;
nodes = (
(151,21,o),
(213,-4,o),
(280,-16,o),
(312,-16,qs),
(345,-16,o),
(425,1,o),
(494,40,o),
(540,101,o),
(540,145,qs),
(540,187,o),
(475,251,o),
(384,301,o),
(289,337,o),
(259,351,qs),
(229,365,o),
(171,398,o),
(126,447,o),
(99,515,o),
(99,565,qs),
(99,611,o),
(133,698,o),
(192,766,o),
(273,807,o),
(320,807,qs),
(360,807,o),
(427,773,o),
(476,710,o),
(506,621,o),
(510,567,qs),
(510,545,o),
(517,508,o),
(531,508,qs),
(544,508,o),
(550,528,o),
(550,542,qs),
(550,574,o),
(548,620,o),
(548,652,qs),
(548,688,o),
(552,763,o),
(552,798,qs),
(552,805,o),
(542,821,o),
(532,821,qs),
(513,821,o),
(513,796,qs),
(513,795,o),
(517,734,o),
(521,671,q),
(491,758,o),
(389,837,o),
(316,837,qs),
(271,837,o),
(179,797,o),
(105,726,o),
(58,630,o),
(58,574,qs),
(58,511,o),
(93,426,o),
(149,367,o),
(215,329,o),
(247,314,qs),
(283,297,o),
(370,263,o),
(447,224,o),
(499,176,o),
(499,145,qs),
(499,114,o),
(466,65,o),
(413,32,o),
(345,14,o),
(309,14,qs),
(256,14,o),
(175,43,o),
(120,89,o),
(91,149,o),
(91,180,qs),
(91,202,o),
(83,239,o),
(69,239,qs),
(56,239,o),
(50,219,o),
(50,205,qs),
(50,189,o),
(51,167,o),
(51,146,o),
(52,124,o),
(52,108,qs),
(52,97,o),
(51,67,o),
(49,37,o),
(48,13,o),
(48,7,qs),
(48,0,o),
(58,-16,o),
(68,-16,qs),
(87,-16,o),
(87,9,q),
(86,15,o),
(86,22,qs),
(86,28,o),
(85,42,o),
(85,50,qs),
(84,68,o),
(84,91,q),
(100,62,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
19 1 1 0 100 80 2 8 9 24 1 5 4 31 1 3 5 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 9 9 6 83 0 6 6 20 67 0 8 8 7 83 0 7 7 12 67 0 4 4 3 83 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 6 0 9 8 6 9 91 0 8 8 7 83 0 7 7 14 67 0 4 4 3 83 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 126 124 106 104 98 96 86 84 78 76 58 56 50 48 34 32 15 13 8 6 0 23 1 23 12 15
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = Scaron;
unicode = 352;
},
{
glyphname = Scircumflex;
kernLeft = S;
kernRight = S;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(442,844,o),
(442,851,qs),
(442,867,o),
(407,908,o),
(362,946,o),
(318,972,o),
(309,972,qs),
(302,972,o),
(259,947,o),
(213,909,o),
(177,864,o),
(177,844,qs),
(177,839,o),
(184,830,o),
(190,830,qs),
(196,830,o),
(221,837,o),
(254,851,o),
(292,869,o),
(309,880,q),
(326,869,o),
(364,851,o),
(398,837,o),
(424,830,o),
(429,830,qs),
(437,830,o)
);
},
{
closed = 1;
nodes = (
(275,-16,o),
(338,-16,qs),
(378,-16,o),
(455,3,o),
(517,44,o),
(555,106,o),
(555,149,qs),
(555,189,o),
(522,253,o),
(470,303,o),
(404,342,o),
(338,371,o),
(279,393,o),
(259,402,qs),
(238,411,o),
(198,437,o),
(166,476,o),
(146,530,o),
(146,567,qs),
(146,612,o),
(175,683,o),
(223,732,o),
(284,759,o),
(316,759,qs),
(350,759,o),
(404,728,o),
(443,673,o),
(467,597,o),
(471,551,qs),
(472,541,o),
(475,520,o),
(484,503,o),
(502,492,o),
(517,492,qs),
(557,492,o),
(557,526,qs),
(557,557,o),
(555,622,o),
(555,649,qs),
(555,687,o),
(559,766,o),
(559,791,qs),
(559,797,o),
(557,813,o),
(549,827,o),
(533,837,o),
(518,837,qs),
(504,837,o),
(486,829,o),
(477,816,o),
(474,802,o),
(474,796,qs),
(474,793,o),
(475,787,o),
(476,772,o),
(479,741,o),
(481,713,q),
(455,782,o),
(381,837,o),
(322,837,qs),
(269,837,o),
(172,799,o),
(99,727,o),
(55,625,o),
(55,562,qs),
(55,505,o),
(90,423,o),
(144,366,o),
(210,328,o),
(240,314,qs),
(282,295,o),
(362,261,o),
(425,224,o),
(463,182,o),
(463,154,qs),
(463,117,o),
(392,62,o),
(329,62,qs),
(290,62,o),
(223,87,o),
(172,124,o),
(140,168,o),
(135,187,qs),
(133,196,o),
(129,224,o),
(119,251,o),
(101,271,o),
(84,271,qs),
(70,271,o),
(54,255,o),
(46,233,o),
(44,206,o),
(44,196,qs),
(44,181,o),
(46,133,o),
(46,113,qs),
(46,99,o),
(45,66,o),
(43,36,o),
(42,13,o),
(42,9,qs),
(42,-5,o),
(60,-32,o),
(83,-32,qs),
(104,-32,o),
(127,-8,o),
(127,9,qs),
(127,19,o),
(126,49,o),
(123,85,q),
(162,29,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
5 1 6 2 79 1 8 9 26 1 5 4 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 2 6 6 2 94 1 11 2 0 6 9 6 0 9 104 0 9 9 6 83 7 1 6 6 20 67 0 8 8 6 83 7 1 6 6 20 67 0 5 5 10 83 0 10 10 21 67 0 4 4 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 2 6 2 106 1 11 2 0 6 9 6 0 9 104 0 9 9 6 83 7 1 6 6 20 67 0 8 8 6 83 7 1 6 6 20 67 0 5 5 10 83 0 10 10 21 67 0 4 4 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 2 6 2 106 1 11 2 0 6 9 6 0 9 104 0 4 0 3 4 3 87 0 9 9 6 83 7 1 6 6 20 67 0 8 8 6 83 7 1 6 6 20 67 0 5 5 10 83 0 10 10 21 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 2 6 2 106 1 11 2 0 6 9 6 0 9 104 0 9 8 6 9 80 7 1 6 0 8 4 6 8 92 0 4 0 3 4 3 87 0 5 5 10 83 0 10 10 21 10 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 135 133 113 111 103 101 90 88 77 75 59 57 49 47 33 31 19 17 11 9 0 25 1 25 12 15
CALL[ ]	/* CallFunction */";
};
width = 628;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(443,857,o),
(443,864,qs),
(443,877,o),
(409,915,o),
(364,948,o),
(321,972,o),
(312,972,qs),
(304,972,o),
(262,949,o),
(217,915,o),
(182,876,o),
(182,860,qs),
(182,847,o),
(193,847,qs),
(198,847,o),
(224,855,o),
(257,869,o),
(295,888,o),
(312,898,q),
(329,888,o),
(367,869,o),
(401,855,o),
(427,847,o),
(432,847,qs),
(438,847,o)
);
},
{
closed = 1;
nodes = (
(168,17,o),
(222,-6,o),
(281,-16,o),
(308,-16,qs),
(346,-16,o),
(433,1,o),
(507,38,o),
(556,100,o),
(556,145,qs),
(556,178,o),
(524,234,o),
(472,279,o),
(406,316,o),
(339,347,o),
(277,371,o),
(255,381,qs),
(231,392,o),
(184,418,o),
(147,459,o),
(125,520,o),
(125,565,qs),
(125,605,o),
(156,681,o),
(208,741,o),
(279,777,o),
(320,777,qs),
(351,777,o),
(414,744,o),
(466,685,o),
(502,605,o),
(506,557,q),
(506,535,o),
(520,498,o),
(540,498,qs),
(558,498,o),
(576,518,o),
(576,532,qs),
(576,564,o),
(574,620,o),
(574,652,qs),
(574,688,o),
(578,763,o),
(578,798,qs),
(578,801,o),
(576,813,o),
(569,823,o),
(555,831,o),
(543,831,qs),
(522,831,o),
(509,808,o),
(509,796,qs),
(509,795,o),
(513,734,o),
(517,671,q),
(487,758,o),
(385,837,o),
(312,837,qs),
(267,837,o),
(175,797,o),
(101,726,o),
(54,630,o),
(54,574,qs),
(54,509,o),
(89,423,o),
(144,366,o),
(211,329,o),
(243,314,qs),
(278,297,o),
(362,263,o),
(436,223,o),
(485,175,o),
(485,145,qs),
(485,122,o),
(455,85,o),
(406,59,o),
(341,44,o),
(305,44,qs),
(260,44,o),
(190,67,o),
(142,106,o),
(117,154,o),
(117,180,qs),
(117,191,o),
(115,215,o),
(107,236,o),
(93,249,o),
(80,249,qs),
(58,249,o),
(46,219,o),
(46,205,qs),
(46,189,o),
(47,167,o),
(47,146,o),
(48,124,o),
(48,108,qs),
(48,97,o),
(47,67,o),
(45,37,o),
(44,13,o),
(44,7,qs),
(44,0,o),
(62,-26,o),
(79,-26,qs),
(97,-26,o),
(113,-3,o),
(113,9,qs),
(111,47,ls),
(110,64,o),
(110,85,q),
(123,56,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
5 1 0 2 103 80 2 8 9 25 1 5 4 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 2 0 6 2 94 1 11 2 0 6 0 106 0 9 9 6 83 7 1 6 6 20 67 0 8 8 6 83 7 1 6 6 20 67 0 4 4 3 83 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 2 0 2 106 1 11 2 0 6 0 106 0 9 9 6 83 7 1 6 6 20 67 0 8 8 6 83 7 1 6 6 20 67 0 4 4 3 83 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 2 0 2 106 1 11 2 0 6 0 106 0 9 9 6 83 7 1 6 6 20 67 0 8 8 6 83 7 1 6 6 20 67 0 5 5 10 83 0 10 10 21 67 0 4 4 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 2 0 2 106 1 11 2 0 6 0 106 0 9 9 6 83 0 6 6 20 67 0 8 8 7 83 0 7 7 20 67 0 5 5 10 83 0 10 10 21 67 0 4 4 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 2 0 2 106 1 11 2 0 6 0 106 0 4 0 3 4 3 87 0 9 9 6 83 0 6 6 20 67 0 8 8 7 83 0 7 7 20 67 0 5 5 10 83 0 10 10 21 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 2 0 2 106 1 11 2 0 6 0 106 0 6 0 9 8 6 9 92 0 7 0 8 4 7 8 91 0 4 0 3 4 3 87 0 5 5 10 83 0 10 10 21 10 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 131 129 109 107 101 99 87 85 78 76 58 56 48 46 32 30 18 16 11 9 0 24 1 24 12 15
CALL[ ]	/* CallFunction */";
};
width = 613;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(444,886,qs),
(444,895,o),
(411,925,o),
(368,952,o),
(325,972,o),
(316,972,qs),
(307,972,o),
(266,952,o),
(222,925,o),
(189,895,o),
(189,886,qs),
(189,875,o),
(197,875,qs),
(202,875,o),
(227,885,o),
(261,901,o),
(299,919,o),
(316,928,q),
(333,919,o),
(371,901,o),
(405,885,o),
(431,875,o),
(436,875,qs),
(444,875,o)
);
},
{
closed = 1;
nodes = (
(151,21,o),
(213,-4,o),
(280,-16,o),
(312,-16,qs),
(345,-16,o),
(425,1,o),
(494,40,o),
(540,101,o),
(540,145,qs),
(540,187,o),
(475,251,o),
(384,301,o),
(289,337,o),
(259,351,qs),
(229,365,o),
(171,398,o),
(126,447,o),
(99,515,o),
(99,565,qs),
(99,611,o),
(133,698,o),
(192,766,o),
(273,807,o),
(320,807,qs),
(360,807,o),
(427,773,o),
(476,710,o),
(506,621,o),
(510,567,qs),
(510,545,o),
(517,508,o),
(531,508,qs),
(544,508,o),
(550,528,o),
(550,542,qs),
(550,574,o),
(548,620,o),
(548,652,qs),
(548,688,o),
(552,763,o),
(552,798,qs),
(552,805,o),
(542,821,o),
(532,821,qs),
(513,821,o),
(513,796,qs),
(513,795,o),
(517,734,o),
(521,671,q),
(491,758,o),
(389,837,o),
(316,837,qs),
(271,837,o),
(179,797,o),
(105,726,o),
(58,630,o),
(58,574,qs),
(58,511,o),
(93,426,o),
(149,367,o),
(215,329,o),
(247,314,qs),
(283,297,o),
(370,263,o),
(447,224,o),
(499,176,o),
(499,145,qs),
(499,114,o),
(466,65,o),
(413,32,o),
(345,14,o),
(309,14,qs),
(256,14,o),
(175,43,o),
(120,89,o),
(91,149,o),
(91,180,qs),
(91,202,o),
(83,239,o),
(69,239,qs),
(56,239,o),
(50,219,o),
(50,205,qs),
(50,189,o),
(51,167,o),
(51,146,o),
(52,124,o),
(52,108,qs),
(52,97,o),
(51,67,o),
(49,37,o),
(48,13,o),
(48,7,qs),
(48,0,o),
(58,-16,o),
(68,-16,qs),
(87,-16,o),
(87,9,q),
(86,15,o),
(86,22,qs),
(86,28,o),
(85,42,o),
(85,50,qs),
(84,68,o),
(84,91,q),
(100,62,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
5 1 0 2 100 80 2 8 9 24 1 5 4 31 1 3 5 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 2 0 6 2 94 1 11 2 0 6 0 106 0 9 9 6 83 0 6 6 20 67 0 8 8 7 83 0 7 7 12 67 0 4 4 3 83 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 2 0 2 106 1 11 2 0 6 0 106 0 9 9 6 83 0 6 6 20 67 0 8 8 7 83 0 7 7 12 67 0 4 4 3 83 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 2 0 2 106 1 11 2 0 6 0 106 0 6 0 9 8 6 9 92 0 8 8 7 83 0 7 7 14 67 0 4 4 3 83 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 126 124 106 104 98 96 86 84 78 76 58 56 50 48 34 32 18 16 11 9 0 23 1 23 12 15
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = Scircumflex;
unicode = 348;
},
{
glyphname = T;
kernLeft = T;
kernRight = T;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(275,699,o),
(276,613,o),
(278,525,o),
(279,439,o),
(279,401,qs),
(279,362,o),
(278,292,o),
(276,224,o),
(275,157,o),
(275,120,qs),
(275,104,o),
(264,85,o),
(246,75,o),
(222,71,o),
(209,70,qs),
(163,66,o),
(163,26,qs),
(163,9,o),
(191,0,o),
(205,0,qs),
(465,0,ls),
(478,0,o),
(492,21,o),
(492,32,qs),
(492,43,o),
(483,57,o),
(470,64,o),
(456,67,o),
(450,67,qs),
(371,67,l),
(371,737,l),
(515,737,ls),
(541,737,o),
(552,718,o),
(552,688,qs),
(552,614,ls),
(552,582,o),
(572,559,o),
(600,559,qs),
(614,559,o),
(640,573,o),
(640,603,qs),
(640,611,o),
(640,635,o),
(639,660,o),
(639,685,o),
(639,693,qs),
(639,709,o),
(640,761,o),
(640,778,qs),
(640,807,o),
(626,821,o),
(602,821,qs),
(528,821,o),
(400,819,o),
(326,819,qs),
(289,819,o),
(222,820,o),
(155,820,o),
(88,821,o),
(51,821,qs),
(28,821,o),
(13,807,o),
(13,778,qs),
(13,761,o),
(14,709,o),
(14,693,qs),
(14,685,o),
(14,660,o),
(13,635,o),
(13,611,o),
(13,603,qs),
(13,574,o),
(42,559,o),
(56,559,qs),
(77,559,o),
(101,582,o),
(101,614,qs),
(101,688,ls),
(101,717,o),
(112,737,o),
(138,737,qs),
(275,737,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
3 1 1 0 5 0 1 5 104 4 7 2 0 0 2 83 0 2 2 12 67 0 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
3 1 1 0 5 0 1 5 104 4 7 2 0 0 2 83 0 2 2 14 67 0 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
1 0 63 60 54 52 51 49 44 42 30 20 8 6 0 82 1 82 8 15
CALL[ ]	/* CallFunction */";
};
width = 653;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(276,715,o),
(277,624,o),
(279,532,o),
(280,441,o),
(280,401,qs),
(280,319,o),
(276,171,o),
(276,94,qs),
(276,77,o),
(261,58,o),
(239,49,o),
(216,48,o),
(208,48,qs),
(199,48,o),
(179,40,o),
(179,23,qs),
(179,7,o),
(206,0,o),
(220,0,qs),
(452,0,ls),
(462,0,o),
(472,15,o),
(472,24,qs),
(472,41,o),
(453,51,o),
(442,51,qs),
(351,51,l),
(351,755,l),
(516,755,ls),
(542,755,o),
(553,735,o),
(553,706,qs),
(553,610,ls),
(553,578,o),
(564,555,o),
(587,555,qs),
(601,555,o),
(620,569,o),
(620,599,qs),
(620,607,o),
(620,632,o),
(619,659,o),
(619,685,o),
(619,693,qs),
(619,709,o),
(620,761,o),
(620,778,qs),
(620,807,o),
(606,821,o),
(582,821,qs),
(511,821,o),
(388,819,o),
(317,819,qs),
(246,819,o),
(123,821,o),
(52,821,qs),
(29,821,o),
(14,807,o),
(14,778,qs),
(14,761,o),
(15,709,o),
(15,693,qs),
(15,685,o),
(15,659,o),
(14,632,o),
(14,607,o),
(14,599,qs),
(14,569,o),
(34,555,o),
(47,555,qs),
(66,555,o),
(81,578,o),
(81,610,qs),
(81,706,ls),
(81,735,o),
(92,755,o),
(118,755,qs),
(276,755,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
3 1 1 0 5 0 1 5 104 4 8 2 0 0 2 83 0 2 2 12 67 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
3 1 1 0 5 0 1 5 104 4 8 2 0 0 2 83 0 2 2 14 67 7 1 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
1 0 66 63 59 56 52 50 49 47 42 40 28 20 8 6 0 77 1 77 9 15
CALL[ ]	/* CallFunction */";
};
width = 635;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(278,741,o),
(279,643,o),
(281,543,o),
(282,444,o),
(282,401,qs),
(282,313,o),
(278,156,o),
(278,74,qs),
(278,57,o),
(263,38,o),
(240,29,o),
(215,28,o),
(205,28,qs),
(196,28,o),
(176,22,o),
(176,13,qs),
(176,5,o),
(203,0,o),
(217,0,qs),
(429,0,ls),
(449,0,o),
(449,13,qs),
(449,21,o),
(430,31,o),
(419,31,qs),
(323,31,l),
(323,785,l),
(518,785,ls),
(544,785,o),
(555,765,o),
(555,736,qs),
(555,620,ls),
(555,588,o),
(561,565,o),
(574,565,qs),
(582,565,o),
(592,579,o),
(592,609,qs),
(592,625,o),
(591,676,o),
(591,693,qs),
(591,709,o),
(592,761,o),
(592,778,qs),
(592,807,o),
(578,821,o),
(554,821,qs),
(520,821,o),
(459,820,o),
(399,820,o),
(338,819,o),
(304,819,qs),
(270,819,o),
(209,820,o),
(149,820,o),
(88,821,o),
(54,821,qs),
(30,821,o),
(16,807,o),
(16,778,qs),
(16,761,o),
(17,709,o),
(17,693,qs),
(17,676,o),
(16,625,o),
(16,609,qs),
(16,579,o),
(26,565,o),
(34,565,qs),
(47,565,o),
(53,588,o),
(53,620,qs),
(53,736,ls),
(53,765,o),
(64,785,o),
(90,785,qs),
(278,785,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
3 1 1 0 5 0 1 5 104 4 8 2 0 0 2 83 0 2 2 12 67 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
3 1 1 0 5 0 1 5 104 4 8 2 0 0 2 83 0 2 2 14 67 7 1 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
1 0 65 62 58 55 52 50 49 47 42 40 30 18 8 6 0 76 1 76 9 15
CALL[ ]	/* CallFunction */";
};
width = 609;
}
);
note = T;
unicode = 84;
},
{
glyphname = Tbar;
kernLeft = T;
kernRight = T;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(275,678,o),
(277,542,o),
(278,477,q),
(253,478,o),
(205,479,o),
(196,479,qs),
(179,479,o),
(163,449,o),
(163,436,qs),
(163,423,o),
(182,393,o),
(196,393,qs),
(279,393,l),
(279,355,o),
(278,287,o),
(276,221,o),
(275,156,o),
(275,120,qs),
(275,104,o),
(264,85,o),
(246,75,o),
(222,71,o),
(209,70,qs),
(163,66,o),
(163,26,qs),
(163,9,o),
(191,0,o),
(205,0,qs),
(465,0,ls),
(478,0,o),
(492,21,o),
(492,32,qs),
(492,43,o),
(483,57,o),
(470,64,o),
(456,67,o),
(450,67,qs),
(371,67,l),
(371,394,l),
(457,394,ls),
(468,394,o),
(482,405,o),
(490,419,o),
(493,434,o),
(493,439,qs),
(493,452,o),
(476,480,o),
(465,480,qs),
(448,480,o),
(399,478,o),
(371,477,q),
(371,737,l),
(515,737,ls),
(541,737,o),
(552,718,o),
(552,688,qs),
(552,614,ls),
(552,582,o),
(572,559,o),
(600,559,qs),
(614,559,o),
(640,573,o),
(640,603,qs),
(640,611,o),
(640,635,o),
(639,660,o),
(639,685,o),
(639,693,qs),
(639,709,o),
(640,761,o),
(640,778,qs),
(640,807,o),
(626,821,o),
(602,821,qs),
(528,821,o),
(400,819,o),
(326,819,qs),
(289,819,o),
(222,820,o),
(155,820,o),
(88,821,o),
(51,821,qs),
(28,821,o),
(13,807,o),
(13,778,qs),
(13,761,o),
(14,709,o),
(14,693,qs),
(14,685,o),
(14,660,o),
(13,635,o),
(13,611,o),
(13,603,qs),
(13,574,o),
(42,559,o),
(56,559,qs),
(77,559,o),
(101,582,o),
(101,614,qs),
(101,688,ls),
(101,717,o),
(112,737,o),
(138,737,qs),
(275,737,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
3 1 1 0 5 0 1 5 104 4 11 2 0 0 2 83 0 2 2 12 67 9 1 6 6 5 83 10 1 5 5 23 67 0 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
3 1 1 0 5 0 1 5 104 10 1 5 9 1 6 7 5 6 91 4 11 2 0 0 2 83 0 2 2 12 67 0 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
3 1 1 0 5 0 1 5 104 10 1 5 9 1 6 7 5 6 91 4 11 2 0 0 2 83 0 2 2 14 67 0 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 100 96 92 90 76 73 67 65 64 62 56 52 51 49 44 42 30 20 8 6 0 103 1 103 12 15
CALL[ ]	/* CallFunction */";
};
width = 653;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(360,468,o),
(318,468,qs),
(305,468,o),
(266,469,o),
(227,469,o),
(194,470,o),
(187,470,qs),
(173,470,o),
(161,446,o),
(161,436,qs),
(161,426,o),
(176,402,o),
(187,402,qs),
(205,402,o),
(276,402,o),
(355,403,o),
(428,403,o),
(448,403,qs),
(457,403,o),
(468,411,o),
(474,423,o),
(477,435,o),
(477,439,qs),
(477,449,o),
(464,471,o),
(456,471,qs),
(432,471,o)
);
},
{
closed = 1;
nodes = (
(276,715,o),
(277,624,o),
(279,532,o),
(280,441,o),
(280,401,qs),
(280,319,o),
(276,171,o),
(276,94,qs),
(276,77,o),
(261,58,o),
(239,49,o),
(216,48,o),
(208,48,qs),
(199,48,o),
(179,40,o),
(179,23,qs),
(179,7,o),
(206,0,o),
(220,0,qs),
(452,0,ls),
(462,0,o),
(472,15,o),
(472,24,qs),
(472,41,o),
(453,51,o),
(442,51,qs),
(351,51,l),
(351,755,l),
(516,755,ls),
(542,755,o),
(553,735,o),
(553,706,qs),
(553,610,ls),
(553,578,o),
(564,555,o),
(587,555,qs),
(601,555,o),
(620,569,o),
(620,599,qs),
(620,607,o),
(620,632,o),
(619,659,o),
(619,685,o),
(619,693,qs),
(619,709,o),
(620,761,o),
(620,778,qs),
(620,807,o),
(606,821,o),
(582,821,qs),
(511,821,o),
(388,819,o),
(317,819,qs),
(246,819,o),
(123,821,o),
(52,821,qs),
(29,821,o),
(14,807,o),
(14,778,qs),
(14,761,o),
(15,709,o),
(15,693,qs),
(15,685,o),
(15,659,o),
(14,632,o),
(14,607,o),
(14,599,qs),
(14,569,o),
(34,555,o),
(47,555,qs),
(66,555,o),
(81,578,o),
(81,610,qs),
(81,706,ls),
(81,735,o),
(92,755,o),
(118,755,qs),
(276,755,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
5 1 3 2 0 2 3 0 104 6 11 2 2 2 4 83 0 4 4 12 67 0 1 1 0 83 10 1 0 0 23 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
5 1 3 2 0 2 3 0 104 10 1 0 0 1 7 0 1 91 6 11 2 2 2 4 83 0 4 4 12 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
5 1 3 2 0 2 3 0 104 10 1 0 0 1 7 0 1 91 6 11 2 2 2 4 83 0 4 4 14 67 9 1 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
28 27 1 0 93 90 86 83 79 77 76 74 69 67 55 47 35 33 27 104 28 104 14 7 0 26 1 18 12 15
CALL[ ]	/* CallFunction */";
};
width = 635;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(278,747,o),
(279,664,o),
(280,579,o),
(282,493,o),
(282,453,q),
(268,453,o),
(235,454,o),
(204,454,o),
(180,455,o),
(174,455,qs),
(166,455,o),
(158,441,o),
(158,436,qs),
(158,431,o),
(167,417,o),
(174,417,qs),
(282,417,l),
(282,401,ls),
(282,313,o),
(278,156,o),
(278,74,qs),
(278,57,o),
(263,38,o),
(240,29,o),
(215,28,o),
(205,28,qs),
(196,28,o),
(176,22,o),
(176,13,qs),
(176,5,o),
(203,0,o),
(217,0,qs),
(429,0,ls),
(449,0,o),
(449,13,qs),
(449,21,o),
(430,31,o),
(419,31,qs),
(323,31,l),
(323,417,l),
(357,417,o),
(418,418,o),
(435,418,qs),
(446,418,o),
(454,434,o),
(454,439,qs),
(454,444,o),
(447,456,o),
(443,456,qs),
(421,456,o),
(359,453,o),
(323,453,q),
(323,785,l),
(518,785,ls),
(544,785,o),
(555,765,o),
(555,736,qs),
(555,620,ls),
(555,588,o),
(561,565,o),
(574,565,qs),
(582,565,o),
(592,579,o),
(592,609,qs),
(592,625,o),
(591,676,o),
(591,693,qs),
(591,709,o),
(592,761,o),
(592,778,qs),
(592,807,o),
(578,821,o),
(554,821,qs),
(520,821,o),
(459,820,o),
(399,820,o),
(338,819,o),
(304,819,qs),
(270,819,o),
(209,820,o),
(149,820,o),
(88,821,o),
(54,821,qs),
(30,821,o),
(16,807,o),
(16,778,qs),
(16,761,o),
(17,709,o),
(17,693,qs),
(17,676,o),
(16,625,o),
(16,609,qs),
(16,579,o),
(26,565,o),
(34,565,qs),
(47,565,o),
(53,588,o),
(53,620,qs),
(53,736,ls),
(53,765,o),
(64,785,o),
(90,785,qs),
(278,785,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
3 1 1 0 5 0 1 5 104 4 12 2 0 0 2 83 0 2 2 12 67 10 1 6 6 5 83 11 1 5 5 15 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
3 1 1 0 5 0 1 5 104 11 1 5 10 1 6 7 5 6 91 4 12 2 0 0 2 83 0 2 2 12 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
3 1 1 0 5 0 1 5 104 11 1 5 10 1 6 7 5 6 91 4 12 2 0 0 2 83 0 2 2 14 67 9 1 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 97 91 87 85 78 75 71 68 65 63 62 58 54 50 49 47 42 40 30 18 8 6 0 102 1 102 13 15
CALL[ ]	/* CallFunction */";
};
width = 609;
}
);
note = Tbar;
unicode = 358;
},
{
glyphname = Tcaron;
kernLeft = T;
kernRight = T;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(407,965,o),
(373,952,o),
(335,933,o),
(318,922,q),
(301,933,o),
(263,952,o),
(230,965,o),
(204,972,o),
(199,972,qs),
(192,972,o),
(186,963,o),
(186,958,qs),
(186,938,o),
(222,894,o),
(268,855,o),
(311,830,o),
(318,830,qs),
(327,830,o),
(370,856,o),
(416,893,o),
(451,935,o),
(451,951,qs),
(451,958,o),
(446,972,o),
(438,972,qs),
(433,972,o)
);
},
{
closed = 1;
nodes = (
(275,699,o),
(276,613,o),
(278,525,o),
(279,439,o),
(279,401,qs),
(279,362,o),
(278,292,o),
(276,224,o),
(275,157,o),
(275,120,qs),
(275,104,o),
(264,85,o),
(246,75,o),
(222,71,o),
(209,70,qs),
(163,66,o),
(163,26,qs),
(163,9,o),
(191,0,o),
(205,0,qs),
(465,0,ls),
(478,0,o),
(492,21,o),
(492,32,qs),
(492,43,o),
(483,57,o),
(470,64,o),
(456,67,o),
(450,67,qs),
(371,67,l),
(371,737,l),
(515,737,ls),
(541,737,o),
(552,718,o),
(552,688,qs),
(552,614,ls),
(552,582,o),
(572,559,o),
(600,559,qs),
(614,559,o),
(640,573,o),
(640,603,qs),
(640,611,o),
(640,635,o),
(639,660,o),
(639,685,o),
(639,693,qs),
(639,709,o),
(640,761,o),
(640,778,qs),
(640,807,o),
(626,821,o),
(602,821,qs),
(528,821,o),
(400,819,o),
(326,819,qs),
(289,819,o),
(222,820,o),
(155,820,o),
(88,821,o),
(51,821,qs),
(28,821,o),
(13,807,o),
(13,778,qs),
(13,761,o),
(14,709,o),
(14,693,qs),
(14,685,o),
(14,660,o),
(13,635,o),
(13,611,o),
(13,603,qs),
(13,574,o),
(42,559,o),
(56,559,qs),
(77,559,o),
(101,582,o),
(101,614,qs),
(101,688,ls),
(101,717,o),
(112,737,o),
(138,737,qs),
(275,737,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
2 10 2 0 1 0 106 0 1 5 1 106 6 1 4 3 8 3 4 8 104 7 11 2 3 3 5 83 0 5 5 12 67 0 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
2 10 2 0 1 0 106 0 1 5 1 106 6 1 4 3 8 3 4 8 104 7 11 2 3 3 5 83 0 5 5 14 67 0 8 8 9 83 0 9 9 13 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
27 26 1 0 89 86 80 78 77 75 70 68 56 46 34 32 26 108 27 108 17 15 9 7 0 25 1 25 12 15
CALL[ ]	/* CallFunction */";
};
width = 653;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(399,964,o),
(365,950,o),
(327,931,o),
(310,921,q),
(293,931,o),
(255,950,o),
(222,964,o),
(196,972,o),
(191,972,qs),
(180,972,o),
(180,959,qs),
(180,943,o),
(215,904,o),
(260,870,o),
(302,847,o),
(310,847,qs),
(319,847,o),
(362,871,o),
(407,904,o),
(441,941,o),
(441,955,qs),
(441,962,o),
(436,972,o),
(430,972,qs),
(425,972,o)
);
},
{
closed = 1;
nodes = (
(276,715,o),
(277,624,o),
(279,532,o),
(280,441,o),
(280,401,qs),
(280,319,o),
(276,171,o),
(276,94,qs),
(276,77,o),
(261,58,o),
(239,49,o),
(216,48,o),
(208,48,qs),
(199,48,o),
(179,40,o),
(179,23,qs),
(179,7,o),
(206,0,o),
(220,0,qs),
(452,0,ls),
(462,0,o),
(472,15,o),
(472,24,qs),
(472,41,o),
(453,51,o),
(442,51,qs),
(351,51,l),
(351,755,l),
(516,755,ls),
(542,755,o),
(553,735,o),
(553,706,qs),
(553,610,ls),
(553,578,o),
(564,555,o),
(587,555,qs),
(601,555,o),
(620,569,o),
(620,599,qs),
(620,607,o),
(620,632,o),
(619,659,o),
(619,685,o),
(619,693,qs),
(619,709,o),
(620,761,o),
(620,778,qs),
(620,807,o),
(606,821,o),
(582,821,qs),
(511,821,o),
(388,819,o),
(317,819,qs),
(246,819,o),
(123,821,o),
(52,821,qs),
(29,821,o),
(14,807,o),
(14,778,qs),
(14,761,o),
(15,709,o),
(15,693,qs),
(15,685,o),
(15,659,o),
(14,632,o),
(14,607,o),
(14,599,qs),
(14,569,o),
(34,555,o),
(47,555,qs),
(66,555,o),
(81,578,o),
(81,610,qs),
(81,706,ls),
(81,735,o),
(92,755,o),
(118,755,qs),
(276,755,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
2 11 2 0 1 0 106 0 1 5 1 106 6 1 4 3 8 3 4 8 104 7 12 2 3 3 5 83 0 5 5 12 67 10 1 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
2 11 2 0 1 0 106 0 1 5 1 106 6 1 4 3 8 3 4 8 104 7 12 2 3 3 5 83 0 5 5 14 67 10 1 8 8 9 83 0 9 9 13 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
26 25 1 0 91 88 84 81 77 75 74 72 67 65 53 45 33 31 25 102 26 102 16 14 9 7 0 24 1 24 13 15
CALL[ ]	/* CallFunction */";
};
width = 635;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(388,962,o),
(354,946,o),
(316,928,o),
(299,919,q),
(282,928,o),
(244,946,o),
(210,962,o),
(185,972,o),
(180,972,qs),
(172,972,o),
(172,961,qs),
(172,952,o),
(205,922,o),
(249,895,o),
(290,875,o),
(299,875,qs),
(308,875,o),
(351,895,o),
(394,922,o),
(427,952,o),
(427,961,qs),
(427,972,o),
(419,972,qs),
(414,972,o)
);
},
{
closed = 1;
nodes = (
(278,741,o),
(279,643,o),
(281,543,o),
(282,444,o),
(282,401,qs),
(282,313,o),
(278,156,o),
(278,74,qs),
(278,57,o),
(263,38,o),
(240,29,o),
(215,28,o),
(205,28,qs),
(196,28,o),
(176,22,o),
(176,13,qs),
(176,5,o),
(203,0,o),
(217,0,qs),
(429,0,ls),
(449,0,o),
(449,13,qs),
(449,21,o),
(430,31,o),
(419,31,qs),
(323,31,l),
(323,785,l),
(518,785,ls),
(544,785,o),
(555,765,o),
(555,736,qs),
(555,620,ls),
(555,588,o),
(561,565,o),
(574,565,qs),
(582,565,o),
(592,579,o),
(592,609,qs),
(592,625,o),
(591,676,o),
(591,693,qs),
(591,709,o),
(592,761,o),
(592,778,qs),
(592,807,o),
(578,821,o),
(554,821,qs),
(520,821,o),
(459,820,o),
(399,820,o),
(338,819,o),
(304,819,qs),
(270,819,o),
(209,820,o),
(149,820,o),
(88,821,o),
(54,821,qs),
(30,821,o),
(16,807,o),
(16,778,qs),
(16,761,o),
(17,709,o),
(17,693,qs),
(17,676,o),
(16,625,o),
(16,609,qs),
(16,579,o),
(26,565,o),
(34,565,qs),
(47,565,o),
(53,588,o),
(53,620,qs),
(53,736,ls),
(53,765,o),
(64,785,o),
(90,785,qs),
(278,785,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
19 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
2 11 2 0 1 0 106 0 1 5 1 106 6 1 4 3 8 3 4 8 104 7 12 2 3 3 5 83 0 5 5 12 67 10 1 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
2 11 2 0 1 0 106 0 1 5 1 106 6 1 4 3 8 3 4 8 104 7 12 2 3 3 5 83 0 5 5 14 67 10 1 8 8 9 83 0 9 9 13 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
25 24 1 0 89 86 82 79 76 74 73 71 66 64 54 42 32 30 24 100 25 100 15 13 8 6 0 23 1 23 13 15
CALL[ ]	/* CallFunction */";
};
width = 609;
}
);
note = Tcaron;
unicode = 356;
},
{
glyphname = U;
kernLeft = U;
kernRight = U;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(194,738,o),
(208,749,o),
(231,753,o),
(261,754,o),
(277,754,qs),
(297,754,o),
(314,773,o),
(314,790,qs),
(314,807,o),
(290,821,o),
(258,821,qs),
(39,821,ls),
(30,821,o),
(2,809,o),
(2,790,qs),
(2,769,o),
(26,759,o),
(39,759,qs),
(69,759,o),
(102,751,o),
(102,734,qs),
(102,666,o),
(104,534,o),
(104,467,qs),
(104,433,o),
(103,366,o),
(103,334,qs),
(103,307,o),
(104,248,o),
(108,192,o),
(116,143,o),
(123,125,qs),
(150,54,o),
(276,-14,o),
(393,-14,qs),
(452,-14,o),
(549,20,o),
(619,90,o),
(658,198,o),
(658,272,qs),
(658,327,o),
(656,437,o),
(656,492,qs),
(656,539,o),
(658,622,o),
(658,670,qs),
(658,689,o),
(697,700,o),
(732,700,qs),
(744,700,o),
(769,716,o),
(769,736,qs),
(769,753,o),
(750,767,o),
(718,767,qs),
(515,767,ls),
(493,767,o),
(468,751,o),
(468,736,qs),
(468,718,o),
(486,699,o),
(515,696,qs),
(545,693,o),
(567,680,o),
(567,663,qs),
(567,272,ls),
(567,234,o),
(549,161,o),
(509,102,o),
(442,66,o),
(394,66,qs),
(321,66,o),
(241,109,o),
(202,180,o),
(194,273,o),
(194,323,qs),
(194,729,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 0 2 0 1 2 91 6 1 4 4 5 83 0 5 5 12 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 4 1 6 6 4 96 0 1 0 2 0 1 2 91 0 6 6 5 84 0 5 5 12 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 4 1 6 6 4 96 0 1 0 2 0 1 2 91 0 6 6 5 84 0 5 5 14 67 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
52 52 47 44 36 61 36 7 22
CALL[ ]	/* CallFunction */";
};
width = 784;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(184,755,o),
(206,766,o),
(233,770,o),
(259,771,o),
(264,771,qs),
(276,771,o),
(301,782,o),
(301,796,qs),
(301,810,o),
(282,821,o),
(250,821,qs),
(53,821,ls),
(44,821,o),
(16,812,o),
(16,796,qs),
(16,778,o),
(42,771,o),
(53,771,qs),
(59,771,o),
(80,770,o),
(99,766,o),
(113,757,o),
(113,748,qs),
(113,677,o),
(115,537,o),
(115,467,qs),
(115,433,o),
(114,366,o),
(114,334,qs),
(114,279,o),
(119,176,o),
(134,125,qs),
(144,90,o),
(190,37,o),
(255,3,o),
(336,-14,o),
(382,-14,qs),
(441,-14,o),
(539,20,o),
(609,90,o),
(648,198,o),
(648,272,qs),
(648,327,o),
(646,437,o),
(646,492,qs),
(646,542,o),
(648,641,o),
(648,692,qs),
(648,701,o),
(669,712,o),
(696,716,o),
(723,717,o),
(728,717,qs),
(740,717,o),
(765,725,o),
(765,742,qs),
(765,756,o),
(746,767,o),
(714,767,qs),
(518,767,ls),
(481,767,o),
(481,742,qs),
(481,727,o),
(507,717,o),
(518,717,qs),
(525,717,o),
(545,716,o),
(564,712,o),
(578,703,o),
(578,694,qs),
(578,272,ls),
(578,231,o),
(558,151,o),
(512,87,o),
(437,48,o),
(383,48,qs),
(310,48,o),
(230,94,o),
(192,170,o),
(184,269,o),
(184,323,qs),
(184,746,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
78 75 71 68 64 61 45 52 51 56 36 8 20
CALL[ ]	/* CallFunction */";
};
width = 772;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(170,775,o),
(190,786,o),
(216,790,o),
(240,791,o),
(245,791,qs),
(257,791,o),
(282,795,o),
(282,806,qs),
(282,814,o),
(263,821,o),
(231,821,qs),
(49,821,ls),
(40,821,o),
(12,817,o),
(12,806,qs),
(12,796,o),
(38,791,o),
(49,791,qs),
(59,791,o),
(87,790,o),
(112,786,o),
(129,777,o),
(129,768,qs),
(129,692,o),
(131,542,o),
(131,467,qs),
(131,433,o),
(130,366,o),
(130,334,qs),
(130,279,o),
(137,176,o),
(150,125,qs),
(159,90,o),
(199,37,o),
(256,3,o),
(327,-14,o),
(367,-14,qs),
(426,-14,o),
(524,20,o),
(595,90,o),
(634,198,o),
(634,272,qs),
(634,327,o),
(632,437,o),
(632,492,qs),
(632,547,o),
(634,656,o),
(634,712,qs),
(634,721,o),
(652,732,o),
(676,736,o),
(699,737,o),
(704,737,qs),
(716,737,o),
(741,741,o),
(741,752,qs),
(741,760,o),
(722,767,o),
(690,767,qs),
(508,767,ls),
(499,767,o),
(471,763,o),
(471,752,qs),
(471,742,o),
(497,737,o),
(508,737,qs),
(518,737,o),
(548,736,o),
(575,732,o),
(594,723,o),
(594,714,qs),
(594,272,ls),
(594,225,o),
(570,134,o),
(517,62,o),
(431,18,o),
(368,18,qs),
(295,18,o),
(215,69,o),
(177,153,o),
(170,263,o),
(170,323,qs),
(170,766,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
79 76 72 69 65 62 45 52 52 56 36 8 20
CALL[ ]	/* CallFunction */";
};
width = 755;
}
);
note = U;
unicode = 85;
},
{
glyphname = Uacute;
kernLeft = U;
kernRight = U;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(465,972,o),
(445,972,qs),
(431,972,o),
(392,949,o),
(356,916,o),
(331,882,o),
(331,872,qs),
(331,860,o),
(351,841,o),
(366,841,qs),
(379,841,o),
(419,860,o),
(458,888,o),
(486,921,o),
(486,936,qs),
(486,949,o)
);
},
{
closed = 1;
nodes = (
(194,738,o),
(208,749,o),
(231,753,o),
(261,754,o),
(277,754,qs),
(297,754,o),
(314,773,o),
(314,790,qs),
(314,807,o),
(290,821,o),
(258,821,qs),
(39,821,ls),
(30,821,o),
(2,809,o),
(2,790,qs),
(2,769,o),
(26,759,o),
(39,759,qs),
(69,759,o),
(102,751,o),
(102,734,qs),
(102,666,o),
(104,534,o),
(104,467,qs),
(104,433,o),
(103,366,o),
(103,334,qs),
(103,307,o),
(104,248,o),
(108,192,o),
(116,143,o),
(123,125,qs),
(150,54,o),
(276,-14,o),
(393,-14,qs),
(452,-14,o),
(549,20,o),
(619,90,o),
(658,198,o),
(658,272,qs),
(658,327,o),
(656,437,o),
(656,492,qs),
(656,539,o),
(658,622,o),
(658,670,qs),
(658,689,o),
(697,700,o),
(732,700,qs),
(744,700,o),
(769,716,o),
(769,736,qs),
(769,753,o),
(750,767,o),
(718,767,qs),
(515,767,ls),
(493,767,o),
(468,751,o),
(468,736,qs),
(468,718,o),
(486,699,o),
(515,696,qs),
(545,693,o),
(567,680,o),
(567,663,qs),
(567,272,ls),
(567,234,o),
(549,161,o),
(509,102,o),
(442,66,o),
(394,66,qs),
(321,66,o),
(241,109,o),
(202,180,o),
(194,273,o),
(194,323,qs),
(194,729,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 1 0 1 106 0 0 7 0 106 0 3 0 4 2 3 4 91 8 1 6 6 7 83 0 7 7 12 67 0 2 2 5 84 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 1 106 0 0 7 0 106 0 6 3 8 8 6 96 0 3 0 4 2 3 4 91 0 8 8 7 84 0 7 7 12 67 0 2 2 5 84 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 1 106 0 0 7 0 106 0 6 3 8 8 6 96 0 3 0 4 2 3 4 91 0 8 8 7 84 0 7 7 14 67 0 2 2 5 84 0 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
52 52 47 44 36 61 38 38 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 784;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(449,972,o),
(434,972,qs),
(423,972,o),
(387,950,o),
(353,919,o),
(328,887,o),
(328,877,qs),
(328,867,o),
(341,854,o),
(352,854,qs),
(362,854,o),
(401,872,o),
(438,899,o),
(466,929,o),
(466,941,qs),
(466,955,o)
);
},
{
closed = 1;
nodes = (
(184,755,o),
(206,766,o),
(233,770,o),
(259,771,o),
(264,771,qs),
(276,771,o),
(301,782,o),
(301,796,qs),
(301,810,o),
(282,821,o),
(250,821,qs),
(53,821,ls),
(44,821,o),
(16,812,o),
(16,796,qs),
(16,778,o),
(42,771,o),
(53,771,qs),
(59,771,o),
(80,770,o),
(99,766,o),
(113,757,o),
(113,748,qs),
(113,677,o),
(115,537,o),
(115,467,qs),
(115,433,o),
(114,366,o),
(114,334,qs),
(114,279,o),
(119,176,o),
(134,125,qs),
(144,90,o),
(190,37,o),
(255,3,o),
(336,-14,o),
(382,-14,qs),
(441,-14,o),
(539,20,o),
(609,90,o),
(648,198,o),
(648,272,qs),
(648,327,o),
(646,437,o),
(646,492,qs),
(646,542,o),
(648,641,o),
(648,692,qs),
(648,701,o),
(669,712,o),
(696,716,o),
(723,717,o),
(728,717,qs),
(740,717,o),
(765,725,o),
(765,742,qs),
(765,756,o),
(746,767,o),
(714,767,qs),
(518,767,ls),
(481,767,o),
(481,742,qs),
(481,727,o),
(507,717,o),
(518,717,qs),
(525,717,o),
(545,716,o),
(564,712,o),
(578,703,o),
(578,694,qs),
(578,272,ls),
(578,231,o),
(558,151,o),
(512,87,o),
(437,48,o),
(383,48,qs),
(310,48,o),
(230,94,o),
(192,170,o),
(184,269,o),
(184,323,qs),
(184,746,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 8 0 106 0 4 5 1 3 2 4 3 91 9 1 7 7 8 83 0 8 8 12 67 0 2 2 6 84 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 8 0 106 0 4 5 1 3 2 4 3 91 9 1 7 7 8 83 0 8 8 14 67 0 2 2 6 84 0 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
94 91 87 84 80 77 45 52 51 56 38 38 36 10 22
CALL[ ]	/* CallFunction */";
};
width = 772;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(427,972,o),
(419,972,qs),
(412,972,o),
(380,952,o),
(348,925,o),
(324,895,o),
(324,886,qs),
(324,875,o),
(332,875,qs),
(339,875,o),
(374,893,o),
(410,917,o),
(438,942,o),
(438,950,qs),
(438,964,o)
);
},
{
closed = 1;
nodes = (
(170,775,o),
(190,786,o),
(216,790,o),
(240,791,o),
(245,791,qs),
(257,791,o),
(282,795,o),
(282,806,qs),
(282,814,o),
(263,821,o),
(231,821,qs),
(49,821,ls),
(40,821,o),
(12,817,o),
(12,806,qs),
(12,796,o),
(38,791,o),
(49,791,qs),
(59,791,o),
(87,790,o),
(112,786,o),
(129,777,o),
(129,768,qs),
(129,692,o),
(131,542,o),
(131,467,qs),
(131,433,o),
(130,366,o),
(130,334,qs),
(130,279,o),
(137,176,o),
(150,125,qs),
(159,90,o),
(199,37,o),
(256,3,o),
(327,-14,o),
(367,-14,qs),
(426,-14,o),
(524,20,o),
(595,90,o),
(634,198,o),
(634,272,qs),
(634,327,o),
(632,437,o),
(632,492,qs),
(632,547,o),
(634,656,o),
(634,712,qs),
(634,721,o),
(652,732,o),
(676,736,o),
(699,737,o),
(704,737,qs),
(716,737,o),
(741,741,o),
(741,752,qs),
(741,760,o),
(722,767,o),
(690,767,qs),
(508,767,ls),
(499,767,o),
(471,763,o),
(471,752,qs),
(471,742,o),
(497,737,o),
(508,737,qs),
(518,737,o),
(548,736,o),
(575,732,o),
(594,723,o),
(594,714,qs),
(594,272,ls),
(594,225,o),
(570,134,o),
(517,62,o),
(431,18,o),
(368,18,qs),
(295,18,o),
(215,69,o),
(177,153,o),
(170,263,o),
(170,323,qs),
(170,766,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 8 0 106 0 4 5 1 3 2 4 3 91 9 1 7 7 8 83 0 8 8 12 67 0 2 2 6 84 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 8 0 106 0 4 5 1 3 2 4 3 91 9 1 7 7 8 83 0 8 8 14 67 0 2 2 6 84 0 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
94 91 87 84 80 77 45 52 52 56 38 37 36 10 22
CALL[ ]	/* CallFunction */";
};
width = 755;
}
);
note = Uacute;
unicode = 218;
},
{
glyphname = Ubreve;
kernLeft = U;
kernRight = U;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(194,738,o),
(208,749,o),
(231,753,o),
(261,754,o),
(277,754,qs),
(297,754,o),
(314,773,o),
(314,790,qs),
(314,807,o),
(290,821,o),
(258,821,qs),
(39,821,ls),
(30,821,o),
(2,809,o),
(2,790,qs),
(2,769,o),
(26,759,o),
(39,759,qs),
(69,759,o),
(102,751,o),
(102,734,qs),
(102,666,o),
(104,534,o),
(104,467,qs),
(104,433,o),
(103,366,o),
(103,334,qs),
(103,307,o),
(104,248,o),
(108,192,o),
(116,143,o),
(123,125,qs),
(150,54,o),
(276,-14,o),
(393,-14,qs),
(452,-14,o),
(549,20,o),
(619,90,o),
(658,198,o),
(658,272,qs),
(658,327,o),
(656,437,o),
(656,492,qs),
(656,539,o),
(658,622,o),
(658,670,qs),
(658,689,o),
(697,700,o),
(732,700,qs),
(744,700,o),
(769,716,o),
(769,736,qs),
(769,753,o),
(750,767,o),
(718,767,qs),
(515,767,ls),
(493,767,o),
(468,751,o),
(468,736,qs),
(468,718,o),
(486,699,o),
(515,696,qs),
(545,693,o),
(567,680,o),
(567,663,qs),
(567,272,ls),
(567,234,o),
(549,161,o),
(509,102,o),
(442,66,o),
(394,66,qs),
(321,66,o),
(241,109,o),
(202,180,o),
(194,273,o),
(194,323,qs),
(194,729,ls)
);
},
{
closed = 1;
nodes = (
(513,971,o),
(498,971,qs),
(485,971,o),
(466,953,o),
(466,942,qs),
(466,934,o),
(439,919,o),
(410,919,qs),
(401,919,o),
(380,921,o),
(362,927,o),
(351,936,o),
(351,942,qs),
(351,959,o),
(332,971,o),
(315,971,qs),
(298,971,o),
(283,954,o),
(283,941,qs),
(283,909,o),
(350,862,o),
(415,862,qs),
(434,862,o),
(477,872,o),
(513,892,o),
(536,921,o),
(536,941,qs),
(536,961,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
10 1 8 9 8 106 0 9 0 7 5 9 7 91 0 1 0 2 0 1 2 91 6 1 4 4 5 83 0 5 5 12 67 0 0 0 3 84 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
10 1 8 9 8 106 0 4 1 6 6 4 96 0 9 0 7 5 9 7 91 0 1 0 2 0 1 2 91 0 6 6 5 84 0 5 5 12 67 0 0 0 3 84 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
10 1 8 9 8 106 0 4 1 6 6 4 96 0 9 0 7 5 9 7 91 0 1 0 2 0 1 2 91 0 6 6 5 84 0 5 5 14 67 0 0 0 3 84 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
103 101 97 95 36 40 52 52 47 44 36 61 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 784;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (16,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (285,355);
ref = breve;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
11 1 9 10 9 106 0 10 0 8 6 10 8 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
11 1 9 10 9 106 0 10 0 8 6 10 8 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
108 106 102 100 94 92 89 87 79 76 72 69 65 62 45 52 51 56 37 12 31
CALL[ ]	/* CallFunction */";
};
width = 772;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(484,972,o),
(476,972,qs),
(459,972,o),
(459,949,qs),
(459,939,o),
(446,921,o),
(424,908,o),
(397,900,o),
(384,900,qs),
(370,900,o),
(343,904,o),
(322,914,o),
(310,934,o),
(310,949,qs),
(310,961,o),
(304,972,o),
(293,972,qs),
(276,972,o),
(276,948,qs),
(276,918,o),
(339,875,o),
(384,875,qs),
(403,875,o),
(443,884,o),
(475,902,o),
(495,930,o),
(495,948,qs),
(495,964,o)
);
},
{
closed = 1;
nodes = (
(170,775,o),
(190,786,o),
(216,790,o),
(240,791,o),
(245,791,qs),
(257,791,o),
(282,795,o),
(282,806,qs),
(282,814,o),
(263,821,o),
(231,821,qs),
(49,821,ls),
(40,821,o),
(12,817,o),
(12,806,qs),
(12,796,o),
(38,791,o),
(49,791,qs),
(59,791,o),
(87,790,o),
(112,786,o),
(129,777,o),
(129,768,qs),
(129,692,o),
(131,542,o),
(131,467,qs),
(131,433,o),
(130,366,o),
(130,334,qs),
(130,279,o),
(137,176,o),
(150,125,qs),
(159,90,o),
(199,37,o),
(256,3,o),
(327,-14,o),
(367,-14,qs),
(426,-14,o),
(524,20,o),
(595,90,o),
(634,198,o),
(634,272,qs),
(634,327,o),
(632,437,o),
(632,492,qs),
(632,547,o),
(634,656,o),
(634,712,qs),
(634,721,o),
(652,732,o),
(676,736,o),
(699,737,o),
(704,737,qs),
(716,737,o),
(741,741,o),
(741,752,qs),
(741,760,o),
(722,767,o),
(690,767,qs),
(508,767,ls),
(499,767,o),
(471,763,o),
(471,752,qs),
(471,742,o),
(497,737,o),
(508,737,qs),
(518,737,o),
(548,736,o),
(575,732,o),
(594,723,o),
(594,714,qs),
(594,272,ls),
(594,225,o),
(570,134,o),
(517,62,o),
(431,18,o),
(368,18,qs),
(295,18,o),
(215,69,o),
(177,153,o),
(170,263,o),
(170,323,qs),
(170,766,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
3 1 1 2 1 106 0 2 0 0 10 2 0 91 0 6 7 1 5 4 6 5 91 11 1 9 9 10 83 0 10 10 12 67 0 4 4 8 83 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
3 1 1 2 1 106 0 2 0 0 10 2 0 91 0 6 7 1 5 4 6 5 91 11 1 9 9 10 83 0 10 10 14 67 0 4 4 8 83 0 8 8 21 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
107 104 100 97 93 90 45 52 52 56 38 37 38 35 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 755;
}
);
note = Ubreve;
unicode = 364;
},
{
glyphname = Ucircumflex;
kernLeft = U;
kernRight = U;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(533,844,o),
(533,851,qs),
(533,867,o),
(498,908,o),
(452,946,o),
(409,972,o),
(400,972,qs),
(393,972,o),
(350,947,o),
(304,909,o),
(268,864,o),
(268,844,qs),
(268,839,o),
(274,830,o),
(281,830,qs),
(286,830,o),
(312,837,o),
(345,851,o),
(383,869,o),
(400,880,q),
(417,869,o),
(455,851,o),
(489,837,o),
(515,830,o),
(520,830,qs),
(528,830,o)
);
},
{
closed = 1;
nodes = (
(194,738,o),
(208,749,o),
(231,753,o),
(261,754,o),
(277,754,qs),
(297,754,o),
(314,773,o),
(314,790,qs),
(314,807,o),
(290,821,o),
(258,821,qs),
(39,821,ls),
(30,821,o),
(2,809,o),
(2,790,qs),
(2,769,o),
(26,759,o),
(39,759,qs),
(69,759,o),
(102,751,o),
(102,734,qs),
(102,666,o),
(104,534,o),
(104,467,qs),
(104,433,o),
(103,366,o),
(103,334,qs),
(103,307,o),
(104,248,o),
(108,192,o),
(116,143,o),
(123,125,qs),
(150,54,o),
(276,-14,o),
(393,-14,qs),
(452,-14,o),
(549,20,o),
(619,90,o),
(658,198,o),
(658,272,qs),
(658,327,o),
(656,437,o),
(656,492,qs),
(656,539,o),
(658,622,o),
(658,670,qs),
(658,689,o),
(697,700,o),
(732,700,qs),
(744,700,o),
(769,716,o),
(769,736,qs),
(769,753,o),
(750,767,o),
(718,767,qs),
(515,767,ls),
(493,767,o),
(468,751,o),
(468,736,qs),
(468,718,o),
(486,699,o),
(515,696,qs),
(545,693,o),
(567,680,o),
(567,663,qs),
(567,272,ls),
(567,234,o),
(549,161,o),
(509,102,o),
(442,66,o),
(394,66,qs),
(321,66,o),
(241,109,o),
(202,180,o),
(194,273,o),
(194,323,qs),
(194,729,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 0 2 106 1 10 2 0 8 0 106 0 4 0 5 3 4 5 91 9 1 7 7 8 83 0 8 8 12 67 0 3 3 6 84 0 6 6 21 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 2 0 2 106 1 10 2 0 8 0 106 0 7 4 9 9 7 96 0 4 0 5 3 4 5 91 0 9 9 8 84 0 8 8 12 67 0 3 3 6 84 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 2 0 2 106 1 10 2 0 8 0 106 0 7 4 9 9 7 96 0 4 0 5 3 4 5 91 0 9 9 8 84 0 8 8 14 67 0 3 3 6 84 0 6 6 21 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 99 96 92 89 85 83 68 66 54 52 48 45 32 30 19 17 11 9 0 25 1 25 11 15
CALL[ ]	/* CallFunction */";
};
width = 784;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(523,857,o),
(523,864,qs),
(523,877,o),
(489,915,o),
(444,948,o),
(401,972,o),
(392,972,qs),
(384,972,o),
(342,949,o),
(297,915,o),
(262,876,o),
(262,860,qs),
(262,847,o),
(273,847,qs),
(278,847,o),
(304,855,o),
(337,869,o),
(375,888,o),
(392,898,q),
(409,888,o),
(447,869,o),
(481,855,o),
(507,847,o),
(512,847,qs),
(518,847,o)
);
},
{
closed = 1;
nodes = (
(184,755,o),
(206,766,o),
(233,770,o),
(259,771,o),
(264,771,qs),
(276,771,o),
(301,782,o),
(301,796,qs),
(301,810,o),
(282,821,o),
(250,821,qs),
(53,821,ls),
(44,821,o),
(16,812,o),
(16,796,qs),
(16,778,o),
(42,771,o),
(53,771,qs),
(59,771,o),
(80,770,o),
(99,766,o),
(113,757,o),
(113,748,qs),
(113,677,o),
(115,537,o),
(115,467,qs),
(115,433,o),
(114,366,o),
(114,334,qs),
(114,279,o),
(119,176,o),
(134,125,qs),
(144,90,o),
(190,37,o),
(255,3,o),
(336,-14,o),
(382,-14,qs),
(441,-14,o),
(539,20,o),
(609,90,o),
(648,198,o),
(648,272,qs),
(648,327,o),
(646,437,o),
(646,492,qs),
(646,542,o),
(648,641,o),
(648,692,qs),
(648,701,o),
(669,712,o),
(696,716,o),
(723,717,o),
(728,717,qs),
(740,717,o),
(765,725,o),
(765,742,qs),
(765,756,o),
(746,767,o),
(714,767,qs),
(518,767,ls),
(481,767,o),
(481,742,qs),
(481,727,o),
(507,717,o),
(518,717,qs),
(525,717,o),
(545,716,o),
(564,712,o),
(578,703,o),
(578,694,qs),
(578,272,ls),
(578,231,o),
(558,151,o),
(512,87,o),
(437,48,o),
(383,48,qs),
(310,48,o),
(230,94,o),
(192,170,o),
(184,269,o),
(184,323,qs),
(184,746,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 2 0 2 106 1 11 2 0 9 0 106 0 5 6 1 4 3 5 4 91 10 1 8 8 9 83 0 9 9 12 67 0 3 3 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 2 0 2 106 1 11 2 0 9 0 106 0 5 6 1 4 3 5 4 91 10 1 8 8 9 83 0 9 9 14 67 0 3 3 7 84 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 103 100 96 93 89 86 70 68 55 52 48 45 42 39 31 29 18 16 11 9 0 24 1 24 12 15
CALL[ ]	/* CallFunction */";
};
width = 772;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(509,886,qs),
(509,895,o),
(476,925,o),
(433,952,o),
(390,972,o),
(381,972,qs),
(372,972,o),
(331,952,o),
(287,925,o),
(254,895,o),
(254,886,qs),
(254,875,o),
(262,875,qs),
(267,875,o),
(292,885,o),
(326,901,o),
(364,919,o),
(381,928,q),
(398,919,o),
(436,901,o),
(470,885,o),
(496,875,o),
(501,875,qs),
(509,875,o)
);
},
{
closed = 1;
nodes = (
(170,775,o),
(190,786,o),
(216,790,o),
(240,791,o),
(245,791,qs),
(257,791,o),
(282,795,o),
(282,806,qs),
(282,814,o),
(263,821,o),
(231,821,qs),
(49,821,ls),
(40,821,o),
(12,817,o),
(12,806,qs),
(12,796,o),
(38,791,o),
(49,791,qs),
(59,791,o),
(87,790,o),
(112,786,o),
(129,777,o),
(129,768,qs),
(129,692,o),
(131,542,o),
(131,467,qs),
(131,433,o),
(130,366,o),
(130,334,qs),
(130,279,o),
(137,176,o),
(150,125,qs),
(159,90,o),
(199,37,o),
(256,3,o),
(327,-14,o),
(367,-14,qs),
(426,-14,o),
(524,20,o),
(595,90,o),
(634,198,o),
(634,272,qs),
(634,327,o),
(632,437,o),
(632,492,qs),
(632,547,o),
(634,656,o),
(634,712,qs),
(634,721,o),
(652,732,o),
(676,736,o),
(699,737,o),
(704,737,qs),
(716,737,o),
(741,741,o),
(741,752,qs),
(741,760,o),
(722,767,o),
(690,767,qs),
(508,767,ls),
(499,767,o),
(471,763,o),
(471,752,qs),
(471,742,o),
(497,737,o),
(508,737,qs),
(518,737,o),
(548,736,o),
(575,732,o),
(594,723,o),
(594,714,qs),
(594,272,ls),
(594,225,o),
(570,134,o),
(517,62,o),
(431,18,o),
(368,18,qs),
(295,18,o),
(215,69,o),
(177,153,o),
(170,263,o),
(170,323,qs),
(170,766,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 2 0 2 106 1 11 2 0 9 0 106 0 5 6 1 4 3 5 4 91 10 1 8 8 9 83 0 9 9 12 67 0 3 3 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 2 0 2 106 1 11 2 0 9 0 106 0 5 6 1 4 3 5 4 91 10 1 8 8 9 83 0 9 9 14 67 0 3 3 7 84 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 103 100 96 93 89 86 70 68 55 52 48 45 41 38 30 28 18 16 11 9 0 23 1 23 12 15
CALL[ ]	/* CallFunction */";
};
width = 755;
}
);
note = Ucircumflex;
unicode = 219;
},
{
glyphname = Udieresis;
kernLeft = U;
kernRight = U;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(274,841,o),
(298,841,qs),
(309,841,o),
(333,847,o),
(352,863,o),
(365,890,o),
(365,911,qs),
(365,938,o),
(329,972,o),
(305,972,qs),
(287,972,o),
(262,958,o),
(246,938,o),
(239,915,o),
(239,907,qs),
(239,878,o)
);
},
{
closed = 1;
nodes = (
(481,830,o),
(505,830,qs),
(516,830,o),
(540,836,o),
(559,852,o),
(572,879,o),
(572,900,qs),
(572,928,o),
(536,961,o),
(512,961,qs),
(494,961,o),
(469,947,o),
(453,927,o),
(446,904,o),
(446,896,qs),
(446,867,o)
);
},
{
closed = 1;
nodes = (
(194,738,o),
(208,749,o),
(231,753,o),
(261,754,o),
(277,754,qs),
(297,754,o),
(314,773,o),
(314,790,qs),
(314,807,o),
(290,821,o),
(258,821,qs),
(39,821,ls),
(30,821,o),
(2,809,o),
(2,790,qs),
(2,769,o),
(26,759,o),
(39,759,qs),
(69,759,o),
(102,751,o),
(102,734,qs),
(102,666,o),
(104,534,o),
(104,467,qs),
(104,433,o),
(103,366,o),
(103,334,qs),
(103,307,o),
(104,248,o),
(108,192,o),
(116,143,o),
(123,125,qs),
(150,54,o),
(276,-14,o),
(393,-14,qs),
(452,-14,o),
(549,20,o),
(619,90,o),
(658,198,o),
(658,272,qs),
(658,327,o),
(656,437,o),
(656,492,qs),
(656,539,o),
(658,622,o),
(658,670,qs),
(658,689,o),
(697,700,o),
(732,700,qs),
(744,700,o),
(769,716,o),
(769,736,qs),
(769,753,o),
(750,767,o),
(718,767,qs),
(515,767,ls),
(493,767,o),
(468,751,o),
(468,736,qs),
(468,718,o),
(486,699,o),
(515,696,qs),
(545,693,o),
(567,680,o),
(567,663,qs),
(567,272,ls),
(567,234,o),
(549,161,o),
(509,102,o),
(442,66,o),
(394,66,qs),
(321,66,o),
(241,109,o),
(202,180,o),
(194,273,o),
(194,323,qs),
(194,729,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
2 1 0 3 1 1 9 0 1 91 0 5 0 6 4 5 6 91 10 1 8 8 9 83 0 9 9 12 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 9 2 3 91 0 5 0 6 4 5 6 91 10 1 8 8 9 83 0 9 9 12 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 8 5 10 10 8 96 0 0 0 1 3 0 1 91 0 2 0 3 9 2 3 91 0 5 0 6 4 5 6 91 0 10 10 9 84 0 9 9 12 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 8 5 10 10 8 96 0 0 0 1 3 0 1 91 0 2 0 3 9 2 3 91 0 5 0 6 4 5 6 91 0 10 10 9 84 0 9 9 14 67 0 4 4 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
105 102 98 95 47 44 36 61 38 38 38 38 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 784;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(269,859,o),
(289,859,qs),
(308,859,o),
(345,884,o),
(345,920,qs),
(345,943,o),
(316,972,o),
(296,972,qs),
(281,972,o),
(260,960,o),
(246,942,o),
(240,923,o),
(240,916,qs),
(240,891,o)
);
},
{
closed = 1;
nodes = (
(476,847,o),
(496,847,qs),
(515,847,o),
(552,872,o),
(552,908,qs),
(552,931,o),
(523,960,o),
(503,960,qs),
(488,960,o),
(467,948,o),
(453,930,o),
(447,911,o),
(447,904,qs),
(447,879,o)
);
},
{
closed = 1;
nodes = (
(184,755,o),
(206,766,o),
(233,770,o),
(259,771,o),
(264,771,qs),
(276,771,o),
(301,782,o),
(301,796,qs),
(301,810,o),
(282,821,o),
(250,821,qs),
(53,821,ls),
(44,821,o),
(16,812,o),
(16,796,qs),
(16,778,o),
(42,771,o),
(53,771,qs),
(59,771,o),
(80,770,o),
(99,766,o),
(113,757,o),
(113,748,qs),
(113,677,o),
(115,537,o),
(115,467,qs),
(115,433,o),
(114,366,o),
(114,334,qs),
(114,279,o),
(119,176,o),
(134,125,qs),
(144,90,o),
(190,37,o),
(255,3,o),
(336,-14,o),
(382,-14,qs),
(441,-14,o),
(539,20,o),
(609,90,o),
(648,198,o),
(648,272,qs),
(648,327,o),
(646,437,o),
(646,492,qs),
(646,542,o),
(648,641,o),
(648,692,qs),
(648,701,o),
(669,712,o),
(696,716,o),
(723,717,o),
(728,717,qs),
(740,717,o),
(765,725,o),
(765,742,qs),
(765,756,o),
(746,767,o),
(714,767,qs),
(518,767,ls),
(481,767,o),
(481,742,qs),
(481,727,o),
(507,717,o),
(518,717,qs),
(525,717,o),
(545,716,o),
(564,712,o),
(578,703,o),
(578,694,qs),
(578,272,ls),
(578,231,o),
(558,151,o),
(512,87,o),
(437,48,o),
(383,48,qs),
(310,48,o),
(230,94,o),
(192,170,o),
(184,269,o),
(184,323,qs),
(184,746,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 10 2 3 91 0 6 7 1 5 4 6 5 91 11 1 9 9 10 83 0 10 10 12 67 0 4 4 8 83 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 10 2 3 91 0 6 7 1 5 4 6 5 91 11 1 9 9 10 83 0 10 10 14 67 0 4 4 8 83 0 8 8 21 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
106 103 99 96 92 89 45 52 51 56 38 36 38 36 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 772;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(262,889,o),
(276,889,qs),
(290,889,o),
(317,908,o),
(317,935,qs),
(317,952,o),
(297,972,o),
(283,972,qs),
(272,972,o),
(257,963,o),
(247,950,o),
(242,936,o),
(242,931,qs),
(242,913,o)
);
},
{
closed = 1;
nodes = (
(469,875,o),
(483,875,qs),
(497,875,o),
(524,894,o),
(524,921,qs),
(524,938,o),
(504,958,o),
(490,958,qs),
(479,958,o),
(464,949,o),
(454,936,o),
(449,922,o),
(449,917,qs),
(449,899,o)
);
},
{
closed = 1;
nodes = (
(170,775,o),
(190,786,o),
(216,790,o),
(240,791,o),
(245,791,qs),
(257,791,o),
(282,795,o),
(282,806,qs),
(282,814,o),
(263,821,o),
(231,821,qs),
(49,821,ls),
(40,821,o),
(12,817,o),
(12,806,qs),
(12,796,o),
(38,791,o),
(49,791,qs),
(59,791,o),
(87,790,o),
(112,786,o),
(129,777,o),
(129,768,qs),
(129,692,o),
(131,542,o),
(131,467,qs),
(131,433,o),
(130,366,o),
(130,334,qs),
(130,279,o),
(137,176,o),
(150,125,qs),
(159,90,o),
(199,37,o),
(256,3,o),
(327,-14,o),
(367,-14,qs),
(426,-14,o),
(524,20,o),
(595,90,o),
(634,198,o),
(634,272,qs),
(634,327,o),
(632,437,o),
(632,492,qs),
(632,547,o),
(634,656,o),
(634,712,qs),
(634,721,o),
(652,732,o),
(676,736,o),
(699,737,o),
(704,737,qs),
(716,737,o),
(741,741,o),
(741,752,qs),
(741,760,o),
(722,767,o),
(690,767,qs),
(508,767,ls),
(499,767,o),
(471,763,o),
(471,752,qs),
(471,742,o),
(497,737,o),
(508,737,qs),
(518,737,o),
(548,736,o),
(575,732,o),
(594,723,o),
(594,714,qs),
(594,272,ls),
(594,225,o),
(570,134,o),
(517,62,o),
(431,18,o),
(368,18,qs),
(295,18,o),
(215,69,o),
(177,153,o),
(170,263,o),
(170,323,qs),
(170,766,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 10 2 3 91 0 6 7 1 5 4 6 5 91 11 1 9 9 10 83 0 10 10 12 67 0 4 4 8 83 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 10 2 3 91 0 6 7 1 5 4 6 5 91 11 1 9 9 10 83 0 10 10 14 67 0 4 4 8 83 0 8 8 21 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
107 104 100 97 93 90 45 52 52 56 38 36 38 36 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 755;
}
);
note = Udieresis;
unicode = 220;
},
{
glyphname = Ugrave;
kernLeft = U;
kernRight = U;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(353,894,o),
(391,873,o),
(432,861,o),
(445,861,qs),
(460,861,o),
(480,880,o),
(480,891,qs),
(480,902,o),
(455,930,o),
(419,955,o),
(380,972,o),
(366,972,qs),
(346,972,o),
(325,949,o),
(325,936,qs),
(325,921,o)
);
},
{
closed = 1;
nodes = (
(194,738,o),
(208,749,o),
(231,753,o),
(261,754,o),
(277,754,qs),
(297,754,o),
(314,773,o),
(314,790,qs),
(314,807,o),
(290,821,o),
(258,821,qs),
(39,821,ls),
(30,821,o),
(2,809,o),
(2,790,qs),
(2,769,o),
(26,759,o),
(39,759,qs),
(69,759,o),
(102,751,o),
(102,734,qs),
(102,666,o),
(104,534,o),
(104,467,qs),
(104,433,o),
(103,366,o),
(103,334,qs),
(103,307,o),
(104,248,o),
(108,192,o),
(116,143,o),
(123,125,qs),
(150,54,o),
(276,-14,o),
(393,-14,qs),
(452,-14,o),
(549,20,o),
(619,90,o),
(658,198,o),
(658,272,qs),
(658,327,o),
(656,437,o),
(656,492,qs),
(656,539,o),
(658,622,o),
(658,670,qs),
(658,689,o),
(697,700,o),
(732,700,qs),
(744,700,o),
(769,716,o),
(769,736,qs),
(769,753,o),
(750,767,o),
(718,767,qs),
(515,767,ls),
(493,767,o),
(468,751,o),
(468,736,qs),
(468,718,o),
(486,699,o),
(515,696,qs),
(545,693,o),
(567,680,o),
(567,663,qs),
(567,272,ls),
(567,234,o),
(549,161,o),
(509,102,o),
(442,66,o),
(394,66,qs),
(321,66,o),
(241,109,o),
(202,180,o),
(194,273,o),
(194,323,qs),
(194,729,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 0 1 0 106 0 1 7 1 106 0 3 0 4 2 3 4 91 8 1 6 6 7 83 0 7 7 12 67 0 2 2 5 84 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 0 1 0 106 0 1 7 1 106 0 6 3 8 8 6 96 0 3 0 4 2 3 4 91 0 8 8 7 84 0 7 7 12 67 0 2 2 5 84 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 0 1 0 106 0 1 7 1 106 0 6 3 8 8 6 96 0 3 0 4 2 3 4 91 0 8 8 7 84 0 7 7 14 67 0 2 2 5 84 0 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
52 52 47 44 36 61 40 38 34 9 24
CALL[ ]	/* CallFunction */";
};
width = 784;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(353,899,o),
(390,872,o),
(428,854,o),
(439,854,qs),
(450,854,o),
(463,867,o),
(463,877,qs),
(463,887,o),
(438,919,o),
(404,950,o),
(368,972,o),
(357,972,qs),
(342,972,o),
(325,955,o),
(325,941,qs),
(325,929,o)
);
},
{
closed = 1;
nodes = (
(184,755,o),
(206,766,o),
(233,770,o),
(259,771,o),
(264,771,qs),
(276,771,o),
(301,782,o),
(301,796,qs),
(301,810,o),
(282,821,o),
(250,821,qs),
(53,821,ls),
(44,821,o),
(16,812,o),
(16,796,qs),
(16,778,o),
(42,771,o),
(53,771,qs),
(59,771,o),
(80,770,o),
(99,766,o),
(113,757,o),
(113,748,qs),
(113,677,o),
(115,537,o),
(115,467,qs),
(115,433,o),
(114,366,o),
(114,334,qs),
(114,279,o),
(119,176,o),
(134,125,qs),
(144,90,o),
(190,37,o),
(255,3,o),
(336,-14,o),
(382,-14,qs),
(441,-14,o),
(539,20,o),
(609,90,o),
(648,198,o),
(648,272,qs),
(648,327,o),
(646,437,o),
(646,492,qs),
(646,542,o),
(648,641,o),
(648,692,qs),
(648,701,o),
(669,712,o),
(696,716,o),
(723,717,o),
(728,717,qs),
(740,717,o),
(765,725,o),
(765,742,qs),
(765,756,o),
(746,767,o),
(714,767,qs),
(518,767,ls),
(481,767,o),
(481,742,qs),
(481,727,o),
(507,717,o),
(518,717,qs),
(525,717,o),
(545,716,o),
(564,712,o),
(578,703,o),
(578,694,qs),
(578,272,ls),
(578,231,o),
(558,151,o),
(512,87,o),
(437,48,o),
(383,48,qs),
(310,48,o),
(230,94,o),
(192,170,o),
(184,269,o),
(184,323,qs),
(184,746,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 0 1 0 106 0 1 8 1 106 0 4 5 1 3 2 4 3 91 9 1 7 7 8 83 0 8 8 12 67 0 2 2 6 84 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 0 1 0 106 0 1 8 1 106 0 4 5 1 3 2 4 3 91 9 1 7 7 8 83 0 8 8 14 67 0 2 2 6 84 0 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
94 91 87 84 80 77 45 52 51 56 40 38 34 10 22
CALL[ ]	/* CallFunction */";
};
width = 772;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(170,775,o),
(190,786,o),
(216,790,o),
(240,791,o),
(245,791,qs),
(257,791,o),
(282,795,o),
(282,806,qs),
(282,814,o),
(263,821,o),
(231,821,qs),
(49,821,ls),
(40,821,o),
(12,817,o),
(12,806,qs),
(12,796,o),
(38,791,o),
(49,791,qs),
(59,791,o),
(87,790,o),
(112,786,o),
(129,777,o),
(129,768,qs),
(129,692,o),
(131,542,o),
(131,467,qs),
(131,433,o),
(130,366,o),
(130,334,qs),
(130,279,o),
(137,176,o),
(150,125,qs),
(159,90,o),
(199,37,o),
(256,3,o),
(327,-14,o),
(367,-14,qs),
(426,-14,o),
(524,20,o),
(595,90,o),
(634,198,o),
(634,272,qs),
(634,327,o),
(632,437,o),
(632,492,qs),
(632,547,o),
(634,656,o),
(634,712,qs),
(634,721,o),
(652,732,o),
(676,736,o),
(699,737,o),
(704,737,qs),
(716,737,o),
(741,741,o),
(741,752,qs),
(741,760,o),
(722,767,o),
(690,767,qs),
(508,767,ls),
(499,767,o),
(471,763,o),
(471,752,qs),
(471,742,o),
(497,737,o),
(508,737,qs),
(518,737,o),
(548,736,o),
(575,732,o),
(594,723,o),
(594,714,qs),
(594,272,ls),
(594,225,o),
(570,134,o),
(517,62,o),
(431,18,o),
(368,18,qs),
(295,18,o),
(215,69,o),
(177,153,o),
(170,263,o),
(170,323,qs),
(170,766,ls)
);
},
{
closed = 1;
nodes = (
(353,906,o),
(389,870,o),
(424,842,o),
(431,842,qs),
(439,842,o),
(439,853,qs),
(439,862,o),
(415,902,o),
(383,942,o),
(351,972,o),
(344,972,qs),
(336,972,o),
(325,964,o),
(325,950,qs),
(325,942,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 8 9 8 106 0 9 6 9 106 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 84 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 8 9 8 106 0 9 6 9 106 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 14 67 0 0 0 4 84 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
94 92 87 85 79 76 72 69 65 62 45 52 52 56 36 10 20
CALL[ ]	/* CallFunction */";
};
width = 755;
}
);
note = Ugrave;
unicode = 217;
},
{
glyphname = Uhungarumlaut;
kernLeft = U;
kernRight = U;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(374,972,o),
(354,972,qs),
(340,972,o),
(301,949,o),
(265,916,o),
(240,882,o),
(240,872,qs),
(240,860,o),
(260,841,o),
(275,841,qs),
(288,841,o),
(328,860,o),
(367,888,o),
(395,921,o),
(395,936,qs),
(395,949,o)
);
},
{
closed = 1;
nodes = (
(556,972,o),
(536,972,qs),
(522,972,o),
(483,949,o),
(448,916,o),
(423,882,o),
(423,872,qs),
(423,860,o),
(443,841,o),
(458,841,qs),
(471,841,o),
(511,860,o),
(550,888,o),
(578,921,o),
(578,936,qs),
(578,949,o)
);
},
{
closed = 1;
nodes = (
(194,738,o),
(208,749,o),
(231,753,o),
(261,754,o),
(277,754,qs),
(297,754,o),
(314,773,o),
(314,790,qs),
(314,807,o),
(290,821,o),
(258,821,qs),
(39,821,ls),
(30,821,o),
(2,809,o),
(2,790,qs),
(2,769,o),
(26,759,o),
(39,759,qs),
(69,759,o),
(102,751,o),
(102,734,qs),
(102,666,o),
(104,534,o),
(104,467,qs),
(104,433,o),
(103,366,o),
(103,334,qs),
(103,307,o),
(104,248,o),
(108,192,o),
(116,143,o),
(123,125,qs),
(150,54,o),
(276,-14,o),
(393,-14,qs),
(452,-14,o),
(549,20,o),
(619,90,o),
(658,198,o),
(658,272,qs),
(658,327,o),
(656,437,o),
(656,492,qs),
(656,539,o),
(658,622,o),
(658,670,qs),
(658,689,o),
(697,700,o),
(732,700,qs),
(744,700,o),
(769,716,o),
(769,736,qs),
(769,753,o),
(750,767,o),
(718,767,qs),
(515,767,ls),
(493,767,o),
(468,751,o),
(468,736,qs),
(468,718,o),
(486,699,o),
(515,696,qs),
(545,693,o),
(567,680,o),
(567,663,qs),
(567,272,ls),
(567,234,o),
(549,161,o),
(509,102,o),
(442,66,o),
(394,66,qs),
(321,66,o),
(241,109,o),
(202,180,o),
(194,273,o),
(194,323,qs),
(194,729,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
3 1 1 0 1 106 2 1 0 9 0 106 0 5 0 6 4 5 6 91 10 1 8 8 9 83 0 9 9 12 67 0 4 4 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
3 1 1 0 1 106 2 1 0 9 0 106 0 8 5 10 10 8 96 0 5 0 6 4 5 6 91 0 10 10 9 84 0 9 9 12 67 0 4 4 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
3 1 1 0 1 106 2 1 0 9 0 106 0 8 5 10 10 8 96 0 5 0 6 4 5 6 91 0 10 10 9 84 0 9 9 14 67 0 4 4 7 84 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
105 102 98 95 47 44 36 61 38 38 38 38 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 784;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(365,972,o),
(350,972,qs),
(339,972,o),
(303,950,o),
(269,919,o),
(244,887,o),
(244,877,qs),
(244,867,o),
(257,854,o),
(268,854,qs),
(278,854,o),
(317,872,o),
(354,899,o),
(382,929,o),
(382,941,qs),
(382,955,o)
);
},
{
closed = 1;
nodes = (
(536,972,o),
(521,972,qs),
(510,972,o),
(474,950,o),
(440,919,o),
(415,887,o),
(415,877,qs),
(415,867,o),
(428,854,o),
(439,854,qs),
(449,854,o),
(488,872,o),
(525,899,o),
(553,929,o),
(553,941,qs),
(553,955,o)
);
},
{
closed = 1;
nodes = (
(184,755,o),
(206,766,o),
(233,770,o),
(259,771,o),
(264,771,qs),
(276,771,o),
(301,782,o),
(301,796,qs),
(301,810,o),
(282,821,o),
(250,821,qs),
(53,821,ls),
(44,821,o),
(16,812,o),
(16,796,qs),
(16,778,o),
(42,771,o),
(53,771,qs),
(59,771,o),
(80,770,o),
(99,766,o),
(113,757,o),
(113,748,qs),
(113,677,o),
(115,537,o),
(115,467,qs),
(115,433,o),
(114,366,o),
(114,334,qs),
(114,279,o),
(119,176,o),
(134,125,qs),
(144,90,o),
(190,37,o),
(255,3,o),
(336,-14,o),
(382,-14,qs),
(441,-14,o),
(539,20,o),
(609,90,o),
(648,198,o),
(648,272,qs),
(648,327,o),
(646,437,o),
(646,492,qs),
(646,542,o),
(648,641,o),
(648,692,qs),
(648,701,o),
(669,712,o),
(696,716,o),
(723,717,o),
(728,717,qs),
(740,717,o),
(765,725,o),
(765,742,qs),
(765,756,o),
(746,767,o),
(714,767,qs),
(518,767,ls),
(481,767,o),
(481,742,qs),
(481,727,o),
(507,717,o),
(518,717,qs),
(525,717,o),
(545,716,o),
(564,712,o),
(578,703,o),
(578,694,qs),
(578,272,ls),
(578,231,o),
(558,151,o),
(512,87,o),
(437,48,o),
(383,48,qs),
(310,48,o),
(230,94,o),
(192,170,o),
(184,269,o),
(184,323,qs),
(184,746,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
3 1 1 0 1 106 2 1 0 10 0 106 0 6 7 1 5 4 6 5 92 11 1 9 9 10 83 0 10 10 12 67 0 4 4 8 84 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
3 1 1 0 1 106 2 1 0 10 0 106 0 6 7 1 5 4 6 5 92 11 1 9 9 10 83 0 10 10 14 67 0 4 4 8 84 0 8 8 21 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
110 107 103 100 96 93 45 52 51 56 38 38 38 38 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 772;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(353,972,o),
(345,972,qs),
(338,972,o),
(306,952,o),
(274,925,o),
(250,895,o),
(250,886,qs),
(250,875,o),
(258,875,qs),
(265,875,o),
(300,893,o),
(336,917,o),
(364,942,o),
(364,950,qs),
(364,964,o)
);
},
{
closed = 1;
nodes = (
(507,972,o),
(499,972,qs),
(492,972,o),
(460,952,o),
(428,925,o),
(404,895,o),
(404,886,qs),
(404,875,o),
(412,875,qs),
(419,875,o),
(454,893,o),
(490,917,o),
(518,942,o),
(518,950,qs),
(518,964,o)
);
},
{
closed = 1;
nodes = (
(170,775,o),
(190,786,o),
(216,790,o),
(240,791,o),
(245,791,qs),
(257,791,o),
(282,795,o),
(282,806,qs),
(282,814,o),
(263,821,o),
(231,821,qs),
(49,821,ls),
(40,821,o),
(12,817,o),
(12,806,qs),
(12,796,o),
(38,791,o),
(49,791,qs),
(59,791,o),
(87,790,o),
(112,786,o),
(129,777,o),
(129,768,qs),
(129,692,o),
(131,542,o),
(131,467,qs),
(131,433,o),
(130,366,o),
(130,334,qs),
(130,279,o),
(137,176,o),
(150,125,qs),
(159,90,o),
(199,37,o),
(256,3,o),
(327,-14,o),
(367,-14,qs),
(426,-14,o),
(524,20,o),
(595,90,o),
(634,198,o),
(634,272,qs),
(634,327,o),
(632,437,o),
(632,492,qs),
(632,547,o),
(634,656,o),
(634,712,qs),
(634,721,o),
(652,732,o),
(676,736,o),
(699,737,o),
(704,737,qs),
(716,737,o),
(741,741,o),
(741,752,qs),
(741,760,o),
(722,767,o),
(690,767,qs),
(508,767,ls),
(499,767,o),
(471,763,o),
(471,752,qs),
(471,742,o),
(497,737,o),
(508,737,qs),
(518,737,o),
(548,736,o),
(575,732,o),
(594,723,o),
(594,714,qs),
(594,272,ls),
(594,225,o),
(570,134,o),
(517,62,o),
(431,18,o),
(368,18,qs),
(295,18,o),
(215,69,o),
(177,153,o),
(170,263,o),
(170,323,qs),
(170,766,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
3 1 1 0 1 106 2 1 0 10 0 106 0 6 7 1 5 4 6 5 92 11 1 9 9 10 83 0 10 10 12 67 0 4 4 8 84 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
3 1 1 0 1 106 2 1 0 10 0 106 0 6 7 1 5 4 6 5 92 11 1 9 9 10 83 0 10 10 14 67 0 4 4 8 84 0 8 8 21 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
109 106 102 99 95 92 45 52 52 56 38 37 38 37 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 755;
}
);
note = Uhungarumlaut;
unicode = 368;
},
{
glyphname = Umacron;
kernLeft = U;
kernRight = U;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(194,738,o),
(208,749,o),
(231,753,o),
(261,754,o),
(277,754,qs),
(297,754,o),
(314,773,o),
(314,790,qs),
(314,807,o),
(290,821,o),
(258,821,qs),
(39,821,ls),
(30,821,o),
(2,809,o),
(2,790,qs),
(2,769,o),
(26,759,o),
(39,759,qs),
(69,759,o),
(102,751,o),
(102,734,qs),
(102,666,o),
(104,534,o),
(104,467,qs),
(104,433,o),
(103,366,o),
(103,334,qs),
(103,307,o),
(104,248,o),
(108,192,o),
(116,143,o),
(123,125,qs),
(150,54,o),
(276,-14,o),
(393,-14,qs),
(452,-14,o),
(549,20,o),
(619,90,o),
(658,198,o),
(658,272,qs),
(658,327,o),
(656,437,o),
(656,492,qs),
(656,539,o),
(658,622,o),
(658,670,qs),
(658,689,o),
(697,700,o),
(732,700,qs),
(744,700,o),
(769,716,o),
(769,736,qs),
(769,753,o),
(750,767,o),
(718,767,qs),
(515,767,ls),
(493,767,o),
(468,751,o),
(468,736,qs),
(468,718,o),
(486,699,o),
(515,696,qs),
(545,693,o),
(567,680,o),
(567,663,qs),
(567,272,ls),
(567,234,o),
(549,161,o),
(509,102,o),
(442,66,o),
(394,66,qs),
(321,66,o),
(241,109,o),
(202,180,o),
(194,273,o),
(194,323,qs),
(194,729,ls)
);
},
{
closed = 1;
nodes = (
(462,962,o),
(420,962,qs),
(407,962,o),
(372,963,o),
(336,963,o),
(306,964,o),
(299,964,qs),
(282,964,o),
(266,939,o),
(266,925,qs),
(266,911,o),
(285,885,o),
(299,885,qs),
(317,885,o),
(381,885,o),
(453,886,o),
(520,886,o),
(540,886,qs),
(551,886,o),
(565,895,o),
(573,908,o),
(576,923,o),
(576,928,qs),
(576,943,o),
(559,965,o),
(548,965,qs),
(524,965,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
9 1 7 0 8 5 7 8 91 0 1 0 2 0 1 2 91 6 1 4 4 5 83 0 5 5 12 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 4 1 6 6 4 96 9 1 7 0 8 5 7 8 91 0 1 0 2 0 1 2 91 0 6 6 5 84 0 5 5 12 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 4 1 6 6 4 96 9 1 7 0 8 5 7 8 91 0 1 0 2 0 1 2 91 0 6 6 5 84 0 5 5 14 67 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
78 77 91 84 77 103 78 95 52 52 47 44 36 61 36 10 22
CALL[ ]	/* CallFunction */";
};
width = 784;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (16,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (252,385);
ref = macron;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
10 1 8 0 9 6 8 9 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
10 1 8 0 9 6 8 9 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
84 83 95 88 83 107 84 99 79 76 72 69 65 62 45 52 51 56 37 11 31
CALL[ ]	/* CallFunction */";
};
width = 772;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(170,775,o),
(190,786,o),
(216,790,o),
(240,791,o),
(245,791,qs),
(257,791,o),
(282,795,o),
(282,806,qs),
(282,814,o),
(263,821,o),
(231,821,qs),
(49,821,ls),
(40,821,o),
(12,817,o),
(12,806,qs),
(12,796,o),
(38,791,o),
(49,791,qs),
(59,791,o),
(87,790,o),
(112,786,o),
(129,777,o),
(129,768,qs),
(129,692,o),
(131,542,o),
(131,467,qs),
(131,433,o),
(130,366,o),
(130,334,qs),
(130,279,o),
(137,176,o),
(150,125,qs),
(159,90,o),
(199,37,o),
(256,3,o),
(327,-14,o),
(367,-14,qs),
(426,-14,o),
(524,20,o),
(595,90,o),
(634,198,o),
(634,272,qs),
(634,327,o),
(632,437,o),
(632,492,qs),
(632,547,o),
(634,656,o),
(634,712,qs),
(634,721,o),
(652,732,o),
(676,736,o),
(699,737,o),
(704,737,qs),
(716,737,o),
(741,741,o),
(741,752,qs),
(741,760,o),
(722,767,o),
(690,767,qs),
(508,767,ls),
(499,767,o),
(471,763,o),
(471,752,qs),
(471,742,o),
(497,737,o),
(508,737,qs),
(518,737,o),
(548,736,o),
(575,732,o),
(594,723,o),
(594,714,qs),
(594,272,ls),
(594,225,o),
(570,134,o),
(517,62,o),
(431,18,o),
(368,18,qs),
(295,18,o),
(215,69,o),
(177,153,o),
(170,263,o),
(170,323,qs),
(170,766,ls)
);
},
{
closed = 1;
nodes = (
(436,904,o),
(394,904,qs),
(381,904,o),
(346,905,o),
(310,905,o),
(280,906,o),
(273,906,qs),
(265,906,o),
(257,896,o),
(257,891,qs),
(257,886,o),
(266,875,o),
(273,875,qs),
(291,875,o),
(355,875,o),
(427,876,o),
(494,876,o),
(514,876,qs),
(525,876,o),
(533,889,o),
(533,894,qs),
(533,899,o),
(526,907,o),
(522,907,qs),
(498,907,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
10 1 8 0 9 6 8 9 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
10 1 8 0 9 6 8 9 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
84 83 95 88 83 107 84 99 79 76 72 69 65 62 45 52 52 56 36 11 20
CALL[ ]	/* CallFunction */";
};
width = 755;
}
);
note = Umacron;
unicode = 362;
},
{
glyphname = Uogonek;
kernLeft = U;
kernRight = U;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(460,-159,o),
(480,-143,o),
(490,-125,o),
(490,-117,qs),
(490,-108,o),
(475,-93,o),
(465,-93,qs),
(457,-93,o),
(448,-101,o),
(437,-110,o),
(420,-117,o),
(405,-117,qs),
(394,-117,o),
(376,-107,o),
(376,-96,qs),
(376,-76,o),
(399,-25,o),
(420,-13,q),
(474,-10,o),
(562,28,o),
(625,98,o),
(660,202,o),
(660,272,qs),
(660,327,o),
(658,437,o),
(658,492,qs),
(658,539,o),
(660,622,o),
(660,670,qs),
(660,689,o),
(699,700,o),
(734,700,qs),
(746,700,o),
(771,716,o),
(771,736,qs),
(771,753,o),
(752,767,o),
(720,767,qs),
(517,767,ls),
(495,767,o),
(470,751,o),
(470,736,qs),
(470,718,o),
(488,699,o),
(517,696,qs),
(547,693,o),
(569,680,o),
(569,663,qs),
(569,272,ls),
(569,234,o),
(551,161,o),
(511,102,o),
(444,66,o),
(396,66,qs),
(323,66,o),
(243,109,o),
(204,180,o),
(196,273,o),
(196,323,qs),
(196,729,ls),
(196,738,o),
(210,749,o),
(233,753,o),
(263,754,o),
(279,754,qs),
(299,754,o),
(316,773,o),
(316,790,qs),
(316,807,o),
(292,821,o),
(260,821,qs),
(41,821,ls),
(32,821,o),
(4,809,o),
(4,790,qs),
(4,769,o),
(28,759,o),
(41,759,qs),
(71,759,o),
(104,751,o),
(104,734,qs),
(104,666,o),
(106,534,o),
(106,467,qs),
(106,433,o),
(105,366,o),
(105,334,qs),
(105,307,o),
(106,248,o),
(110,192,o),
(118,143,o),
(125,125,qs),
(150,58,o),
(262,-9,o),
(363,-13,q),
(354,-18,o),
(331,-33,o),
(311,-53,o),
(297,-79,o),
(297,-95,qs),
(297,-114,o),
(317,-142,o),
(348,-161,o),
(387,-170,o),
(407,-170,qs),
(428,-170,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 10 1 9 1 10 9 104 0 6 0 7 5 6 7 91 0 9 11 1 0 9 0 87 4 1 2 2 3 83 0 3 3 12 67 0 5 5 1 83 8 1 1 1 24 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 2 6 4 4 2 96 0 10 1 9 1 10 9 104 0 6 0 7 5 6 7 91 0 9 11 1 0 9 0 87 0 4 4 3 84 0 3 3 12 67 0 5 5 1 83 8 1 1 1 24 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 2 6 4 4 2 96 0 10 1 9 1 10 9 104 0 6 0 7 5 6 7 91 0 9 11 1 0 9 0 87 0 4 4 3 84 0 3 3 14 67 0 5 5 1 83 8 1 1 1 24 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 99 97 94 92 87 86 74 72 68 65 52 50 42 39 35 32 28 26 11 10 0 105 1 105 12 15
CALL[ ]	/* CallFunction */";
};
width = 786;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (17,0);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (1,0);
ref = U;
},
{
alignment = -1;
pos = (275,0);
ref = ogonek;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 0 1 11 11 0 96 0 9 4 8 4 9 8 104 0 2 3 1 1 0 2 1 91 0 8 0 10 8 10 87 7 1 5 5 6 83 0 6 6 12 67 12 1 11 11 4 84 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 0 1 11 1 0 11 104 0 9 4 8 4 9 8 104 0 2 3 1 1 0 2 1 91 0 8 0 10 8 10 87 7 1 5 5 6 83 0 6 6 12 67 12 1 11 11 4 84 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 0 1 11 1 0 11 104 0 9 4 8 4 9 8 104 0 2 3 1 1 0 2 1 91 0 8 0 10 8 10 87 7 1 5 5 6 83 0 6 6 14 67 12 1 11 11 4 84 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
83 83 83 112 83 112 105 103 97 95 92 90 79 76 72 69 65 62 45 52 51 56 37 13 31
CALL[ ]	/* CallFunction */";
};
width = 773;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(170,775,o),
(190,786,o),
(216,790,o),
(240,791,o),
(245,791,qs),
(257,791,o),
(282,795,o),
(282,806,qs),
(282,814,o),
(263,821,o),
(231,821,qs),
(49,821,ls),
(40,821,o),
(12,817,o),
(12,806,qs),
(12,796,o),
(38,791,o),
(49,791,qs),
(59,791,o),
(87,790,o),
(112,786,o),
(129,777,o),
(129,768,qs),
(129,692,o),
(131,542,o),
(131,467,qs),
(131,433,o),
(130,366,o),
(130,334,qs),
(130,279,o),
(137,176,o),
(150,125,qs),
(159,91,o),
(197,40,o),
(251,5,o),
(319,-13,o),
(357,-14,q),
(350,-18,o),
(330,-33,o),
(312,-54,o),
(299,-82,o),
(299,-99,qs),
(299,-131,o),
(345,-172,o),
(380,-172,qs),
(398,-172,o),
(426,-159,o),
(447,-142,o),
(458,-125,o),
(458,-121,qs),
(458,-115,o),
(453,-105,o),
(444,-105,qs),
(437,-105,o),
(426,-118,o),
(413,-133,o),
(395,-145,o),
(382,-145,qs),
(370,-145,o),
(355,-135,o),
(346,-120,o),
(343,-104,o),
(343,-98,qs),
(343,-92,o),
(347,-69,o),
(359,-44,o),
(379,-20,o),
(395,-13,q),
(448,-9,o),
(536,28,o),
(599,99,o),
(634,202,o),
(634,272,qs),
(634,327,o),
(632,437,o),
(632,492,qs),
(632,547,o),
(634,656,o),
(634,712,qs),
(634,721,o),
(652,732,o),
(676,736,o),
(699,737,o),
(704,737,qs),
(716,737,o),
(741,741,o),
(741,752,qs),
(741,760,o),
(722,767,o),
(690,767,qs),
(508,767,ls),
(499,767,o),
(471,763,o),
(471,752,qs),
(471,742,o),
(497,737,o),
(508,737,qs),
(518,737,o),
(548,736,o),
(575,732,o),
(594,723,o),
(594,714,qs),
(594,272,ls),
(594,225,o),
(570,134,o),
(517,62,o),
(431,18,o),
(368,18,qs),
(295,18,o),
(215,69,o),
(177,153,o),
(170,263,o),
(170,323,qs),
(170,766,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 5 7 4 7 5 4 104 0 2 3 1 1 0 2 1 91 0 4 0 6 4 6 87 10 1 8 8 9 83 0 9 9 12 67 0 0 0 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 5 7 4 7 5 4 104 0 2 3 1 1 0 2 1 91 0 4 0 6 4 6 87 10 1 8 8 9 83 0 9 9 14 67 0 0 0 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
110 107 103 100 96 93 77 76 69 67 61 59 56 54 52 52 56 36 11 19
CALL[ ]	/* CallFunction */";
};
width = 755;
}
);
note = Uogonek;
unicode = 370;
},
{
glyphname = Uring;
kernLeft = U;
kernRight = U;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(406,972,qs),
(375,972,o),
(331,940,o),
(331,902,qs),
(331,867,o),
(377,833,o),
(411,833,qs),
(441,833,o),
(484,868,o),
(484,904,qs),
(484,972,o)
);
},
{
closed = 1;
nodes = (
(429,917,o),
(429,903,qs),
(429,887,o),
(417,876,o),
(411,876,qs),
(404,876,o),
(387,885,o),
(387,902,qs),
(387,919,o),
(402,930,o),
(407,930,qs),
(415,930,o)
);
},
{
closed = 1;
nodes = (
(194,738,o),
(208,749,o),
(231,753,o),
(261,754,o),
(277,754,qs),
(297,754,o),
(314,773,o),
(314,790,qs),
(314,807,o),
(290,821,o),
(258,821,qs),
(39,821,ls),
(30,821,o),
(2,809,o),
(2,790,qs),
(2,769,o),
(26,759,o),
(39,759,qs),
(69,759,o),
(102,751,o),
(102,734,qs),
(102,666,o),
(104,534,o),
(104,467,qs),
(104,433,o),
(103,366,o),
(103,334,qs),
(103,307,o),
(104,248,o),
(108,192,o),
(116,143,o),
(123,125,qs),
(150,54,o),
(276,-14,o),
(393,-14,qs),
(452,-14,o),
(549,20,o),
(619,90,o),
(658,198,o),
(658,272,qs),
(658,327,o),
(656,437,o),
(656,492,qs),
(656,539,o),
(658,622,o),
(658,670,qs),
(658,689,o),
(697,700,o),
(732,700,qs),
(744,700,o),
(769,716,o),
(769,736,qs),
(769,753,o),
(750,767,o),
(718,767,qs),
(515,767,ls),
(493,767,o),
(468,751,o),
(468,736,qs),
(468,718,o),
(486,699,o),
(515,696,qs),
(545,693,o),
(567,680,o),
(567,663,qs),
(567,272,ls),
(567,234,o),
(549,161,o),
(509,102,o),
(442,66,o),
(394,66,qs),
(321,66,o),
(241,109,o),
(202,180,o),
(194,273,o),
(194,323,qs),
(194,729,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
11 1 2 1 3 0 2 96 0 3 0 1 3 94 0 1 0 0 9 1 0 91 0 5 0 6 4 5 6 91 10 1 8 8 9 83 0 9 9 12 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
11 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 1 0 0 9 1 0 91 0 5 0 6 4 5 6 91 10 1 8 8 9 83 0 9 9 12 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
11 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 8 5 10 10 8 96 0 1 0 0 9 1 0 91 0 5 0 6 4 5 6 91 0 10 10 9 84 0 9 9 12 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
11 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 8 5 10 10 8 96 0 1 0 0 9 1 0 91 0 5 0 6 4 5 6 91 0 10 10 9 84 0 9 9 14 67 0 4 4 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
12 11 96 93 89 86 82 80 65 63 51 49 45 42 29 27 18 16 11 22 12 22 36 34 12 17
CALL[ ]	/* CallFunction */";
};
width = 784;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (16,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (322,323);
ref = ring;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
12 1 10 9 11 8 10 96 0 11 8 9 11 94 0 9 0 8 6 9 8 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
12 1 10 9 11 9 10 11 104 0 11 8 9 11 8 102 0 9 0 8 6 9 8 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
12 1 10 9 11 9 10 11 104 0 11 8 9 11 8 102 0 9 0 8 6 9 8 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
96 95 102 100 95 106 96 106 93 91 87 85 79 76 72 69 65 62 45 52 51 56 37 13 31
CALL[ ]	/* CallFunction */";
};
width = 772;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(170,775,o),
(190,786,o),
(216,790,o),
(240,791,o),
(245,791,qs),
(257,791,o),
(282,795,o),
(282,806,qs),
(282,814,o),
(263,821,o),
(231,821,qs),
(49,821,ls),
(40,821,o),
(12,817,o),
(12,806,qs),
(12,796,o),
(38,791,o),
(49,791,qs),
(59,791,o),
(87,790,o),
(112,786,o),
(129,777,o),
(129,768,qs),
(129,692,o),
(131,542,o),
(131,467,qs),
(131,433,o),
(130,366,o),
(130,334,qs),
(130,279,o),
(137,176,o),
(150,125,qs),
(159,90,o),
(199,37,o),
(256,3,o),
(327,-14,o),
(367,-14,qs),
(426,-14,o),
(524,20,o),
(595,90,o),
(634,198,o),
(634,272,qs),
(634,327,o),
(632,437,o),
(632,492,qs),
(632,547,o),
(634,656,o),
(634,712,qs),
(634,721,o),
(652,732,o),
(676,736,o),
(699,737,o),
(704,737,qs),
(716,737,o),
(741,741,o),
(741,752,qs),
(741,760,o),
(722,767,o),
(690,767,qs),
(508,767,ls),
(499,767,o),
(471,763,o),
(471,752,qs),
(471,742,o),
(497,737,o),
(508,737,qs),
(518,737,o),
(548,736,o),
(575,732,o),
(594,723,o),
(594,714,qs),
(594,272,ls),
(594,225,o),
(570,134,o),
(517,62,o),
(431,18,o),
(368,18,qs),
(295,18,o),
(215,69,o),
(177,153,o),
(170,263,o),
(170,323,qs),
(170,766,ls)
);
},
{
closed = 1;
nodes = (
(416,972,o),
(386,972,qs),
(357,972,o),
(320,932,o),
(320,902,qs),
(320,871,o),
(356,833,o),
(382,833,qs),
(405,833,o),
(447,868,o),
(447,904,qs),
(447,931,o)
);
},
{
closed = 1;
nodes = (
(417,922,o),
(417,903,qs),
(417,880,o),
(399,852,o),
(382,852,qs),
(365,852,o),
(350,880,o),
(350,902,qs),
(350,923,o),
(365,952,o),
(384,952,qs),
(404,952,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 9 12 1 10 11 9 10 91 0 2 3 1 1 0 2 1 91 0 8 8 11 83 0 11 11 20 67 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 9 12 1 10 11 9 10 91 0 11 0 8 6 11 8 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 9 12 1 10 11 9 10 91 0 11 0 8 6 11 8 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
96 95 102 100 95 106 96 106 93 91 87 85 79 76 72 69 65 62 45 52 52 56 36 13 20
CALL[ ]	/* CallFunction */";
};
width = 755;
}
);
note = Uring;
unicode = 366;
},
{
glyphname = Utilde;
kernLeft = U;
kernRight = U;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(194,738,o),
(208,749,o),
(231,753,o),
(261,754,o),
(277,754,qs),
(297,754,o),
(314,773,o),
(314,790,qs),
(314,807,o),
(290,821,o),
(258,821,qs),
(39,821,ls),
(30,821,o),
(2,809,o),
(2,790,qs),
(2,769,o),
(26,759,o),
(39,759,qs),
(69,759,o),
(102,751,o),
(102,734,qs),
(102,666,o),
(104,534,o),
(104,467,qs),
(104,433,o),
(103,366,o),
(103,334,qs),
(103,307,o),
(104,248,o),
(108,192,o),
(116,143,o),
(123,125,qs),
(150,54,o),
(276,-14,o),
(393,-14,qs),
(452,-14,o),
(549,20,o),
(619,90,o),
(658,198,o),
(658,272,qs),
(658,327,o),
(656,437,o),
(656,492,qs),
(656,539,o),
(658,622,o),
(658,670,qs),
(658,689,o),
(697,700,o),
(732,700,qs),
(744,700,o),
(769,716,o),
(769,736,qs),
(769,753,o),
(750,767,o),
(718,767,qs),
(515,767,ls),
(493,767,o),
(468,751,o),
(468,736,qs),
(468,718,o),
(486,699,o),
(515,696,qs),
(545,693,o),
(567,680,o),
(567,663,qs),
(567,272,ls),
(567,234,o),
(549,161,o),
(509,102,o),
(442,66,o),
(394,66,qs),
(321,66,o),
(241,109,o),
(202,180,o),
(194,273,o),
(194,323,qs),
(194,729,ls)
);
},
{
closed = 1;
nodes = (
(253,861,o),
(262,861,qs),
(269,861,o),
(287,869,o),
(307,878,o),
(331,886,o),
(346,886,qs),
(360,886,o),
(392,878,o),
(427,869,o),
(464,862,o),
(483,862,qs),
(494,862,o),
(532,869,o),
(568,886,o),
(594,915,o),
(594,937,qs),
(594,953,o),
(577,972,o),
(572,972,qs),
(565,972,o),
(542,959,qs),
(528,951,o),
(496,942,o),
(482,942,qs),
(467,942,o),
(431,951,o),
(395,961,o),
(360,970,o),
(345,970,qs),
(308,970,o),
(277,952,qs),
(263,944,o),
(243,919,o),
(243,897,qs),
(243,882,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
9 1 7 0 11 10 7 11 91 0 8 12 1 10 5 8 10 91 0 1 0 2 0 1 2 91 6 1 4 4 5 83 0 5 5 12 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 4 1 6 6 4 96 9 1 7 0 11 10 7 11 91 0 8 12 1 10 5 8 10 91 0 1 0 2 0 1 2 91 0 6 6 5 84 0 5 5 12 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 4 1 6 6 4 96 9 1 7 0 11 10 7 11 91 0 8 12 1 10 5 8 10 91 0 1 0 2 0 1 2 91 0 6 6 5 84 0 5 5 14 67 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
111 109 106 104 101 99 93 91 35 40 52 52 47 44 36 61 36 13 24
CALL[ ]	/* CallFunction */";
};
width = 784;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (16,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (215,372);
ref = tilde;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 6 9 11 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 6 9 11 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
117 115 112 110 107 105 99 97 94 92 89 87 79 76 72 69 65 62 45 52 51 56 37 14 31
CALL[ ]	/* CallFunction */";
};
width = 772;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(170,775,o),
(190,786,o),
(216,790,o),
(240,791,o),
(245,791,qs),
(257,791,o),
(282,795,o),
(282,806,qs),
(282,814,o),
(263,821,o),
(231,821,qs),
(49,821,ls),
(40,821,o),
(12,817,o),
(12,806,qs),
(12,796,o),
(38,791,o),
(49,791,qs),
(59,791,o),
(87,790,o),
(112,786,o),
(129,777,o),
(129,768,qs),
(129,692,o),
(131,542,o),
(131,467,qs),
(131,433,o),
(130,366,o),
(130,334,qs),
(130,279,o),
(137,176,o),
(150,125,qs),
(159,90,o),
(199,37,o),
(256,3,o),
(327,-14,o),
(367,-14,qs),
(426,-14,o),
(524,20,o),
(595,90,o),
(634,198,o),
(634,272,qs),
(634,327,o),
(632,437,o),
(632,492,qs),
(632,547,o),
(634,656,o),
(634,712,qs),
(634,721,o),
(652,732,o),
(676,736,o),
(699,737,o),
(704,737,qs),
(716,737,o),
(741,741,o),
(741,752,qs),
(741,760,o),
(722,767,o),
(690,767,qs),
(508,767,ls),
(499,767,o),
(471,763,o),
(471,752,qs),
(471,742,o),
(497,737,o),
(508,737,qs),
(518,737,o),
(548,736,o),
(575,732,o),
(594,723,o),
(594,714,qs),
(594,272,ls),
(594,225,o),
(570,134,o),
(517,62,o),
(431,18,o),
(368,18,qs),
(295,18,o),
(215,69,o),
(177,153,o),
(170,263,o),
(170,323,qs),
(170,766,ls)
);
},
{
closed = 1;
nodes = (
(225,888,o),
(230,888,qs),
(235,888,o),
(251,896,o),
(273,905,o),
(299,913,o),
(314,913,qs),
(328,913,o),
(360,905,o),
(395,896,o),
(432,889,o),
(451,889,qs),
(472,889,o),
(509,896,o),
(537,909,o),
(553,925,o),
(553,934,qs),
(553,941,o),
(545,951,o),
(540,951,qs),
(535,951,o),
(524,946,o),
(510,938,qs),
(476,921,o),
(450,921,qs),
(435,921,o),
(399,930,o),
(363,940,o),
(328,949,o),
(313,949,qs),
(276,949,o),
(245,931,qs),
(216,914,o),
(216,903,qs),
(216,898,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 6 9 11 91 0 2 3 1 1 0 2 1 92 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 6 9 11 91 0 2 3 1 1 0 2 1 92 7 1 5 5 6 83 0 6 6 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
116 114 111 109 106 104 98 96 93 91 88 86 79 76 72 69 65 62 45 52 52 56 36 14 20
CALL[ ]	/* CallFunction */";
};
width = 755;
}
);
note = Utilde;
unicode = 360;
},
{
glyphname = V;
kernLeft = V;
kernRight = V;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(330,175,o),
(308,256,o),
(280,359,o),
(251,467,o),
(224,574,o),
(202,662,o),
(189,723,o),
(189,731,qs),
(189,745,o),
(219,753,o),
(255,760,o),
(285,774,o),
(285,794,qs),
(285,811,o),
(267,821,o),
(247,821,qs),
(39,821,ls),
(12,821,o),
(-15,809,o),
(-15,793,qs),
(-15,783,o),
(-4,770,o),
(12,763,o),
(32,759,o),
(40,759,qs),
(63,758,o),
(89,745,o),
(95,725,qs),
(299,-9,ls),
(302,-21,o),
(325,-38,o),
(345,-38,qs),
(369,-38,o),
(389,-17,o),
(391,-9,qs),
(401,25,o),
(431,127,o),
(465,248,o),
(503,380,o),
(541,507,o),
(578,622,o),
(593,665,qs),
(600,683,o),
(620,701,o),
(642,703,qs),
(646,703,o),
(665,705,o),
(689,707,o),
(713,709,o),
(721,709,qs),
(734,710,o),
(758,719,o),
(758,736,qs),
(758,756,o),
(741,766,o),
(718,766,qs),
(455,766,ls),
(403,766,o),
(403,731,qs),
(403,713,o),
(424,696,o),
(450,695,qs),
(479,694,o),
(500,689,o),
(500,679,qs),
(500,669,o),
(487,611,o),
(465,530,o),
(437,434,o),
(408,335,o),
(380,243,o),
(358,171,o),
(344,126,o),
(344,125,q),
(344,126,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 4 107 0 1 3 2 2 0 4 1 0 91 0 5 5 6 83 0 6 6 12 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 1 3 2 2 0 4 1 0 91 0 5 5 6 83 0 6 6 12 67 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 2 5 0 0 2 96 0 1 3 1 0 4 1 0 91 0 5 5 6 83 0 6 6 12 67 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 2 5 0 0 2 96 0 4 0 4 107 0 1 3 1 0 4 1 0 91 0 5 5 6 83 0 6 6 12 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
3 1 2 5 0 0 2 96 0 4 0 4 107 0 1 0 0 4 1 0 91 0 5 5 6 83 0 6 6 12 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 2 5 3 0 2 96 0 3 0 0 3 94 0 4 0 4 107 0 1 0 0 4 1 0 91 0 5 5 6 83 0 6 6 12 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 2 5 3 0 2 96 0 3 0 0 3 94 0 4 0 4 107 0 1 0 0 4 1 0 91 0 5 5 6 83 0 6 6 14 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
54 37 44 19 21 51 43 7 22
CALL[ ]	/* CallFunction */";
};
width = 691;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(260,408,qs),
(244,467,o),
(213,582,o),
(189,677,o),
(174,742,o),
(174,751,qs),
(174,765,o),
(204,773,o),
(240,776,o),
(270,785,o),
(270,801,qs),
(270,812,o),
(257,821,o),
(239,821,qs),
(22,821,ls),
(5,821,o),
(-23,815,o),
(-23,801,qs),
(-23,784,o),
(9,775,o),
(23,775,qs),
(57,775,o),
(92,763,o),
(96,743,q),
(308,-9,ls),
(312,-22,o),
(333,-34,o),
(345,-34,qs),
(361,-34,o),
(377,-17,o),
(379,-9,qs),
(389,25,o),
(419,129,o),
(455,253,o),
(494,388,o),
(533,518,o),
(570,634,o),
(586,677,qs),
(593,695,o),
(613,713,o),
(635,715,qs),
(639,715,o),
(656,717,o),
(679,719,o),
(703,721,o),
(714,721,qs),
(724,721,o),
(744,728,o),
(744,742,qs),
(744,757,o),
(728,766,o),
(711,766,qs),
(468,766,ls),
(448,766,o),
(429,755,o),
(429,741,qs),
(429,733,o),
(438,723,o),
(450,718,o),
(463,717,o),
(468,717,qs),
(481,716,o),
(509,714,o),
(509,701,qs),
(509,691,o),
(495,629,o),
(472,540,o),
(443,434,o),
(428,380,qs),
(392,253,o),
(347,99,q),
(298,270,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 1 3 2 2 0 4 1 0 91 0 5 5 6 83 0 6 6 12 67 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 4 107 0 1 3 2 2 0 4 1 0 91 0 5 5 6 83 0 6 6 12 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 4 107 0 1 3 2 2 0 4 1 0 91 0 5 5 6 83 0 6 6 14 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
52 37 44 19 36 54 26 7 22
CALL[ ]	/* CallFunction */";
};
width = 687;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(247,395,qs),
(229,460,o),
(195,588,o),
(168,692,o),
(152,762,o),
(152,771,qs),
(152,783,o),
(182,791,o),
(218,793,o),
(248,798,o),
(248,807,qs),
(248,815,o),
(235,821,o),
(217,821,qs),
(0,821,ls),
(-35,821,o),
(-35,807,qs),
(-35,798,o),
(-13,795,o),
(1,795,qs),
(49,795,o),
(99,783,o),
(104,763,qs),
(321,-9,ls),
(324,-20,o),
(336,-28,o),
(341,-28,qs),
(349,-28,o),
(360,-17,o),
(362,-9,qs),
(372,25,o),
(403,132,o),
(441,260,o),
(482,400,o),
(522,535,o),
(560,654,o),
(576,697,qs),
(583,715,o),
(603,733,o),
(625,735,qs),
(629,735,o),
(646,737,o),
(669,739,o),
(693,741,o),
(704,741,qs),
(724,741,o),
(724,752,qs),
(724,760,o),
(710,766,o),
(701,766,qs),
(458,766,ls),
(438,766,o),
(424,756,o),
(424,751,qs),
(424,740,o),
(448,737,o),
(458,737,qs),
(469,737,o),
(494,737,o),
(515,734,o),
(529,728,o),
(529,721,qs),
(529,711,o),
(513,643,o),
(487,545,o),
(453,427,o),
(436,367,qs),
(395,225,o),
(343,52,q),
(289,242,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 1 3 2 2 0 4 1 0 91 7 1 5 5 6 83 0 6 6 12 67 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 4 0 4 107 0 1 3 2 2 0 4 1 0 91 7 1 5 5 6 83 0 6 6 12 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 4 0 4 107 0 1 3 2 2 0 4 1 0 91 7 1 5 5 6 83 0 6 6 14 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
20 51 37 44 19 35 52 58 8 23
CALL[ ]	/* CallFunction */";
};
width = 682;
}
);
note = V;
unicode = 86;
},
{
glyphname = W;
kernLeft = W;
kernRight = W;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(908,579,o),
(879,476,o),
(845,354,o),
(812,236,o),
(785,132,o),
(779,99,q),
(765,153,o),
(733,269,o),
(695,408,o),
(651,579,o),
(626,690,qs),
(617,730,o),
(594,753,o),
(571,753,qs),
(542,753,o),
(520,713,o),
(513,690,qs),
(507,672,o),
(489,605,o),
(466,520,o),
(441,425,o),
(429,378,qs),
(400,268,o),
(367,140,q),
(350,199,o),
(311,328,o),
(272,454,o),
(235,570,o),
(208,663,o),
(191,726,o),
(191,736,qs),
(191,748,o),
(224,755,o),
(263,761,o),
(296,774,o),
(296,794,qs),
(296,805,o),
(281,821,o),
(263,821,qs),
(14,821,ls),
(-5,821,o),
(-29,808,o),
(-29,793,qs),
(-29,776,o),
(-8,760,o),
(23,757,qs),
(61,753,o),
(94,738,o),
(99,721,qs),
(132,618,o),
(188,434,o),
(241,261,o),
(291,97,o),
(317,13,qs),
(321,1,o),
(340,-17,o),
(363,-17,qs),
(389,-17,o),
(409,0,o),
(414,16,qs),
(440,110,o),
(495,305,o),
(518,385,qs),
(544,478,o),
(570,566,q),
(570,560,o),
(585,505,o),
(608,419,o),
(638,308,o),
(671,182,o),
(704,49,o),
(719,-15,qs),
(725,-40,o),
(760,-54,o),
(777,-54,qs),
(802,-54,o),
(825,-34,o),
(830,-17,qs),
(862,101,o),
(910,275,o),
(951,425,o),
(989,570,o),
(1011,658,qs),
(1019,692,o),
(1060,696,qs),
(1064,696,o),
(1087,698,o),
(1116,700,o),
(1143,702,o),
(1151,702,qs),
(1161,702,o),
(1188,712,o),
(1188,729,qs),
(1188,749,o),
(1165,759,o),
(1148,759,qs),
(893,759,ls),
(861,759,o),
(838,744,o),
(838,726,qs),
(838,707,o),
(861,692,o),
(893,690,qs),
(909,689,o),
(926,678,o),
(926,661,qs),
(926,651,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
100 82 41 3 6 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 5 6 5 107 8 1 1 4 3 2 3 0 6 1 0 91 0 7 7 12 67 0 6 6 21 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 1 0 0 2 96 0 5 6 5 107 8 1 1 4 3 2 0 6 1 0 91 0 7 7 12 67 0 6 6 21 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
3 1 2 1 0 0 2 96 0 5 6 5 107 8 1 1 4 1 0 6 1 0 91 0 7 7 12 67 0 6 6 21 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 8 1 2 1 8 2 104 3 1 2 4 0 2 94 0 4 0 0 4 94 0 5 6 5 107 0 1 0 0 6 1 0 91 0 7 7 12 67 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 8 1 2 1 8 2 104 3 1 2 4 0 2 94 0 4 0 0 4 94 0 5 6 5 107 0 1 0 0 6 1 0 91 0 7 7 14 67 0 6 6 21 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
93 91 68 65 50 48 41 17 17 36 52 34 9 21
CALL[ ]	/* CallFunction */";
};
width = 1131;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(916,591,o),
(885,477,o),
(847,342,o),
(810,213,o),
(780,101,o),
(773,68,q),
(759,122,o),
(724,247,o),
(683,398,o),
(636,579,o),
(611,690,qs),
(604,719,o),
(587,747,o),
(566,747,qs),
(543,747,o),
(525,711,o),
(519,690,qs),
(513,670,o),
(494,601,o),
(470,513,o),
(442,413,o),
(429,364,qs),
(397,249,o),
(361,115,q),
(344,174,o),
(303,309,o),
(261,444,o),
(222,570,o),
(191,672,o),
(173,741,o),
(173,751,qs),
(173,763,o),
(205,770,o),
(242,774,o),
(274,784,o),
(274,800,qs),
(274,810,o),
(261,821,o),
(243,821,qs),
(6,821,ls),
(-11,821,o),
(-31,811,o),
(-31,797,qs),
(-31,784,o),
(-7,775,o),
(7,775,qs),
(40,775,o),
(89,763,o),
(94,743,q),
(129,641,o),
(189,452,o),
(243,273,o),
(296,100,o),
(323,13,qs),
(328,-1,o),
(350,-12,o),
(364,-12,qs),
(378,-12,o),
(397,8,o),
(399,16,qs),
(409,51,o),
(433,137,o),
(460,232,o),
(488,329,o),
(501,375,qs),
(532,481,o),
(565,595,q),
(566,589,o),
(581,530,o),
(606,437,o),
(638,318,o),
(673,187,o),
(709,49,o),
(725,-15,qs),
(731,-38,o),
(759,-51,o),
(773,-51,qs),
(787,-51,o),
(810,-37,o),
(815,-17,qs),
(838,67,o),
(875,201,o),
(906,315,o),
(933,414,o),
(959,510,o),
(985,611,o),
(1000,670,qs),
(1008,704,o),
(1049,708,qs),
(1053,708,o),
(1074,710,o),
(1101,712,o),
(1129,714,o),
(1140,714,qs),
(1150,714,o),
(1170,723,o),
(1170,735,qs),
(1170,753,o),
(1146,759,o),
(1137,759,qs),
(882,759,ls),
(862,759,o),
(848,746,o),
(848,734,qs),
(848,720,o),
(872,710,o),
(882,710,qs),
(889,710,o),
(908,709,o),
(924,704,o),
(936,692,o),
(936,681,qs),
(936,671,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
106 88 45 3 5 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 8 1 0 1 8 0 104 0 4 5 4 107 0 1 3 2 2 0 5 1 0 91 0 6 6 7 83 0 7 7 12 67 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 8 1 0 1 8 0 104 0 4 5 4 107 0 1 3 2 2 0 5 1 0 91 0 6 6 7 83 0 7 7 12 67 0 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 8 1 2 1 8 2 104 0 2 0 0 2 94 0 4 5 4 107 0 1 3 1 0 5 1 0 91 0 6 6 7 83 0 7 7 14 67 0 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
99 97 74 71 67 65 56 54 43 19 36 52 51 9 20
CALL[ ]	/* CallFunction */";
};
width = 1122;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(937,638,o),
(915,554,o),
(887,450,o),
(855,338,o),
(823,225,o),
(795,124,o),
(772,42,o),
(765,17,q),
(751,71,o),
(712,211,o),
(666,379,o),
(615,577,o),
(590,690,qs),
(589,693,o),
(586,708,o),
(578,724,o),
(567,737,o),
(559,737,qs),
(545,737,o),
(534,708,o),
(528,690,qs),
(522,669,o),
(501,594,o),
(474,499,o),
(444,392,o),
(429,340,qs),
(394,217,o),
(352,73,q),
(335,132,o),
(291,276,o),
(246,425,o),
(202,567,o),
(168,682,o),
(147,761,o),
(147,771,qs),
(147,783,o),
(177,791,o),
(213,793,o),
(243,798,o),
(243,807,qs),
(243,815,o),
(230,821,o),
(212,821,qs),
(-5,821,ls),
(-40,821,o),
(-40,807,qs),
(-40,798,o),
(-18,795,o),
(-4,795,qs),
(44,795,o),
(91,783,o),
(98,763,qs),
(133,661,o),
(193,471,o),
(248,287,o),
(303,106,o),
(332,13,qs),
(336,1,o),
(349,-9,o),
(355,-9,qs),
(366,-9,o),
(376,8,o),
(378,16,qs),
(388,51,o),
(413,142,o),
(442,243,o),
(472,349,o),
(487,399,qs),
(520,516,o),
(558,643,q),
(559,637,o),
(576,571,o),
(603,467,o),
(638,336,o),
(676,194,o),
(716,49,o),
(734,-15,qs),
(740,-35,o),
(757,-47,o),
(765,-47,qs),
(772,-47,o),
(789,-37,o),
(794,-17,qs),
(817,67,o),
(855,204,o),
(887,322,o),
(916,426,o),
(942,527,o),
(969,631,o),
(984,690,qs),
(992,724,o),
(1033,728,qs),
(1037,728,o),
(1058,730,o),
(1085,732,o),
(1113,734,o),
(1124,734,qs),
(1144,734,o),
(1144,745,qs),
(1144,753,o),
(1130,759,o),
(1121,759,qs),
(866,759,ls),
(846,759,o),
(832,749,o),
(832,744,qs),
(832,733,o),
(856,730,o),
(866,730,qs),
(877,730,o),
(906,729,o),
(932,724,o),
(950,712,o),
(950,701,qs),
(950,693,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
106 86 44 3 5 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 9 1 0 1 9 0 104 0 4 5 4 107 0 1 3 2 2 0 5 1 0 91 8 1 6 6 7 83 0 7 7 12 67 0 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 9 1 2 1 9 2 104 0 2 0 0 2 94 0 4 5 4 107 0 1 3 1 0 5 1 0 91 8 1 6 6 7 83 0 7 7 14 67 0 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
97 95 77 76 72 69 66 64 55 53 43 19 35 52 51 10 20
CALL[ ]	/* CallFunction */";
};
width = 1109;
}
);
note = W;
unicode = 87;
},
{
glyphname = Wacute;
kernLeft = W;
kernRight = W;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(626,972,o),
(606,972,qs),
(592,972,o),
(553,949,o),
(518,916,o),
(493,882,o),
(493,872,qs),
(493,860,o),
(512,841,o),
(528,841,qs),
(541,841,o),
(581,860,o),
(619,888,o),
(647,921,o),
(647,936,qs),
(647,949,o)
);
},
{
closed = 1;
nodes = (
(908,579,o),
(879,476,o),
(845,354,o),
(812,236,o),
(785,132,o),
(779,99,q),
(765,153,o),
(733,269,o),
(695,408,o),
(651,579,o),
(626,690,qs),
(617,730,o),
(594,753,o),
(571,753,qs),
(542,753,o),
(520,713,o),
(513,690,qs),
(507,672,o),
(489,605,o),
(466,520,o),
(441,425,o),
(429,378,qs),
(400,268,o),
(367,140,q),
(350,199,o),
(311,328,o),
(272,454,o),
(235,570,o),
(208,663,o),
(191,726,o),
(191,736,qs),
(191,748,o),
(224,755,o),
(263,761,o),
(296,774,o),
(296,794,qs),
(296,805,o),
(281,821,o),
(263,821,qs),
(14,821,ls),
(-5,821,o),
(-29,808,o),
(-29,793,qs),
(-29,776,o),
(-8,760,o),
(23,757,qs),
(61,753,o),
(94,738,o),
(99,721,qs),
(132,618,o),
(188,434,o),
(241,261,o),
(291,97,o),
(317,13,qs),
(321,1,o),
(340,-17,o),
(363,-17,qs),
(389,-17,o),
(409,0,o),
(414,16,qs),
(440,110,o),
(495,305,o),
(518,385,qs),
(544,478,o),
(570,566,q),
(570,560,o),
(585,505,o),
(608,419,o),
(638,308,o),
(671,182,o),
(704,49,o),
(719,-15,qs),
(725,-40,o),
(760,-54,o),
(777,-54,qs),
(802,-54,o),
(825,-34,o),
(830,-17,qs),
(862,101,o),
(910,275,o),
(951,425,o),
(989,570,o),
(1011,658,qs),
(1019,692,o),
(1060,696,qs),
(1064,696,o),
(1087,698,o),
(1116,700,o),
(1143,702,o),
(1151,702,qs),
(1161,702,o),
(1188,712,o),
(1188,729,qs),
(1188,749,o),
(1165,759,o),
(1148,759,qs),
(893,759,ls),
(861,759,o),
(838,744,o),
(838,726,qs),
(838,707,o),
(861,692,o),
(893,690,qs),
(909,689,o),
(926,678,o),
(926,661,qs),
(926,651,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
116 98 57 3 8 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 1 0 1 106 0 0 9 0 106 0 7 8 7 107 10 1 3 6 5 4 3 2 8 3 2 91 0 9 9 12 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 0 9 0 106 0 4 3 2 2 4 96 0 7 8 7 107 10 1 3 6 5 2 2 8 3 2 91 0 9 9 12 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 0 9 0 106 5 1 4 3 2 2 4 96 0 7 8 7 107 10 1 3 6 1 2 8 3 2 91 0 9 9 12 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 1 0 1 106 0 0 9 0 106 0 10 3 4 3 10 4 104 5 1 4 6 2 4 94 0 6 2 2 6 94 0 7 8 7 107 0 3 0 2 8 3 2 91 0 9 9 12 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 1 0 1 106 0 0 9 0 106 0 10 3 4 3 10 4 104 5 1 4 6 2 4 94 0 6 2 2 6 94 0 7 8 7 107 0 3 0 2 8 3 2 91 0 9 9 14 67 0 8 8 21 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
109 107 84 81 66 64 41 17 17 36 52 36 38 36 11 23
CALL[ ]	/* CallFunction */";
};
width = 1131;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(617,972,o),
(602,972,qs),
(591,972,o),
(555,950,o),
(521,919,o),
(496,887,o),
(496,877,qs),
(496,867,o),
(509,854,o),
(520,854,qs),
(530,854,o),
(569,872,o),
(606,899,o),
(634,929,o),
(634,941,qs),
(634,955,o)
);
},
{
closed = 1;
nodes = (
(916,591,o),
(885,477,o),
(847,342,o),
(810,213,o),
(780,101,o),
(773,68,q),
(759,122,o),
(724,247,o),
(683,398,o),
(636,579,o),
(611,690,qs),
(604,719,o),
(587,747,o),
(566,747,qs),
(543,747,o),
(525,711,o),
(519,690,qs),
(513,670,o),
(494,601,o),
(470,513,o),
(442,413,o),
(429,364,qs),
(397,249,o),
(361,115,q),
(344,174,o),
(303,309,o),
(261,444,o),
(222,570,o),
(191,672,o),
(173,741,o),
(173,751,qs),
(173,763,o),
(205,770,o),
(242,774,o),
(274,784,o),
(274,800,qs),
(274,810,o),
(261,821,o),
(243,821,qs),
(6,821,ls),
(-11,821,o),
(-31,811,o),
(-31,797,qs),
(-31,784,o),
(-7,775,o),
(7,775,qs),
(40,775,o),
(89,763,o),
(94,743,q),
(129,641,o),
(189,452,o),
(243,273,o),
(296,100,o),
(323,13,qs),
(328,-1,o),
(350,-12,o),
(364,-12,qs),
(378,-12,o),
(397,8,o),
(399,16,qs),
(409,51,o),
(433,137,o),
(460,232,o),
(488,329,o),
(501,375,qs),
(532,481,o),
(565,595,q),
(566,589,o),
(581,530,o),
(606,437,o),
(638,318,o),
(673,187,o),
(709,49,o),
(725,-15,qs),
(731,-38,o),
(759,-51,o),
(773,-51,qs),
(787,-51,o),
(810,-37,o),
(815,-17,qs),
(838,67,o),
(875,201,o),
(906,315,o),
(933,414,o),
(959,510,o),
(985,611,o),
(1000,670,qs),
(1008,704,o),
(1049,708,qs),
(1053,708,o),
(1074,710,o),
(1101,712,o),
(1129,714,o),
(1140,714,qs),
(1150,714,o),
(1170,723,o),
(1170,735,qs),
(1170,753,o),
(1146,759,o),
(1137,759,qs),
(882,759,ls),
(862,759,o),
(848,746,o),
(848,734,qs),
(848,720,o),
(872,710,o),
(882,710,qs),
(889,710,o),
(908,709,o),
(924,704,o),
(936,692,o),
(936,681,qs),
(936,671,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
122 104 61 3 7 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 9 0 106 0 10 3 2 3 10 2 104 0 6 7 6 107 0 3 5 4 2 2 7 3 2 91 0 8 8 9 83 0 9 9 12 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 9 0 106 0 10 3 2 3 10 2 104 0 6 7 6 107 0 3 5 4 2 2 7 3 2 91 0 8 8 9 83 0 9 9 12 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 1 0 1 106 0 0 9 0 106 0 10 3 4 3 10 4 104 0 4 2 2 4 94 0 6 7 6 107 0 3 5 1 2 7 3 2 91 0 8 8 9 83 0 9 9 14 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
115 113 90 87 83 81 72 70 43 19 36 52 53 38 36 11 22
CALL[ ]	/* CallFunction */";
};
width = 1122;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(604,972,o),
(596,972,qs),
(589,972,o),
(557,952,o),
(525,925,o),
(501,895,o),
(501,886,qs),
(501,875,o),
(509,875,qs),
(516,875,o),
(551,893,o),
(587,917,o),
(615,942,o),
(615,950,qs),
(615,964,o)
);
},
{
closed = 1;
nodes = (
(937,638,o),
(915,554,o),
(887,450,o),
(855,338,o),
(823,225,o),
(795,124,o),
(772,42,o),
(765,17,q),
(751,71,o),
(712,211,o),
(666,379,o),
(615,577,o),
(590,690,qs),
(589,693,o),
(586,708,o),
(578,724,o),
(567,737,o),
(559,737,qs),
(545,737,o),
(534,708,o),
(528,690,qs),
(522,669,o),
(501,594,o),
(474,499,o),
(444,392,o),
(429,340,qs),
(394,217,o),
(352,73,q),
(335,132,o),
(291,276,o),
(246,425,o),
(202,567,o),
(168,682,o),
(147,761,o),
(147,771,qs),
(147,783,o),
(177,791,o),
(213,793,o),
(243,798,o),
(243,807,qs),
(243,815,o),
(230,821,o),
(212,821,qs),
(-5,821,ls),
(-40,821,o),
(-40,807,qs),
(-40,798,o),
(-18,795,o),
(-4,795,qs),
(44,795,o),
(91,783,o),
(98,763,qs),
(133,661,o),
(193,471,o),
(248,287,o),
(303,106,o),
(332,13,qs),
(336,1,o),
(349,-9,o),
(355,-9,qs),
(366,-9,o),
(376,8,o),
(378,16,qs),
(388,51,o),
(413,142,o),
(442,243,o),
(472,349,o),
(487,399,qs),
(520,516,o),
(558,643,q),
(559,637,o),
(576,571,o),
(603,467,o),
(638,336,o),
(676,194,o),
(716,49,o),
(734,-15,qs),
(740,-35,o),
(757,-47,o),
(765,-47,qs),
(772,-47,o),
(789,-37,o),
(794,-17,qs),
(817,67,o),
(855,204,o),
(887,322,o),
(916,426,o),
(942,527,o),
(969,631,o),
(984,690,qs),
(992,724,o),
(1033,728,qs),
(1037,728,o),
(1058,730,o),
(1085,732,o),
(1113,734,o),
(1124,734,qs),
(1144,734,o),
(1144,745,qs),
(1144,753,o),
(1130,759,o),
(1121,759,qs),
(866,759,ls),
(846,759,o),
(832,749,o),
(832,744,qs),
(832,733,o),
(856,730,o),
(866,730,qs),
(877,730,o),
(906,729,o),
(932,724,o),
(950,712,o),
(950,701,qs),
(950,693,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
121 101 59 3 7 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 1 106 0 0 9 0 106 0 11 3 2 3 11 2 104 0 6 7 6 107 0 3 5 4 2 2 7 3 2 91 10 1 8 8 9 83 0 9 9 12 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 1 0 1 106 0 0 9 0 106 0 11 3 4 3 11 4 104 0 4 2 2 4 94 0 6 7 6 107 0 3 5 1 2 7 3 2 91 10 1 8 8 9 83 0 9 9 14 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
112 110 92 91 87 84 81 79 70 68 43 19 35 52 53 37 36 12 22
CALL[ ]	/* CallFunction */";
};
width = 1109;
}
);
note = Wacute;
unicode = 7810;
},
{
glyphname = Wcircumflex;
kernLeft = W;
kernRight = W;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(718,844,o),
(718,851,qs),
(718,867,o),
(683,908,o),
(638,946,o),
(594,972,o),
(585,972,qs),
(578,972,o),
(535,947,o),
(489,909,o),
(453,864,o),
(453,844,qs),
(453,839,o),
(460,830,o),
(466,830,qs),
(472,830,o),
(497,837,o),
(530,851,o),
(568,869,o),
(585,880,q),
(602,869,o),
(640,851,o),
(674,837,o),
(700,830,o),
(705,830,qs),
(713,830,o)
);
},
{
closed = 1;
nodes = (
(908,579,o),
(879,476,o),
(845,354,o),
(812,236,o),
(785,132,o),
(779,99,q),
(765,153,o),
(733,269,o),
(695,408,o),
(651,579,o),
(626,690,qs),
(617,730,o),
(594,753,o),
(571,753,qs),
(542,753,o),
(520,713,o),
(513,690,qs),
(507,672,o),
(489,605,o),
(466,520,o),
(441,425,o),
(429,378,qs),
(400,268,o),
(367,140,q),
(350,199,o),
(311,328,o),
(272,454,o),
(235,570,o),
(208,663,o),
(191,726,o),
(191,736,qs),
(191,748,o),
(224,755,o),
(263,761,o),
(296,774,o),
(296,794,qs),
(296,805,o),
(281,821,o),
(263,821,qs),
(14,821,ls),
(-5,821,o),
(-29,808,o),
(-29,793,qs),
(-29,776,o),
(-8,760,o),
(23,757,qs),
(61,753,o),
(94,738,o),
(99,721,qs),
(132,618,o),
(188,434,o),
(241,261,o),
(291,97,o),
(317,13,qs),
(321,1,o),
(340,-17,o),
(363,-17,qs),
(389,-17,o),
(409,0,o),
(414,16,qs),
(440,110,o),
(495,305,o),
(518,385,qs),
(544,478,o),
(570,566,q),
(570,560,o),
(585,505,o),
(608,419,o),
(638,308,o),
(671,182,o),
(704,49,o),
(719,-15,qs),
(725,-40,o),
(760,-54,o),
(777,-54,qs),
(802,-54,o),
(825,-34,o),
(830,-17,qs),
(862,101,o),
(910,275,o),
(951,425,o),
(989,570,o),
(1011,658,qs),
(1019,692,o),
(1060,696,qs),
(1064,696,o),
(1087,698,o),
(1116,700,o),
(1143,702,o),
(1151,702,qs),
(1161,702,o),
(1188,712,o),
(1188,729,qs),
(1188,749,o),
(1165,759,o),
(1148,759,qs),
(893,759,ls),
(861,759,o),
(838,744,o),
(838,726,qs),
(838,707,o),
(861,692,o),
(893,690,qs),
(909,689,o),
(926,678,o),
(926,661,qs),
(926,651,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
5 1 0 2 126 108 67 3 9 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 2 0 2 106 1 12 2 0 10 0 106 0 8 9 8 107 11 1 4 7 6 5 3 3 9 4 3 91 0 10 10 12 67 0 9 9 21 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 2 0 2 106 1 12 2 0 10 0 106 0 5 4 3 3 5 96 0 8 9 8 107 11 1 4 7 6 2 3 9 4 3 91 0 10 10 12 67 0 9 9 21 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 2 0 2 106 1 12 2 0 10 0 106 6 1 5 4 3 3 5 96 0 8 9 8 107 11 1 4 7 1 3 9 4 3 91 0 10 10 12 67 0 9 9 21 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 2 0 2 106 1 12 2 0 10 0 106 0 11 4 5 4 11 5 104 6 1 5 7 3 5 94 0 7 3 3 7 94 0 8 9 8 107 0 4 0 3 9 4 3 91 0 10 10 12 67 0 9 9 21 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 2 0 2 106 1 12 2 0 10 0 106 0 11 4 5 4 11 5 104 6 1 5 7 3 5 94 0 7 3 3 7 94 0 8 9 8 107 0 4 0 3 9 4 3 91 0 10 10 14 67 0 9 9 21 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 119 117 94 91 76 74 58 56 47 46 45 44 43 41 37 34 30 28 19 17 11 9 0 25 1 25 13 15
CALL[ ]	/* CallFunction */";
};
width = 1131;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(705,857,o),
(705,864,qs),
(705,877,o),
(671,915,o),
(626,948,o),
(583,972,o),
(574,972,qs),
(566,972,o),
(524,949,o),
(479,915,o),
(444,876,o),
(444,860,qs),
(444,847,o),
(455,847,qs),
(460,847,o),
(486,855,o),
(519,869,o),
(557,888,o),
(574,898,q),
(591,888,o),
(629,869,o),
(663,855,o),
(689,847,o),
(694,847,qs),
(700,847,o)
);
},
{
closed = 1;
nodes = (
(916,591,o),
(885,477,o),
(847,342,o),
(810,213,o),
(780,101,o),
(773,68,q),
(759,122,o),
(724,247,o),
(683,398,o),
(636,579,o),
(611,690,qs),
(604,719,o),
(587,747,o),
(566,747,qs),
(543,747,o),
(525,711,o),
(519,690,qs),
(513,670,o),
(494,601,o),
(470,513,o),
(442,413,o),
(429,364,qs),
(397,249,o),
(361,115,q),
(344,174,o),
(303,309,o),
(261,444,o),
(222,570,o),
(191,672,o),
(173,741,o),
(173,751,qs),
(173,763,o),
(205,770,o),
(242,774,o),
(274,784,o),
(274,800,qs),
(274,810,o),
(261,821,o),
(243,821,qs),
(6,821,ls),
(-11,821,o),
(-31,811,o),
(-31,797,qs),
(-31,784,o),
(-7,775,o),
(7,775,qs),
(40,775,o),
(89,763,o),
(94,743,q),
(129,641,o),
(189,452,o),
(243,273,o),
(296,100,o),
(323,13,qs),
(328,-1,o),
(350,-12,o),
(364,-12,qs),
(378,-12,o),
(397,8,o),
(399,16,qs),
(409,51,o),
(433,137,o),
(460,232,o),
(488,329,o),
(501,375,qs),
(532,481,o),
(565,595,q),
(566,589,o),
(581,530,o),
(606,437,o),
(638,318,o),
(673,187,o),
(709,49,o),
(725,-15,qs),
(731,-38,o),
(759,-51,o),
(773,-51,qs),
(787,-51,o),
(810,-37,o),
(815,-17,qs),
(838,67,o),
(875,201,o),
(906,315,o),
(933,414,o),
(959,510,o),
(985,611,o),
(1000,670,qs),
(1008,704,o),
(1049,708,qs),
(1053,708,o),
(1074,710,o),
(1101,712,o),
(1129,714,o),
(1140,714,qs),
(1150,714,o),
(1170,723,o),
(1170,735,qs),
(1170,753,o),
(1146,759,o),
(1137,759,qs),
(882,759,ls),
(862,759,o),
(848,746,o),
(848,734,qs),
(848,720,o),
(872,710,o),
(882,710,qs),
(889,710,o),
(908,709,o),
(924,704,o),
(936,692,o),
(936,681,qs),
(936,671,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
5 1 0 2 131 113 70 3 8 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 2 0 2 106 1 12 2 0 10 0 106 0 11 4 3 4 11 3 104 0 7 8 7 107 0 4 6 5 2 3 8 4 3 91 0 9 9 10 83 0 10 10 12 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 2 0 2 106 1 12 2 0 10 0 106 0 11 4 3 4 11 3 104 0 7 8 7 107 0 4 6 5 2 3 8 4 3 91 0 9 9 10 83 0 10 10 12 67 0 8 8 24 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 2 0 2 106 1 12 2 0 10 0 106 0 11 4 5 4 11 5 104 0 5 3 3 5 94 0 7 8 7 107 0 4 6 1 3 8 4 3 91 0 9 9 10 83 0 10 10 14 67 0 8 8 24 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 124 122 99 96 92 90 81 79 61 59 48 47 44 42 38 35 31 28 18 16 11 9 0 24 1 24 13 15
CALL[ ]	/* CallFunction */";
};
width = 1122;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(686,886,qs),
(686,895,o),
(653,925,o),
(610,952,o),
(567,972,o),
(558,972,qs),
(549,972,o),
(508,952,o),
(464,925,o),
(431,895,o),
(431,886,qs),
(431,875,o),
(439,875,qs),
(444,875,o),
(469,885,o),
(503,901,o),
(541,919,o),
(558,928,q),
(575,919,o),
(613,901,o),
(647,885,o),
(673,875,o),
(678,875,qs),
(686,875,o)
);
},
{
closed = 1;
nodes = (
(937,638,o),
(915,554,o),
(887,450,o),
(855,338,o),
(823,225,o),
(795,124,o),
(772,42,o),
(765,17,q),
(751,71,o),
(712,211,o),
(666,379,o),
(615,577,o),
(590,690,qs),
(589,693,o),
(586,708,o),
(578,724,o),
(567,737,o),
(559,737,qs),
(545,737,o),
(534,708,o),
(528,690,qs),
(522,669,o),
(501,594,o),
(474,499,o),
(444,392,o),
(429,340,qs),
(394,217,o),
(352,73,q),
(335,132,o),
(291,276,o),
(246,425,o),
(202,567,o),
(168,682,o),
(147,761,o),
(147,771,qs),
(147,783,o),
(177,791,o),
(213,793,o),
(243,798,o),
(243,807,qs),
(243,815,o),
(230,821,o),
(212,821,qs),
(-5,821,ls),
(-40,821,o),
(-40,807,qs),
(-40,798,o),
(-18,795,o),
(-4,795,qs),
(44,795,o),
(91,783,o),
(98,763,qs),
(133,661,o),
(193,471,o),
(248,287,o),
(303,106,o),
(332,13,qs),
(336,1,o),
(349,-9,o),
(355,-9,qs),
(366,-9,o),
(376,8,o),
(378,16,qs),
(388,51,o),
(413,142,o),
(442,243,o),
(472,349,o),
(487,399,qs),
(520,516,o),
(558,643,q),
(559,637,o),
(576,571,o),
(603,467,o),
(638,336,o),
(676,194,o),
(716,49,o),
(734,-15,qs),
(740,-35,o),
(757,-47,o),
(765,-47,qs),
(772,-47,o),
(789,-37,o),
(794,-17,qs),
(817,67,o),
(855,204,o),
(887,322,o),
(916,426,o),
(942,527,o),
(969,631,o),
(984,690,qs),
(992,724,o),
(1033,728,qs),
(1037,728,o),
(1058,730,o),
(1085,732,o),
(1113,734,o),
(1124,734,qs),
(1144,734,o),
(1144,745,qs),
(1144,753,o),
(1130,759,o),
(1121,759,qs),
(866,759,ls),
(846,759,o),
(832,749,o),
(832,744,qs),
(832,733,o),
(856,730,o),
(866,730,qs),
(877,730,o),
(906,729,o),
(932,724,o),
(950,712,o),
(950,701,qs),
(950,693,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
5 1 0 2 130 110 68 3 8 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 0 2 106 1 13 2 0 10 0 106 0 12 4 3 4 12 3 104 0 7 8 7 107 0 4 6 5 2 3 8 4 3 91 11 1 9 9 10 83 0 10 10 12 67 0 8 8 24 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 2 0 2 106 1 13 2 0 10 0 106 0 12 4 5 4 12 5 104 0 5 3 3 5 94 0 7 8 7 107 0 4 6 1 3 8 4 3 91 11 1 9 9 10 83 0 10 10 14 67 0 8 8 24 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
1 0 121 119 101 100 96 93 90 88 79 77 59 57 46 45 42 40 37 34 30 27 18 16 11 9 0 23 1 23 14 15
CALL[ ]	/* CallFunction */";
};
width = 1109;
}
);
note = Wcircumflex;
unicode = 372;
},
{
glyphname = Wdieresis;
kernLeft = W;
kernRight = W;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(464,841,o),
(489,841,qs),
(500,841,o),
(524,847,o),
(543,863,o),
(555,890,o),
(555,911,qs),
(555,938,o),
(519,972,o),
(496,972,qs),
(478,972,o),
(453,958,o),
(436,938,o),
(429,915,o),
(429,907,qs),
(429,878,o)
);
},
{
closed = 1;
nodes = (
(671,830,o),
(696,830,qs),
(707,830,o),
(731,836,o),
(750,852,o),
(762,879,o),
(762,900,qs),
(762,928,o),
(726,961,o),
(703,961,qs),
(685,961,o),
(660,947,o),
(643,927,o),
(636,904,o),
(636,896,qs),
(636,867,o)
);
},
{
closed = 1;
nodes = (
(908,579,o),
(879,476,o),
(845,354,o),
(812,236,o),
(785,132,o),
(779,99,q),
(765,153,o),
(733,269,o),
(695,408,o),
(651,579,o),
(626,690,qs),
(617,730,o),
(594,753,o),
(571,753,qs),
(542,753,o),
(520,713,o),
(513,690,qs),
(507,672,o),
(489,605,o),
(466,520,o),
(441,425,o),
(429,378,qs),
(400,268,o),
(367,140,q),
(350,199,o),
(311,328,o),
(272,454,o),
(235,570,o),
(208,663,o),
(191,726,o),
(191,736,qs),
(191,748,o),
(224,755,o),
(263,761,o),
(296,774,o),
(296,794,qs),
(296,805,o),
(281,821,o),
(263,821,qs),
(14,821,ls),
(-5,821,o),
(-29,808,o),
(-29,793,qs),
(-29,776,o),
(-8,760,o),
(23,757,qs),
(61,753,o),
(94,738,o),
(99,721,qs),
(132,618,o),
(188,434,o),
(241,261,o),
(291,97,o),
(317,13,qs),
(321,1,o),
(340,-17,o),
(363,-17,qs),
(389,-17,o),
(409,0,o),
(414,16,qs),
(440,110,o),
(495,305,o),
(518,385,qs),
(544,478,o),
(570,566,q),
(570,560,o),
(585,505,o),
(608,419,o),
(638,308,o),
(671,182,o),
(704,49,o),
(719,-15,qs),
(725,-40,o),
(760,-54,o),
(777,-54,qs),
(802,-54,o),
(825,-34,o),
(830,-17,qs),
(862,101,o),
(910,275,o),
(951,425,o),
(989,570,o),
(1011,658,qs),
(1019,692,o),
(1060,696,qs),
(1064,696,o),
(1087,698,o),
(1116,700,o),
(1143,702,o),
(1151,702,qs),
(1161,702,o),
(1188,712,o),
(1188,729,qs),
(1188,749,o),
(1165,759,o),
(1148,759,qs),
(893,759,ls),
(861,759,o),
(838,744,o),
(838,726,qs),
(838,707,o),
(861,692,o),
(893,690,qs),
(909,689,o),
(926,678,o),
(926,661,qs),
(926,651,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
132 114 73 3 10 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 9 10 9 107 2 1 0 3 1 1 11 0 1 91 12 1 5 8 7 6 3 4 10 5 4 91 0 11 11 12 67 0 10 10 21 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 6 5 4 4 6 96 0 9 10 9 107 2 1 0 3 1 1 11 0 1 91 12 1 5 8 7 2 4 10 5 4 91 0 11 11 12 67 0 10 10 21 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 6 5 4 4 6 96 0 9 10 9 107 0 0 0 1 3 0 1 91 0 2 0 3 11 2 3 91 12 1 5 8 7 2 4 10 5 4 91 0 11 11 12 67 0 10 10 21 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
7 1 6 5 4 4 6 96 0 9 10 9 107 0 0 0 1 3 0 1 91 0 2 0 3 11 2 3 91 12 1 5 8 1 4 10 5 4 91 0 11 11 12 67 0 10 10 21 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 12 5 6 5 12 6 104 7 1 6 8 4 6 94 0 8 4 4 8 94 0 9 10 9 107 0 0 0 1 3 0 1 91 0 2 0 3 11 2 3 91 0 5 0 4 10 5 4 91 0 11 11 12 67 0 10 10 21 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 12 5 6 5 12 6 104 7 1 6 8 4 6 94 0 8 4 4 8 94 0 9 10 9 107 0 0 0 1 3 0 1 91 0 2 0 3 11 2 3 91 0 5 0 4 10 5 4 91 0 11 11 14 67 0 10 10 21 10 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
125 123 100 97 82 80 64 62 17 17 36 52 36 38 38 38 36 13 24
CALL[ ]	/* CallFunction */";
};
width = 1131;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(454,859,o),
(474,859,qs),
(493,859,o),
(530,884,o),
(530,920,qs),
(530,943,o),
(501,972,o),
(481,972,qs),
(466,972,o),
(445,960,o),
(431,942,o),
(425,923,o),
(425,916,qs),
(425,891,o)
);
},
{
closed = 1;
nodes = (
(661,847,o),
(681,847,qs),
(700,847,o),
(737,872,o),
(737,908,qs),
(737,931,o),
(708,960,o),
(688,960,qs),
(673,960,o),
(652,948,o),
(638,930,o),
(632,911,o),
(632,904,qs),
(632,879,o)
);
},
{
closed = 1;
nodes = (
(916,591,o),
(885,477,o),
(847,342,o),
(810,213,o),
(780,101,o),
(773,68,q),
(759,122,o),
(724,247,o),
(683,398,o),
(636,579,o),
(611,690,qs),
(604,719,o),
(587,747,o),
(566,747,qs),
(543,747,o),
(525,711,o),
(519,690,qs),
(513,670,o),
(494,601,o),
(470,513,o),
(442,413,o),
(429,364,qs),
(397,249,o),
(361,115,q),
(344,174,o),
(303,309,o),
(261,444,o),
(222,570,o),
(191,672,o),
(173,741,o),
(173,751,qs),
(173,763,o),
(205,770,o),
(242,774,o),
(274,784,o),
(274,800,qs),
(274,810,o),
(261,821,o),
(243,821,qs),
(6,821,ls),
(-11,821,o),
(-31,811,o),
(-31,797,qs),
(-31,784,o),
(-7,775,o),
(7,775,qs),
(40,775,o),
(89,763,o),
(94,743,q),
(129,641,o),
(189,452,o),
(243,273,o),
(296,100,o),
(323,13,qs),
(328,-1,o),
(350,-12,o),
(364,-12,qs),
(378,-12,o),
(397,8,o),
(399,16,qs),
(409,51,o),
(433,137,o),
(460,232,o),
(488,329,o),
(501,375,qs),
(532,481,o),
(565,595,q),
(566,589,o),
(581,530,o),
(606,437,o),
(638,318,o),
(673,187,o),
(709,49,o),
(725,-15,qs),
(731,-38,o),
(759,-51,o),
(773,-51,qs),
(787,-51,o),
(810,-37,o),
(815,-17,qs),
(838,67,o),
(875,201,o),
(906,315,o),
(933,414,o),
(959,510,o),
(985,611,o),
(1000,670,qs),
(1008,704,o),
(1049,708,qs),
(1053,708,o),
(1074,710,o),
(1101,712,o),
(1129,714,o),
(1140,714,qs),
(1150,714,o),
(1170,723,o),
(1170,735,qs),
(1170,753,o),
(1146,759,o),
(1137,759,qs),
(882,759,ls),
(862,759,o),
(848,746,o),
(848,734,qs),
(848,720,o),
(872,710,o),
(882,710,qs),
(889,710,o),
(908,709,o),
(924,704,o),
(936,692,o),
(936,681,qs),
(936,671,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
134 116 73 3 9 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 12 5 4 5 12 4 104 0 8 9 8 107 0 0 0 1 3 0 1 91 0 2 0 3 11 2 3 91 0 5 7 6 2 4 9 5 4 91 0 10 10 11 83 0 11 11 12 67 0 9 9 21 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 12 5 4 5 12 4 104 0 8 9 8 107 0 0 0 1 3 0 1 91 0 2 0 3 11 2 3 91 0 5 7 6 2 4 9 5 4 91 0 10 10 11 83 0 11 11 12 67 0 9 9 24 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 12 5 6 5 12 6 104 0 6 4 4 6 94 0 8 9 8 107 0 0 0 1 3 0 1 91 0 2 0 3 11 2 3 91 0 5 7 1 4 9 5 4 91 0 10 10 11 83 0 11 11 14 67 0 9 9 24 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
127 125 102 99 95 93 84 82 43 19 36 52 53 36 38 36 36 13 24
CALL[ ]	/* CallFunction */";
};
width = 1122;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(439,889,o),
(453,889,qs),
(467,889,o),
(494,908,o),
(494,935,qs),
(494,952,o),
(474,972,o),
(460,972,qs),
(449,972,o),
(434,963,o),
(424,950,o),
(419,936,o),
(419,931,qs),
(419,913,o)
);
},
{
closed = 1;
nodes = (
(646,875,o),
(660,875,qs),
(674,875,o),
(701,894,o),
(701,921,qs),
(701,938,o),
(681,958,o),
(667,958,qs),
(656,958,o),
(641,949,o),
(631,936,o),
(626,922,o),
(626,917,qs),
(626,899,o)
);
},
{
closed = 1;
nodes = (
(937,638,o),
(915,554,o),
(887,450,o),
(855,338,o),
(823,225,o),
(795,124,o),
(772,42,o),
(765,17,q),
(751,71,o),
(712,211,o),
(666,379,o),
(615,577,o),
(590,690,qs),
(589,693,o),
(586,708,o),
(578,724,o),
(567,737,o),
(559,737,qs),
(545,737,o),
(534,708,o),
(528,690,qs),
(522,669,o),
(501,594,o),
(474,499,o),
(444,392,o),
(429,340,qs),
(394,217,o),
(352,73,q),
(335,132,o),
(291,276,o),
(246,425,o),
(202,567,o),
(168,682,o),
(147,761,o),
(147,771,qs),
(147,783,o),
(177,791,o),
(213,793,o),
(243,798,o),
(243,807,qs),
(243,815,o),
(230,821,o),
(212,821,qs),
(-5,821,ls),
(-40,821,o),
(-40,807,qs),
(-40,798,o),
(-18,795,o),
(-4,795,qs),
(44,795,o),
(91,783,o),
(98,763,qs),
(133,661,o),
(193,471,o),
(248,287,o),
(303,106,o),
(332,13,qs),
(336,1,o),
(349,-9,o),
(355,-9,qs),
(366,-9,o),
(376,8,o),
(378,16,qs),
(388,51,o),
(413,142,o),
(442,243,o),
(472,349,o),
(487,399,qs),
(520,516,o),
(558,643,q),
(559,637,o),
(576,571,o),
(603,467,o),
(638,336,o),
(676,194,o),
(716,49,o),
(734,-15,qs),
(740,-35,o),
(757,-47,o),
(765,-47,qs),
(772,-47,o),
(789,-37,o),
(794,-17,qs),
(817,67,o),
(855,204,o),
(887,322,o),
(916,426,o),
(942,527,o),
(969,631,o),
(984,690,qs),
(992,724,o),
(1033,728,qs),
(1037,728,o),
(1058,730,o),
(1085,732,o),
(1113,734,o),
(1124,734,qs),
(1144,734,o),
(1144,745,qs),
(1144,753,o),
(1130,759,o),
(1121,759,qs),
(866,759,ls),
(846,759,o),
(832,749,o),
(832,744,qs),
(832,733,o),
(856,730,o),
(866,730,qs),
(877,730,o),
(906,729,o),
(932,724,o),
(950,712,o),
(950,701,qs),
(950,693,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
134 114 72 3 9 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 13 5 4 5 13 4 104 0 8 9 8 107 0 0 0 1 3 0 1 91 0 2 0 3 11 2 3 91 0 5 7 6 2 4 9 5 4 91 12 1 10 10 11 83 0 11 11 12 67 0 9 9 24 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 13 5 6 5 13 6 104 0 6 4 4 6 94 0 8 9 8 107 0 0 0 1 3 0 1 91 0 2 0 3 11 2 3 91 0 5 7 1 4 9 5 4 91 12 1 10 10 11 83 0 11 11 14 67 0 9 9 24 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
125 123 105 104 100 97 94 92 83 81 43 19 35 52 53 36 38 36 36 14 24
CALL[ ]	/* CallFunction */";
};
width = 1109;
}
);
note = Wdieresis;
unicode = 7812;
},
{
glyphname = Wgrave;
kernLeft = W;
kernRight = W;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(547,888,o),
(585,860,o),
(626,841,o),
(639,841,qs),
(654,841,o),
(674,860,o),
(674,872,qs),
(674,882,o),
(649,916,o),
(613,949,o),
(574,972,o),
(560,972,qs),
(540,972,o),
(519,949,o),
(519,936,qs),
(519,921,o)
);
},
{
closed = 1;
nodes = (
(908,579,o),
(879,476,o),
(845,354,o),
(812,236,o),
(785,132,o),
(779,99,q),
(765,153,o),
(733,269,o),
(695,408,o),
(651,579,o),
(626,690,qs),
(617,730,o),
(594,753,o),
(571,753,qs),
(542,753,o),
(520,713,o),
(513,690,qs),
(507,672,o),
(489,605,o),
(466,520,o),
(441,425,o),
(429,378,qs),
(400,268,o),
(367,140,q),
(350,199,o),
(311,328,o),
(272,454,o),
(235,570,o),
(208,663,o),
(191,726,o),
(191,736,qs),
(191,748,o),
(224,755,o),
(263,761,o),
(296,774,o),
(296,794,qs),
(296,805,o),
(281,821,o),
(263,821,qs),
(14,821,ls),
(-5,821,o),
(-29,808,o),
(-29,793,qs),
(-29,776,o),
(-8,760,o),
(23,757,qs),
(61,753,o),
(94,738,o),
(99,721,qs),
(132,618,o),
(188,434,o),
(241,261,o),
(291,97,o),
(317,13,qs),
(321,1,o),
(340,-17,o),
(363,-17,qs),
(389,-17,o),
(409,0,o),
(414,16,qs),
(440,110,o),
(495,305,o),
(518,385,qs),
(544,478,o),
(570,566,q),
(570,560,o),
(585,505,o),
(608,419,o),
(638,308,o),
(671,182,o),
(704,49,o),
(719,-15,qs),
(725,-40,o),
(760,-54,o),
(777,-54,qs),
(802,-54,o),
(825,-34,o),
(830,-17,qs),
(862,101,o),
(910,275,o),
(951,425,o),
(989,570,o),
(1011,658,qs),
(1019,692,o),
(1060,696,qs),
(1064,696,o),
(1087,698,o),
(1116,700,o),
(1143,702,o),
(1151,702,qs),
(1161,702,o),
(1188,712,o),
(1188,729,qs),
(1188,749,o),
(1165,759,o),
(1148,759,qs),
(893,759,ls),
(861,759,o),
(838,744,o),
(838,726,qs),
(838,707,o),
(861,692,o),
(893,690,qs),
(909,689,o),
(926,678,o),
(926,661,qs),
(926,651,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
116 98 57 3 8 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 1 0 106 0 1 9 1 106 0 7 8 7 107 10 1 3 6 5 4 3 2 8 3 2 91 0 9 9 12 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 0 1 0 106 0 1 9 1 106 0 4 3 2 2 4 96 0 7 8 7 107 10 1 3 6 5 2 2 8 3 2 91 0 9 9 12 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 0 1 0 106 0 1 9 1 106 5 1 4 3 2 2 4 96 0 7 8 7 107 10 1 3 6 1 2 8 3 2 91 0 9 9 12 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 0 1 0 106 0 1 9 1 106 0 10 3 4 3 10 4 104 5 1 4 6 2 4 94 0 6 2 2 6 94 0 7 8 7 107 0 3 0 2 8 3 2 91 0 9 9 12 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 0 1 0 106 0 1 9 1 106 0 10 3 4 3 10 4 104 5 1 4 6 2 4 94 0 6 2 2 6 94 0 7 8 7 107 0 3 0 2 8 3 2 91 0 9 9 14 67 0 8 8 21 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
109 107 84 81 66 64 41 17 17 36 52 38 38 34 11 23
CALL[ ]	/* CallFunction */";
};
width = 1131;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(540,899,o),
(577,872,o),
(615,854,o),
(626,854,qs),
(637,854,o),
(650,867,o),
(650,877,qs),
(650,887,o),
(625,919,o),
(591,950,o),
(555,972,o),
(544,972,qs),
(529,972,o),
(512,955,o),
(512,941,qs),
(512,929,o)
);
},
{
closed = 1;
nodes = (
(916,591,o),
(885,477,o),
(847,342,o),
(810,213,o),
(780,101,o),
(773,68,q),
(759,122,o),
(724,247,o),
(683,398,o),
(636,579,o),
(611,690,qs),
(604,719,o),
(587,747,o),
(566,747,qs),
(543,747,o),
(525,711,o),
(519,690,qs),
(513,670,o),
(494,601,o),
(470,513,o),
(442,413,o),
(429,364,qs),
(397,249,o),
(361,115,q),
(344,174,o),
(303,309,o),
(261,444,o),
(222,570,o),
(191,672,o),
(173,741,o),
(173,751,qs),
(173,763,o),
(205,770,o),
(242,774,o),
(274,784,o),
(274,800,qs),
(274,810,o),
(261,821,o),
(243,821,qs),
(6,821,ls),
(-11,821,o),
(-31,811,o),
(-31,797,qs),
(-31,784,o),
(-7,775,o),
(7,775,qs),
(40,775,o),
(89,763,o),
(94,743,q),
(129,641,o),
(189,452,o),
(243,273,o),
(296,100,o),
(323,13,qs),
(328,-1,o),
(350,-12,o),
(364,-12,qs),
(378,-12,o),
(397,8,o),
(399,16,qs),
(409,51,o),
(433,137,o),
(460,232,o),
(488,329,o),
(501,375,qs),
(532,481,o),
(565,595,q),
(566,589,o),
(581,530,o),
(606,437,o),
(638,318,o),
(673,187,o),
(709,49,o),
(725,-15,qs),
(731,-38,o),
(759,-51,o),
(773,-51,qs),
(787,-51,o),
(810,-37,o),
(815,-17,qs),
(838,67,o),
(875,201,o),
(906,315,o),
(933,414,o),
(959,510,o),
(985,611,o),
(1000,670,qs),
(1008,704,o),
(1049,708,qs),
(1053,708,o),
(1074,710,o),
(1101,712,o),
(1129,714,o),
(1140,714,qs),
(1150,714,o),
(1170,723,o),
(1170,735,qs),
(1170,753,o),
(1146,759,o),
(1137,759,qs),
(882,759,ls),
(862,759,o),
(848,746,o),
(848,734,qs),
(848,720,o),
(872,710,o),
(882,710,qs),
(889,710,o),
(908,709,o),
(924,704,o),
(936,692,o),
(936,681,qs),
(936,671,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
122 104 61 3 7 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 0 1 0 106 0 1 9 1 106 0 10 3 2 3 10 2 104 0 6 7 6 107 0 3 5 4 2 2 7 3 2 91 0 8 8 9 83 0 9 9 12 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 0 1 0 106 0 1 9 1 106 0 10 3 2 3 10 2 104 0 6 7 6 107 0 3 5 4 2 2 7 3 2 91 0 8 8 9 83 0 9 9 12 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 0 1 0 106 0 1 9 1 106 0 10 3 4 3 10 4 104 0 4 2 2 4 94 0 6 7 6 107 0 3 5 1 2 7 3 2 91 0 8 8 9 83 0 9 9 14 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
115 113 90 87 83 81 72 70 43 19 36 52 55 38 34 11 22
CALL[ ]	/* CallFunction */";
};
width = 1122;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(530,917,o),
(566,893,o),
(601,875,o),
(608,875,qs),
(616,875,o),
(616,886,qs),
(616,895,o),
(592,925,o),
(560,952,o),
(528,972,o),
(521,972,qs),
(513,972,o),
(502,964,o),
(502,950,qs),
(502,942,o)
);
},
{
closed = 1;
nodes = (
(937,638,o),
(915,554,o),
(887,450,o),
(855,338,o),
(823,225,o),
(795,124,o),
(772,42,o),
(765,17,q),
(751,71,o),
(712,211,o),
(666,379,o),
(615,577,o),
(590,690,qs),
(589,693,o),
(586,708,o),
(578,724,o),
(567,737,o),
(559,737,qs),
(545,737,o),
(534,708,o),
(528,690,qs),
(522,669,o),
(501,594,o),
(474,499,o),
(444,392,o),
(429,340,qs),
(394,217,o),
(352,73,q),
(335,132,o),
(291,276,o),
(246,425,o),
(202,567,o),
(168,682,o),
(147,761,o),
(147,771,qs),
(147,783,o),
(177,791,o),
(213,793,o),
(243,798,o),
(243,807,qs),
(243,815,o),
(230,821,o),
(212,821,qs),
(-5,821,ls),
(-40,821,o),
(-40,807,qs),
(-40,798,o),
(-18,795,o),
(-4,795,qs),
(44,795,o),
(91,783,o),
(98,763,qs),
(133,661,o),
(193,471,o),
(248,287,o),
(303,106,o),
(332,13,qs),
(336,1,o),
(349,-9,o),
(355,-9,qs),
(366,-9,o),
(376,8,o),
(378,16,qs),
(388,51,o),
(413,142,o),
(442,243,o),
(472,349,o),
(487,399,qs),
(520,516,o),
(558,643,q),
(559,637,o),
(576,571,o),
(603,467,o),
(638,336,o),
(676,194,o),
(716,49,o),
(734,-15,qs),
(740,-35,o),
(757,-47,o),
(765,-47,qs),
(772,-47,o),
(789,-37,o),
(794,-17,qs),
(817,67,o),
(855,204,o),
(887,322,o),
(916,426,o),
(942,527,o),
(969,631,o),
(984,690,qs),
(992,724,o),
(1033,728,qs),
(1037,728,o),
(1058,730,o),
(1085,732,o),
(1113,734,o),
(1124,734,qs),
(1144,734,o),
(1144,745,qs),
(1144,753,o),
(1130,759,o),
(1121,759,qs),
(866,759,ls),
(846,759,o),
(832,749,o),
(832,744,qs),
(832,733,o),
(856,730,o),
(866,730,qs),
(877,730,o),
(906,729,o),
(932,724,o),
(950,712,o),
(950,701,qs),
(950,693,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
121 101 59 3 7 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 0 1 0 106 0 1 9 1 106 0 11 3 2 3 11 2 104 0 6 7 6 107 0 3 5 4 2 2 7 3 2 91 10 1 8 8 9 83 0 9 9 12 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 0 1 0 106 0 1 9 1 106 0 11 3 4 3 11 4 104 0 4 2 2 4 94 0 6 7 6 107 0 3 5 1 2 7 3 2 91 10 1 8 8 9 83 0 9 9 14 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
112 110 92 91 87 84 81 79 70 68 43 19 35 52 55 37 34 12 22
CALL[ ]	/* CallFunction */";
};
width = 1109;
}
);
note = Wgrave;
unicode = 7808;
},
{
glyphname = X;
kernLeft = X;
kernRight = X;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(233,738,o),
(260,744,o),
(282,756,o),
(282,772,qs),
(282,786,o),
(269,799,o),
(251,799,qs),
(52,799,ls),
(29,799,o),
(1,786,o),
(1,772,qs),
(1,753,o),
(24,740,o),
(50,738,qs),
(73,736,o),
(111,725,o),
(119,709,qs),
(273,412,l),
(122,104,ls),
(112,84,o),
(89,72,o),
(71,67,qs),
(67,66,o),
(51,63,o),
(33,60,o),
(19,57,o),
(18,57,qs),
(5,55,o),
(-21,42,o),
(-21,24,qs),
(-21,9,o),
(-3,0,o),
(11,0,qs),
(247,0,ls),
(267,0,o),
(283,12,o),
(283,27,qs),
(283,44,o),
(265,56,o),
(248,58,qs),
(230,60,o),
(204,66,o),
(204,74,qs),
(204,80,o),
(221,121,o),
(246,176,o),
(275,237,o),
(300,289,o),
(317,323,o),
(317,324,q),
(356,249,o),
(388,187,qs),
(401,161,o),
(427,109,o),
(447,67,o),
(459,38,o),
(459,34,qs),
(459,28,o),
(439,24,o),
(415,19,o),
(395,6,o),
(395,-10,qs),
(395,-20,o),
(408,-37,o),
(426,-37,qs),
(678,-37,ls),
(699,-37,o),
(722,-26,o),
(722,-10,qs),
(722,24,o),
(676,24,qs),
(621,24,o),
(557,38,o),
(546,59,qs),
(359,414,l),
(519,720,ls),
(528,737,o),
(546,756,o),
(568,758,qs),
(576,759,o),
(621,759,o),
(642,764,qs),
(653,766,o),
(679,780,o),
(679,794,qs),
(679,810,o),
(662,821,o),
(639,821,qs),
(408,821,ls),
(381,821,o),
(361,810,o),
(361,793,qs),
(361,778,o),
(382,765,o),
(399,763,qs),
(436,757,o),
(436,737,qs),
(436,729,o),
(407,673,o),
(367,602,o),
(327,529,o),
(315,504,q),
(286,559,o),
(263,605,qs),
(253,624,o),
(235,663,o),
(220,695,o),
(211,718,o),
(211,722,qs),
(211,732,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
91 59 34 7 4 5 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 5 1 2 1 5 2 104 0 6 6 14 67 0 1 1 0 83 0 0 0 12 67 0 4 4 13 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 5 1 2 1 5 2 104 0 2 0 3 2 3 87 0 6 6 14 67 0 1 1 0 83 0 0 0 12 67 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 5 1 2 1 5 2 104 0 2 0 3 2 3 87 0 1 1 0 83 0 0 0 12 67 0 6 6 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 5 1 2 1 5 2 104 0 2 0 3 2 3 87 0 1 1 0 83 0 0 0 14 67 0 6 6 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
103 100 83 82 77 74 45 42 39 37 29 28 22 19 7 15
CALL[ ]	/* CallFunction */";
};
width = 689;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(232,749,o),
(266,754,o),
(295,763,o),
(295,777,qs),
(295,790,o),
(282,799,o),
(264,799,qs),
(41,799,ls),
(6,799,o),
(6,777,qs),
(6,762,o),
(28,753,o),
(42,753,qs),
(77,753,o),
(122,739,o),
(132,721,qs),
(289,414,l),
(129,89,l),
(119,72,o),
(101,53,o),
(80,51,qs),
(77,51,o),
(61,49,o),
(42,47,o),
(21,45,o),
(14,45,qs),
(4,45,o),
(-16,35,o),
(-16,24,qs),
(-16,10,o),
(8,0,o),
(17,0,qs),
(261,0,ls),
(281,0,o),
(295,13,o),
(295,25,qs),
(295,39,o),
(275,48,o),
(261,49,qs),
(250,50,o),
(227,50,o),
(208,52,o),
(196,58,o),
(196,65,qs),
(196,69,o),
(215,113,o),
(244,174,o),
(277,243,o),
(306,302,o),
(325,340,o),
(325,341,q),
(370,257,o),
(405,189,qs),
(420,160,o),
(449,104,o),
(472,57,o),
(486,26,o),
(486,22,qs),
(486,16,o),
(465,12,o),
(440,8,o),
(419,-2,o),
(419,-15,qs),
(419,-27,o),
(432,-37,o),
(450,-37,qs),
(677,-37,ls),
(694,-37,o),
(717,-28,o),
(717,-15,qs),
(717,-1,o),
(695,9,o),
(676,9,qs),
(628,9,o),
(564,21,o),
(553,41,qs),
(358,414,l),
(525,732,ls),
(534,749,o),
(552,768,o),
(574,770,qs),
(582,771,o),
(626,773,o),
(647,776,qs),
(658,778,o),
(677,788,o),
(677,799,qs),
(677,813,o),
(658,821,o),
(644,821,qs),
(421,821,ls),
(401,821,o),
(387,810,o),
(387,798,qs),
(387,784,o),
(407,772,o),
(421,772,qs),
(443,772,o),
(458,768,o),
(458,756,qs),
(458,751,o),
(442,716,o),
(418,666,o),
(387,608,o),
(357,552,o),
(331,501,o),
(324,485,q),
(289,549,o),
(263,602,qs),
(252,624,o),
(230,669,o),
(213,705,o),
(203,730,o),
(203,734,qs),
(203,744,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
97 63 37 7 4 5 9 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
2 1 0 0 1 83 0 1 1 12 67 0 9 9 10 83 0 10 10 14 67 8 7 2 5 5 6 83 0 6 6 13 67 0 3 3 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 0 4 3 4 87 2 1 0 0 1 83 0 1 1 12 67 0 9 9 10 83 0 10 10 14 67 8 7 2 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 10 0 9 5 10 9 91 0 3 0 4 3 4 87 2 1 0 0 1 83 0 1 1 12 67 8 7 2 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 7 5 3 5 7 96 0 10 0 9 5 10 9 91 0 3 0 4 3 4 87 2 1 0 0 1 83 0 1 1 14 67 8 1 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
108 105 102 100 93 92 89 87 83 80 74 73 49 46 42 40 32 31 25 22 18 16 11 15
CALL[ ]	/* CallFunction */";
};
width = 685;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(222,769,o),
(258,771,o),
(288,776,o),
(288,785,qs),
(288,793,o),
(275,799,o),
(257,799,qs),
(40,799,ls),
(5,799,o),
(5,785,qs),
(5,776,o),
(27,773,o),
(41,773,qs),
(89,773,o),
(141,761,o),
(151,741,qs),
(316,412,l),
(148,69,ls),
(139,52,o),
(121,33,o),
(99,31,qs),
(95,31,o),
(74,29,o),
(47,27,o),
(18,25,o),
(8,25,qs),
(-12,25,o),
(-12,14,qs),
(-12,6,o),
(2,0,o),
(11,0,qs),
(256,0,ls),
(276,0,o),
(290,10,o),
(290,15,qs),
(290,26,o),
(266,29,o),
(256,29,qs),
(245,29,o),
(220,29,o),
(199,32,o),
(185,38,o),
(185,45,qs),
(185,49,o),
(208,100,o),
(241,172,o),
(281,254,o),
(314,323,o),
(337,369,o),
(337,370,q),
(389,272,o),
(430,194,qs),
(448,161,o),
(481,95,o),
(508,42,o),
(524,6,o),
(524,2,qs),
(524,-4,o),
(494,-7,o),
(457,-9,o),
(427,-14,o),
(427,-23,qs),
(427,-31,o),
(440,-37,o),
(458,-37,qs),
(675,-37,ls),
(710,-37,o),
(710,-23,qs),
(710,-14,o),
(688,-11,o),
(674,-11,qs),
(626,-11,o),
(571,2,o),
(561,21,qs),
(356,414,l),
(534,752,ls),
(543,769,o),
(561,788,o),
(583,790,qs),
(591,791,o),
(633,795,o),
(654,796,qs),
(674,796,o),
(674,807,qs),
(674,815,o),
(660,821,o),
(651,821,qs),
(426,821,ls),
(406,821,o),
(392,811,o),
(392,806,qs),
(392,795,o),
(416,792,o),
(426,792,qs),
(464,792,o),
(497,788,o),
(497,776,qs),
(497,771,o),
(477,728,o),
(447,668,o),
(409,596,o),
(374,528,o),
(344,470,o),
(337,454,q),
(296,532,o),
(264,596,qs),
(250,623,o),
(225,676,o),
(204,720,o),
(192,750,o),
(192,754,qs),
(192,764,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
94 61 36 7 4 6 10 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
2 1 0 0 1 83 0 1 1 12 67 12 1 10 10 11 83 0 11 11 14 67 9 8 2 6 6 7 83 0 7 7 13 67 5 1 3 3 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
5 1 3 0 4 3 4 87 2 1 0 0 1 83 0 1 1 12 67 12 1 10 10 11 83 0 11 11 14 67 9 8 2 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 11 12 1 10 6 11 10 91 5 1 3 0 4 3 4 87 2 1 0 0 1 83 0 1 1 12 67 9 8 2 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 11 12 1 10 6 11 10 91 5 1 3 0 4 3 4 87 2 1 0 0 1 83 0 1 1 14 67 9 8 2 6 6 7 83 0 7 7 13 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
110 109 105 102 99 97 90 89 87 84 81 78 74 71 52 51 47 44 41 39 30 28 25 22 18 16 13 15
CALL[ ]	/* CallFunction */";
};
width = 679;
}
);
note = X;
unicode = 88;
},
{
glyphname = Y;
kernLeft = Y;
kernRight = Y;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(231,751,o),
(258,756,o),
(281,767,o),
(281,783,qs),
(281,795,o),
(260,813,o),
(242,813,qs),
(14,813,ls),
(-3,813,o),
(-32,799,o),
(-32,783,qs),
(-32,766,o),
(-1,751,o),
(17,749,qs),
(67,744,o),
(106,728,o),
(114,712,qs),
(143,658,o),
(182,582,o),
(217,507,o),
(257,418,o),
(289,350,q),
(289,109,ls),
(289,84,o),
(255,66,o),
(229,63,qs),
(201,60,o),
(181,44,o),
(181,30,qs),
(181,10,o),
(207,0,o),
(235,0,qs),
(459,0,ls),
(476,0,o),
(497,11,o),
(497,31,qs),
(497,51,o),
(465,63,o),
(446,63,qs),
(380,63,l),
(380,104,o),
(379,198,o),
(378,239,qs),
(377,287,o),
(377,334,q),
(392,368,o),
(432,450,o),
(477,539,o),
(524,630,o),
(547,674,qs),
(558,694,o),
(576,707,o),
(596,712,qs),
(600,713,o),
(622,715,o),
(648,716,o),
(674,718,o),
(682,718,qs),
(692,718,o),
(719,728,o),
(719,745,qs),
(719,765,o),
(697,775,o),
(679,775,qs),
(439,775,ls),
(414,775,o),
(397,761,o),
(397,744,qs),
(397,727,o),
(419,714,o),
(439,714,qs),
(445,714,o),
(459,709,o),
(459,698,qs),
(459,685,o),
(432,620,o),
(394,542,o),
(353,465,o),
(339,440,q),
(331,456,o),
(306,508,o),
(278,569,o),
(248,632,o),
(224,686,o),
(209,725,o),
(209,731,qs),
(209,743,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
64 41 7 3 4 0 1 66 0 1 3 2 2 0 4 1 0 91 0 6 6 14 67 0 4 4 5 84 0 5 5 13 5 68 80 77 52 47 17 36 52 46 7 21
CALL[ ]	/* CallFunction */";
};
width = 668;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(214,763,o),
(244,767,o),
(270,775,o),
(270,789,qs),
(270,800,o),
(252,813,o),
(234,813,qs),
(6,813,ls),
(-29,813,o),
(-29,789,qs),
(-29,775,o),
(-7,767,o),
(7,767,qs),
(41,767,o),
(100,753,o),
(109,735,qs),
(129,692,o),
(161,629,o),
(187,578,o),
(211,530,o),
(238,475,o),
(271,404,o),
(293,355,q),
(293,94,ls),
(293,77,o),
(281,58,o),
(263,49,o),
(245,48,o),
(239,48,qs),
(200,48,o),
(200,26,qs),
(200,10,o),
(229,0,o),
(251,0,qs),
(461,0,ls),
(471,0,o),
(486,11,o),
(486,28,qs),
(486,43,o),
(462,51,o),
(451,51,qs),
(365,51,l),
(365,93,o),
(364,192,o),
(363,235,qs),
(362,285,o),
(362,334,q),
(377,368,o),
(420,456,o),
(468,551,o),
(518,646,o),
(540,687,qs),
(549,704,o),
(567,723,o),
(589,725,qs),
(593,725,o),
(613,727,o),
(639,729,o),
(666,731,o),
(677,731,qs),
(687,731,o),
(707,740,o),
(707,752,qs),
(707,770,o),
(683,776,o),
(674,776,qs),
(432,776,ls),
(409,776,o),
(393,763,o),
(393,751,qs),
(393,737,o),
(416,727,o),
(432,727,qs),
(445,727,o),
(473,723,o),
(473,711,qs),
(473,702,o),
(455,661,o),
(428,607,o),
(396,545,o),
(365,487,o),
(341,438,o),
(336,423,q),
(329,439,o),
(302,495,o),
(269,562,o),
(234,634,o),
(206,694,o),
(188,737,o),
(188,743,qs),
(188,755,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
67 43 7 3 4 0 1 66 0 1 3 2 2 0 4 1 0 91 0 7 7 8 83 0 8 8 14 67 6 1 4 4 5 83 0 5 5 13 5 68 84 81 78 76 63 60 57 54 50 48 35 34 31 29 25 22 18 16 9 15
CALL[ ]	/* CallFunction */";
};
width = 660;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(188,783,o),
(224,785,o),
(254,790,o),
(254,799,qs),
(254,807,o),
(241,813,o),
(223,813,qs),
(5,813,ls),
(-30,813,o),
(-30,799,qs),
(-30,790,o),
(-8,787,o),
(6,787,qs),
(54,787,o),
(98,774,o),
(109,755,qs),
(143,692,o),
(188,607,o),
(227,525,o),
(269,428,o),
(302,355,q),
(302,74,ls),
(302,57,o),
(287,38,o),
(264,29,o),
(239,28,o),
(229,28,qs),
(220,28,o),
(200,22,o),
(200,13,qs),
(200,5,o),
(227,0,o),
(241,0,qs),
(450,0,ls),
(470,0,o),
(470,13,qs),
(470,21,o),
(451,31,o),
(440,31,qs),
(344,31,l),
(344,76,o),
(343,182,o),
(342,228,qs),
(341,282,o),
(341,334,q),
(356,368,o),
(402,463,o),
(455,565,o),
(508,667,o),
(530,708,qs),
(539,725,o),
(557,744,o),
(579,746,qs),
(583,746,o),
(604,748,o),
(631,750,o),
(659,752,o),
(670,752,qs),
(690,752,o),
(690,763,qs),
(690,771,o),
(676,777,o),
(667,777,qs),
(422,777,ls),
(402,777,o),
(388,767,o),
(388,762,qs),
(388,751,o),
(412,748,o),
(422,748,qs),
(433,748,o),
(458,748,o),
(479,745,o),
(493,739,o),
(493,732,qs),
(493,723,o),
(472,675,o),
(439,610,o),
(400,536,o),
(363,466,o),
(333,410,o),
(327,395,q),
(321,411,o),
(291,474,o),
(253,552,o),
(213,636,o),
(180,707,o),
(158,757,o),
(158,763,qs),
(158,775,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
68 44 7 3 4 0 1 66 0 1 3 2 2 0 4 1 0 91 9 1 7 7 8 83 0 8 8 14 67 6 1 4 4 5 83 0 5 5 13 5 68 88 87 83 80 77 75 64 61 57 54 51 49 36 35 32 30 27 24 20 17 10 15
CALL[ ]	/* CallFunction */";
};
width = 648;
}
);
note = Y;
unicode = 89;
},
{
glyphname = Yacute;
kernLeft = Y;
kernRight = Y;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(451,972,o),
(431,972,qs),
(417,972,o),
(378,948,o),
(343,916,o),
(318,881,o),
(318,871,qs),
(318,859,o),
(338,840,o),
(353,840,qs),
(366,840,o),
(406,859,o),
(444,887,o),
(472,921,o),
(472,935,qs),
(472,949,o)
);
},
{
closed = 1;
nodes = (
(231,751,o),
(258,756,o),
(281,767,o),
(281,783,qs),
(281,795,o),
(260,813,o),
(242,813,qs),
(14,813,ls),
(-3,813,o),
(-32,799,o),
(-32,783,qs),
(-32,766,o),
(-1,751,o),
(17,749,qs),
(67,744,o),
(106,728,o),
(114,712,qs),
(143,658,o),
(182,582,o),
(217,507,o),
(257,418,o),
(289,350,q),
(289,109,ls),
(289,84,o),
(255,66,o),
(229,63,qs),
(201,60,o),
(181,44,o),
(181,30,qs),
(181,10,o),
(207,0,o),
(235,0,qs),
(459,0,ls),
(476,0,o),
(497,11,o),
(497,31,qs),
(497,51,o),
(465,63,o),
(446,63,qs),
(380,63,l),
(380,104,o),
(379,198,o),
(378,239,qs),
(377,287,o),
(377,334,q),
(392,368,o),
(432,450,o),
(477,539,o),
(524,630,o),
(547,674,qs),
(558,694,o),
(576,707,o),
(596,712,qs),
(600,713,o),
(622,715,o),
(648,716,o),
(674,718,o),
(682,718,qs),
(692,718,o),
(719,728,o),
(719,745,qs),
(719,765,o),
(697,775,o),
(679,775,qs),
(439,775,ls),
(414,775,o),
(397,761,o),
(397,744,qs),
(397,727,o),
(419,714,o),
(439,714,qs),
(445,714,o),
(459,709,o),
(459,698,qs),
(459,685,o),
(432,620,o),
(394,542,o),
(353,465,o),
(339,440,q),
(331,456,o),
(306,508,o),
(278,569,o),
(248,632,o),
(224,686,o),
(209,725,o),
(209,731,qs),
(209,743,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
80 57 23 3 6 2 1 66 0 1 0 1 106 0 0 8 0 106 0 3 5 4 2 2 6 3 2 92 0 8 8 14 67 0 6 6 7 84 0 7 7 13 7 68 96 93 71 68 64 62 47 46 45 43 39 36 32 30 38 36 9 17
CALL[ ]	/* CallFunction */";
};
width = 668;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(390,972,o),
(375,972,qs),
(364,972,o),
(328,950,o),
(294,919,o),
(269,887,o),
(269,877,qs),
(269,867,o),
(282,854,o),
(293,854,qs),
(303,854,o),
(342,872,o),
(379,899,o),
(407,929,o),
(407,941,qs),
(407,955,o)
);
},
{
closed = 1;
nodes = (
(214,763,o),
(244,767,o),
(270,775,o),
(270,789,qs),
(270,800,o),
(252,813,o),
(234,813,qs),
(6,813,ls),
(-29,813,o),
(-29,789,qs),
(-29,775,o),
(-7,767,o),
(7,767,qs),
(41,767,o),
(100,753,o),
(109,735,qs),
(129,692,o),
(161,629,o),
(187,578,o),
(211,530,o),
(238,475,o),
(271,404,o),
(293,355,q),
(293,94,ls),
(293,77,o),
(281,58,o),
(263,49,o),
(245,48,o),
(239,48,qs),
(200,48,o),
(200,26,qs),
(200,10,o),
(229,0,o),
(251,0,qs),
(461,0,ls),
(471,0,o),
(486,11,o),
(486,28,qs),
(486,43,o),
(462,51,o),
(451,51,qs),
(365,51,l),
(365,93,o),
(364,192,o),
(363,235,qs),
(362,285,o),
(362,334,q),
(377,368,o),
(420,456,o),
(468,551,o),
(518,646,o),
(540,687,qs),
(549,704,o),
(567,723,o),
(589,725,qs),
(593,725,o),
(613,727,o),
(639,729,o),
(666,731,o),
(677,731,qs),
(687,731,o),
(707,740,o),
(707,752,qs),
(707,770,o),
(683,776,o),
(674,776,qs),
(432,776,ls),
(409,776,o),
(393,763,o),
(393,751,qs),
(393,737,o),
(416,727,o),
(432,727,qs),
(445,727,o),
(473,723,o),
(473,711,qs),
(473,702,o),
(455,661,o),
(428,607,o),
(396,545,o),
(365,487,o),
(341,438,o),
(336,423,q),
(329,439,o),
(302,495,o),
(269,562,o),
(234,634,o),
(206,694,o),
(188,737,o),
(188,743,qs),
(188,755,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
83 59 23 3 6 2 1 66 0 1 0 1 106 0 0 10 0 106 0 3 5 4 2 2 6 3 2 91 0 9 9 10 83 0 10 10 14 67 8 1 6 6 7 84 0 7 7 13 7 68 100 97 94 92 79 76 73 70 66 64 51 50 47 45 41 38 34 32 38 36 11 17
CALL[ ]	/* CallFunction */";
};
width = 660;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(374,971,o),
(366,971,qs),
(359,971,o),
(327,951,o),
(295,924,o),
(271,895,o),
(271,886,qs),
(271,875,o),
(279,875,qs),
(286,875,o),
(321,892,o),
(357,916,o),
(385,941,o),
(385,949,qs),
(385,963,o)
);
},
{
closed = 1;
nodes = (
(188,783,o),
(224,785,o),
(254,790,o),
(254,799,qs),
(254,807,o),
(241,813,o),
(223,813,qs),
(5,813,ls),
(-30,813,o),
(-30,799,qs),
(-30,790,o),
(-8,787,o),
(6,787,qs),
(54,787,o),
(98,774,o),
(109,755,qs),
(143,692,o),
(188,607,o),
(227,525,o),
(269,428,o),
(302,355,q),
(302,74,ls),
(302,57,o),
(287,38,o),
(264,29,o),
(239,28,o),
(229,28,qs),
(220,28,o),
(200,22,o),
(200,13,qs),
(200,5,o),
(227,0,o),
(241,0,qs),
(450,0,ls),
(470,0,o),
(470,13,qs),
(470,21,o),
(451,31,o),
(440,31,qs),
(344,31,l),
(344,76,o),
(343,182,o),
(342,228,qs),
(341,282,o),
(341,334,q),
(356,368,o),
(402,463,o),
(455,565,o),
(508,667,o),
(530,708,qs),
(539,725,o),
(557,744,o),
(579,746,qs),
(583,746,o),
(604,748,o),
(631,750,o),
(659,752,o),
(670,752,qs),
(690,752,o),
(690,763,qs),
(690,771,o),
(676,777,o),
(667,777,qs),
(422,777,ls),
(402,777,o),
(388,767,o),
(388,762,qs),
(388,751,o),
(412,748,o),
(422,748,qs),
(433,748,o),
(458,748,o),
(479,745,o),
(493,739,o),
(493,732,qs),
(493,723,o),
(472,675,o),
(439,610,o),
(400,536,o),
(363,466,o),
(333,410,o),
(327,395,q),
(321,411,o),
(291,474,o),
(253,552,o),
(213,636,o),
(180,707,o),
(158,757,o),
(158,763,qs),
(158,775,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
83 59 22 3 6 2 1 66 0 1 0 1 106 0 0 10 0 106 0 3 5 4 2 2 6 3 2 91 11 1 9 9 10 83 0 10 10 14 67 8 1 6 6 7 84 0 7 7 13 7 68 103 102 98 95 92 90 79 76 72 69 66 64 51 50 47 45 42 39 35 32 37 36 12 17
CALL[ ]	/* CallFunction */";
};
width = 648;
}
);
note = Yacute;
unicode = 221;
},
{
glyphname = Ycircumflex;
kernLeft = Y;
kernRight = Y;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(492,844,o),
(492,851,qs),
(492,867,o),
(457,908,o),
(411,946,o),
(368,972,o),
(359,972,qs),
(352,972,o),
(309,947,o),
(263,909,o),
(227,864,o),
(227,844,qs),
(227,839,o),
(233,830,o),
(240,830,qs),
(245,830,o),
(271,837,o),
(304,851,o),
(342,869,o),
(359,880,q),
(376,869,o),
(414,851,o),
(448,837,o),
(474,830,o),
(479,830,qs),
(487,830,o)
);
},
{
closed = 1;
nodes = (
(231,751,o),
(258,756,o),
(281,767,o),
(281,783,qs),
(281,795,o),
(260,813,o),
(242,813,qs),
(14,813,ls),
(-3,813,o),
(-32,799,o),
(-32,783,qs),
(-32,766,o),
(-1,751,o),
(17,749,qs),
(67,744,o),
(106,728,o),
(114,712,qs),
(143,658,o),
(182,582,o),
(217,507,o),
(257,418,o),
(289,350,q),
(289,109,ls),
(289,84,o),
(255,66,o),
(229,63,qs),
(201,60,o),
(181,44,o),
(181,30,qs),
(181,10,o),
(207,0,o),
(235,0,qs),
(459,0,ls),
(476,0,o),
(497,11,o),
(497,31,qs),
(497,51,o),
(465,63,o),
(446,63,qs),
(380,63,l),
(380,104,o),
(379,198,o),
(378,239,qs),
(377,287,o),
(377,334,q),
(392,368,o),
(432,450,o),
(477,539,o),
(524,630,o),
(547,674,qs),
(558,694,o),
(576,707,o),
(596,712,qs),
(600,713,o),
(622,715,o),
(648,716,o),
(674,718,o),
(682,718,qs),
(692,718,o),
(719,728,o),
(719,745,qs),
(719,765,o),
(697,775,o),
(679,775,qs),
(439,775,ls),
(414,775,o),
(397,761,o),
(397,744,qs),
(397,727,o),
(419,714,o),
(439,714,qs),
(445,714,o),
(459,709,o),
(459,698,qs),
(459,685,o),
(432,620,o),
(394,542,o),
(353,465,o),
(339,440,q),
(331,456,o),
(306,508,o),
(278,569,o),
(248,632,o),
(224,686,o),
(209,725,o),
(209,731,qs),
(209,743,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
5 1 0 2 90 67 33 3 7 3 2 66 0 2 0 2 106 1 10 2 0 9 0 106 0 4 6 5 2 3 7 4 3 91 0 9 9 14 67 0 7 7 8 84 0 8 8 13 8 68 1 0 106 103 81 78 74 72 57 56 55 53 49 46 42 40 19 17 11 9 0 25 1 25 11 15
CALL[ ]	/* CallFunction */";
};
width = 668;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(477,857,o),
(477,864,qs),
(477,877,o),
(443,915,o),
(398,948,o),
(355,972,o),
(346,972,qs),
(338,972,o),
(296,949,o),
(251,915,o),
(216,876,o),
(216,860,qs),
(216,847,o),
(227,847,qs),
(232,847,o),
(258,855,o),
(291,869,o),
(329,888,o),
(346,898,q),
(363,888,o),
(401,869,o),
(435,855,o),
(461,847,o),
(466,847,qs),
(472,847,o)
);
},
{
closed = 1;
nodes = (
(214,763,o),
(244,767,o),
(270,775,o),
(270,789,qs),
(270,800,o),
(252,813,o),
(234,813,qs),
(6,813,ls),
(-29,813,o),
(-29,789,qs),
(-29,775,o),
(-7,767,o),
(7,767,qs),
(41,767,o),
(100,753,o),
(109,735,qs),
(129,692,o),
(161,629,o),
(187,578,o),
(211,530,o),
(238,475,o),
(271,404,o),
(293,355,q),
(293,94,ls),
(293,77,o),
(281,58,o),
(263,49,o),
(245,48,o),
(239,48,qs),
(200,48,o),
(200,26,qs),
(200,10,o),
(229,0,o),
(251,0,qs),
(461,0,ls),
(471,0,o),
(486,11,o),
(486,28,qs),
(486,43,o),
(462,51,o),
(451,51,qs),
(365,51,l),
(365,93,o),
(364,192,o),
(363,235,qs),
(362,285,o),
(362,334,q),
(377,368,o),
(420,456,o),
(468,551,o),
(518,646,o),
(540,687,qs),
(549,704,o),
(567,723,o),
(589,725,qs),
(593,725,o),
(613,727,o),
(639,729,o),
(666,731,o),
(677,731,qs),
(687,731,o),
(707,740,o),
(707,752,qs),
(707,770,o),
(683,776,o),
(674,776,qs),
(432,776,ls),
(409,776,o),
(393,763,o),
(393,751,qs),
(393,737,o),
(416,727,o),
(432,727,qs),
(445,727,o),
(473,723,o),
(473,711,qs),
(473,702,o),
(455,661,o),
(428,607,o),
(396,545,o),
(365,487,o),
(341,438,o),
(336,423,q),
(329,439,o),
(302,495,o),
(269,562,o),
(234,634,o),
(206,694,o),
(188,737,o),
(188,743,qs),
(188,755,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
5 1 0 2 92 68 32 3 7 3 2 66 0 2 0 2 106 1 12 2 0 11 0 106 0 4 6 5 2 3 7 4 3 91 0 10 10 11 83 0 11 11 14 67 9 1 7 7 8 84 0 8 8 13 8 68 1 0 109 106 103 101 88 85 82 79 75 73 60 59 56 54 50 47 43 41 18 16 11 9 0 24 1 24 13 15
CALL[ ]	/* CallFunction */";
};
width = 660;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(456,886,qs),
(456,895,o),
(423,925,o),
(380,952,o),
(337,972,o),
(328,972,qs),
(319,972,o),
(278,952,o),
(234,925,o),
(201,895,o),
(201,886,qs),
(201,875,o),
(209,875,qs),
(214,875,o),
(239,885,o),
(273,901,o),
(311,919,o),
(328,928,q),
(345,919,o),
(383,901,o),
(417,885,o),
(443,875,o),
(448,875,qs),
(456,875,o)
);
},
{
closed = 1;
nodes = (
(188,783,o),
(224,785,o),
(254,790,o),
(254,799,qs),
(254,807,o),
(241,813,o),
(223,813,qs),
(5,813,ls),
(-30,813,o),
(-30,799,qs),
(-30,790,o),
(-8,787,o),
(6,787,qs),
(54,787,o),
(98,774,o),
(109,755,qs),
(143,692,o),
(188,607,o),
(227,525,o),
(269,428,o),
(302,355,q),
(302,74,ls),
(302,57,o),
(287,38,o),
(264,29,o),
(239,28,o),
(229,28,qs),
(220,28,o),
(200,22,o),
(200,13,qs),
(200,5,o),
(227,0,o),
(241,0,qs),
(450,0,ls),
(470,0,o),
(470,13,qs),
(470,21,o),
(451,31,o),
(440,31,qs),
(344,31,l),
(344,76,o),
(343,182,o),
(342,228,qs),
(341,282,o),
(341,334,q),
(356,368,o),
(402,463,o),
(455,565,o),
(508,667,o),
(530,708,qs),
(539,725,o),
(557,744,o),
(579,746,qs),
(583,746,o),
(604,748,o),
(631,750,o),
(659,752,o),
(670,752,qs),
(690,752,o),
(690,763,qs),
(690,771,o),
(676,777,o),
(667,777,qs),
(422,777,ls),
(402,777,o),
(388,767,o),
(388,762,qs),
(388,751,o),
(412,748,o),
(422,748,qs),
(433,748,o),
(458,748,o),
(479,745,o),
(493,739,o),
(493,732,qs),
(493,723,o),
(472,675,o),
(439,610,o),
(400,536,o),
(363,466,o),
(333,410,o),
(327,395,q),
(321,411,o),
(291,474,o),
(253,552,o),
(213,636,o),
(180,707,o),
(158,757,o),
(158,763,qs),
(158,775,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 89 values pushed */
5 1 0 2 92 68 31 3 7 3 2 66 0 2 0 2 106 1 13 2 0 11 0 106 0 4 6 5 2 3 7 4 3 91 12 1 10 10 11 83 0 11 11 14 67 9 1 7 7 8 84 0 8 8 13 8 68 1 0 112 111 107 104 101 99 88 85 81 78 75 73 60 59 56 54 51 48 44 41 18 16 11 9 0 23 1 23 14 15
CALL[ ]	/* CallFunction */";
};
width = 648;
}
);
note = Ycircumflex;
unicode = 374;
},
{
glyphname = Ydieresis;
kernLeft = Y;
kernRight = Y;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(210,841,o),
(235,841,qs),
(246,841,o),
(270,847,o),
(289,863,o),
(301,890,o),
(301,911,qs),
(301,938,o),
(266,972,o),
(242,972,qs),
(224,972,o),
(199,958,o),
(182,938,o),
(175,915,o),
(175,907,qs),
(175,878,o)
);
},
{
closed = 1;
nodes = (
(417,830,o),
(442,830,qs),
(453,830,o),
(477,836,o),
(496,852,o),
(508,879,o),
(508,900,qs),
(508,928,o),
(473,961,o),
(449,961,qs),
(431,961,o),
(406,947,o),
(389,927,o),
(382,904,o),
(382,896,qs),
(382,867,o)
);
},
{
closed = 1;
nodes = (
(231,751,o),
(258,756,o),
(281,767,o),
(281,783,qs),
(281,795,o),
(260,813,o),
(242,813,qs),
(14,813,ls),
(-3,813,o),
(-32,799,o),
(-32,783,qs),
(-32,766,o),
(-1,751,o),
(17,749,qs),
(67,744,o),
(106,728,o),
(114,712,qs),
(143,658,o),
(182,582,o),
(217,507,o),
(257,418,o),
(289,350,q),
(289,109,ls),
(289,84,o),
(255,66,o),
(229,63,qs),
(201,60,o),
(181,44,o),
(181,30,qs),
(181,10,o),
(207,0,o),
(235,0,qs),
(459,0,ls),
(476,0,o),
(497,11,o),
(497,31,qs),
(497,51,o),
(465,63,o),
(446,63,qs),
(380,63,l),
(380,104,o),
(379,198,o),
(378,239,qs),
(377,287,o),
(377,334,q),
(392,368,o),
(432,450,o),
(477,539,o),
(524,630,o),
(547,674,qs),
(558,694,o),
(576,707,o),
(596,712,qs),
(600,713,o),
(622,715,o),
(648,716,o),
(674,718,o),
(682,718,qs),
(692,718,o),
(719,728,o),
(719,745,qs),
(719,765,o),
(697,775,o),
(679,775,qs),
(439,775,ls),
(414,775,o),
(397,761,o),
(397,744,qs),
(397,727,o),
(419,714,o),
(439,714,qs),
(445,714,o),
(459,709,o),
(459,698,qs),
(459,685,o),
(432,620,o),
(394,542,o),
(353,465,o),
(339,440,q),
(331,456,o),
(306,508,o),
(278,569,o),
(248,632,o),
(224,686,o),
(209,725,o),
(209,731,qs),
(209,743,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
96 73 39 3 8 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
2 1 0 3 1 1 10 0 1 91 0 5 7 6 2 4 8 5 4 91 0 10 10 14 67 0 8 8 9 84 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 10 2 3 91 0 5 7 6 2 4 8 5 4 91 0 10 10 14 67 0 8 8 9 84 0 9 9 13 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
112 109 87 84 80 78 63 62 61 59 55 52 48 46 38 38 38 36 11 19
CALL[ ]	/* CallFunction */";
};
width = 668;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(210,859,o),
(230,859,qs),
(249,859,o),
(286,884,o),
(286,920,qs),
(286,943,o),
(257,972,o),
(237,972,qs),
(222,972,o),
(201,960,o),
(187,942,o),
(181,923,o),
(181,916,qs),
(181,891,o)
);
},
{
closed = 1;
nodes = (
(417,847,o),
(437,847,qs),
(456,847,o),
(493,872,o),
(493,908,qs),
(493,931,o),
(464,960,o),
(444,960,qs),
(429,960,o),
(408,948,o),
(394,930,o),
(388,911,o),
(388,904,qs),
(388,879,o)
);
},
{
closed = 1;
nodes = (
(214,763,o),
(244,767,o),
(270,775,o),
(270,789,qs),
(270,800,o),
(252,813,o),
(234,813,qs),
(6,813,ls),
(-29,813,o),
(-29,789,qs),
(-29,775,o),
(-7,767,o),
(7,767,qs),
(41,767,o),
(100,753,o),
(109,735,qs),
(129,692,o),
(161,629,o),
(187,578,o),
(211,530,o),
(238,475,o),
(271,404,o),
(293,355,q),
(293,94,ls),
(293,77,o),
(281,58,o),
(263,49,o),
(245,48,o),
(239,48,qs),
(200,48,o),
(200,26,qs),
(200,10,o),
(229,0,o),
(251,0,qs),
(461,0,ls),
(471,0,o),
(486,11,o),
(486,28,qs),
(486,43,o),
(462,51,o),
(451,51,qs),
(365,51,l),
(365,93,o),
(364,192,o),
(363,235,qs),
(362,285,o),
(362,334,q),
(377,368,o),
(420,456,o),
(468,551,o),
(518,646,o),
(540,687,qs),
(549,704,o),
(567,723,o),
(589,725,qs),
(593,725,o),
(613,727,o),
(639,729,o),
(666,731,o),
(677,731,qs),
(687,731,o),
(707,740,o),
(707,752,qs),
(707,770,o),
(683,776,o),
(674,776,qs),
(432,776,ls),
(409,776,o),
(393,763,o),
(393,751,qs),
(393,737,o),
(416,727,o),
(432,727,qs),
(445,727,o),
(473,723,o),
(473,711,qs),
(473,702,o),
(455,661,o),
(428,607,o),
(396,545,o),
(365,487,o),
(341,438,o),
(336,423,q),
(329,439,o),
(302,495,o),
(269,562,o),
(234,634,o),
(206,694,o),
(188,737,o),
(188,743,qs),
(188,755,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
95 71 35 3 8 4 1 66 0 0 0 1 3 0 1 91 0 2 0 3 12 2 3 91 0 5 7 6 2 4 8 5 4 91 0 11 11 12 83 0 12 12 14 67 10 1 8 8 9 83 0 9 9 13 9 68 112 109 106 104 91 88 85 82 78 76 63 62 59 57 53 50 46 44 36 38 36 36 13 19
CALL[ ]	/* CallFunction */";
};
width = 660;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(209,889,o),
(223,889,qs),
(237,889,o),
(264,908,o),
(264,935,qs),
(264,952,o),
(244,972,o),
(230,972,qs),
(219,972,o),
(204,963,o),
(194,950,o),
(189,936,o),
(189,931,qs),
(189,913,o)
);
},
{
closed = 1;
nodes = (
(416,875,o),
(430,875,qs),
(444,875,o),
(471,894,o),
(471,921,qs),
(471,938,o),
(451,958,o),
(437,958,qs),
(426,958,o),
(411,949,o),
(401,936,o),
(396,922,o),
(396,917,qs),
(396,899,o)
);
},
{
closed = 1;
nodes = (
(188,783,o),
(224,785,o),
(254,790,o),
(254,799,qs),
(254,807,o),
(241,813,o),
(223,813,qs),
(5,813,ls),
(-30,813,o),
(-30,799,qs),
(-30,790,o),
(-8,787,o),
(6,787,qs),
(54,787,o),
(98,774,o),
(109,755,qs),
(143,692,o),
(188,607,o),
(227,525,o),
(269,428,o),
(302,355,q),
(302,74,ls),
(302,57,o),
(287,38,o),
(264,29,o),
(239,28,o),
(229,28,qs),
(220,28,o),
(200,22,o),
(200,13,qs),
(200,5,o),
(227,0,o),
(241,0,qs),
(450,0,ls),
(470,0,o),
(470,13,qs),
(470,21,o),
(451,31,o),
(440,31,qs),
(344,31,l),
(344,76,o),
(343,182,o),
(342,228,qs),
(341,282,o),
(341,334,q),
(356,368,o),
(402,463,o),
(455,565,o),
(508,667,o),
(530,708,qs),
(539,725,o),
(557,744,o),
(579,746,qs),
(583,746,o),
(604,748,o),
(631,750,o),
(659,752,o),
(670,752,qs),
(690,752,o),
(690,763,qs),
(690,771,o),
(676,777,o),
(667,777,qs),
(422,777,ls),
(402,777,o),
(388,767,o),
(388,762,qs),
(388,751,o),
(412,748,o),
(422,748,qs),
(433,748,o),
(458,748,o),
(479,745,o),
(493,739,o),
(493,732,qs),
(493,723,o),
(472,675,o),
(439,610,o),
(400,536,o),
(363,466,o),
(333,410,o),
(327,395,q),
(321,411,o),
(291,474,o),
(253,552,o),
(213,636,o),
(180,707,o),
(158,757,o),
(158,763,qs),
(158,775,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
96 72 35 3 8 4 1 66 0 0 0 1 3 0 1 91 0 2 0 3 12 2 3 91 0 5 7 6 2 4 8 5 4 91 13 1 11 11 12 83 0 12 12 14 67 10 1 8 8 9 83 0 9 9 13 9 68 116 115 111 108 105 103 92 89 85 82 79 77 64 63 60 58 55 52 48 45 36 38 36 36 14 19
CALL[ ]	/* CallFunction */";
};
width = 648;
}
);
note = Ydieresis;
unicode = 376;
},
{
glyphname = Ygrave;
kernLeft = Y;
kernRight = Y;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(295,888,o),
(333,860,o),
(374,841,o),
(387,841,qs),
(402,841,o),
(422,860,o),
(422,872,qs),
(422,882,o),
(397,916,o),
(361,949,o),
(322,972,o),
(308,972,qs),
(288,972,o),
(267,949,o),
(267,936,qs),
(267,921,o)
);
},
{
closed = 1;
nodes = (
(231,751,o),
(258,756,o),
(281,767,o),
(281,783,qs),
(281,795,o),
(260,813,o),
(242,813,qs),
(14,813,ls),
(-3,813,o),
(-32,799,o),
(-32,783,qs),
(-32,766,o),
(-1,751,o),
(17,749,qs),
(67,744,o),
(106,728,o),
(114,712,qs),
(143,658,o),
(182,582,o),
(217,507,o),
(257,418,o),
(289,350,q),
(289,109,ls),
(289,84,o),
(255,66,o),
(229,63,qs),
(201,60,o),
(181,44,o),
(181,30,qs),
(181,10,o),
(207,0,o),
(235,0,qs),
(459,0,ls),
(476,0,o),
(497,11,o),
(497,31,qs),
(497,51,o),
(465,63,o),
(446,63,qs),
(380,63,l),
(380,104,o),
(379,198,o),
(378,239,qs),
(377,287,o),
(377,334,q),
(392,368,o),
(432,450,o),
(477,539,o),
(524,630,o),
(547,674,qs),
(558,694,o),
(576,707,o),
(596,712,qs),
(600,713,o),
(622,715,o),
(648,716,o),
(674,718,o),
(682,718,qs),
(692,718,o),
(719,728,o),
(719,745,qs),
(719,765,o),
(697,775,o),
(679,775,qs),
(439,775,ls),
(414,775,o),
(397,761,o),
(397,744,qs),
(397,727,o),
(419,714,o),
(439,714,qs),
(445,714,o),
(459,709,o),
(459,698,qs),
(459,685,o),
(432,620,o),
(394,542,o),
(353,465,o),
(339,440,q),
(331,456,o),
(306,508,o),
(278,569,o),
(248,632,o),
(224,686,o),
(209,725,o),
(209,731,qs),
(209,743,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
80 57 23 3 6 2 1 66 0 0 1 0 106 0 1 8 1 106 0 3 5 4 2 2 6 3 2 91 0 8 8 14 67 0 6 6 7 84 0 7 7 13 7 68 96 93 71 68 64 62 47 46 45 43 39 36 32 30 38 34 9 17
CALL[ ]	/* CallFunction */";
};
width = 668;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(297,899,o),
(334,872,o),
(372,854,o),
(383,854,qs),
(394,854,o),
(407,867,o),
(407,877,qs),
(407,887,o),
(382,919,o),
(348,950,o),
(312,972,o),
(301,972,qs),
(286,972,o),
(269,955,o),
(269,941,qs),
(269,929,o)
);
},
{
closed = 1;
nodes = (
(214,763,o),
(244,767,o),
(270,775,o),
(270,789,qs),
(270,800,o),
(252,813,o),
(234,813,qs),
(6,813,ls),
(-29,813,o),
(-29,789,qs),
(-29,775,o),
(-7,767,o),
(7,767,qs),
(41,767,o),
(100,753,o),
(109,735,qs),
(129,692,o),
(161,629,o),
(187,578,o),
(211,530,o),
(238,475,o),
(271,404,o),
(293,355,q),
(293,94,ls),
(293,77,o),
(281,58,o),
(263,49,o),
(245,48,o),
(239,48,qs),
(200,48,o),
(200,26,qs),
(200,10,o),
(229,0,o),
(251,0,qs),
(461,0,ls),
(471,0,o),
(486,11,o),
(486,28,qs),
(486,43,o),
(462,51,o),
(451,51,qs),
(365,51,l),
(365,93,o),
(364,192,o),
(363,235,qs),
(362,285,o),
(362,334,q),
(377,368,o),
(420,456,o),
(468,551,o),
(518,646,o),
(540,687,qs),
(549,704,o),
(567,723,o),
(589,725,qs),
(593,725,o),
(613,727,o),
(639,729,o),
(666,731,o),
(677,731,qs),
(687,731,o),
(707,740,o),
(707,752,qs),
(707,770,o),
(683,776,o),
(674,776,qs),
(432,776,ls),
(409,776,o),
(393,763,o),
(393,751,qs),
(393,737,o),
(416,727,o),
(432,727,qs),
(445,727,o),
(473,723,o),
(473,711,qs),
(473,702,o),
(455,661,o),
(428,607,o),
(396,545,o),
(365,487,o),
(341,438,o),
(336,423,q),
(329,439,o),
(302,495,o),
(269,562,o),
(234,634,o),
(206,694,o),
(188,737,o),
(188,743,qs),
(188,755,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
83 59 23 3 6 2 1 66 0 0 1 0 106 0 1 10 1 106 0 3 5 4 2 2 6 3 2 91 0 9 9 10 83 0 10 10 14 67 8 1 6 6 7 84 0 7 7 13 7 68 100 97 94 92 79 76 73 70 66 64 51 50 47 45 41 38 34 32 38 34 11 17
CALL[ ]	/* CallFunction */";
};
width = 660;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(300,917,o),
(336,893,o),
(371,875,o),
(378,875,qs),
(386,875,o),
(386,886,qs),
(386,895,o),
(362,925,o),
(330,952,o),
(298,972,o),
(291,972,qs),
(283,972,o),
(272,964,o),
(272,950,qs),
(272,942,o)
);
},
{
closed = 1;
nodes = (
(188,783,o),
(224,785,o),
(254,790,o),
(254,799,qs),
(254,807,o),
(241,813,o),
(223,813,qs),
(5,813,ls),
(-30,813,o),
(-30,799,qs),
(-30,790,o),
(-8,787,o),
(6,787,qs),
(54,787,o),
(98,774,o),
(109,755,qs),
(143,692,o),
(188,607,o),
(227,525,o),
(269,428,o),
(302,355,q),
(302,74,ls),
(302,57,o),
(287,38,o),
(264,29,o),
(239,28,o),
(229,28,qs),
(220,28,o),
(200,22,o),
(200,13,qs),
(200,5,o),
(227,0,o),
(241,0,qs),
(450,0,ls),
(470,0,o),
(470,13,qs),
(470,21,o),
(451,31,o),
(440,31,qs),
(344,31,l),
(344,76,o),
(343,182,o),
(342,228,qs),
(341,282,o),
(341,334,q),
(356,368,o),
(402,463,o),
(455,565,o),
(508,667,o),
(530,708,qs),
(539,725,o),
(557,744,o),
(579,746,qs),
(583,746,o),
(604,748,o),
(631,750,o),
(659,752,o),
(670,752,qs),
(690,752,o),
(690,763,qs),
(690,771,o),
(676,777,o),
(667,777,qs),
(422,777,ls),
(402,777,o),
(388,767,o),
(388,762,qs),
(388,751,o),
(412,748,o),
(422,748,qs),
(433,748,o),
(458,748,o),
(479,745,o),
(493,739,o),
(493,732,qs),
(493,723,o),
(472,675,o),
(439,610,o),
(400,536,o),
(363,466,o),
(333,410,o),
(327,395,q),
(321,411,o),
(291,474,o),
(253,552,o),
(213,636,o),
(180,707,o),
(158,757,o),
(158,763,qs),
(158,775,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
83 59 22 3 6 2 1 66 0 0 1 0 106 0 1 10 1 106 0 3 5 4 2 2 6 3 2 91 11 1 9 9 10 83 0 10 10 14 67 8 1 6 6 7 84 0 7 7 13 7 68 103 102 98 95 92 90 79 76 72 69 66 64 51 50 47 45 42 39 35 32 37 34 12 17
CALL[ ]	/* CallFunction */";
};
width = 648;
}
);
note = Ygrave;
unicode = 7922;
},
{
glyphname = Ytilde;
kernLeft = Y;
kernRight = Y;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(231,751,o),
(258,756,o),
(281,767,o),
(281,783,qs),
(281,795,o),
(260,813,o),
(242,813,qs),
(14,813,ls),
(-3,813,o),
(-32,799,o),
(-32,783,qs),
(-32,766,o),
(-1,751,o),
(17,749,qs),
(67,744,o),
(106,728,o),
(114,712,qs),
(143,658,o),
(182,582,o),
(217,507,o),
(257,418,o),
(289,350,q),
(289,109,ls),
(289,84,o),
(255,66,o),
(229,63,qs),
(201,60,o),
(181,44,o),
(181,30,qs),
(181,10,o),
(207,0,o),
(235,0,qs),
(459,0,ls),
(476,0,o),
(497,11,o),
(497,31,qs),
(497,51,o),
(465,63,o),
(446,63,qs),
(380,63,l),
(380,104,o),
(379,198,o),
(378,239,qs),
(377,287,o),
(377,334,q),
(392,368,o),
(432,450,o),
(477,539,o),
(524,630,o),
(547,674,qs),
(558,694,o),
(576,707,o),
(596,712,qs),
(600,713,o),
(622,715,o),
(648,716,o),
(674,718,o),
(682,718,qs),
(692,718,o),
(719,728,o),
(719,745,qs),
(719,765,o),
(697,775,o),
(679,775,qs),
(439,775,ls),
(414,775,o),
(397,761,o),
(397,744,qs),
(397,727,o),
(419,714,o),
(439,714,qs),
(445,714,o),
(459,709,o),
(459,698,qs),
(459,685,o),
(432,620,o),
(394,542,o),
(353,465,o),
(339,440,q),
(331,456,o),
(306,508,o),
(278,569,o),
(248,632,o),
(224,686,o),
(209,725,o),
(209,731,qs),
(209,743,o)
);
},
{
closed = 1;
nodes = (
(185,861,o),
(194,861,qs),
(201,861,o),
(219,869,o),
(239,878,o),
(263,886,o),
(278,886,qs),
(292,886,o),
(324,878,o),
(359,869,o),
(396,862,o),
(415,862,qs),
(426,862,o),
(464,869,o),
(500,886,o),
(526,915,o),
(526,937,qs),
(526,953,o),
(509,972,o),
(504,972,qs),
(497,972,o),
(474,959,qs),
(460,951,o),
(428,942,o),
(414,942,qs),
(399,942,o),
(363,951,o),
(327,961,o),
(292,970,o),
(277,970,qs),
(240,970,o),
(209,952,qs),
(195,944,o),
(175,919,o),
(175,897,qs),
(175,882,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
64 41 7 3 4 0 1 66 9 1 7 0 11 10 7 11 91 0 8 12 1 10 6 8 10 91 0 1 3 2 2 0 4 1 0 91 0 6 6 14 67 0 4 4 5 84 0 5 5 13 5 68 121 119 116 114 111 109 103 101 98 96 93 91 80 77 52 47 17 36 52 46 13 21
CALL[ ]	/* CallFunction */";
};
width = 668;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
ref = .ttfautohint;
},
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (152,372);
ref = tilde;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 90 values pushed */
68 44 8 3 4 0 1 66 11 1 9 0 13 12 9 13 91 0 10 14 1 12 8 10 12 91 0 1 3 2 2 0 4 1 0 91 0 7 7 8 83 0 8 8 14 67 6 1 4 4 5 83 0 5 5 13 5 68 126 124 121 119 116 114 108 106 103 101 98 96 85 82 79 77 64 61 58 55 51 49 36 35 32 30 26 23 19 17 15 26
CALL[ ]	/* CallFunction */";
};
width = 660;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(188,783,o),
(224,785,o),
(254,790,o),
(254,799,qs),
(254,807,o),
(241,813,o),
(223,813,qs),
(5,813,ls),
(-30,813,o),
(-30,799,qs),
(-30,790,o),
(-8,787,o),
(6,787,qs),
(54,787,o),
(98,774,o),
(109,755,qs),
(143,692,o),
(188,607,o),
(227,525,o),
(269,428,o),
(302,355,q),
(302,74,ls),
(302,57,o),
(287,38,o),
(264,29,o),
(239,28,o),
(229,28,qs),
(220,28,o),
(200,22,o),
(200,13,qs),
(200,5,o),
(227,0,o),
(241,0,qs),
(450,0,ls),
(470,0,o),
(470,13,qs),
(470,21,o),
(451,31,o),
(440,31,qs),
(344,31,l),
(344,76,o),
(343,182,o),
(342,228,qs),
(341,282,o),
(341,334,q),
(356,368,o),
(402,463,o),
(455,565,o),
(508,667,o),
(530,708,qs),
(539,725,o),
(557,744,o),
(579,746,qs),
(583,746,o),
(604,748,o),
(631,750,o),
(659,752,o),
(670,752,qs),
(690,752,o),
(690,763,qs),
(690,771,o),
(676,777,o),
(667,777,qs),
(422,777,ls),
(402,777,o),
(388,767,o),
(388,762,qs),
(388,751,o),
(412,748,o),
(422,748,qs),
(433,748,o),
(458,748,o),
(479,745,o),
(493,739,o),
(493,732,qs),
(493,723,o),
(472,675,o),
(439,610,o),
(400,536,o),
(363,466,o),
(333,410,o),
(327,395,q),
(321,411,o),
(291,474,o),
(253,552,o),
(213,636,o),
(180,707,o),
(158,757,o),
(158,763,qs),
(158,775,o)
);
},
{
closed = 1;
nodes = (
(169,888,o),
(174,888,qs),
(179,888,o),
(195,896,o),
(217,905,o),
(243,913,o),
(258,913,qs),
(272,913,o),
(304,905,o),
(339,896,o),
(376,889,o),
(395,889,qs),
(416,889,o),
(453,896,o),
(481,909,o),
(497,925,o),
(497,934,qs),
(497,941,o),
(489,951,o),
(484,951,qs),
(479,951,o),
(468,946,o),
(454,938,qs),
(420,921,o),
(394,921,qs),
(379,921,o),
(343,930,o),
(307,940,o),
(272,949,o),
(257,949,qs),
(220,949,o),
(189,931,qs),
(160,914,o),
(160,903,qs),
(160,898,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 93 values pushed */
68 44 7 3 4 0 1 66 12 1 10 0 14 13 10 14 91 0 11 15 1 13 8 11 13 91 0 1 3 2 2 0 4 1 0 91 9 1 7 7 8 83 0 8 8 14 67 6 1 4 4 5 83 0 5 5 13 5 68 123 121 118 116 113 111 105 103 100 98 95 93 88 87 83 80 77 75 64 61 57 54 51 49 36 35 32 30 27 24 20 17 16 15
CALL[ ]	/* CallFunction */";
};
width = 648;
}
);
note = Ytilde;
unicode = 7928;
},
{
glyphname = Z;
kernLeft = Z;
kernRight = Z;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(605,317,o),
(581,317,qs),
(567,317,o),
(550,307,o),
(541,293,o),
(539,275,o),
(539,268,qs),
(539,257,o),
(537,218,o),
(534,174,o),
(531,132,o),
(529,117,qs),
(527,98,o),
(501,83,o),
(469,83,qs),
(187,83,ls),
(175,83,o),
(167,87,o),
(167,93,qs),
(167,95,o),
(212,168,o),
(285,281,o),
(376,422,o),
(467,564,o),
(549,693,o),
(577,738,q),
(578,741,o),
(589,759,o),
(601,781,o),
(611,802,o),
(611,807,qs),
(611,816,o),
(600,821,o),
(589,821,qs),
(563,821,o),
(504,820,o),
(442,820,o),
(382,819,o),
(357,819,qs),
(306,819,o),
(205,821,o),
(154,821,qs),
(120,821,o),
(79,818,o),
(56,809,o),
(49,793,o),
(49,780,qs),
(49,757,o),
(50,713,o),
(50,690,qs),
(50,667,o),
(49,630,o),
(49,607,qs),
(49,599,o),
(53,581,o),
(63,566,o),
(81,555,o),
(95,555,qs),
(118,555,o),
(132,589,o),
(132,626,qs),
(132,633,o),
(132,652,o),
(133,672,o),
(133,689,o),
(133,694,qs),
(133,718,o),
(146,737,o),
(175,737,qs),
(419,737,ls),
(436,737,o),
(455,736,o),
(465,732,o),
(467,726,o),
(467,721,qs),
(467,716,o),
(433,658,o),
(377,569,o),
(305,459,o),
(228,343,o),
(152,230,o),
(89,136,o),
(45,71,o),
(38,61,qs),
(27,44,o),
(19,27,o),
(19,19,qs),
(19,7,o),
(40,0,o),
(72,0,qs),
(101,0,o),
(171,0,o),
(244,1,o),
(314,1,o),
(343,1,qs),
(401,1,o),
(517,0,o),
(575,0,qs),
(597,0,o),
(611,12,o),
(611,31,qs),
(611,39,o),
(612,81,o),
(615,134,o),
(617,191,o),
(620,240,o),
(621,272,o),
(621,273,qs),
(621,290,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 1 1 3 83 0 3 3 12 67 0 4 4 0 84 0 0 0 13 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 1 1 3 83 0 3 3 14 67 0 4 4 0 84 0 0 0 13 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
107 105 94 91 75 65 51 49 40 36 169 6 16
CALL[ ]	/* CallFunction */";
};
width = 659;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(590,319,o),
(574,319,qs),
(553,319,o),
(539,291,o),
(539,276,qs),
(539,263,o),
(536,217,o),
(532,166,o),
(528,116,o),
(526,99,qs),
(524,86,o),
(514,72,o),
(498,66,o),
(477,65,o),
(466,65,qs),
(154,65,ls),
(142,65,o),
(134,69,o),
(134,75,qs),
(134,77,o),
(161,121,o),
(208,193,o),
(270,288,o),
(339,394,o),
(412,505,o),
(479,610,o),
(537,703,o),
(558,738,q),
(559,741,o),
(571,759,o),
(584,781,o),
(594,799,o),
(594,802,qs),
(594,816,o),
(562,821,o),
(542,821,qs),
(491,821,o),
(389,819,o),
(338,819,qs),
(287,819,o),
(186,821,o),
(135,821,qs),
(109,821,o),
(77,820,o),
(58,812,o),
(51,795,o),
(51,780,qs),
(51,757,o),
(52,713,o),
(52,690,qs),
(52,667,o),
(51,624,o),
(51,601,qs),
(51,586,o),
(64,555,o),
(87,555,qs),
(104,555,o),
(118,583,o),
(118,620,qs),
(118,629,o),
(118,655,o),
(119,682,o),
(119,706,o),
(119,712,qs),
(119,736,o),
(132,755,o),
(161,755,qs),
(423,755,ls),
(441,755,o),
(460,754,o),
(469,750,o),
(471,744,o),
(471,739,qs),
(471,733,o),
(437,673,o),
(381,582,o),
(309,468,o),
(232,350,o),
(155,234,o),
(92,139,o),
(47,72,o),
(40,61,qs),
(33,50,o),
(25,39,o),
(20,31,o),
(19,24,o),
(19,19,qs),
(19,7,o),
(56,0,o),
(93,0,qs),
(151,0,o),
(266,1,o),
(324,1,qs),
(382,1,o),
(498,0,o),
(556,0,qs),
(576,0,o),
(592,8,o),
(592,31,qs),
(592,39,o),
(594,82,o),
(597,137,o),
(600,196,o),
(603,247,o),
(605,280,o),
(605,281,qs),
(605,298,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 1 1 3 83 0 3 3 12 67 0 4 4 0 84 0 0 0 13 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 1 1 3 83 0 3 3 14 67 0 4 4 0 84 0 0 0 13 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
105 103 93 89 71 62 51 49 40 36 137 6 16
CALL[ ]	/* CallFunction */";
};
width = 642;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(566,309,o),
(561,309,qs),
(553,309,o),
(542,291,o),
(542,276,qs),
(542,261,o),
(539,207,o),
(535,147,o),
(531,89,o),
(529,69,qs),
(528,56,o),
(518,42,o),
(501,36,o),
(481,35,o),
(469,35,qs),
(107,35,ls),
(95,35,o),
(87,39,o),
(87,45,qs),
(87,47,o),
(116,93,o),
(166,168,o),
(231,267,o),
(304,378,o),
(380,495,o),
(450,605,o),
(510,702,o),
(531,738,q),
(532,741,o),
(544,759,o),
(557,781,o),
(567,799,o),
(567,802,qs),
(567,816,o),
(535,821,o),
(515,821,qs),
(464,821,o),
(362,819,o),
(311,819,qs),
(260,819,o),
(159,821,o),
(108,821,qs),
(91,821,o),
(70,820,o),
(58,812,o),
(54,795,o),
(54,780,qs),
(54,757,o),
(55,713,o),
(55,690,qs),
(55,667,o),
(54,624,o),
(54,601,qs),
(54,586,o),
(61,565,o),
(72,565,qs),
(83,565,o),
(91,583,o),
(91,620,qs),
(91,631,o),
(91,666,o),
(92,702,o),
(92,734,o),
(92,742,qs),
(92,766,o),
(105,785,o),
(134,785,qs),
(454,785,ls),
(472,785,o),
(491,784,o),
(500,780,o),
(502,774,o),
(502,769,qs),
(502,763,o),
(466,700,o),
(406,605,o),
(328,487,o),
(246,363,o),
(165,242,o),
(98,142,o),
(50,72,o),
(43,61,qs),
(36,50,o),
(28,39,o),
(23,31,o),
(22,24,o),
(22,19,qs),
(22,7,o),
(44,0,o),
(66,0,qs),
(124,0,o),
(239,1,o),
(297,1,qs),
(355,1,o),
(471,0,o),
(529,0,qs),
(549,0,o),
(565,8,o),
(565,31,qs),
(565,39,o),
(567,82,o),
(570,137,o),
(573,196,o),
(576,247,o),
(578,280,o),
(578,281,qs),
(578,298,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 1 1 3 83 0 3 3 12 67 0 4 4 0 83 0 0 0 13 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 1 1 3 83 0 3 3 14 67 0 4 4 0 83 0 0 0 13 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
105 103 93 89 71 62 51 49 40 36 137 6 16
CALL[ ]	/* CallFunction */";
};
width = 618;
}
);
note = Z;
unicode = 90;
},
{
glyphname = Zacute;
kernLeft = Z;
kernRight = Z;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(407,972,o),
(387,972,qs),
(373,972,o),
(334,949,o),
(298,916,o),
(273,882,o),
(273,872,qs),
(273,860,o),
(293,841,o),
(308,841,qs),
(321,841,o),
(362,860,o),
(400,888,o),
(428,921,o),
(428,936,qs),
(428,949,o)
);
},
{
closed = 1;
nodes = (
(605,317,o),
(581,317,qs),
(567,317,o),
(550,307,o),
(541,293,o),
(539,275,o),
(539,268,qs),
(539,257,o),
(537,218,o),
(534,174,o),
(531,132,o),
(529,117,qs),
(527,98,o),
(501,83,o),
(469,83,qs),
(187,83,ls),
(175,83,o),
(167,87,o),
(167,93,qs),
(167,95,o),
(212,168,o),
(285,281,o),
(376,422,o),
(467,564,o),
(549,693,o),
(577,738,q),
(578,741,o),
(589,759,o),
(601,781,o),
(611,802,o),
(611,807,qs),
(611,816,o),
(600,821,o),
(589,821,qs),
(563,821,o),
(504,820,o),
(442,820,o),
(382,819,o),
(357,819,qs),
(306,819,o),
(205,821,o),
(154,821,qs),
(120,821,o),
(79,818,o),
(56,809,o),
(49,793,o),
(49,780,qs),
(49,757,o),
(50,713,o),
(50,690,qs),
(50,667,o),
(49,630,o),
(49,607,qs),
(49,599,o),
(53,581,o),
(63,566,o),
(81,555,o),
(95,555,qs),
(118,555,o),
(132,589,o),
(132,626,qs),
(132,633,o),
(132,652,o),
(133,672,o),
(133,689,o),
(133,694,qs),
(133,718,o),
(146,737,o),
(175,737,qs),
(419,737,ls),
(436,737,o),
(455,736,o),
(465,732,o),
(467,726,o),
(467,721,qs),
(467,716,o),
(433,658,o),
(377,569,o),
(305,459,o),
(228,343,o),
(152,230,o),
(89,136,o),
(45,71,o),
(38,61,qs),
(27,44,o),
(19,27,o),
(19,19,qs),
(19,7,o),
(40,0,o),
(72,0,qs),
(101,0,o),
(171,0,o),
(244,1,o),
(314,1,o),
(343,1,qs),
(401,1,o),
(517,0,o),
(575,0,qs),
(597,0,o),
(611,12,o),
(611,31,qs),
(611,39,o),
(612,81,o),
(615,134,o),
(617,191,o),
(620,240,o),
(621,272,o),
(621,273,qs),
(621,290,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 1 106 0 0 5 0 106 0 4 3 7 3 4 7 104 0 7 6 3 7 6 102 0 3 3 5 83 0 5 5 12 67 0 6 6 2 84 0 2 2 13 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 1 106 0 0 5 0 106 0 4 3 7 3 4 7 104 0 7 6 3 7 6 102 0 3 3 5 83 0 5 5 14 67 0 6 6 2 84 0 2 2 13 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
123 121 110 107 91 81 67 65 56 52 171 38 36 8 18
CALL[ ]	/* CallFunction */";
};
width = 659;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(383,972,o),
(368,972,qs),
(357,972,o),
(321,950,o),
(287,919,o),
(262,887,o),
(262,877,qs),
(262,867,o),
(275,854,o),
(286,854,qs),
(296,854,o),
(335,872,o),
(372,899,o),
(400,929,o),
(400,941,qs),
(400,955,o)
);
},
{
closed = 1;
nodes = (
(590,319,o),
(574,319,qs),
(553,319,o),
(539,291,o),
(539,276,qs),
(539,263,o),
(536,217,o),
(532,166,o),
(528,116,o),
(526,99,qs),
(524,86,o),
(514,72,o),
(498,66,o),
(477,65,o),
(466,65,qs),
(154,65,ls),
(142,65,o),
(134,69,o),
(134,75,qs),
(134,77,o),
(161,121,o),
(208,193,o),
(270,288,o),
(339,394,o),
(412,505,o),
(479,610,o),
(537,703,o),
(558,738,q),
(559,741,o),
(571,759,o),
(584,781,o),
(594,799,o),
(594,802,qs),
(594,816,o),
(562,821,o),
(542,821,qs),
(491,821,o),
(389,819,o),
(338,819,qs),
(287,819,o),
(186,821,o),
(135,821,qs),
(109,821,o),
(77,820,o),
(58,812,o),
(51,795,o),
(51,780,qs),
(51,757,o),
(52,713,o),
(52,690,qs),
(52,667,o),
(51,624,o),
(51,601,qs),
(51,586,o),
(64,555,o),
(87,555,qs),
(104,555,o),
(118,583,o),
(118,620,qs),
(118,629,o),
(118,655,o),
(119,682,o),
(119,706,o),
(119,712,qs),
(119,736,o),
(132,755,o),
(161,755,qs),
(423,755,ls),
(441,755,o),
(460,754,o),
(469,750,o),
(471,744,o),
(471,739,qs),
(471,733,o),
(437,673,o),
(381,582,o),
(309,468,o),
(232,350,o),
(155,234,o),
(92,139,o),
(47,72,o),
(40,61,qs),
(33,50,o),
(25,39,o),
(20,31,o),
(19,24,o),
(19,19,qs),
(19,7,o),
(56,0,o),
(93,0,qs),
(151,0,o),
(266,1,o),
(324,1,qs),
(382,1,o),
(498,0,o),
(556,0,qs),
(576,0,o),
(592,8,o),
(592,31,qs),
(592,39,o),
(594,82,o),
(597,137,o),
(600,196,o),
(603,247,o),
(605,280,o),
(605,281,qs),
(605,298,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 1 106 0 0 5 0 106 0 4 3 7 3 4 7 104 0 7 6 3 7 6 102 0 3 3 5 83 0 5 5 12 67 0 6 6 2 84 0 2 2 13 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 1 106 0 0 5 0 106 0 4 3 7 3 4 7 104 0 7 6 3 7 6 102 0 3 3 5 83 0 5 5 14 67 0 6 6 2 84 0 2 2 13 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
121 119 109 105 87 78 67 65 56 52 139 38 36 8 18
CALL[ ]	/* CallFunction */";
};
width = 642;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(349,972,o),
(341,972,qs),
(334,972,o),
(302,952,o),
(270,925,o),
(246,895,o),
(246,886,qs),
(246,875,o),
(254,875,qs),
(261,875,o),
(296,893,o),
(332,917,o),
(360,942,o),
(360,950,qs),
(360,964,o)
);
},
{
closed = 1;
nodes = (
(566,309,o),
(561,309,qs),
(553,309,o),
(542,291,o),
(542,276,qs),
(542,261,o),
(539,207,o),
(535,147,o),
(531,89,o),
(529,69,qs),
(528,56,o),
(518,42,o),
(501,36,o),
(481,35,o),
(469,35,qs),
(107,35,ls),
(95,35,o),
(87,39,o),
(87,45,qs),
(87,47,o),
(116,93,o),
(166,168,o),
(231,267,o),
(304,378,o),
(380,495,o),
(450,605,o),
(510,702,o),
(531,738,q),
(532,741,o),
(544,759,o),
(557,781,o),
(567,799,o),
(567,802,qs),
(567,816,o),
(535,821,o),
(515,821,qs),
(464,821,o),
(362,819,o),
(311,819,qs),
(260,819,o),
(159,821,o),
(108,821,qs),
(91,821,o),
(70,820,o),
(58,812,o),
(54,795,o),
(54,780,qs),
(54,757,o),
(55,713,o),
(55,690,qs),
(55,667,o),
(54,624,o),
(54,601,qs),
(54,586,o),
(61,565,o),
(72,565,qs),
(83,565,o),
(91,583,o),
(91,620,qs),
(91,631,o),
(91,666,o),
(92,702,o),
(92,734,o),
(92,742,qs),
(92,766,o),
(105,785,o),
(134,785,qs),
(454,785,ls),
(472,785,o),
(491,784,o),
(500,780,o),
(502,774,o),
(502,769,qs),
(502,763,o),
(466,700,o),
(406,605,o),
(328,487,o),
(246,363,o),
(165,242,o),
(98,142,o),
(50,72,o),
(43,61,qs),
(36,50,o),
(28,39,o),
(23,31,o),
(22,24,o),
(22,19,qs),
(22,7,o),
(44,0,o),
(66,0,qs),
(124,0,o),
(239,1,o),
(297,1,qs),
(355,1,o),
(471,0,o),
(529,0,qs),
(549,0,o),
(565,8,o),
(565,31,qs),
(565,39,o),
(567,82,o),
(570,137,o),
(573,196,o),
(576,247,o),
(578,280,o),
(578,281,qs),
(578,298,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 1 106 0 0 5 0 106 0 4 3 7 3 4 7 104 0 7 6 3 7 6 102 0 3 3 5 83 0 5 5 12 67 0 6 6 2 83 0 2 2 13 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 1 106 0 0 5 0 106 0 4 3 7 3 4 7 104 0 7 6 3 7 6 102 0 3 3 5 83 0 5 5 14 67 0 6 6 2 83 0 2 2 13 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
120 118 108 104 86 77 66 64 55 51 139 37 36 8 18
CALL[ ]	/* CallFunction */";
};
width = 618;
}
);
note = Zacute;
unicode = 377;
},
{
glyphname = Zcaron;
kernLeft = Z;
kernRight = Z;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(430,965,o),
(396,951,o),
(358,933,o),
(341,922,q),
(324,933,o),
(286,951,o),
(253,965,o),
(227,972,o),
(222,972,qs),
(215,972,o),
(209,963,o),
(209,958,qs),
(209,938,o),
(245,894,o),
(291,855,o),
(334,830,o),
(341,830,qs),
(350,830,o),
(393,856,o),
(439,893,o),
(474,935,o),
(474,951,qs),
(474,958,o),
(469,972,o),
(461,972,qs),
(456,972,o)
);
},
{
closed = 1;
nodes = (
(605,317,o),
(581,317,qs),
(567,317,o),
(550,307,o),
(541,293,o),
(539,275,o),
(539,268,qs),
(539,257,o),
(537,218,o),
(534,174,o),
(531,132,o),
(529,117,qs),
(527,98,o),
(501,83,o),
(469,83,qs),
(187,83,ls),
(175,83,o),
(167,87,o),
(167,93,qs),
(167,95,o),
(212,168,o),
(285,281,o),
(376,422,o),
(467,564,o),
(549,693,o),
(577,738,q),
(578,741,o),
(589,759,o),
(601,781,o),
(611,802,o),
(611,807,qs),
(611,816,o),
(600,821,o),
(589,821,qs),
(563,821,o),
(504,820,o),
(442,820,o),
(382,819,o),
(357,819,qs),
(306,819,o),
(205,821,o),
(154,821,qs),
(120,821,o),
(79,818,o),
(56,809,o),
(49,793,o),
(49,780,qs),
(49,757,o),
(50,713,o),
(50,690,qs),
(50,667,o),
(49,630,o),
(49,607,qs),
(49,599,o),
(53,581,o),
(63,566,o),
(81,555,o),
(95,555,qs),
(118,555,o),
(132,589,o),
(132,626,qs),
(132,633,o),
(132,652,o),
(133,672,o),
(133,689,o),
(133,694,qs),
(133,718,o),
(146,737,o),
(175,737,qs),
(419,737,ls),
(436,737,o),
(455,736,o),
(465,732,o),
(467,726,o),
(467,721,qs),
(467,716,o),
(433,658,o),
(377,569,o),
(305,459,o),
(228,343,o),
(152,230,o),
(89,136,o),
(45,71,o),
(38,61,qs),
(27,44,o),
(19,27,o),
(19,19,qs),
(19,7,o),
(40,0,o),
(72,0,qs),
(101,0,o),
(171,0,o),
(244,1,o),
(314,1,o),
(343,1,qs),
(401,1,o),
(517,0,o),
(575,0,qs),
(597,0,o),
(611,12,o),
(611,31,qs),
(611,39,o),
(612,81,o),
(615,134,o),
(617,191,o),
(620,240,o),
(621,272,o),
(621,273,qs),
(621,290,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
2 9 2 0 1 0 106 0 1 6 1 106 0 5 4 8 4 5 8 104 0 8 7 4 8 7 102 0 4 4 6 83 0 6 6 12 67 0 7 7 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
2 9 2 0 1 0 106 0 1 6 1 106 0 5 4 8 4 5 8 104 0 8 7 4 8 7 102 0 4 4 6 83 0 6 6 14 67 0 7 7 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
1 0 133 131 120 117 101 91 77 75 66 62 45 35 17 15 9 7 0 25 1 25 10 15
CALL[ ]	/* CallFunction */";
};
width = 659;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(413,964,o),
(379,950,o),
(341,931,o),
(324,921,q),
(307,931,o),
(269,950,o),
(236,964,o),
(210,972,o),
(205,972,qs),
(194,972,o),
(194,959,qs),
(194,943,o),
(229,904,o),
(274,870,o),
(316,847,o),
(324,847,qs),
(333,847,o),
(376,871,o),
(421,904,o),
(455,941,o),
(455,955,qs),
(455,962,o),
(450,972,o),
(444,972,qs),
(439,972,o)
);
},
{
closed = 1;
nodes = (
(590,319,o),
(574,319,qs),
(553,319,o),
(539,291,o),
(539,276,qs),
(539,263,o),
(536,217,o),
(532,166,o),
(528,116,o),
(526,99,qs),
(524,86,o),
(514,72,o),
(498,66,o),
(477,65,o),
(466,65,qs),
(154,65,ls),
(142,65,o),
(134,69,o),
(134,75,qs),
(134,77,o),
(161,121,o),
(208,193,o),
(270,288,o),
(339,394,o),
(412,505,o),
(479,610,o),
(537,703,o),
(558,738,q),
(559,741,o),
(571,759,o),
(584,781,o),
(594,799,o),
(594,802,qs),
(594,816,o),
(562,821,o),
(542,821,qs),
(491,821,o),
(389,819,o),
(338,819,qs),
(287,819,o),
(186,821,o),
(135,821,qs),
(109,821,o),
(77,820,o),
(58,812,o),
(51,795,o),
(51,780,qs),
(51,757,o),
(52,713,o),
(52,690,qs),
(52,667,o),
(51,624,o),
(51,601,qs),
(51,586,o),
(64,555,o),
(87,555,qs),
(104,555,o),
(118,583,o),
(118,620,qs),
(118,629,o),
(118,655,o),
(119,682,o),
(119,706,o),
(119,712,qs),
(119,736,o),
(132,755,o),
(161,755,qs),
(423,755,ls),
(441,755,o),
(460,754,o),
(469,750,o),
(471,744,o),
(471,739,qs),
(471,733,o),
(437,673,o),
(381,582,o),
(309,468,o),
(232,350,o),
(155,234,o),
(92,139,o),
(47,72,o),
(40,61,qs),
(33,50,o),
(25,39,o),
(20,31,o),
(19,24,o),
(19,19,qs),
(19,7,o),
(56,0,o),
(93,0,qs),
(151,0,o),
(266,1,o),
(324,1,qs),
(382,1,o),
(498,0,o),
(556,0,qs),
(576,0,o),
(592,8,o),
(592,31,qs),
(592,39,o),
(594,82,o),
(597,137,o),
(600,196,o),
(603,247,o),
(605,280,o),
(605,281,qs),
(605,298,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
2 9 2 0 1 0 106 0 1 6 1 106 0 5 4 8 4 5 8 104 0 8 7 4 8 7 102 0 4 4 6 83 0 6 6 12 67 0 7 7 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
2 9 2 0 1 0 106 0 1 6 1 106 0 5 4 8 4 5 8 104 0 8 7 4 8 7 102 0 4 4 6 83 0 6 6 14 67 0 7 7 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
1 0 130 128 118 114 96 87 76 74 65 61 42 34 16 14 9 7 0 24 1 24 10 15
CALL[ ]	/* CallFunction */";
};
width = 642;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(389,962,o),
(355,947,o),
(317,929,o),
(300,920,q),
(283,929,o),
(245,947,o),
(212,962,o),
(186,972,o),
(181,972,qs),
(173,972,o),
(173,961,qs),
(173,952,o),
(206,923,o),
(250,896,o),
(291,876,o),
(300,876,qs),
(309,876,o),
(352,896,o),
(395,923,o),
(428,952,o),
(428,961,qs),
(428,972,o),
(420,972,qs),
(415,972,o)
);
},
{
closed = 1;
nodes = (
(566,309,o),
(561,309,qs),
(553,309,o),
(542,291,o),
(542,276,qs),
(542,261,o),
(539,207,o),
(535,147,o),
(531,89,o),
(529,69,qs),
(528,56,o),
(518,42,o),
(501,36,o),
(481,35,o),
(469,35,qs),
(107,35,ls),
(95,35,o),
(87,39,o),
(87,45,qs),
(87,47,o),
(116,93,o),
(166,168,o),
(231,267,o),
(304,378,o),
(380,495,o),
(450,605,o),
(510,702,o),
(531,738,q),
(532,741,o),
(544,759,o),
(557,781,o),
(567,799,o),
(567,802,qs),
(567,816,o),
(535,821,o),
(515,821,qs),
(464,821,o),
(362,819,o),
(311,819,qs),
(260,819,o),
(159,821,o),
(108,821,qs),
(91,821,o),
(70,820,o),
(58,812,o),
(54,795,o),
(54,780,qs),
(54,757,o),
(55,713,o),
(55,690,qs),
(55,667,o),
(54,624,o),
(54,601,qs),
(54,586,o),
(61,565,o),
(72,565,qs),
(83,565,o),
(91,583,o),
(91,620,qs),
(91,631,o),
(91,666,o),
(92,702,o),
(92,734,o),
(92,742,qs),
(92,766,o),
(105,785,o),
(134,785,qs),
(454,785,ls),
(472,785,o),
(491,784,o),
(500,780,o),
(502,774,o),
(502,769,qs),
(502,763,o),
(466,700,o),
(406,605,o),
(328,487,o),
(246,363,o),
(165,242,o),
(98,142,o),
(50,72,o),
(43,61,qs),
(36,50,o),
(28,39,o),
(23,31,o),
(22,24,o),
(22,19,qs),
(22,7,o),
(44,0,o),
(66,0,qs),
(124,0,o),
(239,1,o),
(297,1,qs),
(355,1,o),
(471,0,o),
(529,0,qs),
(549,0,o),
(565,8,o),
(565,31,qs),
(565,39,o),
(567,82,o),
(570,137,o),
(573,196,o),
(576,247,o),
(578,280,o),
(578,281,qs),
(578,298,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
19 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
2 9 2 0 1 0 106 0 1 6 1 106 0 5 4 8 4 5 8 104 0 8 7 4 8 7 102 0 4 4 6 83 0 6 6 12 67 0 7 7 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
2 9 2 0 1 0 106 0 1 6 1 106 0 5 4 8 4 5 8 104 0 8 7 4 8 7 102 0 4 4 6 83 0 6 6 14 67 0 7 7 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
1 0 129 127 117 113 95 86 75 73 64 60 41 33 15 13 8 6 0 23 1 23 10 15
CALL[ ]	/* CallFunction */";
};
width = 618;
}
);
note = Zcaron;
unicode = 381;
},
{
glyphname = Zdotaccent;
kernLeft = Z;
kernRight = Z;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(605,317,o),
(581,317,qs),
(567,317,o),
(550,307,o),
(541,293,o),
(539,275,o),
(539,268,qs),
(539,257,o),
(537,218,o),
(534,174,o),
(531,132,o),
(529,117,qs),
(527,98,o),
(501,83,o),
(469,83,qs),
(187,83,ls),
(175,83,o),
(167,87,o),
(167,93,qs),
(167,95,o),
(212,168,o),
(285,281,o),
(376,422,o),
(467,564,o),
(549,693,o),
(577,738,q),
(578,741,o),
(589,759,o),
(601,781,o),
(611,802,o),
(611,807,qs),
(611,816,o),
(600,821,o),
(589,821,qs),
(563,821,o),
(504,820,o),
(442,820,o),
(382,819,o),
(357,819,qs),
(306,819,o),
(205,821,o),
(154,821,qs),
(120,821,o),
(79,818,o),
(56,809,o),
(49,793,o),
(49,780,qs),
(49,757,o),
(50,713,o),
(50,690,qs),
(50,667,o),
(49,630,o),
(49,607,qs),
(49,599,o),
(53,581,o),
(63,566,o),
(81,555,o),
(95,555,qs),
(118,555,o),
(132,589,o),
(132,626,qs),
(132,633,o),
(132,652,o),
(133,672,o),
(133,689,o),
(133,694,qs),
(133,718,o),
(146,737,o),
(175,737,qs),
(419,737,ls),
(436,737,o),
(455,736,o),
(465,732,o),
(467,726,o),
(467,721,qs),
(467,716,o),
(433,658,o),
(377,569,o),
(305,459,o),
(228,343,o),
(152,230,o),
(89,136,o),
(45,71,o),
(38,61,qs),
(27,44,o),
(19,27,o),
(19,19,qs),
(19,7,o),
(40,0,o),
(72,0,qs),
(101,0,o),
(171,0,o),
(244,1,o),
(314,1,o),
(343,1,qs),
(401,1,o),
(517,0,o),
(575,0,qs),
(597,0,o),
(611,12,o),
(611,31,qs),
(611,39,o),
(612,81,o),
(615,134,o),
(617,191,o),
(620,240,o),
(621,272,o),
(621,273,qs),
(621,290,o)
);
},
{
closed = 1;
nodes = (
(326,840,o),
(351,840,qs),
(362,840,o),
(386,846,o),
(405,862,o),
(418,889,o),
(418,910,qs),
(418,937,o),
(382,971,o),
(358,971,qs),
(340,971,o),
(315,958,o),
(299,939,o),
(292,916,o),
(292,906,qs),
(292,874,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 6 0 7 3 6 7 91 0 1 1 3 83 0 3 3 12 67 0 4 4 0 84 0 0 0 13 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 6 0 7 3 6 7 91 0 1 1 3 83 0 3 3 14 67 0 4 4 0 84 0 0 0 13 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
123 121 115 113 107 105 94 91 75 65 51 49 40 36 169 8 16
CALL[ ]	/* CallFunction */";
};
width = 659;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (19,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = Z;
},
{
alignment = -1;
pos = (267,336);
ref = dotaccent;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 6 0 7 3 6 7 91 0 1 1 3 83 0 3 3 12 67 0 4 4 0 84 0 0 0 13 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 6 0 7 3 6 7 91 0 1 1 3 83 0 3 3 14 67 0 4 4 0 84 0 0 0 13 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
120 118 114 112 106 104 94 90 72 63 52 50 41 37 138 8 27
CALL[ ]	/* CallFunction */";
};
width = 642;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(566,309,o),
(561,309,qs),
(553,309,o),
(542,291,o),
(542,276,qs),
(542,261,o),
(539,207,o),
(535,147,o),
(531,89,o),
(529,69,qs),
(528,56,o),
(518,42,o),
(501,36,o),
(481,35,o),
(469,35,qs),
(107,35,ls),
(95,35,o),
(87,39,o),
(87,45,qs),
(87,47,o),
(116,93,o),
(166,168,o),
(231,267,o),
(304,378,o),
(380,495,o),
(450,605,o),
(510,702,o),
(531,738,q),
(532,741,o),
(544,759,o),
(557,781,o),
(567,799,o),
(567,802,qs),
(567,816,o),
(535,821,o),
(515,821,qs),
(464,821,o),
(362,819,o),
(311,819,qs),
(260,819,o),
(159,821,o),
(108,821,qs),
(91,821,o),
(70,820,o),
(58,812,o),
(54,795,o),
(54,780,qs),
(54,757,o),
(55,713,o),
(55,690,qs),
(55,667,o),
(54,624,o),
(54,601,qs),
(54,586,o),
(61,565,o),
(72,565,qs),
(83,565,o),
(91,583,o),
(91,620,qs),
(91,631,o),
(91,666,o),
(92,702,o),
(92,734,o),
(92,742,qs),
(92,766,o),
(105,785,o),
(134,785,qs),
(454,785,ls),
(472,785,o),
(491,784,o),
(500,780,o),
(502,774,o),
(502,769,qs),
(502,763,o),
(466,700,o),
(406,605,o),
(328,487,o),
(246,363,o),
(165,242,o),
(98,142,o),
(50,72,o),
(43,61,qs),
(36,50,o),
(28,39,o),
(23,31,o),
(22,24,o),
(22,19,qs),
(22,7,o),
(44,0,o),
(66,0,qs),
(124,0,o),
(239,1,o),
(297,1,qs),
(355,1,o),
(471,0,o),
(529,0,qs),
(549,0,o),
(565,8,o),
(565,31,qs),
(565,39,o),
(567,82,o),
(570,137,o),
(573,196,o),
(576,247,o),
(578,280,o),
(578,281,qs),
(578,298,o)
);
},
{
closed = 1;
nodes = (
(289,889,o),
(303,889,qs),
(317,889,o),
(344,908,o),
(344,935,qs),
(344,952,o),
(324,972,o),
(310,972,qs),
(299,972,o),
(284,963,o),
(274,950,o),
(269,936,o),
(269,931,qs),
(269,913,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 6 0 7 3 6 7 91 0 1 1 3 83 0 3 3 12 67 0 4 4 0 83 0 0 0 13 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 6 0 7 3 6 7 91 0 1 1 3 83 0 3 3 14 67 0 4 4 0 83 0 0 0 13 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
119 117 113 111 105 103 93 89 71 62 51 49 40 36 137 8 16
CALL[ ]	/* CallFunction */";
};
width = 618;
}
);
note = Zdotaccent;
unicode = 379;
},
{
glyphname = uni015E;
kernLeft = S;
kernRight = S;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(275,-16,o),
(338,-16,qs),
(378,-16,o),
(455,3,o),
(517,44,o),
(555,106,o),
(555,149,qs),
(555,189,o),
(522,253,o),
(470,303,o),
(404,342,o),
(338,371,o),
(279,393,o),
(259,402,qs),
(238,411,o),
(198,437,o),
(166,476,o),
(146,530,o),
(146,567,qs),
(146,612,o),
(175,683,o),
(223,732,o),
(284,759,o),
(316,759,qs),
(350,759,o),
(404,728,o),
(443,673,o),
(467,597,o),
(471,551,qs),
(472,541,o),
(475,520,o),
(484,503,o),
(502,492,o),
(517,492,qs),
(557,492,o),
(557,526,qs),
(557,557,o),
(555,622,o),
(555,649,qs),
(555,687,o),
(559,766,o),
(559,791,qs),
(559,797,o),
(557,813,o),
(549,827,o),
(533,837,o),
(518,837,qs),
(504,837,o),
(486,829,o),
(477,816,o),
(474,802,o),
(474,796,qs),
(474,793,o),
(475,787,o),
(476,772,o),
(479,741,o),
(481,713,q),
(455,782,o),
(381,837,o),
(322,837,qs),
(269,837,o),
(172,799,o),
(99,727,o),
(55,625,o),
(55,562,qs),
(55,505,o),
(90,423,o),
(144,366,o),
(210,328,o),
(240,314,qs),
(282,295,o),
(362,261,o),
(425,224,o),
(463,182,o),
(463,154,qs),
(463,117,o),
(392,62,o),
(329,62,qs),
(290,62,o),
(223,87,o),
(172,124,o),
(140,168,o),
(135,187,qs),
(133,196,o),
(129,224,o),
(119,251,o),
(101,271,o),
(84,271,qs),
(70,271,o),
(54,255,o),
(46,233,o),
(44,206,o),
(44,196,qs),
(44,181,o),
(46,133,o),
(46,113,qs),
(46,99,o),
(45,66,o),
(43,36,o),
(42,13,o),
(42,9,qs),
(42,-5,o),
(60,-32,o),
(83,-32,qs),
(104,-32,o),
(127,-8,o),
(127,9,qs),
(127,19,o),
(126,49,o),
(123,85,q),
(162,29,o)
);
},
{
closed = 1;
nodes = (
(274,-133,o),
(288,-143,o),
(299,-152,o),
(299,-158,qs),
(299,-188,o),
(284,-217,o),
(284,-227,qs),
(284,-244,o),
(305,-250,o),
(310,-250,qs),
(316,-250,o),
(343,-235,o),
(370,-206,o),
(391,-161,o),
(391,-131,qs),
(391,-88,o),
(347,-50,o),
(323,-50,qs),
(290,-50,o),
(263,-87,o),
(263,-108,qs),
(263,-120,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
53 1 5 6 0 1 2 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 8 0 9 8 9 87 0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 1 0 0 8 1 0 91 0 8 0 9 8 9 87 0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 2 2 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 6 5 3 6 79 4 1 3 0 5 1 3 5 91 0 1 0 0 8 1 0 91 0 8 0 9 8 9 87 0 2 2 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
123 121 115 113 109 107 87 85 77 75 64 62 51 49 40 46 37 10 18
CALL[ ]	/* CallFunction */";
};
width = 628;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (44,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = S;
},
{
alignment = -1;
pos = (200,-141);
ref = comma;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
79 56 2 5 6 1 1 2 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 8 0 9 8 9 87 0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 8 0 9 8 9 87 0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 20 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 0 8 1 0 91 0 8 0 9 8 9 87 0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 20 67 0 2 2 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 0 0 8 1 0 91 0 8 0 9 8 9 87 0 2 2 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
123 121 115 113 107 105 85 83 77 75 63 61 54 52 40 46 38 10 29
CALL[ ]	/* CallFunction */";
};
width = 613;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(151,21,o),
(213,-4,o),
(280,-16,o),
(312,-16,qs),
(345,-16,o),
(425,1,o),
(494,40,o),
(540,101,o),
(540,145,qs),
(540,187,o),
(475,251,o),
(384,301,o),
(289,337,o),
(259,351,qs),
(229,365,o),
(171,398,o),
(126,447,o),
(99,515,o),
(99,565,qs),
(99,611,o),
(133,698,o),
(192,766,o),
(273,807,o),
(320,807,qs),
(360,807,o),
(427,773,o),
(476,710,o),
(506,621,o),
(510,567,qs),
(510,545,o),
(517,508,o),
(531,508,qs),
(544,508,o),
(550,528,o),
(550,542,qs),
(550,574,o),
(548,620,o),
(548,652,qs),
(548,688,o),
(552,763,o),
(552,798,qs),
(552,805,o),
(542,821,o),
(532,821,qs),
(513,821,o),
(513,796,qs),
(513,795,o),
(517,734,o),
(521,671,q),
(491,758,o),
(389,837,o),
(316,837,qs),
(271,837,o),
(179,797,o),
(105,726,o),
(58,630,o),
(58,574,qs),
(58,511,o),
(93,426,o),
(149,367,o),
(215,329,o),
(247,314,qs),
(283,297,o),
(370,263,o),
(447,224,o),
(499,176,o),
(499,145,qs),
(499,114,o),
(466,65,o),
(413,32,o),
(345,14,o),
(309,14,qs),
(256,14,o),
(175,43,o),
(120,89,o),
(91,149,o),
(91,180,qs),
(91,202,o),
(83,239,o),
(69,239,qs),
(56,239,o),
(50,219,o),
(50,205,qs),
(50,189,o),
(51,167,o),
(51,146,o),
(52,124,o),
(52,108,qs),
(52,97,o),
(51,67,o),
(49,37,o),
(48,13,o),
(48,7,qs),
(48,0,o),
(58,-16,o),
(68,-16,qs),
(87,-16,o),
(87,9,q),
(86,15,o),
(86,22,qs),
(86,28,o),
(85,42,o),
(85,50,qs),
(84,68,o),
(84,91,q),
(100,62,o)
);
},
{
closed = 1;
nodes = (
(275,-126,o),
(289,-133,o),
(300,-140,o),
(300,-146,qs),
(300,-156,o),
(289,-185,o),
(289,-192,qs),
(289,-197,o),
(298,-204,o),
(303,-204,qs),
(313,-204,o),
(330,-187,o),
(340,-162,o),
(346,-135,o),
(346,-125,qs),
(346,-91,o),
(319,-68,o),
(304,-68,qs),
(284,-68,o),
(264,-89,o),
(264,-102,qs),
(264,-114,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
76 56 2 5 6 0 1 2 1 7 1 0 2 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 12 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 67 0 8 8 9 83 0 9 9 17 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 8 0 9 8 9 87 0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 12 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 3 0 6 5 3 6 91 0 8 0 9 8 9 87 0 5 5 4 83 0 4 4 14 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
118 116 110 108 102 100 82 80 74 72 62 60 54 52 38 46 40 10 18
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = uni015E;
unicode = 350;
},
{
glyphname = uni0162;
kernLeft = T;
kernRight = T;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(268,-128,o),
(282,-138,o),
(293,-147,o),
(293,-153,qs),
(293,-183,o),
(278,-212,o),
(278,-222,qs),
(278,-239,o),
(299,-245,o),
(304,-245,qs),
(310,-245,o),
(337,-230,o),
(364,-201,o),
(385,-156,o),
(385,-126,qs),
(385,-83,o),
(341,-45,o),
(317,-45,qs),
(284,-45,o),
(257,-82,o),
(257,-103,qs),
(257,-115,o)
);
},
{
closed = 1;
nodes = (
(277,699,o),
(278,613,o),
(280,525,o),
(281,439,o),
(281,401,qs),
(281,362,o),
(280,292,o),
(278,224,o),
(277,157,o),
(277,120,qs),
(277,104,o),
(266,85,o),
(248,75,o),
(224,71,o),
(211,70,qs),
(165,66,o),
(165,26,qs),
(165,9,o),
(193,0,o),
(207,0,qs),
(467,0,ls),
(480,0,o),
(494,21,o),
(494,32,qs),
(494,43,o),
(485,57,o),
(472,64,o),
(458,67,o),
(452,67,qs),
(373,67,l),
(373,737,l),
(517,737,ls),
(543,737,o),
(554,718,o),
(554,688,qs),
(554,614,ls),
(554,582,o),
(574,559,o),
(602,559,qs),
(616,559,o),
(642,573,o),
(642,603,qs),
(642,611,o),
(642,635,o),
(641,660,o),
(641,685,o),
(641,693,qs),
(641,709,o),
(642,761,o),
(642,778,qs),
(642,807,o),
(628,821,o),
(604,821,qs),
(530,821,o),
(402,819,o),
(328,819,qs),
(291,819,o),
(224,820,o),
(157,820,o),
(90,821,o),
(53,821,qs),
(30,821,o),
(15,807,o),
(15,778,qs),
(15,761,o),
(16,709,o),
(16,693,qs),
(16,685,o),
(16,660,o),
(15,635,o),
(15,611,o),
(15,603,qs),
(15,574,o),
(44,559,o),
(58,559,qs),
(79,559,o),
(103,582,o),
(103,614,qs),
(103,688,ls),
(103,717,o),
(114,737,o),
(140,737,qs),
(277,737,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
5 1 3 2 7 2 3 7 104 6 9 2 2 2 4 83 0 4 4 12 67 0 7 7 8 83 0 8 8 13 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
5 1 3 2 7 2 3 7 104 0 0 0 1 0 1 87 6 9 2 2 2 4 83 0 4 4 12 67 0 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
5 1 3 2 7 2 3 7 104 0 0 0 1 0 1 87 6 9 2 2 2 4 83 0 4 4 14 67 0 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
23 22 85 82 76 74 73 71 66 64 52 42 30 28 22 104 23 104 38 34 10 17
CALL[ ]	/* CallFunction */";
};
width = 657;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (15,0);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (1,0);
ref = T;
},
{
alignment = -1;
pos = (210,-137);
ref = comma;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
3 1 1 0 5 0 1 5 104 4 10 2 0 0 2 83 0 2 2 12 67 7 1 5 5 6 83 0 6 6 13 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
3 1 1 0 5 0 1 5 104 0 8 0 9 8 9 87 4 10 2 0 0 2 83 0 2 2 12 67 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
3 1 1 0 5 0 1 5 104 0 8 0 9 8 9 87 4 10 2 0 0 2 83 0 2 2 14 67 7 1 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
2 1 91 89 83 81 67 64 60 57 53 51 50 48 43 41 29 21 9 7 1 78 2 78 11 26
CALL[ ]	/* CallFunction */";
};
width = 637;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(266,-125,o),
(280,-132,o),
(291,-139,o),
(291,-145,qs),
(291,-155,o),
(280,-184,o),
(280,-191,qs),
(280,-196,o),
(289,-203,o),
(294,-203,qs),
(304,-203,o),
(321,-186,o),
(331,-161,o),
(337,-134,o),
(337,-124,qs),
(337,-90,o),
(310,-67,o),
(295,-67,qs),
(275,-67,o),
(255,-88,o),
(255,-101,qs),
(255,-113,o)
);
},
{
closed = 1;
nodes = (
(278,741,o),
(279,643,o),
(281,543,o),
(282,444,o),
(282,401,qs),
(282,313,o),
(278,156,o),
(278,74,qs),
(278,57,o),
(263,38,o),
(240,29,o),
(215,28,o),
(205,28,qs),
(196,28,o),
(176,22,o),
(176,13,qs),
(176,5,o),
(203,0,o),
(217,0,qs),
(429,0,ls),
(449,0,o),
(449,13,qs),
(449,21,o),
(430,31,o),
(419,31,qs),
(323,31,l),
(323,785,l),
(518,785,ls),
(544,785,o),
(555,765,o),
(555,736,qs),
(555,620,ls),
(555,588,o),
(561,565,o),
(574,565,qs),
(582,565,o),
(592,579,o),
(592,609,qs),
(592,625,o),
(591,676,o),
(591,693,qs),
(591,709,o),
(592,761,o),
(592,778,qs),
(592,807,o),
(578,821,o),
(554,821,qs),
(520,821,o),
(459,820,o),
(399,820,o),
(338,819,o),
(304,819,qs),
(270,819,o),
(209,820,o),
(149,820,o),
(88,821,o),
(54,821,qs),
(30,821,o),
(16,807,o),
(16,778,qs),
(16,761,o),
(17,709,o),
(17,693,qs),
(17,676,o),
(16,625,o),
(16,609,qs),
(16,579,o),
(26,565,o),
(34,565,qs),
(47,565,o),
(53,588,o),
(53,620,qs),
(53,736,ls),
(53,765,o),
(64,785,o),
(90,785,qs),
(278,785,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
5 1 3 2 7 2 3 7 104 6 10 2 2 2 4 83 0 4 4 12 67 9 1 7 7 8 83 0 8 8 13 67 0 0 0 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
5 1 3 2 7 2 3 7 104 0 0 0 1 0 1 87 6 10 2 2 2 4 83 0 4 4 12 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
5 1 3 2 7 2 3 7 104 0 0 0 1 0 1 87 6 10 2 2 2 4 83 0 4 4 14 67 9 1 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
23 22 87 84 80 77 74 72 71 69 64 62 52 40 30 28 22 98 23 98 38 34 11 17
CALL[ ]	/* CallFunction */";
};
width = 609;
}
);
note = uni0162;
unicode = 354;
},
{
glyphname = uni0218;
kernLeft = S;
kernRight = S;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(275,-16,o),
(338,-16,qs),
(378,-16,o),
(455,3,o),
(517,44,o),
(555,106,o),
(555,149,qs),
(555,189,o),
(522,253,o),
(470,303,o),
(404,342,o),
(338,371,o),
(279,393,o),
(259,402,qs),
(238,411,o),
(198,437,o),
(166,476,o),
(146,530,o),
(146,567,qs),
(146,612,o),
(175,683,o),
(223,732,o),
(284,759,o),
(316,759,qs),
(350,759,o),
(404,728,o),
(443,673,o),
(467,597,o),
(471,551,qs),
(472,541,o),
(475,520,o),
(484,503,o),
(502,492,o),
(517,492,qs),
(557,492,o),
(557,526,qs),
(557,557,o),
(555,622,o),
(555,649,qs),
(555,687,o),
(559,766,o),
(559,791,qs),
(559,797,o),
(557,813,o),
(549,827,o),
(533,837,o),
(518,837,qs),
(504,837,o),
(486,829,o),
(477,816,o),
(474,802,o),
(474,796,qs),
(474,793,o),
(475,787,o),
(476,772,o),
(479,741,o),
(481,713,q),
(455,782,o),
(381,837,o),
(322,837,qs),
(269,837,o),
(172,799,o),
(99,727,o),
(55,625,o),
(55,562,qs),
(55,505,o),
(90,423,o),
(144,366,o),
(210,328,o),
(240,314,qs),
(282,295,o),
(362,261,o),
(425,224,o),
(463,182,o),
(463,154,qs),
(463,117,o),
(392,62,o),
(329,62,qs),
(290,62,o),
(223,87,o),
(172,124,o),
(140,168,o),
(135,187,qs),
(133,196,o),
(129,224,o),
(119,251,o),
(101,271,o),
(84,271,qs),
(70,271,o),
(54,255,o),
(46,233,o),
(44,206,o),
(44,196,qs),
(44,181,o),
(46,133,o),
(46,113,qs),
(46,99,o),
(45,66,o),
(43,36,o),
(42,13,o),
(42,9,qs),
(42,-5,o),
(60,-32,o),
(83,-32,qs),
(104,-32,o),
(127,-8,o),
(127,9,qs),
(127,19,o),
(126,49,o),
(123,85,q),
(162,29,o)
);
},
{
closed = 1;
nodes = (
(274,-133,o),
(288,-143,o),
(299,-152,o),
(299,-158,qs),
(299,-188,o),
(284,-217,o),
(284,-227,qs),
(284,-244,o),
(305,-250,o),
(310,-250,qs),
(316,-250,o),
(343,-235,o),
(370,-206,o),
(391,-161,o),
(391,-131,qs),
(391,-88,o),
(347,-50,o),
(323,-50,qs),
(290,-50,o),
(263,-87,o),
(263,-108,qs),
(263,-120,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
53 1 5 6 0 1 2 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 8 0 9 8 9 87 0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 1 0 0 8 1 0 91 0 8 0 9 8 9 87 0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 2 2 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 6 5 3 6 79 4 1 3 0 5 1 3 5 91 0 1 0 0 8 1 0 91 0 8 0 9 8 9 87 0 2 2 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
123 121 115 113 109 107 87 85 77 75 64 62 51 49 40 46 37 10 18
CALL[ ]	/* CallFunction */";
};
width = 628;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (44,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = S;
},
{
alignment = -1;
pos = (199,-139);
ref = comma;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
79 56 2 5 6 1 1 2 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 8 0 9 8 9 87 0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 8 0 9 8 9 87 0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 20 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 0 8 1 0 91 0 8 0 9 8 9 87 0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 20 67 0 2 2 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 0 0 8 1 0 91 0 8 0 9 8 9 87 0 2 2 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
123 121 115 113 107 105 85 83 77 75 63 61 54 52 40 46 38 10 29
CALL[ ]	/* CallFunction */";
};
width = 613;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(151,21,o),
(213,-4,o),
(280,-16,o),
(312,-16,qs),
(345,-16,o),
(425,1,o),
(494,40,o),
(540,101,o),
(540,145,qs),
(540,187,o),
(475,251,o),
(384,301,o),
(289,337,o),
(259,351,qs),
(229,365,o),
(171,398,o),
(126,447,o),
(99,515,o),
(99,565,qs),
(99,611,o),
(133,698,o),
(192,766,o),
(273,807,o),
(320,807,qs),
(360,807,o),
(427,773,o),
(476,710,o),
(506,621,o),
(510,567,qs),
(510,545,o),
(517,508,o),
(531,508,qs),
(544,508,o),
(550,528,o),
(550,542,qs),
(550,574,o),
(548,620,o),
(548,652,qs),
(548,688,o),
(552,763,o),
(552,798,qs),
(552,805,o),
(542,821,o),
(532,821,qs),
(513,821,o),
(513,796,qs),
(513,795,o),
(517,734,o),
(521,671,q),
(491,758,o),
(389,837,o),
(316,837,qs),
(271,837,o),
(179,797,o),
(105,726,o),
(58,630,o),
(58,574,qs),
(58,511,o),
(93,426,o),
(149,367,o),
(215,329,o),
(247,314,qs),
(283,297,o),
(370,263,o),
(447,224,o),
(499,176,o),
(499,145,qs),
(499,114,o),
(466,65,o),
(413,32,o),
(345,14,o),
(309,14,qs),
(256,14,o),
(175,43,o),
(120,89,o),
(91,149,o),
(91,180,qs),
(91,202,o),
(83,239,o),
(69,239,qs),
(56,239,o),
(50,219,o),
(50,205,qs),
(50,189,o),
(51,167,o),
(51,146,o),
(52,124,o),
(52,108,qs),
(52,97,o),
(51,67,o),
(49,37,o),
(48,13,o),
(48,7,qs),
(48,0,o),
(58,-16,o),
(68,-16,qs),
(87,-16,o),
(87,9,q),
(86,15,o),
(86,22,qs),
(86,28,o),
(85,42,o),
(85,50,qs),
(84,68,o),
(84,91,q),
(100,62,o)
);
},
{
closed = 1;
nodes = (
(275,-126,o),
(289,-133,o),
(300,-140,o),
(300,-146,qs),
(300,-156,o),
(289,-185,o),
(289,-192,qs),
(289,-197,o),
(298,-204,o),
(303,-204,qs),
(313,-204,o),
(330,-187,o),
(340,-162,o),
(346,-135,o),
(346,-125,qs),
(346,-91,o),
(319,-68,o),
(304,-68,qs),
(284,-68,o),
(264,-89,o),
(264,-102,qs),
(264,-114,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
76 56 2 5 6 0 1 2 1 7 1 0 2 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 12 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 67 0 8 8 9 83 0 9 9 17 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 8 0 9 8 9 87 0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 12 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 3 0 6 5 3 6 91 0 8 0 9 8 9 87 0 5 5 4 83 0 4 4 14 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
118 116 110 108 102 100 82 80 74 72 62 60 54 52 38 46 40 10 18
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = uni0218;
unicode = 536;
},
{
glyphname = uni021A;
kernLeft = T;
kernRight = T;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(268,-125,o),
(282,-135,o),
(293,-144,o),
(293,-150,qs),
(293,-180,o),
(278,-209,o),
(278,-219,qs),
(278,-236,o),
(299,-242,o),
(304,-242,qs),
(310,-242,o),
(337,-227,o),
(364,-198,o),
(385,-153,o),
(385,-123,qs),
(385,-80,o),
(341,-42,o),
(317,-42,qs),
(284,-42,o),
(257,-79,o),
(257,-100,qs),
(257,-112,o)
);
},
{
closed = 1;
nodes = (
(277,699,o),
(278,613,o),
(280,525,o),
(281,439,o),
(281,401,qs),
(281,362,o),
(280,292,o),
(278,224,o),
(277,157,o),
(277,120,qs),
(277,104,o),
(266,85,o),
(248,75,o),
(224,71,o),
(211,70,qs),
(165,66,o),
(165,26,qs),
(165,9,o),
(193,0,o),
(207,0,qs),
(467,0,ls),
(480,0,o),
(494,21,o),
(494,32,qs),
(494,43,o),
(485,57,o),
(472,64,o),
(458,67,o),
(452,67,qs),
(373,67,l),
(373,737,l),
(517,737,ls),
(543,737,o),
(554,718,o),
(554,688,qs),
(554,614,ls),
(554,582,o),
(574,559,o),
(602,559,qs),
(616,559,o),
(642,573,o),
(642,603,qs),
(642,611,o),
(642,635,o),
(641,660,o),
(641,685,o),
(641,693,qs),
(641,709,o),
(642,761,o),
(642,778,qs),
(642,807,o),
(628,821,o),
(604,821,qs),
(530,821,o),
(402,819,o),
(328,819,qs),
(291,819,o),
(224,820,o),
(157,820,o),
(90,821,o),
(53,821,qs),
(30,821,o),
(15,807,o),
(15,778,qs),
(15,761,o),
(16,709,o),
(16,693,qs),
(16,685,o),
(16,660,o),
(15,635,o),
(15,611,o),
(15,603,qs),
(15,574,o),
(44,559,o),
(58,559,qs),
(79,559,o),
(103,582,o),
(103,614,qs),
(103,688,ls),
(103,717,o),
(114,737,o),
(140,737,qs),
(277,737,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
5 1 3 2 7 2 3 7 104 6 9 2 2 2 4 83 0 4 4 12 67 0 7 7 8 83 0 8 8 13 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
5 1 3 2 7 2 3 7 104 0 0 0 1 0 1 87 6 9 2 2 2 4 83 0 4 4 12 67 0 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
5 1 3 2 7 2 3 7 104 0 0 0 1 0 1 87 6 9 2 2 2 4 83 0 4 4 14 67 0 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
23 22 85 82 76 74 73 71 66 64 52 42 30 28 22 104 23 104 38 34 10 17
CALL[ ]	/* CallFunction */";
};
width = 657;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (15,0);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (1,0);
ref = T;
},
{
alignment = -1;
pos = (210,-135);
ref = comma;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
3 1 1 0 5 0 1 5 104 4 10 2 0 0 2 83 0 2 2 12 67 7 1 5 5 6 83 0 6 6 13 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
3 1 1 0 5 0 1 5 104 0 8 0 9 8 9 87 4 10 2 0 0 2 83 0 2 2 12 67 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
3 1 1 0 5 0 1 5 104 0 8 0 9 8 9 87 4 10 2 0 0 2 83 0 2 2 14 67 7 1 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
2 1 91 89 83 81 67 64 60 57 53 51 50 48 43 41 29 21 9 7 1 78 2 78 11 26
CALL[ ]	/* CallFunction */";
};
width = 637;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(266,-125,o),
(280,-132,o),
(291,-139,o),
(291,-145,qs),
(291,-155,o),
(280,-184,o),
(280,-191,qs),
(280,-196,o),
(289,-203,o),
(294,-203,qs),
(304,-203,o),
(321,-186,o),
(331,-161,o),
(337,-134,o),
(337,-124,qs),
(337,-90,o),
(310,-67,o),
(295,-67,qs),
(275,-67,o),
(255,-88,o),
(255,-101,qs),
(255,-113,o)
);
},
{
closed = 1;
nodes = (
(278,741,o),
(279,643,o),
(281,543,o),
(282,444,o),
(282,401,qs),
(282,313,o),
(278,156,o),
(278,74,qs),
(278,57,o),
(263,38,o),
(240,29,o),
(215,28,o),
(205,28,qs),
(196,28,o),
(176,22,o),
(176,13,qs),
(176,5,o),
(203,0,o),
(217,0,qs),
(429,0,ls),
(449,0,o),
(449,13,qs),
(449,21,o),
(430,31,o),
(419,31,qs),
(323,31,l),
(323,785,l),
(518,785,ls),
(544,785,o),
(555,765,o),
(555,736,qs),
(555,620,ls),
(555,588,o),
(561,565,o),
(574,565,qs),
(582,565,o),
(592,579,o),
(592,609,qs),
(592,625,o),
(591,676,o),
(591,693,qs),
(591,709,o),
(592,761,o),
(592,778,qs),
(592,807,o),
(578,821,o),
(554,821,qs),
(520,821,o),
(459,820,o),
(399,820,o),
(338,819,o),
(304,819,qs),
(270,819,o),
(209,820,o),
(149,820,o),
(88,821,o),
(54,821,qs),
(30,821,o),
(16,807,o),
(16,778,qs),
(16,761,o),
(17,709,o),
(17,693,qs),
(17,676,o),
(16,625,o),
(16,609,qs),
(16,579,o),
(26,565,o),
(34,565,qs),
(47,565,o),
(53,588,o),
(53,620,qs),
(53,736,ls),
(53,765,o),
(64,785,o),
(90,785,qs),
(278,785,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
5 1 3 2 7 2 3 7 104 6 10 2 2 2 4 83 0 4 4 12 67 9 1 7 7 8 83 0 8 8 13 67 0 0 0 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
5 1 3 2 7 2 3 7 104 0 0 0 1 0 1 87 6 10 2 2 2 4 83 0 4 4 12 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
5 1 3 2 7 2 3 7 104 0 0 0 1 0 1 87 6 10 2 2 2 4 83 0 4 4 14 67 9 1 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
23 22 87 84 80 77 74 72 71 69 64 62 52 40 30 28 22 98 23 98 38 34 11 17
CALL[ ]	/* CallFunction */";
};
width = 609;
}
);
note = uni021A;
unicode = 538;
},
{
glyphname = K.salt;
kernLeft = B;
kernRight = K.salt;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(229,747,o),
(274,759,o),
(307,759,qs),
(319,759,o),
(344,772,o),
(344,790,qs),
(344,801,o),
(325,821,o),
(293,821,qs),
(87,821,ls),
(78,821,o),
(50,810,o),
(50,790,qs),
(50,768,o),
(79,759,o),
(98,759,qs),
(108,759,o),
(121,754,o),
(130,736,o),
(134,699,o),
(134,666,qs),
(134,655,o),
(134,610,o),
(135,556,o),
(136,497,o),
(137,446,o),
(137,409,o),
(137,404,qs),
(137,396,o),
(136,329,o),
(135,240,o),
(133,143,o),
(132,104,qs),
(131,76,o),
(116,60,o),
(92,60,qs),
(64,60,o),
(47,46,o),
(47,29,qs),
(47,12,o),
(84,0,o),
(107,0,qs),
(133,0,o),
(189,2,o),
(215,2,qs),
(228,2,o),
(257,1,o),
(286,1,o),
(310,0,o),
(318,0,qs),
(336,0,o),
(363,10,o),
(363,27,qs),
(363,48,o),
(339,62,o),
(320,62,qs),
(229,62,l),
(229,335,l),
(261,369,l),
(329,366,o),
(421,341,o),
(478,300,o),
(506,248,o),
(509,220,qs),
(514,181,o),
(516,88,o),
(539,7,o),
(597,-47,o),
(658,-47,qs),
(672,-47,o),
(704,-39,o),
(730,-17,o),
(747,20,o),
(747,50,qs),
(747,54,o),
(745,69,o),
(736,83,o),
(720,93,o),
(707,93,qs),
(681,93,o),
(661,68,o),
(661,54,qs),
(661,43,o),
(655,31,o),
(643,31,qs),
(628,31,o),
(612,71,o),
(605,130,o),
(603,195,o),
(600,220,qs),
(598,235,o),
(590,279,o),
(569,327,o),
(532,374,o),
(472,412,o),
(386,436,o),
(327,436,q),
(422,533,o),
(556,667,o),
(609,717,qs),
(616,723,o),
(655,731,o),
(702,735,o),
(748,737,o),
(762,738,qs),
(773,739,o),
(782,755,o),
(782,766,qs),
(782,782,o),
(768,795,o),
(759,795,qs),
(485,795,ls),
(465,795,o),
(451,773,o),
(451,764,qs),
(451,753,o),
(462,734,o),
(477,734,qs),
(480,734,o),
(488,730,o),
(488,722,qs),
(488,715,o),
(461,680,o),
(416,631,o),
(360,574,o),
(302,515,o),
(249,461,o),
(229,439,q),
(229,728,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
117 58 1 40
CALL[ ]	/* CallFunction */";
};
width = 780;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(211,755,o),
(231,766,o),
(257,770,o),
(281,771,o),
(286,771,qs),
(298,771,o),
(323,781,o),
(323,796,qs),
(323,804,o),
(304,821,o),
(272,821,qs),
(76,821,ls),
(67,821,o),
(39,812,o),
(39,796,qs),
(39,779,o),
(68,771,o),
(87,771,qs),
(103,771,o),
(122,768,o),
(133,750,o),
(137,712,o),
(137,678,qs),
(137,660,o),
(138,577,o),
(139,487,o),
(140,413,o),
(140,404,qs),
(140,395,o),
(139,326,o),
(137,233,o),
(136,132,o),
(135,92,qs),
(135,76,o),
(127,59,o),
(112,50,o),
(90,48,o),
(74,48,qs),
(52,48,o),
(36,37,o),
(36,23,qs),
(36,9,o),
(70,0,o),
(89,0,qs),
(115,0,o),
(171,2,o),
(197,2,qs),
(210,2,o),
(239,1,o),
(268,1,o),
(292,0,o),
(300,0,qs),
(338,0,o),
(338,21,qs),
(338,41,o),
(313,50,o),
(302,50,qs),
(211,50,l),
(211,335,l),
(257,382,l),
(332,379,o),
(428,349,o),
(484,304,o),
(509,248,o),
(512,220,qs),
(515,194,o),
(517,135,o),
(522,75,o),
(534,20,o),
(562,-22,o),
(610,-47,o),
(647,-47,qs),
(661,-47,o),
(690,-39,o),
(714,-17,o),
(729,20,o),
(729,50,qs),
(729,54,o),
(727,67,o),
(721,79,o),
(708,88,o),
(698,88,qs),
(678,88,o),
(664,64,o),
(664,54,qs),
(663,34,o),
(653,13,o),
(635,13,qs),
(615,13,o),
(596,57,o),
(587,122,o),
(585,193,o),
(582,220,qs),
(580,236,o),
(572,280,o),
(551,327,o),
(514,374,o),
(455,411,o),
(369,435,o),
(309,436,q),
(405,534,o),
(547,676,o),
(603,729,qs),
(615,740,o),
(692,748,o),
(742,750,qs),
(753,751,o),
(762,767,o),
(762,772,qs),
(762,779,o),
(748,795,o),
(739,795,qs),
(472,795,ls),
(452,795,o),
(438,775,o),
(438,770,qs),
(438,759,o),
(456,746,o),
(472,746,qs),
(480,746,o),
(503,743,o),
(503,734,qs),
(503,727,o),
(471,688,o),
(421,632,o),
(356,567,o),
(292,502,o),
(232,442,o),
(211,421,q),
(211,746,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
116 56 1 40
CALL[ ]	/* CallFunction */";
};
width = 763;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(185,775,o),
(204,786,o),
(228,790,o),
(251,791,o),
(256,791,qs),
(268,791,o),
(293,795,o),
(293,806,qs),
(293,814,o),
(274,821,o),
(242,821,qs),
(60,821,ls),
(51,821,o),
(23,817,o),
(23,806,qs),
(23,796,o),
(52,791,o),
(71,791,qs),
(97,791,o),
(126,788,o),
(139,770,o),
(141,732,o),
(141,698,qs),
(141,685,o),
(141,636,o),
(142,575,o),
(143,509,o),
(144,452,o),
(144,410,o),
(144,404,qs),
(144,395,o),
(143,321,o),
(141,222,o),
(140,115,o),
(139,72,qs),
(139,56,o),
(128,39,o),
(105,30,o),
(71,28,o),
(48,28,qs),
(20,28,o),
(20,13,qs),
(20,3,o),
(50,0,o),
(63,0,qs),
(89,0,o),
(145,2,o),
(171,2,qs),
(184,2,o),
(213,1,o),
(242,1,o),
(266,0,o),
(274,0,qs),
(292,0,o),
(302,5,o),
(302,11,qs),
(302,21,o),
(287,30,o),
(276,30,qs),
(185,30,l),
(185,335,l),
(251,403,l),
(336,400,o),
(437,364,o),
(493,311,o),
(513,248,o),
(516,220,qs),
(519,194,o),
(520,135,o),
(524,75,o),
(534,20,o),
(555,-22,o),
(592,-47,o),
(621,-47,qs),
(635,-47,o),
(664,-39,o),
(688,-17,o),
(703,20,o),
(703,50,qs),
(703,59,o),
(698,79,o),
(685,79,qs),
(674,79,o),
(669,64,o),
(668,54,qs),
(663,-17,o),
(623,-17,qs),
(597,-17,o),
(571,34,o),
(561,107,o),
(559,189,o),
(556,220,qs),
(554,236,o),
(546,280,o),
(525,327,o),
(488,374,o),
(429,411,o),
(343,435,o),
(283,436,q),
(380,535,o),
(539,696,o),
(595,749,qs),
(607,760,o),
(664,768,o),
(714,770,qs),
(734,771,o),
(734,782,qs),
(734,789,o),
(720,795,o),
(711,795,qs),
(454,795,ls),
(434,795,o),
(420,785,o),
(420,780,qs),
(420,769,o),
(446,766,o),
(454,766,qs),
(461,766,o),
(485,766,o),
(508,763,o),
(525,758,o),
(525,754,qs),
(525,747,o),
(487,700,o),
(427,634,o),
(352,555,o),
(276,479,o),
(208,412,o),
(185,391,q),
(185,766,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
116 54 1 40
CALL[ ]	/* CallFunction */";
};
width = 739;
}
);
note = K.salt;
},
{
glyphname = R.salt;
kernLeft = B;
kernRight = R.salt;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(582,750,o),
(491,800,o),
(371,821,o),
(305,821,qs),
(289,821,o),
(247,820,o),
(200,819,o),
(153,818,o),
(131,818,qs),
(103,818,o),
(56,807,o),
(56,788,qs),
(56,776,o),
(68,762,o),
(84,754,o),
(100,751,o),
(105,751,qs),
(121,751,o),
(133,735,o),
(134,709,qs),
(135,671,o),
(137,574,o),
(139,484,o),
(140,418,o),
(140,412,qs),
(140,408,o),
(139,367,o),
(138,308,o),
(137,238,o),
(136,173,o),
(135,118,o),
(135,104,qs),
(134,75,o),
(118,60,o),
(95,60,qs),
(78,60,o),
(50,47,o),
(50,29,qs),
(50,20,o),
(62,9,o),
(80,3,o),
(101,0,o),
(110,0,qs),
(136,0,o),
(192,2,o),
(218,2,qs),
(231,2,o),
(260,1,o),
(289,1,o),
(313,0,o),
(321,0,qs),
(339,0,o),
(357,18,o),
(357,32,qs),
(357,49,o),
(334,62,o),
(323,62,qs),
(232,62,l),
(232,349,l),
(307,349,o),
(397,318,o),
(446,270,o),
(463,215,o),
(465,191,qs),
(466,166,o),
(466,104,o),
(471,40,o),
(486,-20,o),
(521,-67,o),
(579,-96,o),
(625,-96,qs),
(640,-96,o),
(670,-86,o),
(694,-62,o),
(708,-25,o),
(708,2,qs),
(708,16,o),
(694,46,o),
(673,46,qs),
(662,46,o),
(650,37,o),
(642,25,o),
(640,14,o),
(640,11,qs),
(639,3,o),
(625,-18,o),
(613,-18,qs),
(592,-18,o),
(572,25,o),
(564,89,o),
(564,161,o),
(561,191,qs),
(556,242,o),
(527,309,o),
(488,351,o),
(442,375,o),
(421,384,q),
(466,392,o),
(544,424,o),
(603,477,o),
(637,552,o),
(637,602,qs),
(637,666,o)
);
},
{
closed = 1;
nodes = (
(488,478,o),
(409,443,o),
(315,432,o),
(274,432,qs),
(273,432,o),
(260,433,o),
(245,433,o),
(233,434,o),
(232,434,q),
(232,732,l),
(253,735,ls),
(264,737,o),
(293,739,o),
(311,739,qs),
(340,739,o),
(419,729,o),
(491,698,o),
(541,642,o),
(541,597,qs),
(541,543,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
117 107 97 30 2 40
CALL[ ]	/* CallFunction */";
};
width = 718;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(562,750,o),
(471,800,o),
(351,821,o),
(285,821,qs),
(269,821,o),
(227,820,o),
(180,819,o),
(133,818,o),
(111,818,qs),
(85,818,o),
(43,811,o),
(43,794,qs),
(43,785,o),
(54,773,o),
(68,767,o),
(82,765,o),
(85,765,qs),
(112,765,o),
(134,753,o),
(135,723,qs),
(136,684,o),
(138,582,o),
(140,488,o),
(141,419,o),
(141,412,qs),
(141,407,o),
(140,365,o),
(139,304,o),
(138,231,o),
(137,163,o),
(136,107,o),
(136,92,qs),
(136,76,o),
(128,59,o),
(113,50,o),
(90,48,o),
(75,48,qs),
(62,48,o),
(37,39,o),
(37,23,qs),
(37,15,o),
(49,6,o),
(65,1,o),
(84,0,o),
(90,0,qs),
(116,0,o),
(172,2,o),
(198,2,qs),
(211,2,o),
(240,1,o),
(269,1,o),
(293,0,o),
(301,0,qs),
(319,0,o),
(334,13,o),
(334,24,qs),
(334,38,o),
(314,50,o),
(303,50,qs),
(212,50,l),
(212,358,l),
(292,358,o),
(390,326,o),
(444,277,o),
(464,218,o),
(466,191,qs),
(468,165,o),
(468,103,o),
(473,39,o),
(486,-21,o),
(515,-68,o),
(566,-96,o),
(605,-96,qs),
(620,-96,o),
(650,-88,o),
(673,-66,o),
(688,-28,o),
(688,2,qs),
(688,6,o),
(687,19,o),
(681,31,o),
(670,40,o),
(660,40,qs),
(643,40,o),
(634,16,o),
(634,11,qs),
(633,-2,o),
(617,-36,o),
(599,-36,qs),
(574,-36,o),
(552,13,o),
(544,83,o),
(544,162,o),
(541,191,qs),
(537,242,o),
(508,308,o),
(468,350,o),
(422,375,o),
(401,384,q),
(446,392,o),
(524,424,o),
(583,477,o),
(617,552,o),
(617,602,qs),
(617,666,o)
);
},
{
closed = 1;
nodes = (
(485,471,o),
(400,435,o),
(299,423,o),
(254,423,qs),
(253,423,o),
(240,424,o),
(225,424,o),
(213,425,o),
(212,425,q),
(212,750,l),
(233,753,ls),
(244,755,o),
(273,757,o),
(291,757,qs),
(308,757,o),
(359,753,o),
(415,742,o),
(470,721,o),
(514,685,o),
(542,633,o),
(542,597,qs),
(542,540,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
121 111 99 30 2 40
CALL[ ]	/* CallFunction */";
};
width = 700;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(534,750,o),
(443,800,o),
(323,821,o),
(257,821,qs),
(241,821,o),
(199,820,o),
(152,819,o),
(105,818,o),
(83,818,qs),
(57,818,o),
(25,814,o),
(25,804,qs),
(25,793,o),
(50,789,o),
(57,789,qs),
(78,789,o),
(108,787,o),
(128,779,o),
(137,762,o),
(137,747,qs),
(138,705,o),
(140,595,o),
(142,494,o),
(143,419,o),
(143,412,qs),
(143,407,o),
(142,362,o),
(141,297,o),
(140,220,o),
(139,148,o),
(138,88,o),
(138,72,qs),
(138,56,o),
(126,39,o),
(103,30,o),
(69,28,o),
(47,28,qs),
(19,28,o),
(19,13,qs),
(19,3,o),
(49,0,o),
(62,0,qs),
(88,0,o),
(144,2,o),
(170,2,qs),
(183,2,o),
(212,1,o),
(241,1,o),
(265,0,o),
(273,0,qs),
(291,0,o),
(301,5,o),
(301,11,qs),
(301,21,o),
(286,30,o),
(275,30,qs),
(184,30,l),
(184,373,l),
(274,373,o),
(383,338,o),
(443,284,o),
(465,220,o),
(468,191,qs),
(471,165,o),
(472,103,o),
(475,39,o),
(485,-21,o),
(507,-68,o),
(546,-96,o),
(577,-96,qs),
(592,-96,o),
(622,-88,o),
(645,-66,o),
(660,-28,o),
(660,2,qs),
(660,11,o),
(655,30,o),
(642,30,qs),
(631,30,o),
(626,16,o),
(626,11,qs),
(625,0,o),
(622,-27,o),
(612,-50,o),
(594,-66,o),
(579,-66,qs),
(560,-66,o),
(536,-40,o),
(522,2,o),
(517,57,o),
(515,114,o),
(515,169,o),
(513,191,qs),
(509,242,o),
(480,308,o),
(440,350,o),
(394,375,o),
(373,384,q),
(418,392,o),
(496,424,o),
(555,477,o),
(589,552,o),
(589,602,qs),
(589,666,o)
);
},
{
closed = 1;
nodes = (
(515,496,o),
(466,454,o),
(402,428,o),
(331,413,o),
(259,408,o),
(226,408,qs),
(225,408,o),
(212,409,o),
(197,409,o),
(185,410,o),
(184,410,q),
(184,780,l),
(205,783,ls),
(216,785,o),
(245,787,o),
(263,787,qs),
(282,787,o),
(339,783,o),
(401,769,o),
(463,744,o),
(513,702,o),
(544,640,o),
(544,597,qs),
(544,556,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
120 110 98 32 2 40
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = R.salt;
},
{
glyphname = a;
kernLeft = a;
kernRight = a;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(302,222,o),
(240,238,o),
(204,238,qs),
(119,238,o),
(24,163,o),
(24,106,qs),
(24,52,o),
(107,-11,o),
(177,-11,qs),
(224,-11,o),
(303,19,o),
(335,48,q),
(345,13,o),
(388,-11,o),
(414,-11,qs),
(450,-11,o),
(498,28,o),
(498,69,qs),
(498,92,o),
(481,108,o),
(466,108,qs),
(446,108,o),
(438,90,o),
(437,79,qs),
(437,74,o),
(433,67,o),
(428,67,qs),
(421,67,o),
(419,87,o),
(419,124,qs),
(419,139,o),
(420,178,o),
(422,219,o),
(423,257,o),
(423,269,qs),
(423,363,o),
(333,465,o),
(236,465,qs),
(194,465,o),
(125,445,o),
(76,411,o),
(49,363,o),
(49,335,qs),
(49,323,o),
(54,299,o),
(68,278,o),
(91,265,o),
(108,265,qs),
(125,265,o),
(157,281,o),
(157,303,qs),
(157,326,o),
(137,335,qs),
(135,336,o),
(126,341,o),
(126,349,qs),
(126,358,o),
(143,376,o),
(171,389,o),
(208,397,o),
(228,397,qs),
(259,397,o),
(299,378,o),
(323,342,o),
(333,292,o),
(333,261,qs),
(333,203,l)
);
},
{
closed = 1;
nodes = (
(162,176,o),
(218,176,qs),
(268,176,o),
(329,143,o),
(329,122,qs),
(329,113,o),
(316,90,o),
(287,71,o),
(240,57,o),
(206,57,qs),
(159,57,o),
(116,84,o),
(116,110,qs),
(116,135,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 3 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 8 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
79 77 37 36 36 36 36 41 40 43 36 10 24
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(269,243,o),
(192,243,qs),
(154,243,o),
(93,222,o),
(49,186,o),
(25,136,o),
(25,107,qs),
(25,53,o),
(108,-11,o),
(178,-11,qs),
(225,-11,o),
(302,19,o),
(334,48,q),
(343,16,o),
(386,-11,o),
(413,-11,qs),
(428,-11,o),
(455,-3,o),
(477,15,o),
(490,44,o),
(490,65,qs),
(490,78,o),
(482,98,o),
(469,98,qs),
(455,98,o),
(443,82,o),
(442,76,qs),
(440,63,o),
(433,49,o),
(422,49,qs),
(408,49,o),
(400,77,o),
(400,123,qs),
(400,138,o),
(401,179,o),
(402,220,o),
(403,256,o),
(403,267,qs),
(403,462,o),
(226,462,qs),
(147,462,o),
(55,393,o),
(55,339,qs),
(55,313,o),
(81,269,o),
(112,269,qs),
(132,269,o),
(156,288,o),
(156,305,qs),
(156,321,o),
(138,335,o),
(131,336,qs),
(121,338,o),
(111,343,o),
(111,351,qs),
(111,363,o),
(132,382,o),
(163,395,o),
(201,402,o),
(218,402,qs),
(278,402,o),
(333,327,o),
(333,261,qs),
(333,256,o),
(332,235,o),
(332,224,qs),
(332,197,l)
);
},
{
closed = 1;
nodes = (
(115,152,o),
(147,172,o),
(191,183,o),
(217,183,qs),
(241,183,o),
(282,173,o),
(314,156,o),
(332,132,o),
(332,118,qs),
(332,103,o),
(311,78,o),
(275,60,o),
(228,49,o),
(201,49,qs),
(158,49,o),
(96,78,o),
(96,108,qs),
(96,124,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
66 1 9 7 53 1 5 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
81 79 36 38 36 38 36 40 36 44 37 10 24
CALL[ ]	/* CallFunction */";
};
width = 468;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(302,211,o),
(232,233,o),
(194,233,qs),
(156,233,o),
(94,214,o),
(50,180,o),
(26,133,o),
(26,106,qs),
(26,53,o),
(109,-11,o),
(179,-11,qs),
(226,-11,o),
(303,19,o),
(335,48,q),
(344,16,o),
(387,-11,o),
(414,-11,qs),
(443,-11,o),
(481,22,o),
(481,65,qs),
(481,76,o),
(476,88,o),
(468,88,qs),
(459,88,o),
(458,76,qs),
(457,65,o),
(454,44,o),
(445,28,o),
(429,19,o),
(415,19,qs),
(403,19,o),
(386,28,o),
(375,51,o),
(371,91,o),
(371,122,qs),
(371,138,o),
(372,179,o),
(373,219,o),
(374,256,o),
(374,268,qs),
(374,367,o),
(299,457,o),
(220,457,qs),
(184,457,o),
(124,440,o),
(81,409,o),
(56,366,o),
(56,339,qs),
(56,313,o),
(81,276,o),
(104,276,qs),
(121,276,o),
(140,296,o),
(140,311,qs),
(140,327,o),
(123,336,o),
(115,338,qs),
(107,340,o),
(95,346,o),
(95,358,qs),
(95,374,o),
(115,400,o),
(148,418,o),
(190,427,o),
(212,427,qs),
(278,427,o),
(334,342,o),
(334,264,qs),
(334,257,o),
(333,232,o),
(333,219,qs),
(333,187,l)
);
},
{
closed = 1;
nodes = (
(87,164,o),
(123,189,o),
(171,203,o),
(199,203,qs),
(227,203,o),
(276,190,o),
(312,167,o),
(333,135,o),
(333,117,qs),
(333,97,o),
(309,62,o),
(268,35,o),
(214,19,o),
(184,19,qs),
(132,19,o),
(67,66,o),
(67,106,qs),
(67,128,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 4 9 57 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
86 84 37 38 36 36 37 43 38 44 37 10 24
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = a;
unicode = 97;
},
{
glyphname = aacute;
kernLeft = a;
kernRight = a;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(317,673,o),
(285,674,qs),
(266,674,o),
(223,625,o),
(187,564,o),
(163,511,o),
(163,508,qs),
(163,497,o),
(189,486,o),
(200,486,qs),
(209,486,o),
(239,502,o),
(273,527,o),
(309,559,o),
(337,590,o),
(355,617,o),
(355,626,qs),
(355,645,o)
);
},
{
closed = 1;
nodes = (
(302,222,o),
(240,238,o),
(204,238,qs),
(119,238,o),
(24,163,o),
(24,106,qs),
(24,52,o),
(107,-11,o),
(177,-11,qs),
(224,-11,o),
(303,19,o),
(335,48,q),
(345,13,o),
(388,-11,o),
(414,-11,qs),
(450,-11,o),
(498,28,o),
(498,69,qs),
(498,92,o),
(481,108,o),
(466,108,qs),
(446,108,o),
(438,90,o),
(437,79,qs),
(437,74,o),
(433,67,o),
(428,67,qs),
(421,67,o),
(419,87,o),
(419,124,qs),
(419,139,o),
(420,178,o),
(422,219,o),
(423,257,o),
(423,269,qs),
(423,363,o),
(333,465,o),
(236,465,qs),
(194,465,o),
(125,445,o),
(76,411,o),
(49,363,o),
(49,335,qs),
(49,323,o),
(54,299,o),
(68,278,o),
(91,265,o),
(108,265,qs),
(125,265,o),
(157,281,o),
(157,303,qs),
(157,326,o),
(137,335,qs),
(135,336,o),
(126,341,o),
(126,349,qs),
(126,358,o),
(143,376,o),
(171,389,o),
(208,397,o),
(228,397,qs),
(259,397,o),
(299,378,o),
(323,342,o),
(333,292,o),
(333,261,qs),
(333,203,l)
);
},
{
closed = 1;
nodes = (
(162,176,o),
(218,176,qs),
(268,176,o),
(329,143,o),
(329,122,qs),
(329,113,o),
(316,90,o),
(287,71,o),
(240,57,o),
(206,57,qs),
(159,57,o),
(116,84,o),
(116,110,qs),
(116,135,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
84 1 11 9 60 1 5 6 72 1 7 5 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
84 1 11 9 60 1 5 6 72 1 7 10 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 1 0 1 106 0 0 4 0 106 0 3 2 9 2 3 9 104 0 6 11 5 5 6 96 0 9 0 11 6 9 11 91 0 2 2 4 83 0 4 4 23 67 10 1 5 5 7 84 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 1 0 1 106 0 0 4 0 106 0 3 2 9 2 3 9 104 0 6 11 5 5 6 96 0 4 0 2 3 4 2 91 0 9 0 11 6 9 11 91 10 1 5 5 7 84 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 1 0 1 106 0 0 4 0 106 0 3 2 9 2 3 9 104 0 6 11 5 5 6 96 0 4 0 2 3 4 2 91 0 9 0 11 6 9 11 91 0 5 5 7 84 8 1 7 7 24 67 0 10 10 7 83 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 1 0 1 106 0 0 4 0 106 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 4 0 2 3 4 2 91 0 9 0 11 6 9 11 91 0 5 5 7 84 8 1 7 7 24 67 0 10 10 7 83 8 1 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
97 95 89 87 82 80 36 36 36 41 40 43 38 38 38 12 24
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(294,661,o),
(271,661,qs),
(261,661,o),
(238,640,o),
(213,609,o),
(189,572,o),
(171,539,o),
(160,515,o),
(160,513,qs),
(160,503,o),
(177,495,o),
(185,495,qs),
(196,495,o),
(241,527,o),
(286,569,o),
(320,612,o),
(320,623,qs),
(320,640,o)
);
},
{
closed = 1;
nodes = (
(269,243,o),
(192,243,qs),
(154,243,o),
(93,222,o),
(49,186,o),
(25,136,o),
(25,107,qs),
(25,53,o),
(108,-11,o),
(178,-11,qs),
(225,-11,o),
(302,19,o),
(334,48,q),
(343,16,o),
(386,-11,o),
(413,-11,qs),
(428,-11,o),
(455,-3,o),
(477,15,o),
(490,44,o),
(490,65,qs),
(490,78,o),
(482,98,o),
(469,98,qs),
(455,98,o),
(443,82,o),
(442,76,qs),
(440,63,o),
(433,49,o),
(422,49,qs),
(408,49,o),
(400,77,o),
(400,123,qs),
(400,138,o),
(401,179,o),
(402,220,o),
(403,256,o),
(403,267,qs),
(403,462,o),
(226,462,qs),
(147,462,o),
(55,393,o),
(55,339,qs),
(55,313,o),
(81,269,o),
(112,269,qs),
(132,269,o),
(156,288,o),
(156,305,qs),
(156,321,o),
(138,335,o),
(131,336,qs),
(121,338,o),
(111,343,o),
(111,351,qs),
(111,363,o),
(132,382,o),
(163,395,o),
(201,402,o),
(218,402,qs),
(278,402,o),
(333,327,o),
(333,261,qs),
(333,256,o),
(332,235,o),
(332,224,qs),
(332,197,l)
);
},
{
closed = 1;
nodes = (
(115,152,o),
(147,172,o),
(191,183,o),
(217,183,qs),
(241,183,o),
(282,173,o),
(314,156,o),
(332,132,o),
(332,118,qs),
(332,103,o),
(311,78,o),
(275,60,o),
(228,49,o),
(201,49,qs),
(158,49,o),
(96,78,o),
(96,108,qs),
(96,124,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
84 1 11 9 71 1 7 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 1 0 1 106 0 0 4 0 106 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 9 0 11 6 9 11 91 0 2 2 4 83 0 4 4 23 67 10 1 5 5 7 83 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 1 0 1 106 0 0 4 0 106 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 4 0 2 3 4 2 92 0 9 0 11 6 9 11 91 10 1 5 5 7 83 8 1 7 7 24 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
99 97 89 87 83 81 36 38 36 40 36 44 39 40 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 468;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(302,211,o),
(232,233,o),
(194,233,qs),
(156,233,o),
(94,214,o),
(50,180,o),
(26,133,o),
(26,106,qs),
(26,53,o),
(109,-11,o),
(179,-11,qs),
(226,-11,o),
(303,19,o),
(335,48,q),
(344,16,o),
(387,-11,o),
(414,-11,qs),
(443,-11,o),
(481,22,o),
(481,65,qs),
(481,76,o),
(476,88,o),
(468,88,qs),
(459,88,o),
(458,76,qs),
(457,65,o),
(454,44,o),
(445,28,o),
(429,19,o),
(415,19,qs),
(403,19,o),
(386,28,o),
(375,51,o),
(371,91,o),
(371,122,qs),
(371,138,o),
(372,179,o),
(373,219,o),
(374,256,o),
(374,268,qs),
(374,367,o),
(299,457,o),
(220,457,qs),
(184,457,o),
(124,440,o),
(81,409,o),
(56,366,o),
(56,339,qs),
(56,313,o),
(81,276,o),
(104,276,qs),
(121,276,o),
(140,296,o),
(140,311,qs),
(140,327,o),
(123,336,o),
(115,338,qs),
(107,340,o),
(95,346,o),
(95,358,qs),
(95,374,o),
(115,400,o),
(148,418,o),
(190,427,o),
(212,427,qs),
(278,427,o),
(334,342,o),
(334,264,qs),
(334,257,o),
(333,232,o),
(333,219,qs),
(333,187,l)
);
},
{
closed = 1;
nodes = (
(87,164,o),
(123,189,o),
(171,203,o),
(199,203,qs),
(227,203,o),
(276,190,o),
(312,167,o),
(333,135,o),
(333,117,qs),
(333,97,o),
(309,62,o),
(268,35,o),
(214,19,o),
(184,19,qs),
(132,19,o),
(67,66,o),
(67,106,qs),
(67,128,o)
);
},
{
closed = 1;
nodes = (
(259,640,o),
(251,640,qs),
(244,640,o),
(212,610,o),
(180,570,o),
(156,530,o),
(156,521,qs),
(156,510,o),
(164,510,qs),
(171,510,o),
(206,538,o),
(242,574,o),
(270,610,o),
(270,618,qs),
(270,632,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 4 9 57 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 11 10 11 106 0 10 2 10 106 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 11 10 11 106 0 10 2 10 106 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 2 0 0 1 2 0 92 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
103 101 96 94 86 84 37 38 36 36 37 43 38 44 37 12 24
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = aacute;
unicode = 225;
},
{
glyphname = abreve;
kernLeft = a;
kernRight = a;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(302,222,o),
(240,238,o),
(204,238,qs),
(119,238,o),
(24,163,o),
(24,106,qs),
(24,52,o),
(107,-11,o),
(177,-11,qs),
(224,-11,o),
(303,19,o),
(335,48,q),
(345,13,o),
(388,-11,o),
(414,-11,qs),
(450,-11,o),
(498,28,o),
(498,69,qs),
(498,92,o),
(481,108,o),
(466,108,qs),
(446,108,o),
(438,90,o),
(437,79,qs),
(437,74,o),
(433,67,o),
(428,67,qs),
(421,67,o),
(419,87,o),
(419,124,qs),
(419,139,o),
(420,178,o),
(422,219,o),
(423,257,o),
(423,269,qs),
(423,363,o),
(333,465,o),
(236,465,qs),
(194,465,o),
(125,445,o),
(76,411,o),
(49,363,o),
(49,335,qs),
(49,323,o),
(54,299,o),
(68,278,o),
(91,265,o),
(108,265,qs),
(125,265,o),
(157,281,o),
(157,303,qs),
(157,326,o),
(137,335,qs),
(135,336,o),
(126,341,o),
(126,349,qs),
(126,358,o),
(143,376,o),
(171,389,o),
(208,397,o),
(228,397,qs),
(259,397,o),
(299,378,o),
(323,342,o),
(333,292,o),
(333,261,qs),
(333,203,l)
);
},
{
closed = 1;
nodes = (
(162,176,o),
(218,176,qs),
(268,176,o),
(329,143,o),
(329,122,qs),
(329,113,o),
(316,90,o),
(287,71,o),
(240,57,o),
(206,57,qs),
(159,57,o),
(116,84,o),
(116,110,qs),
(116,135,o)
);
},
{
closed = 1;
nodes = (
(336,619,o),
(321,619,qs),
(308,619,o),
(289,601,o),
(289,590,qs),
(289,582,o),
(262,567,o),
(233,567,qs),
(224,567,o),
(203,569,o),
(185,575,o),
(174,584,o),
(174,590,qs),
(174,607,o),
(155,619,o),
(138,619,qs),
(121,619,o),
(106,602,o),
(106,589,qs),
(106,557,o),
(173,510,o),
(238,510,qs),
(257,510,o),
(300,520,o),
(336,540,o),
(359,569,o),
(359,589,qs),
(359,609,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 3 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 8 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
13 1 11 12 11 106 0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 12 0 10 2 12 10 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
13 1 11 12 11 106 0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 12 0 10 2 12 10 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
13 1 11 12 11 106 0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 12 0 10 2 12 10 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 69 values pushed */
13 1 11 12 11 106 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 12 0 10 2 12 10 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 84 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
107 105 101 99 93 91 87 85 79 77 37 36 36 36 36 41 40 43 36 14 24
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (25,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (112,0);
ref = breve;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
67 1 9 7 54 1 5 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 4 9 3 9 4 3 104 0 12 0 10 2 12 10 91 13 1 11 0 1 7 11 1 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 4 9 3 9 4 3 104 0 12 0 10 2 12 10 91 0 2 0 0 1 2 0 91 13 1 11 0 1 7 11 1 91 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
111 109 105 103 97 95 92 90 82 80 36 38 36 38 36 40 36 44 38 14 35
CALL[ ]	/* CallFunction */";
};
width = 468;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(302,211,o),
(232,233,o),
(194,233,qs),
(156,233,o),
(94,214,o),
(50,180,o),
(26,133,o),
(26,106,qs),
(26,53,o),
(109,-11,o),
(179,-11,qs),
(226,-11,o),
(303,19,o),
(335,48,q),
(344,16,o),
(387,-11,o),
(414,-11,qs),
(443,-11,o),
(481,22,o),
(481,65,qs),
(481,76,o),
(476,88,o),
(468,88,qs),
(459,88,o),
(458,76,qs),
(457,65,o),
(454,44,o),
(445,28,o),
(429,19,o),
(415,19,qs),
(403,19,o),
(386,28,o),
(375,51,o),
(371,91,o),
(371,122,qs),
(371,138,o),
(372,179,o),
(373,219,o),
(374,256,o),
(374,268,qs),
(374,367,o),
(299,457,o),
(220,457,qs),
(184,457,o),
(124,440,o),
(81,409,o),
(56,366,o),
(56,339,qs),
(56,313,o),
(81,276,o),
(104,276,qs),
(121,276,o),
(140,296,o),
(140,311,qs),
(140,327,o),
(123,336,o),
(115,338,qs),
(107,340,o),
(95,346,o),
(95,358,qs),
(95,374,o),
(115,400,o),
(148,418,o),
(190,427,o),
(212,427,qs),
(278,427,o),
(334,342,o),
(334,264,qs),
(334,257,o),
(333,232,o),
(333,219,qs),
(333,187,l)
);
},
{
closed = 1;
nodes = (
(87,164,o),
(123,189,o),
(171,203,o),
(199,203,qs),
(227,203,o),
(276,190,o),
(312,167,o),
(333,135,o),
(333,117,qs),
(333,97,o),
(309,62,o),
(268,35,o),
(214,19,o),
(184,19,qs),
(132,19,o),
(67,66,o),
(67,106,qs),
(67,128,o)
);
},
{
closed = 1;
nodes = (
(316,613,o),
(308,613,qs),
(291,613,o),
(291,590,qs),
(291,580,o),
(278,560,o),
(256,545,o),
(229,535,o),
(216,535,qs),
(187,535,o),
(142,559,o),
(142,590,qs),
(142,602,o),
(136,613,o),
(125,613,qs),
(108,613,o),
(108,589,qs),
(108,574,o),
(125,546,o),
(154,523,o),
(193,510,o),
(216,510,qs),
(235,510,o),
(275,521,o),
(307,541,o),
(327,571,o),
(327,589,qs),
(327,605,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 4 9 57 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 4 9 3 9 4 3 104 0 12 0 10 2 12 10 91 13 1 11 0 1 7 11 1 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 4 9 3 9 4 3 104 0 12 0 10 2 12 10 91 0 2 0 0 1 2 0 91 13 1 11 0 1 7 11 1 91 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
116 114 109 107 103 101 96 94 86 84 37 38 36 36 37 43 38 44 37 14 24
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = abreve;
unicode = 259;
},
{
glyphname = acircumflex;
kernLeft = a;
kernRight = a;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(302,222,o),
(240,238,o),
(204,238,qs),
(119,238,o),
(24,163,o),
(24,106,qs),
(24,52,o),
(107,-11,o),
(177,-11,qs),
(224,-11,o),
(303,19,o),
(335,48,q),
(345,13,o),
(388,-11,o),
(414,-11,qs),
(450,-11,o),
(498,28,o),
(498,69,qs),
(498,92,o),
(481,108,o),
(466,108,qs),
(446,108,o),
(438,90,o),
(437,79,qs),
(437,74,o),
(433,67,o),
(428,67,qs),
(421,67,o),
(419,87,o),
(419,124,qs),
(419,139,o),
(420,178,o),
(422,219,o),
(423,257,o),
(423,269,qs),
(423,363,o),
(333,465,o),
(236,465,qs),
(194,465,o),
(125,445,o),
(76,411,o),
(49,363,o),
(49,335,qs),
(49,323,o),
(54,299,o),
(68,278,o),
(91,265,o),
(108,265,qs),
(125,265,o),
(157,281,o),
(157,303,qs),
(157,326,o),
(137,335,qs),
(135,336,o),
(126,341,o),
(126,349,qs),
(126,358,o),
(143,376,o),
(171,389,o),
(208,397,o),
(228,397,qs),
(259,397,o),
(299,378,o),
(323,342,o),
(333,292,o),
(333,261,qs),
(333,203,l)
);
},
{
closed = 1;
nodes = (
(162,176,o),
(218,176,qs),
(268,176,o),
(329,143,o),
(329,122,qs),
(329,113,o),
(316,90,o),
(287,71,o),
(240,57,o),
(206,57,qs),
(159,57,o),
(116,84,o),
(116,110,qs),
(116,135,o)
);
},
{
closed = 1;
nodes = (
(363,523,o),
(363,531,qs),
(363,547,o),
(328,592,o),
(282,634,o),
(239,664,o),
(230,664,qs),
(223,664,o),
(180,635,o),
(134,592,o),
(98,543,o),
(98,524,qs),
(98,519,o),
(105,510,o),
(111,510,qs),
(116,510,o),
(142,523,o),
(175,542,o),
(213,563,o),
(230,572,q),
(247,563,o),
(285,542,o),
(319,523,o),
(345,510,o),
(350,510,qs),
(357,510,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
86 1 10 12 66 1 9 7 42 1 3 4 54 1 5 3 4 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
86 1 10 12 66 1 9 7 42 1 3 4 54 1 5 8 4 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 12 10 12 106 11 13 2 10 2 10 106 0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 12 10 12 106 11 13 2 10 2 10 106 0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 2 0 0 1 2 0 92 0 7 0 9 4 7 9 91 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 12 10 12 106 11 13 2 10 2 10 106 0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 2 0 0 1 2 0 92 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
0 12 10 12 106 11 13 2 10 2 10 106 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 2 0 0 1 2 0 92 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
82 81 100 98 92 90 81 106 82 106 79 77 37 36 36 36 36 41 40 43 36 14 24
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (25,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (66,0);
ref = circumflex;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
91 1 10 12 67 1 9 7 54 1 5 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 12 10 12 106 11 13 2 10 2 10 106 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 12 10 12 106 11 13 2 10 2 10 106 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 2 0 0 1 2 0 92 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
87 86 104 102 97 95 86 110 87 110 82 80 36 38 36 38 36 40 36 44 38 14 35
CALL[ ]	/* CallFunction */";
};
width = 468;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(302,211,o),
(232,233,o),
(194,233,qs),
(156,233,o),
(94,214,o),
(50,180,o),
(26,133,o),
(26,106,qs),
(26,53,o),
(109,-11,o),
(179,-11,qs),
(226,-11,o),
(303,19,o),
(335,48,q),
(344,16,o),
(387,-11,o),
(414,-11,qs),
(443,-11,o),
(481,22,o),
(481,65,qs),
(481,76,o),
(476,88,o),
(468,88,qs),
(459,88,o),
(458,76,qs),
(457,65,o),
(454,44,o),
(445,28,o),
(429,19,o),
(415,19,qs),
(403,19,o),
(386,28,o),
(375,51,o),
(371,91,o),
(371,122,qs),
(371,138,o),
(372,179,o),
(373,219,o),
(374,256,o),
(374,268,qs),
(374,367,o),
(299,457,o),
(220,457,qs),
(184,457,o),
(124,440,o),
(81,409,o),
(56,366,o),
(56,339,qs),
(56,313,o),
(81,276,o),
(104,276,qs),
(121,276,o),
(140,296,o),
(140,311,qs),
(140,327,o),
(123,336,o),
(115,338,qs),
(107,340,o),
(95,346,o),
(95,358,qs),
(95,374,o),
(115,400,o),
(148,418,o),
(190,427,o),
(212,427,qs),
(278,427,o),
(334,342,o),
(334,264,qs),
(334,257,o),
(333,232,o),
(333,219,qs),
(333,187,l)
);
},
{
closed = 1;
nodes = (
(87,164,o),
(123,189,o),
(171,203,o),
(199,203,qs),
(227,203,o),
(276,190,o),
(312,167,o),
(333,135,o),
(333,117,qs),
(333,97,o),
(309,62,o),
(268,35,o),
(214,19,o),
(184,19,qs),
(132,19,o),
(67,66,o),
(67,106,qs),
(67,128,o)
);
},
{
closed = 1;
nodes = (
(341,521,qs),
(341,530,o),
(308,570,o),
(265,610,o),
(222,640,o),
(213,640,qs),
(204,640,o),
(163,610,o),
(119,570,o),
(86,530,o),
(86,521,qs),
(86,510,o),
(94,510,qs),
(99,510,o),
(125,528,o),
(158,554,o),
(196,584,o),
(213,596,q),
(230,584,o),
(268,554,o),
(302,528,o),
(328,510,o),
(333,510,qs),
(341,510,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
95 1 10 12 71 1 4 9 57 1 3 4 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 12 10 12 106 11 13 2 10 2 10 106 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 12 10 12 106 11 13 2 10 2 10 106 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 2 0 0 1 2 0 92 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
91 90 108 106 101 99 90 113 91 113 86 84 37 38 36 36 37 43 38 44 37 14 24
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = acircumflex;
unicode = 226;
},
{
glyphname = adieresis;
kernLeft = a;
kernRight = a;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(302,222,o),
(240,238,o),
(204,238,qs),
(119,238,o),
(24,163,o),
(24,106,qs),
(24,52,o),
(107,-11,o),
(177,-11,qs),
(224,-11,o),
(303,19,o),
(335,48,q),
(345,13,o),
(388,-11,o),
(414,-11,qs),
(450,-11,o),
(498,28,o),
(498,69,qs),
(498,92,o),
(481,108,o),
(466,108,qs),
(446,108,o),
(438,90,o),
(437,79,qs),
(437,74,o),
(433,67,o),
(428,67,qs),
(421,67,o),
(419,87,o),
(419,124,qs),
(419,139,o),
(420,178,o),
(422,219,o),
(423,257,o),
(423,269,qs),
(423,363,o),
(333,465,o),
(236,465,qs),
(194,465,o),
(125,445,o),
(76,411,o),
(49,363,o),
(49,335,qs),
(49,323,o),
(54,299,o),
(68,278,o),
(91,265,o),
(108,265,qs),
(125,265,o),
(157,281,o),
(157,303,qs),
(157,326,o),
(137,335,qs),
(135,336,o),
(126,341,o),
(126,349,qs),
(126,358,o),
(143,376,o),
(171,389,o),
(208,397,o),
(228,397,qs),
(259,397,o),
(299,378,o),
(323,342,o),
(333,292,o),
(333,261,qs),
(333,203,l)
);
},
{
closed = 1;
nodes = (
(162,176,o),
(218,176,qs),
(268,176,o),
(329,143,o),
(329,122,qs),
(329,113,o),
(316,90,o),
(287,71,o),
(240,57,o),
(206,57,qs),
(159,57,o),
(116,84,o),
(116,110,qs),
(116,135,o)
);
},
{
closed = 1;
nodes = (
(107,509,o),
(132,509,qs),
(143,509,o),
(167,515,o),
(186,531,o),
(199,558,o),
(199,579,qs),
(199,606,o),
(163,640,o),
(139,640,qs),
(121,640,o),
(96,626,o),
(80,606,o),
(73,583,o),
(73,575,qs),
(73,546,o)
);
},
{
closed = 1;
nodes = (
(314,486,o),
(339,486,qs),
(350,486,o),
(374,492,o),
(393,508,o),
(406,535,o),
(406,556,qs),
(406,583,o),
(370,617,o),
(346,617,qs),
(328,617,o),
(303,603,o),
(287,583,o),
(280,560,o),
(280,552,qs),
(280,523,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 3 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 8 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 10 0 11 13 10 11 91 0 12 0 13 2 12 13 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 10 0 11 13 10 11 91 0 12 0 13 2 12 13 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 10 0 11 13 10 11 91 0 12 0 13 2 12 13 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 71 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 10 0 11 13 10 11 91 0 12 0 13 2 12 13 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
111 109 103 101 95 93 87 85 79 77 37 36 36 36 36 41 40 43 36 14 24
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (25,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (58,0);
ref = dieresis;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
67 1 9 7 54 1 5 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 10 0 11 13 10 11 91 0 12 0 13 2 12 13 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 10 0 11 13 10 11 91 0 12 0 13 2 12 13 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
112 110 106 104 98 96 92 90 82 80 36 38 36 38 36 40 36 44 38 14 35
CALL[ ]	/* CallFunction */";
};
width = 468;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(302,211,o),
(232,233,o),
(194,233,qs),
(156,233,o),
(94,214,o),
(50,180,o),
(26,133,o),
(26,106,qs),
(26,53,o),
(109,-11,o),
(179,-11,qs),
(226,-11,o),
(303,19,o),
(335,48,q),
(344,16,o),
(387,-11,o),
(414,-11,qs),
(443,-11,o),
(481,22,o),
(481,65,qs),
(481,76,o),
(476,88,o),
(468,88,qs),
(459,88,o),
(458,76,qs),
(457,65,o),
(454,44,o),
(445,28,o),
(429,19,o),
(415,19,qs),
(403,19,o),
(386,28,o),
(375,51,o),
(371,91,o),
(371,122,qs),
(371,138,o),
(372,179,o),
(373,219,o),
(374,256,o),
(374,268,qs),
(374,367,o),
(299,457,o),
(220,457,qs),
(184,457,o),
(124,440,o),
(81,409,o),
(56,366,o),
(56,339,qs),
(56,313,o),
(81,276,o),
(104,276,qs),
(121,276,o),
(140,296,o),
(140,311,qs),
(140,327,o),
(123,336,o),
(115,338,qs),
(107,340,o),
(95,346,o),
(95,358,qs),
(95,374,o),
(115,400,o),
(148,418,o),
(190,427,o),
(212,427,qs),
(278,427,o),
(334,342,o),
(334,264,qs),
(334,257,o),
(333,232,o),
(333,219,qs),
(333,187,l)
);
},
{
closed = 1;
nodes = (
(87,164,o),
(123,189,o),
(171,203,o),
(199,203,qs),
(227,203,o),
(276,190,o),
(312,167,o),
(333,135,o),
(333,117,qs),
(333,97,o),
(309,62,o),
(268,35,o),
(214,19,o),
(184,19,qs),
(132,19,o),
(67,66,o),
(67,106,qs),
(67,128,o)
);
},
{
closed = 1;
nodes = (
(94,533,o),
(108,533,qs),
(122,533,o),
(149,552,o),
(149,579,qs),
(149,596,o),
(129,616,o),
(115,616,qs),
(104,616,o),
(89,607,o),
(79,594,o),
(74,580,o),
(74,575,qs),
(74,557,o)
);
},
{
closed = 1;
nodes = (
(301,510,o),
(315,510,qs),
(329,510,o),
(356,529,o),
(356,556,qs),
(356,573,o),
(336,593,o),
(322,593,qs),
(311,593,o),
(296,584,o),
(286,571,o),
(281,557,o),
(281,552,qs),
(281,534,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 4 9 57 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 10 0 11 13 10 11 91 0 12 0 13 2 12 13 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 10 0 11 13 10 11 91 0 12 0 13 2 12 13 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
116 114 110 108 102 100 96 94 86 84 37 38 36 36 37 43 38 44 37 14 24
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = adieresis;
unicode = 228;
},
{
glyphname = agrave;
kernLeft = a;
kernRight = a;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(198,566,o),
(250,520,o),
(301,486,o),
(315,486,qs),
(326,486,o),
(352,497,o),
(352,508,qs),
(352,511,o),
(328,564,o),
(292,625,o),
(249,674,o),
(230,674,qs),
(198,673,o),
(160,645,o),
(160,626,qs),
(160,613,o)
);
},
{
closed = 1;
nodes = (
(302,222,o),
(240,238,o),
(204,238,qs),
(119,238,o),
(24,163,o),
(24,106,qs),
(24,52,o),
(107,-11,o),
(177,-11,qs),
(224,-11,o),
(303,19,o),
(335,48,q),
(345,13,o),
(388,-11,o),
(414,-11,qs),
(450,-11,o),
(498,28,o),
(498,69,qs),
(498,92,o),
(481,108,o),
(466,108,qs),
(446,108,o),
(438,90,o),
(437,79,qs),
(437,74,o),
(433,67,o),
(428,67,qs),
(421,67,o),
(419,87,o),
(419,124,qs),
(419,139,o),
(420,178,o),
(422,219,o),
(423,257,o),
(423,269,qs),
(423,363,o),
(333,465,o),
(236,465,qs),
(194,465,o),
(125,445,o),
(76,411,o),
(49,363,o),
(49,335,qs),
(49,323,o),
(54,299,o),
(68,278,o),
(91,265,o),
(108,265,qs),
(125,265,o),
(157,281,o),
(157,303,qs),
(157,326,o),
(137,335,qs),
(135,336,o),
(126,341,o),
(126,349,qs),
(126,358,o),
(143,376,o),
(171,389,o),
(208,397,o),
(228,397,qs),
(259,397,o),
(299,378,o),
(323,342,o),
(333,292,o),
(333,261,qs),
(333,203,l)
);
},
{
closed = 1;
nodes = (
(162,176,o),
(218,176,qs),
(268,176,o),
(329,143,o),
(329,122,qs),
(329,113,o),
(316,90,o),
(287,71,o),
(240,57,o),
(206,57,qs),
(159,57,o),
(116,84,o),
(116,110,qs),
(116,135,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
82 1 11 9 58 1 5 6 70 1 7 5 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
82 1 11 9 58 1 5 6 70 1 7 10 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 0 1 0 106 0 1 4 1 106 0 3 2 9 2 3 9 104 0 6 11 5 5 6 96 0 9 0 11 6 9 11 91 0 2 2 4 83 0 4 4 23 67 10 1 5 5 7 84 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 0 1 0 106 0 1 4 1 106 0 3 2 9 2 3 9 104 0 6 11 5 5 6 96 0 4 0 2 3 4 2 92 0 9 0 11 6 9 11 91 10 1 5 5 7 84 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 0 1 0 106 0 1 4 1 106 0 3 2 9 2 3 9 104 0 6 11 5 5 6 96 0 4 0 2 3 4 2 92 0 9 0 11 6 9 11 91 0 5 5 7 84 8 1 7 7 24 67 0 10 10 7 83 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 0 1 0 106 0 1 4 1 106 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 4 0 2 3 4 2 92 0 9 0 11 6 9 11 91 0 5 5 7 84 8 1 7 7 24 67 0 10 10 7 83 8 1 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
95 93 87 85 80 78 36 36 36 41 40 43 40 38 34 12 24
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(194,569,o),
(239,527,o),
(284,495,o),
(295,495,qs),
(303,495,o),
(320,503,o),
(320,513,qs),
(320,515,o),
(309,539,o),
(290,572,o),
(267,609,o),
(242,640,o),
(218,661,o),
(209,661,qs),
(186,661,o),
(160,640,o),
(160,623,qs),
(160,612,o)
);
},
{
closed = 1;
nodes = (
(269,243,o),
(192,243,qs),
(154,243,o),
(93,222,o),
(49,186,o),
(25,136,o),
(25,107,qs),
(25,53,o),
(108,-11,o),
(178,-11,qs),
(225,-11,o),
(302,19,o),
(334,48,q),
(343,16,o),
(386,-11,o),
(413,-11,qs),
(428,-11,o),
(455,-3,o),
(477,15,o),
(490,44,o),
(490,65,qs),
(490,78,o),
(482,98,o),
(469,98,qs),
(455,98,o),
(443,82,o),
(442,76,qs),
(440,63,o),
(433,49,o),
(422,49,qs),
(408,49,o),
(400,77,o),
(400,123,qs),
(400,138,o),
(401,179,o),
(402,220,o),
(403,256,o),
(403,267,qs),
(403,462,o),
(226,462,qs),
(147,462,o),
(55,393,o),
(55,339,qs),
(55,313,o),
(81,269,o),
(112,269,qs),
(132,269,o),
(156,288,o),
(156,305,qs),
(156,321,o),
(138,335,o),
(131,336,qs),
(121,338,o),
(111,343,o),
(111,351,qs),
(111,363,o),
(132,382,o),
(163,395,o),
(201,402,o),
(218,402,qs),
(278,402,o),
(333,327,o),
(333,261,qs),
(333,256,o),
(332,235,o),
(332,224,qs),
(332,197,l)
);
},
{
closed = 1;
nodes = (
(115,152,o),
(147,172,o),
(191,183,o),
(217,183,qs),
(241,183,o),
(282,173,o),
(314,156,o),
(332,132,o),
(332,118,qs),
(332,103,o),
(311,78,o),
(275,60,o),
(228,49,o),
(201,49,qs),
(158,49,o),
(96,78,o),
(96,108,qs),
(96,124,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
84 1 11 9 71 1 7 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 0 1 0 106 0 1 4 1 106 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 9 0 11 6 9 11 91 0 2 2 4 83 0 4 4 23 67 10 1 5 5 7 83 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 0 1 0 106 0 1 4 1 106 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 4 0 2 3 4 2 92 0 9 0 11 6 9 11 91 10 1 5 5 7 83 8 1 7 7 24 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
99 97 89 87 83 81 36 38 36 40 36 44 41 40 34 12 24
CALL[ ]	/* CallFunction */";
};
width = 468;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(302,211,o),
(232,233,o),
(194,233,qs),
(156,233,o),
(94,214,o),
(50,180,o),
(26,133,o),
(26,106,qs),
(26,53,o),
(109,-11,o),
(179,-11,qs),
(226,-11,o),
(303,19,o),
(335,48,q),
(344,16,o),
(387,-11,o),
(414,-11,qs),
(443,-11,o),
(481,22,o),
(481,65,qs),
(481,76,o),
(476,88,o),
(468,88,qs),
(459,88,o),
(458,76,qs),
(457,65,o),
(454,44,o),
(445,28,o),
(429,19,o),
(415,19,qs),
(403,19,o),
(386,28,o),
(375,51,o),
(371,91,o),
(371,122,qs),
(371,138,o),
(372,179,o),
(373,219,o),
(374,256,o),
(374,268,qs),
(374,367,o),
(299,457,o),
(220,457,qs),
(184,457,o),
(124,440,o),
(81,409,o),
(56,366,o),
(56,339,qs),
(56,313,o),
(81,276,o),
(104,276,qs),
(121,276,o),
(140,296,o),
(140,311,qs),
(140,327,o),
(123,336,o),
(115,338,qs),
(107,340,o),
(95,346,o),
(95,358,qs),
(95,374,o),
(115,400,o),
(148,418,o),
(190,427,o),
(212,427,qs),
(278,427,o),
(334,342,o),
(334,264,qs),
(334,257,o),
(333,232,o),
(333,219,qs),
(333,187,l)
);
},
{
closed = 1;
nodes = (
(87,164,o),
(123,189,o),
(171,203,o),
(199,203,qs),
(227,203,o),
(276,190,o),
(312,167,o),
(333,135,o),
(333,117,qs),
(333,97,o),
(309,62,o),
(268,35,o),
(214,19,o),
(184,19,qs),
(132,19,o),
(67,66,o),
(67,106,qs),
(67,128,o)
);
},
{
closed = 1;
nodes = (
(185,574,o),
(221,538,o),
(256,510,o),
(263,510,qs),
(271,510,o),
(271,521,qs),
(271,530,o),
(247,570,o),
(215,610,o),
(183,640,o),
(176,640,qs),
(168,640,o),
(157,632,o),
(157,618,qs),
(157,610,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 4 9 57 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 10 11 10 106 0 11 2 11 106 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 7 0 9 4 7 9 92 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 10 11 10 106 0 11 2 11 106 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 92 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
101 99 94 92 86 84 37 38 36 36 37 43 38 44 37 12 24
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = agrave;
unicode = 224;
},
{
glyphname = amacron;
kernLeft = a;
kernRight = a;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(302,222,o),
(240,238,o),
(204,238,qs),
(119,238,o),
(24,163,o),
(24,106,qs),
(24,52,o),
(107,-11,o),
(177,-11,qs),
(224,-11,o),
(303,19,o),
(335,48,q),
(345,13,o),
(388,-11,o),
(414,-11,qs),
(450,-11,o),
(498,28,o),
(498,69,qs),
(498,92,o),
(481,108,o),
(466,108,qs),
(446,108,o),
(438,90,o),
(437,79,qs),
(437,74,o),
(433,67,o),
(428,67,qs),
(421,67,o),
(419,87,o),
(419,124,qs),
(419,139,o),
(420,178,o),
(422,219,o),
(423,257,o),
(423,269,qs),
(423,363,o),
(333,465,o),
(236,465,qs),
(194,465,o),
(125,445,o),
(76,411,o),
(49,363,o),
(49,335,qs),
(49,323,o),
(54,299,o),
(68,278,o),
(91,265,o),
(108,265,qs),
(125,265,o),
(157,281,o),
(157,303,qs),
(157,326,o),
(137,335,qs),
(135,336,o),
(126,341,o),
(126,349,qs),
(126,358,o),
(143,376,o),
(171,389,o),
(208,397,o),
(228,397,qs),
(259,397,o),
(299,378,o),
(323,342,o),
(333,292,o),
(333,261,qs),
(333,203,l)
);
},
{
closed = 1;
nodes = (
(162,176,o),
(218,176,qs),
(268,176,o),
(329,143,o),
(329,122,qs),
(329,113,o),
(316,90,o),
(287,71,o),
(240,57,o),
(206,57,qs),
(159,57,o),
(116,84,o),
(116,110,qs),
(116,135,o)
);
},
{
closed = 1;
nodes = (
(283,616,o),
(241,616,qs),
(228,616,o),
(193,617,o),
(157,617,o),
(127,618,o),
(120,618,qs),
(103,618,o),
(87,593,o),
(87,579,qs),
(87,565,o),
(106,539,o),
(120,539,qs),
(138,539,o),
(202,539,o),
(274,540,o),
(341,540,o),
(361,540,qs),
(372,540,o),
(386,549,o),
(394,562,o),
(397,577,o),
(397,582,qs),
(397,597,o),
(380,619,o),
(369,619,qs),
(345,619,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 3 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 8 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 12 1 10 0 11 2 10 11 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 12 1 10 0 11 2 10 11 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 12 1 10 0 11 2 10 11 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 12 1 10 0 11 2 10 11 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
82 81 95 88 81 107 82 99 79 77 37 36 36 36 36 41 40 43 36 13 24
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (25,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (78,31);
ref = macron;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
67 1 9 7 54 1 5 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 12 1 10 0 11 2 10 11 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 12 1 10 0 11 2 10 11 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
87 86 98 91 86 110 87 102 82 80 36 38 36 38 36 40 36 44 38 13 35
CALL[ ]	/* CallFunction */";
};
width = 468;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(302,211,o),
(232,233,o),
(194,233,qs),
(156,233,o),
(94,214,o),
(50,180,o),
(26,133,o),
(26,106,qs),
(26,53,o),
(109,-11,o),
(179,-11,qs),
(226,-11,o),
(303,19,o),
(335,48,q),
(344,16,o),
(387,-11,o),
(414,-11,qs),
(443,-11,o),
(481,22,o),
(481,65,qs),
(481,76,o),
(476,88,o),
(468,88,qs),
(459,88,o),
(458,76,qs),
(457,65,o),
(454,44,o),
(445,28,o),
(429,19,o),
(415,19,qs),
(403,19,o),
(386,28,o),
(375,51,o),
(371,91,o),
(371,122,qs),
(371,138,o),
(372,179,o),
(373,219,o),
(374,256,o),
(374,268,qs),
(374,367,o),
(299,457,o),
(220,457,qs),
(184,457,o),
(124,440,o),
(81,409,o),
(56,366,o),
(56,339,qs),
(56,313,o),
(81,276,o),
(104,276,qs),
(121,276,o),
(140,296,o),
(140,311,qs),
(140,327,o),
(123,336,o),
(115,338,qs),
(107,340,o),
(95,346,o),
(95,358,qs),
(95,374,o),
(115,400,o),
(148,418,o),
(190,427,o),
(212,427,qs),
(278,427,o),
(334,342,o),
(334,264,qs),
(334,257,o),
(333,232,o),
(333,219,qs),
(333,187,l)
);
},
{
closed = 1;
nodes = (
(87,164,o),
(123,189,o),
(171,203,o),
(199,203,qs),
(227,203,o),
(276,190,o),
(312,167,o),
(333,135,o),
(333,117,qs),
(333,97,o),
(309,62,o),
(268,35,o),
(214,19,o),
(184,19,qs),
(132,19,o),
(67,66,o),
(67,106,qs),
(67,128,o)
);
},
{
closed = 1;
nodes = (
(268,539,o),
(226,539,qs),
(213,539,o),
(178,540,o),
(142,540,o),
(112,541,o),
(105,541,qs),
(97,541,o),
(89,531,o),
(89,526,qs),
(89,521,o),
(98,510,o),
(105,510,qs),
(123,510,o),
(187,510,o),
(259,511,o),
(326,511,o),
(346,511,qs),
(357,511,o),
(365,524,o),
(365,529,qs),
(365,534,o),
(358,542,o),
(354,542,qs),
(330,542,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 4 9 57 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 12 1 10 0 11 2 10 11 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 12 1 10 0 11 2 10 11 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
91 90 102 95 90 114 91 106 86 84 37 38 36 36 37 43 38 44 37 13 24
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = amacron;
unicode = 257;
},
{
glyphname = aogonek;
kernLeft = a;
kernRight = a;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(482,-151,o),
(502,-135,o),
(512,-117,o),
(512,-109,qs),
(512,-100,o),
(497,-85,o),
(487,-85,qs),
(479,-85,o),
(470,-93,o),
(459,-102,o),
(442,-109,o),
(427,-109,qs),
(416,-109,o),
(398,-99,o),
(398,-88,qs),
(398,-69,o),
(418,-22,o),
(437,-9,q),
(464,-3,o),
(498,35,o),
(498,69,qs),
(498,92,o),
(481,108,o),
(466,108,qs),
(446,108,o),
(438,90,o),
(437,79,qs),
(437,74,o),
(433,67,o),
(428,67,qs),
(421,67,o),
(419,87,o),
(419,124,qs),
(419,139,o),
(420,178,o),
(422,219,o),
(423,257,o),
(423,269,qs),
(423,363,o),
(333,465,o),
(236,465,qs),
(194,465,o),
(125,445,o),
(76,411,o),
(49,363,o),
(49,335,qs),
(49,323,o),
(54,299,o),
(68,278,o),
(91,265,o),
(108,265,qs),
(125,265,o),
(157,281,o),
(157,303,qs),
(157,326,o),
(137,335,qs),
(135,336,o),
(126,341,o),
(126,349,qs),
(126,358,o),
(143,376,o),
(171,389,o),
(208,397,o),
(228,397,qs),
(259,397,o),
(299,378,o),
(323,342,o),
(333,292,o),
(333,261,qs),
(333,203,l),
(302,222,o),
(240,238,o),
(204,238,qs),
(119,238,o),
(24,163,o),
(24,106,qs),
(24,52,o),
(107,-11,o),
(177,-11,qs),
(224,-11,o),
(303,19,o),
(335,48,q),
(342,24,o),
(367,-1,o),
(383,-6,q),
(374,-11,o),
(351,-26,o),
(332,-46,o),
(319,-72,o),
(319,-87,qs),
(319,-106,o),
(339,-134,o),
(370,-153,o),
(409,-162,o),
(429,-162,qs),
(450,-162,o)
);
},
{
closed = 1;
nodes = (
(162,176,o),
(218,176,qs),
(268,176,o),
(329,143,o),
(329,122,qs),
(329,113,o),
(316,90,o),
(287,71,o),
(240,57,o),
(206,57,qs),
(159,57,o),
(116,84,o),
(116,110,qs),
(116,135,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
25 1 11 2 68 1 6 7 13 10 2 1 6 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
25 1 11 2 68 1 6 7 13 10 2 1 10 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 4 3 2 3 4 2 104 0 7 11 6 11 7 6 104 0 9 1 8 1 9 8 104 0 2 0 11 7 2 11 91 0 8 12 1 0 8 0 88 0 3 3 5 83 0 5 5 23 67 10 1 6 6 1 83 0 1 1 24 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 4 3 2 3 4 2 104 0 7 11 6 11 7 6 104 0 9 1 8 1 9 8 104 0 5 0 3 4 5 3 91 0 2 0 11 7 2 11 91 0 8 12 1 0 8 0 88 10 1 6 6 1 83 0 1 1 24 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
0 4 3 2 3 4 2 104 0 7 11 6 11 7 6 104 0 6 10 11 6 10 102 0 9 1 8 1 9 8 104 0 5 0 3 4 5 3 91 0 2 0 11 7 2 11 91 0 8 12 1 0 8 0 88 0 10 10 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 108 106 100 98 89 87 84 82 72 70 66 64 55 53 45 43 32 30 23 21 17 15 0 95 1 95 13 15
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (25,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (325,-14);
ref = ogonek;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
67 1 9 7 54 1 13 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 11 5 10 5 11 10 104 0 7 0 9 4 7 9 91 0 10 0 12 10 12 88 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 67 14 1 13 13 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 72 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 11 5 10 5 11 10 104 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 10 0 12 10 12 88 8 1 3 3 5 83 6 1 5 5 24 67 14 1 13 13 5 84 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
86 86 86 115 86 115 108 106 100 98 95 93 82 80 36 38 36 38 36 40 36 44 38 15 35
CALL[ ]	/* CallFunction */";
};
width = 468;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(302,211,o),
(232,233,o),
(194,233,qs),
(156,233,o),
(94,214,o),
(50,180,o),
(26,133,o),
(26,106,qs),
(26,53,o),
(109,-11,o),
(179,-11,qs),
(226,-11,o),
(303,19,o),
(335,48,q),
(343,21,o),
(375,-6,o),
(396,-9,q),
(388,-14,o),
(370,-29,o),
(355,-49,o),
(344,-75,o),
(344,-91,qs),
(344,-123,o),
(390,-164,o),
(425,-164,qs),
(443,-164,o),
(471,-151,o),
(492,-134,o),
(503,-117,o),
(503,-113,qs),
(503,-107,o),
(498,-97,o),
(489,-97,qs),
(482,-97,o),
(471,-110,o),
(458,-125,o),
(440,-137,o),
(427,-137,qs),
(415,-137,o),
(400,-127,o),
(391,-112,o),
(388,-96,o),
(388,-90,qs),
(388,-84,o),
(392,-64,o),
(401,-40,o),
(418,-17,o),
(431,-9,q),
(454,-5,o),
(481,29,o),
(481,65,qs),
(481,76,o),
(476,88,o),
(468,88,qs),
(459,88,o),
(458,76,qs),
(457,65,o),
(454,44,o),
(445,28,o),
(429,19,o),
(415,19,qs),
(403,19,o),
(386,28,o),
(375,51,o),
(371,91,o),
(371,122,qs),
(371,138,o),
(372,179,o),
(373,219,o),
(374,256,o),
(374,268,qs),
(374,367,o),
(299,457,o),
(220,457,qs),
(184,457,o),
(124,440,o),
(81,409,o),
(56,366,o),
(56,339,qs),
(56,313,o),
(81,276,o),
(104,276,qs),
(121,276,o),
(140,296,o),
(140,311,qs),
(140,327,o),
(123,336,o),
(115,338,qs),
(107,340,o),
(95,346,o),
(95,358,qs),
(95,374,o),
(115,400,o),
(148,418,o),
(190,427,o),
(212,427,qs),
(278,427,o),
(334,342,o),
(334,264,qs),
(334,257,o),
(333,232,o),
(333,219,qs),
(333,187,l)
);
},
{
closed = 1;
nodes = (
(87,164,o),
(123,189,o),
(171,203,o),
(199,203,qs),
(227,203,o),
(276,190,o),
(312,167,o),
(333,135,o),
(333,117,qs),
(333,97,o),
(309,62,o),
(268,35,o),
(214,19,o),
(184,19,qs),
(132,19,o),
(67,66,o),
(67,106,qs),
(67,128,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
102 1 4 11 88 1 3 4 85 1 8 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 1 0 9 0 1 9 104 0 4 11 3 11 4 3 104 0 6 8 5 8 6 5 104 0 9 0 11 4 9 11 91 0 5 0 7 5 7 88 0 0 0 2 83 0 2 2 23 67 10 1 3 3 8 83 0 8 8 24 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
0 1 0 9 0 1 9 104 0 4 11 3 11 4 3 104 0 6 8 5 8 6 5 104 0 2 0 0 1 2 0 91 0 9 0 11 4 9 11 91 0 5 0 7 5 7 88 10 1 3 3 8 83 0 8 8 24 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
117 115 107 105 100 98 44 38 35 46 37 43 38 44 37 12 24
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = aogonek;
unicode = 261;
},
{
glyphname = aring;
kernLeft = a;
kernRight = a;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(302,222,o),
(240,238,o),
(204,238,qs),
(119,238,o),
(24,163,o),
(24,106,qs),
(24,52,o),
(107,-11,o),
(177,-11,qs),
(224,-11,o),
(303,19,o),
(335,48,q),
(345,13,o),
(388,-11,o),
(414,-11,qs),
(450,-11,o),
(498,28,o),
(498,69,qs),
(498,92,o),
(481,108,o),
(466,108,qs),
(446,108,o),
(438,90,o),
(437,79,qs),
(437,74,o),
(433,67,o),
(428,67,qs),
(421,67,o),
(419,87,o),
(419,124,qs),
(419,139,o),
(420,178,o),
(422,219,o),
(423,257,o),
(423,269,qs),
(423,363,o),
(333,465,o),
(236,465,qs),
(194,465,o),
(125,445,o),
(76,411,o),
(49,363,o),
(49,335,qs),
(49,323,o),
(54,299,o),
(68,278,o),
(91,265,o),
(108,265,qs),
(125,265,o),
(157,281,o),
(157,303,qs),
(157,326,o),
(137,335,qs),
(135,336,o),
(126,341,o),
(126,349,qs),
(126,358,o),
(143,376,o),
(171,389,o),
(208,397,o),
(228,397,qs),
(259,397,o),
(299,378,o),
(323,342,o),
(333,292,o),
(333,261,qs),
(333,203,l)
);
},
{
closed = 1;
nodes = (
(162,176,o),
(218,176,qs),
(268,176,o),
(329,143,o),
(329,122,qs),
(329,113,o),
(316,90,o),
(287,71,o),
(240,57,o),
(206,57,qs),
(159,57,o),
(116,84,o),
(116,110,qs),
(116,135,o)
);
},
{
closed = 1;
nodes = (
(240,649,qs),
(209,649,o),
(165,617,o),
(165,579,qs),
(165,544,o),
(211,510,o),
(245,510,qs),
(275,510,o),
(318,545,o),
(318,581,qs),
(318,649,o)
);
},
{
closed = 1;
nodes = (
(263,594,o),
(263,580,qs),
(263,564,o),
(251,553,o),
(245,553,qs),
(238,553,o),
(221,562,o),
(221,579,qs),
(221,596,o),
(236,607,o),
(241,607,qs),
(249,607,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 3 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 8 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
14 1 12 11 13 10 12 96 0 13 10 11 13 94 0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 11 0 10 2 11 10 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
14 1 12 11 13 11 12 13 104 0 13 10 11 13 10 102 0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 11 0 10 2 11 10 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
14 1 12 11 13 11 12 13 104 0 13 10 11 13 10 102 0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 11 0 10 2 11 10 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
14 1 12 11 13 11 12 13 104 0 13 10 11 13 10 102 0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 11 0 10 2 11 10 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 79 values pushed */
14 1 12 11 13 11 12 13 104 0 13 10 11 13 10 102 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 11 0 10 2 11 10 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
93 92 99 97 92 103 93 103 91 89 85 83 79 77 37 36 36 36 36 41 40 43 36 15 24
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (25,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (155,0);
ref = ring;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
67 1 9 7 54 1 5 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
14 1 12 11 13 10 12 96 0 13 10 11 13 94 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 11 0 10 2 11 10 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
14 1 12 11 13 11 12 13 104 0 13 10 11 13 10 102 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 11 0 10 2 11 10 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 69 values pushed */
14 1 12 11 13 11 12 13 104 0 13 10 11 13 10 102 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 11 0 10 2 11 10 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
99 98 105 103 98 109 99 109 96 94 90 88 82 80 36 38 36 38 36 40 36 44 38 15 35
CALL[ ]	/* CallFunction */";
};
width = 468;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(302,211,o),
(232,233,o),
(194,233,qs),
(156,233,o),
(94,214,o),
(50,180,o),
(26,133,o),
(26,106,qs),
(26,53,o),
(109,-11,o),
(179,-11,qs),
(226,-11,o),
(303,19,o),
(335,48,q),
(344,16,o),
(387,-11,o),
(414,-11,qs),
(443,-11,o),
(481,22,o),
(481,65,qs),
(481,76,o),
(476,88,o),
(468,88,qs),
(459,88,o),
(458,76,qs),
(457,65,o),
(454,44,o),
(445,28,o),
(429,19,o),
(415,19,qs),
(403,19,o),
(386,28,o),
(375,51,o),
(371,91,o),
(371,122,qs),
(371,138,o),
(372,179,o),
(373,219,o),
(374,256,o),
(374,268,qs),
(374,367,o),
(299,457,o),
(220,457,qs),
(184,457,o),
(124,440,o),
(81,409,o),
(56,366,o),
(56,339,qs),
(56,313,o),
(81,276,o),
(104,276,qs),
(121,276,o),
(140,296,o),
(140,311,qs),
(140,327,o),
(123,336,o),
(115,338,qs),
(107,340,o),
(95,346,o),
(95,358,qs),
(95,374,o),
(115,400,o),
(148,418,o),
(190,427,o),
(212,427,qs),
(278,427,o),
(334,342,o),
(334,264,qs),
(334,257,o),
(333,232,o),
(333,219,qs),
(333,187,l)
);
},
{
closed = 1;
nodes = (
(87,164,o),
(123,189,o),
(171,203,o),
(199,203,qs),
(227,203,o),
(276,190,o),
(312,167,o),
(333,135,o),
(333,117,qs),
(333,97,o),
(309,62,o),
(268,35,o),
(214,19,o),
(184,19,qs),
(132,19,o),
(67,66,o),
(67,106,qs),
(67,128,o)
);
},
{
closed = 1;
nodes = (
(248,649,o),
(218,649,qs),
(189,649,o),
(152,609,o),
(152,579,qs),
(152,548,o),
(188,510,o),
(214,510,qs),
(237,510,o),
(279,545,o),
(279,581,qs),
(279,608,o)
);
},
{
closed = 1;
nodes = (
(249,599,o),
(249,580,qs),
(249,557,o),
(231,529,o),
(214,529,qs),
(197,529,o),
(182,557,o),
(182,579,qs),
(182,600,o),
(197,629,o),
(216,629,qs),
(236,629,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 4 9 57 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 11 14 1 12 13 11 12 91 0 13 0 10 2 13 10 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 11 14 1 12 13 11 12 91 0 13 0 10 2 13 10 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
103 102 109 107 102 113 103 113 100 98 94 92 86 84 37 38 36 36 37 43 38 44 37 15 24
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = aring;
unicode = 229;
},
{
glyphname = aringacute;
kernLeft = a;
kernRight = a;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(316,826,o),
(283,826,qs),
(264,826,o),
(224,786,o),
(192,738,o),
(171,696,o),
(171,694,qs),
(171,683,o),
(197,672,o),
(208,672,qs),
(221,672,o),
(265,696,o),
(306,729,o),
(336,765,o),
(336,778,qs),
(336,798,o)
);
},
{
closed = 1;
nodes = (
(302,222,o),
(240,238,o),
(204,238,qs),
(119,238,o),
(24,163,o),
(24,106,qs),
(24,52,o),
(107,-11,o),
(177,-11,qs),
(224,-11,o),
(303,19,o),
(335,48,q),
(345,13,o),
(388,-11,o),
(414,-11,qs),
(450,-11,o),
(498,28,o),
(498,69,qs),
(498,92,o),
(481,108,o),
(466,108,qs),
(446,108,o),
(438,90,o),
(437,79,qs),
(437,74,o),
(433,67,o),
(428,67,qs),
(421,67,o),
(419,87,o),
(419,124,qs),
(419,139,o),
(420,178,o),
(422,219,o),
(423,257,o),
(423,269,qs),
(423,363,o),
(333,465,o),
(236,465,qs),
(194,465,o),
(125,445,o),
(76,411,o),
(49,363,o),
(49,335,qs),
(49,323,o),
(54,299,o),
(68,278,o),
(91,265,o),
(108,265,qs),
(125,265,o),
(157,281,o),
(157,303,qs),
(157,326,o),
(137,335,qs),
(135,336,o),
(126,341,o),
(126,349,qs),
(126,358,o),
(143,376,o),
(171,389,o),
(208,397,o),
(228,397,qs),
(259,397,o),
(299,378,o),
(323,342,o),
(333,292,o),
(333,261,qs),
(333,203,l)
);
},
{
closed = 1;
nodes = (
(162,176,o),
(218,176,qs),
(268,176,o),
(329,143,o),
(329,122,qs),
(329,113,o),
(316,90,o),
(287,71,o),
(240,57,o),
(206,57,qs),
(159,57,o),
(116,84,o),
(116,110,qs),
(116,135,o)
);
},
{
closed = 1;
nodes = (
(240,649,qs),
(209,649,o),
(165,617,o),
(165,579,qs),
(165,544,o),
(211,510,o),
(245,510,qs),
(275,510,o),
(318,545,o),
(318,581,qs),
(318,649,o)
);
},
{
closed = 1;
nodes = (
(263,594,o),
(263,580,qs),
(263,564,o),
(251,553,o),
(245,553,qs),
(238,553,o),
(221,562,o),
(221,579,qs),
(221,596,o),
(236,607,o),
(241,607,qs),
(249,607,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
82 1 11 9 58 1 5 6 70 1 7 5 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
82 1 11 9 58 1 5 6 70 1 7 10 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 81 values pushed */
0 0 1 13 1 0 13 104 16 1 14 13 15 12 14 96 0 15 12 13 15 94 0 3 2 9 2 3 9 104 0 6 11 5 5 6 96 0 13 0 12 4 13 12 92 0 9 0 11 6 9 11 91 0 1 1 12 67 0 2 2 4 83 0 4 4 23 67 10 1 5 5 7 84 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 83 values pushed */
0 0 1 13 1 0 13 104 16 1 14 13 15 13 14 15 104 0 15 12 13 15 12 102 0 3 2 9 2 3 9 104 0 6 11 5 5 6 96 0 13 0 12 4 13 12 92 0 9 0 11 6 9 11 91 0 1 1 12 67 0 2 2 4 83 0 4 4 23 67 10 1 5 5 7 84 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 81 values pushed */
0 0 1 13 1 0 13 104 16 1 14 13 15 13 14 15 104 0 15 12 13 15 12 102 0 3 2 9 2 3 9 104 0 6 11 5 5 6 96 0 13 0 12 4 13 12 92 0 4 0 2 3 4 2 91 0 9 0 11 6 9 11 91 0 1 1 12 67 10 1 5 5 7 84 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 91 values pushed */
0 0 1 13 1 0 13 104 16 1 14 13 15 13 14 15 104 0 15 12 13 15 12 102 0 3 2 9 2 3 9 104 0 6 11 5 5 6 96 0 13 0 12 4 13 12 92 0 4 0 2 3 4 2 91 0 9 0 11 6 9 11 91 0 1 1 12 67 0 5 5 7 84 8 1 7 7 24 67 0 10 10 7 83 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 92 values pushed */
0 0 1 13 1 0 13 104 16 1 14 13 15 13 14 15 104 0 15 12 13 15 12 102 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 13 0 12 4 13 12 92 0 4 0 2 3 4 2 91 0 9 0 11 6 9 11 91 0 1 1 12 67 0 5 5 7 84 8 1 7 7 24 67 0 10 10 7 83 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 92 values pushed */
0 0 1 13 1 0 13 104 16 1 14 13 15 13 14 15 104 0 15 12 13 15 12 102 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 13 0 12 4 13 12 92 0 4 0 2 3 4 2 91 0 9 0 11 6 9 11 91 0 1 1 14 67 0 5 5 7 84 8 1 7 7 24 67 0 10 10 7 83 8 1 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
109 108 115 113 108 119 109 119 107 105 101 99 95 93 87 85 80 78 36 36 36 41 40 43 38 38 36 17 24
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(300,821,o),
(277,821,qs),
(263,821,o),
(226,784,o),
(194,738,o),
(172,697,o),
(172,694,qs),
(172,684,o),
(189,676,o),
(197,676,qs),
(208,676,o),
(248,701,o),
(287,736,o),
(316,772,o),
(316,783,qs),
(316,800,o)
);
},
{
closed = 1;
nodes = (
(269,243,o),
(192,243,qs),
(154,243,o),
(93,222,o),
(49,186,o),
(25,136,o),
(25,107,qs),
(25,53,o),
(108,-11,o),
(178,-11,qs),
(225,-11,o),
(302,19,o),
(334,48,q),
(343,16,o),
(386,-11,o),
(413,-11,qs),
(428,-11,o),
(455,-3,o),
(477,15,o),
(490,44,o),
(490,65,qs),
(490,78,o),
(482,98,o),
(469,98,qs),
(455,98,o),
(443,82,o),
(442,76,qs),
(440,63,o),
(433,49,o),
(422,49,qs),
(408,49,o),
(400,77,o),
(400,123,qs),
(400,138,o),
(401,179,o),
(402,220,o),
(403,256,o),
(403,267,qs),
(403,462,o),
(226,462,qs),
(147,462,o),
(55,393,o),
(55,339,qs),
(55,313,o),
(81,269,o),
(112,269,qs),
(132,269,o),
(156,288,o),
(156,305,qs),
(156,321,o),
(138,335,o),
(131,336,qs),
(121,338,o),
(111,343,o),
(111,351,qs),
(111,363,o),
(132,382,o),
(163,395,o),
(201,402,o),
(218,402,qs),
(278,402,o),
(333,327,o),
(333,261,qs),
(333,256,o),
(332,235,o),
(332,224,qs),
(332,197,l)
);
},
{
closed = 1;
nodes = (
(115,152,o),
(147,172,o),
(191,183,o),
(217,183,qs),
(241,183,o),
(282,173,o),
(314,156,o),
(332,132,o),
(332,118,qs),
(332,103,o),
(311,78,o),
(275,60,o),
(228,49,o),
(201,49,qs),
(158,49,o),
(96,78,o),
(96,108,qs),
(96,124,o)
);
},
{
closed = 1;
nodes = (
(266,649,o),
(231,649,qs),
(201,649,o),
(160,609,o),
(160,579,qs),
(160,548,o),
(202,510,o),
(232,510,qs),
(259,510,o),
(302,545,o),
(302,581,qs),
(302,613,o)
);
},
{
closed = 1;
nodes = (
(257,599,o),
(257,580,qs),
(257,557,o),
(237,544,o),
(232,544,qs),
(226,544,o),
(205,557,o),
(205,579,qs),
(205,600,o),
(223,615,o),
(231,615,qs),
(241,615,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
82 1 11 9 69 1 7 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
0 0 1 13 1 0 13 104 16 1 14 13 15 12 14 96 0 15 12 13 15 94 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 13 0 12 4 13 12 91 0 9 0 11 6 9 11 91 0 1 1 12 67 0 2 2 4 83 0 4 4 23 67 10 1 5 5 7 83 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 84 values pushed */
0 0 1 13 1 0 13 104 16 1 14 13 15 13 14 15 104 0 15 12 13 15 12 102 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 13 0 12 4 13 12 91 0 9 0 11 6 9 11 91 0 1 1 12 67 0 2 2 4 83 0 4 4 23 67 10 1 5 5 7 83 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
0 0 1 13 1 0 13 104 16 1 14 13 15 13 14 15 104 0 15 12 13 15 12 102 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 13 0 12 4 13 12 91 0 4 0 2 3 4 2 92 0 9 0 11 6 9 11 91 0 1 1 12 67 10 1 5 5 7 83 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 82 values pushed */
0 0 1 13 1 0 13 104 16 1 14 13 15 13 14 15 104 0 15 12 13 15 12 102 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 13 0 12 4 13 12 91 0 4 0 2 3 4 2 92 0 9 0 11 6 9 11 91 0 1 1 14 67 10 1 5 5 7 83 8 1 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
114 113 120 118 113 124 114 124 111 109 105 103 97 95 87 85 81 79 36 38 36 40 36 44 39 38 36 17 24
CALL[ ]	/* CallFunction */";
};
width = 468;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(302,211,o),
(232,233,o),
(194,233,qs),
(156,233,o),
(94,214,o),
(50,180,o),
(26,133,o),
(26,106,qs),
(26,53,o),
(109,-11,o),
(179,-11,qs),
(226,-11,o),
(303,19,o),
(335,48,q),
(344,16,o),
(387,-11,o),
(414,-11,qs),
(443,-11,o),
(481,22,o),
(481,65,qs),
(481,76,o),
(476,88,o),
(468,88,qs),
(459,88,o),
(458,76,qs),
(457,65,o),
(454,44,o),
(445,28,o),
(429,19,o),
(415,19,qs),
(403,19,o),
(386,28,o),
(375,51,o),
(371,91,o),
(371,122,qs),
(371,138,o),
(372,179,o),
(373,219,o),
(374,256,o),
(374,268,qs),
(374,367,o),
(299,457,o),
(220,457,qs),
(184,457,o),
(124,440,o),
(81,409,o),
(56,366,o),
(56,339,qs),
(56,313,o),
(81,276,o),
(104,276,qs),
(121,276,o),
(140,296,o),
(140,311,qs),
(140,327,o),
(123,336,o),
(115,338,qs),
(107,340,o),
(95,346,o),
(95,358,qs),
(95,374,o),
(115,400,o),
(148,418,o),
(190,427,o),
(212,427,qs),
(278,427,o),
(334,342,o),
(334,264,qs),
(334,257,o),
(333,232,o),
(333,219,qs),
(333,187,l)
);
},
{
closed = 1;
nodes = (
(87,164,o),
(123,189,o),
(171,203,o),
(199,203,qs),
(227,203,o),
(276,190,o),
(312,167,o),
(333,135,o),
(333,117,qs),
(333,97,o),
(309,62,o),
(268,35,o),
(214,19,o),
(184,19,qs),
(132,19,o),
(67,66,o),
(67,106,qs),
(67,128,o)
);
},
{
closed = 1;
nodes = (
(248,649,o),
(218,649,qs),
(189,649,o),
(152,609,o),
(152,579,qs),
(152,548,o),
(188,510,o),
(214,510,qs),
(237,510,o),
(279,545,o),
(279,581,qs),
(279,608,o)
);
},
{
closed = 1;
nodes = (
(249,599,o),
(249,580,qs),
(249,557,o),
(231,529,o),
(214,529,qs),
(197,529,o),
(182,557,o),
(182,579,qs),
(182,600,o),
(197,629,o),
(216,629,qs),
(236,629,o)
);
},
{
closed = 1;
nodes = (
(276,813,o),
(268,813,qs),
(261,813,o),
(229,783,o),
(197,743,o),
(173,703,o),
(173,694,qs),
(173,683,o),
(181,683,qs),
(188,683,o),
(223,711,o),
(259,747,o),
(287,783,o),
(287,791,qs),
(287,805,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 4 9 57 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 14 15 11 15 14 11 104 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 11 16 1 12 13 11 12 91 0 13 0 10 2 13 10 91 0 7 0 9 4 7 9 91 0 15 15 14 67 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 75 values pushed */
0 14 15 11 15 14 11 104 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 11 16 1 12 13 11 12 91 0 13 0 10 2 13 10 91 0 2 0 0 1 2 0 92 0 7 0 9 4 7 9 91 0 15 15 14 67 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
103 102 127 125 120 118 109 107 102 113 103 113 100 98 94 92 86 84 37 38 36 36 37 43 38 44 37 17 24
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = aringacute;
unicode = 507;
},
{
glyphname = atilde;
kernLeft = a;
kernRight = a;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(302,222,o),
(240,238,o),
(204,238,qs),
(119,238,o),
(24,163,o),
(24,106,qs),
(24,52,o),
(107,-11,o),
(177,-11,qs),
(224,-11,o),
(303,19,o),
(335,48,q),
(345,13,o),
(388,-11,o),
(414,-11,qs),
(450,-11,o),
(498,28,o),
(498,69,qs),
(498,92,o),
(481,108,o),
(466,108,qs),
(446,108,o),
(438,90,o),
(437,79,qs),
(437,74,o),
(433,67,o),
(428,67,qs),
(421,67,o),
(419,87,o),
(419,124,qs),
(419,139,o),
(420,178,o),
(422,219,o),
(423,257,o),
(423,269,qs),
(423,363,o),
(333,465,o),
(236,465,qs),
(194,465,o),
(125,445,o),
(76,411,o),
(49,363,o),
(49,335,qs),
(49,323,o),
(54,299,o),
(68,278,o),
(91,265,o),
(108,265,qs),
(125,265,o),
(157,281,o),
(157,303,qs),
(157,326,o),
(137,335,qs),
(135,336,o),
(126,341,o),
(126,349,qs),
(126,358,o),
(143,376,o),
(171,389,o),
(208,397,o),
(228,397,qs),
(259,397,o),
(299,378,o),
(323,342,o),
(333,292,o),
(333,261,qs),
(333,203,l)
);
},
{
closed = 1;
nodes = (
(162,176,o),
(218,176,qs),
(268,176,o),
(329,143,o),
(329,122,qs),
(329,113,o),
(316,90,o),
(287,71,o),
(240,57,o),
(206,57,qs),
(159,57,o),
(116,84,o),
(116,110,qs),
(116,135,o)
);
},
{
closed = 1;
nodes = (
(77,498,o),
(86,498,qs),
(93,498,o),
(111,506,o),
(131,515,o),
(155,523,o),
(170,523,qs),
(184,523,o),
(216,515,o),
(251,506,o),
(288,499,o),
(307,499,qs),
(318,499,o),
(356,506,o),
(392,523,o),
(418,552,o),
(418,574,qs),
(418,590,o),
(401,609,o),
(396,609,qs),
(389,609,o),
(366,596,qs),
(352,588,o),
(320,579,o),
(306,579,qs),
(291,579,o),
(255,588,o),
(219,598,o),
(184,607,o),
(169,607,qs),
(132,607,o),
(101,589,qs),
(87,581,o),
(67,556,o),
(67,534,qs),
(67,519,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 3 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 8 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 12 1 10 0 14 13 10 14 91 0 11 15 1 13 2 11 13 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 12 1 10 0 14 13 10 14 91 0 11 15 1 13 2 11 13 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 12 1 10 0 14 13 10 14 91 0 11 15 1 13 2 11 13 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 12 1 10 0 14 13 10 14 91 0 11 15 1 13 2 11 13 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
115 113 110 108 105 103 97 95 92 90 87 85 79 77 37 36 36 36 36 41 40 43 36 16 24
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (25,0);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (52,0);
ref = tilde;
},
{
alignment = -1;
ref = a;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
105 1 15 13 92 1 11 9 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 7 6 13 6 7 13 104 0 10 15 9 15 10 9 104 2 1 0 0 4 3 0 4 91 0 1 5 1 3 8 1 3 91 0 13 0 15 10 13 15 91 0 6 6 8 83 0 8 8 23 67 14 1 9 9 11 84 12 1 11 11 24 11 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 7 6 13 6 7 13 104 0 10 15 9 15 10 9 104 2 1 0 0 4 3 0 4 91 0 1 5 1 3 8 1 3 91 0 8 0 6 7 8 6 91 0 13 0 15 10 13 15 91 14 1 9 9 11 84 12 1 11 11 24 11 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
120 118 110 108 104 102 96 94 90 88 82 80 76 74 36 44 41 35 35 38 35 35 37 16 35
CALL[ ]	/* CallFunction */";
};
width = 468;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(302,211,o),
(232,233,o),
(194,233,qs),
(156,233,o),
(94,214,o),
(50,180,o),
(26,133,o),
(26,106,qs),
(26,53,o),
(109,-11,o),
(179,-11,qs),
(226,-11,o),
(303,19,o),
(335,48,q),
(344,16,o),
(387,-11,o),
(414,-11,qs),
(443,-11,o),
(481,22,o),
(481,65,qs),
(481,76,o),
(476,88,o),
(468,88,qs),
(459,88,o),
(458,76,qs),
(457,65,o),
(454,44,o),
(445,28,o),
(429,19,o),
(415,19,qs),
(403,19,o),
(386,28,o),
(375,51,o),
(371,91,o),
(371,122,qs),
(371,138,o),
(372,179,o),
(373,219,o),
(374,256,o),
(374,268,qs),
(374,367,o),
(299,457,o),
(220,457,qs),
(184,457,o),
(124,440,o),
(81,409,o),
(56,366,o),
(56,339,qs),
(56,313,o),
(81,276,o),
(104,276,qs),
(121,276,o),
(140,296,o),
(140,311,qs),
(140,327,o),
(123,336,o),
(115,338,qs),
(107,340,o),
(95,346,o),
(95,358,qs),
(95,374,o),
(115,400,o),
(148,418,o),
(190,427,o),
(212,427,qs),
(278,427,o),
(334,342,o),
(334,264,qs),
(334,257,o),
(333,232,o),
(333,219,qs),
(333,187,l)
);
},
{
closed = 1;
nodes = (
(87,164,o),
(123,189,o),
(171,203,o),
(199,203,qs),
(227,203,o),
(276,190,o),
(312,167,o),
(333,135,o),
(333,117,qs),
(333,97,o),
(309,62,o),
(268,35,o),
(214,19,o),
(184,19,qs),
(132,19,o),
(67,66,o),
(67,106,qs),
(67,128,o)
);
},
{
closed = 1;
nodes = (
(67,522,o),
(72,522,qs),
(77,522,o),
(93,530,o),
(115,539,o),
(141,547,o),
(156,547,qs),
(170,547,o),
(202,539,o),
(237,530,o),
(274,523,o),
(293,523,qs),
(314,523,o),
(351,530,o),
(379,543,o),
(395,559,o),
(395,568,qs),
(395,575,o),
(387,585,o),
(382,585,qs),
(377,585,o),
(366,580,o),
(352,572,qs),
(318,555,o),
(292,555,qs),
(277,555,o),
(241,564,o),
(205,574,o),
(170,583,o),
(155,583,qs),
(118,583,o),
(87,565,qs),
(58,548,o),
(58,537,qs),
(58,532,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 4 9 57 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 12 1 10 0 14 13 10 14 91 0 11 15 1 13 2 11 13 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 12 1 10 0 14 13 10 14 91 0 11 15 1 13 2 11 13 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
123 121 118 116 113 111 105 103 100 98 95 93 86 84 37 38 36 36 37 43 38 44 37 16 24
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = atilde;
unicode = 227;
},
{
glyphname = ae;
kernLeft = a;
kernRight = ae;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(548,236,o),
(556,236,qs),
(646,236,o),
(733,241,o),
(741,243,qs),
(746,244,o),
(759,248,o),
(770,256,o),
(778,271,o),
(778,283,qs),
(778,322,o),
(749,393,o),
(694,446,o),
(614,477,o),
(562,477,qs),
(520,477,o),
(458,456,o),
(416,421,o),
(392,379,o),
(387,358,q),
(379,383,o),
(347,421,o),
(302,445,o),
(248,457,o),
(220,457,qs),
(184,457,o),
(124,439,o),
(81,409,o),
(56,368,o),
(56,345,qs),
(56,314,o),
(98,276,o),
(131,276,qs),
(152,276,o),
(187,293,o),
(187,314,qs),
(187,338,o),
(166,346,qs),
(161,348,o),
(146,352,o),
(146,361,qs),
(146,367,o),
(161,375,o),
(183,378,o),
(206,379,o),
(214,379,qs),
(238,379,o),
(281,364,o),
(314,335,o),
(334,291,o),
(334,261,qs),
(334,254,o),
(333,231,o),
(333,203,q),
(273,257,o),
(194,257,qs),
(156,257,o),
(94,234,o),
(50,195,o),
(26,141,o),
(26,111,qs),
(26,53,o),
(107,-11,o),
(179,-11,qs),
(201,-11,o),
(255,-3,o),
(312,18,o),
(368,54,o),
(392,82,q),
(401,68,o),
(423,36,o),
(459,8,o),
(515,-11,o),
(559,-11,qs),
(626,-11,o),
(716,25,o),
(770,78,o),
(792,136,o),
(792,158,qs),
(792,167,o),
(790,186,o),
(781,201,o),
(765,211,o),
(750,211,qs),
(737,211,o),
(721,202,o),
(712,189,o),
(708,175,o),
(707,171,qs),
(700,134,o),
(659,93,o),
(610,73,o),
(562,69,o),
(549,69,qs),
(514,69,o),
(468,91,o),
(440,127,o),
(429,171,o),
(429,194,qs),
(429,203,o),
(430,224,o),
(431,235,q),
(482,235,o)
);
},
{
closed = 1;
nodes = (
(167,179,o),
(223,179,qs),
(281,179,o),
(333,138,o),
(333,117,qs),
(333,94,o),
(274,67,o),
(223,67,qs),
(178,67,o),
(118,91,o),
(118,119,qs),
(118,142,o)
);
},
{
closed = 1;
nodes = (
(438,324,o),
(455,353,o),
(484,379,o),
(527,397,o),
(558,397,qs),
(588,397,o),
(634,379,o),
(666,356,o),
(682,334,o),
(682,329,qs),
(682,325,o),
(674,317,o),
(657,317,qs),
(435,313,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
82 1 12 5 48 1 11 1 33 1 0 11 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 6 12 4 12 6 4 104 0 1 9 11 9 1 11 104 15 1 12 14 1 9 1 12 9 91 0 4 0 11 0 4 11 91 0 13 13 8 83 0 8 8 23 67 0 5 5 7 83 0 7 7 23 67 10 1 0 0 2 83 3 1 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 6 12 4 12 6 4 104 0 1 9 11 9 1 11 104 0 8 0 13 5 8 13 91 0 7 0 5 12 7 5 91 15 1 12 14 1 9 1 12 9 91 0 4 0 11 0 4 11 91 10 1 0 0 2 83 3 1 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
116 115 0 0 124 122 115 128 116 128 113 111 107 105 0 102 0 98 40 38 42 56 38 40 40 40 39 16 24
CALL[ ]	/* CallFunction */";
};
width = 815;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(455,244,o),
(474,245,o),
(495,245,o),
(512,245,qs),
(546,245,o),
(615,245,o),
(672,247,o),
(714,248,o),
(721,250,qs),
(737,254,o),
(757,271,o),
(757,291,qs),
(757,323,o),
(732,389,o),
(681,443,o),
(606,477,o),
(556,477,qs),
(519,477,o),
(460,458,o),
(416,425,o),
(386,382,o),
(377,358,q),
(362,409,o),
(277,457,o),
(220,457,qs),
(184,457,o),
(124,440,o),
(81,409,o),
(56,367,o),
(56,343,qs),
(56,314,o),
(91,276,o),
(120,276,qs),
(140,276,o),
(168,294,o),
(168,313,qs),
(168,327,o),
(154,341,o),
(145,343,qs),
(140,345,o),
(125,349,o),
(125,360,qs),
(125,370,o),
(143,385,o),
(170,393,o),
(201,397,o),
(213,397,qs),
(269,397,o),
(334,328,o),
(334,262,qs),
(334,252,o),
(333,228,o),
(333,197,q),
(273,248,o),
(194,248,qs),
(156,248,o),
(94,226,o),
(50,189,o),
(26,138,o),
(26,109,qs),
(26,53,o),
(108,-11,o),
(179,-11,qs),
(201,-11,o),
(252,-3,o),
(306,18,o),
(358,54,o),
(382,82,q),
(393,65,o),
(420,32,o),
(459,6,o),
(514,-11,o),
(553,-11,qs),
(610,-11,o),
(692,24,o),
(745,77,o),
(771,140,o),
(771,169,qs),
(771,183,o),
(760,209,o),
(739,209,qs),
(728,209,o),
(716,202,o),
(710,192,o),
(707,181,o),
(707,177,qs),
(703,142,o),
(670,94,o),
(624,64,o),
(571,51,o),
(546,51,qs),
(507,51,o),
(454,78,o),
(422,121,o),
(408,176,o),
(408,203,qs),
(408,212,o),
(409,233,o),
(410,244,q),
(431,244,o)
);
},
{
closed = 1;
nodes = (
(157,188,o),
(213,188,qs),
(270,188,o),
(333,144,o),
(333,117,qs),
(333,88,o),
(261,49,o),
(207,49,qs),
(159,49,o),
(97,82,o),
(97,114,qs),
(97,145,o)
);
},
{
closed = 1;
nodes = (
(418,321,o),
(437,360,o),
(470,393,o),
(519,415,o),
(552,415,qs),
(585,415,o),
(634,394,o),
(667,364,o),
(683,332,o),
(683,322,qs),
(683,317,o),
(677,308,o),
(667,308,qs),
(414,304,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
77 1 12 5 46 1 11 1 31 13 2 0 11 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 6 12 4 12 6 4 104 0 1 9 11 9 1 11 104 15 1 12 14 1 9 1 12 9 91 0 4 0 11 0 4 11 91 0 13 13 8 83 0 8 8 23 67 0 5 5 7 83 0 7 7 23 67 10 1 0 0 2 83 3 1 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 6 12 4 12 6 4 104 0 1 9 11 9 1 11 104 0 8 0 13 5 8 13 91 0 7 0 5 12 7 5 91 15 1 12 14 1 9 1 12 9 91 0 4 0 11 0 4 11 91 10 1 0 0 2 83 3 1 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
113 112 0 0 121 119 112 125 113 125 110 108 104 102 0 99 0 91 38 38 44 38 38 40 38 40 39 16 24
CALL[ ]	/* CallFunction */";
};
width = 795;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(442,259,o),
(493,260,o),
(539,260,o),
(551,260,qs),
(591,260,o),
(666,260,o),
(692,261,qs),
(710,262,o),
(727,288,o),
(727,304,qs),
(727,324,o),
(706,383,o),
(663,438,o),
(595,477,o),
(547,477,qs),
(487,477,o),
(391,414,o),
(363,358,q),
(348,409,o),
(277,457,o),
(220,457,qs),
(184,457,o),
(124,440,o),
(81,409,o),
(56,366,o),
(56,339,qs),
(56,313,o),
(81,276,o),
(104,276,qs),
(121,276,o),
(140,296,o),
(140,311,qs),
(140,327,o),
(123,336,o),
(115,338,qs),
(107,340,o),
(95,346,o),
(95,358,qs),
(95,374,o),
(115,400,o),
(148,418,o),
(190,427,o),
(212,427,qs),
(278,427,o),
(334,342,o),
(334,264,qs),
(334,256,o),
(334,244,o),
(333,228,o),
(333,205,o),
(333,187,q),
(302,211,o),
(232,233,o),
(194,233,qs),
(156,233,o),
(94,214,o),
(50,180,o),
(26,133,o),
(26,106,qs),
(26,53,o),
(109,-11,o),
(179,-11,qs),
(223,-11,o),
(321,26,o),
(368,82,q),
(394,39,o),
(481,-11,o),
(544,-11,qs),
(586,-11,o),
(658,21,o),
(711,76,o),
(741,148,o),
(741,187,qs),
(741,205,o),
(724,205,qs),
(707,205,o),
(707,187,qs),
(707,155,o),
(686,95,o),
(645,49,o),
(583,21,o),
(542,21,qs),
(497,21,o),
(434,56,o),
(395,112,o),
(378,182,o),
(378,218,qs),
(378,227,o),
(379,248,o),
(380,259,q),
(394,259,o)
);
},
{
closed = 1;
nodes = (
(87,164,o),
(123,189,o),
(171,203,o),
(199,203,qs),
(227,203,o),
(276,190,o),
(312,167,o),
(333,135,o),
(333,117,qs),
(333,97,o),
(309,62,o),
(268,35,o),
(214,19,o),
(184,19,qs),
(132,19,o),
(67,66,o),
(67,106,qs),
(67,128,o)
);
},
{
closed = 1;
nodes = (
(389,317,o),
(412,372,o),
(451,417,o),
(506,445,o),
(544,445,qs),
(581,445,o),
(634,418,o),
(668,378,o),
(684,331,o),
(684,311,qs),
(684,293,o),
(667,293,qs),
(384,289,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
72 1 12 5 39 25 2 0 11 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 6 12 9 12 6 9 104 0 1 4 11 4 1 11 104 15 1 12 14 1 9 4 12 9 91 0 4 0 11 0 4 11 91 0 13 13 8 83 0 8 8 23 67 0 5 5 7 83 0 7 7 23 67 10 1 0 0 2 83 3 1 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 6 12 9 12 6 9 104 0 1 4 11 4 1 11 104 0 8 0 13 5 8 13 91 0 7 0 5 12 7 5 91 15 1 12 14 1 9 4 12 9 91 0 4 0 11 0 4 11 91 10 1 0 0 2 83 3 1 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
110 109 0 0 117 115 109 121 110 121 105 103 95 93 0 90 0 82 36 38 44 41 38 36 37 37 39 16 24
CALL[ ]	/* CallFunction */";
};
width = 767;
}
);
note = ae;
unicode = 230;
},
{
glyphname = aeacute;
kernLeft = a;
kernRight = ae;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(448,673,o),
(416,674,qs),
(397,674,o),
(354,625,o),
(318,564,o),
(294,511,o),
(294,508,qs),
(294,497,o),
(320,486,o),
(331,486,qs),
(340,486,o),
(370,502,o),
(404,527,o),
(440,559,o),
(468,590,o),
(486,617,o),
(486,626,qs),
(486,645,o)
);
},
{
closed = 1;
nodes = (
(548,236,o),
(556,236,qs),
(646,236,o),
(733,241,o),
(741,243,qs),
(746,244,o),
(759,248,o),
(770,256,o),
(778,271,o),
(778,283,qs),
(778,322,o),
(749,393,o),
(694,446,o),
(614,477,o),
(562,477,qs),
(520,477,o),
(458,456,o),
(416,421,o),
(392,379,o),
(387,358,q),
(379,383,o),
(347,421,o),
(302,445,o),
(248,457,o),
(220,457,qs),
(184,457,o),
(124,439,o),
(81,409,o),
(56,368,o),
(56,345,qs),
(56,314,o),
(98,276,o),
(131,276,qs),
(152,276,o),
(187,293,o),
(187,314,qs),
(187,338,o),
(166,346,qs),
(161,348,o),
(146,352,o),
(146,361,qs),
(146,367,o),
(161,375,o),
(183,378,o),
(206,379,o),
(214,379,qs),
(238,379,o),
(281,364,o),
(314,335,o),
(334,291,o),
(334,261,qs),
(334,254,o),
(333,231,o),
(333,203,q),
(273,257,o),
(194,257,qs),
(156,257,o),
(94,234,o),
(50,195,o),
(26,141,o),
(26,111,qs),
(26,53,o),
(107,-11,o),
(179,-11,qs),
(201,-11,o),
(255,-3,o),
(312,18,o),
(368,54,o),
(392,82,q),
(401,68,o),
(423,36,o),
(459,8,o),
(515,-11,o),
(559,-11,qs),
(626,-11,o),
(716,25,o),
(770,78,o),
(792,136,o),
(792,158,qs),
(792,167,o),
(790,186,o),
(781,201,o),
(765,211,o),
(750,211,qs),
(737,211,o),
(721,202,o),
(712,189,o),
(708,175,o),
(707,171,qs),
(700,134,o),
(659,93,o),
(610,73,o),
(562,69,o),
(549,69,qs),
(514,69,o),
(468,91,o),
(440,127,o),
(429,171,o),
(429,194,qs),
(429,203,o),
(430,224,o),
(431,235,q),
(482,235,o)
);
},
{
closed = 1;
nodes = (
(167,179,o),
(223,179,qs),
(281,179,o),
(333,138,o),
(333,117,qs),
(333,94,o),
(274,67,o),
(223,67,qs),
(178,67,o),
(118,91,o),
(118,119,qs),
(118,142,o)
);
},
{
closed = 1;
nodes = (
(438,324,o),
(455,353,o),
(484,379,o),
(527,397,o),
(558,397,qs),
(588,397,o),
(634,379,o),
(666,356,o),
(682,334,o),
(682,329,qs),
(682,325,o),
(674,317,o),
(657,317,qs),
(435,313,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
100 1 14 7 66 1 13 3 51 1 2 13 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 1 0 1 106 0 0 10 0 106 0 8 14 6 14 8 6 104 0 3 11 13 11 3 13 104 17 1 14 16 1 11 3 14 11 92 0 6 0 13 2 6 13 91 0 15 15 10 83 0 10 10 23 67 0 7 7 9 83 0 9 9 23 67 12 1 2 2 4 83 5 1 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 1 0 1 106 0 0 10 0 106 0 8 14 6 14 8 6 104 0 3 11 13 11 3 13 104 0 10 0 15 7 10 15 91 0 9 0 7 14 9 7 91 17 1 14 16 1 11 3 14 11 92 0 6 0 13 2 6 13 91 12 1 2 2 4 83 5 1 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
134 133 18 18 142 140 133 146 134 146 131 129 125 123 18 120 18 116 106 104 96 94 42 56 38 40 40 40 41 38 38 18 24
CALL[ ]	/* CallFunction */";
};
width = 815;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(432,661,o),
(409,661,qs),
(399,661,o),
(376,640,o),
(351,609,o),
(328,572,o),
(309,539,o),
(298,515,o),
(298,513,qs),
(298,503,o),
(315,495,o),
(323,495,qs),
(334,495,o),
(379,527,o),
(424,569,o),
(458,612,o),
(458,623,qs),
(458,640,o)
);
},
{
closed = 1;
nodes = (
(455,244,o),
(474,245,o),
(495,245,o),
(512,245,qs),
(546,245,o),
(615,245,o),
(672,247,o),
(714,248,o),
(721,250,qs),
(737,254,o),
(757,271,o),
(757,291,qs),
(757,323,o),
(732,389,o),
(681,443,o),
(606,477,o),
(556,477,qs),
(519,477,o),
(460,458,o),
(416,425,o),
(386,382,o),
(377,358,q),
(362,409,o),
(277,457,o),
(220,457,qs),
(184,457,o),
(124,440,o),
(81,409,o),
(56,367,o),
(56,343,qs),
(56,314,o),
(91,276,o),
(120,276,qs),
(140,276,o),
(168,294,o),
(168,313,qs),
(168,327,o),
(154,341,o),
(145,343,qs),
(140,345,o),
(125,349,o),
(125,360,qs),
(125,370,o),
(143,385,o),
(170,393,o),
(201,397,o),
(213,397,qs),
(269,397,o),
(334,328,o),
(334,262,qs),
(334,252,o),
(333,228,o),
(333,197,q),
(273,248,o),
(194,248,qs),
(156,248,o),
(94,226,o),
(50,189,o),
(26,138,o),
(26,109,qs),
(26,53,o),
(108,-11,o),
(179,-11,qs),
(201,-11,o),
(252,-3,o),
(306,18,o),
(358,54,o),
(382,82,q),
(393,65,o),
(420,32,o),
(459,6,o),
(514,-11,o),
(553,-11,qs),
(610,-11,o),
(692,24,o),
(745,77,o),
(771,140,o),
(771,169,qs),
(771,183,o),
(760,209,o),
(739,209,qs),
(728,209,o),
(716,202,o),
(710,192,o),
(707,181,o),
(707,177,qs),
(703,142,o),
(670,94,o),
(624,64,o),
(571,51,o),
(546,51,qs),
(507,51,o),
(454,78,o),
(422,121,o),
(408,176,o),
(408,203,qs),
(408,212,o),
(409,233,o),
(410,244,q),
(431,244,o)
);
},
{
closed = 1;
nodes = (
(157,188,o),
(213,188,qs),
(270,188,o),
(333,144,o),
(333,117,qs),
(333,88,o),
(261,49,o),
(207,49,qs),
(159,49,o),
(97,82,o),
(97,114,qs),
(97,145,o)
);
},
{
closed = 1;
nodes = (
(418,321,o),
(437,360,o),
(470,393,o),
(519,415,o),
(552,415,qs),
(585,415,o),
(634,394,o),
(667,364,o),
(683,332,o),
(683,322,qs),
(683,317,o),
(677,308,o),
(667,308,qs),
(414,304,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
95 1 14 7 64 1 13 3 49 31 2 2 13 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 1 0 1 106 0 0 10 0 106 0 8 14 6 14 8 6 104 0 3 11 13 11 3 13 104 17 1 14 16 1 11 3 14 11 92 0 6 0 13 2 6 13 91 0 15 15 10 83 0 10 10 23 67 0 7 7 9 83 0 9 9 23 67 12 1 2 2 4 83 5 1 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 1 0 1 106 0 0 10 0 106 0 8 14 6 14 8 6 104 0 3 11 13 11 3 13 104 0 10 0 15 7 10 15 91 0 9 0 7 14 9 7 91 17 1 14 16 1 11 3 14 11 92 0 6 0 13 2 6 13 91 12 1 2 2 4 83 5 1 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
131 130 18 18 139 137 130 143 131 143 128 126 122 120 18 117 18 109 101 99 93 91 44 38 38 40 38 40 41 40 36 18 24
CALL[ ]	/* CallFunction */";
};
width = 795;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(442,259,o),
(493,260,o),
(539,260,o),
(551,260,qs),
(591,260,o),
(666,260,o),
(692,261,qs),
(710,262,o),
(727,288,o),
(727,304,qs),
(727,324,o),
(706,383,o),
(663,438,o),
(595,477,o),
(547,477,qs),
(487,477,o),
(391,414,o),
(363,358,q),
(348,409,o),
(277,457,o),
(220,457,qs),
(184,457,o),
(124,440,o),
(81,409,o),
(56,366,o),
(56,339,qs),
(56,313,o),
(81,276,o),
(104,276,qs),
(121,276,o),
(140,296,o),
(140,311,qs),
(140,327,o),
(123,336,o),
(115,338,qs),
(107,340,o),
(95,346,o),
(95,358,qs),
(95,374,o),
(115,400,o),
(148,418,o),
(190,427,o),
(212,427,qs),
(278,427,o),
(334,342,o),
(334,264,qs),
(334,256,o),
(334,244,o),
(333,228,o),
(333,205,o),
(333,187,q),
(302,211,o),
(232,233,o),
(194,233,qs),
(156,233,o),
(94,214,o),
(50,180,o),
(26,133,o),
(26,106,qs),
(26,53,o),
(109,-11,o),
(179,-11,qs),
(223,-11,o),
(321,26,o),
(368,82,q),
(394,39,o),
(481,-11,o),
(544,-11,qs),
(586,-11,o),
(658,21,o),
(711,76,o),
(741,148,o),
(741,187,qs),
(741,205,o),
(724,205,qs),
(707,205,o),
(707,187,qs),
(707,155,o),
(686,95,o),
(645,49,o),
(583,21,o),
(542,21,qs),
(497,21,o),
(434,56,o),
(395,112,o),
(378,182,o),
(378,218,qs),
(378,227,o),
(379,248,o),
(380,259,q),
(394,259,o)
);
},
{
closed = 1;
nodes = (
(87,164,o),
(123,189,o),
(171,203,o),
(199,203,qs),
(227,203,o),
(276,190,o),
(312,167,o),
(333,135,o),
(333,117,qs),
(333,97,o),
(309,62,o),
(268,35,o),
(214,19,o),
(184,19,qs),
(132,19,o),
(67,66,o),
(67,106,qs),
(67,128,o)
);
},
{
closed = 1;
nodes = (
(389,317,o),
(412,372,o),
(451,417,o),
(506,445,o),
(544,445,qs),
(581,445,o),
(634,418,o),
(668,378,o),
(684,331,o),
(684,311,qs),
(684,293,o),
(667,293,qs),
(384,289,l)
);
},
{
closed = 1;
nodes = (
(407,640,o),
(399,640,qs),
(392,640,o),
(360,610,o),
(328,570,o),
(304,530,o),
(304,521,qs),
(304,510,o),
(312,510,qs),
(319,510,o),
(354,538,o),
(390,574,o),
(418,610,o),
(418,618,qs),
(418,632,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
72 1 12 5 39 25 2 0 11 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 15 14 15 106 0 14 8 14 106 0 6 12 9 12 6 9 104 0 1 4 11 4 1 11 104 17 1 12 16 1 9 4 12 9 92 0 4 0 11 0 4 11 91 0 13 13 8 83 0 8 8 23 67 0 5 5 7 83 0 7 7 23 67 10 1 0 0 2 83 3 1 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 15 14 15 106 0 14 8 14 106 0 6 12 9 12 6 9 104 0 1 4 11 4 1 11 104 0 8 0 13 5 8 13 91 0 7 0 5 12 7 5 91 17 1 12 16 1 9 4 12 9 92 0 4 0 11 0 4 11 91 10 1 0 0 2 83 3 1 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
110 109 0 0 135 133 128 126 117 115 109 121 110 121 105 103 95 93 0 90 0 82 36 38 44 41 38 36 37 37 39 18 24
CALL[ ]	/* CallFunction */";
};
width = 767;
}
);
note = aeacute;
unicode = 509;
},
{
glyphname = b;
kernLeft = b;
kernRight = b;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(154,808,o),
(137,818,o),
(128,818,qs),
(38,818,ls),
(6,818,o),
(-30,812,o),
(-48,803,o),
(-53,790,o),
(-53,783,qs),
(-53,769,o),
(-24,755,o),
(-7,755,qs),
(17,755,ls),
(62,755,o),
(62,728,qs),
(62,715,o),
(62,666,o),
(63,604,o),
(63,533,o),
(63,498,qs),
(63,423,o),
(62,312,o),
(60,229,o),
(58,166,o),
(56,111,o),
(54,57,o),
(54,24,qs),
(54,6,o),
(80,-12,o),
(97,-12,qs),
(114,-12,o),
(132,-6,o),
(141,10,o),
(144,40,o),
(146,64,q),
(154,50,o),
(177,24,o),
(209,4,o),
(253,-9,o),
(283,-9,qs),
(318,-9,o),
(396,14,o),
(461,67,o),
(504,155,o),
(504,220,qs),
(504,258,o),
(486,342,o),
(446,412,o),
(378,458,o),
(329,458,qs),
(272,458,o),
(182,398,o),
(154,339,q),
(154,782,ls)
);
},
{
closed = 1;
nodes = (
(171,281,o),
(202,335,o),
(259,376,o),
(305,376,qs),
(326,376,o),
(364,362,o),
(393,327,o),
(410,269,o),
(410,225,qs),
(410,180,o),
(384,120,o),
(345,84,o),
(299,70,o),
(280,70,qs),
(256,70,o),
(213,85,o),
(180,119,o),
(160,177,o),
(160,219,qs),
(160,229,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 1 5 6 18 1 1 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 4 83 0 4 4 14 67 0 6 6 0 83 0 0 0 23 67 0 5 5 1 83 2 1 1 1 24 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 0 6 5 0 6 91 0 3 3 4 83 0 4 4 14 67 0 5 5 1 83 2 1 1 1 24 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
40 39 54 63 40 40 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 532;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(136,808,o),
(119,818,o),
(110,818,qs),
(20,818,ls),
(-19,818,o),
(-64,803,o),
(-64,789,qs),
(-64,777,o),
(-35,767,o),
(-18,767,qs),
(20,767,ls),
(65,767,o),
(65,740,qs),
(65,726,o),
(65,675,o),
(66,609,o),
(66,535,o),
(66,498,qs),
(66,423,o),
(65,312,o),
(63,229,o),
(61,166,o),
(59,111,o),
(57,57,o),
(57,24,qs),
(57,6,o),
(76,-12,o),
(90,-12,qs),
(102,-12,o),
(116,-5,o),
(124,13,o),
(126,44,o),
(128,68,q),
(136,54,o),
(159,27,o),
(191,5,o),
(235,-9,o),
(265,-9,qs),
(300,-9,o),
(378,14,o),
(443,67,o),
(486,155,o),
(486,220,qs),
(486,258,o),
(468,342,o),
(428,412,o),
(360,458,o),
(311,458,qs),
(254,458,o),
(164,394,o),
(136,334,q),
(136,782,ls)
);
},
{
closed = 1;
nodes = (
(157,287,o),
(194,350,o),
(253,397,o),
(294,397,qs),
(310,397,o),
(351,380,o),
(388,340,o),
(413,274,o),
(413,225,qs),
(413,173,o),
(382,106,o),
(337,67,o),
(284,52,o),
(263,52,qs),
(202,52,o),
(139,130,o),
(139,205,qs),
(139,223,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
18 0 2 5 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 4 83 0 4 4 14 67 0 6 6 0 83 0 0 0 23 67 0 5 5 1 83 2 1 1 1 24 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 0 6 5 0 6 91 0 3 3 4 83 0 4 4 14 67 0 5 5 1 83 2 1 1 1 24 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
40 37 52 63 40 40 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 517;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(110,808,o),
(93,818,o),
(84,818,qs),
(-6,818,ls),
(-8,818,o),
(-31,817,o),
(-58,814,o),
(-80,806,o),
(-80,799,qs),
(-80,791,o),
(-51,787,o),
(-34,787,qs),
(24,787,ls),
(46,787,o),
(69,775,o),
(69,760,qs),
(69,745,o),
(69,689,o),
(70,618,o),
(70,538,o),
(70,498,qs),
(70,423,o),
(69,312,o),
(67,229,o),
(65,166,o),
(63,111,o),
(61,57,o),
(61,24,qs),
(61,-12,o),
(80,-12,qs),
(91,-12,o),
(99,20,o),
(102,68,q),
(110,54,o),
(133,27,o),
(165,5,o),
(209,-9,o),
(239,-9,qs),
(274,-9,o),
(352,14,o),
(417,67,o),
(460,155,o),
(460,220,qs),
(460,258,o),
(442,342,o),
(402,412,o),
(334,458,o),
(285,458,qs),
(228,458,o),
(138,394,o),
(110,334,q),
(110,782,ls)
);
},
{
closed = 1;
nodes = (
(137,322,o),
(183,389,o),
(245,427,o),
(278,427,qs),
(299,427,o),
(347,407,o),
(389,360,o),
(417,283,o),
(417,225,qs),
(417,162,o),
(380,82,o),
(326,38,o),
(264,22,o),
(239,22,qs),
(199,22,o),
(148,50,o),
(120,96,o),
(109,153,o),
(109,182,qs),
(109,233,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
18 0 2 5 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 4 83 0 4 4 14 67 0 6 6 0 83 0 0 0 23 67 0 5 5 1 83 2 1 1 1 24 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 0 6 5 0 6 91 0 3 3 4 83 0 4 4 14 67 0 5 5 1 83 2 1 1 1 24 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
40 39 69 63 38 40 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 495;
}
);
note = b;
unicode = 98;
},
{
glyphname = c;
kernLeft = c;
kernRight = c;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(294,482,o),
(264,482,qs),
(210,482,o),
(122,440,o),
(60,371,o),
(26,280,o),
(26,231,qs),
(26,181,o),
(61,95,o),
(125,31,o),
(214,-6,o),
(269,-6,qs),
(314,-6,o),
(384,14,o),
(435,46,o),
(468,83,o),
(477,100,qs),
(482,108,o),
(485,125,o),
(485,130,qs),
(485,142,o),
(467,161,o),
(450,161,qs),
(433,161,o),
(410,141,o),
(399,128,qs),
(379,105,o),
(320,73,o),
(269,73,qs),
(192,73,o),
(124,158,o),
(124,229,qs),
(124,266,o),
(142,331,o),
(178,377,o),
(234,404,o),
(272,404,qs),
(303,404,o),
(340,387,o),
(363,361,o),
(373,329,o),
(377,313,qs),
(379,304,o),
(399,282,o),
(421,282,qs),
(444,282,o),
(461,306,o),
(461,335,qs),
(461,339,o),
(461,379,o),
(460,423,o),
(460,460,o),
(460,463,qs),
(460,480,o),
(446,511,o),
(422,511,qs),
(398,511,o),
(380,482,o),
(380,465,qs),
(380,459,o),
(381,439,o),
(382,428,q),
(360,462,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 2 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 1 3 1 4 3 104 0 0 0 1 4 0 1 91 0 2 2 6 83 0 6 6 23 67 0 3 3 5 83 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 4 1 3 1 4 3 104 0 6 0 2 1 6 2 91 0 0 0 1 4 0 1 91 0 3 3 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
40 41 36 38 38 41 37 7 22
CALL[ ]	/* CallFunction */";
};
width = 504;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(300,482,o),
(262,482,qs),
(212,482,o),
(126,442,o),
(64,373,o),
(29,279,o),
(29,225,qs),
(29,177,o),
(60,93,o),
(117,30,o),
(200,-6,o),
(253,-6,qs),
(387,-6,o),
(457,101,qs),
(462,109,o),
(467,120,o),
(467,128,qs),
(467,142,o),
(448,154,o),
(437,154,qs),
(430,154,o),
(413,144,o),
(403,128,qs),
(385,98,o),
(307,56,o),
(249,56,qs),
(181,56,o),
(106,148,o),
(106,227,qs),
(106,270,o),
(129,341,o),
(169,393,o),
(226,422,o),
(259,422,qs),
(326,422,o),
(380,361,o),
(380,309,qs),
(380,298,o),
(399,288,o),
(407,288,qs),
(422,288,o),
(443,302,o),
(443,310,qs),
(443,323,o),
(443,369,o),
(444,418,o),
(444,464,o),
(444,478,qs),
(444,493,o),
(428,511,o),
(411,511,qs),
(394,511,o),
(380,494,o),
(380,483,qs),
(380,469,o),
(381,439,o),
(382,428,q),
(360,461,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 2 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 1 3 1 4 3 104 0 0 0 1 4 0 1 91 0 2 2 6 83 0 6 6 23 67 0 3 3 5 83 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 4 1 3 1 4 3 104 0 6 0 2 1 6 2 91 0 0 0 1 4 0 1 91 0 3 3 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
40 38 36 38 36 41 37 7 22
CALL[ ]	/* CallFunction */";
};
width = 488;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(304,482,o),
(266,482,qs),
(216,482,o),
(130,442,o),
(68,373,o),
(33,279,o),
(33,225,qs),
(33,177,o),
(64,93,o),
(121,30,o),
(199,-6,o),
(247,-6,qs),
(368,-6,o),
(431,101,qs),
(441,118,o),
(441,128,qs),
(441,134,o),
(433,143,o),
(428,143,qs),
(417,143,o),
(407,128,qs),
(376,76,o),
(302,26,o),
(253,26,qs),
(171,26,o),
(80,134,o),
(80,227,qs),
(80,276,o),
(107,359,o),
(156,419,o),
(223,452,o),
(263,452,qs),
(330,452,o),
(384,380,o),
(384,319,qs),
(384,307,o),
(393,298,o),
(401,298,qs),
(409,298,o),
(417,312,o),
(417,320,qs),
(417,333,o),
(417,377,o),
(417,425,o),
(418,470,o),
(418,484,qs),
(418,495,o),
(409,511,o),
(401,511,qs),
(393,511,o),
(384,494,o),
(384,483,qs),
(384,469,o),
(385,439,o),
(386,428,q),
(364,461,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 1 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 1 3 1 4 3 104 0 0 0 1 4 0 1 91 0 2 2 6 83 0 6 6 23 67 0 3 3 5 83 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 4 1 3 1 4 3 104 0 6 0 2 1 6 2 91 0 0 0 1 4 0 1 91 0 3 3 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
40 37 35 38 36 41 37 7 22
CALL[ ]	/* CallFunction */";
};
width = 465;
}
);
note = c;
unicode = 99;
},
{
glyphname = cacute;
kernLeft = c;
kernRight = c;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(362,689,o),
(330,690,qs),
(311,690,o),
(268,641,o),
(232,580,o),
(208,527,o),
(208,524,qs),
(208,513,o),
(234,502,o),
(245,502,qs),
(254,502,o),
(284,518,o),
(318,543,o),
(354,575,o),
(382,606,o),
(400,633,o),
(400,642,qs),
(400,661,o)
);
},
{
closed = 1;
nodes = (
(294,482,o),
(264,482,qs),
(210,482,o),
(122,440,o),
(60,371,o),
(26,280,o),
(26,231,qs),
(26,181,o),
(61,95,o),
(125,31,o),
(214,-6,o),
(269,-6,qs),
(314,-6,o),
(384,14,o),
(435,46,o),
(468,83,o),
(477,100,qs),
(482,108,o),
(485,125,o),
(485,130,qs),
(485,142,o),
(467,161,o),
(450,161,qs),
(433,161,o),
(410,141,o),
(399,128,qs),
(379,105,o),
(320,73,o),
(269,73,qs),
(192,73,o),
(124,158,o),
(124,229,qs),
(124,266,o),
(142,331,o),
(178,377,o),
(234,404,o),
(272,404,qs),
(303,404,o),
(340,387,o),
(363,361,o),
(373,329,o),
(377,313,qs),
(379,304,o),
(399,282,o),
(421,282,qs),
(444,282,o),
(461,306,o),
(461,335,qs),
(461,339,o),
(461,379,o),
(460,423,o),
(460,460,o),
(460,463,qs),
(460,480,o),
(446,511,o),
(422,511,qs),
(398,511,o),
(380,482,o),
(380,465,qs),
(380,459,o),
(381,439,o),
(382,428,q),
(360,462,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
18 1 4 8 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 2 1 106 0 0 2 8 2 0 8 104 0 6 3 5 3 6 5 104 0 2 0 3 6 2 3 91 0 4 4 8 83 0 8 8 23 67 0 5 5 7 84 0 7 7 16 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 2 1 106 0 0 2 8 2 0 8 104 0 6 3 5 3 6 5 104 0 8 0 4 3 8 4 91 0 2 0 3 6 2 3 91 0 5 5 7 84 0 7 7 16 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
40 41 36 38 38 41 39 38 38 9 24
CALL[ ]	/* CallFunction */";
};
width = 504;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(338,671,o),
(315,671,qs),
(305,671,o),
(282,650,o),
(257,619,o),
(234,582,o),
(215,549,o),
(204,525,o),
(204,523,qs),
(204,513,o),
(221,505,o),
(229,505,qs),
(240,505,o),
(285,537,o),
(330,579,o),
(364,622,o),
(364,633,qs),
(364,650,o)
);
},
{
closed = 1;
nodes = (
(300,482,o),
(262,482,qs),
(212,482,o),
(126,442,o),
(64,373,o),
(29,279,o),
(29,225,qs),
(29,177,o),
(60,93,o),
(117,30,o),
(200,-6,o),
(253,-6,qs),
(387,-6,o),
(457,101,qs),
(462,109,o),
(467,120,o),
(467,128,qs),
(467,142,o),
(448,154,o),
(437,154,qs),
(430,154,o),
(413,144,o),
(403,128,qs),
(385,98,o),
(307,56,o),
(249,56,qs),
(181,56,o),
(106,148,o),
(106,227,qs),
(106,270,o),
(129,341,o),
(169,393,o),
(226,422,o),
(259,422,qs),
(326,422,o),
(380,361,o),
(380,309,qs),
(380,298,o),
(399,288,o),
(407,288,qs),
(422,288,o),
(443,302,o),
(443,310,qs),
(443,323,o),
(443,369,o),
(444,418,o),
(444,464,o),
(444,478,qs),
(444,493,o),
(428,511,o),
(411,511,qs),
(394,511,o),
(380,494,o),
(380,483,qs),
(380,469,o),
(381,439,o),
(382,428,q),
(360,461,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
18 1 4 8 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 2 1 106 0 0 2 8 2 0 8 104 0 6 3 5 3 6 5 104 0 2 0 3 6 2 3 91 0 4 4 8 83 0 8 8 23 67 0 5 5 7 83 0 7 7 16 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 2 1 106 0 0 2 8 2 0 8 104 0 6 3 5 3 6 5 104 0 8 0 4 3 8 4 92 0 2 0 3 6 2 3 91 0 5 5 7 83 0 7 7 16 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
40 38 36 38 36 41 39 40 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 488;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(302,640,o),
(294,640,qs),
(287,640,o),
(255,610,o),
(223,570,o),
(199,530,o),
(199,521,qs),
(199,510,o),
(207,510,qs),
(214,510,o),
(249,538,o),
(285,574,o),
(313,610,o),
(313,618,qs),
(313,632,o)
);
},
{
closed = 1;
nodes = (
(304,482,o),
(266,482,qs),
(216,482,o),
(130,442,o),
(68,373,o),
(33,279,o),
(33,225,qs),
(33,177,o),
(64,93,o),
(121,30,o),
(199,-6,o),
(247,-6,qs),
(368,-6,o),
(431,101,qs),
(441,118,o),
(441,128,qs),
(441,134,o),
(433,143,o),
(428,143,qs),
(417,143,o),
(407,128,qs),
(376,76,o),
(302,26,o),
(253,26,qs),
(171,26,o),
(80,134,o),
(80,227,qs),
(80,276,o),
(107,359,o),
(156,419,o),
(223,452,o),
(263,452,qs),
(330,452,o),
(384,380,o),
(384,319,qs),
(384,307,o),
(393,298,o),
(401,298,qs),
(409,298,o),
(417,312,o),
(417,320,qs),
(417,333,o),
(417,377,o),
(417,425,o),
(418,470,o),
(418,484,qs),
(418,495,o),
(409,511,o),
(401,511,qs),
(393,511,o),
(384,494,o),
(384,483,qs),
(384,469,o),
(385,439,o),
(386,428,q),
(364,461,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
15 1 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 2 1 106 0 0 2 8 2 0 8 104 0 6 3 5 3 6 5 104 0 2 0 3 6 2 3 91 0 4 4 8 83 0 8 8 23 67 0 5 5 7 83 0 7 7 16 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 2 1 106 0 0 2 8 2 0 8 104 0 6 3 5 3 6 5 104 0 8 0 4 3 8 4 92 0 2 0 3 6 2 3 91 0 5 5 7 83 0 7 7 16 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
40 37 35 38 36 41 39 37 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 465;
}
);
note = cacute;
unicode = 263;
},
{
glyphname = ccaron;
kernLeft = c;
kernRight = c;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(371,627,o),
(337,608,o),
(299,587,o),
(282,578,q),
(265,587,o),
(227,608,o),
(194,627,o),
(168,640,o),
(163,640,qs),
(157,640,o),
(150,631,o),
(150,626,qs),
(150,606,o),
(186,558,o),
(232,515,o),
(275,486,o),
(282,486,qs),
(291,486,o),
(334,516,o),
(380,558,o),
(415,603,o),
(415,619,qs),
(415,627,o),
(409,640,o),
(402,640,qs),
(397,640,o)
);
},
{
closed = 1;
nodes = (
(294,482,o),
(264,482,qs),
(210,482,o),
(122,440,o),
(60,371,o),
(26,280,o),
(26,231,qs),
(26,181,o),
(61,95,o),
(125,31,o),
(214,-6,o),
(269,-6,qs),
(314,-6,o),
(384,14,o),
(435,46,o),
(468,83,o),
(477,100,qs),
(482,108,o),
(485,125,o),
(485,130,qs),
(485,142,o),
(467,161,o),
(450,161,qs),
(433,161,o),
(410,141,o),
(399,128,qs),
(379,105,o),
(320,73,o),
(269,73,qs),
(192,73,o),
(124,158,o),
(124,229,qs),
(124,266,o),
(142,331,o),
(178,377,o),
(234,404,o),
(272,404,qs),
(303,404,o),
(340,387,o),
(363,361,o),
(373,329,o),
(377,313,qs),
(379,304,o),
(399,282,o),
(421,282,qs),
(444,282,o),
(461,306,o),
(461,335,qs),
(461,339,o),
(461,379,o),
(460,423,o),
(460,460,o),
(460,463,qs),
(460,480,o),
(446,511,o),
(422,511,qs),
(398,511,o),
(380,482,o),
(380,465,qs),
(380,459,o),
(381,439,o),
(382,428,q),
(360,462,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
21 1 3 0 26 1 5 9 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
2 10 2 0 3 3 0 94 0 1 3 9 3 1 9 104 0 7 4 6 4 7 6 104 0 3 0 4 7 3 4 92 0 5 5 9 83 0 9 9 23 67 0 6 6 8 83 0 8 8 16 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
2 10 2 0 3 0 106 0 1 3 9 3 1 9 104 0 7 4 6 4 7 6 104 0 3 0 4 7 3 4 92 0 5 5 9 83 0 9 9 23 67 0 6 6 8 83 0 8 8 16 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
2 10 2 0 3 0 106 0 1 3 9 3 1 9 104 0 7 4 6 4 7 6 104 0 9 0 5 4 9 5 91 0 3 0 4 7 3 4 92 0 6 6 8 83 0 8 8 16 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 87 85 77 75 66 64 60 58 52 50 44 42 33 31 17 15 9 7 0 25 1 25 11 15
CALL[ ]	/* CallFunction */";
};
width = 499;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (29,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = c;
},
{
alignment = -1;
pos = (116,1150);
ref = circumflex;
scale = (1,-0.9999);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
64 1 0 7 1 1 2 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
8 10 2 7 0 7 106 0 4 1 3 1 4 3 104 0 0 0 1 4 0 1 91 0 9 9 23 67 0 2 2 6 83 0 6 6 23 67 0 3 3 5 83 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
8 10 2 7 0 7 106 0 9 0 6 6 9 96 0 4 1 3 1 4 3 104 0 6 0 2 1 6 2 92 0 0 0 1 4 0 1 91 0 3 3 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
60 59 77 75 70 68 59 83 60 83 40 38 36 38 36 41 38 11 33
CALL[ ]	/* CallFunction */";
};
width = 488;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(307,482,o),
(266,482,qs),
(216,482,o),
(130,442,o),
(68,373,o),
(33,279,o),
(33,225,qs),
(33,177,o),
(64,93,o),
(121,30,o),
(199,-6,o),
(247,-6,qs),
(317,-6,o),
(408,54,o),
(440,103,qs),
(450,118,o),
(450,126,qs),
(450,131,o),
(444,140,o),
(435,140,qs),
(428,140,o),
(420,133,o),
(417,128,qs),
(385,75,o),
(305,26,o),
(253,26,qs),
(171,26,o),
(78,134,o),
(78,227,qs),
(78,276,o),
(106,359,o),
(155,419,o),
(223,452,o),
(263,452,qs),
(335,452,o),
(394,380,o),
(394,319,qs),
(394,314,o),
(401,296,o),
(411,296,qs),
(419,296,o),
(425,312,o),
(425,320,qs),
(425,331,o),
(426,396,o),
(426,456,qs),
(426,467,o),
(417,482,o),
(408,482,qs),
(400,482,o),
(394,466,o),
(394,455,qs),
(394,446,o),
(397,425,o),
(398,419,q),
(375,454,o)
);
},
{
closed = 1;
nodes = (
(349,622,o),
(315,596,o),
(277,566,o),
(260,554,q),
(243,566,o),
(205,596,o),
(172,622,o),
(146,640,o),
(141,640,qs),
(133,640,o),
(133,629,qs),
(133,620,o),
(166,580,o),
(210,540,o),
(251,510,o),
(260,510,qs),
(269,510,o),
(312,540,o),
(355,580,o),
(388,620,o),
(388,629,qs),
(388,640,o),
(380,640,qs),
(375,640,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
75 1 8 7 0 1 1 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
9 10 2 7 8 7 106 0 8 0 8 106 0 4 1 3 1 4 3 104 0 2 2 0 83 6 1 0 0 23 67 0 1 1 0 83 6 1 0 0 23 67 0 3 3 5 83 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
9 10 2 7 8 7 106 0 8 0 8 106 0 4 1 3 1 4 3 104 0 2 1 0 2 79 6 1 0 0 1 4 0 1 91 0 3 3 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
57 56 71 69 64 62 56 79 57 79 40 38 36 38 36 39 37 11 22
CALL[ ]	/* CallFunction */";
};
width = 473;
}
);
note = ccaron;
unicode = 269;
},
{
glyphname = ccedilla;
kernLeft = c;
kernRight = c;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(294,482,o),
(264,482,qs),
(210,482,o),
(122,440,o),
(60,371,o),
(26,280,o),
(26,231,qs),
(26,187,o),
(53,110,o),
(102,48,o),
(172,7,o),
(216,-1,q),
(214,-14,o),
(210,-54,o),
(206,-71,qs),
(205,-75,o),
(203,-85,o),
(203,-88,qs),
(203,-99,o),
(218,-121,o),
(241,-121,qs),
(257,-121,o),
(279,-112,o),
(298,-102,o),
(317,-93,o),
(331,-93,qs),
(339,-93,o),
(354,-101,o),
(354,-109,qs),
(354,-121,o),
(336,-131,o),
(309,-131,qs),
(282,-131,o),
(252,-137,o),
(237,-146,o),
(234,-156,o),
(234,-159,qs),
(234,-172,o),
(271,-181,o),
(313,-181,qs),
(338,-181,o),
(385,-171,o),
(421,-152,o),
(442,-123,o),
(442,-103,qs),
(442,-74,o),
(398,-40,o),
(365,-40,qs),
(344,-40,o),
(309,-55,o),
(285,-69,q),
(296,-5,l),
(335,-2,o),
(395,20,o),
(440,50,o),
(469,84,o),
(477,100,qs),
(482,108,o),
(485,125,o),
(485,130,qs),
(485,142,o),
(467,161,o),
(450,161,qs),
(433,161,o),
(410,141,o),
(399,128,qs),
(379,105,o),
(320,73,o),
(269,73,qs),
(192,73,o),
(124,158,o),
(124,229,qs),
(124,266,o),
(142,331,o),
(178,377,o),
(234,404,o),
(272,404,qs),
(303,404,o),
(340,387,o),
(363,361,o),
(373,329,o),
(377,313,qs),
(379,304,o),
(399,282,o),
(421,282,qs),
(444,282,o),
(461,306,o),
(461,335,qs),
(461,339,o),
(461,379,o),
(460,423,o),
(460,460,o),
(460,463,qs),
(460,480,o),
(446,511,o),
(422,511,qs),
(398,511,o),
(380,482,o),
(380,465,qs),
(380,459,o),
(381,439,o),
(382,428,q),
(360,462,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 1 2 10 90 1 5 3 51 1 8 5 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 4 1 3 1 4 3 104 0 5 3 8 3 5 8 104 0 8 9 9 8 94 0 0 0 1 4 0 1 91 0 3 0 9 7 3 9 91 0 2 2 10 83 0 10 10 23 67 0 7 7 6 83 0 6 6 17 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 4 1 3 1 4 3 104 0 5 3 8 3 5 8 104 0 8 9 9 8 94 0 10 0 2 1 10 2 91 0 0 0 1 4 0 1 91 0 3 0 9 7 3 9 91 0 7 6 6 7 79 0 7 7 6 83 0 6 7 6 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 4 1 3 1 4 3 104 0 5 3 8 3 5 8 104 0 8 9 3 8 9 102 0 10 0 2 1 10 2 91 0 0 0 1 4 0 1 91 0 3 0 9 7 3 9 91 0 7 6 6 7 79 0 7 7 6 83 0 6 7 6 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
101 99 82 80 36 38 38 45 36 38 38 41 37 11 24
CALL[ ]	/* CallFunction */";
};
width = 504;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (29,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = c;
},
{
alignment = -1;
pos = (216,0);
ref = cedilla;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
1 1 2 6 60 1 5 12 61 1 10 7 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
0 4 1 3 1 4 3 104 0 3 12 12 3 94 0 11 10 9 5 11 96 0 0 0 1 4 0 1 91 0 7 0 10 11 7 10 91 0 2 2 6 83 0 6 6 23 67 13 1 12 12 5 84 0 5 5 16 67 0 9 9 8 83 0 8 8 17 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 4 1 3 1 4 3 104 0 3 12 12 3 94 0 11 10 9 10 11 9 104 0 0 0 1 4 0 1 91 0 7 0 10 11 7 10 91 0 2 2 6 83 0 6 6 23 67 13 1 12 12 5 84 0 5 5 16 67 0 9 9 8 83 0 8 8 17 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 4 1 3 1 4 3 104 0 3 12 12 3 94 0 11 10 9 10 11 9 104 0 6 0 2 1 6 2 91 0 0 0 1 4 0 1 91 0 7 0 10 11 7 10 91 13 1 12 12 5 84 0 5 5 16 67 0 9 9 8 83 0 8 8 17 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 4 1 3 1 4 3 104 0 3 12 12 3 94 0 11 10 9 10 11 9 104 0 6 0 2 1 6 2 91 0 0 0 1 4 0 1 91 0 7 0 10 11 7 10 91 0 9 0 8 9 8 87 13 1 12 12 5 84 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
0 4 1 3 1 4 3 104 0 3 12 1 3 12 102 0 11 10 9 10 11 9 104 0 6 0 2 1 6 2 91 0 0 0 1 4 0 1 91 0 7 0 10 11 7 10 91 0 9 0 8 9 8 87 13 1 12 12 5 84 0 5 5 16 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
59 59 59 98 59 98 90 88 85 83 79 77 38 38 40 38 36 38 36 41 38 14 35
CALL[ ]	/* CallFunction */";
};
width = 488;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(304,482,o),
(266,482,qs),
(216,482,o),
(130,442,o),
(68,373,o),
(33,279,o),
(33,225,qs),
(33,180,o),
(60,100,o),
(110,39,o),
(180,-1,o),
(223,-5,q),
(221,-18,o),
(216,-54,o),
(213,-71,qs),
(212,-75,o),
(210,-85,o),
(210,-88,qs),
(210,-92,o),
(218,-100,o),
(226,-100,qs),
(233,-100,o),
(253,-91,o),
(277,-81,o),
(304,-72,o),
(318,-72,qs),
(340,-72,o),
(361,-95,o),
(361,-109,qs),
(361,-132,o),
(311,-152,o),
(265,-152,qs),
(245,-152,o),
(224,-155,o),
(224,-164,qs),
(224,-171,o),
(241,-181,o),
(269,-181,qs),
(294,-181,o),
(341,-171,o),
(377,-152,o),
(398,-123,o),
(398,-103,qs),
(398,-74,o),
(354,-40,o),
(321,-40,qs),
(300,-40,o),
(265,-55,o),
(241,-69,q),
(252,-6,l),
(371,-3,o),
(431,101,qs),
(441,118,o),
(441,128,qs),
(441,134,o),
(433,143,o),
(428,143,qs),
(417,143,o),
(407,128,qs),
(376,76,o),
(302,26,o),
(253,26,qs),
(171,26,o),
(80,134,o),
(80,227,qs),
(80,276,o),
(107,359,o),
(156,419,o),
(223,452,o),
(263,452,qs),
(330,452,o),
(384,380,o),
(384,319,qs),
(384,307,o),
(393,298,o),
(401,298,qs),
(409,298,o),
(417,312,o),
(417,320,qs),
(417,333,o),
(417,377,o),
(417,425,o),
(418,470,o),
(418,484,qs),
(418,495,o),
(409,511,o),
(401,511,qs),
(393,511,o),
(384,494,o),
(384,483,qs),
(384,469,o),
(385,439,o),
(386,428,q),
(364,461,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
0 1 1 2 44 1 9 6 2 66 81 1 5 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 4 1 3 1 4 3 104 0 10 9 8 5 10 96 0 0 0 1 4 0 1 91 0 6 0 9 10 6 9 91 0 2 2 11 83 0 11 11 23 67 0 3 3 5 83 0 5 5 16 67 0 8 8 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 4 1 3 1 4 3 104 0 10 9 8 9 10 8 104 0 0 0 1 4 0 1 91 0 6 0 9 10 6 9 91 0 2 2 11 83 0 11 11 23 67 0 3 3 5 83 0 5 5 16 67 0 8 8 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 4 1 3 1 4 3 104 0 10 9 8 9 10 8 104 0 11 0 2 1 11 2 91 0 0 0 1 4 0 1 91 0 6 0 9 10 6 9 91 0 3 3 5 83 0 5 5 16 67 0 8 8 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 4 1 3 1 4 3 104 0 10 9 8 9 10 8 104 0 11 0 2 1 11 2 91 0 0 0 1 4 0 1 91 0 6 0 9 10 6 9 91 0 8 0 7 8 7 87 0 3 3 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
92 90 73 71 68 66 36 38 35 21 35 38 36 41 37 12 24
CALL[ ]	/* CallFunction */";
};
width = 465;
}
);
note = ccedilla;
unicode = 231;
},
{
glyphname = ccircumflex;
kernLeft = c;
kernRight = c;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(406,523,o),
(406,531,qs),
(406,547,o),
(371,592,o),
(325,634,o),
(282,664,o),
(273,664,qs),
(266,664,o),
(223,635,o),
(177,592,o),
(141,543,o),
(141,524,qs),
(141,519,o),
(148,510,o),
(154,510,qs),
(159,510,o),
(185,523,o),
(218,542,o),
(256,563,o),
(273,572,q),
(290,563,o),
(328,542,o),
(362,523,o),
(388,510,o),
(393,510,qs),
(400,510,o)
);
},
{
closed = 1;
nodes = (
(294,482,o),
(264,482,qs),
(210,482,o),
(122,440,o),
(60,371,o),
(26,280,o),
(26,231,qs),
(26,181,o),
(61,95,o),
(125,31,o),
(214,-6,o),
(269,-6,qs),
(314,-6,o),
(384,14,o),
(435,46,o),
(468,83,o),
(477,100,qs),
(482,108,o),
(485,125,o),
(485,130,qs),
(485,142,o),
(467,161,o),
(450,161,qs),
(433,161,o),
(410,141,o),
(399,128,qs),
(379,105,o),
(320,73,o),
(269,73,qs),
(192,73,o),
(124,158,o),
(124,229,qs),
(124,266,o),
(142,331,o),
(178,377,o),
(234,404,o),
(272,404,qs),
(303,404,o),
(340,387,o),
(363,361,o),
(373,329,o),
(377,313,qs),
(379,304,o),
(399,282,o),
(421,282,qs),
(444,282,o),
(461,306,o),
(461,335,qs),
(461,339,o),
(461,379,o),
(460,423,o),
(460,460,o),
(460,463,qs),
(460,480,o),
(446,511,o),
(422,511,qs),
(398,511,o),
(380,482,o),
(380,465,qs),
(380,459,o),
(381,439,o),
(382,428,q),
(360,462,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
5 1 3 2 26 1 5 9 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 3 2 106 1 10 2 0 3 9 3 0 9 104 0 7 4 6 4 7 6 104 0 3 0 4 7 3 4 91 0 5 5 9 83 0 9 9 23 67 0 6 6 8 83 0 8 8 16 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 2 3 2 106 1 10 2 0 3 9 3 0 9 104 0 7 4 6 4 7 6 104 0 9 0 5 4 9 5 92 0 3 0 4 7 3 4 91 0 6 6 8 83 0 8 8 16 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 87 85 77 75 66 64 60 58 52 50 44 42 33 31 19 17 11 9 0 25 1 25 11 15
CALL[ ]	/* CallFunction */";
};
width = 499;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (29,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = c;
},
{
alignment = -1;
pos = (108,0);
ref = circumflex;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
64 1 0 9 1 1 2 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 9 0 9 106 8 10 2 7 0 6 0 7 6 104 0 4 1 3 1 4 3 104 0 0 0 1 4 0 1 91 0 2 2 6 83 0 6 6 23 67 0 3 3 5 83 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 9 0 9 106 8 10 2 7 0 6 0 7 6 104 0 4 1 3 1 4 3 104 0 6 0 2 1 6 2 92 0 0 0 1 4 0 1 91 0 3 3 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
60 59 77 75 70 68 59 83 60 83 40 38 36 38 36 41 38 11 33
CALL[ ]	/* CallFunction */";
};
width = 488;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(307,482,o),
(266,482,qs),
(216,482,o),
(130,442,o),
(68,373,o),
(33,279,o),
(33,225,qs),
(33,177,o),
(64,93,o),
(121,30,o),
(199,-6,o),
(247,-6,qs),
(317,-6,o),
(408,54,o),
(440,103,qs),
(450,118,o),
(450,126,qs),
(450,131,o),
(444,140,o),
(435,140,qs),
(428,140,o),
(420,133,o),
(417,128,qs),
(385,75,o),
(305,26,o),
(253,26,qs),
(171,26,o),
(78,134,o),
(78,227,qs),
(78,276,o),
(106,359,o),
(155,419,o),
(223,452,o),
(263,452,qs),
(335,452,o),
(394,380,o),
(394,319,qs),
(394,314,o),
(401,296,o),
(411,296,qs),
(419,296,o),
(425,312,o),
(425,320,qs),
(425,331,o),
(426,396,o),
(426,456,qs),
(426,467,o),
(417,482,o),
(408,482,qs),
(400,482,o),
(394,466,o),
(394,455,qs),
(394,446,o),
(397,425,o),
(398,419,q),
(375,454,o)
);
},
{
closed = 1;
nodes = (
(384,521,qs),
(384,530,o),
(351,570,o),
(308,610,o),
(265,640,o),
(256,640,qs),
(247,640,o),
(206,610,o),
(162,570,o),
(129,530,o),
(129,521,qs),
(129,510,o),
(137,510,qs),
(142,510,o),
(168,528,o),
(201,554,o),
(239,584,o),
(256,596,q),
(273,584,o),
(311,554,o),
(345,528,o),
(371,510,o),
(376,510,qs),
(384,510,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
61 1 7 9 0 1 1 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 9 7 9 106 8 10 2 7 0 7 106 0 4 1 3 1 4 3 104 0 2 2 0 83 6 1 0 0 23 67 0 1 1 0 83 6 1 0 0 23 67 0 3 3 5 83 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 9 7 9 106 8 10 2 7 0 7 106 0 4 1 3 1 4 3 104 0 2 1 0 2 80 6 1 0 0 1 4 0 1 92 0 3 3 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
57 56 74 72 67 65 56 79 57 79 40 38 36 38 36 39 37 11 22
CALL[ ]	/* CallFunction */";
};
width = 473;
}
);
note = ccircumflex;
unicode = 265;
},
{
glyphname = cdotaccent;
kernLeft = c;
kernRight = c;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(294,482,o),
(264,482,qs),
(210,482,o),
(122,440,o),
(60,371,o),
(26,280,o),
(26,231,qs),
(26,181,o),
(61,95,o),
(125,31,o),
(214,-6,o),
(269,-6,qs),
(314,-6,o),
(384,14,o),
(435,46,o),
(468,83,o),
(477,100,qs),
(482,108,o),
(485,125,o),
(485,130,qs),
(485,142,o),
(467,161,o),
(450,161,qs),
(433,161,o),
(410,141,o),
(399,128,qs),
(379,105,o),
(320,73,o),
(269,73,qs),
(192,73,o),
(124,158,o),
(124,229,qs),
(124,266,o),
(142,331,o),
(178,377,o),
(234,404,o),
(272,404,qs),
(303,404,o),
(340,387,o),
(363,361,o),
(373,329,o),
(377,313,qs),
(379,304,o),
(399,282,o),
(421,282,qs),
(444,282,o),
(461,306,o),
(461,335,qs),
(461,339,o),
(461,379,o),
(460,423,o),
(460,460,o),
(460,463,qs),
(460,480,o),
(446,511,o),
(422,511,qs),
(398,511,o),
(380,482,o),
(380,465,qs),
(380,459,o),
(381,439,o),
(382,428,q),
(360,462,o)
);
},
{
closed = 1;
nodes = (
(251,514,o),
(276,514,qs),
(287,514,o),
(311,520,o),
(330,536,o),
(343,563,o),
(343,584,qs),
(343,611,o),
(307,645,o),
(283,645,qs),
(265,645,o),
(240,632,o),
(224,613,o),
(217,590,o),
(217,580,qs),
(217,548,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 2 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 4 1 3 1 4 3 104 0 7 0 8 0 7 8 91 0 0 0 1 4 0 1 91 0 2 2 6 83 0 6 6 23 67 0 3 3 5 83 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 4 1 3 1 4 3 104 0 7 0 8 0 7 8 91 0 6 0 2 1 6 2 91 0 0 0 1 4 0 1 91 0 3 3 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 38 40 41 36 38 38 41 37 9 24
CALL[ ]	/* CallFunction */";
};
width = 504;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (29,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = c;
},
{
alignment = -1;
pos = (204,0);
ref = dotaccent;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
1 1 2 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 4 1 3 1 4 3 104 0 7 0 8 0 7 8 91 0 0 0 1 4 0 1 91 0 2 2 6 83 0 6 6 23 67 0 3 3 5 83 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 4 1 3 1 4 3 104 0 7 0 8 0 7 8 91 0 6 0 2 1 6 2 91 0 0 0 1 4 0 1 91 0 3 3 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 38 40 38 36 38 36 41 38 9 35
CALL[ ]	/* CallFunction */";
};
width = 488;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(242,538,o),
(256,538,qs),
(270,538,o),
(297,557,o),
(297,584,qs),
(297,601,o),
(277,621,o),
(263,621,qs),
(252,621,o),
(237,612,o),
(227,599,o),
(222,585,o),
(222,580,qs),
(222,562,o)
);
},
{
closed = 1;
nodes = (
(304,482,o),
(266,482,qs),
(216,482,o),
(130,442,o),
(68,373,o),
(33,279,o),
(33,225,qs),
(33,177,o),
(64,93,o),
(121,30,o),
(199,-6,o),
(247,-6,qs),
(368,-6,o),
(431,101,qs),
(441,118,o),
(441,128,qs),
(441,134,o),
(433,143,o),
(428,143,qs),
(417,143,o),
(407,128,qs),
(376,76,o),
(302,26,o),
(253,26,qs),
(171,26,o),
(80,134,o),
(80,227,qs),
(80,276,o),
(107,359,o),
(156,419,o),
(223,452,o),
(263,452,qs),
(330,452,o),
(384,380,o),
(384,319,qs),
(384,307,o),
(393,298,o),
(401,298,qs),
(409,298,o),
(417,312,o),
(417,320,qs),
(417,333,o),
(417,377,o),
(417,425,o),
(418,470,o),
(418,484,qs),
(418,495,o),
(409,511,o),
(401,511,qs),
(393,511,o),
(384,494,o),
(384,483,qs),
(384,469,o),
(385,439,o),
(386,428,q),
(364,461,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 6 3 5 3 6 5 104 0 0 0 1 2 0 1 91 0 2 0 3 6 2 3 91 0 4 4 8 83 0 8 8 23 67 0 5 5 7 83 0 7 7 16 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 6 3 5 3 6 5 104 0 0 0 1 2 0 1 91 0 8 0 4 3 8 4 91 0 2 0 3 6 2 3 91 0 5 5 7 83 0 7 7 16 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
40 37 35 38 36 41 39 36 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 465;
}
);
note = cdotaccent;
unicode = 267;
},
{
glyphname = d;
kernLeft = d;
kernRight = d;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(481,212,o),
(481,247,qs),
(481,288,o),
(480,325,qs),
(480,333,o),
(480,396,o),
(481,483,o),
(482,584,o),
(483,678,o),
(483,753,o),
(483,771,qs),
(483,799,o),
(436,809,o),
(397,809,qs),
(341,809,o),
(273,804,o),
(237,793,o),
(225,774,o),
(225,760,qs),
(225,740,o),
(257,740,qs),
(264,740,o),
(287,741,o),
(311,741,o),
(334,742,o),
(343,742,qs),
(364,742,o),
(389,731,o),
(389,708,qs),
(389,416,l),
(381,426,o),
(355,448,o),
(318,466,o),
(271,477,o),
(241,477,qs),
(195,477,o),
(127,449,o),
(80,404,o),
(50,347,o),
(33,289,o),
(27,236,o),
(27,218,qs),
(27,182,o),
(47,102,o),
(92,35,o),
(165,-9,o),
(218,-9,qs),
(244,-9,o),
(295,3,o),
(340,26,o),
(375,60,o),
(386,83,q),
(388,29,ls),
(389,-1,o),
(405,-24,o),
(425,-27,qs),
(430,-28,o),
(454,-29,o),
(486,-30,o),
(519,-30,o),
(533,-30,qs),
(550,-30,o),
(579,-11,o),
(579,10,qs),
(579,36,o),
(535,46,o),
(499,48,qs),
(493,48,o),
(482,56,o),
(482,76,qs),
(481,123,o)
);
},
{
closed = 1;
nodes = (
(181,81,o),
(144,115,o),
(121,175,o),
(121,221,qs),
(121,258,o),
(138,322,o),
(173,370,o),
(226,397,o),
(263,397,qs),
(290,397,o),
(329,383,o),
(356,362,o),
(372,337,o),
(377,327,qs),
(386,306,o),
(391,264,o),
(391,247,qs),
(391,158,o),
(317,67,o),
(251,67,qs),
(228,67,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
40 1 7 3 18 1 6 7 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 4 4 5 83 0 5 5 14 67 0 7 7 3 83 0 3 3 23 67 8 1 6 6 2 83 0 2 2 24 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 3 0 7 6 3 7 91 0 4 4 5 83 0 5 5 14 67 8 1 6 6 2 83 0 2 2 24 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 0 7 6 3 7 91 0 0 0 1 0 1 87 0 4 4 5 83 0 5 5 14 67 8 1 6 6 2 83 0 2 2 24 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
72 71 83 81 71 91 72 91 37 119 42 41 84 34 9 21
CALL[ ]	/* CallFunction */";
};
width = 554;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(462,309,o),
(462,325,qs),
(462,335,o),
(462,399,o),
(463,485,o),
(464,585,o),
(465,678,o),
(465,753,o),
(465,771,qs),
(465,799,o),
(426,809,o),
(388,809,qs),
(299,809,o),
(215,792,o),
(215,766,qs),
(215,759,o),
(235,752,o),
(245,752,qs),
(283,752,o),
(327,754,o),
(352,754,qs),
(369,754,o),
(392,745,o),
(392,726,qs),
(392,416,l),
(384,426,o),
(358,448,o),
(321,466,o),
(274,477,o),
(244,477,qs),
(198,477,o),
(130,449,o),
(83,404,o),
(53,347,o),
(36,289,o),
(30,236,o),
(30,218,qs),
(30,182,o),
(50,102,o),
(95,35,o),
(168,-9,o),
(220,-9,qs),
(274,-9,o),
(366,38,o),
(389,83,q),
(391,29,ls),
(392,4,o),
(407,-26,o),
(428,-28,qs),
(433,-28,o),
(447,-29,o),
(472,-30,o),
(509,-30,o),
(536,-30,qs),
(554,-30,o),
(575,-14,o),
(575,-2,qs),
(575,17,o),
(545,31,o),
(502,31,qs),
(478,31,o),
(465,37,o),
(465,57,qs),
(463,168,o)
);
},
{
closed = 1;
nodes = (
(170,71,o),
(128,113,o),
(103,178,o),
(103,222,qs),
(103,260,o),
(124,331,o),
(163,385,o),
(221,418,o),
(258,418,qs),
(288,418,o),
(331,402,o),
(360,378,o),
(378,348,o),
(384,334,q),
(391,309,o),
(395,268,o),
(395,248,qs),
(395,224,o),
(379,156,o),
(344,95,o),
(289,51,o),
(250,51,qs),
(223,51,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
38 18 2 7 8 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 5 5 6 83 0 6 6 14 67 0 8 8 4 83 0 4 4 23 67 9 1 7 7 3 83 0 3 3 24 67 0 0 0 1 83 2 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 0 8 7 4 8 91 0 5 5 6 83 0 6 6 14 67 9 1 7 7 3 83 0 3 3 24 67 0 0 0 1 83 2 1 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 4 0 8 7 4 8 91 0 0 2 1 1 0 1 87 0 5 5 6 83 0 6 6 14 67 9 1 7 7 3 83 0 3 3 24 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
65 64 78 76 64 86 65 86 36 87 42 38 17 68 34 10 22
CALL[ ]	/* CallFunction */";
};
width = 548;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(436,308,o),
(436,325,qs),
(436,335,o),
(436,399,o),
(437,485,o),
(438,585,o),
(439,678,o),
(439,753,o),
(439,771,qs),
(439,799,o),
(415,809,o),
(392,809,qs),
(380,809,o),
(327,808,o),
(271,803,o),
(229,792,o),
(229,783,qs),
(229,779,o),
(237,774,o),
(247,772,o),
(256,772,o),
(257,772,qs),
(291,772,o),
(333,774,o),
(356,774,qs),
(373,774,o),
(396,769,o),
(396,756,qs),
(396,416,l),
(388,426,o),
(362,448,o),
(325,466,o),
(278,477,o),
(248,477,qs),
(202,477,o),
(134,449,o),
(87,404,o),
(57,347,o),
(40,289,o),
(34,236,o),
(34,218,qs),
(34,182,o),
(54,102,o),
(99,35,o),
(172,-9,o),
(224,-9,qs),
(278,-9,o),
(369,40,o),
(393,83,q),
(395,29,ls),
(396,4,o),
(411,-26,o),
(432,-28,qs),
(437,-28,o),
(451,-29,o),
(476,-30,o),
(513,-30,o),
(540,-30,qs),
(558,-30,o),
(569,-20,o),
(569,-15,qs),
(569,-5,o),
(544,0,o),
(506,1,qs),
(483,1,o),
(456,3,o),
(443,8,o),
(439,18,o),
(439,27,qs),
(437,149,o)
);
},
{
closed = 1;
nodes = (
(148,45,o),
(103,94,o),
(77,170,o),
(77,222,qs),
(77,265,o),
(97,347,o),
(141,411,o),
(208,449,o),
(256,449,qs),
(286,449,o),
(331,433,o),
(362,406,o),
(382,370,o),
(388,349,qs),
(395,324,o),
(399,268,o),
(399,248,qs),
(399,209,o),
(385,129,o),
(350,63,o),
(289,21,o),
(241,21,qs),
(208,21,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
40 20 2 7 8 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 5 5 6 83 0 6 6 14 67 0 8 8 4 83 0 4 4 23 67 9 1 7 7 3 83 0 3 3 24 67 0 0 0 1 83 2 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 0 8 7 4 8 91 0 5 5 6 83 0 6 6 14 67 9 1 7 7 3 83 0 3 3 24 67 0 0 0 1 83 2 1 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 4 0 8 7 4 8 91 0 0 2 1 1 0 1 87 0 5 5 6 83 0 6 6 14 67 9 1 7 7 3 83 0 3 3 24 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
71 70 84 82 70 92 71 92 54 103 42 38 17 68 36 10 22
CALL[ ]	/* CallFunction */";
};
width = 539;
}
);
note = d;
unicode = 100;
},
{
glyphname = dcaron;
kernLeft = d;
kernRight = d;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(535,766,o),
(549,756,o),
(560,747,o),
(560,741,qs),
(560,711,o),
(545,682,o),
(545,672,qs),
(545,655,o),
(566,649,o),
(571,649,qs),
(577,649,o),
(604,664,o),
(631,693,o),
(652,738,o),
(652,768,qs),
(652,811,o),
(608,849,o),
(584,849,qs),
(551,849,o),
(524,812,o),
(524,791,qs),
(524,779,o)
);
},
{
closed = 1;
nodes = (
(481,212,o),
(481,247,qs),
(481,288,o),
(480,325,qs),
(480,333,o),
(480,396,o),
(481,483,o),
(482,584,o),
(483,678,o),
(483,753,o),
(483,771,qs),
(483,799,o),
(436,809,o),
(397,809,qs),
(341,809,o),
(273,804,o),
(237,793,o),
(225,774,o),
(225,760,qs),
(225,740,o),
(257,740,qs),
(264,740,o),
(287,741,o),
(311,741,o),
(334,742,o),
(343,742,qs),
(364,742,o),
(389,731,o),
(389,708,qs),
(389,416,l),
(381,426,o),
(355,448,o),
(318,466,o),
(271,477,o),
(241,477,qs),
(195,477,o),
(127,449,o),
(80,404,o),
(50,347,o),
(33,289,o),
(27,236,o),
(27,218,qs),
(27,182,o),
(47,102,o),
(92,35,o),
(165,-9,o),
(218,-9,qs),
(244,-9,o),
(295,3,o),
(340,26,o),
(375,60,o),
(386,83,q),
(388,29,ls),
(389,-1,o),
(405,-24,o),
(425,-27,qs),
(430,-28,o),
(454,-29,o),
(486,-30,o),
(519,-30,o),
(533,-30,qs),
(550,-30,o),
(579,-11,o),
(579,10,qs),
(579,36,o),
(535,46,o),
(499,48,qs),
(493,48,o),
(482,56,o),
(482,76,qs),
(481,123,o)
);
},
{
closed = 1;
nodes = (
(181,81,o),
(144,115,o),
(121,175,o),
(121,221,qs),
(121,258,o),
(138,322,o),
(173,370,o),
(226,397,o),
(263,397,qs),
(290,397,o),
(329,383,o),
(356,362,o),
(372,337,o),
(377,327,qs),
(386,306,o),
(391,264,o),
(391,247,qs),
(391,158,o),
(317,67,o),
(251,67,qs),
(228,67,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
62 1 9 5 40 1 8 9 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 6 6 7 83 0 7 7 14 67 0 1 1 0 83 0 0 0 20 67 0 9 9 5 83 0 5 5 23 67 10 1 8 8 4 83 0 4 4 24 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 5 0 9 8 5 9 91 0 6 6 7 83 0 7 7 14 67 0 1 1 0 83 0 0 0 20 67 10 1 8 8 4 83 0 4 4 24 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 5 0 9 8 5 9 91 0 2 0 3 2 3 87 0 6 6 7 83 0 7 7 14 67 0 1 1 0 83 0 0 0 20 67 10 1 8 8 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 1 5 0 1 91 0 5 0 9 8 5 9 91 0 2 0 3 2 3 87 0 6 6 7 83 0 7 7 14 67 10 1 8 8 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
94 93 105 103 93 113 94 113 37 119 42 41 84 44 38 34 11 23
CALL[ ]	/* CallFunction */";
};
width = 554;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (30,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = d;
},
{
alignment = -1;
pos = (467,765);
ref = comma;
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
39 19 2 7 8 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 5 5 6 83 0 6 6 14 67 0 10 10 9 83 0 9 9 20 67 0 8 8 4 83 0 4 4 23 67 11 1 7 7 3 83 0 3 3 24 67 0 0 0 1 83 2 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 4 0 8 7 4 8 91 0 5 5 6 83 0 6 6 14 67 0 10 10 9 83 0 9 9 20 67 11 1 7 7 3 83 0 3 3 24 67 0 0 0 1 83 2 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 4 0 8 7 4 8 91 0 0 2 1 1 0 1 87 0 5 5 6 83 0 6 6 14 67 0 10 10 9 83 0 9 9 20 67 11 1 7 7 3 83 0 3 3 24 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 9 0 10 4 9 10 91 0 4 0 8 7 4 8 91 0 0 2 1 1 0 1 87 0 5 5 6 83 0 6 6 14 67 11 1 7 7 3 83 0 3 3 24 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
66 65 100 98 92 90 79 77 65 87 66 87 36 87 42 38 17 68 35 12 33
CALL[ ]	/* CallFunction */";
};
width = 548;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(513,795,o),
(523,785,o),
(531,777,o),
(531,772,qs),
(531,761,o),
(512,738,o),
(512,730,qs),
(512,724,o),
(523,715,o),
(528,715,qs),
(541,715,o),
(561,736,o),
(575,765,o),
(583,796,o),
(583,806,qs),
(583,826,o),
(560,850,o),
(541,850,qs),
(525,850,o),
(505,830,o),
(505,816,qs),
(505,807,o)
);
},
{
closed = 1;
nodes = (
(436,308,o),
(436,325,qs),
(436,335,o),
(436,399,o),
(437,485,o),
(438,585,o),
(439,678,o),
(439,753,o),
(439,771,qs),
(439,799,o),
(415,809,o),
(392,809,qs),
(380,809,o),
(327,808,o),
(271,803,o),
(229,792,o),
(229,783,qs),
(229,779,o),
(237,774,o),
(247,772,o),
(256,772,o),
(257,772,qs),
(291,772,o),
(333,774,o),
(356,774,qs),
(373,774,o),
(396,769,o),
(396,756,qs),
(396,416,l),
(388,426,o),
(362,448,o),
(325,466,o),
(278,477,o),
(248,477,qs),
(202,477,o),
(134,449,o),
(87,404,o),
(57,347,o),
(40,289,o),
(34,236,o),
(34,218,qs),
(34,182,o),
(54,102,o),
(99,35,o),
(172,-9,o),
(224,-9,qs),
(278,-9,o),
(369,40,o),
(393,83,q),
(395,29,ls),
(396,4,o),
(411,-26,o),
(432,-28,qs),
(437,-28,o),
(451,-29,o),
(476,-30,o),
(513,-30,o),
(540,-30,qs),
(558,-30,o),
(569,-20,o),
(569,-15,qs),
(569,-5,o),
(544,0,o),
(506,1,qs),
(483,1,o),
(456,3,o),
(443,8,o),
(439,18,o),
(439,27,qs),
(437,149,o)
);
},
{
closed = 1;
nodes = (
(148,45,o),
(103,94,o),
(77,170,o),
(77,222,qs),
(77,265,o),
(97,347,o),
(141,411,o),
(208,449,o),
(256,449,qs),
(286,449,o),
(331,433,o),
(362,406,o),
(382,370,o),
(388,349,qs),
(395,324,o),
(399,268,o),
(399,248,qs),
(399,209,o),
(385,129,o),
(350,63,o),
(289,21,o),
(241,21,qs),
(208,21,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
62 42 2 9 10 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 7 7 8 83 0 8 8 14 67 0 1 1 0 83 0 0 0 20 67 0 10 10 6 83 0 6 6 23 67 11 1 9 9 5 83 0 5 5 24 67 0 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 6 0 10 9 6 10 91 0 7 7 8 83 0 8 8 14 67 0 1 1 0 83 0 0 0 20 67 11 1 9 9 5 83 0 5 5 24 67 0 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 6 0 10 9 6 10 91 0 2 4 1 3 2 3 87 0 7 7 8 83 0 8 8 14 67 0 1 1 0 83 0 0 0 20 67 11 1 9 9 5 83 0 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 0 0 1 6 0 1 91 0 6 0 10 9 6 10 91 0 2 4 1 3 2 3 87 0 7 7 8 83 0 8 8 14 67 11 1 9 9 5 83 0 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
93 92 106 104 92 114 93 114 54 103 42 38 17 68 46 38 34 12 24
CALL[ ]	/* CallFunction */";
};
width = 539;
}
);
note = dcaron;
unicode = 271;
},
{
glyphname = dcroat;
kernLeft = d;
kernRight = d;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(481,212,o),
(481,247,qs),
(481,288,o),
(480,325,qs),
(480,332,o),
(480,378,o),
(481,444,o),
(482,524,o),
(482,565,q),
(540,565,ls),
(550,565,o),
(564,575,o),
(573,589,o),
(576,604,o),
(576,609,qs),
(576,623,o),
(558,648,o),
(548,648,qs),
(534,648,o),
(502,647,o),
(482,646,q),
(483,688,o),
(483,754,o),
(483,771,qs),
(483,799,o),
(436,809,o),
(397,809,qs),
(341,809,o),
(273,804,o),
(237,793,o),
(225,774,o),
(225,760,qs),
(225,740,o),
(257,740,qs),
(264,740,o),
(287,741,o),
(311,741,o),
(334,742,o),
(343,742,qs),
(364,742,o),
(389,731,o),
(389,708,qs),
(389,645,l),
(376,645,o),
(347,646,o),
(322,646,o),
(301,647,o),
(296,647,qs),
(279,647,o),
(263,619,o),
(263,606,qs),
(263,593,o),
(281,564,o),
(296,564,qs),
(389,564,l),
(389,416,l),
(381,426,o),
(355,448,o),
(318,466,o),
(271,477,o),
(241,477,qs),
(195,477,o),
(127,449,o),
(80,404,o),
(50,347,o),
(33,289,o),
(27,236,o),
(27,218,qs),
(27,182,o),
(47,102,o),
(92,35,o),
(165,-9,o),
(218,-9,qs),
(244,-9,o),
(295,3,o),
(340,26,o),
(375,60,o),
(386,83,q),
(388,29,ls),
(389,-1,o),
(405,-24,o),
(425,-27,qs),
(430,-28,o),
(454,-29,o),
(486,-30,o),
(519,-30,o),
(533,-30,qs),
(550,-30,o),
(579,-11,o),
(579,10,qs),
(579,36,o),
(535,46,o),
(499,48,qs),
(493,48,o),
(482,56,o),
(482,76,qs),
(481,123,o)
);
},
{
closed = 1;
nodes = (
(181,81,o),
(144,115,o),
(121,175,o),
(121,221,qs),
(121,258,o),
(138,322,o),
(173,370,o),
(226,397,o),
(263,397,qs),
(290,397,o),
(329,383,o),
(356,362,o),
(372,337,o),
(377,327,qs),
(386,306,o),
(391,264,o),
(391,247,qs),
(391,158,o),
(317,67,o),
(251,67,qs),
(228,67,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
40 1 11 3 18 1 10 11 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
8 1 5 9 1 4 3 5 4 91 0 6 6 7 83 0 7 7 14 67 0 11 11 3 83 0 3 3 23 67 12 1 10 10 2 83 0 2 2 24 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
8 1 5 9 1 4 3 5 4 91 0 3 0 11 10 3 11 91 0 6 6 7 83 0 7 7 14 67 12 1 10 10 2 83 0 2 2 24 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
8 1 5 9 1 4 3 5 4 91 0 3 0 11 10 3 11 91 0 0 0 1 0 1 87 0 6 6 7 83 0 7 7 14 67 12 1 10 10 2 83 0 2 2 24 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
98 97 109 107 97 117 98 117 87 85 69 37 115 100 37 42 41 84 34 13 24
CALL[ ]	/* CallFunction */";
};
width = 554;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(456,625,o),
(414,625,qs),
(401,625,o),
(366,626,o),
(330,626,o),
(300,627,o),
(293,627,qs),
(279,627,o),
(267,605,o),
(267,595,qs),
(267,585,o),
(282,562,o),
(293,562,qs),
(311,562,o),
(375,562,o),
(447,563,o),
(514,563,o),
(534,563,qs),
(551,563,o),
(563,590,o),
(563,598,qs),
(563,609,o),
(550,628,o),
(542,628,qs),
(518,628,o)
);
},
{
closed = 1;
nodes = (
(462,309,o),
(462,325,qs),
(462,335,o),
(462,399,o),
(463,485,o),
(464,585,o),
(465,678,o),
(465,753,o),
(465,771,qs),
(465,799,o),
(426,809,o),
(388,809,qs),
(299,809,o),
(215,792,o),
(215,766,qs),
(215,759,o),
(235,752,o),
(245,752,qs),
(283,752,o),
(327,754,o),
(352,754,qs),
(369,754,o),
(392,745,o),
(392,726,qs),
(392,416,l),
(384,426,o),
(358,448,o),
(321,466,o),
(274,477,o),
(244,477,qs),
(198,477,o),
(130,449,o),
(83,404,o),
(53,347,o),
(36,289,o),
(30,236,o),
(30,218,qs),
(30,182,o),
(50,102,o),
(95,35,o),
(168,-9,o),
(220,-9,qs),
(274,-9,o),
(366,38,o),
(389,83,q),
(391,29,ls),
(392,4,o),
(407,-26,o),
(428,-28,qs),
(433,-28,o),
(447,-29,o),
(472,-30,o),
(509,-30,o),
(536,-30,qs),
(554,-30,o),
(575,-14,o),
(575,-2,qs),
(575,17,o),
(545,31,o),
(502,31,qs),
(478,31,o),
(465,37,o),
(465,57,qs),
(463,168,o)
);
},
{
closed = 1;
nodes = (
(170,71,o),
(128,113,o),
(103,178,o),
(103,222,qs),
(103,260,o),
(124,331,o),
(163,385,o),
(221,418,o),
(258,418,qs),
(288,418,o),
(331,402,o),
(360,378,o),
(378,348,o),
(384,334,q),
(391,309,o),
(395,268,o),
(395,248,qs),
(395,224,o),
(379,156,o),
(344,95,o),
(289,51,o),
(250,51,qs),
(223,51,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
63 43 2 9 10 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
11 1 0 0 1 6 0 1 91 0 7 7 8 83 0 8 8 14 67 0 10 10 6 83 0 6 6 23 67 12 1 9 9 5 83 0 5 5 24 67 0 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
11 1 0 0 1 6 0 1 91 0 6 0 10 9 6 10 91 0 7 7 8 83 0 8 8 14 67 12 1 9 9 5 83 0 5 5 24 67 0 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
11 1 0 0 1 6 0 1 91 0 6 0 10 9 6 10 91 0 2 4 1 3 2 3 87 0 7 7 8 83 0 8 8 14 67 12 1 9 9 5 83 0 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
90 89 1 0 103 101 89 111 90 111 77 75 71 66 59 57 47 45 39 38 37 33 29 27 12 5 0 24 1 16 13 15
CALL[ ]	/* CallFunction */";
};
width = 548;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(436,308,o),
(436,325,qs),
(436,334,o),
(436,383,o),
(437,453,o),
(438,535,o),
(438,577,q),
(464,577,o),
(511,578,o),
(526,578,qs),
(537,578,o),
(545,593,o),
(545,598,qs),
(545,603,o),
(538,613,o),
(534,613,qs),
(514,613,o),
(467,611,o),
(438,610,q),
(439,663,o),
(439,750,o),
(439,771,qs),
(439,799,o),
(415,809,o),
(392,809,qs),
(380,809,o),
(327,808,o),
(271,803,o),
(229,792,o),
(229,783,qs),
(229,779,o),
(237,774,o),
(247,772,o),
(256,772,o),
(257,772,qs),
(291,772,o),
(333,774,o),
(356,774,qs),
(373,774,o),
(396,769,o),
(396,756,qs),
(396,610,l),
(382,610,o),
(349,611,o),
(318,611,o),
(291,612,o),
(285,612,qs),
(277,612,o),
(269,600,o),
(269,595,qs),
(269,590,o),
(278,577,o),
(285,577,qs),
(396,577,l),
(396,416,l),
(388,426,o),
(362,448,o),
(325,466,o),
(278,477,o),
(248,477,qs),
(202,477,o),
(134,449,o),
(87,404,o),
(57,347,o),
(40,289,o),
(34,236,o),
(34,218,qs),
(34,182,o),
(54,102,o),
(99,35,o),
(172,-9,o),
(224,-9,qs),
(278,-9,o),
(369,40,o),
(393,83,q),
(395,29,ls),
(396,4,o),
(411,-26,o),
(432,-28,qs),
(437,-28,o),
(451,-29,o),
(476,-30,o),
(513,-30,o),
(540,-30,qs),
(558,-30,o),
(569,-20,o),
(569,-15,qs),
(569,-5,o),
(544,0,o),
(506,1,qs),
(483,1,o),
(456,3,o),
(443,8,o),
(439,18,o),
(439,27,qs),
(437,149,o)
);
},
{
closed = 1;
nodes = (
(148,45,o),
(103,94,o),
(77,170,o),
(77,222,qs),
(77,265,o),
(97,347,o),
(141,411,o),
(208,449,o),
(256,449,qs),
(286,449,o),
(331,433,o),
(362,406,o),
(382,370,o),
(388,349,qs),
(395,324,o),
(399,268,o),
(399,248,qs),
(399,209,o),
(385,129,o),
(350,63,o),
(289,21,o),
(241,21,qs),
(208,21,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
40 20 2 11 12 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
9 1 6 10 1 5 4 6 5 91 0 7 7 8 83 0 8 8 14 67 0 12 12 4 83 0 4 4 23 67 13 1 11 11 3 83 0 3 3 24 67 0 0 0 1 83 2 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
9 1 6 10 1 5 4 6 5 91 0 4 0 12 11 4 12 91 0 7 7 8 83 0 8 8 14 67 13 1 11 11 3 83 0 3 3 24 67 0 0 0 1 83 2 1 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
9 1 6 10 1 5 4 6 5 91 0 4 0 12 11 4 12 91 0 0 2 1 1 0 1 87 0 7 7 8 83 0 8 8 14 67 13 1 11 11 3 83 0 3 3 24 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
97 96 110 108 96 118 97 118 88 84 80 76 54 99 100 37 42 38 17 68 36 14 24
CALL[ ]	/* CallFunction */";
};
width = 539;
}
);
note = dcroat;
unicode = 273;
},
{
glyphname = eth;
kernLeft = c;
kernRight = eth;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(437,744,o),
(407,727,o),
(381,711,o),
(376,707,q),
(356,732,o),
(325,764,o),
(298,788,o),
(273,808,o),
(259,819,qs),
(251,826,o),
(224,833,o),
(211,833,qs),
(193,833,o),
(176,811,o),
(176,800,qs),
(176,797,o),
(178,786,o),
(183,783,qs),
(218,761,o),
(286,710,o),
(315,671,q),
(243,632,ls),
(229,624,o),
(215,612,o),
(215,603,qs),
(215,599,o),
(219,586,o),
(227,574,o),
(238,566,o),
(244,566,qs),
(248,566,o),
(280,581,o),
(316,599,o),
(346,615,o),
(349,617,q),
(370,581,o),
(403,511,o),
(427,454,o),
(442,416,o),
(445,413,qs),
(410,444,o),
(318,468,o),
(274,468,qs),
(230,468,o),
(141,440,o),
(70,381,o),
(26,291,o),
(26,230,qs),
(26,188,o),
(50,99,o),
(109,27,o),
(205,-19,o),
(277,-19,qs),
(356,-19,o),
(459,30,o),
(520,102,o),
(544,185,o),
(544,220,qs),
(544,329,o),
(487,531,o),
(433,621,qs),
(428,628,o),
(425,636,o),
(422,641,o),
(418,647,o),
(414,654,q),
(437,667,o),
(472,687,o),
(485,694,qs),
(490,696,o),
(502,712,o),
(502,725,qs),
(502,736,o),
(488,756,o),
(470,756,qs),
(464,756,o)
);
},
{
closed = 1;
nodes = (
(193,77,o),
(148,115,o),
(122,178,o),
(122,224,qs),
(122,256,o),
(144,315,o),
(187,360,o),
(250,387,o),
(292,387,qs),
(319,387,o),
(375,371,o),
(420,332,o),
(449,268,o),
(449,219,qs),
(449,192,o),
(434,136,o),
(397,89,o),
(332,60,o),
(283,60,qs),
(251,60,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
71 54 40 9 4 3 0 35 1 6 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
7 1 0 4 3 4 0 3 104 0 3 2 4 3 2 102 0 4 4 20 67 0 6 6 2 83 0 2 2 23 67 8 1 5 5 1 84 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
7 1 0 4 3 4 0 3 104 0 3 2 4 3 2 102 0 2 0 6 5 2 6 91 0 4 4 20 67 8 1 5 5 1 84 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 4 0 4 106 7 1 0 3 0 106 0 3 2 3 106 0 2 0 6 5 2 6 91 8 1 5 5 1 84 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
77 76 1 0 87 85 76 95 77 95 64 62 46 44 33 31 23 21 0 75 1 75 9 15
CALL[ ]	/* CallFunction */";
};
width = 578;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(427,735,o),
(398,719,o),
(370,701,o),
(361,695,q),
(342,720,o),
(310,756,o),
(281,785,o),
(255,808,o),
(241,819,qs),
(234,824,o),
(212,832,o),
(201,832,qs),
(189,832,o),
(172,816,o),
(172,805,qs),
(172,791,o),
(186,783,qs),
(219,762,o),
(285,705,o),
(314,667,q),
(239,627,ls),
(232,623,o),
(218,611,o),
(218,602,qs),
(218,593,o),
(233,573,o),
(243,573,qs),
(246,573,o),
(272,585,o),
(304,601,o),
(335,617,o),
(343,622,q),
(365,586,o),
(402,513,o),
(429,447,o),
(448,392,o),
(452,376,q),
(434,402,o),
(388,437,o),
(339,458,o),
(288,467,o),
(265,467,qs),
(221,467,o),
(136,437,o),
(70,378,o),
(29,289,o),
(29,230,qs),
(29,188,o),
(55,99,o),
(113,27,o),
(208,-19,o),
(276,-19,qs),
(356,-19,o),
(454,30,o),
(508,102,o),
(526,185,o),
(526,220,qs),
(526,326,o),
(464,525,o),
(417,609,qs),
(409,624,o),
(400,637,o),
(392,651,q),
(415,664,o),
(454,687,o),
(467,694,qs),
(472,697,o),
(482,711,o),
(482,721,qs),
(482,732,o),
(467,747,o),
(455,747,qs),
(450,747,o)
);
},
{
closed = 1;
nodes = (
(182,62,o),
(134,105,o),
(104,176,o),
(104,227,qs),
(104,263,o),
(127,327,o),
(171,376,o),
(236,405,o),
(278,405,qs),
(317,405,o),
(382,376,o),
(427,324,o),
(452,252,o),
(452,209,qs),
(452,183,o),
(436,124,o),
(396,74,o),
(328,42,o),
(275,42,qs),
(243,42,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
68 52 40 9 4 3 0 35 1 5 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
7 1 0 4 3 4 0 3 104 0 3 2 4 3 2 102 0 4 4 20 67 0 6 6 2 83 0 2 2 23 67 8 1 5 5 1 84 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
7 1 0 4 3 4 0 3 104 0 3 2 4 3 2 102 0 2 0 6 5 2 6 91 0 4 4 20 67 8 1 5 5 1 84 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 4 0 4 106 7 1 0 3 0 106 0 3 2 3 106 0 2 0 6 5 2 6 91 8 1 5 5 1 84 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
74 73 1 0 84 82 73 92 74 92 61 59 46 44 31 29 21 19 0 72 1 72 9 15
CALL[ ]	/* CallFunction */";
};
width = 561;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(376,699,o),
(346,680,q),
(311,730,o),
(243,796,o),
(215,819,qs),
(201,830,o),
(187,830,qs),
(183,830,o),
(167,825,o),
(167,814,qs),
(167,803,o),
(179,791,o),
(190,783,qs),
(222,762,o),
(284,698,o),
(313,660,q),
(234,619,ls),
(226,614,o),
(222,605,o),
(222,600,qs),
(222,590,o),
(236,584,o),
(242,584,qs),
(247,584,o),
(300,612,o),
(333,631,q),
(381,559,o),
(449,393,o),
(462,314,q),
(443,359,o),
(392,417,o),
(335,452,o),
(277,466,o),
(252,466,qs),
(208,466,o),
(129,433,o),
(69,372,o),
(33,284,o),
(33,230,qs),
(33,188,o),
(61,99,o),
(120,27,o),
(211,-19,o),
(274,-19,qs),
(340,-19,o),
(427,30,o),
(479,102,o),
(500,185,o),
(500,220,qs),
(500,269,o),
(483,372,o),
(456,470,o),
(419,558,o),
(400,594,qs),
(392,609,o),
(374,637,o),
(366,651,q),
(389,664,o),
(428,687,o),
(441,694,qs),
(448,698,o),
(453,712,o),
(453,715,qs),
(453,726,o),
(437,732,o),
(434,732,qs),
(428,732,o)
);
},
{
closed = 1;
nodes = (
(169,38,o),
(113,92,o),
(78,176,o),
(78,235,qs),
(78,277,o),
(98,350,o),
(140,404,o),
(203,435,o),
(246,435,qs),
(303,435,o),
(383,385,o),
(433,312,o),
(456,229,o),
(456,196,qs),
(456,171,o),
(437,107,o),
(393,51,o),
(321,12,o),
(268,12,qs),
(236,12,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
64 50 40 9 4 3 0 37 1 5 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
7 1 0 4 3 4 0 3 104 0 3 2 4 3 2 102 0 4 4 20 67 0 6 6 2 83 0 2 2 23 67 8 1 5 5 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
16
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
7 1 0 4 3 4 0 3 104 0 3 2 4 3 2 102 0 4 4 12 67 0 6 6 2 83 0 2 2 23 67 8 1 5 5 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
7 1 0 4 3 4 0 3 104 0 3 2 4 3 2 102 0 4 4 20 67 0 6 6 2 83 0 2 2 23 67 8 1 5 5 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
7 1 0 4 3 4 0 3 104 0 3 2 4 3 2 102 0 2 0 6 5 2 6 91 0 4 4 20 67 8 1 5 5 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 4 0 4 106 7 1 0 3 0 106 0 3 2 3 106 0 2 0 6 5 2 6 91 8 1 5 5 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
68 67 1 0 78 76 67 86 68 86 60 58 44 42 33 31 23 21 0 66 1 66 9 15
CALL[ ]	/* CallFunction */";
};
width = 537;
}
);
note = eth;
unicode = 240;
},
{
glyphname = e;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(129,309,o),
(148,350,o),
(183,383,o),
(231,403,o),
(262,403,qs),
(293,403,o),
(338,385,o),
(365,359,o),
(378,329,o),
(378,316,qs),
(378,292,o),
(360,292,qs),
(126,288,l)
);
},
{
closed = 1;
nodes = (
(157,229,o),
(200,229,o),
(250,230,o),
(294,230,o),
(326,230,o),
(330,230,qs),
(357,230,o),
(396,231,o),
(423,233,o),
(440,237,o),
(447,241,qs),
(462,249,o),
(474,277,o),
(474,297,qs),
(474,320,o),
(453,382,o),
(405,439,o),
(324,478,o),
(264,478,qs),
(211,478,o),
(126,444,o),
(64,379,o),
(31,286,o),
(31,227,qs),
(31,171,o),
(62,82,o),
(122,20,o),
(208,-14,o),
(263,-14,qs),
(325,-14,o),
(405,23,o),
(452,74,o),
(470,127,o),
(470,143,qs),
(470,168,o),
(448,183,o),
(429,183,qs),
(412,183,o),
(390,162,o),
(384,146,qs),
(379,133,o),
(362,103,o),
(335,78,o),
(296,62,o),
(269,62,qs),
(225,62,o),
(169,90,o),
(136,135,o),
(124,191,o),
(124,218,qs),
(124,220,o),
(124,227,o),
(125,229,q),
(127,229,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 6 2 6 3 2 104 7 1 0 8 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 6 2 6 3 2 104 0 5 0 1 0 5 1 91 7 1 0 8 1 6 3 0 6 91 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
13 13 1 0 13 66 13 58 48 46 38 36 30 28 22 20 8 6 0 12 1 12 9 15
CALL[ ]	/* CallFunction */";
};
width = 507;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(115,320,o),
(137,361,o),
(173,394,o),
(223,415,o),
(254,415,qs),
(286,415,o),
(334,394,o),
(365,363,o),
(381,326,o),
(381,311,qs),
(381,303,o),
(364,303,qs),
(111,299,l)
);
},
{
closed = 1;
nodes = (
(158,239,o),
(200,240,o),
(238,240,o),
(248,240,qs),
(296,240,o),
(381,241,o),
(412,241,qs),
(432,241,o),
(454,281,o),
(454,304,qs),
(454,324,o),
(434,383,o),
(388,438,o),
(312,477,o),
(257,477,qs),
(206,477,o),
(122,442,o),
(62,378,o),
(30,284,o),
(30,226,qs),
(30,173,o),
(57,86,o),
(111,22,o),
(190,-13,o),
(242,-13,qs),
(306,-13,o),
(392,19,o),
(442,71,o),
(463,138,o),
(463,173,qs),
(463,188,o),
(445,205,o),
(433,205,qs),
(412,205,o),
(399,181,o),
(399,173,qs),
(399,155,o),
(384,112,o),
(351,75,o),
(297,51,o),
(258,51,qs),
(221,51,o),
(164,80,o),
(125,128,o),
(105,188,o),
(105,218,qs),
(105,223,o),
(106,234,o),
(107,239,q),
(119,239,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 6 2 6 3 2 104 7 1 0 8 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 6 2 6 3 2 104 0 5 0 1 0 5 1 91 7 1 0 8 1 6 3 0 6 91 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
13 13 1 0 13 62 13 54 48 46 38 36 30 28 22 20 8 6 0 12 1 12 9 15
CALL[ ]	/* CallFunction */";
};
width = 491;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(90,317,o),
(113,372,o),
(152,417,o),
(207,445,o),
(245,445,qs),
(282,445,o),
(335,418,o),
(369,378,o),
(385,331,o),
(385,311,qs),
(385,293,o),
(368,293,qs),
(85,289,l)
);
},
{
closed = 1;
nodes = (
(143,259,o),
(194,260,o),
(240,260,o),
(252,260,qs),
(292,260,o),
(367,260,o),
(393,261,qs),
(411,262,o),
(428,288,o),
(428,304,qs),
(428,324,o),
(407,383,o),
(364,438,o),
(296,477,o),
(248,477,qs),
(203,477,o),
(125,440,o),
(67,374,o),
(34,281,o),
(34,226,qs),
(34,176,o),
(61,89,o),
(113,25,o),
(192,-11,o),
(245,-11,qs),
(287,-11,o),
(359,21,o),
(412,76,o),
(442,148,o),
(442,187,qs),
(442,205,o),
(425,205,qs),
(408,205,o),
(408,187,qs),
(408,155,o),
(387,95,o),
(346,49,o),
(284,21,o),
(243,21,qs),
(198,21,o),
(135,56,o),
(96,112,o),
(79,182,o),
(79,218,qs),
(79,227,o),
(80,248,o),
(81,259,q),
(95,259,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 6 2 6 3 2 104 7 1 0 8 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 6 2 6 3 2 104 0 5 0 1 0 5 1 91 7 1 0 8 1 6 3 0 6 91 0 2 2 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
13 13 1 0 13 60 13 52 46 44 36 34 29 27 22 20 8 6 0 12 1 12 9 15
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = e;
unicode = 101;
},
{
glyphname = eacute;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(338,689,o),
(306,690,qs),
(287,690,o),
(244,641,o),
(208,580,o),
(184,527,o),
(184,524,qs),
(184,513,o),
(210,502,o),
(221,502,qs),
(230,502,o),
(260,518,o),
(294,543,o),
(330,575,o),
(358,606,o),
(376,633,o),
(376,642,qs),
(376,661,o)
);
},
{
closed = 1;
nodes = (
(129,309,o),
(148,350,o),
(183,383,o),
(231,403,o),
(262,403,qs),
(293,403,o),
(338,385,o),
(365,359,o),
(378,329,o),
(378,316,qs),
(378,292,o),
(360,292,qs),
(126,288,l)
);
},
{
closed = 1;
nodes = (
(157,229,o),
(200,229,o),
(250,230,o),
(294,230,o),
(326,230,o),
(330,230,qs),
(357,230,o),
(396,231,o),
(423,233,o),
(440,237,o),
(447,241,qs),
(462,249,o),
(474,277,o),
(474,297,qs),
(474,320,o),
(453,382,o),
(405,439,o),
(324,478,o),
(264,478,qs),
(211,478,o),
(126,444,o),
(64,379,o),
(31,286,o),
(31,227,qs),
(31,171,o),
(62,82,o),
(122,20,o),
(208,-14,o),
(263,-14,qs),
(325,-14,o),
(405,23,o),
(452,74,o),
(470,127,o),
(470,143,qs),
(470,168,o),
(448,183,o),
(429,183,qs),
(412,183,o),
(390,162,o),
(384,146,qs),
(379,133,o),
(362,103,o),
(335,78,o),
(296,62,o),
(269,62,qs),
(225,62,o),
(169,90,o),
(136,135,o),
(124,191,o),
(124,218,qs),
(124,220,o),
(124,227,o),
(125,229,q),
(127,229,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 7 0 106 0 5 8 4 8 5 4 104 9 1 2 10 1 8 5 2 8 92 0 3 3 7 83 0 7 7 23 67 0 4 4 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 106 0 0 7 0 106 0 5 8 4 8 5 4 104 0 7 0 3 2 7 3 91 9 1 2 10 1 8 5 2 8 92 0 4 4 6 83 0 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
31 31 19 18 31 84 31 76 66 64 56 54 48 46 40 38 26 24 18 30 19 30 38 38 11 17
CALL[ ]	/* CallFunction */";
};
width = 507;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(319,671,o),
(296,671,qs),
(286,671,o),
(263,650,o),
(238,619,o),
(214,582,o),
(196,549,o),
(185,525,o),
(185,523,qs),
(185,513,o),
(202,505,o),
(210,505,qs),
(221,505,o),
(266,537,o),
(311,579,o),
(345,622,o),
(345,633,qs),
(345,650,o)
);
},
{
closed = 1;
nodes = (
(115,320,o),
(137,361,o),
(173,394,o),
(223,415,o),
(254,415,qs),
(286,415,o),
(334,394,o),
(365,363,o),
(381,326,o),
(381,311,qs),
(381,303,o),
(364,303,qs),
(111,299,l)
);
},
{
closed = 1;
nodes = (
(158,239,o),
(200,240,o),
(238,240,o),
(248,240,qs),
(296,240,o),
(381,241,o),
(412,241,qs),
(432,241,o),
(454,281,o),
(454,304,qs),
(454,324,o),
(434,383,o),
(388,438,o),
(312,477,o),
(257,477,qs),
(206,477,o),
(122,442,o),
(62,378,o),
(30,284,o),
(30,226,qs),
(30,173,o),
(57,86,o),
(111,22,o),
(190,-13,o),
(242,-13,qs),
(306,-13,o),
(392,19,o),
(442,71,o),
(463,138,o),
(463,173,qs),
(463,188,o),
(445,205,o),
(433,205,qs),
(412,205,o),
(399,181,o),
(399,173,qs),
(399,155,o),
(384,112,o),
(351,75,o),
(297,51,o),
(258,51,qs),
(221,51,o),
(164,80,o),
(125,128,o),
(105,188,o),
(105,218,qs),
(105,223,o),
(106,234,o),
(107,239,q),
(119,239,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 7 0 106 0 5 8 4 8 5 4 104 9 1 2 10 1 8 5 2 8 92 0 3 3 7 83 0 7 7 23 67 0 4 4 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 106 0 0 7 0 106 0 5 8 4 8 5 4 104 0 7 0 3 2 7 3 91 9 1 2 10 1 8 5 2 8 92 0 4 4 6 83 0 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
31 31 19 18 31 80 31 72 66 64 56 54 48 46 40 38 26 24 18 30 19 30 40 36 11 17
CALL[ ]	/* CallFunction */";
};
width = 491;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(90,317,o),
(113,372,o),
(152,417,o),
(207,445,o),
(245,445,qs),
(282,445,o),
(335,418,o),
(369,378,o),
(385,331,o),
(385,311,qs),
(385,293,o),
(368,293,qs),
(85,289,l)
);
},
{
closed = 1;
nodes = (
(143,259,o),
(194,260,o),
(240,260,o),
(252,260,qs),
(292,260,o),
(367,260,o),
(393,261,qs),
(411,262,o),
(428,288,o),
(428,304,qs),
(428,324,o),
(407,383,o),
(364,438,o),
(296,477,o),
(248,477,qs),
(203,477,o),
(125,440,o),
(67,374,o),
(34,281,o),
(34,226,qs),
(34,176,o),
(61,89,o),
(113,25,o),
(192,-11,o),
(245,-11,qs),
(287,-11,o),
(359,21,o),
(412,76,o),
(442,148,o),
(442,187,qs),
(442,205,o),
(425,205,qs),
(408,205,o),
(408,187,qs),
(408,155,o),
(387,95,o),
(346,49,o),
(284,21,o),
(243,21,qs),
(198,21,o),
(135,56,o),
(96,112,o),
(79,182,o),
(79,218,qs),
(79,227,o),
(80,248,o),
(81,259,q),
(95,259,o)
);
},
{
closed = 1;
nodes = (
(290,640,o),
(282,640,qs),
(275,640,o),
(243,610,o),
(211,570,o),
(187,530,o),
(187,521,qs),
(187,510,o),
(195,510,qs),
(202,510,o),
(237,538,o),
(273,574,o),
(301,610,o),
(301,618,qs),
(301,632,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 8 7 8 106 0 7 5 7 106 0 3 6 2 6 3 2 104 9 1 0 10 1 6 3 0 6 92 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 8 7 8 106 0 7 5 7 106 0 3 6 2 6 3 2 104 0 5 0 1 0 5 1 91 9 1 0 10 1 6 3 0 6 92 0 2 2 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
13 13 1 0 74 72 67 65 13 60 13 52 46 44 36 34 29 27 22 20 8 6 0 12 1 12 11 15
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = eacute;
unicode = 233;
},
{
glyphname = ebreve;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(129,309,o),
(148,350,o),
(183,383,o),
(231,403,o),
(262,403,qs),
(293,403,o),
(338,385,o),
(365,359,o),
(378,329,o),
(378,316,qs),
(378,292,o),
(360,292,qs),
(126,288,l)
);
},
{
closed = 1;
nodes = (
(157,229,o),
(200,229,o),
(250,230,o),
(294,230,o),
(326,230,o),
(330,230,qs),
(357,230,o),
(396,231,o),
(423,233,o),
(440,237,o),
(447,241,qs),
(462,249,o),
(474,277,o),
(474,297,qs),
(474,320,o),
(453,382,o),
(405,439,o),
(324,478,o),
(264,478,qs),
(211,478,o),
(126,444,o),
(64,379,o),
(31,286,o),
(31,227,qs),
(31,171,o),
(62,82,o),
(122,20,o),
(208,-14,o),
(263,-14,qs),
(325,-14,o),
(405,23,o),
(452,74,o),
(470,127,o),
(470,143,qs),
(470,168,o),
(448,183,o),
(429,183,qs),
(412,183,o),
(390,162,o),
(384,146,qs),
(379,133,o),
(362,103,o),
(335,78,o),
(296,62,o),
(269,62,qs),
(225,62,o),
(169,90,o),
(136,135,o),
(124,191,o),
(124,218,qs),
(124,220,o),
(124,227,o),
(125,229,q),
(127,229,o)
);
},
{
closed = 1;
nodes = (
(362,619,o),
(347,619,qs),
(334,619,o),
(315,601,o),
(315,590,qs),
(315,582,o),
(288,567,o),
(259,567,qs),
(250,567,o),
(229,569,o),
(211,575,o),
(200,584,o),
(200,590,qs),
(200,607,o),
(181,619,o),
(164,619,qs),
(147,619,o),
(132,602,o),
(132,589,qs),
(132,557,o),
(199,510,o),
(264,510,qs),
(283,510,o),
(326,520,o),
(362,540,o),
(385,569,o),
(385,589,qs),
(385,609,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
10 1 8 9 8 106 0 3 6 2 6 3 2 104 0 9 0 7 5 9 7 91 11 1 0 12 1 6 3 0 6 92 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
10 1 8 9 8 106 0 3 6 2 6 3 2 104 0 9 0 7 5 9 7 91 0 5 0 1 0 5 1 91 11 1 0 12 1 6 3 0 6 92 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
13 13 1 0 93 91 87 85 79 77 73 71 13 66 13 58 48 46 38 36 30 28 22 20 8 6 0 12 1 12 13 15
CALL[ ]	/* CallFunction */";
};
width = 507;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (30,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (140,0);
ref = breve;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
10 1 8 9 8 106 0 3 6 2 6 3 2 104 0 9 0 7 5 9 7 91 11 1 0 12 1 6 3 0 6 92 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
10 1 8 9 8 106 0 3 6 2 6 3 2 104 0 9 0 7 5 9 7 91 0 5 0 1 0 5 1 91 11 1 0 12 1 6 3 0 6 92 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
14 14 2 1 89 87 83 81 75 73 70 68 14 63 14 55 49 47 39 37 31 29 23 21 9 7 1 13 2 13 13 26
CALL[ ]	/* CallFunction */";
};
width = 491;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(90,317,o),
(113,372,o),
(152,417,o),
(207,445,o),
(245,445,qs),
(282,445,o),
(335,418,o),
(369,378,o),
(385,331,o),
(385,311,qs),
(385,293,o),
(368,293,qs),
(85,289,l)
);
},
{
closed = 1;
nodes = (
(143,259,o),
(194,260,o),
(240,260,o),
(252,260,qs),
(292,260,o),
(367,260,o),
(393,261,qs),
(411,262,o),
(428,288,o),
(428,304,qs),
(428,324,o),
(407,383,o),
(364,438,o),
(296,477,o),
(248,477,qs),
(203,477,o),
(125,440,o),
(67,374,o),
(34,281,o),
(34,226,qs),
(34,176,o),
(61,89,o),
(113,25,o),
(192,-11,o),
(245,-11,qs),
(287,-11,o),
(359,21,o),
(412,76,o),
(442,148,o),
(442,187,qs),
(442,205,o),
(425,205,qs),
(408,205,o),
(408,187,qs),
(408,155,o),
(387,95,o),
(346,49,o),
(284,21,o),
(243,21,qs),
(198,21,o),
(135,56,o),
(96,112,o),
(79,182,o),
(79,218,qs),
(79,227,o),
(80,248,o),
(81,259,q),
(95,259,o)
);
},
{
closed = 1;
nodes = (
(347,613,o),
(339,613,qs),
(322,613,o),
(322,590,qs),
(322,580,o),
(309,560,o),
(287,545,o),
(260,535,o),
(247,535,qs),
(218,535,o),
(173,559,o),
(173,590,qs),
(173,602,o),
(167,613,o),
(156,613,qs),
(139,613,o),
(139,589,qs),
(139,574,o),
(156,546,o),
(185,523,o),
(224,510,o),
(247,510,qs),
(266,510,o),
(306,521,o),
(338,541,o),
(358,571,o),
(358,589,qs),
(358,605,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
10 1 8 9 8 106 0 3 6 2 6 3 2 104 0 9 0 7 5 9 7 91 11 1 0 12 1 6 3 0 6 92 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
10 1 8 9 8 106 0 3 6 2 6 3 2 104 0 9 0 7 5 9 7 91 0 5 0 1 0 5 1 91 11 1 0 12 1 6 3 0 6 92 0 2 2 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
13 13 1 0 87 85 80 78 74 72 67 65 13 60 13 52 46 44 36 34 29 27 22 20 8 6 0 12 1 12 13 15
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = ebreve;
unicode = 277;
},
{
glyphname = ecaron;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(344,627,o),
(310,608,o),
(272,587,o),
(255,578,q),
(238,587,o),
(200,608,o),
(167,627,o),
(141,640,o),
(136,640,qs),
(130,640,o),
(123,631,o),
(123,626,qs),
(123,606,o),
(159,558,o),
(205,515,o),
(248,486,o),
(255,486,qs),
(264,486,o),
(307,516,o),
(353,558,o),
(388,603,o),
(388,619,qs),
(388,627,o),
(382,640,o),
(375,640,qs),
(370,640,o)
);
},
{
closed = 1;
nodes = (
(129,309,o),
(148,350,o),
(183,383,o),
(231,403,o),
(262,403,qs),
(293,403,o),
(338,385,o),
(365,359,o),
(378,329,o),
(378,316,qs),
(378,292,o),
(360,292,qs),
(126,288,l)
);
},
{
closed = 1;
nodes = (
(157,229,o),
(200,229,o),
(250,230,o),
(294,230,o),
(326,230,o),
(330,230,qs),
(357,230,o),
(396,231,o),
(423,233,o),
(440,237,o),
(447,241,qs),
(462,249,o),
(474,277,o),
(474,297,qs),
(474,320,o),
(453,382,o),
(405,439,o),
(324,478,o),
(264,478,qs),
(211,478,o),
(126,444,o),
(64,379,o),
(31,286,o),
(31,227,qs),
(31,171,o),
(62,82,o),
(122,20,o),
(208,-14,o),
(263,-14,qs),
(325,-14,o),
(405,23,o),
(452,74,o),
(470,127,o),
(470,143,qs),
(470,168,o),
(448,183,o),
(429,183,qs),
(412,183,o),
(390,162,o),
(384,146,qs),
(379,133,o),
(362,103,o),
(335,78,o),
(296,62,o),
(269,62,qs),
(225,62,o),
(169,90,o),
(136,135,o),
(124,191,o),
(124,218,qs),
(124,220,o),
(124,227,o),
(125,229,q),
(127,229,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
2 10 2 0 1 0 106 0 1 8 1 106 0 6 9 5 9 6 5 104 11 1 3 12 1 9 6 3 9 92 0 4 4 8 83 0 8 8 23 67 0 5 5 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
2 10 2 0 1 0 106 0 1 8 1 106 0 6 9 5 9 6 5 104 0 8 0 4 3 8 4 91 11 1 3 12 1 9 6 3 9 92 0 5 5 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
39 39 27 26 1 0 39 92 39 84 74 72 64 62 56 54 48 46 34 32 26 38 27 38 17 15 9 7 0 25 1 25 13 15
CALL[ ]	/* CallFunction */";
};
width = 507;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (30,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (93,1150);
ref = circumflex;
scale = (1,-0.9999);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
69 1 9 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
8 12 2 7 9 7 106 0 3 6 2 6 3 2 104 10 1 0 11 1 6 3 0 6 91 0 9 9 23 67 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
8 12 2 7 9 7 106 0 9 5 5 9 94 0 3 6 2 6 3 2 104 0 5 0 1 0 5 1 92 10 1 0 11 1 6 3 0 6 91 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
65 64 14 14 2 1 82 80 75 73 64 88 65 88 14 63 14 55 49 47 39 37 31 29 23 21 9 7 1 13 2 13 13 26
CALL[ ]	/* CallFunction */";
};
width = 491;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(90,317,o),
(113,372,o),
(152,417,o),
(207,445,o),
(245,445,qs),
(282,445,o),
(335,418,o),
(369,378,o),
(385,331,o),
(385,311,qs),
(385,293,o),
(368,293,qs),
(85,289,l)
);
},
{
closed = 1;
nodes = (
(143,259,o),
(194,260,o),
(240,260,o),
(252,260,qs),
(292,260,o),
(367,260,o),
(393,261,qs),
(411,262,o),
(428,288,o),
(428,304,qs),
(428,324,o),
(407,383,o),
(364,438,o),
(296,477,o),
(248,477,qs),
(203,477,o),
(125,440,o),
(67,374,o),
(34,281,o),
(34,226,qs),
(34,176,o),
(61,89,o),
(113,25,o),
(192,-11,o),
(245,-11,qs),
(287,-11,o),
(359,21,o),
(412,76,o),
(442,148,o),
(442,187,qs),
(442,205,o),
(425,205,qs),
(408,205,o),
(408,187,qs),
(408,155,o),
(387,95,o),
(346,49,o),
(284,21,o),
(243,21,qs),
(198,21,o),
(135,56,o),
(96,112,o),
(79,182,o),
(79,218,qs),
(79,227,o),
(80,248,o),
(81,259,q),
(95,259,o)
);
},
{
closed = 1;
nodes = (
(332,622,o),
(298,596,o),
(260,566,o),
(243,554,q),
(226,566,o),
(188,596,o),
(155,622,o),
(129,640,o),
(124,640,qs),
(116,640,o),
(116,629,qs),
(116,620,o),
(149,580,o),
(193,540,o),
(234,510,o),
(243,510,qs),
(252,510,o),
(295,540,o),
(338,580,o),
(371,620,o),
(371,629,qs),
(371,640,o),
(363,640,qs),
(358,640,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
80 1 8 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
9 12 2 7 8 7 106 0 8 5 8 106 0 3 6 2 6 3 2 104 10 1 0 11 1 6 3 0 6 92 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
9 12 2 7 8 7 106 0 8 5 8 106 0 3 6 2 6 3 2 104 0 5 0 1 0 5 1 91 10 1 0 11 1 6 3 0 6 92 0 2 2 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
62 61 13 13 1 0 76 74 69 67 61 84 62 84 13 60 13 52 46 44 36 34 29 27 22 20 8 6 0 12 1 12 13 15
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = ecaron;
unicode = 283;
},
{
glyphname = ecircumflex;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(386,523,o),
(386,531,qs),
(386,547,o),
(351,592,o),
(305,634,o),
(262,664,o),
(253,664,qs),
(246,664,o),
(203,635,o),
(157,592,o),
(121,543,o),
(121,524,qs),
(121,519,o),
(128,510,o),
(134,510,qs),
(139,510,o),
(165,523,o),
(198,542,o),
(236,563,o),
(253,572,q),
(270,563,o),
(308,542,o),
(342,523,o),
(368,510,o),
(373,510,qs),
(380,510,o)
);
},
{
closed = 1;
nodes = (
(129,309,o),
(148,350,o),
(183,383,o),
(231,403,o),
(262,403,qs),
(293,403,o),
(338,385,o),
(365,359,o),
(378,329,o),
(378,316,qs),
(378,292,o),
(360,292,qs),
(126,288,l)
);
},
{
closed = 1;
nodes = (
(157,229,o),
(200,229,o),
(250,230,o),
(294,230,o),
(326,230,o),
(330,230,qs),
(357,230,o),
(396,231,o),
(423,233,o),
(440,237,o),
(447,241,qs),
(462,249,o),
(474,277,o),
(474,297,qs),
(474,320,o),
(453,382,o),
(405,439,o),
(324,478,o),
(264,478,qs),
(211,478,o),
(126,444,o),
(64,379,o),
(31,286,o),
(31,227,qs),
(31,171,o),
(62,82,o),
(122,20,o),
(208,-14,o),
(263,-14,qs),
(325,-14,o),
(405,23,o),
(452,74,o),
(470,127,o),
(470,143,qs),
(470,168,o),
(448,183,o),
(429,183,qs),
(412,183,o),
(390,162,o),
(384,146,qs),
(379,133,o),
(362,103,o),
(335,78,o),
(296,62,o),
(269,62,qs),
(225,62,o),
(169,90,o),
(136,135,o),
(124,191,o),
(124,218,qs),
(124,220,o),
(124,227,o),
(125,229,q),
(127,229,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 2 0 2 106 1 10 2 0 8 0 106 0 6 9 5 9 6 5 104 11 1 3 12 1 9 6 3 9 91 0 4 4 8 83 0 8 8 23 67 0 5 5 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 2 0 2 106 1 10 2 0 8 0 106 0 6 9 5 9 6 5 104 0 8 0 4 3 8 4 92 11 1 3 12 1 9 6 3 9 91 0 5 5 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
39 39 27 26 1 0 39 92 39 84 74 72 64 62 56 54 48 46 34 32 26 38 27 38 19 17 11 9 0 25 1 25 13 15
CALL[ ]	/* CallFunction */";
};
width = 507;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (30,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (92,0);
ref = circumflex;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
69 1 7 9 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 9 7 9 106 8 12 2 7 5 7 106 0 3 6 2 6 3 2 104 10 1 0 11 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 9 7 9 106 8 12 2 7 5 7 106 0 3 6 2 6 3 2 104 0 5 0 1 0 5 1 92 10 1 0 11 1 6 3 0 6 91 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
65 64 14 14 2 1 82 80 75 73 64 88 65 88 14 63 14 55 49 47 39 37 31 29 23 21 9 7 1 13 2 13 13 26
CALL[ ]	/* CallFunction */";
};
width = 491;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(90,317,o),
(113,372,o),
(152,417,o),
(207,445,o),
(245,445,qs),
(282,445,o),
(335,418,o),
(369,378,o),
(385,331,o),
(385,311,qs),
(385,293,o),
(368,293,qs),
(85,289,l)
);
},
{
closed = 1;
nodes = (
(143,259,o),
(194,260,o),
(240,260,o),
(252,260,qs),
(292,260,o),
(367,260,o),
(393,261,qs),
(411,262,o),
(428,288,o),
(428,304,qs),
(428,324,o),
(407,383,o),
(364,438,o),
(296,477,o),
(248,477,qs),
(203,477,o),
(125,440,o),
(67,374,o),
(34,281,o),
(34,226,qs),
(34,176,o),
(61,89,o),
(113,25,o),
(192,-11,o),
(245,-11,qs),
(287,-11,o),
(359,21,o),
(412,76,o),
(442,148,o),
(442,187,qs),
(442,205,o),
(425,205,qs),
(408,205,o),
(408,187,qs),
(408,155,o),
(387,95,o),
(346,49,o),
(284,21,o),
(243,21,qs),
(198,21,o),
(135,56,o),
(96,112,o),
(79,182,o),
(79,218,qs),
(79,227,o),
(80,248,o),
(81,259,q),
(95,259,o)
);
},
{
closed = 1;
nodes = (
(372,521,qs),
(372,530,o),
(339,570,o),
(296,610,o),
(253,640,o),
(244,640,qs),
(235,640,o),
(194,610,o),
(150,570,o),
(117,530,o),
(117,521,qs),
(117,510,o),
(125,510,qs),
(130,510,o),
(156,528,o),
(189,554,o),
(227,584,o),
(244,596,q),
(261,584,o),
(299,554,o),
(333,528,o),
(359,510,o),
(364,510,qs),
(372,510,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
66 1 7 9 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 9 7 9 106 8 12 2 7 5 7 106 0 3 6 2 6 3 2 104 10 1 0 11 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 9 7 9 106 8 12 2 7 5 7 106 0 3 6 2 6 3 2 104 0 5 0 1 0 5 1 92 10 1 0 11 1 6 3 0 6 91 0 2 2 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
62 61 13 13 1 0 79 77 72 70 61 84 62 84 13 60 13 52 46 44 36 34 29 27 22 20 8 6 0 12 1 12 13 15
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = ecircumflex;
unicode = 234;
},
{
glyphname = edieresis;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(124,524,o),
(149,524,qs),
(160,524,o),
(184,530,o),
(203,546,o),
(216,573,o),
(216,594,qs),
(216,621,o),
(180,655,o),
(156,655,qs),
(138,655,o),
(113,641,o),
(97,621,o),
(90,598,o),
(90,590,qs),
(90,561,o)
);
},
{
closed = 1;
nodes = (
(331,501,o),
(356,501,qs),
(367,501,o),
(391,507,o),
(410,523,o),
(423,550,o),
(423,571,qs),
(423,598,o),
(387,632,o),
(363,632,qs),
(345,632,o),
(320,618,o),
(304,598,o),
(297,575,o),
(297,567,qs),
(297,538,o)
);
},
{
closed = 1;
nodes = (
(129,309,o),
(148,350,o),
(183,383,o),
(231,403,o),
(262,403,qs),
(293,403,o),
(338,385,o),
(365,359,o),
(378,329,o),
(378,316,qs),
(378,292,o),
(360,292,qs),
(126,288,l)
);
},
{
closed = 1;
nodes = (
(157,229,o),
(200,229,o),
(250,230,o),
(294,230,o),
(326,230,o),
(330,230,qs),
(357,230,o),
(396,231,o),
(423,233,o),
(440,237,o),
(447,241,qs),
(462,249,o),
(474,277,o),
(474,297,qs),
(474,320,o),
(453,382,o),
(405,439,o),
(324,478,o),
(264,478,qs),
(211,478,o),
(126,444,o),
(64,379,o),
(31,286,o),
(31,227,qs),
(31,171,o),
(62,82,o),
(122,20,o),
(208,-14,o),
(263,-14,qs),
(325,-14,o),
(405,23,o),
(452,74,o),
(470,127,o),
(470,143,qs),
(470,168,o),
(448,183,o),
(429,183,qs),
(412,183,o),
(390,162,o),
(384,146,qs),
(379,133,o),
(362,103,o),
(335,78,o),
(296,62,o),
(269,62,qs),
(225,62,o),
(169,90,o),
(136,135,o),
(124,191,o),
(124,218,qs),
(124,220,o),
(124,227,o),
(125,229,q),
(127,229,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 7 10 6 10 7 6 104 0 0 0 1 3 0 1 91 0 2 0 3 9 2 3 91 11 1 4 12 1 10 7 4 10 91 0 5 5 9 83 0 9 9 23 67 0 6 6 8 83 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 7 10 6 10 7 6 104 0 0 0 1 3 0 1 91 0 2 0 3 9 2 3 91 0 9 0 5 4 9 5 91 11 1 4 12 1 10 7 4 10 91 0 6 6 8 83 0 8 8 21 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
45 45 33 32 45 98 45 90 80 78 70 68 62 60 54 52 40 38 32 44 33 44 38 38 38 36 13 19
CALL[ ]	/* CallFunction */";
};
width = 507;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (30,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (81,9);
ref = dieresis;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 3 6 2 6 3 2 104 0 7 0 8 10 7 8 91 0 9 0 10 5 9 10 91 11 1 0 12 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 3 6 2 6 3 2 104 0 7 0 8 10 7 8 91 0 9 0 10 5 9 10 91 0 5 0 1 0 5 1 91 11 1 0 12 1 6 3 0 6 91 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
14 14 2 1 90 88 84 82 76 74 70 68 14 63 14 55 49 47 39 37 31 29 23 21 9 7 1 13 2 13 13 26
CALL[ ]	/* CallFunction */";
};
width = 491;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(90,317,o),
(113,372,o),
(152,417,o),
(207,445,o),
(245,445,qs),
(282,445,o),
(335,418,o),
(369,378,o),
(385,331,o),
(385,311,qs),
(385,293,o),
(368,293,qs),
(85,289,l)
);
},
{
closed = 1;
nodes = (
(143,259,o),
(194,260,o),
(240,260,o),
(252,260,qs),
(292,260,o),
(367,260,o),
(393,261,qs),
(411,262,o),
(428,288,o),
(428,304,qs),
(428,324,o),
(407,383,o),
(364,438,o),
(296,477,o),
(248,477,qs),
(203,477,o),
(125,440,o),
(67,374,o),
(34,281,o),
(34,226,qs),
(34,176,o),
(61,89,o),
(113,25,o),
(192,-11,o),
(245,-11,qs),
(287,-11,o),
(359,21,o),
(412,76,o),
(442,148,o),
(442,187,qs),
(442,205,o),
(425,205,qs),
(408,205,o),
(408,187,qs),
(408,155,o),
(387,95,o),
(346,49,o),
(284,21,o),
(243,21,qs),
(198,21,o),
(135,56,o),
(96,112,o),
(79,182,o),
(79,218,qs),
(79,227,o),
(80,248,o),
(81,259,q),
(95,259,o)
);
},
{
closed = 1;
nodes = (
(125,533,o),
(139,533,qs),
(153,533,o),
(180,552,o),
(180,579,qs),
(180,596,o),
(160,616,o),
(146,616,qs),
(135,616,o),
(120,607,o),
(110,594,o),
(105,580,o),
(105,575,qs),
(105,557,o)
);
},
{
closed = 1;
nodes = (
(332,510,o),
(346,510,qs),
(360,510,o),
(387,529,o),
(387,556,qs),
(387,573,o),
(367,593,o),
(353,593,qs),
(342,593,o),
(327,584,o),
(317,571,o),
(312,557,o),
(312,552,qs),
(312,534,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 3 6 2 6 3 2 104 0 7 0 8 10 7 8 91 0 9 0 10 5 9 10 91 11 1 0 12 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 3 6 2 6 3 2 104 0 7 0 8 10 7 8 91 0 9 0 10 5 9 10 91 0 5 0 1 0 5 1 91 11 1 0 12 1 6 3 0 6 91 0 2 2 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
13 13 1 0 87 85 81 79 73 71 67 65 13 60 13 52 46 44 36 34 29 27 22 20 8 6 0 12 1 12 13 15
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = edieresis;
unicode = 235;
},
{
glyphname = edotaccent;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(129,309,o),
(148,350,o),
(183,383,o),
(231,403,o),
(262,403,qs),
(293,403,o),
(338,385,o),
(365,359,o),
(378,329,o),
(378,316,qs),
(378,292,o),
(360,292,qs),
(126,288,l)
);
},
{
closed = 1;
nodes = (
(157,229,o),
(200,229,o),
(250,230,o),
(294,230,o),
(326,230,o),
(330,230,qs),
(357,230,o),
(396,231,o),
(423,233,o),
(440,237,o),
(447,241,qs),
(462,249,o),
(474,277,o),
(474,297,qs),
(474,320,o),
(453,382,o),
(405,439,o),
(324,478,o),
(264,478,qs),
(211,478,o),
(126,444,o),
(64,379,o),
(31,286,o),
(31,227,qs),
(31,171,o),
(62,82,o),
(122,20,o),
(208,-14,o),
(263,-14,qs),
(325,-14,o),
(405,23,o),
(452,74,o),
(470,127,o),
(470,143,qs),
(470,168,o),
(448,183,o),
(429,183,qs),
(412,183,o),
(390,162,o),
(384,146,qs),
(379,133,o),
(362,103,o),
(335,78,o),
(296,62,o),
(269,62,qs),
(225,62,o),
(169,90,o),
(136,135,o),
(124,191,o),
(124,218,qs),
(124,220,o),
(124,227,o),
(125,229,q),
(127,229,o)
);
},
{
closed = 1;
nodes = (
(231,521,o),
(256,521,qs),
(267,521,o),
(291,527,o),
(310,543,o),
(323,570,o),
(323,591,qs),
(323,618,o),
(287,652,o),
(263,652,qs),
(245,652,o),
(220,639,o),
(204,620,o),
(197,597,o),
(197,587,qs),
(197,555,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 6 2 6 3 2 104 0 7 0 8 5 7 8 91 9 1 0 10 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 6 2 6 3 2 104 0 7 0 8 5 7 8 91 0 5 0 1 0 5 1 91 9 1 0 10 1 6 3 0 6 91 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
13 13 1 0 81 79 73 71 13 66 13 58 48 46 38 36 30 28 22 20 8 6 0 12 1 12 11 15
CALL[ ]	/* CallFunction */";
};
width = 507;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (30,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (187,4);
ref = dotaccent;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 6 2 6 3 2 104 0 7 0 8 5 7 8 91 9 1 0 10 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 6 2 6 3 2 104 0 7 0 8 5 7 8 91 0 5 0 1 0 5 1 91 9 1 0 10 1 6 3 0 6 91 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
14 14 2 1 76 74 70 68 14 63 14 55 49 47 39 37 31 29 23 21 9 7 1 13 2 13 11 26
CALL[ ]	/* CallFunction */";
};
width = 491;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(90,317,o),
(113,372,o),
(152,417,o),
(207,445,o),
(245,445,qs),
(282,445,o),
(335,418,o),
(369,378,o),
(385,331,o),
(385,311,qs),
(385,293,o),
(368,293,qs),
(85,289,l)
);
},
{
closed = 1;
nodes = (
(143,259,o),
(194,260,o),
(240,260,o),
(252,260,qs),
(292,260,o),
(367,260,o),
(393,261,qs),
(411,262,o),
(428,288,o),
(428,304,qs),
(428,324,o),
(407,383,o),
(364,438,o),
(296,477,o),
(248,477,qs),
(203,477,o),
(125,440,o),
(67,374,o),
(34,281,o),
(34,226,qs),
(34,176,o),
(61,89,o),
(113,25,o),
(192,-11,o),
(245,-11,qs),
(287,-11,o),
(359,21,o),
(412,76,o),
(442,148,o),
(442,187,qs),
(442,205,o),
(425,205,qs),
(408,205,o),
(408,187,qs),
(408,155,o),
(387,95,o),
(346,49,o),
(284,21,o),
(243,21,qs),
(198,21,o),
(135,56,o),
(96,112,o),
(79,182,o),
(79,218,qs),
(79,227,o),
(80,248,o),
(81,259,q),
(95,259,o)
);
},
{
closed = 1;
nodes = (
(230,538,o),
(244,538,qs),
(258,538,o),
(285,557,o),
(285,584,qs),
(285,601,o),
(265,621,o),
(251,621,qs),
(240,621,o),
(225,612,o),
(215,599,o),
(210,585,o),
(210,580,qs),
(210,562,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 6 2 6 3 2 104 0 7 0 8 5 7 8 91 9 1 0 10 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 6 2 6 3 2 104 0 7 0 8 5 7 8 91 0 5 0 1 0 5 1 91 9 1 0 10 1 6 3 0 6 91 0 2 2 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
13 13 1 0 73 71 67 65 13 60 13 52 46 44 36 34 29 27 22 20 8 6 0 12 1 12 11 15
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = edotaccent;
unicode = 279;
},
{
glyphname = egrave;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(214,580,o),
(266,534,o),
(317,500,o),
(331,500,qs),
(342,500,o),
(368,511,o),
(368,522,qs),
(368,525,o),
(344,578,o),
(308,639,o),
(265,688,o),
(246,688,qs),
(214,687,o),
(176,659,o),
(176,640,qs),
(176,627,o)
);
},
{
closed = 1;
nodes = (
(129,309,o),
(148,350,o),
(183,383,o),
(231,403,o),
(262,403,qs),
(293,403,o),
(338,385,o),
(365,359,o),
(378,329,o),
(378,316,qs),
(378,292,o),
(360,292,qs),
(126,288,l)
);
},
{
closed = 1;
nodes = (
(157,229,o),
(200,229,o),
(250,230,o),
(294,230,o),
(326,230,o),
(330,230,qs),
(357,230,o),
(396,231,o),
(423,233,o),
(440,237,o),
(447,241,qs),
(462,249,o),
(474,277,o),
(474,297,qs),
(474,320,o),
(453,382,o),
(405,439,o),
(324,478,o),
(264,478,qs),
(211,478,o),
(126,444,o),
(64,379,o),
(31,286,o),
(31,227,qs),
(31,171,o),
(62,82,o),
(122,20,o),
(208,-14,o),
(263,-14,qs),
(325,-14,o),
(405,23,o),
(452,74,o),
(470,127,o),
(470,143,qs),
(470,168,o),
(448,183,o),
(429,183,qs),
(412,183,o),
(390,162,o),
(384,146,qs),
(379,133,o),
(362,103,o),
(335,78,o),
(296,62,o),
(269,62,qs),
(225,62,o),
(169,90,o),
(136,135,o),
(124,191,o),
(124,218,qs),
(124,220,o),
(124,227,o),
(125,229,q),
(127,229,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 0 1 0 106 0 1 7 1 106 0 5 8 4 8 5 4 104 9 1 2 10 1 8 5 2 8 91 0 3 3 7 83 0 7 7 23 67 0 4 4 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 0 1 0 106 0 1 7 1 106 0 5 8 4 8 5 4 104 0 7 0 3 2 7 3 92 9 1 2 10 1 8 5 2 8 91 0 4 4 6 83 0 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
29 29 17 16 29 82 29 74 64 62 54 52 46 44 38 36 24 22 16 28 17 28 38 34 11 17
CALL[ ]	/* CallFunction */";
};
width = 507;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(215,578,o),
(260,536,o),
(305,504,o),
(316,504,qs),
(324,504,o),
(341,512,o),
(341,522,qs),
(341,524,o),
(330,548,o),
(311,581,o),
(288,618,o),
(263,649,o),
(239,670,o),
(230,670,qs),
(207,670,o),
(181,649,o),
(181,632,qs),
(181,621,o)
);
},
{
closed = 1;
nodes = (
(115,320,o),
(137,361,o),
(173,394,o),
(223,415,o),
(254,415,qs),
(286,415,o),
(334,394,o),
(365,363,o),
(381,326,o),
(381,311,qs),
(381,303,o),
(364,303,qs),
(111,299,l)
);
},
{
closed = 1;
nodes = (
(158,239,o),
(200,240,o),
(238,240,o),
(248,240,qs),
(296,240,o),
(381,241,o),
(412,241,qs),
(432,241,o),
(454,281,o),
(454,304,qs),
(454,324,o),
(434,383,o),
(388,438,o),
(312,477,o),
(257,477,qs),
(206,477,o),
(122,442,o),
(62,378,o),
(30,284,o),
(30,226,qs),
(30,173,o),
(57,86,o),
(111,22,o),
(190,-13,o),
(242,-13,qs),
(306,-13,o),
(392,19,o),
(442,71,o),
(463,138,o),
(463,173,qs),
(463,188,o),
(445,205,o),
(433,205,qs),
(412,205,o),
(399,181,o),
(399,173,qs),
(399,155,o),
(384,112,o),
(351,75,o),
(297,51,o),
(258,51,qs),
(221,51,o),
(164,80,o),
(125,128,o),
(105,188,o),
(105,218,qs),
(105,223,o),
(106,234,o),
(107,239,q),
(119,239,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 0 1 0 106 0 1 7 1 106 0 5 8 4 8 5 4 104 9 1 2 10 1 8 5 2 8 91 0 3 3 7 83 0 7 7 23 67 0 4 4 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 0 1 0 106 0 1 7 1 106 0 5 8 4 8 5 4 104 0 7 0 3 2 7 3 92 9 1 2 10 1 8 5 2 8 91 0 4 4 6 83 0 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
31 31 19 18 31 80 31 72 66 64 56 54 48 46 40 38 26 24 18 30 19 30 40 34 11 17
CALL[ ]	/* CallFunction */";
};
width = 491;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(90,317,o),
(113,372,o),
(152,417,o),
(207,445,o),
(245,445,qs),
(282,445,o),
(335,418,o),
(369,378,o),
(385,331,o),
(385,311,qs),
(385,293,o),
(368,293,qs),
(85,289,l)
);
},
{
closed = 1;
nodes = (
(143,259,o),
(194,260,o),
(240,260,o),
(252,260,qs),
(292,260,o),
(367,260,o),
(393,261,qs),
(411,262,o),
(428,288,o),
(428,304,qs),
(428,324,o),
(407,383,o),
(364,438,o),
(296,477,o),
(248,477,qs),
(203,477,o),
(125,440,o),
(67,374,o),
(34,281,o),
(34,226,qs),
(34,176,o),
(61,89,o),
(113,25,o),
(192,-11,o),
(245,-11,qs),
(287,-11,o),
(359,21,o),
(412,76,o),
(442,148,o),
(442,187,qs),
(442,205,o),
(425,205,qs),
(408,205,o),
(408,187,qs),
(408,155,o),
(387,95,o),
(346,49,o),
(284,21,o),
(243,21,qs),
(198,21,o),
(135,56,o),
(96,112,o),
(79,182,o),
(79,218,qs),
(79,227,o),
(80,248,o),
(81,259,q),
(95,259,o)
);
},
{
closed = 1;
nodes = (
(216,574,o),
(252,538,o),
(287,510,o),
(294,510,qs),
(302,510,o),
(302,521,qs),
(302,530,o),
(278,570,o),
(246,610,o),
(214,640,o),
(207,640,qs),
(199,640,o),
(188,632,o),
(188,618,qs),
(188,610,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 7 8 7 106 0 8 5 8 106 0 3 6 2 6 3 2 104 9 1 0 10 1 6 3 0 6 92 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 7 8 7 106 0 8 5 8 106 0 3 6 2 6 3 2 104 0 5 0 1 0 5 1 91 9 1 0 10 1 6 3 0 6 92 0 2 2 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
13 13 1 0 72 70 65 63 13 60 13 52 46 44 36 34 29 27 22 20 8 6 0 12 1 12 11 15
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = egrave;
unicode = 232;
},
{
glyphname = emacron;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(129,309,o),
(148,350,o),
(183,383,o),
(231,403,o),
(262,403,qs),
(293,403,o),
(338,385,o),
(365,359,o),
(378,329,o),
(378,316,qs),
(378,292,o),
(360,292,qs),
(126,288,l)
);
},
{
closed = 1;
nodes = (
(157,229,o),
(200,229,o),
(250,230,o),
(294,230,o),
(326,230,o),
(330,230,qs),
(357,230,o),
(396,231,o),
(423,233,o),
(440,237,o),
(447,241,qs),
(462,249,o),
(474,277,o),
(474,297,qs),
(474,320,o),
(453,382,o),
(405,439,o),
(324,478,o),
(264,478,qs),
(211,478,o),
(126,444,o),
(64,379,o),
(31,286,o),
(31,227,qs),
(31,171,o),
(62,82,o),
(122,20,o),
(208,-14,o),
(263,-14,qs),
(325,-14,o),
(405,23,o),
(452,74,o),
(470,127,o),
(470,143,qs),
(470,168,o),
(448,183,o),
(429,183,qs),
(412,183,o),
(390,162,o),
(384,146,qs),
(379,133,o),
(362,103,o),
(335,78,o),
(296,62,o),
(269,62,qs),
(225,62,o),
(169,90,o),
(136,135,o),
(124,191,o),
(124,218,qs),
(124,220,o),
(124,227,o),
(125,229,q),
(127,229,o)
);
},
{
closed = 1;
nodes = (
(309,640,o),
(267,640,qs),
(254,640,o),
(219,641,o),
(183,641,o),
(153,642,o),
(146,642,qs),
(129,642,o),
(113,617,o),
(113,603,qs),
(113,589,o),
(132,563,o),
(146,563,qs),
(164,563,o),
(228,563,o),
(300,564,o),
(367,564,o),
(387,564,qs),
(398,564,o),
(412,573,o),
(420,586,o),
(423,601,o),
(423,606,qs),
(423,621,o),
(406,643,o),
(395,643,qs),
(371,643,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 3 6 2 6 3 2 104 11 1 7 0 8 5 7 8 91 9 1 0 10 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 3 6 2 6 3 2 104 11 1 7 0 8 5 7 8 91 0 5 0 1 0 5 1 91 9 1 0 10 1 6 3 0 6 91 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
68 67 13 13 1 0 81 74 67 93 68 85 13 66 13 58 48 46 38 36 30 28 22 20 8 6 0 12 1 12 12 15
CALL[ ]	/* CallFunction */";
};
width = 507;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (30,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (106,45);
ref = macron;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 3 6 2 6 3 2 104 11 1 7 0 8 5 7 8 91 9 1 0 10 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 3 6 2 6 3 2 104 11 1 7 0 8 5 7 8 91 0 5 0 1 0 5 1 91 9 1 0 10 1 6 3 0 6 91 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
65 64 14 14 2 1 76 69 64 88 65 80 14 63 14 55 49 47 39 37 31 29 23 21 9 7 1 13 2 13 12 26
CALL[ ]	/* CallFunction */";
};
width = 491;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(90,317,o),
(113,372,o),
(152,417,o),
(207,445,o),
(245,445,qs),
(282,445,o),
(335,418,o),
(369,378,o),
(385,331,o),
(385,311,qs),
(385,293,o),
(368,293,qs),
(85,289,l)
);
},
{
closed = 1;
nodes = (
(143,259,o),
(194,260,o),
(240,260,o),
(252,260,qs),
(292,260,o),
(367,260,o),
(393,261,qs),
(411,262,o),
(428,288,o),
(428,304,qs),
(428,324,o),
(407,383,o),
(364,438,o),
(296,477,o),
(248,477,qs),
(203,477,o),
(125,440,o),
(67,374,o),
(34,281,o),
(34,226,qs),
(34,176,o),
(61,89,o),
(113,25,o),
(192,-11,o),
(245,-11,qs),
(287,-11,o),
(359,21,o),
(412,76,o),
(442,148,o),
(442,187,qs),
(442,205,o),
(425,205,qs),
(408,205,o),
(408,187,qs),
(408,155,o),
(387,95,o),
(346,49,o),
(284,21,o),
(243,21,qs),
(198,21,o),
(135,56,o),
(96,112,o),
(79,182,o),
(79,218,qs),
(79,227,o),
(80,248,o),
(81,259,q),
(95,259,o)
);
},
{
closed = 1;
nodes = (
(299,539,o),
(257,539,qs),
(244,539,o),
(209,540,o),
(173,540,o),
(143,541,o),
(136,541,qs),
(128,541,o),
(120,531,o),
(120,526,qs),
(120,521,o),
(129,510,o),
(136,510,qs),
(154,510,o),
(218,510,o),
(290,511,o),
(357,511,o),
(377,511,qs),
(388,511,o),
(396,524,o),
(396,529,qs),
(396,534,o),
(389,542,o),
(385,542,qs),
(361,542,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 3 6 2 6 3 2 104 11 1 7 0 8 5 7 8 91 9 1 0 10 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 3 6 2 6 3 2 104 11 1 7 0 8 5 7 8 91 0 5 0 1 0 5 1 91 9 1 0 10 1 6 3 0 6 91 0 2 2 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
62 61 13 13 1 0 73 66 61 85 62 77 13 60 13 52 46 44 36 34 29 27 22 20 8 6 0 12 1 12 12 15
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = emacron;
unicode = 275;
},
{
glyphname = eogonek;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,229,o),
(200,229,o),
(250,230,o),
(294,230,o),
(326,230,o),
(330,230,qs),
(357,230,o),
(396,231,o),
(423,233,o),
(440,237,o),
(447,241,qs),
(462,249,o),
(474,277,o),
(474,297,qs),
(474,320,o),
(453,382,o),
(405,439,o),
(324,478,o),
(264,478,qs),
(211,478,o),
(126,444,o),
(64,379,o),
(31,286,o),
(31,227,qs),
(31,115,o),
(152,-13,o),
(261,-14,q),
(244,-25,o),
(212,-61,o),
(212,-86,qs),
(212,-105,o),
(232,-133,o),
(263,-152,o),
(302,-161,o),
(322,-161,qs),
(343,-161,o),
(375,-150,o),
(395,-134,o),
(405,-116,o),
(405,-108,qs),
(405,-99,o),
(390,-84,o),
(380,-84,qs),
(372,-84,o),
(363,-92,o),
(352,-101,o),
(335,-108,o),
(320,-108,qs),
(309,-108,o),
(291,-98,o),
(291,-87,qs),
(291,-67,o),
(312,-19,o),
(332,-6,q),
(373,4,o),
(426,42,o),
(458,86,o),
(470,129,o),
(470,143,qs),
(470,168,o),
(448,183,o),
(429,183,qs),
(412,183,o),
(390,162,o),
(384,146,qs),
(379,133,o),
(362,103,o),
(335,78,o),
(296,62,o),
(269,62,qs),
(225,62,o),
(169,90,o),
(136,135,o),
(124,191,o),
(124,218,qs),
(124,220,o),
(124,227,o),
(125,229,q),
(127,229,o)
);
},
{
closed = 1;
nodes = (
(129,309,o),
(148,350,o),
(183,383,o),
(231,403,o),
(262,403,qs),
(293,403,o),
(338,385,o),
(365,359,o),
(378,329,o),
(378,316,qs),
(378,292,o),
(360,292,qs),
(126,288,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 1 7 0 7 1 0 104 0 3 5 2 5 3 2 104 11 1 8 10 1 7 1 8 7 91 0 2 0 4 2 4 87 0 9 9 6 83 0 6 6 23 67 0 0 0 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 1 7 0 7 1 0 104 0 3 5 2 5 3 2 104 0 6 0 9 8 6 9 91 11 1 8 10 1 7 1 8 7 91 0 2 0 4 2 4 87 0 0 0 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
80 79 0 0 87 85 79 91 80 91 0 78 0 70 38 23 38 35 44 38 39 12 22
CALL[ ]	/* CallFunction */";
};
width = 507;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (30,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (155,-16);
ref = ogonek;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 3 6 2 6 3 2 104 0 2 10 10 2 94 0 8 4 7 4 8 7 104 11 1 0 12 1 6 3 0 6 91 0 7 0 9 7 9 87 0 1 1 5 83 0 5 5 23 67 13 1 10 10 4 84 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 3 6 2 6 3 2 104 0 2 10 10 2 94 0 8 4 7 4 8 7 104 0 5 0 1 0 5 1 91 11 1 0 12 1 6 3 0 6 91 0 7 0 9 7 9 87 13 1 10 10 4 84 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 3 6 2 6 3 2 104 0 2 10 6 2 10 102 0 8 4 7 4 8 7 104 0 5 0 1 0 5 1 91 11 1 0 12 1 6 3 0 6 91 0 7 0 9 7 9 87 13 1 10 10 4 84 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
64 64 14 14 2 1 64 93 64 93 86 84 78 76 73 71 14 63 14 55 49 47 39 37 31 29 23 21 9 7 1 13 2 13 14 26
CALL[ ]	/* CallFunction */";
};
width = 491;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(143,259,o),
(194,260,o),
(240,260,o),
(252,260,qs),
(292,260,o),
(367,260,o),
(393,261,qs),
(411,262,o),
(428,288,o),
(428,304,qs),
(428,324,o),
(407,383,o),
(364,438,o),
(296,477,o),
(248,477,qs),
(203,477,o),
(125,440,o),
(67,374,o),
(34,281,o),
(34,226,qs),
(34,178,o),
(58,94,o),
(106,31,o),
(178,-7,o),
(226,-10,q),
(218,-15,o),
(200,-29,o),
(183,-50,o),
(172,-77,o),
(172,-93,qs),
(172,-125,o),
(218,-166,o),
(253,-166,qs),
(271,-166,o),
(299,-153,o),
(320,-136,o),
(331,-119,o),
(331,-115,qs),
(331,-109,o),
(326,-99,o),
(317,-99,qs),
(310,-99,o),
(299,-112,o),
(286,-127,o),
(268,-139,o),
(255,-139,qs),
(243,-139,o),
(228,-129,o),
(219,-114,o),
(216,-98,o),
(216,-92,qs),
(216,-86,o),
(220,-66,o),
(229,-42,o),
(246,-18,o),
(260,-10,q),
(299,-7,o),
(366,27,o),
(414,81,o),
(442,149,o),
(442,187,qs),
(442,205,o),
(425,205,qs),
(408,205,o),
(408,187,qs),
(408,155,o),
(387,95,o),
(346,49,o),
(284,21,o),
(243,21,qs),
(198,21,o),
(135,56,o),
(96,112,o),
(79,182,o),
(79,218,qs),
(79,227,o),
(80,248,o),
(81,259,q),
(95,259,o)
);
},
{
closed = 1;
nodes = (
(90,317,o),
(113,372,o),
(152,417,o),
(207,445,o),
(245,445,qs),
(282,445,o),
(335,418,o),
(369,378,o),
(385,331,o),
(385,311,qs),
(385,293,o),
(368,293,qs),
(85,289,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 1 7 0 7 1 0 104 0 3 5 2 5 3 2 104 11 1 8 10 1 7 1 8 7 91 0 2 0 4 2 4 87 0 9 9 6 83 0 6 6 23 67 0 0 0 5 83 0 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 1 7 0 7 1 0 104 0 3 5 2 5 3 2 104 0 6 0 9 8 6 9 91 11 1 8 10 1 7 1 8 7 91 0 2 0 4 2 4 87 0 0 0 5 83 0 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
80 79 0 0 87 85 79 91 80 91 0 78 0 70 40 23 38 35 47 37 39 12 22
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = eogonek;
unicode = 281;
},
{
glyphname = etilde;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(129,309,o),
(148,350,o),
(183,383,o),
(231,403,o),
(262,403,qs),
(293,403,o),
(338,385,o),
(365,359,o),
(378,329,o),
(378,316,qs),
(378,292,o),
(360,292,qs),
(126,288,l)
);
},
{
closed = 1;
nodes = (
(157,229,o),
(200,229,o),
(250,230,o),
(294,230,o),
(326,230,o),
(330,230,qs),
(357,230,o),
(396,231,o),
(423,233,o),
(440,237,o),
(447,241,qs),
(462,249,o),
(474,277,o),
(474,297,qs),
(474,320,o),
(453,382,o),
(405,439,o),
(324,478,o),
(264,478,qs),
(211,478,o),
(126,444,o),
(64,379,o),
(31,286,o),
(31,227,qs),
(31,171,o),
(62,82,o),
(122,20,o),
(208,-14,o),
(263,-14,qs),
(325,-14,o),
(405,23,o),
(452,74,o),
(470,127,o),
(470,143,qs),
(470,168,o),
(448,183,o),
(429,183,qs),
(412,183,o),
(390,162,o),
(384,146,qs),
(379,133,o),
(362,103,o),
(335,78,o),
(296,62,o),
(269,62,qs),
(225,62,o),
(169,90,o),
(136,135,o),
(124,191,o),
(124,218,qs),
(124,220,o),
(124,227,o),
(125,229,q),
(127,229,o)
);
},
{
closed = 1;
nodes = (
(96,501,o),
(105,501,qs),
(112,501,o),
(130,509,o),
(150,518,o),
(174,526,o),
(189,526,qs),
(203,526,o),
(235,518,o),
(270,509,o),
(307,502,o),
(326,502,qs),
(337,502,o),
(375,509,o),
(411,526,o),
(437,555,o),
(437,577,qs),
(437,593,o),
(420,612,o),
(415,612,qs),
(408,612,o),
(385,599,qs),
(371,591,o),
(339,582,o),
(325,582,qs),
(310,582,o),
(274,591,o),
(238,601,o),
(203,610,o),
(188,610,qs),
(151,610,o),
(120,592,qs),
(106,584,o),
(86,559,o),
(86,537,qs),
(86,522,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 3 6 2 6 3 2 104 9 1 7 0 11 10 7 11 91 0 8 12 1 10 5 8 10 91 13 1 0 14 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 3 6 2 6 3 2 104 9 1 7 0 11 10 7 11 91 0 8 12 1 10 5 8 10 91 0 5 0 1 0 5 1 91 13 1 0 14 1 6 3 0 6 91 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
13 13 1 0 101 99 96 94 91 89 83 81 78 76 73 71 13 66 13 58 48 46 38 36 30 28 22 20 8 6 0 12 1 12 15 15
CALL[ ]	/* CallFunction */";
};
width = 507;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (30,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (74,2);
ref = tilde;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 3 6 2 6 3 2 104 9 1 7 0 11 10 7 11 91 0 8 12 1 10 5 8 10 91 13 1 0 14 1 6 3 0 6 92 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 3 6 2 6 3 2 104 9 1 7 0 11 10 7 11 91 0 8 12 1 10 5 8 10 91 0 5 0 1 0 5 1 91 13 1 0 14 1 6 3 0 6 92 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
14 14 2 1 98 96 93 91 88 86 80 78 75 73 70 68 14 63 14 55 49 47 39 37 31 29 23 21 9 7 1 13 2 13 15 26
CALL[ ]	/* CallFunction */";
};
width = 491;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(90,317,o),
(113,372,o),
(152,417,o),
(207,445,o),
(245,445,qs),
(282,445,o),
(335,418,o),
(369,378,o),
(385,331,o),
(385,311,qs),
(385,293,o),
(368,293,qs),
(85,289,l)
);
},
{
closed = 1;
nodes = (
(143,259,o),
(194,260,o),
(240,260,o),
(252,260,qs),
(292,260,o),
(367,260,o),
(393,261,qs),
(411,262,o),
(428,288,o),
(428,304,qs),
(428,324,o),
(407,383,o),
(364,438,o),
(296,477,o),
(248,477,qs),
(203,477,o),
(125,440,o),
(67,374,o),
(34,281,o),
(34,226,qs),
(34,176,o),
(61,89,o),
(113,25,o),
(192,-11,o),
(245,-11,qs),
(287,-11,o),
(359,21,o),
(412,76,o),
(442,148,o),
(442,187,qs),
(442,205,o),
(425,205,qs),
(408,205,o),
(408,187,qs),
(408,155,o),
(387,95,o),
(346,49,o),
(284,21,o),
(243,21,qs),
(198,21,o),
(135,56,o),
(96,112,o),
(79,182,o),
(79,218,qs),
(79,227,o),
(80,248,o),
(81,259,q),
(95,259,o)
);
},
{
closed = 1;
nodes = (
(90,519,o),
(102,519,qs),
(109,519,o),
(126,530,o),
(144,543,o),
(161,554,o),
(168,554,qs),
(185,554,o),
(220,540,o),
(257,524,o),
(296,510,o),
(317,510,qs),
(324,510,o),
(356,516,o),
(389,528,o),
(414,547,o),
(414,560,qs),
(414,572,o),
(402,583,o),
(394,583,qs),
(386,583,o),
(367,571,o),
(347,558,o),
(326,546,o),
(317,546,qs),
(298,546,o),
(259,559,o),
(220,576,o),
(182,589,o),
(163,589,qs),
(154,589,o),
(127,581,o),
(101,569,o),
(83,553,o),
(83,544,qs),
(83,535,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
0 9 7 11 7 9 11 104 0 12 8 10 8 12 10 104 0 3 6 2 6 3 2 104 0 7 0 11 8 7 11 91 0 8 0 10 5 8 10 91 13 1 0 14 1 6 3 0 6 92 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 69 values pushed */
0 9 7 11 7 9 11 104 0 12 8 10 8 12 10 104 0 3 6 2 6 3 2 104 0 7 0 11 8 7 11 91 0 8 0 10 5 8 10 91 0 5 0 1 0 5 1 91 13 1 0 14 1 6 3 0 6 92 0 2 2 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
13 13 1 0 95 93 90 88 85 83 77 75 72 70 67 65 13 60 13 52 46 44 36 34 29 27 22 20 8 6 0 12 1 12 15 15
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = etilde;
unicode = 7869;
},
{
glyphname = schwa;
kernRight = c_p;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(359,136,o),
(335,106,o),
(301,83,o),
(260,69,o),
(238,69,qs),
(216,69,o),
(175,82,o),
(144,101,o),
(125,123,o),
(125,133,qs),
(125,149,o),
(142,149,qs),
(365,153,l)
);
},
{
closed = 1;
nodes = (
(292,231,o),
(232,230,o),
(162,230,o),
(119,230,qs),
(86,230,o),
(55,228,o),
(49,221,qs),
(38,210,o),
(31,187,o),
(31,164,qs),
(31,143,o),
(49,83,o),
(95,28,o),
(177,-11,o),
(242,-11,qs),
(301,-11,o),
(389,26,o),
(447,92,o),
(476,184,o),
(476,240,qs),
(476,290,o),
(450,377,o),
(394,441,o),
(306,477,o),
(245,477,qs),
(187,477,o),
(103,450,o),
(49,408,o),
(23,359,o),
(23,337,qs),
(23,319,o),
(38,292,o),
(65,292,qs),
(90,292,o),
(106,316,o),
(108,326,qs),
(109,332,o),
(121,356,o),
(147,380,o),
(191,397,o),
(224,397,qs),
(267,397,o),
(326,375,o),
(363,340,o),
(380,295,o),
(380,272,qs),
(380,263,o),
(379,242,o),
(378,231,q),
(348,231,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 2 6 2 3 6 104 8 1 6 7 1 0 1 6 0 91 0 2 2 4 83 0 4 4 23 67 0 1 1 5 83 0 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 2 6 2 3 6 104 0 4 0 2 3 4 2 91 8 1 6 7 1 0 1 6 0 91 0 1 1 5 83 0 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
13 13 1 0 13 62 13 56 48 46 38 36 30 28 22 20 8 6 0 12 1 12 9 15
CALL[ ]	/* CallFunction */";
};
width = 503;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(365,141,o),
(341,102,o),
(305,70,o),
(258,51,o),
(230,51,qs),
(202,51,o),
(156,69,o),
(124,96,o),
(106,127,o),
(106,141,qs),
(106,158,o),
(123,158,qs),
(371,162,l)
);
},
{
closed = 1;
nodes = (
(316,222,o),
(255,221,o),
(187,221,o),
(157,221,qs),
(156,221,o),
(138,221,o),
(111,221,o),
(81,220,o),
(68,220,qs),
(50,219,o),
(33,183,o),
(33,163,qs),
(33,142,o),
(52,83,o),
(97,28,o),
(174,-11,o),
(231,-11,qs),
(284,-11,o),
(368,26,o),
(426,92,o),
(457,184,o),
(457,240,qs),
(457,290,o),
(431,377,o),
(376,441,o),
(292,477,o),
(234,477,qs),
(185,477,o),
(107,451,o),
(53,410,o),
(25,359,o),
(25,333,qs),
(25,319,o),
(37,298,o),
(57,298,qs),
(76,298,o),
(87,316,o),
(89,326,qs),
(93,344,o),
(108,376,o),
(136,401,o),
(181,415,o),
(215,415,qs),
(262,415,o),
(326,388,o),
(365,345,o),
(382,291,o),
(382,263,qs),
(382,254,o),
(381,233,o),
(380,222,q),
(366,222,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 2 6 2 3 6 104 8 1 6 7 1 0 1 6 0 91 0 2 2 4 83 0 4 4 23 67 0 1 1 5 83 0 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 2 6 2 3 6 104 0 4 0 2 3 4 2 91 8 1 6 7 1 0 1 6 0 91 0 1 1 5 83 0 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
13 13 1 0 13 64 13 54 48 46 38 36 30 28 22 20 8 6 0 12 1 12 9 15
CALL[ ]	/* CallFunction */";
};
width = 487;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(374,149,o),
(351,94,o),
(312,49,o),
(256,21,o),
(219,21,qs),
(182,21,o),
(129,48,o),
(95,88,o),
(79,135,o),
(79,155,qs),
(79,173,o),
(96,173,qs),
(379,177,l)
);
},
{
closed = 1;
nodes = (
(321,207,o),
(270,206,o),
(224,206,o),
(212,206,qs),
(172,206,o),
(97,206,o),
(71,205,qs),
(53,204,o),
(36,178,o),
(36,162,qs),
(36,142,o),
(57,83,o),
(100,28,o),
(168,-11,o),
(216,-11,qs),
(261,-11,o),
(339,26,o),
(397,92,o),
(430,184,o),
(430,240,qs),
(430,290,o),
(403,377,o),
(351,441,o),
(271,477,o),
(219,477,qs),
(182,477,o),
(113,455,o),
(60,414,o),
(28,359,o),
(28,326,qs),
(28,308,o),
(45,308,qs),
(62,308,o),
(62,326,qs),
(62,350,o),
(86,393,o),
(129,426,o),
(187,445,o),
(221,445,qs),
(266,445,o),
(328,410,o),
(367,354,o),
(385,284,o),
(385,248,qs),
(385,239,o),
(384,218,o),
(383,207,q),
(369,207,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 2 6 2 3 6 104 8 1 6 7 1 0 1 6 0 91 0 2 2 4 83 0 4 4 23 67 0 1 1 5 83 0 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 2 6 2 3 6 104 0 4 0 2 3 4 2 91 8 1 6 7 1 0 1 6 0 91 0 1 1 5 83 0 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
13 13 1 0 13 60 13 52 46 44 36 34 29 27 22 20 8 6 0 12 1 12 9 15
CALL[ ]	/* CallFunction */";
};
width = 464;
}
);
note = schwa;
unicode = 601;
},
{
glyphname = f;
kernLeft = f;
kernRight = f;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(71,74,o),
(58,72,qs),
(53,72,o),
(37,69,o),
(21,61,o),
(9,46,o),
(9,33,qs),
(9,21,o),
(20,7,o),
(37,1,o),
(54,0,o),
(60,0,qs),
(66,0,o),
(89,1,o),
(119,2,o),
(150,3,o),
(164,3,qs),
(175,3,o),
(206,2,o),
(237,2,o),
(265,1,o),
(273,1,qs),
(302,1,o),
(333,16,o),
(333,41,qs),
(333,55,o),
(324,70,o),
(310,77,o),
(294,78,o),
(287,78,qs),
(178,78,l),
(178,392,ls),
(178,397,o),
(184,403,o),
(196,403,qs),
(200,403,o),
(219,402,o),
(239,402,o),
(257,401,o),
(262,401,qs),
(266,401,o),
(282,402,o),
(297,410,o),
(308,426,o),
(308,441,qs),
(308,455,o),
(298,471,o),
(284,478,o),
(269,479,o),
(264,479,qs),
(186,479,ls),
(178,479,o),
(178,484,qs),
(178,503,o),
(179,557,o),
(187,616,o),
(204,675,o),
(236,722,o),
(285,751,o),
(321,751,qs),
(341,751,o),
(365,742,o),
(365,736,qs),
(365,731,o),
(355,721,o),
(350,716,qs),
(340,705,o),
(335,683,o),
(335,677,qs),
(335,657,o),
(366,627,o),
(390,627,qs),
(421,627,o),
(456,677,o),
(456,714,qs),
(456,730,o),
(446,769,o),
(417,802,o),
(363,825,o),
(320,825,qs),
(265,825,o),
(188,788,o),
(136,729,o),
(106,656,o),
(90,581,o),
(85,514,o),
(84,491,qs),
(84,486,o),
(80,479,o),
(72,479,qs),
(59,479,ls),
(42,479,o),
(10,469,o),
(10,443,qs),
(10,418,o),
(39,403,o),
(56,403,qs),
(72,403,ls),
(80,403,o),
(85,401,o),
(85,398,qs),
(85,372,o),
(86,309,o),
(87,254,o),
(87,215,o),
(87,215,q),
(87,202,o),
(86,168,o),
(84,133,o),
(82,103,o),
(81,93,qs),
(79,79,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 7 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 3 4 1 4 3 1 104 0 4 4 2 83 0 2 2 12 67 6 1 0 0 1 83 5 1 1 1 23 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 3 4 1 4 3 1 104 5 1 1 6 1 0 7 1 0 91 0 4 4 2 83 0 2 2 12 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 3 4 1 4 3 1 104 0 9 7 8 7 9 96 5 1 1 6 1 0 7 1 0 91 0 4 4 2 83 0 2 2 14 67 0 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
109 108 213 51 134 71 42 38 40 52 60 10 24
CALL[ ]	/* CallFunction */";
};
width = 333;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(74,56,o),
(50,54,qs),
(45,54,o),
(30,51,o),
(17,45,o),
(8,35,o),
(8,26,qs),
(8,16,o),
(17,6,o),
(30,1,o),
(45,0,o),
(52,0,qs),
(58,0,o),
(81,1,o),
(111,2,o),
(142,3,o),
(156,3,qs),
(167,3,o),
(198,2,o),
(229,2,o),
(257,1,o),
(266,1,qs),
(292,1,o),
(318,13,o),
(318,30,qs),
(318,51,o),
(294,60,o),
(279,60,qs),
(170,60,l),
(170,404,ls),
(170,409,o),
(176,415,o),
(188,415,qs),
(192,415,o),
(211,414,o),
(231,414,o),
(249,413,o),
(254,413,qs),
(260,413,o),
(273,414,o),
(285,420,o),
(293,433,o),
(293,445,qs),
(293,464,o),
(266,473,o),
(256,473,qs),
(178,473,ls),
(170,473,o),
(170,484,qs),
(170,507,o),
(171,568,o),
(180,631,o),
(198,692,o),
(232,740,o),
(285,769,o),
(323,769,qs),
(348,769,o),
(378,748,o),
(378,742,qs),
(378,735,o),
(369,727,o),
(363,721,qs),
(355,714,o),
(348,694,o),
(348,686,qs),
(348,670,o),
(372,642,o),
(396,642,qs),
(414,642,o),
(450,676,o),
(450,718,qs),
(450,732,o),
(438,769,o),
(410,802,o),
(360,825,o),
(323,825,qs),
(270,825,o),
(197,790,o),
(147,733,o),
(118,661,o),
(103,587,o),
(98,517,o),
(97,491,qs),
(97,484,o),
(93,473,o),
(85,473,qs),
(51,473,ls),
(33,473,o),
(9,465,o),
(9,445,qs),
(9,428,o),
(31,415,o),
(48,415,qs),
(85,415,ls),
(93,415,o),
(98,412,o),
(98,409,qs),
(98,361,o),
(100,265,o),
(100,217,qs),
(100,145,o),
(94,75,qs),
(93,64,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 3 4 1 4 3 1 104 0 4 4 2 83 0 2 2 12 67 6 1 0 0 1 83 5 1 1 1 23 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 3 4 1 4 3 1 104 5 1 1 6 1 0 7 1 0 91 0 4 4 2 83 0 2 2 12 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 3 4 1 4 3 1 104 0 9 7 8 7 9 96 5 1 1 6 1 0 7 1 0 91 0 4 4 2 83 0 2 2 12 67 0 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 3 4 1 4 3 1 104 0 9 7 8 7 9 96 5 1 1 6 1 0 7 1 0 91 0 4 4 2 83 0 2 2 14 67 0 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
100 99 212 35 118 55 42 38 40 52 55 10 24
CALL[ ]	/* CallFunction */";
};
width = 318;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(79,27,o),
(39,24,qs),
(28,23,o),
(7,19,o),
(7,11,qs),
(7,3,o),
(27,0,o),
(41,0,qs),
(47,0,o),
(70,1,o),
(100,2,o),
(131,3,o),
(145,3,qs),
(156,3,o),
(187,2,o),
(218,2,o),
(246,1,o),
(255,1,qs),
(281,1,o),
(297,8,o),
(297,15,qs),
(297,30,o),
(268,30,qs),
(159,30,l),
(159,424,ls),
(159,429,o),
(165,435,o),
(177,435,qs),
(181,435,o),
(200,434,o),
(220,434,o),
(238,433,o),
(243,433,qs),
(254,433,o),
(272,439,o),
(272,447,qs),
(272,455,o),
(255,463,o),
(245,463,qs),
(167,463,ls),
(163,463,o),
(159,471,o),
(159,484,qs),
(159,510,o),
(160,577,o),
(169,647,o),
(188,714,o),
(223,767,o),
(277,799,o),
(317,799,qs),
(361,799,o),
(397,766,o),
(397,750,qs),
(397,743,o),
(390,735,o),
(382,729,qs),
(367,718,o),
(367,702,qs),
(367,685,o),
(386,667,o),
(400,667,qs),
(418,667,o),
(439,696,o),
(439,718,qs),
(439,732,o),
(427,769,o),
(399,802,o),
(349,825,o),
(312,825,qs),
(266,825,o),
(203,790,o),
(160,733,o),
(135,661,o),
(122,587,o),
(117,517,o),
(116,491,qs),
(116,480,o),
(112,463,o),
(104,463,qs),
(40,463,ls),
(22,463,o),
(8,460,o),
(8,452,qs),
(8,446,o),
(20,435,o),
(37,435,qs),
(104,435,ls),
(112,435,o),
(117,423,o),
(117,409,qs),
(117,361,o),
(119,265,o),
(119,217,qs),
(119,130,o),
(113,45,qs),
(112,34,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 7 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 4 1 4 3 1 104 0 4 4 2 83 0 2 2 12 67 6 1 0 0 1 83 5 1 1 1 23 67 0 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 4 1 4 3 1 104 5 1 1 6 1 0 7 1 0 91 0 4 4 2 83 0 2 2 12 67 0 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 3 4 1 4 3 1 104 5 1 1 6 1 0 7 1 0 91 0 4 4 2 83 0 2 2 14 67 0 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
195 35 116 56 41 38 40 52 55 9 24
CALL[ ]	/* CallFunction */";
};
width = 297;
}
);
note = f;
unicode = 102;
},
{
glyphname = g;
kernLeft = g;
kernRight = g;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(126,435,o),
(77,391,o),
(53,330,o),
(53,295,qs),
(53,256,o),
(84,186,o),
(116,165,q),
(85,151,o),
(54,118,o),
(54,89,qs),
(54,50,o),
(103,14,o),
(142,7,q),
(84,-4,o),
(29,-64,o),
(29,-109,qs),
(29,-145,o),
(64,-198,o),
(130,-233,o),
(223,-250,o),
(281,-250,qs),
(343,-250,o),
(448,-228,o),
(525,-184,o),
(569,-119,o),
(569,-76,qs),
(569,-39,o),
(538,12,o),
(488,45,o),
(425,64,o),
(361,73,o),
(301,75,o),
(280,75,qs),
(210,76,o),
(147,89,o),
(147,100,qs),
(147,108,o),
(178,133,o),
(197,139,q),
(208,137,o),
(221,136,o),
(231,136,qs),
(334,136,o),
(444,226,o),
(444,301,qs),
(444,341,o),
(409,409,o),
(372,431,q),
(384,438,o),
(410,446,o),
(435,450,o),
(456,453,o),
(462,455,qs),
(470,457,o),
(480,469,o),
(480,483,qs),
(480,508,o),
(451,528,o),
(433,528,qs),
(402,528,o),
(337,484,o),
(314,453,q),
(300,456,o),
(268,460,o),
(250,460,qs),
(200,460,o)
);
},
{
closed = 1;
nodes = (
(398,-12,o),
(446,-32,o),
(475,-66,o),
(475,-91,qs),
(475,-113,o),
(449,-144,o),
(403,-165,o),
(339,-175,o),
(301,-175,qs),
(269,-175,o),
(205,-167,o),
(153,-149,o),
(120,-121,o),
(120,-100,qs),
(120,-79,o),
(153,-44,o),
(206,-18,o),
(272,-3,o),
(305,-3,qs),
(337,-3,o)
);
},
{
closed = 1;
nodes = (
(350,336,o),
(350,301,qs),
(350,263,o),
(297,209,o),
(249,209,qs),
(225,209,o),
(187,224,o),
(161,249,o),
(147,280,o),
(147,296,qs),
(147,337,o),
(200,386,o),
(250,386,qs),
(302,386,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
17 3 2 7 0 58 26 2 2 8 52 1 5 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 106 0 8 0 2 3 8 2 91 11 1 7 7 0 83 9 1 0 0 23 67 0 3 3 5 83 10 1 5 5 16 67 0 6 6 4 83 0 4 4 25 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 1 106 9 1 0 11 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 83 10 1 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
87 86 67 66 1 0 95 93 86 99 87 99 77 75 66 85 67 85 45 43 34 31 24 22 7 5 0 65 1 65 12 15
CALL[ ]	/* CallFunction */";
};
width = 515;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(131,435,o),
(84,390,o),
(58,330,o),
(58,294,qs),
(58,256,o),
(89,186,o),
(121,165,q),
(90,151,o),
(59,118,o),
(59,89,qs),
(59,50,o),
(108,14,o),
(147,7,q),
(31,-16,o),
(31,-102,qs),
(31,-139,o),
(70,-195,o),
(136,-232,o),
(224,-250,o),
(273,-250,qs),
(335,-250,o),
(438,-227,o),
(512,-186,o),
(553,-127,o),
(553,-91,qs),
(553,-39,o),
(501,20,o),
(422,49,o),
(328,57,o),
(285,57,qs),
(207,58,o),
(131,75,o),
(131,95,qs),
(131,113,o),
(159,135,o),
(181,143,q),
(194,139,o),
(217,137,o),
(231,137,qs),
(278,137,o),
(351,162,o),
(402,206,o),
(428,266,o),
(428,301,qs),
(428,340,o),
(394,407,o),
(359,429,q),
(379,449,o),
(427,467,o),
(449,469,qs),
(460,471,o),
(473,487,o),
(473,498,qs),
(473,515,o),
(448,530,o),
(435,530,qs),
(421,530,o),
(389,517,o),
(357,495,o),
(328,465,o),
(316,449,q),
(281,460,o),
(240,460,qs),
(198,460,o)
);
},
{
closed = 1;
nodes = (
(335,-2,o),
(375,-8,o),
(419,-20,o),
(456,-41,o),
(480,-75,o),
(480,-99,qs),
(480,-137,o),
(383,-189,o),
(290,-189,qs),
(257,-189,o),
(191,-179,o),
(137,-158,o),
(104,-127,o),
(104,-106,qs),
(104,-78,o),
(141,-39,o),
(199,-13,o),
(267,-1,o),
(299,-1,qs),
(304,-1,o)
);
},
{
closed = 1;
nodes = (
(355,346,o),
(355,301,qs),
(355,254,o),
(294,197,o),
(240,197,qs),
(188,197,o),
(131,253,o),
(131,292,qs),
(131,340,o),
(193,400,o),
(247,400,qs),
(298,400,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
16 2 2 7 0 56 27 2 2 8 50 1 5 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 106 0 8 0 2 3 8 2 91 11 1 7 7 0 83 9 1 0 0 23 67 0 3 3 5 83 10 1 5 5 16 67 0 6 6 4 83 0 4 4 25 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 9 1 0 11 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 3 3 5 83 10 1 5 5 16 67 0 6 6 4 83 0 4 4 25 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 1 106 9 1 0 11 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 83 10 1 5 5 16 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
85 84 65 64 1 0 91 89 84 95 85 95 75 73 64 83 65 82 44 42 34 32 25 23 8 6 0 63 1 63 12 15
CALL[ ]	/* CallFunction */";
};
width = 495;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(138,435,o),
(91,390,o),
(65,330,o),
(65,294,qs),
(65,256,o),
(96,186,o),
(128,165,q),
(97,151,o),
(66,118,o),
(66,89,qs),
(66,50,o),
(115,14,o),
(154,7,q),
(38,-16,o),
(38,-102,qs),
(38,-139,o),
(77,-195,o),
(143,-232,o),
(231,-250,o),
(280,-250,qs),
(335,-250,o),
(427,-227,o),
(493,-186,o),
(530,-127,o),
(530,-91,qs),
(530,-49,o),
(484,-3,o),
(414,20,o),
(330,26,o),
(292,27,qs),
(245,28,o),
(176,32,o),
(131,46,o),
(108,72,o),
(108,95,qs),
(108,118,o),
(132,139,o),
(158,150,q),
(175,143,o),
(212,137,o),
(231,137,qs),
(272,137,o),
(337,165,o),
(382,211,o),
(405,270,o),
(405,301,qs),
(405,337,o),
(372,400,o),
(345,422,q),
(364,451,o),
(407,479,o),
(431,486,qs),
(445,491,o),
(464,504,o),
(464,512,qs),
(464,520,o),
(452,530,o),
(442,530,qs),
(427,530,o),
(393,516,o),
(360,491,o),
(329,459,o),
(318,441,q),
(283,460,o),
(247,460,qs),
(205,460,o)
);
},
{
closed = 1;
nodes = (
(366,-4,o),
(434,-23,o),
(487,-63,o),
(487,-99,qs),
(487,-124,o),
(458,-168,o),
(406,-200,o),
(331,-219,o),
(285,-219,qs),
(246,-219,o),
(173,-205,o),
(116,-177,o),
(81,-135,o),
(81,-106,qs),
(81,-78,o),
(115,-39,o),
(174,-13,o),
(252,-1,o),
(297,-1,qs),
(305,-1,o)
);
},
{
closed = 1;
nodes = (
(362,361,o),
(362,301,qs),
(362,238,o),
(291,167,o),
(230,167,qs),
(171,167,o),
(108,232,o),
(108,292,qs),
(108,355,o),
(178,430,o),
(239,430,qs),
(298,430,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
2 1 7 0 16 1 8 7 58 27 2 2 8 52 1 5 3 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 11 1 7 7 0 83 9 1 0 0 23 67 0 3 3 5 83 10 1 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 1 106 9 1 0 11 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 83 10 1 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
87 86 67 66 1 0 93 91 86 97 87 97 77 75 66 85 67 84 46 44 36 33 25 23 8 6 0 65 1 65 12 15
CALL[ ]	/* CallFunction */";
};
width = 467;
}
);
note = g;
unicode = 103;
},
{
glyphname = gbreve;
kernLeft = g;
kernRight = g;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(126,435,o),
(77,391,o),
(53,330,o),
(53,295,qs),
(53,256,o),
(84,186,o),
(116,165,q),
(85,151,o),
(54,118,o),
(54,89,qs),
(54,50,o),
(103,14,o),
(142,7,q),
(84,-4,o),
(29,-64,o),
(29,-109,qs),
(29,-145,o),
(64,-198,o),
(130,-233,o),
(223,-250,o),
(281,-250,qs),
(343,-250,o),
(448,-228,o),
(525,-184,o),
(569,-119,o),
(569,-76,qs),
(569,-39,o),
(538,12,o),
(488,45,o),
(425,64,o),
(361,73,o),
(301,75,o),
(280,75,qs),
(210,76,o),
(147,89,o),
(147,100,qs),
(147,108,o),
(178,133,o),
(197,139,q),
(208,137,o),
(221,136,o),
(231,136,qs),
(334,136,o),
(444,226,o),
(444,301,qs),
(444,341,o),
(409,409,o),
(372,431,q),
(384,438,o),
(410,446,o),
(435,450,o),
(456,453,o),
(462,455,qs),
(470,457,o),
(480,469,o),
(480,483,qs),
(480,508,o),
(451,528,o),
(433,528,qs),
(402,528,o),
(337,484,o),
(314,453,q),
(300,456,o),
(268,460,o),
(250,460,qs),
(200,460,o)
);
},
{
closed = 1;
nodes = (
(398,-12,o),
(446,-32,o),
(475,-66,o),
(475,-91,qs),
(475,-113,o),
(449,-144,o),
(403,-165,o),
(339,-175,o),
(301,-175,qs),
(269,-175,o),
(205,-167,o),
(153,-149,o),
(120,-121,o),
(120,-100,qs),
(120,-79,o),
(153,-44,o),
(206,-18,o),
(272,-3,o),
(305,-3,qs),
(337,-3,o)
);
},
{
closed = 1;
nodes = (
(350,336,o),
(350,301,qs),
(350,263,o),
(297,209,o),
(249,209,qs),
(225,209,o),
(187,224,o),
(161,249,o),
(147,280,o),
(147,296,qs),
(147,337,o),
(200,386,o),
(250,386,qs),
(302,386,o)
);
},
{
closed = 1;
nodes = (
(358,619,o),
(343,619,qs),
(330,619,o),
(311,601,o),
(311,590,qs),
(311,582,o),
(284,567,o),
(255,567,qs),
(246,567,o),
(225,569,o),
(207,575,o),
(196,584,o),
(196,590,qs),
(196,607,o),
(177,619,o),
(160,619,qs),
(143,619,o),
(128,602,o),
(128,589,qs),
(128,557,o),
(195,510,o),
(260,510,qs),
(279,510,o),
(322,520,o),
(358,540,o),
(381,569,o),
(381,589,qs),
(381,609,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
17 3 2 7 0 58 26 2 2 8 52 1 5 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
12 1 10 11 10 106 0 1 11 9 11 1 9 104 0 11 0 9 0 11 9 91 0 8 0 2 3 8 2 91 15 1 7 7 0 83 13 1 0 0 23 67 0 3 3 5 84 14 1 5 5 16 67 0 6 6 4 83 0 4 4 25 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
12 1 10 11 10 106 0 1 11 9 11 1 9 104 0 11 0 9 0 11 9 91 13 1 0 15 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 84 14 1 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
87 86 67 66 1 0 126 124 120 118 112 110 106 104 95 93 86 99 87 99 77 75 66 85 67 85 45 43 34 31 24 22 7 5 0 65 1 65 16 15
CALL[ ]	/* CallFunction */";
};
width = 515;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (31,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = g;
},
{
alignment = -1;
pos = (130,0);
ref = breve;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
17 3 2 7 0 57 28 2 2 8 51 1 5 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
12 1 10 11 10 106 0 1 11 9 11 1 9 104 0 11 0 9 0 11 9 91 0 8 0 2 3 8 2 91 15 1 7 7 0 83 13 1 0 0 23 67 0 3 3 5 84 14 1 5 5 16 67 0 6 6 4 83 0 4 4 25 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
12 1 10 11 10 106 0 1 11 9 11 1 9 104 0 11 0 9 0 11 9 91 13 1 0 15 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 3 3 5 84 14 1 5 5 16 67 0 6 6 4 83 0 4 4 25 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
12 1 10 11 10 106 0 1 11 9 11 1 9 104 0 11 0 9 0 11 9 91 13 1 0 15 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 84 14 1 5 5 16 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
86 85 66 65 2 1 122 120 116 114 108 106 103 101 92 90 85 96 86 96 76 74 65 84 66 83 45 43 35 33 26 24 9 7 1 64 2 64 16 26
CALL[ ]	/* CallFunction */";
};
width = 495;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(138,435,o),
(91,390,o),
(65,330,o),
(65,294,qs),
(65,256,o),
(96,186,o),
(128,165,q),
(97,151,o),
(66,118,o),
(66,89,qs),
(66,50,o),
(115,14,o),
(154,7,q),
(38,-16,o),
(38,-102,qs),
(38,-139,o),
(77,-195,o),
(143,-232,o),
(231,-250,o),
(280,-250,qs),
(335,-250,o),
(427,-227,o),
(493,-186,o),
(530,-127,o),
(530,-91,qs),
(530,-49,o),
(484,-3,o),
(414,20,o),
(330,26,o),
(292,27,qs),
(245,28,o),
(176,32,o),
(131,46,o),
(108,72,o),
(108,95,qs),
(108,118,o),
(132,139,o),
(158,150,q),
(175,143,o),
(212,137,o),
(231,137,qs),
(272,137,o),
(337,165,o),
(382,211,o),
(405,270,o),
(405,301,qs),
(405,337,o),
(372,400,o),
(345,422,q),
(364,451,o),
(407,479,o),
(431,486,qs),
(445,491,o),
(464,504,o),
(464,512,qs),
(464,520,o),
(452,530,o),
(442,530,qs),
(427,530,o),
(393,516,o),
(360,491,o),
(329,459,o),
(318,441,q),
(283,460,o),
(247,460,qs),
(205,460,o)
);
},
{
closed = 1;
nodes = (
(366,-4,o),
(434,-23,o),
(487,-63,o),
(487,-99,qs),
(487,-124,o),
(458,-168,o),
(406,-200,o),
(331,-219,o),
(285,-219,qs),
(246,-219,o),
(173,-205,o),
(116,-177,o),
(81,-135,o),
(81,-106,qs),
(81,-78,o),
(115,-39,o),
(174,-13,o),
(252,-1,o),
(297,-1,qs),
(305,-1,o)
);
},
{
closed = 1;
nodes = (
(362,361,o),
(362,301,qs),
(362,238,o),
(291,167,o),
(230,167,qs),
(171,167,o),
(108,232,o),
(108,292,qs),
(108,355,o),
(178,430,o),
(239,430,qs),
(298,430,o)
);
},
{
closed = 1;
nodes = (
(329,613,o),
(321,613,qs),
(304,613,o),
(304,590,qs),
(304,580,o),
(291,560,o),
(269,545,o),
(242,535,o),
(229,535,qs),
(200,535,o),
(155,559,o),
(155,590,qs),
(155,602,o),
(149,613,o),
(138,613,qs),
(121,613,o),
(121,589,qs),
(121,574,o),
(138,546,o),
(167,523,o),
(206,510,o),
(229,510,qs),
(248,510,o),
(288,521,o),
(320,541,o),
(340,571,o),
(340,589,qs),
(340,605,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
2 1 7 0 16 1 8 7 58 27 2 2 8 52 1 5 3 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
12 1 10 1 10 106 11 1 1 0 9 0 1 9 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 15 1 7 7 0 83 13 1 0 0 23 67 0 3 3 5 84 14 1 5 5 16 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
12 1 10 1 10 106 11 1 1 0 9 0 1 9 91 13 1 0 15 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 84 14 1 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
12 1 10 11 10 106 0 1 11 9 11 1 9 104 0 11 0 9 0 11 9 91 13 1 0 15 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 84 14 1 5 5 16 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
87 86 67 66 1 0 124 122 117 115 111 109 104 102 93 91 86 97 87 97 77 75 66 85 67 84 46 44 36 33 25 23 8 6 0 65 1 65 16 15
CALL[ ]	/* CallFunction */";
};
width = 467;
}
);
note = gbreve;
unicode = 287;
},
{
glyphname = gcircumflex;
kernLeft = g;
kernRight = g;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(359,524,o),
(359,531,qs),
(359,545,o),
(335,583,o),
(303,618,o),
(271,642,o),
(262,642,qs),
(255,642,o),
(212,613,o),
(165,570,o),
(129,521,o),
(129,502,qs),
(129,488,o),
(143,488,qs),
(148,488,o),
(174,501,o),
(207,519,o),
(245,541,o),
(262,550,q),
(297,532,o),
(340,514,o),
(345,514,qs),
(353,514,o)
);
},
{
closed = 1;
nodes = (
(126,435,o),
(77,391,o),
(53,330,o),
(53,295,qs),
(53,256,o),
(84,186,o),
(116,165,q),
(85,151,o),
(54,118,o),
(54,89,qs),
(54,50,o),
(103,14,o),
(142,7,q),
(84,-4,o),
(29,-64,o),
(29,-109,qs),
(29,-145,o),
(64,-198,o),
(130,-233,o),
(223,-250,o),
(281,-250,qs),
(343,-250,o),
(448,-228,o),
(525,-184,o),
(569,-119,o),
(569,-76,qs),
(569,-39,o),
(538,12,o),
(488,45,o),
(425,64,o),
(361,73,o),
(301,75,o),
(280,75,qs),
(210,76,o),
(147,89,o),
(147,100,qs),
(147,108,o),
(178,133,o),
(197,139,q),
(208,137,o),
(221,136,o),
(231,136,qs),
(334,136,o),
(444,226,o),
(444,301,qs),
(444,341,o),
(409,409,o),
(372,431,q),
(384,438,o),
(410,446,o),
(435,450,o),
(456,453,o),
(462,455,qs),
(470,457,o),
(480,469,o),
(480,483,qs),
(480,508,o),
(451,528,o),
(433,528,qs),
(402,528,o),
(337,484,o),
(314,453,q),
(300,456,o),
(268,460,o),
(250,460,qs),
(200,460,o)
);
},
{
closed = 1;
nodes = (
(398,-12,o),
(446,-32,o),
(475,-66,o),
(475,-91,qs),
(475,-113,o),
(449,-144,o),
(403,-165,o),
(339,-175,o),
(301,-175,qs),
(269,-175,o),
(205,-167,o),
(153,-149,o),
(120,-121,o),
(120,-100,qs),
(120,-79,o),
(153,-44,o),
(206,-18,o),
(272,-3,o),
(305,-3,qs),
(337,-3,o)
);
},
{
closed = 1;
nodes = (
(350,336,o),
(350,301,qs),
(350,263,o),
(297,209,o),
(249,209,qs),
(225,209,o),
(187,224,o),
(161,249,o),
(147,280,o),
(147,296,qs),
(147,337,o),
(200,386,o),
(250,386,qs),
(302,386,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
3 1 4 2 40 26 2 10 3 81 49 2 5 11 75 1 8 6 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 2 4 2 106 0 4 0 4 106 12 1 0 1 0 106 0 1 3 1 106 0 11 0 5 6 11 5 91 15 1 10 10 3 83 13 1 3 3 23 67 0 6 6 8 83 14 1 8 8 16 67 0 9 9 7 83 0 7 7 25 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 2 4 2 106 0 4 0 4 106 12 1 0 1 0 106 0 1 3 1 106 13 1 3 15 1 10 11 3 10 92 0 11 0 5 6 11 5 91 0 9 0 7 9 7 87 0 6 6 8 83 14 1 8 8 16 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
110 109 90 89 24 23 1 0 118 116 109 122 110 122 100 98 89 108 90 108 68 66 57 54 47 45 30 28 23 88 24 88 16 14 9 7 0 22 1 22 16 15
CALL[ ]	/* CallFunction */";
};
width = 515;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(348,537,qs),
(348,549,o),
(324,585,o),
(293,618,o),
(260,641,o),
(251,641,qs),
(243,641,o),
(201,612,o),
(156,570,o),
(121,525,o),
(121,509,qs),
(121,496,o),
(132,496,qs),
(137,496,o),
(163,511,o),
(196,532,o),
(234,557,o),
(251,567,q),
(286,547,o),
(326,522,o),
(337,522,qs),
(348,522,o)
);
},
{
closed = 1;
nodes = (
(131,435,o),
(84,390,o),
(58,330,o),
(58,294,qs),
(58,256,o),
(89,186,o),
(121,165,q),
(90,151,o),
(59,118,o),
(59,89,qs),
(59,50,o),
(108,14,o),
(147,7,q),
(31,-16,o),
(31,-102,qs),
(31,-139,o),
(70,-195,o),
(136,-232,o),
(224,-250,o),
(273,-250,qs),
(335,-250,o),
(438,-227,o),
(512,-186,o),
(553,-127,o),
(553,-91,qs),
(553,-39,o),
(501,20,o),
(422,49,o),
(328,57,o),
(285,57,qs),
(207,58,o),
(131,75,o),
(131,95,qs),
(131,113,o),
(159,135,o),
(181,143,q),
(194,139,o),
(217,137,o),
(231,137,qs),
(278,137,o),
(351,162,o),
(402,206,o),
(428,266,o),
(428,301,qs),
(428,340,o),
(394,407,o),
(359,429,q),
(379,449,o),
(427,467,o),
(449,469,qs),
(460,471,o),
(473,487,o),
(473,498,qs),
(473,515,o),
(448,530,o),
(435,530,qs),
(421,530,o),
(389,517,o),
(357,495,o),
(328,465,o),
(316,449,q),
(281,460,o),
(240,460,qs),
(198,460,o)
);
},
{
closed = 1;
nodes = (
(335,-2,o),
(375,-8,o),
(419,-20,o),
(456,-41,o),
(480,-75,o),
(480,-99,qs),
(480,-137,o),
(383,-189,o),
(290,-189,qs),
(257,-189,o),
(191,-179,o),
(137,-158,o),
(104,-127,o),
(104,-106,qs),
(104,-78,o),
(141,-39,o),
(199,-13,o),
(267,-1,o),
(299,-1,qs),
(304,-1,o)
);
},
{
closed = 1;
nodes = (
(355,346,o),
(355,301,qs),
(355,254,o),
(294,197,o),
(240,197,qs),
(188,197,o),
(131,253,o),
(131,292,qs),
(131,340,o),
(193,400,o),
(247,400,qs),
(298,400,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
3 1 4 2 38 24 2 10 3 78 49 2 5 11 72 1 8 6 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 2 4 2 106 0 4 0 4 106 12 1 0 1 0 106 0 1 3 1 106 0 11 0 5 6 11 5 91 15 1 10 10 3 83 13 1 3 3 23 67 0 6 6 8 83 14 1 8 8 16 67 0 9 9 7 83 0 7 7 25 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 2 4 2 106 0 4 0 4 106 12 1 0 1 0 106 0 1 3 1 106 13 1 3 15 1 10 11 3 10 92 0 11 0 5 6 11 5 91 0 6 6 8 83 14 1 8 8 16 67 0 9 9 7 83 0 7 7 25 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 2 4 2 106 0 4 0 4 106 12 1 0 1 0 106 0 1 3 1 106 13 1 3 15 1 10 11 3 10 92 0 11 0 5 6 11 5 91 0 9 0 7 9 7 87 0 6 6 8 83 14 1 8 8 16 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
107 106 87 86 23 22 1 0 113 111 106 117 107 117 97 95 86 105 87 104 66 64 56 54 47 45 30 28 22 85 23 85 16 14 9 7 0 21 1 21 16 15
CALL[ ]	/* CallFunction */";
};
width = 495;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(138,435,o),
(91,390,o),
(65,330,o),
(65,294,qs),
(65,256,o),
(96,186,o),
(128,165,q),
(97,151,o),
(66,118,o),
(66,89,qs),
(66,50,o),
(115,14,o),
(154,7,q),
(38,-16,o),
(38,-102,qs),
(38,-139,o),
(77,-195,o),
(143,-232,o),
(231,-250,o),
(280,-250,qs),
(335,-250,o),
(427,-227,o),
(493,-186,o),
(530,-127,o),
(530,-91,qs),
(530,-49,o),
(484,-3,o),
(414,20,o),
(330,26,o),
(292,27,qs),
(245,28,o),
(176,32,o),
(131,46,o),
(108,72,o),
(108,95,qs),
(108,118,o),
(132,139,o),
(158,150,q),
(175,143,o),
(212,137,o),
(231,137,qs),
(272,137,o),
(337,165,o),
(382,211,o),
(405,270,o),
(405,301,qs),
(405,337,o),
(372,400,o),
(345,422,q),
(364,451,o),
(407,479,o),
(431,486,qs),
(445,491,o),
(464,504,o),
(464,512,qs),
(464,520,o),
(452,530,o),
(442,530,qs),
(427,530,o),
(393,516,o),
(360,491,o),
(329,459,o),
(318,441,q),
(283,460,o),
(247,460,qs),
(205,460,o)
);
},
{
closed = 1;
nodes = (
(366,-4,o),
(434,-23,o),
(487,-63,o),
(487,-99,qs),
(487,-124,o),
(458,-168,o),
(406,-200,o),
(331,-219,o),
(285,-219,qs),
(246,-219,o),
(173,-205,o),
(116,-177,o),
(81,-135,o),
(81,-106,qs),
(81,-78,o),
(115,-39,o),
(174,-13,o),
(252,-1,o),
(297,-1,qs),
(305,-1,o)
);
},
{
closed = 1;
nodes = (
(362,361,o),
(362,301,qs),
(362,238,o),
(291,167,o),
(230,167,qs),
(171,167,o),
(108,232,o),
(108,292,qs),
(108,355,o),
(178,430,o),
(239,430,qs),
(298,430,o)
);
},
{
closed = 1;
nodes = (
(333,547,qs),
(333,556,o),
(310,588,o),
(278,618,o),
(245,640,o),
(236,640,qs),
(227,640,o),
(186,610,o),
(142,570,o),
(109,530,o),
(109,521,qs),
(109,510,o),
(117,510,qs),
(122,510,o),
(148,528,o),
(181,554,o),
(219,584,o),
(236,596,q),
(270,571,o),
(307,536,o),
(325,536,qs),
(333,536,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
101 1 9 11 2 1 7 0 16 1 8 7 58 27 2 2 8 52 1 5 3 5 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 11 9 11 106 15 1 9 1 9 106 0 1 10 1 106 0 10 0 10 106 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 14 1 7 7 0 83 12 1 0 0 23 67 0 3 3 5 83 13 1 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 11 9 11 106 15 1 9 1 9 106 0 1 10 1 106 0 10 0 10 106 12 1 0 14 1 7 8 0 7 92 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 83 13 1 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
99 98 87 86 67 66 1 0 114 112 107 105 98 119 99 119 93 91 86 97 87 97 77 75 66 85 67 84 46 44 36 33 25 23 8 6 0 65 1 65 16 15
CALL[ ]	/* CallFunction */";
};
width = 467;
}
);
note = gcircumflex;
unicode = 285;
},
{
glyphname = gcommaaccent;
kernLeft = g;
kernRight = g;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(214,604,o),
(228,594,o),
(239,585,o),
(239,579,qs),
(239,549,o),
(224,520,o),
(224,510,qs),
(224,493,o),
(245,487,o),
(250,487,qs),
(256,487,o),
(283,502,o),
(310,531,o),
(331,576,o),
(331,606,qs),
(331,649,o),
(287,687,o),
(263,687,qs),
(230,687,o),
(203,650,o),
(203,629,qs),
(203,617,o)
);
},
{
closed = 1;
nodes = (
(126,435,o),
(77,391,o),
(53,330,o),
(53,295,qs),
(53,256,o),
(84,186,o),
(116,165,q),
(85,151,o),
(54,118,o),
(54,89,qs),
(54,50,o),
(103,14,o),
(142,7,q),
(84,-4,o),
(29,-64,o),
(29,-109,qs),
(29,-145,o),
(64,-198,o),
(130,-233,o),
(223,-250,o),
(281,-250,qs),
(343,-250,o),
(448,-228,o),
(525,-184,o),
(569,-119,o),
(569,-76,qs),
(569,-39,o),
(538,12,o),
(488,45,o),
(425,64,o),
(361,73,o),
(301,75,o),
(280,75,qs),
(210,76,o),
(147,89,o),
(147,100,qs),
(147,108,o),
(178,133,o),
(197,139,q),
(208,137,o),
(221,136,o),
(231,136,qs),
(334,136,o),
(444,226,o),
(444,301,qs),
(444,341,o),
(409,409,o),
(372,431,q),
(384,438,o),
(410,446,o),
(435,450,o),
(456,453,o),
(462,455,qs),
(470,457,o),
(480,469,o),
(480,483,qs),
(480,508,o),
(451,528,o),
(433,528,qs),
(402,528,o),
(337,484,o),
(314,453,q),
(300,456,o),
(268,460,o),
(250,460,qs),
(200,460,o)
);
},
{
closed = 1;
nodes = (
(398,-12,o),
(446,-32,o),
(475,-66,o),
(475,-91,qs),
(475,-113,o),
(449,-144,o),
(403,-165,o),
(339,-175,o),
(301,-175,qs),
(269,-175,o),
(205,-167,o),
(153,-149,o),
(120,-121,o),
(120,-100,qs),
(120,-79,o),
(153,-44,o),
(206,-18,o),
(272,-3,o),
(305,-3,qs),
(337,-3,o)
);
},
{
closed = 1;
nodes = (
(350,336,o),
(350,301,qs),
(350,263,o),
(297,209,o),
(249,209,qs),
(225,209,o),
(187,224,o),
(161,249,o),
(147,280,o),
(147,296,qs),
(147,337,o),
(200,386,o),
(250,386,qs),
(302,386,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
39 25 2 9 2 80 48 2 4 10 74 1 7 5 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 0 3 0 106 0 3 1 3 106 0 1 2 1 106 0 10 0 4 5 10 4 91 13 1 9 9 2 83 11 1 2 2 23 67 0 5 5 7 83 12 1 7 7 16 67 0 8 8 6 83 0 6 6 25 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 0 3 0 106 0 3 1 3 106 0 1 2 1 106 11 1 2 13 1 9 10 2 9 92 0 10 0 4 5 10 4 91 0 8 0 6 8 6 87 0 5 5 7 83 12 1 7 7 16 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
109 108 89 88 23 22 117 115 108 121 109 121 99 97 88 107 89 107 67 65 56 53 46 44 29 27 22 87 23 87 38 34 14 17
CALL[ ]	/* CallFunction */";
};
width = 515;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (31,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = g;
},
{
alignment = -1;
pos = (157,586);
ref = comma;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
17 3 2 7 0 57 28 2 2 8 51 1 5 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 9 1 9 106 0 1 10 1 106 0 10 0 10 106 0 8 0 2 3 8 2 91 13 1 7 7 0 83 11 1 0 0 23 67 0 3 3 5 83 12 1 5 5 16 67 0 6 6 4 83 0 4 4 25 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 9 1 9 106 0 1 10 1 106 0 10 0 10 106 11 1 0 13 1 7 8 0 7 92 0 8 0 2 3 8 2 91 0 3 3 5 83 12 1 5 5 16 67 0 6 6 4 83 0 4 4 25 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 9 1 9 106 0 1 10 1 106 0 10 0 10 106 11 1 0 13 1 7 8 0 7 92 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 83 12 1 5 5 16 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
86 85 66 65 2 1 109 107 101 99 92 90 85 96 86 96 76 74 65 84 66 83 45 43 35 33 26 24 9 7 1 64 2 64 14 26
CALL[ ]	/* CallFunction */";
};
width = 495;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(138,435,o),
(91,390,o),
(65,330,o),
(65,294,qs),
(65,256,o),
(96,186,o),
(128,165,q),
(97,151,o),
(66,118,o),
(66,89,qs),
(66,50,o),
(115,14,o),
(154,7,q),
(38,-16,o),
(38,-102,qs),
(38,-139,o),
(77,-195,o),
(143,-232,o),
(231,-250,o),
(280,-250,qs),
(335,-250,o),
(427,-227,o),
(493,-186,o),
(530,-127,o),
(530,-91,qs),
(530,-49,o),
(484,-3,o),
(414,20,o),
(330,26,o),
(292,27,qs),
(245,28,o),
(176,32,o),
(131,46,o),
(108,72,o),
(108,95,qs),
(108,118,o),
(132,139,o),
(158,150,q),
(175,143,o),
(212,137,o),
(231,137,qs),
(272,137,o),
(337,165,o),
(382,211,o),
(405,270,o),
(405,301,qs),
(405,337,o),
(372,400,o),
(345,422,q),
(364,451,o),
(407,479,o),
(431,486,qs),
(445,491,o),
(464,504,o),
(464,512,qs),
(464,520,o),
(452,530,o),
(442,530,qs),
(427,530,o),
(393,516,o),
(360,491,o),
(329,459,o),
(318,441,q),
(283,460,o),
(247,460,qs),
(205,460,o)
);
},
{
closed = 1;
nodes = (
(366,-4,o),
(434,-23,o),
(487,-63,o),
(487,-99,qs),
(487,-124,o),
(458,-168,o),
(406,-200,o),
(331,-219,o),
(285,-219,qs),
(246,-219,o),
(173,-205,o),
(116,-177,o),
(81,-135,o),
(81,-106,qs),
(81,-78,o),
(115,-39,o),
(174,-13,o),
(252,-1,o),
(297,-1,qs),
(305,-1,o)
);
},
{
closed = 1;
nodes = (
(362,361,o),
(362,301,qs),
(362,238,o),
(291,167,o),
(230,167,qs),
(171,167,o),
(108,232,o),
(108,292,qs),
(108,355,o),
(178,430,o),
(239,430,qs),
(298,430,o)
);
},
{
closed = 1;
nodes = (
(214,587,o),
(228,580,o),
(239,573,o),
(239,567,qs),
(239,557,o),
(228,528,o),
(228,521,qs),
(228,516,o),
(237,509,o),
(242,509,qs),
(252,509,o),
(269,526,o),
(279,551,o),
(285,578,o),
(285,588,qs),
(285,622,o),
(258,645,o),
(243,645,qs),
(223,645,o),
(203,624,o),
(203,611,qs),
(203,599,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
2 1 7 0 16 1 8 7 58 27 2 2 8 52 1 5 3 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 9 1 9 106 0 1 10 1 106 0 10 0 10 106 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 13 1 7 7 0 83 11 1 0 0 23 67 0 3 3 5 83 12 1 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 9 1 9 106 0 1 10 1 106 0 10 0 10 106 11 1 0 13 1 7 8 0 7 92 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 83 12 1 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
87 86 67 66 1 0 110 108 102 100 93 91 86 97 87 97 77 75 66 85 67 84 46 44 36 33 25 23 8 6 0 65 1 65 14 15
CALL[ ]	/* CallFunction */";
};
width = 467;
}
);
note = gcommaaccent;
unicode = 291;
},
{
glyphname = gdotaccent;
kernLeft = g;
kernRight = g;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(126,435,o),
(77,391,o),
(53,330,o),
(53,295,qs),
(53,256,o),
(84,186,o),
(116,165,q),
(85,151,o),
(54,118,o),
(54,89,qs),
(54,50,o),
(103,14,o),
(142,7,q),
(84,-4,o),
(29,-64,o),
(29,-109,qs),
(29,-145,o),
(64,-198,o),
(130,-233,o),
(223,-250,o),
(281,-250,qs),
(343,-250,o),
(448,-228,o),
(525,-184,o),
(569,-119,o),
(569,-76,qs),
(569,-39,o),
(538,12,o),
(488,45,o),
(425,64,o),
(361,73,o),
(301,75,o),
(280,75,qs),
(210,76,o),
(147,89,o),
(147,100,qs),
(147,108,o),
(178,133,o),
(197,139,q),
(208,137,o),
(221,136,o),
(231,136,qs),
(334,136,o),
(444,226,o),
(444,301,qs),
(444,341,o),
(409,409,o),
(372,431,q),
(384,438,o),
(410,446,o),
(435,450,o),
(456,453,o),
(462,455,qs),
(470,457,o),
(480,469,o),
(480,483,qs),
(480,508,o),
(451,528,o),
(433,528,qs),
(402,528,o),
(337,484,o),
(314,453,q),
(300,456,o),
(268,460,o),
(250,460,qs),
(200,460,o)
);
},
{
closed = 1;
nodes = (
(398,-12,o),
(446,-32,o),
(475,-66,o),
(475,-91,qs),
(475,-113,o),
(449,-144,o),
(403,-165,o),
(339,-175,o),
(301,-175,qs),
(269,-175,o),
(205,-167,o),
(153,-149,o),
(120,-121,o),
(120,-100,qs),
(120,-79,o),
(153,-44,o),
(206,-18,o),
(272,-3,o),
(305,-3,qs),
(337,-3,o)
);
},
{
closed = 1;
nodes = (
(350,336,o),
(350,301,qs),
(350,263,o),
(297,209,o),
(249,209,qs),
(225,209,o),
(187,224,o),
(161,249,o),
(147,280,o),
(147,296,qs),
(147,337,o),
(200,386,o),
(250,386,qs),
(302,386,o)
);
},
{
closed = 1;
nodes = (
(230,521,o),
(255,521,qs),
(266,521,o),
(290,527,o),
(309,543,o),
(322,570,o),
(322,591,qs),
(322,618,o),
(286,652,o),
(262,652,qs),
(244,652,o),
(219,639,o),
(203,620,o),
(196,597,o),
(196,587,qs),
(196,555,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
17 3 2 7 0 58 26 2 2 8 52 1 5 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 1 9 10 9 1 10 104 0 9 0 10 0 9 10 91 0 8 0 2 3 8 2 91 13 1 7 7 0 83 11 1 0 0 23 67 0 3 3 5 83 12 1 5 5 16 67 0 6 6 4 83 0 4 4 25 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 1 9 10 9 1 10 104 0 9 0 10 0 9 10 91 11 1 0 13 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 83 12 1 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
87 86 67 66 1 0 114 112 106 104 95 93 86 99 87 99 77 75 66 85 67 85 45 43 34 31 24 22 7 5 0 65 1 65 14 15
CALL[ ]	/* CallFunction */";
};
width = 515;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (31,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = g;
},
{
alignment = -1;
pos = (182,4);
ref = dotaccent;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
17 3 2 7 0 57 28 2 2 8 51 1 5 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 1 9 10 9 1 10 104 0 9 0 10 0 9 10 91 0 8 0 2 3 8 2 91 13 1 7 7 0 83 11 1 0 0 23 67 0 3 3 5 83 12 1 5 5 16 67 0 6 6 4 83 0 4 4 25 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 1 9 10 9 1 10 104 0 9 0 10 0 9 10 91 11 1 0 13 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 3 3 5 83 12 1 5 5 16 67 0 6 6 4 83 0 4 4 25 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 1 9 10 9 1 10 104 0 9 0 10 0 9 10 91 11 1 0 13 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 83 12 1 5 5 16 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
86 85 66 65 2 1 109 107 103 101 92 90 85 96 86 96 76 74 65 84 66 83 45 43 35 33 26 24 9 7 1 64 2 64 14 26
CALL[ ]	/* CallFunction */";
};
width = 495;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(138,435,o),
(91,390,o),
(65,330,o),
(65,294,qs),
(65,256,o),
(96,186,o),
(128,165,q),
(97,151,o),
(66,118,o),
(66,89,qs),
(66,50,o),
(115,14,o),
(154,7,q),
(38,-16,o),
(38,-102,qs),
(38,-139,o),
(77,-195,o),
(143,-232,o),
(231,-250,o),
(280,-250,qs),
(335,-250,o),
(427,-227,o),
(493,-186,o),
(530,-127,o),
(530,-91,qs),
(530,-49,o),
(484,-3,o),
(414,20,o),
(330,26,o),
(292,27,qs),
(245,28,o),
(176,32,o),
(131,46,o),
(108,72,o),
(108,95,qs),
(108,118,o),
(132,139,o),
(158,150,q),
(175,143,o),
(212,137,o),
(231,137,qs),
(272,137,o),
(337,165,o),
(382,211,o),
(405,270,o),
(405,301,qs),
(405,337,o),
(372,400,o),
(345,422,q),
(364,451,o),
(407,479,o),
(431,486,qs),
(445,491,o),
(464,504,o),
(464,512,qs),
(464,520,o),
(452,530,o),
(442,530,qs),
(427,530,o),
(393,516,o),
(360,491,o),
(329,459,o),
(318,441,q),
(283,460,o),
(247,460,qs),
(205,460,o)
);
},
{
closed = 1;
nodes = (
(366,-4,o),
(434,-23,o),
(487,-63,o),
(487,-99,qs),
(487,-124,o),
(458,-168,o),
(406,-200,o),
(331,-219,o),
(285,-219,qs),
(246,-219,o),
(173,-205,o),
(116,-177,o),
(81,-135,o),
(81,-106,qs),
(81,-78,o),
(115,-39,o),
(174,-13,o),
(252,-1,o),
(297,-1,qs),
(305,-1,o)
);
},
{
closed = 1;
nodes = (
(362,361,o),
(362,301,qs),
(362,238,o),
(291,167,o),
(230,167,qs),
(171,167,o),
(108,232,o),
(108,292,qs),
(108,355,o),
(178,430,o),
(239,430,qs),
(298,430,o)
);
},
{
closed = 1;
nodes = (
(219,538,o),
(233,538,qs),
(247,538,o),
(274,557,o),
(274,584,qs),
(274,601,o),
(254,621,o),
(240,621,qs),
(229,621,o),
(214,612,o),
(204,599,o),
(199,585,o),
(199,580,qs),
(199,562,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
2 1 7 0 16 1 8 7 58 27 2 2 8 52 1 5 3 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 1 10 0 10 1 0 104 0 9 0 10 1 9 10 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 13 1 7 7 0 83 11 1 0 0 23 67 0 3 3 5 83 12 1 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 1 10 0 10 1 0 104 0 9 0 10 1 9 10 91 11 1 0 13 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 83 12 1 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
87 86 67 66 1 0 110 108 104 102 93 91 86 97 87 97 77 75 66 85 67 84 46 44 36 33 25 23 8 6 0 65 1 65 14 15
CALL[ ]	/* CallFunction */";
};
width = 467;
}
);
note = gdotaccent;
unicode = 289;
},
{
glyphname = h;
kernLeft = germandbls;
kernRight = c_h;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(84,0,o),
(103,1,o),
(130,1,o),
(150,1,qs),
(173,1,o),
(220,2,o),
(230,2,qs),
(254,2,o),
(278,15,o),
(278,36,qs),
(278,60,o),
(255,77,o),
(228,77,qs),
(156,77,l),
(156,182,ls),
(156,213,o),
(181,271,o),
(223,316,o),
(277,343,o),
(307,343,qs),
(325,343,o),
(347,334,o),
(353,329,qs),
(360,323,o),
(369,307,o),
(375,280,o),
(377,241,o),
(377,211,qs),
(377,194,o),
(376,151,o),
(375,109,o),
(374,72,o),
(373,61,qs),
(372,49,o),
(370,32,o),
(364,21,o),
(353,14,o),
(343,10,qs),
(321,2,o),
(321,-28,qs),
(321,-48,o),
(361,-59,o),
(407,-59,qs),
(430,-59,o),
(460,-58,o),
(468,-58,qs),
(482,-58,o),
(529,-56,o),
(542,-56,qs),
(558,-56,o),
(584,-39,o),
(584,-19,qs),
(584,6,o),
(549,19,o),
(527,19,qs),
(466,19,l),
(466,187,ls),
(466,256,o),
(455,342,o),
(448,360,qs),
(431,402,o),
(372,430,o),
(326,430,qs),
(300,430,o),
(247,415,o),
(202,389,o),
(167,353,o),
(158,332,q),
(158,791,ls),
(158,812,o),
(136,823,o),
(101,823,qs),
(18,823,o),
(-51,800,o),
(-51,784,qs),
(-51,764,o),
(-9,751,o),
(21,751,qs),
(52,751,ls),
(60,751,o),
(66,732,o),
(66,721,qs),
(66,701,o),
(66,655,o),
(66,583,o),
(65,477,o),
(64,398,qs),
(63,294,o),
(61,166,o),
(61,135,qs),
(61,100,o),
(48,74,o),
(32,72,qs),
(18,70,o),
(-2,53,o),
(-2,37,qs),
(-2,12,o),
(32,0,o),
(61,0,qs),
(69,0,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
31 1 7 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 4 0 5 4 5 87 0 1 1 2 83 0 2 2 12 67 0 6 6 3 83 0 3 3 15 67 0 7 7 0 83 8 1 0 0 13 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 3 0 6 7 3 6 91 0 4 0 5 4 5 87 0 1 1 2 83 0 2 2 12 67 0 7 7 0 83 8 1 0 0 13 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 0 6 7 3 6 91 0 4 0 5 4 5 87 0 1 1 2 83 0 2 2 14 67 0 7 7 0 83 8 1 0 0 13 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
1 0 87 85 80 78 57 49 45 43 37 35 28 26 22 19 0 99 1 91 9 15
CALL[ ]	/* CallFunction */";
};
width = 566;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(459,294,o),
(435,370,o),
(396,413,o),
(345,428,o),
(318,428,qs),
(268,428,o),
(175,377,o),
(153,330,q),
(153,789,l),
(151,809,o),
(137,821,o),
(111,821,qs),
(63,821,o),
(1,816,o),
(-34,807,o),
(-48,795,o),
(-48,787,qs),
(-48,781,o),
(-35,774,o),
(-16,771,o),
(7,770,o),
(17,770,qs),
(64,770,ls),
(81,770,o),
(81,737,qs),
(81,734,o),
(81,681,o),
(80,597,o),
(79,491,o),
(78,379,o),
(78,270,o),
(77,181,o),
(76,119,o),
(76,111,qs),
(76,103,o),
(74,85,o),
(68,68,o),
(57,57,o),
(48,57,qs),
(32,57,ls),
(20,57,o),
(-5,45,o),
(-5,27,qs),
(-5,8,o),
(23,0,o),
(39,0,qs),
(42,0,o),
(72,0,o),
(112,0,o),
(158,1,o),
(198,1,o),
(225,1,o),
(228,1,qs),
(248,1,o),
(267,11,o),
(267,28,qs),
(267,48,o),
(245,60,o),
(228,60,qs),
(148,60,l),
(148,186,ls),
(148,233,o),
(173,280,qs),
(193,317,o),
(257,368,o),
(299,368,qs),
(332,368,o),
(368,339,o),
(386,285,o),
(389,209,o),
(389,163,qs),
(389,162,o),
(389,137,o),
(388,100,o),
(387,56,o),
(386,36,qs),
(384,12,o),
(368,0,o),
(343,-3,qs),
(334,-5,o),
(315,-18,o),
(315,-32,qs),
(315,-49,o),
(335,-60,o),
(348,-60,qs),
(352,-60,o),
(407,-59,o),
(472,-59,o),
(527,-58,o),
(532,-58,qs),
(547,-58,o),
(569,-48,o),
(569,-33,qs),
(569,-22,o),
(557,-9,o),
(539,-2,o),
(520,0,o),
(513,0,qs),
(459,0,l),
(459,233,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
90 1 6 7 91 1 3 2 23 1 4 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 0 0 1 0 1 87 0 6 6 7 83 0 7 7 12 67 0 2 2 8 83 0 8 8 15 67 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 8 0 2 3 8 2 91 0 0 0 1 0 1 87 0 6 6 7 83 0 7 7 12 67 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 8 0 2 3 8 2 91 0 0 0 1 0 1 87 0 6 6 7 83 0 7 7 14 67 5 1 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
95 93 88 86 79 75 61 58 54 45 41 39 34 32 118 32 9 17
CALL[ ]	/* CallFunction */";
};
width = 551;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(431,358,o),
(401,400,o),
(350,428,o),
(309,428,qs),
(255,428,o),
(169,375,o),
(143,327,q),
(143,745,ls),
(143,786,o),
(130,818,o),
(101,818,qs),
(95,818,o),
(53,816,o),
(6,812,o),
(-30,802,o),
(-30,795,qs),
(-30,788,o),
(-3,785,o),
(11,785,qs),
(81,785,ls),
(103,785,o),
(103,753,qs),
(103,709,o),
(103,618,o),
(104,533,o),
(104,460,o),
(104,436,qs),
(104,381,o),
(102,270,o),
(100,172,o),
(98,94,o),
(97,72,qs),
(96,49,o),
(85,34,o),
(71,32,qs),
(33,28,o),
(-9,20,o),
(-9,10,qs),
(-9,3,o),
(11,0,o),
(25,0,qs),
(48,0,o),
(93,3,o),
(116,3,qs),
(139,3,o),
(203,0,o),
(232,0,qs),
(240,0,o),
(252,8,o),
(252,14,qs),
(252,23,o),
(226,32,o),
(210,32,qs),
(137,32,l),
(137,193,ls),
(137,233,o),
(159,308,o),
(201,365,o),
(261,399,o),
(299,399,qs),
(332,399,o),
(372,375,o),
(393,340,o),
(401,302,o),
(403,288,qs),
(405,270,o),
(407,221,o),
(409,173,o),
(409,132,o),
(409,120,qs),
(409,108,o),
(409,76,o),
(408,42,o),
(407,11,o),
(406,0,qs),
(404,-16,o),
(391,-29,o),
(371,-31,qs),
(360,-32,o),
(338,-34,o),
(318,-39,o),
(306,-45,o),
(306,-50,qs),
(306,-61,o),
(337,-61,qs),
(351,-61,o),
(402,-58,o),
(424,-58,qs),
(445,-58,o),
(502,-61,o),
(518,-61,qs),
(547,-61,o),
(547,-50,qs),
(547,-40,o),
(513,-32,o),
(493,-32,qs),
(449,-32,l),
(449,176,ls),
(449,215,o),
(448,267,o),
(445,293,qs),
(443,311,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
94 1 3 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 0 1 0 1 87 0 5 5 6 83 0 6 6 14 67 0 2 2 7 83 0 7 7 15 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 7 0 2 3 7 2 91 0 0 0 1 0 1 87 0 5 5 6 83 0 6 6 14 67 0 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
98 96 91 88 83 80 61 53 49 47 42 40 131 36 8 17
CALL[ ]	/* CallFunction */";
};
width = 529;
}
);
note = h;
unicode = 104;
},
{
glyphname = hbar;
kernLeft = germandbls;
kernRight = c_h;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(84,0,o),
(103,1,o),
(130,1,o),
(150,1,qs),
(173,1,o),
(220,2,o),
(230,2,qs),
(254,2,o),
(278,15,o),
(278,36,qs),
(278,60,o),
(255,77,o),
(228,77,qs),
(156,77,l),
(156,182,ls),
(156,213,o),
(181,271,o),
(223,316,o),
(277,343,o),
(307,343,qs),
(325,343,o),
(347,334,o),
(353,329,qs),
(360,323,o),
(369,307,o),
(375,280,o),
(377,241,o),
(377,211,qs),
(377,194,o),
(376,151,o),
(375,109,o),
(374,72,o),
(373,61,qs),
(372,49,o),
(370,32,o),
(364,21,o),
(353,14,o),
(343,10,qs),
(321,2,o),
(321,-28,qs),
(321,-48,o),
(361,-59,o),
(407,-59,qs),
(430,-59,o),
(460,-58,o),
(468,-58,qs),
(482,-58,o),
(529,-56,o),
(542,-56,qs),
(558,-56,o),
(584,-39,o),
(584,-19,qs),
(584,6,o),
(549,19,o),
(527,19,qs),
(466,19,l),
(466,187,ls),
(466,256,o),
(455,342,o),
(448,360,qs),
(431,402,o),
(372,430,o),
(326,430,qs),
(300,430,o),
(247,415,o),
(202,389,o),
(167,353,o),
(158,332,q),
(158,522,l),
(190,522,o),
(247,523,o),
(265,523,qs),
(276,523,o),
(290,532,o),
(298,545,o),
(301,560,o),
(301,565,qs),
(301,579,o),
(284,604,o),
(273,604,qs),
(250,604,o),
(194,601,o),
(158,601,q),
(158,791,ls),
(158,812,o),
(136,823,o),
(101,823,qs),
(18,823,o),
(-51,800,o),
(-51,784,qs),
(-51,764,o),
(-9,751,o),
(21,751,qs),
(52,751,ls),
(60,751,o),
(66,732,o),
(66,721,qs),
(66,602,l),
(52,603,o),
(29,603,o),
(24,603,qs),
(7,603,o),
(-9,575,o),
(-9,562,qs),
(-9,548,o),
(10,522,o),
(24,522,qs),
(65,522,l),
(65,496,o),
(64,436,o),
(64,398,qs),
(63,294,o),
(61,166,o),
(61,135,qs),
(61,100,o),
(48,74,o),
(32,72,qs),
(18,70,o),
(-2,53,o),
(-2,37,qs),
(-2,12,o),
(32,0,o),
(61,0,qs),
(69,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
25 1 1 2 55 1 11 10 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
5 1 2 6 1 1 7 2 1 91 0 8 0 9 8 9 87 0 3 3 4 83 0 4 4 12 67 0 10 10 7 83 0 7 7 15 67 0 11 11 0 83 12 1 0 0 13 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
5 1 2 6 1 1 7 2 1 91 0 7 0 10 11 7 10 91 0 8 0 9 8 9 87 0 3 3 4 83 0 4 4 12 67 0 11 11 0 83 12 1 0 0 13 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
5 1 2 6 1 1 7 2 1 91 0 7 0 10 11 7 10 91 0 8 0 9 8 9 87 0 3 3 4 83 0 4 4 14 67 0 11 11 0 83 12 1 0 0 13 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 111 109 104 102 81 73 69 67 61 59 54 50 44 40 37 35 31 28 24 21 17 15 0 123 1 115 13 15
CALL[ ]	/* CallFunction */";
};
width = 566;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(180,592,o),
(138,592,qs),
(125,592,o),
(90,593,o),
(54,593,o),
(24,594,o),
(17,594,qs),
(3,594,o),
(-9,572,o),
(-9,562,qs),
(-9,551,o),
(6,531,o),
(17,531,qs),
(35,531,o),
(99,531,o),
(171,532,o),
(238,532,o),
(258,532,qs),
(275,532,o),
(287,557,o),
(287,565,qs),
(287,576,o),
(274,595,o),
(266,595,qs),
(242,595,o)
);
},
{
closed = 1;
nodes = (
(459,294,o),
(435,370,o),
(396,413,o),
(345,428,o),
(318,428,qs),
(268,428,o),
(175,377,o),
(153,330,q),
(153,789,l),
(151,809,o),
(137,821,o),
(111,821,qs),
(63,821,o),
(1,816,o),
(-34,807,o),
(-48,795,o),
(-48,787,qs),
(-48,781,o),
(-35,774,o),
(-16,771,o),
(7,770,o),
(17,770,qs),
(64,770,ls),
(81,770,o),
(81,737,qs),
(81,734,o),
(81,681,o),
(80,597,o),
(79,491,o),
(78,379,o),
(78,270,o),
(77,181,o),
(76,119,o),
(76,111,qs),
(76,103,o),
(74,85,o),
(68,68,o),
(57,57,o),
(48,57,qs),
(32,57,ls),
(20,57,o),
(-5,45,o),
(-5,27,qs),
(-5,8,o),
(23,0,o),
(39,0,qs),
(42,0,o),
(72,0,o),
(112,0,o),
(158,1,o),
(198,1,o),
(225,1,o),
(228,1,qs),
(248,1,o),
(267,11,o),
(267,28,qs),
(267,48,o),
(245,60,o),
(228,60,qs),
(148,60,l),
(148,186,ls),
(148,233,o),
(173,280,qs),
(193,317,o),
(257,368,o),
(299,368,qs),
(332,368,o),
(368,339,o),
(386,285,o),
(389,209,o),
(389,163,qs),
(389,162,o),
(389,137,o),
(388,100,o),
(387,56,o),
(386,36,qs),
(384,12,o),
(368,0,o),
(343,-3,qs),
(334,-5,o),
(315,-18,o),
(315,-32,qs),
(315,-49,o),
(335,-60,o),
(348,-60,qs),
(352,-60,o),
(407,-59,o),
(472,-59,o),
(527,-58,o),
(532,-58,qs),
(547,-58,o),
(569,-48,o),
(569,-33,qs),
(569,-22,o),
(557,-9,o),
(539,-2,o),
(520,0,o),
(513,0,qs),
(459,0,l),
(459,233,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
115 1 8 9 116 1 5 4 48 1 6 5 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
11 1 0 0 1 10 0 1 91 0 2 0 3 2 3 87 0 8 8 9 83 0 9 9 12 67 0 4 4 10 83 0 10 10 15 67 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
11 1 0 0 1 10 0 1 91 0 10 0 4 5 10 4 91 0 2 0 3 2 3 87 0 8 8 9 83 0 9 9 12 67 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
11 1 0 0 1 10 0 1 91 0 10 0 4 5 10 4 91 0 2 0 3 2 3 87 0 8 8 9 83 0 9 9 14 67 7 1 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 120 118 113 111 104 100 86 83 79 70 66 64 59 57 40 33 27 25 12 5 0 24 1 16 12 15
CALL[ ]	/* CallFunction */";
};
width = 551;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(431,358,o),
(401,400,o),
(350,428,o),
(309,428,qs),
(255,428,o),
(169,375,o),
(143,327,q),
(143,546,l),
(174,546,o),
(231,547,o),
(248,547,qs),
(259,547,o),
(267,560,o),
(267,565,qs),
(267,570,o),
(260,580,o),
(256,580,qs),
(234,580,o),
(178,577,o),
(143,577,q),
(143,745,ls),
(143,786,o),
(130,818,o),
(101,818,qs),
(95,818,o),
(53,816,o),
(6,812,o),
(-30,802,o),
(-30,795,qs),
(-30,788,o),
(-3,785,o),
(11,785,qs),
(81,785,ls),
(103,785,o),
(103,753,qs),
(103,577,l),
(90,577,o),
(61,578,o),
(34,578,o),
(13,579,o),
(7,579,qs),
(-1,579,o),
(-9,567,o),
(-9,562,qs),
(-9,557,o),
(0,546,o),
(7,546,qs),
(103,546,l),
(103,513,o),
(104,456,o),
(104,436,qs),
(104,381,o),
(102,270,o),
(100,172,o),
(98,94,o),
(97,72,qs),
(96,49,o),
(85,34,o),
(71,32,qs),
(33,28,o),
(-9,20,o),
(-9,10,qs),
(-9,3,o),
(11,0,o),
(25,0,qs),
(48,0,o),
(93,3,o),
(116,3,qs),
(139,3,o),
(203,0,o),
(232,0,qs),
(240,0,o),
(252,8,o),
(252,14,qs),
(252,23,o),
(226,32,o),
(210,32,qs),
(137,32,l),
(137,193,ls),
(137,233,o),
(159,308,o),
(201,365,o),
(261,399,o),
(299,399,qs),
(332,399,o),
(372,375,o),
(393,340,o),
(401,302,o),
(403,288,qs),
(405,270,o),
(407,221,o),
(409,173,o),
(409,132,o),
(409,120,qs),
(409,108,o),
(409,76,o),
(408,42,o),
(407,11,o),
(406,0,qs),
(404,-16,o),
(391,-29,o),
(371,-31,qs),
(360,-32,o),
(338,-34,o),
(318,-39,o),
(306,-45,o),
(306,-50,qs),
(306,-61,o),
(337,-61,qs),
(351,-61,o),
(402,-58,o),
(424,-58,qs),
(445,-58,o),
(502,-61,o),
(518,-61,qs),
(547,-61,o),
(547,-50,qs),
(547,-40,o),
(513,-32,o),
(493,-32,qs),
(449,-32,l),
(449,176,ls),
(449,215,o),
(448,267,o),
(445,293,qs),
(443,311,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
118 1 3 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
9 1 6 10 1 5 11 6 5 91 0 0 0 1 0 1 87 0 7 7 8 83 0 8 8 14 67 0 2 2 11 83 0 11 11 15 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
9 1 6 10 1 5 11 6 5 91 0 11 0 2 3 11 2 91 0 0 0 1 0 1 87 0 7 7 8 83 0 8 8 14 67 0 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
122 120 117 113 109 105 102 99 94 91 89 83 79 77 61 53 49 47 42 40 131 36 12 17
CALL[ ]	/* CallFunction */";
};
width = 529;
}
);
note = hbar;
unicode = 295;
},
{
glyphname = hcircumflex;
kernLeft = germandbls;
kernRight = c_h;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(225,830,o),
(225,838,qs),
(225,854,o),
(190,899,o),
(144,941,o),
(101,971,o),
(92,971,qs),
(85,971,o),
(42,942,o),
(-4,899,o),
(-40,850,o),
(-40,831,qs),
(-40,826,o),
(-33,817,o),
(-27,817,qs),
(-22,817,o),
(4,830,o),
(37,849,o),
(75,870,o),
(92,879,q),
(109,870,o),
(147,849,o),
(181,830,o),
(207,817,o),
(212,817,qs),
(219,817,o)
);
},
{
closed = 1;
nodes = (
(84,0,o),
(103,1,o),
(130,1,o),
(150,1,qs),
(173,1,o),
(220,2,o),
(230,2,qs),
(254,2,o),
(278,15,o),
(278,36,qs),
(278,60,o),
(255,77,o),
(228,77,qs),
(156,77,l),
(156,182,ls),
(156,213,o),
(181,271,o),
(223,316,o),
(277,343,o),
(307,343,qs),
(325,343,o),
(347,334,o),
(353,329,qs),
(360,323,o),
(369,307,o),
(375,280,o),
(377,241,o),
(377,211,qs),
(377,194,o),
(376,151,o),
(375,109,o),
(374,72,o),
(373,61,qs),
(372,49,o),
(370,32,o),
(364,21,o),
(353,14,o),
(343,10,qs),
(321,2,o),
(321,-28,qs),
(321,-48,o),
(361,-59,o),
(407,-59,qs),
(430,-59,o),
(460,-58,o),
(468,-58,qs),
(482,-58,o),
(529,-56,o),
(542,-56,qs),
(558,-56,o),
(584,-39,o),
(584,-19,qs),
(584,6,o),
(549,19,o),
(527,19,qs),
(466,19,l),
(466,187,ls),
(466,256,o),
(455,342,o),
(448,360,qs),
(431,402,o),
(372,430,o),
(326,430,qs),
(300,430,o),
(247,415,o),
(202,389,o),
(167,353,o),
(158,332,q),
(158,791,ls),
(158,812,o),
(136,823,o),
(101,823,qs),
(18,823,o),
(-51,800,o),
(-51,784,qs),
(-51,764,o),
(-9,751,o),
(21,751,qs),
(52,751,ls),
(60,751,o),
(66,732,o),
(66,721,qs),
(66,701,o),
(66,655,o),
(66,583,o),
(65,477,o),
(64,398,qs),
(63,294,o),
(61,166,o),
(61,135,qs),
(61,100,o),
(48,74,o),
(32,72,qs),
(18,70,o),
(-2,53,o),
(-2,37,qs),
(-2,12,o),
(32,0,o),
(61,0,qs),
(69,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
5 1 5 2 57 1 10 9 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 2 5 2 106 1 11 2 0 5 4 5 0 4 104 0 7 0 8 7 8 87 0 4 4 5 83 0 5 5 12 67 0 9 9 6 83 0 6 6 15 67 0 10 10 3 84 12 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 5 2 106 1 11 2 0 5 4 5 0 4 104 0 6 0 9 10 6 9 91 0 7 0 8 7 8 87 0 4 4 5 83 0 5 5 12 67 0 10 10 3 84 12 1 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 2 5 2 106 1 11 2 0 5 4 5 0 4 104 0 6 0 9 10 6 9 91 0 7 0 8 7 8 87 0 4 4 5 83 0 5 5 14 67 0 10 10 3 84 12 1 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
27 26 1 0 113 111 106 104 83 75 71 69 63 61 54 52 48 45 26 125 27 117 19 17 11 9 0 25 1 25 13 15
CALL[ ]	/* CallFunction */";
};
width = 566;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
ref = .ttfautohint;
},
{
alignment = -1;
ref = h;
},
{
alignment = -1;
pos = (-72,317);
ref = circumflex;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
106 1 9 11 91 1 6 7 92 1 3 2 24 1 4 3 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 11 9 11 106 10 12 2 9 7 9 106 0 0 0 1 0 1 87 0 6 6 7 83 0 7 7 12 67 0 2 2 8 83 0 8 8 15 67 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 11 9 11 106 10 12 2 9 7 9 106 0 8 0 2 3 8 2 91 0 0 0 1 0 1 87 0 6 6 7 83 0 7 7 12 67 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 11 9 11 106 10 12 2 9 7 9 106 0 8 0 2 3 8 2 91 0 0 0 1 0 1 87 0 6 6 7 83 0 7 7 14 67 5 1 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
102 101 119 117 112 110 101 125 102 125 96 94 89 87 80 76 62 59 55 46 42 40 35 33 118 33 13 28
CALL[ ]	/* CallFunction */";
};
width = 551;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(431,358,o),
(401,400,o),
(350,428,o),
(309,428,qs),
(255,428,o),
(169,375,o),
(143,327,q),
(143,726,ls),
(143,767,o),
(130,799,o),
(101,799,qs),
(95,799,o),
(53,797,o),
(6,793,o),
(-30,783,o),
(-30,776,qs),
(-30,769,o),
(-3,766,o),
(11,766,qs),
(81,766,ls),
(103,766,o),
(103,734,qs),
(103,690,o),
(103,605,o),
(104,527,o),
(104,460,o),
(104,436,qs),
(104,381,o),
(102,270,o),
(100,172,o),
(98,94,o),
(97,72,qs),
(96,49,o),
(85,34,o),
(71,32,qs),
(33,28,o),
(-9,20,o),
(-9,10,qs),
(-9,3,o),
(11,0,o),
(25,0,qs),
(48,0,o),
(93,3,o),
(116,3,qs),
(139,3,o),
(203,0,o),
(232,0,qs),
(240,0,o),
(252,8,o),
(252,14,qs),
(252,23,o),
(226,32,o),
(210,32,qs),
(137,32,l),
(137,193,ls),
(137,233,o),
(159,308,o),
(201,365,o),
(261,399,o),
(299,399,qs),
(332,399,o),
(372,375,o),
(393,340,o),
(401,302,o),
(403,288,qs),
(405,270,o),
(407,221,o),
(409,173,o),
(409,132,o),
(409,120,qs),
(409,108,o),
(409,76,o),
(408,42,o),
(407,11,o),
(406,0,qs),
(404,-16,o),
(391,-29,o),
(371,-31,qs),
(360,-32,o),
(338,-34,o),
(318,-39,o),
(306,-45,o),
(306,-50,qs),
(306,-61,o),
(337,-61,qs),
(351,-61,o),
(402,-58,o),
(424,-58,qs),
(445,-58,o),
(502,-61,o),
(518,-61,qs),
(547,-61,o),
(547,-50,qs),
(547,-40,o),
(513,-32,o),
(493,-32,qs),
(449,-32,l),
(449,176,ls),
(449,215,o),
(448,267,o),
(445,293,qs),
(443,311,o)
);
},
{
closed = 1;
nodes = (
(201,852,qs),
(201,861,o),
(168,901,o),
(125,941,o),
(82,971,o),
(73,971,qs),
(64,971,o),
(23,941,o),
(-21,901,o),
(-54,861,o),
(-54,852,qs),
(-54,841,o),
(-46,841,qs),
(-41,841,o),
(-15,859,o),
(18,885,o),
(56,915,o),
(73,927,q),
(90,915,o),
(128,885,o),
(162,859,o),
(188,841,o),
(193,841,qs),
(201,841,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
107 1 8 10 94 1 3 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 10 8 10 106 9 11 2 8 6 8 106 0 0 0 1 0 1 87 0 5 5 6 83 0 6 6 14 67 0 2 2 7 83 0 7 7 15 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 10 8 10 106 9 11 2 8 6 8 106 0 7 0 2 3 7 2 91 0 0 0 1 0 1 87 0 5 5 6 83 0 6 6 14 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 10 8 10 106 9 11 2 8 6 8 106 0 6 0 5 7 6 5 92 0 7 0 2 3 7 2 91 0 0 0 1 0 1 87 0 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
103 102 120 118 113 111 102 125 103 125 98 96 91 88 83 80 61 53 49 47 42 40 131 36 12 17
CALL[ ]	/* CallFunction */";
};
width = 529;
}
);
note = hcircumflex;
unicode = 293;
},
{
glyphname = i;
kernLeft = dotlessi;
kernRight = dotlessi;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(211,417,o),
(199,436,o),
(184,436,qs),
(167,436,o),
(111,434,o),
(82,432,qs),
(37,429,o),
(2,415,o),
(2,395,qs),
(2,381,o),
(16,362,o),
(33,362,qs),
(36,362,o),
(56,363,o),
(78,363,o),
(98,364,o),
(101,364,qs),
(112,364,o),
(119,345,o),
(120,331,qs),
(122,298,o),
(124,247,o),
(124,213,qs),
(124,205,o),
(123,175,o),
(122,140,o),
(121,106,o),
(120,95,qs),
(119,84,o),
(96,76,o),
(80,74,qs),
(54,72,o),
(24,55,o),
(24,36,qs),
(24,23,o),
(37,9,o),
(56,2,o),
(81,0,o),
(93,0,qs),
(282,0,ls),
(295,0,o),
(312,21,o),
(312,37,qs),
(312,60,o),
(286,76,o),
(264,76,qs),
(211,76,l),
(211,401,ls)
);
},
{
closed = 1;
nodes = (
(127,509,o),
(153,509,qs),
(163,509,o),
(187,517,o),
(208,535,o),
(221,563,o),
(221,584,qs),
(221,615,o),
(185,650,o),
(160,650,qs),
(142,650,o),
(116,635,o),
(100,613,o),
(92,589,o),
(92,580,qs),
(92,550,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
27 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 0 5 3 4 5 91 0 2 2 3 83 0 3 3 15 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 4 0 5 3 4 5 91 0 3 0 2 0 3 2 91 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
62 60 54 52 45 40 36 29 52 32 6 17
CALL[ ]	/* CallFunction */";
};
width = 306;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(197,417,o),
(191,436,o),
(179,436,qs),
(171,436,o),
(147,436,o),
(118,434,o),
(88,432,o),
(75,431,qs),
(58,429,o),
(31,427,o),
(12,421,o),
(2,409,o),
(2,397,qs),
(2,391,o),
(22,381,o),
(30,381,qs),
(34,381,o),
(56,383,o),
(81,384,o),
(104,386,o),
(108,386,qs),
(116,386,o),
(122,371,o),
(123,359,qs),
(125,321,o),
(127,251,o),
(127,213,qs),
(127,184,o),
(126,109,o),
(123,77,qs),
(121,66,o),
(105,59,o),
(83,56,qs),
(69,54,o),
(48,51,o),
(32,46,o),
(24,36,o),
(24,27,qs),
(24,17,o),
(37,6,o),
(56,1,o),
(81,0,o),
(93,0,qs),
(272,0,ls),
(284,0,o),
(302,15,o),
(302,28,qs),
(302,48,o),
(276,58,o),
(254,58,qs),
(197,58,l),
(197,401,ls)
);
},
{
closed = 1;
nodes = (
(125,520,o),
(146,520,qs),
(164,520,o),
(203,548,o),
(203,584,qs),
(203,610,o),
(173,639,o),
(153,639,qs),
(138,639,o),
(116,626,o),
(103,608,o),
(96,587,o),
(96,580,qs),
(96,554,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
27 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
27 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 6 0 7 5 6 7 91 4 3 2 2 2 5 83 0 5 5 15 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 6 0 7 5 6 7 91 0 5 4 3 2 2 0 5 2 91 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 4 2 0 2 4 0 104 0 6 0 7 5 6 7 91 0 5 3 1 2 4 5 2 91 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
64 62 58 56 49 44 36 34 33 32 31 29 68 32 8 17
CALL[ ]	/* CallFunction */";
};
width = 292;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
alignment = -1;
pos = (2,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (72,0);
ref = dotaccent;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
23 1 0 3 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
23 1 0 5 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 8 0 9 6 8 9 91 5 4 2 3 3 6 83 7 1 6 6 15 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 8 0 9 6 8 9 91 7 1 6 5 4 2 3 0 6 3 91 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 5 3 0 3 5 96 0 8 0 9 6 8 9 91 7 1 6 4 1 3 5 6 3 91 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
56 54 39 49 20 33 17 43 18 68 33 10 35
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = i;
unicode = 105;
},
{
glyphname = dotlessi;
kernLeft = dotlessi;
kernRight = dotlessi;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(213,417,o),
(207,436,o),
(195,436,qs),
(178,436,o),
(109,434,o),
(80,431,qs),
(45,427,o),
(0,413,o),
(0,391,qs),
(0,383,o),
(11,375,o),
(26,370,o),
(41,369,o),
(45,369,qs),
(48,369,o),
(65,371,o),
(83,372,o),
(100,374,o),
(103,374,qs),
(111,374,o),
(118,360,o),
(118,357,qs),
(119,341,o),
(121,303,o),
(122,264,o),
(122,228,o),
(122,213,qs),
(122,184,o),
(121,110,o),
(118,79,qs),
(117,59,o),
(103,58,qs),
(69,55,o),
(22,43,o),
(22,28,qs),
(22,18,o),
(38,7,o),
(63,1,o),
(94,0,o),
(108,0,qs),
(267,0,ls),
(272,0,o),
(288,2,o),
(303,8,o),
(314,20,o),
(314,29,qs),
(314,60,o),
(249,60,qs),
(213,60,l),
(213,401,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
19 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
19 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
4 3 2 2 5 0 5 2 0 104 0 5 5 15 67 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 5 2 5 106 4 3 2 2 0 2 106 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 5 2 5 106 3 1 2 4 2 106 0 4 0 4 106 0 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
47 44 37 34 33 32 31 29 69 32 6 17
CALL[ ]	/* CallFunction */";
};
width = 303;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(196,417,o),
(190,436,o),
(178,436,qs),
(170,436,o),
(146,435,o),
(117,434,o),
(87,432,o),
(74,431,qs),
(39,428,o),
(1,418,o),
(1,399,qs),
(1,393,o),
(10,385,o),
(22,382,o),
(35,381,o),
(39,381,qs),
(43,381,o),
(62,383,o),
(83,384,o),
(103,386,o),
(107,386,qs),
(115,386,o),
(121,375,o),
(122,369,qs),
(124,329,o),
(126,254,o),
(126,213,qs),
(126,181,o),
(125,101,o),
(122,67,qs),
(121,56,o),
(111,48,o),
(97,46,qs),
(64,41,o),
(23,32,o),
(23,22,qs),
(23,14,o),
(39,5,o),
(62,1,o),
(90,0,o),
(102,0,qs),
(261,0,ls),
(272,0,o),
(301,8,o),
(301,23,qs),
(301,48,o),
(243,48,qs),
(196,48,l),
(196,401,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
24 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
24 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
4 3 2 2 2 5 83 0 5 5 15 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 5 4 3 2 2 0 5 2 91 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 4 2 0 2 4 0 104 0 5 3 1 2 4 5 2 91 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
46 41 33 31 30 29 28 26 67 32 6 17
CALL[ ]	/* CallFunction */";
};
width = 290;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(172,417,o),
(166,436,o),
(154,436,qs),
(141,436,o),
(87,433,o),
(65,431,qs),
(30,429,o),
(2,421,o),
(2,412,qs),
(2,404,o),
(22,401,o),
(30,401,qs),
(34,401,o),
(58,403,o),
(84,404,o),
(108,406,o),
(113,406,qs),
(121,406,o),
(127,397,o),
(128,389,qs),
(130,344,o),
(132,259,o),
(132,213,qs),
(132,177,o),
(131,85,o),
(128,47,qs),
(127,36,o),
(110,28,o),
(88,26,qs),
(24,22,o),
(24,12,qs),
(24,3,o),
(69,0,o),
(93,0,qs),
(252,0,ls),
(263,0,o),
(282,4,o),
(282,13,qs),
(282,21,o),
(256,28,o),
(234,28,qs),
(172,28,l),
(172,401,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
22 1 0 3 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
22 1 0 5 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 4 2 3 3 6 83 7 1 6 6 15 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
7 1 6 5 4 2 3 0 6 3 91 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 5 3 0 3 5 96 7 1 6 4 1 3 5 6 3 91 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
49 20 33 17 43 18 68 32 8 23
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = dotlessi;
unicode = 305;
},
{
glyphname = iacute;
kernLeft = dotlessi;
kernRight = dotlessi;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(215,436,o),
(197,436,qs),
(188,436,o),
(161,435,o),
(129,434,o),
(96,432,o),
(82,431,qs),
(56,429,o),
(25,423,o),
(8,413,o),
(2,398,o),
(2,388,qs),
(2,379,o),
(20,369,o),
(30,369,qs),
(33,369,o),
(55,371,o),
(80,372,o),
(102,374,o),
(105,374,qs),
(112,374,o),
(118,360,o),
(120,341,qs),
(123,308,o),
(124,247,o),
(124,213,qs),
(124,205,o),
(124,175,o),
(123,140,o),
(121,106,o),
(120,95,qs),
(118,85,o),
(95,76,o),
(80,74,qs),
(48,69,o),
(24,54,o),
(24,36,qs),
(24,23,o),
(37,9,o),
(56,2,o),
(81,0,o),
(93,0,qs),
(286,0,ls),
(299,0,o),
(316,22,o),
(316,37,qs),
(316,60,o),
(294,76,o),
(268,76,qs),
(215,76,l),
(215,401,ls)
);
},
{
closed = 1;
nodes = (
(220,689,o),
(188,690,qs),
(169,690,o),
(126,641,o),
(90,580,o),
(66,527,o),
(66,524,qs),
(66,513,o),
(92,502,o),
(103,502,qs),
(112,502,o),
(142,518,o),
(176,543,o),
(212,575,o),
(240,606,o),
(258,633,o),
(258,642,qs),
(258,661,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 7 6 7 106 0 6 5 6 106 4 3 2 2 2 5 83 0 5 5 15 67 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 7 6 7 106 0 6 5 6 106 0 5 4 3 2 2 0 5 2 91 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 7 6 7 106 0 6 5 6 106 0 4 2 0 2 4 0 104 0 5 3 1 2 4 5 2 91 0 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
67 65 59 57 49 44 36 34 33 32 31 29 52 32 8 17
CALL[ ]	/* CallFunction */";
};
width = 306;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(197,417,o),
(191,436,o),
(179,436,qs),
(171,436,o),
(147,436,o),
(118,434,o),
(88,432,o),
(75,431,qs),
(58,429,o),
(31,427,o),
(12,421,o),
(2,409,o),
(2,397,qs),
(2,391,o),
(22,381,o),
(30,381,qs),
(34,381,o),
(56,383,o),
(81,384,o),
(104,386,o),
(108,386,qs),
(116,386,o),
(122,371,o),
(123,359,qs),
(125,321,o),
(127,251,o),
(127,213,qs),
(127,184,o),
(126,109,o),
(123,77,qs),
(121,66,o),
(105,59,o),
(83,56,qs),
(69,54,o),
(48,51,o),
(32,46,o),
(24,36,o),
(24,27,qs),
(24,17,o),
(37,6,o),
(56,1,o),
(81,0,o),
(93,0,qs),
(272,0,ls),
(284,0,o),
(302,15,o),
(302,28,qs),
(302,48,o),
(276,58,o),
(254,58,qs),
(197,58,l),
(197,401,ls)
);
},
{
closed = 1;
nodes = (
(210,671,o),
(187,671,qs),
(177,671,o),
(154,650,o),
(129,619,o),
(105,582,o),
(87,549,o),
(76,525,o),
(76,523,qs),
(76,513,o),
(93,505,o),
(101,505,qs),
(112,505,o),
(157,537,o),
(202,579,o),
(236,622,o),
(236,633,qs),
(236,650,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
27 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
27 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 7 6 7 106 0 6 5 6 106 4 3 2 2 2 5 83 0 5 5 15 67 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 7 6 7 106 0 6 5 6 106 0 5 4 3 2 2 0 5 2 91 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 7 6 7 106 0 6 5 6 106 0 4 2 0 2 4 0 104 0 5 3 1 2 4 5 2 91 0 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
68 66 58 56 49 44 36 34 33 32 31 29 68 32 8 17
CALL[ ]	/* CallFunction */";
};
width = 292;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(172,417,o),
(166,436,o),
(154,436,qs),
(141,436,o),
(87,433,o),
(65,431,qs),
(30,429,o),
(2,421,o),
(2,412,qs),
(2,404,o),
(22,401,o),
(30,401,qs),
(34,401,o),
(58,403,o),
(84,404,o),
(108,406,o),
(113,406,qs),
(121,406,o),
(127,397,o),
(128,389,qs),
(130,344,o),
(132,259,o),
(132,213,qs),
(132,177,o),
(131,85,o),
(128,47,qs),
(127,36,o),
(110,28,o),
(88,26,qs),
(24,22,o),
(24,12,qs),
(24,3,o),
(69,0,o),
(93,0,qs),
(252,0,ls),
(263,0,o),
(282,4,o),
(282,13,qs),
(282,21,o),
(256,28,o),
(234,28,qs),
(172,28,l),
(172,401,ls)
);
},
{
closed = 1;
nodes = (
(194,640,o),
(186,640,qs),
(179,640,o),
(147,610,o),
(115,570,o),
(91,530,o),
(91,521,qs),
(91,510,o),
(99,510,qs),
(106,510,o),
(141,538,o),
(177,574,o),
(205,610,o),
(205,618,qs),
(205,632,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
22 1 0 3 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
22 1 0 5 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 9 8 9 106 0 8 6 8 106 5 4 2 3 3 6 83 7 1 6 6 15 67 2 1 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 9 8 9 106 0 8 6 8 106 7 1 6 5 4 2 3 0 6 3 91 2 1 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 9 8 9 106 0 8 6 8 106 0 5 3 0 3 5 96 7 1 6 4 1 3 5 6 3 91 2 1 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
56 54 39 49 20 33 17 43 18 68 32 10 24
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = iacute;
unicode = 237;
},
{
glyphname = ibreve;
kernLeft = dotlessi;
kernRight = dotlessi;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(215,417,o),
(209,436,o),
(197,436,qs),
(188,436,o),
(161,436,o),
(129,435,o),
(96,433,o),
(82,431,qs),
(65,429,o),
(35,427,o),
(14,419,o),
(2,404,o),
(2,388,qs),
(2,383,o),
(22,369,o),
(30,369,qs),
(33,369,o),
(55,371,o),
(80,372,o),
(102,374,o),
(105,374,qs),
(113,374,o),
(119,355,o),
(120,341,qs),
(122,308,o),
(124,247,o),
(124,213,qs),
(124,205,o),
(124,175,o),
(123,140,o),
(121,106,o),
(120,95,qs),
(118,82,o),
(94,77,o),
(80,74,qs),
(67,71,o),
(46,68,o),
(32,61,o),
(24,48,o),
(24,36,qs),
(24,23,o),
(37,9,o),
(56,2,o),
(81,0,o),
(93,0,qs),
(286,0,ls),
(299,0,o),
(316,22,o),
(316,37,qs),
(316,65,o),
(290,76,o),
(268,76,qs),
(215,76,l),
(215,401,ls)
);
},
{
closed = 1;
nodes = (
(273,619,o),
(258,619,qs),
(245,619,o),
(226,601,o),
(226,590,qs),
(226,582,o),
(199,567,o),
(170,567,qs),
(161,567,o),
(140,569,o),
(122,575,o),
(111,584,o),
(111,590,qs),
(111,607,o),
(92,619,o),
(75,619,qs),
(58,619,o),
(43,602,o),
(43,589,qs),
(43,557,o),
(110,510,o),
(175,510,qs),
(194,510,o),
(237,520,o),
(273,540,o),
(296,569,o),
(296,589,qs),
(296,609,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
29 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
29 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
10 1 8 9 8 106 0 9 0 7 5 9 7 91 4 3 2 2 2 5 83 6 1 5 5 15 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
10 1 8 9 8 106 0 9 0 7 5 9 7 91 6 1 5 4 3 2 2 0 5 2 92 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
10 1 8 9 8 106 0 9 0 7 6 9 7 91 0 6 5 2 6 79 0 5 4 3 2 2 0 5 2 92 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
10 1 8 9 8 106 0 4 2 0 2 4 0 104 0 9 0 7 6 9 7 91 0 6 5 2 6 79 0 5 3 1 2 4 5 2 92 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
80 78 74 72 66 64 60 58 51 46 44 43 38 36 35 34 33 31 52 32 11 17
CALL[ ]	/* CallFunction */";
};
width = 306;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(197,417,o),
(191,436,o),
(179,436,qs),
(171,436,o),
(147,436,o),
(118,434,o),
(88,432,o),
(75,431,qs),
(58,429,o),
(31,427,o),
(12,421,o),
(2,409,o),
(2,397,qs),
(2,391,o),
(22,381,o),
(30,381,qs),
(34,381,o),
(56,383,o),
(81,384,o),
(104,386,o),
(108,386,qs),
(116,386,o),
(122,371,o),
(123,359,qs),
(125,321,o),
(127,251,o),
(127,213,qs),
(127,184,o),
(126,109,o),
(123,77,qs),
(121,66,o),
(105,59,o),
(83,56,qs),
(69,54,o),
(48,51,o),
(32,46,o),
(24,36,o),
(24,27,qs),
(24,17,o),
(37,6,o),
(56,1,o),
(81,0,o),
(93,0,qs),
(272,0,ls),
(284,0,o),
(302,15,o),
(302,28,qs),
(302,48,o),
(276,58,o),
(254,58,qs),
(197,58,l),
(197,401,ls)
);
},
{
closed = 1;
nodes = (
(262,617,o),
(252,617,qs),
(241,617,o),
(226,601,o),
(226,590,qs),
(226,577,o),
(191,555,o),
(162,555,qs),
(151,555,o),
(128,559,o),
(109,567,o),
(97,580,o),
(97,590,qs),
(97,605,o),
(83,617,o),
(69,617,qs),
(43,617,o),
(43,589,qs),
(43,558,o),
(108,510,o),
(165,510,qs),
(184,510,o),
(226,520,o),
(260,540,o),
(282,570,o),
(282,589,qs),
(282,609,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
27 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
27 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
9 1 7 8 2 7 79 0 8 0 6 5 8 6 91 4 3 2 2 2 5 83 0 5 5 15 67 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
9 1 7 8 2 7 79 0 8 0 6 5 8 6 91 0 5 4 3 2 2 0 5 2 91 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 4 2 0 2 4 0 104 9 1 7 8 2 7 79 0 8 0 6 5 8 6 91 0 5 3 1 2 4 5 2 91 0 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
77 75 71 69 63 61 58 56 49 44 36 34 33 32 31 29 68 32 10 17
CALL[ ]	/* CallFunction */";
};
width = 292;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(172,417,o),
(166,436,o),
(154,436,qs),
(141,436,o),
(87,433,o),
(65,431,qs),
(30,429,o),
(2,421,o),
(2,412,qs),
(2,404,o),
(22,401,o),
(30,401,qs),
(34,401,o),
(58,403,o),
(84,404,o),
(108,406,o),
(113,406,qs),
(121,406,o),
(127,397,o),
(128,389,qs),
(130,344,o),
(132,259,o),
(132,213,qs),
(132,177,o),
(131,85,o),
(128,47,qs),
(127,36,o),
(110,28,o),
(88,26,qs),
(24,22,o),
(24,12,qs),
(24,3,o),
(69,0,o),
(93,0,qs),
(252,0,ls),
(263,0,o),
(282,4,o),
(282,13,qs),
(282,21,o),
(256,28,o),
(234,28,qs),
(172,28,l),
(172,401,ls)
);
},
{
closed = 1;
nodes = (
(251,613,o),
(243,613,qs),
(226,613,o),
(226,590,qs),
(226,580,o),
(213,560,o),
(191,545,o),
(164,535,o),
(151,535,qs),
(122,535,o),
(77,559,o),
(77,590,qs),
(77,602,o),
(71,613,o),
(60,613,qs),
(43,613,o),
(43,589,qs),
(43,574,o),
(60,546,o),
(89,523,o),
(128,510,o),
(151,510,qs),
(170,510,o),
(210,521,o),
(242,541,o),
(262,571,o),
(262,589,qs),
(262,605,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
22 1 0 3 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
22 1 0 5 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
11 1 9 10 3 9 79 0 10 0 8 6 10 8 91 5 4 2 3 3 6 83 7 1 6 6 15 67 2 1 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
11 1 9 10 3 9 79 0 10 0 8 6 10 8 91 7 1 6 5 4 2 3 0 6 3 91 2 1 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 5 3 0 3 5 96 11 1 9 10 3 9 79 0 10 0 8 6 10 8 91 7 1 6 4 1 3 5 6 3 91 2 1 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
69 67 62 60 56 54 39 49 20 33 17 43 18 68 32 12 24
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = ibreve;
unicode = 301;
},
{
glyphname = icircumflex;
kernLeft = dotlessi;
kernRight = dotlessi;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(215,417,o),
(209,436,o),
(197,436,qs),
(188,436,o),
(161,436,o),
(129,435,o),
(96,433,o),
(82,431,qs),
(65,429,o),
(35,427,o),
(14,419,o),
(2,404,o),
(2,388,qs),
(2,383,o),
(22,369,o),
(30,369,qs),
(33,369,o),
(55,371,o),
(80,372,o),
(102,374,o),
(105,374,qs),
(113,374,o),
(119,355,o),
(120,341,qs),
(122,308,o),
(124,247,o),
(124,213,qs),
(124,205,o),
(124,175,o),
(123,140,o),
(121,106,o),
(120,95,qs),
(118,82,o),
(94,77,o),
(80,74,qs),
(67,71,o),
(46,68,o),
(32,61,o),
(24,48,o),
(24,36,qs),
(24,23,o),
(37,9,o),
(56,2,o),
(81,0,o),
(93,0,qs),
(286,0,ls),
(299,0,o),
(316,22,o),
(316,37,qs),
(316,65,o),
(290,76,o),
(268,76,qs),
(215,76,l),
(215,401,ls)
);
},
{
closed = 1;
nodes = (
(268,523,o),
(268,531,qs),
(268,547,o),
(233,592,o),
(187,634,o),
(144,664,o),
(135,664,qs),
(128,664,o),
(85,635,o),
(39,592,o),
(3,543,o),
(3,524,qs),
(3,519,o),
(10,510,o),
(16,510,qs),
(21,510,o),
(47,523,o),
(80,542,o),
(118,563,o),
(135,572,q),
(152,563,o),
(190,542,o),
(224,523,o),
(250,510,o),
(255,510,qs),
(262,510,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
59 1 7 9 29 1 0 2 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
59 1 7 9 29 1 0 4 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 9 7 9 106 8 10 2 7 5 7 106 4 3 2 2 2 5 83 6 1 5 5 15 67 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 9 7 9 106 8 10 2 7 5 7 106 6 1 5 4 3 2 2 0 5 2 91 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 9 7 9 106 8 10 2 7 6 7 106 0 6 5 2 6 79 0 5 4 3 2 2 0 5 2 91 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 9 7 9 106 8 10 2 7 6 7 106 0 4 2 0 2 4 0 104 0 6 5 2 6 79 0 5 3 1 2 4 5 2 91 0 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
55 54 73 71 65 63 54 79 55 79 51 46 44 43 38 36 35 34 33 31 52 32 11 17
CALL[ ]	/* CallFunction */";
};
width = 306;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(197,417,o),
(191,436,o),
(179,436,qs),
(171,436,o),
(147,436,o),
(118,434,o),
(88,432,o),
(75,431,qs),
(58,429,o),
(31,427,o),
(12,421,o),
(2,409,o),
(2,397,qs),
(2,391,o),
(22,381,o),
(30,381,qs),
(34,381,o),
(56,383,o),
(81,384,o),
(104,386,o),
(108,386,qs),
(116,386,o),
(122,371,o),
(123,359,qs),
(125,321,o),
(127,251,o),
(127,213,qs),
(127,184,o),
(126,109,o),
(123,77,qs),
(121,66,o),
(105,59,o),
(83,56,qs),
(69,54,o),
(48,51,o),
(32,46,o),
(24,36,o),
(24,27,qs),
(24,17,o),
(37,6,o),
(56,1,o),
(81,0,o),
(93,0,qs),
(272,0,ls),
(284,0,o),
(302,15,o),
(302,28,qs),
(302,48,o),
(276,58,o),
(254,58,qs),
(197,58,l),
(197,401,ls)
);
},
{
closed = 1;
nodes = (
(259,520,o),
(259,527,qs),
(259,540,o),
(225,584,o),
(180,625,o),
(137,655,o),
(128,655,qs),
(120,655,o),
(78,626,o),
(33,584,o),
(-2,539,o),
(-2,523,qs),
(-2,510,o),
(9,510,qs),
(14,510,o),
(40,525,o),
(73,546,o),
(111,571,o),
(128,581,q),
(145,571,o),
(183,546,o),
(217,525,o),
(243,510,o),
(248,510,qs),
(254,510,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
57 1 6 8 27 1 0 2 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
57 1 6 8 27 1 0 4 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 8 6 8 106 7 9 2 6 5 6 106 4 3 2 2 2 5 83 0 5 5 15 67 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 8 6 8 106 7 9 2 6 5 6 106 0 5 4 3 2 2 0 5 2 91 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 8 6 8 106 7 9 2 6 5 6 106 0 4 2 0 2 4 0 104 0 5 3 1 2 4 5 2 91 0 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
53 52 70 68 63 61 52 76 53 76 49 44 36 34 33 32 31 29 68 32 10 17
CALL[ ]	/* CallFunction */";
};
width = 292;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(172,417,o),
(166,436,o),
(154,436,qs),
(141,436,o),
(87,433,o),
(65,431,qs),
(30,429,o),
(2,421,o),
(2,412,qs),
(2,404,o),
(22,401,o),
(30,401,qs),
(34,401,o),
(58,403,o),
(84,404,o),
(108,406,o),
(113,406,qs),
(121,406,o),
(127,397,o),
(128,389,qs),
(130,344,o),
(132,259,o),
(132,213,qs),
(132,177,o),
(131,85,o),
(128,47,qs),
(127,36,o),
(110,28,o),
(88,26,qs),
(24,22,o),
(24,12,qs),
(24,3,o),
(69,0,o),
(93,0,qs),
(252,0,ls),
(263,0,o),
(282,4,o),
(282,13,qs),
(282,21,o),
(256,28,o),
(234,28,qs),
(172,28,l),
(172,401,ls)
);
},
{
closed = 1;
nodes = (
(246,521,qs),
(246,530,o),
(213,570,o),
(170,610,o),
(127,640,o),
(118,640,qs),
(109,640,o),
(68,610,o),
(24,570,o),
(-9,530,o),
(-9,521,qs),
(-9,510,o),
(-1,510,qs),
(4,510,o),
(30,528,o),
(63,554,o),
(101,584,o),
(118,596,q),
(135,584,o),
(173,554,o),
(207,528,o),
(233,510,o),
(238,510,qs),
(246,510,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
48 1 8 10 22 1 0 3 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
48 1 8 10 22 1 0 5 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 10 8 10 106 9 11 2 8 6 8 106 5 4 2 3 3 6 83 7 1 6 6 15 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 10 8 10 106 9 11 2 8 6 8 106 7 1 6 5 4 2 3 0 6 3 92 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 10 8 10 106 9 11 2 8 6 8 106 0 5 3 0 3 5 96 7 1 6 4 1 3 5 6 3 92 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
44 43 61 59 54 52 43 66 44 66 49 20 33 17 43 18 68 32 12 23
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = icircumflex;
unicode = 238;
},
{
glyphname = idieresis;
kernLeft = dotlessi;
kernRight = dotlessi;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(215,417,o),
(209,436,o),
(197,436,qs),
(188,436,o),
(161,436,o),
(129,435,o),
(96,433,o),
(82,431,qs),
(65,429,o),
(35,427,o),
(14,419,o),
(2,404,o),
(2,388,qs),
(2,383,o),
(22,369,o),
(30,369,qs),
(33,369,o),
(55,371,o),
(80,372,o),
(102,374,o),
(105,374,qs),
(113,374,o),
(119,355,o),
(120,341,qs),
(122,308,o),
(124,247,o),
(124,213,qs),
(124,205,o),
(124,175,o),
(123,140,o),
(121,106,o),
(120,95,qs),
(118,82,o),
(94,77,o),
(80,74,qs),
(67,71,o),
(46,68,o),
(32,61,o),
(24,48,o),
(24,36,qs),
(24,23,o),
(37,9,o),
(56,2,o),
(81,0,o),
(93,0,qs),
(286,0,ls),
(299,0,o),
(316,22,o),
(316,37,qs),
(316,65,o),
(290,76,o),
(268,76,qs),
(215,76,l),
(215,401,ls)
);
},
{
closed = 1;
nodes = (
(35,509,o),
(60,509,qs),
(71,509,o),
(95,515,o),
(114,531,o),
(127,558,o),
(127,579,qs),
(127,606,o),
(91,640,o),
(67,640,qs),
(49,640,o),
(24,626,o),
(8,606,o),
(1,583,o),
(1,575,qs),
(1,546,o)
);
},
{
closed = 1;
nodes = (
(242,486,o),
(267,486,qs),
(278,486,o),
(302,492,o),
(321,508,o),
(334,535,o),
(334,556,qs),
(334,583,o),
(298,617,o),
(274,617,qs),
(256,617,o),
(231,603,o),
(215,583,o),
(208,560,o),
(208,552,qs),
(208,523,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
29 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
29 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 7 0 8 10 7 8 91 0 9 0 10 5 9 10 91 4 3 2 2 2 5 83 6 1 5 5 15 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 7 0 8 10 7 8 91 0 9 0 10 5 9 10 91 6 1 5 4 3 2 2 0 5 2 91 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 7 0 8 10 7 8 91 0 9 0 10 6 9 10 91 0 6 5 2 6 79 0 5 4 3 2 2 0 5 2 91 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 4 2 0 2 4 0 104 0 7 0 8 10 7 8 91 0 9 0 10 6 9 10 91 0 6 5 2 6 79 0 5 3 1 2 4 5 2 91 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
84 82 76 74 68 66 60 58 51 46 44 43 38 36 35 34 33 31 52 32 11 17
CALL[ ]	/* CallFunction */";
};
width = 306;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(197,417,o),
(191,436,o),
(179,436,qs),
(171,436,o),
(147,436,o),
(118,434,o),
(88,432,o),
(75,431,qs),
(58,429,o),
(31,427,o),
(12,421,o),
(2,409,o),
(2,397,qs),
(2,391,o),
(22,381,o),
(30,381,qs),
(34,381,o),
(56,383,o),
(81,384,o),
(104,386,o),
(108,386,qs),
(116,386,o),
(122,371,o),
(123,359,qs),
(125,321,o),
(127,251,o),
(127,213,qs),
(127,184,o),
(126,109,o),
(123,77,qs),
(121,66,o),
(105,59,o),
(83,56,qs),
(69,54,o),
(48,51,o),
(32,46,o),
(24,36,o),
(24,27,qs),
(24,17,o),
(37,6,o),
(56,1,o),
(81,0,o),
(93,0,qs),
(272,0,ls),
(284,0,o),
(302,15,o),
(302,28,qs),
(302,48,o),
(276,58,o),
(254,58,qs),
(197,58,l),
(197,401,ls)
);
},
{
closed = 1;
nodes = (
(33,518,o),
(53,518,qs),
(72,518,o),
(109,543,o),
(109,579,qs),
(109,602,o),
(80,631,o),
(60,631,qs),
(45,631,o),
(24,619,o),
(10,601,o),
(4,582,o),
(4,575,qs),
(4,550,o)
);
},
{
closed = 1;
nodes = (
(240,495,o),
(260,495,qs),
(279,495,o),
(316,520,o),
(316,556,qs),
(316,579,o),
(287,608,o),
(267,608,qs),
(252,608,o),
(231,596,o),
(217,578,o),
(211,559,o),
(211,552,qs),
(211,527,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
27 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
27 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 6 0 7 9 6 7 91 0 8 0 9 5 8 9 91 4 3 2 2 2 5 83 0 5 5 15 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 6 0 7 9 6 7 91 0 8 0 9 5 8 9 91 0 5 4 3 2 2 0 5 2 91 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 4 2 0 2 4 0 104 0 6 0 7 9 6 7 91 0 8 0 9 5 8 9 91 0 5 3 1 2 4 5 2 91 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
78 76 72 70 64 62 58 56 49 44 36 34 33 32 31 29 68 32 10 17
CALL[ ]	/* CallFunction */";
};
width = 292;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(172,417,o),
(166,436,o),
(154,436,qs),
(141,436,o),
(87,433,o),
(65,431,qs),
(30,429,o),
(2,421,o),
(2,412,qs),
(2,404,o),
(22,401,o),
(30,401,qs),
(34,401,o),
(58,403,o),
(84,404,o),
(108,406,o),
(113,406,qs),
(121,406,o),
(127,397,o),
(128,389,qs),
(130,344,o),
(132,259,o),
(132,213,qs),
(132,177,o),
(131,85,o),
(128,47,qs),
(127,36,o),
(110,28,o),
(88,26,qs),
(24,22,o),
(24,12,qs),
(24,3,o),
(69,0,o),
(93,0,qs),
(252,0,ls),
(263,0,o),
(282,4,o),
(282,13,qs),
(282,21,o),
(256,28,o),
(234,28,qs),
(172,28,l),
(172,401,ls)
);
},
{
closed = 1;
nodes = (
(29,533,o),
(43,533,qs),
(57,533,o),
(84,552,o),
(84,579,qs),
(84,596,o),
(64,616,o),
(50,616,qs),
(39,616,o),
(24,607,o),
(14,594,o),
(9,580,o),
(9,575,qs),
(9,557,o)
);
},
{
closed = 1;
nodes = (
(236,510,o),
(250,510,qs),
(264,510,o),
(291,529,o),
(291,556,qs),
(291,573,o),
(271,593,o),
(257,593,qs),
(246,593,o),
(231,584,o),
(221,571,o),
(216,557,o),
(216,552,qs),
(216,534,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
22 1 0 3 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
22 1 0 5 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 8 0 9 11 8 9 91 0 10 0 11 6 10 11 91 5 4 2 3 3 6 83 7 1 6 6 15 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 8 0 9 11 8 9 91 0 10 0 11 6 10 11 91 7 1 6 5 4 2 3 0 6 3 91 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 5 3 0 3 5 96 0 8 0 9 11 8 9 91 0 10 0 11 6 10 11 91 7 1 6 4 1 3 5 6 3 91 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
69 67 63 61 55 53 39 49 20 33 17 43 18 68 32 12 24
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = idieresis;
unicode = 239;
},
{
glyphname = igrave;
kernLeft = dotlessi;
kernRight = dotlessi;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(22,580,o),
(74,534,o),
(125,500,o),
(139,500,qs),
(150,500,o),
(176,511,o),
(176,522,qs),
(176,525,o),
(152,578,o),
(116,639,o),
(73,688,o),
(54,688,qs),
(22,687,o),
(-16,659,o),
(-16,640,qs),
(-16,627,o)
);
},
{
closed = 1;
nodes = (
(215,436,o),
(197,436,qs),
(188,436,o),
(161,435,o),
(129,434,o),
(96,432,o),
(82,431,qs),
(56,429,o),
(25,423,o),
(8,413,o),
(2,398,o),
(2,388,qs),
(2,379,o),
(20,369,o),
(30,369,qs),
(33,369,o),
(55,371,o),
(80,372,o),
(102,374,o),
(105,374,qs),
(112,374,o),
(118,360,o),
(120,341,qs),
(123,308,o),
(124,247,o),
(124,213,qs),
(124,205,o),
(124,175,o),
(123,140,o),
(121,106,o),
(120,95,qs),
(118,85,o),
(95,76,o),
(80,74,qs),
(48,69,o),
(24,54,o),
(24,36,qs),
(24,23,o),
(37,9,o),
(56,2,o),
(81,0,o),
(93,0,qs),
(286,0,ls),
(299,0,o),
(316,22,o),
(316,37,qs),
(316,60,o),
(294,76,o),
(268,76,qs),
(215,76,l),
(215,401,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 1 0 7 0 1 7 104 0 0 1 4 0 79 6 5 2 4 4 7 83 0 7 7 15 67 0 2 2 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 1 0 7 0 1 7 104 0 0 1 4 0 79 0 7 6 5 2 4 2 7 4 91 0 2 2 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 7 0 1 7 104 0 6 4 2 4 6 96 0 0 1 4 0 79 0 7 5 1 4 6 7 4 91 0 2 2 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
65 60 52 50 49 48 47 45 52 36 38 34 8 19
CALL[ ]	/* CallFunction */";
};
width = 306;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(197,417,o),
(191,436,o),
(179,436,qs),
(171,436,o),
(147,436,o),
(118,434,o),
(88,432,o),
(75,431,qs),
(58,429,o),
(31,427,o),
(12,421,o),
(2,409,o),
(2,397,qs),
(2,391,o),
(22,381,o),
(30,381,qs),
(34,381,o),
(56,383,o),
(81,384,o),
(104,386,o),
(108,386,qs),
(116,386,o),
(122,371,o),
(123,359,qs),
(125,321,o),
(127,251,o),
(127,213,qs),
(127,184,o),
(126,109,o),
(123,77,qs),
(121,66,o),
(105,59,o),
(83,56,qs),
(69,54,o),
(48,51,o),
(32,46,o),
(24,36,o),
(24,27,qs),
(24,17,o),
(37,6,o),
(56,1,o),
(81,0,o),
(93,0,qs),
(272,0,ls),
(284,0,o),
(302,15,o),
(302,28,qs),
(302,48,o),
(276,58,o),
(254,58,qs),
(197,58,l),
(197,401,ls)
);
},
{
closed = 1;
nodes = (
(102,578,o),
(147,536,o),
(192,504,o),
(203,504,qs),
(211,504,o),
(228,512,o),
(228,522,qs),
(228,524,o),
(217,548,o),
(199,581,o),
(175,618,o),
(150,649,o),
(126,670,o),
(117,670,qs),
(94,670,o),
(68,649,o),
(68,632,qs),
(68,621,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
27 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
27 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 6 7 6 106 0 7 5 7 106 4 3 2 2 2 5 83 0 5 5 15 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 6 7 6 106 0 7 5 7 106 0 5 4 3 2 2 0 5 2 92 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 6 7 6 106 0 7 5 7 106 0 4 2 0 2 4 0 104 0 5 3 1 2 4 5 2 92 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
66 64 56 54 49 44 36 34 33 32 31 29 68 32 8 17
CALL[ ]	/* CallFunction */";
};
width = 292;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(172,417,o),
(166,436,o),
(154,436,qs),
(141,436,o),
(87,433,o),
(65,431,qs),
(30,429,o),
(2,421,o),
(2,412,qs),
(2,404,o),
(22,401,o),
(30,401,qs),
(34,401,o),
(58,403,o),
(84,404,o),
(108,406,o),
(113,406,qs),
(121,406,o),
(127,397,o),
(128,389,qs),
(130,344,o),
(132,259,o),
(132,213,qs),
(132,177,o),
(131,85,o),
(128,47,qs),
(127,36,o),
(110,28,o),
(88,26,qs),
(24,22,o),
(24,12,qs),
(24,3,o),
(69,0,o),
(93,0,qs),
(252,0,ls),
(263,0,o),
(282,4,o),
(282,13,qs),
(282,21,o),
(256,28,o),
(234,28,qs),
(172,28,l),
(172,401,ls)
);
},
{
closed = 1;
nodes = (
(120,574,o),
(156,538,o),
(191,510,o),
(198,510,qs),
(206,510,o),
(206,521,qs),
(206,530,o),
(182,570,o),
(150,610,o),
(118,640,o),
(111,640,qs),
(103,640,o),
(92,632,o),
(92,618,qs),
(92,610,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
22 1 0 3 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
22 1 0 5 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 8 9 8 106 0 9 6 9 106 5 4 2 3 3 6 83 7 1 6 6 15 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 8 9 8 106 0 9 6 9 106 7 1 6 5 4 2 3 0 6 3 92 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 8 9 8 106 0 9 6 9 106 0 5 3 0 3 5 96 7 1 6 4 1 3 5 6 3 92 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
54 52 37 49 20 33 17 43 18 68 32 10 24
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = igrave;
unicode = 236;
},
{
glyphname = imacron;
kernLeft = dotlessi;
kernRight = dotlessi;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(215,417,o),
(209,436,o),
(197,436,qs),
(188,436,o),
(161,436,o),
(129,435,o),
(96,433,o),
(82,431,qs),
(65,429,o),
(35,427,o),
(14,419,o),
(2,404,o),
(2,388,qs),
(2,383,o),
(22,369,o),
(30,369,qs),
(33,369,o),
(55,371,o),
(80,372,o),
(102,374,o),
(105,374,qs),
(113,374,o),
(119,355,o),
(120,341,qs),
(122,308,o),
(124,247,o),
(124,213,qs),
(124,205,o),
(124,175,o),
(123,140,o),
(121,106,o),
(120,95,qs),
(118,82,o),
(94,77,o),
(80,74,qs),
(67,71,o),
(46,68,o),
(32,61,o),
(24,48,o),
(24,36,qs),
(24,23,o),
(37,9,o),
(56,2,o),
(81,0,o),
(93,0,qs),
(286,0,ls),
(299,0,o),
(316,22,o),
(316,37,qs),
(316,65,o),
(290,76,o),
(268,76,qs),
(215,76,l),
(215,401,ls)
);
},
{
closed = 1;
nodes = (
(197,614,o),
(155,614,qs),
(142,614,o),
(107,615,o),
(71,615,o),
(41,616,o),
(34,616,qs),
(17,616,o),
(1,591,o),
(1,577,qs),
(1,563,o),
(20,537,o),
(34,537,qs),
(52,537,o),
(116,537,o),
(188,538,o),
(255,538,o),
(275,538,qs),
(286,538,o),
(300,547,o),
(308,560,o),
(311,575,o),
(311,580,qs),
(311,595,o),
(294,617,o),
(283,617,qs),
(259,617,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
29 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
29 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
9 1 7 0 8 5 7 8 91 4 3 2 2 2 5 83 6 1 5 5 15 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
9 1 7 0 8 5 7 8 91 6 1 5 4 3 2 2 0 5 2 91 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
9 1 7 0 8 6 7 8 91 0 6 5 2 6 79 0 5 4 3 2 2 0 5 2 91 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 4 2 0 2 4 0 104 9 1 7 0 8 6 7 8 91 0 6 5 2 6 79 0 5 3 1 2 4 5 2 91 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
55 54 68 61 54 80 55 72 51 46 44 43 38 36 35 34 33 31 52 32 10 17
CALL[ ]	/* CallFunction */";
};
width = 306;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(197,417,o),
(191,436,o),
(179,436,qs),
(171,436,o),
(147,436,o),
(118,434,o),
(88,432,o),
(75,431,qs),
(58,429,o),
(31,427,o),
(12,421,o),
(2,409,o),
(2,397,qs),
(2,391,o),
(22,381,o),
(30,381,qs),
(34,381,o),
(56,383,o),
(81,384,o),
(104,386,o),
(108,386,qs),
(116,386,o),
(122,371,o),
(123,359,qs),
(125,321,o),
(127,251,o),
(127,213,qs),
(127,184,o),
(126,109,o),
(123,77,qs),
(121,66,o),
(105,59,o),
(83,56,qs),
(69,54,o),
(48,51,o),
(32,46,o),
(24,36,o),
(24,27,qs),
(24,17,o),
(37,6,o),
(56,1,o),
(81,0,o),
(93,0,qs),
(272,0,ls),
(284,0,o),
(302,15,o),
(302,28,qs),
(302,48,o),
(276,58,o),
(254,58,qs),
(197,58,l),
(197,401,ls)
);
},
{
closed = 1;
nodes = (
(189,584,o),
(147,584,qs),
(134,584,o),
(99,585,o),
(63,585,o),
(33,586,o),
(26,586,qs),
(12,586,o),
(0,567,o),
(0,556,qs),
(0,545,o),
(15,525,o),
(26,525,qs),
(44,525,o),
(108,525,o),
(180,526,o),
(247,526,o),
(267,526,qs),
(284,526,o),
(296,551,o),
(296,559,qs),
(296,570,o),
(283,587,o),
(275,587,qs),
(251,587,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
27 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
27 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
8 1 6 0 7 5 6 7 91 4 3 2 2 2 5 83 0 5 5 15 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
8 1 6 0 7 5 6 7 91 0 5 4 3 2 2 0 5 2 91 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 4 2 0 2 4 0 104 8 1 6 0 7 5 6 7 91 0 5 3 1 2 4 5 2 91 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
53 52 64 57 52 76 53 68 49 44 36 34 33 32 31 29 68 32 9 17
CALL[ ]	/* CallFunction */";
};
width = 292;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(172,417,o),
(166,436,o),
(154,436,qs),
(141,436,o),
(87,433,o),
(65,431,qs),
(30,429,o),
(2,421,o),
(2,412,qs),
(2,404,o),
(22,401,o),
(30,401,qs),
(34,401,o),
(58,403,o),
(84,404,o),
(108,406,o),
(113,406,qs),
(121,406,o),
(127,397,o),
(128,389,qs),
(130,344,o),
(132,259,o),
(132,213,qs),
(132,177,o),
(131,85,o),
(128,47,qs),
(127,36,o),
(110,28,o),
(88,26,qs),
(24,22,o),
(24,12,qs),
(24,3,o),
(69,0,o),
(93,0,qs),
(252,0,ls),
(263,0,o),
(282,4,o),
(282,13,qs),
(282,21,o),
(256,28,o),
(234,28,qs),
(172,28,l),
(172,401,ls)
);
},
{
closed = 1;
nodes = (
(178,539,o),
(136,539,qs),
(123,539,o),
(88,540,o),
(52,540,o),
(22,541,o),
(15,541,qs),
(7,541,o),
(-1,531,o),
(-1,526,qs),
(-1,521,o),
(8,510,o),
(15,510,qs),
(33,510,o),
(97,510,o),
(169,511,o),
(236,511,o),
(256,511,qs),
(267,511,o),
(275,524,o),
(275,529,qs),
(275,534,o),
(268,542,o),
(264,542,qs),
(240,542,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
22 1 0 3 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
22 1 0 5 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
10 1 8 0 9 6 8 9 91 5 4 2 3 3 6 83 7 1 6 6 15 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
10 1 8 0 9 6 8 9 91 7 1 6 5 4 2 3 0 6 3 91 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 5 3 0 3 5 0 104 10 1 8 0 9 6 8 9 91 7 1 6 4 1 3 5 6 3 91 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
44 43 55 48 43 67 44 59 49 20 33 17 43 18 68 32 11 23
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = imacron;
unicode = 299;
},
{
glyphname = iogonek;
kernLeft = dotlessi;
kernRight = dotlessi;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(237,-138,o),
(257,-122,o),
(267,-104,o),
(267,-96,qs),
(267,-87,o),
(252,-72,o),
(242,-72,qs),
(234,-72,o),
(225,-80,o),
(214,-89,o),
(197,-96,o),
(182,-96,qs),
(171,-96,o),
(153,-86,o),
(153,-75,qs),
(153,-58,o),
(170,-14,o),
(186,0,q),
(282,0,ls),
(295,0,o),
(312,21,o),
(312,37,qs),
(312,60,o),
(286,76,o),
(264,76,qs),
(211,76,l),
(211,401,ls),
(211,417,o),
(199,436,o),
(184,436,qs),
(167,436,o),
(111,434,o),
(82,432,qs),
(37,429,o),
(2,415,o),
(2,395,qs),
(2,381,o),
(16,362,o),
(33,362,qs),
(36,362,o),
(56,363,o),
(78,363,o),
(98,364,o),
(101,364,qs),
(112,364,o),
(119,345,o),
(120,331,qs),
(122,298,o),
(124,247,o),
(124,213,qs),
(124,205,o),
(123,175,o),
(122,140,o),
(121,106,o),
(120,95,qs),
(119,84,o),
(96,76,o),
(80,74,qs),
(54,72,o),
(24,55,o),
(24,36,qs),
(24,23,o),
(37,9,o),
(56,2,o),
(81,0,o),
(93,0,qs),
(127,0,l),
(109,-11,o),
(74,-48,o),
(74,-74,qs),
(74,-93,o),
(94,-121,o),
(125,-140,o),
(164,-149,o),
(184,-149,qs),
(205,-149,o)
);
},
{
closed = 1;
nodes = (
(127,509,o),
(153,509,qs),
(163,509,o),
(187,517,o),
(208,535,o),
(221,563,o),
(221,584,qs),
(221,615,o),
(185,650,o),
(160,650,qs),
(142,650,o),
(116,635,o),
(100,613,o),
(92,589,o),
(92,580,qs),
(92,550,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
28 1 4 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 7 1 6 1 7 6 104 0 8 0 9 3 8 9 91 0 6 10 1 0 6 0 87 0 2 2 3 83 0 3 3 15 67 0 4 4 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 7 1 6 1 7 6 104 0 8 0 9 3 8 9 91 0 3 0 2 4 3 2 91 0 6 10 1 0 6 0 87 0 4 4 1 83 5 1 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 90 88 82 80 69 67 64 62 57 55 51 49 46 41 37 30 10 8 0 75 1 75 11 15
CALL[ ]	/* CallFunction */";
};
width = 308;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(197,417,o),
(191,436,o),
(179,436,qs),
(171,436,o),
(147,436,o),
(118,434,o),
(88,432,o),
(75,431,qs),
(58,429,o),
(31,427,o),
(12,421,o),
(2,409,o),
(2,397,qs),
(2,391,o),
(22,381,o),
(30,381,qs),
(34,381,o),
(56,383,o),
(81,384,o),
(104,386,o),
(108,386,qs),
(116,386,o),
(122,371,o),
(123,359,qs),
(125,321,o),
(127,251,o),
(127,213,qs),
(127,184,o),
(126,109,o),
(123,77,qs),
(121,66,o),
(105,59,o),
(83,56,qs),
(69,54,o),
(48,51,o),
(32,46,o),
(24,36,o),
(24,27,qs),
(24,17,o),
(37,6,o),
(56,1,o),
(81,0,o),
(93,0,qs),
(272,0,ls),
(284,0,o),
(302,15,o),
(302,28,qs),
(302,48,o),
(276,58,o),
(254,58,qs),
(197,58,l),
(197,401,ls)
);
},
{
closed = 1;
nodes = (
(127,-6,o),
(111,-19,qs),
(97,-30,o),
(75,-63,o),
(75,-86,qs),
(75,-118,o),
(132,-159,o),
(176,-159,qs),
(194,-159,o),
(222,-146,o),
(243,-129,o),
(254,-112,o),
(254,-108,qs),
(254,-100,o),
(244,-86,o),
(233,-86,qs),
(227,-86,o),
(220,-92,qs),
(212,-99,o),
(195,-116,o),
(170,-116,qs),
(158,-116,o),
(139,-97,o),
(139,-85,qs),
(139,-79,o),
(144,-54,o),
(157,-28,o),
(180,-3,o),
(198,3,q),
(148,4,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
27 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
27 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 0 2 9 9 0 96 0 7 1 6 1 7 6 104 0 6 0 8 6 8 87 4 3 2 2 2 5 83 0 5 5 15 67 10 1 9 9 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 0 2 9 9 0 96 0 7 1 6 1 7 6 104 0 5 4 3 2 2 0 5 2 91 0 6 0 8 6 8 87 10 1 9 9 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 2 9 2 0 9 104 0 7 1 6 1 7 6 104 0 5 4 3 2 2 0 5 2 91 0 6 0 8 6 8 87 10 1 9 9 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 4 2 0 2 4 0 104 0 0 9 2 0 9 102 0 7 1 6 1 7 6 104 0 5 3 1 2 4 5 2 91 0 6 0 8 6 8 87 10 1 9 9 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
52 52 52 81 52 81 74 72 66 64 61 59 49 44 36 34 33 32 31 29 68 32 11 17
CALL[ ]	/* CallFunction */";
};
width = 293;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(172,417,o),
(166,436,o),
(154,436,qs),
(141,436,o),
(87,433,o),
(65,431,qs),
(30,429,o),
(2,421,o),
(2,412,qs),
(2,404,o),
(22,401,o),
(30,401,qs),
(34,401,o),
(58,403,o),
(84,404,o),
(108,406,o),
(113,406,qs),
(121,406,o),
(127,397,o),
(128,389,qs),
(130,344,o),
(132,259,o),
(132,213,qs),
(132,177,o),
(131,85,o),
(128,47,qs),
(127,36,o),
(110,28,o),
(88,26,qs),
(24,22,o),
(24,12,qs),
(24,3,o),
(69,0,o),
(93,0,qs),
(138,0,l),
(131,-4,o),
(111,-18,o),
(92,-39,o),
(78,-68,o),
(78,-86,qs),
(78,-118,o),
(124,-159,o),
(159,-159,qs),
(177,-159,o),
(205,-146,o),
(226,-129,o),
(237,-112,o),
(237,-108,qs),
(237,-102,o),
(232,-92,o),
(223,-92,qs),
(216,-92,o),
(205,-105,o),
(192,-120,o),
(174,-132,o),
(161,-132,qs),
(149,-132,o),
(134,-122,o),
(125,-107,o),
(122,-91,o),
(122,-85,qs),
(122,-79,o),
(126,-56,o),
(138,-31,o),
(158,-7,o),
(174,0,q),
(252,0,ls),
(263,0,o),
(282,4,o),
(282,13,qs),
(282,21,o),
(256,28,o),
(234,28,qs),
(172,28,l),
(172,401,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
54 1 0 7 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
54 1 0 9 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 1 2 1 3 2 104 0 2 0 4 2 4 87 9 8 2 7 7 10 83 11 1 10 10 15 67 6 1 0 0 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 1 2 1 3 2 104 11 1 10 9 8 2 7 0 10 7 91 0 2 0 4 2 4 87 6 1 0 0 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 9 7 0 7 9 96 0 3 1 2 1 3 2 104 11 1 10 8 1 7 9 10 7 91 0 2 0 4 2 4 87 6 1 0 0 1 83 5 1 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
72 69 68 67 63 61 17 43 18 55 38 35 41 36 32 12 24
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = iogonek;
unicode = 303;
},
{
glyphname = itilde;
kernLeft = dotlessi;
kernRight = dotlessi;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(215,417,o),
(209,436,o),
(197,436,qs),
(188,436,o),
(161,436,o),
(129,435,o),
(96,433,o),
(82,431,qs),
(65,429,o),
(35,427,o),
(14,419,o),
(2,404,o),
(2,388,qs),
(2,383,o),
(22,369,o),
(30,369,qs),
(33,369,o),
(55,371,o),
(80,372,o),
(102,374,o),
(105,374,qs),
(113,374,o),
(119,355,o),
(120,341,qs),
(122,308,o),
(124,247,o),
(124,213,qs),
(124,205,o),
(124,175,o),
(123,140,o),
(121,106,o),
(120,95,qs),
(118,82,o),
(94,77,o),
(80,74,qs),
(67,71,o),
(46,68,o),
(32,61,o),
(24,48,o),
(24,36,qs),
(24,23,o),
(37,9,o),
(56,2,o),
(81,0,o),
(93,0,qs),
(286,0,ls),
(299,0,o),
(316,22,o),
(316,37,qs),
(316,65,o),
(290,76,o),
(268,76,qs),
(215,76,l),
(215,401,ls)
);
},
{
closed = 1;
nodes = (
(7,498,o),
(16,498,qs),
(23,498,o),
(41,506,o),
(61,515,o),
(85,523,o),
(100,523,qs),
(114,523,o),
(146,515,o),
(181,506,o),
(218,499,o),
(237,499,qs),
(248,499,o),
(286,506,o),
(322,523,o),
(348,552,o),
(348,574,qs),
(348,590,o),
(331,609,o),
(326,609,qs),
(319,609,o),
(296,596,qs),
(282,588,o),
(250,579,o),
(236,579,qs),
(221,579,o),
(185,588,o),
(149,598,o),
(114,607,o),
(99,607,qs),
(62,607,o),
(31,589,qs),
(17,581,o),
(-3,556,o),
(-3,534,qs),
(-3,519,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
29 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
29 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
9 1 7 0 11 10 7 11 91 0 8 12 1 10 5 8 10 91 4 3 2 2 2 5 83 6 1 5 5 15 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
9 1 7 0 11 10 7 11 91 0 8 12 1 10 5 8 10 91 6 1 5 4 3 2 2 0 5 2 91 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
9 1 7 0 11 10 7 11 91 0 8 12 1 10 6 8 10 91 0 6 5 2 6 79 0 5 4 3 2 2 0 5 2 91 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 4 2 0 2 4 0 104 9 1 7 0 11 10 7 11 91 0 8 12 1 10 6 8 10 91 0 6 5 2 6 79 0 5 3 1 2 4 5 2 91 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
88 86 83 81 78 76 70 68 65 63 60 58 51 46 44 43 38 36 35 34 33 31 52 32 13 17
CALL[ ]	/* CallFunction */";
};
width = 306;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(197,417,o),
(191,436,o),
(179,436,qs),
(171,436,o),
(147,436,o),
(118,434,o),
(88,432,o),
(75,431,qs),
(58,429,o),
(31,427,o),
(12,421,o),
(2,409,o),
(2,397,qs),
(2,391,o),
(22,381,o),
(30,381,qs),
(34,381,o),
(56,383,o),
(81,384,o),
(104,386,o),
(108,386,qs),
(116,386,o),
(122,371,o),
(123,359,qs),
(125,321,o),
(127,251,o),
(127,213,qs),
(127,184,o),
(126,109,o),
(123,77,qs),
(121,66,o),
(105,59,o),
(83,56,qs),
(69,54,o),
(48,51,o),
(32,46,o),
(24,36,o),
(24,27,qs),
(24,17,o),
(37,6,o),
(56,1,o),
(81,0,o),
(93,0,qs),
(272,0,ls),
(284,0,o),
(302,15,o),
(302,28,qs),
(302,48,o),
(276,58,o),
(254,58,qs),
(197,58,l),
(197,401,ls)
);
},
{
closed = 1;
nodes = (
(-18,535,qs),
(-18,524,o),
(-9,507,o),
(-1,507,qs),
(5,507,o),
(22,515,o),
(43,524,o),
(68,532,o),
(83,532,qs),
(97,532,o),
(129,524,o),
(164,515,o),
(201,508,o),
(220,508,qs),
(262,508,o),
(312,536,o),
(322,553,qs),
(327,562,o),
(327,572,qs),
(327,584,o),
(314,600,o),
(309,600,qs),
(304,600,o),
(293,595,o),
(279,587,qs),
(245,570,o),
(219,570,qs),
(204,570,o),
(168,579,o),
(132,589,o),
(97,598,o),
(82,598,qs),
(45,598,o),
(14,580,qs),
(-1,571,o),
(-13,557,o),
(-15,552,qs),
(-18,544,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
27 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
27 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
8 1 6 0 10 9 6 10 91 0 7 11 1 9 5 7 9 91 4 3 2 2 2 5 83 0 5 5 15 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
8 1 6 0 10 9 6 10 91 0 7 11 1 9 5 7 9 91 0 5 4 3 2 2 0 5 2 91 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 4 2 0 2 4 0 104 8 1 6 0 10 9 6 10 91 0 7 11 1 9 5 7 9 91 0 5 3 1 2 4 5 2 91 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
86 84 81 79 76 74 68 66 63 61 58 56 49 44 36 34 33 32 31 29 68 32 12 17
CALL[ ]	/* CallFunction */";
};
width = 292;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(172,417,o),
(166,436,o),
(154,436,qs),
(141,436,o),
(87,433,o),
(65,431,qs),
(30,429,o),
(2,421,o),
(2,412,qs),
(2,404,o),
(22,401,o),
(30,401,qs),
(34,401,o),
(58,403,o),
(84,404,o),
(108,406,o),
(113,406,qs),
(121,406,o),
(127,397,o),
(128,389,qs),
(130,344,o),
(132,259,o),
(132,213,qs),
(132,177,o),
(131,85,o),
(128,47,qs),
(127,36,o),
(110,28,o),
(88,26,qs),
(24,22,o),
(24,12,qs),
(24,3,o),
(69,0,o),
(93,0,qs),
(252,0,ls),
(263,0,o),
(282,4,o),
(282,13,qs),
(282,21,o),
(256,28,o),
(234,28,qs),
(172,28,l),
(172,401,ls)
);
},
{
closed = 1;
nodes = (
(-30,522,o),
(-25,522,qs),
(-20,522,o),
(-4,530,o),
(18,539,o),
(44,547,o),
(59,547,qs),
(73,547,o),
(105,539,o),
(140,530,o),
(177,523,o),
(196,523,qs),
(217,523,o),
(254,530,o),
(282,543,o),
(298,559,o),
(298,568,qs),
(298,575,o),
(290,585,o),
(285,585,qs),
(280,585,o),
(269,580,o),
(255,572,qs),
(221,555,o),
(195,555,qs),
(180,555,o),
(144,564,o),
(108,574,o),
(73,583,o),
(58,583,qs),
(21,583,o),
(-10,565,qs),
(-39,548,o),
(-39,537,qs),
(-39,532,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
22 1 0 3 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
22 1 0 5 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 6 9 11 91 5 4 2 3 3 6 83 7 1 6 6 15 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 6 9 11 91 7 1 6 5 4 2 3 0 6 3 91 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 3 0 3 5 0 104 10 1 8 0 12 11 8 12 91 0 9 13 1 11 6 9 11 91 7 1 6 4 1 3 5 6 3 91 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
76 74 71 69 66 64 58 56 53 51 38 49 20 33 17 43 18 68 32 14 24
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = itilde;
unicode = 297;
},
{
glyphname = ij;
kernLeft = dotlessi;
kernRight = dotlessj;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(213,417,o),
(201,436,o),
(186,436,qs),
(169,436,o),
(113,434,o),
(84,432,qs),
(39,429,o),
(4,415,o),
(4,395,qs),
(4,381,o),
(18,362,o),
(35,362,qs),
(38,362,o),
(58,363,o),
(80,363,o),
(100,364,o),
(103,364,qs),
(114,364,o),
(121,345,o),
(122,331,qs),
(124,298,o),
(126,247,o),
(126,213,qs),
(126,205,o),
(125,175,o),
(124,140,o),
(123,106,o),
(122,95,qs),
(121,84,o),
(98,76,o),
(82,74,qs),
(56,72,o),
(26,55,o),
(26,36,qs),
(26,23,o),
(39,9,o),
(58,2,o),
(83,0,o),
(95,0,qs),
(284,0,ls),
(297,0,o),
(314,21,o),
(314,37,qs),
(314,60,o),
(288,76,o),
(266,76,qs),
(213,76,l),
(213,401,ls)
);
},
{
closed = 1;
nodes = (
(129,509,o),
(155,509,qs),
(165,509,o),
(189,517,o),
(210,535,o),
(223,563,o),
(223,584,qs),
(223,615,o),
(187,650,o),
(162,650,qs),
(144,650,o),
(118,635,o),
(102,613,o),
(94,589,o),
(94,580,qs),
(94,550,o)
);
},
{
closed = 1;
nodes = (
(378,-25,o),
(347,-25,qs),
(318,-25,o),
(274,-72,o),
(274,-120,qs),
(274,-140,o),
(289,-182,o),
(320,-217,o),
(367,-240,o),
(400,-240,qs),
(434,-240,o),
(501,-219,o),
(555,-172,o),
(594,-97,o),
(602,-44,qs),
(603,-35,o),
(605,-7,o),
(607,24,o),
(608,52,o),
(608,61,qs),
(608,68,o),
(608,120,o),
(609,191,o),
(610,271,o),
(611,342,o),
(611,395,o),
(611,402,qs),
(611,421,o),
(599,440,o),
(583,440,qs),
(509,440,o),
(422,436,o),
(377,426,o),
(363,410,o),
(363,399,qs),
(363,388,o),
(380,368,o),
(401,368,qs),
(498,368,ls),
(512,368,o),
(523,357,o),
(523,342,qs),
(523,278,ls),
(523,257,o),
(522,169,o),
(520,71,o),
(517,-19,o),
(515,-40,qs),
(512,-64,o),
(497,-112,o),
(471,-149,o),
(432,-173,o),
(406,-173,qs),
(389,-173,o),
(369,-165,o),
(358,-154,o),
(354,-143,o),
(354,-140,qs),
(354,-126,o),
(370,-124,qs),
(396,-122,o),
(412,-92,o),
(412,-73,qs),
(412,-50,o)
);
},
{
closed = 1;
nodes = (
(518,509,o),
(541,509,qs),
(552,509,o),
(576,517,o),
(597,535,o),
(610,564,o),
(610,585,qs),
(610,614,o),
(574,650,o),
(550,650,qs),
(531,650,o),
(505,634,o),
(488,612,o),
(481,588,o),
(481,581,qs),
(481,548,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
27 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 10 1 6 1 10 6 104 11 1 4 12 1 5 3 4 5 91 7 1 2 2 3 83 8 1 3 3 15 67 0 0 0 1 83 0 1 1 13 67 0 6 6 9 84 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 10 1 6 1 10 6 104 11 1 4 12 1 5 3 4 5 91 8 1 3 7 1 2 0 3 2 91 0 6 0 9 6 9 88 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 10 1 6 1 10 6 104 11 1 4 12 1 5 8 4 5 91 0 8 3 2 8 79 0 3 7 1 2 0 3 2 91 0 6 0 9 6 9 88 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 10 1 6 1 10 6 104 11 1 4 12 1 5 8 4 5 91 0 8 0 7 2 8 7 91 0 3 0 2 0 3 2 91 0 6 0 9 6 9 88 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
142 140 134 132 126 124 118 116 98 95 90 87 75 73 62 60 54 52 45 40 36 29 52 32 13 17
CALL[ ]	/* CallFunction */";
};
width = 578;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (2,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = i;
},
{
alignment = -1;
pos = (292,0);
ref = j;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
28 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
28 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 12 1 8 1 12 8 104 13 1 6 14 1 7 5 6 7 91 9 4 3 3 2 2 5 83 10 1 5 5 15 67 0 0 0 1 83 0 1 1 13 67 0 8 8 11 83 0 11 11 25 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 12 1 8 1 12 8 104 13 1 6 14 1 7 5 6 7 91 10 1 5 9 4 3 3 2 0 5 2 91 0 0 0 1 83 0 1 1 13 67 0 8 8 11 83 0 11 11 25 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 12 1 8 1 12 8 104 13 1 6 14 1 7 5 6 7 91 10 1 5 9 4 3 3 2 0 5 2 91 0 8 0 11 8 11 87 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 4 2 0 2 4 0 104 0 12 1 8 1 12 8 104 13 1 6 14 1 7 10 6 7 91 0 10 5 2 10 79 0 5 9 3 2 2 4 5 2 91 0 8 0 11 8 11 87 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
138 136 132 130 124 122 116 114 96 93 89 86 76 74 65 63 59 57 50 45 37 35 34 33 32 30 68 33 15 28
CALL[ ]	/* CallFunction */";
};
width = 555;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
alignment = -1;
pos = (2,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (72,0);
ref = dotaccent;
},
{
alignment = -1;
pos = (297,0);
ref = j;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
23 1 0 3 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
23 1 0 5 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 14 1 10 1 14 10 104 15 1 8 16 1 9 12 8 9 91 11 5 4 3 3 3 12 83 0 12 12 15 67 11 5 4 3 3 3 6 83 7 1 6 6 15 67 2 1 0 0 1 83 0 1 1 13 67 0 10 10 13 83 0 13 13 25 13 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 14 1 10 1 14 10 104 15 1 8 16 1 9 12 8 9 91 0 12 6 3 12 79 7 1 6 11 5 4 3 3 0 6 3 91 2 1 0 0 1 83 0 1 1 13 67 0 10 10 13 83 0 13 13 25 13 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 14 1 10 1 14 10 104 15 1 8 16 1 9 12 8 9 91 0 12 6 3 12 79 7 1 6 11 5 4 3 3 0 6 3 91 0 10 0 13 10 13 87 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 5 3 0 3 5 96 0 14 1 10 1 14 10 104 15 1 8 16 1 9 12 8 9 91 0 12 6 3 12 79 7 1 6 11 4 2 3 5 6 3 91 0 10 0 13 10 13 87 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
130 128 124 122 118 116 110 108 90 87 83 80 68 66 56 54 39 49 20 33 17 43 18 68 33 17 35
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = ij;
unicode = 307;
},
{
glyphname = j;
kernLeft = dotlessj;
kernRight = dotlessj;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1,-25,o),
(-32,-25,qs),
(-61,-25,o),
(-105,-72,o),
(-105,-120,qs),
(-105,-140,o),
(-90,-182,o),
(-59,-217,o),
(-12,-240,o),
(21,-240,qs),
(55,-240,o),
(122,-219,o),
(176,-172,o),
(215,-97,o),
(223,-44,qs),
(224,-35,o),
(226,-7,o),
(228,24,o),
(229,52,o),
(229,61,qs),
(229,68,o),
(229,120,o),
(230,191,o),
(231,271,o),
(232,342,o),
(232,395,o),
(232,402,qs),
(232,421,o),
(220,440,o),
(204,440,qs),
(130,440,o),
(43,436,o),
(-2,426,o),
(-16,410,o),
(-16,399,qs),
(-16,388,o),
(1,368,o),
(22,368,qs),
(119,368,ls),
(133,368,o),
(144,357,o),
(144,342,qs),
(144,278,ls),
(144,257,o),
(143,169,o),
(141,71,o),
(138,-19,o),
(136,-40,qs),
(133,-64,o),
(118,-112,o),
(92,-149,o),
(53,-173,o),
(27,-173,qs),
(10,-173,o),
(-10,-165,o),
(-21,-154,o),
(-25,-143,o),
(-25,-140,qs),
(-25,-126,o),
(-9,-124,qs),
(17,-122,o),
(33,-92,o),
(33,-73,qs),
(33,-50,o)
);
},
{
closed = 1;
nodes = (
(139,509,o),
(162,509,qs),
(173,509,o),
(197,517,o),
(218,535,o),
(231,564,o),
(231,585,qs),
(231,614,o),
(195,650,o),
(171,650,qs),
(152,650,o),
(126,634,o),
(109,612,o),
(102,588,o),
(102,581,qs),
(102,548,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 1 0 1 4 0 104 0 5 0 6 2 5 6 91 0 1 1 2 83 0 2 2 15 67 0 0 0 3 84 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 4 1 0 1 4 0 104 0 5 0 6 2 5 6 91 0 2 0 1 4 2 1 91 0 0 3 3 0 79 0 0 0 3 84 0 3 0 3 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
78 76 70 68 62 60 54 52 53 60 41 7 18
CALL[ ]	/* CallFunction */";
};
width = 290;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(-28,-38,o),
(-47,-38,qs),
(-72,-38,o),
(-113,-79,o),
(-113,-120,qs),
(-113,-140,o),
(-99,-180,o),
(-69,-212,o),
(-22,-233,o),
(11,-233,qs),
(42,-233,o),
(101,-214,o),
(151,-171,o),
(187,-98,o),
(194,-44,qs),
(195,-34,o),
(197,-7,o),
(199,23,o),
(200,51,o),
(200,61,qs),
(200,68,o),
(200,120,o),
(201,191,o),
(202,271,o),
(203,342,o),
(203,395,o),
(203,402,qs),
(203,421,o),
(196,440,o),
(180,440,qs),
(125,440,o),
(50,438,o),
(3,431,o),
(-17,419,o),
(-17,409,qs),
(-17,389,o),
(21,389,qs),
(111,389,ls),
(124,389,o),
(136,384,o),
(136,368,qs),
(136,278,ls),
(136,257,o),
(136,172,o),
(134,76,o),
(131,-14,o),
(128,-40,qs),
(120,-104,o),
(64,-171,o),
(13,-171,qs),
(-26,-171,o),
(-52,-150,o),
(-52,-143,qs),
(-52,-126,o),
(-36,-124,qs),
(-16,-122,o),
(4,-99,o),
(4,-79,qs),
(4,-58,o)
);
},
{
closed = 1;
nodes = (
(125,520,o),
(146,520,qs),
(164,520,o),
(203,548,o),
(203,584,qs),
(203,610,o),
(173,639,o),
(153,639,qs),
(138,639,o),
(116,626,o),
(103,608,o),
(96,587,o),
(96,580,qs),
(96,554,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 1 0 1 4 0 104 0 5 0 6 2 5 6 91 0 1 1 2 83 0 2 2 15 67 0 0 0 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 4 1 0 1 4 0 104 0 5 0 6 2 5 6 91 0 2 0 1 4 2 1 91 0 0 0 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 4 1 0 1 4 0 104 0 5 0 6 2 5 6 91 0 2 0 1 4 2 1 91 0 0 3 3 0 79 0 0 0 3 83 0 3 0 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
71 69 65 63 57 55 49 47 52 58 39 7 18
CALL[ ]	/* CallFunction */";
};
width = 263;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(-57,-59,o),
(-68,-59,qs),
(-88,-59,o),
(-124,-91,o),
(-124,-120,qs),
(-124,-140,o),
(-111,-176,o),
(-82,-204,o),
(-36,-221,o),
(-3,-221,qs),
(23,-221,o),
(74,-206,o),
(116,-167,o),
(147,-98,o),
(153,-44,qs),
(154,-34,o),
(156,-7,o),
(158,23,o),
(159,51,o),
(159,61,qs),
(159,68,o),
(159,120,o),
(160,191,o),
(161,271,o),
(162,342,o),
(162,395,o),
(162,402,qs),
(162,421,o),
(155,440,o),
(139,440,qs),
(113,440,o),
(58,439,o),
(12,435,o),
(-18,426,o),
(-18,419,qs),
(-18,409,o),
(20,409,qs),
(100,409,ls),
(113,409,o),
(125,400,o),
(125,388,qs),
(125,278,ls),
(125,257,o),
(124,172,o),
(122,76,o),
(119,-14,o),
(117,-40,qs),
(113,-82,o),
(93,-140,o),
(62,-174,o),
(20,-189,o),
(-5,-189,qs),
(-44,-189,o),
(-90,-162,o),
(-90,-143,qs),
(-90,-132,o),
(-82,-125,o),
(-74,-124,qs),
(-61,-122,o),
(-37,-110,o),
(-37,-89,qs),
(-37,-70,o)
);
},
{
closed = 1;
nodes = (
(105,538,o),
(123,538,qs),
(136,538,o),
(163,558,o),
(163,582,qs),
(163,602,o),
(142,621,o),
(128,621,qs),
(109,621,o),
(88,593,o),
(88,578,qs),
(88,565,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 1 0 1 4 0 104 0 5 0 6 2 5 6 91 0 1 1 2 83 0 2 2 15 67 0 0 0 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 4 1 0 1 4 0 104 0 5 0 6 2 5 6 91 0 2 0 1 4 2 1 91 0 0 0 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 4 1 0 1 4 0 104 0 5 0 6 2 5 6 91 0 2 0 1 4 2 1 91 0 0 3 3 0 79 0 0 0 3 83 0 3 0 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
72 70 66 64 60 58 52 50 52 60 40 7 18
CALL[ ]	/* CallFunction */";
};
width = 225;
}
);
note = j;
unicode = 106;
},
{
glyphname = dotlessj;
kernLeft = dotlessj;
kernRight = dotlessj;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-2,-25,o),
(-26,-25,qs),
(-40,-25,o),
(-69,-37,o),
(-91,-60,o),
(-105,-96,o),
(-105,-120,qs),
(-105,-140,o),
(-90,-182,o),
(-59,-217,o),
(-12,-240,o),
(21,-240,qs),
(55,-240,o),
(122,-219,o),
(176,-172,o),
(215,-97,o),
(223,-44,qs),
(224,-35,o),
(226,-7,o),
(228,24,o),
(229,52,o),
(229,61,qs),
(229,68,o),
(229,120,o),
(230,191,o),
(231,271,o),
(232,342,o),
(232,395,o),
(232,402,qs),
(232,422,o),
(223,440,o),
(209,440,qs),
(134,440,o),
(45,437,o),
(-2,429,o),
(-16,414,o),
(-16,403,qs),
(-16,392,o),
(2,377,o),
(22,377,qs),
(119,377,ls),
(133,377,o),
(144,369,o),
(144,356,qs),
(144,278,ls),
(144,254,o),
(144,168,o),
(142,73,o),
(139,-14,o),
(136,-40,qs),
(133,-64,o),
(118,-108,o),
(91,-141,o),
(52,-160,o),
(26,-160,qs),
(-7,-160,o),
(-25,-146,o),
(-25,-141,qs),
(-25,-126,o),
(-9,-124,qs),
(17,-122,o),
(33,-92,o),
(33,-73,qs),
(33,-50,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 4 1 0 0 4 96 0 1 1 2 83 0 2 2 15 67 0 0 0 3 84 0 3 3 25 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 1 0 1 4 0 104 0 1 1 2 83 0 2 2 15 67 0 0 0 3 84 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 4 1 0 1 4 0 104 0 2 0 1 4 2 1 91 0 0 3 3 0 79 0 0 0 3 84 0 3 0 3 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
62 60 52 50 53 60 39 5 18
CALL[ ]	/* CallFunction */";
};
width = 290;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(-28,-38,o),
(-47,-38,qs),
(-72,-38,o),
(-113,-79,o),
(-113,-120,qs),
(-113,-140,o),
(-99,-180,o),
(-69,-212,o),
(-22,-233,o),
(11,-233,qs),
(42,-233,o),
(101,-214,o),
(151,-171,o),
(187,-98,o),
(194,-44,qs),
(195,-34,o),
(197,-7,o),
(199,23,o),
(200,51,o),
(200,61,qs),
(200,68,o),
(200,120,o),
(201,191,o),
(202,271,o),
(203,342,o),
(203,395,o),
(203,402,qs),
(203,421,o),
(196,440,o),
(180,440,qs),
(125,440,o),
(50,438,o),
(3,431,o),
(-17,419,o),
(-17,409,qs),
(-17,389,o),
(21,389,qs),
(111,389,ls),
(124,389,o),
(136,384,o),
(136,368,qs),
(136,278,ls),
(136,257,o),
(136,172,o),
(134,76,o),
(131,-14,o),
(128,-40,qs),
(120,-104,o),
(64,-171,o),
(13,-171,qs),
(-26,-171,o),
(-52,-150,o),
(-52,-143,qs),
(-52,-126,o),
(-36,-124,qs),
(-16,-122,o),
(4,-99,o),
(4,-79,qs),
(4,-58,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 1 0 1 4 0 104 0 1 1 2 83 0 2 2 15 67 0 0 0 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 4 1 0 1 4 0 104 0 2 0 1 4 2 1 91 0 0 0 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 4 1 0 1 4 0 104 0 2 0 1 4 2 1 91 0 0 3 3 0 79 0 0 0 3 83 0 3 0 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
57 55 49 47 52 58 39 5 18
CALL[ ]	/* CallFunction */";
};
width = 263;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(-57,-59,o),
(-68,-59,qs),
(-88,-59,o),
(-124,-91,o),
(-124,-120,qs),
(-124,-140,o),
(-111,-176,o),
(-82,-204,o),
(-36,-221,o),
(-3,-221,qs),
(23,-221,o),
(74,-206,o),
(116,-167,o),
(147,-98,o),
(153,-44,qs),
(154,-34,o),
(156,-7,o),
(158,23,o),
(159,51,o),
(159,61,qs),
(159,68,o),
(159,120,o),
(160,191,o),
(161,271,o),
(162,342,o),
(162,395,o),
(162,402,qs),
(162,421,o),
(155,440,o),
(139,440,qs),
(113,440,o),
(58,439,o),
(12,435,o),
(-18,426,o),
(-18,419,qs),
(-18,409,o),
(20,409,qs),
(100,409,ls),
(113,409,o),
(125,400,o),
(125,388,qs),
(125,278,ls),
(125,257,o),
(124,172,o),
(122,76,o),
(119,-14,o),
(117,-40,qs),
(113,-82,o),
(93,-140,o),
(62,-174,o),
(20,-189,o),
(-5,-189,qs),
(-44,-189,o),
(-90,-162,o),
(-90,-143,qs),
(-90,-132,o),
(-82,-125,o),
(-74,-124,qs),
(-61,-122,o),
(-37,-110,o),
(-37,-89,qs),
(-37,-70,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 1 0 1 4 0 104 0 1 1 2 83 0 2 2 15 67 0 0 0 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 4 1 0 1 4 0 104 0 2 0 1 4 2 1 91 0 0 0 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 4 1 0 1 4 0 104 0 2 0 1 4 2 1 91 0 0 3 3 0 79 0 0 0 3 83 0 3 0 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
60 58 52 50 52 60 40 5 18
CALL[ ]	/* CallFunction */";
};
width = 225;
}
);
note = dotlessj;
unicode = 567;
},
{
glyphname = jcircumflex;
kernLeft = dotlessj;
kernRight = dotlessj;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1,-25,o),
(-32,-25,qs),
(-61,-25,o),
(-105,-72,o),
(-105,-120,qs),
(-105,-140,o),
(-90,-182,o),
(-59,-217,o),
(-12,-240,o),
(21,-240,qs),
(55,-240,o),
(122,-219,o),
(176,-172,o),
(215,-97,o),
(223,-44,qs),
(224,-35,o),
(226,-7,o),
(228,24,o),
(229,52,o),
(229,61,qs),
(229,68,o),
(229,120,o),
(230,191,o),
(231,271,o),
(232,342,o),
(232,395,o),
(232,402,qs),
(232,421,o),
(220,440,o),
(204,440,qs),
(130,440,o),
(43,436,o),
(-2,426,o),
(-16,410,o),
(-16,399,qs),
(-16,388,o),
(1,368,o),
(22,368,qs),
(119,368,ls),
(133,368,o),
(144,357,o),
(144,342,qs),
(144,278,ls),
(144,257,o),
(143,169,o),
(141,71,o),
(138,-19,o),
(136,-40,qs),
(133,-64,o),
(118,-108,o),
(91,-141,o),
(52,-160,o),
(26,-160,qs),
(-8,-160,o),
(-25,-145,o),
(-25,-140,qs),
(-25,-126,o),
(-9,-124,qs),
(17,-122,o),
(33,-92,o),
(33,-73,qs),
(33,-50,o)
);
},
{
closed = 1;
nodes = (
(276,523,o),
(276,531,qs),
(276,547,o),
(241,592,o),
(195,634,o),
(152,664,o),
(143,664,qs),
(136,664,o),
(93,635,o),
(47,592,o),
(11,543,o),
(11,524,qs),
(11,519,o),
(18,510,o),
(24,510,qs),
(29,510,o),
(55,523,o),
(88,542,o),
(126,563,o),
(143,572,q),
(160,563,o),
(198,542,o),
(232,523,o),
(258,510,o),
(263,510,qs),
(270,510,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
67 1 5 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 7 5 7 106 6 8 2 5 2 5 106 0 4 1 0 0 4 96 0 1 1 2 83 0 2 2 15 67 0 0 0 3 84 0 3 3 25 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 7 5 7 106 6 8 2 5 2 5 106 0 4 1 0 1 4 0 104 0 1 1 2 83 0 2 2 15 67 0 0 0 3 84 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 7 5 7 106 6 8 2 5 2 5 106 0 4 1 0 1 4 0 104 0 2 0 1 4 2 1 91 0 0 3 3 0 79 0 0 0 3 84 0 3 0 3 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
63 62 81 79 73 71 62 87 63 87 60 58 52 50 53 60 39 9 18
CALL[ ]	/* CallFunction */";
};
width = 290;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(-28,-38,o),
(-47,-38,qs),
(-72,-38,o),
(-113,-79,o),
(-113,-120,qs),
(-113,-140,o),
(-99,-180,o),
(-69,-212,o),
(-22,-233,o),
(11,-233,qs),
(42,-233,o),
(101,-214,o),
(151,-171,o),
(187,-98,o),
(194,-44,qs),
(195,-34,o),
(197,-7,o),
(199,23,o),
(200,51,o),
(200,61,qs),
(200,68,o),
(200,120,o),
(201,191,o),
(202,271,o),
(203,342,o),
(203,395,o),
(203,402,qs),
(203,421,o),
(196,440,o),
(180,440,qs),
(125,440,o),
(50,438,o),
(3,431,o),
(-17,419,o),
(-17,409,qs),
(-17,389,o),
(21,389,qs),
(111,389,ls),
(124,389,o),
(136,384,o),
(136,368,qs),
(136,278,ls),
(136,257,o),
(136,172,o),
(134,76,o),
(131,-14,o),
(128,-40,qs),
(120,-104,o),
(64,-171,o),
(13,-171,qs),
(-26,-171,o),
(-52,-150,o),
(-52,-143,qs),
(-52,-126,o),
(-36,-124,qs),
(-16,-122,o),
(4,-99,o),
(4,-79,qs),
(4,-58,o)
);
},
{
closed = 1;
nodes = (
(267,520,o),
(267,527,qs),
(267,540,o),
(233,584,o),
(188,625,o),
(145,655,o),
(136,655,qs),
(128,655,o),
(86,626,o),
(41,584,o),
(6,539,o),
(6,523,qs),
(6,510,o),
(17,510,qs),
(22,510,o),
(48,525,o),
(81,546,o),
(119,571,o),
(136,581,q),
(153,571,o),
(191,546,o),
(225,525,o),
(251,510,o),
(256,510,qs),
(262,510,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
64 1 5 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 7 5 7 106 6 8 2 5 2 5 106 0 4 1 0 1 4 0 104 0 1 1 2 83 0 2 2 15 67 0 0 0 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 7 5 7 106 6 8 2 5 2 5 106 0 4 1 0 1 4 0 104 0 2 0 1 4 2 1 91 0 0 0 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 7 5 7 106 6 8 2 5 2 5 106 0 4 1 0 1 4 0 104 0 2 0 1 4 2 1 91 0 0 3 3 0 79 0 0 0 3 83 0 3 0 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
60 59 77 75 70 68 59 83 60 83 57 55 49 47 52 58 39 9 18
CALL[ ]	/* CallFunction */";
};
width = 263;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(-57,-59,o),
(-68,-59,qs),
(-88,-59,o),
(-124,-87,o),
(-124,-120,qs),
(-124,-159,o),
(-63,-217,o),
(1,-217,qs),
(23,-217,o),
(69,-205,o),
(109,-168,o),
(142,-100,o),
(151,-44,qs),
(155,-21,o),
(159,23,o),
(159,46,qs),
(159,53,o),
(159,107,o),
(160,182,o),
(161,266,o),
(162,340,o),
(162,394,o),
(162,402,qs),
(162,421,o),
(155,440,o),
(139,440,qs),
(113,440,o),
(58,439,o),
(12,435,o),
(-18,426,o),
(-18,419,qs),
(-18,409,o),
(20,409,qs),
(100,409,ls),
(113,409,o),
(125,400,o),
(125,388,qs),
(125,278,ls),
(125,253,o),
(125,177,o),
(122,90,o),
(117,-1,o),
(113,-40,qs),
(107,-94,o),
(84,-154,o),
(55,-184,o),
(22,-190,o),
(6,-190,qs),
(-24,-190,o),
(-62,-182,o),
(-83,-168,o),
(-90,-152,o),
(-90,-143,qs),
(-90,-132,o),
(-82,-125,o),
(-74,-124,qs),
(-61,-122,o),
(-37,-110,o),
(-37,-89,qs),
(-37,-70,o)
);
},
{
closed = 1;
nodes = (
(254,521,qs),
(254,530,o),
(221,570,o),
(178,610,o),
(135,640,o),
(126,640,qs),
(117,640,o),
(76,610,o),
(32,570,o),
(-1,530,o),
(-1,521,qs),
(-1,510,o),
(7,510,qs),
(12,510,o),
(38,528,o),
(71,554,o),
(109,584,o),
(126,596,q),
(143,584,o),
(181,554,o),
(215,528,o),
(241,510,o),
(246,510,qs),
(254,510,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
65 1 5 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 7 5 7 106 6 8 2 5 2 5 106 0 4 1 0 0 4 96 0 1 1 2 83 0 2 2 15 67 0 0 0 3 84 0 3 3 25 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 7 5 7 106 6 8 2 5 2 5 106 0 4 1 0 1 4 0 104 0 1 1 2 83 0 2 2 15 67 0 0 0 3 84 0 3 3 25 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 7 5 7 106 6 8 2 5 2 5 106 0 4 1 0 1 4 0 104 0 2 0 1 4 2 1 91 0 0 0 3 84 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 7 5 7 106 6 8 2 5 2 5 106 0 4 1 0 1 4 0 104 0 2 0 1 4 2 1 91 0 0 3 3 0 79 0 0 0 3 84 0 3 0 3 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
61 60 78 76 71 69 60 83 61 83 58 56 52 50 52 60 42 9 18
CALL[ ]	/* CallFunction */";
};
width = 225;
}
);
note = jcircumflex;
unicode = 309;
},
{
glyphname = k;
kernLeft = germandbls;
kernRight = k;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(153,817,o),
(128,817,qs),
(71,817,o),
(2,809,o),
(-35,797,o),
(-47,782,o),
(-47,775,qs),
(-47,767,o),
(-37,757,o),
(-24,751,o),
(-8,749,o),
(-2,749,qs),
(38,749,ls),
(60,749,o),
(60,726,qs),
(60,700,o),
(61,634,o),
(63,549,o),
(64,440,o),
(64,370,qs),
(64,328,o),
(63,271,o),
(61,221,o),
(60,165,o),
(59,123,qs),
(59,103,o),
(55,71,o),
(50,69,qs),
(21,61,o),
(-5,42,o),
(-5,28,qs),
(-5,7,o),
(28,-6,o),
(45,-6,qs),
(59,-6,o),
(102,-4,o),
(118,-4,qs),
(156,-4,o),
(189,-6,o),
(201,-6,qs),
(240,-6,o),
(240,28,qs),
(240,46,o),
(221,69,o),
(200,69,qs),
(153,69,l),
(153,185,l),
(182,211,l),
(205,211,o),
(243,205,o),
(269,186,o),
(283,148,o),
(283,116,qs),
(283,50,ls),
(283,-21,o),
(339,-80,o),
(389,-80,qs),
(431,-80,o),
(481,-28,o),
(481,9,qs),
(481,26,o),
(464,52,o),
(442,52,qs),
(402,52,o),
(402,12,qs),
(402,2,o),
(391,2,qs),
(387,2,o),
(379,5,o),
(373,18,o),
(369,45,o),
(369,68,qs),
(369,116,ls),
(369,160,o),
(355,220,o),
(326,256,o),
(279,272,o),
(246,272,q),
(345,366,ls),
(350,371,o),
(376,380,o),
(387,382,qs),
(416,386,o),
(454,393,o),
(475,401,o),
(483,411,o),
(483,419,qs),
(483,436,o),
(421,446,o),
(345,446,qs),
(277,446,o),
(223,430,o),
(223,410,qs),
(223,393,o),
(238,381,o),
(252,381,qs),
(262,381,ls),
(267,381,o),
(267,377,qs),
(267,372,o),
(204,318,o),
(153,270,q),
(153,788,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 1 6 2 55 1 7 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 9 10 1 10 9 1 104 0 0 1 2 1 0 2 104 0 2 6 1 2 6 102 0 6 7 1 6 7 102 0 3 4 8 4 3 96 0 4 0 5 4 5 88 0 10 10 14 67 0 1 1 15 67 0 7 7 8 84 0 8 8 16 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 9 10 1 10 9 1 104 0 1 0 10 1 0 102 0 0 2 10 0 2 102 0 2 6 10 2 6 102 0 6 7 10 6 7 102 0 3 4 8 4 3 96 0 4 0 5 4 5 88 0 10 10 14 67 0 7 7 8 84 0 8 8 16 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
0 9 10 1 10 9 1 104 0 1 0 10 1 0 102 0 0 2 10 0 2 102 0 2 6 10 2 6 102 0 6 7 10 6 7 102 0 3 4 8 4 3 8 104 0 4 0 5 4 5 88 0 10 10 14 67 0 7 7 8 84 0 8 8 16 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
101 99 91 88 131 34 23 36 34 41 27 36 52 11 24
CALL[ ]	/* CallFunction */";
};
width = 497;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(144,817,o),
(119,817,qs),
(36,817,o),
(-38,795,o),
(-38,781,qs),
(-38,769,o),
(-12,761,o),
(0,761,qs),
(50,761,ls),
(72,761,o),
(72,738,qs),
(72,711,o),
(73,644,o),
(75,555,o),
(76,442,o),
(76,370,qs),
(76,327,o),
(75,271,o),
(74,233,o),
(73,205,o),
(72,175,o),
(71,136,o),
(71,105,qs),
(71,76,o),
(66,55,o),
(57,53,qs),
(22,45,o),
(-7,34,o),
(-7,20,qs),
(-7,4,o),
(19,-6,o),
(36,-6,qs),
(50,-6,o),
(93,-4,o),
(109,-4,qs),
(147,-4,o),
(196,-6,o),
(218,-6,qs),
(230,-6,o),
(250,2,o),
(250,15,qs),
(250,31,o),
(228,51,o),
(205,51,qs),
(144,51,l),
(144,185,l),
(186,220,l),
(216,220,o),
(256,211,o),
(280,188,o),
(290,148,o),
(290,116,qs),
(290,50,ls),
(290,-16,o),
(338,-71,o),
(380,-71,qs),
(418,-71,o),
(468,-24,o),
(468,9,qs),
(468,23,o),
(457,46,o),
(440,46,qs),
(407,46,o),
(407,12,qs),
(407,1,o),
(395,-7,o),
(389,-7,qs),
(385,-7,o),
(375,-3,o),
(366,13,o),
(360,42,o),
(360,68,qs),
(360,116,ls),
(360,160,o),
(345,219,o),
(315,254,o),
(267,268,o),
(234,268,q),
(348,376,ls),
(359,387,o),
(379,389,qs),
(408,391,o),
(447,395,o),
(470,401,o),
(480,411,o),
(480,419,qs),
(480,429,o),
(408,441,o),
(316,441,qs),
(279,441,o),
(231,427,o),
(231,412,qs),
(231,401,o),
(248,394,o),
(252,394,qs),
(259,394,ls),
(261,394,o),
(267,392,o),
(267,387,qs),
(267,379,o),
(198,315,o),
(144,264,q),
(144,788,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
0 1 7 3 56 1 5 7 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
0 1 7 3 56 1 8 7 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 3 0 7 0 3 7 104 0 7 5 0 7 5 102 0 4 0 6 4 6 88 0 10 10 11 83 0 11 11 14 67 2 1 0 0 1 83 0 1 1 15 67 8 1 5 5 9 83 0 9 9 16 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 3 0 7 0 3 7 104 0 7 5 0 7 5 102 0 1 2 1 0 3 1 0 91 0 4 0 6 4 6 88 0 10 10 11 83 0 11 11 14 67 8 1 5 5 9 83 0 9 9 16 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 3 0 7 0 3 7 104 0 7 8 0 7 8 102 0 5 8 9 8 5 9 104 0 1 2 1 0 3 1 0 91 0 4 0 6 4 6 88 0 10 10 11 83 0 11 11 14 67 0 8 8 9 83 0 9 9 16 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
101 99 95 92 71 63 34 23 36 35 41 19 22 36 53 12 24
CALL[ ]	/* CallFunction */";
};
width = 483;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(131,817,o),
(106,817,qs),
(76,817,o),
(23,813,o),
(-17,806,o),
(-41,796,o),
(-41,791,qs),
(-41,786,o),
(-25,781,o),
(-13,781,qs),
(67,781,ls),
(89,781,o),
(89,758,qs),
(89,729,o),
(90,658,o),
(92,565,o),
(93,446,o),
(93,370,qs),
(93,322,o),
(92,260,o),
(91,217,o),
(90,186,o),
(89,153,o),
(88,109,o),
(88,75,qs),
(88,46,o),
(72,27,o),
(44,23,qs),
(9,18,o),
(-10,11,o),
(-10,6,qs),
(-10,-6,o),
(23,-6,qs),
(37,-6,o),
(80,-4,o),
(96,-4,qs),
(134,-4,o),
(183,-6,o),
(205,-6,qs),
(217,-6,o),
(234,0,o),
(234,5,qs),
(234,11,o),
(215,21,o),
(192,21,qs),
(131,21,l),
(131,185,l),
(182,228,l),
(221,228,o),
(270,217,o),
(297,191,o),
(307,148,o),
(307,116,qs),
(307,50,ls),
(307,-8,o),
(338,-56,o),
(367,-56,qs),
(401,-56,o),
(445,-18,o),
(445,9,qs),
(445,36,o),
(430,36,qs),
(414,36,o),
(414,17,qs),
(414,-3,o),
(394,-22,o),
(378,-22,qs),
(370,-22,o),
(358,-17,o),
(351,1,o),
(347,37,o),
(347,68,qs),
(347,116,ls),
(347,160,o),
(329,215,o),
(293,246,o),
(242,257,o),
(209,257,q),
(345,386,ls),
(356,397,o),
(376,399,qs),
(402,401,o),
(434,405,o),
(451,409,o),
(457,415,o),
(457,419,qs),
(457,423,o),
(442,427,o),
(407,430,o),
(348,431,o),
(303,431,qs),
(228,431,o),
(228,417,qs),
(228,405,o),
(248,404,qs),
(282,402,ls),
(294,402,o),
(294,394,qs),
(294,390,o),
(270,362,o),
(227,320,o),
(167,265,o),
(131,234,q),
(131,788,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 1 6 2 56 1 4 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 4 6 7 6 4 7 104 0 2 0 6 4 2 6 91 0 3 0 5 3 5 87 0 9 9 10 83 0 10 10 14 67 0 0 0 1 83 0 1 1 15 67 0 7 7 8 83 0 8 8 16 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 4 6 7 6 4 7 104 0 1 0 0 2 1 0 91 0 2 0 6 4 2 6 91 0 3 0 5 3 5 87 0 9 9 10 83 0 10 10 14 67 0 7 7 8 83 0 8 8 16 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
102 100 94 91 132 34 23 35 35 41 27 50 54 11 24
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = k;
unicode = 107;
},
{
glyphname = kcommaaccent;
kernLeft = germandbls;
kernRight = c_k;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(198,-133,o),
(212,-143,o),
(223,-152,o),
(223,-158,qs),
(223,-188,o),
(208,-217,o),
(208,-227,qs),
(208,-244,o),
(229,-250,o),
(234,-250,qs),
(240,-250,o),
(267,-235,o),
(294,-206,o),
(315,-161,o),
(315,-131,qs),
(315,-88,o),
(271,-50,o),
(247,-50,qs),
(214,-50,o),
(187,-87,o),
(187,-108,qs),
(187,-120,o)
);
},
{
closed = 1;
nodes = (
(157,817,o),
(132,817,qs),
(102,817,o),
(43,813,o),
(-4,803,o),
(-33,787,o),
(-33,775,qs),
(-33,758,o),
(-4,749,o),
(13,749,qs),
(42,749,ls),
(64,749,o),
(64,726,qs),
(64,700,o),
(65,634,o),
(67,549,o),
(68,440,o),
(68,370,qs),
(68,336,o),
(66,253,o),
(65,176,o),
(63,117,o),
(63,107,qs),
(63,78,o),
(42,58,o),
(19,55,qs),
(14,54,o),
(-2,44,o),
(-2,24,qs),
(-2,6,o),
(32,-6,o),
(49,-6,qs),
(63,-6,o),
(106,-4,o),
(122,-4,qs),
(160,-4,o),
(209,-6,o),
(231,-6,qs),
(243,-6,o),
(260,3,o),
(260,23,qs),
(260,38,o),
(241,53,o),
(218,53,qs),
(157,53,l),
(157,185,l),
(176,205,l),
(183,191,o),
(208,142,o),
(239,84,o),
(272,23,o),
(303,-27,o),
(330,-58,o),
(339,-58,qs),
(399,-58,o),
(481,-57,o),
(532,-51,o),
(555,-39,o),
(555,-28,qs),
(555,-18,o),
(539,-7,o),
(515,-1,o),
(487,2,o),
(475,3,qs),
(433,7,o),
(395,9,o),
(384,9,qs),
(382,9,o),
(353,54,o),
(312,128,o),
(266,221,o),
(246,268,q),
(261,281,o),
(275,296,o),
(290,311,o),
(313,333,o),
(335,354,qs),
(346,365,o),
(366,367,qs),
(418,372,o),
(481,386,o),
(481,403,qs),
(481,412,o),
(470,423,o),
(442,429,o),
(394,431,o),
(357,431,qs),
(312,431,o),
(251,429,o),
(215,421,o),
(200,408,o),
(200,396,qs),
(200,384,o),
(213,370,o),
(223,370,qs),
(231,370,ls),
(236,370,o),
(236,366,qs),
(236,363,o),
(230,354,o),
(212,337,o),
(181,307,o),
(157,282,q),
(157,788,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
79 78 53 22 4 6 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 3 6 3 2 6 104 0 4 0 5 1 4 5 92 0 8 8 9 83 0 9 9 14 67 0 3 3 15 67 0 6 6 7 83 0 7 7 16 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 3 8 2 8 3 2 104 0 2 6 8 2 6 102 0 4 0 5 1 4 5 92 0 0 0 1 0 1 87 0 8 8 9 83 0 9 9 14 67 0 6 6 7 83 0 7 7 16 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
124 121 116 113 94 86 82 80 72 69 60 57 40 36 31 28 38 34 10 17
CALL[ ]	/* CallFunction */";
};
width = 549;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
ref = .ttfautohint;
},
{
alignment = -1;
ref = k.salt;
},
{
alignment = -1;
pos = (155,-149);
ref = comma;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
51 50 27 1 4 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 6 7 1 7 6 1 104 0 0 1 4 1 0 4 104 0 2 0 3 8 2 3 92 0 7 7 14 67 0 1 1 15 67 0 4 4 5 84 0 5 5 16 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 6 7 1 7 6 1 104 0 1 0 7 1 0 102 0 0 4 7 0 4 102 0 2 0 3 8 2 3 92 0 7 7 14 67 0 4 4 5 84 0 5 5 16 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 6 7 1 7 6 1 104 0 1 0 7 1 0 102 0 0 4 7 0 4 102 0 2 0 3 8 2 3 92 0 8 0 9 8 9 87 0 7 7 14 67 0 4 4 5 84 0 5 5 16 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
112 110 104 102 98 96 90 87 66 58 54 52 44 42 36 34 52 53 10 28
CALL[ ]	/* CallFunction */";
};
width = 533;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(131,817,o),
(106,817,qs),
(76,817,o),
(23,813,o),
(-17,806,o),
(-41,796,o),
(-41,791,qs),
(-41,786,o),
(-25,781,o),
(-13,781,qs),
(67,781,ls),
(89,781,o),
(89,758,qs),
(89,729,o),
(90,658,o),
(92,565,o),
(93,446,o),
(93,370,qs),
(93,322,o),
(92,260,o),
(91,217,o),
(90,186,o),
(89,153,o),
(88,109,o),
(88,75,qs),
(88,46,o),
(72,27,o),
(44,23,qs),
(9,18,o),
(-10,11,o),
(-10,6,qs),
(-10,-6,o),
(23,-6,qs),
(37,-6,o),
(80,-4,o),
(96,-4,qs),
(134,-4,o),
(183,-6,o),
(205,-6,qs),
(217,-6,o),
(234,0,o),
(234,5,qs),
(234,11,o),
(215,21,o),
(192,21,qs),
(131,21,l),
(131,185,l),
(184,235,l),
(190,224,o),
(216,172,o),
(250,107,o),
(289,37,o),
(325,-21,o),
(355,-59,o),
(364,-59,qs),
(435,-59,o),
(512,-55,o),
(512,-44,qs),
(512,-34,o),
(489,-29,o),
(466,-29,qs),
(424,-29,o),
(384,-26,o),
(378,-18,qs),
(346,21,o),
(292,114,o),
(250,197,o),
(223,259,o),
(220,268,q),
(235,281,o),
(261,306,o),
(289,333,o),
(323,365,o),
(345,386,qs),
(356,397,o),
(376,399,qs),
(402,401,o),
(434,405,o),
(451,409,o),
(457,415,o),
(457,419,qs),
(457,423,o),
(442,427,o),
(407,430,o),
(348,431,o),
(303,431,qs),
(228,431,o),
(228,417,qs),
(228,405,o),
(248,404,qs),
(282,402,ls),
(294,402,o),
(294,394,qs),
(294,390,o),
(270,362,o),
(227,320,o),
(167,265,o),
(131,234,q),
(131,788,ls)
);
},
{
closed = 1;
nodes = (
(217,-126,o),
(231,-133,o),
(242,-140,o),
(242,-146,qs),
(242,-156,o),
(231,-185,o),
(231,-192,qs),
(231,-197,o),
(240,-204,o),
(245,-204,qs),
(255,-204,o),
(272,-187,o),
(282,-162,o),
(288,-135,o),
(288,-125,qs),
(288,-91,o),
(261,-68,o),
(246,-68,qs),
(226,-68,o),
(206,-89,o),
(206,-102,qs),
(206,-114,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
51 50 29 0 4 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 2 0 3 8 2 3 91 0 6 6 7 83 0 7 7 14 67 0 0 0 1 83 0 1 1 15 67 0 4 4 5 83 0 5 5 16 67 0 8 8 9 83 0 9 9 17 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 0 4 1 0 91 0 2 0 3 8 2 3 91 0 6 6 7 83 0 7 7 14 67 0 4 4 5 83 0 5 5 16 67 0 8 8 9 83 0 9 9 17 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 0 4 1 0 91 0 2 0 3 8 2 3 91 0 8 0 9 8 9 87 0 6 6 7 83 0 7 7 14 67 0 4 4 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
111 109 103 101 97 95 89 86 66 58 54 52 44 41 38 36 50 54 10 17
CALL[ ]	/* CallFunction */";
};
width = 510;
}
);
note = kcommaaccent;
unicode = 311;
},
{
glyphname = kgreenlandic;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(184,457,o),
(159,457,qs),
(129,457,o),
(71,452,o),
(24,442,o),
(-5,426,o),
(-5,415,qs),
(-5,406,o),
(5,395,o),
(18,390,o),
(34,389,o),
(40,389,qs),
(69,389,ls),
(91,389,o),
(91,366,qs),
(91,343,o),
(91,314,o),
(92,289,o),
(92,260,o),
(92,238,qs),
(92,174,o),
(90,95,o),
(90,75,qs),
(90,64,o),
(72,60,o),
(46,55,qs),
(35,53,o),
(26,37,o),
(26,26,qs),
(26,8,o),
(56,-6,o),
(76,-6,qs),
(90,-6,o),
(133,-4,o),
(149,-4,qs),
(187,-4,o),
(236,-6,o),
(258,-6,qs),
(270,-6,o),
(287,7,o),
(287,21,qs),
(287,39,o),
(268,53,o),
(245,53,qs),
(184,53,l),
(184,185,l),
(203,205,l),
(209,194,o),
(233,147,o),
(263,88,o),
(298,26,o),
(330,-26,o),
(358,-59,o),
(366,-59,qs),
(475,-59,o),
(575,-44,o),
(575,-28,qs),
(575,-17,o),
(558,-5,o),
(534,1,o),
(506,3,o),
(494,3,qs),
(452,3,o),
(411,6,o),
(406,14,qs),
(378,57,o),
(331,143,o),
(296,214,o),
(275,262,o),
(273,268,q),
(288,281,o),
(302,296,o),
(317,311,o),
(340,333,o),
(362,354,qs),
(373,365,o),
(393,367,qs),
(459,372,o),
(512,389,o),
(512,403,qs),
(512,411,o),
(498,422,o),
(457,428,o),
(382,431,o),
(320,431,qs),
(283,431,o),
(242,418,o),
(242,397,qs),
(242,377,o),
(259,377,qs),
(268,377,ls),
(273,377,o),
(273,374,qs),
(273,369,o),
(233,326,o),
(184,282,q),
(184,428,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
50 49 26 0 4 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
6 1 0 1 4 1 0 4 104 0 2 0 3 2 3 88 0 7 7 23 67 0 1 1 15 67 0 4 4 5 84 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 7 1 7 106 0 1 6 1 106 0 6 0 6 106 0 0 4 0 106 0 2 0 3 2 3 88 0 4 4 5 84 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
95 93 86 82 65 57 53 51 43 41 35 33 51 52 8 17
CALL[ ]	/* CallFunction */";
};
width = 572;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(177,457,o),
(152,457,qs),
(122,457,o),
(66,452,o),
(22,443,o),
(-5,430,o),
(-5,421,qs),
(-5,407,o),
(21,401,o),
(33,401,qs),
(83,401,ls),
(105,401,o),
(105,378,qs),
(105,353,o),
(105,321,o),
(106,293,o),
(106,262,o),
(106,238,qs),
(106,174,o),
(104,95,o),
(104,75,qs),
(104,58,o),
(87,48,o),
(60,43,qs),
(26,37,o),
(26,16,qs),
(26,3,o),
(52,-6,o),
(69,-6,qs),
(83,-6,o),
(126,-4,o),
(142,-4,qs),
(180,-4,o),
(229,-6,o),
(251,-6,qs),
(263,-6,o),
(280,4,o),
(280,15,qs),
(280,29,o),
(261,41,o),
(238,41,qs),
(177,41,l),
(177,185,l),
(210,216,l),
(216,205,o),
(241,156,o),
(273,95,o),
(309,30,o),
(343,-24,o),
(371,-59,o),
(380,-59,qs),
(474,-59,o),
(564,-48,o),
(564,-34,qs),
(564,-25,o),
(552,-15,o),
(532,-10,o),
(509,-9,o),
(497,-9,qs),
(455,-9,o),
(414,-6,o),
(409,2,qs),
(381,41,o),
(332,128,o),
(294,204,o),
(269,259,o),
(266,268,q),
(281,281,o),
(300,300,o),
(321,320,o),
(348,345,o),
(370,366,qs),
(381,377,o),
(401,379,qs),
(461,384,o),
(504,397,o),
(504,409,qs),
(504,415,o),
(490,424,o),
(451,429,o),
(383,431,o),
(328,431,qs),
(291,431,o),
(251,420,o),
(251,407,qs),
(251,399,o),
(260,384,o),
(274,384,qs),
(278,384,ls),
(289,384,o),
(289,374,qs),
(289,368,o),
(236,315,o),
(177,264,q),
(177,428,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
51 50 27 0 4 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 6 1 0 1 6 0 104 0 0 4 1 0 4 102 0 2 0 3 2 3 88 0 7 7 23 67 0 1 1 15 67 0 4 4 5 84 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 7 1 7 106 0 1 6 1 106 0 6 0 6 106 0 0 4 0 106 0 2 0 3 2 3 88 0 4 4 5 84 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
93 91 85 82 66 58 54 52 44 42 37 34 52 52 8 17
CALL[ ]	/* CallFunction */";
};
width = 561;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(167,457,o),
(142,457,qs),
(112,457,o),
(59,453,o),
(19,446,o),
(-5,436,o),
(-5,431,qs),
(-5,426,o),
(11,421,o),
(23,421,qs),
(103,421,ls),
(125,421,o),
(125,398,qs),
(125,369,o),
(125,333,o),
(126,301,o),
(126,266,o),
(126,238,qs),
(126,174,o),
(124,95,o),
(124,75,qs),
(124,46,o),
(108,27,o),
(80,23,qs),
(45,18,o),
(26,11,o),
(26,6,qs),
(26,-6,o),
(59,-6,qs),
(73,-6,o),
(116,-4,o),
(132,-4,qs),
(170,-4,o),
(219,-6,o),
(241,-6,qs),
(253,-6,o),
(270,0,o),
(270,5,qs),
(270,11,o),
(251,21,o),
(228,21,qs),
(167,21,l),
(167,185,l),
(220,235,l),
(226,224,o),
(252,172,o),
(287,107,o),
(325,37,o),
(361,-21,o),
(391,-59,o),
(400,-59,qs),
(471,-59,o),
(548,-55,o),
(548,-44,qs),
(548,-34,o),
(525,-29,o),
(502,-29,qs),
(460,-29,o),
(420,-26,o),
(414,-18,qs),
(382,21,o),
(328,114,o),
(286,197,o),
(259,259,o),
(256,268,q),
(271,281,o),
(297,306,o),
(325,333,o),
(359,365,o),
(381,386,qs),
(392,397,o),
(412,399,qs),
(438,401,o),
(470,405,o),
(487,409,o),
(493,415,o),
(493,419,qs),
(493,423,o),
(478,427,o),
(443,430,o),
(384,431,o),
(339,431,qs),
(264,431,o),
(264,417,qs),
(264,405,o),
(284,404,qs),
(318,402,ls),
(330,402,o),
(330,394,qs),
(330,390,o),
(306,362,o),
(263,320,o),
(203,265,o),
(167,234,q),
(167,428,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
51 50 29 0 4 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 2 0 3 2 3 87 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 0 4 4 5 83 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 7 0 6 0 7 6 91 0 1 0 0 4 1 0 91 0 2 0 3 2 3 87 0 4 4 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
93 91 85 82 66 58 54 52 44 41 38 36 50 54 8 17
CALL[ ]	/* CallFunction */";
};
width = 546;
}
);
note = kgreenlandic;
unicode = 312;
},
{
glyphname = l;
kernLeft = l;
kernRight = l;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(182,807,o),
(172,819,o),
(152,821,o),
(135,821,qs),
(83,821,o),
(19,816,o),
(-17,806,o),
(-29,790,o),
(-29,779,qs),
(-29,767,o),
(-8,755,o),
(18,755,qs),
(61,755,ls),
(75,755,o),
(94,740,o),
(94,723,qs),
(94,695,o),
(94,638,o),
(95,566,o),
(95,474,o),
(95,413,qs),
(95,354,o),
(95,262,o),
(93,189,o),
(91,129,o),
(90,103,qs),
(89,89,o),
(68,72,o),
(53,71,qs),
(16,69,ls),
(6,68,o),
(-10,55,o),
(-10,39,qs),
(-10,23,o),
(15,0,o),
(42,0,qs),
(58,0,o),
(102,2,o),
(129,2,qs),
(137,2,o),
(166,1,o),
(197,0,o),
(226,-1,o),
(233,-1,qs),
(258,-1,o),
(278,25,o),
(278,34,qs),
(278,50,o),
(256,75,o),
(221,75,qs),
(186,75,l),
(186,139,o),
(184,408,o),
(184,626,qs),
(184,639,o),
(185,711,o),
(185,761,qs),
(185,783,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
31 1 0 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 3 4 0 4 3 0 104 0 4 4 12 67 2 1 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 3 4 0 4 3 0 104 0 2 0 1 0 2 96 0 4 4 14 67 0 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
38 62 37 164 38 5 20
CALL[ ]	/* CallFunction */";
};
width = 269;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(138,820,o),
(110,820,qs),
(90,820,o),
(42,818,o),
(-1,812,o),
(-30,801,o),
(-30,791,qs),
(-30,779,o),
(-5,770,o),
(16,770,qs),
(78,770,ls),
(91,770,o),
(97,758,o),
(97,742,qs),
(97,713,o),
(97,651,o),
(98,574,o),
(98,477,o),
(98,413,qs),
(98,351,o),
(98,253,o),
(96,175,o),
(94,113,o),
(93,85,qs),
(91,57,o),
(46,54,qs),
(13,52,ls),
(8,52,o),
(-8,41,o),
(-8,26,qs),
(-8,17,o),
(11,0,o),
(35,0,qs),
(43,0,o),
(66,1,o),
(91,1,o),
(116,2,o),
(126,2,qs),
(139,2,o),
(168,1,o),
(195,0,o),
(219,-1,o),
(226,-1,qs),
(247,-1,o),
(264,17,o),
(264,25,qs),
(264,37,o),
(245,57,o),
(214,57,qs),
(168,57,l),
(168,124,o),
(166,400,o),
(166,626,qs),
(166,627,o),
(166,658,o),
(166,705,o),
(167,760,o),
(167,785,qs),
(167,811,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 0 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
53 61 52 196 40 5 20
CALL[ ]	/* CallFunction */";
};
width = 256;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(120,820,o),
(100,820,qs),
(86,820,o),
(42,819,o),
(0,814,o),
(-30,806,o),
(-30,799,qs),
(-30,794,o),
(-11,790,o),
(6,790,qs),
(83,790,ls),
(96,790,o),
(102,778,o),
(102,762,qs),
(102,731,o),
(102,665,o),
(103,583,o),
(103,480,o),
(103,413,qs),
(103,345,o),
(103,239,o),
(101,153,o),
(99,85,o),
(98,55,qs),
(96,28,o),
(36,25,qs),
(13,24,ls),
(-8,23,o),
(-8,11,qs),
(-8,5,o),
(5,0,o),
(25,0,qs),
(33,0,o),
(56,1,o),
(81,1,o),
(106,2,o),
(116,2,qs),
(129,2,o),
(158,1,o),
(185,0,o),
(209,-1,o),
(216,-1,qs),
(232,-1,o),
(244,5,o),
(244,10,qs),
(244,16,o),
(229,27,o),
(204,27,qs),
(143,27,l),
(143,97,o),
(141,388,o),
(141,626,qs),
(141,627,o),
(141,658,o),
(141,705,o),
(142,760,o),
(142,785,qs),
(142,811,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
33 1 0 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
53 61 51 196 40 5 20
CALL[ ]	/* CallFunction */";
};
width = 237;
}
);
note = l;
unicode = 108;
},
{
glyphname = lacute;
kernLeft = l;
kernRight = l;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(199,950,o),
(188,963,o),
(169,972,o),
(154,972,qs),
(134,972,o),
(94,936,o),
(63,893,o),
(44,855,o),
(44,852,qs),
(46,838,o),
(67,830,o),
(81,830,qs),
(99,830,o),
(142,848,o),
(179,877,o),
(204,913,o),
(204,931,qs),
(204,936,o)
);
},
{
closed = 1;
nodes = (
(217,807,o),
(207,819,o),
(187,821,o),
(170,821,qs),
(118,821,o),
(54,816,o),
(18,806,o),
(6,790,o),
(6,779,qs),
(6,767,o),
(27,755,o),
(53,755,qs),
(96,755,ls),
(110,755,o),
(129,740,o),
(129,723,qs),
(129,695,o),
(129,638,o),
(130,566,o),
(130,474,o),
(130,413,qs),
(130,354,o),
(130,262,o),
(128,189,o),
(126,129,o),
(125,103,qs),
(124,89,o),
(103,72,o),
(88,71,qs),
(51,69,ls),
(41,68,o),
(25,55,o),
(25,39,qs),
(25,23,o),
(50,0,o),
(77,0,qs),
(93,0,o),
(137,2,o),
(164,2,qs),
(172,2,o),
(201,1,o),
(232,0,o),
(261,-1,o),
(268,-1,qs),
(293,-1,o),
(313,25,o),
(313,34,qs),
(313,50,o),
(291,75,o),
(256,75,qs),
(221,75,l),
(221,139,o),
(219,408,o),
(219,626,qs),
(219,639,o),
(220,711,o),
(220,761,qs),
(220,783,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
8 1 0 1 49 1 2 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 6 2 6 5 2 104 0 6 6 12 67 4 1 2 2 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 6 2 6 5 2 104 0 4 2 3 2 4 96 0 6 6 14 67 0 2 2 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 62 37 164 42 38 36 7 22
CALL[ ]	/* CallFunction */";
};
width = 269;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(175,972,o),
(155,972,qs),
(140,972,o),
(103,942,o),
(72,905,o),
(51,870,o),
(51,865,qs),
(52,853,o),
(68,847,o),
(76,847,qs),
(89,847,o),
(129,865,o),
(166,892,o),
(192,924,o),
(192,938,qs),
(192,950,o)
);
},
{
closed = 1;
nodes = (
(138,820,o),
(110,820,qs),
(90,820,o),
(42,818,o),
(-1,812,o),
(-30,801,o),
(-30,791,qs),
(-30,779,o),
(-5,770,o),
(16,770,qs),
(78,770,ls),
(91,770,o),
(97,758,o),
(97,742,qs),
(97,713,o),
(97,651,o),
(98,574,o),
(98,477,o),
(98,413,qs),
(98,351,o),
(98,253,o),
(96,175,o),
(94,113,o),
(93,85,qs),
(91,57,o),
(46,54,qs),
(13,52,ls),
(8,52,o),
(-8,41,o),
(-8,26,qs),
(-8,17,o),
(11,0,o),
(35,0,qs),
(43,0,o),
(66,1,o),
(91,1,o),
(116,2,o),
(126,2,qs),
(139,2,o),
(168,1,o),
(195,0,o),
(219,-1,o),
(226,-1,qs),
(247,-1,o),
(264,17,o),
(264,25,qs),
(264,37,o),
(245,57,o),
(214,57,qs),
(168,57,l),
(168,124,o),
(166,400,o),
(166,626,qs),
(166,627,o),
(166,658,o),
(166,705,o),
(167,760,o),
(167,785,qs),
(167,811,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
8 1 0 1 50 1 2 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 5 6 83 0 6 6 12 67 4 1 2 2 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 5 6 83 0 6 6 14 67 4 1 2 2 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
53 61 52 196 42 38 36 7 22
CALL[ ]	/* CallFunction */";
};
width = 256;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(164,972,o),
(156,972,qs),
(149,972,o),
(117,952,o),
(85,925,o),
(61,895,o),
(61,886,qs),
(61,875,o),
(69,875,qs),
(76,875,o),
(111,893,o),
(147,917,o),
(175,942,o),
(175,950,qs),
(175,964,o)
);
},
{
closed = 1;
nodes = (
(120,820,o),
(100,820,qs),
(86,820,o),
(42,819,o),
(0,814,o),
(-30,806,o),
(-30,799,qs),
(-30,794,o),
(-11,790,o),
(6,790,qs),
(83,790,ls),
(96,790,o),
(102,778,o),
(102,762,qs),
(102,731,o),
(102,665,o),
(103,583,o),
(103,480,o),
(103,413,qs),
(103,345,o),
(103,239,o),
(101,153,o),
(99,85,o),
(98,55,qs),
(96,28,o),
(36,25,qs),
(13,24,ls),
(-8,23,o),
(-8,11,qs),
(-8,5,o),
(5,0,o),
(25,0,qs),
(33,0,o),
(56,1,o),
(81,1,o),
(106,2,o),
(116,2,qs),
(129,2,o),
(158,1,o),
(185,0,o),
(209,-1,o),
(216,-1,qs),
(232,-1,o),
(244,5,o),
(244,10,qs),
(244,16,o),
(229,27,o),
(204,27,qs),
(143,27,l),
(143,97,o),
(141,388,o),
(141,626,qs),
(141,627,o),
(141,658,o),
(141,705,o),
(142,760,o),
(142,785,qs),
(142,811,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
48 1 2 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 5 6 83 0 6 6 12 67 4 1 2 2 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 5 6 83 0 6 6 14 67 4 1 2 2 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
53 61 51 196 42 37 36 7 22
CALL[ ]	/* CallFunction */";
};
width = 237;
}
);
note = lacute;
unicode = 314;
},
{
glyphname = lcaron;
kernLeft = l;
kernRight = l;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(233,766,o),
(247,756,o),
(258,747,o),
(258,741,qs),
(258,711,o),
(243,682,o),
(243,672,qs),
(243,655,o),
(264,649,o),
(269,649,qs),
(275,649,o),
(302,664,o),
(329,693,o),
(350,738,o),
(350,768,qs),
(350,811,o),
(306,849,o),
(282,849,qs),
(249,849,o),
(222,812,o),
(222,791,qs),
(222,779,o)
);
},
{
closed = 1;
nodes = (
(217,807,o),
(207,819,o),
(187,821,o),
(170,821,qs),
(118,821,o),
(54,816,o),
(18,806,o),
(6,790,o),
(6,779,qs),
(6,767,o),
(27,755,o),
(53,755,qs),
(96,755,ls),
(110,755,o),
(129,740,o),
(129,723,qs),
(129,695,o),
(129,638,o),
(130,566,o),
(130,474,o),
(130,413,qs),
(130,354,o),
(130,262,o),
(128,189,o),
(126,129,o),
(125,103,qs),
(124,89,o),
(103,72,o),
(88,71,qs),
(51,69,ls),
(41,68,o),
(25,55,o),
(25,39,qs),
(25,23,o),
(50,0,o),
(77,0,qs),
(93,0,o),
(137,2,o),
(164,2,qs),
(172,2,o),
(201,1,o),
(232,0,o),
(261,-1,o),
(268,-1,qs),
(293,-1,o),
(313,25,o),
(313,34,qs),
(313,50,o),
(291,75,o),
(256,75,qs),
(221,75,l),
(221,139,o),
(219,408,o),
(219,626,qs),
(219,639,o),
(220,711,o),
(220,761,qs),
(220,783,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
53 1 2 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 5 6 1 6 5 1 104 0 6 6 12 67 0 1 1 0 83 0 0 0 20 67 4 1 2 2 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 5 6 1 6 5 1 104 0 4 2 3 2 4 96 0 0 0 1 2 0 1 91 0 6 6 14 67 0 2 2 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
76 74 68 65 51 49 44 34 30 28 38 34 7 17
CALL[ ]	/* CallFunction */";
};
width = 269;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
ref = .ttfautohint;
},
{
alignment = -1;
ref = l;
},
{
alignment = -1;
pos = (165,765);
ref = comma;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
35 1 0 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 4 83 0 4 4 12 67 0 6 6 5 83 0 5 5 20 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 0 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 36 53 61 52 196 41 7 33
CALL[ ]	/* CallFunction */";
};
width = 256;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(120,820,o),
(100,820,qs),
(86,820,o),
(42,819,o),
(0,814,o),
(-30,806,o),
(-30,799,qs),
(-30,794,o),
(-11,790,o),
(6,790,qs),
(83,790,ls),
(96,790,o),
(102,778,o),
(102,762,qs),
(102,731,o),
(102,665,o),
(103,583,o),
(103,480,o),
(103,413,qs),
(103,345,o),
(103,239,o),
(101,153,o),
(99,85,o),
(98,55,qs),
(96,28,o),
(36,25,qs),
(13,24,ls),
(-8,23,o),
(-8,11,qs),
(-8,5,o),
(5,0,o),
(25,0,qs),
(33,0,o),
(56,1,o),
(81,1,o),
(106,2,o),
(116,2,qs),
(129,2,o),
(158,1,o),
(185,0,o),
(209,-1,o),
(216,-1,qs),
(232,-1,o),
(244,5,o),
(244,10,qs),
(244,16,o),
(229,27,o),
(204,27,qs),
(143,27,l),
(143,97,o),
(141,388,o),
(141,626,qs),
(141,627,o),
(141,658,o),
(141,705,o),
(142,760,o),
(142,785,qs),
(142,811,o)
);
},
{
closed = 1;
nodes = (
(209,795,o),
(219,785,o),
(227,777,o),
(227,772,qs),
(227,761,o),
(208,738,o),
(208,730,qs),
(208,724,o),
(219,715,o),
(224,715,qs),
(237,715,o),
(257,736,o),
(271,765,o),
(279,796,o),
(279,806,qs),
(279,826,o),
(256,850,o),
(237,850,qs),
(221,850,o),
(201,830,o),
(201,816,qs),
(201,807,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
33 1 0 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 4 83 0 4 4 12 67 0 6 6 5 83 0 5 5 20 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 0 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 36 53 61 51 196 40 7 22
CALL[ ]	/* CallFunction */";
};
width = 237;
}
);
note = lcaron;
unicode = 318;
},
{
glyphname = lcommaaccent;
kernLeft = l;
kernRight = l;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(84,-132,o),
(98,-142,o),
(109,-151,o),
(109,-157,qs),
(109,-187,o),
(94,-216,o),
(94,-226,qs),
(94,-243,o),
(115,-249,o),
(120,-249,qs),
(126,-249,o),
(153,-234,o),
(180,-205,o),
(201,-160,o),
(201,-130,qs),
(201,-87,o),
(157,-49,o),
(133,-49,qs),
(100,-49,o),
(73,-86,o),
(73,-107,qs),
(73,-119,o)
);
},
{
closed = 1;
nodes = (
(217,807,o),
(207,819,o),
(187,821,o),
(170,821,qs),
(118,821,o),
(54,816,o),
(18,806,o),
(6,790,o),
(6,779,qs),
(6,767,o),
(27,755,o),
(53,755,qs),
(96,755,ls),
(110,755,o),
(129,740,o),
(129,723,qs),
(129,695,o),
(129,638,o),
(130,566,o),
(130,474,o),
(130,413,qs),
(130,354,o),
(130,262,o),
(128,189,o),
(126,129,o),
(125,103,qs),
(124,89,o),
(103,72,o),
(88,71,qs),
(51,69,ls),
(41,68,o),
(25,55,o),
(25,39,qs),
(25,23,o),
(50,0,o),
(77,0,qs),
(93,0,o),
(137,2,o),
(164,2,qs),
(172,2,o),
(201,1,o),
(232,0,o),
(261,-1,o),
(268,-1,qs),
(293,-1,o),
(313,25,o),
(313,34,qs),
(313,50,o),
(291,75,o),
(256,75,qs),
(221,75,l),
(221,139,o),
(219,408,o),
(219,626,qs),
(219,639,o),
(220,711,o),
(220,761,qs),
(220,783,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
53 1 2 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 5 6 2 6 5 2 104 0 6 6 12 67 4 1 2 2 3 84 0 3 3 13 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 5 6 2 6 5 2 104 0 0 0 1 0 1 87 0 6 6 12 67 4 1 2 2 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 5 6 2 6 5 2 104 0 4 2 3 2 4 96 0 0 0 1 0 1 87 0 6 6 14 67 0 2 2 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
76 74 68 65 51 49 44 34 30 28 38 34 7 17
CALL[ ]	/* CallFunction */";
};
width = 271;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
ref = .ttfautohint;
},
{
alignment = -1;
ref = l;
},
{
alignment = -1;
pos = (30,-139);
ref = comma;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
35 1 0 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 67 0 5 5 6 83 0 6 6 25 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 5 0 6 5 6 87 0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 5 0 6 5 6 87 0 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 36 53 61 52 196 41 7 33
CALL[ ]	/* CallFunction */";
};
width = 257;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(120,820,o),
(100,820,qs),
(86,820,o),
(42,819,o),
(0,814,o),
(-30,806,o),
(-30,799,qs),
(-30,794,o),
(-11,790,o),
(6,790,qs),
(83,790,ls),
(96,790,o),
(102,778,o),
(102,762,qs),
(102,731,o),
(102,665,o),
(103,583,o),
(103,480,o),
(103,413,qs),
(103,345,o),
(103,239,o),
(101,153,o),
(99,85,o),
(98,55,qs),
(96,28,o),
(36,25,qs),
(13,24,ls),
(-8,23,o),
(-8,11,qs),
(-8,5,o),
(5,0,o),
(25,0,qs),
(33,0,o),
(56,1,o),
(81,1,o),
(106,2,o),
(116,2,qs),
(129,2,o),
(158,1,o),
(185,0,o),
(209,-1,o),
(216,-1,qs),
(232,-1,o),
(244,5,o),
(244,10,qs),
(244,16,o),
(229,27,o),
(204,27,qs),
(143,27,l),
(143,97,o),
(141,388,o),
(141,626,qs),
(141,627,o),
(141,658,o),
(141,705,o),
(142,760,o),
(142,785,qs),
(142,811,o)
);
},
{
closed = 1;
nodes = (
(91,-123,o),
(105,-130,o),
(116,-137,o),
(116,-143,qs),
(116,-153,o),
(105,-182,o),
(105,-189,qs),
(105,-194,o),
(114,-201,o),
(119,-201,qs),
(129,-201,o),
(146,-184,o),
(156,-159,o),
(162,-132,o),
(162,-122,qs),
(162,-88,o),
(135,-65,o),
(120,-65,qs),
(100,-65,o),
(80,-86,o),
(80,-99,qs),
(80,-111,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
33 1 0 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 67 0 5 5 6 83 0 6 6 17 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 5 0 6 5 6 87 0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 5 0 6 5 6 87 0 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 36 53 61 51 196 40 7 22
CALL[ ]	/* CallFunction */";
};
width = 237;
}
);
note = lcommaaccent;
unicode = 316;
},
{
glyphname = ldot;
kernLeft = l;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(217,807,o),
(207,819,o),
(187,821,o),
(170,821,qs),
(118,821,o),
(54,816,o),
(18,806,o),
(6,790,o),
(6,779,qs),
(6,767,o),
(27,755,o),
(53,755,qs),
(96,755,ls),
(110,755,o),
(129,740,o),
(129,723,qs),
(129,695,o),
(129,638,o),
(130,566,o),
(130,474,o),
(130,413,qs),
(130,354,o),
(130,262,o),
(128,189,o),
(126,129,o),
(125,103,qs),
(124,89,o),
(103,72,o),
(88,71,qs),
(51,69,ls),
(41,68,o),
(25,55,o),
(25,39,qs),
(25,23,o),
(50,0,o),
(77,0,qs),
(93,0,o),
(137,2,o),
(164,2,qs),
(172,2,o),
(201,1,o),
(232,0,o),
(261,-1,o),
(268,-1,qs),
(293,-1,o),
(313,25,o),
(313,34,qs),
(313,50,o),
(291,75,o),
(256,75,qs),
(221,75,l),
(221,139,o),
(219,408,o),
(219,626,qs),
(219,639,o),
(220,711,o),
(220,761,qs),
(220,783,o)
);
},
{
closed = 1;
nodes = (
(265,333,o),
(290,333,qs),
(301,333,o),
(325,339,o),
(344,355,o),
(357,382,o),
(357,403,qs),
(357,430,o),
(321,464,o),
(297,464,qs),
(279,464,o),
(254,451,o),
(238,432,o),
(231,409,o),
(231,399,qs),
(231,367,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
31 1 0 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 3 4 5 4 3 5 104 0 4 4 12 67 0 6 6 5 83 0 5 5 23 67 2 1 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 3 4 5 4 3 5 104 0 5 0 6 0 5 6 91 0 4 4 12 67 2 1 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 3 4 5 4 3 5 104 0 2 0 1 0 2 96 0 5 0 6 0 5 6 91 0 4 4 14 67 0 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 40 38 62 37 164 38 7 22
CALL[ ]	/* CallFunction */";
};
width = 330;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
ref = .ttfautohint;
},
{
alignment = -1;
ref = l;
},
{
alignment = -1;
pos = (212,-185);
ref = dotaccent;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
35 1 0 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 4 83 0 4 4 12 67 0 6 6 5 83 0 5 5 15 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 0 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
36 38 53 61 52 196 41 7 33
CALL[ ]	/* CallFunction */";
};
width = 317;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(120,820,o),
(100,820,qs),
(86,820,o),
(42,819,o),
(0,814,o),
(-30,806,o),
(-30,799,qs),
(-30,794,o),
(-11,790,o),
(6,790,qs),
(83,790,ls),
(96,790,o),
(102,778,o),
(102,762,qs),
(102,731,o),
(102,665,o),
(103,583,o),
(103,480,o),
(103,413,qs),
(103,345,o),
(103,239,o),
(101,153,o),
(99,85,o),
(98,55,qs),
(96,28,o),
(36,25,qs),
(13,24,ls),
(-8,23,o),
(-8,11,qs),
(-8,5,o),
(5,0,o),
(25,0,qs),
(33,0,o),
(56,1,o),
(81,1,o),
(106,2,o),
(116,2,qs),
(129,2,o),
(158,1,o),
(185,0,o),
(209,-1,o),
(216,-1,qs),
(232,-1,o),
(244,5,o),
(244,10,qs),
(244,16,o),
(229,27,o),
(204,27,qs),
(143,27,l),
(143,97,o),
(141,388,o),
(141,626,qs),
(141,627,o),
(141,658,o),
(141,705,o),
(142,760,o),
(142,785,qs),
(142,811,o)
);
},
{
closed = 1;
nodes = (
(246,357,o),
(269,357,qs),
(291,357,o),
(314,382,o),
(314,397,qs),
(314,411,o),
(294,435,o),
(271,435,qs),
(247,435,o),
(227,408,o),
(227,395,qs),
(227,382,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
33 1 0 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 4 83 0 4 4 12 67 0 6 6 5 83 0 5 5 15 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 0 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
36 36 53 61 51 196 40 7 22
CALL[ ]	/* CallFunction */";
};
width = 299;
}
);
note = ldot;
unicode = 320;
},
{
glyphname = lslash;
kernLeft = l;
kernRight = l;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(215,807,o),
(205,819,o),
(185,821,o),
(168,821,qs),
(116,821,o),
(52,816,o),
(16,806,o),
(4,790,o),
(4,779,qs),
(4,767,o),
(25,755,o),
(51,755,qs),
(94,755,ls),
(108,755,o),
(127,740,o),
(127,723,qs),
(127,696,o),
(127,640,o),
(128,572,o),
(128,486,o),
(128,429,q),
(93,404,o),
(33,362,o),
(17,351,qs),
(14,349,o),
(12,336,o),
(12,330,qs),
(12,312,o),
(35,289,o),
(53,289,qs),
(59,289,o),
(100,312,o),
(128,329,q),
(127,251,o),
(125,145,o),
(123,103,qs),
(122,89,o),
(101,72,o),
(86,71,qs),
(49,69,ls),
(39,68,o),
(23,55,o),
(23,39,qs),
(23,23,o),
(48,0,o),
(75,0,qs),
(91,0,o),
(135,2,o),
(162,2,qs),
(170,2,o),
(199,1,o),
(230,0,o),
(259,-1,o),
(266,-1,qs),
(291,-1,o),
(311,25,o),
(311,34,qs),
(311,50,o),
(289,75,o),
(254,75,qs),
(219,75,l),
(219,120,o),
(218,275,o),
(217,390,q),
(254,416,o),
(312,461,o),
(322,471,qs),
(325,475,o),
(331,484,o),
(331,492,qs),
(331,498,o),
(328,514,o),
(319,528,o),
(303,538,o),
(289,538,qs),
(285,538,o),
(243,511,o),
(217,492,q),
(217,626,ls),
(217,639,o),
(218,711,o),
(218,761,qs),
(218,783,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
61 49 18 4 4 4 0 46 1 1 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 5 6 0 6 5 0 104 0 0 4 6 0 4 102 0 4 1 6 4 1 102 0 6 6 12 67 3 1 1 1 2 84 0 2 2 13 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 5 6 0 6 5 0 104 0 0 4 6 0 4 102 0 4 1 6 4 1 102 0 3 1 2 1 3 96 0 6 6 14 67 0 1 1 2 84 0 2 2 13 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 63 39 37 164 45 38 7 22
CALL[ ]	/* CallFunction */";
};
width = 268;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(8,330,o),
(8,325,qs),
(8,311,o),
(25,295,o),
(38,295,qs),
(44,295,o),
(83,317,o),
(135,351,o),
(196,394,o),
(252,434,o),
(296,468,o),
(307,477,qs),
(318,486,o),
(318,499,qs),
(318,510,o),
(307,532,o),
(288,532,qs),
(285,532,o),
(250,509,o),
(198,474,o),
(137,430,o),
(79,389,o),
(29,354,o),
(16,345,qs),
(11,342,o)
);
},
{
closed = 1;
nodes = (
(146,820,o),
(118,820,qs),
(98,820,o),
(50,818,o),
(7,812,o),
(-22,801,o),
(-22,791,qs),
(-22,779,o),
(3,770,o),
(24,770,qs),
(86,770,ls),
(99,770,o),
(105,758,o),
(105,742,qs),
(105,713,o),
(105,651,o),
(106,574,o),
(106,477,o),
(106,413,qs),
(106,351,o),
(106,253,o),
(104,175,o),
(102,113,o),
(101,85,qs),
(99,57,o),
(54,54,qs),
(21,52,ls),
(16,52,o),
(0,41,o),
(0,26,qs),
(0,17,o),
(19,0,o),
(43,0,qs),
(51,0,o),
(74,1,o),
(99,1,o),
(124,2,o),
(134,2,qs),
(147,2,o),
(176,1,o),
(203,0,o),
(227,-1,o),
(234,-1,qs),
(255,-1,o),
(272,17,o),
(272,25,qs),
(272,37,o),
(253,57,o),
(222,57,qs),
(176,57,l),
(176,124,o),
(174,400,o),
(174,626,qs),
(174,627,o),
(174,658,o),
(174,705,o),
(175,760,o),
(175,785,qs),
(175,811,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
59 1 2 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 5 1 5 0 1 104 0 1 2 5 1 2 102 0 5 5 6 83 0 6 6 12 67 4 1 2 2 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 0 5 1 5 0 1 104 0 1 2 5 1 2 102 0 5 5 6 83 0 6 6 14 67 4 1 2 2 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
53 61 52 196 45 42 38 7 22
CALL[ ]	/* CallFunction */";
};
width = 264;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(142,820,o),
(122,820,qs),
(108,820,o),
(64,819,o),
(22,814,o),
(-8,806,o),
(-8,799,qs),
(-8,794,o),
(11,790,o),
(28,790,qs),
(105,790,ls),
(118,790,o),
(124,778,o),
(124,762,qs),
(124,731,o),
(124,665,o),
(125,583,o),
(125,480,o),
(125,413,q),
(15,335,ls),
(3,327,o),
(3,317,qs),
(3,305,o),
(17,305,qs),
(25,305,o),
(86,344,o),
(125,371,q),
(125,314,o),
(124,221,o),
(123,145,o),
(121,82,o),
(120,55,qs),
(118,28,o),
(58,25,qs),
(35,24,ls),
(14,23,o),
(14,11,qs),
(14,5,o),
(27,0,o),
(47,0,qs),
(55,0,o),
(78,1,o),
(103,1,o),
(128,2,o),
(138,2,qs),
(151,2,o),
(180,1,o),
(207,0,o),
(231,-1,o),
(238,-1,qs),
(254,-1,o),
(266,5,o),
(266,10,qs),
(266,16,o),
(251,27,o),
(226,27,qs),
(165,27,l),
(165,78,o),
(163,261,o),
(163,398,q),
(200,424,o),
(266,473,o),
(286,487,qs),
(294,493,o),
(300,505,o),
(300,510,qs),
(300,522,o),
(287,522,qs),
(285,522,o),
(263,508,o),
(229,486,o),
(186,455,o),
(163,439,q),
(163,626,ls),
(163,627,o),
(163,658,o),
(163,705,o),
(164,760,o),
(164,785,qs),
(164,811,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
60 52 19 6 4 4 0 47 1 1 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 5 4 5 0 4 104 0 4 1 5 4 1 102 0 5 5 6 83 0 6 6 12 67 3 1 1 1 2 83 0 2 2 13 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 0 5 4 5 0 4 104 0 4 1 5 4 1 102 0 5 5 6 83 0 6 6 14 67 3 1 1 1 2 83 0 2 2 13 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
53 59 40 51 196 42 42 7 22
CALL[ ]	/* CallFunction */";
};
width = 258;
}
);
note = lslash;
unicode = 322;
},
{
glyphname = m;
kernLeft = m;
kernRight = m;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(740,367,o),
(664,444,o),
(607,444,qs),
(560,444,o),
(481,396,o),
(452,347,q),
(421,434,o),
(329,434,qs),
(280,434,o),
(204,385,o),
(186,341,q),
(183,406,ls),
(182,419,o),
(174,428,o),
(166,428,qs),
(88,428,o),
(2,411,o),
(2,388,qs),
(2,372,o),
(26,354,o),
(63,354,qs),
(76,354,ls),
(82,354,o),
(91,350,o),
(97,332,o),
(100,296,o),
(100,264,qs),
(100,235,o),
(97,182,o),
(93,140,o),
(90,112,o),
(89,108,qs),
(84,86,o),
(69,76,o),
(55,74,qs),
(40,72,o),
(26,53,o),
(26,41,qs),
(26,26,o),
(42,2,o),
(61,2,qs),
(124,2,o),
(196,2,o),
(234,1,o),
(248,1,o),
(252,1,qs),
(276,1,o),
(290,28,o),
(290,37,qs),
(290,53,o),
(266,77,o),
(234,77,qs),
(189,77,l),
(189,197,ls),
(189,237,o),
(209,296,o),
(244,336,o),
(292,356,o),
(320,356,qs),
(367,356,o),
(370,265,qs),
(371,242,o),
(371,204,o),
(371,202,qs),
(371,173,o),
(374,119,o),
(374,109,qs),
(374,101,o),
(368,91,o),
(352,88,qs),
(342,86,ls),
(335,84,o),
(320,68,o),
(320,50,qs),
(320,33,o),
(341,9,o),
(367,9,qs),
(374,9,o),
(422,9,o),
(476,10,o),
(522,10,o),
(526,10,qs),
(554,10,o),
(554,47,qs),
(554,58,o),
(540,83,o),
(517,83,qs),
(461,83,l),
(461,262,l),
(470,281,o),
(496,319,o),
(529,348,o),
(567,366,o),
(588,366,qs),
(617,366,o),
(651,299,o),
(651,220,qs),
(651,179,o),
(646,103,o),
(644,89,qs),
(642,68,o),
(630,58,o),
(621,58,qs),
(615,58,ls),
(599,58,o),
(583,38,o),
(583,21,qs),
(583,-2,o),
(611,-21,o),
(653,-21,qs),
(665,-21,o),
(712,-21,o),
(763,-20,o),
(807,-19,o),
(815,-19,qs),
(835,-18,o),
(855,3,o),
(855,16,qs),
(855,21,o),
(851,34,o),
(841,46,o),
(820,54,o),
(804,54,qs),
(740,54,l),
(740,282,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
112 1 3 10 118 113 35 3 4 3 2 66
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
112 1 3 10 118 113 35 3 4 9 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 12 values pushed */
112 1 3 10 118 113 35 3 4 6 2 66
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
9 6 2 3 3 10 83 11 1 10 10 15 67 9 6 2 3 3 12 83 0 12 12 15 67 7 1 4 4 5 84 8 1 5 5 13 67 2 1 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 9 3 4 3 9 4 104 11 1 10 3 3 10 79 0 12 6 1 3 9 12 3 91 7 1 4 4 5 84 8 1 5 5 13 67 2 1 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 12 0 3 6 12 3 91 11 1 10 9 1 6 4 10 6 91 7 1 4 4 5 84 8 1 5 5 13 67 2 1 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 12 0 3 6 12 3 91 11 1 10 9 1 6 4 10 6 91 7 1 4 4 5 84 0 5 5 13 67 7 1 4 4 8 84 0 8 8 13 67 2 1 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 10 11 3 11 10 3 104 0 12 0 3 6 12 3 91 0 11 9 1 6 4 11 6 91 0 4 4 5 83 0 5 5 13 67 0 7 7 8 84 0 8 8 13 67 2 1 0 0 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
122 120 117 115 110 108 104 101 84 77 73 71 66 64 115 37 39 52 118 32 13 21
CALL[ ]	/* CallFunction */";
};
width = 838;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(733,367,o),
(657,444,o),
(600,444,qs),
(553,444,o),
(474,396,o),
(445,347,q),
(414,434,o),
(322,434,qs),
(273,434,o),
(197,385,o),
(179,341,q),
(176,406,ls),
(175,419,o),
(167,428,o),
(159,428,qs),
(126,428,o),
(68,425,o),
(26,418,o),
(2,406,o),
(2,397,qs),
(2,375,o),
(75,375,qs),
(88,375,ls),
(93,375,o),
(103,369,o),
(110,346,o),
(114,302,o),
(114,264,qs),
(114,201,o),
(105,107,o),
(103,90,qs),
(101,77,o),
(95,63,o),
(85,57,o),
(68,56,o),
(55,56,qs),
(41,56,o),
(29,39,o),
(29,31,qs),
(29,21,o),
(42,2,o),
(56,2,qs),
(123,2,o),
(197,2,o),
(234,1,o),
(246,1,o),
(250,1,qs),
(268,1,o),
(281,16,o),
(281,24,qs),
(281,36,o),
(257,59,o),
(225,59,qs),
(182,59,l),
(182,215,ls),
(182,254,o),
(203,314,o),
(239,354,o),
(288,374,o),
(316,374,qs),
(351,374,o),
(382,319,o),
(384,265,qs),
(385,242,o),
(385,204,o),
(385,202,qs),
(385,164,o),
(386,126,o),
(386,109,qs),
(386,92,o),
(372,69,o),
(349,67,qs),
(339,66,ls),
(328,65,o),
(315,49,o),
(315,37,qs),
(315,20,o),
(337,9,o),
(362,9,qs),
(369,9,o),
(418,9,o),
(473,10,o),
(519,10,o),
(523,10,qs),
(532,10,o),
(545,23,o),
(545,36,qs),
(545,45,o),
(531,65,o),
(508,65,qs),
(454,65,l),
(454,280,l),
(463,300,o),
(489,337,o),
(523,366,o),
(564,384,o),
(588,384,qs),
(630,384,o),
(665,309,o),
(665,220,qs),
(665,197,o),
(663,150,o),
(661,109,o),
(659,78,o),
(658,71,qs),
(656,50,o),
(645,41,o),
(635,40,qs),
(605,38,ls),
(577,36,o),
(577,10,qs),
(577,-7,o),
(604,-21,o),
(646,-21,qs),
(658,-21,o),
(703,-21,o),
(751,-20,o),
(793,-19,o),
(801,-19,qs),
(821,-18,o),
(841,-3,o),
(841,8,qs),
(841,16,o),
(823,36,o),
(790,36,qs),
(733,36,l),
(733,282,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
114 1 3 11 120 115 34 3 4 3 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 12 values pushed */
114 1 3 11 120 115 34 3 4 6 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
10 6 2 3 3 13 83 0 13 13 15 67 10 6 2 3 3 11 83 12 1 11 11 15 67 9 7 2 4 4 5 83 8 1 5 5 13 67 2 1 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 13 11 3 13 79 12 1 11 10 6 2 3 4 11 3 91 9 7 2 4 4 5 83 8 1 5 5 13 67 2 1 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 13 0 3 6 13 3 91 12 1 11 10 1 6 4 11 6 91 9 7 2 4 4 5 83 8 1 5 5 13 67 2 1 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 9 4 0 4 9 96 0 13 0 3 6 13 3 91 12 1 11 10 1 6 4 11 6 91 7 1 4 4 5 83 8 1 5 5 13 67 2 1 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 9 4 0 4 9 96 0 12 11 6 12 79 0 13 0 3 6 13 3 91 0 11 10 1 6 4 11 6 91 7 1 4 4 5 83 0 5 5 13 67 7 1 4 4 8 83 0 8 8 13 67 2 1 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 12 11 6 12 79 0 13 0 3 6 13 3 91 0 11 10 1 6 4 11 6 91 0 4 4 5 83 0 5 5 13 67 9 1 7 7 8 83 0 8 8 13 67 2 1 0 0 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
124 122 119 117 112 109 105 102 92 89 85 78 74 72 67 65 116 37 42 20 116 32 14 21
CALL[ ]	/* CallFunction */";
};
width = 825;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(723,367,o),
(647,444,o),
(590,444,qs),
(543,444,o),
(464,396,o),
(435,347,q),
(404,434,o),
(312,434,qs),
(263,434,o),
(187,385,o),
(169,341,q),
(166,406,ls),
(165,419,o),
(157,428,o),
(149,428,qs),
(118,428,o),
(64,425,o),
(25,420,o),
(2,412,o),
(2,407,qs),
(2,395,o),
(75,395,qs),
(108,395,ls),
(113,395,o),
(123,388,o),
(130,361,o),
(134,309,o),
(134,264,qs),
(134,190,o),
(125,80,o),
(123,60,qs),
(121,45,o),
(117,32,o),
(104,28,o),
(78,28,o),
(55,26,qs),
(29,25,o),
(29,15,qs),
(29,10,o),
(41,2,o),
(49,2,qs),
(116,2,o),
(191,2,o),
(230,1,o),
(243,1,o),
(247,1,qs),
(268,1,o),
(268,12,qs),
(268,18,o),
(244,29,o),
(212,29,qs),
(172,29,l),
(172,245,ls),
(172,284,o),
(195,343,o),
(233,384,o),
(283,404,o),
(311,404,qs),
(363,404,o),
(401,334,o),
(404,265,qs),
(405,242,o),
(405,204,o),
(405,202,qs),
(405,164,o),
(404,126,o),
(403,109,qs),
(402,94,o),
(400,69,o),
(394,50,o),
(382,38,o),
(372,37,qs),
(337,33,ls),
(308,30,o),
(308,21,qs),
(308,9,o),
(355,9,qs),
(362,9,o),
(409,9,o),
(461,10,o),
(506,10,o),
(510,10,qs),
(519,10,o),
(532,18,o),
(532,23,qs),
(532,28,o),
(518,35,o),
(495,35,qs),
(444,35,l),
(444,310,l),
(453,330,o),
(479,368,o),
(514,397,o),
(559,414,o),
(588,414,qs),
(618,414,o),
(656,392,o),
(677,346,o),
(685,272,o),
(685,220,qs),
(685,192,o),
(683,136,o),
(681,87,o),
(679,50,o),
(678,41,qs),
(676,20,o),
(665,11,o),
(655,10,qs),
(591,5,ls),
(568,3,o),
(568,-9,qs),
(568,-16,o),
(594,-21,o),
(636,-21,qs),
(648,-21,o),
(690,-21,o),
(734,-20,o),
(773,-19,o),
(781,-19,qs),
(821,-18,o),
(821,-6,qs),
(821,-1,o),
(803,6,o),
(770,6,qs),
(723,6,l),
(723,282,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
113 1 5 2 119 114 35 3 3 10 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 2 2 13 83 0 13 13 15 67 0 5 5 12 83 0 12 12 15 67 0 10 10 11 83 0 11 11 15 67 0 3 3 4 83 0 4 4 13 67 9 8 2 6 6 7 83 0 7 7 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 13 0 2 5 13 2 91 0 12 0 5 10 12 5 91 0 11 0 10 3 11 10 91 0 3 3 4 83 0 4 4 13 67 9 8 2 6 6 7 83 0 7 7 13 67 0 0 0 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
123 121 118 116 111 108 104 101 91 90 89 88 85 78 75 73 68 66 49 42 38 36 31 29 115 32 14 17
CALL[ ]	/* CallFunction */";
};
width = 807;
}
);
note = m;
unicode = 109;
},
{
glyphname = n;
kernLeft = eng;
kernRight = n;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(527,323,o),
(495,399,o),
(449,441,o),
(397,455,o),
(377,455,qs),
(353,455,o),
(304,442,o),
(261,417,o),
(226,381,o),
(216,357,q),
(213,415,ls),
(212,438,o),
(195,451,o),
(164,451,qs),
(106,451,o),
(38,446,o),
(3,436,o),
(-7,421,o),
(-7,411,qs),
(-7,393,o),
(30,380,o),
(65,380,qs),
(105,380,ls),
(123,380,o),
(123,340,qs),
(123,333,o),
(121,272,o),
(120,203,o),
(118,146,o),
(118,143,qs),
(118,141,o),
(117,123,o),
(112,104,o),
(100,89,o),
(90,89,qs),
(79,89,ls),
(75,89,o),
(63,86,o),
(51,78,o),
(43,63,o),
(43,51,qs),
(43,38,o),
(54,23,o),
(69,16,o),
(87,14,o),
(95,14,qs),
(99,14,o),
(127,14,o),
(166,14,o),
(210,15,o),
(249,15,o),
(275,15,o),
(278,15,qs),
(300,15,o),
(321,36,o),
(321,53,qs),
(321,79,o),
(296,92,o),
(278,92,qs),
(211,92,l),
(211,186,ls),
(211,200,o),
(217,233,o),
(224,261,o),
(231,281,o),
(232,283,qs),
(238,298,o),
(258,331,o),
(286,359,o),
(323,377,o),
(345,377,qs),
(373,377,o),
(409,342,o),
(429,280,o),
(436,194,o),
(436,143,qs),
(436,124,o),
(435,100,o),
(434,86,qs),
(433,67,o),
(425,47,o),
(411,44,qs),
(397,41,o),
(380,24,o),
(380,7,qs),
(380,-13,o),
(406,-31,o),
(419,-31,qs),
(421,-31,o),
(448,-31,o),
(484,-30,o),
(526,-30,o),
(563,-29,o),
(590,-29,o),
(593,-29,qs),
(614,-29,o),
(644,-12,o),
(644,8,qs),
(644,20,o),
(632,36,o),
(614,44,o),
(591,47,o),
(581,47,qs),
(527,47,l),
(527,260,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
94 1 3 2 25 1 0 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
8 1 7 6 1 2 3 7 2 91 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
8 1 7 6 1 2 3 7 2 91 0 0 0 1 0 1 87 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
8 1 7 6 1 2 3 7 2 91 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
39 38 58 56 148 42 47 150 32 9 24
CALL[ ]	/* CallFunction */";
};
width = 625;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(511,321,o),
(481,397,o),
(435,440,o),
(382,455,o),
(360,455,qs),
(310,455,o),
(222,404,o),
(200,357,q),
(197,419,ls),
(196,439,o),
(184,451,o),
(158,451,qs),
(110,451,o),
(47,448,o),
(9,440,o),
(-6,427,o),
(-6,417,qs),
(-6,411,o),
(7,404,o),
(26,401,o),
(49,400,o),
(59,400,qs),
(111,400,ls),
(128,400,o),
(128,367,qs),
(128,361,o),
(127,297,o),
(125,217,o),
(123,142,o),
(123,125,qs),
(123,117,o),
(121,99,o),
(115,82,o),
(104,71,o),
(95,71,qs),
(75,71,ls),
(63,71,o),
(38,59,o),
(38,41,qs),
(38,22,o),
(65,14,o),
(81,14,qs),
(86,14,o),
(141,14,o),
(205,15,o),
(258,15,o),
(262,15,qs),
(282,15,o),
(301,25,o),
(301,42,qs),
(301,62,o),
(279,74,o),
(262,74,qs),
(195,74,l),
(195,186,ls),
(195,216,o),
(206,277,o),
(217,300,qs),
(234,338,o),
(299,395,o),
(341,395,qs),
(374,395,o),
(413,357,o),
(434,294,o),
(441,209,o),
(441,163,qs),
(441,161,o),
(440,105,o),
(438,65,qs),
(436,41,o),
(420,29,o),
(395,26,qs),
(386,24,o),
(367,11,o),
(367,-3,qs),
(367,-20,o),
(387,-31,o),
(400,-31,qs),
(404,-31,o),
(459,-30,o),
(524,-30,o),
(579,-29,o),
(584,-29,qs),
(599,-29,o),
(621,-19,o),
(621,-4,qs),
(621,7,o),
(609,20,o),
(591,27,o),
(572,29,o),
(565,29,qs),
(511,29,l),
(511,260,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
84 1 3 2 23 1 0 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
8 1 7 6 1 2 3 7 2 91 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
8 1 7 6 1 2 3 7 2 91 0 0 0 1 0 1 87 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
8 1 7 6 1 2 3 7 2 91 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 8 7 2 8 79 0 7 6 1 2 3 7 2 91 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 7 0 6 2 7 6 91 0 8 0 2 3 8 2 91 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
37 54 74 52 116 38 47 118 32 9 24
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(488,318,o),
(460,393,o),
(416,437,o),
(362,455,o),
(336,455,qs),
(285,455,o),
(200,403,o),
(177,357,q),
(174,425,ls),
(173,442,o),
(162,451,o),
(150,451,qs),
(135,451,o),
(83,450,o),
(33,446,o),
(-4,438,o),
(-4,431,qs),
(-4,424,o),
(33,420,o),
(51,420,qs),
(120,420,ls),
(129,420,o),
(135,408,o),
(135,398,qs),
(135,357,o),
(134,287,o),
(133,217,o),
(131,142,o),
(130,95,qs),
(129,63,o),
(117,45,o),
(102,44,qs),
(57,41,ls),
(45,40,o),
(30,31,o),
(30,24,qs),
(30,19,o),
(44,14,o),
(61,14,qs),
(64,14,o),
(92,14,o),
(130,14,o),
(173,15,o),
(210,15,o),
(236,15,o),
(239,15,qs),
(273,15,o),
(273,29,qs),
(273,38,o),
(253,44,o),
(239,44,qs),
(172,44,l),
(172,186,ls),
(172,223,o),
(178,292,o),
(195,329,qs),
(218,377,o),
(295,425,o),
(336,425,qs),
(376,425,o),
(421,383,o),
(443,316,o),
(448,235,o),
(448,196,qs),
(448,164,o),
(446,75,o),
(444,30,qs),
(444,20,o),
(436,9,o),
(420,2,o),
(393,-2,o),
(372,-4,qs),
(349,-6,o),
(349,-19,qs),
(349,-31,o),
(373,-31,qs),
(376,-31,o),
(406,-31,o),
(448,-30,o),
(496,-30,o),
(538,-29,o),
(568,-29,o),
(571,-29,qs),
(578,-29,o),
(588,-24,o),
(588,-18,qs),
(588,-7,o),
(557,-1,o),
(542,-1,qs),
(488,-1,l),
(488,260,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
82 1 3 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
82 1 3 6 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
8 1 7 6 1 2 3 7 2 91 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
8 1 7 6 1 2 3 7 2 91 0 0 0 1 0 1 87 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
8 1 7 6 1 2 3 7 2 91 5 1 3 0 4 0 3 4 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 8 0 2 6 8 2 91 0 7 0 6 3 7 6 91 5 1 3 0 4 0 3 4 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
37 53 57 37 147 38 47 148 32 9 24
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = n;
unicode = 110;
},
{
glyphname = nacute;
kernLeft = eng;
kernRight = n;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(439,687,o),
(407,688,qs),
(388,688,o),
(345,639,o),
(309,578,o),
(285,525,o),
(285,522,qs),
(285,511,o),
(311,500,o),
(322,500,qs),
(331,500,o),
(361,516,o),
(395,541,o),
(431,573,o),
(459,604,o),
(477,631,o),
(477,640,qs),
(477,659,o)
);
},
{
closed = 1;
nodes = (
(527,323,o),
(495,399,o),
(449,441,o),
(397,455,o),
(377,455,qs),
(353,455,o),
(304,442,o),
(261,417,o),
(226,381,o),
(216,357,q),
(213,415,ls),
(212,438,o),
(195,451,o),
(164,451,qs),
(106,451,o),
(38,446,o),
(3,436,o),
(-7,421,o),
(-7,411,qs),
(-7,393,o),
(30,380,o),
(65,380,qs),
(105,380,ls),
(123,380,o),
(123,340,qs),
(123,333,o),
(121,272,o),
(120,203,o),
(118,146,o),
(118,143,qs),
(118,141,o),
(117,123,o),
(112,104,o),
(100,89,o),
(90,89,qs),
(79,89,ls),
(75,89,o),
(63,86,o),
(51,78,o),
(43,63,o),
(43,51,qs),
(43,38,o),
(54,23,o),
(69,16,o),
(87,14,o),
(95,14,qs),
(99,14,o),
(127,14,o),
(166,14,o),
(210,15,o),
(249,15,o),
(275,15,o),
(278,15,qs),
(300,15,o),
(321,36,o),
(321,53,qs),
(321,79,o),
(296,92,o),
(278,92,qs),
(211,92,l),
(211,186,ls),
(211,200,o),
(217,233,o),
(224,261,o),
(231,281,o),
(232,283,qs),
(238,298,o),
(258,331,o),
(286,359,o),
(323,377,o),
(345,377,qs),
(373,377,o),
(409,342,o),
(429,280,o),
(436,194,o),
(436,143,qs),
(436,124,o),
(435,100,o),
(434,86,qs),
(433,67,o),
(425,47,o),
(411,44,qs),
(397,41,o),
(380,24,o),
(380,7,qs),
(380,-13,o),
(406,-31,o),
(419,-31,qs),
(421,-31,o),
(448,-31,o),
(484,-30,o),
(526,-30,o),
(563,-29,o),
(590,-29,o),
(593,-29,qs),
(614,-29,o),
(644,-12,o),
(644,8,qs),
(644,20,o),
(632,36,o),
(614,44,o),
(591,47,o),
(581,47,qs),
(527,47,l),
(527,260,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
112 1 5 4 43 1 2 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 0 9 0 106 8 1 4 4 9 83 10 1 9 9 15 67 7 1 5 5 6 83 0 6 6 13 67 0 2 2 3 84 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 1 106 0 0 9 0 106 10 1 9 8 1 4 5 9 4 91 7 1 5 5 6 83 0 6 6 13 67 0 2 2 3 84 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 1 0 1 106 0 0 9 0 106 10 1 9 8 1 4 5 9 4 91 0 2 0 3 2 3 88 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 0 0 9 0 106 10 1 9 8 1 4 5 9 4 91 0 2 6 3 2 79 7 1 5 0 6 3 5 6 91 0 2 2 3 84 0 3 2 3 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
118 116 109 107 58 56 148 42 47 150 34 38 38 11 24
CALL[ ]	/* CallFunction */";
};
width = 625;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(415,670,o),
(392,670,qs),
(382,670,o),
(359,649,o),
(334,618,o),
(311,581,o),
(292,548,o),
(281,524,o),
(281,522,qs),
(281,512,o),
(298,504,o),
(306,504,qs),
(317,504,o),
(362,536,o),
(407,578,o),
(441,621,o),
(441,632,qs),
(441,649,o)
);
},
{
closed = 1;
nodes = (
(511,321,o),
(481,397,o),
(435,440,o),
(382,455,o),
(360,455,qs),
(310,455,o),
(222,404,o),
(200,357,q),
(197,419,ls),
(196,439,o),
(184,451,o),
(158,451,qs),
(110,451,o),
(47,448,o),
(9,440,o),
(-6,427,o),
(-6,417,qs),
(-6,411,o),
(7,404,o),
(26,401,o),
(49,400,o),
(59,400,qs),
(111,400,ls),
(128,400,o),
(128,367,qs),
(128,361,o),
(127,297,o),
(125,217,o),
(123,142,o),
(123,125,qs),
(123,117,o),
(121,99,o),
(115,82,o),
(104,71,o),
(95,71,qs),
(75,71,ls),
(63,71,o),
(38,59,o),
(38,41,qs),
(38,22,o),
(65,14,o),
(81,14,qs),
(86,14,o),
(141,14,o),
(205,15,o),
(258,15,o),
(262,15,qs),
(282,15,o),
(301,25,o),
(301,42,qs),
(301,62,o),
(279,74,o),
(262,74,qs),
(195,74,l),
(195,186,ls),
(195,216,o),
(206,277,o),
(217,300,qs),
(234,338,o),
(299,395,o),
(341,395,qs),
(374,395,o),
(413,357,o),
(434,294,o),
(441,209,o),
(441,163,qs),
(441,161,o),
(440,105,o),
(438,65,qs),
(436,41,o),
(420,29,o),
(395,26,qs),
(386,24,o),
(367,11,o),
(367,-3,qs),
(367,-20,o),
(387,-31,o),
(400,-31,qs),
(404,-31,o),
(459,-30,o),
(524,-30,o),
(579,-29,o),
(584,-29,qs),
(599,-29,o),
(621,-19,o),
(621,-4,qs),
(621,7,o),
(609,20,o),
(591,27,o),
(572,29,o),
(565,29,qs),
(511,29,l),
(511,260,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
102 1 5 4 41 1 2 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 0 9 0 106 8 1 4 4 9 83 10 1 9 9 15 67 7 1 5 5 6 83 0 6 6 13 67 0 2 2 3 84 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 1 106 0 0 9 0 106 10 1 9 8 1 4 5 9 4 91 7 1 5 5 6 83 0 6 6 13 67 0 2 2 3 84 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 1 0 1 106 0 0 9 0 106 10 1 9 8 1 4 5 9 4 91 0 2 0 3 2 3 88 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 0 0 9 0 106 10 1 9 8 1 4 5 9 4 91 0 2 6 3 2 79 7 1 5 0 6 3 5 6 91 0 2 2 3 84 0 3 2 3 72
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 1 106 0 0 10 0 106 0 10 9 4 10 79 0 9 8 1 4 5 9 4 91 0 2 6 3 2 79 7 1 5 0 6 3 5 6 91 0 2 2 3 84 0 3 2 3 72
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 1 106 0 0 10 0 106 0 9 0 8 4 9 8 91 0 10 0 4 5 10 4 91 0 2 6 3 2 79 7 1 5 0 6 3 5 6 91 0 2 2 3 84 0 3 2 3 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
106 104 99 96 74 52 116 38 47 118 34 40 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(488,318,o),
(460,393,o),
(416,437,o),
(362,455,o),
(336,455,qs),
(285,455,o),
(200,403,o),
(177,357,q),
(174,425,ls),
(173,442,o),
(162,451,o),
(150,451,qs),
(135,451,o),
(83,450,o),
(33,446,o),
(-4,438,o),
(-4,431,qs),
(-4,424,o),
(33,420,o),
(51,420,qs),
(120,420,ls),
(129,420,o),
(135,408,o),
(135,398,qs),
(135,357,o),
(134,287,o),
(133,217,o),
(131,142,o),
(130,95,qs),
(129,63,o),
(117,45,o),
(102,44,qs),
(57,41,ls),
(45,40,o),
(30,31,o),
(30,24,qs),
(30,19,o),
(44,14,o),
(61,14,qs),
(64,14,o),
(92,14,o),
(130,14,o),
(173,15,o),
(210,15,o),
(236,15,o),
(239,15,qs),
(273,15,o),
(273,29,qs),
(273,38,o),
(253,44,o),
(239,44,qs),
(172,44,l),
(172,186,ls),
(172,223,o),
(178,292,o),
(195,329,qs),
(218,377,o),
(295,425,o),
(336,425,qs),
(376,425,o),
(421,383,o),
(443,316,o),
(448,235,o),
(448,196,qs),
(448,164,o),
(446,75,o),
(444,30,qs),
(444,20,o),
(436,9,o),
(420,2,o),
(393,-2,o),
(372,-4,qs),
(349,-6,o),
(349,-19,qs),
(349,-31,o),
(373,-31,qs),
(376,-31,o),
(406,-31,o),
(448,-30,o),
(496,-30,o),
(538,-29,o),
(568,-29,o),
(571,-29,qs),
(578,-29,o),
(588,-24,o),
(588,-18,qs),
(588,-7,o),
(557,-1,o),
(542,-1,qs),
(488,-1,l),
(488,260,ls)
);
},
{
closed = 1;
nodes = (
(379,640,o),
(371,640,qs),
(364,640,o),
(332,610,o),
(300,570,o),
(276,530,o),
(276,521,qs),
(276,510,o),
(284,510,qs),
(291,510,o),
(326,538,o),
(362,574,o),
(390,610,o),
(390,618,qs),
(390,632,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
82 1 3 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
82 1 3 6 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 10 9 10 106 0 9 7 9 106 6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 10 9 10 106 0 9 7 9 106 8 1 7 6 1 2 3 7 2 92 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 10 9 10 106 0 9 7 9 106 8 1 7 6 1 2 3 7 2 92 0 0 0 1 0 1 87 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 10 9 10 106 0 9 7 9 106 8 1 7 6 1 2 3 7 2 92 5 1 3 0 4 0 3 4 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 10 9 10 106 0 9 8 9 106 0 8 0 2 6 8 2 92 0 7 0 6 3 7 6 91 5 1 3 0 4 0 3 4 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
104 102 97 95 37 53 57 37 147 38 47 148 32 11 24
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = nacute;
unicode = 324;
},
{
glyphname = napostrophe;
kernLeft = eng;
kernRight = n;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-52,666,o),
(-62,644,o),
(-65,619,o),
(-65,609,qs),
(-65,543,o),
(-35,471,o),
(-17,471,qs),
(-8,471,o),
(9,496,o),
(23,536,o),
(31,585,o),
(31,610,qs),
(31,623,o),
(27,648,o),
(17,668,o),
(-2,680,o),
(-18,680,qs),
(-33,680,o)
);
},
{
closed = 1;
nodes = (
(527,323,o),
(495,399,o),
(449,441,o),
(397,455,o),
(377,455,qs),
(353,455,o),
(304,442,o),
(261,417,o),
(226,381,o),
(216,357,q),
(213,415,ls),
(212,438,o),
(195,451,o),
(164,451,qs),
(106,451,o),
(38,446,o),
(3,436,o),
(-7,421,o),
(-7,411,qs),
(-7,393,o),
(30,380,o),
(65,380,qs),
(105,380,ls),
(123,380,o),
(123,340,qs),
(123,333,o),
(121,272,o),
(120,203,o),
(118,146,o),
(118,143,qs),
(118,141,o),
(117,123,o),
(112,104,o),
(100,89,o),
(90,89,qs),
(79,89,ls),
(75,89,o),
(63,86,o),
(51,78,o),
(43,63,o),
(43,51,qs),
(43,38,o),
(54,23,o),
(69,16,o),
(87,14,o),
(95,14,qs),
(99,14,o),
(127,14,o),
(166,14,o),
(210,15,o),
(249,15,o),
(275,15,o),
(278,15,qs),
(300,15,o),
(321,36,o),
(321,53,qs),
(321,79,o),
(296,92,o),
(278,92,qs),
(211,92,l),
(211,186,ls),
(211,200,o),
(217,233,o),
(224,261,o),
(231,281,o),
(232,283,qs),
(238,298,o),
(258,331,o),
(286,359,o),
(323,377,o),
(345,377,qs),
(373,377,o),
(409,342,o),
(429,280,o),
(436,194,o),
(436,143,qs),
(436,124,o),
(435,100,o),
(434,86,qs),
(433,67,o),
(425,47,o),
(411,44,qs),
(397,41,o),
(380,24,o),
(380,7,qs),
(380,-13,o),
(406,-31,o),
(419,-31,qs),
(421,-31,o),
(448,-31,o),
(484,-30,o),
(526,-30,o),
(563,-29,o),
(590,-29,o),
(593,-29,qs),
(614,-29,o),
(644,-12,o),
(644,8,qs),
(644,20,o),
(632,36,o),
(614,44,o),
(591,47,o),
(581,47,qs),
(527,47,l),
(527,260,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
112 1 5 4 43 1 2 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
11 1 0 0 1 9 0 1 91 8 1 4 4 9 83 10 1 9 9 15 67 7 1 5 5 6 83 0 6 6 13 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
11 1 0 0 1 9 0 1 91 10 1 9 8 1 4 5 9 4 91 7 1 5 5 6 83 0 6 6 13 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
11 1 0 0 1 9 0 1 91 10 1 9 8 1 4 5 9 4 91 0 2 0 3 2 3 87 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
11 1 0 0 1 9 0 1 91 10 1 9 8 1 4 5 9 4 91 0 2 6 3 2 79 7 1 5 0 6 3 5 6 91 0 2 2 3 83 0 3 2 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 118 116 109 107 101 98 88 85 77 68 64 62 52 50 35 26 20 18 11 9 0 17 1 17 12 15
CALL[ ]	/* CallFunction */";
};
width = 625;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
ref = .ttfautohint;
},
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (-188,-169);
ref = apostrophe;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
85 1 3 2 24 1 0 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
11 1 9 0 10 7 9 10 91 6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
11 1 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
11 1 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 0 0 0 1 0 1 87 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
11 1 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
11 1 9 0 10 8 9 10 91 0 8 7 2 8 79 0 7 6 1 2 3 7 2 91 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
11 1 9 0 10 8 9 10 91 0 7 0 6 2 7 6 91 0 8 0 2 3 8 2 91 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
95 94 105 103 94 113 95 113 37 54 74 52 116 38 47 118 33 12 35
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(488,318,o),
(460,393,o),
(416,437,o),
(362,455,o),
(336,455,qs),
(285,455,o),
(200,403,o),
(177,357,q),
(174,425,ls),
(173,442,o),
(162,451,o),
(150,451,qs),
(135,451,o),
(83,450,o),
(33,446,o),
(-4,438,o),
(-4,431,qs),
(-4,424,o),
(33,420,o),
(51,420,qs),
(120,420,ls),
(129,420,o),
(135,408,o),
(135,398,qs),
(135,357,o),
(134,287,o),
(133,217,o),
(131,142,o),
(130,95,qs),
(129,63,o),
(117,45,o),
(102,44,qs),
(57,41,ls),
(45,40,o),
(30,31,o),
(30,24,qs),
(30,19,o),
(44,14,o),
(61,14,qs),
(64,14,o),
(92,14,o),
(130,14,o),
(173,15,o),
(210,15,o),
(236,15,o),
(239,15,qs),
(273,15,o),
(273,29,qs),
(273,38,o),
(253,44,o),
(239,44,qs),
(172,44,l),
(172,186,ls),
(172,223,o),
(178,292,o),
(195,329,qs),
(218,377,o),
(295,425,o),
(336,425,qs),
(376,425,o),
(421,383,o),
(443,316,o),
(448,235,o),
(448,196,qs),
(448,164,o),
(446,75,o),
(444,30,qs),
(444,20,o),
(436,9,o),
(420,2,o),
(393,-2,o),
(372,-4,qs),
(349,-6,o),
(349,-19,qs),
(349,-31,o),
(373,-31,qs),
(376,-31,o),
(406,-31,o),
(448,-30,o),
(496,-30,o),
(538,-29,o),
(568,-29,o),
(571,-29,qs),
(578,-29,o),
(588,-24,o),
(588,-18,qs),
(588,-7,o),
(557,-1,o),
(542,-1,qs),
(488,-1,l),
(488,260,ls)
);
},
{
closed = 1;
nodes = (
(-58,656,o),
(-62,633,o),
(-63,611,o),
(-63,606,qs),
(-63,599,o),
(-62,568,o),
(-57,535,o),
(-48,510,o),
(-40,510,qs),
(-33,510,o),
(-25,542,o),
(-20,582,o),
(-18,618,o),
(-18,621,qs),
(-18,628,o),
(-19,647,o),
(-23,662,o),
(-32,673,o),
(-41,673,qs),
(-49,673,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
82 1 3 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
82 1 3 6 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
11 1 9 0 10 7 9 10 91 6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
11 1 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
11 1 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 0 0 0 1 0 1 87 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
11 1 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 5 1 3 0 4 0 3 4 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
11 1 9 0 10 8 9 10 91 0 8 0 2 6 8 2 91 0 7 0 6 3 7 6 91 5 1 3 0 4 0 3 4 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
92 91 102 100 91 110 92 110 37 53 57 37 147 38 47 148 32 12 24
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = napostrophe;
unicode = 329;
},
{
glyphname = ncaron;
kernLeft = eng;
kernRight = n;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(460,627,o),
(426,608,o),
(388,587,o),
(371,578,q),
(354,587,o),
(316,608,o),
(283,627,o),
(257,640,o),
(252,640,qs),
(246,640,o),
(239,631,o),
(239,626,qs),
(239,606,o),
(275,558,o),
(321,515,o),
(364,486,o),
(371,486,qs),
(380,486,o),
(423,516,o),
(469,558,o),
(504,603,o),
(504,619,qs),
(504,627,o),
(498,640,o),
(491,640,qs),
(486,640,o)
);
},
{
closed = 1;
nodes = (
(527,323,o),
(495,399,o),
(449,441,o),
(397,455,o),
(377,455,qs),
(353,455,o),
(304,442,o),
(261,417,o),
(226,381,o),
(216,357,q),
(213,415,ls),
(212,438,o),
(195,451,o),
(164,451,qs),
(106,451,o),
(38,446,o),
(3,436,o),
(-7,421,o),
(-7,411,qs),
(-7,393,o),
(30,380,o),
(65,380,qs),
(105,380,ls),
(123,380,o),
(123,340,qs),
(123,333,o),
(121,272,o),
(120,203,o),
(118,146,o),
(118,143,qs),
(118,141,o),
(117,123,o),
(112,104,o),
(100,89,o),
(90,89,qs),
(79,89,ls),
(75,89,o),
(63,86,o),
(51,78,o),
(43,63,o),
(43,51,qs),
(43,38,o),
(54,23,o),
(69,16,o),
(87,14,o),
(95,14,qs),
(99,14,o),
(127,14,o),
(166,14,o),
(210,15,o),
(249,15,o),
(275,15,o),
(278,15,qs),
(300,15,o),
(321,36,o),
(321,53,qs),
(321,79,o),
(296,92,o),
(278,92,qs),
(211,92,l),
(211,186,ls),
(211,200,o),
(217,233,o),
(224,261,o),
(231,281,o),
(232,283,qs),
(238,298,o),
(258,331,o),
(286,359,o),
(323,377,o),
(345,377,qs),
(373,377,o),
(409,342,o),
(429,280,o),
(436,194,o),
(436,143,qs),
(436,124,o),
(435,100,o),
(434,86,qs),
(433,67,o),
(425,47,o),
(411,44,qs),
(397,41,o),
(380,24,o),
(380,7,qs),
(380,-13,o),
(406,-31,o),
(419,-31,qs),
(421,-31,o),
(448,-31,o),
(484,-30,o),
(526,-30,o),
(563,-29,o),
(590,-29,o),
(593,-29,qs),
(614,-29,o),
(644,-12,o),
(644,8,qs),
(644,20,o),
(632,36,o),
(614,44,o),
(591,47,o),
(581,47,qs),
(527,47,l),
(527,260,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
21 1 1 0 120 1 6 5 51 1 3 6 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
2 12 2 0 1 0 106 0 1 10 1 106 9 1 5 5 10 83 11 1 10 10 15 67 8 1 6 6 7 84 0 7 7 13 67 0 3 3 4 84 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
2 12 2 0 1 0 106 0 1 10 1 106 11 1 10 9 1 5 6 10 5 91 8 1 6 6 7 84 0 7 7 13 67 0 3 3 4 84 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
2 12 2 0 1 0 106 0 1 10 1 106 11 1 10 9 1 5 6 10 5 91 0 3 0 4 3 4 88 8 1 6 6 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
2 12 2 0 1 0 106 0 1 10 1 106 11 1 10 9 1 5 6 10 5 91 0 3 7 4 3 79 8 1 6 0 7 4 6 7 92 0 3 3 4 84 0 4 3 4 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 126 124 117 115 109 106 96 93 85 76 72 70 60 58 43 34 28 26 17 15 9 7 0 25 1 25 13 15
CALL[ ]	/* CallFunction */";
};
width = 625;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
ref = .ttfautohint;
},
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (198,1150);
ref = circumflex;
scale = (1,-0.9999);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
99 1 11 9 85 1 3 2 24 1 0 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
10 12 2 9 11 9 106 0 11 11 23 67 6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
10 12 2 9 11 9 106 0 11 7 7 11 94 8 1 7 6 1 2 3 7 2 92 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
10 12 2 9 11 9 106 0 11 7 11 106 8 1 7 6 1 2 3 7 2 92 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
10 12 2 9 11 9 106 0 11 7 11 106 8 1 7 6 1 2 3 7 2 92 0 0 0 1 0 1 87 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
10 12 2 9 11 9 106 0 11 7 11 106 8 1 7 6 1 2 3 7 2 92 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
10 12 2 9 11 9 106 0 11 8 11 106 0 8 7 2 8 79 0 7 6 1 2 3 7 2 91 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
10 12 2 9 11 9 106 0 11 8 11 106 0 7 0 6 2 7 6 91 0 8 0 2 3 8 2 92 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
95 94 112 110 105 103 94 118 95 118 37 54 74 52 116 38 47 118 33 13 35
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(488,318,o),
(460,393,o),
(416,437,o),
(362,455,o),
(336,455,qs),
(285,455,o),
(200,403,o),
(177,357,q),
(174,425,ls),
(173,442,o),
(162,451,o),
(150,451,qs),
(135,451,o),
(83,450,o),
(33,446,o),
(-4,438,o),
(-4,431,qs),
(-4,424,o),
(33,420,o),
(51,420,qs),
(120,420,ls),
(129,420,o),
(135,408,o),
(135,398,qs),
(135,357,o),
(134,287,o),
(133,217,o),
(131,142,o),
(130,95,qs),
(129,63,o),
(117,45,o),
(102,44,qs),
(57,41,ls),
(45,40,o),
(30,31,o),
(30,24,qs),
(30,19,o),
(44,14,o),
(61,14,qs),
(64,14,o),
(92,14,o),
(130,14,o),
(173,15,o),
(210,15,o),
(236,15,o),
(239,15,qs),
(273,15,o),
(273,29,qs),
(273,38,o),
(253,44,o),
(239,44,qs),
(172,44,l),
(172,186,ls),
(172,223,o),
(178,292,o),
(195,329,qs),
(218,377,o),
(295,425,o),
(336,425,qs),
(376,425,o),
(421,383,o),
(443,316,o),
(448,235,o),
(448,196,qs),
(448,164,o),
(446,75,o),
(444,30,qs),
(444,20,o),
(436,9,o),
(420,2,o),
(393,-2,o),
(372,-4,qs),
(349,-6,o),
(349,-19,qs),
(349,-31,o),
(373,-31,qs),
(376,-31,o),
(406,-31,o),
(448,-30,o),
(496,-30,o),
(538,-29,o),
(568,-29,o),
(571,-29,qs),
(578,-29,o),
(588,-24,o),
(588,-18,qs),
(588,-7,o),
(557,-1,o),
(542,-1,qs),
(488,-1,l),
(488,260,ls)
);
},
{
closed = 1;
nodes = (
(421,622,o),
(387,596,o),
(349,566,o),
(332,554,q),
(315,566,o),
(277,596,o),
(244,622,o),
(218,640,o),
(213,640,qs),
(205,640,o),
(205,629,qs),
(205,620,o),
(238,580,o),
(282,540,o),
(323,510,o),
(332,510,qs),
(341,510,o),
(384,540,o),
(427,580,o),
(460,620,o),
(460,629,qs),
(460,640,o),
(452,640,qs),
(447,640,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
110 1 10 9 82 1 3 2 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
110 1 10 9 82 1 3 6 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
11 12 2 9 10 9 106 0 10 7 10 106 6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 84 0 4 4 13 67 0 0 0 1 84 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
11 12 2 9 10 9 106 0 10 7 10 106 8 1 7 6 1 2 3 7 2 91 5 1 3 3 4 84 0 4 4 13 67 0 0 0 1 84 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
11 12 2 9 10 9 106 0 10 7 10 106 8 1 7 6 1 2 3 7 2 91 0 0 0 1 0 1 88 5 1 3 3 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
11 12 2 9 10 9 106 0 10 7 10 106 8 1 7 6 1 2 3 7 2 91 5 1 3 0 4 0 3 4 92 0 0 1 1 0 79 0 0 0 1 84 0 1 0 1 72
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
11 12 2 9 10 9 106 0 10 8 10 106 0 8 0 2 6 8 2 91 0 7 0 6 3 7 6 91 5 1 3 0 4 0 3 4 92 0 0 1 1 0 79 0 0 0 1 84 0 1 0 1 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
92 91 106 104 99 97 91 114 92 114 37 53 57 37 147 38 47 148 32 13 24
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = ncaron;
unicode = 328;
},
{
glyphname = ncommaaccent;
kernLeft = eng;
kernRight = n;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(293,-132,o),
(307,-142,o),
(318,-151,o),
(318,-157,qs),
(318,-187,o),
(303,-216,o),
(303,-226,qs),
(303,-243,o),
(324,-249,o),
(329,-249,qs),
(335,-249,o),
(362,-234,o),
(389,-205,o),
(410,-160,o),
(410,-130,qs),
(410,-87,o),
(366,-49,o),
(342,-49,qs),
(309,-49,o),
(282,-86,o),
(282,-107,qs),
(282,-119,o)
);
},
{
closed = 1;
nodes = (
(527,323,o),
(495,399,o),
(449,441,o),
(397,455,o),
(377,455,qs),
(353,455,o),
(304,442,o),
(261,417,o),
(226,381,o),
(216,357,q),
(213,415,ls),
(212,438,o),
(195,451,o),
(164,451,qs),
(106,451,o),
(38,446,o),
(3,436,o),
(-7,421,o),
(-7,411,qs),
(-7,393,o),
(30,380,o),
(65,380,qs),
(105,380,ls),
(123,380,o),
(123,340,qs),
(123,333,o),
(121,272,o),
(120,203,o),
(118,146,o),
(118,143,qs),
(118,141,o),
(117,123,o),
(112,104,o),
(100,89,o),
(90,89,qs),
(79,89,ls),
(75,89,o),
(63,86,o),
(51,78,o),
(43,63,o),
(43,51,qs),
(43,38,o),
(54,23,o),
(69,16,o),
(87,14,o),
(95,14,qs),
(99,14,o),
(127,14,o),
(166,14,o),
(210,15,o),
(249,15,o),
(275,15,o),
(278,15,qs),
(300,15,o),
(321,36,o),
(321,53,qs),
(321,79,o),
(296,92,o),
(278,92,qs),
(211,92,l),
(211,186,ls),
(211,200,o),
(217,233,o),
(224,261,o),
(231,281,o),
(232,283,qs),
(238,298,o),
(258,331,o),
(286,359,o),
(323,377,o),
(345,377,qs),
(373,377,o),
(409,342,o),
(429,280,o),
(436,194,o),
(436,143,qs),
(436,124,o),
(435,100,o),
(434,86,qs),
(433,67,o),
(425,47,o),
(411,44,qs),
(397,41,o),
(380,24,o),
(380,7,qs),
(380,-13,o),
(406,-31,o),
(419,-31,qs),
(421,-31,o),
(448,-31,o),
(484,-30,o),
(526,-30,o),
(563,-29,o),
(590,-29,o),
(593,-29,qs),
(614,-29,o),
(644,-12,o),
(644,8,qs),
(644,20,o),
(632,36,o),
(614,44,o),
(591,47,o),
(581,47,qs),
(527,47,l),
(527,260,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
116 1 5 4 47 1 2 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
8 1 4 4 9 83 10 1 9 9 15 67 7 1 5 5 6 83 0 6 6 13 67 0 2 2 3 83 0 3 3 21 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
10 1 9 8 1 4 5 9 4 91 0 0 0 1 0 1 87 7 1 5 5 6 83 0 6 6 13 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
10 1 9 8 1 4 5 9 4 91 0 2 0 3 0 2 3 91 0 0 0 1 0 1 87 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
10 1 9 8 1 4 5 9 4 91 7 1 5 0 6 3 5 6 91 0 2 0 3 0 2 3 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
122 120 113 111 58 56 148 42 47 150 42 38 34 11 24
CALL[ ]	/* CallFunction */";
};
width = 625;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
ref = .ttfautohint;
},
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (230,-139);
ref = comma;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
85 1 3 2 24 1 0 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 67 0 9 9 10 83 0 10 10 25 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
8 1 7 6 1 2 3 7 2 91 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 67 0 9 9 10 83 0 10 10 25 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
8 1 7 6 1 2 3 7 2 91 0 9 0 10 9 10 87 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
8 1 7 6 1 2 3 7 2 91 0 0 0 1 9 0 1 91 0 9 0 10 9 10 87 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
8 1 7 6 1 2 3 7 2 91 5 1 3 0 4 1 3 4 91 0 0 0 1 9 0 1 91 0 9 10 10 9 79 0 9 9 10 83 0 10 9 10 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 8 7 2 8 79 0 7 6 1 2 3 7 2 91 5 1 3 0 4 1 3 4 91 0 0 0 1 9 0 1 91 0 9 10 10 9 79 0 9 9 10 83 0 10 9 10 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 7 0 6 2 7 6 91 0 8 0 2 3 8 2 91 5 1 3 0 4 1 3 4 91 0 0 0 1 9 0 1 91 0 9 10 10 9 79 0 9 9 10 83 0 10 9 10 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
106 104 98 96 37 54 74 52 116 38 47 118 33 11 35
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(488,318,o),
(460,393,o),
(416,437,o),
(362,455,o),
(336,455,qs),
(285,455,o),
(200,403,o),
(177,357,q),
(174,425,ls),
(173,442,o),
(162,451,o),
(150,451,qs),
(135,451,o),
(83,450,o),
(33,446,o),
(-4,438,o),
(-4,431,qs),
(-4,424,o),
(33,420,o),
(51,420,qs),
(120,420,ls),
(129,420,o),
(135,408,o),
(135,398,qs),
(135,357,o),
(134,287,o),
(133,217,o),
(131,142,o),
(130,95,qs),
(129,63,o),
(117,45,o),
(102,44,qs),
(57,41,ls),
(45,40,o),
(30,31,o),
(30,24,qs),
(30,19,o),
(44,14,o),
(61,14,qs),
(64,14,o),
(92,14,o),
(130,14,o),
(173,15,o),
(210,15,o),
(236,15,o),
(239,15,qs),
(273,15,o),
(273,29,qs),
(273,38,o),
(253,44,o),
(239,44,qs),
(172,44,l),
(172,186,ls),
(172,223,o),
(178,292,o),
(195,329,qs),
(218,377,o),
(295,425,o),
(336,425,qs),
(376,425,o),
(421,383,o),
(443,316,o),
(448,235,o),
(448,196,qs),
(448,164,o),
(446,75,o),
(444,30,qs),
(444,20,o),
(436,9,o),
(420,2,o),
(393,-2,o),
(372,-4,qs),
(349,-6,o),
(349,-19,qs),
(349,-31,o),
(373,-31,qs),
(376,-31,o),
(406,-31,o),
(448,-30,o),
(496,-30,o),
(538,-29,o),
(568,-29,o),
(571,-29,qs),
(578,-29,o),
(588,-24,o),
(588,-18,qs),
(588,-7,o),
(557,-1,o),
(542,-1,qs),
(488,-1,l),
(488,260,ls)
);
},
{
closed = 1;
nodes = (
(279,-125,o),
(293,-132,o),
(304,-139,o),
(304,-145,qs),
(304,-155,o),
(293,-184,o),
(293,-191,qs),
(293,-196,o),
(302,-203,o),
(307,-203,qs),
(317,-203,o),
(334,-186,o),
(344,-161,o),
(350,-134,o),
(350,-124,qs),
(350,-90,o),
(323,-67,o),
(308,-67,qs),
(288,-67,o),
(268,-88,o),
(268,-101,qs),
(268,-113,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
82 1 3 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
82 1 3 6 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 67 0 9 9 10 83 0 10 10 17 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
8 1 7 6 1 2 3 7 2 91 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 67 0 9 9 10 83 0 10 10 17 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
8 1 7 6 1 2 3 7 2 91 0 0 0 1 9 0 1 91 5 1 3 3 4 83 0 4 4 13 67 0 9 9 10 83 0 10 10 17 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
8 1 7 6 1 2 3 7 2 91 5 1 3 0 4 0 3 4 91 0 0 0 1 9 0 1 91 0 9 9 10 83 0 10 10 17 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
8 1 7 6 1 2 3 7 2 91 5 1 3 0 4 0 3 4 91 0 0 0 1 9 0 1 91 0 9 10 10 9 79 0 9 9 10 83 0 10 9 10 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 8 0 2 6 8 2 91 0 7 0 6 3 7 6 91 5 1 3 0 4 0 3 4 91 0 0 0 1 9 0 1 91 0 9 10 10 9 79 0 9 9 10 83 0 10 9 10 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
103 101 95 93 37 53 57 37 147 38 47 148 32 11 24
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = ncommaaccent;
unicode = 326;
},
{
glyphname = ndotaccent;
kernLeft = eng;
kernRight = n;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(344,514,o),
(369,514,qs),
(380,514,o),
(404,520,o),
(423,536,o),
(436,563,o),
(436,584,qs),
(436,611,o),
(400,645,o),
(376,645,qs),
(358,645,o),
(333,632,o),
(317,613,o),
(310,590,o),
(310,580,qs),
(310,548,o)
);
},
{
closed = 1;
nodes = (
(527,323,o),
(495,399,o),
(449,441,o),
(397,455,o),
(377,455,qs),
(353,455,o),
(304,442,o),
(261,417,o),
(226,381,o),
(216,357,q),
(213,415,ls),
(212,438,o),
(195,451,o),
(164,451,qs),
(106,451,o),
(38,446,o),
(3,436,o),
(-7,421,o),
(-7,411,qs),
(-7,393,o),
(30,380,o),
(65,380,qs),
(105,380,ls),
(123,380,o),
(123,340,qs),
(123,333,o),
(121,272,o),
(120,203,o),
(118,146,o),
(118,143,qs),
(118,141,o),
(117,123,o),
(112,104,o),
(100,89,o),
(90,89,qs),
(79,89,ls),
(75,89,o),
(63,86,o),
(51,78,o),
(43,63,o),
(43,51,qs),
(43,38,o),
(54,23,o),
(69,16,o),
(87,14,o),
(95,14,qs),
(99,14,o),
(127,14,o),
(166,14,o),
(210,15,o),
(249,15,o),
(275,15,o),
(278,15,qs),
(300,15,o),
(321,36,o),
(321,53,qs),
(321,79,o),
(296,92,o),
(278,92,qs),
(211,92,l),
(211,186,ls),
(211,200,o),
(217,233,o),
(224,261,o),
(231,281,o),
(232,283,qs),
(238,298,o),
(258,331,o),
(286,359,o),
(323,377,o),
(345,377,qs),
(373,377,o),
(409,342,o),
(429,280,o),
(436,194,o),
(436,143,qs),
(436,124,o),
(435,100,o),
(434,86,qs),
(433,67,o),
(425,47,o),
(411,44,qs),
(397,41,o),
(380,24,o),
(380,7,qs),
(380,-13,o),
(406,-31,o),
(419,-31,qs),
(421,-31,o),
(448,-31,o),
(484,-30,o),
(526,-30,o),
(563,-29,o),
(590,-29,o),
(593,-29,qs),
(614,-29,o),
(644,-12,o),
(644,8,qs),
(644,20,o),
(632,36,o),
(614,44,o),
(591,47,o),
(581,47,qs),
(527,47,l),
(527,260,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
110 1 5 4 41 1 2 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 0 0 1 9 0 1 91 8 1 4 4 9 83 10 1 9 9 15 67 7 1 5 5 6 83 0 6 6 13 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 0 0 1 9 0 1 91 10 1 9 8 1 4 5 9 4 91 7 1 5 5 6 83 0 6 6 13 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 1 9 0 1 91 10 1 9 8 1 4 5 9 4 91 0 2 0 3 2 3 87 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 0 0 1 9 0 1 91 10 1 9 8 1 4 5 9 4 91 0 2 6 3 2 79 7 1 5 0 6 3 5 6 91 0 2 2 3 83 0 3 2 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
116 114 107 105 58 56 148 42 47 150 34 38 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 625;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
ref = .ttfautohint;
},
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (290,0);
ref = dotaccent;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
85 1 3 2 24 1 0 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 9 0 10 7 9 10 91 6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 0 0 0 1 0 1 87 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 9 0 10 8 9 10 91 0 8 7 2 8 79 0 7 6 1 2 3 7 2 91 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 9 0 10 8 9 10 91 0 7 0 6 2 7 6 91 0 8 0 2 3 8 2 91 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
106 104 100 98 37 54 74 52 116 38 47 118 33 11 35
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(488,318,o),
(460,393,o),
(416,437,o),
(362,455,o),
(336,455,qs),
(285,455,o),
(200,403,o),
(177,357,q),
(174,425,ls),
(173,442,o),
(162,451,o),
(150,451,qs),
(135,451,o),
(83,450,o),
(33,446,o),
(-4,438,o),
(-4,431,qs),
(-4,424,o),
(33,420,o),
(51,420,qs),
(120,420,ls),
(129,420,o),
(135,408,o),
(135,398,qs),
(135,357,o),
(134,287,o),
(133,217,o),
(131,142,o),
(130,95,qs),
(129,63,o),
(117,45,o),
(102,44,qs),
(57,41,ls),
(45,40,o),
(30,31,o),
(30,24,qs),
(30,19,o),
(44,14,o),
(61,14,qs),
(64,14,o),
(92,14,o),
(130,14,o),
(173,15,o),
(210,15,o),
(236,15,o),
(239,15,qs),
(273,15,o),
(273,29,qs),
(273,38,o),
(253,44,o),
(239,44,qs),
(172,44,l),
(172,186,ls),
(172,223,o),
(178,292,o),
(195,329,qs),
(218,377,o),
(295,425,o),
(336,425,qs),
(376,425,o),
(421,383,o),
(443,316,o),
(448,235,o),
(448,196,qs),
(448,164,o),
(446,75,o),
(444,30,qs),
(444,20,o),
(436,9,o),
(420,2,o),
(393,-2,o),
(372,-4,qs),
(349,-6,o),
(349,-19,qs),
(349,-31,o),
(373,-31,qs),
(376,-31,o),
(406,-31,o),
(448,-30,o),
(496,-30,o),
(538,-29,o),
(568,-29,o),
(571,-29,qs),
(578,-29,o),
(588,-24,o),
(588,-18,qs),
(588,-7,o),
(557,-1,o),
(542,-1,qs),
(488,-1,l),
(488,260,ls)
);
},
{
closed = 1;
nodes = (
(319,538,o),
(333,538,qs),
(347,538,o),
(374,557,o),
(374,584,qs),
(374,601,o),
(354,621,o),
(340,621,qs),
(329,621,o),
(314,612,o),
(304,599,o),
(299,585,o),
(299,580,qs),
(299,562,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
82 1 3 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
82 1 3 6 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 9 0 10 7 9 10 91 6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 0 0 0 1 0 1 87 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 5 1 3 0 4 0 3 4 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 9 0 10 8 9 10 91 0 8 0 2 6 8 2 91 0 7 0 6 3 7 6 91 5 1 3 0 4 0 3 4 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
103 101 97 95 37 53 57 37 147 38 47 148 32 11 24
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = ndotaccent;
unicode = 7749;
},
{
glyphname = ntilde;
kernLeft = eng;
kernRight = n;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(215,498,o),
(224,498,qs),
(231,498,o),
(249,506,o),
(269,515,o),
(293,523,o),
(308,523,qs),
(322,523,o),
(354,515,o),
(389,506,o),
(426,499,o),
(445,499,qs),
(456,499,o),
(494,506,o),
(530,523,o),
(556,552,o),
(556,574,qs),
(556,590,o),
(539,609,o),
(534,609,qs),
(527,609,o),
(504,596,qs),
(490,588,o),
(458,579,o),
(444,579,qs),
(429,579,o),
(393,588,o),
(357,598,o),
(322,607,o),
(307,607,qs),
(270,607,o),
(239,589,qs),
(225,581,o),
(205,556,o),
(205,534,qs),
(205,519,o)
);
},
{
closed = 1;
nodes = (
(527,323,o),
(495,399,o),
(449,441,o),
(397,455,o),
(377,455,qs),
(353,455,o),
(304,442,o),
(261,417,o),
(226,381,o),
(216,357,q),
(213,415,ls),
(212,438,o),
(195,451,o),
(164,451,qs),
(106,451,o),
(38,446,o),
(3,436,o),
(-7,421,o),
(-7,411,qs),
(-7,393,o),
(30,380,o),
(65,380,qs),
(105,380,ls),
(123,380,o),
(123,340,qs),
(123,333,o),
(121,272,o),
(120,203,o),
(118,146,o),
(118,143,qs),
(118,141,o),
(117,123,o),
(112,104,o),
(100,89,o),
(90,89,qs),
(79,89,ls),
(75,89,o),
(63,86,o),
(51,78,o),
(43,63,o),
(43,51,qs),
(43,38,o),
(54,23,o),
(69,16,o),
(87,14,o),
(95,14,qs),
(99,14,o),
(127,14,o),
(166,14,o),
(210,15,o),
(249,15,o),
(275,15,o),
(278,15,qs),
(300,15,o),
(321,36,o),
(321,53,qs),
(321,79,o),
(296,92,o),
(278,92,qs),
(211,92,l),
(211,186,ls),
(211,200,o),
(217,233,o),
(224,261,o),
(231,281,o),
(232,283,qs),
(238,298,o),
(258,331,o),
(286,359,o),
(323,377,o),
(345,377,qs),
(373,377,o),
(409,342,o),
(429,280,o),
(436,194,o),
(436,143,qs),
(436,124,o),
(435,100,o),
(434,86,qs),
(433,67,o),
(425,47,o),
(411,44,qs),
(397,41,o),
(380,24,o),
(380,7,qs),
(380,-13,o),
(406,-31,o),
(419,-31,qs),
(421,-31,o),
(448,-31,o),
(484,-30,o),
(526,-30,o),
(563,-29,o),
(590,-29,o),
(593,-29,qs),
(614,-29,o),
(644,-12,o),
(644,8,qs),
(644,20,o),
(632,36,o),
(614,44,o),
(591,47,o),
(581,47,qs),
(527,47,l),
(527,260,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
130 1 9 8 61 1 6 9 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 13 1 3 91 12 1 8 8 13 83 14 1 13 13 15 67 11 1 9 9 10 83 0 10 10 13 67 0 6 6 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 13 1 3 91 14 1 13 12 1 8 9 13 8 91 11 1 9 9 10 83 0 10 10 13 67 0 6 6 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 13 1 3 91 14 1 13 12 1 8 9 13 8 91 0 6 0 7 6 7 88 11 1 9 9 10 83 0 10 10 13 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 13 1 3 91 14 1 13 12 1 8 9 13 8 91 0 6 10 7 6 79 11 1 9 0 10 7 9 10 91 0 6 6 7 84 0 7 6 7 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
136 134 127 125 119 116 106 103 95 86 82 80 47 150 34 35 35 38 35 35 36 15 24
CALL[ ]	/* CallFunction */";
};
width = 625;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
ref = .ttfautohint;
},
{
alignment = -1;
pos = (166,0);
ref = tilde;
},
{
alignment = -1;
ref = n;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
123 1 9 8 62 1 6 9 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 13 1 3 91 12 1 8 8 13 83 14 1 13 13 15 67 11 1 9 9 10 83 0 10 10 13 67 0 6 6 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 13 1 3 91 14 1 13 12 1 8 9 13 8 91 11 1 9 9 10 83 0 10 10 13 67 0 6 6 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 13 1 3 91 14 1 13 12 1 8 9 13 8 91 0 6 0 7 6 7 88 11 1 9 9 10 83 0 10 10 13 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 13 1 3 91 14 1 13 12 1 8 9 13 8 91 0 6 10 7 6 79 11 1 9 0 10 7 9 10 91 0 6 6 7 84 0 7 6 7 72
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 14 1 3 91 0 14 13 8 14 79 0 13 12 1 8 9 13 8 91 0 6 10 7 6 79 11 1 9 0 10 7 9 10 91 0 6 6 7 84 0 7 6 7 72
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 14 1 3 91 0 13 0 12 8 13 12 91 0 14 0 8 9 14 8 91 0 6 10 7 6 79 11 1 9 0 10 7 9 10 91 0 6 6 7 84 0 7 6 7 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
127 125 120 117 111 107 97 94 90 83 79 77 47 118 36 35 35 38 35 35 37 15 35
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(488,318,o),
(460,393,o),
(416,437,o),
(362,455,o),
(336,455,qs),
(285,455,o),
(200,403,o),
(177,357,q),
(174,425,ls),
(173,442,o),
(162,451,o),
(150,451,qs),
(135,451,o),
(83,450,o),
(33,446,o),
(-4,438,o),
(-4,431,qs),
(-4,424,o),
(33,420,o),
(51,420,qs),
(120,420,ls),
(129,420,o),
(135,408,o),
(135,398,qs),
(135,357,o),
(134,287,o),
(133,217,o),
(131,142,o),
(130,95,qs),
(129,63,o),
(117,45,o),
(102,44,qs),
(57,41,ls),
(45,40,o),
(30,31,o),
(30,24,qs),
(30,19,o),
(44,14,o),
(61,14,qs),
(64,14,o),
(92,14,o),
(130,14,o),
(173,15,o),
(210,15,o),
(236,15,o),
(239,15,qs),
(273,15,o),
(273,29,qs),
(273,38,o),
(253,44,o),
(239,44,qs),
(172,44,l),
(172,186,ls),
(172,223,o),
(178,292,o),
(195,329,qs),
(218,377,o),
(295,425,o),
(336,425,qs),
(376,425,o),
(421,383,o),
(443,316,o),
(448,235,o),
(448,196,qs),
(448,164,o),
(446,75,o),
(444,30,qs),
(444,20,o),
(436,9,o),
(420,2,o),
(393,-2,o),
(372,-4,qs),
(349,-6,o),
(349,-19,qs),
(349,-31,o),
(373,-31,qs),
(376,-31,o),
(406,-31,o),
(448,-30,o),
(496,-30,o),
(538,-29,o),
(568,-29,o),
(571,-29,qs),
(578,-29,o),
(588,-24,o),
(588,-18,qs),
(588,-7,o),
(557,-1,o),
(542,-1,qs),
(488,-1,l),
(488,260,ls)
);
},
{
closed = 1;
nodes = (
(146,522,o),
(151,522,qs),
(156,522,o),
(172,530,o),
(194,539,o),
(220,547,o),
(235,547,qs),
(249,547,o),
(281,539,o),
(316,530,o),
(353,523,o),
(372,523,qs),
(393,523,o),
(430,530,o),
(458,543,o),
(474,559,o),
(474,568,qs),
(474,575,o),
(466,585,o),
(461,585,qs),
(456,585,o),
(445,580,o),
(431,572,qs),
(397,555,o),
(371,555,qs),
(356,555,o),
(320,564,o),
(284,574,o),
(249,583,o),
(234,583,qs),
(197,583,o),
(166,565,qs),
(137,548,o),
(137,537,qs),
(137,532,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
82 1 3 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
82 1 3 6 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
11 1 9 0 13 12 9 13 91 0 10 14 1 12 7 10 12 91 6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 84 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
11 1 9 0 13 12 9 13 91 0 10 14 1 12 7 10 12 91 8 1 7 6 1 2 3 7 2 91 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 84 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
11 1 9 0 13 12 9 13 91 0 10 14 1 12 7 10 12 91 8 1 7 6 1 2 3 7 2 91 0 0 0 1 0 1 88 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
11 1 9 0 13 12 9 13 91 0 10 14 1 12 7 10 12 91 8 1 7 6 1 2 3 7 2 91 5 1 3 0 4 0 3 4 91 0 0 1 1 0 79 0 0 0 1 84 0 1 0 1 72
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
11 1 9 0 13 12 9 13 91 0 10 14 1 12 8 10 12 91 0 8 0 2 6 8 2 91 0 7 0 6 3 7 6 91 5 1 3 0 4 0 3 4 91 0 0 1 1 0 79 0 0 0 1 84 0 1 0 1 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
124 122 119 117 114 112 106 104 101 99 96 94 37 53 57 37 147 38 47 148 32 15 24
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = ntilde;
unicode = 241;
},
{
glyphname = eng;
kernLeft = eng;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(452,-225,o),
(498,-171,o),
(527,-87,o),
(527,-29,qs),
(527,257,ls),
(527,320,o),
(495,398,o),
(449,440,o),
(397,455,o),
(377,455,qs),
(353,455,o),
(304,442,o),
(261,417,o),
(226,381,o),
(216,357,q),
(213,415,ls),
(212,427,o),
(208,441,o),
(197,449,o),
(179,451,o),
(164,451,qs),
(102,451,o),
(33,447,o),
(0,439,o),
(-7,426,o),
(-7,416,qs),
(-7,399,o),
(26,388,o),
(65,388,qs),
(105,388,ls),
(116,388,o),
(123,368,o),
(123,348,qs),
(123,338,o),
(122,300,o),
(121,255,o),
(120,208,o),
(119,169,o),
(118,144,o),
(118,143,qs),
(117,112,o),
(101,87,o),
(90,87,qs),
(75,86,ls),
(62,86,o),
(44,71,o),
(44,51,qs),
(44,38,o),
(53,23,o),
(67,16,o),
(86,14,o),
(95,14,qs),
(99,14,o),
(125,14,o),
(162,14,o),
(202,15,o),
(237,15,o),
(262,15,o),
(265,15,qs),
(286,15,o),
(321,27,o),
(321,50,qs),
(321,76,o),
(296,92,o),
(278,92,qs),
(211,92,l),
(211,186,ls),
(211,200,o),
(217,233,o),
(224,261,o),
(231,281,o),
(232,283,qs),
(238,298,o),
(258,331,o),
(286,359,o),
(323,377,o),
(345,377,qs),
(374,377,o),
(410,358,o),
(429,317,o),
(436,252,o),
(436,205,qs),
(436,-36,ls),
(436,-61,o),
(429,-111,o),
(410,-151,o),
(377,-176,o),
(352,-176,qs),
(336,-176,o),
(313,-158,o),
(313,-139,qs),
(313,-126,o),
(328,-108,o),
(343,-107,qs),
(381,-105,o),
(406,-78,o),
(406,-61,qs),
(406,-35,o),
(377,-10,o),
(354,-10,qs),
(319,-10,o),
(273,-32,o),
(246,-68,o),
(235,-116,o),
(235,-141,qs),
(235,-170,o),
(261,-211,o),
(299,-237,o),
(343,-250,o),
(361,-250,qs),
(392,-250,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
94 1 4 9 95 1 5 4 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
94 1 8 9 95 1 5 4 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 2 3 1 2 91 8 1 4 4 9 83 10 1 9 9 15 67 7 1 5 5 6 83 0 6 6 13 67 0 3 3 0 83 11 1 0 0 25 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
10 1 9 8 1 4 5 9 4 91 0 1 0 2 3 1 2 91 0 3 11 1 0 3 0 87 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 8 4 9 8 79 10 1 9 0 4 5 9 4 91 0 1 0 2 3 1 2 91 0 3 11 1 0 3 0 87 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 8 4 9 8 79 10 1 9 0 4 5 9 4 91 7 1 5 0 6 1 5 6 91 0 1 0 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 11 1 0 3 0 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 7 5 6 5 7 96 0 9 0 8 4 9 8 91 0 10 0 4 5 10 4 91 0 5 0 6 1 5 6 91 0 1 0 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 11 1 0 3 0 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 101 99 90 87 82 79 68 65 59 50 46 44 34 32 23 21 17 15 11 9 0 110 1 110 12 15
CALL[ ]	/* CallFunction */";
};
width = 581;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(511,321,o),
(481,397,o),
(435,440,o),
(382,455,o),
(360,455,qs),
(310,455,o),
(222,404,o),
(200,357,q),
(197,419,ls),
(196,439,o),
(184,451,o),
(158,451,qs),
(110,451,o),
(47,448,o),
(9,440,o),
(-6,427,o),
(-6,417,qs),
(-6,411,o),
(7,404,o),
(26,401,o),
(49,400,o),
(59,400,qs),
(111,400,ls),
(128,400,o),
(128,367,qs),
(128,361,o),
(127,297,o),
(125,217,o),
(123,142,o),
(123,125,qs),
(123,117,o),
(121,99,o),
(115,82,o),
(104,71,o),
(95,71,qs),
(75,71,ls),
(63,71,o),
(38,59,o),
(38,41,qs),
(38,22,o),
(65,14,o),
(81,14,qs),
(86,14,o),
(141,14,o),
(205,15,o),
(258,15,o),
(262,15,qs),
(282,15,o),
(301,25,o),
(301,42,qs),
(301,62,o),
(279,74,o),
(262,74,qs),
(195,74,l),
(195,186,ls),
(195,216,o),
(206,277,o),
(217,300,qs),
(234,338,o),
(299,395,o),
(341,395,qs),
(373,395,o),
(412,359,o),
(434,297,o),
(441,212,o),
(441,163,qs),
(441,1,ls),
(441,-46,o),
(433,-115,o),
(413,-159,o),
(378,-180,o),
(352,-180,qs),
(330,-180,o),
(298,-153,o),
(298,-133,qs),
(298,-126,o),
(302,-101,o),
(310,-96,q),
(315,-102,o),
(333,-112,o),
(346,-112,qs),
(362,-112,o),
(386,-92,o),
(386,-70,qs),
(386,-47,o),
(354,-27,o),
(336,-27,qs),
(312,-27,o),
(275,-45,o),
(251,-75,o),
(238,-114,o),
(238,-135,qs),
(238,-161,o),
(259,-200,o),
(292,-226,o),
(334,-239,o),
(355,-239,qs),
(433,-239,o),
(511,-113,o),
(511,-1,qs),
(511,260,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
92 1 5 4 22 1 2 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 2 3 1 2 91 8 1 4 4 9 83 10 1 9 9 15 67 7 1 5 5 6 83 0 6 6 13 67 0 3 3 0 83 0 0 0 25 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
10 1 9 8 1 4 5 9 4 91 0 1 0 2 3 1 2 91 7 1 5 5 6 83 0 6 6 13 67 0 3 3 0 83 0 0 0 25 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
10 1 9 8 1 4 5 9 4 91 0 1 0 2 3 1 2 91 0 3 0 0 3 0 87 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
10 1 9 8 1 4 5 9 4 91 7 1 5 0 6 1 5 6 91 0 1 0 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 10 9 4 10 79 0 9 8 1 4 5 9 4 91 7 1 5 0 6 1 5 6 91 0 1 0 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 9 0 8 4 9 8 91 0 10 0 4 5 10 4 91 7 1 5 0 6 1 5 6 91 0 1 0 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
96 94 89 86 74 52 116 38 41 39 36 40 34 11 24
CALL[ ]	/* CallFunction */";
};
width = 567;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(309,-55,o),
(298,-55,qs),
(278,-55,o),
(242,-83,o),
(242,-116,qs),
(242,-162,o),
(293,-217,o),
(347,-217,qs),
(397,-217,o),
(454,-174,o),
(482,-101,o),
(488,-6,o),
(488,46,qs),
(488,65,o),
(486,127,o),
(486,155,qs),
(486,182,o),
(488,237,o),
(488,265,qs),
(488,322,o),
(460,396,o),
(416,438,o),
(362,455,o),
(336,455,qs),
(285,455,o),
(200,403,o),
(177,357,q),
(174,425,ls),
(173,442,o),
(162,451,o),
(150,451,qs),
(135,451,o),
(83,450,o),
(33,446,o),
(-4,438,o),
(-4,431,qs),
(-4,424,o),
(33,420,o),
(51,420,qs),
(120,420,ls),
(129,420,o),
(135,408,o),
(135,398,qs),
(135,357,o),
(134,287,o),
(133,217,o),
(131,142,o),
(130,95,qs),
(129,63,o),
(117,45,o),
(102,44,qs),
(57,41,ls),
(45,40,o),
(30,31,o),
(30,24,qs),
(30,19,o),
(44,14,o),
(61,14,qs),
(64,14,o),
(92,14,o),
(130,14,o),
(173,15,o),
(210,15,o),
(236,15,o),
(239,15,qs),
(273,15,o),
(273,29,qs),
(273,38,o),
(253,44,o),
(239,44,qs),
(172,44,l),
(172,186,ls),
(172,223,o),
(178,292,o),
(195,329,qs),
(218,377,o),
(295,425,o),
(336,425,qs),
(376,425,o),
(421,383,o),
(443,316,o),
(448,235,o),
(448,196,qs),
(448,63,ls),
(448,-25,o),
(436,-125,o),
(412,-174,o),
(376,-186,o),
(352,-186,qs),
(321,-186,o),
(276,-156,o),
(276,-139,qs),
(276,-128,o),
(284,-121,o),
(292,-120,qs),
(305,-118,o),
(329,-106,o),
(329,-85,qs),
(329,-66,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
71 1 2 1 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
71 1 2 5 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 9 3 0 0 9 96 5 1 1 1 6 83 7 1 6 6 15 67 4 1 2 2 3 83 0 3 3 13 67 0 0 0 8 84 0 8 8 25 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 9 3 0 3 9 0 104 5 1 1 1 6 83 7 1 6 6 15 67 4 1 2 2 3 83 0 3 3 13 67 0 0 0 8 84 0 8 8 25 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 9 3 0 3 9 0 104 7 1 6 5 1 1 2 6 1 91 4 1 2 2 3 83 0 3 3 13 67 0 0 0 8 84 0 8 8 25 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 9 3 0 3 9 0 104 7 1 6 5 1 1 2 6 1 91 4 1 2 0 3 9 2 3 91 0 0 0 8 84 0 8 8 25 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 9 3 0 3 9 0 104 7 1 6 5 1 1 2 6 1 91 4 1 2 0 3 9 2 3 91 0 0 8 8 0 79 0 0 0 8 84 0 8 0 8 72
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 9 3 0 3 9 0 104 0 7 0 1 5 7 1 91 0 6 0 5 2 6 5 91 4 1 2 0 3 9 2 3 91 0 0 8 8 0 79 0 0 0 8 84 0 8 0 8 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
97 95 46 37 53 57 37 147 38 41 40 10 24
CALL[ ]	/* CallFunction */";
};
width = 547;
}
);
note = eng;
unicode = 331;
},
{
glyphname = o;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(486,366,o),
(425,432,o),
(334,472,o),
(276,472,qs),
(217,472,o),
(124,435,o),
(60,371,o),
(26,282,o),
(26,230,qs),
(26,177,o),
(59,88,o),
(122,24,o),
(211,-11,o),
(267,-11,qs),
(311,-11,o),
(401,19,o),
(473,79,o),
(518,170,o),
(518,231,qs),
(518,279,o)
);
},
{
closed = 1;
nodes = (
(364,370,o),
(403,328,o),
(424,269,o),
(424,235,qs),
(424,192,o),
(394,129,o),
(348,88,o),
(293,68,o),
(269,68,qs),
(244,68,o),
(192,88,o),
(149,128,o),
(122,190,o),
(122,231,qs),
(122,270,o),
(148,331,o),
(191,373,o),
(247,394,o),
(278,394,qs),
(310,394,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
4 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
0 1 4 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
21 20 31 29 20 39 21 39 40 36 5 17
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(470,367,o),
(412,433,o),
(327,472,o),
(271,472,qs),
(215,472,o),
(126,435,o),
(63,371,o),
(29,282,o),
(29,230,qs),
(29,177,o),
(63,88,o),
(124,24,o),
(208,-11,o),
(259,-11,qs),
(301,-11,o),
(387,19,o),
(456,80,o),
(500,172,o),
(500,233,qs),
(500,281,o)
);
},
{
closed = 1;
nodes = (
(363,386,o),
(404,339,o),
(427,274,o),
(427,235,qs),
(427,187,o),
(395,117,o),
(345,72,o),
(287,50,o),
(261,50,qs),
(235,50,o),
(179,72,o),
(133,117,o),
(104,185,o),
(104,231,qs),
(104,274,o),
(131,342,o),
(177,388,o),
(237,412,o),
(270,412,qs),
(305,412,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
4 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
0 1 4 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
21 20 31 29 20 39 21 39 40 36 5 17
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(447,369,o),
(395,434,o),
(316,472,o),
(264,472,qs),
(213,472,o),
(129,435,o),
(67,371,o),
(33,282,o),
(33,230,qs),
(33,177,o),
(68,88,o),
(126,24,o),
(204,-11,o),
(248,-11,qs),
(288,-11,o),
(368,20,o),
(433,81,o),
(474,174,o),
(474,236,qs),
(474,284,o)
);
},
{
closed = 1;
nodes = (
(361,411,o),
(406,356,o),
(431,280,o),
(431,235,qs),
(431,179,o),
(396,98,o),
(342,45,o),
(278,20,o),
(250,20,qs),
(221,20,o),
(161,46,o),
(110,98,o),
(78,178,o),
(78,231,qs),
(78,282,o),
(108,360,o),
(158,414,o),
(223,442,o),
(259,442,qs),
(297,442,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
4 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
0 1 4 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
21 20 31 29 20 39 21 39 40 36 5 17
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = o;
unicode = 111;
},
{
glyphname = oacute;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(339,687,o),
(307,688,qs),
(288,688,o),
(245,639,o),
(209,578,o),
(185,525,o),
(185,522,qs),
(185,511,o),
(211,500,o),
(222,500,qs),
(231,500,o),
(261,516,o),
(295,541,o),
(331,573,o),
(359,604,o),
(377,631,o),
(377,640,qs),
(377,659,o)
);
},
{
closed = 1;
nodes = (
(486,366,o),
(425,432,o),
(334,472,o),
(276,472,qs),
(217,472,o),
(124,435,o),
(60,371,o),
(26,282,o),
(26,230,qs),
(26,177,o),
(59,88,o),
(122,24,o),
(211,-11,o),
(267,-11,qs),
(311,-11,o),
(401,19,o),
(473,79,o),
(518,170,o),
(518,231,qs),
(518,279,o)
);
},
{
closed = 1;
nodes = (
(364,370,o),
(403,328,o),
(424,269,o),
(424,235,qs),
(424,192,o),
(394,129,o),
(348,88,o),
(293,68,o),
(269,68,qs),
(244,68,o),
(192,88,o),
(149,128,o),
(122,190,o),
(122,231,qs),
(122,270,o),
(148,331,o),
(191,373,o),
(247,394,o),
(278,394,qs),
(310,394,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 1 106 0 0 3 0 106 6 1 4 4 3 83 0 3 3 23 67 0 5 5 2 83 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 1 0 1 106 0 0 3 0 106 0 3 6 1 4 5 3 4 92 0 5 5 2 83 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
39 38 49 47 38 57 39 57 40 38 38 38 7 19
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(326,670,o),
(303,670,qs),
(293,670,o),
(270,649,o),
(245,618,o),
(221,581,o),
(203,548,o),
(192,524,o),
(192,522,qs),
(192,512,o),
(209,504,o),
(217,504,qs),
(228,504,o),
(273,536,o),
(318,578,o),
(352,621,o),
(352,632,qs),
(352,649,o)
);
},
{
closed = 1;
nodes = (
(470,367,o),
(412,433,o),
(327,472,o),
(271,472,qs),
(215,472,o),
(126,435,o),
(63,371,o),
(29,282,o),
(29,230,qs),
(29,177,o),
(63,88,o),
(124,24,o),
(208,-11,o),
(259,-11,qs),
(301,-11,o),
(387,19,o),
(456,80,o),
(500,172,o),
(500,233,qs),
(500,281,o)
);
},
{
closed = 1;
nodes = (
(363,386,o),
(404,339,o),
(427,274,o),
(427,235,qs),
(427,187,o),
(395,117,o),
(345,72,o),
(287,50,o),
(261,50,qs),
(235,50,o),
(179,72,o),
(133,117,o),
(104,185,o),
(104,231,qs),
(104,274,o),
(131,342,o),
(177,388,o),
(237,412,o),
(270,412,qs),
(305,412,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 1 106 0 0 3 0 106 6 1 4 4 3 83 0 3 3 23 67 0 5 5 2 83 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 1 0 1 106 0 0 3 0 106 0 3 6 1 4 5 3 4 92 0 5 5 2 83 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
39 38 49 47 38 57 39 57 40 38 40 36 7 19
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(447,369,o),
(395,434,o),
(316,472,o),
(264,472,qs),
(213,472,o),
(129,435,o),
(67,371,o),
(33,282,o),
(33,230,qs),
(33,177,o),
(68,88,o),
(126,24,o),
(204,-11,o),
(248,-11,qs),
(288,-11,o),
(368,20,o),
(433,81,o),
(474,174,o),
(474,236,qs),
(474,284,o)
);
},
{
closed = 1;
nodes = (
(361,411,o),
(406,356,o),
(431,280,o),
(431,235,qs),
(431,179,o),
(396,98,o),
(342,45,o),
(278,20,o),
(250,20,qs),
(221,20,o),
(161,46,o),
(110,98,o),
(78,178,o),
(78,231,qs),
(78,282,o),
(108,360,o),
(158,414,o),
(223,442,o),
(259,442,qs),
(297,442,o)
);
},
{
closed = 1;
nodes = (
(306,640,o),
(298,640,qs),
(291,640,o),
(259,610,o),
(227,570,o),
(203,530,o),
(203,521,qs),
(203,510,o),
(211,510,qs),
(218,510,o),
(253,538,o),
(289,574,o),
(317,610,o),
(317,618,qs),
(317,632,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 5 4 5 106 0 4 1 4 106 6 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 5 4 5 106 0 4 1 4 106 0 1 6 1 2 3 1 2 92 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
21 20 53 51 46 44 31 29 20 39 21 39 40 36 7 17
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = oacute;
unicode = 243;
},
{
glyphname = obreve;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(486,366,o),
(425,432,o),
(334,472,o),
(276,472,qs),
(217,472,o),
(124,435,o),
(60,371,o),
(26,282,o),
(26,230,qs),
(26,177,o),
(59,88,o),
(122,24,o),
(211,-11,o),
(267,-11,qs),
(311,-11,o),
(401,19,o),
(473,79,o),
(518,170,o),
(518,231,qs),
(518,279,o)
);
},
{
closed = 1;
nodes = (
(364,370,o),
(403,328,o),
(424,269,o),
(424,235,qs),
(424,192,o),
(394,129,o),
(348,88,o),
(293,68,o),
(269,68,qs),
(244,68,o),
(192,88,o),
(149,128,o),
(122,190,o),
(122,231,qs),
(122,270,o),
(148,331,o),
(191,373,o),
(247,394,o),
(278,394,qs),
(310,394,o)
);
},
{
closed = 1;
nodes = (
(368,619,o),
(353,619,qs),
(340,619,o),
(321,601,o),
(321,590,qs),
(321,582,o),
(294,567,o),
(265,567,qs),
(256,567,o),
(235,569,o),
(217,575,o),
(206,584,o),
(206,590,qs),
(206,607,o),
(187,619,o),
(170,619,qs),
(153,619,o),
(138,602,o),
(138,589,qs),
(138,557,o),
(205,510,o),
(270,510,qs),
(289,510,o),
(332,520,o),
(368,540,o),
(391,569,o),
(391,589,qs),
(391,609,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
7 1 5 6 5 106 0 6 0 4 1 6 4 91 8 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
7 1 5 6 5 106 0 6 0 4 1 6 4 91 0 1 8 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
21 20 66 64 60 58 52 50 46 44 31 29 20 39 21 39 40 36 9 17
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (29,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (150,0);
ref = breve;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
7 1 5 6 5 106 0 6 0 4 1 6 4 91 8 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
7 1 5 6 5 106 0 6 0 4 1 6 4 91 0 1 8 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
22 21 66 64 60 58 52 50 47 45 32 30 21 40 22 40 40 37 9 28
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(447,369,o),
(395,434,o),
(316,472,o),
(264,472,qs),
(213,472,o),
(129,435,o),
(67,371,o),
(33,282,o),
(33,230,qs),
(33,177,o),
(68,88,o),
(126,24,o),
(204,-11,o),
(248,-11,qs),
(288,-11,o),
(368,20,o),
(433,81,o),
(474,174,o),
(474,236,qs),
(474,284,o)
);
},
{
closed = 1;
nodes = (
(361,411,o),
(406,356,o),
(431,280,o),
(431,235,qs),
(431,179,o),
(396,98,o),
(342,45,o),
(278,20,o),
(250,20,qs),
(221,20,o),
(161,46,o),
(110,98,o),
(78,178,o),
(78,231,qs),
(78,282,o),
(108,360,o),
(158,414,o),
(223,442,o),
(259,442,qs),
(297,442,o)
);
},
{
closed = 1;
nodes = (
(363,613,o),
(355,613,qs),
(338,613,o),
(338,590,qs),
(338,580,o),
(325,560,o),
(303,545,o),
(276,535,o),
(263,535,qs),
(234,535,o),
(189,559,o),
(189,590,qs),
(189,602,o),
(183,613,o),
(172,613,qs),
(155,613,o),
(155,589,qs),
(155,574,o),
(172,546,o),
(201,523,o),
(240,510,o),
(263,510,qs),
(282,510,o),
(322,521,o),
(354,541,o),
(374,571,o),
(374,589,qs),
(374,605,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
7 1 5 6 5 106 0 6 0 4 1 6 4 91 8 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
7 1 5 6 5 106 0 6 0 4 1 6 4 91 0 1 8 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
21 20 66 64 59 57 53 51 46 44 31 29 20 39 21 39 40 36 9 17
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = obreve;
unicode = 335;
},
{
glyphname = ocircumflex;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(391,497,o),
(391,505,qs),
(391,521,o),
(356,566,o),
(310,608,o),
(267,638,o),
(258,638,qs),
(251,638,o),
(208,609,o),
(162,566,o),
(126,517,o),
(126,498,qs),
(126,493,o),
(133,484,o),
(139,484,qs),
(144,484,o),
(170,497,o),
(203,516,o),
(241,537,o),
(258,546,q),
(275,537,o),
(313,516,o),
(347,497,o),
(373,484,o),
(378,484,qs),
(385,484,o)
);
},
{
closed = 1;
nodes = (
(486,366,o),
(425,432,o),
(334,472,o),
(276,472,qs),
(217,472,o),
(124,435,o),
(60,371,o),
(26,282,o),
(26,230,qs),
(26,177,o),
(59,88,o),
(122,24,o),
(211,-11,o),
(267,-11,qs),
(311,-11,o),
(401,19,o),
(473,79,o),
(518,170,o),
(518,231,qs),
(518,279,o)
);
},
{
closed = 1;
nodes = (
(364,370,o),
(403,328,o),
(424,269,o),
(424,235,qs),
(424,192,o),
(394,129,o),
(348,88,o),
(293,68,o),
(269,68,qs),
(244,68,o),
(192,88,o),
(149,128,o),
(122,190,o),
(122,231,qs),
(122,270,o),
(148,331,o),
(191,373,o),
(247,394,o),
(278,394,qs),
(310,394,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 0 2 106 1 7 2 0 4 0 106 8 1 5 5 4 83 0 4 4 23 67 0 6 6 3 83 0 3 3 24 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 2 0 2 106 1 7 2 0 4 0 106 0 4 8 1 5 6 4 5 92 0 6 6 3 83 0 3 3 24 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
47 46 1 0 57 55 46 65 47 65 42 40 32 30 19 17 11 9 0 25 1 25 9 15
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (29,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (102,-14);
ref = circumflex;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
46 1 4 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 6 4 6 106 5 8 2 4 1 4 106 7 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 6 4 6 106 5 8 2 4 1 4 106 0 1 7 1 2 3 1 2 92 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
42 41 22 21 59 57 52 50 41 65 42 65 32 30 21 40 22 40 40 37 9 28
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(447,369,o),
(395,434,o),
(316,472,o),
(264,472,qs),
(213,472,o),
(129,435,o),
(67,371,o),
(33,282,o),
(33,230,qs),
(33,177,o),
(68,88,o),
(126,24,o),
(204,-11,o),
(248,-11,qs),
(288,-11,o),
(368,20,o),
(433,81,o),
(474,174,o),
(474,236,qs),
(474,284,o)
);
},
{
closed = 1;
nodes = (
(361,411,o),
(406,356,o),
(431,280,o),
(431,235,qs),
(431,179,o),
(396,98,o),
(342,45,o),
(278,20,o),
(250,20,qs),
(221,20,o),
(161,46,o),
(110,98,o),
(78,178,o),
(78,231,qs),
(78,282,o),
(108,360,o),
(158,414,o),
(223,442,o),
(259,442,qs),
(297,442,o)
);
},
{
closed = 1;
nodes = (
(388,521,qs),
(388,530,o),
(355,570,o),
(312,610,o),
(269,640,o),
(260,640,qs),
(251,640,o),
(210,610,o),
(166,570,o),
(133,530,o),
(133,521,qs),
(133,510,o),
(141,510,qs),
(146,510,o),
(172,528,o),
(205,554,o),
(243,584,o),
(260,596,q),
(277,584,o),
(315,554,o),
(349,528,o),
(375,510,o),
(380,510,qs),
(388,510,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
45 1 4 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 6 4 6 106 5 8 2 4 1 4 106 7 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 6 4 6 106 5 8 2 4 1 4 106 0 1 7 1 2 3 1 2 92 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
41 40 21 20 58 56 51 49 40 63 41 63 31 29 20 39 21 39 40 36 9 17
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = ocircumflex;
unicode = 244;
},
{
glyphname = odieresis;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(130,509,o),
(155,509,qs),
(166,509,o),
(190,515,o),
(209,531,o),
(222,558,o),
(222,579,qs),
(222,606,o),
(186,640,o),
(162,640,qs),
(144,640,o),
(119,626,o),
(103,606,o),
(96,583,o),
(96,575,qs),
(96,546,o)
);
},
{
closed = 1;
nodes = (
(337,486,o),
(362,486,qs),
(373,486,o),
(397,492,o),
(416,508,o),
(429,535,o),
(429,556,qs),
(429,583,o),
(393,617,o),
(369,617,qs),
(351,617,o),
(326,603,o),
(310,583,o),
(303,560,o),
(303,552,qs),
(303,523,o)
);
},
{
closed = 1;
nodes = (
(486,366,o),
(425,432,o),
(334,472,o),
(276,472,qs),
(217,472,o),
(124,435,o),
(60,371,o),
(26,282,o),
(26,230,qs),
(26,177,o),
(59,88,o),
(122,24,o),
(211,-11,o),
(267,-11,qs),
(311,-11,o),
(401,19,o),
(473,79,o),
(518,170,o),
(518,231,qs),
(518,279,o)
);
},
{
closed = 1;
nodes = (
(364,370,o),
(403,328,o),
(424,269,o),
(424,235,qs),
(424,192,o),
(394,129,o),
(348,88,o),
(293,68,o),
(269,68,qs),
(244,68,o),
(192,88,o),
(149,128,o),
(122,190,o),
(122,231,qs),
(122,270,o),
(148,331,o),
(191,373,o),
(247,394,o),
(278,394,qs),
(310,394,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 5 2 3 91 8 1 6 6 5 83 0 5 5 23 67 0 7 7 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 5 2 3 91 0 5 8 1 6 7 5 6 91 0 7 7 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
53 52 63 61 52 71 53 71 40 38 38 38 38 36 9 21
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (29,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (91,0);
ref = dieresis;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 4 0 5 7 4 5 91 0 6 0 7 1 6 7 91 8 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 4 0 5 7 4 5 91 0 6 0 7 1 6 7 91 0 1 8 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
22 21 67 65 61 59 53 51 47 45 32 30 21 40 22 40 40 37 9 28
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(447,369,o),
(395,434,o),
(316,472,o),
(264,472,qs),
(213,472,o),
(129,435,o),
(67,371,o),
(33,282,o),
(33,230,qs),
(33,177,o),
(68,88,o),
(126,24,o),
(204,-11,o),
(248,-11,qs),
(288,-11,o),
(368,20,o),
(433,81,o),
(474,174,o),
(474,236,qs),
(474,284,o)
);
},
{
closed = 1;
nodes = (
(361,411,o),
(406,356,o),
(431,280,o),
(431,235,qs),
(431,179,o),
(396,98,o),
(342,45,o),
(278,20,o),
(250,20,qs),
(221,20,o),
(161,46,o),
(110,98,o),
(78,178,o),
(78,231,qs),
(78,282,o),
(108,360,o),
(158,414,o),
(223,442,o),
(259,442,qs),
(297,442,o)
);
},
{
closed = 1;
nodes = (
(141,533,o),
(155,533,qs),
(169,533,o),
(196,552,o),
(196,579,qs),
(196,596,o),
(176,616,o),
(162,616,qs),
(151,616,o),
(136,607,o),
(126,594,o),
(121,580,o),
(121,575,qs),
(121,557,o)
);
},
{
closed = 1;
nodes = (
(348,510,o),
(362,510,qs),
(376,510,o),
(403,529,o),
(403,556,qs),
(403,573,o),
(383,593,o),
(369,593,qs),
(358,593,o),
(343,584,o),
(333,571,o),
(328,557,o),
(328,552,qs),
(328,534,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 4 0 5 7 4 5 91 0 6 0 7 1 6 7 91 8 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 4 0 5 7 4 5 91 0 6 0 7 1 6 7 91 0 1 8 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
21 20 66 64 60 58 52 50 46 44 31 29 20 39 21 39 40 36 9 17
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = odieresis;
unicode = 246;
},
{
glyphname = ograve;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(221,580,o),
(273,534,o),
(324,500,o),
(338,500,qs),
(349,500,o),
(375,511,o),
(375,522,qs),
(375,525,o),
(351,578,o),
(315,639,o),
(272,688,o),
(253,688,qs),
(221,687,o),
(183,659,o),
(183,640,qs),
(183,627,o)
);
},
{
closed = 1;
nodes = (
(486,366,o),
(425,432,o),
(334,472,o),
(276,472,qs),
(217,472,o),
(124,435,o),
(60,371,o),
(26,282,o),
(26,230,qs),
(26,177,o),
(59,88,o),
(122,24,o),
(211,-11,o),
(267,-11,qs),
(311,-11,o),
(401,19,o),
(473,79,o),
(518,170,o),
(518,231,qs),
(518,279,o)
);
},
{
closed = 1;
nodes = (
(364,370,o),
(403,328,o),
(424,269,o),
(424,235,qs),
(424,192,o),
(394,129,o),
(348,88,o),
(293,68,o),
(269,68,qs),
(244,68,o),
(192,88,o),
(149,128,o),
(122,190,o),
(122,231,qs),
(122,270,o),
(148,331,o),
(191,373,o),
(247,394,o),
(278,394,qs),
(310,394,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 1 0 106 0 1 3 1 106 6 1 4 4 3 83 0 3 3 23 67 0 5 5 2 83 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 1 0 106 0 1 3 1 106 0 3 6 1 4 5 3 4 92 0 5 5 2 83 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
37 36 47 45 36 55 37 55 40 40 38 34 7 19
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(226,578,o),
(271,536,o),
(316,504,o),
(327,504,qs),
(335,504,o),
(352,512,o),
(352,522,qs),
(352,524,o),
(341,548,o),
(322,581,o),
(299,618,o),
(274,649,o),
(250,670,o),
(241,670,qs),
(218,670,o),
(192,649,o),
(192,632,qs),
(192,621,o)
);
},
{
closed = 1;
nodes = (
(470,367,o),
(412,433,o),
(327,472,o),
(271,472,qs),
(215,472,o),
(126,435,o),
(63,371,o),
(29,282,o),
(29,230,qs),
(29,177,o),
(63,88,o),
(124,24,o),
(208,-11,o),
(259,-11,qs),
(301,-11,o),
(387,19,o),
(456,80,o),
(500,172,o),
(500,233,qs),
(500,281,o)
);
},
{
closed = 1;
nodes = (
(363,386,o),
(404,339,o),
(427,274,o),
(427,235,qs),
(427,187,o),
(395,117,o),
(345,72,o),
(287,50,o),
(261,50,qs),
(235,50,o),
(179,72,o),
(133,117,o),
(104,185,o),
(104,231,qs),
(104,274,o),
(131,342,o),
(177,388,o),
(237,412,o),
(270,412,qs),
(305,412,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 1 0 106 0 1 3 1 106 6 1 4 4 3 83 0 3 3 23 67 0 5 5 2 83 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 1 0 106 0 1 3 1 106 0 3 6 1 4 5 3 4 92 0 5 5 2 83 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
39 38 49 47 38 57 39 57 40 40 40 34 7 19
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(447,369,o),
(395,434,o),
(316,472,o),
(264,472,qs),
(213,472,o),
(129,435,o),
(67,371,o),
(33,282,o),
(33,230,qs),
(33,177,o),
(68,88,o),
(126,24,o),
(204,-11,o),
(248,-11,qs),
(288,-11,o),
(368,20,o),
(433,81,o),
(474,174,o),
(474,236,qs),
(474,284,o)
);
},
{
closed = 1;
nodes = (
(361,411,o),
(406,356,o),
(431,280,o),
(431,235,qs),
(431,179,o),
(396,98,o),
(342,45,o),
(278,20,o),
(250,20,qs),
(221,20,o),
(161,46,o),
(110,98,o),
(78,178,o),
(78,231,qs),
(78,282,o),
(108,360,o),
(158,414,o),
(223,442,o),
(259,442,qs),
(297,442,o)
);
},
{
closed = 1;
nodes = (
(232,574,o),
(268,538,o),
(303,510,o),
(310,510,qs),
(318,510,o),
(318,521,qs),
(318,530,o),
(294,570,o),
(262,610,o),
(230,640,o),
(223,640,qs),
(215,640,o),
(204,632,o),
(204,618,qs),
(204,610,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 4 5 4 106 0 5 1 5 106 6 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 4 5 4 106 0 5 1 5 106 0 1 6 1 2 3 1 2 92 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
21 20 51 49 44 42 31 29 20 39 21 39 40 36 7 17
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = ograve;
unicode = 242;
},
{
glyphname = ohungarumlaut;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(269,687,o),
(237,688,qs),
(218,688,o),
(175,639,o),
(139,578,o),
(115,525,o),
(115,522,qs),
(115,511,o),
(141,500,o),
(152,500,qs),
(161,500,o),
(191,516,o),
(225,541,o),
(261,573,o),
(289,604,o),
(307,631,o),
(307,640,qs),
(307,659,o)
);
},
{
closed = 1;
nodes = (
(436,687,o),
(404,688,qs),
(385,688,o),
(342,639,o),
(306,578,o),
(282,525,o),
(282,522,qs),
(282,511,o),
(308,500,o),
(319,500,qs),
(328,500,o),
(358,516,o),
(392,541,o),
(428,573,o),
(456,604,o),
(474,631,o),
(474,640,qs),
(474,659,o)
);
},
{
closed = 1;
nodes = (
(486,366,o),
(425,432,o),
(334,472,o),
(276,472,qs),
(217,472,o),
(124,435,o),
(60,371,o),
(26,282,o),
(26,230,qs),
(26,177,o),
(59,88,o),
(122,24,o),
(211,-11,o),
(267,-11,qs),
(311,-11,o),
(401,19,o),
(473,79,o),
(518,170,o),
(518,231,qs),
(518,279,o)
);
},
{
closed = 1;
nodes = (
(364,370,o),
(403,328,o),
(424,269,o),
(424,235,qs),
(424,192,o),
(394,129,o),
(348,88,o),
(293,68,o),
(269,68,qs),
(244,68,o),
(192,88,o),
(149,128,o),
(122,190,o),
(122,231,qs),
(122,270,o),
(148,331,o),
(191,373,o),
(247,394,o),
(278,394,qs),
(310,394,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
3 1 1 0 1 106 2 1 0 5 0 106 8 1 6 6 5 83 0 5 5 23 67 0 7 7 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
3 1 1 0 1 106 2 1 0 5 0 106 0 5 8 1 6 7 5 6 92 0 7 7 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
57 56 67 65 56 75 57 75 40 38 38 40 38 38 9 21
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(254,670,o),
(231,670,qs),
(221,670,o),
(198,649,o),
(173,618,o),
(149,581,o),
(131,548,o),
(120,524,o),
(120,522,qs),
(120,512,o),
(137,504,o),
(145,504,qs),
(156,504,o),
(201,536,o),
(246,578,o),
(280,621,o),
(280,632,qs),
(280,649,o)
);
},
{
closed = 1;
nodes = (
(416,670,o),
(393,670,qs),
(383,670,o),
(360,649,o),
(335,618,o),
(311,581,o),
(293,548,o),
(282,524,o),
(282,522,qs),
(282,512,o),
(299,504,o),
(307,504,qs),
(318,504,o),
(363,536,o),
(408,578,o),
(442,621,o),
(442,632,qs),
(442,649,o)
);
},
{
closed = 1;
nodes = (
(470,367,o),
(412,433,o),
(327,472,o),
(271,472,qs),
(215,472,o),
(126,435,o),
(63,371,o),
(29,282,o),
(29,230,qs),
(29,177,o),
(63,88,o),
(124,24,o),
(208,-11,o),
(259,-11,qs),
(301,-11,o),
(387,19,o),
(456,80,o),
(500,172,o),
(500,233,qs),
(500,281,o)
);
},
{
closed = 1;
nodes = (
(363,386,o),
(404,339,o),
(427,274,o),
(427,235,qs),
(427,187,o),
(395,117,o),
(345,72,o),
(287,50,o),
(261,50,qs),
(235,50,o),
(179,72,o),
(133,117,o),
(104,185,o),
(104,231,qs),
(104,274,o),
(131,342,o),
(177,388,o),
(237,412,o),
(270,412,qs),
(305,412,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
3 1 1 0 1 106 2 1 0 5 0 106 8 1 6 6 5 83 0 5 5 23 67 0 7 7 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
3 1 1 0 1 106 2 1 0 5 0 106 0 5 8 1 6 7 5 6 92 0 7 7 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
57 56 67 65 56 75 57 75 40 38 40 38 40 36 9 21
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(447,369,o),
(395,434,o),
(316,472,o),
(264,472,qs),
(213,472,o),
(129,435,o),
(67,371,o),
(33,282,o),
(33,230,qs),
(33,177,o),
(68,88,o),
(126,24,o),
(204,-11,o),
(248,-11,qs),
(288,-11,o),
(368,20,o),
(433,81,o),
(474,174,o),
(474,236,qs),
(474,284,o)
);
},
{
closed = 1;
nodes = (
(361,411,o),
(406,356,o),
(431,280,o),
(431,235,qs),
(431,179,o),
(396,98,o),
(342,45,o),
(278,20,o),
(250,20,qs),
(221,20,o),
(161,46,o),
(110,98,o),
(78,178,o),
(78,231,qs),
(78,282,o),
(108,360,o),
(158,414,o),
(223,442,o),
(259,442,qs),
(297,442,o)
);
},
{
closed = 1;
nodes = (
(232,640,o),
(224,640,qs),
(217,640,o),
(185,610,o),
(153,570,o),
(129,530,o),
(129,521,qs),
(129,510,o),
(137,510,qs),
(144,510,o),
(179,538,o),
(215,574,o),
(243,610,o),
(243,618,qs),
(243,632,o)
);
},
{
closed = 1;
nodes = (
(386,640,o),
(378,640,qs),
(371,640,o),
(339,610,o),
(307,570,o),
(283,530,o),
(283,521,qs),
(283,510,o),
(291,510,qs),
(298,510,o),
(333,538,o),
(369,574,o),
(397,610,o),
(397,618,qs),
(397,632,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
7 1 5 4 5 106 6 1 4 1 4 106 8 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
7 1 5 4 5 106 6 1 4 1 4 106 0 1 8 1 2 3 1 2 92 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
21 20 68 66 61 59 53 51 46 44 31 29 20 39 21 39 40 36 9 17
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = ohungarumlaut;
unicode = 337;
},
{
glyphname = omacron;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(322,643,o),
(280,643,qs),
(267,643,o),
(232,644,o),
(196,644,o),
(166,645,o),
(159,645,qs),
(142,645,o),
(126,620,o),
(126,606,qs),
(126,592,o),
(145,566,o),
(159,566,qs),
(177,566,o),
(241,566,o),
(313,567,o),
(380,567,o),
(400,567,qs),
(411,567,o),
(425,576,o),
(433,589,o),
(436,604,o),
(436,609,qs),
(436,624,o),
(419,646,o),
(408,646,qs),
(384,646,o)
);
},
{
closed = 1;
nodes = (
(486,366,o),
(425,432,o),
(334,472,o),
(276,472,qs),
(217,472,o),
(124,435,o),
(60,371,o),
(26,282,o),
(26,230,qs),
(26,177,o),
(59,88,o),
(122,24,o),
(211,-11,o),
(267,-11,qs),
(311,-11,o),
(401,19,o),
(473,79,o),
(518,170,o),
(518,231,qs),
(518,279,o)
);
},
{
closed = 1;
nodes = (
(364,370,o),
(403,328,o),
(424,269,o),
(424,235,qs),
(424,192,o),
(394,129,o),
(348,88,o),
(293,68,o),
(269,68,qs),
(244,68,o),
(192,88,o),
(149,128,o),
(122,190,o),
(122,231,qs),
(122,270,o),
(148,331,o),
(191,373,o),
(247,394,o),
(278,394,qs),
(310,394,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
6 1 0 0 1 3 0 1 91 7 1 4 4 3 83 0 3 3 23 67 0 5 5 2 83 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
6 1 0 0 1 3 0 1 91 0 3 7 1 4 5 3 4 91 0 5 5 2 83 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
48 47 1 0 58 56 47 66 48 66 43 41 33 31 14 7 0 26 1 18 8 15
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (29,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (120,47);
ref = macron;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
7 1 4 0 5 1 4 5 91 6 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
7 1 4 0 5 1 4 5 91 0 1 6 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
42 41 22 21 53 46 41 65 42 57 32 30 21 40 22 40 40 37 8 28
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(447,369,o),
(395,434,o),
(316,472,o),
(264,472,qs),
(213,472,o),
(129,435,o),
(67,371,o),
(33,282,o),
(33,230,qs),
(33,177,o),
(68,88,o),
(126,24,o),
(204,-11,o),
(248,-11,qs),
(288,-11,o),
(368,20,o),
(433,81,o),
(474,174,o),
(474,236,qs),
(474,284,o)
);
},
{
closed = 1;
nodes = (
(361,411,o),
(406,356,o),
(431,280,o),
(431,235,qs),
(431,179,o),
(396,98,o),
(342,45,o),
(278,20,o),
(250,20,qs),
(221,20,o),
(161,46,o),
(110,98,o),
(78,178,o),
(78,231,qs),
(78,282,o),
(108,360,o),
(158,414,o),
(223,442,o),
(259,442,qs),
(297,442,o)
);
},
{
closed = 1;
nodes = (
(315,539,o),
(273,539,qs),
(260,539,o),
(225,540,o),
(189,540,o),
(159,541,o),
(152,541,qs),
(144,541,o),
(136,531,o),
(136,526,qs),
(136,521,o),
(145,510,o),
(152,510,qs),
(170,510,o),
(234,510,o),
(306,511,o),
(373,511,o),
(393,511,qs),
(404,511,o),
(412,524,o),
(412,529,qs),
(412,534,o),
(405,542,o),
(401,542,qs),
(377,542,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
7 1 4 0 5 1 4 5 91 6 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
7 1 4 0 5 1 4 5 91 0 1 6 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
41 40 21 20 52 45 40 64 41 56 31 29 20 39 21 39 40 36 8 17
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = omacron;
unicode = 333;
},
{
glyphname = oogonek;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(486,366,o),
(425,432,o),
(334,472,o),
(276,472,qs),
(217,472,o),
(124,435,o),
(60,371,o),
(26,282,o),
(26,230,qs),
(26,180,o),
(55,97,o),
(109,34,o),
(187,-5,o),
(236,-9,q),
(228,-13,o),
(203,-28,o),
(181,-49,o),
(165,-77,o),
(165,-94,qs),
(165,-113,o),
(185,-141,o),
(216,-160,o),
(255,-169,o),
(275,-169,qs),
(296,-169,o),
(328,-158,o),
(348,-142,o),
(358,-124,o),
(358,-116,qs),
(358,-107,o),
(343,-92,o),
(333,-92,qs),
(325,-92,o),
(316,-100,o),
(305,-109,o),
(288,-116,o),
(273,-116,qs),
(262,-116,o),
(244,-106,o),
(244,-95,qs),
(244,-73,o),
(270,-20,o),
(294,-9,q),
(335,-5,o),
(416,28,o),
(479,88,o),
(518,175,o),
(518,231,qs),
(518,279,o)
);
},
{
closed = 1;
nodes = (
(364,370,o),
(403,328,o),
(424,269,o),
(424,235,qs),
(424,192,o),
(394,129,o),
(348,88,o),
(293,68,o),
(269,68,qs),
(244,68,o),
(192,88,o),
(149,128,o),
(122,190,o),
(122,231,qs),
(122,270,o),
(148,331,o),
(191,373,o),
(247,394,o),
(278,394,qs),
(310,394,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 1 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 5 4 1 4 5 1 104 0 1 0 4 1 0 102 0 0 0 2 0 2 88 6 1 4 4 3 83 0 3 3 23 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 5 4 1 4 5 1 104 0 1 0 4 1 0 102 0 3 6 1 4 5 3 4 91 0 0 2 2 0 79 0 0 0 2 84 0 2 0 2 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
50 49 60 58 49 68 50 68 45 43 38 35 42 7 18
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (29,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (145,-19);
ref = ogonek;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 3 2 7 7 3 96 0 5 0 4 0 5 4 104 0 4 0 6 4 6 87 8 1 2 2 1 83 0 1 1 23 67 9 1 7 7 0 84 0 0 0 24 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 3 2 7 7 3 96 0 5 0 4 0 5 4 104 0 1 8 1 2 3 1 2 91 0 4 0 6 4 6 87 9 1 7 7 0 84 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 3 2 7 2 3 7 104 0 5 0 4 0 5 4 104 0 1 8 1 2 3 1 2 91 0 4 0 6 4 6 87 9 1 7 7 0 84 0 0 0 24 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
41 41 22 21 41 70 41 70 63 61 55 53 50 48 32 30 21 40 22 40 40 37 10 28
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(447,369,o),
(395,434,o),
(316,472,o),
(264,472,qs),
(213,472,o),
(129,435,o),
(67,371,o),
(33,282,o),
(33,230,qs),
(33,179,o),
(64,94,o),
(118,31,o),
(190,-7,o),
(231,-10,q),
(224,-14,o),
(204,-29,o),
(185,-50,o),
(172,-78,o),
(172,-96,qs),
(172,-128,o),
(218,-169,o),
(253,-169,qs),
(271,-169,o),
(299,-156,o),
(320,-139,o),
(331,-122,o),
(331,-118,qs),
(331,-112,o),
(326,-102,o),
(317,-102,qs),
(310,-102,o),
(299,-115,o),
(286,-130,o),
(268,-142,o),
(255,-142,qs),
(243,-142,o),
(228,-132,o),
(219,-117,o),
(216,-101,o),
(216,-95,qs),
(216,-89,o),
(220,-66,o),
(232,-41,o),
(252,-17,o),
(268,-10,q),
(305,-6,o),
(379,28,o),
(438,89,o),
(474,178,o),
(474,236,qs),
(474,284,o)
);
},
{
closed = 1;
nodes = (
(361,411,o),
(406,356,o),
(431,280,o),
(431,235,qs),
(431,179,o),
(396,98,o),
(342,45,o),
(278,20,o),
(250,20,qs),
(221,20,o),
(161,46,o),
(110,98,o),
(78,178,o),
(78,231,qs),
(78,282,o),
(108,360,o),
(158,414,o),
(223,442,o),
(259,442,qs),
(297,442,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
36 1 1 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 5 4 1 4 5 1 104 0 1 0 4 1 0 102 0 0 0 2 0 2 88 6 1 4 4 3 83 0 3 3 23 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 5 4 1 4 5 1 104 0 1 0 4 1 0 102 0 3 6 1 4 5 3 4 91 0 0 2 2 0 79 0 0 0 2 84 0 2 0 2 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
52 51 62 60 51 70 52 70 47 45 38 35 46 7 18
CALL[ ]	/* CallFunction */";
};
width = 507;
}
);
note = oogonek;
unicode = 491;
},
{
glyphname = oslash;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(474,387,o),
(431,421,q),
(439,436,o),
(453,472,o),
(453,481,qs),
(453,490,o),
(435,517,o),
(405,517,qs),
(396,517,o),
(381,504,o),
(369,488,o),
(362,473,o),
(361,470,qs),
(356,460,l),
(320,472,o),
(276,472,qs),
(217,472,o),
(124,435,o),
(60,371,o),
(26,282,o),
(26,230,qs),
(26,163,o),
(77,59,o),
(125,28,q),
(100,-22,ls),
(98,-27,o),
(94,-38,o),
(94,-42,qs),
(94,-51,o),
(105,-61,o),
(120,-66,o),
(137,-67,o),
(142,-67,qs),
(155,-67,o),
(178,-57,o),
(189,-35,qs),
(205,-4,l),
(219,-7,o),
(250,-11,o),
(267,-11,qs),
(311,-11,o),
(401,19,o),
(473,79,o),
(518,170,o),
(518,231,qs),
(518,288,o)
);
},
{
closed = 1;
nodes = (
(319,388,q),
(281,314,o),
(204,178,o),
(168,111,q),
(148,131,o),
(122,191,o),
(122,231,qs),
(122,270,o),
(148,331,o),
(191,373,o),
(247,394,o),
(278,394,qs),
(299,394,o)
);
},
{
closed = 1;
nodes = (
(394,129,o),
(348,88,o),
(293,68,o),
(269,68,qs),
(263,68,o),
(250,69,o),
(244,70,q),
(389,342,l),
(406,321,o),
(424,267,o),
(424,235,qs),
(424,192,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
43 31 2 4 2 62 57 54 3 5 4 21 8 2 0 5 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 2 3 106 0 1 0 1 107 6 1 4 4 2 83 0 2 2 23 67 0 5 5 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 3 2 3 106 0 1 0 1 107 0 2 6 1 4 5 2 4 91 0 5 5 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
47 46 67 65 46 58 47 58 38 46 53 36 7 19
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(95,-44,qs),
(95,-57,o),
(120,-64,o),
(129,-64,qs),
(142,-64,o),
(165,-43,o),
(169,-35,qs),
(413,421,ls),
(416,427,o),
(425,445,o),
(434,465,o),
(440,484,o),
(440,489,qs),
(440,497,o),
(427,517,o),
(406,517,qs),
(397,517,o),
(382,504,o),
(370,488,o),
(363,473,o),
(362,470,qs),
(328,401,o),
(260,275,o),
(194,155,o),
(131,38,o),
(101,-22,qs),
(95,-34,o)
);
},
{
closed = 1;
nodes = (
(470,367,o),
(412,433,o),
(327,472,o),
(271,472,qs),
(215,472,o),
(126,435,o),
(63,371,o),
(29,282,o),
(29,230,qs),
(29,177,o),
(63,88,o),
(124,24,o),
(208,-11,o),
(259,-11,qs),
(301,-11,o),
(387,19,o),
(456,80,o),
(500,172,o),
(500,233,qs),
(500,281,o)
);
},
{
closed = 1;
nodes = (
(363,386,o),
(404,339,o),
(427,274,o),
(427,235,qs),
(427,187,o),
(395,117,o),
(345,72,o),
(287,50,o),
(261,50,qs),
(235,50,o),
(179,72,o),
(133,117,o),
(104,185,o),
(104,231,qs),
(104,274,o),
(131,342,o),
(177,388,o),
(237,412,o),
(270,412,qs),
(305,412,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 3 0 106 0 1 2 1 107 6 1 4 4 3 83 0 3 3 23 67 0 5 5 2 83 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 3 0 106 0 1 2 1 107 0 3 6 1 4 5 3 4 91 0 5 5 2 83 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
48 47 58 56 47 66 48 66 40 40 42 41 7 19
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(432,399,o),
(390,431,q),
(408,464,ls),
(412,472,o),
(422,495,o),
(422,503,qs),
(422,509,o),
(416,517,o),
(407,517,qs),
(398,517,o),
(383,504,o),
(371,488,o),
(364,473,o),
(363,470,q),
(354,453,l),
(313,472,o),
(264,472,qs),
(213,472,o),
(129,435,o),
(67,371,o),
(33,282,o),
(33,230,qs),
(33,163,o),
(85,60,o),
(128,28,q),
(121,16,o),
(109,-9,o),
(102,-22,qs),
(100,-27,o),
(97,-41,o),
(97,-47,qs),
(97,-59,o),
(111,-59,qs),
(123,-59,o),
(133,-49,o),
(140,-35,qs),
(163,8,l),
(204,-11,o),
(248,-11,qs),
(288,-11,o),
(368,20,o),
(433,81,o),
(474,174,o),
(474,236,qs),
(474,296,o)
);
},
{
closed = 1;
nodes = (
(321,431,o),
(338,421,q),
(288,323,o),
(193,148,o),
(146,61,q),
(117,87,o),
(78,171,o),
(78,231,qs),
(78,282,o),
(108,360,o),
(158,414,o),
(223,442,o),
(259,442,qs),
(281,442,o)
);
},
{
closed = 1;
nodes = (
(396,98,o),
(342,45,o),
(278,20,o),
(250,20,qs),
(215,20,o),
(179,38,q),
(372,396,l),
(400,368,o),
(431,286,o),
(431,235,qs),
(431,179,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
29 1 4 2 63 62 56 53 42 19 6 5 4 7 1 0 5 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 2 3 106 0 1 0 1 107 6 1 4 4 2 83 0 2 2 23 67 0 5 5 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 3 2 3 106 0 1 0 1 107 0 2 6 1 4 5 2 4 91 0 5 5 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
46 45 66 64 45 58 46 58 38 46 36 36 7 19
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = oslash;
unicode = 248;
},
{
glyphname = oslashacute;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(326,687,o),
(294,688,qs),
(275,688,o),
(232,639,o),
(196,578,o),
(172,525,o),
(172,522,qs),
(172,511,o),
(198,500,o),
(209,500,qs),
(218,500,o),
(248,516,o),
(282,541,o),
(318,573,o),
(346,604,o),
(364,631,o),
(364,640,qs),
(364,659,o)
);
},
{
closed = 1;
nodes = (
(474,387,o),
(431,421,q),
(439,436,o),
(453,472,o),
(453,481,qs),
(453,490,o),
(435,517,o),
(405,517,qs),
(396,517,o),
(381,504,o),
(369,488,o),
(362,473,o),
(361,470,qs),
(356,460,l),
(320,472,o),
(276,472,qs),
(217,472,o),
(124,435,o),
(60,371,o),
(26,282,o),
(26,230,qs),
(26,163,o),
(77,59,o),
(125,28,q),
(100,-22,ls),
(98,-27,o),
(94,-38,o),
(94,-42,qs),
(94,-51,o),
(105,-61,o),
(120,-66,o),
(137,-67,o),
(142,-67,qs),
(155,-67,o),
(178,-57,o),
(189,-35,qs),
(205,-4,l),
(219,-7,o),
(250,-11,o),
(267,-11,qs),
(311,-11,o),
(401,19,o),
(473,79,o),
(518,170,o),
(518,231,qs),
(518,288,o)
);
},
{
closed = 1;
nodes = (
(319,388,q),
(281,314,o),
(204,178,o),
(168,111,q),
(148,131,o),
(122,191,o),
(122,231,qs),
(122,270,o),
(148,331,o),
(191,373,o),
(247,394,o),
(278,394,qs),
(299,394,o)
);
},
{
closed = 1;
nodes = (
(394,129,o),
(348,88,o),
(293,68,o),
(269,68,qs),
(263,68,o),
(250,69,o),
(244,70,q),
(389,342,l),
(406,321,o),
(424,267,o),
(424,235,qs),
(424,192,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
61 49 2 6 4 80 75 72 3 7 6 39 26 2 2 7 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 5 1 106 0 5 0 5 106 0 0 4 0 106 0 3 2 3 107 8 1 6 6 4 83 0 4 4 23 67 0 7 7 2 83 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 1 5 1 106 0 5 0 5 106 0 0 4 0 106 0 3 2 3 107 0 4 8 1 6 7 4 6 92 0 7 7 2 83 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
65 64 85 83 64 76 65 76 38 46 53 38 38 38 9 21
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(95,-44,qs),
(95,-57,o),
(120,-64,o),
(129,-64,qs),
(142,-64,o),
(165,-43,o),
(169,-35,qs),
(413,421,ls),
(416,427,o),
(425,445,o),
(434,465,o),
(440,484,o),
(440,489,qs),
(440,497,o),
(427,517,o),
(406,517,qs),
(397,517,o),
(382,504,o),
(370,488,o),
(363,473,o),
(362,470,qs),
(328,401,o),
(260,275,o),
(194,155,o),
(131,38,o),
(101,-22,qs),
(95,-34,o)
);
},
{
closed = 1;
nodes = (
(331,670,o),
(308,670,qs),
(298,670,o),
(275,649,o),
(250,618,o),
(226,581,o),
(208,548,o),
(197,524,o),
(197,522,qs),
(197,512,o),
(214,504,o),
(222,504,qs),
(233,504,o),
(278,536,o),
(323,578,o),
(357,621,o),
(357,632,qs),
(357,649,o)
);
},
{
closed = 1;
nodes = (
(470,367,o),
(412,433,o),
(327,472,o),
(271,472,qs),
(215,472,o),
(126,435,o),
(63,371,o),
(29,282,o),
(29,230,qs),
(29,177,o),
(63,88,o),
(124,24,o),
(208,-11,o),
(259,-11,qs),
(301,-11,o),
(387,19,o),
(456,80,o),
(500,172,o),
(500,233,qs),
(500,281,o)
);
},
{
closed = 1;
nodes = (
(363,386,o),
(404,339,o),
(427,274,o),
(427,235,qs),
(427,187,o),
(395,117,o),
(345,72,o),
(287,50,o),
(261,50,qs),
(235,50,o),
(179,72,o),
(133,117,o),
(104,185,o),
(104,231,qs),
(104,274,o),
(131,342,o),
(177,388,o),
(237,412,o),
(270,412,qs),
(305,412,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 3 0 3 106 0 0 2 0 106 0 2 5 2 106 0 1 4 1 107 8 1 6 6 5 83 0 5 5 23 67 0 7 7 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 3 0 3 106 0 0 2 0 106 0 2 5 2 106 0 1 4 1 107 0 5 8 1 6 7 5 6 92 0 7 7 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
66 65 76 74 65 84 66 84 40 38 40 40 42 41 9 21
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(432,399,o),
(390,431,q),
(408,464,ls),
(412,472,o),
(422,495,o),
(422,503,qs),
(422,509,o),
(416,517,o),
(407,517,qs),
(398,517,o),
(383,504,o),
(371,488,o),
(364,473,o),
(363,470,q),
(354,453,l),
(313,472,o),
(264,472,qs),
(213,472,o),
(129,435,o),
(67,371,o),
(33,282,o),
(33,230,qs),
(33,163,o),
(85,60,o),
(128,28,q),
(121,16,o),
(109,-9,o),
(102,-22,qs),
(100,-27,o),
(97,-41,o),
(97,-47,qs),
(97,-59,o),
(111,-59,qs),
(123,-59,o),
(133,-49,o),
(140,-35,qs),
(163,8,l),
(204,-11,o),
(248,-11,qs),
(288,-11,o),
(368,20,o),
(433,81,o),
(474,174,o),
(474,236,qs),
(474,296,o)
);
},
{
closed = 1;
nodes = (
(321,431,o),
(338,421,q),
(288,323,o),
(193,148,o),
(146,61,q),
(117,87,o),
(78,171,o),
(78,231,qs),
(78,282,o),
(108,360,o),
(158,414,o),
(223,442,o),
(259,442,qs),
(281,442,o)
);
},
{
closed = 1;
nodes = (
(396,98,o),
(342,45,o),
(278,20,o),
(250,20,qs),
(215,20,o),
(179,38,q),
(372,396,l),
(400,368,o),
(431,286,o),
(431,235,qs),
(431,179,o)
);
},
{
closed = 1;
nodes = (
(337,640,o),
(329,640,qs),
(322,640,o),
(290,610,o),
(258,570,o),
(234,530,o),
(234,521,qs),
(234,510,o),
(242,510,qs),
(249,510,o),
(284,538,o),
(320,574,o),
(348,610,o),
(348,618,qs),
(348,632,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
29 1 4 2 63 62 56 53 42 19 6 5 4 7 1 0 5 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 7 3 7 106 0 3 6 3 106 0 6 2 6 106 0 1 0 1 107 8 1 4 4 2 83 0 2 2 23 67 0 5 5 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 7 3 7 106 0 3 6 3 106 0 6 2 6 106 0 1 0 1 107 0 2 8 1 4 5 2 4 91 0 5 5 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
46 45 83 81 76 74 66 64 45 58 46 58 38 46 36 36 9 19
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = oslashacute;
unicode = 511;
},
{
glyphname = otilde;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(486,366,o),
(425,432,o),
(334,472,o),
(276,472,qs),
(217,472,o),
(124,435,o),
(60,371,o),
(26,282,o),
(26,230,qs),
(26,177,o),
(59,88,o),
(122,24,o),
(211,-11,o),
(267,-11,qs),
(311,-11,o),
(401,19,o),
(473,79,o),
(518,170,o),
(518,231,qs),
(518,279,o)
);
},
{
closed = 1;
nodes = (
(364,370,o),
(403,328,o),
(424,269,o),
(424,235,qs),
(424,192,o),
(394,129,o),
(348,88,o),
(293,68,o),
(269,68,qs),
(244,68,o),
(192,88,o),
(149,128,o),
(122,190,o),
(122,231,qs),
(122,270,o),
(148,331,o),
(191,373,o),
(247,394,o),
(278,394,qs),
(310,394,o)
);
},
{
closed = 1;
nodes = (
(92,498,o),
(101,498,qs),
(108,498,o),
(126,506,o),
(146,515,o),
(170,523,o),
(185,523,qs),
(199,523,o),
(231,515,o),
(266,506,o),
(303,499,o),
(322,499,qs),
(333,499,o),
(371,506,o),
(407,523,o),
(433,552,o),
(433,574,qs),
(433,590,o),
(416,609,o),
(411,609,qs),
(404,609,o),
(381,596,qs),
(367,588,o),
(335,579,o),
(321,579,qs),
(306,579,o),
(270,588,o),
(234,598,o),
(199,607,o),
(184,607,qs),
(147,607,o),
(116,589,qs),
(102,581,o),
(82,556,o),
(82,534,qs),
(82,519,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 1 5 7 91 10 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 1 5 7 91 0 1 10 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
21 20 74 72 69 67 64 62 56 54 51 49 46 44 31 29 20 39 21 39 40 36 11 17
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (29,0);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (74,0);
ref = tilde;
},
{
alignment = -1;
ref = o;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 7 1 3 91 10 1 8 8 7 83 0 7 7 23 67 0 9 9 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 7 1 3 91 0 7 10 1 8 9 7 8 91 0 9 9 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
60 59 70 68 59 78 60 78 40 40 35 35 38 35 35 37 11 34
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(447,369,o),
(395,434,o),
(316,472,o),
(264,472,qs),
(213,472,o),
(129,435,o),
(67,371,o),
(33,282,o),
(33,230,qs),
(33,177,o),
(68,88,o),
(126,24,o),
(204,-11,o),
(248,-11,qs),
(288,-11,o),
(368,20,o),
(433,81,o),
(474,174,o),
(474,236,qs),
(474,284,o)
);
},
{
closed = 1;
nodes = (
(361,411,o),
(406,356,o),
(431,280,o),
(431,235,qs),
(431,179,o),
(396,98,o),
(342,45,o),
(278,20,o),
(250,20,qs),
(221,20,o),
(161,46,o),
(110,98,o),
(78,178,o),
(78,231,qs),
(78,282,o),
(108,360,o),
(158,414,o),
(223,442,o),
(259,442,qs),
(297,442,o)
);
},
{
closed = 1;
nodes = (
(98,522,o),
(103,522,qs),
(108,522,o),
(124,530,o),
(146,539,o),
(172,547,o),
(187,547,qs),
(201,547,o),
(233,539,o),
(268,530,o),
(305,523,o),
(324,523,qs),
(345,523,o),
(382,530,o),
(410,543,o),
(426,559,o),
(426,568,qs),
(426,575,o),
(418,585,o),
(413,585,qs),
(408,585,o),
(397,580,o),
(383,572,qs),
(349,555,o),
(323,555,qs),
(308,555,o),
(272,564,o),
(236,574,o),
(201,583,o),
(186,583,qs),
(149,583,o),
(118,565,qs),
(89,548,o),
(89,537,qs),
(89,532,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 1 5 7 91 10 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 1 5 7 91 0 1 10 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
21 20 73 71 68 66 63 61 55 53 50 48 45 43 31 29 20 39 21 39 40 36 11 17
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = otilde;
unicode = 245;
},
{
glyphname = oe;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(566,235,o),
(602,236,o),
(634,236,o),
(642,236,qs),
(696,236,o),
(795,236,o),
(828,237,qs),
(847,238,o),
(869,278,o),
(869,304,qs),
(869,324,o),
(846,383,o),
(792,438,o),
(703,477,o),
(637,477,qs),
(608,477,o),
(552,469,o),
(503,446,o),
(462,407,o),
(447,377,q),
(435,398,o),
(405,433,o),
(364,458,o),
(309,472,o),
(273,472,qs),
(213,472,o),
(121,435,o),
(58,370,o),
(26,281,o),
(26,228,qs),
(26,172,o),
(61,84,o),
(125,22,o),
(213,-11,o),
(267,-11,qs),
(287,-11,o),
(333,-6,o),
(380,13,o),
(424,49,o),
(442,80,q),
(471,28,o),
(562,-11,o),
(627,-11,qs),
(682,-11,o),
(763,10,o),
(820,43,o),
(855,84,o),
(876,123,o),
(883,156,o),
(883,166,qs),
(883,172,o),
(880,188,o),
(871,201,o),
(854,211,o),
(841,211,qs),
(827,211,o),
(795,196,o),
(795,171,qs),
(795,148,o),
(770,111,o),
(730,84,o),
(679,69,o),
(654,69,qs),
(620,69,o),
(570,92,o),
(537,128,o),
(520,173,o),
(520,196,qs),
(520,204,o),
(521,224,o),
(522,235,q),
(532,235,o)
);
},
{
closed = 1;
nodes = (
(364,372,o),
(402,332,o),
(424,273,o),
(424,236,qs),
(424,189,o),
(398,125,o),
(356,86,o),
(304,68,o),
(279,68,qs),
(252,68,o),
(196,88,o),
(151,129,o),
(122,191,o),
(122,233,qs),
(122,272,o),
(148,332,o),
(191,373,o),
(248,394,o),
(279,394,qs),
(310,394,o)
);
},
{
closed = 1;
nodes = (
(529,328,o),
(553,357,o),
(588,381,o),
(633,395,o),
(659,395,qs),
(682,395,o),
(723,383,o),
(754,365,o),
(772,343,o),
(772,332,qs),
(772,317,o),
(758,317,qs),
(526,313,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
51 1 9 7 31 1 0 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 6 0 6 1 0 104 13 1 9 11 1 6 1 9 6 91 10 12 2 7 7 4 83 5 1 4 4 23 67 8 1 0 0 2 83 3 1 2 2 24 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 6 0 6 1 0 104 5 1 4 10 12 2 7 9 4 7 91 13 1 9 11 1 6 1 9 6 91 8 1 0 0 2 83 3 1 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 6 0 6 1 0 104 0 5 4 7 5 79 0 4 10 12 2 7 9 4 7 91 13 1 9 11 1 6 1 9 6 91 8 1 0 0 2 83 3 1 2 2 24 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
93 92 73 72 0 0 100 98 92 104 93 104 83 81 72 91 73 91 0 71 0 63 40 40 38 42 38 39 14 21
CALL[ ]	/* CallFunction */";
};
width = 904;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(555,244,o),
(597,245,o),
(635,245,o),
(645,245,qs),
(693,245,o),
(785,245,o),
(816,246,qs),
(832,247,o),
(851,283,o),
(851,304,qs),
(851,324,o),
(829,383,o),
(779,438,o),
(698,477,o),
(640,477,qs),
(580,477,o),
(478,426,o),
(450,365,q),
(427,413,o),
(342,472,o),
(269,472,qs),
(213,472,o),
(124,435,o),
(62,371,o),
(29,281,o),
(29,229,qs),
(29,174,o),
(64,86,o),
(125,23,o),
(209,-11,o),
(259,-11,qs),
(283,-11,o),
(334,-2,o),
(383,22,o),
(428,62,o),
(445,94,q),
(471,40,o),
(564,-11,o),
(633,-11,qs),
(699,-11,o),
(788,29,o),
(842,87,o),
(865,150,o),
(865,174,qs),
(865,185,o),
(855,209,o),
(833,209,qs),
(821,209,o),
(808,202,o),
(802,191,o),
(801,180,o),
(801,177,qs),
(799,151,o),
(775,105,o),
(735,71,o),
(680,51,o),
(648,51,qs),
(610,51,o),
(555,78,o),
(519,122,o),
(502,177,o),
(502,204,qs),
(502,212,o),
(503,233,o),
(504,244,q),
(516,244,o)
);
},
{
closed = 1;
nodes = (
(362,387,o),
(404,340,o),
(427,273,o),
(427,232,qs),
(427,184,o),
(397,115,o),
(350,71,o),
(293,50,o),
(267,50,qs),
(239,50,o),
(181,72,o),
(134,117,o),
(104,186,o),
(104,232,qs),
(104,275,o),
(131,342,o),
(178,388,o),
(238,412,o),
(271,412,qs),
(305,412,o)
);
},
{
closed = 1;
nodes = (
(512,324,o),
(535,363,o),
(572,395,o),
(622,414,o),
(652,414,qs),
(681,414,o),
(727,397,o),
(759,370,o),
(776,338,o),
(776,324,qs),
(776,318,o),
(771,308,o),
(761,308,qs),
(508,304,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
47 1 9 7 29 13 2 0 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 6 0 6 1 0 104 13 1 9 11 1 6 1 9 6 91 10 12 2 7 7 4 83 5 1 4 4 23 67 8 1 0 0 2 83 3 1 2 2 24 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 6 0 6 1 0 104 5 1 4 10 12 2 7 9 4 7 91 13 1 9 11 1 6 1 9 6 91 8 1 0 0 2 83 3 1 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 6 0 6 1 0 104 0 5 4 7 5 79 0 4 10 12 2 7 9 4 7 91 13 1 9 11 1 6 1 9 6 91 8 1 0 0 2 83 3 1 2 2 24 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
87 86 67 66 0 0 95 93 86 99 87 99 77 75 66 85 67 85 0 65 0 57 36 40 38 38 40 39 14 21
CALL[ ]	/* CallFunction */";
};
width = 888;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(540,259,o),
(591,260,o),
(637,260,o),
(649,260,qs),
(689,260,o),
(764,260,o),
(790,261,qs),
(808,262,o),
(825,288,o),
(825,304,qs),
(825,324,o),
(804,383,o),
(761,438,o),
(693,477,o),
(645,477,qs),
(582,477,o),
(480,406,o),
(454,345,q),
(431,401,o),
(336,472,o),
(264,472,qs),
(213,472,o),
(129,435,o),
(67,371,o),
(33,282,o),
(33,230,qs),
(33,177,o),
(68,88,o),
(126,24,o),
(204,-11,o),
(248,-11,qs),
(276,-11,o),
(335,5,o),
(388,37,o),
(434,86,o),
(449,118,q),
(471,59,o),
(567,-11,o),
(642,-11,qs),
(684,-11,o),
(756,21,o),
(809,76,o),
(839,148,o),
(839,187,qs),
(839,205,o),
(822,205,qs),
(805,205,o),
(805,187,qs),
(805,155,o),
(784,95,o),
(743,49,o),
(681,21,o),
(640,21,qs),
(595,21,o),
(532,56,o),
(493,112,o),
(476,182,o),
(476,218,qs),
(476,227,o),
(477,248,o),
(478,259,q),
(492,259,o)
);
},
{
closed = 1;
nodes = (
(431,329,o),
(431,226,qs),
(431,174,o),
(395,97,o),
(341,46,o),
(277,20,o),
(250,20,qs),
(221,20,o),
(161,46,o),
(110,98,o),
(78,178,o),
(78,231,qs),
(78,282,o),
(108,360,o),
(158,414,o),
(223,442,o),
(259,442,qs),
(336,442,o)
);
},
{
closed = 1;
nodes = (
(487,317,o),
(510,372,o),
(549,417,o),
(604,445,o),
(642,445,qs),
(679,445,o),
(732,418,o),
(766,378,o),
(782,331,o),
(782,311,qs),
(782,293,o),
(765,293,qs),
(482,289,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
43 1 9 7 25 1 0 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 6 0 6 1 0 104 13 1 9 11 1 6 1 9 6 91 10 12 2 7 7 4 83 5 1 4 4 23 67 8 1 0 0 2 83 3 1 2 2 24 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 6 0 6 1 0 104 5 1 4 10 12 2 7 9 4 7 91 13 1 9 11 1 6 1 9 6 91 8 1 0 0 2 83 3 1 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 6 0 6 1 0 104 0 5 4 7 5 79 0 4 10 12 2 7 9 4 7 91 13 1 9 11 1 6 1 9 6 91 8 1 0 0 2 83 3 1 2 2 24 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
81 80 63 62 0 0 88 86 80 92 81 92 73 71 62 79 63 79 0 61 0 53 36 40 38 37 37 39 14 21
CALL[ ]	/* CallFunction */";
};
width = 865;
}
);
note = oe;
unicode = 339;
},
{
glyphname = p;
kernLeft = p;
kernRight = c_p;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(182,436,o),
(171,449,o),
(157,449,qs),
(94,449,o),
(22,442,o),
(-13,431,o),
(-22,416,o),
(-22,408,qs),
(-22,399,o),
(-11,387,o),
(6,380,o),
(24,377,o),
(30,377,qs),
(56,377,ls),
(80,377,o),
(90,369,o),
(90,355,qs),
(90,334,o),
(91,295,o),
(93,244,o),
(94,175,o),
(94,124,qs),
(94,80,o),
(93,18,o),
(92,-28,o),
(91,-66,o),
(91,-86,qs),
(91,-113,o),
(87,-125,o),
(80,-126,qs),
(53,-132,o),
(17,-146,o),
(17,-166,qs),
(17,-186,o),
(42,-202,o),
(62,-202,qs),
(267,-202,ls),
(287,-202,o),
(314,-189,o),
(314,-170,qs),
(314,-146,o),
(273,-126,o),
(247,-126,qs),
(182,-126,l),
(182,68,l),
(189,55,o),
(212,27,o),
(248,4,o),
(297,-11,o),
(330,-11,qs),
(356,-11,o),
(427,13,o),
(491,71,o),
(536,166,o),
(536,238,qs),
(536,279,o),
(518,362,o),
(476,429,o),
(407,471,o),
(356,471,qs),
(322,471,o),
(269,452,o),
(227,418,o),
(195,373,o),
(182,346,q),
(182,413,ls)
);
},
{
closed = 1;
nodes = (
(205,320,o),
(245,366,o),
(296,391,o),
(323,391,qs),
(356,391,o),
(402,365,o),
(429,323,o),
(441,268,o),
(441,240,qs),
(441,187,o),
(414,120,o),
(375,81,o),
(330,67,o),
(312,67,qs),
(250,67,o),
(181,153,o),
(181,219,qs),
(181,257,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
20 0 2 6 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 5 5 15 67 7 1 4 4 0 83 0 0 0 23 67 0 6 6 1 83 0 1 1 24 67 0 2 2 3 84 0 3 3 17 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 4 7 6 7 4 6 104 0 5 5 15 67 0 7 7 0 83 0 0 0 23 67 0 6 6 1 83 0 1 1 24 67 0 2 2 3 84 0 3 3 17 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 5 0 7 0 5 7 104 0 4 7 6 7 4 6 104 0 0 0 7 4 0 7 91 0 2 0 3 2 3 88 0 6 6 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
80 78 70 68 63 61 53 50 52 37 40 36 8 19
CALL[ ]	/* CallFunction */";
};
width = 564;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(177,436,o),
(166,449,o),
(152,449,qs),
(102,449,o),
(36,445,o),
(-4,438,o),
(-20,426,o),
(-20,418,qs),
(-20,411,o),
(-9,403,o),
(7,398,o),
(24,397,o),
(30,397,qs),
(72,397,ls),
(93,397,o),
(106,391,o),
(106,375,qs),
(106,354,o),
(107,309,o),
(109,250,o),
(110,175,o),
(110,124,qs),
(110,80,o),
(109,18,o),
(108,-28,o),
(107,-66,o),
(107,-86,qs),
(107,-107,o),
(106,-130,o),
(100,-140,o),
(87,-144,o),
(75,-145,qs),
(49,-148,o),
(19,-165,o),
(19,-180,qs),
(19,-196,o),
(41,-202,o),
(47,-202,qs),
(272,-202,ls),
(280,-202,o),
(302,-193,o),
(302,-179,qs),
(302,-162,o),
(268,-144,o),
(242,-144,qs),
(177,-144,l),
(177,68,l),
(184,55,o),
(207,27,o),
(243,4,o),
(292,-11,o),
(325,-11,qs),
(351,-11,o),
(422,13,o),
(486,71,o),
(531,166,o),
(531,238,qs),
(531,274,o),
(516,356,o),
(476,425,o),
(404,471,o),
(347,471,qs),
(297,471,o),
(203,407,o),
(177,346,q),
(177,413,ls)
);
},
{
closed = 1;
nodes = (
(208,339,o),
(257,386,o),
(316,410,o),
(343,410,qs),
(380,410,o),
(425,375,o),
(449,324,o),
(457,264,o),
(457,240,qs),
(457,183,o),
(429,109,o),
(388,66,o),
(341,49,o),
(322,49,qs),
(278,49,o),
(222,77,o),
(189,124,o),
(176,185,o),
(176,219,qs),
(176,267,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
18 0 2 6 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 7 7 0 83 0 0 0 23 67 0 4 4 5 83 0 5 5 15 67 0 6 6 1 83 0 1 1 24 67 0 2 2 3 83 0 3 3 17 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 7 4 0 7 91 0 5 0 4 6 5 4 91 0 6 6 1 83 0 1 1 24 67 0 2 2 3 83 0 3 3 17 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 0 0 7 4 0 7 91 0 5 0 4 6 5 4 91 0 2 0 3 2 3 87 0 6 6 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
82 80 72 70 63 60 54 50 52 37 40 34 8 19
CALL[ ]	/* CallFunction */";
};
width = 562;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(170,436,o),
(159,449,o),
(145,449,qs),
(114,449,o),
(55,448,o),
(10,443,o),
(-17,434,o),
(-17,427,qs),
(-17,420,o),
(12,417,o),
(23,417,qs),
(95,417,ls),
(116,417,o),
(129,405,o),
(129,375,qs),
(129,354,o),
(130,309,o),
(132,250,o),
(133,175,o),
(133,124,qs),
(133,80,o),
(132,18,o),
(131,-28,o),
(130,-66,o),
(130,-86,qs),
(130,-118,o),
(128,-153,o),
(116,-169,o),
(91,-174,o),
(68,-175,qs),
(42,-177,o),
(22,-184,o),
(22,-190,qs),
(22,-198,o),
(34,-202,o),
(40,-202,qs),
(265,-202,ls),
(273,-202,o),
(285,-196,o),
(285,-189,qs),
(285,-184,o),
(261,-174,o),
(235,-174,qs),
(170,-174,l),
(170,68,l),
(177,55,o),
(200,27,o),
(236,4,o),
(285,-11,o),
(318,-11,qs),
(344,-11,o),
(415,13,o),
(479,71,o),
(524,166,o),
(524,238,qs),
(524,274,o),
(509,356,o),
(469,425,o),
(397,471,o),
(340,471,qs),
(290,471,o),
(196,407,o),
(170,346,q),
(170,413,ls)
);
},
{
closed = 1;
nodes = (
(201,357,o),
(250,413,o),
(309,440,o),
(336,440,qs),
(382,440,o),
(439,399,o),
(470,339,o),
(480,269,o),
(480,240,qs),
(480,174,o),
(446,88,o),
(395,38,o),
(338,19,o),
(315,19,qs),
(271,19,o),
(215,52,o),
(182,107,o),
(169,179,o),
(169,219,qs),
(169,274,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
18 0 2 7 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 8 8 0 83 0 0 0 23 67 0 5 5 6 83 0 6 6 15 67 0 7 7 1 83 0 1 1 24 67 4 1 2 2 3 83 0 3 3 17 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 0 8 5 0 8 91 0 6 0 5 7 6 5 91 0 7 7 1 83 0 1 1 24 67 4 1 2 2 3 83 0 3 3 17 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 0 8 5 0 8 91 0 6 0 5 7 6 5 91 4 1 2 0 3 2 3 87 0 7 7 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
80 78 70 68 61 58 53 50 21 52 37 40 34 9 20
CALL[ ]	/* CallFunction */";
};
width = 559;
}
);
note = p;
unicode = 112;
},
{
glyphname = thorn;
kernLeft = b;
kernRight = b;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(155,764,o),
(150,797,o),
(143,814,o),
(133,818,o),
(129,818,qs),
(39,818,ls),
(26,818,o),
(-5,814,o),
(-33,805,o),
(-52,788,o),
(-52,775,qs),
(-52,763,o),
(-42,749,o),
(-26,741,o),
(-7,739,o),
(1,739,qs),
(25,739,ls),
(47,739,o),
(63,725,o),
(63,712,qs),
(63,700,o),
(63,655,o),
(64,597,o),
(64,531,o),
(64,498,qs),
(64,289,o),
(55,-10,o),
(55,-101,qs),
(55,-139,o),
(36,-159,o),
(24,-159,qs),
(-14,-159,o),
(-14,-192,qs),
(-14,-218,o),
(17,-235,o),
(45,-235,qs),
(50,-235,o),
(77,-234,o),
(105,-233,o),
(127,-232,o),
(128,-232,qs),
(129,-232,o),
(162,-233,o),
(202,-234,o),
(238,-235,o),
(242,-235,qs),
(254,-235,o),
(283,-219,o),
(283,-199,qs),
(283,-186,o),
(268,-170,o),
(245,-161,o),
(220,-158,o),
(211,-158,qs),
(146,-158,l),
(146,36,l),
(154,29,o),
(172,13,o),
(198,0,o),
(237,-9,o),
(267,-9,qs),
(314,-9,o),
(400,14,o),
(466,67,o),
(505,155,o),
(505,220,qs),
(505,258,o),
(488,342,o),
(443,412,o),
(363,458,o),
(301,458,qs),
(259,458,o),
(183,414,o),
(155,366,q),
(155,734,ls)
);
},
{
closed = 1;
nodes = (
(171,308,o),
(206,353,o),
(257,379,o),
(291,379,qs),
(317,379,o),
(361,362,o),
(393,323,o),
(411,262,o),
(411,218,qs),
(411,170,o),
(384,111,o),
(342,80,o),
(292,70,o),
(269,70,qs),
(248,70,o),
(207,86,o),
(174,121,o),
(154,175,o),
(154,214,qs),
(154,248,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 1 7 8 18 1 1 7 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 5 5 6 83 0 6 6 14 67 0 8 8 0 83 0 0 0 23 67 0 7 7 1 83 0 1 1 24 67 4 1 2 2 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 8 7 0 8 91 4 1 2 0 3 2 3 87 0 5 5 6 83 0 6 6 14 67 0 7 7 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
40 41 56 60 35 198 37 40 34 9 24
CALL[ ]	/* CallFunction */";
};
width = 533;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(136,775,o),
(131,802,o),
(124,815,o),
(114,818,o),
(110,818,qs),
(20,818,ls),
(18,818,o),
(-9,817,o),
(-39,811,o),
(-64,799,o),
(-64,788,qs),
(-64,777,o),
(-53,764,o),
(-36,758,o),
(-16,757,o),
(-8,757,qs),
(20,757,ls),
(65,757,o),
(65,730,qs),
(65,717,o),
(65,668,o),
(66,605,o),
(66,533,o),
(66,498,qs),
(66,283,o),
(57,-25,o),
(57,-119,qs),
(57,-141,o),
(50,-164,o),
(39,-173,o),
(28,-175,o),
(24,-176,q),
(19,-181,o),
(2,-183,o),
(-14,-186,o),
(-26,-196,o),
(-26,-209,qs),
(-26,-223,o),
(-2,-235,o),
(26,-235,qs),
(31,-235,o),
(58,-234,o),
(86,-233,o),
(108,-232,o),
(109,-232,qs),
(110,-232,o),
(143,-233,o),
(183,-234,o),
(219,-235,o),
(223,-235,qs),
(224,-235,o),
(235,-232,o),
(247,-226,o),
(257,-216,o),
(257,-208,qs),
(257,-196,o),
(238,-183,o),
(215,-177,o),
(194,-176,o),
(192,-176,qs),
(127,-176,l),
(127,48,l),
(135,39,o),
(155,18,o),
(184,2,o),
(225,-9,o),
(255,-9,qs),
(297,-9,o),
(380,14,o),
(445,67,o),
(486,155,o),
(486,220,qs),
(486,258,o),
(469,342,o),
(425,412,o),
(351,458,o),
(294,458,qs),
(246,458,o),
(164,406,o),
(136,354,q),
(136,752,ls)
);
},
{
closed = 1;
nodes = (
(157,310,o),
(196,366,o),
(251,397,o),
(285,397,qs),
(309,397,o),
(355,380,o),
(391,340,o),
(413,274,o),
(413,225,qs),
(413,171,o),
(382,103,o),
(335,66,o),
(280,52,o),
(256,52,qs),
(232,52,o),
(189,66,o),
(155,98,o),
(135,147,o),
(135,182,qs),
(135,230,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 1 6 7 18 1 1 6 48 1 2 1 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 4 5 83 0 5 5 14 67 0 7 7 0 83 0 0 0 23 67 0 6 6 1 83 0 1 1 24 67 0 2 2 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 0 0 7 6 0 7 91 0 4 4 5 83 0 5 5 14 67 0 6 6 1 83 0 1 1 24 67 0 2 2 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 0 0 7 6 0 7 91 0 2 0 3 2 3 87 0 4 4 5 83 0 5 5 14 67 0 6 6 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
97 95 87 85 76 72 66 62 199 53 40 34 8 19
CALL[ ]	/* CallFunction */";
};
width = 517;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(109,808,o),
(92,818,o),
(83,818,qs),
(-7,818,ls),
(-9,818,o),
(-32,817,o),
(-59,814,o),
(-81,806,o),
(-81,799,qs),
(-81,791,o),
(-52,787,o),
(-35,787,qs),
(23,787,ls),
(45,787,o),
(68,775,o),
(68,760,qs),
(68,745,o),
(68,689,o),
(69,618,o),
(69,538,o),
(69,498,qs),
(69,271,o),
(60,-50,o),
(60,-149,qs),
(60,-171,o),
(54,-194,o),
(44,-203,o),
(33,-205,o),
(27,-206,qs),
(18,-208,o),
(-6,-209,o),
(-28,-211,o),
(-43,-217,o),
(-43,-224,qs),
(-43,-229,o),
(-29,-235,o),
(-1,-235,qs),
(4,-235,o),
(31,-234,o),
(59,-233,o),
(81,-232,o),
(82,-232,qs),
(83,-232,o),
(116,-233,o),
(156,-234,o),
(192,-235,o),
(196,-235,qs),
(197,-235,o),
(204,-235,o),
(213,-232,o),
(220,-228,o),
(220,-223,qs),
(220,-217,o),
(204,-211,o),
(185,-207,o),
(167,-206,o),
(165,-206,qs),
(100,-206,l),
(100,68,l),
(108,54,o),
(131,27,o),
(164,5,o),
(208,-9,o),
(238,-9,qs),
(273,-9,o),
(351,14,o),
(416,67,o),
(459,155,o),
(459,220,qs),
(459,258,o),
(441,342,o),
(401,412,o),
(333,458,o),
(284,458,qs),
(227,458,o),
(137,394,o),
(109,334,q),
(109,782,ls)
);
},
{
closed = 1;
nodes = (
(136,322,o),
(182,389,o),
(244,427,o),
(277,427,qs),
(298,427,o),
(346,407,o),
(388,360,o),
(416,283,o),
(416,225,qs),
(416,162,o),
(379,82,o),
(325,38,o),
(263,22,o),
(238,22,qs),
(198,22,o),
(147,50,o),
(119,96,o),
(108,153,o),
(108,182,qs),
(108,233,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
18 0 2 7 8 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 5 5 6 83 0 6 6 14 67 0 8 8 0 83 0 0 0 23 67 0 7 7 1 83 0 1 1 24 67 4 1 2 2 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 0 0 8 7 0 8 91 0 5 5 6 83 0 6 6 14 67 0 7 7 1 83 0 1 1 24 67 4 1 2 2 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 8 7 0 8 91 4 1 2 0 3 2 3 87 0 5 5 6 83 0 6 6 14 67 0 7 7 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
94 92 84 82 75 71 66 63 21 214 53 40 34 9 20
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = thorn;
unicode = 254;
},
{
glyphname = q;
kernLeft = q;
kernRight = q;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(298,454,o),
(238,454,qs),
(202,454,o),
(128,426,o),
(67,368,o),
(28,278,o),
(28,217,qs),
(28,168,o),
(54,85,o),
(104,24,o),
(175,-10,o),
(219,-10,qs),
(278,-10,o),
(356,44,o),
(370,81,q),
(370,-50,ls),
(370,-85,o),
(366,-111,o),
(359,-116,qs),
(357,-118,o),
(349,-121,o),
(334,-124,o),
(308,-126,o),
(289,-127,qs),
(263,-128,o),
(238,-145,o),
(238,-165,qs),
(238,-182,o),
(261,-203,o),
(278,-203,qs),
(502,-203,ls),
(523,-203,o),
(539,-176,o),
(539,-162,qs),
(539,-150,o),
(516,-126,o),
(487,-126,qs),
(462,-126,l),
(462,-118,o),
(461,-73,o),
(461,-21,o),
(460,26,o),
(460,37,qs),
(460,56,o),
(460,117,o),
(459,184,o),
(459,248,o),
(459,270,qs),
(459,283,o),
(469,313,o),
(477,327,qs),
(485,340,o),
(506,364,o),
(519,376,qs),
(529,385,o),
(544,407,o),
(544,423,qs),
(544,457,o),
(510,457,qs),
(494,457,o),
(469,442,o),
(447,418,o),
(426,387,o),
(413,372,q),
(378,408,o)
);
},
{
closed = 1;
nodes = (
(169,94,o),
(138,136,o),
(122,188,o),
(122,214,qs),
(122,242,o),
(136,300,o),
(166,346,o),
(211,376,o),
(243,376,qs),
(280,376,o),
(332,353,o),
(363,315,o),
(377,269,o),
(377,245,qs),
(377,210,o),
(359,146,o),
(325,97,o),
(277,68,o),
(246,68,qs),
(216,68,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
49 0 2 6 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 7 7 0 83 5 1 0 0 23 67 8 1 6 6 4 83 0 4 4 24 67 3 1 1 1 2 84 0 2 2 17 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
5 1 0 0 7 6 0 7 91 3 1 1 0 2 1 2 88 8 1 6 6 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
66 65 76 74 65 84 66 84 63 61 53 51 41 39 35 32 28 26 36 9 16
CALL[ ]	/* CallFunction */";
};
width = 537;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(362,416,o),
(321,439,o),
(271,453,o),
(241,453,qs),
(205,453,o),
(131,425,o),
(70,367,o),
(31,277,o),
(31,216,qs),
(31,167,o),
(57,84,o),
(107,23,o),
(178,-11,o),
(222,-11,qs),
(281,-11,o),
(359,43,o),
(373,80,q),
(373,-68,ls),
(373,-103,o),
(369,-129,o),
(362,-134,qs),
(355,-139,o),
(326,-143,o),
(292,-145,qs),
(272,-146,o),
(248,-158,o),
(248,-174,qs),
(248,-187,o),
(266,-203,o),
(281,-203,qs),
(496,-203,ls),
(514,-203,o),
(529,-184,o),
(529,-173,qs),
(529,-163,o),
(506,-144,o),
(477,-144,qs),
(444,-144,l),
(444,-135,o),
(443,-85,o),
(443,-28,o),
(442,24,o),
(442,36,qs),
(442,55,o),
(442,119,o),
(443,190,o),
(444,258,o),
(444,281,qs),
(444,295,o),
(445,328,o),
(450,337,qs),
(456,350,o),
(482,355,o),
(505,357,qs),
(518,358,o),
(532,374,o),
(532,385,qs),
(532,394,o),
(518,411,o),
(501,411,qs),
(475,411,o),
(429,393,o),
(406,371,q),
(394,387,o)
);
},
{
closed = 1;
nodes = (
(153,78,o),
(120,125,o),
(104,183,o),
(104,213,qs),
(104,241,o),
(118,304,o),
(151,358,o),
(205,393,o),
(244,393,qs),
(284,393,o),
(338,365,o),
(370,322,o),
(383,268,o),
(383,241,qs),
(383,206,o),
(366,138,o),
(331,83,o),
(277,49,o),
(240,49,qs),
(204,49,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
46 0 2 6 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 0 5 7 5 0 7 104 0 7 7 5 83 0 5 5 15 67 8 1 6 6 4 83 0 4 4 24 67 3 1 1 1 2 84 0 2 2 17 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 0 5 7 5 0 7 104 0 5 0 7 6 5 7 91 8 1 6 6 4 83 0 4 4 24 67 3 1 1 1 2 84 0 2 2 17 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 0 5 7 5 0 7 104 0 5 0 7 6 5 7 91 3 1 1 0 2 1 2 88 8 1 6 6 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
65 64 75 73 64 83 65 83 60 58 50 48 40 38 34 31 27 25 34 9 16
CALL[ ]	/* CallFunction */";
};
width = 524;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(366,412,o),
(326,436,o),
(275,453,o),
(245,453,qs),
(209,453,o),
(135,425,o),
(74,367,o),
(35,277,o),
(35,216,qs),
(35,167,o),
(61,84,o),
(111,23,o),
(182,-11,o),
(226,-11,qs),
(285,-11,o),
(363,43,o),
(377,80,q),
(377,-98,ls),
(377,-133,o),
(373,-159,o),
(366,-164,qs),
(359,-169,o),
(330,-173,o),
(296,-175,qs),
(283,-176,o),
(262,-180,o),
(262,-189,qs),
(262,-203,o),
(285,-203,qs),
(496,-203,ls),
(523,-203,o),
(523,-191,qs),
(523,-185,o),
(500,-174,o),
(471,-174,qs),
(418,-174,l),
(418,-164,o),
(417,-105,o),
(417,-39,o),
(416,22,o),
(416,36,qs),
(416,57,o),
(418,126,o),
(420,203,o),
(422,276,o),
(423,301,qs),
(424,323,o),
(427,342,o),
(435,352,qs),
(442,361,o),
(465,370,o),
(487,374,o),
(506,375,o),
(510,376,qs),
(526,379,o),
(526,391,qs),
(526,399,o),
(515,411,o),
(500,411,qs),
(478,411,o),
(421,385,o),
(396,371,q),
(392,383,o)
);
},
{
closed = 1;
nodes = (
(130,53,o),
(94,108,o),
(78,178,o),
(78,213,qs),
(78,245,o),
(93,319,o),
(130,382,o),
(195,423,o),
(246,423,qs),
(291,423,o),
(346,390,o),
(376,338,o),
(387,273,o),
(387,241,qs),
(387,201,o),
(373,122,o),
(337,59,o),
(277,19,o),
(231,19,qs),
(188,19,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
45 0 2 7 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 0 0 1 7 0 1 91 0 8 8 6 83 0 6 6 15 67 9 1 7 7 5 83 0 5 5 24 67 4 1 2 2 3 83 0 3 3 17 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 6 0 8 0 6 8 91 0 0 0 1 7 0 1 91 9 1 7 7 5 83 0 5 5 24 67 4 1 2 2 3 83 0 3 3 17 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 6 0 8 0 6 8 91 0 0 0 1 7 0 1 91 4 1 2 0 3 2 3 87 9 1 7 7 5 83 0 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
64 63 74 72 63 82 64 82 59 57 49 47 39 38 34 31 28 26 21 34 10 17
CALL[ ]	/* CallFunction */";
};
width = 518;
}
);
note = q;
unicode = 113;
},
{
glyphname = r;
kernLeft = r;
kernRight = r;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(412,400,o),
(375,427,o),
(331,439,o),
(312,439,qs),
(272,439,o),
(211,398,o),
(188,364,q),
(188,413,ls),
(188,439,o),
(170,451,o),
(144,451,qs),
(61,451,o),
(-6,433,o),
(-6,412,qs),
(-6,402,o),
(5,389,o),
(21,382,o),
(41,379,o),
(49,379,qs),
(79,379,ls),
(94,379,o),
(94,365,qs),
(94,300,o),
(94,216,o),
(94,162,o),
(93,130,o),
(93,118,qs),
(92,96,o),
(67,83,o),
(51,79,qs),
(34,75,o),
(22,55,o),
(22,42,qs),
(22,27,o),
(39,0,o),
(63,0,qs),
(78,0,o),
(101,1,o),
(123,2,o),
(147,3,o),
(163,3,qs),
(193,3,o),
(256,0,o),
(288,0,qs),
(325,0,o),
(325,35,qs),
(325,58,o),
(283,79,o),
(231,79,qs),
(183,79,l),
(183,195,ls),
(183,240,o),
(209,305,o),
(248,349,o),
(293,370,o),
(311,370,qs),
(330,370,o),
(356,352,o),
(356,335,qs),
(356,322,o),
(340,308,o),
(320,296,o),
(304,280,o),
(304,264,qs),
(304,241,o),
(338,222,o),
(358,222,qs),
(380,222,o),
(410,241,o),
(428,270,o),
(436,306,o),
(436,323,qs),
(436,356,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
65 1 0 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 1 2 1 0 2 104 4 1 1 1 5 83 6 1 5 5 15 67 0 2 2 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 0 1 2 1 0 2 104 0 5 6 1 5 79 0 6 4 1 1 0 6 1 91 0 2 2 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 1 2 1 0 2 104 0 5 0 4 1 5 4 91 0 6 0 1 0 6 1 91 0 2 2 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
37 38 62 163 37 41 36 7 22
CALL[ ]	/* CallFunction */";
};
width = 453;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(398,390,o),
(368,417,o),
(327,434,o),
(302,434,qs),
(267,434,o),
(205,399,o),
(181,364,q),
(181,413,ls),
(181,439,o),
(163,451,o),
(137,451,qs),
(119,451,o),
(69,449,o),
(25,443,o),
(-6,432,o),
(-6,423,qs),
(-6,415,o),
(19,400,o),
(44,400,qs),
(93,400,ls),
(108,400,o),
(108,386,qs),
(108,314,o),
(107,216,o),
(105,149,o),
(104,108,o),
(103,95,qs),
(102,81,o),
(87,64,o),
(63,61,qs),
(46,59,o),
(31,39,o),
(31,28,qs),
(31,17,o),
(47,0,o),
(63,0,qs),
(77,0,o),
(98,1,o),
(119,2,o),
(141,3,o),
(156,3,qs),
(170,3,o),
(206,2,o),
(243,1,o),
(279,0,o),
(294,0,qs),
(324,0,o),
(324,27,qs),
(324,44,o),
(282,61,o),
(230,61,qs),
(176,61,l),
(176,213,ls),
(176,258,o),
(200,319,o),
(236,357,o),
(278,373,o),
(296,373,qs),
(316,373,o),
(342,358,o),
(342,339,qs),
(342,328,o),
(329,320,o),
(312,313,o),
(299,300,o),
(299,285,qs),
(299,265,o),
(328,246,o),
(345,246,qs),
(365,246,o),
(391,262,o),
(407,287,o),
(414,319,o),
(414,336,qs),
(414,355,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
67 1 0 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 0 1 2 1 0 2 104 0 4 4 5 83 0 5 5 15 67 0 1 1 6 83 0 6 6 15 67 0 2 2 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 1 2 1 0 2 104 0 5 0 4 1 5 4 91 0 6 0 1 0 6 1 91 0 2 2 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
37 53 62 195 37 41 36 7 22
CALL[ ]	/* CallFunction */";
};
width = 429;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(329,434,o),
(292,434,qs),
(257,434,o),
(195,399,o),
(171,364,q),
(171,413,ls),
(171,439,o),
(153,451,o),
(127,451,qs),
(109,451,o),
(62,449,o),
(22,444,o),
(-6,437,o),
(-6,433,qs),
(-6,430,o),
(4,420,o),
(14,420,qs),
(113,420,ls),
(128,420,o),
(128,406,qs),
(128,322,o),
(127,204,o),
(124,123,o),
(121,73,o),
(118,57,qs),
(115,40,o),
(107,32,o),
(89,31,qs),
(63,29,o),
(31,19,o),
(31,13,qs),
(31,8,o),
(45,0,o),
(53,0,qs),
(78,0,o),
(120,3,o),
(146,3,qs),
(159,3,o),
(195,2,o),
(233,1,o),
(270,0,o),
(284,0,qs),
(291,0,o),
(304,7,o),
(304,13,qs),
(304,21,o),
(262,31,o),
(210,31,qs),
(166,31,l),
(166,243,ls),
(166,288,o),
(190,349,o),
(226,387,o),
(268,403,o),
(286,403,qs),
(306,403,o),
(332,386,o),
(332,369,qs),
(332,357,o),
(319,345,o),
(304,335,o),
(291,321,o),
(291,308,qs),
(291,294,o),
(308,276,o),
(325,276,qs),
(340,276,o),
(359,290,o),
(370,312,o),
(374,337,o),
(374,349,qs),
(374,394,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
66 1 0 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 0 1 2 1 0 96 0 6 6 7 83 0 7 7 15 67 0 1 1 8 83 0 8 8 15 67 5 1 2 2 3 83 4 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 0 1 2 1 0 2 104 0 6 6 7 83 0 7 7 15 67 0 1 1 8 83 0 8 8 15 67 5 1 2 2 3 83 4 1 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 0 1 2 1 0 2 104 0 7 0 6 1 7 6 91 0 8 0 1 0 8 1 91 5 1 2 2 3 83 4 1 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
37 53 56 21 33 116 37 41 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 395;
}
);
note = r;
unicode = 114;
},
{
glyphname = racute;
kernLeft = r;
kernRight = r;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(308,687,o),
(276,688,qs),
(257,688,o),
(214,639,o),
(178,578,o),
(154,525,o),
(154,522,qs),
(154,511,o),
(180,500,o),
(191,500,qs),
(200,500,o),
(230,516,o),
(264,541,o),
(300,573,o),
(328,604,o),
(346,631,o),
(346,640,qs),
(346,659,o)
);
},
{
closed = 1;
nodes = (
(412,400,o),
(375,427,o),
(331,439,o),
(312,439,qs),
(272,439,o),
(211,398,o),
(188,364,q),
(188,413,ls),
(188,439,o),
(170,451,o),
(144,451,qs),
(61,451,o),
(-6,433,o),
(-6,412,qs),
(-6,402,o),
(5,389,o),
(21,382,o),
(41,379,o),
(49,379,qs),
(79,379,ls),
(94,379,o),
(94,365,qs),
(94,300,o),
(94,216,o),
(94,162,o),
(93,130,o),
(93,118,qs),
(92,96,o),
(67,83,o),
(51,79,qs),
(34,75,o),
(22,55,o),
(22,42,qs),
(22,27,o),
(39,0,o),
(63,0,qs),
(78,0,o),
(101,1,o),
(123,2,o),
(147,3,o),
(163,3,qs),
(193,3,o),
(256,0,o),
(288,0,qs),
(325,0,o),
(325,35,qs),
(325,58,o),
(283,79,o),
(231,79,qs),
(183,79,l),
(183,195,ls),
(183,240,o),
(209,305,o),
(248,349,o),
(293,370,o),
(311,370,qs),
(330,370,o),
(356,352,o),
(356,335,qs),
(356,322,o),
(340,308,o),
(320,296,o),
(304,280,o),
(304,264,qs),
(304,241,o),
(338,222,o),
(358,222,qs),
(380,222,o),
(410,241,o),
(428,270,o),
(436,306,o),
(436,323,qs),
(436,356,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
83 1 2 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 7 0 106 0 2 3 4 3 2 4 104 6 1 3 3 7 83 8 1 7 7 15 67 0 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 0 7 0 106 0 2 3 4 3 2 4 104 0 7 8 3 7 79 0 8 6 1 3 2 8 3 92 0 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 0 0 7 0 106 0 2 3 4 3 2 4 104 0 7 0 6 3 7 6 91 0 8 0 3 2 8 3 92 0 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
37 38 62 163 37 41 38 38 38 9 24
CALL[ ]	/* CallFunction */";
};
width = 453;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(286,670,o),
(263,670,qs),
(253,670,o),
(230,649,o),
(205,618,o),
(181,581,o),
(163,548,o),
(152,524,o),
(152,522,qs),
(152,512,o),
(169,504,o),
(177,504,qs),
(188,504,o),
(233,536,o),
(278,578,o),
(312,621,o),
(312,632,qs),
(312,649,o)
);
},
{
closed = 1;
nodes = (
(398,390,o),
(368,417,o),
(327,434,o),
(302,434,qs),
(267,434,o),
(205,399,o),
(181,364,q),
(181,413,ls),
(181,439,o),
(163,451,o),
(137,451,qs),
(119,451,o),
(69,449,o),
(25,443,o),
(-6,432,o),
(-6,423,qs),
(-6,415,o),
(19,400,o),
(44,400,qs),
(93,400,ls),
(108,400,o),
(108,386,qs),
(108,314,o),
(107,216,o),
(105,149,o),
(104,108,o),
(103,95,qs),
(102,81,o),
(87,64,o),
(63,61,qs),
(46,59,o),
(31,39,o),
(31,28,qs),
(31,17,o),
(47,0,o),
(63,0,qs),
(77,0,o),
(98,1,o),
(119,2,o),
(141,3,o),
(156,3,qs),
(170,3,o),
(206,2,o),
(243,1,o),
(279,0,o),
(294,0,qs),
(324,0,o),
(324,27,qs),
(324,44,o),
(282,61,o),
(230,61,qs),
(176,61,l),
(176,213,ls),
(176,258,o),
(200,319,o),
(236,357,o),
(278,373,o),
(296,373,qs),
(316,373,o),
(342,358,o),
(342,339,qs),
(342,328,o),
(329,320,o),
(312,313,o),
(299,300,o),
(299,285,qs),
(299,265,o),
(328,246,o),
(345,246,qs),
(365,246,o),
(391,262,o),
(407,287,o),
(414,319,o),
(414,336,qs),
(414,355,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
85 1 2 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 7 0 106 0 2 3 4 3 2 4 104 0 6 6 7 83 0 7 7 15 67 0 3 3 8 83 0 8 8 15 67 0 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 0 0 7 0 106 0 2 3 4 3 2 4 104 0 7 0 6 3 7 6 91 0 8 0 3 2 8 3 92 0 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
37 53 62 195 37 41 38 40 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 429;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(329,434,o),
(292,434,qs),
(257,434,o),
(195,399,o),
(171,364,q),
(171,413,ls),
(171,439,o),
(153,451,o),
(127,451,qs),
(109,451,o),
(62,449,o),
(22,444,o),
(-6,437,o),
(-6,433,qs),
(-6,430,o),
(4,420,o),
(14,420,qs),
(113,420,ls),
(128,420,o),
(128,406,qs),
(128,322,o),
(127,204,o),
(124,123,o),
(121,73,o),
(118,57,qs),
(115,40,o),
(107,32,o),
(89,31,qs),
(63,29,o),
(31,19,o),
(31,13,qs),
(31,8,o),
(45,0,o),
(53,0,qs),
(78,0,o),
(120,3,o),
(146,3,qs),
(159,3,o),
(195,2,o),
(233,1,o),
(270,0,o),
(284,0,qs),
(291,0,o),
(304,7,o),
(304,13,qs),
(304,21,o),
(262,31,o),
(210,31,qs),
(166,31,l),
(166,243,ls),
(166,288,o),
(190,349,o),
(226,387,o),
(268,403,o),
(286,403,qs),
(306,403,o),
(332,386,o),
(332,369,qs),
(332,357,o),
(319,345,o),
(304,335,o),
(291,321,o),
(291,308,qs),
(291,294,o),
(308,276,o),
(325,276,qs),
(340,276,o),
(359,290,o),
(370,312,o),
(374,337,o),
(374,349,qs),
(374,394,o)
);
},
{
closed = 1;
nodes = (
(253,640,o),
(245,640,qs),
(238,640,o),
(206,610,o),
(174,570,o),
(150,530,o),
(150,521,qs),
(150,510,o),
(158,510,qs),
(165,510,o),
(200,538,o),
(236,574,o),
(264,610,o),
(264,618,qs),
(264,632,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
66 1 0 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 10 9 10 106 0 9 7 9 106 0 0 1 2 1 0 96 0 6 6 7 83 0 7 7 15 67 0 1 1 8 83 0 8 8 15 67 5 1 2 2 3 84 4 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 10 9 10 106 0 9 7 9 106 0 0 1 2 1 0 2 104 0 6 6 7 83 0 7 7 15 67 0 1 1 8 83 0 8 8 15 67 5 1 2 2 3 84 4 1 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 10 9 10 106 0 9 7 9 106 0 0 1 2 1 0 2 104 0 7 0 6 1 7 6 91 0 8 0 1 0 8 1 91 5 1 2 2 3 84 4 1 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
85 83 78 76 37 53 56 21 33 116 37 41 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 395;
}
);
note = racute;
unicode = 341;
},
{
glyphname = rcaron;
kernLeft = r;
kernRight = r;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(289,627,o),
(255,608,o),
(217,587,o),
(200,578,q),
(183,587,o),
(145,608,o),
(112,627,o),
(86,640,o),
(81,640,qs),
(75,640,o),
(68,631,o),
(68,626,qs),
(68,606,o),
(104,558,o),
(150,515,o),
(193,486,o),
(200,486,qs),
(209,486,o),
(252,516,o),
(298,558,o),
(333,603,o),
(333,619,qs),
(333,627,o),
(327,640,o),
(320,640,qs),
(315,640,o)
);
},
{
closed = 1;
nodes = (
(412,400,o),
(375,427,o),
(331,439,o),
(312,439,qs),
(272,439,o),
(211,398,o),
(188,364,q),
(188,413,ls),
(188,439,o),
(170,451,o),
(144,451,qs),
(61,451,o),
(-6,433,o),
(-6,412,qs),
(-6,402,o),
(5,389,o),
(21,382,o),
(41,379,o),
(49,379,qs),
(79,379,ls),
(94,379,o),
(94,365,qs),
(94,300,o),
(94,216,o),
(94,162,o),
(93,130,o),
(93,118,qs),
(92,96,o),
(67,83,o),
(51,79,qs),
(34,75,o),
(22,55,o),
(22,42,qs),
(22,27,o),
(39,0,o),
(63,0,qs),
(78,0,o),
(101,1,o),
(123,2,o),
(147,3,o),
(163,3,qs),
(193,3,o),
(256,0,o),
(288,0,qs),
(325,0,o),
(325,35,qs),
(325,58,o),
(283,79,o),
(231,79,qs),
(183,79,l),
(183,195,ls),
(183,240,o),
(209,305,o),
(248,349,o),
(293,370,o),
(311,370,qs),
(330,370,o),
(356,352,o),
(356,335,qs),
(356,322,o),
(340,308,o),
(320,296,o),
(304,280,o),
(304,264,qs),
(304,241,o),
(338,222,o),
(358,222,qs),
(380,222,o),
(410,241,o),
(428,270,o),
(436,306,o),
(436,323,qs),
(436,356,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
21 1 1 0 91 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
2 10 2 0 1 0 106 0 1 8 1 106 0 3 4 5 4 3 5 104 7 1 4 4 8 83 9 1 8 8 15 67 0 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
2 10 2 0 1 0 106 0 1 8 1 106 0 3 4 5 4 3 5 104 0 8 9 4 8 79 0 9 7 1 4 3 9 4 92 0 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
2 10 2 0 1 0 106 0 1 8 1 106 0 3 4 5 4 3 5 104 0 8 0 7 4 8 7 92 0 9 0 4 3 9 4 92 0 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 95 93 88 86 80 77 63 53 50 48 43 41 32 30 17 15 9 7 0 25 1 25 11 15
CALL[ ]	/* CallFunction */";
};
width = 453;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
ref = .ttfautohint;
},
{
alignment = -1;
ref = r;
},
{
alignment = -1;
pos = (36,1150);
ref = circumflex;
scale = (1,-0.9999);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
81 1 9 7 68 1 0 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
8 10 2 7 9 7 106 0 0 1 2 1 0 2 104 0 9 9 23 67 0 4 4 5 83 0 5 5 15 67 0 1 1 6 83 0 6 6 15 67 0 2 2 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
8 10 2 7 9 7 106 0 9 5 9 106 0 0 1 2 1 0 2 104 0 5 0 4 1 5 4 91 0 6 0 1 0 6 1 91 0 2 2 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
77 76 94 92 87 85 76 100 77 100 37 53 62 195 37 41 37 11 33
CALL[ ]	/* CallFunction */";
};
width = 429;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(329,434,o),
(292,434,qs),
(257,434,o),
(195,399,o),
(171,364,q),
(171,413,ls),
(171,439,o),
(153,451,o),
(127,451,qs),
(109,451,o),
(62,449,o),
(22,444,o),
(-6,437,o),
(-6,433,qs),
(-6,430,o),
(4,420,o),
(14,420,qs),
(113,420,ls),
(128,420,o),
(128,406,qs),
(128,322,o),
(127,204,o),
(124,123,o),
(121,73,o),
(118,57,qs),
(115,40,o),
(107,32,o),
(89,31,qs),
(63,29,o),
(31,19,o),
(31,13,qs),
(31,8,o),
(45,0,o),
(53,0,qs),
(78,0,o),
(120,3,o),
(146,3,qs),
(159,3,o),
(195,2,o),
(233,1,o),
(270,0,o),
(284,0,qs),
(291,0,o),
(304,7,o),
(304,13,qs),
(304,21,o),
(262,31,o),
(210,31,qs),
(166,31,l),
(166,243,ls),
(166,288,o),
(190,349,o),
(226,387,o),
(268,403,o),
(286,403,qs),
(306,403,o),
(332,386,o),
(332,369,qs),
(332,357,o),
(319,345,o),
(304,335,o),
(291,321,o),
(291,308,qs),
(291,294,o),
(308,276,o),
(325,276,qs),
(340,276,o),
(359,290,o),
(370,312,o),
(374,337,o),
(374,349,qs),
(374,394,o)
);
},
{
closed = 1;
nodes = (
(272,622,o),
(238,596,o),
(200,566,o),
(183,554,q),
(166,566,o),
(128,596,o),
(95,622,o),
(69,640,o),
(64,640,qs),
(56,640,o),
(56,629,qs),
(56,620,o),
(89,580,o),
(133,540,o),
(174,510,o),
(183,510,qs),
(192,510,o),
(235,540,o),
(278,580,o),
(311,620,o),
(311,629,qs),
(311,640,o),
(303,640,qs),
(298,640,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
91 1 10 9 66 1 0 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
11 12 2 9 10 9 106 0 10 7 10 106 0 0 1 2 1 0 96 0 6 6 7 83 0 7 7 15 67 0 1 1 8 83 0 8 8 15 67 5 1 2 2 3 83 4 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
11 12 2 9 10 9 106 0 10 7 10 106 0 0 1 2 1 0 2 104 0 6 6 7 83 0 7 7 15 67 0 1 1 8 83 0 8 8 15 67 5 1 2 2 3 83 4 1 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
11 12 2 9 10 9 106 0 10 7 10 106 0 0 1 2 1 0 2 104 0 7 0 6 1 7 6 92 0 8 0 1 0 8 1 92 5 1 2 2 3 83 4 1 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
73 72 87 85 80 78 72 95 73 95 37 53 56 21 33 116 37 41 36 13 24
CALL[ ]	/* CallFunction */";
};
width = 395;
}
);
note = rcaron;
unicode = 345;
},
{
glyphname = rcommaaccent;
kernLeft = r;
kernRight = r;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(412,400,o),
(375,427,o),
(331,439,o),
(312,439,qs),
(272,439,o),
(211,398,o),
(188,364,q),
(188,413,ls),
(188,439,o),
(170,451,o),
(144,451,qs),
(61,451,o),
(-6,433,o),
(-6,412,qs),
(-6,402,o),
(5,389,o),
(21,382,o),
(41,379,o),
(49,379,qs),
(79,379,ls),
(94,379,o),
(94,365,qs),
(94,300,o),
(94,216,o),
(94,162,o),
(93,130,o),
(93,118,qs),
(92,96,o),
(67,83,o),
(51,79,qs),
(34,75,o),
(22,55,o),
(22,42,qs),
(22,27,o),
(39,0,o),
(63,0,qs),
(78,0,o),
(101,1,o),
(123,2,o),
(147,3,o),
(163,3,qs),
(193,3,o),
(256,0,o),
(288,0,qs),
(325,0,o),
(325,35,qs),
(325,58,o),
(283,79,o),
(231,79,qs),
(183,79,l),
(183,195,ls),
(183,240,o),
(209,305,o),
(248,349,o),
(293,370,o),
(311,370,qs),
(330,370,o),
(356,352,o),
(356,335,qs),
(356,322,o),
(340,308,o),
(320,296,o),
(304,280,o),
(304,264,qs),
(304,241,o),
(338,222,o),
(358,222,qs),
(380,222,o),
(410,241,o),
(428,270,o),
(436,306,o),
(436,323,qs),
(436,356,o)
);
},
{
closed = 1;
nodes = (
(107,-133,o),
(121,-143,o),
(132,-152,o),
(132,-158,qs),
(132,-188,o),
(117,-217,o),
(117,-227,qs),
(117,-244,o),
(138,-250,o),
(143,-250,qs),
(149,-250,o),
(176,-235,o),
(203,-206,o),
(224,-161,o),
(224,-131,qs),
(224,-88,o),
(180,-50,o),
(156,-50,qs),
(123,-50,o),
(96,-87,o),
(96,-108,qs),
(96,-120,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
65 1 0 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 0 1 2 1 0 2 104 4 1 1 1 5 83 6 1 5 5 15 67 0 2 2 3 83 0 3 3 13 67 0 7 7 8 83 0 8 8 25 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 0 1 2 1 0 2 104 0 5 6 1 5 79 0 6 4 1 1 0 6 1 91 0 7 0 8 7 8 87 0 2 2 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 0 1 2 1 0 2 104 0 5 0 4 1 5 4 91 0 6 0 1 0 6 1 91 0 7 0 8 7 8 87 0 2 2 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 38 37 38 62 163 37 41 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 454;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
ref = .ttfautohint;
},
{
alignment = -1;
ref = r;
},
{
alignment = -1;
pos = (53,-141);
ref = comma;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
68 1 0 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 0 1 2 1 0 2 104 0 4 4 5 83 0 5 5 15 67 0 1 1 6 83 0 6 6 15 67 0 2 2 3 83 0 3 3 13 67 0 7 7 8 83 0 8 8 25 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 1 2 1 0 2 104 0 5 0 4 1 5 4 91 0 6 0 1 0 6 1 91 0 2 2 3 83 0 3 3 13 67 0 7 7 8 83 0 8 8 25 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 0 1 2 1 0 2 104 0 5 0 4 1 5 4 91 0 6 0 1 0 6 1 91 0 7 0 8 7 8 87 0 2 2 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 38 37 53 62 195 37 41 37 9 35
CALL[ ]	/* CallFunction */";
};
width = 429;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(328,434,o),
(291,434,qs),
(256,434,o),
(194,399,o),
(170,364,q),
(170,413,ls),
(170,439,o),
(152,451,o),
(126,451,qs),
(108,451,o),
(61,449,o),
(21,444,o),
(-7,437,o),
(-7,433,qs),
(-7,430,o),
(3,420,o),
(13,420,qs),
(112,420,ls),
(127,420,o),
(127,406,qs),
(127,322,o),
(126,204,o),
(123,123,o),
(120,73,o),
(117,57,qs),
(114,40,o),
(106,32,o),
(88,31,qs),
(62,29,o),
(30,19,o),
(30,13,qs),
(30,8,o),
(44,0,o),
(52,0,qs),
(77,0,o),
(119,3,o),
(145,3,qs),
(158,3,o),
(194,2,o),
(232,1,o),
(269,0,o),
(283,0,qs),
(290,0,o),
(303,7,o),
(303,13,qs),
(303,21,o),
(261,31,o),
(209,31,qs),
(165,31,l),
(165,243,ls),
(165,288,o),
(189,349,o),
(225,387,o),
(267,403,o),
(285,403,qs),
(305,403,o),
(331,386,o),
(331,369,qs),
(331,357,o),
(318,345,o),
(303,335,o),
(290,321,o),
(290,308,qs),
(290,294,o),
(307,276,o),
(324,276,qs),
(339,276,o),
(358,290,o),
(369,312,o),
(373,337,o),
(373,349,qs),
(373,394,o)
);
},
{
closed = 1;
nodes = (
(114,-125,o),
(128,-132,o),
(139,-139,o),
(139,-145,qs),
(139,-155,o),
(128,-184,o),
(128,-191,qs),
(128,-196,o),
(137,-203,o),
(142,-203,qs),
(152,-203,o),
(169,-186,o),
(179,-161,o),
(185,-134,o),
(185,-124,qs),
(185,-90,o),
(158,-67,o),
(143,-67,qs),
(123,-67,o),
(103,-88,o),
(103,-101,qs),
(103,-113,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
66 1 0 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 0 1 2 1 0 96 0 6 6 7 83 0 7 7 15 67 0 1 1 8 83 0 8 8 15 67 5 1 2 2 3 83 4 1 3 3 13 67 0 9 9 10 83 0 10 10 17 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 0 1 2 1 0 2 104 0 6 6 7 83 0 7 7 15 67 0 1 1 8 83 0 8 8 15 67 5 1 2 2 3 83 4 1 3 3 13 67 0 9 9 10 83 0 10 10 17 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 0 1 2 1 0 2 104 0 7 0 6 1 7 6 91 0 8 0 1 0 8 1 91 5 1 2 2 3 83 4 1 3 3 13 67 0 9 9 10 83 0 10 10 17 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 0 1 2 1 0 2 104 0 7 0 6 1 7 6 91 0 8 0 1 0 8 1 91 0 9 0 10 9 10 87 5 1 2 2 3 83 4 1 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
84 82 76 74 37 53 56 21 33 116 37 41 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 394;
}
);
note = rcommaaccent;
unicode = 343;
},
{
glyphname = s;
kernLeft = s;
kernRight = s;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(204,-27,o),
(238,-27,qs),
(272,-27,o),
(335,-13,o),
(383,19,o),
(412,67,o),
(412,102,qs),
(412,140,o),
(377,187,o),
(321,217,o),
(254,235,o),
(223,244,qs),
(210,248,o),
(180,259,o),
(155,278,o),
(139,305,o),
(139,325,qs),
(139,350,o),
(173,384,o),
(217,384,qs),
(258,384,o),
(298,356,o),
(307,342,qs),
(315,331,o),
(330,298,o),
(334,280,qs),
(336,269,o),
(357,250,o),
(370,250,qs),
(387,250,o),
(400,272,o),
(402,289,qs),
(403,296,o),
(405,327,o),
(407,365,o),
(408,405,o),
(408,422,qs),
(408,457,o),
(388,475,o),
(372,475,qs),
(358,475,o),
(332,461,o),
(332,436,qs),
(332,433,o),
(333,405,o),
(334,392,q),
(328,402,o),
(310,425,o),
(281,445,o),
(239,457,o),
(209,457,qs),
(179,457,o),
(123,442,o),
(79,409,o),
(52,357,o),
(52,320,qs),
(52,278,o),
(84,224,o),
(132,189,o),
(190,170,o),
(216,164,qs),
(251,155,o),
(293,137,o),
(315,118,o),
(322,100,o),
(322,91,qs),
(322,65,o),
(273,44,o),
(240,44,qs),
(196,44,o),
(142,71,o),
(129,91,qs),
(115,114,o),
(107,144,o),
(105,154,qs),
(103,164,o),
(86,181,o),
(75,181,qs),
(35,181,o),
(35,148,qs),
(35,124,o),
(39,84,o),
(39,64,qs),
(39,50,o),
(37,22,o),
(37,4,qs),
(37,-10,o),
(49,-30,o),
(72,-30,qs),
(90,-30,o),
(110,-13,o),
(110,-3,qs),
(110,3,o),
(110,15,o),
(109,23,q),
(138,-9,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
49 1 6 3 0 1 0 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 6 6 3 83 0 3 3 23 67 0 5 5 4 83 0 4 4 23 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 0 0 2 79 0 2 2 0 83 7 1 0 2 0 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
94 92 76 74 67 65 56 54 45 43 39 41 37 8 18
CALL[ ]	/* CallFunction */";
};
width = 451;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(140,-6,o),
(176,-19,o),
(216,-24,o),
(234,-24,qs),
(258,-24,o),
(316,-15,o),
(365,12,o),
(399,60,o),
(399,99,qs),
(399,132,o),
(372,176,o),
(326,205,o),
(262,225,o),
(225,235,qs),
(202,241,o),
(162,254,o),
(132,274,o),
(114,302,o),
(114,322,qs),
(114,355,o),
(162,396,o),
(209,396,qs),
(256,396,o),
(306,359,o),
(318,336,qs),
(321,331,o),
(325,315,o),
(328,298,o),
(330,285,o),
(330,284,qs),
(332,277,o),
(344,259,o),
(357,259,qs),
(366,259,o),
(388,271,o),
(389,285,qs),
(389,291,o),
(391,323,o),
(393,364,o),
(394,411,o),
(394,432,qs),
(394,458,o),
(373,475,o),
(362,475,qs),
(353,475,o),
(330,461,o),
(330,438,qs),
(330,433,o),
(331,405,o),
(332,392,q),
(326,402,o),
(308,425,o),
(278,445,o),
(235,457,o),
(206,457,qs),
(176,457,o),
(119,442,o),
(75,409,o),
(48,357,o),
(48,320,qs),
(48,281,o),
(77,230,o),
(123,199,o),
(177,181,o),
(203,175,qs),
(262,160,o),
(331,129,o),
(331,95,qs),
(331,77,o),
(312,53,o),
(282,39,o),
(247,33,o),
(231,33,qs),
(205,33,o),
(164,46,o),
(132,65,o),
(112,89,o),
(107,100,qs),
(102,110,o),
(101,127,o),
(99,141,qs),
(97,159,o),
(84,181,o),
(64,181,qs),
(45,181,o),
(37,162,o),
(37,146,qs),
(37,124,o),
(41,74,o),
(41,54,qs),
(41,40,o),
(39,1,o),
(39,-4,qs),
(39,-12,o),
(46,-22,o),
(57,-28,o),
(68,-30,o),
(72,-30,qs),
(87,-30,o),
(102,-10,o),
(102,5,qs),
(102,11,o),
(102,25,o),
(101,33,q),
(110,16,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
74 68 54 3 5 6 1 66 0 1 2 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 6 6 3 83 0 3 3 23 67 0 5 5 4 83 0 4 4 23 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 0 0 2 79 0 2 2 0 83 7 1 0 2 0 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 0 0 1 0 87 0 2 2 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 0 7 0 2 7 91 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
101 99 83 81 72 70 61 59 50 48 41 44 37 8 18
CALL[ ]	/* CallFunction */";
};
width = 435;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(111,2,o),
(149,-14,o),
(192,-23,o),
(212,-23,qs),
(225,-23,o),
(279,-16,o),
(332,10,o),
(372,60,o),
(372,103,qs),
(372,131,o),
(351,170,o),
(314,195,o),
(261,212,o),
(228,220,qs),
(192,228,o),
(139,243,o),
(104,264,o),
(87,297,o),
(87,323,qs),
(87,351,o),
(105,390,o),
(137,415,o),
(181,426,o),
(206,426,qs),
(234,426,o),
(274,413,o),
(302,391,o),
(320,360,o),
(325,342,qs),
(330,327,o),
(331,306,o),
(332,298,qs),
(333,290,o),
(340,273,o),
(349,273,qs),
(358,273,o),
(364,290,o),
(364,299,qs),
(364,310,o),
(367,389,o),
(367,449,qs),
(367,460,o),
(358,475,o),
(349,475,qs),
(341,475,o),
(333,461,o),
(333,441,qs),
(333,433,o),
(334,405,o),
(335,392,q),
(329,402,o),
(311,425,o),
(281,445,o),
(239,457,o),
(210,457,qs),
(180,457,o),
(123,442,o),
(78,409,o),
(51,359,o),
(51,323,qs),
(51,266,o),
(121,208,o),
(184,194,qs),
(220,186,o),
(276,171,o),
(314,150,o),
(334,121,o),
(334,98,qs),
(334,72,o),
(311,38,o),
(277,17,o),
(235,8,o),
(216,8,qs),
(185,8,o),
(128,25,o),
(105,46,qs),
(86,63,o),
(74,101,o),
(72,136,qs),
(69,171,o),
(54,171,qs),
(40,171,o),
(40,139,qs),
(40,121,o),
(44,73,o),
(44,54,qs),
(44,40,o),
(42,2,o),
(42,-6,qs),
(42,-20,o),
(51,-30,o),
(58,-30,qs),
(69,-30,o),
(75,-10,o),
(75,5,qs),
(75,11,o),
(75,29,o),
(74,37,q),
(81,24,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
48 1 5 6 19 0 2 2 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 6 6 3 83 0 3 3 23 67 0 5 5 4 83 0 4 4 23 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 0 0 1 0 87 0 2 2 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
95 93 75 73 64 62 55 53 44 42 38 41 37 8 18
CALL[ ]	/* CallFunction */";
};
width = 412;
}
);
note = s;
unicode = 115;
},
{
glyphname = sacute;
kernLeft = s;
kernRight = s;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(275,687,o),
(243,688,qs),
(224,688,o),
(181,639,o),
(145,578,o),
(121,525,o),
(121,522,qs),
(121,511,o),
(147,500,o),
(158,500,qs),
(167,500,o),
(197,516,o),
(231,541,o),
(267,573,o),
(295,604,o),
(313,631,o),
(313,640,qs),
(313,659,o)
);
},
{
closed = 1;
nodes = (
(204,-27,o),
(238,-27,qs),
(272,-27,o),
(335,-13,o),
(383,19,o),
(412,67,o),
(412,102,qs),
(412,140,o),
(377,187,o),
(321,217,o),
(254,235,o),
(223,244,qs),
(210,248,o),
(180,259,o),
(155,278,o),
(139,305,o),
(139,325,qs),
(139,350,o),
(173,384,o),
(217,384,qs),
(258,384,o),
(298,356,o),
(307,342,qs),
(315,331,o),
(330,298,o),
(334,280,qs),
(336,269,o),
(357,250,o),
(370,250,qs),
(387,250,o),
(400,272,o),
(402,289,qs),
(403,296,o),
(405,327,o),
(407,365,o),
(408,405,o),
(408,422,qs),
(408,457,o),
(388,475,o),
(372,475,qs),
(358,475,o),
(332,461,o),
(332,436,qs),
(332,433,o),
(333,405,o),
(334,392,q),
(328,402,o),
(310,425,o),
(281,445,o),
(239,457,o),
(209,457,qs),
(179,457,o),
(123,442,o),
(79,409,o),
(52,357,o),
(52,320,qs),
(52,278,o),
(84,224,o),
(132,189,o),
(190,170,o),
(216,164,qs),
(251,155,o),
(293,137,o),
(315,118,o),
(322,100,o),
(322,91,qs),
(322,65,o),
(273,44,o),
(240,44,qs),
(196,44,o),
(142,71,o),
(129,91,qs),
(115,114,o),
(107,144,o),
(105,154,qs),
(103,164,o),
(86,181,o),
(75,181,qs),
(35,181,o),
(35,148,qs),
(35,124,o),
(39,84,o),
(39,64,qs),
(39,50,o),
(37,22,o),
(37,4,qs),
(37,-10,o),
(49,-30,o),
(72,-30,qs),
(90,-30,o),
(110,-13,o),
(110,-3,qs),
(110,3,o),
(110,15,o),
(109,23,q),
(138,-9,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
67 1 8 5 18 1 2 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 1 0 1 106 0 0 6 0 106 0 8 8 5 83 0 5 5 23 67 0 7 7 6 83 0 6 6 23 67 0 3 3 2 83 9 1 2 2 21 67 0 4 4 2 83 9 1 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 0 8 7 5 8 92 0 6 0 7 3 6 7 91 0 3 3 2 83 9 1 2 2 21 67 0 4 4 2 83 9 1 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 0 8 7 5 8 92 0 6 0 7 3 6 7 91 0 3 4 2 3 79 0 4 2 2 4 79 0 4 4 2 83 9 1 2 4 2 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
112 110 94 92 85 83 74 72 63 61 39 41 39 38 38 10 20
CALL[ ]	/* CallFunction */";
};
width = 451;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(259,670,o),
(236,670,qs),
(226,670,o),
(203,649,o),
(178,618,o),
(154,581,o),
(136,548,o),
(125,524,o),
(125,522,qs),
(125,512,o),
(142,504,o),
(150,504,qs),
(161,504,o),
(206,536,o),
(251,578,o),
(285,621,o),
(285,632,qs),
(285,649,o)
);
},
{
closed = 1;
nodes = (
(140,-6,o),
(176,-19,o),
(216,-24,o),
(234,-24,qs),
(258,-24,o),
(316,-15,o),
(365,12,o),
(399,60,o),
(399,99,qs),
(399,132,o),
(372,176,o),
(326,205,o),
(262,225,o),
(225,235,qs),
(202,241,o),
(162,254,o),
(132,274,o),
(114,302,o),
(114,322,qs),
(114,355,o),
(162,396,o),
(209,396,qs),
(256,396,o),
(306,359,o),
(318,336,qs),
(321,331,o),
(325,315,o),
(328,298,o),
(330,285,o),
(330,284,qs),
(332,277,o),
(344,259,o),
(357,259,qs),
(366,259,o),
(388,271,o),
(389,285,qs),
(389,291,o),
(391,323,o),
(393,364,o),
(394,411,o),
(394,432,qs),
(394,458,o),
(373,475,o),
(362,475,qs),
(353,475,o),
(330,461,o),
(330,438,qs),
(330,433,o),
(331,405,o),
(332,392,q),
(326,402,o),
(308,425,o),
(278,445,o),
(235,457,o),
(206,457,qs),
(176,457,o),
(119,442,o),
(75,409,o),
(48,357,o),
(48,320,qs),
(48,281,o),
(77,230,o),
(123,199,o),
(177,181,o),
(203,175,qs),
(262,160,o),
(331,129,o),
(331,95,qs),
(331,77,o),
(312,53,o),
(282,39,o),
(247,33,o),
(231,33,qs),
(205,33,o),
(164,46,o),
(132,65,o),
(112,89,o),
(107,100,qs),
(102,110,o),
(101,127,o),
(99,141,qs),
(97,159,o),
(84,181,o),
(64,181,qs),
(45,181,o),
(37,162,o),
(37,146,qs),
(37,124,o),
(41,74,o),
(41,54,qs),
(41,40,o),
(39,1,o),
(39,-4,qs),
(39,-12,o),
(46,-22,o),
(57,-28,o),
(68,-30,o),
(72,-30,qs),
(87,-30,o),
(102,-10,o),
(102,5,qs),
(102,11,o),
(102,25,o),
(101,33,q),
(110,16,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
92 86 72 3 7 8 1 66 18 1 4 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 1 0 1 106 0 0 6 0 106 0 8 8 5 83 0 5 5 23 67 0 7 7 6 83 0 6 6 23 67 0 3 3 2 83 9 1 2 2 21 67 0 4 4 2 83 9 1 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 0 8 7 5 8 92 0 6 0 7 3 6 7 91 0 3 3 2 83 9 1 2 2 21 67 0 4 4 2 83 9 1 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 0 8 7 5 8 92 0 6 0 7 3 6 7 91 0 3 4 2 3 79 0 4 2 2 4 79 0 4 4 2 83 9 1 2 4 2 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 0 8 7 5 8 92 0 6 0 7 3 6 7 91 0 3 0 2 3 2 87 0 4 4 9 83 0 9 9 21 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 0 8 7 5 8 92 0 6 0 7 3 6 7 91 0 3 4 2 3 79 0 4 0 9 2 4 9 91 0 3 3 2 83 0 2 3 2 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
119 117 101 99 90 88 79 77 68 66 41 44 39 40 36 10 20
CALL[ ]	/* CallFunction */";
};
width = 435;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(237,640,o),
(229,640,qs),
(222,640,o),
(190,610,o),
(158,570,o),
(134,530,o),
(134,521,qs),
(134,510,o),
(142,510,qs),
(149,510,o),
(184,538,o),
(220,574,o),
(248,610,o),
(248,618,qs),
(248,632,o)
);
},
{
closed = 1;
nodes = (
(111,2,o),
(149,-14,o),
(192,-23,o),
(212,-23,qs),
(225,-23,o),
(279,-16,o),
(332,10,o),
(372,60,o),
(372,103,qs),
(372,131,o),
(351,170,o),
(314,195,o),
(261,212,o),
(228,220,qs),
(192,228,o),
(139,243,o),
(104,264,o),
(87,297,o),
(87,323,qs),
(87,351,o),
(105,390,o),
(137,415,o),
(181,426,o),
(206,426,qs),
(234,426,o),
(274,413,o),
(302,391,o),
(320,360,o),
(325,342,qs),
(330,327,o),
(331,306,o),
(332,298,qs),
(333,290,o),
(340,273,o),
(349,273,qs),
(358,273,o),
(364,290,o),
(364,299,qs),
(364,310,o),
(367,389,o),
(367,449,qs),
(367,460,o),
(358,475,o),
(349,475,qs),
(341,475,o),
(333,461,o),
(333,441,qs),
(333,433,o),
(334,405,o),
(335,392,q),
(329,402,o),
(311,425,o),
(281,445,o),
(239,457,o),
(210,457,qs),
(180,457,o),
(123,442,o),
(78,409,o),
(51,359,o),
(51,323,qs),
(51,266,o),
(121,208,o),
(184,194,qs),
(220,186,o),
(276,171,o),
(314,150,o),
(334,121,o),
(334,98,qs),
(334,72,o),
(311,38,o),
(277,17,o),
(235,8,o),
(216,8,qs),
(185,8,o),
(128,25,o),
(105,46,qs),
(86,63,o),
(74,101,o),
(72,136,qs),
(69,171,o),
(54,171,qs),
(40,171,o),
(40,139,qs),
(40,121,o),
(44,73,o),
(44,54,qs),
(44,40,o),
(42,2,o),
(42,-6,qs),
(42,-20,o),
(51,-30,o),
(58,-30,qs),
(69,-30,o),
(75,-10,o),
(75,5,qs),
(75,11,o),
(75,29,o),
(74,37,q),
(81,24,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
63 1 7 8 34 15 2 4 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 1 106 0 0 6 0 106 0 8 8 5 83 0 5 5 23 67 0 7 7 6 83 0 6 6 23 67 0 4 4 9 83 0 9 9 21 67 0 3 3 2 83 0 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 0 8 7 5 8 92 0 6 0 7 3 6 7 91 0 4 4 9 83 0 9 9 21 67 0 3 3 2 83 0 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 0 8 7 5 8 92 0 6 0 7 3 6 7 91 0 3 0 2 3 2 87 0 4 4 9 83 0 9 9 21 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
110 108 90 88 79 77 70 68 59 57 38 41 39 37 36 10 20
CALL[ ]	/* CallFunction */";
};
width = 412;
}
);
note = sacute;
unicode = 347;
},
{
glyphname = scaron;
kernLeft = s;
kernRight = s;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(291,627,o),
(257,608,o),
(219,587,o),
(202,578,q),
(185,587,o),
(147,608,o),
(114,627,o),
(88,640,o),
(83,640,qs),
(77,640,o),
(70,631,o),
(70,626,qs),
(70,606,o),
(106,558,o),
(152,515,o),
(195,486,o),
(202,486,qs),
(211,486,o),
(254,516,o),
(300,558,o),
(335,603,o),
(335,619,qs),
(335,627,o),
(329,640,o),
(322,640,qs),
(317,640,o)
);
},
{
closed = 1;
nodes = (
(204,-27,o),
(238,-27,qs),
(272,-27,o),
(335,-13,o),
(383,19,o),
(412,67,o),
(412,102,qs),
(412,140,o),
(377,187,o),
(321,217,o),
(254,235,o),
(223,244,qs),
(210,248,o),
(180,259,o),
(155,278,o),
(139,305,o),
(139,325,qs),
(139,350,o),
(173,384,o),
(217,384,qs),
(258,384,o),
(298,356,o),
(307,342,qs),
(315,331,o),
(330,298,o),
(334,280,qs),
(336,269,o),
(357,250,o),
(370,250,qs),
(387,250,o),
(400,272,o),
(402,289,qs),
(403,296,o),
(405,327,o),
(407,365,o),
(408,405,o),
(408,422,qs),
(408,457,o),
(388,475,o),
(372,475,qs),
(358,475,o),
(332,461,o),
(332,436,qs),
(332,433,o),
(333,405,o),
(334,392,q),
(328,402,o),
(310,425,o),
(281,445,o),
(239,457,o),
(209,457,qs),
(179,457,o),
(123,442,o),
(79,409,o),
(52,357,o),
(52,320,qs),
(52,278,o),
(84,224,o),
(132,189,o),
(190,170,o),
(216,164,qs),
(251,155,o),
(293,137,o),
(315,118,o),
(322,100,o),
(322,91,qs),
(322,65,o),
(273,44,o),
(240,44,qs),
(196,44,o),
(142,71,o),
(129,91,qs),
(115,114,o),
(107,144,o),
(105,154,qs),
(103,164,o),
(86,181,o),
(75,181,qs),
(35,181,o),
(35,148,qs),
(35,124,o),
(39,84,o),
(39,64,qs),
(39,50,o),
(37,22,o),
(37,4,qs),
(37,-10,o),
(49,-30,o),
(72,-30,qs),
(90,-30,o),
(110,-13,o),
(110,-3,qs),
(110,3,o),
(110,15,o),
(109,23,q),
(138,-9,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
21 1 1 0 75 1 9 6 26 1 3 5 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
2 11 2 0 1 0 106 0 1 7 1 106 0 9 9 6 83 0 6 6 23 67 0 8 8 7 83 0 7 7 23 67 0 4 4 3 84 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
2 11 2 0 1 0 106 0 1 7 1 106 0 6 0 9 8 6 9 91 0 7 0 8 4 7 8 91 0 4 4 3 84 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
2 11 2 0 1 0 106 0 1 7 1 106 0 6 0 9 8 6 9 91 0 7 0 8 4 7 8 91 0 4 5 3 4 79 0 5 3 3 5 79 0 5 5 3 83 10 1 3 5 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 120 118 102 100 93 91 82 80 71 69 53 51 44 42 33 31 17 15 9 7 0 25 1 25 12 15
CALL[ ]	/* CallFunction */";
};
width = 451;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (37,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = s;
},
{
alignment = -1;
pos = (46,1150);
ref = circumflex;
scale = (1,-0.9999);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
111 1 10 8 75 69 55 3 5 6 2 66 1 1 2 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
9 11 2 8 10 8 106 0 10 10 23 67 0 6 6 3 83 0 3 3 23 67 0 5 5 4 83 0 4 4 23 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
9 11 2 8 10 8 106 0 10 4 3 10 94 0 3 0 6 5 3 6 92 0 4 0 5 1 4 5 91 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
9 11 2 8 10 8 106 0 10 4 3 10 94 0 3 0 6 5 3 6 92 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 0 0 2 79 0 2 2 0 83 7 1 0 2 0 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
9 11 2 8 10 8 106 0 10 4 10 106 0 3 0 6 5 3 6 92 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 0 0 2 79 0 2 2 0 83 7 1 0 2 0 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
9 11 2 8 10 8 106 0 10 4 10 106 0 3 0 6 5 3 6 92 0 4 0 5 1 4 5 91 0 1 0 0 1 0 87 0 2 2 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
9 11 2 8 10 8 106 0 10 4 10 106 0 3 0 6 5 3 6 92 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 0 7 0 2 7 91 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
107 106 124 122 117 115 106 130 107 130 102 100 84 82 73 71 62 60 51 49 41 44 38 12 29
CALL[ ]	/* CallFunction */";
};
width = 435;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(293,622,o),
(259,596,o),
(221,566,o),
(204,554,q),
(187,566,o),
(149,596,o),
(116,622,o),
(90,640,o),
(85,640,qs),
(77,640,o),
(77,629,qs),
(77,620,o),
(110,580,o),
(154,540,o),
(195,510,o),
(204,510,qs),
(213,510,o),
(256,540,o),
(299,580,o),
(332,620,o),
(332,629,qs),
(332,640,o),
(324,640,qs),
(319,640,o)
);
},
{
closed = 1;
nodes = (
(111,2,o),
(149,-14,o),
(192,-23,o),
(212,-23,qs),
(225,-23,o),
(279,-16,o),
(332,10,o),
(372,60,o),
(372,103,qs),
(372,131,o),
(351,170,o),
(314,195,o),
(261,212,o),
(228,220,qs),
(192,228,o),
(139,243,o),
(104,264,o),
(87,297,o),
(87,323,qs),
(87,351,o),
(105,390,o),
(137,415,o),
(181,426,o),
(206,426,qs),
(234,426,o),
(274,413,o),
(302,391,o),
(320,360,o),
(325,342,qs),
(330,327,o),
(331,306,o),
(332,298,qs),
(333,290,o),
(340,273,o),
(349,273,qs),
(358,273,o),
(364,290,o),
(364,299,qs),
(364,310,o),
(367,389,o),
(367,449,qs),
(367,460,o),
(358,475,o),
(349,475,qs),
(341,475,o),
(333,461,o),
(333,441,qs),
(333,433,o),
(334,405,o),
(335,392,q),
(329,402,o),
(311,425,o),
(281,445,o),
(239,457,o),
(210,457,qs),
(180,457,o),
(123,442,o),
(78,409,o),
(51,359,o),
(51,323,qs),
(51,266,o),
(121,208,o),
(184,194,qs),
(220,186,o),
(276,171,o),
(314,150,o),
(334,121,o),
(334,98,qs),
(334,72,o),
(311,38,o),
(277,17,o),
(235,8,o),
(216,8,qs),
(185,8,o),
(128,25,o),
(105,46,qs),
(86,63,o),
(74,101,o),
(72,136,qs),
(69,171,o),
(54,171,qs),
(40,171,o),
(40,139,qs),
(40,121,o),
(44,73,o),
(44,54,qs),
(44,40,o),
(42,2,o),
(42,-6,qs),
(42,-20,o),
(51,-30,o),
(58,-30,qs),
(69,-30,o),
(75,-10,o),
(75,5,qs),
(75,11,o),
(75,29,o),
(74,37,q),
(81,24,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
19 1 1 0 72 1 8 9 43 24 2 5 4 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
2 11 2 0 1 0 106 0 1 7 1 106 0 9 9 6 83 0 6 6 23 67 0 8 8 7 83 0 7 7 23 67 0 5 5 10 83 0 10 10 21 67 0 4 4 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
2 11 2 0 1 0 106 0 1 7 1 106 0 6 0 9 8 6 9 91 0 7 0 8 4 7 8 91 0 5 5 10 83 0 10 10 21 67 0 4 4 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
2 11 2 0 1 0 106 0 1 7 1 106 0 6 0 9 8 6 9 91 0 7 0 8 4 7 8 91 0 4 0 3 4 3 87 0 5 5 10 83 0 10 10 21 10 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 119 117 99 97 88 86 79 77 68 66 50 48 42 40 31 29 15 13 8 6 0 23 1 23 12 15
CALL[ ]	/* CallFunction */";
};
width = 412;
}
);
note = scaron;
unicode = 353;
},
{
glyphname = scircumflex;
kernLeft = s;
kernRight = s;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(320,523,o),
(320,531,qs),
(320,547,o),
(285,592,o),
(239,634,o),
(196,664,o),
(187,664,qs),
(180,664,o),
(137,635,o),
(91,592,o),
(55,543,o),
(55,524,qs),
(55,519,o),
(62,510,o),
(68,510,qs),
(73,510,o),
(99,523,o),
(132,542,o),
(170,563,o),
(187,572,q),
(204,563,o),
(242,542,o),
(276,523,o),
(302,510,o),
(307,510,qs),
(314,510,o)
);
},
{
closed = 1;
nodes = (
(204,-27,o),
(238,-27,qs),
(272,-27,o),
(335,-13,o),
(383,19,o),
(412,67,o),
(412,102,qs),
(412,140,o),
(377,187,o),
(321,217,o),
(254,235,o),
(223,244,qs),
(210,248,o),
(180,259,o),
(155,278,o),
(139,305,o),
(139,325,qs),
(139,350,o),
(173,384,o),
(217,384,qs),
(258,384,o),
(298,356,o),
(307,342,qs),
(315,331,o),
(330,298,o),
(334,280,qs),
(336,269,o),
(357,250,o),
(370,250,qs),
(387,250,o),
(400,272,o),
(402,289,qs),
(403,296,o),
(405,327,o),
(407,365,o),
(408,405,o),
(408,422,qs),
(408,457,o),
(388,475,o),
(372,475,qs),
(358,475,o),
(332,461,o),
(332,436,qs),
(332,433,o),
(333,405,o),
(334,392,q),
(328,402,o),
(310,425,o),
(281,445,o),
(239,457,o),
(209,457,qs),
(179,457,o),
(123,442,o),
(79,409,o),
(52,357,o),
(52,320,qs),
(52,278,o),
(84,224,o),
(132,189,o),
(190,170,o),
(216,164,qs),
(251,155,o),
(293,137,o),
(315,118,o),
(322,100,o),
(322,91,qs),
(322,65,o),
(273,44,o),
(240,44,qs),
(196,44,o),
(142,71,o),
(129,91,qs),
(115,114,o),
(107,144,o),
(105,154,qs),
(103,164,o),
(86,181,o),
(75,181,qs),
(35,181,o),
(35,148,qs),
(35,124,o),
(39,84,o),
(39,64,qs),
(39,50,o),
(37,22,o),
(37,4,qs),
(37,-10,o),
(49,-30,o),
(72,-30,qs),
(90,-30,o),
(110,-13,o),
(110,-3,qs),
(110,3,o),
(110,15,o),
(109,23,q),
(138,-9,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
5 1 0 2 75 1 9 6 26 1 3 5 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 2 0 2 106 1 11 2 0 7 0 106 0 9 9 6 83 0 6 6 23 67 0 8 8 7 83 0 7 7 23 67 0 4 4 3 83 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 2 0 2 106 1 11 2 0 7 0 106 0 6 0 9 8 6 9 92 0 7 0 8 4 7 8 91 0 4 4 3 83 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 2 0 2 106 1 11 2 0 7 0 106 0 6 0 9 8 6 9 92 0 7 0 8 4 7 8 91 0 4 5 3 4 79 0 5 3 3 5 79 0 5 5 3 83 10 1 3 5 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 120 118 102 100 93 91 82 80 71 69 53 51 44 42 33 31 19 17 11 9 0 25 1 25 12 15
CALL[ ]	/* CallFunction */";
};
width = 451;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (37,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = s;
},
{
alignment = -1;
pos = (32,0);
ref = circumflex;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
111 1 8 10 75 69 55 3 5 6 2 66 1 1 2 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 10 8 10 106 9 11 2 8 4 8 106 0 6 6 3 83 0 3 3 23 67 0 5 5 4 83 0 4 4 23 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 10 8 10 106 9 11 2 8 4 8 106 0 3 0 6 5 3 6 92 0 4 0 5 1 4 5 91 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 10 8 10 106 9 11 2 8 4 8 106 0 3 0 6 5 3 6 92 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 0 0 2 79 0 2 2 0 83 7 1 0 2 0 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 10 8 10 106 9 11 2 8 4 8 106 0 3 0 6 5 3 6 92 0 4 0 5 1 4 5 91 0 1 0 0 1 0 87 0 2 2 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 10 8 10 106 9 11 2 8 4 8 106 0 3 0 6 5 3 6 92 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 0 7 0 2 7 91 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
107 106 124 122 117 115 106 130 107 130 102 100 84 82 73 71 62 60 51 49 41 44 38 12 29
CALL[ ]	/* CallFunction */";
};
width = 435;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(319,521,qs),
(319,530,o),
(286,570,o),
(243,610,o),
(200,640,o),
(191,640,qs),
(182,640,o),
(141,610,o),
(97,570,o),
(64,530,o),
(64,521,qs),
(64,510,o),
(72,510,qs),
(77,510,o),
(103,528,o),
(136,554,o),
(174,584,o),
(191,596,q),
(208,584,o),
(246,554,o),
(280,528,o),
(306,510,o),
(311,510,qs),
(319,510,o)
);
},
{
closed = 1;
nodes = (
(111,2,o),
(149,-14,o),
(192,-23,o),
(212,-23,qs),
(225,-23,o),
(279,-16,o),
(332,10,o),
(372,60,o),
(372,103,qs),
(372,131,o),
(351,170,o),
(314,195,o),
(261,212,o),
(228,220,qs),
(192,228,o),
(139,243,o),
(104,264,o),
(87,297,o),
(87,323,qs),
(87,351,o),
(105,390,o),
(137,415,o),
(181,426,o),
(206,426,qs),
(234,426,o),
(274,413,o),
(302,391,o),
(320,360,o),
(325,342,qs),
(330,327,o),
(331,306,o),
(332,298,qs),
(333,290,o),
(340,273,o),
(349,273,qs),
(358,273,o),
(364,290,o),
(364,299,qs),
(364,310,o),
(367,389,o),
(367,449,qs),
(367,460,o),
(358,475,o),
(349,475,qs),
(341,475,o),
(333,461,o),
(333,441,qs),
(333,433,o),
(334,405,o),
(335,392,q),
(329,402,o),
(311,425,o),
(281,445,o),
(239,457,o),
(210,457,qs),
(180,457,o),
(123,442,o),
(78,409,o),
(51,359,o),
(51,323,qs),
(51,266,o),
(121,208,o),
(184,194,qs),
(220,186,o),
(276,171,o),
(314,150,o),
(334,121,o),
(334,98,qs),
(334,72,o),
(311,38,o),
(277,17,o),
(235,8,o),
(216,8,qs),
(185,8,o),
(128,25,o),
(105,46,qs),
(86,63,o),
(74,101,o),
(72,136,qs),
(69,171,o),
(54,171,qs),
(40,171,o),
(40,139,qs),
(40,121,o),
(44,73,o),
(44,54,qs),
(44,40,o),
(42,2,o),
(42,-6,qs),
(42,-20,o),
(51,-30,o),
(58,-30,qs),
(69,-30,o),
(75,-10,o),
(75,5,qs),
(75,11,o),
(75,29,o),
(74,37,q),
(81,24,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
5 1 0 2 72 1 8 9 43 24 2 5 4 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 2 0 2 106 1 11 2 0 7 0 106 0 9 9 6 83 0 6 6 23 67 0 8 8 7 83 0 7 7 23 67 0 5 5 10 83 0 10 10 21 67 0 4 4 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 2 0 2 106 1 11 2 0 7 0 106 0 6 0 9 8 6 9 92 0 7 0 8 4 7 8 91 0 5 5 10 83 0 10 10 21 67 0 4 4 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 2 0 2 106 1 11 2 0 7 0 106 0 6 0 9 8 6 9 92 0 7 0 8 4 7 8 91 0 4 0 3 4 3 87 0 5 5 10 83 0 10 10 21 10 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 119 117 99 97 88 86 79 77 68 66 50 48 42 40 31 29 18 16 11 9 0 23 1 23 12 15
CALL[ ]	/* CallFunction */";
};
width = 412;
}
);
note = scircumflex;
unicode = 349;
},
{
glyphname = germandbls;
kernLeft = germandbls;
kernRight = germandbls;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(329,617,o),
(297,574,o),
(258,535,o),
(226,496,o),
(204,454,o),
(204,429,qs),
(204,393,o),
(236,336,o),
(280,293,o),
(326,264,o),
(339,257,qs),
(406,219,o),
(482,155,o),
(482,136,qs),
(482,110,o),
(445,78,o),
(416,78,qs),
(378,78,o),
(325,95,o),
(309,110,qs),
(307,112,o),
(290,129,o),
(285,141,qs),
(277,160,o),
(258,181,o),
(235,181,qs),
(224,181,o),
(203,162,o),
(203,148,qs),
(203,127,o),
(208,86,o),
(208,67,qs),
(208,53,o),
(205,26,o),
(205,16,qs),
(205,5,o),
(225,-13,o),
(239,-13,qs),
(265,-13,o),
(287,18,o),
(288,50,q),
(296,38,o),
(324,19,o),
(359,7,o),
(396,0,o),
(413,0,qs),
(432,0,o),
(485,11,o),
(533,37,o),
(567,81,o),
(567,114,qs),
(567,145,o),
(535,201,o),
(486,249,o),
(429,287,o),
(405,300,qs),
(382,312,o),
(341,338,o),
(310,370,o),
(292,408,o),
(292,432,qs),
(292,461,o),
(339,517,o),
(396,580,o),
(443,653,o),
(443,698,qs),
(443,712,o),
(429,755,o),
(398,796,o),
(345,825,o),
(306,825,qs),
(249,825,o),
(168,790,o),
(113,734,o),
(81,662,o),
(64,588,o),
(59,518,o),
(59,491,qs),
(59,457,o),
(60,402,o),
(60,349,o),
(61,295,o),
(61,263,qs),
(61,211,o),
(59,124,o),
(56,77,qs),
(55,66,o),
(48,56,o),
(33,56,qs),
(22,56,o),
(-7,45,o),
(-7,29,qs),
(-7,13,o),
(21,0,o),
(35,0,qs),
(41,0,o),
(63,1,o),
(89,2,o),
(116,3,o),
(127,3,qs),
(137,3,o),
(153,13,o),
(153,30,qs),
(153,484,ls),
(153,506,o),
(154,563,o),
(163,622,o),
(182,679,o),
(217,724,o),
(271,751,o),
(311,751,qs),
(331,751,o),
(351,718,o),
(351,700,qs),
(351,668,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
28 1 2 7 73 1 1 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 0 0 3 83 0 3 3 12 67 0 6 6 1 83 5 4 2 1 1 13 67 0 7 7 1 83 5 4 2 1 1 13 67 0 2 2 1 83 5 4 2 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 0 3 83 0 3 3 12 67 0 7 7 1 83 4 1 1 1 13 67 0 2 2 1 83 4 1 1 1 13 67 0 6 6 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 0 0 3 83 0 3 3 14 67 0 7 7 1 83 4 1 1 1 13 67 0 2 2 1 83 4 1 1 1 13 67 0 6 6 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
98 96 89 87 77 75 69 67 44 42 36 121 34 8 18
CALL[ ]	/* CallFunction */";
};
width = 584;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(346,617,o),
(314,574,o),
(275,535,o),
(243,496,o),
(221,454,o),
(221,429,qs),
(221,393,o),
(253,336,o),
(297,293,o),
(343,264,o),
(356,257,qs),
(423,219,o),
(499,155,o),
(499,123,qs),
(499,94,o),
(450,60,o),
(412,60,qs),
(374,60,o),
(306,88,o),
(289,118,qs),
(286,123,o),
(283,133,o),
(281,141,qs),
(274,179,o),
(244,179,qs),
(234,179,o),
(220,162,o),
(220,148,qs),
(220,127,o),
(225,86,o),
(225,67,qs),
(225,53,o),
(222,26,o),
(222,16,qs),
(222,5,o),
(239,-11,o),
(247,-11,qs),
(283,-11,o),
(284,50,q),
(292,38,o),
(320,19,o),
(355,7,o),
(392,0,o),
(409,0,qs),
(428,0,o),
(484,11,o),
(536,37,o),
(572,81,o),
(572,114,qs),
(572,145,o),
(540,198,o),
(492,243,o),
(436,279,o),
(412,292,qs),
(389,304,o),
(347,333,o),
(314,367,o),
(294,408,o),
(294,432,qs),
(294,461,o),
(339,517,o),
(394,580,o),
(439,653,o),
(439,698,qs),
(439,712,o),
(424,755,o),
(392,796,o),
(339,825,o),
(302,825,qs),
(249,825,o),
(175,790,o),
(125,734,o),
(96,662,o),
(80,588,o),
(76,518,o),
(76,491,qs),
(76,457,o),
(77,402,o),
(77,349,o),
(78,295,o),
(78,263,qs),
(78,242,o),
(78,191,o),
(76,137,o),
(74,86,o),
(73,65,qs),
(72,49,o),
(53,44,o),
(29,44,qs),
(18,44,o),
(-8,37,o),
(-8,22,qs),
(-8,9,o),
(17,0,o),
(31,0,qs),
(37,0,o),
(59,1,o),
(85,2,o),
(112,3,o),
(123,3,qs),
(133,3,o),
(149,13,o),
(149,30,qs),
(149,484,ls),
(149,507,o),
(150,568,o),
(159,631,o),
(178,692,o),
(213,740,o),
(267,769,o),
(307,769,qs),
(339,769,o),
(368,724,o),
(368,700,qs),
(368,668,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
75 1 2 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 0 3 83 0 3 3 12 67 0 7 7 1 83 4 1 1 1 13 67 0 2 2 1 83 4 1 1 1 13 67 0 6 6 5 83 0 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 0 0 3 83 0 3 3 14 67 0 7 7 1 83 4 1 1 1 13 67 0 2 2 1 83 4 1 1 1 13 67 0 6 6 5 83 0 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
98 96 90 88 78 76 71 69 46 44 36 121 34 8 18
CALL[ ]	/* CallFunction */";
};
width = 583;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(370,617,o),
(338,574,o),
(299,535,o),
(267,496,o),
(245,454,o),
(245,429,qs),
(245,393,o),
(277,336,o),
(321,293,o),
(367,264,o),
(380,257,qs),
(413,238,o),
(466,205,o),
(503,169,o),
(523,128,o),
(523,102,qs),
(523,67,o),
(457,30,o),
(406,30,qs),
(368,30,o),
(305,56,o),
(289,88,qs),
(283,100,o),
(278,125,o),
(275,141,qs),
(271,161,o),
(265,175,o),
(257,175,qs),
(249,175,o),
(244,162,o),
(244,148,qs),
(244,127,o),
(249,86,o),
(249,67,qs),
(249,53,o),
(246,26,o),
(246,16,qs),
(246,-7,o),
(258,-7,qs),
(267,-7,o),
(277,18,o),
(278,50,q),
(286,38,o),
(314,19,o),
(349,7,o),
(386,0,o),
(403,0,qs),
(422,0,o),
(478,11,o),
(530,37,o),
(566,81,o),
(566,114,qs),
(566,145,o),
(534,198,o),
(486,243,o),
(430,279,o),
(406,292,qs),
(383,304,o),
(341,333,o),
(308,367,o),
(288,408,o),
(288,432,qs),
(288,461,o),
(333,517,o),
(388,580,o),
(433,653,o),
(433,698,qs),
(433,712,o),
(418,755,o),
(386,796,o),
(333,825,o),
(296,825,qs),
(250,825,o),
(186,790,o),
(143,734,o),
(117,662,o),
(104,588,o),
(100,518,o),
(100,491,qs),
(100,457,o),
(101,402,o),
(101,349,o),
(102,295,o),
(102,263,qs),
(102,240,o),
(102,183,o),
(100,125,o),
(98,68,o),
(97,45,qs),
(96,34,o),
(63,27,o),
(23,24,qs),
(12,23,o),
(-9,19,o),
(-9,11,qs),
(-9,3,o),
(11,0,o),
(25,0,qs),
(31,0,o),
(53,1,o),
(79,2,o),
(106,3,o),
(117,3,qs),
(127,3,o),
(143,13,o),
(143,30,qs),
(143,484,ls),
(143,510,o),
(144,577,o),
(153,647,o),
(172,714,o),
(207,767,o),
(261,799,o),
(301,799,qs),
(323,799,o),
(357,781,o),
(380,752,o),
(392,717,o),
(392,700,qs),
(392,668,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
77 30 2 6 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 2 83 0 2 2 12 67 0 6 6 1 83 3 1 1 1 13 67 0 5 5 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 2 83 0 2 2 12 67 0 6 6 1 83 3 1 1 1 13 67 0 5 5 4 83 0 4 4 16 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 2 83 0 2 2 12 67 0 6 6 1 83 3 1 1 1 13 67 0 5 5 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 2 83 0 2 2 14 67 0 6 6 1 83 3 1 1 1 13 67 0 5 5 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
101 99 92 90 81 79 73 71 48 46 121 36 7 17
CALL[ ]	/* CallFunction */";
};
width = 581;
}
);
note = germandbls;
unicode = 223;
},
{
glyphname = t;
kernLeft = t;
kernRight = c_t;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(101,151,o),
(102,117,o),
(108,81,o),
(119,45,o),
(129,30,qs),
(156,-11,o),
(219,-11,qs),
(253,-11,o),
(304,9,o),
(339,43,o),
(356,88,o),
(356,114,qs),
(356,131,o),
(341,150,o),
(323,150,qs),
(306,150,o),
(288,138,o),
(284,121,qs),
(276,89,o),
(258,67,o),
(236,67,qs),
(214,67,o),
(194,102,o),
(194,152,qs),
(194,394,l),
(223,396,o),
(287,400,o),
(318,402,qs),
(328,403,o),
(352,420,o),
(352,439,qs),
(352,460,o),
(321,478,o),
(309,478,qs),
(304,478,o),
(271,477,o),
(233,475,o),
(200,474,o),
(194,474,q),
(194,575,ls),
(194,605,o),
(167,621,o),
(151,621,qs),
(127,621,o),
(116,590,qs),
(110,574,o),
(107,524,o),
(105,500,qs),
(104,485,o),
(89,474,o),
(74,472,qs),
(23,465,ls),
(8,463,o),
(-18,449,o),
(-18,430,qs),
(-18,405,o),
(5,390,o),
(18,390,qs),
(36,390,o),
(84,392,o),
(103,392,q),
(101,165,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
13 1 2 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 3 1 0 0 2 83 0 2 2 23 67 0 4 4 6 84 0 6 6 24 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 91 0 4 4 6 84 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 1 2 1 106 0 0 3 5 3 0 5 104 0 5 4 3 5 4 102 0 2 0 3 0 2 3 89 0 4 4 6 84 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 36 35 53 99 45 64 7 22
CALL[ ]	/* CallFunction */";
};
width = 366;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(95,151,o),
(96,117,o),
(102,80,o),
(113,45,o),
(123,30,qs),
(150,-11,o),
(207,-11,qs),
(244,-11,o),
(298,18,o),
(333,59,o),
(349,103,o),
(349,117,qs),
(349,119,o),
(347,129,o),
(342,139,o),
(332,147,o),
(324,147,qs),
(312,147,o),
(298,139,o),
(290,126,o),
(285,110,o),
(282,102,qs),
(279,94,o),
(271,76,o),
(257,60,o),
(237,49,o),
(221,49,qs),
(203,49,o),
(182,69,o),
(171,100,o),
(167,136,o),
(167,152,qs),
(167,406,l),
(201,408,o),
(276,410,o),
(312,414,q),
(321,416,o),
(339,429,o),
(339,443,qs),
(339,459,o),
(315,472,o),
(303,472,qs),
(297,472,o),
(259,471,o),
(214,469,o),
(174,468,o),
(167,468,q),
(167,575,ls),
(167,605,o),
(147,618,o),
(134,618,qs),
(129,618,o),
(107,610,o),
(102,590,qs),
(97,570,o),
(96,521,o),
(96,500,qs),
(96,483,o),
(88,468,o),
(68,466,qs),
(17,461,ls),
(3,459,o),
(-17,446,o),
(-17,432,qs),
(-17,414,o),
(6,402,o),
(12,402,qs),
(30,402,o),
(78,404,o),
(97,404,q),
(95,165,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 3 1 0 0 2 83 0 2 2 23 67 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 91 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 1 2 1 106 0 0 3 5 3 0 5 104 0 5 4 3 5 4 102 0 2 0 3 0 2 3 91 0 4 4 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
40 40 37 38 99 46 64 7 22
CALL[ ]	/* CallFunction */";
};
width = 359;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(87,151,o),
(88,117,o),
(94,80,o),
(105,45,o),
(115,30,qs),
(142,-11,o),
(199,-11,qs),
(236,-11,o),
(290,18,o),
(325,59,o),
(341,103,o),
(341,117,qs),
(341,122,o),
(337,137,o),
(326,137,qs),
(315,137,o),
(309,118,o),
(304,102,qs),
(300,88,o),
(285,59,o),
(262,35,o),
(228,19,o),
(206,19,qs),
(177,19,o),
(146,45,o),
(131,84,o),
(129,131,o),
(129,152,qs),
(129,426,l),
(170,428,o),
(260,430,o),
(304,434,qs),
(313,435,o),
(321,444,o),
(321,449,qs),
(321,462,o),
(295,462,qs),
(288,462,o),
(241,461,o),
(187,459,o),
(138,458,o),
(129,458,q),
(129,575,ls),
(129,605,o),
(121,618,o),
(113,618,qs),
(108,618,o),
(100,610,o),
(95,590,qs),
(90,570,o),
(88,521,o),
(88,500,qs),
(88,478,o),
(80,458,o),
(60,456,qs),
(9,450,ls),
(-5,448,o),
(-15,441,o),
(-15,436,qs),
(-15,428,o),
(-2,422,o),
(4,422,qs),
(22,422,o),
(70,424,o),
(89,424,q),
(87,165,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 3 1 0 0 2 83 0 2 2 23 67 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 91 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 1 2 1 106 0 0 3 5 3 0 5 104 0 5 4 3 5 4 102 0 2 0 3 0 2 3 91 0 4 4 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 38 37 37 99 46 64 7 22
CALL[ ]	/* CallFunction */";
};
width = 349;
}
);
note = t;
unicode = 116;
},
{
glyphname = tbar;
kernLeft = t;
kernRight = c_t;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,151,o),
(107,117,o),
(113,81,o),
(124,45,o),
(134,30,qs),
(161,-11,o),
(224,-11,qs),
(258,-11,o),
(309,9,o),
(344,43,o),
(361,88,o),
(361,114,qs),
(361,131,o),
(346,150,o),
(328,150,qs),
(311,150,o),
(293,138,o),
(289,121,qs),
(281,89,o),
(263,67,o),
(241,67,qs),
(219,67,o),
(199,102,o),
(199,152,qs),
(199,228,l),
(237,228,o),
(300,229,o),
(317,229,qs),
(338,229,o),
(353,256,o),
(353,273,qs),
(353,290,o),
(335,312,o),
(325,312,qs),
(308,312,o),
(236,310,o),
(199,309,q),
(199,394,l),
(228,396,o),
(292,400,o),
(323,402,qs),
(333,403,o),
(357,420,o),
(357,439,qs),
(357,460,o),
(326,478,o),
(314,478,qs),
(309,478,o),
(276,477,o),
(238,475,o),
(205,474,o),
(199,474,q),
(199,575,ls),
(199,605,o),
(172,621,o),
(156,621,qs),
(132,621,o),
(121,590,qs),
(115,574,o),
(112,524,o),
(110,500,qs),
(109,485,o),
(94,474,o),
(79,472,qs),
(28,465,ls),
(13,463,o),
(-13,449,o),
(-13,430,qs),
(-13,405,o),
(10,390,o),
(23,390,qs),
(41,390,o),
(89,392,o),
(108,392,q),
(108,309,l),
(83,310,o),
(35,311,o),
(25,311,qs),
(17,311,o),
(-8,287,o),
(-8,270,qs),
(-8,261,o),
(0,246,o),
(10,235,o),
(22,228,o),
(25,228,qs),
(106,228,l),
(106,165,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
26 1 4 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 3 4 3 106 0 9 0 8 0 9 8 104 6 1 1 7 1 0 9 1 0 91 5 1 2 2 4 83 0 4 4 23 67 0 8 8 10 84 0 10 10 24 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 3 4 3 106 0 9 0 8 0 9 8 104 0 4 5 1 2 1 4 2 91 6 1 1 7 1 0 9 1 0 91 0 8 8 10 84 0 10 10 24 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 3 4 3 106 0 2 5 1 5 2 1 104 0 9 0 8 0 9 8 104 0 4 0 5 2 4 5 89 6 1 1 7 1 0 9 1 0 91 0 8 8 10 84 0 10 10 24 10 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
81 79 73 71 35 68 65 53 99 45 65 70 32 11 24
CALL[ ]	/* CallFunction */";
};
width = 373;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(264,302,o),
(213,301,o),
(161,300,o),
(140,300,qs),
(127,300,o),
(92,301,o),
(56,301,o),
(26,302,o),
(19,302,qs),
(11,302,o),
(-7,283,o),
(-7,270,qs),
(-7,257,o),
(12,237,o),
(19,237,qs),
(37,237,o),
(117,237,o),
(208,238,o),
(291,238,o),
(311,238,qs),
(328,238,o),
(340,261,o),
(340,273,qs),
(340,286,o),
(327,303,o),
(319,303,qs),
(307,303,o)
);
},
{
closed = 1;
nodes = (
(101,151,o),
(102,117,o),
(108,80,o),
(119,45,o),
(129,30,qs),
(156,-11,o),
(213,-11,qs),
(250,-11,o),
(304,18,o),
(339,59,o),
(355,103,o),
(355,117,qs),
(355,119,o),
(353,129,o),
(348,139,o),
(338,147,o),
(330,147,qs),
(318,147,o),
(304,139,o),
(296,126,o),
(291,110,o),
(288,102,qs),
(285,94,o),
(277,76,o),
(263,60,o),
(243,49,o),
(227,49,qs),
(209,49,o),
(188,69,o),
(177,100,o),
(173,136,o),
(173,152,qs),
(173,406,l),
(207,408,o),
(282,410,o),
(318,414,q),
(327,416,o),
(345,429,o),
(345,443,qs),
(345,459,o),
(321,472,o),
(309,472,qs),
(303,472,o),
(265,471,o),
(220,469,o),
(180,468,o),
(173,468,q),
(173,575,ls),
(173,605,o),
(153,618,o),
(140,618,qs),
(135,618,o),
(113,610,o),
(108,590,qs),
(103,570,o),
(102,521,o),
(102,500,qs),
(102,483,o),
(94,468,o),
(74,466,qs),
(23,461,ls),
(9,459,o),
(-11,446,o),
(-11,432,qs),
(-11,414,o),
(12,402,o),
(18,402,qs),
(36,402,o),
(84,404,o),
(103,404,q),
(101,165,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 4 3 106 0 7 1 6 1 7 6 104 9 1 0 0 1 7 0 1 92 5 1 2 2 4 83 0 4 4 23 67 0 6 6 8 83 0 8 8 24 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 3 4 3 106 0 7 1 6 1 7 6 104 0 4 5 1 2 0 4 2 91 9 1 0 0 1 7 0 1 92 0 6 6 8 83 0 8 8 24 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 3 4 3 106 0 2 5 0 5 2 0 104 0 7 1 6 1 7 6 104 0 4 0 5 2 4 5 91 9 1 0 0 1 7 0 1 92 0 6 6 8 83 0 8 8 24 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
1 0 91 89 81 79 71 69 64 62 56 50 47 45 31 27 12 5 0 26 1 16 10 15
CALL[ ]	/* CallFunction */";
};
width = 366;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(93,151,o),
(94,117,o),
(100,80,o),
(111,45,o),
(121,30,qs),
(148,-11,o),
(205,-11,qs),
(242,-11,o),
(296,18,o),
(331,59,o),
(347,103,o),
(347,117,qs),
(347,122,o),
(343,137,o),
(332,137,qs),
(321,137,o),
(315,118,o),
(310,102,qs),
(306,88,o),
(291,59,o),
(268,35,o),
(234,19,o),
(212,19,qs),
(183,19,o),
(152,45,o),
(137,84,o),
(135,131,o),
(135,152,qs),
(135,252,l),
(185,252,o),
(280,253,o),
(303,253,qs),
(314,253,o),
(322,268,o),
(322,273,qs),
(322,278,o),
(315,288,o),
(311,288,qs),
(299,288,o),
(256,287,o),
(207,286,o),
(156,285,o),
(135,285,q),
(135,426,l),
(176,428,o),
(266,430,o),
(310,434,qs),
(319,435,o),
(327,444,o),
(327,449,qs),
(327,462,o),
(301,462,qs),
(294,462,o),
(247,461,o),
(193,459,o),
(144,458,o),
(135,458,q),
(135,575,ls),
(135,605,o),
(127,618,o),
(119,618,qs),
(114,618,o),
(106,610,o),
(101,590,qs),
(96,570,o),
(94,521,o),
(94,500,qs),
(94,478,o),
(86,458,o),
(66,456,qs),
(15,450,ls),
(1,448,o),
(-9,441,o),
(-9,436,qs),
(-9,428,o),
(4,422,o),
(10,422,qs),
(28,422,o),
(75,424,o),
(94,424,q),
(94,285,l),
(69,286,o),
(21,287,o),
(11,287,qs),
(3,287,o),
(-5,275,o),
(-5,270,qs),
(-5,265,o),
(4,252,o),
(11,252,qs),
(93,252,l),
(93,165,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 3 4 3 106 0 9 0 8 0 9 8 104 6 1 1 7 1 0 9 1 0 91 5 1 2 2 4 83 0 4 4 23 67 0 8 8 10 83 0 10 10 24 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 3 4 3 106 0 9 0 8 0 9 8 104 0 4 5 1 2 1 4 2 91 6 1 1 7 1 0 9 1 0 91 0 8 8 10 83 0 10 10 24 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 3 4 3 106 0 2 5 1 5 2 1 104 0 9 0 8 0 9 8 104 0 4 0 5 2 4 5 91 6 1 1 7 1 0 9 1 0 91 0 8 8 10 83 0 10 10 24 10 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
85 83 77 75 37 68 97 37 99 46 65 68 32 11 24
CALL[ ]	/* CallFunction */";
};
width = 356;
}
);
note = tbar;
unicode = 359;
},
{
glyphname = tcaron;
kernLeft = t;
kernRight = c_t;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(232,611,o),
(246,601,o),
(257,592,o),
(257,586,qs),
(257,556,o),
(242,527,o),
(242,517,qs),
(242,500,o),
(263,494,o),
(268,494,qs),
(274,494,o),
(301,509,o),
(328,538,o),
(349,583,o),
(349,613,qs),
(349,656,o),
(305,694,o),
(281,694,qs),
(248,694,o),
(221,657,o),
(221,636,qs),
(221,624,o)
);
},
{
closed = 1;
nodes = (
(101,151,o),
(102,117,o),
(108,81,o),
(119,45,o),
(129,30,qs),
(156,-11,o),
(219,-11,qs),
(253,-11,o),
(304,9,o),
(339,43,o),
(356,88,o),
(356,114,qs),
(356,131,o),
(341,150,o),
(323,150,qs),
(306,150,o),
(288,138,o),
(284,121,qs),
(276,89,o),
(258,67,o),
(236,67,qs),
(214,67,o),
(194,102,o),
(194,152,qs),
(194,394,l),
(223,396,o),
(287,400,o),
(318,402,qs),
(328,403,o),
(352,420,o),
(352,439,qs),
(352,460,o),
(321,478,o),
(309,478,qs),
(304,478,o),
(271,477,o),
(233,475,o),
(200,474,o),
(194,474,q),
(194,575,ls),
(194,605,o),
(167,621,o),
(151,621,qs),
(127,621,o),
(116,590,qs),
(110,574,o),
(107,524,o),
(105,500,qs),
(104,485,o),
(89,474,o),
(74,472,qs),
(23,465,ls),
(8,463,o),
(-18,449,o),
(-18,430,qs),
(-18,405,o),
(5,390,o),
(18,390,qs),
(36,390,o),
(84,392,o),
(103,392,q),
(101,165,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
35 1 1 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 3 0 106 0 3 1 3 106 0 1 4 1 106 0 7 2 6 2 7 6 104 5 1 2 2 4 83 0 4 4 23 67 0 6 6 8 84 0 8 8 24 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 3 0 106 0 3 1 3 106 0 1 4 1 106 0 7 2 6 2 7 6 104 0 4 5 1 2 7 4 2 92 0 6 6 8 84 0 8 8 24 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 0 3 0 106 0 3 1 3 106 0 1 4 1 106 0 2 5 7 5 2 7 104 0 7 6 5 7 6 102 0 4 0 5 2 4 5 90 0 6 6 8 84 0 8 8 24 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 36 35 53 99 45 74 38 34 9 24
CALL[ ]	/* CallFunction */";
};
width = 366;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
ref = .ttfautohint;
},
{
alignment = -1;
ref = t;
},
{
alignment = -1;
pos = (145,590);
ref = comma;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 7 1 7 106 0 1 8 1 106 0 8 2 8 106 0 5 0 4 0 5 4 104 3 1 0 0 2 83 0 2 2 23 67 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 7 1 7 106 0 1 8 1 106 0 8 2 8 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 92 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 7 1 7 106 0 1 8 1 106 0 8 2 8 106 0 0 3 5 3 0 5 104 0 5 4 3 5 4 102 0 2 0 3 0 2 3 92 0 4 4 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 41 40 40 37 38 99 46 65 9 35
CALL[ ]	/* CallFunction */";
};
width = 359;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(87,151,o),
(88,117,o),
(94,80,o),
(105,45,o),
(115,30,qs),
(142,-11,o),
(199,-11,qs),
(236,-11,o),
(290,18,o),
(325,59,o),
(341,103,o),
(341,117,qs),
(341,122,o),
(337,137,o),
(326,137,qs),
(315,137,o),
(309,118,o),
(304,102,qs),
(300,88,o),
(285,59,o),
(262,35,o),
(228,19,o),
(206,19,qs),
(177,19,o),
(146,45,o),
(131,84,o),
(129,131,o),
(129,152,qs),
(129,426,l),
(170,428,o),
(260,430,o),
(304,434,qs),
(313,435,o),
(321,444,o),
(321,449,qs),
(321,462,o),
(295,462,qs),
(288,462,o),
(241,461,o),
(187,459,o),
(138,458,o),
(129,458,q),
(129,575,ls),
(129,605,o),
(121,618,o),
(113,618,qs),
(108,618,o),
(100,610,o),
(95,590,qs),
(90,570,o),
(88,521,o),
(88,500,qs),
(88,478,o),
(80,458,o),
(60,456,qs),
(9,450,ls),
(-5,448,o),
(-15,441,o),
(-15,436,qs),
(-15,428,o),
(-2,422,o),
(4,422,qs),
(22,422,o),
(70,424,o),
(89,424,q),
(87,165,ls)
);
},
{
closed = 1;
nodes = (
(209,590,o),
(219,580,o),
(227,572,o),
(227,567,qs),
(227,556,o),
(208,533,o),
(208,525,qs),
(208,519,o),
(219,510,o),
(224,510,qs),
(237,510,o),
(257,531,o),
(271,560,o),
(279,591,o),
(279,601,qs),
(279,621,o),
(256,645,o),
(237,645,qs),
(221,645,o),
(201,625,o),
(201,611,qs),
(201,602,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 7 1 7 106 0 1 8 1 106 0 8 2 8 106 0 5 0 4 0 5 4 104 3 1 0 0 2 83 0 2 2 23 67 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 7 1 7 106 0 1 8 1 106 0 8 2 8 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 92 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 7 1 7 106 0 1 8 1 106 0 8 2 8 106 0 0 3 5 3 0 5 104 0 5 4 3 5 4 102 0 2 0 3 0 2 3 92 0 4 4 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 41 38 38 37 37 99 46 64 9 24
CALL[ ]	/* CallFunction */";
};
width = 349;
}
);
note = tcaron;
unicode = 357;
},
{
glyphname = u;
kernLeft = u;
kernRight = u;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(436,165,o),
(413,117,o),
(375,80,o),
(325,58,o),
(297,58,qs),
(261,58,o),
(223,94,o),
(205,149,o),
(202,214,o),
(202,243,qs),
(202,265,o),
(203,318,o),
(205,370,o),
(206,414,o),
(206,427,qs),
(206,443,o),
(199,461,o),
(180,470,o),
(147,472,o),
(121,472,qs),
(89,472,o),
(46,467,o),
(20,458,o),
(10,442,o),
(10,432,qs),
(10,409,o),
(36,399,o),
(55,399,qs),
(79,399,ls),
(102,399,o),
(111,384,o),
(111,361,qs),
(111,187,ls),
(111,148,o),
(127,73,o),
(166,15,o),
(228,-20,o),
(275,-20,qs),
(310,-20,o),
(364,-1,o),
(403,29,o),
(429,65,o),
(436,81,q),
(436,50,o),
(438,10,o),
(444,-13,o),
(456,-22,o),
(466,-22,qs),
(517,-22,o),
(575,-16,o),
(603,-5,o),
(609,11,o),
(609,22,qs),
(609,38,o),
(596,51,o),
(586,53,qs),
(582,54,o),
(563,55,o),
(556,55,qs),
(539,55,o),
(528,67,o),
(528,78,qs),
(528,81,o),
(527,116,o),
(527,156,qs),
(527,213,o),
(528,290,o),
(529,342,o),
(530,372,o),
(530,383,qs),
(530,401,o),
(521,421,o),
(500,430,o),
(464,432,o),
(436,432,qs),
(400,432,o),
(356,426,o),
(332,415,o),
(324,400,o),
(324,390,qs),
(324,376,o),
(341,359,o),
(358,359,qs),
(411,359,ls),
(429,359,o),
(438,335,o),
(438,318,qs),
(436,191,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
44 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 6 0 5 0 6 5 91 0 1 0 0 2 1 0 91 7 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
44 54 55 40 40 61 54 50 8 23
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(429,152,o),
(405,102,o),
(364,63,o),
(311,40,o),
(281,40,qs),
(241,40,o),
(198,80,o),
(178,140,o),
(175,211,o),
(175,243,qs),
(175,265,o),
(176,318,o),
(178,370,o),
(179,414,o),
(179,427,qs),
(179,443,o),
(174,461,o),
(160,470,o),
(135,472,o),
(115,472,qs),
(52,472,o),
(-21,458,o),
(-21,442,qs),
(-21,428,o),
(5,420,o),
(20,420,qs),
(73,420,ls),
(96,420,o),
(105,405,o),
(105,382,qs),
(105,187,ls),
(105,148,o),
(121,73,o),
(160,15,o),
(222,-20,o),
(269,-20,qs),
(304,-20,o),
(358,-1,o),
(397,29,o),
(423,65,o),
(430,81,q),
(431,22,o),
(439,-22,o),
(450,-22,qs),
(492,-22,o),
(548,-18,o),
(582,-9,o),
(596,5,o),
(596,15,qs),
(596,39,o),
(560,39,qs),
(544,39,o),
(533,38,o),
(529,38,qs),
(512,38,o),
(501,49,o),
(501,60,qs),
(501,64,o),
(500,106,o),
(500,156,qs),
(500,213,o),
(501,290,o),
(502,342,o),
(503,372,o),
(503,383,qs),
(503,401,o),
(496,421,o),
(480,430,o),
(452,432,o),
(430,432,qs),
(358,432,o),
(295,417,o),
(295,398,qs),
(295,380,o),
(329,380,qs),
(405,380,ls),
(432,380,o),
(432,339,qs),
(429,180,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
37 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 3 2 2 2 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 7 0 6 0 7 6 91 0 1 0 0 2 1 0 91 8 3 2 2 2 4 83 5 1 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
45 36 55 38 37 33 46 35 49 9 24
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(421,138,o),
(394,79,o),
(350,35,o),
(291,10,o),
(258,10,qs),
(213,10,o),
(163,56,o),
(141,125,o),
(137,207,o),
(137,243,qs),
(137,265,o),
(138,318,o),
(140,370,o),
(141,414,o),
(141,427,qs),
(141,458,o),
(128,472,o),
(107,472,qs),
(98,472,o),
(57,471,o),
(14,467,o),
(-19,459,o),
(-19,452,qs),
(-19,449,o),
(-11,440,o),
(-2,440,qs),
(65,440,ls),
(88,440,o),
(97,425,o),
(97,402,qs),
(97,187,ls),
(97,148,o),
(113,73,o),
(152,15,o),
(214,-20,o),
(261,-20,qs),
(296,-20,o),
(350,-1,o),
(389,29,o),
(415,65,o),
(422,81,q),
(423,22,o),
(431,-22,o),
(442,-22,qs),
(458,-22,o),
(505,-21,o),
(548,-17,o),
(578,-9,o),
(578,-1,qs),
(578,5,o),
(560,10,o),
(551,10,qs),
(527,10,o),
(497,9,o),
(491,9,qs),
(474,9,o),
(463,20,o),
(463,30,qs),
(463,35,o),
(462,90,o),
(462,156,qs),
(462,213,o),
(463,290,o),
(464,342,o),
(465,372,o),
(465,383,qs),
(465,401,o),
(461,421,o),
(451,430,o),
(435,432,o),
(422,432,qs),
(409,432,o),
(367,431,o),
(326,427,o),
(297,418,o),
(297,411,qs),
(297,400,o),
(331,400,qs),
(397,400,ls),
(414,400,o),
(424,386,o),
(424,359,qs),
(421,172,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 6 0 5 1 6 5 91 0 1 0 0 2 1 0 91 7 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
43 53 55 38 53 94 52 50 8 23
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = u;
unicode = 117;
},
{
glyphname = uacute;
kernLeft = u;
kernRight = u;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(348,673,o),
(316,674,qs),
(297,674,o),
(254,625,o),
(218,564,o),
(194,511,o),
(194,508,qs),
(194,497,o),
(220,486,o),
(231,486,qs),
(240,486,o),
(270,502,o),
(304,527,o),
(340,559,o),
(368,590,o),
(386,617,o),
(386,626,qs),
(386,645,o)
);
},
{
closed = 1;
nodes = (
(436,165,o),
(413,117,o),
(375,80,o),
(325,58,o),
(297,58,qs),
(261,58,o),
(223,94,o),
(205,149,o),
(202,214,o),
(202,243,qs),
(202,265,o),
(203,318,o),
(205,370,o),
(206,414,o),
(206,427,qs),
(206,443,o),
(199,461,o),
(180,470,o),
(147,472,o),
(121,472,qs),
(89,472,o),
(46,467,o),
(20,458,o),
(10,442,o),
(10,432,qs),
(10,409,o),
(36,399,o),
(55,399,qs),
(79,399,ls),
(102,399,o),
(111,384,o),
(111,361,qs),
(111,187,ls),
(111,148,o),
(127,73,o),
(166,15,o),
(228,-20,o),
(275,-20,qs),
(310,-20,o),
(364,-1,o),
(403,29,o),
(429,65,o),
(436,81,q),
(436,50,o),
(438,10,o),
(444,-13,o),
(456,-22,o),
(466,-22,qs),
(517,-22,o),
(575,-16,o),
(603,-5,o),
(609,11,o),
(609,22,qs),
(609,38,o),
(596,51,o),
(586,53,qs),
(582,54,o),
(563,55,o),
(556,55,qs),
(539,55,o),
(528,67,o),
(528,78,qs),
(528,81,o),
(527,116,o),
(527,156,qs),
(527,213,o),
(528,290,o),
(529,342,o),
(530,372,o),
(530,383,qs),
(530,401,o),
(521,421,o),
(500,430,o),
(464,432,o),
(436,432,qs),
(400,432,o),
(356,426,o),
(332,415,o),
(324,400,o),
(324,390,qs),
(324,376,o),
(341,359,o),
(358,359,qs),
(411,359,ls),
(429,359,o),
(438,335,o),
(438,318,qs),
(436,191,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
62 1 4 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 1 106 0 0 8 0 106 0 7 7 8 83 0 8 8 23 67 0 2 2 3 83 0 3 3 15 67 9 1 4 4 5 83 6 1 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 1 0 1 106 0 0 8 0 106 0 8 0 7 2 8 7 91 0 3 0 2 4 3 2 92 9 1 4 4 5 83 6 1 5 5 21 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
101 99 54 55 40 40 61 54 52 38 38 10 24
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(335,661,o),
(312,661,qs),
(302,661,o),
(279,640,o),
(254,609,o),
(230,572,o),
(212,539,o),
(201,515,o),
(201,513,qs),
(201,503,o),
(218,495,o),
(226,495,qs),
(237,495,o),
(282,527,o),
(327,569,o),
(361,612,o),
(361,623,qs),
(361,640,o)
);
},
{
closed = 1;
nodes = (
(429,152,o),
(405,102,o),
(364,63,o),
(311,40,o),
(281,40,qs),
(241,40,o),
(198,80,o),
(178,140,o),
(175,211,o),
(175,243,qs),
(175,265,o),
(176,318,o),
(178,370,o),
(179,414,o),
(179,427,qs),
(179,443,o),
(174,461,o),
(160,470,o),
(135,472,o),
(115,472,qs),
(52,472,o),
(-21,458,o),
(-21,442,qs),
(-21,428,o),
(5,420,o),
(20,420,qs),
(73,420,ls),
(96,420,o),
(105,405,o),
(105,382,qs),
(105,187,ls),
(105,148,o),
(121,73,o),
(160,15,o),
(222,-20,o),
(269,-20,qs),
(304,-20,o),
(358,-1,o),
(397,29,o),
(423,65,o),
(430,81,q),
(431,22,o),
(439,-22,o),
(450,-22,qs),
(492,-22,o),
(548,-18,o),
(582,-9,o),
(596,5,o),
(596,15,qs),
(596,39,o),
(560,39,qs),
(544,39,o),
(533,38,o),
(529,38,qs),
(512,38,o),
(501,49,o),
(501,60,qs),
(501,64,o),
(500,106,o),
(500,156,qs),
(500,213,o),
(501,290,o),
(502,342,o),
(503,372,o),
(503,383,qs),
(503,401,o),
(496,421,o),
(480,430,o),
(452,432,o),
(430,432,qs),
(358,432,o),
(295,417,o),
(295,398,qs),
(295,380,o),
(329,380,qs),
(405,380,ls),
(432,380,o),
(432,339,qs),
(429,180,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
55 1 4 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 0 9 0 106 0 8 8 9 83 0 9 9 23 67 0 2 2 3 83 0 3 3 15 67 10 5 2 4 4 6 83 7 1 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 1 0 1 106 0 0 9 0 106 0 9 0 8 2 9 8 91 0 3 0 2 4 3 2 92 10 5 2 4 4 6 83 7 1 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
92 90 77 75 55 38 37 33 46 35 51 40 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(421,138,o),
(394,79,o),
(350,35,o),
(291,10,o),
(258,10,qs),
(213,10,o),
(163,56,o),
(141,125,o),
(137,207,o),
(137,243,qs),
(137,265,o),
(138,318,o),
(140,370,o),
(141,414,o),
(141,427,qs),
(141,458,o),
(128,472,o),
(107,472,qs),
(98,472,o),
(57,471,o),
(14,467,o),
(-19,459,o),
(-19,452,qs),
(-19,449,o),
(-11,440,o),
(-2,440,qs),
(65,440,ls),
(88,440,o),
(97,425,o),
(97,402,qs),
(97,187,ls),
(97,148,o),
(113,73,o),
(152,15,o),
(214,-20,o),
(261,-20,qs),
(296,-20,o),
(350,-1,o),
(389,29,o),
(415,65,o),
(422,81,q),
(423,22,o),
(431,-22,o),
(442,-22,qs),
(458,-22,o),
(505,-21,o),
(548,-17,o),
(578,-9,o),
(578,-1,qs),
(578,5,o),
(560,10,o),
(551,10,qs),
(527,10,o),
(497,9,o),
(491,9,qs),
(474,9,o),
(463,20,o),
(463,30,qs),
(463,35,o),
(462,90,o),
(462,156,qs),
(462,213,o),
(463,290,o),
(464,342,o),
(465,372,o),
(465,383,qs),
(465,401,o),
(461,421,o),
(451,430,o),
(435,432,o),
(422,432,qs),
(409,432,o),
(367,431,o),
(326,427,o),
(297,418,o),
(297,411,qs),
(297,400,o),
(331,400,qs),
(397,400,ls),
(414,400,o),
(424,386,o),
(424,359,qs),
(421,172,ls)
);
},
{
closed = 1;
nodes = (
(315,640,o),
(307,640,qs),
(300,640,o),
(268,610,o),
(236,570,o),
(212,530,o),
(212,521,qs),
(212,510,o),
(220,510,qs),
(227,510,o),
(262,538,o),
(298,574,o),
(326,610,o),
(326,618,qs),
(326,632,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 9 8 9 106 0 8 6 8 106 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 9 8 9 106 0 8 6 8 106 0 6 0 5 1 6 5 91 0 1 0 0 2 1 0 92 7 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
96 94 41 43 53 55 38 53 94 52 50 10 24
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = uacute;
unicode = 250;
},
{
glyphname = ubreve;
kernLeft = u;
kernRight = u;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(436,165,o),
(413,117,o),
(375,80,o),
(325,58,o),
(297,58,qs),
(261,58,o),
(223,94,o),
(205,149,o),
(202,214,o),
(202,243,qs),
(202,265,o),
(203,318,o),
(205,370,o),
(206,414,o),
(206,427,qs),
(206,443,o),
(199,461,o),
(180,470,o),
(147,472,o),
(121,472,qs),
(89,472,o),
(46,467,o),
(20,458,o),
(10,442,o),
(10,432,qs),
(10,409,o),
(36,399,o),
(55,399,qs),
(79,399,ls),
(102,399,o),
(111,384,o),
(111,361,qs),
(111,187,ls),
(111,148,o),
(127,73,o),
(166,15,o),
(228,-20,o),
(275,-20,qs),
(310,-20,o),
(364,-1,o),
(403,29,o),
(429,65,o),
(436,81,q),
(436,50,o),
(438,10,o),
(444,-13,o),
(456,-22,o),
(466,-22,qs),
(517,-22,o),
(575,-16,o),
(603,-5,o),
(609,11,o),
(609,22,qs),
(609,38,o),
(596,51,o),
(586,53,qs),
(582,54,o),
(563,55,o),
(556,55,qs),
(539,55,o),
(528,67,o),
(528,78,qs),
(528,81,o),
(527,116,o),
(527,156,qs),
(527,213,o),
(528,290,o),
(529,342,o),
(530,372,o),
(530,383,qs),
(530,401,o),
(521,421,o),
(500,430,o),
(464,432,o),
(436,432,qs),
(400,432,o),
(356,426,o),
(332,415,o),
(324,400,o),
(324,390,qs),
(324,376,o),
(341,359,o),
(358,359,qs),
(411,359,ls),
(429,359,o),
(438,335,o),
(438,318,qs),
(436,191,ls)
);
},
{
closed = 1;
nodes = (
(391,619,o),
(376,619,qs),
(363,619,o),
(344,601,o),
(344,590,qs),
(344,582,o),
(317,567,o),
(288,567,qs),
(279,567,o),
(258,569,o),
(240,575,o),
(229,584,o),
(229,590,qs),
(229,607,o),
(210,619,o),
(193,619,qs),
(176,619,o),
(161,602,o),
(161,589,qs),
(161,557,o),
(228,510,o),
(293,510,qs),
(312,510,o),
(355,520,o),
(391,540,o),
(414,569,o),
(414,589,qs),
(414,609,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
44 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
11 1 9 10 9 106 0 10 0 8 6 10 8 91 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
11 1 9 10 9 106 0 10 0 8 6 10 8 91 0 6 0 5 0 6 5 91 0 1 0 0 2 1 0 92 7 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
114 112 108 106 100 98 41 44 54 55 40 40 61 54 50 12 24
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
ref = .ttfautohint;
},
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (167,0);
ref = breve;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
38 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
12 1 10 11 10 106 0 11 0 9 7 11 9 91 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 3 2 2 2 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
12 1 10 11 10 106 0 11 0 9 7 11 9 91 0 7 0 6 0 7 6 91 0 1 0 0 2 1 0 92 8 3 2 2 2 4 83 5 1 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
105 103 99 97 91 89 86 84 45 36 55 38 37 33 46 35 50 13 35
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(421,138,o),
(394,79,o),
(350,35,o),
(291,10,o),
(258,10,qs),
(213,10,o),
(163,56,o),
(141,125,o),
(137,207,o),
(137,243,qs),
(137,265,o),
(138,318,o),
(140,370,o),
(141,414,o),
(141,427,qs),
(141,458,o),
(128,472,o),
(107,472,qs),
(98,472,o),
(57,471,o),
(14,467,o),
(-19,459,o),
(-19,452,qs),
(-19,449,o),
(-11,440,o),
(-2,440,qs),
(65,440,ls),
(88,440,o),
(97,425,o),
(97,402,qs),
(97,187,ls),
(97,148,o),
(113,73,o),
(152,15,o),
(214,-20,o),
(261,-20,qs),
(296,-20,o),
(350,-1,o),
(389,29,o),
(415,65,o),
(422,81,q),
(423,22,o),
(431,-22,o),
(442,-22,qs),
(458,-22,o),
(505,-21,o),
(548,-17,o),
(578,-9,o),
(578,-1,qs),
(578,5,o),
(560,10,o),
(551,10,qs),
(527,10,o),
(497,9,o),
(491,9,qs),
(474,9,o),
(463,20,o),
(463,30,qs),
(463,35,o),
(462,90,o),
(462,156,qs),
(462,213,o),
(463,290,o),
(464,342,o),
(465,372,o),
(465,383,qs),
(465,401,o),
(461,421,o),
(451,430,o),
(435,432,o),
(422,432,qs),
(409,432,o),
(367,431,o),
(326,427,o),
(297,418,o),
(297,411,qs),
(297,400,o),
(331,400,qs),
(397,400,ls),
(414,400,o),
(424,386,o),
(424,359,qs),
(421,172,ls)
);
},
{
closed = 1;
nodes = (
(372,613,o),
(364,613,qs),
(347,613,o),
(347,590,qs),
(347,580,o),
(334,560,o),
(312,545,o),
(285,535,o),
(272,535,qs),
(243,535,o),
(198,559,o),
(198,590,qs),
(198,602,o),
(192,613,o),
(181,613,qs),
(164,613,o),
(164,589,qs),
(164,574,o),
(181,546,o),
(210,523,o),
(249,510,o),
(272,510,qs),
(291,510,o),
(331,521,o),
(363,541,o),
(383,571,o),
(383,589,qs),
(383,605,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
11 1 9 10 9 106 0 10 0 8 6 10 8 91 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
11 1 9 10 9 106 0 10 0 8 6 10 8 91 0 6 0 5 1 6 5 91 0 1 0 0 2 1 0 92 7 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
109 107 102 100 96 94 41 43 53 55 38 53 94 52 50 12 24
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = ubreve;
unicode = 365;
},
{
glyphname = ucircumflex;
kernLeft = u;
kernRight = u;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(416,523,o),
(416,531,qs),
(416,547,o),
(381,592,o),
(335,634,o),
(292,664,o),
(283,664,qs),
(276,664,o),
(233,635,o),
(187,592,o),
(151,543,o),
(151,524,qs),
(151,519,o),
(158,510,o),
(164,510,qs),
(169,510,o),
(195,523,o),
(228,542,o),
(266,563,o),
(283,572,q),
(300,563,o),
(338,542,o),
(372,523,o),
(398,510,o),
(403,510,qs),
(410,510,o)
);
},
{
closed = 1;
nodes = (
(436,165,o),
(413,117,o),
(375,80,o),
(325,58,o),
(297,58,qs),
(261,58,o),
(223,94,o),
(205,149,o),
(202,214,o),
(202,243,qs),
(202,265,o),
(203,318,o),
(205,370,o),
(206,414,o),
(206,427,qs),
(206,443,o),
(199,461,o),
(180,470,o),
(147,472,o),
(121,472,qs),
(89,472,o),
(46,467,o),
(20,458,o),
(10,442,o),
(10,432,qs),
(10,409,o),
(36,399,o),
(55,399,qs),
(79,399,ls),
(102,399,o),
(111,384,o),
(111,361,qs),
(111,187,ls),
(111,148,o),
(127,73,o),
(166,15,o),
(228,-20,o),
(275,-20,qs),
(310,-20,o),
(364,-1,o),
(403,29,o),
(429,65,o),
(436,81,q),
(436,50,o),
(438,10,o),
(444,-13,o),
(456,-22,o),
(466,-22,qs),
(517,-22,o),
(575,-16,o),
(603,-5,o),
(609,11,o),
(609,22,qs),
(609,38,o),
(596,51,o),
(586,53,qs),
(582,54,o),
(563,55,o),
(556,55,qs),
(539,55,o),
(528,67,o),
(528,78,qs),
(528,81,o),
(527,116,o),
(527,156,qs),
(527,213,o),
(528,290,o),
(529,342,o),
(530,372,o),
(530,383,qs),
(530,401,o),
(521,421,o),
(500,430,o),
(464,432,o),
(436,432,qs),
(400,432,o),
(356,426,o),
(332,415,o),
(324,400,o),
(324,390,qs),
(324,376,o),
(341,359,o),
(358,359,qs),
(411,359,ls),
(429,359,o),
(438,335,o),
(438,318,qs),
(436,191,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
5 1 0 2 70 1 5 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 0 2 106 1 11 2 0 9 0 106 0 8 8 9 83 0 9 9 23 67 0 3 3 4 83 0 4 4 15 67 10 1 5 5 6 84 7 1 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 2 0 2 106 1 11 2 0 9 0 106 0 9 0 8 3 9 8 91 0 4 0 3 5 4 3 91 10 1 5 5 6 84 7 1 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 109 107 95 92 86 83 76 74 66 64 56 53 40 37 31 28 19 17 11 9 0 25 1 25 12 15
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
ref = .ttfautohint;
},
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (120,0);
ref = circumflex;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
85 1 9 11 38 1 2 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 11 9 11 106 10 12 2 9 7 9 106 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 3 2 2 2 4 84 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 11 9 11 106 10 12 2 9 7 9 106 0 7 0 6 0 7 6 91 0 1 0 0 2 1 0 91 8 3 2 2 2 4 84 5 1 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
81 80 98 96 91 89 80 104 81 104 45 36 55 38 37 33 46 35 50 13 35
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(421,138,o),
(394,79,o),
(350,35,o),
(291,10,o),
(258,10,qs),
(213,10,o),
(163,56,o),
(141,125,o),
(137,207,o),
(137,243,qs),
(137,265,o),
(138,318,o),
(140,370,o),
(141,414,o),
(141,427,qs),
(141,458,o),
(128,472,o),
(107,472,qs),
(98,472,o),
(57,471,o),
(14,467,o),
(-19,459,o),
(-19,452,qs),
(-19,449,o),
(-11,440,o),
(-2,440,qs),
(65,440,ls),
(88,440,o),
(97,425,o),
(97,402,qs),
(97,187,ls),
(97,148,o),
(113,73,o),
(152,15,o),
(214,-20,o),
(261,-20,qs),
(296,-20,o),
(350,-1,o),
(389,29,o),
(415,65,o),
(422,81,q),
(423,22,o),
(431,-22,o),
(442,-22,qs),
(458,-22,o),
(505,-21,o),
(548,-17,o),
(578,-9,o),
(578,-1,qs),
(578,5,o),
(560,10,o),
(551,10,qs),
(527,10,o),
(497,9,o),
(491,9,qs),
(474,9,o),
(463,20,o),
(463,30,qs),
(463,35,o),
(462,90,o),
(462,156,qs),
(462,213,o),
(463,290,o),
(464,342,o),
(465,372,o),
(465,383,qs),
(465,401,o),
(461,421,o),
(451,430,o),
(435,432,o),
(422,432,qs),
(409,432,o),
(367,431,o),
(326,427,o),
(297,418,o),
(297,411,qs),
(297,400,o),
(331,400,qs),
(397,400,ls),
(414,400,o),
(424,386,o),
(424,359,qs),
(421,172,ls)
);
},
{
closed = 1;
nodes = (
(397,521,qs),
(397,530,o),
(364,570,o),
(321,610,o),
(278,640,o),
(269,640,qs),
(260,640,o),
(219,610,o),
(175,570,o),
(142,530,o),
(142,521,qs),
(142,510,o),
(150,510,qs),
(155,510,o),
(181,528,o),
(214,554,o),
(252,584,o),
(269,596,q),
(286,584,o),
(324,554,o),
(358,528,o),
(384,510,o),
(389,510,qs),
(397,510,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
88 1 8 10 41 1 2 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 10 8 10 106 9 11 2 8 6 8 106 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 84 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 10 8 10 106 9 11 2 8 6 8 106 0 6 0 5 1 6 5 91 0 1 0 0 2 1 0 91 7 1 2 2 3 84 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
84 83 101 99 94 92 83 106 84 106 43 53 55 38 53 94 52 50 12 23
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = ucircumflex;
unicode = 251;
},
{
glyphname = udieresis;
kernLeft = u;
kernRight = u;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(153,509,o),
(178,509,qs),
(189,509,o),
(213,515,o),
(232,531,o),
(245,558,o),
(245,579,qs),
(245,606,o),
(209,640,o),
(185,640,qs),
(167,640,o),
(142,626,o),
(126,606,o),
(119,583,o),
(119,575,qs),
(119,546,o)
);
},
{
closed = 1;
nodes = (
(360,486,o),
(385,486,qs),
(396,486,o),
(420,492,o),
(439,508,o),
(452,535,o),
(452,556,qs),
(452,583,o),
(416,617,o),
(392,617,qs),
(374,617,o),
(349,603,o),
(333,583,o),
(326,560,o),
(326,552,qs),
(326,523,o)
);
},
{
closed = 1;
nodes = (
(436,165,o),
(413,117,o),
(375,80,o),
(325,58,o),
(297,58,qs),
(261,58,o),
(223,94,o),
(205,149,o),
(202,214,o),
(202,243,qs),
(202,265,o),
(203,318,o),
(205,370,o),
(206,414,o),
(206,427,qs),
(206,443,o),
(199,461,o),
(180,470,o),
(147,472,o),
(121,472,qs),
(89,472,o),
(46,467,o),
(20,458,o),
(10,442,o),
(10,432,qs),
(10,409,o),
(36,399,o),
(55,399,qs),
(79,399,ls),
(102,399,o),
(111,384,o),
(111,361,qs),
(111,187,ls),
(111,148,o),
(127,73,o),
(166,15,o),
(228,-20,o),
(275,-20,qs),
(310,-20,o),
(364,-1,o),
(403,29,o),
(429,65,o),
(436,81,q),
(436,50,o),
(438,10,o),
(444,-13,o),
(456,-22,o),
(466,-22,qs),
(517,-22,o),
(575,-16,o),
(603,-5,o),
(609,11,o),
(609,22,qs),
(609,38,o),
(596,51,o),
(586,53,qs),
(582,54,o),
(563,55,o),
(556,55,qs),
(539,55,o),
(528,67,o),
(528,78,qs),
(528,81,o),
(527,116,o),
(527,156,qs),
(527,213,o),
(528,290,o),
(529,342,o),
(530,372,o),
(530,383,qs),
(530,401,o),
(521,421,o),
(500,430,o),
(464,432,o),
(436,432,qs),
(400,432,o),
(356,426,o),
(332,415,o),
(324,400,o),
(324,390,qs),
(324,376,o),
(341,359,o),
(358,359,qs),
(411,359,ls),
(429,359,o),
(438,335,o),
(438,318,qs),
(436,191,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
76 1 6 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 10 2 3 91 0 9 9 10 83 0 10 10 23 67 0 4 4 5 83 0 5 5 15 67 11 1 6 6 7 83 8 1 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 10 2 3 91 0 10 0 9 4 10 9 91 0 5 0 4 6 5 4 91 11 1 6 6 7 83 8 1 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
115 113 101 98 92 89 40 40 61 54 52 38 38 38 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
ref = .ttfautohint;
},
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (108,0);
ref = dieresis;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
38 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 9 0 10 12 9 10 91 0 11 0 12 7 11 12 91 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 3 2 2 2 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 9 0 10 12 9 10 91 0 11 0 12 7 11 12 91 0 7 0 6 0 7 6 91 0 1 0 0 2 1 0 91 8 3 2 2 2 4 83 5 1 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
106 104 100 98 92 90 86 84 45 36 55 38 37 33 46 35 50 13 35
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(421,138,o),
(394,79,o),
(350,35,o),
(291,10,o),
(258,10,qs),
(213,10,o),
(163,56,o),
(141,125,o),
(137,207,o),
(137,243,qs),
(137,265,o),
(138,318,o),
(140,370,o),
(141,414,o),
(141,427,qs),
(141,458,o),
(128,472,o),
(107,472,qs),
(98,472,o),
(57,471,o),
(14,467,o),
(-19,459,o),
(-19,452,qs),
(-19,449,o),
(-11,440,o),
(-2,440,qs),
(65,440,ls),
(88,440,o),
(97,425,o),
(97,402,qs),
(97,187,ls),
(97,148,o),
(113,73,o),
(152,15,o),
(214,-20,o),
(261,-20,qs),
(296,-20,o),
(350,-1,o),
(389,29,o),
(415,65,o),
(422,81,q),
(423,22,o),
(431,-22,o),
(442,-22,qs),
(458,-22,o),
(505,-21,o),
(548,-17,o),
(578,-9,o),
(578,-1,qs),
(578,5,o),
(560,10,o),
(551,10,qs),
(527,10,o),
(497,9,o),
(491,9,qs),
(474,9,o),
(463,20,o),
(463,30,qs),
(463,35,o),
(462,90,o),
(462,156,qs),
(462,213,o),
(463,290,o),
(464,342,o),
(465,372,o),
(465,383,qs),
(465,401,o),
(461,421,o),
(451,430,o),
(435,432,o),
(422,432,qs),
(409,432,o),
(367,431,o),
(326,427,o),
(297,418,o),
(297,411,qs),
(297,400,o),
(331,400,qs),
(397,400,ls),
(414,400,o),
(424,386,o),
(424,359,qs),
(421,172,ls)
);
},
{
closed = 1;
nodes = (
(150,533,o),
(164,533,qs),
(178,533,o),
(205,552,o),
(205,579,qs),
(205,596,o),
(185,616,o),
(171,616,qs),
(160,616,o),
(145,607,o),
(135,594,o),
(130,580,o),
(130,575,qs),
(130,557,o)
);
},
{
closed = 1;
nodes = (
(357,510,o),
(371,510,qs),
(385,510,o),
(412,529,o),
(412,556,qs),
(412,573,o),
(392,593,o),
(378,593,qs),
(367,593,o),
(352,584,o),
(342,571,o),
(337,557,o),
(337,552,qs),
(337,534,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 8 0 9 11 8 9 91 0 10 0 11 6 10 11 91 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 8 0 9 11 8 9 91 0 10 0 11 6 10 11 91 0 6 0 5 1 6 5 91 0 1 0 0 2 1 0 91 7 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
109 107 103 101 95 93 41 43 53 55 38 53 94 52 50 12 24
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = udieresis;
unicode = 252;
},
{
glyphname = ugrave;
kernLeft = u;
kernRight = u;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(230,580,o),
(282,534,o),
(333,500,o),
(347,500,qs),
(358,500,o),
(384,511,o),
(384,522,qs),
(384,525,o),
(360,578,o),
(324,639,o),
(281,688,o),
(262,688,qs),
(230,687,o),
(192,659,o),
(192,640,qs),
(192,627,o)
);
},
{
closed = 1;
nodes = (
(436,165,o),
(413,117,o),
(375,80,o),
(325,58,o),
(297,58,qs),
(261,58,o),
(223,94,o),
(205,149,o),
(202,214,o),
(202,243,qs),
(202,265,o),
(203,318,o),
(205,370,o),
(206,414,o),
(206,427,qs),
(206,443,o),
(199,461,o),
(180,470,o),
(147,472,o),
(121,472,qs),
(89,472,o),
(46,467,o),
(20,458,o),
(10,442,o),
(10,432,qs),
(10,409,o),
(36,399,o),
(55,399,qs),
(79,399,ls),
(102,399,o),
(111,384,o),
(111,361,qs),
(111,187,ls),
(111,148,o),
(127,73,o),
(166,15,o),
(228,-20,o),
(275,-20,qs),
(310,-20,o),
(364,-1,o),
(403,29,o),
(429,65,o),
(436,81,q),
(436,50,o),
(438,10,o),
(444,-13,o),
(456,-22,o),
(466,-22,qs),
(517,-22,o),
(575,-16,o),
(603,-5,o),
(609,11,o),
(609,22,qs),
(609,38,o),
(596,51,o),
(586,53,qs),
(582,54,o),
(563,55,o),
(556,55,qs),
(539,55,o),
(528,67,o),
(528,78,qs),
(528,81,o),
(527,116,o),
(527,156,qs),
(527,213,o),
(528,290,o),
(529,342,o),
(530,372,o),
(530,383,qs),
(530,401,o),
(521,421,o),
(500,430,o),
(464,432,o),
(436,432,qs),
(400,432,o),
(356,426,o),
(332,415,o),
(324,400,o),
(324,390,qs),
(324,376,o),
(341,359,o),
(358,359,qs),
(411,359,ls),
(429,359,o),
(438,335,o),
(438,318,qs),
(436,191,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
60 1 4 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 1 0 106 0 1 8 1 106 0 7 7 8 83 0 8 8 23 67 0 2 2 3 83 0 3 3 15 67 9 1 4 4 5 84 6 1 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 0 1 0 106 0 1 8 1 106 0 8 0 7 2 8 7 91 0 3 0 2 4 3 2 91 9 1 4 4 5 84 6 1 5 5 21 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
99 97 54 55 40 40 61 54 54 38 34 10 24
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(235,578,o),
(280,536,o),
(325,504,o),
(336,504,qs),
(344,504,o),
(361,512,o),
(361,522,qs),
(361,524,o),
(350,548,o),
(331,581,o),
(308,618,o),
(283,649,o),
(259,670,o),
(250,670,qs),
(227,670,o),
(201,649,o),
(201,632,qs),
(201,621,o)
);
},
{
closed = 1;
nodes = (
(429,152,o),
(405,102,o),
(364,63,o),
(311,40,o),
(281,40,qs),
(241,40,o),
(198,80,o),
(178,140,o),
(175,211,o),
(175,243,qs),
(175,265,o),
(176,318,o),
(178,370,o),
(179,414,o),
(179,427,qs),
(179,443,o),
(174,461,o),
(160,470,o),
(135,472,o),
(115,472,qs),
(52,472,o),
(-21,458,o),
(-21,442,qs),
(-21,428,o),
(5,420,o),
(20,420,qs),
(73,420,ls),
(96,420,o),
(105,405,o),
(105,382,qs),
(105,187,ls),
(105,148,o),
(121,73,o),
(160,15,o),
(222,-20,o),
(269,-20,qs),
(304,-20,o),
(358,-1,o),
(397,29,o),
(423,65,o),
(430,81,q),
(431,22,o),
(439,-22,o),
(450,-22,qs),
(492,-22,o),
(548,-18,o),
(582,-9,o),
(596,5,o),
(596,15,qs),
(596,39,o),
(560,39,qs),
(544,39,o),
(533,38,o),
(529,38,qs),
(512,38,o),
(501,49,o),
(501,60,qs),
(501,64,o),
(500,106,o),
(500,156,qs),
(500,213,o),
(501,290,o),
(502,342,o),
(503,372,o),
(503,383,qs),
(503,401,o),
(496,421,o),
(480,430,o),
(452,432,o),
(430,432,qs),
(358,432,o),
(295,417,o),
(295,398,qs),
(295,380,o),
(329,380,qs),
(405,380,ls),
(432,380,o),
(432,339,qs),
(429,180,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
55 1 4 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 0 1 0 106 0 1 9 1 106 0 8 8 9 83 0 9 9 23 67 0 2 2 3 83 0 3 3 15 67 10 5 2 4 4 6 84 7 1 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 0 1 0 106 0 1 9 1 106 0 9 0 8 2 9 8 91 0 3 0 2 4 3 2 91 10 5 2 4 4 6 84 7 1 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
92 90 77 75 55 38 37 33 46 35 53 40 34 11 24
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(421,138,o),
(394,79,o),
(350,35,o),
(291,10,o),
(258,10,qs),
(213,10,o),
(163,56,o),
(141,125,o),
(137,207,o),
(137,243,qs),
(137,265,o),
(138,318,o),
(140,370,o),
(141,414,o),
(141,427,qs),
(141,458,o),
(128,472,o),
(107,472,qs),
(98,472,o),
(57,471,o),
(14,467,o),
(-19,459,o),
(-19,452,qs),
(-19,449,o),
(-11,440,o),
(-2,440,qs),
(65,440,ls),
(88,440,o),
(97,425,o),
(97,402,qs),
(97,187,ls),
(97,148,o),
(113,73,o),
(152,15,o),
(214,-20,o),
(261,-20,qs),
(296,-20,o),
(350,-1,o),
(389,29,o),
(415,65,o),
(422,81,q),
(423,22,o),
(431,-22,o),
(442,-22,qs),
(458,-22,o),
(505,-21,o),
(548,-17,o),
(578,-9,o),
(578,-1,qs),
(578,5,o),
(560,10,o),
(551,10,qs),
(527,10,o),
(497,9,o),
(491,9,qs),
(474,9,o),
(463,20,o),
(463,30,qs),
(463,35,o),
(462,90,o),
(462,156,qs),
(462,213,o),
(463,290,o),
(464,342,o),
(465,372,o),
(465,383,qs),
(465,401,o),
(461,421,o),
(451,430,o),
(435,432,o),
(422,432,qs),
(409,432,o),
(367,431,o),
(326,427,o),
(297,418,o),
(297,411,qs),
(297,400,o),
(331,400,qs),
(397,400,ls),
(414,400,o),
(424,386,o),
(424,359,qs),
(421,172,ls)
);
},
{
closed = 1;
nodes = (
(241,574,o),
(277,538,o),
(312,510,o),
(319,510,qs),
(327,510,o),
(327,521,qs),
(327,530,o),
(303,570,o),
(271,610,o),
(239,640,o),
(232,640,qs),
(224,640,o),
(213,632,o),
(213,618,qs),
(213,610,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 8 9 8 106 0 9 6 9 106 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 84 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 8 9 8 106 0 9 6 9 106 0 6 0 5 1 6 5 91 0 1 0 0 2 1 0 91 7 1 2 2 3 84 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
94 92 39 43 53 55 38 53 94 52 50 10 24
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = ugrave;
unicode = 249;
},
{
glyphname = uhungarumlaut;
kernLeft = u;
kernRight = u;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(289,687,o),
(257,688,qs),
(238,688,o),
(195,639,o),
(159,578,o),
(135,525,o),
(135,522,qs),
(135,511,o),
(161,500,o),
(172,500,qs),
(181,500,o),
(211,516,o),
(245,541,o),
(281,573,o),
(309,604,o),
(327,631,o),
(327,640,qs),
(327,659,o)
);
},
{
closed = 1;
nodes = (
(482,687,o),
(450,688,qs),
(431,688,o),
(388,639,o),
(352,578,o),
(328,525,o),
(328,522,qs),
(328,511,o),
(354,500,o),
(365,500,qs),
(374,500,o),
(404,516,o),
(438,541,o),
(474,573,o),
(502,604,o),
(520,631,o),
(520,640,qs),
(520,659,o)
);
},
{
closed = 1;
nodes = (
(436,165,o),
(413,117,o),
(375,80,o),
(325,58,o),
(297,58,qs),
(261,58,o),
(223,94,o),
(205,149,o),
(202,214,o),
(202,243,qs),
(202,265,o),
(203,318,o),
(205,370,o),
(206,414,o),
(206,427,qs),
(206,443,o),
(199,461,o),
(180,470,o),
(147,472,o),
(121,472,qs),
(89,472,o),
(46,467,o),
(20,458,o),
(10,442,o),
(10,432,qs),
(10,409,o),
(36,399,o),
(55,399,qs),
(79,399,ls),
(102,399,o),
(111,384,o),
(111,361,qs),
(111,187,ls),
(111,148,o),
(127,73,o),
(166,15,o),
(228,-20,o),
(275,-20,qs),
(310,-20,o),
(364,-1,o),
(403,29,o),
(429,65,o),
(436,81,q),
(436,50,o),
(438,10,o),
(444,-13,o),
(456,-22,o),
(466,-22,qs),
(517,-22,o),
(575,-16,o),
(603,-5,o),
(609,11,o),
(609,22,qs),
(609,38,o),
(596,51,o),
(586,53,qs),
(582,54,o),
(563,55,o),
(556,55,qs),
(539,55,o),
(528,67,o),
(528,78,qs),
(528,81,o),
(527,116,o),
(527,156,qs),
(527,213,o),
(528,290,o),
(529,342,o),
(530,372,o),
(530,383,qs),
(530,401,o),
(521,421,o),
(500,430,o),
(464,432,o),
(436,432,qs),
(400,432,o),
(356,426,o),
(332,415,o),
(324,400,o),
(324,390,qs),
(324,376,o),
(341,359,o),
(358,359,qs),
(411,359,ls),
(429,359,o),
(438,335,o),
(438,318,qs),
(436,191,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
80 1 6 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
3 1 1 0 1 106 2 1 0 10 0 106 0 9 9 10 83 0 10 10 23 67 0 4 4 5 83 0 5 5 15 67 11 1 6 6 7 84 8 1 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
3 1 1 0 1 106 2 1 0 10 0 106 0 10 0 9 4 10 9 91 0 5 0 4 6 5 4 92 11 1 6 6 7 84 8 1 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
119 117 105 102 96 93 40 40 61 54 52 38 40 38 38 12 24
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(281,670,o),
(258,670,qs),
(248,670,o),
(225,649,o),
(200,618,o),
(176,581,o),
(158,548,o),
(147,524,o),
(147,522,qs),
(147,512,o),
(164,504,o),
(172,504,qs),
(183,504,o),
(228,536,o),
(273,578,o),
(307,621,o),
(307,632,qs),
(307,649,o)
);
},
{
closed = 1;
nodes = (
(458,670,o),
(435,670,qs),
(425,670,o),
(402,649,o),
(377,618,o),
(353,581,o),
(335,548,o),
(324,524,o),
(324,522,qs),
(324,512,o),
(341,504,o),
(349,504,qs),
(360,504,o),
(405,536,o),
(450,578,o),
(484,621,o),
(484,632,qs),
(484,649,o)
);
},
{
closed = 1;
nodes = (
(429,152,o),
(405,102,o),
(364,63,o),
(311,40,o),
(281,40,qs),
(241,40,o),
(198,80,o),
(178,140,o),
(175,211,o),
(175,243,qs),
(175,265,o),
(176,318,o),
(178,370,o),
(179,414,o),
(179,427,qs),
(179,443,o),
(174,461,o),
(160,470,o),
(135,472,o),
(115,472,qs),
(52,472,o),
(-21,458,o),
(-21,442,qs),
(-21,428,o),
(5,420,o),
(20,420,qs),
(73,420,ls),
(96,420,o),
(105,405,o),
(105,382,qs),
(105,187,ls),
(105,148,o),
(121,73,o),
(160,15,o),
(222,-20,o),
(269,-20,qs),
(304,-20,o),
(358,-1,o),
(397,29,o),
(423,65,o),
(430,81,q),
(431,22,o),
(439,-22,o),
(450,-22,qs),
(492,-22,o),
(548,-18,o),
(582,-9,o),
(596,5,o),
(596,15,qs),
(596,39,o),
(560,39,qs),
(544,39,o),
(533,38,o),
(529,38,qs),
(512,38,o),
(501,49,o),
(501,60,qs),
(501,64,o),
(500,106,o),
(500,156,qs),
(500,213,o),
(501,290,o),
(502,342,o),
(503,372,o),
(503,383,qs),
(503,401,o),
(496,421,o),
(480,430,o),
(452,432,o),
(430,432,qs),
(358,432,o),
(295,417,o),
(295,398,qs),
(295,380,o),
(329,380,qs),
(405,380,ls),
(432,380,o),
(432,339,qs),
(429,180,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
73 1 6 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
3 1 1 0 1 106 2 1 0 11 0 106 0 10 10 11 83 0 11 11 23 67 0 4 4 5 83 0 5 5 15 67 12 7 2 6 6 8 84 9 1 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
3 1 1 0 1 106 2 1 0 11 0 106 0 11 0 10 4 11 10 91 0 5 0 4 6 5 4 92 12 7 2 6 6 8 84 9 1 8 8 21 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
110 108 95 93 89 86 79 77 37 33 46 35 51 40 38 40 36 13 24
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(421,138,o),
(394,79,o),
(350,35,o),
(291,10,o),
(258,10,qs),
(213,10,o),
(163,56,o),
(141,125,o),
(137,207,o),
(137,243,qs),
(137,265,o),
(138,318,o),
(140,370,o),
(141,414,o),
(141,427,qs),
(141,458,o),
(128,472,o),
(107,472,qs),
(98,472,o),
(57,471,o),
(14,467,o),
(-19,459,o),
(-19,452,qs),
(-19,449,o),
(-11,440,o),
(-2,440,qs),
(65,440,ls),
(88,440,o),
(97,425,o),
(97,402,qs),
(97,187,ls),
(97,148,o),
(113,73,o),
(152,15,o),
(214,-20,o),
(261,-20,qs),
(296,-20,o),
(350,-1,o),
(389,29,o),
(415,65,o),
(422,81,q),
(423,22,o),
(431,-22,o),
(442,-22,qs),
(458,-22,o),
(505,-21,o),
(548,-17,o),
(578,-9,o),
(578,-1,qs),
(578,5,o),
(560,10,o),
(551,10,qs),
(527,10,o),
(497,9,o),
(491,9,qs),
(474,9,o),
(463,20,o),
(463,30,qs),
(463,35,o),
(462,90,o),
(462,156,qs),
(462,213,o),
(463,290,o),
(464,342,o),
(465,372,o),
(465,383,qs),
(465,401,o),
(461,421,o),
(451,430,o),
(435,432,o),
(422,432,qs),
(409,432,o),
(367,431,o),
(326,427,o),
(297,418,o),
(297,411,qs),
(297,400,o),
(331,400,qs),
(397,400,ls),
(414,400,o),
(424,386,o),
(424,359,qs),
(421,172,ls)
);
},
{
closed = 1;
nodes = (
(269,640,o),
(261,640,qs),
(254,640,o),
(222,610,o),
(190,570,o),
(166,530,o),
(166,521,qs),
(166,510,o),
(174,510,qs),
(181,510,o),
(216,538,o),
(252,574,o),
(280,610,o),
(280,618,qs),
(280,632,o)
);
},
{
closed = 1;
nodes = (
(423,640,o),
(415,640,qs),
(408,640,o),
(376,610,o),
(344,570,o),
(320,530,o),
(320,521,qs),
(320,510,o),
(328,510,qs),
(335,510,o),
(370,538,o),
(406,574,o),
(434,610,o),
(434,618,qs),
(434,632,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
11 1 9 8 9 106 10 1 8 6 8 106 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 84 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
11 1 9 8 9 106 10 1 8 6 8 106 0 6 0 5 1 6 5 91 0 1 0 0 2 1 0 92 7 1 2 2 3 84 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
111 109 104 102 96 94 41 43 53 55 38 53 94 52 50 12 24
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = uhungarumlaut;
unicode = 369;
},
{
glyphname = umacron;
kernLeft = u;
kernRight = u;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(436,165,o),
(413,117,o),
(375,80,o),
(325,58,o),
(297,58,qs),
(261,58,o),
(223,94,o),
(205,149,o),
(202,214,o),
(202,243,qs),
(202,265,o),
(203,318,o),
(205,370,o),
(206,414,o),
(206,427,qs),
(206,443,o),
(199,461,o),
(180,470,o),
(147,472,o),
(121,472,qs),
(89,472,o),
(46,467,o),
(20,458,o),
(10,442,o),
(10,432,qs),
(10,409,o),
(36,399,o),
(55,399,qs),
(79,399,ls),
(102,399,o),
(111,384,o),
(111,361,qs),
(111,187,ls),
(111,148,o),
(127,73,o),
(166,15,o),
(228,-20,o),
(275,-20,qs),
(310,-20,o),
(364,-1,o),
(403,29,o),
(429,65,o),
(436,81,q),
(436,50,o),
(438,10,o),
(444,-13,o),
(456,-22,o),
(466,-22,qs),
(517,-22,o),
(575,-16,o),
(603,-5,o),
(609,11,o),
(609,22,qs),
(609,38,o),
(596,51,o),
(586,53,qs),
(582,54,o),
(563,55,o),
(556,55,qs),
(539,55,o),
(528,67,o),
(528,78,qs),
(528,81,o),
(527,116,o),
(527,156,qs),
(527,213,o),
(528,290,o),
(529,342,o),
(530,372,o),
(530,383,qs),
(530,401,o),
(521,421,o),
(500,430,o),
(464,432,o),
(436,432,qs),
(400,432,o),
(356,426,o),
(332,415,o),
(324,400,o),
(324,390,qs),
(324,376,o),
(341,359,o),
(358,359,qs),
(411,359,ls),
(429,359,o),
(438,335,o),
(438,318,qs),
(436,191,ls)
);
},
{
closed = 1;
nodes = (
(339,614,o),
(297,614,qs),
(284,614,o),
(249,615,o),
(213,615,o),
(183,616,o),
(176,616,qs),
(159,616,o),
(143,591,o),
(143,577,qs),
(143,563,o),
(162,537,o),
(176,537,qs),
(194,537,o),
(258,537,o),
(330,538,o),
(397,538,o),
(417,538,qs),
(428,538,o),
(442,547,o),
(450,560,o),
(453,575,o),
(453,580,qs),
(453,595,o),
(436,617,o),
(425,617,qs),
(401,617,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
44 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
10 1 8 0 9 6 8 9 91 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
10 1 8 0 9 6 8 9 91 0 6 0 5 0 6 5 91 0 1 0 0 2 1 0 91 7 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
89 88 102 95 88 114 89 106 44 54 55 40 40 61 54 50 11 23
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
ref = .ttfautohint;
},
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (134,30);
ref = macron;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
38 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
11 1 9 0 10 7 9 10 91 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 3 2 2 2 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
11 1 9 0 10 7 9 10 91 0 7 0 6 0 7 6 91 0 1 0 0 2 1 0 91 8 3 2 2 2 4 83 5 1 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
81 80 92 85 80 104 81 96 45 36 55 38 37 33 46 35 50 12 35
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(421,138,o),
(394,79,o),
(350,35,o),
(291,10,o),
(258,10,qs),
(213,10,o),
(163,56,o),
(141,125,o),
(137,207,o),
(137,243,qs),
(137,265,o),
(138,318,o),
(140,370,o),
(141,414,o),
(141,427,qs),
(141,458,o),
(128,472,o),
(107,472,qs),
(98,472,o),
(57,471,o),
(14,467,o),
(-19,459,o),
(-19,452,qs),
(-19,449,o),
(-11,440,o),
(-2,440,qs),
(65,440,ls),
(88,440,o),
(97,425,o),
(97,402,qs),
(97,187,ls),
(97,148,o),
(113,73,o),
(152,15,o),
(214,-20,o),
(261,-20,qs),
(296,-20,o),
(350,-1,o),
(389,29,o),
(415,65,o),
(422,81,q),
(423,22,o),
(431,-22,o),
(442,-22,qs),
(458,-22,o),
(505,-21,o),
(548,-17,o),
(578,-9,o),
(578,-1,qs),
(578,5,o),
(560,10,o),
(551,10,qs),
(527,10,o),
(497,9,o),
(491,9,qs),
(474,9,o),
(463,20,o),
(463,30,qs),
(463,35,o),
(462,90,o),
(462,156,qs),
(462,213,o),
(463,290,o),
(464,342,o),
(465,372,o),
(465,383,qs),
(465,401,o),
(461,421,o),
(451,430,o),
(435,432,o),
(422,432,qs),
(409,432,o),
(367,431,o),
(326,427,o),
(297,418,o),
(297,411,qs),
(297,400,o),
(331,400,qs),
(397,400,ls),
(414,400,o),
(424,386,o),
(424,359,qs),
(421,172,ls)
);
},
{
closed = 1;
nodes = (
(324,539,o),
(282,539,qs),
(269,539,o),
(234,540,o),
(198,540,o),
(168,541,o),
(161,541,qs),
(153,541,o),
(145,531,o),
(145,526,qs),
(145,521,o),
(154,510,o),
(161,510,qs),
(179,510,o),
(243,510,o),
(315,511,o),
(382,511,o),
(402,511,qs),
(413,511,o),
(421,524,o),
(421,529,qs),
(421,534,o),
(414,542,o),
(410,542,qs),
(386,542,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
10 1 8 0 9 6 8 9 91 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
10 1 8 0 9 6 8 9 91 0 6 0 5 1 6 5 91 0 1 0 0 2 1 0 91 7 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
84 83 95 88 83 107 84 99 43 53 55 38 53 94 52 50 11 23
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = umacron;
unicode = 363;
},
{
glyphname = uni015F;
kernLeft = s;
kernRight = s;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(204,-27,o),
(238,-27,qs),
(272,-27,o),
(335,-13,o),
(383,19,o),
(412,67,o),
(412,102,qs),
(412,140,o),
(377,187,o),
(321,217,o),
(254,235,o),
(223,244,qs),
(210,248,o),
(180,259,o),
(155,278,o),
(139,305,o),
(139,325,qs),
(139,350,o),
(173,384,o),
(217,384,qs),
(258,384,o),
(298,356,o),
(307,342,qs),
(315,331,o),
(330,298,o),
(334,280,qs),
(336,269,o),
(357,250,o),
(370,250,qs),
(387,250,o),
(400,272,o),
(402,289,qs),
(403,296,o),
(405,327,o),
(407,365,o),
(408,405,o),
(408,422,qs),
(408,457,o),
(388,475,o),
(372,475,qs),
(358,475,o),
(332,461,o),
(332,436,qs),
(332,433,o),
(333,405,o),
(334,392,q),
(328,402,o),
(310,425,o),
(281,445,o),
(239,457,o),
(209,457,qs),
(179,457,o),
(123,442,o),
(79,409,o),
(52,357,o),
(52,320,qs),
(52,278,o),
(84,224,o),
(132,189,o),
(190,170,o),
(216,164,qs),
(251,155,o),
(293,137,o),
(315,118,o),
(322,100,o),
(322,91,qs),
(322,65,o),
(273,44,o),
(240,44,qs),
(196,44,o),
(142,71,o),
(129,91,qs),
(115,114,o),
(107,144,o),
(105,154,qs),
(103,164,o),
(86,181,o),
(75,181,qs),
(35,181,o),
(35,148,qs),
(35,124,o),
(39,84,o),
(39,64,qs),
(39,50,o),
(37,22,o),
(37,4,qs),
(37,-10,o),
(49,-30,o),
(72,-30,qs),
(90,-30,o),
(110,-13,o),
(110,-3,qs),
(110,3,o),
(110,15,o),
(109,23,q),
(138,-9,o)
);
},
{
closed = 1;
nodes = (
(174,-133,o),
(188,-143,o),
(199,-152,o),
(199,-158,qs),
(199,-188,o),
(184,-217,o),
(184,-227,qs),
(184,-244,o),
(205,-250,o),
(210,-250,qs),
(216,-250,o),
(243,-235,o),
(270,-206,o),
(291,-161,o),
(291,-131,qs),
(291,-88,o),
(247,-50,o),
(223,-50,qs),
(190,-50,o),
(163,-87,o),
(163,-108,qs),
(163,-120,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
49 1 6 3 0 1 0 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 6 6 3 83 0 3 3 23 67 0 5 5 4 83 0 4 4 23 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 8 0 9 8 9 87 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 7 1 0 8 2 0 91 0 8 9 9 8 79 0 8 8 9 83 0 9 8 9 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
108 106 100 98 94 92 76 74 67 65 56 54 45 43 39 41 37 10 18
CALL[ ]	/* CallFunction */";
};
width = 451;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (37,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = s;
},
{
alignment = -1;
pos = (100,-149);
ref = comma;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
75 69 55 3 5 6 1 66 1 1 2 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 6 6 3 83 0 3 3 23 67 0 5 5 4 83 0 4 4 23 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 8 0 9 8 9 87 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 7 1 0 8 2 0 91 0 8 9 9 8 79 0 8 8 9 83 0 9 8 9 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 0 0 8 1 0 91 0 8 0 9 8 9 87 0 2 2 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 2 0 7 0 2 7 91 0 1 0 0 8 1 0 91 0 8 9 9 8 79 0 8 8 9 83 0 9 8 9 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
118 116 110 108 102 100 84 82 73 71 62 60 51 49 41 44 38 10 29
CALL[ ]	/* CallFunction */";
};
width = 435;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(170,-136,o),
(184,-143,o),
(195,-150,o),
(195,-156,qs),
(195,-166,o),
(184,-195,o),
(184,-202,qs),
(184,-207,o),
(193,-214,o),
(198,-214,qs),
(208,-214,o),
(225,-197,o),
(235,-172,o),
(241,-145,o),
(241,-135,qs),
(241,-101,o),
(214,-78,o),
(199,-78,qs),
(179,-78,o),
(159,-99,o),
(159,-112,qs),
(159,-124,o)
);
},
{
closed = 1;
nodes = (
(111,2,o),
(149,-14,o),
(192,-23,o),
(212,-23,qs),
(225,-23,o),
(279,-16,o),
(332,10,o),
(372,60,o),
(372,103,qs),
(372,131,o),
(351,170,o),
(314,195,o),
(261,212,o),
(228,220,qs),
(192,228,o),
(139,243,o),
(104,264,o),
(87,297,o),
(87,323,qs),
(87,351,o),
(105,390,o),
(137,415,o),
(181,426,o),
(206,426,qs),
(234,426,o),
(274,413,o),
(302,391,o),
(320,360,o),
(325,342,qs),
(330,327,o),
(331,306,o),
(332,298,qs),
(333,290,o),
(340,273,o),
(349,273,qs),
(358,273,o),
(364,290,o),
(364,299,qs),
(364,310,o),
(367,389,o),
(367,449,qs),
(367,460,o),
(358,475,o),
(349,475,qs),
(341,475,o),
(333,461,o),
(333,441,qs),
(333,433,o),
(334,405,o),
(335,392,q),
(329,402,o),
(311,425,o),
(281,445,o),
(239,457,o),
(210,457,qs),
(180,457,o),
(123,442,o),
(78,409,o),
(51,359,o),
(51,323,qs),
(51,266,o),
(121,208,o),
(184,194,qs),
(220,186,o),
(276,171,o),
(314,150,o),
(334,121,o),
(334,98,qs),
(334,72,o),
(311,38,o),
(277,17,o),
(235,8,o),
(216,8,qs),
(185,8,o),
(128,25,o),
(105,46,qs),
(86,63,o),
(74,101,o),
(72,136,qs),
(69,171,o),
(54,171,qs),
(40,171,o),
(40,139,qs),
(40,121,o),
(44,73,o),
(44,54,qs),
(44,40,o),
(42,2,o),
(42,-6,qs),
(42,-20,o),
(51,-30,o),
(58,-30,qs),
(69,-30,o),
(75,-10,o),
(75,5,qs),
(75,11,o),
(75,29,o),
(74,37,q),
(81,24,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
70 1 7 8 41 22 2 4 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 8 8 5 83 0 5 5 23 67 0 7 7 6 83 0 6 6 23 67 0 4 4 9 83 0 9 9 21 67 0 3 3 2 83 0 2 2 21 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 5 0 8 7 5 8 91 0 6 0 7 3 6 7 91 0 4 4 9 83 0 9 9 21 67 0 3 3 2 83 0 2 2 21 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 5 0 8 7 5 8 91 0 6 0 7 3 6 7 91 0 3 0 2 0 3 2 91 0 4 4 9 83 0 9 9 21 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 5 0 8 7 5 8 91 0 6 0 7 3 6 7 91 0 3 0 2 0 3 2 91 0 0 0 1 0 1 87 0 4 4 9 83 0 9 9 21 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
117 115 97 95 86 84 77 75 66 64 38 41 47 38 34 10 20
CALL[ ]	/* CallFunction */";
};
width = 412;
}
);
note = uni015F;
unicode = 351;
},
{
glyphname = uni0163;
kernLeft = t;
kernRight = c_t;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,-128,o),
(171,-138,o),
(182,-147,o),
(182,-153,qs),
(182,-183,o),
(167,-212,o),
(167,-222,qs),
(167,-239,o),
(188,-245,o),
(193,-245,qs),
(199,-245,o),
(226,-230,o),
(253,-201,o),
(274,-156,o),
(274,-126,qs),
(274,-83,o),
(230,-45,o),
(206,-45,qs),
(173,-45,o),
(146,-82,o),
(146,-103,qs),
(146,-115,o)
);
},
{
closed = 1;
nodes = (
(101,151,o),
(102,117,o),
(108,81,o),
(119,45,o),
(129,30,qs),
(156,-11,o),
(219,-11,qs),
(253,-11,o),
(304,9,o),
(339,43,o),
(356,88,o),
(356,114,qs),
(356,131,o),
(341,150,o),
(323,150,qs),
(306,150,o),
(288,138,o),
(284,121,qs),
(276,89,o),
(258,67,o),
(236,67,qs),
(214,67,o),
(194,102,o),
(194,152,qs),
(194,394,l),
(223,396,o),
(287,400,o),
(318,402,qs),
(328,403,o),
(352,420,o),
(352,439,qs),
(352,460,o),
(321,478,o),
(309,478,qs),
(304,478,o),
(271,477,o),
(233,475,o),
(200,474,o),
(194,474,q),
(194,575,ls),
(194,605,o),
(167,621,o),
(151,621,qs),
(127,621,o),
(116,590,qs),
(110,574,o),
(107,524,o),
(105,500,qs),
(104,485,o),
(89,474,o),
(74,472,qs),
(23,465,ls),
(8,463,o),
(-18,449,o),
(-18,430,qs),
(-18,405,o),
(5,390,o),
(18,390,qs),
(36,390,o),
(84,392,o),
(103,392,q),
(101,165,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
35 1 4 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 3 4 3 106 0 7 2 6 2 7 6 104 5 1 2 2 4 83 0 4 4 23 67 0 6 6 8 84 0 8 8 24 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 3 4 3 106 0 7 2 6 2 7 6 104 0 4 5 1 2 7 4 2 91 0 0 0 1 0 1 87 0 6 6 8 84 0 8 8 24 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 3 4 3 106 0 2 5 7 5 2 7 104 0 7 6 5 7 6 102 0 4 0 5 2 4 5 89 0 0 0 1 0 1 87 0 6 6 8 84 0 8 8 24 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 36 35 53 99 45 74 38 34 9 24
CALL[ ]	/* CallFunction */";
};
width = 366;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
ref = .ttfautohint;
},
{
alignment = -1;
ref = t;
},
{
alignment = -1;
pos = (104,-137);
ref = comma;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 3 1 0 0 2 83 0 2 2 23 67 0 4 4 6 83 0 6 6 24 67 0 7 7 8 83 0 8 8 25 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 91 0 4 4 6 83 0 6 6 24 67 0 7 7 8 83 0 8 8 25 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 91 0 7 0 8 7 8 87 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 1 2 1 106 0 0 3 5 3 0 5 104 0 5 4 3 5 4 102 0 2 0 3 0 2 3 91 0 7 0 8 7 8 87 0 4 4 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 41 40 40 37 38 99 46 65 9 35
CALL[ ]	/* CallFunction */";
};
width = 359;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(87,151,o),
(88,117,o),
(94,80,o),
(105,45,o),
(115,30,qs),
(142,-11,o),
(199,-11,qs),
(236,-11,o),
(290,18,o),
(325,59,o),
(341,103,o),
(341,117,qs),
(341,122,o),
(337,137,o),
(326,137,qs),
(315,137,o),
(309,118,o),
(304,102,qs),
(300,88,o),
(285,59,o),
(262,35,o),
(228,19,o),
(206,19,qs),
(177,19,o),
(146,45,o),
(131,84,o),
(129,131,o),
(129,152,qs),
(129,426,l),
(170,428,o),
(260,430,o),
(304,434,qs),
(313,435,o),
(321,444,o),
(321,449,qs),
(321,462,o),
(295,462,qs),
(288,462,o),
(241,461,o),
(187,459,o),
(138,458,o),
(129,458,q),
(129,575,ls),
(129,605,o),
(121,618,o),
(113,618,qs),
(108,618,o),
(100,610,o),
(95,590,qs),
(90,570,o),
(88,521,o),
(88,500,qs),
(88,478,o),
(80,458,o),
(60,456,qs),
(9,450,ls),
(-5,448,o),
(-15,441,o),
(-15,436,qs),
(-15,428,o),
(-2,422,o),
(4,422,qs),
(22,422,o),
(70,424,o),
(89,424,q),
(87,165,ls)
);
},
{
closed = 1;
nodes = (
(168,-125,o),
(182,-132,o),
(193,-139,o),
(193,-145,qs),
(193,-155,o),
(182,-184,o),
(182,-191,qs),
(182,-196,o),
(191,-203,o),
(196,-203,qs),
(206,-203,o),
(223,-186,o),
(233,-161,o),
(239,-134,o),
(239,-124,qs),
(239,-90,o),
(212,-67,o),
(197,-67,qs),
(177,-67,o),
(157,-88,o),
(157,-101,qs),
(157,-113,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 3 1 0 0 2 83 0 2 2 23 67 0 4 4 6 83 0 6 6 24 67 0 7 7 8 83 0 8 8 17 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 91 0 4 4 6 83 0 6 6 24 67 0 7 7 8 83 0 8 8 17 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 91 0 7 0 8 7 8 87 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 1 2 1 106 0 0 3 5 3 0 5 104 0 5 4 3 5 4 102 0 2 0 3 0 2 3 91 0 7 0 8 7 8 87 0 4 4 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 41 38 38 37 37 99 46 64 9 24
CALL[ ]	/* CallFunction */";
};
width = 349;
}
);
note = uni0163;
unicode = 355;
},
{
glyphname = uni0219;
kernLeft = s;
kernRight = s;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(204,-27,o),
(238,-27,qs),
(272,-27,o),
(335,-13,o),
(383,19,o),
(412,67,o),
(412,102,qs),
(412,140,o),
(377,187,o),
(321,217,o),
(254,235,o),
(223,244,qs),
(210,248,o),
(180,259,o),
(155,278,o),
(139,305,o),
(139,325,qs),
(139,350,o),
(173,384,o),
(217,384,qs),
(258,384,o),
(298,356,o),
(307,342,qs),
(315,331,o),
(330,298,o),
(334,280,qs),
(336,269,o),
(357,250,o),
(370,250,qs),
(387,250,o),
(400,272,o),
(402,289,qs),
(403,296,o),
(405,327,o),
(407,365,o),
(408,405,o),
(408,422,qs),
(408,457,o),
(388,475,o),
(372,475,qs),
(358,475,o),
(332,461,o),
(332,436,qs),
(332,433,o),
(333,405,o),
(334,392,q),
(328,402,o),
(310,425,o),
(281,445,o),
(239,457,o),
(209,457,qs),
(179,457,o),
(123,442,o),
(79,409,o),
(52,357,o),
(52,320,qs),
(52,278,o),
(84,224,o),
(132,189,o),
(190,170,o),
(216,164,qs),
(251,155,o),
(293,137,o),
(315,118,o),
(322,100,o),
(322,91,qs),
(322,65,o),
(273,44,o),
(240,44,qs),
(196,44,o),
(142,71,o),
(129,91,qs),
(115,114,o),
(107,144,o),
(105,154,qs),
(103,164,o),
(86,181,o),
(75,181,qs),
(35,181,o),
(35,148,qs),
(35,124,o),
(39,84,o),
(39,64,qs),
(39,50,o),
(37,22,o),
(37,4,qs),
(37,-10,o),
(49,-30,o),
(72,-30,qs),
(90,-30,o),
(110,-13,o),
(110,-3,qs),
(110,3,o),
(110,15,o),
(109,23,q),
(138,-9,o)
);
},
{
closed = 1;
nodes = (
(171,-133,o),
(185,-143,o),
(196,-152,o),
(196,-158,qs),
(196,-188,o),
(181,-217,o),
(181,-227,qs),
(181,-244,o),
(202,-250,o),
(207,-250,qs),
(213,-250,o),
(240,-235,o),
(267,-206,o),
(288,-161,o),
(288,-131,qs),
(288,-88,o),
(244,-50,o),
(220,-50,qs),
(187,-50,o),
(160,-87,o),
(160,-108,qs),
(160,-120,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
49 1 6 3 0 1 0 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 6 6 3 83 0 3 3 23 67 0 5 5 4 83 0 4 4 23 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 8 0 9 8 9 87 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 7 1 0 8 2 0 91 0 8 9 9 8 79 0 8 8 9 83 0 9 8 9 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
108 106 100 98 94 92 76 74 67 65 56 54 45 43 39 41 37 10 18
CALL[ ]	/* CallFunction */";
};
width = 451;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (37,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = s;
},
{
alignment = -1;
pos = (100,-149);
ref = comma;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
75 69 55 3 5 6 1 66 1 1 2 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 6 6 3 83 0 3 3 23 67 0 5 5 4 83 0 4 4 23 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 8 0 9 8 9 87 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 7 1 0 8 2 0 91 0 8 9 9 8 79 0 8 8 9 83 0 9 8 9 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 0 0 8 1 0 91 0 8 0 9 8 9 87 0 2 2 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 2 0 7 0 2 7 91 0 1 0 0 8 1 0 91 0 8 9 9 8 79 0 8 8 9 83 0 9 8 9 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
118 116 110 108 102 100 84 82 73 71 62 60 51 49 41 44 38 10 29
CALL[ ]	/* CallFunction */";
};
width = 435;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(170,-136,o),
(184,-143,o),
(195,-150,o),
(195,-156,qs),
(195,-166,o),
(184,-195,o),
(184,-202,qs),
(184,-207,o),
(193,-214,o),
(198,-214,qs),
(208,-214,o),
(225,-197,o),
(235,-172,o),
(241,-145,o),
(241,-135,qs),
(241,-101,o),
(214,-78,o),
(199,-78,qs),
(179,-78,o),
(159,-99,o),
(159,-112,qs),
(159,-124,o)
);
},
{
closed = 1;
nodes = (
(111,2,o),
(149,-14,o),
(192,-23,o),
(212,-23,qs),
(225,-23,o),
(279,-16,o),
(332,10,o),
(372,60,o),
(372,103,qs),
(372,131,o),
(351,170,o),
(314,195,o),
(261,212,o),
(228,220,qs),
(192,228,o),
(139,243,o),
(104,264,o),
(87,297,o),
(87,323,qs),
(87,351,o),
(105,390,o),
(137,415,o),
(181,426,o),
(206,426,qs),
(234,426,o),
(274,413,o),
(302,391,o),
(320,360,o),
(325,342,qs),
(330,327,o),
(331,306,o),
(332,298,qs),
(333,290,o),
(340,273,o),
(349,273,qs),
(358,273,o),
(364,290,o),
(364,299,qs),
(364,310,o),
(367,389,o),
(367,449,qs),
(367,460,o),
(358,475,o),
(349,475,qs),
(341,475,o),
(333,461,o),
(333,441,qs),
(333,433,o),
(334,405,o),
(335,392,q),
(329,402,o),
(311,425,o),
(281,445,o),
(239,457,o),
(210,457,qs),
(180,457,o),
(123,442,o),
(78,409,o),
(51,359,o),
(51,323,qs),
(51,266,o),
(121,208,o),
(184,194,qs),
(220,186,o),
(276,171,o),
(314,150,o),
(334,121,o),
(334,98,qs),
(334,72,o),
(311,38,o),
(277,17,o),
(235,8,o),
(216,8,qs),
(185,8,o),
(128,25,o),
(105,46,qs),
(86,63,o),
(74,101,o),
(72,136,qs),
(69,171,o),
(54,171,qs),
(40,171,o),
(40,139,qs),
(40,121,o),
(44,73,o),
(44,54,qs),
(44,40,o),
(42,2,o),
(42,-6,qs),
(42,-20,o),
(51,-30,o),
(58,-30,qs),
(69,-30,o),
(75,-10,o),
(75,5,qs),
(75,11,o),
(75,29,o),
(74,37,q),
(81,24,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
70 1 7 8 41 22 2 4 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 8 8 5 83 0 5 5 23 67 0 7 7 6 83 0 6 6 23 67 0 4 4 9 83 0 9 9 21 67 0 3 3 2 83 0 2 2 21 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 5 0 8 7 5 8 91 0 6 0 7 3 6 7 91 0 4 4 9 83 0 9 9 21 67 0 3 3 2 83 0 2 2 21 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 5 0 8 7 5 8 91 0 6 0 7 3 6 7 91 0 3 0 2 0 3 2 91 0 4 4 9 83 0 9 9 21 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 5 0 8 7 5 8 91 0 6 0 7 3 6 7 91 0 3 0 2 0 3 2 91 0 0 0 1 0 1 87 0 4 4 9 83 0 9 9 21 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
117 115 97 95 86 84 77 75 66 64 38 41 47 38 34 10 20
CALL[ ]	/* CallFunction */";
};
width = 412;
}
);
note = uni0219;
unicode = 537;
},
{
glyphname = uni021B;
kernLeft = t;
kernRight = c_t;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(159,-123,o),
(173,-133,o),
(184,-142,o),
(184,-148,qs),
(184,-178,o),
(169,-207,o),
(169,-217,qs),
(169,-234,o),
(190,-240,o),
(195,-240,qs),
(201,-240,o),
(228,-225,o),
(255,-196,o),
(276,-151,o),
(276,-121,qs),
(276,-78,o),
(232,-40,o),
(208,-40,qs),
(175,-40,o),
(148,-77,o),
(148,-98,qs),
(148,-110,o)
);
},
{
closed = 1;
nodes = (
(100,151,o),
(101,117,o),
(107,81,o),
(118,45,o),
(128,30,qs),
(155,-11,o),
(218,-11,qs),
(252,-11,o),
(303,9,o),
(338,43,o),
(355,88,o),
(355,114,qs),
(355,131,o),
(340,150,o),
(322,150,qs),
(305,150,o),
(287,138,o),
(283,121,qs),
(275,89,o),
(257,67,o),
(235,67,qs),
(213,67,o),
(193,102,o),
(193,152,qs),
(193,394,l),
(222,396,o),
(286,400,o),
(317,402,qs),
(327,403,o),
(351,420,o),
(351,439,qs),
(351,460,o),
(320,478,o),
(308,478,qs),
(303,478,o),
(270,477,o),
(232,475,o),
(199,474,o),
(193,474,q),
(193,575,ls),
(193,605,o),
(166,621,o),
(150,621,qs),
(126,621,o),
(115,590,qs),
(109,574,o),
(106,524,o),
(104,500,qs),
(103,485,o),
(88,474,o),
(73,472,qs),
(22,465,ls),
(7,463,o),
(-19,449,o),
(-19,430,qs),
(-19,405,o),
(4,390,o),
(17,390,qs),
(35,390,o),
(83,392,o),
(102,392,q),
(100,165,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
35 1 4 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 3 4 3 106 0 7 2 6 2 7 6 104 5 1 2 2 4 83 0 4 4 23 67 0 6 6 8 84 0 8 8 24 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 3 4 3 106 0 7 2 6 2 7 6 104 0 4 5 1 2 7 4 2 91 0 0 0 1 0 1 87 0 6 6 8 84 0 8 8 24 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 3 4 3 106 0 2 5 7 5 2 7 104 0 7 6 5 7 6 102 0 4 0 5 2 4 5 89 0 0 0 1 0 1 87 0 6 6 8 84 0 8 8 24 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 36 35 53 99 45 74 38 34 9 24
CALL[ ]	/* CallFunction */";
};
width = 366;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
ref = .ttfautohint;
},
{
alignment = -1;
ref = t;
},
{
alignment = -1;
pos = (105,-134);
ref = comma;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 3 1 0 0 2 83 0 2 2 23 67 0 4 4 6 83 0 6 6 24 67 0 7 7 8 83 0 8 8 25 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 91 0 4 4 6 83 0 6 6 24 67 0 7 7 8 83 0 8 8 25 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 91 0 7 0 8 7 8 87 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 1 2 1 106 0 0 3 5 3 0 5 104 0 5 4 3 5 4 102 0 2 0 3 0 2 3 91 0 7 0 8 7 8 87 0 4 4 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 41 40 40 37 38 99 46 65 9 35
CALL[ ]	/* CallFunction */";
};
width = 359;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(87,151,o),
(88,117,o),
(94,80,o),
(105,45,o),
(115,30,qs),
(142,-11,o),
(199,-11,qs),
(236,-11,o),
(290,18,o),
(325,59,o),
(341,103,o),
(341,117,qs),
(341,122,o),
(337,137,o),
(326,137,qs),
(315,137,o),
(309,118,o),
(304,102,qs),
(300,88,o),
(285,59,o),
(262,35,o),
(228,19,o),
(206,19,qs),
(177,19,o),
(146,45,o),
(131,84,o),
(129,131,o),
(129,152,qs),
(129,426,l),
(170,428,o),
(260,430,o),
(304,434,qs),
(313,435,o),
(321,444,o),
(321,449,qs),
(321,462,o),
(295,462,qs),
(288,462,o),
(241,461,o),
(187,459,o),
(138,458,o),
(129,458,q),
(129,575,ls),
(129,605,o),
(121,618,o),
(113,618,qs),
(108,618,o),
(100,610,o),
(95,590,qs),
(90,570,o),
(88,521,o),
(88,500,qs),
(88,478,o),
(80,458,o),
(60,456,qs),
(9,450,ls),
(-5,448,o),
(-15,441,o),
(-15,436,qs),
(-15,428,o),
(-2,422,o),
(4,422,qs),
(22,422,o),
(70,424,o),
(89,424,q),
(87,165,ls)
);
},
{
closed = 1;
nodes = (
(168,-125,o),
(182,-132,o),
(193,-139,o),
(193,-145,qs),
(193,-155,o),
(182,-184,o),
(182,-191,qs),
(182,-196,o),
(191,-203,o),
(196,-203,qs),
(206,-203,o),
(223,-186,o),
(233,-161,o),
(239,-134,o),
(239,-124,qs),
(239,-90,o),
(212,-67,o),
(197,-67,qs),
(177,-67,o),
(157,-88,o),
(157,-101,qs),
(157,-113,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 3 1 0 0 2 83 0 2 2 23 67 0 4 4 6 83 0 6 6 24 67 0 7 7 8 83 0 8 8 17 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 91 0 4 4 6 83 0 6 6 24 67 0 7 7 8 83 0 8 8 17 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 91 0 7 0 8 7 8 87 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 1 2 1 106 0 0 3 5 3 0 5 104 0 5 4 3 5 4 102 0 2 0 3 0 2 3 91 0 7 0 8 7 8 87 0 4 4 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 41 38 38 37 37 99 46 64 9 24
CALL[ ]	/* CallFunction */";
};
width = 349;
}
);
note = uni021B;
unicode = 539;
},
{
glyphname = uogonek;
kernLeft = u;
kernRight = u;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(436,165,o),
(413,117,o),
(375,80,o),
(325,58,o),
(297,58,qs),
(261,58,o),
(223,94,o),
(205,149,o),
(202,214,o),
(202,243,qs),
(202,265,o),
(203,318,o),
(205,370,o),
(206,414,o),
(206,427,qs),
(206,443,o),
(199,461,o),
(180,470,o),
(147,472,o),
(121,472,qs),
(89,472,o),
(46,467,o),
(20,458,o),
(10,442,o),
(10,432,qs),
(10,409,o),
(36,399,o),
(55,399,qs),
(79,399,ls),
(102,399,o),
(111,384,o),
(111,361,qs),
(111,187,ls),
(111,148,o),
(127,73,o),
(166,15,o),
(228,-20,o),
(275,-20,qs),
(310,-20,o),
(364,-1,o),
(403,29,o),
(429,65,o),
(436,81,q),
(436,50,o),
(438,10,o),
(444,-13,o),
(456,-22,o),
(466,-22,qs),
(481,-22,l),
(472,-27,o),
(449,-41,o),
(428,-62,o),
(414,-88,o),
(414,-104,qs),
(414,-123,o),
(434,-151,o),
(465,-170,o),
(504,-179,o),
(524,-179,qs),
(545,-179,o),
(577,-168,o),
(597,-152,o),
(607,-134,o),
(607,-126,qs),
(607,-117,o),
(592,-102,o),
(582,-102,qs),
(574,-102,o),
(565,-110,o),
(554,-119,o),
(537,-126,o),
(522,-126,qs),
(511,-126,o),
(493,-116,o),
(493,-105,qs),
(493,-83,o),
(519,-29,o),
(544,-19,q),
(567,-17,o),
(593,-10,o),
(606,1,o),
(609,14,o),
(609,22,qs),
(609,38,o),
(596,51,o),
(586,53,qs),
(582,54,o),
(563,55,o),
(556,55,qs),
(539,55,o),
(528,67,o),
(528,78,qs),
(528,81,o),
(527,116,o),
(527,156,qs),
(527,213,o),
(528,290,o),
(529,342,o),
(530,372,o),
(530,383,qs),
(530,401,o),
(521,421,o),
(500,430,o),
(464,432,o),
(436,432,qs),
(400,432,o),
(356,426,o),
(332,415,o),
(324,400,o),
(324,390,qs),
(324,376,o),
(341,359,o),
(358,359,qs),
(411,359,ls),
(429,359,o),
(438,335,o),
(438,318,qs),
(436,191,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
74 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 4 6 3 6 4 3 104 0 8 8 9 83 0 9 9 23 67 0 0 0 1 83 0 1 1 15 67 10 1 2 2 6 83 7 1 6 6 21 67 0 3 3 5 84 0 5 5 17 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 4 6 3 6 4 3 104 0 9 0 8 0 9 8 91 0 1 0 0 2 1 0 91 0 3 0 5 3 5 88 10 1 2 2 6 83 7 1 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
113 111 99 96 55 40 41 38 35 46 61 54 50 11 24
CALL[ ]	/* CallFunction */";
};
width = 598;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
ref = .ttfautohint;
},
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (377,-29);
ref = ogonek;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
38 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 10 4 9 4 10 9 104 0 9 0 11 9 11 87 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 3 2 2 2 4 83 5 1 4 4 21 67 13 1 12 12 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 10 4 9 4 10 9 104 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 3 2 2 2 4 83 5 1 4 4 21 67 13 1 12 12 4 83 5 1 4 4 21 67 0 9 9 11 83 0 11 11 17 11 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 10 4 9 4 10 9 104 0 7 0 6 0 7 6 91 0 1 0 0 2 1 0 91 0 9 0 11 9 11 87 8 3 2 2 2 4 83 5 1 4 4 21 67 13 1 12 12 4 83 5 1 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
80 80 80 109 80 109 102 100 94 92 89 87 45 36 55 38 37 33 46 35 50 14 35
CALL[ ]	/* CallFunction */";
};
width = 584;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(421,138,o),
(394,79,o),
(350,35,o),
(291,10,o),
(258,10,qs),
(213,10,o),
(163,56,o),
(141,125,o),
(137,207,o),
(137,243,qs),
(137,265,o),
(138,318,o),
(140,370,o),
(141,414,o),
(141,427,qs),
(141,458,o),
(128,472,o),
(107,472,qs),
(98,472,o),
(57,471,o),
(14,467,o),
(-19,459,o),
(-19,452,qs),
(-19,449,o),
(-11,440,o),
(-2,440,qs),
(65,440,ls),
(88,440,o),
(97,425,o),
(97,402,qs),
(97,187,ls),
(97,148,o),
(113,73,o),
(152,15,o),
(214,-20,o),
(261,-20,qs),
(296,-20,o),
(350,-1,o),
(389,29,o),
(415,65,o),
(422,81,q),
(423,22,o),
(431,-22,o),
(442,-22,q),
(435,-26,o),
(416,-41,o),
(399,-62,o),
(387,-89,o),
(387,-106,qs),
(387,-138,o),
(433,-179,o),
(468,-179,qs),
(486,-179,o),
(514,-166,o),
(535,-149,o),
(546,-132,o),
(546,-128,qs),
(546,-122,o),
(541,-112,o),
(532,-112,qs),
(525,-112,o),
(514,-125,o),
(501,-140,o),
(483,-152,o),
(470,-152,qs),
(458,-152,o),
(443,-142,o),
(434,-127,o),
(431,-111,o),
(431,-105,qs),
(431,-99,o),
(435,-77,o),
(445,-53,o),
(463,-30,o),
(478,-22,q),
(495,-22,o),
(530,-19,o),
(559,-15,o),
(578,-7,o),
(578,-1,qs),
(578,5,o),
(560,10,o),
(551,10,qs),
(527,10,o),
(497,9,o),
(491,9,qs),
(474,9,o),
(463,20,o),
(463,30,qs),
(463,35,o),
(462,90,o),
(462,156,qs),
(462,213,o),
(463,290,o),
(464,342,o),
(465,372,o),
(465,383,qs),
(465,401,o),
(461,421,o),
(451,430,o),
(435,432,o),
(422,432,qs),
(409,432,o),
(367,431,o),
(326,427,o),
(297,418,o),
(297,411,qs),
(297,400,o),
(331,400,qs),
(397,400,ls),
(414,400,o),
(424,386,o),
(424,359,qs),
(421,172,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
72 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 5 3 4 3 5 4 104 0 9 9 10 83 0 10 10 23 67 0 0 0 1 83 0 1 1 15 67 11 1 2 2 3 83 8 7 2 3 3 21 67 0 4 4 6 83 0 6 6 17 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 5 3 4 3 5 4 104 0 10 0 9 1 10 9 91 0 1 0 0 2 1 0 91 11 1 2 2 3 83 8 7 2 3 3 21 67 0 4 4 6 83 0 6 6 17 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 5 3 4 3 5 4 104 0 10 0 9 1 10 9 91 0 1 0 0 2 1 0 91 0 4 0 6 4 6 87 11 1 2 2 3 83 8 7 2 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
109 107 96 93 88 85 38 23 38 35 41 22 94 52 50 12 24
CALL[ ]	/* CallFunction */";
};
width = 564;
}
);
note = uogonek;
unicode = 371;
},
{
glyphname = uring;
kernLeft = u;
kernRight = u;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(294,649,qs),
(263,649,o),
(219,617,o),
(219,579,qs),
(219,544,o),
(265,510,o),
(299,510,qs),
(329,510,o),
(372,545,o),
(372,581,qs),
(372,649,o)
);
},
{
closed = 1;
nodes = (
(317,594,o),
(317,580,qs),
(317,564,o),
(305,553,o),
(299,553,qs),
(292,553,o),
(275,562,o),
(275,579,qs),
(275,596,o),
(290,607,o),
(295,607,qs),
(303,607,o)
);
},
{
closed = 1;
nodes = (
(436,165,o),
(413,117,o),
(375,80,o),
(325,58,o),
(297,58,qs),
(261,58,o),
(223,94,o),
(205,149,o),
(202,214,o),
(202,243,qs),
(202,265,o),
(203,318,o),
(205,370,o),
(206,414,o),
(206,427,qs),
(206,443,o),
(199,461,o),
(180,470,o),
(147,472,o),
(121,472,qs),
(89,472,o),
(46,467,o),
(20,458,o),
(10,442,o),
(10,432,qs),
(10,409,o),
(36,399,o),
(55,399,qs),
(79,399,ls),
(102,399,o),
(111,384,o),
(111,361,qs),
(111,187,ls),
(111,148,o),
(127,73,o),
(166,15,o),
(228,-20,o),
(275,-20,qs),
(310,-20,o),
(364,-1,o),
(403,29,o),
(429,65,o),
(436,81,q),
(436,50,o),
(438,10,o),
(444,-13,o),
(456,-22,o),
(466,-22,qs),
(517,-22,o),
(575,-16,o),
(603,-5,o),
(609,11,o),
(609,22,qs),
(609,38,o),
(596,51,o),
(586,53,qs),
(582,54,o),
(563,55,o),
(556,55,qs),
(539,55,o),
(528,67,o),
(528,78,qs),
(528,81,o),
(527,116,o),
(527,156,qs),
(527,213,o),
(528,290,o),
(529,342,o),
(530,372,o),
(530,383,qs),
(530,401,o),
(521,421,o),
(500,430,o),
(464,432,o),
(436,432,qs),
(400,432,o),
(356,426,o),
(332,415,o),
(324,400,o),
(324,390,qs),
(324,376,o),
(341,359,o),
(358,359,qs),
(411,359,ls),
(429,359,o),
(438,335,o),
(438,318,qs),
(436,191,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
67 1 6 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
12 1 2 1 3 0 2 96 0 3 0 1 3 94 0 1 0 0 10 1 0 91 0 9 9 10 83 0 10 10 23 67 0 4 4 5 83 0 5 5 15 67 11 1 6 6 7 83 8 1 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
12 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 1 0 0 10 1 0 91 0 9 9 10 83 0 10 10 23 67 0 4 4 5 83 0 5 5 15 67 11 1 6 6 7 83 8 1 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
12 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 1 0 0 10 1 0 91 0 10 0 9 4 10 9 91 0 5 0 4 6 5 4 91 11 1 6 6 7 83 8 1 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
12 11 106 104 92 89 83 80 73 71 63 61 53 50 37 34 28 25 18 16 11 22 12 22 36 34 13 17
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
ref = .ttfautohint;
},
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (210,0);
ref = ring;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
38 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
13 1 11 10 12 9 11 96 0 12 9 10 12 94 0 10 0 9 7 10 9 91 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 3 2 2 2 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
13 1 11 10 12 10 11 12 104 0 12 9 10 12 9 102 0 10 0 9 7 10 9 91 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 3 2 2 2 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
13 1 11 10 12 10 11 12 104 0 12 9 10 12 9 102 0 10 0 9 7 10 9 91 0 7 0 6 0 7 6 91 0 1 0 0 2 1 0 91 8 3 2 2 2 4 83 5 1 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
93 92 99 97 92 103 93 103 90 88 84 82 45 36 55 38 37 33 46 35 50 14 35
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(421,138,o),
(394,79,o),
(350,35,o),
(291,10,o),
(258,10,qs),
(213,10,o),
(163,56,o),
(141,125,o),
(137,207,o),
(137,243,qs),
(137,265,o),
(138,318,o),
(140,370,o),
(141,414,o),
(141,427,qs),
(141,458,o),
(128,472,o),
(107,472,qs),
(98,472,o),
(57,471,o),
(14,467,o),
(-19,459,o),
(-19,452,qs),
(-19,449,o),
(-11,440,o),
(-2,440,qs),
(65,440,ls),
(88,440,o),
(97,425,o),
(97,402,qs),
(97,187,ls),
(97,148,o),
(113,73,o),
(152,15,o),
(214,-20,o),
(261,-20,qs),
(296,-20,o),
(350,-1,o),
(389,29,o),
(415,65,o),
(422,81,q),
(423,22,o),
(431,-22,o),
(442,-22,qs),
(458,-22,o),
(505,-21,o),
(548,-17,o),
(578,-9,o),
(578,-1,qs),
(578,5,o),
(560,10,o),
(551,10,qs),
(527,10,o),
(497,9,o),
(491,9,qs),
(474,9,o),
(463,20,o),
(463,30,qs),
(463,35,o),
(462,90,o),
(462,156,qs),
(462,213,o),
(463,290,o),
(464,342,o),
(465,372,o),
(465,383,qs),
(465,401,o),
(461,421,o),
(451,430,o),
(435,432,o),
(422,432,qs),
(409,432,o),
(367,431,o),
(326,427,o),
(297,418,o),
(297,411,qs),
(297,400,o),
(331,400,qs),
(397,400,ls),
(414,400,o),
(424,386,o),
(424,359,qs),
(421,172,ls)
);
},
{
closed = 1;
nodes = (
(304,649,o),
(274,649,qs),
(245,649,o),
(208,609,o),
(208,579,qs),
(208,548,o),
(244,510,o),
(270,510,qs),
(293,510,o),
(335,545,o),
(335,581,qs),
(335,608,o)
);
},
{
closed = 1;
nodes = (
(305,599,o),
(305,580,qs),
(305,557,o),
(287,529,o),
(270,529,qs),
(253,529,o),
(238,557,o),
(238,579,qs),
(238,600,o),
(253,629,o),
(272,629,qs),
(292,629,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 9 12 1 10 11 9 10 91 0 11 0 8 6 11 8 91 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 9 12 1 10 11 9 10 91 0 11 0 8 6 11 8 91 0 6 0 5 1 6 5 91 0 1 0 0 2 1 0 91 7 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
96 95 102 100 95 106 96 106 93 91 39 43 53 55 38 53 94 52 50 13 24
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = uring;
unicode = 367;
},
{
glyphname = utilde;
kernLeft = u;
kernRight = u;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(436,165,o),
(413,117,o),
(375,80,o),
(325,58,o),
(297,58,qs),
(261,58,o),
(223,94,o),
(205,149,o),
(202,214,o),
(202,243,qs),
(202,265,o),
(203,318,o),
(205,370,o),
(206,414,o),
(206,427,qs),
(206,443,o),
(199,461,o),
(180,470,o),
(147,472,o),
(121,472,qs),
(89,472,o),
(46,467,o),
(20,458,o),
(10,442,o),
(10,432,qs),
(10,409,o),
(36,399,o),
(55,399,qs),
(79,399,ls),
(102,399,o),
(111,384,o),
(111,361,qs),
(111,187,ls),
(111,148,o),
(127,73,o),
(166,15,o),
(228,-20,o),
(275,-20,qs),
(310,-20,o),
(364,-1,o),
(403,29,o),
(429,65,o),
(436,81,q),
(436,50,o),
(438,10,o),
(444,-13,o),
(456,-22,o),
(466,-22,qs),
(517,-22,o),
(575,-16,o),
(603,-5,o),
(609,11,o),
(609,22,qs),
(609,38,o),
(596,51,o),
(586,53,qs),
(582,54,o),
(563,55,o),
(556,55,qs),
(539,55,o),
(528,67,o),
(528,78,qs),
(528,81,o),
(527,116,o),
(527,156,qs),
(527,213,o),
(528,290,o),
(529,342,o),
(530,372,o),
(530,383,qs),
(530,401,o),
(521,421,o),
(500,430,o),
(464,432,o),
(436,432,qs),
(400,432,o),
(356,426,o),
(332,415,o),
(324,400,o),
(324,390,qs),
(324,376,o),
(341,359,o),
(358,359,qs),
(411,359,ls),
(429,359,o),
(438,335,o),
(438,318,qs),
(436,191,ls)
);
},
{
closed = 1;
nodes = (
(121,498,o),
(130,498,qs),
(137,498,o),
(155,506,o),
(175,515,o),
(199,523,o),
(214,523,qs),
(228,523,o),
(260,515,o),
(295,506,o),
(332,499,o),
(351,499,qs),
(362,499,o),
(400,506,o),
(436,523,o),
(462,552,o),
(462,574,qs),
(462,590,o),
(445,609,o),
(440,609,qs),
(433,609,o),
(410,596,qs),
(396,588,o),
(364,579,o),
(350,579,qs),
(335,579,o),
(299,588,o),
(263,598,o),
(228,607,o),
(213,607,qs),
(176,607,o),
(145,589,qs),
(131,581,o),
(111,556,o),
(111,534,qs),
(111,519,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
44 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 6 9 11 91 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 6 9 11 91 0 6 0 5 0 6 5 91 0 1 0 0 2 1 0 91 7 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
122 120 117 115 112 110 104 102 99 97 41 44 54 55 40 40 61 54 50 14 24
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
ref = .ttfautohint;
},
{
alignment = -1;
pos = (89,0);
ref = tilde;
},
{
alignment = -1;
ref = u;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
76 1 8 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 13 1 3 91 0 12 12 13 83 0 13 13 23 67 0 6 6 7 83 0 7 7 15 67 14 9 2 8 8 10 83 11 1 10 10 21 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 13 1 3 91 0 13 0 12 6 13 12 91 0 7 0 6 8 7 6 92 14 9 2 8 8 10 83 11 1 10 10 21 10 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
113 111 98 96 92 89 82 80 74 72 67 65 46 35 53 35 35 38 35 35 37 15 35
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(421,138,o),
(394,79,o),
(350,35,o),
(291,10,o),
(258,10,qs),
(213,10,o),
(163,56,o),
(141,125,o),
(137,207,o),
(137,243,qs),
(137,265,o),
(138,318,o),
(140,370,o),
(141,414,o),
(141,427,qs),
(141,458,o),
(128,472,o),
(107,472,qs),
(98,472,o),
(57,471,o),
(14,467,o),
(-19,459,o),
(-19,452,qs),
(-19,449,o),
(-11,440,o),
(-2,440,qs),
(65,440,ls),
(88,440,o),
(97,425,o),
(97,402,qs),
(97,187,ls),
(97,148,o),
(113,73,o),
(152,15,o),
(214,-20,o),
(261,-20,qs),
(296,-20,o),
(350,-1,o),
(389,29,o),
(415,65,o),
(422,81,q),
(423,22,o),
(431,-22,o),
(442,-22,qs),
(458,-22,o),
(505,-21,o),
(548,-17,o),
(578,-9,o),
(578,-1,qs),
(578,5,o),
(560,10,o),
(551,10,qs),
(527,10,o),
(497,9,o),
(491,9,qs),
(474,9,o),
(463,20,o),
(463,30,qs),
(463,35,o),
(462,90,o),
(462,156,qs),
(462,213,o),
(463,290,o),
(464,342,o),
(465,372,o),
(465,383,qs),
(465,401,o),
(461,421,o),
(451,430,o),
(435,432,o),
(422,432,qs),
(409,432,o),
(367,431,o),
(326,427,o),
(297,418,o),
(297,411,qs),
(297,400,o),
(331,400,qs),
(397,400,ls),
(414,400,o),
(424,386,o),
(424,359,qs),
(421,172,ls)
);
},
{
closed = 1;
nodes = (
(93,522,o),
(98,522,qs),
(103,522,o),
(119,530,o),
(141,539,o),
(167,547,o),
(182,547,qs),
(196,547,o),
(228,539,o),
(263,530,o),
(300,523,o),
(319,523,qs),
(340,523,o),
(377,530,o),
(405,543,o),
(421,559,o),
(421,568,qs),
(421,575,o),
(413,585,o),
(408,585,qs),
(403,585,o),
(392,580,o),
(378,572,qs),
(344,555,o),
(318,555,qs),
(303,555,o),
(267,564,o),
(231,574,o),
(196,583,o),
(181,583,qs),
(144,583,o),
(113,565,qs),
(84,548,o),
(84,537,qs),
(84,532,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 6 9 11 91 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 6 9 11 91 0 6 0 5 1 6 5 91 0 1 0 0 2 1 0 92 7 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
116 114 111 109 106 104 98 96 93 91 40 43 53 55 38 53 94 52 50 14 24
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = utilde;
unicode = 361;
},
{
glyphname = v;
kernLeft = v;
kernRight = v;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(454,362,o),
(468,363,qs),
(513,366,o),
(548,382,o),
(548,397,qs),
(548,405,o),
(541,415,o),
(513,421,o),
(458,423,o),
(410,423,qs),
(374,423,o),
(331,421,o),
(308,415,o),
(301,401,o),
(301,389,qs),
(301,380,o),
(314,369,o),
(322,367,qs),
(332,365,o),
(332,358,qs),
(332,353,o),
(317,297,o),
(294,226,o),
(269,153,o),
(260,131,q),
(237,201,o),
(206,296,o),
(188,355,o),
(180,381,o),
(180,383,qs),
(180,391,o),
(198,398,o),
(209,399,qs),
(224,400,o),
(243,414,o),
(243,428,qs),
(243,447,o),
(217,454,o),
(201,454,qs),
(197,454,o),
(151,454,o),
(97,453,o),
(49,453,o),
(45,453,qs),
(31,453,o),
(2,445,o),
(2,429,qs),
(2,421,o),
(15,410,o),
(33,403,o),
(52,400,o),
(58,399,qs),
(71,397,o),
(84,382,o),
(93,358,qs),
(110,311,o),
(133,246,o),
(155,180,o),
(182,96,o),
(203,31,qs),
(211,8,o),
(236,-14,o),
(257,-14,qs),
(277,-14,o),
(305,9,o),
(313,36,qs),
(315,42,o),
(329,83,o),
(350,141,o),
(374,208,o),
(397,270,o),
(417,323,o),
(423,337,qs),
(430,354,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
48 1 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 2 2 1 83 0 1 1 15 67 0 4 4 3 83 0 3 3 15 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 2 4 1 2 91 0 3 0 4 0 3 4 91 0 0 0 21 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
71 70 65 61 40 39 35 28 41 5 16
CALL[ ]	/* CallFunction */";
};
width = 523;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(440,373,o),
(460,375,qs),
(487,378,o),
(529,384,o),
(529,402,qs),
(529,409,o),
(522,417,o),
(495,422,o),
(442,423,o),
(395,423,qs),
(362,423,o),
(322,422,o),
(301,417,o),
(294,408,o),
(294,400,qs),
(294,391,o),
(303,378,o),
(311,378,qs),
(328,378,o),
(339,372,o),
(339,362,qs),
(339,356,o),
(325,315,o),
(302,249,o),
(272,159,o),
(255,105,q),
(223,198,o),
(186,310,o),
(167,371,o),
(161,392,o),
(161,395,qs),
(161,400,o),
(168,405,o),
(177,408,o),
(187,408,o),
(189,408,qs),
(204,408,o),
(224,422,o),
(224,433,qs),
(224,447,o),
(202,454,o),
(186,454,qs),
(182,454,o),
(136,454,o),
(82,453,o),
(34,453,o),
(30,453,qs),
(16,453,o),
(-6,446,o),
(-6,434,qs),
(-6,422,o),
(23,413,o),
(38,411,qs),
(47,410,o),
(63,407,o),
(77,399,o),
(89,384,o),
(94,370,qs),
(113,318,o),
(140,245,o),
(165,171,o),
(194,79,o),
(216,9,qs),
(221,-5,o),
(245,-14,o),
(253,-14,qs),
(281,-14,o),
(291,12,qs),
(293,18,o),
(310,64,o),
(333,129,o),
(360,205,o),
(386,276,o),
(408,334,o),
(415,349,qs),
(421,363,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
49 1 0 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 2 2 1 83 0 1 1 15 67 0 3 3 4 83 0 4 4 15 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 2 3 1 2 91 0 4 0 3 0 4 3 91 0 0 0 21 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
67 63 58 56 41 38 34 27 40 5 16
CALL[ ]	/* CallFunction */";
};
width = 510;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(428,393,o),
(448,395,qs),
(471,397,o),
(502,400,o),
(502,409,qs),
(502,413,o),
(492,419,o),
(463,422,o),
(413,423,o),
(373,423,qs),
(317,423,o),
(278,419,o),
(278,410,qs),
(278,398,o),
(299,398,qs),
(333,398,o),
(357,393,o),
(357,382,qs),
(357,376,o),
(348,345,o),
(324,275,o),
(281,155,o),
(248,61,q),
(219,146,o),
(180,263,o),
(154,340,o),
(140,382,o),
(134,404,o),
(133,412,o),
(133,415,qs),
(133,427,o),
(161,428,qs),
(176,429,o),
(197,434,o),
(197,442,qs),
(197,454,o),
(164,454,qs),
(160,454,o),
(114,454,o),
(60,453,o),
(12,453,o),
(8,453,qs),
(-18,453,o),
(-18,443,qs),
(-18,432,o),
(10,431,qs),
(24,430,o),
(51,428,o),
(73,420,o),
(91,404,o),
(96,390,qs),
(110,354,o),
(130,296,o),
(148,244,o),
(164,193,o),
(183,132,o),
(208,58,o),
(224,9,qs),
(232,-14,o),
(246,-14,qs),
(259,-14,o),
(269,12,qs),
(271,18,o),
(289,68,o),
(313,137,o),
(341,217,o),
(369,292,o),
(394,353,o),
(403,369,qs),
(410,383,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
46 1 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
3 1 1 1 2 83 0 2 2 15 67 0 4 4 5 83 0 5 5 15 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 2 3 1 1 5 2 1 91 0 5 0 4 0 5 4 91 0 0 0 21 0 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
51 47 35 114 29 40 6 21
CALL[ ]	/* CallFunction */";
};
width = 492;
}
);
note = v;
unicode = 118;
},
{
glyphname = w;
kernLeft = w;
kernRight = w;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(495,255,o),
(478,330,o),
(466,382,o),
(465,387,qs),
(459,412,o),
(435,435,o),
(413,435,qs),
(364,435,o),
(350,388,qs),
(347,379,o),
(331,331,o),
(309,262,o),
(281,177,o),
(266,131,q),
(238,218,o),
(206,321,o),
(190,376,o),
(186,394,o),
(186,396,qs),
(186,406,o),
(200,406,qs),
(228,406,ls),
(246,406,o),
(266,418,o),
(266,434,qs),
(266,457,o),
(235,465,o),
(206,465,qs),
(82,465,ls),
(50,465,o),
(10,455,o),
(10,432,qs),
(10,421,o),
(22,410,o),
(41,406,o),
(63,406,o),
(73,406,qs),
(79,406,o),
(84,402,o),
(87,394,qs),
(202,62,ls),
(213,31,o),
(240,8,o),
(259,8,qs),
(301,8,o),
(314,46,qs),
(405,315,l),
(467,43,ls),
(473,15,o),
(497,-17,o),
(519,-17,qs),
(555,-17,o),
(570,23,qs),
(628,173,o),
(695,344,o),
(703,349,q),
(708,354,o),
(725,359,o),
(748,359,qs),
(768,359,o),
(805,368,o),
(805,388,qs),
(805,396,o),
(797,408,o),
(770,416,o),
(718,420,o),
(674,420,qs),
(637,420,o),
(591,415,o),
(566,405,o),
(558,392,o),
(558,383,qs),
(558,369,o),
(570,359,o),
(578,359,qs),
(583,359,ls),
(599,359,o),
(599,348,qs),
(599,343,o),
(588,308,o),
(572,260,o),
(553,205,o),
(537,158,o),
(526,125,o),
(526,122,q),
(516,165,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
71 38 0 3 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
2 1 0 5 4 5 0 4 104 0 8 8 15 67 0 1 1 15 67 7 1 5 5 6 83 0 6 6 23 67 0 4 4 13 67 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 8 6 1 6 8 1 104 0 1 5 6 1 5 102 2 1 0 5 4 5 0 4 104 0 6 7 1 5 0 6 5 91 0 4 4 13 67 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
44 52 53 53 37 38 38 38 56 9 24
CALL[ ]	/* CallFunction */";
};
width = 785;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(467,284,o),
(451,352,o),
(443,388,o),
(439,405,o),
(437,409,o),
(436,413,q),
(427,425,o),
(409,433,o),
(398,433,qs),
(385,433,o),
(364,424,o),
(356,413,q),
(349,396,o),
(302,242,o),
(258,111,q),
(224,205,o),
(184,318,o),
(163,381,o),
(156,405,o),
(156,408,qs),
(156,418,o),
(170,418,qs),
(208,418,ls),
(246,418,o),
(246,441,qs),
(246,458,o),
(218,465,o),
(189,465,qs),
(65,465,ls),
(33,465,o),
(0,457,o),
(0,440,qs),
(0,423,o),
(37,418,o),
(65,418,qs),
(74,418,o),
(81,414,o),
(83,408,qs),
(216,32,l),
(226,19,o),
(241,8,o),
(255,8,qs),
(269,8,o),
(286,16,o),
(291,29,qs),
(394,345,l),
(469,28,ls),
(476,0,o),
(494,-17,o),
(511,-17,qs),
(519,-17,o),
(543,-3,o),
(551,15,qs),
(590,111,o),
(642,240,o),
(674,321,o),
(690,358,o),
(694,361,qs),
(700,366,o),
(714,370,o),
(737,370,qs),
(757,370,o),
(793,376,o),
(793,394,qs),
(793,401,o),
(785,410,o),
(760,415,o),
(713,417,o),
(674,417,qs),
(632,417,o),
(583,413,o),
(558,405,o),
(551,394,o),
(551,388,qs),
(551,380,o),
(561,370,o),
(574,370,qs),
(584,370,ls),
(601,370,o),
(601,353,qs),
(601,346,o),
(585,291,o),
(560,217,o),
(528,132,o),
(512,95,q),
(492,176,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
70 39 0 3 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 8 8 15 67 7 1 5 5 6 83 0 6 6 23 67 2 1 0 0 1 83 0 1 1 15 67 0 4 4 13 67 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 8 6 5 6 8 5 104 0 6 7 1 5 1 6 5 91 0 1 2 1 0 4 1 0 91 0 4 4 13 67 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
43 51 52 37 38 41 37 54 54 9 24
CALL[ ]	/* CallFunction */";
};
width = 770;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(428,311,o),
(407,384,o),
(399,408,o),
(397,413,qs),
(392,425,o),
(381,433,o),
(374,433,qs),
(366,433,o),
(352,424,o),
(347,413,qs),
(343,404,o),
(332,370,o),
(310,296,o),
(274,174,o),
(246,78,q),
(208,179,o),
(162,310,o),
(137,388,o),
(128,423,o),
(128,428,qs),
(128,438,o),
(142,438,qs),
(180,438,ls),
(217,438,o),
(217,453,qs),
(217,460,o),
(194,465,o),
(165,465,qs),
(41,465,ls),
(9,465,o),
(-14,460,o),
(-14,453,qs),
(-14,446,o),
(9,438,o),
(37,438,qs),
(60,438,o),
(78,425,o),
(85,408,qs),
(222,32,ls),
(227,19,o),
(240,8,o),
(246,8,qs),
(252,8,o),
(264,18,o),
(267,29,qs),
(371,375,l),
(474,3,ls),
(480,-17,o),
(495,-17,qs),
(503,-17,o),
(519,-3,o),
(527,15,qs),
(562,101,o),
(610,222,o),
(642,302,o),
(661,347,o),
(672,371,o),
(678,379,o),
(681,381,qs),
(688,386,o),
(701,390,o),
(724,390,qs),
(744,390,o),
(759,396,o),
(759,404,qs),
(759,408,o),
(753,413,o),
(735,416,o),
(703,417,o),
(676,417,qs),
(599,417,o),
(537,410,o),
(537,401,qs),
(537,396,o),
(550,390,o),
(561,390,qs),
(596,390,ls),
(618,390,o),
(618,373,qs),
(618,365,o),
(610,332,o),
(586,261,o),
(540,142,o),
(501,50,q),
(467,171,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
69 38 0 3 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
7 1 5 5 6 83 0 6 6 23 67 0 8 8 15 67 2 1 0 0 1 83 0 1 1 15 67 0 4 4 13 67 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 8 5 1 5 8 1 104 0 6 7 1 5 8 6 5 91 0 1 2 1 0 4 1 0 91 0 4 4 13 67 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
45 51 52 37 37 43 37 52 54 9 24
CALL[ ]	/* CallFunction */";
};
width = 748;
}
);
note = w;
unicode = 119;
},
{
glyphname = wacute;
kernLeft = w;
kernRight = w;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(492,687,o),
(460,688,qs),
(441,688,o),
(398,639,o),
(362,578,o),
(338,525,o),
(338,522,qs),
(338,511,o),
(364,500,o),
(375,500,qs),
(384,500,o),
(414,516,o),
(448,541,o),
(484,573,o),
(512,604,o),
(530,631,o),
(530,640,qs),
(530,659,o)
);
},
{
closed = 1;
nodes = (
(495,255,o),
(478,330,o),
(466,382,o),
(465,387,qs),
(459,412,o),
(435,435,o),
(413,435,qs),
(364,435,o),
(350,388,qs),
(347,379,o),
(331,331,o),
(309,262,o),
(281,177,o),
(266,131,q),
(238,218,o),
(206,321,o),
(190,376,o),
(186,394,o),
(186,396,qs),
(186,406,o),
(200,406,qs),
(228,406,ls),
(246,406,o),
(266,418,o),
(266,434,qs),
(266,457,o),
(235,465,o),
(206,465,qs),
(82,465,ls),
(50,465,o),
(10,455,o),
(10,432,qs),
(10,421,o),
(22,410,o),
(41,406,o),
(63,406,o),
(73,406,qs),
(79,406,o),
(84,402,o),
(87,394,qs),
(202,62,ls),
(213,31,o),
(240,8,o),
(259,8,qs),
(301,8,o),
(314,46,qs),
(405,315,l),
(467,43,ls),
(473,15,o),
(497,-17,o),
(519,-17,qs),
(555,-17,o),
(570,23,qs),
(628,173,o),
(695,344,o),
(703,349,q),
(708,354,o),
(725,359,o),
(748,359,qs),
(768,359,o),
(805,368,o),
(805,388,qs),
(805,396,o),
(797,408,o),
(770,416,o),
(718,420,o),
(674,420,qs),
(637,420,o),
(591,415,o),
(566,405,o),
(558,392,o),
(558,383,qs),
(558,369,o),
(570,359,o),
(578,359,qs),
(583,359,ls),
(599,359,o),
(599,348,qs),
(599,343,o),
(588,308,o),
(572,260,o),
(553,205,o),
(537,158,o),
(526,125,o),
(526,122,q),
(516,165,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
89 56 18 3 6 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 1 106 0 0 8 0 106 4 1 2 7 6 7 2 6 104 0 10 10 15 67 0 3 3 15 67 9 1 7 7 8 83 0 8 8 23 67 0 6 6 13 67 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 1 0 1 106 0 0 8 0 106 0 10 8 3 8 10 3 104 0 3 7 8 3 7 102 4 1 2 7 6 7 2 6 104 0 8 9 1 7 2 8 7 91 0 6 6 13 67 0 5 5 21 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
97 95 83 80 53 53 37 38 38 38 58 38 38 11 24
CALL[ ]	/* CallFunction */";
};
width = 785;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(462,670,o),
(439,670,qs),
(429,670,o),
(406,649,o),
(381,618,o),
(357,581,o),
(339,548,o),
(328,524,o),
(328,522,qs),
(328,512,o),
(345,504,o),
(353,504,qs),
(364,504,o),
(409,536,o),
(454,578,o),
(488,621,o),
(488,632,qs),
(488,649,o)
);
},
{
closed = 1;
nodes = (
(467,284,o),
(451,352,o),
(443,388,o),
(439,405,o),
(437,409,o),
(436,413,q),
(427,425,o),
(409,433,o),
(398,433,qs),
(385,433,o),
(364,424,o),
(356,413,q),
(349,396,o),
(302,242,o),
(258,111,q),
(224,205,o),
(184,318,o),
(163,381,o),
(156,405,o),
(156,408,qs),
(156,418,o),
(170,418,qs),
(208,418,ls),
(246,418,o),
(246,441,qs),
(246,458,o),
(218,465,o),
(189,465,qs),
(65,465,ls),
(33,465,o),
(0,457,o),
(0,440,qs),
(0,423,o),
(37,418,o),
(65,418,qs),
(74,418,o),
(81,414,o),
(83,408,qs),
(216,32,l),
(226,19,o),
(241,8,o),
(255,8,qs),
(269,8,o),
(286,16,o),
(291,29,qs),
(394,345,l),
(469,28,ls),
(476,0,o),
(494,-17,o),
(511,-17,qs),
(519,-17,o),
(543,-3,o),
(551,15,qs),
(590,111,o),
(642,240,o),
(674,321,o),
(690,358,o),
(694,361,qs),
(700,366,o),
(714,370,o),
(737,370,qs),
(757,370,o),
(793,376,o),
(793,394,qs),
(793,401,o),
(785,410,o),
(760,415,o),
(713,417,o),
(674,417,qs),
(632,417,o),
(583,413,o),
(558,405,o),
(551,394,o),
(551,388,qs),
(551,380,o),
(561,370,o),
(574,370,qs),
(584,370,ls),
(601,370,o),
(601,353,qs),
(601,346,o),
(585,291,o),
(560,217,o),
(528,132,o),
(512,95,q),
(492,176,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
88 57 18 3 6 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 1 0 1 106 0 0 8 0 106 0 10 10 15 67 9 1 7 7 8 83 0 8 8 23 67 4 1 2 2 3 83 0 3 3 15 67 0 6 6 13 67 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 106 0 0 8 0 106 0 10 8 7 8 10 7 104 0 8 9 1 7 3 8 7 91 0 3 4 1 2 6 3 2 91 0 6 6 13 67 0 5 5 21 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
95 93 82 79 52 37 38 41 37 54 56 40 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 770;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(428,311,o),
(407,384,o),
(399,408,o),
(397,413,qs),
(392,425,o),
(381,433,o),
(374,433,qs),
(366,433,o),
(352,424,o),
(347,413,qs),
(343,404,o),
(332,370,o),
(310,296,o),
(274,174,o),
(246,78,q),
(208,179,o),
(162,310,o),
(137,388,o),
(128,423,o),
(128,428,qs),
(128,438,o),
(142,438,qs),
(180,438,ls),
(217,438,o),
(217,453,qs),
(217,460,o),
(194,465,o),
(165,465,qs),
(41,465,ls),
(9,465,o),
(-14,460,o),
(-14,453,qs),
(-14,446,o),
(9,438,o),
(37,438,qs),
(60,438,o),
(78,425,o),
(85,408,qs),
(222,32,ls),
(227,19,o),
(240,8,o),
(246,8,qs),
(252,8,o),
(264,18,o),
(267,29,qs),
(371,375,l),
(474,3,ls),
(480,-17,o),
(495,-17,qs),
(503,-17,o),
(519,-3,o),
(527,15,qs),
(562,101,o),
(610,222,o),
(642,302,o),
(661,347,o),
(672,371,o),
(678,379,o),
(681,381,qs),
(688,386,o),
(701,390,o),
(724,390,qs),
(744,390,o),
(759,396,o),
(759,404,qs),
(759,408,o),
(753,413,o),
(735,416,o),
(703,417,o),
(676,417,qs),
(599,417,o),
(537,410,o),
(537,401,qs),
(537,396,o),
(550,390,o),
(561,390,qs),
(596,390,ls),
(618,390,o),
(618,373,qs),
(618,365,o),
(610,332,o),
(586,261,o),
(540,142,o),
(501,50,q),
(467,171,o)
);
},
{
closed = 1;
nodes = (
(418,640,o),
(410,640,qs),
(403,640,o),
(371,610,o),
(339,570,o),
(315,530,o),
(315,521,qs),
(315,510,o),
(323,510,qs),
(330,510,o),
(365,538,o),
(401,574,o),
(429,610,o),
(429,618,qs),
(429,632,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
69 38 0 3 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 10 9 10 106 0 9 6 9 106 7 1 5 5 6 83 0 6 6 23 67 0 8 8 15 67 2 1 0 0 1 83 0 1 1 15 67 0 4 4 13 67 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 10 9 10 106 0 9 6 9 106 0 8 5 1 5 8 1 104 0 6 7 1 5 8 6 5 91 0 1 2 1 0 4 1 0 91 0 4 4 13 67 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
98 96 91 89 45 51 52 37 37 43 37 52 54 11 24
CALL[ ]	/* CallFunction */";
};
width = 748;
}
);
note = wacute;
unicode = 7811;
},
{
glyphname = wcircumflex;
kernLeft = w;
kernRight = w;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(546,523,o),
(546,531,qs),
(546,547,o),
(511,592,o),
(465,634,o),
(422,664,o),
(413,664,qs),
(406,664,o),
(363,635,o),
(317,592,o),
(281,543,o),
(281,524,qs),
(281,519,o),
(288,510,o),
(294,510,qs),
(299,510,o),
(325,523,o),
(358,542,o),
(396,563,o),
(413,572,q),
(430,563,o),
(468,542,o),
(502,523,o),
(528,510,o),
(533,510,qs),
(540,510,o)
);
},
{
closed = 1;
nodes = (
(495,255,o),
(478,330,o),
(466,382,o),
(465,387,qs),
(459,412,o),
(435,435,o),
(413,435,qs),
(364,435,o),
(350,388,qs),
(347,379,o),
(331,331,o),
(309,262,o),
(281,177,o),
(266,131,q),
(238,218,o),
(206,321,o),
(190,376,o),
(186,394,o),
(186,396,qs),
(186,406,o),
(200,406,qs),
(228,406,ls),
(246,406,o),
(266,418,o),
(266,434,qs),
(266,457,o),
(235,465,o),
(206,465,qs),
(82,465,ls),
(50,465,o),
(10,455,o),
(10,432,qs),
(10,421,o),
(22,410,o),
(41,406,o),
(63,406,o),
(73,406,qs),
(79,406,o),
(84,402,o),
(87,394,qs),
(202,62,ls),
(213,31,o),
(240,8,o),
(259,8,qs),
(301,8,o),
(314,46,qs),
(405,315,l),
(467,43,ls),
(473,15,o),
(497,-17,o),
(519,-17,qs),
(555,-17,o),
(570,23,qs),
(628,173,o),
(695,344,o),
(703,349,q),
(708,354,o),
(725,359,o),
(748,359,qs),
(768,359,o),
(805,368,o),
(805,388,qs),
(805,396,o),
(797,408,o),
(770,416,o),
(718,420,o),
(674,420,qs),
(637,420,o),
(591,415,o),
(566,405,o),
(558,392,o),
(558,383,qs),
(558,369,o),
(570,359,o),
(578,359,qs),
(583,359,ls),
(599,359,o),
(599,348,qs),
(599,343,o),
(588,308,o),
(572,260,o),
(553,205,o),
(537,158,o),
(526,125,o),
(526,122,q),
(516,165,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
5 1 0 2 97 64 26 3 7 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 2 0 2 106 1 12 2 0 9 0 106 5 1 3 8 7 8 3 7 104 0 11 11 15 67 0 4 4 15 67 10 1 8 8 9 83 0 9 9 23 67 0 7 7 13 67 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 2 0 2 106 1 12 2 0 9 0 106 0 11 9 4 9 11 4 104 0 4 8 9 4 8 102 5 1 3 8 7 8 3 7 104 0 9 10 1 8 3 9 8 91 0 7 7 13 67 0 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 105 103 91 88 84 81 76 73 68 66 61 59 53 51 45 43 37 34 19 17 11 9 0 25 1 25 13 15
CALL[ ]	/* CallFunction */";
};
width = 785;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
ref = .ttfautohint;
},
{
alignment = -1;
ref = w;
},
{
alignment = -1;
pos = (239,0);
ref = circumflex;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
92 1 9 11 71 40 1 3 4 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 11 9 11 106 10 12 2 9 6 9 106 0 8 8 15 67 7 1 5 5 6 83 0 6 6 23 67 2 1 0 0 1 83 0 1 1 15 67 0 4 4 13 67 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 11 9 11 106 10 12 2 9 6 9 106 0 8 6 5 6 8 5 104 0 6 7 1 5 1 6 5 91 0 1 2 1 0 4 1 0 91 0 4 4 13 67 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
88 87 105 103 98 96 87 111 88 111 43 51 52 37 38 41 37 54 55 13 35
CALL[ ]	/* CallFunction */";
};
width = 770;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(428,311,o),
(407,384,o),
(399,408,o),
(397,413,qs),
(392,425,o),
(381,433,o),
(374,433,qs),
(366,433,o),
(352,424,o),
(347,413,qs),
(343,404,o),
(332,370,o),
(310,296,o),
(274,174,o),
(246,78,q),
(208,179,o),
(162,310,o),
(137,388,o),
(128,423,o),
(128,428,qs),
(128,438,o),
(142,438,qs),
(180,438,ls),
(217,438,o),
(217,453,qs),
(217,460,o),
(194,465,o),
(165,465,qs),
(41,465,ls),
(9,465,o),
(-14,460,o),
(-14,453,qs),
(-14,446,o),
(9,438,o),
(37,438,qs),
(60,438,o),
(78,425,o),
(85,408,qs),
(222,32,ls),
(227,19,o),
(240,8,o),
(246,8,qs),
(252,8,o),
(264,18,o),
(267,29,qs),
(371,375,l),
(474,3,ls),
(480,-17,o),
(495,-17,qs),
(503,-17,o),
(519,-3,o),
(527,15,qs),
(562,101,o),
(610,222,o),
(642,302,o),
(661,347,o),
(672,371,o),
(678,379,o),
(681,381,qs),
(688,386,o),
(701,390,o),
(724,390,qs),
(744,390,o),
(759,396,o),
(759,404,qs),
(759,408,o),
(753,413,o),
(735,416,o),
(703,417,o),
(676,417,qs),
(599,417,o),
(537,410,o),
(537,401,qs),
(537,396,o),
(550,390,o),
(561,390,qs),
(596,390,ls),
(618,390,o),
(618,373,qs),
(618,365,o),
(610,332,o),
(586,261,o),
(540,142,o),
(501,50,q),
(467,171,o)
);
},
{
closed = 1;
nodes = (
(500,521,qs),
(500,530,o),
(467,570,o),
(424,610,o),
(381,640,o),
(372,640,qs),
(363,640,o),
(322,610,o),
(278,570,o),
(245,530,o),
(245,521,qs),
(245,510,o),
(253,510,qs),
(258,510,o),
(284,528,o),
(317,554,o),
(355,584,o),
(372,596,q),
(389,584,o),
(427,554,o),
(461,528,o),
(487,510,o),
(492,510,qs),
(500,510,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
90 1 9 11 69 38 0 3 4 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 11 9 11 106 10 12 2 9 6 9 106 7 1 5 5 6 83 0 6 6 23 67 0 8 8 15 67 2 1 0 0 1 83 0 1 1 15 67 0 4 4 13 67 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 11 9 11 106 10 12 2 9 6 9 106 0 8 5 1 5 8 1 104 0 6 7 1 5 8 6 5 91 0 1 2 1 0 4 1 0 91 0 4 4 13 67 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
86 85 103 101 96 94 85 108 86 108 45 51 52 37 37 43 37 52 54 13 24
CALL[ ]	/* CallFunction */";
};
width = 748;
}
);
note = wcircumflex;
unicode = 373;
},
{
glyphname = wdieresis;
kernLeft = w;
kernRight = w;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(281,509,o),
(306,509,qs),
(317,509,o),
(341,515,o),
(360,531,o),
(373,558,o),
(373,579,qs),
(373,606,o),
(337,640,o),
(313,640,qs),
(295,640,o),
(270,626,o),
(254,606,o),
(247,583,o),
(247,575,qs),
(247,546,o)
);
},
{
closed = 1;
nodes = (
(488,486,o),
(513,486,qs),
(524,486,o),
(548,492,o),
(567,508,o),
(580,535,o),
(580,556,qs),
(580,583,o),
(544,617,o),
(520,617,qs),
(502,617,o),
(477,603,o),
(461,583,o),
(454,560,o),
(454,552,qs),
(454,523,o)
);
},
{
closed = 1;
nodes = (
(495,255,o),
(478,330,o),
(466,382,o),
(465,387,qs),
(459,412,o),
(435,435,o),
(413,435,qs),
(364,435,o),
(350,388,qs),
(347,379,o),
(331,331,o),
(309,262,o),
(281,177,o),
(266,131,q),
(238,218,o),
(206,321,o),
(190,376,o),
(186,394,o),
(186,396,qs),
(186,406,o),
(200,406,qs),
(228,406,ls),
(246,406,o),
(266,418,o),
(266,434,qs),
(266,457,o),
(235,465,o),
(206,465,qs),
(82,465,ls),
(50,465,o),
(10,455,o),
(10,432,qs),
(10,421,o),
(22,410,o),
(41,406,o),
(63,406,o),
(73,406,qs),
(79,406,o),
(84,402,o),
(87,394,qs),
(202,62,ls),
(213,31,o),
(240,8,o),
(259,8,qs),
(301,8,o),
(314,46,qs),
(405,315,l),
(467,43,ls),
(473,15,o),
(497,-17,o),
(519,-17,qs),
(555,-17,o),
(570,23,qs),
(628,173,o),
(695,344,o),
(703,349,q),
(708,354,o),
(725,359,o),
(748,359,qs),
(768,359,o),
(805,368,o),
(805,388,qs),
(805,396,o),
(797,408,o),
(770,416,o),
(718,420,o),
(674,420,qs),
(637,420,o),
(591,415,o),
(566,405,o),
(558,392,o),
(558,383,qs),
(558,369,o),
(570,359,o),
(578,359,qs),
(583,359,ls),
(599,359,o),
(599,348,qs),
(599,343,o),
(588,308,o),
(572,260,o),
(553,205,o),
(537,158,o),
(526,125,o),
(526,122,q),
(516,165,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
103 70 32 3 8 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
6 1 4 9 8 9 4 8 104 0 0 0 1 3 0 1 91 0 2 0 3 10 2 3 91 0 12 12 15 67 0 5 5 15 67 11 1 9 9 10 83 0 10 10 23 67 0 8 8 13 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 12 10 5 10 12 5 104 0 5 9 10 5 9 102 6 1 4 9 8 9 4 8 104 0 0 0 1 3 0 1 91 0 2 0 3 10 2 3 91 0 10 11 1 9 4 10 9 91 0 8 8 13 67 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
111 109 97 94 90 87 82 79 37 38 38 38 58 38 38 38 36 13 24
CALL[ ]	/* CallFunction */";
};
width = 785;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
ref = .ttfautohint;
},
{
alignment = -1;
ref = w;
},
{
alignment = -1;
pos = (226,0);
ref = dieresis;
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
71 40 1 3 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 9 0 10 12 9 10 91 0 11 0 12 6 11 12 91 0 8 8 15 67 7 1 5 5 6 83 0 6 6 23 67 2 1 0 0 1 83 0 1 1 15 67 0 4 4 13 67 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 8 6 5 6 8 5 104 0 9 0 10 12 9 10 91 0 11 0 12 6 11 12 91 0 6 7 1 5 1 6 5 91 0 1 2 1 0 4 1 0 91 0 4 4 13 67 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
113 111 107 105 99 97 93 91 43 51 52 37 38 41 37 54 55 13 35
CALL[ ]	/* CallFunction */";
};
width = 770;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(428,311,o),
(407,384,o),
(399,408,o),
(397,413,qs),
(392,425,o),
(381,433,o),
(374,433,qs),
(366,433,o),
(352,424,o),
(347,413,qs),
(343,404,o),
(332,370,o),
(310,296,o),
(274,174,o),
(246,78,q),
(208,179,o),
(162,310,o),
(137,388,o),
(128,423,o),
(128,428,qs),
(128,438,o),
(142,438,qs),
(180,438,ls),
(217,438,o),
(217,453,qs),
(217,460,o),
(194,465,o),
(165,465,qs),
(41,465,ls),
(9,465,o),
(-14,460,o),
(-14,453,qs),
(-14,446,o),
(9,438,o),
(37,438,qs),
(60,438,o),
(78,425,o),
(85,408,qs),
(222,32,ls),
(227,19,o),
(240,8,o),
(246,8,qs),
(252,8,o),
(264,18,o),
(267,29,qs),
(371,375,l),
(474,3,ls),
(480,-17,o),
(495,-17,qs),
(503,-17,o),
(519,-3,o),
(527,15,qs),
(562,101,o),
(610,222,o),
(642,302,o),
(661,347,o),
(672,371,o),
(678,379,o),
(681,381,qs),
(688,386,o),
(701,390,o),
(724,390,qs),
(744,390,o),
(759,396,o),
(759,404,qs),
(759,408,o),
(753,413,o),
(735,416,o),
(703,417,o),
(676,417,qs),
(599,417,o),
(537,410,o),
(537,401,qs),
(537,396,o),
(550,390,o),
(561,390,qs),
(596,390,ls),
(618,390,o),
(618,373,qs),
(618,365,o),
(610,332,o),
(586,261,o),
(540,142,o),
(501,50,q),
(467,171,o)
);
},
{
closed = 1;
nodes = (
(253,533,o),
(267,533,qs),
(281,533,o),
(308,552,o),
(308,579,qs),
(308,596,o),
(288,616,o),
(274,616,qs),
(263,616,o),
(248,607,o),
(238,594,o),
(233,580,o),
(233,575,qs),
(233,557,o)
);
},
{
closed = 1;
nodes = (
(460,510,o),
(474,510,qs),
(488,510,o),
(515,529,o),
(515,556,qs),
(515,573,o),
(495,593,o),
(481,593,qs),
(470,593,o),
(455,584,o),
(445,571,o),
(440,557,o),
(440,552,qs),
(440,534,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
69 38 0 3 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 9 0 10 12 9 10 91 0 11 0 12 6 11 12 91 7 1 5 5 6 83 0 6 6 23 67 0 8 8 15 67 2 1 0 0 1 83 0 1 1 15 67 0 4 4 13 67 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 8 5 1 5 8 1 104 0 9 0 10 12 9 10 91 0 11 0 12 6 11 12 91 0 6 7 1 5 8 6 5 91 0 1 2 1 0 4 1 0 91 0 4 4 13 67 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
111 109 105 103 97 95 91 89 45 51 52 37 37 43 37 52 54 13 24
CALL[ ]	/* CallFunction */";
};
width = 748;
}
);
note = wdieresis;
unicode = 7813;
},
{
glyphname = wgrave;
kernLeft = w;
kernRight = w;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(320,581,o),
(372,535,o),
(423,501,o),
(437,501,qs),
(448,501,o),
(474,512,o),
(474,523,qs),
(474,526,o),
(450,579,o),
(414,640,o),
(371,689,o),
(352,689,qs),
(320,688,o),
(282,660,o),
(282,641,qs),
(282,628,o)
);
},
{
closed = 1;
nodes = (
(495,255,o),
(478,330,o),
(466,382,o),
(465,387,qs),
(459,412,o),
(435,435,o),
(413,435,qs),
(364,435,o),
(350,388,qs),
(347,379,o),
(331,331,o),
(309,262,o),
(281,177,o),
(266,131,q),
(238,218,o),
(206,321,o),
(190,376,o),
(186,394,o),
(186,396,qs),
(186,406,o),
(200,406,qs),
(228,406,ls),
(246,406,o),
(266,418,o),
(266,434,qs),
(266,457,o),
(235,465,o),
(206,465,qs),
(82,465,ls),
(50,465,o),
(10,455,o),
(10,432,qs),
(10,421,o),
(22,410,o),
(41,406,o),
(63,406,o),
(73,406,qs),
(79,406,o),
(84,402,o),
(87,394,qs),
(202,62,ls),
(213,31,o),
(240,8,o),
(259,8,qs),
(301,8,o),
(314,46,qs),
(405,315,l),
(467,43,ls),
(473,15,o),
(497,-17,o),
(519,-17,qs),
(555,-17,o),
(570,23,qs),
(628,173,o),
(695,344,o),
(703,349,q),
(708,354,o),
(725,359,o),
(748,359,qs),
(768,359,o),
(805,368,o),
(805,388,qs),
(805,396,o),
(797,408,o),
(770,416,o),
(718,420,o),
(674,420,qs),
(637,420,o),
(591,415,o),
(566,405,o),
(558,392,o),
(558,383,qs),
(558,369,o),
(570,359,o),
(578,359,qs),
(583,359,ls),
(599,359,o),
(599,348,qs),
(599,343,o),
(588,308,o),
(572,260,o),
(553,205,o),
(537,158,o),
(526,125,o),
(526,122,q),
(516,165,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
87 54 16 3 6 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 0 1 0 106 0 1 8 1 106 4 1 2 7 6 7 2 6 104 0 10 10 15 67 0 3 3 15 67 9 1 7 7 8 83 0 8 8 23 67 0 6 6 13 67 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 0 1 0 106 0 1 8 1 106 0 10 8 3 8 10 3 104 0 3 7 8 3 7 102 4 1 2 7 6 7 2 6 104 0 8 9 1 7 2 8 7 91 0 6 6 13 67 0 5 5 21 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
95 93 81 78 53 53 37 38 38 38 60 38 34 11 24
CALL[ ]	/* CallFunction */";
};
width = 785;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(330,578,o),
(375,536,o),
(420,504,o),
(431,504,qs),
(439,504,o),
(456,512,o),
(456,522,qs),
(456,524,o),
(445,548,o),
(426,581,o),
(403,618,o),
(378,649,o),
(355,670,o),
(345,670,qs),
(322,670,o),
(296,649,o),
(296,632,qs),
(296,621,o)
);
},
{
closed = 1;
nodes = (
(467,284,o),
(451,352,o),
(443,388,o),
(439,405,o),
(437,409,o),
(436,413,q),
(427,425,o),
(409,433,o),
(398,433,qs),
(385,433,o),
(364,424,o),
(356,413,q),
(349,396,o),
(302,242,o),
(258,111,q),
(224,205,o),
(184,318,o),
(163,381,o),
(156,405,o),
(156,408,qs),
(156,418,o),
(170,418,qs),
(208,418,ls),
(246,418,o),
(246,441,qs),
(246,458,o),
(218,465,o),
(189,465,qs),
(65,465,ls),
(33,465,o),
(0,457,o),
(0,440,qs),
(0,423,o),
(37,418,o),
(65,418,qs),
(74,418,o),
(81,414,o),
(83,408,qs),
(216,32,l),
(226,19,o),
(241,8,o),
(255,8,qs),
(269,8,o),
(286,16,o),
(291,29,qs),
(394,345,l),
(469,28,ls),
(476,0,o),
(494,-17,o),
(511,-17,qs),
(519,-17,o),
(543,-3,o),
(551,15,qs),
(590,111,o),
(642,240,o),
(674,321,o),
(690,358,o),
(694,361,qs),
(700,366,o),
(714,370,o),
(737,370,qs),
(757,370,o),
(793,376,o),
(793,394,qs),
(793,401,o),
(785,410,o),
(760,415,o),
(713,417,o),
(674,417,qs),
(632,417,o),
(583,413,o),
(558,405,o),
(551,394,o),
(551,388,qs),
(551,380,o),
(561,370,o),
(574,370,qs),
(584,370,ls),
(601,370,o),
(601,353,qs),
(601,346,o),
(585,291,o),
(560,217,o),
(528,132,o),
(512,95,q),
(492,176,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
88 57 18 3 6 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 0 1 0 106 0 1 8 1 106 0 10 10 15 67 9 1 7 7 8 83 0 8 8 23 67 4 1 2 2 3 83 0 3 3 15 67 0 6 6 13 67 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 0 1 0 106 0 1 8 1 106 0 10 8 7 8 10 7 104 0 8 9 1 7 3 8 7 91 0 3 4 1 2 6 3 2 91 0 6 6 13 67 0 5 5 21 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
95 93 82 79 52 37 38 41 37 54 58 40 34 11 24
CALL[ ]	/* CallFunction */";
};
width = 770;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(428,311,o),
(407,384,o),
(399,408,o),
(397,413,qs),
(392,425,o),
(381,433,o),
(374,433,qs),
(366,433,o),
(352,424,o),
(347,413,qs),
(343,404,o),
(332,370,o),
(310,296,o),
(274,174,o),
(246,78,q),
(208,179,o),
(162,310,o),
(137,388,o),
(128,423,o),
(128,428,qs),
(128,438,o),
(142,438,qs),
(180,438,ls),
(217,438,o),
(217,453,qs),
(217,460,o),
(194,465,o),
(165,465,qs),
(41,465,ls),
(9,465,o),
(-14,460,o),
(-14,453,qs),
(-14,446,o),
(9,438,o),
(37,438,qs),
(60,438,o),
(78,425,o),
(85,408,qs),
(222,32,ls),
(227,19,o),
(240,8,o),
(246,8,qs),
(252,8,o),
(264,18,o),
(267,29,qs),
(371,375,l),
(474,3,ls),
(480,-17,o),
(495,-17,qs),
(503,-17,o),
(519,-3,o),
(527,15,qs),
(562,101,o),
(610,222,o),
(642,302,o),
(661,347,o),
(672,371,o),
(678,379,o),
(681,381,qs),
(688,386,o),
(701,390,o),
(724,390,qs),
(744,390,o),
(759,396,o),
(759,404,qs),
(759,408,o),
(753,413,o),
(735,416,o),
(703,417,o),
(676,417,qs),
(599,417,o),
(537,410,o),
(537,401,qs),
(537,396,o),
(550,390,o),
(561,390,qs),
(596,390,ls),
(618,390,o),
(618,373,qs),
(618,365,o),
(610,332,o),
(586,261,o),
(540,142,o),
(501,50,q),
(467,171,o)
);
},
{
closed = 1;
nodes = (
(344,574,o),
(380,538,o),
(415,510,o),
(422,510,qs),
(430,510,o),
(430,521,qs),
(430,530,o),
(406,570,o),
(374,610,o),
(342,640,o),
(335,640,qs),
(327,640,o),
(316,632,o),
(316,618,qs),
(316,610,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
69 38 0 3 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 9 10 9 106 0 10 6 10 106 7 1 5 5 6 83 0 6 6 23 67 0 8 8 15 67 2 1 0 0 1 83 0 1 1 15 67 0 4 4 13 67 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 9 10 9 106 0 10 6 10 106 0 8 5 1 5 8 1 104 0 6 7 1 5 8 6 5 91 0 1 2 1 0 4 1 0 91 0 4 4 13 67 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
96 94 89 87 45 51 52 37 37 43 37 52 54 11 24
CALL[ ]	/* CallFunction */";
};
width = 748;
}
);
note = wgrave;
unicode = 7809;
},
{
glyphname = x;
kernLeft = x;
kernRight = x;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(252,1,qs),
(252,-15,o),
(279,-28,o),
(318,-28,qs),
(335,-28,o),
(374,-27,o),
(391,-27,qs),
(414,-27,o),
(449,-28,o),
(474,-28,qs),
(491,-28,o),
(524,-17,o),
(524,4,qs),
(524,14,o),
(519,27,o),
(502,36,o),
(471,42,o),
(445,44,qs),
(430,45,o),
(409,53,o),
(379,85,o),
(330,150,o),
(288,208,q),
(309,238,o),
(335,275,o),
(351,296,o),
(359,305,o),
(361,308,qs),
(368,316,o),
(381,326,o),
(403,333,o),
(442,336,o),
(475,338,qs),
(510,340,o),
(527,360,o),
(527,375,qs),
(527,394,o),
(502,408,o),
(464,408,qs),
(290,408,ls),
(244,408,o),
(244,368,qs),
(244,354,o),
(252,343,o),
(256,340,qs),
(262,335,o),
(276,334,o),
(276,332,qs),
(276,330,o),
(274,325,o),
(269,318,qs),
(238,274,l),
(206,316,o),
(186,355,o),
(186,361,qs),
(186,366,o),
(197,372,o),
(210,380,o),
(221,392,o),
(221,403,qs),
(221,410,o),
(218,426,o),
(209,439,o),
(191,447,o),
(176,447,qs),
(62,447,ls),
(39,447,o),
(10,443,o),
(-6,433,o),
(-12,418,o),
(-12,408,qs),
(-12,387,o),
(27,375,o),
(60,372,qs),
(67,371,o),
(75,369,o),
(83,362,o),
(93,348,o),
(101,336,qs),
(190,207,l),
(181,194,o),
(173,184,o),
(160,167,o),
(134,132,o),
(106,95,qs),
(97,83,o),
(64,75,o),
(31,68,o),
(7,55,o),
(7,39,qs),
(7,25,o),
(20,10,o),
(38,2,o),
(57,1,o),
(63,1,qs),
(77,1,o),
(101,2,o),
(123,2,qs),
(135,2,o),
(152,1,o),
(167,1,o),
(184,0,o),
(196,0,qs),
(207,0,o),
(232,15,o),
(232,35,qs),
(232,59,o),
(211,64,qs),
(196,68,o),
(196,74,qs),
(196,82,o),
(225,120,o),
(239,145,q),
(256,121,o),
(277,89,o),
(289,70,o),
(293,60,o),
(293,57,qs),
(293,51,o),
(281,44,o),
(273,39,qs),
(252,27,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
98 69 41 8 4 4 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 2 0 3 4 2 3 91 0 1 1 15 67 0 0 0 13 67 0 4 4 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 2 0 3 4 2 3 91 0 1 1 0 83 0 0 0 13 67 0 4 4 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 2 0 3 4 2 3 91 0 4 0 5 4 5 87 0 1 1 0 83 0 0 0 13 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
118 110 103 102 89 87 83 80 57 54 28 17 6 15
CALL[ ]	/* CallFunction */";
};
width = 559;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(296,8,o),
(296,2,qs),
(296,-6,o),
(317,-28,o),
(343,-28,qs),
(360,-28,o),
(389,-27,o),
(406,-27,qs),
(429,-27,o),
(464,-28,o),
(489,-28,qs),
(504,-28,o),
(532,-21,o),
(532,-1,qs),
(532,11,o),
(509,22,o),
(493,23,qs),
(475,24,o),
(450,27,o),
(434,32,qs),
(428,34,o),
(411,49,o),
(379,87,o),
(329,154,o),
(290,208,q),
(311,237,o),
(345,290,o),
(370,319,qs),
(387,339,o),
(404,345,qs),
(415,350,o),
(464,352,o),
(506,352,qs),
(516,352,o),
(528,369,o),
(528,375,qs),
(528,407,o),
(505,407,qs),
(321,407,ls),
(302,407,o),
(277,394,o),
(277,377,qs),
(277,365,o),
(294,355,o),
(298,353,qs),
(303,350,o),
(303,347,qs),
(303,342,o),
(288,317,o),
(276,298,qs),
(251,261,l),
(235,282,o),
(208,321,o),
(188,351,o),
(176,372,o),
(176,375,qs),
(176,382,o),
(193,384,o),
(207,384,qs),
(223,384,o),
(240,402,o),
(240,411,qs),
(240,417,o),
(238,428,o),
(227,437,o),
(205,443,o),
(184,443,qs),
(69,443,ls),
(22,443,o),
(-8,430,o),
(-8,414,qs),
(-8,398,o),
(21,388,o),
(50,386,qs),
(72,384,o),
(96,372,o),
(112,350,qs),
(213,207,l),
(204,195,o),
(192,179,o),
(174,155,o),
(145,116,o),
(118,81,qs),
(110,71,o),
(90,62,o),
(76,59,q),
(55,57,o),
(15,46,o),
(15,29,qs),
(15,19,o),
(24,8,o),
(37,2,o),
(51,1,o),
(57,1,qs),
(71,1,o),
(113,2,o),
(135,2,qs),
(147,2,o),
(164,1,o),
(179,1,o),
(196,0,o),
(208,0,qs),
(221,0,o),
(251,9,o),
(251,26,qs),
(251,33,o),
(235,52,o),
(204,52,qs),
(191,52,o),
(186,58,o),
(186,62,qs),
(186,66,o),
(201,88,o),
(206,94,qs),
(217,109,o),
(235,133,o),
(252,156,q),
(264,139,o),
(292,102,o),
(314,70,o),
(329,45,o),
(329,41,qs),
(329,32,o),
(320,29,o),
(312,27,qs),
(303,25,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
80 1 6 2 100 74 47 8 4 0 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 5 0 6 0 5 6 91 4 1 2 2 3 83 0 3 3 15 67 0 0 0 1 83 0 1 1 13 67 0 7 7 8 83 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 3 4 1 2 6 3 2 91 0 5 0 6 0 5 6 91 0 0 0 1 83 0 1 1 13 67 0 7 7 8 83 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 3 4 1 2 6 3 2 91 0 5 0 6 0 5 6 91 0 7 0 8 7 8 87 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
121 113 109 107 94 91 88 85 67 65 59 56 52 51 32 22 18 16 9 15
CALL[ ]	/* CallFunction */";
};
width = 555;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(318,-14,o),
(318,-20,qs),
(318,-25,o),
(339,-28,o),
(365,-28,qs),
(382,-28,o),
(411,-27,o),
(428,-27,qs),
(451,-27,o),
(486,-28,o),
(511,-28,qs),
(526,-28,o),
(544,-24,o),
(544,-19,qs),
(544,-8,o),
(515,-7,qs),
(497,-6,o),
(472,-3,o),
(456,2,qs),
(450,4,o),
(427,28,o),
(388,78,o),
(332,154,o),
(293,208,q),
(303,222,o),
(329,259,o),
(356,297,o),
(384,333,o),
(396,348,qs),
(413,368,o),
(430,374,qs),
(436,376,o),
(446,379,o),
(462,380,o),
(487,381,o),
(508,381,qs),
(530,381,o),
(530,394,qs),
(530,406,o),
(507,406,qs),
(347,406,ls),
(312,406,o),
(288,402,o),
(288,396,qs),
(288,388,o),
(304,383,o),
(324,382,qs),
(347,381,o),
(359,378,o),
(359,371,qs),
(359,365,o),
(343,342,o),
(332,327,qs),
(270,239,l),
(254,260,o),
(217,313,o),
(184,360,o),
(162,395,o),
(162,398,qs),
(162,405,o),
(180,407,o),
(209,407,qs),
(223,407,o),
(241,417,o),
(242,424,qs),
(242,431,o),
(214,436,o),
(170,436,qs),
(79,436,ls),
(32,436,o),
(-2,432,o),
(-2,424,qs),
(-2,417,o),
(14,410,o),
(36,409,qs),
(52,408,o),
(79,406,o),
(101,399,o),
(119,385,o),
(128,373,qs),
(246,207,l),
(237,195,o),
(218,168,o),
(192,132,o),
(157,85,o),
(132,53,qs),
(124,42,o),
(94,32,o),
(68,29,qs),
(27,25,o),
(27,13,qs),
(27,1,o),
(49,1,qs),
(63,1,o),
(105,2,o),
(127,2,qs),
(152,2,o),
(206,0,o),
(230,0,qs),
(253,0,o),
(253,13,qs),
(253,20,o),
(233,25,o),
(196,25,qs),
(172,25,o),
(172,35,qs),
(172,43,o),
(181,55,qs),
(207,90,o),
(251,152,o),
(270,175,q),
(324,101,o),
(381,20,o),
(381,11,qs),
(381,2,o),
(371,-2,o),
(364,-3,qs),
(335,-6,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
52 1 2 3 93 63 36 6 4 0 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 6 7 1 5 0 6 5 91 4 1 2 2 3 83 0 3 3 15 67 0 0 0 1 83 0 1 1 13 67 0 8 8 9 83 0 9 9 21 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 4 1 2 6 3 2 91 0 6 7 1 5 0 6 5 91 0 0 0 1 83 0 1 1 13 67 0 8 8 9 83 0 9 9 21 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 3 4 1 2 6 3 2 91 0 6 7 1 5 0 6 5 91 0 8 0 9 8 9 87 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
113 105 102 100 84 80 78 75 71 69 56 54 50 47 43 41 131 44 10 17
CALL[ ]	/* CallFunction */";
};
width = 550;
}
);
note = x;
unicode = 120;
},
{
glyphname = y;
kernLeft = y;
kernRight = y;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(155,-70,o),
(160,-68,qs),
(189,-60,o),
(209,-32,o),
(209,-13,qs),
(209,5,o),
(182,27,o),
(162,27,qs),
(127,27,o),
(75,-33,o),
(75,-85,qs),
(75,-134,o),
(135,-196,o),
(196,-196,qs),
(247,-196,o),
(320,-155,o),
(345,-124,qs),
(355,-112,o),
(373,-82,o),
(391,-43,o),
(412,9,o),
(424,44,qs),
(519,313,ls),
(523,324,o),
(533,336,o),
(544,337,qs),
(556,338,o),
(580,342,o),
(600,351,o),
(613,365,o),
(613,375,qs),
(613,395,o),
(581,411,o),
(555,411,qs),
(393,411,ls),
(373,411,o),
(343,397,o),
(343,375,qs),
(343,361,o),
(358,344,o),
(380,341,qs),
(404,338,o),
(422,327,o),
(422,319,qs),
(422,305,o),
(414,282,qs),
(354,90,l),
(238,299,ls),
(227,319,o),
(220,335,o),
(220,342,qs),
(220,350,o),
(230,352,qs),
(261,358,o),
(287,377,o),
(287,392,qs),
(287,408,o),
(266,428,o),
(235,428,qs),
(81,428,ls),
(49,428,o),
(19,415,o),
(19,390,qs),
(19,373,o),
(43,356,o),
(81,352,qs),
(106,350,o),
(125,338,o),
(133,324,qs),
(319,-12,l),
(312,-33,o),
(291,-78,o),
(272,-98,qs),
(258,-112,o),
(229,-127,o),
(205,-127,qs),
(175,-127,o),
(149,-105,o),
(149,-85,qs),
(149,-75,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
32 1 4 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 2 1 4 1 2 4 104 0 4 0 1 4 0 102 0 1 1 15 67 0 0 0 3 84 0 3 3 17 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 1 2 1 106 0 2 4 2 106 0 4 0 4 106 0 0 3 3 0 79 0 0 0 3 84 0 3 0 3 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
72 70 66 64 46 43 62 34 5 17
CALL[ ]	/* CallFunction */";
};
width = 621;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(138,-62,o),
(147,-61,qs),
(153,-61,o),
(166,-58,o),
(178,-51,o),
(186,-39,o),
(186,-28,qs),
(186,-13,o),
(163,2,o),
(150,2,qs),
(137,2,o),
(110,-9,o),
(89,-30,o),
(76,-63,o),
(76,-84,qs),
(76,-108,o),
(94,-144,o),
(124,-170,o),
(163,-183,o),
(184,-183,qs),
(224,-183,o),
(288,-152,o),
(317,-118,qs),
(341,-90,o),
(378,-10,o),
(397,44,qs),
(499,331,ls),
(505,347,o),
(521,354,o),
(545,355,qs),
(565,356,o),
(600,366,o),
(600,383,qs),
(600,399,o),
(567,411,o),
(545,411,qs),
(377,411,ls),
(354,411,o),
(341,400,o),
(341,383,qs),
(341,372,o),
(362,355,o),
(386,355,qs),
(410,355,o),
(423,346,o),
(423,338,qs),
(423,323,o),
(415,300,qs),
(340,68,l),
(202,327,ls),
(197,337,o),
(193,356,o),
(193,359,qs),
(193,369,o),
(200,372,o),
(205,372,qs),
(225,372,o),
(239,390,o),
(239,401,qs),
(239,413,o),
(224,428,o),
(198,428,qs),
(47,428,ls),
(23,428,o),
(-14,413,o),
(-14,395,qs),
(-14,378,o),
(26,371,o),
(64,370,qs),
(76,370,o),
(92,368,o),
(104,363,o),
(113,352,o),
(118,343,qs),
(313,-12,l),
(300,-41,o),
(275,-85,o),
(259,-99,qs),
(246,-111,o),
(212,-128,o),
(195,-128,qs),
(166,-128,o),
(129,-101,o),
(129,-84,qs),
(129,-77,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
35 1 8 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 5 6 1 4 8 5 4 91 0 8 0 9 0 8 9 91 3 1 1 1 2 83 0 2 2 15 67 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 8 0 9 0 8 9 91 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 8 0 9 0 8 9 91 0 0 7 7 0 79 0 0 0 7 83 0 7 0 7 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
82 81 40 40 36 52 43 36 52 42 34 10 24
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(119,-93,qs),
(130,-92,o),
(156,-80,o),
(156,-58,qs),
(156,-39,o),
(136,-28,o),
(126,-28,qs),
(104,-28,o),
(69,-62,o),
(69,-96,qs),
(69,-118,o),
(86,-151,o),
(113,-172,o),
(148,-183,o),
(167,-183,qs),
(195,-183,o),
(250,-156,o),
(279,-118,qs),
(322,-62,o),
(359,44,qs),
(471,361,ls),
(474,369,o),
(482,379,o),
(497,383,o),
(524,385,o),
(547,385,qs),
(582,386,o),
(582,397,qs),
(582,405,o),
(562,411,o),
(547,411,qs),
(379,411,ls),
(356,411,o),
(338,405,o),
(338,397,qs),
(338,389,o),
(364,385,o),
(388,385,qs),
(412,385,o),
(425,378,o),
(425,368,qs),
(425,353,o),
(417,330,qs),
(320,32,l),
(148,357,ls),
(143,367,o),
(139,386,o),
(139,389,qs),
(139,399,o),
(166,402,o),
(181,402,qs),
(220,402,o),
(220,417,qs),
(220,423,o),
(200,428,o),
(174,428,qs),
(23,428,ls),
(-1,428,o),
(-18,422,o),
(-18,414,qs),
(-18,406,o),
(2,401,o),
(40,400,qs),
(52,400,o),
(68,398,o),
(80,393,o),
(89,382,o),
(94,373,qs),
(305,-12,l),
(292,-41,o),
(266,-87,o),
(254,-103,qs),
(235,-128,o),
(197,-152,o),
(171,-152,qs),
(142,-152,o),
(103,-126,o),
(103,-109,qs),
(103,-96,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 8 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 8 4 0 4 8 0 104 0 5 6 1 4 8 5 4 91 3 1 1 1 2 83 0 2 2 15 67 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 8 4 0 4 8 0 104 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 8 4 0 4 8 0 104 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 7 7 0 79 0 0 0 7 83 0 7 0 7 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 41 35 52 43 35 52 42 34 9 24
CALL[ ]	/* CallFunction */";
};
width = 577;
}
);
note = y;
unicode = 121;
},
{
glyphname = yacute;
kernLeft = y;
kernRight = y;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(372,687,o),
(340,688,qs),
(321,688,o),
(278,639,o),
(242,578,o),
(218,525,o),
(218,522,qs),
(218,511,o),
(244,500,o),
(255,500,qs),
(264,500,o),
(294,516,o),
(328,541,o),
(364,573,o),
(392,604,o),
(410,631,o),
(410,640,qs),
(410,659,o)
);
},
{
closed = 1;
nodes = (
(155,-70,o),
(160,-68,qs),
(189,-60,o),
(209,-32,o),
(209,-13,qs),
(209,5,o),
(182,27,o),
(162,27,qs),
(127,27,o),
(75,-33,o),
(75,-85,qs),
(75,-134,o),
(135,-196,o),
(196,-196,qs),
(247,-196,o),
(320,-155,o),
(345,-124,qs),
(355,-112,o),
(373,-82,o),
(391,-43,o),
(412,9,o),
(424,44,qs),
(519,313,ls),
(523,324,o),
(533,336,o),
(544,337,qs),
(556,338,o),
(580,342,o),
(600,351,o),
(613,365,o),
(613,375,qs),
(613,395,o),
(581,411,o),
(555,411,qs),
(393,411,ls),
(373,411,o),
(343,397,o),
(343,375,qs),
(343,361,o),
(358,344,o),
(380,341,qs),
(404,338,o),
(422,327,o),
(422,319,qs),
(422,305,o),
(414,282,qs),
(354,90,l),
(238,299,ls),
(227,319,o),
(220,335,o),
(220,342,qs),
(220,350,o),
(230,352,qs),
(261,358,o),
(287,377,o),
(287,392,qs),
(287,408,o),
(266,428,o),
(235,428,qs),
(81,428,ls),
(49,428,o),
(19,415,o),
(19,390,qs),
(19,373,o),
(43,356,o),
(81,352,qs),
(106,350,o),
(125,338,o),
(133,324,qs),
(319,-12,l),
(312,-33,o),
(291,-78,o),
(272,-98,qs),
(258,-112,o),
(229,-127,o),
(205,-127,qs),
(175,-127,o),
(149,-105,o),
(149,-85,qs),
(149,-75,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
50 1 6 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 3 0 106 0 4 3 6 3 4 6 104 0 6 2 3 6 2 102 0 3 3 15 67 0 2 2 5 84 0 5 5 17 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 3 0 106 0 3 4 3 106 0 4 6 4 106 0 6 2 6 106 0 2 5 5 2 79 0 2 2 5 84 0 5 2 5 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
90 88 84 82 64 61 62 36 38 38 7 19
CALL[ ]	/* CallFunction */";
};
width = 621;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(357,670,o),
(334,670,qs),
(324,670,o),
(301,649,o),
(276,618,o),
(252,581,o),
(234,548,o),
(223,524,o),
(223,522,qs),
(223,512,o),
(240,504,o),
(248,504,qs),
(259,504,o),
(304,536,o),
(349,578,o),
(383,621,o),
(383,632,qs),
(383,649,o)
);
},
{
closed = 1;
nodes = (
(138,-62,o),
(147,-61,qs),
(153,-61,o),
(166,-58,o),
(178,-51,o),
(186,-39,o),
(186,-28,qs),
(186,-13,o),
(163,2,o),
(150,2,qs),
(137,2,o),
(110,-9,o),
(89,-30,o),
(76,-63,o),
(76,-84,qs),
(76,-108,o),
(94,-144,o),
(124,-170,o),
(163,-183,o),
(184,-183,qs),
(224,-183,o),
(288,-152,o),
(317,-118,qs),
(341,-90,o),
(378,-10,o),
(397,44,qs),
(499,331,ls),
(505,347,o),
(521,354,o),
(545,355,qs),
(565,356,o),
(600,366,o),
(600,383,qs),
(600,399,o),
(567,411,o),
(545,411,qs),
(377,411,ls),
(354,411,o),
(341,400,o),
(341,383,qs),
(341,372,o),
(362,355,o),
(386,355,qs),
(410,355,o),
(423,346,o),
(423,338,qs),
(423,323,o),
(415,300,qs),
(340,68,l),
(202,327,ls),
(197,337,o),
(193,356,o),
(193,359,qs),
(193,369,o),
(200,372,o),
(205,372,qs),
(225,372,o),
(239,390,o),
(239,401,qs),
(239,413,o),
(224,428,o),
(198,428,qs),
(47,428,ls),
(23,428,o),
(-14,413,o),
(-14,395,qs),
(-14,378,o),
(26,371,o),
(64,370,qs),
(76,370,o),
(92,368,o),
(104,363,o),
(113,352,o),
(118,343,qs),
(313,-12,l),
(300,-41,o),
(275,-85,o),
(259,-99,qs),
(246,-111,o),
(212,-128,o),
(195,-128,qs),
(166,-128,o),
(129,-101,o),
(129,-84,qs),
(129,-77,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
53 1 10 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 4 0 106 0 7 8 1 6 10 7 6 91 0 10 0 11 2 10 11 91 5 1 3 3 4 83 0 4 4 15 67 0 2 2 9 83 0 9 9 17 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 106 0 0 4 0 106 0 4 5 1 3 6 4 3 91 0 7 8 1 6 10 7 6 91 0 10 0 11 2 10 11 91 0 2 2 9 83 0 9 9 17 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 1 0 1 106 0 0 4 0 106 0 4 5 1 3 6 4 3 91 0 7 8 1 6 10 7 6 91 0 10 0 11 2 10 11 91 0 2 9 9 2 79 0 2 2 9 83 0 9 2 9 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
100 99 93 91 83 81 36 52 43 36 52 42 36 40 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(119,-93,qs),
(130,-92,o),
(156,-80,o),
(156,-58,qs),
(156,-39,o),
(136,-28,o),
(126,-28,qs),
(104,-28,o),
(69,-62,o),
(69,-96,qs),
(69,-118,o),
(86,-151,o),
(113,-172,o),
(148,-183,o),
(167,-183,qs),
(195,-183,o),
(250,-156,o),
(279,-118,qs),
(322,-62,o),
(359,44,qs),
(471,361,ls),
(474,369,o),
(482,379,o),
(497,383,o),
(524,385,o),
(547,385,qs),
(582,386,o),
(582,397,qs),
(582,405,o),
(562,411,o),
(547,411,qs),
(379,411,ls),
(356,411,o),
(338,405,o),
(338,397,qs),
(338,389,o),
(364,385,o),
(388,385,qs),
(412,385,o),
(425,378,o),
(425,368,qs),
(425,353,o),
(417,330,qs),
(320,32,l),
(148,357,ls),
(143,367,o),
(139,386,o),
(139,389,qs),
(139,399,o),
(166,402,o),
(181,402,qs),
(220,402,o),
(220,417,qs),
(220,423,o),
(200,428,o),
(174,428,qs),
(23,428,ls),
(-1,428,o),
(-18,422,o),
(-18,414,qs),
(-18,406,o),
(2,401,o),
(40,400,qs),
(52,400,o),
(68,398,o),
(80,393,o),
(89,382,o),
(94,373,qs),
(305,-12,l),
(292,-41,o),
(266,-87,o),
(254,-103,qs),
(235,-128,o),
(197,-152,o),
(171,-152,qs),
(142,-152,o),
(103,-126,o),
(103,-109,qs),
(103,-96,o)
);
},
{
closed = 1;
nodes = (
(334,640,o),
(326,640,qs),
(319,640,o),
(287,610,o),
(255,570,o),
(231,530,o),
(231,521,qs),
(231,510,o),
(239,510,qs),
(246,510,o),
(281,538,o),
(317,574,o),
(345,610,o),
(345,618,qs),
(345,632,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 8 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 10 9 10 106 0 9 2 9 106 0 8 4 0 4 8 0 104 0 5 6 1 4 8 5 4 91 3 1 1 1 2 83 0 2 2 15 67 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 10 9 10 106 0 9 2 9 106 0 8 4 0 4 8 0 104 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 10 9 10 106 0 9 2 9 106 0 8 4 0 4 8 0 104 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 7 7 0 79 0 0 0 7 83 0 7 0 7 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
92 90 85 83 38 41 35 52 43 35 52 42 34 11 24
CALL[ ]	/* CallFunction */";
};
width = 577;
}
);
note = yacute;
unicode = 253;
},
{
glyphname = ycircumflex;
kernLeft = y;
kernRight = y;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(155,-70,o),
(160,-68,qs),
(189,-60,o),
(209,-32,o),
(209,-13,qs),
(209,5,o),
(182,27,o),
(162,27,qs),
(127,27,o),
(75,-33,o),
(75,-85,qs),
(75,-134,o),
(135,-196,o),
(196,-196,qs),
(247,-196,o),
(320,-155,o),
(345,-124,qs),
(355,-112,o),
(373,-82,o),
(391,-43,o),
(412,9,o),
(424,44,qs),
(519,313,ls),
(523,324,o),
(533,336,o),
(544,337,qs),
(556,338,o),
(580,342,o),
(600,351,o),
(613,365,o),
(613,375,qs),
(613,395,o),
(581,411,o),
(555,411,qs),
(393,411,ls),
(373,411,o),
(343,397,o),
(343,375,qs),
(343,361,o),
(358,344,o),
(380,341,qs),
(404,338,o),
(422,327,o),
(422,319,qs),
(422,305,o),
(414,282,qs),
(354,90,l),
(238,299,ls),
(227,319,o),
(220,335,o),
(220,342,qs),
(220,350,o),
(230,352,qs),
(261,358,o),
(287,377,o),
(287,392,qs),
(287,408,o),
(266,428,o),
(235,428,qs),
(81,428,ls),
(49,428,o),
(19,415,o),
(19,390,qs),
(19,373,o),
(43,356,o),
(81,352,qs),
(106,350,o),
(125,338,o),
(133,324,qs),
(319,-12,l),
(312,-33,o),
(291,-78,o),
(272,-98,qs),
(258,-112,o),
(229,-127,o),
(205,-127,qs),
(175,-127,o),
(149,-105,o),
(149,-85,qs),
(149,-75,o)
);
},
{
closed = 1;
nodes = (
(435,523,o),
(435,531,qs),
(435,547,o),
(400,592,o),
(354,634,o),
(311,664,o),
(302,664,qs),
(295,664,o),
(252,635,o),
(206,592,o),
(170,543,o),
(170,524,qs),
(170,519,o),
(177,510,o),
(183,510,qs),
(188,510,o),
(214,523,o),
(247,542,o),
(285,563,o),
(302,572,q),
(319,563,o),
(357,542,o),
(391,523,o),
(417,510,o),
(422,510,qs),
(429,510,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
85 1 5 7 32 1 4 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 7 5 7 106 6 8 2 5 1 5 106 0 2 1 4 1 2 4 104 0 4 0 1 4 0 102 0 1 1 15 67 0 0 0 3 84 0 3 3 17 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 7 5 7 106 6 8 2 5 1 5 106 0 1 2 1 106 0 2 4 2 106 0 4 0 4 106 0 0 3 3 0 79 0 0 0 3 84 0 3 0 3 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
81 80 99 97 91 89 80 105 81 105 72 70 66 64 46 43 62 34 9 17
CALL[ ]	/* CallFunction */";
};
width = 621;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
ref = .ttfautohint;
},
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (139,0);
ref = circumflex;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
91 1 10 12 36 1 8 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 12 10 12 106 11 13 2 10 2 10 106 0 5 6 1 4 8 5 4 91 0 8 0 9 0 8 9 91 3 1 1 1 2 83 0 2 2 15 67 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 12 10 12 106 11 13 2 10 2 10 106 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 8 0 9 0 8 9 91 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 12 10 12 106 11 13 2 10 2 10 106 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 8 0 9 0 8 9 91 0 0 7 7 0 79 0 0 0 7 83 0 7 0 7 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
87 86 104 102 97 95 86 110 87 110 83 82 40 40 36 52 43 36 52 42 35 14 35
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(119,-93,qs),
(130,-92,o),
(156,-80,o),
(156,-58,qs),
(156,-39,o),
(136,-28,o),
(126,-28,qs),
(104,-28,o),
(69,-62,o),
(69,-96,qs),
(69,-118,o),
(86,-151,o),
(113,-172,o),
(148,-183,o),
(167,-183,qs),
(195,-183,o),
(250,-156,o),
(279,-118,qs),
(322,-62,o),
(359,44,qs),
(471,361,ls),
(474,369,o),
(482,379,o),
(497,383,o),
(524,385,o),
(547,385,qs),
(582,386,o),
(582,397,qs),
(582,405,o),
(562,411,o),
(547,411,qs),
(379,411,ls),
(356,411,o),
(338,405,o),
(338,397,qs),
(338,389,o),
(364,385,o),
(388,385,qs),
(412,385,o),
(425,378,o),
(425,368,qs),
(425,353,o),
(417,330,qs),
(320,32,l),
(148,357,ls),
(143,367,o),
(139,386,o),
(139,389,qs),
(139,399,o),
(166,402,o),
(181,402,qs),
(220,402,o),
(220,417,qs),
(220,423,o),
(200,428,o),
(174,428,qs),
(23,428,ls),
(-1,428,o),
(-18,422,o),
(-18,414,qs),
(-18,406,o),
(2,401,o),
(40,400,qs),
(52,400,o),
(68,398,o),
(80,393,o),
(89,382,o),
(94,373,qs),
(305,-12,l),
(292,-41,o),
(266,-87,o),
(254,-103,qs),
(235,-128,o),
(197,-152,o),
(171,-152,qs),
(142,-152,o),
(103,-126,o),
(103,-109,qs),
(103,-96,o)
);
},
{
closed = 1;
nodes = (
(416,521,qs),
(416,530,o),
(383,570,o),
(340,610,o),
(297,640,o),
(288,640,qs),
(279,640,o),
(238,610,o),
(194,570,o),
(161,530,o),
(161,521,qs),
(161,510,o),
(169,510,qs),
(174,510,o),
(200,528,o),
(233,554,o),
(271,584,o),
(288,596,q),
(305,584,o),
(343,554,o),
(377,528,o),
(403,510,o),
(408,510,qs),
(416,510,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
84 1 9 11 34 1 8 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 11 9 11 106 10 12 2 9 2 9 106 0 8 4 0 4 8 0 104 0 5 6 1 4 8 5 4 91 3 1 1 1 2 83 0 2 2 15 67 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 11 9 11 106 10 12 2 9 2 9 106 0 8 4 0 4 8 0 104 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 11 9 11 106 10 12 2 9 2 9 106 0 8 4 0 4 8 0 104 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 7 7 0 79 0 0 0 7 83 0 7 0 7 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
80 79 97 95 90 88 79 102 80 102 38 41 35 52 43 35 52 42 34 13 24
CALL[ ]	/* CallFunction */";
};
width = 577;
}
);
note = ycircumflex;
unicode = 375;
},
{
glyphname = ydieresis;
kernLeft = y;
kernRight = y;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(155,-70,o),
(160,-68,qs),
(189,-60,o),
(209,-32,o),
(209,-13,qs),
(209,5,o),
(182,27,o),
(162,27,qs),
(127,27,o),
(75,-33,o),
(75,-85,qs),
(75,-134,o),
(135,-196,o),
(196,-196,qs),
(247,-196,o),
(320,-155,o),
(345,-124,qs),
(355,-112,o),
(373,-82,o),
(391,-43,o),
(412,9,o),
(424,44,qs),
(519,313,ls),
(523,324,o),
(533,336,o),
(544,337,qs),
(556,338,o),
(580,342,o),
(600,351,o),
(613,365,o),
(613,375,qs),
(613,395,o),
(581,411,o),
(555,411,qs),
(393,411,ls),
(373,411,o),
(343,397,o),
(343,375,qs),
(343,361,o),
(358,344,o),
(380,341,qs),
(404,338,o),
(422,327,o),
(422,319,qs),
(422,305,o),
(414,282,qs),
(354,90,l),
(238,299,ls),
(227,319,o),
(220,335,o),
(220,342,qs),
(220,350,o),
(230,352,qs),
(261,358,o),
(287,377,o),
(287,392,qs),
(287,408,o),
(266,428,o),
(235,428,qs),
(81,428,ls),
(49,428,o),
(19,415,o),
(19,390,qs),
(19,373,o),
(43,356,o),
(81,352,qs),
(106,350,o),
(125,338,o),
(133,324,qs),
(319,-12,l),
(312,-33,o),
(291,-78,o),
(272,-98,qs),
(258,-112,o),
(229,-127,o),
(205,-127,qs),
(175,-127,o),
(149,-105,o),
(149,-85,qs),
(149,-75,o)
);
},
{
closed = 1;
nodes = (
(173,509,o),
(198,509,qs),
(209,509,o),
(233,515,o),
(252,531,o),
(265,558,o),
(265,579,qs),
(265,606,o),
(229,640,o),
(205,640,qs),
(187,640,o),
(162,626,o),
(146,606,o),
(139,583,o),
(139,575,qs),
(139,546,o)
);
},
{
closed = 1;
nodes = (
(380,486,o),
(405,486,qs),
(416,486,o),
(440,492,o),
(459,508,o),
(472,535,o),
(472,556,qs),
(472,583,o),
(436,617,o),
(412,617,qs),
(394,617,o),
(369,603,o),
(353,583,o),
(346,560,o),
(346,552,qs),
(346,523,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
32 1 4 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 2 1 4 1 2 4 104 0 4 0 1 4 0 102 0 5 0 6 8 5 6 91 0 7 0 8 1 7 8 91 0 1 1 15 67 0 0 0 3 84 0 3 3 17 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 1 8 2 8 1 2 104 0 2 4 8 2 4 102 0 4 0 8 4 0 102 0 5 0 6 8 5 6 91 0 7 0 8 1 7 8 91 0 0 3 3 0 79 0 0 0 3 84 0 3 0 3 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
110 108 102 100 94 92 86 84 72 70 66 64 46 43 62 34 9 17
CALL[ ]	/* CallFunction */";
};
width = 621;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
ref = .ttfautohint;
},
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (128,0);
ref = dieresis;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
36 1 8 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 10 0 11 13 10 11 91 0 12 0 13 2 12 13 91 0 5 6 1 4 8 5 4 91 0 8 0 9 0 8 9 91 3 1 1 1 2 83 0 2 2 15 67 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 10 0 11 13 10 11 91 0 12 0 13 2 12 13 91 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 8 0 9 0 8 9 91 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 10 0 11 13 10 11 91 0 12 0 13 2 12 13 91 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 8 0 9 0 8 9 91 0 0 7 7 0 79 0 0 0 7 83 0 7 0 7 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
112 110 106 104 98 96 92 90 83 82 40 40 36 52 43 36 52 42 35 14 35
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(119,-93,qs),
(130,-92,o),
(156,-80,o),
(156,-58,qs),
(156,-39,o),
(136,-28,o),
(126,-28,qs),
(104,-28,o),
(69,-62,o),
(69,-96,qs),
(69,-118,o),
(86,-151,o),
(113,-172,o),
(148,-183,o),
(167,-183,qs),
(195,-183,o),
(250,-156,o),
(279,-118,qs),
(322,-62,o),
(359,44,qs),
(471,361,ls),
(474,369,o),
(482,379,o),
(497,383,o),
(524,385,o),
(547,385,qs),
(582,386,o),
(582,397,qs),
(582,405,o),
(562,411,o),
(547,411,qs),
(379,411,ls),
(356,411,o),
(338,405,o),
(338,397,qs),
(338,389,o),
(364,385,o),
(388,385,qs),
(412,385,o),
(425,378,o),
(425,368,qs),
(425,353,o),
(417,330,qs),
(320,32,l),
(148,357,ls),
(143,367,o),
(139,386,o),
(139,389,qs),
(139,399,o),
(166,402,o),
(181,402,qs),
(220,402,o),
(220,417,qs),
(220,423,o),
(200,428,o),
(174,428,qs),
(23,428,ls),
(-1,428,o),
(-18,422,o),
(-18,414,qs),
(-18,406,o),
(2,401,o),
(40,400,qs),
(52,400,o),
(68,398,o),
(80,393,o),
(89,382,o),
(94,373,qs),
(305,-12,l),
(292,-41,o),
(266,-87,o),
(254,-103,qs),
(235,-128,o),
(197,-152,o),
(171,-152,qs),
(142,-152,o),
(103,-126,o),
(103,-109,qs),
(103,-96,o)
);
},
{
closed = 1;
nodes = (
(169,533,o),
(183,533,qs),
(197,533,o),
(224,552,o),
(224,579,qs),
(224,596,o),
(204,616,o),
(190,616,qs),
(179,616,o),
(164,607,o),
(154,594,o),
(149,580,o),
(149,575,qs),
(149,557,o)
);
},
{
closed = 1;
nodes = (
(376,510,o),
(390,510,qs),
(404,510,o),
(431,529,o),
(431,556,qs),
(431,573,o),
(411,593,o),
(397,593,qs),
(386,593,o),
(371,584,o),
(361,571,o),
(356,557,o),
(356,552,qs),
(356,534,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 8 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 8 4 0 4 8 0 104 0 9 0 10 12 9 10 91 0 11 0 12 2 11 12 91 0 5 6 1 4 8 5 4 91 3 1 1 1 2 83 0 2 2 15 67 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 8 4 0 4 8 0 104 0 9 0 10 12 9 10 91 0 11 0 12 2 11 12 91 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 8 4 0 4 8 0 104 0 9 0 10 12 9 10 91 0 11 0 12 2 11 12 91 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 7 7 0 79 0 0 0 7 83 0 7 0 7 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
105 103 99 97 91 89 85 83 38 41 35 52 43 35 52 42 34 13 24
CALL[ ]	/* CallFunction */";
};
width = 577;
}
);
note = ydieresis;
unicode = 255;
},
{
glyphname = ygrave;
kernLeft = y;
kernRight = y;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(218,580,o),
(270,534,o),
(321,500,o),
(335,500,qs),
(346,500,o),
(372,511,o),
(372,522,qs),
(372,525,o),
(348,578,o),
(312,639,o),
(269,688,o),
(250,688,qs),
(218,687,o),
(180,659,o),
(180,640,qs),
(180,627,o)
);
},
{
closed = 1;
nodes = (
(155,-70,o),
(160,-68,qs),
(189,-60,o),
(209,-32,o),
(209,-13,qs),
(209,5,o),
(182,27,o),
(162,27,qs),
(127,27,o),
(75,-33,o),
(75,-85,qs),
(75,-134,o),
(135,-196,o),
(196,-196,qs),
(247,-196,o),
(320,-155,o),
(345,-124,qs),
(355,-112,o),
(373,-82,o),
(391,-43,o),
(412,9,o),
(424,44,qs),
(519,313,ls),
(523,324,o),
(533,336,o),
(544,337,qs),
(556,338,o),
(580,342,o),
(600,351,o),
(613,365,o),
(613,375,qs),
(613,395,o),
(581,411,o),
(555,411,qs),
(393,411,ls),
(373,411,o),
(343,397,o),
(343,375,qs),
(343,361,o),
(358,344,o),
(380,341,qs),
(404,338,o),
(422,327,o),
(422,319,qs),
(422,305,o),
(414,282,qs),
(354,90,l),
(238,299,ls),
(227,319,o),
(220,335,o),
(220,342,qs),
(220,350,o),
(230,352,qs),
(261,358,o),
(287,377,o),
(287,392,qs),
(287,408,o),
(266,428,o),
(235,428,qs),
(81,428,ls),
(49,428,o),
(19,415,o),
(19,390,qs),
(19,373,o),
(43,356,o),
(81,352,qs),
(106,350,o),
(125,338,o),
(133,324,qs),
(319,-12,l),
(312,-33,o),
(291,-78,o),
(272,-98,qs),
(258,-112,o),
(229,-127,o),
(205,-127,qs),
(175,-127,o),
(149,-105,o),
(149,-85,qs),
(149,-75,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
48 1 6 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 0 1 0 106 0 1 3 1 106 0 4 3 6 3 4 6 104 0 6 2 3 6 2 102 0 3 3 15 67 0 2 2 5 84 0 5 5 17 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 0 1 0 106 0 1 3 1 106 0 3 4 3 106 0 4 6 4 106 0 6 2 6 106 0 2 5 5 2 79 0 2 2 5 84 0 5 2 5 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
88 86 82 80 62 59 62 38 38 34 7 19
CALL[ ]	/* CallFunction */";
};
width = 621;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(236,578,o),
(281,536,o),
(326,504,o),
(337,504,qs),
(345,504,o),
(362,512,o),
(362,522,qs),
(362,524,o),
(351,548,o),
(333,581,o),
(309,618,o),
(284,649,o),
(260,670,o),
(251,670,qs),
(228,670,o),
(202,649,o),
(202,632,qs),
(202,621,o)
);
},
{
closed = 1;
nodes = (
(138,-62,o),
(147,-61,qs),
(153,-61,o),
(166,-58,o),
(178,-51,o),
(186,-39,o),
(186,-28,qs),
(186,-13,o),
(163,2,o),
(150,2,qs),
(137,2,o),
(110,-9,o),
(89,-30,o),
(76,-63,o),
(76,-84,qs),
(76,-108,o),
(94,-144,o),
(124,-170,o),
(163,-183,o),
(184,-183,qs),
(224,-183,o),
(288,-152,o),
(317,-118,qs),
(341,-90,o),
(378,-10,o),
(397,44,qs),
(499,331,ls),
(505,347,o),
(521,354,o),
(545,355,qs),
(565,356,o),
(600,366,o),
(600,383,qs),
(600,399,o),
(567,411,o),
(545,411,qs),
(377,411,ls),
(354,411,o),
(341,400,o),
(341,383,qs),
(341,372,o),
(362,355,o),
(386,355,qs),
(410,355,o),
(423,346,o),
(423,338,qs),
(423,323,o),
(415,300,qs),
(340,68,l),
(202,327,ls),
(197,337,o),
(193,356,o),
(193,359,qs),
(193,369,o),
(200,372,o),
(205,372,qs),
(225,372,o),
(239,390,o),
(239,401,qs),
(239,413,o),
(224,428,o),
(198,428,qs),
(47,428,ls),
(23,428,o),
(-14,413,o),
(-14,395,qs),
(-14,378,o),
(26,371,o),
(64,370,qs),
(76,370,o),
(92,368,o),
(104,363,o),
(113,352,o),
(118,343,qs),
(313,-12,l),
(300,-41,o),
(275,-85,o),
(259,-99,qs),
(246,-111,o),
(212,-128,o),
(195,-128,qs),
(166,-128,o),
(129,-101,o),
(129,-84,qs),
(129,-77,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
53 1 10 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 0 1 0 106 0 1 4 1 106 0 7 8 1 6 10 7 6 91 0 10 0 11 2 10 11 91 5 1 3 3 4 83 0 4 4 15 67 0 2 2 9 83 0 9 9 17 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 0 1 0 106 0 1 4 1 106 0 4 5 1 3 6 4 3 91 0 7 8 1 6 10 7 6 91 0 10 0 11 2 10 11 91 0 2 2 9 83 0 9 9 17 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 0 1 0 106 0 1 4 1 106 0 4 5 1 3 6 4 3 91 0 7 8 1 6 10 7 6 91 0 10 0 11 2 10 11 91 0 2 9 9 2 79 0 2 2 9 83 0 9 2 9 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
100 99 93 91 83 81 36 52 43 36 52 42 38 40 34 12 24
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(119,-93,qs),
(130,-92,o),
(156,-80,o),
(156,-58,qs),
(156,-39,o),
(136,-28,o),
(126,-28,qs),
(104,-28,o),
(69,-62,o),
(69,-96,qs),
(69,-118,o),
(86,-151,o),
(113,-172,o),
(148,-183,o),
(167,-183,qs),
(195,-183,o),
(250,-156,o),
(279,-118,qs),
(322,-62,o),
(359,44,qs),
(471,361,ls),
(474,369,o),
(482,379,o),
(497,383,o),
(524,385,o),
(547,385,qs),
(582,386,o),
(582,397,qs),
(582,405,o),
(562,411,o),
(547,411,qs),
(379,411,ls),
(356,411,o),
(338,405,o),
(338,397,qs),
(338,389,o),
(364,385,o),
(388,385,qs),
(412,385,o),
(425,378,o),
(425,368,qs),
(425,353,o),
(417,330,qs),
(320,32,l),
(148,357,ls),
(143,367,o),
(139,386,o),
(139,389,qs),
(139,399,o),
(166,402,o),
(181,402,qs),
(220,402,o),
(220,417,qs),
(220,423,o),
(200,428,o),
(174,428,qs),
(23,428,ls),
(-1,428,o),
(-18,422,o),
(-18,414,qs),
(-18,406,o),
(2,401,o),
(40,400,qs),
(52,400,o),
(68,398,o),
(80,393,o),
(89,382,o),
(94,373,qs),
(305,-12,l),
(292,-41,o),
(266,-87,o),
(254,-103,qs),
(235,-128,o),
(197,-152,o),
(171,-152,qs),
(142,-152,o),
(103,-126,o),
(103,-109,qs),
(103,-96,o)
);
},
{
closed = 1;
nodes = (
(260,574,o),
(296,538,o),
(331,510,o),
(338,510,qs),
(346,510,o),
(346,521,qs),
(346,530,o),
(322,570,o),
(290,610,o),
(258,640,o),
(251,640,qs),
(243,640,o),
(232,632,o),
(232,618,qs),
(232,610,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 8 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 9 10 9 106 0 10 2 10 106 0 8 4 0 4 8 0 104 0 5 6 1 4 8 5 4 91 3 1 1 1 2 83 0 2 2 15 67 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 9 10 9 106 0 10 2 10 106 0 8 4 0 4 8 0 104 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 9 10 9 106 0 10 2 10 106 0 8 4 0 4 8 0 104 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 7 7 0 79 0 0 0 7 83 0 7 0 7 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
90 88 83 81 38 41 35 52 43 35 52 42 34 11 24
CALL[ ]	/* CallFunction */";
};
width = 577;
}
);
note = ygrave;
unicode = 7923;
},
{
glyphname = ytilde;
kernLeft = y;
kernRight = y;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(155,-70,o),
(160,-68,qs),
(189,-60,o),
(209,-32,o),
(209,-13,qs),
(209,5,o),
(182,27,o),
(162,27,qs),
(127,27,o),
(75,-33,o),
(75,-85,qs),
(75,-134,o),
(135,-196,o),
(196,-196,qs),
(247,-196,o),
(320,-155,o),
(345,-124,qs),
(355,-112,o),
(373,-82,o),
(391,-43,o),
(412,9,o),
(424,44,qs),
(519,313,ls),
(523,324,o),
(533,336,o),
(544,337,qs),
(556,338,o),
(580,342,o),
(600,351,o),
(613,365,o),
(613,375,qs),
(613,395,o),
(581,411,o),
(555,411,qs),
(393,411,ls),
(373,411,o),
(343,397,o),
(343,375,qs),
(343,361,o),
(358,344,o),
(380,341,qs),
(404,338,o),
(422,327,o),
(422,319,qs),
(422,305,o),
(414,282,qs),
(354,90,l),
(238,299,ls),
(227,319,o),
(220,335,o),
(220,342,qs),
(220,350,o),
(230,352,qs),
(261,358,o),
(287,377,o),
(287,392,qs),
(287,408,o),
(266,428,o),
(235,428,qs),
(81,428,ls),
(49,428,o),
(19,415,o),
(19,390,qs),
(19,373,o),
(43,356,o),
(81,352,qs),
(106,350,o),
(125,338,o),
(133,324,qs),
(319,-12,l),
(312,-33,o),
(291,-78,o),
(272,-98,qs),
(258,-112,o),
(229,-127,o),
(205,-127,qs),
(175,-127,o),
(149,-105,o),
(149,-85,qs),
(149,-75,o)
);
},
{
closed = 1;
nodes = (
(146,498,o),
(155,498,qs),
(162,498,o),
(180,506,o),
(200,515,o),
(224,523,o),
(239,523,qs),
(253,523,o),
(285,515,o),
(320,506,o),
(357,499,o),
(376,499,qs),
(387,499,o),
(425,506,o),
(461,523,o),
(487,552,o),
(487,574,qs),
(487,590,o),
(470,609,o),
(465,609,qs),
(458,609,o),
(435,596,qs),
(421,588,o),
(389,579,o),
(375,579,qs),
(360,579,o),
(324,588,o),
(288,598,o),
(253,607,o),
(238,607,qs),
(201,607,o),
(170,589,qs),
(156,581,o),
(136,556,o),
(136,534,qs),
(136,519,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
32 1 4 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 2 1 4 1 2 4 104 0 4 0 1 4 0 102 7 1 5 0 9 8 5 9 91 0 6 10 1 8 1 6 8 91 0 1 1 15 67 0 0 0 3 84 0 3 3 17 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 1 8 2 8 1 2 104 0 2 4 8 2 4 102 0 4 0 8 4 0 102 7 1 5 0 9 8 5 9 91 0 6 10 1 8 1 6 8 91 0 0 3 3 0 79 0 0 0 3 84 0 3 0 3 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
114 112 109 107 104 102 96 94 91 89 86 84 72 70 66 64 46 43 62 34 11 17
CALL[ ]	/* CallFunction */";
};
width = 621;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
ref = .ttfautohint;
},
{
alignment = -1;
pos = (121,0);
ref = tilde;
},
{
alignment = -1;
ref = y;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
74 1 14 10 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 8 1 3 91 0 11 12 1 10 14 11 10 91 0 14 0 15 6 14 15 91 9 1 7 7 8 83 0 8 8 15 67 0 6 6 13 83 0 13 13 17 13 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 8 1 3 91 0 8 9 1 7 10 8 7 91 0 11 12 1 10 14 11 10 91 0 14 0 15 6 14 15 91 0 6 6 13 83 0 13 13 17 13 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 8 1 3 91 0 8 9 1 7 10 8 7 91 0 11 12 1 10 14 11 10 91 0 14 0 15 6 14 15 91 0 6 13 13 6 79 0 6 6 13 83 0 13 6 13 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
121 120 114 112 104 102 94 92 88 85 81 79 68 66 52 42 38 35 35 38 35 35 37 16 35
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(119,-93,qs),
(130,-92,o),
(156,-80,o),
(156,-58,qs),
(156,-39,o),
(136,-28,o),
(126,-28,qs),
(104,-28,o),
(69,-62,o),
(69,-96,qs),
(69,-118,o),
(86,-151,o),
(113,-172,o),
(148,-183,o),
(167,-183,qs),
(195,-183,o),
(250,-156,o),
(279,-118,qs),
(322,-62,o),
(359,44,qs),
(471,361,ls),
(474,369,o),
(482,379,o),
(497,383,o),
(524,385,o),
(547,385,qs),
(582,386,o),
(582,397,qs),
(582,405,o),
(562,411,o),
(547,411,qs),
(379,411,ls),
(356,411,o),
(338,405,o),
(338,397,qs),
(338,389,o),
(364,385,o),
(388,385,qs),
(412,385,o),
(425,378,o),
(425,368,qs),
(425,353,o),
(417,330,qs),
(320,32,l),
(148,357,ls),
(143,367,o),
(139,386,o),
(139,389,qs),
(139,399,o),
(166,402,o),
(181,402,qs),
(220,402,o),
(220,417,qs),
(220,423,o),
(200,428,o),
(174,428,qs),
(23,428,ls),
(-1,428,o),
(-18,422,o),
(-18,414,qs),
(-18,406,o),
(2,401,o),
(40,400,qs),
(52,400,o),
(68,398,o),
(80,393,o),
(89,382,o),
(94,373,qs),
(305,-12,l),
(292,-41,o),
(266,-87,o),
(254,-103,qs),
(235,-128,o),
(197,-152,o),
(171,-152,qs),
(142,-152,o),
(103,-126,o),
(103,-109,qs),
(103,-96,o)
);
},
{
closed = 1;
nodes = (
(136,522,o),
(141,522,qs),
(146,522,o),
(162,530,o),
(184,539,o),
(210,547,o),
(225,547,qs),
(239,547,o),
(271,539,o),
(306,530,o),
(343,523,o),
(362,523,qs),
(383,523,o),
(420,530,o),
(448,543,o),
(464,559,o),
(464,568,qs),
(464,575,o),
(456,585,o),
(451,585,qs),
(446,585,o),
(435,580,o),
(421,572,qs),
(387,555,o),
(361,555,qs),
(346,555,o),
(310,564,o),
(274,574,o),
(239,583,o),
(224,583,qs),
(187,583,o),
(156,565,qs),
(127,548,o),
(127,537,qs),
(127,532,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 8 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 8 4 0 4 8 0 104 11 1 9 0 13 12 9 13 91 0 10 14 1 12 2 10 12 91 0 5 6 1 4 8 5 4 91 3 1 1 1 2 83 0 2 2 15 67 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 8 4 0 4 8 0 104 11 1 9 0 13 12 9 13 91 0 10 14 1 12 2 10 12 91 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 8 4 0 4 8 0 104 11 1 9 0 13 12 9 13 91 0 10 14 1 12 2 10 12 91 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 7 7 0 79 0 0 0 7 83 0 7 0 7 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
112 110 107 105 102 100 94 92 89 87 84 82 38 41 35 52 43 35 52 42 34 15 24
CALL[ ]	/* CallFunction */";
};
width = 577;
}
);
note = ytilde;
unicode = 7929;
},
{
glyphname = z;
kernLeft = z;
kernRight = t_z;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(272,358,o),
(272,350,qs),
(272,346,o),
(235,300,o),
(179,234,o),
(114,156,o),
(58,86,o),
(21,33,o),
(21,24,qs),
(21,6,o),
(52,-2,o),
(90,-2,qs),
(98,-2,o),
(133,-1,o),
(177,0,o),
(226,1,o),
(248,1,qs),
(270,1,o),
(304,0,o),
(341,0,o),
(389,-1,o),
(424,-1,qs),
(438,-1,o),
(438,18,qs),
(438,31,o),
(439,74,o),
(440,85,qs),
(446,181,ls),
(446,190,o),
(431,212,o),
(408,212,qs),
(394,212,o),
(378,202,o),
(369,186,o),
(365,164,o),
(364,151,qs),
(357,96,ls),
(356,88,o),
(353,77,o),
(348,77,qs),
(198,77,ls),
(181,77,o),
(181,84,qs),
(181,90,o),
(219,140,o),
(277,208,o),
(344,286,o),
(402,357,o),
(440,410,o),
(440,419,qs),
(440,426,o),
(426,436,o),
(409,436,qs),
(377,436,o),
(297,434,o),
(265,434,qs),
(241,434,o),
(201,434,o),
(163,435,o),
(123,435,o),
(99,435,qs),
(80,435,o),
(59,427,o),
(48,414,o),
(46,398,o),
(46,389,qs),
(46,298,ls),
(46,277,o),
(63,251,o),
(89,251,qs),
(113,251,o),
(128,284,o),
(131,322,qs),
(134,358,l),
(263,358,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
47 1 2 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 5 3 5 0 96 0 3 2 2 3 94 6 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 0 5 3 5 0 96 0 3 2 5 3 2 102 6 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 6 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 1 6 1 5 0 1 5 91 0 2 2 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 74 0 73 199 39 58 167 35 7 20
CALL[ ]	/* CallFunction */";
};
width = 480;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(299,376,o),
(299,368,qs),
(299,364,o),
(258,315,o),
(197,244,o),
(125,161,o),
(64,86,o),
(23,29,o),
(23,20,qs),
(23,6,o),
(45,-2,o),
(71,-2,qs),
(79,-2,o),
(114,-1,o),
(158,0,o),
(207,1,o),
(229,1,qs),
(251,1,o),
(285,0,o),
(322,0,o),
(370,-1,o),
(405,-1,qs),
(419,-1,o),
(419,18,qs),
(419,31,o),
(420,74,o),
(421,85,qs),
(427,181,ls),
(427,189,o),
(419,206,o),
(402,206,qs),
(380,206,o),
(368,177,o),
(366,151,qs),
(359,78,ls),
(357,59,o),
(350,59,qs),
(161,59,ls),
(144,59,o),
(144,66,qs),
(144,73,o),
(185,125,o),
(247,197,o),
(318,279,o),
(380,353,o),
(421,409,o),
(421,419,qs),
(421,426,o),
(407,436,o),
(390,436,qs),
(358,436,o),
(278,434,o),
(246,434,qs),
(222,434,o),
(189,435,o),
(158,435,o),
(125,436,o),
(101,436,qs),
(73,436,o),
(48,412,o),
(48,395,qs),
(48,298,ls),
(48,279,o),
(62,257,o),
(80,257,qs),
(99,257,o),
(110,293,o),
(112,322,qs),
(115,376,l),
(290,376,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
42 1 2 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 5 3 5 0 96 0 3 2 2 3 94 6 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 6 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 1 6 1 5 0 1 5 91 0 2 2 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 69 0 68 199 36 58 165 35 7 20
CALL[ ]	/* CallFunction */";
};
width = 463;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(338,406,o),
(338,398,qs),
(338,394,o),
(292,340,o),
(222,261,o),
(142,169,o),
(72,86,o),
(26,23,o),
(26,13,qs),
(26,-2,o),
(44,-2,qs),
(52,-2,o),
(87,-1,o),
(131,0,o),
(180,1,o),
(202,1,qs),
(224,1,o),
(258,0,o),
(295,0,o),
(343,-1,o),
(378,-1,qs),
(392,-1,o),
(392,18,qs),
(392,31,o),
(393,74,o),
(394,85,qs),
(400,181,ls),
(400,196,o),
(387,196,qs),
(378,196,o),
(371,177,o),
(369,151,qs),
(362,48,ls),
(360,29,o),
(353,29,qs),
(108,29,ls),
(91,29,o),
(91,36,qs),
(91,43,o),
(136,100,o),
(203,178,o),
(282,267,o),
(349,348,o),
(394,409,o),
(394,419,qs),
(394,426,o),
(380,436,o),
(363,436,qs),
(331,436,o),
(251,434,o),
(219,434,qs),
(195,434,o),
(162,434,o),
(131,434,o),
(98,435,o),
(74,436,qs),
(61,436,o),
(51,422,o),
(51,405,qs),
(51,298,ls),
(51,279,o),
(57,267,o),
(66,267,qs),
(75,267,o),
(84,293,o),
(85,322,qs),
(88,406,l),
(329,406,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
41 35 34 3 2 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 0 5 3 5 0 96 0 3 2 5 3 2 102 6 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 6 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 1 6 1 5 0 1 5 91 0 2 2 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 67 0 66 198 36 58 165 35 7 20
CALL[ ]	/* CallFunction */";
};
width = 439;
}
);
note = z;
unicode = 122;
},
{
glyphname = zacute;
kernLeft = z;
kernRight = t_z;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(318,687,o),
(286,688,qs),
(267,688,o),
(224,639,o),
(188,578,o),
(164,525,o),
(164,522,qs),
(164,511,o),
(190,500,o),
(201,500,qs),
(210,500,o),
(240,516,o),
(274,541,o),
(310,573,o),
(338,604,o),
(356,631,o),
(356,640,qs),
(356,659,o)
);
},
{
closed = 1;
nodes = (
(272,358,o),
(272,350,qs),
(272,346,o),
(235,300,o),
(179,234,o),
(114,156,o),
(58,86,o),
(21,33,o),
(21,24,qs),
(21,6,o),
(52,-2,o),
(90,-2,qs),
(98,-2,o),
(133,-1,o),
(177,0,o),
(226,1,o),
(248,1,qs),
(270,1,o),
(304,0,o),
(341,0,o),
(389,-1,o),
(424,-1,qs),
(438,-1,o),
(438,18,qs),
(438,31,o),
(439,74,o),
(440,85,qs),
(446,181,ls),
(446,190,o),
(431,212,o),
(408,212,qs),
(394,212,o),
(378,202,o),
(369,186,o),
(365,164,o),
(364,151,qs),
(357,96,ls),
(356,88,o),
(353,77,o),
(348,77,qs),
(198,77,ls),
(181,77,o),
(181,84,qs),
(181,90,o),
(219,140,o),
(277,208,o),
(344,286,o),
(402,357,o),
(440,410,o),
(440,419,qs),
(440,426,o),
(426,436,o),
(409,436,qs),
(377,436,o),
(297,434,o),
(265,434,qs),
(241,434,o),
(201,434,o),
(163,435,o),
(123,435,o),
(99,435,qs),
(80,435,o),
(59,427,o),
(48,414,o),
(46,398,o),
(46,389,qs),
(46,298,ls),
(46,277,o),
(63,251,o),
(89,251,qs),
(113,251,o),
(128,284,o),
(131,322,qs),
(134,358,l),
(263,358,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
65 1 4 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 0 0 3 0 106 0 2 7 5 7 2 96 0 5 4 4 5 94 8 1 7 7 3 83 0 3 3 15 67 0 4 4 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 1 106 0 0 3 0 106 0 2 7 5 7 2 96 0 5 4 7 5 4 102 8 1 7 7 3 83 0 3 3 15 67 0 4 4 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 106 0 0 3 0 106 0 2 7 5 7 2 5 104 0 5 4 7 5 4 102 8 1 7 7 3 83 0 3 3 15 67 0 4 4 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 0 0 3 0 106 0 2 7 5 7 2 5 104 0 5 4 7 5 4 102 0 3 8 1 7 2 3 7 91 0 4 4 6 84 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
18 18 18 92 18 91 199 39 58 167 37 38 38 9 22
CALL[ ]	/* CallFunction */";
};
width = 480;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(296,670,o),
(273,670,qs),
(263,670,o),
(240,649,o),
(215,618,o),
(191,581,o),
(173,548,o),
(162,524,o),
(162,522,qs),
(162,512,o),
(179,504,o),
(187,504,qs),
(198,504,o),
(243,536,o),
(288,578,o),
(322,621,o),
(322,632,qs),
(322,649,o)
);
},
{
closed = 1;
nodes = (
(299,376,o),
(299,368,qs),
(299,364,o),
(258,315,o),
(197,244,o),
(125,161,o),
(64,86,o),
(23,29,o),
(23,20,qs),
(23,6,o),
(45,-2,o),
(71,-2,qs),
(79,-2,o),
(114,-1,o),
(158,0,o),
(207,1,o),
(229,1,qs),
(251,1,o),
(285,0,o),
(322,0,o),
(370,-1,o),
(405,-1,qs),
(419,-1,o),
(419,18,qs),
(419,31,o),
(420,74,o),
(421,85,qs),
(427,181,ls),
(427,189,o),
(419,206,o),
(402,206,qs),
(380,206,o),
(368,177,o),
(366,151,qs),
(359,78,ls),
(357,59,o),
(350,59,qs),
(161,59,ls),
(144,59,o),
(144,66,qs),
(144,73,o),
(185,125,o),
(247,197,o),
(318,279,o),
(380,353,o),
(421,409,o),
(421,419,qs),
(421,426,o),
(407,436,o),
(390,436,qs),
(358,436,o),
(278,434,o),
(246,434,qs),
(222,434,o),
(189,435,o),
(158,435,o),
(125,436,o),
(101,436,qs),
(73,436,o),
(48,412,o),
(48,395,qs),
(48,298,ls),
(48,279,o),
(62,257,o),
(80,257,qs),
(99,257,o),
(110,293,o),
(112,322,qs),
(115,376,l),
(290,376,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
60 1 4 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 0 0 3 0 106 0 2 7 5 7 2 96 0 5 4 4 5 94 8 1 7 7 3 83 0 3 3 15 67 0 4 4 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 106 0 0 3 0 106 0 2 7 5 7 2 5 104 0 5 4 7 5 4 102 8 1 7 7 3 83 0 3 3 15 67 0 4 4 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 0 0 3 0 106 0 2 7 5 7 2 5 104 0 5 4 7 5 4 102 0 3 8 1 7 2 3 7 92 0 4 4 6 84 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
18 18 18 87 18 86 199 36 58 165 37 40 36 9 22
CALL[ ]	/* CallFunction */";
};
width = 463;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(338,406,o),
(338,398,qs),
(338,394,o),
(292,340,o),
(222,261,o),
(142,169,o),
(72,86,o),
(26,23,o),
(26,13,qs),
(26,-2,o),
(44,-2,qs),
(52,-2,o),
(87,-1,o),
(131,0,o),
(180,1,o),
(202,1,qs),
(224,1,o),
(258,0,o),
(295,0,o),
(343,-1,o),
(378,-1,qs),
(392,-1,o),
(392,18,qs),
(392,31,o),
(393,74,o),
(394,85,qs),
(400,181,ls),
(400,196,o),
(387,196,qs),
(378,196,o),
(371,177,o),
(369,151,qs),
(362,48,ls),
(360,29,o),
(353,29,qs),
(108,29,ls),
(91,29,o),
(91,36,qs),
(91,43,o),
(136,100,o),
(203,178,o),
(282,267,o),
(349,348,o),
(394,409,o),
(394,419,qs),
(394,426,o),
(380,436,o),
(363,436,qs),
(331,436,o),
(251,434,o),
(219,434,qs),
(195,434,o),
(162,434,o),
(131,434,o),
(98,435,o),
(74,436,qs),
(61,436,o),
(51,422,o),
(51,405,qs),
(51,298,ls),
(51,279,o),
(57,267,o),
(66,267,qs),
(75,267,o),
(84,293,o),
(85,322,qs),
(88,406,l),
(329,406,ls)
);
},
{
closed = 1;
nodes = (
(263,640,o),
(255,640,qs),
(248,640,o),
(216,610,o),
(184,570,o),
(160,530,o),
(160,521,qs),
(160,510,o),
(168,510,qs),
(175,510,o),
(210,538,o),
(246,574,o),
(274,610,o),
(274,618,qs),
(274,632,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
41 35 34 3 2 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 7 6 7 106 0 6 1 6 106 0 0 5 3 5 0 96 0 3 2 5 3 2 102 8 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 6 7 106 0 6 1 6 106 0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 8 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 7 6 7 106 0 6 1 6 106 0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 1 8 1 5 0 1 5 92 0 2 2 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 81 79 74 72 0 67 0 66 198 36 58 165 35 9 20
CALL[ ]	/* CallFunction */";
};
width = 439;
}
);
note = zacute;
unicode = 378;
},
{
glyphname = zcaron;
kernLeft = z;
kernRight = t_z;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(348,627,o),
(314,608,o),
(276,587,o),
(259,578,q),
(242,587,o),
(204,608,o),
(171,627,o),
(145,640,o),
(140,640,qs),
(134,640,o),
(127,631,o),
(127,626,qs),
(127,606,o),
(163,558,o),
(209,515,o),
(252,486,o),
(259,486,qs),
(268,486,o),
(311,516,o),
(357,558,o),
(392,603,o),
(392,619,qs),
(392,627,o),
(386,640,o),
(379,640,qs),
(374,640,o)
);
},
{
closed = 1;
nodes = (
(272,358,o),
(272,350,qs),
(272,346,o),
(235,300,o),
(179,234,o),
(114,156,o),
(58,86,o),
(21,33,o),
(21,24,qs),
(21,6,o),
(52,-2,o),
(90,-2,qs),
(98,-2,o),
(133,-1,o),
(177,0,o),
(226,1,o),
(248,1,qs),
(270,1,o),
(304,0,o),
(341,0,o),
(389,-1,o),
(424,-1,qs),
(438,-1,o),
(438,18,qs),
(438,31,o),
(439,74,o),
(440,85,qs),
(446,181,ls),
(446,190,o),
(431,212,o),
(408,212,qs),
(394,212,o),
(378,202,o),
(369,186,o),
(365,164,o),
(364,151,qs),
(357,96,ls),
(356,88,o),
(353,77,o),
(348,77,qs),
(198,77,ls),
(181,77,o),
(181,84,qs),
(181,90,o),
(219,140,o),
(277,208,o),
(344,286,o),
(402,357,o),
(440,410,o),
(440,419,qs),
(440,426,o),
(426,436,o),
(409,436,qs),
(377,436,o),
(297,434,o),
(265,434,qs),
(241,434,o),
(201,434,o),
(163,435,o),
(123,435,o),
(99,435,qs),
(80,435,o),
(59,427,o),
(48,414,o),
(46,398,o),
(46,389,qs),
(46,298,ls),
(46,277,o),
(63,251,o),
(89,251,qs),
(113,251,o),
(128,284,o),
(131,322,qs),
(134,358,l),
(263,358,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
21 1 1 0 73 1 5 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
2 9 2 0 1 0 106 0 1 4 1 106 0 3 8 6 8 3 96 0 6 5 5 6 94 10 1 8 8 4 83 0 4 4 15 67 0 5 5 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
2 9 2 0 1 0 106 0 1 4 1 106 0 3 8 6 8 3 96 0 6 5 8 6 5 102 10 1 8 8 4 83 0 4 4 15 67 0 5 5 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
2 9 2 0 1 0 106 0 1 4 1 106 0 3 8 6 8 3 6 104 0 6 5 8 6 5 102 10 1 8 8 4 83 0 4 4 15 67 0 5 5 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
2 9 2 0 1 0 106 0 1 4 1 106 0 3 8 6 8 3 6 104 0 6 5 8 6 5 102 0 4 10 1 8 3 4 8 92 0 5 5 7 84 0 7 7 13 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
26 26 1 0 26 100 26 99 89 77 70 68 61 58 48 38 31 29 17 15 9 7 0 25 1 25 11 15
CALL[ ]	/* CallFunction */";
};
width = 480;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (23,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = z;
},
{
alignment = -1;
pos = (83,1150);
ref = circumflex;
scale = (1,-0.9999);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
76 1 8 6 43 1 2 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
7 10 2 6 8 6 106 0 0 5 3 5 0 96 0 3 2 2 3 94 0 8 8 23 67 9 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
7 10 2 6 8 6 106 0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 8 8 23 67 9 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
7 10 2 6 8 6 106 0 8 1 8 106 0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 1 9 1 5 0 1 5 92 0 2 2 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
72 71 1 1 89 87 82 80 71 95 72 95 1 70 1 69 199 36 58 165 36 11 31
CALL[ ]	/* CallFunction */";
};
width = 463;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(338,406,o),
(338,398,qs),
(338,394,o),
(292,340,o),
(222,261,o),
(142,169,o),
(72,86,o),
(26,23,o),
(26,13,qs),
(26,-2,o),
(44,-2,qs),
(52,-2,o),
(87,-1,o),
(131,0,o),
(180,1,o),
(202,1,qs),
(224,1,o),
(258,0,o),
(295,0,o),
(343,-1,o),
(378,-1,qs),
(392,-1,o),
(392,18,qs),
(392,31,o),
(393,74,o),
(394,85,qs),
(400,181,ls),
(400,196,o),
(387,196,qs),
(378,196,o),
(371,177,o),
(369,151,qs),
(362,48,ls),
(360,29,o),
(353,29,qs),
(108,29,ls),
(91,29,o),
(91,36,qs),
(91,43,o),
(136,100,o),
(203,178,o),
(282,267,o),
(349,348,o),
(394,409,o),
(394,419,qs),
(394,426,o),
(380,436,o),
(363,436,qs),
(331,436,o),
(251,434,o),
(219,434,qs),
(195,434,o),
(162,434,o),
(131,434,o),
(98,435,o),
(74,436,qs),
(61,436,o),
(51,422,o),
(51,405,qs),
(51,298,ls),
(51,279,o),
(57,267,o),
(66,267,qs),
(75,267,o),
(84,293,o),
(85,322,qs),
(88,406,l),
(329,406,ls)
);
},
{
closed = 1;
nodes = (
(302,622,o),
(268,596,o),
(230,566,o),
(213,554,q),
(196,566,o),
(158,596,o),
(125,622,o),
(99,640,o),
(94,640,qs),
(86,640,o),
(86,629,qs),
(86,620,o),
(119,580,o),
(163,540,o),
(204,510,o),
(213,510,qs),
(222,510,o),
(265,540,o),
(308,580,o),
(341,620,o),
(341,629,qs),
(341,640,o),
(333,640,qs),
(328,640,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
87 1 7 6 41 35 34 3 2 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
8 10 2 6 7 6 106 0 7 1 7 106 0 0 5 3 5 0 96 0 3 2 5 3 2 102 9 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
8 10 2 6 7 6 106 0 7 1 7 106 0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 9 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
8 10 2 6 7 6 106 0 7 1 7 106 0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 1 9 1 5 0 1 5 92 0 2 2 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
69 68 0 0 83 81 76 74 68 91 69 91 0 67 0 66 198 36 58 165 35 11 20
CALL[ ]	/* CallFunction */";
};
width = 439;
}
);
note = zcaron;
unicode = 382;
},
{
glyphname = zdotaccent;
kernLeft = z;
kernRight = t_z;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(272,358,o),
(272,350,qs),
(272,346,o),
(235,300,o),
(179,234,o),
(114,156,o),
(58,86,o),
(21,33,o),
(21,24,qs),
(21,6,o),
(52,-2,o),
(90,-2,qs),
(98,-2,o),
(133,-1,o),
(177,0,o),
(226,1,o),
(248,1,qs),
(270,1,o),
(304,0,o),
(341,0,o),
(389,-1,o),
(424,-1,qs),
(438,-1,o),
(438,18,qs),
(438,31,o),
(439,74,o),
(440,85,qs),
(446,181,ls),
(446,190,o),
(431,212,o),
(408,212,qs),
(394,212,o),
(378,202,o),
(369,186,o),
(365,164,o),
(364,151,qs),
(357,96,ls),
(356,88,o),
(353,77,o),
(348,77,qs),
(198,77,ls),
(181,77,o),
(181,84,qs),
(181,90,o),
(219,140,o),
(277,208,o),
(344,286,o),
(402,357,o),
(440,410,o),
(440,419,qs),
(440,426,o),
(426,436,o),
(409,436,qs),
(377,436,o),
(297,434,o),
(265,434,qs),
(241,434,o),
(201,434,o),
(163,435,o),
(123,435,o),
(99,435,qs),
(80,435,o),
(59,427,o),
(48,414,o),
(46,398,o),
(46,389,qs),
(46,298,ls),
(46,277,o),
(63,251,o),
(89,251,qs),
(113,251,o),
(128,284,o),
(131,322,qs),
(134,358,l),
(263,358,ls)
);
},
{
closed = 1;
nodes = (
(236,514,o),
(261,514,qs),
(272,514,o),
(296,520,o),
(315,536,o),
(328,563,o),
(328,584,qs),
(328,611,o),
(292,645,o),
(268,645,qs),
(250,645,o),
(225,632,o),
(209,613,o),
(202,590,o),
(202,580,qs),
(202,548,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
47 1 2 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 5 3 5 0 96 0 3 2 2 3 94 0 6 0 7 1 6 7 91 8 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 0 5 3 5 0 96 0 3 2 5 3 2 102 0 6 0 7 1 6 7 91 8 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 6 0 7 1 6 7 91 8 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 6 0 7 1 6 7 91 0 1 8 1 5 0 1 5 91 0 2 2 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 89 87 81 79 0 74 0 73 199 39 58 167 35 9 20
CALL[ ]	/* CallFunction */";
};
width = 480;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (23,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = z;
},
{
alignment = -1;
pos = (179,0);
ref = dotaccent;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
43 1 2 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 5 3 5 0 96 0 3 2 2 3 94 0 6 0 7 1 6 7 91 8 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 6 0 7 1 6 7 91 8 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 6 0 7 1 6 7 91 0 1 8 1 5 0 1 5 91 0 2 2 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
1 1 83 81 77 75 1 70 1 69 199 36 58 165 36 9 31
CALL[ ]	/* CallFunction */";
};
width = 463;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(338,406,o),
(338,398,qs),
(338,394,o),
(292,340,o),
(222,261,o),
(142,169,o),
(72,86,o),
(26,23,o),
(26,13,qs),
(26,-2,o),
(44,-2,qs),
(52,-2,o),
(87,-1,o),
(131,0,o),
(180,1,o),
(202,1,qs),
(224,1,o),
(258,0,o),
(295,0,o),
(343,-1,o),
(378,-1,qs),
(392,-1,o),
(392,18,qs),
(392,31,o),
(393,74,o),
(394,85,qs),
(400,181,ls),
(400,196,o),
(387,196,qs),
(378,196,o),
(371,177,o),
(369,151,qs),
(362,48,ls),
(360,29,o),
(353,29,qs),
(108,29,ls),
(91,29,o),
(91,36,qs),
(91,43,o),
(136,100,o),
(203,178,o),
(282,267,o),
(349,348,o),
(394,409,o),
(394,419,qs),
(394,426,o),
(380,436,o),
(363,436,qs),
(331,436,o),
(251,434,o),
(219,434,qs),
(195,434,o),
(162,434,o),
(131,434,o),
(98,435,o),
(74,436,qs),
(61,436,o),
(51,422,o),
(51,405,qs),
(51,298,ls),
(51,279,o),
(57,267,o),
(66,267,qs),
(75,267,o),
(84,293,o),
(85,322,qs),
(88,406,l),
(329,406,ls)
);
},
{
closed = 1;
nodes = (
(203,538,o),
(217,538,qs),
(231,538,o),
(258,557,o),
(258,584,qs),
(258,601,o),
(238,621,o),
(224,621,qs),
(213,621,o),
(198,612,o),
(188,599,o),
(183,585,o),
(183,580,qs),
(183,562,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
41 35 34 3 2 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 0 5 3 5 0 96 0 3 2 5 3 2 102 0 6 0 7 1 6 7 91 8 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 6 0 7 1 6 7 91 8 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 6 0 7 1 6 7 91 0 1 8 1 5 0 1 5 91 0 2 2 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 80 78 74 72 0 67 0 66 198 36 58 165 35 9 20
CALL[ ]	/* CallFunction */";
};
width = 439;
}
);
note = zdotaccent;
unicode = 380;
},
{
glyphname = a.salt;
kernLeft = a.salt;
kernRight = a.salt;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(313,240,o),
(258,249,o),
(239,249,qs),
(133,249,o),
(25,169,o),
(25,106,qs),
(25,53,o),
(124,-11,o),
(228,-11,qs),
(260,-11,o),
(319,3,o),
(336,29,q),
(351,9,o),
(397,-11,o),
(443,-11,qs),
(485,-11,o),
(531,24,o),
(531,72,qs),
(531,75,o),
(528,85,o),
(519,96,o),
(505,104,o),
(494,104,qs),
(472,104,o),
(457,81,o),
(457,76,qs),
(457,65,o),
(444,65,qs),
(439,65,o),
(419,86,o),
(419,117,qs),
(419,137,o),
(420,185,o),
(421,232,o),
(422,273,o),
(422,287,qs),
(422,384,o),
(349,475,o),
(270,475,qs),
(229,475,o),
(157,447,o),
(134,412,q),
(135,418,o),
(138,439,o),
(138,448,qs),
(138,454,o),
(134,468,o),
(125,482,o),
(110,491,o),
(98,491,qs),
(84,491,o),
(67,482,o),
(58,469,o),
(55,454,o),
(55,449,qs),
(55,389,o),
(56,324,o),
(56,313,qs),
(56,309,o),
(59,295,o),
(68,282,o),
(87,273,o),
(104,273,qs),
(125,273,o),
(138,298,o),
(138,312,qs),
(138,351,o),
(183,399,o),
(239,399,qs),
(278,399,o),
(335,339,o),
(335,287,qs),
(335,277,o),
(334,258,o),
(334,250,qs),
(334,232,l)
);
},
{
closed = 1;
nodes = (
(175,173,o),
(232,173,qs),
(249,173,o),
(285,164,o),
(315,149,o),
(334,129,o),
(334,117,qs),
(334,97,o),
(285,65,o),
(232,65,qs),
(181,65,o),
(116,84,o),
(116,107,qs),
(116,136,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
86 78 59 24 2 40
CALL[ ]	/* CallFunction */";
};
width = 522;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(310,229,o),
(248,243,o),
(219,243,qs),
(174,243,o),
(102,222,o),
(52,186,o),
(26,136,o),
(26,106,qs),
(26,53,o),
(118,-11,o),
(208,-11,qs),
(246,-11,o),
(314,9,o),
(337,36,q),
(350,12,o),
(394,-11,o),
(432,-11,qs),
(470,-11,o),
(511,24,o),
(511,72,qs),
(511,77,o),
(500,98,o),
(485,98,qs),
(469,98,o),
(458,81,o),
(458,76,qs),
(458,59,o),
(444,48,o),
(433,48,qs),
(420,48,o),
(399,75,o),
(399,117,qs),
(399,137,o),
(400,185,o),
(401,232,o),
(402,273,o),
(402,287,qs),
(402,384,o),
(329,475,o),
(250,475,qs),
(209,475,o),
(137,447,o),
(114,412,q),
(115,418,o),
(118,439,o),
(118,448,qs),
(118,459,o),
(106,485,o),
(89,485,qs),
(78,485,o),
(65,478,o),
(58,467,o),
(56,454,o),
(56,449,qs),
(56,389,o),
(57,324,o),
(57,313,qs),
(57,309,o),
(59,297,o),
(66,287,o),
(80,279,o),
(91,279,qs),
(108,279,o),
(118,301,o),
(118,312,qs),
(118,359,o),
(171,417,o),
(233,417,qs),
(253,417,o),
(290,399,o),
(319,365,o),
(336,317,o),
(336,287,qs),
(336,277,o),
(335,252,o),
(335,241,qs),
(335,215,l)
);
},
{
closed = 1;
nodes = (
(162,185,o),
(219,185,qs),
(241,185,o),
(282,174,o),
(315,156,o),
(335,131,o),
(335,117,qs),
(335,89,o),
(269,47,o),
(212,47,qs),
(161,47,o),
(96,80,o),
(96,107,qs),
(96,141,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
87 79 58 26 2 40
CALL[ ]	/* CallFunction */";
};
width = 504;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(306,211,o),
(235,233,o),
(191,233,qs),
(156,233,o),
(96,214,o),
(53,180,o),
(28,133,o),
(28,106,qs),
(28,53,o),
(111,-11,o),
(180,-11,qs),
(228,-11,o),
(307,19,o),
(339,48,q),
(348,16,o),
(389,-11,o),
(417,-11,qs),
(448,-11,o),
(483,24,o),
(483,72,qs),
(483,77,o),
(477,88,o),
(472,88,qs),
(460,88,o),
(460,76,qs),
(460,41,o),
(431,19,o),
(418,19,qs),
(406,19,o),
(388,27,o),
(377,48,o),
(371,87,o),
(371,117,qs),
(371,137,o),
(372,185,o),
(373,232,o),
(374,273,o),
(374,287,qs),
(374,384,o),
(301,475,o),
(222,475,qs),
(181,475,o),
(109,447,o),
(86,412,q),
(87,418,o),
(90,439,o),
(90,448,qs),
(90,459,o),
(84,475,o),
(76,475,qs),
(67,475,o),
(58,460,o),
(58,449,qs),
(58,389,o),
(59,324,o),
(59,313,qs),
(59,305,o),
(65,289,o),
(73,289,qs),
(83,289,o),
(90,307,o),
(90,312,qs),
(90,373,o),
(153,447,o),
(225,447,qs),
(281,447,o),
(338,361,o),
(338,287,qs),
(338,277,o),
(337,244,o),
(337,227,qs),
(337,187,l)
);
},
{
closed = 1;
nodes = (
(89,164,o),
(125,190,o),
(173,205,o),
(201,205,qs),
(229,205,o),
(279,191,o),
(316,167,o),
(337,135,o),
(337,117,qs),
(337,97,o),
(312,61,o),
(270,33,o),
(215,17,o),
(184,17,qs),
(133,17,o),
(68,66,o),
(68,107,qs),
(68,128,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
84 74 53 20 2 40
CALL[ ]	/* CallFunction */";
};
width = 479;
}
);
note = a.salt;
},
{
glyphname = c.salt;
kernLeft = c.salt;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(312,71,o),
(270,71,qs),
(230,71,o),
(175,93,o),
(142,134,o),
(128,190,o),
(128,224,qs),
(128,265,o),
(147,332,o),
(186,380,o),
(247,406,o),
(290,406,qs),
(322,406,o),
(336,391,o),
(336,384,qs),
(336,378,o),
(328,369,o),
(319,360,o),
(312,346,o),
(312,335,qs),
(312,327,o),
(317,308,o),
(331,292,o),
(353,282,o),
(371,282,qs),
(398,282,o),
(431,299,o),
(451,325,o),
(458,353,o),
(458,365,qs),
(458,391,o),
(427,434,o),
(374,465,o),
(305,482,o),
(268,482,qs),
(213,482,o),
(124,442,o),
(61,373,o),
(26,280,o),
(26,227,qs),
(26,178,o),
(53,93,o),
(111,30,o),
(201,-6,o),
(263,-6,qs),
(302,-6,o),
(361,7,o),
(412,31,o),
(458,68,o),
(484,92,qs),
(493,101,o),
(493,118,qs),
(493,132,o),
(477,151,o),
(460,151,qs),
(448,151,o),
(430,139,o),
(417,128,qs),
(384,100,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
22 12 1 40
CALL[ ]	/* CallFunction */";
};
width = 500;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(310,54,o),
(259,54,qs),
(180,54,o),
(110,148,o),
(110,225,qs),
(110,269,o),
(132,342,o),
(174,395,o),
(237,424,o),
(279,424,qs),
(319,424,o),
(349,402,o),
(349,391,qs),
(349,384,o),
(340,375,o),
(330,366,o),
(321,353,o),
(321,341,qs),
(321,324,o),
(343,294,o),
(371,294,qs),
(389,294,o),
(416,308,o),
(432,329,o),
(440,355,o),
(440,367,qs),
(440,392,o),
(412,434,o),
(365,465,o),
(302,482,o),
(267,482,qs),
(214,482,o),
(127,442,o),
(64,373,o),
(29,280,o),
(29,226,qs),
(29,178,o),
(58,93,o),
(114,30,o),
(198,-6,o),
(252,-6,qs),
(323,-6,o),
(423,48,o),
(466,96,qs),
(471,101,o),
(475,115,o),
(475,121,qs),
(475,132,o),
(463,146,o),
(451,146,qs),
(443,146,o),
(431,139,o),
(420,128,qs),
(387,95,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
21 11 1 40
CALL[ ]	/* CallFunction */";
};
width = 485;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(389,85,qs),
(360,54,o),
(288,24,o),
(248,24,qs),
(171,24,o),
(84,134,o),
(84,227,qs),
(84,276,o),
(110,359,o),
(157,420,o),
(223,454,o),
(263,454,qs),
(283,454,o),
(321,446,o),
(350,432,o),
(368,413,o),
(368,403,qs),
(368,394,o),
(357,385,o),
(345,376,o),
(334,363,o),
(334,351,qs),
(334,334,o),
(354,314,o),
(371,314,qs),
(391,314,o),
(415,345,o),
(415,370,qs),
(415,394,o),
(392,435,o),
(351,465,o),
(297,482,o),
(266,482,qs),
(216,482,o),
(130,442,o),
(68,373,o),
(33,279,o),
(33,225,qs),
(33,177,o),
(64,93,o),
(119,30,o),
(193,-6,o),
(237,-6,qs),
(279,-6,o),
(367,29,o),
(401,58,qs),
(423,77,o),
(440,103,qs),
(450,118,o),
(450,126,qs),
(450,137,o),
(438,137,qs),
(430,137,o),
(424,128,qs),
(400,96,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
20 10 1 40
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = c.salt;
},
{
glyphname = g.salt;
kernLeft = g;
kernRight = g;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(126,435,o),
(79,390,o),
(53,330,o),
(53,294,qs),
(53,256,o),
(84,186,o),
(116,165,q),
(85,151,o),
(54,118,o),
(54,89,qs),
(54,50,o),
(103,14,o),
(142,7,q),
(26,-16,o),
(26,-102,qs),
(26,-139,o),
(65,-195,o),
(131,-232,o),
(219,-250,o),
(268,-250,qs),
(335,-250,o),
(446,-227,o),
(525,-186,o),
(569,-127,o),
(569,-91,qs),
(569,-8,o),
(458,73,o),
(331,73,qs),
(313,73,o),
(251,74,o),
(191,78,o),
(147,87,o),
(147,95,qs),
(147,105,o),
(159,121,o),
(175,131,o),
(190,136,o),
(192,137,q),
(198,137,o),
(209,136,o),
(228,136,qs),
(288,136,o),
(370,164,o),
(421,211,o),
(444,270,o),
(444,301,qs),
(444,328,o),
(428,375,o),
(401,412,o),
(366,438,o),
(347,443,q),
(366,458,o),
(396,472,o),
(413,472,qs),
(429,472,o),
(442,456,o),
(449,436,o),
(461,420,o),
(478,420,qs),
(496,420,o),
(516,442,o),
(516,455,qs),
(516,482,o),
(442,517,o),
(388,517,qs),
(354,517,o),
(293,485,o),
(268,456,q),
(255,460,o),
(235,460,qs),
(193,460,o)
);
},
{
closed = 1;
nodes = (
(375,-8,o),
(434,-28,o),
(475,-63,o),
(475,-91,qs),
(475,-106,o),
(454,-135,o),
(408,-157,o),
(335,-171,o),
(283,-171,qs),
(259,-171,o),
(203,-165,o),
(153,-149,o),
(120,-120,o),
(120,-97,qs),
(120,-78,o),
(154,-43,o),
(205,-16,o),
(262,-1,o),
(285,-1,qs),
(309,-1,o)
);
},
{
closed = 1;
nodes = (
(299,376,o),
(330,359,o),
(350,327,o),
(350,301,qs),
(350,272,o),
(325,238,o),
(290,220,o),
(253,215,o),
(242,215,qs),
(237,215,o),
(206,219,o),
(173,235,o),
(147,266,o),
(147,292,qs),
(147,321,o),
(170,356,o),
(202,376,o),
(236,382,o),
(246,382,qs),
(262,382,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
100 91 80 71 49 4 3 40
CALL[ ]	/* CallFunction */";
};
width = 565;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(131,435,o),
(84,390,o),
(58,330,o),
(58,294,qs),
(58,256,o),
(89,186,o),
(121,165,q),
(90,151,o),
(59,118,o),
(59,89,qs),
(59,50,o),
(108,14,o),
(147,7,q),
(31,-16,o),
(31,-102,qs),
(31,-139,o),
(70,-195,o),
(136,-232,o),
(224,-250,o),
(273,-250,qs),
(335,-250,o),
(438,-227,o),
(512,-186,o),
(553,-127,o),
(553,-91,qs),
(553,-49,o),
(518,6,o),
(455,40,o),
(368,55,o),
(315,56,qs),
(298,56,o),
(236,57,o),
(176,63,o),
(131,79,o),
(131,95,qs),
(131,107,o),
(143,123,o),
(158,134,o),
(174,140,o),
(178,142,q),
(185,141,o),
(210,137,o),
(229,137,qs),
(281,137,o),
(356,165,o),
(405,211,o),
(428,270,o),
(428,301,qs),
(428,328,o),
(412,374,o),
(385,411,o),
(350,438,o),
(331,444,q),
(366,478,o),
(397,478,qs),
(413,478,o),
(425,462,o),
(434,442,o),
(446,426,o),
(462,426,qs),
(480,426,o),
(500,448,o),
(500,461,qs),
(500,485,o),
(438,517,o),
(393,517,qs),
(359,517,o),
(298,485,o),
(273,456,q),
(260,460,o),
(240,460,qs),
(198,460,o)
);
},
{
closed = 1;
nodes = (
(330,-2,o),
(372,-8,o),
(418,-20,o),
(455,-41,o),
(480,-75,o),
(480,-99,qs),
(480,-137,o),
(382,-189,o),
(278,-189,qs),
(252,-189,o),
(191,-179,o),
(139,-158,o),
(104,-127,o),
(104,-106,qs),
(104,-78,o),
(141,-39,o),
(197,-13,o),
(262,-1,o),
(290,-1,qs),
(296,-1,o)
);
},
{
closed = 1;
nodes = (
(300,391,o),
(333,369,o),
(355,331,o),
(355,301,qs),
(355,269,o),
(330,229,o),
(294,206,o),
(253,197,o),
(237,197,qs),
(226,197,o),
(190,204,o),
(156,225,o),
(131,262,o),
(131,292,qs),
(131,323,o),
(154,365,o),
(188,390,o),
(227,400,o),
(243,400,qs),
(261,400,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
101 92 81 72 50 4 3 40
CALL[ ]	/* CallFunction */";
};
width = 526;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(138,435,o),
(91,390,o),
(65,330,o),
(65,294,qs),
(65,256,o),
(96,186,o),
(128,165,q),
(97,151,o),
(66,118,o),
(66,89,qs),
(66,50,o),
(115,14,o),
(154,7,q),
(38,-16,o),
(38,-102,qs),
(38,-139,o),
(77,-195,o),
(143,-232,o),
(231,-250,o),
(280,-250,qs),
(335,-250,o),
(427,-227,o),
(493,-186,o),
(530,-127,o),
(530,-91,qs),
(530,-49,o),
(484,-3,o),
(414,20,o),
(330,26,o),
(292,27,qs),
(245,28,o),
(176,32,o),
(131,46,o),
(108,72,o),
(108,95,qs),
(108,118,o),
(132,139,o),
(158,150,q),
(175,143,o),
(212,137,o),
(231,137,qs),
(272,137,o),
(337,165,o),
(382,211,o),
(405,270,o),
(405,301,qs),
(405,328,o),
(389,373,o),
(362,409,o),
(327,437,o),
(308,446,q),
(342,488,o),
(374,488,qs),
(390,488,o),
(402,472,o),
(411,452,o),
(423,436,o),
(439,436,qs),
(457,436,o),
(477,458,o),
(477,471,qs),
(477,491,o),
(432,517,o),
(400,517,qs),
(366,517,o),
(305,485,o),
(280,456,q),
(267,460,o),
(247,460,qs),
(205,460,o)
);
},
{
closed = 1;
nodes = (
(366,-4,o),
(434,-23,o),
(487,-63,o),
(487,-99,qs),
(487,-124,o),
(458,-168,o),
(406,-200,o),
(331,-219,o),
(285,-219,qs),
(246,-219,o),
(173,-205,o),
(116,-177,o),
(81,-135,o),
(81,-106,qs),
(81,-78,o),
(115,-39,o),
(174,-13,o),
(252,-1,o),
(297,-1,qs),
(305,-1,o)
);
},
{
closed = 1;
nodes = (
(362,361,o),
(362,301,qs),
(362,238,o),
(291,167,o),
(230,167,qs),
(171,167,o),
(108,232,o),
(108,292,qs),
(108,355,o),
(178,430,o),
(239,430,qs),
(298,430,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
95 90 79 70 48 4 3 40
CALL[ ]	/* CallFunction */";
};
width = 470;
}
);
note = g.salt;
},
{
glyphname = k.salt;
kernLeft = germandbls;
kernRight = c_k;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,817,o),
(132,817,qs),
(102,817,o),
(43,813,o),
(-4,803,o),
(-33,787,o),
(-33,775,qs),
(-33,758,o),
(-4,749,o),
(13,749,qs),
(42,749,ls),
(64,749,o),
(64,726,qs),
(64,700,o),
(65,634,o),
(67,549,o),
(68,440,o),
(68,370,qs),
(68,336,o),
(66,253,o),
(65,176,o),
(63,117,o),
(63,107,qs),
(63,78,o),
(42,58,o),
(19,55,qs),
(14,54,o),
(-2,44,o),
(-2,24,qs),
(-2,6,o),
(32,-6,o),
(49,-6,qs),
(63,-6,o),
(106,-4,o),
(122,-4,qs),
(160,-4,o),
(209,-6,o),
(231,-6,qs),
(243,-6,o),
(260,3,o),
(260,23,qs),
(260,38,o),
(241,53,o),
(218,53,qs),
(157,53,l),
(157,185,l),
(176,205,l),
(183,191,o),
(208,142,o),
(239,84,o),
(272,23,o),
(303,-27,o),
(330,-58,o),
(339,-58,qs),
(399,-58,o),
(481,-57,o),
(532,-51,o),
(555,-39,o),
(555,-28,qs),
(555,-18,o),
(539,-7,o),
(515,-1,o),
(487,2,o),
(475,3,qs),
(433,7,o),
(395,9,o),
(384,9,qs),
(382,9,o),
(353,54,o),
(312,128,o),
(266,221,o),
(246,268,q),
(261,281,o),
(275,296,o),
(290,311,o),
(313,333,o),
(335,354,qs),
(346,365,o),
(366,367,qs),
(418,372,o),
(481,386,o),
(481,403,qs),
(481,412,o),
(470,423,o),
(442,429,o),
(394,431,o),
(357,431,qs),
(312,431,o),
(251,429,o),
(215,421,o),
(200,408,o),
(200,396,qs),
(200,384,o),
(213,370,o),
(223,370,qs),
(231,370,ls),
(236,370,o),
(236,366,qs),
(236,363,o),
(230,354,o),
(212,337,o),
(181,307,o),
(157,282,q),
(157,788,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
100 48 1 40
CALL[ ]	/* CallFunction */";
};
width = 549;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(146,817,o),
(121,817,qs),
(91,817,o),
(35,813,o),
(-9,804,o),
(-36,790,o),
(-36,781,qs),
(-36,767,o),
(-10,761,o),
(2,761,qs),
(52,761,ls),
(74,761,o),
(74,738,qs),
(74,711,o),
(75,644,o),
(77,555,o),
(78,442,o),
(78,370,qs),
(78,325,o),
(77,267,o),
(76,228,o),
(75,199,o),
(74,168,o),
(73,127,o),
(73,95,qs),
(73,66,o),
(54,48,o),
(29,43,qs),
(12,40,o),
(-5,34,o),
(-5,17,qs),
(-5,3,o),
(21,-6,o),
(38,-6,qs),
(52,-6,o),
(95,-4,o),
(111,-4,qs),
(149,-4,o),
(198,-6,o),
(220,-6,qs),
(232,-6,o),
(249,2,o),
(249,16,qs),
(249,28,o),
(230,41,o),
(207,41,qs),
(146,41,l),
(146,185,l),
(179,216,l),
(185,205,o),
(210,156,o),
(242,95,o),
(278,30,o),
(312,-24,o),
(341,-59,o),
(349,-59,qs),
(450,-58,o),
(537,-51,o),
(537,-34,qs),
(537,-26,o),
(525,-16,o),
(506,-11,o),
(483,-9,o),
(471,-9,qs),
(429,-9,o),
(388,-6,o),
(380,2,qs),
(368,13,o),
(331,70,o),
(291,145,o),
(250,230,o),
(235,268,q),
(250,281,o),
(269,300,o),
(290,320,o),
(317,345,o),
(339,366,qs),
(350,377,o),
(370,379,qs),
(422,384,o),
(471,394,o),
(471,409,qs),
(471,424,o),
(426,431,o),
(376,431,qs),
(297,431,ls),
(260,431,o),
(220,424,o),
(220,407,qs),
(220,395,o),
(234,384,o),
(245,384,qs),
(249,384,ls),
(258,384,o),
(258,374,qs),
(258,366,o),
(205,318,o),
(146,264,q),
(146,788,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
95 42 1 40
CALL[ ]	/* CallFunction */";
};
width = 533;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(131,817,o),
(106,817,qs),
(76,817,o),
(23,813,o),
(-17,806,o),
(-41,796,o),
(-41,791,qs),
(-41,786,o),
(-25,781,o),
(-13,781,qs),
(67,781,ls),
(89,781,o),
(89,758,qs),
(89,729,o),
(90,658,o),
(92,565,o),
(93,446,o),
(93,370,qs),
(93,322,o),
(92,260,o),
(91,217,o),
(90,186,o),
(89,153,o),
(88,109,o),
(88,75,qs),
(88,46,o),
(72,27,o),
(44,23,qs),
(9,18,o),
(-10,11,o),
(-10,6,qs),
(-10,-6,o),
(23,-6,qs),
(37,-6,o),
(80,-4,o),
(96,-4,qs),
(134,-4,o),
(183,-6,o),
(205,-6,qs),
(217,-6,o),
(234,0,o),
(234,5,qs),
(234,11,o),
(215,21,o),
(192,21,qs),
(131,21,l),
(131,185,l),
(184,235,l),
(190,224,o),
(216,172,o),
(250,107,o),
(289,37,o),
(325,-21,o),
(355,-59,o),
(364,-59,qs),
(435,-59,o),
(512,-55,o),
(512,-44,qs),
(512,-34,o),
(489,-29,o),
(466,-29,qs),
(424,-29,o),
(384,-26,o),
(378,-18,qs),
(346,21,o),
(292,114,o),
(250,197,o),
(223,259,o),
(220,268,q),
(235,281,o),
(261,306,o),
(289,333,o),
(323,365,o),
(345,386,qs),
(356,397,o),
(376,399,qs),
(402,401,o),
(434,405,o),
(451,409,o),
(457,415,o),
(457,419,qs),
(457,423,o),
(442,427,o),
(407,430,o),
(348,431,o),
(303,431,qs),
(228,431,o),
(228,417,qs),
(228,405,o),
(248,404,qs),
(282,402,ls),
(294,402,o),
(294,394,qs),
(294,390,o),
(270,362,o),
(227,320,o),
(167,265,o),
(131,234,q),
(131,788,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
95 42 1 40
CALL[ ]	/* CallFunction */";
};
width = 510;
}
);
note = k.salt;
},
{
glyphname = s.salt;
kernLeft = s.salt;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(204,0,o),
(239,0,qs),
(265,0,o),
(325,7,o),
(377,29,o),
(411,69,o),
(411,102,qs),
(411,168,o),
(312,233,o),
(219,246,qs),
(205,248,o),
(173,257,o),
(146,272,o),
(128,295,o),
(128,311,qs),
(128,345,o),
(170,387,o),
(207,387,qs),
(247,387,o),
(303,355,o),
(314,343,qs),
(331,323,o),
(338,285,o),
(338,282,qs),
(338,279,o),
(342,269,o),
(351,260,o),
(367,253,o),
(380,253,qs),
(401,253,o),
(420,275,o),
(420,283,qs),
(420,294,o),
(421,377,o),
(421,437,qs),
(421,451,o),
(405,473,o),
(375,473,qs),
(352,473,o),
(338,448,o),
(338,430,qs),
(338,421,o),
(339,401,o),
(340,388,q),
(337,398,o),
(318,425,o),
(286,449,o),
(240,465,o),
(210,465,qs),
(178,465,o),
(116,445,o),
(65,406,o),
(34,347,o),
(34,309,qs),
(34,275,o),
(58,229,o),
(92,199,o),
(128,182,o),
(141,178,qs),
(171,169,o),
(233,159,o),
(284,147,o),
(317,128,o),
(317,110,qs),
(317,99,o),
(293,85,o),
(260,77,o),
(223,75,o),
(211,75,qs),
(200,75,o),
(175,78,o),
(153,83,o),
(137,88,o),
(135,91,qs),
(130,96,o),
(117,133,o),
(108,150,qs),
(105,155,o),
(87,175,o),
(68,175,qs),
(57,175,o),
(38,161,o),
(38,148,qs),
(38,127,o),
(43,86,o),
(43,67,qs),
(43,53,o),
(40,26,o),
(40,16,qs),
(40,5,o),
(61,-7,o),
(77,-7,qs),
(91,-7,o),
(108,-1,o),
(117,12,o),
(121,34,o),
(123,50,q),
(136,22,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
58 4 1 40
CALL[ ]	/* CallFunction */";
};
width = 458;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(138,18,o),
(168,6,o),
(199,0,o),
(212,0,qs),
(237,0,o),
(300,9,o),
(356,33,o),
(393,72,o),
(393,102,qs),
(393,132,o),
(366,175,o),
(319,205,o),
(257,223,o),
(222,229,qs),
(205,232,o),
(165,240,o),
(132,258,o),
(110,288,o),
(110,311,qs),
(110,353,o),
(164,405,o),
(210,405,qs),
(250,405,o),
(305,373,o),
(319,353,qs),
(333,331,o),
(339,291,o),
(341,282,q),
(341,279,o),
(344,270,o),
(350,261,o),
(362,255,o),
(373,255,qs),
(389,255,o),
(402,275,o),
(402,283,qs),
(402,294,o),
(403,377,o),
(403,437,qs),
(403,448,o),
(393,469,o),
(369,469,qs),
(352,469,o),
(341,448,o),
(341,430,qs),
(341,421,o),
(342,401,o),
(343,388,q),
(340,398,o),
(321,425,o),
(289,449,o),
(243,465,o),
(213,465,qs),
(181,465,o),
(119,445,o),
(68,406,o),
(37,347,o),
(37,309,qs),
(37,275,o),
(61,229,o),
(95,199,o),
(131,182,o),
(144,178,qs),
(174,169,o),
(236,159,o),
(287,146,o),
(320,123,o),
(320,101,qs),
(320,85,o),
(261,58,o),
(210,58,qs),
(195,58,o),
(164,63,o),
(137,72,o),
(118,83,o),
(116,88,qs),
(109,108,o),
(103,130,o),
(98,141,qs),
(88,164,o),
(75,175,o),
(64,175,qs),
(56,175,o),
(41,161,o),
(41,148,qs),
(41,127,o),
(46,86,o),
(46,67,qs),
(46,53,o),
(43,26,o),
(43,16,qs),
(43,5,o),
(64,-7,o),
(70,-7,qs),
(93,-7,o),
(103,18,o),
(105,50,q),
(112,37,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
54 2 1 40
CALL[ ]	/* CallFunction */";
};
width = 441;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(116,19,o),
(151,7,o),
(188,0,o),
(205,0,qs),
(230,0,o),
(287,13,o),
(336,39,o),
(368,77,o),
(368,102,qs),
(368,128,o),
(338,162,o),
(294,184,o),
(245,195,o),
(227,199,qs),
(206,203,o),
(156,213,o),
(114,234,o),
(85,275,o),
(85,311,qs),
(85,367,o),
(155,435,o),
(215,435,qs),
(294,435,o),
(326,369,qs),
(332,357,o),
(339,331,o),
(343,306,o),
(345,286,o),
(346,282,qs),
(347,277,o),
(353,259,o),
(363,259,qs),
(371,259,o),
(377,275,o),
(377,283,qs),
(377,294,o),
(378,377,o),
(378,437,qs),
(378,448,o),
(369,463,o),
(360,463,qs),
(352,463,o),
(346,448,o),
(346,430,qs),
(346,421,o),
(347,401,o),
(348,388,q),
(345,398,o),
(326,425,o),
(294,449,o),
(248,465,o),
(218,465,qs),
(186,465,o),
(124,445,o),
(73,406,o),
(42,347,o),
(42,309,qs),
(42,275,o),
(66,229,o),
(100,199,o),
(136,182,o),
(149,178,qs),
(179,169,o),
(241,159,o),
(292,146,o),
(325,123,o),
(325,101,qs),
(325,69,o),
(259,30,o),
(208,30,qs),
(168,30,o),
(105,58,o),
(91,88,qs),
(86,99,o),
(81,120,o),
(77,141,qs),
(73,163,o),
(66,175,o),
(59,175,qs),
(51,175,o),
(46,161,o),
(46,148,qs),
(46,127,o),
(51,86,o),
(51,67,qs),
(51,53,o),
(48,26,o),
(48,16,qs),
(48,-7,o),
(60,-7,qs),
(69,-7,o),
(79,18,o),
(80,50,q),
(88,38,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
40 2 1 40
CALL[ ]	/* CallFunction */";
};
width = 417;
}
);
note = s.salt;
},
{
glyphname = c_h;
kernLeft = c;
kernRight = c_h;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(893,355,o),
(854,398,o),
(786,428,o),
(732,428,qs),
(693,428,o),
(633,407,o),
(610,375,q),
(610,666,ls),
(610,672,o),
(603,706,o),
(578,740,o),
(526,767,o),
(481,767,qs),
(420,767,o),
(355,700,o),
(355,615,qs),
(355,564,o),
(372,472,o),
(380,442,qs),
(382,434,o),
(387,420,o),
(387,419,q),
(362,456,o),
(296,482,o),
(261,482,qs),
(210,482,o),
(124,442,o),
(61,373,o),
(26,279,o),
(26,226,qs),
(26,177,o),
(57,93,o),
(114,30,o),
(196,-6,o),
(248,-6,qs),
(288,-6,o),
(353,14,o),
(403,46,o),
(438,85,o),
(448,103,qs),
(451,108,o),
(457,121,o),
(457,129,qs),
(457,134,o),
(446,156,o),
(424,156,qs),
(398,156,o),
(375,133,o),
(373,128,qs),
(371,123,o),
(358,105,o),
(332,87,o),
(290,74,o),
(260,74,qs),
(186,74,o),
(122,156,o),
(122,225,qs),
(122,305,o),
(199,404,o),
(269,404,qs),
(300,404,o),
(339,384,o),
(362,357,o),
(372,328,o),
(375,319,qs),
(383,292,o),
(413,280,o),
(427,280,qs),
(442,280,o),
(461,288,o),
(472,301,o),
(475,316,o),
(475,322,qs),
(475,337,o),
(466,406,o),
(454,491,o),
(445,577,o),
(445,609,qs),
(445,636,o),
(452,668,o),
(462,684,o),
(475,689,o),
(481,689,qs),
(493,689,o),
(519,669,o),
(519,634,qs),
(519,614,o),
(519,541,o),
(520,466,o),
(520,409,o),
(520,406,qs),
(520,383,o),
(518,300,o),
(516,209,o),
(514,126,o),
(513,104,qs),
(512,81,o),
(501,67,o),
(487,64,qs),
(467,60,o),
(442,53,o),
(428,44,o),
(423,32,o),
(423,24,qs),
(423,8,o),
(439,0,o),
(455,0,qs),
(470,0,o),
(510,3,o),
(532,3,qs),
(555,3,o),
(619,0,o),
(648,0,qs),
(661,0,o),
(685,14,o),
(685,30,qs),
(685,40,o),
(673,54,o),
(655,61,o),
(635,64,o),
(626,64,qs),
(604,64,l),
(604,193,ls),
(604,220,o),
(615,277,o),
(644,322,o),
(692,351,o),
(729,351,qs),
(757,351,o),
(792,334,o),
(811,313,o),
(818,292,o),
(819,288,qs),
(821,276,o),
(823,240,o),
(825,198,o),
(825,155,o),
(825,137,qs),
(825,119,o),
(825,79,o),
(824,41,o),
(823,9,o),
(822,0,qs),
(820,-19,o),
(804,-29,o),
(787,-31,qs),
(772,-33,o),
(743,-36,o),
(719,-44,o),
(705,-56,o),
(705,-66,qs),
(705,-82,o),
(737,-93,o),
(755,-93,qs),
(761,-93,o),
(781,-92,o),
(805,-91,o),
(830,-90,o),
(840,-90,qs),
(850,-90,o),
(878,-91,o),
(904,-92,o),
(926,-93,o),
(931,-93,qs),
(950,-93,o),
(980,-81,o),
(980,-64,qs),
(980,-44,o),
(951,-32,o),
(933,-32,qs),
(916,-32,l),
(916,176,ls),
(916,189,o),
(916,222,o),
(915,254,o),
(913,283,o),
(912,293,qs),
(910,309,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
163 12 1 40
CALL[ ]	/* CallFunction */";
};
width = 961;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(877,356,o),
(842,398,o),
(781,428,o),
(732,428,qs),
(687,428,o),
(616,396,o),
(592,357,q),
(592,666,ls),
(592,669,o),
(588,701,o),
(567,738,o),
(521,767,o),
(478,767,qs),
(422,767,o),
(358,698,o),
(358,614,qs),
(358,563,o),
(376,470,o),
(383,442,qs),
(385,432,o),
(388,422,o),
(389,420,q),
(363,456,o),
(299,482,o),
(264,482,qs),
(213,482,o),
(127,442,o),
(64,373,o),
(29,280,o),
(29,227,qs),
(29,178,o),
(60,93,o),
(117,30,o),
(197,-6,o),
(247,-6,qs),
(285,-6,o),
(346,14,o),
(393,45,o),
(427,84,o),
(437,103,qs),
(441,110,o),
(446,123,o),
(446,128,qs),
(446,133,o),
(437,150,o),
(420,150,qs),
(402,150,o),
(385,133,o),
(383,128,qs),
(378,119,o),
(361,94,o),
(332,71,o),
(288,56,o),
(256,56,qs),
(180,56,o),
(104,148,o),
(104,226,qs),
(104,269,o),
(127,341,o),
(170,393,o),
(231,422,o),
(270,422,qs),
(303,422,o),
(345,402,o),
(370,371,o),
(382,335,o),
(386,319,qs),
(391,299,o),
(412,286,o),
(424,286,qs),
(446,286,o),
(457,310,o),
(457,321,qs),
(457,336,o),
(448,406,o),
(436,490,o),
(427,577,o),
(427,610,qs),
(427,644,o),
(438,683,o),
(454,703,o),
(471,707,o),
(477,707,qs),
(493,707,o),
(522,685,o),
(522,646,qs),
(522,517,ls),
(522,467,o),
(523,406,qs),
(523,372,o),
(521,282,o),
(519,192,o),
(517,114,o),
(516,92,qs),
(515,69,o),
(504,54,o),
(490,52,qs),
(448,46,o),
(408,34,o),
(408,19,qs),
(408,6,o),
(431,0,o),
(446,0,qs),
(465,0,o),
(512,3,o),
(535,3,qs),
(558,3,o),
(622,0,o),
(651,0,qs),
(659,0,o),
(681,11,o),
(681,24,qs),
(681,41,o),
(645,52,o),
(629,52,qs),
(586,52,l),
(586,193,ls),
(586,225,o),
(602,288,o),
(636,338,o),
(689,369,o),
(726,369,qs),
(756,369,o),
(793,350,o),
(813,323,o),
(821,296,o),
(822,288,qs),
(824,274,o),
(826,233,o),
(828,189,o),
(828,147,o),
(828,132,qs),
(828,117,o),
(828,79,o),
(827,41,o),
(826,9,o),
(825,0,qs),
(823,-18,o),
(808,-29,o),
(790,-31,qs),
(777,-32,o),
(750,-35,o),
(729,-41,o),
(715,-52,o),
(715,-60,qs),
(715,-72,o),
(740,-81,o),
(757,-81,qs),
(770,-81,o),
(822,-78,o),
(843,-78,qs),
(853,-78,o),
(880,-79,o),
(906,-80,o),
(929,-81,o),
(935,-81,qs),
(952,-81,o),
(976,-72,o),
(976,-60,qs),
(976,-51,o),
(964,-40,o),
(945,-34,o),
(922,-32,o),
(912,-32,qs),
(898,-32,l),
(898,176,ls),
(898,208,o),
(897,270,o),
(894,293,qs),
(892,310,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
155 12 1 40
CALL[ ]	/* CallFunction */";
};
width = 957;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(854,358,o),
(824,400,o),
(773,428,o),
(732,428,qs),
(678,428,o),
(592,375,o),
(566,327,q),
(566,666,ls),
(566,672,o),
(563,706,o),
(546,740,o),
(508,767,o),
(474,767,qs),
(423,767,o),
(362,695,o),
(362,613,qs),
(362,588,o),
(368,537,o),
(375,492,o),
(384,454,o),
(387,442,qs),
(389,433,o),
(390,423,o),
(392,420,qs),
(363,456,o),
(303,482,o),
(268,482,qs),
(217,482,o),
(131,442,o),
(68,373,o),
(33,280,o),
(33,228,qs),
(33,178,o),
(64,93,o),
(120,30,o),
(199,-6,o),
(246,-6,qs),
(281,-6,o),
(337,13,o),
(380,45,o),
(411,83,o),
(421,103,qs),
(425,111,o),
(430,124,o),
(430,127,qs),
(430,130,o),
(424,140,o),
(415,140,qs),
(408,140,o),
(399,133,o),
(397,128,qs),
(388,111,o),
(365,75,o),
(332,45,o),
(285,26,o),
(251,26,qs),
(171,26,o),
(78,134,o),
(78,227,qs),
(78,276,o),
(105,359,o),
(156,419,o),
(227,452,o),
(271,452,qs),
(311,452,o),
(359,426,o),
(386,387,o),
(398,340,o),
(401,319,qs),
(402,314,o),
(409,296,o),
(420,296,qs),
(429,296,o),
(432,310,o),
(432,320,qs),
(432,336,o),
(422,406,o),
(411,490,o),
(401,577,o),
(401,612,qs),
(401,656,o),
(418,706,o),
(440,731,o),
(464,737,o),
(472,737,qs),
(495,737,o),
(526,708,o),
(526,666,qs),
(526,601,o),
(527,510,o),
(527,450,o),
(527,415,o),
(527,406,qs),
(527,354,o),
(526,253,o),
(524,165,o),
(522,94,o),
(521,72,qs),
(520,49,o),
(508,34,o),
(494,32,qs),
(456,28,o),
(414,20,o),
(414,10,qs),
(414,3,o),
(433,0,o),
(447,0,qs),
(471,0,o),
(516,3,o),
(539,3,qs),
(562,3,o),
(626,0,o),
(655,0,qs),
(663,0,o),
(675,8,o),
(675,14,qs),
(675,23,o),
(649,32,o),
(633,32,qs),
(560,32,l),
(560,193,ls),
(560,233,o),
(582,308,o),
(624,365,o),
(684,399,o),
(722,399,qs),
(755,399,o),
(795,375,o),
(816,340,o),
(824,302,o),
(826,288,qs),
(828,270,o),
(830,221,o),
(832,174,o),
(832,133,o),
(832,123,qs),
(832,112,o),
(832,78,o),
(831,42,o),
(830,9,o),
(829,0,qs),
(827,-17,o),
(814,-29,o),
(794,-31,qs),
(783,-32,o),
(761,-34,o),
(741,-39,o),
(729,-45,o),
(729,-50,qs),
(729,-61,o),
(760,-61,qs),
(774,-61,o),
(825,-58,o),
(847,-58,qs),
(868,-58,o),
(925,-61,o),
(941,-61,qs),
(970,-61,o),
(970,-50,qs),
(970,-40,o),
(936,-32,o),
(916,-32,qs),
(872,-32,l),
(872,176,ls),
(872,215,o),
(871,267,o),
(868,293,qs),
(866,311,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
153 9 1 40
CALL[ ]	/* CallFunction */";
};
width = 952;
}
);
note = c_h;
},
{
glyphname = c_k;
kernLeft = c;
kernRight = c_k;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(353,14,o),
(403,46,o),
(438,85,o),
(448,103,qs),
(451,108,o),
(457,121,o),
(457,129,qs),
(457,132,o),
(455,141,o),
(448,150,o),
(435,156,o),
(424,156,qs),
(398,156,o),
(375,133,o),
(373,128,qs),
(371,123,o),
(358,105,o),
(332,87,o),
(290,74,o),
(260,74,qs),
(186,74,o),
(122,156,o),
(122,225,qs),
(122,305,o),
(199,404,o),
(269,404,qs),
(300,404,o),
(339,384,o),
(362,357,o),
(372,328,o),
(375,319,qs),
(383,294,o),
(410,280,o),
(427,280,qs),
(442,280,o),
(461,288,o),
(472,301,o),
(475,316,o),
(475,322,qs),
(475,337,o),
(466,406,o),
(454,491,o),
(445,577,o),
(445,609,qs),
(445,636,o),
(451,667,o),
(462,684,o),
(475,689,o),
(482,689,qs),
(496,689,o),
(518,667,o),
(519,633,qs),
(520,583,o),
(521,511,o),
(521,450,o),
(521,392,o),
(521,356,qs),
(521,319,o),
(520,259,o),
(518,199,o),
(517,132,o),
(517,87,qs),
(517,72,o),
(493,59,o),
(472,55,qs),
(464,53,o),
(452,43,o),
(452,24,qs),
(452,4,o),
(485,-6,o),
(501,-6,qs),
(508,-6,o),
(528,-5,o),
(548,-5,o),
(565,-4,o),
(570,-4,qs),
(593,-4,o),
(617,-5,o),
(633,-5,o),
(650,-6,o),
(667,-6,qs),
(675,-6,o),
(693,5,o),
(693,22,qs),
(693,38,o),
(675,53,o),
(651,53,qs),
(610,53,l),
(610,185,l),
(629,205,l),
(636,191,o),
(661,142,o),
(692,84,o),
(725,23,o),
(756,-27,o),
(783,-58,o),
(792,-58,qs),
(853,-58,o),
(923,-56,o),
(957,-49,o),
(966,-38,o),
(966,-29,qs),
(966,-18,o),
(950,-6,o),
(926,1,o),
(898,3,o),
(886,3,qs),
(866,4,o),
(841,6,o),
(838,9,q),
(836,10,o),
(805,53,o),
(760,121,o),
(710,209,o),
(690,256,q),
(719,283,o),
(768,331,o),
(789,354,qs),
(798,365,o),
(820,367,qs),
(849,370,o),
(882,376,o),
(898,384,o),
(901,394,o),
(901,400,qs),
(901,409,o),
(892,422,o),
(859,429,o),
(795,432,o),
(740,432,qs),
(702,432,o),
(658,413,o),
(658,393,qs),
(658,385,o),
(669,374,o),
(674,374,qs),
(681,374,ls),
(686,374,o),
(695,372,o),
(694,370,qs),
(693,367,o),
(685,357,o),
(667,338,o),
(635,307,o),
(610,282,q),
(610,666,ls),
(610,672,o),
(603,705,o),
(576,740,o),
(523,767,o),
(476,767,qs),
(420,767,o),
(355,699,o),
(355,614,qs),
(355,561,o),
(372,474,o),
(379,447,qs),
(382,435,o),
(386,422,o),
(386,421,q),
(361,456,o),
(296,482,o),
(261,482,qs),
(210,482,o),
(124,442,o),
(61,373,o),
(26,279,o),
(26,226,qs),
(26,177,o),
(57,93,o),
(114,30,o),
(196,-6,o),
(248,-6,qs),
(288,-6,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
75 21 1 40
CALL[ ]	/* CallFunction */";
};
width = 943;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(523,267,o),
(522,228,o),
(521,199,o),
(520,168,o),
(519,127,o),
(519,95,qs),
(519,66,o),
(500,48,o),
(475,43,qs),
(458,40,o),
(441,34,o),
(441,17,qs),
(441,3,o),
(467,-6,o),
(484,-6,qs),
(498,-6,o),
(541,-4,o),
(557,-4,qs),
(576,-4,o),
(603,-5,o),
(624,-5,o),
(643,-6,o),
(654,-6,qs),
(666,-6,o),
(683,2,o),
(683,16,qs),
(683,28,o),
(664,41,o),
(641,41,qs),
(592,41,l),
(592,185,l),
(625,216,l),
(631,205,o),
(656,156,o),
(688,95,o),
(724,30,o),
(758,-24,o),
(786,-59,o),
(795,-59,qs),
(846,-59,o),
(909,-57,o),
(945,-52,o),
(958,-43,o),
(958,-34,qs),
(958,-26,o),
(946,-16,o),
(927,-11,o),
(904,-9,o),
(892,-9,qs),
(871,-9,o),
(849,-8,o),
(836,-6,o),
(830,-2,o),
(826,2,qs),
(814,13,o),
(777,70,o),
(737,145,o),
(696,230,o),
(681,268,q),
(696,281,o),
(715,300,o),
(736,320,o),
(763,345,o),
(785,366,qs),
(796,377,o),
(816,379,qs),
(842,381,o),
(874,386,o),
(891,392,o),
(897,401,o),
(897,409,qs),
(897,424,o),
(852,431,o),
(802,431,qs),
(743,431,ls),
(706,431,o),
(660,424,o),
(660,407,qs),
(660,395,o),
(680,384,o),
(691,384,qs),
(695,384,ls),
(704,384,o),
(704,374,qs),
(704,366,o),
(651,318,o),
(592,264,q),
(592,666,ls),
(592,669,o),
(587,701,o),
(565,738,o),
(518,767,o),
(475,767,qs),
(422,767,o),
(358,698,o),
(358,614,qs),
(358,563,o),
(376,470,o),
(383,442,qs),
(385,432,o),
(388,422,o),
(389,420,q),
(363,456,o),
(299,482,o),
(264,482,qs),
(213,482,o),
(127,442,o),
(64,373,o),
(29,280,o),
(29,227,qs),
(29,178,o),
(60,93,o),
(117,30,o),
(197,-6,o),
(247,-6,qs),
(285,-6,o),
(346,14,o),
(393,45,o),
(427,84,o),
(437,103,qs),
(441,110,o),
(446,123,o),
(446,128,qs),
(446,133,o),
(437,150,o),
(420,150,qs),
(402,150,o),
(385,133,o),
(383,128,qs),
(378,119,o),
(361,94,o),
(332,71,o),
(288,56,o),
(256,56,qs),
(180,56,o),
(104,148,o),
(104,226,qs),
(104,269,o),
(127,341,o),
(170,393,o),
(231,422,o),
(270,422,qs),
(303,422,o),
(345,402,o),
(370,371,o),
(382,335,o),
(386,319,qs),
(391,299,o),
(412,286,o),
(424,286,qs),
(446,286,o),
(457,310,o),
(457,321,qs),
(457,336,o),
(448,406,o),
(436,490,o),
(427,577,o),
(427,610,qs),
(427,643,o),
(438,682,o),
(454,702,o),
(471,707,o),
(477,707,qs),
(493,707,o),
(521,683,o),
(522,646,qs),
(523,604,o),
(524,533,o),
(524,468,o),
(524,404,o),
(524,370,qs),
(524,325,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
131 77 1 40
CALL[ ]	/* CallFunction */";
};
width = 944;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(566,672,o),
(563,706,o),
(546,740,o),
(508,767,o),
(474,767,qs),
(423,767,o),
(362,695,o),
(362,614,qs),
(362,589,o),
(368,538,o),
(375,492,o),
(384,454,o),
(387,442,qs),
(389,435,o),
(389,423,o),
(391,419,q),
(362,456,o),
(303,482,o),
(268,482,qs),
(217,482,o),
(131,442,o),
(68,373,o),
(33,280,o),
(33,228,qs),
(33,178,o),
(64,93,o),
(120,30,o),
(199,-6,o),
(246,-6,qs),
(281,-6,o),
(337,13,o),
(380,45,o),
(411,83,o),
(421,103,qs),
(425,111,o),
(430,124,o),
(430,127,qs),
(430,130,o),
(424,140,o),
(415,140,qs),
(408,140,o),
(399,133,o),
(397,128,qs),
(388,111,o),
(365,75,o),
(332,45,o),
(285,26,o),
(251,26,qs),
(171,26,o),
(78,134,o),
(78,227,qs),
(78,276,o),
(105,359,o),
(156,419,o),
(227,452,o),
(271,452,qs),
(311,452,o),
(359,426,o),
(386,387,o),
(398,340,o),
(401,319,qs),
(402,314,o),
(409,296,o),
(420,296,qs),
(429,296,o),
(432,310,o),
(432,320,qs),
(432,336,o),
(422,406,o),
(411,490,o),
(401,577,o),
(401,612,qs),
(401,656,o),
(418,706,o),
(441,731,o),
(465,737,o),
(473,737,qs),
(496,737,o),
(525,709,o),
(526,667,qs),
(526,637,o),
(527,556,o),
(528,477,o),
(528,410,o),
(528,393,qs),
(528,345,o),
(525,182,o),
(523,75,qs),
(523,60,o),
(520,41,o),
(511,31,o),
(494,26,o),
(479,23,qs),
(447,18,o),
(425,12,o),
(425,6,qs),
(425,-6,o),
(460,-6,qs),
(473,-6,o),
(512,-4,o),
(538,-4,qs),
(550,-4,o),
(580,-5,o),
(607,-5,o),
(629,-6,o),
(635,-6,qs),
(669,-6,o),
(669,6,qs),
(669,11,o),
(650,21,o),
(627,21,qs),
(566,21,l),
(566,185,l),
(619,235,l),
(625,224,o),
(651,172,o),
(686,107,o),
(724,37,o),
(760,-21,o),
(790,-59,o),
(799,-59,qs),
(878,-59,o),
(947,-55,o),
(947,-42,qs),
(947,-29,o),
(901,-29,qs),
(859,-29,o),
(819,-26,o),
(813,-18,qs),
(781,21,o),
(727,114,o),
(685,197,o),
(658,259,o),
(655,268,q),
(670,281,o),
(682,293,o),
(701,311,o),
(739,347,o),
(780,386,qs),
(791,397,o),
(811,399,qs),
(853,403,o),
(892,409,o),
(892,417,qs),
(892,426,o),
(834,431,o),
(772,431,qs),
(710,431,o),
(663,426,o),
(663,416,qs),
(663,412,o),
(671,405,o),
(683,404,qs),
(717,402,ls),
(722,402,o),
(729,398,o),
(729,395,qs),
(729,390,o),
(705,362,o),
(662,319,o),
(602,265,o),
(566,234,q),
(566,666,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
156 40 1 40
CALL[ ]	/* CallFunction */";
};
width = 945;
}
);
note = c_k;
},
{
glyphname = c_p;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(353,14,o),
(403,46,o),
(438,85,o),
(448,103,qs),
(451,108,o),
(457,121,o),
(457,129,qs),
(457,134,o),
(445,156,o),
(424,156,qs),
(398,156,o),
(375,133,o),
(373,128,qs),
(370,123,o),
(358,105,o),
(332,87,o),
(291,74,o),
(260,74,qs),
(186,74,o),
(122,155,o),
(122,224,qs),
(122,264,o),
(143,330,o),
(180,378,o),
(231,404,o),
(261,404,qs),
(288,404,o),
(327,385,o),
(354,358,o),
(370,329,o),
(375,319,qs),
(384,299,o),
(402,280,o),
(425,280,qs),
(441,280,o),
(461,289,o),
(471,301,o),
(475,315,o),
(475,320,qs),
(475,332,o),
(466,386,o),
(454,451,o),
(445,518,o),
(445,542,qs),
(445,565,o),
(454,594,o),
(466,609,o),
(480,614,o),
(486,614,qs),
(497,614,o),
(520,590,o),
(520,558,qs),
(520,537,o),
(520,459,o),
(521,365,o),
(521,267,o),
(522,185,o),
(522,131,o),
(522,129,qs),
(522,117,o),
(522,73,o),
(521,15,o),
(520,-52,o),
(519,-86,qs),
(518,-113,o),
(494,-144,o),
(457,-145,qs),
(432,-146,o),
(403,-159,o),
(403,-177,qs),
(403,-193,o),
(419,-202,o),
(429,-202,qs),
(654,-202,ls),
(664,-202,o),
(683,-190,o),
(683,-176,qs),
(683,-158,o),
(649,-142,o),
(624,-142,qs),
(610,-142,l),
(610,20,l),
(621,7,o),
(686,-11,o),
(732,-11,qs),
(777,-11,o),
(861,15,o),
(925,72,o),
(964,162,o),
(964,225,qs),
(964,266,o),
(944,353,o),
(894,425,o),
(809,471,o),
(745,471,qs),
(693,471,o),
(633,445,o),
(610,428,q),
(610,567,ls),
(610,591,o),
(604,636,o),
(579,671,o),
(529,692,o),
(485,692,qs),
(426,692,o),
(355,630,o),
(355,559,qs),
(355,515,o),
(376,448,o),
(377,436,q),
(350,460,o),
(296,482,o),
(259,482,qs),
(209,482,o),
(124,442,o),
(62,373,o),
(26,279,o),
(26,226,qs),
(26,177,o),
(57,93,o),
(114,30,o),
(196,-6,o),
(248,-6,qs),
(288,-6,o)
);
},
{
closed = 1;
nodes = (
(609,152,o),
(609,223,qs),
(609,260,o),
(627,323,o),
(660,367,o),
(705,392,o),
(733,392,qs),
(763,392,o),
(813,367,o),
(849,322,o),
(869,260,o),
(869,222,qs),
(869,189,o),
(849,132,o),
(813,90,o),
(763,67,o),
(733,67,qs),
(675,67,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
133 124 48 18 2 40
CALL[ ]	/* CallFunction */";
};
width = 992;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(614,335,o),
(654,384,o),
(706,410,o),
(736,410,qs),
(769,410,o),
(820,379,o),
(855,328,o),
(872,262,o),
(872,227,qs),
(872,183,o),
(847,117,o),
(805,72,o),
(751,49,o),
(721,49,qs),
(688,49,o),
(639,75,o),
(607,121,o),
(591,183,o),
(591,219,qs),
(591,264,o)
);
},
{
closed = 1;
nodes = (
(525,80,o),
(524,16,o),
(523,-53,o),
(522,-86,qs),
(522,-109,o),
(518,-134,o),
(506,-148,o),
(481,-154,o),
(460,-156,qs),
(453,-157,o),
(435,-158,o),
(420,-163,o),
(409,-173,o),
(409,-182,qs),
(409,-195,o),
(426,-202,o),
(432,-202,qs),
(657,-202,ls),
(666,-202,o),
(682,-192,o),
(682,-181,qs),
(682,-167,o),
(650,-154,o),
(627,-154,qs),
(592,-154,l),
(592,38,l),
(603,20,o),
(672,-11,o),
(721,-11,qs),
(760,-11,o),
(840,14,o),
(905,71,o),
(946,163,o),
(946,229,qs),
(946,268,o),
(928,354,o),
(882,425,o),
(804,471,o),
(744,471,qs),
(687,471,o),
(616,429,o),
(592,397,q),
(592,591,ls),
(592,592,o),
(589,624,o),
(568,662,o),
(523,692,o),
(481,692,qs),
(425,692,o),
(358,626,o),
(358,560,qs),
(358,539,o),
(365,498,o),
(373,465,o),
(380,441,o),
(380,436,q),
(351,462,o),
(299,482,o),
(265,482,qs),
(214,482,o),
(127,442,o),
(64,373,o),
(29,280,o),
(29,227,qs),
(29,178,o),
(60,93,o),
(117,30,o),
(197,-6,o),
(247,-6,qs),
(285,-6,o),
(346,14,o),
(393,45,o),
(427,84,o),
(437,103,qs),
(441,110,o),
(446,123,o),
(446,128,qs),
(446,133,o),
(437,150,o),
(420,150,qs),
(402,150,o),
(385,133,o),
(383,128,qs),
(378,119,o),
(361,94,o),
(332,71,o),
(288,56,o),
(256,56,qs),
(180,56,o),
(104,147,o),
(104,225,qs),
(104,268,o),
(127,341,o),
(169,393,o),
(228,422,o),
(264,422,qs),
(296,422,o),
(339,400,o),
(366,369,o),
(381,333,o),
(386,319,qs),
(391,304,o),
(406,286,o),
(424,286,qs),
(446,286,o),
(457,310,o),
(457,320,qs),
(457,333,o),
(448,385,o),
(436,446,o),
(427,512,o),
(427,540,qs),
(427,571,o),
(439,608,o),
(455,627,o),
(474,632,o),
(480,632,qs),
(493,632,o),
(522,609,o),
(522,571,qs),
(522,517,ls),
(522,512,o),
(522,468,o),
(523,403,o),
(524,325,o),
(525,247,o),
(525,178,o),
(525,155,qs),
(525,135,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
129 99 14 4 2 40
CALL[ ]	/* CallFunction */";
};
width = 977;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(566,644,o),
(515,692,o),
(475,692,qs),
(424,692,o),
(362,621,o),
(362,562,qs),
(362,541,o),
(369,500,o),
(377,465,o),
(384,440,o),
(384,436,q),
(354,464,o),
(303,482,o),
(273,482,qs),
(219,482,o),
(131,442,o),
(68,373,o),
(33,280,o),
(33,228,qs),
(33,178,o),
(64,93,o),
(120,30,o),
(198,-6,o),
(245,-6,qs),
(280,-6,o),
(337,13,o),
(380,45,o),
(411,83,o),
(421,103,qs),
(425,111,o),
(430,124,o),
(430,127,qs),
(430,130,o),
(424,140,o),
(415,140,qs),
(408,140,o),
(399,133,o),
(397,128,qs),
(388,111,o),
(365,75,o),
(332,45,o),
(285,26,o),
(251,26,qs),
(171,26,o),
(78,134,o),
(78,227,qs),
(78,276,o),
(105,359,o),
(156,419,o),
(227,452,o),
(271,452,qs),
(311,452,o),
(359,426,o),
(386,387,o),
(398,340,o),
(401,319,qs),
(402,314,o),
(409,296,o),
(420,296,qs),
(429,296,o),
(432,310,o),
(432,320,qs),
(432,336,o),
(422,383,o),
(411,438,o),
(401,502,o),
(401,537,qs),
(401,581,o),
(418,631,o),
(440,656,o),
(464,662,o),
(472,662,qs),
(494,662,o),
(526,633,o),
(526,592,qs),
(526,578,o),
(526,518,o),
(527,439,o),
(528,346,o),
(529,254,o),
(529,168,o),
(529,135,qs),
(529,95,o),
(528,40,o),
(527,-7,o),
(526,-54,o),
(526,-86,qs),
(526,-115,o),
(522,-149,o),
(510,-167,o),
(485,-173,o),
(464,-175,qs),
(438,-177,o),
(418,-183,o),
(418,-191,qs),
(418,-199,o),
(431,-202,o),
(436,-202,qs),
(661,-202,ls),
(669,-202,o),
(681,-195,o),
(681,-190,qs),
(681,-174,o),
(631,-174,qs),
(566,-174,l),
(566,68,l),
(572,55,o),
(597,27,o),
(633,4,o),
(678,-11,o),
(705,-11,qs),
(735,-11,o),
(810,13,o),
(876,70,o),
(920,165,o),
(920,236,qs),
(920,273,o),
(904,355,o),
(864,425,o),
(796,471,o),
(743,471,qs),
(680,471,o),
(592,403,o),
(566,346,q),
(566,591,ls)
);
},
{
closed = 1;
nodes = (
(595,357,o),
(645,413,o),
(708,440,o),
(740,440,qs),
(782,440,o),
(835,399,o),
(865,338,o),
(876,266,o),
(876,235,qs),
(876,174,o),
(844,91,o),
(794,41,o),
(733,19,o),
(704,19,qs),
(665,19,o),
(612,51,o),
(579,105,o),
(565,175,o),
(565,212,qs),
(565,271,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
139 129 120 24 2 40
CALL[ ]	/* CallFunction */";
};
width = 955;
}
);
note = c_p;
},
{
glyphname = c_t;
kernLeft = c;
kernRight = c_t;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(353,14,o),
(403,46,o),
(438,85,o),
(448,103,qs),
(451,108,o),
(457,121,o),
(457,129,qs),
(457,132,o),
(454,142,o),
(446,152,o),
(432,159,o),
(420,159,qs),
(408,159,o),
(389,151,o),
(376,140,o),
(369,130,o),
(368,128,qs),
(366,123,o),
(354,105,o),
(330,87,o),
(291,74,o),
(260,74,qs),
(186,74,o),
(122,155,o),
(122,224,qs),
(122,264,o),
(143,330,o),
(179,378,o),
(229,404,o),
(259,404,qs),
(286,404,o),
(327,384,o),
(355,356,o),
(371,328,o),
(375,319,qs),
(384,298,o),
(404,280,o),
(427,280,qs),
(442,280,o),
(461,289,o),
(472,301,o),
(475,315,o),
(475,320,qs),
(475,332,o),
(466,386,o),
(454,451,o),
(445,517,o),
(445,541,qs),
(445,565,o),
(454,593,o),
(466,609,o),
(479,614,o),
(484,614,qs),
(489,614,o),
(500,612,o),
(510,603,o),
(517,587,o),
(517,573,qs),
(517,471,o),
(515,268,o),
(515,165,qs),
(515,151,o),
(516,117,o),
(522,80,o),
(533,45,o),
(543,30,qs),
(570,-11,o),
(639,-11,qs),
(674,-11,o),
(723,18,o),
(755,59,o),
(769,103,o),
(769,117,qs),
(769,128,o),
(748,153,o),
(732,153,qs),
(719,153,o),
(702,143,o),
(690,128,o),
(684,110,o),
(681,102,qs),
(679,97,o),
(677,85,o),
(670,75,o),
(657,67,o),
(646,67,qs),
(636,67,o),
(622,72,o),
(613,90,o),
(608,124,o),
(608,152,qs),
(608,404,l),
(641,406,o),
(707,407,o),
(737,412,qs),
(746,414,o),
(771,430,o),
(771,449,qs),
(771,470,o),
(740,488,o),
(728,488,qs),
(723,488,o),
(690,487,o),
(653,485,o),
(619,484,o),
(613,484,q),
(612,502,o),
(612,519,qs),
(612,574,ls),
(612,597,o),
(594,640,o),
(560,673,o),
(513,692,o),
(483,692,qs),
(456,692,o),
(410,678,o),
(375,646,o),
(355,596,o),
(355,559,qs),
(355,515,o),
(371,462,o),
(377,436,q),
(350,460,o),
(296,482,o),
(259,482,qs),
(209,482,o),
(124,442,o),
(62,373,o),
(26,279,o),
(26,226,qs),
(26,177,o),
(57,93,o),
(114,30,o),
(196,-6,o),
(248,-6,qs),
(288,-6,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
66 20 1 40
CALL[ ]	/* CallFunction */";
};
width = 782;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(518,151,o),
(519,117,o),
(525,80,o),
(536,45,o),
(546,30,qs),
(573,-11,o),
(637,-11,qs),
(673,-11,o),
(724,18,o),
(757,59,o),
(772,103,o),
(772,117,qs),
(772,125,o),
(761,147,o),
(747,147,qs),
(735,147,o),
(721,139,o),
(713,126,o),
(708,110,o),
(705,102,qs),
(702,94,o),
(694,76,o),
(680,60,o),
(660,49,o),
(644,49,qs),
(609,49,o),
(590,101,o),
(590,152,qs),
(590,412,l),
(626,414,o),
(702,415,o),
(738,420,qs),
(747,422,o),
(765,435,o),
(765,449,qs),
(765,465,o),
(741,478,o),
(729,478,qs),
(723,478,o),
(685,477,o),
(640,475,o),
(600,474,o),
(593,474,q),
(593,575,ls),
(593,628,o),
(534,692,o),
(481,692,qs),
(425,692,o),
(358,626,o),
(358,560,qs),
(358,539,o),
(365,498,o),
(373,465,o),
(380,441,o),
(380,436,q),
(351,462,o),
(299,482,o),
(265,482,qs),
(214,482,o),
(127,442,o),
(64,373,o),
(29,280,o),
(29,227,qs),
(29,178,o),
(60,93,o),
(117,30,o),
(197,-6,o),
(247,-6,qs),
(285,-6,o),
(346,14,o),
(393,45,o),
(427,84,o),
(437,103,qs),
(441,110,o),
(446,123,o),
(446,128,qs),
(446,133,o),
(435,152,o),
(418,152,qs),
(400,152,o),
(382,133,o),
(380,128,qs),
(375,119,o),
(359,94,o),
(331,71,o),
(288,56,o),
(256,56,qs),
(180,56,o),
(104,147,o),
(104,225,qs),
(104,268,o),
(127,341,o),
(169,393,o),
(228,422,o),
(264,422,qs),
(296,422,o),
(339,400,o),
(366,369,o),
(381,333,o),
(386,319,qs),
(391,304,o),
(406,286,o),
(424,286,qs),
(446,286,o),
(457,310,o),
(457,320,qs),
(457,333,o),
(448,385,o),
(436,446,o),
(427,512,o),
(427,540,qs),
(427,571,o),
(439,608,o),
(455,627,o),
(474,632,o),
(480,632,qs),
(493,632,o),
(522,609,o),
(522,571,qs),
(518,165,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
111 71 1 40
CALL[ ]	/* CallFunction */";
};
width = 783;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(522,151,o),
(523,117,o),
(529,80,o),
(540,45,o),
(550,30,qs),
(577,-11,o),
(634,-11,qs),
(671,-11,o),
(725,18,o),
(760,59,o),
(776,103,o),
(776,117,qs),
(776,122,o),
(772,137,o),
(761,137,qs),
(750,137,o),
(744,118,o),
(739,102,qs),
(735,88,o),
(720,59,o),
(697,35,o),
(663,19,o),
(641,19,qs),
(612,19,o),
(581,45,o),
(566,84,o),
(564,131,o),
(564,152,qs),
(564,426,l),
(605,428,o),
(694,430,o),
(739,434,qs),
(748,435,o),
(756,444,o),
(756,449,qs),
(756,462,o),
(730,462,qs),
(723,462,o),
(676,461,o),
(622,459,o),
(573,458,o),
(564,458,q),
(564,486,o),
(565,510,qs),
(565,530,o),
(566,569,o),
(566,577,qs),
(566,640,o),
(521,692,o),
(478,692,qs),
(449,692,o),
(405,671,o),
(376,636,o),
(362,588,o),
(362,561,qs),
(362,541,o),
(369,500,o),
(377,465,o),
(384,440,o),
(384,436,q),
(354,464,o),
(303,482,o),
(273,482,qs),
(219,482,o),
(131,442,o),
(68,373,o),
(33,280,o),
(33,228,qs),
(33,178,o),
(64,93,o),
(120,30,o),
(198,-6,o),
(245,-6,qs),
(280,-6,o),
(337,13,o),
(380,45,o),
(411,83,o),
(421,103,qs),
(425,111,o),
(430,124,o),
(430,127,qs),
(430,130,o),
(424,140,o),
(415,140,qs),
(408,140,o),
(399,133,o),
(397,128,qs),
(388,111,o),
(365,75,o),
(332,45,o),
(285,26,o),
(251,26,qs),
(171,26,o),
(78,134,o),
(78,227,qs),
(78,276,o),
(105,359,o),
(156,419,o),
(227,452,o),
(271,452,qs),
(311,452,o),
(359,426,o),
(386,387,o),
(398,340,o),
(401,319,qs),
(402,314,o),
(409,296,o),
(420,296,qs),
(429,296,o),
(432,310,o),
(432,320,qs),
(432,336,o),
(422,383,o),
(411,439,o),
(401,503,o),
(401,538,qs),
(401,582,o),
(417,632,o),
(441,656,o),
(466,662,o),
(475,662,qs),
(488,662,o),
(508,655,o),
(520,634,o),
(526,597,o),
(526,567,qs),
(526,556,o),
(525,512,o),
(525,466,o),
(524,428,o),
(524,424,qs),
(522,165,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
123 80 1 40
CALL[ ]	/* CallFunction */";
};
width = 784;
}
);
note = c_t;
},
{
glyphname = f_b;
kernLeft = f;
kernRight = b;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(430,720,o),
(425,768,o),
(401,804,o),
(352,825,o),
(307,825,qs),
(229,825,o),
(137,761,o),
(89,662,o),
(76,545,o),
(76,491,qs),
(76,487,o),
(64,487,qs),
(41,487,ls),
(23,487,o),
(-1,472,o),
(-1,452,qs),
(-1,432,o),
(21,411,o),
(38,411,qs),
(64,411,ls),
(72,411,o),
(77,399,o),
(77,385,qs),
(77,300,ls),
(77,247,o),
(77,178,o),
(75,133,o),
(73,105,o),
(72,93,qs),
(70,81,o),
(61,74,o),
(53,72,qs),
(32,68,o),
(21,53,o),
(21,36,qs),
(21,18,o),
(41,0,o),
(55,0,qs),
(61,0,o),
(82,1,o),
(108,2,o),
(137,3,o),
(151,3,qs),
(174,3,o),
(225,1,o),
(243,1,qs),
(269,1,o),
(285,23,o),
(285,39,qs),
(285,76,o),
(256,76,qs),
(165,76,l),
(165,400,ls),
(165,411,o),
(183,411,qs),
(187,411,o),
(206,410,o),
(226,410,o),
(244,409,o),
(249,409,qs),
(260,409,o),
(288,427,o),
(288,447,qs),
(288,471,o),
(261,487,o),
(251,487,qs),
(173,487,ls),
(165,487,o),
(165,490,qs),
(165,525,o),
(169,615,o),
(192,696,o),
(241,751,o),
(287,751,qs),
(307,751,o),
(337,727,o),
(338,705,qs),
(338,685,o),
(339,635,o),
(339,585,o),
(339,541,o),
(339,526,qs),
(339,320,o),
(330,80,o),
(330,36,qs),
(330,10,o),
(349,-12,o),
(372,-12,qs),
(387,-12,o),
(406,-6,o),
(416,11,o),
(420,42,o),
(422,68,q),
(430,54,o),
(453,27,o),
(485,5,o),
(529,-9,o),
(559,-9,qs),
(594,-9,o),
(672,14,o),
(737,67,o),
(780,155,o),
(780,220,qs),
(780,258,o),
(762,342,o),
(722,412,o),
(654,458,o),
(605,458,qs),
(548,458,o),
(458,394,o),
(430,334,q),
(430,693,ls)
);
},
{
closed = 1;
nodes = (
(451,294,o),
(488,345,o),
(540,379,o),
(573,379,qs),
(596,379,o),
(637,362,o),
(668,326,o),
(686,268,o),
(686,228,qs),
(686,178,o),
(660,116,o),
(622,82,o),
(578,70,o),
(559,70,qs),
(519,70,o),
(469,90,o),
(441,126,o),
(431,176,o),
(431,206,qs),
(431,233,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
126 116 105 22 2 40
CALL[ ]	/* CallFunction */";
};
width = 808;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(426,720,o),
(421,768,o),
(399,804,o),
(352,825,o),
(310,825,qs),
(235,825,o),
(149,761,o),
(105,662,o),
(93,545,o),
(93,491,qs),
(93,486,o),
(89,478,o),
(81,478,qs),
(37,478,ls),
(19,478,o),
(-1,467,o),
(-1,452,qs),
(-1,438,o),
(17,420,o),
(34,420,qs),
(81,420,ls),
(89,420,o),
(94,408,o),
(94,394,qs),
(94,300,ls),
(94,267,o),
(94,197,o),
(93,135,o),
(91,87,o),
(89,75,qs),
(88,63,o),
(73,57,o),
(52,54,qs),
(47,53,o),
(35,52,o),
(26,47,o),
(20,34,o),
(20,21,qs),
(20,13,o),
(40,0,o),
(54,0,qs),
(65,0,o),
(120,3,o),
(147,3,qs),
(158,3,o),
(189,2,o),
(220,2,o),
(248,1,o),
(257,1,qs),
(283,1,o),
(299,17,o),
(299,24,qs),
(299,45,o),
(285,58,o),
(270,58,qs),
(161,58,l),
(161,409,ls),
(161,420,o),
(179,420,qs),
(183,420,o),
(202,419,o),
(222,419,o),
(240,418,o),
(245,418,qs),
(256,418,o),
(280,431,o),
(280,447,qs),
(280,465,o),
(257,478,o),
(247,478,qs),
(169,478,ls),
(161,478,o),
(161,484,qs),
(161,509,o),
(162,571,o),
(170,634,o),
(186,694,o),
(216,741,o),
(263,769,o),
(297,769,qs),
(324,769,o),
(354,734,o),
(355,705,qs),
(355,685,o),
(356,649,o),
(356,609,o),
(356,560,o),
(356,526,qs),
(356,320,o),
(347,80,o),
(347,36,qs),
(347,10,o),
(361,-12,o),
(379,-12,qs),
(390,-12,o),
(404,-6,o),
(412,11,o),
(416,42,o),
(418,68,q),
(426,54,o),
(449,27,o),
(481,5,o),
(525,-9,o),
(555,-9,qs),
(590,-9,o),
(668,14,o),
(733,67,o),
(776,155,o),
(776,220,qs),
(776,258,o),
(758,342,o),
(718,412,o),
(650,458,o),
(601,458,qs),
(544,458,o),
(454,394,o),
(426,334,q),
(426,693,ls)
);
},
{
closed = 1;
nodes = (
(453,304,o),
(499,363,o),
(559,397,o),
(592,397,qs),
(609,397,o),
(648,378,o),
(681,337,o),
(703,273,o),
(703,228,qs),
(703,172,o),
(673,104,o),
(628,65,o),
(576,52,o),
(555,52,qs),
(515,52,o),
(464,75,o),
(436,111,o),
(425,156,o),
(425,179,qs),
(425,224,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
132 122 111 22 2 40
CALL[ ]	/* CallFunction */";
};
width = 807;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(420,720,o),
(416,768,o),
(395,804,o),
(353,825,o),
(314,825,qs),
(245,825,o),
(168,761,o),
(129,662,o),
(119,545,o),
(117,491,qs),
(117,480,o),
(113,463,o),
(105,463,qs),
(31,463,ls),
(13,463,o),
(-1,460,o),
(-1,452,qs),
(-1,446,o),
(11,435,o),
(28,435,qs),
(105,435,ls),
(113,435,o),
(118,423,o),
(118,409,qs),
(118,300,ls),
(118,262,o),
(118,183,o),
(117,113,o),
(115,58,o),
(113,45,qs),
(112,39,o),
(107,32,o),
(94,28,o),
(70,25,o),
(50,24,qs),
(39,23,o),
(18,19,o),
(18,11,qs),
(18,3,o),
(38,0,o),
(52,0,qs),
(63,0,o),
(114,3,o),
(141,3,qs),
(152,3,o),
(183,2,o),
(214,2,o),
(242,1,o),
(251,1,qs),
(277,1,o),
(293,7,o),
(293,14,qs),
(293,28,o),
(264,28,qs),
(155,28,l),
(155,424,ls),
(155,435,o),
(173,435,qs),
(177,435,o),
(196,434,o),
(216,434,o),
(234,433,o),
(239,433,qs),
(250,433,o),
(268,439,o),
(268,447,qs),
(268,455,o),
(251,463,o),
(241,463,qs),
(163,463,ls),
(159,463,o),
(155,471,o),
(155,484,qs),
(155,512,o),
(156,580,o),
(165,650,o),
(184,716,o),
(219,768,o),
(272,799,o),
(311,799,qs),
(349,799,o),
(378,760,o),
(379,705,qs),
(379,685,o),
(379,649,o),
(380,609,o),
(380,560,o),
(380,526,qs),
(380,320,o),
(371,80,o),
(371,36,qs),
(371,10,o),
(378,-12,o),
(389,-12,qs),
(395,-12,o),
(402,-6,o),
(407,11,o),
(410,42,o),
(412,68,q),
(420,54,o),
(443,27,o),
(475,5,o),
(519,-9,o),
(549,-9,qs),
(584,-9,o),
(662,14,o),
(727,67,o),
(770,155,o),
(770,220,qs),
(770,258,o),
(752,342,o),
(712,412,o),
(644,458,o),
(595,458,qs),
(538,458,o),
(448,394,o),
(420,334,q),
(420,693,ls)
);
},
{
closed = 1;
nodes = (
(447,321,o),
(493,388,o),
(553,427,o),
(586,427,qs),
(607,427,o),
(657,407,o),
(699,361,o),
(727,285,o),
(727,228,qs),
(727,163,o),
(690,83,o),
(636,38,o),
(574,22,o),
(549,22,qs),
(509,22,o),
(458,50,o),
(430,95,o),
(419,151,o),
(419,179,qs),
(419,231,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
132 122 111 22 2 40
CALL[ ]	/* CallFunction */";
};
width = 805;
}
);
note = f_b;
},
{
glyphname = f_f;
kernLeft = f_f;
kernRight = f;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(59,-109,o),
(90,-108,o),
(122,-107,o),
(136,-107,qs),
(159,-107,o),
(222,-109,o),
(241,-109,qs),
(270,-109,o),
(300,-92,o),
(300,-71,qs),
(300,-45,o),
(274,-32,o),
(254,-32,qs),
(146,-32,l),
(146,392,ls),
(146,397,o),
(153,403,o),
(164,403,qs),
(185,403,o),
(212,404,o),
(234,405,o),
(253,406,o),
(267,406,q),
(268,404,o),
(269,378,o),
(270,339,o),
(270,293,o),
(271,252,o),
(271,220,o),
(271,215,qs),
(271,154,o),
(265,93,qs),
(264,82,o),
(247,74,o),
(221,72,qs),
(210,71,o),
(182,57,o),
(182,35,qs),
(182,12,o),
(205,0,o),
(223,0,qs),
(229,0,o),
(259,1,o),
(296,2,o),
(334,3,o),
(348,3,qs),
(359,3,o),
(390,2,o),
(421,2,o),
(450,1,o),
(459,1,qs),
(484,1,o),
(517,16,o),
(517,39,qs),
(517,63,o),
(493,78,o),
(471,78,qs),
(362,78,l),
(362,392,ls),
(362,397,o),
(368,403,o),
(380,403,qs),
(384,403,o),
(403,402,o),
(423,402,o),
(441,401,o),
(446,401,qs),
(453,401,o),
(470,404,o),
(483,413,o),
(492,430,o),
(492,444,qs),
(492,467,o),
(462,479,o),
(448,479,qs),
(370,479,ls),
(362,479,o),
(362,484,qs),
(362,511,o),
(365,572,o),
(375,631,o),
(394,685,o),
(427,727,o),
(476,751,o),
(511,751,qs),
(525,751,o),
(549,742,o),
(549,737,qs),
(549,732,o),
(543,726,o),
(534,716,qs),
(525,705,o),
(519,684,o),
(519,676,qs),
(519,661,o),
(547,627,o),
(578,627,qs),
(587,627,o),
(609,635,o),
(629,656,o),
(642,691,o),
(642,718,qs),
(642,732,o),
(630,769,o),
(602,802,o),
(552,825,o),
(515,825,qs),
(459,825,o),
(381,791,o),
(354,765,q),
(333,775,o),
(300,775,qs),
(213,775,o),
(114,724,o),
(65,642,o),
(52,541,o),
(52,491,qs),
(52,479,o),
(40,479,qs),
(27,479,ls),
(18,479,o),
(0,478,o),
(-13,470,o),
(-22,455,o),
(-22,441,qs),
(-22,418,o),
(7,403,o),
(24,403,qs),
(40,403,ls),
(48,403,o),
(53,401,o),
(53,399,qs),
(53,385,o),
(55,298,o),
(55,221,qs),
(55,202,o),
(54,134,o),
(53,62,o),
(50,-2,o),
(49,-17,qs),
(48,-37,o),
(26,-38,qs),
(20,-38,o),
(3,-42,o),
(-12,-50,o),
(-23,-64,o),
(-23,-75,qs),
(-23,-98,o),
(10,-110,o),
(28,-110,qs),
(34,-110,o)
);
},
{
closed = 1;
nodes = (
(303,700,o),
(307,698,q),
(284,637,o),
(268,535,o),
(268,479,q),
(154,479,ls),
(146,479,o),
(146,490,qs),
(146,541,o),
(155,619,o),
(186,673,o),
(245,700,o),
(295,700,qs),
(296,700,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
40 1 7 4 162 1 6 14 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 6 14 3 7 6 96 0 4 17 1 14 6 4 14 91 13 1 1 16 1 0 1 0 87 0 7 7 5 83 0 5 5 12 67 12 9 2 2 2 3 83 15 8 2 3 3 23 67 0 10 10 11 83 0 11 11 13 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 6 14 3 14 6 3 104 0 4 17 1 14 6 4 14 91 13 1 1 16 1 0 1 0 87 0 7 7 5 83 0 5 5 12 67 12 9 2 2 2 3 83 15 8 2 3 3 23 67 0 10 10 11 83 0 11 11 13 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 6 14 3 14 6 3 104 0 4 17 1 14 6 4 14 91 15 8 2 3 12 9 2 2 10 3 2 91 13 1 1 16 1 0 1 0 87 0 7 7 5 83 0 5 5 12 67 0 10 10 11 83 0 11 11 13 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 6 14 3 14 6 3 104 0 1 13 0 13 1 96 0 4 17 1 14 6 4 14 91 15 8 2 3 12 9 2 2 10 3 2 91 0 13 16 1 0 13 0 87 0 7 7 5 83 0 5 5 12 67 0 10 10 11 83 0 11 11 13 11 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 6 14 3 14 6 3 104 0 1 13 0 13 1 96 0 4 17 1 14 6 4 14 91 15 8 2 3 12 9 2 2 10 3 2 91 0 13 16 1 0 13 0 87 0 7 7 5 83 0 5 5 14 67 0 10 10 11 83 0 11 11 13 11 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
152 151 1 0 159 157 151 164 152 163 138 136 133 127 110 98 94 92 89 82 76 73 66 64 54 52 44 42 39 37 32 28 23 20 9 7 0 150 1 142 18 15
CALL[ ]	/* CallFunction */";
};
width = 517;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(372,757,o),
(333,775,o),
(301,775,qs),
(248,775,o),
(175,747,o),
(125,702,o),
(96,642,o),
(81,579,o),
(76,517,o),
(75,491,qs),
(75,484,o),
(71,473,o),
(63,473,qs),
(29,473,ls),
(11,473,o),
(-13,465,o),
(-13,445,qs),
(-13,428,o),
(9,415,o),
(26,415,qs),
(63,415,ls),
(71,415,o),
(76,412,o),
(76,409,qs),
(76,361,o),
(78,265,o),
(78,217,qs),
(78,199,o),
(77,135,o),
(76,65,o),
(73,2,o),
(72,-16,qs),
(71,-27,o),
(52,-35,o),
(28,-37,qs),
(23,-37,o),
(8,-40,o),
(-5,-46,o),
(-14,-56,o),
(-14,-65,qs),
(-14,-75,o),
(-5,-85,o),
(8,-90,o),
(23,-91,o),
(30,-91,qs),
(36,-91,o),
(59,-90,o),
(89,-89,o),
(120,-88,o),
(134,-88,qs),
(145,-88,o),
(176,-89,o),
(207,-89,o),
(235,-90,o),
(244,-90,qs),
(270,-90,o),
(296,-78,o),
(296,-61,qs),
(296,-40,o),
(272,-31,o),
(257,-31,qs),
(148,-31,l),
(148,404,ls),
(148,409,o),
(154,415,o),
(166,415,qs),
(170,415,o),
(189,414,o),
(209,414,o),
(227,413,o),
(232,413,qs),
(238,413,o),
(251,414,o),
(263,420,o),
(271,433,o),
(271,445,qs),
(271,464,o),
(244,473,o),
(234,473,qs),
(156,473,ls),
(148,473,o),
(148,484,qs),
(148,517,o),
(153,599,o),
(181,670,o),
(244,719,o),
(301,719,qs),
(317,719,o),
(335,708,o),
(342,702,q),
(387,743,l)
);
},
{
closed = 1;
nodes = (
(267,56,o),
(243,54,qs),
(238,54,o),
(223,51,o),
(210,45,o),
(201,35,o),
(201,26,qs),
(201,16,o),
(210,6,o),
(223,1,o),
(238,0,o),
(245,0,qs),
(251,0,o),
(274,1,o),
(304,2,o),
(335,3,o),
(349,3,qs),
(360,3,o),
(391,2,o),
(422,2,o),
(450,1,o),
(459,1,qs),
(485,1,o),
(511,13,o),
(511,30,qs),
(511,51,o),
(487,60,o),
(472,60,qs),
(363,60,l),
(363,404,ls),
(363,409,o),
(369,415,o),
(381,415,qs),
(385,415,o),
(404,414,o),
(424,414,o),
(442,413,o),
(447,413,qs),
(453,413,o),
(466,414,o),
(478,420,o),
(486,433,o),
(486,445,qs),
(486,464,o),
(459,473,o),
(449,473,qs),
(371,473,ls),
(363,473,o),
(363,484,qs),
(363,507,o),
(364,568,o),
(373,631,o),
(391,692,o),
(425,740,o),
(478,769,o),
(516,769,qs),
(541,769,o),
(571,748,o),
(571,742,qs),
(571,735,o),
(562,727,o),
(556,721,qs),
(548,714,o),
(541,694,o),
(541,686,qs),
(541,670,o),
(565,642,o),
(589,642,qs),
(607,642,o),
(643,676,o),
(643,718,qs),
(643,732,o),
(631,769,o),
(603,802,o),
(553,825,o),
(516,825,qs),
(463,825,o),
(390,790,o),
(340,733,o),
(311,661,o),
(296,587,o),
(291,517,o),
(290,491,qs),
(290,484,o),
(286,473,o),
(278,473,qs),
(244,473,ls),
(226,473,o),
(202,465,o),
(202,445,qs),
(202,428,o),
(224,415,o),
(241,415,qs),
(278,415,ls),
(286,415,o),
(291,412,o),
(291,409,qs),
(291,361,o),
(293,265,o),
(293,217,qs),
(293,145,o),
(287,75,qs),
(286,64,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
90 1 0 13 0 1 12 0 58 1 3 17 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 12 0 1 0 12 1 104 0 8 0 0 12 8 0 91 5 1 3 0 4 3 4 87 0 13 13 11 83 0 11 11 12 67 15 9 6 3 2 2 1 83 14 10 7 3 1 1 23 67 18 1 16 16 17 83 0 17 17 13 17 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 12 0 1 0 12 1 104 0 8 0 0 12 8 0 91 14 10 7 3 1 15 9 6 3 2 16 1 2 91 5 1 3 0 4 3 4 87 0 13 13 11 83 0 11 11 12 67 18 1 16 16 17 83 0 17 17 13 17 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 12 0 1 0 12 1 104 0 18 16 17 16 18 96 0 5 3 4 3 5 96 0 8 0 0 12 8 0 91 14 10 7 3 1 15 9 6 3 2 16 1 2 91 0 3 0 4 3 4 87 0 13 13 11 83 0 11 11 12 67 0 16 16 17 83 0 17 17 13 17 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 72 values pushed */
0 12 0 1 0 12 1 104 0 18 16 17 16 18 96 0 5 3 4 3 5 96 0 8 0 0 12 8 0 91 14 10 7 3 1 15 9 6 3 2 16 1 2 91 0 3 0 4 3 4 87 0 13 13 11 83 0 11 11 14 67 0 16 16 17 83 0 17 17 13 17 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
191 190 183 170 166 164 161 154 148 145 138 136 126 124 118 116 108 105 101 98 40 52 61 23 212 35 118 53 34 19 24
CALL[ ]	/* CallFunction */";
};
width = 511;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(293,26,o),
(274,24,qs),
(263,23,o),
(242,19,o),
(242,11,qs),
(242,3,o),
(262,0,o),
(276,0,qs),
(287,0,o),
(323,3,o),
(350,3,qs),
(361,3,o),
(392,2,o),
(423,2,o),
(451,1,o),
(459,1,qs),
(485,1,o),
(502,8,o),
(502,15,qs),
(502,30,o),
(473,30,qs),
(364,30,l),
(364,424,ls),
(364,429,o),
(370,435,o),
(382,435,qs),
(386,435,o),
(405,434,o),
(425,434,o),
(443,433,o),
(448,433,qs),
(459,433,o),
(477,439,o),
(477,447,qs),
(477,455,o),
(460,463,o),
(450,463,qs),
(372,463,ls),
(368,463,o),
(364,471,o),
(364,484,qs),
(364,510,o),
(365,577,o),
(374,647,o),
(393,714,o),
(429,767,o),
(483,799,o),
(523,799,qs),
(566,799,o),
(602,766,o),
(602,750,qs),
(602,743,o),
(595,735,o),
(587,729,qs),
(572,718,o),
(572,702,qs),
(572,685,o),
(591,667,o),
(605,667,qs),
(623,667,o),
(644,696,o),
(644,718,qs),
(644,732,o),
(632,769,o),
(604,802,o),
(554,825,o),
(517,825,qs),
(467,825,o),
(400,783,o),
(378,751,q),
(365,761,o),
(331,775,o),
(302,775,qs),
(257,775,o),
(193,741,o),
(150,687,o),
(125,621,o),
(112,558,o),
(108,505,o),
(108,491,qs),
(108,480,o),
(104,463,o),
(96,463,qs),
(32,463,ls),
(14,463,o),
(0,460,o),
(0,452,qs),
(0,446,o),
(12,435,o),
(29,435,qs),
(96,435,ls),
(104,435,o),
(109,423,o),
(109,409,qs),
(109,383,o),
(110,315,o),
(111,254,o),
(111,210,o),
(111,210,q),
(111,194,o),
(110,136,o),
(109,70,o),
(106,6,o),
(105,-15,qs),
(104,-26,o),
(73,-33,o),
(31,-36,qs),
(20,-37,o),
(-1,-41,o),
(-1,-49,qs),
(-1,-57,o),
(19,-60,o),
(33,-60,qs),
(44,-60,o),
(90,-57,o),
(117,-57,qs),
(140,-57,o),
(188,-59,o),
(205,-59,qs),
(231,-59,o),
(248,-52,o),
(248,-45,qs),
(248,-30,o),
(219,-30,qs),
(151,-30,l),
(151,424,ls),
(151,429,o),
(157,435,o),
(169,435,qs),
(173,435,o),
(210,434,o),
(258,434,o),
(306,433,o),
(321,433,q),
(322,381,o),
(324,269,o),
(324,221,qs),
(324,173,o),
(321,88,o),
(318,45,qs),
(317,32,o)
);
},
{
closed = 1;
nodes = (
(152,541,o),
(161,600,o),
(180,663,o),
(215,715,o),
(269,749,o),
(308,749,qs),
(331,749,o),
(357,738,o),
(365,730,q),
(350,702,o),
(332,636,o),
(323,567,o),
(321,496,o),
(321,463,q),
(159,463,ls),
(155,463,o),
(151,471,o),
(151,484,qs),
(151,494,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
70 1 15 5 150 1 7 15 41 0 2 11 0 36 1 1 12 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 7 15 4 15 7 4 104 0 5 0 15 7 5 15 91 0 1 0 2 1 2 87 0 8 8 6 83 0 6 6 12 67 10 3 2 0 0 4 83 14 9 2 4 4 23 67 0 11 11 12 83 13 1 12 12 13 12 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 7 15 4 15 7 4 104 0 5 0 15 7 5 15 91 14 9 2 4 10 3 2 0 11 4 0 91 0 1 0 2 1 2 87 0 8 8 6 83 0 6 6 12 67 0 11 11 12 83 13 1 12 12 13 12 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 7 15 4 15 7 4 104 0 5 0 15 7 5 15 91 14 9 2 4 10 3 2 0 11 4 0 91 0 1 0 2 1 2 87 0 8 8 6 83 0 6 6 14 67 0 11 11 12 83 13 1 12 12 13 12 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
154 152 145 143 133 131 130 123 120 118 115 108 104 101 93 91 82 80 74 72 68 66 58 55 51 48 131 35 102 16 18
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = f_f;
unicode = 64256;
},
{
glyphname = f_f_b;
kernLeft = f_f;
kernRight = b;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(904,14,o),
(969,67,o),
(1012,155,o),
(1012,221,qs),
(1012,259,o),
(995,342,o),
(954,412,o),
(886,458,o),
(835,458,qs),
(815,458,o),
(770,448,o),
(724,421,o),
(680,370,o),
(661,330,q),
(661,337,o),
(661,388,o),
(661,460,o),
(662,545,o),
(662,628,o),
(662,702,o),
(662,726,qs),
(662,744,o),
(655,779,o),
(628,807,o),
(576,825,o),
(532,825,qs),
(473,825,o),
(391,794,o),
(368,771,q),
(341,786,o),
(306,786,qs),
(248,786,o),
(167,763,o),
(112,722,o),
(80,667,o),
(63,604,o),
(58,535,o),
(57,502,qs),
(57,497,o),
(53,490,o),
(45,490,qs),
(32,490,ls),
(23,490,o),
(5,489,o),
(-8,481,o),
(-17,466,o),
(-17,452,qs),
(-17,429,o),
(12,414,o),
(29,414,qs),
(45,414,ls),
(54,414,o),
(58,411,o),
(58,406,qs),
(58,371,o),
(59,331,o),
(59,300,o),
(60,265,o),
(60,235,qs),
(60,214,o),
(59,146,o),
(58,74,o),
(55,10,o),
(54,-5,qs),
(54,-11,o),
(40,-19,o),
(22,-24,o),
(3,-26,o),
(-3,-26,qs),
(-8,-26,o),
(-25,-29,o),
(-41,-37,o),
(-52,-52,o),
(-52,-63,qs),
(-52,-85,o),
(-22,-98,o),
(-1,-98,qs),
(5,-98,o),
(43,-97,o),
(91,-96,o),
(137,-95,o),
(151,-95,qs),
(162,-95,o),
(177,-96,o),
(190,-96,o),
(203,-97,o),
(212,-97,qs),
(238,-97,o),
(271,-83,o),
(271,-59,qs),
(271,-34,o),
(247,-20,o),
(225,-20,qs),
(151,-20,l),
(151,403,ls),
(151,408,o),
(157,414,o),
(169,414,qs),
(172,414,o),
(203,414,o),
(243,415,o),
(282,415,o),
(292,415,q),
(293,405,o),
(294,388,o),
(295,366,o),
(296,333,o),
(296,308,qs),
(296,275,o),
(296,210,o),
(295,154,o),
(293,109,o),
(292,96,qs),
(291,85,o),
(283,74,o),
(272,72,qs),
(261,70,o),
(240,55,o),
(240,32,qs),
(240,20,o),
(260,0,o),
(274,0,qs),
(280,0,o),
(301,1,o),
(327,2,o),
(356,3,o),
(370,3,qs),
(393,3,o),
(432,1,o),
(450,1,qs),
(476,1,o),
(492,27,o),
(492,41,qs),
(492,76,o),
(463,76,qs),
(384,76,l),
(384,400,ls),
(384,411,o),
(402,411,qs),
(406,411,o),
(425,410,o),
(445,410,o),
(463,409,o),
(468,409,qs),
(479,409,o),
(507,427,o),
(507,447,qs),
(507,471,o),
(480,487,o),
(470,487,qs),
(392,487,ls),
(384,487,o),
(384,493,qs),
(384,544,o),
(391,637,o),
(418,709,o),
(470,751,o),
(517,751,qs),
(523,751,o),
(541,747,o),
(557,739,o),
(570,727,o),
(570,719,qs),
(571,699,o),
(572,676,o),
(573,653,o),
(573,624,o),
(573,597,qs),
(573,474,o),
(570,273,o),
(565,129,o),
(562,47,o),
(562,43,qs),
(562,13,o),
(580,-12,o),
(604,-12,qs),
(619,-12,o),
(637,-7,o),
(648,10,o),
(652,42,o),
(654,68,q),
(662,54,o),
(685,27,o),
(717,5,o),
(761,-9,o),
(791,-9,qs),
(826,-9,o)
);
},
{
closed = 1;
nodes = (
(706,92,o),
(675,126,o),
(661,168,o),
(661,188,qs),
(661,227,o),
(683,296,o),
(723,349,o),
(777,379,o),
(810,379,qs),
(863,379,o),
(918,303,o),
(918,228,qs),
(918,178,o),
(895,116,o),
(859,82,o),
(814,70,o),
(791,70,qs),
(755,70,o)
);
},
{
closed = 1;
nodes = (
(151,490,o),
(151,495,qs),
(151,538,o),
(156,617,o),
(184,677,o),
(245,712,o),
(301,712,qs),
(307,712,o),
(318,706,o),
(322,703,q),
(313,682,o),
(303,628,o),
(298,571,o),
(296,514,o),
(296,490,q),
(159,490,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
212 205 194 187 159 108 3 40
CALL[ ]	/* CallFunction */";
};
width = 1041;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(667,304,o),
(713,363,o),
(773,397,o),
(806,397,qs),
(823,397,o),
(862,378,o),
(895,337,o),
(917,273,o),
(917,228,qs),
(917,172,o),
(887,104,o),
(842,65,o),
(790,52,o),
(769,52,qs),
(729,52,o),
(678,75,o),
(650,111,o),
(639,156,o),
(639,179,qs),
(639,224,o)
);
},
{
closed = 1;
nodes = (
(640,720,o),
(635,768,o),
(613,804,o),
(566,825,o),
(524,825,qs),
(470,825,o),
(397,792,o),
(373,763,q),
(360,771,o),
(327,782,o),
(304,782,qs),
(251,782,o),
(178,754,o),
(128,709,o),
(99,649,o),
(84,586,o),
(79,524,o),
(78,498,qs),
(78,491,o),
(74,480,o),
(66,480,qs),
(32,480,ls),
(14,480,o),
(-10,472,o),
(-10,452,qs),
(-10,435,o),
(12,422,o),
(29,422,qs),
(66,422,ls),
(74,422,o),
(79,419,o),
(79,416,qs),
(79,368,o),
(81,272,o),
(81,224,qs),
(81,206,o),
(80,142,o),
(79,72,o),
(76,9,o),
(75,-9,qs),
(74,-20,o),
(35,-28,o),
(11,-30,qs),
(6,-30,o),
(-9,-33,o),
(-22,-39,o),
(-31,-49,o),
(-31,-58,qs),
(-31,-68,o),
(-22,-78,o),
(-9,-83,o),
(6,-84,o),
(13,-84,qs),
(19,-84,o),
(49,-83,o),
(86,-82,o),
(123,-81,o),
(137,-81,qs),
(160,-81,o),
(209,-83,o),
(227,-83,qs),
(253,-83,o),
(279,-71,o),
(279,-54,qs),
(279,-33,o),
(255,-24,o),
(240,-24,qs),
(151,-24,l),
(151,411,ls),
(151,416,o),
(157,422,o),
(169,422,qs),
(295,422,l),
(303,420,o),
(308,408,o),
(308,394,qs),
(308,300,ls),
(308,267,o),
(308,197,o),
(307,135,o),
(305,87,o),
(303,75,qs),
(302,63,o),
(287,57,o),
(266,54,qs),
(261,53,o),
(249,52,o),
(240,47,o),
(234,34,o),
(234,21,qs),
(234,13,o),
(254,0,o),
(268,0,qs),
(279,0,o),
(334,3,o),
(361,3,qs),
(372,3,o),
(403,2,o),
(434,2,o),
(462,1,o),
(471,1,qs),
(497,1,o),
(513,17,o),
(513,24,qs),
(513,45,o),
(499,58,o),
(484,58,qs),
(375,58,l),
(375,409,ls),
(375,420,o),
(393,420,qs),
(397,420,o),
(416,419,o),
(436,419,o),
(454,418,o),
(459,418,qs),
(470,418,o),
(494,431,o),
(494,447,qs),
(494,465,o),
(471,478,o),
(461,478,qs),
(383,478,ls),
(375,478,o),
(375,484,qs),
(375,509,o),
(376,571,o),
(384,634,o),
(400,694,o),
(430,741,o),
(477,769,o),
(511,769,qs),
(538,769,o),
(568,734,o),
(569,705,qs),
(569,685,o),
(570,649,o),
(570,609,o),
(570,560,o),
(570,526,qs),
(570,320,o),
(561,80,o),
(561,36,qs),
(561,10,o),
(575,-12,o),
(593,-12,qs),
(604,-12,o),
(618,-6,o),
(626,11,o),
(630,42,o),
(632,68,q),
(640,54,o),
(663,27,o),
(695,5,o),
(739,-9,o),
(769,-9,qs),
(804,-9,o),
(882,14,o),
(947,67,o),
(990,155,o),
(990,220,qs),
(990,258,o),
(972,342,o),
(932,412,o),
(864,458,o),
(815,458,qs),
(758,458,o),
(668,394,o),
(640,334,q),
(640,693,ls)
);
},
{
closed = 1;
nodes = (
(151,480,o),
(151,491,qs),
(151,524,o),
(156,606,o),
(184,677,o),
(247,726,o),
(304,726,qs),
(318,726,o),
(335,717,o),
(341,712,q),
(318,662,o),
(307,545,o),
(307,491,qs),
(307,486,o),
(303,478,o),
(295,478,qs),
(159,480,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
198 190 183 135 14 4 3 40
CALL[ ]	/* CallFunction */";
};
width = 1021;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(609,565,o),
(609,639,qs),
(609,687,o),
(604,757,o),
(585,803,o),
(547,825,o),
(513,825,qs),
(467,825,o),
(406,787,o),
(380,749,q),
(368,759,o),
(333,775,o),
(301,775,qs),
(256,775,o),
(193,740,o),
(150,686,o),
(125,620,o),
(112,557,o),
(108,504,o),
(108,491,qs),
(108,480,o),
(104,463,o),
(96,463,qs),
(32,463,ls),
(14,463,o),
(0,460,o),
(0,452,qs),
(0,446,o),
(12,435,o),
(29,435,qs),
(96,435,ls),
(109,435,o),
(109,412,qs),
(109,407,o),
(110,352,o),
(110,284,o),
(111,219,o),
(111,206,qs),
(111,192,o),
(110,136,o),
(109,71,o),
(106,6,o),
(105,-15,qs),
(104,-26,o),
(73,-33,o),
(31,-36,qs),
(20,-37,o),
(-1,-41,o),
(-1,-49,qs),
(-1,-57,o),
(19,-60,o),
(33,-60,qs),
(44,-60,o),
(90,-57,o),
(117,-57,qs),
(140,-57,o),
(188,-59,o),
(205,-59,qs),
(231,-59,o),
(248,-52,o),
(248,-45,qs),
(248,-30,o),
(219,-30,qs),
(151,-30,l),
(151,424,ls),
(151,429,o),
(157,435,o),
(169,435,qs),
(173,435,o),
(212,434,o),
(261,434,o),
(310,433,o),
(324,433,q),
(324,431,o),
(325,367,o),
(325,286,qs),
(325,285,o),
(325,253,o),
(325,204,o),
(324,146,o),
(323,93,o),
(322,52,o),
(321,45,qs),
(319,33,o),
(291,26,o),
(257,24,qs),
(246,23,o),
(225,19,o),
(225,11,qs),
(225,3,o),
(245,0,o),
(259,0,qs),
(270,0,o),
(321,3,o),
(348,3,qs),
(359,3,o),
(390,2,o),
(421,2,o),
(449,1,o),
(458,1,qs),
(484,1,o),
(500,7,o),
(500,14,qs),
(500,28,o),
(471,28,qs),
(362,28,l),
(362,424,ls),
(362,435,o),
(380,435,qs),
(384,435,o),
(403,434,o),
(423,434,o),
(441,433,o),
(446,433,qs),
(457,433,o),
(475,439,o),
(475,447,qs),
(475,455,o),
(458,463,o),
(448,463,qs),
(370,463,ls),
(365,463,o),
(362,474,o),
(362,494,qs),
(362,516,o),
(365,578,o),
(375,646,o),
(393,713,o),
(424,766,o),
(470,799,o),
(503,799,qs),
(527,799,o),
(553,780,o),
(565,749,o),
(567,707,o),
(567,683,qs),
(567,650,o),
(567,573,o),
(568,498,o),
(568,431,o),
(568,407,qs),
(568,338,o),
(565,241,o),
(562,158,o),
(559,76,o),
(559,24,qs),
(559,-12,o),
(578,-12,qs),
(589,-12,o),
(597,20,o),
(600,68,q),
(608,54,o),
(631,27,o),
(663,5,o),
(707,-9,o),
(737,-9,qs),
(772,-9,o),
(850,14,o),
(915,68,o),
(958,155,o),
(958,219,qs),
(958,257,o),
(940,341,o),
(899,412,o),
(834,458,o),
(787,458,qs),
(742,458,o),
(676,421,o),
(653,399,qs),
(627,373,o),
(607,340,q),
(607,417,o)
);
},
{
closed = 1;
nodes = (
(635,321,o),
(681,388,o),
(741,427,o),
(774,427,qs),
(795,427,o),
(845,407,o),
(887,361,o),
(915,285,o),
(915,228,qs),
(915,163,o),
(878,83,o),
(824,38,o),
(762,22,o),
(737,22,qs),
(697,22,o),
(646,50,o),
(618,95,o),
(607,151,o),
(607,179,qs),
(607,231,o)
);
},
{
closed = 1;
nodes = (
(155,463,o),
(151,471,o),
(151,484,qs),
(151,495,o),
(152,542,o),
(161,601,o),
(180,664,o),
(215,716,o),
(269,749,o),
(308,749,qs),
(333,749,o),
(360,736,o),
(368,727,q),
(338,663,o),
(323,529,o),
(323,463,q),
(159,463,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
197 192 186 176 163 118 3 40
CALL[ ]	/* CallFunction */";
};
width = 993;
}
);
note = f_f_b;
},
{
glyphname = f_f_h;
kernLeft = f_f;
kernRight = c_h;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(89,-109,o),
(123,-108,o),
(159,-107,o),
(173,-107,qs),
(196,-107,o),
(239,-109,o),
(259,-109,qs),
(284,-109,o),
(317,-94,o),
(317,-71,qs),
(317,-46,o),
(293,-32,o),
(271,-32,qs),
(173,-32,l),
(173,395,ls),
(173,400,o),
(179,408,o),
(191,408,qs),
(205,408,o),
(227,409,o),
(251,411,o),
(279,412,o),
(299,412,q),
(300,409,o),
(302,382,o),
(304,349,o),
(304,317,o),
(304,310,qs),
(304,281,o),
(303,209,o),
(302,142,o),
(300,91,o),
(300,83,qs),
(300,77,o),
(289,69,o),
(275,65,o),
(260,63,o),
(254,63,qs),
(214,63,o),
(214,32,qs),
(214,18,o),
(234,0,o),
(256,0,qs),
(267,0,o),
(318,3,o),
(345,3,qs),
(362,3,o),
(404,1,o),
(413,1,qs),
(436,1,o),
(456,18,o),
(456,30,qs),
(456,47,o),
(443,63,o),
(426,63,qs),
(392,63,l),
(392,400,ls),
(392,411,o),
(410,411,qs),
(419,411,o),
(453,409,o),
(462,409,qs),
(473,409,o),
(499,424,o),
(499,447,qs),
(499,464,o),
(478,479,o),
(464,479,qs),
(400,479,ls),
(392,479,o),
(392,484,qs),
(392,533,o),
(398,628,o),
(425,704,o),
(479,751,o),
(527,751,qs),
(556,751,o),
(556,725,qs),
(556,721,o),
(556,681,o),
(556,623,o),
(557,556,o),
(557,494,o),
(557,446,o),
(557,436,qs),
(557,389,o),
(555,288,o),
(552,197,o),
(550,124,o),
(550,104,qs),
(550,87,o),
(543,65,o),
(532,64,qs),
(521,63,o),
(512,45,o),
(512,36,qs),
(512,19,o),
(533,0,o),
(551,0,qs),
(573,0,o),
(597,3,o),
(620,3,qs),
(643,3,o),
(697,0,o),
(726,0,qs),
(740,0,o),
(752,20,o),
(752,30,qs),
(752,47,o),
(730,64,o),
(704,64,qs),
(641,64,l),
(641,172,ls),
(641,203,o),
(657,267,o),
(691,318,o),
(745,351,o),
(783,351,qs),
(804,351,o),
(831,336,o),
(848,315,o),
(855,291,o),
(856,283,qs),
(858,265,o),
(860,218,o),
(862,172,o),
(862,133,o),
(862,123,qs),
(862,114,o),
(861,89,o),
(860,63,o),
(859,39,o),
(859,32,qs),
(859,12,o),
(848,0,o),
(840,0,qs),
(825,0,o),
(807,-12,o),
(807,-34,qs),
(807,-45,o),
(821,-61,o),
(838,-61,qs),
(852,-61,o),
(906,-58,o),
(928,-58,qs),
(938,-58,o),
(967,-59,o),
(997,-60,o),
(1023,-61,o),
(1031,-61,qs),
(1046,-61,o),
(1060,-43,o),
(1060,-34,qs),
(1060,-14,o),
(1036,0,o),
(1006,0,qs),
(953,0,l),
(953,176,ls),
(953,215,o),
(952,267,o),
(949,293,qs),
(947,311,o),
(935,358,o),
(905,400,o),
(854,428,o),
(813,428,qs),
(759,428,o),
(672,379,o),
(646,331,q),
(646,415,o),
(646,533,o),
(647,613,o),
(647,662,o),
(648,691,o),
(648,706,o),
(648,713,qs),
(648,726,o),
(638,764,o),
(608,800,o),
(555,825,o),
(512,825,qs),
(470,825,o),
(396,797,o),
(373,766,q),
(359,771,o),
(327,775,o),
(317,775,qs),
(236,775,o),
(143,724,o),
(95,643,o),
(81,541,o),
(79,491,qs),
(79,486,o),
(75,479,o),
(67,479,qs),
(20,479,ls),
(11,479,o),
(-7,478,o),
(-20,470,o),
(-29,455,o),
(-29,441,qs),
(-29,418,o),
(0,403,o),
(17,403,qs),
(67,403,ls),
(76,403,o),
(80,400,o),
(80,397,qs),
(80,374,o),
(81,342,o),
(81,306,o),
(82,259,o),
(82,221,qs),
(82,202,o),
(81,134,o),
(80,62,o),
(77,-2,o),
(76,-17,qs),
(75,-37,o),
(53,-38,qs),
(46,-38,o),
(29,-42,o),
(14,-51,o),
(4,-65,o),
(4,-75,qs),
(4,-95,o),
(33,-110,o),
(55,-110,qs),
(61,-110,o)
);
},
{
closed = 1;
nodes = (
(331,702,o),
(335,702,q),
(320,664,o),
(307,556,o),
(307,479,q),
(181,479,ls),
(173,479,o),
(173,484,qs),
(173,529,o),
(180,609,o),
(209,669,o),
(268,703,o),
(321,703,qs),
(325,703,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
235 229 46 0 2 40
CALL[ ]	/* CallFunction */";
};
width = 1040;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(401,789,o),
(379,759,q),
(350,775,o),
(310,775,qs),
(260,775,o),
(189,747,o),
(141,702,o),
(112,642,o),
(97,579,o),
(92,517,o),
(91,491,qs),
(91,484,o),
(87,473,o),
(79,473,qs),
(25,473,ls),
(7,473,o),
(-17,465,o),
(-17,445,qs),
(-17,428,o),
(5,415,o),
(22,415,qs),
(79,415,ls),
(87,415,o),
(92,412,o),
(92,409,qs),
(92,361,o),
(94,265,o),
(94,217,qs),
(94,199,o),
(93,135,o),
(92,65,o),
(89,2,o),
(88,-16,qs),
(87,-27,o),
(68,-35,o),
(44,-37,qs),
(39,-37,o),
(24,-40,o),
(11,-46,o),
(2,-56,o),
(2,-65,qs),
(2,-75,o),
(11,-85,o),
(24,-90,o),
(39,-91,o),
(46,-91,qs),
(52,-91,o),
(75,-90,o),
(105,-89,o),
(136,-88,o),
(150,-88,qs),
(161,-88,o),
(192,-89,o),
(223,-89,o),
(251,-90,o),
(260,-90,qs),
(286,-90,o),
(312,-78,o),
(312,-61,qs),
(312,-40,o),
(288,-31,o),
(273,-31,qs),
(164,-31,l),
(164,404,ls),
(164,409,o),
(170,415,o),
(182,415,qs),
(186,415,o),
(205,414,o),
(225,414,o),
(243,413,o),
(248,413,qs),
(255,413,o),
(270,415,o),
(277,420,q),
(304,420,ls),
(312,420,o),
(317,408,o),
(317,394,qs),
(317,300,ls),
(317,268,o),
(317,191,o),
(316,122,o),
(314,71,o),
(313,65,qs),
(312,54,o),
(281,48,o),
(260,44,qs),
(255,43,o),
(242,43,o),
(231,40,o),
(223,31,o),
(223,21,qs),
(223,13,o),
(248,0,o),
(262,0,qs),
(273,0,o),
(324,3,o),
(351,3,qs),
(362,3,o),
(374,2,o),
(383,2,o),
(393,1,o),
(402,1,qs),
(428,1,o),
(445,17,o),
(445,24,qs),
(445,40,o),
(430,48,o),
(415,48,qs),
(384,48,l),
(384,409,ls),
(384,420,o),
(402,420,qs),
(406,420,o),
(425,419,o),
(445,419,o),
(463,418,o),
(468,418,qs),
(479,418,o),
(502,430,o),
(502,447,qs),
(502,461,o),
(480,473,o),
(470,473,qs),
(392,473,ls),
(384,473,o),
(384,484,qs),
(384,506,o),
(385,566,o),
(393,629,o),
(410,691,o),
(441,739,o),
(488,769,o),
(523,769,qs),
(569,769,o),
(569,725,qs),
(569,574,ls),
(569,512,o),
(570,436,qs),
(570,387,o),
(568,283,o),
(565,188,o),
(563,113,o),
(563,92,qs),
(563,69,o),
(551,54,o),
(537,52,q),
(534,50,o),
(524,50,o),
(515,47,o),
(508,35,o),
(508,21,qs),
(508,14,o),
(525,0,o),
(543,0,qs),
(565,0,o),
(589,3,o),
(612,3,qs),
(635,3,o),
(699,0,o),
(728,0,qs),
(736,0,o),
(751,18,o),
(751,24,qs),
(751,44,o),
(722,52,o),
(706,52,qs),
(633,52,l),
(633,180,ls),
(633,214,o),
(651,282,o),
(689,336,o),
(745,369,o),
(783,369,qs),
(809,369,o),
(841,351,o),
(860,324,o),
(868,295,o),
(869,285,qs),
(871,267,o),
(873,219,o),
(875,173,o),
(875,133,o),
(875,123,qs),
(875,114,o),
(875,85,o),
(874,55,o),
(873,28,o),
(872,20,qs),
(872,3,o),
(870,-9,o),
(867,-11,q),
(856,-13,o),
(833,-14,o),
(813,-19,o),
(800,-30,o),
(800,-40,qs),
(800,-45,o),
(814,-61,o),
(831,-61,qs),
(845,-61,o),
(898,-58,o),
(920,-58,qs),
(930,-58,o),
(958,-59,o),
(986,-60,o),
(1011,-61,o),
(1019,-61,qs),
(1034,-61,o),
(1048,-46,o),
(1048,-40,qs),
(1048,-20,o),
(1014,-12,o),
(994,-12,qs),
(945,-12,l),
(945,176,ls),
(945,215,o),
(944,267,o),
(941,293,qs),
(939,311,o),
(927,358,o),
(897,400,o),
(846,428,o),
(805,428,qs),
(751,428,o),
(665,375,o),
(639,327,q),
(639,410,o),
(639,529,o),
(639,611,o),
(640,661,o),
(640,692,o),
(640,707,o),
(640,713,qs),
(640,726,o),
(632,764,o),
(606,800,o),
(557,825,o),
(515,825,qs),
(467,825,o)
);
},
{
closed = 1;
nodes = (
(164,473,o),
(164,484,qs),
(164,517,o),
(169,599,o),
(197,670,o),
(260,719,o),
(317,719,qs),
(328,719,o),
(345,713,o),
(351,708,q),
(331,660,o),
(319,553,o),
(318,506,qs),
(318,491,o),
(313,473,o),
(304,473,qs),
(172,473,ls)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 6 values pushed */
249 241 193 0 2 40
CALL[ ]	/* CallFunction */";
};
width = 1029;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(450,811,o),
(420,789,o),
(397,758,o),
(387,742,q),
(374,754,o),
(337,775,o),
(300,775,qs),
(255,775,o),
(193,740,o),
(150,686,o),
(125,620,o),
(112,557,o),
(108,504,o),
(108,491,qs),
(108,480,o),
(104,463,o),
(96,463,qs),
(32,463,ls),
(14,463,o),
(0,460,o),
(0,452,qs),
(0,446,o),
(12,435,o),
(29,435,qs),
(96,435,ls),
(104,435,o),
(109,423,o),
(109,409,qs),
(109,383,o),
(110,315,o),
(111,254,o),
(111,210,o),
(111,210,q),
(111,194,o),
(110,136,o),
(109,70,o),
(106,6,o),
(105,-15,qs),
(104,-26,o),
(73,-33,o),
(31,-36,qs),
(20,-37,o),
(-1,-41,o),
(-1,-49,qs),
(-1,-57,o),
(19,-60,o),
(33,-60,qs),
(44,-60,o),
(90,-57,o),
(117,-57,qs),
(140,-57,o),
(188,-59,o),
(205,-59,qs),
(231,-59,o),
(248,-52,o),
(248,-45,qs),
(248,-30,o),
(219,-30,qs),
(151,-30,l),
(151,424,ls),
(151,429,o),
(157,435,o),
(169,435,qs),
(173,435,o),
(222,434,o),
(279,434,o),
(329,433,o),
(335,433,q),
(335,430,o),
(335,420,o),
(336,391,o),
(336,334,o),
(336,283,qs),
(336,180,o),
(334,67,o),
(331,45,qs),
(330,40,o),
(327,33,o),
(315,29,o),
(290,25,o),
(268,24,qs),
(257,23,o),
(236,19,o),
(236,11,qs),
(236,3,o),
(256,0,o),
(270,0,qs),
(281,0,o),
(332,3,o),
(359,3,qs),
(370,3,o),
(384,2,o),
(396,2,o),
(408,1,o),
(417,1,qs),
(443,1,o),
(459,7,o),
(459,14,qs),
(459,28,o),
(430,28,qs),
(373,28,l),
(373,424,ls),
(373,435,o),
(391,435,qs),
(395,435,o),
(420,434,o),
(448,434,o),
(472,433,o),
(477,433,qs),
(488,433,o),
(506,439,o),
(506,447,qs),
(506,455,o),
(489,463,o),
(479,463,qs),
(381,463,ls),
(376,463,o),
(373,475,o),
(373,495,qs),
(373,520,o),
(376,584,o),
(386,652,o),
(405,717,o),
(437,768,o),
(484,799,o),
(517,799,qs),
(538,799,o),
(565,787,o),
(581,766,o),
(587,739,o),
(587,725,qs),
(587,574,ls),
(587,512,o),
(588,436,qs),
(588,384,o),
(586,274,o),
(584,174,o),
(582,94,o),
(581,72,qs),
(580,49,o),
(569,34,o),
(555,32,qs),
(548,31,o),
(528,29,o),
(510,26,o),
(497,18,o),
(497,11,qs),
(497,0,o),
(531,0,qs),
(553,0,o),
(577,3,o),
(600,3,qs),
(623,3,o),
(687,0,o),
(716,0,qs),
(724,0,o),
(736,8,o),
(736,14,qs),
(736,23,o),
(710,32,o),
(694,32,qs),
(621,32,l),
(621,193,ls),
(621,233,o),
(643,308,o),
(685,365,o),
(745,399,o),
(783,399,qs),
(816,399,o),
(856,375,o),
(877,340,o),
(885,302,o),
(887,288,qs),
(889,270,o),
(891,221,o),
(893,174,o),
(893,133,o),
(893,123,qs),
(893,112,o),
(893,78,o),
(892,42,o),
(891,9,o),
(890,0,qs),
(888,-17,o),
(875,-29,o),
(855,-31,qs),
(844,-32,o),
(822,-34,o),
(802,-39,o),
(790,-45,o),
(790,-50,qs),
(790,-61,o),
(821,-61,qs),
(835,-61,o),
(886,-58,o),
(908,-58,qs),
(929,-58,o),
(986,-61,o),
(1002,-61,qs),
(1031,-61,o),
(1031,-50,qs),
(1031,-40,o),
(997,-32,o),
(977,-32,qs),
(933,-32,l),
(933,176,ls),
(933,215,o),
(932,267,o),
(929,293,qs),
(927,311,o),
(915,358,o),
(885,400,o),
(834,428,o),
(793,428,qs),
(739,428,o),
(653,375,o),
(627,327,q),
(627,452,o),
(627,598,o),
(628,676,o),
(628,705,o),
(628,713,qs),
(628,726,o),
(624,764,o),
(603,800,o),
(559,825,o),
(519,825,qs),
(491,825,o)
);
},
{
closed = 1;
nodes = (
(155,463,o),
(151,471,o),
(151,484,qs),
(151,492,o),
(152,538,o),
(161,597,o),
(179,661,o),
(213,714,o),
(266,749,o),
(304,749,qs),
(333,749,o),
(365,730,o),
(374,716,q),
(348,654,o),
(334,526,o),
(334,463,q),
(159,463,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
233 228 27 0 2 40
CALL[ ]	/* CallFunction */";
};
width = 1013;
}
);
note = f_f_h;
},
{
glyphname = f_f_i;
kernLeft = f_f;
kernRight = f_f_i;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(616,487,o),
(593,487,qs),
(368,487,ls),
(363,487,o),
(360,490,o),
(360,498,qs),
(360,526,o),
(367,611,o),
(393,690,o),
(441,747,o),
(483,747,qs),
(506,747,o),
(533,738,o),
(548,723,o),
(552,706,o),
(552,697,qs),
(552,677,o),
(539,658,o),
(524,644,o),
(512,631,o),
(512,618,qs),
(512,601,o),
(537,570,o),
(574,570,qs),
(595,570,o),
(622,585,o),
(638,609,o),
(645,640,o),
(645,656,qs),
(645,708,o),
(620,774,o),
(579,812,o),
(529,825,o),
(505,825,qs),
(452,825,o),
(378,799,o),
(352,776,q),
(341,781,o),
(315,785,o),
(299,785,qs),
(241,785,o),
(160,761,o),
(105,720,o),
(73,664,o),
(57,601,o),
(52,533,o),
(52,501,qs),
(52,489,o),
(40,489,qs),
(27,489,ls),
(5,489,o),
(-22,476,o),
(-22,450,qs),
(-22,427,o),
(7,413,o),
(24,413,qs),
(40,413,ls),
(48,413,o),
(53,411,o),
(53,409,qs),
(53,361,o),
(55,275,o),
(55,227,qs),
(55,211,o),
(54,146,o),
(53,74,o),
(50,8,o),
(49,-7,qs),
(48,-18,o),
(39,-32,o),
(26,-33,qs),
(21,-33,o),
(4,-37,o),
(-12,-45,o),
(-23,-59,o),
(-23,-70,qs),
(-23,-93,o),
(9,-105,o),
(28,-105,qs),
(34,-105,o),
(62,-104,o),
(96,-103,o),
(132,-102,o),
(146,-102,qs),
(169,-102,o),
(193,-104,o),
(211,-104,qs),
(237,-104,o),
(270,-89,o),
(270,-66,qs),
(270,-42,o),
(247,-27,o),
(224,-27,qs),
(146,-27,l),
(146,402,ls),
(146,415,o),
(166,415,qs),
(192,415,o),
(234,414,o),
(269,414,q),
(269,411,o),
(270,388,o),
(271,356,o),
(272,318,o),
(272,300,qs),
(272,270,o),
(272,200,o),
(270,136,o),
(268,86,o),
(267,77,qs),
(265,66,o),
(261,57,o),
(255,56,qs),
(244,54,o),
(214,42,o),
(214,27,qs),
(214,10,o),
(237,0,o),
(257,0,qs),
(268,0,o),
(319,3,o),
(346,3,qs),
(369,3,o),
(408,1,o),
(426,1,qs),
(452,1,o),
(471,15,o),
(471,30,qs),
(471,60,o),
(439,60,qs),
(367,60,l),
(366,64,o),
(358,123,o),
(358,157,qs),
(358,163,o),
(358,203,o),
(359,255,o),
(359,313,o),
(360,362,o),
(360,397,o),
(360,400,qs),
(360,411,o),
(378,411,qs),
(383,411,o),
(405,410,o),
(430,410,o),
(456,409,o),
(464,409,qs),
(468,409,o),
(485,410,o),
(504,410,o),
(519,411,o),
(521,411,qs),
(532,411,o),
(538,399,o),
(539,394,qs),
(540,387,o),
(541,334,o),
(542,263,o),
(543,183,o),
(543,149,qs),
(543,86,o),
(541,5,o),
(539,-12,qs),
(538,-22,o),
(521,-31,o),
(498,-33,qs),
(481,-35,o),
(481,-58,qs),
(481,-79,o),
(516,-94,o),
(555,-94,qs),
(720,-94,ls),
(730,-94,o),
(750,-82,o),
(750,-63,qs),
(750,-46,o),
(725,-31,o),
(702,-31,qs),
(628,-31,l),
(628,-21,o),
(627,8,o),
(627,38,o),
(627,66,o),
(627,77,qs),
(627,112,o),
(629,204,o),
(630,300,o),
(632,393,o),
(632,428,qs),
(632,454,o)
);
},
{
closed = 1;
nodes = (
(146,487,o),
(146,494,qs),
(146,548,o),
(155,629,o),
(186,683,o),
(245,711,o),
(295,711,qs),
(300,711,o),
(304,709,q),
(284,659,o),
(271,558,o),
(271,487,q),
(154,487,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
153 1 15 12 194 1 14 17 34 1 3 2 122 1 0 4 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 14 17 11 17 14 11 104 0 12 0 17 14 12 17 91 9 6 2 0 8 7 2 1 0 1 87 0 15 15 13 83 0 13 13 12 67 10 5 2 2 2 11 83 19 18 16 3 11 11 23 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 14 17 11 17 14 11 104 0 12 0 17 14 12 17 91 19 18 16 3 11 10 5 2 2 3 11 2 91 9 6 2 0 8 7 2 1 0 1 87 0 15 15 13 83 0 13 13 12 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 14 17 11 17 14 11 104 0 12 0 17 14 12 17 91 19 18 16 3 11 10 5 2 2 3 11 2 91 0 1 7 0 1 79 9 6 2 0 8 1 7 0 7 87 0 15 15 13 83 0 13 13 12 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
0 14 17 11 17 14 11 104 0 12 0 17 14 12 17 91 19 18 16 3 11 10 5 2 2 3 11 2 91 0 1 7 0 1 79 9 6 2 0 8 1 7 0 7 87 0 15 15 13 83 0 13 13 14 67 0 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
191 191 191 203 191 202 197 195 189 186 180 178 167 165 157 155 151 149 142 139 135 132 119 118 112 105 104 102 98 96 94 90 72 64 61 59 48 36 52 42 20 17
CALL[ ]	/* CallFunction */";
};
width = 726;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(620,478,o),
(601,478,qs),
(369,478,ls),
(364,478,o),
(361,484,o),
(361,498,qs),
(361,518,o),
(363,574,o),
(372,633,o),
(388,691,o),
(416,737,o),
(458,765,o),
(488,765,qs),
(512,765,o),
(545,753,o),
(565,733,o),
(574,709,o),
(574,697,qs),
(574,677,o),
(561,658,o),
(546,644,o),
(534,631,o),
(534,618,qs),
(534,601,o),
(558,575,o),
(587,575,qs),
(605,575,o),
(627,588,o),
(641,611,o),
(646,640,o),
(646,656,qs),
(646,708,o),
(621,774,o),
(580,812,o),
(530,825,o),
(506,825,qs),
(455,825,o),
(384,794,o),
(361,768,q),
(350,774,o),
(321,781,o),
(301,781,qs),
(248,781,o),
(175,753,o),
(125,708,o),
(96,648,o),
(81,585,o),
(76,523,o),
(75,497,qs),
(75,490,o),
(71,479,o),
(63,479,qs),
(29,479,ls),
(11,479,o),
(-13,471,o),
(-13,451,qs),
(-13,434,o),
(9,421,o),
(26,421,qs),
(63,421,ls),
(71,421,o),
(76,418,o),
(76,415,qs),
(76,367,o),
(78,271,o),
(78,223,qs),
(78,205,o),
(77,141,o),
(76,71,o),
(73,8,o),
(72,-10,qs),
(71,-21,o),
(52,-32,o),
(28,-34,qs),
(23,-34,o),
(8,-37,o),
(-5,-43,o),
(-14,-53,o),
(-14,-62,qs),
(-14,-72,o),
(-5,-82,o),
(8,-87,o),
(23,-88,o),
(30,-88,qs),
(36,-88,o),
(59,-87,o),
(89,-86,o),
(120,-85,o),
(134,-85,qs),
(145,-85,o),
(176,-86,o),
(207,-86,o),
(235,-87,o),
(244,-87,qs),
(270,-87,o),
(296,-75,o),
(296,-58,qs),
(296,-37,o),
(272,-28,o),
(257,-28,qs),
(148,-28,l),
(148,410,ls),
(148,415,o),
(154,421,o),
(166,421,qs),
(281,421,l),
(289,420,o),
(294,408,o),
(294,394,qs),
(294,300,ls),
(294,267,o),
(294,193,o),
(293,127,o),
(291,76,o),
(289,65,qs),
(287,54,o),
(279,47,o),
(256,44,qs),
(245,42,o),
(219,35,o),
(219,21,qs),
(219,5,o),
(244,0,o),
(258,0,qs),
(269,0,o),
(320,3,o),
(347,3,qs),
(358,3,o),
(389,2,o),
(420,2,o),
(448,1,o),
(457,1,qs),
(483,1,o),
(501,12,o),
(501,24,qs),
(501,48,o),
(470,48,qs),
(368,48,l),
(367,53,o),
(359,117,o),
(359,155,qs),
(359,162,o),
(359,203,o),
(360,257,o),
(360,317,o),
(361,369,o),
(361,406,o),
(361,409,qs),
(361,420,o),
(379,420,qs),
(384,420,o),
(406,419,o),
(431,419,o),
(457,418,o),
(465,418,qs),
(471,418,o),
(495,419,o),
(520,419,o),
(541,420,o),
(543,420,qs),
(554,420,o),
(560,409,o),
(561,403,qs),
(562,396,o),
(563,342,o),
(564,268,o),
(565,183,o),
(565,145,qs),
(565,88,o),
(563,8,o),
(560,-12,q),
(560,-24,o),
(544,-30,o),
(518,-33,qs),
(506,-35,o),
(484,-43,o),
(484,-57,qs),
(484,-65,o),
(497,-74,o),
(518,-78,o),
(544,-79,o),
(556,-79,qs),
(717,-79,ls),
(727,-79,o),
(747,-72,o),
(747,-57,qs),
(747,-43,o),
(722,-31,o),
(699,-31,qs),
(629,-31,l),
(629,-21,o),
(628,8,o),
(628,38,o),
(628,66,o),
(628,77,qs),
(628,112,o),
(630,204,o),
(631,300,o),
(633,393,o),
(633,428,qs),
(633,451,o)
);
},
{
closed = 1;
nodes = (
(290,478,o),
(281,478,qs),
(156,478,l),
(152,479,o),
(148,483,o),
(148,490,qs),
(148,523,o),
(153,605,o),
(181,676,o),
(244,725,o),
(301,725,qs),
(310,725,o),
(323,721,o),
(328,718,q),
(306,670,o),
(295,558,o),
(294,509,qs),
(294,494,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
161 1 14 11 204 1 13 16 37 1 3 2 129 29 2 0 4 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 13 16 10 16 13 10 104 0 11 0 16 13 11 16 91 8 6 2 0 7 1 1 0 1 87 0 14 14 12 83 0 12 12 12 67 9 5 2 2 2 10 83 17 15 2 10 10 23 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 13 16 10 16 13 10 104 0 11 0 16 13 11 16 91 17 15 2 10 9 5 2 2 3 10 2 91 8 6 2 0 7 1 1 0 1 87 0 14 14 12 83 0 12 12 12 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 13 16 10 16 13 10 104 0 11 0 16 13 11 16 91 17 15 2 10 9 5 2 2 3 10 2 91 0 1 7 0 1 79 8 6 2 0 0 7 0 7 87 0 14 14 12 83 0 12 12 12 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
0 13 16 10 16 13 10 104 0 11 0 16 13 11 16 91 17 15 2 10 9 5 2 2 3 10 2 91 0 1 7 0 1 79 8 6 2 0 0 7 0 7 87 0 14 14 12 83 0 12 12 14 67 0 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
217 215 208 206 199 196 188 186 175 173 165 163 159 157 149 146 142 139 126 125 118 105 101 99 96 94 77 67 64 62 51 39 68 42 18 17
CALL[ ]	/* CallFunction */";
};
width = 725;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(625,463,o),
(613,463,qs),
(371,463,ls),
(366,463,o),
(363,475,o),
(363,498,qs),
(363,521,o),
(364,582,o),
(372,648,o),
(389,713,o),
(420,764,o),
(469,795,o),
(504,795,qs),
(530,795,o),
(569,778,o),
(594,750,o),
(606,715,o),
(606,697,qs),
(606,677,o),
(593,658,o),
(578,644,o),
(566,631,o),
(566,618,qs),
(566,601,o),
(589,583,o),
(606,583,qs),
(632,583,o),
(648,624,o),
(648,656,qs),
(648,708,o),
(623,774,o),
(582,812,o),
(532,825,o),
(508,825,qs),
(459,825,o),
(394,786,o),
(374,754,q),
(362,762,o),
(329,775,o),
(304,775,qs),
(258,775,o),
(194,741,o),
(151,687,o),
(125,621,o),
(112,558,o),
(108,505,o),
(108,491,qs),
(108,480,o),
(104,463,o),
(96,463,qs),
(32,463,ls),
(14,463,o),
(0,460,o),
(0,452,qs),
(0,446,o),
(12,435,o),
(29,435,qs),
(96,435,ls),
(104,435,o),
(109,423,o),
(109,409,qs),
(109,361,o),
(111,265,o),
(111,217,qs),
(111,195,o),
(110,133,o),
(109,68,o),
(106,6,o),
(105,-15,qs),
(104,-26,o),
(71,-33,o),
(31,-36,qs),
(20,-37,o),
(-1,-41,o),
(-1,-49,qs),
(-1,-57,o),
(19,-60,o),
(33,-60,qs),
(44,-60,o),
(90,-57,o),
(117,-57,qs),
(140,-57,o),
(188,-59,o),
(206,-59,qs),
(232,-59,o),
(248,-52,o),
(248,-45,qs),
(248,-30,o),
(219,-30,qs),
(151,-30,l),
(151,424,ls),
(151,429,o),
(157,435,o),
(169,435,qs),
(173,435,o),
(213,434,o),
(263,434,o),
(312,433,o),
(325,433,q),
(325,429,o),
(325,420,o),
(326,394,o),
(326,344,o),
(326,300,qs),
(326,262,o),
(326,183,o),
(325,113,o),
(323,58,o),
(321,45,qs),
(320,39,o),
(315,32,o),
(302,28,o),
(278,25,o),
(258,24,qs),
(247,23,o),
(226,19,o),
(226,11,qs),
(226,3,o),
(246,0,o),
(260,0,qs),
(271,0,o),
(322,3,o),
(349,3,qs),
(360,3,o),
(391,2,o),
(422,2,o),
(450,1,o),
(459,1,qs),
(485,1,o),
(501,7,o),
(501,14,qs),
(501,28,o),
(472,28,qs),
(370,28,l),
(370,31,o),
(367,53,o),
(364,87,o),
(361,129,o),
(361,151,qs),
(361,158,o),
(361,202,o),
(362,261,o),
(362,326,o),
(363,381,o),
(363,421,o),
(363,424,qs),
(363,435,o),
(381,435,qs),
(386,435,o),
(408,434,o),
(433,434,o),
(459,433,o),
(467,433,qs),
(475,433,o),
(508,434,o),
(543,434,o),
(572,435,o),
(575,435,qs),
(586,435,o),
(592,426,o),
(593,418,qs),
(594,410,o),
(595,355,o),
(596,276,o),
(597,183,o),
(597,138,qs),
(597,106,o),
(597,63,o),
(595,30,o),
(593,3,o),
(592,-12,qs),
(590,-24,o),
(578,-31,o),
(553,-33,qs),
(530,-35,o),
(489,-39,o),
(489,-47,qs),
(489,-56,o),
(534,-59,o),
(558,-59,qs),
(713,-59,ls),
(723,-59,o),
(743,-55,o),
(743,-47,qs),
(743,-38,o),
(718,-31,o),
(695,-31,qs),
(631,-31,l),
(631,-21,o),
(630,8,o),
(630,38,o),
(630,66,o),
(630,77,qs),
(630,112,o),
(632,204,o),
(633,300,o),
(635,393,o),
(635,428,qs),
(635,444,o)
);
},
{
closed = 1;
nodes = (
(155,463,o),
(151,471,o),
(151,484,qs),
(151,495,o),
(152,543,o),
(161,602,o),
(180,664,o),
(215,716,o),
(269,749,o),
(309,749,qs),
(329,749,o),
(354,740,o),
(362,733,q),
(351,711,o),
(337,646,o),
(328,572,o),
(325,496,o),
(325,463,q),
(159,463,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
161 1 16 11 204 1 13 16 129 27 2 0 4 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 13 16 10 16 13 10 104 0 11 0 16 13 11 16 91 7 1 0 8 1 1 0 1 87 0 14 14 12 83 0 12 12 12 67 9 6 2 2 2 10 83 18 17 15 3 10 10 23 67 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 13 16 10 16 13 10 104 0 11 0 16 13 11 16 91 18 17 15 3 10 9 6 2 2 3 10 2 91 7 1 0 8 1 1 0 1 87 0 14 14 12 83 0 12 12 12 67 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 13 16 10 16 13 10 104 0 11 0 16 13 11 16 91 18 17 15 3 10 9 6 2 2 3 10 2 91 7 1 0 8 1 1 0 1 87 0 14 14 12 83 0 12 12 14 67 5 1 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
199 199 199 217 199 216 208 206 197 194 186 184 173 171 165 163 159 157 149 146 142 139 121 113 110 108 105 99 85 84 79 69 66 64 51 39 68 42 19 17
CALL[ ]	/* CallFunction */";
};
width = 724;
}
);
note = f_f_i;
unicode = 64259;
},
{
glyphname = f_f_j;
kernLeft = f_f;
kernRight = dotlessj;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(553,-229,o),
(595,-180,o),
(624,-101,o),
(630,-44,qs),
(634,-4,o),
(638,119,o),
(639,253,o),
(639,385,o),
(639,434,qs),
(639,466,o),
(618,487,o),
(597,487,qs),
(380,487,ls),
(375,487,o),
(372,490,o),
(372,498,qs),
(372,517,o),
(373,569,o),
(381,624,o),
(398,678,o),
(429,721,o),
(478,747,o),
(513,747,qs),
(539,747,o),
(564,716,o),
(564,697,qs),
(564,679,o),
(552,660,o),
(538,645,o),
(526,630,o),
(526,618,qs),
(526,593,o),
(547,561,o),
(581,561,qs),
(623,561,o),
(657,610,o),
(657,656,qs),
(657,708,o),
(632,774,o),
(591,812,o),
(541,825,o),
(517,825,qs),
(458,825,o),
(380,792,o),
(354,765,q),
(343,770,o),
(313,775,o),
(299,775,qs),
(212,775,o),
(113,725,o),
(63,647,o),
(50,552,o),
(50,507,qs),
(50,487,o),
(36,487,qs),
(17,487,ls),
(-1,487,o),
(-24,472,o),
(-24,449,qs),
(-24,426,o),
(5,411,o),
(22,411,qs),
(38,411,ls),
(46,411,o),
(51,408,o),
(51,404,qs),
(51,379,o),
(52,339,o),
(52,299,o),
(53,253,o),
(53,222,qs),
(53,203,o),
(52,136,o),
(51,66,o),
(48,3,o),
(47,-12,qs),
(45,-35,o),
(24,-36,qs),
(17,-36,o),
(0,-40,o),
(-15,-49,o),
(-25,-62,o),
(-25,-71,qs),
(-25,-82,o),
(-15,-94,o),
(0,-100,o),
(18,-102,o),
(26,-102,qs),
(32,-102,o),
(60,-101,o),
(94,-100,o),
(130,-99,o),
(144,-99,qs),
(155,-99,o),
(171,-100,o),
(185,-100,o),
(199,-101,o),
(209,-101,qs),
(234,-101,o),
(262,-89,o),
(262,-66,qs),
(262,-43,o),
(235,-30,o),
(206,-30,qs),
(144,-30,l),
(144,400,ls),
(144,411,o),
(162,411,qs),
(186,411,o),
(211,412,o),
(230,413,o),
(254,414,o),
(278,414,q),
(281,384,o),
(284,323,o),
(284,300,qs),
(284,270,o),
(283,200,o),
(281,137,o),
(280,89,o),
(279,80,qs),
(278,69,o),
(255,60,o),
(250,60,qs),
(236,60,o),
(218,47,o),
(218,31,qs),
(218,16,o),
(238,3,o),
(252,3,qs),
(258,3,o),
(282,4,o),
(312,5,o),
(344,6,o),
(358,6,qs),
(381,6,o),
(430,4,o),
(448,4,qs),
(474,4,o),
(490,19,o),
(490,33,qs),
(490,63,o),
(461,63,qs),
(375,63,l),
(373,83,o),
(370,125,o),
(370,159,qs),
(370,165,o),
(370,205,o),
(371,256,o),
(371,313,o),
(372,363,o),
(372,397,o),
(372,400,qs),
(372,411,o),
(390,411,qs),
(395,411,o),
(413,410,o),
(444,409,o),
(491,408,o),
(524,408,qs),
(537,408,o),
(551,399,o),
(551,387,qs),
(551,322,o),
(550,191,o),
(547,76,o),
(544,-15,o),
(543,-40,qs),
(538,-119,o),
(495,-181,o),
(454,-181,qs),
(425,-181,o),
(387,-163,o),
(387,-143,qs),
(387,-135,o),
(395,-125,o),
(403,-124,qs),
(417,-122,o),
(440,-109,o),
(440,-89,qs),
(440,-70,o),
(412,-49,o),
(392,-49,qs),
(350,-49,o),
(302,-100,o),
(302,-131,qs),
(302,-184,o),
(383,-250,o),
(473,-250,qs),
(501,-250,o)
);
},
{
closed = 1;
nodes = (
(305,699,o),
(311,696,q),
(292,643,o),
(285,539,o),
(285,487,q),
(152,487,ls),
(144,487,o),
(144,497,qs),
(144,523,o),
(154,593,o),
(186,657,o),
(245,701,o),
(294,701,qs),
(296,701,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
197 191 147 0 2 40
CALL[ ]	/* CallFunction */";
};
width = 697;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(371,757,o),
(332,775,o),
(300,775,qs),
(247,775,o),
(174,748,o),
(124,704,o),
(95,647,o),
(80,586,o),
(75,526,o),
(74,501,qs),
(74,494,o),
(70,478,o),
(62,478,qs),
(28,478,ls),
(10,478,o),
(-14,470,o),
(-14,450,qs),
(-14,433,o),
(8,420,o),
(25,420,qs),
(62,420,ls),
(70,420,o),
(75,417,o),
(75,414,qs),
(75,363,o),
(77,268,o),
(77,217,qs),
(77,199,o),
(76,136,o),
(75,67,o),
(72,5,o),
(71,-13,qs),
(70,-24,o),
(51,-34,o),
(27,-36,qs),
(22,-36,o),
(7,-39,o),
(-6,-45,o),
(-15,-55,o),
(-15,-64,qs),
(-15,-74,o),
(-6,-84,o),
(7,-89,o),
(22,-90,o),
(29,-90,qs),
(35,-90,o),
(58,-89,o),
(88,-88,o),
(119,-87,o),
(133,-87,qs),
(144,-87,o),
(175,-88,o),
(206,-88,o),
(234,-89,o),
(243,-89,qs),
(269,-89,o),
(295,-77,o),
(295,-60,qs),
(295,-39,o),
(271,-30,o),
(256,-30,qs),
(147,-30,l),
(147,409,ls),
(147,420,o),
(165,420,qs),
(241,420,ls),
(258,420,o),
(288,430,o),
(288,450,qs),
(288,459,o),
(278,470,o),
(263,476,o),
(248,478,o),
(243,478,qs),
(155,478,ls),
(151,478,o),
(147,481,o),
(147,489,qs),
(147,513,o),
(155,591,o),
(186,665,o),
(247,719,o),
(300,719,qs),
(316,719,o),
(334,708,o),
(341,702,q),
(386,743,l)
);
},
{
closed = 1;
nodes = (
(412,-53,o),
(401,-53,qs),
(370,-53,o),
(325,-91,o),
(325,-120,qs),
(325,-144,o),
(339,-186,o),
(374,-217,o),
(432,-236,o),
(476,-236,qs),
(501,-236,o),
(552,-220,o),
(595,-177,o),
(626,-103,o),
(632,-44,qs),
(633,-34,o),
(635,-7,o),
(637,23,o),
(638,51,o),
(638,61,qs),
(638,68,o),
(638,124,o),
(639,200,o),
(640,286,o),
(641,362,o),
(641,417,o),
(641,425,qs),
(641,451,o),
(634,478,o),
(614,478,qs),
(382,478,ls),
(377,478,o),
(374,484,o),
(374,498,qs),
(374,518,o),
(375,574,o),
(383,633,o),
(400,691,o),
(431,737,o),
(480,765,o),
(515,765,qs),
(552,765,o),
(587,722,o),
(587,697,qs),
(587,677,o),
(574,658,o),
(559,644,o),
(547,631,o),
(547,618,qs),
(547,601,o),
(570,573,o),
(597,573,qs),
(632,573,o),
(659,615,o),
(659,656,qs),
(659,708,o),
(634,774,o),
(593,812,o),
(543,825,o),
(519,825,qs),
(470,825,o),
(401,796,o),
(354,748,o),
(327,684,o),
(312,614,o),
(308,541,o),
(307,509,qs),
(307,494,o),
(303,478,o),
(294,478,qs),
(250,478,ls),
(232,478,o),
(211,470,o),
(211,452,qs),
(211,441,o),
(230,420,o),
(247,420,qs),
(294,420,ls),
(302,420,o),
(307,408,o),
(307,394,qs),
(307,300,ls),
(307,267,o),
(307,193,o),
(306,127,o),
(304,76,o),
(302,65,qs),
(301,54,o),
(281,47,o),
(259,44,qs),
(248,42,o),
(227,35,o),
(227,21,qs),
(227,8,o),
(247,0,o),
(261,0,qs),
(267,0,o),
(289,1,o),
(316,2,o),
(346,3,o),
(360,3,qs),
(371,3,o),
(402,2,o),
(434,2,o),
(463,1,o),
(472,1,qs),
(498,1,o),
(514,13,o),
(514,24,qs),
(514,48,o),
(485,48,qs),
(379,48,l),
(379,50,o),
(376,71,o),
(374,103,o),
(372,140,o),
(372,159,qs),
(372,166,o),
(372,206,o),
(373,260,o),
(373,319,o),
(374,370,o),
(374,406,o),
(374,409,qs),
(374,420,o),
(392,420,qs),
(400,420,o),
(428,419,o),
(459,418,o),
(488,417,o),
(499,417,qs),
(549,417,ls),
(574,417,o),
(574,396,qs),
(574,278,ls),
(574,257,o),
(573,172,o),
(571,76,o),
(568,-14,o),
(566,-40,qs),
(563,-78,o),
(548,-130,o),
(524,-161,o),
(493,-174,o),
(474,-174,qs),
(389,-174,o),
(389,-143,qs),
(389,-132,o),
(397,-125,o),
(405,-124,qs),
(418,-122,o),
(442,-110,o),
(442,-89,qs),
(442,-70,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
229 179 82 40 2 40
CALL[ ]	/* CallFunction */";
};
width = 701;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(639,463,o),
(622,463,qs),
(385,463,ls),
(380,463,o),
(377,475,o),
(377,498,qs),
(377,521,o),
(378,582,o),
(386,648,o),
(403,713,o),
(434,764,o),
(483,795,o),
(518,795,qs),
(544,795,o),
(583,778,o),
(608,750,o),
(620,715,o),
(620,697,qs),
(620,677,o),
(607,658,o),
(592,644,o),
(580,631,o),
(580,618,qs),
(580,601,o),
(603,583,o),
(620,583,qs),
(646,583,o),
(662,624,o),
(662,656,qs),
(662,708,o),
(637,774,o),
(596,812,o),
(546,825,o),
(522,825,qs),
(470,825,o),
(403,781,o),
(383,746,q),
(370,757,o),
(334,775,o),
(301,775,qs),
(256,775,o),
(193,740,o),
(150,686,o),
(125,619,o),
(112,556,o),
(108,504,o),
(108,491,qs),
(108,480,o),
(104,463,o),
(96,463,qs),
(32,463,ls),
(14,463,o),
(0,460,o),
(0,452,qs),
(0,446,o),
(12,435,o),
(29,435,qs),
(96,435,ls),
(104,435,o),
(109,423,o),
(109,409,qs),
(109,383,o),
(110,315,o),
(111,254,o),
(111,210,o),
(111,210,q),
(111,194,o),
(110,136,o),
(109,70,o),
(106,6,o),
(105,-15,qs),
(104,-26,o),
(73,-33,o),
(31,-36,qs),
(20,-37,o),
(-1,-41,o),
(-1,-49,qs),
(-1,-57,o),
(19,-60,o),
(33,-60,qs),
(44,-60,o),
(90,-57,o),
(117,-57,qs),
(140,-57,o),
(188,-59,o),
(205,-59,qs),
(231,-59,o),
(248,-52,o),
(248,-45,qs),
(248,-30,o),
(219,-30,qs),
(151,-30,l),
(151,424,ls),
(151,429,o),
(157,435,o),
(169,435,qs),
(174,435,o),
(224,434,o),
(283,433,o),
(334,432,o),
(339,432,q),
(340,423,o),
(340,415,o),
(340,409,qs),
(340,300,ls),
(340,264,o),
(340,185,o),
(339,113,o),
(337,57,o),
(335,45,qs),
(334,39,o),
(330,33,o),
(317,28,o),
(293,25,o),
(272,24,qs),
(261,23,o),
(240,19,o),
(240,11,qs),
(240,3,o),
(260,0,o),
(274,0,qs),
(285,0,o),
(336,3,o),
(363,3,qs),
(374,3,o),
(405,2,o),
(436,2,o),
(464,1,o),
(473,1,qs),
(499,1,o),
(515,7,o),
(515,14,qs),
(515,28,o),
(486,28,qs),
(384,28,l),
(384,31,o),
(381,56,o),
(378,92,o),
(375,137,o),
(375,159,qs),
(375,166,o),
(375,209,o),
(376,266,o),
(376,328,o),
(377,383,o),
(377,420,o),
(377,424,qs),
(377,435,o),
(395,435,qs),
(400,435,o),
(422,434,o),
(447,434,o),
(473,433,o),
(481,433,qs),
(489,433,o),
(521,433,o),
(555,432,o),
(582,432,o),
(585,432,qs),
(596,432,o),
(607,419,o),
(607,411,qs),
(607,337,o),
(606,202,o),
(605,86,o),
(602,-8,o),
(599,-40,qs),
(594,-93,o),
(566,-153,o),
(530,-182,o),
(493,-189,o),
(481,-189,qs),
(453,-189,o),
(418,-179,o),
(399,-164,o),
(392,-149,o),
(392,-143,qs),
(392,-130,o),
(402,-125,o),
(408,-124,qs),
(419,-123,o),
(445,-111,o),
(445,-89,qs),
(445,-70,o),
(425,-59,o),
(414,-59,qs),
(394,-59,o),
(358,-92,o),
(358,-121,qs),
(358,-140,o),
(371,-176,o),
(399,-204,o),
(446,-221,o),
(479,-221,qs),
(503,-221,o),
(553,-208,o),
(596,-170,o),
(629,-101,o),
(635,-44,qs),
(638,-19,o),
(640,29,o),
(641,88,o),
(642,168,o),
(642,226,qs),
(642,289,o),
(643,356,o),
(644,389,o),
(644,401,o),
(644,410,qs),
(644,439,o)
);
},
{
closed = 1;
nodes = (
(155,463,o),
(151,471,o),
(151,484,qs),
(151,494,o),
(152,542,o),
(161,601,o),
(180,664,o),
(215,716,o),
(269,749,o),
(308,749,qs),
(337,749,o),
(366,732,o),
(372,722,q),
(347,658,o),
(339,527,o),
(339,463,q),
(159,463,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
215 210 174 14 2 40
CALL[ ]	/* CallFunction */";
};
width = 707;
}
);
note = f_f_j;
},
{
glyphname = f_f_k;
kernLeft = f_f;
kernRight = c_k;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(60,-107,o),
(94,-106,o),
(130,-105,o),
(144,-105,qs),
(155,-105,o),
(168,-106,o),
(178,-106,o),
(189,-107,o),
(199,-107,qs),
(224,-107,o),
(257,-92,o),
(257,-69,qs),
(257,-54,o),
(248,-39,o),
(235,-31,o),
(218,-30,o),
(211,-30,qs),
(144,-30,l),
(144,400,ls),
(144,411,o),
(162,411,qs),
(187,411,o),
(211,411,o),
(230,412,o),
(254,413,o),
(280,414,q),
(282,397,o),
(283,357,o),
(283,337,qs),
(283,300,ls),
(283,270,o),
(282,196,o),
(281,130,o),
(279,82,o),
(279,77,qs),
(277,57,o),
(266,56,qs),
(255,54,o),
(230,42,o),
(230,27,qs),
(230,7,o),
(254,0,o),
(268,0,qs),
(279,0,o),
(330,3,o),
(357,3,qs),
(380,3,o),
(419,1,o),
(437,1,qs),
(463,1,o),
(479,15,o),
(479,30,qs),
(479,60,o),
(450,60,qs),
(371,60,l),
(371,400,ls),
(371,411,o),
(389,411,qs),
(393,411,o),
(412,410,o),
(432,410,o),
(450,409,o),
(455,409,qs),
(466,409,o),
(489,424,o),
(489,447,qs),
(489,467,o),
(470,487,o),
(457,487,qs),
(379,487,ls),
(375,487,o),
(371,494,o),
(371,508,qs),
(371,545,o),
(379,630,o),
(411,703,o),
(474,751,o),
(529,751,qs),
(545,751,o),
(555,708,o),
(555,645,qs),
(555,612,o),
(556,547,o),
(556,473,o),
(557,386,o),
(557,332,qs),
(557,257,o),
(556,163,o),
(555,107,o),
(554,79,o),
(554,70,qs),
(554,16,o),
(540,-29,o),
(516,-31,qs),
(505,-32,o),
(489,-41,o),
(489,-60,qs),
(489,-78,o),
(523,-90,o),
(545,-90,qs),
(551,-90,o),
(586,-87,o),
(599,-87,qs),
(628,-87,o),
(669,-89,o),
(699,-89,qs),
(708,-89,o),
(726,-79,o),
(726,-63,qs),
(726,-55,o),
(725,-43,o),
(716,-34,o),
(698,-30,o),
(681,-30,qs),
(642,-30,l),
(642,-23,o),
(642,32,o),
(643,100,o),
(643,166,o),
(643,185,q),
(660,205,l),
(667,192,o),
(692,138,o),
(724,73,o),
(758,4,o),
(791,-52,o),
(818,-88,o),
(827,-88,qs),
(942,-88,o),
(1043,-79,o),
(1043,-59,qs),
(1043,-39,o),
(998,-27,o),
(963,-27,qs),
(923,-27,o),
(875,-13,o),
(868,-5,qs),
(859,7,o),
(831,48,o),
(795,111,o),
(750,198,o),
(722,257,q),
(751,284,o),
(803,335,o),
(825,358,qs),
(834,369,o),
(856,371,qs),
(915,376,o),
(971,388,o),
(971,408,qs),
(971,427,o),
(888,439,o),
(810,439,qs),
(700,439,o),
(700,396,qs),
(700,382,o),
(709,372,o),
(714,372,qs),
(719,372,ls),
(723,372,o),
(723,367,qs),
(723,363,o),
(716,355,o),
(698,337,o),
(667,307,o),
(642,282,q),
(642,713,ls),
(642,733,o),
(635,773,o),
(613,805,o),
(569,825,o),
(532,825,qs),
(469,825,o),
(386,791,o),
(357,763,q),
(348,769,o),
(316,775,o),
(299,775,qs),
(241,775,o),
(159,752,o),
(103,711,o),
(71,658,o),
(55,599,o),
(50,536,o),
(50,507,qs),
(50,499,o),
(45,487,o),
(38,487,qs),
(21,487,ls),
(2,487,o),
(-24,475,o),
(-24,449,qs),
(-24,426,o),
(5,411,o),
(22,411,qs),
(39,411,ls),
(47,411,o),
(51,409,o),
(51,404,qs),
(51,379,o),
(52,339,o),
(52,299,o),
(53,252,o),
(53,221,qs),
(53,202,o),
(52,136,o),
(51,66,o),
(48,3,o),
(47,-12,qs),
(45,-35,o),
(24,-36,qs),
(18,-36,o),
(1,-41,o),
(-14,-50,o),
(-25,-63,o),
(-25,-73,qs),
(-25,-93,o),
(5,-108,o),
(26,-108,qs),
(32,-108,o)
);
},
{
closed = 1;
nodes = (
(307,700,o),
(314,697,q),
(294,649,o),
(284,537,o),
(284,487,q),
(152,487,ls),
(144,487,o),
(144,500,qs),
(144,526,o),
(155,596,o),
(186,658,o),
(242,701,o),
(288,701,qs),
(289,701,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
226 220 46 0 2 40
CALL[ ]	/* CallFunction */";
};
width = 1015;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(371,757,o),
(332,775,o),
(300,775,qs),
(247,775,o),
(174,748,o),
(124,704,o),
(95,647,o),
(80,586,o),
(75,526,o),
(74,501,qs),
(74,494,o),
(70,478,o),
(62,478,qs),
(28,478,ls),
(10,478,o),
(-14,470,o),
(-14,450,qs),
(-14,433,o),
(8,420,o),
(25,420,qs),
(62,420,ls),
(70,420,o),
(75,417,o),
(75,414,qs),
(75,363,o),
(77,268,o),
(77,217,qs),
(77,199,o),
(76,136,o),
(75,67,o),
(72,5,o),
(71,-13,qs),
(70,-24,o),
(51,-34,o),
(27,-36,qs),
(22,-36,o),
(7,-39,o),
(-6,-45,o),
(-15,-55,o),
(-15,-64,qs),
(-15,-74,o),
(-6,-84,o),
(7,-89,o),
(22,-90,o),
(29,-90,qs),
(35,-90,o),
(58,-89,o),
(88,-88,o),
(119,-87,o),
(133,-87,qs),
(144,-87,o),
(175,-88,o),
(206,-88,o),
(234,-89,o),
(243,-89,qs),
(269,-89,o),
(295,-77,o),
(295,-60,qs),
(295,-39,o),
(271,-30,o),
(256,-30,qs),
(147,-30,l),
(147,409,ls),
(147,420,o),
(165,420,qs),
(241,420,ls),
(258,420,o),
(288,430,o),
(288,450,qs),
(288,459,o),
(278,470,o),
(263,476,o),
(248,478,o),
(243,478,qs),
(155,478,ls),
(151,478,o),
(147,481,o),
(147,489,qs),
(147,513,o),
(155,591,o),
(186,665,o),
(247,719,o),
(300,719,qs),
(316,719,o),
(334,708,o),
(341,702,q),
(386,743,l)
);
},
{
closed = 1;
nodes = (
(579,471,o),
(579,371,qs),
(579,326,o),
(578,261,o),
(577,209,o),
(576,167,o),
(575,124,o),
(574,75,o),
(574,43,qs),
(574,14,o),
(554,-26,o),
(527,-31,qs),
(510,-34,o),
(493,-38,o),
(493,-55,qs),
(493,-69,o),
(519,-78,o),
(536,-78,qs),
(550,-78,o),
(593,-76,o),
(609,-76,qs),
(647,-76,o),
(696,-78,o),
(718,-78,qs),
(730,-78,o),
(747,-70,o),
(747,-56,qs),
(747,-44,o),
(728,-31,o),
(705,-31,qs),
(644,-31,l),
(644,186,l),
(677,218,l),
(683,207,o),
(708,155,o),
(741,90,o),
(777,20,o),
(812,-38,o),
(840,-76,o),
(849,-76,qs),
(950,-75,o),
(1037,-68,o),
(1037,-51,qs),
(1037,-43,o),
(1025,-33,o),
(1006,-28,o),
(983,-26,o),
(971,-26,qs),
(950,-26,o),
(923,-24,o),
(905,-20,o),
(893,-12,o),
(888,-7,qs),
(877,5,o),
(839,64,o),
(796,142,o),
(752,229,o),
(734,269,q),
(749,282,o),
(769,302,o),
(790,323,o),
(818,349,o),
(840,370,qs),
(851,381,o),
(871,383,qs),
(923,388,o),
(972,398,o),
(972,413,qs),
(972,428,o),
(927,435,o),
(877,435,qs),
(798,435,ls),
(761,435,o),
(721,428,o),
(721,411,qs),
(721,399,o),
(735,388,o),
(746,388,qs),
(750,388,ls),
(759,388,o),
(759,378,qs),
(759,370,o),
(702,319,o),
(643,265,q),
(643,713,ls),
(643,731,o),
(638,770,o),
(617,803,o),
(573,825,o),
(535,825,qs),
(458,825,o),
(368,762,o),
(321,669,o),
(307,565,o),
(306,523,qs),
(305,502,o),
(301,478,o),
(292,478,qs),
(248,478,ls),
(230,478,o),
(207,470,o),
(207,452,qs),
(207,441,o),
(228,420,o),
(245,420,qs),
(292,420,ls),
(300,420,o),
(305,408,o),
(305,394,qs),
(305,300,ls),
(305,267,o),
(305,191,o),
(304,122,o),
(302,71,o),
(301,65,qs),
(300,54,o),
(288,47,o),
(267,44,qs),
(256,42,o),
(233,35,o),
(233,21,qs),
(233,5,o),
(255,0,o),
(269,0,qs),
(280,0,o),
(331,3,o),
(358,3,qs),
(369,3,o),
(400,2,o),
(431,2,o),
(459,1,o),
(468,1,qs),
(494,1,o),
(510,12,o),
(510,24,qs),
(510,48,o),
(481,48,qs),
(372,48,l),
(372,409,ls),
(372,420,o),
(390,420,qs),
(394,420,o),
(413,419,o),
(433,419,o),
(451,418,o),
(456,418,qs),
(467,418,o),
(488,430,o),
(488,447,qs),
(488,463,o),
(468,478,o),
(458,478,qs),
(380,478,ls),
(376,478,o),
(372,485,o),
(372,499,qs),
(372,530,o),
(377,622,o),
(407,708,o),
(471,769,o),
(530,769,qs),
(548,769,o),
(567,755,o),
(576,727,o),
(577,686,o),
(577,659,qs),
(577,608,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
228 162 82 40 2 40
CALL[ ]	/* CallFunction */";
};
width = 1020;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(707,228,o),
(733,176,o),
(768,111,o),
(806,41,o),
(842,-17,o),
(872,-55,o),
(881,-55,qs),
(960,-55,o),
(1029,-51,o),
(1029,-38,qs),
(1029,-25,o),
(983,-25,qs),
(941,-25,o),
(901,-22,o),
(895,-14,qs),
(863,25,o),
(809,118,o),
(767,201,o),
(740,263,o),
(737,272,q),
(752,285,o),
(764,297,o),
(783,315,o),
(821,351,o),
(862,390,qs),
(873,401,o),
(893,403,qs),
(935,407,o),
(974,413,o),
(974,421,qs),
(974,430,o),
(916,435,o),
(854,435,qs),
(792,435,o),
(745,430,o),
(745,420,qs),
(745,416,o),
(753,409,o),
(765,408,qs),
(799,406,ls),
(811,406,o),
(811,399,qs),
(811,394,o),
(786,365,o),
(741,322,o),
(680,266,o),
(645,236,q),
(645,547,ls),
(645,607,o),
(646,690,o),
(646,713,qs),
(646,726,o),
(643,764,o),
(623,800,o),
(580,825,o),
(540,825,qs),
(486,825,o),
(409,778,o),
(388,742,q),
(371,756,o),
(335,775,o),
(302,775,qs),
(257,775,o),
(193,740,o),
(150,686,o),
(125,620,o),
(112,557,o),
(108,504,o),
(108,491,qs),
(108,480,o),
(104,463,o),
(96,463,qs),
(32,463,ls),
(14,463,o),
(0,460,o),
(0,452,qs),
(0,446,o),
(12,435,o),
(29,435,qs),
(96,435,ls),
(104,435,o),
(109,423,o),
(109,409,qs),
(109,383,o),
(110,315,o),
(111,254,o),
(111,210,o),
(111,210,q),
(111,194,o),
(110,136,o),
(109,70,o),
(106,6,o),
(105,-15,qs),
(104,-26,o),
(73,-33,o),
(31,-36,qs),
(20,-37,o),
(-1,-41,o),
(-1,-49,qs),
(-1,-57,o),
(19,-60,o),
(33,-60,qs),
(44,-60,o),
(90,-57,o),
(117,-57,qs),
(140,-57,o),
(188,-59,o),
(205,-59,qs),
(231,-59,o),
(248,-52,o),
(248,-45,qs),
(248,-30,o),
(219,-30,qs),
(151,-30,l),
(151,424,ls),
(151,429,o),
(157,435,o),
(169,435,qs),
(173,435,o),
(223,434,o),
(280,434,o),
(330,433,o),
(336,433,q),
(336,426,o),
(337,415,o),
(337,409,qs),
(337,300,ls),
(337,265,o),
(337,181,o),
(336,107,o),
(334,52,o),
(333,45,qs),
(332,39,o),
(327,33,o),
(313,28,o),
(289,25,o),
(269,24,qs),
(258,23,o),
(237,19,o),
(237,11,qs),
(237,3,o),
(257,0,o),
(271,0,qs),
(282,0,o),
(333,3,o),
(360,3,qs),
(371,3,o),
(402,2,o),
(433,2,o),
(461,1,o),
(470,1,qs),
(496,1,o),
(512,7,o),
(512,14,qs),
(512,28,o),
(483,28,qs),
(374,28,l),
(374,424,ls),
(374,435,o),
(392,435,qs),
(396,435,o),
(415,434,o),
(435,434,o),
(453,433,o),
(458,433,qs),
(469,433,o),
(487,439,o),
(487,447,qs),
(487,455,o),
(470,463,o),
(460,463,qs),
(382,463,ls),
(378,463,o),
(374,471,o),
(374,484,qs),
(374,508,o),
(376,574,o),
(385,644,o),
(404,712,o),
(439,766,o),
(493,799,o),
(532,799,qs),
(561,799,o),
(592,781,o),
(607,749,o),
(609,707,o),
(609,683,qs),
(609,670,o),
(609,621,o),
(610,556,o),
(610,478,o),
(610,436,qs),
(610,381,o),
(610,255,o),
(609,135,o),
(607,30,o),
(605,-3,qs),
(603,-30,o),
(543,-33,qs),
(520,-34,ls),
(508,-35,o),
(499,-41,o),
(499,-46,qs),
(499,-51,o),
(509,-58,o),
(523,-58,qs),
(553,-58,o),
(604,-57,o),
(624,-57,qs),
(652,-57,o),
(711,-59,o),
(721,-59,qs),
(743,-59,o),
(753,-49,o),
(753,-44,qs),
(753,-38,o),
(741,-32,o),
(725,-32,qs),
(647,-32,l),
(647,-5,o),
(646,112,o),
(646,187,q),
(701,239,l)
);
},
{
closed = 1;
nodes = (
(335,467,o),
(335,463,q),
(159,463,ls),
(155,463,o),
(151,471,o),
(151,484,qs),
(151,494,o),
(152,541,o),
(161,600,o),
(180,663,o),
(215,715,o),
(269,749,o),
(308,749,qs),
(341,749,o),
(370,727,o),
(375,716,q),
(363,689,o),
(349,636,o),
(341,582,o),
(337,524,o),
(336,491,qs),
(335,472,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
240 230 165 119 2 40
CALL[ ]	/* CallFunction */";
};
width = 1027;
}
);
note = f_f_k;
},
{
glyphname = f_f_l;
kernLeft = f_f;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,-109,o),
(83,-108,o),
(112,-107,o),
(126,-107,qs),
(137,-107,o),
(166,-108,o),
(195,-108,o),
(222,-109,o),
(231,-109,qs),
(257,-109,o),
(290,-94,o),
(290,-71,qs),
(290,-44,o),
(264,-32,o),
(244,-32,qs),
(146,-32,l),
(146,392,ls),
(146,397,o),
(152,403,o),
(164,403,qs),
(185,403,o),
(210,404,o),
(230,406,o),
(251,407,o),
(268,407,q),
(269,401,o),
(271,373,o),
(272,338,o),
(272,304,o),
(272,292,qs),
(272,235,o),
(271,157,o),
(269,106,o),
(268,78,o),
(268,69,qs),
(268,59,o),
(263,52,o),
(255,50,qs),
(252,49,o),
(236,46,o),
(219,39,o),
(206,28,o),
(206,19,qs),
(206,9,o),
(216,-2,o),
(232,-7,o),
(249,-8,o),
(257,-8,qs),
(268,-8,o),
(320,-5,o),
(344,-5,qs),
(370,-5,o),
(417,-7,o),
(437,-7,qs),
(463,-7,o),
(478,7,o),
(478,23,qs),
(478,52,o),
(449,52,qs),
(360,52,l),
(360,392,ls),
(360,403,o),
(380,403,qs),
(383,403,o),
(401,402,o),
(421,402,o),
(440,401,o),
(443,401,qs),
(455,401,o),
(478,416,o),
(478,438,qs),
(478,460,o),
(458,479,o),
(446,479,qs),
(368,479,ls),
(360,479,o),
(360,485,qs),
(360,501,o),
(362,552,o),
(370,609,o),
(389,667,o),
(423,714,o),
(475,743,o),
(513,743,qs),
(533,743,o),
(544,712,o),
(544,675,qs),
(544,662,o),
(544,613,o),
(545,548,o),
(545,470,o),
(545,428,qs),
(545,373,o),
(545,247,o),
(544,127,o),
(542,22,o),
(540,-11,qs),
(539,-23,o),
(536,-39,o),
(529,-39,qs),
(506,-40,ls),
(486,-41,o),
(468,-59,o),
(468,-69,qs),
(468,-83,o),
(491,-98,o),
(509,-98,qs),
(538,-98,o),
(593,-97,o),
(606,-97,qs),
(622,-97,o),
(656,-98,o),
(683,-98,o),
(700,-99,o),
(701,-99,qs),
(730,-99,o),
(756,-82,o),
(756,-68,qs),
(756,-54,o),
(727,-40,o),
(711,-40,qs),
(633,-40,l),
(633,-24,o),
(633,51,o),
(632,149,o),
(632,263,o),
(631,374,o),
(631,475,o),
(631,510,qs),
(631,562,o),
(631,624,o),
(632,663,o),
(632,688,o),
(632,705,qs),
(632,724,o),
(626,764,o),
(604,797,o),
(558,817,o),
(518,817,qs),
(463,817,o),
(387,787,o),
(360,762,q),
(346,770,o),
(317,775,o),
(299,775,qs),
(215,775,o),
(117,724,o),
(66,642,o),
(52,541,o),
(52,491,qs),
(52,479,o),
(40,479,qs),
(27,479,ls),
(18,479,o),
(0,478,o),
(-13,470,o),
(-22,455,o),
(-22,441,qs),
(-22,418,o),
(7,403,o),
(24,403,qs),
(40,403,ls),
(49,403,o),
(53,401,o),
(53,399,qs),
(53,351,o),
(55,265,o),
(55,217,qs),
(55,201,o),
(54,136,o),
(53,64,o),
(50,-2,o),
(49,-17,qs),
(48,-28,o),
(39,-37,o),
(26,-38,qs),
(19,-38,o),
(2,-42,o),
(-13,-51,o),
(-23,-65,o),
(-23,-75,qs),
(-23,-98,o),
(8,-110,o),
(28,-110,qs),
(34,-110,o)
);
},
{
closed = 1;
nodes = (
(312,697,q),
(298,670,o),
(290,595,o),
(288,527,o),
(283,479,o),
(272,479,qs),
(154,479,ls),
(146,479,o),
(146,484,qs),
(146,537,o),
(155,618,o),
(186,673,o),
(245,701,o),
(295,701,qs),
(303,701,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
42 1 9 4 198 1 3 17 146 1 13 12 87 11 2 1 13 4 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
42 1 9 4 198 1 3 17 146 1 13 12 87 11 2 16 13 4 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 4 20 1 17 3 4 17 91 16 8 6 3 1 7 19 2 0 1 0 87 0 9 9 5 83 0 5 5 14 67 15 14 11 3 2 2 3 83 18 10 2 3 3 23 67 0 12 12 13 83 0 13 13 24 13 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 4 20 1 17 3 4 17 91 16 8 6 3 1 7 19 2 0 1 0 87 0 9 9 5 83 0 5 5 14 67 15 14 11 3 2 2 3 83 18 10 2 3 3 23 67 0 12 12 13 83 0 13 13 16 13 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 4 20 1 17 3 4 17 91 16 8 6 3 1 7 19 2 0 1 0 87 0 9 9 5 83 0 5 5 14 67 15 14 11 3 2 2 3 83 18 10 2 3 3 23 67 0 12 12 13 83 0 13 13 24 13 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 4 20 1 17 3 4 17 91 18 10 2 3 15 14 11 3 2 12 3 2 91 16 8 6 3 1 7 19 2 0 1 0 87 0 9 9 5 83 0 5 5 14 67 0 12 12 13 83 0 13 13 24 13 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 4 20 1 17 3 4 17 91 18 10 2 3 15 14 11 3 2 12 3 2 91 0 7 0 1 7 79 16 8 6 3 1 19 1 0 1 0 87 0 9 9 5 83 0 5 5 14 67 0 12 12 13 83 0 13 13 24 13 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 4 20 1 17 3 4 17 91 18 10 2 3 15 14 11 3 2 12 3 2 91 8 6 2 1 0 7 0 1 7 91 0 16 19 1 0 16 0 87 0 9 9 5 83 0 5 5 14 67 0 12 12 13 83 0 13 13 24 13 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 48 values pushed */
186 185 1 0 194 191 185 199 186 199 170 168 165 162 161 159 138 129 126 124 122 115 111 108 101 99 85 82 78 68 64 62 46 44 40 38 33 29 24 21 8 7 0 184 1 174 21 15
CALL[ ]	/* CallFunction */";
};
width = 703;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(372,757,o),
(333,775,o),
(301,775,qs),
(248,775,o),
(175,747,o),
(125,702,o),
(96,642,o),
(81,579,o),
(76,517,o),
(75,491,qs),
(75,484,o),
(71,473,o),
(63,473,qs),
(29,473,ls),
(11,473,o),
(-13,465,o),
(-13,445,qs),
(-13,428,o),
(9,415,o),
(26,415,qs),
(63,415,ls),
(71,415,o),
(76,412,o),
(76,409,qs),
(76,361,o),
(78,265,o),
(78,217,qs),
(78,199,o),
(77,135,o),
(76,65,o),
(73,2,o),
(72,-16,qs),
(71,-27,o),
(52,-35,o),
(28,-37,qs),
(23,-37,o),
(8,-40,o),
(-5,-46,o),
(-14,-56,o),
(-14,-65,qs),
(-14,-75,o),
(-5,-85,o),
(8,-90,o),
(23,-91,o),
(30,-91,qs),
(36,-91,o),
(59,-90,o),
(89,-89,o),
(120,-88,o),
(134,-88,qs),
(145,-88,o),
(176,-89,o),
(207,-89,o),
(235,-90,o),
(244,-90,qs),
(270,-90,o),
(296,-78,o),
(296,-61,qs),
(296,-40,o),
(272,-31,o),
(257,-31,qs),
(148,-31,l),
(148,404,ls),
(148,409,o),
(154,415,o),
(166,415,qs),
(170,415,o),
(189,414,o),
(209,414,o),
(227,413,o),
(232,413,qs),
(238,413,o),
(251,414,o),
(263,420,o),
(271,433,o),
(271,445,qs),
(271,464,o),
(244,473,o),
(234,473,qs),
(156,473,ls),
(148,473,o),
(148,484,qs),
(148,517,o),
(153,599,o),
(181,670,o),
(244,719,o),
(301,719,qs),
(317,719,o),
(335,708,o),
(342,702,q),
(387,743,l)
);
},
{
closed = 1;
nodes = (
(357,754,o),
(310,657,o),
(296,547,o),
(295,503,qs),
(294,489,o),
(289,473,o),
(280,473,qs),
(237,473,ls),
(219,473,o),
(195,461,o),
(195,443,qs),
(195,415,o),
(234,415,qs),
(281,415,ls),
(289,415,o),
(294,403,o),
(294,389,qs),
(294,295,ls),
(294,262,o),
(294,186,o),
(293,117,o),
(291,66,o),
(290,60,qs),
(289,49,o),
(277,43,o),
(256,40,qs),
(251,39,o),
(236,37,o),
(223,31,o),
(214,23,o),
(214,16,qs),
(214,8,o),
(223,0,o),
(236,-4,o),
(251,-5,o),
(258,-5,qs),
(269,-5,o),
(320,-2,o),
(347,-2,qs),
(358,-2,o),
(389,-3,o),
(420,-3,o),
(448,-4,o),
(457,-4,qs),
(483,-4,o),
(499,7,o),
(499,19,qs),
(499,43,o),
(470,43,qs),
(361,43,l),
(361,404,ls),
(361,415,o),
(379,415,qs),
(383,415,o),
(402,414,o),
(422,414,o),
(440,413,o),
(445,413,qs),
(456,413,o),
(477,425,o),
(477,442,qs),
(477,458,o),
(457,473,o),
(447,473,qs),
(369,473,ls),
(361,473,o),
(361,479,qs),
(361,501,o),
(363,560,o),
(372,624,o),
(391,685,o),
(426,734,o),
(480,764,o),
(519,764,qs),
(537,764,o),
(556,750,o),
(565,727,o),
(566,696,o),
(566,678,qs),
(566,665,o),
(566,616,o),
(567,551,o),
(567,473,o),
(567,431,qs),
(567,376,o),
(567,250,o),
(566,130,o),
(564,25,o),
(562,-8,qs),
(561,-21,o),
(546,-38,o),
(530,-38,qs),
(507,-38,ls),
(495,-38,o),
(476,-53,o),
(476,-61,qs),
(476,-71,o),
(496,-83,o),
(510,-83,qs),
(540,-83,o),
(591,-82,o),
(611,-82,qs),
(639,-82,o),
(698,-84,o),
(708,-84,qs),
(730,-84,o),
(750,-67,o),
(750,-59,qs),
(750,-48,o),
(728,-37,o),
(712,-37,qs),
(634,-37,l),
(634,-20,o),
(634,54,o),
(633,151,o),
(633,264,o),
(632,377,o),
(632,483,o),
(632,524,qs),
(632,568,o),
(632,625,o),
(633,665,o),
(633,693,o),
(633,708,qs),
(633,722,o),
(630,761,o),
(609,796,o),
(565,820,o),
(524,820,qs),
(447,820,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
90 1 0 13 216 0 2 1 0 131 58 2 3 17 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 8 0 0 1 8 0 91 12 10 5 3 3 11 1 4 3 4 87 0 13 13 9 83 20 1 9 9 12 67 18 15 6 3 2 2 1 83 19 14 7 3 1 1 23 67 0 16 16 17 83 0 17 17 16 17 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 8 0 0 1 8 0 91 19 14 7 3 1 18 15 6 3 2 16 1 2 91 12 10 5 3 3 11 1 4 3 4 87 0 13 13 9 83 20 1 9 9 12 67 0 16 16 17 83 0 17 17 16 17 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 12 3 11 3 12 96 0 8 0 0 1 8 0 91 19 14 7 3 1 18 15 6 3 2 16 1 2 91 0 11 4 3 11 79 10 5 2 3 0 4 3 4 87 0 13 13 9 83 20 1 9 9 12 67 0 16 16 17 83 0 17 17 16 17 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 8 0 0 1 8 0 91 19 14 7 3 1 18 15 6 3 2 16 1 2 91 12 10 2 5 0 11 4 5 11 91 0 3 0 4 3 4 87 0 13 13 9 83 20 1 9 9 12 67 0 16 16 17 83 0 17 17 16 17 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 8 0 0 1 8 0 91 19 14 7 3 1 18 15 6 3 2 16 1 2 91 12 10 2 5 0 11 4 5 11 91 0 3 0 4 3 4 87 0 13 13 9 83 20 1 9 9 14 67 0 16 16 17 83 0 17 17 16 17 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
92 91 214 211 208 205 186 175 172 170 168 161 157 154 147 145 129 126 122 114 110 108 91 220 92 220 40 52 61 23 212 35 118 53 34 21 24
CALL[ ]	/* CallFunction */";
};
width = 711;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(403,784,o),
(380,749,q),
(368,759,o),
(333,775,o),
(304,775,qs),
(258,775,o),
(194,741,o),
(151,687,o),
(125,621,o),
(112,558,o),
(108,505,o),
(108,491,qs),
(108,480,o),
(104,463,o),
(96,463,qs),
(32,463,ls),
(14,463,o),
(0,460,o),
(0,452,qs),
(0,446,o),
(12,435,o),
(29,435,qs),
(96,435,ls),
(104,435,o),
(109,423,o),
(109,409,qs),
(109,361,o),
(111,265,o),
(111,217,qs),
(111,195,o),
(110,133,o),
(109,68,o),
(106,6,o),
(105,-15,qs),
(104,-26,o),
(71,-33,o),
(31,-36,qs),
(20,-37,o),
(-1,-41,o),
(-1,-49,qs),
(-1,-57,o),
(19,-60,o),
(33,-60,qs),
(44,-60,o),
(90,-57,o),
(117,-57,qs),
(140,-57,o),
(188,-59,o),
(206,-59,qs),
(232,-59,o),
(248,-52,o),
(248,-45,qs),
(248,-30,o),
(219,-30,qs),
(151,-30,l),
(151,424,ls),
(151,429,o),
(157,435,o),
(169,435,qs),
(173,435,o),
(212,434,o),
(261,434,o),
(310,433,o),
(324,433,q),
(324,430,o),
(324,420,o),
(325,394,o),
(325,344,o),
(325,300,qs),
(325,265,o),
(325,181,o),
(324,107,o),
(322,52,o),
(321,45,qs),
(320,40,o),
(314,33,o),
(300,28,o),
(276,25,o),
(257,24,qs),
(246,23,o),
(225,19,o),
(225,11,qs),
(225,3,o),
(245,0,o),
(259,0,qs),
(271,0,o),
(319,3,o),
(351,3,qs),
(360,3,o),
(389,2,o),
(420,2,o),
(449,1,o),
(457,1,qs),
(483,1,o),
(500,7,o),
(500,13,qs),
(500,28,o),
(471,28,qs),
(362,28,l),
(362,424,ls),
(362,429,o),
(368,435,o),
(378,435,qs),
(391,435,o),
(435,433,o),
(448,433,qs),
(459,433,o),
(475,439,o),
(475,448,qs),
(475,454,o),
(460,463,o),
(448,463,qs),
(370,463,ls),
(366,463,o),
(362,471,o),
(362,484,qs),
(362,511,o),
(364,580,o),
(373,650,o),
(393,716,o),
(430,768,o),
(486,799,o),
(527,799,qs),
(553,799,o),
(582,778,o),
(595,745,o),
(597,704,o),
(597,683,qs),
(597,670,o),
(597,621,o),
(598,556,o),
(598,478,o),
(598,436,qs),
(598,381,o),
(598,255,o),
(597,135,o),
(595,30,o),
(593,-3,qs),
(592,-17,o),
(559,-31,o),
(531,-33,qs),
(508,-34,ls),
(487,-35,o),
(487,-47,qs),
(487,-58,o),
(511,-58,qs),
(527,-58,o),
(553,-58,o),
(577,-57,o),
(603,-57,o),
(618,-57,qs),
(638,-57,o),
(697,-59,o),
(718,-59,qs),
(729,-59,o),
(741,-49,o),
(741,-44,qs),
(741,-38,o),
(729,-32,o),
(713,-32,qs),
(635,-32,l),
(635,-12,o),
(635,61,o),
(634,156,o),
(634,266,o),
(633,382,o),
(633,496,o),
(633,547,qs),
(633,607,o),
(634,690,o),
(634,713,qs),
(634,724,o),
(631,762,o),
(612,798,o),
(570,825,o),
(532,825,qs),
(477,825,o)
);
},
{
closed = 1;
nodes = (
(155,463,o),
(151,471,o),
(151,484,qs),
(151,495,o),
(152,543,o),
(161,602,o),
(180,664,o),
(215,716,o),
(269,749,o),
(309,749,qs),
(333,749,o),
(360,736,o),
(368,727,q),
(338,663,o),
(323,529,o),
(323,463,q),
(159,463,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
180 1 5 16 102 1 7 6 142 38 2 1 8 3 66 174 1 16 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 15 0 16 5 15 16 91 11 3 2 1 12 1 2 1 2 87 0 4 4 0 83 18 1 0 0 12 67 13 10 2 6 6 5 83 19 17 14 3 5 5 23 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 15 0 16 5 15 16 91 19 17 14 3 5 13 10 2 6 7 5 6 91 11 3 2 1 12 1 2 1 2 87 0 4 4 0 83 18 1 0 0 12 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 15 0 16 5 15 16 91 19 17 14 3 5 13 10 2 6 7 5 6 91 11 3 2 1 12 1 2 1 2 87 0 4 4 0 83 18 1 0 0 14 67 9 1 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 46 values pushed */
177 177 1 0 177 193 177 192 184 182 172 170 162 159 155 152 134 126 123 121 118 112 98 97 92 82 79 77 74 69 65 62 54 52 35 33 31 21 17 15 0 176 1 176 20 15
CALL[ ]	/* CallFunction */";
};
width = 723;
}
);
note = f_f_l;
unicode = 64260;
},
{
glyphname = f_h;
kernLeft = f;
kernRight = c_h;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(191,795,o),
(136,745,o),
(103,680,o),
(85,609,o),
(78,537,o),
(77,506,qs),
(76,492,o),
(71,479,o),
(63,479,qs),
(40,479,ls),
(22,479,o),
(-1,469,o),
(-1,452,qs),
(-1,438,o),
(13,411,o),
(37,411,qs),
(63,411,ls),
(71,411,o),
(76,399,o),
(76,385,qs),
(76,300,ls),
(76,265,o),
(76,193,o),
(75,131,o),
(73,85,o),
(72,77,qs),
(71,69,o),
(65,56,o),
(59,56,qs),
(38,55,o),
(18,46,o),
(18,27,qs),
(18,8,o),
(44,0,o),
(61,0,qs),
(72,0,o),
(123,3,o),
(150,3,qs),
(173,3,o),
(200,1,o),
(218,1,qs),
(244,1,o),
(261,18,o),
(261,30,qs),
(261,48,o),
(246,60,o),
(231,60,qs),
(164,60,l),
(164,400,ls),
(164,411,o),
(182,411,qs),
(186,411,o),
(205,410,o),
(225,410,o),
(243,409,o),
(248,409,qs),
(261,409,o),
(285,424,o),
(285,447,qs),
(285,464,o),
(264,479,o),
(250,479,qs),
(172,479,ls),
(164,479,o),
(164,484,qs),
(164,505,o),
(166,561,o),
(175,620,o),
(194,678,o),
(229,723,o),
(283,751,o),
(322,751,qs),
(330,751,o),
(347,740,o),
(347,725,qs),
(347,574,ls),
(347,512,o),
(348,436,qs),
(348,389,o),
(346,288,o),
(344,197,o),
(342,124,o),
(341,104,qs),
(340,80,o),
(332,62,o),
(323,62,qs),
(318,62,o),
(306,47,o),
(306,35,qs),
(306,21,o),
(324,0,o),
(342,0,qs),
(364,0,o),
(388,3,o),
(411,3,qs),
(434,3,o),
(478,0,o),
(507,0,qs),
(515,0,o),
(532,16,o),
(532,30,qs),
(532,50,o),
(508,64,o),
(485,64,qs),
(432,64,l),
(432,172,ls),
(432,203,o),
(448,267,o),
(482,318,o),
(535,351,o),
(573,351,qs),
(595,351,o),
(623,335,o),
(639,313,o),
(646,290,o),
(647,283,qs),
(649,266,o),
(651,218,o),
(653,170,o),
(653,131,o),
(653,123,qs),
(653,119,o),
(652,98,o),
(652,71,o),
(651,43,o),
(651,32,qs),
(651,14,o),
(644,1,o),
(634,1,qs),
(621,1,o),
(597,-11,o),
(597,-34,qs),
(597,-45,o),
(611,-61,o),
(628,-61,qs),
(635,-61,o),
(657,-60,o),
(682,-59,o),
(708,-58,o),
(719,-58,qs),
(729,-58,o),
(758,-59,o),
(787,-60,o),
(813,-61,o),
(821,-61,qs),
(836,-61,o),
(850,-46,o),
(850,-34,qs),
(850,-11,o),
(822,0,o),
(796,0,qs),
(744,0,l),
(744,176,ls),
(744,215,o),
(743,267,o),
(740,293,qs),
(738,311,o),
(726,358,o),
(696,400,o),
(645,428,o),
(604,428,qs),
(550,428,o),
(460,385,o),
(434,337,q),
(434,420,o),
(435,538,o),
(436,617,o),
(437,665,o),
(438,693,o),
(439,707,o),
(439,713,qs),
(439,726,o),
(435,764,o),
(413,800,o),
(368,825,o),
(326,825,qs),
(270,825,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
30 0 1 40
CALL[ ]	/* CallFunction */";
};
width = 830;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(156,760,o),
(110,663,o),
(95,552,o),
(94,506,qs),
(93,491,o),
(89,473,o),
(80,473,qs),
(36,473,ls),
(18,473,o),
(-1,466,o),
(-1,452,qs),
(-1,441,o),
(16,420,o),
(33,420,qs),
(80,420,ls),
(88,420,o),
(93,408,o),
(93,394,qs),
(93,300,ls),
(93,268,o),
(93,191,o),
(92,122,o),
(90,71,o),
(89,65,qs),
(88,54,o),
(76,47,o),
(55,44,qs),
(50,43,o),
(37,43,o),
(26,40,o),
(18,31,o),
(18,21,qs),
(18,13,o),
(43,0,o),
(57,0,qs),
(68,0,o),
(119,3,o),
(146,3,qs),
(169,3,o),
(196,1,o),
(214,1,qs),
(240,1,o),
(257,17,o),
(257,24,qs),
(257,40,o),
(242,48,o),
(227,48,qs),
(160,48,l),
(160,409,ls),
(160,420,o),
(178,420,qs),
(182,420,o),
(201,419,o),
(221,419,o),
(239,418,o),
(244,418,qs),
(255,418,o),
(278,430,o),
(278,447,qs),
(278,461,o),
(256,473,o),
(246,473,qs),
(168,473,ls),
(160,473,o),
(160,484,qs),
(160,506,o),
(162,566,o),
(171,629,o),
(190,691,o),
(225,739,o),
(279,769,o),
(318,769,qs),
(364,769,o),
(364,725,qs),
(364,574,ls),
(364,512,o),
(365,436,qs),
(365,387,o),
(363,283,o),
(360,188,o),
(358,113,o),
(358,92,qs),
(358,69,o),
(346,54,o),
(332,52,q),
(329,50,o),
(319,50,o),
(310,47,o),
(303,35,o),
(303,21,qs),
(303,14,o),
(320,0,o),
(338,0,qs),
(360,0,o),
(384,3,o),
(407,3,qs),
(430,3,o),
(494,0,o),
(523,0,qs),
(531,0,o),
(546,18,o),
(546,24,qs),
(546,44,o),
(517,52,o),
(501,52,qs),
(428,52,l),
(428,180,ls),
(428,214,o),
(446,282,o),
(484,336,o),
(540,369,o),
(578,369,qs),
(604,369,o),
(636,351,o),
(655,324,o),
(663,295,o),
(664,285,qs),
(666,267,o),
(668,219,o),
(670,173,o),
(670,133,o),
(670,123,qs),
(670,114,o),
(670,85,o),
(669,55,o),
(668,28,o),
(667,20,qs),
(667,3,o),
(665,-9,o),
(662,-11,q),
(651,-13,o),
(628,-14,o),
(608,-19,o),
(595,-30,o),
(595,-40,qs),
(595,-45,o),
(609,-61,o),
(626,-61,qs),
(640,-61,o),
(693,-58,o),
(715,-58,qs),
(725,-58,o),
(753,-59,o),
(781,-60,o),
(806,-61,o),
(814,-61,qs),
(829,-61,o),
(843,-46,o),
(843,-40,qs),
(843,-20,o),
(809,-12,o),
(789,-12,qs),
(740,-12,l),
(740,176,ls),
(740,215,o),
(739,267,o),
(736,293,qs),
(734,311,o),
(722,358,o),
(692,400,o),
(641,428,o),
(600,428,qs),
(546,428,o),
(460,375,o),
(434,327,q),
(434,410,o),
(434,529,o),
(434,611,o),
(435,661,o),
(435,692,o),
(435,707,o),
(435,713,qs),
(435,726,o),
(431,764,o),
(409,800,o),
(364,825,o),
(322,825,qs),
(246,825,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
30 0 1 40
CALL[ ]	/* CallFunction */";
};
width = 824;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(173,760,o),
(133,663,o),
(120,552,o),
(119,506,qs),
(118,486,o),
(114,463,o),
(105,463,qs),
(31,463,ls),
(13,463,o),
(-1,460,o),
(-1,452,qs),
(-1,446,o),
(11,435,o),
(28,435,qs),
(105,435,ls),
(113,435,o),
(118,423,o),
(118,409,qs),
(118,300,ls),
(118,265,o),
(118,181,o),
(117,107,o),
(115,52,o),
(114,45,qs),
(113,39,o),
(108,33,o),
(94,28,o),
(70,25,o),
(50,24,qs),
(39,23,o),
(18,19,o),
(18,11,qs),
(18,3,o),
(38,0,o),
(52,0,qs),
(63,0,o),
(114,3,o),
(141,3,qs),
(164,3,o),
(191,1,o),
(209,1,qs),
(235,1,o),
(251,7,o),
(251,14,qs),
(251,28,o),
(222,28,qs),
(155,28,l),
(155,424,ls),
(155,435,o),
(173,435,qs),
(177,435,o),
(196,434,o),
(216,434,o),
(234,433,o),
(239,433,qs),
(250,433,o),
(268,439,o),
(268,447,qs),
(268,455,o),
(251,463,o),
(241,463,qs),
(163,463,ls),
(159,463,o),
(155,471,o),
(155,484,qs),
(155,508,o),
(157,574,o),
(166,644,o),
(185,712,o),
(220,766,o),
(274,799,o),
(313,799,qs),
(357,799,o),
(389,758,o),
(389,725,qs),
(389,574,ls),
(389,512,o),
(390,436,qs),
(390,384,o),
(388,274,o),
(386,174,o),
(384,94,o),
(383,72,qs),
(382,49,o),
(371,34,o),
(357,32,qs),
(350,31,o),
(330,29,o),
(312,26,o),
(299,18,o),
(299,11,qs),
(299,0,o),
(333,0,qs),
(355,0,o),
(379,3,o),
(402,3,qs),
(425,3,o),
(489,0,o),
(518,0,qs),
(526,0,o),
(538,8,o),
(538,14,qs),
(538,23,o),
(512,32,o),
(496,32,qs),
(423,32,l),
(423,193,ls),
(423,233,o),
(445,308,o),
(487,365,o),
(547,399,o),
(585,399,qs),
(618,399,o),
(658,375,o),
(679,340,o),
(687,302,o),
(689,288,qs),
(691,270,o),
(693,221,o),
(695,174,o),
(695,133,o),
(695,123,qs),
(695,112,o),
(695,78,o),
(694,42,o),
(693,9,o),
(692,0,qs),
(690,-17,o),
(677,-29,o),
(657,-31,qs),
(646,-32,o),
(624,-34,o),
(604,-39,o),
(592,-45,o),
(592,-50,qs),
(592,-61,o),
(623,-61,qs),
(637,-61,o),
(688,-58,o),
(710,-58,qs),
(731,-58,o),
(788,-61,o),
(804,-61,qs),
(833,-61,o),
(833,-50,qs),
(833,-40,o),
(799,-32,o),
(779,-32,qs),
(735,-32,l),
(735,176,ls),
(735,215,o),
(734,267,o),
(731,293,qs),
(729,311,o),
(717,358,o),
(687,400,o),
(636,428,o),
(595,428,qs),
(541,428,o),
(455,375,o),
(429,327,q),
(429,410,o),
(429,529,o),
(429,611,o),
(430,661,o),
(430,692,o),
(430,707,o),
(430,713,qs),
(430,726,o),
(426,764,o),
(404,800,o),
(359,825,o),
(317,825,qs),
(251,825,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
29 0 1 40
CALL[ ]	/* CallFunction */";
};
width = 815;
}
);
note = f_h;
},
{
glyphname = f_i;
kernLeft = f;
kernRight = f_f_i;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(420,487,o),
(397,487,qs),
(172,487,ls),
(167,487,o),
(164,490,o),
(164,498,qs),
(164,526,o),
(173,611,o),
(198,690,o),
(244,747,o),
(281,747,qs),
(324,747,o),
(356,714,o),
(356,697,qs),
(356,677,o),
(343,659,o),
(328,646,o),
(316,633,o),
(316,618,qs),
(316,601,o),
(341,570,o),
(378,570,qs),
(419,570,o),
(449,621,o),
(449,656,qs),
(449,708,o),
(424,774,o),
(383,812,o),
(333,825,o),
(309,825,qs),
(255,825,o),
(179,796,o),
(127,748,o),
(97,684,o),
(81,614,o),
(76,541,o),
(76,509,qs),
(76,496,o),
(71,487,o),
(63,487,qs),
(40,487,ls),
(22,487,o),
(-3,470,o),
(-3,450,qs),
(-3,411,o),
(37,411,qs),
(63,411,ls),
(71,411,o),
(76,399,o),
(76,385,qs),
(76,300,ls),
(76,268,o),
(75,199,o),
(73,136,o),
(72,87,o),
(71,77,qs),
(70,68,o),
(66,58,o),
(59,56,qs),
(42,53,o),
(18,40,o),
(18,27,qs),
(18,10,o),
(44,0,o),
(61,0,qs),
(72,0,o),
(123,3,o),
(150,3,qs),
(173,3,o),
(222,1,o),
(240,1,qs),
(266,1,o),
(285,15,o),
(285,30,qs),
(285,60,o),
(253,60,qs),
(171,60,l),
(169,72,o),
(162,121,o),
(162,155,qs),
(162,161,o),
(162,201,o),
(163,254,o),
(163,312,o),
(164,362,o),
(164,397,o),
(164,400,qs),
(164,411,o),
(182,411,qs),
(187,411,o),
(209,410,o),
(234,410,o),
(260,409,o),
(268,409,qs),
(272,409,o),
(289,410,o),
(308,410,o),
(323,411,o),
(325,411,qs),
(336,411,o),
(342,400,o),
(343,394,qs),
(344,387,o),
(345,335,o),
(346,263,o),
(347,181,o),
(347,145,qs),
(347,80,o),
(345,10,o),
(343,-12,qs),
(342,-21,o),
(323,-28,o),
(297,-33,qs),
(289,-35,o),
(284,-50,o),
(284,-58,qs),
(284,-78,o),
(321,-91,o),
(359,-91,qs),
(524,-91,ls),
(537,-91,o),
(554,-77,o),
(554,-63,qs),
(554,-46,o),
(529,-31,o),
(506,-31,qs),
(432,-31,l),
(432,-21,o),
(431,8,o),
(431,38,o),
(431,66,o),
(431,77,qs),
(431,112,o),
(433,204,o),
(434,300,o),
(436,393,o),
(436,428,qs),
(436,454,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
35 1 3 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 8 9 6 9 8 6 104 0 0 0 1 0 1 87 0 9 9 7 83 0 7 7 12 67 5 1 2 2 6 83 10 1 6 6 23 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 8 9 6 9 8 6 104 10 1 6 5 1 2 3 6 2 91 0 0 0 1 0 1 87 0 9 9 7 83 0 7 7 12 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 8 9 6 9 8 6 104 10 1 6 5 1 2 3 6 2 91 0 0 0 1 0 1 87 0 9 9 7 83 0 7 7 14 67 0 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
136 133 127 125 116 114 108 106 98 95 92 89 73 65 62 60 49 37 52 42 11 17
CALL[ ]	/* CallFunction */";
};
width = 530;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(419,478,o),
(400,478,qs),
(168,478,ls),
(163,478,o),
(160,484,o),
(160,498,qs),
(160,518,o),
(162,574,o),
(171,633,o),
(187,691,o),
(215,737,o),
(257,765,o),
(287,765,qs),
(311,765,o),
(344,753,o),
(364,733,o),
(373,709,o),
(373,697,qs),
(373,677,o),
(360,658,o),
(345,644,o),
(333,631,o),
(333,618,qs),
(333,601,o),
(357,575,o),
(386,575,qs),
(404,575,o),
(426,588,o),
(440,611,o),
(445,640,o),
(445,656,qs),
(445,708,o),
(420,774,o),
(379,812,o),
(329,825,o),
(305,825,qs),
(256,825,o),
(187,796,o),
(140,748,o),
(113,684,o),
(98,614,o),
(93,541,o),
(93,509,qs),
(93,494,o),
(89,478,o),
(80,478,qs),
(36,478,ls),
(18,478,o),
(-2,466,o),
(-2,451,qs),
(-2,438,o),
(16,420,o),
(33,420,qs),
(80,420,ls),
(88,420,o),
(93,408,o),
(93,394,qs),
(93,300,ls),
(93,267,o),
(93,193,o),
(92,127,o),
(90,76,o),
(88,65,qs),
(86,54,o),
(78,47,o),
(55,44,qs),
(44,42,o),
(18,35,o),
(18,21,qs),
(18,5,o),
(43,0,o),
(57,0,qs),
(68,0,o),
(119,3,o),
(146,3,qs),
(157,3,o),
(188,2,o),
(219,2,o),
(247,1,o),
(256,1,qs),
(282,1,o),
(300,12,o),
(300,24,qs),
(300,48,o),
(269,48,qs),
(167,48,l),
(166,53,o),
(158,117,o),
(158,155,qs),
(158,162,o),
(158,203,o),
(159,257,o),
(159,317,o),
(160,369,o),
(160,406,o),
(160,409,qs),
(160,420,o),
(178,420,qs),
(183,420,o),
(205,419,o),
(230,419,o),
(256,418,o),
(264,418,qs),
(270,418,o),
(294,419,o),
(319,419,o),
(340,420,o),
(342,420,qs),
(353,420,o),
(359,409,o),
(360,403,qs),
(361,396,o),
(362,342,o),
(363,268,o),
(364,183,o),
(364,145,qs),
(364,88,o),
(362,8,o),
(359,-12,q),
(359,-24,o),
(343,-30,o),
(317,-33,qs),
(305,-35,o),
(283,-43,o),
(283,-57,qs),
(283,-65,o),
(296,-74,o),
(317,-78,o),
(343,-79,o),
(355,-79,qs),
(516,-79,ls),
(526,-79,o),
(546,-72,o),
(546,-57,qs),
(546,-43,o),
(521,-31,o),
(498,-31,qs),
(428,-31,l),
(428,-21,o),
(427,8,o),
(427,38,o),
(427,66,o),
(427,77,qs),
(427,112,o),
(429,204,o),
(430,300,o),
(432,393,o),
(432,428,qs),
(432,451,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
37 1 3 2 29 1 0 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 8 9 6 9 8 6 104 0 0 0 1 0 1 87 0 9 9 7 83 0 7 7 12 67 5 1 2 2 6 83 10 1 6 6 23 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 8 9 6 9 8 6 104 10 1 6 5 1 2 3 6 2 91 0 0 0 1 0 1 87 0 9 9 7 83 0 7 7 12 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 8 9 6 9 8 6 104 10 1 6 5 1 2 3 6 2 91 0 0 0 1 0 1 87 0 9 9 7 83 0 7 7 14 67 0 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
147 144 136 134 123 121 113 111 103 100 96 93 77 67 64 62 51 39 68 42 11 17
CALL[ ]	/* CallFunction */";
};
width = 524;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(417,463,o),
(405,463,qs),
(163,463,ls),
(158,463,o),
(155,475,o),
(155,498,qs),
(155,521,o),
(156,582,o),
(164,648,o),
(181,713,o),
(212,764,o),
(261,795,o),
(296,795,qs),
(322,795,o),
(361,778,o),
(386,750,o),
(398,715,o),
(398,697,qs),
(398,677,o),
(385,658,o),
(370,644,o),
(358,631,o),
(358,618,qs),
(358,601,o),
(381,583,o),
(398,583,qs),
(424,583,o),
(440,624,o),
(440,656,qs),
(440,708,o),
(415,774,o),
(374,812,o),
(324,825,o),
(300,825,qs),
(237,825,o),
(165,763,o),
(129,669,o),
(119,558,o),
(118,509,qs),
(118,487,o),
(114,463,o),
(105,463,qs),
(31,463,ls),
(13,463,o),
(-1,460,o),
(-1,452,qs),
(-1,446,o),
(11,435,o),
(28,435,qs),
(105,435,ls),
(113,435,o),
(118,423,o),
(118,409,qs),
(118,300,ls),
(118,264,o),
(118,185,o),
(117,113,o),
(115,57,o),
(113,45,qs),
(112,39,o),
(108,33,o),
(96,28,o),
(71,25,o),
(50,24,qs),
(39,23,o),
(18,19,o),
(18,11,qs),
(18,3,o),
(38,0,o),
(52,0,qs),
(63,0,o),
(114,3,o),
(141,3,qs),
(152,3,o),
(183,2,o),
(214,2,o),
(242,1,o),
(251,1,qs),
(277,1,o),
(293,7,o),
(293,14,qs),
(293,28,o),
(264,28,qs),
(162,28,l),
(162,31,o),
(159,54,o),
(156,90,o),
(153,133,o),
(153,155,qs),
(153,162,o),
(153,206,o),
(154,263,o),
(154,327,o),
(155,382,o),
(155,420,o),
(155,424,qs),
(155,435,o),
(173,435,qs),
(178,435,o),
(200,434,o),
(225,434,o),
(251,433,o),
(259,433,qs),
(267,433,o),
(300,434,o),
(335,434,o),
(364,435,o),
(367,435,qs),
(378,435,o),
(384,426,o),
(385,418,qs),
(386,410,o),
(387,353,o),
(388,275,o),
(389,185,o),
(389,145,qs),
(389,88,o),
(387,8,o),
(384,-12,qs),
(382,-24,o),
(370,-31,o),
(345,-33,qs),
(322,-35,o),
(281,-39,o),
(281,-47,qs),
(281,-56,o),
(326,-59,o),
(350,-59,qs),
(505,-59,ls),
(515,-59,o),
(535,-55,o),
(535,-47,qs),
(535,-38,o),
(510,-31,o),
(487,-31,qs),
(423,-31,l),
(423,-21,o),
(422,8,o),
(422,38,o),
(422,66,o),
(422,77,qs),
(422,112,o),
(424,204,o),
(425,300,o),
(427,393,o),
(427,428,qs),
(427,444,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 9 10 7 10 9 7 104 0 0 0 1 0 1 87 0 10 10 8 83 0 8 8 12 67 6 1 2 2 7 83 11 1 7 7 23 67 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 9 10 7 10 9 7 104 11 1 7 6 1 2 3 7 2 91 0 0 0 1 0 1 87 0 10 10 8 83 0 8 8 12 67 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 9 10 7 10 9 7 104 11 1 7 6 1 2 3 7 2 91 0 0 0 1 0 1 87 0 10 10 8 83 0 8 8 14 67 5 1 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
145 142 134 132 121 119 113 111 105 102 98 95 83 82 77 67 64 62 49 37 68 42 12 17
CALL[ ]	/* CallFunction */";
};
width = 516;
}
);
note = f_i;
unicode = 64257;
},
{
glyphname = f_j;
kernLeft = f;
kernRight = dotlessj;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(207,-49,o),
(189,-49,qs),
(151,-49,o),
(99,-96,o),
(99,-134,qs),
(99,-154,o),
(113,-195,o),
(150,-228,o),
(216,-249,o),
(268,-249,qs),
(294,-249,o),
(346,-230,o),
(389,-183,o),
(421,-104,o),
(427,-44,qs),
(430,-14,o),
(433,42,o),
(433,61,qs),
(433,68,o),
(433,124,o),
(434,200,o),
(435,286,o),
(436,362,o),
(436,417,o),
(436,425,qs),
(436,460,o),
(424,487,o),
(407,487,qs),
(177,487,ls),
(172,487,o),
(169,490,o),
(169,498,qs),
(169,517,o),
(170,569,o),
(178,624,o),
(195,678,o),
(226,721,o),
(275,747,o),
(310,747,qs),
(336,747,o),
(361,716,o),
(361,697,qs),
(361,677,o),
(348,658,o),
(333,644,o),
(321,631,o),
(321,618,qs),
(321,601,o),
(347,567,o),
(378,567,qs),
(420,567,o),
(454,615,o),
(454,656,qs),
(454,708,o),
(429,774,o),
(388,812,o),
(338,825,o),
(314,825,qs),
(234,825,o),
(141,763,o),
(95,669,o),
(82,558,o),
(81,509,qs),
(81,498,o),
(77,487,o),
(68,487,qs),
(45,487,ls),
(27,487,o),
(1,476,o),
(1,452,qs),
(1,438,o),
(25,411,o),
(42,411,qs),
(68,411,ls),
(76,411,o),
(81,399,o),
(81,385,qs),
(81,300,ls),
(81,244,o),
(81,169,o),
(79,119,o),
(77,88,o),
(76,77,qs),
(76,69,o),
(64,59,o),
(47,56,qs),
(39,54,o),
(15,43,o),
(15,27,qs),
(15,11,o),
(35,0,o),
(49,0,qs),
(55,0,o),
(79,1,o),
(109,2,o),
(141,3,o),
(155,3,qs),
(178,3,o),
(221,1,o),
(239,1,qs),
(265,1,o),
(281,16,o),
(281,30,qs),
(281,60,o),
(252,60,qs),
(173,60,l),
(173,62,o),
(171,81,o),
(169,108,o),
(167,142,o),
(167,159,qs),
(167,165,o),
(167,204,o),
(168,255,o),
(168,312,o),
(169,361,o),
(169,395,o),
(169,398,qs),
(169,411,o),
(187,411,qs),
(195,411,o),
(223,410,o),
(254,409,o),
(283,408,o),
(294,408,qs),
(323,408,ls),
(348,408,o),
(348,387,qs),
(348,278,ls),
(348,251,o),
(347,167,o),
(345,76,o),
(342,-10,o),
(340,-40,qs),
(335,-117,o),
(292,-178,o),
(258,-178,qs),
(231,-178,o),
(184,-158,o),
(184,-143,qs),
(184,-132,o),
(192,-125,o),
(200,-124,qs),
(213,-122,o),
(237,-110,o),
(237,-89,qs),
(237,-70,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
135 87 1 40
CALL[ ]	/* CallFunction */";
};
width = 494;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(201,-53,o),
(190,-53,qs),
(159,-53,o),
(114,-91,o),
(114,-120,qs),
(114,-144,o),
(128,-186,o),
(163,-217,o),
(221,-236,o),
(265,-236,qs),
(290,-236,o),
(341,-220,o),
(384,-177,o),
(415,-103,o),
(421,-44,qs),
(422,-34,o),
(424,-7,o),
(426,23,o),
(427,51,o),
(427,61,qs),
(427,68,o),
(427,124,o),
(428,200,o),
(429,286,o),
(430,362,o),
(430,417,o),
(430,425,qs),
(430,451,o),
(423,478,o),
(403,478,qs),
(171,478,ls),
(166,478,o),
(163,484,o),
(163,498,qs),
(163,518,o),
(164,574,o),
(172,633,o),
(189,691,o),
(220,737,o),
(269,765,o),
(304,765,qs),
(341,765,o),
(376,722,o),
(376,697,qs),
(376,677,o),
(363,658,o),
(348,644,o),
(336,631,o),
(336,618,qs),
(336,601,o),
(359,573,o),
(386,573,qs),
(421,573,o),
(448,615,o),
(448,656,qs),
(448,708,o),
(423,774,o),
(382,812,o),
(332,825,o),
(308,825,qs),
(259,825,o),
(190,796,o),
(143,748,o),
(116,684,o),
(101,614,o),
(97,541,o),
(96,509,qs),
(96,494,o),
(92,478,o),
(83,478,qs),
(39,478,ls),
(21,478,o),
(0,470,o),
(0,452,qs),
(0,441,o),
(19,420,o),
(36,420,qs),
(83,420,ls),
(91,420,o),
(96,408,o),
(96,394,qs),
(96,300,ls),
(96,267,o),
(96,193,o),
(95,127,o),
(93,76,o),
(91,65,qs),
(90,54,o),
(70,47,o),
(48,44,qs),
(37,42,o),
(16,35,o),
(16,21,qs),
(16,8,o),
(36,0,o),
(50,0,qs),
(56,0,o),
(78,1,o),
(105,2,o),
(135,3,o),
(149,3,qs),
(160,3,o),
(191,2,o),
(223,2,o),
(252,1,o),
(261,1,qs),
(287,1,o),
(303,13,o),
(303,24,qs),
(303,48,o),
(274,48,qs),
(168,48,l),
(168,50,o),
(165,71,o),
(163,103,o),
(161,140,o),
(161,159,qs),
(161,166,o),
(161,206,o),
(162,260,o),
(162,319,o),
(163,370,o),
(163,406,o),
(163,409,qs),
(163,420,o),
(181,420,qs),
(189,420,o),
(217,419,o),
(248,418,o),
(277,417,o),
(288,417,qs),
(338,417,ls),
(363,417,o),
(363,396,qs),
(363,278,ls),
(363,257,o),
(362,172,o),
(360,76,o),
(357,-14,o),
(355,-40,qs),
(352,-78,o),
(337,-130,o),
(313,-161,o),
(282,-174,o),
(263,-174,qs),
(178,-174,o),
(178,-143,qs),
(178,-132,o),
(186,-125,o),
(194,-124,qs),
(207,-122,o),
(231,-110,o),
(231,-89,qs),
(231,-70,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
142 92 1 40
CALL[ ]	/* CallFunction */";
};
width = 490;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(202,-59,o),
(191,-59,qs),
(171,-59,o),
(135,-91,o),
(135,-120,qs),
(135,-140,o),
(148,-176,o),
(177,-204,o),
(223,-221,o),
(256,-221,qs),
(282,-221,o),
(333,-206,o),
(375,-167,o),
(406,-98,o),
(412,-44,qs),
(413,-34,o),
(415,-7,o),
(417,23,o),
(418,51,o),
(418,61,qs),
(418,68,o),
(418,124,o),
(419,200,o),
(420,286,o),
(421,362,o),
(421,417,o),
(421,425,qs),
(421,444,o),
(414,463,o),
(398,463,qs),
(162,463,ls),
(157,463,o),
(154,475,o),
(154,498,qs),
(154,521,o),
(155,582,o),
(163,648,o),
(180,713,o),
(211,764,o),
(260,795,o),
(295,795,qs),
(321,795,o),
(360,778,o),
(385,750,o),
(397,715,o),
(397,697,qs),
(397,677,o),
(384,658,o),
(369,644,o),
(357,631,o),
(357,618,qs),
(357,601,o),
(380,583,o),
(397,583,qs),
(423,583,o),
(439,624,o),
(439,656,qs),
(439,708,o),
(414,774,o),
(373,812,o),
(323,825,o),
(299,825,qs),
(236,825,o),
(164,763,o),
(128,669,o),
(118,558,o),
(117,509,qs),
(117,487,o),
(113,463,o),
(104,463,qs),
(30,463,ls),
(12,463,o),
(-2,460,o),
(-2,452,qs),
(-2,446,o),
(10,435,o),
(27,435,qs),
(104,435,ls),
(112,435,o),
(117,423,o),
(117,409,qs),
(117,300,ls),
(117,264,o),
(117,185,o),
(116,113,o),
(114,57,o),
(112,45,qs),
(111,39,o),
(107,33,o),
(94,28,o),
(70,25,o),
(49,24,qs),
(38,23,o),
(17,19,o),
(17,11,qs),
(17,3,o),
(37,0,o),
(51,0,qs),
(62,0,o),
(113,3,o),
(140,3,qs),
(151,3,o),
(182,2,o),
(213,2,o),
(241,1,o),
(250,1,qs),
(276,1,o),
(292,7,o),
(292,14,qs),
(292,28,o),
(263,28,qs),
(161,28,l),
(161,31,o),
(158,56,o),
(155,92,o),
(152,137,o),
(152,159,qs),
(152,166,o),
(152,209,o),
(153,266,o),
(153,328,o),
(154,383,o),
(154,420,o),
(154,424,qs),
(154,435,o),
(172,435,qs),
(180,435,o),
(208,434,o),
(239,433,o),
(268,432,o),
(279,432,qs),
(359,432,ls),
(384,432,o),
(384,411,qs),
(384,278,ls),
(384,257,o),
(383,172,o),
(381,76,o),
(378,-14,o),
(376,-40,qs),
(372,-82,o),
(352,-140,o),
(321,-174,o),
(279,-189,o),
(254,-189,qs),
(215,-189,o),
(169,-162,o),
(169,-143,qs),
(169,-132,o),
(177,-125,o),
(185,-124,qs),
(198,-122,o),
(222,-110,o),
(222,-89,qs),
(222,-70,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
143 91 1 40
CALL[ ]	/* CallFunction */";
};
width = 484;
}
);
note = f_j;
},
{
glyphname = f_k;
kernLeft = f;
kernRight = c_k;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(378,-90,o),
(393,-90,qs),
(415,-90,o),
(446,-90,o),
(471,-91,o),
(496,-91,o),
(511,-91,qs),
(519,-91,o),
(537,-77,o),
(537,-62,qs),
(537,-45,o),
(515,-32,o),
(486,-32,qs),
(437,-32,l),
(437,55,o),
(438,153,o),
(438,186,q),
(455,205,l),
(462,192,o),
(487,138,o),
(518,73,o),
(553,4,o),
(585,-52,o),
(612,-88,o),
(621,-88,qs),
(736,-88,o),
(837,-79,o),
(837,-59,qs),
(837,-48,o),
(821,-35,o),
(797,-29,o),
(769,-27,o),
(757,-27,qs),
(712,-27,o),
(668,-17,o),
(660,-5,qs),
(651,9,o),
(578,141,o),
(523,259,q),
(551,286,o),
(578,312,o),
(592,328,o),
(604,343,o),
(619,358,qs),
(623,362,o),
(640,370,o),
(650,371,qs),
(709,376,o),
(765,388,o),
(765,408,qs),
(765,416,o),
(749,428,o),
(711,436,o),
(650,440,o),
(604,440,qs),
(554,440,o),
(497,422,o),
(497,398,qs),
(497,386,o),
(508,376,o),
(513,375,qs),
(523,374,ls),
(527,374,o),
(527,371,qs),
(527,370,o),
(517,361,o),
(496,341,o),
(461,307,o),
(436,282,q),
(436,713,ls),
(436,732,o),
(430,772,o),
(408,805,o),
(365,825,o),
(328,825,qs),
(272,825,o),
(191,796,o),
(136,749,o),
(103,688,o),
(85,623,o),
(79,559,o),
(78,532,qs),
(77,505,o),
(71,487,o),
(64,487,qs),
(41,487,ls),
(23,487,o),
(-6,476,o),
(-6,452,qs),
(-6,432,o),
(20,411,o),
(38,411,qs),
(64,411,ls),
(72,411,o),
(77,399,o),
(77,385,qs),
(77,300,ls),
(77,219,o),
(75,100,o),
(73,77,qs),
(73,69,o),
(68,58,o),
(60,56,qs),
(49,54,o),
(25,43,o),
(25,27,qs),
(25,9,o),
(46,0,o),
(62,0,qs),
(73,0,o),
(124,3,o),
(151,3,qs),
(174,3,o),
(213,1,o),
(231,1,qs),
(257,1,o),
(273,15,o),
(273,30,qs),
(273,60,o),
(244,60,qs),
(165,60,l),
(165,400,ls),
(165,411,o),
(183,411,qs),
(187,411,o),
(206,410,o),
(226,410,o),
(244,409,o),
(249,409,qs),
(260,409,o),
(283,424,o),
(283,447,qs),
(283,467,o),
(261,487,o),
(251,487,qs),
(173,487,ls),
(169,487,o),
(165,494,o),
(165,508,qs),
(165,536,o),
(170,619,o),
(200,696,o),
(264,751,o),
(323,751,qs),
(340,751,o),
(349,706,o),
(349,645,qs),
(349,612,o),
(350,547,o),
(351,473,o),
(352,386,o),
(352,332,qs),
(352,282,o),
(352,226,o),
(351,193,o),
(350,174,o),
(349,149,o),
(348,109,o),
(347,71,qs),
(346,36,o),
(343,-4,o),
(335,-24,o),
(321,-31,o),
(310,-32,qs),
(303,-33,o),
(283,-43,o),
(283,-62,qs),
(283,-70,o),
(293,-81,o),
(310,-87,o),
(330,-89,o),
(340,-89,qs),
(348,-89,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
164 96 1 40
CALL[ ]	/* CallFunction */";
};
width = 810;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(368,471,o),
(368,371,qs),
(368,326,o),
(367,261,o),
(366,209,o),
(365,167,o),
(364,124,o),
(363,75,o),
(363,43,qs),
(363,14,o),
(343,-26,o),
(316,-31,qs),
(299,-34,o),
(282,-38,o),
(282,-55,qs),
(282,-69,o),
(308,-78,o),
(325,-78,qs),
(339,-78,o),
(382,-76,o),
(398,-76,qs),
(436,-76,o),
(485,-78,o),
(507,-78,qs),
(519,-78,o),
(536,-70,o),
(536,-56,qs),
(536,-44,o),
(517,-31,o),
(494,-31,qs),
(433,-31,l),
(433,186,l),
(466,218,l),
(472,207,o),
(497,155,o),
(530,90,o),
(566,20,o),
(601,-38,o),
(629,-76,o),
(638,-76,qs),
(739,-75,o),
(826,-68,o),
(826,-51,qs),
(826,-43,o),
(814,-33,o),
(795,-28,o),
(772,-26,o),
(760,-26,qs),
(739,-26,o),
(712,-24,o),
(694,-20,o),
(682,-12,o),
(677,-7,qs),
(666,5,o),
(628,64,o),
(585,142,o),
(541,229,o),
(523,269,q),
(538,282,o),
(558,302,o),
(579,323,o),
(607,349,o),
(629,370,qs),
(640,381,o),
(660,383,qs),
(712,388,o),
(761,398,o),
(761,413,qs),
(761,428,o),
(716,435,o),
(666,435,qs),
(587,435,ls),
(550,435,o),
(510,428,o),
(510,411,qs),
(510,399,o),
(524,388,o),
(535,388,qs),
(539,388,ls),
(548,388,o),
(548,378,qs),
(548,370,o),
(491,319,o),
(432,265,q),
(432,713,ls),
(432,731,o),
(427,770,o),
(406,803,o),
(362,825,o),
(324,825,qs),
(247,825,o),
(157,762,o),
(110,669,o),
(96,565,o),
(95,523,qs),
(94,502,o),
(90,478,o),
(81,478,qs),
(37,478,ls),
(19,478,o),
(-4,470,o),
(-4,452,qs),
(-4,441,o),
(17,420,o),
(34,420,qs),
(81,420,ls),
(89,420,o),
(94,408,o),
(94,394,qs),
(94,300,ls),
(94,267,o),
(94,191,o),
(93,122,o),
(91,71,o),
(90,65,qs),
(89,54,o),
(77,47,o),
(56,44,qs),
(45,42,o),
(22,35,o),
(22,21,qs),
(22,5,o),
(44,0,o),
(58,0,qs),
(69,0,o),
(120,3,o),
(147,3,qs),
(158,3,o),
(189,2,o),
(220,2,o),
(248,1,o),
(257,1,qs),
(283,1,o),
(299,12,o),
(299,24,qs),
(299,48,o),
(270,48,qs),
(161,48,l),
(161,409,ls),
(161,420,o),
(179,420,qs),
(183,420,o),
(202,419,o),
(222,419,o),
(240,418,o),
(245,418,qs),
(256,418,o),
(277,430,o),
(277,447,qs),
(277,463,o),
(257,478,o),
(247,478,qs),
(169,478,ls),
(165,478,o),
(161,485,o),
(161,499,qs),
(161,530,o),
(166,622,o),
(196,708,o),
(260,769,o),
(319,769,qs),
(337,769,o),
(356,755,o),
(365,727,o),
(366,686,o),
(366,659,qs),
(366,608,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
141 75 1 40
CALL[ ]	/* CallFunction */";
};
width = 809;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(488,228,o),
(514,176,o),
(548,111,o),
(587,41,o),
(623,-17,o),
(654,-55,o),
(662,-55,qs),
(741,-55,o),
(810,-51,o),
(810,-38,qs),
(810,-25,o),
(764,-25,qs),
(722,-25,o),
(682,-22,o),
(676,-14,qs),
(644,25,o),
(590,118,o),
(548,201,o),
(521,263,o),
(518,272,q),
(533,285,o),
(545,297,o),
(564,315,o),
(602,351,o),
(643,390,qs),
(654,401,o),
(674,403,qs),
(716,407,o),
(755,413,o),
(755,421,qs),
(755,430,o),
(697,435,o),
(635,435,qs),
(573,435,o),
(526,430,o),
(526,420,qs),
(526,416,o),
(534,409,o),
(546,408,qs),
(580,406,ls),
(592,406,o),
(592,399,qs),
(592,394,o),
(567,365,o),
(522,322,o),
(461,266,o),
(426,236,q),
(426,547,ls),
(426,607,o),
(427,690,o),
(427,713,qs),
(427,727,o),
(424,766,o),
(403,801,o),
(359,825,o),
(318,825,qs),
(273,825,o),
(209,794,o),
(166,743,o),
(139,677,o),
(125,607,o),
(120,537,o),
(119,508,qs),
(118,487,o),
(114,463,o),
(105,463,qs),
(31,463,ls),
(13,463,o),
(-1,460,o),
(-1,452,qs),
(-1,446,o),
(11,435,o),
(28,435,qs),
(105,435,ls),
(113,435,o),
(118,423,o),
(118,409,qs),
(118,300,ls),
(118,265,o),
(118,181,o),
(117,107,o),
(115,52,o),
(114,45,qs),
(113,39,o),
(108,33,o),
(94,28,o),
(70,25,o),
(50,24,qs),
(39,23,o),
(18,19,o),
(18,11,qs),
(18,3,o),
(38,0,o),
(52,0,qs),
(63,0,o),
(114,3,o),
(141,3,qs),
(152,3,o),
(183,2,o),
(214,2,o),
(242,1,o),
(251,1,qs),
(277,1,o),
(293,7,o),
(293,14,qs),
(293,28,o),
(264,28,qs),
(155,28,l),
(155,424,ls),
(155,435,o),
(173,435,qs),
(177,435,o),
(196,434,o),
(216,434,o),
(234,433,o),
(239,433,qs),
(250,433,o),
(268,439,o),
(268,447,qs),
(268,455,o),
(251,463,o),
(241,463,qs),
(163,463,ls),
(159,463,o),
(155,471,o),
(155,484,qs),
(155,508,o),
(157,574,o),
(166,644,o),
(185,712,o),
(220,766,o),
(274,799,o),
(313,799,qs),
(342,799,o),
(373,781,o),
(388,749,o),
(390,707,o),
(390,683,qs),
(390,670,o),
(390,621,o),
(391,556,o),
(391,478,o),
(391,436,qs),
(391,381,o),
(391,255,o),
(390,135,o),
(388,30,o),
(386,-3,qs),
(384,-30,o),
(324,-33,qs),
(301,-34,ls),
(289,-35,o),
(280,-41,o),
(280,-46,qs),
(280,-51,o),
(290,-58,o),
(304,-58,qs),
(334,-58,o),
(385,-57,o),
(405,-57,qs),
(433,-57,o),
(492,-59,o),
(502,-59,qs),
(524,-59,o),
(534,-49,o),
(534,-44,qs),
(534,-38,o),
(522,-32,o),
(506,-32,qs),
(428,-32,l),
(428,-5,o),
(427,112,o),
(427,187,q),
(482,239,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
116 9 1 40
CALL[ ]	/* CallFunction */";
};
width = 808;
}
);
note = f_k;
},
{
glyphname = f_l;
kernLeft = f;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,795,o),
(142,744,o),
(109,678,o),
(91,608,o),
(84,538,o),
(83,508,qs),
(82,495,o),
(76,487,o),
(68,487,qs),
(46,487,ls),
(28,487,o),
(-3,470,o),
(-3,446,qs),
(-3,428,o),
(23,411,o),
(43,411,qs),
(69,411,ls),
(77,411,o),
(82,399,o),
(82,385,qs),
(82,300,ls),
(82,219,o),
(80,100,o),
(78,77,qs),
(78,69,o),
(72,61,o),
(65,58,qs),
(62,57,o),
(46,54,o),
(29,47,o),
(16,36,o),
(16,27,qs),
(16,9,o),
(47,0,o),
(67,0,qs),
(78,0,o),
(129,3,o),
(156,3,qs),
(179,3,o),
(228,1,o),
(246,1,qs),
(272,1,o),
(288,15,o),
(288,30,qs),
(288,60,o),
(259,60,qs),
(170,60,l),
(170,400,ls),
(170,411,o),
(188,411,qs),
(192,411,o),
(211,410,o),
(231,410,o),
(249,409,o),
(254,409,qs),
(265,409,o),
(288,424,o),
(288,447,qs),
(288,467,o),
(266,487,o),
(256,487,qs),
(178,487,ls),
(170,487,o),
(170,490,qs),
(170,521,o),
(175,610,o),
(205,693,o),
(269,751,o),
(328,751,qs),
(345,751,o),
(354,716,o),
(354,683,qs),
(354,670,o),
(354,621,o),
(355,556,o),
(355,478,o),
(355,436,qs),
(355,381,o),
(355,255,o),
(354,135,o),
(352,30,o),
(350,-3,qs),
(349,-16,o),
(344,-33,o),
(339,-33,qs),
(316,-33,ls),
(295,-33,o),
(278,-51,o),
(278,-62,qs),
(278,-75,o),
(300,-90,o),
(319,-90,qs),
(349,-90,o),
(400,-89,o),
(420,-89,qs),
(448,-89,o),
(507,-91,o),
(517,-91,qs),
(543,-91,o),
(566,-69,o),
(566,-60,qs),
(566,-46,o),
(537,-32,o),
(521,-32,qs),
(443,-32,l),
(443,-15,o),
(443,59,o),
(442,156,o),
(442,269,o),
(441,382,o),
(441,488,o),
(441,529,qs),
(441,573,o),
(441,630,o),
(442,670,o),
(442,698,o),
(442,713,qs),
(442,727,o),
(439,766,o),
(418,801,o),
(374,825,o),
(333,825,qs),
(277,825,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
116 1 5 4 98 1 7 6 95 1 8 7 40 1 1 8 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
3 1 1 0 2 1 2 87 0 4 4 0 83 11 1 0 0 12 67 9 1 6 6 5 83 10 1 5 5 23 67 0 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
10 1 5 9 1 6 7 5 6 91 3 1 1 0 2 1 2 87 0 4 4 0 83 11 1 0 0 12 67 0 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
10 1 5 9 1 6 7 5 6 91 3 1 1 0 2 1 2 87 0 4 4 0 83 11 1 0 0 14 67 0 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 114 111 107 104 88 80 77 75 73 66 62 59 54 52 38 35 31 23 19 17 0 122 1 122 12 15
CALL[ ]	/* CallFunction */";
};
width = 543;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(160,759,o),
(113,662,o),
(99,552,o),
(98,508,qs),
(97,494,o),
(92,478,o),
(83,478,qs),
(40,478,ls),
(22,478,o),
(-2,466,o),
(-2,448,qs),
(-2,420,o),
(37,420,qs),
(84,420,ls),
(92,420,o),
(97,408,o),
(97,394,qs),
(97,300,ls),
(97,267,o),
(97,191,o),
(96,122,o),
(94,71,o),
(93,65,qs),
(92,54,o),
(80,48,o),
(59,45,qs),
(54,44,o),
(39,42,o),
(26,36,o),
(17,28,o),
(17,21,qs),
(17,13,o),
(26,5,o),
(39,1,o),
(54,0,o),
(61,0,qs),
(72,0,o),
(123,3,o),
(150,3,qs),
(161,3,o),
(192,2,o),
(223,2,o),
(251,1,o),
(260,1,qs),
(286,1,o),
(302,12,o),
(302,24,qs),
(302,48,o),
(273,48,qs),
(164,48,l),
(164,409,ls),
(164,420,o),
(182,420,qs),
(186,420,o),
(205,419,o),
(225,419,o),
(243,418,o),
(248,418,qs),
(259,418,o),
(280,430,o),
(280,447,qs),
(280,463,o),
(260,478,o),
(250,478,qs),
(172,478,ls),
(164,478,o),
(164,484,qs),
(164,506,o),
(166,565,o),
(175,629,o),
(194,690,o),
(229,739,o),
(283,769,o),
(322,769,qs),
(340,769,o),
(359,755,o),
(368,732,o),
(369,701,o),
(369,683,qs),
(369,670,o),
(369,621,o),
(370,556,o),
(370,478,o),
(370,436,qs),
(370,381,o),
(370,255,o),
(369,135,o),
(367,30,o),
(365,-3,qs),
(364,-16,o),
(349,-33,o),
(333,-33,qs),
(310,-33,ls),
(298,-33,o),
(279,-48,o),
(279,-56,qs),
(279,-66,o),
(299,-78,o),
(313,-78,qs),
(343,-78,o),
(394,-77,o),
(414,-77,qs),
(442,-77,o),
(501,-79,o),
(511,-79,qs),
(533,-79,o),
(553,-62,o),
(553,-54,qs),
(553,-43,o),
(531,-32,o),
(515,-32,qs),
(437,-32,l),
(437,-15,o),
(437,59,o),
(436,156,o),
(436,269,o),
(435,382,o),
(435,488,o),
(435,529,qs),
(435,573,o),
(435,630,o),
(436,670,o),
(436,698,o),
(436,713,qs),
(436,727,o),
(433,766,o),
(412,801,o),
(368,825,o),
(327,825,qs),
(250,825,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
125 1 5 4 40 1 1 8 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
3 1 1 0 2 1 2 87 0 4 4 0 83 11 1 0 0 12 67 9 1 6 6 5 83 10 1 5 5 23 67 0 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
10 1 5 9 1 6 7 5 6 91 3 1 1 0 2 1 2 87 0 4 4 0 83 11 1 0 0 12 67 0 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
10 1 5 9 1 6 7 5 6 91 3 1 1 0 2 1 2 87 0 4 4 0 83 11 1 0 0 14 67 0 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 123 120 117 114 95 84 81 79 77 70 66 63 56 54 38 35 31 23 19 17 0 129 1 129 12 15
CALL[ ]	/* CallFunction */";
};
width = 532;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(209,794,o),
(166,743,o),
(139,677,o),
(125,607,o),
(120,537,o),
(119,508,qs),
(118,487,o),
(113,463,o),
(104,463,qs),
(31,463,ls),
(13,463,o),
(-1,460,o),
(-1,452,qs),
(-1,446,o),
(11,435,o),
(28,435,qs),
(105,435,ls),
(113,435,o),
(118,423,o),
(118,409,qs),
(118,300,ls),
(118,265,o),
(118,181,o),
(117,107,o),
(115,52,o),
(114,45,qs),
(113,39,o),
(108,33,o),
(94,28,o),
(70,25,o),
(50,24,qs),
(39,23,o),
(18,19,o),
(18,11,qs),
(18,3,o),
(38,0,o),
(52,0,qs),
(63,0,o),
(114,3,o),
(141,3,qs),
(152,3,o),
(183,2,o),
(214,2,o),
(242,1,o),
(251,1,qs),
(277,1,o),
(293,7,o),
(293,14,qs),
(293,28,o),
(264,28,qs),
(155,28,l),
(155,424,ls),
(155,435,o),
(173,435,qs),
(177,435,o),
(196,434,o),
(216,434,o),
(234,433,o),
(239,433,qs),
(250,433,o),
(268,439,o),
(268,447,qs),
(268,455,o),
(251,463,o),
(241,463,qs),
(163,463,ls),
(159,463,o),
(155,471,o),
(155,484,qs),
(155,508,o),
(157,574,o),
(166,644,o),
(185,712,o),
(220,766,o),
(274,799,o),
(313,799,qs),
(342,799,o),
(373,781,o),
(388,749,o),
(390,707,o),
(390,683,qs),
(390,670,o),
(390,621,o),
(391,556,o),
(391,478,o),
(391,436,qs),
(391,381,o),
(391,255,o),
(390,135,o),
(388,30,o),
(386,-3,qs),
(384,-30,o),
(324,-33,qs),
(301,-34,ls),
(289,-35,o),
(280,-41,o),
(280,-46,qs),
(280,-51,o),
(290,-58,o),
(304,-58,qs),
(334,-58,o),
(385,-57,o),
(405,-57,qs),
(433,-57,o),
(492,-59,o),
(502,-59,qs),
(524,-59,o),
(534,-49,o),
(534,-44,qs),
(534,-38,o),
(522,-32,o),
(506,-32,qs),
(428,-32,l),
(428,-15,o),
(428,59,o),
(427,156,o),
(427,269,o),
(426,382,o),
(426,488,o),
(426,529,qs),
(426,573,o),
(426,630,o),
(427,670,o),
(427,698,o),
(427,713,qs),
(427,727,o),
(424,766,o),
(403,801,o),
(359,825,o),
(318,825,qs),
(273,825,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
104 1 7 6 39 1 1 8 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
3 1 1 0 2 1 2 87 0 4 4 0 83 12 1 0 0 12 67 10 1 6 6 5 83 11 1 5 5 23 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
11 1 5 10 1 6 7 5 6 91 3 1 1 0 2 1 2 87 0 4 4 0 83 12 1 0 0 12 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
11 1 5 10 1 6 7 5 6 91 3 1 1 0 2 1 2 87 0 4 4 0 83 12 1 0 0 14 67 9 1 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 122 119 115 112 100 99 94 84 81 79 77 70 66 63 55 53 38 36 31 23 19 17 0 130 1 130 13 15
CALL[ ]	/* CallFunction */";
};
width = 516;
}
);
note = f_l;
unicode = 64258;
},
{
glyphname = f_t;
kernLeft = f;
kernRight = c_t;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(308,151,o),
(309,115,o),
(315,79,o),
(327,45,o),
(338,32,qs),
(358,8,o),
(425,-11,o),
(459,-11,qs),
(507,-11,o),
(568,21,o),
(601,64,o),
(613,105,o),
(613,114,qs),
(613,134,o),
(590,153,o),
(573,153,qs),
(550,153,o),
(528,122,o),
(523,102,qs),
(521,97,o),
(516,84,o),
(505,74,o),
(486,67,o),
(471,67,qs),
(446,67,o),
(418,83,o),
(404,109,o),
(401,138,o),
(401,152,qs),
(401,409,l),
(418,410,o),
(468,412,o),
(519,413,o),
(564,415,o),
(576,416,qs),
(580,416,o),
(592,421,o),
(604,430,o),
(612,444,o),
(612,455,qs),
(612,478,o),
(578,492,o),
(563,492,qs),
(558,492,o),
(513,491,o),
(459,490,o),
(410,489,o),
(401,489,q),
(401,550,o),
(401,629,o),
(402,678,o),
(402,704,o),
(402,711,qs),
(402,727,o),
(397,766,o),
(374,801,o),
(327,825,o),
(285,825,qs),
(236,825,o),
(169,792,o),
(124,738,o),
(99,670,o),
(86,601,o),
(83,537,o),
(83,515,qs),
(83,503,o),
(76,487,o),
(65,487,qs),
(48,487,ls),
(30,487,o),
(-1,474,o),
(-1,452,qs),
(-1,429,o),
(28,411,o),
(45,411,qs),
(71,411,ls),
(79,411,o),
(84,399,o),
(84,385,qs),
(84,300,ls),
(84,231,o),
(83,151,o),
(81,108,o),
(80,91,o),
(80,85,qs),
(80,74,o),
(68,65,o),
(63,64,qs),
(37,60,o),
(18,44,o),
(18,25,qs),
(18,17,o),
(26,7,o),
(38,2,o),
(51,0,o),
(56,0,qs),
(71,0,o),
(131,3,o),
(158,3,qs),
(179,3,o),
(224,1,o),
(233,1,qs),
(261,1,o),
(285,18,o),
(285,33,qs),
(285,48,o),
(265,69,o),
(251,69,qs),
(172,69,l),
(172,400,ls),
(172,411,o),
(190,411,qs),
(193,411,o),
(225,410,o),
(264,410,o),
(301,409,o),
(309,409,q),
(308,165,ls)
);
},
{
closed = 1;
nodes = (
(181,626,o),
(205,700,o),
(249,751,o),
(284,751,qs),
(289,751,o),
(298,747,o),
(305,734,o),
(309,707,o),
(309,683,qs),
(309,487,l),
(182,487,ls),
(177,487,o),
(172,495,o),
(172,511,qs),
(172,543,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
127 120 108 58 2 40
CALL[ ]	/* CallFunction */";
};
width = 622;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(322,151,o),
(323,116,o),
(329,80,o),
(340,44,o),
(351,31,qs),
(369,8,o),
(428,-11,o),
(457,-11,qs),
(501,-11,o),
(558,20,o),
(592,62,o),
(606,104,o),
(606,115,qs),
(606,129,o),
(588,147,o),
(574,147,qs),
(556,147,o),
(545,119,o),
(538,102,qs),
(535,94,o),
(526,75,o),
(510,59,o),
(486,49,o),
(467,49,qs),
(440,49,o),
(410,70,o),
(396,102,o),
(394,138,o),
(394,152,qs),
(394,418,l),
(412,419,o),
(459,420,o),
(507,422,o),
(552,423,o),
(569,425,qs),
(577,426,o),
(597,440,o),
(597,455,qs),
(597,472,o),
(571,483,o),
(557,483,qs),
(552,483,o),
(506,482,o),
(452,481,o),
(403,480,o),
(394,480,q),
(394,543,o),
(394,626,o),
(395,677,o),
(395,704,o),
(395,710,qs),
(395,724,o),
(390,764,o),
(368,800,o),
(324,825,o),
(284,825,qs),
(240,825,o),
(179,793,o),
(138,740,o),
(114,673,o),
(101,602,o),
(97,533,o),
(97,506,qs),
(97,496,o),
(93,478,o),
(85,478,qs),
(41,478,ls),
(23,478,o),
(-1,469,o),
(-1,452,qs),
(-1,435,o),
(21,420,o),
(38,420,qs),
(85,420,ls),
(93,420,o),
(98,408,o),
(98,394,qs),
(98,300,ls),
(98,187,o),
(95,78,o),
(94,65,qs),
(92,53,o),
(81,47,o),
(60,44,qs),
(54,43,o),
(40,41,o),
(27,35,o),
(18,27,o),
(18,20,qs),
(18,13,o),
(27,5,o),
(40,1,o),
(55,0,o),
(60,0,qs),
(74,0,o),
(124,3,o),
(151,3,qs),
(162,3,o),
(193,2,o),
(225,2,o),
(252,1,o),
(258,1,qs),
(285,1,o),
(306,14,o),
(306,26,qs),
(306,38,o),
(288,48,o),
(274,48,qs),
(165,48,l),
(165,409,ls),
(165,420,o),
(183,420,qs),
(187,420,o),
(224,419,o),
(270,419,o),
(314,418,o),
(323,418,q),
(322,165,ls)
);
},
{
closed = 1;
nodes = (
(173,630,o),
(198,712,o),
(244,769,o),
(282,769,qs),
(307,769,o),
(323,733,o),
(323,683,qs),
(323,478,l),
(173,478,ls),
(168,478,o),
(165,488,o),
(165,505,qs),
(165,539,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
125 120 108 60 2 40
CALL[ ]	/* CallFunction */";
};
width = 614;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(342,151,o),
(343,117,o),
(349,80,o),
(360,45,o),
(370,30,qs),
(397,-11,o),
(454,-11,qs),
(491,-11,o),
(545,18,o),
(580,59,o),
(596,103,o),
(596,117,qs),
(596,122,o),
(592,137,o),
(581,137,qs),
(570,137,o),
(564,118,o),
(559,102,qs),
(555,88,o),
(540,59,o),
(517,35,o),
(483,19,o),
(461,19,qs),
(432,19,o),
(401,45,o),
(386,84,o),
(384,131,o),
(384,152,qs),
(384,433,l),
(425,435,o),
(514,436,o),
(559,440,qs),
(568,441,o),
(576,450,o),
(576,455,qs),
(576,468,o),
(549,468,qs),
(543,468,o),
(496,467,o),
(442,466,o),
(393,465,o),
(384,465,q),
(384,532,o),
(384,620,o),
(385,676,o),
(385,703,o),
(385,708,qs),
(385,720,o),
(380,760,o),
(360,797,o),
(319,825,o),
(282,825,qs),
(227,825,o),
(163,761,o),
(130,663,o),
(119,545,o),
(117,491,qs),
(117,481,o),
(113,463,o),
(105,463,qs),
(31,463,ls),
(13,463,o),
(-1,460,o),
(-1,452,qs),
(-1,446,o),
(11,435,o),
(28,435,qs),
(105,435,ls),
(113,435,o),
(118,423,o),
(118,409,qs),
(118,300,ls),
(118,265,o),
(118,181,o),
(117,107,o),
(115,52,o),
(114,45,qs),
(113,39,o),
(108,33,o),
(94,28,o),
(70,25,o),
(50,24,qs),
(39,23,o),
(18,19,o),
(18,11,qs),
(18,3,o),
(38,0,o),
(52,0,qs),
(63,0,o),
(114,3,o),
(141,3,qs),
(152,3,o),
(183,2,o),
(214,2,o),
(242,1,o),
(251,1,qs),
(277,1,o),
(293,7,o),
(293,14,qs),
(293,28,o),
(264,28,qs),
(155,28,l),
(155,424,ls),
(155,435,o),
(173,435,qs),
(177,435,o),
(223,434,o),
(279,434,o),
(332,433,o),
(343,433,q),
(342,165,ls)
);
},
{
closed = 1;
nodes = (
(158,584,o),
(167,652,o),
(183,717,o),
(211,768,o),
(251,799,o),
(279,799,qs),
(303,799,o),
(329,776,o),
(341,742,o),
(343,701,o),
(343,683,qs),
(343,463,l),
(163,463,ls),
(158,463,o),
(155,474,o),
(155,495,qs),
(155,520,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
120 113 102 57 2 40
CALL[ ]	/* CallFunction */";
};
width = 603;
}
);
note = f_t;
},
{
glyphname = l_l;
kernLeft = l;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(450,744,o),
(412,744,qs),
(355,744,o),
(307,728,o),
(307,710,qs),
(307,694,o),
(336,682,o),
(360,682,qs),
(370,682,ls),
(383,682,o),
(389,670,o),
(389,654,qs),
(389,626,o),
(389,563,o),
(390,486,o),
(390,390,o),
(390,329,qs),
(390,270,o),
(390,181,o),
(388,110,o),
(386,53,o),
(385,27,qs),
(384,12,o),
(363,-4,o),
(349,-5,qs),
(309,-7,ls),
(305,-7,o),
(288,-18,o),
(288,-41,qs),
(288,-52,o),
(311,-76,o),
(338,-76,qs),
(346,-76,o),
(369,-75,o),
(394,-75,o),
(419,-74,o),
(429,-74,qs),
(442,-74,o),
(471,-75,o),
(498,-76,o),
(522,-77,o),
(529,-77,qs),
(554,-77,o),
(574,-51,o),
(574,-42,qs),
(574,-26,o),
(552,-1,o),
(517,-1,qs),
(481,-1,l),
(481,33,o),
(480,128,o),
(479,259,o),
(478,428,o),
(478,537,qs),
(478,569,o),
(479,607,o),
(479,639,o),
(480,677,o),
(480,709,qs),
(480,731,o)
);
},
{
closed = 1;
nodes = (
(217,807,o),
(207,819,o),
(187,821,o),
(170,821,qs),
(118,821,o),
(54,816,o),
(18,806,o),
(6,790,o),
(6,779,qs),
(6,767,o),
(27,755,o),
(53,755,qs),
(96,755,ls),
(110,755,o),
(129,740,o),
(129,723,qs),
(129,695,o),
(129,638,o),
(130,566,o),
(130,474,o),
(130,413,qs),
(130,354,o),
(130,262,o),
(128,189,o),
(126,129,o),
(125,103,qs),
(124,89,o),
(103,72,o),
(88,71,qs),
(51,69,ls),
(41,68,o),
(25,55,o),
(25,39,qs),
(25,23,o),
(50,0,o),
(77,0,qs),
(93,0,o),
(137,2,o),
(164,2,qs),
(172,2,o),
(201,1,o),
(232,0,o),
(261,-1,o),
(268,-1,qs),
(293,-1,o),
(313,25,o),
(313,34,qs),
(313,50,o),
(291,75,o),
(256,75,qs),
(221,75,l),
(221,139,o),
(219,408,o),
(219,626,qs),
(219,639,o),
(220,711,o),
(220,761,qs),
(220,783,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
112 72 56 16 2 40
CALL[ ]	/* CallFunction */";
};
width = 559;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
ref = .ttfautohint;
},
{
alignment = -1;
ref = l;
},
{
alignment = -1;
pos = (205,-65);
ref = l;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
115 74 56 15 2 41
CALL[ ]	/* CallFunction */";
};
width = 453;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(325,754,o),
(305,754,qs),
(291,754,o),
(255,753,o),
(222,748,o),
(200,740,o),
(200,733,qs),
(200,728,o),
(219,724,o),
(236,724,qs),
(287,724,ls),
(300,724,o),
(306,712,o),
(306,696,qs),
(306,665,o),
(306,604,o),
(307,528,o),
(307,429,o),
(307,360,qs),
(307,291,o),
(307,181,o),
(305,91,o),
(303,19,o),
(302,-11,qs),
(301,-23,o),
(272,-39,o),
(240,-41,qs),
(217,-42,ls),
(196,-43,o),
(196,-55,qs),
(196,-61,o),
(209,-66,o),
(229,-66,qs),
(237,-66,o),
(260,-65,o),
(285,-65,o),
(310,-64,o),
(320,-64,qs),
(333,-64,o),
(362,-65,o),
(389,-66,o),
(413,-67,o),
(420,-67,qs),
(436,-67,o),
(448,-61,o),
(448,-56,qs),
(448,-50,o),
(433,-39,o),
(408,-39,qs),
(347,-39,l),
(347,26,o),
(345,340,o),
(345,581,qs),
(345,582,o),
(345,642,o),
(346,719,qs),
(346,745,o)
);
},
{
closed = 1;
nodes = (
(120,820,o),
(100,820,qs),
(86,820,o),
(42,819,o),
(0,814,o),
(-30,806,o),
(-30,799,qs),
(-30,794,o),
(-11,790,o),
(6,790,qs),
(83,790,ls),
(96,790,o),
(102,778,o),
(102,762,qs),
(102,731,o),
(102,665,o),
(103,583,o),
(103,480,o),
(103,413,qs),
(103,345,o),
(103,239,o),
(101,153,o),
(99,85,o),
(98,55,qs),
(96,28,o),
(36,25,qs),
(13,24,ls),
(-8,23,o),
(-8,11,qs),
(-8,5,o),
(5,0,o),
(25,0,qs),
(33,0,o),
(56,1,o),
(81,1,o),
(106,2,o),
(116,2,qs),
(129,2,o),
(158,1,o),
(185,0,o),
(209,-1,o),
(216,-1,qs),
(232,-1,o),
(244,5,o),
(244,10,qs),
(244,16,o),
(229,27,o),
(204,27,qs),
(143,27,l),
(143,97,o),
(141,388,o),
(141,626,qs),
(141,627,o),
(141,658,o),
(141,705,o),
(142,760,o),
(142,785,qs),
(142,811,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
111 71 53 12 2 40
CALL[ ]	/* CallFunction */";
};
width = 430;
}
);
note = l_l;
},
{
glyphname = s_p;
kernLeft = s;
kernRight = c_p;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(807,13,o),
(871,71,o),
(916,167,o),
(916,239,qs),
(916,275,o),
(902,356,o),
(861,425,o),
(787,471,o),
(727,471,qs),
(706,471,o),
(659,459,o),
(612,432,o),
(571,388,o),
(558,357,q),
(558,591,ls),
(558,643,o),
(478,692,o),
(417,692,qs),
(365,692,o),
(303,621,o),
(303,566,qs),
(303,551,o),
(309,512,o),
(317,469,o),
(327,427,o),
(332,409,q),
(316,427,o),
(254,465,o),
(212,465,qs),
(182,465,o),
(124,451,o),
(79,418,o),
(51,364,o),
(51,323,qs),
(51,277,o),
(86,221,o),
(142,187,o),
(210,169,o),
(243,162,qs),
(275,155,o),
(313,140,o),
(332,125,o),
(337,109,o),
(337,100,qs),
(337,82,o),
(319,60,o),
(294,48,o),
(267,43,o),
(258,43,qs),
(227,43,o),
(180,59,o),
(147,81,o),
(128,106,o),
(125,114,qs),
(123,121,o),
(117,147,o),
(116,154,qs),
(114,171,o),
(96,197,o),
(70,197,qs),
(45,197,o),
(33,175,o),
(33,158,qs),
(33,135,o),
(36,79,o),
(36,59,qs),
(36,46,o),
(35,19,o),
(35,8,qs),
(35,-12,o),
(59,-31,o),
(74,-31,qs),
(87,-31,o),
(104,-26,o),
(114,-12,o),
(118,15,o),
(118,36,q),
(128,16,o),
(159,-9,o),
(196,-22,o),
(237,-26,o),
(256,-26,qs),
(283,-26,o),
(342,-17,o),
(391,10,o),
(423,60,o),
(423,101,qs),
(423,137,o),
(395,183,o),
(344,213,o),
(271,233,o),
(226,244,qs),
(181,255,o),
(133,290,o),
(133,325,qs),
(133,354,o),
(175,385,o),
(221,385,qs),
(249,385,o),
(289,372,o),
(315,354,o),
(329,334,o),
(331,328,qs),
(333,323,o),
(339,304,o),
(340,298,qs),
(340,295,o),
(345,281,o),
(354,266,o),
(369,255,o),
(381,255,qs),
(413,255,o),
(430,281,o),
(430,300,qs),
(430,307,o),
(424,341,o),
(415,385,o),
(404,434,o),
(399,457,qs),
(395,475,o),
(391,512,o),
(391,550,qs),
(391,572,o),
(398,601,o),
(410,616,o),
(424,622,o),
(431,622,qs),
(440,622,o),
(453,616,o),
(462,596,o),
(467,560,o),
(467,530,qs),
(467,443,o),
(469,330,o),
(472,243,o),
(474,166,o),
(474,117,qs),
(474,71,o),
(473,5,o),
(472,-41,o),
(471,-73,o),
(471,-86,qs),
(471,-109,o),
(465,-127,o),
(454,-127,qs),
(428,-127,o),
(397,-151,o),
(397,-171,qs),
(397,-192,o),
(421,-202,o),
(432,-202,qs),
(657,-202,ls),
(673,-202,o),
(694,-186,o),
(694,-169,qs),
(694,-147,o),
(655,-126,o),
(627,-126,qs),
(562,-126,l),
(562,68,l),
(569,56,o),
(590,28,o),
(626,4,o),
(678,-11,o),
(716,-11,qs),
(739,-11,o)
);
},
{
closed = 1;
nodes = (
(606,92,o),
(573,135,o),
(561,191,o),
(561,223,qs),
(561,265,o),
(594,328,o),
(643,370,o),
(699,392,o),
(722,392,qs),
(755,392,o),
(794,361,o),
(815,315,o),
(821,263,o),
(821,243,qs),
(821,188,o),
(795,119,o),
(760,81,o),
(723,67,o),
(712,67,qs),
(665,67,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
175 166 146 12 2 40
CALL[ ]	/* CallFunction */";
};
width = 944;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(531,644,o),
(463,692,o),
(411,692,qs),
(359,692,o),
(297,621,o),
(297,566,qs),
(297,549,o),
(303,507,o),
(313,462,o),
(323,419,o),
(328,401,q),
(321,410,o),
(300,433,o),
(270,452,o),
(231,465,o),
(206,465,qs),
(176,465,o),
(119,450,o),
(75,417,o),
(48,365,o),
(48,328,qs),
(48,289,o),
(77,238,o),
(123,207,o),
(177,189,o),
(203,183,qs),
(262,168,o),
(331,137,o),
(331,103,qs),
(331,85,o),
(312,61,o),
(282,47,o),
(247,41,o),
(231,41,qs),
(205,41,o),
(164,54,o),
(132,73,o),
(112,97,o),
(107,108,qs),
(102,118,o),
(101,135,o),
(99,149,qs),
(97,167,o),
(84,189,o),
(64,189,qs),
(45,189,o),
(37,170,o),
(37,154,qs),
(37,132,o),
(41,82,o),
(41,62,qs),
(41,48,o),
(39,9,o),
(39,4,qs),
(39,-4,o),
(46,-14,o),
(57,-20,o),
(68,-22,o),
(72,-22,qs),
(87,-22,o),
(102,-2,o),
(102,13,qs),
(102,19,o),
(102,33,o),
(101,41,q),
(110,24,o),
(140,2,o),
(176,-11,o),
(216,-16,o),
(234,-16,qs),
(258,-16,o),
(316,-7,o),
(365,20,o),
(399,68,o),
(399,107,qs),
(399,140,o),
(372,184,o),
(326,213,o),
(262,233,o),
(225,243,qs),
(202,249,o),
(162,262,o),
(132,282,o),
(114,310,o),
(114,330,qs),
(114,363,o),
(162,404,o),
(209,404,qs),
(256,404,o),
(306,367,o),
(318,344,qs),
(321,339,o),
(327,323,o),
(332,306,o),
(336,293,o),
(336,292,qs),
(337,289,o),
(341,277,o),
(349,265,o),
(361,257,o),
(369,257,qs),
(392,257,o),
(405,279,o),
(405,293,qs),
(405,299,o),
(400,328,o),
(392,365,o),
(382,409,o),
(378,430,qs),
(371,468,o),
(366,527,o),
(366,550,qs),
(366,579,o),
(380,612,o),
(398,628,o),
(416,632,o),
(420,632,qs),
(425,632,o),
(439,627,o),
(452,611,o),
(461,580,o),
(461,553,qs),
(461,536,o),
(461,468,o),
(462,423,qs),
(462,402,o),
(463,338,o),
(465,260,o),
(466,171,o),
(466,124,qs),
(466,80,o),
(465,18,o),
(464,-28,o),
(463,-66,o),
(463,-86,qs),
(463,-107,o),
(462,-130,o),
(456,-140,o),
(443,-144,o),
(431,-145,qs),
(405,-148,o),
(375,-165,o),
(375,-180,qs),
(375,-196,o),
(397,-202,o),
(403,-202,qs),
(628,-202,ls),
(636,-202,o),
(658,-193,o),
(658,-179,qs),
(658,-162,o),
(624,-144,o),
(598,-144,qs),
(533,-144,l),
(533,68,l),
(540,55,o),
(563,27,o),
(599,4,o),
(648,-11,o),
(681,-11,qs),
(707,-11,o),
(778,13,o),
(842,71,o),
(887,166,o),
(887,238,qs),
(887,274,o),
(872,356,o),
(832,425,o),
(760,471,o),
(703,471,qs),
(653,471,o),
(557,414,o),
(531,353,q),
(531,591,ls)
);
},
{
closed = 1;
nodes = (
(564,339,o),
(613,386,o),
(672,410,o),
(699,410,qs),
(736,410,o),
(781,375,o),
(805,324,o),
(813,264,o),
(813,240,qs),
(813,183,o),
(785,109,o),
(744,66,o),
(697,49,o),
(678,49,qs),
(634,49,o),
(578,77,o),
(545,124,o),
(532,185,o),
(532,219,qs),
(532,267,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
188 178 169 25 2 40
CALL[ ]	/* CallFunction */";
};
width = 918;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(345,634,o),
(370,657,o),
(395,662,o),
(401,662,qs),
(420,662,o),
(452,633,o),
(452,592,qs),
(452,578,o),
(452,518,o),
(453,439,o),
(454,346,o),
(455,254,o),
(455,168,o),
(455,135,qs),
(455,95,o),
(454,40,o),
(453,-7,o),
(452,-54,o),
(452,-86,qs),
(452,-115,o),
(449,-149,o),
(438,-167,o),
(417,-174,o),
(398,-175,qs),
(367,-177,o),
(344,-183,o),
(344,-191,qs),
(344,-199,o),
(357,-202,o),
(362,-202,qs),
(587,-202,ls),
(595,-202,o),
(607,-195,o),
(607,-190,qs),
(607,-174,o),
(557,-174,qs),
(492,-174,l),
(492,68,l),
(498,55,o),
(523,27,o),
(559,4,o),
(604,-11,o),
(631,-11,qs),
(661,-11,o),
(736,13,o),
(802,70,o),
(846,165,o),
(846,236,qs),
(846,273,o),
(830,355,o),
(790,425,o),
(722,471,o),
(669,471,qs),
(606,471,o),
(518,403,o),
(492,346,q),
(492,591,ls),
(492,644,o),
(441,692,o),
(402,692,qs),
(350,692,o),
(288,621,o),
(288,566,qs),
(288,546,o),
(296,499,o),
(306,451,o),
(318,405,o),
(322,387,q),
(317,397,o),
(300,424,o),
(271,448,o),
(228,465,o),
(197,465,qs),
(167,465,o),
(112,448,o),
(69,415,o),
(44,367,o),
(44,336,qs),
(44,307,o),
(65,266,o),
(96,238,o),
(132,222,o),
(146,218,qs),
(164,213,o),
(223,200,o),
(280,176,o),
(322,138,o),
(322,108,qs),
(322,70,o),
(256,30,o),
(205,30,qs),
(167,30,o),
(104,56,o),
(88,88,qs),
(82,100,o),
(77,126,o),
(74,141,qs),
(70,161,o),
(64,175,o),
(56,175,qs),
(48,175,o),
(43,162,o),
(43,148,qs),
(43,127,o),
(48,86,o),
(48,67,qs),
(48,53,o),
(45,26,o),
(45,16,qs),
(45,-7,o),
(57,-7,qs),
(66,-7,o),
(76,18,o),
(77,50,q),
(85,38,o),
(113,19,o),
(148,7,o),
(185,0,o),
(202,0,qs),
(221,0,o),
(277,10,o),
(329,36,o),
(365,82,o),
(365,117,qs),
(365,146,o),
(340,186,o),
(300,214,o),
(249,233,o),
(224,241,qs),
(201,248,o),
(152,261,o),
(112,280,o),
(87,312,o),
(87,339,qs),
(87,379,o),
(144,435,o),
(192,435,qs),
(222,435,o),
(279,408,o),
(300,370,qs),
(314,346,o),
(327,303,o),
(332,282,qs),
(334,274,o),
(343,261,o),
(352,261,qs),
(360,261,o),
(369,275,o),
(369,282,qs),
(369,291,o),
(356,352,o),
(340,431,o),
(327,516,o),
(327,550,qs),
(327,589,o)
);
},
{
closed = 1;
nodes = (
(521,357,o),
(571,413,o),
(634,440,o),
(666,440,qs),
(708,440,o),
(761,399,o),
(791,338,o),
(802,266,o),
(802,235,qs),
(802,174,o),
(770,91,o),
(720,41,o),
(659,19,o),
(630,19,qs),
(591,19,o),
(538,51,o),
(505,105,o),
(491,175,o),
(491,212,qs),
(491,271,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
169 159 122 93 2 40
CALL[ ]	/* CallFunction */";
};
width = 881;
}
);
note = s_p;
},
{
glyphname = s_t;
kernLeft = s;
kernRight = c_t;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(671,18,o),
(706,59,o),
(722,103,o),
(722,117,qs),
(722,127,o),
(710,153,o),
(690,153,qs),
(675,153,o),
(656,144,o),
(644,130,o),
(637,112,o),
(634,102,qs),
(632,97,o),
(629,85,o),
(622,74,o),
(610,67,o),
(599,67,qs),
(589,67,o),
(575,84,o),
(566,109,o),
(561,139,o),
(561,152,qs),
(561,394,l),
(590,396,o),
(654,397,o),
(685,402,qs),
(691,403,o),
(719,420,o),
(719,439,qs),
(719,460,o),
(688,478,o),
(676,478,qs),
(671,478,o),
(638,477,o),
(600,475,o),
(567,474,o),
(561,474,q),
(561,565,ls),
(561,630,o),
(487,692,o),
(417,692,qs),
(365,692,o),
(303,621,o),
(303,566,qs),
(303,551,o),
(309,512,o),
(317,469,o),
(327,427,o),
(332,409,q),
(316,427,o),
(254,465,o),
(212,465,qs),
(182,465,o),
(124,451,o),
(79,418,o),
(51,364,o),
(51,323,qs),
(51,277,o),
(86,221,o),
(141,187,o),
(210,169,o),
(243,162,qs),
(274,155,o),
(311,142,o),
(331,127,o),
(337,110,o),
(337,100,qs),
(337,86,o),
(321,66,o),
(295,54,o),
(264,48,o),
(249,48,qs),
(219,48,o),
(173,65,o),
(141,88,o),
(123,112,o),
(120,120,qs),
(119,122,o),
(116,146,o),
(116,154,qs),
(116,171,o),
(98,197,o),
(70,197,qs),
(44,197,o),
(33,175,o),
(33,158,qs),
(33,135,o),
(36,79,o),
(36,59,qs),
(36,46,o),
(35,13,o),
(35,11,qs),
(35,-15,o),
(61,-31,o),
(72,-31,qs),
(101,-31,o),
(117,1,o),
(118,36,q),
(129,16,o),
(160,-8,o),
(197,-21,o),
(237,-26,o),
(256,-26,qs),
(283,-26,o),
(342,-17,o),
(391,10,o),
(423,60,o),
(423,101,qs),
(423,137,o),
(395,183,o),
(344,213,o),
(271,233,o),
(226,244,qs),
(181,255,o),
(133,290,o),
(133,325,qs),
(133,354,o),
(175,385,o),
(221,385,qs),
(250,385,o),
(290,373,o),
(315,355,o),
(329,335,o),
(331,328,qs),
(333,322,o),
(335,310,o),
(337,305,qs),
(339,299,o),
(340,294,qs),
(341,284,o),
(364,255,o),
(381,255,qs),
(411,255,o),
(430,281,o),
(430,300,qs),
(430,307,o),
(422,342,o),
(411,386,o),
(401,436,o),
(398,460,qs),
(394,495,o),
(393,534,o),
(393,550,qs),
(393,571,o),
(402,596,o),
(415,609,o),
(429,614,o),
(433,614,qs),
(436,614,o),
(448,608,o),
(460,590,o),
(469,557,o),
(469,530,qs),
(469,165,ls),
(469,151,o),
(470,117,o),
(475,80,o),
(486,45,o),
(496,30,qs),
(523,-11,o),
(580,-11,qs),
(617,-11,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
112 1 3 8 34 1 2 3 84 1 12 13 63 1 0 7 4 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
112 1 11 8 34 1 2 3 84 1 12 13 63 1 0 7 4 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 2 3 6 3 2 6 104 0 13 6 12 6 13 12 104 0 9 0 1 8 9 1 91 11 1 3 3 8 83 10 1 8 8 23 67 0 6 6 4 83 5 1 4 4 21 67 0 12 12 0 83 14 1 0 0 24 67 0 7 7 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 2 3 6 3 2 6 104 0 13 6 12 6 13 12 104 0 9 0 1 8 9 1 91 10 1 8 11 1 3 2 8 3 91 0 6 6 4 83 5 1 4 4 21 67 0 12 12 0 83 14 1 0 0 24 67 0 7 7 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 2 3 6 3 2 6 104 0 13 6 12 6 13 12 104 0 9 0 1 10 9 1 91 0 10 8 3 10 79 0 8 11 1 3 2 8 3 91 0 6 6 4 83 5 1 4 4 21 67 0 12 12 0 83 14 1 0 0 24 67 0 7 7 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 2 3 6 3 2 6 104 0 13 6 12 6 13 12 104 0 9 0 1 10 9 1 91 0 10 0 11 3 10 11 91 0 8 0 3 2 8 3 91 0 6 6 4 83 5 1 4 4 21 67 0 12 12 0 83 14 1 0 0 24 67 0 7 7 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 2 3 6 3 2 6 104 0 13 6 12 6 13 12 104 0 9 0 1 10 9 1 91 0 10 0 11 3 10 11 91 0 8 0 3 2 8 3 91 0 6 13 4 6 79 0 7 5 1 4 7 4 87 0 12 12 0 83 14 1 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
0 2 3 6 3 2 6 104 0 13 6 12 6 13 12 104 0 9 0 1 10 9 1 91 0 10 0 11 3 10 11 91 0 8 0 3 2 8 3 91 0 7 0 4 5 7 4 91 0 6 0 5 6 5 87 0 12 12 0 83 14 1 0 0 24 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
1 0 155 153 145 143 138 136 130 124 121 119 110 108 90 88 79 77 67 65 59 57 43 41 30 28 14 12 0 161 1 161 15 15
CALL[ ]	/* CallFunction */";
};
width = 733;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(460,151,o),
(461,117,o),
(467,80,o),
(478,45,o),
(488,30,qs),
(515,-11,o),
(572,-11,qs),
(609,-11,o),
(663,18,o),
(698,59,o),
(714,103,o),
(714,117,qs),
(714,119,o),
(712,129,o),
(707,139,o),
(697,147,o),
(689,147,qs),
(677,147,o),
(663,139,o),
(655,126,o),
(650,110,o),
(647,102,qs),
(644,94,o),
(636,76,o),
(622,60,o),
(602,49,o),
(586,49,qs),
(568,49,o),
(547,69,o),
(536,100,o),
(532,136,o),
(532,152,qs),
(532,406,l),
(566,408,o),
(641,410,o),
(677,414,q),
(686,416,o),
(704,429,o),
(704,443,qs),
(704,459,o),
(680,472,o),
(668,472,qs),
(662,472,o),
(624,471,o),
(579,469,o),
(539,468,o),
(532,468,q),
(532,575,ls),
(532,635,o),
(468,692,o),
(411,692,qs),
(359,692,o),
(297,621,o),
(297,566,qs),
(297,549,o),
(303,507,o),
(313,462,o),
(323,419,o),
(328,401,q),
(321,410,o),
(300,433,o),
(270,452,o),
(231,465,o),
(206,465,qs),
(176,465,o),
(119,450,o),
(75,417,o),
(48,365,o),
(48,328,qs),
(48,289,o),
(77,238,o),
(123,207,o),
(177,189,o),
(203,183,qs),
(262,168,o),
(331,137,o),
(331,103,qs),
(331,85,o),
(312,61,o),
(282,47,o),
(247,41,o),
(231,41,qs),
(205,41,o),
(164,54,o),
(132,73,o),
(112,97,o),
(107,108,qs),
(102,118,o),
(101,135,o),
(99,149,qs),
(97,167,o),
(84,189,o),
(64,189,qs),
(45,189,o),
(37,170,o),
(37,154,qs),
(37,132,o),
(41,82,o),
(41,62,qs),
(41,48,o),
(39,9,o),
(39,4,qs),
(39,-4,o),
(46,-14,o),
(57,-20,o),
(68,-22,o),
(72,-22,qs),
(87,-22,o),
(102,-2,o),
(102,13,qs),
(102,19,o),
(102,33,o),
(101,41,q),
(110,24,o),
(140,2,o),
(176,-11,o),
(216,-16,o),
(234,-16,qs),
(258,-16,o),
(316,-7,o),
(365,20,o),
(399,68,o),
(399,107,qs),
(399,140,o),
(372,184,o),
(326,213,o),
(262,233,o),
(225,243,qs),
(202,249,o),
(162,262,o),
(132,282,o),
(114,310,o),
(114,330,qs),
(114,363,o),
(162,404,o),
(209,404,qs),
(256,404,o),
(306,367,o),
(318,344,qs),
(321,339,o),
(327,323,o),
(332,306,o),
(336,293,o),
(336,292,qs),
(337,289,o),
(341,277,o),
(349,265,o),
(361,257,o),
(369,257,qs),
(392,257,o),
(405,279,o),
(405,293,qs),
(405,299,o),
(400,328,o),
(392,365,o),
(382,409,o),
(378,430,qs),
(371,468,o),
(366,527,o),
(366,550,qs),
(366,579,o),
(380,612,o),
(398,628,o),
(416,632,o),
(420,632,qs),
(425,632,o),
(439,627,o),
(452,611,o),
(461,580,o),
(461,553,qs),
(460,165,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
111 26 2 1 2 1 66 57 1 6 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 1 2 5 2 1 5 104 0 12 5 6 5 12 6 104 0 8 0 0 7 8 0 91 10 1 2 2 7 83 9 1 7 7 23 67 0 5 5 3 83 13 4 2 3 3 21 67 11 1 6 6 3 83 13 4 2 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 1 2 5 2 1 5 104 0 12 5 6 5 12 6 104 0 8 0 0 7 8 0 91 9 1 7 10 1 2 1 7 2 91 0 5 5 3 83 13 4 2 3 3 21 67 11 1 6 6 3 83 13 4 2 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
0 1 2 5 2 1 5 104 0 12 5 11 5 12 11 104 0 8 0 0 7 8 0 91 9 1 7 10 1 2 1 7 2 91 0 5 5 3 83 13 4 2 3 3 21 67 0 11 11 3 83 13 4 2 3 3 21 67 0 6 6 3 83 13 4 2 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 1 2 5 2 1 5 104 0 12 5 11 5 12 11 104 0 8 0 0 7 8 0 91 9 1 7 10 1 2 1 7 2 91 0 11 11 3 83 13 1 3 3 21 67 0 6 6 3 83 13 1 3 3 21 67 0 5 5 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 70 values pushed */
0 1 2 5 2 1 5 104 0 12 5 11 5 12 11 104 0 8 0 0 9 8 0 91 0 9 7 2 9 79 0 7 10 1 2 1 7 2 91 0 11 11 13 83 0 13 13 24 67 0 6 6 3 83 0 3 3 21 67 0 5 5 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
164 162 154 152 144 142 137 135 129 123 120 118 107 105 89 87 78 76 64 62 53 51 43 46 36 14 18
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(449,151,o),
(450,117,o),
(456,80,o),
(467,45,o),
(477,30,qs),
(504,-11,o),
(561,-11,qs),
(598,-11,o),
(652,18,o),
(687,59,o),
(703,103,o),
(703,117,qs),
(703,122,o),
(699,137,o),
(688,137,qs),
(677,137,o),
(671,118,o),
(666,102,qs),
(662,88,o),
(647,59,o),
(624,35,o),
(590,19,o),
(568,19,qs),
(539,19,o),
(508,45,o),
(493,84,o),
(491,131,o),
(491,152,qs),
(491,426,l),
(532,428,o),
(622,430,o),
(666,434,qs),
(675,435,o),
(683,444,o),
(683,449,qs),
(683,462,o),
(657,462,qs),
(650,462,o),
(603,461,o),
(549,459,o),
(500,458,o),
(491,458,q),
(491,591,ls),
(491,644,o),
(441,692,o),
(402,692,qs),
(350,692,o),
(288,621,o),
(288,566,qs),
(288,546,o),
(296,499,o),
(306,451,o),
(318,405,o),
(322,387,q),
(317,397,o),
(300,424,o),
(271,448,o),
(228,465,o),
(197,465,qs),
(167,465,o),
(112,448,o),
(69,415,o),
(44,367,o),
(44,336,qs),
(44,307,o),
(65,266,o),
(96,238,o),
(132,222,o),
(146,218,qs),
(164,213,o),
(223,200,o),
(280,176,o),
(322,138,o),
(322,108,qs),
(322,70,o),
(256,30,o),
(205,30,qs),
(167,30,o),
(104,56,o),
(88,88,qs),
(82,100,o),
(77,126,o),
(74,141,qs),
(70,161,o),
(64,175,o),
(56,175,qs),
(48,175,o),
(43,162,o),
(43,148,qs),
(43,127,o),
(48,86,o),
(48,67,qs),
(48,53,o),
(45,26,o),
(45,16,qs),
(45,-7,o),
(57,-7,qs),
(66,-7,o),
(76,18,o),
(77,50,q),
(85,38,o),
(113,19,o),
(148,7,o),
(185,0,o),
(202,0,qs),
(221,0,o),
(277,10,o),
(329,36,o),
(365,82,o),
(365,117,qs),
(365,146,o),
(340,186,o),
(300,214,o),
(249,233,o),
(224,241,qs),
(201,248,o),
(152,261,o),
(112,280,o),
(87,312,o),
(87,339,qs),
(87,379,o),
(144,435,o),
(192,435,qs),
(222,435,o),
(279,407,o),
(299,370,qs),
(313,345,o),
(327,303,o),
(332,282,q),
(334,277,o),
(343,261,o),
(352,261,qs),
(360,261,o),
(369,275,o),
(369,282,qs),
(369,291,o),
(356,352,o),
(340,431,o),
(327,516,o),
(327,550,qs),
(327,589,o),
(345,634,o),
(370,657,o),
(395,662,o),
(401,662,qs),
(420,662,o),
(452,633,o),
(452,592,qs),
(449,165,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
94 1 1 10 48 1 6 12 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 79 values pushed */
0 1 10 5 10 1 5 104 0 12 5 6 5 12 6 104 0 8 0 0 7 8 0 91 0 2 2 7 83 9 1 7 7 23 67 0 10 10 7 83 9 1 7 7 23 67 0 5 5 4 83 13 1 4 4 24 67 0 6 6 3 83 0 3 3 13 67 0 11 11 4 83 13 1 4 4 24 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 79 values pushed */
0 1 10 5 10 1 5 104 0 12 5 6 5 12 6 104 0 8 0 0 7 8 0 91 0 2 2 7 83 9 1 7 7 23 67 0 10 10 7 83 9 1 7 7 23 67 0 5 5 4 83 13 1 4 4 16 67 0 6 6 3 83 0 3 3 13 67 0 11 11 4 83 13 1 4 4 16 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 79 values pushed */
0 1 10 5 10 1 5 104 0 12 5 6 5 12 6 104 0 8 0 0 7 8 0 91 0 2 2 7 83 9 1 7 7 23 67 0 10 10 7 83 9 1 7 7 23 67 0 5 5 4 83 13 1 4 4 24 67 0 6 6 3 83 0 3 3 13 67 0 11 11 4 83 13 1 4 4 24 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 1 10 5 10 1 5 104 0 12 5 6 5 12 6 104 0 8 0 0 7 8 0 91 0 2 10 7 2 79 9 1 7 0 10 1 7 10 91 0 5 5 4 83 13 1 4 4 24 67 0 6 6 3 83 0 3 3 13 67 0 11 11 4 83 13 1 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 1 10 5 10 1 5 104 0 12 5 6 5 12 6 104 0 8 0 0 7 8 0 91 0 7 0 2 10 7 2 91 0 9 0 10 1 9 10 91 0 5 5 4 83 13 1 4 4 24 67 0 6 6 3 83 0 3 3 13 67 0 11 11 4 83 13 1 4 4 24 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
142 140 134 132 126 124 119 117 112 106 103 101 90 88 72 70 63 61 52 50 44 42 39 43 34 14 18
CALL[ ]	/* CallFunction */";
};
width = 711;
}
);
note = s_t;
unicode = 64262;
},
{
glyphname = t_t;
kernLeft = t;
kernRight = t_t;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(509,-44,o),
(544,-3,o),
(560,41,o),
(560,55,qs),
(560,59,o),
(557,71,o),
(550,83,o),
(538,91,o),
(528,91,qs),
(512,91,o),
(493,81,o),
(481,66,o),
(475,48,o),
(472,40,qs),
(470,35,o),
(467,23,o),
(460,13,o),
(448,5,o),
(437,5,qs),
(427,5,o),
(413,22,o),
(404,47,o),
(399,77,o),
(399,90,qs),
(399,389,l),
(428,391,o),
(492,392,o),
(523,397,q),
(526,397,o),
(537,402,o),
(549,411,o),
(557,425,o),
(557,435,qs),
(557,455,o),
(526,473,o),
(514,473,qs),
(509,473,o),
(476,472,o),
(438,470,o),
(405,469,o),
(399,469,q),
(399,575,ls),
(399,602,o),
(370,618,o),
(354,618,qs),
(339,618,o),
(315,607,o),
(312,590,qs),
(308,570,o),
(307,521,o),
(307,500,qs),
(307,483,o),
(274,469,o),
(245,467,qs),
(194,463,l),
(194,575,ls),
(194,603,o),
(165,618,o),
(149,618,qs),
(137,618,o),
(110,607,o),
(107,590,qs),
(103,570,o),
(102,521,o),
(102,500,qs),
(102,486,o),
(93,474,o),
(74,472,qs),
(23,468,ls),
(9,466,o),
(-18,450,o),
(-18,430,qs),
(-18,418,o),
(-9,402,o),
(3,393,o),
(15,390,o),
(18,390,qs),
(36,390,o),
(82,392,o),
(101,392,q),
(101,165,ls),
(101,151,o),
(103,117,o),
(108,80,o),
(118,44,o),
(127,30,qs),
(159,-22,o),
(214,-22,qs),
(260,-22,o),
(314,14,q),
(320,-9,o),
(334,-32,qs),
(361,-73,o),
(418,-73,qs),
(455,-73,o)
);
},
{
closed = 1;
nodes = (
(203,387,o),
(233,387,o),
(266,388,o),
(298,388,o),
(308,388,q),
(308,149,ls),
(308,111,o),
(267,62,o),
(244,62,qs),
(224,62,o),
(194,104,o),
(194,152,qs),
(194,387,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
102 97 34 0 2 40
CALL[ ]	/* CallFunction */";
};
width = 555;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(96,151,o),
(97,117,o),
(102,80,o),
(112,45,o),
(122,30,qs),
(149,-11,o),
(206,-11,qs),
(228,-11,o),
(263,3,o),
(278,15,q),
(284,-10,o),
(298,-32,qs),
(325,-73,o),
(382,-73,qs),
(419,-73,o),
(473,-44,o),
(508,-3,o),
(524,41,o),
(524,55,qs),
(524,57,o),
(522,67,o),
(517,77,o),
(507,85,o),
(499,85,qs),
(487,85,o),
(473,77,o),
(465,64,o),
(460,48,o),
(457,40,qs),
(454,32,o),
(446,14,o),
(432,-2,o),
(412,-13,o),
(396,-13,qs),
(378,-13,o),
(357,7,o),
(346,38,o),
(342,74,o),
(342,90,qs),
(342,406,l),
(376,408,o),
(451,410,o),
(487,414,q),
(496,416,o),
(514,429,o),
(514,443,qs),
(514,459,o),
(490,472,o),
(478,472,qs),
(472,472,o),
(434,471,o),
(389,469,o),
(349,468,o),
(342,468,q),
(342,575,ls),
(342,605,o),
(322,618,o),
(309,618,qs),
(304,618,o),
(282,610,o),
(277,590,qs),
(272,570,o),
(271,521,o),
(271,500,qs),
(271,483,o),
(260,467,o),
(243,466,qs),
(167,461,l),
(167,575,ls),
(167,605,o),
(147,618,o),
(134,618,qs),
(129,618,o),
(107,610,o),
(102,590,qs),
(97,570,o),
(96,521,o),
(96,500,qs),
(96,483,o),
(88,468,o),
(68,466,qs),
(17,461,ls),
(3,459,o),
(-17,446,o),
(-17,432,qs),
(-17,414,o),
(6,402,o),
(12,402,qs),
(30,402,o),
(77,404,o),
(96,404,q),
(96,165,ls)
);
},
{
closed = 1;
nodes = (
(265,80,o),
(240,49,o),
(220,49,qs),
(202,49,o),
(181,69,o),
(170,100,o),
(167,136,o),
(167,152,qs),
(167,402,l),
(177,402,o),
(206,403,o),
(236,403,o),
(263,404,o),
(272,404,q),
(270,103,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
102 92 76 18 2 40
CALL[ ]	/* CallFunction */";
};
width = 541;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(87,151,o),
(88,117,o),
(94,80,o),
(105,45,o),
(115,30,qs),
(142,-11,o),
(199,-11,qs),
(224,-11,o),
(258,4,o),
(270,16,q),
(273,3,o),
(282,-21,o),
(290,-32,qs),
(317,-73,o),
(374,-73,qs),
(411,-73,o),
(465,-44,o),
(500,-3,o),
(516,41,o),
(516,55,qs),
(516,60,o),
(512,75,o),
(501,75,qs),
(490,75,o),
(484,56,o),
(479,40,qs),
(475,26,o),
(460,-3,o),
(437,-27,o),
(403,-43,o),
(381,-43,qs),
(352,-43,o),
(321,-17,o),
(306,22,o),
(304,69,o),
(304,90,qs),
(304,434,l),
(346,436,o),
(435,438,o),
(479,442,qs),
(488,443,o),
(496,452,o),
(496,457,qs),
(496,470,o),
(470,470,qs),
(463,470,o),
(416,469,o),
(362,467,o),
(313,466,o),
(304,466,q),
(304,575,ls),
(304,605,o),
(296,618,o),
(288,618,qs),
(283,618,o),
(275,610,o),
(270,590,qs),
(265,570,o),
(263,529,o),
(263,508,qs),
(263,486,o),
(257,463,o),
(238,462,qs),
(184,460,ls),
(180,460,o),
(174,458,q),
(129,458,l),
(129,575,ls),
(129,605,o),
(121,618,o),
(113,618,qs),
(108,618,o),
(100,610,o),
(95,590,qs),
(90,570,o),
(88,521,o),
(88,500,qs),
(88,478,o),
(80,458,o),
(60,456,qs),
(9,450,ls),
(-5,448,o),
(-15,441,o),
(-15,436,qs),
(-15,428,o),
(-2,422,o),
(4,422,qs),
(22,422,o),
(70,424,o),
(89,424,q),
(87,165,ls)
);
},
{
closed = 1;
nodes = (
(262,77,o),
(257,52,o),
(244,32,o),
(222,19,o),
(206,19,qs),
(177,19,o),
(146,45,o),
(131,84,o),
(129,131,o),
(129,152,qs),
(129,426,l),
(161,428,o),
(229,429,o),
(264,431,q),
(262,90,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
99 91 74 18 2 40
CALL[ ]	/* CallFunction */";
};
width = 532;
}
);
note = t_t;
},
{
glyphname = t_z;
kernLeft = t;
kernRight = t_z;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(239,8,o),
(239,20,qs),
(239,37,o),
(223,51,o),
(215,51,qs),
(205,51,o),
(195,70,o),
(190,100,o),
(189,136,o),
(189,152,qs),
(189,359,l),
(496,359,ls),
(507,359,o),
(515,353,o),
(515,351,qs),
(515,347,o),
(478,300,o),
(424,232,o),
(359,153,o),
(305,81,o),
(268,27,o),
(268,17,qs),
(268,4,o),
(293,-2,o),
(323,-2,qs),
(331,-2,o),
(366,-1,o),
(410,0,o),
(459,1,o),
(481,1,qs),
(503,1,o),
(537,0,o),
(574,0,o),
(622,-1,o),
(657,-1,qs),
(671,-1,o),
(671,18,qs),
(671,31,o),
(672,74,o),
(673,85,qs),
(679,181,ls),
(679,185,o),
(677,195,o),
(671,205,o),
(657,212,o),
(645,212,qs),
(615,212,o),
(600,177,o),
(597,151,qs),
(590,96,ls),
(588,77,o),
(581,77,qs),
(431,77,ls),
(414,77,o),
(414,84,qs),
(414,90,o),
(452,141,o),
(510,210,o),
(577,289,o),
(635,360,o),
(673,414,o),
(673,424,qs),
(673,431,o),
(663,440,o),
(642,440,qs),
(599,440,o),
(534,439,o),
(475,437,o),
(412,436,o),
(370,436,qs),
(331,436,o),
(275,436,o),
(233,435,o),
(202,435,o),
(189,435,q),
(189,575,ls),
(189,605,o),
(166,626,o),
(142,626,qs),
(128,626,o),
(109,610,o),
(104,590,qs),
(99,570,o),
(97,521,o),
(97,500,qs),
(97,489,o),
(96,466,o),
(90,447,o),
(79,434,o),
(69,433,qs),
(18,427,ls),
(-1,425,o),
(-15,401,o),
(-15,389,qs),
(-15,372,o),
(4,354,o),
(13,354,qs),
(31,354,o),
(77,356,o),
(96,356,q),
(96,165,ls),
(96,151,o),
(97,117,o),
(103,80,o),
(114,45,o),
(124,30,qs),
(151,-11,o),
(208,-11,qs),
(221,-11,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
28 0 1 40
CALL[ ]	/* CallFunction */";
};
width = 711;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(426,438,o),
(380,437,o),
(367,437,qs),
(324,437,o),
(272,436,o),
(232,436,o),
(194,435,o),
(165,435,q),
(165,575,ls),
(165,605,o),
(148,623,o),
(131,623,qs),
(121,623,o),
(106,610,o),
(101,590,qs),
(96,570,o),
(94,521,o),
(94,500,qs),
(94,489,o),
(93,466,o),
(87,447,o),
(76,434,o),
(66,433,qs),
(15,427,ls),
(-2,425,o),
(-14,407,o),
(-14,398,qs),
(-14,384,o),
(2,371,o),
(10,371,qs),
(28,371,o),
(74,373,o),
(93,373,q),
(93,165,ls),
(93,151,o),
(94,117,o),
(100,80,o),
(111,45,o),
(121,30,qs),
(148,-11,o),
(205,-11,qs),
(218,-11,o),
(233,4,o),
(233,14,qs),
(233,27,o),
(220,39,o),
(212,39,qs),
(194,39,o),
(175,61,o),
(166,94,o),
(165,134,o),
(165,152,qs),
(165,373,l),
(237,374,o),
(378,378,o),
(450,378,qs),
(518,378,ls),
(526,378,o),
(533,372,o),
(533,370,qs),
(533,368,o),
(527,360,o),
(519,351,o),
(511,342,o),
(509,340,qs),
(493,321,o),
(445,264,o),
(390,198,o),
(335,128,o),
(292,68,o),
(264,22,o),
(264,13,qs),
(264,2,o),
(281,-2,o),
(299,-2,qs),
(307,-2,o),
(342,-1,o),
(386,0,o),
(435,1,o),
(457,1,qs),
(479,1,o),
(513,0,o),
(550,0,o),
(598,-1,o),
(633,-1,qs),
(647,-1,o),
(647,18,qs),
(647,31,o),
(648,74,o),
(649,85,qs),
(655,181,ls),
(655,189,o),
(647,206,o),
(630,206,qs),
(608,206,o),
(596,177,o),
(594,151,qs),
(587,78,ls),
(585,59,o),
(578,59,qs),
(389,59,ls),
(372,59,o),
(372,66,qs),
(372,73,o),
(413,125,o),
(475,198,o),
(546,282,o),
(608,357,o),
(649,413,o),
(649,423,qs),
(649,430,o),
(635,440,o),
(618,440,qs),
(586,440,o),
(506,438,o),
(474,438,qs),
(452,438,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
103 74 1 40
CALL[ ]	/* CallFunction */";
};
width = 690;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(559,409,o),
(559,401,q),
(559,401,o),
(533,372,o),
(491,323,o),
(437,259,o),
(380,190,o),
(326,121,o),
(284,61,o),
(258,16,o),
(258,6,qs),
(258,-2,o),
(265,-2,qs),
(273,-2,o),
(308,-1,o),
(352,0,o),
(401,1,o),
(423,1,qs),
(445,1,o),
(479,0,o),
(516,0,o),
(564,-1,o),
(599,-1,qs),
(613,-1,o),
(613,18,qs),
(613,31,o),
(614,74,o),
(615,85,qs),
(621,181,ls),
(621,196,o),
(608,196,qs),
(599,196,o),
(592,177,o),
(590,151,qs),
(583,48,ls),
(581,29,o),
(574,29,qs),
(329,29,ls),
(312,29,o),
(312,36,qs),
(312,43,o),
(357,100,o),
(424,179,o),
(503,269,o),
(570,350,o),
(615,412,o),
(615,422,qs),
(615,429,o),
(601,439,o),
(584,439,qs),
(568,439,o),
(507,438,o),
(440,438,o),
(379,437,o),
(363,437,qs),
(313,437,o),
(253,436,o),
(208,436,o),
(164,435,o),
(131,435,q),
(131,575,ls),
(131,605,o),
(123,618,o),
(115,618,qs),
(110,618,o),
(102,610,o),
(97,590,qs),
(92,570,o),
(90,521,o),
(90,500,qs),
(90,489,o),
(89,466,o),
(83,447,o),
(72,434,o),
(62,433,qs),
(11,427,ls),
(-3,425,o),
(-13,418,o),
(-13,413,qs),
(-13,405,o),
(0,399,o),
(6,399,qs),
(24,399,o),
(70,401,o),
(89,401,q),
(89,165,ls),
(89,151,o),
(90,117,o),
(96,80,o),
(107,45,o),
(117,30,qs),
(144,-11,o),
(201,-11,qs),
(214,-11,o),
(224,-2,o),
(224,4,qs),
(224,9,o),
(216,19,o),
(208,19,qs),
(179,19,o),
(148,45,o),
(133,84,o),
(131,131,o),
(131,152,qs),
(131,403,l),
(550,409,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
40 11 1 40
CALL[ ]	/* CallFunction */";
};
width = 660;
}
);
note = t_z;
},
{
glyphname = ordfeminine;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(142,744,o),
(115,750,o),
(103,750,qs),
(69,750,o),
(32,720,o),
(32,698,qs),
(32,677,o),
(66,648,o),
(95,648,qs),
(130,648,o),
(155,670,q),
(159,658,o),
(183,648,o),
(195,648,qs),
(216,648,o),
(248,664,o),
(248,679,qs),
(248,683,o),
(243,699,o),
(229,699,qs),
(220,699,o),
(212,688,o),
(211,686,qs),
(208,679,o),
(206,679,qs),
(204,679,o),
(202,686,o),
(202,702,qs),
(202,718,o),
(203,754,o),
(203,759,qs),
(203,798,o),
(155,838,o),
(117,838,qs),
(85,838,o),
(44,810,o),
(44,787,qs),
(44,770,o),
(63,756,o),
(81,756,qs),
(91,756,o),
(110,762,o),
(110,773,qs),
(110,778,o),
(103,782,o),
(100,784,qs),
(98,785,o),
(92,788,o),
(92,792,qs),
(92,796,o),
(108,797,o),
(111,797,qs),
(137,797,o),
(155,772,o),
(155,761,qs),
(155,736,l)
);
},
{
closed = 1;
nodes = (
(99,715,o),
(111,715,qs),
(123,715,o),
(145,707,o),
(145,699,qs),
(145,691,o),
(126,684,o),
(112,684,qs),
(82,684,o),
(82,699,qs),
(82,707,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
9 1 1 0 55 1 9 7 32 1 3 4 44 1 5 3 4 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
9 1 1 0 55 1 9 7 32 1 8 4 44 1 5 3 4 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 7 0 1 96 0 7 9 3 7 94 0 9 4 0 9 4 102 0 4 3 0 4 3 102 8 1 3 6 1 5 3 5 88 0 0 0 2 83 0 2 2 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 1 0 7 0 1 96 0 7 9 0 7 9 102 0 9 4 0 9 4 102 0 4 3 0 4 3 102 8 1 3 6 1 5 3 5 88 0 0 0 2 83 0 2 2 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 7 0 1 7 104 0 7 9 0 7 9 102 0 9 4 0 9 4 102 0 4 3 0 4 3 102 8 1 3 6 1 5 3 5 88 0 0 0 2 83 0 2 2 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 1 0 7 0 1 7 104 0 7 9 0 7 9 102 0 9 4 0 9 4 102 0 4 8 0 4 8 102 0 2 0 0 1 2 0 91 0 8 3 5 8 79 0 3 5 5 3 79 0 3 3 5 83 6 1 5 3 5 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
65 63 36 36 35 36 35 39 36 41 50 10 24
CALL[ ]	/* CallFunction */";
};
width = 274;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(145,742,o),
(118,749,o),
(104,749,qs),
(72,749,o),
(35,720,o),
(35,698,qs),
(35,677,o),
(68,648,o),
(97,648,qs),
(132,648,o),
(158,672,q),
(162,659,o),
(184,648,o),
(198,648,qs),
(216,648,o),
(242,664,o),
(242,680,qs),
(242,684,o),
(238,697,o),
(228,697,qs),
(220,697,o),
(214,688,o),
(213,686,qs),
(211,681,o),
(210,675,o),
(205,675,qs),
(199,675,o),
(196,688,o),
(196,703,qs),
(196,717,o),
(197,753,o),
(197,760,qs),
(197,798,o),
(152,838,o),
(117,838,qs),
(86,838,o),
(47,810,o),
(47,785,qs),
(47,756,o),
(78,756,qs),
(88,756,o),
(104,763,o),
(104,772,qs),
(104,777,o),
(97,782,o),
(94,783,qs),
(92,784,o),
(86,787,o),
(86,792,qs),
(86,799,o),
(103,804,o),
(112,804,qs),
(138,804,o),
(158,777,o),
(158,761,qs),
(158,734,l)
);
},
{
closed = 1;
nodes = (
(100,720,o),
(111,720,qs),
(124,720,o),
(148,711,o),
(148,700,qs),
(148,691,o),
(127,679,o),
(109,679,qs),
(76,679,o),
(76,699,qs),
(76,711,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
9 1 1 0 55 1 9 7 32 1 3 4 44 1 5 3 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
16
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 1 0 7 0 1 7 104 0 7 9 3 7 94 0 9 4 0 9 4 102 0 4 3 0 4 3 102 8 1 3 6 1 5 3 5 88 0 0 0 2 83 0 2 2 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 7 0 1 7 104 0 7 9 0 7 9 102 0 9 4 0 9 4 102 0 4 3 0 4 3 102 8 1 3 6 1 5 3 5 88 0 0 0 2 83 0 2 2 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 1 0 7 0 1 7 104 0 7 9 0 7 9 102 0 9 4 0 9 4 102 0 4 3 0 4 3 102 0 2 0 0 1 2 0 91 8 1 3 5 5 3 79 8 1 3 3 5 84 6 1 5 3 5 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
65 63 36 36 35 36 36 39 35 42 34 10 24
CALL[ ]	/* CallFunction */";
};
width = 271;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(138,748,o),
(106,748,qs),
(76,748,o),
(39,720,o),
(39,698,qs),
(39,677,o),
(72,648,o),
(100,648,qs),
(119,648,o),
(150,663,o),
(162,675,q),
(169,648,o),
(202,648,qs),
(216,648,o),
(233,664,o),
(233,681,qs),
(233,686,o),
(231,694,o),
(226,694,qs),
(221,694,o),
(218,688,o),
(217,686,qs),
(215,681,o),
(213,668,o),
(204,668,qs),
(196,668,o),
(187,689,o),
(187,704,qs),
(187,717,o),
(188,753,o),
(188,762,qs),
(188,799,o),
(148,838,o),
(117,838,qs),
(88,838,o),
(51,810,o),
(51,781,qs),
(51,770,o),
(63,756,o),
(74,756,qs),
(95,756,o),
(95,770,qs),
(95,776,o),
(88,782,o),
(85,782,q),
(77,784,o),
(77,792,qs),
(77,816,o),
(113,816,qs),
(139,816,o),
(162,784,o),
(162,761,qs),
(162,730,l)
);
},
{
closed = 1;
nodes = (
(89,728,o),
(111,728,qs),
(134,728,o),
(152,712,o),
(152,701,qs),
(152,690,o),
(129,671,o),
(105,671,qs),
(85,671,o),
(67,688,o),
(67,699,qs),
(67,711,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
52 1 10 8 41 30 2 4 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 2 3 1 96 0 2 8 0 2 94 0 5 10 4 10 5 4 104 0 8 0 10 5 8 10 91 9 1 4 7 1 6 4 6 87 0 0 0 3 83 0 3 3 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 2 3 1 96 0 2 8 0 2 8 102 0 5 10 4 10 5 4 104 0 8 0 10 5 8 10 91 9 1 4 7 1 6 4 6 87 0 0 0 3 83 0 3 3 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 2 0 1 2 104 0 2 8 0 2 8 102 0 5 10 4 10 5 4 104 0 8 0 10 5 8 10 91 9 1 4 7 1 6 4 6 87 0 0 0 3 83 0 3 3 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 1 0 2 0 1 2 104 0 2 8 0 2 8 102 0 5 10 4 10 5 4 104 0 3 0 0 1 3 0 91 0 8 0 10 5 8 10 91 9 1 4 6 6 4 79 9 1 4 4 6 83 7 1 6 4 6 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
63 61 57 55 36 35 36 36 39 36 35 19 34 11 24
CALL[ ]	/* CallFunction */";
};
width = 267;
}
);
note = ordfeminine;
unicode = 170;
},
{
glyphname = ordmasculine;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(183,838,o),
(132,838,qs),
(78,838,o),
(30,781,o),
(30,741,qs),
(30,699,o),
(81,645,o),
(126,645,qs),
(176,645,o),
(240,694,o),
(240,744,qs),
(240,782,o)
);
},
{
closed = 1;
nodes = (
(174,761,o),
(174,743,qs),
(174,702,o),
(134,702,qs),
(97,702,o),
(97,742,qs),
(97,762,o),
(121,781,o),
(134,781,qs),
(151,781,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 3 0 0 3 0 87 4 1 2 2 1 83 0 1 1 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 4 1 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
13 12 18 16 12 21 13 21 36 34 5 17
CALL[ ]	/* CallFunction */";
};
width = 270;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(178,838,o),
(131,838,qs),
(82,838,o),
(33,782,o),
(33,741,qs),
(33,699,o),
(84,645,o),
(125,645,qs),
(167,645,o),
(229,694,o),
(229,744,qs),
(229,782,o)
);
},
{
closed = 1;
nodes = (
(177,766,o),
(177,743,qs),
(177,714,o),
(152,690,o),
(132,690,qs),
(114,690,o),
(86,715,o),
(86,742,qs),
(86,768,o),
(115,793,o),
(133,793,qs),
(152,793,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 3 0 0 3 0 87 4 1 2 2 1 83 0 1 1 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 4 1 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
13 12 19 17 12 23 13 23 36 34 5 17
CALL[ ]	/* CallFunction */";
};
width = 262;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(171,838,o),
(129,838,qs),
(88,838,o),
(37,783,o),
(37,741,qs),
(37,699,o),
(88,645,o),
(123,645,qs),
(139,645,o),
(171,657,o),
(197,682,o),
(213,719,o),
(213,744,qs),
(213,782,o)
);
},
{
closed = 1;
nodes = (
(181,775,o),
(181,743,qs),
(181,704,o),
(144,670,o),
(124,670,qs),
(104,670,o),
(70,704,o),
(70,742,qs),
(70,777,o),
(102,813,o),
(127,813,qs),
(153,813,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 3 0 0 3 0 87 4 1 2 2 1 83 0 1 1 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 4 1 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
15 14 21 19 14 25 15 25 36 36 5 17
CALL[ ]	/* CallFunction */";
};
width = 250;
}
);
note = ordmasculine;
unicode = 186;
},
{
glyphname = uni03BC;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(434,148,o),
(410,106,o),
(373,76,o),
(325,58,o),
(300,58,qs),
(278,58,o),
(242,81,o),
(216,121,o),
(201,175,o),
(201,206,qs),
(201,298,o),
(205,404,o),
(205,427,qs),
(205,458,o),
(192,472,o),
(171,472,qs),
(138,472,o),
(69,469,o),
(13,461,o),
(-23,444,o),
(-23,431,qs),
(-23,420,o),
(2,408,o),
(11,408,qs),
(78,408,ls),
(101,408,o),
(110,393,o),
(110,370,qs),
(110,298,o),
(113,170,o),
(113,115,qs),
(113,28,o),
(111,-114,o),
(109,-177,qs),
(109,-183,o),
(113,-197,o),
(123,-209,o),
(141,-217,o),
(155,-217,qs),
(181,-217,o),
(203,-189,o),
(203,-174,qs),
(203,-150,o),
(202,-110,o),
(201,-71,o),
(199,-28,o),
(199,-1,q),
(206,-8,o),
(251,-20,o),
(277,-20,qs),
(312,-20,o),
(365,-1,o),
(403,29,o),
(428,65,o),
(435,81,q),
(436,22,o),
(444,-22,o),
(457,-22,qs),
(473,-22,o),
(525,-20,o),
(573,-13,o),
(608,2,o),
(608,15,qs),
(608,33,o),
(581,42,o),
(572,42,qs),
(568,42,o),
(553,41,o),
(544,41,qs),
(533,41,o),
(527,48,o),
(527,62,qs),
(527,65,o),
(526,107,o),
(526,156,qs),
(526,213,o),
(527,290,o),
(528,342,o),
(529,372,o),
(529,383,qs),
(529,401,o),
(521,421,o),
(500,430,o),
(463,432,o),
(435,432,qs),
(408,432,o),
(357,430,o),
(317,422,o),
(293,407,o),
(293,395,qs),
(293,379,o),
(328,368,o),
(344,368,qs),
(410,368,ls),
(429,368,o),
(437,346,o),
(437,327,qs),
(434,172,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
42 1 8 0 50 1 3 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 8 3 8 2 3 104 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 0 8 8 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 2 8 3 8 2 3 104 0 5 3 5 107 0 7 0 6 0 7 6 91 0 1 0 0 8 1 0 91 0 8 8 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
41 53 60 41 38 53 93 69 50 9 24
CALL[ ]	/* CallFunction */";
};
width = 597;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(429,144,o),
(404,96,o),
(364,60,o),
(311,40,o),
(283,40,qs),
(254,40,o),
(213,68,o),
(187,114,o),
(175,174,o),
(175,206,qs),
(175,298,o),
(179,404,o),
(179,427,qs),
(179,458,o),
(166,472,o),
(145,472,qs),
(122,472,o),
(65,470,o),
(14,463,o),
(-21,450,o),
(-21,439,qs),
(-21,431,o),
(-3,420,o),
(6,420,qs),
(73,420,ls),
(96,420,o),
(105,405,o),
(105,382,qs),
(106,306,o),
(108,173,o),
(108,115,qs),
(108,28,o),
(106,-114,o),
(104,-177,qs),
(104,-190,o),
(123,-211,o),
(143,-211,qs),
(163,-211,o),
(177,-189,o),
(177,-174,qs),
(177,-126,o),
(174,-40,o),
(173,15,q),
(185,1,o),
(238,-20,o),
(271,-20,qs),
(306,-20,o),
(359,-1,o),
(398,29,o),
(423,65,o),
(430,81,q),
(431,22,o),
(439,-22,o),
(450,-22,qs),
(466,-22,o),
(516,-21,o),
(563,-15,o),
(596,-2,o),
(596,9,qs),
(596,23,o),
(568,30,o),
(559,30,qs),
(547,30,o),
(532,29,o),
(529,29,qs),
(512,29,o),
(501,34,o),
(501,50,qs),
(501,54,o),
(500,101,o),
(500,156,qs),
(500,213,o),
(501,290,o),
(502,342,o),
(503,372,o),
(503,383,qs),
(503,401,o),
(496,421,o),
(480,430,o),
(452,432,o),
(430,432,qs),
(409,432,o),
(362,430,o),
(321,424,o),
(295,411,o),
(295,401,qs),
(295,389,o),
(323,380,o),
(339,380,qs),
(405,380,ls),
(425,380,o),
(432,359,o),
(432,339,qs),
(429,172,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
42 1 8 0 50 1 3 2 2 66
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
42 1 2 0 50 1 3 2 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
42 1 8 0 50 1 3 2 2 66
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 8 3 8 2 3 104 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 0 8 8 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 1 2 2 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 7 0 6 0 7 6 91 0 1 0 0 2 1 0 91 8 1 2 2 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 8 3 8 2 3 104 0 7 0 6 0 7 6 91 0 1 0 0 8 1 0 91 0 8 8 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 2 8 3 8 2 3 104 0 5 3 5 107 0 7 0 6 0 7 6 91 0 1 0 0 8 1 0 91 0 8 8 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
41 53 58 39 38 53 94 53 50 9 24
CALL[ ]	/* CallFunction */";
};
width = 584;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(422,138,o),
(395,79,o),
(351,35,o),
(292,10,o),
(259,10,qs),
(219,10,o),
(171,45,o),
(146,102,o),
(138,171,o),
(138,206,qs),
(138,298,o),
(142,404,o),
(142,427,qs),
(142,458,o),
(129,472,o),
(108,472,qs),
(99,472,o),
(58,471,o),
(15,467,o),
(-18,459,o),
(-18,452,qs),
(-18,449,o),
(-10,440,o),
(-1,440,qs),
(66,440,ls),
(89,440,o),
(98,425,o),
(98,402,qs),
(99,320,o),
(101,178,o),
(101,115,qs),
(101,28,o),
(99,-114,o),
(97,-177,qs),
(97,-190,o),
(112,-201,o),
(120,-201,qs),
(130,-201,o),
(140,-189,o),
(140,-174,qs),
(140,-126,o),
(137,-13,o),
(136,42,q),
(156,16,o),
(218,-20,o),
(262,-20,qs),
(297,-20,o),
(351,-1,o),
(390,29,o),
(416,65,o),
(423,81,q),
(424,22,o),
(432,-22,o),
(443,-22,qs),
(459,-22,o),
(506,-21,o),
(549,-17,o),
(579,-9,o),
(579,-1,qs),
(579,5,o),
(561,10,o),
(552,10,qs),
(528,10,o),
(498,9,o),
(492,9,qs),
(475,9,o),
(464,20,o),
(464,30,qs),
(464,35,o),
(463,90,o),
(463,156,qs),
(463,213,o),
(464,290,o),
(465,342,o),
(466,372,o),
(466,383,qs),
(466,401,o),
(462,421,o),
(452,430,o),
(436,432,o),
(423,432,qs),
(410,432,o),
(368,431,o),
(327,427,o),
(298,418,o),
(298,411,qs),
(298,400,o),
(332,400,qs),
(398,400,ls),
(415,400,o),
(425,386,o),
(425,359,qs),
(422,172,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
49 41 2 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 1 2 2 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 7 0 6 1 7 6 91 0 1 0 0 2 1 0 91 8 1 2 2 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 5 3 5 107 0 7 0 6 1 7 6 91 0 1 0 0 2 1 0 91 8 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
41 53 58 39 38 53 94 52 50 9 24
CALL[ ]	/* CallFunction */";
};
width = 566;
}
);
note = uni03BC;
unicode = 956;
},
{
glyphname = zero;
kernRight = zero;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(154,583,o),
(196,690,o),
(260,758,o),
(304,758,qs),
(343,758,o),
(398,723,o),
(436,666,o),
(458,591,o),
(470,512,o),
(474,434,o),
(474,402,qs),
(474,309,o),
(440,178,o),
(389,97,o),
(327,60,o),
(300,60,qs),
(249,60,o),
(184,122,o),
(147,218,o),
(133,332,o),
(133,384,qs),
(133,450,o)
);
},
{
closed = 1;
nodes = (
(80,107,o),
(151,17,o),
(241,-21,o),
(288,-21,qs),
(334,-21,o),
(434,19,o),
(517,115,o),
(570,277,o),
(570,399,qs),
(570,444,o),
(563,544,o),
(544,642,o),
(508,731,o),
(450,799,o),
(366,839,o),
(309,839,qs),
(255,839,o),
(173,798,o),
(113,728,o),
(72,634,o),
(47,529,o),
(37,418,o),
(37,365,qs),
(37,255,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
42 42 42 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 608;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(137,592,o),
(183,705,o),
(253,776,o),
(301,776,qs),
(340,776,o),
(396,739,o),
(435,679,o),
(459,601,o),
(472,518,o),
(477,436,o),
(477,402,qs),
(477,304,o),
(442,167,o),
(386,81,o),
(319,42,o),
(288,42,qs),
(236,42,o),
(169,108,o),
(130,208,o),
(115,329,o),
(115,384,qs),
(115,453,o)
);
},
{
closed = 1;
nodes = (
(84,107,o),
(153,18,o),
(240,-20,o),
(282,-20,qs),
(325,-20,o),
(420,21,o),
(500,118,o),
(552,279,o),
(552,399,qs),
(552,444,o),
(544,544,o),
(524,642,o),
(488,731,o),
(433,798,o),
(355,838,o),
(303,838,qs),
(228,838,o),
(127,750,o),
(66,612,o),
(40,444,o),
(40,365,qs),
(40,255,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
42 40 42 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 593;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(114,608,o),
(164,730,o),
(243,806,o),
(297,806,qs),
(336,806,o),
(393,767,o),
(434,701,o),
(461,617,o),
(476,527,o),
(482,439,o),
(482,402,qs),
(482,295,o),
(444,147,o),
(383,54,o),
(308,12,o),
(271,12,qs),
(218,12,o),
(149,83,o),
(107,193,o),
(90,324,o),
(90,384,qs),
(90,458,o)
);
},
{
closed = 1;
nodes = (
(89,108,o),
(157,19,o),
(237,-19,o),
(273,-19,qs),
(312,-19,o),
(401,24,o),
(477,122,o),
(527,282,o),
(527,399,qs),
(527,445,o),
(517,546,o),
(496,643,o),
(460,731,o),
(409,798,o),
(340,837,o),
(295,837,qs),
(249,837,o),
(177,796,o),
(122,727,o),
(82,634,o),
(57,529,o),
(45,418,o),
(45,365,qs),
(45,255,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
42 42 42 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = zero;
unicode = 48;
},
{
glyphname = one;
kernLeft = one;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(250,810,o),
(240,821,o),
(230,821,qs),
(222,821,o),
(176,820,o),
(123,819,o),
(76,818,o),
(68,818,qs),
(51,817,o),
(24,804,o),
(24,785,qs),
(24,768,o),
(52,756,o),
(70,756,qs),
(75,756,o),
(94,756,o),
(113,757,o),
(130,757,o),
(133,757,qs),
(147,757,o),
(155,741,o),
(155,723,qs),
(155,686,o),
(155,640,o),
(154,607,o),
(153,579,o),
(152,545,o),
(151,495,o),
(150,457,qs),
(150,434,o),
(149,344,o),
(146,241,o),
(142,140,o),
(139,106,qs),
(137,91,o),
(123,73,o),
(102,63,o),
(79,60,o),
(70,60,qs),
(44,60,o),
(23,44,o),
(23,25,qs),
(23,7,o),
(57,0,o),
(82,0,qs),
(317,0,ls),
(328,0,o),
(344,15,o),
(344,29,qs),
(344,50,o),
(319,63,o),
(305,63,qs),
(235,63,l),
(250,792,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
51 44 40 33 36 52 32 5 18
CALL[ ]	/* CallFunction */";
};
width = 364;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(230,805,o),
(224,821,o),
(210,821,qs),
(203,821,o),
(160,820,o),
(110,819,o),
(66,818,o),
(59,818,qs),
(46,817,o),
(22,807,o),
(22,791,qs),
(22,776,o),
(47,768,o),
(61,768,qs),
(67,768,o),
(89,768,o),
(111,769,o),
(130,769,o),
(134,769,qs),
(143,769,o),
(152,761,o),
(156,751,o),
(157,739,o),
(157,735,qs),
(156,709,o),
(155,661,o),
(154,600,o),
(153,517,o),
(152,457,qs),
(150,379,o),
(148,275,o),
(146,197,o),
(143,132,o),
(140,94,qs),
(139,77,o),
(120,59,o),
(96,50,o),
(70,48,o),
(61,48,qs),
(42,48,o),
(22,38,o),
(22,23,qs),
(22,9,o),
(53,0,o),
(73,0,qs),
(290,0,ls),
(300,0,o),
(315,12,o),
(315,23,qs),
(315,40,o),
(292,51,o),
(281,51,qs),
(215,51,l),
(230,792,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
19 1 0 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
51 45 40 33 36 52 32 5 18
CALL[ ]	/* CallFunction */";
};
width = 346;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(202,805,o),
(196,821,o),
(182,821,qs),
(176,821,o),
(137,820,o),
(92,819,o),
(52,818,o),
(46,818,qs),
(19,816,o),
(19,801,qs),
(19,788,o),
(48,788,qs),
(56,788,o),
(82,788,o),
(109,789,o),
(131,789,o),
(136,789,qs),
(145,789,o),
(154,781,o),
(158,771,o),
(159,759,o),
(159,755,qs),
(158,727,o),
(158,675,o),
(157,610,o),
(155,522,o),
(154,457,qs),
(152,375,o),
(149,265,o),
(146,183,o),
(143,114,o),
(142,74,qs),
(142,57,o),
(120,38,o),
(90,29,o),
(58,28,o),
(48,28,qs),
(39,28,o),
(19,22,o),
(19,13,qs),
(19,5,o),
(46,0,o),
(60,0,qs),
(272,0,ls),
(292,0,o),
(292,13,qs),
(292,21,o),
(274,31,o),
(263,31,qs),
(187,31,l),
(202,792,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
48 42 39 32 52 51 32 5 18
CALL[ ]	/* CallFunction */";
};
width = 320;
}
);
note = one;
unicode = 49;
},
{
glyphname = two;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(447,87,o),
(430,79,o),
(423,77,qs),
(415,75,o),
(340,74,o),
(294,74,qs),
(263,74,o),
(204,74,o),
(181,76,q),
(210,102,o),
(282,178,o),
(354,268,o),
(423,368,o),
(477,473,o),
(509,578,o),
(509,626,qs),
(509,668,o),
(484,743,o),
(430,798,o),
(343,831,o),
(281,831,qs),
(220,831,o),
(126,782,o),
(62,713,o),
(29,640,o),
(29,616,qs),
(29,590,o),
(57,549,o),
(92,549,qs),
(126,549,o),
(152,583,o),
(152,602,qs),
(152,611,o),
(146,625,o),
(138,637,o),
(132,648,o),
(132,655,qs),
(132,662,o),
(151,694,o),
(187,727,o),
(238,752,o),
(271,752,qs),
(310,752,o),
(365,728,o),
(398,692,o),
(413,648,o),
(413,628,qs),
(413,579,o),
(377,468,o),
(316,356,o),
(237,246,o),
(152,148,o),
(68,67,o),
(32,40,qs),
(24,33,o),
(11,20,o),
(11,10,qs),
(11,2,o),
(27,-14,o),
(47,-14,qs),
(68,-14,o),
(99,-2,o),
(103,3,q),
(111,3,o),
(161,2,o),
(191,2,qs),
(228,2,o),
(296,1,o),
(363,1,o),
(430,0,o),
(468,0,qs),
(476,0,o),
(493,8,o),
(501,23,qs),
(518,58,o),
(546,112,o),
(546,126,qs),
(546,142,o),
(526,153,o),
(512,153,qs),
(498,153,o),
(478,142,o),
(468,124,qs),
(455,101,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
74 1 6 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 3 3 5 83 0 5 5 20 67 0 6 6 1 83 0 1 1 13 67 0 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 5 0 3 4 5 3 91 0 6 6 1 83 0 1 1 13 67 0 2 2 21 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
79 75 63 61 55 53 42 40 34 151 34 7 18
CALL[ ]	/* CallFunction */";
};
width = 571;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(435,71,o),
(424,63,o),
(417,63,qs),
(410,63,o),
(347,63,o),
(264,65,o),
(177,66,o),
(146,68,q),
(175,95,o),
(249,172,o),
(325,262,o),
(398,364,o),
(455,469,o),
(490,576,o),
(490,626,qs),
(490,668,o),
(468,743,o),
(418,798,o),
(340,831,o),
(283,831,qs),
(222,831,o),
(128,782,o),
(64,713,o),
(31,640,o),
(31,616,qs),
(31,612,o),
(33,592,o),
(42,571,o),
(61,555,o),
(77,555,qs),
(103,555,o),
(133,581,o),
(133,602,qs),
(133,611,o),
(126,624,o),
(117,634,o),
(110,645,o),
(110,652,qs),
(110,660,o),
(133,699,o),
(175,739,o),
(235,770,o),
(273,770,qs),
(312,770,o),
(367,743,o),
(400,701,o),
(415,651,o),
(415,628,qs),
(415,578,o),
(378,468,o),
(317,355,o),
(238,244,o),
(153,147,o),
(69,66,o),
(34,40,qs),
(26,33,o),
(13,22,o),
(13,14,qs),
(13,6,o),
(26,-11,o),
(42,-11,qs),
(56,-11,o),
(80,-2,o),
(84,3,q),
(193,3,ls),
(227,3,o),
(289,2,o),
(349,1,o),
(411,0,o),
(446,0,qs),
(451,0,o),
(470,10,o),
(477,22,qs),
(504,70,o),
(533,116,o),
(533,126,qs),
(533,138,o),
(514,147,o),
(503,147,qs),
(489,147,o),
(475,132,o),
(470,124,qs),
(443,83,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 3 3 5 83 0 5 5 20 67 0 6 6 1 83 0 1 1 13 67 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 5 0 3 4 5 3 91 0 6 6 1 83 0 1 1 13 67 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
80 74 63 61 53 51 40 38 34 119 34 7 18
CALL[ ]	/* CallFunction */";
};
width = 554;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(418,41,o),
(407,33,o),
(400,33,qs),
(392,33,o),
(319,33,o),
(223,35,o),
(123,36,o),
(89,38,q),
(118,67,o),
(196,147,o),
(280,243,o),
(360,349,o),
(424,461,o),
(463,573,o),
(463,626,qs),
(463,668,o),
(444,743,o),
(402,798,o),
(334,831,o),
(286,831,qs),
(225,831,o),
(131,782,o),
(67,713,o),
(34,640,o),
(34,616,qs),
(34,612,o),
(36,595,o),
(45,578,o),
(61,565,o),
(75,565,qs),
(78,565,o),
(88,567,o),
(98,575,o),
(106,590,o),
(106,602,qs),
(106,611,o),
(97,622,o),
(87,631,o),
(78,640,o),
(78,647,qs),
(78,657,o),
(107,707,o),
(159,760,o),
(232,800,o),
(276,800,qs),
(315,800,o),
(370,767,o),
(403,717,o),
(418,656,o),
(418,628,qs),
(418,578,o),
(381,468,o),
(320,355,o),
(241,244,o),
(156,147,o),
(72,66,o),
(37,40,qs),
(29,33,o),
(16,22,o),
(16,14,qs),
(16,6,o),
(26,-6,o),
(35,-6,qs),
(40,-6,o),
(53,-2,o),
(57,3,q),
(196,3,ls),
(226,3,o),
(281,2,o),
(334,1,o),
(389,0,o),
(420,0,qs),
(431,0,o),
(446,16,o),
(450,22,qs),
(470,58,o),
(492,96,o),
(503,115,o),
(506,122,o),
(506,126,qs),
(506,137,o),
(494,137,qs),
(481,137,o),
(473,124,qs),
(426,53,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 3 3 5 83 0 5 5 20 67 0 6 6 1 83 0 1 1 13 67 0 2 2 16 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 5 0 3 4 5 3 91 0 6 6 1 83 0 1 1 13 67 0 2 2 16 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
82 76 65 63 55 53 40 38 34 120 33 7 18
CALL[ ]	/* CallFunction */";
};
width = 530;
}
);
note = two;
unicode = 50;
},
{
glyphname = three;
kernLeft = three;
kernRight = three;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(77,406,o),
(77,381,qs),
(77,344,o),
(109,344,qs),
(120,344,o),
(147,351,o),
(182,360,o),
(226,368,o),
(255,368,qs),
(284,368,o),
(338,358,o),
(379,334,o),
(404,294,o),
(404,263,qs),
(404,230,o),
(378,174,o),
(336,128,o),
(283,92,o),
(230,68,o),
(180,56,o),
(163,56,qs),
(147,56,o),
(105,58,o),
(92,64,qs),
(82,69,o),
(68,82,o),
(55,93,o),
(40,101,o),
(30,101,qs),
(13,101,o),
(-5,75,o),
(-5,56,qs),
(-5,39,o),
(18,11,o),
(59,-8,o),
(113,-18,o),
(144,-18,qs),
(214,-18,o),
(341,31,o),
(438,110,o),
(495,211,o),
(495,264,qs),
(495,303,o),
(465,366,o),
(413,411,o),
(344,436,o),
(305,436,qs),
(284,436,o),
(256,435,o),
(233,432,o),
(211,427,o),
(198,423,qs),
(214,428,o),
(269,454,o),
(333,492,o),
(397,542,o),
(449,601,o),
(482,670,o),
(482,708,qs),
(482,747,o),
(454,797,o),
(406,825,o),
(340,836,o),
(301,836,qs),
(228,836,o),
(127,786,o),
(63,716,o),
(34,639,o),
(34,612,qs),
(34,611,o),
(36,601,o),
(43,589,o),
(58,580,o),
(72,580,qs),
(85,580,o),
(105,594,o),
(121,613,o),
(131,634,o),
(133,642,qs),
(141,671,o),
(172,717,o),
(213,748,o),
(260,765,o),
(283,765,qs),
(340,765,o),
(391,729,o),
(391,694,qs),
(391,667,o),
(358,612,o),
(305,561,o),
(240,515,o),
(177,475,o),
(122,444,o),
(106,435,qs),
(97,430,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
42 1 7 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 1 0 3 0 1 3 104 0 8 7 5 7 8 5 104 0 5 6 7 5 6 102 0 0 0 2 83 0 2 2 20 67 0 7 7 3 83 0 3 3 15 67 0 6 6 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 1 0 3 0 1 3 104 0 8 7 5 7 8 5 104 0 5 6 7 5 6 102 0 3 0 7 8 3 7 91 0 0 0 2 83 0 2 2 20 67 0 6 6 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 3 0 1 3 104 0 8 7 5 7 8 5 104 0 5 6 7 5 6 102 0 2 0 0 1 2 0 91 0 3 0 7 8 3 7 91 0 6 6 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
35 42 53 38 40 62 40 40 41 9 24
CALL[ ]	/* CallFunction */";
};
width = 548;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(82,397,o),
(82,379,qs),
(82,365,o),
(99,348,o),
(110,348,qs),
(119,348,o),
(147,359,o),
(183,373,o),
(228,384,o),
(256,384,qs),
(285,384,o),
(344,368,o),
(391,336,o),
(420,286,o),
(420,252,qs),
(420,205,o),
(366,127,o),
(286,70,o),
(193,38,o),
(154,38,qs),
(142,38,o),
(101,44,o),
(82,58,qs),
(68,69,o),
(58,89,o),
(44,89,qs),
(30,89,o),
(17,71,o),
(17,57,qs),
(17,39,o),
(41,11,o),
(81,-8,o),
(132,-18,o),
(160,-18,qs),
(226,-18,o),
(347,32,o),
(440,113,o),
(495,215,o),
(495,267,qs),
(495,306,o),
(463,369,o),
(409,413,o),
(337,437,o),
(297,437,qs),
(279,437,o),
(246,433,o),
(219,429,o),
(202,425,o),
(200,425,q),
(210,429,o),
(261,453,o),
(323,489,o),
(391,538,o),
(447,598,o),
(483,669,o),
(483,709,qs),
(483,753,o),
(441,804,o),
(384,829,o),
(325,836,o),
(307,836,qs),
(239,836,o),
(141,786,o),
(78,716,o),
(48,641,o),
(48,615,qs),
(48,614,o),
(49,605,o),
(54,594,o),
(66,586,o),
(77,586,qs),
(89,586,o),
(106,597,o),
(118,614,o),
(125,634,o),
(128,642,qs),
(138,675,o),
(175,724,o),
(222,757,o),
(274,774,o),
(301,774,qs),
(322,774,o),
(361,763,o),
(390,741,o),
(408,709,o),
(408,688,qs),
(408,657,o),
(372,601,o),
(316,550,o),
(248,505,o),
(181,466,o),
(124,433,o),
(108,421,qs),
(103,417,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 1 0 4 0 1 4 104 0 8 3 9 3 8 9 104 0 9 6 3 9 6 102 0 6 7 3 6 7 102 0 0 0 2 83 0 2 2 20 67 0 4 4 15 67 0 3 3 15 67 0 7 7 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 1 0 4 0 1 4 104 0 4 3 0 4 3 102 0 3 8 0 3 8 102 0 8 9 0 8 9 102 0 9 6 0 9 6 102 0 6 7 0 6 7 102 0 0 0 2 83 0 2 2 20 67 0 7 7 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 1 0 4 0 1 4 104 0 4 3 0 4 3 102 0 3 8 0 3 8 102 0 8 9 0 8 9 102 0 9 6 0 9 6 102 0 6 7 0 6 7 102 0 2 0 0 1 2 0 91 0 7 7 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
89 87 40 36 38 40 35 27 40 40 43 10 24
CALL[ ]	/* CallFunction */";
};
width = 532;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(95,390,o),
(95,380,qs),
(95,371,o),
(106,363,o),
(111,363,qs),
(118,363,o),
(146,374,o),
(184,388,o),
(230,399,o),
(257,399,qs),
(287,399,o),
(346,385,o),
(394,352,o),
(423,299,o),
(423,259,qs),
(423,207,o),
(369,117,o),
(289,50,o),
(195,11,o),
(156,11,qs),
(119,11,o),
(70,41,o),
(56,59,qs),
(48,69,o),
(42,78,o),
(35,78,qs),
(24,78,o),
(20,64,o),
(20,59,qs),
(20,39,o),
(44,10,o),
(83,-9,o),
(131,-18,o),
(154,-18,qs),
(214,-18,o),
(327,33,o),
(415,114,o),
(468,214,o),
(468,264,qs),
(468,306,o),
(436,369,o),
(382,411,o),
(309,433,o),
(267,433,qs),
(246,433,o),
(205,425,o),
(203,425,q),
(205,428,o),
(244,448,o),
(300,483,o),
(365,531,o),
(420,593,o),
(456,667,o),
(456,711,qs),
(456,754,o),
(419,804,o),
(369,829,o),
(317,836,o),
(301,836,qs),
(239,836,o),
(146,786,o),
(83,717,o),
(51,644,o),
(51,620,qs),
(51,615,o),
(55,596,o),
(67,596,qs),
(78,596,o),
(93,623,o),
(100,642,qs),
(129,719,o),
(230,804,o),
(293,804,qs),
(314,804,o),
(357,793,o),
(390,770,o),
(411,732,o),
(411,705,qs),
(411,664,o),
(375,596,o),
(319,538,o),
(251,490,o),
(184,451,o),
(127,419,o),
(111,406,qs),
(107,403,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 1 0 4 0 1 4 104 0 9 8 6 8 9 6 104 0 6 7 8 6 7 102 0 0 0 2 83 0 2 2 20 67 0 3 3 15 67 0 8 8 4 83 0 4 4 15 67 0 7 7 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 1 0 4 0 1 4 104 0 3 4 8 4 3 8 104 0 9 8 6 8 9 6 104 0 6 7 8 6 7 102 0 4 0 8 9 4 8 91 0 0 0 2 83 0 2 2 20 67 0 7 7 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 1 0 4 0 1 4 104 0 3 4 8 4 3 8 104 0 9 8 6 8 9 6 104 0 6 7 8 6 7 102 0 2 0 0 1 2 0 91 0 4 0 8 9 4 8 91 0 7 7 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
81 79 40 36 38 40 33 27 38 36 43 10 24
CALL[ ]	/* CallFunction */";
};
width = 509;
}
);
note = three;
unicode = 51;
},
{
glyphname = four;
kernLeft = four;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(553,244,o),
(578,262,o),
(578,285,qs),
(578,324,o),
(535,325,qs),
(464,328,l),
(464,364,o),
(468,457,o),
(474,555,o),
(481,651,o),
(487,727,o),
(491,775,o),
(491,777,qs),
(491,797,o),
(463,820,o),
(437,820,qs),
(417,820,o),
(391,800,o),
(382,789,qs),
(346,744,o),
(293,676,o),
(245,615,o),
(198,553,o),
(137,472,o),
(57,365,o),
(1,291,qs),
(-5,283,o),
(-9,270,o),
(-9,264,qs),
(-9,250,o),
(16,234,o),
(33,234,qs),
(55,234,o),
(218,241,o),
(371,244,q),
(362,101,ls),
(360,81,o),
(336,68,o),
(313,63,qs),
(309,62,o),
(291,60,o),
(270,59,o),
(248,57,o),
(240,56,qs),
(226,54,o),
(203,45,o),
(203,28,qs),
(203,18,o),
(212,7,o),
(224,1,o),
(238,0,o),
(243,0,qs),
(501,0,ls),
(521,0,o),
(554,11,o),
(554,31,qs),
(554,47,o),
(525,65,o),
(481,65,qs),
(466,65,o),
(452,74,o),
(452,87,qs),
(452,93,o),
(453,128,o),
(456,175,o),
(459,224,o),
(461,244,q),
(541,244,ls)
);
},
{
closed = 1;
nodes = (
(128,322,qs),
(128,326,o),
(132,333,o),
(139,342,qs),
(400,696,l),
(373,328,l),
(342,326,o),
(265,321,o),
(194,318,o),
(143,316,o),
(139,316,qs),
(128,316,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
74 1 5 4 31 1 0 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
9 7 2 5 8 6 2 3 0 5 3 91 0 4 4 12 67 2 1 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 2 0 1 0 2 96 9 7 2 5 8 6 2 3 0 5 3 91 0 4 4 12 67 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 2 0 1 0 2 96 8 1 6 3 5 6 79 9 7 2 5 0 3 0 5 3 91 0 4 4 14 67 0 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
73 68 0 0 68 79 73 79 0 67 0 66 41 46 70 25 52 39 10 21
CALL[ ]	/* CallFunction */";
};
width = 580;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(519,244,o),
(540,256,o),
(540,273,qs),
(540,288,o),
(520,305,o),
(504,306,qs),
(440,310,l),
(440,347,o),
(444,448,o),
(451,556,o),
(458,662,o),
(465,747,o),
(469,802,o),
(469,804,qs),
(469,815,o),
(445,826,o),
(427,826,qs),
(410,826,o),
(382,803,o),
(379,798,q),
(343,753,o),
(285,678,o),
(232,608,o),
(180,538,o),
(119,455,o),
(46,355,o),
(-2,291,qs),
(-8,283,o),
(-12,270,o),
(-12,264,qs),
(-12,250,o),
(13,234,o),
(30,234,qs),
(52,234,o),
(215,241,o),
(368,244,q),
(359,89,ls),
(358,69,o),
(332,53,o),
(310,51,qs),
(306,51,o),
(285,49,o),
(258,47,o),
(230,45,o),
(220,45,qs),
(210,45,o),
(190,37,o),
(190,24,qs),
(190,9,o),
(214,0,o),
(223,0,qs),
(468,0,ls),
(488,0,o),
(512,11,o),
(512,25,qs),
(512,39,o),
(490,49,o),
(468,49,qs),
(455,49,o),
(427,53,o),
(427,65,qs),
(427,71,o),
(429,113,o),
(432,166,o),
(435,223,o),
(437,244,q),
(511,244,ls)
);
},
{
closed = 1;
nodes = (
(88,303,o),
(88,306,qs),
(88,312,o),
(99,323,o),
(99,326,q),
(398,727,l),
(370,310,l),
(334,308,o),
(244,303,o),
(163,300,o),
(105,298,o),
(101,298,qs),
(91,298,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
74 73 2 6 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
10 8 2 6 9 7 2 4 0 6 4 91 0 5 5 12 67 3 2 2 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
9 1 7 4 6 7 79 10 8 2 6 0 4 0 6 4 91 0 5 5 14 67 3 2 2 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
72 67 0 0 67 79 72 79 0 66 0 65 41 46 68 19 36 52 39 11 22
CALL[ ]	/* CallFunction */";
};
width = 569;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(523,244,o),
(534,254,o),
(534,259,qs),
(534,267,o),
(524,275,o),
(508,276,qs),
(414,280,l),
(415,319,o),
(421,426,o),
(427,541,o),
(434,653,o),
(440,744,o),
(443,802,o),
(443,804,qs),
(443,815,o),
(429,821,o),
(421,821,qs),
(404,821,o),
(386,803,o),
(383,798,q),
(347,753,o),
(289,678,o),
(236,608,o),
(184,538,o),
(123,455,o),
(50,355,o),
(2,291,qs),
(-4,283,o),
(-8,270,o),
(-8,264,qs),
(-8,250,o),
(17,234,o),
(34,234,qs),
(56,234,o),
(219,241,o),
(372,244,q),
(363,69,ls),
(362,49,o),
(336,33,o),
(314,31,qs),
(310,31,o),
(289,29,o),
(262,27,o),
(234,25,o),
(224,25,qs),
(204,25,o),
(204,14,qs),
(204,6,o),
(218,0,o),
(227,0,qs),
(472,0,ls),
(492,0,o),
(506,10,o),
(506,15,qs),
(506,26,o),
(482,29,o),
(472,29,qs),
(461,29,o),
(436,29,o),
(415,32,o),
(401,38,o),
(401,45,qs),
(401,52,o),
(403,98,o),
(406,158,o),
(409,221,o),
(411,244,q),
(515,244,ls)
);
},
{
closed = 1;
nodes = (
(40,276,qs),
(40,281,o),
(51,293,o),
(53,296,qs),
(404,763,l),
(374,280,l),
(331,278,o),
(224,273,o),
(128,270,o),
(59,268,o),
(55,268,qs),
(40,268,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
74 1 6 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
10 8 2 6 9 7 2 4 0 6 4 92 0 5 5 12 67 3 2 2 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
9 1 7 4 6 7 80 10 8 2 6 0 4 0 6 4 92 0 5 5 14 67 3 2 2 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
73 68 0 0 68 79 73 79 0 67 0 66 41 46 68 19 35 52 56 11 22
CALL[ ]	/* CallFunction */";
};
width = 554;
}
);
note = four;
unicode = 52;
},
{
glyphname = five;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(335,810,o),
(229,805,o),
(131,798,o),
(105,794,qs),
(88,791,o),
(86,775,qs),
(83,727,o),
(78,665,o),
(72,611,o),
(65,551,o),
(59,505,qs),
(57,492,o),
(55,466,o),
(55,460,qs),
(55,417,o),
(70,375,o),
(93,375,qs),
(103,375,o),
(141,387,o),
(195,400,o),
(262,412,o),
(300,412,qs),
(341,412,o),
(397,391,o),
(431,354,o),
(446,303,o),
(446,274,qs),
(446,237,o),
(417,161,o),
(355,100,o),
(259,61,o),
(193,61,qs),
(163,61,o),
(113,84,o),
(113,100,qs),
(113,114,o),
(131,121,o),
(153,128,o),
(171,143,o),
(171,165,qs),
(171,188,o),
(141,212,o),
(116,212,qs),
(78,212,o),
(29,152,o),
(29,104,qs),
(29,64,o),
(63,18,o),
(117,-6,o),
(181,-12,o),
(211,-12,qs),
(294,-12,o),
(418,39,o),
(501,120,o),
(542,220,o),
(542,269,qs),
(542,306,o),
(521,386,o),
(467,450,o),
(375,492,o),
(305,492,qs),
(282,492,o),
(231,484,o),
(185,474,o),
(151,465,o),
(146,463,q),
(170,706,l),
(179,710,o),
(222,716,o),
(278,721,o),
(341,723,o),
(398,725,o),
(443,725,o),
(454,725,qs),
(462,725,o),
(481,728,o),
(498,738,o),
(509,756,o),
(509,771,qs),
(509,795,o),
(476,812,o),
(449,812,qs),
(428,812,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
76 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 1 1 0 83 8 1 0 0 14 67 0 6 6 2 83 0 2 2 23 67 0 5 5 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 1 1 0 83 8 1 0 0 14 67 0 6 6 2 83 0 2 2 23 67 0 5 5 3 83 0 3 3 24 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 2 0 6 7 2 6 91 0 1 1 0 83 8 1 0 0 14 67 0 5 5 3 83 0 3 3 24 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
1 0 66 64 61 59 51 49 40 38 32 30 22 20 12 7 0 82 1 80 9 15
CALL[ ]	/* CallFunction */";
};
width = 556;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(314,810,o),
(220,805,o),
(132,798,o),
(106,794,qs),
(89,791,o),
(87,775,qs),
(84,727,o),
(79,662,o),
(73,605,o),
(66,547,o),
(60,505,qs),
(58,492,o),
(56,466,o),
(56,460,qs),
(56,431,o),
(71,393,o),
(92,393,qs),
(102,393,o),
(141,403,o),
(191,414,o),
(248,424,o),
(277,424,qs),
(328,424,o),
(393,397,o),
(432,354,o),
(447,300,o),
(447,274,qs),
(447,233,o),
(418,154,o),
(356,90,o),
(260,51,o),
(194,51,qs),
(176,51,o),
(139,57,o),
(111,69,o),
(93,85,o),
(93,96,qs),
(93,110,o),
(111,117,o),
(133,123,o),
(151,136,o),
(151,156,qs),
(151,177,o),
(125,198,o),
(105,198,qs),
(90,198,o),
(63,183,o),
(42,158,o),
(30,123,o),
(30,104,qs),
(30,61,o),
(70,14,o),
(124,-8,o),
(181,-12,o),
(198,-12,qs),
(281,-12,o),
(403,39,o),
(483,120,o),
(522,220,o),
(522,269,qs),
(522,306,o),
(497,386,o),
(442,450,o),
(352,492,o),
(287,492,qs),
(264,492,o),
(212,484,o),
(166,474,o),
(132,465,o),
(126,463,q),
(159,724,l),
(174,730,o),
(247,738,o),
(329,742,o),
(405,743,o),
(423,743,qs),
(439,743,o),
(471,757,o),
(471,779,qs),
(471,799,o),
(440,812,o),
(418,812,qs),
(397,812,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
76 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 1 1 0 83 8 1 0 0 14 67 0 6 6 2 83 0 2 2 23 67 0 5 5 3 83 0 3 3 24 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 2 0 6 7 2 6 91 0 1 1 0 83 8 1 0 0 14 67 0 5 5 3 83 0 3 3 24 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
1 0 66 64 61 59 51 49 38 36 29 26 18 16 9 5 0 82 1 80 9 15
CALL[ ]	/* CallFunction */";
};
width = 542;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(316,810,o),
(222,805,o),
(134,798,o),
(108,794,qs),
(91,791,o),
(89,775,qs),
(86,727,o),
(81,662,o),
(75,605,o),
(68,547,o),
(62,505,qs),
(60,492,o),
(58,466,o),
(58,460,qs),
(58,444,o),
(76,423,o),
(90,423,qs),
(100,423,o),
(140,433,o),
(192,444,o),
(250,454,o),
(279,454,qs),
(330,454,o),
(395,421,o),
(434,370,o),
(449,305,o),
(449,274,qs),
(449,228,o),
(420,137,o),
(358,65,o),
(262,21,o),
(196,21,qs),
(172,21,o),
(126,29,o),
(88,46,o),
(65,73,o),
(65,93,qs),
(65,107,o),
(83,113,o),
(105,115,o),
(123,124,o),
(123,141,qs),
(123,160,o),
(102,175,o),
(90,175,qs),
(81,175,o),
(61,167,o),
(44,151,o),
(32,123,o),
(32,104,qs),
(32,61,o),
(73,14,o),
(125,-8,o),
(173,-12,o),
(180,-12,qs),
(263,-12,o),
(382,39,o),
(458,120,o),
(494,220,o),
(494,269,qs),
(494,306,o),
(472,386,o),
(424,450,o),
(346,492,o),
(289,492,qs),
(262,492,o),
(200,484,o),
(146,474,o),
(105,465,o),
(98,463,q),
(131,754,l),
(142,758,o),
(187,764,o),
(243,769,o),
(306,771,o),
(364,773,o),
(411,773,o),
(425,773,qs),
(441,773,o),
(463,783,o),
(463,792,qs),
(463,805,o),
(434,812,o),
(420,812,qs),
(399,812,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
78 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 1 1 0 83 8 1 0 0 14 67 0 6 6 2 83 0 2 2 23 67 0 5 5 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 1 1 0 83 8 1 0 0 14 67 0 6 6 2 83 0 2 2 23 67 0 5 5 3 83 0 3 3 24 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 2 0 6 7 2 6 91 0 1 1 0 83 8 1 0 0 14 67 0 5 5 3 83 0 3 3 24 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
1 0 68 66 63 61 53 51 40 38 30 28 20 18 10 5 0 84 1 82 9 15
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = five;
unicode = 53;
},
{
glyphname = six;
kernLeft = six;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(377,796,qs),
(377,813,o),
(357,830,o),
(342,830,qs),
(329,830,o),
(301,816,qs),
(278,804,o),
(221,746,o),
(161,662,o),
(103,557,o),
(58,438,o),
(31,312,o),
(31,249,qs),
(31,175,o),
(72,73,o),
(143,10,o),
(238,-18,o),
(293,-18,qs),
(365,-18,o),
(458,26,o),
(510,95,o),
(530,176,o),
(530,214,qs),
(530,247,o),
(512,320,o),
(464,381,o),
(380,420,o),
(315,420,qs),
(252,420,o),
(152,375,o),
(119,324,q),
(122,354,o),
(130,397,o),
(142,434,o),
(157,468,o),
(166,489,qs),
(193,553,o),
(244,641,o),
(292,704,o),
(340,749,o),
(365,772,qs),
(377,783,o)
);
},
{
closed = 1;
nodes = (
(216,75,o),
(173,107,o),
(145,158,o),
(145,194,qs),
(145,232,o),
(173,286,o),
(218,321,o),
(272,338,o),
(298,338,qs),
(375,338,o),
(442,268,o),
(442,203,qs),
(442,139,o),
(362,61,o),
(290,61,qs),
(267,61,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
10 1 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 2 20 67 0 4 4 0 83 0 0 0 15 67 5 1 3 3 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
16
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 2 12 67 0 4 4 0 83 0 0 0 15 67 5 1 3 3 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 2 20 67 0 4 4 0 83 0 0 0 15 67 5 1 3 3 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 4 3 0 4 92 0 2 2 20 67 5 1 3 3 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 106 0 0 0 4 3 0 4 92 5 1 3 3 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
43 42 49 47 42 57 43 57 44 40 44 6 18
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(383,799,o),
(383,807,qs),
(383,817,o),
(370,834,o),
(356,834,qs),
(347,834,o),
(328,827,o),
(320,822,qs),
(295,807,o),
(233,746,o),
(170,660,o),
(109,554,o),
(62,436,o),
(34,312,o),
(34,251,qs),
(34,176,o),
(75,74,o),
(145,10,o),
(236,-18,o),
(286,-18,qs),
(355,-18,o),
(445,26,o),
(498,94,o),
(520,172,o),
(520,207,qs),
(520,237,o),
(502,311,o),
(456,376,o),
(375,420,o),
(311,420,qs),
(264,420,o),
(189,396,o),
(134,353,o),
(100,295,o),
(94,261,q),
(92,266,o),
(92,285,qs),
(92,328,o),
(121,417,o),
(148,481,qs),
(174,543,o),
(233,640,o),
(292,713,o),
(347,766,o),
(370,784,qs),
(376,789,o)
);
},
{
closed = 1;
nodes = (
(202,59,o),
(156,94,o),
(127,147,o),
(127,183,qs),
(127,227,o),
(156,292,o),
(204,335,o),
(264,356,o),
(295,356,qs),
(335,356,o),
(392,331,o),
(428,289,o),
(445,234,o),
(445,204,qs),
(445,168,o),
(419,108,o),
(375,66,o),
(316,43,o),
(282,43,qs),
(256,43,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
10 1 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 2 20 67 0 4 4 0 83 0 0 0 15 67 5 1 3 3 1 84 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 4 3 0 4 91 0 2 2 20 67 5 1 3 3 1 84 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 106 0 0 0 4 3 0 4 91 5 1 3 3 1 84 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
47 46 57 55 46 65 47 65 45 40 46 6 18
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(369,807,o),
(369,815,qs),
(369,831,o),
(349,831,qs),
(341,831,o),
(329,826,o),
(324,822,qs),
(280,791,o),
(179,672,o),
(94,519,o),
(38,342,o),
(38,254,qs),
(38,178,o),
(80,74,o),
(148,10,o),
(233,-18,o),
(276,-18,qs),
(339,-18,o),
(423,32,o),
(473,104,o),
(494,184,o),
(494,214,qs),
(494,238,o),
(481,309,o),
(441,374,o),
(366,420,o),
(305,420,qs),
(260,420,o),
(184,392,o),
(125,343,o),
(86,273,o),
(78,231,q),
(76,235,o),
(75,246,o),
(75,260,qs),
(75,308,o),
(95,414,o),
(123,480,qs),
(145,532,o),
(203,631,o),
(265,715,o),
(327,777,o),
(354,794,qs),
(358,796,o)
);
},
{
closed = 1;
nodes = (
(181,32,o),
(132,72,o),
(101,136,o),
(101,180,qs),
(101,226,o),
(136,302,o),
(192,356,o),
(264,386,o),
(302,386,qs),
(345,386,o),
(402,350,o),
(435,296,o),
(449,232,o),
(449,205,qs),
(449,161,o),
(420,91,o),
(371,40,o),
(306,13,o),
(270,13,qs),
(241,13,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
11 1 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 2 20 67 0 4 4 0 83 0 0 0 15 67 5 1 3 3 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 4 3 0 4 92 0 2 2 20 67 5 1 3 3 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 106 0 0 0 4 3 0 4 92 5 1 3 3 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
45 44 55 53 44 63 45 63 43 40 47 6 18
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = six;
unicode = 54;
},
{
glyphname = seven;
kernLeft = seven;
kernRight = seven;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-11,24,o),
(-11,11,qs),
(-11,-9,o),
(15,-24,o),
(28,-24,qs),
(47,-24,o),
(69,-11,o),
(77,5,qs),
(457,718,l),
(458,721,o),
(468,738,o),
(479,761,o),
(487,783,o),
(487,790,qs),
(487,799,o),
(483,810,o),
(469,816,o),
(443,819,o),
(421,819,qs),
(409,819,o),
(356,818,o),
(288,818,o),
(213,816,o),
(145,816,o),
(92,815,o),
(81,815,qs),
(57,815,o),
(25,800,o),
(25,777,qs),
(25,757,o),
(41,730,o),
(57,730,qs),
(136,730,o),
(273,737,o),
(347,737,qs),
(361,737,o),
(361,726,qs),
(361,720,o),
(332,659,o),
(281,561,o),
(214,435,o),
(137,294,o),
(55,147,o),
(16,77,qs),
(4,55,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 1 83 0 1 1 14 67 0 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 2 0 2 107 0 0 0 1 83 0 1 1 14 0 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
44 148 88 3 18
CALL[ ]	/* CallFunction */";
};
width = 480;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(2,5,o),
(2,-2,qs),
(2,-10,o),
(24,-22,o),
(36,-22,qs),
(53,-22,o),
(68,-9,o),
(75,5,qs),
(465,737,l),
(466,740,o),
(474,753,o),
(481,769,o),
(487,785,o),
(487,790,qs),
(487,811,o),
(455,820,o),
(429,820,qs),
(417,820,o),
(363,818,o),
(294,816,o),
(218,813,o),
(149,811,o),
(96,809,o),
(85,809,qs),
(62,809,o),
(36,799,o),
(36,780,qs),
(36,766,o),
(49,749,o),
(61,749,qs),
(147,749,o),
(296,756,o),
(376,756,qs),
(390,756,o),
(390,743,qs),
(390,740,o),
(338,641,o),
(240,457,o),
(98,190,o),
(7,18,qs),
(5,13,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 0 1 83 0 1 1 14 67 0 2 2 21 2 68 42 148 86 3 18
CALL[ ]	/* CallFunction */";
};
width = 467;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(9,-1,o),
(9,-7,qs),
(9,-19,o),
(23,-19,qs),
(35,-19,o),
(45,-9,o),
(52,5,qs),
(457,768,ls),
(460,773,o),
(465,784,o),
(465,789,qs),
(465,801,o),
(447,821,o),
(421,821,qs),
(409,821,o),
(354,819,o),
(283,817,o),
(204,814,o),
(133,812,o),
(78,810,o),
(67,810,qs),
(46,810,o),
(28,805,o),
(28,794,qs),
(28,789,o),
(36,780,o),
(43,780,qs),
(137,780,o),
(310,787,o),
(398,787,qs),
(412,787,o),
(412,774,qs),
(412,772,o),
(408,762,o),
(386,719,o),
(338,629,o),
(249,463,o),
(113,206,o),
(14,18,qs),
(12,13,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 0 1 83 0 1 1 14 67 0 2 2 21 2 68 40 148 88 3 18
CALL[ ]	/* CallFunction */";
};
width = 448;
}
);
note = seven;
unicode = 55;
},
{
glyphname = eight;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,60,o),
(119,7,o),
(206,-20,o),
(257,-20,qs),
(322,-20,o),
(422,18,o),
(491,82,o),
(527,167,o),
(527,214,qs),
(527,256,o),
(498,327,o),
(452,381,o),
(396,415,o),
(369,420,q),
(388,426,o),
(437,459,o),
(480,512,o),
(509,581,o),
(509,622,qs),
(509,659,o),
(485,734,o),
(430,794,o),
(341,832,o),
(275,832,qs),
(219,832,o),
(133,796,o),
(76,736,o),
(47,657,o),
(47,614,qs),
(47,575,o),
(68,512,o),
(102,464,o),
(145,430,o),
(167,420,q),
(147,413,o),
(96,380,o),
(51,324,o),
(21,245,o),
(21,193,qs),
(21,140,o)
);
},
{
closed = 1;
nodes = (
(140,305,o),
(182,349,o),
(238,374,o),
(271,374,qs),
(304,374,o),
(363,351,o),
(406,308,o),
(432,247,o),
(432,209,qs),
(432,134,o),
(337,55,o),
(262,55,qs),
(218,55,o),
(162,80,o),
(129,122,o),
(117,178,o),
(117,209,qs),
(117,245,o)
);
},
{
closed = 1;
nodes = (
(152,687,o),
(187,727,o),
(241,753,o),
(279,753,qs),
(312,753,o),
(365,732,o),
(402,695,o),
(422,645,o),
(422,616,qs),
(422,585,o),
(399,531,o),
(360,490,o),
(307,467,o),
(278,467,qs),
(251,467,o),
(200,485,o),
(160,522,o),
(136,576,o),
(136,612,qs),
(136,636,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
25 5 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 5 5 0 83 0 0 0 20 67 0 3 3 4 83 0 4 4 23 67 0 2 2 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 0 3 2 4 3 91 0 5 5 0 83 0 0 0 20 67 0 2 2 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 2 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
74 72 64 62 54 52 46 44 36 34 46 6 16
CALL[ ]	/* CallFunction */";
};
width = 578;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(74,58,o),
(138,6,o),
(222,-20,o),
(269,-20,qs),
(326,-20,o),
(420,16,o),
(486,78,o),
(522,159,o),
(522,204,qs),
(522,246,o),
(491,319,o),
(443,374,o),
(384,410,o),
(356,416,q),
(377,422,o),
(430,456,o),
(477,510,o),
(509,580,o),
(509,622,qs),
(509,659,o),
(481,734,o),
(425,794,o),
(341,832,o),
(286,832,qs),
(233,832,o),
(148,796,o),
(90,736,o),
(59,657,o),
(59,615,qs),
(59,577,o),
(83,512,o),
(121,462,o),
(168,426,o),
(191,416,q),
(170,408,o),
(116,373,o),
(69,318,o),
(37,241,o),
(37,191,qs),
(37,138,o)
);
},
{
closed = 1;
nodes = (
(141,308,o),
(189,353,o),
(249,377,o),
(279,377,qs),
(308,377,o),
(367,354,o),
(415,311,o),
(445,247,o),
(445,206,qs),
(445,167,o),
(417,106,o),
(369,63,o),
(306,41,o),
(272,41,qs),
(233,41,o),
(174,67,o),
(133,112,o),
(112,170,o),
(112,203,qs),
(112,243,o)
);
},
{
closed = 1;
nodes = (
(150,694,o),
(186,741,o),
(244,771,o),
(286,771,qs),
(325,771,o),
(381,745,o),
(417,703,o),
(434,649,o),
(434,621,qs),
(434,585,o),
(409,524,o),
(367,479,o),
(312,454,o),
(283,454,qs),
(258,454,o),
(205,473,o),
(162,512,o),
(134,571,o),
(134,610,qs),
(134,637,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
25 5 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 5 5 0 83 0 0 0 20 67 0 3 3 4 83 0 4 4 15 67 0 2 2 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 0 3 2 4 3 91 0 5 5 0 83 0 0 0 20 67 0 2 2 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 2 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
76 74 66 64 56 54 46 44 36 34 46 6 16
CALL[ ]	/* CallFunction */";
};
width = 561;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(81,58,o),
(145,6,o),
(226,-20,o),
(266,-20,qs),
(313,-20,o),
(396,17,o),
(459,78,o),
(495,157,o),
(495,199,qs),
(495,238,o),
(464,310,o),
(416,367,o),
(357,408,o),
(329,416,q),
(350,422,o),
(403,456,o),
(450,510,o),
(482,581,o),
(482,625,qs),
(482,661,o),
(458,734,o),
(408,794,o),
(333,832,o),
(282,832,qs),
(233,832,o),
(152,796,o),
(94,736,o),
(62,659,o),
(62,617,qs),
(62,580,o),
(86,515,o),
(124,463,o),
(171,426,o),
(194,416,q),
(173,405,o),
(119,368,o),
(72,312,o),
(40,238,o),
(40,191,qs),
(40,138,o)
);
},
{
closed = 1;
nodes = (
(118,318,o),
(170,367,o),
(236,392,o),
(268,392,qs),
(300,392,o),
(365,367,o),
(416,319,o),
(448,249,o),
(448,204,qs),
(448,159,o),
(417,87,o),
(365,37,o),
(296,11,o),
(259,11,qs),
(217,11,o),
(153,42,o),
(108,94,o),
(85,161,o),
(85,198,qs),
(85,246,o)
);
},
{
closed = 1;
nodes = (
(125,710,o),
(167,766,o),
(233,801,o),
(281,801,qs),
(329,801,o),
(390,765,o),
(425,713,o),
(437,652,o),
(437,628,qs),
(437,584,o),
(408,514,o),
(360,465,o),
(299,439,o),
(268,439,qs),
(241,439,o),
(183,460,o),
(137,503,o),
(107,568,o),
(107,612,qs),
(107,643,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
25 5 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 5 5 0 83 0 0 0 20 67 0 3 3 4 83 0 4 4 15 67 0 2 2 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 0 3 2 4 3 91 0 5 5 0 83 0 0 0 20 67 0 2 2 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 2 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
76 74 66 64 56 54 46 44 36 34 46 6 16
CALL[ ]	/* CallFunction */";
};
width = 537;
}
);
note = eight;
unicode = 56;
},
{
glyphname = nine;
kernLeft = nine;
kernRight = nine;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(386,130,o),
(433,217,qs),
(451,250,o),
(485,333,o),
(510,427,o),
(526,527,o),
(526,578,qs),
(526,608,o),
(510,695,o),
(459,774,o),
(362,830,o),
(282,830,qs),
(209,830,o),
(109,784,o),
(47,712,o),
(19,623,o),
(19,581,qs),
(19,527,o),
(52,437,o),
(110,374,o),
(186,339,o),
(230,339,qs),
(289,339,o),
(381,362,o),
(419,399,q),
(407,353,o),
(364,254,o),
(304,159,o),
(228,75,o),
(183,45,qs),
(169,35,o),
(159,18,o),
(159,6,qs),
(159,-13,o),
(181,-24,o),
(195,-24,qs),
(215,-24,o),
(244,-10,o),
(259,2,qs),
(295,30,o)
);
},
{
closed = 1;
nodes = (
(388,722,o),
(424,674,o),
(437,613,o),
(437,583,qs),
(437,562,o),
(423,506,o),
(383,454,o),
(312,418,o),
(256,418,qs),
(224,418,o),
(169,443,o),
(129,487,o),
(106,544,o),
(106,576,qs),
(106,669,o),
(197,753,o),
(278,753,qs),
(326,753,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 1 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
5 1 3 3 2 83 0 2 2 20 67 0 1 1 4 83 0 4 4 15 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
16
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
5 1 3 3 2 83 0 2 2 12 67 0 1 1 4 83 0 4 4 15 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
5 1 3 3 2 83 0 2 2 20 67 0 1 1 4 83 0 4 4 15 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 4 0 1 0 4 1 91 5 1 3 3 2 83 0 2 2 20 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 2 5 1 3 4 2 3 91 0 4 0 1 0 4 1 91 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 1 0 107 0 2 5 1 3 4 2 3 91 0 4 1 1 4 79 0 4 4 1 83 0 1 4 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
41 40 49 47 40 57 41 57 40 44 34 6 18
CALL[ ]	/* CallFunction */";
};
width = 556;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(360,129,o),
(408,217,qs),
(427,253,o),
(463,341,o),
(491,439,o),
(508,541,o),
(508,591,qs),
(508,625,o),
(488,709,o),
(435,781,o),
(341,830,o),
(267,830,qs),
(198,830,o),
(101,784,o),
(40,712,o),
(11,623,o),
(11,581,qs),
(11,527,o),
(46,437,o),
(104,374,o),
(182,339,o),
(226,339,qs),
(251,339,o),
(306,351,o),
(358,375,o),
(406,412,o),
(425,437,q),
(414,383,o),
(366,265,o),
(298,154,o),
(215,59,o),
(168,28,qs),
(157,20,o),
(145,8,o),
(145,-3,qs),
(145,-17,o),
(167,-28,o),
(175,-28,qs),
(189,-28,o),
(211,-18,o),
(223,-8,qs),
(261,23,o)
);
},
{
closed = 1;
nodes = (
(377,736,o),
(416,685,o),
(434,623,o),
(434,595,qs),
(434,569,o),
(412,504,o),
(366,446,o),
(296,406,o),
(247,406,qs),
(212,406,o),
(153,432,o),
(110,478,o),
(86,540,o),
(86,576,qs),
(86,627,o),
(117,700,o),
(169,747,o),
(238,769,o),
(276,769,qs),
(318,769,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 4 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 4 0 1 0 4 1 91 5 1 3 3 2 83 0 2 2 20 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
16
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 4 0 1 0 4 1 91 5 1 3 3 2 83 0 2 2 12 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 4 0 1 0 4 1 91 5 1 3 3 2 83 0 2 2 20 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 1 0 107 0 4 0 1 0 4 1 91 5 1 3 3 2 83 0 2 2 20 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 1 0 107 0 2 5 1 3 4 2 3 91 0 4 1 1 4 79 0 4 4 1 83 0 1 4 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
43 42 53 51 42 61 43 61 40 46 34 6 18
CALL[ ]	/* CallFunction */";
};
width = 541;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(334,129,o),
(382,217,qs),
(401,253,o),
(438,341,o),
(465,439,o),
(482,541,o),
(482,591,qs),
(482,625,o),
(461,709,o),
(409,781,o),
(322,830,o),
(256,830,qs),
(193,830,o),
(102,784,o),
(43,712,o),
(15,623,o),
(15,581,qs),
(15,527,o),
(50,437,o),
(108,374,o),
(186,339,o),
(230,339,qs),
(281,339,o),
(394,402,o),
(436,467,q),
(425,405,o),
(375,276,o),
(305,157,o),
(219,59,o),
(172,28,qs),
(161,20,o),
(149,8,o),
(149,-3,qs),
(149,-14,o),
(165,-19,o),
(169,-19,qs),
(183,-19,o),
(197,-8,qs),
(235,23,o)
);
},
{
closed = 1;
nodes = (
(375,760,o),
(419,704,o),
(438,640,o),
(438,615,qs),
(438,582,o),
(415,499,o),
(365,426,o),
(285,376,o),
(228,376,qs),
(185,376,o),
(122,407,o),
(80,461,o),
(60,534,o),
(60,576,qs),
(60,635,o),
(95,719,o),
(151,773,o),
(218,799,o),
(250,799,qs),
(303,799,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
13 1 4 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 4 0 1 0 4 1 91 5 1 3 3 2 83 0 2 2 20 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
16
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 4 0 1 0 4 1 91 5 1 3 3 2 83 0 2 2 12 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 4 0 1 0 4 1 91 5 1 3 3 2 83 0 2 2 20 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 2 5 1 3 4 2 3 91 0 4 0 1 0 4 1 91 0 0 0 21 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
40 39 50 48 39 58 40 58 40 44 33 6 18
CALL[ ]	/* CallFunction */";
};
width = 519;
}
);
note = nine;
unicode = 57;
},
{
glyphname = fraction;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(258,554,o),
(216,476,o),
(163,377,o),
(108,274,o),
(55,173,o),
(13,93,o),
(-12,41,o),
(-12,37,qs),
(-12,29,o),
(1,6,o),
(21,6,qs),
(46,6,o),
(74,33,o),
(80,42,qs),
(88,54,o),
(123,117,o),
(170,205,o),
(225,310,o),
(280,417,o),
(332,517,o),
(371,597,o),
(395,647,o),
(395,650,qs),
(395,654,o),
(376,676,o),
(358,676,qs),
(347,676,o),
(330,666,o),
(314,647,o),
(296,619,o),
(284,602,q),
(284,601,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 1 1 0 1 66 0 0 1 0 106 0 1 1 13 1 68 45 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 389;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(261,553,o),
(219,476,o),
(166,377,o),
(111,274,o),
(58,174,o),
(16,93,o),
(-9,41,o),
(-9,37,qs),
(-9,29,o),
(3,12,o),
(17,12,qs),
(35,12,o),
(57,32,o),
(62,42,qs),
(68,54,o),
(102,117,o),
(149,205,o),
(204,310,o),
(260,417,o),
(312,517,o),
(353,597,o),
(377,647,o),
(377,650,qs),
(377,654,o),
(363,670,o),
(350,670,qs),
(338,670,o),
(322,660,o),
(309,642,o),
(296,617,o),
(287,602,q),
(287,601,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 1 0 106 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 9 values pushed */
0 0 1 0 106 0 1 1 97
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
45 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 374;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(265,553,o),
(223,476,o),
(170,377,o),
(115,274,o),
(62,174,o),
(20,93,o),
(-5,41,o),
(-5,37,qs),
(-5,22,o),
(12,22,qs),
(23,22,o),
(33,34,o),
(36,42,qs),
(41,54,o),
(73,118,o),
(119,206,o),
(175,311,o),
(232,418,o),
(285,518,o),
(326,597,o),
(351,647,o),
(351,650,qs),
(351,660,o),
(338,660,qs),
(329,660,o),
(317,653,o),
(308,639,o),
(298,617,o),
(291,602,q),
(291,601,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 1 0 106 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 9 values pushed */
0 0 1 0 106 0 1 1 97
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
44 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 352;
}
);
note = fraction;
unicode = 8260;
},
{
glyphname = onehalf;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(29,12,o),
(29,11,qs),
(29,-4,o),
(59,-19,o),
(69,-19,qs),
(85,-19,o),
(115,-4,o),
(120,5,qs),
(525,768,l),
(529,774,o),
(539,799,o),
(539,807,qs),
(539,815,o),
(527,837,o),
(507,837,qs),
(495,837,o),
(476,834,o),
(459,822,o),
(441,796,o),
(430,774,qs),
(406,726,o),
(377,666,o),
(356,624,o),
(339,589,o),
(315,543,o),
(278,476,o),
(249,423,qs),
(234,395,o),
(198,329,o),
(148,237,o),
(79,109,o),
(31,18,q),
(29,16,o)
);
},
{
closed = 1;
nodes = (
(180,646,o),
(183,748,o),
(184,798,o),
(184,812,o),
(184,815,qs),
(184,827,o),
(176,827,qs),
(173,827,o),
(147,826,o),
(117,824,o),
(91,823,o),
(88,823,qs),
(75,823,o),
(55,809,o),
(55,796,qs),
(55,779,o),
(74,770,o),
(88,770,qs),
(91,770,o),
(105,771,o),
(107,771,qs),
(112,771,o),
(116,762,o),
(116,757,qs),
(116,749,o),
(116,738,o),
(115,723,o),
(114,701,o),
(114,683,qs),
(113,657,o),
(112,626,o),
(111,604,o),
(110,585,o),
(109,573,qs),
(108,560,o),
(99,554,o),
(88,554,qs),
(81,554,o),
(56,544,o),
(56,528,qs),
(56,511,o),
(80,500,o),
(93,500,qs),
(195,500,ls),
(204,500,o),
(226,509,o),
(226,528,qs),
(226,545,o),
(202,556,o),
(191,556,qs),
(178,556,l)
);
},
{
closed = 1;
nodes = (
(479,58,qs),
(436,60,l),
(448,74,o),
(483,117,o),
(514,169,o),
(536,226,o),
(536,253,qs),
(536,287,o),
(489,335,o),
(433,335,qs),
(403,335,o),
(360,315,o),
(333,288,o),
(321,258,o),
(321,249,qs),
(321,235,o),
(336,212,o),
(366,212,qs),
(379,212,o),
(396,224,o),
(396,240,qs),
(396,252,o),
(385,256,o),
(385,261,qs),
(385,263,o),
(411,280,o),
(429,280,qs),
(443,280,o),
(464,265,o),
(464,254,qs),
(464,224,o),
(436,155,o),
(393,89,o),
(343,34,o),
(322,18,qs),
(314,12,o),
(314,8,qs),
(314,5,o),
(320,-5,o),
(332,-5,qs),
(350,-5,o),
(362,3,o),
(364,6,q),
(366,6,o),
(397,5,o),
(440,3,o),
(490,2,o),
(510,2,qs),
(515,2,o),
(521,9,o),
(522,11,qs),
(523,12,o),
(530,25,o),
(539,40,o),
(546,56,o),
(546,61,qs),
(546,67,o),
(535,78,o),
(524,78,qs),
(515,78,o),
(495,70,o),
(490,60,qs),
(489,58,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
95 1 9 14 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 12 11 8 11 12 8 104 0 8 14 11 8 14 102 4 15 2 2 0 3 13 2 3 91 0 13 0 11 12 13 11 91 6 1 5 5 0 83 7 1 0 0 20 67 0 14 14 9 84 0 9 9 13 67 10 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 12 11 8 11 12 8 104 0 8 14 11 8 14 102 4 15 2 2 0 3 13 2 3 91 0 13 0 11 12 13 11 91 6 1 5 5 0 83 7 1 0 0 20 67 0 14 14 9 84 10 1 9 9 13 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 12 11 8 11 12 8 104 0 8 14 11 8 14 102 4 15 2 2 0 3 13 2 3 91 0 13 0 11 12 13 11 91 0 0 0 20 67 6 1 5 5 7 83 0 7 7 12 67 0 14 14 9 84 10 1 9 9 13 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 12 11 8 11 12 8 104 0 8 14 11 8 14 102 4 15 2 2 0 3 13 2 3 91 0 13 0 11 12 13 11 91 0 0 0 20 67 6 1 5 5 7 83 0 7 7 12 67 0 14 14 9 84 0 9 9 13 67 0 10 10 16 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 70 values pushed */
0 0 7 0 106 0 12 11 8 11 12 8 104 0 8 14 11 8 14 102 4 15 2 2 0 3 13 2 3 91 0 13 0 11 12 13 11 91 6 1 5 5 7 83 0 7 7 14 67 0 14 14 9 84 0 9 9 13 67 0 10 10 16 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
34 33 146 144 137 135 129 127 120 118 107 105 103 97 88 86 77 70 66 64 63 61 47 45 41 38 33 83 34 83 28 26 18 16 16 15
CALL[ ]	/* CallFunction */";
};
width = 583;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (33,0);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (27,0);
ref = onesuperior;
},
{
alignment = -1;
pos = (12,0);
ref = slash;
},
{
alignment = -1;
pos = (304,-500);
ref = twosuperior;
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
151 1 14 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 12 11 8 11 12 8 104 0 8 14 11 8 14 102 2 15 2 0 0 1 13 0 1 92 0 13 0 11 12 13 11 91 0 3 3 4 83 6 5 2 4 4 12 67 0 14 14 9 83 10 1 9 9 13 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 12 11 8 11 12 8 104 0 8 14 11 8 14 102 2 15 2 0 0 1 13 0 1 92 0 13 0 11 12 13 11 91 0 6 6 20 67 0 3 3 4 83 5 1 4 4 12 67 0 14 14 9 84 10 1 9 9 13 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 12 11 8 11 12 8 104 0 8 14 11 8 14 102 2 15 2 0 0 1 13 0 1 92 0 13 0 11 12 13 11 91 0 6 6 20 67 0 3 3 4 83 5 1 4 4 12 67 0 14 14 9 84 0 9 9 13 67 0 10 10 16 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 70 values pushed */
0 6 4 6 106 0 12 11 8 11 12 8 104 0 8 14 11 8 14 102 2 15 2 0 0 1 13 0 1 92 0 13 0 11 12 13 11 91 0 3 3 4 83 5 1 4 4 14 67 0 14 14 9 84 0 9 9 13 67 0 10 10 16 67 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
2 1 150 149 142 140 134 132 125 123 112 110 108 102 95 93 87 85 77 75 49 45 44 42 38 33 19 17 11 8 1 56 2 56 16 26
CALL[ ]	/* CallFunction */";
};
width = 575;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(36,-1,o),
(36,-7,qs),
(36,-19,o),
(50,-19,qs),
(62,-19,o),
(72,-9,o),
(79,5,qs),
(484,768,ls),
(488,776,o),
(498,799,o),
(498,807,qs),
(498,813,o),
(492,821,o),
(483,821,qs),
(474,821,o),
(459,808,o),
(447,792,o),
(440,777,o),
(439,774,qs),
(418,731,o),
(392,678,o),
(373,638,o),
(355,603,o),
(329,553,o),
(290,480,o),
(259,423,qs),
(235,379,o),
(206,326,o),
(189,294,o),
(178,276,o),
(167,256,o),
(152,227,o),
(123,172,o),
(77,85,o),
(41,18,qs),
(39,13,o)
);
},
{
closed = 1;
nodes = (
(129,631,o),
(131,748,o),
(132,776,qs),
(133,809,o),
(133,815,qs),
(133,823,o),
(128,827,o),
(125,827,qs),
(123,827,o),
(102,826,o),
(77,825,o),
(56,823,o),
(54,823,qs),
(49,823,o),
(38,817,o),
(38,812,qs),
(38,804,o),
(49,802,o),
(54,802,qs),
(61,802,o),
(86,803,o),
(90,803,qs),
(97,803,o),
(99,793,o),
(99,789,qs),
(99,777,o),
(99,761,o),
(98,740,o),
(97,709,o),
(97,683,qs),
(96,650,o),
(95,610,o),
(93,581,o),
(92,557,o),
(92,541,qs),
(92,534,o),
(83,526,o),
(71,523,o),
(58,522,o),
(54,522,qs),
(51,522,o),
(39,518,o),
(39,512,qs),
(39,503,o),
(54,500,o),
(59,500,qs),
(161,500,ls),
(165,500,o),
(175,504,o),
(175,512,qs),
(175,521,o),
(162,524,o),
(157,524,qs),
(127,524,l)
);
},
{
closed = 1;
nodes = (
(481,25,o),
(479,25,qs),
(390,28,l),
(408,44,o),
(453,95,o),
(493,155,o),
(521,221,o),
(521,253,qs),
(521,287,o),
(480,335,o),
(441,335,qs),
(417,335,o),
(379,315,o),
(353,288,o),
(340,258,o),
(340,249,qs),
(340,220,o),
(361,220,qs),
(363,220,o),
(381,227,o),
(381,243,qs),
(381,251,o),
(370,256,o),
(370,261,qs),
(370,265,o),
(378,281,o),
(394,296,o),
(419,307,o),
(437,307,qs),
(463,307,o),
(483,277,o),
(483,254,qs),
(483,224,o),
(455,155,o),
(412,89,o),
(362,34,o),
(341,18,qs),
(333,12,o),
(333,8,qs),
(333,0,o),
(346,0,qs),
(357,0,o),
(364,4,o),
(366,6,q),
(391,5,o),
(415,4,qs),
(435,3,o),
(479,2,o),
(495,2,qs),
(500,2,o),
(505,9,o),
(507,11,q),
(515,26,o),
(524,41,o),
(528,48,o),
(529,51,o),
(529,53,qs),
(529,55,o),
(525,62,o),
(517,62,qs),
(510,62,o),
(504,55,o),
(502,52,qs),
(491,34,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 12 11 8 11 12 8 104 0 8 14 11 8 14 102 4 15 2 2 0 3 13 2 3 91 0 13 0 11 12 13 11 91 0 5 5 0 83 7 6 2 0 0 12 67 0 14 14 9 84 10 1 9 9 13 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
0 12 11 8 11 12 8 104 0 8 14 11 8 14 102 4 15 2 2 0 3 13 2 3 91 0 13 0 11 12 13 11 91 6 1 0 0 14 67 0 5 5 7 83 0 7 7 14 67 0 14 14 9 84 10 1 9 9 13 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
37 36 152 150 143 141 136 134 125 123 113 111 109 103 94 92 82 78 77 75 71 66 50 48 44 41 36 89 37 89 32 30 22 20 16 15
CALL[ ]	/* CallFunction */";
};
width = 563;
}
);
note = onehalf;
unicode = 189;
},
{
glyphname = onethird;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(180,651,o),
(182,755,o),
(183,780,qs),
(184,809,o),
(184,815,qs),
(184,823,o),
(179,827,o),
(176,827,qs),
(166,827,o),
(137,826,o),
(110,824,o),
(90,823,o),
(88,823,qs),
(77,823,o),
(55,809,o),
(55,796,qs),
(55,778,o),
(75,770,o),
(88,770,qs),
(91,770,o),
(104,771,o),
(107,771,qs),
(114,771,o),
(116,759,o),
(116,757,qs),
(116,749,o),
(116,738,o),
(115,723,o),
(114,701,o),
(114,683,qs),
(113,657,o),
(112,623,o),
(110,599,o),
(109,582,o),
(109,573,qs),
(108,561,o),
(102,554,o),
(88,554,qs),
(78,554,o),
(56,544,o),
(56,528,qs),
(56,510,o),
(82,500,o),
(93,500,qs),
(195,500,ls),
(203,500,o),
(226,509,o),
(226,528,qs),
(226,537,o),
(217,548,o),
(205,554,o),
(193,556,o),
(191,556,qs),
(178,556,l)
);
},
{
closed = 1;
nodes = (
(27,12,o),
(27,11,qs),
(27,-4,o),
(57,-19,o),
(67,-19,qs),
(83,-19,o),
(113,-4,o),
(118,5,qs),
(523,768,l),
(527,774,o),
(537,799,o),
(537,807,qs),
(537,815,o),
(525,837,o),
(505,837,qs),
(493,837,o),
(474,834,o),
(457,822,o),
(439,796,o),
(428,774,qs),
(404,726,o),
(375,666,o),
(354,624,o),
(337,589,o),
(313,543,o),
(276,476,o),
(247,423,qs),
(232,395,o),
(196,329,o),
(146,237,o),
(77,109,o),
(29,18,q),
(27,16,o)
);
},
{
closed = 1;
nodes = (
(446,180,o),
(477,194,o),
(503,216,o),
(521,247,o),
(521,268,qs),
(521,289,o),
(504,315,o),
(478,328,o),
(448,332,o),
(435,332,qs),
(408,332,o),
(366,312,o),
(339,284,o),
(325,255,o),
(325,245,qs),
(325,236,o),
(337,225,o),
(346,225,qs),
(365,225,o),
(382,242,o),
(385,249,qs),
(391,263,o),
(413,290,o),
(429,290,qs),
(437,290,o),
(449,280,o),
(449,270,qs),
(449,253,o),
(431,226,o),
(404,203,o),
(371,182,o),
(357,172,qs),
(355,170,o),
(343,159,o),
(343,151,qs),
(343,135,o),
(352,123,o),
(357,123,qs),
(365,123,o),
(388,132,o),
(405,132,qs),
(425,132,o),
(453,118,o),
(453,101,qs),
(453,85,o),
(436,62,o),
(411,48,o),
(382,41,o),
(370,41,qs),
(365,41,o),
(362,48,o),
(358,56,o),
(350,63,o),
(341,63,qs),
(327,63,o),
(313,42,o),
(313,29,qs),
(313,-9,o),
(374,-9,qs),
(400,-9,o),
(454,8,o),
(497,38,o),
(525,80,o),
(525,105,qs),
(525,138,o),
(480,174,o),
(450,174,qs),
(445,174,o),
(438,173,o),
(434,172,q),
(433,175,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
18 1 0 3 157 1 9 16 87 1 13 9 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 16 15 9 15 16 9 104 0 9 13 15 9 13 102 14 1 13 11 15 13 11 102 0 12 11 8 11 12 96 2 18 2 0 0 1 17 0 1 92 0 17 0 15 16 17 15 91 4 1 3 3 5 83 7 6 2 5 5 12 67 0 11 11 8 83 10 1 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 16 15 9 15 16 9 104 0 9 13 15 9 13 102 14 1 13 11 15 13 11 102 0 12 11 8 11 12 96 2 18 2 0 0 1 17 0 1 92 0 17 0 15 16 17 15 91 0 7 7 20 67 4 1 3 3 5 83 6 1 5 5 12 67 0 11 11 8 83 10 1 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 81 values pushed */
0 16 15 9 15 16 9 104 0 9 13 15 9 13 102 14 1 13 11 15 13 11 102 0 12 11 10 11 12 96 2 18 2 0 0 1 17 0 1 92 0 17 0 15 16 17 15 91 0 7 7 20 67 4 1 3 3 5 83 6 1 5 5 12 67 0 11 11 10 83 0 10 10 24 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 87 values pushed */
0 16 15 9 15 16 9 104 0 9 13 15 9 13 102 0 13 14 15 13 14 102 0 14 11 15 14 11 102 0 12 11 10 11 12 96 2 18 2 0 0 1 17 0 1 92 0 17 0 15 16 17 15 91 0 7 7 20 67 4 1 3 3 5 83 6 1 5 5 12 67 0 11 11 10 83 0 10 10 24 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 87 values pushed */
0 7 5 7 106 0 16 15 9 15 16 9 104 0 9 13 15 9 13 102 0 13 14 15 13 14 102 0 14 11 15 14 11 102 0 12 11 10 11 12 96 2 18 2 0 0 1 17 0 1 92 0 17 0 15 16 17 15 91 4 1 3 3 5 83 6 1 5 5 14 67 0 11 11 10 83 0 10 10 24 67 0 8 8 21 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
1 0 148 146 140 138 134 132 120 118 117 115 109 107 104 102 99 97 91 89 82 80 72 70 46 43 42 39 35 33 32 30 16 14 10 7 0 53 1 53 19 15
CALL[ ]	/* CallFunction */";
};
width = 570;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (32,0);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (27,0);
ref = onesuperior;
},
{
alignment = -1;
pos = (11,0);
ref = slash;
},
{
alignment = -1;
pos = (301,-503);
ref = threesuperior;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 9 8 11 8 9 11 104 13 12 2 11 17 8 11 17 102 18 1 17 15 8 17 15 102 0 15 16 8 15 16 102 2 19 2 0 0 1 10 0 1 92 0 10 0 8 9 10 8 91 0 3 3 4 83 6 5 2 4 4 12 67 0 16 16 14 83 0 14 14 24 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 9 8 11 8 9 11 104 13 12 2 11 17 8 11 17 102 18 1 17 15 8 17 15 102 0 15 16 8 15 16 102 2 19 2 0 0 1 10 0 1 92 0 10 0 8 9 10 8 91 0 3 3 4 83 6 5 2 4 4 12 67 0 16 16 7 83 14 1 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 9 8 11 8 9 11 104 13 12 2 11 17 8 11 17 102 18 1 17 15 8 17 15 102 0 15 16 8 15 16 102 2 19 2 0 0 1 10 0 1 92 0 10 0 8 9 10 8 91 0 3 3 4 83 6 5 2 4 4 12 67 0 16 16 14 83 0 14 14 24 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 84 values pushed */
0 9 8 11 8 9 11 104 13 12 2 11 17 8 11 17 102 0 17 18 8 17 18 102 0 18 15 8 18 15 102 0 15 16 8 15 16 102 2 19 2 0 0 1 10 0 1 92 0 10 0 8 9 10 8 91 0 3 3 4 83 6 5 2 4 4 12 67 0 16 16 14 83 0 14 14 24 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 88 values pushed */
0 9 8 11 8 9 11 104 13 12 2 11 17 8 11 17 102 0 17 18 8 17 18 102 0 18 15 8 18 15 102 0 15 16 8 15 16 102 2 19 2 0 0 1 10 0 1 92 0 10 0 8 9 10 8 91 0 6 6 20 67 0 3 3 4 83 5 1 4 4 12 67 0 16 16 14 83 0 14 14 24 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 88 values pushed */
0 6 4 6 106 0 9 8 11 8 9 11 104 13 12 2 11 17 8 11 17 102 0 17 18 8 17 18 102 0 18 15 8 18 15 102 0 15 16 8 15 16 102 2 19 2 0 0 1 10 0 1 92 0 10 0 8 9 10 8 91 0 3 3 4 83 5 1 4 4 14 67 0 16 16 14 83 0 14 14 24 67 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 44 values pushed */
2 1 158 156 155 153 147 145 142 140 136 134 128 126 125 124 123 122 113 111 105 103 99 97 87 85 77 75 49 45 44 42 38 33 19 17 11 8 1 56 2 56 20 26
CALL[ ]	/* CallFunction */";
};
width = 562;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(36,-1,o),
(36,-7,qs),
(36,-19,o),
(50,-19,qs),
(62,-19,o),
(72,-9,o),
(79,5,qs),
(484,768,ls),
(488,776,o),
(498,799,o),
(498,807,qs),
(498,813,o),
(492,821,o),
(483,821,qs),
(474,821,o),
(459,808,o),
(447,792,o),
(440,777,o),
(439,774,qs),
(418,731,o),
(392,678,o),
(373,638,o),
(355,603,o),
(329,553,o),
(290,480,o),
(259,423,qs),
(235,379,o),
(206,326,o),
(189,294,o),
(178,276,o),
(167,256,o),
(152,227,o),
(123,172,o),
(77,85,o),
(41,18,qs),
(39,13,o)
);
},
{
closed = 1;
nodes = (
(129,631,o),
(131,748,o),
(132,776,qs),
(133,809,o),
(133,815,qs),
(133,823,o),
(128,827,o),
(125,827,qs),
(123,827,o),
(102,826,o),
(77,825,o),
(56,823,o),
(54,823,qs),
(49,823,o),
(38,817,o),
(38,812,qs),
(38,804,o),
(49,802,o),
(54,802,qs),
(61,802,o),
(86,803,o),
(90,803,qs),
(97,803,o),
(99,793,o),
(99,789,qs),
(99,777,o),
(99,761,o),
(98,740,o),
(97,709,o),
(97,683,qs),
(96,650,o),
(95,610,o),
(93,581,o),
(92,557,o),
(92,541,qs),
(92,534,o),
(83,526,o),
(71,523,o),
(58,522,o),
(54,522,qs),
(51,522,o),
(39,518,o),
(39,512,qs),
(39,503,o),
(54,500,o),
(59,500,qs),
(161,500,ls),
(165,500,o),
(175,504,o),
(175,512,qs),
(175,521,o),
(162,524,o),
(157,524,qs),
(127,524,l)
);
},
{
closed = 1;
nodes = (
(360,159,o),
(360,151,qs),
(360,143,o),
(372,139,o),
(374,139,qs),
(379,139,o),
(405,148,o),
(422,148,qs),
(442,148,o),
(470,127,o),
(470,101,qs),
(470,81,o),
(453,50,o),
(428,28,o),
(399,17,o),
(387,17,qs),
(377,17,o),
(364,24,o),
(355,32,o),
(347,39,o),
(342,39,qs),
(334,39,o),
(330,28,o),
(330,23,qs),
(330,6,o),
(364,-9,o),
(381,-9,qs),
(403,-9,o),
(448,11,o),
(485,44,o),
(508,85,o),
(508,105,qs),
(508,121,o),
(492,146,o),
(468,163,o),
(440,171,o),
(428,171,qs),
(424,171,o),
(417,170,o),
(414,170,qs),
(410,169,o),
(408,169,q),
(412,173,o),
(443,190,o),
(477,217,o),
(504,255,o),
(504,280,qs),
(504,298,o),
(490,318,o),
(471,329,o),
(450,332,o),
(443,332,qs),
(418,332,o),
(380,312,o),
(355,284,o),
(342,255,o),
(342,245,qs),
(342,230,o),
(353,230,qs),
(359,230,o),
(366,242,o),
(368,249,qs),
(377,275,o),
(409,306,o),
(436,306,qs),
(454,306,o),
(466,291,o),
(466,277,qs),
(466,256,o),
(448,226,o),
(421,202,o),
(388,182,o),
(374,172,qs),
(372,170,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 79 values pushed */
0 9 8 11 8 9 11 104 0 18 17 15 17 18 15 104 0 15 16 17 15 16 102 4 19 2 2 0 3 10 2 3 91 0 10 0 8 9 10 8 91 13 12 2 11 0 17 18 11 17 91 0 5 5 0 83 7 6 2 0 0 12 67 0 16 16 14 83 0 14 14 24 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 83 values pushed */
0 9 8 11 8 9 11 104 0 18 17 15 17 18 15 104 0 15 16 17 15 16 102 4 19 2 2 0 3 10 2 3 91 0 10 0 8 9 10 8 91 13 12 2 11 0 17 18 11 17 91 6 1 0 0 14 67 0 5 5 7 83 0 7 7 14 67 0 16 16 14 83 0 14 14 24 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 44 values pushed */
37 36 159 157 156 154 148 146 143 141 137 135 127 125 124 123 122 121 112 110 105 103 99 97 82 78 77 75 71 66 50 48 44 41 36 89 37 89 32 30 22 20 20 15
CALL[ ]	/* CallFunction */";
};
width = 550;
}
);
note = onethird;
unicode = 8531;
},
{
glyphname = twothirds;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(29,12,o),
(29,11,qs),
(29,-4,o),
(59,-19,o),
(69,-19,qs),
(85,-19,o),
(115,-4,o),
(120,5,qs),
(525,768,l),
(529,774,o),
(539,799,o),
(539,807,qs),
(539,815,o),
(527,837,o),
(507,837,qs),
(495,837,o),
(476,834,o),
(459,822,o),
(441,796,o),
(430,774,qs),
(406,726,o),
(377,666,o),
(356,624,o),
(339,589,o),
(315,543,o),
(278,476,o),
(249,423,qs),
(234,395,o),
(198,329,o),
(148,237,o),
(79,109,o),
(31,18,q),
(29,16,o)
);
},
{
closed = 1;
nodes = (
(196,559,qs),
(156,561,l),
(168,575,o),
(203,618,o),
(234,670,o),
(256,727,o),
(256,754,qs),
(256,788,o),
(208,836,o),
(152,836,qs),
(122,836,o),
(80,816,o),
(53,789,o),
(41,759,o),
(41,750,qs),
(41,736,o),
(57,713,o),
(81,713,qs),
(94,713,o),
(116,723,o),
(116,739,qs),
(116,750,o),
(105,754,o),
(105,759,qs),
(105,764,o),
(131,781,o),
(148,781,qs),
(163,781,o),
(184,766,o),
(184,755,qs),
(184,725,o),
(156,656,o),
(113,590,o),
(63,535,o),
(42,519,qs),
(34,513,o),
(34,509,qs),
(34,506,o),
(40,496,o),
(52,496,qs),
(71,496,o),
(82,505,o),
(84,507,q),
(111,506,o),
(137,505,qs),
(160,504,o),
(210,503,o),
(230,503,qs),
(235,503,o),
(241,510,o),
(242,512,qs),
(243,513,o),
(250,526,o),
(259,541,o),
(266,557,o),
(266,562,qs),
(266,568,o),
(255,579,o),
(244,579,qs),
(224,579,o),
(211,562,o),
(209,560,qs),
(208,559,o)
);
},
{
closed = 1;
nodes = (
(450,180,o),
(481,194,o),
(507,216,o),
(525,247,o),
(525,268,qs),
(525,289,o),
(508,315,o),
(482,328,o),
(452,332,o),
(439,332,qs),
(412,332,o),
(370,312,o),
(343,284,o),
(329,255,o),
(329,245,qs),
(329,236,o),
(341,225,o),
(350,225,qs),
(369,225,o),
(386,242,o),
(389,249,qs),
(395,263,o),
(417,290,o),
(433,290,qs),
(441,290,o),
(453,280,o),
(453,270,qs),
(453,253,o),
(435,226,o),
(408,203,o),
(375,182,o),
(361,172,qs),
(359,170,o),
(347,159,o),
(347,151,qs),
(347,135,o),
(356,123,o),
(361,123,qs),
(369,123,o),
(392,132,o),
(409,132,qs),
(429,132,o),
(457,118,o),
(457,101,qs),
(457,85,o),
(440,62,o),
(415,48,o),
(386,41,o),
(374,41,qs),
(369,41,o),
(366,48,o),
(362,56,o),
(354,63,o),
(345,63,qs),
(331,63,o),
(317,42,o),
(317,29,qs),
(317,-9,o),
(378,-9,qs),
(404,-9,o),
(458,8,o),
(501,38,o),
(529,80,o),
(529,105,qs),
(529,138,o),
(484,174,o),
(454,174,qs),
(449,174,o),
(442,173,o),
(438,172,q),
(437,175,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
44 1 3 8 166 1 9 16 96 1 13 9 3 66 33 1 8 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 84 values pushed */
0 6 5 2 5 6 2 104 0 2 8 8 2 94 0 16 15 9 15 16 9 104 0 9 13 15 9 13 102 14 1 13 11 15 13 11 102 0 12 11 1 11 12 96 0 8 4 1 3 17 8 3 92 0 17 0 15 16 17 15 91 0 5 5 0 83 7 1 0 0 20 67 0 11 11 1 83 10 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 88 values pushed */
0 6 5 2 5 6 2 104 0 2 8 8 2 94 0 16 15 9 15 16 9 104 0 9 13 15 9 13 102 14 1 13 11 15 13 11 102 0 12 11 10 11 12 96 0 8 4 1 3 17 8 3 92 0 17 0 15 16 17 15 91 0 5 5 0 83 7 1 0 0 20 67 0 11 11 10 83 0 10 10 24 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 101 values pushed */
0 6 5 2 5 6 2 104 0 2 8 8 2 94 0 4 3 17 3 4 17 104 0 16 15 9 15 16 9 104 0 9 13 15 9 13 102 0 13 14 15 13 14 102 0 14 11 15 14 11 102 0 12 11 10 11 12 96 0 8 0 3 4 8 3 92 0 17 0 15 16 17 15 91 0 5 5 0 83 7 1 0 0 20 67 0 11 11 10 83 0 10 10 24 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 99 values pushed */
0 6 5 2 5 6 2 104 0 2 8 8 2 94 0 4 3 17 3 4 17 104 0 16 15 9 15 16 9 104 0 9 13 15 9 13 102 0 13 14 15 13 14 102 0 14 11 15 14 11 102 0 12 11 10 11 12 96 7 1 0 0 5 6 0 5 91 0 8 0 3 4 8 3 92 0 17 0 15 16 17 15 91 0 11 11 10 83 0 10 10 24 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
157 155 149 147 143 141 129 127 126 124 118 116 113 111 108 106 100 98 95 93 86 84 78 76 69 67 56 54 52 46 37 35 28 26 18 16 18 15
CALL[ ]	/* CallFunction */";
};
width = 571;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (34,0);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (16,0);
ref = twosuperior;
},
{
alignment = -1;
pos = (19,0);
ref = slash;
},
{
alignment = -1;
pos = (311,-503);
ref = threesuperior;
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
61 1 6 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 91 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 10 9 12 9 10 12 104 14 13 2 12 18 9 12 18 102 19 1 18 16 9 18 16 102 0 16 17 9 16 17 102 0 6 2 1 1 11 6 1 91 0 11 0 9 10 11 9 91 0 3 3 5 83 7 1 5 5 20 67 0 17 17 15 83 0 15 15 24 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 87 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 10 9 12 9 10 12 104 14 13 2 12 18 9 12 18 102 19 1 18 16 9 18 16 102 0 16 17 9 16 17 102 0 6 2 1 1 11 6 1 91 0 11 0 9 10 11 9 91 0 3 3 5 83 7 1 5 5 20 67 0 17 17 8 83 15 1 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 91 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 10 9 12 9 10 12 104 14 13 2 12 18 9 12 18 102 19 1 18 16 9 18 16 102 0 16 17 9 16 17 102 0 6 2 1 1 11 6 1 91 0 11 0 9 10 11 9 91 0 3 3 5 83 7 1 5 5 20 67 0 17 17 15 83 0 15 15 24 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 97 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 10 9 12 9 10 12 104 14 13 2 12 18 9 12 18 102 0 18 19 9 18 19 102 0 19 16 9 19 16 102 0 16 17 9 16 17 102 0 6 2 1 1 11 6 1 91 0 11 0 9 10 11 9 91 0 3 3 5 83 7 1 5 5 20 67 0 17 17 15 83 0 15 15 24 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 104 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 2 1 11 1 2 11 104 0 10 9 12 9 10 12 104 14 13 2 12 18 9 12 18 102 0 18 19 9 18 19 102 0 19 16 9 19 16 102 0 16 17 9 16 17 102 0 6 0 1 2 6 1 91 0 11 0 9 10 11 9 91 0 3 3 5 83 7 1 5 5 20 67 0 17 17 15 83 0 15 15 24 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 109 values pushed */
0 7 5 3 5 7 3 104 0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 2 1 11 1 2 11 104 0 10 9 12 9 10 12 104 14 13 2 12 18 9 12 18 102 0 18 19 9 18 19 102 0 19 16 9 19 16 102 0 16 17 9 16 17 102 0 5 0 3 4 5 3 91 0 6 0 1 2 6 1 91 0 11 0 9 10 11 9 91 0 17 17 15 83 0 15 15 24 67 0 8 8 21 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
164 162 161 159 153 151 148 146 142 140 134 132 131 130 129 128 119 117 111 109 105 103 93 91 83 81 23 38 39 43 34 103 35 20 33
CALL[ ]	/* CallFunction */";
};
width = 570;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(52,-1,o),
(52,-7,qs),
(52,-19,o),
(66,-19,qs),
(78,-19,o),
(88,-9,o),
(95,5,qs),
(500,768,ls),
(504,776,o),
(514,799,o),
(514,807,qs),
(514,813,o),
(508,821,o),
(499,821,qs),
(490,821,o),
(475,808,o),
(463,792,o),
(456,777,o),
(455,774,qs),
(434,731,o),
(408,678,o),
(389,638,o),
(371,603,o),
(345,553,o),
(306,480,o),
(275,423,qs),
(251,379,o),
(222,326,o),
(205,294,o),
(194,276,o),
(183,256,o),
(168,227,o),
(139,172,o),
(93,85,o),
(57,18,qs),
(55,13,o)
);
},
{
closed = 1;
nodes = (
(181,526,o),
(179,526,qs),
(90,529,l),
(108,545,o),
(153,596,o),
(193,656,o),
(221,722,o),
(221,754,qs),
(221,788,o),
(180,836,o),
(141,836,qs),
(117,836,o),
(79,816,o),
(53,789,o),
(40,759,o),
(40,750,qs),
(40,721,o),
(61,721,qs),
(63,721,o),
(81,728,o),
(81,744,qs),
(81,752,o),
(70,757,o),
(70,762,qs),
(70,766,o),
(78,782,o),
(94,797,o),
(119,808,o),
(137,808,qs),
(163,808,o),
(183,778,o),
(183,755,qs),
(183,725,o),
(155,656,o),
(112,590,o),
(62,535,o),
(41,519,qs),
(33,513,o),
(33,509,qs),
(33,501,o),
(46,501,qs),
(57,501,o),
(64,505,o),
(66,507,q),
(91,506,o),
(115,505,qs),
(135,504,o),
(179,503,o),
(195,503,qs),
(200,503,o),
(205,510,o),
(207,512,q),
(215,527,o),
(224,542,o),
(228,549,o),
(229,552,o),
(229,554,qs),
(229,556,o),
(225,563,o),
(217,563,qs),
(210,563,o),
(204,556,o),
(202,553,qs),
(191,535,o)
);
},
{
closed = 1;
nodes = (
(379,159,o),
(379,151,qs),
(379,143,o),
(391,139,o),
(393,139,qs),
(398,139,o),
(424,148,o),
(441,148,qs),
(461,148,o),
(489,127,o),
(489,101,qs),
(489,81,o),
(472,50,o),
(447,28,o),
(418,17,o),
(406,17,qs),
(396,17,o),
(383,24,o),
(374,32,o),
(366,39,o),
(361,39,qs),
(353,39,o),
(349,28,o),
(349,23,qs),
(349,6,o),
(383,-9,o),
(400,-9,qs),
(422,-9,o),
(467,11,o),
(504,44,o),
(527,85,o),
(527,105,qs),
(527,121,o),
(511,146,o),
(487,163,o),
(459,171,o),
(447,171,qs),
(443,171,o),
(436,170,o),
(433,170,qs),
(429,169,o),
(427,169,q),
(431,173,o),
(462,190,o),
(496,217,o),
(523,255,o),
(523,280,qs),
(523,298,o),
(509,318,o),
(490,329,o),
(469,332,o),
(462,332,qs),
(437,332,o),
(399,312,o),
(374,284,o),
(361,255,o),
(361,245,qs),
(361,230,o),
(372,230,qs),
(378,230,o),
(385,242,o),
(387,249,qs),
(396,275,o),
(428,306,o),
(455,306,qs),
(473,306,o),
(485,291,o),
(485,277,qs),
(485,256,o),
(467,226,o),
(440,202,o),
(407,182,o),
(393,172,qs),
(391,170,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 96 values pushed */
0 6 5 2 5 6 2 104 0 2 8 5 2 8 102 0 10 9 12 9 10 12 104 0 19 18 16 18 19 16 104 0 16 17 18 16 17 102 0 8 4 1 3 11 8 3 91 0 11 0 9 10 11 9 91 14 13 2 12 0 18 19 12 18 91 0 0 0 12 67 0 5 5 7 83 0 7 7 20 67 0 17 17 15 83 0 15 15 24 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 94 values pushed */
0 6 5 2 5 6 2 104 0 2 8 5 2 8 102 0 10 9 12 9 10 12 104 0 19 18 16 18 19 16 104 0 16 17 18 16 17 102 0 7 0 5 6 7 5 91 0 8 4 1 3 11 8 3 91 0 11 0 9 10 11 9 91 14 13 2 12 0 18 19 12 18 91 0 0 0 14 67 0 17 17 15 83 0 15 15 24 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
169 167 166 164 158 156 153 151 147 145 137 135 134 133 132 131 122 120 115 113 109 107 98 96 89 87 82 80 71 69 59 57 55 49 40 38 32 30 22 20 20 15
CALL[ ]	/* CallFunction */";
};
width = 569;
}
);
note = twothirds;
unicode = 8532;
},
{
glyphname = onequarter;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(178,651,o),
(180,755,o),
(181,780,qs),
(182,809,o),
(182,815,qs),
(182,823,o),
(177,827,o),
(174,827,qs),
(164,827,o),
(135,826,o),
(108,824,o),
(88,823,o),
(86,823,qs),
(75,823,o),
(53,809,o),
(53,796,qs),
(53,778,o),
(73,770,o),
(86,770,qs),
(89,770,o),
(102,771,o),
(105,771,qs),
(112,771,o),
(114,759,o),
(114,757,qs),
(114,749,o),
(114,738,o),
(113,723,o),
(112,701,o),
(112,683,qs),
(111,657,o),
(110,623,o),
(108,599,o),
(107,582,o),
(107,573,qs),
(106,561,o),
(100,554,o),
(86,554,qs),
(76,554,o),
(54,544,o),
(54,528,qs),
(54,510,o),
(80,500,o),
(91,500,qs),
(193,500,ls),
(201,500,o),
(224,509,o),
(224,528,qs),
(224,537,o),
(215,548,o),
(203,554,o),
(191,556,o),
(189,556,qs),
(176,556,l)
);
},
{
closed = 1;
nodes = (
(29,12,o),
(29,11,qs),
(29,-4,o),
(59,-19,o),
(69,-19,qs),
(85,-19,o),
(115,-4,o),
(120,5,qs),
(525,768,l),
(529,774,o),
(539,799,o),
(539,807,qs),
(539,815,o),
(527,837,o),
(507,837,qs),
(495,837,o),
(476,834,o),
(459,822,o),
(441,796,o),
(430,774,qs),
(406,726,o),
(377,666,o),
(356,624,o),
(339,589,o),
(315,543,o),
(278,476,o),
(249,423,qs),
(234,395,o),
(198,329,o),
(148,237,o),
(79,109,o),
(31,18,q),
(29,16,o)
);
},
{
closed = 1;
nodes = (
(526,66,o),
(537,86,o),
(537,94,qs),
(537,122,o),
(509,122,qs),
(504,122,l),
(506,146,o),
(510,205,o),
(514,259,o),
(517,299,o),
(517,304,qs),
(517,321,o),
(494,337,o),
(480,337,qs),
(468,337,o),
(446,326,o),
(441,319,qs),
(427,301,o),
(407,276,o),
(391,254,o),
(374,231,o),
(349,199,o),
(315,152,o),
(289,117,qs),
(276,100,o),
(268,85,o),
(268,77,qs),
(268,68,o),
(284,64,o),
(301,64,qs),
(310,64,o),
(353,64,o),
(375,65,qs),
(391,66,o),
(416,66,o),
(432,66,q),
(431,55,ls),
(431,49,o),
(420,48,q),
(417,47,o),
(394,46,o),
(384,45,qs),
(374,44,o),
(356,36,o),
(356,25,qs),
(356,10,o),
(377,0,o),
(386,0,qs),
(495,0,ls),
(515,0,o),
(531,9,o),
(531,23,qs),
(531,39,o),
(511,48,o),
(503,48,qs),
(498,48,o),
(498,50,qs),
(498,51,o),
(499,60,o),
(500,66,q),
(510,66,ls)
);
},
{
closed = 1;
nodes = (
(365,124,qs),
(365,126,o),
(369,130,o),
(370,132,qs),
(445,240,l),
(436,123,l),
(414,121,o),
(374,120,o),
(371,120,qs),
(365,120,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
18 1 0 3 152 1 14 13 110 1 9 12 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 13 1 14 1 13 14 104 2 17 2 0 0 1 13 0 1 92 19 16 2 14 18 15 2 12 9 14 12 91 4 1 3 3 5 83 7 6 2 5 5 12 67 11 1 9 9 10 84 0 10 10 13 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 13 1 14 1 13 14 104 2 17 2 0 0 1 13 0 1 92 19 16 2 14 18 15 2 12 9 14 12 92 0 7 7 20 67 4 1 3 3 5 83 6 1 5 5 12 67 11 1 9 9 10 84 0 10 10 13 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
0 7 5 7 106 0 13 1 14 1 13 14 104 2 17 2 0 0 1 13 0 1 92 19 16 2 14 18 15 2 12 9 14 12 92 4 1 3 3 5 83 6 1 5 5 14 67 11 1 9 9 10 84 0 10 10 13 67 0 8 8 21 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 48 values pushed */
150 148 87 87 1 0 148 157 150 157 87 147 87 146 143 141 134 132 118 111 107 106 100 97 93 91 82 80 72 70 46 43 42 39 35 33 32 30 16 14 10 7 0 53 1 53 20 15
CALL[ ]	/* CallFunction */";
};
width = 573;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (32,0);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (26,0);
ref = onesuperior;
},
{
alignment = -1;
pos = (11,0);
ref = slash;
},
{
alignment = -1;
pos = (272,-502);
ref = foursuperior;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
157 1 14 13 1 66 113 1 8 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 13 1 14 1 13 14 104 2 17 2 0 0 1 13 0 1 92 19 16 2 14 18 15 2 12 8 14 12 91 0 3 3 4 83 6 5 2 4 4 12 67 11 10 2 8 8 9 84 0 9 9 13 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 13 1 14 1 13 14 104 2 17 2 0 0 1 13 0 1 92 19 16 2 14 18 15 2 12 8 14 12 92 0 6 6 20 67 0 3 3 4 83 5 1 4 4 12 67 11 10 2 8 8 9 84 0 9 9 13 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
0 6 4 6 106 0 13 1 14 1 13 14 104 2 17 2 0 0 1 13 0 1 92 19 16 2 14 18 15 2 12 8 14 12 92 0 3 3 4 83 5 1 4 4 14 67 11 10 2 8 8 9 84 0 9 9 13 67 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 48 values pushed */
155 153 91 91 2 1 153 162 155 162 91 152 91 151 148 146 137 135 124 117 112 111 110 109 105 102 98 96 87 85 77 75 49 45 44 42 38 33 19 17 11 8 1 56 2 56 20 26
CALL[ ]	/* CallFunction */";
};
width = 566;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(37,-1,o),
(37,-7,qs),
(37,-19,o),
(51,-19,qs),
(63,-19,o),
(73,-9,o),
(80,5,qs),
(485,768,ls),
(489,776,o),
(499,799,o),
(499,807,qs),
(499,813,o),
(493,821,o),
(484,821,qs),
(475,821,o),
(460,808,o),
(448,792,o),
(441,777,o),
(440,774,qs),
(419,731,o),
(393,678,o),
(374,638,o),
(356,603,o),
(330,553,o),
(291,480,o),
(260,423,qs),
(236,379,o),
(207,326,o),
(190,294,o),
(179,276,o),
(168,256,o),
(153,227,o),
(124,172,o),
(78,85,o),
(42,18,qs),
(40,13,o)
);
},
{
closed = 1;
nodes = (
(130,631,o),
(132,748,o),
(133,776,qs),
(134,809,o),
(134,815,qs),
(134,823,o),
(129,827,o),
(126,827,qs),
(124,827,o),
(103,826,o),
(78,825,o),
(57,823,o),
(55,823,qs),
(50,823,o),
(39,817,o),
(39,812,qs),
(39,804,o),
(50,802,o),
(55,802,qs),
(62,802,o),
(87,803,o),
(91,803,qs),
(98,803,o),
(100,793,o),
(100,789,qs),
(100,777,o),
(100,761,o),
(99,740,o),
(98,709,o),
(98,683,qs),
(97,650,o),
(96,610,o),
(94,581,o),
(93,557,o),
(93,541,qs),
(93,534,o),
(84,526,o),
(72,523,o),
(59,522,o),
(55,522,qs),
(52,522,o),
(40,518,o),
(40,512,qs),
(40,503,o),
(55,500,o),
(60,500,qs),
(162,500,ls),
(166,500,o),
(176,504,o),
(176,512,qs),
(176,521,o),
(163,524,o),
(158,524,qs),
(128,524,l)
);
},
{
closed = 1;
nodes = (
(517,98,o),
(523,108,o),
(523,110,qs),
(523,122,o),
(506,122,qs),
(473,122,l),
(474,146,o),
(478,209,o),
(483,266,o),
(486,306,o),
(486,308,qs),
(486,324,o),
(469,329,o),
(466,329,qs),
(459,329,o),
(446,321,o),
(444,319,qs),
(422,292,o),
(391,251,o),
(359,208,o),
(320,155,o),
(292,117,qs),
(289,113,o),
(288,108,o),
(288,106,qs),
(288,94,o),
(304,94,qs),
(313,94,o),
(356,96,o),
(378,97,qs),
(394,98,o),
(424,98,o),
(440,98,q),
(436,39,ls),
(436,31,o),
(425,25,o),
(416,24,q),
(413,23,o),
(396,22,o),
(387,21,qs),
(383,21,o),
(376,14,o),
(376,9,qs),
(376,4,o),
(385,0,o),
(389,0,qs),
(498,0,ls),
(506,0,o),
(517,3,o),
(517,12,qs),
(517,21,o),
(502,24,o),
(498,24,qs),
(489,24,o),
(469,26,o),
(469,34,qs),
(469,39,o),
(471,79,o),
(473,98,q),
(509,98,ls)
);
},
{
closed = 1;
nodes = (
(334,124,qs),
(334,126,o),
(338,130,o),
(339,132,q),
(451,280,l),
(439,123,l),
(404,121,o),
(344,120,o),
(340,120,qs),
(334,120,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
154 1 14 13 1 66 112 1 8 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 13 3 14 3 13 14 104 11 10 2 8 12 9 14 8 96 4 17 2 2 0 3 13 2 3 91 19 16 2 14 18 15 2 12 8 14 12 92 0 5 5 0 83 7 6 2 0 0 12 67 0 9 9 13 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 13 3 14 3 13 14 104 11 10 2 8 12 9 12 8 9 104 4 17 2 2 0 3 13 2 3 91 19 16 2 14 18 15 2 12 8 14 12 92 0 5 5 0 83 7 6 2 0 0 12 67 0 9 9 13 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
0 13 3 14 3 13 14 104 11 10 2 8 12 9 12 8 9 104 4 17 2 2 0 3 13 2 3 91 19 16 2 14 18 15 2 12 8 14 12 92 6 1 0 0 14 67 0 5 5 7 83 0 7 7 14 67 0 9 9 13 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 48 values pushed */
153 150 90 90 37 36 150 159 153 159 90 149 90 148 145 143 136 134 123 116 111 110 109 108 104 101 97 95 82 78 77 75 71 66 50 48 44 41 36 89 37 89 32 30 22 20 20 15
CALL[ ]	/* CallFunction */";
};
width = 556;
}
);
note = onequarter;
unicode = 188;
},
{
glyphname = threequarters;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(26,12,o),
(26,11,qs),
(26,-4,o),
(56,-19,o),
(66,-19,qs),
(82,-19,o),
(112,-4,o),
(117,5,qs),
(522,768,l),
(526,774,o),
(536,799,o),
(536,807,qs),
(536,815,o),
(524,837,o),
(504,837,qs),
(492,837,o),
(473,834,o),
(456,822,o),
(438,796,o),
(427,774,qs),
(403,726,o),
(374,666,o),
(353,624,o),
(336,589,o),
(312,543,o),
(275,476,o),
(246,423,qs),
(231,395,o),
(195,329,o),
(145,237,o),
(76,109,o),
(28,18,q),
(26,16,o)
);
},
{
closed = 1;
nodes = (
(520,66,o),
(531,86,o),
(531,94,qs),
(531,122,o),
(503,122,qs),
(498,122,l),
(500,146,o),
(504,205,o),
(508,259,o),
(511,299,o),
(511,304,qs),
(511,321,o),
(488,337,o),
(474,337,qs),
(462,337,o),
(440,326,o),
(435,319,qs),
(421,301,o),
(401,276,o),
(385,254,o),
(368,231,o),
(343,199,o),
(309,152,o),
(283,117,qs),
(270,100,o),
(262,85,o),
(262,77,qs),
(262,68,o),
(278,64,o),
(295,64,qs),
(304,64,o),
(347,64,o),
(369,65,qs),
(385,66,o),
(410,66,o),
(426,66,q),
(425,55,ls),
(425,49,o),
(414,48,q),
(411,47,o),
(388,46,o),
(378,45,qs),
(368,44,o),
(350,36,o),
(350,25,qs),
(350,10,o),
(371,0,o),
(380,0,qs),
(489,0,ls),
(509,0,o),
(525,9,o),
(525,23,qs),
(525,39,o),
(505,48,o),
(497,48,qs),
(492,48,o),
(492,50,qs),
(492,51,o),
(493,60,o),
(494,66,q),
(504,66,ls)
);
},
{
closed = 1;
nodes = (
(359,124,qs),
(359,126,o),
(363,130,o),
(364,132,qs),
(439,240,l),
(430,123,l),
(408,121,o),
(368,120,o),
(365,120,qs),
(359,120,o)
);
},
{
closed = 1;
nodes = (
(166,684,o),
(197,698,o),
(223,720,o),
(241,751,o),
(241,772,qs),
(241,793,o),
(224,819,o),
(198,832,o),
(168,836,o),
(155,836,qs),
(128,836,o),
(86,816,o),
(59,788,o),
(45,759,o),
(45,749,qs),
(45,740,o),
(57,729,o),
(66,729,qs),
(85,729,o),
(102,746,o),
(105,753,qs),
(111,767,o),
(133,794,o),
(149,794,qs),
(157,794,o),
(169,784,o),
(169,774,qs),
(169,757,o),
(151,730,o),
(124,707,o),
(91,686,o),
(77,676,qs),
(75,674,o),
(63,663,o),
(63,655,qs),
(63,639,o),
(72,627,o),
(77,627,qs),
(85,627,o),
(108,636,o),
(125,636,qs),
(145,636,o),
(173,622,o),
(173,605,qs),
(173,589,o),
(156,566,o),
(131,552,o),
(102,545,o),
(90,545,qs),
(85,545,o),
(82,552,o),
(78,560,o),
(70,567,o),
(61,567,qs),
(47,567,o),
(33,546,o),
(33,533,qs),
(33,495,o),
(94,495,qs),
(120,495,o),
(174,512,o),
(217,542,o),
(245,584,o),
(245,609,qs),
(245,642,o),
(200,678,o),
(170,678,qs),
(165,678,o),
(158,677,o),
(154,676,q),
(153,679,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
174 1 10 17 104 1 14 10 98 1 7 6 56 1 2 5 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 86 values pushed */
0 17 16 10 16 17 10 104 0 10 14 16 10 14 102 15 1 14 12 16 14 12 102 0 13 12 11 12 13 96 0 6 11 7 11 6 7 104 0 12 0 11 6 12 11 91 20 9 2 7 19 8 2 5 2 7 5 92 0 16 16 0 83 18 1 0 0 20 67 4 1 2 2 3 84 0 3 3 13 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 92 values pushed */
0 17 16 10 16 17 10 104 0 10 14 16 10 14 102 0 14 15 16 14 15 102 0 15 12 16 15 12 102 0 13 12 11 12 13 96 0 6 11 7 11 6 7 104 0 12 0 11 6 12 11 91 20 9 2 7 19 8 2 5 2 7 5 92 0 16 16 0 83 18 1 0 0 20 67 4 1 2 2 3 84 0 3 3 13 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 90 values pushed */
0 17 16 10 16 17 10 104 0 10 14 16 10 14 102 0 14 15 16 14 15 102 0 15 12 16 15 12 102 0 13 12 11 12 13 96 0 6 11 7 11 6 7 104 18 1 0 0 16 17 0 16 91 0 12 0 11 6 12 11 91 20 9 2 7 19 8 2 5 2 7 5 92 4 1 2 2 3 84 0 3 3 13 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 48 values pushed */
96 94 33 33 165 163 157 155 151 149 137 135 134 132 126 124 121 119 116 114 108 106 94 103 96 103 33 93 33 92 89 87 80 78 64 57 53 52 46 43 39 37 28 26 18 16 21 15
CALL[ ]	/* CallFunction */";
};
width = 568;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (35,0);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (16,0);
ref = threesuperior;
},
{
alignment = -1;
pos = (14,0);
ref = slash;
},
{
alignment = -1;
pos = (271,-502);
ref = foursuperior;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
173 1 19 18 1 66 129 1 13 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 87 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 10 1 9 7 0 9 7 102 0 18 6 19 6 18 19 104 0 8 0 6 18 8 6 91 23 21 2 19 22 20 2 17 13 19 17 92 0 0 0 2 83 11 1 2 2 20 67 16 15 2 13 13 14 84 0 14 14 13 67 0 7 7 12 83 0 12 12 21 12 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 93 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 0 9 10 0 9 10 102 0 10 7 0 10 7 102 0 18 6 19 6 18 19 104 0 8 0 6 18 8 6 91 23 21 2 19 22 20 2 17 13 19 17 92 0 0 0 2 83 11 1 2 2 20 67 16 15 2 13 13 14 84 0 14 14 13 67 0 7 7 12 83 0 12 12 21 12 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 98 values pushed */
0 11 2 0 2 11 0 104 0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 0 9 10 0 9 10 102 0 10 7 0 10 7 102 0 18 6 19 6 18 19 104 0 2 0 0 1 2 0 91 0 8 0 6 18 8 6 91 23 21 2 19 22 20 2 17 13 19 17 92 16 15 2 13 13 14 84 0 14 14 13 67 0 7 7 12 83 0 12 12 21 12 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 45 values pushed */
171 169 107 107 169 178 171 178 107 168 107 167 164 162 153 151 140 133 128 127 126 125 121 118 114 112 103 101 93 91 68 66 65 63 35 36 38 33 17 25 38 36 39 24 35
CALL[ ]	/* CallFunction */";
};
width = 565;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(46,-1,o),
(46,-7,qs),
(46,-19,o),
(60,-19,qs),
(72,-19,o),
(82,-9,o),
(89,5,qs),
(494,768,ls),
(498,776,o),
(508,799,o),
(508,807,qs),
(508,813,o),
(502,821,o),
(493,821,qs),
(484,821,o),
(469,808,o),
(457,792,o),
(450,777,o),
(449,774,qs),
(428,731,o),
(402,678,o),
(383,638,o),
(365,603,o),
(339,553,o),
(300,480,o),
(269,423,qs),
(245,379,o),
(216,326,o),
(199,294,o),
(188,276,o),
(177,256,o),
(162,227,o),
(133,172,o),
(87,85,o),
(51,18,qs),
(49,13,o)
);
},
{
closed = 1;
nodes = (
(63,663,o),
(63,655,qs),
(63,647,o),
(75,643,o),
(77,643,qs),
(82,643,o),
(108,652,o),
(125,652,qs),
(145,652,o),
(173,631,o),
(173,605,qs),
(173,585,o),
(156,554,o),
(131,532,o),
(102,521,o),
(90,521,qs),
(80,521,o),
(67,528,o),
(58,536,o),
(50,543,o),
(45,543,qs),
(37,543,o),
(33,532,o),
(33,527,qs),
(33,510,o),
(67,495,o),
(84,495,qs),
(106,495,o),
(151,515,o),
(188,548,o),
(211,589,o),
(211,609,qs),
(211,625,o),
(195,650,o),
(171,667,o),
(143,675,o),
(131,675,qs),
(127,675,o),
(120,674,o),
(117,674,qs),
(113,673,o),
(111,673,q),
(115,677,o),
(146,694,o),
(180,721,o),
(207,759,o),
(207,784,qs),
(207,802,o),
(193,822,o),
(174,833,o),
(153,836,o),
(146,836,qs),
(121,836,o),
(83,816,o),
(58,788,o),
(45,759,o),
(45,749,qs),
(45,734,o),
(56,734,qs),
(62,734,o),
(69,746,o),
(71,753,qs),
(80,779,o),
(112,810,o),
(139,810,qs),
(157,810,o),
(169,795,o),
(169,781,qs),
(169,760,o),
(151,730,o),
(124,706,o),
(91,686,o),
(77,676,qs),
(75,674,o)
);
},
{
closed = 1;
nodes = (
(522,98,o),
(528,108,o),
(528,110,qs),
(528,122,o),
(511,122,qs),
(478,122,l),
(479,146,o),
(483,209,o),
(488,266,o),
(491,306,o),
(491,308,qs),
(491,324,o),
(474,329,o),
(471,329,qs),
(464,329,o),
(451,321,o),
(449,319,qs),
(427,292,o),
(396,251,o),
(364,208,o),
(325,155,o),
(297,117,qs),
(294,113,o),
(293,108,o),
(293,106,qs),
(293,94,o),
(309,94,qs),
(318,94,o),
(361,96,o),
(383,97,qs),
(399,98,o),
(429,98,o),
(445,98,q),
(441,39,ls),
(441,31,o),
(430,25,o),
(421,24,q),
(418,23,o),
(401,22,o),
(392,21,qs),
(388,21,o),
(381,14,o),
(381,9,qs),
(381,4,o),
(390,0,o),
(394,0,qs),
(503,0,ls),
(511,0,o),
(522,3,o),
(522,12,qs),
(522,21,o),
(507,24,o),
(503,24,qs),
(494,24,o),
(474,26,o),
(474,34,qs),
(474,39,o),
(476,79,o),
(478,98,q),
(514,98,ls)
);
},
{
closed = 1;
nodes = (
(339,124,qs),
(339,126,o),
(343,130,o),
(344,132,q),
(456,280,l),
(444,123,l),
(409,121,o),
(349,120,o),
(345,120,qs),
(339,120,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
174 1 19 18 1 66 132 1 13 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 94 values pushed */
0 3 2 5 2 3 5 104 0 12 11 9 11 12 9 104 0 18 8 19 8 18 19 104 16 15 2 13 17 14 19 13 96 7 6 2 5 0 11 12 5 11 91 0 10 0 8 18 10 8 91 23 21 2 19 22 20 2 17 13 19 17 92 0 0 0 12 67 0 2 2 4 83 0 4 4 20 67 0 14 14 13 67 0 9 9 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 95 values pushed */
0 3 2 5 2 3 5 104 0 12 11 9 11 12 9 104 0 18 8 19 8 18 19 104 16 15 2 13 17 14 17 13 14 104 7 6 2 5 0 11 12 5 11 91 0 10 0 8 18 10 8 91 23 21 2 19 22 20 2 17 13 19 17 92 0 0 0 12 67 0 2 2 4 83 0 4 4 20 67 0 14 14 13 67 0 9 9 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 93 values pushed */
0 3 2 5 2 3 5 104 0 12 11 9 11 12 9 104 0 18 8 19 8 18 19 104 16 15 2 13 17 14 17 13 14 104 0 4 0 2 3 4 2 91 7 6 2 5 0 11 12 5 11 91 0 10 0 8 18 10 8 91 23 21 2 19 22 20 2 17 13 19 17 92 0 0 0 14 67 0 14 14 13 67 0 9 9 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 54 values pushed */
173 170 110 110 170 179 173 179 110 169 110 168 165 163 156 154 143 136 131 130 129 128 124 121 117 115 105 103 102 100 94 92 89 87 83 81 73 71 70 69 68 67 58 56 51 49 45 43 32 30 22 20 24 15
CALL[ ]	/* CallFunction */";
};
width = 561;
}
);
note = threequarters;
unicode = 190;
},
{
glyphname = oneeighth;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(30,11,qs),
(30,-3,o),
(58,-19,o),
(69,-19,qs),
(85,-19,o),
(115,-4,o),
(120,5,qs),
(525,768,ls),
(529,776,o),
(539,802,o),
(539,807,qs),
(539,810,o),
(537,820,o),
(531,830,o),
(518,837,o),
(507,837,qs),
(492,837,o),
(471,832,o),
(455,819,o),
(440,794,o),
(430,774,qs),
(395,702,o),
(349,609,o),
(310,535,o),
(273,468,o),
(249,423,qs),
(231,390,o),
(179,299,o),
(120,192,o),
(58,75,o),
(31,18,qs),
(30,16,o)
);
},
{
closed = 1;
nodes = (
(178,651,o),
(180,755,o),
(181,780,qs),
(182,809,o),
(182,815,qs),
(182,823,o),
(177,827,o),
(174,827,qs),
(164,827,o),
(136,826,o),
(109,825,o),
(88,823,o),
(86,823,qs),
(75,821,o),
(53,809,o),
(53,796,qs),
(53,779,o),
(74,770,o),
(86,770,qs),
(89,770,o),
(103,771,o),
(105,771,qs),
(110,771,o),
(114,762,o),
(114,757,qs),
(114,749,o),
(114,738,o),
(113,723,o),
(112,701,o),
(112,683,qs),
(111,657,o),
(109,626,o),
(108,604,o),
(107,585,o),
(107,573,qs),
(107,560,o),
(100,554,o),
(86,554,qs),
(78,554,o),
(54,544,o),
(54,528,qs),
(54,510,o),
(80,500,o),
(91,500,qs),
(193,500,ls),
(202,500,o),
(224,509,o),
(224,528,qs),
(224,537,o),
(216,548,o),
(205,554,o),
(193,556,o),
(189,556,qs),
(176,556,l)
);
},
{
closed = 1;
nodes = (
(382,-12,o),
(436,-12,qs),
(492,-12,o),
(547,41,o),
(547,75,qs),
(547,107,o),
(512,155,o),
(475,161,q),
(484,162,o),
(507,172,o),
(528,193,o),
(542,224,o),
(542,245,qs),
(542,279,o),
(482,327,o),
(429,327,qs),
(375,327,o),
(324,275,o),
(324,241,qs),
(324,226,o),
(334,199,o),
(351,177,o),
(371,162,o),
(382,161,q),
(357,157,o),
(314,116,o),
(314,78,qs),
(314,33,o)
);
},
{
closed = 1;
nodes = (
(395,112,o),
(409,121,o),
(425,125,o),
(431,125,qs),
(476,125,o),
(476,79,qs),
(476,66,o),
(457,42,o),
(433,42,qs),
(416,42,o),
(385,59,o),
(385,83,qs),
(385,95,o)
);
},
{
closed = 1;
nodes = (
(419,269,o),
(433,269,qs),
(445,269,o),
(471,255,o),
(471,229,qs),
(471,222,o),
(455,198,o),
(432,198,qs),
(427,198,o),
(414,200,o),
(402,208,o),
(394,222,o),
(394,233,qs),
(394,253,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
105 89 2 12 13 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
6 1 5 0 2 0 5 2 104 4 15 2 2 0 3 9 2 3 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 8 7 2 0 0 20 67 0 11 11 1 83 10 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
6 1 5 7 2 7 5 2 104 4 15 2 2 0 3 9 2 3 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 0 0 0 20 67 8 1 7 7 12 67 0 11 11 1 83 10 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
6 1 5 7 2 7 5 2 104 4 15 2 2 0 3 9 2 3 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 0 0 0 20 67 8 1 7 7 12 67 0 11 11 10 83 0 10 10 24 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 0 7 0 106 6 1 5 7 2 7 5 2 104 4 15 2 2 0 3 9 2 3 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 8 1 7 7 14 67 0 11 11 10 83 0 10 10 24 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
33 32 139 137 133 131 123 121 118 116 112 110 98 96 78 74 73 72 67 65 64 62 48 46 42 39 32 85 33 85 42 46 16 17
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (33,0);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (26,0);
ref = onesuperior;
},
{
alignment = -1;
pos = (12,0);
ref = slash;
},
{
alignment = -1;
pos = (295,-507);
ref = eightsuperior;
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
114 96 2 11 12 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
2 14 2 0 0 1 8 0 1 92 0 8 0 13 12 8 13 91 0 12 0 11 10 12 11 91 0 3 3 4 83 6 5 2 4 4 12 67 0 10 10 7 83 9 1 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
2 14 2 0 0 1 8 0 1 92 0 8 0 13 12 8 13 91 0 12 0 11 10 12 11 91 0 6 6 20 67 0 3 3 4 83 5 1 4 4 12 67 0 10 10 9 84 0 9 9 24 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 6 4 6 106 2 14 2 0 0 1 8 0 1 92 0 8 0 13 12 8 13 91 0 12 0 11 10 12 11 91 0 3 3 4 83 5 1 4 4 14 67 0 10 10 9 84 0 9 9 24 67 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
2 1 147 145 141 139 133 131 127 125 121 119 105 103 87 85 77 75 49 45 44 42 38 33 19 17 11 8 1 56 2 56 15 26
CALL[ ]	/* CallFunction */";
};
width = 578;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(36,-1,o),
(36,-7,qs),
(36,-19,o),
(50,-19,qs),
(62,-19,o),
(72,-9,o),
(79,5,qs),
(484,768,ls),
(488,776,o),
(498,799,o),
(498,807,qs),
(498,813,o),
(492,821,o),
(483,821,qs),
(474,821,o),
(459,808,o),
(447,792,o),
(440,777,o),
(439,774,qs),
(418,731,o),
(392,678,o),
(373,638,o),
(355,603,o),
(329,553,o),
(290,480,o),
(259,423,qs),
(235,379,o),
(206,326,o),
(189,294,o),
(178,276,o),
(167,256,o),
(152,227,o),
(123,172,o),
(77,85,o),
(41,18,qs),
(39,13,o)
);
},
{
closed = 1;
nodes = (
(129,631,o),
(131,748,o),
(132,776,qs),
(133,809,o),
(133,815,qs),
(133,823,o),
(128,827,o),
(125,827,qs),
(123,827,o),
(102,826,o),
(77,825,o),
(56,823,o),
(54,823,qs),
(49,823,o),
(38,817,o),
(38,812,qs),
(38,804,o),
(49,802,o),
(54,802,qs),
(61,802,o),
(86,803,o),
(90,803,qs),
(97,803,o),
(99,793,o),
(99,789,qs),
(99,777,o),
(99,761,o),
(98,740,o),
(97,709,o),
(97,683,qs),
(96,650,o),
(95,610,o),
(93,581,o),
(92,557,o),
(92,541,qs),
(92,534,o),
(83,526,o),
(71,523,o),
(58,522,o),
(54,522,qs),
(51,522,o),
(39,518,o),
(39,512,qs),
(39,503,o),
(54,500,o),
(59,500,qs),
(161,500,ls),
(165,500,o),
(175,504,o),
(175,512,qs),
(175,521,o),
(162,524,o),
(157,524,qs),
(127,524,l)
);
},
{
closed = 1;
nodes = (
(351,19,o),
(379,-2,o),
(414,-12,o),
(431,-12,qs),
(452,-12,o),
(489,3,o),
(516,27,o),
(532,58,o),
(532,75,qs),
(532,91,o),
(519,119,o),
(498,142,o),
(472,158,o),
(460,161,q),
(469,164,o),
(492,177,o),
(513,199,o),
(527,227,o),
(527,245,qs),
(527,259,o),
(516,288,o),
(495,312,o),
(461,327,o),
(439,327,qs),
(396,327,o),
(343,275,o),
(343,241,qs),
(343,212,o),
(380,169,o),
(401,161,q),
(392,157,o),
(368,143,o),
(347,120,o),
(333,90,o),
(333,71,qs),
(333,50,o)
);
},
{
closed = 1;
nodes = (
(411,141,o),
(433,141,qs),
(455,141,o),
(495,107,o),
(495,77,qs),
(495,47,o),
(455,12,o),
(430,12,qs),
(402,12,o),
(370,51,o),
(370,76,qs),
(370,106,o)
);
},
{
closed = 1;
nodes = (
(406,301,o),
(438,301,qs),
(454,301,o),
(474,290,o),
(486,273,o),
(490,253,o),
(490,245,qs),
(490,216,o),
(455,182,o),
(434,182,qs),
(415,182,o),
(379,210,o),
(379,239,qs),
(379,261,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
111 95 2 11 12 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
4 14 2 2 0 3 8 2 3 91 0 8 0 13 12 8 13 91 0 12 0 11 10 12 11 91 0 5 5 0 83 7 6 2 0 0 12 67 0 10 10 9 83 0 9 9 21 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
4 14 2 2 0 3 8 2 3 91 0 8 0 13 12 8 13 91 0 12 0 11 10 12 11 91 0 5 5 0 83 7 6 2 0 0 12 67 0 10 10 9 83 0 9 9 24 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
4 14 2 2 0 3 8 2 3 91 0 8 0 13 12 8 13 91 0 12 0 11 10 12 11 91 6 1 0 0 14 67 0 5 5 7 83 0 7 7 14 67 0 10 10 9 83 0 9 9 24 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
37 36 150 148 142 140 136 134 130 128 122 120 102 100 82 78 77 75 71 66 50 48 44 41 36 89 37 89 32 30 22 20 15 15
CALL[ ]	/* CallFunction */";
};
width = 568;
}
);
note = oneeighth;
unicode = 8539;
},
{
glyphname = threeeighths;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(26,12,o),
(26,11,qs),
(26,-4,o),
(56,-19,o),
(66,-19,qs),
(82,-19,o),
(112,-4,o),
(117,5,qs),
(522,768,l),
(526,774,o),
(536,799,o),
(536,807,qs),
(536,815,o),
(524,837,o),
(504,837,qs),
(492,837,o),
(473,834,o),
(456,822,o),
(438,796,o),
(427,774,qs),
(403,726,o),
(374,666,o),
(353,624,o),
(336,589,o),
(312,543,o),
(275,476,o),
(246,423,qs),
(231,395,o),
(195,329,o),
(145,237,o),
(76,109,o),
(28,18,q),
(26,16,o)
);
},
{
closed = 1;
nodes = (
(375,-12,o),
(429,-12,qs),
(485,-12,o),
(540,41,o),
(540,75,qs),
(540,107,o),
(505,155,o),
(468,161,q),
(477,162,o),
(500,172,o),
(521,193,o),
(535,224,o),
(535,245,qs),
(535,279,o),
(475,327,o),
(422,327,qs),
(368,327,o),
(317,275,o),
(317,241,qs),
(317,226,o),
(327,199,o),
(344,177,o),
(364,162,o),
(375,161,q),
(350,157,o),
(307,116,o),
(307,78,qs),
(307,33,o)
);
},
{
closed = 1;
nodes = (
(388,112,o),
(402,121,o),
(418,125,o),
(424,125,qs),
(469,125,o),
(469,79,qs),
(469,66,o),
(450,42,o),
(426,42,qs),
(409,42,o),
(378,59,o),
(378,83,qs),
(378,95,o)
);
},
{
closed = 1;
nodes = (
(412,269,o),
(426,269,qs),
(438,269,o),
(464,255,o),
(464,229,qs),
(464,222,o),
(448,198,o),
(425,198,qs),
(420,198,o),
(407,200,o),
(395,208,o),
(387,222,o),
(387,233,qs),
(387,253,o)
);
},
{
closed = 1;
nodes = (
(166,684,o),
(197,698,o),
(223,720,o),
(241,751,o),
(241,772,qs),
(241,793,o),
(224,819,o),
(198,832,o),
(168,836,o),
(155,836,qs),
(128,836,o),
(86,816,o),
(59,788,o),
(45,759,o),
(45,749,qs),
(45,740,o),
(57,729,o),
(66,729,qs),
(85,729,o),
(102,746,o),
(105,753,qs),
(111,767,o),
(133,794,o),
(149,794,qs),
(157,794,o),
(169,784,o),
(169,774,qs),
(169,757,o),
(151,730,o),
(124,707,o),
(91,686,o),
(77,676,qs),
(75,674,o),
(63,663,o),
(63,655,qs),
(63,639,o),
(72,627,o),
(77,627,qs),
(85,627,o),
(108,636,o),
(125,636,qs),
(145,636,o),
(173,622,o),
(173,605,qs),
(173,589,o),
(156,566,o),
(131,552,o),
(102,545,o),
(90,545,qs),
(85,545,o),
(82,552,o),
(78,560,o),
(70,567,o),
(61,567,qs),
(47,567,o),
(33,546,o),
(33,533,qs),
(33,495,o),
(94,495,qs),
(120,495,o),
(174,512,o),
(217,542,o),
(245,584,o),
(245,609,qs),
(245,642,o),
(200,678,o),
(170,678,qs),
(165,678,o),
(158,677,o),
(154,676,q),
(153,679,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
158 1 8 15 88 1 12 8 52 36 2 5 6 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 15 14 8 14 15 8 104 0 8 12 14 8 12 102 13 1 12 10 14 12 10 102 0 11 10 9 10 11 96 0 10 0 9 2 10 9 91 0 2 0 7 6 2 7 91 0 6 0 5 4 6 5 91 0 14 14 0 83 16 1 0 0 20 67 0 4 4 1 83 3 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 83 values pushed */
0 15 14 8 14 15 8 104 0 8 12 14 8 12 102 0 12 13 14 12 13 102 0 13 10 14 13 10 102 0 11 10 9 10 11 96 0 10 0 9 2 10 9 91 0 2 0 7 6 2 7 91 0 6 0 5 4 6 5 91 0 14 14 0 83 16 1 0 0 20 67 0 4 4 1 83 3 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 87 values pushed */
0 15 14 8 14 15 8 104 0 8 12 14 8 12 102 0 12 13 14 12 13 102 0 13 10 14 13 10 102 0 11 10 9 10 11 96 0 10 0 9 2 10 9 91 0 2 0 7 6 2 7 91 0 6 0 5 4 6 5 91 0 14 14 0 83 16 1 0 0 20 67 0 4 4 3 83 0 3 3 24 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 85 values pushed */
0 15 14 8 14 15 8 104 0 8 12 14 8 12 102 0 12 13 14 12 13 102 0 13 10 14 13 10 102 0 11 10 9 10 11 96 16 1 0 0 14 15 0 14 91 0 10 0 9 2 10 9 91 0 2 0 7 6 2 7 91 0 6 0 5 4 6 5 91 0 4 4 3 83 0 3 3 24 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
149 147 141 139 135 133 121 119 118 116 110 108 105 103 100 98 92 90 86 84 80 78 70 68 65 63 59 57 45 43 28 26 18 16 17 15
CALL[ ]	/* CallFunction */";
};
width = 576;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (35,0);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (16,0);
ref = threesuperior;
},
{
alignment = -1;
pos = (14,0);
ref = slash;
},
{
alignment = -1;
pos = (292,-507);
ref = eightsuperior;
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
130 112 2 16 17 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 83 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 10 1 9 7 0 9 7 102 0 8 0 6 13 8 6 91 0 13 0 18 17 13 18 91 0 17 0 16 15 17 16 91 0 0 0 2 83 11 1 2 2 20 67 0 7 7 12 83 14 1 12 12 21 67 0 15 15 12 84 14 1 12 12 21 12 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 89 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 0 9 10 0 9 10 102 0 10 7 0 10 7 102 0 8 0 6 13 8 6 91 0 13 0 18 17 13 18 91 0 17 0 16 15 17 16 91 0 0 0 2 83 11 1 2 2 20 67 0 7 7 12 83 14 1 12 12 21 67 0 15 15 12 84 14 1 12 12 21 12 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 87 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 0 9 10 0 9 10 102 0 10 7 0 10 7 102 0 8 0 6 13 8 6 91 0 13 0 18 17 13 18 91 0 17 0 16 15 17 16 91 0 0 0 2 83 11 1 2 2 20 67 0 15 15 14 84 0 14 14 24 67 0 7 7 12 83 0 12 12 21 12 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 92 values pushed */
0 11 2 0 2 11 0 104 0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 0 9 10 0 9 10 102 0 10 7 0 10 7 102 0 2 0 0 1 2 0 91 0 8 0 6 13 8 6 91 0 13 0 18 17 13 18 91 0 17 0 16 15 17 16 91 0 15 15 14 84 0 14 14 24 67 0 7 7 12 83 0 12 12 21 12 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
163 161 157 155 149 147 143 141 137 135 121 119 103 101 93 91 68 66 65 63 35 36 38 33 17 25 38 36 39 19 35
CALL[ ]	/* CallFunction */";
};
width = 575;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(46,-1,o),
(46,-7,qs),
(46,-19,o),
(60,-19,qs),
(72,-19,o),
(82,-9,o),
(89,5,qs),
(494,768,ls),
(498,776,o),
(508,799,o),
(508,807,qs),
(508,813,o),
(502,821,o),
(493,821,qs),
(484,821,o),
(469,808,o),
(457,792,o),
(450,777,o),
(449,774,qs),
(428,731,o),
(402,678,o),
(383,638,o),
(365,603,o),
(339,553,o),
(300,480,o),
(269,423,qs),
(245,379,o),
(216,326,o),
(199,294,o),
(188,276,o),
(177,256,o),
(162,227,o),
(133,172,o),
(87,85,o),
(51,18,qs),
(49,13,o)
);
},
{
closed = 1;
nodes = (
(63,663,o),
(63,655,qs),
(63,647,o),
(75,643,o),
(77,643,qs),
(82,643,o),
(108,652,o),
(125,652,qs),
(145,652,o),
(173,631,o),
(173,605,qs),
(173,585,o),
(156,554,o),
(131,532,o),
(102,521,o),
(90,521,qs),
(80,521,o),
(67,528,o),
(58,536,o),
(50,543,o),
(45,543,qs),
(37,543,o),
(33,532,o),
(33,527,qs),
(33,510,o),
(67,495,o),
(84,495,qs),
(106,495,o),
(151,515,o),
(188,548,o),
(211,589,o),
(211,609,qs),
(211,625,o),
(195,650,o),
(171,667,o),
(143,675,o),
(131,675,qs),
(127,675,o),
(120,674,o),
(117,674,qs),
(113,673,o),
(111,673,q),
(115,677,o),
(146,694,o),
(180,721,o),
(207,759,o),
(207,784,qs),
(207,802,o),
(193,822,o),
(174,833,o),
(153,836,o),
(146,836,qs),
(121,836,o),
(83,816,o),
(58,788,o),
(45,759,o),
(45,749,qs),
(45,734,o),
(56,734,qs),
(62,734,o),
(69,746,o),
(71,753,qs),
(80,779,o),
(112,810,o),
(139,810,qs),
(157,810,o),
(169,795,o),
(169,781,qs),
(169,760,o),
(151,730,o),
(124,706,o),
(91,686,o),
(77,676,qs),
(75,674,o)
);
},
{
closed = 1;
nodes = (
(355,19,o),
(383,-2,o),
(418,-12,o),
(435,-12,qs),
(456,-12,o),
(493,3,o),
(520,27,o),
(536,58,o),
(536,75,qs),
(536,91,o),
(523,119,o),
(502,142,o),
(476,158,o),
(464,161,q),
(473,164,o),
(496,177,o),
(517,199,o),
(531,227,o),
(531,245,qs),
(531,259,o),
(520,288,o),
(499,312,o),
(465,327,o),
(443,327,qs),
(400,327,o),
(347,275,o),
(347,241,qs),
(347,212,o),
(384,169,o),
(405,161,q),
(396,157,o),
(372,143,o),
(351,120,o),
(337,90,o),
(337,71,qs),
(337,50,o)
);
},
{
closed = 1;
nodes = (
(415,141,o),
(437,141,qs),
(459,141,o),
(499,107,o),
(499,77,qs),
(499,47,o),
(459,12,o),
(434,12,qs),
(406,12,o),
(374,51,o),
(374,76,qs),
(374,106,o)
);
},
{
closed = 1;
nodes = (
(410,301,o),
(442,301,qs),
(458,301,o),
(478,290,o),
(490,273,o),
(494,253,o),
(494,245,qs),
(494,216,o),
(459,182,o),
(438,182,qs),
(419,182,o),
(383,210,o),
(383,239,qs),
(383,261,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
131 115 2 16 17 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 86 values pushed */
0 3 2 5 2 3 5 104 0 12 11 9 11 12 9 104 7 6 2 5 0 11 12 5 11 91 0 10 0 8 13 10 8 91 0 13 0 18 17 13 18 91 0 17 0 16 15 17 16 91 0 0 0 12 67 0 2 2 4 83 0 4 4 20 67 0 15 15 14 83 0 14 14 21 67 0 9 9 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 86 values pushed */
0 3 2 5 2 3 5 104 0 12 11 9 11 12 9 104 7 6 2 5 0 11 12 5 11 91 0 10 0 8 13 10 8 91 0 13 0 18 17 13 18 91 0 17 0 16 15 17 16 91 0 0 0 12 67 0 2 2 4 83 0 4 4 20 67 0 15 15 14 83 0 14 14 24 67 0 9 9 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 84 values pushed */
0 3 2 5 2 3 5 104 0 12 11 9 11 12 9 104 0 4 0 2 3 4 2 91 7 6 2 5 0 11 12 5 11 91 0 10 0 8 13 10 8 91 0 13 0 18 17 13 18 91 0 17 0 16 15 17 16 91 0 0 0 14 67 0 15 15 14 83 0 14 14 24 67 0 9 9 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
170 168 162 160 156 154 150 148 142 140 122 120 105 103 102 100 94 92 89 87 83 81 73 71 70 69 68 67 58 56 51 49 45 43 32 30 22 20 19 15
CALL[ ]	/* CallFunction */";
};
width = 574;
}
);
note = threeeighths;
unicode = 8540;
},
{
glyphname = fiveeighths;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(34,19,o),
(34,12,qs),
(34,1,o),
(54,-19,o),
(71,-19,qs),
(91,-19,o),
(117,-4,o),
(122,5,qs),
(527,768,l),
(531,774,o),
(541,799,o),
(541,807,qs),
(541,815,o),
(529,837,o),
(509,837,qs),
(494,837,o),
(474,834,o),
(459,822,o),
(443,796,o),
(432,774,qs),
(408,726,o),
(373,655,o),
(345,599,o),
(321,553,o),
(297,507,o),
(269,456,o),
(251,423,qs),
(241,404,o),
(221,369,o),
(197,328,o),
(168,275,o),
(128,202,o),
(77,105,o),
(43,39,qs),
(40,33,o)
);
},
{
closed = 1;
nodes = (
(148,803,o),
(108,797,o),
(75,791,o),
(71,783,qs),
(70,781,o),
(65,748,o),
(59,705,o),
(54,664,o),
(53,655,qs),
(52,650,o),
(50,638,o),
(50,635,qs),
(50,606,o),
(61,606,qs),
(74,606,o),
(93,618,o),
(111,633,o),
(132,645,o),
(148,645,qs),
(164,645,o),
(182,636,o),
(191,624,o),
(194,610,o),
(194,606,qs),
(194,592,o),
(186,565,o),
(168,543,o),
(139,529,o),
(119,529,qs),
(107,529,o),
(95,542,o),
(95,551,qs),
(95,556,o),
(98,561,o),
(102,564,o),
(105,569,o),
(105,575,qs),
(105,592,o),
(77,592,qs),
(66,592,o),
(36,566,o),
(36,542,qs),
(36,524,o),
(66,487,o),
(103,487,qs),
(134,487,o),
(192,506,o),
(238,539,o),
(266,583,o),
(266,608,qs),
(266,653,o),
(217,703,o),
(172,703,qs),
(166,703,o),
(150,699,o),
(134,693,o),
(120,684,o),
(117,679,q),
(128,735,l),
(133,735,o),
(155,741,o),
(179,749,o),
(201,757,o),
(206,760,qs),
(215,765,o),
(233,780,o),
(248,797,o),
(258,814,o),
(258,821,qs),
(258,827,o),
(248,838,o),
(231,838,qs),
(220,838,o),
(206,829,o),
(204,827,qs),
(190,814,o)
);
},
{
closed = 1;
nodes = (
(378,-12,o),
(432,-12,qs),
(488,-12,o),
(543,41,o),
(543,75,qs),
(543,107,o),
(508,155,o),
(471,161,q),
(480,162,o),
(503,175,o),
(524,197,o),
(538,227,o),
(538,245,qs),
(538,259,o),
(522,288,o),
(493,312,o),
(451,327,o),
(425,327,qs),
(371,327,o),
(320,275,o),
(320,241,qs),
(320,226,o),
(330,199,o),
(347,177,o),
(367,162,o),
(378,161,q),
(353,157,o),
(310,109,o),
(310,71,qs),
(310,29,o)
);
},
{
closed = 1;
nodes = (
(410,125,o),
(423,125,qs),
(449,125,o),
(472,100,o),
(472,79,qs),
(472,67,o),
(451,42,o),
(428,42,qs),
(408,42,o),
(381,61,o),
(381,79,qs),
(381,105,o)
);
},
{
closed = 1;
nodes = (
(415,269,o),
(429,269,qs),
(435,269,o),
(448,266,o),
(459,258,o),
(467,242,o),
(467,229,qs),
(467,222,o),
(451,198,o),
(428,198,qs),
(414,198,o),
(390,214,o),
(390,233,qs),
(390,253,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
106 1 3 0 52 1 8 4 132 114 2 13 14 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 3 0 4 0 3 4 104 0 4 8 0 4 8 102 0 8 9 0 8 9 102 0 9 6 0 9 6 102 0 6 7 7 6 94 0 7 0 5 10 7 5 92 0 10 0 15 14 10 15 91 0 14 0 13 12 14 13 91 2 1 0 0 20 67 0 12 12 1 83 11 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 3 0 4 0 3 4 104 0 4 8 0 4 8 102 0 8 9 0 8 9 102 0 9 6 0 9 6 102 0 6 7 0 6 7 102 0 7 0 5 10 7 5 92 0 10 0 15 14 10 15 91 0 14 0 13 12 14 13 91 2 1 0 0 20 67 0 12 12 1 83 11 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
0 3 0 4 0 3 4 104 0 4 8 0 4 8 102 0 8 9 0 8 9 102 0 9 6 0 9 6 102 0 6 7 0 6 7 102 0 7 0 5 10 7 5 92 0 10 0 15 14 10 15 91 0 14 0 13 12 14 13 91 2 1 0 0 20 67 0 12 12 11 83 0 11 11 24 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 71 values pushed */
2 1 0 3 0 106 0 3 4 3 106 0 4 8 4 106 0 8 9 8 106 0 9 6 9 106 0 6 7 6 106 0 7 0 5 10 7 5 92 0 10 0 15 14 10 15 91 0 14 0 13 12 14 13 91 0 12 12 11 83 0 11 11 24 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
165 163 157 155 151 149 145 143 139 137 123 121 97 95 92 90 82 80 72 70 66 64 58 56 51 50 39 37 30 28 20 18 16 15
CALL[ ]	/* CallFunction */";
};
width = 580;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (35,0);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (14,0);
ref = fivesuperior;
},
{
alignment = -1;
pos = (19,0);
ref = slash;
},
{
alignment = -1;
pos = (296,-507);
ref = eightsuperior;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
68 1 1 0 16 1 5 1 130 112 2 12 13 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
68 1 1 7 16 1 5 1 130 112 2 12 13 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 6 5 3 5 6 3 104 0 3 4 4 3 94 0 1 0 5 6 1 5 91 0 4 0 2 9 4 2 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 7 1 0 0 20 67 0 11 11 8 84 10 1 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 6 5 3 5 6 3 104 0 3 4 5 3 4 102 0 1 0 5 6 1 5 91 0 4 0 2 9 4 2 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 7 1 0 0 20 67 0 11 11 8 84 10 1 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
0 6 5 3 5 6 3 104 0 3 4 5 3 4 102 0 1 0 5 6 1 5 91 0 4 0 2 9 4 2 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 7 1 0 0 20 67 0 11 11 10 84 0 10 10 24 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 0 7 0 106 0 7 1 7 106 0 6 5 3 5 6 3 104 0 3 4 5 3 4 102 0 1 0 5 6 1 5 91 0 4 0 2 9 4 2 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 0 11 11 10 84 0 10 10 24 67 0 8 8 21 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
163 161 157 155 149 147 143 141 137 135 121 119 103 101 93 91 35 40 40 36 38 45 35 15 33
CALL[ ]	/* CallFunction */";
};
width = 579;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(50,-1,o),
(50,-7,qs),
(50,-19,o),
(64,-19,qs),
(76,-19,o),
(86,-9,o),
(93,5,qs),
(498,768,ls),
(502,776,o),
(512,799,o),
(512,807,qs),
(512,813,o),
(506,821,o),
(497,821,qs),
(488,821,o),
(473,808,o),
(461,792,o),
(454,777,o),
(453,774,qs),
(432,731,o),
(406,678,o),
(387,638,o),
(369,603,o),
(343,553,o),
(304,480,o),
(273,423,qs),
(249,379,o),
(220,326,o),
(203,294,o),
(192,276,o),
(181,256,o),
(166,227,o),
(137,172,o),
(91,85,o),
(55,18,qs),
(53,13,o)
);
},
{
closed = 1;
nodes = (
(145,803,o),
(105,797,o),
(72,791,o),
(68,783,qs),
(67,781,o),
(63,757,o),
(58,721,o),
(52,677,o),
(49,655,qs),
(48,650,o),
(47,638,o),
(47,635,qs),
(47,622,o),
(58,622,qs),
(64,622,o),
(81,634,o),
(103,649,o),
(129,661,o),
(145,661,qs),
(161,661,o),
(179,649,o),
(188,631,o),
(191,612,o),
(191,606,qs),
(191,589,o),
(181,556,o),
(160,530,o),
(126,513,o),
(102,513,qs),
(84,513,o),
(58,524,o),
(58,535,qs),
(58,540,o),
(64,545,o),
(72,548,o),
(78,553,o),
(78,559,qs),
(78,576,o),
(58,576,qs),
(48,576,o),
(33,559,o),
(33,542,qs),
(33,524,o),
(63,487,o),
(100,487,qs),
(124,487,o),
(171,506,o),
(207,539,o),
(229,583,o),
(229,608,qs),
(229,646,o),
(182,687,o),
(146,687,qs),
(123,687,o),
(94,673,o),
(80,663,q),
(97,767,l),
(104,769,o),
(134,775,o),
(167,782,o),
(196,790,o),
(202,793,qs),
(209,797,o),
(221,815,o),
(221,821,qs),
(221,825,o),
(216,833,o),
(211,833,qs),
(207,833,o),
(201,827,qs),
(187,814,o)
);
},
{
closed = 1;
nodes = (
(359,19,o),
(387,-2,o),
(422,-12,o),
(439,-12,qs),
(460,-12,o),
(497,3,o),
(524,27,o),
(540,58,o),
(540,75,qs),
(540,91,o),
(527,119,o),
(506,142,o),
(480,158,o),
(468,161,q),
(477,164,o),
(500,177,o),
(521,199,o),
(535,227,o),
(535,245,qs),
(535,259,o),
(524,288,o),
(503,312,o),
(469,327,o),
(447,327,qs),
(404,327,o),
(351,275,o),
(351,241,qs),
(351,212,o),
(388,169,o),
(409,161,q),
(400,157,o),
(376,143,o),
(355,120,o),
(341,90,o),
(341,71,qs),
(341,50,o)
);
},
{
closed = 1;
nodes = (
(419,141,o),
(441,141,qs),
(463,141,o),
(503,107,o),
(503,77,qs),
(503,47,o),
(463,12,o),
(438,12,qs),
(410,12,o),
(378,51,o),
(378,76,qs),
(378,106,o)
);
},
{
closed = 1;
nodes = (
(414,301,o),
(446,301,qs),
(462,301,o),
(482,290,o),
(494,273,o),
(498,253,o),
(498,245,qs),
(498,216,o),
(463,182,o),
(442,182,qs),
(423,182,o),
(387,210,o),
(387,239,qs),
(387,261,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
102 1 3 0 50 1 7 3 128 112 2 12 13 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 8 7 5 7 8 5 104 0 5 6 6 5 94 0 3 0 7 8 3 7 91 0 6 0 4 9 6 4 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 0 2 2 20 67 0 0 0 12 67 0 11 11 10 83 0 10 10 21 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 8 7 5 7 8 5 104 0 5 6 6 5 94 0 3 0 7 8 3 7 91 0 6 0 4 9 6 4 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 0 2 2 20 67 0 0 0 12 67 0 11 11 10 83 0 10 10 24 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 8 7 5 7 8 5 104 0 5 6 7 5 6 102 0 3 0 7 8 3 7 91 0 6 0 4 9 6 4 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 0 2 2 20 67 0 0 0 12 67 0 11 11 10 83 0 10 10 24 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 2 0 2 106 0 8 7 5 7 8 5 104 0 5 6 7 5 6 102 0 3 0 7 8 3 7 91 0 6 0 4 9 6 4 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 0 0 0 14 67 0 11 11 10 83 0 10 10 24 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
167 165 159 157 153 151 147 145 139 137 119 117 93 91 88 86 78 76 68 66 62 60 54 52 39 37 32 30 22 20 15 15
CALL[ ]	/* CallFunction */";
};
width = 578;
}
);
note = fiveeighths;
unicode = 8541;
},
{
glyphname = seveneighths;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(113,485,o),
(125,485,qs),
(150,485,o),
(160,501,q),
(307,782,ls),
(319,805,o),
(325,818,o),
(325,822,qs),
(325,824,o),
(319,827,o),
(308,827,qs),
(300,827,o),
(249,826,o),
(191,824,o),
(141,823,o),
(134,823,qs),
(123,823,o),
(106,807,o),
(106,793,qs),
(106,782,o),
(120,766,o),
(131,766,qs),
(147,766,o),
(165,767,o),
(179,767,o),
(196,768,o),
(211,768,qs),
(217,768,o),
(217,763,qs),
(217,760,o),
(199,721,o),
(172,666,o),
(140,603,o),
(113,548,o),
(95,509,o),
(95,506,qs),
(95,498,o)
);
},
{
closed = 1;
nodes = (
(26,12,o),
(26,11,qs),
(26,-4,o),
(56,-19,o),
(66,-19,qs),
(82,-19,o),
(112,-4,o),
(117,5,qs),
(522,768,l),
(526,774,o),
(536,799,o),
(536,807,qs),
(536,815,o),
(524,837,o),
(504,837,qs),
(492,837,o),
(473,834,o),
(456,822,o),
(438,796,o),
(427,774,qs),
(403,726,o),
(374,666,o),
(353,624,o),
(336,589,o),
(312,543,o),
(275,476,o),
(246,423,qs),
(231,395,o),
(195,329,o),
(145,237,o),
(76,109,o),
(28,18,q),
(26,16,o)
);
},
{
closed = 1;
nodes = (
(375,-12,o),
(429,-12,qs),
(485,-12,o),
(540,41,o),
(540,75,qs),
(540,107,o),
(505,155,o),
(468,161,q),
(477,162,o),
(500,172,o),
(521,193,o),
(535,224,o),
(535,245,qs),
(535,279,o),
(475,327,o),
(422,327,qs),
(368,327,o),
(317,275,o),
(317,241,qs),
(317,226,o),
(327,199,o),
(344,177,o),
(364,162,o),
(375,161,q),
(350,157,o),
(307,116,o),
(307,78,qs),
(307,33,o)
);
},
{
closed = 1;
nodes = (
(388,112,o),
(402,121,o),
(418,125,o),
(424,125,qs),
(469,125,o),
(469,79,qs),
(469,66,o),
(450,42,o),
(426,42,qs),
(409,42,o),
(378,59,o),
(378,83,qs),
(378,95,o)
);
},
{
closed = 1;
nodes = (
(412,269,o),
(426,269,qs),
(438,269,o),
(464,255,o),
(464,229,qs),
(464,222,o),
(448,198,o),
(425,198,qs),
(420,198,o),
(407,200,o),
(395,208,o),
(387,222,o),
(387,233,qs),
(387,253,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
89 73 2 8 9 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 2 0 5 0 2 5 104 0 5 0 10 9 5 10 91 0 9 0 8 7 9 8 91 0 0 0 1 83 3 1 1 1 12 67 0 7 7 4 83 6 1 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 2 0 5 0 2 5 104 0 5 0 10 9 5 10 91 0 9 0 8 7 9 8 91 0 3 3 20 67 0 0 0 1 83 0 1 1 12 67 0 7 7 4 83 6 1 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 2 0 5 0 2 5 104 0 5 0 10 9 5 10 91 0 9 0 8 7 9 8 91 0 3 3 20 67 0 0 0 1 83 0 1 1 12 67 0 7 7 6 83 0 6 6 24 67 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 3 1 3 106 0 2 0 5 0 2 5 104 0 5 0 10 9 5 10 91 0 9 0 8 7 9 8 91 0 0 0 1 83 0 1 1 14 67 0 7 7 6 83 0 6 6 24 67 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
123 121 117 115 107 105 102 100 96 94 82 80 65 63 55 53 39 116 120 11 18
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(101,491,qs),
(114,491,o),
(119,501,qs),
(281,806,l),
(284,810,o),
(284,814,qs),
(284,827,o),
(267,827,qs),
(260,827,o),
(214,826,o),
(162,824,o),
(117,823,o),
(110,823,qs),
(99,823,o),
(91,814,o),
(91,809,qs),
(91,807,o),
(96,798,o),
(107,798,qs),
(145,798,o),
(198,800,o),
(233,800,qs),
(239,800,o),
(239,795,qs),
(239,791,o),
(217,747,o),
(183,685,o),
(144,613,o),
(110,552,o),
(88,509,o),
(88,506,qs),
(88,491,o)
);
},
{
closed = 1;
nodes = (
(101,487,o),
(110,487,qs),
(130,487,o),
(138,501,qs),
(291,791,ls),
(299,805,o),
(303,814,o),
(303,819,qs),
(303,827,o),
(286,827,qs),
(278,827,o),
(230,826,o),
(174,824,o),
(126,823,o),
(119,823,qs),
(108,823,o),
(95,810,o),
(95,799,qs),
(95,791,o),
(105,778,o),
(116,778,qs),
(133,778,o),
(157,779,o),
(177,779,o),
(199,780,o),
(215,780,qs),
(221,780,o),
(221,775,qs),
(221,771,o),
(201,731,o),
(171,673,o),
(137,607,o),
(107,549,o),
(87,509,o),
(87,506,qs),
(87,498,o)
);
},
{
closed = 1;
nodes = (
(29,9,qs),
(29,-2,o),
(48,-19,o),
(57,-19,qs),
(71,-19,o),
(94,-6,o),
(99,5,qs),
(504,768,ls),
(508,775,o),
(518,799,o),
(518,807,qs),
(518,813,o),
(511,831,o),
(493,831,qs),
(469,831,o),
(444,805,o),
(429,774,qs),
(408,731,o),
(382,678,o),
(363,638,o),
(346,603,o),
(320,553,o),
(280,480,o),
(249,423,qs),
(225,379,o),
(195,326,o),
(177,295,o),
(165,277,o),
(154,257,o),
(137,228,o),
(109,173,o),
(65,86,o),
(31,18,qs),
(29,15,o)
);
},
{
closed = 1;
nodes = (
(379,-12,o),
(425,-12,qs),
(476,-12,o),
(532,41,o),
(532,75,qs),
(532,107,o),
(492,155,o),
(460,161,q),
(469,162,o),
(492,176,o),
(513,198,o),
(527,227,o),
(527,245,qs),
(527,259,o),
(513,288,o),
(487,312,o),
(449,327,o),
(424,327,qs),
(374,327,o),
(323,275,o),
(323,241,qs),
(323,226,o),
(333,199,o),
(350,178,o),
(370,163,o),
(381,161,q),
(370,158,o),
(346,144,o),
(326,121,o),
(313,90,o),
(313,71,qs),
(313,29,o)
);
},
{
closed = 1;
nodes = (
(406,131,o),
(423,131,qs),
(448,131,o),
(475,100,o),
(475,78,qs),
(475,59,o),
(447,31,o),
(423,31,qs),
(401,31,o),
(370,55,o),
(370,78,qs),
(370,106,o)
);
},
{
closed = 1;
nodes = (
(407,281,o),
(426,281,qs),
(442,281,o),
(470,261,o),
(470,235,qs),
(470,220,o),
(446,192,o),
(424,192,qs),
(419,192,o),
(403,196,o),
(389,205,o),
(379,222,o),
(379,235,qs),
(379,258,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
125 107 2 11 12 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 3 0 2 0 3 96 5 1 2 8 0 2 8 102 0 8 0 13 12 8 13 91 0 12 0 11 10 12 11 91 0 0 0 1 83 6 4 2 1 1 12 67 0 10 10 7 84 9 1 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 3 0 2 0 3 96 5 1 2 8 0 2 8 102 0 8 0 13 12 8 13 91 0 12 0 11 10 12 11 91 0 0 0 1 83 6 4 2 1 1 12 67 0 10 10 9 84 0 9 9 24 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 3 0 2 0 3 96 5 1 2 8 0 2 8 102 0 8 0 13 12 8 13 91 0 12 0 11 10 12 11 91 0 6 6 20 67 0 0 0 1 83 4 1 1 1 12 67 0 10 10 9 84 0 9 9 24 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 6 1 6 106 0 3 0 2 0 3 96 5 1 2 8 0 2 8 102 0 8 0 13 12 8 13 91 0 12 0 11 10 12 11 91 0 0 0 1 83 4 1 1 1 14 67 0 10 10 9 84 0 9 9 24 67 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
158 156 152 150 144 142 138 136 132 130 116 114 98 96 88 86 38 116 121 37 116 88 14 21
CALL[ ]	/* CallFunction */";
};
width = 576;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(30,-1,o),
(30,-7,qs),
(30,-19,o),
(44,-19,qs),
(56,-19,o),
(66,-9,o),
(73,5,qs),
(478,768,ls),
(482,776,o),
(492,799,o),
(492,807,qs),
(492,813,o),
(486,821,o),
(477,821,qs),
(468,821,o),
(453,808,o),
(441,792,o),
(434,777,o),
(433,774,qs),
(412,731,o),
(386,678,o),
(367,638,o),
(349,603,o),
(323,553,o),
(284,480,o),
(253,423,qs),
(229,379,o),
(200,326,o),
(183,294,o),
(172,276,o),
(161,256,o),
(146,227,o),
(117,172,o),
(71,85,o),
(35,18,qs),
(33,13,o)
);
},
{
closed = 1;
nodes = (
(339,19,o),
(367,-2,o),
(402,-12,o),
(419,-12,qs),
(440,-12,o),
(477,3,o),
(504,27,o),
(520,58,o),
(520,75,qs),
(520,91,o),
(507,119,o),
(486,142,o),
(460,158,o),
(448,161,q),
(457,164,o),
(480,177,o),
(501,199,o),
(515,227,o),
(515,245,qs),
(515,259,o),
(504,288,o),
(483,312,o),
(449,327,o),
(427,327,qs),
(384,327,o),
(331,275,o),
(331,241,qs),
(331,212,o),
(368,169,o),
(389,161,q),
(380,157,o),
(356,143,o),
(335,120,o),
(321,90,o),
(321,71,qs),
(321,50,o)
);
},
{
closed = 1;
nodes = (
(399,141,o),
(421,141,qs),
(443,141,o),
(483,107,o),
(483,77,qs),
(483,47,o),
(443,12,o),
(418,12,qs),
(390,12,o),
(358,51,o),
(358,76,qs),
(358,106,o)
);
},
{
closed = 1;
nodes = (
(394,301,o),
(426,301,qs),
(442,301,o),
(462,290,o),
(474,273,o),
(478,253,o),
(478,245,qs),
(478,216,o),
(443,182,o),
(422,182,qs),
(403,182,o),
(367,210,o),
(367,239,qs),
(367,261,o)
);
},
{
closed = 1;
nodes = (
(89,491,qs),
(102,491,o),
(107,501,qs),
(269,806,l),
(272,810,o),
(272,814,qs),
(272,827,o),
(255,827,qs),
(248,827,o),
(202,826,o),
(150,824,o),
(105,823,o),
(98,823,qs),
(87,823,o),
(79,814,o),
(79,809,qs),
(79,807,o),
(84,798,o),
(95,798,qs),
(133,798,o),
(186,800,o),
(221,800,qs),
(227,800,o),
(227,795,qs),
(227,791,o),
(205,747,o),
(171,685,o),
(132,613,o),
(98,552,o),
(76,509,o),
(76,506,qs),
(76,491,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
57 41 2 5 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 10 8 2 8 10 2 104 0 2 0 7 6 2 7 91 0 6 0 5 4 6 5 91 0 8 8 0 83 9 1 0 0 12 67 0 4 4 3 83 0 3 3 21 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 10 8 2 8 10 2 104 0 2 0 7 6 2 7 91 0 6 0 5 4 6 5 91 0 8 8 0 83 9 1 0 0 12 67 0 4 4 3 83 0 3 3 24 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 10 8 2 8 10 2 104 0 2 0 7 6 2 7 91 0 6 0 5 4 6 5 91 0 8 8 0 83 9 1 0 0 14 67 0 4 4 3 83 0 3 3 24 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
129 127 122 115 111 106 96 94 88 86 82 80 76 74 68 66 48 46 32 30 22 20 11 15
CALL[ ]	/* CallFunction */";
};
width = 563;
}
);
note = seveneighths;
unicode = 8542;
},
{
glyphname = zeroinferior;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(105,211,o),
(116,246,o),
(133,267,o),
(146,267,qs),
(158,267,o),
(173,243,o),
(181,208,o),
(184,167,o),
(184,150,qs),
(184,85,o),
(163,39,o),
(141,39,qs),
(129,39,o),
(114,58,o),
(105,88,o),
(101,125,o),
(101,143,qs),
(101,167,o)
);
},
{
closed = 1;
nodes = (
(49,30,o),
(80,-5,o),
(121,-18,o),
(143,-18,qs),
(164,-18,o),
(204,-2,o),
(236,36,o),
(256,101,o),
(256,149,qs),
(256,177,o),
(248,238,o),
(223,290,o),
(177,324,o),
(140,324,qs),
(107,324,o),
(64,291,o),
(40,238,o),
(30,170,o),
(30,135,qs),
(30,89,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68 40 40 38 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 282;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (31,0);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (0,-509);
ref = zerosuperior;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68 40 40 40 37 4 30
CALL[ ]	/* CallFunction */";
};
width = 272;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(79,237,o),
(95,280,o),
(119,307,o),
(133,307,qs),
(149,307,o),
(170,277,o),
(182,232,o),
(187,180,o),
(187,158,qs),
(187,116,o),
(174,60,o),
(155,28,o),
(133,15,o),
(123,15,qs),
(109,15,o),
(90,39,o),
(76,78,o),
(70,127,o),
(70,151,qs),
(70,181,o)
);
},
{
closed = 1;
nodes = (
(50,40,o),
(77,5,o),
(109,-10,o),
(124,-10,qs),
(139,-10,o),
(175,7,o),
(205,46,o),
(225,110,o),
(225,157,qs),
(225,185,o),
(216,246,o),
(195,298,o),
(160,332,o),
(133,332,qs),
(106,332,o),
(68,297,o),
(44,242,o),
(33,175,o),
(33,143,qs),
(33,99,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 24 3 68 40 40 40 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 258;
}
);
note = zeroinferior;
unicode = 8320;
},
{
glyphname = oneinferior;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(146,151,o),
(148,255,o),
(149,280,qs),
(150,309,o),
(150,315,qs),
(150,323,o),
(145,327,o),
(142,327,qs),
(139,327,o),
(113,326,o),
(83,324,o),
(57,323,o),
(54,323,qs),
(43,323,o),
(21,309,o),
(21,296,qs),
(21,280,o),
(37,270,o),
(54,270,qs),
(57,270,o),
(71,271,o),
(73,271,qs),
(82,271,o),
(82,257,qs),
(82,249,o),
(82,238,o),
(81,223,o),
(80,201,o),
(80,183,qs),
(79,157,o),
(77,126,o),
(76,104,o),
(75,85,o),
(75,73,qs),
(75,61,o),
(66,54,o),
(54,54,qs),
(43,54,o),
(22,42,o),
(22,28,qs),
(22,11,o),
(47,0,o),
(59,0,qs),
(161,0,ls),
(170,0,o),
(192,9,o),
(192,28,qs),
(192,45,o),
(171,56,o),
(157,56,qs),
(144,56,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
0 5 4 1 3 0 5 3 91 2 6 2 0 0 1 83 0 1 1 13 1 68 1 0 43 36 32 30 29 27 14 12 8 5 0 50 1 50 7 15
CALL[ ]	/* CallFunction */";
};
width = 210;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (21,1);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (0,-499);
ref = onesuperior;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
5 1 4 0 3 0 4 3 91 2 6 2 0 0 1 84 0 1 1 13 1 68 2 1 49 45 44 42 38 33 19 17 11 8 1 56 2 56 7 26
CALL[ ]	/* CallFunction */";
};
width = 197;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(112,131,o),
(114,248,o),
(115,276,qs),
(116,309,o),
(116,315,qs),
(116,323,o),
(111,327,o),
(108,327,qs),
(106,327,o),
(85,326,o),
(60,325,o),
(39,323,o),
(37,323,qs),
(32,323,o),
(21,317,o),
(21,312,qs),
(21,304,o),
(32,302,o),
(37,302,qs),
(44,302,o),
(69,303,o),
(73,303,qs),
(80,303,o),
(82,293,o),
(82,289,qs),
(82,277,o),
(82,261,o),
(81,240,o),
(80,209,o),
(80,183,qs),
(79,150,o),
(77,110,o),
(76,81,o),
(75,57,o),
(75,41,qs),
(75,28,o),
(58,22,o),
(37,22,qs),
(34,22,o),
(22,18,o),
(22,12,qs),
(22,3,o),
(37,0,o),
(42,0,qs),
(144,0,ls),
(151,0,o),
(158,4,o),
(158,12,qs),
(158,21,o),
(145,24,o),
(140,24,qs),
(110,24,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
5 1 4 0 3 0 4 3 91 2 6 2 0 0 1 83 0 1 1 13 1 68 1 0 44 40 39 37 33 28 14 12 8 5 0 51 1 51 7 15
CALL[ ]	/* CallFunction */";
};
width = 178;
}
);
note = oneinferior;
unicode = 8321;
},
{
glyphname = twoinferior;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(177,58,qs),
(137,60,l),
(149,74,o),
(184,117,o),
(215,169,o),
(237,226,o),
(237,253,qs),
(237,287,o),
(189,335,o),
(133,335,qs),
(103,335,o),
(61,315,o),
(34,288,o),
(22,258,o),
(22,249,qs),
(22,235,o),
(38,212,o),
(62,212,qs),
(75,212,o),
(97,222,o),
(97,238,qs),
(97,249,o),
(86,253,o),
(86,258,qs),
(86,263,o),
(112,280,o),
(129,280,qs),
(144,280,o),
(165,265,o),
(165,254,qs),
(165,224,o),
(137,155,o),
(94,89,o),
(44,34,o),
(23,18,qs),
(15,12,o),
(15,8,qs),
(15,5,o),
(21,-5,o),
(33,-5,qs),
(52,-5,o),
(63,4,o),
(65,6,q),
(92,5,o),
(118,4,qs),
(141,3,o),
(191,2,o),
(211,2,qs),
(216,2,o),
(222,9,o),
(223,11,qs),
(224,12,o),
(231,25,o),
(240,40,o),
(247,56,o),
(247,61,qs),
(247,67,o),
(236,78,o),
(225,78,qs),
(205,78,o),
(192,61,o),
(190,59,qs),
(189,58,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
11 1 1 6 1 66 0 1 6 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 4 3 0 3 4 0 104 0 0 6 6 0 94 0 5 0 3 4 5 3 91 0 6 6 1 84 2 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 4 3 0 3 4 0 104 0 0 6 6 0 94 0 5 0 3 4 5 3 91 0 6 6 1 84 0 1 1 13 67 0 2 2 16 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
39 38 39 43 34 105 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 269;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (18,0);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (0,-500);
ref = twosuperior;
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
61 1 6 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 5 0 3 4 5 3 91 0 6 6 1 83 2 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 5 0 3 4 5 3 91 0 6 6 1 83 0 1 1 13 67 0 2 2 16 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
23 38 39 43 34 103 35 7 33
CALL[ ]	/* CallFunction */";
};
width = 260;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(170,25,o),
(168,25,qs),
(79,28,l),
(97,44,o),
(142,95,o),
(182,155,o),
(210,221,o),
(210,253,qs),
(210,287,o),
(169,335,o),
(130,335,qs),
(106,335,o),
(68,315,o),
(42,288,o),
(29,258,o),
(29,249,qs),
(29,220,o),
(50,220,qs),
(52,220,o),
(70,227,o),
(70,243,qs),
(70,251,o),
(59,256,o),
(59,261,qs),
(59,265,o),
(67,281,o),
(83,296,o),
(108,307,o),
(126,307,qs),
(152,307,o),
(172,277,o),
(172,254,qs),
(172,224,o),
(144,155,o),
(101,89,o),
(51,34,o),
(30,18,qs),
(22,12,o),
(22,8,qs),
(22,0,o),
(35,0,qs),
(46,0,o),
(53,4,o),
(55,6,q),
(80,5,o),
(104,4,qs),
(124,3,o),
(168,2,o),
(184,2,qs),
(189,2,o),
(194,9,o),
(196,11,q),
(204,26,o),
(213,41,o),
(217,48,o),
(218,51,o),
(218,53,qs),
(218,55,o),
(214,62,o),
(206,62,qs),
(199,62,o),
(193,55,o),
(191,52,qs),
(180,34,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 5 0 3 4 5 3 91 0 6 6 1 83 2 1 1 1 13 1 68 39 37 41 42 34 105 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 247;
}
);
note = twoinferior;
unicode = 8322;
},
{
glyphname = threeinferior;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(149,180,o),
(180,194,o),
(206,216,o),
(224,247,o),
(224,268,qs),
(224,289,o),
(207,315,o),
(181,328,o),
(151,332,o),
(138,332,qs),
(111,332,o),
(69,312,o),
(42,284,o),
(28,255,o),
(28,245,qs),
(28,236,o),
(40,225,o),
(49,225,qs),
(68,225,o),
(85,242,o),
(88,249,qs),
(94,263,o),
(116,290,o),
(132,290,qs),
(140,290,o),
(152,280,o),
(152,270,qs),
(152,253,o),
(134,226,o),
(107,203,o),
(74,182,o),
(60,172,qs),
(58,170,o),
(46,159,o),
(46,151,qs),
(46,135,o),
(55,123,o),
(60,123,qs),
(68,123,o),
(91,132,o),
(108,132,qs),
(128,132,o),
(156,118,o),
(156,101,qs),
(156,85,o),
(139,62,o),
(114,48,o),
(85,41,o),
(73,41,qs),
(68,41,o),
(65,48,o),
(61,56,o),
(53,63,o),
(44,63,qs),
(30,63,o),
(16,42,o),
(16,29,qs),
(16,-9,o),
(77,-9,qs),
(103,-9,o),
(157,8,o),
(200,38,o),
(228,80,o),
(228,105,qs),
(228,138,o),
(183,174,o),
(153,174,qs),
(148,174,o),
(141,173,o),
(137,172,q),
(136,175,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
70 1 0 7 0 1 4 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 7 6 0 6 7 0 104 0 0 4 6 0 4 102 5 1 4 2 6 4 2 102 0 3 2 1 2 3 96 0 8 0 6 7 8 6 91 0 2 2 1 83 0 1 1 24 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 7 6 0 6 7 0 104 0 0 4 6 0 4 102 0 4 5 6 4 5 102 0 5 2 6 5 2 102 0 3 2 1 2 3 96 0 8 0 6 7 8 6 91 0 2 2 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 36 44 33 38 35 35 38 34 9 24
CALL[ ]	/* CallFunction */";
};
width = 253;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (19,0);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (0,-503);
ref = threesuperior;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 10 1 9 7 0 9 7 102 0 7 8 0 7 8 102 0 2 0 0 1 2 0 91 0 8 8 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 0 9 10 0 9 10 102 0 10 7 0 10 7 102 0 7 8 0 7 8 102 0 2 0 0 1 2 0 91 0 8 8 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
68 66 65 63 35 36 38 33 17 25 38 36 39 11 35
CALL[ ]	/* CallFunction */";
};
width = 245;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(53,159,o),
(53,151,qs),
(53,143,o),
(65,139,o),
(67,139,qs),
(72,139,o),
(98,148,o),
(115,148,qs),
(135,148,o),
(163,127,o),
(163,101,qs),
(163,81,o),
(146,50,o),
(121,28,o),
(92,17,o),
(80,17,qs),
(70,17,o),
(57,24,o),
(48,32,o),
(40,39,o),
(35,39,qs),
(27,39,o),
(23,28,o),
(23,23,qs),
(23,6,o),
(57,-9,o),
(74,-9,qs),
(96,-9,o),
(141,11,o),
(178,44,o),
(201,85,o),
(201,105,qs),
(201,121,o),
(185,146,o),
(161,163,o),
(133,171,o),
(121,171,qs),
(117,171,o),
(110,170,o),
(107,170,qs),
(103,169,o),
(101,169,q),
(105,173,o),
(136,190,o),
(170,217,o),
(197,255,o),
(197,280,qs),
(197,298,o),
(183,318,o),
(164,329,o),
(143,332,o),
(136,332,qs),
(111,332,o),
(73,312,o),
(48,284,o),
(35,255,o),
(35,245,qs),
(35,230,o),
(46,230,qs),
(52,230,o),
(59,242,o),
(61,249,qs),
(70,275,o),
(102,306,o),
(129,306,qs),
(147,306,o),
(159,291,o),
(159,277,qs),
(159,256,o),
(141,226,o),
(114,202,o),
(81,182,o),
(67,172,qs),
(65,170,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
0 1 0 3 0 1 3 104 0 10 9 7 9 10 7 104 0 7 8 9 7 8 102 0 2 0 0 1 2 0 91 5 4 2 3 0 9 10 3 9 91 0 8 8 6 83 0 6 6 24 6 68 69 67 66 64 35 36 40 33 17 25 37 36 39 11 24
CALL[ ]	/* CallFunction */";
};
width = 233;
}
);
note = threeinferior;
unicode = 8323;
},
{
glyphname = fourinferior;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(259,66,o),
(270,86,o),
(270,94,qs),
(270,122,o),
(242,122,qs),
(237,122,l),
(239,146,o),
(243,205,o),
(247,259,o),
(250,299,o),
(250,304,qs),
(250,321,o),
(227,337,o),
(213,337,qs),
(201,337,o),
(179,326,o),
(174,319,qs),
(160,301,o),
(140,276,o),
(124,254,o),
(107,231,o),
(82,199,o),
(48,152,o),
(22,117,qs),
(9,100,o),
(1,85,o),
(1,77,qs),
(1,68,o),
(17,64,o),
(34,64,qs),
(43,64,o),
(86,64,o),
(108,65,qs),
(124,66,o),
(149,66,o),
(165,66,q),
(164,55,ls),
(164,49,o),
(153,48,q),
(150,47,o),
(127,46,o),
(117,45,qs),
(107,44,o),
(89,36,o),
(89,25,qs),
(89,10,o),
(110,0,o),
(119,0,qs),
(228,0,ls),
(248,0,o),
(264,9,o),
(264,23,qs),
(264,39,o),
(244,48,o),
(236,48,qs),
(231,48,o),
(231,50,qs),
(231,51,o),
(232,60,o),
(233,66,q),
(243,66,ls)
);
},
{
closed = 1;
nodes = (
(98,124,qs),
(98,126,o),
(102,130,o),
(103,132,qs),
(178,240,l),
(169,123,l),
(147,121,o),
(107,120,o),
(104,120,qs),
(98,120,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
65 1 5 4 23 1 0 3 2 66 0 4 5 4 106 9 7 2 5 8 6 2 3 0 5 3 91 2 1 0 0 1 84 0 1 1 13 1 68 63 61 0 0 61 70 63 70 0 60 0 59 39 46 116 22 52 36 10 21
CALL[ ]	/* CallFunction */";
};
width = 294;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (4,1);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (0,-502);
ref = foursuperior;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
67 1 6 5 1 66 23 1 0 1 65 0 5 6 5 106 10 8 2 6 9 7 2 4 0 6 4 91 3 2 2 0 0 1 84 0 1 1 13 1 68 65 63 1 1 63 72 65 72 1 62 1 61 41 43 117 17 20 52 38 11 33
CALL[ ]	/* CallFunction */";
};
width = 283;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(237,98,o),
(243,108,o),
(243,110,qs),
(243,122,o),
(226,122,qs),
(193,122,l),
(194,146,o),
(198,209,o),
(203,266,o),
(206,306,o),
(206,308,qs),
(206,324,o),
(189,329,o),
(186,329,qs),
(179,329,o),
(166,321,o),
(164,319,qs),
(142,292,o),
(111,251,o),
(79,208,o),
(40,155,o),
(12,117,qs),
(9,113,o),
(8,108,o),
(8,106,qs),
(8,94,o),
(24,94,qs),
(33,94,o),
(76,96,o),
(98,97,qs),
(114,98,o),
(144,98,o),
(160,98,q),
(156,39,ls),
(156,31,o),
(145,25,o),
(136,24,q),
(133,23,o),
(116,22,o),
(107,21,qs),
(103,21,o),
(96,14,o),
(96,9,qs),
(96,4,o),
(105,0,o),
(109,0,qs),
(218,0,ls),
(226,0,o),
(237,3,o),
(237,12,qs),
(237,21,o),
(222,24,o),
(218,24,qs),
(209,24,o),
(189,26,o),
(189,34,qs),
(189,39,o),
(191,79,o),
(193,98,q),
(229,98,ls)
);
},
{
closed = 1;
nodes = (
(54,124,qs),
(54,126,o),
(58,130,o),
(59,132,q),
(171,280,l),
(159,123,l),
(124,121,o),
(64,120,o),
(60,120,qs),
(54,120,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
64 1 6 5 1 66 22 1 0 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 5 6 5 106 3 2 2 0 4 1 6 0 96 10 8 2 6 9 7 2 4 0 6 4 91 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 5 6 5 106 3 2 2 0 4 1 4 0 1 104 10 8 2 6 9 7 2 4 0 6 4 91 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
63 60 0 0 60 69 63 69 0 59 0 58 39 43 117 17 20 52 37 11 22
CALL[ ]	/* CallFunction */";
};
width = 267;
}
);
note = fourinferior;
unicode = 8324;
},
{
glyphname = fiveinferior;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(132,304,o),
(92,298,o),
(59,292,o),
(55,284,qs),
(54,282,o),
(49,249,o),
(43,206,o),
(37,165,o),
(36,156,qs),
(35,151,o),
(34,139,o),
(34,136,qs),
(34,107,o),
(45,107,qs),
(58,107,o),
(76,119,o),
(95,134,o),
(116,146,o),
(132,146,qs),
(159,146,o),
(178,121,o),
(178,107,qs),
(178,93,o),
(168,66,o),
(150,44,o),
(125,30,o),
(110,30,qs),
(92,30,o),
(79,44,o),
(79,52,qs),
(79,57,o),
(82,62,o),
(85,65,o),
(88,70,o),
(88,76,qs),
(88,93,o),
(60,93,qs),
(50,93,o),
(20,67,o),
(20,43,qs),
(20,34,o),
(27,15,o),
(44,-2,o),
(75,-12,o),
(99,-12,qs),
(124,-12,o),
(178,7,o),
(222,40,o),
(250,84,o),
(250,109,qs),
(250,154,o),
(200,204,o),
(155,204,qs),
(149,204,o),
(133,200,o),
(117,194,o),
(104,185,o),
(101,180,q),
(111,236,l),
(116,236,o),
(139,242,o),
(164,250,o),
(186,259,o),
(190,261,qs),
(199,266,o),
(217,281,o),
(232,298,o),
(242,315,o),
(242,322,qs),
(242,326,o),
(234,339,o),
(215,339,qs),
(204,339,o),
(190,330,o),
(188,328,qs),
(174,315,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 1 0 17 1 6 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 1 0 106 0 1 2 1 106 0 7 6 4 6 7 4 104 0 4 5 5 4 94 0 2 0 6 7 2 6 91 0 5 5 3 84 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 1 0 106 0 1 2 1 106 0 7 6 4 6 7 4 104 0 4 5 5 4 94 0 2 0 6 7 2 6 91 0 5 5 3 84 0 3 3 24 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 0 1 0 106 0 1 2 1 106 0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 2 0 6 7 2 6 91 0 5 5 3 84 0 3 3 24 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
35 38 40 38 38 37 27 34 8 23
CALL[ ]	/* CallFunction */";
};
width = 272;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (21,0);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (0,-498);
ref = fivesuperior;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
68 1 1 0 16 1 5 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 1 0 106 0 6 5 3 5 6 3 104 0 3 4 4 3 94 0 1 0 5 6 1 5 91 0 4 4 2 84 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 0 1 0 106 0 6 5 3 5 6 3 104 0 3 4 5 3 4 102 0 1 0 5 6 1 5 91 0 4 4 2 84 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
35 40 40 36 38 45 35 7 33
CALL[ ]	/* CallFunction */";
};
width = 261;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(135,304,o),
(95,298,o),
(62,292,o),
(58,284,qs),
(57,282,o),
(53,258,o),
(48,222,o),
(42,178,o),
(39,156,qs),
(38,151,o),
(37,139,o),
(37,136,qs),
(37,123,o),
(48,123,qs),
(54,123,o),
(71,135,o),
(93,150,o),
(119,162,o),
(135,162,qs),
(151,162,o),
(169,150,o),
(178,132,o),
(181,113,o),
(181,107,qs),
(181,90,o),
(171,57,o),
(150,31,o),
(116,14,o),
(92,14,qs),
(74,14,o),
(48,25,o),
(48,36,qs),
(48,41,o),
(54,46,o),
(62,49,o),
(68,54,o),
(68,60,qs),
(68,77,o),
(48,77,qs),
(38,77,o),
(23,60,o),
(23,43,qs),
(23,25,o),
(53,-12,o),
(90,-12,qs),
(114,-12,o),
(161,7,o),
(197,40,o),
(219,84,o),
(219,109,qs),
(219,147,o),
(172,188,o),
(136,188,qs),
(113,188,o),
(84,174,o),
(70,164,q),
(87,268,l),
(94,270,o),
(124,276,o),
(157,283,o),
(186,291,o),
(192,294,qs),
(199,298,o),
(211,316,o),
(211,322,qs),
(211,326,o),
(206,334,o),
(201,334,qs),
(197,334,o),
(191,328,qs),
(177,315,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
66 1 1 0 14 1 5 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 1 0 106 0 6 5 3 5 6 3 104 0 3 4 4 3 94 0 1 0 5 6 1 5 91 0 4 4 2 84 0 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 1 0 106 0 6 5 3 5 6 3 104 0 3 4 4 3 94 0 1 0 5 6 1 5 91 0 4 4 2 84 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 0 1 0 106 0 6 5 3 5 6 3 104 0 3 4 5 3 4 102 0 1 0 5 6 1 5 91 0 4 4 2 84 0 2 2 24 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
35 40 40 36 38 45 33 7 22
CALL[ ]	/* CallFunction */";
};
width = 245;
}
);
note = fiveinferior;
unicode = 8325;
},
{
glyphname = sixinferior;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(194,305,o),
(194,308,qs),
(194,319,o),
(168,327,o),
(160,327,qs),
(149,327,o),
(135,317,qs),
(119,305,o),
(79,259,o),
(45,200,o),
(21,133,o),
(21,101,qs),
(21,69,o),
(42,26,o),
(76,0,o),
(119,-12,o),
(142,-12,qs),
(163,-12,o),
(201,0,o),
(230,23,o),
(247,56,o),
(247,77,qs),
(247,113,o),
(197,162,o),
(152,162,qs),
(135,162,o),
(109,153,o),
(101,148,qs),
(91,142,o),
(84,135,q),
(84,152,o),
(108,200,o),
(141,246,o),
(175,284,o),
(185,292,qs),
(191,297,o)
);
},
{
closed = 1;
nodes = (
(118,42,o),
(104,52,o),
(95,69,o),
(95,82,qs),
(95,96,o),
(111,126,o),
(135,126,qs),
(155,126,o),
(175,98,o),
(175,81,qs),
(175,69,o),
(166,52,o),
(154,42,o),
(140,38,o),
(136,38,qs),
(131,38,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 2 0 2 106 5 1 3 4 1 4 3 1 104 0 0 0 4 3 0 4 91 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 2 0 2 106 5 1 3 4 1 4 3 1 104 0 0 0 4 3 0 4 91 0 1 1 24 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
37 36 45 43 36 51 37 51 42 38 41 6 18
CALL[ ]	/* CallFunction */";
};
width = 255;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (24,0);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (0,-505);
ref = sixsuperior;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 2 0 2 106 0 0 0 4 3 0 4 91 5 1 3 3 1 83 0 1 1 24 1 68 37 36 45 43 36 51 37 51 42 38 42 6 29
CALL[ ]	/* CallFunction */";
};
width = 249;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(179,306,o),
(179,313,qs),
(179,322,o),
(167,327,o),
(165,327,qs),
(163,327,o),
(151,322,o),
(143,317,qs),
(128,306,o),
(88,262,o),
(53,201,o),
(29,129,o),
(29,91,qs),
(29,35,o),
(80,-12,o),
(118,-12,qs),
(161,-12,o),
(221,39,o),
(221,82,qs),
(221,97,o),
(212,126,o),
(192,148,o),
(160,162,o),
(137,162,qs),
(114,162,o),
(84,150,o),
(66,134,o),
(59,119,o),
(58,116,q),
(59,139,o),
(82,193,o),
(114,242,o),
(148,282,o),
(159,292,qs),
(168,300,o)
);
},
{
closed = 1;
nodes = (
(69,39,o),
(69,66,qs),
(69,76,o),
(75,101,o),
(88,123,o),
(110,137,o),
(126,137,qs),
(149,137,o),
(183,105,o),
(183,76,qs),
(183,59,o),
(171,34,o),
(152,19,o),
(129,12,o),
(119,12,qs),
(99,12,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 106 0 0 0 4 3 0 4 91 5 1 3 3 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 106 0 0 0 4 3 0 4 91 5 1 3 3 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
36 35 44 42 35 50 36 50 41 38 41 6 18
CALL[ ]	/* CallFunction */";
};
width = 240;
}
);
note = sixinferior;
unicode = 8326;
},
{
glyphname = seveninferior;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,-11,o),
(43,-11,qs),
(68,-11,o),
(78,5,q),
(225,286,ls),
(237,309,o),
(243,322,o),
(243,326,qs),
(243,328,o),
(237,331,o),
(226,331,qs),
(218,331,o),
(167,330,o),
(109,328,o),
(59,327,o),
(52,327,qs),
(41,327,o),
(24,311,o),
(24,297,qs),
(24,286,o),
(38,270,o),
(49,270,qs),
(65,270,o),
(83,271,o),
(97,271,o),
(114,272,o),
(129,272,qs),
(135,272,o),
(135,267,qs),
(135,264,o),
(117,225,o),
(90,170,o),
(58,107,o),
(31,52,o),
(13,13,o),
(13,10,qs),
(13,2,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
0 1 0 0 2 1 0 91 0 2 2 24 2 68 39 116 120 3 18
CALL[ ]	/* CallFunction */";
};
width = 237;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (17,0);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (0,-495);
ref = sevensuperior;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
0 1 0 0 2 1 0 91 0 2 2 24 2 68 38 116 121 3 29
CALL[ ]	/* CallFunction */";
};
width = 229;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(34,-5,qs),
(47,-5,o),
(52,5,qs),
(214,310,l),
(217,314,o),
(217,318,qs),
(217,331,o),
(200,331,qs),
(193,331,o),
(147,330,o),
(95,328,o),
(50,327,o),
(43,327,qs),
(32,327,o),
(24,318,o),
(24,313,qs),
(24,311,o),
(29,302,o),
(40,302,qs),
(78,302,o),
(131,304,o),
(166,304,qs),
(172,304,o),
(172,299,qs),
(172,295,o),
(150,251,o),
(116,189,o),
(77,117,o),
(43,56,o),
(21,13,o),
(21,10,qs),
(21,-5,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
0 1 0 0 2 1 0 91 0 2 2 16 2 68 37 116 88 3 18
CALL[ ]	/* CallFunction */";
};
width = 218;
}
);
note = seveninferior;
unicode = 8327;
},
{
glyphname = eightinferior;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(86,-12,o),
(140,-12,qs),
(197,-12,o),
(257,38,o),
(257,75,qs),
(257,107,o),
(222,155,o),
(185,161,q),
(194,162,o),
(217,173,o),
(238,194,o),
(252,225,o),
(252,245,qs),
(252,259,o),
(238,288,o),
(211,312,o),
(170,327,o),
(144,327,qs),
(89,327,o),
(34,275,o),
(34,241,qs),
(34,209,o),
(71,164,o),
(92,161,q),
(67,157,o),
(24,109,o),
(24,71,qs),
(24,29,o)
);
},
{
closed = 1;
nodes = (
(105,111,o),
(119,121,o),
(135,125,o),
(141,125,qs),
(168,125,o),
(186,96,o),
(186,79,qs),
(186,67,o),
(165,42,o),
(141,42,qs),
(124,42,o),
(95,58,o),
(95,79,qs),
(95,93,o)
);
},
{
closed = 1;
nodes = (
(131,269,o),
(143,269,qs),
(155,269,o),
(181,255,o),
(181,229,qs),
(181,219,o),
(162,198,o),
(142,198,qs),
(131,198,o),
(104,212,o),
(104,233,qs),
(104,256,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
19 3 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 2 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 2 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 38 36 36 46 40 6 21
CALL[ ]	/* CallFunction */";
};
width = 282;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (27,0);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (0,-507);
ref = eightsuperior;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
24 6 2 3 4 1 66 0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 2 1 83 0 1 1 24 1 68 36 38 36 36 46 45 6 32
CALL[ ]	/* CallFunction */";
};
width = 274;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(49,19,o),
(77,-2,o),
(112,-12,o),
(129,-12,qs),
(150,-12,o),
(187,3,o),
(214,27,o),
(230,58,o),
(230,75,qs),
(230,91,o),
(217,119,o),
(196,142,o),
(170,158,o),
(158,161,q),
(167,164,o),
(190,177,o),
(211,199,o),
(225,227,o),
(225,245,qs),
(225,259,o),
(214,288,o),
(193,312,o),
(159,327,o),
(137,327,qs),
(94,327,o),
(41,275,o),
(41,241,qs),
(41,212,o),
(78,169,o),
(99,161,q),
(90,157,o),
(66,143,o),
(45,120,o),
(31,90,o),
(31,71,qs),
(31,50,o)
);
},
{
closed = 1;
nodes = (
(109,141,o),
(131,141,qs),
(153,141,o),
(193,107,o),
(193,77,qs),
(193,47,o),
(153,12,o),
(128,12,qs),
(100,12,o),
(68,51,o),
(68,76,qs),
(68,106,o)
);
},
{
closed = 1;
nodes = (
(104,301,o),
(136,301,qs),
(152,301,o),
(172,290,o),
(184,273,o),
(188,253,o),
(188,245,qs),
(188,216,o),
(153,182,o),
(132,182,qs),
(113,182,o),
(77,210,o),
(77,239,qs),
(77,261,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
21 5 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 2 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 2 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
60 58 52 50 46 44 40 38 32 30 42 6 16
CALL[ ]	/* CallFunction */";
};
width = 262;
}
);
note = eightinferior;
unicode = 8328;
},
{
glyphname = nineinferior;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(62,11,o),
(62,4,qs),
(62,-6,o),
(82,-15,o),
(94,-15,qs),
(103,-15,o),
(114,-10,o),
(122,-5,qs),
(138,7,o),
(177,51,o),
(211,110,o),
(234,182,o),
(234,221,qs),
(234,273,o),
(179,327,o),
(128,327,qs),
(106,327,o),
(65,317,o),
(34,295,o),
(15,259,o),
(15,232,qs),
(15,192,o),
(64,134,o),
(109,134,qs),
(126,134,o),
(151,146,o),
(167,162,o),
(175,177,o),
(176,180,q),
(173,148,o),
(118,69,o),
(75,28,qs),
(66,19,o)
);
},
{
closed = 1;
nodes = (
(166,258,o),
(166,233,qs),
(166,219,o),
(147,191,o),
(124,191,qs),
(100,191,o),
(80,217,o),
(80,234,qs),
(80,260,o),
(108,277,o),
(120,277,qs),
(142,277,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
3 1 0 4 1 66 0 1 5 1 3 4 1 3 91 0 4 0 0 2 4 0 91 0 2 2 21 2 68 34 33 40 38 33 44 34 44 41 38 39 6 18
CALL[ ]	/* CallFunction */";
};
width = 256;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (17,0);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (0,-507);
ref = ninesuperior;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
6 1 4 3 1 66 0 1 5 1 3 4 1 3 91 0 4 0 0 2 4 0 91 0 2 2 21 2 68 34 33 40 38 33 44 34 44 40 38 40 6 29
CALL[ ]	/* CallFunction */";
};
width = 250;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(62,9,o),
(62,2,qs),
(62,-7,o),
(74,-12,o),
(76,-12,qs),
(78,-12,o),
(90,-7,o),
(98,-2,qs),
(113,8,o),
(153,53,o),
(188,114,o),
(212,186,o),
(212,224,qs),
(212,280,o),
(161,327,o),
(123,327,qs),
(80,327,o),
(20,271,o),
(20,228,qs),
(20,213,o),
(29,184,o),
(49,162,o),
(81,148,o),
(104,148,qs),
(126,148,o),
(155,160,o),
(171,175,o),
(177,190,o),
(178,193,q),
(177,170,o),
(155,118,o),
(125,71,o),
(93,33,o),
(82,23,qs),
(73,15,o)
);
},
{
closed = 1;
nodes = (
(175,276,o),
(175,249,qs),
(175,238,o),
(167,211,o),
(151,187,o),
(127,171,o),
(111,171,qs),
(88,171,o),
(55,205,o),
(55,234,qs),
(55,251,o),
(68,277,o),
(88,295,o),
(112,304,o),
(122,304,qs),
(142,304,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 4 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 5 1 3 4 1 3 91 0 4 0 0 2 4 0 91 0 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 1 5 1 3 4 1 3 91 0 4 0 0 2 4 0 91 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
36 35 44 42 35 50 36 50 41 38 41 6 18
CALL[ ]	/* CallFunction */";
};
width = 241;
}
);
note = nineinferior;
unicode = 8329;
},
{
glyphname = zerosuperior;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(103,724,o),
(114,759,o),
(131,780,o),
(144,780,qs),
(156,780,o),
(171,756,o),
(179,721,o),
(182,680,o),
(182,663,qs),
(182,598,o),
(161,552,o),
(139,552,qs),
(127,552,o),
(112,571,o),
(103,601,o),
(99,638,o),
(99,656,qs),
(99,680,o)
);
},
{
closed = 1;
nodes = (
(47,543,o),
(78,508,o),
(119,495,o),
(141,495,qs),
(162,495,o),
(202,511,o),
(234,549,o),
(254,614,o),
(254,662,qs),
(254,690,o),
(246,751,o),
(221,803,o),
(175,837,o),
(138,837,qs),
(105,837,o),
(62,804,o),
(38,751,o),
(28,683,o),
(28,648,qs),
(28,602,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 3 0 3 87 0 1 1 2 83 0 2 2 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 1 0 2 1 91 0 0 3 3 0 79 0 0 0 3 83 0 3 0 3 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
40 40 38 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 279;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(94,731,o),
(107,769,o),
(126,792,o),
(140,792,qs),
(154,792,o),
(171,766,o),
(181,727,o),
(185,682,o),
(185,663,qs),
(185,627,o),
(177,579,o),
(162,551,o),
(143,540,o),
(133,540,qs),
(121,540,o),
(103,561,o),
(93,594,o),
(88,636,o),
(88,656,qs),
(88,682,o)
);
},
{
closed = 1;
nodes = (
(49,543,o),
(79,509,o),
(116,495,o),
(135,495,qs),
(153,495,o),
(192,512,o),
(223,551,o),
(243,615,o),
(243,662,qs),
(243,690,o),
(234,751,o),
(211,803,o),
(170,837,o),
(137,837,qs),
(106,837,o),
(65,803,o),
(41,749,o),
(31,682,o),
(31,648,qs),
(31,603,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 3 0 3 87 0 1 1 2 83 0 2 2 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 1 0 2 1 91 0 0 3 3 0 79 0 0 0 3 83 0 3 0 3 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
40 40 40 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 271;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(81,742,o),
(97,785,o),
(121,812,o),
(135,812,qs),
(151,812,o),
(172,782,o),
(184,737,o),
(189,685,o),
(189,663,qs),
(189,621,o),
(176,565,o),
(157,533,o),
(135,520,o),
(125,520,qs),
(111,520,o),
(92,544,o),
(78,583,o),
(72,632,o),
(72,656,qs),
(72,686,o)
);
},
{
closed = 1;
nodes = (
(52,545,o),
(79,510,o),
(111,495,o),
(126,495,qs),
(141,495,o),
(177,512,o),
(207,551,o),
(227,615,o),
(227,662,qs),
(227,690,o),
(218,751,o),
(197,803,o),
(162,837,o),
(135,837,qs),
(108,837,o),
(70,802,o),
(46,747,o),
(35,680,o),
(35,648,qs),
(35,604,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 3 0 3 87 0 1 1 2 83 0 2 2 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 1 0 2 1 91 0 0 3 3 0 79 0 0 0 3 83 0 3 0 3 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
40 40 40 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 260;
}
);
note = zerosuperior;
unicode = 8304;
},
{
glyphname = onesuperior;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(146,651,o),
(148,755,o),
(149,780,qs),
(150,809,o),
(150,815,qs),
(150,823,o),
(145,827,o),
(142,827,qs),
(139,827,o),
(113,826,o),
(83,824,o),
(57,823,o),
(54,823,qs),
(43,823,o),
(21,809,o),
(21,796,qs),
(21,780,o),
(37,770,o),
(54,770,qs),
(57,770,o),
(71,771,o),
(73,771,qs),
(82,771,o),
(82,757,qs),
(82,749,o),
(82,738,o),
(81,723,o),
(80,701,o),
(80,683,qs),
(79,657,o),
(77,626,o),
(76,604,o),
(75,585,o),
(75,573,qs),
(75,561,o),
(66,554,o),
(54,554,qs),
(43,554,o),
(22,542,o),
(22,528,qs),
(22,511,o),
(47,500,o),
(59,500,qs),
(161,500,ls),
(170,500,o),
(192,509,o),
(192,528,qs),
(192,545,o),
(171,556,o),
(157,556,qs),
(144,556,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
2 6 2 0 0 1 0 1 87 4 1 3 3 5 83 0 5 5 12 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
2 6 2 0 0 1 0 1 87 4 1 3 3 5 83 0 5 5 14 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
1 0 43 36 32 30 29 27 14 12 8 5 0 50 1 50 7 15
CALL[ ]	/* CallFunction */";
};
width = 210;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(132,643,o),
(134,753,o),
(135,779,qs),
(136,810,o),
(136,815,qs),
(136,823,o),
(131,827,o),
(128,827,qs),
(125,827,o),
(101,826,o),
(74,825,o),
(50,823,o),
(47,823,qs),
(39,823,o),
(21,812,o),
(21,802,qs),
(21,787,o),
(39,782,o),
(47,782,qs),
(52,782,o),
(70,783,o),
(73,783,qs),
(80,783,o),
(82,771,o),
(82,769,qs),
(82,760,o),
(82,746,o),
(81,729,o),
(80,704,o),
(80,683,qs),
(79,655,o),
(77,620,o),
(76,595,o),
(75,575,o),
(75,561,qs),
(75,548,o),
(63,542,o),
(47,542,qs),
(44,542,o),
(22,534,o),
(22,522,qs),
(22,514,o),
(29,505,o),
(39,501,o),
(49,500,o),
(52,500,qs),
(154,500,ls),
(161,500,o),
(178,507,o),
(178,522,qs),
(178,530,o),
(171,539,o),
(162,543,o),
(152,544,o),
(150,544,qs),
(130,544,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
2 6 2 0 0 1 0 1 88 0 3 3 4 83 5 1 4 4 12 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
2 6 2 0 0 1 0 1 88 0 3 3 4 83 5 1 4 4 14 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
1 0 48 44 43 41 37 32 18 16 10 7 0 55 1 55 7 15
CALL[ ]	/* CallFunction */";
};
width = 197;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(112,631,o),
(114,748,o),
(115,776,qs),
(116,809,o),
(116,815,qs),
(116,823,o),
(111,827,o),
(108,827,qs),
(106,827,o),
(85,826,o),
(60,825,o),
(39,823,o),
(37,823,qs),
(32,823,o),
(21,817,o),
(21,812,qs),
(21,804,o),
(32,802,o),
(37,802,qs),
(44,802,o),
(69,803,o),
(73,803,qs),
(80,803,o),
(82,793,o),
(82,789,qs),
(82,777,o),
(82,761,o),
(81,740,o),
(80,709,o),
(80,683,qs),
(79,650,o),
(77,610,o),
(76,581,o),
(75,557,o),
(75,541,qs),
(75,528,o),
(58,522,o),
(37,522,qs),
(34,522,o),
(22,518,o),
(22,512,qs),
(22,503,o),
(37,500,o),
(42,500,qs),
(144,500,ls),
(151,500,o),
(158,504,o),
(158,512,qs),
(158,521,o),
(145,524,o),
(140,524,qs),
(110,524,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
2 6 2 0 0 1 0 1 87 0 3 3 4 83 5 1 4 4 12 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
2 6 2 0 0 1 0 1 87 0 3 3 4 83 5 1 4 4 14 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
1 0 44 40 39 37 33 28 14 12 8 5 0 51 1 51 7 15
CALL[ ]	/* CallFunction */";
};
width = 179;
}
);
note = onesuperior;
unicode = 185;
},
{
glyphname = twosuperior;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(177,559,qs),
(137,561,l),
(149,575,o),
(184,618,o),
(215,670,o),
(237,727,o),
(237,754,qs),
(237,788,o),
(189,836,o),
(133,836,qs),
(103,836,o),
(61,816,o),
(34,789,o),
(22,759,o),
(22,750,qs),
(22,736,o),
(38,713,o),
(62,713,qs),
(75,713,o),
(97,723,o),
(97,739,qs),
(97,750,o),
(86,754,o),
(86,759,qs),
(86,764,o),
(112,781,o),
(129,781,qs),
(144,781,o),
(165,766,o),
(165,755,qs),
(165,725,o),
(137,656,o),
(94,590,o),
(44,535,o),
(23,519,qs),
(15,513,o),
(15,509,qs),
(15,506,o),
(21,496,o),
(33,496,qs),
(52,496,o),
(63,505,o),
(65,507,q),
(92,506,o),
(118,505,qs),
(141,504,o),
(191,503,o),
(211,503,qs),
(216,503,o),
(222,510,o),
(223,512,qs),
(224,513,o),
(231,526,o),
(240,541,o),
(247,557,o),
(247,562,qs),
(247,568,o),
(236,579,o),
(225,579,qs),
(205,579,o),
(192,562,o),
(190,560,qs),
(189,559,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
11 1 1 6 1 66 0 1 6 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 3 0 3 4 0 104 0 0 6 6 0 94 0 6 2 1 1 6 1 88 0 3 3 5 83 0 5 5 20 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 4 3 0 3 4 0 104 0 0 6 6 0 94 0 2 1 2 107 0 6 0 1 2 6 1 92 0 3 3 5 83 0 5 5 20 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 4 3 0 3 4 0 104 0 0 6 6 0 94 0 2 1 2 107 0 5 0 3 4 5 3 91 0 6 1 1 6 79 0 6 6 1 84 0 1 6 1 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
39 38 39 43 34 105 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 269;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(183,547,q),
(182,546,l),
(113,549,l),
(128,564,o),
(167,610,o),
(202,665,o),
(226,725,o),
(226,754,qs),
(226,788,o),
(181,836,o),
(132,836,qs),
(104,836,o),
(64,816,o),
(38,789,o),
(25,759,o),
(25,750,qs),
(25,736,o),
(37,716,o),
(60,716,qs),
(68,716,o),
(86,728,o),
(86,744,qs),
(86,752,o),
(75,757,o),
(75,762,qs),
(75,767,o),
(103,791,o),
(128,791,qs),
(148,791,o),
(168,769,o),
(168,755,qs),
(168,725,o),
(140,656,o),
(97,590,o),
(47,535,o),
(26,519,qs),
(18,513,o),
(18,509,qs),
(18,506,o),
(23,498,o),
(34,498,qs),
(49,498,o),
(59,505,o),
(61,507,q),
(86,506,o),
(112,505,qs),
(134,504,o),
(181,503,o),
(200,503,qs),
(205,503,o),
(210,510,o),
(212,512,q),
(219,525,o),
(235,551,o),
(235,559,qs),
(235,564,o),
(227,573,o),
(217,573,qs),
(210,573,o),
(193,564,o),
(187,553,qs),
(183,547,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
60 1 6 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 6 2 1 1 6 1 87 0 3 3 5 83 0 5 5 20 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 2 1 2 107 0 6 0 1 2 6 1 91 0 3 3 5 83 0 5 5 20 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 2 1 2 107 0 5 0 3 4 5 3 91 0 6 1 1 6 77 0 6 6 1 83 0 1 6 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
23 38 39 43 34 103 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 260;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(170,526,o),
(168,526,qs),
(79,529,l),
(97,545,o),
(142,596,o),
(182,656,o),
(210,722,o),
(210,754,qs),
(210,788,o),
(169,836,o),
(130,836,qs),
(106,836,o),
(68,816,o),
(42,789,o),
(29,759,o),
(29,750,qs),
(29,721,o),
(50,721,qs),
(52,721,o),
(70,728,o),
(70,744,qs),
(70,752,o),
(59,757,o),
(59,762,qs),
(59,766,o),
(67,782,o),
(83,797,o),
(108,808,o),
(126,808,qs),
(152,808,o),
(172,778,o),
(172,755,qs),
(172,725,o),
(144,656,o),
(101,590,o),
(51,535,o),
(30,519,qs),
(22,513,o),
(22,509,qs),
(22,501,o),
(35,501,qs),
(46,501,o),
(53,505,o),
(55,507,q),
(80,506,o),
(104,505,qs),
(124,504,o),
(168,503,o),
(184,503,qs),
(189,503,o),
(194,510,o),
(196,512,q),
(204,527,o),
(213,542,o),
(217,549,o),
(218,552,o),
(218,554,qs),
(218,556,o),
(214,563,o),
(206,563,qs),
(199,563,o),
(193,556,o),
(191,553,qs),
(180,535,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 6 2 1 1 6 1 87 0 3 3 5 83 0 5 5 20 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 5 0 3 4 5 3 91 0 6 1 1 6 79 0 6 6 1 83 2 1 1 6 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
39 37 41 42 34 105 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 247;
}
);
note = twosuperior;
unicode = 178;
},
{
glyphname = threesuperior;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(149,684,o),
(180,698,o),
(206,720,o),
(224,751,o),
(224,772,qs),
(224,793,o),
(207,819,o),
(181,832,o),
(151,836,o),
(138,836,qs),
(111,836,o),
(69,816,o),
(42,788,o),
(28,759,o),
(28,749,qs),
(28,740,o),
(40,729,o),
(49,729,qs),
(68,729,o),
(85,746,o),
(88,753,qs),
(94,767,o),
(116,794,o),
(132,794,qs),
(140,794,o),
(152,784,o),
(152,774,qs),
(152,757,o),
(134,730,o),
(107,707,o),
(74,686,o),
(60,676,qs),
(58,674,o),
(46,663,o),
(46,655,qs),
(46,639,o),
(55,627,o),
(60,627,qs),
(68,627,o),
(91,636,o),
(108,636,qs),
(128,636,o),
(156,622,o),
(156,605,qs),
(156,589,o),
(139,566,o),
(114,552,o),
(85,545,o),
(73,545,qs),
(68,545,o),
(65,552,o),
(61,560,o),
(53,567,o),
(44,567,qs),
(30,567,o),
(16,546,o),
(16,533,qs),
(16,495,o),
(77,495,qs),
(103,495,o),
(157,512,o),
(200,542,o),
(228,584,o),
(228,609,qs),
(228,642,o),
(183,678,o),
(153,678,qs),
(148,678,o),
(141,677,o),
(137,676,q),
(136,679,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
70 1 0 7 0 1 4 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 7 6 0 6 7 0 104 0 0 4 6 0 4 102 5 1 4 2 6 4 2 102 0 3 2 1 2 3 96 0 2 0 1 2 1 87 0 6 6 8 83 0 8 8 20 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 7 6 0 6 7 0 104 0 0 4 6 0 4 102 0 4 5 6 4 5 102 0 5 2 6 5 2 102 0 3 2 1 2 3 96 0 2 0 1 2 1 87 0 6 6 8 83 0 8 8 20 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 7 6 0 6 7 0 104 0 0 4 6 0 4 102 0 4 5 6 4 5 102 0 5 2 6 5 2 102 0 3 2 1 2 3 96 0 8 0 6 7 8 6 91 0 2 3 1 2 79 0 2 2 1 83 0 1 2 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 36 44 33 38 35 35 38 34 9 24
CALL[ ]	/* CallFunction */";
};
width = 253;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(49,663,o),
(49,655,qs),
(49,640,o),
(61,633,o),
(63,633,qs),
(68,633,o),
(94,642,o),
(111,642,qs),
(131,642,o),
(159,625,o),
(159,605,qs),
(159,587,o),
(142,561,o),
(117,544,o),
(88,536,o),
(76,536,qs),
(69,536,o),
(62,543,o),
(56,551,o),
(48,558,o),
(40,558,qs),
(29,558,o),
(19,538,o),
(19,527,qs),
(19,511,o),
(53,495,o),
(76,495,qs),
(100,495,o),
(151,513,o),
(191,544,o),
(217,586,o),
(217,609,qs),
(217,642,o),
(168,677,o),
(140,677,qs),
(136,677,o),
(129,676,o),
(126,676,qs),
(122,675,o),
(120,675,q),
(129,679,o),
(161,696,o),
(191,722,o),
(213,759,o),
(213,784,qs),
(213,802,o),
(195,822,o),
(169,833,o),
(141,836,o),
(132,836,qs),
(107,836,o),
(69,816,o),
(44,788,o),
(31,759,o),
(31,749,qs),
(31,741,o),
(43,731,o),
(48,731,qs),
(62,731,o),
(75,746,o),
(77,753,qs),
(86,775,o),
(112,800,o),
(125,800,qs),
(155,800,o),
(155,781,qs),
(155,760,o),
(137,730,o),
(110,706,o),
(77,686,o),
(63,676,qs),
(61,674,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 10 1 9 7 0 9 7 102 0 7 8 0 7 8 102 0 8 0 6 8 6 87 0 0 0 2 83 0 2 2 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 0 9 10 0 9 10 102 0 10 7 0 10 7 102 0 7 8 0 7 8 102 0 8 0 6 8 6 87 0 0 0 2 83 0 2 2 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 0 9 10 0 9 10 102 0 10 7 0 10 7 102 0 7 8 0 7 8 102 0 2 0 0 1 2 0 91 0 8 6 6 8 79 0 8 8 6 83 0 6 8 6 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
67 65 64 62 35 36 38 33 17 25 38 36 38 11 24
CALL[ ]	/* CallFunction */";
};
width = 245;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(53,663,o),
(53,655,qs),
(53,647,o),
(65,643,o),
(67,643,qs),
(72,643,o),
(98,652,o),
(115,652,qs),
(135,652,o),
(163,631,o),
(163,605,qs),
(163,585,o),
(146,554,o),
(121,532,o),
(92,521,o),
(80,521,qs),
(70,521,o),
(57,528,o),
(48,536,o),
(40,543,o),
(35,543,qs),
(27,543,o),
(23,532,o),
(23,527,qs),
(23,510,o),
(57,495,o),
(74,495,qs),
(96,495,o),
(141,515,o),
(178,548,o),
(201,589,o),
(201,609,qs),
(201,625,o),
(185,650,o),
(161,667,o),
(133,675,o),
(121,675,qs),
(117,675,o),
(110,674,o),
(107,674,qs),
(103,673,o),
(101,673,q),
(105,677,o),
(136,694,o),
(170,721,o),
(197,759,o),
(197,784,qs),
(197,802,o),
(183,822,o),
(164,833,o),
(143,836,o),
(136,836,qs),
(111,836,o),
(73,816,o),
(48,788,o),
(35,759,o),
(35,749,qs),
(35,734,o),
(46,734,qs),
(52,734,o),
(59,746,o),
(61,753,qs),
(70,779,o),
(102,810,o),
(129,810,qs),
(147,810,o),
(159,795,o),
(159,781,qs),
(159,760,o),
(141,730,o),
(114,706,o),
(81,686,o),
(67,676,qs),
(65,674,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 3 0 1 3 104 0 10 9 7 9 10 7 104 0 7 8 9 7 8 102 5 4 2 3 0 9 10 3 9 91 0 8 0 6 8 6 87 0 0 0 2 83 0 2 2 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 1 0 3 0 1 3 104 0 10 9 7 9 10 7 104 0 7 8 9 7 8 102 0 2 0 0 1 2 0 91 5 4 2 3 0 9 10 3 9 91 0 8 6 6 8 79 0 8 8 6 83 0 6 8 6 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
69 67 66 64 35 36 40 33 17 25 37 36 39 11 24
CALL[ ]	/* CallFunction */";
};
width = 233;
}
);
note = threesuperior;
unicode = 179;
},
{
glyphname = foursuperior;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(259,569,o),
(270,589,o),
(270,597,qs),
(270,625,o),
(242,625,qs),
(237,625,l),
(239,649,o),
(243,708,o),
(247,762,o),
(250,802,o),
(250,807,qs),
(250,824,o),
(227,840,o),
(213,840,qs),
(201,840,o),
(179,829,o),
(174,822,qs),
(160,804,o),
(140,779,o),
(124,757,o),
(107,734,o),
(82,702,o),
(48,655,o),
(22,620,qs),
(9,603,o),
(1,588,o),
(1,580,qs),
(1,571,o),
(17,567,o),
(34,567,qs),
(43,567,o),
(86,567,o),
(108,568,qs),
(124,569,o),
(149,569,o),
(165,569,q),
(164,558,ls),
(164,552,o),
(153,551,q),
(150,550,o),
(127,549,o),
(117,548,qs),
(107,547,o),
(89,539,o),
(89,528,qs),
(89,513,o),
(110,503,o),
(119,503,qs),
(228,503,ls),
(248,503,o),
(264,512,o),
(264,526,qs),
(264,542,o),
(244,551,o),
(236,551,qs),
(231,551,o),
(231,553,qs),
(231,554,o),
(232,563,o),
(233,569,q),
(243,569,ls)
);
},
{
closed = 1;
nodes = (
(98,627,qs),
(98,629,o),
(102,633,o),
(103,635,qs),
(178,743,l),
(169,626,l),
(147,624,o),
(107,623,o),
(104,623,qs),
(98,623,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
65 1 5 4 23 1 0 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
9 7 2 5 8 6 2 3 0 5 3 91 2 1 0 0 1 0 1 88 0 4 4 20 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 4 5 4 106 9 7 2 5 8 6 2 3 0 5 3 91 2 1 0 1 1 0 79 2 1 0 0 1 84 0 1 0 1 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
63 61 0 0 61 70 63 70 0 60 0 59 39 46 116 22 52 36 10 21
CALL[ ]	/* CallFunction */";
};
width = 295;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(249,581,o),
(259,598,o),
(259,603,qs),
(259,625,o),
(232,625,qs),
(219,625,l),
(220,649,o),
(225,712,o),
(229,769,o),
(232,809,o),
(232,811,qs),
(232,821,o),
(224,831,o),
(214,836,o),
(204,837,o),
(202,837,qs),
(192,837,o),
(172,825,o),
(170,822,qs),
(148,795,o),
(117,754,o),
(85,711,o),
(46,658,o),
(18,620,qs),
(9,608,o),
(4,596,o),
(4,591,qs),
(4,578,o),
(30,578,qs),
(39,578,o),
(82,579,o),
(104,580,qs),
(120,581,o),
(150,581,o),
(166,581,q),
(162,557,ls),
(160,549,o),
(150,544,o),
(142,542,qs),
(139,541,o),
(122,540,o),
(113,539,qs),
(105,539,o),
(92,530,o),
(92,522,qs),
(92,511,o),
(108,503,o),
(115,503,qs),
(224,503,ls),
(235,503,o),
(253,508,o),
(253,522,qs),
(253,537,o),
(230,542,o),
(224,542,qs),
(221,542,o),
(215,546,o),
(215,552,qs),
(215,554,o),
(217,573,o),
(219,581,q),
(235,581,ls)
);
},
{
closed = 1;
nodes = (
(80,627,qs),
(80,629,o),
(84,633,o),
(85,635,qs),
(175,758,l),
(165,626,l),
(138,624,o),
(89,623,o),
(86,623,qs),
(80,623,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
66 1 6 5 1 66 22 1 0 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
10 8 2 6 9 7 2 4 0 6 4 91 3 2 2 0 0 1 0 1 88 0 5 5 20 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 5 6 5 106 10 8 2 6 9 7 2 4 0 6 4 91 3 2 2 0 1 1 0 79 3 2 2 0 0 1 84 0 1 0 1 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
64 62 0 0 62 71 64 71 0 61 0 60 41 43 117 17 20 52 37 11 22
CALL[ ]	/* CallFunction */";
};
width = 283;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(237,601,o),
(243,611,o),
(243,613,qs),
(243,625,o),
(226,625,qs),
(193,625,l),
(194,649,o),
(198,712,o),
(203,769,o),
(206,809,o),
(206,811,qs),
(206,827,o),
(189,832,o),
(186,832,qs),
(179,832,o),
(166,824,o),
(164,822,qs),
(142,795,o),
(111,754,o),
(79,711,o),
(40,658,o),
(12,620,qs),
(9,616,o),
(8,611,o),
(8,609,qs),
(8,597,o),
(24,597,qs),
(33,597,o),
(76,599,o),
(98,600,qs),
(114,601,o),
(144,601,o),
(160,601,q),
(156,542,ls),
(156,534,o),
(145,528,o),
(136,527,q),
(133,526,o),
(116,525,o),
(107,524,qs),
(103,524,o),
(96,517,o),
(96,512,qs),
(96,507,o),
(105,503,o),
(109,503,qs),
(218,503,ls),
(226,503,o),
(237,506,o),
(237,515,qs),
(237,524,o),
(222,527,o),
(218,527,qs),
(209,527,o),
(189,529,o),
(189,537,qs),
(189,542,o),
(191,582,o),
(193,601,q),
(229,601,ls)
);
},
{
closed = 1;
nodes = (
(54,627,qs),
(54,629,o),
(58,633,o),
(59,635,q),
(171,783,l),
(159,626,l),
(124,624,o),
(64,623,o),
(60,623,qs),
(54,623,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
64 1 6 5 1 66 22 1 0 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
3 2 2 0 4 1 6 0 96 0 1 4 1 93 10 8 2 6 9 7 2 4 0 6 4 91 0 5 5 20 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
3 2 2 0 4 1 4 0 1 104 0 1 4 1 93 10 8 2 6 9 7 2 4 0 6 4 91 0 5 5 20 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
3 2 2 0 4 1 4 0 1 104 0 1 1 105 10 8 2 6 9 7 2 4 0 6 4 91 0 5 5 20 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 5 6 5 106 3 2 2 0 4 1 4 0 1 104 0 1 1 105 10 8 2 6 4 4 6 79 10 8 2 6 6 4 83 9 7 2 4 6 4 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
63 60 0 0 60 69 63 69 0 59 0 58 39 43 117 17 20 52 37 11 22
CALL[ ]	/* CallFunction */";
};
width = 266;
}
);
note = foursuperior;
unicode = 8308;
},
{
glyphname = fivesuperior;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(132,803,o),
(92,797,o),
(59,791,o),
(55,783,qs),
(54,781,o),
(49,748,o),
(43,705,o),
(37,664,o),
(36,655,qs),
(35,650,o),
(34,638,o),
(34,635,qs),
(34,606,o),
(45,606,qs),
(58,606,o),
(76,618,o),
(95,633,o),
(116,645,o),
(132,645,qs),
(159,645,o),
(178,620,o),
(178,606,qs),
(178,592,o),
(168,565,o),
(150,543,o),
(125,529,o),
(110,529,qs),
(92,529,o),
(79,543,o),
(79,551,qs),
(79,556,o),
(82,561,o),
(85,564,o),
(88,569,o),
(88,575,qs),
(88,592,o),
(60,592,qs),
(50,592,o),
(20,566,o),
(20,542,qs),
(20,533,o),
(27,514,o),
(44,497,o),
(75,487,o),
(99,487,qs),
(124,487,o),
(178,506,o),
(222,539,o),
(250,583,o),
(250,608,qs),
(250,653,o),
(200,703,o),
(155,703,qs),
(149,703,o),
(133,699,o),
(117,693,o),
(104,684,o),
(101,679,q),
(111,735,l),
(116,735,o),
(139,741,o),
(164,749,o),
(186,758,o),
(190,760,qs),
(199,765,o),
(217,780,o),
(232,797,o),
(242,814,o),
(242,821,qs),
(242,825,o),
(234,838,o),
(215,838,qs),
(204,838,o),
(190,829,o),
(188,827,qs),
(174,814,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 1 0 17 1 6 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 2 0 1 2 104 0 7 6 4 6 7 4 104 0 4 5 5 4 94 0 2 0 6 7 2 6 91 0 5 0 3 5 3 88 0 0 0 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 2 0 1 2 104 0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 2 0 6 7 2 6 91 0 5 0 3 5 3 88 0 0 0 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 0 1 0 106 0 1 2 1 106 0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 2 0 6 7 2 6 91 0 5 3 3 5 79 0 5 5 3 84 0 3 5 3 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
35 38 40 38 38 37 27 34 8 23
CALL[ ]	/* CallFunction */";
};
width = 272;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(133,803,o),
(93,797,o),
(60,791,o),
(56,783,qs),
(55,781,o),
(51,757,o),
(46,721,o),
(40,677,o),
(37,655,qs),
(36,650,o),
(35,638,o),
(35,635,qs),
(35,612,o),
(46,612,qs),
(56,612,o),
(74,624,o),
(94,639,o),
(117,651,o),
(133,651,qs),
(149,651,o),
(167,641,o),
(176,627,o),
(179,611,o),
(179,606,qs),
(179,591,o),
(169,562,o),
(148,538,o),
(114,523,o),
(90,523,qs),
(80,523,o),
(66,534,o),
(66,545,qs),
(66,550,o),
(70,555,o),
(76,558,o),
(80,563,o),
(80,569,qs),
(80,586,o),
(55,586,qs),
(45,586,o),
(21,563,o),
(21,542,qs),
(21,524,o),
(51,487,o),
(88,487,qs),
(116,487,o),
(170,506,o),
(212,539,o),
(237,583,o),
(237,608,qs),
(237,650,o),
(189,697,o),
(147,697,qs),
(131,697,o),
(98,683,o),
(88,673,q),
(101,747,l),
(106,748,o),
(132,754,o),
(160,761,o),
(185,770,o),
(190,773,qs),
(204,780,o),
(229,810,o),
(229,821,qs),
(229,825,o),
(223,836,o),
(209,836,qs),
(201,836,o),
(191,829,o),
(189,827,qs),
(175,814,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
67 1 1 0 15 1 5 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 6 5 3 5 6 3 104 0 3 4 4 3 94 0 1 0 5 6 1 5 91 0 4 0 2 4 2 88 0 0 0 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 6 5 3 5 6 3 104 0 3 4 5 3 4 102 0 1 0 5 6 1 5 91 0 4 0 2 4 2 88 0 0 0 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 0 1 0 106 0 6 5 3 5 6 3 104 0 3 4 5 3 4 102 0 1 0 5 6 1 5 91 0 4 2 2 4 79 0 4 4 2 84 0 2 4 2 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
35 40 40 36 38 45 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 261;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(135,803,o),
(95,797,o),
(62,791,o),
(58,783,qs),
(57,781,o),
(53,757,o),
(48,721,o),
(42,677,o),
(39,655,qs),
(38,650,o),
(37,638,o),
(37,635,qs),
(37,622,o),
(48,622,qs),
(54,622,o),
(71,634,o),
(93,649,o),
(119,661,o),
(135,661,qs),
(151,661,o),
(169,649,o),
(178,631,o),
(181,612,o),
(181,606,qs),
(181,589,o),
(171,556,o),
(150,530,o),
(116,513,o),
(92,513,qs),
(74,513,o),
(48,524,o),
(48,535,qs),
(48,540,o),
(54,545,o),
(62,548,o),
(68,553,o),
(68,559,qs),
(68,576,o),
(48,576,qs),
(38,576,o),
(23,559,o),
(23,542,qs),
(23,524,o),
(53,487,o),
(90,487,qs),
(114,487,o),
(161,506,o),
(197,539,o),
(219,583,o),
(219,608,qs),
(219,646,o),
(172,687,o),
(136,687,qs),
(113,687,o),
(84,673,o),
(70,663,q),
(87,767,l),
(94,769,o),
(124,775,o),
(157,782,o),
(186,790,o),
(192,793,qs),
(199,797,o),
(211,815,o),
(211,821,qs),
(211,825,o),
(206,833,o),
(201,833,qs),
(197,833,o),
(191,827,qs),
(177,814,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
66 1 1 0 14 1 5 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 6 5 3 5 6 3 104 0 3 4 4 3 94 0 1 0 5 6 1 5 91 0 4 0 2 4 2 88 0 0 0 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 6 5 3 5 6 3 104 0 3 4 5 3 4 102 0 1 0 5 6 1 5 91 0 4 0 2 4 2 88 0 0 0 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 0 1 0 106 0 6 5 3 5 6 3 104 0 3 4 5 3 4 102 0 1 0 5 6 1 5 91 0 4 2 2 4 79 0 4 4 2 84 0 2 4 2 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
35 40 40 36 38 45 33 7 22
CALL[ ]	/* CallFunction */";
};
width = 245;
}
);
note = fivesuperior;
unicode = 8309;
},
{
glyphname = sixsuperior;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(194,811,o),
(194,814,qs),
(194,825,o),
(168,833,o),
(160,833,qs),
(149,833,o),
(135,823,qs),
(119,811,o),
(79,765,o),
(45,706,o),
(21,639,o),
(21,607,qs),
(21,575,o),
(42,532,o),
(76,506,o),
(119,494,o),
(142,494,qs),
(163,494,o),
(201,506,o),
(230,529,o),
(247,562,o),
(247,583,qs),
(247,619,o),
(197,668,o),
(152,668,qs),
(135,668,o),
(109,659,o),
(101,654,qs),
(91,648,o),
(84,641,q),
(84,658,o),
(108,706,o),
(141,752,o),
(175,790,o),
(185,798,qs),
(191,803,o)
);
},
{
closed = 1;
nodes = (
(118,548,o),
(104,558,o),
(95,575,o),
(95,588,qs),
(95,602,o),
(111,632,o),
(135,632,qs),
(155,632,o),
(175,604,o),
(175,587,qs),
(175,575,o),
(166,558,o),
(154,548,o),
(140,544,o),
(136,544,qs),
(131,544,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
5 1 3 4 1 4 3 1 104 0 1 4 1 93 0 0 0 4 3 0 4 91 0 2 2 20 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
5 1 3 4 1 4 3 1 104 0 1 1 105 0 0 0 4 3 0 4 91 0 2 2 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 0 2 106 5 1 3 4 1 4 3 1 104 0 1 1 105 0 0 4 4 0 79 0 0 0 4 83 0 4 0 4 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
37 36 45 43 36 51 37 51 42 38 41 6 18
CALL[ ]	/* CallFunction */";
};
width = 255;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(188,816,qs),
(188,826,o),
(167,833,o),
(162,833,qs),
(152,833,o),
(138,823,qs),
(122,812,o),
(83,766,o),
(48,706,o),
(24,637,o),
(24,603,qs),
(24,573,o),
(43,531,o),
(72,506,o),
(108,494,o),
(125,494,qs),
(144,494,o),
(184,507,o),
(216,530,o),
(236,564,o),
(236,585,qs),
(236,619,o),
(184,668,o),
(141,668,qs),
(122,668,o),
(96,658,o),
(80,646,o),
(73,635,o),
(73,633,qs),
(73,652,o),
(97,702,o),
(129,750,o),
(163,789,o),
(174,798,qs),
(188,809,o)
);
},
{
closed = 1;
nodes = (
(84,556,o),
(84,582,qs),
(84,590,o),
(89,609,o),
(99,625,o),
(117,636,o),
(131,636,qs),
(153,636,o),
(178,607,o),
(178,585,qs),
(178,571,o),
(168,551,o),
(153,539,o),
(136,534,o),
(129,534,qs),
(115,534,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 0 0 4 3 0 4 91 5 1 3 0 1 3 1 87 0 2 2 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 0 2 106 0 0 0 4 3 0 4 91 5 1 3 1 1 3 79 5 1 3 3 1 83 0 1 3 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
36 35 44 42 35 50 36 50 42 38 41 6 18
CALL[ ]	/* CallFunction */";
};
width = 249;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(179,812,o),
(179,819,qs),
(179,828,o),
(167,833,o),
(165,833,qs),
(163,833,o),
(151,828,o),
(143,823,qs),
(128,812,o),
(88,768,o),
(53,707,o),
(29,635,o),
(29,597,qs),
(29,541,o),
(80,494,o),
(118,494,qs),
(161,494,o),
(221,545,o),
(221,588,qs),
(221,603,o),
(212,632,o),
(192,654,o),
(160,668,o),
(137,668,qs),
(114,668,o),
(84,656,o),
(66,640,o),
(59,625,o),
(58,622,q),
(59,645,o),
(82,699,o),
(114,748,o),
(148,788,o),
(159,798,qs),
(168,806,o)
);
},
{
closed = 1;
nodes = (
(69,545,o),
(69,572,qs),
(69,582,o),
(75,607,o),
(88,629,o),
(110,643,o),
(126,643,qs),
(149,643,o),
(183,611,o),
(183,582,qs),
(183,565,o),
(171,540,o),
(152,525,o),
(129,518,o),
(119,518,qs),
(99,518,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 0 0 4 3 0 4 91 5 1 3 0 1 3 1 87 0 2 2 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 0 2 106 0 0 0 4 3 0 4 91 5 1 3 1 1 3 79 5 1 3 3 1 83 0 1 3 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
36 35 44 42 35 50 36 50 41 38 41 6 18
CALL[ ]	/* CallFunction */";
};
width = 240;
}
);
note = sixsuperior;
unicode = 8310;
},
{
glyphname = sevensuperior;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(32,485,o),
(44,485,qs),
(69,485,o),
(79,501,q),
(226,782,ls),
(238,805,o),
(244,818,o),
(244,822,qs),
(244,824,o),
(238,827,o),
(227,827,qs),
(219,827,o),
(168,826,o),
(110,824,o),
(60,823,o),
(53,823,qs),
(42,823,o),
(25,807,o),
(25,793,qs),
(25,782,o),
(39,766,o),
(50,766,qs),
(66,766,o),
(84,767,o),
(98,767,o),
(115,768,o),
(130,768,qs),
(136,768,o),
(136,763,qs),
(136,760,o),
(118,721,o),
(91,666,o),
(59,603,o),
(32,548,o),
(14,509,o),
(14,506,qs),
(14,498,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
0 2 0 2 107 0 0 0 1 83 0 1 1 12 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 2 0 2 107 0 0 0 1 83 0 1 1 14 0 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
39 116 120 3 18
CALL[ ]	/* CallFunction */";
};
width = 238;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(31,487,o),
(40,487,qs),
(60,487,o),
(68,501,qs),
(221,791,ls),
(229,805,o),
(233,814,o),
(233,819,qs),
(233,827,o),
(216,827,qs),
(208,827,o),
(160,826,o),
(104,824,o),
(56,823,o),
(49,823,qs),
(38,823,o),
(25,810,o),
(25,799,qs),
(25,791,o),
(35,778,o),
(46,778,qs),
(63,778,o),
(87,779,o),
(107,779,o),
(129,780,o),
(145,780,qs),
(151,780,o),
(151,775,qs),
(151,771,o),
(131,731,o),
(101,673,o),
(67,607,o),
(37,549,o),
(17,509,o),
(17,506,qs),
(17,498,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
0 2 0 2 107 0 0 0 1 83 0 1 1 12 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 2 0 2 107 0 0 0 1 83 0 1 1 14 0 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
38 116 120 3 18
CALL[ ]	/* CallFunction */";
};
width = 231;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(35,491,qs),
(48,491,o),
(53,501,qs),
(215,806,l),
(218,810,o),
(218,814,qs),
(218,827,o),
(201,827,qs),
(194,827,o),
(148,826,o),
(96,824,o),
(51,823,o),
(44,823,qs),
(33,823,o),
(25,814,o),
(25,809,qs),
(25,807,o),
(30,798,o),
(41,798,qs),
(79,798,o),
(132,800,o),
(167,800,qs),
(173,800,o),
(173,795,qs),
(173,791,o),
(151,747,o),
(117,685,o),
(78,613,o),
(44,552,o),
(22,509,o),
(22,506,qs),
(22,491,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
0 2 0 2 107 0 0 0 1 83 0 1 1 12 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 2 0 2 107 0 0 0 1 83 0 1 1 14 0 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
37 116 88 3 18
CALL[ ]	/* CallFunction */";
};
width = 221;
}
);
note = sevensuperior;
unicode = 8311;
},
{
glyphname = eightsuperior;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(86,496,o),
(140,496,qs),
(197,496,o),
(257,546,o),
(257,583,qs),
(257,615,o),
(222,663,o),
(185,669,q),
(194,670,o),
(217,681,o),
(238,702,o),
(252,733,o),
(252,753,qs),
(252,767,o),
(238,796,o),
(211,820,o),
(170,835,o),
(144,835,qs),
(89,835,o),
(34,783,o),
(34,749,qs),
(34,717,o),
(71,672,o),
(92,669,q),
(67,665,o),
(24,617,o),
(24,579,qs),
(24,537,o)
);
},
{
closed = 1;
nodes = (
(105,619,o),
(119,629,o),
(135,633,o),
(141,633,qs),
(168,633,o),
(186,604,o),
(186,587,qs),
(186,575,o),
(165,550,o),
(141,550,qs),
(124,550,o),
(95,566,o),
(95,587,qs),
(95,601,o)
);
},
{
closed = 1;
nodes = (
(131,777,o),
(143,777,qs),
(155,777,o),
(181,763,o),
(181,737,qs),
(181,727,o),
(162,706,o),
(142,706,qs),
(131,706,o),
(104,720,o),
(104,741,qs),
(104,764,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
19 3 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 3 2 4 3 91 0 2 0 1 2 1 87 0 5 5 0 83 0 0 0 20 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 1 1 2 79 0 2 2 1 83 0 1 2 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 38 36 36 46 40 6 21
CALL[ ]	/* CallFunction */";
};
width = 282;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(93,496,o),
(139,496,qs),
(190,496,o),
(246,549,o),
(246,583,qs),
(246,615,o),
(206,663,o),
(174,669,q),
(183,670,o),
(206,684,o),
(227,706,o),
(241,735,o),
(241,753,qs),
(241,767,o),
(227,796,o),
(201,820,o),
(163,835,o),
(138,835,qs),
(88,835,o),
(37,783,o),
(37,749,qs),
(37,734,o),
(47,707,o),
(64,686,o),
(84,671,o),
(95,669,q),
(84,666,o),
(60,652,o),
(40,629,o),
(27,598,o),
(27,579,qs),
(27,537,o)
);
},
{
closed = 1;
nodes = (
(120,639,o),
(137,639,qs),
(162,639,o),
(189,608,o),
(189,586,qs),
(189,567,o),
(161,539,o),
(137,539,qs),
(115,539,o),
(84,563,o),
(84,586,qs),
(84,614,o)
);
},
{
closed = 1;
nodes = (
(121,789,o),
(140,789,qs),
(156,789,o),
(184,769,o),
(184,743,qs),
(184,728,o),
(160,700,o),
(138,700,qs),
(133,700,o),
(117,704,o),
(103,713,o),
(93,730,o),
(93,743,qs),
(93,766,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
23 5 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 3 2 4 3 91 0 2 0 1 2 1 87 0 5 5 0 83 0 0 0 20 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 1 1 2 79 0 2 2 1 83 0 1 2 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 38 36 36 46 44 6 21
CALL[ ]	/* CallFunction */";
};
width = 274;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(49,527,o),
(77,506,o),
(112,496,o),
(129,496,qs),
(150,496,o),
(187,511,o),
(214,535,o),
(230,566,o),
(230,583,qs),
(230,599,o),
(217,627,o),
(196,650,o),
(170,666,o),
(158,669,q),
(167,672,o),
(190,685,o),
(211,707,o),
(225,735,o),
(225,753,qs),
(225,767,o),
(214,796,o),
(193,820,o),
(159,835,o),
(137,835,qs),
(94,835,o),
(41,783,o),
(41,749,qs),
(41,720,o),
(78,677,o),
(99,669,q),
(90,665,o),
(66,651,o),
(45,628,o),
(31,598,o),
(31,579,qs),
(31,558,o)
);
},
{
closed = 1;
nodes = (
(109,649,o),
(131,649,qs),
(153,649,o),
(193,615,o),
(193,585,qs),
(193,555,o),
(153,520,o),
(128,520,qs),
(100,520,o),
(68,559,o),
(68,584,qs),
(68,614,o)
);
},
{
closed = 1;
nodes = (
(104,809,o),
(136,809,qs),
(152,809,o),
(172,798,o),
(184,781,o),
(188,761,o),
(188,753,qs),
(188,724,o),
(153,690,o),
(132,690,qs),
(113,690,o),
(77,718,o),
(77,747,qs),
(77,769,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
21 5 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 3 2 4 3 91 0 2 0 1 2 1 87 0 5 5 0 83 0 0 0 20 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 1 1 2 79 0 2 2 1 83 0 1 2 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
60 58 52 50 46 44 40 38 32 30 42 6 16
CALL[ ]	/* CallFunction */";
};
width = 262;
}
);
note = eightsuperior;
unicode = 8312;
},
{
glyphname = ninesuperior;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(62,518,o),
(62,511,qs),
(62,501,o),
(82,492,o),
(94,492,qs),
(103,492,o),
(114,497,o),
(122,502,qs),
(138,514,o),
(177,558,o),
(211,617,o),
(234,689,o),
(234,728,qs),
(234,780,o),
(179,834,o),
(128,834,qs),
(106,834,o),
(65,824,o),
(34,802,o),
(15,766,o),
(15,739,qs),
(15,699,o),
(64,641,o),
(109,641,qs),
(126,641,o),
(151,653,o),
(167,669,o),
(175,684,o),
(176,687,q),
(173,655,o),
(118,576,o),
(75,535,qs),
(66,526,o)
);
},
{
closed = 1;
nodes = (
(166,765,o),
(166,740,qs),
(166,726,o),
(147,698,o),
(124,698,qs),
(100,698,o),
(80,724,o),
(80,741,qs),
(80,767,o),
(108,784,o),
(120,784,qs),
(142,784,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
3 1 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 107 0 4 0 0 2 4 0 91 5 1 3 3 1 83 0 1 1 20 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 2 0 2 107 0 1 5 1 3 4 1 3 91 0 4 0 0 4 79 0 4 4 0 83 0 0 4 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
34 33 40 38 33 44 34 44 41 38 39 6 18
CALL[ ]	/* CallFunction */";
};
width = 257;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(62,518,o),
(62,511,qs),
(62,503,o),
(79,494,o),
(87,494,qs),
(98,494,o),
(112,504,qs),
(128,515,o),
(167,560,o),
(201,620,o),
(225,691,o),
(225,730,qs),
(225,784,o),
(177,835,o),
(132,835,qs),
(110,835,o),
(69,824,o),
(37,800,o),
(17,763,o),
(17,738,qs),
(17,702,o),
(61,647,o),
(107,647,qs),
(134,647,o),
(172,670,o),
(177,694,q),
(177,674,o),
(155,627,o),
(123,582,o),
(90,544,o),
(78,534,qs),
(73,529,o)
);
},
{
closed = 1;
nodes = (
(170,775,o),
(170,745,qs),
(170,725,o),
(146,691,o),
(119,691,qs),
(95,691,o),
(70,720,o),
(70,742,qs),
(70,771,o),
(103,795,o),
(121,795,qs),
(139,795,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 4 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 107 0 4 0 0 2 4 0 91 5 1 3 3 1 83 0 1 1 20 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 2 0 2 107 0 1 5 1 3 4 1 3 91 0 4 0 0 4 79 0 4 4 0 83 0 0 4 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
33 32 39 37 32 43 33 43 40 38 39 6 18
CALL[ ]	/* CallFunction */";
};
width = 250;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(61,518,o),
(61,511,qs),
(61,502,o),
(73,497,o),
(75,497,qs),
(77,497,o),
(89,502,o),
(97,507,qs),
(112,517,o),
(152,562,o),
(187,623,o),
(211,695,o),
(211,733,qs),
(211,789,o),
(160,836,o),
(122,836,qs),
(79,836,o),
(19,780,o),
(19,737,qs),
(19,722,o),
(28,693,o),
(48,671,o),
(80,657,o),
(103,657,qs),
(125,657,o),
(154,669,o),
(170,684,o),
(176,699,o),
(177,702,q),
(176,679,o),
(154,627,o),
(124,580,o),
(92,542,o),
(81,532,qs),
(72,524,o)
);
},
{
closed = 1;
nodes = (
(174,785,o),
(174,758,qs),
(174,747,o),
(166,720,o),
(150,696,o),
(126,680,o),
(110,680,qs),
(87,680,o),
(54,714,o),
(54,743,qs),
(54,760,o),
(67,786,o),
(87,804,o),
(111,813,o),
(121,813,qs),
(141,813,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 4 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 107 0 4 0 0 2 4 0 91 5 1 3 3 1 83 0 1 1 20 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 2 0 2 107 0 1 5 1 3 4 1 3 91 0 4 0 0 4 79 0 4 4 0 83 0 0 4 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
36 35 44 42 35 50 36 50 41 38 41 6 18
CALL[ ]	/* CallFunction */";
};
width = 240;
}
);
note = ninesuperior;
unicode = 8313;
},
{
glyphname = space;
kernLeft = space;
kernRight = space;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
width = 212;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
width = 218;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
width = 226;
}
);
note = space;
unicode = 32;
},
{
glyphname = uni00A0;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
width = 212;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
width = 218;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
width = 226;
}
);
note = uni00A0;
unicode = 160;
},
{
glyphname = CR;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
width = 338;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
width = 338;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
width = 338;
}
);
note = CR;
},
{
glyphname = NULL;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
width = 0;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
width = 0;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
width = 0;
}
);
note = NULL;
},
{
glyphname = .notdef;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(509,817,o),
(418,818,o),
(331,818,o),
(304,818,qs),
(291,818,o),
(240,818,o),
(183,817,o),
(129,816,o),
(113,815,qs),
(91,814,o),
(91,780,qs),
(91,688,o),
(92,507,o),
(92,324,o),
(93,136,o),
(93,37,qs),
(93,16,o),
(103,2,o),
(112,2,qs),
(609,2,ls),
(618,2,o),
(628,16,o),
(628,37,qs),
(628,136,o),
(628,324,o),
(629,507,o),
(630,688,o),
(631,780,qs),
(631,792,o),
(623,814,o),
(610,815,qs),
(590,816,o)
);
},
{
closed = 1;
nodes = (
(181,72,o),
(173,79,o),
(173,90,qs),
(173,708,ls),
(173,728,o),
(184,741,o),
(201,741,qs),
(519,741,ls),
(536,741,o),
(548,726,o),
(548,714,qs),
(548,93,ls),
(548,72,o),
(529,72,qs),
(192,72,ls)
);
},
{
closed = 1;
nodes = (
(456,254,o),
(416,300,q),
(426,314,o),
(443,336,o),
(458,357,o),
(475,380,o),
(487,394,qs),
(493,401,o),
(493,409,qs),
(493,413,o),
(483,426,o),
(471,440,o),
(459,450,o),
(456,450,qs),
(448,450,o),
(424,429,o),
(401,397,qs),
(371,355,l),
(339,397,o),
(306,440,o),
(302,445,qs),
(285,465,o),
(263,496,o),
(251,496,qs),
(248,496,o),
(236,484,o),
(223,469,o),
(214,455,o),
(214,452,qs),
(214,448,o),
(226,430,o),
(253,395,o),
(296,338,o),
(328,296,q),
(319,284,o),
(312,276,o),
(300,262,o),
(276,234,o),
(251,203,qs),
(243,192,o),
(225,174,o),
(225,165,qs),
(225,162,o),
(233,149,o),
(245,136,o),
(257,126,o),
(260,126,qs),
(269,126,o),
(320,183,o),
(374,240,q),
(395,217,o),
(420,185,o),
(436,163,o),
(444,153,o),
(448,153,qs),
(453,153,o),
(467,165,o),
(480,181,o),
(489,198,o),
(489,204,qs),
(489,210,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
82 59 37 32 25 10 3 40
CALL[ ]	/* CallFunction */";
};
width = 670;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(495,817,o),
(410,818,o),
(329,818,o),
(304,818,qs),
(291,818,o),
(240,818,o),
(183,817,o),
(129,816,o),
(113,815,qs),
(98,814,o),
(90,792,o),
(90,780,qs),
(91,688,o),
(92,507,o),
(93,324,o),
(93,136,o),
(93,37,qs),
(93,16,o),
(103,2,o),
(112,2,qs),
(588,2,ls),
(597,2,o),
(607,16,o),
(607,37,qs),
(607,136,o),
(607,324,o),
(608,507,o),
(609,688,o),
(610,780,qs),
(610,792,o),
(602,814,o),
(589,815,qs),
(570,816,o)
);
},
{
closed = 1;
nodes = (
(160,54,o),
(152,61,o),
(152,72,qs),
(152,726,ls),
(152,746,o),
(159,759,o),
(180,759,qs),
(519,759,ls),
(536,759,o),
(548,746,o),
(548,732,qs),
(548,75,ls),
(548,54,o),
(529,54,qs),
(171,54,ls)
);
},
{
closed = 1;
nodes = (
(432,253,o),
(392,299,q),
(413,328,o),
(447,374,o),
(471,403,qs),
(477,410,o),
(477,418,qs),
(477,422,o),
(470,433,o),
(461,443,o),
(452,450,o),
(449,450,qs),
(438,450,o),
(414,425,o),
(394,397,qs),
(356,345,l),
(324,387,o),
(291,430,o),
(287,435,qs),
(271,455,o),
(248,486,o),
(236,486,qs),
(233,486,o),
(223,478,o),
(214,466,o),
(207,455,o),
(207,452,qs),
(207,448,o),
(219,430,o),
(246,395,o),
(289,338,o),
(321,296,q),
(312,284,o),
(305,276,o),
(293,262,o),
(269,234,o),
(244,203,qs),
(236,192,o),
(218,174,o),
(218,165,qs),
(218,158,o),
(237,135,o),
(244,135,qs),
(251,135,o),
(275,155,o),
(304,188,o),
(339,229,o),
(358,249,q),
(400,204,o),
(433,153,o),
(441,153,qs),
(446,153,o),
(457,162,o),
(467,174,o),
(474,188,o),
(474,194,qs),
(474,200,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
81 60 38 33 26 10 3 40
CALL[ ]	/* CallFunction */";
};
width = 670;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(475,817,o),
(399,818,o),
(326,818,o),
(304,818,qs),
(291,818,o),
(240,818,o),
(183,817,o),
(129,816,o),
(113,815,qs),
(98,814,o),
(90,792,o),
(90,780,qs),
(91,688,o),
(92,507,o),
(93,324,o),
(93,136,o),
(93,37,qs),
(93,16,o),
(103,2,o),
(112,2,qs),
(558,2,ls),
(567,2,o),
(577,16,o),
(577,37,qs),
(577,136,o),
(577,324,o),
(578,507,o),
(579,688,o),
(580,780,qs),
(580,792,o),
(572,814,o),
(559,815,qs),
(542,816,o)
);
},
{
closed = 1;
nodes = (
(130,24,o),
(122,31,o),
(122,42,qs),
(122,756,ls),
(122,776,o),
(133,789,o),
(150,789,qs),
(519,789,ls),
(536,789,o),
(548,779,o),
(548,762,qs),
(548,45,ls),
(548,24,o),
(529,24,qs),
(141,24,ls)
);
},
{
closed = 1;
nodes = (
(438,201,o),
(413,233,o),
(378,274,o),
(358,297,q),
(379,326,o),
(424,389,o),
(448,418,qs),
(454,425,o),
(454,433,qs),
(454,441,o),
(444,450,o),
(439,450,qs),
(428,450,o),
(404,425,o),
(384,397,qs),
(335,328,l),
(303,370,o),
(270,413,o),
(266,418,qs),
(251,438,o),
(227,469,o),
(215,469,qs),
(209,469,o),
(197,458,o),
(197,452,qs),
(197,448,o),
(209,430,o),
(236,395,o),
(279,338,o),
(311,296,q),
(302,284,o),
(295,276,o),
(283,262,o),
(259,234,o),
(234,203,qs),
(226,192,o),
(208,174,o),
(208,165,qs),
(208,150,o),
(221,150,qs),
(233,150,o),
(265,181,o),
(298,220,o),
(327,258,o),
(335,264,q),
(356,241,o),
(388,201,o),
(412,171,o),
(427,153,o),
(431,153,qs),
(453,153,o),
(453,177,qs),
(453,180,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
77 59 38 33 26 10 3 40
CALL[ ]	/* CallFunction */";
};
width = 670;
}
);
note = .notdef;
},
{
glyphname = period;
kernLeft = comma;
kernRight = comma;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(71,-28,o),
(108,-28,qs),
(143,-28,o),
(178,11,o),
(178,36,qs),
(178,58,o),
(145,98,o),
(110,98,qs),
(91,98,o),
(64,86,o),
(48,67,o),
(40,44,o),
(40,34,qs),
(40,13,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
36 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 218;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(72,-19,o),
(103,-19,qs),
(132,-19,o),
(163,15,o),
(163,36,qs),
(163,55,o),
(135,89,o),
(105,89,qs),
(89,89,o),
(66,78,o),
(52,62,o),
(46,43,o),
(46,34,qs),
(46,16,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
0 0 0 1 83 0 1 1 21 1 68 36 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 209;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(73,-4,o),
(96,-4,qs),
(118,-4,o),
(141,21,o),
(141,36,qs),
(141,50,o),
(121,74,o),
(98,74,qs),
(74,74,o),
(54,47,o),
(54,34,qs),
(54,21,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
0 0 0 1 83 0 1 1 16 1 68 36 34 2 17
CALL[ ]	/* CallFunction */";
};
width = 196;
}
);
note = period;
unicode = 46;
},
{
glyphname = comma;
kernLeft = comma;
kernRight = comma;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(53,11,o),
(67,1,o),
(78,-8,o),
(78,-14,qs),
(78,-44,o),
(63,-73,o),
(63,-83,qs),
(63,-100,o),
(84,-106,o),
(89,-106,qs),
(95,-106,o),
(122,-91,o),
(149,-62,o),
(170,-17,o),
(170,13,qs),
(170,56,o),
(126,94,o),
(102,94,qs),
(69,94,o),
(42,57,o),
(42,36,qs),
(42,24,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 38 34 2 17
CALL[ ]	/* CallFunction */";
};
width = 213;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(57,11,o),
(71,2,o),
(82,-6,o),
(82,-12,qs),
(82,-38,o),
(69,-63,o),
(69,-72,qs),
(69,-85,o),
(85,-91,o),
(90,-91,qs),
(98,-91,o),
(120,-75,o),
(141,-48,o),
(155,-10,o),
(155,13,qs),
(155,53,o),
(118,85,o),
(98,85,qs),
(70,85,o),
(46,54,o),
(46,36,qs),
(46,24,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 38 34 2 17
CALL[ ]	/* CallFunction */";
};
width = 202;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(63,12,o),
(77,5,o),
(88,-2,o),
(88,-8,qs),
(88,-18,o),
(77,-47,o),
(77,-54,qs),
(77,-59,o),
(86,-66,o),
(91,-66,qs),
(101,-66,o),
(118,-49,o),
(128,-24,o),
(134,3,o),
(134,13,qs),
(134,47,o),
(107,70,o),
(92,70,qs),
(72,70,o),
(52,49,o),
(52,36,qs),
(52,24,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 38 34 2 17
CALL[ ]	/* CallFunction */";
};
width = 187;
}
);
note = comma;
unicode = 44;
},
{
glyphname = colon;
kernLeft = colon;
kernRight = colon;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(86,-27,o),
(123,-27,qs),
(158,-27,o),
(193,12,o),
(193,37,qs),
(193,59,o),
(160,99,o),
(125,99,qs),
(106,99,o),
(79,87,o),
(63,68,o),
(55,45,o),
(55,35,qs),
(55,14,o)
);
},
{
closed = 1;
nodes = (
(86,277,o),
(123,277,qs),
(158,277,o),
(193,316,o),
(193,341,qs),
(193,363,o),
(160,403,o),
(125,403,qs),
(106,403,o),
(79,390,o),
(63,371,o),
(55,349,o),
(55,339,qs),
(55,317,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 2 0 3 0 2 3 91 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 3 0 2 3 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
36 38 36 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 248;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (58,0);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (12,1);
ref = period;
},
{
alignment = -1;
pos = (12,304);
ref = period;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
0 2 0 3 0 2 3 91 0 0 0 1 83 0 1 1 21 1 68 36 38 36 37 4 30
CALL[ ]	/* CallFunction */";
};
width = 233;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(81,-3,o),
(104,-3,qs),
(126,-3,o),
(149,22,o),
(149,37,qs),
(149,51,o),
(129,75,o),
(106,75,qs),
(82,75,o),
(62,48,o),
(62,35,qs),
(62,22,o)
);
},
{
closed = 1;
nodes = (
(81,299,o),
(104,299,qs),
(126,299,o),
(149,324,o),
(149,339,qs),
(149,353,o),
(129,377,o),
(106,377,qs),
(82,377,o),
(62,350,o),
(62,337,qs),
(62,324,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
0 2 0 3 0 2 3 91 0 0 0 1 83 0 1 1 16 1 68 36 36 36 34 4 19
CALL[ ]	/* CallFunction */";
};
width = 211;
}
);
note = colon;
unicode = 58;
},
{
glyphname = semicolon;
kernLeft = colon;
kernRight = colon;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(84,277,o),
(121,277,qs),
(156,277,o),
(192,316,o),
(192,341,qs),
(192,363,o),
(158,403,o),
(123,403,qs),
(104,403,o),
(78,390,o),
(61,371,o),
(54,349,o),
(54,339,qs),
(54,317,o)
);
},
{
closed = 1;
nodes = (
(70,11,o),
(84,1,o),
(95,-8,o),
(95,-14,qs),
(95,-44,o),
(80,-73,o),
(80,-83,qs),
(80,-100,o),
(101,-106,o),
(106,-106,qs),
(112,-106,o),
(139,-91,o),
(166,-62,o),
(187,-17,o),
(187,13,qs),
(187,56,o),
(143,94,o),
(119,94,qs),
(86,94,o),
(59,57,o),
(59,36,qs),
(59,24,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 0 0 1 2 0 1 91 0 2 3 3 2 79 0 2 2 3 83 0 3 2 3 71 38 36 36 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 246;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(71,11,o),
(85,2,o),
(96,-6,o),
(96,-12,qs),
(96,-38,o),
(83,-63,o),
(83,-72,qs),
(83,-85,o),
(99,-91,o),
(104,-91,qs),
(112,-91,o),
(134,-75,o),
(155,-48,o),
(169,-10,o),
(169,13,qs),
(169,53,o),
(132,85,o),
(112,85,qs),
(84,85,o),
(60,54,o),
(60,36,qs),
(60,24,o)
);
},
{
closed = 1;
nodes = (
(81,285,o),
(112,285,qs),
(141,285,o),
(172,319,o),
(172,340,qs),
(172,359,o),
(144,393,o),
(114,393,qs),
(98,393,o),
(75,382,o),
(61,366,o),
(55,347,o),
(55,338,qs),
(55,320,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 2 0 3 0 2 3 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 36 46 38 34 4 19
CALL[ ]	/* CallFunction */";
};
width = 228;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(76,299,o),
(99,299,qs),
(121,299,o),
(144,324,o),
(144,339,qs),
(144,353,o),
(124,377,o),
(101,377,qs),
(77,377,o),
(57,350,o),
(57,337,qs),
(57,324,o)
);
},
{
closed = 1;
nodes = (
(73,11,o),
(87,2,o),
(98,-6,o),
(98,-12,qs),
(98,-22,o),
(87,-47,o),
(87,-54,qs),
(87,-59,o),
(96,-66,o),
(101,-66,qs),
(111,-66,o),
(128,-49,o),
(138,-24,o),
(144,3,o),
(144,13,qs),
(144,47,o),
(117,70,o),
(102,70,qs),
(82,70,o),
(62,49,o),
(62,36,qs),
(62,24,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 0 0 1 2 0 1 91 0 2 3 3 2 79 0 2 2 3 83 0 3 2 3 71 38 36 36 34 4 19
CALL[ ]	/* CallFunction */";
};
width = 203;
}
);
note = semicolon;
unicode = 59;
},
{
glyphname = ellipsis;
kernLeft = comma;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(71,-28,o),
(108,-28,qs),
(143,-28,o),
(178,11,o),
(178,36,qs),
(178,58,o),
(145,98,o),
(110,98,qs),
(91,98,o),
(64,86,o),
(48,67,o),
(40,44,o),
(40,34,qs),
(40,13,o)
);
},
{
closed = 1;
nodes = (
(249,-28,o),
(285,-28,qs),
(320,-28,o),
(356,11,o),
(356,36,qs),
(356,58,o),
(322,98,o),
(287,98,qs),
(268,98,o),
(242,86,o),
(225,67,o),
(218,44,o),
(218,34,qs),
(218,13,o)
);
},
{
closed = 1;
nodes = (
(419,-28,o),
(456,-28,qs),
(491,-28,o),
(526,11,o),
(526,36,qs),
(526,58,o),
(493,98,o),
(458,98,qs),
(439,98,o),
(412,86,o),
(396,67,o),
(388,44,o),
(388,34,qs),
(388,13,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
4 2 2 0 0 1 83 5 3 2 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
4 2 2 0 1 1 0 79 4 2 2 0 0 1 83 5 3 2 1 0 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 38 36 38 36 36 6 21
CALL[ ]	/* CallFunction */";
};
width = 566;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (46,0);
ref = .ttfautohint;
},
{
alignment = -1;
ref = period;
},
{
alignment = -1;
pos = (176,0);
ref = period;
},
{
alignment = -1;
pos = (348,0);
ref = period;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
4 2 2 0 0 1 83 5 3 2 1 1 21 1 68 36 38 36 38 36 37 6 32
CALL[ ]	/* CallFunction */";
};
width = 557;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(73,-4,o),
(96,-4,qs),
(118,-4,o),
(141,21,o),
(141,36,qs),
(141,50,o),
(121,74,o),
(98,74,qs),
(74,74,o),
(54,47,o),
(54,34,qs),
(54,21,o)
);
},
{
closed = 1;
nodes = (
(247,-4,o),
(270,-4,qs),
(292,-4,o),
(315,21,o),
(315,36,qs),
(315,50,o),
(295,74,o),
(272,74,qs),
(248,74,o),
(228,47,o),
(228,34,qs),
(228,21,o)
);
},
{
closed = 1;
nodes = (
(421,-4,o),
(444,-4,qs),
(466,-4,o),
(489,21,o),
(489,36,qs),
(489,50,o),
(469,74,o),
(446,74,qs),
(422,74,o),
(402,47,o),
(402,34,qs),
(402,21,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
4 2 2 0 0 1 83 5 3 2 1 1 16 1 68 36 36 36 36 36 34 6 21
CALL[ ]	/* CallFunction */";
};
width = 544;
}
);
note = ellipsis;
unicode = 8230;
},
{
glyphname = exclam;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(98,117,o),
(107,108,o),
(122,101,o),
(134,101,qs),
(161,101,o),
(176,130,o),
(176,172,qs),
(176,795,ls),
(176,813,o),
(164,832,o),
(148,841,o),
(132,842,o),
(129,842,qs),
(115,842,o),
(85,824,o),
(85,795,qs),
(85,787,o),
(85,722,o),
(86,627,o),
(87,510,o),
(88,390,o),
(90,276,o),
(91,186,o),
(93,130,o),
(94,127,qs),
(94,126,o)
);
},
{
closed = 1;
nodes = (
(203,35,o),
(185,54,o),
(156,66,o),
(136,66,qs),
(113,66,o),
(85,51,o),
(68,30,o),
(62,7,o),
(62,-1,qs),
(62,-10,o),
(68,-33,o),
(85,-52,o),
(113,-66,o),
(134,-66,qs),
(155,-66,o),
(184,-53,o),
(203,-34,o),
(211,-10,o),
(211,2,qs),
(211,12,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 3 0 2 3 2 87 0 1 1 0 83 0 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 0 0 1 3 0 1 91 0 3 2 2 3 79 0 3 3 2 83 0 2 3 2 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
40 40 38 59 4 19
CALL[ ]	/* CallFunction */";
};
width = 265;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(114,101,o),
(125,101,qs),
(145,101,o),
(156,137,o),
(156,172,qs),
(156,795,ls),
(156,810,o),
(148,827,o),
(136,835,o),
(124,836,o),
(120,836,qs),
(107,836,o),
(86,821,o),
(86,795,qs),
(86,760,o),
(86,638,o),
(87,495,o),
(88,345,o),
(90,220,o),
(94,134,o),
(96,127,qs),
(99,110,o)
);
},
{
closed = 1;
nodes = (
(95,-46,o),
(126,-46,qs),
(155,-46,o),
(186,-12,o),
(186,9,qs),
(186,28,o),
(158,62,o),
(128,62,qs),
(112,62,o),
(89,51,o),
(75,35,o),
(69,16,o),
(69,7,qs),
(69,-11,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 2 0 3 2 3 87 0 1 1 0 83 0 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 0 0 1 2 0 1 91 0 2 3 3 2 79 0 2 2 3 83 0 3 2 3 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
36 38 39 41 4 19
CALL[ ]	/* CallFunction */";
};
width = 247;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(107,101,o),
(112,101,qs),
(123,101,o),
(128,137,o),
(128,172,qs),
(128,795,ls),
(128,818,o),
(116,826,o),
(107,826,qs),
(95,826,o),
(88,815,o),
(88,795,qs),
(88,760,o),
(89,638,o),
(91,495,o),
(93,345,o),
(95,220,o),
(97,134,o),
(98,127,qs),
(100,110,o)
);
},
{
closed = 1;
nodes = (
(131,56,o),
(117,56,qs),
(103,56,o),
(79,40,o),
(79,21,qs),
(79,3,o),
(101,-13,o),
(114,-13,qs),
(126,-13,o),
(150,3,o),
(150,20,qs),
(150,35,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 3 0 1 3 104 0 0 0 12 67 0 3 3 2 84 0 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 3 0 1 3 104 0 0 0 14 67 0 3 3 2 84 0 2 2 21 2 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
36 36 37 41 4 19
CALL[ ]	/* CallFunction */";
};
width = 222;
}
);
note = exclam;
unicode = 33;
},
{
glyphname = exclamdown;
kernRight = exclamdown;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(201,658,o),
(183,677,o),
(154,690,o),
(133,690,qs),
(111,690,o),
(83,676,o),
(66,657,o),
(60,634,o),
(60,625,qs),
(60,617,o),
(66,594,o),
(83,573,o),
(111,558,o),
(134,558,qs),
(155,558,o),
(184,570,o),
(202,589,o),
(210,611,o),
(210,622,qs),
(210,634,o)
);
},
{
closed = 1;
nodes = (
(88,437,o),
(87,347,o),
(85,233,o),
(84,113,o),
(83,-4,o),
(82,-99,o),
(82,-164,o),
(82,-172,qs),
(82,-201,o),
(112,-219,o),
(126,-219,qs),
(129,-219,o),
(145,-218,o),
(161,-209,o),
(173,-190,o),
(173,-172,qs),
(173,451,ls),
(173,493,o),
(158,522,o),
(131,522,qs),
(119,522,o),
(104,515,o),
(95,506,o),
(91,497,o),
(91,496,qs),
(90,493,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 3 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 1 0 0 2 1 0 91 0 2 2 3 83 0 3 3 17 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 0 2 1 0 91 0 2 3 3 2 79 0 2 2 3 83 0 3 2 3 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
54 40 40 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 262;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(89,403,o),
(87,278,o),
(86,128,o),
(85,-15,o),
(85,-137,o),
(85,-172,qs),
(85,-198,o),
(106,-213,o),
(119,-213,qs),
(123,-213,o),
(135,-212,o),
(147,-204,o),
(155,-187,o),
(155,-172,qs),
(155,451,ls),
(155,486,o),
(144,522,o),
(124,522,qs),
(113,522,o),
(98,513,o),
(95,496,q),
(92,489,o)
);
},
{
closed = 1;
nodes = (
(74,598,o),
(88,582,o),
(111,571,o),
(127,571,qs),
(157,571,o),
(185,605,o),
(185,624,qs),
(185,645,o),
(154,679,o),
(125,679,qs),
(94,679,o),
(68,644,o),
(68,626,qs),
(68,617,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 2 0 3 0 2 3 91 0 0 0 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 3 0 2 3 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
36 43 39 34 4 19
CALL[ ]	/* CallFunction */";
};
width = 245;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(94,403,o),
(92,278,o),
(90,128,o),
(88,-15,o),
(87,-137,o),
(87,-172,qs),
(87,-192,o),
(95,-203,o),
(107,-203,qs),
(116,-203,o),
(129,-195,o),
(129,-172,qs),
(129,451,ls),
(129,486,o),
(123,522,o),
(112,522,qs),
(107,522,o),
(99,513,o),
(97,496,qs),
(96,489,o)
);
},
{
closed = 1;
nodes = (
(126,661,o),
(114,661,qs),
(101,661,o),
(79,645,o),
(79,627,qs),
(79,608,o),
(103,592,o),
(117,592,qs),
(131,592,o),
(150,613,o),
(150,628,qs),
(150,645,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 3 0 2 0 3 2 91 0 0 0 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 3 0 2 0 3 2 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
36 43 37 34 4 19
CALL[ ]	/* CallFunction */";
};
width = 221;
}
);
note = exclamdown;
unicode = 161;
},
{
glyphname = question;
kernLeft = question;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(204,536,o),
(188,536,qs),
(177,536,o),
(168,529,o),
(164,520,o),
(159,513,o),
(153,513,qs),
(139,513,o),
(118,553,o),
(118,593,qs),
(118,624,o),
(131,682,o),
(168,726,o),
(233,752,o),
(285,752,qs),
(322,752,o),
(391,734,o),
(445,695,o),
(477,636,o),
(477,594,qs),
(477,555,o),
(457,489,o),
(425,435,o),
(387,394,o),
(369,380,qs),
(337,355,o),
(264,314,o),
(202,266,o),
(161,201,o),
(161,152,qs),
(161,139,o),
(163,107,o),
(165,96,qs),
(167,85,o),
(188,58,o),
(211,58,qs),
(234,58,o),
(255,82,o),
(255,97,qs),
(255,114,o),
(244,155,o),
(244,174,qs),
(244,195,o),
(267,228,o),
(305,257,o),
(355,285,o),
(383,303,qs),
(408,319,o),
(474,374,o),
(533,449,o),
(573,540,o),
(573,592,qs),
(573,662,o),
(517,754,o),
(433,809,o),
(333,831,o),
(288,831,qs),
(232,831,o),
(139,802,o),
(71,745,o),
(33,660,o),
(33,603,qs),
(33,575,o),
(45,514,o),
(72,464,o),
(117,431,o),
(149,431,qs),
(181,431,o),
(218,473,o),
(218,503,qs),
(218,516,o)
);
},
{
closed = 1;
nodes = (
(146,-72,o),
(163,-92,o),
(191,-105,o),
(213,-105,qs),
(253,-105,o),
(290,-62,o),
(290,-38,qs),
(290,-28,o),
(282,-4,o),
(265,15,o),
(236,28,o),
(215,28,qs),
(193,28,o),
(164,13,o),
(147,-8,o),
(140,-31,o),
(140,-40,qs),
(140,-49,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 4 0 0 2 4 0 91 0 5 0 2 6 5 2 91 0 6 0 7 6 7 87 0 3 3 1 83 0 1 1 20 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 1 0 3 5 1 3 91 0 4 0 0 2 4 0 91 0 5 0 2 6 5 2 91 0 6 7 7 6 79 0 6 6 7 83 0 7 6 7 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
85 83 77 75 69 67 64 62 56 54 35 33 40 34 8 17
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(180,536,o),
(164,536,qs),
(156,536,o),
(148,529,o),
(143,520,o),
(137,513,o),
(131,513,qs),
(117,513,o),
(96,553,o),
(96,593,qs),
(96,628,o),
(122,692,o),
(170,741,o),
(236,770,o),
(275,770,qs),
(312,770,o),
(384,750,o),
(441,707,o),
(476,640,o),
(476,594,qs),
(476,555,o),
(456,489,o),
(424,435,o),
(386,394,o),
(368,380,qs),
(336,355,o),
(263,314,o),
(201,266,o),
(160,201,o),
(160,152,qs),
(160,139,o),
(162,107,o),
(164,96,qs),
(166,85,o),
(182,64,o),
(200,64,qs),
(217,64,o),
(233,82,o),
(233,97,qs),
(233,114,o),
(222,155,o),
(222,174,qs),
(222,198,o),
(249,234,o),
(292,267,o),
(347,297,o),
(375,315,qs),
(400,331,o),
(462,383,o),
(515,452,o),
(551,540,o),
(551,592,qs),
(551,662,o),
(497,754,o),
(415,809,o),
(320,831,o),
(279,831,qs),
(228,831,o),
(139,802,o),
(71,745,o),
(32,660,o),
(32,603,qs),
(32,575,o),
(43,522,o),
(67,481,o),
(105,456,o),
(132,456,qs),
(159,456,o),
(193,487,o),
(193,503,qs),
(193,510,o)
);
},
{
closed = 1;
nodes = (
(174,-89,o),
(205,-89,qs),
(234,-89,o),
(265,-55,o),
(265,-34,qs),
(265,-15,o),
(237,19,o),
(207,19,qs),
(191,19,o),
(168,8,o),
(154,-8,o),
(148,-27,o),
(148,-36,qs),
(148,-54,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 5 3 4 4 5 96 0 2 0 6 0 2 6 104 0 4 0 0 2 4 0 92 0 6 0 7 6 7 87 0 3 3 1 83 0 1 1 20 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 5 3 4 4 5 96 0 2 0 6 0 2 6 104 0 1 0 3 5 1 3 91 0 4 0 0 2 4 0 92 0 6 7 7 6 79 0 6 6 7 83 0 7 6 7 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
83 81 77 75 69 67 64 62 56 54 35 33 40 34 8 17
CALL[ ]	/* CallFunction */";
};
width = 578;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(182,-62,o),
(194,-62,qs),
(208,-62,o),
(229,-43,o),
(229,-28,qs),
(229,-13,o),
(209,4,o),
(195,4,qs),
(181,4,o),
(160,-13,o),
(160,-29,qs),
(160,-46,o)
);
},
{
closed = 1;
nodes = (
(149,536,o),
(133,536,qs),
(125,536,o),
(118,529,o),
(112,520,o),
(106,513,o),
(100,513,qs),
(86,513,o),
(65,553,o),
(65,593,qs),
(65,634,o),
(91,709,o),
(142,766,o),
(214,800,o),
(261,800,qs),
(298,800,o),
(374,776,o),
(436,726,o),
(475,648,o),
(475,594,qs),
(475,555,o),
(455,489,o),
(423,435,o),
(385,394,o),
(367,380,qs),
(335,355,o),
(262,314,o),
(200,266,o),
(159,201,o),
(159,152,qs),
(159,139,o),
(161,107,o),
(163,96,qs),
(166,74,o),
(185,74,qs),
(191,74,o),
(202,82,o),
(202,97,qs),
(202,114,o),
(191,155,o),
(191,174,qs),
(191,201,o),
(224,245,o),
(275,283,o),
(336,317,o),
(364,335,qs),
(389,351,o),
(445,396,o),
(490,459,o),
(520,540,o),
(520,592,qs),
(520,662,o),
(467,754,o),
(390,809,o),
(302,831,o),
(266,831,qs),
(222,831,o),
(138,802,o),
(72,745,o),
(31,660,o),
(31,603,qs),
(31,575,o),
(42,525,o),
(62,488,o),
(92,466,o),
(112,466,qs),
(132,466,o),
(158,487,o),
(158,503,qs),
(158,510,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 7 5 6 6 7 96 0 4 2 0 2 4 0 104 0 6 0 2 4 6 2 92 0 0 0 1 0 1 87 0 5 5 3 83 0 3 3 20 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 7 5 6 6 7 96 0 4 2 0 2 4 0 104 0 3 0 5 7 3 5 91 0 6 0 2 4 6 2 92 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
80 78 75 73 67 65 47 45 40 36 36 34 8 19
CALL[ ]	/* CallFunction */";
};
width = 548;
}
);
note = question;
unicode = 63;
},
{
glyphname = questiondown;
kernRight = questiondown;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(404,93,o),
(420,93,qs),
(429,93,o),
(437,100,o),
(442,109,o),
(447,116,o),
(453,116,qs),
(467,116,o),
(488,76,o),
(488,36,qs),
(488,4,o),
(474,-53,o),
(437,-97,o),
(372,-123,o),
(321,-123,qs),
(284,-123,o),
(215,-105,o),
(161,-66,o),
(129,-7,o),
(129,35,qs),
(129,74,o),
(149,140,o),
(181,194,o),
(219,235,o),
(237,249,qs),
(269,274,o),
(342,315,o),
(404,363,o),
(445,428,o),
(445,477,qs),
(445,490,o),
(443,522,o),
(441,533,qs),
(439,544,o),
(418,571,o),
(395,571,qs),
(371,571,o),
(351,547,o),
(351,532,qs),
(351,515,o),
(362,474,o),
(362,455,qs),
(362,434,o),
(339,401,o),
(301,372,o),
(251,344,o),
(223,326,qs),
(197,310,o),
(132,255,o),
(73,180,o),
(33,89,o),
(33,37,qs),
(33,-33,o),
(89,-125,o),
(173,-180,o),
(273,-202,o),
(317,-202,qs),
(373,-202,o),
(467,-173,o),
(535,-116,o),
(573,-31,o),
(573,26,qs),
(573,54,o),
(561,115,o),
(533,165,o),
(488,198,o),
(456,198,qs),
(424,198,o),
(388,156,o),
(388,126,qs),
(388,114,o)
);
},
{
closed = 1;
nodes = (
(459,701,o),
(443,721,o),
(415,734,o),
(393,734,qs),
(353,734,o),
(315,691,o),
(315,667,qs),
(315,656,o),
(323,633,o),
(341,614,o),
(369,601,o),
(390,601,qs),
(412,601,o),
(442,615,o),
(459,636,o),
(466,660,o),
(466,669,qs),
(466,678,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 7 0 6 2 7 6 91 0 0 0 4 5 0 4 91 0 2 0 5 3 2 5 91 0 3 3 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 7 0 6 2 7 6 91 0 0 0 4 5 0 4 91 0 2 0 5 3 2 5 91 0 3 1 1 3 79 0 3 3 1 83 0 1 3 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
85 83 77 75 69 67 64 62 56 54 35 33 40 34 8 17
CALL[ ]	/* CallFunction */";
};
width = 593;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(397,93,o),
(413,93,qs),
(421,93,o),
(429,100,o),
(434,109,o),
(440,116,o),
(446,116,qs),
(460,116,o),
(481,76,o),
(481,36,qs),
(481,1,o),
(455,-63,o),
(407,-112,o),
(341,-141,o),
(302,-141,qs),
(265,-141,o),
(193,-121,o),
(136,-78,o),
(101,-12,o),
(101,35,qs),
(101,74,o),
(121,140,o),
(153,194,o),
(191,235,o),
(209,249,qs),
(241,274,o),
(314,315,o),
(376,363,o),
(417,428,o),
(417,477,qs),
(417,490,o),
(415,522,o),
(413,533,qs),
(411,544,o),
(395,565,o),
(377,565,qs),
(360,565,o),
(344,547,o),
(344,532,qs),
(344,515,o),
(355,474,o),
(355,455,qs),
(355,431,o),
(328,395,o),
(284,362,o),
(230,332,o),
(202,314,qs),
(176,298,o),
(115,246,o),
(62,177,o),
(26,89,o),
(26,37,qs),
(26,-33,o),
(80,-125,o),
(162,-180,o),
(257,-202,o),
(298,-202,qs),
(349,-202,o),
(438,-173,o),
(506,-116,o),
(545,-31,o),
(545,26,qs),
(545,54,o),
(534,107,o),
(510,148,o),
(472,173,o),
(445,173,qs),
(418,173,o),
(384,142,o),
(384,126,qs),
(384,119,o)
);
},
{
closed = 1;
nodes = (
(323,612,o),
(354,612,qs),
(383,612,o),
(414,646,o),
(414,667,qs),
(414,686,o),
(386,720,o),
(356,720,qs),
(340,720,o),
(317,709,o),
(303,693,o),
(297,674,o),
(297,665,qs),
(297,647,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 7 0 7 2 0 104 0 5 4 3 4 5 96 0 6 0 7 2 6 7 91 0 0 0 4 5 0 4 91 0 3 3 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 2 7 0 7 2 0 104 0 5 4 3 4 5 96 0 6 0 7 2 6 7 91 0 0 0 4 5 0 4 91 0 3 1 1 3 79 0 3 3 1 83 0 1 3 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
83 81 77 75 69 67 64 62 56 54 35 33 40 34 8 17
CALL[ ]	/* CallFunction */";
};
width = 575;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(372,691,o),
(359,691,qs),
(344,691,o),
(324,671,o),
(324,657,qs),
(324,642,o),
(348,625,o),
(359,625,qs),
(370,625,o),
(393,642,o),
(393,658,qs),
(393,673,o)
);
},
{
closed = 1;
nodes = (
(405,93,o),
(416,93,qs),
(423,93,o),
(430,100,o),
(436,109,o),
(443,116,o),
(449,116,qs),
(463,116,o),
(484,74,o),
(484,35,qs),
(484,-7,o),
(457,-82,o),
(407,-138,o),
(333,-171,o),
(287,-171,qs),
(250,-171,o),
(173,-147,o),
(111,-97,o),
(71,-19,o),
(71,35,qs),
(71,115,o),
(160,233,o),
(238,285,qs),
(273,308,o),
(330,342,o),
(371,383,o),
(394,442,o),
(394,489,qs),
(394,510,o),
(390,536,o),
(382,550,o),
(373,555,o),
(368,555,qs),
(361,555,o),
(351,547,o),
(351,534,qs),
(351,518,o),
(362,474,o),
(362,454,qs),
(362,426,o),
(333,383,o),
(287,347,o),
(231,315,o),
(203,298,qs),
(179,283,o),
(118,236,o),
(64,171,o),
(27,86,o),
(27,33,qs),
(27,-32,o),
(83,-122,o),
(163,-178,o),
(252,-202,o),
(286,-202,qs),
(322,-202,o),
(404,-175,o),
(472,-118,o),
(517,-30,o),
(517,31,qs),
(517,88,o),
(475,163,o),
(439,163,qs),
(434,163,o),
(417,160,o),
(402,152,o),
(391,137,o),
(391,125,qs),
(391,111,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 4 0 2 0 4 2 104 0 7 6 5 6 7 5 104 0 1 0 0 4 1 0 91 0 2 0 6 7 2 6 91 0 5 5 3 83 0 3 3 17 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 4 0 2 0 4 2 104 0 7 6 5 6 7 5 104 0 1 0 0 4 1 0 91 0 2 0 6 7 2 6 91 0 5 3 3 5 79 0 5 5 3 83 0 3 5 3 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
78 76 73 71 65 63 47 45 38 38 36 34 8 19
CALL[ ]	/* CallFunction */";
};
width = 549;
}
);
note = questiondown;
unicode = 191;
},
{
glyphname = periodcentered;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(71,295,o),
(108,295,qs),
(143,295,o),
(178,334,o),
(178,359,qs),
(178,381,o),
(145,421,o),
(110,421,qs),
(91,421,o),
(64,409,o),
(48,390,o),
(40,367,o),
(40,357,qs),
(40,336,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 0 83 0 0 0 15 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
36 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 219;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (47,304);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (1,323);
ref = period;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 0 83 0 0 0 15 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
36 37 2 28
CALL[ ]	/* CallFunction */";
};
width = 211;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
alignment = -1;
pos = (57,319);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (3,323);
ref = period;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 36 35 2 28
CALL[ ]	/* CallFunction */";
};
width = 200;
}
);
note = periodcentered;
unicode = 183;
},
{
glyphname = bullet;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(207,459,o),
(161,459,qs),
(117,459,o),
(63,402,o),
(63,358,qs),
(63,313,o),
(118,258,o),
(156,258,qs),
(173,258,o),
(208,271,o),
(236,296,o),
(254,334,o),
(254,360,qs),
(254,400,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 1 83 0 1 1 23 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
36 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 316;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(196,450,o),
(155,450,qs),
(116,450,o),
(67,398,o),
(67,358,qs),
(67,317,o),
(116,267,o),
(150,267,qs),
(165,267,o),
(196,279,o),
(221,302,o),
(237,337,o),
(237,360,qs),
(237,396,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 1 83 0 1 1 15 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
36 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 303;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(179,435,o),
(146,435,qs),
(114,435,o),
(73,391,o),
(73,358,qs),
(73,324,o),
(113,282,o),
(141,282,qs),
(154,282,o),
(179,292,o),
(200,311,o),
(213,340,o),
(213,360,qs),
(213,390,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 1 83 0 1 1 15 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
36 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 285;
}
);
note = bullet;
unicode = 8226;
},
{
glyphname = asterisk;
kernLeft = asterisk;
kernRight = asterisk;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(247,815,o),
(229,786,o),
(209,750,o),
(197,731,q),
(180,756,o),
(157,794,o),
(139,820,o),
(124,832,o),
(115,832,qs),
(101,832,o),
(85,816,o),
(85,801,qs),
(85,794,o),
(93,780,o),
(110,760,o),
(138,731,o),
(158,710,q),
(126,713,o),
(90,714,o),
(66,714,qs),
(45,714,o),
(24,693,o),
(24,683,qs),
(24,665,o),
(54,655,o),
(66,655,qs),
(88,655,o),
(129,655,o),
(158,656,q),
(147,649,o),
(122,627,o),
(100,603,o),
(85,579,o),
(85,570,qs),
(85,542,o),
(118,542,qs),
(128,542,o),
(153,569,o),
(177,602,o),
(194,632,o),
(196,636,q),
(199,633,o),
(221,602,o),
(249,569,o),
(279,542,o),
(288,542,qs),
(299,542,o),
(318,553,o),
(318,568,qs),
(318,582,o),
(294,612,o),
(265,637,o),
(239,654,o),
(238,656,q),
(242,656,o),
(266,655,o),
(297,655,o),
(329,655,o),
(342,655,qs),
(353,655,o),
(371,672,o),
(371,687,qs),
(371,698,o),
(353,715,o),
(341,715,qs),
(321,715,o),
(260,713,o),
(240,710,q),
(240,716,o),
(260,738,o),
(284,765,o),
(303,792,o),
(303,801,qs),
(303,812,o),
(290,832,o),
(273,832,qs),
(264,832,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
72 1 1 0 59 8 2 2 1 35 1 3 2 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
4 1 3 2 2 3 95 6 1 1 5 1 2 3 1 2 92 7 8 2 0 0 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
4 1 3 2 3 107 6 1 1 5 1 2 3 1 2 92 7 8 2 0 0 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
7 8 2 0 1 0 106 4 1 3 2 3 107 6 1 1 2 2 1 79 6 1 1 1 2 84 5 1 2 1 2 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
1 0 68 66 58 55 51 47 41 39 31 29 22 16 12 9 0 76 1 76 9 15
CALL[ ]	/* CallFunction */";
};
width = 394;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(224,810,o),
(208,783,o),
(191,750,o),
(182,734,q),
(168,755,o),
(148,790,o),
(132,815,o),
(118,828,o),
(110,828,qs),
(98,828,o),
(84,817,o),
(84,800,qs),
(84,787,o),
(118,753,o),
(150,718,q),
(124,721,o),
(88,722,o),
(67,722,qs),
(49,722,o),
(31,705,o),
(31,695,qs),
(31,680,o),
(56,671,o),
(67,671,qs),
(86,671,o),
(127,673,o),
(150,675,q),
(142,668,o),
(119,648,o),
(98,626,o),
(84,604,o),
(84,595,qs),
(84,570,o),
(112,570,qs),
(121,570,o),
(144,595,o),
(164,626,o),
(179,655,o),
(181,658,q),
(184,655,o),
(203,627,o),
(228,595,o),
(253,570,o),
(261,570,qs),
(271,570,o),
(287,580,o),
(287,593,qs),
(287,606,o),
(266,633,o),
(239,657,o),
(216,673,o),
(215,675,q),
(218,675,o),
(240,673,o),
(268,672,o),
(297,671,o),
(308,671,qs),
(317,671,o),
(333,683,o),
(333,695,qs),
(333,706,o),
(318,723,o),
(307,723,qs),
(298,723,o),
(273,722,o),
(247,721,o),
(224,719,o),
(217,718,q),
(217,722,o),
(235,743,o),
(256,767,o),
(274,792,o),
(274,800,qs),
(274,810,o),
(263,828,o),
(248,828,qs),
(240,828,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
72 1 1 0 61 49 8 3 2 1 37 1 4 2 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
5 1 4 2 2 4 95 7 1 1 6 3 2 2 4 1 2 92 8 9 2 0 0 12 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 4 2 4 107 7 1 1 6 3 2 2 4 1 2 92 8 9 2 0 0 12 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
8 9 2 0 1 0 106 5 1 4 2 4 107 7 1 1 2 2 1 79 7 1 1 1 2 84 6 3 2 2 1 2 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
1 0 68 66 60 57 53 50 43 41 33 31 24 23 22 18 14 10 0 76 1 76 10 15
CALL[ ]	/* CallFunction */";
};
width = 364;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(192,803,o),
(178,777,o),
(165,749,o),
(160,739,q),
(150,753,o),
(135,782,o),
(122,806,o),
(110,821,o),
(103,821,qs),
(93,821,o),
(82,812,o),
(82,799,qs),
(82,788,o),
(119,754,o),
(139,731,q),
(122,732,o),
(86,736,o),
(69,736,qs),
(41,736,o),
(41,715,qs),
(41,704,o),
(61,697,o),
(69,697,qs),
(83,697,o),
(125,704,o),
(139,706,q),
(134,700,o),
(115,682,o),
(96,663,o),
(82,644,o),
(82,637,qs),
(82,617,o),
(104,617,qs),
(111,617,o),
(129,639,o),
(146,667,o),
(157,692,o),
(159,695,q),
(162,693,o),
(177,668,o),
(196,640,o),
(216,617,o),
(222,617,qs),
(230,617,o),
(243,625,o),
(243,635,qs),
(243,645,o),
(225,668,o),
(203,689,o),
(183,704,o),
(182,706,q),
(185,706,o),
(203,703,o),
(227,700,o),
(251,697,o),
(260,697,qs),
(267,697,o),
(279,707,o),
(279,715,qs),
(279,726,o),
(267,736,o),
(259,736,qs),
(252,736,o),
(229,735,o),
(205,733,o),
(186,731,o),
(184,731,q),
(184,734,o),
(200,751,o),
(218,772,o),
(233,792,o),
(233,799,qs),
(233,807,o),
(224,821,o),
(213,821,qs),
(206,821,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
71 1 1 0 37 1 5 3 2 66 49 1 4 1 65
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
71 1 8 0 37 1 5 3 2 66 49 1 4 1 65
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 4 1 3 1 4 3 104 9 8 2 3 1 7 1 3 5 1 3 91 6 1 5 5 0 83 10 11 2 0 0 12 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 1 3 1 4 3 104 0 8 1 3 8 79 9 2 2 1 7 1 3 5 1 3 91 6 1 5 5 0 83 10 11 2 0 0 14 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 67 65 60 59 58 56 53 51 43 41 33 31 24 23 20 18 14 11 9 8 0 75 1 75 12 15
CALL[ ]	/* CallFunction */";
};
width = 321;
}
);
note = asterisk;
unicode = 42;
},
{
glyphname = numbersign;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(138,182,o),
(111,118,o),
(92,70,o),
(82,40,o),
(82,37,qs),
(84,22,o),
(104,6,o),
(117,6,qs),
(133,6,o),
(153,12,o),
(165,22,o),
(171,35,o),
(173,42,qs),
(178,58,o),
(217,155,o),
(245,220,q),
(287,220,o),
(358,221,o),
(375,221,qs),
(379,221,l),
(364,185,o),
(337,120,o),
(318,70,o),
(308,40,o),
(308,37,qs),
(310,22,o),
(330,6,o),
(343,6,qs),
(370,6,o),
(394,27,o),
(399,42,qs),
(402,49,o),
(415,83,o),
(434,130,o),
(458,188,o),
(472,220,q),
(497,220,o),
(548,220,o),
(592,219,o),
(622,219,o),
(627,219,qs),
(639,219,o),
(659,245,o),
(659,259,qs),
(658,272,o),
(638,300,o),
(624,300,qs),
(505,300,l),
(551,408,l),
(678,408,ls),
(685,408,o),
(698,417,o),
(707,431,o),
(712,446,o),
(712,451,qs),
(712,465,o),
(693,489,o),
(682,489,qs),
(672,489,o),
(620,488,o),
(585,488,q),
(599,521,o),
(622,578,o),
(639,621,o),
(649,648,o),
(649,650,qs),
(649,660,o),
(637,676,o),
(627,676,qs),
(607,676,o),
(584,666,o),
(568,648,o),
(554,620,o),
(544,602,q),
(543,601,o),
(515,537,o),
(493,486,q),
(357,486,l),
(386,553,o),
(423,645,o),
(423,650,qs),
(423,660,o),
(411,676,o),
(401,676,qs),
(384,676,o),
(362,670,o),
(344,654,o),
(328,625,o),
(318,602,q),
(317,601,o),
(290,537,o),
(268,486,q),
(242,486,o),
(190,487,o),
(147,488,o),
(118,488,o),
(114,488,qs),
(103,488,o),
(83,462,o),
(83,448,qs),
(83,431,o),
(107,407,o),
(118,407,qs),
(233,407,l),
(187,299,l),
(65,299,ls),
(56,299,o),
(43,289,o),
(35,276,o),
(31,261,o),
(31,256,qs),
(31,247,o),
(39,232,o),
(49,223,o),
(58,218,o),
(60,218,qs),
(153,218,l)
);
},
{
closed = 1;
nodes = (
(459,407,l),
(413,300,l),
(379,300,o),
(312,299,o),
(278,299,q),
(324,407,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
72 1 0 1 111 91 2 11 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
6 1 4 3 4 106 14 9 2 1 12 10 16 3 0 11 1 0 91 15 8 2 2 2 3 83 7 5 2 3 3 23 67 13 1 11 11 13 11 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
6 1 4 3 4 106 7 5 2 3 15 8 2 2 1 3 2 92 14 9 2 1 12 10 16 3 0 11 1 0 91 13 1 11 11 13 11 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
1 0 122 121 120 117 109 107 100 96 89 87 80 74 70 68 67 65 59 55 48 46 39 38 33 31 24 18 14 12 11 9 0 116 1 116 17 15
CALL[ ]	/* CallFunction */";
};
width = 739;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(121,227,o),
(160,228,q),
(144,190,o),
(117,124,o),
(96,72,o),
(85,40,o),
(85,37,qs),
(87,23,o),
(103,12,o),
(113,12,qs),
(137,12,o),
(151,31,o),
(156,42,q),
(161,59,o),
(202,161,o),
(231,229,q),
(274,229,o),
(349,230,o),
(367,230,qs),
(387,230,l),
(371,192,o),
(343,125,o),
(322,73,o),
(311,40,o),
(311,37,qs),
(313,23,o),
(329,12,o),
(339,12,qs),
(363,12,o),
(377,31,o),
(382,42,q),
(387,59,o),
(428,161,o),
(457,229,q),
(482,229,o),
(536,229,o),
(582,228,o),
(614,228,o),
(619,228,qs),
(627,228,o),
(644,248,o),
(644,259,qs),
(643,269,o),
(623,291,o),
(616,291,qs),
(483,291,l),
(537,417,l),
(670,417,ls),
(681,417,o),
(697,443,o),
(697,451,qs),
(697,462,o),
(678,480,o),
(674,480,qs),
(663,480,o),
(602,479,o),
(563,479,q),
(578,514,o),
(603,574,o),
(621,620,o),
(631,648,o),
(631,650,qs),
(631,658,o),
(620,670,o),
(612,670,qs),
(597,670,o),
(579,662,o),
(567,645,o),
(555,620,o),
(546,602,qs),
(492,478,l),
(456,477,o),
(395,477,o),
(379,477,qs),
(336,477,l),
(351,512,o),
(376,573,o),
(395,619,o),
(405,648,o),
(405,650,qs),
(405,658,o),
(394,670,o),
(386,670,qs),
(371,670,o),
(353,662,o),
(341,645,o),
(329,620,o),
(320,602,qs),
(266,477,l),
(239,477,o),
(186,478,o),
(141,479,o),
(110,479,o),
(106,479,qs),
(98,479,o),
(82,459,o),
(82,448,qs),
(82,435,o),
(103,416,o),
(110,416,qs),
(240,416,l),
(186,290,l),
(57,290,ls),
(46,290,o),
(30,264,o),
(30,256,qs),
(30,242,o),
(48,227,o),
(52,227,qs),
(61,227,o)
);
},
{
closed = 1;
nodes = (
(412,291,l),
(374,291,o),
(295,290,o),
(257,290,q),
(270,322,o),
(297,384,o),
(310,416,q),
(466,416,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
67 1 0 1 102 84 2 11 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
6 1 4 3 4 106 14 9 2 1 12 10 16 3 0 11 1 0 91 17 15 8 3 2 2 3 83 7 5 2 3 3 23 67 13 1 11 11 13 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
6 1 4 3 4 106 7 5 2 3 17 15 8 3 2 1 3 2 92 14 9 2 1 12 10 16 3 0 11 1 0 91 13 1 11 11 13 11 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
6 1 4 3 4 106 13 1 11 0 11 107 7 5 2 3 17 15 8 3 2 1 3 2 92 14 9 2 1 0 0 1 79 14 9 2 1 1 0 83 12 10 16 3 0 1 0 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
110 110 1 0 110 117 110 117 116 113 100 98 93 89 82 80 75 69 65 63 62 60 56 52 45 43 38 34 27 25 20 14 10 8 7 5 0 109 1 107 18 15
CALL[ ]	/* CallFunction */";
};
width = 725;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(124,243,o),
(170,243,q),
(153,203,o),
(123,131,o),
(101,75,o),
(89,40,o),
(89,37,q),
(92,22,o),
(108,22,qs),
(119,22,o),
(128,34,o),
(130,42,qs),
(133,51,o),
(148,89,o),
(169,142,o),
(196,208,o),
(211,244,q),
(257,244,o),
(337,245,o),
(356,245,qs),
(397,245,l),
(380,204,o),
(350,132,o),
(327,75,o),
(315,40,o),
(315,37,q),
(318,22,o),
(334,22,qs),
(345,22,o),
(354,34,o),
(356,42,qs),
(359,51,o),
(373,89,o),
(394,142,o),
(422,208,o),
(437,244,q),
(463,244,o),
(520,244,o),
(568,243,o),
(603,243,o),
(608,243,qs),
(616,243,o),
(623,254,o),
(623,259,qs),
(622,264,o),
(612,276,o),
(605,276,qs),
(451,276,l),
(517,432,l),
(659,432,ls),
(670,432,o),
(676,446,o),
(676,451,qs),
(676,456,o),
(667,465,o),
(663,465,qs),
(651,465,o),
(576,464,o),
(530,463,q),
(546,500,o),
(573,567,o),
(594,617,o),
(605,648,o),
(605,650,qs),
(605,660,o),
(591,660,qs),
(577,660,o),
(563,631,o),
(550,602,qs),
(490,463,l),
(452,462,o),
(385,462,o),
(368,462,qs),
(304,462,l),
(320,499,o),
(347,566,o),
(368,617,o),
(379,648,o),
(379,650,qs),
(379,660,o),
(365,660,qs),
(356,660,o),
(345,653,o),
(337,639,o),
(330,617,o),
(324,602,qs),
(323,600,o),
(289,522,o),
(264,462,q),
(237,462,o),
(180,463,o),
(132,464,o),
(99,464,o),
(95,464,qs),
(87,464,o),
(81,453,o),
(81,448,qs),
(81,441,o),
(92,431,o),
(99,431,qs),
(250,431,l),
(184,275,l),
(46,275,ls),
(35,275,o),
(29,261,o),
(29,256,qs),
(29,249,o),
(37,242,o),
(41,242,qs),
(52,242,o)
);
},
{
closed = 1;
nodes = (
(337,431,o),
(431,432,o),
(477,432,q),
(461,394,o),
(427,316,o),
(410,276,q),
(364,276,o),
(269,275,o),
(224,275,q),
(291,431,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
65 1 0 1 102 83 2 11 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
6 1 4 3 4 106 14 9 2 1 12 10 16 3 0 11 1 0 91 15 8 2 2 2 3 83 7 5 2 3 3 23 67 13 1 11 11 13 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
6 1 4 3 4 106 7 5 2 3 15 8 2 2 1 3 2 92 14 9 2 1 12 10 16 3 0 11 1 0 91 13 1 11 11 13 11 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
6 1 4 3 4 106 13 1 11 0 11 107 7 5 2 3 15 8 2 2 1 3 2 92 14 9 2 1 0 0 1 79 14 9 2 1 1 0 83 12 10 16 3 0 1 0 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
1 0 119 116 113 110 101 99 92 88 82 80 73 67 63 61 60 58 54 50 44 42 39 35 29 27 20 14 10 8 7 5 0 109 1 107 17 15
CALL[ ]	/* CallFunction */";
};
width = 705;
}
);
note = numbersign;
unicode = 35;
},
{
glyphname = slash;
kernLeft = slash;
kernRight = slash;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(21,16,o),
(21,14,qs),
(21,-2,o),
(47,-19,o),
(58,-19,qs),
(78,-19,o),
(104,-6,o),
(109,5,qs),
(514,768,l),
(518,774,o),
(528,799,o),
(528,807,qs),
(528,819,o),
(504,838,o),
(483,838,qs),
(472,838,o),
(457,833,o),
(443,818,o),
(429,793,o),
(419,774,qs),
(395,726,o),
(366,666,o),
(345,624,o),
(328,589,o),
(303,543,o),
(267,476,o),
(238,423,qs),
(206,364,o),
(158,276,o),
(121,209,o),
(93,156,o),
(66,107,o),
(39,56,o),
(23,24,qs),
(22,22,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 20 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
0 0 1 0 106 0 1 1 21 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
30 28 20 18 2 15
CALL[ ]	/* CallFunction */";
};
width = 548;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(21,9,qs),
(21,-2,o),
(40,-19,o),
(49,-19,qs),
(63,-19,o),
(86,-6,o),
(91,5,qs),
(496,768,ls),
(500,775,o),
(510,799,o),
(510,807,qs),
(510,813,o),
(503,831,o),
(485,831,qs),
(461,831,o),
(436,805,o),
(421,774,qs),
(400,731,o),
(374,678,o),
(355,638,o),
(338,603,o),
(312,553,o),
(272,480,o),
(241,423,qs),
(217,379,o),
(187,326,o),
(169,295,o),
(157,277,o),
(146,257,o),
(129,228,o),
(101,173,o),
(57,86,o),
(23,18,qs),
(21,15,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 20 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
0 0 1 0 106 0 1 1 21 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
30 28 20 18 2 15
CALL[ ]	/* CallFunction */";
};
width = 530;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(22,-1,o),
(22,-7,qs),
(22,-19,o),
(36,-19,qs),
(48,-19,o),
(58,-9,o),
(65,5,qs),
(470,768,ls),
(474,776,o),
(484,799,o),
(484,807,qs),
(484,813,o),
(478,821,o),
(469,821,qs),
(460,821,o),
(445,808,o),
(433,792,o),
(426,777,o),
(425,774,qs),
(404,731,o),
(378,678,o),
(359,638,o),
(341,603,o),
(315,553,o),
(276,480,o),
(245,423,qs),
(221,379,o),
(192,326,o),
(175,294,o),
(164,276,o),
(153,256,o),
(138,227,o),
(109,172,o),
(63,85,o),
(27,18,qs),
(25,13,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 12 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 14 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
32 30 22 20 2 15
CALL[ ]	/* CallFunction */";
};
width = 505;
}
);
note = slash;
unicode = 47;
},
{
glyphname = backslash;
kernLeft = backslash;
kernRight = backslash;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(482,107,o),
(455,156,o),
(427,209,o),
(390,276,o),
(342,364,o),
(310,423,qs),
(281,476,o),
(245,543,o),
(220,589,o),
(203,624,o),
(182,666,o),
(153,726,o),
(129,774,qs),
(119,793,o),
(105,818,o),
(91,833,o),
(75,838,o),
(65,838,qs),
(44,838,o),
(20,819,o),
(20,807,qs),
(20,799,o),
(30,774,o),
(34,768,q),
(439,5,ls),
(444,-6,o),
(470,-19,o),
(490,-19,qs),
(501,-19,o),
(527,-2,o),
(527,14,qs),
(527,16,o),
(526,22,o),
(525,24,qs),
(508,56,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 20 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
0 1 0 1 106 0 0 0 21 0 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
40 37 2 17
CALL[ ]	/* CallFunction */";
};
width = 548;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (20,0);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (530,0);
ref = slash;
scale = (-0.9999,1);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 20 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
0 0 1 0 106 0 1 1 21 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
31 29 21 19 2 26
CALL[ ]	/* CallFunction */";
};
width = 530;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
alignment = -1;
pos = (21,0);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (505,0);
ref = slash;
scale = (-0.9999,1);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 12 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 14 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
33 31 23 21 2 26
CALL[ ]	/* CallFunction */";
};
width = 505;
}
);
note = backslash;
unicode = 92;
},
{
glyphname = hyphen;
kernLeft = emdash;
kernRight = emdash;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(233,306,o),
(191,306,qs),
(178,306,o),
(149,307,o),
(121,307,o),
(97,308,o),
(90,308,qs),
(73,308,o),
(57,283,o),
(57,269,qs),
(57,255,o),
(76,229,o),
(90,229,qs),
(108,229,o),
(166,229,o),
(230,230,o),
(291,230,o),
(311,230,qs),
(322,230,o),
(336,239,o),
(344,252,o),
(347,267,o),
(347,272,qs),
(347,287,o),
(329,309,o),
(319,309,qs),
(295,309,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 14 7 0 26 1 18 3 15
CALL[ ]	/* CallFunction */";
};
width = 402;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(228,297,o),
(186,297,qs),
(173,297,o),
(144,298,o),
(116,298,o),
(92,299,o),
(85,299,qs),
(71,299,o),
(59,280,o),
(59,269,qs),
(59,258,o),
(74,238,o),
(85,238,qs),
(103,238,o),
(161,238,o),
(225,239,o),
(286,239,o),
(306,239,qs),
(323,239,o),
(335,264,o),
(335,272,qs),
(335,283,o),
(322,300,o),
(314,300,qs),
(290,300,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 12 5 0 24 1 16 3 15
CALL[ ]	/* CallFunction */";
};
width = 393;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(221,282,o),
(179,282,qs),
(166,282,o),
(137,283,o),
(109,283,o),
(85,284,o),
(78,284,qs),
(70,284,o),
(62,274,o),
(62,269,qs),
(62,264,o),
(71,253,o),
(78,253,qs),
(96,253,o),
(154,253,o),
(218,254,o),
(279,254,o),
(299,254,qs),
(310,254,o),
(318,267,o),
(318,272,qs),
(318,277,o),
(311,285,o),
(307,285,qs),
(283,285,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 12 5 0 24 1 16 3 15
CALL[ ]	/* CallFunction */";
};
width = 380;
}
);
note = hyphen;
unicode = 45;
},
{
glyphname = uni00AD;
kernLeft = emdash;
kernRight = emdash;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(233,306,o),
(191,306,qs),
(178,306,o),
(149,307,o),
(121,307,o),
(97,308,o),
(90,308,qs),
(73,308,o),
(57,283,o),
(57,269,qs),
(57,255,o),
(76,229,o),
(90,229,qs),
(108,229,o),
(166,229,o),
(230,230,o),
(291,230,o),
(311,230,qs),
(322,230,o),
(336,239,o),
(344,252,o),
(347,267,o),
(347,272,qs),
(347,287,o),
(329,309,o),
(319,309,qs),
(295,309,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 14 7 0 26 1 18 3 15
CALL[ ]	/* CallFunction */";
};
width = 402;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (59,238);
ref = .ttfautohint;
},
{
alignment = -1;
ref = hyphen;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 2 1 13 6 1 25 2 17 3 26
CALL[ ]	/* CallFunction */";
};
width = 393;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
alignment = -1;
pos = (62,253);
ref = .ttfautohint;
},
{
alignment = -1;
ref = hyphen;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 2 1 13 6 1 25 2 17 3 26
CALL[ ]	/* CallFunction */";
};
width = 380;
}
);
note = uni00AD;
unicode = 173;
},
{
glyphname = endash;
kernLeft = emdash;
kernRight = emdash;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(296,306,o),
(238,306,qs),
(220,306,o),
(179,307,o),
(140,307,o),
(106,308,o),
(96,308,qs),
(76,308,o),
(57,283,o),
(57,269,qs),
(57,255,o),
(80,229,o),
(96,229,qs),
(121,229,o),
(203,229,o),
(293,230,o),
(378,230,o),
(406,230,qs),
(419,230,o),
(436,239,o),
(446,252,o),
(450,267,o),
(450,272,qs),
(450,287,o),
(429,309,o),
(418,309,qs),
(384,309,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 14 7 0 26 1 18 3 15
CALL[ ]	/* CallFunction */";
};
width = 505;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(291,297,o),
(233,297,qs),
(215,297,o),
(174,298,o),
(135,298,o),
(101,299,o),
(91,299,qs),
(74,299,o),
(59,280,o),
(59,269,qs),
(59,258,o),
(78,238,o),
(91,238,qs),
(116,238,o),
(198,238,o),
(288,239,o),
(373,239,o),
(401,239,qs),
(423,239,o),
(438,264,o),
(438,272,qs),
(438,283,o),
(422,300,o),
(413,300,qs),
(379,300,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 12 5 0 24 1 16 3 15
CALL[ ]	/* CallFunction */";
};
width = 496;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(284,282,o),
(226,282,qs),
(208,282,o),
(167,283,o),
(128,283,o),
(94,284,o),
(84,284,qs),
(73,284,o),
(62,274,o),
(62,269,qs),
(62,264,o),
(75,253,o),
(84,253,qs),
(109,253,o),
(191,253,o),
(281,254,o),
(366,254,o),
(394,254,qs),
(410,254,o),
(421,267,o),
(421,272,qs),
(421,277,o),
(411,285,o),
(406,285,qs),
(372,285,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 12 5 0 24 1 16 3 15
CALL[ ]	/* CallFunction */";
};
width = 483;
}
);
note = endash;
unicode = 8211;
},
{
glyphname = emdash;
kernLeft = emdash;
kernRight = emdash;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(567,308,o),
(477,307,o),
(393,306,o),
(372,306,qs),
(363,306,o),
(318,306,o),
(259,307,o),
(194,307,o),
(137,308,o),
(97,308,o),
(92,308,qs),
(75,308,o),
(59,283,o),
(59,269,qs),
(59,255,o),
(77,229,o),
(92,229,qs),
(104,229,o),
(188,229,o),
(302,229,o),
(432,230,o),
(548,230,o),
(634,230,o),
(647,230,qs),
(657,230,o),
(671,239,o),
(680,252,o),
(683,267,o),
(683,272,qs),
(683,287,o),
(665,309,o),
(655,309,qs),
(643,309,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 16 7 0 32 1 20 3 15
CALL[ ]	/* CallFunction */";
};
width = 740;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(561,299,o),
(471,298,o),
(387,297,o),
(366,297,qs),
(357,297,o),
(312,297,o),
(253,298,o),
(188,298,o),
(131,299,o),
(91,299,o),
(86,299,qs),
(72,299,o),
(60,280,o),
(60,269,qs),
(60,258,o),
(75,238,o),
(86,238,qs),
(98,238,o),
(182,238,o),
(296,238,o),
(426,239,o),
(542,239,o),
(628,239,o),
(641,239,qs),
(658,239,o),
(670,264,o),
(670,272,qs),
(670,283,o),
(657,300,o),
(649,300,qs),
(637,300,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 14 5 0 30 1 18 3 15
CALL[ ]	/* CallFunction */";
};
width = 729;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(553,284,o),
(463,283,o),
(379,282,o),
(358,282,qs),
(349,282,o),
(304,282,o),
(245,283,o),
(180,283,o),
(123,284,o),
(83,284,o),
(78,284,qs),
(70,284,o),
(62,274,o),
(62,269,qs),
(62,264,o),
(71,253,o),
(78,253,qs),
(90,253,o),
(174,253,o),
(288,253,o),
(418,254,o),
(534,254,o),
(620,254,o),
(633,254,qs),
(644,254,o),
(652,267,o),
(652,272,qs),
(652,277,o),
(645,285,o),
(641,285,qs),
(629,285,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 14 5 0 30 1 18 3 15
CALL[ ]	/* CallFunction */";
};
width = 714;
}
);
note = emdash;
unicode = 8212;
},
{
glyphname = underscore;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(176,-19,o),
(118,-19,qs),
(100,-19,o),
(59,-18,o),
(20,-18,o),
(-14,-17,o),
(-24,-17,qs),
(-44,-17,o),
(-63,-42,o),
(-63,-56,qs),
(-63,-70,o),
(-40,-96,o),
(-24,-96,qs),
(1,-96,o),
(83,-96,o),
(173,-95,o),
(258,-95,o),
(286,-95,qs),
(299,-95,o),
(316,-86,o),
(326,-73,o),
(330,-58,o),
(330,-53,qs),
(330,-38,o),
(309,-16,o),
(298,-16,qs),
(264,-16,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 14 7 0 26 1 18 3 15
CALL[ ]	/* CallFunction */";
};
width = 270;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(220,-28,o),
(162,-28,qs),
(144,-28,o),
(103,-27,o),
(64,-27,o),
(30,-26,o),
(20,-26,qs),
(3,-26,o),
(-12,-45,o),
(-12,-56,qs),
(-12,-67,o),
(7,-87,o),
(20,-87,qs),
(45,-87,o),
(127,-87,o),
(217,-86,o),
(302,-86,o),
(330,-86,qs),
(352,-86,o),
(367,-61,o),
(367,-53,qs),
(367,-42,o),
(351,-25,o),
(342,-25,qs),
(308,-25,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 12 5 0 24 1 16 3 15
CALL[ ]	/* CallFunction */";
};
width = 357;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(283,-43,o),
(225,-43,qs),
(207,-43,o),
(166,-42,o),
(127,-42,o),
(93,-41,o),
(83,-41,qs),
(72,-41,o),
(61,-51,o),
(61,-56,qs),
(61,-61,o),
(74,-72,o),
(83,-72,qs),
(108,-72,o),
(190,-72,o),
(280,-71,o),
(365,-71,o),
(393,-71,qs),
(409,-71,o),
(420,-58,o),
(420,-53,qs),
(420,-48,o),
(410,-40,o),
(405,-40,qs),
(371,-40,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 12 5 0 24 1 16 3 15
CALL[ ]	/* CallFunction */";
};
width = 481;
}
);
note = underscore;
unicode = 95;
},
{
glyphname = parenleft;
kernRight = parenleft;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(175,-35,o),
(198,-35,qs),
(221,-35,o),
(238,-10,o),
(238,0,qs),
(238,19,o),
(206,88,o),
(167,190,o),
(135,325,o),
(135,411,qs),
(135,495,o),
(175,629,o),
(222,730,o),
(262,799,o),
(262,819,qs),
(262,828,o),
(245,854,o),
(221,854,qs),
(209,854,o),
(192,845,o),
(181,834,o),
(175,825,o),
(175,825,q),
(137,767,o),
(107,699,qs),
(81,641,o),
(39,491,o),
(39,409,qs),
(39,326,o),
(66,187,o),
(102,82,o),
(136,16,o),
(144,6,qs),
(152,-5,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 20 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 0 83 0 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
46 46 2 17
CALL[ ]	/* CallFunction */";
};
width = 284;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(174,-29,o),
(191,-29,qs),
(207,-29,o),
(220,-10,o),
(220,0,qs),
(220,19,o),
(188,83,o),
(149,181,o),
(117,319,o),
(117,411,qs),
(117,501,o),
(157,636,o),
(204,734,o),
(244,799,o),
(244,819,qs),
(244,828,o),
(232,848,o),
(214,848,qs),
(205,848,o),
(191,841,o),
(182,832,o),
(178,825,o),
(178,825,q),
(140,767,o),
(110,699,qs),
(84,641,o),
(42,491,o),
(42,409,qs),
(42,327,o),
(70,188,o),
(107,83,o),
(141,16,o),
(147,6,qs),
(154,-5,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 20 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 0 1 107 0 0 0 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 9 values pushed */
0 0 1 0 106 0 1 1 97
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
46 46 2 17
CALL[ ]	/* CallFunction */";
};
width = 267;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(173,-19,o),
(181,-19,qs),
(186,-19,o),
(195,-10,o),
(195,0,qs),
(195,19,o),
(163,74,o),
(124,167,o),
(92,307,o),
(92,411,qs),
(92,476,o),
(111,581,o),
(139,662,o),
(172,724,o),
(200,771,o),
(219,806,o),
(219,819,qs),
(219,828,o),
(213,838,o),
(204,838,qs),
(193,838,o),
(183,824,o),
(183,825,q),
(145,767,o),
(115,699,qs),
(89,641,o),
(47,491,o),
(47,409,qs),
(47,327,o),
(77,189,o),
(114,84,o),
(148,17,o),
(152,6,qs),
(156,-5,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
10 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 20 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
0 0 1 0 106 0 1 1 21 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
32 30 44 2 16
CALL[ ]	/* CallFunction */";
};
width = 243;
}
);
note = parenleft;
unicode = 40;
},
{
glyphname = parenright;
kernLeft = parenright;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(109,854,o),
(86,854,qs),
(63,854,o),
(46,829,o),
(46,819,qs),
(46,800,o),
(78,731,o),
(117,629,o),
(149,493,o),
(149,408,qs),
(149,324,o),
(109,190,o),
(62,89,o),
(22,20,o),
(22,0,qs),
(22,-9,o),
(39,-35,o),
(63,-35,qs),
(75,-35,o),
(92,-26,o),
(103,-15,o),
(109,-6,o),
(109,-6,q),
(147,52,o),
(177,120,qs),
(203,178,o),
(245,327,o),
(245,410,qs),
(245,492,o),
(218,632,o),
(182,737,o),
(147,803,o),
(140,813,qs),
(132,824,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 20 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 1 83 0 1 1 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
46 46 2 17
CALL[ ]	/* CallFunction */";
};
width = 284;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (23,0);
ref = .ttfautohint;
},
{
alignment = -1;
angle = 180;
pos = (267,819);
ref = parenleft;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 20 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 1 0 107 0 1 1 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 9 values pushed */
0 1 0 1 106 0 0 0 97
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
46 47 2 28
CALL[ ]	/* CallFunction */";
};
width = 267;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
alignment = -1;
pos = (24,0);
ref = .ttfautohint;
},
{
alignment = -1;
angle = 180;
pos = (243,819);
ref = parenleft;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
11 1 0 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 20 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
0 1 0 1 106 0 0 0 21 0 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
33 31 45 2 27
CALL[ ]	/* CallFunction */";
};
width = 243;
}
);
note = parenright;
unicode = 41;
},
{
glyphname = braceleft;
kernRight = braceleft;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(209,249,o),
(197,287,qs),
(192,303,o),
(175,334,o),
(151,359,o),
(120,374,o),
(99,374,q),
(120,374,o),
(151,392,o),
(175,420,o),
(192,457,o),
(197,476,qs),
(209,521,o),
(211,579,qs),
(211,749,ls),
(211,753,o),
(214,762,o),
(224,770,o),
(246,776,o),
(264,778,qs),
(305,783,ls),
(308,783,o),
(320,786,o),
(332,792,o),
(340,802,o),
(340,810,qs),
(340,820,o),
(332,831,o),
(320,837,o),
(308,838,o),
(304,838,qs),
(294,838,o),
(264,837,o),
(232,836,o),
(204,835,o),
(197,835,qs),
(171,835,o),
(139,815,o),
(122,788,o),
(117,757,o),
(117,747,qs),
(117,689,o),
(118,606,o),
(118,580,qs),
(118,512,o),
(97,439,o),
(69,406,o),
(43,400,o),
(37,400,qs),
(18,400,o),
(-5,388,o),
(-5,374,qs),
(-5,348,o),
(31,348,qs),
(37,348,o),
(66,341,o),
(96,311,o),
(120,252,o),
(120,200,qs),
(120,32,ls),
(120,2,o),
(129,-33,o),
(147,-52,o),
(172,-58,o),
(188,-58,qs),
(245,-58,ls),
(338,-58,o),
(338,-31,qs),
(338,-19,o),
(321,-5,o),
(297,2,o),
(269,5,o),
(257,5,qs),
(226,5,o),
(211,25,o),
(211,59,qs),
(211,201,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 5 4 3 4 5 3 104 0 6 3 7 3 6 7 104 0 7 2 3 7 2 102 0 3 0 2 0 3 2 91 0 0 0 1 0 1 88 0 4 4 20 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 4 5 4 106 0 5 3 5 106 0 6 3 7 3 6 7 104 0 7 2 3 7 2 102 0 3 0 2 0 3 2 91 0 0 1 1 0 79 0 0 0 1 84 0 1 0 1 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
16 29 24 123 35 41 53 34 8 23
CALL[ ]	/* CallFunction */";
};
width = 349;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(191,249,o),
(179,287,qs),
(174,303,o),
(157,334,o),
(133,359,o),
(102,374,o),
(81,374,q),
(102,374,o),
(133,392,o),
(157,420,o),
(174,457,o),
(179,476,qs),
(191,521,o),
(193,579,qs),
(193,753,ls),
(193,755,o),
(195,766,o),
(205,777,o),
(226,787,o),
(246,788,qs),
(297,794,ls),
(308,796,o),
(325,805,o),
(325,816,qs),
(325,831,o),
(304,838,o),
(296,838,qs),
(287,838,o),
(260,837,o),
(232,836,o),
(207,835,o),
(200,835,qs),
(171,835,o),
(138,812,o),
(123,782,o),
(120,753,o),
(120,747,qs),
(120,689,o),
(121,606,o),
(121,580,qs),
(121,512,o),
(100,439,o),
(72,406,o),
(46,400,o),
(40,400,qs),
(21,400,o),
(-2,388,o),
(-2,374,qs),
(-2,348,o),
(34,348,qs),
(40,348,o),
(69,341,o),
(99,311,o),
(123,252,o),
(123,200,qs),
(123,32,ls),
(123,2,o),
(132,-33,o),
(150,-52,o),
(175,-58,o),
(191,-58,qs),
(237,-58,ls),
(245,-58,o),
(274,-57,o),
(302,-53,o),
(323,-44,o),
(323,-36,qs),
(323,-26,o),
(305,-14,o),
(281,-8,o),
(256,-7,o),
(249,-7,qs),
(231,-7,o),
(209,-5,o),
(197,5,o),
(193,27,o),
(193,47,qs),
(193,201,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 6 3 7 3 6 7 104 0 7 2 3 7 2 102 0 3 0 2 0 3 2 91 0 0 0 1 0 1 87 0 5 5 4 83 0 4 4 20 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 6 3 7 3 6 7 104 0 7 2 3 7 2 102 0 4 0 5 3 4 5 91 0 3 0 2 0 3 2 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
16 27 22 123 35 41 70 52 8 23
CALL[ ]	/* CallFunction */";
};
width = 334;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(165,249,o),
(153,287,qs),
(148,303,o),
(131,334,o),
(107,359,o),
(76,374,o),
(55,374,q),
(76,374,o),
(107,392,o),
(131,420,o),
(148,457,o),
(153,476,qs),
(165,521,o),
(167,579,qs),
(167,753,ls),
(167,756,o),
(169,773,o),
(179,791,o),
(200,806,o),
(220,808,qs),
(286,814,ls),
(297,815,o),
(304,824,o),
(304,826,qs),
(304,834,o),
(293,838,o),
(285,838,qs),
(277,838,o),
(255,837,o),
(231,836,o),
(210,835,o),
(204,835,qs),
(175,835,o),
(142,812,o),
(127,782,o),
(124,753,o),
(124,747,qs),
(124,689,o),
(125,606,o),
(125,580,qs),
(125,512,o),
(104,439,o),
(76,406,o),
(50,400,o),
(44,400,qs),
(25,400,o),
(2,388,o),
(2,374,qs),
(2,348,o),
(38,348,qs),
(44,348,o),
(73,341,o),
(103,311,o),
(127,252,o),
(127,200,qs),
(127,32,ls),
(127,2,o),
(136,-33,o),
(154,-52,o),
(179,-58,o),
(195,-58,qs),
(226,-58,ls),
(234,-58,o),
(260,-57,o),
(284,-54,o),
(302,-48,o),
(302,-43,qs),
(302,-38,o),
(283,-31,o),
(260,-28,o),
(239,-27,o),
(238,-27,qs),
(216,-27,o),
(188,-25,o),
(173,-15,o),
(167,7,o),
(167,27,qs),
(167,201,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 5 3 6 3 5 6 104 0 6 2 3 6 2 102 0 3 0 2 0 3 2 91 0 0 0 1 0 1 88 0 4 4 20 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 4 3 4 106 0 5 3 6 3 5 6 104 0 6 2 3 6 2 102 0 3 0 2 0 3 2 91 0 0 1 1 0 79 0 0 0 1 84 0 1 0 1 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
71 70 70 69 123 35 41 70 52 7 20
CALL[ ]	/* CallFunction */";
};
width = 313;
}
);
note = braceleft;
unicode = 123;
},
{
glyphname = braceright;
kernLeft = braceright;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(140,530,o),
(152,492,qs),
(157,476,o),
(173,445,o),
(197,421,o),
(229,406,o),
(250,406,q),
(229,406,o),
(197,388,o),
(173,359,o),
(157,322,o),
(152,303,qs),
(140,258,o),
(138,201,qs),
(138,31,ls),
(138,26,o),
(135,18,o),
(125,10,o),
(103,4,o),
(85,2,qs),
(44,-3,ls),
(37,-4,o),
(9,-14,o),
(9,-30,qs),
(9,-40,o),
(17,-51,o),
(29,-57,o),
(41,-58,o),
(45,-58,qs),
(55,-58,o),
(85,-57,o),
(117,-56,o),
(144,-55,o),
(152,-55,qs),
(178,-55,o),
(210,-35,o),
(227,-8,o),
(232,22,o),
(232,33,qs),
(232,91,o),
(231,174,o),
(231,200,qs),
(231,267,o),
(252,341,o),
(280,374,o),
(306,380,o),
(312,380,qs),
(331,380,o),
(354,392,o),
(354,406,qs),
(354,432,o),
(318,432,qs),
(312,432,o),
(283,439,o),
(253,469,o),
(229,528,o),
(229,580,qs),
(229,748,ls),
(229,778,o),
(220,813,o),
(202,832,o),
(177,838,o),
(161,838,qs),
(104,838,ls),
(11,838,o),
(11,811,qs),
(11,799,o),
(28,785,o),
(52,778,o),
(80,775,o),
(92,775,qs),
(123,775,o),
(138,755,o),
(138,721,qs),
(138,579,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 6 2 5 2 6 5 104 0 5 3 2 5 3 102 0 4 3 4 107 0 0 0 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 15 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 6 2 5 2 6 5 104 0 5 3 2 5 3 102 0 4 3 4 107 0 2 0 3 4 2 3 91 0 0 0 1 83 0 1 1 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 6 2 5 2 6 5 104 0 5 3 2 5 3 102 0 4 3 4 107 0 1 0 0 2 1 0 91 0 2 6 3 2 79 0 2 2 3 83 0 3 2 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
68 67 67 66 123 35 41 53 34 7 20
CALL[ ]	/* CallFunction */";
};
width = 349;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (9,0);
ref = .ttfautohint;
},
{
alignment = -1;
angle = 180;
pos = (334,780);
ref = braceleft;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 7 2 6 2 7 6 104 0 6 3 2 6 3 102 0 5 0 4 5 4 87 0 0 0 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 15 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 7 2 6 2 7 6 104 0 6 3 2 6 3 102 0 2 0 3 5 2 3 91 0 5 0 4 5 4 87 0 0 0 1 83 0 1 1 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 7 2 6 2 7 6 104 0 6 3 2 6 3 102 0 1 0 0 2 1 0 91 0 2 0 3 5 2 3 91 0 5 4 4 5 79 0 5 5 4 83 0 4 5 4 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
16 27 22 123 35 41 70 53 8 34
CALL[ ]	/* CallFunction */";
};
width = 334;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
alignment = -1;
pos = (9,0);
ref = .ttfautohint;
},
{
alignment = -1;
angle = 180;
pos = (313,780);
ref = braceleft;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 6 2 5 2 6 5 104 0 5 3 2 5 3 102 0 4 3 4 107 0 0 0 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 15 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 6 2 5 2 6 5 104 0 5 3 2 5 3 102 0 4 3 4 107 0 2 0 3 4 2 3 91 0 0 0 1 83 0 1 1 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 6 2 5 2 6 5 104 0 5 3 2 5 3 102 0 4 3 4 107 0 1 0 0 2 1 0 91 0 2 6 3 2 79 0 2 2 3 83 0 3 2 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
72 71 71 70 123 35 41 70 53 7 31
CALL[ ]	/* CallFunction */";
};
width = 313;
}
);
note = braceright;
unicode = 125;
},
{
glyphname = bracketleft;
kernRight = bracketleft;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(82,812,o),
(82,800,qs),
(83,748,o),
(84,672,o),
(85,610,o),
(86,556,o),
(86,494,o),
(86,418,o),
(86,366,qs),
(86,323,o),
(86,209,o),
(86,97,o),
(85,1,o),
(85,-23,qs),
(85,-44,o),
(95,-58,o),
(104,-58,qs),
(230,-58,ls),
(247,-58,o),
(281,-56,o),
(307,-49,o),
(323,-37,o),
(323,-27,qs),
(323,-9,o),
(284,5,o),
(242,5,qs),
(210,5,o),
(176,9,o),
(176,22,qs),
(176,744,ls),
(176,751,o),
(184,773,o),
(197,774,qs),
(290,782,ls),
(305,784,o),
(325,793,o),
(325,810,qs),
(325,827,o),
(300,838,o),
(289,838,qs),
(280,838,o),
(238,838,o),
(184,837,o),
(127,836,o),
(103,835,qs),
(95,834,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
0 1 0 2 1 2 88 0 0 0 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 0 106 0 1 2 2 1 79 0 1 1 2 84 0 2 1 2 72
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
69 44 96 3 18
CALL[ ]	/* CallFunction */";
};
width = 334;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(85,812,o),
(85,800,qs),
(86,748,o),
(87,672,o),
(88,610,o),
(89,556,o),
(89,494,o),
(89,418,o),
(89,366,qs),
(89,350,o),
(89,289,o),
(89,213,o),
(89,130,o),
(89,54,o),
(88,-7,o),
(88,-23,qs),
(88,-44,o),
(98,-58,o),
(107,-58,qs),
(222,-58,ls),
(234,-58,o),
(264,-57,o),
(290,-52,o),
(308,-42,o),
(308,-33,qs),
(308,-26,o),
(294,-16,o),
(273,-10,o),
(247,-7,o),
(234,-7,qs),
(197,-7,o),
(158,-3,o),
(158,10,qs),
(158,756,ls),
(158,763,o),
(165,785,o),
(179,786,qs),
(282,794,ls),
(293,795,o),
(310,802,o),
(310,816,qs),
(310,831,o),
(289,838,o),
(281,838,qs),
(273,838,o),
(233,838,o),
(183,837,o),
(128,836,o),
(106,835,qs),
(98,834,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
0 1 0 2 1 2 88 0 0 0 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 0 106 0 1 2 2 1 79 0 1 1 2 84 0 2 1 2 72
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
71 44 96 3 18
CALL[ ]	/* CallFunction */";
};
width = 319;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(89,812,o),
(89,800,qs),
(90,748,o),
(91,672,o),
(92,610,o),
(93,556,o),
(93,494,o),
(93,418,o),
(93,366,qs),
(93,350,o),
(93,289,o),
(93,213,o),
(93,130,o),
(93,54,o),
(92,-7,o),
(92,-23,qs),
(92,-44,o),
(102,-58,o),
(111,-58,qs),
(211,-58,ls),
(219,-58,o),
(245,-57,o),
(269,-54,o),
(287,-48,o),
(287,-43,qs),
(287,-38,o),
(268,-31,o),
(245,-28,o),
(224,-27,o),
(223,-27,qs),
(178,-27,o),
(132,-23,o),
(132,-10,qs),
(132,776,ls),
(132,783,o),
(139,805,o),
(153,806,qs),
(271,814,ls),
(282,815,o),
(289,824,o),
(289,826,qs),
(289,834,o),
(278,838,o),
(270,838,qs),
(262,838,o),
(226,838,o),
(180,837,o),
(131,836,o),
(110,835,qs),
(101,834,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 2 0 3 2 3 87 0 1 1 0 83 0 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 0 0 1 2 0 1 89 0 2 3 3 2 79 0 2 2 3 83 0 3 2 3 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
70 54 21 96 4 19
CALL[ ]	/* CallFunction */";
};
width = 298;
}
);
note = bracketleft;
unicode = 91;
},
{
glyphname = bracketright;
kernLeft = bracketright;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(150,837,o),
(96,838,o),
(54,838,o),
(45,838,qs),
(34,838,o),
(9,827,o),
(9,810,qs),
(9,793,o),
(29,784,o),
(44,782,qs),
(137,774,ls),
(150,773,o),
(158,751,o),
(158,744,qs),
(158,22,ls),
(158,9,o),
(124,5,o),
(92,5,qs),
(50,5,o),
(11,-9,o),
(11,-27,qs),
(11,-37,o),
(27,-49,o),
(53,-56,o),
(87,-58,o),
(104,-58,qs),
(230,-58,ls),
(239,-58,o),
(249,-44,o),
(249,-23,qs),
(249,1,o),
(248,97,o),
(248,209,o),
(248,323,o),
(248,366,qs),
(248,418,o),
(248,494,o),
(248,556,o),
(249,610,o),
(250,672,o),
(251,748,o),
(252,800,qs),
(252,812,o),
(239,834,o),
(231,835,qs),
(207,836,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
0 1 0 0 1 0 88 3 1 2 2 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
3 1 2 1 2 106 0 1 0 0 1 79 0 1 1 0 84 0 0 1 0 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 45 0 40 28 26 21 17 4 15
CALL[ ]	/* CallFunction */";
};
width = 334;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(136,837,o),
(86,838,o),
(46,838,o),
(38,838,qs),
(30,838,o),
(9,831,o),
(9,816,qs),
(9,802,o),
(26,795,o),
(37,794,qs),
(140,786,ls),
(154,785,o),
(161,763,o),
(161,756,qs),
(161,10,ls),
(161,-3,o),
(122,-7,o),
(85,-7,qs),
(72,-7,o),
(46,-10,o),
(25,-16,o),
(11,-26,o),
(11,-33,qs),
(11,-42,o),
(29,-52,o),
(55,-57,o),
(85,-58,o),
(97,-58,qs),
(212,-58,ls),
(221,-58,o),
(231,-44,o),
(231,-23,qs),
(231,-7,o),
(230,54,o),
(230,130,o),
(230,213,o),
(230,289,o),
(230,350,o),
(230,366,qs),
(230,418,o),
(230,494,o),
(230,556,o),
(231,610,o),
(232,672,o),
(233,748,o),
(234,800,qs),
(234,812,o),
(221,834,o),
(213,835,qs),
(190,836,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
0 1 0 0 1 0 88 3 1 2 2 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
3 1 2 1 2 106 0 1 0 0 1 79 0 1 1 0 84 0 0 1 0 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 49 0 44 32 30 23 19 4 15
CALL[ ]	/* CallFunction */";
};
width = 319;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(118,837,o),
(72,838,o),
(35,838,o),
(28,838,qs),
(20,838,o),
(9,834,o),
(9,826,qs),
(9,824,o),
(16,815,o),
(27,814,qs),
(145,806,ls),
(159,805,o),
(166,783,o),
(166,776,qs),
(166,-10,ls),
(166,-23,o),
(120,-27,o),
(75,-27,qs),
(73,-27,o),
(53,-28,o),
(30,-31,o),
(11,-38,o),
(11,-43,qs),
(11,-48,o),
(29,-54,o),
(53,-57,o),
(79,-58,o),
(87,-58,qs),
(187,-58,ls),
(196,-58,o),
(206,-44,o),
(206,-23,qs),
(206,-7,o),
(205,54,o),
(205,130,o),
(205,213,o),
(205,289,o),
(205,350,o),
(205,366,qs),
(205,418,o),
(205,494,o),
(205,556,o),
(206,610,o),
(207,672,o),
(208,748,o),
(209,800,qs),
(209,812,o),
(197,834,o),
(188,835,qs),
(167,836,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 1 0 0 1 0 87 0 2 2 3 83 4 1 3 3 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
4 1 3 0 2 1 3 2 89 0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 49 0 44 39 38 32 29 23 19 5 15
CALL[ ]	/* CallFunction */";
};
width = 298;
}
);
note = bracketright;
unicode = 93;
},
{
glyphname = quotesinglbase;
kernLeft = comma;
kernRight = comma;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(64,44,o),
(76,32,o),
(86,21,o),
(86,14,qs),
(86,6,o),
(78,-20,o),
(69,-47,o),
(61,-71,o),
(61,-76,qs),
(61,-83,o),
(78,-94,o),
(83,-94,qs),
(99,-94,o),
(125,-55,o),
(143,-4,o),
(153,46,o),
(153,58,qs),
(153,83,o),
(124,113,o),
(101,113,qs),
(81,113,o),
(54,89,o),
(54,71,qs),
(54,59,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 38 34 2 17
CALL[ ]	/* CallFunction */";
};
width = 188;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (51,0);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (12,-733);
ref = quoteright;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
46 40 24 3 4 2 1 1 66 4 1 0 0 1 2 0 1 91 0 2 3 3 2 79 0 2 2 3 83 0 3 2 3 71 2 1 28 26 22 20 6 4 1 36 2 36 5 26
CALL[ ]	/* CallFunction */";
};
width = 186;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
alignment = -1;
pos = (53,0);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (13,-733);
ref = quoteright;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 38 35 2 28
CALL[ ]	/* CallFunction */";
};
width = 183;
}
);
note = quotesinglbase;
unicode = 8218;
},
{
glyphname = quotedblbase;
kernLeft = comma;
kernRight = comma;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(64,44,o),
(76,32,o),
(86,21,o),
(86,14,qs),
(86,6,o),
(78,-20,o),
(69,-47,o),
(61,-71,o),
(61,-76,qs),
(61,-83,o),
(78,-94,o),
(83,-94,qs),
(99,-94,o),
(125,-55,o),
(143,-4,o),
(153,46,o),
(153,58,qs),
(153,83,o),
(124,113,o),
(101,113,qs),
(81,113,o),
(54,89,o),
(54,71,qs),
(54,59,o)
);
},
{
closed = 1;
nodes = (
(190,44,o),
(202,32,o),
(212,21,o),
(212,14,qs),
(212,6,o),
(204,-20,o),
(195,-47,o),
(187,-71,o),
(187,-76,qs),
(187,-83,o),
(204,-94,o),
(209,-94,qs),
(225,-94,o),
(251,-55,o),
(269,-4,o),
(279,46,o),
(279,58,qs),
(279,83,o),
(250,113,o),
(227,113,qs),
(207,113,o),
(180,89,o),
(180,71,qs),
(180,59,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 3 1 1 0 1 71 38 46 38 34 4 19
CALL[ ]	/* CallFunction */";
};
width = 314;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (51,0);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (12,-733);
ref = quoteright;
},
{
alignment = -1;
pos = (138,-733);
ref = quoteright;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
93 87 71 50 46 40 24 3 8 2 1 1 66 9 4 8 3 0 5 1 1 2 0 1 91 6 1 2 3 3 2 79 6 1 2 2 3 83 7 1 3 2 3 71 49 48 2 1 75 73 69 67 53 51 48 83 49 83 28 26 22 20 6 4 1 36 2 36 10 26
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
alignment = -1;
pos = (53,0);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (13,-733);
ref = quoteright;
},
{
alignment = -1;
pos = (139,-733);
ref = quoteright;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 3 1 1 0 1 71 38 46 38 35 4 30
CALL[ ]	/* CallFunction */";
};
width = 309;
}
);
note = quotedblbase;
unicode = 8222;
},
{
glyphname = quotedblleft;
kernLeft = quotedblleft;
kernRight = quotedblleft;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(110,787,o),
(98,799,o),
(88,810,o),
(88,817,qs),
(88,824,o),
(96,851,o),
(105,878,o),
(113,902,o),
(113,907,qs),
(113,914,o),
(96,925,o),
(91,925,qs),
(74,925,o),
(48,886,o),
(30,835,o),
(21,785,o),
(21,773,qs),
(21,748,o),
(50,718,o),
(73,718,qs),
(93,718,o),
(120,742,o),
(120,760,qs),
(120,772,o)
);
},
{
closed = 1;
nodes = (
(236,787,o),
(224,799,o),
(214,810,o),
(214,817,qs),
(214,824,o),
(222,851,o),
(231,878,o),
(239,902,o),
(239,907,qs),
(239,914,o),
(222,925,o),
(217,925,qs),
(200,925,o),
(174,886,o),
(156,835,o),
(147,785,o),
(147,773,qs),
(147,748,o),
(176,718,o),
(199,718,qs),
(219,718,o),
(246,742,o),
(246,760,qs),
(246,772,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
3 1 1 0 0 1 79 3 1 1 1 0 83 2 1 0 1 0 71 38 46 38 34 4 19
CALL[ ]	/* CallFunction */";
};
width = 285;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (34,710);
ref = .ttfautohint;
},
{
alignment = -1;
angle = 180;
pos = (160,1565);
ref = quoteright;
},
{
alignment = -1;
angle = 180;
pos = (286,1565);
ref = quoteright;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
93 87 71 50 46 40 24 3 8 1 2 1 66 7 1 3 6 1 2 1 3 2 91 5 1 1 0 0 1 79 5 1 1 1 0 83 9 4 8 3 0 1 0 71 49 48 2 1 75 73 69 67 53 51 48 83 49 83 28 26 22 20 6 4 1 36 2 36 10 26
CALL[ ]	/* CallFunction */";
};
width = 282;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
alignment = -1;
pos = (38,715);
ref = .ttfautohint;
},
{
alignment = -1;
angle = 180;
pos = (156,1565);
ref = quoteright;
},
{
alignment = -1;
angle = 180;
pos = (282,1565);
ref = quoteright;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
3 1 1 0 0 1 79 3 1 1 1 0 83 2 1 0 1 0 71 38 46 38 35 4 30
CALL[ ]	/* CallFunction */";
};
width = 278;
}
);
note = quotedblleft;
unicode = 8220;
},
{
glyphname = quotedblright;
kernLeft = quoteright;
kernRight = quoteright;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(53,778,o),
(65,766,o),
(75,755,o),
(75,748,qs),
(75,740,o),
(67,714,o),
(58,687,o),
(50,663,o),
(50,658,qs),
(50,651,o),
(67,640,o),
(72,640,qs),
(88,640,o),
(114,679,o),
(132,730,o),
(142,780,o),
(142,792,qs),
(142,817,o),
(113,847,o),
(90,847,qs),
(70,847,o),
(43,823,o),
(43,805,qs),
(43,793,o)
);
},
{
closed = 1;
nodes = (
(179,778,o),
(191,766,o),
(201,755,o),
(201,748,qs),
(201,740,o),
(193,714,o),
(184,687,o),
(176,663,o),
(176,658,qs),
(176,651,o),
(193,640,o),
(198,640,qs),
(214,640,o),
(240,679,o),
(258,730,o),
(268,780,o),
(268,792,qs),
(268,817,o),
(239,847,o),
(216,847,qs),
(196,847,o),
(169,823,o),
(169,805,qs),
(169,793,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
3 1 1 1 0 83 2 1 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 3 1 1 0 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
38 46 38 34 4 19
CALL[ ]	/* CallFunction */";
};
width = 287;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (39,647);
ref = .ttfautohint;
},
{
alignment = -1;
ref = quoteright;
},
{
alignment = -1;
pos = (126,0);
ref = quoteright;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
93 87 71 50 46 40 24 3 8 2 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
6 1 2 7 1 3 2 3 87 5 1 1 1 0 83 9 4 8 3 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
9 4 8 3 0 5 1 1 2 0 1 91 6 1 2 3 3 2 79 6 1 2 2 3 83 7 1 3 2 3 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
49 48 2 1 75 73 69 67 53 51 48 83 49 83 28 26 22 20 6 4 1 36 2 36 10 26
CALL[ ]	/* CallFunction */";
};
width = 283;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
alignment = -1;
pos = (40,685);
ref = .ttfautohint;
},
{
alignment = -1;
ref = quoteright;
},
{
alignment = -1;
pos = (126,0);
ref = quoteright;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
3 1 1 1 0 83 2 1 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 3 1 1 0 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
38 46 38 35 4 30
CALL[ ]	/* CallFunction */";
};
width = 278;
}
);
note = quotedblright;
unicode = 8221;
},
{
glyphname = quoteleft;
kernLeft = quotedblleft;
kernRight = quotedblleft;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(110,787,o),
(98,799,o),
(88,810,o),
(88,817,qs),
(88,824,o),
(96,851,o),
(105,878,o),
(113,902,o),
(113,907,qs),
(113,914,o),
(96,925,o),
(91,925,qs),
(74,925,o),
(48,886,o),
(30,835,o),
(21,785,o),
(21,773,qs),
(21,748,o),
(50,718,o),
(73,718,qs),
(93,718,o),
(120,742,o),
(120,760,qs),
(120,772,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71 38 34 2 17
CALL[ ]	/* CallFunction */";
};
width = 159;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (34,710);
ref = .ttfautohint;
},
{
alignment = -1;
angle = 180;
pos = (160,1565);
ref = quoteright;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
46 40 24 3 4 1 2 1 66 0 3 0 2 1 3 2 91 0 1 0 0 1 79 0 1 1 0 83 4 1 0 1 0 71 2 1 28 26 22 20 6 4 1 36 2 36 5 26
CALL[ ]	/* CallFunction */";
};
width = 156;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
alignment = -1;
pos = (38,715);
ref = .ttfautohint;
},
{
alignment = -1;
angle = 180;
pos = (156,1565);
ref = quoteright;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71 38 35 2 28
CALL[ ]	/* CallFunction */";
};
width = 152;
}
);
note = quoteleft;
unicode = 8216;
},
{
glyphname = quoteright;
kernLeft = quoteright;
kernRight = quoteright;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(53,778,o),
(65,766,o),
(75,755,o),
(75,748,qs),
(75,740,o),
(67,714,o),
(58,687,o),
(50,663,o),
(50,658,qs),
(50,651,o),
(67,640,o),
(72,640,qs),
(88,640,o),
(114,679,o),
(132,730,o),
(142,780,o),
(142,792,qs),
(142,817,o),
(113,847,o),
(90,847,qs),
(70,847,o),
(43,823,o),
(43,805,qs),
(43,793,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 0 83 0 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
38 34 2 17
CALL[ ]	/* CallFunction */";
};
width = 161;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(47,836,o),
(40,812,o),
(39,788,o),
(39,783,qs),
(39,776,o),
(41,732,o),
(49,684,o),
(64,647,o),
(77,647,qs),
(89,647,o),
(103,697,o),
(108,727,q),
(100,710,o),
(82,685,o),
(71,685,qs),
(66,685,o),
(55,694,o),
(55,700,qs),
(55,704,o),
(61,723,o),
(68,745,o),
(74,766,o),
(74,772,qs),
(74,777,o),
(66,785,o),
(56,795,o),
(48,807,o),
(48,816,qs),
(48,830,o),
(68,850,o),
(84,850,qs),
(92,850,o),
(100,847,q),
(90,855,o),
(76,855,qs),
(62,855,o)
);
},
{
closed = 1;
nodes = (
(100,847,q),
(111,838,o),
(114,809,o),
(114,798,qs),
(114,795,o),
(111,753,o),
(108,727,q),
(116,749,o),
(126,795,o),
(126,806,qs),
(126,837,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
45 39 23 2 4 2 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 2 0 3 2 3 87 0 1 1 0 83 4 1 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
4 1 0 0 1 2 0 1 91 0 2 3 3 2 79 0 2 2 3 83 0 3 2 3 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
1 0 27 25 21 19 5 3 0 35 1 35 5 15
CALL[ ]	/* CallFunction */";
};
width = 157;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(48,795,o),
(58,785,o),
(66,777,o),
(66,772,qs),
(66,766,o),
(60,745,o),
(53,723,o),
(47,704,o),
(47,700,qs),
(47,694,o),
(58,685,o),
(63,685,qs),
(76,685,o),
(96,715,o),
(110,756,o),
(118,796,o),
(118,806,qs),
(118,826,o),
(95,850,o),
(76,850,qs),
(60,850,o),
(40,830,o),
(40,816,qs),
(40,807,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 0 83 0 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
38 34 2 17
CALL[ ]	/* CallFunction */";
};
width = 152;
}
);
note = quoteright;
unicode = 8217;
},
{
glyphname = guillemotleft;
kernLeft = guillemotleft;
kernRight = guillemotleft;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(203,538,o),
(181,538,qs),
(174,538,o),
(147,518,o),
(115,488,o),
(82,450,o),
(55,415,o),
(38,385,o),
(38,378,qs),
(38,371,o),
(55,343,o),
(82,308,o),
(115,270,o),
(147,239,o),
(174,219,o),
(181,219,qs),
(203,219,o),
(217,233,o),
(217,241,qs),
(217,247,o),
(200,276,o),
(174,315,o),
(144,358,o),
(132,378,q),
(144,398,o),
(174,441,o),
(200,480,o),
(217,510,o),
(217,516,qs),
(217,524,o)
);
},
{
closed = 1;
nodes = (
(346,538,o),
(324,538,qs),
(317,538,o),
(290,518,o),
(258,488,o),
(225,450,o),
(198,415,o),
(181,385,o),
(181,378,qs),
(181,371,o),
(198,343,o),
(225,308,o),
(258,270,o),
(290,239,o),
(317,219,o),
(324,219,qs),
(346,219,o),
(360,233,o),
(360,241,qs),
(360,247,o),
(343,276,o),
(317,315,o),
(287,358,o),
(275,378,q),
(287,398,o),
(317,441,o),
(343,480,o),
(360,510,o),
(360,516,qs),
(360,524,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
35 5 2 0 1 1 66 3 1 1 0 0 1 79 3 1 1 1 0 83 2 1 0 1 0 71 44 46 44 44 4 19
CALL[ ]	/* CallFunction */";
};
width = 432;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (41,224);
ref = .ttfautohint;
},
{
alignment = -1;
ref = guilsinglleft;
},
{
alignment = -1;
pos = (143,0);
ref = guilsinglleft;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
32 6 2 0 1 1 66 3 1 1 0 0 1 79 3 1 1 1 0 83 2 1 0 1 0 71 40 46 40 45 4 30
CALL[ ]	/* CallFunction */";
};
width = 406;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
alignment = -1;
pos = (45,232);
ref = .ttfautohint;
},
{
alignment = -1;
ref = guilsinglleft;
},
{
alignment = -1;
pos = (143,0);
ref = guilsinglleft;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
32 6 2 0 1 1 66 3 1 1 0 0 1 79 3 1 1 1 0 83 2 1 0 1 0 71 42 44 42 44 4 30
CALL[ ]	/* CallFunction */";
};
width = 369;
}
);
note = guillemotleft;
unicode = 171;
},
{
glyphname = guillemotright;
kernLeft = guillemotright;
kernRight = guillemotright;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(232,480,o),
(258,441,o),
(288,398,o),
(300,378,q),
(288,358,o),
(258,315,o),
(232,276,o),
(215,247,o),
(215,241,qs),
(215,236,o),
(229,219,o),
(251,219,qs),
(258,219,o),
(285,239,o),
(317,270,o),
(350,308,o),
(377,343,o),
(394,371,o),
(394,378,qs),
(394,385,o),
(377,415,o),
(350,450,o),
(317,488,o),
(285,518,o),
(258,538,o),
(251,538,qs),
(229,538,o),
(215,521,o),
(215,516,qs),
(215,510,o)
);
},
{
closed = 1;
nodes = (
(89,480,o),
(115,441,o),
(145,398,o),
(157,378,q),
(145,358,o),
(115,315,o),
(89,276,o),
(72,247,o),
(72,241,qs),
(72,236,o),
(86,219,o),
(108,219,qs),
(115,219,o),
(142,239,o),
(174,270,o),
(207,308,o),
(234,343,o),
(251,371,o),
(251,378,qs),
(251,385,o),
(234,415,o),
(207,450,o),
(174,488,o),
(142,518,o),
(115,538,o),
(108,538,qs),
(86,538,o),
(72,521,o),
(72,516,qs),
(72,510,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
55 25 2 1 0 1 66 2 1 0 1 1 0 79 2 1 0 0 1 83 3 1 1 0 1 71 44 46 44 34 4 19
CALL[ ]	/* CallFunction */";
};
width = 432;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(224,480,o),
(250,441,o),
(280,398,o),
(292,378,q),
(280,358,o),
(250,315,o),
(224,276,o),
(207,247,o),
(207,241,qs),
(207,236,o),
(217,224,o),
(233,224,qs),
(243,224,o),
(287,265,o),
(331,318,o),
(365,368,o),
(365,378,qs),
(365,389,o),
(331,440,o),
(287,493,o),
(243,533,o),
(233,533,qs),
(217,533,o),
(207,521,o),
(207,516,qs),
(207,510,o)
);
},
{
closed = 1;
nodes = (
(81,480,o),
(107,441,o),
(137,398,o),
(149,378,q),
(137,358,o),
(107,315,o),
(81,276,o),
(64,247,o),
(64,241,qs),
(64,236,o),
(74,224,o),
(90,224,qs),
(100,224,o),
(144,265,o),
(188,318,o),
(222,368,o),
(222,378,qs),
(222,389,o),
(188,440,o),
(144,493,o),
(100,533,o),
(90,533,qs),
(74,533,o),
(64,521,o),
(64,516,qs),
(64,510,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
47 21 2 1 0 1 66 2 1 0 1 1 0 79 2 1 0 0 1 83 3 1 1 0 1 71 40 46 40 34 4 19
CALL[ ]	/* CallFunction */";
};
width = 406;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(213,480,o),
(239,441,o),
(269,398,o),
(281,378,q),
(269,358,o),
(239,315,o),
(213,276,o),
(196,247,o),
(196,241,qs),
(196,232,o),
(207,232,qs),
(216,232,o),
(255,270,o),
(294,320,o),
(324,368,o),
(324,378,qs),
(324,385,o),
(310,413,o),
(288,445,o),
(261,479,o),
(235,507,o),
(213,525,o),
(207,525,qs),
(196,525,o),
(196,516,qs),
(196,510,o)
);
},
{
closed = 1;
nodes = (
(70,480,o),
(96,441,o),
(126,398,o),
(138,378,q),
(126,358,o),
(96,315,o),
(70,276,o),
(53,247,o),
(53,241,qs),
(53,232,o),
(64,232,qs),
(73,232,o),
(112,270,o),
(151,320,o),
(181,368,o),
(181,378,qs),
(181,385,o),
(167,413,o),
(145,445,o),
(118,479,o),
(92,507,o),
(70,525,o),
(64,525,qs),
(53,525,o),
(53,516,qs),
(53,510,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
47 21 2 1 0 1 66 2 1 0 1 1 0 79 2 1 0 0 1 83 3 1 1 0 1 71 42 44 42 33 4 19
CALL[ ]	/* CallFunction */";
};
width = 369;
}
);
note = guillemotright;
unicode = 187;
},
{
glyphname = guilsinglleft;
kernLeft = guillemotleft;
kernRight = guillemotleft;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(203,538,o),
(181,538,qs),
(174,538,o),
(147,518,o),
(115,488,o),
(82,450,o),
(55,415,o),
(38,385,o),
(38,378,qs),
(38,371,o),
(55,343,o),
(82,308,o),
(115,270,o),
(147,239,o),
(174,219,o),
(181,219,qs),
(203,219,o),
(217,233,o),
(217,241,qs),
(217,247,o),
(200,276,o),
(174,315,o),
(144,358,o),
(132,378,q),
(144,398,o),
(174,441,o),
(200,480,o),
(217,510,o),
(217,516,qs),
(217,524,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
5 1 0 1 1 66 0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71 44 44 2 17
CALL[ ]	/* CallFunction */";
};
width = 289;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(189,533,o),
(173,533,qs),
(163,533,o),
(119,493,o),
(75,440,o),
(41,389,o),
(41,378,qs),
(41,368,o),
(75,318,o),
(119,265,o),
(163,224,o),
(173,224,qs),
(189,224,o),
(199,236,o),
(199,241,qs),
(199,247,o),
(182,276,o),
(156,315,o),
(126,358,o),
(114,378,q),
(126,398,o),
(156,441,o),
(182,480,o),
(199,510,o),
(199,516,qs),
(199,521,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
5 1 0 1 1 66 0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71 40 44 2 17
CALL[ ]	/* CallFunction */";
};
width = 263;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(162,525,qs),
(156,525,o),
(134,507,o),
(108,479,o),
(81,445,o),
(59,413,o),
(45,385,o),
(45,378,qs),
(45,368,o),
(75,320,o),
(114,270,o),
(153,232,o),
(162,232,qs),
(173,232,o),
(173,241,qs),
(173,247,o),
(156,276,o),
(130,315,o),
(100,358,o),
(88,378,q),
(100,398,o),
(130,441,o),
(156,480,o),
(173,510,o),
(173,516,qs),
(173,525,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
5 1 0 1 1 66 0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71 42 43 2 17
CALL[ ]	/* CallFunction */";
};
width = 226;
}
);
note = guilsinglleft;
unicode = 8249;
},
{
glyphname = guilsinglright;
kernLeft = guillemotright;
kernRight = guillemotright;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(89,480,o),
(115,441,o),
(145,398,o),
(157,378,q),
(145,358,o),
(115,315,o),
(89,276,o),
(72,247,o),
(72,241,qs),
(72,233,o),
(86,219,o),
(108,219,qs),
(115,219,o),
(142,239,o),
(174,270,o),
(207,308,o),
(234,343,o),
(251,371,o),
(251,378,qs),
(251,385,o),
(234,415,o),
(207,450,o),
(174,488,o),
(142,518,o),
(115,538,o),
(108,538,qs),
(86,538,o),
(72,524,o),
(72,516,qs),
(72,510,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
25 1 1 0 1 66 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 44 34 2 17
CALL[ ]	/* CallFunction */";
};
width = 289;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (64,224);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (263,0);
ref = guilsinglleft;
scale = (-0.9999,1);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
6 1 0 1 1 66 0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71 40 45 2 28
CALL[ ]	/* CallFunction */";
};
width = 263;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
alignment = -1;
pos = (53,232);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (226,0);
ref = guilsinglleft;
scale = (-0.9999,1);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
6 1 0 1 1 66 0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71 42 44 2 28
CALL[ ]	/* CallFunction */";
};
width = 226;
}
);
note = guilsinglright;
unicode = 8250;
},
{
glyphname = quotedbl;
kernLeft = quotedbl;
kernRight = quotedbl;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,840,o),
(37,816,o),
(34,791,o),
(34,783,qs),
(34,761,o),
(39,711,o),
(51,669,o),
(70,641,o),
(83,641,qs),
(94,641,o),
(112,678,o),
(124,729,o),
(130,782,o),
(130,798,qs),
(130,807,o),
(127,828,o),
(117,846,o),
(98,858,o),
(82,858,qs),
(65,858,o)
);
},
{
closed = 1;
nodes = (
(175,840,o),
(166,816,o),
(163,791,o),
(163,783,qs),
(163,761,o),
(168,711,o),
(180,669,o),
(199,641,o),
(212,641,qs),
(223,641,o),
(241,678,o),
(253,729,o),
(259,782,o),
(259,798,qs),
(259,807,o),
(256,828,o),
(246,846,o),
(227,858,o),
(211,858,qs),
(194,858,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
3 1 1 1 0 83 5 2 4 3 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
5 2 4 3 0 1 1 0 79 5 2 4 3 0 0 1 83 3 1 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
21 20 1 0 31 29 20 39 21 39 11 9 0 19 1 19 6 15
CALL[ ]	/* CallFunction */";
};
width = 292;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (39,647);
ref = .ttfautohint;
},
{
alignment = -1;
ref = quotesingle;
},
{
alignment = -1;
pos = (129,0);
ref = quotesingle;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
3 1 1 1 0 83 5 2 4 3 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
5 2 4 3 0 1 1 0 79 5 2 4 3 0 0 1 83 3 1 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
24 23 2 1 36 34 23 44 24 44 14 12 1 22 2 22 6 26
CALL[ ]	/* CallFunction */";
};
width = 281;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
alignment = -1;
pos = (46,657);
ref = .ttfautohint;
},
{
alignment = -1;
ref = quotesingle;
},
{
alignment = -1;
pos = (129,0);
ref = quotesingle;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
3 1 1 1 0 83 5 2 4 3 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
5 2 4 3 0 1 1 0 79 5 2 4 3 0 0 1 83 3 1 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
22 21 2 1 32 30 21 40 22 40 12 10 1 20 2 20 6 26
CALL[ ]	/* CallFunction */";
};
width = 265;
}
);
note = quotedbl;
unicode = 34;
},
{
glyphname = quotesingle;
kernLeft = quotedbl;
kernRight = quotedbl;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,840,o),
(37,816,o),
(34,791,o),
(34,783,qs),
(34,761,o),
(39,711,o),
(51,669,o),
(70,641,o),
(83,641,qs),
(94,641,o),
(112,678,o),
(124,729,o),
(130,782,o),
(130,798,qs),
(130,807,o),
(127,828,o),
(117,846,o),
(98,858,o),
(82,858,qs),
(65,858,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 1 1 0 83 2 1 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
1 0 11 9 0 19 1 19 3 15
CALL[ ]	/* CallFunction */";
};
width = 163;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(47,836,o),
(40,812,o),
(39,788,o),
(39,783,qs),
(39,776,o),
(41,732,o),
(49,684,o),
(64,647,o),
(77,647,qs),
(84,647,o),
(96,668,o),
(104,700,o),
(109,738,o),
(113,772,o),
(114,796,o),
(114,798,qs),
(114,805,o),
(113,825,o),
(106,843,o),
(90,855,o),
(76,855,qs),
(62,855,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 1 1 0 83 2 1 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
1 0 13 11 0 21 1 21 3 15
CALL[ ]	/* CallFunction */";
};
width = 152;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(51,833,o),
(47,810,o),
(46,788,o),
(46,783,qs),
(46,776,o),
(47,735,o),
(52,691,o),
(61,657,o),
(69,657,qs),
(76,657,o),
(84,699,o),
(89,750,o),
(91,795,o),
(91,798,qs),
(91,805,o),
(90,824,o),
(86,839,o),
(77,850,o),
(68,850,qs),
(60,850,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 1 1 0 83 2 1 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
1 0 11 9 0 19 1 19 3 15
CALL[ ]	/* CallFunction */";
};
width = 136;
}
);
note = quotesingle;
unicode = 39;
},
{
glyphname = florin;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(375,405,o),
(382,411,o),
(394,411,qs),
(398,411,o),
(417,410,o),
(437,410,o),
(455,409,o),
(460,409,qs),
(466,409,o),
(481,412,o),
(496,421,o),
(506,436,o),
(506,447,qs),
(506,460,o),
(497,476,o),
(484,485,o),
(469,487,o),
(463,487,qs),
(385,487,ls),
(380,487,o),
(379,496,o),
(379,516,qs),
(379,525,o),
(383,567,o),
(395,619,o),
(419,675,o),
(457,721,o),
(514,751,o),
(554,751,qs),
(568,751,o),
(596,743,o),
(596,726,qs),
(596,715,o),
(580,697,o),
(563,692,qs),
(557,690,o),
(547,679,o),
(547,664,qs),
(547,653,o),
(571,630,o),
(595,630,qs),
(608,630,o),
(636,642,o),
(657,666,o),
(671,700,o),
(671,722,qs),
(671,735,o),
(661,771,o),
(634,803,o),
(587,825,o),
(550,825,qs),
(493,825,o),
(411,789,o),
(354,732,o),
(318,661,o),
(297,590,o),
(289,526,o),
(287,505,qs),
(286,492,o),
(280,487,o),
(271,487,qs),
(258,487,ls),
(241,487,o),
(209,471,o),
(209,451,qs),
(209,427,o),
(237,411,o),
(254,411,qs),
(270,411,ls),
(278,411,o),
(281,399,o),
(281,385,qs),
(281,291,o),
(269,130,o),
(260,45,qs),
(254,-8,o),
(238,-75,o),
(214,-113,o),
(182,-127,o),
(162,-127,qs),
(143,-127,o),
(117,-117,o),
(101,-103,o),
(94,-90,o),
(94,-87,qs),
(94,-75,o),
(113,-66,o),
(135,-60,o),
(154,-50,o),
(154,-38,qs),
(154,-20,o),
(132,5,o),
(95,5,qs),
(54,5,o),
(24,-37,o),
(24,-66,qs),
(24,-106,o),
(56,-159,o),
(101,-191,o),
(149,-204,o),
(166,-204,qs),
(213,-204,o),
(280,-174,o),
(324,-111,o),
(347,-12,o),
(352,56,qs),
(375,400,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 1 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 6 7 4 7 6 96 0 1 3 2 3 1 2 104 0 7 7 5 83 0 5 5 12 67 9 1 3 3 4 83 8 1 4 4 23 67 0 2 2 0 83 0 0 0 17 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 6 7 4 7 6 4 104 0 1 3 2 3 1 2 104 0 7 7 5 83 0 5 5 12 67 9 1 3 3 4 83 8 1 4 4 23 67 0 2 2 0 83 0 0 0 17 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 6 7 4 7 6 4 104 0 1 3 2 3 1 2 104 8 1 4 9 1 3 1 4 3 91 0 2 0 0 2 0 87 0 7 7 5 83 0 5 5 12 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 6 7 4 7 6 4 104 0 1 3 2 3 1 2 104 8 1 4 9 1 3 1 4 3 91 0 2 0 0 2 0 87 0 7 7 5 83 0 5 5 14 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
104 97 56 42 40 40 52 57 43 38 36 10 24
CALL[ ]	/* CallFunction */";
};
width = 692;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(359,414,o),
(366,420,o),
(378,420,qs),
(382,420,o),
(401,419,o),
(421,419,o),
(439,418,o),
(444,418,qs),
(455,418,o),
(483,430,o),
(483,447,qs),
(483,467,o),
(458,478,o),
(447,478,qs),
(369,478,ls),
(362,478,o),
(362,488,qs),
(362,507,o),
(366,564,o),
(379,626,o),
(402,688,o),
(441,738,o),
(498,769,o),
(538,769,qs),
(564,769,o),
(594,751,o),
(594,735,qs),
(594,724,o),
(582,712,o),
(568,706,qs),
(561,703,o),
(552,691,o),
(552,678,qs),
(552,665,o),
(573,644,o),
(593,644,qs),
(616,644,o),
(655,685,o),
(655,722,qs),
(655,735,o),
(645,771,o),
(618,803,o),
(571,825,o),
(534,825,qs),
(481,825,o),
(406,790,o),
(353,733,o),
(321,660,o),
(301,586,o),
(292,517,o),
(290,491,qs),
(289,486,o),
(284,478,o),
(276,478,qs),
(242,478,ls),
(225,478,o),
(200,467,o),
(200,452,qs),
(200,435,o),
(221,420,o),
(238,420,qs),
(275,420,ls),
(283,420,o),
(286,408,o),
(286,394,qs),
(286,302,o),
(275,130,o),
(265,45,qs),
(258,-15,o),
(239,-90,o),
(214,-131,o),
(183,-145,o),
(164,-145,qs),
(132,-145,o),
(97,-132,o),
(81,-115,o),
(78,-101,o),
(78,-100,qs),
(78,-88,o),
(96,-81,o),
(118,-76,o),
(136,-66,o),
(136,-52,qs),
(136,-37,o),
(113,-14,o),
(89,-14,qs),
(62,-14,o),
(23,-49,o),
(23,-83,qs),
(23,-116,o),
(49,-161,o),
(89,-190,o),
(135,-203,o),
(155,-203,qs),
(197,-203,o),
(261,-175,o),
(305,-113,o),
(331,-15,o),
(336,56,qs),
(359,409,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 6 7 4 7 6 4 104 0 1 3 2 3 1 2 104 0 7 7 5 83 0 5 5 12 67 9 1 3 3 4 83 8 1 4 4 23 67 0 2 2 0 83 0 0 0 17 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 6 7 4 7 6 4 104 0 1 3 2 3 1 2 104 8 1 4 9 1 3 1 4 3 91 0 7 7 5 83 0 5 5 12 67 0 2 2 0 83 0 0 0 17 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 6 7 4 7 6 4 104 0 1 3 2 3 1 2 104 8 1 4 9 1 3 1 4 3 91 0 2 0 0 2 0 87 0 7 7 5 83 0 5 5 12 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 6 7 4 7 6 4 104 0 1 3 2 3 1 2 104 8 1 4 9 1 3 1 4 3 91 0 2 0 0 2 0 87 0 7 7 5 83 0 5 5 14 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
97 90 55 42 38 40 52 57 43 38 36 10 24
CALL[ ]	/* CallFunction */";
};
width = 676;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(336,429,o),
(343,435,o),
(355,435,qs),
(359,435,o),
(378,434,o),
(398,434,o),
(416,433,o),
(421,433,qs),
(432,433,o),
(450,439,o),
(450,447,qs),
(450,455,o),
(434,463,o),
(424,463,qs),
(346,463,ls),
(341,463,o),
(339,473,o),
(339,488,qs),
(339,509,o),
(343,572,o),
(356,641,o),
(379,710,o),
(418,765,o),
(475,799,o),
(515,799,qs),
(536,799,o),
(565,789,o),
(583,775,o),
(591,757,o),
(591,750,qs),
(591,743,o),
(584,735,o),
(575,729,qs),
(567,723,o),
(559,711,o),
(559,701,qs),
(559,686,o),
(576,667,o),
(590,667,qs),
(608,667,o),
(632,698,o),
(632,722,qs),
(632,735,o),
(622,771,o),
(595,803,o),
(548,825,o),
(511,825,qs),
(465,825,o),
(399,790,o),
(353,733,o),
(324,660,o),
(307,586,o),
(299,517,o),
(297,491,qs),
(296,480,o),
(291,463,o),
(283,463,qs),
(219,463,ls),
(202,463,o),
(187,460,o),
(187,453,qs),
(187,447,o),
(198,435,o),
(215,435,qs),
(282,435,ls),
(290,435,o),
(293,423,o),
(293,409,qs),
(293,220,o),
(272,45,qs),
(264,-25,o),
(242,-111,o),
(212,-159,o),
(170,-175,o),
(141,-175,qs),
(109,-175,o),
(74,-162,o),
(58,-146,o),
(55,-132,o),
(55,-130,qs),
(55,-118,o),
(72,-111,o),
(93,-105,o),
(111,-92,o),
(111,-75,qs),
(111,-64,o),
(104,-52,o),
(94,-46,o),
(84,-45,o),
(81,-45,qs),
(77,-45,o),
(58,-50,o),
(38,-65,o),
(22,-91,o),
(22,-112,qs),
(22,-154,o),
(89,-202,o),
(139,-202,qs),
(172,-202,o),
(231,-179,o),
(278,-121,o),
(308,-21,o),
(313,56,qs),
(336,424,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 6 7 4 7 6 4 104 0 1 3 2 3 1 2 104 0 7 7 5 83 0 5 5 12 67 9 1 3 3 4 83 8 1 4 4 23 67 0 2 2 0 83 0 0 0 17 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 6 7 4 7 6 4 104 0 1 3 2 3 1 2 104 8 1 4 9 1 3 1 4 3 91 0 7 7 5 83 0 5 5 12 67 0 2 2 0 83 0 0 0 17 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 6 7 4 7 6 4 104 0 1 3 2 3 1 2 104 8 1 4 9 1 3 1 4 3 91 0 2 0 0 2 0 87 0 7 7 5 83 0 5 5 12 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 6 7 4 7 6 4 104 0 1 3 2 3 1 2 104 8 1 4 9 1 3 1 4 3 91 0 2 0 0 2 0 87 0 7 7 5 83 0 5 5 14 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
101 94 56 44 38 40 52 56 45 38 36 10 24
CALL[ ]	/* CallFunction */";
};
width = 653;
}
);
note = florin;
unicode = 402;
},
{
glyphname = at;
kernLeft = at;
kernRight = at;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(568,168,o),
(552,144,o),
(534,133,o),
(530,133,qs),
(519,133,o),
(506,144,o),
(504,174,qs),
(503,191,o),
(503,221,o),
(503,237,qs),
(503,275,o),
(505,337,o),
(505,376,qs),
(505,387,o),
(484,411,o),
(463,411,qs),
(445,411,o),
(419,394,o),
(419,380,qs),
(419,374,o),
(420,368,o),
(421,360,q),
(405,384,o),
(356,399,o),
(335,399,qs),
(299,399,o),
(238,370,o),
(193,321,o),
(168,254,o),
(168,215,qs),
(168,180,o),
(190,120,o),
(231,75,o),
(287,49,o),
(321,49,qs),
(358,49,o),
(409,77,o),
(425,97,q),
(431,82,o),
(462,54,o),
(496,54,qs),
(529,54,o),
(591,73,o),
(637,117,o),
(665,187,o),
(665,237,qs),
(665,298,o),
(622,409,o),
(541,492,o),
(422,541,o),
(344,541,qs),
(278,541,o),
(166,494,o),
(85,410,o),
(40,295,o),
(40,227,qs),
(40,158,o),
(86,44,o),
(163,-39,o),
(265,-84,o),
(321,-84,qs),
(339,-84,o),
(368,-70,o),
(368,-48,qs),
(368,-4,o),
(322,-4,qs),
(281,-4,o),
(210,30,o),
(157,91,o),
(127,176,o),
(127,227,qs),
(127,278,o),
(158,363,o),
(215,425,o),
(296,459,o),
(345,459,qs),
(405,459,o),
(494,424,o),
(553,363,o),
(581,282,o),
(581,236,qs),
(581,207,o)
);
},
{
closed = 1;
nodes = (
(419,212,o),
(410,179,o),
(389,149,o),
(353,127,o),
(326,127,qs),
(296,127,o),
(261,172,o),
(261,216,qs),
(261,265,o),
(304,321,o),
(333,321,qs),
(377,321,o),
(419,269,o),
(419,231,qs),
(419,223,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
59 1 9 6 43 1 4 8 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
59 1 9 6 43 1 4 10 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 3 0 0 6 3 0 91 7 1 6 0 9 8 6 9 91 10 1 8 5 1 4 1 8 4 92 0 1 2 2 1 79 0 1 1 2 83 0 2 1 2 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 7 0 6 0 7 6 104 0 3 0 0 7 3 0 91 0 6 0 9 8 6 9 91 10 1 8 5 1 4 1 8 4 92 0 1 2 2 1 79 0 1 1 2 83 0 2 1 2 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 7 0 6 0 7 6 104 0 3 0 0 7 3 0 91 0 6 0 9 8 6 9 91 0 8 10 4 8 79 0 10 5 1 4 1 10 4 91 0 1 2 2 1 79 0 1 1 2 83 0 2 1 2 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 7 0 6 0 7 6 104 0 3 0 0 7 3 0 91 0 6 0 9 8 6 9 91 0 8 0 4 5 8 4 92 0 10 0 5 1 10 5 91 0 1 2 2 1 79 0 1 1 2 83 0 2 1 2 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
92 90 86 84 42 39 40 36 40 40 35 40 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 704;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(571,156,o),
(552,128,o),
(530,115,o),
(520,115,qs),
(502,115,o),
(486,130,o),
(486,156,qs),
(486,177,o),
(484,217,o),
(484,237,qs),
(484,275,o),
(487,343,o),
(487,382,qs),
(487,392,o),
(470,411,o),
(455,411,qs),
(442,411,o),
(422,396,o),
(422,384,qs),
(422,378,o),
(423,368,o),
(424,360,q),
(408,384,o),
(359,399,o),
(338,399,qs),
(302,399,o),
(241,370,o),
(196,321,o),
(171,254,o),
(171,215,qs),
(171,180,o),
(193,120,o),
(234,75,o),
(290,49,o),
(324,49,qs),
(361,49,o),
(412,77,o),
(428,97,q),
(434,82,o),
(465,54,o),
(499,54,qs),
(528,54,o),
(582,73,o),
(623,117,o),
(647,187,o),
(647,237,qs),
(647,298,o),
(607,409,o),
(531,492,o),
(419,541,o),
(347,541,qs),
(281,541,o),
(169,494,o),
(88,410,o),
(43,295,o),
(43,227,qs),
(43,158,o),
(89,44,o),
(166,-39,o),
(268,-84,o),
(324,-84,qs),
(342,-84,o),
(364,-71,o),
(364,-55,qs),
(364,-39,o),
(346,-22,o),
(325,-22,qs),
(280,-22,o),
(201,14,o),
(142,80,o),
(109,171,o),
(109,227,qs),
(109,282,o),
(143,374,o),
(205,440,o),
(293,477,o),
(346,477,qs),
(406,477,o),
(496,439,o),
(555,373,o),
(584,285,o),
(584,236,qs),
(584,203,o)
);
},
{
closed = 1;
nodes = (
(422,193,o),
(413,160,o),
(392,130,o),
(356,109,o),
(329,109,qs),
(289,109,o),
(243,164,o),
(243,216,qs),
(243,273,o),
(298,339,o),
(336,339,qs),
(380,339,o),
(422,287,o),
(422,243,qs),
(422,205,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
60 1 9 6 44 1 4 8 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
60 1 9 6 44 1 4 10 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 7 0 6 0 7 6 104 0 3 0 0 7 3 0 91 0 6 0 9 8 6 9 91 10 1 8 5 1 4 1 8 4 92 0 1 2 2 1 79 0 1 1 2 83 0 2 1 2 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 7 0 6 0 7 6 104 0 3 0 0 7 3 0 91 0 6 0 9 8 6 9 91 0 8 10 4 8 79 0 10 5 1 4 1 10 4 91 0 1 2 2 1 79 0 1 1 2 83 0 2 1 2 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 7 0 6 0 7 6 104 0 3 0 0 7 3 0 91 0 6 0 9 8 6 9 91 0 8 0 4 5 8 4 92 0 10 0 5 1 10 5 91 0 1 2 2 1 79 0 1 1 2 83 0 2 1 2 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
93 91 87 85 42 39 40 36 40 40 36 40 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 688;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(575,137,o),
(553,101,o),
(523,85,o),
(506,85,qs),
(489,85,o),
(471,97,o),
(466,105,qs),
(461,114,o),
(460,126,qs),
(459,154,o),
(458,209,o),
(458,237,qs),
(458,314,o),
(461,392,qs),
(461,400,o),
(450,411,o),
(444,411,qs),
(438,411,o),
(426,399,o),
(426,391,qs),
(426,385,o),
(427,368,o),
(428,360,q),
(412,384,o),
(363,399,o),
(342,399,qs),
(306,399,o),
(245,370,o),
(200,321,o),
(175,254,o),
(175,215,qs),
(175,180,o),
(197,120,o),
(238,75,o),
(294,49,o),
(328,49,qs),
(365,49,o),
(416,77,o),
(432,97,q),
(438,82,o),
(469,54,o),
(503,54,qs),
(526,54,o),
(569,73,o),
(602,117,o),
(621,187,o),
(621,237,qs),
(621,298,o),
(585,409,o),
(517,492,o),
(416,541,o),
(351,541,qs),
(285,541,o),
(173,494,o),
(92,410,o),
(47,295,o),
(47,227,qs),
(47,158,o),
(93,44,o),
(170,-39,o),
(272,-84,o),
(328,-84,qs),
(346,-84,o),
(358,-73,o),
(358,-67,qs),
(358,-61,o),
(348,-52,o),
(329,-52,qs),
(277,-52,o),
(187,-12,o),
(121,62,o),
(83,165,o),
(83,227,qs),
(83,289,o),
(121,392,o),
(191,466,o),
(289,507,o),
(348,507,qs),
(408,507,o),
(498,464,o),
(558,391,o),
(588,292,o),
(588,236,qs),
(588,194,o)
);
},
{
closed = 1;
nodes = (
(426,163,o),
(417,130,o),
(396,100,o),
(360,79,o),
(333,79,qs),
(279,79,o),
(217,150,o),
(217,216,qs),
(217,251,o),
(236,308,o),
(270,348,o),
(314,369,o),
(340,369,qs),
(384,369,o),
(426,317,o),
(426,273,qs),
(426,175,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
74 60 44 3 8 9 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 7 0 6 0 7 6 104 0 3 0 0 7 3 0 91 0 6 0 9 8 6 9 91 0 8 10 4 8 79 0 10 5 1 4 1 10 4 91 0 1 2 2 1 79 0 1 1 2 83 0 2 1 2 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 7 0 6 0 7 6 104 0 3 0 0 7 3 0 91 0 6 0 9 8 6 9 91 0 8 0 4 5 8 4 91 0 10 0 5 1 10 5 91 0 1 2 2 1 79 0 1 1 2 83 0 2 1 2 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
96 94 88 86 43 39 40 36 40 40 36 40 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 665;
}
);
note = at;
unicode = 64;
},
{
glyphname = ampersand;
kernLeft = ampersand;
kernRight = ampersand;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(477,356,o),
(477,370,qs),
(477,398,o),
(490,398,qs),
(498,398,o),
(512,373,o),
(512,338,qs),
(512,298,o),
(492,233,o),
(476,200,q),
(434,261,o),
(342,390,o),
(308,460,q),
(331,482,o),
(383,536,o),
(427,600,o),
(456,673,o),
(456,715,qs),
(456,752,o),
(432,800,o),
(393,827,o),
(345,838,o),
(321,838,qs),
(283,838,o),
(214,816,o),
(163,774,o),
(133,714,o),
(133,675,qs),
(133,628,o),
(173,523,o),
(201,469,q),
(187,462,o),
(129,415,o),
(70,342,o),
(26,245,o),
(26,188,qs),
(26,130,o),
(75,54,o),
(148,9,o),
(234,-9,o),
(272,-9,qs),
(327,-9,o),
(423,29,o),
(475,79,q),
(492,58,o),
(521,23,o),
(546,-4,o),
(570,-19,o),
(583,-19,qs),
(653,-19,o),
(735,-16,o),
(775,-9,o),
(786,3,o),
(786,13,qs),
(786,30,o),
(746,43,o),
(689,45,qs),
(656,47,o),
(609,48,o),
(601,50,qs),
(593,52,o),
(559,92,o),
(524,140,q),
(535,161,o),
(557,205,o),
(575,256,o),
(586,313,o),
(586,347,qs),
(586,386,o),
(567,431,o),
(538,454,o),
(503,460,o),
(488,460,qs),
(463,460,o),
(431,446,o),
(413,426,o),
(406,403,o),
(406,393,qs),
(406,366,o),
(431,341,o),
(446,341,qs),
(457,341,o)
);
},
{
closed = 1;
nodes = (
(310,280,o),
(350,216,o),
(391,159,o),
(415,130,q),
(406,121,o),
(381,100,o),
(347,82,o),
(302,70,o),
(273,70,qs),
(254,70,o),
(202,78,o),
(155,104,o),
(122,154,o),
(122,196,qs),
(122,229,o),
(142,286,o),
(175,336,o),
(217,381,o),
(238,402,q),
(265,355,o)
);
},
{
closed = 1;
nodes = (
(334,622,o),
(299,577,o),
(267,544,o),
(262,538,q),
(248,574,o),
(229,641,o),
(229,673,qs),
(229,714,o),
(264,759,o),
(305,759,qs),
(323,759,o),
(345,750,o),
(357,734,o),
(361,713,o),
(361,701,qs),
(361,675,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
113 50 2 1 8 82 1 6 1 97 71 37 18 4 7 0 3 66 68 1 1 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
9 1 0 6 7 6 0 7 104 0 8 8 5 83 0 5 5 20 67 0 6 6 1 83 0 1 1 23 67 0 7 7 3 83 4 1 3 3 21 67 0 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
9 1 0 6 7 6 0 7 104 0 1 0 6 0 1 6 91 0 8 8 5 83 0 5 5 20 67 0 7 7 3 83 4 1 3 3 21 67 0 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
9 1 0 6 7 6 0 7 104 0 1 0 6 0 1 6 91 0 8 8 5 83 0 5 5 20 67 0 7 7 4 83 0 4 4 24 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
9 1 0 6 7 6 0 7 104 0 5 0 8 1 5 8 91 0 1 0 6 0 1 6 91 0 7 7 4 83 0 4 4 24 67 0 2 2 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
1 0 108 106 93 91 78 76 59 57 41 39 33 30 25 22 9 7 0 81 1 81 10 15
CALL[ ]	/* CallFunction */";
};
width = 759;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(476,366,o),
(479,385,o),
(480,402,o),
(489,402,qs),
(497,402,o),
(513,377,o),
(513,336,qs),
(513,294,o),
(489,219,o),
(471,186,q),
(450,216,o),
(401,283,o),
(352,354,o),
(308,425,o),
(292,460,q),
(314,482,o),
(366,536,o),
(411,599,o),
(440,673,o),
(440,714,qs),
(440,750,o),
(417,798,o),
(379,827,o),
(333,838,o),
(310,838,qs),
(275,838,o),
(213,816,o),
(166,774,o),
(138,714,o),
(138,676,qs),
(138,628,o),
(178,523,o),
(206,469,q),
(184,452,o),
(124,400,o),
(69,328,o),
(31,239,o),
(31,186,qs),
(31,129,o),
(76,54,o),
(143,9,o),
(223,-9,o),
(259,-9,qs),
(322,-9,o),
(423,41,o),
(469,90,q),
(486,69,o),
(518,30,o),
(548,0,o),
(575,-19,o),
(588,-19,qs),
(644,-19,o),
(713,-17,o),
(750,-11,o),
(763,-1,o),
(763,8,qs),
(763,25,o),
(725,32,o),
(687,33,qs),
(663,33,o),
(634,33,o),
(615,34,o),
(604,35,o),
(599,37,qs),
(585,42,o),
(543,92,o),
(508,140,q),
(531,182,o),
(570,282,o),
(570,342,qs),
(570,378,o),
(554,423,o),
(529,449,o),
(497,459,o),
(481,459,qs),
(442,459,o),
(405,418,o),
(405,392,qs),
(405,379,o),
(420,349,o),
(446,349,qs),
(464,349,o)
);
},
{
closed = 1;
nodes = (
(312,287,o),
(357,219,o),
(401,160,o),
(425,131,q),
(415,119,o),
(386,91,o),
(345,67,o),
(293,52,o),
(260,52,qs),
(239,52,o),
(186,61,o),
(139,91,o),
(106,146,o),
(106,193,qs),
(106,227,o),
(125,284,o),
(159,336,o),
(208,387,o),
(237,414,q),
(265,365,o)
);
},
{
closed = 1;
nodes = (
(342,621,o),
(308,576,o),
(270,537,o),
(256,521,q),
(237,563,o),
(213,639,o),
(213,674,qs),
(213,722,o),
(258,777,o),
(300,777,qs),
(339,777,o),
(366,731,o),
(366,704,qs),
(366,673,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
111 66 48 3 1 8 82 1 6 1 97 71 35 14 4 7 0 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
9 1 0 6 7 6 0 96 0 8 8 5 83 0 5 5 20 67 0 6 6 1 83 0 1 1 23 67 0 7 7 3 83 4 1 3 3 21 67 0 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
9 1 0 6 7 6 0 96 0 1 0 6 0 1 6 91 0 8 8 5 83 0 5 5 20 67 0 7 7 3 83 4 1 3 3 21 67 0 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
9 1 0 6 7 6 0 7 104 0 1 0 6 0 1 6 91 0 8 8 5 83 0 5 5 20 67 0 7 7 3 83 4 1 3 3 21 67 0 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
9 1 0 6 7 6 0 7 104 0 1 0 6 0 1 6 91 0 8 8 5 83 0 5 5 20 67 0 7 7 4 83 0 4 4 24 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
9 1 0 6 7 6 0 7 104 0 5 0 8 1 5 8 91 0 1 0 6 0 1 6 91 0 7 7 4 83 0 4 4 24 67 0 2 2 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
1 0 106 104 93 91 78 76 57 55 39 37 31 28 23 19 7 5 0 81 1 81 10 15
CALL[ ]	/* CallFunction */";
};
width = 738;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(470,377,o),
(470,391,qs),
(470,411,o),
(479,422,o),
(485,422,qs),
(495,422,o),
(514,383,o),
(514,332,qs),
(514,288,o),
(485,196,o),
(464,163,q),
(443,193,o),
(388,268,o),
(333,346,o),
(284,425,o),
(269,460,q),
(291,481,o),
(343,535,o),
(387,599,o),
(417,672,o),
(417,713,qs),
(417,748,o),
(395,796,o),
(360,825,o),
(316,838,o),
(295,838,qs),
(266,838,o),
(212,816,o),
(170,775,o),
(145,715,o),
(145,677,qs),
(145,627,o),
(185,523,o),
(213,469,q),
(190,440,o),
(130,384,o),
(76,318,o),
(38,237,o),
(38,182,qs),
(38,127,o),
(77,54,o),
(136,10,o),
(207,-9,o),
(240,-9,qs),
(276,-9,o),
(340,10,o),
(395,42,o),
(442,85,o),
(461,108,q),
(478,87,o),
(515,43,o),
(550,5,o),
(582,-19,o),
(595,-19,qs),
(666,-19,o),
(730,-14,o),
(730,0,qs),
(730,10,o),
(707,13,o),
(684,13,qs),
(602,13,o),
(596,16,qs),
(588,20,o),
(561,45,o),
(530,80,o),
(498,120,o),
(485,140,q),
(508,182,o),
(547,285,o),
(547,333,qs),
(547,396,o),
(506,457,o),
(474,457,qs),
(467,457,o),
(443,450,o),
(420,435,o),
(403,409,o),
(403,391,qs),
(403,382,o),
(419,359,o),
(434,359,qs),
(448,359,o)
);
},
{
closed = 1;
nodes = (
(392,190,o),
(440,132,q),
(429,115,o),
(393,76,o),
(343,43,o),
(280,22,o),
(241,22,qs),
(218,22,o),
(163,33,o),
(115,69,o),
(83,134,o),
(83,188,qs),
(83,224,o),
(100,282,o),
(137,337,o),
(194,396,o),
(235,434,q),
(292,332,o)
);
},
{
closed = 1;
nodes = (
(350,611,o),
(314,560,o),
(269,516,o),
(247,493,q),
(222,543,o),
(190,634,o),
(190,676,qs),
(190,705,o),
(206,753,o),
(235,788,o),
(272,807,o),
(293,807,qs),
(314,807,o),
(344,789,o),
(364,760,o),
(373,725,o),
(373,709,qs),
(373,671,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
113 65 47 3 1 8 82 1 6 1 97 70 32 14 4 7 0 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
9 1 0 6 7 6 0 7 104 0 8 8 5 83 0 5 5 20 67 0 6 6 1 83 0 1 1 23 67 0 7 7 4 83 0 4 4 24 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
9 1 0 6 7 6 0 7 104 0 1 0 6 0 1 6 91 0 8 8 5 83 0 5 5 20 67 0 7 7 4 83 0 4 4 24 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
9 1 0 6 7 6 0 7 104 0 5 0 8 1 5 8 91 0 1 0 6 0 1 6 91 0 7 7 4 83 0 4 4 24 67 0 2 2 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
1 0 106 104 93 91 77 75 56 54 38 36 28 26 22 20 9 7 0 81 1 81 10 15
CALL[ ]	/* CallFunction */";
};
width = 708;
}
);
note = ampersand;
unicode = 38;
},
{
glyphname = paragraph;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(382,532,o),
(382,628,o),
(383,717,o),
(383,755,q),
(388,755,o),
(404,755,o),
(421,754,o),
(436,752,o),
(439,751,q),
(439,36,ls),
(439,26,o),
(458,0,o),
(480,0,qs),
(495,0,o),
(513,12,o),
(522,31,o),
(525,53,o),
(525,62,qs),
(525,122,o),
(525,208,o),
(524,288,o),
(524,376,o),
(524,437,qs),
(524,523,o),
(530,669,o),
(530,717,qs),
(530,733,o),
(542,757,o),
(574,757,qs),
(593,757,ls),
(610,757,o),
(630,771,o),
(630,788,qs),
(630,818,o),
(593,818,qs),
(568,818,o),
(523,819,o),
(472,820,o),
(410,821,o),
(368,821,qs),
(296,821,o),
(179,795,o),
(96,739,o),
(51,651,o),
(51,589,qs),
(51,528,o),
(88,444,o),
(154,389,o),
(244,360,o),
(296,356,q),
(296,298,o),
(296,226,o),
(295,165,o),
(295,97,o),
(295,42,qs),
(295,22,o),
(319,0,o),
(336,0,qs),
(364,0,o),
(383,29,o),
(383,52,qs),
(383,106,o),
(382,180,o),
(382,251,o),
(381,330,o),
(381,388,qs),
(381,434,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
57 16 2 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
4 1 2 2 1 83 0 1 1 12 67 3 1 0 0 13 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
4 1 2 2 1 83 0 1 1 14 67 3 1 0 0 13 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
62 59 54 52 38 35 32 25 39 5 16
CALL[ ]	/* CallFunction */";
};
width = 683;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(390,537,o),
(390,636,o),
(391,728,o),
(391,767,q),
(404,767,o),
(422,763,o),
(432,760,q),
(432,32,ls),
(432,22,o),
(451,0,o),
(468,0,qs),
(481,0,o),
(495,11,o),
(503,28,o),
(505,49,o),
(505,58,qs),
(505,118,o),
(505,205,o),
(504,287,o),
(504,376,o),
(504,437,qs),
(504,527,o),
(510,679,o),
(510,729,qs),
(510,745,o),
(527,769,o),
(559,769,qs),
(593,769,ls),
(626,769,o),
(626,794,qs),
(626,805,o),
(611,818,o),
(593,818,qs),
(557,818,o),
(503,819,o),
(450,820,o),
(390,821,o),
(348,821,qs),
(281,821,o),
(164,797,o),
(77,743,o),
(27,657,o),
(27,595,qs),
(27,534,o),
(79,448,o),
(161,391,o),
(265,360,o),
(317,356,q),
(317,298,o),
(317,225,o),
(316,162,o),
(316,92,o),
(316,37,qs),
(316,21,o),
(334,0,o),
(348,0,qs),
(391,0,o),
(391,47,qs),
(391,101,o),
(390,177,o),
(390,249,o),
(389,330,o),
(389,388,qs),
(389,435,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
56 15 2 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
4 1 2 2 1 83 0 1 1 12 67 3 1 0 0 13 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
4 1 2 2 1 83 0 1 1 14 67 3 1 0 0 13 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
59 58 53 51 37 34 31 24 38 5 16
CALL[ ]	/* CallFunction */";
};
width = 658;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(361,545,o),
(361,649,o),
(362,746,o),
(362,787,q),
(384,787,o),
(416,783,o),
(433,780,q),
(433,26,ls),
(433,16,o),
(447,0,o),
(457,0,qs),
(471,0,o),
(476,33,o),
(476,52,qs),
(476,112,o),
(476,201,o),
(475,285,o),
(475,376,o),
(475,437,qs),
(475,533,o),
(481,696,o),
(481,749,qs),
(481,765,o),
(498,789,o),
(530,789,qs),
(564,789,ls),
(581,789,o),
(592,799,o),
(592,804,qs),
(592,809,o),
(582,818,o),
(564,818,qs),
(528,818,o),
(474,819,o),
(421,820,o),
(361,821,o),
(319,821,qs),
(258,821,o),
(152,797,o),
(73,743,o),
(28,657,o),
(28,595,qs),
(28,534,o),
(80,448,o),
(162,391,o),
(266,360,o),
(318,356,q),
(318,298,o),
(318,222,o),
(317,156,o),
(317,84,o),
(317,29,qs),
(317,13,o),
(329,0,o),
(337,0,qs),
(347,0,o),
(362,16,o),
(362,39,qs),
(362,93,o),
(361,171,o),
(361,246,o),
(360,330,o),
(360,388,qs),
(360,438,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
56 16 2 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
4 1 2 2 1 83 0 1 1 12 67 3 1 0 0 13 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
4 1 2 2 1 83 0 1 1 14 67 3 1 0 0 13 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
59 58 53 51 39 36 32 25 39 5 16
CALL[ ]	/* CallFunction */";
};
width = 623;
}
);
note = paragraph;
unicode = 182;
},
{
glyphname = section;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(121,220,o),
(176,186,o),
(245,167,o),
(278,160,qs),
(312,152,o),
(350,139,o),
(369,125,o),
(373,109,o),
(373,100,qs),
(373,83,o),
(354,62,o),
(327,50,o),
(296,46,o),
(284,46,qs),
(254,46,o),
(209,62,o),
(178,84,o),
(159,109,o),
(156,118,qs),
(154,123,o),
(151,142,o),
(151,152,qs),
(151,169,o),
(125,188,o),
(105,188,qs),
(80,188,o),
(68,165,o),
(68,148,qs),
(68,125,o),
(71,77,o),
(71,57,qs),
(71,51,o),
(71,30,o),
(70,11,o),
(70,-4,o),
(70,-5,qs),
(70,-21,o),
(98,-33,o),
(109,-33,qs),
(132,-33,o),
(152,-7,o),
(153,34,q),
(163,14,o),
(194,-10,o),
(231,-23,o),
(272,-27,o),
(292,-27,qs),
(319,-27,o),
(378,-19,o),
(426,8,o),
(458,59,o),
(458,101,qs),
(458,143,o),
(421,192,o),
(383,209,q),
(418,226,o),
(465,279,o),
(465,326,qs),
(465,361,o),
(437,406,o),
(385,437,o),
(312,457,o),
(268,468,qs),
(226,478,o),
(175,514,o),
(175,546,qs),
(175,609,o),
(262,609,qs),
(288,609,o),
(323,597,o),
(347,579,o),
(362,559,o),
(367,551,qs),
(369,547,o),
(374,523,o),
(374,521,qs),
(374,513,o),
(397,495,o),
(412,495,qs),
(424,495,o),
(450,508,o),
(452,522,qs),
(453,529,o),
(455,563,o),
(458,605,o),
(460,648,o),
(460,665,qs),
(460,695,o),
(434,718,o),
(418,718,qs),
(400,718,o),
(373,701,o),
(373,679,qs),
(373,676,o),
(374,644,o),
(375,631,q),
(368,641,o),
(349,662,o),
(322,678,o),
(283,688,o),
(256,688,qs),
(225,688,o),
(167,675,o),
(121,642,o),
(93,587,o),
(93,545,qs),
(93,507,o),
(131,442,o),
(175,431,q),
(163,423,o),
(133,403,o),
(105,377,o),
(86,342,o),
(86,320,qs),
(86,275,o)
);
},
{
closed = 1;
nodes = (
(216,379,o),
(265,384,q),
(316,376,o),
(374,344,o),
(374,315,qs),
(374,286,o),
(331,250,o),
(291,246,q),
(267,248,o),
(222,260,o),
(188,278,o),
(168,303,o),
(168,318,qs),
(168,348,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
18 1 3 0 126 120 59 5 4 6 2 72 1 4 7 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 0 0 3 2 0 3 91 0 1 0 2 6 1 2 91 0 6 6 4 83 5 1 4 4 21 67 0 7 7 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 0 0 3 2 0 3 91 0 1 0 2 6 1 2 91 0 6 7 4 6 79 0 7 4 4 7 79 0 7 7 4 83 5 1 4 7 4 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 0 0 3 2 0 3 91 0 1 0 2 6 1 2 91 0 6 7 5 6 79 0 7 0 4 5 7 4 91 0 6 6 5 83 0 5 6 5 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
101 99 90 88 76 74 68 66 41 41 41 44 8 19
CALL[ ]	/* CallFunction */";
};
width = 512;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(108,237,o),
(154,206,o),
(208,188,o),
(234,182,qs),
(293,167,o),
(362,136,o),
(362,102,qs),
(362,84,o),
(343,60,o),
(313,46,o),
(278,40,o),
(262,40,qs),
(236,40,o),
(195,53,o),
(163,72,o),
(143,96,o),
(138,107,qs),
(133,117,o),
(132,134,o),
(130,148,qs),
(128,166,o),
(115,188,o),
(95,188,qs),
(76,188,o),
(68,169,o),
(68,153,qs),
(68,131,o),
(72,81,o),
(72,61,qs),
(72,47,o),
(70,8,o),
(70,3,qs),
(70,-5,o),
(77,-15,o),
(88,-21,o),
(99,-23,o),
(103,-23,qs),
(118,-23,o),
(133,-3,o),
(133,12,qs),
(133,18,o),
(133,32,o),
(132,40,q),
(141,23,o),
(171,1,o),
(207,-12,o),
(247,-17,o),
(265,-17,qs),
(289,-17,o),
(347,-8,o),
(396,19,o),
(430,67,o),
(430,106,qs),
(430,152,o),
(381,201,o),
(340,217,q),
(358,222,o),
(392,239,o),
(418,266,o),
(434,305,o),
(434,331,qs),
(434,364,o),
(407,408,o),
(361,437,o),
(297,457,o),
(260,467,qs),
(237,473,o),
(197,486,o),
(167,506,o),
(149,534,o),
(149,554,qs),
(149,587,o),
(197,628,o),
(244,628,qs),
(291,628,o),
(341,591,o),
(353,568,qs),
(356,563,o),
(360,547,o),
(363,530,o),
(365,517,o),
(365,516,qs),
(367,509,o),
(379,491,o),
(392,491,qs),
(401,491,o),
(423,503,o),
(424,517,qs),
(424,523,o),
(426,555,o),
(428,596,o),
(429,643,o),
(429,664,qs),
(429,690,o),
(408,707,o),
(397,707,qs),
(388,707,o),
(365,693,o),
(365,670,qs),
(365,665,o),
(366,637,o),
(367,624,q),
(361,634,o),
(343,657,o),
(313,677,o),
(270,689,o),
(241,689,qs),
(211,689,o),
(154,674,o),
(110,641,o),
(83,589,o),
(83,552,qs),
(83,509,o),
(116,458,o),
(142,442,q),
(114,426,o),
(79,370,o),
(79,327,qs),
(79,288,o)
);
},
{
closed = 1;
nodes = (
(193,398,o),
(240,403,q),
(255,402,o),
(298,392,o),
(336,373,o),
(363,345,o),
(363,327,qs),
(363,311,o),
(339,285,o),
(302,266,o),
(258,256,o),
(239,256,qs),
(222,257,o),
(189,268,o),
(162,287,o),
(145,312,o),
(145,329,qs),
(145,362,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
36 30 16 3 2 3 3 1 9 2 62 1 6 8 3 66 75 1 7 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 9 2 8 2 9 8 104 0 8 6 2 8 6 102 0 0 0 3 2 0 3 91 0 1 0 2 9 1 2 91 0 6 6 4 83 5 1 4 4 21 67 0 7 7 4 84 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 9 2 8 2 9 8 104 0 8 6 2 8 6 102 0 0 0 3 2 0 3 91 0 1 0 2 9 1 2 91 0 7 7 4 84 0 4 4 21 67 0 6 6 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
134 133 125 123 107 105 96 94 82 80 71 69 41 41 41 42 10 19
CALL[ ]	/* CallFunction */";
};
width = 488;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(138,19,o),
(173,7,o),
(210,0,o),
(227,0,qs),
(246,0,o),
(302,11,o),
(354,37,o),
(390,81,o),
(390,114,qs),
(390,140,o),
(372,178,o),
(341,205,o),
(301,224,o),
(279,231,q),
(298,235,o),
(338,252,o),
(370,278,o),
(390,315,o),
(390,339,qs),
(390,370,o),
(365,411,o),
(325,440,o),
(274,458,o),
(249,466,qs),
(224,474,o),
(175,486,o),
(136,506,o),
(112,538,o),
(112,567,qs),
(112,585,o),
(127,619,o),
(154,644,o),
(194,660,o),
(219,660,qs),
(258,660,o),
(317,628,o),
(333,594,qs),
(345,569,o),
(351,515,o),
(353,507,qs),
(354,502,o),
(360,484,o),
(370,484,qs),
(378,484,o),
(384,500,o),
(384,508,qs),
(384,519,o),
(385,602,o),
(385,662,qs),
(385,673,o),
(376,688,o),
(367,688,qs),
(359,688,o),
(353,673,o),
(353,655,qs),
(353,646,o),
(354,626,o),
(355,613,q),
(352,623,o),
(332,650,o),
(299,674,o),
(252,690,o),
(220,690,qs),
(191,690,o),
(137,672,o),
(95,639,o),
(69,593,o),
(69,564,qs),
(69,538,o),
(84,501,o),
(107,474,o),
(135,456,o),
(149,450,q),
(114,435,o),
(69,378,o),
(69,339,qs),
(69,308,o),
(90,266,o),
(121,238,o),
(157,222,o),
(171,218,qs),
(193,212,o),
(254,198,o),
(309,174,o),
(347,136,o),
(347,106,qs),
(347,71,o),
(281,30,o),
(230,30,qs),
(192,30,o),
(129,56,o),
(113,88,qs),
(107,100,o),
(102,125,o),
(99,141,qs),
(95,161,o),
(89,175,o),
(81,175,qs),
(73,175,o),
(68,162,o),
(68,148,qs),
(68,127,o),
(73,86,o),
(73,67,qs),
(73,53,o),
(70,26,o),
(70,16,qs),
(70,-7,o),
(82,-7,qs),
(91,-7,o),
(101,18,o),
(102,50,q),
(110,38,o)
);
},
{
closed = 1;
nodes = (
(160,429,o),
(204,434,q),
(227,428,o),
(277,414,o),
(319,390,o),
(347,356,o),
(347,331,qs),
(347,296,o),
(281,255,o),
(230,255,qs),
(208,255,o),
(166,265,o),
(133,286,o),
(112,319,o),
(112,342,qs),
(112,375,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
54 1 5 6 126 39 2 8 5 98 1 1 8 0 1 2 1 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 8 5 1 5 8 1 104 0 6 5 3 6 79 4 1 3 0 5 8 3 5 91 0 2 2 7 84 0 7 7 13 67 0 1 1 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 8 5 1 5 8 1 104 0 6 5 3 6 79 4 1 3 0 5 8 3 5 91 0 2 2 7 84 0 7 7 13 67 0 1 1 0 83 0 0 0 16 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 8 5 1 5 8 1 104 0 6 5 3 6 79 4 1 3 0 5 8 3 5 91 0 2 2 7 84 0 7 7 13 67 0 1 1 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
119 117 109 107 79 77 70 68 61 59 50 48 39 41 34 9 18
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = section;
unicode = 167;
},
{
glyphname = copyright;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(623,425,o),
(543,509,o),
(427,558,o),
(353,558,qs),
(282,558,o),
(167,511,o),
(85,427,o),
(40,312,o),
(40,244,qs),
(40,175,o),
(85,61,o),
(163,-22,o),
(269,-67,o),
(330,-67,qs),
(385,-67,o),
(503,-28,o),
(601,51,o),
(665,170,o),
(665,250,qs),
(665,313,o)
);
},
{
closed = 1;
nodes = (
(548,90,o),
(470,26,o),
(375,-5,o),
(330,-5,qs),
(280,-5,o),
(199,31,o),
(141,97,o),
(109,188,o),
(109,244,qs),
(109,299,o),
(141,391,o),
(203,457,o),
(293,494,o),
(351,494,qs),
(410,494,o),
(503,456,o),
(566,390,o),
(599,302,o),
(599,253,qs),
(599,187,o)
);
},
{
closed = 1;
nodes = (
(360,396,o),
(340,396,qs),
(304,396,o),
(247,369,o),
(207,323,o),
(185,264,o),
(185,232,qs),
(185,200,o),
(207,144,o),
(249,103,o),
(307,79,o),
(343,79,qs),
(373,79,o),
(418,92,o),
(452,111,o),
(473,135,o),
(479,146,qs),
(482,152,o),
(484,163,o),
(484,166,qs),
(484,174,o),
(472,187,o),
(461,187,qs),
(450,187,o),
(435,173,o),
(428,165,qs),
(414,150,o),
(376,130,o),
(343,130,qs),
(292,130,o),
(248,184,o),
(248,232,qs),
(248,281,o),
(295,346,o),
(345,346,qs),
(364,346,o),
(388,335,o),
(403,317,o),
(411,296,o),
(414,286,qs),
(416,279,o),
(428,265,o),
(442,265,qs),
(458,265,o),
(469,282,o),
(469,300,qs),
(469,303,o),
(469,329,o),
(468,358,o),
(468,382,o),
(468,384,qs),
(468,395,o),
(459,414,o),
(443,414,qs),
(427,414,o),
(416,396,o),
(416,385,qs),
(416,381,o),
(417,367,o),
(418,361,q),
(402,384,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
40 1 6 10 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 8 5 7 5 8 7 104 0 1 0 2 4 1 2 91 0 10 0 6 5 10 6 91 0 7 0 9 3 7 9 91 0 3 0 0 3 0 87 0 5 5 4 83 0 4 4 15 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 8 5 7 5 8 7 104 0 1 0 2 4 1 2 91 0 10 0 6 5 10 6 91 0 4 0 5 8 4 5 91 0 7 0 9 3 7 9 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
99 97 89 87 36 36 38 41 41 40 40 40 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 706;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(608,425,o),
(532,509,o),
(422,558,o),
(352,558,qs),
(283,558,o),
(170,511,o),
(88,427,o),
(43,312,o),
(43,244,qs),
(43,175,o),
(88,61,o),
(166,-22,o),
(270,-67,o),
(329,-67,qs),
(383,-67,o),
(495,-28,o),
(588,51,o),
(647,171,o),
(647,251,qs),
(647,314,o)
);
},
{
closed = 1;
nodes = (
(538,90,o),
(464,26,o),
(374,-5,o),
(331,-5,qs),
(283,-5,o),
(201,31,o),
(142,97,o),
(109,188,o),
(109,244,qs),
(109,299,o),
(142,391,o),
(205,457,o),
(294,494,o),
(350,494,qs),
(407,494,o),
(495,456,o),
(554,390,o),
(584,302,o),
(584,252,qs),
(584,187,o)
);
},
{
closed = 1;
nodes = (
(359,415,o),
(338,415,qs),
(302,415,o),
(241,386,o),
(196,337,o),
(171,270,o),
(171,231,qs),
(171,196,o),
(192,136,o),
(234,91,o),
(295,65,o),
(335,65,qs),
(389,65,o),
(463,109,o),
(486,142,qs),
(491,150,o),
(491,159,qs),
(491,168,o),
(479,182,o),
(465,182,qs),
(453,182,o),
(440,171,o),
(432,161,qs),
(421,148,o),
(397,133,o),
(374,126,o),
(354,124,o),
(347,124,qs),
(301,124,o),
(243,179,o),
(243,236,qs),
(243,290,o),
(298,355,o),
(349,355,qs),
(384,355,o),
(415,315,o),
(422,289,qs),
(424,280,o),
(438,269,o),
(452,269,qs),
(472,269,o),
(486,285,o),
(486,290,qs),
(486,293,o),
(486,326,o),
(486,367,o),
(487,407,o),
(487,417,qs),
(487,425,o),
(470,439,o),
(453,439,qs),
(437,439,o),
(422,424,o),
(422,416,qs),
(422,406,o),
(423,384,o),
(424,376,q),
(408,400,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
40 1 6 10 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 8 5 7 5 8 7 104 0 1 0 2 4 1 2 91 0 7 0 9 3 7 9 91 0 3 0 0 3 0 87 0 6 6 10 83 0 10 10 15 67 0 5 5 4 83 0 4 4 15 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 8 5 7 5 8 7 104 0 1 0 2 4 1 2 91 0 10 0 6 5 10 6 91 0 4 0 5 8 4 5 91 0 7 0 9 3 7 9 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
96 94 86 84 38 36 36 41 41 40 40 40 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 691;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(586,426,o),
(517,509,o),
(417,558,o),
(351,558,qs),
(285,558,o),
(173,511,o),
(92,427,o),
(47,312,o),
(47,244,qs),
(47,175,o),
(92,61,o),
(169,-22,o),
(271,-67,o),
(328,-67,qs),
(380,-67,o),
(484,-28,o),
(568,52,o),
(621,172,o),
(621,253,qs),
(621,315,o)
);
},
{
closed = 1;
nodes = (
(542,71,o),
(469,0,o),
(376,-35,o),
(329,-35,qs),
(278,-35,o),
(188,5,o),
(121,79,o),
(83,182,o),
(83,244,qs),
(83,306,o),
(121,409,o),
(191,483,o),
(289,524,o),
(348,524,qs),
(409,524,o),
(499,481,o),
(559,407,o),
(588,308,o),
(588,252,qs),
(588,179,o)
);
},
{
closed = 1;
nodes = (
(363,415,o),
(342,415,qs),
(306,415,o),
(245,386,o),
(200,337,o),
(175,270,o),
(175,231,qs),
(175,196,o),
(197,136,o),
(238,91,o),
(294,65,o),
(328,65,qs),
(415,65,o),
(460,142,qs),
(467,154,o),
(467,161,qs),
(467,166,o),
(462,175,o),
(453,175,qs),
(447,175,o),
(440,167,o),
(436,161,qs),
(414,124,o),
(368,95,o),
(333,95,qs),
(279,95,o),
(217,166,o),
(217,232,qs),
(217,267,o),
(236,324,o),
(270,364,o),
(314,385,o),
(340,385,qs),
(384,385,o),
(426,333,o),
(426,289,qs),
(426,281,o),
(438,274,o),
(444,274,qs),
(449,274,o),
(460,284,o),
(460,290,qs),
(460,299,o),
(460,334,o),
(460,372,o),
(461,407,o),
(461,417,qs),
(461,425,o),
(450,436,o),
(444,436,qs),
(438,436,o),
(426,424,o),
(426,416,qs),
(426,406,o),
(427,384,o),
(428,376,q),
(412,400,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
40 1 5 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 8 5 7 5 8 7 104 0 1 0 2 4 1 2 91 0 7 0 9 3 7 9 91 0 3 0 0 3 0 87 0 6 6 10 83 0 10 10 15 67 0 5 5 4 83 0 4 4 15 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 8 5 7 5 8 7 104 0 1 0 2 4 1 2 91 0 10 0 6 5 10 6 91 0 4 0 5 8 4 5 91 0 7 0 9 3 7 9 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
95 93 85 83 36 38 36 41 41 40 40 40 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 670;
}
);
note = copyright;
unicode = 169;
},
{
glyphname = registered;
kernLeft = registered;
kernRight = registered;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(396,286,o),
(369,272,o),
(330,267,o),
(308,267,q),
(308,382,l),
(315,383,o),
(333,385,o),
(341,385,qs),
(368,385,o),
(412,361,o),
(412,333,qs),
(412,312,o)
);
},
{
closed = 1;
nodes = (
(441,73,o),
(476,75,o),
(493,81,o),
(496,89,o),
(496,95,qs),
(496,115,o),
(467,115,qs),
(435,115,l),
(422,130,o),
(392,167,o),
(378,184,qs),
(362,203,o),
(346,223,q),
(396,230,o),
(466,285,o),
(466,335,qs),
(466,368,o),
(430,407,o),
(378,427,o),
(317,433,o),
(293,433,qs),
(278,433,o),
(249,431,o),
(226,426,o),
(211,417,o),
(211,410,qs),
(211,400,o),
(223,394,o),
(239,391,o),
(252,384,o),
(254,374,q),
(255,345,o),
(255,291,o),
(255,259,qs),
(255,142,ls),
(255,134,o),
(241,130,o),
(225,126,o),
(211,119,o),
(211,109,qs),
(211,99,o),
(220,92,o),
(238,92,qs),
(312,92,ls),
(336,92,o),
(349,102,o),
(349,110,qs),
(349,126,o),
(336,133,o),
(324,133,qs),
(307,133,l),
(307,201,l),
(409,73,l)
);
},
{
closed = 1;
nodes = (
(623,425,o),
(543,509,o),
(427,558,o),
(353,558,qs),
(282,558,o),
(167,511,o),
(85,427,o),
(40,312,o),
(40,244,qs),
(40,175,o),
(85,61,o),
(163,-22,o),
(269,-67,o),
(330,-67,qs),
(385,-67,o),
(503,-28,o),
(601,51,o),
(665,170,o),
(665,250,qs),
(665,313,o)
);
},
{
closed = 1;
nodes = (
(548,90,o),
(470,26,o),
(375,-5,o),
(330,-5,qs),
(280,-5,o),
(199,31,o),
(141,97,o),
(109,188,o),
(109,244,qs),
(109,299,o),
(141,391,o),
(203,457,o),
(293,494,o),
(351,494,qs),
(410,494,o),
(503,456,o),
(566,390,o),
(599,302,o),
(599,253,qs),
(599,187,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
33 6 2 1 0 51 12 2 2 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 0 4 1 9 0 96 0 1 2 2 1 94 0 8 0 9 4 8 9 91 0 2 0 3 6 2 3 92 0 5 0 6 10 5 6 91 0 10 0 7 10 7 87 0 4 4 15 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 0 4 1 9 0 96 0 1 2 4 1 2 102 0 8 0 9 4 8 9 91 0 2 0 3 6 2 3 92 0 5 0 6 10 5 6 91 0 10 0 7 10 7 87 0 4 4 15 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 0 4 1 4 0 1 104 0 1 2 4 1 2 102 0 8 0 9 4 8 9 91 0 2 0 3 6 2 3 92 0 5 0 6 10 5 6 91 0 10 0 7 10 7 87 0 4 4 15 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 4 9 0 9 4 0 104 0 0 1 9 0 1 102 0 1 2 9 1 2 102 0 8 0 9 4 8 9 91 0 2 0 3 6 2 3 92 0 5 0 6 10 5 6 91 0 10 7 7 10 79 0 10 10 7 83 0 7 10 7 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
101 99 91 89 81 79 71 69 64 62 58 56 44 41 52 37 19 34 11 19
CALL[ ]	/* CallFunction */";
};
width = 707;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(610,433,o),
(538,513,o),
(432,558,o),
(364,558,qs),
(289,558,o),
(170,511,o),
(87,427,o),
(43,312,o),
(43,244,qs),
(43,175,o),
(93,61,o),
(179,-22,o),
(291,-67,o),
(354,-67,qs),
(406,-67,o),
(510,-28,o),
(594,52,o),
(647,172,o),
(647,253,qs),
(647,320,o)
);
},
{
closed = 1;
nodes = (
(543,90,o),
(477,26,o),
(395,-5,o),
(353,-5,qs),
(302,-5,o),
(213,31,o),
(147,97,o),
(109,188,o),
(109,244,qs),
(109,299,o),
(141,391,o),
(204,457,o),
(296,494,o),
(355,494,qs),
(408,494,o),
(493,456,o),
(552,390,o),
(584,302,o),
(584,252,qs),
(584,187,o)
);
},
{
closed = 1;
nodes = (
(312,194,o),
(351,139,o),
(386,89,o),
(414,55,o),
(419,55,qs),
(449,55,o),
(486,57,o),
(505,62,o),
(512,70,o),
(512,76,qs),
(512,86,o),
(500,98,o),
(485,98,qs),
(464,98,l),
(451,113,o),
(420,153,o),
(406,171,qs),
(389,192,o),
(373,214,q),
(385,215,o),
(417,227,o),
(446,253,o),
(467,297,o),
(467,331,qs),
(467,361,o),
(441,401,o),
(402,425,o),
(357,435,o),
(337,435,qs),
(315,435,o),
(285,434,o),
(259,434,o),
(231,433,o),
(212,433,qs),
(202,433,o),
(189,423,o),
(189,412,qs),
(189,401,o),
(205,391,o),
(213,391,qs),
(219,391,o),
(223,386,o),
(223,372,qs),
(223,340,o),
(226,287,o),
(226,255,qs),
(226,223,o),
(224,167,o),
(224,136,qs),
(224,122,o),
(218,116,o),
(209,116,qs),
(204,116,o),
(197,105,o),
(197,95,qs),
(197,87,o),
(206,74,o),
(216,74,qs),
(230,74,o),
(269,75,o),
(283,75,qs),
(295,75,o),
(314,74,o),
(327,74,qs),
(332,74,o),
(341,86,o),
(341,95,qs),
(341,106,o),
(329,117,o),
(324,117,qs),
(293,117,l),
(293,214,l),
(297,214,l)
);
},
{
closed = 1;
nodes = (
(350,273,o),
(308,273,qs),
(306,273,o),
(294,274,o),
(293,274,q),
(293,372,l),
(297,372,o),
(301,373,qs),
(311,375,o),
(321,375,qs),
(333,375,o),
(360,371,o),
(382,360,o),
(397,340,o),
(397,325,qs),
(397,293,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
93 1 11 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 7 8 12 12 7 96 15 1 14 12 11 12 14 11 104 16 1 11 4 12 11 4 102 0 1 0 2 8 1 2 91 6 1 4 0 5 10 4 5 92 0 9 0 10 3 9 10 91 0 3 0 0 3 0 87 13 1 12 12 8 84 0 8 8 15 12 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
0 7 8 12 12 7 96 15 1 14 12 11 12 14 11 104 16 1 11 4 12 11 4 102 0 1 0 2 8 1 2 91 0 8 13 1 12 14 8 12 91 6 1 4 0 5 10 4 5 92 0 9 0 10 3 9 10 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
40 40 127 125 124 123 122 121 119 117 40 112 40 112 108 105 100 98 116 42 36 132 37 40 40 40 36 17 24
CALL[ ]	/* CallFunction */";
};
width = 692;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(586,426,o),
(517,509,o),
(417,558,o),
(351,558,qs),
(285,558,o),
(173,511,o),
(92,427,o),
(47,312,o),
(47,244,qs),
(47,175,o),
(92,61,o),
(169,-22,o),
(271,-67,o),
(328,-67,qs),
(380,-67,o),
(484,-28,o),
(568,52,o),
(621,172,o),
(621,253,qs),
(621,315,o)
);
},
{
closed = 1;
nodes = (
(542,71,o),
(469,0,o),
(376,-35,o),
(329,-35,qs),
(278,-35,o),
(188,5,o),
(121,79,o),
(83,182,o),
(83,244,qs),
(83,306,o),
(121,409,o),
(191,483,o),
(289,524,o),
(348,524,qs),
(409,524,o),
(499,481,o),
(559,407,o),
(588,308,o),
(588,252,qs),
(588,179,o)
);
},
{
closed = 1;
nodes = (
(293,207,o),
(335,147,o),
(373,93,o),
(402,55,o),
(408,55,qs),
(431,55,o),
(460,57,o),
(475,60,o),
(480,64,o),
(480,67,qs),
(480,71,o),
(470,78,o),
(459,78,qs),
(437,78,l),
(419,98,o),
(378,150,o),
(361,173,qs),
(341,200,o),
(321,229,q),
(340,229,o),
(382,240,o),
(418,265,o),
(441,305,o),
(441,335,qs),
(441,363,o),
(415,401,o),
(376,425,o),
(331,435,o),
(311,435,qs),
(291,435,o),
(263,434,o),
(239,434,o),
(214,433,o),
(196,433,qs),
(188,433,o),
(183,427,o),
(183,423,qs),
(183,411,o),
(197,411,qs),
(215,411,o),
(227,406,o),
(227,392,qs),
(227,355,o),
(230,292,o),
(230,255,qs),
(230,218,o),
(228,152,o),
(228,116,qs),
(228,102,o),
(212,96,o),
(193,96,qs),
(187,96,o),
(181,88,o),
(181,85,qs),
(181,74,o),
(199,74,qs),
(211,74,o),
(245,75,o),
(257,75,qs),
(269,75,o),
(293,74,o),
(306,74,qs),
(311,74,o),
(314,82,o),
(314,84,qs),
(314,89,o),
(308,97,o),
(303,97,qs),
(267,97,l),
(267,229,l),
(276,229,l)
);
},
{
closed = 1;
nodes = (
(380,284,o),
(346,266,o),
(304,258,o),
(282,258,qs),
(280,258,o),
(268,259,o),
(267,259,q),
(267,402,l),
(271,402,o),
(275,403,qs),
(285,405,o),
(295,405,qs),
(309,405,o),
(345,400,o),
(378,385,o),
(401,356,o),
(401,332,qs),
(401,312,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
14 1 13 7 15 7 13 96 16 1 15 9 7 15 9 102 17 12 2 9 4 7 9 4 102 0 1 0 2 8 1 2 91 6 1 4 0 5 11 4 5 92 0 10 0 11 3 10 11 91 0 3 0 0 3 0 87 0 7 7 8 83 0 8 8 15 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
14 1 13 7 15 7 13 96 16 1 15 9 7 15 9 102 17 12 2 9 4 7 9 4 102 0 1 0 2 8 1 2 91 0 8 0 7 13 8 7 91 6 1 4 0 5 11 4 5 92 0 10 0 11 3 10 11 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
40 40 125 123 122 121 120 119 117 115 40 110 40 110 106 103 98 96 91 90 115 42 35 132 37 40 40 40 36 18 24
CALL[ ]	/* CallFunction */";
};
width = 670;
}
);
note = registered;
unicode = 174;
},
{
glyphname = trademark;
kernLeft = trademark;
kernRight = trademark;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(144,745,o),
(144,721,o),
(145,700,o),
(145,676,o),
(145,659,qs),
(145,635,o),
(144,597,o),
(144,574,qs),
(144,563,o),
(135,557,o),
(128,557,qs),
(119,557,o),
(115,538,o),
(115,530,qs),
(115,526,o),
(123,504,o),
(131,504,qs),
(142,504,o),
(176,505,o),
(187,505,qs),
(198,505,o),
(213,504,o),
(224,504,qs),
(229,504,o),
(237,512,o),
(237,529,qs),
(237,557,o),
(221,557,qs),
(209,557,l),
(209,762,l),
(241,762,ls),
(252,762,o),
(256,754,o),
(256,749,qs),
(256,733,ls),
(256,725,o),
(274,717,o),
(286,717,qs),
(297,717,o),
(317,728,o),
(317,739,qs),
(317,745,o),
(316,765,o),
(316,772,qs),
(316,778,o),
(317,798,o),
(317,804,qs),
(317,815,o),
(290,821,o),
(280,821,qs),
(254,821,o),
(204,820,o),
(178,820,qs),
(152,820,o),
(98,821,o),
(72,821,qs),
(62,821,o),
(40,815,o),
(40,804,qs),
(40,798,o),
(41,778,o),
(41,772,qs),
(41,765,o),
(40,745,o),
(40,739,qs),
(40,729,o),
(56,719,o),
(67,719,qs),
(81,719,o),
(100,729,o),
(100,739,qs),
(100,752,ls),
(100,756,o),
(106,762,o),
(115,762,qs),
(144,762,l)
);
},
{
closed = 1;
nodes = (
(730,780,o),
(730,792,qs),
(730,809,o),
(718,821,o),
(704,821,qs),
(632,821,ls),
(618,821,o),
(591,815,o),
(587,804,qs),
(580,783,o),
(564,715,o),
(547,642,o),
(530,573,o),
(524,552,q),
(515,583,o),
(496,652,o),
(478,719,o),
(461,782,o),
(455,806,qs),
(452,817,o),
(446,821,o),
(441,821,qs),
(345,821,ls),
(342,821,o),
(326,814,o),
(326,800,qs),
(326,790,o),
(336,783,o),
(348,777,o),
(358,769,o),
(358,758,qs),
(358,741,o),
(358,717,o),
(359,695,o),
(359,670,o),
(359,652,qs),
(359,629,o),
(359,594,o),
(357,574,qs),
(356,562,o),
(350,557,o),
(342,557,qs),
(333,557,o),
(328,538,o),
(328,530,qs),
(328,521,o),
(337,504,o),
(345,504,qs),
(355,504,o),
(386,505,o),
(397,505,qs),
(408,505,o),
(428,504,o),
(437,504,qs),
(453,504,o),
(453,532,qs),
(453,541,o),
(447,557,o),
(436,557,qs),
(424,557,l),
(424,733,l),
(428,714,o),
(444,656,o),
(461,592,o),
(479,530,o),
(486,508,qs),
(491,494,o),
(518,487,o),
(524,487,qs),
(533,487,o),
(559,496,o),
(562,509,qs),
(567,532,o),
(594,635,o),
(612,717,q),
(612,559,ls),
(612,548,o),
(605,542,o),
(595,542,qs),
(588,542,o),
(581,528,o),
(581,518,qs),
(581,502,o),
(593,489,o),
(600,489,qs),
(610,489,o),
(636,490,o),
(647,490,qs),
(658,490,o),
(688,489,o),
(699,489,qs),
(704,489,o),
(717,500,o),
(717,514,qs),
(717,528,o),
(702,542,o),
(692,542,qs),
(679,542,l),
(679,549,o),
(678,574,o),
(678,605,o),
(677,637,o),
(677,651,qs),
(677,684,o),
(678,728,o),
(678,741,qs),
(678,749,o),
(682,759,o),
(690,760,qs),
(697,761,o),
(708,761,o),
(716,763,qs),
(722,764,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
164 118 51 18 2 40
CALL[ ]	/* CallFunction */";
};
width = 770;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(155,740,o),
(156,693,o),
(156,659,qs),
(156,631,o),
(155,588,o),
(155,562,qs),
(155,550,o),
(149,545,o),
(132,545,qs),
(123,545,o),
(119,530,o),
(119,524,qs),
(119,520,o),
(127,504,o),
(135,504,qs),
(146,504,o),
(180,505,o),
(191,505,qs),
(202,505,o),
(223,504,o),
(234,504,qs),
(239,504,o),
(241,521,o),
(241,523,qs),
(241,545,o),
(225,545,qs),
(206,545,l),
(206,774,l),
(252,774,ls),
(263,774,o),
(267,766,o),
(267,755,qs),
(267,743,ls),
(267,731,o),
(281,719,o),
(290,719,qs),
(298,719,o),
(314,728,o),
(314,739,qs),
(314,745,o),
(313,765,o),
(313,772,qs),
(313,778,o),
(314,798,o),
(314,804,qs),
(314,815,o),
(294,821,o),
(284,821,qs),
(258,821,o),
(208,820,o),
(182,820,qs),
(156,820,o),
(102,821,o),
(76,821,qs),
(66,821,o),
(51,815,o),
(51,804,qs),
(51,798,o),
(52,778,o),
(52,772,qs),
(52,765,o),
(51,745,o),
(51,739,qs),
(51,728,o),
(65,720,o),
(73,720,qs),
(84,720,o),
(97,730,o),
(97,743,qs),
(97,755,ls),
(97,766,o),
(101,774,o),
(112,774,qs),
(155,774,l)
);
},
{
closed = 1;
nodes = (
(723,790,o),
(723,798,qs),
(723,821,o),
(702,821,qs),
(636,821,ls),
(622,821,o),
(595,815,o),
(591,804,qs),
(584,783,o),
(565,713,o),
(544,638,o),
(525,568,o),
(518,546,q),
(512,568,o),
(489,642,o),
(465,719,o),
(444,788,o),
(439,806,qs),
(436,817,o),
(430,821,o),
(425,821,qs),
(339,821,ls),
(336,821,o),
(320,815,o),
(320,803,qs),
(320,794,o),
(332,788,o),
(347,784,o),
(359,777,o),
(359,768,qs),
(359,735,o),
(360,687,o),
(360,652,qs),
(360,626,o),
(360,585,o),
(358,562,qs),
(357,550,o),
(347,545,o),
(336,545,qs),
(327,545,o),
(322,530,o),
(322,524,qs),
(322,520,o),
(331,504,o),
(339,504,qs),
(349,504,o),
(380,505,o),
(391,505,qs),
(402,505,o),
(424,504,o),
(434,504,qs),
(440,504,o),
(447,516,o),
(447,525,qs),
(447,532,o),
(441,545,o),
(430,545,qs),
(411,545,l),
(411,749,l),
(417,730,o),
(436,667,o),
(458,597,o),
(479,530,o),
(487,508,qs),
(492,495,o),
(513,489,o),
(518,489,qs),
(524,489,o),
(545,497,o),
(549,509,qs),
(557,533,o),
(590,651,o),
(613,733,q),
(613,547,ls),
(613,535,o),
(601,530,o),
(589,530,qs),
(581,530,o),
(576,518,o),
(576,511,qs),
(576,500,o),
(586,489,o),
(594,489,qs),
(604,489,o),
(630,490,o),
(641,490,qs),
(652,490,o),
(682,489,o),
(693,489,qs),
(698,489,o),
(707,499,o),
(707,508,qs),
(707,530,o),
(686,530,qs),
(666,530,l),
(666,537,o),
(665,566,o),
(665,600,o),
(664,636,o),
(664,651,qs),
(664,689,o),
(665,739,o),
(665,753,qs),
(665,760,o),
(668,770,o),
(677,772,qs),
(686,773,o),
(701,773,o),
(710,775,qs),
(716,776,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
160 93 51 18 2 40
CALL[ ]	/* CallFunction */";
};
width = 761;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(157,760,o),
(158,693,o),
(158,659,qs),
(158,625,o),
(157,574,o),
(157,542,qs),
(157,530,o),
(141,525,o),
(124,525,qs),
(115,525,o),
(111,516,o),
(111,514,qs),
(111,504,o),
(127,504,qs),
(138,504,o),
(172,505,o),
(183,505,qs),
(194,505,o),
(215,504,o),
(226,504,qs),
(231,504,o),
(233,511,o),
(233,513,qs),
(233,517,o),
(226,525,o),
(217,525,qs),
(188,525,l),
(188,794,l),
(254,794,ls),
(265,794,o),
(269,786,o),
(269,775,qs),
(269,743,ls),
(269,731,o),
(277,722,o),
(282,722,qs),
(285,722,o),
(296,728,o),
(296,739,qs),
(296,745,o),
(295,765,o),
(295,772,qs),
(295,778,o),
(296,798,o),
(296,804,qs),
(296,815,o),
(286,821,o),
(276,821,qs),
(250,821,o),
(200,820,o),
(174,820,qs),
(148,820,o),
(94,821,o),
(68,821,qs),
(58,821,o),
(53,815,o),
(53,804,qs),
(53,798,o),
(54,778,o),
(54,772,qs),
(54,765,o),
(53,745,o),
(53,739,qs),
(53,728,o),
(64,722,o),
(67,722,qs),
(72,722,o),
(79,731,o),
(79,743,qs),
(79,775,ls),
(79,786,o),
(83,794,o),
(94,794,qs),
(157,794,l)
);
},
{
closed = 1;
nodes = (
(713,806,o),
(713,808,qs),
(713,821,o),
(699,821,qs),
(642,821,ls),
(628,821,o),
(601,815,o),
(597,804,qs),
(589,782,o),
(566,710,o),
(542,632,o),
(518,558,o),
(510,536,q),
(503,559,o),
(476,635,o),
(447,716,o),
(422,788,o),
(416,806,qs),
(413,817,o),
(407,821,o),
(402,821,qs),
(331,821,ls),
(328,821,o),
(312,818,o),
(312,808,qs),
(312,800,o),
(327,796,o),
(346,795,o),
(361,792,o),
(361,785,qs),
(361,752,o),
(362,687,o),
(362,652,qs),
(362,621,o),
(362,570,o),
(360,542,qs),
(359,530,o),
(345,525,o),
(328,525,qs),
(319,525,o),
(314,516,o),
(314,514,qs),
(314,504,o),
(331,504,qs),
(341,504,o),
(372,505,o),
(383,505,qs),
(394,505,o),
(419,504,o),
(430,504,qs),
(435,504,o),
(438,511,o),
(438,513,qs),
(438,517,o),
(433,525,o),
(422,525,qs),
(393,525,l),
(393,776,l),
(400,757,o),
(425,686,o),
(453,606,o),
(480,531,o),
(489,508,qs),
(494,497,o),
(507,493,o),
(509,493,qs),
(512,493,o),
(526,499,o),
(531,509,qs),
(537,521,o),
(553,572,o),
(574,640,o),
(600,719,o),
(615,760,q),
(615,527,ls),
(615,515,o),
(597,510,o),
(580,510,qs),
(572,510,o),
(569,501,o),
(569,499,qs),
(569,489,o),
(586,489,qs),
(596,489,o),
(622,490,o),
(633,490,qs),
(644,490,o),
(674,489,o),
(685,489,qs),
(690,489,o),
(693,496,o),
(693,498,qs),
(693,502,o),
(688,510,o),
(678,510,qs),
(648,510,l),
(648,519,o),
(647,552,o),
(647,591,o),
(646,633,o),
(646,651,qs),
(646,696,o),
(647,756,o),
(647,773,qs),
(647,780,o),
(651,790,o),
(659,792,q),
(671,793,o),
(690,793,o),
(702,795,qs),
(708,796,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
161 94 52 18 2 40
CALL[ ]	/* CallFunction */";
};
width = 748;
}
);
note = trademark;
unicode = 8482;
},
{
glyphname = degree;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(182,837,o),
(129,837,qs),
(76,837,o),
(30,788,o),
(30,752,qs),
(30,708,o),
(83,669,o),
(121,669,qs),
(141,669,o),
(179,679,o),
(208,700,o),
(226,732,o),
(226,754,qs),
(226,787,o)
);
},
{
closed = 1;
nodes = (
(155,764,o),
(155,753,qs),
(155,739,o),
(143,722,o),
(128,722,qs),
(114,722,o),
(101,739,o),
(101,752,qs),
(101,765,o),
(116,782,o),
(127,782,qs),
(141,782,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 3 0 0 3 0 87 4 1 2 2 1 83 0 1 1 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 4 1 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
15 14 21 19 14 25 15 25 36 36 5 17
CALL[ ]	/* CallFunction */";
};
width = 253;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(174,837,o),
(126,837,qs),
(79,837,o),
(33,788,o),
(33,752,qs),
(33,710,o),
(83,669,o),
(119,669,qs),
(137,669,o),
(171,679,o),
(198,700,o),
(215,732,o),
(215,754,qs),
(215,787,o)
);
},
{
closed = 1;
nodes = (
(158,769,o),
(158,753,qs),
(158,733,o),
(142,710,o),
(124,710,qs),
(107,710,o),
(90,734,o),
(90,752,qs),
(90,770,o),
(108,794,o),
(125,794,qs),
(142,794,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 3 0 0 3 0 87 4 1 2 2 1 83 0 1 1 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 4 1 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
15 14 21 19 14 25 15 25 36 36 5 17
CALL[ ]	/* CallFunction */";
};
width = 246;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(160,837,o),
(122,837,qs),
(84,837,o),
(37,788,o),
(37,752,qs),
(37,714,o),
(84,669,o),
(116,669,qs),
(131,669,o),
(160,679,o),
(184,700,o),
(199,732,o),
(199,754,qs),
(199,787,o)
);
},
{
closed = 1;
nodes = (
(162,776,o),
(162,753,qs),
(162,724,o),
(138,690,o),
(116,690,qs),
(95,690,o),
(74,725,o),
(74,752,qs),
(74,778,o),
(94,814,o),
(119,814,qs),
(144,814,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 3 0 0 3 0 87 4 1 2 2 1 83 0 1 1 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 4 1 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
15 14 21 19 14 25 15 25 36 36 5 17
CALL[ ]	/* CallFunction */";
};
width = 236;
}
);
note = degree;
unicode = 176;
},
{
glyphname = bar;
kernRight = bar;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(169,829,o),
(159,845,o),
(141,856,o),
(129,856,qs),
(124,856,o),
(109,853,o),
(94,844,o),
(83,830,o),
(83,818,qs),
(83,763,o),
(83,643,o),
(84,522,o),
(84,403,o),
(84,348,qs),
(84,293,o),
(84,170,o),
(83,46,o),
(83,-76,o),
(83,-131,qs),
(83,-145,o),
(109,-161,o),
(128,-161,qs),
(154,-161,o),
(173,-148,o),
(173,-128,qs),
(173,-74,o),
(173,46,o),
(172,168,o),
(172,288,o),
(172,342,qs),
(172,396,o),
(173,512,o),
(173,631,o),
(174,748,o),
(174,802,qs),
(174,810,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 1 83 0 1 1 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
32 30 44 2 16
CALL[ ]	/* CallFunction */";
};
width = 257;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(141,850,o),
(122,850,qs),
(118,850,o),
(106,847,o),
(94,840,o),
(86,828,o),
(86,818,qs),
(86,763,o),
(87,643,o),
(87,522,o),
(87,403,o),
(87,348,qs),
(87,293,o),
(87,170,o),
(86,46,o),
(86,-76,o),
(86,-131,qs),
(86,-142,o),
(107,-155,o),
(121,-155,qs),
(138,-155,o),
(156,-144,o),
(156,-128,qs),
(155,-74,o),
(154,46,o),
(154,168,o),
(154,288,o),
(154,342,qs),
(154,396,o),
(155,512,o),
(155,631,o),
(156,748,o),
(156,802,qs),
(156,817,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 1 83 0 1 1 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
32 30 44 2 16
CALL[ ]	/* CallFunction */";
};
width = 242;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(123,840,o),
(112,840,qs),
(107,840,o),
(91,832,o),
(91,818,qs),
(91,763,o),
(92,643,o),
(92,522,o),
(92,403,o),
(92,348,qs),
(92,293,o),
(92,170,o),
(91,46,o),
(91,-76,o),
(91,-131,qs),
(91,-137,o),
(103,-145,o),
(111,-145,qs),
(131,-145,o),
(131,-128,qs),
(130,-74,o),
(129,46,o),
(129,168,o),
(129,288,o),
(129,342,qs),
(129,396,o),
(130,512,o),
(130,631,o),
(131,748,o),
(131,802,qs),
(131,814,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 1 83 0 1 1 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
46 43 2 17
CALL[ ]	/* CallFunction */";
};
width = 221;
}
);
note = bar;
unicode = 124;
},
{
glyphname = brokenbar;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(151,856,o),
(128,856,qs),
(123,856,o),
(107,850,o),
(93,841,o),
(83,829,o),
(83,823,qs),
(83,771,o),
(84,662,o),
(84,610,qs),
(84,559,o),
(83,451,o),
(83,400,qs),
(83,389,o),
(109,380,o),
(127,380,qs),
(147,380,o),
(174,391,o),
(174,404,qs),
(174,455,o),
(172,557,o),
(172,608,qs),
(172,658,o),
(174,766,o),
(174,817,qs),
(174,827,o)
);
},
{
closed = 1;
nodes = (
(152,314,o),
(128,314,qs),
(123,314,o),
(107,312,o),
(93,308,o),
(83,301,o),
(83,295,qs),
(83,243,o),
(84,136,o),
(84,84,qs),
(84,33,o),
(83,-74,o),
(83,-125,qs),
(83,-145,o),
(109,-162,o),
(127,-162,qs),
(147,-162,o),
(172,-147,o),
(172,-123,qs),
(172,-72,o),
(170,31,o),
(170,82,qs),
(170,132,o),
(172,241,o),
(172,292,qs),
(172,298,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 3 0 2 3 2 87 0 0 0 1 83 0 1 1 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 0 3 1 0 91 0 3 2 2 3 79 0 3 3 2 83 0 2 3 2 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
44 42 44 40 4 19
CALL[ ]	/* CallFunction */";
};
width = 255;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(138,850,o),
(121,850,qs),
(117,850,o),
(105,845,o),
(94,838,o),
(86,828,o),
(86,823,qs),
(87,771,o),
(87,662,o),
(87,610,qs),
(87,559,o),
(86,451,o),
(86,400,qs),
(86,389,o),
(106,380,o),
(120,380,qs),
(136,380,o),
(156,391,o),
(156,404,qs),
(156,455,o),
(154,557,o),
(154,608,qs),
(154,658,o),
(156,766,o),
(156,817,qs),
(156,825,o)
);
},
{
closed = 1;
nodes = (
(139,314,o),
(121,314,qs),
(113,314,o),
(86,306,o),
(86,295,qs),
(86,243,o),
(87,136,o),
(87,84,qs),
(87,33,o),
(86,-74,o),
(86,-125,qs),
(86,-142,o),
(106,-156,o),
(120,-156,qs),
(136,-156,o),
(154,-143,o),
(154,-123,qs),
(154,-72,o),
(152,31,o),
(152,82,qs),
(152,132,o),
(154,241,o),
(154,292,qs),
(154,298,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 3 0 2 3 2 87 0 0 0 1 83 0 1 1 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 0 3 1 0 91 0 3 2 2 3 79 0 3 3 2 83 0 2 3 2 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
42 42 44 40 4 19
CALL[ ]	/* CallFunction */";
};
width = 241;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(121,840,o),
(111,840,qs),
(106,840,o),
(91,829,o),
(91,823,qs),
(92,771,o),
(92,662,o),
(92,610,qs),
(92,559,o),
(91,451,o),
(91,400,qs),
(91,389,o),
(102,380,o),
(110,380,qs),
(119,380,o),
(131,391,o),
(131,404,qs),
(131,455,o),
(129,557,o),
(129,608,qs),
(129,658,o),
(131,766,o),
(131,817,qs),
(131,823,o)
);
},
{
closed = 1;
nodes = (
(121,314,o),
(111,314,qs),
(106,314,o),
(91,306,o),
(91,295,qs),
(91,243,o),
(92,136,o),
(92,84,qs),
(92,33,o),
(91,-74,o),
(91,-125,qs),
(91,-136,o),
(102,-146,o),
(110,-146,qs),
(119,-146,o),
(129,-137,o),
(129,-123,qs),
(129,-72,o),
(127,31,o),
(127,82,qs),
(127,132,o),
(129,241,o),
(129,292,qs),
(129,298,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 3 0 2 3 2 87 0 0 0 1 83 0 1 1 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 0 3 1 0 91 0 3 2 2 3 79 0 3 3 2 83 0 2 3 2 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
42 42 42 40 4 19
CALL[ ]	/* CallFunction */";
};
width = 221;
}
);
note = brokenbar;
unicode = 166;
},
{
glyphname = dagger;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(241,466,o),
(218,466,q),
(218,511,o),
(219,589,o),
(219,665,o),
(220,745,o),
(220,792,qs),
(220,798,o),
(215,815,o),
(205,830,o),
(188,841,o),
(176,841,qs),
(154,841,o),
(129,822,o),
(129,808,qs),
(129,760,o),
(129,676,o),
(130,595,o),
(130,513,o),
(130,466,q),
(112,466,o),
(71,468,o),
(63,468,qs),
(55,468,o),
(30,446,o),
(30,429,qs),
(30,409,o),
(56,389,o),
(63,389,qs),
(130,389,l),
(130,338,o),
(130,247,o),
(129,160,o),
(129,70,o),
(129,19,qs),
(129,13,o),
(156,-9,o),
(175,-9,qs),
(189,-9,o),
(219,5,o),
(219,22,qs),
(219,73,o),
(219,162,o),
(218,250,o),
(218,339,o),
(218,390,q),
(284,390,ls),
(295,390,o),
(320,409,o),
(320,432,qs),
(320,451,o),
(296,469,o),
(292,469,qs),
(277,469,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 5 5 20 67 3 1 1 1 0 83 6 4 7 3 0 0 23 67 0 2 2 24 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
6 4 7 3 0 3 1 1 2 0 1 91 0 5 5 20 67 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
6 4 7 3 0 3 1 1 2 0 1 91 0 5 5 2 83 0 2 2 24 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
1 0 52 51 42 40 33 29 25 23 16 14 7 5 0 53 1 53 8 15
CALL[ ]	/* CallFunction */";
};
width = 350;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(230,457,o),
(204,457,q),
(204,503,o),
(205,586,o),
(205,668,o),
(206,754,o),
(206,802,qs),
(206,814,o),
(191,847,o),
(172,847,qs),
(158,847,o),
(136,832,o),
(136,818,qs),
(136,768,o),
(137,679,o),
(137,593,o),
(137,505,o),
(137,457,q),
(116,457,o),
(70,459,o),
(59,459,qs),
(51,459,o),
(33,442,o),
(33,429,qs),
(33,415,o),
(52,398,o),
(59,398,qs),
(137,398,l),
(137,345,o),
(137,250,o),
(136,156,o),
(136,61,o),
(136,9,qs),
(136,3,o),
(157,-14,o),
(171,-14,qs),
(188,-14,o),
(206,2,o),
(206,12,qs),
(205,64,o),
(204,159,o),
(204,252,o),
(204,347,o),
(204,399,q),
(280,399,ls),
(291,399,o),
(309,416,o),
(309,432,qs),
(309,446,o),
(292,460,o),
(288,460,qs),
(271,460,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 5 5 20 67 3 1 1 1 0 83 6 4 7 3 0 0 23 67 0 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
6 4 7 3 0 3 1 1 2 0 1 91 0 5 5 20 67 0 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
6 4 7 3 0 3 1 1 2 0 1 91 0 5 5 2 83 0 2 2 21 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
1 0 50 49 42 40 33 29 25 23 16 14 7 5 0 51 1 51 8 15
CALL[ ]	/* CallFunction */";
};
width = 342;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(214,442,o),
(184,442,q),
(184,490,o),
(185,576,o),
(185,662,o),
(186,752,o),
(186,802,qs),
(186,814,o),
(178,840,o),
(167,840,qs),
(162,840,o),
(146,832,o),
(146,818,qs),
(146,766,o),
(147,673,o),
(147,583,o),
(147,492,o),
(147,442,q),
(122,442,o),
(67,444,o),
(54,444,qs),
(46,444,o),
(38,434,o),
(38,429,qs),
(38,424,o),
(47,413,o),
(54,413,qs),
(147,413,l),
(147,359,o),
(147,259,o),
(146,162,o),
(146,63,o),
(146,9,qs),
(146,3,o),
(158,-5,o),
(166,-5,qs),
(186,-5,o),
(186,12,qs),
(185,66,o),
(184,164,o),
(184,262,o),
(184,360,o),
(184,414,q),
(275,414,ls),
(286,414,o),
(294,427,o),
(294,432,qs),
(294,437,o),
(287,445,o),
(283,445,qs),
(263,445,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 5 5 20 67 3 1 1 1 0 83 4 6 2 0 0 15 67 0 2 2 16 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
4 6 2 0 3 1 1 2 0 1 91 0 5 5 20 67 0 2 2 16 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
4 6 2 0 3 1 1 2 0 1 91 0 5 5 2 83 0 2 2 16 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
1 0 41 39 32 28 24 22 15 13 7 5 0 50 1 48 7 15
CALL[ ]	/* CallFunction */";
};
width = 331;
}
);
note = dagger;
unicode = 8224;
},
{
glyphname = daggerdbl;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(241,355,o),
(218,355,q),
(218,446,l),
(237,446,o),
(272,447,o),
(284,447,qs),
(301,447,o),
(320,478,o),
(320,489,qs),
(320,504,o),
(303,526,o),
(292,526,qs),
(277,526,o),
(241,523,o),
(218,523,q),
(218,558,o),
(219,619,o),
(219,679,o),
(220,743,o),
(220,782,qs),
(220,788,o),
(215,806,o),
(205,824,o),
(188,836,o),
(176,836,qs),
(153,836,o),
(129,812,o),
(129,798,qs),
(129,758,o),
(129,689,o),
(130,625,o),
(130,560,o),
(130,523,q),
(112,523,o),
(71,525,o),
(63,525,qs),
(49,525,o),
(30,500,o),
(30,486,qs),
(30,472,o),
(49,446,o),
(63,446,qs),
(130,446,l),
(130,355,l),
(112,355,o),
(71,357,o),
(63,357,qs),
(48,357,o),
(30,332,o),
(30,318,qs),
(30,304,o),
(48,278,o),
(63,278,qs),
(130,278,l),
(130,243,o),
(129,181,o),
(129,120,o),
(129,56,o),
(129,19,qs),
(129,9,o),
(154,-11,o),
(173,-11,qs),
(188,-11,o),
(219,4,o),
(219,22,qs),
(219,58,o),
(219,122,o),
(218,183,o),
(218,244,o),
(218,278,q),
(237,278,o),
(272,279,o),
(284,279,qs),
(303,279,o),
(320,310,o),
(320,321,qs),
(320,338,o),
(301,358,o),
(292,358,qs),
(277,358,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
9 8 2 6 10 1 5 0 6 5 91 11 4 12 3 0 3 1 1 2 0 1 91 0 7 7 20 67 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
9 8 2 6 10 1 5 0 6 5 91 11 4 12 3 0 3 1 1 2 0 1 91 0 7 7 2 83 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 78 77 76 72 68 66 65 64 55 53 46 42 38 36 35 31 27 25 18 16 9 5 0 79 1 79 13 15
CALL[ ]	/* CallFunction */";
};
width = 349;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(230,346,o),
(204,346,q),
(204,455,l),
(226,455,o),
(266,456,o),
(280,456,qs),
(291,456,o),
(309,481,o),
(309,489,qs),
(309,500,o),
(292,517,o),
(288,517,qs),
(271,517,o),
(230,514,o),
(204,514,q),
(204,587,o),
(206,722,o),
(206,802,qs),
(206,808,o),
(202,824,o),
(194,839,o),
(181,850,o),
(172,850,qs),
(157,850,o),
(136,832,o),
(136,818,qs),
(137,734,o),
(137,590,o),
(137,514,q),
(116,514,o),
(70,516,o),
(59,516,qs),
(51,516,o),
(33,497,o),
(33,486,qs),
(33,475,o),
(52,455,o),
(59,455,qs),
(137,455,l),
(137,346,l),
(116,346,o),
(70,348,o),
(59,348,qs),
(51,348,o),
(33,329,o),
(33,318,qs),
(33,307,o),
(52,287,o),
(59,287,qs),
(137,287,l),
(136,215,o),
(136,75,o),
(136,-1,qs),
(136,-7,o),
(157,-25,o),
(171,-25,qs),
(188,-25,o),
(206,-8,o),
(206,2,qs),
(204,77,o),
(204,216,o),
(204,287,q),
(226,287,o),
(266,288,o),
(280,288,qs),
(291,288,o),
(309,313,o),
(309,321,qs),
(309,332,o),
(292,349,o),
(288,349,qs),
(271,349,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
9 8 2 6 10 1 5 0 6 5 91 11 4 12 3 0 3 1 1 2 0 1 91 0 7 7 20 67 0 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
9 8 2 6 10 1 5 0 6 5 91 11 4 12 3 0 3 1 1 2 0 1 91 0 7 7 2 83 0 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 7 6 2 7 79 9 8 2 6 10 1 5 0 6 5 91 11 4 12 3 0 3 1 1 2 0 1 91 0 7 7 2 83 0 2 7 2 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 70 69 68 64 60 58 57 56 49 47 42 38 34 32 31 27 23 21 16 14 9 5 0 71 1 71 13 15
CALL[ ]	/* CallFunction */";
};
width = 342;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(214,331,o),
(184,331,q),
(184,470,l),
(210,470,o),
(258,471,o),
(275,471,qs),
(286,471,o),
(294,484,o),
(294,489,qs),
(294,494,o),
(287,502,o),
(283,502,qs),
(263,502,o),
(214,499,o),
(184,499,q),
(184,537,o),
(185,610,o),
(185,683,o),
(186,760,o),
(186,802,qs),
(186,814,o),
(178,840,o),
(167,840,qs),
(162,840,o),
(146,832,o),
(146,818,qs),
(147,730,o),
(147,579,o),
(147,499,q),
(122,499,o),
(67,501,o),
(54,501,qs),
(46,501,o),
(38,491,o),
(38,486,qs),
(38,481,o),
(47,470,o),
(54,470,qs),
(147,470,l),
(147,331,l),
(122,331,o),
(67,333,o),
(54,333,qs),
(46,333,o),
(38,323,o),
(38,318,qs),
(38,313,o),
(47,302,o),
(54,302,qs),
(147,302,l),
(146,226,o),
(146,79,o),
(146,-1,qs),
(146,-7,o),
(158,-15,o),
(166,-15,qs),
(186,-15,o),
(186,2,qs),
(184,81,o),
(184,227,o),
(184,302,q),
(210,302,o),
(258,303,o),
(275,303,qs),
(286,303,o),
(294,316,o),
(294,321,qs),
(294,326,o),
(287,334,o),
(283,334,qs),
(263,334,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
8 1 6 9 1 5 0 6 5 91 4 10 2 0 3 1 1 2 0 1 91 0 7 7 20 67 0 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
8 1 6 9 1 5 0 6 5 91 4 10 2 0 3 1 1 2 0 1 91 0 7 7 2 83 0 2 2 21 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 67 63 59 55 48 46 41 37 33 31 30 26 22 20 15 13 9 5 0 70 1 68 11 15
CALL[ ]	/* CallFunction */";
};
width = 332;
}
);
note = daggerdbl;
unicode = 8225;
},
{
glyphname = Euro;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(643,189,o),
(635,202,o),
(620,211,o),
(607,211,qs),
(591,211,o),
(575,198,o),
(568,178,o),
(565,157,o),
(562,149,qs),
(553,123,o),
(521,91,o),
(477,73,o),
(424,66,o),
(395,66,qs),
(361,66,o),
(301,93,o),
(255,140,o),
(223,206,o),
(218,245,q),
(249,245,o),
(310,246,o),
(326,246,qs),
(337,246,o),
(351,255,o),
(359,269,o),
(362,284,o),
(362,289,qs),
(362,303,o),
(345,327,o),
(334,327,qs),
(317,327,o),
(264,324,o),
(237,324,qs),
(214,324,l),
(211,343,o),
(209,383,o),
(209,404,qs),
(209,411,l),
(242,411,o),
(309,412,o),
(326,412,qs),
(346,412,o),
(362,442,o),
(362,455,qs),
(362,469,o),
(345,493,o),
(334,493,qs),
(317,493,o),
(264,490,o),
(237,490,qs),
(211,490,l),
(211,528,o),
(231,621,o),
(279,703,o),
(357,759,o),
(414,759,qs),
(455,759,o),
(510,738,o),
(543,701,o),
(557,650,o),
(557,620,qs),
(557,605,o),
(560,578,o),
(570,557,o),
(590,545,o),
(607,545,qs),
(618,545,o),
(633,555,o),
(643,570,o),
(648,588,o),
(648,595,qs),
(648,665,o),
(608,759,o),
(541,815,o),
(456,838,o),
(411,838,qs),
(346,838,o),
(246,791,o),
(174,702,o),
(127,573,o),
(115,491,q),
(99,491,o),
(72,492,o),
(65,492,qs),
(48,492,o),
(32,466,o),
(32,452,qs),
(32,439,o),
(51,411,o),
(65,411,qs),
(113,411,l),
(113,405,ls),
(113,382,o),
(116,343,o),
(118,325,q),
(101,325,o),
(73,326,o),
(65,326,qs),
(48,326,o),
(32,300,o),
(32,286,qs),
(32,273,o),
(51,245,o),
(65,245,qs),
(126,245,l),
(145,123,o),
(289,-14,o),
(398,-14,qs),
(472,-14,o),
(568,19,o),
(623,70,o),
(645,134,o),
(645,166,qs),
(645,173,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 6 7 4 7 6 4 104 0 13 1 12 1 13 12 104 10 1 2 11 1 1 13 2 1 91 0 7 7 5 83 0 5 5 20 67 9 1 3 3 4 83 8 1 4 4 23 67 0 12 12 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 6 7 4 7 6 4 104 0 13 1 12 1 13 12 104 8 1 4 9 1 3 2 4 3 91 10 1 2 11 1 1 13 2 1 91 0 7 7 5 83 0 5 5 20 67 0 12 12 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 6 7 4 7 6 4 104 0 13 1 12 1 13 12 104 0 5 0 7 6 5 7 91 8 1 4 9 1 3 2 4 3 91 10 1 2 11 1 1 13 2 1 91 0 12 12 0 83 0 0 0 21 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
110 108 100 98 94 90 84 79 75 71 84 40 40 36 68 36 68 34 36 14 24
CALL[ ]	/* CallFunction */";
};
width = 682;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(608,205,o),
(589,205,qs),
(577,205,o),
(565,192,o),
(559,174,o),
(557,155,o),
(556,149,q),
(547,119,o),
(514,79,o),
(469,57,o),
(415,48,o),
(384,48,qs),
(343,48,o),
(278,79,o),
(228,133,o),
(196,209,o),
(190,254,q),
(227,254,o),
(300,255,o),
(319,255,qs),
(336,255,o),
(348,281,o),
(348,289,qs),
(348,300,o),
(335,318,o),
(327,318,qs),
(307,318,o),
(242,315,o),
(209,315,qs),
(186,315,l),
(183,336,o),
(181,381,o),
(181,404,qs),
(181,420,l),
(220,420,o),
(299,421,o),
(319,421,qs),
(336,421,o),
(348,447,o),
(348,455,qs),
(348,466,o),
(335,484,o),
(327,484,qs),
(307,484,o),
(242,481,o),
(209,481,qs),
(183,481,l),
(185,530,o),
(211,635,o),
(263,722,o),
(342,777,o),
(398,777,qs),
(439,777,o),
(497,753,o),
(533,711,o),
(550,654,o),
(550,620,qs),
(550,606,o),
(552,582,o),
(560,562,o),
(575,551,o),
(588,551,qs),
(606,551,o),
(620,581,o),
(620,595,qs),
(620,665,o),
(581,759,o),
(518,815,o),
(437,838,o),
(396,838,qs),
(334,838,o),
(235,787,o),
(163,694,o),
(118,563,o),
(108,482,q),
(92,482,o),
(65,483,o),
(58,483,qs),
(44,483,o),
(32,463,o),
(32,452,qs),
(32,442,o),
(47,420,o),
(58,420,qs),
(106,420,l),
(106,405,ls),
(106,380,o),
(109,336,o),
(111,316,q),
(94,316,o),
(66,317,o),
(58,317,qs),
(44,317,o),
(32,297,o),
(32,286,qs),
(32,276,o),
(47,254,o),
(58,254,qs),
(118,254,l),
(128,188,o),
(175,88,o),
(244,20,o),
(332,-14,o),
(383,-14,qs),
(451,-14,o),
(541,19,o),
(595,70,o),
(617,134,o),
(617,166,qs),
(617,180,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 6 7 4 7 6 4 104 0 13 1 12 1 13 12 104 10 1 2 11 1 1 13 2 1 91 0 7 7 5 83 0 5 5 20 67 9 1 3 3 4 83 8 1 4 4 23 67 0 12 12 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 6 7 4 7 6 4 104 0 13 1 12 1 13 12 104 8 1 4 9 1 3 2 4 3 91 10 1 2 11 1 1 13 2 1 91 0 7 7 5 83 0 5 5 20 67 0 12 12 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 6 7 4 7 6 4 104 0 13 1 12 1 13 12 104 0 5 0 7 6 5 7 91 8 1 4 9 1 3 2 4 3 91 10 1 2 11 1 1 13 2 1 91 0 12 12 0 83 0 0 0 21 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
108 106 98 96 92 88 84 79 75 71 84 40 38 36 68 36 68 36 36 14 24
CALL[ ]	/* CallFunction */";
};
width = 657;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(563,195,qs),
(558,195,o),
(552,185,o),
(549,171,o),
(547,155,o),
(546,149,qs),
(537,110,o),
(504,59,o),
(459,29,o),
(402,18,o),
(369,18,qs),
(319,18,o),
(244,55,o),
(191,122,o),
(158,214,o),
(150,269,q),
(172,269,o),
(219,269,o),
(262,270,o),
(297,270,o),
(309,270,qs),
(320,270,o),
(328,284,o),
(328,289,qs),
(328,294,o),
(321,303,o),
(317,303,qs),
(293,303,o),
(211,300,o),
(169,300,qs),
(146,300,l),
(143,325,o),
(141,377,o),
(141,404,qs),
(141,435,l),
(165,435,o),
(214,435,o),
(259,436,o),
(297,436,o),
(309,436,qs),
(320,436,o),
(328,450,o),
(328,455,qs),
(328,460,o),
(321,469,o),
(317,469,qs),
(293,469,o),
(211,466,o),
(169,466,qs),
(143,466,l),
(148,535,o),
(182,658,o),
(240,752,o),
(322,807,o),
(375,807,qs),
(416,807,o),
(478,779,o),
(519,729,o),
(540,660,o),
(540,620,qs),
(540,598,o),
(547,561,o),
(561,561,qs),
(574,561,o),
(580,581,o),
(580,595,qs),
(580,665,o),
(543,759,o),
(483,815,o),
(410,838,o),
(374,838,qs),
(316,838,o),
(220,782,o),
(149,682,o),
(104,546,o),
(98,467,q),
(82,467,o),
(55,468,o),
(48,468,qs),
(40,468,o),
(32,457,o),
(32,452,qs),
(32,447,o),
(41,435,o),
(48,435,qs),
(96,435,l),
(96,405,ls),
(96,376,o),
(99,325,o),
(101,301,q),
(84,301,o),
(56,302,o),
(48,302,qs),
(40,302,o),
(32,291,o),
(32,286,qs),
(32,281,o),
(41,269,o),
(48,269,qs),
(106,269,l),
(118,194,o),
(166,87,o),
(233,18,o),
(316,-14,o),
(361,-14,qs),
(421,-14,o),
(503,19,o),
(554,70,o),
(577,134,o),
(577,166,qs),
(577,195,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 6 7 4 7 6 4 104 0 13 1 12 1 13 12 104 10 1 2 11 1 1 13 2 1 91 0 7 7 5 83 0 5 5 20 67 9 1 3 3 4 83 8 1 4 4 23 67 0 12 12 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 6 7 4 7 6 4 104 0 13 1 12 1 13 12 104 8 1 4 9 1 3 2 4 3 91 10 1 2 11 1 1 13 2 1 91 0 7 7 5 83 0 5 5 20 67 0 12 12 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 6 7 4 7 6 4 104 0 13 1 12 1 13 12 104 0 5 0 7 6 5 7 91 8 1 4 9 1 3 2 4 3 91 10 1 2 11 1 1 13 2 1 91 0 12 12 0 83 0 0 0 21 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
110 108 100 98 94 88 84 79 75 69 84 38 38 36 68 36 68 36 36 14 24
CALL[ ]	/* CallFunction */";
};
width = 621;
}
);
note = Euro;
unicode = 8364;
},
{
glyphname = cent;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(317,43,o),
(317,55,qs),
(317,64,o),
(317,79,o),
(317,100,o),
(318,131,o),
(318,155,q),
(356,162,o),
(421,205,o),
(464,250,qs),
(469,255,o),
(472,269,o),
(472,277,qs),
(472,291,o),
(455,310,o),
(440,310,qs),
(429,310,o),
(411,301,o),
(397,287,qs),
(374,265,o),
(331,239,o),
(309,231,q),
(309,564,l),
(328,562,o),
(341,553,o),
(341,544,qs),
(341,538,o),
(334,529,o),
(325,520,o),
(318,506,o),
(318,495,qs),
(318,486,o),
(323,467,o),
(336,451,o),
(359,441,o),
(377,441,qs),
(402,441,o),
(435,458,o),
(455,484,o),
(464,513,o),
(464,525,qs),
(464,547,o),
(441,585,o),
(400,615,o),
(346,635,o),
(316,639,q),
(317,670,o),
(317,735,o),
(317,770,qs),
(317,778,o),
(312,797,o),
(301,813,o),
(284,824,o),
(272,824,qs),
(267,824,o),
(251,821,o),
(235,812,o),
(224,797,o),
(224,786,qs),
(224,745,o),
(225,672,o),
(225,637,q),
(180,629,o),
(108,584,o),
(58,518,o),
(31,433,o),
(31,386,qs),
(31,342,o),
(53,263,o),
(99,202,o),
(173,161,o),
(224,154,q),
(224,54,ls),
(224,40,o),
(250,17,o),
(271,17,qs),
(296,17,o)
);
},
{
closed = 1;
nodes = (
(174,536,o),
(225,556,q),
(225,467,o),
(225,355,o),
(225,286,o),
(224,248,o),
(224,233,q),
(170,247,o),
(133,326,o),
(133,383,qs),
(133,446,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
85 53 30 14 4 2 1 80 69 54 4 4 0 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 1 1 12 67 4 1 0 0 13 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 1 3 1 2 3 104 0 3 0 1 3 0 102 4 1 0 0 1 83 0 1 1 12 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 2 1 3 1 2 3 104 0 3 0 1 3 0 102 4 1 0 0 1 83 0 1 1 14 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
1 0 61 59 41 39 23 21 0 76 1 76 5 15
CALL[ ]	/* CallFunction */";
};
width = 504;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(330,225,o),
(298,218,q),
(298,307,o),
(298,425,o),
(298,506,o),
(299,560,o),
(299,584,q),
(330,582,o),
(354,562,o),
(354,552,qs),
(354,545,o),
(345,536,o),
(335,527,o),
(326,514,o),
(326,502,qs),
(326,485,o),
(348,455,o),
(376,455,qs),
(394,455,o),
(421,469,o),
(437,490,o),
(445,516,o),
(445,528,qs),
(445,550,o),
(422,589,o),
(383,619,o),
(329,638,o),
(299,641,q),
(300,671,o),
(300,734,o),
(300,769,qs),
(300,784,o),
(285,817,o),
(266,817,qs),
(262,817,o),
(250,814,o),
(238,807,o),
(230,795,o),
(230,785,qs),
(230,745,o),
(231,674,o),
(231,639,q),
(186,632,o),
(114,587,o),
(62,520,o),
(34,435,o),
(34,387,qs),
(34,342,o),
(59,261,o),
(109,200,o),
(182,160,o),
(230,156,q),
(230,56,ls),
(230,45,o),
(249,22,o),
(265,22,qs),
(284,22,o),
(300,43,o),
(300,59,qs),
(300,158,l),
(347,166,o),
(419,217,o),
(451,257,q),
(456,262,o),
(460,276,o),
(460,282,qs),
(460,293,o),
(447,307,o),
(436,307,qs),
(428,307,o),
(415,300,o),
(405,289,qs),
(382,263,o)
);
},
{
closed = 1;
nodes = (
(115,317,o),
(115,386,qs),
(115,459,o),
(173,561,o),
(231,578,q),
(231,477,o),
(231,353,o),
(231,276,o),
(230,235,o),
(230,217,q),
(169,228,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
44 30 2 4 2 78 1 3 4 73 70 20 12 4 1 0 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 2 3 2 4 3 104 0 3 0 2 3 0 102 0 0 1 2 0 1 102 0 2 2 14 67 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 4 2 3 2 4 3 104 0 3 0 2 3 0 102 0 0 1 2 0 1 102 0 1 1 2 83 0 2 2 14 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
65 64 55 53 39 37 43 34 5 17
CALL[ ]	/* CallFunction */";
};
width = 492;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(269,806,o),
(258,806,qs),
(253,806,o),
(238,798,o),
(238,784,qs),
(238,745,o),
(239,675,o),
(239,642,q),
(195,636,o),
(122,592,o),
(69,525,o),
(39,438,o),
(39,389,qs),
(39,342,o),
(69,259,o),
(122,197,o),
(195,161,o),
(238,160,q),
(238,59,ls),
(238,31,o),
(257,31,qs),
(267,31,o),
(276,45,o),
(276,65,qs),
(276,95,o),
(276,142,o),
(275,163,q),
(307,169,o),
(368,201,o),
(394,224,qs),
(415,241,o),
(433,268,qs),
(443,283,o),
(443,291,qs),
(443,302,o),
(431,302,qs),
(423,302,o),
(417,293,qs),
(393,261,o),
(382,250,qs),
(357,224,o),
(306,195,o),
(275,191,q),
(275,212,o),
(274,252,o),
(273,296,o),
(272,349,o),
(272,382,qs),
(272,448,o),
(274,560,o),
(275,617,q),
(294,616,o),
(329,607,o),
(356,594,o),
(372,576,o),
(372,566,qs),
(372,557,o),
(361,548,o),
(349,539,o),
(338,526,o),
(338,514,qs),
(338,498,o),
(358,478,o),
(375,478,qs),
(394,478,o),
(418,509,o),
(418,533,qs),
(418,556,o),
(396,596,o),
(358,626,o),
(305,643,o),
(275,644,q),
(276,673,o),
(276,734,o),
(276,768,qs),
(276,780,o)
);
},
{
closed = 1;
nodes = (
(111,512,o),
(150,570,o),
(205,608,o),
(239,614,q),
(239,388,ls),
(239,354,o),
(239,300,o),
(239,253,o),
(238,212,o),
(238,190,q),
(168,195,o),
(90,303,o),
(90,391,qs),
(90,435,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
67 1 2 0 85 1 1 2 79 48 32 3 5 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 2 3 2 1 3 104 0 3 5 2 3 5 102 0 5 4 2 5 4 102 0 0 0 2 1 0 2 91 0 4 4 6 83 0 6 6 14 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 1 2 3 2 1 3 104 0 3 5 2 3 5 102 0 5 4 2 5 4 102 0 6 0 4 6 79 0 0 0 2 1 0 2 91 0 6 6 4 83 0 4 6 4 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
46 18 45 46 27 38 19 7 22
CALL[ ]	/* CallFunction */";
};
width = 475;
}
);
note = cent;
unicode = 162;
},
{
glyphname = currency;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(377,217,o),
(409,241,q),
(413,230,o),
(431,206,o),
(452,186,o),
(475,173,o),
(484,173,qs),
(498,173,o),
(518,198,o),
(518,212,qs),
(518,216,o),
(502,236,o),
(481,259,o),
(459,281,o),
(452,288,q),
(463,307,o),
(476,354,o),
(476,383,qs),
(476,432,o),
(459,471,q),
(467,479,o),
(487,500,o),
(505,521,o),
(518,538,o),
(518,541,qs),
(518,555,o),
(504,580,o),
(484,580,qs),
(477,580,o),
(457,567,o),
(437,548,o),
(420,528,o),
(416,522,q),
(366,561,o),
(293,561,qs),
(255,561,o),
(190,544,o),
(163,526,q),
(162,529,o),
(148,546,o),
(129,565,o),
(107,580,o),
(97,580,qs),
(80,580,o),
(64,557,o),
(64,544,qs),
(64,538,o),
(77,520,o),
(94,500,o),
(112,481,o),
(118,475,q),
(97,437,o),
(97,380,qs),
(97,348,o),
(109,297,o),
(119,278,q),
(110,270,o),
(91,250,o),
(75,232,o),
(64,215,o),
(64,210,qs),
(64,192,o),
(78,173,o),
(97,173,qs),
(107,173,o),
(128,187,o),
(146,205,o),
(160,224,o),
(163,229,q),
(189,212,o),
(248,197,o),
(279,197,qs),
(306,197,o)
);
},
{
closed = 1;
nodes = (
(238,287,o),
(209,312,o),
(190,352,o),
(190,379,qs),
(190,405,o),
(207,445,o),
(234,471,o),
(265,484,o),
(279,484,qs),
(330,484,o),
(383,429,o),
(383,382,qs),
(383,353,o),
(365,312,o),
(336,287,o),
(300,275,o),
(282,275,qs),
(270,275,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
39 34 2 7 3 57 52 21 16 4 6 7 70 3 2 0 6 3 66 4 1 2 3 1 2 79 0 3 0 7 6 3 7 91 9 1 6 8 1 0 1 6 0 91 4 1 2 2 1 83 5 1 1 2 1 71 74 73 1 0 82 80 73 90 74 90 66 64 45 43 38 36 30 28 9 7 0 72 1 72 10 15
CALL[ ]	/* CallFunction */";
};
width = 583;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(159,522,q),
(148,534,o),
(138,544,o),
(136,547,qs),
(122,564,o),
(103,579,o),
(93,579,qs),
(79,579,o),
(65,560,o),
(65,549,qs),
(65,544,o),
(76,527,o),
(93,508,o),
(113,488,o),
(122,479,q),
(96,438,o),
(96,379,qs),
(96,347,o),
(110,294,o),
(122,274,q),
(113,266,o),
(93,245,o),
(76,226,o),
(65,209,o),
(65,205,qs),
(65,194,o),
(79,175,o),
(93,175,qs),
(103,175,o),
(122,190,o),
(136,207,qs),
(138,210,o),
(148,220,o),
(159,232,q),
(183,214,o),
(240,197,o),
(270,197,qs),
(296,197,o),
(363,218,o),
(392,242,q),
(408,224,o),
(419,210,o),
(424,207,q),
(437,190,o),
(457,175,o),
(467,175,qs),
(478,175,o),
(495,194,o),
(495,205,qs),
(495,210,o),
(480,230,o),
(459,253,o),
(436,275,o),
(428,283,q),
(441,303,o),
(456,352,o),
(456,383,qs),
(456,435,o),
(434,476,q),
(443,484,o),
(464,505,o),
(482,526,o),
(495,544,o),
(495,549,qs),
(495,560,o),
(481,579,o),
(467,579,qs),
(457,579,o),
(438,564,o),
(424,547,qs),
(422,544,o),
(411,533,o),
(399,520,q),
(352,561,o),
(283,561,qs),
(210,561,o)
);
},
{
closed = 1;
nodes = (
(383,437,o),
(383,382,qs),
(383,348,o),
(362,301,o),
(329,271,o),
(290,257,o),
(272,257,qs),
(256,257,o),
(220,271,o),
(189,301,o),
(169,347,o),
(169,379,qs),
(169,410,o),
(188,456,o),
(218,487,o),
(255,502,o),
(273,502,qs),
(324,502,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
74 2 2 6 0 60 55 21 16 4 7 6 41 35 2 3 7 3 66 5 1 1 0 2 1 79 8 1 0 9 1 6 7 0 6 91 0 7 0 3 2 7 3 91 5 1 1 1 2 83 4 1 2 1 2 71 77 76 1 0 87 85 76 93 77 93 69 67 48 46 39 37 30 28 9 7 0 75 1 75 10 15
CALL[ ]	/* CallFunction */";
};
width = 560;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(399,485,q),
(408,494,o),
(430,514,o),
(449,535,o),
(462,555,o),
(462,562,qs),
(462,570,o),
(448,577,o),
(443,577,qs),
(440,577,o),
(434,575,o),
(421,563,o),
(396,539,o),
(375,517,q),
(355,537,o),
(301,561,o),
(269,561,qs),
(237,561,o),
(177,537,o),
(154,516,q),
(125,545,o),
(92,577,o),
(87,577,qs),
(79,577,o),
(66,566,o),
(66,558,qs),
(66,550,o),
(102,511,o),
(128,485,q),
(112,463,o),
(95,409,o),
(95,378,qs),
(95,313,o),
(126,268,q),
(101,243,o),
(66,204,o),
(66,197,qs),
(66,189,o),
(79,178,o),
(87,178,qs),
(96,178,o),
(153,237,q),
(196,197,o),
(257,197,qs),
(283,197,o),
(342,220,o),
(368,244,q),
(392,220,o),
(418,194,o),
(432,181,o),
(439,178,o),
(443,178,qs),
(448,178,o),
(462,185,o),
(462,193,qs),
(462,199,o),
(448,220,o),
(427,243,o),
(403,265,o),
(394,274,q),
(409,295,o),
(427,350,o),
(427,383,qs),
(427,440,o)
);
},
{
closed = 1;
nodes = (
(383,451,o),
(383,382,qs),
(383,340,o),
(357,281,o),
(319,244,o),
(276,227,o),
(258,227,qs),
(237,227,o),
(194,244,o),
(160,281,o),
(139,339,o),
(139,379,qs),
(139,417,o),
(161,475,o),
(197,513,o),
(242,532,o),
(265,532,qs),
(316,532,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
62 49 43 34 29 21 16 3 8 7 6 1 66 5 1 3 4 0 3 79 0 4 8 1 6 7 4 6 91 0 7 0 1 0 7 1 91 5 1 3 3 0 83 2 1 0 3 0 71 65 64 75 73 64 81 65 81 38 36 47 34 38 42 9 21
CALL[ ]	/* CallFunction */";
};
width = 527;
}
);
note = currency;
unicode = 164;
},
{
glyphname = dollar;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(350,-69,o),
(350,-50,qs),
(350,-42,o),
(349,-26,o),
(349,-18,q),
(387,-15,o),
(465,6,o),
(527,43,o),
(566,100,o),
(566,140,qs),
(566,180,o),
(526,246,o),
(463,298,o),
(386,339,o),
(348,355,q),
(348,383,o),
(348,465,o),
(349,560,o),
(350,661,o),
(350,708,q),
(372,701,o),
(422,664,o),
(466,609,o),
(498,541,o),
(502,503,q),
(502,481,o),
(522,444,o),
(545,444,qs),
(567,444,o),
(593,464,o),
(593,478,qs),
(593,510,o),
(591,572,o),
(591,604,qs),
(591,640,o),
(595,715,o),
(595,750,qs),
(595,753,o),
(594,766,o),
(585,779,o),
(567,789,o),
(550,789,qs),
(521,789,o),
(505,760,o),
(505,748,qs),
(505,740,o),
(509,685,o),
(513,623,q),
(487,697,o),
(406,776,o),
(350,786,q),
(350,804,ls),
(350,813,o),
(345,832,o),
(335,848,o),
(317,858,o),
(305,858,qs),
(299,858,o),
(284,855,o),
(269,846,o),
(259,831,o),
(259,820,qs),
(259,786,l),
(221,780,o),
(146,749,o),
(87,696,o),
(50,620,o),
(50,569,qs),
(50,509,o),
(77,429,o),
(130,370,o),
(209,324,o),
(260,298,q),
(260,234,o),
(259,119,o),
(259,59,q),
(229,64,o),
(182,87,o),
(150,118,o),
(134,156,o),
(134,175,qs),
(134,186,o),
(132,212,o),
(122,235,o),
(103,250,o),
(87,250,qs),
(73,250,o),
(55,240,o),
(45,225,o),
(42,207,o),
(42,200,qs),
(42,184,o),
(43,162,o),
(43,141,o),
(44,119,o),
(44,103,qs),
(44,92,o),
(43,62,o),
(41,32,o),
(40,8,o),
(40,2,qs),
(40,-7,o),
(64,-37,o),
(86,-37,qs),
(110,-37,o),
(130,-7,o),
(130,5,qs),
(128,41,ls),
(127,57,o),
(127,77,q),
(146,30,o),
(217,-11,o),
(259,-18,q),
(259,-53,ls),
(259,-66,o),
(286,-83,o),
(304,-83,qs),
(327,-83,o)
);
},
{
closed = 1;
nodes = (
(161,639,o),
(194,675,o),
(236,698,o),
(259,705,q),
(259,662,o),
(260,573,o),
(260,490,o),
(260,417,o),
(260,390,q),
(223,405,o),
(177,438,o),
(151,479,o),
(142,528,o),
(142,560,qs),
(142,591,o)
);
},
{
closed = 1;
nodes = (
(348,225,o),
(348,261,q),
(373,249,o),
(419,223,o),
(453,193,o),
(474,159,o),
(474,140,qs),
(474,112,o),
(402,68,o),
(347,60,q),
(348,129,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
128 97 92 69 66 54 6 5 4 141 123 102 44 4 2 5 133 112 41 7 4 5 1 2 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 4 0 5 2 4 5 91 0 2 2 1 83 0 1 1 21 67 6 1 0 0 3 83 0 3 3 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 4 0 5 2 4 5 91 0 2 0 1 0 2 1 91 6 1 0 0 3 83 0 3 3 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 3 4 0 3 79 0 4 0 5 2 4 5 91 0 2 0 1 0 2 1 91 0 3 3 0 83 6 1 0 3 0 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
1 0 90 88 76 74 61 59 32 30 14 12 0 117 1 117 7 15
CALL[ ]	/* CallFunction */";
};
width = 632;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(342,818,o),
(327,851,o),
(308,851,qs),
(304,851,o),
(292,848,o),
(280,841,o),
(272,829,o),
(272,819,qs),
(272,786,l),
(231,781,o),
(152,750,o),
(90,697,o),
(53,621,o),
(53,571,qs),
(53,506,o),
(88,420,o),
(143,363,o),
(210,326,o),
(242,311,qs),
(273,296,l),
(273,230,o),
(272,106,o),
(272,42,q),
(234,46,o),
(176,72,o),
(136,109,o),
(116,154,o),
(116,177,qs),
(116,188,o),
(114,212,o),
(106,233,o),
(92,246,o),
(79,246,qs),
(57,246,o),
(45,216,o),
(45,202,qs),
(45,186,o),
(46,164,o),
(46,143,o),
(47,121,o),
(47,105,qs),
(47,94,o),
(46,64,o),
(44,34,o),
(43,10,o),
(43,4,qs),
(43,-3,o),
(61,-29,o),
(78,-29,qs),
(96,-29,o),
(112,-6,o),
(112,6,qs),
(110,44,ls),
(109,61,o),
(109,82,q),
(132,33,o),
(223,-12,o),
(272,-17,q),
(272,-52,ls),
(272,-63,o),
(293,-76,o),
(307,-76,qs),
(324,-76,o),
(342,-65,o),
(342,-49,qs),
(342,-41,o),
(341,-25,o),
(341,-17,q),
(377,-14,o),
(453,6,o),
(515,44,o),
(555,102,o),
(555,142,qs),
(555,179,o),
(515,239,o),
(453,288,o),
(376,327,o),
(340,342,q),
(340,432,o),
(341,631,o),
(342,726,q),
(370,720,o),
(426,683,o),
(471,626,o),
(502,551,o),
(505,508,qs),
(505,486,o),
(519,449,o),
(539,449,qs),
(557,449,o),
(575,469,o),
(575,483,qs),
(575,515,o),
(573,571,o),
(573,603,qs),
(573,639,o),
(577,714,o),
(577,749,qs),
(577,752,o),
(575,764,o),
(568,774,o),
(554,782,o),
(542,782,qs),
(521,782,o),
(508,759,o),
(508,747,qs),
(508,746,o),
(512,685,o),
(516,622,q),
(489,699,o),
(402,778,o),
(342,786,q),
(342,803,ls)
);
},
{
closed = 1;
nodes = (
(208,713,o),
(272,724,q),
(273,635,o),
(273,454,o),
(273,370,q),
(268,372,o),
(258,376,o),
(254,378,qs),
(230,389,o),
(183,415,o),
(146,456,o),
(124,517,o),
(124,562,qs),
(124,631,o)
);
},
{
closed = 1;
nodes = (
(461,89,o),
(422,64,o),
(370,46,o),
(340,43,q),
(340,268,l),
(368,256,o),
(420,229,o),
(460,198,o),
(484,163,o),
(484,142,qs),
(484,122,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
103 0 2 0 5 124 31 3 3 1 0 132 121 92 34 4 4 1 133 89 57 54 44 5 3 4 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 0 0 1 4 0 1 91 0 4 4 3 83 0 3 3 21 67 0 2 2 5 83 0 5 5 20 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 1 4 0 1 91 0 4 0 3 2 4 3 91 0 2 2 5 83 0 5 5 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 0 2 5 79 0 0 0 1 4 0 1 91 0 4 0 3 2 4 3 91 0 5 5 2 83 0 2 5 2 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
110 108 80 78 64 62 51 49 44 40 6 17
CALL[ ]	/* CallFunction */";
};
width = 619;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(143,26,o),
(199,0,o),
(261,-14,o),
(291,-15,q),
(291,-51,ls),
(291,-57,o),
(303,-65,o),
(311,-65,qs),
(331,-65,o),
(331,-48,qs),
(331,-40,o),
(330,-23,o),
(330,-15,q),
(363,-13,o),
(437,7,o),
(499,46,o),
(539,104,o),
(539,145,qs),
(539,177,o),
(499,230,o),
(437,273,o),
(363,307,o),
(329,321,q),
(329,391,o),
(329,510,o),
(329,614,o),
(330,709,o),
(331,756,q),
(369,753,o),
(434,712,o),
(482,646,o),
(509,562,o),
(509,517,qs),
(509,495,o),
(516,458,o),
(530,458,qs),
(543,458,o),
(549,478,o),
(549,492,qs),
(549,524,o),
(547,570,o),
(547,602,qs),
(547,638,o),
(551,713,o),
(551,748,qs),
(551,755,o),
(541,771,o),
(531,771,qs),
(512,771,o),
(512,746,qs),
(512,745,o),
(516,684,o),
(520,621,q),
(491,702,o),
(397,782,o),
(331,786,q),
(331,802,ls),
(331,814,o),
(323,840,o),
(312,840,qs),
(307,840,o),
(291,832,o),
(291,818,qs),
(291,786,l),
(245,783,o),
(161,753,o),
(96,699,o),
(57,623,o),
(57,574,qs),
(57,501,o),
(106,404,o),
(178,341,o),
(260,305,o),
(292,293,q),
(292,223,o),
(291,84,o),
(291,14,q),
(242,17,o),
(167,47,o),
(116,93,o),
(90,150,o),
(90,180,qs),
(90,202,o),
(82,239,o),
(68,239,qs),
(55,239,o),
(49,219,o),
(49,205,qs),
(49,189,o),
(50,167,o),
(50,146,o),
(51,124,o),
(51,108,qs),
(51,97,o),
(50,67,o),
(48,37,o),
(47,13,o),
(47,7,qs),
(47,0,o),
(57,-16,o),
(67,-16,qs),
(86,-16,o),
(86,9,q),
(85,15,o),
(85,22,qs),
(85,28,o),
(84,42,o),
(84,50,qs),
(83,68,o),
(83,91,q),
(97,64,o)
);
},
{
closed = 1;
nodes = (
(190,383,o),
(134,435,o),
(98,511,o),
(98,565,qs),
(98,604,o),
(125,670,o),
(175,720,o),
(246,751,o),
(291,755,q),
(291,708,o),
(292,616,o),
(292,515,o),
(292,402,o),
(292,336,q),
(259,349,o)
);
},
{
closed = 1;
nodes = (
(421,238,o),
(469,206,o),
(498,168,o),
(498,145,qs),
(498,116,o),
(470,70,o),
(423,37,o),
(363,17,o),
(330,15,q),
(329,81,o),
(329,213,o),
(329,279,q),
(360,266,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
116 82 57 3 7 6 126 111 87 36 4 1 7 0 1 2 1 7 1 0 2 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
5 1 3 4 6 4 3 6 104 0 6 0 7 1 6 7 91 0 1 1 0 83 10 8 2 0 0 21 67 11 1 2 2 0 84 10 8 2 0 0 21 67 0 9 9 4 83 0 4 4 20 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
5 1 3 4 6 4 3 6 104 0 6 0 7 1 6 7 91 0 4 0 9 4 9 87 0 1 1 0 83 10 8 2 0 0 21 67 11 1 2 2 0 84 10 8 2 0 0 21 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
130 129 107 106 103 101 97 96 42 38 19 35 28 22 46 40 12 23
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = dollar;
unicode = 36;
},
{
glyphname = sterling;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(266,617,o),
(277,684,o),
(300,733,o),
(335,760,o),
(358,760,qs),
(383,760,o),
(423,733,o),
(451,697,o),
(466,662,o),
(466,653,qs),
(466,647,o),
(468,629,o),
(477,613,o),
(493,602,o),
(507,602,qs),
(520,602,o),
(536,610,o),
(544,622,o),
(546,634,o),
(546,639,qs),
(546,658,o),
(544,696,o),
(544,715,qs),
(544,737,o),
(547,774,o),
(547,796,qs),
(547,798,o),
(545,810,o),
(537,822,o),
(520,831,o),
(505,831,qs),
(485,831,o),
(470,814,o),
(470,808,qs),
(470,805,o),
(470,798,o),
(471,788,o),
(472,770,o),
(473,756,q),
(468,769,o),
(450,798,o),
(421,822,o),
(382,838,o),
(357,838,qs),
(308,838,o),
(238,800,o),
(193,732,o),
(172,635,o),
(172,577,qs),
(172,548,o),
(176,484,o),
(176,442,q),
(153,443,o),
(111,444,o),
(102,444,qs),
(98,444,o),
(87,441,o),
(76,432,o),
(69,417,o),
(69,404,qs),
(69,391,o),
(77,375,o),
(87,366,o),
(99,363,o),
(102,363,qs),
(175,363,l),
(174,315,o),
(172,258,o),
(172,241,qs),
(172,187,o),
(155,121,o),
(129,87,o),
(96,76,o),
(80,76,qs),
(63,76,o),
(29,55,o),
(29,32,qs),
(29,21,o),
(52,0,o),
(69,0,qs),
(569,0,ls),
(580,0,o),
(602,9,o),
(603,29,qs),
(605,82,o),
(613,163,o),
(613,200,qs),
(613,211,o),
(597,236,o),
(576,236,qs),
(563,236,o),
(547,224,o),
(538,205,o),
(535,181,o),
(534,170,qs),
(534,164,o),
(531,147,o),
(529,131,o),
(526,118,o),
(526,115,qs),
(523,95,o),
(502,84,o),
(486,84,qs),
(221,84,l),
(221,84,o),
(236,100,o),
(252,135,o),
(266,188,o),
(266,226,qs),
(266,363,l),
(296,363,o),
(347,364,o),
(363,364,qs),
(374,364,o),
(399,384,o),
(399,404,qs),
(399,425,o),
(375,445,o),
(371,445,qs),
(353,445,o),
(297,443,o),
(266,442,q),
(266,577,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
83 1 10 11 27 22 2 2 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 3 1 2 1 3 2 104 0 11 11 8 83 9 1 8 8 20 67 0 10 10 8 83 9 1 8 8 20 67 6 1 1 1 0 83 7 1 0 0 15 67 5 1 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 3 1 2 1 3 2 104 7 1 0 6 1 1 3 0 1 91 0 11 11 8 83 9 1 8 8 20 67 0 10 10 8 83 9 1 8 8 20 67 5 1 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 3 1 2 1 3 2 104 0 5 2 4 2 5 96 7 1 0 6 1 1 3 0 1 91 0 11 11 8 83 9 1 8 8 20 67 0 10 10 8 83 9 1 8 8 20 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 3 1 2 1 3 2 104 0 5 2 4 2 5 96 7 1 0 6 1 1 3 0 1 91 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 20 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 3 1 2 1 3 2 104 0 5 2 4 2 5 96 0 8 0 11 10 8 11 91 0 9 0 10 0 9 10 91 7 1 0 6 1 1 3 0 1 91 0 2 2 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
118 116 108 106 92 90 39 72 39 36 55 43 38 68 64 12 24
CALL[ ]	/* CallFunction */";
};
width = 651;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(239,621,o),
(252,695,o),
(280,748,o),
(322,778,o),
(352,778,qs),
(379,778,o),
(419,752,o),
(446,715,o),
(460,671,o),
(460,653,qs),
(460,647,o),
(463,631,o),
(471,617,o),
(484,608,o),
(494,608,qs),
(513,608,o),
(524,630,o),
(524,639,qs),
(524,658,o),
(522,696,o),
(522,715,qs),
(522,737,o),
(525,787,o),
(525,809,qs),
(525,814,o),
(513,828,o),
(490,828,qs),
(476,828,o),
(464,815,o),
(464,808,q),
(464,808,o),
(464,805,o),
(465,795,o),
(466,775,o),
(467,756,q),
(462,769,o),
(444,798,o),
(415,822,o),
(376,838,o),
(351,838,qs),
(302,838,o),
(232,800,o),
(187,732,o),
(166,635,o),
(166,577,qs),
(166,547,o),
(170,478,o),
(170,433,q),
(156,433,o),
(123,434,o),
(90,434,o),
(63,435,o),
(56,435,qs),
(48,435,o),
(30,422,o),
(30,404,qs),
(30,386,o),
(49,372,o),
(56,372,qs),
(170,372,l),
(169,312,o),
(166,242,o),
(166,223,qs),
(166,169,o),
(149,103,o),
(123,69,o),
(90,58,o),
(74,58,qs),
(57,58,o),
(30,41,o),
(30,24,qs),
(30,15,o),
(46,0,o),
(63,0,qs),
(551,0,ls),
(568,0,o),
(584,12,o),
(584,29,qs),
(588,82,o),
(595,163,o),
(595,200,qs),
(595,211,o),
(578,230,o),
(564,230,qs),
(540,230,o),
(528,193,o),
(528,170,qs),
(528,163,o),
(526,142,o),
(523,120,o),
(521,101,o),
(520,97,qs),
(518,80,o),
(497,66,o),
(480,66,qs),
(194,66,l),
(206,79,o),
(216,99,qs),
(224,116,o),
(239,170,o),
(239,208,qs),
(239,373,l),
(317,373,ls),
(328,373,o),
(346,391,o),
(346,405,qs),
(346,420,o),
(329,436,o),
(325,436,qs),
(310,436,o),
(265,434,o),
(239,433,q),
(239,577,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
82 1 11 8 77 1 10 11 34 1 4 2 3 66
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
82 1 11 9 77 1 10 11 34 1 4 2 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
82 1 11 9 77 1 10 11 34 1 4 5 3 66
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 3 1 2 1 3 2 104 0 11 11 8 83 9 1 8 8 20 67 0 10 10 8 83 9 1 8 8 20 67 6 1 1 1 0 83 7 1 0 0 15 67 5 1 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 3 1 2 1 3 2 104 7 1 0 6 1 1 3 0 1 91 0 11 11 8 83 9 1 8 8 20 67 0 10 10 8 83 9 1 8 8 20 67 5 1 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 3 1 2 1 3 2 104 7 1 0 6 1 1 3 0 1 91 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 12 67 5 1 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 3 1 2 1 3 2 104 0 5 2 4 2 5 96 7 1 0 6 1 1 3 0 1 91 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 12 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 3 1 2 1 3 2 104 0 5 2 4 2 5 96 0 8 0 11 10 8 11 91 0 9 0 10 0 9 10 91 7 1 0 6 1 1 3 0 1 91 0 2 2 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
108 106 98 96 86 84 39 100 39 36 55 41 38 36 64 12 24
CALL[ ]	/* CallFunction */";
};
width = 626;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(201,628,o),
(216,712,o),
(251,774,o),
(305,808,o),
(344,808,qs),
(374,808,o),
(415,785,o),
(440,743,o),
(452,686,o),
(452,653,qs),
(452,640,o),
(461,618,o),
(469,618,qs),
(477,618,o),
(486,630,o),
(486,639,qs),
(486,658,o),
(484,696,o),
(484,715,qs),
(484,737,o),
(487,787,o),
(487,809,qs),
(487,814,o),
(481,823,o),
(472,823,qs),
(456,823,o),
(456,808,q),
(456,808,o),
(456,805,o),
(457,795,o),
(458,775,o),
(459,756,q),
(454,769,o),
(436,798,o),
(407,822,o),
(368,838,o),
(343,838,qs),
(294,838,o),
(224,800,o),
(179,732,o),
(158,635,o),
(158,577,qs),
(158,544,o),
(162,467,o),
(162,418,q),
(148,418,o),
(115,419,o),
(82,419,o),
(55,420,o),
(48,420,qs),
(40,420,o),
(32,409,o),
(32,404,qs),
(32,399,o),
(41,387,o),
(48,387,qs),
(162,387,l),
(161,307,o),
(158,216,o),
(158,193,qs),
(158,139,o),
(141,73,o),
(115,39,o),
(82,28,o),
(66,28,qs),
(31,28,o),
(31,11,qs),
(31,6,o),
(38,0,o),
(55,0,qs),
(513,0,ls),
(528,0,o),
(544,12,o),
(546,29,qs),
(550,82,o),
(557,163,o),
(557,200,qs),
(557,211,o),
(543,220,o),
(538,220,qs),
(526,220,o),
(520,193,o),
(520,170,qs),
(520,160,o),
(518,130,o),
(515,99,o),
(513,73,o),
(512,67,qs),
(510,50,o),
(489,36,o),
(472,36,qs),
(156,36,l),
(168,49,o),
(178,69,qs),
(186,86,o),
(201,140,o),
(201,178,qs),
(201,387,l),
(234,387,o),
(292,388,o),
(309,388,qs),
(320,388,o),
(328,402,o),
(328,407,qs),
(328,412,o),
(321,421,o),
(317,421,qs),
(297,421,o),
(235,419,o),
(201,418,q),
(201,577,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
78 1 10 11 1 66 83 1 11 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 3 1 2 1 3 2 104 0 5 2 4 2 5 96 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 12 67 6 1 1 1 0 83 7 1 0 0 15 67 0 2 2 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 3 1 2 1 3 2 104 0 5 2 4 2 5 96 7 1 0 6 1 1 3 0 1 91 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 12 67 0 2 2 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 3 1 2 1 3 2 104 0 5 2 4 2 5 96 0 8 0 11 10 8 11 91 7 1 0 6 1 1 3 0 1 91 0 10 10 9 83 0 9 9 14 67 0 2 2 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
106 104 98 96 86 84 39 100 39 35 55 41 38 68 64 12 24
CALL[ ]	/* CallFunction */";
};
width = 590;
}
);
note = sterling;
unicode = 163;
},
{
glyphname = yen;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(279,751,o),
(306,756,o),
(329,767,o),
(329,783,qs),
(329,795,o),
(308,813,o),
(290,813,qs),
(62,813,ls),
(45,813,o),
(16,799,o),
(16,783,qs),
(16,766,o),
(47,751,o),
(65,749,qs),
(115,744,o),
(154,728,o),
(162,712,qs),
(186,667,o),
(220,601,o),
(249,541,o),
(278,477,o),
(297,435,q),
(283,435,o),
(261,436,o),
(256,436,qs),
(239,436,o),
(223,411,o),
(223,397,qs),
(223,383,o),
(242,357,o),
(256,357,qs),
(333,357,l),
(335,349,o),
(336,326,o),
(337,306,q),
(312,307,o),
(266,308,o),
(256,308,qs),
(239,308,o),
(223,283,o),
(223,269,qs),
(223,255,o),
(242,229,o),
(256,229,qs),
(337,229,l),
(337,109,ls),
(337,84,o),
(303,66,o),
(277,63,qs),
(249,60,o),
(229,44,o),
(229,30,qs),
(229,10,o),
(255,0,o),
(283,0,qs),
(507,0,ls),
(524,0,o),
(545,11,o),
(545,31,qs),
(545,51,o),
(513,63,o),
(494,63,qs),
(428,63,l),
(428,101,o),
(427,190,o),
(427,230,q),
(517,230,ls),
(528,230,o),
(542,239,o),
(550,252,o),
(553,267,o),
(553,272,qs),
(553,287,o),
(536,309,o),
(525,309,qs),
(508,309,o),
(455,307,o),
(425,306,q),
(425,334,l),
(435,357,l),
(460,357,o),
(503,358,o),
(517,358,qs),
(528,358,o),
(542,367,o),
(550,380,o),
(553,395,o),
(553,400,qs),
(553,415,o),
(536,437,o),
(525,437,qs),
(515,437,o),
(488,436,o),
(473,436,q),
(501,493,o),
(565,615,o),
(595,674,qs),
(606,694,o),
(624,707,o),
(644,712,qs),
(648,713,o),
(670,715,o),
(696,716,o),
(722,718,o),
(730,718,qs),
(740,718,o),
(767,728,o),
(767,745,qs),
(767,765,o),
(745,775,o),
(727,775,qs),
(487,775,ls),
(462,775,o),
(445,761,o),
(445,744,qs),
(445,727,o),
(467,714,o),
(487,714,qs),
(493,714,o),
(507,709,o),
(507,698,qs),
(507,685,o),
(480,620,o),
(442,542,o),
(401,465,o),
(387,440,q),
(379,456,o),
(354,508,o),
(326,569,o),
(296,632,o),
(272,686,o),
(257,725,o),
(257,731,qs),
(257,743,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
7 1 4 0 54 1 6 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 1 3 2 2 0 4 1 0 91 11 1 6 10 1 7 8 6 7 91 0 14 14 14 67 12 1 5 5 4 83 13 1 4 4 15 67 0 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 1 3 2 2 0 4 1 0 91 13 1 4 12 1 5 6 4 5 92 11 1 6 10 1 7 8 6 7 91 0 14 14 14 67 0 8 8 9 83 0 9 9 13 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
127 124 111 107 103 101 98 94 90 88 79 76 35 38 66 70 72 17 36 52 46 15 24
CALL[ ]	/* CallFunction */";
};
width = 791;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(415,297,o),
(373,297,qs),
(360,297,o),
(325,298,o),
(289,298,o),
(259,299,o),
(252,299,qs),
(238,299,o),
(226,280,o),
(226,269,qs),
(226,258,o),
(241,238,o),
(252,238,qs),
(270,238,o),
(341,238,o),
(420,239,o),
(493,239,o),
(513,239,qs),
(530,239,o),
(542,264,o),
(542,272,qs),
(542,283,o),
(529,300,o),
(521,300,qs),
(497,300,o)
);
},
{
closed = 1;
nodes = (
(341,425,o),
(310,426,o),
(282,426,o),
(258,427,o),
(252,427,qs),
(238,427,o),
(226,408,o),
(226,397,qs),
(226,386,o),
(241,366,o),
(252,366,qs),
(367,366,l),
(355,425,l)
);
},
{
closed = 1;
nodes = (
(431,366,o),
(495,367,o),
(513,367,qs),
(530,367,o),
(542,392,o),
(542,400,qs),
(542,411,o),
(529,428,o),
(521,428,qs),
(502,428,o),
(442,426,o),
(409,425,q),
(396,366,l)
);
},
{
closed = 1;
nodes = (
(263,763,o),
(293,767,o),
(319,775,o),
(319,789,qs),
(319,800,o),
(301,813,o),
(283,813,qs),
(55,813,ls),
(20,813,o),
(20,789,qs),
(20,775,o),
(42,767,o),
(56,767,qs),
(90,767,o),
(149,753,o),
(158,735,qs),
(178,692,o),
(210,629,o),
(236,578,o),
(260,530,o),
(287,475,o),
(320,404,o),
(342,355,q),
(342,94,ls),
(342,77,o),
(330,58,o),
(312,49,o),
(294,48,o),
(288,48,qs),
(249,48,o),
(249,26,qs),
(249,10,o),
(278,0,o),
(300,0,qs),
(510,0,ls),
(520,0,o),
(535,11,o),
(535,28,qs),
(535,43,o),
(511,51,o),
(500,51,qs),
(414,51,l),
(414,93,o),
(413,192,o),
(412,235,qs),
(411,285,o),
(411,334,q),
(426,368,o),
(469,456,o),
(517,551,o),
(567,646,o),
(589,687,qs),
(598,704,o),
(616,723,o),
(638,725,qs),
(642,725,o),
(662,727,o),
(688,729,o),
(715,731,o),
(726,731,qs),
(736,731,o),
(756,740,o),
(756,752,qs),
(756,770,o),
(732,776,o),
(723,776,qs),
(481,776,ls),
(458,776,o),
(442,763,o),
(442,751,qs),
(442,737,o),
(465,727,o),
(481,727,qs),
(494,727,o),
(522,723,o),
(522,711,qs),
(522,702,o),
(504,661,o),
(477,607,o),
(445,545,o),
(414,487,o),
(390,438,o),
(385,423,q),
(378,439,o),
(351,495,o),
(318,562,o),
(283,634,o),
(255,694,o),
(237,737,o),
(237,743,qs),
(237,755,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
58 1 2 3 118 94 2 0 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 7 9 8 2 6 3 7 6 91 15 1 0 0 1 10 0 1 91 0 13 13 14 83 0 14 14 14 67 5 1 2 2 3 83 4 1 3 3 15 67 12 1 10 10 11 83 0 11 11 13 11 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 7 9 8 2 6 3 7 6 91 4 1 3 5 1 2 0 3 2 91 15 1 0 0 1 10 0 1 91 0 13 13 14 83 0 14 14 14 67 12 1 10 10 11 83 0 11 11 13 11 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
1 0 135 132 129 127 114 111 108 105 101 99 86 85 82 80 76 73 69 67 50 46 42 38 37 31 27 25 12 5 0 24 1 16 16 15
CALL[ ]	/* CallFunction */";
};
width = 780;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(427,282,o),
(392,282,q),
(391,293,o),
(391,313,o),
(391,320,qs),
(391,334,l),
(412,381,l),
(441,381,o),
(492,382,o),
(507,382,qs),
(518,382,o),
(526,395,o),
(526,400,qs),
(526,405,o),
(519,413,o),
(515,413,qs),
(499,413,o),
(453,411,o),
(427,410,q),
(444,445,o),
(483,523,o),
(524,602,o),
(563,676,o),
(580,708,qs),
(589,725,o),
(607,744,o),
(629,746,qs),
(633,746,o),
(654,748,o),
(681,750,o),
(709,752,o),
(720,752,qs),
(740,752,o),
(740,763,qs),
(740,771,o),
(726,777,o),
(717,777,qs),
(472,777,ls),
(452,777,o),
(438,767,o),
(438,762,qs),
(438,751,o),
(462,748,o),
(472,748,qs),
(483,748,o),
(508,748,o),
(529,745,o),
(543,739,o),
(543,732,qs),
(543,723,o),
(522,675,o),
(489,610,o),
(450,536,o),
(413,466,o),
(383,410,o),
(377,395,q),
(371,411,o),
(341,474,o),
(303,552,o),
(263,636,o),
(230,707,o),
(208,757,o),
(208,763,qs),
(208,775,o),
(238,783,o),
(274,785,o),
(304,790,o),
(304,799,qs),
(304,807,o),
(291,813,o),
(273,813,qs),
(55,813,ls),
(20,813,o),
(20,799,qs),
(20,790,o),
(42,787,o),
(56,787,qs),
(104,787,o),
(148,774,o),
(159,755,qs),
(190,699,o),
(231,619,o),
(267,545,o),
(302,466,o),
(327,410,q),
(303,410,o),
(256,412,o),
(246,412,qs),
(238,412,o),
(230,402,o),
(230,397,qs),
(230,392,o),
(239,381,o),
(246,381,qs),
(340,381,l),
(352,355,l),
(352,282,l),
(338,282,o),
(306,283,o),
(276,283,o),
(252,284,o),
(246,284,qs),
(238,284,o),
(230,274,o),
(230,269,qs),
(230,264,o),
(239,253,o),
(246,253,qs),
(352,253,l),
(352,74,ls),
(352,57,o),
(337,38,o),
(314,29,o),
(289,28,o),
(279,28,qs),
(270,28,o),
(250,22,o),
(250,13,qs),
(250,5,o),
(277,0,o),
(291,0,qs),
(500,0,ls),
(520,0,o),
(520,13,qs),
(520,21,o),
(501,31,o),
(490,31,qs),
(394,31,l),
(394,57,o),
(394,115,o),
(393,173,o),
(392,229,o),
(392,253,q),
(427,253,o),
(489,254,o),
(507,254,qs),
(518,254,o),
(526,267,o),
(526,272,qs),
(526,277,o),
(519,285,o),
(515,285,qs),
(495,285,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 107 values pushed */
86 1 7 8 136 46 2 0 7 2 66 0 13 15 14 2 12 8 13 12 91 16 1 8 17 1 7 0 8 7 91 6 18 2 0 5 1 1 2 0 1 91 11 1 9 9 10 83 0 10 10 14 67 4 1 2 2 3 83 0 3 3 13 3 68 1 0 135 131 127 123 115 114 111 109 106 103 99 96 77 76 72 69 66 64 57 53 49 47 45 39 35 33 29 26 22 19 16 14 9 5 0 142 1 140 19 15
CALL[ ]	/* CallFunction */";
};
width = 765;
}
);
note = yen;
unicode = 165;
},
{
glyphname = plus;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(156,479,o),
(156,449,q),
(62,449,ls),
(54,449,o),
(29,433,o),
(29,408,qs),
(29,396,o),
(37,380,o),
(47,371,o),
(59,367,o),
(62,367,qs),
(75,367,o),
(125,369,o),
(154,370,q),
(153,347,o),
(151,290,o),
(151,276,qs),
(151,268,o),
(168,244,o),
(194,244,qs),
(221,244,o),
(240,266,o),
(240,276,qs),
(240,370,l),
(327,370,ls),
(341,370,o),
(363,388,o),
(363,412,qs),
(363,438,o),
(344,454,o),
(335,454,qs),
(318,454,o),
(270,449,o),
(240,449,q),
(240,476,o),
(241,525,o),
(241,541,qs),
(241,552,o),
(221,576,o),
(195,576,qs),
(175,576,o),
(153,552,o),
(153,541,qs),
(153,525,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 0 0 4 0 4 87 5 1 3 3 1 83 6 2 2 1 1 15 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 0 1 4 0 79 6 2 2 1 5 1 3 4 1 3 91 0 0 0 4 83 0 4 0 4 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 1 1 2 96 0 0 2 4 0 79 6 1 1 5 1 3 4 1 3 92 0 0 0 4 83 0 4 0 4 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 69 35 36 33 21 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 393;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(160,473,o),
(160,440,q),
(56,440,ls),
(48,440,o),
(30,425,o),
(30,408,qs),
(30,391,o),
(49,376,o),
(56,376,qs),
(70,376,o),
(126,378,o),
(158,379,q),
(157,353,o),
(155,292,o),
(155,276,qs),
(155,268,o),
(171,250,o),
(188,250,qs),
(206,250,o),
(223,269,o),
(223,276,qs),
(223,379,l),
(321,379,ls),
(332,379,o),
(350,396,o),
(350,413,qs),
(350,431,o),
(336,445,o),
(329,445,qs),
(309,445,o),
(256,440,o),
(223,440,q),
(223,470,o),
(224,524,o),
(224,541,qs),
(224,552,o),
(206,570,o),
(189,570,qs),
(175,570,o),
(157,552,o),
(157,541,qs),
(157,524,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 0 0 4 0 4 87 5 1 3 3 1 83 6 2 2 1 1 15 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 0 1 4 0 79 6 2 2 1 5 1 3 4 1 3 91 0 0 0 4 83 0 4 0 4 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 1 1 2 96 0 0 2 4 0 79 6 1 1 5 1 3 4 1 3 92 0 0 0 4 83 0 4 0 4 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
36 69 35 36 33 21 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 380;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(166,463,o),
(166,425,q),
(47,425,ls),
(39,425,o),
(31,413,o),
(31,408,qs),
(31,403,o),
(40,391,o),
(47,391,qs),
(64,391,o),
(127,393,o),
(164,394,q),
(164,379,o),
(163,346,o),
(162,313,o),
(161,285,o),
(161,276,qs),
(161,268,o),
(174,260,o),
(179,260,qs),
(184,260,o),
(198,269,o),
(199,276,q),
(199,394,l),
(312,394,l),
(323,396,o),
(331,410,o),
(331,415,qs),
(331,420,o),
(324,430,o),
(320,430,qs),
(297,429,o),
(237,425,o),
(199,425,q),
(199,460,o),
(200,521,o),
(200,541,qs),
(200,552,o),
(185,560,o),
(180,560,qs),
(175,560,o),
(163,552,o),
(163,541,qs),
(163,521,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 3 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 0 0 3 0 3 87 4 1 2 2 1 83 5 1 1 1 15 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 0 1 3 0 79 5 1 1 4 1 2 3 1 2 91 0 0 0 3 83 0 3 0 3 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 71 35 21 69 34 6 21
CALL[ ]	/* CallFunction */";
};
width = 362;
}
);
note = plus;
unicode = 43;
},
{
glyphname = minus;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(266,449,o),
(224,449,qs),
(83,449,ls),
(75,449,o),
(50,433,o),
(50,408,qs),
(50,396,o),
(58,380,o),
(68,371,o),
(80,367,o),
(83,367,qs),
(101,367,o),
(171,369,o),
(251,370,o),
(326,372,o),
(348,372,qs),
(359,372,o),
(384,392,o),
(384,415,qs),
(384,440,o),
(360,454,o),
(356,454,qs),
(332,454,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
10 0 1 40
CALL[ ]	/* CallFunction */";
};
width = 436;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(260,440,o),
(218,440,qs),
(77,440,ls),
(69,440,o),
(51,425,o),
(51,408,qs),
(51,391,o),
(70,376,o),
(77,376,qs),
(95,376,o),
(165,378,o),
(245,380,o),
(320,381,o),
(342,381,qs),
(353,381,o),
(371,399,o),
(371,415,qs),
(371,433,o),
(354,445,o),
(350,445,qs),
(326,444,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
10 0 1 40
CALL[ ]	/* CallFunction */";
};
width = 420;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(251,425,o),
(209,425,qs),
(68,425,ls),
(60,425,o),
(52,413,o),
(52,408,qs),
(52,403,o),
(61,391,o),
(68,391,qs),
(86,391,o),
(156,393,o),
(236,395,o),
(311,396,o),
(333,396,qs),
(344,396,o),
(352,410,o),
(352,415,qs),
(352,420,o),
(345,430,o),
(341,430,qs),
(317,429,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
10 0 1 40
CALL[ ]	/* CallFunction */";
};
width = 397;
}
);
note = minus;
unicode = 8722;
},
{
glyphname = multiply;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(304,311,o),
(273,342,o),
(236,382,o),
(220,409,q),
(241,438,o),
(285,498,o),
(308,527,qs),
(316,537,o),
(316,548,qs),
(316,554,o),
(308,561,o),
(298,565,o),
(288,567,o),
(285,567,qs),
(274,567,o),
(244,558,o),
(227,533,qs),
(178,464,l),
(162,485,o),
(144,509,o),
(133,522,o),
(129,528,o),
(128,530,qs),
(117,547,o),
(95,567,o),
(86,567,qs),
(69,567,o),
(48,547,o),
(48,533,qs),
(48,525,o),
(63,504,o),
(88,475,o),
(119,438,o),
(135,414,q),
(127,404,o),
(95,362,o),
(77,339,qs),
(69,328,o),
(51,306,o),
(51,298,qs),
(51,287,o),
(58,273,o),
(69,265,o),
(80,262,o),
(83,262,qs),
(95,262,o),
(123,287,o),
(150,320,o),
(173,352,o),
(178,358,q),
(186,346,o),
(213,307,o),
(244,271,o),
(276,245,o),
(289,245,qs),
(311,245,o),
(325,266,o),
(325,281,qs),
(325,289,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
54 40 24 8 4 1 2 1 66 3 1 2 0 1 0 2 1 91 3 1 2 2 0 83 0 0 2 0 71 45 43 33 31 40 34 4 17
CALL[ ]	/* CallFunction */";
};
width = 370;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(300,311,o),
(269,342,o),
(232,382,o),
(216,409,q),
(237,438,o),
(282,501,o),
(306,530,qs),
(312,537,o),
(312,545,qs),
(312,557,o),
(293,565,o),
(288,565,qs),
(277,565,o),
(251,552,o),
(231,524,qs),
(182,455,l),
(166,476,o),
(145,503,o),
(132,519,o),
(125,528,o),
(124,530,qs),
(111,549,o),
(93,565,o),
(82,565,qs),
(68,565,o),
(53,547,o),
(53,533,qs),
(53,529,o),
(58,522,o),
(78,500,o),
(115,454,o),
(147,412,q),
(137,400,o),
(133,395,o),
(126,386,o),
(106,361,o),
(81,330,qs),
(73,319,o),
(55,301,o),
(55,290,qs),
(55,273,o),
(72,262,o),
(79,262,qs),
(91,262,o),
(121,289,o),
(151,325,o),
(176,359,o),
(182,365,q),
(190,353,o),
(217,314,o),
(248,278,o),
(280,252,o),
(293,252,qs),
(309,252,o),
(321,269,o),
(321,281,qs),
(321,289,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 9 values pushed */
52 40 24 8 4 0 2 1 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 9 values pushed */
52 40 24 8 4 1 2 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
3 1 2 0 0 2 79 3 1 2 2 0 83 1 1 0 2 0 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
3 1 2 0 1 0 2 1 91 3 1 2 2 0 83 0 0 2 0 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
45 43 33 31 40 34 4 17
CALL[ ]	/* CallFunction */";
};
width = 371;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(295,311,o),
(264,342,o),
(227,382,o),
(211,409,q),
(232,438,o),
(277,501,o),
(301,530,qs),
(307,537,o),
(307,545,qs),
(307,553,o),
(297,562,o),
(292,562,qs),
(281,562,o),
(257,537,o),
(237,509,qs),
(188,440,l),
(156,482,o),
(123,525,o),
(119,530,qs),
(104,550,o),
(89,561,o),
(77,561,qs),
(71,561,o),
(59,550,o),
(59,544,qs),
(59,540,o),
(68,528,o),
(91,500,o),
(132,450,o),
(164,408,q),
(155,396,o),
(148,388,o),
(136,374,o),
(112,346,o),
(87,315,qs),
(79,304,o),
(61,286,o),
(61,277,qs),
(61,262,o),
(74,262,qs),
(86,262,o),
(118,293,o),
(151,332,o),
(180,370,o),
(188,376,q),
(196,364,o),
(223,325,o),
(254,289,o),
(286,263,o),
(299,263,qs),
(307,263,o),
(316,273,o),
(316,281,qs),
(316,289,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
49 37 23 8 4 0 2 1 66 3 1 2 0 0 2 79 3 1 2 2 0 83 1 1 0 2 0 71 42 40 32 30 40 34 4 17
CALL[ ]	/* CallFunction */";
};
width = 372;
}
);
note = multiply;
unicode = 215;
},
{
glyphname = divide;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(152,169,o),
(189,169,qs),
(224,169,o),
(259,209,o),
(259,233,qs),
(259,256,o),
(226,295,o),
(191,295,qs),
(172,295,o),
(145,283,o),
(129,264,o),
(121,241,o),
(121,231,qs),
(121,210,o)
);
},
{
closed = 1;
nodes = (
(152,519,o),
(189,519,qs),
(224,519,o),
(259,559,o),
(259,583,qs),
(259,606,o),
(226,645,o),
(191,645,qs),
(172,645,o),
(145,633,o),
(129,614,o),
(121,591,o),
(121,581,qs),
(121,560,o)
);
},
{
closed = 1;
nodes = (
(241,449,o),
(199,449,qs),
(58,449,ls),
(50,449,o),
(25,433,o),
(25,408,qs),
(25,396,o),
(33,380,o),
(43,371,o),
(55,367,o),
(58,367,qs),
(76,367,o),
(146,369,o),
(226,370,o),
(301,372,o),
(323,372,qs),
(334,372,o),
(359,392,o),
(359,415,qs),
(359,440,o),
(335,454,o),
(331,454,qs),
(307,454,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 2 0 3 4 2 3 91 0 0 0 1 0 1 87 0 5 5 4 83 6 7 2 4 4 15 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 0 3 4 2 3 91 6 7 2 4 0 5 0 4 5 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
7 1 4 3 6 6 4 96 0 2 0 3 4 2 3 91 0 6 0 5 0 6 5 92 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
29 28 49 46 40 33 28 50 29 50 36 38 36 36 8 19
CALL[ ]	/* CallFunction */";
};
width = 382;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (34,188);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (89,207);
ref = period;
},
{
alignment = -1;
pos = (89,539);
ref = period;
},
{
alignment = -1;
pos = (-17,0);
ref = minus;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 0 3 4 2 3 91 0 0 0 1 0 1 87 0 5 5 4 83 6 1 4 4 15 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 3 4 2 3 91 6 1 4 0 5 0 4 5 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
30 29 41 34 29 49 30 45 36 38 36 37 7 30
CALL[ ]	/* CallFunction */";
};
width = 385;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(174,219,o),
(197,219,qs),
(219,219,o),
(242,244,o),
(242,259,qs),
(242,273,o),
(222,297,o),
(199,297,qs),
(175,297,o),
(155,270,o),
(155,257,qs),
(155,244,o)
);
},
{
closed = 1;
nodes = (
(174,521,o),
(197,521,qs),
(219,521,o),
(242,546,o),
(242,561,qs),
(242,575,o),
(222,599,o),
(199,599,qs),
(175,599,o),
(155,572,o),
(155,559,qs),
(155,546,o)
);
},
{
closed = 1;
nodes = (
(244,425,o),
(202,425,qs),
(61,425,ls),
(53,425,o),
(45,413,o),
(45,408,qs),
(45,403,o),
(54,391,o),
(61,391,qs),
(79,391,o),
(149,393,o),
(229,395,o),
(304,396,o),
(326,396,qs),
(337,396,o),
(345,410,o),
(345,415,qs),
(345,420,o),
(338,430,o),
(334,430,qs),
(310,429,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 0 3 4 2 3 91 0 0 0 1 0 1 87 0 5 5 4 83 6 1 4 4 15 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 3 4 2 3 91 6 1 4 0 5 0 4 5 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
25 24 36 29 24 44 25 40 36 36 36 34 7 19
CALL[ ]	/* CallFunction */";
};
width = 389;
}
);
note = divide;
unicode = 247;
},
{
glyphname = equal;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(229,322,o),
(187,322,qs),
(174,322,o),
(145,323,o),
(117,323,o),
(93,324,o),
(86,324,qs),
(69,324,o),
(53,299,o),
(53,285,qs),
(53,271,o),
(72,245,o),
(86,245,qs),
(104,245,o),
(162,245,o),
(226,246,o),
(287,246,o),
(307,246,qs),
(318,246,o),
(332,255,o),
(340,268,o),
(343,283,o),
(343,288,qs),
(343,303,o),
(325,325,o),
(315,325,qs),
(291,325,o)
);
},
{
closed = 1;
nodes = (
(229,490,o),
(187,490,qs),
(174,490,o),
(145,491,o),
(117,491,o),
(93,492,o),
(86,492,qs),
(69,492,o),
(53,467,o),
(53,453,qs),
(53,439,o),
(72,413,o),
(86,413,qs),
(104,413,o),
(162,413,o),
(226,414,o),
(287,414,o),
(307,414,qs),
(318,414,o),
(332,423,o),
(340,436,o),
(343,451,o),
(343,456,qs),
(343,471,o),
(325,493,o),
(315,493,qs),
(291,493,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
4 1 0 0 1 0 1 87 0 3 3 2 83 5 1 2 2 23 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
5 1 2 0 3 0 2 3 91 4 1 0 1 1 0 79 4 1 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
28 27 1 0 41 34 27 53 28 45 14 7 0 26 1 18 6 15
CALL[ ]	/* CallFunction */";
};
width = 394;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(224,313,o),
(182,313,qs),
(169,313,o),
(140,314,o),
(112,314,o),
(88,315,o),
(81,315,qs),
(67,315,o),
(55,296,o),
(55,285,qs),
(55,274,o),
(70,254,o),
(81,254,qs),
(99,254,o),
(157,254,o),
(221,255,o),
(282,255,o),
(302,255,qs),
(319,255,o),
(331,280,o),
(331,288,qs),
(331,299,o),
(318,316,o),
(310,316,qs),
(286,316,o)
);
},
{
closed = 1;
nodes = (
(224,481,o),
(182,481,qs),
(169,481,o),
(140,482,o),
(112,482,o),
(88,483,o),
(81,483,qs),
(67,483,o),
(55,464,o),
(55,453,qs),
(55,442,o),
(70,422,o),
(81,422,qs),
(99,422,o),
(157,422,o),
(221,423,o),
(282,423,o),
(302,423,qs),
(319,423,o),
(331,448,o),
(331,456,qs),
(331,467,o),
(318,484,o),
(310,484,qs),
(286,484,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
4 1 0 0 1 0 1 87 0 3 3 2 83 5 1 2 2 23 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
5 1 2 0 3 0 2 3 91 4 1 0 1 1 0 79 4 1 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
26 25 1 0 37 30 25 49 26 41 12 5 0 24 1 16 6 15
CALL[ ]	/* CallFunction */";
};
width = 385;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(217,298,o),
(175,298,qs),
(162,298,o),
(133,299,o),
(105,299,o),
(81,300,o),
(74,300,qs),
(66,300,o),
(58,290,o),
(58,285,qs),
(58,280,o),
(67,269,o),
(74,269,qs),
(92,269,o),
(150,269,o),
(214,270,o),
(275,270,o),
(295,270,qs),
(306,270,o),
(314,283,o),
(314,288,qs),
(314,293,o),
(307,301,o),
(303,301,qs),
(279,301,o)
);
},
{
closed = 1;
nodes = (
(217,466,o),
(175,466,qs),
(162,466,o),
(133,467,o),
(105,467,o),
(81,468,o),
(74,468,qs),
(66,468,o),
(58,458,o),
(58,453,qs),
(58,448,o),
(67,437,o),
(74,437,qs),
(92,437,o),
(150,437,o),
(214,438,o),
(275,438,o),
(295,438,qs),
(306,438,o),
(314,451,o),
(314,456,qs),
(314,461,o),
(307,469,o),
(303,469,qs),
(279,469,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
4 1 0 0 1 0 1 87 0 3 3 2 83 5 1 2 2 23 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
5 1 2 0 3 0 2 3 91 4 1 0 1 1 0 79 4 1 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
26 25 1 0 37 30 25 49 26 41 12 5 0 24 1 16 6 15
CALL[ ]	/* CallFunction */";
};
width = 372;
}
);
note = equal;
unicode = 61;
},
{
glyphname = greater;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(70,467,o),
(103,435,o),
(139,398,o),
(151,378,q),
(139,358,o),
(103,321,o),
(70,290,o),
(46,267,o),
(46,261,qs),
(46,252,o),
(57,252,qs),
(65,252,o),
(102,267,o),
(148,291,o),
(198,320,o),
(239,348,o),
(265,371,o),
(265,378,qs),
(265,385,o),
(239,410,o),
(198,438,o),
(148,467,o),
(102,490,o),
(65,505,o),
(57,505,qs),
(46,505,o),
(46,496,qs),
(46,490,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
23 1 1 0 1 66 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 44 33 2 17
CALL[ ]	/* CallFunction */";
};
width = 299;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(73,467,o),
(106,435,o),
(142,398,o),
(154,378,q),
(142,358,o),
(106,321,o),
(73,290,o),
(49,267,o),
(49,261,qs),
(49,252,o),
(60,252,qs),
(71,252,o),
(132,284,o),
(197,326,o),
(247,368,o),
(247,378,qs),
(247,385,o),
(223,410,o),
(187,438,o),
(142,467,o),
(101,490,o),
(67,505,o),
(60,505,qs),
(49,505,o),
(49,496,qs),
(49,490,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
21 1 1 0 1 66 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 42 33 2 17
CALL[ ]	/* CallFunction */";
};
width = 285;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(78,467,o),
(111,435,o),
(147,398,o),
(159,378,q),
(147,358,o),
(111,321,o),
(78,290,o),
(54,267,o),
(54,261,qs),
(54,252,o),
(65,252,qs),
(74,252,o),
(125,284,o),
(180,326,o),
(222,368,o),
(222,378,qs),
(222,389,o),
(180,431,o),
(125,473,o),
(74,505,o),
(65,505,qs),
(54,505,o),
(54,496,qs),
(54,490,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
19 1 1 0 1 66 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 40 33 2 17
CALL[ ]	/* CallFunction */";
};
width = 265;
}
);
note = greater;
unicode = 62;
},
{
glyphname = less;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(243,505,qs),
(235,505,o),
(198,490,o),
(151,467,o),
(102,438,o),
(61,410,o),
(35,385,o),
(35,378,qs),
(35,371,o),
(61,348,o),
(102,320,o),
(151,291,o),
(198,267,o),
(235,252,o),
(243,252,qs),
(254,252,o),
(254,261,qs),
(254,267,o),
(230,290,o),
(197,321,o),
(161,358,o),
(149,378,q),
(161,398,o),
(197,435,o),
(230,467,o),
(254,490,o),
(254,496,qs),
(254,505,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
5 1 0 1 1 66 0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71 44 43 2 17
CALL[ ]	/* CallFunction */";
};
width = 299;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(225,505,qs),
(218,505,o),
(184,490,o),
(143,467,o),
(98,438,o),
(62,410,o),
(38,385,o),
(38,378,qs),
(38,368,o),
(88,326,o),
(153,284,o),
(214,252,o),
(225,252,qs),
(236,252,o),
(236,261,qs),
(236,267,o),
(212,290,o),
(179,321,o),
(143,358,o),
(131,378,q),
(143,398,o),
(179,435,o),
(212,467,o),
(236,490,o),
(236,496,qs),
(236,505,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
5 1 0 1 1 66 0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71 42 43 2 17
CALL[ ]	/* CallFunction */";
};
width = 285;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(200,505,qs),
(191,505,o),
(140,473,o),
(85,431,o),
(43,389,o),
(43,378,qs),
(43,368,o),
(85,326,o),
(140,284,o),
(191,252,o),
(200,252,qs),
(211,252,o),
(211,261,qs),
(211,267,o),
(187,290,o),
(154,321,o),
(118,358,o),
(106,378,q),
(118,398,o),
(154,435,o),
(187,467,o),
(211,490,o),
(211,496,qs),
(211,505,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
5 1 0 1 1 66 0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71 40 43 2 17
CALL[ ]	/* CallFunction */";
};
width = 265;
}
);
note = less;
unicode = 60;
},
{
glyphname = plusminus;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(198,479,o),
(198,449,q),
(104,449,ls),
(96,449,o),
(71,433,o),
(71,408,qs),
(71,395,o),
(79,379,o),
(89,370,o),
(101,367,o),
(104,367,qs),
(117,367,o),
(167,369,o),
(196,370,q),
(195,347,o),
(193,290,o),
(193,276,qs),
(193,268,o),
(216,250,o),
(236,250,qs),
(261,250,o),
(282,268,o),
(282,276,qs),
(282,370,l),
(369,370,ls),
(383,370,o),
(405,391,o),
(405,415,qs),
(405,440,o),
(381,454,o),
(377,454,qs),
(360,454,o),
(312,449,o),
(282,449,q),
(282,476,o),
(283,525,o),
(283,541,qs),
(283,552,o),
(258,568,o),
(237,568,qs),
(218,568,o),
(195,552,o),
(195,541,qs),
(195,525,o)
);
},
{
closed = 1;
nodes = (
(287,229,o),
(245,229,qs),
(104,229,ls),
(96,229,o),
(71,213,o),
(71,188,qs),
(71,176,o),
(79,160,o),
(89,151,o),
(101,147,o),
(104,147,qs),
(122,147,o),
(192,149,o),
(272,150,o),
(347,152,o),
(369,152,qs),
(380,152,o),
(405,172,o),
(405,195,qs),
(405,220,o),
(381,234,o),
(377,234,qs),
(353,234,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 0 4 7 0 4 91 9 10 2 7 0 8 7 8 87 5 1 3 3 1 83 6 2 2 1 1 15 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
6 2 2 1 5 1 3 4 1 3 91 0 0 0 4 7 0 4 91 9 10 2 7 8 8 7 79 9 10 2 7 7 8 83 0 8 7 8 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 2 0 1 1 2 96 10 1 7 4 9 9 7 96 6 1 1 5 1 3 4 1 3 92 0 0 0 4 7 0 4 91 0 9 8 8 9 79 0 9 9 8 84 0 8 9 8 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
45 44 65 62 56 49 44 66 45 66 38 69 35 36 33 21 34 11 22
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(190,473,o),
(190,440,q),
(86,440,ls),
(78,440,o),
(60,425,o),
(60,408,qs),
(60,390,o),
(79,376,o),
(86,376,qs),
(100,376,o),
(156,378,o),
(188,379,q),
(187,353,o),
(185,292,o),
(185,276,qs),
(185,268,o),
(204,254,o),
(218,254,qs),
(235,254,o),
(251,269,o),
(253,276,q),
(253,379,l),
(351,379,ls),
(362,379,o),
(380,398,o),
(380,415,qs),
(380,433,o),
(363,445,o),
(359,445,qs),
(339,444,o),
(286,440,o),
(253,440,q),
(253,470,o),
(254,524,o),
(254,541,qs),
(254,552,o),
(233,565,o),
(219,565,qs),
(205,565,o),
(187,552,o),
(187,541,qs),
(187,524,o)
);
},
{
closed = 1;
nodes = (
(269,220,o),
(227,220,qs),
(86,220,ls),
(78,220,o),
(60,205,o),
(60,188,qs),
(60,171,o),
(79,156,o),
(86,156,qs),
(104,156,o),
(174,158,o),
(254,160,o),
(329,161,o),
(351,161,qs),
(362,161,o),
(380,179,o),
(380,195,qs),
(380,213,o),
(363,225,o),
(359,225,qs),
(335,224,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 4 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 0 0 4 7 0 4 91 9 1 7 0 8 7 8 87 5 1 3 3 1 83 6 2 2 1 1 15 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
6 2 2 1 5 1 3 4 1 3 91 0 0 0 4 7 0 4 91 9 1 7 8 8 7 79 9 1 7 7 8 83 0 8 7 8 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
43 42 54 47 42 62 43 58 36 69 35 36 33 21 34 10 22
CALL[ ]	/* CallFunction */";
};
width = 441;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(179,463,o),
(179,425,q),
(60,425,ls),
(52,425,o),
(44,413,o),
(44,408,qs),
(44,403,o),
(53,391,o),
(60,391,qs),
(77,391,o),
(140,393,o),
(177,394,q),
(177,379,o),
(176,346,o),
(175,313,o),
(174,285,o),
(174,276,qs),
(174,268,o),
(187,260,o),
(192,260,qs),
(197,260,o),
(211,269,o),
(212,276,q),
(212,394,l),
(325,394,l),
(336,396,o),
(344,410,o),
(344,415,qs),
(344,420,o),
(337,430,o),
(333,430,qs),
(310,429,o),
(250,425,o),
(212,425,q),
(212,460,o),
(213,521,o),
(213,541,qs),
(213,552,o),
(198,560,o),
(193,560,qs),
(188,560,o),
(176,552,o),
(176,541,qs),
(176,521,o)
);
},
{
closed = 1;
nodes = (
(243,205,o),
(201,205,qs),
(60,205,ls),
(52,205,o),
(44,193,o),
(44,188,qs),
(44,183,o),
(53,171,o),
(60,171,qs),
(78,171,o),
(148,173,o),
(228,175,o),
(303,176,o),
(325,176,qs),
(336,176,o),
(344,190,o),
(344,195,qs),
(344,200,o),
(337,210,o),
(333,210,qs),
(309,209,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 3 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 0 0 3 6 0 3 91 8 1 6 0 7 6 7 87 4 1 2 2 1 83 5 1 1 1 15 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
5 1 1 4 1 2 3 1 2 91 0 0 0 3 6 0 3 91 8 1 6 7 7 6 79 8 1 6 6 7 83 0 7 6 7 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
45 44 56 49 44 64 45 60 36 71 35 21 69 34 9 21
CALL[ ]	/* CallFunction */";
};
width = 390;
}
);
note = plusminus;
unicode = 177;
},
{
glyphname = asciitilde;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(57,498,o),
(66,498,qs),
(73,498,o),
(91,506,o),
(111,515,o),
(135,523,o),
(150,523,qs),
(164,523,o),
(196,515,o),
(231,506,o),
(268,499,o),
(287,499,qs),
(298,499,o),
(336,506,o),
(372,523,o),
(398,552,o),
(398,574,qs),
(398,590,o),
(381,609,o),
(376,609,qs),
(369,609,o),
(346,596,qs),
(332,588,o),
(300,579,o),
(286,579,qs),
(271,579,o),
(235,588,o),
(199,598,o),
(164,607,o),
(149,607,qs),
(112,607,o),
(81,589,qs),
(67,581,o),
(47,556,o),
(47,534,qs),
(47,519,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 4 3 1 79 2 1 0 0 4 3 0 4 91 0 1 1 3 83 5 1 3 1 3 71 35 35 38 35 35 36 6 21
CALL[ ]	/* CallFunction */";
};
width = 441;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (40,507);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (29,0);
ref = tilde;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 4 3 1 79 2 1 0 0 4 3 0 4 91 0 1 1 3 83 5 1 3 1 3 71 35 35 38 35 35 37 6 32
CALL[ ]	/* CallFunction */";
};
width = 423;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
alignment = -1;
pos = (30,522);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (16,0);
ref = tilde;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 4 3 1 79 2 1 0 0 4 3 0 4 91 0 1 1 3 83 5 1 3 1 3 71 35 35 38 35 35 36 6 32
CALL[ ]	/* CallFunction */";
};
width = 398;
}
);
note = asciitilde;
unicode = 126;
},
{
glyphname = logicalnot;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(43,294,o),
(43,269,qs),
(43,252,o),
(65,227,o),
(79,227,qs),
(215,227,ls),
(244,227,o),
(256,221,o),
(256,215,qs),
(256,183,ls),
(256,170,o),
(270,145,o),
(300,145,qs),
(316,145,o),
(333,155,o),
(338,162,qs),
(343,170,o),
(344,180,q),
(344,252,ls),
(344,289,o),
(311,311,o),
(290,311,qs),
(286,311,o),
(262,310,o),
(232,309,o),
(201,308,o),
(189,308,qs),
(177,308,o),
(141,309,o),
(106,309,o),
(80,310,o),
(80,310,q),
(65,310,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 1 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
16
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 1 2 2 1 95 4 3 2 0 2 2 0 79 4 3 2 0 0 2 83 0 2 0 2 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 2 1 107 4 3 2 0 2 2 0 79 4 3 2 0 0 2 83 0 2 0 2 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 32 0 32 53 39 161 5 18
CALL[ ]	/* CallFunction */";
};
width = 401;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(49,290,o),
(49,269,qs),
(49,255,o),
(67,236,o),
(78,236,qs),
(225,236,ls),
(254,236,o),
(266,225,o),
(266,215,qs),
(266,183,ls),
(266,179,o),
(267,168,o),
(273,158,o),
(287,151,o),
(299,151,qs),
(311,151,o),
(324,160,o),
(328,165,qs),
(332,171,o),
(333,180,q),
(333,252,ls),
(333,271,o),
(323,291,o),
(310,300,o),
(295,302,o),
(289,302,qs),
(285,302,o),
(261,301,o),
(231,300,o),
(200,299,o),
(188,299,qs),
(176,299,o),
(140,300,o),
(105,300,o),
(79,301,o),
(79,301,q),
(68,301,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
16 1 1 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 1 2 2 1 95 4 3 2 0 2 2 0 79 4 3 2 0 0 2 83 0 2 0 2 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 2 1 107 4 3 2 0 2 2 0 79 4 3 2 0 0 2 83 0 2 0 2 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 36 0 36 55 41 161 5 18
CALL[ ]	/* CallFunction */";
};
width = 390;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(58,280,o),
(58,269,qs),
(58,261,o),
(70,251,o),
(77,251,qs),
(239,251,ls),
(268,251,o),
(280,232,o),
(280,215,qs),
(280,183,ls),
(280,178,o),
(284,161,o),
(298,161,qs),
(309,161,o),
(314,170,qs),
(316,174,o),
(317,180,q),
(317,252,ls),
(317,278,o),
(296,287,o),
(288,287,qs),
(284,287,o),
(260,286,o),
(230,285,o),
(199,284,o),
(187,284,qs),
(175,284,o),
(139,285,o),
(104,285,o),
(78,286,o),
(78,286,q),
(71,286,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 1 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 1 2 2 1 95 4 3 2 0 2 2 0 79 4 3 2 0 0 2 83 0 2 0 2 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 2 1 107 4 3 2 0 2 2 0 79 4 3 2 0 0 2 83 0 2 0 2 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 31 0 31 53 38 161 5 18
CALL[ ]	/* CallFunction */";
};
width = 375;
}
);
note = logicalnot;
unicode = 172;
},
{
glyphname = asciicircum;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(290,523,o),
(290,531,qs),
(290,547,o),
(255,592,o),
(209,634,o),
(166,664,o),
(157,664,qs),
(150,664,o),
(107,635,o),
(61,592,o),
(25,543,o),
(25,524,qs),
(25,519,o),
(32,510,o),
(38,510,qs),
(43,510,o),
(69,523,o),
(102,542,o),
(140,563,o),
(157,572,q),
(174,563,o),
(212,542,o),
(246,523,o),
(272,510,o),
(277,510,qs),
(284,510,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
5 1 0 2 1 66 0 2 0 2 106 1 3 2 0 0 97 1 0 19 17 11 9 0 25 1 25 4 15
CALL[ ]	/* CallFunction */";
};
width = 315;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (27,510);
ref = .ttfautohint;
},
{
alignment = -1;
ref = circumflex;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
6 1 0 2 1 66 0 2 0 2 106 1 3 2 0 0 97 2 1 19 17 12 10 1 25 2 25 4 26
CALL[ ]	/* CallFunction */";
};
width = 315;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
alignment = -1;
pos = (30,510);
ref = .ttfautohint;
},
{
alignment = -1;
ref = circumflex;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
6 1 0 2 1 66 0 2 0 2 106 1 3 2 0 0 97 2 1 19 17 12 10 1 24 2 24 4 26
CALL[ ]	/* CallFunction */";
};
width = 315;
}
);
note = asciicircum;
unicode = 94;
},
{
glyphname = mu;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(475,148,o),
(452,106,o),
(414,76,o),
(366,58,o),
(341,58,qs),
(319,58,o),
(283,81,o),
(257,121,o),
(242,175,o),
(242,206,qs),
(242,298,o),
(246,404,o),
(246,427,qs),
(246,458,o),
(233,472,o),
(212,472,qs),
(18,472,o),
(18,431,qs),
(18,408,o),
(52,408,qs),
(119,408,ls),
(142,408,o),
(151,393,o),
(151,370,qs),
(151,298,o),
(154,170,o),
(154,115,qs),
(154,28,o),
(152,-114,o),
(150,-177,qs),
(150,-190,o),
(171,-217,o),
(200,-217,qs),
(227,-217,o),
(244,-189,o),
(244,-174,qs),
(244,-126,o),
(241,-29,o),
(240,26,q),
(247,0,o),
(293,-20,o),
(319,-20,qs),
(354,-20,o),
(406,-1,o),
(444,29,o),
(469,65,o),
(476,81,q),
(477,22,o),
(485,-22,o),
(496,-22,qs),
(580,-22,o),
(649,-1,o),
(649,20,qs),
(649,27,o),
(640,35,o),
(627,40,o),
(613,42,o),
(609,42,qs),
(605,42,o),
(591,41,o),
(589,41,qs),
(575,41,o),
(568,48,o),
(568,62,qs),
(568,65,o),
(567,107,o),
(567,156,qs),
(567,213,o),
(568,290,o),
(569,342,o),
(570,372,o),
(570,383,qs),
(570,401,o),
(562,421,o),
(541,430,o),
(504,432,o),
(476,432,qs),
(450,432,o),
(399,430,o),
(359,422,o),
(334,407,o),
(334,395,qs),
(334,379,o),
(369,368,o),
(385,368,qs),
(451,368,ls),
(471,368,o),
(478,346,o),
(478,327,qs),
(475,172,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
42 1 9 0 50 1 4 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
3 1 2 9 4 9 2 4 104 0 7 7 8 83 0 8 8 23 67 0 0 0 1 83 0 1 1 15 67 0 9 9 4 83 5 1 4 4 21 67 0 6 6 17 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
3 1 2 9 4 9 2 4 104 0 6 4 6 107 0 8 0 7 0 8 7 91 0 1 0 0 9 1 0 91 0 9 9 4 83 5 1 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
85 83 34 58 39 38 38 33 45 69 50 10 24
CALL[ ]	/* CallFunction */";
};
width = 671;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(471,144,o),
(446,96,o),
(406,60,o),
(353,40,o),
(325,40,qs),
(296,40,o),
(255,68,o),
(229,114,o),
(217,174,o),
(217,206,qs),
(217,298,o),
(221,404,o),
(221,427,qs),
(221,458,o),
(208,472,o),
(187,472,qs),
(164,472,o),
(107,470,o),
(56,463,o),
(21,450,o),
(21,439,qs),
(21,431,o),
(39,420,o),
(48,420,qs),
(115,420,ls),
(138,420,o),
(147,405,o),
(147,382,qs),
(148,306,o),
(150,173,o),
(150,115,qs),
(150,28,o),
(148,-114,o),
(146,-177,qs),
(146,-190,o),
(165,-211,o),
(185,-211,qs),
(205,-211,o),
(219,-189,o),
(219,-174,qs),
(219,-126,o),
(216,-23,o),
(215,32,q),
(227,6,o),
(280,-20,o),
(313,-20,qs),
(348,-20,o),
(401,-1,o),
(440,29,o),
(465,65,o),
(472,81,q),
(473,22,o),
(481,-22,o),
(492,-22,qs),
(508,-22,o),
(558,-21,o),
(605,-15,o),
(638,-2,o),
(638,9,qs),
(638,23,o),
(610,30,o),
(601,30,qs),
(589,30,o),
(574,29,o),
(571,29,qs),
(554,29,o),
(543,34,o),
(543,50,qs),
(543,54,o),
(542,101,o),
(542,156,qs),
(542,213,o),
(543,290,o),
(544,342,o),
(545,372,o),
(545,383,qs),
(545,401,o),
(538,421,o),
(522,430,o),
(494,432,o),
(472,432,qs),
(451,432,o),
(404,430,o),
(363,424,o),
(337,411,o),
(337,401,qs),
(337,389,o),
(365,380,o),
(381,380,qs),
(447,380,ls),
(467,380,o),
(474,359,o),
(474,339,qs),
(471,172,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
42 1 8 0 50 1 2 8 2 66
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 7 values pushed */
50 42 2 2 0 1 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
42 1 8 0 50 1 2 8 2 66
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 8 3 8 2 3 104 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 0 8 8 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 1 2 2 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 7 0 6 0 7 6 91 0 1 0 0 2 1 0 91 8 1 2 2 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 8 3 8 2 3 104 0 7 0 6 0 7 6 91 0 1 0 0 8 1 0 91 0 8 8 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 2 8 3 8 2 3 104 0 5 3 5 107 0 7 0 6 0 7 6 91 0 1 0 0 8 1 0 91 0 8 8 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
41 53 58 39 38 53 94 53 50 9 24
CALL[ ]	/* CallFunction */";
};
width = 660;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(465,138,o),
(438,79,o),
(394,35,o),
(335,10,o),
(302,10,qs),
(262,10,o),
(214,45,o),
(189,102,o),
(181,171,o),
(181,206,qs),
(181,298,o),
(185,404,o),
(185,427,qs),
(185,458,o),
(172,472,o),
(151,472,qs),
(142,472,o),
(101,471,o),
(58,467,o),
(25,459,o),
(25,452,qs),
(25,449,o),
(33,440,o),
(42,440,qs),
(109,440,ls),
(132,440,o),
(141,425,o),
(141,402,qs),
(142,320,o),
(144,178,o),
(144,115,qs),
(144,28,o),
(142,-114,o),
(140,-177,qs),
(140,-190,o),
(155,-201,o),
(163,-201,qs),
(173,-201,o),
(183,-189,o),
(183,-174,qs),
(183,-126,o),
(180,-13,o),
(179,42,q),
(199,16,o),
(261,-20,o),
(305,-20,qs),
(340,-20,o),
(394,-1,o),
(433,29,o),
(459,65,o),
(466,81,q),
(467,22,o),
(475,-22,o),
(486,-22,qs),
(502,-22,o),
(549,-21,o),
(592,-17,o),
(622,-9,o),
(622,-1,qs),
(622,5,o),
(604,10,o),
(595,10,qs),
(571,10,o),
(541,9,o),
(535,9,qs),
(518,9,o),
(507,20,o),
(507,30,qs),
(507,35,o),
(506,90,o),
(506,156,qs),
(506,213,o),
(507,290,o),
(508,342,o),
(509,372,o),
(509,383,qs),
(509,401,o),
(505,421,o),
(495,430,o),
(479,432,o),
(466,432,qs),
(453,432,o),
(411,431,o),
(370,427,o),
(341,418,o),
(341,411,qs),
(341,400,o),
(375,400,qs),
(441,400,ls),
(458,400,o),
(468,386,o),
(468,359,qs),
(465,172,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
49 41 2 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 1 2 2 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 7 0 6 1 7 6 91 0 1 0 0 2 1 0 91 8 1 2 2 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 5 3 5 107 0 7 0 6 1 7 6 91 0 1 0 0 2 1 0 91 8 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
41 53 58 39 38 53 94 52 50 9 24
CALL[ ]	/* CallFunction */";
};
width = 644;
}
);
note = mu;
unicode = 181;
},
{
glyphname = percent;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(50,425,o),
(85,390,o),
(130,372,o),
(153,372,qs),
(183,372,o),
(231,394,o),
(266,430,o),
(288,476,o),
(291,499,qs),
(292,505,o),
(293,514,o),
(293,519,q),
(303,513,o),
(343,504,o),
(360,504,qs),
(370,504,o),
(392,505,o),
(400,507,q),
(400,506,o),
(379,466,o),
(344,402,o),
(300,320,o),
(254,234,o),
(210,151,o),
(176,84,o),
(155,41,o),
(155,37,qs),
(155,29,o),
(173,14,o),
(191,14,qs),
(212,14,o),
(236,35,o),
(239,42,qs),
(246,58,o),
(298,158,o),
(368,291,o),
(447,437,o),
(512,562,o),
(555,646,o),
(555,650,qs),
(555,654,o),
(545,670,o),
(520,670,qs),
(508,670,o),
(487,650,o),
(467,623,o),
(445,593,o),
(432,584,qs),
(421,576,o),
(397,571,o),
(385,571,qs),
(350,571,o),
(307,584,o),
(278,605,o),
(255,628,o),
(226,649,o),
(184,662,o),
(150,662,qs),
(128,662,o),
(84,642,o),
(50,603,o),
(28,548,o),
(28,513,qs),
(28,478,o)
);
},
{
closed = 1;
nodes = (
(346,45,o),
(378,5,o),
(426,-19,o),
(458,-19,qs),
(521,-19,o),
(588,59,o),
(588,125,qs),
(588,154,o),
(575,205,o),
(545,244,o),
(497,266,o),
(463,266,qs),
(435,266,o),
(386,245,o),
(350,207,o),
(329,154,o),
(329,122,qs),
(329,95,o)
);
},
{
closed = 1;
nodes = (
(434,195,o),
(462,195,qs),
(480,195,o),
(512,166,o),
(512,128,qs),
(512,115,o),
(506,88,o),
(493,66,o),
(471,52,o),
(456,52,qs),
(440,52,o),
(419,65,o),
(407,85,o),
(402,111,o),
(402,124,qs),
(402,160,o)
);
},
{
closed = 1;
nodes = (
(113,565,o),
(128,583,o),
(146,591,o),
(154,591,qs),
(177,591,o),
(219,559,o),
(219,521,qs),
(219,485,o),
(188,443,o),
(157,443,qs),
(133,443,o),
(102,484,o),
(102,513,qs),
(102,535,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
51 45 2 4 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 6 0 9 8 6 9 91 0 5 5 10 83 0 10 10 15 67 0 3 3 13 67 0 8 8 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 0 6 0 9 8 6 9 91 0 3 3 13 67 0 8 8 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 2 0 2 106 0 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 0 6 0 9 8 6 9 91 0 3 3 13 67 0 8 8 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 2 0 2 106 0 3 8 7 8 3 7 104 0 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 0 6 0 9 8 6 9 91 0 8 8 7 84 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
108 106 102 100 96 94 40 38 40 41 60 43 38 37 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 632;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(50,425,o),
(85,390,o),
(128,372,o),
(149,372,qs),
(174,372,o),
(221,395,o),
(255,435,o),
(276,492,o),
(276,526,qs),
(276,528,o),
(275,535,o),
(275,537,q),
(301,527,o),
(351,520,o),
(384,520,qs),
(395,520,o),
(409,521,o),
(420,523,q),
(420,522,o),
(398,481,o),
(362,415,o),
(316,330,o),
(268,241,o),
(223,155,o),
(187,86,o),
(165,41,o),
(165,37,qs),
(165,29,o),
(179,17,o),
(193,17,qs),
(210,17,o),
(227,34,o),
(232,42,q),
(237,54,o),
(269,118,o),
(315,206,o),
(371,311,o),
(428,418,o),
(481,518,o),
(522,597,o),
(547,647,o),
(547,650,qs),
(547,654,o),
(538,666,o),
(521,666,qs),
(510,666,o),
(492,647,o),
(474,620,o),
(454,593,o),
(442,584,qs),
(430,576,o),
(400,571,o),
(386,571,qs),
(349,571,o),
(301,584,o),
(267,605,o),
(242,628,o),
(215,649,o),
(179,662,o),
(151,662,qs),
(129,662,o),
(85,642,o),
(51,603,o),
(29,548,o),
(29,513,qs),
(29,478,o)
);
},
{
closed = 1;
nodes = (
(363,45,o),
(393,5,o),
(438,-19,o),
(467,-19,qs),
(524,-19,o),
(589,59,o),
(589,125,qs),
(589,154,o),
(575,205,o),
(547,244,o),
(503,266,o),
(472,266,qs),
(445,266,o),
(400,245,o),
(366,207,o),
(347,154,o),
(347,122,qs),
(347,95,o)
);
},
{
closed = 1;
nodes = (
(442,210,o),
(470,210,qs),
(491,210,o),
(530,174,o),
(530,128,qs),
(530,112,o),
(523,80,o),
(507,54,o),
(483,37,o),
(465,37,qs),
(445,37,o),
(421,56,o),
(407,83,o),
(403,113,o),
(403,124,qs),
(403,168,o)
);
},
{
closed = 1;
nodes = (
(99,575,o),
(119,597,o),
(142,606,o),
(152,606,qs),
(176,606,o),
(220,567,o),
(220,521,qs),
(220,477,o),
(178,428,o),
(146,428,qs),
(117,428,o),
(85,478,o),
(85,513,qs),
(85,539,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
53 47 2 4 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 6 0 9 8 6 9 91 0 5 5 10 83 0 10 10 15 67 0 3 3 13 67 0 8 8 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 0 6 0 9 8 6 9 91 0 3 3 13 67 0 8 8 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 3 8 7 8 3 7 104 2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 0 6 0 9 8 6 9 91 0 8 8 7 84 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
110 108 104 102 98 96 40 38 40 41 45 45 38 37 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 633;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(52,425,o),
(85,390,o),
(125,372,o),
(144,372,qs),
(166,372,o),
(205,395,o),
(235,435,o),
(252,492,o),
(252,526,qs),
(252,536,o),
(249,567,o),
(241,582,q),
(273,561,o),
(344,545,o),
(385,545,qs),
(398,545,o),
(435,548,o),
(449,550,q),
(449,549,o),
(425,506,o),
(387,436,o),
(339,346,o),
(288,253,o),
(240,162,o),
(202,89,o),
(179,41,o),
(179,37,qs),
(179,22,o),
(196,22,qs),
(207,22,o),
(217,34,o),
(220,42,qs),
(225,54,o),
(257,118,o),
(303,206,o),
(359,311,o),
(416,418,o),
(469,518,o),
(510,597,o),
(535,647,o),
(535,650,qs),
(535,660,o),
(522,660,qs),
(513,660,o),
(498,642,o),
(483,617,o),
(467,591,o),
(456,584,qs),
(442,574,o),
(405,571,o),
(387,571,qs),
(327,571,o),
(260,599,o),
(216,634,o),
(180,662,o),
(152,662,qs),
(130,662,o),
(86,642,o),
(52,603,o),
(30,548,o),
(30,513,qs),
(30,478,o)
);
},
{
closed = 1;
nodes = (
(387,45,o),
(414,5,o),
(454,-19,o),
(480,-19,qs),
(527,-19,o),
(590,59,o),
(590,125,qs),
(590,154,o),
(576,205,o),
(550,244,o),
(510,266,o),
(485,266,qs),
(436,266,o),
(373,186,o),
(373,122,qs),
(373,95,o)
);
},
{
closed = 1;
nodes = (
(453,235,o),
(481,235,qs),
(494,235,o),
(520,224,o),
(542,199,o),
(556,158,o),
(556,128,qs),
(556,108,o),
(547,67,o),
(528,33,o),
(499,12,o),
(478,12,qs),
(456,12,o),
(427,36,o),
(411,71,o),
(404,109,o),
(404,124,qs),
(404,180,o)
);
},
{
closed = 1;
nodes = (
(79,592,o),
(105,619,o),
(136,631,o),
(149,631,qs),
(162,631,o),
(188,619,o),
(208,593,o),
(221,551,o),
(221,521,qs),
(221,465,o),
(175,403,o),
(141,403,qs),
(123,403,o),
(94,420,o),
(73,450,o),
(61,490,o),
(61,513,qs),
(61,546,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
49 1 1 11 43 1 4 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 0 6 0 9 3 6 9 91 0 3 3 13 67 0 8 8 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 3 9 8 9 3 8 104 2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 0 6 0 9 3 6 9 91 0 8 8 7 84 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
110 108 102 100 94 92 40 38 38 41 44 44 38 35 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 634;
}
);
note = percent;
unicode = 37;
},
{
glyphname = perthousand;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(55,425,o),
(90,390,o),
(135,372,o),
(158,372,qs),
(188,372,o),
(236,394,o),
(271,430,o),
(293,476,o),
(296,499,qs),
(297,505,o),
(298,514,o),
(298,519,q),
(308,513,o),
(348,504,o),
(365,504,qs),
(375,504,o),
(397,505,o),
(405,507,q),
(405,506,o),
(384,466,o),
(349,402,o),
(305,320,o),
(259,234,o),
(215,151,o),
(181,84,o),
(160,41,o),
(160,37,qs),
(160,29,o),
(178,14,o),
(196,14,qs),
(217,14,o),
(241,35,o),
(244,42,qs),
(251,58,o),
(303,158,o),
(373,291,o),
(452,437,o),
(517,562,o),
(560,646,o),
(560,650,qs),
(560,654,o),
(550,670,o),
(525,670,qs),
(513,670,o),
(492,650,o),
(472,623,o),
(450,593,o),
(437,584,qs),
(426,576,o),
(402,571,o),
(390,571,qs),
(355,571,o),
(312,584,o),
(283,605,o),
(260,628,o),
(231,649,o),
(189,662,o),
(155,662,qs),
(133,662,o),
(89,642,o),
(55,603,o),
(33,548,o),
(33,513,qs),
(33,478,o)
);
},
{
closed = 1;
nodes = (
(351,45,o),
(383,5,o),
(431,-19,o),
(463,-19,qs),
(526,-19,o),
(593,59,o),
(593,125,qs),
(593,154,o),
(580,205,o),
(550,244,o),
(502,266,o),
(468,266,qs),
(440,266,o),
(391,245,o),
(355,207,o),
(334,154,o),
(334,122,qs),
(334,95,o)
);
},
{
closed = 1;
nodes = (
(439,195,o),
(467,195,qs),
(485,195,o),
(517,166,o),
(517,128,qs),
(517,115,o),
(511,88,o),
(498,66,o),
(476,52,o),
(461,52,qs),
(445,52,o),
(424,65,o),
(412,85,o),
(407,111,o),
(407,124,qs),
(407,160,o)
);
},
{
closed = 1;
nodes = (
(118,565,o),
(133,583,o),
(151,591,o),
(159,591,qs),
(182,591,o),
(224,559,o),
(224,521,qs),
(224,485,o),
(193,443,o),
(162,443,qs),
(138,443,o),
(107,484,o),
(107,513,qs),
(107,535,o)
);
},
{
closed = 1;
nodes = (
(660,45,o),
(692,5,o),
(740,-19,o),
(772,-19,qs),
(835,-19,o),
(902,59,o),
(902,125,qs),
(902,154,o),
(889,205,o),
(859,244,o),
(811,266,o),
(777,266,qs),
(749,266,o),
(700,245,o),
(664,207,o),
(643,154,o),
(643,122,qs),
(643,95,o)
);
},
{
closed = 1;
nodes = (
(748,195,o),
(776,195,qs),
(794,195,o),
(826,166,o),
(826,128,qs),
(826,115,o),
(820,88,o),
(807,66,o),
(785,52,o),
(770,52,qs),
(754,52,o),
(733,65,o),
(721,85,o),
(716,111,o),
(716,124,qs),
(716,160,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
51 45 2 4 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 12 1 6 15 1 9 8 6 9 91 0 5 5 10 83 0 10 10 15 67 0 3 3 13 67 14 1 8 8 7 84 13 1 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 12 1 6 15 1 9 8 6 9 91 0 3 3 13 67 14 1 8 8 7 84 13 1 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 2 0 2 106 0 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 12 1 6 15 1 9 8 6 9 91 0 3 3 13 67 14 1 8 8 7 84 13 1 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 2 0 2 106 0 3 8 7 8 3 7 104 0 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 12 1 6 15 1 9 8 6 9 91 14 1 8 8 7 84 13 1 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
144 142 136 134 126 124 118 116 108 106 102 100 96 94 40 38 40 41 60 43 38 37 36 16 24
CALL[ ]	/* CallFunction */";
};
width = 928;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(54,425,o),
(89,390,o),
(132,372,o),
(153,372,qs),
(178,372,o),
(225,395,o),
(259,435,o),
(280,492,o),
(280,526,qs),
(280,528,o),
(279,535,o),
(279,537,q),
(305,527,o),
(355,520,o),
(388,520,qs),
(399,520,o),
(413,521,o),
(424,523,q),
(424,522,o),
(402,481,o),
(366,415,o),
(320,330,o),
(272,241,o),
(227,155,o),
(191,86,o),
(169,41,o),
(169,37,qs),
(169,29,o),
(183,17,o),
(197,17,qs),
(214,17,o),
(231,34,o),
(236,42,q),
(241,54,o),
(273,118,o),
(319,206,o),
(375,311,o),
(432,418,o),
(485,518,o),
(526,597,o),
(551,647,o),
(551,650,qs),
(551,654,o),
(542,666,o),
(525,666,qs),
(514,666,o),
(496,647,o),
(478,620,o),
(458,593,o),
(446,584,qs),
(434,576,o),
(404,571,o),
(390,571,qs),
(353,571,o),
(305,584,o),
(271,605,o),
(246,628,o),
(219,649,o),
(183,662,o),
(155,662,qs),
(133,662,o),
(89,642,o),
(55,603,o),
(33,548,o),
(33,513,qs),
(33,478,o)
);
},
{
closed = 1;
nodes = (
(367,45,o),
(397,5,o),
(442,-19,o),
(471,-19,qs),
(528,-19,o),
(593,59,o),
(593,125,qs),
(593,154,o),
(579,205,o),
(551,244,o),
(507,266,o),
(476,266,qs),
(449,266,o),
(404,245,o),
(370,207,o),
(351,154,o),
(351,122,qs),
(351,95,o)
);
},
{
closed = 1;
nodes = (
(446,210,o),
(474,210,qs),
(495,210,o),
(534,174,o),
(534,128,qs),
(534,112,o),
(527,80,o),
(511,54,o),
(487,37,o),
(469,37,qs),
(449,37,o),
(425,56,o),
(411,83,o),
(407,113,o),
(407,124,qs),
(407,168,o)
);
},
{
closed = 1;
nodes = (
(103,575,o),
(123,597,o),
(146,606,o),
(156,606,qs),
(180,606,o),
(224,567,o),
(224,521,qs),
(224,477,o),
(182,428,o),
(150,428,qs),
(121,428,o),
(89,478,o),
(89,513,qs),
(89,539,o)
);
},
{
closed = 1;
nodes = (
(674,45,o),
(704,5,o),
(749,-19,o),
(778,-19,qs),
(835,-19,o),
(900,59,o),
(900,125,qs),
(900,154,o),
(886,205,o),
(858,244,o),
(814,266,o),
(783,266,qs),
(756,266,o),
(711,245,o),
(677,207,o),
(658,154,o),
(658,122,qs),
(658,95,o)
);
},
{
closed = 1;
nodes = (
(753,210,o),
(781,210,qs),
(802,210,o),
(841,174,o),
(841,128,qs),
(841,112,o),
(834,80,o),
(818,54,o),
(794,37,o),
(776,37,qs),
(756,37,o),
(732,56,o),
(718,83,o),
(714,113,o),
(714,124,qs),
(714,168,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
53 47 2 4 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 12 1 6 15 1 9 8 6 9 91 0 5 5 10 83 0 10 10 15 67 0 3 3 13 67 14 1 8 8 7 84 13 1 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 12 1 6 15 1 9 8 6 9 91 0 3 3 13 67 14 1 8 8 7 84 13 1 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 3 8 7 8 3 7 104 2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 12 1 6 15 1 9 8 6 9 91 14 1 8 8 7 84 13 1 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
146 144 138 136 128 126 120 118 110 108 104 102 98 96 40 38 40 41 45 45 38 37 36 16 24
CALL[ ]	/* CallFunction */";
};
width = 927;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(55,425,o),
(88,390,o),
(128,372,o),
(147,372,qs),
(169,372,o),
(208,395,o),
(238,435,o),
(255,492,o),
(255,526,qs),
(255,536,o),
(252,567,o),
(244,582,q),
(276,561,o),
(347,545,o),
(388,545,qs),
(401,545,o),
(438,548,o),
(452,550,q),
(452,549,o),
(428,506,o),
(390,436,o),
(342,346,o),
(291,253,o),
(243,162,o),
(205,89,o),
(182,41,o),
(182,37,qs),
(182,22,o),
(199,22,qs),
(210,22,o),
(220,34,o),
(223,42,qs),
(228,54,o),
(260,118,o),
(306,206,o),
(362,311,o),
(419,418,o),
(472,518,o),
(513,597,o),
(538,647,o),
(538,650,qs),
(538,660,o),
(525,660,qs),
(516,660,o),
(501,642,o),
(486,617,o),
(470,591,o),
(459,584,qs),
(445,574,o),
(408,571,o),
(390,571,qs),
(330,571,o),
(263,599,o),
(219,634,o),
(183,662,o),
(155,662,qs),
(133,662,o),
(89,642,o),
(55,603,o),
(33,548,o),
(33,513,qs),
(33,478,o)
);
},
{
closed = 1;
nodes = (
(390,45,o),
(417,5,o),
(457,-19,o),
(483,-19,qs),
(530,-19,o),
(593,59,o),
(593,125,qs),
(593,154,o),
(579,205,o),
(553,244,o),
(513,266,o),
(488,266,qs),
(439,266,o),
(376,186,o),
(376,122,qs),
(376,95,o)
);
},
{
closed = 1;
nodes = (
(456,235,o),
(484,235,qs),
(497,235,o),
(523,224,o),
(545,199,o),
(559,158,o),
(559,128,qs),
(559,108,o),
(550,67,o),
(531,33,o),
(502,12,o),
(481,12,qs),
(459,12,o),
(430,36,o),
(414,71,o),
(407,109,o),
(407,124,qs),
(407,180,o)
);
},
{
closed = 1;
nodes = (
(82,592,o),
(108,619,o),
(139,631,o),
(152,631,qs),
(165,631,o),
(191,619,o),
(211,593,o),
(224,551,o),
(224,521,qs),
(224,465,o),
(178,403,o),
(144,403,qs),
(126,403,o),
(97,420,o),
(76,450,o),
(64,490,o),
(64,513,qs),
(64,546,o)
);
},
{
closed = 1;
nodes = (
(883,202,o),
(856,242,o),
(816,266,o),
(790,266,qs),
(743,266,o),
(680,188,o),
(680,122,qs),
(680,93,o),
(694,42,o),
(720,3,o),
(759,-19,o),
(785,-19,qs),
(834,-19,o),
(897,61,o),
(897,125,qs),
(897,152,o)
);
},
{
closed = 1;
nodes = (
(817,12,o),
(789,12,qs),
(776,12,o),
(750,23,o),
(728,48,o),
(714,89,o),
(714,119,qs),
(714,139,o),
(723,180,o),
(742,214,o),
(771,235,o),
(792,235,qs),
(814,235,o),
(843,211,o),
(859,176,o),
(866,138,o),
(866,123,qs),
(866,67,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
49 1 1 11 43 1 4 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 13 1 6 14 1 9 3 6 9 91 0 3 3 13 67 15 1 8 8 7 84 12 1 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 3 9 8 9 3 8 104 2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 13 1 6 14 1 9 3 6 9 91 15 1 8 8 7 84 12 1 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
146 144 136 134 126 124 118 116 110 108 102 100 94 92 40 38 38 41 44 44 38 35 36 16 24
CALL[ ]	/* CallFunction */";
};
width = 925;
}
);
note = perthousand;
unicode = 8240;
},
{
glyphname = uni2215;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(265,554,o),
(223,476,o),
(170,377,o),
(115,274,o),
(62,173,o),
(20,93,o),
(-5,41,o),
(-5,37,qs),
(-5,20,o),
(10,6,o),
(21,6,qs),
(53,6,o),
(80,30,o),
(86,43,qs),
(91,55,o),
(124,119,o),
(171,207,o),
(227,311,o),
(283,418,o),
(336,518,o),
(377,597,o),
(402,647,o),
(402,650,qs),
(402,660,o),
(391,676,o),
(381,676,qs),
(366,676,o),
(345,670,o),
(327,653,o),
(306,624,o),
(291,602,q),
(291,601,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
19 4 1 40
CALL[ ]	/* CallFunction */";
};
width = 402;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(268,553,o),
(226,476,o),
(173,377,o),
(118,274,o),
(65,174,o),
(23,93,o),
(-2,41,o),
(-2,37,qs),
(-2,12,o),
(20,12,qs),
(43,12,o),
(62,31,o),
(69,42,q),
(74,54,o),
(106,118,o),
(152,206,o),
(208,311,o),
(265,418,o),
(318,518,o),
(359,597,o),
(384,647,o),
(384,650,qs),
(384,658,o),
(374,670,o),
(366,670,qs),
(352,670,o),
(334,662,o),
(319,645,o),
(305,620,o),
(294,602,q),
(294,601,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
19 4 1 40
CALL[ ]	/* CallFunction */";
};
width = 387;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(272,553,o),
(230,476,o),
(177,377,o),
(122,274,o),
(69,174,o),
(27,93,o),
(2,41,o),
(2,37,qs),
(2,22,o),
(19,22,qs),
(30,22,o),
(40,34,o),
(43,42,qs),
(48,54,o),
(80,118,o),
(126,206,o),
(182,311,o),
(239,418,o),
(292,518,o),
(333,597,o),
(358,647,o),
(358,650,qs),
(358,660,o),
(345,660,qs),
(336,660,o),
(324,653,o),
(315,639,o),
(305,617,o),
(298,602,q),
(298,601,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
18 4 1 40
CALL[ ]	/* CallFunction */";
};
width = 365;
}
);
note = uni2215;
unicode = 8725;
},
{
glyphname = uni2219;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(71,295,o),
(108,295,qs),
(143,295,o),
(178,334,o),
(178,359,qs),
(178,381,o),
(145,421,o),
(110,421,qs),
(91,421,o),
(64,409,o),
(48,390,o),
(40,367,o),
(40,357,qs),
(40,336,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
10 4 1 40
CALL[ ]	/* CallFunction */";
};
width = 219;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (47,304);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (1,323);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
11 5 1 41
CALL[ ]	/* CallFunction */";
};
width = 211;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
alignment = -1;
pos = (57,319);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (3,323);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
9 3 1 41
CALL[ ]	/* CallFunction */";
};
width = 200;
}
);
note = uni2219;
unicode = 8729;
},
{
glyphname = dieresis;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(39,509,o),
(64,509,qs),
(75,509,o),
(99,515,o),
(118,531,o),
(131,558,o),
(131,579,qs),
(131,606,o),
(95,640,o),
(71,640,qs),
(53,640,o),
(28,626,o),
(12,606,o),
(5,583,o),
(5,575,qs),
(5,546,o)
);
},
{
closed = 1;
nodes = (
(246,486,o),
(271,486,qs),
(282,486,o),
(306,492,o),
(325,508,o),
(338,535,o),
(338,556,qs),
(338,583,o),
(302,617,o),
(278,617,qs),
(260,617,o),
(235,603,o),
(219,583,o),
(212,560,o),
(212,552,qs),
(212,523,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 2 1 3 2 79 0 0 0 1 3 0 1 91 0 2 2 3 83 0 3 2 3 71 38 38 38 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 342;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(44,518,o),
(64,518,qs),
(83,518,o),
(120,543,o),
(120,579,qs),
(120,602,o),
(91,631,o),
(71,631,qs),
(56,631,o),
(35,619,o),
(21,601,o),
(15,582,o),
(15,575,qs),
(15,550,o)
);
},
{
closed = 1;
nodes = (
(251,495,o),
(271,495,qs),
(290,495,o),
(327,520,o),
(327,556,qs),
(327,579,o),
(298,608,o),
(278,608,qs),
(263,608,o),
(242,596,o),
(228,578,o),
(222,559,o),
(222,552,qs),
(222,527,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 2 1 3 2 79 0 0 0 1 3 0 1 91 0 2 2 3 83 0 3 2 3 71 36 38 36 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 342;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(50,533,o),
(64,533,qs),
(78,533,o),
(105,552,o),
(105,579,qs),
(105,596,o),
(85,616,o),
(71,616,qs),
(60,616,o),
(45,607,o),
(35,594,o),
(30,580,o),
(30,575,qs),
(30,557,o)
);
},
{
closed = 1;
nodes = (
(257,510,o),
(271,510,qs),
(285,510,o),
(312,529,o),
(312,556,qs),
(312,573,o),
(292,593,o),
(278,593,qs),
(267,593,o),
(252,584,o),
(242,571,o),
(237,557,o),
(237,552,qs),
(237,534,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 2 1 3 2 79 0 0 0 1 3 0 1 91 0 2 2 3 83 0 3 2 3 71 36 38 36 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 342;
}
);
note = dieresis;
unicode = 168;
},
{
glyphname = dotaccent;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(39,514,o),
(64,514,qs),
(75,514,o),
(99,520,o),
(118,536,o),
(131,563,o),
(131,584,qs),
(131,611,o),
(95,645,o),
(71,645,qs),
(53,645,o),
(28,632,o),
(12,613,o),
(5,590,o),
(5,580,qs),
(5,548,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 38 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 135;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(44,523,o),
(64,523,qs),
(83,523,o),
(120,548,o),
(120,584,qs),
(120,607,o),
(91,636,o),
(71,636,qs),
(56,636,o),
(35,625,o),
(21,608,o),
(15,588,o),
(15,580,qs),
(15,553,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 36 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 135;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(50,538,o),
(64,538,qs),
(78,538,o),
(105,557,o),
(105,584,qs),
(105,601,o),
(85,621,o),
(71,621,qs),
(60,621,o),
(45,612,o),
(35,599,o),
(30,585,o),
(30,580,qs),
(30,562,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 36 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 135;
}
);
note = dotaccent;
unicode = 729;
},
{
glyphname = grave;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(27,597,o),
(65,542,o),
(110,499,o),
(129,499,qs),
(140,499,o),
(153,513,o),
(153,524,qs),
(153,527,o),
(148,555,o),
(137,592,o),
(121,633,o),
(101,667,o),
(76,690,o),
(61,690,qs),
(52,690,o),
(31,685,o),
(13,677,o),
(1,665,o),
(1,658,qs),
(1,649,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
0 0 1 0 106 0 1 1 97 40 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 154;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(34,599,o),
(68,551,o),
(105,511,o),
(118,505,qs),
(124,503,o),
(128,503,qs),
(145,503,o),
(145,523,qs),
(145,532,o),
(128,583,o),
(104,637,o),
(76,681,o),
(65,684,qs),
(60,686,o),
(54,686,o),
(50,686,qs),
(34,686,o),
(10,670,o),
(10,656,qs),
(10,645,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
0 0 1 0 106 0 1 1 97 39 50 2 17
CALL[ ]	/* CallFunction */";
};
width = 154;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(36,622,o),
(55,591,o),
(79,557,o),
(102,528,o),
(121,510,o),
(126,510,qs),
(134,510,o),
(134,521,qs),
(134,527,o),
(124,556,o),
(109,591,o),
(90,629,o),
(71,660,o),
(53,680,o),
(47,680,qs),
(23,680,o),
(23,653,qs),
(23,648,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
0 0 1 0 106 0 1 1 97 39 33 2 17
CALL[ ]	/* CallFunction */";
};
width = 154;
}
);
note = grave;
unicode = 96;
},
{
glyphname = acute;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(145,677,o),
(127,685,o),
(106,690,o),
(97,690,qs),
(78,690,o),
(44,645,o),
(19,588,o),
(5,533,o),
(5,524,qs),
(5,513,o),
(18,499,o),
(28,499,qs),
(46,499,o),
(91,537,o),
(130,589,o),
(157,642,o),
(157,658,qs),
(157,665,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
0 1 0 1 106 0 0 0 97 38 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 154;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(122,686,o),
(106,686,qs),
(102,686,o),
(96,686,o),
(91,684,qs),
(80,681,o),
(52,637,o),
(28,583,o),
(11,532,o),
(11,523,qs),
(11,503,o),
(28,503,qs),
(32,503,o),
(38,505,qs),
(51,511,o),
(88,551,o),
(122,599,o),
(146,645,o),
(146,656,qs),
(146,670,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
0 1 0 1 106 0 0 0 97 55 38 2 17
CALL[ ]	/* CallFunction */";
};
width = 154;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(107,680,qs),
(101,680,o),
(83,660,o),
(64,629,o),
(45,591,o),
(30,556,o),
(20,527,o),
(20,521,qs),
(20,510,o),
(28,510,qs),
(33,510,o),
(52,528,o),
(75,557,o),
(99,591,o),
(118,622,o),
(131,648,o),
(131,653,qs),
(131,680,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
0 1 0 1 106 0 0 0 97 39 38 2 17
CALL[ ]	/* CallFunction */";
};
width = 154;
}
);
note = acute;
unicode = 180;
},
{
glyphname = hungarumlaut;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(145,677,o),
(127,685,o),
(106,690,o),
(97,690,qs),
(78,690,o),
(44,645,o),
(19,588,o),
(5,533,o),
(5,524,qs),
(5,513,o),
(18,499,o),
(28,499,qs),
(46,499,o),
(91,537,o),
(130,589,o),
(157,642,o),
(157,658,qs),
(157,665,o)
);
},
{
closed = 1;
nodes = (
(297,677,o),
(279,685,o),
(258,690,o),
(249,690,qs),
(230,690,o),
(196,645,o),
(171,588,o),
(157,533,o),
(157,524,qs),
(157,513,o),
(170,499,o),
(180,499,qs),
(198,499,o),
(243,537,o),
(282,589,o),
(309,642,o),
(309,658,qs),
(309,665,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
3 1 1 0 1 106 2 1 0 0 97 38 40 38 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 303;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (11,503);
ref = .ttfautohint;
},
{
alignment = -1;
ref = acute;
},
{
alignment = -1;
pos = (152,0);
ref = acute;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
3 1 1 0 1 106 2 1 0 0 97 55 40 55 39 4 30
CALL[ ]	/* CallFunction */";
};
width = 303;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
alignment = -1;
pos = (20,510);
ref = .ttfautohint;
},
{
alignment = -1;
ref = acute;
},
{
alignment = -1;
pos = (152,0);
ref = acute;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
3 1 1 0 1 106 2 1 0 0 97 39 39 39 39 4 30
CALL[ ]	/* CallFunction */";
};
width = 303;
}
);
note = hungarumlaut;
unicode = 733;
},
{
glyphname = circumflex;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(290,523,o),
(290,531,qs),
(290,547,o),
(255,592,o),
(209,634,o),
(166,664,o),
(157,664,qs),
(150,664,o),
(107,635,o),
(61,592,o),
(25,543,o),
(25,524,qs),
(25,519,o),
(32,510,o),
(38,510,qs),
(43,510,o),
(69,523,o),
(102,542,o),
(140,563,o),
(157,572,q),
(174,563,o),
(212,542,o),
(246,523,o),
(272,510,o),
(277,510,qs),
(284,510,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
5 1 0 2 1 66 0 2 0 2 106 1 3 2 0 0 97 1 0 19 17 11 9 0 25 1 25 4 15
CALL[ ]	/* CallFunction */";
};
width = 315;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(288,520,o),
(288,527,qs),
(288,540,o),
(254,584,o),
(209,625,o),
(166,655,o),
(157,655,qs),
(149,655,o),
(107,626,o),
(62,584,o),
(27,539,o),
(27,523,qs),
(27,510,o),
(38,510,qs),
(43,510,o),
(69,525,o),
(102,546,o),
(140,571,o),
(157,581,q),
(174,571,o),
(212,546,o),
(246,525,o),
(272,510,o),
(277,510,qs),
(283,510,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
5 1 0 2 1 66 0 2 0 2 106 1 3 2 0 0 97 1 0 18 16 11 9 0 24 1 24 4 15
CALL[ ]	/* CallFunction */";
};
width = 315;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(285,521,qs),
(285,530,o),
(252,570,o),
(209,610,o),
(166,640,o),
(157,640,qs),
(148,640,o),
(107,610,o),
(63,570,o),
(30,530,o),
(30,521,qs),
(30,510,o),
(38,510,qs),
(43,510,o),
(69,528,o),
(102,554,o),
(140,584,o),
(157,596,q),
(174,584,o),
(212,554,o),
(246,528,o),
(272,510,o),
(277,510,qs),
(285,510,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
5 1 0 2 1 66 0 2 0 2 106 1 3 2 0 0 97 1 0 18 16 11 9 0 23 1 23 4 15
CALL[ ]	/* CallFunction */";
};
width = 315;
}
);
note = circumflex;
unicode = 710;
},
{
glyphname = caron;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(246,627,o),
(212,608,o),
(174,587,o),
(157,578,q),
(140,587,o),
(102,608,o),
(69,627,o),
(43,640,o),
(38,640,qs),
(32,640,o),
(25,631,o),
(25,626,qs),
(25,606,o),
(61,558,o),
(107,515,o),
(150,486,o),
(157,486,qs),
(166,486,o),
(209,516,o),
(255,558,o),
(290,603,o),
(290,619,qs),
(290,627,o),
(284,640,o),
(277,640,qs),
(272,640,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
21 1 1 0 1 66 2 3 2 0 1 0 106 0 1 1 97 1 0 17 15 9 7 0 25 1 25 4 15
CALL[ ]	/* CallFunction */";
};
width = 315;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
alignment = -1;
pos = (27,495);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (0,1150);
ref = circumflex;
scale = (1,-0.9999);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
6 1 2 0 1 66 1 3 2 0 2 0 106 0 2 2 97 2 1 19 17 12 10 1 25 2 25 4 26
CALL[ ]	/* CallFunction */";
};
width = 315;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
alignment = -1;
pos = (30,510);
ref = .ttfautohint;
},
{
alignment = -1;
pos = (0,1150);
ref = circumflex;
scale = (1,-0.9999);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
6 1 2 0 1 66 1 3 2 0 2 0 106 0 2 2 97 2 1 19 17 12 10 1 24 2 24 4 26
CALL[ ]	/* CallFunction */";
};
width = 315;
}
);
note = caron;
unicode = 711;
},
{
glyphname = breve;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(211,619,o),
(196,619,qs),
(183,619,o),
(164,601,o),
(164,590,qs),
(164,582,o),
(137,567,o),
(108,567,qs),
(99,567,o),
(78,569,o),
(60,575,o),
(49,584,o),
(49,590,qs),
(49,607,o),
(30,619,o),
(13,619,qs),
(-4,619,o),
(-19,602,o),
(-19,589,qs),
(-19,557,o),
(48,510,o),
(113,510,qs),
(132,510,o),
(175,520,o),
(211,540,o),
(234,569,o),
(234,589,qs),
(234,609,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 1 2 1 106 0 2 0 0 2 79 0 2 2 0 83 0 0 2 0 71 36 38 36 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 249;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(214,617,o),
(204,617,qs),
(193,617,o),
(178,601,o),
(178,590,qs),
(178,577,o),
(143,555,o),
(114,555,qs),
(103,555,o),
(80,559,o),
(61,567,o),
(49,580,o),
(49,590,qs),
(49,605,o),
(35,617,o),
(21,617,qs),
(-5,617,o),
(-5,589,qs),
(-5,558,o),
(60,510,o),
(117,510,qs),
(136,510,o),
(178,520,o),
(212,540,o),
(234,570,o),
(234,589,qs),
(234,609,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 1 2 1 106 0 2 0 0 2 79 0 2 2 0 83 0 0 2 0 71 36 38 35 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 249;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(223,613,o),
(215,613,qs),
(198,613,o),
(198,590,qs),
(198,580,o),
(185,560,o),
(163,545,o),
(136,535,o),
(123,535,qs),
(94,535,o),
(49,559,o),
(49,590,qs),
(49,602,o),
(43,613,o),
(32,613,qs),
(15,613,o),
(15,589,qs),
(15,574,o),
(32,546,o),
(61,523,o),
(100,510,o),
(123,510,qs),
(142,510,o),
(182,521,o),
(214,541,o),
(234,571,o),
(234,589,qs),
(234,605,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 1 2 1 106 0 2 0 0 2 79 0 2 2 0 83 0 0 2 0 71 37 36 37 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 249;
}
);
note = breve;
unicode = 728;
},
{
glyphname = ring;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(69,649,qs),
(38,649,o),
(-6,617,o),
(-6,579,qs),
(-6,544,o),
(40,510,o),
(74,510,qs),
(104,510,o),
(147,545,o),
(147,581,qs),
(147,649,o)
);
},
{
closed = 1;
nodes = (
(92,594,o),
(92,580,qs),
(92,564,o),
(80,553,o),
(74,553,qs),
(67,553,o),
(50,562,o),
(50,579,qs),
(50,596,o),
(65,607,o),
(70,607,qs),
(78,607,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
4 1 2 1 3 0 2 96 0 3 0 1 3 94 0 1 2 0 1 80 0 1 1 0 83 0 0 1 0 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
4 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 1 2 0 1 80 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
12 11 18 16 11 22 12 22 36 34 5 17
CALL[ ]	/* CallFunction */";
};
width = 167;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(111,649,o),
(76,649,qs),
(46,649,o),
(5,609,o),
(5,579,qs),
(5,548,o),
(47,510,o),
(77,510,qs),
(104,510,o),
(147,545,o),
(147,581,qs),
(147,613,o)
);
},
{
closed = 1;
nodes = (
(102,599,o),
(102,580,qs),
(102,557,o),
(82,544,o),
(77,544,qs),
(71,544,o),
(50,557,o),
(50,579,qs),
(50,600,o),
(68,615,o),
(76,615,qs),
(86,615,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
4 1 2 1 3 0 2 96 0 3 0 1 3 94 0 1 2 0 1 80 0 1 1 0 83 0 0 1 0 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
4 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 1 2 0 1 80 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
13 12 19 17 12 23 13 23 36 34 5 17
CALL[ ]	/* CallFunction */";
};
width = 167;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(116,649,o),
(86,649,qs),
(57,649,o),
(20,609,o),
(20,579,qs),
(20,548,o),
(56,510,o),
(82,510,qs),
(105,510,o),
(147,545,o),
(147,581,qs),
(147,608,o)
);
},
{
closed = 1;
nodes = (
(117,599,o),
(117,580,qs),
(117,557,o),
(99,529,o),
(82,529,qs),
(65,529,o),
(50,557,o),
(50,579,qs),
(50,600,o),
(65,629,o),
(84,629,qs),
(104,629,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 1 4 1 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71 13 12 19 17 12 23 13 23 36 34 5 17
CALL[ ]	/* CallFunction */";
};
width = 167;
}
);
note = ring;
unicode = 730;
},
{
glyphname = tilde;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(19,498,o),
(28,498,qs),
(35,498,o),
(53,506,o),
(73,515,o),
(97,523,o),
(112,523,qs),
(126,523,o),
(158,515,o),
(193,506,o),
(230,499,o),
(249,499,qs),
(260,499,o),
(298,506,o),
(334,523,o),
(360,552,o),
(360,574,qs),
(360,590,o),
(343,609,o),
(338,609,qs),
(331,609,o),
(308,596,qs),
(294,588,o),
(262,579,o),
(248,579,qs),
(233,579,o),
(197,588,o),
(161,598,o),
(126,607,o),
(111,607,qs),
(74,607,o),
(43,589,qs),
(29,581,o),
(9,556,o),
(9,534,qs),
(9,519,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 4 3 1 79 2 1 0 0 4 3 0 4 91 0 1 1 3 83 5 1 3 1 3 71 35 35 38 35 35 36 6 21
CALL[ ]	/* CallFunction */";
};
width = 369;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(11,535,qs),
(11,524,o),
(20,507,o),
(28,507,qs),
(34,507,o),
(51,515,o),
(72,524,o),
(97,532,o),
(112,532,qs),
(126,532,o),
(158,524,o),
(193,515,o),
(230,508,o),
(249,508,qs),
(291,508,o),
(341,536,o),
(351,553,qs),
(356,562,o),
(356,572,qs),
(356,584,o),
(343,600,o),
(338,600,qs),
(333,600,o),
(322,595,o),
(308,587,qs),
(274,570,o),
(248,570,qs),
(233,570,o),
(197,579,o),
(161,589,o),
(126,598,o),
(111,598,qs),
(74,598,o),
(43,580,qs),
(28,571,o),
(16,557,o),
(14,552,qs),
(11,544,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 4 3 1 79 2 1 0 0 4 3 0 4 91 0 1 1 3 83 5 1 3 1 3 71 35 35 38 35 35 36 6 21
CALL[ ]	/* CallFunction */";
};
width = 369;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(23,522,o),
(28,522,qs),
(33,522,o),
(49,530,o),
(71,539,o),
(97,547,o),
(112,547,qs),
(126,547,o),
(158,539,o),
(193,530,o),
(230,523,o),
(249,523,qs),
(270,523,o),
(307,530,o),
(335,543,o),
(351,559,o),
(351,568,qs),
(351,575,o),
(343,585,o),
(338,585,qs),
(333,585,o),
(322,580,o),
(308,572,qs),
(274,555,o),
(248,555,qs),
(233,555,o),
(197,564,o),
(161,574,o),
(126,583,o),
(111,583,qs),
(74,583,o),
(43,565,qs),
(14,548,o),
(14,537,qs),
(14,532,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 4 3 1 79 2 1 0 0 4 3 0 4 91 0 1 1 3 83 5 1 3 1 3 71 35 35 38 35 35 35 6 21
CALL[ ]	/* CallFunction */";
};
width = 369;
}
);
note = tilde;
unicode = 732;
},
{
glyphname = macron;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(199,563,o),
(157,563,qs),
(144,563,o),
(109,564,o),
(73,564,o),
(43,565,o),
(36,565,qs),
(19,565,o),
(3,540,o),
(3,526,qs),
(3,512,o),
(22,486,o),
(36,486,qs),
(54,486,o),
(118,486,o),
(190,487,o),
(257,487,o),
(277,487,qs),
(288,487,o),
(302,496,o),
(310,509,o),
(313,524,o),
(313,529,qs),
(313,544,o),
(296,566,o),
(285,566,qs),
(261,566,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 14 7 0 26 1 18 3 15
CALL[ ]	/* CallFunction */";
};
width = 316;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(199,554,o),
(157,554,qs),
(144,554,o),
(109,555,o),
(73,555,o),
(43,556,o),
(36,556,qs),
(22,556,o),
(10,537,o),
(10,526,qs),
(10,515,o),
(25,495,o),
(36,495,qs),
(54,495,o),
(118,495,o),
(190,496,o),
(257,496,o),
(277,496,qs),
(294,496,o),
(306,521,o),
(306,529,qs),
(306,540,o),
(293,557,o),
(285,557,qs),
(261,557,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 12 5 0 24 1 16 3 15
CALL[ ]	/* CallFunction */";
};
width = 316;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(199,539,o),
(157,539,qs),
(144,539,o),
(109,540,o),
(73,540,o),
(43,541,o),
(36,541,qs),
(28,541,o),
(20,531,o),
(20,526,qs),
(20,521,o),
(29,510,o),
(36,510,qs),
(54,510,o),
(118,510,o),
(190,511,o),
(257,511,o),
(277,511,qs),
(288,511,o),
(296,524,o),
(296,529,qs),
(296,534,o),
(289,542,o),
(285,542,qs),
(261,542,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 12 5 0 24 1 16 3 15
CALL[ ]	/* CallFunction */";
};
width = 316;
}
);
note = macron;
unicode = 175;
},
{
glyphname = cedilla;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-18,-2,o),
(-23,-50,o),
(-28,-71,qs),
(-29,-75,o),
(-31,-85,o),
(-31,-88,qs),
(-31,-99,o),
(-16,-121,o),
(7,-121,qs),
(23,-121,o),
(45,-112,o),
(64,-102,o),
(83,-93,o),
(97,-93,qs),
(105,-93,o),
(120,-101,o),
(120,-109,qs),
(120,-121,o),
(102,-131,o),
(75,-131,qs),
(48,-131,o),
(18,-137,o),
(3,-146,o),
(0,-156,o),
(0,-159,qs),
(0,-172,o),
(37,-181,o),
(79,-181,qs),
(104,-181,o),
(151,-171,o),
(187,-152,o),
(208,-123,o),
(208,-103,qs),
(208,-74,o),
(164,-40,o),
(131,-40,qs),
(110,-40,o),
(75,-55,o),
(51,-69,q),
(64,3,l),
(45,7,l),
(-16,7,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
1 1 0 5 2 1 3 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 5 3 5 0 3 104 0 3 4 5 3 4 102 6 1 5 0 4 2 5 4 91 0 2 2 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 0 5 3 5 0 3 104 0 3 4 5 3 4 102 6 1 5 0 4 2 5 4 91 0 2 1 1 2 79 0 2 2 1 83 0 1 2 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 41 0 41 35 36 38 38 36 7 20
CALL[ ]	/* CallFunction */";
};
width = 228;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(3,-2,o),
(-2,-50,o),
(-7,-71,qs),
(-8,-75,o),
(-10,-85,o),
(-10,-88,qs),
(-10,-96,o),
(2,-113,o),
(19,-113,qs),
(31,-113,o),
(52,-104,o),
(73,-94,o),
(96,-85,o),
(110,-85,qs),
(117,-85,o),
(141,-95,o),
(141,-109,qs),
(141,-129,o),
(107,-139,o),
(75,-139,qs),
(35,-139,o),
(14,-154,o),
(14,-161,qs),
(14,-174,o),
(47,-181,o),
(79,-181,qs),
(104,-181,o),
(151,-171,o),
(187,-152,o),
(208,-123,o),
(208,-103,qs),
(208,-74,o),
(164,-40,o),
(131,-40,qs),
(110,-40,o),
(75,-55,o),
(51,-69,q),
(64,3,l),
(45,7,l),
(5,7,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
1 1 0 5 2 1 3 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 0 0 3 4 0 3 91 6 1 5 0 4 2 5 4 91 0 2 2 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 0 3 4 0 3 91 6 1 5 0 4 2 5 4 91 0 2 1 1 2 79 0 2 2 1 83 0 1 2 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 39 0 39 35 36 36 38 36 7 20
CALL[ ]	/* CallFunction */";
};
width = 228;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(33,-2,o),
(28,-50,o),
(23,-71,qs),
(22,-75,o),
(20,-85,o),
(20,-88,qs),
(20,-92,o),
(28,-100,o),
(36,-100,qs),
(43,-100,o),
(63,-91,o),
(87,-81,o),
(114,-72,o),
(128,-72,qs),
(150,-72,o),
(171,-95,o),
(171,-109,qs),
(171,-132,o),
(121,-152,o),
(75,-152,qs),
(55,-152,o),
(34,-155,o),
(34,-164,qs),
(34,-171,o),
(51,-181,o),
(79,-181,qs),
(104,-181,o),
(151,-171,o),
(187,-152,o),
(208,-123,o),
(208,-103,qs),
(208,-74,o),
(164,-40,o),
(131,-40,qs),
(110,-40,o),
(75,-55,o),
(51,-69,q),
(64,3,l),
(45,7,l),
(35,7,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
1 1 0 5 2 1 3 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 0 0 3 4 0 3 91 6 1 5 0 4 2 5 4 91 0 2 2 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 0 3 4 0 3 91 6 1 5 0 4 2 5 4 91 0 2 1 1 2 79 0 2 2 1 83 0 1 2 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 39 0 39 35 36 36 38 36 7 20
CALL[ ]	/* CallFunction */";
};
width = 228;
}
);
note = cedilla;
unicode = 184;
},
{
glyphname = ogonek;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(163,-138,o),
(183,-122,o),
(193,-104,o),
(193,-96,qs),
(193,-87,o),
(178,-72,o),
(168,-72,qs),
(160,-72,o),
(151,-80,o),
(140,-89,o),
(123,-96,o),
(108,-96,qs),
(97,-96,o),
(79,-86,o),
(79,-75,qs),
(79,-63,o),
(87,-36,o),
(102,-10,o),
(123,10,o),
(137,13,q),
(77,13,l),
(70,10,o),
(44,-5,o),
(19,-26,o),
(0,-56,o),
(0,-74,qs),
(0,-93,o),
(20,-121,o),
(51,-140,o),
(90,-149,o),
(110,-149,qs),
(131,-149,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 3 2 1 94 0 3 2 3 106 0 2 0 0 2 79 0 2 2 0 84 4 1 0 2 0 72
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 1 3 1 106 0 3 2 3 106 0 2 0 0 2 79 0 2 2 0 84 4 1 0 2 0 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
1 0 25 23 20 18 11 10 0 31 1 31 5 15
CALL[ ]	/* CallFunction */";
};
width = 227;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(66,4,o),
(50,-9,qs),
(36,-20,o),
(14,-53,o),
(14,-76,qs),
(14,-108,o),
(71,-149,o),
(115,-149,qs),
(133,-149,o),
(161,-136,o),
(182,-119,o),
(193,-102,o),
(193,-98,qs),
(193,-90,o),
(183,-76,o),
(172,-76,qs),
(166,-76,o),
(159,-82,qs),
(151,-89,o),
(134,-106,o),
(109,-106,qs),
(97,-106,o),
(78,-87,o),
(78,-75,qs),
(78,-69,o),
(83,-44,o),
(96,-18,o),
(119,7,o),
(137,13,q),
(87,14,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
4 1 3 1 0 3 94 0 1 0 1 106 0 0 2 2 0 79 0 0 0 2 84 0 2 0 2 72
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
4 1 3 1 3 106 0 1 0 1 106 0 0 2 2 0 79 0 0 0 2 84 0 2 0 2 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 29 0 29 38 35 39 5 18
CALL[ ]	/* CallFunction */";
};
width = 227;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(83,4,o),
(68,-9,qs),
(55,-20,o),
(34,-53,o),
(34,-76,qs),
(34,-108,o),
(80,-149,o),
(115,-149,qs),
(133,-149,o),
(161,-136,o),
(182,-119,o),
(193,-102,o),
(193,-98,qs),
(193,-92,o),
(188,-82,o),
(179,-82,qs),
(172,-82,o),
(161,-95,o),
(148,-110,o),
(130,-122,o),
(117,-122,qs),
(105,-122,o),
(90,-112,o),
(81,-97,o),
(78,-81,o),
(78,-75,qs),
(78,-69,o),
(83,-44,o),
(96,-18,o),
(119,7,o),
(137,13,q),
(102,14,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
4 1 3 1 0 3 94 0 1 0 1 106 0 0 2 2 0 79 0 0 0 2 84 0 2 0 2 72
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
4 1 3 1 3 106 0 1 0 1 106 0 0 2 2 0 79 0 0 0 2 84 0 2 0 2 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 31 0 31 38 35 41 5 18
CALL[ ]	/* CallFunction */";
};
width = 227;
}
);
note = ogonek;
unicode = 731;
},
{
glyphname = apostrophe;
kernLeft = apostrophe;
kernRight = apostrophe;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(129,837,o),
(119,815,o),
(116,790,o),
(116,780,qs),
(116,714,o),
(146,642,o),
(164,642,qs),
(173,642,o),
(190,667,o),
(204,707,o),
(212,756,o),
(212,781,qs),
(212,794,o),
(208,819,o),
(198,839,o),
(179,851,o),
(163,851,qs),
(148,851,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 1 1 0 83 2 1 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
1 0 11 9 0 17 1 17 3 15
CALL[ ]	/* CallFunction */";
};
width = 327;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(133,834,o),
(126,811,o),
(125,789,o),
(125,784,qs),
(125,777,o),
(127,733,o),
(135,685,o),
(150,648,o),
(163,648,qs),
(174,648,o),
(189,690,o),
(197,741,o),
(200,786,o),
(200,790,qs),
(200,797,o),
(199,818,o),
(192,838,o),
(176,851,o),
(162,851,qs),
(148,851,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 1 1 0 83 2 1 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
1 0 11 9 0 19 1 19 3 15
CALL[ ]	/* CallFunction */";
};
width = 324;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(143,834,o),
(139,811,o),
(138,789,o),
(138,784,qs),
(138,777,o),
(139,736,o),
(144,692,o),
(153,658,o),
(161,658,qs),
(168,658,o),
(176,700,o),
(181,751,o),
(183,796,o),
(183,799,qs),
(183,806,o),
(182,825,o),
(178,840,o),
(169,851,o),
(160,851,qs),
(152,851,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 1 1 0 83 2 1 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
1 0 11 9 0 19 1 19 3 15
CALL[ ]	/* CallFunction */";
};
width = 320;
}
);
note = apostrophe;
unicode = 700;
}
);
instances = (
{
axesValues = (
400
);
instanceInterpolations = {
"E59D8378-1062-4241-9A8F-EEB295F00E05" = 1;
};
name = Regular;
},
{
axesValues = (
700
);
instanceInterpolations = {
"62092E79-60F6-4D0B-8A38-B9DDC6B60A9E" = 1;
};
name = Bold;
weightClass = 700;
},
{
axesValues = (
800
);
instanceInterpolations = {
m01 = 1;
};
name = ExtraBold;
weightClass = 800;
}
);
kerningLTR = {
"E59D8378-1062-4241-9A8F-EEB295F00E05" = {
"@MMK_L_AE" = {
"@MMK_R_b" = 22;
"@MMK_R_p" = -5;
"@MMK_R_u" = -5;
"@MMK_R_v" = -15;
"@MMK_R_w" = -17;
"@MMK_R_y" = -11;
};
"@MMK_L_Aacute" = {
"@MMK_R_C" = -24;
"@MMK_R_T" = -37;
"@MMK_R_U" = -38;
"@MMK_R_V" = -93;
"@MMK_R_W" = -100;
"@MMK_R_Y" = -85;
"@MMK_R_a" = -9;
"@MMK_R_a.salt" = -10;
"@MMK_R_asterisk" = -21;
"@MMK_R_backslash" = -53;
"@MMK_R_braceright" = 61;
"@MMK_R_bracketright" = 60;
"@MMK_R_c" = -27;
"@MMK_R_c.salt" = -28;
"@MMK_R_d" = -25;
"@MMK_R_g" = 17;
"@MMK_R_parenright" = 7;
"@MMK_R_q" = -14;
"@MMK_R_quotedbl" = -24;
"@MMK_R_quotedblleft" = -26;
"@MMK_R_quotedblright" = -24;
"@MMK_R_space" = -28;
"@MMK_R_t" = -24;
"@MMK_R_trademark" = -20;
"@MMK_R_u" = -32;
"@MMK_R_v" = -50;
"@MMK_R_w" = -63;
"@MMK_R_y" = -21;
};
"@MMK_L_B" = {
"@MMK_R_AE" = -26;
"@MMK_R_Aacute" = -9;
"@MMK_R_B" = -14;
"@MMK_R_U" = -16;
"@MMK_R_W" = -15;
"@MMK_R_Y" = -17;
"@MMK_R_dotlessi" = -7;
"@MMK_R_dotlessj" = -8;
"@MMK_R_eng" = -7;
"@MMK_R_f" = -10;
"@MMK_R_f_f" = -11;
"@MMK_R_g" = -8;
"@MMK_R_l" = -6;
"@MMK_R_r" = -7;
"@MMK_R_u" = -6;
"@MMK_R_w" = -20;
"@MMK_R_y" = -17;
};
"@MMK_L_C" = {
"@MMK_R_AE" = -19;
"@MMK_R_b" = 51;
"@MMK_R_g" = -14;
"@MMK_R_y" = -12;
"@MMK_R_z" = -6;
};
"@MMK_L_D" = {
"@MMK_R_AE" = -54;
"@MMK_R_Aacute" = -32;
"@MMK_R_B" = -17;
"@MMK_R_J" = -8;
"@MMK_R_M" = -16;
"@MMK_R_U" = -19;
"@MMK_R_V" = -21;
"@MMK_R_W" = -21;
"@MMK_R_X" = -35;
"@MMK_R_Y" = -38;
"@MMK_R_Z" = -6;
"@MMK_R_a" = -9;
"@MMK_R_a.salt" = -5;
"@MMK_R_backslash" = -13;
"@MMK_R_braceright" = -23;
"@MMK_R_bracketright" = -24;
"@MMK_R_c" = -6;
"@MMK_R_c.salt" = -6;
"@MMK_R_comma" = -23;
"@MMK_R_d" = -6;
"@MMK_R_g" = -17;
"@MMK_R_germandbls" = -12;
"@MMK_R_l" = -12;
"@MMK_R_one" = -19;
"@MMK_R_parenright" = -16;
"@MMK_R_q" = -8;
"@MMK_R_s" = -8;
"@MMK_R_s.salt" = -5;
"@MMK_R_seven" = -20;
"@MMK_R_slash" = -22;
};
"@MMK_L_Eng" = {
"@MMK_R_AE" = -14;
"@MMK_R_C" = -11;
"@MMK_R_J" = -17;
"@MMK_R_S" = -11;
"@MMK_R_a" = -29;
"@MMK_R_a.salt" = -30;
"@MMK_R_ampersand" = -17;
"@MMK_R_b" = 91;
"@MMK_R_c" = -26;
"@MMK_R_c.salt" = -25;
"@MMK_R_comma" = -12;
"@MMK_R_d" = -23;
"@MMK_R_dotlessi" = -14;
"@MMK_R_dotlessj" = -13;
"@MMK_R_emdash" = -12;
"@MMK_R_eng" = -13;
"@MMK_R_f" = -16;
"@MMK_R_f_f" = -20;
"@MMK_R_g" = -34;
"@MMK_R_germandbls" = 42;
"@MMK_R_l" = 37;
"@MMK_R_m" = -14;
"@MMK_R_p" = -15;
"@MMK_R_q" = -24;
"@MMK_R_r" = -13;
"@MMK_R_registered" = -23;
"@MMK_R_s" = -24;
"@MMK_R_s.salt" = -19;
"@MMK_R_slash" = -17;
"@MMK_R_t" = -12;
"@MMK_R_u" = -13;
"@MMK_R_v" = -19;
"@MMK_R_w" = -22;
"@MMK_R_x" = -11;
"@MMK_R_y" = -20;
"@MMK_R_z" = -30;
};
"@MMK_L_F" = {
"@MMK_R_AE" = -70;
"@MMK_R_Aacute" = -67;
"@MMK_R_J" = -53;
"@MMK_R_W" = 33;
"@MMK_R_Y" = 25;
"@MMK_R_a" = -54;
"@MMK_R_b" = 93;
"@MMK_R_c" = -47;
"@MMK_R_comma" = -39;
"@MMK_R_d" = -46;
"@MMK_R_dotlessi" = -16;
"@MMK_R_emdash" = -11;
"@MMK_R_eng" = -27;
"@MMK_R_f" = -18;
"@MMK_R_f_f" = -15;
"@MMK_R_g" = -69;
"@MMK_R_germandbls" = 43;
"@MMK_R_l" = 41;
"@MMK_R_r" = -25;
"@MMK_R_s" = -50;
"@MMK_R_u" = -26;
"@MMK_R_w" = -29;
"@MMK_R_y" = -34;
"@MMK_R_z" = -37;
};
"@MMK_L_G" = {
"@MMK_R_b" = 40;
"@MMK_R_g" = -9;
"@MMK_R_y" = -14;
};
"@MMK_L_H" = {
"@MMK_R_C" = -15;
"@MMK_R_J" = -10;
"@MMK_R_a" = -15;
"@MMK_R_a.salt" = -16;
"@MMK_R_ampersand" = -15;
"@MMK_R_b" = 76;
"@MMK_R_braceright" = 10;
"@MMK_R_bracketright" = 9;
"@MMK_R_c" = -29;
"@MMK_R_c.salt" = -29;
"@MMK_R_d" = -26;
"@MMK_R_dotlessi" = -7;
"@MMK_R_dotlessj" = -13;
"@MMK_R_emdash" = -16;
"@MMK_R_eng" = -11;
"@MMK_R_g" = -5;
"@MMK_R_germandbls" = 27;
"@MMK_R_guillemotleft" = -11;
"@MMK_R_l" = 25;
"@MMK_R_m" = -6;
"@MMK_R_p" = -15;
"@MMK_R_q" = -26;
"@MMK_R_r" = -6;
"@MMK_R_registered" = -19;
"@MMK_R_s.salt" = -15;
"@MMK_R_t" = -15;
"@MMK_R_u" = -20;
"@MMK_R_v" = -27;
"@MMK_R_w" = -32;
"@MMK_R_y" = -24;
"@MMK_R_z" = -6;
};
"@MMK_L_I" = {
"@MMK_R_AE" = 32;
"@MMK_R_C" = -12;
"@MMK_R_b" = 71;
"@MMK_R_c" = -23;
"@MMK_R_c.salt" = -23;
"@MMK_R_d" = -21;
"@MMK_R_dotlessj" = -12;
"@MMK_R_emdash" = -13;
"@MMK_R_g" = -23;
"@MMK_R_germandbls" = 23;
"@MMK_R_l" = 20;
"@MMK_R_p" = -14;
"@MMK_R_q" = -21;
"@MMK_R_t" = -12;
"@MMK_R_u" = -12;
"@MMK_R_v" = -20;
"@MMK_R_w" = -22;
"@MMK_R_y" = -22;
};
"@MMK_L_IJ" = {
"@MMK_R_AE" = -38;
"@MMK_R_Aacute" = -23;
"@MMK_R_C" = -12;
"@MMK_R_J" = -21;
"@MMK_R_S" = -13;
"@MMK_R_a" = -33;
"@MMK_R_a.salt" = -31;
"@MMK_R_ampersand" = -17;
"@MMK_R_at" = -21;
"@MMK_R_b" = 91;
"@MMK_R_braceright" = 15;
"@MMK_R_bracketright" = 14;
"@MMK_R_c" = -29;
"@MMK_R_c.salt" = -28;
"@MMK_R_comma" = -21;
"@MMK_R_d" = -26;
"@MMK_R_dotlessi" = -12;
"@MMK_R_dotlessj" = -12;
"@MMK_R_emdash" = -10;
"@MMK_R_eng" = -12;
"@MMK_R_f" = -17;
"@MMK_R_g" = -33;
"@MMK_R_germandbls" = 41;
"@MMK_R_l" = 41;
"@MMK_R_m" = -13;
"@MMK_R_p" = -14;
"@MMK_R_q" = -27;
"@MMK_R_r" = -12;
"@MMK_R_registered" = -21;
"@MMK_R_s" = -27;
"@MMK_R_s.salt" = -22;
"@MMK_R_six" = -17;
"@MMK_R_slash" = -28;
"@MMK_R_t" = -12;
"@MMK_R_three" = -12;
"@MMK_R_u" = -12;
"@MMK_R_v" = -18;
"@MMK_R_w" = -21;
"@MMK_R_x" = -11;
"@MMK_R_y" = -21;
"@MMK_R_z" = -33;
};
"@MMK_L_K" = {
"@MMK_R_C" = -46;
"@MMK_R_a" = -12;
"@MMK_R_a.salt" = -13;
"@MMK_R_asterisk" = 15;
"@MMK_R_b" = 105;
"@MMK_R_backslash" = 22;
"@MMK_R_braceright" = 20;
"@MMK_R_bracketright" = 20;
"@MMK_R_c" = -54;
"@MMK_R_c.salt" = -56;
"@MMK_R_d" = -50;
"@MMK_R_dotlessj" = -30;
"@MMK_R_emdash" = -48;
"@MMK_R_eng" = -13;
"@MMK_R_g" = -6;
"@MMK_R_germandbls" = 52;
"@MMK_R_guillemotleft" = -49;
"@MMK_R_guillemotright" = -38;
"@MMK_R_l" = 43;
"@MMK_R_p" = -37;
"@MMK_R_parenright" = 6;
"@MMK_R_q" = -43;
"@MMK_R_quotedblright" = 13;
"@MMK_R_slash" = 10;
"@MMK_R_t" = -54;
"@MMK_R_trademark" = 24;
"@MMK_R_u" = -81;
"@MMK_R_v" = -155;
"@MMK_R_w" = -172;
"@MMK_R_y" = -98;
};
"@MMK_L_K.salt" = {
"@MMK_R_AE" = 9;
"@MMK_R_C" = -25;
"@MMK_R_b" = 89;
"@MMK_R_c" = -24;
"@MMK_R_d" = -23;
"@MMK_R_dotlessj" = -40;
"@MMK_R_emdash" = -27;
"@MMK_R_g" = -20;
"@MMK_R_germandbls" = 44;
"@MMK_R_guillemotleft" = -27;
"@MMK_R_guillemotright" = -18;
"@MMK_R_l" = 32;
"@MMK_R_quotedblright" = 5;
"@MMK_R_s" = -5;
"@MMK_R_t" = -28;
"@MMK_R_u" = -51;
"@MMK_R_w" = -83;
"@MMK_R_y" = -65;
};
"@MMK_L_L" = {
"@MMK_R_AE" = 6;
"@MMK_R_Aacute" = 16;
"@MMK_R_T" = -57;
"@MMK_R_U" = -25;
"@MMK_R_V" = -49;
"@MMK_R_W" = -51;
"@MMK_R_Y" = -58;
"@MMK_R_asterisk" = -40;
"@MMK_R_backslash" = -52;
"@MMK_R_dotlessj" = -13;
"@MMK_R_f_f" = -6;
"@MMK_R_p" = -16;
"@MMK_R_question" = -24;
"@MMK_R_quotedbl" = -35;
"@MMK_R_quotedblleft" = -33;
"@MMK_R_quotedblright" = -34;
"@MMK_R_space" = -23;
"@MMK_R_trademark" = -34;
"@MMK_R_u" = -11;
"@MMK_R_v" = -39;
"@MMK_R_w" = -36;
"@MMK_R_y" = -38;
};
"@MMK_L_M" = {
"@MMK_R_C" = -19;
"@MMK_R_J" = -16;
"@MMK_R_a" = -24;
"@MMK_R_c" = -41;
"@MMK_R_d" = -39;
"@MMK_R_dotlessi" = -11;
"@MMK_R_dotlessj" = -25;
"@MMK_R_emdash" = -19;
"@MMK_R_eng" = -12;
"@MMK_R_f" = -7;
"@MMK_R_g" = -28;
"@MMK_R_guillemotleft" = -14;
"@MMK_R_r" = -11;
"@MMK_R_s" = -11;
"@MMK_R_t" = -34;
"@MMK_R_u" = -40;
"@MMK_R_w" = -52;
"@MMK_R_y" = -35;
"@MMK_R_z" = -12;
};
"@MMK_L_O" = {
"@MMK_R_AE" = -28;
"@MMK_R_Aacute" = -12;
"@MMK_R_B" = -11;
"@MMK_R_M" = -11;
"@MMK_R_U" = -14;
"@MMK_R_V" = -17;
"@MMK_R_W" = -15;
"@MMK_R_X" = -28;
"@MMK_R_Y" = -17;
"@MMK_R_a" = -6;
"@MMK_R_apostrophe" = -17;
"@MMK_R_braceright" = -19;
"@MMK_R_bracketright" = -21;
"@MMK_R_comma" = -16;
"@MMK_R_g" = -9;
"@MMK_R_germandbls" = -6;
"@MMK_R_l" = -6;
"@MMK_R_one" = -14;
"@MMK_R_parenright" = -12;
"@MMK_R_q" = -5;
"@MMK_R_s" = -6;
"@MMK_R_seven" = -14;
"@MMK_R_slash" = -15;
};
"@MMK_L_P" = {
"@MMK_R_AE" = -80;
"@MMK_R_Aacute" = -73;
"@MMK_R_B" = -5;
"@MMK_R_J" = -62;
"@MMK_R_a" = -51;
"@MMK_R_b" = 16;
"@MMK_R_c" = -58;
"@MMK_R_comma" = -51;
"@MMK_R_d" = -55;
"@MMK_R_emdash" = -37;
"@MMK_R_g" = -72;
"@MMK_R_s" = -49;
"@MMK_R_y" = -13;
"@MMK_R_z" = -41;
};
"@MMK_L_R" = {
"@MMK_R_C" = -6;
"@MMK_R_J" = -5;
"@MMK_R_U" = -19;
"@MMK_R_V" = -29;
"@MMK_R_W" = -31;
"@MMK_R_Y" = -38;
"@MMK_R_ampersand" = -12;
"@MMK_R_braceright" = 34;
"@MMK_R_bracketright" = 34;
"@MMK_R_c" = -35;
"@MMK_R_c.salt" = -38;
"@MMK_R_d" = -33;
"@MMK_R_dotlessj" = -5;
"@MMK_R_emdash" = -51;
"@MMK_R_p" = -12;
"@MMK_R_parenright" = 21;
"@MMK_R_q" = -25;
"@MMK_R_slash" = 24;
"@MMK_R_space" = -26;
"@MMK_R_t" = -14;
"@MMK_R_u" = -17;
"@MMK_R_v" = -37;
"@MMK_R_w" = -42;
"@MMK_R_y" = -29;
};
"@MMK_L_R.salt" = {
"@MMK_R_AE" = 33;
"@MMK_R_C" = -15;
"@MMK_R_U" = -25;
"@MMK_R_W" = -25;
"@MMK_R_Y" = -19;
"@MMK_R_c" = -24;
"@MMK_R_d" = -24;
"@MMK_R_dotlessj" = 81;
"@MMK_R_emdash" = -24;
"@MMK_R_guillemotleft" = -13;
"@MMK_R_t" = -12;
"@MMK_R_u" = -14;
"@MMK_R_w" = -28;
"@MMK_R_y" = -28;
};
"@MMK_L_S" = {
"@MMK_R_AE" = -10;
"@MMK_R_W" = 7;
"@MMK_R_b" = 65;
"@MMK_R_c" = -5;
"@MMK_R_c.salt" = -5;
"@MMK_R_g" = -25;
"@MMK_R_germandbls" = 16;
"@MMK_R_l" = 15;
"@MMK_R_m" = -6;
"@MMK_R_p" = -7;
"@MMK_R_s.salt" = -5;
"@MMK_R_v" = -7;
"@MMK_R_w" = -7;
"@MMK_R_y" = -20;
"@MMK_R_z" = -11;
};
"@MMK_L_T" = {
"@MMK_R_AE" = -74;
"@MMK_R_Aacute" = -42;
"@MMK_R_J" = -60;
"@MMK_R_V" = 25;
"@MMK_R_W" = 29;
"@MMK_R_Y" = 21;
"@MMK_R_a" = -111;
"@MMK_R_a.salt" = -87;
"@MMK_R_ampersand" = -19;
"@MMK_R_asterisk" = 8;
"@MMK_R_b" = 87;
"@MMK_R_braceright" = 7;
"@MMK_R_bracketright" = 10;
"@MMK_R_c" = -132;
"@MMK_R_c.salt" = -132;
"@MMK_R_colon" = -21;
"@MMK_R_comma" = -20;
"@MMK_R_d" = -101;
"@MMK_R_dotlessi" = -34;
"@MMK_R_dotlessj" = -33;
"@MMK_R_emdash" = -51;
"@MMK_R_eng" = -79;
"@MMK_R_f" = -31;
"@MMK_R_f_f" = -31;
"@MMK_R_g" = -139;
"@MMK_R_germandbls" = 38;
"@MMK_R_guillemotleft" = -19;
"@MMK_R_l" = 37;
"@MMK_R_m" = -79;
"@MMK_R_p" = -81;
"@MMK_R_q" = -128;
"@MMK_R_r" = -76;
"@MMK_R_registered" = -45;
"@MMK_R_s" = -102;
"@MMK_R_s.salt" = -106;
"@MMK_R_slash" = -29;
"@MMK_R_space" = -26;
"@MMK_R_t" = -26;
"@MMK_R_u" = -73;
"@MMK_R_v" = -84;
"@MMK_R_w" = -82;
"@MMK_R_x" = -87;
"@MMK_R_y" = -91;
"@MMK_R_z" = -92;
};
"@MMK_L_Thorn" = {
"@MMK_R_AE" = -80;
"@MMK_R_Aacute" = -46;
"@MMK_R_B" = -24;
"@MMK_R_J" = -30;
"@MMK_R_U" = -21;
"@MMK_R_W" = -33;
"@MMK_R_Y" = -63;
"@MMK_R_Z" = -10;
"@MMK_R_a" = -5;
"@MMK_R_c" = -5;
"@MMK_R_comma" = -35;
"@MMK_R_g" = -12;
"@MMK_R_germandbls" = -8;
"@MMK_R_l" = -8;
"@MMK_R_quotedbl" = -14;
"@MMK_R_quotedblleft" = -30;
"@MMK_R_quotedblright" = -21;
};
"@MMK_L_U" = {
"@MMK_R_AE" = -55;
"@MMK_R_Aacute" = -34;
"@MMK_R_B" = -5;
"@MMK_R_C" = -10;
"@MMK_R_J" = -21;
"@MMK_R_S" = -7;
"@MMK_R_U" = -7;
"@MMK_R_a" = -34;
"@MMK_R_a.salt" = -32;
"@MMK_R_ampersand" = -15;
"@MMK_R_asterisk" = 30;
"@MMK_R_b" = -13;
"@MMK_R_c" = -29;
"@MMK_R_c.salt" = -29;
"@MMK_R_comma" = -23;
"@MMK_R_d" = -29;
"@MMK_R_dotlessi" = -13;
"@MMK_R_dotlessj" = -12;
"@MMK_R_eng" = -12;
"@MMK_R_f" = -18;
"@MMK_R_g" = -35;
"@MMK_R_germandbls" = -19;
"@MMK_R_l" = -18;
"@MMK_R_m" = -13;
"@MMK_R_p" = -14;
"@MMK_R_q" = -30;
"@MMK_R_r" = -13;
"@MMK_R_registered" = -20;
"@MMK_R_s" = -30;
"@MMK_R_s.salt" = -25;
"@MMK_R_slash" = -30;
"@MMK_R_t" = -12;
"@MMK_R_u" = -12;
"@MMK_R_v" = -18;
"@MMK_R_w" = -21;
"@MMK_R_x" = -12;
"@MMK_R_y" = -21;
"@MMK_R_z" = -34;
};
"@MMK_L_V" = {
"@MMK_R_AE" = -108;
"@MMK_R_Aacute" = -66;
"@MMK_R_C" = -7;
"@MMK_R_J" = -51;
"@MMK_R_T" = 34;
"@MMK_R_a" = -115;
"@MMK_R_c" = -115;
"@MMK_R_colon" = -20;
"@MMK_R_comma" = -45;
"@MMK_R_d" = -114;
"@MMK_R_dotlessi" = -67;
"@MMK_R_dotlessj" = -68;
"@MMK_R_emdash" = -27;
"@MMK_R_eng" = -66;
"@MMK_R_f" = -43;
"@MMK_R_f_f" = -58;
"@MMK_R_g" = -137;
"@MMK_R_germandbls" = -15;
"@MMK_R_guillemotleft" = -13;
"@MMK_R_l" = -14;
"@MMK_R_quotedbl" = 28;
"@MMK_R_quotedblleft" = 36;
"@MMK_R_quotedblright" = 25;
"@MMK_R_r" = -65;
"@MMK_R_s" = -114;
"@MMK_R_t" = -59;
"@MMK_R_u" = -63;
"@MMK_R_w" = -75;
"@MMK_R_y" = -74;
"@MMK_R_z" = -100;
};
"@MMK_L_W" = {
"@MMK_R_AE" = -103;
"@MMK_R_Aacute" = -60;
"@MMK_R_C" = -9;
"@MMK_R_J" = -52;
"@MMK_R_T" = 27;
"@MMK_R_a" = -114;
"@MMK_R_a.salt" = -97;
"@MMK_R_asterisk" = 62;
"@MMK_R_backslash" = 28;
"@MMK_R_braceright" = 8;
"@MMK_R_bracketright" = 11;
"@MMK_R_c" = -115;
"@MMK_R_c.salt" = -115;
"@MMK_R_colon" = -20;
"@MMK_R_comma" = -45;
"@MMK_R_d" = -114;
"@MMK_R_dotlessi" = -68;
"@MMK_R_dotlessj" = -69;
"@MMK_R_emdash" = -28;
"@MMK_R_eng" = -68;
"@MMK_R_f" = -44;
"@MMK_R_f_f" = -56;
"@MMK_R_g" = -136;
"@MMK_R_germandbls" = -15;
"@MMK_R_guillemotleft" = -14;
"@MMK_R_l" = -15;
"@MMK_R_m" = -68;
"@MMK_R_p" = -72;
"@MMK_R_q" = -118;
"@MMK_R_question" = 6;
"@MMK_R_quotedbl" = 21;
"@MMK_R_quotedblleft" = 27;
"@MMK_R_quotedblright" = 8;
"@MMK_R_r" = -67;
"@MMK_R_registered" = -50;
"@MMK_R_s" = -114;
"@MMK_R_s.salt" = -109;
"@MMK_R_slash" = -55;
"@MMK_R_space" = -26;
"@MMK_R_t" = -61;
"@MMK_R_trademark" = 50;
"@MMK_R_u" = -65;
"@MMK_R_v" = -74;
"@MMK_R_w" = -77;
"@MMK_R_x" = -77;
"@MMK_R_y" = -76;
"@MMK_R_z" = -100;
};
"@MMK_L_X" = {
"@MMK_R_C" = -31;
"@MMK_R_b" = 98;
"@MMK_R_c" = -28;
"@MMK_R_d" = -24;
"@MMK_R_emdash" = -28;
"@MMK_R_g" = 6;
"@MMK_R_germandbls" = 42;
"@MMK_R_guillemotleft" = -28;
"@MMK_R_guillemotright" = -15;
"@MMK_R_l" = 44;
"@MMK_R_t" = -33;
"@MMK_R_u" = -54;
"@MMK_R_w" = -114;
"@MMK_R_y" = -41;
};
"@MMK_L_Y" = {
"@MMK_R_AE" = -88;
"@MMK_R_Aacute" = -63;
"@MMK_R_C" = -12;
"@MMK_R_J" = -59;
"@MMK_R_T" = 34;
"@MMK_R_a" = -137;
"@MMK_R_a.salt" = -119;
"@MMK_R_asterisk" = 58;
"@MMK_R_b" = 7;
"@MMK_R_backslash" = 40;
"@MMK_R_braceright" = 24;
"@MMK_R_bracketright" = 24;
"@MMK_R_c" = -162;
"@MMK_R_c.salt" = -163;
"@MMK_R_colon" = -16;
"@MMK_R_comma" = -15;
"@MMK_R_d" = -88;
"@MMK_R_dotlessi" = -91;
"@MMK_R_dotlessj" = -88;
"@MMK_R_emdash" = -44;
"@MMK_R_eng" = -92;
"@MMK_R_f" = -50;
"@MMK_R_g" = -157;
"@MMK_R_guillemotleft" = -29;
"@MMK_R_guillemotright" = -18;
"@MMK_R_m" = -102;
"@MMK_R_p" = -102;
"@MMK_R_parenright" = 17;
"@MMK_R_q" = -158;
"@MMK_R_question" = 11;
"@MMK_R_quotedbl" = 28;
"@MMK_R_quotedblleft" = 36;
"@MMK_R_quotedblright" = 10;
"@MMK_R_r" = -92;
"@MMK_R_registered" = -56;
"@MMK_R_s" = -118;
"@MMK_R_s.salt" = -131;
"@MMK_R_slash" = -27;
"@MMK_R_space" = -27;
"@MMK_R_t" = -88;
"@MMK_R_trademark" = 56;
"@MMK_R_u" = -97;
"@MMK_R_v" = -97;
"@MMK_R_w" = -103;
"@MMK_R_x" = -95;
"@MMK_R_y" = -100;
"@MMK_R_z" = -112;
};
"@MMK_L_Z" = {
"@MMK_R_b" = 54;
"@MMK_R_dotlessj" = -5;
"@MMK_R_f_f" = -5;
"@MMK_R_germandbls" = 11;
"@MMK_R_p" = -10;
"@MMK_R_u" = -6;
"@MMK_R_v" = -18;
"@MMK_R_w" = -21;
"@MMK_R_y" = -16;
};
"@MMK_L_a" = {
"@MMK_R_T" = -80;
"@MMK_R_U" = -11;
"@MMK_R_Y" = -104;
"@MMK_R_backslash" = -39;
"@MMK_R_parenright" = 16;
"@MMK_R_slash" = 23;
"@MMK_R_v" = -13;
"@MMK_R_w" = -17;
};
"@MMK_L_a.salt" = {
"@MMK_R_w" = -36;
"@MMK_R_y" = -6;
};
"@MMK_L_ae" = {
"@MMK_R_B" = -20;
"@MMK_R_M" = -22;
"@MMK_R_T" = -120;
"@MMK_R_U" = -34;
"@MMK_R_V" = -114;
"@MMK_R_W" = -122;
"@MMK_R_X" = -7;
"@MMK_R_Y" = -146;
"@MMK_R_Z" = -7;
"@MMK_R_backslash" = -57;
"@MMK_R_braceright" = -20;
"@MMK_R_bracketright" = -17;
"@MMK_R_question" = -17;
"@MMK_R_trademark" = -16;
"@MMK_R_w" = -10;
"@MMK_R_x" = -22;
};
"@MMK_L_ampersand" = {
"@MMK_R_AE" = 91;
"@MMK_R_Aacute" = 101;
"@MMK_R_B" = 21;
"@MMK_R_C" = -22;
"@MMK_R_J" = 12;
"@MMK_R_S" = 6;
"@MMK_R_T" = -35;
"@MMK_R_U" = -38;
"@MMK_R_W" = -56;
"@MMK_R_Y" = -36;
"@MMK_R_Z" = 32;
"@MMK_R_dotlessi" = 26;
"@MMK_R_eng" = 18;
"@MMK_R_germandbls" = 51;
"@MMK_R_l" = 50;
"@MMK_R_quotedbl" = -41;
"@MMK_R_r" = 21;
"@MMK_R_s" = 8;
"@MMK_R_w" = -27;
"@MMK_R_y" = -14;
"@MMK_R_z" = 24;
};
"@MMK_L_apostrophe" = {
"@MMK_R_c" = -22;
"@MMK_R_g" = -47;
};
"@MMK_L_asterisk" = {
"@MMK_R_AE" = -69;
"@MMK_R_Aacute" = -27;
"@MMK_R_J" = -32;
"@MMK_R_T" = 8;
"@MMK_R_W" = 18;
"@MMK_R_Y" = 9;
"@MMK_R_b" = 48;
"@MMK_R_c" = -10;
"@MMK_R_d" = -24;
"@MMK_R_g" = -29;
};
"@MMK_L_at" = {
"@MMK_R_B" = -16;
"@MMK_R_quotedbl" = -12;
};
"@MMK_L_b" = {
"@MMK_R_AE" = -7;
"@MMK_R_B" = -21;
"@MMK_R_M" = -23;
"@MMK_R_T" = -131;
"@MMK_R_U" = -31;
"@MMK_R_V" = -121;
"@MMK_R_W" = -130;
"@MMK_R_X" = -11;
"@MMK_R_Y" = -155;
"@MMK_R_Z" = -14;
"@MMK_R_asterisk" = -46;
"@MMK_R_backslash" = -60;
"@MMK_R_braceright" = -25;
"@MMK_R_bracketright" = -23;
"@MMK_R_f_f" = -6;
"@MMK_R_question" = -23;
"@MMK_R_quotedbl" = -48;
"@MMK_R_quotedblleft" = -48;
"@MMK_R_quotedblright" = -48;
"@MMK_R_trademark" = -30;
"@MMK_R_v" = -13;
"@MMK_R_w" = -20;
"@MMK_R_x" = -33;
};
"@MMK_L_backslash" = {
"@MMK_R_AE" = 49;
"@MMK_R_Aacute" = 58;
"@MMK_R_C" = -15;
"@MMK_R_T" = -34;
"@MMK_R_U" = -32;
"@MMK_R_W" = -62;
"@MMK_R_Y" = -36;
"@MMK_R_germandbls" = 14;
"@MMK_R_l" = 12;
"@MMK_R_quotedbl" = -54;
"@MMK_R_w" = -29;
"@MMK_R_y" = -14;
};
"@MMK_L_bar" = {
"@MMK_R_b" = 17;
"@MMK_R_dotlessj" = 61;
};
"@MMK_L_braceleft" = {
"@MMK_R_AE" = 19;
"@MMK_R_Aacute" = 27;
"@MMK_R_B" = 12;
"@MMK_R_C" = -20;
"@MMK_R_J" = -12;
"@MMK_R_T" = 8;
"@MMK_R_U" = 15;
"@MMK_R_W" = 47;
"@MMK_R_Y" = 36;
"@MMK_R_a" = -12;
"@MMK_R_b" = 76;
"@MMK_R_c" = -22;
"@MMK_R_d" = -21;
"@MMK_R_germandbls" = 30;
"@MMK_R_l" = 30;
"@MMK_R_u" = -14;
"@MMK_R_w" = -25;
};
"@MMK_L_bracketleft" = {
"@MMK_R_AE" = 19;
"@MMK_R_Aacute" = 27;
"@MMK_R_B" = 11;
"@MMK_R_C" = -21;
"@MMK_R_J" = -13;
"@MMK_R_T" = 10;
"@MMK_R_U" = 13;
"@MMK_R_W" = 47;
"@MMK_R_Y" = 36;
"@MMK_R_a" = -12;
"@MMK_R_b" = 76;
"@MMK_R_c" = -23;
"@MMK_R_d" = -21;
"@MMK_R_germandbls" = 30;
"@MMK_R_l" = 30;
"@MMK_R_u" = -14;
"@MMK_R_w" = -24;
};
"@MMK_L_c" = {
"@MMK_R_B" = -13;
"@MMK_R_T" = -82;
"@MMK_R_U" = -30;
"@MMK_R_Y" = -118;
"@MMK_R_backslash" = -34;
"@MMK_R_braceright" = -14;
};
"@MMK_L_c_h" = {
"@MMK_R_B" = -11;
"@MMK_R_C" = -8;
"@MMK_R_T" = -133;
"@MMK_R_U" = -51;
"@MMK_R_Y" = -157;
"@MMK_R_asterisk" = -39;
"@MMK_R_backslash" = -62;
"@MMK_R_braceright" = 35;
"@MMK_R_bracketright" = 31;
"@MMK_R_question" = -17;
"@MMK_R_quotedbl" = -40;
"@MMK_R_quotedblleft" = -41;
"@MMK_R_quotedblright" = -41;
"@MMK_R_t" = -6;
"@MMK_R_trademark" = -32;
"@MMK_R_u" = -19;
"@MMK_R_v" = -40;
"@MMK_R_w" = -42;
};
"@MMK_L_c_k" = {
"@MMK_R_a" = -20;
"@MMK_R_a.salt" = -11;
"@MMK_R_ampersand" = -19;
"@MMK_R_asterisk" = -43;
"@MMK_R_b" = -5;
"@MMK_R_backslash" = -55;
"@MMK_R_braceright" = 20;
"@MMK_R_bracketright" = 18;
"@MMK_R_c" = -39;
"@MMK_R_c.salt" = -37;
"@MMK_R_d" = -29;
"@MMK_R_emdash" = -60;
"@MMK_R_guillemotright" = -13;
"@MMK_R_q" = -41;
"@MMK_R_question" = -18;
"@MMK_R_quotedbl" = -46;
"@MMK_R_quotedblleft" = -47;
"@MMK_R_quotedblright" = -47;
"@MMK_R_registered" = -12;
"@MMK_R_s.salt" = -6;
"@MMK_R_trademark" = -25;
"@MMK_R_w" = -6;
};
"@MMK_L_c_p" = {
"@MMK_R_AE" = -11;
"@MMK_R_B" = -23;
"@MMK_R_M" = -24;
"@MMK_R_T" = -132;
"@MMK_R_U" = -33;
"@MMK_R_V" = -120;
"@MMK_R_W" = -128;
"@MMK_R_X" = -14;
"@MMK_R_Y" = -157;
"@MMK_R_Z" = -17;
"@MMK_R_apostrophe" = -19;
"@MMK_R_backslash" = -59;
"@MMK_R_braceright" = -25;
"@MMK_R_bracketright" = -23;
"@MMK_R_question" = -21;
"@MMK_R_trademark" = -18;
"@MMK_R_v" = -10;
"@MMK_R_w" = -17;
"@MMK_R_x" = -36;
};
"@MMK_L_c_t" = {
"@MMK_R_Aacute" = 7;
"@MMK_R_B" = -6;
"@MMK_R_T" = -94;
"@MMK_R_U" = -25;
"@MMK_R_Y" = -115;
"@MMK_R_asterisk" = -22;
"@MMK_R_backslash" = -40;
"@MMK_R_braceright" = -17;
"@MMK_R_quotedbl" = -19;
"@MMK_R_quotedblleft" = -15;
"@MMK_R_quotedblright" = -17;
"@MMK_R_trademark" = -12;
};
"@MMK_L_colon" = {
"@MMK_R_AE" = 9;
"@MMK_R_Aacute" = 18;
"@MMK_R_T" = -25;
"@MMK_R_V" = -22;
"@MMK_R_W" = -24;
"@MMK_R_Y" = -21;
"@MMK_R_v" = -11;
"@MMK_R_w" = -12;
};
"@MMK_L_comma" = {
"@MMK_R_AE" = 15;
"@MMK_R_Aacute" = 24;
"@MMK_R_C" = -15;
"@MMK_R_T" = -24;
"@MMK_R_U" = -23;
"@MMK_R_V" = -45;
"@MMK_R_W" = -48;
"@MMK_R_Y" = -21;
"@MMK_R_dotlessj" = -10;
"@MMK_R_nine" = -18;
"@MMK_R_p" = -16;
"@MMK_R_quotedbl" = -81;
"@MMK_R_quotedblleft" = -76;
"@MMK_R_quotedblright" = -78;
"@MMK_R_u" = -13;
"@MMK_R_v" = -50;
"@MMK_R_w" = -52;
"@MMK_R_y" = -26;
};
"@MMK_L_d" = {
"@MMK_R_T" = -17;
"@MMK_R_U" = -28;
"@MMK_R_Y" = -19;
"@MMK_R_braceright" = 29;
"@MMK_R_bracketright" = 29;
"@MMK_R_parenright" = 31;
"@MMK_R_slash" = 36;
};
"@MMK_L_dotlessi" = {
"@MMK_R_C" = -6;
"@MMK_R_T" = -27;
"@MMK_R_U" = -41;
"@MMK_R_Y" = -103;
"@MMK_R_backslash" = -28;
"@MMK_R_parenright" = 11;
"@MMK_R_slash" = 13;
"@MMK_R_v" = -7;
"@MMK_R_w" = -13;
};
"@MMK_L_dotlessj" = {
"@MMK_R_B" = -14;
"@MMK_R_M" = -16;
"@MMK_R_T" = -25;
"@MMK_R_U" = -23;
"@MMK_R_V" = -73;
"@MMK_R_W" = -76;
"@MMK_R_Y" = -100;
"@MMK_R_Z" = -5;
"@MMK_R_backslash" = -19;
"@MMK_R_dotlessj" = 62;
};
"@MMK_L_emdash" = {
"@MMK_R_AE" = -29;
"@MMK_R_Aacute" = -18;
"@MMK_R_B" = -13;
"@MMK_R_M" = -14;
"@MMK_R_T" = -50;
"@MMK_R_U" = -12;
"@MMK_R_V" = -31;
"@MMK_R_W" = -33;
"@MMK_R_X" = -25;
"@MMK_R_Y" = -45;
"@MMK_R_Z" = -14;
"@MMK_R_dotlessi" = -10;
"@MMK_R_dotlessj" = -10;
"@MMK_R_eng" = -13;
"@MMK_R_p" = -16;
"@MMK_R_r" = -11;
"@MMK_R_v" = -21;
"@MMK_R_w" = -21;
"@MMK_R_x" = -27;
"@MMK_R_y" = -22;
};
"@MMK_L_eth" = {
"@MMK_R_B" = -18;
"@MMK_R_T" = -26;
};
"@MMK_L_exclamdown" = {
"@MMK_R_U" = -19;
"@MMK_R_W" = -28;
"@MMK_R_Y" = -32;
"@MMK_R_dotlessj" = 58;
};
"@MMK_L_f" = {
"@MMK_R_B" = 91;
"@MMK_R_C" = 45;
"@MMK_R_T" = 150;
"@MMK_R_U" = 89;
"@MMK_R_Y" = 162;
"@MMK_R_c" = -7;
"@MMK_R_c.salt" = -6;
"@MMK_R_emdash" = -17;
"@MMK_R_quotedbl" = 119;
"@MMK_R_quotedblleft" = 124;
"@MMK_R_quotedblright" = 121;
};
"@MMK_L_f_f_i" = {
"@MMK_R_w" = -6;
};
"@MMK_L_g" = {
"@MMK_R_C" = -9;
"@MMK_R_T" = -46;
"@MMK_R_U" = -23;
"@MMK_R_Y" = -85;
"@MMK_R_a" = -8;
"@MMK_R_a.salt" = -8;
"@MMK_R_backslash" = -16;
"@MMK_R_braceright" = 73;
"@MMK_R_bracketright" = 69;
"@MMK_R_parenright" = 31;
"@MMK_R_slash" = 33;
"@MMK_R_v" = -6;
};
"@MMK_L_germandbls" = {
"@MMK_R_B" = -7;
"@MMK_R_C" = -13;
"@MMK_R_T" = -73;
"@MMK_R_dotlessj" = -18;
"@MMK_R_f_f" = -10;
"@MMK_R_guillemotleft" = -21;
"@MMK_R_u" = -12;
"@MMK_R_w" = -64;
"@MMK_R_y" = -58;
};
"@MMK_L_guillemotleft" = {
"@MMK_R_AE" = -31;
"@MMK_R_Aacute" = -11;
"@MMK_R_X" = -14;
"@MMK_R_Y" = -21;
};
"@MMK_L_guillemotright" = {
"@MMK_R_AE" = -40;
"@MMK_R_Aacute" = -18;
"@MMK_R_M" = -10;
"@MMK_R_T" = -18;
"@MMK_R_V" = -15;
"@MMK_R_W" = -16;
"@MMK_R_X" = -27;
"@MMK_R_Y" = -32;
};
"@MMK_L_k" = {
"@MMK_R_T" = -79;
"@MMK_R_U" = -25;
"@MMK_R_Y" = -102;
"@MMK_R_c" = -21;
"@MMK_R_d" = -19;
"@MMK_R_emdash" = -19;
"@MMK_R_quotedbl" = -28;
"@MMK_R_quotedblleft" = -28;
"@MMK_R_quotedblright" = -28;
};
"@MMK_L_l" = {
"@MMK_R_T" = -9;
"@MMK_R_U" = -15;
"@MMK_R_Y" = -5;
"@MMK_R_parenright" = 8;
"@MMK_R_slash" = 11;
};
"@MMK_L_m" = {
"@MMK_R_C" = -6;
"@MMK_R_T" = -107;
"@MMK_R_U" = -43;
"@MMK_R_Y" = -131;
"@MMK_R_u" = -8;
"@MMK_R_w" = -41;
"@MMK_R_y" = -5;
};
"@MMK_L_n" = {
"@MMK_R_C" = -7;
"@MMK_R_T" = -110;
"@MMK_R_U" = -45;
"@MMK_R_Y" = -134;
"@MMK_R_backslash" = -60;
"@MMK_R_braceright" = 21;
"@MMK_R_bracketright" = 21;
"@MMK_R_parenright" = 16;
"@MMK_R_question" = -15;
"@MMK_R_slash" = 21;
"@MMK_R_trademark" = -10;
"@MMK_R_u" = -9;
"@MMK_R_v" = -32;
"@MMK_R_w" = -41;
"@MMK_R_y" = -5;
};
"@MMK_L_nine" = {
"@MMK_R_B" = -13;
"@MMK_R_comma" = -36;
};
"@MMK_L_parenleft" = {
"@MMK_R_AE" = 22;
"@MMK_R_Aacute" = 32;
"@MMK_R_C" = -14;
"@MMK_R_W" = 47;
"@MMK_R_Y" = 35;
"@MMK_R_b" = 79;
"@MMK_R_c" = -16;
"@MMK_R_d" = -16;
"@MMK_R_g" = -14;
"@MMK_R_germandbls" = 28;
"@MMK_R_l" = 31;
"@MMK_R_w" = -17;
"@MMK_R_y" = -15;
};
"@MMK_L_q" = {
"@MMK_R_B" = -11;
"@MMK_R_T" = -90;
"@MMK_R_U" = -14;
"@MMK_R_Y" = -121;
};
"@MMK_L_questiondown" = {
"@MMK_R_AE" = 41;
"@MMK_R_Aacute" = 51;
"@MMK_R_C" = -12;
"@MMK_R_T" = -18;
"@MMK_R_U" = -28;
"@MMK_R_W" = -50;
"@MMK_R_Y" = -37;
"@MMK_R_dotlessj" = 82;
"@MMK_R_w" = -16;
};
"@MMK_L_quotedbl" = {
"@MMK_R_AE" = -67;
"@MMK_R_Aacute" = -30;
"@MMK_R_J" = -25;
"@MMK_R_V" = 21;
"@MMK_R_W" = 26;
"@MMK_R_Y" = 17;
"@MMK_R_at" = -15;
"@MMK_R_b" = 62;
"@MMK_R_comma" = -81;
"@MMK_R_d" = -20;
"@MMK_R_four" = -37;
"@MMK_R_g" = -27;
"@MMK_R_germandbls" = 12;
"@MMK_R_l" = 11;
"@MMK_R_registered" = -15;
"@MMK_R_six" = -14;
"@MMK_R_slash" = -54;
"@MMK_R_space" = -30;
};
"@MMK_L_quotedblleft" = {
"@MMK_R_AE" = -67;
"@MMK_R_Aacute" = -31;
"@MMK_R_J" = -24;
"@MMK_R_V" = 7;
"@MMK_R_W" = 12;
"@MMK_R_X" = 9;
"@MMK_R_b" = 45;
"@MMK_R_comma" = -75;
"@MMK_R_d" = -19;
"@MMK_R_g" = -23;
};
"@MMK_L_quotedblright" = {
"@MMK_R_AE" = -67;
"@MMK_R_Aacute" = -32;
"@MMK_R_J" = -23;
"@MMK_R_V" = 32;
"@MMK_R_W" = 38;
"@MMK_R_Y" = 28;
"@MMK_R_b" = 72;
"@MMK_R_comma" = -81;
"@MMK_R_d" = -19;
"@MMK_R_g" = -29;
"@MMK_R_germandbls" = 22;
"@MMK_R_l" = 22;
};
"@MMK_L_r" = {
"@MMK_R_B" = -23;
"@MMK_R_T" = -121;
"@MMK_R_U" = -32;
"@MMK_R_Y" = -143;
"@MMK_R_backslash" = -47;
"@MMK_R_braceright" = -23;
"@MMK_R_bracketright" = -21;
"@MMK_R_comma" = -10;
};
"@MMK_L_registered" = {
"@MMK_R_B" = -16;
"@MMK_R_T" = -44;
"@MMK_R_U" = -24;
"@MMK_R_W" = -53;
"@MMK_R_Y" = -60;
"@MMK_R_quotedbl" = -12;
};
"@MMK_L_s" = {
"@MMK_R_B" = -13;
"@MMK_R_T" = -80;
"@MMK_R_U" = -35;
"@MMK_R_Y" = -127;
"@MMK_R_backslash" = -44;
"@MMK_R_braceright" = -15;
"@MMK_R_bracketright" = -12;
};
"@MMK_L_seven" = {
"@MMK_R_B" = 26;
"@MMK_R_C" = -14;
"@MMK_R_comma" = -67;
};
"@MMK_L_slash" = {
"@MMK_R_AE" = -85;
"@MMK_R_Aacute" = -58;
"@MMK_R_C" = -15;
"@MMK_R_J" = -48;
"@MMK_R_W" = 53;
"@MMK_R_Y" = 42;
"@MMK_R_a" = -59;
"@MMK_R_b" = 86;
"@MMK_R_c" = -60;
"@MMK_R_d" = -49;
"@MMK_R_dotlessi" = -21;
"@MMK_R_dotlessj" = -15;
"@MMK_R_eng" = -26;
"@MMK_R_g" = -61;
"@MMK_R_germandbls" = 36;
"@MMK_R_l" = 36;
"@MMK_R_r" = -26;
"@MMK_R_s" = -59;
"@MMK_R_t" = -15;
"@MMK_R_u" = -18;
"@MMK_R_w" = -24;
"@MMK_R_y" = -28;
"@MMK_R_z" = -52;
};
"@MMK_L_space" = {
"@MMK_R_AE" = -40;
"@MMK_R_Aacute" = -34;
"@MMK_R_J" = -30;
"@MMK_R_T" = -26;
"@MMK_R_W" = -32;
"@MMK_R_Y" = -30;
"@MMK_R_quotedbl" = -30;
"@MMK_R_w" = -23;
"@MMK_R_y" = -19;
};
"@MMK_L_t_t" = {
"@MMK_R_c" = -8;
};
"@MMK_L_t_z" = {
"@MMK_R_Aacute" = 9;
"@MMK_R_B" = -8;
"@MMK_R_T" = -102;
"@MMK_R_U" = -36;
"@MMK_R_Y" = -128;
"@MMK_R_backslash" = -51;
"@MMK_R_braceright" = -19;
"@MMK_R_question" = -13;
};
"@MMK_L_three" = {
"@MMK_R_comma" = -12;
};
"@MMK_L_trademark" = {
"@MMK_R_AE" = -61;
"@MMK_R_Aacute" = -21;
"@MMK_R_B" = 11;
"@MMK_R_J" = -30;
"@MMK_R_T" = 13;
"@MMK_R_U" = 20;
"@MMK_R_W" = 73;
"@MMK_R_Y" = 60;
"@MMK_R_b" = 92;
"@MMK_R_c" = -12;
"@MMK_R_d" = -14;
"@MMK_R_g" = -15;
"@MMK_R_germandbls" = 54;
"@MMK_R_l" = 54;
"@MMK_R_r" = 6;
"@MMK_R_t" = 10;
"@MMK_R_u" = 22;
"@MMK_R_w" = 15;
"@MMK_R_y" = 5;
};
"@MMK_L_u" = {
"@MMK_R_C" = -10;
"@MMK_R_T" = -108;
"@MMK_R_U" = -49;
"@MMK_R_Y" = -131;
"@MMK_R_backslash" = -58;
"@MMK_R_bracketright" = 8;
"@MMK_R_parenright" = 15;
"@MMK_R_question" = -15;
"@MMK_R_slash" = 19;
"@MMK_R_v" = -9;
"@MMK_R_w" = -24;
};
"@MMK_L_v" = {
"@MMK_R_Aacute" = -50;
"@MMK_R_B" = -22;
"@MMK_R_T" = -89;
"@MMK_R_U" = -20;
"@MMK_R_Y" = -131;
"@MMK_R_comma" = -49;
"@MMK_R_emdash" = -14;
"@MMK_R_g" = -8;
"@MMK_R_germandbls" = -6;
"@MMK_R_l" = -6;
};
"@MMK_L_w" = {
"@MMK_R_Aacute" = -55;
"@MMK_R_B" = -22;
"@MMK_R_T" = -88;
"@MMK_R_U" = -20;
"@MMK_R_Y" = -136;
"@MMK_R_backslash" = -35;
"@MMK_R_braceright" = -33;
"@MMK_R_bracketright" = -26;
"@MMK_R_comma" = -48;
"@MMK_R_emdash" = -10;
"@MMK_R_germandbls" = -6;
"@MMK_R_parenright" = -18;
"@MMK_R_slash" = -23;
"@MMK_R_space" = -20;
};
"@MMK_L_x" = {
"@MMK_R_T" = -94;
"@MMK_R_U" = -34;
"@MMK_R_Y" = -116;
"@MMK_R_c" = -43;
"@MMK_R_d" = -36;
"@MMK_R_emdash" = -26;
"@MMK_R_g" = -14;
"@MMK_R_u" = -5;
"@MMK_R_w" = -24;
};
"@MMK_L_y" = {
"@MMK_R_Aacute" = -46;
"@MMK_R_B" = -25;
"@MMK_R_T" = -91;
"@MMK_R_U" = -22;
"@MMK_R_Y" = -134;
"@MMK_R_backslash" = -37;
"@MMK_R_braceright" = -32;
"@MMK_R_bracketright" = -25;
"@MMK_R_comma" = -50;
"@MMK_R_emdash" = -16;
"@MMK_R_g" = -5;
"@MMK_R_germandbls" = -8;
"@MMK_R_l" = -7;
"@MMK_R_parenright" = -18;
"@MMK_R_q" = -6;
"@MMK_R_slash" = -23;
"@MMK_R_space" = -18;
};
"@MMK_L_zero" = {
"@MMK_R_B" = -12;
"@MMK_R_comma" = -12;
};
A = {
apostrophe = -55;
four = -13;
schwa = -13;
seven = 19;
zero = -14;
};
Aogonek = {
j = 122;
};
Aringacute = {
space = -39;
};
B = {
M = -12;
V = -17;
X = -44;
apostrophe = -13;
braceright = -17;
bracketright = -18;
m = -7;
p = -13;
v = -18;
x = -17;
};
C = {
four = 6;
itilde = 9;
k = 14;
k.salt = 14;
kcommaaccent = 14;
};
Cacute = {
k = 14;
k.salt = 14;
};
Ccaron = {
k = 14;
k.salt = 14;
};
Ccedilla = {
k = 14;
k.salt = 14;
};
Ccircumflex = {
k = 14;
k.salt = 14;
};
Cdotaccent = {
k = 14;
k.salt = 14;
};
D = {
apostrophe = -19;
itilde = 15;
};
Eng = {
germandbls = -21;
k = 54;
k.salt = 54;
};
F = {
V = 28;
a.salt = -36;
ampersand = -13;
asterisk = 15;
at = -23;
braceright = 9;
bracketright = 9;
c.salt = -47;
dotlessi = -31;
four = -12;
germandbls = -25;
idieresis = 2;
iogonek = -31;
k = 55;
k.salt = 55;
kcommaaccent = 55;
lslash = 19;
m = -33;
p = -22;
q = -51;
registered = -21;
s.salt = -41;
schwa = -41;
slash = -43;
space = -25;
v = -25;
x = -30;
};
H = {
at = -18;
four = -19;
germandbls = 1;
k = 39;
k.salt = 39;
kcommaaccent = 39;
lslash = 3;
schwa = -22;
seven = 10;
six = -18;
zero = -14;
};
Hbar = {
germandbls = 1;
k = 39;
k.salt = 39;
};
Hcircumflex = {
germandbls = 1;
k = 39;
k.salt = 39;
};
I = {
f_f_h = -10;
four = -16;
germandbls = 1;
hcircumflex = 15;
k.salt = 30;
kcommaaccent = 30;
lslash = 1;
schwa = -11;
seven = 5;
};
IJ = {
germandbls = -28;
};
Iacute = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Ibreve = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Icircumflex = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Idieresis = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Idotaccent = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Igrave = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Imacron = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Iogonek = {
f_f_h = -10;
germandbls = 1;
j = 61;
k.salt = 30;
};
Itilde = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
J = {
f_f_h = -16;
germandbls = -28;
hcircumflex = 19;
lslash = 20;
schwa = -23;
};
Jcircumflex = {
f_f_h = -16;
germandbls = -28;
};
K = {
four = -39;
germandbls = 1;
hcircumflex = 66;
k = 75;
k.salt = 68;
kcommaaccent = 68;
lslash = 30;
one = 30;
schwa = -52;
seven = 23;
six = -14;
thorn = 77;
two = 18;
};
K.salt = {
a.salt = -5;
asterisk = 6;
backslash = 9;
braceright = 5;
bracketright = 7;
c.salt = -24;
four = -27;
germandbls = 1;
hcircumflex = 50;
k = 59;
k.salt = 59;
kcommaaccent = 59;
lslash = 19;
one = 18;
p = -50;
q = -23;
registered = -15;
s.salt = -7;
schwa = -20;
seven = 11;
six = -13;
trademark = 8;
v = -72;
};
Kcommaaccent = {
germandbls = 1;
k = 75;
k.salt = 68;
thorn = 77;
};
L = {
apostrophe = -61;
four = 18;
nine = -32;
};
M = {
a.salt = -24;
ampersand = -15;
asterisk = 31;
at = -22;
backslash = 11;
braceright = 6;
bracketright = 7;
c.salt = -41;
four = -25;
hcircumflex = 58;
m = -11;
one = 17;
p = -31;
q = -39;
registered = -25;
s.salt = -22;
schwa = -29;
seven = 16;
six = -21;
trademark = 16;
v = -48;
x = -11;
};
N = {
at = -23;
four = -15;
germandbls = -21;
k = 54;
k.salt = 54;
kcommaaccent = 54;
lslash = 20;
one = 9;
schwa = -28;
six = -19;
zero = -12;
};
Nacute = {
germandbls = -21;
k = 54;
k.salt = 54;
};
Ncaron = {
germandbls = -21;
k = 54;
k.salt = 54;
};
Ncommaaccent = {
germandbls = -21;
k = 54;
k.salt = 54;
};
Ndotaccent = {
germandbls = -21;
k = 54;
k.salt = 54;
};
Ntilde = {
germandbls = -21;
k = 54;
k.salt = 54;
};
O = {
itilde = 11;
};
P = {
X = -48;
a.salt = -24;
ampersand = -18;
asterisk = 11;
at = -26;
c.salt = -57;
dotlessi = -9;
four = -21;
germandbls = -15;
hbar = 22;
hcircumflex = 9;
icircumflex = 13;
iogonek = -9;
itilde = 46;
k = 6;
k.salt = 7;
kcommaaccent = 7;
m = -41;
nine = 7;
q = -67;
registered = -22;
s.salt = -43;
schwa = -44;
slash = -51;
space = -25;
x = -8;
};
Q = {
itilde = 11;
};
R = {
apostrophe = -12;
four = -29;
one = 19;
schwa = -29;
seven = 37;
two = 25;
};
R.salt = {
V = -26;
apostrophe = -19;
backslash = -17;
c.salt = -24;
four = -23;
p = -15;
q = -23;
registered = -12;
schwa = -13;
seven = 10;
v = -29;
};
S = {
germandbls = 1;
itilde = 22;
k = 27;
k.salt = 27;
kcommaaccent = 27;
lslash = 1;
};
Sacute = {
germandbls = 1;
k = 27;
k.salt = 27;
lslash = 1;
};
Scaron = {
germandbls = 1;
k = 27;
k.salt = 27;
kcommaaccent = 27;
};
Scircumflex = {
germandbls = 1;
k = 27;
k.salt = 27;
};
T = {
abreve = -101;
acircumflex = -86;
adieresis = -69;
at = -47;
atilde = -88;
ccaron = -114;
ccircumflex = -122;
dotlessi = -77;
ecaron = -113;
ecircumflex = -117;
edieresis = -99;
etilde = -80;
four = -44;
gbreve = -113;
gcircumflex = -113;
gdotaccent = -133;
germandbls = -27;
icircumflex = -9;
idieresis = -4;
iogonek = -77;
itilde = 7;
jcircumflex = -19;
k = 49;
k.salt = 49;
kcommaaccent = 49;
lslash = 15;
ocircumflex = -126;
odieresis = -116;
otilde = -111;
rcaron = -47;
scaron = -68;
schwa = -115;
scircumflex = -87;
six = -20;
utilde = -59;
zcaron = -78;
};
Tbar = {
germandbls = -27;
k = 49;
k.salt = 49;
};
Tcaron = {
germandbls = -27;
k = 49;
k.salt = 49;
};
Thorn = {
M = -25;
V = -31;
X = -77;
backslash = -19;
braceright = -25;
bracketright = -25;
c.salt = -5;
one = -21;
parenright = -19;
q = -7;
seven = -29;
slash = -28;
u = 7;
};
U = {
at = -21;
f_f_h = -17;
germandbls = -31;
schwa = -23;
six = -15;
};
Uacute = {
f_f_h = -17;
germandbls = -31;
};
Ubreve = {
f_f_h = -17;
germandbls = -31;
};
Ucircumflex = {
f_f_h = -17;
germandbls = -31;
};
Udieresis = {
f_f_h = -17;
germandbls = -31;
};
Ugrave = {
f_f_h = -17;
germandbls = -31;
};
Uhungarumlaut = {
f_f_h = -17;
germandbls = -31;
};
Umacron = {
f_f_h = -17;
germandbls = -31;
};
Uogonek = {
f_f_h = -17;
germandbls = -31;
};
Uring = {
f_f_h = -17;
germandbls = -31;
};
Utilde = {
f_f_h = -17;
germandbls = -31;
};
V = {
a.salt = -96;
asterisk = 63;
at = -51;
backslash = 36;
braceright = 17;
bracketright = 19;
c.salt = -115;
eth = -108;
four = -35;
germandbls = -29;
hcircumflex = -3;
m = -67;
nine = 19;
one = 31;
p = -71;
parenright = 12;
q = -119;
question = 18;
registered = -49;
s.salt = -109;
schwa = -96;
seven = 29;
six = -23;
slash = -56;
space = -26;
trademark = 55;
two = 6;
v = -72;
x = -76;
};
W = {
at = -51;
four = -36;
germandbls = -29;
nine = 22;
one = 23;
schwa = -96;
seven = 21;
six = -24;
two = 5;
};
Wacute = {
germandbls = -29;
};
Wcircumflex = {
germandbls = -29;
};
Wdieresis = {
germandbls = -29;
};
Wgrave = {
germandbls = -29;
};
X = {
backslash = 7;
braceright = 40;
bracketright = 40;
c.salt = -32;
four = -26;
germandbls = 1;
hcircumflex = 1;
lslash = 27;
one = 31;
p = -8;
parenright = 35;
q = -17;
schwa = -25;
seven = 49;
slash = 36;
three = 16;
trademark = 9;
two = 34;
v = -94;
};
Y = {
aringacute = -115;
at = -55;
dotlessi = -100;
eth = -138;
f_f_h = -70;
four = -50;
germandbls = -31;
hcircumflex = 93;
iogonek = -100;
nine = 16;
one = 35;
schwa = -131;
seven = 36;
six = -28;
};
Yacute = {
eth = -138;
f_f_h = -70;
germandbls = -31;
};
Ycircumflex = {
eth = -138;
f_f_h = -70;
germandbls = -31;
};
Ydieresis = {
eth = -138;
f_f_h = -70;
germandbls = -31;
};
Ygrave = {
eth = -138;
germandbls = -31;
};
Ytilde = {
eth = -138;
germandbls = -31;
};
Z = {
germandbls = 1;
k = 17;
k.salt = 19;
kcommaaccent = 19;
lslash = 7;
};
Zacute = {
germandbls = 1;
k = 17;
k.salt = 19;
};
Zcaron = {
germandbls = 1;
k = 17;
k.salt = 19;
};
Zdotaccent = {
germandbls = 1;
k = 17;
k.salt = 19;
lslash = 7;
};
a = {
AE = 57;
J = 25;
V = -120;
W = -132;
Z = 5;
lslash = 28;
};
a.salt = {
apostrophe = -15;
backslash = -60;
lslash = 9;
question = -16;
slash = 5;
trademark = -12;
v = -25;
};
ampersand = {
B = 33;
D = 32;
Dcaron = 32;
Dcroat = 32;
E = 32;
Eacute = 32;
Ebreve = 32;
Ecaron = 32;
Ecircumflex = 32;
Edieresis = 32;
Edotaccent = 32;
Egrave = 32;
Emacron = 32;
Eogonek = 32;
Eth = 32;
Etilde = 32;
F = 32;
K.salt = 33;
L = 34;
Lacute = 34;
Lcaron = 33;
Lcommaaccent = 34;
Lslash = 36;
M = 19;
P = 32;
R = 31;
R.salt = 33;
Racute = 31;
Rcaron = 31;
Rcommaaccent = 31;
Thorn = 32;
V = -55;
X = 59;
f = 39;
k = 59;
k.salt = 59;
kcommaaccent = 59;
lslash = 32;
m = 21;
quoteright = -41;
v = -24;
x = 24;
};
aogonek = {
g = 34;
g.salt = 34;
j = 196;
lslash = 27;
parenright = 23;
thorn = 11;
};
apostrophe = {
a = -16;
c.salt = -22;
d = -37;
f = -11;
q = -19;
s = -15;
s.salt = -15;
};
asterisk = {
Lcaron = 14;
V = 13;
c.salt = -10;
hcircumflex = 26;
k = 9;
k.salt = 9;
kcommaaccent = 9;
};
at = {
M = -18;
T = -48;
U = -24;
V = -52;
W = -54;
Y = -61;
};
b = {
apostrophe = -62;
};
backslash = {
V = -59;
X = 20;
lslash = 1;
nine = -23;
quoteright = -56;
v = -26;
};
braceleft = {
Lcaron = 1;
V = 44;
X = 8;
braceleft = -12;
c.salt = -22;
four = -21;
germandbls = 8;
hcircumflex = 21;
lslash = 15;
one = 9;
p = -12;
parenleft = -17;
q = -19;
s.salt = -12;
seven = 8;
six = -21;
v = -23;
zero = -17;
};
braceright = {
braceright = -12;
};
bracketleft = {
Lcaron = 1;
V = 44;
X = 10;
c.salt = -23;
eight = -13;
four = -25;
germandbls = 8;
hcircumflex = 21;
lslash = 15;
one = 9;
parenleft = -18;
q = -20;
s.salt = -12;
seven = 9;
six = -23;
v = -22;
zero = -18;
};
c = {
M = -16;
V = -93;
W = -95;
};
c.salt = {
apostrophe = -11;
backslash = -49;
braceright = -15;
};
ccedilla = {
j = 80;
};
comma = {
j = 32;
jcircumflex = 32;
};
d = {
AE = 31;
V = -9;
W = -12;
lslash = 21;
};
dcaron = {
asterisk = 34;
backslash = 52;
braceright = 57;
bracketright = 59;
quotedbl = 25;
quotedblleft = 27;
quotedblright = 31;
quoteleft = 27;
quoteright = 31;
quotesingle = 25;
trademark = 48;
};
degree = {
four = -41;
six = -17;
};
e = {
apostrophe = -17;
};
eight = {
U = -12;
};
eng = {
backslash = -59;
question = -19;
trademark = -13;
v = -12;
w = -16;
};
eth = {
AE = -9;
M = -20;
U = -29;
V = -70;
W = -71;
X = -12;
Y = -76;
Z = -16;
backslash = -12;
braceright = -13;
bracketright = -12;
x = -12;
};
exclamdown = {
V = -27;
};
f = {
AE = 46;
F = 85;
M = 117;
R = 85;
S = 69;
Thorn = 85;
V = 126;
W = 163;
X = 140;
Z = 113;
ampersand = 23;
apostrophe = 27;
asterisk = 157;
backslash = 123;
bar = 78;
braceright = 96;
bracketright = 96;
exclam = 80;
lslash = 10;
parenright = 88;
question = 118;
space = 44;
trademark = 144;
};
f_f = {
lslash = 10;
napostrophe = 191;
};
f_f_i = {
napostrophe = 8;
};
f_f_j = {
b = 15;
napostrophe = 38;
thorn = 16;
};
f_i = {
napostrophe = 8;
};
f_j = {
b = 16;
napostrophe = 38;
thorn = 16;
};
five = {
AE = -17;
V = 17;
W = 20;
four = 13;
};
four = {
A = 36;
AE = 25;
U = -13;
four = 21;
fraction = 10;
};
fraction = {
four = -22;
nine = 8;
one = -21;
seven = -25;
six = -13;
two = 6;
};
g = {
AE = 34;
Eth = -8;
J = 7;
S = 21;
V = -77;
W = -79;
comma = 6;
icircumflex = 28;
itilde = 46;
jcircumflex = 21;
lslash = 18;
quotedblbase = 17;
quotesinglbase = 17;
};
g.salt = {
eng = 16;
f = 22;
f_b = 28;
f_f = 35;
f_f_b = 35;
f_f_h = 35;
f_f_i = 35;
f_f_j = 35;
f_f_k = 35;
f_f_l = 35;
f_h = 28;
f_i = 28;
f_j = 29;
f_k = 28;
f_l = 28;
f_t = 28;
imacron = 7;
lslash = 17;
n = 16;
nacute = 16;
ncaron = 16;
ncommaaccent = 16;
ndotaccent = 16;
ntilde = 16;
p = 16;
quotedblbase = 15;
quotesinglbase = 15;
r = 18;
racute = 18;
rcaron = 18;
rcommaaccent = 18;
t = 27;
t_t = 27;
tbar = 21;
tcaron = 27;
u = 43;
uacute = 43;
ubreve = 43;
ucircumflex = 43;
udieresis = 43;
ugrave = 43;
uhungarumlaut = 43;
umacron = 43;
uni0163 = 27;
uni021B = 27;
uogonek = 43;
uring = 43;
utilde = 43;
v = 38;
w = 41;
wacute = 41;
wcircumflex = 41;
wdieresis = 41;
wgrave = 41;
};
gbreve = {
comma = 6;
quotedblbase = 17;
quotesinglbase = 17;
};
gcircumflex = {
comma = 6;
quotedblbase = 17;
quotesinglbase = 17;
};
gcommaaccent = {
comma = 6;
quotedblbase = 17;
quotesinglbase = 17;
};
gdotaccent = {
comma = 6;
quotedblbase = 17;
quotesinglbase = 17;
};
germandbls = {
M = -10;
U = -48;
V = -87;
W = -88;
Y = -92;
backslash = -30;
braceright = -16;
p = -30;
question = -20;
space = -18;
v = -59;
x = -24;
};
h = {
M = -12;
V = -152;
W = -164;
Z = -7;
apostrophe = -53;
};
hyphen = {
nine = -12;
one = -12;
seven = -13;
};
i = {
AE = 56;
V = -100;
W = -104;
lslash = 19;
};
idieresis = {
question = 14;
};
imacron = {
question = 16;
};
iogonek = {
j = 111;
};
itilde = {
question = 22;
};
jcircumflex = {
question = 13;
};
k = {
AE = 28;
V = -78;
W = -87;
apostrophe = -46;
asterisk = -25;
backslash = -31;
c.salt = -21;
q = -20;
schwa = -11;
};
k.salt = {
apostrophe = -61;
schwa = -18;
};
l = {
AE = 53;
V = -16;
lslash = 16;
periodcentered = -50;
};
lcaron = {
asterisk = 32;
b = 145;
backslash = 49;
braceright = 54;
bracketright = 57;
h = 94;
k = 105;
k.salt = 105;
l = 95;
l_l = 95;
parenright = 20;
quotedbl = 22;
quotedblleft = 25;
quotedblright = 29;
quoteleft = 25;
quoteright = 29;
quotesingle = 22;
thorn = 146;
trademark = 46;
};
lslash = {
f = 23;
f_b = 20;
f_f = 15;
f_f_b = 15;
f_f_h = 15;
f_f_i = 15;
f_f_j = 15;
f_f_k = 15;
f_f_l = 15;
f_h = 20;
f_i = 20;
f_j = 21;
f_k = 20;
f_l = 20;
f_t = 20;
germandbls = 40;
guillemotright = 13;
guilsinglright = 13;
h = 40;
i = 8;
ij = 8;
j = 6;
k = 40;
k.salt = 40;
l = 38;
l_l = 38;
lslash = 17;
n = 14;
p = 11;
question = 22;
r = 14;
t = 16;
t_t = 16;
t_z = 7;
u = 26;
v = 15;
w = 24;
x = 13;
};
m = {
AE = 30;
V = -143;
W = -154;
backslash = -60;
braceright = 10;
bracketright = 11;
lslash = 20;
parenright = 16;
question = -15;
slash = 20;
v = -32;
};
minus = {
seven = -17;
};
n = {
V = -145;
W = -157;
apostrophe = -11;
};
nine = {
A = -33;
AE = -56;
J = -24;
U = -13;
braceright = -16;
bracketright = -17;
fraction = -30;
one = -12;
seven = -15;
slash = -36;
};
numbersign = {
one = -20;
seven = -26;
};
o = {
f_f_h = -6;
};
oacute = {
f_f_h = -6;
};
obreve = {
f_f_h = -6;
};
ocircumflex = {
f_f_h = -6;
};
odieresis = {
f_f_h = -6;
};
ograve = {
f_f_h = -6;
};
ohungarumlaut = {
f_f_h = -6;
};
omacron = {
f_f_h = -6;
};
one = {
A = 55;
AE = 45;
U = -15;
X = 17;
cent = -15;
fraction = 18;
};
oslash = {
f_f_h = -6;
};
otilde = {
f_f_h = -6;
};
p = {
f_f = -6;
f_f_b = -6;
f_f_h = -6;
f_f_i = -6;
f_f_j = -6;
f_f_k = -6;
f_f_l = -6;
};
parenleft = {
V = 42;
X = 7;
c.salt = -16;
four = -15;
germandbls = 1;
k = 37;
k.salt = 38;
kcommaaccent = 38;
lslash = 13;
q = -15;
six = -12;
v = -15;
};
parenright = {
braceright = -16;
bracketright = -17;
};
periodcentered = {
L = -11;
l = -50;
one = -12;
seven = -17;
};
plus = {
seven = -18;
};
q = {
M = -12;
V = -76;
W = -84;
Z = -12;
backslash = -32;
j = 105;
jcircumflex = 99;
};
questiondown = {
V = -49;
X = 13;
v = -14;
};
quotedbl = {
germandbls = 1;
hcircumflex = 29;
k = 23;
k.salt = 23;
kcommaaccent = 23;
lslash = 1;
};
quotedblleft = {
hcircumflex = 35;
k = 20;
k.salt = 22;
kcommaaccent = 22;
};
quotedblright = {
germandbls = 1;
hcircumflex = 32;
k = 33;
k.salt = 33;
kcommaaccent = 33;
lslash = 1;
};
quoteleft = {
hcircumflex = 35;
k = 20;
k.salt = 22;
kcommaaccent = 22;
};
quoteright = {
at = -16;
germandbls = 1;
hcircumflex = 32;
k = 33;
k.salt = 33;
kcommaaccent = 33;
lslash = 1;
registered = -15;
slash = -58;
space = -30;
};
quotesingle = {
germandbls = 1;
hcircumflex = 30;
k = 23;
k.salt = 23;
kcommaaccent = 23;
lslash = 1;
};
r = {
J = -6;
M = -24;
S = -9;
V = -94;
W = -101;
X = -15;
Z = -23;
};
registered = {
M = -17;
V = -51;
};
s = {
M = -16;
V = -95;
W = -101;
};
s.salt = {
backslash = -43;
braceright = -22;
bracketright = -17;
};
semicolon = {
j = 26;
jcircumflex = 26;
};
seven = {
A = -57;
AE = -84;
J = -48;
M = 32;
N = 33;
T = 34;
U = 35;
V = 82;
W = 87;
X = 44;
Y = 80;
backslash = 27;
braceright = 26;
bracketright = 27;
cent = -26;
degree = 5;
four = -45;
fraction = -70;
hyphen = -39;
minus = -15;
numbersign = -41;
one = 29;
periodcentered = -21;
plus = -12;
seven = 22;
six = -31;
slash = -72;
};
six = {
A = 6;
J = 14;
T = -28;
U = -14;
backslash = -21;
bracketright = -13;
four = 23;
nine = -19;
};
slash = {
V = 48;
X = 11;
a.salt = -48;
c.salt = -60;
f = -14;
four = -46;
germandbls = 1;
hcircumflex = 29;
k = 46;
k.salt = 46;
kcommaaccent = 46;
lslash = 15;
m = -33;
p = -24;
q = -61;
s.salt = -56;
six = -33;
slash = -200;
v = -24;
x = -27;
};
space = {
Aringacute = -42;
V = -32;
lslash = -22;
quoteright = -30;
v = -22;
};
t = {
M = -8;
V = -89;
W = -91;
apostrophe = -35;
};
t_t = {
c.salt = -7;
q = -5;
};
tcaron = {
j = 6;
n = 9;
ncaron = 9;
p = 15;
r = 14;
t = 13;
t_t = 13;
tcaron = 13;
u = 13;
uacute = 13;
uring = 13;
v = 13;
w = 9;
};
three = {
AE = -26;
};
trademark = {
Eng = 17;
Lcaron = 26;
M = 33;
N = 18;
Nacute = 18;
Ncaron = 18;
Ncommaaccent = 18;
Ndotaccent = 18;
Ntilde = 18;
V = 68;
X = 40;
c.salt = -12;
germandbls = 1;
hcircumflex = 47;
icircumflex = 13;
itilde = 28;
jcircumflex = 7;
k.salt = 62;
kcommaaccent = 62;
lslash = 37;
p = 9;
v = 16;
};
two = {
A = 14;
AE = 7;
J = 11;
U = -13;
};
u = {
AE = 41;
V = -142;
W = -152;
lslash = 22;
};
uni015E = {
germandbls = 1;
k = 27;
k.salt = 27;
};
uni0162 = {
abreve = -101;
acircumflex = -86;
germandbls = -27;
icircumflex = -9;
k = 49;
k.salt = 49;
};
uni0218 = {
germandbls = 1;
k = 27;
k.salt = 27;
};
uni021A = {
abreve = -101;
acircumflex = -86;
germandbls = -27;
icircumflex = -9;
k = 49;
k.salt = 49;
};
uogonek = {
j = 129;
};
v = {
AE = -74;
J = -43;
M = -25;
S = -9;
V = -82;
W = -84;
X = -82;
Z = -36;
backslash = -33;
braceright = -32;
bracketright = -25;
parenright = -17;
q = -9;
slash = -24;
space = -20;
};
w = {
AE = -69;
J = -33;
M = -26;
S = -10;
V = -86;
W = -88;
X = -85;
Z = -36;
};
x = {
V = -91;
W = -100;
backslash = -42;
braceright = 7;
bracketright = 5;
c.salt = -42;
parenright = 5;
q = -41;
schwa = -9;
slash = 5;
v = -15;
};
y = {
AE = -67;
J = -49;
M = -28;
S = -15;
V = -86;
W = -94;
X = -75;
Z = -44;
};
z = {
M = -11;
V = -105;
W = -113;
};
zero = {
AE = -22;
M = -12;
U = -14;
braceright = -17;
bracketright = -18;
slash = -12;
};
};
"62092E79-60F6-4D0B-8A38-B9DDC6B60A9E" = {
"@MMK_L_AE" = {
"@MMK_R_b" = 11;
"@MMK_R_dotlessj" = -5;
"@MMK_R_four" = 11;
"@MMK_R_u" = -6;
"@MMK_R_v" = -22;
"@MMK_R_w" = -26;
"@MMK_R_y" = -12;
};
"@MMK_L_Aacute" = {
"@MMK_R_AE" = 11;
"@MMK_R_C" = -19;
"@MMK_R_S" = 10;
"@MMK_R_T" = -41;
"@MMK_R_U" = -34;
"@MMK_R_V" = -75;
"@MMK_R_W" = -89;
"@MMK_R_Y" = -53;
"@MMK_R_asterisk" = -19;
"@MMK_R_backslash" = -52;
"@MMK_R_braceright" = 79;
"@MMK_R_bracketright" = 77;
"@MMK_R_c" = -5;
"@MMK_R_c.salt" = -5;
"@MMK_R_colon" = 13;
"@MMK_R_comma" = 23;
"@MMK_R_d" = -5;
"@MMK_R_dotlessj" = 114;
"@MMK_R_exclam" = 19;
"@MMK_R_g" = 34;
"@MMK_R_parenright" = 52;
"@MMK_R_quotedbl" = -23;
"@MMK_R_quotedblleft" = -25;
"@MMK_R_quotedblright" = -23;
"@MMK_R_s" = 7;
"@MMK_R_slash" = 46;
"@MMK_R_space" = -29;
"@MMK_R_t" = -17;
"@MMK_R_trademark" = -20;
"@MMK_R_u" = -32;
"@MMK_R_v" = -51;
"@MMK_R_w" = -60;
};
"@MMK_L_B" = {
"@MMK_R_AE" = -19;
"@MMK_R_Aacute" = -8;
"@MMK_R_B" = -13;
"@MMK_R_U" = -12;
"@MMK_R_W" = -19;
"@MMK_R_Y" = -19;
"@MMK_R_dotlessj" = -10;
"@MMK_R_g" = -7;
"@MMK_R_u" = -8;
"@MMK_R_w" = -28;
"@MMK_R_y" = -16;
};
"@MMK_L_C" = {
"@MMK_R_AE" = -16;
"@MMK_R_Aacute" = -6;
"@MMK_R_b" = 41;
"@MMK_R_g" = -14;
"@MMK_R_h" = 25;
"@MMK_R_l" = 7;
"@MMK_R_v" = -9;
"@MMK_R_w" = -9;
"@MMK_R_y" = -21;
"@MMK_R_z" = -7;
};
"@MMK_L_D" = {
"@MMK_R_AE" = -54;
"@MMK_R_Aacute" = -24;
"@MMK_R_B" = -15;
"@MMK_R_M" = -11;
"@MMK_R_U" = -14;
"@MMK_R_V" = -23;
"@MMK_R_W" = -18;
"@MMK_R_X" = -23;
"@MMK_R_Y" = -26;
"@MMK_R_Z" = -6;
"@MMK_R_a" = -10;
"@MMK_R_a.salt" = -5;
"@MMK_R_backslash" = -14;
"@MMK_R_braceright" = -21;
"@MMK_R_bracketright" = -22;
"@MMK_R_c" = -6;
"@MMK_R_c.salt" = -6;
"@MMK_R_comma" = -21;
"@MMK_R_d" = -6;
"@MMK_R_g" = -16;
"@MMK_R_germandbls" = -6;
"@MMK_R_l" = -11;
"@MMK_R_one" = -18;
"@MMK_R_parenright" = -17;
"@MMK_R_q" = -7;
"@MMK_R_s" = -8;
"@MMK_R_s.salt" = -5;
"@MMK_R_seven" = -19;
"@MMK_R_slash" = -20;
"@MMK_R_z" = -5;
};
"@MMK_L_Eng" = {
"@MMK_R_AE" = -23;
"@MMK_R_Aacute" = -14;
"@MMK_R_C" = -13;
"@MMK_R_J" = -23;
"@MMK_R_S" = -14;
"@MMK_R_a" = -34;
"@MMK_R_a.salt" = -33;
"@MMK_R_ampersand" = -19;
"@MMK_R_b" = 78;
"@MMK_R_braceright" = 14;
"@MMK_R_bracketright" = 16;
"@MMK_R_c" = -31;
"@MMK_R_c.salt" = -30;
"@MMK_R_colon" = -10;
"@MMK_R_comma" = -14;
"@MMK_R_d" = -27;
"@MMK_R_dotlessi" = -29;
"@MMK_R_dotlessj" = -28;
"@MMK_R_emdash" = -13;
"@MMK_R_eng" = -25;
"@MMK_R_f" = -26;
"@MMK_R_f_f" = -21;
"@MMK_R_g" = -43;
"@MMK_R_germandbls" = -22;
"@MMK_R_h" = 62;
"@MMK_R_l" = 44;
"@MMK_R_m" = -29;
"@MMK_R_p" = -24;
"@MMK_R_q" = -28;
"@MMK_R_r" = -26;
"@MMK_R_registered" = -27;
"@MMK_R_s" = -24;
"@MMK_R_s.salt" = -23;
"@MMK_R_slash" = -21;
"@MMK_R_t" = -25;
"@MMK_R_u" = -26;
"@MMK_R_v" = -44;
"@MMK_R_w" = -49;
"@MMK_R_x" = -17;
"@MMK_R_y" = -29;
"@MMK_R_z" = -34;
};
"@MMK_L_F" = {
"@MMK_R_AE" = -67;
"@MMK_R_Aacute" = -59;
"@MMK_R_J" = -24;
"@MMK_R_W" = 30;
"@MMK_R_Y" = 30;
"@MMK_R_a" = -54;
"@MMK_R_b" = 81;
"@MMK_R_c" = -46;
"@MMK_R_comma" = -32;
"@MMK_R_d" = -45;
"@MMK_R_dotlessi" = -16;
"@MMK_R_dotlessj" = -8;
"@MMK_R_eng" = -22;
"@MMK_R_f" = -13;
"@MMK_R_g" = -66;
"@MMK_R_h" = 66;
"@MMK_R_l" = 48;
"@MMK_R_r" = -20;
"@MMK_R_s" = -50;
"@MMK_R_t" = -5;
"@MMK_R_u" = -8;
"@MMK_R_w" = -26;
"@MMK_R_y" = -24;
"@MMK_R_z" = -39;
};
"@MMK_L_G" = {
"@MMK_R_b" = 30;
"@MMK_R_g" = -7;
"@MMK_R_h" = 14;
"@MMK_R_v" = -12;
"@MMK_R_w" = -11;
"@MMK_R_y" = -16;
};
"@MMK_L_H" = {
"@MMK_R_C" = -16;
"@MMK_R_J" = -5;
"@MMK_R_a" = -13;
"@MMK_R_a.salt" = -14;
"@MMK_R_ampersand" = -14;
"@MMK_R_b" = 62;
"@MMK_R_braceright" = 12;
"@MMK_R_bracketright" = 10;
"@MMK_R_c" = -29;
"@MMK_R_c.salt" = -29;
"@MMK_R_d" = -24;
"@MMK_R_dotlessj" = 77;
"@MMK_R_emdash" = -14;
"@MMK_R_eng" = -11;
"@MMK_R_f_f" = 24;
"@MMK_R_guillemotleft" = -10;
"@MMK_R_guillemotright" = -10;
"@MMK_R_h" = 46;
"@MMK_R_l" = 29;
"@MMK_R_p" = -12;
"@MMK_R_q" = -24;
"@MMK_R_registered" = -20;
"@MMK_R_s.salt" = -9;
"@MMK_R_t" = -22;
"@MMK_R_u" = -26;
"@MMK_R_v" = -49;
"@MMK_R_w" = -55;
"@MMK_R_y" = -29;
};
"@MMK_L_I" = {
"@MMK_R_AE" = 31;
"@MMK_R_C" = -12;
"@MMK_R_b" = 53;
"@MMK_R_c" = -22;
"@MMK_R_c.salt" = -23;
"@MMK_R_d" = -20;
"@MMK_R_dotlessj" = -15;
"@MMK_R_emdash" = -12;
"@MMK_R_g" = -15;
"@MMK_R_h" = 36;
"@MMK_R_l" = 19;
"@MMK_R_p" = -12;
"@MMK_R_q" = -20;
"@MMK_R_registered" = -12;
"@MMK_R_t" = -12;
"@MMK_R_u" = -13;
"@MMK_R_v" = -33;
"@MMK_R_w" = -39;
"@MMK_R_y" = -28;
};
"@MMK_L_IJ" = {
"@MMK_R_AE" = -29;
"@MMK_R_Aacute" = -19;
"@MMK_R_C" = -8;
"@MMK_R_J" = -14;
"@MMK_R_S" = -10;
"@MMK_R_a" = -26;
"@MMK_R_a.salt" = -24;
"@MMK_R_ampersand" = -13;
"@MMK_R_at" = -16;
"@MMK_R_b" = 64;
"@MMK_R_braceright" = 5;
"@MMK_R_c" = -24;
"@MMK_R_c.salt" = -22;
"@MMK_R_comma" = -17;
"@MMK_R_d" = -21;
"@MMK_R_dotlessi" = -8;
"@MMK_R_dotlessj" = -8;
"@MMK_R_eng" = -6;
"@MMK_R_f" = -12;
"@MMK_R_g" = -26;
"@MMK_R_germandbls" = -11;
"@MMK_R_h" = 47;
"@MMK_R_l" = 30;
"@MMK_R_m" = -8;
"@MMK_R_p" = -6;
"@MMK_R_q" = -22;
"@MMK_R_r" = -6;
"@MMK_R_registered" = -16;
"@MMK_R_s" = -17;
"@MMK_R_s.salt" = -16;
"@MMK_R_six" = -13;
"@MMK_R_slash" = -23;
"@MMK_R_t" = -6;
"@MMK_R_u" = -6;
"@MMK_R_v" = -20;
"@MMK_R_w" = -23;
"@MMK_R_y" = -20;
"@MMK_R_z" = -25;
};
"@MMK_L_K" = {
"@MMK_R_AE" = 35;
"@MMK_R_C" = -54;
"@MMK_R_T" = 6;
"@MMK_R_a" = -5;
"@MMK_R_a.salt" = -6;
"@MMK_R_asterisk" = 36;
"@MMK_R_b" = 97;
"@MMK_R_backslash" = 22;
"@MMK_R_braceright" = 24;
"@MMK_R_bracketright" = 28;
"@MMK_R_c" = -41;
"@MMK_R_c.salt" = -43;
"@MMK_R_d" = -37;
"@MMK_R_dotlessj" = -40;
"@MMK_R_emdash" = -43;
"@MMK_R_g" = -12;
"@MMK_R_guillemotleft" = -51;
"@MMK_R_guillemotright" = -38;
"@MMK_R_h" = 73;
"@MMK_R_l" = 58;
"@MMK_R_p" = -26;
"@MMK_R_parenright" = 10;
"@MMK_R_q" = -36;
"@MMK_R_quotedblleft" = 10;
"@MMK_R_slash" = 12;
"@MMK_R_t" = -52;
"@MMK_R_trademark" = 27;
"@MMK_R_u" = -80;
"@MMK_R_v" = -145;
"@MMK_R_w" = -158;
"@MMK_R_y" = -82;
};
"@MMK_L_K.salt" = {
"@MMK_R_AE" = 13;
"@MMK_R_C" = -23;
"@MMK_R_a" = -5;
"@MMK_R_c" = -24;
"@MMK_R_d" = -23;
"@MMK_R_dotlessj" = 26;
"@MMK_R_emdash" = -25;
"@MMK_R_g" = -19;
"@MMK_R_guillemotleft" = -25;
"@MMK_R_guillemotright" = -22;
"@MMK_R_h" = 68;
"@MMK_R_l" = 46;
"@MMK_R_s" = -6;
"@MMK_R_t" = -38;
"@MMK_R_u" = -54;
"@MMK_R_w" = -81;
"@MMK_R_y" = -56;
};
"@MMK_L_L" = {
"@MMK_R_AE" = 10;
"@MMK_R_Aacute" = 7;
"@MMK_R_T" = -57;
"@MMK_R_U" = -19;
"@MMK_R_V" = -47;
"@MMK_R_W" = -49;
"@MMK_R_Y" = -55;
"@MMK_R_asterisk" = -41;
"@MMK_R_backslash" = -52;
"@MMK_R_dotlessj" = -21;
"@MMK_R_p" = -12;
"@MMK_R_question" = -25;
"@MMK_R_quotedbl" = -34;
"@MMK_R_quotedblleft" = -32;
"@MMK_R_quotedblright" = -34;
"@MMK_R_space" = -22;
"@MMK_R_t" = -11;
"@MMK_R_trademark" = -33;
"@MMK_R_u" = -12;
"@MMK_R_v" = -33;
"@MMK_R_w" = -35;
"@MMK_R_y" = -31;
};
"@MMK_L_M" = {
"@MMK_R_AE" = 9;
"@MMK_R_C" = -21;
"@MMK_R_J" = -9;
"@MMK_R_a" = -23;
"@MMK_R_b" = 78;
"@MMK_R_c" = -46;
"@MMK_R_d" = -43;
"@MMK_R_dotlessi" = -6;
"@MMK_R_dotlessj" = 39;
"@MMK_R_emdash" = -21;
"@MMK_R_eng" = -12;
"@MMK_R_f_f" = 11;
"@MMK_R_g" = -28;
"@MMK_R_guillemotleft" = -15;
"@MMK_R_guillemotright" = -15;
"@MMK_R_h" = 45;
"@MMK_R_l" = 39;
"@MMK_R_r" = -11;
"@MMK_R_s" = -11;
"@MMK_R_t" = -44;
"@MMK_R_u" = -50;
"@MMK_R_w" = -76;
"@MMK_R_y" = -43;
"@MMK_R_z" = -8;
};
"@MMK_L_O" = {
"@MMK_R_AE" = -24;
"@MMK_R_Aacute" = -14;
"@MMK_R_B" = -9;
"@MMK_R_M" = -6;
"@MMK_R_U" = -10;
"@MMK_R_V" = -23;
"@MMK_R_W" = -19;
"@MMK_R_X" = -16;
"@MMK_R_Y" = -18;
"@MMK_R_a" = -7;
"@MMK_R_apostrophe" = -16;
"@MMK_R_braceright" = -18;
"@MMK_R_bracketright" = -19;
"@MMK_R_comma" = -15;
"@MMK_R_g" = -11;
"@MMK_R_one" = -13;
"@MMK_R_parenright" = -13;
"@MMK_R_q" = -5;
"@MMK_R_s" = -6;
"@MMK_R_seven" = -13;
"@MMK_R_slash" = -14;
};
"@MMK_L_P" = {
"@MMK_R_AE" = -74;
"@MMK_R_Aacute" = -69;
"@MMK_R_B" = -5;
"@MMK_R_J" = -70;
"@MMK_R_a" = -45;
"@MMK_R_b" = 20;
"@MMK_R_c" = -54;
"@MMK_R_comma" = -46;
"@MMK_R_d" = -51;
"@MMK_R_emdash" = -29;
"@MMK_R_g" = -68;
"@MMK_R_h" = 14;
"@MMK_R_l" = 8;
"@MMK_R_s" = -47;
"@MMK_R_y" = -20;
"@MMK_R_z" = -40;
};
"@MMK_L_R" = {
"@MMK_R_AE" = 32;
"@MMK_R_C" = -10;
"@MMK_R_U" = -17;
"@MMK_R_V" = -30;
"@MMK_R_W" = -32;
"@MMK_R_Y" = -33;
"@MMK_R_Z" = 5;
"@MMK_R_backslash" = -12;
"@MMK_R_braceright" = 41;
"@MMK_R_bracketright" = 40;
"@MMK_R_c" = -22;
"@MMK_R_c.salt" = -22;
"@MMK_R_comma" = 5;
"@MMK_R_d" = -20;
"@MMK_R_dotlessj" = 60;
"@MMK_R_emdash" = -46;
"@MMK_R_f_f" = 22;
"@MMK_R_g" = 13;
"@MMK_R_parenright" = 28;
"@MMK_R_q" = -21;
"@MMK_R_slash" = 30;
"@MMK_R_space" = -27;
"@MMK_R_t" = -15;
"@MMK_R_u" = -18;
"@MMK_R_v" = -42;
"@MMK_R_w" = -48;
"@MMK_R_y" = -37;
};
"@MMK_L_R.salt" = {
"@MMK_R_AE" = 35;
"@MMK_R_C" = -16;
"@MMK_R_T" = -5;
"@MMK_R_U" = -23;
"@MMK_R_W" = -20;
"@MMK_R_Y" = -18;
"@MMK_R_c" = -24;
"@MMK_R_d" = -23;
"@MMK_R_dotlessj" = 89;
"@MMK_R_emdash" = -20;
"@MMK_R_f_f" = 21;
"@MMK_R_guillemotleft" = -11;
"@MMK_R_t" = -13;
"@MMK_R_u" = -18;
"@MMK_R_w" = -48;
"@MMK_R_y" = -33;
};
"@MMK_L_S" = {
"@MMK_R_AE" = -8;
"@MMK_R_a" = -5;
"@MMK_R_b" = 55;
"@MMK_R_c" = -10;
"@MMK_R_c.salt" = -10;
"@MMK_R_d" = -9;
"@MMK_R_dotlessj" = -7;
"@MMK_R_g" = -27;
"@MMK_R_h" = 38;
"@MMK_R_l" = 22;
"@MMK_R_m" = -7;
"@MMK_R_p" = -6;
"@MMK_R_q" = -9;
"@MMK_R_s" = -9;
"@MMK_R_s.salt" = -9;
"@MMK_R_v" = -18;
"@MMK_R_w" = -19;
"@MMK_R_y" = -29;
"@MMK_R_z" = -15;
};
"@MMK_L_T" = {
"@MMK_R_AE" = -74;
"@MMK_R_Aacute" = -47;
"@MMK_R_J" = -50;
"@MMK_R_V" = 16;
"@MMK_R_W" = 24;
"@MMK_R_Y" = 22;
"@MMK_R_a" = -104;
"@MMK_R_a.salt" = -79;
"@MMK_R_ampersand" = -21;
"@MMK_R_asterisk" = 21;
"@MMK_R_b" = 75;
"@MMK_R_c" = -124;
"@MMK_R_c.salt" = -123;
"@MMK_R_colon" = -23;
"@MMK_R_comma" = -21;
"@MMK_R_d" = -95;
"@MMK_R_dotlessi" = -31;
"@MMK_R_dotlessj" = -37;
"@MMK_R_emdash" = -50;
"@MMK_R_eng" = -77;
"@MMK_R_f" = -26;
"@MMK_R_f_f" = -21;
"@MMK_R_g" = -122;
"@MMK_R_germandbls" = -16;
"@MMK_R_guillemotleft" = -14;
"@MMK_R_h" = 59;
"@MMK_R_l" = 41;
"@MMK_R_m" = -82;
"@MMK_R_p" = -75;
"@MMK_R_q" = -120;
"@MMK_R_r" = -72;
"@MMK_R_registered" = -45;
"@MMK_R_s" = -98;
"@MMK_R_s.salt" = -101;
"@MMK_R_slash" = -31;
"@MMK_R_space" = -27;
"@MMK_R_t" = -28;
"@MMK_R_u" = -76;
"@MMK_R_v" = -93;
"@MMK_R_w" = -94;
"@MMK_R_x" = -74;
"@MMK_R_y" = -85;
"@MMK_R_z" = -94;
};
"@MMK_L_Thorn" = {
"@MMK_R_AE" = -78;
"@MMK_R_Aacute" = -38;
"@MMK_R_B" = -22;
"@MMK_R_J" = -14;
"@MMK_R_U" = -13;
"@MMK_R_W" = -30;
"@MMK_R_Y" = -56;
"@MMK_R_Z" = -10;
"@MMK_R_a" = -6;
"@MMK_R_c" = -5;
"@MMK_R_comma" = -31;
"@MMK_R_g" = -10;
"@MMK_R_l" = -6;
"@MMK_R_quotedbl" = -14;
"@MMK_R_quotedblleft" = -30;
"@MMK_R_quotedblright" = -14;
"@MMK_R_t" = 6;
};
"@MMK_L_U" = {
"@MMK_R_AE" = -49;
"@MMK_R_Aacute" = -33;
"@MMK_R_C" = -10;
"@MMK_R_J" = -23;
"@MMK_R_S" = -7;
"@MMK_R_a" = -38;
"@MMK_R_a.salt" = -36;
"@MMK_R_ampersand" = -15;
"@MMK_R_asterisk" = 39;
"@MMK_R_b" = 5;
"@MMK_R_c" = -35;
"@MMK_R_c.salt" = -34;
"@MMK_R_comma" = -23;
"@MMK_R_d" = -32;
"@MMK_R_dotlessi" = -22;
"@MMK_R_dotlessj" = -15;
"@MMK_R_emdash" = -10;
"@MMK_R_eng" = -15;
"@MMK_R_f" = -20;
"@MMK_R_g" = -39;
"@MMK_R_germandbls" = -25;
"@MMK_R_h" = -12;
"@MMK_R_l" = -13;
"@MMK_R_m" = -22;
"@MMK_R_p" = -12;
"@MMK_R_q" = -34;
"@MMK_R_r" = -17;
"@MMK_R_registered" = -23;
"@MMK_R_s" = -29;
"@MMK_R_s.salt" = -27;
"@MMK_R_slash" = -31;
"@MMK_R_t" = -12;
"@MMK_R_trademark" = 9;
"@MMK_R_u" = -13;
"@MMK_R_v" = -27;
"@MMK_R_w" = -30;
"@MMK_R_x" = -10;
"@MMK_R_y" = -29;
"@MMK_R_z" = -37;
};
"@MMK_L_V" = {
"@MMK_R_AE" = -95;
"@MMK_R_Aacute" = -49;
"@MMK_R_J" = -56;
"@MMK_R_T" = 51;
"@MMK_R_Z" = 13;
"@MMK_R_a" = -109;
"@MMK_R_c" = -108;
"@MMK_R_colon" = -19;
"@MMK_R_comma" = -43;
"@MMK_R_d" = -63;
"@MMK_R_dotlessi" = -58;
"@MMK_R_dotlessj" = -66;
"@MMK_R_emdash" = -24;
"@MMK_R_eng" = -57;
"@MMK_R_f" = -18;
"@MMK_R_f_f" = -17;
"@MMK_R_g" = -128;
"@MMK_R_quotedbl" = 48;
"@MMK_R_quotedblleft" = 53;
"@MMK_R_quotedblright" = 48;
"@MMK_R_r" = -54;
"@MMK_R_s" = -109;
"@MMK_R_t" = -55;
"@MMK_R_u" = -60;
"@MMK_R_w" = -76;
"@MMK_R_y" = -68;
"@MMK_R_z" = -97;
};
"@MMK_L_W" = {
"@MMK_R_AE" = -94;
"@MMK_R_Aacute" = -53;
"@MMK_R_J" = -59;
"@MMK_R_T" = 41;
"@MMK_R_a" = -112;
"@MMK_R_a.salt" = -95;
"@MMK_R_asterisk" = 75;
"@MMK_R_b" = 9;
"@MMK_R_backslash" = 36;
"@MMK_R_braceright" = 22;
"@MMK_R_bracketright" = 26;
"@MMK_R_c" = -112;
"@MMK_R_c.salt" = -111;
"@MMK_R_colon" = -21;
"@MMK_R_comma" = -43;
"@MMK_R_d" = -83;
"@MMK_R_dotlessi" = -62;
"@MMK_R_dotlessj" = -69;
"@MMK_R_emdash" = -25;
"@MMK_R_eng" = -61;
"@MMK_R_f" = -20;
"@MMK_R_f_f" = -18;
"@MMK_R_g" = -131;
"@MMK_R_germandbls" = -10;
"@MMK_R_m" = -70;
"@MMK_R_p" = -61;
"@MMK_R_parenright" = 5;
"@MMK_R_q" = -115;
"@MMK_R_question" = 26;
"@MMK_R_quotedbl" = 38;
"@MMK_R_quotedblleft" = 43;
"@MMK_R_quotedblright" = 38;
"@MMK_R_r" = -59;
"@MMK_R_registered" = -48;
"@MMK_R_s" = -111;
"@MMK_R_s.salt" = -106;
"@MMK_R_slash" = -52;
"@MMK_R_space" = -27;
"@MMK_R_t" = -58;
"@MMK_R_trademark" = 64;
"@MMK_R_u" = -63;
"@MMK_R_v" = -77;
"@MMK_R_w" = -79;
"@MMK_R_x" = -59;
"@MMK_R_y" = -68;
"@MMK_R_z" = -100;
};
"@MMK_L_X" = {
"@MMK_R_AE" = 43;
"@MMK_R_C" = -32;
"@MMK_R_Z" = 10;
"@MMK_R_b" = 80;
"@MMK_R_c" = -16;
"@MMK_R_comma" = 11;
"@MMK_R_d" = -12;
"@MMK_R_dotlessj" = -9;
"@MMK_R_emdash" = -25;
"@MMK_R_f_f" = 24;
"@MMK_R_g" = 15;
"@MMK_R_guillemotleft" = -26;
"@MMK_R_guillemotright" = -18;
"@MMK_R_h" = 63;
"@MMK_R_l" = 47;
"@MMK_R_t" = -29;
"@MMK_R_u" = -56;
"@MMK_R_w" = -115;
"@MMK_R_y" = -37;
"@MMK_R_z" = 8;
};
"@MMK_L_Y" = {
"@MMK_R_AE" = -81;
"@MMK_R_Aacute" = -55;
"@MMK_R_C" = -7;
"@MMK_R_J" = -52;
"@MMK_R_T" = 42;
"@MMK_R_a" = -127;
"@MMK_R_a.salt" = -110;
"@MMK_R_asterisk" = 64;
"@MMK_R_b" = 113;
"@MMK_R_backslash" = 42;
"@MMK_R_braceright" = 33;
"@MMK_R_bracketright" = 35;
"@MMK_R_c" = -147;
"@MMK_R_c.salt" = -148;
"@MMK_R_colon" = -16;
"@MMK_R_comma" = -14;
"@MMK_R_d" = -72;
"@MMK_R_dotlessi" = -83;
"@MMK_R_dotlessj" = -88;
"@MMK_R_emdash" = -43;
"@MMK_R_eng" = -92;
"@MMK_R_f" = -32;
"@MMK_R_g" = -137;
"@MMK_R_germandbls" = -17;
"@MMK_R_guillemotleft" = -23;
"@MMK_R_guillemotright" = -18;
"@MMK_R_h" = 89;
"@MMK_R_l" = 51;
"@MMK_R_m" = -100;
"@MMK_R_p" = -98;
"@MMK_R_parenright" = 21;
"@MMK_R_q" = -143;
"@MMK_R_question" = 15;
"@MMK_R_quotedbl" = 38;
"@MMK_R_quotedblleft" = 44;
"@MMK_R_quotedblright" = 38;
"@MMK_R_r" = -91;
"@MMK_R_registered" = -55;
"@MMK_R_s" = -117;
"@MMK_R_s.salt" = -123;
"@MMK_R_slash" = -27;
"@MMK_R_space" = -27;
"@MMK_R_t" = -89;
"@MMK_R_trademark" = 62;
"@MMK_R_u" = -94;
"@MMK_R_v" = -114;
"@MMK_R_w" = -116;
"@MMK_R_x" = -78;
"@MMK_R_y" = -90;
"@MMK_R_z" = -110;
};
"@MMK_L_Z" = {
"@MMK_R_b" = 38;
"@MMK_R_dotlessj" = -8;
"@MMK_R_h" = 25;
"@MMK_R_l" = 14;
"@MMK_R_u" = -10;
"@MMK_R_v" = -25;
"@MMK_R_w" = -28;
"@MMK_R_y" = -15;
};
"@MMK_L_a" = {
"@MMK_R_Aacute" = 7;
"@MMK_R_T" = -74;
"@MMK_R_Y" = -100;
"@MMK_R_ampersand" = 9;
"@MMK_R_backslash" = -42;
"@MMK_R_braceright" = 7;
"@MMK_R_bracketright" = 5;
"@MMK_R_parenright" = 19;
"@MMK_R_slash" = 21;
"@MMK_R_v" = -11;
"@MMK_R_w" = -19;
};
"@MMK_L_a.salt" = {
"@MMK_R_w" = -40;
"@MMK_R_y" = -8;
};
"@MMK_L_ae" = {
"@MMK_R_B" = -19;
"@MMK_R_M" = -18;
"@MMK_R_T" = -116;
"@MMK_R_U" = -25;
"@MMK_R_V" = -108;
"@MMK_R_W" = -120;
"@MMK_R_Y" = -139;
"@MMK_R_Z" = -8;
"@MMK_R_asterisk" = -10;
"@MMK_R_backslash" = -58;
"@MMK_R_question" = -19;
"@MMK_R_trademark" = -19;
"@MMK_R_v" = -8;
"@MMK_R_w" = -13;
"@MMK_R_y" = -5;
};
"@MMK_L_ampersand" = {
"@MMK_R_AE" = 97;
"@MMK_R_Aacute" = 93;
"@MMK_R_B" = 14;
"@MMK_R_C" = -21;
"@MMK_R_J" = 20;
"@MMK_R_S" = 14;
"@MMK_R_T" = -37;
"@MMK_R_U" = -31;
"@MMK_R_W" = -59;
"@MMK_R_Y" = -37;
"@MMK_R_Z" = 38;
"@MMK_R_a" = 12;
"@MMK_R_dotlessi" = 29;
"@MMK_R_eng" = 20;
"@MMK_R_h" = 55;
"@MMK_R_l" = 54;
"@MMK_R_quotedbl" = -44;
"@MMK_R_r" = 24;
"@MMK_R_s" = 14;
"@MMK_R_w" = -30;
"@MMK_R_y" = -13;
"@MMK_R_z" = 29;
};
"@MMK_L_apostrophe" = {
"@MMK_R_c" = -23;
"@MMK_R_g" = -49;
};
"@MMK_L_asterisk" = {
"@MMK_R_AE" = -69;
"@MMK_R_Aacute" = -25;
"@MMK_R_J" = -30;
"@MMK_R_T" = 21;
"@MMK_R_W" = 7;
"@MMK_R_b" = 28;
"@MMK_R_c" = -13;
"@MMK_R_d" = -22;
"@MMK_R_g" = -33;
"@MMK_R_h" = 11;
};
"@MMK_L_at" = {
"@MMK_R_B" = -17;
"@MMK_R_quotedbl" = -16;
};
"@MMK_L_b" = {
"@MMK_R_B" = -19;
"@MMK_R_M" = -16;
"@MMK_R_T" = -128;
"@MMK_R_U" = -25;
"@MMK_R_V" = -113;
"@MMK_R_W" = -126;
"@MMK_R_X" = -9;
"@MMK_R_Y" = -149;
"@MMK_R_Z" = -15;
"@MMK_R_asterisk" = -43;
"@MMK_R_backslash" = -61;
"@MMK_R_braceright" = -14;
"@MMK_R_bracketright" = -15;
"@MMK_R_parenright" = -13;
"@MMK_R_question" = -24;
"@MMK_R_quotedbl" = -48;
"@MMK_R_quotedblleft" = -48;
"@MMK_R_quotedblright" = -48;
"@MMK_R_trademark" = -32;
"@MMK_R_v" = -15;
"@MMK_R_w" = -21;
"@MMK_R_x" = -16;
};
"@MMK_L_backslash" = {
"@MMK_R_AE" = 52;
"@MMK_R_Aacute" = 48;
"@MMK_R_C" = -14;
"@MMK_R_T" = -36;
"@MMK_R_U" = -25;
"@MMK_R_W" = -61;
"@MMK_R_Y" = -37;
"@MMK_R_h" = 9;
"@MMK_R_l" = 16;
"@MMK_R_quotedbl" = -53;
"@MMK_R_w" = -32;
"@MMK_R_y" = -14;
};
"@MMK_L_bar" = {
"@MMK_R_b" = 5;
"@MMK_R_dotlessj" = 55;
};
"@MMK_L_braceleft" = {
"@MMK_R_AE" = 28;
"@MMK_R_Aacute" = 29;
"@MMK_R_C" = -18;
"@MMK_R_T" = 5;
"@MMK_R_U" = 13;
"@MMK_R_W" = 51;
"@MMK_R_Y" = 43;
"@MMK_R_b" = 70;
"@MMK_R_c" = -15;
"@MMK_R_d" = -13;
"@MMK_R_dotlessj" = 91;
"@MMK_R_h" = 46;
"@MMK_R_l" = 37;
"@MMK_R_u" = -14;
"@MMK_R_w" = -32;
"@MMK_R_y" = -16;
};
"@MMK_L_bracketleft" = {
"@MMK_R_AE" = 29;
"@MMK_R_Aacute" = 29;
"@MMK_R_C" = -19;
"@MMK_R_T" = 5;
"@MMK_R_W" = 51;
"@MMK_R_Y" = 44;
"@MMK_R_b" = 72;
"@MMK_R_c" = -14;
"@MMK_R_d" = -13;
"@MMK_R_dotlessj" = 90;
"@MMK_R_h" = 47;
"@MMK_R_l" = 38;
"@MMK_R_u" = -13;
"@MMK_R_w" = -31;
"@MMK_R_y" = -15;
};
"@MMK_L_c" = {
"@MMK_R_B" = -16;
"@MMK_R_T" = -85;
"@MMK_R_U" = -19;
"@MMK_R_Y" = -115;
"@MMK_R_backslash" = -36;
};
"@MMK_L_c.salt" = {
"@MMK_R_w" = -8;
};
"@MMK_L_c_h" = {
"@MMK_R_C" = -13;
"@MMK_R_T" = -115;
"@MMK_R_U" = -48;
"@MMK_R_Y" = -142;
"@MMK_R_asterisk" = -42;
"@MMK_R_backslash" = -65;
"@MMK_R_braceright" = 35;
"@MMK_R_bracketright" = 34;
"@MMK_R_c" = -6;
"@MMK_R_c.salt" = -6;
"@MMK_R_parenright" = 19;
"@MMK_R_q" = -5;
"@MMK_R_question" = -13;
"@MMK_R_quotedbl" = -43;
"@MMK_R_quotedblleft" = -43;
"@MMK_R_quotedblright" = -43;
"@MMK_R_slash" = 15;
"@MMK_R_t" = -15;
"@MMK_R_trademark" = -37;
"@MMK_R_u" = -29;
"@MMK_R_v" = -48;
"@MMK_R_w" = -52;
"@MMK_R_y" = -5;
};
"@MMK_L_c_k" = {
"@MMK_R_T" = -81;
"@MMK_R_U" = -14;
"@MMK_R_Y" = -100;
"@MMK_R_c" = -22;
"@MMK_R_c.salt" = -22;
"@MMK_R_d" = -20;
"@MMK_R_emdash" = -22;
"@MMK_R_q" = -21;
"@MMK_R_quotedbl" = -29;
"@MMK_R_quotedblleft" = -31;
"@MMK_R_quotedblright" = -29;
"@MMK_R_y" = 14;
};
"@MMK_L_c_p" = {
"@MMK_R_B" = -19;
"@MMK_R_T" = -127;
"@MMK_R_U" = -25;
"@MMK_R_Y" = -149;
"@MMK_R_v" = -8;
"@MMK_R_w" = -13;
"@MMK_R_x" = -9;
"@MMK_R_y" = -5;
};
"@MMK_L_c_t" = {
"@MMK_R_Aacute" = 5;
"@MMK_R_B" = -8;
"@MMK_R_T" = -89;
"@MMK_R_U" = -22;
"@MMK_R_Y" = -108;
"@MMK_R_asterisk" = -18;
"@MMK_R_backslash" = -39;
"@MMK_R_quotedbl" = -16;
"@MMK_R_quotedblleft" = -12;
"@MMK_R_quotedblright" = -16;
"@MMK_R_u" = 6;
};
"@MMK_L_colon" = {
"@MMK_R_AE" = 8;
"@MMK_R_T" = -27;
"@MMK_R_V" = -21;
"@MMK_R_W" = -24;
"@MMK_R_Y" = -22;
};
"@MMK_L_comma" = {
"@MMK_R_AE" = 20;
"@MMK_R_Aacute" = 16;
"@MMK_R_C" = -13;
"@MMK_R_T" = -25;
"@MMK_R_U" = -18;
"@MMK_R_V" = -43;
"@MMK_R_W" = -47;
"@MMK_R_Y" = -21;
"@MMK_R_dotlessj" = -17;
"@MMK_R_nine" = -17;
"@MMK_R_quotedbl" = -83;
"@MMK_R_quotedblleft" = -77;
"@MMK_R_quotedblright" = -83;
"@MMK_R_u" = -16;
"@MMK_R_v" = -50;
"@MMK_R_w" = -52;
"@MMK_R_y" = -18;
};
"@MMK_L_d" = {
"@MMK_R_U" = -13;
"@MMK_R_Y" = -13;
"@MMK_R_braceright" = 34;
"@MMK_R_bracketright" = 32;
"@MMK_R_comma" = 9;
"@MMK_R_parenright" = 31;
"@MMK_R_slash" = 33;
"@MMK_R_w" = -7;
"@MMK_R_z" = 8;
};
"@MMK_L_dotlessi" = {
"@MMK_R_T" = -25;
"@MMK_R_U" = -23;
"@MMK_R_Y" = -96;
"@MMK_R_backslash" = -26;
"@MMK_R_braceright" = 7;
"@MMK_R_bracketright" = 7;
"@MMK_R_parenright" = 8;
"@MMK_R_slash" = 17;
"@MMK_R_v" = -15;
"@MMK_R_w" = -19;
};
"@MMK_L_dotlessj" = {
"@MMK_R_B" = -13;
"@MMK_R_M" = -10;
"@MMK_R_T" = -10;
"@MMK_R_U" = -18;
"@MMK_R_V" = -66;
"@MMK_R_W" = -69;
"@MMK_R_Y" = -91;
"@MMK_R_Z" = -5;
"@MMK_R_backslash" = -19;
"@MMK_R_dotlessj" = 56;
};
"@MMK_L_emdash" = {
"@MMK_R_AE" = -30;
"@MMK_R_B" = -11;
"@MMK_R_M" = -10;
"@MMK_R_T" = -48;
"@MMK_R_V" = -25;
"@MMK_R_W" = -29;
"@MMK_R_X" = -15;
"@MMK_R_Y" = -43;
"@MMK_R_Z" = -12;
"@MMK_R_dotlessj" = -19;
"@MMK_R_eng" = -11;
"@MMK_R_v" = -22;
"@MMK_R_w" = -23;
"@MMK_R_y" = -27;
};
"@MMK_L_eth" = {
"@MMK_R_B" = -14;
"@MMK_R_T" = -24;
};
"@MMK_L_exclamdown" = {
"@MMK_R_U" = -13;
"@MMK_R_W" = -24;
"@MMK_R_Y" = -28;
"@MMK_R_dotlessj" = 51;
};
"@MMK_L_f" = {
"@MMK_R_B" = 93;
"@MMK_R_C" = 48;
"@MMK_R_T" = 143;
"@MMK_R_U" = 101;
"@MMK_R_Y" = 144;
"@MMK_R_emdash" = -26;
"@MMK_R_quotedbl" = 116;
"@MMK_R_quotedblleft" = 119;
"@MMK_R_quotedblright" = 116;
};
"@MMK_L_f_f_i" = {
"@MMK_R_a" = -5;
"@MMK_R_c" = -9;
"@MMK_R_c.salt" = -9;
"@MMK_R_d" = -7;
"@MMK_R_q" = -7;
"@MMK_R_v" = -13;
"@MMK_R_w" = -18;
};
"@MMK_L_f_f_l" = {
"@MMK_R_T" = -9;
"@MMK_R_U" = -12;
"@MMK_R_Y" = -5;
"@MMK_R_braceright" = 7;
"@MMK_R_bracketright" = 6;
"@MMK_R_parenright" = 7;
"@MMK_R_slash" = 15;
"@MMK_R_v" = -8;
"@MMK_R_w" = -11;
};
"@MMK_L_f_l" = {
"@MMK_R_c" = -6;
"@MMK_R_w" = -19;
};
"@MMK_L_g" = {
"@MMK_R_C" = -9;
"@MMK_R_T" = -47;
"@MMK_R_U" = -24;
"@MMK_R_Y" = -82;
"@MMK_R_a" = -7;
"@MMK_R_a.salt" = -8;
"@MMK_R_backslash" = -27;
"@MMK_R_braceright" = 67;
"@MMK_R_bracketright" = 65;
"@MMK_R_comma" = 9;
"@MMK_R_parenright" = 36;
"@MMK_R_slash" = 31;
"@MMK_R_v" = -19;
"@MMK_R_w" = -19;
"@MMK_R_y" = -7;
"@MMK_R_z" = 5;
};
"@MMK_L_g.salt" = {
"@MMK_R_c" = -11;
"@MMK_R_d" = -7;
"@MMK_R_emdash" = -11;
"@MMK_R_f_f" = 9;
"@MMK_R_t" = 14;
"@MMK_R_u" = 19;
};
"@MMK_L_germandbls" = {
"@MMK_R_B" = -7;
"@MMK_R_C" = -13;
"@MMK_R_T" = -72;
"@MMK_R_dotlessj" = -33;
"@MMK_R_t" = -10;
"@MMK_R_u" = -17;
"@MMK_R_w" = -65;
"@MMK_R_y" = -54;
};
"@MMK_L_guillemotleft" = {
"@MMK_R_AE" = -33;
"@MMK_R_Y" = -20;
};
"@MMK_L_guillemotright" = {
"@MMK_R_AE" = -38;
"@MMK_R_T" = -14;
"@MMK_R_W" = -11;
"@MMK_R_X" = -16;
"@MMK_R_Y" = -25;
"@MMK_R_Z" = -11;
"@MMK_R_dotlessj" = 5;
"@MMK_R_quotedbl" = -21;
"@MMK_R_quotedblright" = -21;
};
"@MMK_L_k.salt" = {
"@MMK_R_a" = -9;
"@MMK_R_a.salt" = -7;
"@MMK_R_asterisk" = -41;
"@MMK_R_backslash" = -61;
"@MMK_R_braceright" = 21;
"@MMK_R_bracketright" = 20;
"@MMK_R_c" = -29;
"@MMK_R_c.salt" = -29;
"@MMK_R_d" = -25;
"@MMK_R_emdash" = -58;
"@MMK_R_parenright" = 8;
"@MMK_R_q" = -27;
"@MMK_R_question" = -19;
"@MMK_R_quotedbl" = -50;
"@MMK_R_quotedblleft" = -51;
"@MMK_R_quotedblright" = -50;
"@MMK_R_trademark" = -31;
"@MMK_R_v" = -6;
"@MMK_R_w" = -11;
};
"@MMK_L_l_l" = {
"@MMK_R_w" = -10;
};
"@MMK_L_ldot" = {
"@MMK_R_f_f" = 15;
};
"@MMK_L_m" = {
"@MMK_R_C" = -8;
"@MMK_R_T" = -102;
"@MMK_R_U" = -33;
"@MMK_R_Y" = -128;
"@MMK_R_u" = -12;
"@MMK_R_w" = -45;
"@MMK_R_y" = -5;
};
"@MMK_L_n" = {
"@MMK_R_C" = -9;
"@MMK_R_T" = -104;
"@MMK_R_U" = -37;
"@MMK_R_Y" = -130;
"@MMK_R_backslash" = -63;
"@MMK_R_braceright" = 28;
"@MMK_R_bracketright" = 27;
"@MMK_R_parenright" = 21;
"@MMK_R_question" = -13;
"@MMK_R_slash" = 24;
"@MMK_R_trademark" = -13;
"@MMK_R_u" = -16;
"@MMK_R_v" = -42;
"@MMK_R_w" = -46;
"@MMK_R_y" = -6;
};
"@MMK_L_nine" = {
"@MMK_R_B" = -12;
"@MMK_R_comma" = -34;
};
"@MMK_L_o" = {
"@MMK_R_B" = -21;
"@MMK_R_T" = -131;
"@MMK_R_U" = -26;
"@MMK_R_Y" = -151;
"@MMK_R_asterisk" = -12;
"@MMK_R_backslash" = -60;
"@MMK_R_braceright" = -14;
"@MMK_R_bracketright" = -15;
"@MMK_R_parenright" = -12;
"@MMK_R_question" = -22;
"@MMK_R_trademark" = -21;
"@MMK_R_v" = -17;
"@MMK_R_w" = -23;
"@MMK_R_x" = -17;
};
"@MMK_L_parenleft" = {
"@MMK_R_AE" = 22;
"@MMK_R_Aacute" = 18;
"@MMK_R_C" = -15;
"@MMK_R_W" = 37;
"@MMK_R_Y" = 32;
"@MMK_R_b" = 62;
"@MMK_R_c" = -17;
"@MMK_R_d" = -16;
"@MMK_R_g" = -13;
"@MMK_R_h" = 44;
"@MMK_R_l" = 28;
"@MMK_R_w" = -26;
"@MMK_R_y" = -23;
};
"@MMK_L_q" = {
"@MMK_R_B" = -8;
"@MMK_R_T" = -95;
"@MMK_R_U" = -11;
"@MMK_R_Y" = -118;
"@MMK_R_dotlessj" = 107;
"@MMK_R_y" = 26;
};
"@MMK_L_questiondown" = {
"@MMK_R_AE" = 44;
"@MMK_R_Aacute" = 40;
"@MMK_R_C" = -13;
"@MMK_R_T" = -21;
"@MMK_R_U" = -23;
"@MMK_R_W" = -46;
"@MMK_R_Y" = -32;
"@MMK_R_dotlessj" = 82;
"@MMK_R_l" = 6;
"@MMK_R_w" = -24;
};
"@MMK_L_quotedbl" = {
"@MMK_R_AE" = -67;
"@MMK_R_Aacute" = -29;
"@MMK_R_J" = -22;
"@MMK_R_V" = 17;
"@MMK_R_W" = 25;
"@MMK_R_Y" = 22;
"@MMK_R_at" = -18;
"@MMK_R_b" = 53;
"@MMK_R_comma" = -83;
"@MMK_R_d" = -18;
"@MMK_R_four" = -37;
"@MMK_R_g" = -30;
"@MMK_R_guillemotleft" = -22;
"@MMK_R_h" = 36;
"@MMK_R_l" = 19;
"@MMK_R_registered" = -18;
"@MMK_R_six" = -15;
"@MMK_R_slash" = -53;
"@MMK_R_space" = -30;
};
"@MMK_L_quotedblleft" = {
"@MMK_R_AE" = -66;
"@MMK_R_Aacute" = -31;
"@MMK_R_J" = -20;
"@MMK_R_V" = 19;
"@MMK_R_W" = 27;
"@MMK_R_Y" = 25;
"@MMK_R_b" = 55;
"@MMK_R_comma" = -77;
"@MMK_R_d" = -17;
"@MMK_R_g" = -24;
"@MMK_R_h" = 39;
"@MMK_R_l" = 22;
};
"@MMK_L_quotedblright" = {
"@MMK_R_AE" = -67;
"@MMK_R_Aacute" = -29;
"@MMK_R_J" = -22;
"@MMK_R_V" = 23;
"@MMK_R_W" = 31;
"@MMK_R_Y" = 28;
"@MMK_R_b" = 58;
"@MMK_R_c.salt" = -10;
"@MMK_R_comma" = -84;
"@MMK_R_d" = -18;
"@MMK_R_g" = -31;
"@MMK_R_guillemotleft" = -23;
"@MMK_R_h" = 41;
"@MMK_R_l" = 25;
};
"@MMK_L_r" = {
"@MMK_R_B" = -21;
"@MMK_R_T" = -128;
"@MMK_R_U" = -22;
"@MMK_R_Y" = -143;
"@MMK_R_backslash" = -49;
"@MMK_R_braceright" = -17;
"@MMK_R_bracketright" = -18;
"@MMK_R_comma" = -14;
"@MMK_R_parenright" = -15;
"@MMK_R_question" = -14;
};
"@MMK_L_registered" = {
"@MMK_R_B" = -15;
"@MMK_R_T" = -43;
"@MMK_R_U" = -19;
"@MMK_R_W" = -51;
"@MMK_R_Y" = -59;
"@MMK_R_quotedbl" = -14;
};
"@MMK_L_s" = {
"@MMK_R_B" = -14;
"@MMK_R_T" = -83;
"@MMK_R_U" = -25;
"@MMK_R_Y" = -122;
"@MMK_R_backslash" = -46;
};
"@MMK_L_seven" = {
"@MMK_R_B" = 26;
"@MMK_R_C" = -14;
"@MMK_R_comma" = -66;
"@MMK_R_quotedbl" = 12;
};
"@MMK_L_slash" = {
"@MMK_R_AE" = -84;
"@MMK_R_Aacute" = -58;
"@MMK_R_C" = -15;
"@MMK_R_J" = -44;
"@MMK_R_W" = 43;
"@MMK_R_Y" = 39;
"@MMK_R_a" = -60;
"@MMK_R_b" = 69;
"@MMK_R_c" = -61;
"@MMK_R_d" = -48;
"@MMK_R_dotlessi" = -22;
"@MMK_R_dotlessj" = -20;
"@MMK_R_eng" = -28;
"@MMK_R_g" = -61;
"@MMK_R_h" = 52;
"@MMK_R_l" = 35;
"@MMK_R_r" = -29;
"@MMK_R_s" = -60;
"@MMK_R_t" = -17;
"@MMK_R_u" = -20;
"@MMK_R_w" = -34;
"@MMK_R_y" = -37;
"@MMK_R_z" = -55;
};
"@MMK_L_space" = {
"@MMK_R_AE" = -39;
"@MMK_R_Aacute" = -28;
"@MMK_R_J" = -28;
"@MMK_R_T" = -27;
"@MMK_R_W" = -31;
"@MMK_R_Y" = -30;
"@MMK_R_quotedbl" = -30;
"@MMK_R_w" = -23;
"@MMK_R_y" = -21;
};
"@MMK_L_t_t" = {
"@MMK_R_c" = -7;
"@MMK_R_dotlessj" = 6;
};
"@MMK_L_t_z" = {
"@MMK_R_B" = -11;
"@MMK_R_T" = -100;
"@MMK_R_U" = -26;
"@MMK_R_Y" = -123;
"@MMK_R_backslash" = -52;
"@MMK_R_question" = -15;
};
"@MMK_L_trademark" = {
"@MMK_R_AE" = -62;
"@MMK_R_Aacute" = -21;
"@MMK_R_J" = -25;
"@MMK_R_T" = 14;
"@MMK_R_U" = 13;
"@MMK_R_W" = 60;
"@MMK_R_Y" = 58;
"@MMK_R_b" = 82;
"@MMK_R_c" = -12;
"@MMK_R_d" = -14;
"@MMK_R_g" = -15;
"@MMK_R_h" = 65;
"@MMK_R_l" = 49;
"@MMK_R_t" = 5;
"@MMK_R_u" = 13;
};
"@MMK_L_u" = {
"@MMK_R_T" = -94;
"@MMK_R_U" = -23;
"@MMK_R_Y" = -120;
"@MMK_R_backslash" = -55;
"@MMK_R_braceright" = 14;
"@MMK_R_bracketright" = 13;
"@MMK_R_parenright" = 13;
"@MMK_R_slash" = 19;
"@MMK_R_v" = -13;
"@MMK_R_w" = -18;
};
"@MMK_L_v" = {
"@MMK_R_Aacute" = -40;
"@MMK_R_B" = -24;
"@MMK_R_T" = -83;
"@MMK_R_U" = -19;
"@MMK_R_Y" = -110;
"@MMK_R_comma" = -49;
"@MMK_R_dotlessi" = 13;
"@MMK_R_dotlessj" = 24;
"@MMK_R_emdash" = -16;
"@MMK_R_eng" = 15;
"@MMK_R_f_f" = 8;
"@MMK_R_guillemotleft" = 10;
"@MMK_R_r" = 13;
"@MMK_R_t" = 18;
"@MMK_R_u" = 7;
"@MMK_R_y" = 39;
};
"@MMK_L_w" = {
"@MMK_R_Aacute" = -42;
"@MMK_R_B" = -24;
"@MMK_R_T" = -87;
"@MMK_R_U" = -16;
"@MMK_R_Y" = -116;
"@MMK_R_backslash" = -33;
"@MMK_R_braceright" = -32;
"@MMK_R_bracketright" = -26;
"@MMK_R_comma" = -48;
"@MMK_R_dotlessi" = 8;
"@MMK_R_dotlessj" = 12;
"@MMK_R_emdash" = -11;
"@MMK_R_eng" = 7;
"@MMK_R_guillemotleft" = 6;
"@MMK_R_m" = 8;
"@MMK_R_p" = 9;
"@MMK_R_parenright" = -22;
"@MMK_R_r" = 6;
"@MMK_R_slash" = -24;
"@MMK_R_space" = -20;
"@MMK_R_t" = 8;
"@MMK_R_x" = 10;
"@MMK_R_y" = 43;
};
"@MMK_L_x" = {
"@MMK_R_Aacute" = 16;
"@MMK_R_B" = -6;
"@MMK_R_T" = -102;
"@MMK_R_U" = -29;
"@MMK_R_Y" = -120;
"@MMK_R_c" = -5;
"@MMK_R_emdash" = -12;
};
"@MMK_L_y" = {
"@MMK_R_Aacute" = -45;
"@MMK_R_B" = -39;
"@MMK_R_T" = -113;
"@MMK_R_U" = -25;
"@MMK_R_Y" = -145;
"@MMK_R_backslash" = -45;
"@MMK_R_braceright" = -33;
"@MMK_R_bracketright" = -30;
"@MMK_R_comma" = -49;
"@MMK_R_emdash" = -12;
"@MMK_R_g" = -6;
"@MMK_R_l" = -14;
"@MMK_R_parenright" = -25;
"@MMK_R_q" = -6;
"@MMK_R_slash" = -24;
"@MMK_R_space" = -20;
"@MMK_R_y" = 16;
};
"@MMK_L_zero" = {
"@MMK_R_B" = -12;
};
A = {
Iogonek = 13;
apostrophe = -53;
comma = 3;
f_f_h = 55;
five = 7;
iogonek = 6;
one = 39;
semicolon = 1;
seven = 70;
thorn = 24;
three = 28;
two = 51;
};
Aacute = {
Iogonek = 13;
comma = 3;
f_f_h = 55;
semicolon = 1;
thorn = 24;
};
Abreve = {
Iogonek = 13;
comma = 3;
f_f_h = 55;
semicolon = 1;
thorn = 24;
};
Acircumflex = {
Iogonek = 13;
comma = 3;
f_f_h = 55;
semicolon = 1;
thorn = 24;
};
Adieresis = {
Iogonek = 13;
comma = 3;
f_f_h = 55;
semicolon = 1;
thorn = 24;
};
Agrave = {
Iogonek = 13;
comma = 3;
f_f_h = 55;
semicolon = 1;
thorn = 24;
};
Amacron = {
Iogonek = 13;
comma = 3;
f_f_h = 55;
semicolon = 1;
thorn = 24;
};
Aogonek = {
Iogonek = 13;
comma = 3;
f_f_h = 55;
semicolon = 1;
thorn = 24;
};
Aring = {
Iogonek = 13;
comma = 3;
f_f_h = 55;
semicolon = 1;
thorn = 24;
};
Aringacute = {
Iogonek = 10;
comma = 1;
semicolon = 1;
space = -38;
thorn = 22;
};
Atilde = {
Iogonek = 13;
comma = 3;
f_f_h = 55;
semicolon = 1;
thorn = 24;
};
B = {
M = -10;
V = -23;
X = -31;
apostrophe = -12;
braceright = -13;
bracketright = -15;
four = 9;
p = -6;
v = -25;
};
C = {
four = 16;
k = 15;
k.salt = 13;
kcommaaccent = 13;
lslash = 1;
};
Cacute = {
k = 15;
k.salt = 13;
};
Ccaron = {
k = 15;
k.salt = 13;
};
Ccedilla = {
k = 15;
k.salt = 13;
};
Ccircumflex = {
k = 15;
k.salt = 13;
};
Cdotaccent = {
k = 15;
k.salt = 13;
};
D = {
apostrophe = -18;
};
Eng = {
k = 52;
k.salt = 50;
};
F = {
V = 22;
a.salt = -36;
ampersand = -12;
asterisk = 30;
at = -22;
braceright = 15;
bracketright = 10;
c.salt = -46;
four = -12;
germandbls = -12;
icircumflex = -6;
idieresis = 4;
k = 56;
k.salt = 54;
kcommaaccent = 54;
lslash = 40;
m = -24;
nine = 9;
p = -16;
q = -49;
registered = -21;
s.salt = -40;
schwa = -34;
slash = -38;
space = -25;
t_z = -12;
trademark = 9;
v = -26;
x = -20;
};
G = {
k = 5;
k.salt = 2;
kcommaaccent = 2;
};
Gbreve = {
k = 5;
k.salt = 2;
};
Gcircumflex = {
k = 5;
k.salt = 2;
};
Gcommaaccent = {
k = 5;
k.salt = 2;
};
Gdotaccent = {
k = 5;
k.salt = 2;
};
H = {
at = -17;
f_f_b = 37;
f_f_h = 13;
four = -21;
k = 36;
k.salt = 34;
kcommaaccent = 34;
lslash = 20;
one = 5;
schwa = -23;
seven = 24;
six = -18;
two = 14;
zero = -14;
};
Hbar = {
f_f_b = 34;
f_f_h = 11;
k = 33;
k.salt = 31;
};
Hcircumflex = {
f_f_b = 37;
f_f_h = 13;
k = 36;
k.salt = 34;
};
I = {
f_f_h = -8;
four = -16;
k = 27;
k.salt = 26;
kcommaaccent = 26;
lslash = 11;
schwa = -11;
seven = 9;
};
IJ = {
k = 35;
k.salt = 34;
};
Iacute = {
f_f_h = -8;
k = 27;
k.salt = 26;
};
Ibreve = {
f_f_h = -8;
k = 27;
k.salt = 26;
};
Icircumflex = {
f_f_h = -8;
k = 27;
k.salt = 26;
};
Idieresis = {
f_f_h = -8;
k = 27;
k.salt = 26;
};
Idotaccent = {
f_f_h = -8;
k = 27;
k.salt = 26;
};
Igrave = {
f_f_h = -8;
k = 27;
k.salt = 26;
};
Imacron = {
f_f_h = -8;
k = 27;
k.salt = 26;
};
Iogonek = {
f_f_h = -8;
j = 46;
k = 27;
k.salt = 26;
};
Itilde = {
f_f_h = -8;
k = 27;
k.salt = 26;
};
J = {
f_f_h = -6;
k = 34;
k.salt = 33;
kcommaaccent = 33;
lslash = 22;
schwa = -18;
};
Jcircumflex = {
f_f_h = -6;
k = 34;
k.salt = 33;
};
K = {
four = -34;
lslash = 50;
one = 23;
schwa = -44;
seven = 33;
three = 11;
two = 19;
};
K.salt = {
a.salt = -6;
asterisk = 26;
at = -12;
b = 73;
backslash = 11;
braceright = 13;
bracketright = 16;
c.salt = -24;
f_f_b = 8;
four = -27;
k = 60;
k.salt = 57;
kcommaaccent = 57;
lslash = 39;
one = 7;
p = -34;
q = -23;
registered = -17;
s.salt = -8;
schwa = -21;
six = -12;
thorn = 85;
trademark = 14;
v = -75;
};
L = {
apostrophe = -57;
four = 23;
lslash = 13;
nine = -33;
};
Ldot = {
t_t = -6;
t_z = -6;
};
M = {
a.salt = -23;
ampersand = -14;
asterisk = 32;
at = -22;
backslash = 10;
braceright = 10;
bracketright = 14;
c.salt = -46;
f_f_b = 18;
f_f_h = 2;
four = -28;
k = 56;
k.salt = 54;
kcommaaccent = 54;
lslash = 33;
m = -9;
one = 22;
p = -30;
q = -42;
registered = -26;
s.salt = -19;
schwa = -28;
six = -21;
trademark = 18;
v = -72;
};
N = {
at = -27;
four = -19;
k = 53;
k.salt = 50;
kcommaaccent = 50;
lslash = 36;
schwa = -41;
six = -22;
zero = -15;
};
Nacute = {
k = 53;
k.salt = 50;
};
Ncaron = {
k = 53;
k.salt = 50;
};
Ncommaaccent = {
k = 53;
k.salt = 50;
};
Ndotaccent = {
k = 53;
k.salt = 50;
};
Ntilde = {
k = 53;
k.salt = 50;
};
P = {
X = -38;
a.salt = -21;
ampersand = -17;
asterisk = 32;
at = -24;
c.salt = -53;
four = -19;
hbar = 25;
icircumflex = 12;
idieresis = 13;
imacron = 15;
itilde = 30;
m = -37;
nine = 15;
q = -62;
registered = -20;
s.salt = -39;
schwa = -41;
slash = -48;
space = -25;
};
R = {
apostrophe = -12;
f_f_b = 35;
f_f_h = 14;
f_f_i = 28;
four = -28;
lslash = 29;
one = 29;
schwa = -15;
seven = 50;
three = 19;
two = 37;
};
R.salt = {
V = -25;
apostrophe = -18;
backslash = -18;
braceright = 7;
bracketright = 5;
c.salt = -24;
f_f_b = 34;
f_f_h = 7;
four = -23;
lslash = 11;
p = -12;
q = -23;
registered = -14;
schwa = -14;
seven = 20;
t_z = -23;
three = 8;
two = 8;
v = -47;
};
Racute = {
f_f_b = 35;
f_f_h = 14;
f_f_i = 28;
};
Rcaron = {
f_f_b = 35;
f_f_h = 14;
f_f_i = 28;
};
Rcommaaccent = {
f_f_b = 35;
f_f_h = 14;
f_f_i = 28;
};
S = {
itilde = 6;
k = 28;
k.salt = 26;
kcommaaccent = 26;
lslash = 13;
schwa = -7;
};
Sacute = {
k = 28;
k.salt = 26;
lslash = 13;
};
Scaron = {
k = 28;
k.salt = 26;
kcommaaccent = 26;
};
Scircumflex = {
k = 28;
k.salt = 26;
};
T = {
abreve = -95;
acircumflex = -81;
adieresis = -63;
amacron = -82;
at = -47;
atilde = -61;
dotlessi = -79;
ecaron = -109;
ecircumflex = -110;
edieresis = -85;
emacron = -107;
etilde = -73;
four = -44;
gbreve = -114;
gcircumflex = -110;
icircumflex = -5;
idieresis = 6;
imacron = 7;
iogonek = -78;
itilde = 13;
jcircumflex = -17;
k = 48;
k.salt = 47;
kcommaaccent = 47;
lslash = 33;
nine = 8;
odieresis = -96;
ohungarumlaut = -116;
otilde = -77;
rcaron = -52;
scaron = -62;
schwa = -109;
scircumflex = -72;
six = -20;
};
Tbar = {
k = 48;
k.salt = 47;
};
Tcaron = {
k = 48;
k.salt = 47;
};
Thorn = {
M = -19;
V = -27;
X = -69;
backslash = -20;
braceright = -24;
bracketright = -24;
c.salt = -5;
f_f_h = 6;
j = 7;
one = -21;
p = 9;
parenright = -20;
q = -7;
seven = -28;
slash = -27;
u = 10;
};
U = {
at = -23;
f_f_h = -12;
four = -12;
k = 26;
k.salt = 26;
kcommaaccent = 26;
one = 9;
schwa = -30;
six = -17;
thorn = 41;
};
Uacute = {
f_f_h = -12;
k = 26;
k.salt = 26;
thorn = 41;
};
Ubreve = {
f_f_h = -12;
k = 26;
k.salt = 26;
thorn = 41;
};
Ucircumflex = {
f_f_h = -12;
k = 26;
k.salt = 26;
thorn = 41;
};
Udieresis = {
f_f_h = -12;
k = 26;
k.salt = 26;
thorn = 41;
};
Ugrave = {
f_f_h = -12;
k = 26;
k.salt = 26;
thorn = 41;
};
Uhungarumlaut = {
f_f_h = -12;
k = 26;
k.salt = 26;
thorn = 41;
};
Umacron = {
f_f_h = -12;
k = 26;
k.salt = 26;
kcommaaccent = 26;
thorn = 41;
};
Uogonek = {
f_f_h = -12;
k = 26;
k.salt = 26;
thorn = 41;
};
Uring = {
f_f_h = -12;
k = 26;
k.salt = 26;
thorn = 41;
};
Utilde = {
f_f_h = -12;
k = 26;
k.salt = 26;
thorn = 41;
};
V = {
a.salt = -91;
aringacute = -89;
asterisk = 77;
at = -48;
b = 28;
backslash = 46;
braceright = 32;
bracketright = 35;
c.salt = -108;
dotlessi = -64;
eight = 12;
eth = -102;
five = 5;
four = -32;
germandbls = -10;
iogonek = -64;
k = 90;
k.salt = 92;
kcommaaccent = 92;
m = -66;
nine = 38;
one = 45;
p = -58;
parenright = 24;
q = -112;
question = 29;
registered = -47;
s.salt = -102;
schwa = -91;
seven = 45;
six = -17;
slash = -51;
space = -27;
thorn = 76;
three = 14;
trademark = 73;
two = 22;
v = -74;
x = -56;
};
W = {
aringacute = -98;
at = -50;
dotlessi = -68;
eight = 7;
eth = -99;
four = -33;
iogonek = -68;
k = 11;
k.salt = 7;
kcommaaccent = 10;
nine = 33;
one = 37;
schwa = -94;
seven = 37;
six = -19;
thorn = 30;
three = 11;
two = 19;
};
Wacute = {
eth = -99;
k = 12;
k.salt = 7;
thorn = 30;
};
Wcircumflex = {
eth = -99;
k = 12;
k.salt = 7;
thorn = 30;
};
Wdieresis = {
eth = -99;
k = 12;
k.salt = 7;
thorn = 30;
};
Wgrave = {
eth = -99;
k = 12;
k.salt = 7;
thorn = 30;
};
X = {
backslash = 5;
braceright = 48;
bracketright = 47;
c.salt = -18;
f_f_b = 50;
f_f_h = 16;
f_f_i = 31;
four = -23;
k = 48;
k.salt = 48;
kcommaaccent = 48;
lslash = 39;
one = 37;
parenright = 38;
q = -11;
quotedblbase = 3;
quotesinglbase = 3;
schwa = -16;
seven = 59;
slash = 38;
three = 26;
trademark = 8;
two = 45;
v = -101;
};
Y = {
aringacute = -106;
at = -53;
dotlessi = -99;
eth = -104;
f_f_h = -40;
four = -47;
iogonek = -98;
k = 68;
k.salt = 82;
kcommaaccent = 82;
nine = 28;
one = 45;
schwa = -123;
seven = 39;
six = -24;
t_z = -95;
thorn = 125;
three = 6;
two = 13;
};
Yacute = {
eth = -104;
f_f_h = -40;
k = 68;
k.salt = 82;
t_z = -95;
thorn = 125;
};
Ycircumflex = {
eth = -104;
f_f_h = -40;
k = 68;
k.salt = 82;
t_z = -95;
thorn = 125;
};
Ydieresis = {
eth = -104;
f_f_h = -40;
k = 68;
k.salt = 82;
t_z = -95;
thorn = 125;
};
Ygrave = {
eth = -104;
k = 68;
k.salt = 82;
thorn = 125;
};
Ytilde = {
eth = -104;
k = 68;
k.salt = 82;
thorn = 125;
};
Z = {
four = 8;
k = 15;
k.salt = 14;
kcommaaccent = 14;
lslash = 7;
};
Zacute = {
k = 15;
k.salt = 14;
};
Zcaron = {
k = 15;
k.salt = 14;
};
Zdotaccent = {
k = 15;
k.salt = 14;
lslash = 7;
};
a = {
AE = 62;
J = 20;
V = -111;
W = -126;
X = 5;
Z = 8;
lslash = 41;
};
a.salt = {
apostrophe = -15;
backslash = -61;
lslash = 25;
parenright = 7;
question = -16;
slash = 9;
trademark = -13;
v = -33;
};
ampersand = {
H = 1;
Hbar = 1;
Hcircumflex = 1;
K = 3;
K.salt = 26;
Kcommaaccent = 3;
L = 29;
Lacute = 29;
Lcaron = 29;
Lcommaaccent = 29;
Lslash = 22;
V = -56;
X = 72;
a.salt = 6;
f = 42;
germandbls = 58;
lslash = 47;
m = 24;
quoteright = -44;
s.salt = 9;
v = -27;
x = 37;
};
aogonek = {
g = 42;
g.salt = 42;
j = 187;
lslash = 41;
p = 20;
thorn = 16;
};
apostrophe = {
a = -16;
a.salt = -10;
c.salt = -23;
d = -33;
j = -11;
q = -20;
s = -16;
s.salt = -15;
};
asterisk = {
X = 23;
c.salt = -13;
k = 17;
q = -10;
};
at = {
M = -16;
T = -50;
U = -19;
V = -49;
W = -54;
Y = -61;
Z = -14;
quoteright = -16;
};
b = {
apostrophe = -61;
};
backslash = {
V = -57;
X = 26;
germandbls = 13;
lslash = 10;
nine = -23;
quoteright = -53;
seven = 10;
v = -29;
};
braceleft = {
V = 43;
X = 19;
c.salt = -15;
four = -21;
k = 38;
k.salt = 37;
kcommaaccent = 37;
lslash = 31;
one = 10;
parenleft = -14;
q = -12;
seven = 18;
six = -18;
two = 5;
v = -30;
zero = -15;
};
bracketleft = {
V = 43;
X = 20;
c.salt = -14;
four = -23;
germandbls = 7;
k = 39;
k.salt = 38;
kcommaaccent = 38;
lslash = 32;
one = 7;
parenleft = -15;
q = -12;
seven = 17;
six = -19;
v = -28;
zero = -16;
};
c = {
M = -14;
V = -91;
W = -93;
};
c.salt = {
apostrophe = -12;
backslash = -52;
question = -13;
trademark = -11;
};
c_k = {
y = 1;
yacute = 1;
ycircumflex = 1;
ydieresis = 1;
};
ccedilla = {
j = 73;
};
comma = {
j = 49;
jcircumflex = 49;
};
d = {
AE = 62;
V = -10;
W = -7;
Z = 12;
lslash = 42;
quotedblbase = 1;
quotesinglbase = 1;
};
dcaron = {
asterisk = 75;
backslash = 80;
bar = 15;
braceright = 86;
bracketright = 88;
exclam = 15;
parenright = 50;
question = 28;
quotedbl = 62;
quotedblbase = 1;
quotedblleft = 67;
quotedblright = 62;
quoteleft = 67;
quoteright = 62;
quotesinglbase = 1;
quotesingle = 62;
trademark = 79;
};
dcroat = {
question = 11;
quotedblbase = 1;
quotesinglbase = 1;
};
degree = {
four = -41;
six = -17;
};
dotlessi = {
parenright = 17;
};
e = {
apostrophe = -19;
};
eng = {
backslash = -60;
question = -19;
trademark = -15;
v = -19;
w = -23;
};
eth = {
M = -11;
U = -22;
V = -66;
W = -59;
X = -6;
Y = -53;
Z = -16;
};
exclamdown = {
V = -22;
};
f = {
AE = 45;
D = 87;
E = 84;
Eth = 85;
Etilde = 84;
F = 84;
H = 85;
K = 85;
M = 99;
N = 86;
P = 85;
R = 84;
S = 70;
Thorn = 85;
V = 149;
W = 135;
X = 122;
Z = 107;
ampersand = 20;
apostrophe = 30;
asterisk = 156;
backslash = 113;
bar = 72;
braceright = 100;
bracketright = 103;
exclam = 73;
icircumflex = 26;
igrave = 57;
jcircumflex = 23;
lslash = 23;
parenright = 73;
question = 113;
slash = 10;
space = 34;
trademark = 135;
};
f_f = {
icircumflex = 26;
igrave = 57;
jcircumflex = 23;
lslash = 23;
napostrophe = 196;
};
f_f_i = {
napostrophe = 6;
};
f_f_j = {
b = 15;
h = 6;
hbar = 6;
hcircumflex = 6;
napostrophe = 44;
thorn = 19;
};
f_f_k = {
y = 1;
yacute = 1;
ycircumflex = 1;
ydieresis = 1;
};
f_f_l = {
napostrophe = 8;
};
f_i = {
napostrophe = 6;
};
f_j = {
b = 16;
h = 6;
hbar = 6;
hcircumflex = 6;
napostrophe = 44;
thorn = 18;
};
f_k = {
y = 1;
yacute = 1;
ycircumflex = 1;
ydieresis = 1;
};
f_l = {
c.salt = -6;
q = -6;
v = -15;
};
f_t = {
napostrophe = 20;
};
five = {
AE = -14;
four = 25;
};
four = {
A = 13;
AE = 18;
four = 16;
};
fraction = {
four = -22;
nine = 15;
one = -18;
seven = -20;
six = -13;
};
g = {
AE = 45;
Eth = -7;
V = -75;
W = -78;
Z = 9;
apostrophe = -12;
f_b = 18;
f_f_b = 14;
f_f_i = 15;
f_f_j = 11;
f_f_k = 11;
f_h = 20;
f_i = 19;
f_j = 18;
f_k = 20;
f_l = 17;
f_t = 18;
icircumflex = 10;
idieresis = 11;
itilde = 18;
lslash = 34;
quotedblbase = 15;
quotesinglbase = 15;
};
g.salt = {
backslash = -34;
braceright = 36;
bracketright = 33;
c.salt = -10;
lslash = 17;
parenright = 13;
q = -9;
slash = 9;
t_z = 1;
v = 5;
};
gbreve = {
f_b = 18;
f_f_b = 14;
f_f_i = 15;
f_f_j = 11;
f_f_k = 11;
f_h = 20;
f_i = 19;
f_j = 18;
f_k = 20;
f_l = 17;
f_t = 18;
idieresis = 11;
quotedblbase = 15;
quotesinglbase = 15;
};
gcircumflex = {
f_b = 18;
f_f_b = 14;
f_f_i = 15;
f_f_j = 11;
f_f_k = 11;
f_h = 20;
f_i = 19;
f_j = 18;
f_k = 20;
f_l = 17;
f_t = 18;
quotedblbase = 15;
quotesinglbase = 15;
};
gcommaaccent = {
f_b = 18;
f_f_b = 14;
f_f_i = 15;
f_f_j = 11;
f_f_k = 11;
f_h = 20;
f_i = 19;
f_j = 18;
f_k = 20;
f_l = 17;
f_t = 18;
imacron = 12;
quotedblbase = 15;
quotesinglbase = 15;
};
gdotaccent = {
f_b = 18;
f_f_b = 14;
f_f_i = 15;
f_f_j = 11;
f_f_k = 11;
f_h = 20;
f_i = 19;
f_j = 18;
f_k = 20;
f_l = 17;
f_t = 18;
quotedblbase = 15;
quotesinglbase = 15;
};
germandbls = {
AE = 7;
M = -12;
U = -33;
V = -89;
W = -91;
Y = -90;
backslash = -31;
p = -13;
question = -20;
space = -18;
v = -62;
};
h = {
AE = 16;
V = -150;
W = -168;
apostrophe = -54;
};
i = {
AE = 57;
V = -88;
W = -95;
lslash = 33;
};
idieresis = {
question = 18;
};
iogonek = {
j = 97;
};
itilde = {
question = 30;
};
j = {
apostrophe = -10;
};
k = {
AE = 31;
V = -76;
W = -83;
apostrophe = -46;
asterisk = -19;
backslash = -32;
lslash = 7;
schwa = -7;
};
k.salt = {
apostrophe = -63;
schwa = -14;
};
l = {
AE = 55;
V = -13;
W = -16;
lslash = 30;
periodcentered = -53;
};
l_l = {
napostrophe = 6;
v = -7;
};
lcaron = {
asterisk = 65;
b = 151;
backslash = 70;
braceright = 75;
bracketright = 77;
h = 135;
k = 125;
k.salt = 123;
l = 117;
l_l = 117;
parenright = 40;
question = 19;
quotedbl = 51;
quotedblleft = 57;
quotedblright = 51;
quoteleft = 57;
quoteright = 51;
quotesingle = 51;
thorn = 151;
trademark = 68;
};
ldot = {
f_b = 7;
f_h = 8;
f_i = 8;
f_j = 7;
f_k = 8;
f_l = 9;
f_t = 7;
t_t = 20;
t_z = 22;
};
lslash = {
a.salt = 14;
f = 34;
f_b = 38;
f_f = 58;
f_f_b = 63;
f_f_h = 62;
f_f_i = 65;
f_f_j = 65;
f_f_k = 65;
f_f_l = 58;
f_h = 41;
f_i = 39;
f_j = 38;
f_k = 55;
f_l = 37;
f_t = 52;
germandbls = 39;
guillemotright = 13;
guilsinglright = 13;
h = 36;
i = 13;
ij = 13;
j = 18;
k = 38;
k.salt = 36;
l = 39;
l_l = 39;
lslash = 31;
m = 6;
n = 23;
p = 23;
question = 32;
r = 24;
t = 41;
t_t = 41;
t_z = 12;
u = 51;
v = 28;
w = 33;
x = 26;
y = 12;
z = 7;
zacute = 7;
zdotaccent = 7;
};
m = {
AE = 60;
V = -138;
W = -155;
apostrophe = -12;
backslash = -63;
braceright = 18;
bracketright = 18;
lslash = 35;
parenright = 19;
question = -14;
slash = 23;
trademark = -11;
v = -41;
};
minus = {
seven = -17;
};
n = {
AE = 54;
V = -141;
W = -158;
apostrophe = -14;
lslash = 33;
};
nine = {
A = -33;
AE = -53;
J = -19;
braceright = -13;
bracketright = -13;
fraction = -31;
parenright = -12;
seven = -14;
slash = -34;
};
numbersign = {
one = -19;
seven = -22;
};
o = {
AE = -7;
M = -20;
V = -113;
W = -125;
X = -10;
Z = -18;
apostrophe = -21;
};
one = {
A = 39;
AE = 43;
U = -13;
X = 18;
cent = -15;
fraction = 9;
seven = 8;
};
p = {
AE = -5;
M = -16;
V = -110;
W = -121;
X = -10;
Z = -17;
apostrophe = -17;
backslash = -59;
braceright = -14;
bracketright = -14;
question = -21;
trademark = -16;
};
parenleft = {
V = 30;
X = 6;
c.salt = -17;
four = -16;
k = 34;
k.salt = 33;
kcommaaccent = 33;
lslash = 20;
q = -16;
six = -13;
v = -24;
};
parenright = {
braceright = -13;
bracketright = -14;
};
periodcentered = {
L = -10;
l = -53;
one = -12;
seven = -14;
};
plus = {
seven = -17;
};
q = {
M = -6;
V = -68;
W = -79;
Z = -9;
backslash = -35;
lslash = 7;
thorn = 20;
};
questiondown = {
V = -44;
X = 18;
germandbls = 6;
lslash = 1;
v = -21;
};
quotedbl = {
k = 26;
k.salt = 23;
kcommaaccent = 23;
lslash = 10;
};
quotedblbase = {
A = 8;
AE = 11;
AEacute = 11;
Aacute = 8;
Abreve = 8;
Acircumflex = 8;
Adieresis = 8;
Agrave = 8;
Amacron = 8;
Aogonek = 8;
Aring = 8;
Aringacute = 5;
Atilde = 8;
j = 45;
jcircumflex = 45;
};
quotedblleft = {
k = 29;
k.salt = 27;
kcommaaccent = 27;
lslash = 14;
};
quotedblright = {
k = 30;
k.salt = 28;
kcommaaccent = 28;
lslash = 17;
};
quoteleft = {
k = 29;
k.salt = 27;
kcommaaccent = 27;
lslash = 14;
};
quoteright = {
at = -19;
k = 30;
k.salt = 28;
kcommaaccent = 28;
lslash = 17;
registered = -18;
slash = -54;
space = -30;
};
quotesinglbase = {
A = 8;
AE = 11;
AEacute = 11;
Aacute = 8;
Abreve = 8;
Acircumflex = 8;
Adieresis = 8;
Agrave = 8;
Amacron = 8;
Aogonek = 8;
Aring = 8;
Aringacute = 5;
Atilde = 8;
j = 45;
jcircumflex = 45;
};
quotesingle = {
k = 27;
k.salt = 24;
kcommaaccent = 24;
lslash = 10;
};
r = {
AE = -7;
M = -22;
S = -8;
V = -89;
W = -100;
X = -16;
Z = -24;
};
registered = {
M = -15;
V = -47;
quoteright = -14;
};
s = {
M = -16;
V = -89;
W = -99;
Z = -5;
};
s.salt = {
backslash = -45;
};
semicolon = {
j = 38;
jcircumflex = 38;
};
seven = {
A = -57;
AE = -83;
B = 12;
D = 11;
E = 12;
Eth = 10;
F = 12;
H = 14;
J = -44;
K = 15;
K.salt = 14;
L = 17;
M = 20;
N = 19;
P = 11;
R = 11;
R.salt = 10;
T = 40;
Thorn = 11;
U = 37;
V = 76;
W = 84;
X = 45;
Y = 82;
backslash = 32;
braceright = 36;
bracketright = 38;
cent = -26;
degree = 13;
four = -45;
fraction = -70;
hyphen = -36;
minus = -14;
numbersign = -41;
one = 32;
periodcentered = -20;
seven = 16;
six = -31;
slash = -71;
};
six = {
A = 15;
AE = 15;
J = 24;
T = -30;
V = -15;
W = -13;
Y = -14;
backslash = -23;
four = 30;
nine = -20;
};
slash = {
V = 36;
a.salt = -49;
c.salt = -61;
f = -13;
four = -47;
k = 39;
k.salt = 38;
kcommaaccent = 38;
lslash = 27;
m = -36;
p = -25;
q = -62;
s.salt = -57;
six = -34;
slash = -203;
v = -33;
x = -22;
};
space = {
Aringacute = -39;
V = -31;
quoteright = -30;
v = -23;
};
t = {
AE = 5;
M = -11;
V = -84;
W = -86;
apostrophe = -31;
};
t_t = {
c.salt = -6;
q = -5;
};
tcaron = {
f_f = 16;
f_f_b = 13;
f_f_h = 20;
f_f_i = 16;
f_f_j = 17;
f_f_k = 17;
f_f_l = 16;
f_k = 7;
i = 8;
iacute = 8;
ij = 8;
j = 17;
m = 8;
n = 11;
ncaron = 11;
p = 20;
r = 13;
t = 19;
t_t = 19;
t_z = 16;
tcaron = 19;
u = 23;
uacute = 23;
uring = 23;
v = 8;
x = 12;
y = 13;
yacute = 13;
};
three = {
AE = -24;
Y = 17;
four = 8;
};
trademark = {
M = 15;
V = 51;
X = 38;
c.salt = -13;
icircumflex = 12;
idieresis = 13;
imacron = 17;
itilde = 23;
k = 59;
k.salt = 58;
kcommaaccent = 58;
lslash = 41;
p = 7;
q = -10;
};
two = {
A = 12;
AE = 14;
J = 17;
};
u = {
AE = 58;
V = -124;
W = -138;
lslash = 33;
};
uni015E = {
k = 28;
k.salt = 26;
};
uni0162 = {
abreve = -96;
acircumflex = -82;
icircumflex = -6;
k = 47;
k.salt = 46;
};
uni0218 = {
k = 28;
k.salt = 26;
};
uni021A = {
abreve = -96;
acircumflex = -82;
icircumflex = -6;
k = 47;
k.salt = 46;
};
uogonek = {
j = 122;
};
v = {
AE = -67;
J = -23;
M = -21;
S = -11;
V = -71;
W = -74;
X = -50;
Z = -37;
backslash = -34;
braceright = -33;
bracketright = -27;
f_f_b = 1;
f_f_i = 1;
m = 13;
p = 24;
parenright = -22;
slash = -26;
space = -21;
v = 7;
x = 18;
};
w = {
AE = -72;
J = -21;
M = -20;
S = -11;
V = -76;
W = -78;
X = -54;
Z = -38;
};
x = {
AE = 19;
M = -10;
V = -97;
W = -105;
backslash = -54;
c.salt = -5;
lslash = 6;
q = -6;
question = -15;
};
y = {
AE = -70;
J = -22;
M = -36;
S = -25;
V = -91;
W = -93;
X = -60;
Z = -52;
lslash = -7;
};
z = {
M = -16;
V = -98;
W = -109;
};
zero = {
AE = -20;
braceright = -15;
bracketright = -16;
};
};
m01 = {
"@MMK_L_AE" = {
"@MMK_R_b" = 22;
"@MMK_R_p" = -5;
"@MMK_R_u" = -5;
"@MMK_R_v" = -15;
"@MMK_R_w" = -17;
"@MMK_R_y" = -11;
};
"@MMK_L_Aacute" = {
"@MMK_R_C" = -24;
"@MMK_R_T" = -37;
"@MMK_R_U" = -38;
"@MMK_R_V" = -93;
"@MMK_R_W" = -100;
"@MMK_R_Y" = -85;
"@MMK_R_a" = -9;
"@MMK_R_a.salt" = -10;
"@MMK_R_asterisk" = -21;
"@MMK_R_backslash" = -53;
"@MMK_R_braceright" = 61;
"@MMK_R_bracketright" = 60;
"@MMK_R_c" = -27;
"@MMK_R_c.salt" = -28;
"@MMK_R_d" = -25;
"@MMK_R_g" = 17;
"@MMK_R_parenright" = 7;
"@MMK_R_q" = -14;
"@MMK_R_quotedbl" = -24;
"@MMK_R_quotedblleft" = -26;
"@MMK_R_quoteright" = -24;
"@MMK_R_space" = -28;
"@MMK_R_t" = -24;
"@MMK_R_trademark" = -20;
"@MMK_R_u" = -32;
"@MMK_R_v" = -50;
"@MMK_R_w" = -63;
"@MMK_R_y" = -21;
};
"@MMK_L_B" = {
"@MMK_R_AE" = -26;
"@MMK_R_Aacute" = -9;
"@MMK_R_B" = -14;
"@MMK_R_U" = -16;
"@MMK_R_W" = -15;
"@MMK_R_Y" = -17;
"@MMK_R_dotlessi" = -7;
"@MMK_R_dotlessj" = -8;
"@MMK_R_eng" = -7;
"@MMK_R_f" = -10;
"@MMK_R_f_f" = -11;
"@MMK_R_g" = -8;
"@MMK_R_l" = -6;
"@MMK_R_r" = -7;
"@MMK_R_u" = -6;
"@MMK_R_w" = -20;
"@MMK_R_y" = -17;
};
"@MMK_L_C" = {
"@MMK_R_AE" = -19;
"@MMK_R_b" = 51;
"@MMK_R_g" = -14;
"@MMK_R_y" = -12;
"@MMK_R_z" = -6;
};
"@MMK_L_D" = {
"@MMK_R_AE" = -54;
"@MMK_R_Aacute" = -32;
"@MMK_R_B" = -17;
"@MMK_R_J" = -8;
"@MMK_R_M" = -16;
"@MMK_R_U" = -19;
"@MMK_R_V" = -21;
"@MMK_R_W" = -21;
"@MMK_R_X" = -35;
"@MMK_R_Y" = -38;
"@MMK_R_Z" = -6;
"@MMK_R_a" = -9;
"@MMK_R_a.salt" = -5;
"@MMK_R_backslash" = -13;
"@MMK_R_braceright" = -23;
"@MMK_R_bracketright" = -24;
"@MMK_R_c" = -6;
"@MMK_R_c.salt" = -6;
"@MMK_R_comma" = -23;
"@MMK_R_d" = -6;
"@MMK_R_g" = -17;
"@MMK_R_germandbls" = -12;
"@MMK_R_l" = -12;
"@MMK_R_one" = -19;
"@MMK_R_parenright" = -16;
"@MMK_R_q" = -8;
"@MMK_R_s" = -8;
"@MMK_R_s.salt" = -5;
"@MMK_R_seven" = -20;
"@MMK_R_slash" = -22;
};
"@MMK_L_Eng" = {
"@MMK_R_AE" = -14;
"@MMK_R_C" = -11;
"@MMK_R_J" = -17;
"@MMK_R_S" = -11;
"@MMK_R_a" = -29;
"@MMK_R_a.salt" = -30;
"@MMK_R_ampersand" = -17;
"@MMK_R_b" = 91;
"@MMK_R_c" = -26;
"@MMK_R_c.salt" = -25;
"@MMK_R_comma" = -12;
"@MMK_R_d" = -23;
"@MMK_R_dotlessi" = -14;
"@MMK_R_dotlessj" = -13;
"@MMK_R_emdash" = -12;
"@MMK_R_eng" = -13;
"@MMK_R_f" = -16;
"@MMK_R_f_f" = -20;
"@MMK_R_g" = -34;
"@MMK_R_germandbls" = 42;
"@MMK_R_l" = 37;
"@MMK_R_m" = -14;
"@MMK_R_p" = -15;
"@MMK_R_q" = -24;
"@MMK_R_r" = -13;
"@MMK_R_registered" = -23;
"@MMK_R_s" = -24;
"@MMK_R_s.salt" = -19;
"@MMK_R_slash" = -17;
"@MMK_R_t" = -12;
"@MMK_R_u" = -13;
"@MMK_R_v" = -19;
"@MMK_R_w" = -22;
"@MMK_R_x" = -11;
"@MMK_R_y" = -20;
"@MMK_R_z" = -30;
};
"@MMK_L_F" = {
"@MMK_R_AE" = -70;
"@MMK_R_Aacute" = -67;
"@MMK_R_J" = -53;
"@MMK_R_W" = 33;
"@MMK_R_Y" = 25;
"@MMK_R_a" = -54;
"@MMK_R_b" = 93;
"@MMK_R_c" = -47;
"@MMK_R_comma" = -39;
"@MMK_R_d" = -46;
"@MMK_R_dotlessi" = -16;
"@MMK_R_emdash" = -11;
"@MMK_R_eng" = -27;
"@MMK_R_f" = -18;
"@MMK_R_f_f" = -15;
"@MMK_R_g" = -69;
"@MMK_R_germandbls" = 43;
"@MMK_R_l" = 41;
"@MMK_R_r" = -25;
"@MMK_R_s" = -50;
"@MMK_R_u" = -26;
"@MMK_R_w" = -29;
"@MMK_R_y" = -34;
"@MMK_R_z" = -37;
};
"@MMK_L_G" = {
"@MMK_R_b" = 40;
"@MMK_R_g" = -9;
"@MMK_R_y" = -14;
};
"@MMK_L_H" = {
"@MMK_R_C" = -15;
"@MMK_R_J" = -10;
"@MMK_R_a" = -15;
"@MMK_R_a.salt" = -16;
"@MMK_R_ampersand" = -15;
"@MMK_R_b" = 76;
"@MMK_R_braceright" = 10;
"@MMK_R_bracketright" = 9;
"@MMK_R_c" = -29;
"@MMK_R_c.salt" = -29;
"@MMK_R_d" = -26;
"@MMK_R_dotlessi" = -7;
"@MMK_R_dotlessj" = -13;
"@MMK_R_emdash" = -16;
"@MMK_R_eng" = -11;
"@MMK_R_g" = -5;
"@MMK_R_germandbls" = 27;
"@MMK_R_guillemotleft" = -11;
"@MMK_R_l" = 25;
"@MMK_R_m" = -6;
"@MMK_R_p" = -15;
"@MMK_R_q" = -26;
"@MMK_R_r" = -6;
"@MMK_R_registered" = -19;
"@MMK_R_s.salt" = -15;
"@MMK_R_t" = -15;
"@MMK_R_u" = -20;
"@MMK_R_v" = -27;
"@MMK_R_w" = -32;
"@MMK_R_y" = -24;
"@MMK_R_z" = -6;
};
"@MMK_L_I" = {
"@MMK_R_AE" = 32;
"@MMK_R_C" = -12;
"@MMK_R_b" = 71;
"@MMK_R_c" = -23;
"@MMK_R_c.salt" = -23;
"@MMK_R_d" = -21;
"@MMK_R_dotlessj" = -12;
"@MMK_R_emdash" = -13;
"@MMK_R_g" = -23;
"@MMK_R_germandbls" = 23;
"@MMK_R_l" = 20;
"@MMK_R_p" = -14;
"@MMK_R_q" = -21;
"@MMK_R_t" = -12;
"@MMK_R_u" = -12;
"@MMK_R_v" = -20;
"@MMK_R_w" = -22;
"@MMK_R_y" = -22;
};
"@MMK_L_IJ" = {
"@MMK_R_AE" = -38;
"@MMK_R_Aacute" = -23;
"@MMK_R_C" = -12;
"@MMK_R_J" = -21;
"@MMK_R_S" = -13;
"@MMK_R_a" = -33;
"@MMK_R_a.salt" = -31;
"@MMK_R_ampersand" = -17;
"@MMK_R_at" = -21;
"@MMK_R_b" = 91;
"@MMK_R_braceright" = 15;
"@MMK_R_bracketright" = 14;
"@MMK_R_c" = -29;
"@MMK_R_c.salt" = -28;
"@MMK_R_comma" = -21;
"@MMK_R_d" = -26;
"@MMK_R_dotlessi" = -12;
"@MMK_R_dotlessj" = -12;
"@MMK_R_emdash" = -10;
"@MMK_R_eng" = -12;
"@MMK_R_f" = -17;
"@MMK_R_g" = -33;
"@MMK_R_germandbls" = 41;
"@MMK_R_l" = 41;
"@MMK_R_m" = -13;
"@MMK_R_p" = -14;
"@MMK_R_q" = -27;
"@MMK_R_r" = -12;
"@MMK_R_registered" = -21;
"@MMK_R_s" = -27;
"@MMK_R_s.salt" = -22;
"@MMK_R_six" = -17;
"@MMK_R_slash" = -28;
"@MMK_R_t" = -12;
"@MMK_R_three" = -12;
"@MMK_R_u" = -12;
"@MMK_R_v" = -18;
"@MMK_R_w" = -21;
"@MMK_R_x" = -11;
"@MMK_R_y" = -21;
"@MMK_R_z" = -33;
};
"@MMK_L_K" = {
"@MMK_R_C" = -46;
"@MMK_R_a" = -12;
"@MMK_R_a.salt" = -13;
"@MMK_R_asterisk" = 15;
"@MMK_R_b" = 105;
"@MMK_R_backslash" = 22;
"@MMK_R_braceright" = 20;
"@MMK_R_bracketright" = 20;
"@MMK_R_c" = -54;
"@MMK_R_c.salt" = -56;
"@MMK_R_d" = -50;
"@MMK_R_dotlessj" = -30;
"@MMK_R_emdash" = -48;
"@MMK_R_eng" = -13;
"@MMK_R_g" = -6;
"@MMK_R_germandbls" = 52;
"@MMK_R_guillemotleft" = -49;
"@MMK_R_guillemotright" = -38;
"@MMK_R_l" = 43;
"@MMK_R_p" = -37;
"@MMK_R_parenright" = 6;
"@MMK_R_q" = -43;
"@MMK_R_quoteright" = 13;
"@MMK_R_slash" = 10;
"@MMK_R_t" = -54;
"@MMK_R_trademark" = 24;
"@MMK_R_u" = -81;
"@MMK_R_v" = -155;
"@MMK_R_w" = -172;
"@MMK_R_y" = -98;
};
"@MMK_L_K.salt" = {
"@MMK_R_AE" = 9;
"@MMK_R_C" = -25;
"@MMK_R_b" = 89;
"@MMK_R_c" = -24;
"@MMK_R_d" = -23;
"@MMK_R_dotlessj" = -40;
"@MMK_R_emdash" = -27;
"@MMK_R_g" = -20;
"@MMK_R_germandbls" = 44;
"@MMK_R_guillemotleft" = -27;
"@MMK_R_guillemotright" = -18;
"@MMK_R_l" = 32;
"@MMK_R_quoteright" = 5;
"@MMK_R_s" = -5;
"@MMK_R_t" = -28;
"@MMK_R_u" = -51;
"@MMK_R_w" = -83;
"@MMK_R_y" = -65;
};
"@MMK_L_L" = {
"@MMK_R_AE" = 6;
"@MMK_R_Aacute" = 16;
"@MMK_R_T" = -57;
"@MMK_R_U" = -25;
"@MMK_R_V" = -49;
"@MMK_R_W" = -51;
"@MMK_R_Y" = -58;
"@MMK_R_asterisk" = -40;
"@MMK_R_backslash" = -52;
"@MMK_R_dotlessj" = -13;
"@MMK_R_f_f" = -6;
"@MMK_R_p" = -16;
"@MMK_R_question" = -24;
"@MMK_R_quotedbl" = -35;
"@MMK_R_quotedblleft" = -33;
"@MMK_R_quoteright" = -34;
"@MMK_R_space" = -23;
"@MMK_R_trademark" = -34;
"@MMK_R_u" = -11;
"@MMK_R_v" = -39;
"@MMK_R_w" = -36;
"@MMK_R_y" = -38;
};
"@MMK_L_M" = {
"@MMK_R_C" = -19;
"@MMK_R_J" = -16;
"@MMK_R_a" = -24;
"@MMK_R_c" = -41;
"@MMK_R_d" = -39;
"@MMK_R_dotlessi" = -11;
"@MMK_R_dotlessj" = -25;
"@MMK_R_emdash" = -19;
"@MMK_R_eng" = -12;
"@MMK_R_f" = -7;
"@MMK_R_g" = -28;
"@MMK_R_guillemotleft" = -14;
"@MMK_R_r" = -11;
"@MMK_R_s" = -11;
"@MMK_R_t" = -34;
"@MMK_R_u" = -40;
"@MMK_R_w" = -52;
"@MMK_R_y" = -35;
"@MMK_R_z" = -12;
};
"@MMK_L_O" = {
"@MMK_R_AE" = -28;
"@MMK_R_Aacute" = -12;
"@MMK_R_B" = -11;
"@MMK_R_M" = -11;
"@MMK_R_U" = -14;
"@MMK_R_V" = -17;
"@MMK_R_W" = -15;
"@MMK_R_X" = -28;
"@MMK_R_Y" = -17;
"@MMK_R_a" = -6;
"@MMK_R_apostrophe" = -17;
"@MMK_R_braceright" = -19;
"@MMK_R_bracketright" = -21;
"@MMK_R_comma" = -16;
"@MMK_R_g" = -9;
"@MMK_R_germandbls" = -6;
"@MMK_R_l" = -6;
"@MMK_R_one" = -14;
"@MMK_R_parenright" = -12;
"@MMK_R_q" = -5;
"@MMK_R_s" = -6;
"@MMK_R_seven" = -14;
"@MMK_R_slash" = -15;
};
"@MMK_L_P" = {
"@MMK_R_AE" = -80;
"@MMK_R_Aacute" = -73;
"@MMK_R_B" = -5;
"@MMK_R_J" = -62;
"@MMK_R_a" = -51;
"@MMK_R_b" = 16;
"@MMK_R_c" = -58;
"@MMK_R_comma" = -51;
"@MMK_R_d" = -55;
"@MMK_R_emdash" = -37;
"@MMK_R_g" = -72;
"@MMK_R_s" = -49;
"@MMK_R_y" = -13;
"@MMK_R_z" = -41;
};
"@MMK_L_R" = {
"@MMK_R_C" = -6;
"@MMK_R_J" = -5;
"@MMK_R_U" = -19;
"@MMK_R_V" = -29;
"@MMK_R_W" = -31;
"@MMK_R_Y" = -38;
"@MMK_R_ampersand" = -12;
"@MMK_R_braceright" = 34;
"@MMK_R_bracketright" = 34;
"@MMK_R_c" = -35;
"@MMK_R_c.salt" = -38;
"@MMK_R_d" = -33;
"@MMK_R_dotlessj" = -5;
"@MMK_R_emdash" = -51;
"@MMK_R_p" = -12;
"@MMK_R_parenright" = 21;
"@MMK_R_q" = -25;
"@MMK_R_slash" = 24;
"@MMK_R_space" = -26;
"@MMK_R_t" = -14;
"@MMK_R_u" = -17;
"@MMK_R_v" = -37;
"@MMK_R_w" = -42;
"@MMK_R_y" = -29;
};
"@MMK_L_R.salt" = {
"@MMK_R_AE" = 33;
"@MMK_R_C" = -15;
"@MMK_R_U" = -25;
"@MMK_R_W" = -25;
"@MMK_R_Y" = -19;
"@MMK_R_c" = -24;
"@MMK_R_d" = -24;
"@MMK_R_dotlessj" = 81;
"@MMK_R_emdash" = -24;
"@MMK_R_guillemotleft" = -13;
"@MMK_R_t" = -12;
"@MMK_R_u" = -14;
"@MMK_R_w" = -28;
"@MMK_R_y" = -28;
};
"@MMK_L_S" = {
"@MMK_R_AE" = -10;
"@MMK_R_W" = 7;
"@MMK_R_b" = 65;
"@MMK_R_c" = -5;
"@MMK_R_c.salt" = -5;
"@MMK_R_g" = -25;
"@MMK_R_germandbls" = 16;
"@MMK_R_l" = 15;
"@MMK_R_m" = -6;
"@MMK_R_p" = -7;
"@MMK_R_s.salt" = -5;
"@MMK_R_v" = -7;
"@MMK_R_w" = -7;
"@MMK_R_y" = -20;
"@MMK_R_z" = -11;
};
"@MMK_L_T" = {
"@MMK_R_AE" = -74;
"@MMK_R_Aacute" = -42;
"@MMK_R_J" = -60;
"@MMK_R_V" = 25;
"@MMK_R_W" = 29;
"@MMK_R_Y" = 21;
"@MMK_R_a" = -111;
"@MMK_R_a.salt" = -87;
"@MMK_R_ampersand" = -19;
"@MMK_R_asterisk" = 8;
"@MMK_R_b" = 87;
"@MMK_R_braceright" = 7;
"@MMK_R_bracketright" = 10;
"@MMK_R_c" = -132;
"@MMK_R_c.salt" = -132;
"@MMK_R_colon" = -21;
"@MMK_R_comma" = -20;
"@MMK_R_d" = -101;
"@MMK_R_dotlessi" = -34;
"@MMK_R_dotlessj" = -33;
"@MMK_R_emdash" = -51;
"@MMK_R_eng" = -79;
"@MMK_R_f" = -31;
"@MMK_R_f_f" = -31;
"@MMK_R_g" = -139;
"@MMK_R_germandbls" = 38;
"@MMK_R_guillemotleft" = -19;
"@MMK_R_l" = 37;
"@MMK_R_m" = -79;
"@MMK_R_p" = -81;
"@MMK_R_q" = -128;
"@MMK_R_r" = -76;
"@MMK_R_registered" = -45;
"@MMK_R_s" = -102;
"@MMK_R_s.salt" = -106;
"@MMK_R_slash" = -29;
"@MMK_R_space" = -26;
"@MMK_R_t" = -26;
"@MMK_R_u" = -73;
"@MMK_R_v" = -84;
"@MMK_R_w" = -82;
"@MMK_R_x" = -87;
"@MMK_R_y" = -91;
"@MMK_R_z" = -92;
};
"@MMK_L_Thorn" = {
"@MMK_R_AE" = -80;
"@MMK_R_Aacute" = -46;
"@MMK_R_B" = -24;
"@MMK_R_J" = -30;
"@MMK_R_U" = -21;
"@MMK_R_W" = -33;
"@MMK_R_Y" = -63;
"@MMK_R_Z" = -10;
"@MMK_R_a" = -5;
"@MMK_R_c" = -5;
"@MMK_R_comma" = -35;
"@MMK_R_g" = -12;
"@MMK_R_germandbls" = -8;
"@MMK_R_l" = -8;
"@MMK_R_quotedbl" = -14;
"@MMK_R_quotedblleft" = -30;
"@MMK_R_quoteright" = -21;
};
"@MMK_L_U" = {
"@MMK_R_AE" = -55;
"@MMK_R_Aacute" = -34;
"@MMK_R_B" = -5;
"@MMK_R_C" = -10;
"@MMK_R_J" = -21;
"@MMK_R_S" = -7;
"@MMK_R_U" = -7;
"@MMK_R_a" = -34;
"@MMK_R_a.salt" = -32;
"@MMK_R_ampersand" = -15;
"@MMK_R_asterisk" = 30;
"@MMK_R_b" = -13;
"@MMK_R_c" = -29;
"@MMK_R_c.salt" = -29;
"@MMK_R_comma" = -23;
"@MMK_R_d" = -29;
"@MMK_R_dotlessi" = -13;
"@MMK_R_dotlessj" = -12;
"@MMK_R_eng" = -12;
"@MMK_R_f" = -18;
"@MMK_R_g" = -35;
"@MMK_R_germandbls" = -19;
"@MMK_R_l" = -18;
"@MMK_R_m" = -13;
"@MMK_R_p" = -14;
"@MMK_R_q" = -30;
"@MMK_R_r" = -13;
"@MMK_R_registered" = -20;
"@MMK_R_s" = -30;
"@MMK_R_s.salt" = -25;
"@MMK_R_slash" = -30;
"@MMK_R_t" = -12;
"@MMK_R_u" = -12;
"@MMK_R_v" = -18;
"@MMK_R_w" = -21;
"@MMK_R_x" = -12;
"@MMK_R_y" = -21;
"@MMK_R_z" = -34;
};
"@MMK_L_V" = {
"@MMK_R_AE" = -108;
"@MMK_R_Aacute" = -66;
"@MMK_R_C" = -7;
"@MMK_R_J" = -51;
"@MMK_R_T" = 34;
"@MMK_R_a" = -115;
"@MMK_R_c" = -115;
"@MMK_R_colon" = -20;
"@MMK_R_comma" = -45;
"@MMK_R_d" = -114;
"@MMK_R_dotlessi" = -67;
"@MMK_R_dotlessj" = -68;
"@MMK_R_emdash" = -27;
"@MMK_R_eng" = -66;
"@MMK_R_f" = -43;
"@MMK_R_f_f" = -58;
"@MMK_R_g" = -137;
"@MMK_R_germandbls" = -15;
"@MMK_R_guillemotleft" = -13;
"@MMK_R_l" = -14;
"@MMK_R_quotedbl" = 28;
"@MMK_R_quotedblleft" = 36;
"@MMK_R_quoteright" = 25;
"@MMK_R_r" = -65;
"@MMK_R_s" = -114;
"@MMK_R_t" = -59;
"@MMK_R_u" = -63;
"@MMK_R_w" = -75;
"@MMK_R_y" = -74;
"@MMK_R_z" = -100;
};
"@MMK_L_W" = {
"@MMK_R_AE" = -103;
"@MMK_R_Aacute" = -60;
"@MMK_R_C" = -9;
"@MMK_R_J" = -52;
"@MMK_R_T" = 27;
"@MMK_R_a" = -114;
"@MMK_R_a.salt" = -97;
"@MMK_R_asterisk" = 62;
"@MMK_R_backslash" = 28;
"@MMK_R_braceright" = 8;
"@MMK_R_bracketright" = 11;
"@MMK_R_c" = -115;
"@MMK_R_c.salt" = -115;
"@MMK_R_colon" = -20;
"@MMK_R_comma" = -45;
"@MMK_R_d" = -114;
"@MMK_R_dotlessi" = -68;
"@MMK_R_dotlessj" = -69;
"@MMK_R_emdash" = -28;
"@MMK_R_eng" = -68;
"@MMK_R_f" = -44;
"@MMK_R_f_f" = -56;
"@MMK_R_g" = -136;
"@MMK_R_germandbls" = -15;
"@MMK_R_guillemotleft" = -14;
"@MMK_R_l" = -15;
"@MMK_R_m" = -68;
"@MMK_R_p" = -72;
"@MMK_R_q" = -118;
"@MMK_R_question" = 6;
"@MMK_R_quotedbl" = 21;
"@MMK_R_quotedblleft" = 27;
"@MMK_R_quoteright" = 8;
"@MMK_R_r" = -67;
"@MMK_R_registered" = -50;
"@MMK_R_s" = -114;
"@MMK_R_s.salt" = -109;
"@MMK_R_slash" = -55;
"@MMK_R_space" = -26;
"@MMK_R_t" = -61;
"@MMK_R_trademark" = 50;
"@MMK_R_u" = -65;
"@MMK_R_v" = -74;
"@MMK_R_w" = -77;
"@MMK_R_x" = -77;
"@MMK_R_y" = -76;
"@MMK_R_z" = -100;
};
"@MMK_L_X" = {
"@MMK_R_C" = -31;
"@MMK_R_b" = 98;
"@MMK_R_c" = -28;
"@MMK_R_d" = -24;
"@MMK_R_emdash" = -28;
"@MMK_R_g" = 6;
"@MMK_R_germandbls" = 42;
"@MMK_R_guillemotleft" = -28;
"@MMK_R_guillemotright" = -15;
"@MMK_R_l" = 44;
"@MMK_R_t" = -33;
"@MMK_R_u" = -54;
"@MMK_R_w" = -114;
"@MMK_R_y" = -41;
};
"@MMK_L_Y" = {
"@MMK_R_AE" = -88;
"@MMK_R_Aacute" = -63;
"@MMK_R_C" = -12;
"@MMK_R_J" = -59;
"@MMK_R_T" = 34;
"@MMK_R_a" = -137;
"@MMK_R_a.salt" = -119;
"@MMK_R_asterisk" = 58;
"@MMK_R_b" = 7;
"@MMK_R_backslash" = 40;
"@MMK_R_braceright" = 24;
"@MMK_R_bracketright" = 24;
"@MMK_R_c" = -162;
"@MMK_R_c.salt" = -163;
"@MMK_R_colon" = -16;
"@MMK_R_comma" = -15;
"@MMK_R_d" = -88;
"@MMK_R_dotlessi" = -91;
"@MMK_R_dotlessj" = -88;
"@MMK_R_emdash" = -44;
"@MMK_R_eng" = -92;
"@MMK_R_f" = -50;
"@MMK_R_g" = -157;
"@MMK_R_guillemotleft" = -29;
"@MMK_R_guillemotright" = -18;
"@MMK_R_m" = -102;
"@MMK_R_p" = -102;
"@MMK_R_parenright" = 17;
"@MMK_R_q" = -158;
"@MMK_R_question" = 11;
"@MMK_R_quotedbl" = 28;
"@MMK_R_quotedblleft" = 36;
"@MMK_R_quoteright" = 10;
"@MMK_R_r" = -92;
"@MMK_R_registered" = -56;
"@MMK_R_s" = -118;
"@MMK_R_s.salt" = -131;
"@MMK_R_slash" = -27;
"@MMK_R_space" = -27;
"@MMK_R_t" = -88;
"@MMK_R_trademark" = 56;
"@MMK_R_u" = -97;
"@MMK_R_v" = -97;
"@MMK_R_w" = -103;
"@MMK_R_x" = -95;
"@MMK_R_y" = -100;
"@MMK_R_z" = -112;
};
"@MMK_L_Z" = {
"@MMK_R_b" = 54;
"@MMK_R_dotlessj" = -5;
"@MMK_R_f_f" = -5;
"@MMK_R_germandbls" = 11;
"@MMK_R_p" = -10;
"@MMK_R_u" = -6;
"@MMK_R_v" = -18;
"@MMK_R_w" = -21;
"@MMK_R_y" = -16;
};
"@MMK_L_a" = {
"@MMK_R_T" = -80;
"@MMK_R_U" = -11;
"@MMK_R_Y" = -104;
"@MMK_R_backslash" = -39;
"@MMK_R_parenright" = 16;
"@MMK_R_slash" = 23;
"@MMK_R_v" = -13;
"@MMK_R_w" = -17;
};
"@MMK_L_a.salt" = {
"@MMK_R_w" = -36;
"@MMK_R_y" = -6;
};
"@MMK_L_ae" = {
"@MMK_R_B" = -20;
"@MMK_R_M" = -22;
"@MMK_R_T" = -120;
"@MMK_R_U" = -34;
"@MMK_R_V" = -114;
"@MMK_R_W" = -122;
"@MMK_R_X" = -7;
"@MMK_R_Y" = -146;
"@MMK_R_Z" = -7;
"@MMK_R_backslash" = -57;
"@MMK_R_braceright" = -20;
"@MMK_R_bracketright" = -17;
"@MMK_R_question" = -17;
"@MMK_R_trademark" = -16;
"@MMK_R_w" = -10;
"@MMK_R_x" = -22;
};
"@MMK_L_ampersand" = {
"@MMK_R_AE" = 91;
"@MMK_R_Aacute" = 101;
"@MMK_R_B" = 21;
"@MMK_R_C" = -22;
"@MMK_R_J" = 12;
"@MMK_R_S" = 6;
"@MMK_R_T" = -35;
"@MMK_R_U" = -38;
"@MMK_R_W" = -56;
"@MMK_R_Y" = -36;
"@MMK_R_Z" = 32;
"@MMK_R_dotlessi" = 26;
"@MMK_R_eng" = 18;
"@MMK_R_germandbls" = 51;
"@MMK_R_l" = 50;
"@MMK_R_quotedbl" = -41;
"@MMK_R_r" = 21;
"@MMK_R_s" = 8;
"@MMK_R_w" = -27;
"@MMK_R_y" = -14;
"@MMK_R_z" = 24;
};
"@MMK_L_apostrophe" = {
"@MMK_R_c" = -22;
"@MMK_R_g" = -47;
};
"@MMK_L_asterisk" = {
"@MMK_R_AE" = -69;
"@MMK_R_Aacute" = -27;
"@MMK_R_J" = -32;
"@MMK_R_T" = 8;
"@MMK_R_W" = 18;
"@MMK_R_Y" = 9;
"@MMK_R_b" = 48;
"@MMK_R_c" = -10;
"@MMK_R_d" = -24;
"@MMK_R_g" = -29;
};
"@MMK_L_at" = {
"@MMK_R_B" = -16;
"@MMK_R_quotedbl" = -12;
};
"@MMK_L_b" = {
"@MMK_R_AE" = -7;
"@MMK_R_B" = -21;
"@MMK_R_M" = -23;
"@MMK_R_T" = -131;
"@MMK_R_U" = -31;
"@MMK_R_V" = -121;
"@MMK_R_W" = -130;
"@MMK_R_X" = -11;
"@MMK_R_Y" = -155;
"@MMK_R_Z" = -14;
"@MMK_R_asterisk" = -46;
"@MMK_R_backslash" = -60;
"@MMK_R_braceright" = -25;
"@MMK_R_bracketright" = -23;
"@MMK_R_f_f" = -6;
"@MMK_R_question" = -23;
"@MMK_R_quotedbl" = -48;
"@MMK_R_quotedblleft" = -48;
"@MMK_R_quoteright" = -48;
"@MMK_R_trademark" = -30;
"@MMK_R_v" = -13;
"@MMK_R_w" = -20;
"@MMK_R_x" = -33;
};
"@MMK_L_backslash" = {
"@MMK_R_AE" = 49;
"@MMK_R_Aacute" = 58;
"@MMK_R_C" = -15;
"@MMK_R_T" = -34;
"@MMK_R_U" = -32;
"@MMK_R_W" = -62;
"@MMK_R_Y" = -36;
"@MMK_R_germandbls" = 14;
"@MMK_R_l" = 12;
"@MMK_R_quotedbl" = -54;
"@MMK_R_w" = -29;
"@MMK_R_y" = -14;
};
"@MMK_L_bar" = {
"@MMK_R_b" = 17;
"@MMK_R_dotlessj" = 61;
};
"@MMK_L_braceleft" = {
"@MMK_R_AE" = 19;
"@MMK_R_Aacute" = 27;
"@MMK_R_B" = 12;
"@MMK_R_C" = -20;
"@MMK_R_J" = -12;
"@MMK_R_T" = 8;
"@MMK_R_U" = 15;
"@MMK_R_W" = 47;
"@MMK_R_Y" = 36;
"@MMK_R_a" = -12;
"@MMK_R_b" = 76;
"@MMK_R_c" = -22;
"@MMK_R_d" = -21;
"@MMK_R_germandbls" = 30;
"@MMK_R_l" = 30;
"@MMK_R_u" = -14;
"@MMK_R_w" = -25;
};
"@MMK_L_bracketleft" = {
"@MMK_R_AE" = 19;
"@MMK_R_Aacute" = 27;
"@MMK_R_B" = 11;
"@MMK_R_C" = -21;
"@MMK_R_J" = -13;
"@MMK_R_T" = 10;
"@MMK_R_U" = 13;
"@MMK_R_W" = 47;
"@MMK_R_Y" = 36;
"@MMK_R_a" = -12;
"@MMK_R_b" = 76;
"@MMK_R_c" = -23;
"@MMK_R_d" = -21;
"@MMK_R_germandbls" = 30;
"@MMK_R_l" = 30;
"@MMK_R_u" = -14;
"@MMK_R_w" = -24;
};
"@MMK_L_c" = {
"@MMK_R_B" = -13;
"@MMK_R_T" = -82;
"@MMK_R_U" = -30;
"@MMK_R_Y" = -118;
"@MMK_R_backslash" = -34;
"@MMK_R_braceright" = -14;
};
"@MMK_L_c_h" = {
"@MMK_R_B" = -11;
"@MMK_R_C" = -8;
"@MMK_R_T" = -133;
"@MMK_R_U" = -51;
"@MMK_R_Y" = -157;
"@MMK_R_asterisk" = -39;
"@MMK_R_backslash" = -62;
"@MMK_R_braceright" = 35;
"@MMK_R_bracketright" = 31;
"@MMK_R_question" = -17;
"@MMK_R_quotedbl" = -40;
"@MMK_R_quotedblleft" = -41;
"@MMK_R_quoteright" = -41;
"@MMK_R_t" = -6;
"@MMK_R_trademark" = -32;
"@MMK_R_u" = -19;
"@MMK_R_v" = -40;
"@MMK_R_w" = -42;
};
"@MMK_L_c_k" = {
"@MMK_R_a" = -20;
"@MMK_R_a.salt" = -11;
"@MMK_R_ampersand" = -19;
"@MMK_R_asterisk" = -43;
"@MMK_R_b" = -5;
"@MMK_R_backslash" = -55;
"@MMK_R_braceright" = 20;
"@MMK_R_bracketright" = 18;
"@MMK_R_c" = -39;
"@MMK_R_c.salt" = -37;
"@MMK_R_d" = -29;
"@MMK_R_emdash" = -60;
"@MMK_R_guillemotright" = -13;
"@MMK_R_q" = -41;
"@MMK_R_question" = -18;
"@MMK_R_quotedbl" = -46;
"@MMK_R_quotedblleft" = -47;
"@MMK_R_quoteright" = -47;
"@MMK_R_registered" = -12;
"@MMK_R_s.salt" = -6;
"@MMK_R_trademark" = -25;
"@MMK_R_w" = -6;
};
"@MMK_L_c_p" = {
"@MMK_R_AE" = -11;
"@MMK_R_B" = -23;
"@MMK_R_M" = -24;
"@MMK_R_T" = -132;
"@MMK_R_U" = -33;
"@MMK_R_V" = -120;
"@MMK_R_W" = -128;
"@MMK_R_X" = -14;
"@MMK_R_Y" = -157;
"@MMK_R_Z" = -17;
"@MMK_R_apostrophe" = -19;
"@MMK_R_backslash" = -59;
"@MMK_R_braceright" = -25;
"@MMK_R_bracketright" = -23;
"@MMK_R_question" = -21;
"@MMK_R_trademark" = -18;
"@MMK_R_v" = -10;
"@MMK_R_w" = -17;
"@MMK_R_x" = -36;
};
"@MMK_L_c_t" = {
"@MMK_R_Aacute" = 7;
"@MMK_R_B" = -6;
"@MMK_R_T" = -94;
"@MMK_R_U" = -25;
"@MMK_R_Y" = -115;
"@MMK_R_asterisk" = -22;
"@MMK_R_backslash" = -40;
"@MMK_R_braceright" = -17;
"@MMK_R_quotedbl" = -19;
"@MMK_R_quotedblleft" = -15;
"@MMK_R_quoteright" = -17;
"@MMK_R_trademark" = -12;
};
"@MMK_L_colon" = {
"@MMK_R_AE" = 9;
"@MMK_R_Aacute" = 18;
"@MMK_R_T" = -25;
"@MMK_R_V" = -22;
"@MMK_R_W" = -24;
"@MMK_R_Y" = -21;
"@MMK_R_v" = -11;
"@MMK_R_w" = -12;
};
"@MMK_L_comma" = {
"@MMK_R_AE" = 15;
"@MMK_R_Aacute" = 24;
"@MMK_R_C" = -15;
"@MMK_R_T" = -24;
"@MMK_R_U" = -23;
"@MMK_R_V" = -45;
"@MMK_R_W" = -48;
"@MMK_R_Y" = -21;
"@MMK_R_dotlessj" = -10;
"@MMK_R_nine" = -18;
"@MMK_R_p" = -16;
"@MMK_R_quotedbl" = -81;
"@MMK_R_quotedblleft" = -76;
"@MMK_R_quoteright" = -78;
"@MMK_R_u" = -13;
"@MMK_R_v" = -50;
"@MMK_R_w" = -52;
"@MMK_R_y" = -26;
};
"@MMK_L_d" = {
"@MMK_R_T" = -17;
"@MMK_R_U" = -28;
"@MMK_R_Y" = -19;
"@MMK_R_braceright" = 29;
"@MMK_R_bracketright" = 29;
"@MMK_R_parenright" = 31;
"@MMK_R_slash" = 36;
};
"@MMK_L_dotlessi" = {
"@MMK_R_C" = -6;
"@MMK_R_T" = -27;
"@MMK_R_U" = -41;
"@MMK_R_Y" = -103;
"@MMK_R_backslash" = -28;
"@MMK_R_parenright" = 11;
"@MMK_R_slash" = 13;
"@MMK_R_v" = -7;
"@MMK_R_w" = -13;
};
"@MMK_L_dotlessj" = {
"@MMK_R_B" = -14;
"@MMK_R_M" = -16;
"@MMK_R_T" = -25;
"@MMK_R_U" = -23;
"@MMK_R_V" = -73;
"@MMK_R_W" = -76;
"@MMK_R_Y" = -100;
"@MMK_R_Z" = -5;
"@MMK_R_backslash" = -19;
"@MMK_R_dotlessj" = 62;
};
"@MMK_L_emdash" = {
"@MMK_R_AE" = -29;
"@MMK_R_Aacute" = -18;
"@MMK_R_B" = -13;
"@MMK_R_M" = -14;
"@MMK_R_T" = -50;
"@MMK_R_U" = -12;
"@MMK_R_V" = -31;
"@MMK_R_W" = -33;
"@MMK_R_X" = -25;
"@MMK_R_Y" = -45;
"@MMK_R_Z" = -14;
"@MMK_R_dotlessi" = -10;
"@MMK_R_dotlessj" = -10;
"@MMK_R_eng" = -13;
"@MMK_R_p" = -16;
"@MMK_R_r" = -11;
"@MMK_R_v" = -21;
"@MMK_R_w" = -21;
"@MMK_R_x" = -27;
"@MMK_R_y" = -22;
};
"@MMK_L_eth" = {
"@MMK_R_B" = -18;
"@MMK_R_T" = -26;
};
"@MMK_L_exclamdown" = {
"@MMK_R_U" = -19;
"@MMK_R_W" = -28;
"@MMK_R_Y" = -32;
"@MMK_R_dotlessj" = 58;
};
"@MMK_L_f" = {
"@MMK_R_B" = 91;
"@MMK_R_C" = 45;
"@MMK_R_T" = 150;
"@MMK_R_U" = 89;
"@MMK_R_Y" = 162;
"@MMK_R_c" = -7;
"@MMK_R_c.salt" = -6;
"@MMK_R_emdash" = -17;
"@MMK_R_quotedbl" = 119;
"@MMK_R_quotedblleft" = 124;
"@MMK_R_quoteright" = 121;
};
"@MMK_L_f_f_i" = {
"@MMK_R_w" = -6;
};
"@MMK_L_g" = {
"@MMK_R_C" = -9;
"@MMK_R_T" = -46;
"@MMK_R_U" = -23;
"@MMK_R_Y" = -85;
"@MMK_R_a" = -8;
"@MMK_R_a.salt" = -8;
"@MMK_R_backslash" = -16;
"@MMK_R_braceright" = 73;
"@MMK_R_bracketright" = 69;
"@MMK_R_parenright" = 31;
"@MMK_R_slash" = 33;
"@MMK_R_v" = -6;
};
"@MMK_L_germandbls" = {
"@MMK_R_B" = -7;
"@MMK_R_C" = -13;
"@MMK_R_T" = -73;
"@MMK_R_dotlessj" = -18;
"@MMK_R_f_f" = -10;
"@MMK_R_guillemotleft" = -21;
"@MMK_R_u" = -12;
"@MMK_R_w" = -64;
"@MMK_R_y" = -58;
};
"@MMK_L_guillemotleft" = {
"@MMK_R_AE" = -31;
"@MMK_R_Aacute" = -11;
"@MMK_R_X" = -14;
"@MMK_R_Y" = -21;
};
"@MMK_L_guillemotright" = {
"@MMK_R_AE" = -40;
"@MMK_R_Aacute" = -18;
"@MMK_R_M" = -10;
"@MMK_R_T" = -18;
"@MMK_R_V" = -15;
"@MMK_R_W" = -16;
"@MMK_R_X" = -27;
"@MMK_R_Y" = -32;
};
"@MMK_L_k" = {
"@MMK_R_T" = -79;
"@MMK_R_U" = -25;
"@MMK_R_Y" = -102;
"@MMK_R_c" = -21;
"@MMK_R_d" = -19;
"@MMK_R_emdash" = -19;
"@MMK_R_quotedbl" = -28;
"@MMK_R_quotedblleft" = -28;
"@MMK_R_quoteright" = -28;
};
"@MMK_L_l" = {
"@MMK_R_T" = -9;
"@MMK_R_U" = -15;
"@MMK_R_Y" = -5;
"@MMK_R_parenright" = 8;
"@MMK_R_slash" = 11;
};
"@MMK_L_m" = {
"@MMK_R_C" = -6;
"@MMK_R_T" = -107;
"@MMK_R_U" = -43;
"@MMK_R_Y" = -131;
"@MMK_R_u" = -8;
"@MMK_R_w" = -41;
"@MMK_R_y" = -5;
};
"@MMK_L_n" = {
"@MMK_R_C" = -7;
"@MMK_R_T" = -110;
"@MMK_R_U" = -45;
"@MMK_R_Y" = -134;
"@MMK_R_backslash" = -60;
"@MMK_R_braceright" = 21;
"@MMK_R_bracketright" = 21;
"@MMK_R_parenright" = 16;
"@MMK_R_question" = -15;
"@MMK_R_slash" = 21;
"@MMK_R_trademark" = -10;
"@MMK_R_u" = -9;
"@MMK_R_v" = -32;
"@MMK_R_w" = -41;
"@MMK_R_y" = -5;
};
"@MMK_L_nine" = {
"@MMK_R_B" = -13;
"@MMK_R_comma" = -36;
};
"@MMK_L_parenleft" = {
"@MMK_R_AE" = 22;
"@MMK_R_Aacute" = 32;
"@MMK_R_C" = -14;
"@MMK_R_W" = 47;
"@MMK_R_Y" = 35;
"@MMK_R_b" = 79;
"@MMK_R_c" = -16;
"@MMK_R_d" = -16;
"@MMK_R_g" = -14;
"@MMK_R_germandbls" = 28;
"@MMK_R_l" = 31;
"@MMK_R_w" = -17;
"@MMK_R_y" = -15;
};
"@MMK_L_q" = {
"@MMK_R_B" = -11;
"@MMK_R_T" = -90;
"@MMK_R_U" = -14;
"@MMK_R_Y" = -121;
};
"@MMK_L_questiondown" = {
"@MMK_R_AE" = 41;
"@MMK_R_Aacute" = 51;
"@MMK_R_C" = -12;
"@MMK_R_T" = -18;
"@MMK_R_U" = -28;
"@MMK_R_W" = -50;
"@MMK_R_Y" = -37;
"@MMK_R_dotlessj" = 82;
"@MMK_R_w" = -16;
};
"@MMK_L_quotedbl" = {
"@MMK_R_AE" = -67;
"@MMK_R_Aacute" = -30;
"@MMK_R_J" = -25;
"@MMK_R_V" = 21;
"@MMK_R_W" = 26;
"@MMK_R_Y" = 17;
"@MMK_R_at" = -15;
"@MMK_R_b" = 62;
"@MMK_R_comma" = -81;
"@MMK_R_d" = -20;
"@MMK_R_four" = -37;
"@MMK_R_g" = -27;
"@MMK_R_germandbls" = 12;
"@MMK_R_l" = 11;
"@MMK_R_registered" = -15;
"@MMK_R_six" = -14;
"@MMK_R_slash" = -54;
"@MMK_R_space" = -30;
};
"@MMK_L_quotedblleft" = {
"@MMK_R_AE" = -67;
"@MMK_R_Aacute" = -31;
"@MMK_R_J" = -24;
"@MMK_R_V" = 7;
"@MMK_R_W" = 12;
"@MMK_R_X" = 9;
"@MMK_R_b" = 45;
"@MMK_R_comma" = -75;
"@MMK_R_d" = -19;
"@MMK_R_g" = -23;
};
"@MMK_L_quoteright" = {
"@MMK_R_AE" = -67;
"@MMK_R_Aacute" = -32;
"@MMK_R_J" = -23;
"@MMK_R_V" = 32;
"@MMK_R_W" = 38;
"@MMK_R_Y" = 28;
"@MMK_R_b" = 72;
"@MMK_R_comma" = -81;
"@MMK_R_d" = -19;
"@MMK_R_g" = -29;
"@MMK_R_germandbls" = 22;
"@MMK_R_l" = 22;
};
"@MMK_L_r" = {
"@MMK_R_B" = -23;
"@MMK_R_T" = -121;
"@MMK_R_U" = -32;
"@MMK_R_Y" = -143;
"@MMK_R_backslash" = -47;
"@MMK_R_braceright" = -23;
"@MMK_R_bracketright" = -21;
"@MMK_R_comma" = -10;
};
"@MMK_L_registered" = {
"@MMK_R_B" = -16;
"@MMK_R_T" = -44;
"@MMK_R_U" = -24;
"@MMK_R_W" = -53;
"@MMK_R_Y" = -60;
"@MMK_R_quotedbl" = -12;
};
"@MMK_L_s" = {
"@MMK_R_B" = -13;
"@MMK_R_T" = -80;
"@MMK_R_U" = -35;
"@MMK_R_Y" = -127;
"@MMK_R_backslash" = -44;
"@MMK_R_braceright" = -15;
"@MMK_R_bracketright" = -12;
};
"@MMK_L_seven" = {
"@MMK_R_B" = 26;
"@MMK_R_C" = -14;
"@MMK_R_comma" = -67;
};
"@MMK_L_slash" = {
"@MMK_R_AE" = -85;
"@MMK_R_Aacute" = -58;
"@MMK_R_C" = -15;
"@MMK_R_J" = -48;
"@MMK_R_W" = 53;
"@MMK_R_Y" = 42;
"@MMK_R_a" = -59;
"@MMK_R_b" = 86;
"@MMK_R_c" = -60;
"@MMK_R_d" = -49;
"@MMK_R_dotlessi" = -21;
"@MMK_R_dotlessj" = -15;
"@MMK_R_eng" = -26;
"@MMK_R_g" = -61;
"@MMK_R_germandbls" = 36;
"@MMK_R_l" = 36;
"@MMK_R_r" = -26;
"@MMK_R_s" = -59;
"@MMK_R_t" = -15;
"@MMK_R_u" = -18;
"@MMK_R_w" = -24;
"@MMK_R_y" = -28;
"@MMK_R_z" = -52;
};
"@MMK_L_space" = {
"@MMK_R_AE" = -40;
"@MMK_R_Aacute" = -34;
"@MMK_R_J" = -30;
"@MMK_R_T" = -26;
"@MMK_R_W" = -32;
"@MMK_R_Y" = -30;
"@MMK_R_quotedbl" = -30;
"@MMK_R_w" = -23;
"@MMK_R_y" = -19;
};
"@MMK_L_t_t" = {
"@MMK_R_c" = -8;
};
"@MMK_L_t_z" = {
"@MMK_R_Aacute" = 9;
"@MMK_R_B" = -8;
"@MMK_R_T" = -102;
"@MMK_R_U" = -36;
"@MMK_R_Y" = -128;
"@MMK_R_backslash" = -51;
"@MMK_R_braceright" = -19;
"@MMK_R_question" = -13;
};
"@MMK_L_three" = {
"@MMK_R_comma" = -12;
};
"@MMK_L_trademark" = {
"@MMK_R_AE" = -61;
"@MMK_R_Aacute" = -21;
"@MMK_R_B" = 11;
"@MMK_R_J" = -30;
"@MMK_R_T" = 13;
"@MMK_R_U" = 20;
"@MMK_R_W" = 73;
"@MMK_R_Y" = 60;
"@MMK_R_b" = 92;
"@MMK_R_c" = -12;
"@MMK_R_d" = -14;
"@MMK_R_g" = -15;
"@MMK_R_germandbls" = 54;
"@MMK_R_l" = 54;
"@MMK_R_r" = 6;
"@MMK_R_t" = 10;
"@MMK_R_u" = 22;
"@MMK_R_w" = 15;
"@MMK_R_y" = 5;
};
"@MMK_L_u" = {
"@MMK_R_C" = -10;
"@MMK_R_T" = -108;
"@MMK_R_U" = -49;
"@MMK_R_Y" = -131;
"@MMK_R_backslash" = -58;
"@MMK_R_bracketright" = 8;
"@MMK_R_parenright" = 15;
"@MMK_R_question" = -15;
"@MMK_R_slash" = 19;
"@MMK_R_v" = -9;
"@MMK_R_w" = -24;
};
"@MMK_L_v" = {
"@MMK_R_Aacute" = -50;
"@MMK_R_B" = -22;
"@MMK_R_T" = -89;
"@MMK_R_U" = -20;
"@MMK_R_Y" = -131;
"@MMK_R_comma" = -49;
"@MMK_R_emdash" = -14;
"@MMK_R_g" = -8;
"@MMK_R_germandbls" = -6;
"@MMK_R_l" = -6;
};
"@MMK_L_w" = {
"@MMK_R_Aacute" = -55;
"@MMK_R_B" = -22;
"@MMK_R_T" = -88;
"@MMK_R_U" = -20;
"@MMK_R_Y" = -136;
"@MMK_R_backslash" = -35;
"@MMK_R_braceright" = -33;
"@MMK_R_bracketright" = -26;
"@MMK_R_comma" = -48;
"@MMK_R_emdash" = -10;
"@MMK_R_germandbls" = -6;
"@MMK_R_parenright" = -18;
"@MMK_R_slash" = -23;
"@MMK_R_space" = -20;
};
"@MMK_L_x" = {
"@MMK_R_T" = -94;
"@MMK_R_U" = -34;
"@MMK_R_Y" = -116;
"@MMK_R_c" = -43;
"@MMK_R_d" = -36;
"@MMK_R_emdash" = -26;
"@MMK_R_g" = -14;
"@MMK_R_u" = -5;
"@MMK_R_w" = -24;
};
"@MMK_L_y" = {
"@MMK_R_Aacute" = -46;
"@MMK_R_B" = -25;
"@MMK_R_T" = -91;
"@MMK_R_U" = -22;
"@MMK_R_Y" = -134;
"@MMK_R_backslash" = -37;
"@MMK_R_braceright" = -32;
"@MMK_R_bracketright" = -25;
"@MMK_R_comma" = -50;
"@MMK_R_emdash" = -16;
"@MMK_R_g" = -5;
"@MMK_R_germandbls" = -8;
"@MMK_R_l" = -7;
"@MMK_R_parenright" = -18;
"@MMK_R_q" = -6;
"@MMK_R_slash" = -23;
"@MMK_R_space" = -18;
};
"@MMK_L_zero" = {
"@MMK_R_B" = -12;
"@MMK_R_comma" = -12;
};
A = {
apostrophe = -55;
four = -13;
schwa = -13;
seven = 19;
zero = -14;
};
Aogonek = {
j = 122;
};
Aringacute = {
space = -39;
};
B = {
M = -12;
V = -17;
X = -44;
apostrophe = -13;
braceright = -17;
bracketright = -18;
m = -7;
p = -13;
v = -18;
x = -17;
};
C = {
four = 6;
itilde = 9;
k = 14;
k.salt = 14;
kcommaaccent = 14;
};
Cacute = {
k = 14;
k.salt = 14;
};
Ccaron = {
k = 14;
k.salt = 14;
};
Ccedilla = {
k = 14;
k.salt = 14;
};
Ccircumflex = {
k = 14;
k.salt = 14;
};
Cdotaccent = {
k = 14;
k.salt = 14;
};
D = {
apostrophe = -19;
itilde = 15;
};
Eng = {
germandbls = -21;
k = 54;
k.salt = 54;
};
F = {
V = 28;
a.salt = -36;
ampersand = -13;
asterisk = 15;
at = -23;
braceright = 9;
bracketright = 9;
c.salt = -47;
dotlessi = -31;
four = -12;
germandbls = -25;
idieresis = 2;
iogonek = -31;
k = 55;
k.salt = 55;
kcommaaccent = 55;
lslash = 19;
m = -33;
p = -22;
q = -51;
registered = -21;
s.salt = -41;
schwa = -41;
slash = -43;
space = -25;
v = -25;
x = -30;
};
H = {
at = -18;
four = -19;
germandbls = 1;
k = 39;
k.salt = 39;
kcommaaccent = 39;
lslash = 3;
schwa = -22;
seven = 10;
six = -18;
zero = -14;
};
Hbar = {
germandbls = 1;
k = 39;
k.salt = 39;
};
Hcircumflex = {
germandbls = 1;
k = 39;
k.salt = 39;
};
I = {
f_f_h = -10;
four = -16;
germandbls = 1;
hcircumflex = 15;
k.salt = 30;
kcommaaccent = 30;
lslash = 1;
schwa = -11;
seven = 5;
};
IJ = {
germandbls = -28;
};
Iacute = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Ibreve = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Icircumflex = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Idieresis = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Idotaccent = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Igrave = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Imacron = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Iogonek = {
f_f_h = -10;
germandbls = 1;
j = 61;
k.salt = 30;
};
Itilde = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
J = {
f_f_h = -16;
germandbls = -28;
hcircumflex = 19;
lslash = 20;
schwa = -23;
};
Jcircumflex = {
f_f_h = -16;
germandbls = -28;
};
K = {
four = -39;
germandbls = 1;
hcircumflex = 66;
k = 75;
k.salt = 68;
kcommaaccent = 68;
lslash = 30;
one = 30;
schwa = -52;
seven = 23;
six = -14;
thorn = 77;
two = 18;
};
K.salt = {
a.salt = -5;
asterisk = 6;
backslash = 9;
braceright = 5;
bracketright = 7;
c.salt = -24;
four = -27;
germandbls = 1;
hcircumflex = 50;
k = 59;
k.salt = 59;
kcommaaccent = 59;
lslash = 19;
one = 18;
p = -50;
q = -23;
registered = -15;
s.salt = -7;
schwa = -20;
seven = 11;
six = -13;
trademark = 8;
v = -72;
};
Kcommaaccent = {
germandbls = 1;
k = 75;
k.salt = 68;
thorn = 77;
};
L = {
apostrophe = -61;
four = 18;
nine = -32;
};
M = {
a.salt = -24;
ampersand = -15;
asterisk = 31;
at = -22;
backslash = 11;
braceright = 6;
bracketright = 7;
c.salt = -41;
four = -25;
hcircumflex = 58;
m = -11;
one = 17;
p = -31;
q = -39;
registered = -25;
s.salt = -22;
schwa = -29;
seven = 16;
six = -21;
trademark = 16;
v = -48;
x = -11;
};
N = {
at = -23;
four = -15;
germandbls = -21;
k = 54;
k.salt = 54;
kcommaaccent = 54;
lslash = 20;
one = 9;
schwa = -28;
six = -19;
zero = -12;
};
Nacute = {
germandbls = -21;
k = 54;
k.salt = 54;
};
Ncaron = {
germandbls = -21;
k = 54;
k.salt = 54;
};
Ncommaaccent = {
germandbls = -21;
k = 54;
k.salt = 54;
};
Ndotaccent = {
germandbls = -21;
k = 54;
k.salt = 54;
};
Ntilde = {
germandbls = -21;
k = 54;
k.salt = 54;
};
O = {
itilde = 11;
};
P = {
X = -48;
a.salt = -24;
ampersand = -18;
asterisk = 11;
at = -26;
c.salt = -57;
dotlessi = -9;
four = -21;
germandbls = -15;
hbar = 22;
hcircumflex = 9;
icircumflex = 13;
iogonek = -9;
itilde = 46;
k = 6;
k.salt = 7;
kcommaaccent = 7;
m = -41;
nine = 7;
q = -67;
registered = -22;
s.salt = -43;
schwa = -44;
slash = -51;
space = -25;
x = -8;
};
Q = {
itilde = 11;
};
R = {
apostrophe = -12;
four = -29;
one = 19;
schwa = -29;
seven = 37;
two = 25;
};
R.salt = {
V = -26;
apostrophe = -19;
backslash = -17;
c.salt = -24;
four = -23;
p = -15;
q = -23;
registered = -12;
schwa = -13;
seven = 10;
v = -29;
};
S = {
germandbls = 1;
itilde = 22;
k = 27;
k.salt = 27;
kcommaaccent = 27;
lslash = 1;
};
Sacute = {
germandbls = 1;
k = 27;
k.salt = 27;
lslash = 1;
};
Scaron = {
germandbls = 1;
k = 27;
k.salt = 27;
kcommaaccent = 27;
};
Scircumflex = {
germandbls = 1;
k = 27;
k.salt = 27;
};
T = {
abreve = -101;
acircumflex = -86;
adieresis = -69;
at = -47;
atilde = -88;
ccaron = -114;
ccircumflex = -122;
dotlessi = -77;
ecaron = -113;
ecircumflex = -117;
edieresis = -99;
etilde = -80;
four = -44;
gbreve = -113;
gcircumflex = -113;
gdotaccent = -133;
germandbls = -27;
icircumflex = -9;
idieresis = -4;
iogonek = -77;
itilde = 7;
jcircumflex = -19;
k = 49;
k.salt = 49;
kcommaaccent = 49;
lslash = 15;
ocircumflex = -126;
odieresis = -116;
otilde = -111;
rcaron = -47;
scaron = -68;
schwa = -115;
scircumflex = -87;
six = -20;
utilde = -59;
zcaron = -78;
};
Tbar = {
germandbls = -27;
k = 49;
k.salt = 49;
};
Tcaron = {
germandbls = -27;
k = 49;
k.salt = 49;
};
Thorn = {
M = -25;
V = -31;
X = -77;
backslash = -19;
braceright = -25;
bracketright = -25;
c.salt = -5;
one = -21;
parenright = -19;
q = -7;
seven = -29;
slash = -28;
u = 7;
};
U = {
at = -21;
f_f_h = -17;
germandbls = -31;
schwa = -23;
six = -15;
};
Uacute = {
f_f_h = -17;
germandbls = -31;
};
Ubreve = {
f_f_h = -17;
germandbls = -31;
};
Ucircumflex = {
f_f_h = -17;
germandbls = -31;
};
Udieresis = {
f_f_h = -17;
germandbls = -31;
};
Ugrave = {
f_f_h = -17;
germandbls = -31;
};
Uhungarumlaut = {
f_f_h = -17;
germandbls = -31;
};
Umacron = {
f_f_h = -17;
germandbls = -31;
};
Uogonek = {
f_f_h = -17;
germandbls = -31;
};
Uring = {
f_f_h = -17;
germandbls = -31;
};
Utilde = {
f_f_h = -17;
germandbls = -31;
};
V = {
a.salt = -96;
asterisk = 63;
at = -51;
backslash = 36;
braceright = 17;
bracketright = 19;
c.salt = -115;
eth = -108;
four = -35;
germandbls = -29;
hcircumflex = -3;
m = -67;
nine = 19;
one = 31;
p = -71;
parenright = 12;
q = -119;
question = 18;
registered = -49;
s.salt = -109;
schwa = -96;
seven = 29;
six = -23;
slash = -56;
space = -26;
trademark = 55;
two = 6;
v = -72;
x = -76;
};
W = {
at = -51;
four = -36;
germandbls = -29;
nine = 22;
one = 23;
schwa = -96;
seven = 21;
six = -24;
two = 5;
};
Wacute = {
germandbls = -29;
};
Wcircumflex = {
germandbls = -29;
};
Wdieresis = {
germandbls = -29;
};
Wgrave = {
germandbls = -29;
};
X = {
backslash = 7;
braceright = 40;
bracketright = 40;
c.salt = -32;
four = -26;
germandbls = 1;
hcircumflex = 1;
lslash = 27;
one = 31;
p = -8;
parenright = 35;
q = -17;
schwa = -25;
seven = 49;
slash = 36;
three = 16;
trademark = 9;
two = 34;
v = -94;
};
Y = {
aringacute = -115;
at = -55;
dotlessi = -100;
eth = -138;
f_f_h = -70;
four = -50;
germandbls = -31;
hcircumflex = 93;
iogonek = -100;
nine = 16;
one = 35;
schwa = -131;
seven = 36;
six = -28;
};
Yacute = {
eth = -138;
f_f_h = -70;
germandbls = -31;
};
Ycircumflex = {
eth = -138;
f_f_h = -70;
germandbls = -31;
};
Ydieresis = {
eth = -138;
f_f_h = -70;
germandbls = -31;
};
Ygrave = {
eth = -138;
germandbls = -31;
};
Ytilde = {
eth = -138;
germandbls = -31;
};
Z = {
germandbls = 1;
k = 17;
k.salt = 19;
kcommaaccent = 19;
lslash = 7;
};
Zacute = {
germandbls = 1;
k = 17;
k.salt = 19;
};
Zcaron = {
germandbls = 1;
k = 17;
k.salt = 19;
};
Zdotaccent = {
germandbls = 1;
k = 17;
k.salt = 19;
lslash = 7;
};
a = {
AE = 57;
J = 25;
V = -120;
W = -132;
Z = 5;
lslash = 28;
};
a.salt = {
apostrophe = -15;
backslash = -60;
lslash = 9;
question = -16;
slash = 5;
trademark = -12;
v = -25;
};
ampersand = {
B = 33;
D = 32;
Dcaron = 32;
Dcroat = 32;
E = 32;
Eacute = 32;
Ebreve = 32;
Ecaron = 32;
Ecircumflex = 32;
Edieresis = 32;
Edotaccent = 32;
Egrave = 32;
Emacron = 32;
Eogonek = 32;
Eth = 32;
Etilde = 32;
F = 32;
K.salt = 33;
L = 34;
Lacute = 34;
Lcaron = 33;
Lcommaaccent = 34;
Lslash = 36;
M = 19;
P = 32;
R = 31;
R.salt = 33;
Racute = 31;
Rcaron = 31;
Rcommaaccent = 31;
Thorn = 32;
V = -55;
X = 59;
f = 39;
k = 59;
k.salt = 59;
kcommaaccent = 59;
lslash = 32;
m = 21;
quoteright = -41;
v = -24;
x = 24;
};
aogonek = {
g = 34;
g.salt = 34;
j = 196;
lslash = 27;
parenright = 23;
thorn = 11;
};
apostrophe = {
a = -16;
c.salt = -22;
d = -37;
f = -11;
q = -19;
s = -15;
s.salt = -15;
};
asterisk = {
Lcaron = 14;
V = 13;
c.salt = -10;
hcircumflex = 26;
k = 9;
k.salt = 9;
kcommaaccent = 9;
};
at = {
M = -18;
T = -48;
U = -24;
V = -52;
W = -54;
Y = -61;
};
b = {
apostrophe = -62;
};
backslash = {
V = -59;
X = 20;
lslash = 1;
nine = -23;
quoteright = -56;
v = -26;
};
braceleft = {
Lcaron = 1;
V = 44;
X = 8;
braceleft = -12;
c.salt = -22;
four = -21;
germandbls = 8;
hcircumflex = 21;
lslash = 15;
one = 9;
p = -12;
parenleft = -17;
q = -19;
s.salt = -12;
seven = 8;
six = -21;
v = -23;
zero = -17;
};
braceright = {
braceright = -12;
};
bracketleft = {
Lcaron = 1;
V = 44;
X = 10;
c.salt = -23;
eight = -13;
four = -25;
germandbls = 8;
hcircumflex = 21;
lslash = 15;
one = 9;
parenleft = -18;
q = -20;
s.salt = -12;
seven = 9;
six = -23;
v = -22;
zero = -18;
};
c = {
M = -16;
V = -93;
W = -95;
};
c.salt = {
apostrophe = -11;
backslash = -49;
braceright = -15;
};
ccedilla = {
j = 80;
};
comma = {
j = 32;
jcircumflex = 32;
};
d = {
AE = 31;
V = -9;
W = -12;
lslash = 21;
};
dcaron = {
asterisk = 34;
backslash = 52;
braceright = 57;
bracketright = 59;
quotedbl = 25;
quotedblleft = 27;
quotedblright = 31;
quoteleft = 27;
quoteright = 31;
quotesingle = 25;
trademark = 48;
};
degree = {
four = -41;
six = -17;
};
e = {
apostrophe = -17;
};
eight = {
U = -12;
};
eng = {
backslash = -59;
question = -19;
trademark = -13;
v = -12;
w = -16;
};
eth = {
AE = -9;
M = -20;
U = -29;
V = -70;
W = -71;
X = -12;
Y = -76;
Z = -16;
backslash = -12;
braceright = -13;
bracketright = -12;
x = -12;
};
exclamdown = {
V = -27;
};
f = {
AE = 46;
F = 85;
M = 117;
R = 85;
S = 69;
Thorn = 85;
V = 126;
W = 163;
X = 140;
Z = 113;
ampersand = 23;
apostrophe = 27;
asterisk = 157;
backslash = 123;
bar = 78;
braceright = 96;
bracketright = 96;
exclam = 80;
lslash = 10;
parenright = 88;
question = 118;
space = 44;
trademark = 144;
};
f_f = {
lslash = 10;
napostrophe = 191;
};
f_f_i = {
napostrophe = 8;
};
f_f_j = {
b = 15;
napostrophe = 38;
thorn = 16;
};
f_i = {
napostrophe = 8;
};
f_j = {
b = 16;
napostrophe = 38;
thorn = 16;
};
five = {
AE = -17;
V = 17;
W = 20;
four = 13;
};
four = {
A = 36;
AE = 25;
U = -13;
four = 21;
fraction = 10;
};
fraction = {
four = -22;
nine = 8;
one = -21;
seven = -25;
six = -13;
two = 6;
};
g = {
AE = 34;
Eth = -8;
J = 7;
S = 21;
V = -77;
W = -79;
comma = 6;
icircumflex = 28;
itilde = 46;
jcircumflex = 21;
lslash = 18;
quotedblbase = 17;
quotesinglbase = 17;
};
g.salt = {
eng = 16;
f = 22;
f_b = 28;
f_f = 35;
f_f_b = 35;
f_f_h = 35;
f_f_i = 35;
f_f_j = 35;
f_f_k = 35;
f_f_l = 35;
f_h = 28;
f_i = 28;
f_j = 29;
f_k = 28;
f_l = 28;
f_t = 28;
imacron = 7;
lslash = 17;
n = 16;
nacute = 16;
ncaron = 16;
ncommaaccent = 16;
ndotaccent = 16;
ntilde = 16;
p = 16;
quotedblbase = 15;
quotesinglbase = 15;
r = 18;
racute = 18;
rcaron = 18;
rcommaaccent = 18;
t = 27;
t_t = 27;
tbar = 21;
tcaron = 27;
u = 43;
uacute = 43;
ubreve = 43;
ucircumflex = 43;
udieresis = 43;
ugrave = 43;
uhungarumlaut = 43;
umacron = 43;
uni0163 = 27;
uni021B = 27;
uogonek = 43;
uring = 43;
utilde = 43;
v = 38;
w = 41;
wacute = 41;
wcircumflex = 41;
wdieresis = 41;
wgrave = 41;
};
gbreve = {
comma = 6;
quotedblbase = 17;
quotesinglbase = 17;
};
gcircumflex = {
comma = 6;
quotedblbase = 17;
quotesinglbase = 17;
};
gcommaaccent = {
comma = 6;
quotedblbase = 17;
quotesinglbase = 17;
};
gdotaccent = {
comma = 6;
quotedblbase = 17;
quotesinglbase = 17;
};
germandbls = {
M = -10;
U = -48;
V = -87;
W = -88;
Y = -92;
backslash = -30;
braceright = -16;
p = -30;
question = -20;
space = -18;
v = -59;
x = -24;
};
h = {
M = -12;
V = -152;
W = -164;
Z = -7;
apostrophe = -53;
};
hyphen = {
nine = -12;
one = -12;
seven = -13;
};
i = {
AE = 56;
V = -100;
W = -104;
lslash = 19;
};
idieresis = {
question = 14;
};
imacron = {
question = 16;
};
iogonek = {
j = 111;
};
itilde = {
question = 22;
};
jcircumflex = {
question = 13;
};
k = {
AE = 28;
V = -78;
W = -87;
apostrophe = -46;
asterisk = -25;
backslash = -31;
c.salt = -21;
q = -20;
schwa = -11;
};
k.salt = {
apostrophe = -61;
schwa = -18;
};
l = {
AE = 53;
V = -16;
lslash = 16;
periodcentered = -50;
};
lcaron = {
asterisk = 32;
b = 145;
backslash = 49;
braceright = 54;
bracketright = 57;
h = 94;
k = 105;
k.salt = 105;
l = 95;
l_l = 95;
parenright = 20;
quotedbl = 22;
quotedblleft = 25;
quotedblright = 29;
quoteleft = 25;
quoteright = 29;
quotesingle = 22;
thorn = 146;
trademark = 46;
};
lslash = {
f = 23;
f_b = 20;
f_f = 15;
f_f_b = 15;
f_f_h = 15;
f_f_i = 15;
f_f_j = 15;
f_f_k = 15;
f_f_l = 15;
f_h = 20;
f_i = 20;
f_j = 21;
f_k = 20;
f_l = 20;
f_t = 20;
germandbls = 40;
guillemotright = 13;
guilsinglright = 13;
h = 40;
i = 8;
ij = 8;
j = 6;
k = 40;
k.salt = 40;
l = 38;
l_l = 38;
lslash = 17;
n = 14;
p = 11;
question = 22;
r = 14;
t = 16;
t_t = 16;
t_z = 7;
u = 26;
v = 15;
w = 24;
x = 13;
};
m = {
AE = 30;
V = -143;
W = -154;
backslash = -60;
braceright = 10;
bracketright = 11;
lslash = 20;
parenright = 16;
question = -15;
slash = 20;
v = -32;
};
minus = {
seven = -17;
};
n = {
V = -145;
W = -157;
apostrophe = -11;
};
nine = {
A = -33;
AE = -56;
J = -24;
U = -13;
braceright = -16;
bracketright = -17;
fraction = -30;
one = -12;
seven = -15;
slash = -36;
};
numbersign = {
one = -20;
seven = -26;
};
o = {
f_f_h = -6;
};
oacute = {
f_f_h = -6;
};
obreve = {
f_f_h = -6;
};
ocircumflex = {
f_f_h = -6;
};
odieresis = {
f_f_h = -6;
};
ograve = {
f_f_h = -6;
};
ohungarumlaut = {
f_f_h = -6;
};
omacron = {
f_f_h = -6;
};
one = {
A = 55;
AE = 45;
U = -15;
X = 17;
cent = -15;
fraction = 18;
};
oslash = {
f_f_h = -6;
};
otilde = {
f_f_h = -6;
};
p = {
f_f = -6;
f_f_b = -6;
f_f_h = -6;
f_f_i = -6;
f_f_j = -6;
f_f_k = -6;
f_f_l = -6;
};
parenleft = {
V = 42;
X = 7;
c.salt = -16;
four = -15;
germandbls = 1;
k = 37;
k.salt = 38;
kcommaaccent = 38;
lslash = 13;
q = -15;
six = -12;
v = -15;
};
parenright = {
braceright = -16;
bracketright = -17;
};
periodcentered = {
L = -11;
l = -50;
one = -12;
seven = -17;
};
plus = {
seven = -18;
};
q = {
M = -12;
V = -76;
W = -84;
Z = -12;
backslash = -32;
j = 105;
jcircumflex = 99;
};
questiondown = {
V = -49;
X = 13;
v = -14;
};
quotedbl = {
germandbls = 1;
hcircumflex = 29;
k = 23;
k.salt = 23;
kcommaaccent = 23;
lslash = 1;
};
quotedblleft = {
hcircumflex = 35;
k = 20;
k.salt = 22;
kcommaaccent = 22;
};
quotedblright = {
germandbls = 1;
hcircumflex = 32;
k = 33;
k.salt = 33;
kcommaaccent = 33;
lslash = 1;
};
quoteleft = {
hcircumflex = 35;
k = 20;
k.salt = 22;
kcommaaccent = 22;
};
quoteright = {
at = -16;
germandbls = 1;
hcircumflex = 32;
k = 33;
k.salt = 33;
kcommaaccent = 33;
lslash = 1;
registered = -15;
slash = -58;
space = -30;
};
quotesingle = {
germandbls = 1;
hcircumflex = 30;
k = 23;
k.salt = 23;
kcommaaccent = 23;
lslash = 1;
};
r = {
J = -6;
M = -24;
S = -9;
V = -94;
W = -101;
X = -15;
Z = -23;
};
registered = {
M = -17;
V = -51;
};
s = {
M = -16;
V = -95;
W = -101;
};
s.salt = {
backslash = -43;
braceright = -22;
bracketright = -17;
};
semicolon = {
j = 26;
jcircumflex = 26;
};
seven = {
A = -57;
AE = -84;
J = -48;
M = 32;
N = 33;
T = 34;
U = 35;
V = 82;
W = 87;
X = 44;
Y = 80;
backslash = 27;
braceright = 26;
bracketright = 27;
cent = -26;
degree = 5;
four = -45;
fraction = -70;
hyphen = -39;
minus = -15;
numbersign = -41;
one = 29;
periodcentered = -21;
plus = -12;
seven = 22;
six = -31;
slash = -72;
};
six = {
A = 6;
J = 14;
T = -28;
U = -14;
backslash = -21;
bracketright = -13;
four = 23;
nine = -19;
};
slash = {
V = 48;
X = 11;
a.salt = -48;
c.salt = -60;
f = -14;
four = -46;
germandbls = 1;
hcircumflex = 29;
k = 46;
k.salt = 46;
kcommaaccent = 46;
lslash = 15;
m = -33;
p = -24;
q = -61;
s.salt = -56;
six = -33;
slash = -200;
v = -24;
x = -27;
};
space = {
Aringacute = -42;
V = -32;
lslash = -22;
quoteright = -30;
v = -22;
};
t = {
M = -8;
V = -89;
W = -91;
apostrophe = -35;
};
t_t = {
c.salt = -7;
q = -5;
};
tcaron = {
j = 6;
n = 9;
ncaron = 9;
p = 15;
r = 14;
t = 13;
t_t = 13;
tcaron = 13;
u = 13;
uacute = 13;
uring = 13;
v = 13;
w = 9;
};
three = {
AE = -26;
};
trademark = {
Eng = 17;
Lcaron = 26;
M = 33;
N = 18;
Nacute = 18;
Ncaron = 18;
Ncommaaccent = 18;
Ndotaccent = 18;
Ntilde = 18;
V = 68;
X = 40;
c.salt = -12;
germandbls = 1;
hcircumflex = 47;
icircumflex = 13;
itilde = 28;
jcircumflex = 7;
k.salt = 62;
kcommaaccent = 62;
lslash = 37;
p = 9;
v = 16;
};
two = {
A = 14;
AE = 7;
J = 11;
U = -13;
};
u = {
AE = 41;
V = -142;
W = -152;
lslash = 22;
};
uni015E = {
germandbls = 1;
k = 27;
k.salt = 27;
};
uni0162 = {
abreve = -101;
acircumflex = -86;
germandbls = -27;
icircumflex = -9;
k = 49;
k.salt = 49;
};
uni0218 = {
germandbls = 1;
k = 27;
k.salt = 27;
};
uni021A = {
abreve = -101;
acircumflex = -86;
germandbls = -27;
icircumflex = -9;
k = 49;
k.salt = 49;
};
uogonek = {
j = 129;
};
v = {
AE = -74;
J = -43;
M = -25;
S = -9;
V = -82;
W = -84;
X = -82;
Z = -36;
backslash = -33;
braceright = -32;
bracketright = -25;
parenright = -17;
q = -9;
slash = -24;
space = -20;
};
w = {
AE = -69;
J = -33;
M = -26;
S = -10;
V = -86;
W = -88;
X = -85;
Z = -36;
};
x = {
V = -91;
W = -100;
backslash = -42;
braceright = 7;
bracketright = 5;
c.salt = -42;
parenright = 5;
q = -41;
schwa = -9;
slash = 5;
v = -15;
};
y = {
AE = -67;
J = -49;
M = -28;
S = -15;
V = -86;
W = -94;
X = -75;
Z = -44;
};
z = {
M = -11;
V = -105;
W = -113;
};
zero = {
AE = -22;
M = -12;
U = -14;
braceright = -17;
bracketright = -18;
slash = -12;
};
};
};
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
}
);
properties = (
{
key = copyrights;
values = (
{
language = ENG;
value = "Copyright 2012 The Life Savers Project Authors (https://github.com/googlefonts/life-savers)";
}
);
},
{
key = designers;
values = (
{
language = ENG;
value = "Pablo Impallari, Rodrigo Fuenzalida, Brenda Gallo";
}
);
},
{
key = designerURL;
value = www.impallari.com;
},
{
key = licenses;
values = (
{
language = ENG;
value = "This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: https://openfontlicense.org";
}
);
},
{
key = licenseURL;
value = "https://openfontlicense.org";
},
{
key = manufacturers;
values = (
{
language = ENG;
value = "Pablo Impallari, Rodrigo Fuenzalida, Brenda Gallo";
}
);
},
{
key = manufacturerURL;
value = www.impallari.com;
},
{
key = trademarks;
values = (
{
language = ENG;
value = "Life Savers is a trademark of Pablo Impallari.";
}
);
}
);
settings = {
disablesAutomaticAlignment = 1;
disablesNiceNames = 1;
};
unitsPerEm = 1000;
versionMajor = 3;
versionMinor = 100;
}
