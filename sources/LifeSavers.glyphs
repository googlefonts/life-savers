{
.appVersion = "3309";
.formatVersion = 3;
axes = (
{
name = Weight;
tag = wght;
}
);
customParameters = (
{
name = panose;
value = (
3,
5,
9,
2,
4,
3,
2,
0,
0,
4
);
},
{
name = fsType;
value = (
);
},
{
name = "Use Typo Metrics";
value = 1;
},
{
name = "Enforce Compatibility Check";
value = 0;
}
);
date = "2013-08-22 21:28:00 +0000";
familyName = "Life Savers";
featurePrefixes = (
{
automatic = 1;
code = "languagesystem DFLT dflt;

languagesystem latn dflt;
languagesystem latn AZE;
languagesystem latn CRT;
languagesystem latn KAZ;
languagesystem latn TAT;
languagesystem latn TRK;
languagesystem latn ROM;
languagesystem latn MOL;
languagesystem latn CAT;
";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature locl;
feature subs;
feature sinf;
feature sups;
feature frac;
feature ordn;
feature salt;
feature ss01;
feature numr;
feature dnom;
feature case;
";
tag = aalt;
},
{
automatic = 1;
code = "script latn;
language AZE;
lookup locl_latn_0 {
	sub i by idotaccent;
} locl_latn_0;
language CRT;
lookup locl_latn_0;
language KAZ;
lookup locl_latn_0;
language TAT;
lookup locl_latn_0;
language TRK;
lookup locl_latn_0;

script latn;
language ROM;
lookup locl_latn_1 {
	sub Scedilla by Scommaaccent;
	sub scedilla by scommaaccent;
	sub Tcedilla by Tcommaaccent;
	sub tcedilla by tcommaaccent;
} locl_latn_1;
language MOL;
lookup locl_latn_1;

script latn;
language CAT;
lookup locl_latn_2 {
	sub l periodcentered' l by periodcentered.loclCAT;
	sub L periodcentered' L by periodcentered.loclCAT.case;
} locl_latn_2;
";
tag = locl;
},
{
automatic = 1;
code = "sub zero by zeroinferior;
sub one by oneinferior;
sub two by twoinferior;
sub three by threeinferior;
sub four by fourinferior;
sub five by fiveinferior;
sub six by sixinferior;
sub seven by seveninferior;
sub eight by eightinferior;
sub nine by nineinferior;
";
tag = subs;
},
{
automatic = 1;
code = "sub zero by zeroinferior;
sub one by oneinferior;
sub two by twoinferior;
sub three by threeinferior;
sub four by fourinferior;
sub five by fiveinferior;
sub six by sixinferior;
sub seven by seveninferior;
sub eight by eightinferior;
sub nine by nineinferior;
";
tag = sinf;
},
{
automatic = 1;
code = "sub zero by zerosuperior;
sub one by onesuperior;
sub two by twosuperior;
sub three by threesuperior;
sub four by foursuperior;
sub five by fivesuperior;
sub six by sixsuperior;
sub seven by sevensuperior;
sub eight by eightsuperior;
sub nine by ninesuperior;
";
tag = sups;
},
{
automatic = 1;
code = "lookup FRAC {
	sub slash by fraction;
} FRAC;
lookup UP {
	sub [zero one two three four five six seven eight nine] by [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
} UP;
lookup DOWN {
	sub fraction [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr]' by [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
	sub [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom] [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr]' by [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
} DOWN;
";
tag = frac;
},
{
automatic = 1;
code = "sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;
sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;
";
tag = ordn;
},
{
code = "script latn;
language dflt;
lookup SUB_1 {
	sub c h by c_h;
	sub c k by c_k;
	sub c p by c_p;
	sub c t by c_t;
	sub s p by s_p;
	sub s t by s_t;
} SUB_1;
";
tag = dlig;
},
{
code = "script latn;
language dflt;
lookup SUB_0 {
	sub f f b by f_f_b;
	sub f f h by f_f_h;
	sub f f i by f_f_i;
	sub f f j by f_f_j;
	sub f f k by f_f_k;
	sub f f l by f_f_l;
	sub f b by f_b;
	sub f f by f_f;
	sub f h by f_h;
	sub f i by f_i;
	sub f j by f_j;
	sub f k by f_k;
	sub f l by f_l;
	sub f t by f_t;
	sub l l by l_l;
	sub t t by t_t;
	sub t z by t_z;
} SUB_0;
";
tag = liga;
},
{
code = "script latn;
language dflt;
lookup SUB_2 {
	sub K by K.salt;
	sub R by R.salt;
	sub a by a.salt;
	sub c by c.salt;
	sub g by g.salt;
	sub k by k.salt;
	sub s by s.salt;
} SUB_2;
";
tag = salt;
},
{
code = "script latn;
language dflt;
lookup SUB_3 {
	sub K by K.salt;
	sub R by R.salt;
	sub a by a.salt;
	sub c by c.salt;
	sub g by g.salt;
	sub k by k.salt;
	sub s by s.salt;
} SUB_3;
";
labels = (
{
language = dflt;
value = ss01;
}
);
tag = ss01;
},
{
automatic = 1;
code = "lookup ccmp_DFLT_1 {
	@CombiningTopAccents = [acutecomb brevecomb caroncomb circumflexcomb dieresiscomb dotaccentcomb gravecomb hungarumlautcomb macroncomb ringcomb tildecomb];
	lookupflag UseMarkFilteringSet @CombiningTopAccents;
	sub i' @CombiningTopAccents by idotless;
	sub j' @CombiningTopAccents by jdotless;
} ccmp_DFLT_1;

lookup ccmp_latn_1 {
	lookupflag 0;
	sub Ldot by L periodcentered.loclCAT.case;
	sub ldot by l periodcentered.loclCAT;
	sub napostrophe by apostrophemod n;
} ccmp_latn_1;

script latn;
lookup ccmp_latn_1;
";
tag = ccmp;
},
{
automatic = 1;
code = "sub zero by zero.numr;
sub one by one.numr;
sub two by two.numr;
sub three by three.numr;
sub four by four.numr;
sub five by five.numr;
sub six by six.numr;
sub seven by seven.numr;
sub eight by eight.numr;
sub nine by nine.numr;
";
tag = numr;
},
{
automatic = 1;
code = "sub zero by zero.dnom;
sub one by one.dnom;
sub two by two.dnom;
sub three by three.dnom;
sub four by four.dnom;
sub five by five.dnom;
sub six by six.dnom;
sub seven by seven.dnom;
sub eight by eight.dnom;
sub nine by nine.dnom;
";
tag = dnom;
},
{
automatic = 1;
code = "sub periodcentered.loclCAT by periodcentered.loclCAT.case;
";
tag = case;
}
);
fontMaster = (
{
axesValues = (
400
);
customParameters = (
{
name = typoAscender;
value = 972;
},
{
name = typoDescender;
value = -250;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 972;
},
{
name = winDescent;
value = 251;
},
{
name = hheaAscender;
value = 972;
},
{
name = hheaDescender;
value = -250;
},
{
name = strikeoutPosition;
value = 250;
},
{
name = strikeoutSize;
value = 50;
},
{
name = "prep Table Assembly";
value = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
200
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 1
INSTCTRL[ ]	/* SetInstrExecControl */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
2048 2048
MUL[ ]	/* Multiply */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
3
SWAP[ ]	/* SwapTopStack */
WCVTF[ ]	/* WriteCVTInFUnits */
PUSHB[ ]	/* 1 value pushed */
23
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
14
LTEQ[ ]	/* LessThenOrEqual */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
6
GTEQ[ ]	/* GreaterThanOrEqual */
AND[ ]	/* LogicalAnd */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
52
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
40
EIF[ ]	/* EndIf */
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
2
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 3 values pushed */
11 1 6
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 3 values pushed */
12 6 6
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 3 values pushed */
20 6 6
LOOPCALL[ ]	/* LoopAndCallFunction */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 40 9
RCVT[ ]	/* ReadCVT */
GT[ ]	/* GreaterThan */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 3 values pushed */
12 8 7
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
6 1
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 2 values pushed */
36 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
GETINFO[ ]	/* GetInfo */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
6 3
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 2 values pushed */
38 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1024
GETINFO[ ]	/* GetInfo */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
6 1
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
511
SCANCTRL[ ]	/* ScanConversionControl */
PUSHB[ ]	/* 1 value pushed */
4
SCANTYPE[ ]	/* ScanType */
PUSHB[ ]	/* 2 values pushed */
5 0
WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */
0
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192
LT[ ]	/* LessThan */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
AND[ ]	/* LogicalAnd */
PUSHB[ ]	/* 1 value pushed */
4
RCVT[ ]	/* ReadCVT */
OR[ ]	/* LogicalOr */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
ROLL[ ]	/* RollTopThreeStack */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
80
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
56
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
56
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
11
RCVT[ ]	/* ReadCVT */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
40
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
11
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
48
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
48
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
10
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
54
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
54
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
2
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
3
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 2 values pushed */
5 98
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
11 1 2
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
48 5
CINDEX[ ]	/* CopyXToTopStack */
ROLL[ ]	/* RollTopThreeStack */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
ADD[ ]	/* Add */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
SUB[ ]	/* Subtract */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
EIF[ ]	/* EndIf */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
4
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 3 values pushed */
0 2 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
5
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
6
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 2 values pushed */
8 4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
0
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
48
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 5
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
9
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
9
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
9
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
10
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHW[ ]	/* 1 value pushed */
1024
MUL[ ]	/* Multiply */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
11
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
11
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
7 1
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
DEPTH[ ]	/* GetDepthStack */
PUSHB[ ]	/* 1 value pushed */
13
NEG[ ]	/* Negate */
SWAP[ ]	/* SwapTopStack */
JROT[ ]	/* JumpRelativeOnTrue */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
12
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
MPPEM[ ]	/* MeasurePixelPerEm */
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
7 1
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
DEPTH[ ]	/* GetDepthStack */
PUSHB[ ]	/* 1 value pushed */
19
NEG[ ]	/* Negate */
SWAP[ ]	/* SwapTopStack */
JROT[ ]	/* JumpRelativeOnTrue */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
13
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 12
RS[ ]	/* ReadStore */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
12 12
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
9 2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
10 2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
9
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
9
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
9
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
0 0
SZP0[ ]	/* SetZonePointer0 */
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
0
MIAP[0]	/* MoveIndirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
1 1 1
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
14
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
12
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 6 values pushed */
13 13 1 0 11 0
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
13 5
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
109
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
15
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
16
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
17
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
18
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
3 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
19
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
4 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
20
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
21
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
6 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
22
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
7 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
23
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
24
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
9 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
25
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
12
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 6 values pushed */
13 13 1 0 11 0
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
13 5
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
109
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
26
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
27
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
28
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
29
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
3 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
30
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
4 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
31
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
6 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
33
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
7 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
34
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
35
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
9 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
36
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
37
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
13
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
36
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
38
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
37
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
37
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
39
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
40
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
39
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 1 value pushed */
1
SZP2[ ]	/* SetZonePointer2 */
IUP[0]	/* InterpolateUntPts */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
41
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
39
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 1 value pushed */
1
SZP2[ ]	/* SetZonePointer2 */
IUP[0]	/* InterpolateUntPts */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
42
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
SHC[1]	/* ShiftContourByLastPt */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
43
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 5 values pushed */
0 0 0 0 0
WCVTP[ ]	/* WriteCVTInPixels */
MIAP[0]	/* MoveIndirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
42 1
SZP2[ ]	/* SetZonePointer2 */
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
44
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
45
FDEF[ ]	/* FunctionDefinition */
MDAP[0]	/* MoveDirectAbsPt */
SLOOP[ ]	/* SetLoopVariable */
ALIGNRP[ ]	/* AlignRelativePt */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
46
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 0
SZPS[ ]	/* SetZonePointerS */
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
IF[ ]	/* If */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
46 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
NEG[ ]	/* Negate */
ROLL[ ]	/* RollTopThreeStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
2 32 3 32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
2 38 3 26
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
0
EQ[ ]	/* Equal */
IF[ ]	/* If */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
IF[ ]	/* If */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
32
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
54
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
55
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
56
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
57
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
58
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
CALL[ ]	/* CallFunction */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
38
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
59
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
60
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 4
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
2 32 3 32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
2 38 3 26
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
61
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
62
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
CALL[ ]	/* CallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
38
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
63
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
44
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
64
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
44
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
65
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 1
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
PUSHB[ ]	/* 1 value pushed */
45
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
66
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
67
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
RCVT[ ]	/* ReadCVT */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
68
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
69
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
70
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
71
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
72
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
73
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
74
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
75
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
76
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
77
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
78
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
79
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
80
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
81
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
82
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
83
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
84
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
85
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
86
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
87
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
88
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
89
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
90
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
91
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
92
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
93
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
94
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
95
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
96
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
97
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
98
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
99
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
100
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
101
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
102
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
103
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
104
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
105
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
106
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
107
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
108
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
109
FDEF[ ]	/* FunctionDefinition */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
8
NEG[ ]	/* Negate */
PUSHB[ ]	/* 1 value pushed */
3
DEPTH[ ]	/* GetDepthStack */
LT[ ]	/* LessThan */
JROT[ ]	/* JumpRelativeOnTrue */
PUSHB[ ]	/* 1 value pushed */
1
SZP2[ ]	/* SetZonePointer2 */
IUP[0]	/* InterpolateUntPts */
ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    44,
    30,
    44,
    30,
    821,
    0,
    817,
    436,
    \"-2\",
    \"-202\",
    972,
    \"-250\",
    838,
    \"-14\",
    817,
    475,
    \"-11\",
    \"-221\",
    972,
    \"-250\"
)";
}
);
iconName = Light;
id = "E59D8378-1062-4241-9A8F-EEB295F00E05";
metricValues = (
{
pos = 972;
},
{
pos = 821;
},
{
pos = 436;
},
{
},
{
pos = -250;
},
{
}
);
name = Regular;
},
{
axesValues = (
700
);
customParameters = (
{
name = typoAscender;
value = 972;
},
{
name = typoDescender;
value = -250;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 972;
},
{
name = winDescent;
value = 251;
},
{
name = hheaAscender;
value = 972;
},
{
name = hheaDescender;
value = -250;
},
{
name = strikeoutPosition;
value = 250;
},
{
name = strikeoutSize;
value = 50;
},
{
name = "prep Table Assembly";
value = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
200
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 1
INSTCTRL[ ]	/* SetInstrExecControl */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
2048 2048
MUL[ ]	/* Multiply */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
3
SWAP[ ]	/* SwapTopStack */
WCVTF[ ]	/* WriteCVTInFUnits */
PUSHB[ ]	/* 1 value pushed */
23
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
14
LTEQ[ ]	/* LessThenOrEqual */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
6
GTEQ[ ]	/* GreaterThanOrEqual */
AND[ ]	/* LogicalAnd */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
52
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
40
EIF[ ]	/* EndIf */
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
2
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 3 values pushed */
11 1 6
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 3 values pushed */
12 6 6
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 3 values pushed */
20 6 6
LOOPCALL[ ]	/* LoopAndCallFunction */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 40 9
RCVT[ ]	/* ReadCVT */
GT[ ]	/* GreaterThan */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 3 values pushed */
12 8 7
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
6 1
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 2 values pushed */
36 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
GETINFO[ ]	/* GetInfo */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
6 3
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 2 values pushed */
38 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1024
GETINFO[ ]	/* GetInfo */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
6 1
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
511
SCANCTRL[ ]	/* ScanConversionControl */
PUSHB[ ]	/* 1 value pushed */
4
SCANTYPE[ ]	/* ScanType */
PUSHB[ ]	/* 2 values pushed */
5 0
WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */
0
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192
LT[ ]	/* LessThan */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
AND[ ]	/* LogicalAnd */
PUSHB[ ]	/* 1 value pushed */
4
RCVT[ ]	/* ReadCVT */
OR[ ]	/* LogicalOr */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
ROLL[ ]	/* RollTopThreeStack */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
80
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
56
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
56
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
11
RCVT[ ]	/* ReadCVT */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
40
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
11
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
48
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
48
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
10
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
54
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
54
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
2
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
3
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 2 values pushed */
5 98
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
11 1 2
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
48 5
CINDEX[ ]	/* CopyXToTopStack */
ROLL[ ]	/* RollTopThreeStack */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
ADD[ ]	/* Add */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
SUB[ ]	/* Subtract */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
EIF[ ]	/* EndIf */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
4
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 3 values pushed */
0 2 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
5
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
6
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 2 values pushed */
8 4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
0
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
48
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 5
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
9
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
9
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
9
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
10
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHW[ ]	/* 1 value pushed */
1024
MUL[ ]	/* Multiply */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
11
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
11
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
7 1
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
DEPTH[ ]	/* GetDepthStack */
PUSHB[ ]	/* 1 value pushed */
13
NEG[ ]	/* Negate */
SWAP[ ]	/* SwapTopStack */
JROT[ ]	/* JumpRelativeOnTrue */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
12
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
MPPEM[ ]	/* MeasurePixelPerEm */
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
7 1
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
DEPTH[ ]	/* GetDepthStack */
PUSHB[ ]	/* 1 value pushed */
19
NEG[ ]	/* Negate */
SWAP[ ]	/* SwapTopStack */
JROT[ ]	/* JumpRelativeOnTrue */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
13
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 12
RS[ ]	/* ReadStore */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
12 12
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
9 2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
10 2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
9
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
9
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
9
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
0 0
SZP0[ ]	/* SetZonePointer0 */
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
0
MIAP[0]	/* MoveIndirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
1 1 1
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
14
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
12
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 6 values pushed */
13 13 1 0 11 0
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
13 5
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
109
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
15
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
16
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
17
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
18
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
3 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
19
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
4 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
20
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
21
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
6 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
22
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
7 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
23
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
24
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
9 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
25
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
12
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 6 values pushed */
13 13 1 0 11 0
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
13 5
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
109
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
26
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
27
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
28
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
29
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
3 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
30
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
4 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
31
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
6 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
33
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
7 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
34
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
35
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
9 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
36
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
37
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
13
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
36
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
38
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
37
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
37
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
39
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
40
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
39
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 1 value pushed */
1
SZP2[ ]	/* SetZonePointer2 */
IUP[0]	/* InterpolateUntPts */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
41
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
39
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 1 value pushed */
1
SZP2[ ]	/* SetZonePointer2 */
IUP[0]	/* InterpolateUntPts */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
42
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
SHC[1]	/* ShiftContourByLastPt */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
43
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 5 values pushed */
0 0 0 0 0
WCVTP[ ]	/* WriteCVTInPixels */
MIAP[0]	/* MoveIndirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
42 1
SZP2[ ]	/* SetZonePointer2 */
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
44
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
45
FDEF[ ]	/* FunctionDefinition */
MDAP[0]	/* MoveDirectAbsPt */
SLOOP[ ]	/* SetLoopVariable */
ALIGNRP[ ]	/* AlignRelativePt */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
46
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 0
SZPS[ ]	/* SetZonePointerS */
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
IF[ ]	/* If */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
46 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
NEG[ ]	/* Negate */
ROLL[ ]	/* RollTopThreeStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
2 32 3 32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
2 38 3 26
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
0
EQ[ ]	/* Equal */
IF[ ]	/* If */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
IF[ ]	/* If */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
32
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
54
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
55
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
56
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
57
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
58
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
CALL[ ]	/* CallFunction */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
38
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
59
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
60
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 4
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
2 32 3 32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
2 38 3 26
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
61
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
62
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
CALL[ ]	/* CallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
38
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
63
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
44
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
64
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
44
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
65
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 1
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
PUSHB[ ]	/* 1 value pushed */
45
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
66
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
67
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
RCVT[ ]	/* ReadCVT */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
68
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
69
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
70
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
71
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
72
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
73
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
74
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
75
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
76
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
77
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
78
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
79
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
80
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
81
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
82
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
83
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
84
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
85
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
86
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
87
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
88
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
89
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
90
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
91
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
92
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
93
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
94
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
95
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
96
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
97
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
98
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
99
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
100
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
101
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
102
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
103
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
104
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
105
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
106
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
107
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
108
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
109
FDEF[ ]	/* FunctionDefinition */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
8
NEG[ ]	/* Negate */
PUSHB[ ]	/* 1 value pushed */
3
DEPTH[ ]	/* GetDepthStack */
LT[ ]	/* LessThan */
JROT[ ]	/* JumpRelativeOnTrue */
PUSHB[ ]	/* 1 value pushed */
1
SZP2[ ]	/* SetZonePointer2 */
IUP[0]	/* InterpolateUntPts */
ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    74,
    60,
    74,
    60,
    821,
    0,
    817,
    436,
    \"-2\",
    \"-202\",
    972,
    \"-250\",
    838,
    \"-14\",
    817,
    475,
    \"-11\",
    \"-233\",
    972,
    \"-250\"
)";
}
);
iconName = Bold;
id = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
metricValues = (
{
pos = 972;
},
{
pos = 821;
},
{
pos = 436;
},
{
},
{
pos = -250;
},
{
}
);
name = Bold;
},
{
axesValues = (
800
);
customParameters = (
{
name = typoAscender;
value = 972;
},
{
name = typoDescender;
value = -250;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 972;
},
{
name = winDescent;
value = 251;
},
{
name = hheaAscender;
value = 972;
},
{
name = hheaDescender;
value = -250;
},
{
name = strikeoutPosition;
value = 250;
},
{
name = strikeoutSize;
value = 50;
},
{
name = "prep Table Assembly";
value = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
200
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 1
INSTCTRL[ ]	/* SetInstrExecControl */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
2048 2048
MUL[ ]	/* Multiply */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
3
SWAP[ ]	/* SwapTopStack */
WCVTF[ ]	/* WriteCVTInFUnits */
PUSHB[ ]	/* 1 value pushed */
23
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
14
LTEQ[ ]	/* LessThenOrEqual */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
6
GTEQ[ ]	/* GreaterThanOrEqual */
AND[ ]	/* LogicalAnd */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
52
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
40
EIF[ ]	/* EndIf */
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
2
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 3 values pushed */
11 1 6
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 3 values pushed */
12 6 6
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 3 values pushed */
20 6 6
LOOPCALL[ ]	/* LoopAndCallFunction */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 40 9
RCVT[ ]	/* ReadCVT */
GT[ ]	/* GreaterThan */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 3 values pushed */
12 8 7
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
6 1
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 2 values pushed */
36 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
GETINFO[ ]	/* GetInfo */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
6 3
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 2 values pushed */
38 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1024
GETINFO[ ]	/* GetInfo */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
6 1
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
511
SCANCTRL[ ]	/* ScanConversionControl */
PUSHB[ ]	/* 1 value pushed */
4
SCANTYPE[ ]	/* ScanType */
PUSHB[ ]	/* 2 values pushed */
5 0
WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */
0
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192
LT[ ]	/* LessThan */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
AND[ ]	/* LogicalAnd */
PUSHB[ ]	/* 1 value pushed */
4
RCVT[ ]	/* ReadCVT */
OR[ ]	/* LogicalOr */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
ROLL[ ]	/* RollTopThreeStack */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
80
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
56
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
56
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
11
RCVT[ ]	/* ReadCVT */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
40
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
11
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
48
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
48
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
10
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
54
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
54
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
2
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
3
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 2 values pushed */
5 98
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
11 1 2
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
48 5
CINDEX[ ]	/* CopyXToTopStack */
ROLL[ ]	/* RollTopThreeStack */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
ADD[ ]	/* Add */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
SUB[ ]	/* Subtract */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
EIF[ ]	/* EndIf */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
4
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 3 values pushed */
0 2 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
5
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
6
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 2 values pushed */
8 4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
0
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
48
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 5
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
9
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
9
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
9
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
10
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHW[ ]	/* 1 value pushed */
1024
MUL[ ]	/* Multiply */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
11
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
11
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
7 1
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
DEPTH[ ]	/* GetDepthStack */
PUSHB[ ]	/* 1 value pushed */
13
NEG[ ]	/* Negate */
SWAP[ ]	/* SwapTopStack */
JROT[ ]	/* JumpRelativeOnTrue */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
12
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
MPPEM[ ]	/* MeasurePixelPerEm */
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
7 1
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
DEPTH[ ]	/* GetDepthStack */
PUSHB[ ]	/* 1 value pushed */
19
NEG[ ]	/* Negate */
SWAP[ ]	/* SwapTopStack */
JROT[ ]	/* JumpRelativeOnTrue */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
13
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 12
RS[ ]	/* ReadStore */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
12 12
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
9 2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
10 2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
9
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
9
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
9
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
0 0
SZP0[ ]	/* SetZonePointer0 */
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
0
MIAP[0]	/* MoveIndirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
1 1 1
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
14
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
12
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 6 values pushed */
13 13 1 0 11 0
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
13 5
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
109
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
15
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
16
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
17
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
18
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
3 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
19
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
4 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
20
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
21
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
6 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
22
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
7 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
23
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
24
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
9 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
25
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
12
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 6 values pushed */
13 13 1 0 11 0
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
13 5
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
109
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
26
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
27
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
28
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
29
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
3 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
30
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
4 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
31
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
6 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
33
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
7 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
34
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
35
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
9 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
36
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
37
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
13
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
36
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
38
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
37
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
37
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
39
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
40
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
39
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 1 value pushed */
1
SZP2[ ]	/* SetZonePointer2 */
IUP[0]	/* InterpolateUntPts */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
41
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
39
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 1 value pushed */
1
SZP2[ ]	/* SetZonePointer2 */
IUP[0]	/* InterpolateUntPts */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
42
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
SHC[1]	/* ShiftContourByLastPt */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
43
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 5 values pushed */
0 0 0 0 0
WCVTP[ ]	/* WriteCVTInPixels */
MIAP[0]	/* MoveIndirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
42 1
SZP2[ ]	/* SetZonePointer2 */
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
44
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
45
FDEF[ ]	/* FunctionDefinition */
MDAP[0]	/* MoveDirectAbsPt */
SLOOP[ ]	/* SetLoopVariable */
ALIGNRP[ ]	/* AlignRelativePt */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
46
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 0
SZPS[ ]	/* SetZonePointerS */
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
IF[ ]	/* If */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
46 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
NEG[ ]	/* Negate */
ROLL[ ]	/* RollTopThreeStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
2 32 3 32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
2 38 3 26
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
0
EQ[ ]	/* Equal */
IF[ ]	/* If */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
IF[ ]	/* If */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
32
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
54
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
55
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
56
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
57
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
58
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
CALL[ ]	/* CallFunction */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
38
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
59
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
60
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 4
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
2 32 3 32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
2 38 3 26
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
61
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
62
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
CALL[ ]	/* CallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
38
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
63
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
44
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
64
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
44
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
65
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 1
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
PUSHB[ ]	/* 1 value pushed */
45
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
66
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
67
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
RCVT[ ]	/* ReadCVT */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
68
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
69
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
70
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
71
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
72
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
73
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
74
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
75
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
76
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
77
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
78
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
79
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
80
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
81
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
82
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
83
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
84
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
85
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
86
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
87
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
88
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
89
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
90
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
91
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
92
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
93
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
94
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
95
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
96
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
97
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
98
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
99
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
100
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
101
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
102
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
103
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
104
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
105
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
106
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
107
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
108
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
109
FDEF[ ]	/* FunctionDefinition */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
8
NEG[ ]	/* Negate */
PUSHB[ ]	/* 1 value pushed */
3
DEPTH[ ]	/* GetDepthStack */
LT[ ]	/* LessThan */
JROT[ ]	/* JumpRelativeOnTrue */
PUSHB[ ]	/* 1 value pushed */
1
SZP2[ ]	/* SetZonePointer2 */
IUP[0]	/* InterpolateUntPts */
ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    95,
    78,
    95,
    78,
    821,
    0,
    817,
    436,
    \"-2\",
    \"-202\",
    972,
    \"-250\",
    838,
    \"-14\",
    817,
    475,
    \"-11\",
    \"-240\",
    972,
    \"-250\"
)";
}
);
iconName = Bold;
id = m01;
metricValues = (
{
pos = 972;
},
{
pos = 821;
},
{
pos = 436;
},
{
},
{
pos = -250;
},
{
}
);
name = ExtraBold;
}
);
glyphs = (
{
glyphname = A;
kernLeft = Aacute;
kernRight = Aacute;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(742,-55,ls),
(765,-55,o),
(777,-49,o),
(777,-25,cs),
(777,-2,o),
(752,3,o),
(733,3,cs),
(648,3,o),
(619,8,o),
(613,35,cs),
(410,793,l),
(410,793,l),
(402,824,o),
(387,838,o),
(359,838,cs),
(324,838,o),
(314,823,o),
(305,792,cs),
(285,726,o),
(251,598,o),
(213,460,cs),
(175,324,o),
(134,181,o),
(107,101,cs),
(98,74,o),
(82,66,o),
(58,63,cs),
(54,63,o),
(36,57,o),
(1,57,cs),
(-12,57,o),
(-28,47,o),
(-28,30,cs),
(-28,11,o),
(-17,0,o),
(-5,0,cs),
(273,0,ls),
(300,0,o),
(307,14,o),
(307,29,cs),
(307,53,o),
(295,61,o),
(274,61,cs),
(251,61,o),
(233,62,o),
(221,65,cs),
(208,68,o),
(202,72,o),
(202,77,cs),
(202,98,o),
(219,168,o),
(238,214,c),
(470,214,l),
(468,222,o),
(517,59,o),
(517,35,cs),
(517,-16,o),
(464,5,o),
(464,-33,cs),
(464,-44,o),
(471,-55,o),
(495,-55,cs)
);
},
{
closed = 1;
nodes = (
(304,296,o),
(314,298,o),
(262,298,c),
(284,379,o),
(315,510,o),
(362,691,c),
(385,566,o),
(421,414,o),
(453,298,c),
(420,298,o),
(415,296,o),
(358,296,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
69 1 8 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 7 8 7 106 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 6 5 2 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
168 44 19 36 52 39 28 52 51 9 24
CALL[ ]	/* CallFunction */";
};
width = 710;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(719,-55,ls),
(742,-55,o),
(754,-50,o),
(754,-31,cs),
(754,-12,o),
(732,-9,o),
(713,-9,cs),
(649,-9,o),
(608,-8,o),
(600,23,cs),
(388,816,l),
(388,816,l),
(384,830,o),
(372,837,o),
(353,837,cs),
(329,837,o),
(320,827,o),
(317,816,cs),
(293,737,o),
(268,639,o),
(220,467,cs),
(174,304,o),
(138,173,o),
(108,89,cs),
(100,65,o),
(87,54,o),
(59,51,cs),
(60,51,o),
(15,45,o),
(-12,45,cs),
(-25,45,o),
(-37,37,o),
(-37,24,cs),
(-37,9,o),
(-26,0,o),
(-14,0,cs),
(253,0,ls),
(280,0,o),
(287,12,o),
(287,24,cs),
(287,44,o),
(271,49,o),
(258,49,cs),
(224,49,o),
(182,49,o),
(182,65,cs),
(182,92,o),
(208,175,o),
(225,223,c),
(473,223,l),
(477,207,o),
(490,168,o),
(503,116,cs),
(518,57,o),
(526,24,o),
(526,15,cs),
(526,-33,o),
(455,-14,o),
(455,-39,cs),
(455,-44,o),
(457,-48,o),
(462,-51,cs),
(466,-54,o),
(474,-55,o),
(486,-55,cs)
);
},
{
closed = 1;
nodes = (
(285,288,o),
(265,288,o),
(244,289,c),
(255,332,o),
(278,424,o),
(304,516,cs),
(330,613,o),
(347,680,o),
(356,715,c),
(381,597,o),
(431,393,o),
(458,289,c),
(443,288,o),
(427,288,o),
(411,288,cs),
(394,288,o),
(378,288,o),
(363,288,cs),
(342,288,o),
(323,288,o),
(304,288,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
70 1 8 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 7 8 7 106 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 6 5 2 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
105 44 19 36 52 56 30 52 34 9 24
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(686,-55,ls),
(709,-55,o),
(721,-50,o),
(721,-41,cs),
(721,-29,o),
(704,-29,o),
(685,-29,cs),
(653,-29,o),
(629,-27,o),
(612,-23,cs),
(595,-19,o),
(585,-10,o),
(582,3,cs),
(365,816,ls),
(361,831,o),
(352,835,o),
(345,835,cs),
(334,835,o),
(327,827,o),
(324,816,cs),
(310,767,o),
(265,604,o),
(225,457,cs),
(181,298,o),
(146,172,o),
(110,69,cs),
(101,45,o),
(90,34,o),
(61,31,cs),
(62,31,o),
(9,25,o),
(-30,25,cs),
(-43,25,o),
(-50,21,o),
(-50,14,cs),
(-50,3,o),
(-39,0,o),
(-27,0,cs),
(225,0,ls),
(238,0,o),
(247,2,o),
(252,5,cs),
(257,8,o),
(259,12,o),
(259,15,cs),
(259,30,o),
(238,29,o),
(225,29,cs),
(205,29,o),
(154,26,o),
(154,45,cs),
(154,74,o),
(187,173,o),
(206,238,c),
(477,238,l),
(481,219,o),
(496,170,o),
(511,113,cs),
(528,45,o),
(538,6,o),
(538,-5,cs),
(538,-37,o),
(442,-16,o),
(442,-41,cs),
(442,-46,o),
(444,-50,o),
(449,-52,cs),
(453,-54,o),
(461,-55,o),
(473,-55,cs)
);
},
{
closed = 1;
nodes = (
(299,272,o),
(259,273,o),
(218,274,c),
(233,339,o),
(254,418,o),
(284,530,cs),
(314,640,o),
(334,709,o),
(343,755,c),
(374,642,o),
(431,411,o),
(465,274,c),
(424,273,o),
(381,272,o),
(340,272,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
69 1 9 8 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 9 0 3 4 9 3 90 2 1 0 0 1 0 1 87 0 8 8 20 67 7 6 2 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 8 9 8 106 0 9 0 3 4 9 3 90 2 1 0 0 1 0 1 87 7 6 2 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
82 76 44 18 51 52 56 25 20 51 34 10 24
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = A;
unicode = 65;
},
{
glyphname = Aacute;
kernLeft = Aacute;
kernRight = Aacute;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(742,-55,ls),
(765,-55,o),
(777,-49,o),
(777,-25,cs),
(777,-2,o),
(752,3,o),
(733,3,cs),
(648,3,o),
(619,8,o),
(613,35,cs),
(410,793,l),
(410,793,l),
(402,824,o),
(387,838,o),
(359,838,cs),
(324,838,o),
(314,823,o),
(305,792,cs),
(285,726,o),
(251,598,o),
(213,460,cs),
(175,324,o),
(134,181,o),
(107,101,cs),
(98,74,o),
(82,66,o),
(58,63,cs),
(54,63,o),
(36,57,o),
(1,57,cs),
(-12,57,o),
(-28,47,o),
(-28,30,cs),
(-28,11,o),
(-17,0,o),
(-5,0,cs),
(273,0,ls),
(300,0,o),
(307,14,o),
(307,29,cs),
(307,53,o),
(295,61,o),
(274,61,cs),
(251,61,o),
(233,62,o),
(221,65,cs),
(208,68,o),
(202,72,o),
(202,77,cs),
(202,98,o),
(219,168,o),
(238,214,c),
(470,214,l),
(468,222,o),
(517,59,o),
(517,35,cs),
(517,-16,o),
(464,5,o),
(464,-33,cs),
(464,-44,o),
(471,-55,o),
(495,-55,cs)
);
},
{
closed = 1;
nodes = (
(304,296,o),
(314,298,o),
(262,298,c),
(284,379,o),
(315,510,o),
(362,691,c),
(385,566,o),
(421,414,o),
(453,298,c),
(420,298,o),
(415,296,o),
(358,296,cs)
);
},
{
closed = 1;
nodes = (
(362,841,o),
(449,897,o),
(449,936,cs),
(449,953,o),
(435,972,o),
(408,972,cs),
(370,972,o),
(294,899,o),
(294,872,cs),
(294,856,o),
(309,841,o),
(329,841,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
85 1 10 9 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 1 106 0 0 9 0 106 0 10 0 4 5 10 4 90 0 2 0 3 2 3 87 0 9 9 20 67 8 7 2 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 1 106 0 0 9 0 106 0 9 10 9 106 0 10 0 4 5 10 4 90 0 2 0 3 2 3 87 8 7 2 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
100 90 82 80 19 36 52 39 28 52 53 38 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 710;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(719,-55,ls),
(742,-55,o),
(754,-50,o),
(754,-31,cs),
(754,-12,o),
(732,-9,o),
(713,-9,cs),
(649,-9,o),
(608,-8,o),
(600,23,cs),
(388,816,l),
(388,816,l),
(384,830,o),
(372,837,o),
(353,837,cs),
(329,837,o),
(320,827,o),
(317,816,cs),
(293,737,o),
(268,639,o),
(220,467,cs),
(174,304,o),
(138,173,o),
(108,89,cs),
(100,65,o),
(87,54,o),
(59,51,cs),
(60,51,o),
(15,45,o),
(-12,45,cs),
(-25,45,o),
(-37,37,o),
(-37,24,cs),
(-37,9,o),
(-26,0,o),
(-14,0,cs),
(253,0,ls),
(280,0,o),
(287,12,o),
(287,24,cs),
(287,44,o),
(271,49,o),
(258,49,cs),
(224,49,o),
(182,49,o),
(182,65,cs),
(182,92,o),
(208,175,o),
(225,223,c),
(473,223,l),
(477,207,o),
(490,168,o),
(503,116,cs),
(518,57,o),
(526,24,o),
(526,15,cs),
(526,-33,o),
(455,-14,o),
(455,-39,cs),
(455,-44,o),
(457,-48,o),
(462,-51,cs),
(466,-54,o),
(474,-55,o),
(486,-55,cs)
);
},
{
closed = 1;
nodes = (
(285,288,o),
(265,288,o),
(244,289,c),
(255,332,o),
(278,424,o),
(304,516,cs),
(330,613,o),
(347,680,o),
(356,715,c),
(381,597,o),
(431,393,o),
(458,289,c),
(443,288,o),
(427,288,o),
(411,288,cs),
(394,288,o),
(378,288,o),
(363,288,cs),
(342,288,o),
(323,288,o),
(304,288,cs)
);
},
{
closed = 1;
nodes = (
(341,854,o),
(429,908,o),
(429,941,cs),
(429,960,o),
(417,972,o),
(397,972,cs),
(368,972,o),
(291,904,o),
(291,877,cs),
(291,864,o),
(300,854,o),
(315,854,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
86 1 10 9 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 1 106 0 0 9 0 106 0 10 0 4 5 10 4 90 0 2 0 3 2 3 87 0 9 9 20 67 8 7 2 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 1 106 0 0 9 0 106 0 9 10 9 106 0 10 0 4 5 10 4 90 0 2 0 3 2 3 87 8 7 2 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
99 93 84 82 19 36 52 56 30 52 36 38 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(686,-55,ls),
(709,-55,o),
(721,-50,o),
(721,-41,cs),
(721,-29,o),
(704,-29,o),
(685,-29,cs),
(653,-29,o),
(629,-27,o),
(612,-23,cs),
(595,-19,o),
(585,-10,o),
(582,3,cs),
(365,816,ls),
(361,831,o),
(352,835,o),
(345,835,cs),
(334,835,o),
(327,827,o),
(324,816,cs),
(310,767,o),
(265,604,o),
(225,457,cs),
(181,298,o),
(146,172,o),
(110,69,cs),
(101,45,o),
(90,34,o),
(61,31,cs),
(62,31,o),
(9,25,o),
(-30,25,cs),
(-43,25,o),
(-50,21,o),
(-50,14,cs),
(-50,3,o),
(-39,0,o),
(-27,0,cs),
(225,0,ls),
(238,0,o),
(247,2,o),
(252,5,cs),
(257,8,o),
(259,12,o),
(259,15,cs),
(259,30,o),
(238,29,o),
(225,29,cs),
(205,29,o),
(154,26,o),
(154,45,cs),
(154,74,o),
(187,173,o),
(206,238,c),
(477,238,l),
(481,219,o),
(496,170,o),
(511,113,cs),
(528,45,o),
(538,6,o),
(538,-5,cs),
(538,-37,o),
(442,-16,o),
(442,-41,cs),
(442,-46,o),
(444,-50,o),
(449,-52,cs),
(453,-54,o),
(461,-55,o),
(473,-55,cs)
);
},
{
closed = 1;
nodes = (
(299,272,o),
(259,273,o),
(218,274,c),
(233,339,o),
(254,418,o),
(284,530,cs),
(314,640,o),
(334,709,o),
(343,755,c),
(374,642,o),
(431,411,o),
(465,274,c),
(424,273,o),
(381,272,o),
(340,272,cs)
);
},
{
closed = 1;
nodes = (
(311,875,o),
(401,928,o),
(401,950,cs),
(401,969,o),
(393,972,o),
(382,972,cs),
(362,972,o),
(287,911,o),
(287,886,cs),
(287,879,o),
(290,875,o),
(295,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
84 1 11 10 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 0 10 0 106 0 11 0 5 6 11 5 90 4 1 2 0 3 2 3 87 0 10 10 20 67 9 8 2 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 0 10 0 106 0 10 11 10 106 0 11 0 5 6 11 5 90 4 1 2 0 3 2 3 87 9 8 2 6 6 7 83 0 7 7 13 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
97 91 81 79 67 66 51 52 56 25 20 51 36 37 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = Aacute;
unicode = 193;
},
{
glyphname = Abreve;
kernLeft = Aacute;
kernRight = Aacute;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(742,-55,ls),
(765,-55,o),
(777,-49,o),
(777,-25,cs),
(777,-2,o),
(752,3,o),
(733,3,cs),
(648,3,o),
(619,8,o),
(613,35,cs),
(410,793,l),
(410,793,l),
(402,824,o),
(387,838,o),
(359,838,cs),
(324,838,o),
(314,823,o),
(305,792,cs),
(285,726,o),
(251,598,o),
(213,460,cs),
(175,324,o),
(134,181,o),
(107,101,cs),
(98,74,o),
(82,66,o),
(58,63,cs),
(54,63,o),
(36,57,o),
(1,57,cs),
(-12,57,o),
(-28,47,o),
(-28,30,cs),
(-28,11,o),
(-17,0,o),
(-5,0,cs),
(273,0,ls),
(300,0,o),
(307,14,o),
(307,29,cs),
(307,53,o),
(295,61,o),
(274,61,cs),
(251,61,o),
(233,62,o),
(221,65,cs),
(208,68,o),
(202,72,o),
(202,77,cs),
(202,98,o),
(219,168,o),
(238,214,c),
(470,214,l),
(468,222,o),
(517,59,o),
(517,35,cs),
(517,-16,o),
(464,5,o),
(464,-33,cs),
(464,-44,o),
(471,-55,o),
(495,-55,cs)
);
},
{
closed = 1;
nodes = (
(304,296,o),
(314,298,o),
(262,298,c),
(284,379,o),
(315,510,o),
(362,691,c),
(385,566,o),
(421,414,o),
(453,298,c),
(420,298,o),
(415,296,o),
(358,296,cs)
);
},
{
closed = 1;
nodes = (
(426,862,o),
(495,889,o),
(495,941,cs),
(495,968,o),
(477,971,o),
(457,971,cs),
(440,971,o),
(425,957,o),
(425,942,cs),
(425,937,o),
(421,932,o),
(412,927,cs),
(403,922,o),
(388,919,o),
(369,919,cs),
(339,919,o),
(310,927,o),
(310,942,cs),
(310,965,o),
(297,971,o),
(274,971,cs),
(251,971,o),
(242,958,o),
(242,941,cs),
(242,898,o),
(287,862,o),
(374,862,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
69 1 8 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
12 1 10 11 10 106 0 11 0 9 7 11 9 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
12 1 10 11 10 106 0 7 9 8 9 7 8 104 0 11 0 9 7 11 9 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 6 5 2 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
115 113 109 107 101 99 95 93 168 44 19 36 52 39 28 52 51 13 24
CALL[ ]	/* CallFunction */";
};
width = 710;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(719,-55,ls),
(742,-55,o),
(754,-50,o),
(754,-31,cs),
(754,-12,o),
(732,-9,o),
(713,-9,cs),
(649,-9,o),
(608,-8,o),
(600,23,cs),
(388,816,l),
(388,816,l),
(384,830,o),
(372,837,o),
(353,837,cs),
(329,837,o),
(320,827,o),
(317,816,cs),
(293,737,o),
(268,639,o),
(220,467,cs),
(174,304,o),
(138,173,o),
(108,89,cs),
(100,65,o),
(87,54,o),
(59,51,cs),
(60,51,o),
(15,45,o),
(-12,45,cs),
(-25,45,o),
(-37,37,o),
(-37,24,cs),
(-37,9,o),
(-26,0,o),
(-14,0,cs),
(253,0,ls),
(280,0,o),
(287,12,o),
(287,24,cs),
(287,44,o),
(271,49,o),
(258,49,cs),
(224,49,o),
(182,49,o),
(182,65,cs),
(182,92,o),
(208,175,o),
(225,223,c),
(473,223,l),
(477,207,o),
(490,168,o),
(503,116,cs),
(518,57,o),
(526,24,o),
(526,15,cs),
(526,-33,o),
(455,-14,o),
(455,-39,cs),
(455,-44,o),
(457,-48,o),
(462,-51,cs),
(466,-54,o),
(474,-55,o),
(486,-55,cs)
);
},
{
closed = 1;
nodes = (
(285,288,o),
(265,288,o),
(244,289,c),
(255,332,o),
(278,424,o),
(304,516,cs),
(330,613,o),
(347,680,o),
(356,715,c),
(381,597,o),
(431,393,o),
(458,289,c),
(443,288,o),
(427,288,o),
(411,288,cs),
(394,288,o),
(378,288,o),
(363,288,cs),
(342,288,o),
(323,288,o),
(304,288,cs)
);
},
{
closed = 1;
nodes = (
(414,865,o),
(480,892,o),
(480,944,cs),
(480,971,o),
(463,972,o),
(450,972,cs),
(435,972,o),
(424,960,o),
(424,945,cs),
(424,928,o),
(399,910,o),
(360,910,cs),
(330,910,o),
(295,919,o),
(295,945,cs),
(295,965,o),
(286,972,o),
(267,972,cs),
(250,972,o),
(241,963,o),
(241,944,cs),
(241,903,o),
(287,865,o),
(363,865,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
71 1 8 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
12 1 10 11 10 106 0 11 0 9 7 11 9 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
12 1 10 11 10 106 0 7 9 8 9 7 8 104 0 11 0 9 7 11 9 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 6 5 2 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
114 112 108 106 100 98 95 93 105 44 19 36 52 56 30 52 35 13 35
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(686,-55,ls),
(709,-55,o),
(721,-50,o),
(721,-41,cs),
(721,-29,o),
(704,-29,o),
(685,-29,cs),
(653,-29,o),
(629,-27,o),
(612,-23,cs),
(595,-19,o),
(585,-10,o),
(582,3,cs),
(365,816,ls),
(361,831,o),
(352,835,o),
(345,835,cs),
(334,835,o),
(327,827,o),
(324,816,cs),
(310,767,o),
(265,604,o),
(225,457,cs),
(181,298,o),
(146,172,o),
(110,69,cs),
(101,45,o),
(90,34,o),
(61,31,cs),
(62,31,o),
(9,25,o),
(-30,25,cs),
(-43,25,o),
(-50,21,o),
(-50,14,cs),
(-50,3,o),
(-39,0,o),
(-27,0,cs),
(225,0,ls),
(238,0,o),
(247,2,o),
(252,5,cs),
(257,8,o),
(259,12,o),
(259,15,cs),
(259,30,o),
(238,29,o),
(225,29,cs),
(205,29,o),
(154,26,o),
(154,45,cs),
(154,74,o),
(187,173,o),
(206,238,c),
(477,238,l),
(481,219,o),
(496,170,o),
(511,113,cs),
(528,45,o),
(538,6,o),
(538,-5,cs),
(538,-37,o),
(442,-16,o),
(442,-41,cs),
(442,-46,o),
(444,-50,o),
(449,-52,cs),
(453,-54,o),
(461,-55,o),
(473,-55,cs)
);
},
{
closed = 1;
nodes = (
(299,272,o),
(259,273,o),
(218,274,c),
(233,339,o),
(254,418,o),
(284,530,cs),
(314,640,o),
(334,709,o),
(343,755,c),
(374,642,o),
(431,411,o),
(465,274,c),
(424,273,o),
(381,272,o),
(340,272,cs)
);
},
{
closed = 1;
nodes = (
(400,875,o),
(458,899,o),
(458,948,cs),
(458,969,o),
(450,972,o),
(439,972,cs),
(428,972,o),
(422,964,o),
(422,949,cs),
(422,922,o),
(383,900,o),
(347,900,cs),
(305,900,o),
(273,910,o),
(273,949,cs),
(273,965,o),
(271,972,o),
(256,972,cs),
(245,972,o),
(239,964,o),
(239,948,cs),
(239,908,o),
(287,875,o),
(347,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
97 1 13 12 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
3 1 1 2 1 106 0 2 0 0 12 2 0 91 0 13 0 7 8 13 7 90 6 1 4 0 5 4 5 87 0 12 12 20 67 11 10 2 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
3 1 1 2 1 106 0 12 0 13 0 12 13 104 0 2 0 0 12 2 0 91 0 13 0 7 8 13 7 90 6 1 4 0 5 4 5 87 11 10 2 8 8 9 83 0 9 9 13 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
110 104 94 92 80 79 77 74 71 68 56 25 20 51 36 37 38 35 36 14 24
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = Abreve;
unicode = 258;
},
{
glyphname = Acircumflex;
kernLeft = Aacute;
kernRight = Aacute;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(742,-55,ls),
(765,-55,o),
(777,-49,o),
(777,-25,cs),
(777,-2,o),
(752,3,o),
(733,3,cs),
(648,3,o),
(619,8,o),
(613,35,cs),
(410,793,l),
(410,793,l),
(402,824,o),
(387,838,o),
(359,838,cs),
(324,838,o),
(314,823,o),
(305,792,cs),
(285,726,o),
(251,598,o),
(213,460,cs),
(175,324,o),
(134,181,o),
(107,101,cs),
(98,74,o),
(82,66,o),
(58,63,cs),
(54,63,o),
(36,57,o),
(1,57,cs),
(-12,57,o),
(-28,47,o),
(-28,30,cs),
(-28,11,o),
(-17,0,o),
(-5,0,cs),
(273,0,ls),
(300,0,o),
(307,14,o),
(307,29,cs),
(307,53,o),
(295,61,o),
(274,61,cs),
(251,61,o),
(233,62,o),
(221,65,cs),
(208,68,o),
(202,72,o),
(202,77,cs),
(202,98,o),
(219,168,o),
(238,214,c),
(470,214,l),
(468,222,o),
(517,59,o),
(517,35,cs),
(517,-16,o),
(464,5,o),
(464,-33,cs),
(464,-44,o),
(471,-55,o),
(495,-55,cs)
);
},
{
closed = 1;
nodes = (
(304,296,o),
(314,298,o),
(262,298,c),
(284,379,o),
(315,510,o),
(362,691,c),
(385,566,o),
(421,414,o),
(453,298,c),
(420,298,o),
(415,296,o),
(358,296,cs)
);
},
{
closed = 1;
nodes = (
(256,832,o),
(271,836,o),
(294,845,cs),
(317,854,o),
(341,865,o),
(368,880,c),
(395,865,o),
(420,854,o),
(443,845,cs),
(466,836,o),
(481,832,o),
(488,832,cs),
(499,832,o),
(501,843,o),
(501,852,cs),
(501,894,o),
(393,972,o),
(368,972,cs),
(357,972,o),
(322,950,o),
(295,929,cs),
(264,904,o),
(236,871,o),
(236,846,cs),
(236,839,o),
(240,832,o),
(249,832,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
3 1 10 2 91 1 11 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 2 10 2 106 1 12 2 0 10 11 10 0 11 104 0 11 0 5 6 11 5 90 0 3 0 4 3 4 87 0 10 10 20 67 9 8 2 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 2 10 2 106 0 10 0 10 106 1 12 2 0 11 0 106 0 11 0 5 6 11 5 90 0 3 0 4 3 4 87 9 8 2 6 6 7 83 0 7 7 13 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 106 96 88 86 74 73 70 68 64 61 57 55 48 47 35 32 28 25 15 13 7 5 0 21 1 21 13 15
CALL[ ]	/* CallFunction */";
};
width = 710;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(719,-55,ls),
(742,-55,o),
(754,-50,o),
(754,-31,cs),
(754,-12,o),
(732,-9,o),
(713,-9,cs),
(649,-9,o),
(608,-8,o),
(600,23,cs),
(388,816,l),
(388,816,l),
(384,830,o),
(372,837,o),
(353,837,cs),
(329,837,o),
(320,827,o),
(317,816,cs),
(293,737,o),
(268,639,o),
(220,467,cs),
(174,304,o),
(138,173,o),
(108,89,cs),
(100,65,o),
(87,54,o),
(59,51,cs),
(60,51,o),
(15,45,o),
(-12,45,cs),
(-25,45,o),
(-37,37,o),
(-37,24,cs),
(-37,9,o),
(-26,0,o),
(-14,0,cs),
(253,0,ls),
(280,0,o),
(287,12,o),
(287,24,cs),
(287,44,o),
(271,49,o),
(258,49,cs),
(224,49,o),
(182,49,o),
(182,65,cs),
(182,92,o),
(208,175,o),
(225,223,c),
(473,223,l),
(477,207,o),
(490,168,o),
(503,116,cs),
(518,57,o),
(526,24,o),
(526,15,cs),
(526,-33,o),
(455,-14,o),
(455,-39,cs),
(455,-44,o),
(457,-48,o),
(462,-51,cs),
(466,-54,o),
(474,-55,o),
(486,-55,cs)
);
},
{
closed = 1;
nodes = (
(285,288,o),
(265,288,o),
(244,289,c),
(255,332,o),
(278,424,o),
(304,516,cs),
(330,613,o),
(347,680,o),
(356,715,c),
(381,597,o),
(431,393,o),
(458,289,c),
(443,288,o),
(427,288,o),
(411,288,cs),
(394,288,o),
(378,288,o),
(363,288,cs),
(342,288,o),
(323,288,o),
(304,288,cs)
);
},
{
closed = 1;
nodes = (
(256,848,o),
(319,875,o),
(358,898,c),
(420,861,o),
(469,848,o),
(478,848,cs),
(486,848,o),
(489,856,o),
(489,865,cs),
(489,899,o),
(384,972,o),
(358,972,cs),
(335,972,o),
(228,901,o),
(228,861,cs),
(228,852,o),
(232,848,o),
(239,848,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
5 1 0 2 95 1 11 10 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 0 2 106 1 12 2 0 10 0 106 0 11 0 5 6 11 5 90 0 3 0 4 3 4 87 0 10 10 20 67 9 8 2 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 2 0 2 106 1 12 2 0 10 0 106 0 10 11 10 106 0 11 0 5 6 11 5 90 0 3 0 4 3 4 87 9 8 2 6 6 7 83 0 7 7 13 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 108 102 93 91 79 78 75 73 69 66 62 59 51 50 36 33 29 27 18 16 11 9 0 24 1 24 13 15
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(686,-55,ls),
(709,-55,o),
(721,-50,o),
(721,-41,cs),
(721,-29,o),
(704,-29,o),
(685,-29,cs),
(653,-29,o),
(629,-27,o),
(612,-23,cs),
(595,-19,o),
(585,-10,o),
(582,3,cs),
(365,816,ls),
(361,831,o),
(352,835,o),
(345,835,cs),
(334,835,o),
(327,827,o),
(324,816,cs),
(310,767,o),
(265,604,o),
(225,457,cs),
(181,298,o),
(146,172,o),
(110,69,cs),
(101,45,o),
(90,34,o),
(61,31,cs),
(62,31,o),
(9,25,o),
(-30,25,cs),
(-43,25,o),
(-50,21,o),
(-50,14,cs),
(-50,3,o),
(-39,0,o),
(-27,0,cs),
(225,0,ls),
(238,0,o),
(247,2,o),
(252,5,cs),
(257,8,o),
(259,12,o),
(259,15,cs),
(259,30,o),
(238,29,o),
(225,29,cs),
(205,29,o),
(154,26,o),
(154,45,cs),
(154,74,o),
(187,173,o),
(206,238,c),
(477,238,l),
(481,219,o),
(496,170,o),
(511,113,cs),
(528,45,o),
(538,6,o),
(538,-5,cs),
(538,-37,o),
(442,-16,o),
(442,-41,cs),
(442,-46,o),
(444,-50,o),
(449,-52,cs),
(453,-54,o),
(461,-55,o),
(473,-55,cs)
);
},
{
closed = 1;
nodes = (
(299,272,o),
(259,273,o),
(218,274,c),
(233,339,o),
(254,418,o),
(284,530,cs),
(314,640,o),
(334,709,o),
(343,755,c),
(374,642,o),
(431,411,o),
(465,274,c),
(424,273,o),
(381,272,o),
(340,272,cs)
);
},
{
closed = 1;
nodes = (
(242,875,o),
(313,908,o),
(344,928,c),
(398,890,o),
(466,875,o),
(464,875,cs),
(469,875,o),
(472,879,o),
(472,886,cs),
(472,911,o),
(370,972,o),
(344,972,cs),
(321,972,o),
(217,911,o),
(217,886,cs),
(217,879,o),
(220,875,o),
(225,875,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
5 1 0 2 93 1 12 11 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 2 0 2 106 1 13 2 0 11 0 106 0 12 0 6 7 12 6 90 5 1 3 0 4 3 4 87 0 11 11 20 67 10 9 2 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 2 0 2 106 1 13 2 0 11 0 106 0 11 12 11 106 0 12 0 6 7 12 6 90 5 1 3 0 4 3 4 87 10 9 2 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
1 0 106 100 90 88 76 75 73 70 67 64 60 57 49 48 39 38 34 31 28 26 18 16 11 9 0 23 1 23 14 15
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = Acircumflex;
unicode = 194;
},
{
glyphname = Adieresis;
kernLeft = Aacute;
kernRight = Aacute;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(742,-55,ls),
(765,-55,o),
(777,-49,o),
(777,-25,cs),
(777,-2,o),
(752,3,o),
(733,3,cs),
(648,3,o),
(619,8,o),
(613,35,cs),
(410,793,l),
(410,793,l),
(402,824,o),
(387,838,o),
(359,838,cs),
(324,838,o),
(314,823,o),
(305,792,cs),
(285,726,o),
(251,598,o),
(213,460,cs),
(175,324,o),
(134,181,o),
(107,101,cs),
(98,74,o),
(82,66,o),
(58,63,cs),
(54,63,o),
(36,57,o),
(1,57,cs),
(-12,57,o),
(-28,47,o),
(-28,30,cs),
(-28,11,o),
(-17,0,o),
(-5,0,cs),
(273,0,ls),
(300,0,o),
(307,14,o),
(307,29,cs),
(307,53,o),
(295,61,o),
(274,61,cs),
(251,61,o),
(233,62,o),
(221,65,cs),
(208,68,o),
(202,72,o),
(202,77,cs),
(202,98,o),
(219,168,o),
(238,214,c),
(470,214,l),
(468,222,o),
(517,59,o),
(517,35,cs),
(517,-16,o),
(464,5,o),
(464,-33,cs),
(464,-44,o),
(471,-55,o),
(495,-55,cs)
);
},
{
closed = 1;
nodes = (
(304,296,o),
(314,298,o),
(262,298,c),
(284,379,o),
(315,510,o),
(362,691,c),
(385,566,o),
(421,414,o),
(453,298,c),
(420,298,o),
(415,296,o),
(358,296,cs)
);
},
{
closed = 1;
nodes = (
(286,841,o),
(323,856,o),
(323,911,cs),
(323,947,o),
(295,972,o),
(263,972,cs),
(216,972,o),
(197,931,o),
(197,907,cs),
(197,868,o),
(223,841,o),
(256,841,cs)
);
},
{
closed = 1;
nodes = (
(493,830,o),
(530,845,o),
(530,900,cs),
(530,937,o),
(502,961,o),
(470,961,cs),
(423,961,o),
(404,920,o),
(404,896,cs),
(404,857,o),
(430,830,o),
(463,830,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
101 1 12 11 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
101 1 12 3 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
2 1 0 3 1 1 11 0 1 91 0 12 0 6 7 12 6 90 0 4 0 5 4 5 87 0 11 11 20 67 10 9 2 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 0 0 1 11 0 1 91 0 2 0 3 12 2 3 91 0 12 0 6 7 12 6 90 0 4 0 5 4 5 87 0 11 11 20 67 10 9 2 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 11 1 3 1 11 3 104 0 0 0 1 11 0 1 91 0 2 0 3 12 2 3 91 0 12 0 6 7 12 6 90 0 4 0 5 4 5 87 10 9 2 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
116 106 98 96 84 83 80 78 52 39 28 52 53 38 38 38 36 13 24
CALL[ ]	/* CallFunction */";
};
width = 710;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(719,-55,ls),
(742,-55,o),
(754,-50,o),
(754,-31,cs),
(754,-12,o),
(732,-9,o),
(713,-9,cs),
(649,-9,o),
(608,-8,o),
(600,23,cs),
(388,816,l),
(388,816,l),
(384,830,o),
(372,837,o),
(353,837,cs),
(329,837,o),
(320,827,o),
(317,816,cs),
(293,737,o),
(268,639,o),
(220,467,cs),
(174,304,o),
(138,173,o),
(108,89,cs),
(100,65,o),
(87,54,o),
(59,51,cs),
(60,51,o),
(15,45,o),
(-12,45,cs),
(-25,45,o),
(-37,37,o),
(-37,24,cs),
(-37,9,o),
(-26,0,o),
(-14,0,cs),
(253,0,ls),
(280,0,o),
(287,12,o),
(287,24,cs),
(287,44,o),
(271,49,o),
(258,49,cs),
(224,49,o),
(182,49,o),
(182,65,cs),
(182,92,o),
(208,175,o),
(225,223,c),
(473,223,l),
(477,207,o),
(490,168,o),
(503,116,cs),
(518,57,o),
(526,24,o),
(526,15,cs),
(526,-33,o),
(455,-14,o),
(455,-39,cs),
(455,-44,o),
(457,-48,o),
(462,-51,cs),
(466,-54,o),
(474,-55,o),
(486,-55,cs)
);
},
{
closed = 1;
nodes = (
(285,288,o),
(265,288,o),
(244,289,c),
(255,332,o),
(278,424,o),
(304,516,cs),
(330,613,o),
(347,680,o),
(356,715,c),
(381,597,o),
(431,393,o),
(458,289,c),
(443,288,o),
(427,288,o),
(411,288,cs),
(394,288,o),
(378,288,o),
(363,288,cs),
(342,288,o),
(323,288,o),
(304,288,cs)
);
},
{
closed = 1;
nodes = (
(274,859,o),
(305,872,o),
(305,920,cs),
(305,951,o),
(283,972,o),
(256,972,cs),
(218,972,o),
(200,937,o),
(200,916,cs),
(200,883,o),
(222,859,o),
(249,859,cs)
);
},
{
closed = 1;
nodes = (
(481,847,o),
(512,860,o),
(512,908,cs),
(512,939,o),
(490,960,o),
(463,960,cs),
(425,960,o),
(407,925,o),
(407,904,cs),
(407,871,o),
(429,847,o),
(456,847,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
98 1 12 11 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 11 2 3 91 0 12 0 6 7 12 6 90 0 4 0 5 4 5 87 0 11 11 20 67 10 9 2 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 11 3 12 3 11 12 104 0 0 0 1 3 0 1 91 0 2 0 3 11 2 3 91 0 12 0 6 7 12 6 90 0 4 0 5 4 5 87 10 9 2 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
111 105 96 94 82 81 78 76 52 56 30 52 36 36 38 36 36 13 24
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(686,-55,ls),
(709,-55,o),
(721,-50,o),
(721,-41,cs),
(721,-29,o),
(704,-29,o),
(685,-29,cs),
(653,-29,o),
(629,-27,o),
(612,-23,cs),
(595,-19,o),
(585,-10,o),
(582,3,cs),
(365,816,ls),
(361,831,o),
(352,835,o),
(345,835,cs),
(334,835,o),
(327,827,o),
(324,816,cs),
(310,767,o),
(265,604,o),
(225,457,cs),
(181,298,o),
(146,172,o),
(110,69,cs),
(101,45,o),
(90,34,o),
(61,31,cs),
(62,31,o),
(9,25,o),
(-30,25,cs),
(-43,25,o),
(-50,21,o),
(-50,14,cs),
(-50,3,o),
(-39,0,o),
(-27,0,cs),
(225,0,ls),
(238,0,o),
(247,2,o),
(252,5,cs),
(257,8,o),
(259,12,o),
(259,15,cs),
(259,30,o),
(238,29,o),
(225,29,cs),
(205,29,o),
(154,26,o),
(154,45,cs),
(154,74,o),
(187,173,o),
(206,238,c),
(477,238,l),
(481,219,o),
(496,170,o),
(511,113,cs),
(528,45,o),
(538,6,o),
(538,-5,cs),
(538,-37,o),
(442,-16,o),
(442,-41,cs),
(442,-46,o),
(444,-50,o),
(449,-52,cs),
(453,-54,o),
(461,-55,o),
(473,-55,cs)
);
},
{
closed = 1;
nodes = (
(299,272,o),
(259,273,o),
(218,274,c),
(233,339,o),
(254,418,o),
(284,530,cs),
(314,640,o),
(334,709,o),
(343,755,c),
(374,642,o),
(431,411,o),
(465,274,c),
(424,273,o),
(381,272,o),
(340,272,cs)
);
},
{
closed = 1;
nodes = (
(258,889,o),
(280,899,o),
(280,935,cs),
(280,958,o),
(265,972,o),
(246,972,cs),
(218,972,o),
(205,945,o),
(205,931,cs),
(205,907,o),
(220,889,o),
(239,889,cs)
);
},
{
closed = 1;
nodes = (
(465,875,o),
(487,885,o),
(487,921,cs),
(487,944,o),
(472,958,o),
(453,958,cs),
(425,958,o),
(412,931,o),
(412,917,cs),
(412,893,o),
(427,875,o),
(446,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
97 1 13 12 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 12 2 3 91 0 13 0 7 8 13 7 90 6 1 4 0 5 4 5 87 0 12 12 20 67 11 10 2 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 12 3 13 3 12 13 104 0 0 0 1 3 0 1 91 0 2 0 3 12 2 3 91 0 13 0 7 8 13 7 90 6 1 4 0 5 4 5 87 11 10 2 8 8 9 83 0 9 9 13 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
110 104 94 92 80 79 77 74 71 68 56 25 20 51 36 36 38 36 36 14 24
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = Adieresis;
unicode = 196;
},
{
glyphname = Agrave;
kernLeft = Aacute;
kernRight = Aacute;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(742,-55,ls),
(765,-55,o),
(777,-49,o),
(777,-25,cs),
(777,-2,o),
(752,3,o),
(733,3,cs),
(648,3,o),
(619,8,o),
(613,35,cs),
(410,793,l),
(410,793,l),
(402,824,o),
(387,838,o),
(359,838,cs),
(324,838,o),
(314,823,o),
(305,792,cs),
(285,726,o),
(251,598,o),
(213,460,cs),
(175,324,o),
(134,181,o),
(107,101,cs),
(98,74,o),
(82,66,o),
(58,63,cs),
(54,63,o),
(36,57,o),
(1,57,cs),
(-12,57,o),
(-28,47,o),
(-28,30,cs),
(-28,11,o),
(-17,0,o),
(-5,0,cs),
(273,0,ls),
(300,0,o),
(307,14,o),
(307,29,cs),
(307,53,o),
(295,61,o),
(274,61,cs),
(251,61,o),
(233,62,o),
(221,65,cs),
(208,68,o),
(202,72,o),
(202,77,cs),
(202,98,o),
(219,168,o),
(238,214,c),
(470,214,l),
(468,222,o),
(517,59,o),
(517,35,cs),
(517,-16,o),
(464,5,o),
(464,-33,cs),
(464,-44,o),
(471,-55,o),
(495,-55,cs)
);
},
{
closed = 1;
nodes = (
(304,296,o),
(314,298,o),
(262,298,c),
(284,379,o),
(315,510,o),
(362,691,c),
(385,566,o),
(421,414,o),
(453,298,c),
(420,298,o),
(415,296,o),
(358,296,cs)
);
},
{
closed = 1;
nodes = (
(433,841,o),
(448,856,o),
(448,872,cs),
(448,898,o),
(374,972,o),
(334,972,cs),
(307,972,o),
(293,953,o),
(293,936,cs),
(293,897,o),
(380,841,o),
(413,841,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
85 1 10 9 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 1 0 106 0 1 9 1 106 0 10 0 4 5 10 4 90 0 2 0 3 2 3 87 0 9 9 20 67 8 7 2 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 0 1 0 106 0 1 9 1 106 0 9 10 9 106 0 10 0 4 5 10 4 90 0 2 0 3 2 3 87 8 7 2 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
100 90 82 80 19 36 52 39 28 52 55 38 34 11 24
CALL[ ]	/* CallFunction */";
};
width = 710;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(719,-55,ls),
(742,-55,o),
(754,-50,o),
(754,-31,cs),
(754,-12,o),
(732,-9,o),
(713,-9,cs),
(649,-9,o),
(608,-8,o),
(600,23,cs),
(388,816,l),
(388,816,l),
(384,830,o),
(372,837,o),
(353,837,cs),
(329,837,o),
(320,827,o),
(317,816,cs),
(293,737,o),
(268,639,o),
(220,467,cs),
(174,304,o),
(138,173,o),
(108,89,cs),
(100,65,o),
(87,54,o),
(59,51,cs),
(60,51,o),
(15,45,o),
(-12,45,cs),
(-25,45,o),
(-37,37,o),
(-37,24,cs),
(-37,9,o),
(-26,0,o),
(-14,0,cs),
(253,0,ls),
(280,0,o),
(287,12,o),
(287,24,cs),
(287,44,o),
(271,49,o),
(258,49,cs),
(224,49,o),
(182,49,o),
(182,65,cs),
(182,92,o),
(208,175,o),
(225,223,c),
(473,223,l),
(477,207,o),
(490,168,o),
(503,116,cs),
(518,57,o),
(526,24,o),
(526,15,cs),
(526,-33,o),
(455,-14,o),
(455,-39,cs),
(455,-44,o),
(457,-48,o),
(462,-51,cs),
(466,-54,o),
(474,-55,o),
(486,-55,cs)
);
},
{
closed = 1;
nodes = (
(285,288,o),
(265,288,o),
(244,289,c),
(255,332,o),
(278,424,o),
(304,516,cs),
(330,613,o),
(347,680,o),
(356,715,c),
(381,597,o),
(431,393,o),
(458,289,c),
(443,288,o),
(427,288,o),
(411,288,cs),
(394,288,o),
(378,288,o),
(363,288,cs),
(342,288,o),
(323,288,o),
(304,288,cs)
);
},
{
closed = 1;
nodes = (
(420,854,o),
(429,864,o),
(429,877,cs),
(429,904,o),
(352,972,o),
(323,972,cs),
(303,972,o),
(291,960,o),
(291,941,cs),
(291,910,o),
(376,854,o),
(405,854,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
86 1 10 9 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 1 0 106 0 1 9 1 106 0 10 0 4 5 10 4 90 0 2 0 3 2 3 87 0 9 9 20 67 8 7 2 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 0 1 0 106 0 1 9 1 106 0 9 10 9 106 0 10 0 4 5 10 4 90 0 2 0 3 2 3 87 8 7 2 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
99 93 84 82 19 36 52 56 30 52 38 38 34 11 24
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(686,-55,ls),
(709,-55,o),
(721,-50,o),
(721,-41,cs),
(721,-29,o),
(704,-29,o),
(685,-29,cs),
(653,-29,o),
(629,-27,o),
(612,-23,cs),
(595,-19,o),
(585,-10,o),
(582,3,cs),
(365,816,ls),
(361,831,o),
(352,835,o),
(345,835,cs),
(334,835,o),
(327,827,o),
(324,816,cs),
(310,767,o),
(265,604,o),
(225,457,cs),
(181,298,o),
(146,172,o),
(110,69,cs),
(101,45,o),
(90,34,o),
(61,31,cs),
(62,31,o),
(9,25,o),
(-30,25,cs),
(-43,25,o),
(-50,21,o),
(-50,14,cs),
(-50,3,o),
(-39,0,o),
(-27,0,cs),
(225,0,ls),
(238,0,o),
(247,2,o),
(252,5,cs),
(257,8,o),
(259,12,o),
(259,15,cs),
(259,30,o),
(238,29,o),
(225,29,cs),
(205,29,o),
(154,26,o),
(154,45,cs),
(154,74,o),
(187,173,o),
(206,238,c),
(477,238,l),
(481,219,o),
(496,170,o),
(511,113,cs),
(528,45,o),
(538,6,o),
(538,-5,cs),
(538,-37,o),
(442,-16,o),
(442,-41,cs),
(442,-46,o),
(444,-50,o),
(449,-52,cs),
(453,-54,o),
(461,-55,o),
(473,-55,cs)
);
},
{
closed = 1;
nodes = (
(299,272,o),
(259,273,o),
(218,274,c),
(233,339,o),
(254,418,o),
(284,530,cs),
(314,640,o),
(334,709,o),
(343,755,c),
(374,642,o),
(431,411,o),
(465,274,c),
(424,273,o),
(381,272,o),
(340,272,cs)
);
},
{
closed = 1;
nodes = (
(399,875,o),
(402,879,o),
(402,886,cs),
(402,911,o),
(327,972,o),
(307,972,cs),
(296,972,o),
(288,969,o),
(288,950,cs),
(288,928,o),
(378,875,o),
(394,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
84 1 11 10 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 0 1 0 106 0 1 10 1 106 0 11 0 5 6 11 5 90 4 1 2 0 3 2 3 87 0 10 10 20 67 9 8 2 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 0 1 0 106 0 1 10 1 106 0 10 11 10 106 0 11 0 5 6 11 5 90 4 1 2 0 3 2 3 87 9 8 2 6 6 7 83 0 7 7 13 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
97 91 81 79 67 66 51 52 56 25 20 51 38 37 34 12 24
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = Agrave;
unicode = 192;
},
{
glyphname = Amacron;
kernLeft = Aacute;
kernRight = Aacute;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(742,-55,ls),
(765,-55,o),
(777,-49,o),
(777,-25,cs),
(777,-2,o),
(752,3,o),
(733,3,cs),
(648,3,o),
(619,8,o),
(613,35,cs),
(410,793,l),
(410,793,l),
(402,824,o),
(387,838,o),
(359,838,cs),
(324,838,o),
(314,823,o),
(305,792,cs),
(285,726,o),
(251,598,o),
(213,460,cs),
(175,324,o),
(134,181,o),
(107,101,cs),
(98,74,o),
(82,66,o),
(58,63,cs),
(54,63,o),
(36,57,o),
(1,57,cs),
(-12,57,o),
(-28,47,o),
(-28,30,cs),
(-28,11,o),
(-17,0,o),
(-5,0,cs),
(273,0,ls),
(300,0,o),
(307,14,o),
(307,29,cs),
(307,53,o),
(295,61,o),
(274,61,cs),
(251,61,o),
(233,62,o),
(221,65,cs),
(208,68,o),
(202,72,o),
(202,77,cs),
(202,98,o),
(219,168,o),
(238,214,c),
(470,214,l),
(468,222,o),
(517,59,o),
(517,35,cs),
(517,-16,o),
(464,5,o),
(464,-33,cs),
(464,-44,o),
(471,-55,o),
(495,-55,cs)
);
},
{
closed = 1;
nodes = (
(304,296,o),
(314,298,o),
(262,298,c),
(284,379,o),
(315,510,o),
(362,691,c),
(385,566,o),
(421,414,o),
(453,298,c),
(420,298,o),
(415,296,o),
(358,296,cs)
);
},
{
closed = 1;
nodes = (
(328,880,o),
(425,881,o),
(499,881,cs),
(528,881,o),
(535,908,o),
(535,923,cs),
(535,943,o),
(522,960,o),
(507,960,cs),
(491,960,o),
(473,960,o),
(452,959,cs),
(431,958,o),
(407,957,o),
(379,957,cs),
(337,957,o),
(288,959,o),
(258,959,cs),
(235,959,o),
(225,939,o),
(225,920,cs),
(225,901,o),
(239,880,o),
(258,880,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
69 1 8 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
11 1 9 0 10 7 9 10 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 7 10 8 10 7 8 104 11 1 9 0 10 7 9 10 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 6 5 2 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
90 89 103 96 89 115 90 107 168 44 19 36 52 39 28 52 51 12 24
CALL[ ]	/* CallFunction */";
};
width = 710;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(719,-55,ls),
(742,-55,o),
(754,-50,o),
(754,-31,cs),
(754,-12,o),
(732,-9,o),
(713,-9,cs),
(649,-9,o),
(608,-8,o),
(600,23,cs),
(388,816,l),
(388,816,l),
(384,830,o),
(372,837,o),
(353,837,cs),
(329,837,o),
(320,827,o),
(317,816,cs),
(293,737,o),
(268,639,o),
(220,467,cs),
(174,304,o),
(138,173,o),
(108,89,cs),
(100,65,o),
(87,54,o),
(59,51,cs),
(60,51,o),
(15,45,o),
(-12,45,cs),
(-25,45,o),
(-37,37,o),
(-37,24,cs),
(-37,9,o),
(-26,0,o),
(-14,0,cs),
(253,0,ls),
(280,0,o),
(287,12,o),
(287,24,cs),
(287,44,o),
(271,49,o),
(258,49,cs),
(224,49,o),
(182,49,o),
(182,65,cs),
(182,92,o),
(208,175,o),
(225,223,c),
(473,223,l),
(477,207,o),
(490,168,o),
(503,116,cs),
(518,57,o),
(526,24,o),
(526,15,cs),
(526,-33,o),
(455,-14,o),
(455,-39,cs),
(455,-44,o),
(457,-48,o),
(462,-51,cs),
(466,-54,o),
(474,-55,o),
(486,-55,cs)
);
},
{
closed = 1;
nodes = (
(285,288,o),
(265,288,o),
(244,289,c),
(255,332,o),
(278,424,o),
(304,516,cs),
(330,613,o),
(347,680,o),
(356,715,c),
(381,597,o),
(431,393,o),
(458,289,c),
(443,288,o),
(427,288,o),
(411,288,cs),
(394,288,o),
(378,288,o),
(363,288,cs),
(342,288,o),
(323,288,o),
(304,288,cs)
);
},
{
closed = 1;
nodes = (
(319,877,o),
(416,878,o),
(490,878,cs),
(513,878,o),
(519,900,o),
(519,911,cs),
(519,926,o),
(509,939,o),
(498,939,cs),
(482,939,o),
(464,939,o),
(443,938,cs),
(422,937,o),
(398,936,o),
(370,936,cs),
(328,936,o),
(279,938,o),
(249,938,cs),
(230,938,o),
(223,923,o),
(223,908,cs),
(223,893,o),
(234,877,o),
(249,877,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
71 1 8 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
11 1 9 0 10 7 9 10 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 7 10 8 10 7 8 104 11 1 9 0 10 7 9 10 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 6 5 2 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
90 89 101 94 89 113 90 105 105 44 19 36 52 56 30 52 35 12 35
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(686,-55,ls),
(709,-55,o),
(721,-50,o),
(721,-41,cs),
(721,-29,o),
(704,-29,o),
(685,-29,cs),
(653,-29,o),
(629,-27,o),
(612,-23,cs),
(595,-19,o),
(585,-10,o),
(582,3,cs),
(365,816,ls),
(361,831,o),
(352,835,o),
(345,835,cs),
(334,835,o),
(327,827,o),
(324,816,cs),
(310,767,o),
(265,604,o),
(225,457,cs),
(181,298,o),
(146,172,o),
(110,69,cs),
(101,45,o),
(90,34,o),
(61,31,cs),
(62,31,o),
(9,25,o),
(-30,25,cs),
(-43,25,o),
(-50,21,o),
(-50,14,cs),
(-50,3,o),
(-39,0,o),
(-27,0,cs),
(225,0,ls),
(238,0,o),
(247,2,o),
(252,5,cs),
(257,8,o),
(259,12,o),
(259,15,cs),
(259,30,o),
(238,29,o),
(225,29,cs),
(205,29,o),
(154,26,o),
(154,45,cs),
(154,74,o),
(187,173,o),
(206,238,c),
(477,238,l),
(481,219,o),
(496,170,o),
(511,113,cs),
(528,45,o),
(538,6,o),
(538,-5,cs),
(538,-37,o),
(442,-16,o),
(442,-41,cs),
(442,-46,o),
(444,-50,o),
(449,-52,cs),
(453,-54,o),
(461,-55,o),
(473,-55,cs)
);
},
{
closed = 1;
nodes = (
(299,272,o),
(259,273,o),
(218,274,c),
(233,339,o),
(254,418,o),
(284,530,cs),
(314,640,o),
(334,709,o),
(343,755,c),
(374,642,o),
(431,411,o),
(465,274,c),
(424,273,o),
(381,272,o),
(340,272,cs)
);
},
{
closed = 1;
nodes = (
(306,875,o),
(403,876,o),
(477,876,cs),
(492,876,o),
(496,887,o),
(496,894,cs),
(496,901,o),
(490,907,o),
(485,907,cs),
(469,907,o),
(451,907,o),
(430,906,cs),
(409,905,o),
(385,904,o),
(357,904,cs),
(315,904,o),
(266,906,o),
(236,906,cs),
(225,906,o),
(220,898,o),
(220,891,cs),
(220,884,o),
(227,875,o),
(236,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
69 1 9 8 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
12 1 10 0 11 8 10 11 91 0 9 0 3 4 9 3 90 2 1 0 0 1 0 1 87 0 8 8 20 67 7 6 2 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 8 11 9 11 8 9 104 12 1 10 0 11 8 10 11 91 0 9 0 3 4 9 3 90 2 1 0 0 1 0 1 87 7 6 2 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
88 87 99 92 87 111 88 103 82 76 44 18 51 52 56 25 20 51 34 13 24
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = Amacron;
unicode = 256;
},
{
glyphname = Aogonek;
kernLeft = Aacute;
kernRight = Aacute;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(674,-212,o),
(705,-183,o),
(705,-159,cs),
(705,-147,o),
(693,-135,o),
(680,-135,cs),
(660,-135,o),
(661,-159,o),
(620,-159,cs),
(605,-159,o),
(591,-153,o),
(591,-138,cs),
(591,-111,o),
(607,-70,o),
(636,-55,c),
(742,-55,ls),
(765,-55,o),
(777,-49,o),
(777,-25,cs),
(777,-2,o),
(752,3,o),
(733,3,cs),
(648,3,o),
(619,8,o),
(613,35,cs),
(410,793,ls),
(402,824,o),
(387,838,o),
(359,838,cs),
(324,838,o),
(314,823,o),
(305,792,cs),
(285,726,o),
(251,598,o),
(213,460,cs),
(175,324,o),
(134,181,o),
(107,101,cs),
(98,74,o),
(82,66,o),
(58,63,cs),
(54,63,o),
(36,57,o),
(1,57,cs),
(-12,57,o),
(-28,47,o),
(-28,30,cs),
(-28,11,o),
(-17,0,o),
(-5,0,cs),
(273,0,ls),
(300,0,o),
(307,14,o),
(307,29,cs),
(307,53,o),
(295,61,o),
(274,61,cs),
(251,61,o),
(233,62,o),
(221,65,cs),
(208,68,o),
(202,72,o),
(202,77,cs),
(202,98,o),
(219,168,o),
(238,214,c),
(470,214,l),
(468,222,o),
(517,59,o),
(517,35,cs),
(517,-16,o),
(464,5,o),
(464,-33,cs),
(464,-44,o),
(471,-55,o),
(495,-55,cs),
(579,-55,l),
(554,-69,o),
(512,-94,o),
(512,-137,cs),
(512,-189,o),
(572,-212,o),
(622,-212,cs)
);
},
{
closed = 1;
nodes = (
(304,296,o),
(314,298,o),
(262,298,c),
(284,379,o),
(315,510,o),
(362,691,c),
(385,566,o),
(421,414,o),
(453,298,c),
(420,298,o),
(415,296,o),
(358,296,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
99 1 12 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 11 1 10 1 11 10 104 0 12 0 2 3 12 2 90 0 8 9 1 1 11 8 1 91 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 67 0 10 10 0 83 13 1 0 0 17 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 11 1 10 1 11 10 104 0 12 0 2 3 12 2 90 0 8 9 1 1 11 8 1 91 0 10 13 1 0 10 0 87 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 7 12 7 106 0 11 1 10 1 11 10 104 0 12 0 2 3 12 2 90 0 8 9 1 1 11 8 1 91 0 10 13 1 0 10 0 87 6 5 2 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
1 0 114 104 92 90 87 85 80 78 74 71 65 63 51 50 47 45 41 38 34 32 25 24 12 10 0 98 1 98 14 15
CALL[ ]	/* CallFunction */";
};
width = 710;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(719,-55,ls),
(742,-55,o),
(754,-50,o),
(754,-31,cs),
(754,-12,o),
(732,-9,o),
(713,-9,cs),
(649,-9,o),
(608,-8,o),
(600,23,cs),
(388,816,l),
(388,816,l),
(384,830,o),
(372,837,o),
(353,837,cs),
(329,837,o),
(320,827,o),
(317,816,cs),
(293,737,o),
(268,639,o),
(220,467,cs),
(174,304,o),
(138,173,o),
(108,89,cs),
(100,65,o),
(87,54,o),
(59,51,cs),
(60,51,o),
(15,45,o),
(-12,45,cs),
(-25,45,o),
(-37,37,o),
(-37,24,cs),
(-37,9,o),
(-26,0,o),
(-14,0,cs),
(253,0,ls),
(280,0,o),
(287,12,o),
(287,24,cs),
(287,44,o),
(271,49,o),
(258,49,cs),
(224,49,o),
(182,49,o),
(182,65,cs),
(182,92,o),
(208,175,o),
(225,223,c),
(473,223,l),
(477,207,o),
(490,168,o),
(503,116,cs),
(518,57,o),
(526,24,o),
(526,15,cs),
(526,-33,o),
(455,-14,o),
(455,-39,cs),
(455,-44,o),
(457,-48,o),
(462,-51,cs),
(466,-54,o),
(474,-55,o),
(486,-55,cs)
);
},
{
closed = 1;
nodes = (
(651,-201,o),
(681,-160,o),
(681,-150,cs),
(681,-139,o),
(675,-128,o),
(660,-128,cs),
(656,-128,o),
(652,-130,o),
(647,-134,cs),
(642,-139,o),
(636,-144,o),
(631,-149,cs),
(625,-155,o),
(614,-158,o),
(597,-158,cs),
(581,-158,o),
(566,-143,o),
(566,-127,cs),
(566,-108,o),
(580,-54,o),
(625,-39,c),
(575,-38,l),
(575,-38,l),
(561,-45,o),
(549,-52,o),
(538,-61,cs),
(519,-76,o),
(502,-97,o),
(502,-128,cs),
(502,-171,o),
(544,-201,o),
(603,-201,cs)
);
},
{
closed = 1;
nodes = (
(285,288,o),
(265,288,o),
(244,289,c),
(255,332,o),
(278,424,o),
(304,516,cs),
(330,613,o),
(347,680,o),
(356,715,c),
(381,597,o),
(431,393,o),
(458,289,c),
(443,288,o),
(427,288,o),
(411,288,cs),
(394,288,o),
(378,288,o),
(363,288,cs),
(342,288,o),
(323,288,o),
(304,288,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
71 1 8 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 0 4 12 12 0 96 0 10 1 9 1 10 9 104 0 8 0 2 3 8 2 90 13 1 12 0 1 10 12 1 92 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 67 0 9 9 11 83 0 11 11 17 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 0 4 12 12 0 96 0 10 1 9 1 10 9 104 0 8 0 2 3 8 2 90 13 1 12 0 1 10 12 1 92 0 9 0 11 9 11 87 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 0 4 12 4 0 12 104 0 10 1 9 1 10 9 104 0 8 0 2 3 8 2 90 13 1 12 0 1 10 12 1 92 0 9 0 11 9 11 87 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 7 8 7 106 0 0 4 12 4 0 12 104 0 10 1 9 1 10 9 104 0 8 0 2 3 8 2 90 13 1 12 0 1 10 12 1 92 0 9 0 11 9 11 87 6 5 2 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
89 89 89 118 89 118 111 109 103 101 98 96 105 44 19 36 52 56 30 52 35 14 35
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(628,-202,o),
(658,-161,o),
(658,-151,cs),
(658,-143,o),
(656,-135,o),
(644,-135,cs),
(625,-135,o),
(619,-175,o),
(582,-175,cs),
(551,-175,o),
(543,-145,o),
(543,-128,cs),
(543,-110,o),
(551,-77,o),
(576,-55,c),
(686,-55,ls),
(709,-55,o),
(721,-50,o),
(721,-41,cs),
(721,-29,o),
(704,-29,o),
(685,-29,cs),
(653,-29,o),
(629,-27,o),
(612,-23,cs),
(595,-19,o),
(585,-10,o),
(582,3,cs),
(365,816,ls),
(361,831,o),
(352,835,o),
(345,835,cs),
(334,835,o),
(327,827,o),
(324,816,cs),
(310,767,o),
(265,604,o),
(225,457,cs),
(181,298,o),
(146,172,o),
(110,69,cs),
(101,45,o),
(90,34,o),
(61,31,cs),
(62,31,o),
(9,25,o),
(-30,25,cs),
(-43,25,o),
(-50,21,o),
(-50,14,cs),
(-50,3,o),
(-39,0,o),
(-27,0,cs),
(225,0,ls),
(238,0,o),
(247,2,o),
(252,5,cs),
(257,8,o),
(259,12,o),
(259,15,cs),
(259,30,o),
(238,29,o),
(225,29,cs),
(205,29,o),
(154,26,o),
(154,45,cs),
(154,74,o),
(187,173,o),
(206,238,c),
(477,238,l),
(481,219,o),
(496,170,o),
(511,113,cs),
(528,45,o),
(538,6,o),
(538,-5,cs),
(538,-37,o),
(442,-16,o),
(442,-41,cs),
(442,-46,o),
(444,-50,o),
(449,-52,cs),
(453,-54,o),
(461,-55,o),
(473,-55,cs),
(540,-55,l),
(521,-70,o),
(499,-94,o),
(499,-129,cs),
(499,-172,o),
(533,-202,o),
(580,-202,cs)
);
},
{
closed = 1;
nodes = (
(299,272,o),
(259,273,o),
(218,274,c),
(233,339,o),
(254,418,o),
(284,530,cs),
(314,640,o),
(334,709,o),
(343,755,c),
(374,642,o),
(431,411,o),
(465,274,c),
(424,273,o),
(381,272,o),
(340,272,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
99 1 13 12 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 3 1 2 1 3 2 104 0 13 0 7 8 13 7 90 6 1 0 5 1 1 3 0 1 91 0 12 12 20 67 11 10 2 8 8 9 83 0 9 9 13 67 0 2 2 4 83 0 4 4 17 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 3 1 2 1 3 2 104 0 13 0 7 8 13 7 90 6 1 0 5 1 1 3 0 1 91 0 2 0 4 2 4 87 0 12 12 20 67 11 10 2 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 12 13 12 106 0 3 1 2 1 3 2 104 0 13 0 7 8 13 7 90 6 1 0 5 1 1 3 0 1 91 0 2 0 4 2 4 87 11 10 2 8 8 9 83 0 9 9 13 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
112 106 96 94 82 81 79 76 73 70 56 25 20 37 38 35 41 35 34 14 24
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = Aogonek;
unicode = 260;
},
{
glyphname = Aring;
kernLeft = Aacute;
kernRight = Aacute;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(742,-55,ls),
(765,-55,o),
(777,-49,o),
(777,-25,cs),
(777,-2,o),
(752,3,o),
(733,3,cs),
(648,3,o),
(619,8,o),
(613,35,cs),
(410,793,l),
(410,793,l),
(402,824,o),
(387,838,o),
(359,838,cs),
(324,838,o),
(314,823,o),
(305,792,cs),
(285,726,o),
(251,598,o),
(213,460,cs),
(175,324,o),
(134,181,o),
(107,101,cs),
(98,74,o),
(82,66,o),
(58,63,cs),
(54,63,o),
(36,57,o),
(1,57,cs),
(-12,57,o),
(-28,47,o),
(-28,30,cs),
(-28,11,o),
(-17,0,o),
(-5,0,cs),
(273,0,ls),
(300,0,o),
(307,14,o),
(307,29,cs),
(307,53,o),
(295,61,o),
(274,61,cs),
(251,61,o),
(233,62,o),
(221,65,cs),
(208,68,o),
(202,72,o),
(202,77,cs),
(202,98,o),
(219,168,o),
(238,214,c),
(470,214,l),
(468,222,o),
(517,59,o),
(517,35,cs),
(517,-16,o),
(464,5,o),
(464,-33,cs),
(464,-44,o),
(471,-55,o),
(495,-55,cs)
);
},
{
closed = 1;
nodes = (
(304,296,o),
(314,298,o),
(262,298,c),
(284,379,o),
(315,510,o),
(362,691,c),
(385,566,o),
(421,414,o),
(453,298,c),
(420,298,o),
(415,296,o),
(358,296,cs)
);
},
{
closed = 1;
nodes = (
(416,840,o),
(449,862,o),
(449,907,cs),
(449,950,o),
(423,972,o),
(371,972,cs),
(330,972,o),
(297,944,o),
(297,905,cs),
(297,866,o),
(331,840,o),
(376,840,cs)
);
},
{
closed = 1;
nodes = (
(367,882,o),
(352,886,o),
(352,905,cs),
(352,928,o),
(368,930,o),
(373,930,cs),
(380,930,o),
(394,927,o),
(394,906,cs),
(394,886,o),
(383,882,o),
(376,882,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
92 1 12 11 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
13 1 2 1 3 0 2 96 0 3 0 1 3 94 0 1 0 0 11 1 0 91 0 12 0 6 7 12 6 90 0 4 0 5 4 5 87 0 11 11 20 67 10 9 2 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
13 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 1 0 0 11 1 0 91 0 12 0 6 7 12 6 90 0 4 0 5 4 5 87 0 11 11 20 67 10 9 2 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
13 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 11 0 12 0 11 12 104 0 1 0 0 11 1 0 91 0 12 0 6 7 12 6 90 0 4 0 5 4 5 87 10 9 2 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
12 11 107 97 89 87 75 74 71 69 65 62 58 56 49 48 36 33 29 26 18 16 11 22 12 22 36 34 14 17
CALL[ ]	/* CallFunction */";
};
width = 710;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(719,-55,ls),
(742,-55,o),
(754,-50,o),
(754,-31,cs),
(754,-12,o),
(732,-9,o),
(713,-9,cs),
(649,-9,o),
(608,-8,o),
(600,23,cs),
(388,816,l),
(388,816,l),
(384,830,o),
(372,837,o),
(353,837,cs),
(329,837,o),
(320,827,o),
(317,816,cs),
(293,737,o),
(268,639,o),
(220,467,cs),
(174,304,o),
(138,173,o),
(108,89,cs),
(100,65,o),
(87,54,o),
(59,51,cs),
(60,51,o),
(15,45,o),
(-12,45,cs),
(-25,45,o),
(-37,37,o),
(-37,24,cs),
(-37,9,o),
(-26,0,o),
(-14,0,cs),
(253,0,ls),
(280,0,o),
(287,12,o),
(287,24,cs),
(287,44,o),
(271,49,o),
(258,49,cs),
(224,49,o),
(182,49,o),
(182,65,cs),
(182,92,o),
(208,175,o),
(225,223,c),
(473,223,l),
(477,207,o),
(490,168,o),
(503,116,cs),
(518,57,o),
(526,24,o),
(526,15,cs),
(526,-33,o),
(455,-14,o),
(455,-39,cs),
(455,-44,o),
(457,-48,o),
(462,-51,cs),
(466,-54,o),
(474,-55,o),
(486,-55,cs)
);
},
{
closed = 1;
nodes = (
(285,288,o),
(265,288,o),
(244,289,c),
(255,332,o),
(278,424,o),
(304,516,cs),
(330,613,o),
(347,680,o),
(356,715,c),
(381,597,o),
(431,393,o),
(458,289,c),
(443,288,o),
(427,288,o),
(411,288,cs),
(394,288,o),
(378,288,o),
(363,288,cs),
(342,288,o),
(323,288,o),
(304,288,cs)
);
},
{
closed = 1;
nodes = (
(399,853,o),
(433,873,o),
(433,914,cs),
(433,953,o),
(409,972,o),
(362,972,cs),
(322,972,o),
(291,947,o),
(291,912,cs),
(291,877,o),
(323,853,o),
(363,853,cs)
);
},
{
closed = 1;
nodes = (
(355,887,o),
(336,892,o),
(336,912,cs),
(336,932,o),
(351,938,o),
(362,938,cs),
(375,938,o),
(388,932,o),
(388,913,cs),
(388,892,o),
(370,887,o),
(363,887,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
93 1 12 11 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
13 1 2 1 3 0 2 96 0 3 0 1 3 94 0 1 0 0 11 1 0 91 0 12 0 6 7 12 6 90 0 4 0 5 4 5 87 0 11 11 20 67 10 9 2 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
13 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 1 0 0 11 1 0 91 0 12 0 6 7 12 6 90 0 4 0 5 4 5 87 0 11 11 20 67 10 9 2 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
13 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 11 0 12 0 11 12 104 0 1 0 0 11 1 0 91 0 12 0 6 7 12 6 90 0 4 0 5 4 5 87 10 9 2 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
12 11 106 100 91 89 77 76 73 71 67 64 60 57 49 48 34 31 27 25 18 16 11 22 12 22 36 34 14 17
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(686,-55,ls),
(709,-55,o),
(721,-50,o),
(721,-41,cs),
(721,-29,o),
(704,-29,o),
(685,-29,cs),
(653,-29,o),
(629,-27,o),
(612,-23,cs),
(595,-19,o),
(585,-10,o),
(582,3,cs),
(365,816,ls),
(361,831,o),
(352,835,o),
(345,835,cs),
(334,835,o),
(327,827,o),
(324,816,cs),
(310,767,o),
(265,604,o),
(225,457,cs),
(181,298,o),
(146,172,o),
(110,69,cs),
(101,45,o),
(90,34,o),
(61,31,cs),
(62,31,o),
(9,25,o),
(-30,25,cs),
(-43,25,o),
(-50,21,o),
(-50,14,cs),
(-50,3,o),
(-39,0,o),
(-27,0,cs),
(225,0,ls),
(238,0,o),
(247,2,o),
(252,5,cs),
(257,8,o),
(259,12,o),
(259,15,cs),
(259,30,o),
(238,29,o),
(225,29,cs),
(205,29,o),
(154,26,o),
(154,45,cs),
(154,74,o),
(187,173,o),
(206,238,c),
(477,238,l),
(481,219,o),
(496,170,o),
(511,113,cs),
(528,45,o),
(538,6,o),
(538,-5,cs),
(538,-37,o),
(442,-16,o),
(442,-41,cs),
(442,-46,o),
(444,-50,o),
(449,-52,cs),
(453,-54,o),
(461,-55,o),
(473,-55,cs)
);
},
{
closed = 1;
nodes = (
(299,272,o),
(259,273,o),
(218,274,c),
(233,339,o),
(254,418,o),
(284,530,cs),
(314,640,o),
(334,709,o),
(343,755,c),
(374,642,o),
(431,411,o),
(465,274,c),
(424,273,o),
(381,272,o),
(340,272,cs)
);
},
{
closed = 1;
nodes = (
(375,875,o),
(410,891,o),
(410,925,cs),
(410,950,o),
(389,972,o),
(349,972,cs),
(310,972,o),
(283,951,o),
(283,923,cs),
(283,895,o),
(310,875,o),
(345,875,cs)
);
},
{
closed = 1;
nodes = (
(322,895,o),
(313,908,o),
(313,923,cs),
(313,935,o),
(322,951,o),
(347,951,cs),
(374,951,o),
(380,936,o),
(380,924,cs),
(380,905,o),
(368,895,o),
(345,895,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
94 1 13 12 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 14 1 2 3 1 2 91 0 3 0 0 12 3 0 91 0 13 0 7 8 13 7 90 6 1 4 0 5 4 5 87 0 12 12 20 67 11 10 2 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 12 0 13 0 12 13 104 0 1 14 1 2 3 1 2 91 0 3 0 0 12 3 0 91 0 13 0 7 8 13 7 90 6 1 4 0 5 4 5 87 11 10 2 8 8 9 83 0 9 9 13 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
15 14 107 101 91 89 77 76 74 71 68 65 61 58 50 49 40 39 35 32 29 27 21 19 14 24 15 24 36 36 15 17
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = Aring;
unicode = 197;
},
{
glyphname = Aringacute;
kernLeft = Aacute;
kernRight = Aacute;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(522,-58,o),
(544,-57,o),
(565,-55,cs),
(586,-54,o),
(609,-53,o),
(634,-53,cs),
(649,-53,o),
(668,-53,o),
(690,-54,cs),
(711,-55,o),
(730,-55,o),
(746,-55,cs),
(769,-55,o),
(781,-49,o),
(781,-25,cs),
(781,-2,o),
(755,3,o),
(736,3,cs),
(701,3,o),
(673,5,o),
(653,9,cs),
(633,12,o),
(621,21,o),
(616,35,cs),
(408,717,ls),
(406,723,o),
(402,728,o),
(395,732,c),
(418,743,o),
(434,763,o),
(434,794,cs),
(434,825,o),
(422,844,o),
(397,853,c),
(433,871,o),
(479,906,o),
(479,936,cs),
(479,953,o),
(465,972,o),
(438,972,cs),
(400,972,o),
(324,899,o),
(324,872,cs),
(324,865,o),
(326,860,o),
(330,855,c),
(302,844,o),
(282,821,o),
(282,792,cs),
(282,763,o),
(300,743,o),
(327,732,c),
(321,729,o),
(317,724,o),
(316,717,c),
(294,652,o),
(260,543,o),
(221,425,cs),
(172,278,o),
(138,174,o),
(110,101,cs),
(99,74,o),
(86,66,o),
(61,63,cs),
(57,63,o),
(39,57,o),
(4,57,cs),
(-9,57,o),
(-24,47,o),
(-24,30,cs),
(-24,11,o),
(-13,0,o),
(-1,0,cs),
(24,0,o),
(48,1,o),
(72,2,cs),
(96,3,o),
(120,4,o),
(145,4,cs),
(167,4,o),
(189,3,o),
(211,2,cs),
(233,1,o),
(255,0,o),
(276,0,cs),
(303,0,o),
(310,14,o),
(310,29,cs),
(310,53,o),
(298,61,o),
(285,61,cs),
(253,61,o),
(232,63,o),
(222,67,cs),
(211,71,o),
(206,74,o),
(206,77,cs),
(206,75,o),
(222,136,o),
(254,214,c),
(464,214,l),
(469,201,o),
(521,52,o),
(521,27,cs),
(521,-33,o),
(468,-7,o),
(468,-38,cs),
(468,-49,o),
(475,-58,o),
(499,-58,cs)
);
},
{
closed = 1;
nodes = (
(312,297,o),
(296,297,o),
(278,298,c),
(286,327,o),
(304,385,o),
(325,453,cs),
(345,520,o),
(361,573,o),
(369,592,c),
(374,570,o),
(414,385,o),
(447,298,c),
(438,297,o),
(426,297,o),
(411,297,cs),
(396,297,o),
(384,297,o),
(375,297,cs),
(357,297,o),
(341,297,o),
(327,297,cs)
);
},
{
closed = 1;
nodes = (
(354,767,o),
(335,771,o),
(335,792,cs),
(335,815,o),
(351,818,o),
(358,818,cs),
(367,818,o),
(382,814,o),
(382,793,cs),
(382,772,o),
(368,767,o),
(361,767,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
99 84 2 10 8 114 101 78 3 4 9 11 2 66 0 8 10 8 106 12 1 10 11 10 106 0 11 9 11 106 0 9 0 3 4 9 3 90 0 0 2 1 1 0 1 87 7 6 2 4 4 5 83 0 5 5 13 5 68 120 119 126 124 119 130 120 130 113 108 92 90 19 36 132 39 28 33 84 40 13 23
CALL[ ]	/* CallFunction */";
};
width = 716;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(722,-55,ls),
(745,-55,o),
(757,-50,o),
(757,-31,cs),
(757,-12,o),
(735,-9,o),
(716,-9,cs),
(652,-9,o),
(612,-8,o),
(603,23,cs),
(391,716,l),
(391,716,l),
(387,730,o),
(375,737,o),
(356,737,cs),
(332,737,o),
(323,727,o),
(320,716,c),
(298,654,o),
(269,559,o),
(223,417,cs),
(177,277,o),
(141,163,o),
(111,89,cs),
(103,65,o),
(90,54,o),
(62,51,cs),
(63,51,o),
(18,45,o),
(-9,45,cs),
(-22,45,o),
(-34,37,o),
(-34,24,cs),
(-34,9,o),
(-23,0,o),
(-11,0,cs),
(256,0,ls),
(283,0,o),
(290,12,o),
(290,24,cs),
(290,44,o),
(274,49,o),
(261,49,cs),
(227,49,o),
(185,49,o),
(185,65,c),
(188,89,o),
(219,176,o),
(238,223,c),
(466,223,l),
(470,212,o),
(484,170,o),
(502,116,cs),
(520,57,o),
(529,24,o),
(529,15,cs),
(529,-33,o),
(458,-14,o),
(458,-39,cs),
(458,-44,o),
(460,-48,o),
(465,-51,cs),
(469,-54,o),
(477,-55,o),
(489,-55,cs)
);
},
{
closed = 1;
nodes = (
(295,288,o),
(276,288,o),
(257,289,c),
(279,375,o),
(340,549,o),
(359,615,c),
(386,509,o),
(422,379,o),
(451,289,c),
(437,288,o),
(423,288,o),
(409,288,cs),
(394,288,o),
(380,288,o),
(366,288,cs),
(347,288,o),
(329,288,o),
(312,288,cs)
);
},
{
closed = 1;
nodes = (
(404,748,o),
(438,768,o),
(438,809,cs),
(438,848,o),
(414,867,o),
(367,867,cs),
(363,867,l),
(399,883,o),
(452,913,o),
(452,939,cs),
(452,958,o),
(442,969,o),
(422,972,c),
(390,972,o),
(318,908,o),
(315,882,cs),
(315,870,o),
(318,860,o),
(330,859,c),
(309,848,o),
(296,830,o),
(296,807,cs),
(296,772,o),
(328,748,o),
(368,748,cs)
);
},
{
closed = 1;
nodes = (
(360,782,o),
(341,787,o),
(341,807,cs),
(341,827,o),
(356,833,o),
(367,833,cs),
(380,833,o),
(393,827,o),
(393,808,cs),
(393,787,o),
(375,782,o),
(368,782,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
106 1 9 11 103 1 12 9 70 1 8 7 31 1 3 2 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 11 9 11 106 14 1 12 9 13 10 12 96 0 13 10 9 13 94 0 7 10 8 10 7 8 104 0 9 0 10 7 9 10 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 11 9 11 106 14 1 12 9 13 9 12 13 104 0 13 10 9 13 10 102 0 7 10 8 10 7 8 104 0 9 0 10 7 9 10 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 6 5 2 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
115 114 121 119 114 125 115 125 111 110 98 96 93 91 103 44 19 36 52 56 30 52 34 15 24
CALL[ ]	/* CallFunction */";
};
width = 703;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(492,-55,o),
(510,-55,o),
(528,-54,cs),
(545,-53,o),
(563,-53,o),
(581,-53,cs),
(598,-53,o),
(616,-53,o),
(635,-54,cs),
(653,-55,o),
(671,-55,o),
(688,-55,cs),
(711,-55,o),
(723,-50,o),
(723,-41,cs),
(723,-29,o),
(706,-29,o),
(687,-29,cs),
(655,-29,o),
(631,-27,o),
(615,-23,cs),
(598,-19,o),
(588,-10,o),
(584,3,cs),
(367,714,ls),
(363,729,o),
(354,733,o),
(347,733,cs),
(336,733,o),
(329,725,o),
(326,714,cs),
(303,637,o),
(274,549,o),
(227,406,cs),
(175,250,o),
(148,171,o),
(112,69,cs),
(103,45,o),
(92,34,o),
(63,31,cs),
(64,31,o),
(11,25,o),
(-28,25,cs),
(-41,25,o),
(-48,21,o),
(-48,14,cs),
(-48,3,o),
(-37,0,o),
(-25,0,cs),
(18,1,o),
(58,2,o),
(101,2,cs),
(122,2,o),
(143,2,o),
(164,1,cs),
(185,0,o),
(206,0,o),
(227,0,cs),
(240,0,o),
(249,2,o),
(254,5,cs),
(259,8,o),
(261,12,o),
(261,15,cs),
(261,30,o),
(240,29,o),
(227,29,cs),
(207,29,o),
(156,26,o),
(156,45,cs),
(156,75,o),
(198,180,o),
(215,238,c),
(469,238,l),
(472,226,o),
(486,182,o),
(508,113,cs),
(529,43,o),
(540,7,o),
(540,-5,cs),
(540,-37,o),
(444,-16,o),
(444,-41,cs),
(444,-46,o),
(446,-50,o),
(451,-52,cs),
(455,-54,o),
(463,-55,o),
(475,-55,cs)
);
},
{
closed = 1;
nodes = (
(301,272,o),
(268,273,o),
(227,274,c),
(254,397,o),
(327,561,o),
(345,653,c),
(383,513,o),
(426,402,o),
(457,274,c),
(416,273,o),
(383,272,o),
(342,272,cs)
);
},
{
closed = 1;
nodes = (
(377,759,o),
(412,775,o),
(412,809,cs),
(412,834,o),
(391,856,o),
(351,856,cs),
(312,856,o),
(285,835,o),
(285,807,cs),
(285,779,o),
(312,759,o),
(347,759,cs)
);
},
{
closed = 1;
nodes = (
(324,782,o),
(319,792,o),
(319,807,cs),
(319,819,o),
(324,833,o),
(349,833,cs),
(376,833,o),
(377,820,o),
(377,808,cs),
(377,789,o),
(370,782,o),
(347,782,cs)
);
},
{
closed = 1;
nodes = (
(323,875,o),
(413,928,o),
(413,950,cs),
(413,969,o),
(405,972,o),
(394,972,cs),
(374,972,o),
(299,911,o),
(299,886,cs),
(299,879,o),
(302,875,o),
(307,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
79 1 9 8 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 15 14 15 106 0 14 11 14 106 0 8 10 9 10 8 9 104 0 13 0 10 8 13 10 91 0 9 0 3 4 9 3 90 2 1 0 0 1 0 1 87 16 1 12 12 11 83 0 11 11 20 67 7 6 2 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
0 15 14 15 106 0 14 11 14 106 0 8 10 9 10 8 9 104 0 11 16 1 12 13 11 12 91 0 13 0 10 8 13 10 91 0 9 0 3 4 9 3 90 2 1 0 0 1 0 1 87 7 6 2 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
110 109 134 132 127 125 116 114 109 120 110 120 107 105 101 99 90 84 44 18 51 132 56 25 20 131 34 17 24
CALL[ ]	/* CallFunction */";
};
width = 685;
}
);
note = Aringacute;
unicode = 506;
},
{
glyphname = Atilde;
kernLeft = Aacute;
kernRight = Aacute;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(742,-55,ls),
(765,-55,o),
(777,-49,o),
(777,-25,cs),
(777,-2,o),
(752,3,o),
(733,3,cs),
(648,3,o),
(619,8,o),
(613,35,cs),
(410,793,l),
(410,793,l),
(402,824,o),
(387,838,o),
(359,838,cs),
(324,838,o),
(314,823,o),
(305,792,cs),
(285,726,o),
(251,598,o),
(213,460,cs),
(175,324,o),
(134,181,o),
(107,101,cs),
(98,74,o),
(82,66,o),
(58,63,cs),
(54,63,o),
(36,57,o),
(1,57,cs),
(-12,57,o),
(-28,47,o),
(-28,30,cs),
(-28,11,o),
(-17,0,o),
(-5,0,cs),
(273,0,ls),
(300,0,o),
(307,14,o),
(307,29,cs),
(307,53,o),
(295,61,o),
(274,61,cs),
(251,61,o),
(233,62,o),
(221,65,cs),
(208,68,o),
(202,72,o),
(202,77,cs),
(202,98,o),
(219,168,o),
(238,214,c),
(470,214,l),
(468,222,o),
(517,59,o),
(517,35,cs),
(517,-16,o),
(464,5,o),
(464,-33,cs),
(464,-44,o),
(471,-55,o),
(495,-55,cs)
);
},
{
closed = 1;
nodes = (
(304,296,o),
(314,298,o),
(262,298,c),
(284,379,o),
(315,510,o),
(362,691,c),
(385,566,o),
(421,414,o),
(453,298,c),
(420,298,o),
(415,296,o),
(358,296,cs)
);
},
{
closed = 1;
nodes = (
(220,861,o),
(244,886,o),
(283,886,cs),
(322,886,o),
(364,862,o),
(420,862,cs),
(453,862,o),
(531,880,o),
(531,937,cs),
(531,958,o),
(516,972,o),
(509,972,cs),
(504,972,o),
(494,968,o),
(479,959,cs),
(460,948,o),
(438,942,o),
(419,942,cs),
(380,942,o),
(318,970,o),
(282,970,cs),
(257,970,o),
(235,964,o),
(214,952,cs),
(195,941,o),
(180,926,o),
(180,897,cs),
(180,877,o),
(187,861,o),
(199,861,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
69 1 8 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
11 1 9 0 13 12 9 13 91 0 10 14 1 12 7 10 12 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 88 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 7 12 8 12 7 8 104 11 1 9 0 13 12 9 13 91 0 10 14 1 12 7 10 12 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 88 6 5 2 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
123 121 118 116 113 111 105 103 100 98 95 93 168 44 19 36 52 39 28 52 51 15 24
CALL[ ]	/* CallFunction */";
};
width = 710;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(719,-55,ls),
(742,-55,o),
(754,-50,o),
(754,-31,cs),
(754,-12,o),
(732,-9,o),
(713,-9,cs),
(649,-9,o),
(608,-8,o),
(600,23,cs),
(388,816,l),
(388,816,l),
(384,830,o),
(372,837,o),
(353,837,cs),
(329,837,o),
(320,827,o),
(317,816,cs),
(293,737,o),
(268,639,o),
(220,467,cs),
(174,304,o),
(138,173,o),
(108,89,cs),
(100,65,o),
(87,54,o),
(59,51,cs),
(60,51,o),
(15,45,o),
(-12,45,cs),
(-25,45,o),
(-37,37,o),
(-37,24,cs),
(-37,9,o),
(-26,0,o),
(-14,0,cs),
(253,0,ls),
(280,0,o),
(287,12,o),
(287,24,cs),
(287,44,o),
(271,49,o),
(258,49,cs),
(224,49,o),
(182,49,o),
(182,65,cs),
(182,92,o),
(208,175,o),
(225,223,c),
(473,223,l),
(477,207,o),
(490,168,o),
(503,116,cs),
(518,57,o),
(526,24,o),
(526,15,cs),
(526,-33,o),
(455,-14,o),
(455,-39,cs),
(455,-44,o),
(457,-48,o),
(462,-51,cs),
(466,-54,o),
(474,-55,o),
(486,-55,cs)
);
},
{
closed = 1;
nodes = (
(285,288,o),
(265,288,o),
(244,289,c),
(255,332,o),
(278,424,o),
(304,516,cs),
(330,613,o),
(347,680,o),
(356,715,c),
(381,597,o),
(431,393,o),
(458,289,c),
(443,288,o),
(427,288,o),
(411,288,cs),
(394,288,o),
(378,288,o),
(363,288,cs),
(342,288,o),
(323,288,o),
(304,288,cs)
);
},
{
closed = 1;
nodes = (
(228,879,o),
(255,904,o),
(295,904,cs),
(334,904,o),
(376,880,o),
(432,880,cs),
(488,880,o),
(521,902,o),
(534,925,cs),
(537,931,o),
(539,937,o),
(539,944,cs),
(539,960,o),
(528,972,o),
(521,972,cs),
(518,972,o),
(514,971,o),
(511,970,cs),
(507,968,o),
(500,964,o),
(491,959,cs),
(468,948,o),
(448,942,o),
(431,942,cs),
(392,942,o),
(330,970,o),
(294,970,cs),
(269,970,o),
(247,964,o),
(226,952,cs),
(216,946,o),
(209,941,o),
(205,936,cs),
(201,931,o),
(198,927,o),
(197,924,cs),
(195,919,o),
(194,913,o),
(194,907,cs),
(194,892,o),
(200,879,o),
(211,879,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
71 1 8 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
11 1 9 0 13 12 9 13 91 0 10 14 1 12 7 10 12 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 88 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 7 12 8 12 7 8 104 11 1 9 0 13 12 9 13 91 0 10 14 1 12 7 10 12 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 88 6 5 2 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
123 121 118 116 113 111 105 103 100 98 95 93 105 44 19 36 52 56 30 52 35 15 35
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(686,-55,ls),
(709,-55,o),
(721,-50,o),
(721,-41,cs),
(721,-29,o),
(704,-29,o),
(685,-29,cs),
(653,-29,o),
(629,-27,o),
(612,-23,cs),
(595,-19,o),
(585,-10,o),
(582,3,cs),
(365,816,ls),
(361,831,o),
(352,835,o),
(345,835,cs),
(334,835,o),
(327,827,o),
(324,816,cs),
(310,767,o),
(265,604,o),
(225,457,cs),
(181,298,o),
(146,172,o),
(110,69,cs),
(101,45,o),
(90,34,o),
(61,31,cs),
(62,31,o),
(9,25,o),
(-30,25,cs),
(-43,25,o),
(-50,21,o),
(-50,14,cs),
(-50,3,o),
(-39,0,o),
(-27,0,cs),
(225,0,ls),
(238,0,o),
(247,2,o),
(252,5,cs),
(257,8,o),
(259,12,o),
(259,15,cs),
(259,30,o),
(238,29,o),
(225,29,cs),
(205,29,o),
(154,26,o),
(154,45,cs),
(154,74,o),
(187,173,o),
(206,238,c),
(477,238,l),
(481,219,o),
(496,170,o),
(511,113,cs),
(528,45,o),
(538,6,o),
(538,-5,cs),
(538,-37,o),
(442,-16,o),
(442,-41,cs),
(442,-46,o),
(444,-50,o),
(449,-52,cs),
(453,-54,o),
(461,-55,o),
(473,-55,cs)
);
},
{
closed = 1;
nodes = (
(299,272,o),
(259,273,o),
(218,274,c),
(233,339,o),
(254,418,o),
(284,530,cs),
(314,640,o),
(334,709,o),
(343,755,c),
(374,642,o),
(431,411,o),
(465,274,c),
(424,273,o),
(381,272,o),
(340,272,cs)
);
},
{
closed = 1;
nodes = (
(209,888,o),
(236,913,o),
(277,913,cs),
(316,913,o),
(358,889,o),
(414,889,cs),
(467,889,o),
(516,909,o),
(516,934,cs),
(516,943,o),
(510,951,o),
(503,951,cs),
(500,951,o),
(496,950,o),
(493,949,cs),
(489,947,o),
(482,943,o),
(473,938,cs),
(450,927,o),
(430,921,o),
(413,921,cs),
(374,921,o),
(312,949,o),
(276,949,cs),
(251,949,o),
(229,943,o),
(208,931,cs),
(189,920,o),
(179,910,o),
(179,903,cs),
(179,896,o),
(186,888,o),
(193,888,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
69 1 9 8 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
12 1 10 0 14 13 10 14 91 0 11 15 1 13 8 11 13 91 0 9 0 3 4 9 3 90 2 1 0 0 1 0 1 88 0 8 8 20 67 7 6 2 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 8 13 9 13 8 9 104 12 1 10 0 14 13 10 14 91 0 11 15 1 13 8 11 13 91 0 9 0 3 4 9 3 90 2 1 0 0 1 0 1 88 7 6 2 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
120 118 115 113 110 108 102 100 97 95 92 90 82 76 44 18 51 52 56 25 20 51 34 16 24
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = Atilde;
unicode = 195;
},
{
glyphname = AE;
kernLeft = AE;
kernRight = AE;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(16,0,o),
(39,0,o),
(62,1,cs),
(85,2,o),
(108,2,o),
(129,2,cs),
(150,2,o),
(170,2,o),
(189,1,cs),
(207,0,o),
(227,0,o),
(248,0,cs),
(275,0,o),
(293,4,o),
(293,31,cs),
(293,51,o),
(283,59,o),
(270,60,cs),
(262,61,o),
(255,62,o),
(250,63,cs),
(245,64,o),
(242,65,o),
(242,68,cs),
(242,73,o),
(267,126,o),
(321,214,c),
(529,214,l),
(529,195,o),
(529,178,o),
(529,161,cs),
(528,144,o),
(528,122,o),
(528,96,cs),
(528,82,o),
(522,73,o),
(511,68,cs),
(500,63,o),
(478,60,o),
(447,60,cs),
(420,60,o),
(408,55,o),
(408,32,cs),
(408,8,o),
(434,0,o),
(454,0,cs),
(495,0,o),
(535,0,o),
(576,1,cs),
(616,2,o),
(656,2,o),
(697,2,cs),
(746,2,o),
(794,2,o),
(841,1,cs),
(888,0,o),
(936,0,o),
(985,0,cs),
(1014,0,o),
(1024,10,o),
(1027,33,cs),
(1040,131,o),
(1043,248,o),
(1043,277,cs),
(1043,296,o),
(1036,326,o),
(1002,326,cs),
(967,326,o),
(957,300,o),
(956,273,cs),
(951,182,o),
(943,131,o),
(943,121,cs),
(940,87,o),
(921,84,o),
(900,84,cs),
(622,84,l),
(622,377,l),
(643,378,o),
(664,379,o),
(685,379,cs),
(704,379,o),
(720,379,o),
(732,379,cs),
(744,378,o),
(755,378,o),
(764,378,cs),
(803,378,o),
(812,338,o),
(812,309,cs),
(812,292,o),
(825,270,o),
(853,270,cs),
(885,270,o),
(895,288,o),
(895,307,cs),
(895,326,o),
(895,344,o),
(894,363,cs),
(893,382,o),
(893,401,o),
(893,420,cs),
(893,439,o),
(893,458,o),
(894,477,cs),
(895,495,o),
(895,514,o),
(895,533,cs),
(895,548,o),
(885,570,o),
(854,570,cs),
(831,570,o),
(810,565,o),
(810,530,cs),
(810,509,o),
(809,493,o),
(807,482,cs),
(804,470,o),
(800,464,o),
(793,464,cs),
(794,464,o),
(734,461,o),
(685,461,cs),
(674,461,o),
(663,461,o),
(653,462,cs),
(643,463,o),
(633,463,o),
(622,464,c),
(622,737,l),
(874,737,ls),
(898,737,o),
(911,732,o),
(911,709,cs),
(911,645,ls),
(911,627,o),
(913,599,o),
(955,599,cs),
(988,599,o),
(999,626,o),
(999,651,cs),
(999,785,ls),
(999,813,o),
(990,821,o),
(971,821,cs),
(911,821,o),
(862,820,o),
(823,820,cs),
(783,820,o),
(740,819,o),
(693,819,cs),
(641,819,o),
(551,821,o),
(452,821,cs),
(431,821,o),
(394,821,o),
(394,785,cs),
(394,763,o),
(418,757,o),
(434,757,cs),
(449,757,o),
(468,758,o),
(483,751,c),
(443,675,o),
(391,566,o),
(325,428,cs),
(264,304,o),
(200,175,o),
(155,101,cs),
(140,77,o),
(127,66,o),
(98,63,cs),
(99,63,o),
(45,57,o),
(-3,57,cs),
(-24,57,o),
(-42,48,o),
(-42,27,cs),
(-42,7,o),
(-28,0,o),
(-5,0,cs)
);
},
{
closed = 1;
nodes = (
(389,296,o),
(364,297,o),
(341,298,c),
(385,416,o),
(494,584,o),
(524,664,c),
(524,660,ls),
(524,572,o),
(530,535,o),
(530,425,cs),
(530,396,o),
(530,372,o),
(530,352,cs),
(530,331,o),
(530,313,o),
(529,297,c),
(510,296,o),
(490,296,o),
(471,296,cs),
(452,296,o),
(432,296,o),
(413,296,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
73 1 10 7 181 1 9 10 161 1 15 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 85 values pushed */
0 7 8 10 10 7 96 0 9 10 12 10 9 96 17 1 0 14 16 14 0 16 104 0 12 0 13 3 12 13 91 18 1 16 0 3 15 16 3 89 0 10 10 8 84 0 8 8 12 67 0 14 14 11 83 0 11 11 23 67 0 15 15 1 84 4 1 1 1 13 67 6 5 2 2 2 1 83 4 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 86 values pushed */
0 7 8 10 10 7 96 0 9 10 12 10 9 12 104 17 1 0 14 16 14 0 16 104 0 12 0 13 3 12 13 91 18 1 16 0 3 15 16 3 89 0 10 10 8 84 0 8 8 12 67 0 14 14 11 83 0 11 11 23 67 0 15 15 1 84 4 1 1 1 13 67 6 5 2 2 2 1 83 4 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 84 values pushed */
0 7 8 10 10 7 96 0 9 10 12 10 9 12 104 17 1 0 14 16 14 0 16 104 0 11 0 14 0 11 14 91 0 12 0 13 3 12 13 91 18 1 16 0 3 15 16 3 89 0 10 10 8 84 0 8 8 12 67 0 15 15 1 84 4 1 1 1 13 67 6 5 2 2 2 1 83 4 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 84 values pushed */
0 7 8 10 10 7 96 0 9 10 12 10 9 12 104 17 1 0 14 16 14 0 16 104 0 11 0 14 0 11 14 91 0 12 0 13 3 12 13 91 18 1 16 0 3 15 16 3 89 0 10 10 8 84 0 8 8 14 67 0 15 15 1 84 4 1 1 1 13 67 6 5 2 2 2 1 83 4 1 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 44 values pushed */
172 169 1 0 169 188 172 186 157 155 154 147 141 139 129 127 123 114 113 111 104 102 97 84 77 74 63 62 61 57 53 45 32 31 26 24 20 12 0 168 1 168 19 15
CALL[ ]	/* CallFunction */";
};
width = 1076;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(10,0,o),
(32,0,o),
(54,1,cs),
(76,2,o),
(98,2,o),
(119,2,cs),
(140,2,o),
(161,2,o),
(181,1,cs),
(200,0,o),
(221,0,o),
(242,0,cs),
(269,0,o),
(284,6,o),
(284,25,cs),
(284,46,o),
(261,49,o),
(248,49,cs),
(240,50,o),
(233,50,o),
(227,51,cs),
(220,51,o),
(217,56,o),
(217,65,cs),
(217,76,o),
(245,132,o),
(299,223,c),
(526,223,l),
(526,201,o),
(526,180,o),
(526,160,cs),
(525,140,o),
(525,115,o),
(525,84,cs),
(525,70,o),
(519,61,o),
(508,56,cs),
(497,51,o),
(475,48,o),
(444,48,cs),
(417,48,o),
(405,44,o),
(405,24,cs),
(405,5,o),
(431,0,o),
(451,0,cs),
(532,1,o),
(613,2,o),
(694,2,cs),
(740,2,o),
(785,2,o),
(828,1,cs),
(871,0,o),
(915,0,o),
(961,0,cs),
(989,0,o),
(1000,6,o),
(1003,33,cs),
(1016,165,o),
(1019,266,o),
(1019,277,cs),
(1019,292,o),
(1018,320,o),
(991,320,cs),
(963,320,o),
(954,300,o),
(953,273,cs),
(949,208,o),
(946,171,o),
(940,103,cs),
(937,69,o),
(918,66,o),
(897,66,cs),
(598,66,l),
(598,386,l),
(626,387,o),
(654,388,o),
(682,388,cs),
(701,388,o),
(717,388,o),
(729,388,cs),
(741,387,o),
(752,387,o),
(761,387,cs),
(800,387,o),
(809,340,o),
(809,309,cs),
(809,292,o),
(820,274,o),
(840,274,cs),
(861,274,o),
(871,287,o),
(871,307,cs),
(871,326,o),
(871,344,o),
(870,363,cs),
(869,382,o),
(869,401,o),
(869,420,cs),
(869,439,o),
(869,458,o),
(870,477,cs),
(871,495,o),
(871,514,o),
(871,533,cs),
(871,548,o),
(864,566,o),
(841,566,cs),
(821,566,o),
(807,558,o),
(807,530,cs),
(807,512,o),
(806,455,o),
(790,455,cs),
(791,455,o),
(731,452,o),
(682,452,cs),
(667,452,o),
(653,452,o),
(640,453,cs),
(626,454,o),
(612,454,o),
(598,455,c),
(598,755,l),
(871,755,ls),
(886,755,o),
(908,754,o),
(908,727,cs),
(908,645,ls),
(908,625,o),
(911,601,o),
(942,601,cs),
(969,601,o),
(975,626,o),
(975,651,cs),
(975,785,ls),
(975,813,o),
(966,821,o),
(947,821,cs),
(892,821,o),
(846,820,o),
(810,820,cs),
(773,820,o),
(733,819,o),
(690,819,cs),
(638,819,o),
(548,821,o),
(449,821,cs),
(423,821,o),
(398,817,o),
(398,792,cs),
(398,771,o),
(422,769,o),
(438,769,cs),
(453,769,o),
(472,770,o),
(487,763,c),
(449,691,o),
(384,557,o),
(321,428,cs),
(261,305,o),
(187,160,o),
(145,89,cs),
(130,65,o),
(117,54,o),
(88,51,cs),
(89,51,o),
(31,45,o),
(-9,45,cs),
(-28,45,o),
(-41,38,o),
(-41,22,cs),
(-41,6,o),
(-30,0,o),
(-11,0,cs)
);
},
{
closed = 1;
nodes = (
(394,287,o),
(379,287,o),
(364,288,cs),
(349,289,o),
(334,289,o),
(319,289,c),
(343,348,o),
(379,420,o),
(426,508,cs),
(464,580,o),
(508,665,o),
(521,698,c),
(521,694,ls),
(521,655,o),
(523,614,o),
(524,582,cs),
(525,545,o),
(527,500,o),
(527,425,cs),
(527,394,o),
(527,368,o),
(527,347,cs),
(527,325,o),
(527,305,o),
(526,288,c),
(507,287,o),
(487,287,o),
(468,287,cs),
(449,287,o),
(429,287,o),
(410,287,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
73 1 12 9 183 1 11 12 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 88 values pushed */
0 9 10 12 12 9 96 0 11 12 14 12 11 14 104 19 1 0 16 18 16 0 18 104 0 14 0 15 3 14 15 91 20 1 18 0 3 17 18 3 89 0 12 12 10 84 0 10 10 12 67 0 16 16 13 83 0 13 13 15 67 0 17 17 1 84 6 1 1 1 13 67 8 7 5 4 4 2 2 1 83 6 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 86 values pushed */
0 9 10 12 12 9 96 0 11 12 14 12 11 14 104 19 1 0 16 18 16 0 18 104 0 13 0 16 0 13 16 91 0 14 0 15 3 14 15 91 20 1 18 0 3 17 18 3 89 0 12 12 10 84 0 10 10 12 67 0 17 17 1 84 6 1 1 1 13 67 8 7 5 4 4 2 2 1 83 6 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 86 values pushed */
0 9 10 12 12 9 96 0 11 12 14 12 11 14 104 19 1 0 16 18 16 0 18 104 0 13 0 16 0 13 16 91 0 14 0 15 3 14 15 91 20 1 18 0 3 17 18 3 89 0 12 12 10 84 0 10 10 14 67 0 17 17 1 84 6 1 1 1 13 67 8 7 5 4 4 2 2 1 83 6 1 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 48 values pushed */
174 171 1 0 171 192 174 190 159 157 156 149 143 141 131 129 123 114 113 111 102 100 95 82 77 74 63 62 61 57 53 45 41 40 39 38 32 31 26 24 20 12 0 170 1 170 21 15
CALL[ ]	/* CallFunction */";
};
width = 1054;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(23,1,o),
(62,2,o),
(105,2,cs),
(126,2,o),
(148,2,o),
(170,1,cs),
(191,0,o),
(213,0,o),
(234,0,cs),
(247,0,o),
(257,2,o),
(263,5,cs),
(268,8,o),
(271,12,o),
(271,15,cs),
(271,30,o),
(253,29,o),
(240,29,cs),
(221,29,o),
(173,26,o),
(173,45,cs),
(173,64,o),
(228,159,o),
(268,238,c),
(522,238,l),
(522,167,o),
(521,132,o),
(521,64,cs),
(521,50,o),
(515,41,o),
(504,36,cs),
(493,31,o),
(471,28,o),
(440,28,cs),
(427,28,o),
(417,27,o),
(411,25,cs),
(404,23,o),
(401,18,o),
(401,11,cs),
(401,0,o),
(427,0,o),
(447,0,cs),
(528,1,o),
(609,2,o),
(690,2,cs),
(731,2,o),
(770,2,o),
(809,1,cs),
(847,0,o),
(886,0,o),
(927,0,cs),
(954,0,o),
(966,0,o),
(969,33,cs),
(980,139,o),
(985,285,o),
(985,277,cs),
(985,293,o),
(985,310,o),
(966,310,cs),
(963,310,o),
(959,307,o),
(956,302,cs),
(952,296,o),
(950,286,o),
(949,273,cs),
(944,166,o),
(938,100,o),
(936,73,cs),
(933,39,o),
(914,36,o),
(893,36,cs),
(564,36,l),
(564,401,l),
(603,402,o),
(639,403,o),
(678,403,cs),
(697,403,o),
(713,403,o),
(725,403,cs),
(737,402,o),
(748,402,o),
(757,402,cs),
(797,402,o),
(805,346,o),
(805,309,cs),
(805,292,o),
(813,280,o),
(822,280,cs),
(825,280,o),
(828,282,o),
(832,285,cs),
(835,288,o),
(837,296,o),
(837,307,cs),
(837,326,o),
(837,344,o),
(836,363,cs),
(835,382,o),
(835,401,o),
(835,420,cs),
(835,439,o),
(835,458,o),
(836,477,cs),
(837,495,o),
(837,514,o),
(837,533,cs),
(837,548,o),
(836,560,o),
(820,560,cs),
(806,560,o),
(803,541,o),
(803,530,cs),
(803,471,o),
(797,440,o),
(786,440,cs),
(787,440,o),
(727,437,o),
(678,437,cs),
(659,437,o),
(640,437,o),
(621,438,cs),
(602,439,o),
(583,439,o),
(564,440,c),
(564,785,l),
(867,785,ls),
(880,785,o),
(904,782,o),
(904,757,cs),
(904,645,ls),
(904,626,o),
(904,605,o),
(924,605,cs),
(939,605,o),
(941,626,o),
(941,651,cs),
(941,785,ls),
(941,813,o),
(932,821,o),
(913,821,cs),
(833,821,o),
(749,819,o),
(686,819,cs),
(634,819,o),
(544,821,o),
(445,821,cs),
(425,821,o),
(404,819,o),
(404,804,cs),
(404,789,o),
(421,789,o),
(444,789,cs),
(459,789,o),
(478,790,o),
(493,783,c),
(454,708,o),
(392,580,o),
(317,429,cs),
(242,278,o),
(175,148,o),
(131,69,cs),
(116,45,o),
(103,34,o),
(74,31,cs),
(75,31,o),
(22,25,o),
(-18,25,cs),
(-33,25,o),
(-40,21,o),
(-40,14,cs),
(-40,5,o),
(-33,0,o),
(-20,0,cs)
);
},
{
closed = 1;
nodes = (
(385,272,o),
(365,272,o),
(346,273,cs),
(327,274,o),
(308,274,o),
(288,274,c),
(314,335,o),
(362,431,o),
(409,529,cs),
(458,632,o),
(500,716,o),
(517,754,c),
(517,750,ls),
(517,633,o),
(523,568,o),
(523,425,cs),
(523,391,o),
(523,362,o),
(523,338,cs),
(523,314,o),
(523,292,o),
(522,273,c),
(503,272,o),
(483,272,o),
(464,272,cs),
(445,272,o),
(425,272,o),
(406,272,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
179 73 2 10 8 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 81 values pushed */
0 10 8 13 8 10 13 104 18 1 0 15 14 15 0 14 104 0 13 0 14 17 13 14 91 19 1 17 0 3 16 17 3 89 11 1 8 8 9 83 0 9 9 12 67 0 15 15 12 83 0 12 12 15 67 0 16 16 1 83 5 1 1 1 13 67 7 6 4 3 2 2 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 79 values pushed */
0 10 8 13 8 10 13 104 18 1 0 15 14 15 0 14 104 0 12 0 15 0 12 15 91 0 13 0 14 17 13 14 91 19 1 17 0 3 16 17 3 89 11 1 8 8 9 83 0 9 9 12 67 0 16 16 1 83 5 1 1 1 13 67 7 6 4 3 2 2 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 79 values pushed */
0 10 8 13 8 10 13 104 18 1 0 15 14 15 0 14 104 0 12 0 15 0 12 15 91 0 13 0 14 17 13 14 91 19 1 17 0 3 16 17 3 89 11 1 8 8 9 83 0 9 9 14 67 0 16 16 1 83 5 1 1 1 13 67 7 6 4 3 2 2 1 83 5 1 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 46 values pushed */
170 167 1 0 167 188 170 186 155 153 152 145 139 137 127 125 117 108 107 105 100 98 93 81 77 74 63 62 60 57 55 47 43 40 32 31 24 22 18 10 0 166 1 166 20 15
CALL[ ]	/* CallFunction */";
};
width = 1023;
}
);
note = AE;
unicode = 198;
},
{
glyphname = AEacute;
kernLeft = AE;
kernRight = AE;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(16,0,o),
(39,0,o),
(62,1,cs),
(85,2,o),
(108,2,o),
(129,2,cs),
(150,2,o),
(170,2,o),
(189,1,cs),
(207,0,o),
(227,0,o),
(248,0,cs),
(275,0,o),
(293,4,o),
(293,31,cs),
(293,51,o),
(283,59,o),
(270,60,cs),
(262,61,o),
(255,62,o),
(250,63,cs),
(245,64,o),
(242,65,o),
(242,68,cs),
(242,73,o),
(267,126,o),
(321,214,c),
(529,214,l),
(529,195,o),
(529,178,o),
(529,161,cs),
(528,144,o),
(528,122,o),
(528,96,cs),
(528,82,o),
(522,73,o),
(511,68,cs),
(500,63,o),
(478,60,o),
(447,60,cs),
(420,60,o),
(408,55,o),
(408,32,cs),
(408,8,o),
(434,0,o),
(454,0,cs),
(495,0,o),
(535,0,o),
(576,1,cs),
(616,2,o),
(656,2,o),
(697,2,cs),
(746,2,o),
(794,2,o),
(841,1,cs),
(888,0,o),
(936,0,o),
(985,0,cs),
(1014,0,o),
(1024,10,o),
(1027,33,cs),
(1040,131,o),
(1043,248,o),
(1043,277,cs),
(1043,296,o),
(1036,326,o),
(1002,326,cs),
(967,326,o),
(957,300,o),
(956,273,cs),
(951,182,o),
(943,131,o),
(943,121,cs),
(940,87,o),
(921,84,o),
(900,84,cs),
(622,84,l),
(622,377,l),
(643,378,o),
(664,379,o),
(685,379,cs),
(704,379,o),
(720,379,o),
(732,379,cs),
(744,378,o),
(755,378,o),
(764,378,cs),
(803,378,o),
(812,338,o),
(812,309,cs),
(812,292,o),
(825,270,o),
(853,270,cs),
(885,270,o),
(895,288,o),
(895,307,cs),
(895,326,o),
(895,344,o),
(894,363,cs),
(893,382,o),
(893,401,o),
(893,420,cs),
(893,439,o),
(893,458,o),
(894,477,cs),
(895,495,o),
(895,514,o),
(895,533,cs),
(895,548,o),
(885,570,o),
(854,570,cs),
(831,570,o),
(810,565,o),
(810,530,cs),
(810,509,o),
(809,493,o),
(807,482,cs),
(804,470,o),
(800,464,o),
(793,464,cs),
(794,464,o),
(734,461,o),
(685,461,cs),
(674,461,o),
(663,461,o),
(653,462,cs),
(643,463,o),
(633,463,o),
(622,464,c),
(622,737,l),
(874,737,ls),
(898,737,o),
(911,732,o),
(911,709,cs),
(911,645,ls),
(911,627,o),
(913,599,o),
(955,599,cs),
(988,599,o),
(999,626,o),
(999,651,cs),
(999,785,ls),
(999,813,o),
(990,821,o),
(971,821,cs),
(911,821,o),
(862,820,o),
(823,820,cs),
(783,820,o),
(740,819,o),
(693,819,cs),
(641,819,o),
(551,821,o),
(452,821,cs),
(431,821,o),
(394,821,o),
(394,785,cs),
(394,763,o),
(418,757,o),
(434,757,cs),
(449,757,o),
(468,758,o),
(483,751,c),
(443,675,o),
(391,566,o),
(325,428,cs),
(264,304,o),
(200,175,o),
(155,101,cs),
(140,77,o),
(127,66,o),
(98,63,cs),
(99,63,o),
(45,57,o),
(-3,57,cs),
(-24,57,o),
(-42,48,o),
(-42,27,cs),
(-42,7,o),
(-28,0,o),
(-5,0,cs)
);
},
{
closed = 1;
nodes = (
(389,296,o),
(364,297,o),
(341,298,c),
(385,416,o),
(494,584,o),
(524,664,c),
(524,660,ls),
(524,572,o),
(530,535,o),
(530,425,cs),
(530,396,o),
(530,372,o),
(530,352,cs),
(530,331,o),
(530,313,o),
(529,297,c),
(510,296,o),
(490,296,o),
(471,296,cs),
(452,296,o),
(432,296,o),
(413,296,cs)
);
},
{
closed = 1;
nodes = (
(585,841,o),
(671,897,o),
(671,936,cs),
(671,953,o),
(657,972,o),
(630,972,cs),
(592,972,o),
(516,898,o),
(516,871,cs),
(516,856,o),
(531,841,o),
(552,841,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
89 1 12 9 197 1 11 12 177 1 17 5 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 95 values pushed */
0 1 0 1 106 0 0 10 0 106 0 9 10 12 12 9 96 0 11 12 14 12 11 96 19 1 2 16 18 16 2 18 104 0 14 0 15 5 14 15 91 20 1 18 0 5 17 18 5 89 0 12 12 10 84 0 10 10 12 67 0 16 16 13 83 0 13 13 23 67 0 17 17 3 84 6 1 3 3 13 67 8 7 2 4 4 3 83 6 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 96 values pushed */
0 1 0 1 106 0 0 10 0 106 0 9 10 12 12 9 96 0 11 12 14 12 11 14 104 19 1 2 16 18 16 2 18 104 0 14 0 15 5 14 15 91 20 1 18 0 5 17 18 5 89 0 12 12 10 84 0 10 10 12 67 0 16 16 13 83 0 13 13 23 67 0 17 17 3 84 6 1 3 3 13 67 8 7 2 4 4 3 83 6 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 94 values pushed */
0 1 0 1 106 0 0 10 0 106 0 9 10 12 12 9 96 0 11 12 14 12 11 14 104 19 1 2 16 18 16 2 18 104 0 13 0 16 2 13 16 91 0 14 0 15 5 14 15 91 20 1 18 0 5 17 18 5 89 0 12 12 10 84 0 10 10 12 67 0 17 17 3 84 6 1 3 3 13 67 8 7 2 4 4 3 83 6 1 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 94 values pushed */
0 1 0 1 106 0 0 10 0 106 0 9 10 12 12 9 96 0 11 12 14 12 11 14 104 19 1 2 16 18 16 2 18 104 0 13 0 16 2 13 16 91 0 14 0 15 5 14 15 91 20 1 18 0 5 17 18 5 89 0 12 12 10 84 0 10 10 14 67 0 17 17 3 84 6 1 3 3 13 67 8 7 2 4 4 3 83 6 1 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 46 values pushed */
188 185 17 16 185 204 188 202 173 171 170 163 157 155 145 143 139 130 129 127 120 118 113 100 93 90 79 78 77 73 69 61 48 47 42 40 36 28 16 184 17 184 38 36 21 17
CALL[ ]	/* CallFunction */";
};
width = 1076;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(10,0,o),
(32,0,o),
(54,1,cs),
(76,2,o),
(98,2,o),
(119,2,cs),
(140,2,o),
(161,2,o),
(181,1,cs),
(200,0,o),
(221,0,o),
(242,0,cs),
(269,0,o),
(284,6,o),
(284,25,cs),
(284,46,o),
(261,49,o),
(248,49,cs),
(240,50,o),
(233,50,o),
(227,51,cs),
(220,51,o),
(217,56,o),
(217,65,cs),
(217,76,o),
(245,132,o),
(299,223,c),
(526,223,l),
(526,201,o),
(526,180,o),
(526,160,cs),
(525,140,o),
(525,115,o),
(525,84,cs),
(525,70,o),
(519,61,o),
(508,56,cs),
(497,51,o),
(475,48,o),
(444,48,cs),
(417,48,o),
(405,44,o),
(405,24,cs),
(405,5,o),
(431,0,o),
(451,0,cs),
(532,1,o),
(613,2,o),
(694,2,cs),
(740,2,o),
(785,2,o),
(828,1,cs),
(871,0,o),
(915,0,o),
(961,0,cs),
(989,0,o),
(1000,6,o),
(1003,33,cs),
(1016,165,o),
(1019,266,o),
(1019,277,cs),
(1019,292,o),
(1018,320,o),
(991,320,cs),
(963,320,o),
(954,300,o),
(953,273,cs),
(949,208,o),
(946,171,o),
(940,103,cs),
(937,69,o),
(918,66,o),
(897,66,cs),
(598,66,l),
(598,386,l),
(626,387,o),
(654,388,o),
(682,388,cs),
(701,388,o),
(717,388,o),
(729,388,cs),
(741,387,o),
(752,387,o),
(761,387,cs),
(800,387,o),
(809,340,o),
(809,309,cs),
(809,292,o),
(820,274,o),
(840,274,cs),
(861,274,o),
(871,287,o),
(871,307,cs),
(871,326,o),
(871,344,o),
(870,363,cs),
(869,382,o),
(869,401,o),
(869,420,cs),
(869,439,o),
(869,458,o),
(870,477,cs),
(871,495,o),
(871,514,o),
(871,533,cs),
(871,548,o),
(864,566,o),
(841,566,cs),
(821,566,o),
(807,558,o),
(807,530,cs),
(807,512,o),
(806,455,o),
(790,455,cs),
(791,455,o),
(731,452,o),
(682,452,cs),
(667,452,o),
(653,452,o),
(640,453,cs),
(626,454,o),
(612,454,o),
(598,455,c),
(598,755,l),
(871,755,ls),
(886,755,o),
(908,754,o),
(908,727,cs),
(908,645,ls),
(908,625,o),
(911,601,o),
(942,601,cs),
(969,601,o),
(975,626,o),
(975,651,cs),
(975,785,ls),
(975,813,o),
(966,821,o),
(947,821,cs),
(892,821,o),
(846,820,o),
(810,820,cs),
(773,820,o),
(733,819,o),
(690,819,cs),
(638,819,o),
(548,821,o),
(449,821,cs),
(423,821,o),
(398,817,o),
(398,792,cs),
(398,771,o),
(422,769,o),
(438,769,cs),
(453,769,o),
(472,770,o),
(487,763,c),
(449,691,o),
(384,557,o),
(321,428,cs),
(261,305,o),
(187,160,o),
(145,89,cs),
(130,65,o),
(117,54,o),
(88,51,cs),
(89,51,o),
(31,45,o),
(-9,45,cs),
(-28,45,o),
(-41,38,o),
(-41,22,cs),
(-41,6,o),
(-30,0,o),
(-11,0,cs)
);
},
{
closed = 1;
nodes = (
(394,287,o),
(379,287,o),
(364,288,cs),
(349,289,o),
(334,289,o),
(319,289,c),
(343,348,o),
(379,420,o),
(426,508,cs),
(464,580,o),
(508,665,o),
(521,698,c),
(521,694,ls),
(521,655,o),
(523,614,o),
(524,582,cs),
(525,545,o),
(527,500,o),
(527,425,cs),
(527,394,o),
(527,368,o),
(527,347,cs),
(527,325,o),
(527,305,o),
(526,288,c),
(507,287,o),
(487,287,o),
(468,287,cs),
(449,287,o),
(429,287,o),
(410,287,cs)
);
},
{
closed = 1;
nodes = (
(572,854,o),
(660,908,o),
(660,941,cs),
(660,960,o),
(648,972,o),
(628,972,cs),
(599,972,o),
(522,904,o),
(522,877,cs),
(522,864,o),
(531,854,o),
(546,854,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
89 1 14 11 199 1 13 14 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 98 values pushed */
0 1 0 1 106 0 0 12 0 106 0 11 12 14 14 11 96 0 13 14 16 14 13 16 104 21 1 2 18 20 18 2 20 104 0 16 0 17 5 16 17 91 22 1 20 0 5 19 20 5 89 0 14 14 12 84 0 12 12 12 67 0 18 18 15 83 0 15 15 15 67 0 19 19 3 84 8 1 3 3 13 67 10 9 7 6 4 4 4 3 83 8 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 96 values pushed */
0 1 0 1 106 0 0 12 0 106 0 11 12 14 14 11 96 0 13 14 16 14 13 16 104 21 1 2 18 20 18 2 20 104 0 15 0 18 2 15 18 91 0 16 0 17 5 16 17 91 22 1 20 0 5 19 20 5 89 0 14 14 12 84 0 12 12 12 67 0 19 19 3 84 8 1 3 3 13 67 10 9 7 6 4 4 4 3 83 8 1 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 96 values pushed */
0 1 0 1 106 0 0 12 0 106 0 11 12 14 14 11 96 0 13 14 16 14 13 16 104 21 1 2 18 20 18 2 20 104 0 15 0 18 2 15 18 91 0 16 0 17 5 16 17 91 22 1 20 0 5 19 20 5 89 0 14 14 12 84 0 12 12 14 67 0 19 19 3 84 8 1 3 3 13 67 10 9 7 6 4 4 4 3 83 8 1 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 50 values pushed */
190 187 17 16 187 208 190 206 175 173 172 165 159 157 147 145 139 130 129 127 118 116 111 98 93 90 79 78 77 73 69 61 57 56 55 54 48 47 42 40 36 28 16 186 17 186 38 36 23 17
CALL[ ]	/* CallFunction */";
};
width = 1054;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(23,1,o),
(62,2,o),
(105,2,cs),
(126,2,o),
(148,2,o),
(170,1,cs),
(191,0,o),
(213,0,o),
(234,0,cs),
(247,0,o),
(257,2,o),
(263,5,cs),
(268,8,o),
(271,12,o),
(271,15,cs),
(271,30,o),
(253,29,o),
(240,29,cs),
(221,29,o),
(173,26,o),
(173,45,cs),
(173,64,o),
(228,159,o),
(268,238,c),
(522,238,l),
(522,167,o),
(521,132,o),
(521,64,cs),
(521,50,o),
(515,41,o),
(504,36,cs),
(493,31,o),
(471,28,o),
(440,28,cs),
(427,28,o),
(417,27,o),
(411,25,cs),
(404,23,o),
(401,18,o),
(401,11,cs),
(401,0,o),
(427,0,o),
(447,0,cs),
(528,1,o),
(609,2,o),
(690,2,cs),
(731,2,o),
(770,2,o),
(809,1,cs),
(847,0,o),
(886,0,o),
(927,0,cs),
(954,0,o),
(966,0,o),
(969,33,cs),
(980,139,o),
(985,285,o),
(985,277,cs),
(985,293,o),
(985,310,o),
(966,310,cs),
(963,310,o),
(959,307,o),
(956,302,cs),
(952,296,o),
(950,286,o),
(949,273,cs),
(944,166,o),
(938,100,o),
(936,73,cs),
(933,39,o),
(914,36,o),
(893,36,cs),
(564,36,l),
(564,401,l),
(603,402,o),
(639,403,o),
(678,403,cs),
(697,403,o),
(713,403,o),
(725,403,cs),
(737,402,o),
(748,402,o),
(757,402,cs),
(797,402,o),
(805,346,o),
(805,309,cs),
(805,292,o),
(813,280,o),
(822,280,cs),
(825,280,o),
(828,282,o),
(832,285,cs),
(835,288,o),
(837,296,o),
(837,307,cs),
(837,326,o),
(837,344,o),
(836,363,cs),
(835,382,o),
(835,401,o),
(835,420,cs),
(835,439,o),
(835,458,o),
(836,477,cs),
(837,495,o),
(837,514,o),
(837,533,cs),
(837,548,o),
(836,560,o),
(820,560,cs),
(806,560,o),
(803,541,o),
(803,530,cs),
(803,471,o),
(797,440,o),
(786,440,cs),
(787,440,o),
(727,437,o),
(678,437,cs),
(659,437,o),
(640,437,o),
(621,438,cs),
(602,439,o),
(583,439,o),
(564,440,c),
(564,785,l),
(867,785,ls),
(880,785,o),
(904,782,o),
(904,757,cs),
(904,645,ls),
(904,626,o),
(904,605,o),
(924,605,cs),
(939,605,o),
(941,626,o),
(941,651,cs),
(941,785,ls),
(941,813,o),
(932,821,o),
(913,821,cs),
(833,821,o),
(749,819,o),
(686,819,cs),
(634,819,o),
(544,821,o),
(445,821,cs),
(425,821,o),
(404,819,o),
(404,804,cs),
(404,789,o),
(421,789,o),
(444,789,cs),
(459,789,o),
(478,790,o),
(493,783,c),
(454,708,o),
(392,580,o),
(317,429,cs),
(242,278,o),
(175,148,o),
(131,69,cs),
(116,45,o),
(103,34,o),
(74,31,cs),
(75,31,o),
(22,25,o),
(-18,25,cs),
(-33,25,o),
(-40,21,o),
(-40,14,cs),
(-40,5,o),
(-33,0,o),
(-20,0,cs)
);
},
{
closed = 1;
nodes = (
(385,272,o),
(365,272,o),
(346,273,cs),
(327,274,o),
(308,274,o),
(288,274,c),
(314,335,o),
(362,431,o),
(409,529,cs),
(458,632,o),
(500,716,o),
(517,754,c),
(517,750,ls),
(517,633,o),
(523,568,o),
(523,425,cs),
(523,391,o),
(523,362,o),
(523,338,cs),
(523,314,o),
(523,292,o),
(522,273,c),
(503,272,o),
(483,272,o),
(464,272,cs),
(445,272,o),
(425,272,o),
(406,272,cs)
);
},
{
closed = 1;
nodes = (
(556,876,o),
(644,929,o),
(644,950,cs),
(644,969,o),
(636,972,o),
(625,972,cs),
(605,972,o),
(530,911,o),
(530,887,cs),
(530,880,o),
(533,876,o),
(538,876,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
194 88 2 12 10 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 91 values pushed */
0 1 0 1 106 0 0 11 0 106 0 12 10 15 10 12 15 104 20 1 2 17 16 17 2 16 104 0 15 0 16 19 15 16 91 21 1 19 0 5 18 19 5 89 13 1 10 10 11 83 0 11 11 12 67 0 17 17 14 83 0 14 14 15 67 0 18 18 3 83 7 1 3 3 13 67 9 8 6 3 4 4 3 83 7 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 89 values pushed */
0 1 0 1 106 0 0 11 0 106 0 12 10 15 10 12 15 104 20 1 2 17 16 17 2 16 104 0 14 0 17 2 14 17 91 0 15 0 16 19 15 16 91 21 1 19 0 5 18 19 5 89 13 1 10 10 11 83 0 11 11 12 67 0 18 18 3 83 7 1 3 3 13 67 9 8 6 3 4 4 3 83 7 1 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 89 values pushed */
0 1 0 1 106 0 0 11 0 106 0 12 10 15 10 12 15 104 20 1 2 17 16 17 2 16 104 0 14 0 17 2 14 17 91 0 15 0 16 19 15 16 91 21 1 19 0 5 18 19 5 89 13 1 10 10 11 83 0 11 11 14 67 0 18 18 3 83 7 1 3 3 13 67 9 8 6 3 4 4 3 83 7 1 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 48 values pushed */
185 182 16 15 182 203 185 201 170 168 167 160 154 152 142 140 132 123 122 120 115 113 108 96 92 89 78 77 75 72 70 62 58 55 47 46 39 37 33 25 15 181 16 181 37 36 22 17
CALL[ ]	/* CallFunction */";
};
width = 1023;
}
);
note = AEacute;
unicode = 508;
},
{
glyphname = B;
kernLeft = B;
kernRight = B;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(308,0,ls),
(500,0,o),
(676,57,o),
(676,220,cs),
(676,325,o),
(603,400,o),
(488,421,c),
(579,445,o),
(634,519,o),
(634,612,cs),
(634,752,o),
(504,821,o),
(367,821,cs),
(366,821,o),
(229,818,o),
(79,818,cs),
(58,818,o),
(40,801,o),
(40,780,cs),
(40,755,o),
(49,738,o),
(80,738,cs),
(119,738,o),
(127,732,o),
(130,701,cs),
(134,609,o),
(138,453,o),
(138,313,cs),
(138,288,o),
(138,257,o),
(138,220,cs),
(137,183,o),
(137,143,o),
(137,100,cs),
(137,80,o),
(105,76,o),
(81,76,cs),
(56,76,o),
(46,58,o),
(46,35,cs),
(46,12,o),
(59,0,o),
(94,0,cs)
);
},
{
closed = 1;
nodes = (
(229,368,l),
(242,369,o),
(254,369,o),
(264,370,cs),
(274,371,o),
(289,371,o),
(308,371,cs),
(443,371,o),
(581,354,o),
(581,222,cs),
(581,167,o),
(551,133,o),
(492,111,cs),
(432,89,o),
(345,80,o),
(229,80,c)
);
},
{
closed = 1;
nodes = (
(277,453,o),
(261,453,o),
(252,454,cs),
(242,454,o),
(234,455,o),
(229,456,c),
(229,737,l),
(234,738,o),
(243,739,o),
(256,740,cs),
(269,741,o),
(287,741,o),
(310,741,cs),
(424,741,o),
(541,713,o),
(541,605,cs),
(541,487,o),
(433,453,o),
(299,453,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
68 67 13 3 7 1 35 1 4 7 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
10 6 2 1 1 2 83 0 2 2 12 67 9 1 4 4 7 83 0 7 7 15 67 5 8 2 0 0 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 7 9 1 4 0 7 4 91 10 6 2 1 1 2 83 0 2 2 12 67 5 8 2 0 0 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 7 9 1 4 0 7 4 91 10 6 2 1 1 2 83 0 2 2 14 67 5 8 2 0 0 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
65 64 53 50 1 0 72 69 64 80 65 80 55 54 50 63 53 63 45 42 28 21 17 15 0 49 1 49 11 15
CALL[ ]	/* CallFunction */";
};
width = 705;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(289,0,ls),
(481,0,o),
(657,57,o),
(657,220,cs),
(657,325,o),
(584,400,o),
(469,421,c),
(560,445,o),
(615,519,o),
(615,612,cs),
(615,752,o),
(485,821,o),
(348,821,cs),
(349,821,o),
(215,818,o),
(67,818,cs),
(52,818,o),
(41,809,o),
(41,794,cs),
(41,777,o),
(50,769,o),
(67,769,cs),
(111,769,o),
(131,769,o),
(132,733,cs),
(135,667,o),
(140,473,o),
(140,313,cs),
(140,286,o),
(140,250,o),
(140,206,cs),
(139,162,o),
(139,117,o),
(139,72,cs),
(139,49,o),
(93,48,o),
(67,48,cs),
(50,48,o),
(38,44,o),
(38,25,cs),
(38,6,o),
(56,0,o),
(89,0,cs)
);
},
{
closed = 1;
nodes = (
(210,377,l),
(232,377,o),
(259,380,o),
(289,380,cs),
(432,380,o),
(583,362,o),
(583,222,cs),
(583,149,o),
(534,106,o),
(458,85,cs),
(386,65,o),
(297,62,o),
(210,62,c)
);
},
{
closed = 1;
nodes = (
(258,444,o),
(241,444,o),
(229,445,cs),
(216,445,o),
(210,446,o),
(210,447,cs),
(210,753,l),
(217,754,o),
(224,754,o),
(233,755,cs),
(248,756,o),
(268,757,o),
(291,757,cs),
(415,757,o),
(543,727,o),
(543,605,cs),
(543,451,o),
(368,444,o),
(280,444,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
72 1 8 7 34 1 4 8 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 2 7 7 1 96 9 1 0 6 3 6 0 96 11 1 7 7 2 84 0 2 2 12 67 5 10 2 4 4 8 83 0 8 8 15 67 0 6 6 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 2 7 7 1 96 9 1 0 6 3 6 0 96 0 8 5 10 2 4 6 8 4 91 11 1 7 7 2 84 0 2 2 12 67 0 6 6 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 2 7 7 1 96 9 1 0 6 3 6 0 96 0 8 5 10 2 4 6 8 4 91 11 1 7 7 2 84 0 2 2 14 67 0 6 6 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
69 67 52 49 2 0 77 74 67 85 69 85 57 55 54 53 49 66 52 66 44 41 27 20 17 15 0 48 2 48 12 15
CALL[ ]	/* CallFunction */";
};
width = 689;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(262,0,ls),
(454,0,o),
(630,57,o),
(630,220,cs),
(630,325,o),
(557,400,o),
(442,421,c),
(533,445,o),
(588,519,o),
(588,612,cs),
(588,752,o),
(458,821,o),
(321,821,cs),
(322,821,o),
(191,818,o),
(50,818,cs),
(35,818,o),
(24,815,o),
(24,804,cs),
(24,796,o),
(31,789,o),
(50,789,cs),
(107,789,o),
(134,788,o),
(135,753,cs),
(138,679,o),
(143,484,o),
(143,313,cs),
(143,283,o),
(143,244,o),
(143,197,cs),
(142,150,o),
(142,101,o),
(142,52,cs),
(142,29,o),
(85,28,o),
(50,28,cs),
(33,28,o),
(21,23,o),
(21,12,cs),
(21,6,o),
(26,3,o),
(35,2,cs),
(44,1,o),
(57,0,o),
(72,0,cs)
);
},
{
closed = 1;
nodes = (
(183,392,l),
(205,392,o),
(232,395,o),
(262,395,cs),
(421,395,o),
(586,375,o),
(586,222,cs),
(586,134,o),
(532,85,o),
(451,60,cs),
(372,35,o),
(278,32,o),
(183,32,c)
);
},
{
closed = 1;
nodes = (
(231,429,o),
(214,429,o),
(202,430,cs),
(189,430,o),
(183,431,o),
(183,432,cs),
(183,783,l),
(190,784,o),
(197,784,o),
(206,785,cs),
(221,786,o),
(241,787,o),
(264,787,cs),
(403,787,o),
(546,751,o),
(546,605,cs),
(546,519,o),
(494,474,o),
(436,453,cs),
(372,431,o),
(301,429,o),
(253,429,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
73 1 8 1 35 1 4 8 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
11 7 2 1 1 2 83 0 2 2 12 67 5 10 2 4 4 8 83 0 8 8 15 67 6 9 2 0 0 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 8 5 10 2 4 0 8 4 91 11 7 2 1 1 2 83 0 2 2 12 67 6 9 2 0 0 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
9 1 0 6 3 6 0 96 0 8 5 10 2 4 6 8 4 91 11 7 2 1 1 2 83 0 2 2 14 67 0 6 6 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
70 68 53 50 2 0 79 75 68 88 70 88 58 56 55 54 50 67 53 67 45 42 28 21 17 15 0 49 2 49 12 15
CALL[ ]	/* CallFunction */";
};
width = 666;
}
);
note = B;
unicode = 66;
},
{
glyphname = C;
kernLeft = C;
kernRight = C;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(437,-14,o),
(512,24,o),
(560,73,cs),
(607,121,o),
(628,179,o),
(628,222,cs),
(628,243,o),
(616,253,o),
(592,253,cs),
(567,253,o),
(558,244,o),
(546,207,cs),
(512,104,o),
(453,66,o),
(337,66,cs),
(268,66,o),
(216,105,o),
(182,166,cs),
(148,227,o),
(130,312,o),
(130,404,cs),
(130,585,o),
(216,759,o),
(343,759,cs),
(472,759,o),
(519,638,o),
(522,524,cs),
(523,473,o),
(538,465,o),
(570,465,cs),
(603,465,o),
(613,481,o),
(613,513,cs),
(613,534,o),
(613,555,o),
(612,574,cs),
(611,593,o),
(611,613,o),
(611,634,cs),
(611,658,o),
(612,684,o),
(613,711,cs),
(614,738,o),
(615,764,o),
(615,787,cs),
(615,803,o),
(610,829,o),
(570,829,cs),
(538,829,o),
(532,812,o),
(532,793,cs),
(532,792,o),
(532,786,o),
(533,775,cs),
(533,764,o),
(534,742,o),
(536,707,c),
(513,767,o),
(450,838,o),
(342,838,cs),
(174,838,o),
(34,649,o),
(34,405,cs),
(34,104,o),
(186,-14,o),
(329,-14,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 6 3 5 3 6 5 104 0 4 4 1 83 2 1 1 1 20 67 0 3 3 1 83 2 1 1 1 20 67 0 5 5 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 6 3 5 3 6 5 104 0 4 4 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 12 67 0 5 5 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 6 3 5 3 6 5 104 0 1 0 4 3 1 4 91 0 2 0 3 6 2 3 91 0 5 5 0 83 0 0 0 21 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 40 38 44 41 40 36 7 22
CALL[ ]	/* CallFunction */";
};
width = 661;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(432,-14,o),
(502,23,o),
(546,71,cs),
(590,119,o),
(610,176,o),
(610,219,cs),
(610,239,o),
(600,249,o),
(581,249,cs),
(557,249,o),
(554,230,o),
(549,203,cs),
(533,115,o),
(455,48,o),
(340,48,cs),
(188,48,o),
(112,206,o),
(112,404,cs),
(112,600,o),
(208,777,o),
(346,777,cs),
(477,777,o),
(525,659,o),
(525,527,cs),
(525,478,o),
(537,468,o),
(561,468,cs),
(590,468,o),
(595,490,o),
(595,502,cs),
(595,523,o),
(595,545,o),
(594,568,cs),
(593,591,o),
(593,613,o),
(593,634,cs),
(593,658,o),
(594,684,o),
(595,713,cs),
(596,741,o),
(597,767,o),
(597,790,cs),
(597,801,o),
(593,823,o),
(561,823,cs),
(537,823,o),
(528,804,o),
(528,788,c),
(528,788,o),
(530,751,o),
(533,702,c),
(510,761,o),
(454,838,o),
(345,838,cs),
(177,838,o),
(37,649,o),
(37,405,cs),
(37,104,o),
(189,-14,o),
(332,-14,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
25 1 4 2 20 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 6 3 5 3 6 5 104 0 4 4 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 12 67 0 5 5 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 6 3 5 3 6 5 104 0 1 0 4 3 1 4 91 0 3 3 2 83 0 2 2 14 67 0 5 5 0 83 0 0 0 21 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 40 38 44 43 40 36 7 22
CALL[ ]	/* CallFunction */";
};
width = 646;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(511,-14,o),
(584,126,o),
(584,214,cs),
(584,233,o),
(579,243,o),
(570,243,cs),
(556,243,o),
(556,213,o),
(553,197,cs),
(529,95,o),
(464,18,o),
(344,18,cs),
(171,18,o),
(86,192,o),
(86,404,cs),
(86,615,o),
(195,807,o),
(350,807,cs),
(481,807,o),
(529,677,o),
(529,532,cs),
(529,503,o),
(531,473,o),
(550,473,cs),
(567,473,o),
(569,488,o),
(569,507,cs),
(569,528,o),
(569,550,o),
(568,571,cs),
(567,592,o),
(567,613,o),
(567,634,cs),
(567,658,o),
(568,684,o),
(569,713,cs),
(570,741,o),
(571,767,o),
(571,790,cs),
(571,799,o),
(564,813,o),
(551,813,cs),
(538,813,o),
(532,805,o),
(532,788,c),
(532,788,o),
(534,751,o),
(537,702,c),
(514,761,o),
(458,838,o),
(349,838,cs),
(181,838,o),
(41,649,o),
(41,405,cs),
(41,104,o),
(193,-14,o),
(336,-14,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
25 20 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 6 3 5 3 6 5 104 0 4 4 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 14 67 0 5 5 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 6 3 5 3 6 5 104 0 1 0 4 3 1 4 91 0 3 3 2 83 0 2 2 14 67 0 5 5 0 83 0 0 0 21 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
40 40 38 42 42 40 36 7 22
CALL[ ]	/* CallFunction */";
};
width = 625;
}
);
note = C;
unicode = 67;
},
{
glyphname = Cacute;
kernLeft = C;
kernRight = C;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(437,-14,o),
(512,24,o),
(560,73,cs),
(607,121,o),
(628,179,o),
(628,222,cs),
(628,243,o),
(616,253,o),
(592,253,cs),
(567,253,o),
(558,244,o),
(546,207,cs),
(512,104,o),
(453,66,o),
(337,66,cs),
(268,66,o),
(216,105,o),
(182,166,cs),
(148,227,o),
(130,312,o),
(130,404,cs),
(130,585,o),
(216,759,o),
(343,759,cs),
(472,759,o),
(519,638,o),
(522,524,cs),
(523,473,o),
(538,465,o),
(570,465,cs),
(603,465,o),
(613,481,o),
(613,513,cs),
(613,534,o),
(613,555,o),
(612,574,cs),
(611,593,o),
(611,613,o),
(611,634,cs),
(611,658,o),
(612,684,o),
(613,711,cs),
(614,738,o),
(615,764,o),
(615,787,cs),
(615,803,o),
(610,829,o),
(570,829,cs),
(538,829,o),
(532,812,o),
(532,793,cs),
(532,792,o),
(532,786,o),
(533,775,cs),
(533,764,o),
(534,742,o),
(536,707,c),
(513,767,o),
(450,838,o),
(342,838,cs),
(174,838,o),
(34,649,o),
(34,405,cs),
(34,104,o),
(186,-14,o),
(329,-14,cs)
);
},
{
closed = 1;
nodes = (
(351,840,o),
(436,897,o),
(436,935,cs),
(436,954,o),
(422,972,o),
(395,972,cs),
(357,972,o),
(281,898,o),
(281,871,cs),
(281,855,o),
(296,840,o),
(317,840,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
36 1 5 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 1 0 3 1 94 0 0 3 0 106 0 8 5 7 5 8 7 104 0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 7 7 2 83 0 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 1 106 0 0 3 0 106 0 8 5 7 5 8 7 104 0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 7 7 2 83 0 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 3 0 106 0 8 5 7 5 8 7 104 0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 12 67 0 7 7 2 83 0 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 0 0 3 0 106 0 8 5 7 5 8 7 104 0 3 0 6 5 3 6 92 0 4 0 5 8 4 5 91 0 7 7 2 83 0 2 2 21 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 40 38 44 41 40 38 38 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 661;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(432,-14,o),
(502,23,o),
(546,71,cs),
(590,119,o),
(610,176,o),
(610,219,cs),
(610,239,o),
(600,249,o),
(581,249,cs),
(557,249,o),
(554,230,o),
(549,203,cs),
(533,115,o),
(455,48,o),
(340,48,cs),
(188,48,o),
(112,206,o),
(112,404,cs),
(112,600,o),
(208,777,o),
(346,777,cs),
(477,777,o),
(525,659,o),
(525,527,cs),
(525,478,o),
(537,468,o),
(561,468,cs),
(590,468,o),
(595,490,o),
(595,502,cs),
(595,523,o),
(595,545,o),
(594,568,cs),
(593,591,o),
(593,613,o),
(593,634,cs),
(593,658,o),
(594,684,o),
(595,713,cs),
(596,741,o),
(597,767,o),
(597,790,cs),
(597,801,o),
(593,823,o),
(561,823,cs),
(537,823,o),
(528,804,o),
(528,788,c),
(528,788,o),
(530,751,o),
(533,702,c),
(510,761,o),
(454,838,o),
(345,838,cs),
(177,838,o),
(37,649,o),
(37,405,cs),
(37,104,o),
(189,-14,o),
(332,-14,cs)
);
},
{
closed = 1;
nodes = (
(353,854,o),
(441,908,o),
(441,941,cs),
(441,960,o),
(429,972,o),
(409,972,cs),
(380,972,o),
(303,904,o),
(303,877,cs),
(303,864,o),
(312,854,o),
(327,854,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
41 1 6 4 36 1 5 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 3 0 106 0 8 5 7 5 8 7 104 0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 12 67 0 7 7 2 84 0 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 106 0 0 3 0 106 0 8 5 7 5 8 7 104 0 3 0 6 5 3 6 91 0 5 5 4 83 0 4 4 14 67 0 7 7 2 84 0 2 2 21 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 40 38 44 43 40 38 38 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 646;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(511,-14,o),
(584,126,o),
(584,214,cs),
(584,233,o),
(579,243,o),
(570,243,cs),
(556,243,o),
(556,213,o),
(553,197,cs),
(529,95,o),
(464,18,o),
(344,18,cs),
(171,18,o),
(86,192,o),
(86,404,cs),
(86,615,o),
(195,807,o),
(350,807,cs),
(481,807,o),
(529,677,o),
(529,532,cs),
(529,503,o),
(531,473,o),
(550,473,cs),
(567,473,o),
(569,488,o),
(569,507,cs),
(569,528,o),
(569,550,o),
(568,571,cs),
(567,592,o),
(567,613,o),
(567,634,cs),
(567,658,o),
(568,684,o),
(569,713,cs),
(570,741,o),
(571,767,o),
(571,790,cs),
(571,799,o),
(564,813,o),
(551,813,cs),
(538,813,o),
(532,805,o),
(532,788,c),
(532,788,o),
(534,751,o),
(537,702,c),
(514,761,o),
(458,838,o),
(349,838,cs),
(181,838,o),
(41,649,o),
(41,405,cs),
(41,104,o),
(193,-14,o),
(336,-14,cs)
);
},
{
closed = 1;
nodes = (
(317,875,o),
(405,928,o),
(405,949,cs),
(405,968,o),
(397,971,o),
(386,971,cs),
(366,971,o),
(291,910,o),
(291,886,cs),
(291,879,o),
(294,875,o),
(299,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
40 35 2 5 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 3 1 94 0 0 3 0 106 0 8 5 7 5 8 7 104 0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 14 67 0 7 7 2 83 0 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 3 0 106 0 8 5 7 5 8 7 104 0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 14 67 0 7 7 2 83 0 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 106 0 0 3 0 106 0 8 5 7 5 8 7 104 0 3 0 6 5 3 6 92 0 5 5 4 83 0 4 4 14 67 0 7 7 2 83 0 2 2 21 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
40 40 38 42 42 40 38 37 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 625;
}
);
note = Cacute;
unicode = 262;
},
{
glyphname = Ccaron;
kernLeft = C;
kernRight = C;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(437,-14,o),
(512,24,o),
(560,73,cs),
(607,121,o),
(628,179,o),
(628,222,cs),
(628,243,o),
(616,253,o),
(592,253,cs),
(567,253,o),
(558,244,o),
(546,207,cs),
(512,104,o),
(453,66,o),
(337,66,cs),
(268,66,o),
(216,105,o),
(182,166,cs),
(148,227,o),
(130,312,o),
(130,404,cs),
(130,585,o),
(216,759,o),
(343,759,cs),
(472,759,o),
(519,638,o),
(522,524,cs),
(523,473,o),
(538,465,o),
(570,465,cs),
(603,465,o),
(613,481,o),
(613,513,cs),
(613,534,o),
(613,555,o),
(612,574,cs),
(611,593,o),
(611,613,o),
(611,634,cs),
(611,658,o),
(612,684,o),
(613,711,cs),
(614,738,o),
(615,764,o),
(615,787,cs),
(615,803,o),
(610,829,o),
(570,829,cs),
(538,829,o),
(532,812,o),
(532,793,cs),
(532,792,o),
(532,786,o),
(533,775,cs),
(533,764,o),
(534,742,o),
(536,707,c),
(516,761,o),
(459,827,o),
(365,837,c),
(405,855,o),
(478,917,o),
(478,951,cs),
(478,960,o),
(476,972,o),
(465,972,cs),
(459,972,o),
(404,960,o),
(345,922,c),
(310,948,o),
(244,972,o),
(226,972,cs),
(218,972,o),
(213,965,o),
(213,958,cs),
(213,916,o),
(290,855,o),
(326,837,c),
(246,832,o),
(172,782,o),
(120,705,cs),
(67,628,o),
(34,522,o),
(34,405,cs),
(34,104,o),
(186,-14,o),
(329,-14,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
41 28 2 1 2 46 1 5 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
3 1 2 1 2 106 0 8 5 7 5 8 7 104 0 6 6 1 83 4 1 1 1 20 67 0 5 5 1 83 4 1 1 1 20 67 0 7 7 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
3 1 2 1 2 106 0 8 5 7 5 8 7 104 0 6 6 1 83 0 1 1 20 67 0 5 5 4 83 0 4 4 12 67 0 7 7 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
3 1 2 1 2 106 0 8 5 7 5 8 7 104 0 1 0 6 5 1 6 91 0 4 0 5 8 4 5 91 0 7 7 0 83 0 0 0 21 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
93 91 85 83 75 73 67 65 53 51 40 39 24 36 9 19
CALL[ ]	/* CallFunction */";
};
width = 661;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(432,-14,o),
(502,23,o),
(546,71,cs),
(590,119,o),
(610,176,o),
(610,219,cs),
(610,239,o),
(600,249,o),
(581,249,cs),
(557,249,o),
(554,230,o),
(549,203,cs),
(533,115,o),
(455,48,o),
(340,48,cs),
(188,48,o),
(112,206,o),
(112,404,cs),
(112,600,o),
(208,777,o),
(346,777,cs),
(477,777,o),
(525,659,o),
(525,527,cs),
(525,478,o),
(537,468,o),
(561,468,cs),
(590,468,o),
(595,490,o),
(595,502,cs),
(595,523,o),
(595,545,o),
(594,568,cs),
(593,591,o),
(593,613,o),
(593,634,cs),
(593,658,o),
(594,684,o),
(595,713,cs),
(596,741,o),
(597,767,o),
(597,790,cs),
(597,801,o),
(593,823,o),
(561,823,cs),
(537,823,o),
(528,804,o),
(528,788,c),
(528,788,o),
(530,751,o),
(533,702,c),
(510,761,o),
(454,838,o),
(345,838,cs),
(177,838,o),
(37,649,o),
(37,405,cs),
(37,104,o),
(189,-14,o),
(332,-14,cs)
);
},
{
closed = 1;
nodes = (
(366,847,o),
(472,919,o),
(472,955,cs),
(472,964,o),
(469,972,o),
(461,972,cs),
(453,972,o),
(405,959,o),
(341,921,c),
(301,945,o),
(240,972,o),
(222,972,cs),
(215,972,o),
(211,968,o),
(211,959,cs),
(211,918,o),
(319,847,o),
(341,847,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
20 1 1 0 50 1 7 5 45 1 6 7 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
2 10 2 0 1 0 106 0 1 4 1 106 0 9 6 8 6 9 8 104 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 12 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
2 10 2 0 1 0 106 0 1 4 1 106 0 9 6 8 6 9 8 104 0 4 0 7 6 4 7 91 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 94 92 86 84 76 74 68 66 54 52 41 39 31 29 16 14 9 7 0 24 1 24 11 15
CALL[ ]	/* CallFunction */";
};
width = 646;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(511,-14,o),
(584,126,o),
(584,214,cs),
(584,233,o),
(579,243,o),
(570,243,cs),
(556,243,o),
(556,213,o),
(553,197,cs),
(529,95,o),
(464,18,o),
(344,18,cs),
(171,18,o),
(86,192,o),
(86,404,cs),
(86,615,o),
(195,807,o),
(350,807,cs),
(481,807,o),
(529,677,o),
(529,532,cs),
(529,503,o),
(531,473,o),
(550,473,cs),
(567,473,o),
(569,488,o),
(569,507,cs),
(569,528,o),
(569,550,o),
(568,571,cs),
(567,592,o),
(567,613,o),
(567,634,cs),
(567,658,o),
(568,684,o),
(569,713,cs),
(570,741,o),
(571,767,o),
(571,790,cs),
(571,799,o),
(564,813,o),
(551,813,cs),
(538,813,o),
(532,805,o),
(532,788,c),
(532,788,o),
(534,751,o),
(537,702,c),
(514,761,o),
(458,838,o),
(349,838,cs),
(181,838,o),
(41,649,o),
(41,405,cs),
(41,104,o),
(193,-14,o),
(336,-14,cs)
);
},
{
closed = 1;
nodes = (
(368,876,o),
(473,936,o),
(473,961,cs),
(473,968,o),
(470,972,o),
(465,972,cs),
(458,972,o),
(410,954,o),
(345,920,c),
(296,941,o),
(237,972,o),
(226,972,cs),
(221,972,o),
(218,968,o),
(218,961,cs),
(218,937,o),
(321,876,o),
(345,876,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
19 1 1 0 49 44 2 6 7 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
2 10 2 0 1 0 106 0 1 4 1 106 0 9 6 8 6 9 8 104 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
2 10 2 0 1 0 106 0 1 4 1 106 0 9 6 8 6 9 8 104 0 4 0 7 6 4 7 91 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 92 90 82 80 72 70 64 62 52 50 40 38 30 28 15 13 8 6 0 23 1 23 11 15
CALL[ ]	/* CallFunction */";
};
width = 625;
}
);
note = Ccaron;
unicode = 268;
},
{
glyphname = Ccedilla;
kernLeft = C;
kernRight = C;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(460,-190,o),
(519,-164,o),
(519,-112,cs),
(519,-73,o),
(486,-49,o),
(442,-49,cs),
(414,-49,o),
(394,-59,o),
(362,-78,c),
(374,-11,l),
(465,-2,o),
(529,38,o),
(570,84,cs),
(610,130,o),
(628,183,o),
(628,222,cs),
(628,243,o),
(616,253,o),
(592,253,cs),
(567,253,o),
(558,244,o),
(546,207,cs),
(512,104,o),
(453,66,o),
(337,66,cs),
(268,66,o),
(216,105,o),
(182,166,cs),
(148,227,o),
(130,312,o),
(130,404,cs),
(130,585,o),
(216,759,o),
(343,759,cs),
(472,759,o),
(519,638,o),
(522,524,cs),
(523,473,o),
(538,465,o),
(570,465,cs),
(603,465,o),
(613,481,o),
(613,513,cs),
(613,534,o),
(613,555,o),
(612,574,cs),
(611,593,o),
(611,613,o),
(611,634,cs),
(611,658,o),
(612,684,o),
(613,711,cs),
(614,738,o),
(615,764,o),
(615,787,cs),
(615,803,o),
(610,829,o),
(570,829,cs),
(538,829,o),
(532,812,o),
(532,793,cs),
(532,792,o),
(532,786,o),
(533,775,cs),
(533,764,o),
(534,742,o),
(536,707,c),
(513,767,o),
(450,838,o),
(342,838,cs),
(174,838,o),
(34,649,o),
(34,405,cs),
(34,129,o),
(161,8,o),
(293,-11,c),
(292,-20,o),
(290,-30,o),
(289,-43,cs),
(288,-56,o),
(286,-69,o),
(283,-80,cs),
(282,-85,o),
(280,-93,o),
(280,-97,cs),
(280,-112,o),
(287,-130,o),
(318,-130,cs),
(360,-130,o),
(374,-102,o),
(408,-102,cs),
(419,-102,o),
(431,-107,o),
(431,-118,cs),
(431,-126,o),
(428,-132,o),
(422,-135,cs),
(416,-138,o),
(404,-140,o),
(386,-140,cs),
(313,-140,o),
(311,-160,o),
(311,-168,cs),
(311,-177,o),
(317,-182,o),
(330,-185,cs),
(342,-188,o),
(362,-190,o),
(390,-190,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
60 1 7 8 45 1 0 9 6 1 3 0 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 10 7 9 7 10 9 104 0 0 9 3 9 0 3 104 0 3 4 9 3 4 102 0 9 0 4 2 9 4 91 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 67 0 2 2 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 10 7 9 7 10 9 104 0 0 9 3 9 0 3 104 0 3 4 9 3 4 102 0 9 0 4 2 9 4 91 0 2 0 1 2 1 87 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 10 7 9 7 10 9 104 0 0 9 3 9 0 3 104 0 3 4 9 3 4 102 0 9 0 4 2 9 4 91 0 2 0 1 2 1 87 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 10 7 9 7 10 9 104 0 0 9 3 9 0 3 104 0 3 4 9 3 4 102 0 5 0 8 7 5 8 91 0 6 0 7 10 6 7 91 0 9 0 4 2 9 4 91 0 2 1 1 2 79 0 2 2 1 83 0 1 2 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
107 105 99 97 89 87 81 79 67 65 56 54 35 36 38 38 40 11 20
CALL[ ]	/* CallFunction */";
};
width = 661;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(432,-14,o),
(502,23,o),
(546,71,cs),
(590,119,o),
(610,176,o),
(610,219,cs),
(610,239,o),
(600,249,o),
(581,249,cs),
(557,249,o),
(554,230,o),
(549,203,cs),
(533,115,o),
(455,48,o),
(340,48,cs),
(188,48,o),
(112,206,o),
(112,404,cs),
(112,600,o),
(208,777,o),
(346,777,cs),
(477,777,o),
(525,659,o),
(525,527,cs),
(525,478,o),
(537,468,o),
(561,468,cs),
(590,468,o),
(595,490,o),
(595,502,cs),
(595,523,o),
(595,545,o),
(594,568,cs),
(593,591,o),
(593,613,o),
(593,634,cs),
(593,658,o),
(594,684,o),
(595,713,cs),
(596,741,o),
(597,767,o),
(597,790,cs),
(597,801,o),
(593,823,o),
(561,823,cs),
(537,823,o),
(528,804,o),
(528,788,c),
(528,788,o),
(530,751,o),
(533,702,c),
(510,761,o),
(454,838,o),
(345,838,cs),
(177,838,o),
(37,649,o),
(37,405,cs),
(37,104,o),
(189,-14,o),
(332,-14,cs)
);
},
{
closed = 1;
nodes = (
(465,-181,o),
(524,-155,o),
(524,-103,cs),
(524,-64,o),
(491,-40,o),
(447,-40,cs),
(419,-40,o),
(399,-50,o),
(367,-69,c),
(380,3,l),
(361,7,l),
(321,7,l),
(321,7,l),
(320,1,o),
(318,-10,o),
(317,-26,cs),
(315,-42,o),
(312,-57,o),
(309,-71,cs),
(308,-76,o),
(306,-84,o),
(306,-88,cs),
(306,-99,o),
(312,-113,o),
(335,-113,cs),
(366,-113,o),
(390,-85,o),
(426,-85,cs),
(435,-85,o),
(457,-90,o),
(457,-109,cs),
(457,-136,o),
(434,-139,o),
(391,-139,cs),
(364,-139,o),
(348,-141,o),
(341,-146,cs),
(334,-151,o),
(330,-156,o),
(330,-161,cs),
(330,-170,o),
(336,-175,o),
(347,-177,cs),
(358,-180,o),
(374,-181,o),
(395,-181,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
26 1 4 2 21 1 3 4 72 1 0 12 73 1 10 7 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 6 3 5 3 6 5 104 13 1 12 5 0 5 12 96 0 11 10 9 0 11 96 0 7 0 10 11 7 10 91 0 4 4 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 12 67 0 5 5 0 83 0 0 0 21 67 0 9 9 8 83 0 8 8 17 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 6 3 5 3 6 5 104 13 1 12 5 0 5 12 96 0 11 10 9 10 11 9 104 0 7 0 10 11 7 10 91 0 4 4 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 12 67 0 5 5 0 83 0 0 0 21 67 0 9 9 8 83 0 8 8 17 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 6 3 5 3 6 5 104 13 1 12 5 0 5 12 96 0 11 10 9 10 11 9 104 0 7 0 10 11 7 10 91 0 9 0 8 9 8 87 0 4 4 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 12 67 0 5 5 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
0 6 3 5 3 6 5 104 13 1 12 5 0 5 12 0 104 0 11 10 9 10 11 9 104 0 7 0 10 11 7 10 91 0 9 0 8 9 8 87 0 4 4 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 12 67 0 5 5 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 69 values pushed */
0 6 3 5 3 6 5 104 13 1 12 5 0 5 12 0 104 0 11 10 9 10 11 9 104 0 1 0 4 3 1 4 91 0 7 0 10 11 7 10 91 0 9 0 8 9 8 87 0 3 3 2 83 0 2 2 14 67 0 5 5 0 83 0 0 0 21 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
71 71 71 110 71 110 102 100 97 95 91 89 38 37 38 40 38 44 43 40 37 14 35
CALL[ ]	/* CallFunction */";
};
width = 646;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(436,-206,o),
(495,-180,o),
(495,-128,cs),
(495,-89,o),
(462,-65,o),
(418,-65,cs),
(390,-65,o),
(370,-75,o),
(338,-94,c),
(353,-13,l),
(519,-5,o),
(584,134,o),
(584,214,cs),
(584,233,o),
(579,243,o),
(570,243,cs),
(556,243,o),
(556,213,o),
(553,197,cs),
(529,95,o),
(464,18,o),
(344,18,cs),
(171,18,o),
(86,192,o),
(86,404,cs),
(86,615,o),
(195,807,o),
(350,807,cs),
(481,807,o),
(529,677,o),
(529,532,cs),
(529,503,o),
(531,473,o),
(550,473,cs),
(567,473,o),
(569,488,o),
(569,507,cs),
(569,528,o),
(569,550,o),
(568,571,cs),
(567,592,o),
(567,613,o),
(567,634,cs),
(567,658,o),
(568,684,o),
(569,713,cs),
(570,741,o),
(571,767,o),
(571,790,cs),
(571,799,o),
(564,813,o),
(551,813,cs),
(538,813,o),
(532,805,o),
(532,788,c),
(532,788,o),
(534,751,o),
(537,702,c),
(514,761,o),
(458,838,o),
(349,838,cs),
(181,838,o),
(41,649,o),
(41,405,cs),
(41,260,o),
(77,156,o),
(130,89,cs),
(182,21,o),
(253,-11,o),
(324,-14,c),
(321,-37,o),
(314,-75,o),
(310,-96,cs),
(309,-101,o),
(307,-109,o),
(307,-113,cs),
(307,-118,o),
(312,-125,o),
(323,-125,cs),
(345,-125,o),
(379,-97,o),
(415,-97,cs),
(444,-97,o),
(458,-115,o),
(458,-134,cs),
(458,-165,o),
(423,-177,o),
(362,-177,cs),
(349,-177,o),
(339,-177,o),
(332,-178,cs),
(325,-179,o),
(321,-183,o),
(321,-189,cs),
(321,-194,o),
(324,-198,o),
(330,-201,cs),
(335,-204,o),
(347,-206,o),
(366,-206,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
63 58 2 9 10 6 1 4 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 12 9 11 9 12 11 104 0 5 4 3 0 5 96 0 1 0 4 5 1 4 91 0 10 10 7 83 0 7 7 20 67 0 9 9 8 83 0 8 8 14 67 0 11 11 0 83 6 1 0 0 21 67 0 3 3 2 83 0 2 2 17 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 12 9 11 9 12 11 104 0 5 4 3 4 5 3 104 0 1 0 4 5 1 4 91 0 10 10 7 83 0 7 7 20 67 0 9 9 8 83 0 8 8 14 67 0 11 11 0 83 6 1 0 0 24 67 0 3 3 2 83 0 2 2 17 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 12 9 11 9 12 11 104 0 5 4 3 4 5 3 104 0 1 0 4 5 1 4 91 0 3 0 2 3 2 87 0 10 10 7 83 0 7 7 20 67 0 9 9 8 83 0 8 8 14 67 0 11 11 0 83 6 1 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 12 9 11 9 12 11 104 0 5 4 3 4 5 3 104 0 7 0 10 9 7 10 91 0 1 0 4 5 1 4 91 0 3 0 2 3 2 87 0 9 9 8 83 0 8 8 14 67 0 11 11 0 83 6 1 0 0 24 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
106 104 96 94 86 84 78 76 42 40 24 35 36 36 38 35 20 13 24
CALL[ ]	/* CallFunction */";
};
width = 625;
}
);
note = Ccedilla;
unicode = 199;
},
{
glyphname = Ccircumflex;
kernLeft = C;
kernRight = C;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(437,-14,o),
(512,24,o),
(560,73,cs),
(607,121,o),
(628,179,o),
(628,222,cs),
(628,243,o),
(616,253,o),
(592,253,cs),
(567,253,o),
(558,244,o),
(546,207,cs),
(512,104,o),
(453,66,o),
(337,66,cs),
(268,66,o),
(216,105,o),
(182,166,cs),
(148,227,o),
(130,312,o),
(130,404,cs),
(130,585,o),
(216,759,o),
(343,759,cs),
(472,759,o),
(519,638,o),
(522,524,cs),
(523,473,o),
(538,465,o),
(570,465,cs),
(603,465,o),
(613,481,o),
(613,513,cs),
(613,534,o),
(613,555,o),
(612,574,cs),
(611,593,o),
(611,613,o),
(611,634,cs),
(611,658,o),
(612,684,o),
(613,711,cs),
(614,738,o),
(615,764,o),
(615,787,cs),
(615,803,o),
(610,829,o),
(570,829,cs),
(538,829,o),
(532,812,o),
(532,793,cs),
(532,792,o),
(532,786,o),
(533,775,cs),
(533,764,o),
(534,742,o),
(536,707,c),
(513,767,o),
(450,838,o),
(342,838,cs),
(174,838,o),
(34,649,o),
(34,405,cs),
(34,104,o),
(186,-14,o),
(329,-14,cs)
);
},
{
closed = 1;
nodes = (
(225,830,o),
(240,835,o),
(263,844,cs),
(286,853,o),
(310,865,o),
(337,880,c),
(364,865,o),
(389,853,o),
(412,844,cs),
(435,835,o),
(450,830,o),
(457,830,cs),
(468,830,o),
(470,842,o),
(470,851,cs),
(470,892,o),
(361,972,o),
(337,972,cs),
(326,972,o),
(291,950,o),
(264,928,cs),
(233,903,o),
(205,871,o),
(205,844,cs),
(205,837,o),
(209,830,o),
(218,830,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
3 1 4 2 42 1 6 7 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 2 4 4 2 94 1 10 2 0 4 7 4 0 7 104 0 9 6 8 6 9 8 104 0 7 7 4 83 5 1 4 4 20 67 0 6 6 4 83 5 1 4 4 20 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 2 4 2 106 1 10 2 0 4 7 4 0 7 104 0 9 6 8 6 9 8 104 0 7 7 4 83 5 1 4 4 20 67 0 6 6 4 83 5 1 4 4 20 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 2 4 2 106 1 10 2 0 4 5 4 0 5 104 0 9 6 8 6 9 8 104 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 12 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 2 4 2 106 1 10 2 0 4 5 4 0 5 104 0 9 6 8 6 9 8 104 0 4 0 7 6 4 7 92 0 5 0 6 9 5 6 91 0 8 8 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 89 87 81 79 71 69 63 61 49 47 38 36 28 26 15 13 7 5 0 21 1 21 11 15
CALL[ ]	/* CallFunction */";
};
width = 661;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(432,-14,o),
(502,23,o),
(546,71,cs),
(590,119,o),
(610,176,o),
(610,219,cs),
(610,239,o),
(600,249,o),
(581,249,cs),
(557,249,o),
(554,230,o),
(549,203,cs),
(533,115,o),
(455,48,o),
(340,48,cs),
(188,48,o),
(112,206,o),
(112,404,cs),
(112,600,o),
(208,777,o),
(346,777,cs),
(477,777,o),
(525,659,o),
(525,527,cs),
(525,478,o),
(537,468,o),
(561,468,cs),
(590,468,o),
(595,490,o),
(595,502,cs),
(595,523,o),
(595,545,o),
(594,568,cs),
(593,591,o),
(593,613,o),
(593,634,cs),
(593,658,o),
(594,684,o),
(595,713,cs),
(596,741,o),
(597,767,o),
(597,790,cs),
(597,801,o),
(593,823,o),
(561,823,cs),
(537,823,o),
(528,804,o),
(528,788,c),
(528,788,o),
(530,751,o),
(533,702,c),
(510,761,o),
(454,838,o),
(345,838,cs),
(177,838,o),
(37,649,o),
(37,405,cs),
(37,104,o),
(189,-14,o),
(332,-14,cs)
);
},
{
closed = 1;
nodes = (
(240,847,o),
(301,874,o),
(341,898,c),
(405,860,o),
(453,847,o),
(461,847,cs),
(469,847,o),
(472,855,o),
(472,864,cs),
(472,900,o),
(365,972,o),
(341,972,cs),
(319,972,o),
(211,901,o),
(211,860,cs),
(211,851,o),
(215,847,o),
(222,847,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
5 1 0 2 50 1 7 5 45 1 6 7 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 0 4 2 94 1 10 2 0 4 0 106 0 9 6 8 6 9 8 104 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 12 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 2 0 2 106 1 10 2 0 4 0 106 0 9 6 8 6 9 8 104 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 12 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 2 0 2 106 1 10 2 0 4 0 106 0 9 6 8 6 9 8 104 0 4 0 7 6 4 7 92 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 94 92 86 84 76 74 68 66 54 52 41 39 31 29 18 16 11 9 0 24 1 24 11 15
CALL[ ]	/* CallFunction */";
};
width = 646;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(511,-14,o),
(584,126,o),
(584,214,cs),
(584,233,o),
(579,243,o),
(570,243,cs),
(556,243,o),
(556,213,o),
(553,197,cs),
(529,95,o),
(464,18,o),
(344,18,cs),
(171,18,o),
(86,192,o),
(86,404,cs),
(86,615,o),
(195,807,o),
(350,807,cs),
(481,807,o),
(529,677,o),
(529,532,cs),
(529,503,o),
(531,473,o),
(550,473,cs),
(567,473,o),
(569,488,o),
(569,507,cs),
(569,528,o),
(569,550,o),
(568,571,cs),
(567,592,o),
(567,613,o),
(567,634,cs),
(567,658,o),
(568,684,o),
(569,713,cs),
(570,741,o),
(571,767,o),
(571,790,cs),
(571,799,o),
(564,813,o),
(551,813,cs),
(538,813,o),
(532,805,o),
(532,788,c),
(532,788,o),
(534,751,o),
(537,702,c),
(514,761,o),
(458,838,o),
(349,838,cs),
(181,838,o),
(41,649,o),
(41,405,cs),
(41,104,o),
(193,-14,o),
(336,-14,cs)
);
},
{
closed = 1;
nodes = (
(245,875,o),
(316,908,o),
(347,928,c),
(401,890,o),
(469,875,o),
(467,875,cs),
(472,875,o),
(475,879,o),
(475,886,cs),
(475,911,o),
(373,972,o),
(347,972,cs),
(324,972,o),
(220,911,o),
(220,886,cs),
(220,879,o),
(223,875,o),
(228,875,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
5 1 0 2 49 44 2 6 7 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 0 4 2 94 1 10 2 0 4 0 106 0 9 6 8 6 9 8 104 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 2 0 2 106 1 10 2 0 4 0 106 0 9 6 8 6 9 8 104 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 2 0 2 106 1 10 2 0 4 0 106 0 9 6 8 6 9 8 104 0 4 0 7 6 4 7 92 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 92 90 82 80 72 70 64 62 52 50 40 38 30 28 18 16 11 9 0 23 1 23 11 15
CALL[ ]	/* CallFunction */";
};
width = 625;
}
);
note = Ccircumflex;
unicode = 264;
},
{
glyphname = Cdotaccent;
kernLeft = C;
kernRight = C;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(437,-14,o),
(512,24,o),
(560,73,cs),
(607,121,o),
(628,179,o),
(628,222,cs),
(628,243,o),
(616,253,o),
(592,253,cs),
(567,253,o),
(558,244,o),
(546,207,cs),
(512,104,o),
(453,66,o),
(337,66,cs),
(268,66,o),
(216,105,o),
(182,166,cs),
(148,227,o),
(130,312,o),
(130,404,cs),
(130,585,o),
(216,759,o),
(343,759,cs),
(472,759,o),
(519,638,o),
(522,524,cs),
(523,473,o),
(538,465,o),
(570,465,cs),
(603,465,o),
(613,481,o),
(613,513,cs),
(613,534,o),
(613,555,o),
(612,574,cs),
(611,593,o),
(611,613,o),
(611,634,cs),
(611,658,o),
(612,684,o),
(613,711,cs),
(614,738,o),
(615,764,o),
(615,787,cs),
(615,803,o),
(610,829,o),
(570,829,cs),
(538,829,o),
(532,812,o),
(532,793,cs),
(532,792,o),
(532,786,o),
(533,775,cs),
(533,764,o),
(534,742,o),
(536,707,c),
(513,767,o),
(450,838,o),
(342,838,cs),
(174,838,o),
(34,649,o),
(34,405,cs),
(34,104,o),
(186,-14,o),
(329,-14,cs)
);
},
{
closed = 1;
nodes = (
(373,840,o),
(410,855,o),
(410,910,cs),
(410,946,o),
(382,971,o),
(350,971,cs),
(302,971,o),
(284,933,o),
(284,906,cs),
(284,863,o),
(310,840,o),
(343,840,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 6 3 5 3 6 5 104 0 7 0 8 1 7 8 91 0 4 4 1 83 2 1 1 1 20 67 0 3 3 1 83 2 1 1 1 20 67 0 5 5 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 6 3 5 3 6 5 104 0 7 0 8 1 7 8 91 0 4 4 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 12 67 0 5 5 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 6 3 5 3 6 5 104 0 7 0 8 1 7 8 91 0 1 0 4 3 1 4 91 0 2 0 3 6 2 3 91 0 5 5 0 83 0 0 0 21 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 37 38 40 38 44 41 40 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 661;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(432,-14,o),
(502,23,o),
(546,71,cs),
(590,119,o),
(610,176,o),
(610,219,cs),
(610,239,o),
(600,249,o),
(581,249,cs),
(557,249,o),
(554,230,o),
(549,203,cs),
(533,115,o),
(455,48,o),
(340,48,cs),
(188,48,o),
(112,206,o),
(112,404,cs),
(112,600,o),
(208,777,o),
(346,777,cs),
(477,777,o),
(525,659,o),
(525,527,cs),
(525,478,o),
(537,468,o),
(561,468,cs),
(590,468,o),
(595,490,o),
(595,502,cs),
(595,523,o),
(595,545,o),
(594,568,cs),
(593,591,o),
(593,613,o),
(593,634,cs),
(593,658,o),
(594,684,o),
(595,713,cs),
(596,741,o),
(597,767,o),
(597,790,cs),
(597,801,o),
(593,823,o),
(561,823,cs),
(537,823,o),
(528,804,o),
(528,788,c),
(528,788,o),
(530,751,o),
(533,702,c),
(510,761,o),
(454,838,o),
(345,838,cs),
(177,838,o),
(37,649,o),
(37,405,cs),
(37,104,o),
(189,-14,o),
(332,-14,cs)
);
},
{
closed = 1;
nodes = (
(370,859,o),
(401,872,o),
(401,920,cs),
(401,951,o),
(379,972,o),
(352,972,cs),
(310,972,o),
(296,936,o),
(296,916,cs),
(296,880,o),
(318,859,o),
(345,859,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
26 1 4 2 21 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 6 3 5 3 6 5 104 0 7 0 8 1 7 8 91 0 4 4 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 12 67 0 5 5 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 6 3 5 3 6 5 104 0 7 0 8 1 7 8 91 0 1 0 4 3 1 4 91 0 3 3 2 83 0 2 2 14 67 0 5 5 0 83 0 0 0 21 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 37 38 40 38 44 43 40 37 9 35
CALL[ ]	/* CallFunction */";
};
width = 646;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(511,-14,o),
(584,126,o),
(584,214,cs),
(584,233,o),
(579,243,o),
(570,243,cs),
(556,243,o),
(556,213,o),
(553,197,cs),
(529,95,o),
(464,18,o),
(344,18,cs),
(171,18,o),
(86,192,o),
(86,404,cs),
(86,615,o),
(195,807,o),
(350,807,cs),
(481,807,o),
(529,677,o),
(529,532,cs),
(529,503,o),
(531,473,o),
(550,473,cs),
(567,473,o),
(569,488,o),
(569,507,cs),
(569,528,o),
(569,550,o),
(568,571,cs),
(567,592,o),
(567,613,o),
(567,634,cs),
(567,658,o),
(568,684,o),
(569,713,cs),
(570,741,o),
(571,767,o),
(571,790,cs),
(571,799,o),
(564,813,o),
(551,813,cs),
(538,813,o),
(532,805,o),
(532,788,c),
(532,788,o),
(534,751,o),
(537,702,c),
(514,761,o),
(458,838,o),
(349,838,cs),
(181,838,o),
(41,649,o),
(41,405,cs),
(41,104,o),
(193,-14,o),
(336,-14,cs)
);
},
{
closed = 1;
nodes = (
(367,889,o),
(389,899,o),
(389,935,cs),
(389,958,o),
(374,972,o),
(355,972,cs),
(327,972,o),
(314,945,o),
(314,931,cs),
(314,907,o),
(329,889,o),
(348,889,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
25 20 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 6 3 5 3 6 5 104 0 7 0 8 1 7 8 91 0 4 4 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 14 67 0 5 5 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 6 3 5 3 6 5 104 0 7 0 8 1 7 8 91 0 1 0 4 3 1 4 91 0 3 3 2 83 0 2 2 14 67 0 5 5 0 83 0 0 0 21 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 37 40 40 38 42 42 40 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 625;
}
);
note = Cdotaccent;
unicode = 266;
},
{
glyphname = D;
kernLeft = B;
kernRight = D;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(289,0,ls),
(552,0,o),
(682,200,o),
(682,439,cs),
(682,580,o),
(629,676,o),
(554,736,cs),
(479,796,o),
(383,821,o),
(299,821,cs),
(218,821,o),
(143,821,o),
(76,818,cs),
(53,817,o),
(41,800,o),
(41,776,cs),
(41,751,o),
(53,738,o),
(78,738,cs),
(107,738,o),
(132,731,o),
(132,696,cs),
(132,634,o),
(139,488,o),
(139,437,cs),
(139,364,o),
(139,303,o),
(139,254,cs),
(138,203,o),
(138,151,o),
(138,97,cs),
(138,89,o),
(134,83,o),
(125,80,cs),
(116,77,o),
(102,74,o),
(83,73,cs),
(56,70,o),
(41,62,o),
(41,31,cs),
(41,10,o),
(53,0,o),
(78,0,cs)
);
},
{
closed = 1;
nodes = (
(252,82,o),
(231,84,o),
(231,92,cs),
(231,734,l),
(241,735,o),
(251,736,o),
(262,737,cs),
(273,738,o),
(283,738,o),
(293,738,cs),
(499,738,o),
(586,601,o),
(586,439,cs),
(586,235,o),
(499,82,o),
(293,82,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
4 6 3 3 2 2 0 83 0 0 0 12 67 0 5 5 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
4 6 3 3 2 2 0 83 0 0 0 14 67 0 5 5 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
41 40 50 47 43 42 40 58 41 58 39 37 56 82 7 17
CALL[ ]	/* CallFunction */";
};
width = 715;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(269,0,ls),
(532,0,o),
(662,200,o),
(662,439,cs),
(662,580,o),
(609,676,o),
(534,736,cs),
(459,796,o),
(363,821,o),
(279,821,cs),
(198,821,o),
(130,821,o),
(63,818,cs),
(48,817,o),
(42,805,o),
(42,794,cs),
(42,781,o),
(49,769,o),
(65,769,cs),
(103,769,o),
(133,766,o),
(133,727,cs),
(133,669,o),
(140,487,o),
(140,437,cs),
(140,361,o),
(140,296,o),
(140,241,cs),
(139,185,o),
(139,128,o),
(139,72,cs),
(139,48,o),
(94,48,o),
(70,48,cs),
(47,48,o),
(39,41,o),
(39,24,cs),
(39,7,o),
(52,0,o),
(75,0,cs)
);
},
{
closed = 1;
nodes = (
(232,64,o),
(211,66,o),
(211,74,cs),
(211,752,l),
(221,753,o),
(231,754,o),
(242,755,cs),
(253,756,o),
(263,756,o),
(273,756,cs),
(490,756,o),
(587,613,o),
(587,439,cs),
(587,223,o),
(491,64,o),
(273,64,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 3 0 4 4 3 96 0 2 6 1 6 2 96 5 7 2 4 4 0 84 0 0 0 12 67 0 6 6 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 0 4 4 3 96 0 2 6 1 6 2 96 5 7 2 4 4 0 84 0 0 0 14 67 0 6 6 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
47 46 56 53 49 48 46 64 47 64 41 39 52 56 64 8 18
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(241,0,ls),
(504,0,o),
(634,200,o),
(634,439,cs),
(634,580,o),
(581,676,o),
(506,736,cs),
(431,796,o),
(335,821,o),
(251,821,cs),
(170,821,o),
(112,821,o),
(45,818,cs),
(31,817,o),
(24,813,o),
(24,805,cs),
(24,798,o),
(30,789,o),
(47,789,cs),
(103,789,o),
(135,787,o),
(135,747,cs),
(135,676,o),
(142,506,o),
(142,437,cs),
(142,356,o),
(142,287,o),
(142,230,cs),
(141,171,o),
(141,111,o),
(141,52,cs),
(141,28,o),
(87,28,o),
(52,28,cs),
(41,28,o),
(33,27,o),
(28,24,cs),
(23,21,o),
(21,17,o),
(21,12,cs),
(21,7,o),
(24,3,o),
(31,2,cs),
(37,1,o),
(46,0,o),
(57,0,cs)
);
},
{
closed = 1;
nodes = (
(204,34,o),
(183,36,o),
(183,44,cs),
(183,782,l),
(193,783,o),
(203,784,o),
(214,785,cs),
(225,786,o),
(235,786,o),
(245,786,cs),
(484,786,o),
(589,630,o),
(589,439,cs),
(589,209,o),
(485,34,o),
(245,34,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 5 3 6 3 5 96 0 2 6 1 6 2 96 8 4 2 3 3 0 83 7 1 0 0 12 67 0 6 6 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 5 3 6 3 5 96 0 2 6 1 6 2 96 8 4 2 3 3 0 83 7 1 0 0 14 67 0 6 6 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
46 45 4 0 55 52 48 47 45 63 46 63 41 38 22 19 15 12 0 44 4 44 9 15
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = D;
unicode = 68;
},
{
glyphname = Dcaron;
kernLeft = B;
kernRight = D;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(289,0,ls),
(552,0,o),
(682,200,o),
(682,439,cs),
(682,580,o),
(629,676,o),
(554,736,cs),
(479,796,o),
(383,821,o),
(299,821,cs),
(218,821,o),
(143,821,o),
(76,818,cs),
(53,817,o),
(41,800,o),
(41,776,cs),
(41,751,o),
(53,738,o),
(78,738,cs),
(107,738,o),
(132,731,o),
(132,696,cs),
(132,634,o),
(139,488,o),
(139,437,cs),
(139,364,o),
(139,303,o),
(139,254,cs),
(138,203,o),
(138,151,o),
(138,97,cs),
(138,89,o),
(134,83,o),
(125,80,cs),
(116,77,o),
(102,74,o),
(83,73,cs),
(56,70,o),
(41,62,o),
(41,31,cs),
(41,10,o),
(53,0,o),
(78,0,cs)
);
},
{
closed = 1;
nodes = (
(252,82,o),
(231,84,o),
(231,92,cs),
(231,734,l),
(241,735,o),
(251,736,o),
(262,737,cs),
(273,738,o),
(283,738,o),
(293,738,cs),
(499,738,o),
(586,601,o),
(586,439,cs),
(586,235,o),
(499,82,o),
(293,82,cs)
);
},
{
closed = 1;
nodes = (
(346,830,o),
(456,909,o),
(456,951,cs),
(456,960,o),
(454,972,o),
(443,972,cs),
(426,972,o),
(364,952,o),
(323,922,c),
(286,949,o),
(223,972,o),
(204,972,cs),
(195,972,o),
(191,965,o),
(191,958,cs),
(191,931,o),
(219,901,o),
(250,875,cs),
(277,852,o),
(312,830,o),
(323,830,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
2 9 2 0 1 0 106 0 1 3 1 106 7 10 6 3 5 5 3 83 0 3 3 12 67 0 8 8 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
2 9 2 0 1 0 106 0 1 3 1 106 7 10 6 3 5 5 3 83 0 3 3 14 67 0 8 8 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
67 66 1 0 76 73 69 68 66 84 67 84 65 63 44 41 33 28 17 15 9 7 0 25 1 25 11 15
CALL[ ]	/* CallFunction */";
};
width = 715;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(269,0,ls),
(532,0,o),
(662,200,o),
(662,439,cs),
(662,580,o),
(609,676,o),
(534,736,cs),
(459,796,o),
(363,821,o),
(279,821,cs),
(198,821,o),
(130,821,o),
(63,818,cs),
(48,817,o),
(42,805,o),
(42,794,cs),
(42,781,o),
(49,769,o),
(65,769,cs),
(103,769,o),
(133,766,o),
(133,727,cs),
(133,669,o),
(140,487,o),
(140,437,cs),
(140,361,o),
(140,296,o),
(140,241,cs),
(139,185,o),
(139,128,o),
(139,72,cs),
(139,48,o),
(94,48,o),
(70,48,cs),
(47,48,o),
(39,41,o),
(39,24,cs),
(39,7,o),
(52,0,o),
(75,0,cs)
);
},
{
closed = 1;
nodes = (
(232,64,o),
(211,66,o),
(211,74,cs),
(211,752,l),
(221,753,o),
(231,754,o),
(242,755,cs),
(253,756,o),
(263,756,o),
(273,756,cs),
(490,756,o),
(587,613,o),
(587,439,cs),
(587,223,o),
(491,64,o),
(273,64,cs)
);
},
{
closed = 1;
nodes = (
(328,847,o),
(434,919,o),
(434,955,cs),
(434,964,o),
(431,972,o),
(423,972,cs),
(415,972,o),
(367,959,o),
(303,921,c),
(263,945,o),
(202,972,o),
(184,972,cs),
(177,972,o),
(173,968,o),
(173,959,cs),
(173,918,o),
(281,847,o),
(303,847,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
2 10 2 0 1 0 106 0 1 3 1 106 0 6 3 7 7 6 96 0 5 9 4 9 5 96 8 11 2 7 7 3 84 0 3 3 12 67 0 9 9 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
2 10 2 0 1 0 106 0 1 3 1 106 0 6 3 7 7 6 96 0 5 9 4 9 5 96 8 11 2 7 7 3 84 0 3 3 14 67 0 9 9 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
72 71 1 0 81 78 74 73 71 89 72 89 66 64 47 44 40 37 29 25 16 14 9 7 0 24 1 24 12 15
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(241,0,ls),
(504,0,o),
(634,200,o),
(634,439,cs),
(634,580,o),
(581,676,o),
(506,736,cs),
(431,796,o),
(335,821,o),
(251,821,cs),
(170,821,o),
(112,821,o),
(45,818,cs),
(31,817,o),
(24,813,o),
(24,805,cs),
(24,798,o),
(30,789,o),
(47,789,cs),
(103,789,o),
(135,787,o),
(135,747,cs),
(135,676,o),
(142,506,o),
(142,437,cs),
(142,356,o),
(142,287,o),
(142,230,cs),
(141,171,o),
(141,111,o),
(141,52,cs),
(141,28,o),
(87,28,o),
(52,28,cs),
(41,28,o),
(33,27,o),
(28,24,cs),
(23,21,o),
(21,17,o),
(21,12,cs),
(21,7,o),
(24,3,o),
(31,2,cs),
(37,1,o),
(46,0,o),
(57,0,cs)
);
},
{
closed = 1;
nodes = (
(204,34,o),
(183,36,o),
(183,44,cs),
(183,782,l),
(193,783,o),
(203,784,o),
(214,785,cs),
(225,786,o),
(235,786,o),
(245,786,cs),
(484,786,o),
(589,630,o),
(589,439,cs),
(589,209,o),
(485,34,o),
(245,34,cs)
);
},
{
closed = 1;
nodes = (
(301,875,o),
(403,936,o),
(403,961,cs),
(403,968,o),
(400,972,o),
(395,972,cs),
(383,972,o),
(326,941,o),
(275,919,c),
(221,942,o),
(168,972,o),
(156,972,cs),
(151,972,o),
(148,968,o),
(148,961,cs),
(148,936,o),
(252,875,o),
(275,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
19 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
2 10 2 0 1 0 106 0 1 3 1 106 0 8 6 9 6 8 96 0 5 9 4 9 5 96 12 7 2 6 6 3 83 11 1 3 3 12 67 0 9 9 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
2 10 2 0 1 0 106 0 1 3 1 106 0 8 6 9 6 8 96 0 5 9 4 9 5 96 12 7 2 6 6 3 83 11 1 3 3 14 67 0 9 9 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
70 69 28 24 1 0 79 76 72 71 69 87 70 87 65 62 46 43 39 36 24 68 28 68 15 13 8 6 0 23 1 23 13 15
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = Dcaron;
unicode = 270;
},
{
glyphname = Dcroat;
kernLeft = B;
kernRight = D;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(292,0,ls),
(555,0,o),
(685,200,o),
(685,439,cs),
(685,580,o),
(632,676,o),
(557,736,cs),
(482,796,o),
(386,821,o),
(302,821,cs),
(221,821,o),
(146,821,o),
(79,818,cs),
(56,817,o),
(44,800,o),
(44,776,cs),
(44,751,o),
(56,738,o),
(81,738,cs),
(110,738,o),
(135,731,o),
(135,696,cs),
(135,652,o),
(142,571,o),
(142,452,c),
(116,452,l),
(98,452,ls),
(75,452,o),
(65,426,o),
(65,409,cs),
(65,394,o),
(80,365,o),
(98,365,cs),
(141,365,l),
(141,97,ls),
(141,89,o),
(137,83,o),
(128,80,cs),
(119,77,o),
(105,74,o),
(86,73,cs),
(59,70,o),
(44,62,o),
(44,31,cs),
(44,10,o),
(56,0,o),
(81,0,cs)
);
},
{
closed = 1;
nodes = (
(255,82,o),
(234,84,o),
(234,92,cs),
(234,366,l),
(294,366,l),
(339,366,ls),
(367,366,o),
(375,398,o),
(375,412,cs),
(375,429,o),
(362,452,o),
(347,452,cs),
(297,452,l),
(234,452,l),
(234,734,l),
(296,734,ls),
(502,734,o),
(589,601,o),
(589,439,cs),
(589,235,o),
(502,82,o),
(296,82,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
6 10 5 3 4 4 0 83 0 0 0 12 67 8 1 2 2 3 83 7 1 3 3 15 67 0 9 9 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
7 1 3 8 1 2 9 3 2 91 6 10 5 3 4 4 0 83 0 0 0 12 67 0 9 9 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
7 1 3 8 1 2 9 3 2 91 6 10 5 3 4 4 0 83 0 0 0 14 67 0 9 9 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
53 52 77 74 70 66 60 56 55 54 52 85 53 85 39 70 44 56 82 11 20
CALL[ ]	/* CallFunction */";
};
width = 718;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(271,0,ls),
(534,0,o),
(664,200,o),
(664,439,cs),
(664,580,o),
(611,676,o),
(536,736,cs),
(461,796,o),
(365,821,o),
(281,821,cs),
(200,821,o),
(132,821,o),
(65,818,cs),
(50,817,o),
(44,805,o),
(44,794,cs),
(44,781,o),
(51,769,o),
(67,769,cs),
(105,769,o),
(135,766,o),
(135,727,cs),
(135,670,o),
(142,499,o),
(142,443,c),
(77,443,ls),
(58,443,o),
(51,422,o),
(51,409,cs),
(51,397,o),
(62,374,o),
(77,374,cs),
(142,374,l),
(142,241,l),
(142,72,ls),
(142,48,o),
(96,48,o),
(72,48,cs),
(49,48,o),
(41,41,o),
(41,24,cs),
(41,7,o),
(54,0,o),
(77,0,cs)
);
},
{
closed = 1;
nodes = (
(234,64,o),
(213,66,o),
(213,74,cs),
(213,375,l),
(318,375,ls),
(339,375,o),
(347,400,o),
(347,412,cs),
(347,425,o),
(337,444,o),
(326,444,cs),
(213,444,l),
(213,752,l),
(275,752,ls),
(508,752,o),
(589,613,o),
(589,439,cs),
(589,223,o),
(493,64,o),
(275,64,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 5 2 6 6 5 96 0 4 8 3 8 4 96 7 10 2 6 6 2 84 0 2 2 12 67 0 1 1 0 83 9 1 0 0 15 67 0 8 8 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 5 2 6 6 5 96 0 4 8 3 8 4 96 9 1 0 0 1 8 0 1 91 7 10 2 6 6 2 84 0 2 2 12 67 0 8 8 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 5 2 6 6 5 96 0 4 8 3 8 4 96 9 1 0 0 1 8 0 1 91 7 10 2 6 6 2 84 0 2 2 14 67 0 8 8 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
74 73 1 0 83 80 76 75 73 91 74 91 68 66 49 46 42 39 31 27 14 7 0 26 1 18 11 15
CALL[ ]	/* CallFunction */";
};
width = 700;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(241,0,ls),
(504,0,o),
(634,200,o),
(634,439,cs),
(634,580,o),
(581,676,o),
(506,736,cs),
(431,796,o),
(335,821,o),
(251,821,cs),
(170,821,o),
(112,821,o),
(45,818,cs),
(31,817,o),
(24,813,o),
(24,805,cs),
(24,798,o),
(30,789,o),
(47,789,cs),
(103,789,o),
(135,787,o),
(135,747,cs),
(135,676,o),
(142,506,o),
(142,437,cs),
(142,426,l),
(47,426,ls),
(36,426,o),
(31,416,o),
(31,409,cs),
(31,402,o),
(38,389,o),
(47,389,cs),
(141,389,l),
(141,52,ls),
(141,28,o),
(87,28,o),
(52,28,cs),
(41,28,o),
(33,27,o),
(28,24,cs),
(23,21,o),
(21,17,o),
(21,12,cs),
(21,7,o),
(24,3,o),
(31,2,cs),
(37,1,o),
(46,0,o),
(57,0,cs)
);
},
{
closed = 1;
nodes = (
(204,34,o),
(183,36,o),
(183,44,cs),
(183,389,l),
(243,389,l),
(288,389,ls),
(303,389,o),
(307,405,o),
(307,412,cs),
(307,419,o),
(301,426,o),
(296,426,cs),
(183,426,l),
(183,782,l),
(245,782,ls),
(484,782,o),
(589,630,o),
(589,439,cs),
(589,209,o),
(485,34,o),
(245,34,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 7 5 4 5 7 96 0 2 10 1 10 2 96 12 6 2 5 5 0 83 11 1 0 0 12 67 9 1 3 3 4 83 8 1 4 4 15 67 0 10 10 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 7 5 4 5 7 96 0 2 10 1 10 2 96 8 1 4 9 1 3 10 4 3 91 12 6 2 5 5 0 83 11 1 0 0 12 67 0 10 10 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 7 5 4 5 7 96 0 2 10 1 10 2 96 8 1 4 9 1 3 10 4 3 91 12 6 2 5 5 0 83 11 1 0 0 14 67 0 10 10 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
57 56 4 0 79 76 72 68 64 60 59 58 56 87 57 87 52 49 40 36 32 30 22 19 15 12 0 55 4 55 13 15
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = Dcroat;
unicode = 272;
},
{
glyphname = Eth;
kernLeft = B;
kernRight = D;
lastChange = "2024-06-14 08:56:56 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = Dcroat;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
6 10 5 3 4 4 0 83 0 0 0 12 67 8 1 2 2 3 83 7 1 3 3 15 67 0 9 9 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
7 1 3 8 1 2 9 3 2 91 6 10 5 3 4 4 0 83 0 0 0 12 67 0 9 9 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
7 1 3 8 1 2 9 3 2 91 6 10 5 3 4 4 0 83 0 0 0 14 67 0 9 9 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
53 52 77 74 70 66 60 56 55 54 52 85 53 85 39 70 44 56 82 11 20
CALL[ ]	/* CallFunction */";
};
width = 718;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
ref = Dcroat;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 5 2 6 6 5 96 0 4 8 3 8 4 96 7 10 2 6 6 2 84 0 2 2 12 67 0 1 1 0 83 9 1 0 0 15 67 0 8 8 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 5 2 6 6 5 96 0 4 8 3 8 4 96 9 1 0 0 1 8 0 1 91 7 10 2 6 6 2 84 0 2 2 12 67 0 8 8 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 5 2 6 6 5 96 0 4 8 3 8 4 96 9 1 0 0 1 8 0 1 91 7 10 2 6 6 2 84 0 2 2 14 67 0 8 8 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
74 73 1 0 83 80 76 75 73 91 74 91 68 66 49 46 42 39 31 27 14 7 0 26 1 18 11 15
CALL[ ]	/* CallFunction */";
};
width = 700;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
ref = Dcroat;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 7 5 4 5 7 96 0 2 10 1 10 2 96 12 6 2 5 5 0 83 11 1 0 0 12 67 9 1 3 3 4 83 8 1 4 4 15 67 0 10 10 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 7 5 4 5 7 96 0 2 10 1 10 2 96 8 1 4 9 1 3 10 4 3 91 12 6 2 5 5 0 83 11 1 0 0 12 67 0 10 10 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 7 5 4 5 7 96 0 2 10 1 10 2 96 8 1 4 9 1 3 10 4 3 91 12 6 2 5 5 0 83 11 1 0 0 14 67 0 10 10 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
57 56 4 0 79 76 72 68 64 60 59 58 56 87 57 87 52 49 40 36 32 30 22 19 15 12 0 55 4 55 13 15
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = Eth;
unicode = 208;
},
{
glyphname = E;
kernLeft = B;
kernRight = AE;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,0,o),
(258,2,o),
(356,2,cs),
(397,2,o),
(436,2,o),
(475,1,cs),
(513,0,o),
(552,0,o),
(593,0,cs),
(626,0,o),
(632,5,o),
(635,33,cs),
(648,164,o),
(651,274,o),
(651,285,cs),
(651,308,o),
(632,318,o),
(613,318,cs),
(589,318,o),
(565,310,o),
(564,281,cs),
(559,201,o),
(555,183,o),
(551,121,cs),
(548,87,o),
(529,84,o),
(508,84,cs),
(230,84,l),
(230,377,l),
(280,377,o),
(267,379,o),
(318,379,cs),
(331,379,o),
(342,379,o),
(351,379,cs),
(360,378,o),
(367,378,o),
(372,378,cs),
(407,378,o),
(420,338,o),
(420,310,cs),
(420,293,o),
(426,275,o),
(461,275,cs),
(489,275,o),
(503,286,o),
(503,308,cs),
(503,323,o),
(503,341,o),
(502,361,cs),
(501,381,o),
(501,401,o),
(501,420,cs),
(501,439,o),
(501,458,o),
(502,476,cs),
(503,493,o),
(503,512,o),
(503,531,cs),
(503,563,o),
(483,570,o),
(460,570,cs),
(432,570,o),
(418,553,o),
(418,533,cs),
(418,512,o),
(417,464,o),
(401,464,cs),
(402,464,o),
(355,461,o),
(318,461,cs),
(284,461,o),
(265,462,o),
(230,464,c),
(230,737,l),
(482,737,ls),
(505,737,o),
(519,733,o),
(519,709,cs),
(519,637,ls),
(519,618,o),
(531,597,o),
(566,597,cs),
(595,597,o),
(607,607,o),
(607,643,cs),
(607,785,ls),
(607,813,o),
(598,821,o),
(579,821,cs),
(499,821,o),
(415,819,o),
(352,819,cs),
(296,819,o),
(200,821,o),
(94,821,cs),
(51,821,o),
(37,816,o),
(37,781,cs),
(37,758,o),
(60,747,o),
(93,747,cs),
(121,747,o),
(132,747,o),
(132,708,cs),
(132,606,o),
(138,543,o),
(138,425,cs),
(138,349,o),
(137,287,o),
(137,247,cs),
(137,205,o),
(136,158,o),
(136,109,cs),
(136,86,o),
(128,76,o),
(89,73,cs),
(61,72,o),
(38,62,o),
(38,33,cs),
(38,10,o),
(51,0,o),
(86,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
75 1 7 8 127 1 2 9 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
75 1 7 8 127 1 11 9 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 5 3 8 3 5 8 104 12 1 0 10 9 10 0 9 104 0 8 0 9 2 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 10 10 7 83 0 7 7 23 67 11 1 2 2 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 5 3 8 3 5 8 104 12 1 0 10 9 10 0 9 104 0 7 0 10 0 7 10 91 0 8 0 9 2 8 9 91 6 1 3 3 4 83 0 4 4 12 67 11 1 2 2 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 5 3 8 3 5 8 104 12 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 12 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 68 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 12 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 14 67 0 11 11 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 123 121 120 111 105 103 94 92 86 76 74 72 67 65 60 48 44 42 26 24 20 10 0 134 1 134 13 15
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(125,0,o),
(167,0,o),
(211,1,cs),
(254,2,o),
(296,2,o),
(337,2,cs),
(378,2,o),
(417,2,o),
(456,1,cs),
(494,0,o),
(533,0,o),
(574,0,cs),
(601,0,o),
(613,0,o),
(616,33,cs),
(627,142,o),
(632,292,o),
(632,282,cs),
(632,302,o),
(621,315,o),
(602,315,cs),
(585,315,o),
(567,306,o),
(566,278,cs),
(561,186,o),
(555,129,o),
(553,103,cs),
(550,69,o),
(531,66,o),
(510,66,cs),
(211,66,l),
(211,386,l),
(250,387,o),
(271,388,o),
(310,388,cs),
(325,388,o),
(338,388,o),
(348,388,cs),
(358,387,o),
(367,387,o),
(374,387,cs),
(413,387,o),
(422,334,o),
(422,306,cs),
(422,289,o),
(428,277,o),
(453,277,cs),
(470,277,o),
(484,281,o),
(484,304,cs),
(484,323,o),
(484,342,o),
(483,362,cs),
(482,381,o),
(482,401,o),
(482,420,cs),
(482,439,o),
(482,459,o),
(483,478,cs),
(484,497,o),
(484,516,o),
(484,535,cs),
(484,558,o),
(471,566,o),
(452,566,cs),
(428,566,o),
(420,547,o),
(420,532,cs),
(420,510,o),
(419,455,o),
(403,455,cs),
(404,455,o),
(353,452,o),
(310,452,cs),
(291,452,o),
(274,452,o),
(260,453,cs),
(246,454,o),
(230,454,o),
(211,455,c),
(211,755,l),
(484,755,ls),
(499,755,o),
(521,754,o),
(521,727,cs),
(521,640,ls),
(521,621,o),
(528,600,o),
(557,600,cs),
(580,600,o),
(588,614,o),
(588,646,cs),
(588,785,ls),
(588,813,o),
(579,821,o),
(560,821,cs),
(480,821,o),
(396,819,o),
(333,819,cs),
(279,819,o),
(185,821,o),
(82,821,cs),
(62,821,o),
(41,818,o),
(41,794,cs),
(41,777,o),
(58,769,o),
(81,769,cs),
(96,769,o),
(134,769,o),
(134,730,cs),
(134,618,o),
(140,561,o),
(140,425,cs),
(140,345,o),
(139,279,o),
(139,233,cs),
(139,186,o),
(138,136,o),
(138,84,cs),
(138,56,o),
(116,48,o),
(77,48,cs),
(50,48,o),
(38,42,o),
(38,21,cs),
(38,2,o),
(61,0,o),
(84,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 12 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 10 10 7 83 0 7 7 15 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 12 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 68 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 12 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 14 67 0 11 11 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 122 120 119 112 106 104 94 92 86 77 76 74 67 65 60 48 44 41 24 22 18 10 0 133 1 133 13 15
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(148,1,o),
(229,2,o),
(310,2,cs),
(351,2,o),
(390,2,o),
(429,1,cs),
(467,0,o),
(506,0,o),
(547,0,cs),
(574,0,o),
(586,0,o),
(589,33,cs),
(600,139,o),
(605,285,o),
(605,277,cs),
(605,293,o),
(605,310,o),
(586,310,cs),
(583,310,o),
(579,307,o),
(576,302,cs),
(572,296,o),
(570,286,o),
(569,273,cs),
(564,166,o),
(558,100,o),
(556,73,cs),
(553,39,o),
(534,36,o),
(513,36,cs),
(184,36,l),
(184,401,l),
(223,402,o),
(259,403,o),
(298,403,cs),
(317,403,o),
(333,403,o),
(345,403,cs),
(357,402,o),
(368,402,o),
(377,402,cs),
(417,402,o),
(425,346,o),
(425,309,cs),
(425,292,o),
(433,280,o),
(442,280,cs),
(445,280,o),
(448,282,o),
(452,285,cs),
(455,288,o),
(457,296,o),
(457,307,cs),
(457,326,o),
(457,344,o),
(456,363,cs),
(455,382,o),
(455,401,o),
(455,420,cs),
(455,439,o),
(455,458,o),
(456,477,cs),
(457,495,o),
(457,514,o),
(457,533,cs),
(457,548,o),
(456,560,o),
(440,560,cs),
(426,560,o),
(423,541,o),
(423,530,cs),
(423,471,o),
(417,440,o),
(406,440,cs),
(407,440,o),
(347,437,o),
(298,437,cs),
(279,437,o),
(260,437,o),
(241,438,cs),
(222,439,o),
(203,439,o),
(184,440,c),
(184,785,l),
(487,785,ls),
(500,785,o),
(524,782,o),
(524,757,cs),
(524,645,ls),
(524,626,o),
(524,605,o),
(544,605,cs),
(559,605,o),
(561,626,o),
(561,651,cs),
(561,785,ls),
(561,813,o),
(552,821,o),
(533,821,cs),
(453,821,o),
(369,819,o),
(306,819,cs),
(254,819,o),
(164,821,o),
(65,821,cs),
(45,821,o),
(24,819,o),
(24,804,cs),
(24,789,o),
(41,789,o),
(64,789,cs),
(93,789,o),
(137,788,o),
(137,750,cs),
(137,633,o),
(143,568,o),
(143,425,cs),
(143,340,o),
(142,270,o),
(142,222,cs),
(142,173,o),
(141,120,o),
(141,64,cs),
(141,50,o),
(135,41,o),
(124,36,cs),
(113,31,o),
(91,28,o),
(60,28,cs),
(47,28,o),
(37,27,o),
(31,25,cs),
(24,23,o),
(21,18,o),
(21,11,cs),
(21,0,o),
(47,0,o),
(67,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 5 3 8 3 5 8 104 12 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 10 10 7 83 0 7 7 15 67 0 11 11 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 5 3 8 3 5 8 104 12 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 11 11 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 5 3 8 3 5 8 104 12 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 14 67 0 11 11 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 122 120 119 112 106 104 94 92 84 75 74 72 67 65 60 48 44 41 24 22 18 10 0 133 1 133 13 15
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = E;
unicode = 69;
},
{
glyphname = Eacute;
kernLeft = B;
kernRight = AE;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,0,o),
(258,2,o),
(356,2,cs),
(397,2,o),
(436,2,o),
(475,1,cs),
(513,0,o),
(552,0,o),
(593,0,cs),
(626,0,o),
(632,5,o),
(635,33,cs),
(648,164,o),
(651,274,o),
(651,285,cs),
(651,308,o),
(632,318,o),
(613,318,cs),
(589,318,o),
(565,310,o),
(564,281,cs),
(559,201,o),
(555,183,o),
(551,121,cs),
(548,87,o),
(529,84,o),
(508,84,cs),
(230,84,l),
(230,377,l),
(280,377,o),
(267,379,o),
(318,379,cs),
(331,379,o),
(342,379,o),
(351,379,cs),
(360,378,o),
(367,378,o),
(372,378,cs),
(407,378,o),
(420,338,o),
(420,310,cs),
(420,293,o),
(426,275,o),
(461,275,cs),
(489,275,o),
(503,286,o),
(503,308,cs),
(503,323,o),
(503,341,o),
(502,361,cs),
(501,381,o),
(501,401,o),
(501,420,cs),
(501,439,o),
(501,458,o),
(502,476,cs),
(503,493,o),
(503,512,o),
(503,531,cs),
(503,563,o),
(483,570,o),
(460,570,cs),
(432,570,o),
(418,553,o),
(418,533,cs),
(418,512,o),
(417,464,o),
(401,464,cs),
(402,464,o),
(355,461,o),
(318,461,cs),
(284,461,o),
(265,462,o),
(230,464,c),
(230,737,l),
(482,737,ls),
(505,737,o),
(519,733,o),
(519,709,cs),
(519,637,ls),
(519,618,o),
(531,597,o),
(566,597,cs),
(595,597,o),
(607,607,o),
(607,643,cs),
(607,785,ls),
(607,813,o),
(598,821,o),
(579,821,cs),
(499,821,o),
(415,819,o),
(352,819,cs),
(296,819,o),
(200,821,o),
(94,821,cs),
(51,821,o),
(37,816,o),
(37,781,cs),
(37,758,o),
(60,747,o),
(93,747,cs),
(121,747,o),
(132,747,o),
(132,708,cs),
(132,606,o),
(138,543,o),
(138,425,cs),
(138,349,o),
(137,287,o),
(137,247,cs),
(137,205,o),
(136,158,o),
(136,109,cs),
(136,86,o),
(128,76,o),
(89,73,cs),
(61,72,o),
(38,62,o),
(38,33,cs),
(38,10,o),
(51,0,o),
(86,0,cs)
);
},
{
closed = 1;
nodes = (
(375,841,o),
(462,897,o),
(462,936,cs),
(462,953,o),
(448,972,o),
(421,972,cs),
(383,972,o),
(307,899,o),
(307,872,cs),
(307,856,o),
(322,841,o),
(342,841,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
91 1 9 10 143 1 4 11 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
91 1 9 10 143 1 13 11 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 1 0 1 106 0 0 6 0 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 10 0 11 4 10 11 91 8 1 5 5 6 83 0 6 6 12 67 0 12 12 9 83 0 9 9 23 67 13 1 4 4 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 1 0 1 106 0 0 6 0 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 9 0 12 2 9 12 91 0 10 0 11 4 10 11 91 8 1 5 5 6 83 0 6 6 12 67 13 1 4 4 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 1 0 1 106 0 0 6 0 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 8 1 5 5 6 83 0 6 6 12 67 0 13 13 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 6 8 8 5 96 0 7 8 10 8 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 0 8 8 6 84 0 6 6 12 67 0 13 13 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 6 8 8 5 96 0 7 8 10 8 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 0 8 8 6 84 0 6 6 14 67 0 13 13 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
17 16 139 137 136 127 121 119 110 108 102 92 90 88 83 81 76 64 60 58 42 40 36 26 16 150 17 150 38 36 15 17
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(125,0,o),
(167,0,o),
(211,1,cs),
(254,2,o),
(296,2,o),
(337,2,cs),
(378,2,o),
(417,2,o),
(456,1,cs),
(494,0,o),
(533,0,o),
(574,0,cs),
(601,0,o),
(613,0,o),
(616,33,cs),
(627,142,o),
(632,292,o),
(632,282,cs),
(632,302,o),
(621,315,o),
(602,315,cs),
(585,315,o),
(567,306,o),
(566,278,cs),
(561,186,o),
(555,129,o),
(553,103,cs),
(550,69,o),
(531,66,o),
(510,66,cs),
(211,66,l),
(211,386,l),
(250,387,o),
(271,388,o),
(310,388,cs),
(325,388,o),
(338,388,o),
(348,388,cs),
(358,387,o),
(367,387,o),
(374,387,cs),
(413,387,o),
(422,334,o),
(422,306,cs),
(422,289,o),
(428,277,o),
(453,277,cs),
(470,277,o),
(484,281,o),
(484,304,cs),
(484,323,o),
(484,342,o),
(483,362,cs),
(482,381,o),
(482,401,o),
(482,420,cs),
(482,439,o),
(482,459,o),
(483,478,cs),
(484,497,o),
(484,516,o),
(484,535,cs),
(484,558,o),
(471,566,o),
(452,566,cs),
(428,566,o),
(420,547,o),
(420,532,cs),
(420,510,o),
(419,455,o),
(403,455,cs),
(404,455,o),
(353,452,o),
(310,452,cs),
(291,452,o),
(274,452,o),
(260,453,cs),
(246,454,o),
(230,454,o),
(211,455,c),
(211,755,l),
(484,755,ls),
(499,755,o),
(521,754,o),
(521,727,cs),
(521,640,ls),
(521,621,o),
(528,600,o),
(557,600,cs),
(580,600,o),
(588,614,o),
(588,646,cs),
(588,785,ls),
(588,813,o),
(579,821,o),
(560,821,cs),
(480,821,o),
(396,819,o),
(333,819,cs),
(279,819,o),
(185,821,o),
(82,821,cs),
(62,821,o),
(41,818,o),
(41,794,cs),
(41,777,o),
(58,769,o),
(81,769,cs),
(96,769,o),
(134,769,o),
(134,730,cs),
(134,618,o),
(140,561,o),
(140,425,cs),
(140,345,o),
(139,279,o),
(139,233,cs),
(139,186,o),
(138,136,o),
(138,84,cs),
(138,56,o),
(116,48,o),
(77,48,cs),
(50,48,o),
(38,42,o),
(38,21,cs),
(38,2,o),
(61,0,o),
(84,0,cs)
);
},
{
closed = 1;
nodes = (
(341,854,o),
(429,908,o),
(429,941,cs),
(429,960,o),
(417,972,o),
(397,972,cs),
(368,972,o),
(291,904,o),
(291,877,cs),
(291,864,o),
(300,854,o),
(315,854,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 6 8 8 5 96 0 7 8 10 8 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 10 0 11 13 10 11 91 0 8 8 6 84 0 6 6 12 67 0 12 12 9 83 0 9 9 15 67 0 13 13 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 6 8 8 5 96 0 7 8 10 8 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 0 8 8 6 84 0 6 6 12 67 0 13 13 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 6 8 8 5 96 0 7 8 10 8 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 0 8 8 6 84 0 6 6 14 67 0 13 13 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
17 16 138 136 135 128 122 120 110 108 102 93 92 90 83 81 76 64 60 57 40 38 34 26 16 149 17 149 38 36 15 17
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(148,1,o),
(229,2,o),
(310,2,cs),
(351,2,o),
(390,2,o),
(429,1,cs),
(467,0,o),
(506,0,o),
(547,0,cs),
(574,0,o),
(586,0,o),
(589,33,cs),
(600,139,o),
(605,285,o),
(605,277,cs),
(605,293,o),
(605,310,o),
(586,310,cs),
(583,310,o),
(579,307,o),
(576,302,cs),
(572,296,o),
(570,286,o),
(569,273,cs),
(564,166,o),
(558,100,o),
(556,73,cs),
(553,39,o),
(534,36,o),
(513,36,cs),
(184,36,l),
(184,401,l),
(223,402,o),
(259,403,o),
(298,403,cs),
(317,403,o),
(333,403,o),
(345,403,cs),
(357,402,o),
(368,402,o),
(377,402,cs),
(417,402,o),
(425,346,o),
(425,309,cs),
(425,292,o),
(433,280,o),
(442,280,cs),
(445,280,o),
(448,282,o),
(452,285,cs),
(455,288,o),
(457,296,o),
(457,307,cs),
(457,326,o),
(457,344,o),
(456,363,cs),
(455,382,o),
(455,401,o),
(455,420,cs),
(455,439,o),
(455,458,o),
(456,477,cs),
(457,495,o),
(457,514,o),
(457,533,cs),
(457,548,o),
(456,560,o),
(440,560,cs),
(426,560,o),
(423,541,o),
(423,530,cs),
(423,471,o),
(417,440,o),
(406,440,cs),
(407,440,o),
(347,437,o),
(298,437,cs),
(279,437,o),
(260,437,o),
(241,438,cs),
(222,439,o),
(203,439,o),
(184,440,c),
(184,785,l),
(487,785,ls),
(500,785,o),
(524,782,o),
(524,757,cs),
(524,645,ls),
(524,626,o),
(524,605,o),
(544,605,cs),
(559,605,o),
(561,626,o),
(561,651,cs),
(561,785,ls),
(561,813,o),
(552,821,o),
(533,821,cs),
(453,821,o),
(369,819,o),
(306,819,cs),
(254,819,o),
(164,821,o),
(65,821,cs),
(45,821,o),
(24,819,o),
(24,804,cs),
(24,789,o),
(41,789,o),
(64,789,cs),
(93,789,o),
(137,788,o),
(137,750,cs),
(137,633,o),
(143,568,o),
(143,425,cs),
(143,340,o),
(142,270,o),
(142,222,cs),
(142,173,o),
(141,120,o),
(141,64,cs),
(141,50,o),
(135,41,o),
(124,36,cs),
(113,31,o),
(91,28,o),
(60,28,cs),
(47,28,o),
(37,27,o),
(31,25,cs),
(24,23,o),
(21,18,o),
(21,11,cs),
(21,0,o),
(47,0,o),
(67,0,cs)
);
},
{
closed = 1;
nodes = (
(292,875,o),
(382,928,o),
(382,950,cs),
(382,969,o),
(374,972,o),
(363,972,cs),
(343,972,o),
(268,911,o),
(268,886,cs),
(268,879,o),
(271,875,o),
(276,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 1 0 1 106 0 0 6 0 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 10 0 11 13 10 11 91 8 1 5 5 6 83 0 6 6 12 67 0 12 12 9 83 0 9 9 15 67 0 13 13 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 1 0 1 106 0 0 6 0 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 8 1 5 5 6 83 0 6 6 12 67 0 13 13 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 72 values pushed */
0 1 0 1 106 0 0 6 0 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 8 1 5 5 6 83 0 6 6 14 67 0 13 13 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
16 15 137 135 134 127 121 119 109 107 99 90 89 87 82 80 75 63 59 56 39 37 33 25 15 148 16 148 37 36 15 17
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = Eacute;
unicode = 201;
},
{
glyphname = Ebreve;
kernLeft = B;
kernRight = AE;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,0,o),
(258,2,o),
(356,2,cs),
(397,2,o),
(436,2,o),
(475,1,cs),
(513,0,o),
(552,0,o),
(593,0,cs),
(626,0,o),
(632,5,o),
(635,33,cs),
(648,164,o),
(651,274,o),
(651,285,cs),
(651,308,o),
(632,318,o),
(613,318,cs),
(589,318,o),
(565,310,o),
(564,281,cs),
(559,201,o),
(555,183,o),
(551,121,cs),
(548,87,o),
(529,84,o),
(508,84,cs),
(230,84,l),
(230,377,l),
(280,377,o),
(267,379,o),
(318,379,cs),
(331,379,o),
(342,379,o),
(351,379,cs),
(360,378,o),
(367,378,o),
(372,378,cs),
(407,378,o),
(420,338,o),
(420,310,cs),
(420,293,o),
(426,275,o),
(461,275,cs),
(489,275,o),
(503,286,o),
(503,308,cs),
(503,323,o),
(503,341,o),
(502,361,cs),
(501,381,o),
(501,401,o),
(501,420,cs),
(501,439,o),
(501,458,o),
(502,476,cs),
(503,493,o),
(503,512,o),
(503,531,cs),
(503,563,o),
(483,570,o),
(460,570,cs),
(432,570,o),
(418,553,o),
(418,533,cs),
(418,512,o),
(417,464,o),
(401,464,cs),
(402,464,o),
(355,461,o),
(318,461,cs),
(284,461,o),
(265,462,o),
(230,464,c),
(230,737,l),
(482,737,ls),
(505,737,o),
(519,733,o),
(519,709,cs),
(519,637,ls),
(519,618,o),
(531,597,o),
(566,597,cs),
(595,597,o),
(607,607,o),
(607,643,cs),
(607,785,ls),
(607,813,o),
(598,821,o),
(579,821,cs),
(499,821,o),
(415,819,o),
(352,819,cs),
(296,819,o),
(200,821,o),
(94,821,cs),
(51,821,o),
(37,816,o),
(37,781,cs),
(37,758,o),
(60,747,o),
(93,747,cs),
(121,747,o),
(132,747,o),
(132,708,cs),
(132,606,o),
(138,543,o),
(138,425,cs),
(138,349,o),
(137,287,o),
(137,247,cs),
(137,205,o),
(136,158,o),
(136,109,cs),
(136,86,o),
(128,76,o),
(89,73,cs),
(61,72,o),
(38,62,o),
(38,33,cs),
(38,10,o),
(51,0,o),
(86,0,cs)
);
},
{
closed = 1;
nodes = (
(431,862,o),
(500,889,o),
(500,941,cs),
(500,968,o),
(482,971,o),
(462,971,cs),
(445,971,o),
(430,957,o),
(430,942,cs),
(430,937,o),
(426,932,o),
(417,927,cs),
(408,922,o),
(393,919,o),
(374,919,cs),
(344,919,o),
(315,927,o),
(315,942,cs),
(315,965,o),
(302,971,o),
(279,971,cs),
(256,971,o),
(247,958,o),
(247,941,cs),
(247,898,o),
(292,862,o),
(379,862,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
75 1 7 8 127 1 2 9 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
75 1 7 8 127 1 11 9 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
15 1 13 14 13 106 0 5 3 8 3 5 8 104 16 1 0 10 9 10 0 9 104 0 14 0 12 4 14 12 91 0 8 0 9 2 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 10 10 7 83 0 7 7 23 67 11 1 2 2 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
15 1 13 14 13 106 0 5 3 8 3 5 8 104 16 1 0 10 9 10 0 9 104 0 14 0 12 4 14 12 91 0 7 0 10 0 7 10 91 0 8 0 9 2 8 9 91 6 1 3 3 4 83 0 4 4 12 67 11 1 2 2 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
15 1 13 14 13 106 0 5 3 8 3 5 8 104 16 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 14 0 12 4 14 12 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
15 1 13 14 13 106 0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 16 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 14 0 12 4 14 12 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 82 values pushed */
15 1 13 14 13 106 0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 16 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 14 0 12 4 14 12 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 14 67 0 11 11 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
1 0 161 159 155 153 147 145 141 139 123 121 120 111 105 103 94 92 86 76 74 72 67 65 60 48 44 42 26 24 20 10 0 134 1 134 17 15
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(125,0,o),
(167,0,o),
(211,1,cs),
(254,2,o),
(296,2,o),
(337,2,cs),
(378,2,o),
(417,2,o),
(456,1,cs),
(494,0,o),
(533,0,o),
(574,0,cs),
(601,0,o),
(613,0,o),
(616,33,cs),
(627,142,o),
(632,292,o),
(632,282,cs),
(632,302,o),
(621,315,o),
(602,315,cs),
(585,315,o),
(567,306,o),
(566,278,cs),
(561,186,o),
(555,129,o),
(553,103,cs),
(550,69,o),
(531,66,o),
(510,66,cs),
(211,66,l),
(211,386,l),
(250,387,o),
(271,388,o),
(310,388,cs),
(325,388,o),
(338,388,o),
(348,388,cs),
(358,387,o),
(367,387,o),
(374,387,cs),
(413,387,o),
(422,334,o),
(422,306,cs),
(422,289,o),
(428,277,o),
(453,277,cs),
(470,277,o),
(484,281,o),
(484,304,cs),
(484,323,o),
(484,342,o),
(483,362,cs),
(482,381,o),
(482,401,o),
(482,420,cs),
(482,439,o),
(482,459,o),
(483,478,cs),
(484,497,o),
(484,516,o),
(484,535,cs),
(484,558,o),
(471,566,o),
(452,566,cs),
(428,566,o),
(420,547,o),
(420,532,cs),
(420,510,o),
(419,455,o),
(403,455,cs),
(404,455,o),
(353,452,o),
(310,452,cs),
(291,452,o),
(274,452,o),
(260,453,cs),
(246,454,o),
(230,454,o),
(211,455,c),
(211,755,l),
(484,755,ls),
(499,755,o),
(521,754,o),
(521,727,cs),
(521,640,ls),
(521,621,o),
(528,600,o),
(557,600,cs),
(580,600,o),
(588,614,o),
(588,646,cs),
(588,785,ls),
(588,813,o),
(579,821,o),
(560,821,cs),
(480,821,o),
(396,819,o),
(333,819,cs),
(279,819,o),
(185,821,o),
(82,821,cs),
(62,821,o),
(41,818,o),
(41,794,cs),
(41,777,o),
(58,769,o),
(81,769,cs),
(96,769,o),
(134,769,o),
(134,730,cs),
(134,618,o),
(140,561,o),
(140,425,cs),
(140,345,o),
(139,279,o),
(139,233,cs),
(139,186,o),
(138,136,o),
(138,84,cs),
(138,56,o),
(116,48,o),
(77,48,cs),
(50,48,o),
(38,42,o),
(38,21,cs),
(38,2,o),
(61,0,o),
(84,0,cs)
);
},
{
closed = 1;
nodes = (
(409,865,o),
(475,892,o),
(475,944,cs),
(475,971,o),
(458,972,o),
(445,972,cs),
(430,972,o),
(419,960,o),
(419,945,cs),
(419,928,o),
(394,910,o),
(355,910,cs),
(325,910,o),
(290,919,o),
(290,945,cs),
(290,965,o),
(281,972,o),
(262,972,cs),
(245,972,o),
(236,963,o),
(236,944,cs),
(236,903,o),
(282,865,o),
(358,865,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 84 values pushed */
15 1 13 14 13 106 0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 16 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 14 0 12 4 14 12 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 10 10 7 83 0 7 7 15 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
15 1 13 14 13 106 0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 16 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 14 0 12 4 14 12 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 82 values pushed */
15 1 13 14 13 106 0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 16 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 14 0 12 4 14 12 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 14 67 0 11 11 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
2 1 160 158 154 152 146 144 141 139 123 121 120 113 107 105 95 93 87 78 77 75 68 66 61 49 45 42 25 23 19 11 1 134 2 134 17 26
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(148,1,o),
(229,2,o),
(310,2,cs),
(351,2,o),
(390,2,o),
(429,1,cs),
(467,0,o),
(506,0,o),
(547,0,cs),
(574,0,o),
(586,0,o),
(589,33,cs),
(600,139,o),
(605,285,o),
(605,277,cs),
(605,293,o),
(605,310,o),
(586,310,cs),
(583,310,o),
(579,307,o),
(576,302,cs),
(572,296,o),
(570,286,o),
(569,273,cs),
(564,166,o),
(558,100,o),
(556,73,cs),
(553,39,o),
(534,36,o),
(513,36,cs),
(184,36,l),
(184,401,l),
(223,402,o),
(259,403,o),
(298,403,cs),
(317,403,o),
(333,403,o),
(345,403,cs),
(357,402,o),
(368,402,o),
(377,402,cs),
(417,402,o),
(425,346,o),
(425,309,cs),
(425,292,o),
(433,280,o),
(442,280,cs),
(445,280,o),
(448,282,o),
(452,285,cs),
(455,288,o),
(457,296,o),
(457,307,cs),
(457,326,o),
(457,344,o),
(456,363,cs),
(455,382,o),
(455,401,o),
(455,420,cs),
(455,439,o),
(455,458,o),
(456,477,cs),
(457,495,o),
(457,514,o),
(457,533,cs),
(457,548,o),
(456,560,o),
(440,560,cs),
(426,560,o),
(423,541,o),
(423,530,cs),
(423,471,o),
(417,440,o),
(406,440,cs),
(407,440,o),
(347,437,o),
(298,437,cs),
(279,437,o),
(260,437,o),
(241,438,cs),
(222,439,o),
(203,439,o),
(184,440,c),
(184,785,l),
(487,785,ls),
(500,785,o),
(524,782,o),
(524,757,cs),
(524,645,ls),
(524,626,o),
(524,605,o),
(544,605,cs),
(559,605,o),
(561,626,o),
(561,651,cs),
(561,785,ls),
(561,813,o),
(552,821,o),
(533,821,cs),
(453,821,o),
(369,819,o),
(306,819,cs),
(254,819,o),
(164,821,o),
(65,821,cs),
(45,821,o),
(24,819,o),
(24,804,cs),
(24,789,o),
(41,789,o),
(64,789,cs),
(93,789,o),
(137,788,o),
(137,750,cs),
(137,633,o),
(143,568,o),
(143,425,cs),
(143,340,o),
(142,270,o),
(142,222,cs),
(142,173,o),
(141,120,o),
(141,64,cs),
(141,50,o),
(135,41,o),
(124,36,cs),
(113,31,o),
(91,28,o),
(60,28,cs),
(47,28,o),
(37,27,o),
(31,25,cs),
(24,23,o),
(21,18,o),
(21,11,cs),
(21,0,o),
(47,0,o),
(67,0,cs)
);
},
{
closed = 1;
nodes = (
(381,875,o),
(439,899,o),
(439,948,cs),
(439,969,o),
(431,972,o),
(420,972,cs),
(409,972,o),
(403,964,o),
(403,949,cs),
(403,922,o),
(364,900,o),
(328,900,cs),
(286,900,o),
(254,910,o),
(254,949,cs),
(254,965,o),
(252,972,o),
(237,972,cs),
(226,972,o),
(220,964,o),
(220,948,cs),
(220,908,o),
(268,875,o),
(328,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
3 1 1 2 1 106 0 9 7 12 7 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 2 0 0 8 2 0 91 0 12 0 13 15 12 13 91 10 1 7 7 8 83 0 8 8 12 67 0 14 14 11 83 0 11 11 15 67 0 15 15 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
3 1 1 2 1 106 0 9 7 12 7 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 2 0 0 8 2 0 91 0 11 0 14 4 11 14 91 0 12 0 13 15 12 13 91 10 1 7 7 8 83 0 8 8 12 67 0 15 15 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 76 values pushed */
3 1 1 2 1 106 0 9 7 12 7 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 2 0 0 8 2 0 91 0 11 0 14 4 11 14 91 0 12 0 13 15 12 13 91 10 1 7 7 8 83 0 8 8 14 67 0 15 15 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
29 28 150 148 147 140 134 132 122 120 112 103 102 100 95 93 88 76 72 69 52 50 46 38 28 161 29 161 37 38 35 36 17 19
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = Ebreve;
unicode = 276;
},
{
glyphname = Ecaron;
kernLeft = B;
kernRight = AE;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,0,o),
(258,2,o),
(356,2,cs),
(397,2,o),
(436,2,o),
(475,1,cs),
(513,0,o),
(552,0,o),
(593,0,cs),
(626,0,o),
(632,5,o),
(635,33,cs),
(648,164,o),
(651,274,o),
(651,285,cs),
(651,308,o),
(632,318,o),
(613,318,cs),
(589,318,o),
(565,310,o),
(564,281,cs),
(559,201,o),
(555,183,o),
(551,121,cs),
(548,87,o),
(529,84,o),
(508,84,cs),
(230,84,l),
(230,377,l),
(280,377,o),
(267,379,o),
(318,379,cs),
(331,379,o),
(342,379,o),
(351,379,cs),
(360,378,o),
(367,378,o),
(372,378,cs),
(407,378,o),
(420,338,o),
(420,310,cs),
(420,293,o),
(426,275,o),
(461,275,cs),
(489,275,o),
(503,286,o),
(503,308,cs),
(503,323,o),
(503,341,o),
(502,361,cs),
(501,381,o),
(501,401,o),
(501,420,cs),
(501,439,o),
(501,458,o),
(502,476,cs),
(503,493,o),
(503,512,o),
(503,531,cs),
(503,563,o),
(483,570,o),
(460,570,cs),
(432,570,o),
(418,553,o),
(418,533,cs),
(418,512,o),
(417,464,o),
(401,464,cs),
(402,464,o),
(355,461,o),
(318,461,cs),
(284,461,o),
(265,462,o),
(230,464,c),
(230,737,l),
(482,737,ls),
(505,737,o),
(519,733,o),
(519,709,cs),
(519,637,ls),
(519,618,o),
(531,597,o),
(566,597,cs),
(595,597,o),
(607,607,o),
(607,643,cs),
(607,785,ls),
(607,813,o),
(598,821,o),
(579,821,cs),
(499,821,o),
(415,819,o),
(352,819,cs),
(296,819,o),
(200,821,o),
(94,821,cs),
(51,821,o),
(37,816,o),
(37,781,cs),
(37,758,o),
(60,747,o),
(93,747,cs),
(121,747,o),
(132,747,o),
(132,708,cs),
(132,606,o),
(138,543,o),
(138,425,cs),
(138,349,o),
(137,287,o),
(137,247,cs),
(137,205,o),
(136,158,o),
(136,109,cs),
(136,86,o),
(128,76,o),
(89,73,cs),
(61,72,o),
(38,62,o),
(38,33,cs),
(38,10,o),
(51,0,o),
(86,0,cs)
);
},
{
closed = 1;
nodes = (
(391,830,o),
(499,909,o),
(499,951,cs),
(499,960,o),
(497,972,o),
(486,972,cs),
(468,972,o),
(402,949,o),
(366,922,c),
(331,948,o),
(265,972,o),
(247,972,cs),
(239,972,o),
(234,965,o),
(234,958,cs),
(234,931,o),
(262,901,o),
(293,875,cs),
(320,852,o),
(355,830,o),
(366,830,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
21 1 1 0 101 1 10 11 153 1 5 12 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
21 1 1 0 101 1 10 11 153 1 14 12 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
2 15 2 0 1 0 106 0 1 7 1 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 11 0 12 5 11 12 91 9 1 6 6 7 83 0 7 7 12 67 0 13 13 10 83 0 10 10 23 67 14 1 5 5 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
2 15 2 0 1 0 106 0 1 7 1 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 10 0 13 3 10 13 91 0 11 0 12 5 11 12 91 9 1 6 6 7 83 0 7 7 12 67 14 1 5 5 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
2 15 2 0 1 0 106 0 1 7 1 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 9 1 6 6 7 83 0 7 7 12 67 0 14 14 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
2 15 2 0 1 0 106 0 1 7 1 106 0 6 7 9 9 6 96 0 8 9 11 9 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 0 9 9 7 84 0 7 7 12 67 0 14 14 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 80 values pushed */
2 15 2 0 1 0 106 0 1 7 1 106 0 6 7 9 9 6 96 0 8 9 11 9 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 0 9 9 7 84 0 7 7 14 67 0 14 14 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
27 26 1 0 149 147 146 137 131 129 120 118 112 102 100 98 93 91 86 74 70 68 52 50 46 36 26 160 27 160 17 15 9 7 0 25 1 25 17 15
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(125,0,o),
(167,0,o),
(211,1,cs),
(254,2,o),
(296,2,o),
(337,2,cs),
(378,2,o),
(417,2,o),
(456,1,cs),
(494,0,o),
(533,0,o),
(574,0,cs),
(601,0,o),
(613,0,o),
(616,33,cs),
(627,142,o),
(632,292,o),
(632,282,cs),
(632,302,o),
(621,315,o),
(602,315,cs),
(585,315,o),
(567,306,o),
(566,278,cs),
(561,186,o),
(555,129,o),
(553,103,cs),
(550,69,o),
(531,66,o),
(510,66,cs),
(211,66,l),
(211,386,l),
(250,387,o),
(271,388,o),
(310,388,cs),
(325,388,o),
(338,388,o),
(348,388,cs),
(358,387,o),
(367,387,o),
(374,387,cs),
(413,387,o),
(422,334,o),
(422,306,cs),
(422,289,o),
(428,277,o),
(453,277,cs),
(470,277,o),
(484,281,o),
(484,304,cs),
(484,323,o),
(484,342,o),
(483,362,cs),
(482,381,o),
(482,401,o),
(482,420,cs),
(482,439,o),
(482,459,o),
(483,478,cs),
(484,497,o),
(484,516,o),
(484,535,cs),
(484,558,o),
(471,566,o),
(452,566,cs),
(428,566,o),
(420,547,o),
(420,532,cs),
(420,510,o),
(419,455,o),
(403,455,cs),
(404,455,o),
(353,452,o),
(310,452,cs),
(291,452,o),
(274,452,o),
(260,453,cs),
(246,454,o),
(230,454,o),
(211,455,c),
(211,755,l),
(484,755,ls),
(499,755,o),
(521,754,o),
(521,727,cs),
(521,640,ls),
(521,621,o),
(528,600,o),
(557,600,cs),
(580,600,o),
(588,614,o),
(588,646,cs),
(588,785,ls),
(588,813,o),
(579,821,o),
(560,821,cs),
(480,821,o),
(396,819,o),
(333,819,cs),
(279,819,o),
(185,821,o),
(82,821,cs),
(62,821,o),
(41,818,o),
(41,794,cs),
(41,777,o),
(58,769,o),
(81,769,cs),
(96,769,o),
(134,769,o),
(134,730,cs),
(134,618,o),
(140,561,o),
(140,425,cs),
(140,345,o),
(139,279,o),
(139,233,cs),
(139,186,o),
(138,136,o),
(138,84,cs),
(138,56,o),
(116,48,o),
(77,48,cs),
(50,48,o),
(38,42,o),
(38,21,cs),
(38,2,o),
(61,0,o),
(84,0,cs)
);
},
{
closed = 1;
nodes = (
(373,847,o),
(479,919,o),
(479,955,cs),
(479,964,o),
(476,972,o),
(468,972,cs),
(460,972,o),
(412,959,o),
(348,921,c),
(308,945,o),
(247,972,o),
(229,972,cs),
(222,972,o),
(218,968,o),
(218,959,cs),
(218,918,o),
(326,847,o),
(348,847,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
2 15 2 0 1 0 106 0 1 7 1 106 0 6 7 9 9 6 96 0 8 9 11 9 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 11 0 12 14 11 12 91 0 9 9 7 84 0 7 7 12 67 0 13 13 10 83 0 10 10 15 67 0 14 14 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
2 15 2 0 1 0 106 0 1 7 1 106 0 6 7 9 9 6 96 0 8 9 11 9 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 0 9 9 7 84 0 7 7 12 67 0 14 14 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 80 values pushed */
2 15 2 0 1 0 106 0 1 7 1 106 0 6 7 9 9 6 96 0 8 9 11 9 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 0 9 9 7 84 0 7 7 14 67 0 14 14 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
26 25 1 0 147 145 144 137 131 129 119 117 111 102 101 99 92 90 85 73 69 66 49 47 43 35 25 158 26 158 16 14 9 7 0 24 1 24 17 15
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(148,1,o),
(229,2,o),
(310,2,cs),
(351,2,o),
(390,2,o),
(429,1,cs),
(467,0,o),
(506,0,o),
(547,0,cs),
(574,0,o),
(586,0,o),
(589,33,cs),
(600,139,o),
(605,285,o),
(605,277,cs),
(605,293,o),
(605,310,o),
(586,310,cs),
(583,310,o),
(579,307,o),
(576,302,cs),
(572,296,o),
(570,286,o),
(569,273,cs),
(564,166,o),
(558,100,o),
(556,73,cs),
(553,39,o),
(534,36,o),
(513,36,cs),
(184,36,l),
(184,401,l),
(223,402,o),
(259,403,o),
(298,403,cs),
(317,403,o),
(333,403,o),
(345,403,cs),
(357,402,o),
(368,402,o),
(377,402,cs),
(417,402,o),
(425,346,o),
(425,309,cs),
(425,292,o),
(433,280,o),
(442,280,cs),
(445,280,o),
(448,282,o),
(452,285,cs),
(455,288,o),
(457,296,o),
(457,307,cs),
(457,326,o),
(457,344,o),
(456,363,cs),
(455,382,o),
(455,401,o),
(455,420,cs),
(455,439,o),
(455,458,o),
(456,477,cs),
(457,495,o),
(457,514,o),
(457,533,cs),
(457,548,o),
(456,560,o),
(440,560,cs),
(426,560,o),
(423,541,o),
(423,530,cs),
(423,471,o),
(417,440,o),
(406,440,cs),
(407,440,o),
(347,437,o),
(298,437,cs),
(279,437,o),
(260,437,o),
(241,438,cs),
(222,439,o),
(203,439,o),
(184,440,c),
(184,785,l),
(487,785,ls),
(500,785,o),
(524,782,o),
(524,757,cs),
(524,645,ls),
(524,626,o),
(524,605,o),
(544,605,cs),
(559,605,o),
(561,626,o),
(561,651,cs),
(561,785,ls),
(561,813,o),
(552,821,o),
(533,821,cs),
(453,821,o),
(369,819,o),
(306,819,cs),
(254,819,o),
(164,821,o),
(65,821,cs),
(45,821,o),
(24,819,o),
(24,804,cs),
(24,789,o),
(41,789,o),
(64,789,cs),
(93,789,o),
(137,788,o),
(137,750,cs),
(137,633,o),
(143,568,o),
(143,425,cs),
(143,340,o),
(142,270,o),
(142,222,cs),
(142,173,o),
(141,120,o),
(141,64,cs),
(141,50,o),
(135,41,o),
(124,36,cs),
(113,31,o),
(91,28,o),
(60,28,cs),
(47,28,o),
(37,27,o),
(31,25,cs),
(24,23,o),
(21,18,o),
(21,11,cs),
(21,0,o),
(47,0,o),
(67,0,cs)
);
},
{
closed = 1;
nodes = (
(345,876,o),
(450,936,o),
(450,961,cs),
(450,968,o),
(447,972,o),
(442,972,cs),
(430,972,o),
(393,950,o),
(322,920,c),
(273,941,o),
(214,972,o),
(203,972,cs),
(198,972,o),
(195,968,o),
(195,961,cs),
(195,937,o),
(298,876,o),
(322,876,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
19 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
2 15 2 0 1 0 106 0 1 7 1 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 11 0 12 14 11 12 91 9 1 6 6 7 83 0 7 7 12 67 0 13 13 10 83 0 10 10 15 67 0 14 14 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
2 15 2 0 1 0 106 0 1 7 1 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 9 1 6 6 7 83 0 7 7 12 67 0 14 14 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
2 15 2 0 1 0 106 0 1 7 1 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 9 1 6 6 7 83 0 7 7 14 67 0 14 14 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
25 24 1 0 146 144 143 136 130 128 118 116 108 99 98 96 91 89 84 72 68 65 48 46 42 34 24 157 25 157 15 13 8 6 0 23 1 23 17 15
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = Ecaron;
unicode = 282;
},
{
glyphname = Ecircumflex;
kernLeft = B;
kernRight = AE;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,0,o),
(258,2,o),
(356,2,cs),
(397,2,o),
(436,2,o),
(475,1,cs),
(513,0,o),
(552,0,o),
(593,0,cs),
(626,0,o),
(632,5,o),
(635,33,cs),
(648,164,o),
(651,274,o),
(651,285,cs),
(651,308,o),
(632,318,o),
(613,318,cs),
(589,318,o),
(565,310,o),
(564,281,cs),
(559,201,o),
(555,183,o),
(551,121,cs),
(548,87,o),
(529,84,o),
(508,84,cs),
(230,84,l),
(230,377,l),
(280,377,o),
(267,379,o),
(318,379,cs),
(331,379,o),
(342,379,o),
(351,379,cs),
(360,378,o),
(367,378,o),
(372,378,cs),
(407,378,o),
(420,338,o),
(420,310,cs),
(420,293,o),
(426,275,o),
(461,275,cs),
(489,275,o),
(503,286,o),
(503,308,cs),
(503,323,o),
(503,341,o),
(502,361,cs),
(501,381,o),
(501,401,o),
(501,420,cs),
(501,439,o),
(501,458,o),
(502,476,cs),
(503,493,o),
(503,512,o),
(503,531,cs),
(503,563,o),
(483,570,o),
(460,570,cs),
(432,570,o),
(418,553,o),
(418,533,cs),
(418,512,o),
(417,464,o),
(401,464,cs),
(402,464,o),
(355,461,o),
(318,461,cs),
(284,461,o),
(265,462,o),
(230,464,c),
(230,737,l),
(482,737,ls),
(505,737,o),
(519,733,o),
(519,709,cs),
(519,637,ls),
(519,618,o),
(531,597,o),
(566,597,cs),
(595,597,o),
(607,607,o),
(607,643,cs),
(607,785,ls),
(607,813,o),
(598,821,o),
(579,821,cs),
(499,821,o),
(415,819,o),
(352,819,cs),
(296,819,o),
(200,821,o),
(94,821,cs),
(51,821,o),
(37,816,o),
(37,781,cs),
(37,758,o),
(60,747,o),
(93,747,cs),
(121,747,o),
(132,747,o),
(132,708,cs),
(132,606,o),
(138,543,o),
(138,425,cs),
(138,349,o),
(137,287,o),
(137,247,cs),
(137,205,o),
(136,158,o),
(136,109,cs),
(136,86,o),
(128,76,o),
(89,73,cs),
(61,72,o),
(38,62,o),
(38,33,cs),
(38,10,o),
(51,0,o),
(86,0,cs)
);
},
{
closed = 1;
nodes = (
(262,830,o),
(323,853,o),
(364,880,c),
(423,842,o),
(478,830,o),
(484,830,cs),
(495,830,o),
(497,842,o),
(497,851,cs),
(497,892,o),
(388,972,o),
(364,972,cs),
(353,972,o),
(318,950,o),
(291,928,cs),
(260,903,o),
(232,871,o),
(232,844,cs),
(232,837,o),
(237,830,o),
(245,830,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
5 1 0 2 101 1 10 11 153 1 5 12 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
5 1 0 2 101 1 10 11 153 1 14 12 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 2 0 2 106 1 15 2 0 7 0 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 11 0 12 5 11 12 91 9 1 6 6 7 83 0 7 7 12 67 0 13 13 10 83 0 10 10 23 67 14 1 5 5 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 2 0 2 106 1 15 2 0 7 0 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 10 0 13 3 10 13 91 0 11 0 12 5 11 12 91 9 1 6 6 7 83 0 7 7 12 67 14 1 5 5 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 2 0 2 106 1 15 2 0 7 0 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 9 1 6 6 7 83 0 7 7 12 67 0 14 14 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 2 0 2 106 1 15 2 0 7 0 106 0 6 7 9 9 6 96 0 8 9 11 9 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 0 9 9 7 84 0 7 7 12 67 0 14 14 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 80 values pushed */
0 2 0 2 106 1 15 2 0 7 0 106 0 6 7 9 9 6 96 0 8 9 11 9 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 0 9 9 7 84 0 7 7 14 67 0 14 14 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
27 26 1 0 149 147 146 137 131 129 120 118 112 102 100 98 93 91 86 74 70 68 52 50 46 36 26 160 27 160 19 17 11 9 0 25 1 25 17 15
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(125,0,o),
(167,0,o),
(211,1,cs),
(254,2,o),
(296,2,o),
(337,2,cs),
(378,2,o),
(417,2,o),
(456,1,cs),
(494,0,o),
(533,0,o),
(574,0,cs),
(601,0,o),
(613,0,o),
(616,33,cs),
(627,142,o),
(632,292,o),
(632,282,cs),
(632,302,o),
(621,315,o),
(602,315,cs),
(585,315,o),
(567,306,o),
(566,278,cs),
(561,186,o),
(555,129,o),
(553,103,cs),
(550,69,o),
(531,66,o),
(510,66,cs),
(211,66,l),
(211,386,l),
(250,387,o),
(271,388,o),
(310,388,cs),
(325,388,o),
(338,388,o),
(348,388,cs),
(358,387,o),
(367,387,o),
(374,387,cs),
(413,387,o),
(422,334,o),
(422,306,cs),
(422,289,o),
(428,277,o),
(453,277,cs),
(470,277,o),
(484,281,o),
(484,304,cs),
(484,323,o),
(484,342,o),
(483,362,cs),
(482,381,o),
(482,401,o),
(482,420,cs),
(482,439,o),
(482,459,o),
(483,478,cs),
(484,497,o),
(484,516,o),
(484,535,cs),
(484,558,o),
(471,566,o),
(452,566,cs),
(428,566,o),
(420,547,o),
(420,532,cs),
(420,510,o),
(419,455,o),
(403,455,cs),
(404,455,o),
(353,452,o),
(310,452,cs),
(291,452,o),
(274,452,o),
(260,453,cs),
(246,454,o),
(230,454,o),
(211,455,c),
(211,755,l),
(484,755,ls),
(499,755,o),
(521,754,o),
(521,727,cs),
(521,640,ls),
(521,621,o),
(528,600,o),
(557,600,cs),
(580,600,o),
(588,614,o),
(588,646,cs),
(588,785,ls),
(588,813,o),
(579,821,o),
(560,821,cs),
(480,821,o),
(396,819,o),
(333,819,cs),
(279,819,o),
(185,821,o),
(82,821,cs),
(62,821,o),
(41,818,o),
(41,794,cs),
(41,777,o),
(58,769,o),
(81,769,cs),
(96,769,o),
(134,769,o),
(134,730,cs),
(134,618,o),
(140,561,o),
(140,425,cs),
(140,345,o),
(139,279,o),
(139,233,cs),
(139,186,o),
(138,136,o),
(138,84,cs),
(138,56,o),
(116,48,o),
(77,48,cs),
(50,48,o),
(38,42,o),
(38,21,cs),
(38,2,o),
(61,0,o),
(84,0,cs)
);
},
{
closed = 1;
nodes = (
(247,847,o),
(308,874,o),
(348,898,c),
(412,860,o),
(460,847,o),
(468,847,cs),
(476,847,o),
(479,855,o),
(479,864,cs),
(479,900,o),
(372,972,o),
(348,972,cs),
(326,972,o),
(218,901,o),
(218,860,cs),
(218,851,o),
(222,847,o),
(229,847,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
0 2 0 2 106 1 15 2 0 7 0 106 0 6 7 9 9 6 96 0 8 9 11 9 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 11 0 12 14 11 12 91 0 9 9 7 84 0 7 7 12 67 0 13 13 10 83 0 10 10 15 67 0 14 14 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 2 0 2 106 1 15 2 0 7 0 106 0 6 7 9 9 6 96 0 8 9 11 9 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 0 9 9 7 84 0 7 7 12 67 0 14 14 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 80 values pushed */
0 2 0 2 106 1 15 2 0 7 0 106 0 6 7 9 9 6 96 0 8 9 11 9 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 0 9 9 7 84 0 7 7 14 67 0 14 14 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
26 25 1 0 147 145 144 137 131 129 119 117 111 102 101 99 92 90 85 73 69 66 49 47 43 35 25 158 26 158 18 16 11 9 0 24 1 24 17 15
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(148,1,o),
(229,2,o),
(310,2,cs),
(351,2,o),
(390,2,o),
(429,1,cs),
(467,0,o),
(506,0,o),
(547,0,cs),
(574,0,o),
(586,0,o),
(589,33,cs),
(600,139,o),
(605,285,o),
(605,277,cs),
(605,293,o),
(605,310,o),
(586,310,cs),
(583,310,o),
(579,307,o),
(576,302,cs),
(572,296,o),
(570,286,o),
(569,273,cs),
(564,166,o),
(558,100,o),
(556,73,cs),
(553,39,o),
(534,36,o),
(513,36,cs),
(184,36,l),
(184,401,l),
(223,402,o),
(259,403,o),
(298,403,cs),
(317,403,o),
(333,403,o),
(345,403,cs),
(357,402,o),
(368,402,o),
(377,402,cs),
(417,402,o),
(425,346,o),
(425,309,cs),
(425,292,o),
(433,280,o),
(442,280,cs),
(445,280,o),
(448,282,o),
(452,285,cs),
(455,288,o),
(457,296,o),
(457,307,cs),
(457,326,o),
(457,344,o),
(456,363,cs),
(455,382,o),
(455,401,o),
(455,420,cs),
(455,439,o),
(455,458,o),
(456,477,cs),
(457,495,o),
(457,514,o),
(457,533,cs),
(457,548,o),
(456,560,o),
(440,560,cs),
(426,560,o),
(423,541,o),
(423,530,cs),
(423,471,o),
(417,440,o),
(406,440,cs),
(407,440,o),
(347,437,o),
(298,437,cs),
(279,437,o),
(260,437,o),
(241,438,cs),
(222,439,o),
(203,439,o),
(184,440,c),
(184,785,l),
(487,785,ls),
(500,785,o),
(524,782,o),
(524,757,cs),
(524,645,ls),
(524,626,o),
(524,605,o),
(544,605,cs),
(559,605,o),
(561,626,o),
(561,651,cs),
(561,785,ls),
(561,813,o),
(552,821,o),
(533,821,cs),
(453,821,o),
(369,819,o),
(306,819,cs),
(254,819,o),
(164,821,o),
(65,821,cs),
(45,821,o),
(24,819,o),
(24,804,cs),
(24,789,o),
(41,789,o),
(64,789,cs),
(93,789,o),
(137,788,o),
(137,750,cs),
(137,633,o),
(143,568,o),
(143,425,cs),
(143,340,o),
(142,270,o),
(142,222,cs),
(142,173,o),
(141,120,o),
(141,64,cs),
(141,50,o),
(135,41,o),
(124,36,cs),
(113,31,o),
(91,28,o),
(60,28,cs),
(47,28,o),
(37,27,o),
(31,25,cs),
(24,23,o),
(21,18,o),
(21,11,cs),
(21,0,o),
(47,0,o),
(67,0,cs)
);
},
{
closed = 1;
nodes = (
(213,875,o),
(261,894,o),
(325,928,c),
(389,894,o),
(437,875,o),
(445,875,cs),
(450,875,o),
(453,879,o),
(453,886,cs),
(453,911,o),
(351,972,o),
(325,972,cs),
(302,972,o),
(198,911,o),
(198,886,cs),
(198,879,o),
(201,875,o),
(206,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
0 2 0 2 106 1 15 2 0 7 0 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 11 0 12 14 11 12 91 9 1 6 6 7 83 0 7 7 12 67 0 13 13 10 83 0 10 10 15 67 0 14 14 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 2 0 2 106 1 15 2 0 7 0 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 9 1 6 6 7 83 0 7 7 12 67 0 14 14 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
0 2 0 2 106 1 15 2 0 7 0 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 9 1 6 6 7 83 0 7 7 14 67 0 14 14 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
25 24 1 0 146 144 143 136 130 128 118 116 108 99 98 96 91 89 84 72 68 65 48 46 42 34 24 157 25 157 18 16 11 9 0 23 1 23 17 15
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = Ecircumflex;
unicode = 202;
},
{
glyphname = Edieresis;
kernLeft = B;
kernRight = AE;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,0,o),
(258,2,o),
(356,2,cs),
(397,2,o),
(436,2,o),
(475,1,cs),
(513,0,o),
(552,0,o),
(593,0,cs),
(626,0,o),
(632,5,o),
(635,33,cs),
(648,164,o),
(651,274,o),
(651,285,cs),
(651,308,o),
(632,318,o),
(613,318,cs),
(589,318,o),
(565,310,o),
(564,281,cs),
(559,201,o),
(555,183,o),
(551,121,cs),
(548,87,o),
(529,84,o),
(508,84,cs),
(230,84,l),
(230,377,l),
(280,377,o),
(267,379,o),
(318,379,cs),
(331,379,o),
(342,379,o),
(351,379,cs),
(360,378,o),
(367,378,o),
(372,378,cs),
(407,378,o),
(420,338,o),
(420,310,cs),
(420,293,o),
(426,275,o),
(461,275,cs),
(489,275,o),
(503,286,o),
(503,308,cs),
(503,323,o),
(503,341,o),
(502,361,cs),
(501,381,o),
(501,401,o),
(501,420,cs),
(501,439,o),
(501,458,o),
(502,476,cs),
(503,493,o),
(503,512,o),
(503,531,cs),
(503,563,o),
(483,570,o),
(460,570,cs),
(432,570,o),
(418,553,o),
(418,533,cs),
(418,512,o),
(417,464,o),
(401,464,cs),
(402,464,o),
(355,461,o),
(318,461,cs),
(284,461,o),
(265,462,o),
(230,464,c),
(230,737,l),
(482,737,ls),
(505,737,o),
(519,733,o),
(519,709,cs),
(519,637,ls),
(519,618,o),
(531,597,o),
(566,597,cs),
(595,597,o),
(607,607,o),
(607,643,cs),
(607,785,ls),
(607,813,o),
(598,821,o),
(579,821,cs),
(499,821,o),
(415,819,o),
(352,819,cs),
(296,819,o),
(200,821,o),
(94,821,cs),
(51,821,o),
(37,816,o),
(37,781,cs),
(37,758,o),
(60,747,o),
(93,747,cs),
(121,747,o),
(132,747,o),
(132,708,cs),
(132,606,o),
(138,543,o),
(138,425,cs),
(138,349,o),
(137,287,o),
(137,247,cs),
(137,205,o),
(136,158,o),
(136,109,cs),
(136,86,o),
(128,76,o),
(89,73,cs),
(61,72,o),
(38,62,o),
(38,33,cs),
(38,10,o),
(51,0,o),
(86,0,cs)
);
},
{
closed = 1;
nodes = (
(280,841,o),
(315,856,o),
(315,911,cs),
(315,947,o),
(288,972,o),
(256,972,cs),
(209,972,o),
(189,930,o),
(189,907,cs),
(189,868,o),
(216,841,o),
(249,841,cs)
);
},
{
closed = 1;
nodes = (
(487,830,o),
(522,845,o),
(522,900,cs),
(522,937,o),
(495,961,o),
(463,961,cs),
(416,961,o),
(396,919,o),
(396,896,cs),
(396,857,o),
(423,830,o),
(456,830,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
107 1 11 12 159 1 6 13 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
107 1 11 12 159 1 15 13 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 9 7 12 7 9 12 104 16 1 4 14 13 14 4 13 104 2 1 0 3 1 1 8 0 1 91 0 12 0 13 6 12 13 91 10 1 7 7 8 83 0 8 8 12 67 0 14 14 11 83 0 11 11 23 67 15 1 6 6 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 9 7 12 7 9 12 104 16 1 4 14 13 14 4 13 104 2 1 0 3 1 1 8 0 1 91 0 11 0 14 4 11 14 91 0 12 0 13 6 12 13 91 10 1 7 7 8 83 0 8 8 12 67 15 1 6 6 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 9 7 12 7 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 0 11 0 14 4 11 14 91 0 12 0 13 15 12 13 91 10 1 7 7 8 83 0 8 8 12 67 0 15 15 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 84 values pushed */
0 7 8 10 10 7 96 0 9 10 12 10 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 0 11 0 14 4 11 14 91 0 12 0 13 15 12 13 91 0 10 10 8 84 0 8 8 12 67 0 15 15 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 84 values pushed */
0 7 8 10 10 7 96 0 9 10 12 10 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 0 11 0 14 4 11 14 91 0 12 0 13 15 12 13 91 0 10 10 8 84 0 8 8 14 67 0 15 15 5 84 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
33 32 155 153 152 143 137 135 126 124 118 108 106 104 99 97 92 80 76 74 58 56 52 42 32 166 33 166 38 38 38 36 17 19
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(125,0,o),
(167,0,o),
(211,1,cs),
(254,2,o),
(296,2,o),
(337,2,cs),
(378,2,o),
(417,2,o),
(456,1,cs),
(494,0,o),
(533,0,o),
(574,0,cs),
(601,0,o),
(613,0,o),
(616,33,cs),
(627,142,o),
(632,292,o),
(632,282,cs),
(632,302,o),
(621,315,o),
(602,315,cs),
(585,315,o),
(567,306,o),
(566,278,cs),
(561,186,o),
(555,129,o),
(553,103,cs),
(550,69,o),
(531,66,o),
(510,66,cs),
(211,66,l),
(211,386,l),
(250,387,o),
(271,388,o),
(310,388,cs),
(325,388,o),
(338,388,o),
(348,388,cs),
(358,387,o),
(367,387,o),
(374,387,cs),
(413,387,o),
(422,334,o),
(422,306,cs),
(422,289,o),
(428,277,o),
(453,277,cs),
(470,277,o),
(484,281,o),
(484,304,cs),
(484,323,o),
(484,342,o),
(483,362,cs),
(482,381,o),
(482,401,o),
(482,420,cs),
(482,439,o),
(482,459,o),
(483,478,cs),
(484,497,o),
(484,516,o),
(484,535,cs),
(484,558,o),
(471,566,o),
(452,566,cs),
(428,566,o),
(420,547,o),
(420,532,cs),
(420,510,o),
(419,455,o),
(403,455,cs),
(404,455,o),
(353,452,o),
(310,452,cs),
(291,452,o),
(274,452,o),
(260,453,cs),
(246,454,o),
(230,454,o),
(211,455,c),
(211,755,l),
(484,755,ls),
(499,755,o),
(521,754,o),
(521,727,cs),
(521,640,ls),
(521,621,o),
(528,600,o),
(557,600,cs),
(580,600,o),
(588,614,o),
(588,646,cs),
(588,785,ls),
(588,813,o),
(579,821,o),
(560,821,cs),
(480,821,o),
(396,819,o),
(333,819,cs),
(279,819,o),
(185,821,o),
(82,821,cs),
(62,821,o),
(41,818,o),
(41,794,cs),
(41,777,o),
(58,769,o),
(81,769,cs),
(96,769,o),
(134,769,o),
(134,730,cs),
(134,618,o),
(140,561,o),
(140,425,cs),
(140,345,o),
(139,279,o),
(139,233,cs),
(139,186,o),
(138,136,o),
(138,84,cs),
(138,56,o),
(116,48,o),
(77,48,cs),
(50,48,o),
(38,42,o),
(38,21,cs),
(38,2,o),
(61,0,o),
(84,0,cs)
);
},
{
closed = 1;
nodes = (
(262,859,o),
(293,872,o),
(293,920,cs),
(293,951,o),
(271,972,o),
(244,972,cs),
(206,972,o),
(188,937,o),
(188,916,cs),
(188,883,o),
(210,859,o),
(237,859,cs)
);
},
{
closed = 1;
nodes = (
(469,847,o),
(500,860,o),
(500,908,cs),
(500,939,o),
(478,960,o),
(451,960,cs),
(413,960,o),
(395,925,o),
(395,904,cs),
(395,871,o),
(417,847,o),
(444,847,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 86 values pushed */
0 7 8 10 10 7 96 0 9 10 12 10 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 0 12 0 13 15 12 13 91 0 10 10 8 84 0 8 8 12 67 0 14 14 11 83 0 11 11 15 67 0 15 15 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 84 values pushed */
0 7 8 10 10 7 96 0 9 10 12 10 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 0 11 0 14 4 11 14 91 0 12 0 13 15 12 13 91 0 10 10 8 84 0 8 8 12 67 0 15 15 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 84 values pushed */
0 7 8 10 10 7 96 0 9 10 12 10 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 0 11 0 14 4 11 14 91 0 12 0 13 15 12 13 91 0 10 10 8 84 0 8 8 14 67 0 15 15 5 84 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
29 28 150 148 147 140 134 132 122 120 114 105 104 102 95 93 88 76 72 69 52 50 46 38 28 161 29 161 36 38 36 36 17 19
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(148,1,o),
(229,2,o),
(310,2,cs),
(351,2,o),
(390,2,o),
(429,1,cs),
(467,0,o),
(506,0,o),
(547,0,cs),
(574,0,o),
(586,0,o),
(589,33,cs),
(600,139,o),
(605,285,o),
(605,277,cs),
(605,293,o),
(605,310,o),
(586,310,cs),
(583,310,o),
(579,307,o),
(576,302,cs),
(572,296,o),
(570,286,o),
(569,273,cs),
(564,166,o),
(558,100,o),
(556,73,cs),
(553,39,o),
(534,36,o),
(513,36,cs),
(184,36,l),
(184,401,l),
(223,402,o),
(259,403,o),
(298,403,cs),
(317,403,o),
(333,403,o),
(345,403,cs),
(357,402,o),
(368,402,o),
(377,402,cs),
(417,402,o),
(425,346,o),
(425,309,cs),
(425,292,o),
(433,280,o),
(442,280,cs),
(445,280,o),
(448,282,o),
(452,285,cs),
(455,288,o),
(457,296,o),
(457,307,cs),
(457,326,o),
(457,344,o),
(456,363,cs),
(455,382,o),
(455,401,o),
(455,420,cs),
(455,439,o),
(455,458,o),
(456,477,cs),
(457,495,o),
(457,514,o),
(457,533,cs),
(457,548,o),
(456,560,o),
(440,560,cs),
(426,560,o),
(423,541,o),
(423,530,cs),
(423,471,o),
(417,440,o),
(406,440,cs),
(407,440,o),
(347,437,o),
(298,437,cs),
(279,437,o),
(260,437,o),
(241,438,cs),
(222,439,o),
(203,439,o),
(184,440,c),
(184,785,l),
(487,785,ls),
(500,785,o),
(524,782,o),
(524,757,cs),
(524,645,ls),
(524,626,o),
(524,605,o),
(544,605,cs),
(559,605,o),
(561,626,o),
(561,651,cs),
(561,785,ls),
(561,813,o),
(552,821,o),
(533,821,cs),
(453,821,o),
(369,819,o),
(306,819,cs),
(254,819,o),
(164,821,o),
(65,821,cs),
(45,821,o),
(24,819,o),
(24,804,cs),
(24,789,o),
(41,789,o),
(64,789,cs),
(93,789,o),
(137,788,o),
(137,750,cs),
(137,633,o),
(143,568,o),
(143,425,cs),
(143,340,o),
(142,270,o),
(142,222,cs),
(142,173,o),
(141,120,o),
(141,64,cs),
(141,50,o),
(135,41,o),
(124,36,cs),
(113,31,o),
(91,28,o),
(60,28,cs),
(47,28,o),
(37,27,o),
(31,25,cs),
(24,23,o),
(21,18,o),
(21,11,cs),
(21,0,o),
(47,0,o),
(67,0,cs)
);
},
{
closed = 1;
nodes = (
(239,889,o),
(261,899,o),
(261,935,cs),
(261,958,o),
(246,972,o),
(227,972,cs),
(199,972,o),
(186,945,o),
(186,931,cs),
(186,907,o),
(201,889,o),
(220,889,cs)
);
},
{
closed = 1;
nodes = (
(446,875,o),
(468,885,o),
(468,921,cs),
(468,944,o),
(453,958,o),
(434,958,cs),
(406,958,o),
(393,931,o),
(393,917,cs),
(393,893,o),
(408,875,o),
(427,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 9 7 12 7 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 0 12 0 13 15 12 13 91 10 1 7 7 8 83 0 8 8 12 67 0 14 14 11 83 0 11 11 15 67 0 15 15 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 9 7 12 7 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 0 11 0 14 4 11 14 91 0 12 0 13 15 12 13 91 10 1 7 7 8 83 0 8 8 12 67 0 15 15 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
0 9 7 12 7 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 0 11 0 14 4 11 14 91 0 12 0 13 15 12 13 91 10 1 7 7 8 83 0 8 8 14 67 0 15 15 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
29 28 150 148 147 140 134 132 122 120 112 103 102 100 95 93 88 76 72 69 52 50 46 38 28 161 29 161 36 38 36 36 17 19
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = Edieresis;
unicode = 203;
},
{
glyphname = Edotaccent;
kernLeft = B;
kernRight = AE;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,0,o),
(258,2,o),
(356,2,cs),
(397,2,o),
(436,2,o),
(475,1,cs),
(513,0,o),
(552,0,o),
(593,0,cs),
(626,0,o),
(632,5,o),
(635,33,cs),
(648,164,o),
(651,274,o),
(651,285,cs),
(651,308,o),
(632,318,o),
(613,318,cs),
(589,318,o),
(565,310,o),
(564,281,cs),
(559,201,o),
(555,183,o),
(551,121,cs),
(548,87,o),
(529,84,o),
(508,84,cs),
(230,84,l),
(230,377,l),
(280,377,o),
(267,379,o),
(318,379,cs),
(331,379,o),
(342,379,o),
(351,379,cs),
(360,378,o),
(367,378,o),
(372,378,cs),
(407,378,o),
(420,338,o),
(420,310,cs),
(420,293,o),
(426,275,o),
(461,275,cs),
(489,275,o),
(503,286,o),
(503,308,cs),
(503,323,o),
(503,341,o),
(502,361,cs),
(501,381,o),
(501,401,o),
(501,420,cs),
(501,439,o),
(501,458,o),
(502,476,cs),
(503,493,o),
(503,512,o),
(503,531,cs),
(503,563,o),
(483,570,o),
(460,570,cs),
(432,570,o),
(418,553,o),
(418,533,cs),
(418,512,o),
(417,464,o),
(401,464,cs),
(402,464,o),
(355,461,o),
(318,461,cs),
(284,461,o),
(265,462,o),
(230,464,c),
(230,737,l),
(482,737,ls),
(505,737,o),
(519,733,o),
(519,709,cs),
(519,637,ls),
(519,618,o),
(531,597,o),
(566,597,cs),
(595,597,o),
(607,607,o),
(607,643,cs),
(607,785,ls),
(607,813,o),
(598,821,o),
(579,821,cs),
(499,821,o),
(415,819,o),
(352,819,cs),
(296,819,o),
(200,821,o),
(94,821,cs),
(51,821,o),
(37,816,o),
(37,781,cs),
(37,758,o),
(60,747,o),
(93,747,cs),
(121,747,o),
(132,747,o),
(132,708,cs),
(132,606,o),
(138,543,o),
(138,425,cs),
(138,349,o),
(137,287,o),
(137,247,cs),
(137,205,o),
(136,158,o),
(136,109,cs),
(136,86,o),
(128,76,o),
(89,73,cs),
(61,72,o),
(38,62,o),
(38,33,cs),
(38,10,o),
(51,0,o),
(86,0,cs)
);
},
{
closed = 1;
nodes = (
(377,840,o),
(414,855,o),
(414,910,cs),
(414,946,o),
(386,971,o),
(354,971,cs),
(306,971,o),
(288,933,o),
(288,906,cs),
(288,863,o),
(314,840,o),
(347,840,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
75 1 7 8 127 1 2 9 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
75 1 7 8 127 1 11 9 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 0 12 0 13 4 12 13 91 0 8 0 9 2 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 10 10 7 83 0 7 7 23 67 11 1 2 2 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 0 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 2 8 9 91 6 1 3 3 4 83 0 4 4 12 67 11 1 2 2 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 76 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 14 67 0 11 11 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
1 0 149 147 141 139 123 121 120 111 105 103 94 92 86 76 74 72 67 65 60 48 44 42 26 24 20 10 0 134 1 134 15 15
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(125,0,o),
(167,0,o),
(211,1,cs),
(254,2,o),
(296,2,o),
(337,2,cs),
(378,2,o),
(417,2,o),
(456,1,cs),
(494,0,o),
(533,0,o),
(574,0,cs),
(601,0,o),
(613,0,o),
(616,33,cs),
(627,142,o),
(632,292,o),
(632,282,cs),
(632,302,o),
(621,315,o),
(602,315,cs),
(585,315,o),
(567,306,o),
(566,278,cs),
(561,186,o),
(555,129,o),
(553,103,cs),
(550,69,o),
(531,66,o),
(510,66,cs),
(211,66,l),
(211,386,l),
(250,387,o),
(271,388,o),
(310,388,cs),
(325,388,o),
(338,388,o),
(348,388,cs),
(358,387,o),
(367,387,o),
(374,387,cs),
(413,387,o),
(422,334,o),
(422,306,cs),
(422,289,o),
(428,277,o),
(453,277,cs),
(470,277,o),
(484,281,o),
(484,304,cs),
(484,323,o),
(484,342,o),
(483,362,cs),
(482,381,o),
(482,401,o),
(482,420,cs),
(482,439,o),
(482,459,o),
(483,478,cs),
(484,497,o),
(484,516,o),
(484,535,cs),
(484,558,o),
(471,566,o),
(452,566,cs),
(428,566,o),
(420,547,o),
(420,532,cs),
(420,510,o),
(419,455,o),
(403,455,cs),
(404,455,o),
(353,452,o),
(310,452,cs),
(291,452,o),
(274,452,o),
(260,453,cs),
(246,454,o),
(230,454,o),
(211,455,c),
(211,755,l),
(484,755,ls),
(499,755,o),
(521,754,o),
(521,727,cs),
(521,640,ls),
(521,621,o),
(528,600,o),
(557,600,cs),
(580,600,o),
(588,614,o),
(588,646,cs),
(588,785,ls),
(588,813,o),
(579,821,o),
(560,821,cs),
(480,821,o),
(396,819,o),
(333,819,cs),
(279,819,o),
(185,821,o),
(82,821,cs),
(62,821,o),
(41,818,o),
(41,794,cs),
(41,777,o),
(58,769,o),
(81,769,cs),
(96,769,o),
(134,769,o),
(134,730,cs),
(134,618,o),
(140,561,o),
(140,425,cs),
(140,345,o),
(139,279,o),
(139,233,cs),
(139,186,o),
(138,136,o),
(138,84,cs),
(138,56,o),
(116,48,o),
(77,48,cs),
(50,48,o),
(38,42,o),
(38,21,cs),
(38,2,o),
(61,0,o),
(84,0,cs)
);
},
{
closed = 1;
nodes = (
(363,859,o),
(394,872,o),
(394,920,cs),
(394,951,o),
(372,972,o),
(345,972,cs),
(303,972,o),
(289,936,o),
(289,916,cs),
(289,880,o),
(311,859,o),
(338,859,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 12 0 13 4 12 13 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 10 10 7 83 0 7 7 15 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 76 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 14 67 0 11 11 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
2 1 147 145 141 139 123 121 120 113 107 105 95 93 87 78 77 75 68 66 61 49 45 42 25 23 19 11 1 134 2 134 15 26
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(148,1,o),
(229,2,o),
(310,2,cs),
(351,2,o),
(390,2,o),
(429,1,cs),
(467,0,o),
(506,0,o),
(547,0,cs),
(574,0,o),
(586,0,o),
(589,33,cs),
(600,139,o),
(605,285,o),
(605,277,cs),
(605,293,o),
(605,310,o),
(586,310,cs),
(583,310,o),
(579,307,o),
(576,302,cs),
(572,296,o),
(570,286,o),
(569,273,cs),
(564,166,o),
(558,100,o),
(556,73,cs),
(553,39,o),
(534,36,o),
(513,36,cs),
(184,36,l),
(184,401,l),
(223,402,o),
(259,403,o),
(298,403,cs),
(317,403,o),
(333,403,o),
(345,403,cs),
(357,402,o),
(368,402,o),
(377,402,cs),
(417,402,o),
(425,346,o),
(425,309,cs),
(425,292,o),
(433,280,o),
(442,280,cs),
(445,280,o),
(448,282,o),
(452,285,cs),
(455,288,o),
(457,296,o),
(457,307,cs),
(457,326,o),
(457,344,o),
(456,363,cs),
(455,382,o),
(455,401,o),
(455,420,cs),
(455,439,o),
(455,458,o),
(456,477,cs),
(457,495,o),
(457,514,o),
(457,533,cs),
(457,548,o),
(456,560,o),
(440,560,cs),
(426,560,o),
(423,541,o),
(423,530,cs),
(423,471,o),
(417,440,o),
(406,440,cs),
(407,440,o),
(347,437,o),
(298,437,cs),
(279,437,o),
(260,437,o),
(241,438,cs),
(222,439,o),
(203,439,o),
(184,440,c),
(184,785,l),
(487,785,ls),
(500,785,o),
(524,782,o),
(524,757,cs),
(524,645,ls),
(524,626,o),
(524,605,o),
(544,605,cs),
(559,605,o),
(561,626,o),
(561,651,cs),
(561,785,ls),
(561,813,o),
(552,821,o),
(533,821,cs),
(453,821,o),
(369,819,o),
(306,819,cs),
(254,819,o),
(164,821,o),
(65,821,cs),
(45,821,o),
(24,819,o),
(24,804,cs),
(24,789,o),
(41,789,o),
(64,789,cs),
(93,789,o),
(137,788,o),
(137,750,cs),
(137,633,o),
(143,568,o),
(143,425,cs),
(143,340,o),
(142,270,o),
(142,222,cs),
(142,173,o),
(141,120,o),
(141,64,cs),
(141,50,o),
(135,41,o),
(124,36,cs),
(113,31,o),
(91,28,o),
(60,28,cs),
(47,28,o),
(37,27,o),
(31,25,cs),
(24,23,o),
(21,18,o),
(21,11,cs),
(21,0,o),
(47,0,o),
(67,0,cs)
);
},
{
closed = 1;
nodes = (
(344,889,o),
(366,899,o),
(366,935,cs),
(366,958,o),
(351,972,o),
(332,972,cs),
(304,972,o),
(291,945,o),
(291,931,cs),
(291,907,o),
(306,889,o),
(325,889,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 12 0 13 4 12 13 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 10 10 7 83 0 7 7 15 67 0 11 11 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 11 11 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 70 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 14 67 0 11 11 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
1 0 146 144 140 138 122 120 119 112 106 104 94 92 84 75 74 72 67 65 60 48 44 41 24 22 18 10 0 133 1 133 15 15
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = Edotaccent;
unicode = 278;
},
{
glyphname = Egrave;
kernLeft = B;
kernRight = AE;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,0,o),
(258,2,o),
(356,2,cs),
(397,2,o),
(436,2,o),
(475,1,cs),
(513,0,o),
(552,0,o),
(593,0,cs),
(626,0,o),
(632,5,o),
(635,33,cs),
(648,164,o),
(651,274,o),
(651,285,cs),
(651,308,o),
(632,318,o),
(613,318,cs),
(589,318,o),
(565,310,o),
(564,281,cs),
(559,201,o),
(555,183,o),
(551,121,cs),
(548,87,o),
(529,84,o),
(508,84,cs),
(230,84,l),
(230,377,l),
(280,377,o),
(267,379,o),
(318,379,cs),
(331,379,o),
(342,379,o),
(351,379,cs),
(360,378,o),
(367,378,o),
(372,378,cs),
(407,378,o),
(420,338,o),
(420,310,cs),
(420,293,o),
(426,275,o),
(461,275,cs),
(489,275,o),
(503,286,o),
(503,308,cs),
(503,323,o),
(503,341,o),
(502,361,cs),
(501,381,o),
(501,401,o),
(501,420,cs),
(501,439,o),
(501,458,o),
(502,476,cs),
(503,493,o),
(503,512,o),
(503,531,cs),
(503,563,o),
(483,570,o),
(460,570,cs),
(432,570,o),
(418,553,o),
(418,533,cs),
(418,512,o),
(417,464,o),
(401,464,cs),
(402,464,o),
(355,461,o),
(318,461,cs),
(284,461,o),
(265,462,o),
(230,464,c),
(230,737,l),
(482,737,ls),
(505,737,o),
(519,733,o),
(519,709,cs),
(519,637,ls),
(519,618,o),
(531,597,o),
(566,597,cs),
(595,597,o),
(607,607,o),
(607,643,cs),
(607,785,ls),
(607,813,o),
(598,821,o),
(579,821,cs),
(499,821,o),
(415,819,o),
(352,819,cs),
(296,819,o),
(200,821,o),
(94,821,cs),
(51,821,o),
(37,816,o),
(37,781,cs),
(37,758,o),
(60,747,o),
(93,747,cs),
(121,747,o),
(132,747,o),
(132,708,cs),
(132,606,o),
(138,543,o),
(138,425,cs),
(138,349,o),
(137,287,o),
(137,247,cs),
(137,205,o),
(136,158,o),
(136,109,cs),
(136,86,o),
(128,76,o),
(89,73,cs),
(61,72,o),
(38,62,o),
(38,33,cs),
(38,10,o),
(51,0,o),
(86,0,cs)
);
},
{
closed = 1;
nodes = (
(419,841,o),
(434,856,o),
(434,872,cs),
(434,898,o),
(360,972,o),
(320,972,cs),
(293,972,o),
(279,953,o),
(279,936,cs),
(279,897,o),
(366,841,o),
(399,841,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
91 1 9 10 143 1 4 11 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
91 1 9 10 143 1 13 11 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 0 1 0 106 0 1 6 1 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 10 0 11 4 10 11 91 8 1 5 5 6 83 0 6 6 12 67 0 12 12 9 83 0 9 9 23 67 13 1 4 4 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 0 1 0 106 0 1 6 1 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 9 0 12 2 9 12 91 0 10 0 11 4 10 11 91 8 1 5 5 6 83 0 6 6 12 67 13 1 4 4 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 0 1 0 106 0 1 6 1 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 8 1 5 5 6 83 0 6 6 12 67 0 13 13 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 0 1 0 106 0 1 6 1 106 0 5 6 8 8 5 96 0 7 8 10 8 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 0 8 8 6 84 0 6 6 12 67 0 13 13 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
0 0 1 0 106 0 1 6 1 106 0 5 6 8 8 5 96 0 7 8 10 8 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 0 8 8 6 84 0 6 6 14 67 0 13 13 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
17 16 139 137 136 127 121 119 110 108 102 92 90 88 83 81 76 64 60 58 42 40 36 26 16 150 17 150 38 34 15 17
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(125,0,o),
(167,0,o),
(211,1,cs),
(254,2,o),
(296,2,o),
(337,2,cs),
(378,2,o),
(417,2,o),
(456,1,cs),
(494,0,o),
(533,0,o),
(574,0,cs),
(601,0,o),
(613,0,o),
(616,33,cs),
(627,142,o),
(632,292,o),
(632,282,cs),
(632,302,o),
(621,315,o),
(602,315,cs),
(585,315,o),
(567,306,o),
(566,278,cs),
(561,186,o),
(555,129,o),
(553,103,cs),
(550,69,o),
(531,66,o),
(510,66,cs),
(211,66,l),
(211,386,l),
(250,387,o),
(271,388,o),
(310,388,cs),
(325,388,o),
(338,388,o),
(348,388,cs),
(358,387,o),
(367,387,o),
(374,387,cs),
(413,387,o),
(422,334,o),
(422,306,cs),
(422,289,o),
(428,277,o),
(453,277,cs),
(470,277,o),
(484,281,o),
(484,304,cs),
(484,323,o),
(484,342,o),
(483,362,cs),
(482,381,o),
(482,401,o),
(482,420,cs),
(482,439,o),
(482,459,o),
(483,478,cs),
(484,497,o),
(484,516,o),
(484,535,cs),
(484,558,o),
(471,566,o),
(452,566,cs),
(428,566,o),
(420,547,o),
(420,532,cs),
(420,510,o),
(419,455,o),
(403,455,cs),
(404,455,o),
(353,452,o),
(310,452,cs),
(291,452,o),
(274,452,o),
(260,453,cs),
(246,454,o),
(230,454,o),
(211,455,c),
(211,755,l),
(484,755,ls),
(499,755,o),
(521,754,o),
(521,727,cs),
(521,640,ls),
(521,621,o),
(528,600,o),
(557,600,cs),
(580,600,o),
(588,614,o),
(588,646,cs),
(588,785,ls),
(588,813,o),
(579,821,o),
(560,821,cs),
(480,821,o),
(396,819,o),
(333,819,cs),
(279,819,o),
(185,821,o),
(82,821,cs),
(62,821,o),
(41,818,o),
(41,794,cs),
(41,777,o),
(58,769,o),
(81,769,cs),
(96,769,o),
(134,769,o),
(134,730,cs),
(134,618,o),
(140,561,o),
(140,425,cs),
(140,345,o),
(139,279,o),
(139,233,cs),
(139,186,o),
(138,136,o),
(138,84,cs),
(138,56,o),
(116,48,o),
(77,48,cs),
(50,48,o),
(38,42,o),
(38,21,cs),
(38,2,o),
(61,0,o),
(84,0,cs)
);
},
{
closed = 1;
nodes = (
(404,854,o),
(413,864,o),
(413,877,cs),
(413,904,o),
(336,972,o),
(307,972,cs),
(287,972,o),
(275,960,o),
(275,941,cs),
(275,910,o),
(360,854,o),
(389,854,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 0 1 0 106 0 1 6 1 106 0 5 6 8 8 5 96 0 7 8 10 8 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 10 0 11 13 10 11 91 0 8 8 6 84 0 6 6 12 67 0 12 12 9 83 0 9 9 15 67 0 13 13 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 0 1 0 106 0 1 6 1 106 0 5 6 8 8 5 96 0 7 8 10 8 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 0 8 8 6 84 0 6 6 12 67 0 13 13 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
0 0 1 0 106 0 1 6 1 106 0 5 6 8 8 5 96 0 7 8 10 8 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 0 8 8 6 84 0 6 6 14 67 0 13 13 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
17 16 138 136 135 128 122 120 110 108 102 93 92 90 83 81 76 64 60 57 40 38 34 26 16 149 17 149 38 34 15 17
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(148,1,o),
(229,2,o),
(310,2,cs),
(351,2,o),
(390,2,o),
(429,1,cs),
(467,0,o),
(506,0,o),
(547,0,cs),
(574,0,o),
(586,0,o),
(589,33,cs),
(600,139,o),
(605,285,o),
(605,277,cs),
(605,293,o),
(605,310,o),
(586,310,cs),
(583,310,o),
(579,307,o),
(576,302,cs),
(572,296,o),
(570,286,o),
(569,273,cs),
(564,166,o),
(558,100,o),
(556,73,cs),
(553,39,o),
(534,36,o),
(513,36,cs),
(184,36,l),
(184,401,l),
(223,402,o),
(259,403,o),
(298,403,cs),
(317,403,o),
(333,403,o),
(345,403,cs),
(357,402,o),
(368,402,o),
(377,402,cs),
(417,402,o),
(425,346,o),
(425,309,cs),
(425,292,o),
(433,280,o),
(442,280,cs),
(445,280,o),
(448,282,o),
(452,285,cs),
(455,288,o),
(457,296,o),
(457,307,cs),
(457,326,o),
(457,344,o),
(456,363,cs),
(455,382,o),
(455,401,o),
(455,420,cs),
(455,439,o),
(455,458,o),
(456,477,cs),
(457,495,o),
(457,514,o),
(457,533,cs),
(457,548,o),
(456,560,o),
(440,560,cs),
(426,560,o),
(423,541,o),
(423,530,cs),
(423,471,o),
(417,440,o),
(406,440,cs),
(407,440,o),
(347,437,o),
(298,437,cs),
(279,437,o),
(260,437,o),
(241,438,cs),
(222,439,o),
(203,439,o),
(184,440,c),
(184,785,l),
(487,785,ls),
(500,785,o),
(524,782,o),
(524,757,cs),
(524,645,ls),
(524,626,o),
(524,605,o),
(544,605,cs),
(559,605,o),
(561,626,o),
(561,651,cs),
(561,785,ls),
(561,813,o),
(552,821,o),
(533,821,cs),
(453,821,o),
(369,819,o),
(306,819,cs),
(254,819,o),
(164,821,o),
(65,821,cs),
(45,821,o),
(24,819,o),
(24,804,cs),
(24,789,o),
(41,789,o),
(64,789,cs),
(93,789,o),
(137,788,o),
(137,750,cs),
(137,633,o),
(143,568,o),
(143,425,cs),
(143,340,o),
(142,270,o),
(142,222,cs),
(142,173,o),
(141,120,o),
(141,64,cs),
(141,50,o),
(135,41,o),
(124,36,cs),
(113,31,o),
(91,28,o),
(60,28,cs),
(47,28,o),
(37,27,o),
(31,25,cs),
(24,23,o),
(21,18,o),
(21,11,cs),
(21,0,o),
(47,0,o),
(67,0,cs)
);
},
{
closed = 1;
nodes = (
(380,875,o),
(383,879,o),
(383,886,cs),
(383,911,o),
(308,972,o),
(288,972,cs),
(277,972,o),
(269,969,o),
(269,950,cs),
(269,928,o),
(359,875,o),
(375,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 0 1 0 106 0 1 6 1 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 10 0 11 13 10 11 91 8 1 5 5 6 83 0 6 6 12 67 0 12 12 9 83 0 9 9 15 67 0 13 13 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 0 1 0 106 0 1 6 1 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 8 1 5 5 6 83 0 6 6 12 67 0 13 13 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 72 values pushed */
0 0 1 0 106 0 1 6 1 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 8 1 5 5 6 83 0 6 6 14 67 0 13 13 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
16 15 137 135 134 127 121 119 109 107 99 90 89 87 82 80 75 63 59 56 39 37 33 25 15 148 16 148 37 34 15 17
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = Egrave;
unicode = 200;
},
{
glyphname = Emacron;
kernLeft = B;
kernRight = AE;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,0,o),
(258,2,o),
(356,2,cs),
(397,2,o),
(436,2,o),
(475,1,cs),
(513,0,o),
(552,0,o),
(593,0,cs),
(626,0,o),
(632,5,o),
(635,33,cs),
(648,164,o),
(651,274,o),
(651,285,cs),
(651,308,o),
(632,318,o),
(613,318,cs),
(589,318,o),
(565,310,o),
(564,281,cs),
(559,201,o),
(555,183,o),
(551,121,cs),
(548,87,o),
(529,84,o),
(508,84,cs),
(230,84,l),
(230,377,l),
(280,377,o),
(267,379,o),
(318,379,cs),
(331,379,o),
(342,379,o),
(351,379,cs),
(360,378,o),
(367,378,o),
(372,378,cs),
(407,378,o),
(420,338,o),
(420,310,cs),
(420,293,o),
(426,275,o),
(461,275,cs),
(489,275,o),
(503,286,o),
(503,308,cs),
(503,323,o),
(503,341,o),
(502,361,cs),
(501,381,o),
(501,401,o),
(501,420,cs),
(501,439,o),
(501,458,o),
(502,476,cs),
(503,493,o),
(503,512,o),
(503,531,cs),
(503,563,o),
(483,570,o),
(460,570,cs),
(432,570,o),
(418,553,o),
(418,533,cs),
(418,512,o),
(417,464,o),
(401,464,cs),
(402,464,o),
(355,461,o),
(318,461,cs),
(284,461,o),
(265,462,o),
(230,464,c),
(230,737,l),
(482,737,ls),
(505,737,o),
(519,733,o),
(519,709,cs),
(519,637,ls),
(519,618,o),
(531,597,o),
(566,597,cs),
(595,597,o),
(607,607,o),
(607,643,cs),
(607,785,ls),
(607,813,o),
(598,821,o),
(579,821,cs),
(499,821,o),
(415,819,o),
(352,819,cs),
(296,819,o),
(200,821,o),
(94,821,cs),
(51,821,o),
(37,816,o),
(37,781,cs),
(37,758,o),
(60,747,o),
(93,747,cs),
(121,747,o),
(132,747,o),
(132,708,cs),
(132,606,o),
(138,543,o),
(138,425,cs),
(138,349,o),
(137,287,o),
(137,247,cs),
(137,205,o),
(136,158,o),
(136,109,cs),
(136,86,o),
(128,76,o),
(89,73,cs),
(61,72,o),
(38,62,o),
(38,33,cs),
(38,10,o),
(51,0,o),
(86,0,cs)
);
},
{
closed = 1;
nodes = (
(330,885,o),
(427,886,o),
(501,886,cs),
(530,886,o),
(537,913,o),
(537,928,cs),
(537,948,o),
(524,965,o),
(509,965,cs),
(493,965,o),
(475,965,o),
(454,964,cs),
(433,963,o),
(409,962,o),
(381,962,cs),
(339,962,o),
(290,964,o),
(260,964,cs),
(237,964,o),
(227,944,o),
(227,925,cs),
(227,906,o),
(241,885,o),
(260,885,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
75 1 7 8 127 1 2 9 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
75 1 7 8 127 1 11 9 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 15 1 12 0 13 4 12 13 91 0 8 0 9 2 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 10 10 7 83 0 7 7 23 67 11 1 2 2 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 15 1 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 2 8 9 91 6 1 3 3 4 83 0 4 4 12 67 11 1 2 2 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 15 1 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 15 1 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 77 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 15 1 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 14 67 0 11 11 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
136 135 1 0 149 142 135 161 136 153 123 121 120 111 105 103 94 92 86 76 74 72 67 65 60 48 44 42 26 24 20 10 0 134 1 134 16 15
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(125,0,o),
(167,0,o),
(211,1,cs),
(254,2,o),
(296,2,o),
(337,2,cs),
(378,2,o),
(417,2,o),
(456,1,cs),
(494,0,o),
(533,0,o),
(574,0,cs),
(601,0,o),
(613,0,o),
(616,33,cs),
(627,142,o),
(632,292,o),
(632,282,cs),
(632,302,o),
(621,315,o),
(602,315,cs),
(585,315,o),
(567,306,o),
(566,278,cs),
(561,186,o),
(555,129,o),
(553,103,cs),
(550,69,o),
(531,66,o),
(510,66,cs),
(211,66,l),
(211,386,l),
(250,387,o),
(271,388,o),
(310,388,cs),
(325,388,o),
(338,388,o),
(348,388,cs),
(358,387,o),
(367,387,o),
(374,387,cs),
(413,387,o),
(422,334,o),
(422,306,cs),
(422,289,o),
(428,277,o),
(453,277,cs),
(470,277,o),
(484,281,o),
(484,304,cs),
(484,323,o),
(484,342,o),
(483,362,cs),
(482,381,o),
(482,401,o),
(482,420,cs),
(482,439,o),
(482,459,o),
(483,478,cs),
(484,497,o),
(484,516,o),
(484,535,cs),
(484,558,o),
(471,566,o),
(452,566,cs),
(428,566,o),
(420,547,o),
(420,532,cs),
(420,510,o),
(419,455,o),
(403,455,cs),
(404,455,o),
(353,452,o),
(310,452,cs),
(291,452,o),
(274,452,o),
(260,453,cs),
(246,454,o),
(230,454,o),
(211,455,c),
(211,755,l),
(484,755,ls),
(499,755,o),
(521,754,o),
(521,727,cs),
(521,640,ls),
(521,621,o),
(528,600,o),
(557,600,cs),
(580,600,o),
(588,614,o),
(588,646,cs),
(588,785,ls),
(588,813,o),
(579,821,o),
(560,821,cs),
(480,821,o),
(396,819,o),
(333,819,cs),
(279,819,o),
(185,821,o),
(82,821,cs),
(62,821,o),
(41,818,o),
(41,794,cs),
(41,777,o),
(58,769,o),
(81,769,cs),
(96,769,o),
(134,769,o),
(134,730,cs),
(134,618,o),
(140,561,o),
(140,425,cs),
(140,345,o),
(139,279,o),
(139,233,cs),
(139,186,o),
(138,136,o),
(138,84,cs),
(138,56,o),
(116,48,o),
(77,48,cs),
(50,48,o),
(38,42,o),
(38,21,cs),
(38,2,o),
(61,0,o),
(84,0,cs)
);
},
{
closed = 1;
nodes = (
(312,880,o),
(409,881,o),
(483,881,cs),
(506,881,o),
(512,903,o),
(512,914,cs),
(512,929,o),
(502,942,o),
(491,942,cs),
(475,942,o),
(457,942,o),
(436,941,cs),
(415,940,o),
(391,939,o),
(363,939,cs),
(321,939,o),
(272,941,o),
(242,941,cs),
(223,941,o),
(216,926,o),
(216,911,cs),
(216,896,o),
(227,880,o),
(242,880,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 79 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 15 1 12 0 13 4 12 13 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 10 10 7 83 0 7 7 15 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 15 1 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 77 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 15 1 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 14 67 0 11 11 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
136 135 2 1 147 140 135 159 136 151 123 121 120 113 107 105 95 93 87 78 77 75 68 66 61 49 45 42 25 23 19 11 1 134 2 134 16 26
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(148,1,o),
(229,2,o),
(310,2,cs),
(351,2,o),
(390,2,o),
(429,1,cs),
(467,0,o),
(506,0,o),
(547,0,cs),
(574,0,o),
(586,0,o),
(589,33,cs),
(600,139,o),
(605,285,o),
(605,277,cs),
(605,293,o),
(605,310,o),
(586,310,cs),
(583,310,o),
(579,307,o),
(576,302,cs),
(572,296,o),
(570,286,o),
(569,273,cs),
(564,166,o),
(558,100,o),
(556,73,cs),
(553,39,o),
(534,36,o),
(513,36,cs),
(184,36,l),
(184,401,l),
(223,402,o),
(259,403,o),
(298,403,cs),
(317,403,o),
(333,403,o),
(345,403,cs),
(357,402,o),
(368,402,o),
(377,402,cs),
(417,402,o),
(425,346,o),
(425,309,cs),
(425,292,o),
(433,280,o),
(442,280,cs),
(445,280,o),
(448,282,o),
(452,285,cs),
(455,288,o),
(457,296,o),
(457,307,cs),
(457,326,o),
(457,344,o),
(456,363,cs),
(455,382,o),
(455,401,o),
(455,420,cs),
(455,439,o),
(455,458,o),
(456,477,cs),
(457,495,o),
(457,514,o),
(457,533,cs),
(457,548,o),
(456,560,o),
(440,560,cs),
(426,560,o),
(423,541,o),
(423,530,cs),
(423,471,o),
(417,440,o),
(406,440,cs),
(407,440,o),
(347,437,o),
(298,437,cs),
(279,437,o),
(260,437,o),
(241,438,cs),
(222,439,o),
(203,439,o),
(184,440,c),
(184,785,l),
(487,785,ls),
(500,785,o),
(524,782,o),
(524,757,cs),
(524,645,ls),
(524,626,o),
(524,605,o),
(544,605,cs),
(559,605,o),
(561,626,o),
(561,651,cs),
(561,785,ls),
(561,813,o),
(552,821,o),
(533,821,cs),
(453,821,o),
(369,819,o),
(306,819,cs),
(254,819,o),
(164,821,o),
(65,821,cs),
(45,821,o),
(24,819,o),
(24,804,cs),
(24,789,o),
(41,789,o),
(64,789,cs),
(93,789,o),
(137,788,o),
(137,750,cs),
(137,633,o),
(143,568,o),
(143,425,cs),
(143,340,o),
(142,270,o),
(142,222,cs),
(142,173,o),
(141,120,o),
(141,64,cs),
(141,50,o),
(135,41,o),
(124,36,cs),
(113,31,o),
(91,28,o),
(60,28,cs),
(47,28,o),
(37,27,o),
(31,25,cs),
(24,23,o),
(21,18,o),
(21,11,cs),
(21,0,o),
(47,0,o),
(67,0,cs)
);
},
{
closed = 1;
nodes = (
(287,875,o),
(384,876,o),
(458,876,cs),
(473,876,o),
(477,887,o),
(477,894,cs),
(477,901,o),
(471,907,o),
(466,907,cs),
(450,907,o),
(432,907,o),
(411,906,cs),
(390,905,o),
(366,904,o),
(338,904,cs),
(296,904,o),
(247,906,o),
(217,906,cs),
(206,906,o),
(201,898,o),
(201,891,cs),
(201,884,o),
(208,875,o),
(217,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 15 1 12 0 13 4 12 13 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 10 10 7 83 0 7 7 15 67 0 11 11 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 15 1 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 11 11 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 71 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 15 1 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 14 67 0 11 11 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
135 134 1 0 146 139 134 158 135 150 122 120 119 112 106 104 94 92 84 75 74 72 67 65 60 48 44 41 24 22 18 10 0 133 1 133 16 15
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = Emacron;
unicode = 274;
},
{
glyphname = Eogonek;
kernLeft = B;
kernRight = AE;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(597,-155,o),
(628,-126,o),
(628,-102,cs),
(628,-90,o),
(616,-78,o),
(603,-78,cs),
(583,-78,o),
(584,-102,o),
(543,-102,cs),
(528,-102,o),
(514,-96,o),
(514,-81,cs),
(514,-54,o),
(528,-17,o),
(555,0,c),
(593,0,ls),
(626,0,o),
(632,5,o),
(635,33,cs),
(648,164,o),
(651,274,o),
(651,285,cs),
(651,308,o),
(632,318,o),
(613,318,cs),
(589,318,o),
(565,310,o),
(564,281,cs),
(559,201,o),
(555,183,o),
(551,121,cs),
(548,87,o),
(529,84,o),
(508,84,cs),
(230,84,l),
(230,377,l),
(280,377,o),
(267,379,o),
(318,379,cs),
(331,379,o),
(342,379,o),
(351,379,cs),
(360,378,o),
(367,378,o),
(372,378,cs),
(407,378,o),
(420,338,o),
(420,310,cs),
(420,293,o),
(426,275,o),
(461,275,cs),
(489,275,o),
(503,286,o),
(503,308,cs),
(503,323,o),
(503,341,o),
(502,361,cs),
(501,381,o),
(501,401,o),
(501,420,cs),
(501,439,o),
(501,458,o),
(502,476,cs),
(503,493,o),
(503,512,o),
(503,531,cs),
(503,563,o),
(483,570,o),
(460,570,cs),
(432,570,o),
(418,553,o),
(418,533,cs),
(418,512,o),
(417,464,o),
(401,464,cs),
(402,464,o),
(355,461,o),
(318,461,cs),
(284,461,o),
(265,462,o),
(230,464,c),
(230,737,l),
(482,737,ls),
(505,737,o),
(519,733,o),
(519,709,cs),
(519,637,ls),
(519,618,o),
(531,597,o),
(566,597,cs),
(595,597,o),
(607,607,o),
(607,643,cs),
(607,785,ls),
(607,813,o),
(598,821,o),
(579,821,cs),
(499,821,o),
(415,819,o),
(352,819,cs),
(296,819,o),
(200,821,o),
(94,821,cs),
(51,821,o),
(37,816,o),
(37,781,cs),
(37,758,o),
(60,747,o),
(93,747,cs),
(121,747,o),
(132,747,o),
(132,708,cs),
(132,606,o),
(138,543,o),
(138,425,cs),
(138,349,o),
(137,287,o),
(137,247,cs),
(137,205,o),
(136,158,o),
(136,109,cs),
(136,86,o),
(128,76,o),
(89,73,cs),
(61,72,o),
(38,62,o),
(38,33,cs),
(38,10,o),
(51,0,o),
(86,0,cs),
(164,0,o),
(258,2,o),
(356,2,cs),
(405,2,o),
(452,1,o),
(499,0,c),
(475,-14,o),
(435,-37,o),
(435,-80,cs),
(435,-132,o),
(495,-155,o),
(545,-155,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
105 1 11 12 157 1 6 13 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
105 1 11 12 157 1 15 13 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 9 7 12 7 9 12 104 0 3 1 2 1 3 2 104 0 12 0 13 6 12 13 91 0 2 0 4 2 4 87 10 1 7 7 8 83 0 8 8 12 67 0 14 14 11 83 0 11 11 23 67 16 1 0 0 1 83 5 1 1 1 13 67 15 1 6 6 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 9 7 12 7 9 12 104 0 3 1 2 1 3 2 104 0 11 0 14 0 11 14 91 0 12 0 13 6 12 13 91 0 2 0 4 2 4 87 10 1 7 7 8 83 0 8 8 12 67 16 1 0 0 1 83 5 1 1 1 13 67 15 1 6 6 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 81 values pushed */
0 9 7 12 7 9 12 104 0 6 15 1 15 6 96 0 3 1 2 1 3 2 104 0 11 0 14 0 11 14 91 0 12 0 13 15 12 13 91 0 2 0 4 2 4 87 10 1 7 7 8 83 0 8 8 12 67 16 1 0 0 1 83 5 1 1 1 13 67 0 15 15 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 87 values pushed */
0 7 8 10 10 7 96 0 9 10 12 10 9 12 104 0 6 15 1 15 6 96 0 3 1 2 1 3 2 104 0 11 0 14 0 11 14 91 0 12 0 13 15 12 13 91 0 2 0 4 2 4 87 0 10 10 8 84 0 8 8 12 67 16 1 0 0 1 83 5 1 1 1 13 67 0 15 15 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 87 values pushed */
0 7 8 10 10 7 96 0 9 10 12 10 9 12 104 0 6 15 1 15 6 96 0 3 1 2 1 3 2 104 0 11 0 14 0 11 14 91 0 12 0 13 15 12 13 91 0 2 0 4 2 4 87 0 10 10 8 84 0 8 8 14 67 16 1 0 0 1 83 5 1 1 1 13 67 0 15 15 1 83 5 1 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
1 0 153 151 150 141 135 133 124 122 116 106 104 102 97 95 90 78 74 72 56 54 50 41 32 30 24 22 19 17 12 10 0 164 1 164 17 15
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(125,0,o),
(167,0,o),
(211,1,cs),
(254,2,o),
(296,2,o),
(337,2,cs),
(378,2,o),
(417,2,o),
(456,1,cs),
(494,0,o),
(533,0,o),
(574,0,cs),
(601,0,o),
(613,0,o),
(616,33,cs),
(627,142,o),
(632,292,o),
(632,282,cs),
(632,302,o),
(621,315,o),
(602,315,cs),
(585,315,o),
(567,306,o),
(566,278,cs),
(561,186,o),
(555,129,o),
(553,103,cs),
(550,69,o),
(531,66,o),
(510,66,cs),
(211,66,l),
(211,386,l),
(250,387,o),
(271,388,o),
(310,388,cs),
(325,388,o),
(338,388,o),
(348,388,cs),
(358,387,o),
(367,387,o),
(374,387,cs),
(413,387,o),
(422,334,o),
(422,306,cs),
(422,289,o),
(428,277,o),
(453,277,cs),
(470,277,o),
(484,281,o),
(484,304,cs),
(484,323,o),
(484,342,o),
(483,362,cs),
(482,381,o),
(482,401,o),
(482,420,cs),
(482,439,o),
(482,459,o),
(483,478,cs),
(484,497,o),
(484,516,o),
(484,535,cs),
(484,558,o),
(471,566,o),
(452,566,cs),
(428,566,o),
(420,547,o),
(420,532,cs),
(420,510,o),
(419,455,o),
(403,455,cs),
(404,455,o),
(353,452,o),
(310,452,cs),
(291,452,o),
(274,452,o),
(260,453,cs),
(246,454,o),
(230,454,o),
(211,455,c),
(211,755,l),
(484,755,ls),
(499,755,o),
(521,754,o),
(521,727,cs),
(521,640,ls),
(521,621,o),
(528,600,o),
(557,600,cs),
(580,600,o),
(588,614,o),
(588,646,cs),
(588,785,ls),
(588,813,o),
(579,821,o),
(560,821,cs),
(480,821,o),
(396,819,o),
(333,819,cs),
(279,819,o),
(185,821,o),
(82,821,cs),
(62,821,o),
(41,818,o),
(41,794,cs),
(41,777,o),
(58,769,o),
(81,769,cs),
(96,769,o),
(134,769,o),
(134,730,cs),
(134,618,o),
(140,561,o),
(140,425,cs),
(140,345,o),
(139,279,o),
(139,233,cs),
(139,186,o),
(138,136,o),
(138,84,cs),
(138,56,o),
(116,48,o),
(77,48,cs),
(50,48,o),
(38,42,o),
(38,21,cs),
(38,2,o),
(61,0,o),
(84,0,cs)
);
},
{
closed = 1;
nodes = (
(404,-149,o),
(434,-108,o),
(434,-98,cs),
(434,-87,o),
(428,-76,o),
(413,-76,cs),
(409,-76,o),
(405,-78,o),
(400,-82,cs),
(395,-87,o),
(389,-92,o),
(384,-97,cs),
(378,-103,o),
(367,-106,o),
(350,-106,cs),
(334,-106,o),
(319,-91,o),
(319,-75,cs),
(319,-56,o),
(333,-2,o),
(378,13,c),
(328,14,l),
(328,14,l),
(314,7,o),
(302,0,o),
(291,-9,cs),
(272,-24,o),
(255,-45,o),
(255,-76,cs),
(255,-119,o),
(297,-149,o),
(356,-149,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 92 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 16 1 0 10 9 10 0 9 104 0 11 9 2 15 11 96 0 2 15 15 2 94 0 13 1 12 1 13 12 104 0 8 0 9 11 8 9 91 0 12 0 14 12 14 87 0 6 6 4 84 0 4 4 12 67 0 10 10 7 83 0 7 7 15 67 17 1 15 15 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 90 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 16 1 0 10 9 10 0 9 104 0 11 9 2 15 11 96 0 2 15 15 2 94 0 13 1 12 1 13 12 104 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 12 0 14 12 14 87 0 6 6 4 84 0 4 4 12 67 17 1 15 15 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 91 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 16 1 0 10 9 10 0 9 104 0 11 9 2 9 11 2 104 0 2 15 15 2 94 0 13 1 12 1 13 12 104 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 12 0 14 12 14 87 0 6 6 4 84 0 4 4 12 67 17 1 15 15 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 92 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 16 1 0 10 9 10 0 9 104 0 11 9 2 9 11 2 104 0 2 15 9 2 15 102 0 13 1 12 1 13 12 104 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 12 0 14 12 14 87 0 6 6 4 84 0 4 4 12 67 17 1 15 15 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 92 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 16 1 0 10 9 10 0 9 104 0 11 9 2 9 11 2 104 0 2 15 9 2 15 102 0 13 1 12 1 13 12 104 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 12 0 14 12 14 87 0 6 6 4 84 0 4 4 14 67 17 1 15 15 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
135 135 2 1 135 164 135 164 157 155 149 147 144 142 123 121 120 113 107 105 95 93 87 78 77 75 68 66 61 49 45 42 25 23 19 11 1 134 2 134 18 26
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(377,-149,o),
(407,-108,o),
(407,-98,cs),
(407,-90,o),
(405,-82,o),
(393,-82,cs),
(374,-82,o),
(368,-122,o),
(331,-122,cs),
(300,-122,o),
(292,-92,o),
(292,-75,cs),
(292,-60,o),
(299,-22,o),
(330,1,c),
(367,0,o),
(403,0,o),
(438,0,cs),
(473,0,o),
(509,0,o),
(547,0,cs),
(574,0,o),
(586,0,o),
(589,33,cs),
(600,139,o),
(605,285,o),
(605,277,cs),
(605,293,o),
(605,310,o),
(586,310,cs),
(583,310,o),
(579,307,o),
(576,302,cs),
(572,296,o),
(570,286,o),
(569,273,cs),
(564,166,o),
(558,100,o),
(556,73,cs),
(553,39,o),
(534,36,o),
(513,36,cs),
(184,36,l),
(184,401,l),
(223,402,o),
(259,403,o),
(298,403,cs),
(317,403,o),
(333,403,o),
(345,403,cs),
(357,402,o),
(368,402,o),
(377,402,cs),
(417,402,o),
(425,346,o),
(425,309,cs),
(425,292,o),
(433,280,o),
(442,280,cs),
(445,280,o),
(448,282,o),
(452,285,cs),
(455,288,o),
(457,296,o),
(457,307,cs),
(457,326,o),
(457,344,o),
(456,363,cs),
(455,382,o),
(455,401,o),
(455,420,cs),
(455,439,o),
(455,458,o),
(456,477,cs),
(457,495,o),
(457,514,o),
(457,533,cs),
(457,548,o),
(456,560,o),
(440,560,cs),
(426,560,o),
(423,541,o),
(423,530,cs),
(423,471,o),
(417,440,o),
(406,440,cs),
(407,440,o),
(347,437,o),
(298,437,cs),
(279,437,o),
(260,437,o),
(241,438,cs),
(222,439,o),
(203,439,o),
(184,440,c),
(184,785,l),
(487,785,ls),
(500,785,o),
(524,782,o),
(524,757,cs),
(524,645,ls),
(524,626,o),
(524,605,o),
(544,605,cs),
(559,605,o),
(561,626,o),
(561,651,cs),
(561,785,ls),
(561,813,o),
(552,821,o),
(533,821,cs),
(453,821,o),
(369,819,o),
(306,819,cs),
(254,819,o),
(164,821,o),
(65,821,cs),
(45,821,o),
(24,819,o),
(24,804,cs),
(24,789,o),
(41,789,o),
(64,789,cs),
(93,789,o),
(137,788,o),
(137,750,cs),
(137,633,o),
(143,568,o),
(143,425,cs),
(143,340,o),
(142,270,o),
(142,222,cs),
(142,173,o),
(141,120,o),
(141,64,cs),
(141,50,o),
(135,41,o),
(124,36,cs),
(113,31,o),
(91,28,o),
(60,28,cs),
(47,28,o),
(37,27,o),
(31,25,cs),
(24,23,o),
(21,18,o),
(21,11,cs),
(21,0,o),
(47,0,o),
(67,0,cs),
(143,1,o),
(219,2,o),
(295,2,c),
(275,-13,o),
(248,-37,o),
(248,-76,cs),
(248,-119,o),
(282,-149,o),
(329,-149,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 81 values pushed */
0 9 7 12 7 9 12 104 16 1 0 14 13 14 0 13 104 0 6 15 1 15 6 1 104 0 3 1 2 1 3 2 104 0 12 0 13 15 12 13 91 0 2 0 4 2 4 87 10 1 7 7 8 83 0 8 8 12 67 0 14 14 11 83 0 11 11 15 67 0 15 15 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 79 values pushed */
0 9 7 12 7 9 12 104 16 1 0 14 13 14 0 13 104 0 6 15 1 15 6 1 104 0 3 1 2 1 3 2 104 0 11 0 14 0 11 14 91 0 12 0 13 15 12 13 91 0 2 0 4 2 4 87 10 1 7 7 8 83 0 8 8 12 67 0 15 15 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 79 values pushed */
0 9 7 12 7 9 12 104 16 1 0 14 13 14 0 13 104 0 6 15 1 15 6 1 104 0 3 1 2 1 3 2 104 0 11 0 14 0 11 14 91 0 12 0 13 15 12 13 91 0 2 0 4 2 4 87 10 1 7 7 8 83 0 8 8 14 67 0 15 15 1 83 5 1 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
1 0 149 147 146 139 133 131 121 119 111 102 101 99 94 92 87 75 71 68 51 49 45 41 36 34 28 26 23 21 14 10 0 160 1 160 17 15
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = Eogonek;
unicode = 280;
},
{
glyphname = Etilde;
kernLeft = B;
kernRight = AE;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,0,o),
(258,2,o),
(356,2,cs),
(397,2,o),
(436,2,o),
(475,1,cs),
(513,0,o),
(552,0,o),
(593,0,cs),
(626,0,o),
(632,5,o),
(635,33,cs),
(648,164,o),
(651,274,o),
(651,285,cs),
(651,308,o),
(632,318,o),
(613,318,cs),
(589,318,o),
(565,310,o),
(564,281,cs),
(559,201,o),
(555,183,o),
(551,121,cs),
(548,87,o),
(529,84,o),
(508,84,cs),
(230,84,l),
(230,377,l),
(280,377,o),
(267,379,o),
(318,379,cs),
(331,379,o),
(342,379,o),
(351,379,cs),
(360,378,o),
(367,378,o),
(372,378,cs),
(407,378,o),
(420,338,o),
(420,310,cs),
(420,293,o),
(426,275,o),
(461,275,cs),
(489,275,o),
(503,286,o),
(503,308,cs),
(503,323,o),
(503,341,o),
(502,361,cs),
(501,381,o),
(501,401,o),
(501,420,cs),
(501,439,o),
(501,458,o),
(502,476,cs),
(503,493,o),
(503,512,o),
(503,531,cs),
(503,563,o),
(483,570,o),
(460,570,cs),
(432,570,o),
(418,553,o),
(418,533,cs),
(418,512,o),
(417,464,o),
(401,464,cs),
(402,464,o),
(355,461,o),
(318,461,cs),
(284,461,o),
(265,462,o),
(230,464,c),
(230,737,l),
(482,737,ls),
(505,737,o),
(519,733,o),
(519,709,cs),
(519,637,ls),
(519,618,o),
(531,597,o),
(566,597,cs),
(595,597,o),
(607,607,o),
(607,643,cs),
(607,785,ls),
(607,813,o),
(598,821,o),
(579,821,cs),
(499,821,o),
(415,819,o),
(352,819,cs),
(296,819,o),
(200,821,o),
(94,821,cs),
(51,821,o),
(37,816,o),
(37,781,cs),
(37,758,o),
(60,747,o),
(93,747,cs),
(121,747,o),
(132,747,o),
(132,708,cs),
(132,606,o),
(138,543,o),
(138,425,cs),
(138,349,o),
(137,287,o),
(137,247,cs),
(137,205,o),
(136,158,o),
(136,109,cs),
(136,86,o),
(128,76,o),
(89,73,cs),
(61,72,o),
(38,62,o),
(38,33,cs),
(38,10,o),
(51,0,o),
(86,0,cs)
);
},
{
closed = 1;
nodes = (
(218,842,o),
(242,867,o),
(281,867,cs),
(320,867,o),
(362,843,o),
(418,843,cs),
(451,843,o),
(529,861,o),
(529,918,cs),
(529,939,o),
(514,953,o),
(507,953,cs),
(502,953,o),
(492,949,o),
(477,940,cs),
(458,929,o),
(436,923,o),
(417,923,cs),
(378,923,o),
(316,951,o),
(280,951,cs),
(255,951,o),
(233,945,o),
(212,933,cs),
(193,922,o),
(178,907,o),
(178,878,cs),
(178,858,o),
(185,842,o),
(197,842,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
75 1 7 8 127 1 2 9 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
75 1 7 8 127 1 11 9 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
0 5 3 8 3 5 8 104 18 1 0 10 9 10 0 9 104 14 1 12 0 16 15 12 16 91 0 13 17 1 15 4 13 15 91 0 8 0 9 2 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 10 10 7 83 0 7 7 23 67 11 1 2 2 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 5 3 8 3 5 8 104 18 1 0 10 9 10 0 9 104 14 1 12 0 16 15 12 16 91 0 13 17 1 15 4 13 15 91 0 7 0 10 0 7 10 91 0 8 0 9 2 8 9 91 6 1 3 3 4 83 0 4 4 12 67 11 1 2 2 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 5 3 8 3 5 8 104 18 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 14 1 12 0 16 15 12 16 91 0 13 17 1 15 4 13 15 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 86 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 18 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 14 1 12 0 16 15 12 16 91 0 13 17 1 15 4 13 15 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 86 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 18 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 14 1 12 0 16 15 12 16 91 0 13 17 1 15 4 13 15 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 14 67 0 11 11 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
1 0 169 167 164 162 159 157 151 149 146 144 141 139 123 121 120 111 105 103 94 92 86 76 74 72 67 65 60 48 44 42 26 24 20 10 0 134 1 134 19 15
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(125,0,o),
(167,0,o),
(211,1,cs),
(254,2,o),
(296,2,o),
(337,2,cs),
(378,2,o),
(417,2,o),
(456,1,cs),
(494,0,o),
(533,0,o),
(574,0,cs),
(601,0,o),
(613,0,o),
(616,33,cs),
(627,142,o),
(632,292,o),
(632,282,cs),
(632,302,o),
(621,315,o),
(602,315,cs),
(585,315,o),
(567,306,o),
(566,278,cs),
(561,186,o),
(555,129,o),
(553,103,cs),
(550,69,o),
(531,66,o),
(510,66,cs),
(211,66,l),
(211,386,l),
(250,387,o),
(271,388,o),
(310,388,cs),
(325,388,o),
(338,388,o),
(348,388,cs),
(358,387,o),
(367,387,o),
(374,387,cs),
(413,387,o),
(422,334,o),
(422,306,cs),
(422,289,o),
(428,277,o),
(453,277,cs),
(470,277,o),
(484,281,o),
(484,304,cs),
(484,323,o),
(484,342,o),
(483,362,cs),
(482,381,o),
(482,401,o),
(482,420,cs),
(482,439,o),
(482,459,o),
(483,478,cs),
(484,497,o),
(484,516,o),
(484,535,cs),
(484,558,o),
(471,566,o),
(452,566,cs),
(428,566,o),
(420,547,o),
(420,532,cs),
(420,510,o),
(419,455,o),
(403,455,cs),
(404,455,o),
(353,452,o),
(310,452,cs),
(291,452,o),
(274,452,o),
(260,453,cs),
(246,454,o),
(230,454,o),
(211,455,c),
(211,755,l),
(484,755,ls),
(499,755,o),
(521,754,o),
(521,727,cs),
(521,640,ls),
(521,621,o),
(528,600,o),
(557,600,cs),
(580,600,o),
(588,614,o),
(588,646,cs),
(588,785,ls),
(588,813,o),
(579,821,o),
(560,821,cs),
(480,821,o),
(396,819,o),
(333,819,cs),
(279,819,o),
(185,821,o),
(82,821,cs),
(62,821,o),
(41,818,o),
(41,794,cs),
(41,777,o),
(58,769,o),
(81,769,cs),
(96,769,o),
(134,769,o),
(134,730,cs),
(134,618,o),
(140,561,o),
(140,425,cs),
(140,345,o),
(139,279,o),
(139,233,cs),
(139,186,o),
(138,136,o),
(138,84,cs),
(138,56,o),
(116,48,o),
(77,48,cs),
(50,48,o),
(38,42,o),
(38,21,cs),
(38,2,o),
(61,0,o),
(84,0,cs)
);
},
{
closed = 1;
nodes = (
(199,860,o),
(226,885,o),
(266,885,cs),
(305,885,o),
(347,861,o),
(403,861,cs),
(459,861,o),
(492,883,o),
(505,906,cs),
(508,912,o),
(510,918,o),
(510,925,cs),
(510,941,o),
(499,953,o),
(492,953,cs),
(489,953,o),
(485,952,o),
(482,951,cs),
(478,949,o),
(471,945,o),
(462,940,cs),
(439,929,o),
(419,923,o),
(402,923,cs),
(363,923,o),
(301,951,o),
(265,951,cs),
(240,951,o),
(218,945,o),
(197,933,cs),
(187,927,o),
(180,922,o),
(176,917,cs),
(172,912,o),
(169,908,o),
(168,905,cs),
(166,900,o),
(165,894,o),
(165,888,cs),
(165,873,o),
(171,860,o),
(182,860,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 88 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 18 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 14 1 12 0 16 15 12 16 91 0 13 17 1 15 4 13 15 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 10 10 7 83 0 7 7 15 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 86 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 18 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 14 1 12 0 16 15 12 16 91 0 13 17 1 15 4 13 15 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 86 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 18 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 14 1 12 0 16 15 12 16 91 0 13 17 1 15 4 13 15 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 14 67 0 11 11 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
2 1 169 167 164 162 159 157 151 149 146 144 141 139 123 121 120 113 107 105 95 93 87 78 77 75 68 66 61 49 45 42 25 23 19 11 1 134 2 134 19 26
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(148,1,o),
(229,2,o),
(310,2,cs),
(351,2,o),
(390,2,o),
(429,1,cs),
(467,0,o),
(506,0,o),
(547,0,cs),
(574,0,o),
(586,0,o),
(589,33,cs),
(600,139,o),
(605,285,o),
(605,277,cs),
(605,293,o),
(605,310,o),
(586,310,cs),
(583,310,o),
(579,307,o),
(576,302,cs),
(572,296,o),
(570,286,o),
(569,273,cs),
(564,166,o),
(558,100,o),
(556,73,cs),
(553,39,o),
(534,36,o),
(513,36,cs),
(184,36,l),
(184,401,l),
(223,402,o),
(259,403,o),
(298,403,cs),
(317,403,o),
(333,403,o),
(345,403,cs),
(357,402,o),
(368,402,o),
(377,402,cs),
(417,402,o),
(425,346,o),
(425,309,cs),
(425,292,o),
(433,280,o),
(442,280,cs),
(445,280,o),
(448,282,o),
(452,285,cs),
(455,288,o),
(457,296,o),
(457,307,cs),
(457,326,o),
(457,344,o),
(456,363,cs),
(455,382,o),
(455,401,o),
(455,420,cs),
(455,439,o),
(455,458,o),
(456,477,cs),
(457,495,o),
(457,514,o),
(457,533,cs),
(457,548,o),
(456,560,o),
(440,560,cs),
(426,560,o),
(423,541,o),
(423,530,cs),
(423,471,o),
(417,440,o),
(406,440,cs),
(407,440,o),
(347,437,o),
(298,437,cs),
(279,437,o),
(260,437,o),
(241,438,cs),
(222,439,o),
(203,439,o),
(184,440,c),
(184,785,l),
(487,785,ls),
(500,785,o),
(524,782,o),
(524,757,cs),
(524,645,ls),
(524,626,o),
(524,605,o),
(544,605,cs),
(559,605,o),
(561,626,o),
(561,651,cs),
(561,785,ls),
(561,813,o),
(552,821,o),
(533,821,cs),
(453,821,o),
(369,819,o),
(306,819,cs),
(254,819,o),
(164,821,o),
(65,821,cs),
(45,821,o),
(24,819,o),
(24,804,cs),
(24,789,o),
(41,789,o),
(64,789,cs),
(93,789,o),
(137,788,o),
(137,750,cs),
(137,633,o),
(143,568,o),
(143,425,cs),
(143,340,o),
(142,270,o),
(142,222,cs),
(142,173,o),
(141,120,o),
(141,64,cs),
(141,50,o),
(135,41,o),
(124,36,cs),
(113,31,o),
(91,28,o),
(60,28,cs),
(47,28,o),
(37,27,o),
(31,25,cs),
(24,23,o),
(21,18,o),
(21,11,cs),
(21,0,o),
(47,0,o),
(67,0,cs)
);
},
{
closed = 1;
nodes = (
(176,888,o),
(203,913,o),
(244,913,cs),
(283,913,o),
(325,889,o),
(381,889,cs),
(434,889,o),
(483,909,o),
(483,934,cs),
(483,943,o),
(477,951,o),
(470,951,cs),
(467,951,o),
(463,950,o),
(460,949,cs),
(456,947,o),
(449,943,o),
(440,938,cs),
(417,927,o),
(397,921,o),
(380,921,cs),
(341,921,o),
(279,949,o),
(243,949,cs),
(218,949,o),
(196,943,o),
(175,931,cs),
(156,920,o),
(146,910,o),
(146,903,cs),
(146,896,o),
(153,888,o),
(160,888,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
0 5 3 8 3 5 8 104 18 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 14 1 12 0 16 15 12 16 91 0 13 17 1 15 4 13 15 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 10 10 7 83 0 7 7 15 67 0 11 11 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 5 3 8 3 5 8 104 18 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 14 1 12 0 16 15 12 16 91 0 13 17 1 15 4 13 15 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 11 11 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 80 values pushed */
0 5 3 8 3 5 8 104 18 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 14 1 12 0 16 15 12 16 91 0 13 17 1 15 4 13 15 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 14 67 0 11 11 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
1 0 167 165 162 160 157 155 149 147 144 142 139 137 122 120 119 112 106 104 94 92 84 75 74 72 67 65 60 48 44 41 24 22 18 10 0 133 1 133 19 15
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = Etilde;
unicode = 7868;
},
{
glyphname = Schwa;
kernRight = O;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(506,-11,o),
(641,170,o),
(641,425,cs),
(641,660,o),
(541,837,o),
(315,837,cs),
(157,837,o),
(27,716,o),
(27,559,cs),
(27,540,o),
(44,512,o),
(76,512,cs),
(111,512,o),
(125,540,o),
(125,559,cs),
(125,662,o),
(230,756,o),
(318,756,cs),
(456,756,o),
(545,584,o),
(545,439,cs),
(545,426,o),
(543,408,o),
(542,392,c),
(465,392,o),
(359,390,o),
(286,390,cs),
(249,390,o),
(213,390,o),
(178,390,cs),
(143,390,o),
(113,389,o),
(90,388,cs),
(55,387,o),
(41,339,o),
(41,290,cs),
(41,192,o),
(113,-11,o),
(311,-11,cs)
);
},
{
closed = 1;
nodes = (
(221,70,o),
(141,196,o),
(141,270,cs),
(141,290,o),
(145,303,o),
(165,303,cs),
(532,310,l),
(532,310,l),
(511,208,o),
(467,70,o),
(324,70,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 2 6 2 3 6 104 8 1 6 7 1 0 1 6 0 91 0 2 2 4 83 0 4 4 20 67 0 1 1 5 83 0 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 2 6 2 3 6 104 0 4 0 2 3 4 2 91 8 1 6 7 1 0 1 6 0 91 0 1 1 5 83 0 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
14 14 1 0 14 63 14 55 49 47 39 37 31 29 23 21 9 7 0 13 1 13 9 15
CALL[ ]	/* CallFunction */";
};
width = 677;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(486,-11,o),
(621,169,o),
(621,425,cs),
(621,659,o),
(521,837,o),
(308,837,cs),
(163,837,o),
(28,718,o),
(28,559,cs),
(28,540,o),
(41,518,o),
(66,518,cs),
(93,518,o),
(105,540,o),
(105,559,cs),
(105,671,o),
(212,774,o),
(311,774,cs),
(461,774,o),
(546,591,o),
(546,439,cs),
(546,423,o),
(544,402,o),
(543,383,c),
(466,383,o),
(360,381,o),
(287,381,cs),
(250,381,o),
(214,381,o),
(179,381,cs),
(144,381,o),
(114,380,o),
(91,379,cs),
(56,378,o),
(42,334,o),
(42,290,cs),
(42,248,o),
(56,173,o),
(101,105,cs),
(144,39,o),
(212,-11,o),
(304,-11,cs)
);
},
{
closed = 1;
nodes = (
(196,52,o),
(121,196,o),
(121,279,cs),
(121,299,o),
(125,312,o),
(145,312,cs),
(535,319,l),
(535,319,l),
(514,204,o),
(453,52,o),
(313,52,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 2 6 2 3 6 104 8 1 6 7 1 0 1 6 0 91 0 2 2 4 83 0 4 4 20 67 0 1 1 5 83 0 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 2 6 2 3 6 104 0 4 0 2 3 4 2 91 8 1 6 7 1 0 1 6 0 91 0 1 1 5 83 0 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
14 14 1 0 14 65 14 57 49 47 39 37 31 29 23 21 9 7 0 13 1 13 9 15
CALL[ ]	/* CallFunction */";
};
width = 659;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(377,-11,o),
(451,34,o),
(505,111,cs),
(559,187,o),
(592,297,o),
(592,425,cs),
(592,660,o),
(492,837,o),
(298,837,cs),
(172,837,o),
(29,720,o),
(29,559,cs),
(29,538,o),
(37,528,o),
(52,528,cs),
(67,528,o),
(76,540,o),
(76,559,cs),
(76,687,o),
(188,804,o),
(301,804,cs),
(468,804,o),
(547,603,o),
(547,439,cs),
(547,418,o),
(545,392,o),
(544,368,c),
(467,368,o),
(361,366,o),
(288,366,cs),
(251,366,o),
(215,366,o),
(180,366,cs),
(145,366,o),
(115,365,o),
(92,364,cs),
(57,363,o),
(43,326,o),
(43,290,cs),
(43,242,o),
(62,170,o),
(102,105,cs),
(142,39,o),
(209,-11,o),
(294,-11,cs)
);
},
{
closed = 1;
nodes = (
(160,22,o),
(92,195,o),
(92,294,cs),
(92,314,o),
(97,327,o),
(116,327,cs),
(539,334,l),
(518,197,o),
(438,22,o),
(298,22,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 2 6 2 3 6 104 8 1 6 7 1 0 1 6 0 91 0 2 2 4 83 0 4 4 20 67 0 1 1 5 83 0 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 2 6 2 3 6 104 0 4 0 2 3 4 2 91 8 1 6 7 1 0 1 6 0 91 0 1 1 5 83 0 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
14 14 1 0 14 64 14 56 48 46 38 36 31 29 23 21 9 7 0 13 1 13 9 15
CALL[ ]	/* CallFunction */";
};
width = 634;
}
);
note = Schwa;
unicode = 399;
},
{
glyphname = F;
kernLeft = B;
kernRight = F;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(359,0,ls),
(380,0,o),
(406,6,o),
(406,41,cs),
(406,72,o),
(381,78,o),
(353,78,cs),
(232,78,l),
(232,76,o),
(229,139,o),
(229,205,cs),
(229,253,o),
(230,314,o),
(230,377,c),
(264,379,o),
(285,380,o),
(319,380,cs),
(338,380,o),
(359,379,o),
(378,376,cs),
(387,375,o),
(396,369,o),
(405,360,cs),
(414,351,o),
(419,332,o),
(420,305,cs),
(421,280,o),
(439,266,o),
(462,266,cs),
(489,266,o),
(503,276,o),
(503,304,cs),
(503,320,o),
(503,338,o),
(502,359,cs),
(501,380,o),
(501,398,o),
(501,415,cs),
(501,432,o),
(501,449,o),
(502,467,cs),
(503,485,o),
(503,502,o),
(503,519,cs),
(503,547,o),
(498,566,o),
(462,566,cs),
(423,566,o),
(418,544,o),
(418,513,cs),
(418,501,o),
(418,464,o),
(404,464,cs),
(390,464,o),
(356,462,o),
(316,462,cs),
(278,462,o),
(269,461,o),
(230,464,c),
(230,737,l),
(480,737,ls),
(507,737,o),
(519,732,o),
(519,696,cs),
(519,655,ls),
(519,628,o),
(529,597,o),
(561,597,cs),
(596,597,o),
(607,614,o),
(607,655,cs),
(607,773,ls),
(607,808,o),
(601,821,o),
(573,821,cs),
(538,821,o),
(503,821,o),
(468,820,cs),
(433,819,o),
(398,819,o),
(363,819,cs),
(320,819,o),
(274,819,o),
(224,820,cs),
(173,821,o),
(127,821,o),
(84,821,cs),
(51,821,o),
(36,814,o),
(36,787,cs),
(36,762,o),
(50,752,o),
(77,751,cs),
(116,750,o),
(130,735,o),
(133,708,cs),
(138,633,o),
(140,575,o),
(140,489,cs),
(140,360,o),
(138,248,o),
(135,119,cs),
(134,80,o),
(113,73,o),
(78,70,cs),
(55,67,o),
(40,58,o),
(40,31,cs),
(40,8,o),
(54,0,o),
(83,0,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
85 1 6 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 2 0 5 0 2 5 104 0 5 0 6 8 5 6 91 3 1 0 0 1 83 0 1 1 12 67 0 7 7 4 83 0 4 4 23 67 0 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 0 1 3 3 0 96 0 2 3 5 3 2 5 104 0 5 0 6 8 5 6 91 0 3 3 1 84 0 1 1 12 67 0 7 7 4 83 0 4 4 23 67 0 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 0 1 3 3 0 96 0 2 3 5 3 2 5 104 0 4 0 7 6 4 7 91 0 5 0 6 8 5 6 91 0 3 3 1 84 0 1 1 12 67 0 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 0 1 3 3 0 96 0 2 3 5 3 2 5 104 0 4 0 7 6 4 7 91 0 5 0 6 8 5 6 91 0 3 3 1 84 0 1 1 14 67 0 8 8 9 83 0 9 9 13 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
106 103 43 102 42 38 177 39 37 132 42 10 24
CALL[ ]	/* CallFunction */";
};
width = 611;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(346,0,ls),
(361,0,o),
(376,5,o),
(376,26,cs),
(376,59,o),
(358,60,o),
(340,60,cs),
(213,60,l),
(213,57,o),
(210,127,o),
(210,205,cs),
(210,257,o),
(211,320,o),
(211,386,c),
(250,389,o),
(272,389,o),
(311,389,cs),
(334,389,o),
(355,388,o),
(378,387,cs),
(397,387,o),
(422,358,o),
(422,299,cs),
(422,280,o),
(435,271,o),
(454,271,cs),
(474,271,o),
(484,281,o),
(484,309,cs),
(484,325,o),
(484,343,o),
(483,362,cs),
(482,381,o),
(482,398,o),
(482,415,cs),
(482,432,o),
(482,449,o),
(483,466,cs),
(484,483,o),
(484,500,o),
(484,517,cs),
(484,538,o),
(483,564,o),
(454,564,cs),
(421,564,o),
(420,546,o),
(420,517,cs),
(420,518,o),
(421,455,o),
(406,455,cs),
(391,455,o),
(353,453,o),
(308,453,cs),
(289,453,o),
(273,453,o),
(260,453,cs),
(247,453,o),
(230,454,o),
(211,455,c),
(211,755,l),
(482,755,ls),
(509,755,o),
(521,751,o),
(521,714,cs),
(521,647,ls),
(521,623,o),
(526,600,o),
(554,600,cs),
(581,600,o),
(588,614,o),
(588,647,cs),
(588,773,ls),
(588,808,o),
(582,821,o),
(554,821,cs),
(519,821,o),
(484,821,o),
(449,820,cs),
(414,819,o),
(379,819,o),
(344,819,cs),
(301,819,o),
(257,819,o),
(212,820,cs),
(166,821,o),
(122,821,o),
(79,821,cs),
(50,821,o),
(41,811,o),
(41,796,cs),
(41,785,o),
(47,771,o),
(63,771,cs),
(111,771,o),
(135,758,o),
(135,732,cs),
(135,643,o),
(141,585,o),
(141,489,cs),
(141,356,o),
(140,225,o),
(137,92,cs),
(137,50,o),
(102,48,o),
(66,48,cs),
(49,48,o),
(38,44,o),
(38,23,cs),
(38,0,o),
(64,0,o),
(81,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 0 1 3 3 0 96 0 2 3 5 3 2 5 104 0 10 8 9 8 10 96 0 5 0 6 8 5 6 91 0 3 3 1 84 0 1 1 12 67 0 7 7 4 83 0 4 4 15 67 0 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 0 1 3 3 0 96 0 2 3 5 3 2 5 104 0 10 8 9 8 10 96 0 4 0 7 6 4 7 91 0 5 0 6 8 5 6 91 0 3 3 1 84 0 1 1 12 67 0 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
0 0 1 3 3 0 96 0 2 3 5 3 2 5 104 0 10 8 9 8 10 96 0 4 0 7 6 4 7 91 0 5 0 6 8 5 6 91 0 3 3 1 84 0 1 1 14 67 0 8 8 9 83 0 9 9 13 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
109 107 103 100 42 118 42 40 145 37 37 132 41 11 24
CALL[ ]	/* CallFunction */";
};
width = 595;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(309,0,ls),
(322,0,o),
(329,4,o),
(329,11,cs),
(329,24,o),
(318,30,o),
(303,30,cs),
(186,30,l),
(186,27,o),
(183,112,o),
(183,205,cs),
(183,267,o),
(184,339,o),
(184,401,c),
(222,403,o),
(260,404,o),
(299,404,cs),
(326,404,o),
(354,403,o),
(381,402,cs),
(402,402,o),
(425,376,o),
(425,307,cs),
(426,288,o),
(432,279,o),
(442,279,cs),
(448,279,o),
(452,282,o),
(454,288,cs),
(456,293,o),
(457,303,o),
(457,317,cs),
(457,333,o),
(457,349,o),
(456,366,cs),
(455,382,o),
(455,398,o),
(455,415,cs),
(455,432,o),
(455,448,o),
(456,464,cs),
(457,480,o),
(457,496,o),
(457,513,cs),
(457,534,o),
(457,560,o),
(442,560,cs),
(423,560,o),
(423,540,o),
(423,513,cs),
(423,465,o),
(418,440,o),
(409,440,cs),
(392,440,o),
(347,438,o),
(296,438,cs),
(277,438,o),
(259,438,o),
(241,438,cs),
(222,438,o),
(203,439,o),
(184,440,c),
(184,785,l),
(485,785,ls),
(512,785,o),
(524,783,o),
(524,744,cs),
(524,651,ls),
(524,627,o),
(525,605,o),
(544,605,cs),
(560,605,o),
(561,636,o),
(561,651,cs),
(561,773,ls),
(561,808,o),
(555,821,o),
(527,821,cs),
(492,821,o),
(457,821,o),
(422,820,cs),
(387,819,o),
(352,819,o),
(317,819,cs),
(274,819,o),
(232,819,o),
(190,820,cs),
(147,821,o),
(105,821,o),
(62,821,cs),
(43,821,o),
(24,821,o),
(24,806,cs),
(24,803,o),
(25,799,o),
(28,796,cs),
(31,793,o),
(37,791,o),
(46,791,cs),
(82,791,o),
(106,788,o),
(119,782,cs),
(132,775,o),
(138,765,o),
(138,752,cs),
(138,652,o),
(144,592,o),
(144,489,cs),
(144,349,o),
(143,212,o),
(140,72,cs),
(139,31,o),
(106,28,o),
(49,28,cs),
(30,28,o),
(21,23,o),
(21,13,cs),
(21,0,o),
(47,0,o),
(64,0,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
71 1 6 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 0 1 3 3 0 96 0 2 3 5 3 2 5 104 0 5 0 6 8 5 6 91 0 3 3 1 84 0 1 1 12 67 0 7 7 4 83 0 4 4 15 67 10 1 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 0 1 3 3 0 96 0 2 3 5 3 2 5 104 0 4 0 7 6 4 7 91 0 5 0 6 8 5 6 91 0 3 3 1 84 0 1 1 12 67 10 1 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 0 1 3 3 0 96 0 2 3 5 3 2 5 104 0 4 0 7 6 4 7 91 0 5 0 6 8 5 6 91 0 3 3 1 84 0 1 1 14 67 10 1 8 8 9 83 0 9 9 13 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
104 102 99 96 42 101 42 38 145 37 39 132 42 11 24
CALL[ ]	/* CallFunction */";
};
width = 572;
}
);
note = F;
unicode = 70;
},
{
glyphname = G;
kernLeft = C;
kernRight = G;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(414,-14,o),
(500,17,o),
(543,98,c),
(543,93,o),
(543,84,o),
(542,71,cs),
(541,58,o),
(541,45,o),
(541,32,cs),
(541,3,o),
(558,-4,o),
(582,-4,cs),
(605,-4,o),
(623,11,o),
(623,36,cs),
(623,49,o),
(623,66,o),
(622,85,cs),
(621,104,o),
(621,131,o),
(621,164,cs),
(621,188,o),
(621,209,o),
(622,228,cs),
(623,247,o),
(623,262,o),
(623,273,cs),
(623,316,o),
(585,330,o),
(542,330,cs),
(457,330,o),
(435,322,o),
(348,322,cs),
(321,322,o),
(297,310,o),
(297,273,cs),
(297,256,o),
(314,238,o),
(342,238,cs),
(414,238,o),
(443,245,o),
(509,245,cs),
(528,245,o),
(534,242,o),
(534,225,cs),
(534,161,o),
(444,67,o),
(344,67,cs),
(188,67,o),
(130,238,o),
(130,404,cs),
(130,501,o),
(154,590,o),
(192,655,cs),
(230,719,o),
(281,759,o),
(338,759,cs),
(470,759,o),
(522,658,o),
(522,521,cs),
(522,481,o),
(545,468,o),
(568,468,cs),
(599,468,o),
(613,492,o),
(613,524,cs),
(613,541,o),
(613,562,o),
(612,586,cs),
(611,610,o),
(611,631,o),
(611,648,cs),
(611,703,o),
(615,732,o),
(615,787,cs),
(615,803,o),
(603,826,o),
(568,826,cs),
(540,826,o),
(530,814,o),
(530,795,cs),
(535,709,l),
(497,806,o),
(420,838,o),
(347,838,cs),
(255,838,o),
(176,788,o),
(121,709,cs),
(66,629,o),
(34,520,o),
(34,404,cs),
(34,92,o),
(194,-14,o),
(334,-14,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
54 1 7 8 34 1 9 0 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
54 1 7 8 34 1 9 1 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 2 1 10 2 0 9 2 0 91 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 67 0 9 9 3 83 4 1 3 3 16 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 1 10 2 0 9 2 0 91 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 9 9 3 83 4 1 3 3 16 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 2 1 10 2 0 9 2 0 91 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 16 67 0 9 9 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 9 0 1 96 0 5 0 8 7 5 8 91 0 2 10 1 0 1 2 0 91 0 7 7 6 83 0 6 6 14 67 0 3 3 16 67 0 9 9 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
2 0 91 89 81 79 73 71 59 57 50 48 40 38 29 27 17 10 6 3 0 97 2 97 11 15
CALL[ ]	/* CallFunction */";
};
width = 671;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(414,-14,o),
(497,18,o),
(544,103,c),
(544,98,o),
(544,88,o),
(543,75,cs),
(542,62,o),
(542,49,o),
(542,36,cs),
(542,13,o),
(555,2,o),
(574,2,cs),
(590,2,o),
(605,14,o),
(605,35,cs),
(605,48,o),
(605,65,o),
(604,86,cs),
(603,106,o),
(603,132,o),
(603,164,cs),
(603,188,o),
(603,209,o),
(604,228,cs),
(605,247,o),
(605,262,o),
(605,273,cs),
(605,308,o),
(577,321,o),
(545,321,cs),
(509,320,o),
(471,318,o),
(432,315,cs),
(392,312,o),
(351,310,o),
(310,310,cs),
(289,310,o),
(259,302,o),
(259,275,cs),
(259,260,o),
(273,247,o),
(301,247,cs),
(337,247,o),
(373,248,o),
(409,251,cs),
(444,253,o),
(479,254,o),
(512,254,cs),
(537,254,o),
(537,248,o),
(537,225,cs),
(537,130,o),
(445,49,o),
(345,49,cs),
(175,49,o),
(112,229,o),
(112,404,cs),
(112,507,o),
(138,600,o),
(180,668,cs),
(222,735,o),
(278,777,o),
(341,777,cs),
(474,777,o),
(525,664,o),
(525,517,cs),
(525,485,o),
(538,464,o),
(561,464,cs),
(586,464,o),
(595,485,o),
(595,520,cs),
(595,537,o),
(595,559,o),
(594,584,cs),
(593,609,o),
(593,631,o),
(593,648,cs),
(593,703,o),
(597,736,o),
(597,788,cs),
(597,804,o),
(584,821,o),
(560,821,cs),
(540,821,o),
(528,806,o),
(528,789,cs),
(533,702,l),
(496,799,o),
(422,838,o),
(350,838,cs),
(258,838,o),
(179,788,o),
(124,709,cs),
(69,629,o),
(37,520,o),
(37,404,cs),
(37,91,o),
(195,-14,o),
(336,-14,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
48 1 7 8 30 1 9 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
2 1 1 10 1 0 9 1 0 91 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 7 1 1 2 96 0 1 10 1 0 9 1 0 92 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 2 7 1 1 2 96 0 5 0 8 7 5 8 91 0 1 10 1 0 9 1 0 92 0 7 7 6 83 0 6 6 14 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
4 0 85 83 75 73 67 65 53 51 46 44 36 34 25 23 13 11 10 8 0 91 4 91 11 15
CALL[ ]	/* CallFunction */";
};
width = 656;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(416,-14,o),
(504,20,o),
(548,103,c),
(548,98,o),
(548,89,o),
(547,74,cs),
(546,59,o),
(546,45,o),
(546,34,cs),
(546,19,o),
(552,12,o),
(563,12,cs),
(570,12,o),
(579,18,o),
(579,33,cs),
(579,45,o),
(579,62,o),
(578,85,cs),
(577,108,o),
(577,134,o),
(577,164,cs),
(577,188,o),
(577,209,o),
(578,228,cs),
(579,247,o),
(579,262,o),
(579,273,cs),
(579,297,o),
(565,306,o),
(549,306,cs),
(513,305,o),
(477,303,o),
(441,301,cs),
(404,299,o),
(365,297,o),
(324,295,cs),
(301,294,o),
(273,291,o),
(273,278,cs),
(273,274,o),
(276,270,o),
(282,267,cs),
(287,264,o),
(297,262,o),
(311,262,cs),
(347,262,o),
(382,263,o),
(416,266,cs),
(449,268,o),
(483,269,o),
(516,269,cs),
(541,269,o),
(541,260,o),
(541,225,cs),
(541,82,o),
(448,19,o),
(347,19,cs),
(156,19,o),
(86,212,o),
(86,404,cs),
(86,515,o),
(115,616,o),
(163,689,cs),
(210,761,o),
(274,807,o),
(345,807,cs),
(478,807,o),
(529,692,o),
(529,527,cs),
(529,502,o),
(531,474,o),
(551,474,cs),
(560,474,o),
(566,479,o),
(567,488,cs),
(568,497,o),
(569,511,o),
(569,530,cs),
(569,547,o),
(569,567,o),
(568,589,cs),
(567,611,o),
(567,631,o),
(567,648,cs),
(567,675,o),
(568,698,o),
(569,719,cs),
(570,739,o),
(571,763,o),
(571,790,cs),
(571,806,o),
(560,813,o),
(549,813,cs),
(540,813,o),
(532,804,o),
(532,791,cs),
(537,702,l),
(500,799,o),
(426,838,o),
(354,838,cs),
(262,838,o),
(183,788,o),
(128,709,cs),
(73,629,o),
(41,520,o),
(41,404,cs),
(41,249,o),
(80,145,o),
(137,79,cs),
(193,13,o),
(268,-14,o),
(339,-14,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
47 1 6 7 29 1 8 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 9 1 0 8 1 0 91 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 14 67 0 2 2 13 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 2 8 3 8 2 3 104 0 1 9 1 0 8 1 0 91 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 2 8 3 8 2 3 104 0 4 0 7 6 4 7 91 0 1 9 1 0 8 1 0 91 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
4 0 84 82 74 72 64 62 52 50 45 43 35 33 25 23 13 8 0 90 4 90 10 15
CALL[ ]	/* CallFunction */";
};
width = 635;
}
);
note = G;
unicode = 71;
},
{
glyphname = Gbreve;
kernLeft = C;
kernRight = G;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(414,-14,o),
(500,17,o),
(543,98,c),
(543,93,o),
(543,84,o),
(542,71,cs),
(541,58,o),
(541,45,o),
(541,32,cs),
(541,3,o),
(558,-4,o),
(582,-4,cs),
(605,-4,o),
(623,11,o),
(623,36,cs),
(623,49,o),
(623,66,o),
(622,85,cs),
(621,104,o),
(621,131,o),
(621,164,cs),
(621,188,o),
(621,209,o),
(622,228,cs),
(623,247,o),
(623,262,o),
(623,273,cs),
(623,316,o),
(585,330,o),
(542,330,cs),
(457,330,o),
(435,322,o),
(348,322,cs),
(321,322,o),
(297,310,o),
(297,273,cs),
(297,256,o),
(314,238,o),
(342,238,cs),
(414,238,o),
(443,245,o),
(509,245,cs),
(528,245,o),
(534,242,o),
(534,225,cs),
(534,161,o),
(444,67,o),
(344,67,cs),
(188,67,o),
(130,238,o),
(130,404,cs),
(130,501,o),
(154,590,o),
(192,655,cs),
(230,719,o),
(281,759,o),
(338,759,cs),
(470,759,o),
(522,658,o),
(522,521,cs),
(522,481,o),
(545,468,o),
(568,468,cs),
(599,468,o),
(613,492,o),
(613,524,cs),
(613,541,o),
(613,562,o),
(612,586,cs),
(611,610,o),
(611,631,o),
(611,648,cs),
(611,703,o),
(615,732,o),
(615,787,cs),
(615,803,o),
(603,826,o),
(568,826,cs),
(540,826,o),
(530,814,o),
(530,795,cs),
(535,709,l),
(497,806,o),
(420,838,o),
(347,838,cs),
(255,838,o),
(176,788,o),
(121,709,cs),
(66,629,o),
(34,520,o),
(34,404,cs),
(34,92,o),
(194,-14,o),
(334,-14,cs)
);
},
{
closed = 1;
nodes = (
(413,862,o),
(482,889,o),
(482,941,cs),
(482,968,o),
(464,971,o),
(444,971,cs),
(427,971,o),
(412,957,o),
(412,942,cs),
(412,937,o),
(408,932,o),
(399,927,cs),
(390,922,o),
(375,919,o),
(356,919,cs),
(326,919,o),
(297,927,o),
(297,942,cs),
(297,965,o),
(284,971,o),
(261,971,cs),
(238,971,o),
(229,958,o),
(229,941,cs),
(229,898,o),
(274,862,o),
(361,862,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
54 1 7 8 34 1 9 0 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
54 1 7 8 34 1 9 1 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
13 1 11 12 11 106 0 12 0 10 5 12 10 91 0 2 1 14 2 0 9 2 0 92 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 67 0 9 9 3 83 4 1 3 3 16 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
13 1 11 12 11 106 0 12 0 10 5 12 10 91 0 2 1 14 2 0 9 2 0 92 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 9 9 3 83 4 1 3 3 16 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
13 1 11 12 11 106 0 12 0 10 5 12 10 91 0 2 1 14 2 0 9 2 0 92 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 16 67 0 9 9 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
13 1 11 12 11 106 0 1 0 9 0 1 96 0 12 0 10 5 12 10 91 0 5 0 8 7 5 8 91 0 2 14 1 0 1 2 0 92 0 7 7 6 83 0 6 6 14 67 0 3 3 16 67 0 9 9 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
2 0 124 122 118 116 110 108 104 102 91 89 81 79 73 71 59 57 50 48 40 38 29 27 17 10 6 3 0 97 2 97 15 15
CALL[ ]	/* CallFunction */";
};
width = 671;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(414,-14,o),
(497,18,o),
(544,103,c),
(544,98,o),
(544,88,o),
(543,75,cs),
(542,62,o),
(542,49,o),
(542,36,cs),
(542,13,o),
(555,2,o),
(574,2,cs),
(590,2,o),
(605,14,o),
(605,35,cs),
(605,48,o),
(605,65,o),
(604,86,cs),
(603,106,o),
(603,132,o),
(603,164,cs),
(603,188,o),
(603,209,o),
(604,228,cs),
(605,247,o),
(605,262,o),
(605,273,cs),
(605,308,o),
(577,321,o),
(545,321,cs),
(509,320,o),
(471,318,o),
(432,315,cs),
(392,312,o),
(351,310,o),
(310,310,cs),
(289,310,o),
(259,302,o),
(259,275,cs),
(259,260,o),
(273,247,o),
(301,247,cs),
(337,247,o),
(373,248,o),
(409,251,cs),
(444,253,o),
(479,254,o),
(512,254,cs),
(537,254,o),
(537,248,o),
(537,225,cs),
(537,130,o),
(445,49,o),
(345,49,cs),
(175,49,o),
(112,229,o),
(112,404,cs),
(112,507,o),
(138,600,o),
(180,668,cs),
(222,735,o),
(278,777,o),
(341,777,cs),
(474,777,o),
(525,664,o),
(525,517,cs),
(525,485,o),
(538,464,o),
(561,464,cs),
(586,464,o),
(595,485,o),
(595,520,cs),
(595,537,o),
(595,559,o),
(594,584,cs),
(593,609,o),
(593,631,o),
(593,648,cs),
(593,703,o),
(597,736,o),
(597,788,cs),
(597,804,o),
(584,821,o),
(560,821,cs),
(540,821,o),
(528,806,o),
(528,789,cs),
(533,702,l),
(496,799,o),
(422,838,o),
(350,838,cs),
(258,838,o),
(179,788,o),
(124,709,cs),
(69,629,o),
(37,520,o),
(37,404,cs),
(37,91,o),
(195,-14,o),
(336,-14,cs)
);
},
{
closed = 1;
nodes = (
(406,865,o),
(472,892,o),
(472,944,cs),
(472,971,o),
(455,972,o),
(442,972,cs),
(427,972,o),
(416,960,o),
(416,945,cs),
(416,928,o),
(391,910,o),
(352,910,cs),
(322,910,o),
(287,919,o),
(287,945,cs),
(287,965,o),
(278,972,o),
(259,972,cs),
(242,972,o),
(233,963,o),
(233,944,cs),
(233,903,o),
(279,865,o),
(355,865,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
49 1 7 8 31 1 9 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
13 1 11 12 11 106 0 12 0 10 5 12 10 91 2 1 1 14 1 0 9 1 0 92 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
13 1 11 12 11 106 0 2 7 1 1 2 96 0 12 0 10 5 12 10 91 0 1 14 1 0 9 1 0 92 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
13 1 11 12 11 106 0 2 7 1 1 2 96 0 12 0 10 5 12 10 91 0 5 0 8 7 5 8 91 0 1 14 1 0 9 1 0 92 0 7 7 6 83 0 6 6 14 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
5 1 118 116 112 110 104 102 99 97 86 84 76 74 68 66 54 52 47 45 37 35 26 24 14 12 11 9 1 92 5 92 15 26
CALL[ ]	/* CallFunction */";
};
width = 656;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(416,-14,o),
(504,20,o),
(548,103,c),
(548,98,o),
(548,89,o),
(547,74,cs),
(546,59,o),
(546,45,o),
(546,34,cs),
(546,19,o),
(552,12,o),
(563,12,cs),
(570,12,o),
(579,18,o),
(579,33,cs),
(579,45,o),
(579,62,o),
(578,85,cs),
(577,108,o),
(577,134,o),
(577,164,cs),
(577,188,o),
(577,209,o),
(578,228,cs),
(579,247,o),
(579,262,o),
(579,273,cs),
(579,297,o),
(565,306,o),
(549,306,cs),
(513,305,o),
(477,303,o),
(441,301,cs),
(404,299,o),
(365,297,o),
(324,295,cs),
(301,294,o),
(273,291,o),
(273,278,cs),
(273,274,o),
(276,270,o),
(282,267,cs),
(287,264,o),
(297,262,o),
(311,262,cs),
(347,262,o),
(382,263,o),
(416,266,cs),
(449,268,o),
(483,269,o),
(516,269,cs),
(541,269,o),
(541,260,o),
(541,225,cs),
(541,82,o),
(448,19,o),
(347,19,cs),
(156,19,o),
(86,212,o),
(86,404,cs),
(86,515,o),
(115,616,o),
(163,689,cs),
(210,761,o),
(274,807,o),
(345,807,cs),
(478,807,o),
(529,692,o),
(529,527,cs),
(529,502,o),
(531,474,o),
(551,474,cs),
(560,474,o),
(566,479,o),
(567,488,cs),
(568,497,o),
(569,511,o),
(569,530,cs),
(569,547,o),
(569,567,o),
(568,589,cs),
(567,611,o),
(567,631,o),
(567,648,cs),
(567,675,o),
(568,698,o),
(569,719,cs),
(570,739,o),
(571,763,o),
(571,790,cs),
(571,806,o),
(560,813,o),
(549,813,cs),
(540,813,o),
(532,804,o),
(532,791,cs),
(537,702,l),
(500,799,o),
(426,838,o),
(354,838,cs),
(262,838,o),
(183,788,o),
(128,709,cs),
(73,629,o),
(41,520,o),
(41,404,cs),
(41,249,o),
(80,145,o),
(137,79,cs),
(193,13,o),
(268,-14,o),
(339,-14,cs)
);
},
{
closed = 1;
nodes = (
(402,875,o),
(460,899,o),
(460,948,cs),
(460,969,o),
(452,972,o),
(441,972,cs),
(430,972,o),
(424,964,o),
(424,949,cs),
(424,922,o),
(385,900,o),
(349,900,cs),
(307,900,o),
(275,910,o),
(275,949,cs),
(275,965,o),
(273,972,o),
(258,972,cs),
(247,972,o),
(241,964,o),
(241,948,cs),
(241,908,o),
(289,875,o),
(349,875,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
75 1 10 11 57 1 12 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
3 1 1 2 1 106 0 2 0 0 8 2 0 91 0 5 13 1 4 12 5 4 92 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 14 67 0 6 6 13 67 0 12 12 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
3 1 1 2 1 106 0 6 12 7 12 6 7 104 0 2 0 0 8 2 0 91 0 5 13 1 4 12 5 4 92 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 14 67 0 12 12 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
3 1 1 2 1 106 0 6 12 7 12 6 7 104 0 2 0 0 8 2 0 91 0 8 0 11 10 8 11 91 0 5 13 1 4 12 5 4 92 0 10 10 9 83 0 9 9 14 67 0 12 12 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
32 28 112 110 102 100 92 90 80 78 73 71 63 61 53 51 41 36 28 118 32 118 37 38 35 36 14 19
CALL[ ]	/* CallFunction */";
};
width = 635;
}
);
note = Gbreve;
unicode = 286;
},
{
glyphname = Gcircumflex;
kernLeft = C;
kernRight = G;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(414,-14,o),
(500,17,o),
(543,98,c),
(543,93,o),
(543,84,o),
(542,71,cs),
(541,58,o),
(541,45,o),
(541,32,cs),
(541,3,o),
(558,-4,o),
(582,-4,cs),
(605,-4,o),
(623,11,o),
(623,36,cs),
(623,49,o),
(623,66,o),
(622,85,cs),
(621,104,o),
(621,131,o),
(621,164,cs),
(621,188,o),
(621,209,o),
(622,228,cs),
(623,247,o),
(623,262,o),
(623,273,cs),
(623,316,o),
(585,330,o),
(542,330,cs),
(457,330,o),
(435,322,o),
(348,322,cs),
(321,322,o),
(297,310,o),
(297,273,cs),
(297,256,o),
(314,238,o),
(342,238,cs),
(414,238,o),
(443,245,o),
(509,245,cs),
(528,245,o),
(534,242,o),
(534,225,cs),
(534,161,o),
(444,67,o),
(344,67,cs),
(188,67,o),
(130,238,o),
(130,404,cs),
(130,501,o),
(154,590,o),
(192,655,cs),
(230,719,o),
(281,759,o),
(338,759,cs),
(470,759,o),
(522,658,o),
(522,521,cs),
(522,481,o),
(545,468,o),
(568,468,cs),
(599,468,o),
(613,492,o),
(613,524,cs),
(613,541,o),
(613,562,o),
(612,586,cs),
(611,610,o),
(611,631,o),
(611,648,cs),
(611,703,o),
(615,732,o),
(615,787,cs),
(615,803,o),
(603,826,o),
(568,826,cs),
(540,826,o),
(530,814,o),
(530,795,cs),
(535,709,l),
(497,806,o),
(420,838,o),
(347,838,cs),
(255,838,o),
(176,788,o),
(121,709,cs),
(66,629,o),
(34,520,o),
(34,404,cs),
(34,92,o),
(194,-14,o),
(334,-14,cs)
);
},
{
closed = 1;
nodes = (
(243,830,o),
(309,854,o),
(344,880,c),
(380,853,o),
(446,830,o),
(464,830,cs),
(475,830,o),
(477,842,o),
(477,851,cs),
(477,892,o),
(369,972,o),
(344,972,cs),
(333,972,o),
(298,950,o),
(271,928,cs),
(240,903,o),
(212,871,o),
(212,844,cs),
(212,837,o),
(217,830,o),
(225,830,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
5 1 8 2 80 1 10 11 60 1 12 3 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
5 1 8 2 80 1 10 11 60 1 12 4 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 2 8 8 2 94 1 13 2 0 8 11 8 0 11 104 0 5 4 14 2 3 12 5 3 91 0 11 11 8 83 9 1 8 8 20 67 0 10 10 8 83 9 1 8 8 20 67 0 12 12 6 83 7 1 6 6 16 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 2 8 2 106 1 13 2 0 8 11 8 0 11 104 0 5 4 14 2 3 12 5 3 91 0 11 11 8 83 9 1 8 8 20 67 0 10 10 8 83 9 1 8 8 20 67 0 12 12 6 83 7 1 6 6 16 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 2 8 2 106 1 13 2 0 8 9 8 0 9 104 0 5 4 14 2 3 12 5 3 91 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 12 67 0 12 12 6 83 7 1 6 6 16 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 2 8 2 106 1 13 2 0 8 9 8 0 9 104 0 5 4 14 2 3 12 5 3 91 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 12 67 0 6 6 16 67 0 12 12 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 2 8 2 106 1 13 2 0 8 9 8 0 9 104 0 4 3 12 3 4 96 0 8 0 11 10 8 11 92 0 5 14 1 3 4 5 3 91 0 10 10 9 83 0 9 9 14 67 0 6 6 16 67 0 12 12 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
28 26 1 0 117 115 107 105 99 97 85 83 76 74 66 64 55 53 43 36 32 29 26 123 28 123 19 17 11 9 0 25 1 25 15 15
CALL[ ]	/* CallFunction */";
};
width = 671;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(414,-14,o),
(497,18,o),
(544,103,c),
(544,98,o),
(544,88,o),
(543,75,cs),
(542,62,o),
(542,49,o),
(542,36,cs),
(542,13,o),
(555,2,o),
(574,2,cs),
(590,2,o),
(605,14,o),
(605,35,cs),
(605,48,o),
(605,65,o),
(604,86,cs),
(603,106,o),
(603,132,o),
(603,164,cs),
(603,188,o),
(603,209,o),
(604,228,cs),
(605,247,o),
(605,262,o),
(605,273,cs),
(605,308,o),
(577,321,o),
(545,321,cs),
(509,320,o),
(471,318,o),
(432,315,cs),
(392,312,o),
(351,310,o),
(310,310,cs),
(289,310,o),
(259,302,o),
(259,275,cs),
(259,260,o),
(273,247,o),
(301,247,cs),
(337,247,o),
(373,248,o),
(409,251,cs),
(444,253,o),
(479,254,o),
(512,254,cs),
(537,254,o),
(537,248,o),
(537,225,cs),
(537,130,o),
(445,49,o),
(345,49,cs),
(175,49,o),
(112,229,o),
(112,404,cs),
(112,507,o),
(138,600,o),
(180,668,cs),
(222,735,o),
(278,777,o),
(341,777,cs),
(474,777,o),
(525,664,o),
(525,517,cs),
(525,485,o),
(538,464,o),
(561,464,cs),
(586,464,o),
(595,485,o),
(595,520,cs),
(595,537,o),
(595,559,o),
(594,584,cs),
(593,609,o),
(593,631,o),
(593,648,cs),
(593,703,o),
(597,736,o),
(597,788,cs),
(597,804,o),
(584,821,o),
(560,821,cs),
(540,821,o),
(528,806,o),
(528,789,cs),
(533,702,l),
(496,799,o),
(422,838,o),
(350,838,cs),
(258,838,o),
(179,788,o),
(124,709,cs),
(69,629,o),
(37,520,o),
(37,404,cs),
(37,91,o),
(195,-14,o),
(336,-14,cs)
);
},
{
closed = 1;
nodes = (
(244,847,o),
(305,874,o),
(345,898,c),
(409,860,o),
(457,847,o),
(465,847,cs),
(473,847,o),
(476,855,o),
(476,864,cs),
(476,900,o),
(369,972,o),
(345,972,cs),
(323,972,o),
(215,901,o),
(215,860,cs),
(215,851,o),
(219,847,o),
(226,847,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
5 1 0 2 73 1 10 11 55 1 12 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 2 0 8 2 94 1 13 2 0 8 0 106 5 1 4 14 1 3 12 4 3 91 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 12 67 0 6 6 13 67 0 12 12 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 2 0 2 106 1 13 2 0 8 0 106 5 1 4 14 1 3 12 4 3 91 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 12 67 0 6 6 13 67 0 12 12 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 2 0 2 106 1 13 2 0 8 0 106 0 5 10 4 4 5 96 0 4 14 1 3 12 4 3 92 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 12 67 0 6 6 13 67 0 12 12 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 2 0 2 106 1 13 2 0 8 0 106 0 5 10 4 4 5 96 0 8 0 11 10 8 11 92 0 4 14 1 3 12 4 3 92 0 10 10 9 83 0 9 9 14 67 0 6 6 13 67 0 12 12 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
29 25 1 0 110 108 100 98 92 90 78 76 71 69 61 59 50 48 38 36 35 33 25 116 29 116 18 16 11 9 0 24 1 24 15 15
CALL[ ]	/* CallFunction */";
};
width = 656;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(416,-14,o),
(504,20,o),
(548,103,c),
(548,98,o),
(548,89,o),
(547,74,cs),
(546,59,o),
(546,45,o),
(546,34,cs),
(546,19,o),
(552,12,o),
(563,12,cs),
(570,12,o),
(579,18,o),
(579,33,cs),
(579,45,o),
(579,62,o),
(578,85,cs),
(577,108,o),
(577,134,o),
(577,164,cs),
(577,188,o),
(577,209,o),
(578,228,cs),
(579,247,o),
(579,262,o),
(579,273,cs),
(579,297,o),
(565,306,o),
(549,306,cs),
(513,305,o),
(477,303,o),
(441,301,cs),
(404,299,o),
(365,297,o),
(324,295,cs),
(301,294,o),
(273,291,o),
(273,278,cs),
(273,274,o),
(276,270,o),
(282,267,cs),
(287,264,o),
(297,262,o),
(311,262,cs),
(347,262,o),
(382,263,o),
(416,266,cs),
(449,268,o),
(483,269,o),
(516,269,cs),
(541,269,o),
(541,260,o),
(541,225,cs),
(541,82,o),
(448,19,o),
(347,19,cs),
(156,19,o),
(86,212,o),
(86,404,cs),
(86,515,o),
(115,616,o),
(163,689,cs),
(210,761,o),
(274,807,o),
(345,807,cs),
(478,807,o),
(529,692,o),
(529,527,cs),
(529,502,o),
(531,474,o),
(551,474,cs),
(560,474,o),
(566,479,o),
(567,488,cs),
(568,497,o),
(569,511,o),
(569,530,cs),
(569,547,o),
(569,567,o),
(568,589,cs),
(567,611,o),
(567,631,o),
(567,648,cs),
(567,675,o),
(568,698,o),
(569,719,cs),
(570,739,o),
(571,763,o),
(571,790,cs),
(571,806,o),
(560,813,o),
(549,813,cs),
(540,813,o),
(532,804,o),
(532,791,cs),
(537,702,l),
(500,799,o),
(426,838,o),
(354,838,cs),
(262,838,o),
(183,788,o),
(128,709,cs),
(73,629,o),
(41,520,o),
(41,404,cs),
(41,249,o),
(80,145,o),
(137,79,cs),
(193,13,o),
(268,-14,o),
(339,-14,cs)
);
},
{
closed = 1;
nodes = (
(239,875,o),
(292,905,o),
(346,928,c),
(397,906,o),
(454,875,o),
(466,875,cs),
(471,875,o),
(474,879,o),
(474,886,cs),
(474,911,o),
(372,972,o),
(346,972,cs),
(323,972,o),
(219,911,o),
(219,886,cs),
(219,879,o),
(222,875,o),
(227,875,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
5 1 0 2 71 1 9 10 53 1 11 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 2 0 7 2 94 1 12 2 0 7 0 106 0 4 13 1 3 11 4 3 91 0 10 10 7 83 0 7 7 20 67 0 9 9 8 83 0 8 8 14 67 0 5 5 13 67 0 11 11 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 2 0 2 106 1 12 2 0 7 0 106 0 4 13 1 3 11 4 3 91 0 10 10 7 83 0 7 7 20 67 0 9 9 8 83 0 8 8 14 67 0 5 5 13 67 0 11 11 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 2 0 2 106 1 12 2 0 7 0 106 0 5 11 6 11 5 6 104 0 4 13 1 3 11 4 3 91 0 10 10 7 83 0 7 7 20 67 0 9 9 8 83 0 8 8 14 67 0 11 11 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 2 0 2 106 1 12 2 0 7 0 106 0 5 11 6 11 5 6 104 0 7 0 10 9 7 10 92 0 4 13 1 3 11 4 3 91 0 9 9 8 83 0 8 8 14 67 0 11 11 6 83 0 6 6 21 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
28 24 1 0 108 106 98 96 88 86 76 74 69 67 59 57 49 47 37 32 24 114 28 114 18 16 11 9 0 23 1 23 14 15
CALL[ ]	/* CallFunction */";
};
width = 635;
}
);
note = Gcircumflex;
unicode = 284;
},
{
glyphname = Gcommaaccent;
kernLeft = C;
kernRight = G;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(416,-14,o),
(502,17,o),
(545,98,c),
(545,93,o),
(545,84,o),
(544,71,cs),
(543,58,o),
(543,45,o),
(543,32,cs),
(543,3,o),
(560,-4,o),
(584,-4,cs),
(607,-4,o),
(625,11,o),
(625,36,cs),
(625,49,o),
(625,66,o),
(624,85,cs),
(623,104,o),
(623,131,o),
(623,164,cs),
(623,188,o),
(623,209,o),
(624,228,cs),
(625,247,o),
(625,262,o),
(625,273,cs),
(625,316,o),
(587,330,o),
(544,330,cs),
(459,330,o),
(437,322,o),
(350,322,cs),
(323,322,o),
(299,310,o),
(299,273,cs),
(299,256,o),
(316,238,o),
(344,238,cs),
(416,238,o),
(445,245,o),
(511,245,cs),
(530,245,o),
(536,242,o),
(536,225,cs),
(536,161,o),
(446,67,o),
(346,67,cs),
(190,67,o),
(132,238,o),
(132,404,cs),
(132,501,o),
(156,590,o),
(194,655,cs),
(232,719,o),
(283,759,o),
(340,759,cs),
(472,759,o),
(524,658,o),
(524,521,cs),
(524,481,o),
(547,468,o),
(570,468,cs),
(601,468,o),
(615,492,o),
(615,524,cs),
(615,541,o),
(615,562,o),
(614,586,cs),
(613,610,o),
(613,631,o),
(613,648,cs),
(613,703,o),
(617,732,o),
(617,787,cs),
(617,803,o),
(605,826,o),
(570,826,cs),
(542,826,o),
(532,814,o),
(532,795,cs),
(537,709,l),
(499,806,o),
(422,838,o),
(349,838,cs),
(257,838,o),
(178,788,o),
(123,709,cs),
(68,629,o),
(36,520,o),
(36,404,cs),
(36,92,o),
(196,-14,o),
(336,-14,cs)
);
},
{
closed = 1;
nodes = (
(365,-249,o),
(428,-207,o),
(428,-130,cs),
(428,-73,o),
(392,-49,o),
(360,-49,cs),
(316,-49,o),
(300,-79,o),
(300,-107,cs),
(300,-138,o),
(336,-140,o),
(336,-157,cs),
(336,-177,o),
(334,-192,o),
(329,-201,cs),
(324,-211,o),
(321,-219,o),
(321,-226,cs),
(321,-249,o),
(340,-249,o),
(347,-249,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
76 1 9 10 56 1 11 2 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
76 1 9 10 56 1 11 3 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 4 3 12 2 2 11 4 2 91 0 10 10 7 83 8 1 7 7 20 67 0 9 9 7 83 8 1 7 7 20 67 0 11 11 5 83 6 1 5 5 16 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 4 3 12 2 2 11 4 2 91 0 0 0 1 0 1 87 0 10 10 7 83 0 7 7 20 67 0 9 9 8 83 0 8 8 12 67 0 11 11 5 83 6 1 5 5 16 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 4 3 12 2 2 11 4 2 91 0 0 0 1 0 1 87 0 10 10 7 83 0 7 7 20 67 0 9 9 8 83 0 8 8 12 67 0 5 5 16 67 0 11 11 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 3 2 11 2 3 96 0 7 0 10 9 7 10 91 0 4 12 1 2 3 4 2 91 0 0 0 1 0 1 87 0 9 9 8 83 0 8 8 14 67 0 5 5 16 67 0 11 11 6 83 0 6 6 21 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
24 22 113 111 103 101 95 93 81 79 72 70 62 60 51 49 39 32 28 25 22 119 24 119 38 34 13 17
CALL[ ]	/* CallFunction */";
};
width = 672;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(415,-14,o),
(498,18,o),
(545,103,c),
(545,98,o),
(545,88,o),
(544,75,cs),
(543,62,o),
(543,49,o),
(543,36,cs),
(543,13,o),
(556,2,o),
(575,2,cs),
(591,2,o),
(606,14,o),
(606,35,cs),
(606,48,o),
(606,65,o),
(605,86,cs),
(604,106,o),
(604,132,o),
(604,164,cs),
(604,188,o),
(604,209,o),
(605,228,cs),
(606,247,o),
(606,262,o),
(606,273,cs),
(606,308,o),
(578,321,o),
(546,321,cs),
(510,320,o),
(472,318,o),
(433,315,cs),
(393,312,o),
(352,310,o),
(311,310,cs),
(290,310,o),
(260,302,o),
(260,275,cs),
(260,260,o),
(274,247,o),
(302,247,cs),
(338,247,o),
(374,248,o),
(410,251,cs),
(445,253,o),
(480,254,o),
(513,254,cs),
(538,254,o),
(538,248,o),
(538,225,cs),
(538,130,o),
(446,49,o),
(346,49,cs),
(176,49,o),
(113,229,o),
(113,404,cs),
(113,507,o),
(139,600,o),
(181,668,cs),
(223,735,o),
(279,777,o),
(342,777,cs),
(475,777,o),
(526,664,o),
(526,517,cs),
(526,485,o),
(539,464,o),
(562,464,cs),
(587,464,o),
(596,485,o),
(596,520,cs),
(596,537,o),
(596,559,o),
(595,584,cs),
(594,609,o),
(594,631,o),
(594,648,cs),
(594,703,o),
(598,736,o),
(598,788,cs),
(598,804,o),
(585,821,o),
(561,821,cs),
(541,821,o),
(529,806,o),
(529,789,cs),
(534,702,l),
(497,799,o),
(423,838,o),
(351,838,cs),
(259,838,o),
(180,788,o),
(125,709,cs),
(70,629,o),
(38,520,o),
(38,404,cs),
(38,91,o),
(196,-14,o),
(337,-14,cs)
);
},
{
closed = 1;
nodes = (
(370,-230,o),
(411,-180,o),
(411,-126,cs),
(411,-73,o),
(381,-54,o),
(354,-54,cs),
(317,-54,o),
(302,-79,o),
(302,-103,cs),
(302,-135,o),
(338,-134,o),
(338,-151,cs),
(338,-168,o),
(336,-181,o),
(332,-189,cs),
(327,-198,o),
(325,-205,o),
(325,-211,cs),
(325,-228,o),
(339,-230,o),
(346,-230,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
49 1 7 8 31 1 9 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
2 1 1 12 1 0 9 1 0 91 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 67 0 10 10 11 83 0 11 11 25 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 2 7 1 1 2 96 0 1 12 1 0 9 1 0 92 0 10 0 11 10 11 87 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 2 7 1 1 2 96 0 5 0 8 7 5 8 91 0 1 12 1 0 9 1 0 92 0 10 0 11 10 11 87 0 7 7 6 83 0 6 6 14 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
5 1 105 103 97 95 86 84 76 74 68 66 54 52 47 45 37 35 26 24 14 12 11 9 1 92 5 92 13 26
CALL[ ]	/* CallFunction */";
};
width = 657;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(417,-14,o),
(505,20,o),
(549,103,c),
(549,98,o),
(549,89,o),
(548,74,cs),
(547,59,o),
(547,45,o),
(547,34,cs),
(547,19,o),
(553,12,o),
(564,12,cs),
(571,12,o),
(580,18,o),
(580,33,cs),
(580,45,o),
(580,62,o),
(579,85,cs),
(578,108,o),
(578,134,o),
(578,164,cs),
(578,188,o),
(578,209,o),
(579,228,cs),
(580,247,o),
(580,262,o),
(580,273,cs),
(580,297,o),
(566,306,o),
(550,306,cs),
(514,305,o),
(478,303,o),
(442,301,cs),
(405,299,o),
(366,297,o),
(325,295,cs),
(302,294,o),
(274,291,o),
(274,278,cs),
(274,274,o),
(277,270,o),
(283,267,cs),
(288,264,o),
(298,262,o),
(312,262,cs),
(348,262,o),
(383,263,o),
(417,266,cs),
(450,268,o),
(484,269,o),
(517,269,cs),
(542,269,o),
(542,260,o),
(542,225,cs),
(542,82,o),
(449,19,o),
(348,19,cs),
(157,19,o),
(87,212,o),
(87,404,cs),
(87,515,o),
(116,616,o),
(164,689,cs),
(211,761,o),
(275,807,o),
(346,807,cs),
(479,807,o),
(530,692,o),
(530,527,cs),
(530,502,o),
(532,474,o),
(552,474,cs),
(561,474,o),
(567,479,o),
(568,488,cs),
(569,497,o),
(570,511,o),
(570,530,cs),
(570,547,o),
(570,567,o),
(569,589,cs),
(568,611,o),
(568,631,o),
(568,648,cs),
(568,675,o),
(569,698,o),
(570,719,cs),
(571,739,o),
(572,763,o),
(572,790,cs),
(572,806,o),
(561,813,o),
(550,813,cs),
(541,813,o),
(533,804,o),
(533,791,cs),
(538,702,l),
(501,799,o),
(427,838,o),
(355,838,cs),
(263,838,o),
(184,788,o),
(129,709,cs),
(74,629,o),
(42,520,o),
(42,404,cs),
(42,249,o),
(81,145,o),
(138,79,cs),
(194,13,o),
(269,-14,o),
(340,-14,cs)
);
},
{
closed = 1;
nodes = (
(371,-202,o),
(387,-152,o),
(387,-123,cs),
(387,-78,o),
(365,-66,o),
(345,-66,cs),
(318,-66,o),
(305,-83,o),
(305,-100,cs),
(305,-132,o),
(341,-127,o),
(341,-144,cs),
(341,-151,o),
(339,-159,o),
(336,-168,cs),
(332,-178,o),
(330,-185,o),
(330,-190,cs),
(330,-197,o),
(337,-202,o),
(344,-202,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
47 1 6 7 29 1 8 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 1 11 1 0 8 1 0 91 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 14 67 0 2 2 13 67 0 8 8 3 83 0 3 3 21 67 0 9 9 10 83 0 10 10 17 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 1 11 1 0 8 1 0 91 0 9 0 10 9 10 87 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 14 67 0 2 2 13 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 2 8 3 8 2 3 104 0 1 11 1 0 8 1 0 91 0 9 0 10 9 10 87 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 2 8 3 8 2 3 104 0 4 0 7 6 4 7 91 0 1 11 1 0 8 1 0 91 0 9 0 10 9 10 87 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
4 0 103 101 95 93 84 82 74 72 64 62 52 50 45 43 35 33 25 23 13 8 0 90 4 90 12 15
CALL[ ]	/* CallFunction */";
};
width = 636;
}
);
note = Gcommaaccent;
unicode = 290;
},
{
glyphname = Gdotaccent;
kernLeft = C;
kernRight = G;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(414,-14,o),
(500,17,o),
(543,98,c),
(543,93,o),
(543,84,o),
(542,71,cs),
(541,58,o),
(541,45,o),
(541,32,cs),
(541,3,o),
(558,-4,o),
(582,-4,cs),
(605,-4,o),
(623,11,o),
(623,36,cs),
(623,49,o),
(623,66,o),
(622,85,cs),
(621,104,o),
(621,131,o),
(621,164,cs),
(621,188,o),
(621,209,o),
(622,228,cs),
(623,247,o),
(623,262,o),
(623,273,cs),
(623,316,o),
(585,330,o),
(542,330,cs),
(457,330,o),
(435,322,o),
(348,322,cs),
(321,322,o),
(297,310,o),
(297,273,cs),
(297,256,o),
(314,238,o),
(342,238,cs),
(414,238,o),
(443,245,o),
(509,245,cs),
(528,245,o),
(534,242,o),
(534,225,cs),
(534,161,o),
(444,67,o),
(344,67,cs),
(188,67,o),
(130,238,o),
(130,404,cs),
(130,501,o),
(154,590,o),
(192,655,cs),
(230,719,o),
(281,759,o),
(338,759,cs),
(470,759,o),
(522,658,o),
(522,521,cs),
(522,481,o),
(545,468,o),
(568,468,cs),
(599,468,o),
(613,492,o),
(613,524,cs),
(613,541,o),
(613,562,o),
(612,586,cs),
(611,610,o),
(611,631,o),
(611,648,cs),
(611,703,o),
(615,732,o),
(615,787,cs),
(615,803,o),
(603,826,o),
(568,826,cs),
(540,826,o),
(530,814,o),
(530,795,cs),
(535,709,l),
(497,806,o),
(420,838,o),
(347,838,cs),
(255,838,o),
(176,788,o),
(121,709,cs),
(66,629,o),
(34,520,o),
(34,404,cs),
(34,92,o),
(194,-14,o),
(334,-14,cs)
);
},
{
closed = 1;
nodes = (
(394,840,o),
(431,855,o),
(431,910,cs),
(431,946,o),
(403,971,o),
(371,971,cs),
(323,971,o),
(305,933,o),
(305,906,cs),
(305,863,o),
(331,840,o),
(364,840,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
54 1 7 8 34 1 9 0 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
54 1 7 8 34 1 9 1 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 10 0 11 5 10 11 91 0 2 1 12 2 0 9 2 0 91 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 67 0 9 9 3 83 4 1 3 3 16 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 10 0 11 5 10 11 91 0 2 1 12 2 0 9 2 0 91 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 9 9 3 83 4 1 3 3 16 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 10 0 11 5 10 11 91 0 2 1 12 2 0 9 2 0 91 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 16 67 0 9 9 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 1 0 9 0 1 96 0 10 0 11 5 10 11 91 0 5 0 8 7 5 8 91 0 2 12 1 0 1 2 0 91 0 7 7 6 83 0 6 6 14 67 0 3 3 16 67 0 9 9 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
2 0 112 110 104 102 91 89 81 79 73 71 59 57 50 48 40 38 29 27 17 10 6 3 0 97 2 97 13 15
CALL[ ]	/* CallFunction */";
};
width = 671;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(414,-14,o),
(497,18,o),
(544,103,c),
(544,98,o),
(544,88,o),
(543,75,cs),
(542,62,o),
(542,49,o),
(542,36,cs),
(542,13,o),
(555,2,o),
(574,2,cs),
(590,2,o),
(605,14,o),
(605,35,cs),
(605,48,o),
(605,65,o),
(604,86,cs),
(603,106,o),
(603,132,o),
(603,164,cs),
(603,188,o),
(603,209,o),
(604,228,cs),
(605,247,o),
(605,262,o),
(605,273,cs),
(605,308,o),
(577,321,o),
(545,321,cs),
(509,320,o),
(471,318,o),
(432,315,cs),
(392,312,o),
(351,310,o),
(310,310,cs),
(289,310,o),
(259,302,o),
(259,275,cs),
(259,260,o),
(273,247,o),
(301,247,cs),
(337,247,o),
(373,248,o),
(409,251,cs),
(444,253,o),
(479,254,o),
(512,254,cs),
(537,254,o),
(537,248,o),
(537,225,cs),
(537,130,o),
(445,49,o),
(345,49,cs),
(175,49,o),
(112,229,o),
(112,404,cs),
(112,507,o),
(138,600,o),
(180,668,cs),
(222,735,o),
(278,777,o),
(341,777,cs),
(474,777,o),
(525,664,o),
(525,517,cs),
(525,485,o),
(538,464,o),
(561,464,cs),
(586,464,o),
(595,485,o),
(595,520,cs),
(595,537,o),
(595,559,o),
(594,584,cs),
(593,609,o),
(593,631,o),
(593,648,cs),
(593,703,o),
(597,736,o),
(597,788,cs),
(597,804,o),
(584,821,o),
(560,821,cs),
(540,821,o),
(528,806,o),
(528,789,cs),
(533,702,l),
(496,799,o),
(422,838,o),
(350,838,cs),
(258,838,o),
(179,788,o),
(124,709,cs),
(69,629,o),
(37,520,o),
(37,404,cs),
(37,91,o),
(195,-14,o),
(336,-14,cs)
);
},
{
closed = 1;
nodes = (
(382,859,o),
(413,872,o),
(413,920,cs),
(413,951,o),
(391,972,o),
(364,972,cs),
(322,972,o),
(308,936,o),
(308,916,cs),
(308,880,o),
(330,859,o),
(357,859,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
49 1 7 8 31 1 9 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 10 0 11 5 10 11 91 2 1 1 12 1 0 9 1 0 91 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 2 7 1 1 2 96 0 10 0 11 5 10 11 91 0 1 12 1 0 9 1 0 92 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 2 7 1 1 2 96 0 10 0 11 5 10 11 91 0 5 0 8 7 5 8 91 0 1 12 1 0 9 1 0 92 0 7 7 6 83 0 6 6 14 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
5 1 105 103 99 97 86 84 76 74 68 66 54 52 47 45 37 35 26 24 14 12 11 9 1 92 5 92 13 26
CALL[ ]	/* CallFunction */";
};
width = 656;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(416,-14,o),
(504,20,o),
(548,103,c),
(548,98,o),
(548,89,o),
(547,74,cs),
(546,59,o),
(546,45,o),
(546,34,cs),
(546,19,o),
(552,12,o),
(563,12,cs),
(570,12,o),
(579,18,o),
(579,33,cs),
(579,45,o),
(579,62,o),
(578,85,cs),
(577,108,o),
(577,134,o),
(577,164,cs),
(577,188,o),
(577,209,o),
(578,228,cs),
(579,247,o),
(579,262,o),
(579,273,cs),
(579,297,o),
(565,306,o),
(549,306,cs),
(513,305,o),
(477,303,o),
(441,301,cs),
(404,299,o),
(365,297,o),
(324,295,cs),
(301,294,o),
(273,291,o),
(273,278,cs),
(273,274,o),
(276,270,o),
(282,267,cs),
(287,264,o),
(297,262,o),
(311,262,cs),
(347,262,o),
(382,263,o),
(416,266,cs),
(449,268,o),
(483,269,o),
(516,269,cs),
(541,269,o),
(541,260,o),
(541,225,cs),
(541,82,o),
(448,19,o),
(347,19,cs),
(156,19,o),
(86,212,o),
(86,404,cs),
(86,515,o),
(115,616,o),
(163,689,cs),
(210,761,o),
(274,807,o),
(345,807,cs),
(478,807,o),
(529,692,o),
(529,527,cs),
(529,502,o),
(531,474,o),
(551,474,cs),
(560,474,o),
(566,479,o),
(567,488,cs),
(568,497,o),
(569,511,o),
(569,530,cs),
(569,547,o),
(569,567,o),
(568,589,cs),
(567,611,o),
(567,631,o),
(567,648,cs),
(567,675,o),
(568,698,o),
(569,719,cs),
(570,739,o),
(571,763,o),
(571,790,cs),
(571,806,o),
(560,813,o),
(549,813,cs),
(540,813,o),
(532,804,o),
(532,791,cs),
(537,702,l),
(500,799,o),
(426,838,o),
(354,838,cs),
(262,838,o),
(183,788,o),
(128,709,cs),
(73,629,o),
(41,520,o),
(41,404,cs),
(41,249,o),
(80,145,o),
(137,79,cs),
(193,13,o),
(268,-14,o),
(339,-14,cs)
);
},
{
closed = 1;
nodes = (
(365,889,o),
(387,899,o),
(387,935,cs),
(387,958,o),
(372,972,o),
(353,972,cs),
(325,972,o),
(312,945,o),
(312,931,cs),
(312,907,o),
(327,889,o),
(346,889,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
47 1 6 7 29 1 8 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 9 0 10 4 9 10 91 0 1 11 1 0 8 1 0 91 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 14 67 0 2 2 13 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 2 8 3 8 2 3 104 0 9 0 10 4 9 10 91 0 1 11 1 0 8 1 0 91 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 2 8 3 8 2 3 104 0 9 0 10 4 9 10 91 0 4 0 7 6 4 7 91 0 1 11 1 0 8 1 0 91 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
4 0 103 101 97 95 84 82 74 72 64 62 52 50 45 43 35 33 25 23 13 8 0 90 4 90 12 15
CALL[ ]	/* CallFunction */";
};
width = 635;
}
);
note = Gdotaccent;
unicode = 288;
},
{
glyphname = H;
kernLeft = B;
kernRight = H;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(791,-55,ls),
(804,-55,o),
(819,-50,o),
(819,-26,cs),
(819,5,o),
(796,8,o),
(781,8,cs),
(685,8,l),
(685,51,o),
(675,223,o),
(675,401,cs),
(675,498,o),
(677,623,o),
(677,705,cs),
(677,731,o),
(682,745,o),
(758,745,cs),
(771,745,o),
(803,747,o),
(803,776,cs),
(803,803,o),
(787,807,o),
(744,807,cs),
(555,807,ls),
(527,807,o),
(505,799,o),
(505,775,cs),
(505,753,o),
(518,741,o),
(545,738,cs),
(568,735,o),
(581,728,o),
(581,712,cs),
(581,463,l),
(587,463,o),
(539,461,o),
(435,461,cs),
(401,461,o),
(367,461,o),
(333,461,cs),
(299,461,o),
(265,461,o),
(231,462,c),
(231,717,ls),
(231,748,o),
(246,757,o),
(295,757,cs),
(321,757,o),
(347,767,o),
(347,790,cs),
(347,814,o),
(331,821,o),
(288,821,cs),
(89,821,ls),
(72,821,o),
(50,813,o),
(50,788,cs),
(50,764,o),
(63,752,o),
(89,752,cs),
(124,752,o),
(135,744,o),
(135,721,cs),
(135,668,o),
(136,615,o),
(137,561,cs),
(138,507,o),
(139,454,o),
(139,401,cs),
(139,296,o),
(135,211,o),
(135,114,cs),
(135,75,o),
(117,68,o),
(96,68,cs),
(65,68,o),
(53,49,o),
(53,29,cs),
(53,5,o),
(81,0,o),
(108,0,cs),
(337,0,ls),
(350,0,o),
(365,4,o),
(365,35,cs),
(365,50,o),
(352,63,o),
(327,63,cs),
(231,63,l),
(231,377,l),
(299,378,o),
(367,379,o),
(435,379,cs),
(448,379,o),
(463,379,o),
(480,379,cs),
(497,378,o),
(514,378,o),
(529,378,cs),
(547,377,o),
(565,377,o),
(584,377,c),
(584,62,ls),
(584,43,o),
(581,30,o),
(575,25,cs),
(568,19,o),
(561,16,o),
(554,16,cs),
(526,16,o),
(504,3,o),
(504,-22,cs),
(504,-47,o),
(520,-55,o),
(556,-55,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 11 7 10 7 11 10 104 2 1 0 0 1 0 1 87 13 9 2 7 7 8 83 12 1 8 8 12 67 0 3 3 10 83 0 10 10 23 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 11 7 10 7 11 10 104 2 1 0 0 1 0 1 87 13 9 2 7 7 8 83 0 8 8 12 67 13 9 2 7 7 12 83 0 12 12 14 67 0 3 3 10 83 0 10 10 23 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 11 7 10 7 11 10 104 0 10 0 3 4 10 3 89 2 1 0 0 1 0 1 87 13 9 2 7 7 8 83 0 8 8 12 67 13 9 2 7 7 12 83 0 12 12 14 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 11 7 10 7 11 10 104 0 2 4 0 0 2 96 0 10 0 3 4 10 3 89 0 0 0 1 0 1 88 13 9 2 7 7 8 83 0 8 8 12 67 13 9 2 7 7 12 83 0 12 12 14 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 11 13 10 13 11 10 104 0 2 4 0 0 2 96 0 10 0 3 4 10 3 89 0 0 0 1 0 1 88 9 1 7 7 8 83 0 8 8 12 67 0 13 13 12 83 0 12 12 14 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 7 9 13 9 7 96 0 11 13 10 13 11 10 104 0 6 3 4 4 6 96 0 2 4 0 0 2 96 0 10 0 3 6 10 3 89 0 0 0 1 0 1 88 0 9 9 8 83 0 8 8 14 67 0 13 13 12 83 0 12 12 14 67 0 4 4 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 7 9 13 9 7 96 0 11 13 10 13 11 10 104 0 6 3 4 4 6 96 0 2 4 0 0 2 96 0 12 0 13 11 12 13 91 0 10 0 3 6 10 3 89 0 0 0 1 0 1 88 0 9 9 8 83 0 8 8 14 67 0 4 4 5 84 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
110 108 102 99 91 90 90 83 80 78 51 44 36 52 33 131 36 52 42 14 24
CALL[ ]	/* CallFunction */";
};
width = 829;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(771,-55,ls),
(784,-55,o),
(796,-51,o),
(796,-32,cs),
(796,-9,o),
(776,-4,o),
(761,-4,cs),
(665,-4,l),
(665,40,o),
(655,217,o),
(655,401,cs),
(655,505,o),
(657,642,o),
(657,732,cs),
(657,756,o),
(719,757,o),
(738,757,cs),
(754,757,o),
(780,759,o),
(780,782,cs),
(780,792,o),
(776,799,o),
(768,802,cs),
(760,805,o),
(745,807,o),
(724,807,cs),
(532,807,ls),
(520,807,o),
(495,802,o),
(495,782,cs),
(495,763,o),
(517,757,o),
(532,757,cs),
(551,757,o),
(582,757,o),
(582,734,cs),
(582,454,l),
(590,454,o),
(534,452,o),
(415,452,cs),
(381,452,o),
(347,452,o),
(313,452,cs),
(279,452,o),
(245,453,o),
(211,454,c),
(211,746,ls),
(211,770,o),
(264,771,o),
(282,771,cs),
(298,771,o),
(324,775,o),
(324,796,cs),
(324,805,o),
(320,812,o),
(312,816,cs),
(304,819,o),
(289,821,o),
(268,821,cs),
(76,821,ls),
(64,821,o),
(39,820,o),
(39,796,cs),
(39,776,o),
(61,771,o),
(76,771,cs),
(98,771,o),
(136,770,o),
(136,748,cs),
(136,693,o),
(137,636,o),
(138,575,cs),
(139,514,o),
(140,456,o),
(140,401,cs),
(140,346,o),
(139,294,o),
(138,245,cs),
(137,196,o),
(136,145,o),
(136,94,cs),
(136,48,o),
(104,48,o),
(83,48,cs),
(71,48,o),
(54,46,o),
(54,27,cs),
(54,4,o),
(76,0,o),
(95,0,cs),
(317,0,ls),
(330,0,o),
(342,4,o),
(342,27,cs),
(342,40,o),
(332,51,o),
(307,51,cs),
(211,51,l),
(211,386,l),
(279,387,o),
(347,388,o),
(415,388,cs),
(430,388,o),
(447,388,o),
(467,388,cs),
(486,387,o),
(505,387,o),
(522,387,cs),
(543,386,o),
(564,386,o),
(585,386,c),
(585,39,ls),
(585,-8,o),
(558,-7,o),
(541,-7,cs),
(529,-7,o),
(512,-12,o),
(512,-32,cs),
(512,-53,o),
(534,-55,o),
(553,-55,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 11 12 10 12 11 10 104 2 1 0 0 1 0 1 87 9 1 7 7 8 83 0 8 8 12 67 14 1 12 12 13 83 0 13 13 14 67 0 3 3 10 83 0 10 10 15 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 11 12 10 12 11 10 104 0 10 0 3 4 10 3 89 2 1 0 0 1 0 1 87 9 1 7 7 8 83 0 8 8 12 67 14 1 12 12 13 83 0 13 13 14 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 11 12 10 12 11 10 104 0 10 0 3 4 10 3 89 2 1 0 0 1 0 1 87 9 1 7 7 8 83 0 8 8 14 67 14 1 12 12 13 83 0 13 13 14 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 11 12 10 12 11 10 104 0 13 14 1 12 11 13 12 91 0 10 0 3 4 10 3 89 2 1 0 0 1 0 1 87 9 1 7 7 8 83 0 8 8 14 67 6 1 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
117 114 110 107 103 100 96 95 95 88 84 81 52 60 52 52 33 132 52 52 42 15 24
CALL[ ]	/* CallFunction */";
};
width = 807;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(743,-55,ls),
(756,-55,o),
(763,-51,o),
(763,-42,cs),
(763,-31,o),
(748,-24,o),
(733,-24,cs),
(637,-24,l),
(637,-10,o),
(635,41,o),
(632,129,cs),
(629,208,o),
(627,306,o),
(627,401,cs),
(627,456,o),
(628,517,o),
(628,585,cs),
(628,652,o),
(629,708,o),
(629,752,cs),
(629,776,o),
(691,777,o),
(710,777,cs),
(726,777,o),
(747,777,o),
(747,792,cs),
(747,797,o),
(744,801,o),
(738,804,cs),
(731,806,o),
(717,807,o),
(696,807,cs),
(514,807,ls),
(502,807,o),
(477,807,o),
(477,792,cs),
(477,779,o),
(499,777,o),
(514,777,cs),
(541,777,o),
(584,777,o),
(584,754,cs),
(584,439,l),
(593,439,o),
(527,437,o),
(387,437,cs),
(353,437,o),
(319,437,o),
(285,437,cs),
(251,437,o),
(217,438,o),
(183,439,c),
(183,766,ls),
(183,790,o),
(236,791,o),
(254,791,cs),
(270,791,o),
(291,791,o),
(291,806,cs),
(291,811,o),
(288,815,o),
(282,818,cs),
(275,820,o),
(261,821,o),
(240,821,cs),
(58,821,ls),
(46,821,o),
(21,821,o),
(21,806,cs),
(21,793,o),
(43,791,o),
(58,791,cs),
(88,791,o),
(138,791,o),
(138,768,cs),
(138,709,o),
(139,648,o),
(140,585,cs),
(141,521,o),
(142,460,o),
(142,401,cs),
(142,342,o),
(141,287,o),
(140,235,cs),
(139,182,o),
(138,129,o),
(138,74,cs),
(138,30,o),
(98,28,o),
(65,28,cs),
(53,28,o),
(36,25,o),
(36,13,cs),
(36,2,o),
(58,0,o),
(77,0,cs),
(289,0,ls),
(302,0,o),
(309,4,o),
(309,13,cs),
(309,18,o),
(307,23,o),
(304,26,cs),
(300,29,o),
(292,31,o),
(279,31,cs),
(183,31,l),
(183,401,l),
(251,402,o),
(319,403,o),
(387,403,cs),
(404,403,o),
(424,403,o),
(447,403,cs),
(469,402,o),
(491,402,o),
(512,402,cs),
(536,401,o),
(561,401,o),
(587,401,c),
(587,19,ls),
(587,-29,o),
(549,-27,o),
(523,-27,cs),
(511,-27,o),
(494,-30,o),
(494,-42,cs),
(494,-53,o),
(516,-55,o),
(535,-55,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 11 12 10 12 11 10 104 2 1 0 0 1 0 1 87 9 1 7 7 8 83 0 8 8 12 67 14 1 12 12 13 83 0 13 13 14 67 0 3 3 10 83 0 10 10 15 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 11 12 10 12 11 10 104 0 10 0 3 4 10 3 89 2 1 0 0 1 0 1 87 9 1 7 7 8 83 0 8 8 12 67 14 1 12 12 13 83 0 13 13 14 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 11 12 10 12 11 10 104 0 10 0 3 4 10 3 89 2 1 0 0 1 0 1 87 9 1 7 7 8 83 0 8 8 14 67 14 1 12 12 13 83 0 13 13 14 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 11 12 10 12 11 10 104 0 13 14 1 12 11 13 12 91 0 10 0 3 4 10 3 89 2 1 0 0 1 0 1 87 9 1 7 7 8 83 0 8 8 14 67 6 1 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
117 114 110 107 103 100 96 95 95 88 84 81 52 60 52 51 33 132 52 51 44 15 24
CALL[ ]	/* CallFunction */";
};
width = 775;
}
);
note = H;
unicode = 72;
},
{
glyphname = Hbar;
kernLeft = B;
kernRight = H;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(794,-55,ls),
(807,-55,o),
(822,-50,o),
(822,-26,cs),
(822,5,o),
(799,8,o),
(784,8,cs),
(688,8,l),
(688,51,o),
(678,223,o),
(678,401,cs),
(678,553,l),
(719,553,ls),
(746,553,o),
(759,582,o),
(759,597,cs),
(759,618,o),
(740,636,o),
(727,636,cs),
(680,636,l),
(680,705,l),
(680,705,l),
(680,731,o),
(685,745,o),
(761,745,cs),
(774,745,o),
(806,747,o),
(806,776,cs),
(806,803,o),
(790,807,o),
(747,807,cs),
(558,807,ls),
(530,807,o),
(508,799,o),
(508,775,cs),
(508,753,o),
(521,741,o),
(548,738,cs),
(571,735,o),
(584,728,o),
(584,712,cs),
(584,634,l),
(553,634,o),
(523,634,o),
(494,634,cs),
(465,633,o),
(443,633,o),
(430,633,cs),
(412,633,o),
(346,634,o),
(234,634,c),
(234,717,ls),
(234,748,o),
(249,757,o),
(298,757,cs),
(324,757,o),
(350,767,o),
(350,790,cs),
(350,814,o),
(334,821,o),
(291,821,cs),
(92,821,ls),
(75,821,o),
(53,813,o),
(53,788,cs),
(53,764,o),
(66,752,o),
(92,752,cs),
(127,752,o),
(138,744,o),
(138,721,cs),
(138,635,l),
(114,635,ls),
(91,635,o),
(73,614,o),
(73,594,cs),
(73,575,o),
(95,552,o),
(114,552,cs),
(140,552,l),
(141,501,o),
(142,450,o),
(142,401,cs),
(142,296,o),
(138,211,o),
(138,114,cs),
(138,75,o),
(120,68,o),
(99,68,cs),
(68,68,o),
(56,49,o),
(56,29,cs),
(56,5,o),
(84,0,o),
(111,0,cs),
(340,0,ls),
(353,0,o),
(368,4,o),
(368,35,cs),
(368,50,o),
(355,63,o),
(330,63,cs),
(234,63,l),
(234,377,l),
(302,378,o),
(370,379,o),
(438,379,cs),
(451,379,o),
(466,379,o),
(483,379,cs),
(500,378,o),
(517,378,o),
(532,378,cs),
(550,377,o),
(568,377,o),
(587,377,c),
(587,62,ls),
(587,43,o),
(584,30,o),
(578,25,cs),
(571,19,o),
(564,16,o),
(557,16,cs),
(529,16,o),
(507,3,o),
(507,-22,cs),
(507,-47,o),
(523,-55,o),
(559,-55,cs)
);
},
{
closed = 1;
nodes = (
(302,461,o),
(268,461,o),
(234,462,c),
(234,552,l),
(348,552,o),
(450,553,o),
(584,553,c),
(584,463,l),
(584,463,l),
(590,463,o),
(542,461,o),
(438,461,cs),
(404,461,o),
(370,461,o),
(336,461,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 19 1 18 1 19 18 104 14 10 2 0 17 9 2 1 19 0 1 91 4 1 2 0 3 2 3 87 16 13 2 11 11 12 83 15 1 12 12 12 67 0 5 5 18 83 0 18 18 23 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 19 1 18 1 19 18 104 14 10 2 0 17 9 2 1 19 0 1 91 4 1 2 0 3 2 3 87 16 13 2 11 11 12 83 0 12 12 12 67 16 13 2 11 11 15 83 0 15 15 14 67 0 5 5 18 83 0 18 18 23 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 19 1 18 1 19 18 104 14 10 2 0 17 9 2 1 19 0 1 91 0 18 0 5 6 18 5 89 4 1 2 0 3 2 3 87 16 13 2 11 11 12 83 0 12 12 12 67 16 13 2 11 11 15 83 0 15 15 14 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 19 1 18 1 19 18 104 0 4 6 2 2 4 96 14 10 2 0 17 9 2 1 19 0 1 91 0 18 0 5 6 18 5 89 0 2 0 3 2 3 88 16 13 2 11 11 12 83 0 12 12 12 67 16 13 2 11 11 15 83 0 15 15 14 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 19 1 18 1 19 18 104 0 4 6 2 2 4 96 14 10 2 0 17 9 2 1 19 0 1 91 0 18 0 5 6 18 5 89 0 2 0 3 2 3 88 13 1 11 11 12 83 0 12 12 12 67 0 16 16 15 83 0 15 15 14 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 87 values pushed */
0 11 13 16 13 11 96 0 19 1 18 1 19 18 104 0 8 5 6 6 8 96 0 4 6 2 2 4 96 14 10 2 0 17 9 2 1 19 0 1 91 0 18 0 5 8 18 5 89 0 2 0 3 2 3 88 0 13 13 12 83 0 12 12 14 67 0 16 16 15 83 0 15 15 14 67 0 6 6 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 85 values pushed */
0 11 13 16 13 11 96 0 19 1 18 1 19 18 104 0 8 5 6 6 8 96 0 4 6 2 2 4 96 0 15 0 16 0 15 16 91 14 10 2 0 17 9 2 1 19 0 1 91 0 18 0 5 8 18 5 89 0 2 0 3 2 3 88 0 13 13 12 83 0 12 12 14 67 0 6 6 7 84 0 7 7 13 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
144 143 143 136 135 130 125 123 117 114 106 98 95 93 87 84 81 79 76 74 70 68 36 52 33 131 36 52 38 38 32 20 24
CALL[ ]	/* CallFunction */";
};
width = 838;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(773,-55,ls),
(786,-55,o),
(798,-51,o),
(798,-32,cs),
(798,-9,o),
(778,-4,o),
(763,-4,cs),
(667,-4,l),
(667,40,o),
(657,217,o),
(657,401,cs),
(657,505,o),
(659,642,o),
(659,732,cs),
(659,756,o),
(721,757,o),
(740,757,cs),
(756,757,o),
(782,759,o),
(782,782,cs),
(782,792,o),
(778,799,o),
(770,802,cs),
(762,805,o),
(747,807,o),
(726,807,cs),
(534,807,ls),
(522,807,o),
(497,802,o),
(497,782,cs),
(497,763,o),
(519,757,o),
(534,757,cs),
(553,757,o),
(584,757,o),
(584,734,cs),
(584,454,l),
(592,454,o),
(536,452,o),
(417,452,cs),
(383,452,o),
(349,452,o),
(315,452,cs),
(281,452,o),
(247,453,o),
(213,454,c),
(213,746,ls),
(213,770,o),
(266,771,o),
(284,771,cs),
(300,771,o),
(326,775,o),
(326,796,cs),
(326,805,o),
(322,812,o),
(314,816,cs),
(306,819,o),
(291,821,o),
(270,821,cs),
(78,821,ls),
(66,821,o),
(41,820,o),
(41,796,cs),
(41,776,o),
(63,771,o),
(78,771,cs),
(100,771,o),
(138,770,o),
(138,748,cs),
(138,693,o),
(139,636,o),
(140,575,cs),
(141,514,o),
(142,456,o),
(142,401,cs),
(142,346,o),
(141,294,o),
(140,245,cs),
(139,196,o),
(138,145,o),
(138,94,cs),
(138,48,o),
(106,48,o),
(85,48,cs),
(73,48,o),
(56,46,o),
(56,27,cs),
(56,4,o),
(78,0,o),
(97,0,cs),
(319,0,ls),
(332,0,o),
(344,4,o),
(344,27,cs),
(344,40,o),
(334,51,o),
(309,51,cs),
(213,51,l),
(213,386,l),
(281,387,o),
(349,388,o),
(417,388,cs),
(432,388,o),
(449,388,o),
(469,388,cs),
(488,387,o),
(507,387,o),
(524,387,cs),
(545,386,o),
(566,386,o),
(587,386,c),
(587,39,ls),
(587,-8,o),
(560,-7,o),
(543,-7,cs),
(531,-7,o),
(514,-12,o),
(514,-32,cs),
(514,-53,o),
(536,-55,o),
(555,-55,cs)
);
},
{
closed = 1;
nodes = (
(117,559,o),
(136,559,o),
(166,559,cs),
(195,559,o),
(231,559,o),
(272,559,cs),
(313,559,o),
(356,559,o),
(403,560,cs),
(450,560,o),
(494,560,o),
(535,560,cs),
(576,560,o),
(612,560,o),
(643,560,cs),
(674,560,o),
(693,560,o),
(702,560,cs),
(725,560,o),
(731,584,o),
(731,595,cs),
(731,611,o),
(721,625,o),
(710,625,cs),
(695,625,o),
(650,625,o),
(571,624,cs),
(489,622,o),
(440,622,o),
(413,622,cs),
(377,622,o),
(324,623,o),
(255,623,cs),
(187,623,o),
(138,624,o),
(109,624,cs),
(90,624,o),
(83,607,o),
(83,592,cs),
(83,577,o),
(94,559,o),
(109,559,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
0 13 1 12 1 13 12 104 17 1 0 0 1 13 0 1 91 4 1 2 0 3 2 3 87 11 1 9 9 10 83 0 10 10 12 67 16 1 14 14 15 83 0 15 15 14 67 0 5 5 12 83 0 12 12 15 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 13 1 12 1 13 12 104 17 1 0 0 1 13 0 1 91 0 12 0 5 6 12 5 89 4 1 2 0 3 2 3 87 11 1 9 9 10 83 0 10 10 12 67 16 1 14 14 15 83 0 15 15 14 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 13 1 12 1 13 12 104 17 1 0 0 1 13 0 1 91 0 12 0 5 6 12 5 89 4 1 2 0 3 2 3 87 11 1 9 9 10 83 0 10 10 14 67 16 1 14 14 15 83 0 15 15 14 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 13 1 12 1 13 12 104 0 15 16 1 14 0 15 14 91 17 1 0 0 1 13 0 1 91 0 12 0 5 6 12 5 89 4 1 2 0 3 2 3 87 11 1 9 9 10 83 0 10 10 14 67 8 1 6 6 7 83 0 7 7 13 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
1 0 150 147 143 140 136 133 129 128 128 121 117 114 110 107 103 100 88 85 81 78 74 72 71 63 59 56 52 49 45 43 14 5 0 32 1 18 18 15
CALL[ ]	/* CallFunction */";
};
width = 812;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(743,-55,ls),
(756,-55,o),
(763,-51,o),
(763,-42,cs),
(763,-31,o),
(748,-24,o),
(733,-24,cs),
(637,-24,l),
(637,-10,o),
(635,41,o),
(632,129,cs),
(629,208,o),
(627,306,o),
(627,401,cs),
(627,571,l),
(678,571,ls),
(693,571,o),
(697,584,o),
(697,591,cs),
(697,599,o),
(691,606,o),
(686,606,cs),
(681,606,o),
(674,606,o),
(664,606,cs),
(653,606,o),
(641,606,o),
(628,605,c),
(628,637,o),
(628,666,o),
(629,693,cs),
(629,720,o),
(629,739,o),
(629,752,cs),
(629,776,o),
(691,777,o),
(710,777,cs),
(726,777,o),
(747,777,o),
(747,792,cs),
(747,797,o),
(744,801,o),
(738,804,cs),
(731,806,o),
(717,807,o),
(696,807,cs),
(514,807,ls),
(502,807,o),
(477,807,o),
(477,792,cs),
(477,779,o),
(499,777,o),
(514,777,cs),
(541,777,o),
(584,777,o),
(584,754,cs),
(584,605,l),
(485,605,o),
(440,603,o),
(389,603,cs),
(358,603,o),
(277,604,o),
(183,604,c),
(183,766,ls),
(183,790,o),
(236,791,o),
(254,791,cs),
(270,791,o),
(291,791,o),
(291,806,cs),
(291,811,o),
(288,815,o),
(282,818,cs),
(275,820,o),
(261,821,o),
(240,821,cs),
(58,821,ls),
(46,821,o),
(21,821,o),
(21,806,cs),
(21,793,o),
(43,791,o),
(58,791,cs),
(88,791,o),
(138,791,o),
(138,768,cs),
(138,742,o),
(138,715,o),
(138,688,cs),
(138,661,o),
(138,633,o),
(139,605,c),
(85,605,ls),
(74,605,o),
(69,596,o),
(69,588,cs),
(69,580,o),
(76,570,o),
(85,570,cs),
(140,570,l),
(141,511,o),
(142,454,o),
(142,401,cs),
(142,342,o),
(141,287,o),
(140,235,cs),
(139,182,o),
(138,129,o),
(138,74,cs),
(138,30,o),
(98,28,o),
(65,28,cs),
(53,28,o),
(36,25,o),
(36,13,cs),
(36,2,o),
(58,0,o),
(77,0,cs),
(289,0,ls),
(302,0,o),
(309,4,o),
(309,13,cs),
(309,18,o),
(307,23,o),
(304,26,cs),
(300,29,o),
(292,31,o),
(279,31,cs),
(183,31,l),
(183,401,l),
(251,402,o),
(319,403,o),
(387,403,cs),
(404,403,o),
(424,403,o),
(447,403,cs),
(469,402,o),
(491,402,o),
(512,402,cs),
(536,401,o),
(561,401,o),
(587,401,c),
(587,19,ls),
(587,-29,o),
(549,-27,o),
(523,-27,cs),
(511,-27,o),
(494,-30,o),
(494,-42,cs),
(494,-53,o),
(516,-55,o),
(535,-55,cs)
);
},
{
closed = 1;
nodes = (
(251,437,o),
(217,438,o),
(183,439,c),
(183,570,l),
(316,570,o),
(448,571,o),
(584,571,c),
(584,439,l),
(593,439,o),
(527,437,o),
(387,437,cs),
(353,437,o),
(319,437,o),
(285,437,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 19 1 18 1 19 18 104 14 10 21 3 0 20 9 2 1 19 0 1 91 4 1 2 0 3 2 3 87 13 1 11 11 12 83 0 12 12 12 67 17 1 15 15 16 83 0 16 16 14 67 0 5 5 18 83 22 1 18 18 15 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 19 1 18 1 19 18 104 14 10 21 3 0 20 9 2 1 19 0 1 91 22 1 18 0 5 6 18 5 89 4 1 2 0 3 2 3 87 13 1 11 11 12 83 0 12 12 12 67 17 1 15 15 16 83 0 16 16 14 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 19 1 18 1 19 18 104 14 10 21 3 0 20 9 2 1 19 0 1 91 22 1 18 0 5 6 18 5 89 4 1 2 0 3 2 3 87 13 1 11 11 12 83 0 12 12 14 67 17 1 15 15 16 83 0 16 16 14 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 70 values pushed */
0 19 1 18 1 19 18 104 0 16 17 1 15 0 16 15 91 14 10 21 3 0 20 9 2 1 19 0 1 91 22 1 18 0 5 6 18 5 89 4 1 2 0 3 2 3 87 13 1 11 11 12 83 0 12 12 14 67 8 1 6 6 7 83 0 7 7 13 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 52 values pushed */
144 140 1 0 151 146 145 144 140 154 144 152 131 128 124 121 117 114 110 100 96 93 89 86 82 79 73 71 67 65 56 53 49 46 43 41 40 32 28 25 21 18 15 13 7 5 0 139 1 137 23 15
CALL[ ]	/* CallFunction */";
};
width = 775;
}
);
note = Hbar;
unicode = 294;
},
{
glyphname = Hcircumflex;
kernLeft = B;
kernRight = H;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(791,-55,ls),
(804,-55,o),
(819,-50,o),
(819,-26,cs),
(819,5,o),
(796,8,o),
(781,8,cs),
(685,8,l),
(685,51,o),
(675,223,o),
(675,401,cs),
(675,498,o),
(677,623,o),
(677,705,cs),
(677,731,o),
(682,745,o),
(758,745,cs),
(771,745,o),
(803,747,o),
(803,776,cs),
(803,803,o),
(787,807,o),
(744,807,cs),
(555,807,ls),
(527,807,o),
(505,799,o),
(505,775,cs),
(505,753,o),
(518,741,o),
(545,738,cs),
(568,735,o),
(581,728,o),
(581,712,cs),
(581,463,l),
(587,463,o),
(539,461,o),
(435,461,cs),
(401,461,o),
(367,461,o),
(333,461,cs),
(299,461,o),
(265,461,o),
(231,462,c),
(231,717,ls),
(231,748,o),
(246,757,o),
(295,757,cs),
(321,757,o),
(347,767,o),
(347,790,cs),
(347,814,o),
(331,821,o),
(288,821,cs),
(89,821,ls),
(72,821,o),
(50,813,o),
(50,788,cs),
(50,764,o),
(63,752,o),
(89,752,cs),
(124,752,o),
(135,744,o),
(135,721,cs),
(135,668,o),
(136,615,o),
(137,561,cs),
(138,507,o),
(139,454,o),
(139,401,cs),
(139,296,o),
(135,211,o),
(135,114,cs),
(135,75,o),
(117,68,o),
(96,68,cs),
(65,68,o),
(53,49,o),
(53,29,cs),
(53,5,o),
(81,0,o),
(108,0,cs),
(337,0,ls),
(350,0,o),
(365,4,o),
(365,35,cs),
(365,50,o),
(352,63,o),
(327,63,cs),
(231,63,l),
(231,377,l),
(299,378,o),
(367,379,o),
(435,379,cs),
(448,379,o),
(463,379,o),
(480,379,cs),
(497,378,o),
(514,378,o),
(529,378,cs),
(547,377,o),
(565,377,o),
(584,377,c),
(584,62,ls),
(584,43,o),
(581,30,o),
(575,25,cs),
(568,19,o),
(561,16,o),
(554,16,cs),
(526,16,o),
(504,3,o),
(504,-22,cs),
(504,-47,o),
(520,-55,o),
(556,-55,cs)
);
},
{
closed = 1;
nodes = (
(329,830,o),
(391,854,o),
(431,880,c),
(490,842,o),
(545,830,o),
(551,830,cs),
(562,830,o),
(564,841,o),
(564,850,cs),
(564,891,o),
(456,972,o),
(431,972,cs),
(420,972,o),
(385,950,o),
(358,928,cs),
(326,902,o),
(298,869,o),
(298,844,cs),
(298,835,o),
(303,830,o),
(312,830,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 2 0 2 106 1 17 2 0 11 0 106 0 14 10 13 10 14 13 104 5 1 3 0 4 3 4 87 16 12 2 10 10 11 83 15 1 11 11 12 67 0 6 6 13 83 0 13 13 23 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 2 0 2 106 1 17 2 0 11 0 106 0 14 10 13 10 14 13 104 5 1 3 0 4 3 4 87 16 12 2 10 10 11 83 0 11 11 12 67 16 12 2 10 10 15 83 0 15 15 14 67 0 6 6 13 83 0 13 13 23 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 2 0 2 106 1 17 2 0 11 0 106 0 14 10 13 10 14 13 104 0 13 0 6 7 13 6 90 5 1 3 0 4 3 4 87 16 12 2 10 10 11 83 0 11 11 12 67 16 12 2 10 10 15 83 0 15 15 14 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 2 0 2 106 1 17 2 0 11 0 106 0 14 10 13 10 14 13 104 0 5 7 3 3 5 96 0 13 0 6 7 13 6 90 0 3 0 4 3 4 88 16 12 2 10 10 11 83 0 11 11 12 67 16 12 2 10 10 15 83 0 15 15 14 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 2 0 2 106 1 17 2 0 11 0 106 0 14 16 13 16 14 13 104 0 5 7 3 3 5 96 0 13 0 6 7 13 6 90 0 3 0 4 3 4 88 12 1 10 10 11 83 0 11 11 12 67 0 16 16 15 83 0 15 15 14 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 87 values pushed */
0 2 0 2 106 1 17 2 0 11 0 106 0 10 12 16 12 10 96 0 14 16 13 16 14 13 104 0 9 6 7 7 9 96 0 5 7 3 3 5 96 0 13 0 6 9 13 6 90 0 3 0 4 3 4 88 0 12 12 11 83 0 11 11 14 67 0 16 16 15 83 0 15 15 14 67 0 7 7 8 84 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 85 values pushed */
0 2 0 2 106 1 17 2 0 11 0 106 0 10 12 16 12 10 96 0 14 16 13 16 14 13 104 0 9 6 7 7 9 96 0 5 7 3 3 5 96 0 15 0 16 14 15 16 91 0 13 0 6 9 13 6 90 0 3 0 4 3 4 88 0 12 12 11 83 0 11 11 14 67 0 7 7 8 84 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
1 0 135 133 127 124 116 115 115 108 105 103 97 94 91 89 77 75 71 68 64 62 61 53 50 48 44 41 37 35 18 16 11 9 0 24 1 24 18 15
CALL[ ]	/* CallFunction */";
};
width = 829;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(771,-55,ls),
(784,-55,o),
(796,-51,o),
(796,-32,cs),
(796,-9,o),
(776,-4,o),
(761,-4,cs),
(665,-4,l),
(665,40,o),
(655,217,o),
(655,401,cs),
(655,505,o),
(657,642,o),
(657,732,cs),
(657,756,o),
(719,757,o),
(738,757,cs),
(754,757,o),
(780,759,o),
(780,782,cs),
(780,792,o),
(776,799,o),
(768,802,cs),
(760,805,o),
(745,807,o),
(724,807,cs),
(532,807,ls),
(520,807,o),
(495,802,o),
(495,782,cs),
(495,763,o),
(517,757,o),
(532,757,cs),
(551,757,o),
(582,757,o),
(582,734,cs),
(582,454,l),
(590,454,o),
(534,452,o),
(415,452,cs),
(381,452,o),
(347,452,o),
(313,452,cs),
(279,452,o),
(245,453,o),
(211,454,c),
(211,746,ls),
(211,770,o),
(264,771,o),
(282,771,cs),
(298,771,o),
(324,775,o),
(324,796,cs),
(324,805,o),
(320,812,o),
(312,816,cs),
(304,819,o),
(289,821,o),
(268,821,cs),
(76,821,ls),
(64,821,o),
(39,820,o),
(39,796,cs),
(39,776,o),
(61,771,o),
(76,771,cs),
(98,771,o),
(136,770,o),
(136,748,cs),
(136,693,o),
(137,636,o),
(138,575,cs),
(139,514,o),
(140,456,o),
(140,401,cs),
(140,346,o),
(139,294,o),
(138,245,cs),
(137,196,o),
(136,145,o),
(136,94,cs),
(136,48,o),
(104,48,o),
(83,48,cs),
(71,48,o),
(54,46,o),
(54,27,cs),
(54,4,o),
(76,0,o),
(95,0,cs),
(317,0,ls),
(330,0,o),
(342,4,o),
(342,27,cs),
(342,40,o),
(332,51,o),
(307,51,cs),
(211,51,l),
(211,386,l),
(279,387,o),
(347,388,o),
(415,388,cs),
(430,388,o),
(447,388,o),
(467,388,cs),
(486,387,o),
(505,387,o),
(522,387,cs),
(543,386,o),
(564,386,o),
(585,386,c),
(585,39,ls),
(585,-8,o),
(558,-7,o),
(541,-7,cs),
(529,-7,o),
(512,-12,o),
(512,-32,cs),
(512,-53,o),
(534,-55,o),
(553,-55,cs)
);
},
{
closed = 1;
nodes = (
(312,847,o),
(373,874,o),
(413,898,c),
(477,860,o),
(525,847,o),
(533,847,cs),
(541,847,o),
(544,855,o),
(544,864,cs),
(544,900,o),
(437,972,o),
(413,972,cs),
(391,972,o),
(283,901,o),
(283,860,cs),
(283,851,o),
(287,847,o),
(294,847,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 2 0 2 106 1 18 2 0 11 0 106 0 14 15 13 15 14 13 104 5 1 3 0 4 3 4 87 12 1 10 10 11 83 0 11 11 12 67 17 1 15 15 16 83 0 16 16 14 67 0 6 6 13 83 0 13 13 15 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 2 0 2 106 1 18 2 0 11 0 106 0 14 15 13 15 14 13 104 0 13 0 6 7 13 6 90 5 1 3 0 4 3 4 87 12 1 10 10 11 83 0 11 11 12 67 17 1 15 15 16 83 0 16 16 14 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 2 0 2 106 1 18 2 0 11 0 106 0 14 15 13 15 14 13 104 0 13 0 6 7 13 6 90 5 1 3 0 4 3 4 87 12 1 10 10 11 83 0 11 11 14 67 17 1 15 15 16 83 0 16 16 14 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 68 values pushed */
0 2 0 2 106 1 18 2 0 11 0 106 0 14 15 13 15 14 13 104 0 16 17 1 15 14 16 15 91 0 13 0 6 7 13 6 90 5 1 3 0 4 3 4 87 12 1 10 10 11 83 0 11 11 14 67 9 1 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
1 0 142 139 135 132 128 125 121 120 120 113 109 106 102 99 95 92 80 77 73 70 66 64 63 55 51 48 44 41 37 35 18 16 11 9 0 24 1 24 19 15
CALL[ ]	/* CallFunction */";
};
width = 807;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(743,-55,ls),
(756,-55,o),
(763,-51,o),
(763,-42,cs),
(763,-31,o),
(748,-24,o),
(733,-24,cs),
(637,-24,l),
(637,-10,o),
(635,41,o),
(632,129,cs),
(629,208,o),
(627,306,o),
(627,401,cs),
(627,456,o),
(628,517,o),
(628,585,cs),
(628,652,o),
(629,708,o),
(629,752,cs),
(629,776,o),
(691,777,o),
(710,777,cs),
(726,777,o),
(747,777,o),
(747,792,cs),
(747,797,o),
(744,801,o),
(738,804,cs),
(731,806,o),
(717,807,o),
(696,807,cs),
(514,807,ls),
(502,807,o),
(477,807,o),
(477,792,cs),
(477,779,o),
(499,777,o),
(514,777,cs),
(541,777,o),
(584,777,o),
(584,754,cs),
(584,439,l),
(593,439,o),
(527,437,o),
(387,437,cs),
(353,437,o),
(319,437,o),
(285,437,cs),
(251,437,o),
(217,438,o),
(183,439,c),
(183,766,ls),
(183,790,o),
(236,791,o),
(254,791,cs),
(270,791,o),
(291,791,o),
(291,806,cs),
(291,811,o),
(288,815,o),
(282,818,cs),
(275,820,o),
(261,821,o),
(240,821,cs),
(58,821,ls),
(46,821,o),
(21,821,o),
(21,806,cs),
(21,793,o),
(43,791,o),
(58,791,cs),
(88,791,o),
(138,791,o),
(138,768,cs),
(138,709,o),
(139,648,o),
(140,585,cs),
(141,521,o),
(142,460,o),
(142,401,cs),
(142,342,o),
(141,287,o),
(140,235,cs),
(139,182,o),
(138,129,o),
(138,74,cs),
(138,30,o),
(98,28,o),
(65,28,cs),
(53,28,o),
(36,25,o),
(36,13,cs),
(36,2,o),
(58,0,o),
(77,0,cs),
(289,0,ls),
(302,0,o),
(309,4,o),
(309,13,cs),
(309,18,o),
(307,23,o),
(304,26,cs),
(300,29,o),
(292,31,o),
(279,31,cs),
(183,31,l),
(183,401,l),
(251,402,o),
(319,403,o),
(387,403,cs),
(404,403,o),
(424,403,o),
(447,403,cs),
(469,402,o),
(491,402,o),
(512,402,cs),
(536,401,o),
(561,401,o),
(587,401,c),
(587,19,ls),
(587,-29,o),
(549,-27,o),
(523,-27,cs),
(511,-27,o),
(494,-30,o),
(494,-42,cs),
(494,-53,o),
(516,-55,o),
(535,-55,cs)
);
},
{
closed = 1;
nodes = (
(282,876,o),
(351,908,o),
(388,928,c),
(453,894,o),
(501,876,o),
(508,876,cs),
(513,876,o),
(516,880,o),
(516,887,cs),
(516,912,o),
(411,972,o),
(388,972,cs),
(364,972,o),
(261,911,o),
(261,887,cs),
(261,880,o),
(264,876,o),
(269,876,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 2 0 2 106 1 18 2 0 11 0 106 0 14 15 13 15 14 13 104 5 1 3 0 4 3 4 87 12 1 10 10 11 83 0 11 11 12 67 17 1 15 15 16 83 0 16 16 14 67 0 6 6 13 83 0 13 13 15 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 2 0 2 106 1 18 2 0 11 0 106 0 14 15 13 15 14 13 104 0 13 0 6 7 13 6 90 5 1 3 0 4 3 4 87 12 1 10 10 11 83 0 11 11 12 67 17 1 15 15 16 83 0 16 16 14 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 2 0 2 106 1 18 2 0 11 0 106 0 14 15 13 15 14 13 104 0 13 0 6 7 13 6 90 5 1 3 0 4 3 4 87 12 1 10 10 11 83 0 11 11 14 67 17 1 15 15 16 83 0 16 16 14 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 68 values pushed */
0 2 0 2 106 1 18 2 0 11 0 106 0 14 15 13 15 14 13 104 0 16 17 1 15 14 16 15 91 0 13 0 6 7 13 6 90 5 1 3 0 4 3 4 87 12 1 10 10 11 83 0 11 11 14 67 9 1 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
1 0 141 138 134 131 127 124 120 119 119 112 108 105 101 98 94 91 79 76 72 69 66 64 63 55 51 48 44 41 38 36 18 16 11 9 0 23 1 23 19 15
CALL[ ]	/* CallFunction */";
};
width = 775;
}
);
note = Hcircumflex;
unicode = 292;
},
{
glyphname = I;
kernLeft = B;
kernRight = I;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(305,0,ls),
(337,0,o),
(353,10,o),
(353,29,cs),
(353,52,o),
(344,65,o),
(319,65,cs),
(234,65,l),
(236,719,l),
(236,719,l),
(236,744,o),
(261,749,o),
(289,753,cs),
(326,758,o),
(335,770,o),
(335,790,cs),
(335,811,o),
(327,821,o),
(284,821,cs),
(78,821,ls),
(55,821,o),
(31,817,o),
(31,789,cs),
(31,762,o),
(43,755,o),
(78,752,cs),
(103,751,o),
(119,747,o),
(128,742,cs),
(136,737,o),
(140,728,o),
(140,717,cs),
(140,664,o),
(141,611,o),
(142,559,cs),
(143,507,o),
(144,454,o),
(144,401,cs),
(144,348,o),
(143,300,o),
(142,255,cs),
(141,210,o),
(140,162,o),
(140,113,cs),
(140,76,o),
(123,68,o),
(75,64,cs),
(59,63,o),
(43,52,o),
(43,29,cs),
(43,4,o),
(56,0,o),
(77,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 2 2 3 83 0 3 3 12 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 2 2 3 83 0 3 3 14 67 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
33 30 25 24 51 32 4 17
CALL[ ]	/* CallFunction */";
};
width = 374;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(315,0,ls),
(332,0,o),
(335,15,o),
(335,23,cs),
(335,42,o),
(320,51,o),
(305,51,cs),
(214,51,l),
(214,746,l),
(214,746,l),
(214,770,o),
(264,771,o),
(280,771,cs),
(296,771,o),
(317,777,o),
(317,796,cs),
(317,805,o),
(314,811,o),
(308,815,cs),
(301,819,o),
(287,821,o),
(266,821,cs),
(64,821,ls),
(52,821,o),
(27,819,o),
(27,796,cs),
(27,775,o),
(51,771,o),
(64,771,cs),
(88,771,o),
(139,771,o),
(139,748,cs),
(139,693,o),
(140,635,o),
(141,575,cs),
(142,514,o),
(143,456,o),
(143,401,cs),
(143,346,o),
(142,294,o),
(141,245,cs),
(140,196,o),
(139,145,o),
(139,94,cs),
(139,49,o),
(95,48,o),
(71,48,cs),
(59,48,o),
(42,42,o),
(42,23,cs),
(42,3,o),
(63,0,o),
(83,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
5 1 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
5 1 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
52 54 60 52 52 32 6 21
CALL[ ]	/* CallFunction */";
};
width = 354;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(289,0,ls),
(302,0,o),
(309,4,o),
(309,13,cs),
(309,24,o),
(294,31,o),
(279,31,cs),
(183,31,l),
(183,766,ls),
(183,790,o),
(236,791,o),
(254,791,cs),
(270,791,o),
(291,791,o),
(291,806,cs),
(291,811,o),
(288,815,o),
(282,818,cs),
(275,820,o),
(261,821,o),
(240,821,cs),
(58,821,ls),
(46,821,o),
(21,821,o),
(21,806,cs),
(21,793,o),
(43,791,o),
(58,791,cs),
(88,791,o),
(138,791,o),
(138,768,cs),
(138,709,o),
(139,648,o),
(140,585,cs),
(141,521,o),
(142,460,o),
(142,401,cs),
(142,342,o),
(141,287,o),
(140,235,cs),
(139,182,o),
(138,129,o),
(138,74,cs),
(138,30,o),
(98,28,o),
(65,28,cs),
(53,28,o),
(36,25,o),
(36,13,cs),
(36,2,o),
(58,0,o),
(77,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
5 1 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
5 1 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
52 52 60 52 51 32 6 21
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
note = I;
unicode = 73;
},
{
glyphname = IJ;
kernLeft = B;
kernRight = IJ;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(721,-14,o),
(810,83,o),
(810,279,cs),
(810,723,ls),
(810,732,o),
(815,740,o),
(824,745,cs),
(833,750,o),
(848,752,o),
(871,752,cs),
(895,752,o),
(914,763,o),
(914,786,cs),
(914,807,o),
(905,821,o),
(862,821,cs),
(625,821,ls),
(602,821,o),
(588,812,o),
(588,787,cs),
(588,764,o),
(604,753,o),
(635,753,cs),
(656,753,o),
(714,754,o),
(714,730,cs),
(714,723,o),
(717,563,o),
(717,371,cs),
(717,209,o),
(713,53,o),
(557,53,cs),
(485,53,o),
(446,87,o),
(446,135,cs),
(446,155,o),
(453,176,o),
(460,181,c),
(470,172,o),
(482,168,o),
(495,168,cs),
(523,168,o),
(544,189,o),
(544,222,cs),
(544,261,o),
(513,280,o),
(479,280,cs),
(422,280,o),
(376,224,o),
(376,145,cs),
(376,49,o),
(441,-14,o),
(566,-14,cs)
);
},
{
closed = 1;
nodes = (
(305,0,ls),
(337,0,o),
(353,10,o),
(353,29,cs),
(353,52,o),
(344,65,o),
(319,65,cs),
(234,65,l),
(236,719,l),
(236,719,l),
(236,744,o),
(261,749,o),
(289,753,cs),
(326,758,o),
(335,770,o),
(335,790,cs),
(335,811,o),
(327,821,o),
(284,821,cs),
(78,821,ls),
(55,821,o),
(31,817,o),
(31,789,cs),
(31,762,o),
(43,755,o),
(78,752,cs),
(103,751,o),
(119,747,o),
(128,742,cs),
(136,737,o),
(140,728,o),
(140,717,cs),
(140,664,o),
(141,611,o),
(142,559,cs),
(143,507,o),
(144,454,o),
(144,401,cs),
(144,348,o),
(143,300,o),
(142,255,cs),
(141,210,o),
(140,162,o),
(140,113,cs),
(140,76,o),
(123,68,o),
(75,64,cs),
(59,63,o),
(43,52,o),
(43,29,cs),
(43,4,o),
(56,0,o),
(77,0,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
97 1 10 9 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 9 0 10 0 9 10 91 7 5 2 2 2 3 83 6 1 3 3 12 67 4 1 0 0 1 83 8 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 9 0 10 0 9 10 91 7 5 2 2 2 3 83 6 1 3 3 12 67 4 1 0 0 1 83 0 1 1 13 67 4 1 0 0 8 83 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 9 0 10 0 9 10 91 7 5 2 2 2 3 83 6 1 3 3 12 67 0 0 0 1 83 0 1 1 13 67 0 4 4 8 83 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 9 0 10 0 9 10 91 7 5 2 2 2 3 83 6 1 3 3 14 67 0 0 0 1 83 0 1 1 13 67 0 4 4 8 83 0 8 8 21 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
96 94 88 86 80 78 73 71 67 64 61 58 46 44 33 30 25 24 51 32 11 17
CALL[ ]	/* CallFunction */";
};
width = 919;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(688,-14,o),
(763,83,o),
(763,279,cs),
(763,746,ls),
(763,770,o),
(802,771,o),
(814,771,cs),
(830,771,o),
(851,777,o),
(851,796,cs),
(851,805,o),
(848,811,o),
(842,815,cs),
(835,819,o),
(821,821,o),
(800,821,cs),
(603,821,ls),
(591,821,o),
(566,819,o),
(566,796,cs),
(566,777,o),
(588,771,o),
(603,771,cs),
(618,771,o),
(688,773,o),
(688,748,cs),
(688,747,o),
(691,583,o),
(691,379,cs),
(691,203,o),
(686,50,o),
(526,50,cs),
(472,50,o),
(411,79,o),
(411,135,cs),
(411,155,o),
(417,175,o),
(428,182,c),
(437,174,o),
(448,170,o),
(461,170,cs),
(486,170,o),
(497,192,o),
(497,216,cs),
(497,251,o),
(464,264,o),
(443,264,cs),
(388,264,o),
(350,213,o),
(350,137,cs),
(350,50,o),
(424,-14,o),
(521,-14,cs)
);
},
{
closed = 1;
nodes = (
(315,0,ls),
(332,0,o),
(335,15,o),
(335,23,cs),
(335,42,o),
(320,51,o),
(305,51,cs),
(214,51,l),
(214,746,l),
(214,746,l),
(214,770,o),
(264,771,o),
(280,771,cs),
(296,771,o),
(317,777,o),
(317,796,cs),
(317,805,o),
(314,811,o),
(308,815,cs),
(301,819,o),
(287,821,o),
(266,821,cs),
(64,821,ls),
(52,821,o),
(27,819,o),
(27,796,cs),
(27,775,o),
(51,771,o),
(64,771,cs),
(88,771,o),
(139,771,o),
(139,748,cs),
(139,693,o),
(140,635,o),
(141,575,cs),
(142,514,o),
(143,456,o),
(143,401,cs),
(143,346,o),
(142,294,o),
(141,245,cs),
(140,196,o),
(139,145,o),
(139,94,cs),
(139,49,o),
(95,48,o),
(71,48,cs),
(59,48,o),
(42,42,o),
(42,23,cs),
(42,3,o),
(63,0,o),
(83,0,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
112 1 12 11 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 11 0 12 0 11 12 91 9 7 5 3 3 3 4 83 8 1 4 4 12 67 6 2 2 0 0 1 83 0 1 1 13 67 6 2 2 0 0 10 83 0 10 10 21 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 11 0 12 0 11 12 91 9 7 5 3 3 3 4 83 8 1 4 4 14 67 6 2 2 0 0 1 83 0 1 1 13 67 6 2 2 0 0 10 83 0 10 10 21 10 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
111 109 103 101 95 93 87 84 52 60 40 52 54 60 52 52 33 13 35
CALL[ ]	/* CallFunction */";
};
width = 877;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(628,-14,o),
(696,83,o),
(696,279,cs),
(696,766,ls),
(696,790,o),
(749,791,o),
(767,791,cs),
(783,791,o),
(804,791,o),
(804,806,cs),
(804,811,o),
(801,815,o),
(795,818,cs),
(788,820,o),
(774,821,o),
(753,821,cs),
(571,821,ls),
(559,821,o),
(534,821,o),
(534,806,cs),
(534,793,o),
(556,791,o),
(571,791,cs),
(601,791,o),
(651,791,o),
(651,768,cs),
(651,750,o),
(651,710,o),
(653,619,cs),
(654,541,o),
(654,467,o),
(654,379,cs),
(654,284,o),
(654,195,o),
(633,129,cs),
(612,63,o),
(569,20,o),
(484,20,cs),
(410,20,o),
(344,59,o),
(344,131,cs),
(344,151,o),
(348,175,o),
(365,182,c),
(372,174,o),
(381,167,o),
(392,167,cs),
(408,167,o),
(429,177,o),
(429,204,cs),
(429,227,o),
(406,237,o),
(393,237,cs),
(322,237,o),
(313,160,o),
(313,137,cs),
(313,48,o),
(385,-14,o),
(479,-14,cs)
);
},
{
closed = 1;
nodes = (
(289,0,ls),
(302,0,o),
(309,4,o),
(309,13,cs),
(309,24,o),
(294,31,o),
(279,31,cs),
(183,31,l),
(183,766,ls),
(183,790,o),
(236,791,o),
(254,791,cs),
(270,791,o),
(291,791,o),
(291,806,cs),
(291,811,o),
(288,815,o),
(282,818,cs),
(275,820,o),
(261,821,o),
(240,821,cs),
(58,821,ls),
(46,821,o),
(21,821,o),
(21,806,cs),
(21,793,o),
(43,791,o),
(58,791,cs),
(88,791,o),
(138,791,o),
(138,768,cs),
(138,709,o),
(139,648,o),
(140,585,cs),
(141,521,o),
(142,460,o),
(142,401,cs),
(142,342,o),
(141,287,o),
(140,235,cs),
(139,182,o),
(138,129,o),
(138,74,cs),
(138,30,o),
(98,28,o),
(65,28,cs),
(53,28,o),
(36,25,o),
(36,13,cs),
(36,2,o),
(58,0,o),
(77,0,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
112 1 12 11 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 11 0 12 0 11 12 91 9 7 5 3 3 3 4 83 8 1 4 4 12 67 2 1 0 0 1 83 0 1 1 13 67 0 6 6 10 83 0 10 10 21 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 11 0 12 0 11 12 91 9 7 5 3 3 3 4 83 8 1 4 4 14 67 2 1 0 0 1 83 0 1 1 13 67 0 6 6 10 83 0 10 10 21 10 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
110 108 104 102 94 92 86 83 52 62 40 52 52 60 52 51 33 13 35
CALL[ ]	/* CallFunction */";
};
width = 817;
}
);
note = IJ;
unicode = 306;
},
{
glyphname = Iacute;
kernLeft = B;
kernRight = I;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(305,0,ls),
(337,0,o),
(353,10,o),
(353,29,cs),
(353,52,o),
(344,65,o),
(319,65,cs),
(234,65,l),
(236,719,l),
(236,719,l),
(236,744,o),
(261,749,o),
(289,753,cs),
(326,758,o),
(335,770,o),
(335,790,cs),
(335,811,o),
(327,821,o),
(284,821,cs),
(78,821,ls),
(55,821,o),
(31,817,o),
(31,789,cs),
(31,762,o),
(43,755,o),
(78,752,cs),
(103,751,o),
(119,747,o),
(128,742,cs),
(136,737,o),
(140,728,o),
(140,717,cs),
(140,664,o),
(141,611,o),
(142,559,cs),
(143,507,o),
(144,454,o),
(144,401,cs),
(144,348,o),
(143,300,o),
(142,255,cs),
(141,210,o),
(140,162,o),
(140,113,cs),
(140,76,o),
(123,68,o),
(75,64,cs),
(59,63,o),
(43,52,o),
(43,29,cs),
(43,4,o),
(56,0,o),
(77,0,cs)
);
},
{
closed = 1;
nodes = (
(173,841,o),
(260,897,o),
(260,936,cs),
(260,953,o),
(246,972,o),
(219,972,cs),
(181,972,o),
(105,899,o),
(105,872,cs),
(105,856,o),
(120,841,o),
(140,841,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 1 0 1 106 0 0 5 0 106 0 4 4 5 83 0 5 5 12 67 0 2 2 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 1 0 1 106 0 0 5 0 106 0 4 4 5 83 0 5 5 14 67 0 2 2 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
49 46 41 40 51 34 38 36 6 19
CALL[ ]	/* CallFunction */";
};
width = 374;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(315,0,ls),
(332,0,o),
(335,15,o),
(335,23,cs),
(335,42,o),
(320,51,o),
(305,51,cs),
(214,51,l),
(214,746,l),
(214,746,l),
(214,770,o),
(264,771,o),
(280,771,cs),
(296,771,o),
(317,777,o),
(317,796,cs),
(317,805,o),
(314,811,o),
(308,815,cs),
(301,819,o),
(287,821,o),
(266,821,cs),
(64,821,ls),
(52,821,o),
(27,819,o),
(27,796,cs),
(27,775,o),
(51,771,o),
(64,771,cs),
(88,771,o),
(139,771,o),
(139,748,cs),
(139,693,o),
(140,635,o),
(141,575,cs),
(142,514,o),
(143,456,o),
(143,401,cs),
(143,346,o),
(142,294,o),
(141,245,cs),
(140,196,o),
(139,145,o),
(139,94,cs),
(139,49,o),
(95,48,o),
(71,48,cs),
(59,48,o),
(42,42,o),
(42,23,cs),
(42,3,o),
(63,0,o),
(83,0,cs)
);
},
{
closed = 1;
nodes = (
(152,854,o),
(240,908,o),
(240,941,cs),
(240,960,o),
(228,972,o),
(208,972,cs),
(179,972,o),
(102,904,o),
(102,877,cs),
(102,864,o),
(111,854,o),
(126,854,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 1 0 1 106 0 0 6 0 106 7 1 5 5 6 83 0 6 6 12 67 4 1 2 2 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 0 1 106 0 0 6 0 106 7 1 5 5 6 83 0 6 6 14 67 4 1 2 2 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
52 54 60 52 52 34 38 36 8 23
CALL[ ]	/* CallFunction */";
};
width = 354;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(289,0,ls),
(302,0,o),
(309,4,o),
(309,13,cs),
(309,24,o),
(294,31,o),
(279,31,cs),
(183,31,l),
(183,766,ls),
(183,790,o),
(236,791,o),
(254,791,cs),
(270,791,o),
(291,791,o),
(291,806,cs),
(291,811,o),
(288,815,o),
(282,818,cs),
(275,820,o),
(261,821,o),
(240,821,cs),
(58,821,ls),
(46,821,o),
(21,821,o),
(21,806,cs),
(21,793,o),
(43,791,o),
(58,791,cs),
(88,791,o),
(138,791,o),
(138,768,cs),
(138,709,o),
(139,648,o),
(140,585,cs),
(141,521,o),
(142,460,o),
(142,401,cs),
(142,342,o),
(141,287,o),
(140,235,cs),
(139,182,o),
(138,129,o),
(138,74,cs),
(138,30,o),
(98,28,o),
(65,28,cs),
(53,28,o),
(36,25,o),
(36,13,cs),
(36,2,o),
(58,0,o),
(77,0,cs)
);
},
{
closed = 1;
nodes = (
(122,875,o),
(212,928,o),
(212,950,cs),
(212,969,o),
(204,972,o),
(193,972,cs),
(173,972,o),
(98,911,o),
(98,886,cs),
(98,879,o),
(101,875,o),
(106,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 1 0 1 106 0 0 6 0 106 7 1 5 5 6 83 0 6 6 12 67 4 1 2 2 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 0 1 106 0 0 6 0 106 7 1 5 5 6 83 0 6 6 14 67 4 1 2 2 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
52 52 60 52 51 34 37 36 8 23
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
note = Iacute;
unicode = 205;
},
{
glyphname = Ibreve;
kernLeft = B;
kernRight = I;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(305,0,ls),
(337,0,o),
(353,10,o),
(353,29,cs),
(353,52,o),
(344,65,o),
(319,65,cs),
(234,65,l),
(236,719,l),
(236,719,l),
(236,744,o),
(261,749,o),
(289,753,cs),
(326,758,o),
(335,770,o),
(335,790,cs),
(335,811,o),
(327,821,o),
(284,821,cs),
(78,821,ls),
(55,821,o),
(31,817,o),
(31,789,cs),
(31,762,o),
(43,755,o),
(78,752,cs),
(103,751,o),
(119,747,o),
(128,742,cs),
(136,737,o),
(140,728,o),
(140,717,cs),
(140,664,o),
(141,611,o),
(142,559,cs),
(143,507,o),
(144,454,o),
(144,401,cs),
(144,348,o),
(143,300,o),
(142,255,cs),
(141,210,o),
(140,162,o),
(140,113,cs),
(140,76,o),
(123,68,o),
(75,64,cs),
(59,63,o),
(43,52,o),
(43,29,cs),
(43,4,o),
(56,0,o),
(77,0,cs)
);
},
{
closed = 1;
nodes = (
(241,862,o),
(310,889,o),
(310,941,cs),
(310,968,o),
(292,971,o),
(272,971,cs),
(255,971,o),
(240,957,o),
(240,942,cs),
(240,937,o),
(236,932,o),
(227,927,cs),
(218,922,o),
(203,919,o),
(184,919,cs),
(154,919,o),
(125,927,o),
(125,942,cs),
(125,965,o),
(112,971,o),
(89,971,cs),
(66,971,o),
(57,958,o),
(57,941,cs),
(57,898,o),
(102,862,o),
(189,862,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
7 1 5 6 5 106 0 6 0 4 3 6 4 91 0 2 2 3 83 0 3 3 12 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
7 1 5 6 5 106 0 6 0 4 3 6 4 91 0 2 2 3 83 0 3 3 14 67 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
68 66 62 60 54 52 48 46 33 30 25 24 51 32 8 17
CALL[ ]	/* CallFunction */";
};
width = 374;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(315,0,ls),
(332,0,o),
(335,15,o),
(335,23,cs),
(335,42,o),
(320,51,o),
(305,51,cs),
(214,51,l),
(214,746,l),
(214,746,l),
(214,770,o),
(264,771,o),
(280,771,cs),
(296,771,o),
(317,777,o),
(317,796,cs),
(317,805,o),
(314,811,o),
(308,815,cs),
(301,819,o),
(287,821,o),
(266,821,cs),
(64,821,ls),
(52,821,o),
(27,819,o),
(27,796,cs),
(27,775,o),
(51,771,o),
(64,771,cs),
(88,771,o),
(139,771,o),
(139,748,cs),
(139,693,o),
(140,635,o),
(141,575,cs),
(142,514,o),
(143,456,o),
(143,401,cs),
(143,346,o),
(142,294,o),
(141,245,cs),
(140,196,o),
(139,145,o),
(139,94,cs),
(139,49,o),
(95,48,o),
(71,48,cs),
(59,48,o),
(42,42,o),
(42,23,cs),
(42,3,o),
(63,0,o),
(83,0,cs)
);
},
{
closed = 1;
nodes = (
(228,865,o),
(294,892,o),
(294,944,cs),
(294,971,o),
(277,972,o),
(264,972,cs),
(249,972,o),
(238,960,o),
(238,945,cs),
(238,928,o),
(213,910,o),
(174,910,cs),
(144,910,o),
(109,919,o),
(109,945,cs),
(109,965,o),
(100,972,o),
(81,972,cs),
(64,972,o),
(55,963,o),
(55,944,cs),
(55,903,o),
(101,865,o),
(177,865,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
9 1 7 8 7 106 0 8 0 6 4 8 6 91 5 1 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
9 1 7 8 7 106 0 8 0 6 4 8 6 91 5 1 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
77 75 38 35 40 52 54 60 52 52 33 10 35
CALL[ ]	/* CallFunction */";
};
width = 354;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(289,0,ls),
(302,0,o),
(309,4,o),
(309,13,cs),
(309,24,o),
(294,31,o),
(279,31,cs),
(183,31,l),
(183,766,ls),
(183,790,o),
(236,791,o),
(254,791,cs),
(270,791,o),
(291,791,o),
(291,806,cs),
(291,811,o),
(288,815,o),
(282,818,cs),
(275,820,o),
(261,821,o),
(240,821,cs),
(58,821,ls),
(46,821,o),
(21,821,o),
(21,806,cs),
(21,793,o),
(43,791,o),
(58,791,cs),
(88,791,o),
(138,791,o),
(138,768,cs),
(138,709,o),
(139,648,o),
(140,585,cs),
(141,521,o),
(142,460,o),
(142,401,cs),
(142,342,o),
(141,287,o),
(140,235,cs),
(139,182,o),
(138,129,o),
(138,74,cs),
(138,30,o),
(98,28,o),
(65,28,cs),
(53,28,o),
(36,25,o),
(36,13,cs),
(36,2,o),
(58,0,o),
(77,0,cs)
);
},
{
closed = 1;
nodes = (
(211,875,o),
(269,899,o),
(269,948,cs),
(269,969,o),
(261,972,o),
(250,972,cs),
(239,972,o),
(233,964,o),
(233,949,cs),
(233,922,o),
(194,900,o),
(158,900,cs),
(116,900,o),
(84,910,o),
(84,949,cs),
(84,965,o),
(82,972,o),
(67,972,cs),
(56,972,o),
(50,964,o),
(50,948,cs),
(50,908,o),
(98,875,o),
(158,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
3 1 1 2 1 106 0 2 0 0 8 2 0 91 9 1 7 7 8 83 0 8 8 12 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
3 1 1 2 1 106 0 2 0 0 8 2 0 91 9 1 7 7 8 83 0 8 8 14 67 6 1 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
72 69 52 60 52 51 34 37 38 35 36 10 24
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
note = Ibreve;
unicode = 300;
},
{
glyphname = Icircumflex;
kernLeft = B;
kernRight = I;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(305,0,ls),
(337,0,o),
(353,10,o),
(353,29,cs),
(353,52,o),
(344,65,o),
(319,65,cs),
(234,65,l),
(236,719,l),
(236,719,l),
(236,744,o),
(261,749,o),
(289,753,cs),
(326,758,o),
(335,770,o),
(335,790,cs),
(335,811,o),
(327,821,o),
(284,821,cs),
(78,821,ls),
(55,821,o),
(31,817,o),
(31,789,cs),
(31,762,o),
(43,755,o),
(78,752,cs),
(103,751,o),
(119,747,o),
(128,742,cs),
(136,737,o),
(140,728,o),
(140,717,cs),
(140,664,o),
(141,611,o),
(142,559,cs),
(143,507,o),
(144,454,o),
(144,401,cs),
(144,348,o),
(143,300,o),
(142,255,cs),
(141,210,o),
(140,162,o),
(140,113,cs),
(140,76,o),
(123,68,o),
(75,64,cs),
(59,63,o),
(43,52,o),
(43,29,cs),
(43,4,o),
(56,0,o),
(77,0,cs)
);
},
{
closed = 1;
nodes = (
(80,830,o),
(141,853,o),
(182,880,c),
(241,842,o),
(296,830,o),
(302,830,cs),
(313,830,o),
(315,842,o),
(315,851,cs),
(315,892,o),
(207,972,o),
(182,972,cs),
(171,972,o),
(136,950,o),
(109,928,cs),
(78,903,o),
(50,871,o),
(50,844,cs),
(50,837,o),
(55,830,o),
(63,830,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 2 106 1 7 2 0 6 0 106 0 5 5 6 83 0 6 6 12 67 0 3 3 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 2 106 1 7 2 0 6 0 106 0 5 5 6 83 0 6 6 14 67 0 3 3 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
1 0 59 56 51 50 34 31 28 26 19 17 11 9 0 25 1 25 8 15
CALL[ ]	/* CallFunction */";
};
width = 374;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(315,0,ls),
(332,0,o),
(335,15,o),
(335,23,cs),
(335,42,o),
(320,51,o),
(305,51,cs),
(214,51,l),
(214,746,l),
(214,746,l),
(214,770,o),
(264,771,o),
(280,771,cs),
(296,771,o),
(317,777,o),
(317,796,cs),
(317,805,o),
(314,811,o),
(308,815,cs),
(301,819,o),
(287,821,o),
(266,821,cs),
(64,821,ls),
(52,821,o),
(27,819,o),
(27,796,cs),
(27,775,o),
(51,771,o),
(64,771,cs),
(88,771,o),
(139,771,o),
(139,748,cs),
(139,693,o),
(140,635,o),
(141,575,cs),
(142,514,o),
(143,456,o),
(143,401,cs),
(143,346,o),
(142,294,o),
(141,245,cs),
(140,196,o),
(139,145,o),
(139,94,cs),
(139,49,o),
(95,48,o),
(71,48,cs),
(59,48,o),
(42,42,o),
(42,23,cs),
(42,3,o),
(63,0,o),
(83,0,cs)
);
},
{
closed = 1;
nodes = (
(70,847,o),
(131,874,o),
(171,898,c),
(235,860,o),
(283,847,o),
(291,847,cs),
(299,847,o),
(302,855,o),
(302,864,cs),
(302,900,o),
(195,972,o),
(171,972,cs),
(149,972,o),
(41,901,o),
(41,860,cs),
(41,851,o),
(45,847,o),
(52,847,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 2 0 2 106 1 9 2 0 7 0 106 8 1 6 6 7 83 0 7 7 12 67 5 1 3 3 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 0 2 106 1 9 2 0 7 0 106 8 1 6 6 7 83 0 7 7 14 67 5 1 3 3 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
1 0 72 69 65 62 56 53 41 38 34 31 27 25 18 16 11 9 0 24 1 24 10 15
CALL[ ]	/* CallFunction */";
};
width = 354;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(289,0,ls),
(302,0,o),
(309,4,o),
(309,13,cs),
(309,24,o),
(294,31,o),
(279,31,cs),
(183,31,l),
(183,766,ls),
(183,790,o),
(236,791,o),
(254,791,cs),
(270,791,o),
(291,791,o),
(291,806,cs),
(291,811,o),
(288,815,o),
(282,818,cs),
(275,820,o),
(261,821,o),
(240,821,cs),
(58,821,ls),
(46,821,o),
(21,821,o),
(21,806,cs),
(21,793,o),
(43,791,o),
(58,791,cs),
(88,791,o),
(138,791,o),
(138,768,cs),
(138,709,o),
(139,648,o),
(140,585,cs),
(141,521,o),
(142,460,o),
(142,401,cs),
(142,342,o),
(141,287,o),
(140,235,cs),
(139,182,o),
(138,129,o),
(138,74,cs),
(138,30,o),
(98,28,o),
(65,28,cs),
(53,28,o),
(36,25,o),
(36,13,cs),
(36,2,o),
(58,0,o),
(77,0,cs)
);
},
{
closed = 1;
nodes = (
(43,875,o),
(91,894,o),
(155,928,c),
(219,894,o),
(267,875,o),
(275,875,cs),
(280,875,o),
(283,879,o),
(283,886,cs),
(283,911,o),
(181,972,o),
(155,972,cs),
(132,972,o),
(28,911,o),
(28,886,cs),
(28,879,o),
(31,875,o),
(36,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 2 0 2 106 1 9 2 0 7 0 106 8 1 6 6 7 83 0 7 7 12 67 5 1 3 3 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 0 2 106 1 9 2 0 7 0 106 8 1 6 6 7 83 0 7 7 14 67 5 1 3 3 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
1 0 68 65 61 58 54 51 39 36 32 29 26 24 18 16 11 9 0 23 1 23 10 15
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
note = Icircumflex;
unicode = 206;
},
{
glyphname = Idieresis;
kernLeft = B;
kernRight = I;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(305,0,ls),
(337,0,o),
(353,10,o),
(353,29,cs),
(353,52,o),
(344,65,o),
(319,65,cs),
(234,65,l),
(236,719,l),
(236,719,l),
(236,744,o),
(261,749,o),
(289,753,cs),
(326,758,o),
(335,770,o),
(335,790,cs),
(335,811,o),
(327,821,o),
(284,821,cs),
(78,821,ls),
(55,821,o),
(31,817,o),
(31,789,cs),
(31,762,o),
(43,755,o),
(78,752,cs),
(103,751,o),
(119,747,o),
(128,742,cs),
(136,737,o),
(140,728,o),
(140,717,cs),
(140,664,o),
(141,611,o),
(142,559,cs),
(143,507,o),
(144,454,o),
(144,401,cs),
(144,348,o),
(143,300,o),
(142,255,cs),
(141,210,o),
(140,162,o),
(140,113,cs),
(140,76,o),
(123,68,o),
(75,64,cs),
(59,63,o),
(43,52,o),
(43,29,cs),
(43,4,o),
(56,0,o),
(77,0,cs)
);
},
{
closed = 1;
nodes = (
(107,841,o),
(144,856,o),
(144,911,cs),
(144,947,o),
(116,972,o),
(84,972,cs),
(37,972,o),
(18,931,o),
(18,907,cs),
(18,868,o),
(45,841,o),
(77,841,cs)
);
},
{
closed = 1;
nodes = (
(314,830,o),
(351,845,o),
(351,900,cs),
(351,937,o),
(323,961,o),
(291,961,cs),
(244,961,o),
(225,920,o),
(225,896,cs),
(225,857,o),
(252,830,o),
(284,830,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
2 1 0 3 1 1 7 0 1 91 0 6 6 7 83 0 7 7 12 67 0 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 7 2 3 91 0 6 6 7 83 0 7 7 12 67 0 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 7 2 3 91 0 6 6 7 83 0 7 7 14 67 0 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
65 62 57 56 51 34 38 38 38 36 8 21
CALL[ ]	/* CallFunction */";
};
width = 374;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(315,0,ls),
(332,0,o),
(335,15,o),
(335,23,cs),
(335,42,o),
(320,51,o),
(305,51,cs),
(214,51,l),
(214,746,l),
(214,746,l),
(214,770,o),
(264,771,o),
(280,771,cs),
(296,771,o),
(317,777,o),
(317,796,cs),
(317,805,o),
(314,811,o),
(308,815,cs),
(301,819,o),
(287,821,o),
(266,821,cs),
(64,821,ls),
(52,821,o),
(27,819,o),
(27,796,cs),
(27,775,o),
(51,771,o),
(64,771,cs),
(88,771,o),
(139,771,o),
(139,748,cs),
(139,693,o),
(140,635,o),
(141,575,cs),
(142,514,o),
(143,456,o),
(143,401,cs),
(143,346,o),
(142,294,o),
(141,245,cs),
(140,196,o),
(139,145,o),
(139,94,cs),
(139,49,o),
(95,48,o),
(71,48,cs),
(59,48,o),
(42,42,o),
(42,23,cs),
(42,3,o),
(63,0,o),
(83,0,cs)
);
},
{
closed = 1;
nodes = (
(91,859,o),
(122,872,o),
(122,920,cs),
(122,951,o),
(100,972,o),
(73,972,cs),
(35,972,o),
(17,937,o),
(17,916,cs),
(17,883,o),
(39,859,o),
(66,859,cs)
);
},
{
closed = 1;
nodes = (
(298,847,o),
(329,860,o),
(329,908,cs),
(329,939,o),
(307,960,o),
(280,960,cs),
(242,960,o),
(224,925,o),
(224,904,cs),
(224,871,o),
(246,847,o),
(273,847,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 9 1 7 7 8 83 0 8 8 12 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 9 1 7 7 8 83 0 8 8 14 67 6 1 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
75 72 54 60 52 52 34 36 38 36 36 10 24
CALL[ ]	/* CallFunction */";
};
width = 354;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(289,0,ls),
(302,0,o),
(309,4,o),
(309,13,cs),
(309,24,o),
(294,31,o),
(279,31,cs),
(183,31,l),
(183,766,ls),
(183,790,o),
(236,791,o),
(254,791,cs),
(270,791,o),
(291,791,o),
(291,806,cs),
(291,811,o),
(288,815,o),
(282,818,cs),
(275,820,o),
(261,821,o),
(240,821,cs),
(58,821,ls),
(46,821,o),
(21,821,o),
(21,806,cs),
(21,793,o),
(43,791,o),
(58,791,cs),
(88,791,o),
(138,791,o),
(138,768,cs),
(138,709,o),
(139,648,o),
(140,585,cs),
(141,521,o),
(142,460,o),
(142,401,cs),
(142,342,o),
(141,287,o),
(140,235,cs),
(139,182,o),
(138,129,o),
(138,74,cs),
(138,30,o),
(98,28,o),
(65,28,cs),
(53,28,o),
(36,25,o),
(36,13,cs),
(36,2,o),
(58,0,o),
(77,0,cs)
);
},
{
closed = 1;
nodes = (
(69,889,o),
(91,899,o),
(91,935,cs),
(91,958,o),
(76,972,o),
(57,972,cs),
(29,972,o),
(16,945,o),
(16,931,cs),
(16,907,o),
(31,889,o),
(50,889,cs)
);
},
{
closed = 1;
nodes = (
(276,875,o),
(298,885,o),
(298,921,cs),
(298,944,o),
(283,958,o),
(264,958,cs),
(236,958,o),
(223,931,o),
(223,917,cs),
(223,893,o),
(238,875,o),
(257,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 9 1 7 7 8 83 0 8 8 12 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 9 1 7 7 8 83 0 8 8 14 67 6 1 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
72 69 52 60 52 51 34 36 38 36 36 10 24
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
note = Idieresis;
unicode = 207;
},
{
glyphname = Idotaccent;
kernLeft = B;
kernRight = I;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(305,0,ls),
(337,0,o),
(353,10,o),
(353,29,cs),
(353,52,o),
(344,65,o),
(319,65,cs),
(234,65,l),
(236,719,l),
(236,719,l),
(236,744,o),
(261,749,o),
(289,753,cs),
(326,758,o),
(335,770,o),
(335,790,cs),
(335,811,o),
(327,821,o),
(284,821,cs),
(78,821,ls),
(55,821,o),
(31,817,o),
(31,789,cs),
(31,762,o),
(43,755,o),
(78,752,cs),
(103,751,o),
(119,747,o),
(128,742,cs),
(136,737,o),
(140,728,o),
(140,717,cs),
(140,664,o),
(141,611,o),
(142,559,cs),
(143,507,o),
(144,454,o),
(144,401,cs),
(144,348,o),
(143,300,o),
(142,255,cs),
(141,210,o),
(140,162,o),
(140,113,cs),
(140,76,o),
(123,68,o),
(75,64,cs),
(59,63,o),
(43,52,o),
(43,29,cs),
(43,4,o),
(56,0,o),
(77,0,cs)
);
},
{
closed = 1;
nodes = (
(213,840,o),
(250,855,o),
(250,910,cs),
(250,946,o),
(222,971,o),
(190,971,cs),
(142,971,o),
(124,933,o),
(124,906,cs),
(124,863,o),
(150,840,o),
(183,840,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 0 5 3 4 5 91 0 2 2 3 83 0 3 3 12 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 4 0 5 3 4 5 91 0 2 2 3 83 0 3 3 14 67 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
56 54 48 46 33 30 25 24 51 32 6 17
CALL[ ]	/* CallFunction */";
};
width = 374;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(315,0,ls),
(332,0,o),
(335,15,o),
(335,23,cs),
(335,42,o),
(320,51,o),
(305,51,cs),
(214,51,l),
(214,746,l),
(214,746,l),
(214,770,o),
(264,771,o),
(280,771,cs),
(296,771,o),
(317,777,o),
(317,796,cs),
(317,805,o),
(314,811,o),
(308,815,cs),
(301,819,o),
(287,821,o),
(266,821,cs),
(64,821,ls),
(52,821,o),
(27,819,o),
(27,796,cs),
(27,775,o),
(51,771,o),
(64,771,cs),
(88,771,o),
(139,771,o),
(139,748,cs),
(139,693,o),
(140,635,o),
(141,575,cs),
(142,514,o),
(143,456,o),
(143,401,cs),
(143,346,o),
(142,294,o),
(141,245,cs),
(140,196,o),
(139,145,o),
(139,94,cs),
(139,49,o),
(95,48,o),
(71,48,cs),
(59,48,o),
(42,42,o),
(42,23,cs),
(42,3,o),
(63,0,o),
(83,0,cs)
);
},
{
closed = 1;
nodes = (
(196,859,o),
(227,872,o),
(227,920,cs),
(227,951,o),
(205,972,o),
(178,972,cs),
(136,972,o),
(122,936,o),
(122,916,cs),
(122,880,o),
(144,859,o),
(171,859,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 6 0 7 4 6 7 91 5 1 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 6 0 7 4 6 7 91 5 1 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
36 40 52 54 60 52 52 33 8 34
CALL[ ]	/* CallFunction */";
};
width = 354;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(289,0,ls),
(302,0,o),
(309,4,o),
(309,13,cs),
(309,24,o),
(294,31,o),
(279,31,cs),
(183,31,l),
(183,766,ls),
(183,790,o),
(236,791,o),
(254,791,cs),
(270,791,o),
(291,791,o),
(291,806,cs),
(291,811,o),
(288,815,o),
(282,818,cs),
(275,820,o),
(261,821,o),
(240,821,cs),
(58,821,ls),
(46,821,o),
(21,821,o),
(21,806,cs),
(21,793,o),
(43,791,o),
(58,791,cs),
(88,791,o),
(138,791,o),
(138,768,cs),
(138,709,o),
(139,648,o),
(140,585,cs),
(141,521,o),
(142,460,o),
(142,401,cs),
(142,342,o),
(141,287,o),
(140,235,cs),
(139,182,o),
(138,129,o),
(138,74,cs),
(138,30,o),
(98,28,o),
(65,28,cs),
(53,28,o),
(36,25,o),
(36,13,cs),
(36,2,o),
(58,0,o),
(77,0,cs)
);
},
{
closed = 1;
nodes = (
(174,889,o),
(196,899,o),
(196,935,cs),
(196,958,o),
(181,972,o),
(162,972,cs),
(134,972,o),
(121,945,o),
(121,931,cs),
(121,907,o),
(136,889,o),
(155,889,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 6 0 7 4 6 7 91 5 1 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 6 0 7 4 6 7 91 5 1 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
36 40 52 52 60 52 51 32 8 23
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
note = Idotaccent;
unicode = 304;
},
{
glyphname = Igrave;
kernLeft = B;
kernRight = I;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(305,0,ls),
(337,0,o),
(353,10,o),
(353,29,cs),
(353,52,o),
(344,65,o),
(319,65,cs),
(234,65,l),
(236,719,l),
(236,719,l),
(236,744,o),
(261,749,o),
(289,753,cs),
(326,758,o),
(335,770,o),
(335,790,cs),
(335,811,o),
(327,821,o),
(284,821,cs),
(78,821,ls),
(55,821,o),
(31,817,o),
(31,789,cs),
(31,762,o),
(43,755,o),
(78,752,cs),
(103,751,o),
(119,747,o),
(128,742,cs),
(136,737,o),
(140,728,o),
(140,717,cs),
(140,664,o),
(141,611,o),
(142,559,cs),
(143,507,o),
(144,454,o),
(144,401,cs),
(144,348,o),
(143,300,o),
(142,255,cs),
(141,210,o),
(140,162,o),
(140,113,cs),
(140,76,o),
(123,68,o),
(75,64,cs),
(59,63,o),
(43,52,o),
(43,29,cs),
(43,4,o),
(56,0,o),
(77,0,cs)
);
},
{
closed = 1;
nodes = (
(204,840,o),
(219,855,o),
(219,871,cs),
(219,898,o),
(143,972,o),
(105,972,cs),
(78,972,o),
(64,954,o),
(64,935,cs),
(64,897,o),
(149,840,o),
(183,840,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 1 0 106 0 1 5 1 106 0 4 4 5 83 0 5 5 12 67 0 2 2 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 1 0 106 0 1 5 1 106 0 4 4 5 83 0 5 5 14 67 0 2 2 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
49 46 41 40 51 36 38 34 6 19
CALL[ ]	/* CallFunction */";
};
width = 374;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(315,0,ls),
(332,0,o),
(335,15,o),
(335,23,cs),
(335,42,o),
(320,51,o),
(305,51,cs),
(214,51,l),
(214,746,l),
(214,746,l),
(214,770,o),
(264,771,o),
(280,771,cs),
(296,771,o),
(317,777,o),
(317,796,cs),
(317,805,o),
(314,811,o),
(308,815,cs),
(301,819,o),
(287,821,o),
(266,821,cs),
(64,821,ls),
(52,821,o),
(27,819,o),
(27,796,cs),
(27,775,o),
(51,771,o),
(64,771,cs),
(88,771,o),
(139,771,o),
(139,748,cs),
(139,693,o),
(140,635,o),
(141,575,cs),
(142,514,o),
(143,456,o),
(143,401,cs),
(143,346,o),
(142,294,o),
(141,245,cs),
(140,196,o),
(139,145,o),
(139,94,cs),
(139,49,o),
(95,48,o),
(71,48,cs),
(59,48,o),
(42,42,o),
(42,23,cs),
(42,3,o),
(63,0,o),
(83,0,cs)
);
},
{
closed = 1;
nodes = (
(232,854,o),
(241,864,o),
(241,877,cs),
(241,904,o),
(164,972,o),
(135,972,cs),
(115,972,o),
(103,960,o),
(103,941,cs),
(103,910,o),
(188,854,o),
(217,854,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 0 1 0 106 0 1 6 1 106 7 1 5 5 6 83 0 6 6 12 67 4 1 2 2 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 1 0 106 0 1 6 1 106 7 1 5 5 6 83 0 6 6 14 67 4 1 2 2 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
52 54 60 52 52 36 38 34 8 23
CALL[ ]	/* CallFunction */";
};
width = 354;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(289,0,ls),
(302,0,o),
(309,4,o),
(309,13,cs),
(309,24,o),
(294,31,o),
(279,31,cs),
(183,31,l),
(183,766,ls),
(183,790,o),
(236,791,o),
(254,791,cs),
(270,791,o),
(291,791,o),
(291,806,cs),
(291,811,o),
(288,815,o),
(282,818,cs),
(275,820,o),
(261,821,o),
(240,821,cs),
(58,821,ls),
(46,821,o),
(21,821,o),
(21,806,cs),
(21,793,o),
(43,791,o),
(58,791,cs),
(88,791,o),
(138,791,o),
(138,768,cs),
(138,709,o),
(139,648,o),
(140,585,cs),
(141,521,o),
(142,460,o),
(142,401,cs),
(142,342,o),
(141,287,o),
(140,235,cs),
(139,182,o),
(138,129,o),
(138,74,cs),
(138,30,o),
(98,28,o),
(65,28,cs),
(53,28,o),
(36,25,o),
(36,13,cs),
(36,2,o),
(58,0,o),
(77,0,cs)
);
},
{
closed = 1;
nodes = (
(210,875,o),
(213,879,o),
(213,886,cs),
(213,910,o),
(138,971,o),
(118,971,cs),
(107,971,o),
(99,968,o),
(99,949,cs),
(99,928,o),
(187,875,o),
(205,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 0 1 0 106 0 1 6 1 106 7 1 5 5 6 83 0 6 6 12 67 4 1 2 2 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 1 0 106 0 1 6 1 106 7 1 5 5 6 83 0 6 6 14 67 4 1 2 2 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
52 52 60 52 51 36 37 34 8 23
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
note = Igrave;
unicode = 204;
},
{
glyphname = Imacron;
kernLeft = B;
kernRight = I;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(305,0,ls),
(337,0,o),
(353,10,o),
(353,29,cs),
(353,52,o),
(344,65,o),
(319,65,cs),
(234,65,l),
(236,719,l),
(236,719,l),
(236,744,o),
(261,749,o),
(289,753,cs),
(326,758,o),
(335,770,o),
(335,790,cs),
(335,811,o),
(327,821,o),
(284,821,cs),
(78,821,ls),
(55,821,o),
(31,817,o),
(31,789,cs),
(31,762,o),
(43,755,o),
(78,752,cs),
(103,751,o),
(119,747,o),
(128,742,cs),
(136,737,o),
(140,728,o),
(140,717,cs),
(140,664,o),
(141,611,o),
(142,559,cs),
(143,507,o),
(144,454,o),
(144,401,cs),
(144,348,o),
(143,300,o),
(142,255,cs),
(141,210,o),
(140,162,o),
(140,113,cs),
(140,76,o),
(123,68,o),
(75,64,cs),
(59,63,o),
(43,52,o),
(43,29,cs),
(43,4,o),
(56,0,o),
(77,0,cs)
);
},
{
closed = 1;
nodes = (
(143,885,o),
(240,886,o),
(314,886,cs),
(343,886,o),
(350,913,o),
(350,928,cs),
(350,948,o),
(337,965,o),
(322,965,cs),
(306,965,o),
(288,965,o),
(267,964,cs),
(246,963,o),
(222,962,o),
(194,962,cs),
(152,962,o),
(103,964,o),
(73,964,cs),
(50,964,o),
(40,944,o),
(40,925,cs),
(40,906,o),
(54,885,o),
(73,885,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
6 1 4 0 5 3 4 5 91 0 2 2 3 83 0 3 3 12 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
6 1 4 0 5 3 4 5 91 0 2 2 3 83 0 3 3 14 67 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
43 42 56 49 42 68 43 60 33 30 25 24 51 32 7 17
CALL[ ]	/* CallFunction */";
};
width = 374;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(315,0,ls),
(332,0,o),
(335,15,o),
(335,23,cs),
(335,42,o),
(320,51,o),
(305,51,cs),
(214,51,l),
(214,746,l),
(214,746,l),
(214,770,o),
(264,771,o),
(280,771,cs),
(296,771,o),
(317,777,o),
(317,796,cs),
(317,805,o),
(314,811,o),
(308,815,cs),
(301,819,o),
(287,821,o),
(266,821,cs),
(64,821,ls),
(52,821,o),
(27,819,o),
(27,796,cs),
(27,775,o),
(51,771,o),
(64,771,cs),
(88,771,o),
(139,771,o),
(139,748,cs),
(139,693,o),
(140,635,o),
(141,575,cs),
(142,514,o),
(143,456,o),
(143,401,cs),
(143,346,o),
(142,294,o),
(141,245,cs),
(140,196,o),
(139,145,o),
(139,94,cs),
(139,49,o),
(95,48,o),
(71,48,cs),
(59,48,o),
(42,42,o),
(42,23,cs),
(42,3,o),
(63,0,o),
(83,0,cs)
);
},
{
closed = 1;
nodes = (
(132,880,o),
(229,881,o),
(303,881,cs),
(326,881,o),
(332,903,o),
(332,914,cs),
(332,929,o),
(322,942,o),
(311,942,cs),
(295,942,o),
(277,942,o),
(256,941,cs),
(235,940,o),
(211,939,o),
(183,939,cs),
(141,939,o),
(92,941,o),
(62,941,cs),
(43,941,o),
(36,926,o),
(36,911,cs),
(36,896,o),
(47,880,o),
(62,880,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
8 1 6 0 7 4 6 7 91 5 1 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
8 1 6 0 7 4 6 7 91 5 1 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
53 52 64 57 52 76 53 68 52 54 60 52 52 33 9 32
CALL[ ]	/* CallFunction */";
};
width = 354;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(289,0,ls),
(302,0,o),
(309,4,o),
(309,13,cs),
(309,24,o),
(294,31,o),
(279,31,cs),
(183,31,l),
(183,766,ls),
(183,790,o),
(236,791,o),
(254,791,cs),
(270,791,o),
(291,791,o),
(291,806,cs),
(291,811,o),
(288,815,o),
(282,818,cs),
(275,820,o),
(261,821,o),
(240,821,cs),
(58,821,ls),
(46,821,o),
(21,821,o),
(21,806,cs),
(21,793,o),
(43,791,o),
(58,791,cs),
(88,791,o),
(138,791,o),
(138,768,cs),
(138,709,o),
(139,648,o),
(140,585,cs),
(141,521,o),
(142,460,o),
(142,401,cs),
(142,342,o),
(141,287,o),
(140,235,cs),
(139,182,o),
(138,129,o),
(138,74,cs),
(138,30,o),
(98,28,o),
(65,28,cs),
(53,28,o),
(36,25,o),
(36,13,cs),
(36,2,o),
(58,0,o),
(77,0,cs)
);
},
{
closed = 1;
nodes = (
(117,875,o),
(214,876,o),
(288,876,cs),
(303,876,o),
(307,887,o),
(307,894,cs),
(307,901,o),
(301,907,o),
(296,907,cs),
(280,907,o),
(262,907,o),
(241,906,cs),
(220,905,o),
(196,904,o),
(168,904,cs),
(126,904,o),
(77,906,o),
(47,906,cs),
(36,906,o),
(31,898,o),
(31,891,cs),
(31,884,o),
(38,875,o),
(47,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
8 1 6 0 7 4 6 7 91 5 1 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
8 1 6 0 7 4 6 7 91 5 1 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
49 48 60 53 48 72 49 64 52 52 60 52 51 32 9 21
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
note = Imacron;
unicode = 298;
},
{
glyphname = Iogonek;
kernLeft = B;
kernRight = I;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(251,-157,o),
(282,-128,o),
(282,-104,cs),
(282,-92,o),
(270,-80,o),
(257,-80,cs),
(237,-80,o),
(238,-104,o),
(197,-104,cs),
(182,-104,o),
(168,-98,o),
(168,-83,cs),
(168,-56,o),
(184,-15,o),
(213,0,c),
(305,0,ls),
(337,0,o),
(353,10,o),
(353,29,cs),
(353,52,o),
(344,65,o),
(319,65,cs),
(234,65,l),
(234,82,o),
(234,109,o),
(235,145,cs),
(235,181,o),
(235,222,o),
(235,267,cs),
(235,312,o),
(235,360,o),
(236,409,cs),
(236,458,o),
(236,503,o),
(236,546,cs),
(236,589,o),
(236,626,o),
(236,657,cs),
(236,688,o),
(236,709,o),
(236,719,cs),
(236,744,o),
(261,749,o),
(289,753,cs),
(326,758,o),
(335,770,o),
(335,790,cs),
(335,811,o),
(327,821,o),
(284,821,cs),
(78,821,ls),
(55,821,o),
(31,817,o),
(31,789,cs),
(31,762,o),
(43,755,o),
(78,752,cs),
(103,751,o),
(119,747,o),
(128,742,cs),
(136,737,o),
(140,728,o),
(140,717,cs),
(140,664,o),
(141,611,o),
(142,559,cs),
(143,507,o),
(144,454,o),
(144,401,cs),
(144,348,o),
(143,300,o),
(142,255,cs),
(141,210,o),
(140,162,o),
(140,113,cs),
(140,76,o),
(123,68,o),
(75,64,cs),
(59,63,o),
(43,52,o),
(43,29,cs),
(43,4,o),
(56,0,o),
(77,0,cs),
(156,0,l),
(131,-14,o),
(89,-39,o),
(89,-82,cs),
(89,-134,o),
(149,-157,o),
(199,-157,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 7 1 6 1 7 6 104 0 6 8 1 0 6 0 87 0 2 2 3 83 0 3 3 12 67 0 4 4 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 7 1 6 1 7 6 104 0 6 8 1 0 6 0 87 0 2 2 3 83 0 3 3 14 67 0 4 4 1 83 5 1 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
1 0 71 69 66 64 59 57 54 52 37 34 29 28 12 10 0 77 1 77 9 15
CALL[ ]	/* CallFunction */";
};
width = 374;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(315,0,ls),
(332,0,o),
(335,15,o),
(335,23,cs),
(335,42,o),
(320,51,o),
(305,51,cs),
(214,51,l),
(214,746,l),
(214,746,l),
(214,770,o),
(264,771,o),
(280,771,cs),
(296,771,o),
(317,777,o),
(317,796,cs),
(317,805,o),
(314,811,o),
(308,815,cs),
(301,819,o),
(287,821,o),
(266,821,cs),
(64,821,ls),
(52,821,o),
(27,819,o),
(27,796,cs),
(27,775,o),
(51,771,o),
(64,771,cs),
(88,771,o),
(139,771,o),
(139,748,cs),
(139,693,o),
(140,635,o),
(141,575,cs),
(142,514,o),
(143,456,o),
(143,401,cs),
(143,346,o),
(142,294,o),
(141,245,cs),
(140,196,o),
(139,145,o),
(139,94,cs),
(139,49,o),
(95,48,o),
(71,48,cs),
(59,48,o),
(42,42,o),
(42,23,cs),
(42,3,o),
(63,0,o),
(83,0,cs)
);
},
{
closed = 1;
nodes = (
(232,-149,o),
(262,-108,o),
(262,-98,cs),
(262,-87,o),
(256,-76,o),
(241,-76,cs),
(237,-76,o),
(233,-78,o),
(228,-82,cs),
(223,-87,o),
(217,-92,o),
(212,-97,cs),
(206,-103,o),
(195,-106,o),
(178,-106,cs),
(162,-106,o),
(147,-91,o),
(147,-75,cs),
(147,-56,o),
(161,-2,o),
(206,13,c),
(156,14,l),
(156,14,l),
(142,7,o),
(130,0,o),
(119,-9,cs),
(100,-24,o),
(83,-45,o),
(83,-76,cs),
(83,-119,o),
(125,-149,o),
(184,-149,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
2 1 0 3 9 9 0 96 0 7 1 6 1 7 6 104 0 6 0 8 6 8 87 5 1 3 3 4 83 0 4 4 12 67 10 1 9 9 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
2 1 0 3 9 3 0 9 104 0 7 1 6 1 7 6 104 0 6 0 8 6 8 87 5 1 3 3 4 83 0 4 4 12 67 10 1 9 9 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
2 1 0 3 9 3 0 9 104 0 7 1 6 1 7 6 104 0 6 0 8 6 8 87 5 1 3 3 4 83 0 4 4 14 67 10 1 9 9 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
52 52 52 81 52 81 38 35 43 52 54 60 52 52 33 11 35
CALL[ ]	/* CallFunction */";
};
width = 354;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(209,-149,o),
(239,-108,o),
(239,-98,cs),
(239,-90,o),
(237,-82,o),
(225,-82,cs),
(206,-82,o),
(200,-122,o),
(163,-122,cs),
(132,-122,o),
(124,-92,o),
(124,-75,cs),
(124,-59,o),
(130,-24,o),
(159,0,c),
(289,0,ls),
(302,0,o),
(309,4,o),
(309,13,cs),
(309,24,o),
(294,31,o),
(279,31,cs),
(183,31,l),
(183,766,ls),
(183,790,o),
(236,791,o),
(254,791,cs),
(270,791,o),
(291,791,o),
(291,806,cs),
(291,811,o),
(288,815,o),
(282,818,cs),
(275,820,o),
(261,821,o),
(240,821,cs),
(58,821,ls),
(46,821,o),
(21,821,o),
(21,806,cs),
(21,793,o),
(43,791,o),
(58,791,cs),
(88,791,o),
(138,791,o),
(138,768,cs),
(138,709,o),
(139,648,o),
(140,585,cs),
(141,521,o),
(142,460,o),
(142,401,cs),
(142,342,o),
(141,287,o),
(140,235,cs),
(139,182,o),
(138,129,o),
(138,74,cs),
(138,30,o),
(98,28,o),
(65,28,cs),
(53,28,o),
(36,25,o),
(36,13,cs),
(36,2,o),
(58,0,o),
(77,0,cs),
(124,0,l),
(105,-15,o),
(80,-39,o),
(80,-76,cs),
(80,-119,o),
(114,-149,o),
(161,-149,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 1 2 1 3 2 104 0 2 0 4 2 4 87 9 1 7 7 8 83 0 8 8 12 67 6 1 0 0 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 3 1 2 1 3 2 104 0 2 0 4 2 4 87 9 1 7 7 8 83 0 8 8 14 67 6 1 0 0 1 83 5 1 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
74 71 52 60 52 37 38 35 41 35 32 10 24
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
note = Iogonek;
unicode = 302;
},
{
glyphname = Itilde;
kernLeft = B;
kernRight = I;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(305,0,ls),
(337,0,o),
(353,10,o),
(353,29,cs),
(353,52,o),
(344,65,o),
(319,65,cs),
(234,65,l),
(236,719,l),
(236,719,l),
(236,744,o),
(261,749,o),
(289,753,cs),
(326,758,o),
(335,770,o),
(335,790,cs),
(335,811,o),
(327,821,o),
(284,821,cs),
(78,821,ls),
(55,821,o),
(31,817,o),
(31,789,cs),
(31,762,o),
(43,755,o),
(78,752,cs),
(103,751,o),
(119,747,o),
(128,742,cs),
(136,737,o),
(140,728,o),
(140,717,cs),
(140,664,o),
(141,611,o),
(142,559,cs),
(143,507,o),
(144,454,o),
(144,401,cs),
(144,348,o),
(143,300,o),
(142,255,cs),
(141,210,o),
(140,162,o),
(140,113,cs),
(140,76,o),
(123,68,o),
(75,64,cs),
(59,63,o),
(43,52,o),
(43,29,cs),
(43,4,o),
(56,0,o),
(77,0,cs)
);
},
{
closed = 1;
nodes = (
(54,859,o),
(78,884,o),
(117,884,cs),
(156,884,o),
(198,860,o),
(254,860,cs),
(287,860,o),
(365,878,o),
(365,935,cs),
(365,956,o),
(350,970,o),
(343,970,cs),
(338,970,o),
(328,966,o),
(313,957,cs),
(294,946,o),
(272,940,o),
(253,940,cs),
(214,940,o),
(152,968,o),
(116,968,cs),
(91,968,o),
(69,962,o),
(48,950,cs),
(29,939,o),
(14,924,o),
(14,895,cs),
(14,875,o),
(21,859,o),
(33,859,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 3 5 7 91 0 2 2 3 83 0 3 3 12 67 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 3 5 7 91 0 2 2 3 83 0 3 3 14 67 0 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
76 74 71 69 66 64 58 56 53 51 48 46 33 30 25 24 51 32 10 17
CALL[ ]	/* CallFunction */";
};
width = 374;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(315,0,ls),
(332,0,o),
(335,15,o),
(335,23,cs),
(335,42,o),
(320,51,o),
(305,51,cs),
(214,51,l),
(214,746,l),
(214,746,l),
(214,770,o),
(264,771,o),
(280,771,cs),
(296,771,o),
(317,777,o),
(317,796,cs),
(317,805,o),
(314,811,o),
(308,815,cs),
(301,819,o),
(287,821,o),
(266,821,cs),
(64,821,ls),
(52,821,o),
(27,819,o),
(27,796,cs),
(27,775,o),
(51,771,o),
(64,771,cs),
(88,771,o),
(139,771,o),
(139,748,cs),
(139,693,o),
(140,635,o),
(141,575,cs),
(142,514,o),
(143,456,o),
(143,401,cs),
(143,346,o),
(142,294,o),
(141,245,cs),
(140,196,o),
(139,145,o),
(139,94,cs),
(139,49,o),
(95,48,o),
(71,48,cs),
(59,48,o),
(42,42,o),
(42,23,cs),
(42,3,o),
(63,0,o),
(83,0,cs)
);
},
{
closed = 1;
nodes = (
(40,870,o),
(67,895,o),
(107,895,cs),
(146,895,o),
(188,871,o),
(244,871,cs),
(300,871,o),
(333,893,o),
(346,916,cs),
(349,922,o),
(351,928,o),
(351,935,cs),
(351,951,o),
(340,963,o),
(333,963,cs),
(330,963,o),
(326,962,o),
(323,961,cs),
(319,959,o),
(312,955,o),
(303,950,cs),
(280,939,o),
(260,933,o),
(243,933,cs),
(204,933,o),
(142,961,o),
(106,961,cs),
(81,961,o),
(59,955,o),
(38,943,cs),
(28,937,o),
(21,932,o),
(17,927,cs),
(13,922,o),
(10,918,o),
(9,915,cs),
(7,910,o),
(6,904,o),
(6,898,cs),
(6,883,o),
(12,870,o),
(23,870,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
8 1 6 0 10 9 6 10 91 0 7 11 1 9 4 7 9 91 5 1 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
8 1 6 0 10 9 6 10 91 0 7 11 1 9 4 7 9 91 5 1 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
86 84 81 79 76 74 35 35 40 52 54 60 52 52 33 12 35
CALL[ ]	/* CallFunction */";
};
width = 354;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(289,0,ls),
(302,0,o),
(309,4,o),
(309,13,cs),
(309,24,o),
(294,31,o),
(279,31,cs),
(183,31,l),
(183,766,ls),
(183,790,o),
(236,791,o),
(254,791,cs),
(270,791,o),
(291,791,o),
(291,806,cs),
(291,811,o),
(288,815,o),
(282,818,cs),
(275,820,o),
(261,821,o),
(240,821,cs),
(58,821,ls),
(46,821,o),
(21,821,o),
(21,806,cs),
(21,793,o),
(43,791,o),
(58,791,cs),
(88,791,o),
(138,791,o),
(138,768,cs),
(138,709,o),
(139,648,o),
(140,585,cs),
(141,521,o),
(142,460,o),
(142,401,cs),
(142,342,o),
(141,287,o),
(140,235,cs),
(139,182,o),
(138,129,o),
(138,74,cs),
(138,30,o),
(98,28,o),
(65,28,cs),
(53,28,o),
(36,25,o),
(36,13,cs),
(36,2,o),
(58,0,o),
(77,0,cs)
);
},
{
closed = 1;
nodes = (
(22,888,o),
(49,913,o),
(90,913,cs),
(129,913,o),
(171,889,o),
(227,889,cs),
(280,889,o),
(329,909,o),
(329,934,cs),
(329,943,o),
(323,951,o),
(316,951,cs),
(313,951,o),
(309,950,o),
(306,949,cs),
(302,947,o),
(295,943,o),
(286,938,cs),
(263,927,o),
(243,921,o),
(226,921,cs),
(187,921,o),
(125,949,o),
(89,949,cs),
(64,949,o),
(42,943,o),
(21,931,cs),
(2,920,o),
(-8,910,o),
(-8,903,cs),
(-8,896,o),
(-1,888,o),
(6,888,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
8 1 6 0 10 9 6 10 91 0 7 11 1 9 4 7 9 91 5 1 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
8 1 6 0 10 9 6 10 91 0 7 11 1 9 4 7 9 91 5 1 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
81 79 76 74 71 69 35 35 39 52 52 60 52 51 32 12 24
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
note = Itilde;
unicode = 296;
},
{
glyphname = J;
kernLeft = J;
kernRight = IJ;
lastChange = "2024-06-14 09:04:14 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (269,0);
},
{
name = top;
pos = (374,821);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(340,-14,o),
(429,83,o),
(429,279,cs),
(429,723,ls),
(429,732,o),
(434,740,o),
(443,745,cs),
(452,750,o),
(467,752,o),
(490,752,cs),
(514,752,o),
(533,763,o),
(533,786,cs),
(533,807,o),
(524,821,o),
(481,821,cs),
(244,821,ls),
(221,821,o),
(207,812,o),
(207,787,cs),
(207,764,o),
(223,753,o),
(254,753,cs),
(275,753,o),
(333,754,o),
(333,730,cs),
(333,723,o),
(336,563,o),
(336,371,cs),
(336,209,o),
(332,53,o),
(176,53,cs),
(104,53,o),
(65,87,o),
(65,135,cs),
(65,155,o),
(72,176,o),
(79,181,c),
(89,172,o),
(101,168,o),
(114,168,cs),
(142,168,o),
(163,189,o),
(163,222,cs),
(163,261,o),
(132,280,o),
(98,280,cs),
(41,280,o),
(-5,224,o),
(-5,145,cs),
(-5,49,o),
(60,-14,o),
(185,-14,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
55 1 6 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 3 1 1 1 2 83 0 2 2 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 3 1 1 1 2 83 0 2 2 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 38 37 36 51 60 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 538;
},
{
anchors = (
{
name = bottom;
pos = (262,0);
},
{
name = top;
pos = (373,821);
}
);
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(334,-14,o),
(409,83,o),
(409,279,cs),
(409,746,ls),
(409,770,o),
(448,771,o),
(460,771,cs),
(476,771,o),
(497,777,o),
(497,796,cs),
(497,805,o),
(494,811,o),
(488,815,cs),
(481,819,o),
(467,821,o),
(446,821,cs),
(249,821,ls),
(237,821,o),
(212,819,o),
(212,796,cs),
(212,777,o),
(234,771,o),
(249,771,cs),
(264,771,o),
(334,773,o),
(334,748,cs),
(334,747,o),
(337,583,o),
(337,379,cs),
(337,203,o),
(332,50,o),
(172,50,cs),
(118,50,o),
(57,79,o),
(57,135,cs),
(57,155,o),
(63,175,o),
(74,182,c),
(83,174,o),
(94,170,o),
(107,170,cs),
(132,170,o),
(143,192,o),
(143,216,cs),
(143,251,o),
(110,264,o),
(89,264,cs),
(34,264,o),
(-4,213,o),
(-4,137,cs),
(-4,50,o),
(70,-14,o),
(167,-14,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
60 1 6 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 3 1 1 1 2 83 0 2 2 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 3 1 1 1 2 83 0 2 2 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 38 38 52 52 60 36 7 22
CALL[ ]	/* CallFunction */";
};
width = 523;
},
{
anchors = (
{
name = bottom;
pos = (251,0);
},
{
name = top;
pos = (358,821);
}
);
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(313,-14,o),
(381,83,o),
(381,279,cs),
(381,766,ls),
(381,790,o),
(434,791,o),
(452,791,cs),
(468,791,o),
(489,791,o),
(489,806,cs),
(489,811,o),
(486,815,o),
(480,818,cs),
(473,820,o),
(459,821,o),
(438,821,cs),
(256,821,ls),
(244,821,o),
(219,821,o),
(219,806,cs),
(219,793,o),
(241,791,o),
(256,791,cs),
(286,791,o),
(336,791,o),
(336,768,cs),
(336,750,o),
(336,710,o),
(338,619,cs),
(339,541,o),
(339,467,o),
(339,379,cs),
(339,284,o),
(339,195,o),
(318,129,cs),
(297,63,o),
(254,20,o),
(169,20,cs),
(95,20,o),
(29,59,o),
(29,131,cs),
(29,151,o),
(33,175,o),
(50,182,c),
(57,174,o),
(66,167,o),
(77,167,cs),
(93,167,o),
(114,177,o),
(114,204,cs),
(114,227,o),
(91,237,o),
(78,237,cs),
(7,237,o),
(-2,160,o),
(-2,137,cs),
(-2,48,o),
(70,-14,o),
(164,-14,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
63 1 6 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 3 1 1 1 2 83 0 2 2 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 3 1 1 1 2 83 0 2 2 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
36 40 38 52 52 62 36 7 22
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = J;
unicode = 74;
},
{
glyphname = Jcircumflex;
kernLeft = J;
kernRight = IJ;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(340,-14,o),
(429,83,o),
(429,279,cs),
(429,723,ls),
(429,732,o),
(434,740,o),
(443,745,cs),
(452,750,o),
(467,752,o),
(490,752,cs),
(514,752,o),
(533,763,o),
(533,786,cs),
(533,807,o),
(524,821,o),
(481,821,cs),
(244,821,ls),
(221,821,o),
(207,812,o),
(207,787,cs),
(207,764,o),
(223,753,o),
(254,753,cs),
(275,753,o),
(333,754,o),
(333,730,cs),
(333,723,o),
(336,563,o),
(336,371,cs),
(336,209,o),
(332,53,o),
(176,53,cs),
(104,53,o),
(65,87,o),
(65,135,cs),
(65,155,o),
(72,176,o),
(79,181,c),
(89,172,o),
(101,168,o),
(114,168,cs),
(142,168,o),
(163,189,o),
(163,222,cs),
(163,261,o),
(132,280,o),
(98,280,cs),
(41,280,o),
(-5,224,o),
(-5,145,cs),
(-5,49,o),
(60,-14,o),
(185,-14,cs)
);
},
{
closed = 1;
nodes = (
(255,830,o),
(318,854,o),
(357,879,c),
(403,849,o),
(464,830,o),
(477,830,cs),
(488,830,o),
(490,842,o),
(490,851,cs),
(490,892,o),
(381,972,o),
(357,972,cs),
(346,972,o),
(311,950,o),
(284,928,cs),
(253,903,o),
(225,871,o),
(225,844,cs),
(225,837,o),
(229,830,o),
(238,830,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
5 1 0 2 81 1 9 8 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 0 2 106 1 10 2 0 5 0 106 0 8 0 9 3 8 9 91 6 1 4 4 5 83 0 5 5 12 67 0 3 3 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 2 0 2 106 1 10 2 0 5 0 106 0 8 0 9 3 8 9 91 6 1 4 4 5 83 0 5 5 14 67 0 3 3 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 80 78 72 70 64 62 57 55 51 48 45 42 30 28 19 17 11 9 0 25 1 25 11 15
CALL[ ]	/* CallFunction */";
};
width = 538;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(334,-14,o),
(409,83,o),
(409,279,cs),
(409,746,ls),
(409,770,o),
(448,771,o),
(460,771,cs),
(476,771,o),
(497,777,o),
(497,796,cs),
(497,805,o),
(494,811,o),
(488,815,cs),
(481,819,o),
(467,821,o),
(446,821,cs),
(249,821,ls),
(237,821,o),
(212,819,o),
(212,796,cs),
(212,777,o),
(234,771,o),
(249,771,cs),
(264,771,o),
(334,773,o),
(334,748,cs),
(334,747,o),
(337,583,o),
(337,379,cs),
(337,203,o),
(332,50,o),
(172,50,cs),
(118,50,o),
(57,79,o),
(57,135,cs),
(57,155,o),
(63,175,o),
(74,182,c),
(83,174,o),
(94,170,o),
(107,170,cs),
(132,170,o),
(143,192,o),
(143,216,cs),
(143,251,o),
(110,264,o),
(89,264,cs),
(34,264,o),
(-4,213,o),
(-4,137,cs),
(-4,50,o),
(70,-14,o),
(167,-14,cs)
);
},
{
closed = 1;
nodes = (
(257,847,o),
(318,874,o),
(358,898,c),
(422,860,o),
(470,847,o),
(478,847,cs),
(486,847,o),
(489,855,o),
(489,864,cs),
(489,900,o),
(382,972,o),
(358,972,cs),
(336,972,o),
(228,901,o),
(228,860,cs),
(228,851,o),
(232,847,o),
(239,847,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
5 1 0 2 85 1 9 8 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 0 2 106 1 10 2 0 5 0 106 0 8 0 9 3 8 9 91 6 1 4 4 5 83 0 5 5 12 67 0 3 3 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 2 0 2 106 1 10 2 0 5 0 106 0 8 0 9 3 8 9 91 6 1 4 4 5 83 0 5 5 14 67 0 3 3 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 84 82 76 74 68 66 60 57 53 50 46 43 31 29 18 16 11 9 0 24 1 24 11 15
CALL[ ]	/* CallFunction */";
};
width = 523;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(313,-14,o),
(381,83,o),
(381,279,cs),
(381,766,ls),
(381,790,o),
(434,791,o),
(452,791,cs),
(468,791,o),
(489,791,o),
(489,806,cs),
(489,811,o),
(486,815,o),
(480,818,cs),
(473,820,o),
(459,821,o),
(438,821,cs),
(256,821,ls),
(244,821,o),
(219,821,o),
(219,806,cs),
(219,793,o),
(241,791,o),
(256,791,cs),
(286,791,o),
(336,791,o),
(336,768,cs),
(336,750,o),
(336,710,o),
(338,619,cs),
(339,541,o),
(339,467,o),
(339,379,cs),
(339,284,o),
(339,195,o),
(318,129,cs),
(297,63,o),
(254,20,o),
(169,20,cs),
(95,20,o),
(29,59,o),
(29,131,cs),
(29,151,o),
(33,175,o),
(50,182,c),
(57,174,o),
(66,167,o),
(77,167,cs),
(93,167,o),
(114,177,o),
(114,204,cs),
(114,227,o),
(91,237,o),
(78,237,cs),
(7,237,o),
(-2,160,o),
(-2,137,cs),
(-2,48,o),
(70,-14,o),
(164,-14,cs)
);
},
{
closed = 1;
nodes = (
(256,875,o),
(323,909,o),
(360,929,c),
(428,893,o),
(470,875,o),
(480,875,cs),
(485,875,o),
(488,879,o),
(488,886,cs),
(488,911,o),
(386,972,o),
(360,972,cs),
(337,972,o),
(233,911,o),
(233,886,cs),
(233,879,o),
(236,875,o),
(241,875,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
5 1 0 2 87 1 9 8 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 0 2 106 1 10 2 0 5 0 106 0 8 0 9 3 8 9 91 6 1 4 4 5 83 0 5 5 12 67 0 3 3 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 2 0 2 106 1 10 2 0 5 0 106 0 8 0 9 3 8 9 91 6 1 4 4 5 83 0 5 5 14 67 0 3 3 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 85 83 79 77 69 67 61 58 54 51 47 44 30 28 18 16 11 9 0 23 1 23 11 15
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = Jcircumflex;
unicode = 308;
},
{
glyphname = K;
kernLeft = B;
kernRight = K;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(713,-36,o),
(761,-40,o),
(761,1,cs),
(761,29,o),
(730,37,o),
(687,37,cs),
(659,37,o),
(634,38,o),
(612,39,cs),
(589,40,o),
(575,44,o),
(570,49,cs),
(525,99,o),
(450,193,o),
(396,262,cs),
(363,305,o),
(329,349,o),
(294,395,c),
(347,454,o),
(398,510,o),
(447,564,cs),
(495,618,o),
(543,668,o),
(590,713,cs),
(610,732,o),
(644,735,o),
(700,738,cs),
(713,738,o),
(731,747,o),
(731,767,cs),
(731,787,o),
(716,797,o),
(704,797,cs),
(461,797,ls),
(434,797,o),
(427,781,o),
(427,764,cs),
(427,744,o),
(447,737,o),
(460,736,cs),
(479,735,o),
(483,733,o),
(483,720,cs),
(483,713,o),
(451,671,o),
(384,600,cs),
(320,531,o),
(267,475,o),
(229,439,c),
(229,731,l),
(229,731,l),
(229,755,o),
(273,759,o),
(300,759,cs),
(316,760,o),
(339,769,o),
(339,794,cs),
(339,805,o),
(336,813,o),
(329,816,cs),
(322,819,o),
(307,821,o),
(286,821,cs),
(94,821,ls),
(71,821,o),
(50,817,o),
(50,790,cs),
(50,767,o),
(61,759,o),
(94,756,cs),
(117,755,o),
(133,746,o),
(133,729,cs),
(133,676,o),
(134,621,o),
(135,565,cs),
(136,509,o),
(137,454,o),
(137,401,cs),
(137,299,o),
(133,213,o),
(133,119,cs),
(133,80,o),
(119,70,o),
(95,67,cs),
(68,64,o),
(49,56,o),
(49,33,cs),
(49,8,o),
(61,0,o),
(108,0,cs),
(316,0,ls),
(329,0,o),
(344,10,o),
(344,35,cs),
(344,56,o),
(328,62,o),
(303,62,cs),
(229,62,l),
(229,335,l),
(235,343,l),
(285,280,o),
(346,196,o),
(416,104,cs),
(479,21,o),
(529,-36,o),
(545,-36,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
55 54 29 0 4 4 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
8 1 6 6 7 83 0 7 7 12 67 0 1 1 0 83 0 0 0 14 67 0 4 4 5 83 0 5 5 13 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 1 4 0 1 91 0 2 0 3 2 3 87 8 1 6 6 7 83 0 7 7 12 67 0 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 1 4 0 1 91 0 2 0 3 2 3 87 8 1 6 6 7 83 0 7 7 14 67 0 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
98 97 92 89 84 83 52 40 53 61 36 63 9 21
CALL[ ]	/* CallFunction */";
};
width = 765;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(673,-36,o),
(749,-34,o),
(749,-2,cs),
(749,15,o),
(717,16,o),
(686,16,cs),
(658,16,o),
(633,17,o),
(610,18,cs),
(587,19,o),
(572,23,o),
(567,28,cs),
(517,84,o),
(440,179,o),
(383,254,cs),
(348,300,o),
(312,347,o),
(275,395,c),
(406,536,o),
(481,613,o),
(600,729,cs),
(623,749,o),
(691,747,o),
(739,750,cs),
(752,750,o),
(759,762,o),
(759,771,cs),
(759,787,o),
(748,795,o),
(736,795,cs),
(468,795,ls),
(441,795,o),
(434,783,o),
(434,770,cs),
(434,751,o),
(455,746,o),
(468,746,cs),
(477,745,o),
(484,745,o),
(491,745,cs),
(497,744,o),
(500,739,o),
(500,730,cs),
(500,721,o),
(452,667,o),
(385,598,cs),
(316,525,o),
(255,464,o),
(210,421,c),
(210,746,l),
(210,746,l),
(210,770,o),
(263,771,o),
(281,771,cs),
(294,771,o),
(323,774,o),
(323,796,cs),
(323,806,o),
(319,813,o),
(311,816,cs),
(303,819,o),
(288,821,o),
(267,821,cs),
(79,821,ls),
(59,821,o),
(38,817,o),
(38,796,cs),
(38,777,o),
(64,771,o),
(79,771,cs),
(94,771,o),
(135,771,o),
(135,748,cs),
(135,693,o),
(136,635,o),
(137,575,cs),
(138,514,o),
(139,456,o),
(139,401,cs),
(139,346,o),
(138,294,o),
(137,245,cs),
(136,196,o),
(135,145,o),
(135,94,cs),
(135,48,o),
(102,48,o),
(87,48,cs),
(75,48,o),
(53,46,o),
(53,23,cs),
(53,0,o),
(79,0,o),
(99,0,cs),
(316,0,ls),
(329,0,o),
(341,8,o),
(341,27,cs),
(341,44,o),
(321,50,o),
(306,50,cs),
(210,50,l),
(210,335,l),
(228,353,l),
(272,298,o),
(334,211,o),
(413,109,cs),
(479,23,o),
(529,-36,o),
(547,-36,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
59 58 33 0 4 6 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
11 1 9 9 10 83 0 10 10 12 67 3 1 2 0 0 2 83 0 2 2 14 67 8 1 6 6 7 83 0 7 7 13 67 0 4 4 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 2 3 1 2 0 6 2 0 91 11 1 9 9 10 83 0 10 10 12 67 8 1 6 6 7 83 0 7 7 13 67 0 4 4 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 2 3 1 2 0 6 2 0 91 0 4 0 5 4 5 87 11 1 9 9 10 83 0 10 10 12 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
1 1 0 3 6 3 0 96 0 2 0 3 0 2 3 91 0 4 0 5 4 5 87 11 1 9 9 10 83 0 10 10 14 67 8 1 6 6 7 83 0 7 7 13 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
111 108 102 99 93 90 78 75 70 66 62 60 52 49 44 41 52 52 17 24 12 19
CALL[ ]	/* CallFunction */";
};
width = 747;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(636,-36,o),
(722,-37,o),
(722,-17,cs),
(722,-10,o),
(718,-6,o),
(711,-5,cs),
(703,-4,o),
(691,-4,o),
(676,-4,cs),
(648,-4,o),
(623,-3,o),
(600,-2,cs),
(577,-1,o),
(562,3,o),
(557,8,cs),
(504,64,o),
(421,170,o),
(362,246,cs),
(325,294,o),
(287,344,o),
(248,395,c),
(383,540,o),
(477,637,o),
(593,749,cs),
(616,769,o),
(669,768,o),
(712,770,cs),
(725,770,o),
(732,774,o),
(732,781,cs),
(732,792,o),
(721,795,o),
(709,795,cs),
(452,795,ls),
(439,795,o),
(430,793,o),
(425,790,cs),
(420,787,o),
(418,783,o),
(418,780,cs),
(418,765,o),
(439,766,o),
(452,766,cs),
(472,766,o),
(523,769,o),
(523,750,cs),
(523,741,o),
(478,689,o),
(386,594,cs),
(302,507,o),
(225,429,o),
(183,391,c),
(183,766,ls),
(183,790,o),
(236,791,o),
(254,791,cs),
(270,791,o),
(291,791,o),
(291,806,cs),
(291,811,o),
(288,815,o),
(282,818,cs),
(275,820,o),
(261,821,o),
(240,821,cs),
(58,821,ls),
(46,821,o),
(21,821,o),
(21,806,cs),
(21,793,o),
(43,791,o),
(58,791,cs),
(88,791,o),
(138,791,o),
(138,768,cs),
(138,709,o),
(139,648,o),
(140,585,cs),
(141,521,o),
(142,460,o),
(142,401,cs),
(142,342,o),
(141,287,o),
(140,235,cs),
(139,182,o),
(138,129,o),
(138,74,cs),
(138,30,o),
(98,28,o),
(65,28,cs),
(53,28,o),
(36,25,o),
(36,13,cs),
(36,2,o),
(58,0,o),
(77,0,cs),
(289,0,ls),
(302,0,o),
(309,4,o),
(309,13,cs),
(309,24,o),
(294,30,o),
(279,30,cs),
(183,30,l),
(183,335,l),
(218,370,l),
(266,309,o),
(331,219,o),
(410,118,cs),
(480,26,o),
(532,-36,o),
(550,-36,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
60 59 34 0 4 5 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
10 1 8 8 9 83 0 9 9 12 67 2 1 0 0 1 83 0 1 1 14 67 7 1 5 5 6 83 0 6 6 13 67 0 3 3 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 2 1 0 5 1 0 91 10 1 8 8 9 83 0 9 9 12 67 7 1 5 5 6 83 0 6 6 13 67 0 3 3 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 1 2 1 0 5 1 0 91 0 3 0 4 3 4 87 10 1 8 8 9 83 0 9 9 12 67 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 1 2 1 0 5 1 0 91 0 3 0 4 3 4 87 10 1 8 8 9 83 0 9 9 14 67 7 1 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
105 102 98 95 91 88 76 73 69 66 63 61 53 49 45 42 51 52 58 11 18
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = K;
unicode = 75;
},
{
glyphname = Kcommaaccent;
kernLeft = B;
kernRight = K;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(713,-36,o),
(761,-40,o),
(761,1,cs),
(761,29,o),
(730,37,o),
(687,37,cs),
(659,37,o),
(634,38,o),
(612,39,cs),
(589,40,o),
(575,44,o),
(570,49,cs),
(525,99,o),
(450,193,o),
(396,262,cs),
(363,305,o),
(329,349,o),
(294,395,c),
(347,454,o),
(398,510,o),
(447,564,cs),
(495,618,o),
(543,668,o),
(590,713,cs),
(610,732,o),
(644,735,o),
(700,738,cs),
(713,738,o),
(731,747,o),
(731,767,cs),
(731,787,o),
(716,797,o),
(704,797,cs),
(461,797,ls),
(434,797,o),
(427,781,o),
(427,764,cs),
(427,744,o),
(447,737,o),
(460,736,cs),
(479,735,o),
(483,733,o),
(483,720,cs),
(483,713,o),
(451,671,o),
(384,600,cs),
(320,531,o),
(267,475,o),
(229,439,c),
(229,731,l),
(229,731,l),
(229,755,o),
(273,759,o),
(300,759,cs),
(316,760,o),
(339,769,o),
(339,794,cs),
(339,805,o),
(336,813,o),
(329,816,cs),
(322,819,o),
(307,821,o),
(286,821,cs),
(94,821,ls),
(71,821,o),
(50,817,o),
(50,790,cs),
(50,767,o),
(61,759,o),
(94,756,cs),
(117,755,o),
(133,746,o),
(133,729,cs),
(133,676,o),
(134,621,o),
(135,565,cs),
(136,509,o),
(137,454,o),
(137,401,cs),
(137,299,o),
(133,213,o),
(133,119,cs),
(133,80,o),
(119,70,o),
(95,67,cs),
(68,64,o),
(49,56,o),
(49,33,cs),
(49,8,o),
(61,0,o),
(108,0,cs),
(316,0,ls),
(329,0,o),
(344,10,o),
(344,35,cs),
(344,56,o),
(328,62,o),
(303,62,cs),
(229,62,l),
(229,335,l),
(235,343,l),
(285,280,o),
(346,196,o),
(416,104,cs),
(479,21,o),
(529,-36,o),
(545,-36,cs)
);
},
{
closed = 1;
nodes = (
(391,-234,o),
(454,-192,o),
(454,-115,cs),
(454,-58,o),
(418,-34,o),
(386,-34,cs),
(342,-34,o),
(326,-64,o),
(326,-92,cs),
(326,-123,o),
(362,-125,o),
(362,-142,cs),
(362,-162,o),
(360,-177,o),
(355,-186,cs),
(350,-196,o),
(347,-204,o),
(347,-211,cs),
(347,-234,o),
(366,-234,o),
(373,-234,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
55 54 29 0 4 4 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
8 1 6 6 7 83 0 7 7 12 67 0 1 1 0 83 0 0 0 14 67 0 4 4 5 83 0 5 5 13 67 0 2 2 3 83 0 3 3 21 67 0 9 9 10 83 0 10 10 25 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 9 0 10 9 10 87 8 1 6 6 7 83 0 7 7 12 67 0 1 1 0 83 0 0 0 14 67 0 4 4 5 83 0 5 5 13 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 1 4 0 1 91 0 2 0 3 10 2 3 91 0 9 0 10 9 10 87 8 1 6 6 7 83 0 7 7 12 67 0 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 1 4 0 1 91 0 2 0 3 10 2 3 91 0 9 0 10 9 10 87 8 1 6 6 7 83 0 7 7 14 67 0 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
115 113 107 105 98 97 92 89 84 83 52 40 53 61 36 63 11 21
CALL[ ]	/* CallFunction */";
};
width = 765;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(673,-36,o),
(749,-34,o),
(749,-2,cs),
(749,15,o),
(717,16,o),
(686,16,cs),
(658,16,o),
(633,17,o),
(610,18,cs),
(587,19,o),
(572,23,o),
(567,28,cs),
(517,84,o),
(440,179,o),
(383,254,cs),
(348,300,o),
(312,347,o),
(275,395,c),
(406,536,o),
(481,613,o),
(600,729,cs),
(623,749,o),
(691,747,o),
(739,750,cs),
(752,750,o),
(759,762,o),
(759,771,cs),
(759,787,o),
(748,795,o),
(736,795,cs),
(468,795,ls),
(441,795,o),
(434,783,o),
(434,770,cs),
(434,751,o),
(455,746,o),
(468,746,cs),
(477,745,o),
(484,745,o),
(491,745,cs),
(497,744,o),
(500,739,o),
(500,730,cs),
(500,721,o),
(452,667,o),
(385,598,cs),
(316,525,o),
(255,464,o),
(210,421,c),
(210,746,l),
(210,746,l),
(210,770,o),
(263,771,o),
(281,771,cs),
(294,771,o),
(323,774,o),
(323,796,cs),
(323,806,o),
(319,813,o),
(311,816,cs),
(303,819,o),
(288,821,o),
(267,821,cs),
(79,821,ls),
(59,821,o),
(38,817,o),
(38,796,cs),
(38,777,o),
(64,771,o),
(79,771,cs),
(94,771,o),
(135,771,o),
(135,748,cs),
(135,693,o),
(136,635,o),
(137,575,cs),
(138,514,o),
(139,456,o),
(139,401,cs),
(139,346,o),
(138,294,o),
(137,245,cs),
(136,196,o),
(135,145,o),
(135,94,cs),
(135,48,o),
(102,48,o),
(87,48,cs),
(75,48,o),
(53,46,o),
(53,23,cs),
(53,0,o),
(79,0,o),
(99,0,cs),
(316,0,ls),
(329,0,o),
(341,8,o),
(341,27,cs),
(341,44,o),
(321,50,o),
(306,50,cs),
(210,50,l),
(210,335,l),
(228,353,l),
(272,298,o),
(334,211,o),
(413,109,cs),
(479,23,o),
(529,-36,o),
(547,-36,cs)
);
},
{
closed = 1;
nodes = (
(394,-221,o),
(435,-171,o),
(435,-117,cs),
(435,-64,o),
(405,-45,o),
(378,-45,cs),
(341,-45,o),
(326,-70,o),
(326,-94,cs),
(326,-126,o),
(362,-125,o),
(362,-142,cs),
(362,-159,o),
(360,-172,o),
(356,-180,cs),
(351,-189,o),
(349,-196,o),
(349,-202,cs),
(349,-219,o),
(363,-221,o),
(370,-221,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
60 59 34 1 4 6 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
11 1 9 9 10 83 0 10 10 12 67 3 1 2 0 0 2 83 0 2 2 14 67 8 1 6 6 7 83 0 7 7 13 67 0 4 4 5 83 0 5 5 21 67 0 12 12 13 83 0 13 13 25 13 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 2 3 1 2 0 6 2 0 91 11 1 9 9 10 83 0 10 10 12 67 8 1 6 6 7 83 0 7 7 13 67 0 4 4 5 83 0 5 5 21 67 0 12 12 13 83 0 13 13 25 13 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 2 3 1 2 0 6 2 0 91 0 4 0 5 12 4 5 91 0 12 0 13 12 13 87 11 1 9 9 10 83 0 10 10 12 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
1 1 0 3 6 3 0 96 0 2 0 3 0 2 3 91 0 4 0 5 12 4 5 91 0 12 0 13 12 13 87 11 1 9 9 10 83 0 10 10 14 67 8 1 6 6 7 83 0 7 7 13 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
128 126 120 118 112 109 103 100 94 91 79 76 71 67 63 61 53 50 45 42 52 52 17 25 14 30
CALL[ ]	/* CallFunction */";
};
width = 747;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(636,-36,o),
(722,-37,o),
(722,-17,cs),
(722,-10,o),
(718,-6,o),
(711,-5,cs),
(703,-4,o),
(691,-4,o),
(676,-4,cs),
(648,-4,o),
(623,-3,o),
(600,-2,cs),
(577,-1,o),
(562,3,o),
(557,8,cs),
(504,64,o),
(421,170,o),
(362,246,cs),
(325,294,o),
(287,344,o),
(248,395,c),
(383,540,o),
(477,637,o),
(593,749,cs),
(616,769,o),
(669,768,o),
(712,770,cs),
(725,770,o),
(732,774,o),
(732,781,cs),
(732,792,o),
(721,795,o),
(709,795,cs),
(452,795,ls),
(439,795,o),
(430,793,o),
(425,790,cs),
(420,787,o),
(418,783,o),
(418,780,cs),
(418,765,o),
(439,766,o),
(452,766,cs),
(472,766,o),
(523,769,o),
(523,750,cs),
(523,741,o),
(478,689,o),
(386,594,cs),
(302,507,o),
(225,429,o),
(183,391,c),
(183,766,ls),
(183,790,o),
(236,791,o),
(254,791,cs),
(270,791,o),
(291,791,o),
(291,806,cs),
(291,811,o),
(288,815,o),
(282,818,cs),
(275,820,o),
(261,821,o),
(240,821,cs),
(58,821,ls),
(46,821,o),
(21,821,o),
(21,806,cs),
(21,793,o),
(43,791,o),
(58,791,cs),
(88,791,o),
(138,791,o),
(138,768,cs),
(138,709,o),
(139,648,o),
(140,585,cs),
(141,521,o),
(142,460,o),
(142,401,cs),
(142,342,o),
(141,287,o),
(140,235,cs),
(139,182,o),
(138,129,o),
(138,74,cs),
(138,30,o),
(98,28,o),
(65,28,cs),
(53,28,o),
(36,25,o),
(36,13,cs),
(36,2,o),
(58,0,o),
(77,0,cs),
(289,0,ls),
(302,0,o),
(309,4,o),
(309,13,cs),
(309,24,o),
(294,30,o),
(279,30,cs),
(183,30,l),
(183,335,l),
(218,370,l),
(266,309,o),
(331,219,o),
(410,118,cs),
(480,26,o),
(532,-36,o),
(550,-36,cs)
);
},
{
closed = 1;
nodes = (
(392,-202,o),
(408,-152,o),
(408,-123,cs),
(408,-78,o),
(386,-66,o),
(366,-66,cs),
(339,-66,o),
(326,-83,o),
(326,-100,cs),
(326,-132,o),
(362,-127,o),
(362,-144,cs),
(362,-151,o),
(360,-159,o),
(357,-168,cs),
(353,-178,o),
(351,-185,o),
(351,-190,cs),
(351,-197,o),
(358,-202,o),
(365,-202,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
60 59 34 0 4 5 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
10 1 8 8 9 83 0 9 9 12 67 2 1 0 0 1 83 0 1 1 14 67 7 1 5 5 6 83 0 6 6 13 67 0 3 3 4 83 0 4 4 21 67 0 11 11 12 83 0 12 12 17 12 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 1 2 1 0 5 1 0 91 10 1 8 8 9 83 0 9 9 12 67 7 1 5 5 6 83 0 6 6 13 67 0 3 3 4 83 0 4 4 21 67 0 11 11 12 83 0 12 12 17 12 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 2 1 0 5 1 0 91 0 3 0 4 11 3 4 91 10 1 8 8 9 83 0 9 9 12 67 7 1 5 5 6 83 0 6 6 13 67 0 11 11 12 83 0 12 12 17 12 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 2 1 0 5 1 0 91 0 3 0 4 11 3 4 91 0 11 0 12 11 12 87 10 1 8 8 9 83 0 9 9 12 67 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 2 1 0 5 1 0 91 0 3 0 4 11 3 4 91 0 11 0 12 11 12 87 10 1 8 8 9 83 0 9 9 14 67 7 1 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
121 119 113 111 105 102 98 95 91 88 76 73 69 66 63 61 53 49 45 42 51 52 58 13 18
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = Kcommaaccent;
unicode = 310;
},
{
glyphname = L;
kernLeft = B;
kernRight = L;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(505,0,ls),
(525,0,o),
(535,6,o),
(538,29,cs),
(548,167,o),
(553,249,o),
(553,274,cs),
(553,301,o),
(540,315,o),
(515,315,cs),
(476,315,o),
(472,296,o),
(472,265,cs),
(472,295,o),
(465,137,o),
(459,115,cs),
(454,92,o),
(438,84,o),
(419,84,cs),
(229,84,l),
(229,720,ls),
(229,733,o),
(233,742,o),
(242,749,cs),
(250,756,o),
(268,759,o),
(296,759,cs),
(312,759,o),
(334,765,o),
(334,790,cs),
(334,813,o),
(326,821,o),
(283,821,cs),
(63,821,ls),
(40,821,o),
(21,814,o),
(21,786,cs),
(21,757,o),
(38,750,o),
(63,749,cs),
(91,749,o),
(131,738,o),
(131,712,cs),
(131,620,o),
(137,544,o),
(137,416,cs),
(137,297,o),
(135,184,o),
(135,126,cs),
(135,95,o),
(110,81,o),
(77,77,cs),
(34,72,o),
(12,66,o),
(12,34,cs),
(12,25,o),
(15,17,o),
(22,10,cs),
(29,3,o),
(43,0,o),
(66,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 4 0 3 0 4 3 104 2 1 0 0 1 83 0 1 1 12 67 0 3 3 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 2 4 2 0 96 0 4 3 2 4 3 102 0 2 2 1 83 0 1 1 12 67 0 3 3 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 2 4 2 0 96 0 4 3 2 4 3 102 0 2 2 1 83 0 1 1 14 67 0 3 3 5 84 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
59 56 48 46 37 35 32 30 26 23 19 17 6 15
CALL[ ]	/* CallFunction */";
};
width = 581;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(494,0,ls),
(514,0,o),
(524,6,o),
(527,29,c),
(526,11,o),
(543,234,o),
(543,284,cs),
(543,303,o),
(528,309,o),
(509,309,cs),
(480,309,o),
(476,290,o),
(476,259,cs),
(476,281,o),
(468,121,o),
(463,97,cs),
(459,74,o),
(443,66,o),
(423,66,cs),
(212,66,l),
(212,746,ls),
(212,770,o),
(272,771,o),
(289,771,cs),
(305,771,o),
(326,775,o),
(326,796,cs),
(326,805,o),
(323,812,o),
(317,816,cs),
(310,819,o),
(296,821,o),
(275,821,cs),
(73,821,ls),
(61,821,o),
(36,819,o),
(36,796,cs),
(36,773,o),
(58,771,o),
(73,771,cs),
(94,771,o),
(135,768,o),
(135,734,cs),
(135,693,o),
(137,652,o),
(138,610,cs),
(139,561,o),
(141,500,o),
(141,416,cs),
(141,284,o),
(139,149,o),
(139,78,cs),
(139,50,o),
(101,48,o),
(67,48,cs),
(44,48,o),
(32,44,o),
(32,24,cs),
(32,17,o),
(33,0,o),
(56,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 5 1 4 1 5 4 104 7 1 0 4 6 4 0 96 3 1 1 1 2 83 0 2 2 12 67 0 4 4 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 5 1 4 1 5 4 104 7 1 0 4 6 4 0 96 3 1 1 1 2 83 0 2 2 14 67 0 4 4 6 84 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
2 0 64 61 52 50 41 39 35 32 28 25 21 19 0 68 2 68 8 15
CALL[ ]	/* CallFunction */";
};
width = 565;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(470,0,ls),
(490,0,o),
(500,6,o),
(503,29,cs),
(507,82,o),
(519,243,o),
(519,279,cs),
(519,294,o),
(507,299,o),
(500,299,cs),
(492,299,o),
(487,295,o),
(485,286,cs),
(483,277,o),
(482,264,o),
(482,249,cs),
(482,270,o),
(474,99,o),
(469,67,cs),
(466,44,o),
(452,36,o),
(429,36,cs),
(188,36,l),
(188,766,ls),
(188,790,o),
(239,791,o),
(255,791,cs),
(271,791,o),
(292,791,o),
(292,806,cs),
(292,811,o),
(289,815,o),
(283,818,cs),
(276,820,o),
(262,821,o),
(241,821,cs),
(59,821,ls),
(47,821,o),
(22,821,o),
(22,806,cs),
(22,793,o),
(44,791,o),
(59,791,cs),
(84,791,o),
(141,788,o),
(141,754,cs),
(141,712,o),
(143,668,o),
(144,622,cs),
(145,570,o),
(147,505,o),
(147,416,cs),
(147,277,o),
(145,133,o),
(145,58,cs),
(145,28,o),
(93,28,o),
(53,28,cs),
(30,28,o),
(18,22,o),
(18,11,cs),
(18,8,o),
(19,5,o),
(22,3,cs),
(24,1,o),
(31,0,o),
(42,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 5 1 4 1 5 4 104 7 1 0 4 6 4 0 96 3 1 1 1 2 83 0 2 2 12 67 0 4 4 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 5 1 4 1 5 4 104 7 1 0 4 6 4 0 96 3 1 1 1 2 83 0 2 2 14 67 0 4 4 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
2 0 64 61 52 50 41 39 35 32 28 25 21 18 0 67 2 67 8 15
CALL[ ]	/* CallFunction */";
};
width = 542;
}
);
note = L;
unicode = 76;
},
{
glyphname = Lacute;
kernLeft = B;
kernRight = L;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(505,0,ls),
(525,0,o),
(535,6,o),
(538,29,cs),
(548,167,o),
(553,249,o),
(553,274,cs),
(553,301,o),
(540,315,o),
(515,315,cs),
(476,315,o),
(472,296,o),
(472,265,cs),
(472,295,o),
(465,137,o),
(459,115,cs),
(454,92,o),
(438,84,o),
(419,84,cs),
(229,84,l),
(229,720,ls),
(229,733,o),
(233,742,o),
(242,749,cs),
(250,756,o),
(268,759,o),
(296,759,cs),
(312,759,o),
(334,765,o),
(334,790,cs),
(334,813,o),
(326,821,o),
(283,821,cs),
(63,821,ls),
(40,821,o),
(21,814,o),
(21,786,cs),
(21,757,o),
(38,750,o),
(63,749,cs),
(91,749,o),
(131,738,o),
(131,712,cs),
(131,620,o),
(137,544,o),
(137,416,cs),
(137,297,o),
(135,184,o),
(135,126,cs),
(135,95,o),
(110,81,o),
(77,77,cs),
(34,72,o),
(12,66,o),
(12,34,cs),
(12,25,o),
(15,17,o),
(22,10,cs),
(29,3,o),
(43,0,o),
(66,0,cs)
);
},
{
closed = 1;
nodes = (
(213,840,o),
(298,897,o),
(298,935,cs),
(298,954,o),
(284,972,o),
(257,972,cs),
(219,972,o),
(144,899,o),
(144,871,cs),
(144,855,o),
(158,840,o),
(179,840,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 1 0 1 106 0 0 3 0 106 0 6 2 5 2 6 5 104 4 1 2 2 3 83 0 3 3 12 67 0 5 5 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 0 0 3 0 106 0 2 4 6 4 2 96 0 6 5 4 6 5 102 0 4 4 3 83 0 3 3 12 67 0 5 5 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 0 0 3 0 106 0 2 4 6 4 2 96 0 6 5 4 6 5 102 0 4 4 3 83 0 3 3 14 67 0 5 5 7 84 0 7 7 13 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
75 72 64 62 53 51 48 46 42 39 35 33 38 36 8 17
CALL[ ]	/* CallFunction */";
};
width = 581;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(494,0,ls),
(514,0,o),
(524,6,o),
(527,29,c),
(526,11,o),
(543,234,o),
(543,284,cs),
(543,303,o),
(528,309,o),
(509,309,cs),
(480,309,o),
(476,290,o),
(476,259,cs),
(476,281,o),
(468,121,o),
(463,97,cs),
(459,74,o),
(443,66,o),
(423,66,cs),
(212,66,l),
(212,746,ls),
(212,770,o),
(272,771,o),
(289,771,cs),
(305,771,o),
(326,775,o),
(326,796,cs),
(326,805,o),
(323,812,o),
(317,816,cs),
(310,819,o),
(296,821,o),
(275,821,cs),
(73,821,ls),
(61,821,o),
(36,819,o),
(36,796,cs),
(36,773,o),
(58,771,o),
(73,771,cs),
(94,771,o),
(135,768,o),
(135,734,cs),
(135,693,o),
(137,652,o),
(138,610,cs),
(139,561,o),
(141,500,o),
(141,416,cs),
(141,284,o),
(139,149,o),
(139,78,cs),
(139,50,o),
(101,48,o),
(67,48,cs),
(44,48,o),
(32,44,o),
(32,24,cs),
(32,17,o),
(33,0,o),
(56,0,cs)
);
},
{
closed = 1;
nodes = (
(160,854,o),
(248,908,o),
(248,941,cs),
(248,960,o),
(236,972,o),
(216,972,cs),
(187,972,o),
(110,904,o),
(110,877,cs),
(110,864,o),
(119,854,o),
(134,854,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 1 0 1 106 0 0 4 0 106 0 7 3 6 3 7 6 104 9 1 2 6 8 6 2 96 5 1 3 3 4 83 0 4 4 12 67 0 6 6 8 84 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 0 1 106 0 0 4 0 106 0 7 3 6 3 7 6 104 9 1 2 6 8 6 2 96 5 1 3 3 4 83 0 4 4 14 67 0 6 6 8 84 0 8 8 13 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
18 16 80 77 68 66 57 55 51 48 44 41 37 35 16 84 18 84 38 36 10 17
CALL[ ]	/* CallFunction */";
};
width = 565;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(470,0,ls),
(490,0,o),
(500,6,o),
(503,29,cs),
(507,82,o),
(519,243,o),
(519,279,cs),
(519,294,o),
(507,299,o),
(500,299,cs),
(492,299,o),
(487,295,o),
(485,286,cs),
(483,277,o),
(482,264,o),
(482,249,cs),
(482,270,o),
(474,99,o),
(469,67,cs),
(466,44,o),
(452,36,o),
(429,36,cs),
(188,36,l),
(188,766,ls),
(188,790,o),
(239,791,o),
(255,791,cs),
(271,791,o),
(292,791,o),
(292,806,cs),
(292,811,o),
(289,815,o),
(283,818,cs),
(276,820,o),
(262,821,o),
(241,821,cs),
(59,821,ls),
(47,821,o),
(22,821,o),
(22,806,cs),
(22,793,o),
(44,791,o),
(59,791,cs),
(84,791,o),
(141,788,o),
(141,754,cs),
(141,712,o),
(143,668,o),
(144,622,cs),
(145,570,o),
(147,505,o),
(147,416,cs),
(147,277,o),
(145,133,o),
(145,58,cs),
(145,28,o),
(93,28,o),
(53,28,cs),
(30,28,o),
(18,22,o),
(18,11,cs),
(18,8,o),
(19,5,o),
(22,3,cs),
(24,1,o),
(31,0,o),
(42,0,cs)
);
},
{
closed = 1;
nodes = (
(131,875,o),
(219,928,o),
(219,949,cs),
(219,968,o),
(211,971,o),
(200,971,cs),
(180,971,o),
(105,910,o),
(105,886,cs),
(105,879,o),
(108,875,o),
(113,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 1 0 1 106 0 0 4 0 106 0 7 3 6 3 7 6 104 9 1 2 6 8 6 2 96 5 1 3 3 4 83 0 4 4 12 67 0 6 6 8 84 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 0 1 106 0 0 4 0 106 0 7 3 6 3 7 6 104 9 1 2 6 8 6 2 96 5 1 3 3 4 83 0 4 4 14 67 0 6 6 8 84 0 8 8 13 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
17 15 79 76 67 65 56 54 50 47 43 40 36 33 15 82 17 82 37 36 10 17
CALL[ ]	/* CallFunction */";
};
width = 542;
}
);
note = Lacute;
unicode = 313;
},
{
glyphname = Lcaron;
kernLeft = B;
kernRight = L;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(505,0,ls),
(525,0,o),
(535,6,o),
(538,29,cs),
(548,167,o),
(553,249,o),
(553,274,cs),
(553,301,o),
(540,315,o),
(515,315,cs),
(476,315,o),
(472,296,o),
(472,265,cs),
(472,295,o),
(465,137,o),
(459,115,cs),
(454,92,o),
(438,84,o),
(419,84,cs),
(229,84,l),
(229,720,ls),
(229,733,o),
(233,742,o),
(242,749,cs),
(250,756,o),
(268,759,o),
(296,759,cs),
(312,759,o),
(334,765,o),
(334,790,cs),
(334,813,o),
(326,821,o),
(283,821,cs),
(63,821,ls),
(40,821,o),
(21,814,o),
(21,786,cs),
(21,757,o),
(38,750,o),
(63,749,cs),
(91,749,o),
(131,738,o),
(131,712,cs),
(131,620,o),
(137,544,o),
(137,416,cs),
(137,297,o),
(135,184,o),
(135,126,cs),
(135,95,o),
(110,81,o),
(77,77,cs),
(34,72,o),
(12,66,o),
(12,34,cs),
(12,25,o),
(15,17,o),
(22,10,cs),
(29,3,o),
(43,0,o),
(66,0,cs)
);
},
{
closed = 1;
nodes = (
(223,830,o),
(333,909,o),
(333,951,cs),
(333,960,o),
(330,972,o),
(319,972,cs),
(302,972,o),
(240,952,o),
(199,922,c),
(162,949,o),
(99,972,o),
(80,972,cs),
(72,972,o),
(67,965,o),
(67,958,cs),
(67,931,o),
(95,901,o),
(127,875,cs),
(154,852,o),
(189,830,o),
(199,830,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
2 9 2 0 1 0 106 0 1 4 1 106 0 7 3 6 3 7 6 104 5 1 3 3 4 83 0 4 4 12 67 0 6 6 8 84 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
2 9 2 0 1 0 106 0 1 4 1 106 0 3 5 7 5 3 96 0 7 6 5 7 6 102 0 5 5 4 83 0 4 4 12 67 0 6 6 8 84 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
2 9 2 0 1 0 106 0 1 4 1 106 0 3 5 7 5 3 96 0 7 6 5 7 6 102 0 5 5 4 83 0 4 4 14 67 0 6 6 8 84 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
1 0 85 82 74 72 63 61 58 56 52 49 45 43 17 15 9 7 0 25 1 25 10 15
CALL[ ]	/* CallFunction */";
};
width = 580;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(494,0,ls),
(514,0,o),
(524,6,o),
(527,29,c),
(526,11,o),
(543,234,o),
(543,284,cs),
(543,303,o),
(528,309,o),
(509,309,cs),
(480,309,o),
(476,290,o),
(476,259,cs),
(476,281,o),
(468,121,o),
(463,97,cs),
(459,74,o),
(443,66,o),
(423,66,cs),
(212,66,l),
(212,746,ls),
(212,770,o),
(272,771,o),
(289,771,cs),
(305,771,o),
(326,775,o),
(326,796,cs),
(326,805,o),
(323,812,o),
(317,816,cs),
(310,819,o),
(296,821,o),
(275,821,cs),
(73,821,ls),
(61,821,o),
(36,819,o),
(36,796,cs),
(36,773,o),
(58,771,o),
(73,771,cs),
(94,771,o),
(135,768,o),
(135,734,cs),
(135,693,o),
(137,652,o),
(138,610,cs),
(139,561,o),
(141,500,o),
(141,416,cs),
(141,284,o),
(139,149,o),
(139,78,cs),
(139,50,o),
(101,48,o),
(67,48,cs),
(44,48,o),
(32,44,o),
(32,24,cs),
(32,17,o),
(33,0,o),
(56,0,cs)
);
},
{
closed = 1;
nodes = (
(209,847,o),
(315,919,o),
(315,955,cs),
(315,964,o),
(312,972,o),
(304,972,cs),
(296,972,o),
(248,959,o),
(184,921,c),
(144,945,o),
(83,972,o),
(65,972,cs),
(58,972,o),
(54,968,o),
(54,959,cs),
(54,918,o),
(162,847,o),
(184,847,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
2 10 2 0 1 0 106 0 1 5 1 106 0 8 4 7 4 8 7 104 11 1 3 7 9 7 3 96 6 1 4 4 5 83 0 5 5 12 67 0 7 7 9 84 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
2 10 2 0 1 0 106 0 1 5 1 106 0 8 4 7 4 8 7 104 11 1 3 7 9 7 3 96 6 1 4 4 5 83 0 5 5 14 67 0 7 7 9 84 0 9 9 13 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
27 25 1 0 89 86 77 75 66 64 60 57 53 50 46 44 25 93 27 93 16 14 9 7 0 24 1 24 12 15
CALL[ ]	/* CallFunction */";
};
width = 565;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(471,0,ls),
(491,0,o),
(501,6,o),
(504,29,cs),
(508,82,o),
(520,243,o),
(520,279,cs),
(520,294,o),
(508,299,o),
(501,299,cs),
(493,299,o),
(488,295,o),
(486,286,cs),
(484,277,o),
(483,264,o),
(483,249,cs),
(483,270,o),
(475,99,o),
(470,67,cs),
(467,44,o),
(453,36,o),
(430,36,cs),
(189,36,l),
(189,736,ls),
(189,760,o),
(240,761,o),
(256,761,cs),
(272,761,o),
(293,761,o),
(293,776,cs),
(293,781,o),
(290,785,o),
(284,788,cs),
(277,790,o),
(263,791,o),
(242,791,cs),
(60,791,ls),
(48,791,o),
(23,791,o),
(23,776,cs),
(23,763,o),
(45,761,o),
(60,761,cs),
(85,761,o),
(142,758,o),
(142,724,cs),
(142,688,o),
(144,646,o),
(145,607,cs),
(146,562,o),
(148,505,o),
(148,416,cs),
(148,277,o),
(146,133,o),
(146,58,cs),
(146,28,o),
(94,28,o),
(54,28,cs),
(31,28,o),
(19,22,o),
(19,11,cs),
(19,8,o),
(20,5,o),
(23,3,cs),
(25,1,o),
(32,0,o),
(43,0,cs)
);
},
{
closed = 1;
nodes = (
(188,875,o),
(290,936,o),
(290,961,cs),
(290,968,o),
(287,972,o),
(282,972,cs),
(270,972,o),
(213,941,o),
(162,919,c),
(108,942,o),
(55,972,o),
(43,972,cs),
(38,972,o),
(35,968,o),
(35,961,cs),
(35,936,o),
(139,875,o),
(162,875,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
87 1 8 7 1 66 9 11 2 7 8 7 106 0 8 2 8 106 0 5 1 4 1 5 4 104 10 1 0 4 6 4 0 96 0 2 3 1 1 5 2 1 91 0 4 4 6 84 0 6 6 13 6 68 69 68 2 0 83 81 76 74 68 91 69 91 64 61 52 50 41 39 35 32 28 25 21 18 0 67 2 67 12 15
CALL[ ]	/* CallFunction */";
};
width = 543;
}
);
note = Lcaron;
unicode = 317;
},
{
glyphname = Lcommaaccent;
kernLeft = B;
kernRight = L;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(505,0,ls),
(525,0,o),
(535,6,o),
(538,29,cs),
(548,167,o),
(553,249,o),
(553,274,cs),
(553,301,o),
(540,315,o),
(515,315,cs),
(476,315,o),
(472,296,o),
(472,265,cs),
(472,295,o),
(465,137,o),
(459,115,cs),
(454,92,o),
(438,84,o),
(419,84,cs),
(229,84,l),
(229,720,ls),
(229,733,o),
(233,742,o),
(242,749,cs),
(250,756,o),
(268,759,o),
(296,759,cs),
(312,759,o),
(334,765,o),
(334,790,cs),
(334,813,o),
(326,821,o),
(283,821,cs),
(63,821,ls),
(40,821,o),
(21,814,o),
(21,786,cs),
(21,757,o),
(38,750,o),
(63,749,cs),
(91,749,o),
(131,738,o),
(131,712,cs),
(131,620,o),
(137,544,o),
(137,416,cs),
(137,297,o),
(135,184,o),
(135,126,cs),
(135,95,o),
(110,81,o),
(77,77,cs),
(34,72,o),
(12,66,o),
(12,34,cs),
(12,25,o),
(15,17,o),
(22,10,cs),
(29,3,o),
(43,0,o),
(66,0,cs)
);
},
{
closed = 1;
nodes = (
(314,-250,o),
(377,-208,o),
(377,-131,cs),
(377,-74,o),
(341,-50,o),
(309,-50,cs),
(265,-50,o),
(249,-80,o),
(249,-108,cs),
(249,-139,o),
(285,-141,o),
(285,-158,cs),
(285,-178,o),
(283,-193,o),
(278,-202,cs),
(273,-212,o),
(270,-220,o),
(270,-227,cs),
(270,-250,o),
(289,-250,o),
(296,-250,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 6 2 5 2 6 5 104 4 1 2 2 3 83 0 3 3 12 67 0 5 5 7 84 0 7 7 13 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 6 2 5 2 6 5 104 0 0 0 1 0 1 87 4 1 2 2 3 83 0 3 3 12 67 0 5 5 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 4 6 4 2 96 0 6 5 4 6 5 102 0 0 0 1 0 1 87 0 4 4 3 83 0 3 3 12 67 0 5 5 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 2 4 6 4 2 96 0 6 5 4 6 5 102 0 0 0 1 0 1 87 0 4 4 3 83 0 3 3 14 67 0 5 5 7 84 0 7 7 13 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
81 78 70 68 59 57 54 52 48 45 41 39 38 34 8 17
CALL[ ]	/* CallFunction */";
};
width = 581;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(494,0,ls),
(514,0,o),
(524,6,o),
(527,29,c),
(526,11,o),
(543,234,o),
(543,284,cs),
(543,303,o),
(528,309,o),
(509,309,cs),
(480,309,o),
(476,290,o),
(476,259,cs),
(476,281,o),
(468,121,o),
(463,97,cs),
(459,74,o),
(443,66,o),
(423,66,cs),
(212,66,l),
(212,746,ls),
(212,770,o),
(272,771,o),
(289,771,cs),
(305,771,o),
(326,775,o),
(326,796,cs),
(326,805,o),
(323,812,o),
(317,816,cs),
(310,819,o),
(296,821,o),
(275,821,cs),
(73,821,ls),
(61,821,o),
(36,819,o),
(36,796,cs),
(36,773,o),
(58,771,o),
(73,771,cs),
(94,771,o),
(135,768,o),
(135,734,cs),
(135,693,o),
(137,652,o),
(138,610,cs),
(139,561,o),
(141,500,o),
(141,416,cs),
(141,284,o),
(139,149,o),
(139,78,cs),
(139,50,o),
(101,48,o),
(67,48,cs),
(44,48,o),
(32,44,o),
(32,24,cs),
(32,17,o),
(33,0,o),
(56,0,cs)
);
},
{
closed = 1;
nodes = (
(319,-232,o),
(360,-182,o),
(360,-128,cs),
(360,-75,o),
(330,-56,o),
(303,-56,cs),
(266,-56,o),
(251,-81,o),
(251,-105,cs),
(251,-137,o),
(287,-136,o),
(287,-153,cs),
(287,-170,o),
(285,-183,o),
(281,-191,cs),
(276,-200,o),
(274,-207,o),
(274,-213,cs),
(274,-230,o),
(288,-232,o),
(295,-232,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 5 1 4 1 5 4 104 9 1 0 4 6 4 0 96 3 1 1 1 2 83 0 2 2 12 67 0 4 4 6 84 0 6 6 13 67 0 7 7 8 83 0 8 8 25 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 5 1 4 1 5 4 104 9 1 0 4 6 4 0 96 0 7 0 8 7 8 87 3 1 1 1 2 83 0 2 2 12 67 0 4 4 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 5 1 4 1 5 4 104 9 1 0 4 6 4 0 96 0 7 0 8 7 8 87 3 1 1 1 2 83 0 2 2 14 67 0 4 4 6 84 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
3 1 82 80 74 72 65 62 53 51 42 40 36 33 29 26 22 20 1 69 3 69 10 26
CALL[ ]	/* CallFunction */";
};
width = 565;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(470,0,ls),
(490,0,o),
(500,6,o),
(503,29,cs),
(507,82,o),
(519,243,o),
(519,279,cs),
(519,294,o),
(507,299,o),
(500,299,cs),
(492,299,o),
(487,295,o),
(485,286,cs),
(483,277,o),
(482,264,o),
(482,249,cs),
(482,270,o),
(474,99,o),
(469,67,cs),
(466,44,o),
(452,36,o),
(429,36,cs),
(188,36,l),
(188,766,ls),
(188,790,o),
(239,791,o),
(255,791,cs),
(271,791,o),
(292,791,o),
(292,806,cs),
(292,811,o),
(289,815,o),
(283,818,cs),
(276,820,o),
(262,821,o),
(241,821,cs),
(59,821,ls),
(47,821,o),
(22,821,o),
(22,806,cs),
(22,793,o),
(44,791,o),
(59,791,cs),
(84,791,o),
(141,788,o),
(141,754,cs),
(141,712,o),
(143,668,o),
(144,622,cs),
(145,570,o),
(147,505,o),
(147,416,cs),
(147,277,o),
(145,133,o),
(145,58,cs),
(145,28,o),
(93,28,o),
(53,28,cs),
(30,28,o),
(18,22,o),
(18,11,cs),
(18,8,o),
(19,5,o),
(22,3,cs),
(24,1,o),
(31,0,o),
(42,0,cs)
);
},
{
closed = 1;
nodes = (
(319,-204,o),
(335,-154,o),
(335,-125,cs),
(335,-80,o),
(313,-68,o),
(293,-68,cs),
(266,-68,o),
(253,-85,o),
(253,-102,cs),
(253,-134,o),
(289,-129,o),
(289,-146,cs),
(289,-153,o),
(287,-161,o),
(284,-170,cs),
(280,-180,o),
(278,-187,o),
(278,-192,cs),
(278,-199,o),
(285,-204,o),
(292,-204,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 7 3 6 3 7 6 104 9 1 2 6 8 6 2 96 5 1 3 3 4 83 0 4 4 12 67 0 6 6 8 83 0 8 8 13 67 0 0 0 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 7 3 6 3 7 6 104 9 1 2 6 8 6 2 96 0 0 0 1 0 1 87 5 1 3 3 4 83 0 4 4 12 67 0 6 6 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 7 3 6 3 7 6 104 9 1 2 6 8 6 2 96 0 0 0 1 0 1 87 5 1 3 3 4 83 0 4 4 14 67 0 6 6 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
24 22 86 83 74 72 63 61 57 54 50 47 43 40 22 89 24 89 38 34 10 17
CALL[ ]	/* CallFunction */";
};
width = 542;
}
);
note = Lcommaaccent;
unicode = 315;
},
{
glyphname = Ldot;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(505,0,ls),
(525,0,o),
(535,6,o),
(538,29,cs),
(548,167,o),
(553,249,o),
(553,274,cs),
(553,301,o),
(540,315,o),
(515,315,cs),
(476,315,o),
(472,296,o),
(472,265,cs),
(472,295,o),
(465,137,o),
(459,115,cs),
(454,92,o),
(438,84,o),
(419,84,cs),
(229,84,l),
(229,720,ls),
(229,733,o),
(233,742,o),
(242,749,cs),
(250,756,o),
(268,759,o),
(296,759,cs),
(312,759,o),
(334,765,o),
(334,790,cs),
(334,813,o),
(326,821,o),
(283,821,cs),
(63,821,ls),
(40,821,o),
(21,814,o),
(21,786,cs),
(21,757,o),
(38,750,o),
(63,749,cs),
(91,749,o),
(131,738,o),
(131,712,cs),
(131,620,o),
(137,544,o),
(137,416,cs),
(137,297,o),
(135,184,o),
(135,126,cs),
(135,95,o),
(110,81,o),
(77,77,cs),
(34,72,o),
(12,66,o),
(12,34,cs),
(12,25,o),
(15,17,o),
(22,10,cs),
(29,3,o),
(43,0,o),
(66,0,cs)
);
},
{
closed = 1;
nodes = (
(390,295,o),
(427,310,o),
(427,365,cs),
(427,401,o),
(399,426,o),
(367,426,cs),
(319,426,o),
(301,388,o),
(301,361,cs),
(301,318,o),
(327,295,o),
(360,295,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 4 6 7 6 4 7 104 2 1 0 0 1 83 0 1 1 12 67 0 7 7 6 83 0 6 6 15 67 0 3 3 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 4 6 7 6 4 7 104 0 6 0 7 3 6 7 91 2 1 0 0 1 83 0 1 1 12 67 0 3 3 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 0 2 6 2 0 96 0 4 6 7 6 4 7 104 0 6 0 7 3 6 7 91 0 2 2 1 83 0 1 1 12 67 0 3 3 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 0 2 6 2 0 96 0 4 6 7 6 4 7 104 0 6 0 7 3 6 7 91 0 2 2 1 83 0 1 1 14 67 0 3 3 5 84 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
78 76 70 68 59 56 48 46 37 35 32 30 26 23 19 17 8 15
CALL[ ]	/* CallFunction */";
};
width = 577;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(494,0,ls),
(514,0,o),
(524,6,o),
(527,29,c),
(526,11,o),
(543,234,o),
(543,284,cs),
(543,303,o),
(528,309,o),
(509,309,cs),
(480,309,o),
(476,290,o),
(476,259,cs),
(476,281,o),
(468,121,o),
(463,97,cs),
(459,74,o),
(443,66,o),
(423,66,cs),
(212,66,l),
(212,746,ls),
(212,770,o),
(272,771,o),
(289,771,cs),
(305,771,o),
(326,775,o),
(326,796,cs),
(326,805,o),
(323,812,o),
(317,816,cs),
(310,819,o),
(296,821,o),
(275,821,cs),
(73,821,ls),
(61,821,o),
(36,819,o),
(36,796,cs),
(36,773,o),
(58,771,o),
(73,771,cs),
(94,771,o),
(135,768,o),
(135,734,cs),
(135,693,o),
(137,652,o),
(138,610,cs),
(139,561,o),
(141,500,o),
(141,416,cs),
(141,284,o),
(139,149,o),
(139,78,cs),
(139,50,o),
(101,48,o),
(67,48,cs),
(44,48,o),
(32,44,o),
(32,24,cs),
(32,17,o),
(33,0,o),
(56,0,cs)
);
},
{
closed = 1;
nodes = (
(374,304,o),
(405,317,o),
(405,365,cs),
(405,396,o),
(383,417,o),
(356,417,cs),
(314,417,o),
(300,381,o),
(300,361,cs),
(300,325,o),
(322,304,o),
(349,304,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 5 7 8 7 5 8 104 9 1 0 4 6 4 0 96 3 1 1 1 2 83 0 2 2 12 67 0 8 8 7 83 0 7 7 15 67 0 4 4 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 5 7 8 7 5 8 104 9 1 0 4 6 4 0 96 0 7 0 8 4 7 8 91 3 1 1 1 2 83 0 2 2 12 67 0 4 4 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 5 7 8 7 5 8 104 9 1 0 4 6 4 0 96 0 7 0 8 4 7 8 91 3 1 1 1 2 83 0 2 2 14 67 0 4 4 6 84 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
3 1 82 80 76 74 65 62 53 51 42 40 36 33 29 26 22 20 1 69 3 69 10 26
CALL[ ]	/* CallFunction */";
};
width = 562;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(470,0,ls),
(490,0,o),
(500,6,o),
(503,29,cs),
(507,82,o),
(519,243,o),
(519,279,cs),
(519,294,o),
(507,299,o),
(500,299,cs),
(492,299,o),
(487,295,o),
(485,286,cs),
(483,277,o),
(482,264,o),
(482,249,cs),
(482,270,o),
(474,99,o),
(469,67,cs),
(466,44,o),
(452,36,o),
(429,36,cs),
(188,36,l),
(188,766,ls),
(188,790,o),
(239,791,o),
(255,791,cs),
(271,791,o),
(292,791,o),
(292,806,cs),
(292,811,o),
(289,815,o),
(283,818,cs),
(276,820,o),
(262,821,o),
(241,821,cs),
(59,821,ls),
(47,821,o),
(22,821,o),
(22,806,cs),
(22,793,o),
(44,791,o),
(59,791,cs),
(84,791,o),
(141,788,o),
(141,754,cs),
(141,712,o),
(143,668,o),
(144,622,cs),
(145,570,o),
(147,505,o),
(147,416,cs),
(147,277,o),
(145,133,o),
(145,58,cs),
(145,28,o),
(93,28,o),
(53,28,cs),
(30,28,o),
(18,22,o),
(18,11,cs),
(18,8,o),
(19,5,o),
(22,3,cs),
(24,1,o),
(31,0,o),
(42,0,cs)
);
},
{
closed = 1;
nodes = (
(364,319,o),
(380,339,o),
(380,359,cs),
(380,378,o),
(368,397,o),
(337,397,cs),
(305,397,o),
(293,374,o),
(293,357,cs),
(293,340,o),
(304,319,o),
(335,319,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 7 1 6 1 7 6 104 9 1 2 6 8 6 2 96 0 0 0 1 7 0 1 91 5 1 3 3 4 83 0 4 4 12 67 0 6 6 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 7 1 6 1 7 6 104 9 1 2 6 8 6 2 96 0 0 0 1 7 0 1 91 5 1 3 3 4 83 0 4 4 14 67 0 6 6 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
14 12 76 73 64 62 53 51 47 44 40 37 33 30 12 79 14 79 36 34 10 17
CALL[ ]	/* CallFunction */";
};
width = 541;
}
);
note = Ldot;
unicode = 319;
},
{
glyphname = Lslash;
kernLeft = B;
kernRight = L;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(509,0,ls),
(529,0,o),
(539,6,o),
(542,29,cs),
(552,167,o),
(557,249,o),
(557,274,cs),
(557,301,o),
(544,315,o),
(519,315,cs),
(480,315,o),
(476,296,o),
(476,265,cs),
(476,295,o),
(469,137,o),
(463,115,cs),
(458,92,o),
(442,84,o),
(423,84,cs),
(233,84,l),
(233,387,l),
(357,434,ls),
(380,442,o),
(386,460,o),
(386,475,cs),
(386,498,o),
(368,518,o),
(347,518,cs),
(341,518,o),
(327,514,o),
(306,507,cs),
(285,500,o),
(260,491,o),
(233,481,c),
(233,720,ls),
(233,733,o),
(237,742,o),
(246,749,cs),
(254,756,o),
(272,759,o),
(300,759,cs),
(316,759,o),
(338,765,o),
(338,790,cs),
(338,813,o),
(330,821,o),
(287,821,cs),
(67,821,ls),
(44,821,o),
(25,814,o),
(25,786,cs),
(25,757,o),
(42,750,o),
(67,749,cs),
(95,749,o),
(135,738,o),
(135,712,cs),
(135,629,o),
(141,547,o),
(141,446,c),
(67,419,ls),
(47,412,o),
(41,396,o),
(41,381,cs),
(41,364,o),
(57,339,o),
(84,339,cs),
(87,339,o),
(94,340,o),
(105,343,cs),
(115,346,o),
(127,350,o),
(141,355,c),
(141,233,o),
(139,175,o),
(139,126,cs),
(139,95,o),
(114,81,o),
(81,77,cs),
(38,72,o),
(16,66,o),
(16,34,cs),
(16,25,o),
(19,17,o),
(26,10,cs),
(33,3,o),
(47,0,o),
(70,0,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
55 45 18 8 4 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 4 1 0 1 4 0 104 0 0 6 1 0 6 102 0 6 5 1 6 5 102 3 1 1 1 2 83 0 2 2 12 67 0 5 5 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 3 4 3 1 96 0 4 0 3 4 0 102 0 0 6 3 0 6 102 0 6 5 3 6 5 102 0 3 3 2 83 0 2 2 12 67 0 5 5 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 1 3 4 3 1 96 0 4 0 3 4 0 102 0 0 6 3 0 6 102 0 6 5 3 6 5 102 0 3 3 2 83 0 2 2 14 67 0 5 5 7 84 0 7 7 13 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
56 41 39 37 36 52 47 42 8 23
CALL[ ]	/* CallFunction */";
};
width = 586;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(496,0,ls),
(516,0,o),
(526,6,o),
(529,29,c),
(528,11,o),
(545,234,o),
(545,284,cs),
(545,303,o),
(530,309,o),
(511,309,cs),
(482,309,o),
(478,290,o),
(478,259,cs),
(478,281,o),
(470,121,o),
(465,97,cs),
(461,74,o),
(445,66,o),
(425,66,cs),
(214,66,l),
(214,746,ls),
(214,770,o),
(274,771,o),
(291,771,cs),
(307,771,o),
(328,775,o),
(328,796,cs),
(328,805,o),
(325,812,o),
(319,816,cs),
(312,819,o),
(298,821,o),
(277,821,cs),
(75,821,ls),
(63,821,o),
(38,819,o),
(38,796,cs),
(38,773,o),
(60,771,o),
(75,771,cs),
(96,771,o),
(137,768,o),
(137,734,cs),
(137,693,o),
(139,652,o),
(140,610,cs),
(141,561,o),
(143,500,o),
(143,416,cs),
(143,284,o),
(141,149,o),
(141,78,cs),
(141,50,o),
(103,48,o),
(69,48,cs),
(46,48,o),
(34,44,o),
(34,24,cs),
(34,17,o),
(35,0,o),
(58,0,cs)
);
},
{
closed = 1;
nodes = (
(150,376,o),
(257,377,o),
(346,377,cs),
(375,377,o),
(383,401,o),
(383,412,cs),
(383,427,o),
(370,442,o),
(358,442,cs),
(300,442,o),
(260,439,o),
(198,439,cs),
(174,439,o),
(150,439,o),
(125,440,cs),
(100,441,o),
(80,441,o),
(67,441,cs),
(44,441,o),
(35,422,o),
(35,409,cs),
(35,396,o),
(50,376,o),
(67,376,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 7 1 6 1 7 6 104 10 1 2 6 8 6 2 96 5 1 3 3 4 83 0 4 4 12 67 0 1 1 0 83 9 1 0 0 15 67 0 6 6 8 84 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 1 6 1 7 6 104 10 1 2 6 8 6 2 96 9 1 0 0 1 7 0 1 91 5 1 3 3 4 83 0 4 4 12 67 0 6 6 8 84 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 7 1 6 1 7 6 104 10 1 2 6 8 6 2 96 9 1 0 0 1 7 0 1 91 5 1 3 3 4 83 0 4 4 14 67 0 6 6 8 84 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
27 25 1 0 89 86 77 75 66 64 60 57 53 50 46 44 25 93 27 93 12 5 0 24 1 16 11 15
CALL[ ]	/* CallFunction */";
};
width = 567;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(468,0,ls),
(488,0,o),
(498,6,o),
(501,29,cs),
(505,82,o),
(517,243,o),
(517,279,cs),
(517,294,o),
(505,299,o),
(498,299,cs),
(490,299,o),
(485,295,o),
(483,286,cs),
(481,277,o),
(480,264,o),
(480,249,cs),
(480,270,o),
(472,99,o),
(467,67,cs),
(464,44,o),
(450,36,o),
(427,36,cs),
(186,36,l),
(186,391,l),
(211,391,o),
(235,391,o),
(258,392,cs),
(281,392,o),
(302,392,o),
(319,392,cs),
(340,392,o),
(346,405,o),
(346,412,cs),
(346,419,o),
(338,427,o),
(331,427,cs),
(310,427,o),
(289,427,o),
(268,426,cs),
(247,425,o),
(219,424,o),
(186,424,c),
(186,766,ls),
(186,790,o),
(237,791,o),
(253,791,cs),
(269,791,o),
(290,791,o),
(290,806,cs),
(290,811,o),
(287,815,o),
(281,818,cs),
(274,820,o),
(260,821,o),
(239,821,cs),
(57,821,ls),
(45,821,o),
(20,821,o),
(20,806,cs),
(20,793,o),
(42,791,o),
(57,791,cs),
(82,791,o),
(139,788,o),
(139,754,cs),
(139,712,o),
(141,669,o),
(142,624,cs),
(143,573,o),
(145,511,o),
(145,424,c),
(124,424,o),
(105,424,o),
(86,425,cs),
(67,426,o),
(51,426,o),
(40,426,cs),
(25,426,o),
(18,416,o),
(18,409,cs),
(18,402,o),
(28,391,o),
(40,391,cs),
(145,391,l),
(145,257,o),
(143,126,o),
(143,58,cs),
(143,28,o),
(91,28,o),
(51,28,cs),
(28,28,o),
(16,22,o),
(16,11,cs),
(16,8,o),
(17,5,o),
(20,3,cs),
(22,1,o),
(29,0,o),
(40,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 9 1 8 1 9 8 104 11 1 0 8 10 8 0 96 5 1 3 3 4 83 0 4 4 12 67 7 1 1 1 2 83 6 1 2 2 15 67 0 8 8 10 83 0 10 10 13 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 9 1 8 1 9 8 104 11 1 0 8 10 8 0 96 6 1 2 7 1 1 9 2 1 91 5 1 3 3 4 83 0 4 4 12 67 0 8 8 10 83 0 10 10 13 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 9 1 8 1 9 8 104 11 1 0 8 10 8 0 96 6 1 2 7 1 1 9 2 1 91 5 1 3 3 4 83 0 4 4 14 67 0 8 8 10 83 0 10 10 13 10 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
2 0 87 84 75 73 64 62 61 57 53 49 45 42 38 35 31 28 20 16 12 10 0 90 2 90 12 15
CALL[ ]	/* CallFunction */";
};
width = 540;
}
);
note = Lslash;
unicode = 321;
},
{
glyphname = M;
kernLeft = M;
kernRight = M;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(969,-41,ls),
(1002,-41,o),
(1009,-26,o),
(1009,-7,cs),
(1009,16,o),
(995,22,o),
(959,22,cs),
(875,22,l),
(875,92,o),
(870,228,o),
(870,380,cs),
(870,526,o),
(874,578,o),
(874,652,cs),
(874,677,o),
(878,696,o),
(905,699,cs),
(920,702,o),
(934,703,o),
(947,704,cs),
(960,705,o),
(973,706,o),
(987,707,cs),
(1016,710,o),
(1032,728,o),
(1032,752,cs),
(1032,777,o),
(1011,781,o),
(980,781,cs),
(840,781,ls),
(758,781,o),
(750,779,o),
(736,738,cs),
(715,670,o),
(677,558,o),
(632,425,cs),
(587,292,o),
(547,177,o),
(522,108,c),
(491,177,o),
(439,300,o),
(381,442,cs),
(327,573,o),
(278,695,o),
(258,756,cs),
(246,792,o),
(231,801,o),
(214,801,cs),
(116,801,ls),
(76,801,o),
(48,799,o),
(32,794,cs),
(16,789,o),
(8,780,o),
(8,765,cs),
(8,734,o),
(39,727,o),
(71,725,cs),
(102,722,o),
(133,717,o),
(133,686,cs),
(133,634,o),
(134,584,o),
(135,537,cs),
(136,489,o),
(136,438,o),
(136,383,cs),
(136,316,o),
(136,274,o),
(134,237,cs),
(132,204,o),
(129,162,o),
(128,123,cs),
(125,82,o),
(117,67,o),
(93,64,cs),
(53,59,o),
(24,55,o),
(24,28,cs),
(24,5,o),
(34,0,o),
(58,0,cs),
(311,0,ls),
(342,0,o),
(351,14,o),
(351,29,cs),
(351,60,o),
(328,63,o),
(301,63,cs),
(228,63,l),
(228,607,l),
(248,547,o),
(293,438,o),
(339,329,cs),
(380,229,o),
(437,89,o),
(458,30,cs),
(467,8,o),
(479,-28,o),
(515,-28,cs),
(546,-28,o),
(565,-19,o),
(577,18,cs),
(593,66,o),
(680,289,o),
(778,580,c),
(778,84,ls),
(778,39,o),
(763,30,o),
(735,26,cs),
(699,21,o),
(677,13,o),
(677,-7,cs),
(677,-35,o),
(683,-41,o),
(728,-41,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
103 56 36 3 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 7 0 0 4 7 0 91 0 1 3 1 2 1 2 87 0 6 6 14 67 0 4 4 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 7 0 0 4 7 0 91 0 1 0 2 1 2 87 0 6 6 14 67 0 4 4 5 84 0 5 5 13 67 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 6 7 6 106 0 7 0 0 4 7 0 91 0 1 0 2 1 2 87 0 4 4 5 84 0 5 5 13 67 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 6 7 6 106 0 3 5 2 5 3 2 104 0 7 0 0 4 7 0 91 0 1 0 2 1 2 87 0 4 4 5 84 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
117 113 94 91 66 63 59 57 45 43 52 46 17 8 18
CALL[ ]	/* CallFunction */";
};
width = 1057;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(980,-41,ls),
(993,-41,o),
(1000,-32,o),
(1000,-15,cs),
(1000,5,o),
(985,10,o),
(970,10,cs),
(858,10,l),
(858,63,o),
(853,243,o),
(853,380,cs),
(853,454,o),
(854,515,o),
(855,563,cs),
(856,611,o),
(857,649,o),
(857,678,cs),
(857,699,o),
(859,722,o),
(888,725,cs),
(909,727,o),
(927,728,o),
(943,729,cs),
(959,730,o),
(977,731,o),
(998,733,c),
(1008,736,o),
(1017,738,o),
(1025,739,cs),
(1032,740,o),
(1036,747,o),
(1036,758,cs),
(1036,781,o),
(1012,781,o),
(991,781,cs),
(843,781,ls),
(775,781,o),
(777,778,o),
(757,739,c),
(732,670,o),
(689,550,o),
(639,408,cs),
(593,276,o),
(541,134,o),
(518,74,c),
(494,149,o),
(437,287,o),
(380,428,cs),
(314,588,o),
(270,697,o),
(251,761,cs),
(240,797,o),
(233,801,o),
(214,801,cs),
(89,801,ls),
(50,801,o),
(31,798,o),
(31,775,cs),
(31,731,o),
(137,773,o),
(137,712,cs),
(137,658,o),
(138,604,o),
(139,550,cs),
(140,496,o),
(140,440,o),
(140,383,cs),
(140,283,o),
(138,185,o),
(131,94,c),
(131,48,o),
(98,48,o),
(83,48,cs),
(71,48,o),
(54,46,o),
(54,23,cs),
(54,3,o),
(76,0,o),
(95,0,cs),
(321,0,ls),
(334,0,o),
(341,11,o),
(341,23,cs),
(341,46,o),
(326,51,o),
(311,51,cs),
(211,51,l),
(211,650,l),
(232,590,o),
(279,479,o),
(336,344,cs),
(396,200,o),
(438,97,o),
(468,16,cs),
(473,4,o),
(486,-28,o),
(515,-28,cs),
(534,-28,o),
(547,-16,o),
(555,7,cs),
(568,46,o),
(598,126,o),
(643,249,cs),
(683,359,o),
(730,487,o),
(782,632,c),
(782,53,ls),
(782,8,o),
(761,7,o),
(743,7,cs),
(731,7,o),
(714,5,o),
(714,-15,cs),
(714,-38,o),
(736,-41,o),
(755,-41,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
97 72 52 33 4 5 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 9 0 0 5 9 0 91 3 1 1 0 2 1 2 87 0 8 8 14 67 7 1 5 5 6 84 0 6 6 13 67 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 8 9 8 106 0 9 0 0 5 9 0 91 3 1 1 0 2 1 2 87 7 1 5 5 6 84 0 6 6 13 67 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 8 9 8 106 0 4 6 2 6 4 2 104 0 9 0 0 5 9 0 91 3 1 1 0 2 1 2 87 7 1 5 5 6 84 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
111 108 88 85 52 52 44 43 36 51 44 17 10 23
CALL[ ]	/* CallFunction */";
};
width = 1033;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(946,-41,ls),
(959,-41,o),
(966,-37,o),
(966,-28,cs),
(966,-17,o),
(951,-10,o),
(936,-10,cs),
(834,-10,l),
(834,44,o),
(829,234,o),
(829,380,cs),
(829,459,o),
(830,524,o),
(831,575,cs),
(832,626,o),
(833,667,o),
(833,698,cs),
(833,719,o),
(835,742,o),
(864,745,cs),
(885,747,o),
(903,748,o),
(919,749,cs),
(935,750,o),
(953,751,o),
(974,753,cs),
(993,755,o),
(1002,760,o),
(1002,768,cs),
(1002,781,o),
(988,781,o),
(967,781,cs),
(831,781,ls),
(784,781,o),
(788,776,o),
(775,739,cs),
(749,662,o),
(696,533,o),
(641,394,cs),
(586,254,o),
(532,124,o),
(504,45,c),
(480,124,o),
(418,267,o),
(355,414,cs),
(294,555,o),
(232,702,o),
(213,761,cs),
(202,797,o),
(195,801,o),
(176,801,cs),
(65,801,ls),
(47,801,o),
(17,799,o),
(17,781,cs),
(17,751,o),
(143,785,o),
(143,738,cs),
(143,681,o),
(144,622,o),
(145,563,cs),
(146,504,o),
(146,444,o),
(146,383,cs),
(146,275,o),
(144,170,o),
(137,74,c),
(137,28,o),
(96,28,o),
(69,28,cs),
(57,28,o),
(40,25,o),
(40,13,cs),
(40,2,o),
(62,0,o),
(81,0,cs),
(293,0,ls),
(306,0,o),
(313,4,o),
(313,13,cs),
(313,24,o),
(298,31,o),
(283,31,cs),
(187,31,l),
(187,704,l),
(212,638,o),
(269,506,o),
(331,361,cs),
(404,185,o),
(446,89,o),
(482,-7,cs),
(487,-21,o),
(493,-28,o),
(501,-28,cs),
(512,-28,o),
(519,-17,o),
(522,-12,cs),
(538,23,o),
(587,140,o),
(630,252,cs),
(684,391,o),
(723,494,o),
(788,662,c),
(788,33,ls),
(788,-15,o),
(750,-13,o),
(724,-13,cs),
(712,-13,o),
(695,-16,o),
(695,-28,cs),
(695,-39,o),
(717,-41,o),
(736,-41,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
98 52 33 3 5 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 10 0 0 5 10 0 91 3 1 1 0 2 1 2 87 0 8 8 9 83 0 9 9 14 67 7 1 5 5 6 83 0 6 6 13 67 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 9 0 8 0 9 8 91 0 10 0 0 5 10 0 91 3 1 1 0 2 1 2 87 7 1 5 5 6 83 0 6 6 13 67 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 4 1 2 1 4 2 104 0 9 0 8 0 9 8 91 0 10 0 0 5 10 0 91 3 1 1 0 2 1 2 87 7 1 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
112 109 89 85 27 52 51 41 45 52 51 44 17 11 24
CALL[ ]	/* CallFunction */";
};
width = 999;
}
);
note = M;
unicode = 77;
},
{
glyphname = N;
kernLeft = B;
kernRight = Eng;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(689,-11,o),
(703,15,o),
(703,47,cs),
(703,150,o),
(701,269,o),
(701,368,cs),
(701,515,o),
(705,574,o),
(705,712,cs),
(705,723,o),
(711,730,o),
(723,734,cs),
(734,737,o),
(757,741,o),
(790,744,cs),
(815,747,o),
(829,752,o),
(829,776,cs),
(829,787,o),
(825,794,o),
(818,798,cs),
(811,802,o),
(796,804,o),
(775,804,cs),
(548,804,ls),
(516,804,o),
(497,795,o),
(497,774,cs),
(497,747,o),
(516,741,o),
(539,738,cs),
(568,735,o),
(587,732,o),
(596,728,cs),
(605,724,o),
(610,716,o),
(610,705,cs),
(610,179,l),
(597,215,o),
(538,325,o),
(460,468,cs),
(381,611,o),
(317,730,o),
(288,781,cs),
(279,798,o),
(272,809,o),
(267,814,cs),
(262,819,o),
(256,821,o),
(248,821,cs),
(118,821,ls),
(52,821,o),
(26,815,o),
(26,791,cs),
(26,736,o),
(138,762,o),
(138,726,cs),
(138,674,o),
(139,619,o),
(140,560,cs),
(141,501,o),
(141,443,o),
(141,388,cs),
(141,340,o),
(140,294,o),
(138,250,cs),
(136,206,o),
(135,162,o),
(135,119,cs),
(135,80,o),
(121,72,o),
(94,68,cs),
(49,61,o),
(29,57,o),
(29,32,cs),
(29,5,o),
(50,0,o),
(70,0,cs),
(335,0,ls),
(351,0,o),
(365,9,o),
(365,32,cs),
(365,57,o),
(340,63,o),
(315,63,cs),
(233,63,l),
(233,655,l),
(596,25,l),
(596,25,l),
(611,-2,o),
(633,-11,o),
(654,-11,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
45 0 2 0 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 2 2 12 67 0 3 3 14 67 0 0 0 1 84 4 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 2 2 12 67 0 3 3 14 67 0 0 0 1 84 0 1 1 13 67 0 4 4 24 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 2 2 12 67 0 0 0 1 84 0 1 1 13 67 0 3 3 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 2 2 14 67 0 0 0 1 84 0 1 1 13 67 0 3 3 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
79 77 57 54 36 33 52 33 5 17
CALL[ ]	/* CallFunction */";
};
width = 849;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(669,-11,o),
(683,2,o),
(683,21,cs),
(683,130,o),
(681,262,o),
(681,368,cs),
(681,480,o),
(683,616,o),
(685,729,cs),
(685,753,o),
(757,754,o),
(776,754,cs),
(792,754,o),
(813,758,o),
(813,781,cs),
(813,790,o),
(810,796,o),
(804,799,cs),
(797,802,o),
(783,804,o),
(762,804,cs),
(556,804,ls),
(531,804,o),
(519,796,o),
(519,781,cs),
(519,758,o),
(541,754,o),
(556,754,cs),
(579,754,o),
(611,753,o),
(611,731,cs),
(611,132,l),
(594,170,o),
(533,288,o),
(452,442,cs),
(378,579,o),
(309,706,o),
(269,781,cs),
(260,798,o),
(253,809,o),
(248,814,cs),
(243,819,o),
(237,821,o),
(229,821,cs),
(91,821,ls),
(52,821,o),
(33,815,o),
(33,804,cs),
(33,751,o),
(139,779,o),
(139,738,cs),
(139,684,o),
(140,627,o),
(141,566,cs),
(142,505,o),
(142,445,o),
(142,388,cs),
(142,338,o),
(141,288,o),
(139,238,cs),
(136,187,o),
(134,139,o),
(133,94,cs),
(130,50,o),
(104,48,o),
(85,48,cs),
(73,48,o),
(56,42,o),
(56,25,cs),
(56,4,o),
(78,0,o),
(97,0,cs),
(323,0,ls),
(336,0,o),
(343,8,o),
(343,25,cs),
(343,45,o),
(328,51,o),
(313,51,cs),
(213,51,l),
(213,708,l),
(607,6,l),
(607,6,l),
(614,-6,o),
(629,-11,o),
(648,-11,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
43 0 2 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 7 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 5 6 1 4 0 5 4 91 0 3 3 12 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 5 6 1 4 0 5 4 91 0 3 3 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
47 52 51 61 63 52 51 33 8 23
CALL[ ]	/* CallFunction */";
};
width = 824;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(641,-11,o),
(655,-9,o),
(655,6,cs),
(655,100,o),
(653,180,o),
(653,368,cs),
(653,489,o),
(655,630,o),
(657,749,cs),
(657,773,o),
(719,774,o),
(738,774,cs),
(754,774,o),
(775,774,o),
(775,789,cs),
(775,794,o),
(772,798,o),
(766,801,cs),
(759,803,o),
(745,804,o),
(724,804,cs),
(533,804,ls),
(521,804,o),
(496,804,o),
(496,789,cs),
(496,776,o),
(518,774,o),
(533,774,cs),
(563,774,o),
(613,774,o),
(613,751,cs),
(613,80,l),
(575,151,o),
(511,259,o),
(422,415,cs),
(379,488,o),
(249,709,o),
(211,781,cs),
(202,798,o),
(195,809,o),
(190,814,cs),
(185,819,o),
(179,821,o),
(171,821,cs),
(63,821,ls),
(52,821,o),
(15,820,o),
(15,809,cs),
(15,779,o),
(141,806,o),
(141,758,cs),
(141,701,o),
(142,640,o),
(143,576,cs),
(144,511,o),
(144,449,o),
(144,388,cs),
(144,280,o),
(142,170,o),
(135,74,c),
(135,28,o),
(94,28,o),
(67,28,cs),
(55,28,o),
(38,25,o),
(38,13,cs),
(38,2,o),
(60,0,o),
(79,0,cs),
(291,0,ls),
(304,0,o),
(311,4,o),
(311,13,cs),
(311,24,o),
(296,31,o),
(281,31,cs),
(185,31,l),
(185,738,l),
(610,6,ls),
(618,-7,o),
(625,-11,o),
(634,-11,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
48 0 2 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 5 6 1 4 0 5 4 91 0 3 3 12 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 5 6 1 4 0 5 4 91 0 3 3 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
86 84 69 66 62 59 55 52 37 33 52 51 33 8 18
CALL[ ]	/* CallFunction */";
};
width = 788;
}
);
note = N;
unicode = 78;
},
{
glyphname = Nacute;
kernLeft = B;
kernRight = Eng;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(689,-11,o),
(703,15,o),
(703,47,cs),
(703,150,o),
(701,269,o),
(701,368,cs),
(701,515,o),
(705,574,o),
(705,712,cs),
(705,723,o),
(711,730,o),
(723,734,cs),
(734,737,o),
(757,741,o),
(790,744,cs),
(815,747,o),
(829,752,o),
(829,776,cs),
(829,787,o),
(825,794,o),
(818,798,cs),
(811,802,o),
(796,804,o),
(775,804,cs),
(548,804,ls),
(516,804,o),
(497,795,o),
(497,774,cs),
(497,747,o),
(516,741,o),
(539,738,cs),
(568,735,o),
(587,732,o),
(596,728,cs),
(605,724,o),
(610,716,o),
(610,705,cs),
(610,179,l),
(597,215,o),
(538,325,o),
(460,468,cs),
(381,611,o),
(317,730,o),
(288,781,cs),
(279,798,o),
(272,809,o),
(267,814,cs),
(262,819,o),
(256,821,o),
(248,821,cs),
(118,821,ls),
(52,821,o),
(26,815,o),
(26,791,cs),
(26,736,o),
(138,762,o),
(138,726,cs),
(138,674,o),
(139,619,o),
(140,560,cs),
(141,501,o),
(141,443,o),
(141,388,cs),
(141,340,o),
(140,294,o),
(138,250,cs),
(136,206,o),
(135,162,o),
(135,119,cs),
(135,80,o),
(121,72,o),
(94,68,cs),
(49,61,o),
(29,57,o),
(29,32,cs),
(29,5,o),
(50,0,o),
(70,0,cs),
(335,0,ls),
(351,0,o),
(365,9,o),
(365,32,cs),
(365,57,o),
(340,63,o),
(315,63,cs),
(233,63,l),
(233,655,l),
(596,25,l),
(596,25,l),
(611,-2,o),
(633,-11,o),
(654,-11,cs)
);
},
{
closed = 1;
nodes = (
(441,841,o),
(517,897,o),
(517,936,cs),
(517,953,o),
(503,972,o),
(476,972,cs),
(438,972,o),
(369,899,o),
(369,872,cs),
(369,856,o),
(384,841,o),
(404,841,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
61 16 2 2 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 1 106 0 0 4 0 106 0 4 4 12 67 0 5 5 14 67 0 2 2 3 84 6 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 0 1 106 0 0 4 0 106 0 4 4 12 67 0 5 5 14 67 0 2 2 3 84 0 3 3 13 67 0 6 6 24 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 0 1 106 0 0 4 0 106 0 4 4 12 67 0 2 2 3 84 0 3 3 13 67 0 5 5 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 1 0 1 106 0 0 4 0 106 0 4 4 14 67 0 2 2 3 84 0 3 3 13 67 0 5 5 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
95 93 73 70 52 49 52 35 38 36 7 19
CALL[ ]	/* CallFunction */";
};
width = 849;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(669,-11,o),
(683,2,o),
(683,21,cs),
(683,130,o),
(681,262,o),
(681,368,cs),
(681,480,o),
(683,616,o),
(685,729,cs),
(685,753,o),
(757,754,o),
(776,754,cs),
(792,754,o),
(813,758,o),
(813,781,cs),
(813,790,o),
(810,796,o),
(804,799,cs),
(797,802,o),
(783,804,o),
(762,804,cs),
(556,804,ls),
(531,804,o),
(519,796,o),
(519,781,cs),
(519,758,o),
(541,754,o),
(556,754,cs),
(579,754,o),
(611,753,o),
(611,731,cs),
(611,132,l),
(594,170,o),
(533,288,o),
(452,442,cs),
(378,579,o),
(309,706,o),
(269,781,cs),
(260,798,o),
(253,809,o),
(248,814,cs),
(243,819,o),
(237,821,o),
(229,821,cs),
(91,821,ls),
(52,821,o),
(33,815,o),
(33,804,cs),
(33,751,o),
(139,779,o),
(139,738,cs),
(139,684,o),
(140,627,o),
(141,566,cs),
(142,505,o),
(142,445,o),
(142,388,cs),
(142,338,o),
(141,288,o),
(139,238,cs),
(136,187,o),
(134,139,o),
(133,94,cs),
(130,50,o),
(104,48,o),
(85,48,cs),
(73,48,o),
(56,42,o),
(56,25,cs),
(56,4,o),
(78,0,o),
(97,0,cs),
(323,0,ls),
(336,0,o),
(343,8,o),
(343,25,cs),
(343,45,o),
(328,51,o),
(313,51,cs),
(213,51,l),
(213,708,l),
(607,6,l),
(607,6,l),
(614,-6,o),
(629,-11,o),
(648,-11,cs)
);
},
{
closed = 1;
nodes = (
(403,854,o),
(491,908,o),
(491,941,cs),
(491,960,o),
(479,972,o),
(459,972,cs),
(430,972,o),
(353,904,o),
(353,877,cs),
(353,864,o),
(362,854,o),
(377,854,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
59 16 2 2 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 1 106 0 0 5 0 106 0 5 5 12 67 8 1 6 6 7 83 0 7 7 14 67 4 1 2 2 3 84 0 3 3 13 67 0 9 9 24 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 1 0 1 106 0 0 5 0 106 0 5 5 12 67 8 1 6 6 7 83 0 7 7 14 67 4 1 2 2 3 84 9 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 1 106 0 0 5 0 106 0 5 5 12 67 8 1 6 6 7 83 0 7 7 14 67 4 1 2 2 3 84 0 3 3 13 67 0 9 9 24 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 5 0 106 0 7 8 1 6 2 7 6 91 0 5 5 12 67 4 1 2 2 3 84 0 3 3 13 67 0 9 9 24 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 5 0 106 0 7 8 1 6 2 7 6 91 0 5 5 14 67 4 1 2 2 3 84 0 3 3 13 67 0 9 9 24 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
96 94 52 51 61 63 52 51 35 38 36 10 24
CALL[ ]	/* CallFunction */";
};
width = 824;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(641,-11,o),
(655,-9,o),
(655,6,cs),
(655,100,o),
(653,180,o),
(653,368,cs),
(653,489,o),
(655,630,o),
(657,749,cs),
(657,773,o),
(719,774,o),
(738,774,cs),
(754,774,o),
(775,774,o),
(775,789,cs),
(775,794,o),
(772,798,o),
(766,801,cs),
(759,803,o),
(745,804,o),
(724,804,cs),
(533,804,ls),
(521,804,o),
(496,804,o),
(496,789,cs),
(496,776,o),
(518,774,o),
(533,774,cs),
(563,774,o),
(613,774,o),
(613,751,cs),
(613,80,l),
(575,151,o),
(511,259,o),
(422,415,cs),
(379,488,o),
(249,709,o),
(211,781,cs),
(202,798,o),
(195,809,o),
(190,814,cs),
(185,819,o),
(179,821,o),
(171,821,cs),
(63,821,ls),
(52,821,o),
(15,820,o),
(15,809,cs),
(15,779,o),
(141,806,o),
(141,758,cs),
(141,701,o),
(142,640,o),
(143,576,cs),
(144,511,o),
(144,449,o),
(144,388,cs),
(144,280,o),
(142,170,o),
(135,74,c),
(135,28,o),
(94,28,o),
(67,28,cs),
(55,28,o),
(38,25,o),
(38,13,cs),
(38,2,o),
(60,0,o),
(79,0,cs),
(291,0,ls),
(304,0,o),
(311,4,o),
(311,13,cs),
(311,24,o),
(296,31,o),
(281,31,cs),
(185,31,l),
(185,738,l),
(610,6,ls),
(618,-7,o),
(625,-11,o),
(634,-11,cs)
);
},
{
closed = 1;
nodes = (
(356,875,o),
(454,930,o),
(454,950,cs),
(454,969,o),
(446,972,o),
(435,972,cs),
(416,972,o),
(330,911,o),
(330,886,cs),
(330,879,o),
(333,875,o),
(338,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
63 15 2 2 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 1 106 0 0 5 0 106 0 5 5 12 67 8 1 6 6 7 83 0 7 7 14 67 4 1 2 2 3 84 0 3 3 13 67 0 9 9 24 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 5 0 106 0 7 8 1 6 2 7 6 91 0 5 5 12 67 4 1 2 2 3 84 0 3 3 13 67 0 9 9 24 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 5 0 106 0 7 8 1 6 2 7 6 91 0 5 5 14 67 4 1 2 2 3 84 0 3 3 13 67 0 9 9 24 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
101 99 84 81 77 74 70 67 52 48 52 51 35 37 36 10 20
CALL[ ]	/* CallFunction */";
};
width = 788;
}
);
note = Nacute;
unicode = 323;
},
{
glyphname = Ncaron;
kernLeft = B;
kernRight = Eng;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(689,-11,o),
(703,15,o),
(703,47,cs),
(703,150,o),
(701,269,o),
(701,368,cs),
(701,515,o),
(705,574,o),
(705,712,cs),
(705,723,o),
(711,730,o),
(723,734,cs),
(734,737,o),
(757,741,o),
(790,744,cs),
(815,747,o),
(829,752,o),
(829,776,cs),
(829,787,o),
(825,794,o),
(818,798,cs),
(811,802,o),
(796,804,o),
(775,804,cs),
(548,804,ls),
(516,804,o),
(497,795,o),
(497,774,cs),
(497,747,o),
(516,741,o),
(539,738,cs),
(568,735,o),
(587,732,o),
(596,728,cs),
(605,724,o),
(610,716,o),
(610,705,cs),
(610,179,l),
(597,215,o),
(538,325,o),
(460,468,cs),
(381,611,o),
(317,730,o),
(288,781,cs),
(279,798,o),
(272,809,o),
(267,814,cs),
(262,819,o),
(256,821,o),
(248,821,cs),
(118,821,ls),
(52,821,o),
(26,815,o),
(26,791,cs),
(26,736,o),
(138,762,o),
(138,726,cs),
(138,674,o),
(139,619,o),
(140,560,cs),
(141,501,o),
(141,443,o),
(141,388,cs),
(141,340,o),
(140,294,o),
(138,250,cs),
(136,206,o),
(135,162,o),
(135,119,cs),
(135,80,o),
(121,72,o),
(94,68,cs),
(49,61,o),
(29,57,o),
(29,32,cs),
(29,5,o),
(50,0,o),
(70,0,cs),
(335,0,ls),
(351,0,o),
(365,9,o),
(365,32,cs),
(365,57,o),
(340,63,o),
(315,63,cs),
(233,63,l),
(233,655,l),
(596,25,l),
(596,25,l),
(611,-2,o),
(633,-11,o),
(654,-11,cs)
);
},
{
closed = 1;
nodes = (
(455,830,o),
(565,909,o),
(565,951,cs),
(565,960,o),
(563,972,o),
(552,972,cs),
(546,972,o),
(491,960,o),
(432,922,c),
(392,948,o),
(330,972,o),
(313,972,cs),
(304,972,o),
(300,965,o),
(300,958,cs),
(300,931,o),
(328,901,o),
(359,875,cs),
(386,852,o),
(421,830,o),
(432,830,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
21 1 1 0 71 26 2 3 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
2 8 2 0 1 0 106 0 1 5 1 106 0 5 5 12 67 0 6 6 14 67 0 3 3 4 84 7 1 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
2 8 2 0 1 0 106 0 1 5 1 106 0 5 5 12 67 0 6 6 14 67 0 3 3 4 84 0 4 4 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
2 8 2 0 1 0 106 0 1 5 1 106 0 5 5 12 67 0 3 3 4 84 0 4 4 13 67 0 6 6 7 83 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
2 8 2 0 1 0 106 0 1 5 1 106 0 5 5 14 67 0 3 3 4 84 0 4 4 13 67 0 6 6 7 83 0 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
1 0 105 103 83 80 62 59 36 33 29 27 17 15 9 7 0 25 1 25 9 15
CALL[ ]	/* CallFunction */";
};
width = 849;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(669,-11,o),
(683,2,o),
(683,21,cs),
(683,130,o),
(681,262,o),
(681,368,cs),
(681,480,o),
(683,616,o),
(685,729,cs),
(685,753,o),
(757,754,o),
(776,754,cs),
(792,754,o),
(813,758,o),
(813,781,cs),
(813,790,o),
(810,796,o),
(804,799,cs),
(797,802,o),
(783,804,o),
(762,804,cs),
(556,804,ls),
(531,804,o),
(519,796,o),
(519,781,cs),
(519,758,o),
(541,754,o),
(556,754,cs),
(579,754,o),
(611,753,o),
(611,731,cs),
(611,132,l),
(594,170,o),
(533,288,o),
(452,442,cs),
(378,579,o),
(309,706,o),
(269,781,cs),
(260,798,o),
(253,809,o),
(248,814,cs),
(243,819,o),
(237,821,o),
(229,821,cs),
(91,821,ls),
(52,821,o),
(33,815,o),
(33,804,cs),
(33,751,o),
(139,779,o),
(139,738,cs),
(139,684,o),
(140,627,o),
(141,566,cs),
(142,505,o),
(142,445,o),
(142,388,cs),
(142,338,o),
(141,288,o),
(139,238,cs),
(136,187,o),
(134,139,o),
(133,94,cs),
(130,50,o),
(104,48,o),
(85,48,cs),
(73,48,o),
(56,42,o),
(56,25,cs),
(56,4,o),
(78,0,o),
(97,0,cs),
(323,0,ls),
(336,0,o),
(343,8,o),
(343,25,cs),
(343,45,o),
(328,51,o),
(313,51,cs),
(213,51,l),
(213,708,l),
(607,6,l),
(607,6,l),
(614,-6,o),
(629,-11,o),
(648,-11,cs)
);
},
{
closed = 1;
nodes = (
(437,847,o),
(543,919,o),
(543,955,cs),
(543,964,o),
(540,972,o),
(532,972,cs),
(524,972,o),
(476,959,o),
(412,921,c),
(372,945,o),
(311,972,o),
(293,972,cs),
(286,972,o),
(282,968,o),
(282,959,cs),
(282,918,o),
(390,847,o),
(412,847,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
20 1 1 0 68 25 2 3 7 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 6 6 12 67 9 1 7 7 8 83 0 8 8 14 67 5 1 3 3 4 84 0 4 4 13 67 0 10 10 24 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 6 6 12 67 9 1 7 7 8 83 0 8 8 14 67 5 1 3 3 4 84 10 1 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 6 6 12 67 9 1 7 7 8 83 0 8 8 14 67 5 1 3 3 4 84 0 4 4 13 67 0 10 10 24 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 8 9 1 7 3 8 7 91 0 6 6 12 67 5 1 3 3 4 84 0 4 4 13 67 0 10 10 24 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 8 9 1 7 3 8 7 91 0 6 6 14 67 5 1 3 3 4 84 0 4 4 13 67 0 10 10 24 10 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 105 103 88 85 81 78 75 72 59 56 41 38 34 31 28 26 16 14 9 7 0 24 1 24 12 15
CALL[ ]	/* CallFunction */";
};
width = 824;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(641,-11,o),
(655,-9,o),
(655,6,cs),
(655,100,o),
(653,180,o),
(653,368,cs),
(653,489,o),
(655,630,o),
(657,749,cs),
(657,773,o),
(719,774,o),
(738,774,cs),
(754,774,o),
(775,774,o),
(775,789,cs),
(775,794,o),
(772,798,o),
(766,801,cs),
(759,803,o),
(745,804,o),
(724,804,cs),
(533,804,ls),
(521,804,o),
(496,804,o),
(496,789,cs),
(496,776,o),
(518,774,o),
(533,774,cs),
(563,774,o),
(613,774,o),
(613,751,cs),
(613,80,l),
(575,151,o),
(511,259,o),
(422,415,cs),
(379,488,o),
(249,709,o),
(211,781,cs),
(202,798,o),
(195,809,o),
(190,814,cs),
(185,819,o),
(179,821,o),
(171,821,cs),
(63,821,ls),
(52,821,o),
(15,820,o),
(15,809,cs),
(15,779,o),
(141,806,o),
(141,758,cs),
(141,701,o),
(142,640,o),
(143,576,cs),
(144,511,o),
(144,449,o),
(144,388,cs),
(144,280,o),
(142,170,o),
(135,74,c),
(135,28,o),
(94,28,o),
(67,28,cs),
(55,28,o),
(38,25,o),
(38,13,cs),
(38,2,o),
(60,0,o),
(79,0,cs),
(291,0,ls),
(304,0,o),
(311,4,o),
(311,13,cs),
(311,24,o),
(296,31,o),
(281,31,cs),
(185,31,l),
(185,738,l),
(610,6,ls),
(618,-7,o),
(625,-11,o),
(634,-11,cs)
);
},
{
closed = 1;
nodes = (
(407,876,o),
(512,936,o),
(512,961,cs),
(512,968,o),
(509,972,o),
(504,972,cs),
(497,972,o),
(449,954,o),
(384,920,c),
(347,940,o),
(278,972,o),
(265,972,cs),
(260,972,o),
(257,968,o),
(257,961,cs),
(257,937,o),
(360,876,o),
(384,876,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
19 1 1 0 72 24 2 3 7 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 6 6 12 67 9 1 7 7 8 83 0 8 8 14 67 5 1 3 3 4 84 0 4 4 13 67 0 10 10 24 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 8 9 1 7 3 8 7 91 0 6 6 12 67 5 1 3 3 4 84 0 4 4 13 67 0 10 10 24 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 8 9 1 7 3 8 7 91 0 6 6 14 67 5 1 3 3 4 84 0 4 4 13 67 0 10 10 24 10 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 110 108 93 90 86 83 79 76 61 57 40 37 33 30 27 25 15 13 8 6 0 23 1 23 12 15
CALL[ ]	/* CallFunction */";
};
width = 788;
}
);
note = Ncaron;
unicode = 327;
},
{
glyphname = Ncommaaccent;
kernLeft = B;
kernRight = Eng;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(689,-11,o),
(703,15,o),
(703,47,cs),
(703,150,o),
(701,269,o),
(701,368,cs),
(701,515,o),
(705,574,o),
(705,712,cs),
(705,723,o),
(711,730,o),
(723,734,cs),
(734,737,o),
(757,741,o),
(790,744,cs),
(815,747,o),
(829,752,o),
(829,776,cs),
(829,787,o),
(825,794,o),
(818,798,cs),
(811,802,o),
(796,804,o),
(775,804,cs),
(548,804,ls),
(516,804,o),
(497,795,o),
(497,774,cs),
(497,747,o),
(516,741,o),
(539,738,cs),
(568,735,o),
(587,732,o),
(596,728,cs),
(605,724,o),
(610,716,o),
(610,705,cs),
(610,179,l),
(597,215,o),
(538,325,o),
(460,468,cs),
(381,611,o),
(317,730,o),
(288,781,cs),
(279,798,o),
(272,809,o),
(267,814,cs),
(262,819,o),
(256,821,o),
(248,821,cs),
(118,821,ls),
(52,821,o),
(26,815,o),
(26,791,cs),
(26,736,o),
(138,762,o),
(138,726,cs),
(138,674,o),
(139,619,o),
(140,560,cs),
(141,501,o),
(141,443,o),
(141,388,cs),
(141,340,o),
(140,294,o),
(138,250,cs),
(136,206,o),
(135,162,o),
(135,119,cs),
(135,80,o),
(121,72,o),
(94,68,cs),
(49,61,o),
(29,57,o),
(29,32,cs),
(29,5,o),
(50,0,o),
(70,0,cs),
(335,0,ls),
(351,0,o),
(365,9,o),
(365,32,cs),
(365,57,o),
(340,63,o),
(315,63,cs),
(233,63,l),
(233,655,l),
(596,25,l),
(596,25,l),
(611,-2,o),
(633,-11,o),
(654,-11,cs)
);
},
{
closed = 1;
nodes = (
(450,-247,o),
(513,-205,o),
(513,-128,cs),
(513,-71,o),
(477,-47,o),
(445,-47,cs),
(401,-47,o),
(385,-77,o),
(385,-105,cs),
(385,-136,o),
(421,-138,o),
(421,-155,cs),
(421,-175,o),
(419,-190,o),
(414,-199,cs),
(409,-209,o),
(406,-217,o),
(406,-224,cs),
(406,-247,o),
(425,-247,o),
(432,-247,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
67 22 2 2 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 4 4 12 67 0 5 5 14 67 0 2 2 3 84 6 1 3 3 13 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 0 0 1 0 1 87 0 4 4 12 67 0 5 5 14 67 0 2 2 3 84 6 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 0 0 1 0 1 87 0 4 4 12 67 0 5 5 14 67 0 2 2 3 84 0 3 3 13 67 0 6 6 24 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 0 0 1 0 1 87 0 4 4 12 67 0 2 2 3 84 0 3 3 13 67 0 5 5 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 0 1 0 1 87 0 4 4 14 67 0 2 2 3 84 0 3 3 13 67 0 5 5 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
101 99 79 76 58 55 52 43 38 34 7 19
CALL[ ]	/* CallFunction */";
};
width = 849;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(669,-11,o),
(683,2,o),
(683,21,cs),
(683,130,o),
(681,262,o),
(681,368,cs),
(681,480,o),
(683,616,o),
(685,729,cs),
(685,753,o),
(757,754,o),
(776,754,cs),
(792,754,o),
(813,758,o),
(813,781,cs),
(813,790,o),
(810,796,o),
(804,799,cs),
(797,802,o),
(783,804,o),
(762,804,cs),
(556,804,ls),
(531,804,o),
(519,796,o),
(519,781,cs),
(519,758,o),
(541,754,o),
(556,754,cs),
(579,754,o),
(611,753,o),
(611,731,cs),
(611,132,l),
(594,170,o),
(533,288,o),
(452,442,cs),
(378,579,o),
(309,706,o),
(269,781,cs),
(260,798,o),
(253,809,o),
(248,814,cs),
(243,819,o),
(237,821,o),
(229,821,cs),
(91,821,ls),
(52,821,o),
(33,815,o),
(33,804,cs),
(33,751,o),
(139,779,o),
(139,738,cs),
(139,684,o),
(140,627,o),
(141,566,cs),
(142,505,o),
(142,445,o),
(142,388,cs),
(142,338,o),
(141,288,o),
(139,238,cs),
(136,187,o),
(134,139,o),
(133,94,cs),
(130,50,o),
(104,48,o),
(85,48,cs),
(73,48,o),
(56,42,o),
(56,25,cs),
(56,4,o),
(78,0,o),
(97,0,cs),
(323,0,ls),
(336,0,o),
(343,8,o),
(343,25,cs),
(343,45,o),
(328,51,o),
(313,51,cs),
(213,51,l),
(213,708,l),
(607,6,l),
(607,6,l),
(614,-6,o),
(629,-11,o),
(648,-11,cs)
);
},
{
closed = 1;
nodes = (
(452,-229,o),
(493,-179,o),
(493,-125,cs),
(493,-72,o),
(463,-53,o),
(436,-53,cs),
(399,-53,o),
(384,-78,o),
(384,-102,cs),
(384,-134,o),
(420,-133,o),
(420,-150,cs),
(420,-167,o),
(418,-180,o),
(414,-188,cs),
(409,-197,o),
(407,-204,o),
(407,-210,cs),
(407,-227,o),
(421,-229,o),
(428,-229,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
44 1 2 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 7 1 1 1 13 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 8 0 9 8 9 87 0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 5 6 1 4 0 5 4 91 0 8 0 9 8 9 87 0 3 3 12 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 5 6 1 4 0 5 4 91 0 8 0 9 8 9 87 0 3 3 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
96 94 37 47 52 51 61 63 52 51 34 10 35
CALL[ ]	/* CallFunction */";
};
width = 824;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(641,-11,o),
(655,-9,o),
(655,6,cs),
(655,100,o),
(653,180,o),
(653,368,cs),
(653,489,o),
(655,630,o),
(657,749,cs),
(657,773,o),
(719,774,o),
(738,774,cs),
(754,774,o),
(775,774,o),
(775,789,cs),
(775,794,o),
(772,798,o),
(766,801,cs),
(759,803,o),
(745,804,o),
(724,804,cs),
(533,804,ls),
(521,804,o),
(496,804,o),
(496,789,cs),
(496,776,o),
(518,774,o),
(533,774,cs),
(563,774,o),
(613,774,o),
(613,751,cs),
(613,80,l),
(575,151,o),
(511,259,o),
(422,415,cs),
(379,488,o),
(249,709,o),
(211,781,cs),
(202,798,o),
(195,809,o),
(190,814,cs),
(185,819,o),
(179,821,o),
(171,821,cs),
(63,821,ls),
(52,821,o),
(15,820,o),
(15,809,cs),
(15,779,o),
(141,806,o),
(141,758,cs),
(141,701,o),
(142,640,o),
(143,576,cs),
(144,511,o),
(144,449,o),
(144,388,cs),
(144,280,o),
(142,170,o),
(135,74,c),
(135,28,o),
(94,28,o),
(67,28,cs),
(55,28,o),
(38,25,o),
(38,13,cs),
(38,2,o),
(60,0,o),
(79,0,cs),
(291,0,ls),
(304,0,o),
(311,4,o),
(311,13,cs),
(311,24,o),
(296,31,o),
(281,31,cs),
(185,31,l),
(185,738,l),
(610,6,ls),
(618,-7,o),
(625,-11,o),
(634,-11,cs)
);
},
{
closed = 1;
nodes = (
(449,-203,o),
(465,-153,o),
(465,-124,cs),
(465,-79,o),
(443,-67,o),
(423,-67,cs),
(396,-67,o),
(383,-84,o),
(383,-101,cs),
(383,-133,o),
(419,-128,o),
(419,-145,cs),
(419,-152,o),
(417,-160,o),
(414,-169,cs),
(410,-179,o),
(408,-186,o),
(408,-191,cs),
(408,-198,o),
(415,-203,o),
(422,-203,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
48 0 2 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 67 0 8 8 9 83 0 9 9 17 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 5 6 1 4 0 5 4 91 0 3 3 12 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 67 0 8 8 9 83 0 9 9 17 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 5 6 1 4 0 5 4 91 0 8 0 9 8 9 87 0 3 3 12 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 5 6 1 4 0 5 4 91 0 8 0 9 8 9 87 0 3 3 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
101 99 93 91 86 84 69 66 62 59 55 52 37 33 52 51 33 10 18
CALL[ ]	/* CallFunction */";
};
width = 788;
}
);
note = Ncommaaccent;
unicode = 325;
},
{
glyphname = Ndotaccent;
kernLeft = B;
kernRight = Eng;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(689,-11,o),
(703,15,o),
(703,47,cs),
(703,150,o),
(701,269,o),
(701,368,cs),
(701,515,o),
(705,574,o),
(705,712,cs),
(705,723,o),
(711,730,o),
(723,734,cs),
(734,737,o),
(757,741,o),
(790,744,cs),
(815,747,o),
(829,752,o),
(829,776,cs),
(829,787,o),
(825,794,o),
(818,798,cs),
(811,802,o),
(796,804,o),
(775,804,cs),
(548,804,ls),
(516,804,o),
(497,795,o),
(497,774,cs),
(497,747,o),
(516,741,o),
(539,738,cs),
(568,735,o),
(587,732,o),
(596,728,cs),
(605,724,o),
(610,716,o),
(610,705,cs),
(610,179,l),
(597,215,o),
(538,325,o),
(460,468,cs),
(381,611,o),
(317,730,o),
(288,781,cs),
(279,798,o),
(272,809,o),
(267,814,cs),
(262,819,o),
(256,821,o),
(248,821,cs),
(118,821,ls),
(52,821,o),
(26,815,o),
(26,791,cs),
(26,736,o),
(138,762,o),
(138,726,cs),
(138,674,o),
(139,619,o),
(140,560,cs),
(141,501,o),
(141,443,o),
(141,388,cs),
(141,340,o),
(140,294,o),
(138,250,cs),
(136,206,o),
(135,162,o),
(135,119,cs),
(135,80,o),
(121,72,o),
(94,68,cs),
(49,61,o),
(29,57,o),
(29,32,cs),
(29,5,o),
(50,0,o),
(70,0,cs),
(335,0,ls),
(351,0,o),
(365,9,o),
(365,32,cs),
(365,57,o),
(340,63,o),
(315,63,cs),
(233,63,l),
(233,655,l),
(596,25,l),
(596,25,l),
(611,-2,o),
(633,-11,o),
(654,-11,cs)
);
},
{
closed = 1;
nodes = (
(464,840,o),
(501,855,o),
(501,910,cs),
(501,946,o),
(473,971,o),
(441,971,cs),
(393,971,o),
(375,933,o),
(375,906,cs),
(375,863,o),
(401,840,o),
(434,840,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
61 16 2 2 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 0 0 1 4 0 1 91 0 4 4 12 67 0 5 5 14 67 0 2 2 3 84 6 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 0 0 1 4 0 1 91 0 4 4 12 67 0 5 5 14 67 0 2 2 3 84 0 3 3 13 67 0 6 6 24 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 0 0 1 4 0 1 91 0 4 4 12 67 0 2 2 3 84 0 3 3 13 67 0 5 5 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 0 0 1 4 0 1 91 0 4 4 14 67 0 2 2 3 84 0 3 3 13 67 0 5 5 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
95 93 73 70 52 49 52 35 38 36 7 19
CALL[ ]	/* CallFunction */";
};
width = 849;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(669,-11,o),
(683,2,o),
(683,21,cs),
(683,130,o),
(681,262,o),
(681,368,cs),
(681,480,o),
(683,616,o),
(685,729,cs),
(685,753,o),
(757,754,o),
(776,754,cs),
(792,754,o),
(813,758,o),
(813,781,cs),
(813,790,o),
(810,796,o),
(804,799,cs),
(797,802,o),
(783,804,o),
(762,804,cs),
(556,804,ls),
(531,804,o),
(519,796,o),
(519,781,cs),
(519,758,o),
(541,754,o),
(556,754,cs),
(579,754,o),
(611,753,o),
(611,731,cs),
(611,132,l),
(594,170,o),
(533,288,o),
(452,442,cs),
(378,579,o),
(309,706,o),
(269,781,cs),
(260,798,o),
(253,809,o),
(248,814,cs),
(243,819,o),
(237,821,o),
(229,821,cs),
(91,821,ls),
(52,821,o),
(33,815,o),
(33,804,cs),
(33,751,o),
(139,779,o),
(139,738,cs),
(139,684,o),
(140,627,o),
(141,566,cs),
(142,505,o),
(142,445,o),
(142,388,cs),
(142,338,o),
(141,288,o),
(139,238,cs),
(136,187,o),
(134,139,o),
(133,94,cs),
(130,50,o),
(104,48,o),
(85,48,cs),
(73,48,o),
(56,42,o),
(56,25,cs),
(56,4,o),
(78,0,o),
(97,0,cs),
(323,0,ls),
(336,0,o),
(343,8,o),
(343,25,cs),
(343,45,o),
(328,51,o),
(313,51,cs),
(213,51,l),
(213,708,l),
(607,6,l),
(607,6,l),
(614,-6,o),
(629,-11,o),
(648,-11,cs)
);
},
{
closed = 1;
nodes = (
(440,859,o),
(471,872,o),
(471,920,cs),
(471,951,o),
(449,972,o),
(422,972,cs),
(380,972,o),
(366,936,o),
(366,916,cs),
(366,880,o),
(388,859,o),
(415,859,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
44 1 2 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 8 0 9 3 8 9 91 0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 8 0 9 3 8 9 91 0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 7 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 8 0 9 3 8 9 91 0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 8 0 9 3 8 9 91 0 5 6 1 4 0 5 4 91 0 3 3 12 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 8 0 9 3 8 9 91 0 5 6 1 4 0 5 4 91 0 3 3 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
96 94 39 47 52 51 61 63 52 51 34 10 35
CALL[ ]	/* CallFunction */";
};
width = 824;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(641,-11,o),
(655,-9,o),
(655,6,cs),
(655,100,o),
(653,180,o),
(653,368,cs),
(653,489,o),
(655,630,o),
(657,749,cs),
(657,773,o),
(719,774,o),
(738,774,cs),
(754,774,o),
(775,774,o),
(775,789,cs),
(775,794,o),
(772,798,o),
(766,801,cs),
(759,803,o),
(745,804,o),
(724,804,cs),
(533,804,ls),
(521,804,o),
(496,804,o),
(496,789,cs),
(496,776,o),
(518,774,o),
(533,774,cs),
(563,774,o),
(613,774,o),
(613,751,cs),
(613,80,l),
(575,151,o),
(511,259,o),
(422,415,cs),
(379,488,o),
(249,709,o),
(211,781,cs),
(202,798,o),
(195,809,o),
(190,814,cs),
(185,819,o),
(179,821,o),
(171,821,cs),
(63,821,ls),
(52,821,o),
(15,820,o),
(15,809,cs),
(15,779,o),
(141,806,o),
(141,758,cs),
(141,701,o),
(142,640,o),
(143,576,cs),
(144,511,o),
(144,449,o),
(144,388,cs),
(144,280,o),
(142,170,o),
(135,74,c),
(135,28,o),
(94,28,o),
(67,28,cs),
(55,28,o),
(38,25,o),
(38,13,cs),
(38,2,o),
(60,0,o),
(79,0,cs),
(291,0,ls),
(304,0,o),
(311,4,o),
(311,13,cs),
(311,24,o),
(296,31,o),
(281,31,cs),
(185,31,l),
(185,738,l),
(610,6,ls),
(618,-7,o),
(625,-11,o),
(634,-11,cs)
);
},
{
closed = 1;
nodes = (
(406,889,o),
(428,899,o),
(428,935,cs),
(428,958,o),
(413,972,o),
(394,972,cs),
(366,972,o),
(353,945,o),
(353,931,cs),
(353,907,o),
(368,889,o),
(387,889,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
48 0 2 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 8 0 9 3 8 9 91 0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 8 0 9 3 8 9 91 0 5 6 1 4 0 5 4 91 0 3 3 12 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 8 0 9 3 8 9 91 0 5 6 1 4 0 5 4 91 0 3 3 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
101 99 95 93 86 84 69 66 62 59 55 52 37 33 52 51 33 10 18
CALL[ ]	/* CallFunction */";
};
width = 788;
}
);
note = Ndotaccent;
unicode = 7748;
},
{
glyphname = Ntilde;
kernLeft = B;
kernRight = Eng;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(689,-11,o),
(703,15,o),
(703,47,cs),
(703,150,o),
(701,269,o),
(701,368,cs),
(701,515,o),
(705,574,o),
(705,712,cs),
(705,723,o),
(711,730,o),
(723,734,cs),
(734,737,o),
(757,741,o),
(790,744,cs),
(815,747,o),
(829,752,o),
(829,776,cs),
(829,787,o),
(825,794,o),
(818,798,cs),
(811,802,o),
(796,804,o),
(775,804,cs),
(548,804,ls),
(516,804,o),
(497,795,o),
(497,774,cs),
(497,747,o),
(516,741,o),
(539,738,cs),
(568,735,o),
(587,732,o),
(596,728,cs),
(605,724,o),
(610,716,o),
(610,705,cs),
(610,179,l),
(597,215,o),
(538,325,o),
(460,468,cs),
(381,611,o),
(317,730,o),
(288,781,cs),
(279,798,o),
(272,809,o),
(267,814,cs),
(262,819,o),
(256,821,o),
(248,821,cs),
(118,821,ls),
(52,821,o),
(26,815,o),
(26,791,cs),
(26,736,o),
(138,762,o),
(138,726,cs),
(138,674,o),
(139,619,o),
(140,560,cs),
(141,501,o),
(141,443,o),
(141,388,cs),
(141,340,o),
(140,294,o),
(138,250,cs),
(136,206,o),
(135,162,o),
(135,119,cs),
(135,80,o),
(121,72,o),
(94,68,cs),
(49,61,o),
(29,57,o),
(29,32,cs),
(29,5,o),
(50,0,o),
(70,0,cs),
(335,0,ls),
(351,0,o),
(365,9,o),
(365,32,cs),
(365,57,o),
(340,63,o),
(315,63,cs),
(233,63,l),
(233,655,l),
(596,25,l),
(596,25,l),
(611,-2,o),
(633,-11,o),
(654,-11,cs)
);
},
{
closed = 1;
nodes = (
(279,861,o),
(303,886,o),
(342,886,cs),
(381,886,o),
(423,862,o),
(479,862,cs),
(512,862,o),
(590,880,o),
(590,937,cs),
(590,958,o),
(575,972,o),
(568,972,cs),
(563,972,o),
(553,968,o),
(538,959,cs),
(519,948,o),
(497,942,o),
(478,942,cs),
(439,942,o),
(377,970,o),
(341,970,cs),
(316,970,o),
(294,964,o),
(273,952,cs),
(254,941,o),
(239,926,o),
(239,897,cs),
(239,877,o),
(246,861,o),
(258,861,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
45 0 2 0 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
7 1 5 0 9 8 5 9 91 0 6 10 1 8 2 6 8 91 0 2 2 12 67 0 3 3 14 67 0 0 0 1 84 4 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
7 1 5 0 9 8 5 9 91 0 6 10 1 8 2 6 8 91 0 2 2 12 67 0 3 3 14 67 0 0 0 1 84 0 1 1 13 67 0 4 4 24 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
7 1 5 0 9 8 5 9 91 0 6 10 1 8 2 6 8 91 0 2 2 12 67 0 0 0 1 84 0 1 1 13 67 0 3 3 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
7 1 5 0 9 8 5 9 91 0 6 10 1 8 2 6 8 91 0 2 2 14 67 0 0 0 1 84 0 1 1 13 67 0 3 3 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
116 114 111 109 106 104 98 96 93 91 88 86 79 77 57 54 36 33 52 33 11 17
CALL[ ]	/* CallFunction */";
};
width = 849;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(669,-11,o),
(683,2,o),
(683,21,cs),
(683,130,o),
(681,262,o),
(681,368,cs),
(681,480,o),
(683,616,o),
(685,729,cs),
(685,753,o),
(757,754,o),
(776,754,cs),
(792,754,o),
(813,758,o),
(813,781,cs),
(813,790,o),
(810,796,o),
(804,799,cs),
(797,802,o),
(783,804,o),
(762,804,cs),
(556,804,ls),
(531,804,o),
(519,796,o),
(519,781,cs),
(519,758,o),
(541,754,o),
(556,754,cs),
(579,754,o),
(611,753,o),
(611,731,cs),
(611,132,l),
(594,170,o),
(533,288,o),
(452,442,cs),
(378,579,o),
(309,706,o),
(269,781,cs),
(260,798,o),
(253,809,o),
(248,814,cs),
(243,819,o),
(237,821,o),
(229,821,cs),
(91,821,ls),
(52,821,o),
(33,815,o),
(33,804,cs),
(33,751,o),
(139,779,o),
(139,738,cs),
(139,684,o),
(140,627,o),
(141,566,cs),
(142,505,o),
(142,445,o),
(142,388,cs),
(142,338,o),
(141,288,o),
(139,238,cs),
(136,187,o),
(134,139,o),
(133,94,cs),
(130,50,o),
(104,48,o),
(85,48,cs),
(73,48,o),
(56,42,o),
(56,25,cs),
(56,4,o),
(78,0,o),
(97,0,cs),
(323,0,ls),
(336,0,o),
(343,8,o),
(343,25,cs),
(343,45,o),
(328,51,o),
(313,51,cs),
(213,51,l),
(213,708,l),
(607,6,l),
(607,6,l),
(614,-6,o),
(629,-11,o),
(648,-11,cs)
);
},
{
closed = 1;
nodes = (
(284,879,o),
(311,904,o),
(351,904,cs),
(390,904,o),
(432,880,o),
(488,880,cs),
(544,880,o),
(577,902,o),
(590,925,cs),
(593,931,o),
(595,937,o),
(595,944,cs),
(595,960,o),
(584,972,o),
(577,972,cs),
(574,972,o),
(570,971,o),
(567,970,cs),
(563,968,o),
(556,964,o),
(547,959,cs),
(524,948,o),
(504,942,o),
(487,942,cs),
(448,942,o),
(386,970,o),
(350,970,cs),
(325,970,o),
(303,964,o),
(282,952,cs),
(272,946,o),
(265,941,o),
(261,936,cs),
(257,931,o),
(254,927,o),
(253,924,cs),
(251,919,o),
(250,913,o),
(250,907,cs),
(250,892,o),
(256,879,o),
(267,879,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
44 1 2 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 3 9 11 91 0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 3 9 11 91 0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 7 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 3 9 11 91 0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 3 9 11 91 0 5 6 1 4 0 5 4 91 0 3 3 12 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 3 9 11 91 0 5 6 1 4 0 5 4 91 0 3 3 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
118 116 113 111 108 106 100 98 95 93 39 47 52 51 61 63 52 51 34 14 35
CALL[ ]	/* CallFunction */";
};
width = 824;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(641,-11,o),
(655,-9,o),
(655,6,cs),
(655,100,o),
(653,180,o),
(653,368,cs),
(653,489,o),
(655,630,o),
(657,749,cs),
(657,773,o),
(719,774,o),
(738,774,cs),
(754,774,o),
(775,774,o),
(775,789,cs),
(775,794,o),
(772,798,o),
(766,801,cs),
(759,803,o),
(745,804,o),
(724,804,cs),
(533,804,ls),
(521,804,o),
(496,804,o),
(496,789,cs),
(496,776,o),
(518,774,o),
(533,774,cs),
(563,774,o),
(613,774,o),
(613,751,cs),
(613,80,l),
(575,151,o),
(511,259,o),
(422,415,cs),
(379,488,o),
(249,709,o),
(211,781,cs),
(202,798,o),
(195,809,o),
(190,814,cs),
(185,819,o),
(179,821,o),
(171,821,cs),
(63,821,ls),
(52,821,o),
(15,820,o),
(15,809,cs),
(15,779,o),
(141,806,o),
(141,758,cs),
(141,701,o),
(142,640,o),
(143,576,cs),
(144,511,o),
(144,449,o),
(144,388,cs),
(144,280,o),
(142,170,o),
(135,74,c),
(135,28,o),
(94,28,o),
(67,28,cs),
(55,28,o),
(38,25,o),
(38,13,cs),
(38,2,o),
(60,0,o),
(79,0,cs),
(291,0,ls),
(304,0,o),
(311,4,o),
(311,13,cs),
(311,24,o),
(296,31,o),
(281,31,cs),
(185,31,l),
(185,738,l),
(610,6,ls),
(618,-7,o),
(625,-11,o),
(634,-11,cs)
);
},
{
closed = 1;
nodes = (
(252,888,o),
(279,913,o),
(320,913,cs),
(359,913,o),
(401,889,o),
(457,889,cs),
(510,889,o),
(559,909,o),
(559,934,cs),
(559,943,o),
(553,951,o),
(546,951,cs),
(543,951,o),
(539,950,o),
(536,949,cs),
(532,947,o),
(525,943,o),
(516,938,cs),
(493,927,o),
(473,921,o),
(456,921,cs),
(417,921,o),
(355,949,o),
(319,949,cs),
(294,949,o),
(272,943,o),
(251,931,cs),
(232,920,o),
(222,910,o),
(222,903,cs),
(222,896,o),
(229,888,o),
(236,888,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
48 0 2 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 3 9 11 91 0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 3 9 11 91 0 5 6 1 4 0 5 4 92 0 3 3 12 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 3 9 11 91 0 5 6 1 4 0 5 4 92 0 3 3 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
122 120 117 115 112 110 104 102 99 97 94 92 86 84 69 66 62 59 55 52 37 33 52 51 33 14 18
CALL[ ]	/* CallFunction */";
};
width = 788;
}
);
note = Ntilde;
unicode = 209;
},
{
glyphname = Eng;
kernLeft = B;
kernRight = Eng;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(645,-250,o),
(703,-171,o),
(703,-20,cs),
(703,73,o),
(701,163,o),
(701,232,cs),
(701,261,o),
(702,331,o),
(704,442,cs),
(704,531,o),
(706,622,o),
(706,714,cs),
(706,738,o),
(751,742,o),
(803,742,cs),
(819,742,o),
(840,749,o),
(840,776,cs),
(840,787,o),
(837,794,o),
(831,798,cs),
(824,802,o),
(810,804,o),
(789,804,cs),
(572,804,ls),
(547,804,o),
(535,795,o),
(535,776,cs),
(535,749,o),
(553,742,o),
(572,742,cs),
(603,742,o),
(610,734,o),
(610,709,cs),
(610,163,l),
(591,215,o),
(521,355,o),
(455,487,cs),
(388,620,o),
(314,763,o),
(308,780,cs),
(301,799,o),
(295,810,o),
(289,815,cs),
(282,819,o),
(276,821,o),
(270,821,cs),
(111,821,ls),
(84,821,o),
(66,819,o),
(58,814,cs),
(50,809,o),
(46,801,o),
(46,792,cs),
(46,765,o),
(70,754,o),
(85,754,cs),
(108,754,o),
(123,753,o),
(129,752,cs),
(135,751,o),
(138,749,o),
(138,748,cs),
(138,668,o),
(139,612,o),
(140,562,cs),
(140,516,o),
(141,462,o),
(141,410,cs),
(141,337,o),
(131,192,o),
(126,106,cs),
(124,69,o),
(109,60,o),
(96,60,cs),
(83,60,o),
(69,51,o),
(69,32,cs),
(69,5,o),
(93,0,o),
(110,0,cs),
(349,0,ls),
(362,0,o),
(379,8,o),
(379,32,cs),
(379,59,o),
(362,63,o),
(339,63,cs),
(233,63,l),
(233,690,l),
(313,526,o),
(372,412,o),
(419,326,cs),
(442,283,o),
(463,246,o),
(481,216,cs),
(513,159,o),
(544,110,o),
(571,66,cs),
(584,45,o),
(597,21,o),
(612,-4,c),
(612,-115,o),
(578,-167,o),
(522,-167,cs),
(487,-167,o),
(457,-147,o),
(457,-115,cs),
(457,-106,o),
(457,-92,o),
(472,-85,c),
(479,-93,o),
(494,-105,o),
(514,-105,cs),
(539,-105,o),
(556,-88,o),
(556,-56,cs),
(556,-20,o),
(523,-8,o),
(498,-8,cs),
(414,-8,o),
(380,-59,o),
(380,-116,cs),
(380,-201,o),
(452,-250,o),
(537,-250,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
89 37 2 4 7 30 1 1 5 21 1 2 1 3 66
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
89 37 2 4 11 30 1 1 5 21 1 2 1 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
89 37 2 4 9 30 1 1 5 21 1 2 1 3 66
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 1 0 2 3 1 2 91 11 9 2 7 7 8 83 0 8 8 12 67 11 9 2 7 7 10 83 0 10 10 14 67 6 1 4 4 5 83 0 5 5 13 67 0 3 3 0 83 12 1 0 0 25 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 1 0 2 3 1 2 91 9 1 7 7 8 83 0 8 8 12 67 0 11 11 10 84 0 10 10 14 67 6 1 4 4 5 83 0 5 5 13 67 0 3 3 0 83 12 1 0 0 25 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 2 3 1 2 91 0 3 12 1 0 3 0 87 0 7 7 8 83 0 8 8 12 67 11 1 9 9 10 83 0 10 10 14 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 10 11 1 9 4 10 9 91 0 1 0 2 3 1 2 91 0 3 12 1 0 3 0 87 0 7 7 8 83 0 8 8 12 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 10 11 1 9 4 10 9 91 0 1 0 2 3 1 2 91 0 3 12 1 0 3 0 87 0 7 7 8 83 0 8 8 14 67 6 1 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 107 104 100 97 94 92 78 75 71 69 53 51 47 44 40 38 28 26 19 17 11 9 0 124 1 124 13 15
CALL[ ]	/* CallFunction */";
};
width = 849;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(639,-239,o),
(683,-155,o),
(683,33,cs),
(683,141,o),
(681,267,o),
(681,368,cs),
(681,480,o),
(683,616,o),
(685,729,cs),
(685,753,o),
(757,754,o),
(776,754,cs),
(792,754,o),
(813,758,o),
(813,781,cs),
(813,790,o),
(810,796,o),
(804,799,cs),
(797,802,o),
(783,804,o),
(762,804,cs),
(556,804,ls),
(531,804,o),
(519,796,o),
(519,781,cs),
(519,758,o),
(541,754,o),
(556,754,cs),
(579,754,o),
(611,753,o),
(611,731,cs),
(611,132,l),
(594,170,o),
(533,288,o),
(452,442,cs),
(378,579,o),
(309,706,o),
(269,781,cs),
(260,798,o),
(253,809,o),
(248,814,cs),
(243,819,o),
(237,821,o),
(229,821,cs),
(91,821,ls),
(52,821,o),
(33,815,o),
(33,804,cs),
(33,751,o),
(139,779,o),
(139,738,cs),
(139,684,o),
(140,627,o),
(141,566,cs),
(142,505,o),
(142,445,o),
(142,388,cs),
(142,338,o),
(141,288,o),
(139,238,cs),
(136,187,o),
(134,139,o),
(133,94,cs),
(130,50,o),
(104,48,o),
(85,48,cs),
(73,48,o),
(56,42,o),
(56,25,cs),
(56,4,o),
(78,0,o),
(97,0,cs),
(323,0,ls),
(336,0,o),
(343,8,o),
(343,25,cs),
(343,45,o),
(328,51,o),
(313,51,cs),
(213,51,l),
(213,708,l),
(213,708,l),
(399,378,o),
(511,178,o),
(560,91,cs),
(594,31,o),
(611,0,o),
(611,0,cs),
(606,-128,o),
(582,-173,o),
(514,-173,cs),
(484,-173,o),
(435,-159,o),
(435,-113,cs),
(435,-109,o),
(436,-84,o),
(452,-76,c),
(459,-84,o),
(472,-92,o),
(488,-92,cs),
(509,-92,o),
(528,-79,o),
(528,-50,cs),
(528,-19,o),
(502,-7,o),
(478,-7,cs),
(409,-7,o),
(375,-59,o),
(375,-115,cs),
(375,-200,o),
(453,-239,o),
(527,-239,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
119 42 2 0 4 97 1 9 8 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 8 0 9 10 8 9 91 0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 10 10 7 83 0 7 7 25 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 8 0 9 10 8 9 91 0 10 0 7 10 7 87 0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 5 6 1 4 0 5 4 91 0 8 0 9 10 8 9 91 0 10 0 7 10 7 87 0 3 3 12 67 2 1 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 5 6 1 4 0 5 4 91 0 8 0 9 10 8 9 91 0 10 0 7 10 7 87 0 3 3 14 67 2 1 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
108 106 95 93 40 47 52 51 61 63 52 51 32 11 24
CALL[ ]	/* CallFunction */";
};
width = 824;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(560,-219,o),
(599,-196,o),
(623,-142,cs),
(647,-88,o),
(655,-3,o),
(655,122,cs),
(655,155,o),
(654,201,o),
(654,258,cs),
(654,330,o),
(653,442,o),
(653,594,cs),
(653,605,o),
(653,661,o),
(655,749,cs),
(655,773,o),
(717,774,o),
(737,774,cs),
(754,774,o),
(775,774,o),
(775,789,cs),
(775,794,o),
(772,798,o),
(766,801,cs),
(759,803,o),
(745,804,o),
(724,804,cs),
(533,804,ls),
(521,804,o),
(496,804,o),
(496,789,cs),
(496,776,o),
(518,774,o),
(533,774,cs),
(563,774,o),
(613,774,o),
(613,751,cs),
(613,80,l),
(589,125,o),
(529,227,o),
(449,367,cs),
(364,515,o),
(283,656,o),
(211,781,cs),
(202,798,o),
(195,809,o),
(190,814,cs),
(185,819,o),
(179,821,o),
(171,821,cs),
(63,821,ls),
(44,821,o),
(32,820,o),
(25,818,cs),
(18,815,o),
(15,811,o),
(15,805,cs),
(15,798,o),
(19,793,o),
(28,791,cs),
(37,789,o),
(54,788,o),
(80,788,cs),
(111,788,o),
(141,773,o),
(141,721,cs),
(141,712,o),
(141,662,o),
(143,571,cs),
(144,486,o),
(144,415,o),
(144,351,cs),
(144,287,o),
(144,234,o),
(144,193,cs),
(143,158,o),
(143,114,o),
(143,74,cs),
(143,30,o),
(114,28,o),
(67,28,cs),
(54,28,o),
(38,25,o),
(38,14,cs),
(38,2,o),
(59,0,o),
(79,0,cs),
(271,0,ls),
(284,0,o),
(291,4,o),
(291,13,cs),
(291,24,o),
(276,31,o),
(261,31,cs),
(185,31,l),
(185,738,l),
(610,6,l),
(606,-71,o),
(599,-118,o),
(583,-146,cs),
(566,-174,o),
(538,-183,o),
(493,-183,cs),
(465,-183,o),
(403,-180,o),
(403,-110,cs),
(403,-91,o),
(407,-68,o),
(424,-61,c),
(431,-69,o),
(440,-76,o),
(451,-76,cs),
(467,-76,o),
(488,-64,o),
(488,-40,cs),
(488,-19,o),
(471,-6,o),
(447,-6,cs),
(399,-6,o),
(368,-57,o),
(368,-114,cs),
(368,-199,o),
(436,-219,o),
(496,-219,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
60 11 2 1 6 10 1 2 1 118 1 11 10 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 10 0 11 0 10 11 91 0 4 4 5 83 0 5 5 12 67 8 1 6 6 7 83 0 7 7 14 67 3 1 1 1 2 83 0 2 2 13 67 0 0 0 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 7 8 1 6 1 7 6 91 0 10 0 11 0 10 11 91 0 4 4 5 83 0 5 5 12 67 3 1 1 1 2 83 0 2 2 13 67 0 0 0 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 7 8 1 6 1 7 6 91 0 10 0 11 0 10 11 91 0 0 0 9 0 9 87 0 4 4 5 83 0 5 5 12 67 3 1 1 1 2 83 0 2 2 13 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 7 8 1 6 1 7 6 91 0 10 0 11 0 10 11 91 0 0 0 9 0 9 87 0 4 4 5 83 0 5 5 14 67 3 1 1 1 2 83 0 2 2 13 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
116 114 110 108 100 98 81 78 74 71 67 64 51 48 44 42 36 51 38 36 12 19
CALL[ ]	/* CallFunction */";
};
width = 788;
}
);
note = Eng;
unicode = 330;
},
{
glyphname = O;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(499,-16,o),
(689,83,o),
(689,408,cs),
(689,642,o),
(588,838,o),
(375,838,cs),
(258,838,o),
(170,783,o),
(115,698,cs),
(61,615,o),
(34,515,o),
(34,404,cs),
(34,257,o),
(69,152,o),
(127,84,cs),
(185,16,o),
(264,-16,o),
(355,-16,cs)
);
},
{
closed = 1;
nodes = (
(292,63,o),
(235,95,o),
(195,154,cs),
(154,213,o),
(130,297,o),
(130,400,cs),
(130,588,o),
(216,762,o),
(379,762,cs),
(517,762,o),
(593,607,o),
(593,410,cs),
(593,181,o),
(506,63,o),
(357,63,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
40 42 38 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(407,-16,o),
(489,2,o),
(561,74,cs),
(604,117,o),
(637,179,o),
(657,264,cs),
(666,306,o),
(671,354,o),
(671,408,cs),
(671,642,o),
(567,838,o),
(367,838,cs),
(257,838,o),
(171,783,o),
(117,698,cs),
(65,615,o),
(37,510,o),
(37,404,cs),
(37,257,o),
(73,152,o),
(130,84,cs),
(187,16,o),
(265,-16,o),
(349,-16,cs)
);
},
{
closed = 1;
nodes = (
(209,48,o),
(112,184,o),
(112,400,cs),
(112,579,o),
(201,777,o),
(373,777,cs),
(442,777,o),
(497,737,o),
(536,670,cs),
(575,603,o),
(596,511,o),
(596,410,cs),
(596,290,o),
(572,199,o),
(529,139,cs),
(486,79,o),
(424,48,o),
(351,48,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
42 42 40 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 709;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(401,-16,o),
(478,9,o),
(539,74,cs),
(599,139,o),
(645,245,o),
(645,408,cs),
(645,524,o),
(618,631,o),
(569,710,cs),
(520,789,o),
(447,838,o),
(356,838,cs),
(256,838,o),
(174,782,o),
(122,698,cs),
(70,615,o),
(41,514,o),
(41,404,cs),
(41,113,o),
(190,-16,o),
(340,-16,cs)
);
},
{
closed = 1;
nodes = (
(187,18,o),
(86,163,o),
(86,400,cs),
(86,592,o),
(174,807,o),
(362,807,cs),
(501,807,o),
(600,629,o),
(600,410,cs),
(600,279,o),
(573,183,o),
(527,117,cs),
(481,51,o),
(415,18,o),
(342,18,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
40 42 40 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = O;
unicode = 79;
},
{
glyphname = Oacute;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(499,-16,o),
(689,83,o),
(689,408,cs),
(689,642,o),
(588,838,o),
(375,838,cs),
(258,838,o),
(170,783,o),
(115,698,cs),
(61,615,o),
(34,515,o),
(34,404,cs),
(34,257,o),
(69,152,o),
(127,84,cs),
(185,16,o),
(264,-16,o),
(355,-16,cs)
);
},
{
closed = 1;
nodes = (
(292,63,o),
(235,95,o),
(195,154,cs),
(154,213,o),
(130,297,o),
(130,400,cs),
(130,588,o),
(216,762,o),
(379,762,cs),
(517,762,o),
(593,607,o),
(593,410,cs),
(593,181,o),
(506,63,o),
(357,63,cs)
);
},
{
closed = 1;
nodes = (
(356,841,o),
(442,897,o),
(442,936,cs),
(442,953,o),
(428,972,o),
(401,972,cs),
(363,972,o),
(288,899,o),
(288,872,cs),
(288,856,o),
(302,841,o),
(323,841,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 4 1 94 0 0 4 0 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 1 0 1 106 0 0 4 0 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 1 0 1 106 0 0 4 0 106 0 4 0 3 2 4 3 92 0 2 2 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
40 42 38 38 38 36 6 21
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(407,-16,o),
(489,2,o),
(561,74,cs),
(604,117,o),
(637,179,o),
(657,264,cs),
(666,306,o),
(671,354,o),
(671,408,cs),
(671,642,o),
(567,838,o),
(367,838,cs),
(257,838,o),
(171,783,o),
(117,698,cs),
(65,615,o),
(37,510,o),
(37,404,cs),
(37,257,o),
(73,152,o),
(130,84,cs),
(187,16,o),
(265,-16,o),
(349,-16,cs)
);
},
{
closed = 1;
nodes = (
(209,48,o),
(112,184,o),
(112,400,cs),
(112,579,o),
(201,777,o),
(373,777,cs),
(442,777,o),
(497,737,o),
(536,670,cs),
(575,603,o),
(596,511,o),
(596,410,cs),
(596,290,o),
(572,199,o),
(529,139,cs),
(486,79,o),
(424,48,o),
(351,48,cs)
);
},
{
closed = 1;
nodes = (
(341,854,o),
(429,908,o),
(429,941,cs),
(429,960,o),
(417,972,o),
(397,972,cs),
(368,972,o),
(291,904,o),
(291,877,cs),
(291,864,o),
(300,854,o),
(315,854,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 4 1 94 0 0 4 0 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 1 0 1 106 0 0 4 0 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 1 0 1 106 0 0 4 0 106 0 4 0 3 2 4 3 92 0 2 2 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
42 42 40 38 38 36 6 21
CALL[ ]	/* CallFunction */";
};
width = 709;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(401,-16,o),
(478,9,o),
(539,74,cs),
(599,139,o),
(645,245,o),
(645,408,cs),
(645,524,o),
(618,631,o),
(569,710,cs),
(520,789,o),
(447,838,o),
(356,838,cs),
(256,838,o),
(174,782,o),
(122,698,cs),
(70,615,o),
(41,514,o),
(41,404,cs),
(41,113,o),
(190,-16,o),
(340,-16,cs)
);
},
{
closed = 1;
nodes = (
(187,18,o),
(86,163,o),
(86,400,cs),
(86,592,o),
(174,807,o),
(362,807,cs),
(501,807,o),
(600,629,o),
(600,410,cs),
(600,279,o),
(573,183,o),
(527,117,cs),
(481,51,o),
(415,18,o),
(342,18,cs)
);
},
{
closed = 1;
nodes = (
(320,875,o),
(410,928,o),
(410,950,cs),
(410,969,o),
(402,972,o),
(391,972,cs),
(371,972,o),
(296,911,o),
(296,886,cs),
(296,879,o),
(299,875,o),
(304,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 4 1 94 0 0 4 0 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 1 0 1 106 0 0 4 0 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 1 0 1 106 0 0 4 0 106 0 4 0 3 2 4 3 92 0 2 2 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
40 42 40 38 37 36 6 21
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = Oacute;
unicode = 211;
},
{
glyphname = Obreve;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(499,-16,o),
(689,83,o),
(689,408,cs),
(689,642,o),
(588,838,o),
(375,838,cs),
(258,838,o),
(170,783,o),
(115,698,cs),
(61,615,o),
(34,515,o),
(34,404,cs),
(34,257,o),
(69,152,o),
(127,84,cs),
(185,16,o),
(264,-16,o),
(355,-16,cs)
);
},
{
closed = 1;
nodes = (
(292,63,o),
(235,95,o),
(195,154,cs),
(154,213,o),
(130,297,o),
(130,400,cs),
(130,588,o),
(216,762,o),
(379,762,cs),
(517,762,o),
(593,607,o),
(593,410,cs),
(593,181,o),
(506,63,o),
(357,63,cs)
);
},
{
closed = 1;
nodes = (
(415,862,o),
(484,889,o),
(484,941,cs),
(484,968,o),
(466,971,o),
(446,971,cs),
(429,971,o),
(414,957,o),
(414,942,cs),
(414,937,o),
(410,932,o),
(401,927,cs),
(392,922,o),
(377,919,o),
(358,919,cs),
(328,919,o),
(299,927,o),
(299,942,cs),
(299,965,o),
(286,971,o),
(263,971,cs),
(240,971,o),
(231,958,o),
(231,941,cs),
(231,898,o),
(276,862,o),
(363,862,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
7 1 5 6 5 106 0 6 0 4 2 6 4 91 0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
7 1 5 6 5 106 0 6 0 4 2 6 4 91 0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
36 38 36 40 40 42 38 36 8 23
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(407,-16,o),
(489,2,o),
(561,74,cs),
(604,117,o),
(637,179,o),
(657,264,cs),
(666,306,o),
(671,354,o),
(671,408,cs),
(671,642,o),
(567,838,o),
(367,838,cs),
(257,838,o),
(171,783,o),
(117,698,cs),
(65,615,o),
(37,510,o),
(37,404,cs),
(37,257,o),
(73,152,o),
(130,84,cs),
(187,16,o),
(265,-16,o),
(349,-16,cs)
);
},
{
closed = 1;
nodes = (
(209,48,o),
(112,184,o),
(112,400,cs),
(112,579,o),
(201,777,o),
(373,777,cs),
(442,777,o),
(497,737,o),
(536,670,cs),
(575,603,o),
(596,511,o),
(596,410,cs),
(596,290,o),
(572,199,o),
(529,139,cs),
(486,79,o),
(424,48,o),
(351,48,cs)
);
},
{
closed = 1;
nodes = (
(412,865,o),
(478,892,o),
(478,944,cs),
(478,971,o),
(461,972,o),
(448,972,cs),
(433,972,o),
(422,960,o),
(422,945,cs),
(422,928,o),
(397,910,o),
(358,910,cs),
(328,910,o),
(293,919,o),
(293,945,cs),
(293,965,o),
(284,972,o),
(265,972,cs),
(248,972,o),
(239,963,o),
(239,944,cs),
(239,903,o),
(285,865,o),
(361,865,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
7 1 5 6 5 106 0 6 0 4 2 6 4 91 0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
7 1 5 6 5 106 0 6 0 4 2 6 4 91 0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
36 38 35 40 42 42 40 37 8 34
CALL[ ]	/* CallFunction */";
};
width = 709;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(401,-16,o),
(478,9,o),
(539,74,cs),
(599,139,o),
(645,245,o),
(645,408,cs),
(645,524,o),
(618,631,o),
(569,710,cs),
(520,789,o),
(447,838,o),
(356,838,cs),
(256,838,o),
(174,782,o),
(122,698,cs),
(70,615,o),
(41,514,o),
(41,404,cs),
(41,113,o),
(190,-16,o),
(340,-16,cs)
);
},
{
closed = 1;
nodes = (
(187,18,o),
(86,163,o),
(86,400,cs),
(86,592,o),
(174,807,o),
(362,807,cs),
(501,807,o),
(600,629,o),
(600,410,cs),
(600,279,o),
(573,183,o),
(527,117,cs),
(481,51,o),
(415,18,o),
(342,18,cs)
);
},
{
closed = 1;
nodes = (
(409,875,o),
(467,899,o),
(467,948,cs),
(467,969,o),
(459,972,o),
(448,972,cs),
(437,972,o),
(431,964,o),
(431,949,cs),
(431,922,o),
(392,900,o),
(356,900,cs),
(314,900,o),
(282,910,o),
(282,949,cs),
(282,965,o),
(280,972,o),
(265,972,cs),
(254,972,o),
(248,964,o),
(248,948,cs),
(248,908,o),
(296,875,o),
(356,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
3 1 1 2 1 106 0 2 0 0 6 2 0 91 0 5 5 6 83 0 6 6 20 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
3 1 1 2 1 106 0 2 0 0 6 2 0 91 0 6 0 5 4 6 5 91 0 4 4 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
40 42 40 38 37 38 35 36 8 23
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = Obreve;
unicode = 334;
},
{
glyphname = Ocircumflex;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(499,-16,o),
(689,83,o),
(689,408,cs),
(689,642,o),
(588,838,o),
(375,838,cs),
(258,838,o),
(170,783,o),
(115,698,cs),
(61,615,o),
(34,515,o),
(34,404,cs),
(34,257,o),
(69,152,o),
(127,84,cs),
(185,16,o),
(264,-16,o),
(355,-16,cs)
);
},
{
closed = 1;
nodes = (
(292,63,o),
(235,95,o),
(195,154,cs),
(154,213,o),
(130,297,o),
(130,400,cs),
(130,588,o),
(216,762,o),
(379,762,cs),
(517,762,o),
(593,607,o),
(593,410,cs),
(593,181,o),
(506,63,o),
(357,63,cs)
);
},
{
closed = 1;
nodes = (
(251,830,o),
(312,853,o),
(353,880,c),
(412,842,o),
(467,830,o),
(473,830,cs),
(484,830,o),
(486,842,o),
(486,851,cs),
(486,892,o),
(377,972,o),
(353,972,cs),
(342,972,o),
(307,950,o),
(280,928,cs),
(249,903,o),
(221,871,o),
(221,844,cs),
(221,837,o),
(226,830,o),
(234,830,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 5 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 2 5 5 2 94 1 7 2 0 5 4 5 0 4 104 0 4 4 5 83 0 5 5 20 67 0 3 3 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 5 2 106 1 7 2 0 5 4 5 0 4 104 0 4 4 5 83 0 5 5 20 67 0 3 3 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 5 2 106 1 7 2 0 5 4 5 0 4 104 0 5 0 4 3 5 4 92 0 3 3 6 83 0 6 6 21 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
1 0 62 60 52 50 40 38 32 30 19 17 11 9 0 25 1 25 8 15
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(407,-16,o),
(489,2,o),
(561,74,cs),
(604,117,o),
(637,179,o),
(657,264,cs),
(666,306,o),
(671,354,o),
(671,408,cs),
(671,642,o),
(567,838,o),
(367,838,cs),
(257,838,o),
(171,783,o),
(117,698,cs),
(65,615,o),
(37,510,o),
(37,404,cs),
(37,257,o),
(73,152,o),
(130,84,cs),
(187,16,o),
(265,-16,o),
(349,-16,cs)
);
},
{
closed = 1;
nodes = (
(209,48,o),
(112,184,o),
(112,400,cs),
(112,579,o),
(201,777,o),
(373,777,cs),
(442,777,o),
(497,737,o),
(536,670,cs),
(575,603,o),
(596,511,o),
(596,410,cs),
(596,290,o),
(572,199,o),
(529,139,cs),
(486,79,o),
(424,48,o),
(351,48,cs)
);
},
{
closed = 1;
nodes = (
(252,847,o),
(313,874,o),
(353,898,c),
(417,860,o),
(465,847,o),
(473,847,cs),
(481,847,o),
(484,855,o),
(484,864,cs),
(484,900,o),
(377,972,o),
(353,972,cs),
(331,972,o),
(223,901,o),
(223,860,cs),
(223,851,o),
(227,847,o),
(234,847,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 0 5 2 94 1 7 2 0 5 0 106 0 4 4 5 83 0 5 5 20 67 0 3 3 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 2 106 1 7 2 0 5 0 106 0 4 4 5 83 0 5 5 20 67 0 3 3 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 0 2 106 1 7 2 0 5 0 106 0 5 0 4 3 5 4 92 0 3 3 6 83 0 6 6 21 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
1 0 65 63 53 51 41 39 31 29 18 16 11 9 0 24 1 24 8 15
CALL[ ]	/* CallFunction */";
};
width = 709;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(401,-16,o),
(478,9,o),
(539,74,cs),
(599,139,o),
(645,245,o),
(645,408,cs),
(645,524,o),
(618,631,o),
(569,710,cs),
(520,789,o),
(447,838,o),
(356,838,cs),
(256,838,o),
(174,782,o),
(122,698,cs),
(70,615,o),
(41,514,o),
(41,404,cs),
(41,113,o),
(190,-16,o),
(340,-16,cs)
);
},
{
closed = 1;
nodes = (
(187,18,o),
(86,163,o),
(86,400,cs),
(86,592,o),
(174,807,o),
(362,807,cs),
(501,807,o),
(600,629,o),
(600,410,cs),
(600,279,o),
(573,183,o),
(527,117,cs),
(481,51,o),
(415,18,o),
(342,18,cs)
);
},
{
closed = 1;
nodes = (
(241,875,o),
(289,894,o),
(353,928,c),
(417,894,o),
(465,875,o),
(473,875,cs),
(478,875,o),
(481,879,o),
(481,886,cs),
(481,911,o),
(379,972,o),
(353,972,cs),
(330,972,o),
(226,911,o),
(226,886,cs),
(226,879,o),
(229,875,o),
(234,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 0 5 2 94 1 7 2 0 5 0 106 0 4 4 5 83 0 5 5 20 67 0 3 3 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 2 106 1 7 2 0 5 0 106 0 4 4 5 83 0 5 5 20 67 0 3 3 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 0 2 106 1 7 2 0 5 0 106 0 5 0 4 3 5 4 92 0 3 3 6 83 0 6 6 21 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
1 0 62 60 52 50 40 38 30 28 18 16 11 9 0 23 1 23 8 15
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = Ocircumflex;
unicode = 212;
},
{
glyphname = Odieresis;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(499,-16,o),
(689,83,o),
(689,408,cs),
(689,642,o),
(588,838,o),
(375,838,cs),
(258,838,o),
(170,783,o),
(115,698,cs),
(61,615,o),
(34,515,o),
(34,404,cs),
(34,257,o),
(69,152,o),
(127,84,cs),
(185,16,o),
(264,-16,o),
(355,-16,cs)
);
},
{
closed = 1;
nodes = (
(292,63,o),
(235,95,o),
(195,154,cs),
(154,213,o),
(130,297,o),
(130,400,cs),
(130,588,o),
(216,762,o),
(379,762,cs),
(517,762,o),
(593,607,o),
(593,410,cs),
(593,181,o),
(506,63,o),
(357,63,cs)
);
},
{
closed = 1;
nodes = (
(293,841,o),
(328,856,o),
(328,911,cs),
(328,947,o),
(300,972,o),
(269,972,cs),
(222,972,o),
(202,930,o),
(202,907,cs),
(202,868,o),
(229,841,o),
(262,841,cs)
);
},
{
closed = 1;
nodes = (
(500,830,o),
(535,845,o),
(535,900,cs),
(535,937,o),
(507,961,o),
(476,961,cs),
(429,961,o),
(409,919,o),
(409,896,cs),
(409,857,o),
(436,830,o),
(469,830,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
2 1 0 3 1 1 6 0 1 91 0 5 5 6 83 0 6 6 20 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 1 6 0 1 91 0 2 0 3 5 2 3 91 0 5 5 6 83 0 6 6 20 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 0 1 6 0 1 91 0 2 0 3 5 2 3 91 0 6 0 5 4 6 5 91 0 4 4 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
40 42 38 38 38 38 38 36 8 23
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(407,-16,o),
(489,2,o),
(561,74,cs),
(604,117,o),
(637,179,o),
(657,264,cs),
(666,306,o),
(671,354,o),
(671,408,cs),
(671,642,o),
(567,838,o),
(367,838,cs),
(257,838,o),
(171,783,o),
(117,698,cs),
(65,615,o),
(37,510,o),
(37,404,cs),
(37,257,o),
(73,152,o),
(130,84,cs),
(187,16,o),
(265,-16,o),
(349,-16,cs)
);
},
{
closed = 1;
nodes = (
(209,48,o),
(112,184,o),
(112,400,cs),
(112,579,o),
(201,777,o),
(373,777,cs),
(442,777,o),
(497,737,o),
(536,670,cs),
(575,603,o),
(596,511,o),
(596,410,cs),
(596,290,o),
(572,199,o),
(529,139,cs),
(486,79,o),
(424,48,o),
(351,48,cs)
);
},
{
closed = 1;
nodes = (
(281,859,o),
(312,872,o),
(312,920,cs),
(312,951,o),
(290,972,o),
(263,972,cs),
(225,972,o),
(207,937,o),
(207,916,cs),
(207,883,o),
(229,859,o),
(256,859,cs)
);
},
{
closed = 1;
nodes = (
(488,847,o),
(519,860,o),
(519,908,cs),
(519,939,o),
(497,960,o),
(470,960,cs),
(432,960,o),
(414,925,o),
(414,904,cs),
(414,871,o),
(436,847,o),
(463,847,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 6 2 3 91 0 5 5 6 83 0 6 6 20 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 6 2 3 91 0 6 0 5 4 6 5 91 0 4 4 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
42 42 40 38 36 38 36 36 8 23
CALL[ ]	/* CallFunction */";
};
width = 709;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(401,-16,o),
(478,9,o),
(539,74,cs),
(599,139,o),
(645,245,o),
(645,408,cs),
(645,524,o),
(618,631,o),
(569,710,cs),
(520,789,o),
(447,838,o),
(356,838,cs),
(256,838,o),
(174,782,o),
(122,698,cs),
(70,615,o),
(41,514,o),
(41,404,cs),
(41,113,o),
(190,-16,o),
(340,-16,cs)
);
},
{
closed = 1;
nodes = (
(187,18,o),
(86,163,o),
(86,400,cs),
(86,592,o),
(174,807,o),
(362,807,cs),
(501,807,o),
(600,629,o),
(600,410,cs),
(600,279,o),
(573,183,o),
(527,117,cs),
(481,51,o),
(415,18,o),
(342,18,cs)
);
},
{
closed = 1;
nodes = (
(267,889,o),
(289,899,o),
(289,935,cs),
(289,958,o),
(274,972,o),
(255,972,cs),
(227,972,o),
(214,945,o),
(214,931,cs),
(214,907,o),
(229,889,o),
(248,889,cs)
);
},
{
closed = 1;
nodes = (
(474,875,o),
(496,885,o),
(496,921,cs),
(496,944,o),
(481,958,o),
(462,958,cs),
(434,958,o),
(421,931,o),
(421,917,cs),
(421,893,o),
(436,875,o),
(455,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 6 2 3 91 0 5 5 6 83 0 6 6 20 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 6 2 3 91 0 6 0 5 4 6 5 91 0 4 4 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
40 42 40 38 36 38 36 36 8 23
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = Odieresis;
unicode = 214;
},
{
glyphname = Ograve;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(499,-16,o),
(689,83,o),
(689,408,cs),
(689,642,o),
(588,838,o),
(375,838,cs),
(258,838,o),
(170,783,o),
(115,698,cs),
(61,615,o),
(34,515,o),
(34,404,cs),
(34,257,o),
(69,152,o),
(127,84,cs),
(185,16,o),
(264,-16,o),
(355,-16,cs)
);
},
{
closed = 1;
nodes = (
(292,63,o),
(235,95,o),
(195,154,cs),
(154,213,o),
(130,297,o),
(130,400,cs),
(130,588,o),
(216,762,o),
(379,762,cs),
(517,762,o),
(593,607,o),
(593,410,cs),
(593,181,o),
(506,63,o),
(357,63,cs)
);
},
{
closed = 1;
nodes = (
(430,841,o),
(445,856,o),
(445,872,cs),
(445,898,o),
(371,972,o),
(331,972,cs),
(304,972,o),
(290,953,o),
(290,936,cs),
(290,897,o),
(377,841,o),
(410,841,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 1 4 0 94 0 1 4 1 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 1 0 106 0 1 4 1 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 0 1 0 106 0 1 4 1 106 0 4 0 3 2 4 3 92 0 2 2 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
40 42 38 40 38 34 6 21
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(407,-16,o),
(489,2,o),
(561,74,cs),
(604,117,o),
(637,179,o),
(657,264,cs),
(666,306,o),
(671,354,o),
(671,408,cs),
(671,642,o),
(567,838,o),
(367,838,cs),
(257,838,o),
(171,783,o),
(117,698,cs),
(65,615,o),
(37,510,o),
(37,404,cs),
(37,257,o),
(73,152,o),
(130,84,cs),
(187,16,o),
(265,-16,o),
(349,-16,cs)
);
},
{
closed = 1;
nodes = (
(209,48,o),
(112,184,o),
(112,400,cs),
(112,579,o),
(201,777,o),
(373,777,cs),
(442,777,o),
(497,737,o),
(536,670,cs),
(575,603,o),
(596,511,o),
(596,410,cs),
(596,290,o),
(572,199,o),
(529,139,cs),
(486,79,o),
(424,48,o),
(351,48,cs)
);
},
{
closed = 1;
nodes = (
(422,854,o),
(431,864,o),
(431,877,cs),
(431,904,o),
(354,972,o),
(325,972,cs),
(305,972,o),
(293,960,o),
(293,941,cs),
(293,910,o),
(378,854,o),
(407,854,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 1 4 0 94 0 1 4 1 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 1 0 106 0 1 4 1 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 0 1 0 106 0 1 4 1 106 0 4 0 3 2 4 3 92 0 2 2 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
42 42 40 40 38 34 6 21
CALL[ ]	/* CallFunction */";
};
width = 709;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(401,-16,o),
(478,9,o),
(539,74,cs),
(599,139,o),
(645,245,o),
(645,408,cs),
(645,524,o),
(618,631,o),
(569,710,cs),
(520,789,o),
(447,838,o),
(356,838,cs),
(256,838,o),
(174,782,o),
(122,698,cs),
(70,615,o),
(41,514,o),
(41,404,cs),
(41,113,o),
(190,-16,o),
(340,-16,cs)
);
},
{
closed = 1;
nodes = (
(187,18,o),
(86,163,o),
(86,400,cs),
(86,592,o),
(174,807,o),
(362,807,cs),
(501,807,o),
(600,629,o),
(600,410,cs),
(600,279,o),
(573,183,o),
(527,117,cs),
(481,51,o),
(415,18,o),
(342,18,cs)
);
},
{
closed = 1;
nodes = (
(408,875,o),
(411,879,o),
(411,886,cs),
(411,911,o),
(336,972,o),
(316,972,cs),
(305,972,o),
(297,969,o),
(297,950,cs),
(297,928,o),
(387,875,o),
(403,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 1 4 0 94 0 1 4 1 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 1 0 106 0 1 4 1 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 0 1 0 106 0 1 4 1 106 0 4 0 3 2 4 3 92 0 2 2 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
40 42 40 40 37 34 6 21
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = Ograve;
unicode = 210;
},
{
glyphname = Ohungarumlaut;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(499,-16,o),
(689,83,o),
(689,408,cs),
(689,642,o),
(588,838,o),
(375,838,cs),
(258,838,o),
(170,783,o),
(115,698,cs),
(61,615,o),
(34,515,o),
(34,404,cs),
(34,257,o),
(69,152,o),
(127,84,cs),
(185,16,o),
(264,-16,o),
(355,-16,cs)
);
},
{
closed = 1;
nodes = (
(292,63,o),
(235,95,o),
(195,154,cs),
(154,213,o),
(130,297,o),
(130,400,cs),
(130,588,o),
(216,762,o),
(379,762,cs),
(517,762,o),
(593,607,o),
(593,410,cs),
(593,181,o),
(506,63,o),
(357,63,cs)
);
},
{
closed = 1;
nodes = (
(282,841,o),
(368,897,o),
(368,936,cs),
(368,953,o),
(354,972,o),
(327,972,cs),
(289,972,o),
(213,899,o),
(213,872,cs),
(213,856,o),
(228,841,o),
(249,841,cs)
);
},
{
closed = 1;
nodes = (
(446,841,o),
(532,897,o),
(532,936,cs),
(532,953,o),
(518,972,o),
(491,972,cs),
(453,972,o),
(378,899,o),
(378,872,cs),
(378,856,o),
(392,841,o),
(413,841,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
3 1 1 0 6 1 94 2 1 0 6 0 106 0 5 5 6 83 0 6 6 20 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
3 1 1 0 1 106 2 1 0 6 0 106 0 5 5 6 83 0 6 6 20 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
3 1 1 0 1 106 2 1 0 6 0 106 0 6 0 5 4 6 5 92 0 4 4 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
40 42 38 38 38 38 38 36 8 23
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(407,-16,o),
(489,2,o),
(561,74,cs),
(604,117,o),
(637,179,o),
(657,264,cs),
(666,306,o),
(671,354,o),
(671,408,cs),
(671,642,o),
(567,838,o),
(367,838,cs),
(257,838,o),
(171,783,o),
(117,698,cs),
(65,615,o),
(37,510,o),
(37,404,cs),
(37,257,o),
(73,152,o),
(130,84,cs),
(187,16,o),
(265,-16,o),
(349,-16,cs)
);
},
{
closed = 1;
nodes = (
(209,48,o),
(112,184,o),
(112,400,cs),
(112,579,o),
(201,777,o),
(373,777,cs),
(442,777,o),
(497,737,o),
(536,670,cs),
(575,603,o),
(596,511,o),
(596,410,cs),
(596,290,o),
(572,199,o),
(529,139,cs),
(486,79,o),
(424,48,o),
(351,48,cs)
);
},
{
closed = 1;
nodes = (
(271,854,o),
(359,908,o),
(359,941,cs),
(359,960,o),
(347,972,o),
(327,972,cs),
(298,972,o),
(221,904,o),
(221,877,cs),
(221,864,o),
(230,854,o),
(245,854,cs)
);
},
{
closed = 1;
nodes = (
(431,854,o),
(519,908,o),
(519,941,cs),
(519,960,o),
(507,972,o),
(487,972,cs),
(458,972,o),
(381,904,o),
(381,877,cs),
(381,864,o),
(390,854,o),
(405,854,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
3 1 1 0 6 1 94 2 1 0 6 0 106 0 5 5 6 83 0 6 6 20 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
3 1 1 0 1 106 2 1 0 6 0 106 0 5 5 6 83 0 6 6 20 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
3 1 1 0 1 106 2 1 0 6 0 106 0 6 0 5 4 6 5 92 0 4 4 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
42 42 40 38 38 38 38 36 8 23
CALL[ ]	/* CallFunction */";
};
width = 709;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(401,-16,o),
(478,9,o),
(539,74,cs),
(599,139,o),
(645,245,o),
(645,408,cs),
(645,524,o),
(618,631,o),
(569,710,cs),
(520,789,o),
(447,838,o),
(356,838,cs),
(256,838,o),
(174,782,o),
(122,698,cs),
(70,615,o),
(41,514,o),
(41,404,cs),
(41,113,o),
(190,-16,o),
(340,-16,cs)
);
},
{
closed = 1;
nodes = (
(187,18,o),
(86,163,o),
(86,400,cs),
(86,592,o),
(174,807,o),
(362,807,cs),
(501,807,o),
(600,629,o),
(600,410,cs),
(600,279,o),
(573,183,o),
(527,117,cs),
(481,51,o),
(415,18,o),
(342,18,cs)
);
},
{
closed = 1;
nodes = (
(256,875,o),
(346,928,o),
(346,950,cs),
(346,969,o),
(338,972,o),
(327,972,cs),
(307,972,o),
(232,911,o),
(232,886,cs),
(232,879,o),
(235,875,o),
(240,875,cs)
);
},
{
closed = 1;
nodes = (
(410,875,o),
(500,928,o),
(500,950,cs),
(500,969,o),
(492,972,o),
(481,972,cs),
(461,972,o),
(386,911,o),
(386,886,cs),
(386,879,o),
(389,875,o),
(394,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
3 1 1 0 6 1 94 2 1 0 6 0 106 0 5 5 6 83 0 6 6 20 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
3 1 1 0 1 106 2 1 0 6 0 106 0 5 5 6 83 0 6 6 20 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
3 1 1 0 1 106 2 1 0 6 0 106 0 6 0 5 4 6 5 92 0 4 4 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
40 42 40 38 37 38 37 36 8 23
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = Ohungarumlaut;
unicode = 336;
},
{
glyphname = Omacron;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(499,-16,o),
(689,83,o),
(689,408,cs),
(689,642,o),
(588,838,o),
(375,838,cs),
(258,838,o),
(170,783,o),
(115,698,cs),
(61,615,o),
(34,515,o),
(34,404,cs),
(34,257,o),
(69,152,o),
(127,84,cs),
(185,16,o),
(264,-16,o),
(355,-16,cs)
);
},
{
closed = 1;
nodes = (
(292,63,o),
(235,95,o),
(195,154,cs),
(154,213,o),
(130,297,o),
(130,400,cs),
(130,588,o),
(216,762,o),
(379,762,cs),
(517,762,o),
(593,607,o),
(593,410,cs),
(593,181,o),
(506,63,o),
(357,63,cs)
);
},
{
closed = 1;
nodes = (
(313,885,o),
(410,886,o),
(484,886,cs),
(513,886,o),
(520,913,o),
(520,928,cs),
(520,948,o),
(507,965,o),
(492,965,cs),
(476,965,o),
(458,965,o),
(437,964,cs),
(416,963,o),
(392,962,o),
(364,962,cs),
(322,962,o),
(273,964,o),
(243,964,cs),
(220,964,o),
(210,944,o),
(210,925,cs),
(210,906,o),
(224,885,o),
(243,885,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
6 1 0 0 1 4 0 1 91 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
6 1 0 0 1 4 0 1 91 0 4 0 3 2 4 3 91 0 2 2 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
1 0 63 61 53 51 41 39 33 31 14 7 0 26 1 18 7 15
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(407,-16,o),
(489,2,o),
(561,74,cs),
(604,117,o),
(637,179,o),
(657,264,cs),
(666,306,o),
(671,354,o),
(671,408,cs),
(671,642,o),
(567,838,o),
(367,838,cs),
(257,838,o),
(171,783,o),
(117,698,cs),
(65,615,o),
(37,510,o),
(37,404,cs),
(37,257,o),
(73,152,o),
(130,84,cs),
(187,16,o),
(265,-16,o),
(349,-16,cs)
);
},
{
closed = 1;
nodes = (
(209,48,o),
(112,184,o),
(112,400,cs),
(112,579,o),
(201,777,o),
(373,777,cs),
(442,777,o),
(497,737,o),
(536,670,cs),
(575,603,o),
(596,511,o),
(596,410,cs),
(596,290,o),
(572,199,o),
(529,139,cs),
(486,79,o),
(424,48,o),
(351,48,cs)
);
},
{
closed = 1;
nodes = (
(314,885,o),
(411,886,o),
(485,886,cs),
(508,886,o),
(514,908,o),
(514,919,cs),
(514,934,o),
(504,947,o),
(493,947,cs),
(477,947,o),
(459,947,o),
(438,946,cs),
(417,945,o),
(393,944,o),
(365,944,cs),
(323,944,o),
(274,946,o),
(244,946,cs),
(225,946,o),
(218,931,o),
(218,916,cs),
(218,901,o),
(229,885,o),
(244,885,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
6 1 4 0 5 2 4 5 91 0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
6 1 4 0 5 2 4 5 91 0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
46 45 57 50 45 69 46 61 42 42 40 37 7 30
CALL[ ]	/* CallFunction */";
};
width = 709;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(401,-16,o),
(478,9,o),
(539,74,cs),
(599,139,o),
(645,245,o),
(645,408,cs),
(645,524,o),
(618,631,o),
(569,710,cs),
(520,789,o),
(447,838,o),
(356,838,cs),
(256,838,o),
(174,782,o),
(122,698,cs),
(70,615,o),
(41,514,o),
(41,404,cs),
(41,113,o),
(190,-16,o),
(340,-16,cs)
);
},
{
closed = 1;
nodes = (
(187,18,o),
(86,163,o),
(86,400,cs),
(86,592,o),
(174,807,o),
(362,807,cs),
(501,807,o),
(600,629,o),
(600,410,cs),
(600,279,o),
(573,183,o),
(527,117,cs),
(481,51,o),
(415,18,o),
(342,18,cs)
);
},
{
closed = 1;
nodes = (
(315,875,o),
(412,876,o),
(486,876,cs),
(501,876,o),
(505,887,o),
(505,894,cs),
(505,901,o),
(499,907,o),
(494,907,cs),
(478,907,o),
(460,907,o),
(439,906,cs),
(418,905,o),
(394,904,o),
(366,904,cs),
(324,904,o),
(275,906,o),
(245,906,cs),
(234,906,o),
(229,898,o),
(229,891,cs),
(229,884,o),
(236,875,o),
(245,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
6 1 4 0 5 2 4 5 91 0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
6 1 4 0 5 2 4 5 91 0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
43 42 54 47 42 66 43 58 40 42 40 36 7 19
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = Omacron;
unicode = 332;
},
{
glyphname = Oogonek;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(423,-169,o),
(454,-140,o),
(454,-116,cs),
(454,-104,o),
(442,-92,o),
(429,-92,cs),
(409,-92,o),
(410,-116,o),
(369,-116,cs),
(354,-116,o),
(340,-110,o),
(340,-95,cs),
(340,-68,o),
(353,-32,o),
(380,-15,c),
(517,-4,o),
(687,102,o),
(687,408,cs),
(687,642,o),
(586,838,o),
(373,838,cs),
(256,838,o),
(168,783,o),
(113,698,cs),
(59,615,o),
(32,515,o),
(32,404,cs),
(32,125,o),
(158,-2,o),
(322,-15,c),
(293,-31,o),
(261,-58,o),
(261,-94,cs),
(261,-146,o),
(321,-169,o),
(371,-169,cs)
);
},
{
closed = 1;
nodes = (
(290,63,o),
(233,95,o),
(193,154,cs),
(152,213,o),
(128,297,o),
(128,400,cs),
(128,588,o),
(214,762,o),
(377,762,cs),
(515,762,o),
(591,607,o),
(591,410,cs),
(591,181,o),
(504,63,o),
(355,63,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
46 1 2 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 5 2 5 4 2 104 0 2 1 5 2 1 102 0 1 0 3 1 3 88 0 5 5 0 83 0 0 0 20 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 5 2 5 4 2 104 0 2 1 5 2 1 102 0 0 0 5 4 0 5 91 0 1 3 3 1 79 0 1 1 3 84 0 3 1 3 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
65 63 57 55 38 35 46 38 6 19
CALL[ ]	/* CallFunction */";
};
width = 722;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(407,-16,o),
(489,2,o),
(561,74,cs),
(604,117,o),
(637,179,o),
(657,264,cs),
(666,306,o),
(671,354,o),
(671,408,cs),
(671,642,o),
(567,838,o),
(367,838,cs),
(257,838,o),
(171,783,o),
(117,698,cs),
(65,615,o),
(37,510,o),
(37,404,cs),
(37,257,o),
(73,152,o),
(130,84,cs),
(187,16,o),
(265,-16,o),
(349,-16,cs)
);
},
{
closed = 1;
nodes = (
(413,-168,o),
(443,-127,o),
(443,-117,cs),
(443,-106,o),
(437,-95,o),
(422,-95,cs),
(418,-95,o),
(414,-97,o),
(409,-101,cs),
(404,-106,o),
(398,-111,o),
(393,-116,cs),
(387,-122,o),
(376,-125,o),
(359,-125,cs),
(343,-125,o),
(328,-110,o),
(328,-94,cs),
(328,-75,o),
(342,-21,o),
(387,-6,c),
(337,-5,l),
(337,-5,l),
(323,-12,o),
(311,-19,o),
(300,-28,cs),
(281,-43,o),
(264,-64,o),
(264,-95,cs),
(264,-138,o),
(306,-168,o),
(365,-168,cs)
);
},
{
closed = 1;
nodes = (
(209,48,o),
(112,184,o),
(112,400,cs),
(112,579,o),
(201,777,o),
(373,777,cs),
(442,777,o),
(497,737,o),
(536,670,cs),
(575,603,o),
(596,511,o),
(596,410,cs),
(596,290,o),
(572,199,o),
(529,139,cs),
(486,79,o),
(424,48,o),
(351,48,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 0 1 7 7 0 96 0 5 3 4 3 5 4 104 0 4 0 6 4 6 87 0 1 1 2 83 0 2 2 20 67 8 1 7 7 3 84 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 1 7 1 0 7 104 0 5 3 4 3 5 4 104 0 4 0 6 4 6 87 0 1 1 2 83 0 2 2 20 67 8 1 7 7 3 84 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 0 1 7 1 0 7 104 0 5 3 4 3 5 4 104 0 2 0 1 0 2 1 91 0 4 0 6 4 6 87 8 1 7 7 3 84 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
45 45 45 74 45 74 38 35 43 42 42 40 37 9 33
CALL[ ]	/* CallFunction */";
};
width = 707;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(398,-169,o),
(428,-128,o),
(428,-118,cs),
(428,-110,o),
(426,-102,o),
(414,-102,cs),
(395,-102,o),
(389,-142,o),
(352,-142,cs),
(321,-142,o),
(313,-112,o),
(313,-95,cs),
(313,-81,o),
(319,-37,o),
(354,-15,c),
(415,-11,o),
(488,17,o),
(545,82,cs),
(602,147,o),
(644,252,o),
(644,408,cs),
(644,524,o),
(617,631,o),
(568,710,cs),
(519,789,o),
(446,838,o),
(355,838,cs),
(255,838,o),
(173,782,o),
(121,698,cs),
(69,615,o),
(40,514,o),
(40,404,cs),
(40,263,o),
(75,161,o),
(127,93,cs),
(179,24,o),
(249,-10,o),
(320,-15,c),
(300,-28,o),
(269,-55,o),
(269,-96,cs),
(269,-139,o),
(303,-169,o),
(350,-169,cs)
);
},
{
closed = 1;
nodes = (
(186,18,o),
(85,163,o),
(85,400,cs),
(85,592,o),
(173,807,o),
(361,807,cs),
(500,807,o),
(599,629,o),
(599,410,cs),
(599,279,o),
(572,183,o),
(526,117,cs),
(480,51,o),
(414,18,o),
(341,18,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
46 1 3 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 3 1 2 1 3 2 104 0 2 0 4 2 4 87 0 6 6 0 83 0 0 0 20 67 0 5 5 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 3 1 2 1 3 2 104 0 0 0 6 5 0 6 91 0 2 0 4 2 4 87 0 5 5 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
40 46 38 35 41 24 38 7 22
CALL[ ]	/* CallFunction */";
};
width = 685;
}
);
note = Oogonek;
unicode = 490;
},
{
glyphname = Oslash;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(173,-19,o),
(190,-10,o),
(197,5,cs),
(205,19,l),
(250,-4,o),
(300,-16,o),
(355,-16,cs),
(499,-16,o),
(689,83,o),
(689,408,cs),
(689,541,o),
(656,661,o),
(588,741,c),
(602,768,l),
(607,776,o),
(616,796,o),
(616,807,cs),
(616,823,o),
(599,838,o),
(571,838,cs),
(548,838,o),
(537,831,o),
(520,800,c),
(479,824,o),
(431,838,o),
(375,838,cs),
(258,838,o),
(170,783,o),
(115,698,cs),
(61,615,o),
(34,515,o),
(34,404,cs),
(34,248,o),
(72,141,o),
(136,73,c),
(111,24,l),
(111,24,l),
(110,21,o),
(109,17,o),
(109,14,cs),
(109,-7,o),
(131,-19,o),
(146,-19,cs)
);
},
{
closed = 1;
nodes = (
(151,225,o),
(130,304,o),
(130,400,cs),
(130,588,o),
(216,762,o),
(379,762,cs),
(419,762,o),
(453,748,o),
(482,725,c),
(454,670,o),
(436,630,o),
(419,596,cs),
(401,561,o),
(371,507,o),
(326,423,cs),
(186,166,l)
);
},
{
closed = 1;
nodes = (
(316,63,o),
(279,75,o),
(247,99,c),
(541,653,l),
(576,589,o),
(593,505,o),
(593,410,cs),
(593,181,o),
(506,63,o),
(357,63,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
13 1 4 0 67 66 55 47 23 0 6 5 4 33 1 2 5 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 4 4 0 83 1 1 0 0 20 67 0 5 5 2 83 3 1 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
1 1 0 0 4 5 0 4 91 0 5 5 2 83 3 1 2 2 21 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
70 68 59 57 36 45 36 41 6 19
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(407,-16,o),
(489,2,o),
(561,74,cs),
(604,117,o),
(637,179,o),
(657,264,cs),
(666,306,o),
(671,354,o),
(671,408,cs),
(671,642,o),
(567,838,o),
(367,838,cs),
(257,838,o),
(171,783,o),
(117,698,cs),
(65,615,o),
(37,510,o),
(37,404,cs),
(37,257,o),
(73,152,o),
(130,84,cs),
(187,16,o),
(265,-16,o),
(349,-16,cs)
);
},
{
closed = 1;
nodes = (
(157,-19,o),
(173,-10,o),
(180,5,cs),
(585,768,ls),
(590,777,o),
(599,796,o),
(599,807,cs),
(599,815,o),
(598,831,o),
(574,831,cs),
(542,831,o),
(530,815,o),
(510,774,cs),
(471,694,o),
(463,677,o),
(436,621,cs),
(417,582,o),
(385,525,o),
(330,423,cs),
(298,364,o),
(279,331,o),
(267,311,cs),
(257,294,o),
(247,278,o),
(241,267,cs),
(200,194,o),
(186,166,o),
(112,18,cs),
(111,16,o),
(110,13,o),
(110,9,cs),
(110,-6,o),
(126,-19,o),
(138,-19,cs)
);
},
{
closed = 1;
nodes = (
(209,48,o),
(112,184,o),
(112,400,cs),
(112,579,o),
(201,777,o),
(373,777,cs),
(442,777,o),
(497,737,o),
(536,670,cs),
(575,603,o),
(596,511,o),
(596,410,cs),
(596,290,o),
(572,199,o),
(529,139,cs),
(486,79,o),
(424,48,o),
(351,48,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 2 83 4 1 2 2 20 67 0 0 0 3 83 5 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 4 4 20 67 0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 5 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 4 2 1 2 4 1 104 0 2 0 1 0 2 1 91 0 0 0 3 83 5 1 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
75 73 65 63 42 42 40 37 6 30
CALL[ ]	/* CallFunction */";
};
width = 709;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(142,-19,o),
(146,-14,o),
(155,5,cs),
(175,43,l),
(224,3,o),
(281,-16,o),
(340,-16,cs),
(401,-16,o),
(478,9,o),
(539,74,cs),
(599,139,o),
(645,245,o),
(645,408,cs),
(645,541,o),
(610,661,o),
(546,741,c),
(560,768,ls),
(565,779,o),
(574,796,o),
(574,807,cs),
(574,815,o),
(571,821,o),
(559,821,cs),
(539,821,o),
(521,792,o),
(515,774,c),
(471,814,o),
(419,838,o),
(356,838,cs),
(256,838,o),
(174,782,o),
(122,698,cs),
(70,615,o),
(41,514,o),
(41,404,cs),
(41,247,o),
(82,139,o),
(145,71,c),
(117,18,l),
(114,11,o),
(112,1,o),
(112,-7,cs),
(112,-15,o),
(117,-19,o),
(126,-19,cs)
);
},
{
closed = 1;
nodes = (
(113,176,o),
(86,275,o),
(86,400,cs),
(86,592,o),
(174,807,o),
(362,807,cs),
(413,807,o),
(459,782,o),
(498,739,c),
(477,695,o),
(456,652,o),
(436,612,cs),
(414,568,o),
(391,526,o),
(335,423,cs),
(302,362,o),
(279,321,o),
(267,299,cs),
(261,288,o),
(256,280,o),
(253,274,cs),
(240,251,o),
(210,196,o),
(164,108,c)
);
},
{
closed = 1;
nodes = (
(285,18,o),
(235,37,o),
(193,76,c),
(525,703,l),
(572,630,o),
(600,527,o),
(600,410,cs),
(600,279,o),
(573,183,o),
(527,117,cs),
(481,51,o),
(415,18,o),
(342,18,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
75 74 63 49 36 25 13 0 8 5 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 1 1 12 67 0 4 4 0 83 0 0 0 20 67 0 5 5 2 83 3 1 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 4 5 0 4 91 0 1 1 14 67 0 5 5 2 83 3 1 2 2 21 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
78 76 67 65 37 45 38 41 6 19
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = Oslash;
unicode = 216;
},
{
glyphname = Oslashacute;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(173,-19,o),
(190,-10,o),
(197,5,cs),
(205,19,l),
(250,-4,o),
(300,-16,o),
(355,-16,cs),
(499,-16,o),
(689,83,o),
(689,408,cs),
(689,541,o),
(656,661,o),
(588,741,c),
(602,768,l),
(607,776,o),
(616,796,o),
(616,807,cs),
(616,823,o),
(599,838,o),
(571,838,cs),
(548,838,o),
(537,831,o),
(520,800,c),
(479,824,o),
(431,838,o),
(375,838,cs),
(258,838,o),
(170,783,o),
(115,698,cs),
(61,615,o),
(34,515,o),
(34,404,cs),
(34,248,o),
(72,141,o),
(136,73,c),
(111,24,l),
(111,24,l),
(110,21,o),
(109,17,o),
(109,14,cs),
(109,-7,o),
(131,-19,o),
(146,-19,cs)
);
},
{
closed = 1;
nodes = (
(151,225,o),
(130,304,o),
(130,400,cs),
(130,588,o),
(216,762,o),
(379,762,cs),
(419,762,o),
(453,748,o),
(482,725,c),
(454,670,o),
(436,630,o),
(419,596,cs),
(401,561,o),
(371,507,o),
(326,423,cs),
(186,166,l)
);
},
{
closed = 1;
nodes = (
(316,63,o),
(279,75,o),
(247,99,c),
(541,653,l),
(576,589,o),
(593,505,o),
(593,410,cs),
(593,181,o),
(506,63,o),
(357,63,cs)
);
},
{
closed = 1;
nodes = (
(376,841,o),
(462,897,o),
(462,936,cs),
(462,953,o),
(448,972,o),
(421,972,cs),
(383,972,o),
(308,899,o),
(308,871,cs),
(308,856,o),
(322,841,o),
(343,841,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
13 1 4 0 67 66 55 47 23 0 6 5 4 33 1 2 5 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 7 6 7 106 0 6 0 6 106 0 4 4 0 83 1 1 0 0 20 67 0 5 5 2 83 3 1 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 7 6 7 106 0 6 0 6 106 1 1 0 0 4 5 0 4 91 0 5 5 2 83 3 1 2 2 21 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
86 84 78 76 70 68 59 57 36 45 36 41 8 19
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(407,-16,o),
(489,2,o),
(561,74,cs),
(604,117,o),
(637,179,o),
(657,264,cs),
(666,306,o),
(671,354,o),
(671,408,cs),
(671,642,o),
(567,838,o),
(367,838,cs),
(257,838,o),
(171,783,o),
(117,698,cs),
(65,615,o),
(37,510,o),
(37,404,cs),
(37,257,o),
(73,152,o),
(130,84,cs),
(187,16,o),
(265,-16,o),
(349,-16,cs)
);
},
{
closed = 1;
nodes = (
(157,-19,o),
(173,-10,o),
(180,5,cs),
(585,768,ls),
(590,777,o),
(599,796,o),
(599,807,cs),
(599,815,o),
(598,831,o),
(574,831,cs),
(542,831,o),
(530,815,o),
(510,774,cs),
(471,694,o),
(463,677,o),
(436,621,cs),
(417,582,o),
(385,525,o),
(330,423,cs),
(298,364,o),
(279,331,o),
(267,311,cs),
(257,294,o),
(247,278,o),
(241,267,cs),
(200,194,o),
(186,166,o),
(112,18,cs),
(111,16,o),
(110,13,o),
(110,9,cs),
(110,-6,o),
(126,-19,o),
(138,-19,cs)
);
},
{
closed = 1;
nodes = (
(209,48,o),
(112,184,o),
(112,400,cs),
(112,579,o),
(201,777,o),
(373,777,cs),
(442,777,o),
(497,737,o),
(536,670,cs),
(575,603,o),
(596,511,o),
(596,410,cs),
(596,290,o),
(572,199,o),
(529,139,cs),
(486,79,o),
(424,48,o),
(351,48,cs)
);
},
{
closed = 1;
nodes = (
(361,854,o),
(449,908,o),
(449,941,cs),
(449,960,o),
(437,972,o),
(417,972,cs),
(388,972,o),
(311,904,o),
(311,877,cs),
(311,864,o),
(320,854,o),
(335,854,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 1 0 4 1 94 0 0 4 0 106 0 3 3 4 83 6 1 4 4 20 67 0 2 2 5 83 7 1 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 1 0 1 106 0 0 4 0 106 0 3 3 4 83 6 1 4 4 20 67 0 2 2 5 83 7 1 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 1 0 1 106 0 0 4 0 106 0 6 6 20 67 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 7 1 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 1 0 1 106 0 0 4 0 106 0 6 4 3 4 6 3 104 0 4 0 3 2 4 3 92 0 2 2 5 83 7 1 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
90 88 80 78 42 42 40 38 38 36 8 21
CALL[ ]	/* CallFunction */";
};
width = 709;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(142,-19,o),
(146,-14,o),
(155,5,cs),
(175,43,l),
(224,3,o),
(281,-16,o),
(340,-16,cs),
(401,-16,o),
(478,9,o),
(539,74,cs),
(599,139,o),
(645,245,o),
(645,408,cs),
(645,541,o),
(610,661,o),
(546,741,c),
(560,768,ls),
(565,779,o),
(574,796,o),
(574,807,cs),
(574,815,o),
(571,821,o),
(559,821,cs),
(539,821,o),
(521,792,o),
(515,774,c),
(471,814,o),
(419,838,o),
(356,838,cs),
(256,838,o),
(174,782,o),
(122,698,cs),
(70,615,o),
(41,514,o),
(41,404,cs),
(41,247,o),
(82,139,o),
(145,71,c),
(117,18,l),
(114,11,o),
(112,1,o),
(112,-7,cs),
(112,-15,o),
(117,-19,o),
(126,-19,cs)
);
},
{
closed = 1;
nodes = (
(113,176,o),
(86,275,o),
(86,400,cs),
(86,592,o),
(174,807,o),
(362,807,cs),
(413,807,o),
(459,782,o),
(498,739,c),
(477,695,o),
(456,652,o),
(436,612,cs),
(414,568,o),
(391,526,o),
(335,423,cs),
(302,362,o),
(279,321,o),
(267,299,cs),
(261,288,o),
(256,280,o),
(253,274,cs),
(240,251,o),
(210,196,o),
(164,108,c)
);
},
{
closed = 1;
nodes = (
(285,18,o),
(235,37,o),
(193,76,c),
(525,703,l),
(572,630,o),
(600,527,o),
(600,410,cs),
(600,279,o),
(573,183,o),
(527,117,cs),
(481,51,o),
(415,18,o),
(342,18,cs)
);
},
{
closed = 1;
nodes = (
(342,876,o),
(430,929,o),
(430,950,cs),
(430,969,o),
(422,972,o),
(411,972,cs),
(391,972,o),
(316,911,o),
(316,887,cs),
(316,880,o),
(319,876,o),
(324,876,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
75 74 63 49 36 25 13 0 8 5 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 7 6 7 106 0 6 0 6 106 0 1 1 12 67 0 4 4 0 83 0 0 0 20 67 0 5 5 2 83 3 1 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 7 6 7 106 0 6 0 6 106 0 0 0 4 5 0 4 91 0 1 1 14 67 0 5 5 2 83 3 1 2 2 21 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
95 93 88 86 78 76 67 65 37 45 38 41 8 19
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = Oslashacute;
unicode = 510;
},
{
glyphname = Otilde;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(499,-16,o),
(689,83,o),
(689,408,cs),
(689,642,o),
(588,838,o),
(375,838,cs),
(258,838,o),
(170,783,o),
(115,698,cs),
(61,615,o),
(34,515,o),
(34,404,cs),
(34,257,o),
(69,152,o),
(127,84,cs),
(185,16,o),
(264,-16,o),
(355,-16,cs)
);
},
{
closed = 1;
nodes = (
(292,63,o),
(235,95,o),
(195,154,cs),
(154,213,o),
(130,297,o),
(130,400,cs),
(130,588,o),
(216,762,o),
(379,762,cs),
(517,762,o),
(593,607,o),
(593,410,cs),
(593,181,o),
(506,63,o),
(357,63,cs)
);
},
{
closed = 1;
nodes = (
(238,861,o),
(262,886,o),
(301,886,cs),
(340,886,o),
(382,862,o),
(438,862,cs),
(471,862,o),
(549,880,o),
(549,937,cs),
(549,958,o),
(534,972,o),
(527,972,cs),
(522,972,o),
(512,968,o),
(497,959,cs),
(478,948,o),
(456,942,o),
(437,942,cs),
(398,942,o),
(336,970,o),
(300,970,cs),
(275,970,o),
(253,964,o),
(232,952,cs),
(213,941,o),
(198,926,o),
(198,897,cs),
(198,877,o),
(205,861,o),
(217,861,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 2 5 7 91 0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 2 5 7 91 0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
74 72 35 38 35 35 40 40 42 38 36 10 24
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(407,-16,o),
(489,2,o),
(561,74,cs),
(604,117,o),
(637,179,o),
(657,264,cs),
(666,306,o),
(671,354,o),
(671,408,cs),
(671,642,o),
(567,838,o),
(367,838,cs),
(257,838,o),
(171,783,o),
(117,698,cs),
(65,615,o),
(37,510,o),
(37,404,cs),
(37,257,o),
(73,152,o),
(130,84,cs),
(187,16,o),
(265,-16,o),
(349,-16,cs)
);
},
{
closed = 1;
nodes = (
(209,48,o),
(112,184,o),
(112,400,cs),
(112,579,o),
(201,777,o),
(373,777,cs),
(442,777,o),
(497,737,o),
(536,670,cs),
(575,603,o),
(596,511,o),
(596,410,cs),
(596,290,o),
(572,199,o),
(529,139,cs),
(486,79,o),
(424,48,o),
(351,48,cs)
);
},
{
closed = 1;
nodes = (
(206,879,o),
(233,904,o),
(273,904,cs),
(312,904,o),
(354,880,o),
(410,880,cs),
(466,880,o),
(499,902,o),
(512,925,cs),
(515,931,o),
(517,937,o),
(517,944,cs),
(517,960,o),
(506,972,o),
(499,972,cs),
(496,972,o),
(492,971,o),
(489,970,cs),
(485,968,o),
(478,964,o),
(469,959,cs),
(446,948,o),
(426,942,o),
(409,942,cs),
(370,942,o),
(308,970,o),
(272,970,cs),
(247,970,o),
(225,964,o),
(204,952,cs),
(194,946,o),
(187,941,o),
(183,936,cs),
(179,931,o),
(176,927,o),
(175,924,cs),
(173,919,o),
(172,913,o),
(172,907,cs),
(172,892,o),
(178,879,o),
(189,879,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 2 5 7 91 0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 2 5 7 91 0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
79 77 35 38 35 35 40 42 42 40 37 10 35
CALL[ ]	/* CallFunction */";
};
width = 709;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(401,-16,o),
(478,9,o),
(539,74,cs),
(599,139,o),
(645,245,o),
(645,408,cs),
(645,524,o),
(618,631,o),
(569,710,cs),
(520,789,o),
(447,838,o),
(356,838,cs),
(256,838,o),
(174,782,o),
(122,698,cs),
(70,615,o),
(41,514,o),
(41,404,cs),
(41,113,o),
(190,-16,o),
(340,-16,cs)
);
},
{
closed = 1;
nodes = (
(187,18,o),
(86,163,o),
(86,400,cs),
(86,592,o),
(174,807,o),
(362,807,cs),
(501,807,o),
(600,629,o),
(600,410,cs),
(600,279,o),
(573,183,o),
(527,117,cs),
(481,51,o),
(415,18,o),
(342,18,cs)
);
},
{
closed = 1;
nodes = (
(206,888,o),
(233,913,o),
(274,913,cs),
(313,913,o),
(355,889,o),
(411,889,cs),
(464,889,o),
(513,909,o),
(513,934,cs),
(513,943,o),
(507,951,o),
(500,951,cs),
(497,951,o),
(493,950,o),
(490,949,cs),
(486,947,o),
(479,943,o),
(470,938,cs),
(447,927,o),
(427,921,o),
(410,921,cs),
(371,921,o),
(309,949,o),
(273,949,cs),
(248,949,o),
(226,943,o),
(205,931,cs),
(186,920,o),
(176,910,o),
(176,903,cs),
(176,896,o),
(183,888,o),
(190,888,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 2 5 7 91 0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 2 5 7 91 0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
75 73 35 38 35 35 39 40 42 40 36 10 24
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = Otilde;
unicode = 213;
},
{
glyphname = OE;
kernLeft = C;
kernRight = AE;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(507,-16,o),
(556,57,o),
(596,150,c),
(596,64,ls),
(596,11,o),
(597,0,o),
(654,0,cs),
(671,0,o),
(690,0,o),
(713,1,cs),
(736,2,o),
(767,2,o),
(808,2,cs),
(886,2,o),
(975,0,o),
(1053,0,cs),
(1082,0,o),
(1092,6,o),
(1095,33,cs),
(1108,165,o),
(1111,266,o),
(1111,277,cs),
(1111,297,o),
(1107,321,o),
(1072,321,cs),
(1037,321,o),
(1025,300,o),
(1024,273,cs),
(1019,182,o),
(1011,131,o),
(1011,121,cs),
(1008,87,o),
(989,84,o),
(968,84,cs),
(690,84,l),
(690,377,l),
(711,378,o),
(732,379,o),
(753,379,cs),
(772,379,o),
(788,379,o),
(800,379,cs),
(812,378,o),
(823,378,o),
(832,378,cs),
(871,378,o),
(880,338,o),
(880,309,cs),
(880,292,o),
(886,275,o),
(921,275,cs),
(941,275,o),
(963,284,o),
(963,307,cs),
(963,326,o),
(963,344,o),
(962,363,cs),
(961,382,o),
(961,401,o),
(961,420,cs),
(961,439,o),
(961,457,o),
(962,474,cs),
(963,490,o),
(963,508,o),
(963,527,cs),
(963,548,o),
(950,563,o),
(921,563,cs),
(886,563,o),
(878,541,o),
(878,530,cs),
(878,509,o),
(877,464,o),
(861,464,cs),
(862,464,o),
(802,461,o),
(753,461,cs),
(742,461,o),
(731,461,o),
(721,462,cs),
(711,463,o),
(701,463,o),
(690,464,c),
(690,737,l),
(942,737,ls),
(965,737,o),
(979,728,o),
(979,677,cs),
(979,645,ls),
(979,610,o),
(988,595,o),
(1023,595,cs),
(1058,595,o),
(1067,610,o),
(1067,651,cs),
(1067,785,ls),
(1067,813,o),
(1058,821,o),
(1039,821,cs),
(979,821,o),
(930,820,o),
(891,820,cs),
(851,820,o),
(808,819,o),
(761,819,cs),
(736,819,o),
(714,819,o),
(696,820,cs),
(677,821,o),
(657,821,o),
(636,821,cs),
(591,821,o),
(592,785,o),
(592,750,cs),
(592,706,o),
(593,717,o),
(593,669,c),
(588,719,o),
(536,838,o),
(359,838,cs),
(250,838,o),
(167,783,o),
(113,698,cs),
(60,614,o),
(34,511,o),
(34,404,cs),
(34,257,o),
(69,152,o),
(126,84,cs),
(182,16,o),
(260,-16,o),
(345,-16,cs)
);
},
{
closed = 1;
nodes = (
(272,66,o),
(222,98,o),
(186,156,cs),
(150,214,o),
(130,297,o),
(130,400,cs),
(130,572,o),
(201,759,o),
(355,759,cs),
(494,759,o),
(593,597,o),
(593,410,cs),
(593,295,o),
(566,211,o),
(520,153,cs),
(474,95,o),
(408,66,o),
(335,66,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
12 1 2 3 130 95 2 8 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 2 3 5 3 2 96 0 9 7 6 7 9 6 104 0 5 0 6 8 5 6 91 0 13 13 0 83 0 0 0 20 67 0 3 3 1 83 0 1 1 12 67 0 7 7 4 83 0 4 4 23 67 0 8 8 10 84 0 10 10 13 67 0 12 12 11 83 0 11 11 21 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 2 3 5 3 2 5 104 0 9 7 6 7 9 6 104 0 5 0 6 8 5 6 91 0 13 13 0 83 0 0 0 20 67 0 3 3 1 83 0 1 1 12 67 0 7 7 4 83 0 4 4 23 67 0 8 8 10 84 0 10 10 13 67 0 12 12 11 83 0 11 11 21 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 2 3 5 3 2 5 104 0 9 7 6 7 9 6 104 0 4 0 7 9 4 7 91 0 5 0 6 8 5 6 91 0 13 13 0 83 0 0 0 20 67 0 3 3 1 83 0 1 1 12 67 0 8 8 10 84 0 10 10 13 67 0 12 12 11 83 0 11 11 21 11 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 71 values pushed */
0 2 3 5 3 2 5 104 0 9 7 6 7 9 6 104 0 0 0 13 3 0 13 91 0 4 0 7 9 4 7 91 0 5 0 6 8 5 6 91 0 3 3 1 83 0 1 1 14 67 0 8 8 10 84 0 10 10 13 67 0 12 12 11 83 0 11 11 21 11 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
156 154 146 144 136 134 125 115 104 102 33 118 42 38 145 37 37 173 38 14 24
CALL[ ]	/* CallFunction */";
};
width = 1144;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(472,-16,o),
(550,46,o),
(599,159,c),
(599,64,ls),
(599,11,o),
(600,0,o),
(657,0,cs),
(674,0,o),
(693,0,o),
(716,1,cs),
(739,2,o),
(770,2,o),
(811,2,cs),
(882,2,o),
(964,0,o),
(1035,0,cs),
(1063,0,o),
(1074,4,o),
(1077,33,cs),
(1086,122,o),
(1093,257,o),
(1093,277,cs),
(1093,293,o),
(1091,317,o),
(1062,317,cs),
(1039,317,o),
(1028,300,o),
(1027,273,cs),
(1023,208,o),
(1020,171,o),
(1014,103,cs),
(1011,69,o),
(992,66,o),
(971,66,cs),
(672,66,l),
(672,386,l),
(700,387,o),
(728,388,o),
(756,388,cs),
(775,388,o),
(791,388,o),
(803,388,cs),
(815,387,o),
(826,387,o),
(835,387,cs),
(874,387,o),
(883,340,o),
(883,309,cs),
(883,292,o),
(890,277,o),
(914,277,cs),
(929,277,o),
(945,284,o),
(945,307,cs),
(945,326,o),
(945,344,o),
(944,363,cs),
(943,382,o),
(943,401,o),
(943,420,cs),
(943,439,o),
(943,458,o),
(944,477,cs),
(945,495,o),
(945,514,o),
(945,533,cs),
(945,548,o),
(937,562,o),
(913,562,cs),
(886,562,o),
(881,542,o),
(881,530,cs),
(881,512,o),
(880,455,o),
(864,455,cs),
(865,455,o),
(805,452,o),
(756,452,cs),
(741,452,o),
(727,452,o),
(714,453,cs),
(700,454,o),
(686,454,o),
(672,455,c),
(672,755,l),
(945,755,ls),
(960,755,o),
(982,752,o),
(982,707,cs),
(982,645,ls),
(982,617,o),
(987,599,o),
(1016,599,cs),
(1043,599,o),
(1049,616,o),
(1049,651,cs),
(1049,785,ls),
(1049,813,o),
(1040,821,o),
(1021,821,cs),
(966,821,o),
(920,820,o),
(884,820,cs),
(847,820,o),
(807,819,o),
(764,819,cs),
(739,819,o),
(717,819,o),
(699,820,cs),
(680,821,o),
(660,821,o),
(639,821,cs),
(594,821,o),
(595,785,o),
(595,750,cs),
(595,733,o),
(595,718,o),
(595,706,cs),
(595,694,o),
(595,679,o),
(596,661,c),
(575,735,o),
(507,838,o),
(358,838,cs),
(252,838,o),
(170,783,o),
(117,698,cs),
(66,617,o),
(37,512,o),
(37,404,cs),
(37,257,o),
(73,152,o),
(129,84,cs),
(185,16,o),
(262,-16,o),
(343,-16,cs)
);
},
{
closed = 1;
nodes = (
(270,48,o),
(213,82,o),
(174,143,cs),
(134,203,o),
(112,292,o),
(112,400,cs),
(112,579,o),
(191,777,o),
(358,777,cs),
(496,777,o),
(596,610,o),
(596,410,cs),
(596,290,o),
(569,199,o),
(523,139,cs),
(477,79,o),
(411,48,o),
(338,48,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 2 3 130 1 8 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 2 3 5 3 2 5 104 0 9 7 6 7 9 6 104 0 5 0 6 8 5 6 91 0 13 13 0 83 0 0 0 20 67 0 3 3 1 83 0 1 1 12 67 0 7 7 4 83 0 4 4 15 67 0 8 8 10 84 0 10 10 13 67 0 12 12 11 83 0 11 11 21 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 2 3 5 3 2 5 104 0 9 7 6 7 9 6 104 0 4 0 7 9 4 7 91 0 5 0 6 8 5 6 91 0 13 13 0 83 0 0 0 20 67 0 3 3 1 83 0 1 1 12 67 0 8 8 10 84 0 10 10 13 67 0 12 12 11 83 0 11 11 21 11 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 71 values pushed */
0 2 3 5 3 2 5 104 0 9 7 6 7 9 6 104 0 0 0 13 3 0 13 91 0 4 0 7 9 4 7 91 0 5 0 6 8 5 6 91 0 3 3 1 83 0 1 1 14 67 0 8 8 10 84 0 10 10 13 67 0 12 12 11 83 0 11 11 21 11 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
154 152 144 142 134 132 125 115 106 104 33 118 42 40 145 39 37 171 38 14 24
CALL[ ]	/* CallFunction */";
};
width = 1128;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(430,-16,o),
(543,35,o),
(603,174,c),
(603,64,ls),
(603,11,o),
(604,0,o),
(661,0,cs),
(678,0,o),
(697,0,o),
(720,1,cs),
(743,2,o),
(774,2,o),
(815,2,cs),
(876,2,o),
(948,0,o),
(1009,0,cs),
(1036,0,o),
(1048,0,o),
(1051,33,cs),
(1062,139,o),
(1067,285,o),
(1067,277,cs),
(1067,293,o),
(1067,310,o),
(1048,310,cs),
(1045,310,o),
(1041,307,o),
(1038,302,cs),
(1034,296,o),
(1032,286,o),
(1031,273,cs),
(1026,166,o),
(1020,100,o),
(1018,73,cs),
(1015,39,o),
(996,36,o),
(975,36,cs),
(646,36,l),
(646,401,l),
(685,402,o),
(721,403,o),
(760,403,cs),
(779,403,o),
(795,403,o),
(807,403,cs),
(819,402,o),
(830,402,o),
(839,402,cs),
(879,402,o),
(887,346,o),
(887,309,cs),
(887,292,o),
(895,280,o),
(904,280,cs),
(907,280,o),
(910,282,o),
(914,285,cs),
(917,288,o),
(919,296,o),
(919,307,cs),
(919,326,o),
(919,344,o),
(918,363,cs),
(917,382,o),
(917,401,o),
(917,420,cs),
(917,439,o),
(917,458,o),
(918,477,cs),
(919,495,o),
(919,514,o),
(919,533,cs),
(919,548,o),
(918,560,o),
(902,560,cs),
(888,560,o),
(885,541,o),
(885,530,cs),
(885,471,o),
(879,440,o),
(868,440,cs),
(869,440,o),
(809,437,o),
(760,437,cs),
(741,437,o),
(722,437,o),
(703,438,cs),
(684,439,o),
(665,439,o),
(646,440,c),
(646,785,l),
(949,785,ls),
(962,785,o),
(986,782,o),
(986,757,cs),
(986,645,ls),
(986,626,o),
(986,605,o),
(1006,605,cs),
(1021,605,o),
(1023,626,o),
(1023,651,cs),
(1023,785,ls),
(1023,813,o),
(1014,821,o),
(995,821,cs),
(915,821,o),
(831,819,o),
(768,819,cs),
(743,819,o),
(721,819,o),
(703,820,cs),
(684,821,o),
(664,821,o),
(643,821,cs),
(598,821,o),
(599,785,o),
(599,750,cs),
(599,733,o),
(599,716,o),
(599,699,cs),
(599,682,o),
(599,665,o),
(600,647,c),
(553,762,o),
(469,838,o),
(356,838,cs),
(256,838,o),
(174,782,o),
(122,698,cs),
(70,615,o),
(41,514,o),
(41,404,cs),
(41,113,o),
(190,-16,o),
(340,-16,cs)
);
},
{
closed = 1;
nodes = (
(187,18,o),
(86,163,o),
(86,400,cs),
(86,592,o),
(174,807,o),
(362,807,cs),
(501,807,o),
(600,629,o),
(600,410,cs),
(600,279,o),
(573,183,o),
(527,117,cs),
(481,51,o),
(415,18,o),
(342,18,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
10 1 2 3 126 1 8 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 2 3 5 3 2 5 104 0 9 7 6 7 9 6 104 0 5 0 6 8 5 6 91 0 13 13 0 83 0 0 0 20 67 0 3 3 1 83 0 1 1 12 67 0 7 7 4 83 0 4 4 15 67 0 8 8 10 83 0 10 10 13 67 0 12 12 11 83 0 11 11 21 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 2 3 5 3 2 5 104 0 9 7 6 7 9 6 104 0 4 0 7 9 4 7 91 0 5 0 6 8 5 6 91 0 13 13 0 83 0 0 0 20 67 0 3 3 1 83 0 1 1 12 67 0 8 8 10 83 0 10 10 13 67 0 12 12 11 83 0 11 11 21 11 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 71 values pushed */
0 2 3 5 3 2 5 104 0 9 7 6 7 9 6 104 0 0 0 13 3 0 13 91 0 4 0 7 9 4 7 91 0 5 0 6 8 5 6 91 0 3 3 1 83 0 1 1 14 67 0 8 8 10 83 0 10 10 13 67 0 12 12 11 83 0 11 11 21 11 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
152 150 142 140 132 130 121 111 102 100 33 118 42 40 145 37 37 169 38 14 24
CALL[ ]	/* CallFunction */";
};
width = 1105;
}
);
note = OE;
unicode = 338;
},
{
glyphname = P;
kernLeft = B;
kernRight = P;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(334,0,ls),
(371,0,o),
(379,13,o),
(379,32,cs),
(379,55,o),
(365,63,o),
(336,63,cs),
(231,63,l),
(231,332,l),
(260,331,o),
(279,330,o),
(299,330,cs),
(446,330,o),
(636,397,o),
(636,595,cs),
(636,759,o),
(510,821,o),
(345,821,cs),
(246,821,o),
(156,818,o),
(63,818,cs),
(38,818,o),
(25,808,o),
(25,787,cs),
(25,768,o),
(33,756,o),
(48,755,cs),
(100,751,ls),
(125,748,o),
(131,735,o),
(132,712,cs),
(135,648,o),
(138,552,o),
(138,437,cs),
(138,311,o),
(137,228,o),
(137,106,cs),
(137,74,o),
(114,63,o),
(78,60,cs),
(55,58,o),
(39,55,o),
(32,50,cs),
(24,45,o),
(20,39,o),
(20,30,cs),
(20,5,o),
(38,0,o),
(81,0,cs)
);
},
{
closed = 1;
nodes = (
(281,412,o),
(252,413,o),
(231,414,c),
(231,734,l),
(254,738,o),
(278,741,o),
(303,741,cs),
(377,741,o),
(540,736,o),
(540,592,cs),
(540,483,o),
(444,412,o),
(302,412,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
56 1 5 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
6 1 4 4 0 83 0 0 0 12 67 0 1 1 5 83 0 5 5 15 67 0 2 2 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 1 2 5 1 91 6 1 4 4 0 83 0 0 0 12 67 0 2 2 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 1 2 5 1 91 6 1 4 4 0 83 0 0 0 14 67 0 2 2 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
54 53 61 57 53 69 54 69 48 45 41 39 38 34 26 19 7 15
CALL[ ]	/* CallFunction */";
};
width = 642;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(316,0,ls),
(351,0,o),
(361,8,o),
(361,25,cs),
(361,42,o),
(347,51,o),
(318,51,cs),
(211,51,l),
(211,341,l),
(219,340,o),
(227,340,o),
(235,340,cs),
(242,339,o),
(250,339,o),
(257,339,cs),
(264,339,o),
(271,339,o),
(277,339,cs),
(426,339,o),
(616,403,o),
(616,595,cs),
(616,759,o),
(490,821,o),
(325,821,cs),
(211,821,o),
(165,818,o),
(70,818,cs),
(46,818,o),
(42,803,o),
(42,794,cs),
(42,779,o),
(47,769,o),
(70,769,cs),
(84,769,ls),
(127,769,o),
(133,749,o),
(133,729,cs),
(133,696,o),
(134,654,o),
(136,603,cs),
(138,552,o),
(139,497,o),
(139,437,cs),
(139,307,o),
(138,219,o),
(138,92,cs),
(138,67,o),
(128,48,o),
(81,48,cs),
(62,48,o),
(50,45,o),
(46,40,cs),
(41,34,o),
(39,28,o),
(39,23,cs),
(39,3,o),
(67,0,o),
(100,0,cs)
);
},
{
closed = 1;
nodes = (
(244,403,o),
(237,403,o),
(231,404,cs),
(224,404,o),
(217,404,o),
(211,405,c),
(211,750,l),
(234,754,o),
(258,757,o),
(283,757,cs),
(368,757,o),
(541,750,o),
(541,592,cs),
(541,508,o),
(492,456,o),
(432,432,cs),
(372,408,o),
(307,403,o),
(276,403,cs),
(267,403,o),
(259,403,o),
(252,403,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
59 58 2 8 7 41 1 3 8 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
11 1 7 1 8 1 7 96 9 1 8 4 1 3 0 8 3 91 0 1 1 2 83 0 2 2 12 67 5 10 2 0 0 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
11 1 7 1 8 1 7 96 9 1 8 4 1 3 0 8 3 91 0 1 1 2 83 0 2 2 14 67 5 10 2 0 0 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
56 55 1 0 65 62 61 60 55 75 56 75 50 47 44 42 40 39 38 35 27 20 16 13 0 54 1 54 12 15
CALL[ ]	/* CallFunction */";
};
width = 624;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(278,0,ls),
(294,0,o),
(306,1,o),
(313,2,cs),
(320,3,o),
(323,6,o),
(323,13,cs),
(323,25,o),
(309,31,o),
(280,31,cs),
(183,31,l),
(183,356,l),
(191,355,o),
(199,355,o),
(207,355,cs),
(214,354,o),
(222,354,o),
(229,354,cs),
(236,354,o),
(243,354,o),
(249,354,cs),
(397,354,o),
(588,413,o),
(588,595,cs),
(588,759,o),
(462,821,o),
(297,821,cs),
(184,821,o),
(148,818,o),
(52,818,cs),
(40,818,o),
(32,817,o),
(29,814,cs),
(26,811,o),
(24,807,o),
(24,804,cs),
(24,801,o),
(26,797,o),
(30,794,cs),
(33,791,o),
(41,789,o),
(52,789,cs),
(86,789,ls),
(129,789,o),
(135,770,o),
(135,749,cs),
(135,714,o),
(136,669,o),
(138,615,cs),
(140,560,o),
(141,501,o),
(141,437,cs),
(141,369,o),
(141,307,o),
(141,253,cs),
(140,198,o),
(140,138,o),
(140,72,cs),
(140,60,o),
(141,28,o),
(63,28,cs),
(44,28,o),
(32,26,o),
(28,23,cs),
(23,19,o),
(21,15,o),
(21,12,cs),
(21,0,o),
(61,0,o),
(82,0,cs)
);
},
{
closed = 1;
nodes = (
(216,388,o),
(209,388,o),
(203,389,cs),
(196,389,o),
(189,389,o),
(183,390,c),
(183,780,l),
(206,784,o),
(230,787,o),
(255,787,cs),
(301,787,o),
(372,786,o),
(434,761,cs),
(491,737,o),
(543,688,o),
(543,592,cs),
(543,503,o),
(491,446,o),
(422,419,cs),
(351,392,o),
(285,388,o),
(248,388,cs),
(239,388,o),
(231,388,o),
(224,388,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
63 62 2 8 1 43 1 3 8 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
9 1 8 4 1 3 0 8 3 91 11 7 2 1 1 2 83 0 2 2 12 67 5 10 2 0 0 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
9 1 8 4 1 3 0 8 3 91 11 7 2 1 1 2 83 0 2 2 14 67 5 10 2 0 0 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
60 59 1 0 70 66 65 64 59 81 60 80 53 49 46 44 42 41 40 37 29 22 18 15 0 58 1 58 12 15
CALL[ ]	/* CallFunction */";
};
width = 599;
}
);
note = P;
unicode = 80;
},
{
glyphname = Thorn;
kernLeft = B;
kernRight = Thorn;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(326,0,ls),
(369,0,o),
(388,7,o),
(388,32,cs),
(388,57,o),
(357,63,o),
(328,63,cs),
(231,63,l),
(231,184,l),
(239,183,o),
(247,183,o),
(255,183,cs),
(262,182,o),
(270,182,o),
(277,182,cs),
(284,182,o),
(291,182,o),
(297,182,cs),
(445,182,o),
(636,241,o),
(636,423,cs),
(636,587,o),
(510,649,o),
(345,649,cs),
(320,649,o),
(299,649,o),
(281,649,cs),
(263,649,o),
(246,649,o),
(230,648,c),
(230,720,ls),
(230,751,o),
(245,759,o),
(296,759,cs),
(331,759,o),
(355,767,o),
(355,792,cs),
(355,819,o),
(325,821,o),
(298,821,cs),
(244,821,o),
(163,819,o),
(100,819,cs),
(76,819,o),
(55,809,o),
(55,786,cs),
(55,769,o),
(68,758,o),
(87,758,cs),
(103,758,ls),
(127,758,o),
(132,737,o),
(132,718,cs),
(132,683,o),
(138,535,o),
(138,395,cs),
(138,370,o),
(138,349,o),
(138,332,cs),
(138,315,o),
(138,299,o),
(138,286,cs),
(138,273,o),
(138,260,o),
(138,248,cs),
(137,236,o),
(137,223,o),
(137,210,cs),
(137,197,o),
(137,182,o),
(137,165,cs),
(137,148,o),
(137,128,o),
(137,104,cs),
(137,79,o),
(132,60,o),
(111,60,cs),
(72,60,o),
(52,50,o),
(52,31,cs),
(52,4,o),
(67,0,o),
(130,0,cs)
);
},
{
closed = 1;
nodes = (
(264,264,o),
(257,264,o),
(251,265,cs),
(244,265,o),
(237,265,o),
(231,266,c),
(231,560,l),
(254,564,o),
(278,567,o),
(303,567,cs),
(378,567,o),
(540,563,o),
(540,420,cs),
(540,352,o),
(497,309,o),
(440,288,cs),
(382,267,o),
(326,264,o),
(296,264,cs),
(287,264,o),
(279,264,o),
(272,264,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
78 77 2 10 9 58 1 5 10 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 4 13 1 9 10 4 9 91 11 1 10 6 1 5 0 10 5 91 3 1 1 1 2 83 0 2 2 12 67 7 12 2 0 0 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 4 13 1 9 10 4 9 91 11 1 10 6 1 5 0 10 5 91 3 1 1 1 2 83 0 2 2 14 67 7 12 2 0 0 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
75 74 1 0 85 81 80 79 74 94 75 94 68 65 61 59 57 56 55 52 44 40 37 35 31 24 20 17 0 73 1 73 14 15
CALL[ ]	/* CallFunction */";
};
width = 650;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(306,0,ls),
(338,0,o),
(361,0,o),
(361,25,cs),
(361,45,o),
(337,51,o),
(308,51,cs),
(211,51,l),
(211,184,l),
(219,183,o),
(227,183,o),
(235,183,cs),
(242,182,o),
(250,182,o),
(257,182,cs),
(264,182,o),
(271,182,o),
(277,182,cs),
(425,182,o),
(616,241,o),
(616,423,cs),
(616,587,o),
(490,649,o),
(325,649,cs),
(300,649,o),
(279,649,o),
(261,649,cs),
(243,649,o),
(226,649,o),
(210,648,c),
(210,740,ls),
(210,771,o),
(253,771,o),
(276,771,cs),
(294,771,o),
(328,772,o),
(328,797,cs),
(328,819,o),
(299,821,o),
(278,821,cs),
(224,821,o),
(143,819,o),
(80,819,cs),
(55,819,o),
(42,810,o),
(42,793,cs),
(42,780,o),
(51,770,o),
(80,770,cs),
(84,770,ls),
(127,770,o),
(133,750,o),
(133,730,cs),
(133,693,o),
(139,541,o),
(139,395,cs),
(139,370,o),
(139,348,o),
(139,330,cs),
(139,312,o),
(139,296,o),
(139,282,cs),
(139,267,o),
(139,254,o),
(139,242,cs),
(138,230,o),
(138,217,o),
(138,203,cs),
(138,189,o),
(138,173,o),
(138,156,cs),
(138,138,o),
(138,117,o),
(138,92,cs),
(138,79,o),
(140,48,o),
(91,48,cs),
(72,48,o),
(58,46,o),
(51,42,cs),
(43,37,o),
(39,31,o),
(39,24,cs),
(39,15,o),
(45,8,o),
(56,5,cs),
(67,2,o),
(85,0,o),
(110,0,cs)
);
},
{
closed = 1;
nodes = (
(244,246,o),
(237,246,o),
(231,247,cs),
(224,247,o),
(217,247,o),
(211,248,c),
(211,578,l),
(234,582,o),
(258,585,o),
(283,585,cs),
(368,585,o),
(541,578,o),
(541,420,cs),
(541,345,o),
(493,296,o),
(432,273,cs),
(369,248,o),
(310,246,o),
(276,246,cs),
(267,246,o),
(259,246,o),
(252,246,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
84 83 2 10 9 65 1 5 10 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 4 13 1 9 10 4 9 91 11 1 10 6 1 5 0 10 5 91 3 1 1 1 2 83 0 2 2 12 67 7 12 2 0 0 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 4 13 1 9 10 4 9 91 11 1 10 6 1 5 0 10 5 91 3 1 1 1 2 83 0 2 2 14 67 7 12 2 0 0 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
81 80 1 0 91 87 86 85 80 100 81 100 75 72 68 66 64 63 62 59 51 47 43 39 33 25 22 19 0 79 1 79 14 15
CALL[ ]	/* CallFunction */";
};
width = 633;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(278,0,ls),
(294,0,o),
(306,1,o),
(313,2,cs),
(320,3,o),
(323,6,o),
(323,13,cs),
(323,25,o),
(309,31,o),
(280,31,cs),
(183,31,l),
(183,184,l),
(191,183,o),
(199,183,o),
(207,183,cs),
(214,182,o),
(222,182,o),
(229,182,cs),
(236,182,o),
(243,182,o),
(249,182,cs),
(397,182,o),
(588,241,o),
(588,423,cs),
(588,587,o),
(462,649,o),
(297,649,cs),
(272,649,o),
(251,649,o),
(233,649,cs),
(215,649,o),
(198,649,o),
(182,648,c),
(182,760,ls),
(182,791,o),
(225,791,o),
(248,791,cs),
(267,791,o),
(290,791,o),
(290,806,cs),
(290,821,o),
(262,821,o),
(250,821,cs),
(196,821,o),
(115,819,o),
(52,819,cs),
(40,819,o),
(32,818,o),
(29,815,cs),
(26,812,o),
(24,808,o),
(24,805,cs),
(24,802,o),
(26,798,o),
(30,795,cs),
(33,792,o),
(41,790,o),
(52,790,cs),
(86,790,ls),
(129,790,o),
(135,771,o),
(135,750,cs),
(135,711,o),
(141,552,o),
(141,395,cs),
(141,368,o),
(141,345,o),
(141,326,cs),
(141,307,o),
(141,290,o),
(141,275,cs),
(141,260,o),
(141,245,o),
(141,232,cs),
(140,219,o),
(140,205,o),
(140,190,cs),
(140,175,o),
(140,159,o),
(140,140,cs),
(140,121,o),
(140,99,o),
(140,72,cs),
(140,60,o),
(141,28,o),
(63,28,cs),
(44,28,o),
(32,26,o),
(28,23,cs),
(23,19,o),
(21,15,o),
(21,12,cs),
(21,0,o),
(61,0,o),
(82,0,cs)
);
},
{
closed = 1;
nodes = (
(216,216,o),
(209,216,o),
(203,217,cs),
(196,217,o),
(189,217,o),
(183,218,c),
(183,608,l),
(206,612,o),
(230,615,o),
(255,615,cs),
(301,615,o),
(372,614,o),
(434,589,cs),
(491,565,o),
(543,516,o),
(543,420,cs),
(543,331,o),
(491,274,o),
(422,247,cs),
(351,220,o),
(285,216,o),
(248,216,cs),
(239,216,o),
(231,216,o),
(224,216,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
84 83 2 10 9 64 1 5 10 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 4 13 1 9 10 4 9 91 11 1 10 6 1 5 0 10 5 91 3 1 1 1 2 83 0 2 2 12 67 7 12 2 0 0 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 4 13 1 9 10 4 9 91 11 1 10 6 1 5 0 10 5 91 3 1 1 1 2 83 0 2 2 14 67 7 12 2 0 0 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
81 80 1 0 91 87 86 85 80 102 81 101 74 70 67 65 63 62 61 58 50 46 42 39 34 26 22 19 0 79 1 79 14 15
CALL[ ]	/* CallFunction */";
};
width = 609;
}
);
note = Thorn;
unicode = 222;
},
{
glyphname = Q;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(546,-128,o),
(614,-98,o),
(614,-67,cs),
(614,-48,o),
(604,-35,o),
(580,-35,cs),
(561,-35,o),
(543,-37,o),
(526,-41,cs),
(509,-46,o),
(498,-48,o),
(494,-48,cs),
(481,-48,o),
(466,-44,o),
(449,-36,cs),
(432,-28,o),
(415,-20,o),
(398,-13,c),
(466,-4,o),
(539,28,o),
(595,94,cs),
(650,160,o),
(689,260,o),
(689,408,cs),
(689,642,o),
(580,838,o),
(367,838,cs),
(251,838,o),
(164,783,o),
(111,698,cs),
(59,614,o),
(34,511,o),
(34,404,cs),
(34,273,o),
(61,176,o),
(109,108,cs),
(156,40,o),
(221,1,o),
(297,-11,c),
(251,-24,o),
(197,-52,o),
(197,-87,cs),
(197,-106,o),
(220,-109,o),
(243,-109,cs),
(269,-109,o),
(307,-85,o),
(353,-85,cs),
(395,-85,o),
(441,-128,o),
(495,-128,cs)
);
},
{
closed = 1;
nodes = (
(292,63,o),
(235,95,o),
(195,154,cs),
(154,213,o),
(130,297,o),
(130,400,cs),
(130,589,o),
(207,762,o),
(371,762,cs),
(509,762,o),
(593,605,o),
(593,410,cs),
(593,181,o),
(506,63,o),
(357,63,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 7 values pushed */
49 17 2 1 6 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 7 values pushed */
49 17 2 2 6 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 5 4 3 4 5 3 104 0 6 0 4 5 6 4 91 2 1 1 0 3 1 3 87 0 7 7 0 83 0 0 0 20 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 6 1 6 2 1 104 0 5 4 3 4 5 3 104 0 6 0 4 5 6 4 91 0 1 0 3 1 3 87 0 7 7 0 83 0 0 0 20 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 2 6 1 6 2 1 104 0 5 4 3 4 5 3 104 0 0 0 7 6 0 7 91 0 1 4 3 1 79 0 6 0 4 5 6 4 91 0 1 1 3 83 0 3 1 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
68 66 60 58 35 35 38 33 43 38 8 21
CALL[ ]	/* CallFunction */";
};
width = 723;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(529,-114,o),
(591,-89,o),
(591,-62,cs),
(591,-47,o),
(584,-36,o),
(567,-36,cs),
(553,-36,o),
(538,-39,o),
(522,-44,cs),
(505,-49,o),
(491,-52,o),
(478,-52,cs),
(463,-52,o),
(446,-47,o),
(428,-38,cs),
(409,-29,o),
(391,-21,o),
(374,-14,c),
(439,-6,o),
(515,25,o),
(572,91,cs),
(629,157,o),
(671,259,o),
(671,408,cs),
(671,642,o),
(556,838,o),
(356,838,cs),
(252,838,o),
(172,782,o),
(118,698,cs),
(66,616,o),
(37,514,o),
(37,404,cs),
(37,141,o),
(155,13,o),
(291,-11,c),
(248,-23,o),
(188,-46,o),
(188,-80,cs),
(188,-95,o),
(205,-98,o),
(221,-98,cs),
(244,-98,o),
(284,-71,o),
(337,-71,cs),
(379,-71,o),
(425,-114,o),
(479,-114,cs)
);
},
{
closed = 1;
nodes = (
(206,48,o),
(112,184,o),
(112,400,cs),
(112,577,o),
(192,777,o),
(360,777,cs),
(429,777,o),
(488,737,o),
(530,670,cs),
(572,603,o),
(596,511,o),
(596,410,cs),
(596,290,o),
(570,199,o),
(525,139,cs),
(480,79,o),
(416,48,o),
(343,48,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
27 5 2 2 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 6 1 6 2 1 104 0 5 4 3 4 5 3 104 0 6 0 4 5 6 4 91 0 1 0 3 1 3 87 0 7 7 0 83 0 0 0 20 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 2 6 1 6 2 1 104 0 5 4 3 4 5 3 104 0 0 0 7 6 0 7 91 0 1 4 3 1 79 0 6 0 4 5 6 4 91 0 1 1 3 83 0 3 1 3 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
70 68 60 58 52 50 47 45 42 40 34 32 31 29 18 16 8 15
CALL[ ]	/* CallFunction */";
};
width = 708;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(533,-90,o),
(585,-73,o),
(585,-53,cs),
(585,-42,o),
(582,-37,o),
(575,-37,cs),
(568,-37,o),
(558,-40,o),
(542,-47,cs),
(521,-55,o),
(501,-58,o),
(482,-58,cs),
(446,-58,o),
(399,-26,o),
(362,-15,c),
(418,-9,o),
(488,15,o),
(549,86,cs),
(586,130,o),
(616,191,o),
(633,271,cs),
(641,311,o),
(645,357,o),
(645,408,cs),
(645,524,o),
(618,631,o),
(569,710,cs),
(520,789,o),
(447,838,o),
(356,838,cs),
(256,838,o),
(174,782,o),
(122,698,cs),
(70,615,o),
(41,514,o),
(41,404,cs),
(41,267,o),
(74,166,o),
(124,98,cs),
(174,30,o),
(240,-6,o),
(309,-14,c),
(287,-18,o),
(266,-25,o),
(247,-34,cs),
(218,-47,o),
(203,-59,o),
(203,-68,cs),
(203,-75,o),
(210,-80,o),
(217,-80,cs),
(239,-80,o),
(290,-47,o),
(341,-47,cs),
(383,-47,o),
(429,-90,o),
(483,-90,cs)
);
},
{
closed = 1;
nodes = (
(187,18,o),
(86,163,o),
(86,400,cs),
(86,592,o),
(174,807,o),
(362,807,cs),
(501,807,o),
(600,629,o),
(600,410,cs),
(600,279,o),
(573,183,o),
(527,117,cs),
(481,51,o),
(415,18,o),
(342,18,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
28 4 2 2 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 6 4 6 2 4 104 0 5 1 3 1 5 3 104 0 6 0 4 1 6 4 91 0 1 0 3 1 3 87 0 7 7 0 83 0 0 0 20 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 2 6 4 6 2 4 104 0 5 1 3 1 5 3 104 0 0 0 7 6 0 7 91 0 6 0 4 1 6 4 91 0 1 5 3 1 79 0 1 1 3 83 0 3 1 3 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
40 38 35 35 37 36 47 47 8 23
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = Q;
unicode = 81;
},
{
glyphname = R;
kernLeft = B;
kernRight = R;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(663,-44,o),
(711,-48,o),
(711,-8,cs),
(711,15,o),
(696,22,o),
(661,22,cs),
(553,22,l),
(512,68,o),
(451,153,o),
(411,214,cs),
(385,251,o),
(360,290,o),
(335,330,c),
(497,349,o),
(636,430,o),
(636,594,cs),
(636,760,o),
(464,821,o),
(339,821,cs),
(217,821,o),
(170,818,o),
(64,818,cs),
(35,818,o),
(25,800,o),
(25,785,cs),
(25,765,o),
(41,753,o),
(72,749,cs),
(109,744,o),
(130,733,o),
(133,685,cs),
(136,564,o),
(139,529,o),
(139,412,cs),
(139,361,o),
(139,311,o),
(138,260,cs),
(137,209,o),
(137,159,o),
(137,109,cs),
(137,72,o),
(115,65,o),
(89,62,cs),
(64,59,o),
(47,55,o),
(38,50,cs),
(29,45,o),
(25,39,o),
(25,31,cs),
(25,10,o),
(30,0,o),
(69,0,cs),
(280,0,ls),
(335,0,o),
(347,14,o),
(347,33,cs),
(347,60,o),
(321,63,o),
(296,63,cs),
(226,63,l),
(226,325,l),
(236,325,l),
(348,163,l),
(348,163,l),
(414,66,o),
(490,-44,o),
(510,-44,cs)
);
},
{
closed = 1;
nodes = (
(261,411,o),
(244,411,o),
(231,414,c),
(231,732,l),
(246,735,o),
(275,739,o),
(303,739,cs),
(377,739,o),
(540,714,o),
(540,588,cs),
(540,442,o),
(386,411,o),
(274,411,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
9 8 2 1 0 71 1 2 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 2 0 1 2 104 0 2 3 0 2 3 102 0 6 0 7 6 7 87 0 0 0 5 83 0 5 5 12 67 0 3 3 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 2 0 1 2 104 0 2 3 0 2 3 102 0 6 0 7 6 7 87 0 0 0 5 83 0 5 5 14 67 0 3 3 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
88 85 80 78 62 55 54 33 20 52 36 8 20
CALL[ ]	/* CallFunction */";
};
width = 715;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(633,-44,o),
(714,-44,o),
(714,-18,cs),
(714,3,o),
(699,6,o),
(668,6,cs),
(545,6,l),
(497,61,o),
(437,141,o),
(390,212,cs),
(363,253,o),
(335,295,o),
(308,338,c),
(466,351,o),
(616,422,o),
(616,594,cs),
(616,760,o),
(444,821,o),
(319,821,cs),
(195,821,o),
(176,818,o),
(71,818,cs),
(58,818,o),
(42,814,o),
(42,799,cs),
(42,780,o),
(53,770,o),
(74,770,cs),
(107,770,o),
(134,766,o),
(134,735,cs),
(134,680,o),
(135,627,o),
(137,574,cs),
(139,521,o),
(140,467,o),
(140,412,cs),
(140,359,o),
(140,307,o),
(139,254,cs),
(138,201,o),
(138,149,o),
(138,97,cs),
(138,55,o),
(112,48,o),
(91,48,cs),
(69,48,o),
(55,46,o),
(49,43,cs),
(42,39,o),
(39,34,o),
(39,27,cs),
(39,20,o),
(41,13,o),
(46,8,cs),
(51,3,o),
(63,0,o),
(82,0,cs),
(269,0,ls),
(298,0,o),
(317,2,o),
(326,7,cs),
(334,12,o),
(338,18,o),
(338,25,cs),
(338,48,o),
(316,51,o),
(291,51,cs),
(211,51,l),
(211,338,l),
(212,337,o),
(213,337,o),
(214,337,cs),
(222,337,l),
(222,337,l),
(272,273,o),
(331,183,o),
(391,99,cs),
(450,14,o),
(495,-44,o),
(512,-44,cs)
);
},
{
closed = 1;
nodes = (
(251,403,o),
(237,405,o),
(211,405,c),
(211,750,l),
(218,751,o),
(225,752,o),
(233,753,cs),
(246,756,o),
(264,757,o),
(283,757,cs),
(321,757,o),
(383,751,o),
(441,727,cs),
(498,703,o),
(541,656,o),
(541,588,cs),
(541,434,o),
(374,403,o),
(253,403,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
12 1 1 0 74 25 2 4 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 0 8 1 8 0 96 3 2 2 1 4 8 1 4 102 12 1 4 5 8 4 5 102 0 10 0 11 10 11 87 0 8 8 9 83 0 9 9 12 67 7 1 5 5 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 0 8 1 8 0 96 3 2 2 1 4 8 1 4 102 12 1 4 5 8 4 5 102 0 10 0 11 10 11 87 0 8 8 9 83 0 9 9 14 67 7 1 5 5 6 84 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
24 23 89 86 81 79 65 58 55 53 41 39 35 32 28 26 23 95 24 95 33 17 21 38 13 19
CALL[ ]	/* CallFunction */";
};
width = 691;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(606,-44,o),
(676,-50,o),
(676,-28,cs),
(676,-21,o),
(672,-17,o),
(665,-16,cs),
(657,-15,o),
(645,-14,o),
(630,-14,cs),
(534,-14,l),
(485,37,o),
(407,144,o),
(361,214,cs),
(330,259,o),
(300,305,o),
(270,352,c),
(430,352,o),
(588,415,o),
(588,594,cs),
(588,760,o),
(416,821,o),
(291,821,cs),
(168,821,o),
(159,818,o),
(53,818,cs),
(47,818,o),
(24,819,o),
(24,805,cs),
(24,789,o),
(45,789,o),
(56,789,cs),
(109,789,o),
(136,790,o),
(136,747,cs),
(136,690,o),
(137,635,o),
(139,580,cs),
(141,525,o),
(142,469,o),
(142,412,cs),
(142,355,o),
(142,299,o),
(141,244,cs),
(140,189,o),
(140,133,o),
(140,77,cs),
(140,34,o),
(108,28,o),
(73,28,cs),
(51,28,o),
(37,27,o),
(31,24,cs),
(24,21,o),
(21,18,o),
(21,14,cs),
(21,11,o),
(23,8,o),
(28,5,cs),
(33,2,o),
(45,0,o),
(64,0,cs),
(236,0,ls),
(284,0,o),
(303,-3,o),
(303,12,cs),
(303,28,o),
(283,31,o),
(258,31,cs),
(183,31,l),
(183,353,l),
(185,352,o),
(187,352,o),
(190,352,cs),
(213,352,l),
(262,290,o),
(332,186,o),
(389,104,cs),
(450,16,o),
(497,-44,o),
(514,-44,cs)
);
},
{
closed = 1;
nodes = (
(223,388,o),
(209,390,o),
(183,390,c),
(183,780,l),
(190,781,o),
(197,782,o),
(205,783,cs),
(218,786,o),
(236,787,o),
(255,787,cs),
(297,787,o),
(367,780,o),
(431,752,cs),
(495,723,o),
(543,669,o),
(543,588,cs),
(543,422,o),
(356,388,o),
(225,388,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 1 0 25 1 4 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
3 2 2 1 10 13 2 4 5 1 4 91 0 11 0 12 11 12 87 8 1 0 0 9 83 0 9 9 12 67 7 1 5 5 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
3 2 2 1 10 13 2 4 5 1 4 91 0 11 0 12 11 12 87 8 1 0 0 9 83 0 9 9 14 67 7 1 5 5 6 84 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
24 23 98 95 90 88 81 80 72 64 59 56 43 41 37 33 28 26 23 104 24 104 33 17 21 38 14 19
CALL[ ]	/* CallFunction */";
};
width = 657;
}
);
note = R;
unicode = 82;
},
{
glyphname = Racute;
kernLeft = B;
kernRight = R;
lastChange = "2024-06-14 09:00:00 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(673,-44,o),
(721,-48,o),
(721,-8,cs),
(721,15,o),
(706,22,o),
(671,22,cs),
(563,22,l),
(522,68,o),
(461,153,o),
(421,214,cs),
(395,251,o),
(370,290,o),
(345,330,c),
(507,349,o),
(646,430,o),
(646,594,cs),
(646,760,o),
(474,821,o),
(349,821,cs),
(227,821,o),
(180,818,o),
(74,818,cs),
(45,818,o),
(35,800,o),
(35,785,cs),
(35,765,o),
(51,753,o),
(82,749,cs),
(119,744,o),
(140,733,o),
(143,685,cs),
(146,564,o),
(149,529,o),
(149,412,cs),
(149,361,o),
(149,311,o),
(148,260,cs),
(147,209,o),
(147,159,o),
(147,109,cs),
(147,72,o),
(125,65,o),
(99,62,cs),
(74,59,o),
(57,55,o),
(48,50,cs),
(39,45,o),
(35,39,o),
(35,31,cs),
(35,10,o),
(40,0,o),
(79,0,cs),
(290,0,ls),
(345,0,o),
(357,14,o),
(357,33,cs),
(357,60,o),
(331,63,o),
(306,63,cs),
(236,63,l),
(236,325,l),
(246,325,l),
(358,163,l),
(358,163,l),
(424,66,o),
(500,-44,o),
(520,-44,cs)
);
},
{
closed = 1;
nodes = (
(271,411,o),
(254,411,o),
(241,414,c),
(241,732,l),
(256,735,o),
(285,739,o),
(313,739,cs),
(387,739,o),
(550,714,o),
(550,588,cs),
(550,442,o),
(396,411,o),
(284,411,cs)
);
},
{
closed = 1;
nodes = (
(319,841,o),
(406,897,o),
(406,936,cs),
(406,953,o),
(391,972,o),
(364,972,cs),
(326,972,o),
(251,899,o),
(251,872,cs),
(251,856,o),
(266,841,o),
(286,841,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
25 24 2 3 2 87 1 4 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 1 0 1 106 0 0 7 0 106 0 3 2 4 2 3 4 104 0 4 5 2 4 5 102 0 8 0 9 8 9 87 0 2 2 7 83 0 7 7 12 67 0 5 5 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 1 0 1 106 0 0 7 0 106 0 3 2 4 2 3 4 104 0 4 5 2 4 5 102 0 8 0 9 8 9 87 0 2 2 7 83 0 7 7 14 67 0 5 5 6 84 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
104 101 96 94 78 71 54 33 20 52 38 38 36 10 22
CALL[ ]	/* CallFunction */";
};
width = 715;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(633,-44,o),
(714,-44,o),
(714,-18,cs),
(714,3,o),
(699,6,o),
(668,6,cs),
(545,6,l),
(497,61,o),
(437,141,o),
(390,212,cs),
(363,253,o),
(335,295,o),
(308,338,c),
(466,351,o),
(616,422,o),
(616,594,cs),
(616,760,o),
(444,821,o),
(319,821,cs),
(195,821,o),
(176,818,o),
(71,818,cs),
(58,818,o),
(42,814,o),
(42,799,cs),
(42,780,o),
(53,770,o),
(74,770,cs),
(107,770,o),
(134,766,o),
(134,735,cs),
(134,680,o),
(135,627,o),
(137,574,cs),
(139,521,o),
(140,467,o),
(140,412,cs),
(140,359,o),
(140,307,o),
(139,254,cs),
(138,201,o),
(138,149,o),
(138,97,cs),
(138,55,o),
(112,48,o),
(91,48,cs),
(69,48,o),
(55,46,o),
(49,43,cs),
(42,39,o),
(39,34,o),
(39,27,cs),
(39,20,o),
(41,13,o),
(46,8,cs),
(51,3,o),
(63,0,o),
(82,0,cs),
(269,0,ls),
(298,0,o),
(317,2,o),
(326,7,cs),
(334,12,o),
(338,18,o),
(338,25,cs),
(338,48,o),
(316,51,o),
(291,51,cs),
(211,51,l),
(211,338,l),
(212,337,o),
(213,337,o),
(214,337,cs),
(222,337,l),
(222,337,l),
(272,273,o),
(331,183,o),
(391,99,cs),
(450,14,o),
(495,-44,o),
(512,-44,cs)
);
},
{
closed = 1;
nodes = (
(251,403,o),
(237,405,o),
(211,405,c),
(211,750,l),
(218,751,o),
(225,752,o),
(233,753,cs),
(246,756,o),
(264,757,o),
(283,757,cs),
(321,757,o),
(383,751,o),
(441,727,cs),
(498,703,o),
(541,656,o),
(541,588,cs),
(541,434,o),
(374,403,o),
(253,403,cs)
);
},
{
closed = 1;
nodes = (
(293,854,o),
(381,908,o),
(381,941,cs),
(381,960,o),
(369,972,o),
(349,972,cs),
(320,972,o),
(243,904,o),
(243,877,cs),
(243,864,o),
(252,854,o),
(267,854,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
28 1 3 2 90 41 2 6 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 1 0 1 106 0 0 11 0 106 0 2 10 3 10 2 96 5 4 2 3 6 10 3 6 102 14 1 6 7 10 6 7 102 0 12 0 13 12 13 87 0 10 10 11 83 0 11 11 12 67 9 1 7 7 8 84 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 1 0 1 106 0 0 11 0 106 0 2 10 3 10 2 96 5 4 2 3 6 10 3 6 102 14 1 6 7 10 6 7 102 0 12 0 13 12 13 87 0 10 10 11 83 0 11 11 14 67 9 1 7 7 8 84 0 8 8 13 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
40 39 105 102 97 95 81 74 71 69 57 55 51 48 44 42 39 111 40 111 33 17 21 40 38 36 15 21
CALL[ ]	/* CallFunction */";
};
width = 691;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(606,-44,o),
(676,-50,o),
(676,-28,cs),
(676,-21,o),
(672,-17,o),
(665,-16,cs),
(657,-15,o),
(645,-14,o),
(630,-14,cs),
(534,-14,l),
(485,37,o),
(407,144,o),
(361,214,cs),
(330,259,o),
(300,305,o),
(270,352,c),
(430,352,o),
(588,415,o),
(588,594,cs),
(588,760,o),
(416,821,o),
(291,821,cs),
(168,821,o),
(159,818,o),
(53,818,cs),
(47,818,o),
(24,819,o),
(24,805,cs),
(24,789,o),
(45,789,o),
(56,789,cs),
(109,789,o),
(136,790,o),
(136,747,cs),
(136,690,o),
(137,635,o),
(139,580,cs),
(141,525,o),
(142,469,o),
(142,412,cs),
(142,355,o),
(142,299,o),
(141,244,cs),
(140,189,o),
(140,133,o),
(140,77,cs),
(140,34,o),
(108,28,o),
(73,28,cs),
(51,28,o),
(37,27,o),
(31,24,cs),
(24,21,o),
(21,18,o),
(21,14,cs),
(21,11,o),
(23,8,o),
(28,5,cs),
(33,2,o),
(45,0,o),
(64,0,cs),
(236,0,ls),
(284,0,o),
(303,-3,o),
(303,12,cs),
(303,28,o),
(283,31,o),
(258,31,cs),
(183,31,l),
(183,353,l),
(185,352,o),
(187,352,o),
(190,352,cs),
(213,352,l),
(262,290,o),
(332,186,o),
(389,104,cs),
(450,16,o),
(497,-44,o),
(514,-44,cs)
);
},
{
closed = 1;
nodes = (
(223,388,o),
(209,390,o),
(183,390,c),
(183,780,l),
(190,781,o),
(197,782,o),
(205,783,cs),
(218,786,o),
(236,787,o),
(255,787,cs),
(297,787,o),
(367,780,o),
(431,752,cs),
(495,723,o),
(543,669,o),
(543,588,cs),
(543,422,o),
(356,388,o),
(225,388,cs)
);
},
{
closed = 1;
nodes = (
(256,875,o),
(346,928,o),
(346,950,cs),
(346,969,o),
(338,972,o),
(327,972,cs),
(307,972,o),
(232,911,o),
(232,886,cs),
(232,879,o),
(235,875,o),
(240,875,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
27 1 3 2 40 1 6 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 1 0 1 106 0 0 11 0 106 5 4 2 3 12 15 2 6 7 3 6 91 0 13 0 14 13 14 87 10 1 2 2 11 83 0 11 11 12 67 9 1 7 7 8 84 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 1 0 1 106 0 0 11 0 106 5 4 2 3 12 15 2 6 7 3 6 91 0 13 0 14 13 14 87 10 1 2 2 11 83 0 11 11 14 67 9 1 7 7 8 84 0 8 8 13 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
39 38 113 110 105 103 96 95 87 79 74 71 58 56 52 48 43 41 38 119 39 119 33 17 21 40 37 36 16 21
CALL[ ]	/* CallFunction */";
};
width = 657;
}
);
note = Racute;
unicode = 340;
},
{
glyphname = Rcaron;
kernLeft = B;
kernRight = R;
lastChange = "2024-06-14 09:00:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(673,-44,o),
(721,-48,o),
(721,-8,cs),
(721,15,o),
(706,22,o),
(671,22,cs),
(563,22,l),
(522,68,o),
(461,153,o),
(421,214,cs),
(395,251,o),
(370,290,o),
(345,330,c),
(507,349,o),
(646,430,o),
(646,594,cs),
(646,760,o),
(474,821,o),
(349,821,cs),
(227,821,o),
(180,818,o),
(74,818,cs),
(45,818,o),
(35,800,o),
(35,785,cs),
(35,765,o),
(51,753,o),
(82,749,cs),
(119,744,o),
(140,733,o),
(143,685,cs),
(146,564,o),
(149,529,o),
(149,412,cs),
(149,361,o),
(149,311,o),
(148,260,cs),
(147,209,o),
(147,159,o),
(147,109,cs),
(147,72,o),
(125,65,o),
(99,62,cs),
(74,59,o),
(57,55,o),
(48,50,cs),
(39,45,o),
(35,39,o),
(35,31,cs),
(35,10,o),
(40,0,o),
(79,0,cs),
(290,0,ls),
(345,0,o),
(357,14,o),
(357,33,cs),
(357,60,o),
(331,63,o),
(306,63,cs),
(236,63,l),
(236,325,l),
(246,325,l),
(358,163,l),
(358,163,l),
(424,66,o),
(500,-44,o),
(520,-44,cs)
);
},
{
closed = 1;
nodes = (
(271,411,o),
(254,411,o),
(241,414,c),
(241,732,l),
(256,735,o),
(285,739,o),
(313,739,cs),
(387,739,o),
(550,714,o),
(550,588,cs),
(550,442,o),
(396,411,o),
(284,411,cs)
);
},
{
closed = 1;
nodes = (
(368,830,o),
(476,909,o),
(476,951,cs),
(476,960,o),
(474,972,o),
(463,972,cs),
(457,972,o),
(402,960,o),
(343,922,c),
(303,948,o),
(241,972,o),
(224,972,cs),
(216,972,o),
(211,965,o),
(211,958,cs),
(211,931,o),
(239,901,o),
(270,875,cs),
(297,852,o),
(332,830,o),
(343,830,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
21 1 1 0 35 34 2 4 3 97 1 5 4 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
2 11 2 0 1 0 106 0 1 8 1 106 0 4 3 5 3 4 5 104 0 5 6 3 5 6 102 0 9 0 10 9 10 87 0 3 3 8 83 0 8 8 12 67 0 6 6 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
2 11 2 0 1 0 106 0 1 8 1 106 0 4 3 5 3 4 5 104 0 5 6 3 5 6 102 0 9 0 10 9 10 87 0 3 3 8 83 0 8 8 14 67 0 6 6 7 84 0 7 7 13 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 114 111 106 104 88 81 56 53 47 45 44 43 39 36 32 30 17 15 9 7 0 25 1 25 12 15
CALL[ ]	/* CallFunction */";
};
width = 715;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(633,-44,o),
(714,-44,o),
(714,-18,cs),
(714,3,o),
(699,6,o),
(668,6,cs),
(545,6,l),
(497,61,o),
(437,141,o),
(390,212,cs),
(363,253,o),
(335,295,o),
(308,338,c),
(466,351,o),
(616,422,o),
(616,594,cs),
(616,760,o),
(444,821,o),
(319,821,cs),
(195,821,o),
(176,818,o),
(71,818,cs),
(58,818,o),
(42,814,o),
(42,799,cs),
(42,780,o),
(53,770,o),
(74,770,cs),
(107,770,o),
(134,766,o),
(134,735,cs),
(134,680,o),
(135,627,o),
(137,574,cs),
(139,521,o),
(140,467,o),
(140,412,cs),
(140,359,o),
(140,307,o),
(139,254,cs),
(138,201,o),
(138,149,o),
(138,97,cs),
(138,55,o),
(112,48,o),
(91,48,cs),
(69,48,o),
(55,46,o),
(49,43,cs),
(42,39,o),
(39,34,o),
(39,27,cs),
(39,20,o),
(41,13,o),
(46,8,cs),
(51,3,o),
(63,0,o),
(82,0,cs),
(269,0,ls),
(298,0,o),
(317,2,o),
(326,7,cs),
(334,12,o),
(338,18,o),
(338,25,cs),
(338,48,o),
(316,51,o),
(291,51,cs),
(211,51,l),
(211,338,l),
(212,337,o),
(213,337,o),
(214,337,cs),
(222,337,l),
(222,337,l),
(272,273,o),
(331,183,o),
(391,99,cs),
(450,14,o),
(495,-44,o),
(512,-44,cs)
);
},
{
closed = 1;
nodes = (
(251,403,o),
(237,405,o),
(211,405,c),
(211,750,l),
(218,751,o),
(225,752,o),
(233,753,cs),
(246,756,o),
(264,757,o),
(283,757,cs),
(321,757,o),
(383,751,o),
(441,727,cs),
(498,703,o),
(541,656,o),
(541,588,cs),
(541,434,o),
(374,403,o),
(253,403,cs)
);
},
{
closed = 1;
nodes = (
(350,847,o),
(456,919,o),
(456,955,cs),
(456,964,o),
(453,972,o),
(445,972,cs),
(437,972,o),
(389,959,o),
(325,921,c),
(285,945,o),
(224,972,o),
(206,972,cs),
(199,972,o),
(195,968,o),
(195,959,cs),
(195,918,o),
(303,847,o),
(325,847,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
20 1 1 0 37 1 4 3 99 50 2 7 4 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
2 15 2 0 1 0 106 0 1 12 1 106 0 3 11 4 11 3 96 6 5 2 4 7 11 4 7 102 16 1 7 8 11 7 8 102 0 13 0 14 13 14 87 0 11 11 12 83 0 12 12 12 67 10 1 8 8 9 84 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
2 15 2 0 1 0 106 0 1 12 1 106 0 3 11 4 11 3 96 6 5 2 4 7 11 4 7 102 16 1 7 8 11 7 8 102 0 13 0 14 13 14 87 0 11 11 12 83 0 12 12 14 67 10 1 8 8 9 84 0 9 9 13 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
49 48 1 0 114 111 106 104 90 83 80 78 66 64 60 57 53 51 48 120 49 120 44 42 41 40 39 38 33 31 16 14 9 7 0 24 1 24 17 15
CALL[ ]	/* CallFunction */";
};
width = 691;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(606,-44,o),
(676,-50,o),
(676,-28,cs),
(676,-21,o),
(672,-17,o),
(665,-16,cs),
(657,-15,o),
(645,-14,o),
(630,-14,cs),
(534,-14,l),
(485,37,o),
(407,144,o),
(361,214,cs),
(330,259,o),
(300,305,o),
(270,352,c),
(430,352,o),
(588,415,o),
(588,594,cs),
(588,760,o),
(416,821,o),
(291,821,cs),
(168,821,o),
(159,818,o),
(53,818,cs),
(47,818,o),
(24,819,o),
(24,805,cs),
(24,789,o),
(45,789,o),
(56,789,cs),
(109,789,o),
(136,790,o),
(136,747,cs),
(136,690,o),
(137,635,o),
(139,580,cs),
(141,525,o),
(142,469,o),
(142,412,cs),
(142,355,o),
(142,299,o),
(141,244,cs),
(140,189,o),
(140,133,o),
(140,77,cs),
(140,34,o),
(108,28,o),
(73,28,cs),
(51,28,o),
(37,27,o),
(31,24,cs),
(24,21,o),
(21,18,o),
(21,14,cs),
(21,11,o),
(23,8,o),
(28,5,cs),
(33,2,o),
(45,0,o),
(64,0,cs),
(236,0,ls),
(284,0,o),
(303,-3,o),
(303,12,cs),
(303,28,o),
(283,31,o),
(258,31,cs),
(183,31,l),
(183,353,l),
(185,352,o),
(187,352,o),
(190,352,cs),
(213,352,l),
(262,290,o),
(332,186,o),
(389,104,cs),
(450,16,o),
(497,-44,o),
(514,-44,cs)
);
},
{
closed = 1;
nodes = (
(223,388,o),
(209,390,o),
(183,390,c),
(183,780,l),
(190,781,o),
(197,782,o),
(205,783,cs),
(218,786,o),
(236,787,o),
(255,787,cs),
(297,787,o),
(367,780,o),
(431,752,cs),
(495,723,o),
(543,669,o),
(543,588,cs),
(543,422,o),
(356,388,o),
(225,388,cs)
);
},
{
closed = 1;
nodes = (
(322,876,o),
(427,936,o),
(427,961,cs),
(427,968,o),
(424,972,o),
(419,972,cs),
(412,972,o),
(364,954,o),
(299,920,c),
(262,940,o),
(193,972,o),
(180,972,cs),
(175,972,o),
(172,968,o),
(172,961,cs),
(172,937,o),
(275,876,o),
(299,876,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
19 1 1 0 36 1 4 3 49 1 7 4 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
2 16 2 0 1 0 106 0 1 12 1 106 6 5 2 4 13 17 2 7 8 4 7 91 0 14 0 15 14 15 87 11 1 3 3 12 83 0 12 12 12 67 10 1 8 8 9 84 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
2 16 2 0 1 0 106 0 1 12 1 106 6 5 2 4 13 17 2 7 8 4 7 91 0 14 0 15 14 15 87 11 1 3 3 12 83 0 12 12 14 67 10 1 8 8 9 84 0 9 9 13 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
48 47 1 0 122 119 114 112 105 104 96 88 83 80 67 65 61 57 52 50 47 128 48 128 43 41 40 39 38 37 32 30 15 13 8 6 0 23 1 23 18 15
CALL[ ]	/* CallFunction */";
};
width = 657;
}
);
note = Rcaron;
unicode = 344;
},
{
glyphname = Rcommaaccent;
kernLeft = B;
kernRight = R;
lastChange = "2024-06-14 09:00:15 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(673,-44,o),
(721,-48,o),
(721,-8,cs),
(721,15,o),
(706,22,o),
(671,22,cs),
(563,22,l),
(522,68,o),
(461,153,o),
(421,214,cs),
(395,251,o),
(370,290,o),
(345,330,c),
(507,349,o),
(646,430,o),
(646,594,cs),
(646,760,o),
(474,821,o),
(349,821,cs),
(227,821,o),
(180,818,o),
(74,818,cs),
(45,818,o),
(35,800,o),
(35,785,cs),
(35,765,o),
(51,753,o),
(82,749,cs),
(119,744,o),
(140,733,o),
(143,685,cs),
(146,564,o),
(149,529,o),
(149,412,cs),
(149,361,o),
(149,311,o),
(148,260,cs),
(147,209,o),
(147,159,o),
(147,109,cs),
(147,72,o),
(125,65,o),
(99,62,cs),
(74,59,o),
(57,55,o),
(48,50,cs),
(39,45,o),
(35,39,o),
(35,31,cs),
(35,10,o),
(40,0,o),
(79,0,cs),
(290,0,ls),
(345,0,o),
(357,14,o),
(357,33,cs),
(357,60,o),
(331,63,o),
(306,63,cs),
(236,63,l),
(236,325,l),
(246,325,l),
(358,163,l),
(358,163,l),
(424,66,o),
(500,-44,o),
(520,-44,cs)
);
},
{
closed = 1;
nodes = (
(367,-244,o),
(430,-202,o),
(430,-125,cs),
(430,-68,o),
(394,-44,o),
(362,-44,cs),
(318,-44,o),
(302,-74,o),
(302,-102,cs),
(302,-133,o),
(338,-135,o),
(338,-152,cs),
(338,-172,o),
(336,-187,o),
(331,-196,cs),
(326,-206,o),
(323,-214,o),
(323,-221,cs),
(323,-244,o),
(342,-244,o),
(349,-244,cs)
);
},
{
closed = 1;
nodes = (
(271,411,o),
(254,411,o),
(241,414,c),
(241,732,l),
(256,735,o),
(285,739,o),
(313,739,cs),
(387,739,o),
(550,714,o),
(550,588,cs),
(550,442,o),
(396,411,o),
(284,411,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
9 8 2 1 0 71 1 2 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 1 0 2 0 1 2 104 0 2 3 0 2 3 102 0 6 0 7 8 6 7 91 0 0 0 5 83 0 5 5 12 67 0 3 3 4 84 0 4 4 13 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 2 0 1 2 104 0 2 3 0 2 3 102 0 6 0 7 8 6 7 91 0 8 0 9 8 9 87 0 0 0 5 83 0 5 5 12 67 0 3 3 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 2 0 1 2 104 0 2 3 0 2 3 102 0 6 0 7 8 6 7 91 0 8 0 9 8 9 87 0 0 0 5 83 0 5 5 14 67 0 3 3 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
105 103 97 95 88 85 80 78 62 55 54 33 20 52 36 10 20
CALL[ ]	/* CallFunction */";
};
width = 715;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(633,-44,o),
(714,-44,o),
(714,-18,cs),
(714,3,o),
(699,6,o),
(668,6,cs),
(545,6,l),
(497,61,o),
(437,141,o),
(390,212,cs),
(363,253,o),
(335,295,o),
(308,338,c),
(466,351,o),
(616,422,o),
(616,594,cs),
(616,760,o),
(444,821,o),
(319,821,cs),
(195,821,o),
(176,818,o),
(71,818,cs),
(58,818,o),
(42,814,o),
(42,799,cs),
(42,780,o),
(53,770,o),
(74,770,cs),
(107,770,o),
(134,766,o),
(134,735,cs),
(134,680,o),
(135,627,o),
(137,574,cs),
(139,521,o),
(140,467,o),
(140,412,cs),
(140,359,o),
(140,307,o),
(139,254,cs),
(138,201,o),
(138,149,o),
(138,97,cs),
(138,55,o),
(112,48,o),
(91,48,cs),
(69,48,o),
(55,46,o),
(49,43,cs),
(42,39,o),
(39,34,o),
(39,27,cs),
(39,20,o),
(41,13,o),
(46,8,cs),
(51,3,o),
(63,0,o),
(82,0,cs),
(269,0,ls),
(298,0,o),
(317,2,o),
(326,7,cs),
(334,12,o),
(338,18,o),
(338,25,cs),
(338,48,o),
(316,51,o),
(291,51,cs),
(211,51,l),
(211,338,l),
(212,337,o),
(213,337,o),
(214,337,cs),
(222,337,l),
(222,337,l),
(272,273,o),
(331,183,o),
(391,99,cs),
(450,14,o),
(495,-44,o),
(512,-44,cs)
);
},
{
closed = 1;
nodes = (
(369,-227,o),
(410,-177,o),
(410,-123,cs),
(410,-70,o),
(380,-51,o),
(353,-51,cs),
(316,-51,o),
(301,-76,o),
(301,-100,cs),
(301,-132,o),
(337,-131,o),
(337,-148,cs),
(337,-165,o),
(335,-178,o),
(331,-186,cs),
(326,-195,o),
(324,-202,o),
(324,-208,cs),
(324,-225,o),
(338,-227,o),
(345,-227,cs)
);
},
{
closed = 1;
nodes = (
(251,403,o),
(237,405,o),
(211,405,c),
(211,750,l),
(218,751,o),
(225,752,o),
(233,753,cs),
(246,756,o),
(264,757,o),
(283,757,cs),
(321,757,o),
(383,751,o),
(441,727,cs),
(498,703,o),
(541,656,o),
(541,588,cs),
(541,434,o),
(374,403,o),
(253,403,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
13 1 1 0 75 26 2 4 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 0 8 1 8 0 96 3 2 2 1 4 8 1 4 102 14 1 4 5 8 4 5 102 0 10 0 11 12 10 11 91 0 8 8 9 83 0 9 9 12 67 7 1 5 5 6 84 0 6 6 13 67 0 12 12 13 83 0 13 13 25 13 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 0 8 1 8 0 96 3 2 2 1 4 8 1 4 102 14 1 4 5 8 4 5 102 0 10 0 11 12 10 11 91 0 12 0 13 12 13 87 0 8 8 9 83 0 9 9 12 67 7 1 5 5 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 0 8 1 8 0 96 3 2 2 1 4 8 1 4 102 14 1 4 5 8 4 5 102 0 10 0 11 12 10 11 91 0 12 0 13 12 13 87 0 8 8 9 83 0 9 9 14 67 7 1 5 5 6 84 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
25 24 109 107 101 99 90 87 82 80 66 59 56 54 42 40 36 33 29 27 24 96 25 96 33 17 21 39 15 30
CALL[ ]	/* CallFunction */";
};
width = 691;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(606,-44,o),
(676,-50,o),
(676,-28,cs),
(676,-21,o),
(672,-17,o),
(665,-16,cs),
(657,-15,o),
(645,-14,o),
(630,-14,cs),
(534,-14,l),
(485,37,o),
(407,144,o),
(361,214,cs),
(330,259,o),
(300,305,o),
(270,352,c),
(430,352,o),
(588,415,o),
(588,594,cs),
(588,760,o),
(416,821,o),
(291,821,cs),
(168,821,o),
(159,818,o),
(53,818,cs),
(47,818,o),
(24,819,o),
(24,805,cs),
(24,789,o),
(45,789,o),
(56,789,cs),
(109,789,o),
(136,790,o),
(136,747,cs),
(136,690,o),
(137,635,o),
(139,580,cs),
(141,525,o),
(142,469,o),
(142,412,cs),
(142,355,o),
(142,299,o),
(141,244,cs),
(140,189,o),
(140,133,o),
(140,77,cs),
(140,34,o),
(108,28,o),
(73,28,cs),
(51,28,o),
(37,27,o),
(31,24,cs),
(24,21,o),
(21,18,o),
(21,14,cs),
(21,11,o),
(23,8,o),
(28,5,cs),
(33,2,o),
(45,0,o),
(64,0,cs),
(236,0,ls),
(284,0,o),
(303,-3,o),
(303,12,cs),
(303,28,o),
(283,31,o),
(258,31,cs),
(183,31,l),
(183,353,l),
(185,352,o),
(187,352,o),
(190,352,cs),
(213,352,l),
(262,290,o),
(332,186,o),
(389,104,cs),
(450,16,o),
(497,-44,o),
(514,-44,cs)
);
},
{
closed = 1;
nodes = (
(366,-202,o),
(382,-152,o),
(382,-123,cs),
(382,-78,o),
(360,-66,o),
(340,-66,cs),
(313,-66,o),
(300,-83,o),
(300,-100,cs),
(300,-132,o),
(336,-127,o),
(336,-144,cs),
(336,-151,o),
(334,-159,o),
(331,-168,cs),
(327,-178,o),
(325,-185,o),
(325,-190,cs),
(325,-197,o),
(332,-202,o),
(339,-202,cs)
);
},
{
closed = 1;
nodes = (
(223,388,o),
(209,390,o),
(183,390,c),
(183,780,l),
(190,781,o),
(197,782,o),
(205,783,cs),
(218,786,o),
(236,787,o),
(255,787,cs),
(297,787,o),
(367,780,o),
(431,752,cs),
(495,723,o),
(543,669,o),
(543,588,cs),
(543,422,o),
(356,388,o),
(225,388,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 1 0 25 1 4 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
3 2 2 1 10 15 2 4 5 1 4 91 0 11 0 12 13 11 12 91 8 1 0 0 9 83 0 9 9 12 67 7 1 5 5 6 84 0 6 6 13 67 0 13 13 14 83 0 14 14 17 14 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
3 2 2 1 10 15 2 4 5 1 4 91 0 11 0 12 13 11 12 91 0 13 0 14 13 14 87 8 1 0 0 9 83 0 9 9 12 67 7 1 5 5 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
3 2 2 1 10 15 2 4 5 1 4 91 0 11 0 12 13 11 12 91 0 13 0 14 13 14 87 8 1 0 0 9 83 0 9 9 14 67 7 1 5 5 6 84 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
24 23 117 115 109 107 98 95 90 88 81 80 72 64 59 56 43 41 37 33 28 26 23 104 24 104 33 17 21 38 16 19
CALL[ ]	/* CallFunction */";
};
width = 657;
}
);
note = Rcommaaccent;
unicode = 342;
},
{
glyphname = S;
kernLeft = S;
kernRight = S;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(111,-32,o),
(127,-14,o),
(127,9,cs),
(127,16,o),
(127,24,o),
(127,34,cs),
(126,44,o),
(125,61,o),
(123,85,c),
(175,10,o),
(254,-16,o),
(338,-16,cs),
(444,-16,o),
(555,34,o),
(555,149,cs),
(555,226,o),
(503,284,o),
(437,323,cs),
(369,363,o),
(304,382,o),
(259,402,cs),
(202,426,o),
(146,471,o),
(146,567,cs),
(146,688,o),
(233,759,o),
(316,759,cs),
(407,759,o),
(461,671,o),
(471,551,cs),
(474,524,o),
(476,492,o),
(517,492,cs),
(544,492,o),
(557,503,o),
(557,526,cs),
(557,547,o),
(557,568,o),
(556,590,cs),
(555,611,o),
(555,631,o),
(555,649,cs),
(555,674,o),
(556,700,o),
(557,727,cs),
(558,753,o),
(559,774,o),
(559,791,cs),
(559,809,o),
(556,837,o),
(518,837,cs),
(482,837,o),
(474,815,o),
(474,796,cs),
(474,788,o),
(479,748,o),
(481,713,c),
(446,805,o),
(401,837,o),
(322,837,cs),
(177,837,o),
(55,727,o),
(55,562,cs),
(55,411,o),
(155,354,o),
(240,314,cs),
(341,268,o),
(463,230,o),
(463,154,cs),
(463,105,o),
(413,62,o),
(329,62,cs),
(227,62,o),
(149,133,o),
(135,187,cs),
(130,211,o),
(128,271,o),
(84,271,cs),
(45,271,o),
(44,220,o),
(44,196,cs),
(44,186,o),
(44,173,o),
(45,157,cs),
(46,141,o),
(46,126,o),
(46,113,cs),
(46,67,o),
(42,36,o),
(42,9,cs),
(42,-10,o),
(52,-32,o),
(83,-32,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
53 1 5 6 0 1 2 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 1 0 0 1 0 87 0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 2 2 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 6 5 3 6 79 4 1 3 0 5 1 3 5 91 0 1 0 0 1 0 87 0 2 2 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
109 107 87 85 77 75 64 62 51 49 40 46 37 8 18
CALL[ ]	/* CallFunction */";
};
width = 628;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(103,-26,o),
(113,-7,o),
(113,9,cs),
(111,47,ls),
(110,58,o),
(110,71,o),
(110,85,c),
(144,9,o),
(234,-16,o),
(308,-16,cs),
(412,-16,o),
(556,26,o),
(556,145,cs),
(556,210,o),
(505,260,o),
(439,298,cs),
(358,343,o),
(315,354,o),
(255,381,cs),
(191,410,o),
(125,442,o),
(125,565,cs),
(125,668,o),
(209,777,o),
(320,777,cs),
(404,777,o),
(496,681,o),
(506,557,c),
(506,528,o),
(513,498,o),
(540,498,cs),
(564,498,o),
(576,513,o),
(576,532,cs),
(576,553,o),
(576,573,o),
(575,592,cs),
(574,611,o),
(574,631,o),
(574,652,cs),
(574,676,o),
(575,701,o),
(576,726,cs),
(577,751,o),
(578,775,o),
(578,798,cs),
(578,806,o),
(571,831,o),
(543,831,cs),
(515,831,o),
(509,812,o),
(509,796,cs),
(509,795,o),
(510,785,o),
(511,765,cs),
(512,744,o),
(514,713,o),
(517,671,c),
(477,787,o),
(409,837,o),
(312,837,cs),
(193,837,o),
(54,724,o),
(54,574,cs),
(54,404,o),
(155,355,o),
(243,314,cs),
(313,280,o),
(485,229,o),
(485,145,cs),
(485,82,o),
(394,44,o),
(305,44,cs),
(190,44,o),
(117,108,o),
(117,180,cs),
(117,211,o),
(113,249,o),
(80,249,cs),
(51,249,o),
(46,224,o),
(46,205,cs),
(46,173,o),
(48,140,o),
(48,108,cs),
(48,77,o),
(44,25,o),
(44,7,cs),
(44,-2,o),
(56,-26,o),
(79,-26,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
78 55 2 5 6 0 1 2 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 20 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 1 0 0 1 0 87 0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 20 67 0 2 2 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 0 0 1 0 87 0 2 2 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
106 104 84 82 76 74 62 60 53 51 40 46 37 8 18
CALL[ ]	/* CallFunction */";
};
width = 613;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(81,-16,o),
(87,-8,o),
(87,9,c),
(86,13,o),
(86,17,o),
(86,22,cs),
(86,26,o),
(86,30,o),
(86,35,cs),
(85,40,o),
(85,45,o),
(85,50,cs),
(84,62,o),
(84,76,o),
(84,91,c),
(127,13,o),
(227,-16,o),
(312,-16,cs),
(398,-16,o),
(540,26,o),
(540,145,cs),
(540,201,o),
(490,243,o),
(430,276,cs),
(363,313,o),
(308,328,o),
(259,351,cs),
(180,388,o),
(99,431,o),
(99,565,cs),
(99,688,o),
(196,807,o),
(320,807,cs),
(429,807,o),
(499,712,o),
(510,567,c),
(510,538,o),
(512,508,o),
(531,508,cs),
(548,508,o),
(550,523,o),
(550,542,cs),
(550,563,o),
(550,582,o),
(549,597,cs),
(548,612,o),
(548,631,o),
(548,652,cs),
(548,676,o),
(549,701,o),
(550,726,cs),
(551,751,o),
(552,775,o),
(552,798,cs),
(552,807,o),
(545,821,o),
(532,821,cs),
(519,821,o),
(513,813,o),
(513,796,cs),
(513,795,o),
(514,785,o),
(515,765,cs),
(516,744,o),
(518,713,o),
(521,671,c),
(481,787,o),
(413,837,o),
(316,837,cs),
(197,837,o),
(58,724,o),
(58,574,cs),
(58,412,o),
(157,356,o),
(247,314,cs),
(319,280,o),
(499,230,o),
(499,145,cs),
(499,63,o),
(404,14,o),
(309,14,cs),
(172,14,o),
(91,95,o),
(91,180,cs),
(91,209,o),
(88,239,o),
(69,239,cs),
(52,239,o),
(50,224,o),
(50,205,cs),
(50,173,o),
(52,140,o),
(52,108,cs),
(52,77,o),
(48,25,o),
(48,7,cs),
(48,-2,o),
(55,-16,o),
(68,-16,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
76 56 2 5 6 0 1 2 1 7 1 0 2 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 12 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 3 0 6 5 3 6 91 0 5 5 4 83 0 4 4 14 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
102 100 82 80 74 72 62 60 54 52 38 46 40 8 18
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = S;
unicode = 83;
},
{
glyphname = Sacute;
kernLeft = S;
kernRight = S;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(111,-32,o),
(127,-14,o),
(127,9,cs),
(127,16,o),
(127,24,o),
(127,34,cs),
(126,44,o),
(125,61,o),
(123,85,c),
(175,10,o),
(254,-16,o),
(338,-16,cs),
(444,-16,o),
(555,34,o),
(555,149,cs),
(555,226,o),
(503,284,o),
(437,323,cs),
(369,363,o),
(304,382,o),
(259,402,cs),
(202,426,o),
(146,471,o),
(146,567,cs),
(146,688,o),
(233,759,o),
(316,759,cs),
(407,759,o),
(461,671,o),
(471,551,cs),
(474,524,o),
(476,492,o),
(517,492,cs),
(544,492,o),
(557,503,o),
(557,526,cs),
(557,547,o),
(557,568,o),
(556,590,cs),
(555,611,o),
(555,631,o),
(555,649,cs),
(555,674,o),
(556,700,o),
(557,727,cs),
(558,753,o),
(559,774,o),
(559,791,cs),
(559,809,o),
(556,837,o),
(518,837,cs),
(482,837,o),
(474,815,o),
(474,796,cs),
(474,788,o),
(479,748,o),
(481,713,c),
(446,805,o),
(401,837,o),
(322,837,cs),
(177,837,o),
(55,727,o),
(55,562,cs),
(55,411,o),
(155,354,o),
(240,314,cs),
(341,268,o),
(463,230,o),
(463,154,cs),
(463,105,o),
(413,62,o),
(329,62,cs),
(227,62,o),
(149,133,o),
(135,187,cs),
(130,211,o),
(128,271,o),
(84,271,cs),
(45,271,o),
(44,220,o),
(44,196,cs),
(44,186,o),
(44,173,o),
(45,157,cs),
(46,141,o),
(46,126,o),
(46,113,cs),
(46,67,o),
(42,36,o),
(42,9,cs),
(42,-10,o),
(52,-32,o),
(83,-32,cs)
);
},
{
closed = 1;
nodes = (
(317,841,o),
(404,897,o),
(404,936,cs),
(404,953,o),
(390,972,o),
(363,972,cs),
(325,972,o),
(249,899,o),
(249,872,cs),
(249,856,o),
(264,841,o),
(284,841,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
69 1 7 8 16 1 4 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 1 0 1 106 0 0 5 0 106 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 67 0 4 4 9 84 0 9 9 21 67 0 3 3 2 83 0 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 1 106 0 0 5 0 106 0 3 0 2 3 2 87 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 67 0 4 4 9 84 0 9 9 21 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 1 106 0 0 5 0 106 0 8 7 5 8 79 6 1 5 0 7 3 5 7 91 0 3 0 2 3 2 87 0 4 4 9 84 0 9 9 21 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
125 123 103 101 93 91 80 78 67 65 40 46 39 38 36 10 20
CALL[ ]	/* CallFunction */";
};
width = 628;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(103,-26,o),
(113,-7,o),
(113,9,cs),
(111,47,ls),
(110,58,o),
(110,71,o),
(110,85,c),
(144,9,o),
(234,-16,o),
(308,-16,cs),
(412,-16,o),
(556,26,o),
(556,145,cs),
(556,210,o),
(505,260,o),
(439,298,cs),
(358,343,o),
(315,354,o),
(255,381,cs),
(191,410,o),
(125,442,o),
(125,565,cs),
(125,668,o),
(209,777,o),
(320,777,cs),
(404,777,o),
(496,681,o),
(506,557,c),
(506,528,o),
(513,498,o),
(540,498,cs),
(564,498,o),
(576,513,o),
(576,532,cs),
(576,553,o),
(576,573,o),
(575,592,cs),
(574,611,o),
(574,631,o),
(574,652,cs),
(574,676,o),
(575,701,o),
(576,726,cs),
(577,751,o),
(578,775,o),
(578,798,cs),
(578,806,o),
(571,831,o),
(543,831,cs),
(515,831,o),
(509,812,o),
(509,796,cs),
(509,795,o),
(510,785,o),
(511,765,cs),
(512,744,o),
(514,713,o),
(517,671,c),
(477,787,o),
(409,837,o),
(312,837,cs),
(193,837,o),
(54,724,o),
(54,574,cs),
(54,404,o),
(155,355,o),
(243,314,cs),
(313,280,o),
(485,229,o),
(485,145,cs),
(485,82,o),
(394,44,o),
(305,44,cs),
(190,44,o),
(117,108,o),
(117,180,cs),
(117,211,o),
(113,249,o),
(80,249,cs),
(51,249,o),
(46,224,o),
(46,205,cs),
(46,173,o),
(48,140,o),
(48,108,cs),
(48,77,o),
(44,25,o),
(44,7,cs),
(44,-2,o),
(56,-26,o),
(79,-26,cs)
);
},
{
closed = 1;
nodes = (
(303,854,o),
(391,908,o),
(391,941,cs),
(391,960,o),
(379,972,o),
(359,972,cs),
(330,972,o),
(253,904,o),
(253,877,cs),
(253,864,o),
(262,854,o),
(277,854,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
94 71 2 7 8 16 1 4 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 1 0 5 1 94 0 0 5 0 106 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 67 0 3 3 2 83 9 1 2 2 21 67 0 4 4 2 83 9 1 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 1 0 1 106 0 0 5 0 106 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 67 0 3 3 2 83 9 1 2 2 21 67 0 4 4 2 83 9 1 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 1 0 1 106 0 0 5 0 106 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 67 0 4 4 9 83 0 9 9 21 67 0 3 3 2 83 0 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 1 106 0 0 5 0 106 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 20 67 0 4 4 9 83 0 9 9 21 67 0 3 3 2 83 0 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 1 0 1 106 0 0 5 0 106 0 3 0 2 3 2 87 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 20 67 0 4 4 9 83 0 9 9 21 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 0 5 0 106 0 5 0 8 7 5 8 92 0 6 0 7 3 6 7 91 0 3 0 2 3 2 87 0 4 4 9 83 0 9 9 21 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
122 120 100 98 92 90 78 76 69 67 40 46 39 38 36 10 20
CALL[ ]	/* CallFunction */";
};
width = 613;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(81,-16,o),
(87,-8,o),
(87,9,c),
(86,13,o),
(86,17,o),
(86,22,cs),
(86,26,o),
(86,30,o),
(86,35,cs),
(85,40,o),
(85,45,o),
(85,50,cs),
(84,62,o),
(84,76,o),
(84,91,c),
(127,13,o),
(227,-16,o),
(312,-16,cs),
(398,-16,o),
(540,26,o),
(540,145,cs),
(540,201,o),
(490,243,o),
(430,276,cs),
(363,313,o),
(308,328,o),
(259,351,cs),
(180,388,o),
(99,431,o),
(99,565,cs),
(99,688,o),
(196,807,o),
(320,807,cs),
(429,807,o),
(499,712,o),
(510,567,c),
(510,538,o),
(512,508,o),
(531,508,cs),
(548,508,o),
(550,523,o),
(550,542,cs),
(550,563,o),
(550,582,o),
(549,597,cs),
(548,612,o),
(548,631,o),
(548,652,cs),
(548,676,o),
(549,701,o),
(550,726,cs),
(551,751,o),
(552,775,o),
(552,798,cs),
(552,807,o),
(545,821,o),
(532,821,cs),
(519,821,o),
(513,813,o),
(513,796,cs),
(513,795,o),
(514,785,o),
(515,765,cs),
(516,744,o),
(518,713,o),
(521,671,c),
(481,787,o),
(413,837,o),
(316,837,cs),
(197,837,o),
(58,724,o),
(58,574,cs),
(58,412,o),
(157,356,o),
(247,314,cs),
(319,280,o),
(499,230,o),
(499,145,cs),
(499,63,o),
(404,14,o),
(309,14,cs),
(172,14,o),
(91,95,o),
(91,180,cs),
(91,209,o),
(88,239,o),
(69,239,cs),
(52,239,o),
(50,224,o),
(50,205,cs),
(50,173,o),
(52,140,o),
(52,108,cs),
(52,77,o),
(48,25,o),
(48,7,cs),
(48,-2,o),
(55,-16,o),
(68,-16,cs)
);
},
{
closed = 1;
nodes = (
(283,875,o),
(373,928,o),
(373,950,cs),
(373,969,o),
(365,972,o),
(354,972,cs),
(334,972,o),
(259,911,o),
(259,886,cs),
(259,879,o),
(262,875,o),
(267,875,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
91 71 2 7 8 15 1 4 3 22 1 2 4 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 1 0 5 1 94 0 0 5 0 106 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 2 83 9 1 2 2 21 67 0 4 4 2 83 9 1 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 1 0 1 106 0 0 5 0 106 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 2 83 9 1 2 2 21 67 0 4 4 2 83 9 1 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 1 106 0 0 5 0 106 0 5 0 8 7 5 8 92 0 7 7 6 83 0 6 6 14 67 0 3 3 2 83 9 1 2 2 21 67 0 4 4 2 83 9 1 2 2 21 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
117 115 97 95 89 87 77 75 69 67 38 46 42 37 36 10 20
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = Sacute;
unicode = 346;
},
{
glyphname = Scaron;
kernLeft = S;
kernRight = S;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(111,-32,o),
(127,-14,o),
(127,9,cs),
(127,16,o),
(127,24,o),
(127,34,cs),
(126,44,o),
(125,61,o),
(123,85,c),
(175,10,o),
(254,-16,o),
(338,-16,cs),
(444,-16,o),
(555,34,o),
(555,149,cs),
(555,226,o),
(503,284,o),
(437,323,cs),
(369,363,o),
(304,382,o),
(259,402,cs),
(202,426,o),
(146,471,o),
(146,567,cs),
(146,688,o),
(233,759,o),
(316,759,cs),
(407,759,o),
(461,671,o),
(471,551,cs),
(474,524,o),
(476,492,o),
(517,492,cs),
(544,492,o),
(557,503,o),
(557,526,cs),
(557,547,o),
(557,568,o),
(556,590,cs),
(555,611,o),
(555,631,o),
(555,649,cs),
(555,674,o),
(556,700,o),
(557,727,cs),
(558,753,o),
(559,774,o),
(559,791,cs),
(559,809,o),
(556,837,o),
(518,837,cs),
(482,837,o),
(474,815,o),
(474,796,cs),
(474,788,o),
(479,748,o),
(481,713,c),
(448,801,o),
(404,834,o),
(331,837,c),
(371,855,o),
(444,917,o),
(444,951,cs),
(444,960,o),
(442,972,o),
(431,972,cs),
(425,972,o),
(370,960,o),
(311,922,c),
(271,948,o),
(209,972,o),
(192,972,cs),
(184,972,o),
(179,965,o),
(179,958,cs),
(179,912,o),
(262,852,o),
(296,835,c),
(165,822,o),
(55,718,o),
(55,562,cs),
(55,411,o),
(155,354,o),
(240,314,cs),
(341,268,o),
(463,230,o),
(463,154,cs),
(463,105,o),
(413,62,o),
(329,62,cs),
(227,62,o),
(149,133,o),
(135,187,cs),
(130,211,o),
(128,271,o),
(84,271,cs),
(45,271,o),
(44,220,o),
(44,196,cs),
(44,186,o),
(44,173,o),
(45,157,cs),
(46,141,o),
(46,126,o),
(46,113,cs),
(46,67,o),
(42,36,o),
(42,9,cs),
(42,-10,o),
(52,-32,o),
(83,-32,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
63 1 5 3 50 1 8 5 79 1 7 8 0 1 2 1 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
4 1 3 5 3 106 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 67 0 2 2 9 83 0 9 9 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
4 1 3 5 3 106 0 1 0 0 1 0 87 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 67 0 2 2 9 83 0 9 9 21 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
4 1 3 5 3 106 0 8 7 5 8 79 6 1 5 0 7 1 5 7 91 0 1 0 0 1 0 87 0 2 2 9 83 0 9 9 21 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
135 133 113 111 103 101 90 88 77 76 69 67 59 57 40 46 37 10 18
CALL[ ]	/* CallFunction */";
};
width = 628;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(103,-26,o),
(113,-7,o),
(113,9,cs),
(111,47,ls),
(110,58,o),
(110,71,o),
(110,85,c),
(144,9,o),
(234,-16,o),
(308,-16,cs),
(412,-16,o),
(556,26,o),
(556,145,cs),
(556,210,o),
(505,260,o),
(439,298,cs),
(358,343,o),
(315,354,o),
(255,381,cs),
(191,410,o),
(125,442,o),
(125,565,cs),
(125,668,o),
(209,777,o),
(320,777,cs),
(404,777,o),
(496,681,o),
(506,557,c),
(506,528,o),
(513,498,o),
(540,498,cs),
(564,498,o),
(576,513,o),
(576,532,cs),
(576,553,o),
(576,573,o),
(575,592,cs),
(574,611,o),
(574,631,o),
(574,652,cs),
(574,676,o),
(575,701,o),
(576,726,cs),
(577,751,o),
(578,775,o),
(578,798,cs),
(578,806,o),
(571,831,o),
(543,831,cs),
(515,831,o),
(509,812,o),
(509,796,cs),
(509,795,o),
(510,785,o),
(511,765,cs),
(512,744,o),
(514,713,o),
(517,671,c),
(477,787,o),
(409,837,o),
(312,837,cs),
(193,837,o),
(54,724,o),
(54,574,cs),
(54,404,o),
(155,355,o),
(243,314,cs),
(313,280,o),
(485,229,o),
(485,145,cs),
(485,82,o),
(394,44,o),
(305,44,cs),
(190,44,o),
(117,108,o),
(117,180,cs),
(117,211,o),
(113,249,o),
(80,249,cs),
(51,249,o),
(46,224,o),
(46,205,cs),
(46,173,o),
(48,140,o),
(48,108,cs),
(48,77,o),
(44,25,o),
(44,7,cs),
(44,-2,o),
(56,-26,o),
(79,-26,cs)
);
},
{
closed = 1;
nodes = (
(337,847,o),
(443,919,o),
(443,955,cs),
(443,964,o),
(440,972,o),
(432,972,cs),
(424,972,o),
(376,959,o),
(312,921,c),
(272,945,o),
(211,972,o),
(193,972,cs),
(186,972,o),
(182,968,o),
(182,959,cs),
(182,918,o),
(290,847,o),
(312,847,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
20 1 1 0 103 80 2 8 9 25 1 5 4 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 9 9 6 83 7 1 6 6 20 67 0 8 8 6 83 7 1 6 6 20 67 0 4 4 3 83 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 9 9 6 83 7 1 6 6 20 67 0 8 8 6 83 7 1 6 6 20 67 0 5 5 10 83 0 10 10 21 67 0 4 4 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 9 9 6 83 0 6 6 20 67 0 8 8 7 83 0 7 7 20 67 0 5 5 10 83 0 10 10 21 67 0 4 4 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 4 0 3 4 3 87 0 9 9 6 83 0 6 6 20 67 0 8 8 7 83 0 7 7 20 67 0 5 5 10 83 0 10 10 21 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 6 0 9 8 6 9 91 0 7 0 8 4 7 8 91 0 4 0 3 4 3 87 0 5 5 10 83 0 10 10 21 10 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 131 129 109 107 101 99 87 85 78 76 58 56 48 46 32 30 16 14 9 7 0 24 1 24 12 15
CALL[ ]	/* CallFunction */";
};
width = 613;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(81,-16,o),
(87,-8,o),
(87,9,c),
(86,13,o),
(86,17,o),
(86,22,cs),
(86,26,o),
(86,30,o),
(86,35,cs),
(85,40,o),
(85,45,o),
(85,50,cs),
(84,62,o),
(84,76,o),
(84,91,c),
(127,13,o),
(227,-16,o),
(312,-16,cs),
(398,-16,o),
(540,26,o),
(540,145,cs),
(540,201,o),
(490,243,o),
(430,276,cs),
(363,313,o),
(308,328,o),
(259,351,cs),
(180,388,o),
(99,431,o),
(99,565,cs),
(99,688,o),
(196,807,o),
(320,807,cs),
(429,807,o),
(499,712,o),
(510,567,c),
(510,538,o),
(512,508,o),
(531,508,cs),
(548,508,o),
(550,523,o),
(550,542,cs),
(550,563,o),
(550,582,o),
(549,597,cs),
(548,612,o),
(548,631,o),
(548,652,cs),
(548,676,o),
(549,701,o),
(550,726,cs),
(551,751,o),
(552,775,o),
(552,798,cs),
(552,807,o),
(545,821,o),
(532,821,cs),
(519,821,o),
(513,813,o),
(513,796,cs),
(513,795,o),
(514,785,o),
(515,765,cs),
(516,744,o),
(518,713,o),
(521,671,c),
(481,787,o),
(413,837,o),
(316,837,cs),
(197,837,o),
(58,724,o),
(58,574,cs),
(58,412,o),
(157,356,o),
(247,314,cs),
(319,280,o),
(499,230,o),
(499,145,cs),
(499,63,o),
(404,14,o),
(309,14,cs),
(172,14,o),
(91,95,o),
(91,180,cs),
(91,209,o),
(88,239,o),
(69,239,cs),
(52,239,o),
(50,224,o),
(50,205,cs),
(50,173,o),
(52,140,o),
(52,108,cs),
(52,77,o),
(48,25,o),
(48,7,cs),
(48,-2,o),
(55,-16,o),
(68,-16,cs)
);
},
{
closed = 1;
nodes = (
(336,876,o),
(441,936,o),
(441,961,cs),
(441,968,o),
(438,972,o),
(433,972,cs),
(426,972,o),
(378,954,o),
(313,920,c),
(276,940,o),
(207,972,o),
(194,972,cs),
(189,972,o),
(186,968,o),
(186,961,cs),
(186,937,o),
(289,876,o),
(313,876,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
19 1 1 0 100 80 2 8 9 24 1 5 4 31 1 3 5 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 9 9 6 83 0 6 6 20 67 0 8 8 7 83 0 7 7 12 67 0 4 4 3 83 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 6 0 9 8 6 9 91 0 8 8 7 83 0 7 7 14 67 0 4 4 3 83 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 126 124 106 104 98 96 86 84 78 76 58 56 50 48 34 32 15 13 8 6 0 23 1 23 12 15
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = Scaron;
unicode = 352;
},
{
glyphname = Scedilla;
kernLeft = S;
kernRight = S;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(111,-32,o),
(127,-14,o),
(127,9,cs),
(127,16,o),
(127,24,o),
(127,34,cs),
(126,44,o),
(125,61,o),
(123,85,c),
(175,10,o),
(254,-16,o),
(338,-16,cs),
(444,-16,o),
(555,34,o),
(555,149,cs),
(555,226,o),
(503,284,o),
(437,323,cs),
(369,363,o),
(304,382,o),
(259,402,cs),
(202,426,o),
(146,471,o),
(146,567,cs),
(146,688,o),
(233,759,o),
(316,759,cs),
(407,759,o),
(461,671,o),
(471,551,cs),
(474,524,o),
(476,492,o),
(517,492,cs),
(544,492,o),
(557,503,o),
(557,526,cs),
(557,547,o),
(557,568,o),
(556,590,cs),
(555,611,o),
(555,631,o),
(555,649,cs),
(555,674,o),
(556,700,o),
(557,727,cs),
(558,753,o),
(559,774,o),
(559,791,cs),
(559,809,o),
(556,837,o),
(518,837,cs),
(482,837,o),
(474,815,o),
(474,796,cs),
(474,788,o),
(479,748,o),
(481,713,c),
(446,805,o),
(401,837,o),
(322,837,cs),
(177,837,o),
(55,727,o),
(55,562,cs),
(55,411,o),
(155,354,o),
(240,314,cs),
(341,268,o),
(463,230,o),
(463,154,cs),
(463,105,o),
(413,62,o),
(329,62,cs),
(227,62,o),
(149,133,o),
(135,187,cs),
(130,211,o),
(128,271,o),
(84,271,cs),
(45,271,o),
(44,220,o),
(44,196,cs),
(44,186,o),
(44,173,o),
(45,157,cs),
(46,141,o),
(46,126,o),
(46,113,cs),
(46,67,o),
(42,36,o),
(42,9,cs),
(42,-10,o),
(52,-32,o),
(83,-32,cs)
);
},
{
closed = 1;
nodes = (
(328,-250,o),
(391,-208,o),
(391,-131,cs),
(391,-74,o),
(355,-50,o),
(323,-50,cs),
(279,-50,o),
(263,-80,o),
(263,-108,cs),
(263,-139,o),
(299,-141,o),
(299,-158,cs),
(299,-178,o),
(297,-193,o),
(292,-202,cs),
(287,-212,o),
(284,-220,o),
(284,-227,cs),
(284,-250,o),
(303,-250,o),
(310,-250,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
53 1 5 6 0 1 2 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 8 0 9 8 9 87 0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 1 0 0 8 1 0 91 0 8 0 9 8 9 87 0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 2 2 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 6 5 3 6 79 4 1 3 0 5 1 3 5 91 0 1 0 0 8 1 0 91 0 8 0 9 8 9 87 0 2 2 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
123 121 115 113 109 107 87 85 77 75 64 62 51 49 40 46 37 10 18
CALL[ ]	/* CallFunction */";
};
width = 628;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(103,-26,o),
(113,-7,o),
(113,9,cs),
(111,47,ls),
(110,58,o),
(110,71,o),
(110,85,c),
(144,9,o),
(234,-16,o),
(308,-16,cs),
(412,-16,o),
(556,26,o),
(556,145,cs),
(556,210,o),
(505,260,o),
(439,298,cs),
(358,343,o),
(315,354,o),
(255,381,cs),
(191,410,o),
(125,442,o),
(125,565,cs),
(125,668,o),
(209,777,o),
(320,777,cs),
(404,777,o),
(496,681,o),
(506,557,c),
(506,528,o),
(513,498,o),
(540,498,cs),
(564,498,o),
(576,513,o),
(576,532,cs),
(576,553,o),
(576,573,o),
(575,592,cs),
(574,611,o),
(574,631,o),
(574,652,cs),
(574,676,o),
(575,701,o),
(576,726,cs),
(577,751,o),
(578,775,o),
(578,798,cs),
(578,806,o),
(571,831,o),
(543,831,cs),
(515,831,o),
(509,812,o),
(509,796,cs),
(509,795,o),
(510,785,o),
(511,765,cs),
(512,744,o),
(514,713,o),
(517,671,c),
(477,787,o),
(409,837,o),
(312,837,cs),
(193,837,o),
(54,724,o),
(54,574,cs),
(54,404,o),
(155,355,o),
(243,314,cs),
(313,280,o),
(485,229,o),
(485,145,cs),
(485,82,o),
(394,44,o),
(305,44,cs),
(190,44,o),
(117,108,o),
(117,180,cs),
(117,211,o),
(113,249,o),
(80,249,cs),
(51,249,o),
(46,224,o),
(46,205,cs),
(46,173,o),
(48,140,o),
(48,108,cs),
(48,77,o),
(44,25,o),
(44,7,cs),
(44,-2,o),
(56,-26,o),
(79,-26,cs)
);
},
{
closed = 1;
nodes = (
(314,-232,o),
(355,-182,o),
(355,-128,cs),
(355,-75,o),
(325,-56,o),
(298,-56,cs),
(261,-56,o),
(246,-81,o),
(246,-105,cs),
(246,-137,o),
(282,-136,o),
(282,-153,cs),
(282,-170,o),
(280,-183,o),
(276,-191,cs),
(271,-200,o),
(269,-207,o),
(269,-213,cs),
(269,-230,o),
(283,-232,o),
(290,-232,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
79 56 2 5 6 1 1 2 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 8 0 9 8 9 87 0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 8 0 9 8 9 87 0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 20 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 0 8 1 0 91 0 8 0 9 8 9 87 0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 20 67 0 2 2 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 0 0 8 1 0 91 0 8 0 9 8 9 87 0 2 2 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
123 121 115 113 107 105 85 83 77 75 63 61 54 52 40 46 38 10 29
CALL[ ]	/* CallFunction */";
};
width = 613;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(81,-16,o),
(87,-8,o),
(87,9,c),
(86,13,o),
(86,17,o),
(86,22,cs),
(86,26,o),
(86,30,o),
(86,35,cs),
(85,40,o),
(85,45,o),
(85,50,cs),
(84,62,o),
(84,76,o),
(84,91,c),
(127,13,o),
(227,-16,o),
(312,-16,cs),
(398,-16,o),
(540,26,o),
(540,145,cs),
(540,201,o),
(490,243,o),
(430,276,cs),
(363,313,o),
(308,328,o),
(259,351,cs),
(180,388,o),
(99,431,o),
(99,565,cs),
(99,688,o),
(196,807,o),
(320,807,cs),
(429,807,o),
(499,712,o),
(510,567,c),
(510,538,o),
(512,508,o),
(531,508,cs),
(548,508,o),
(550,523,o),
(550,542,cs),
(550,563,o),
(550,582,o),
(549,597,cs),
(548,612,o),
(548,631,o),
(548,652,cs),
(548,676,o),
(549,701,o),
(550,726,cs),
(551,751,o),
(552,775,o),
(552,798,cs),
(552,807,o),
(545,821,o),
(532,821,cs),
(519,821,o),
(513,813,o),
(513,796,cs),
(513,795,o),
(514,785,o),
(515,765,cs),
(516,744,o),
(518,713,o),
(521,671,c),
(481,787,o),
(413,837,o),
(316,837,cs),
(197,837,o),
(58,724,o),
(58,574,cs),
(58,412,o),
(157,356,o),
(247,314,cs),
(319,280,o),
(499,230,o),
(499,145,cs),
(499,63,o),
(404,14,o),
(309,14,cs),
(172,14,o),
(91,95,o),
(91,180,cs),
(91,209,o),
(88,239,o),
(69,239,cs),
(52,239,o),
(50,224,o),
(50,205,cs),
(50,173,o),
(52,140,o),
(52,108,cs),
(52,77,o),
(48,25,o),
(48,7,cs),
(48,-2,o),
(55,-16,o),
(68,-16,cs)
);
},
{
closed = 1;
nodes = (
(330,-204,o),
(346,-154,o),
(346,-125,cs),
(346,-80,o),
(324,-68,o),
(304,-68,cs),
(277,-68,o),
(264,-85,o),
(264,-102,cs),
(264,-134,o),
(300,-129,o),
(300,-146,cs),
(300,-153,o),
(298,-161,o),
(295,-170,cs),
(291,-180,o),
(289,-187,o),
(289,-192,cs),
(289,-199,o),
(296,-204,o),
(303,-204,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
76 56 2 5 6 0 1 2 1 7 1 0 2 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 12 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 67 0 8 8 9 83 0 9 9 17 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 8 0 9 8 9 87 0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 12 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 3 0 6 5 3 6 91 0 8 0 9 8 9 87 0 5 5 4 83 0 4 4 14 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
118 116 110 108 102 100 82 80 74 72 62 60 54 52 38 46 40 10 18
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = uni015E;
unicode = 350;
},
{
glyphname = Scircumflex;
kernLeft = S;
kernRight = S;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(111,-32,o),
(127,-14,o),
(127,9,cs),
(127,16,o),
(127,24,o),
(127,34,cs),
(126,44,o),
(125,61,o),
(123,85,c),
(175,10,o),
(254,-16,o),
(338,-16,cs),
(444,-16,o),
(555,34,o),
(555,149,cs),
(555,226,o),
(503,284,o),
(437,323,cs),
(369,363,o),
(304,382,o),
(259,402,cs),
(202,426,o),
(146,471,o),
(146,567,cs),
(146,688,o),
(233,759,o),
(316,759,cs),
(407,759,o),
(461,671,o),
(471,551,cs),
(474,524,o),
(476,492,o),
(517,492,cs),
(544,492,o),
(557,503,o),
(557,526,cs),
(557,547,o),
(557,568,o),
(556,590,cs),
(555,611,o),
(555,631,o),
(555,649,cs),
(555,674,o),
(556,700,o),
(557,727,cs),
(558,753,o),
(559,774,o),
(559,791,cs),
(559,809,o),
(556,837,o),
(518,837,cs),
(482,837,o),
(474,815,o),
(474,796,cs),
(474,788,o),
(479,748,o),
(481,713,c),
(446,805,o),
(401,837,o),
(322,837,cs),
(177,837,o),
(55,727,o),
(55,562,cs),
(55,411,o),
(155,354,o),
(240,314,cs),
(341,268,o),
(463,230,o),
(463,154,cs),
(463,105,o),
(413,62,o),
(329,62,cs),
(227,62,o),
(149,133,o),
(135,187,cs),
(130,211,o),
(128,271,o),
(84,271,cs),
(45,271,o),
(44,220,o),
(44,196,cs),
(44,186,o),
(44,173,o),
(45,157,cs),
(46,141,o),
(46,126,o),
(46,113,cs),
(46,67,o),
(42,36,o),
(42,9,cs),
(42,-10,o),
(52,-32,o),
(83,-32,cs)
);
},
{
closed = 1;
nodes = (
(207,830,o),
(268,853,o),
(309,880,c),
(368,842,o),
(423,830,o),
(429,830,cs),
(440,830,o),
(442,842,o),
(442,851,cs),
(442,892,o),
(334,972,o),
(309,972,cs),
(298,972,o),
(263,950,o),
(236,928,cs),
(205,903,o),
(177,871,o),
(177,844,cs),
(177,837,o),
(182,830,o),
(190,830,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
5 1 6 2 79 1 8 9 26 1 5 4 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 2 6 6 2 94 1 11 2 0 6 9 6 0 9 104 0 9 9 6 83 7 1 6 6 20 67 0 8 8 6 83 7 1 6 6 20 67 0 5 5 10 83 0 10 10 21 67 0 4 4 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 2 6 2 106 1 11 2 0 6 9 6 0 9 104 0 9 9 6 83 7 1 6 6 20 67 0 8 8 6 83 7 1 6 6 20 67 0 5 5 10 83 0 10 10 21 67 0 4 4 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 2 6 2 106 1 11 2 0 6 9 6 0 9 104 0 4 0 3 4 3 87 0 9 9 6 83 7 1 6 6 20 67 0 8 8 6 83 7 1 6 6 20 67 0 5 5 10 83 0 10 10 21 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 2 6 2 106 1 11 2 0 6 9 6 0 9 104 0 9 8 6 9 80 7 1 6 0 8 4 6 8 92 0 4 0 3 4 3 87 0 5 5 10 83 0 10 10 21 10 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 135 133 113 111 103 101 90 88 77 75 59 57 49 47 33 31 19 17 11 9 0 25 1 25 12 15
CALL[ ]	/* CallFunction */";
};
width = 628;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(103,-26,o),
(113,-7,o),
(113,9,cs),
(111,47,ls),
(110,58,o),
(110,71,o),
(110,85,c),
(144,9,o),
(234,-16,o),
(308,-16,cs),
(412,-16,o),
(556,26,o),
(556,145,cs),
(556,210,o),
(505,260,o),
(439,298,cs),
(358,343,o),
(315,354,o),
(255,381,cs),
(191,410,o),
(125,442,o),
(125,565,cs),
(125,668,o),
(209,777,o),
(320,777,cs),
(404,777,o),
(496,681,o),
(506,557,c),
(506,528,o),
(513,498,o),
(540,498,cs),
(564,498,o),
(576,513,o),
(576,532,cs),
(576,553,o),
(576,573,o),
(575,592,cs),
(574,611,o),
(574,631,o),
(574,652,cs),
(574,676,o),
(575,701,o),
(576,726,cs),
(577,751,o),
(578,775,o),
(578,798,cs),
(578,806,o),
(571,831,o),
(543,831,cs),
(515,831,o),
(509,812,o),
(509,796,cs),
(509,795,o),
(510,785,o),
(511,765,cs),
(512,744,o),
(514,713,o),
(517,671,c),
(477,787,o),
(409,837,o),
(312,837,cs),
(193,837,o),
(54,724,o),
(54,574,cs),
(54,404,o),
(155,355,o),
(243,314,cs),
(313,280,o),
(485,229,o),
(485,145,cs),
(485,82,o),
(394,44,o),
(305,44,cs),
(190,44,o),
(117,108,o),
(117,180,cs),
(117,211,o),
(113,249,o),
(80,249,cs),
(51,249,o),
(46,224,o),
(46,205,cs),
(46,173,o),
(48,140,o),
(48,108,cs),
(48,77,o),
(44,25,o),
(44,7,cs),
(44,-2,o),
(56,-26,o),
(79,-26,cs)
);
},
{
closed = 1;
nodes = (
(211,847,o),
(272,874,o),
(312,898,c),
(376,860,o),
(424,847,o),
(432,847,cs),
(440,847,o),
(443,855,o),
(443,864,cs),
(443,900,o),
(336,972,o),
(312,972,cs),
(290,972,o),
(182,901,o),
(182,860,cs),
(182,851,o),
(186,847,o),
(193,847,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
5 1 0 2 103 80 2 8 9 25 1 5 4 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 2 0 6 2 94 1 11 2 0 6 0 106 0 9 9 6 83 7 1 6 6 20 67 0 8 8 6 83 7 1 6 6 20 67 0 4 4 3 83 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 2 0 2 106 1 11 2 0 6 0 106 0 9 9 6 83 7 1 6 6 20 67 0 8 8 6 83 7 1 6 6 20 67 0 4 4 3 83 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 2 0 2 106 1 11 2 0 6 0 106 0 9 9 6 83 7 1 6 6 20 67 0 8 8 6 83 7 1 6 6 20 67 0 5 5 10 83 0 10 10 21 67 0 4 4 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 2 0 2 106 1 11 2 0 6 0 106 0 9 9 6 83 0 6 6 20 67 0 8 8 7 83 0 7 7 20 67 0 5 5 10 83 0 10 10 21 67 0 4 4 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 2 0 2 106 1 11 2 0 6 0 106 0 4 0 3 4 3 87 0 9 9 6 83 0 6 6 20 67 0 8 8 7 83 0 7 7 20 67 0 5 5 10 83 0 10 10 21 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 2 0 2 106 1 11 2 0 6 0 106 0 6 0 9 8 6 9 92 0 7 0 8 4 7 8 91 0 4 0 3 4 3 87 0 5 5 10 83 0 10 10 21 10 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 131 129 109 107 101 99 87 85 78 76 58 56 48 46 32 30 18 16 11 9 0 24 1 24 12 15
CALL[ ]	/* CallFunction */";
};
width = 613;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(81,-16,o),
(87,-8,o),
(87,9,c),
(86,13,o),
(86,17,o),
(86,22,cs),
(86,26,o),
(86,30,o),
(86,35,cs),
(85,40,o),
(85,45,o),
(85,50,cs),
(84,62,o),
(84,76,o),
(84,91,c),
(127,13,o),
(227,-16,o),
(312,-16,cs),
(398,-16,o),
(540,26,o),
(540,145,cs),
(540,201,o),
(490,243,o),
(430,276,cs),
(363,313,o),
(308,328,o),
(259,351,cs),
(180,388,o),
(99,431,o),
(99,565,cs),
(99,688,o),
(196,807,o),
(320,807,cs),
(429,807,o),
(499,712,o),
(510,567,c),
(510,538,o),
(512,508,o),
(531,508,cs),
(548,508,o),
(550,523,o),
(550,542,cs),
(550,563,o),
(550,582,o),
(549,597,cs),
(548,612,o),
(548,631,o),
(548,652,cs),
(548,676,o),
(549,701,o),
(550,726,cs),
(551,751,o),
(552,775,o),
(552,798,cs),
(552,807,o),
(545,821,o),
(532,821,cs),
(519,821,o),
(513,813,o),
(513,796,cs),
(513,795,o),
(514,785,o),
(515,765,cs),
(516,744,o),
(518,713,o),
(521,671,c),
(481,787,o),
(413,837,o),
(316,837,cs),
(197,837,o),
(58,724,o),
(58,574,cs),
(58,412,o),
(157,356,o),
(247,314,cs),
(319,280,o),
(499,230,o),
(499,145,cs),
(499,63,o),
(404,14,o),
(309,14,cs),
(172,14,o),
(91,95,o),
(91,180,cs),
(91,209,o),
(88,239,o),
(69,239,cs),
(52,239,o),
(50,224,o),
(50,205,cs),
(50,173,o),
(52,140,o),
(52,108,cs),
(52,77,o),
(48,25,o),
(48,7,cs),
(48,-2,o),
(55,-16,o),
(68,-16,cs)
);
},
{
closed = 1;
nodes = (
(204,875,o),
(252,894,o),
(316,928,c),
(380,894,o),
(428,875,o),
(436,875,cs),
(441,875,o),
(444,879,o),
(444,886,cs),
(444,911,o),
(342,972,o),
(316,972,cs),
(293,972,o),
(189,911,o),
(189,886,cs),
(189,879,o),
(192,875,o),
(197,875,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
5 1 0 2 100 80 2 8 9 24 1 5 4 31 1 3 5 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 2 0 6 2 94 1 11 2 0 6 0 106 0 9 9 6 83 0 6 6 20 67 0 8 8 7 83 0 7 7 12 67 0 4 4 3 83 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 2 0 2 106 1 11 2 0 6 0 106 0 9 9 6 83 0 6 6 20 67 0 8 8 7 83 0 7 7 12 67 0 4 4 3 83 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 2 0 2 106 1 11 2 0 6 0 106 0 6 0 9 8 6 9 92 0 8 8 7 83 0 7 7 14 67 0 4 4 3 83 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 126 124 106 104 98 96 86 84 78 76 58 56 50 48 34 32 18 16 11 9 0 23 1 23 12 15
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = Scircumflex;
unicode = 348;
},
{
glyphname = Scommaaccent;
kernLeft = S;
kernRight = S;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(111,-32,o),
(127,-14,o),
(127,9,cs),
(127,16,o),
(127,24,o),
(127,34,cs),
(126,44,o),
(125,61,o),
(123,85,c),
(175,10,o),
(254,-16,o),
(338,-16,cs),
(444,-16,o),
(555,34,o),
(555,149,cs),
(555,226,o),
(503,284,o),
(437,323,cs),
(369,363,o),
(304,382,o),
(259,402,cs),
(202,426,o),
(146,471,o),
(146,567,cs),
(146,688,o),
(233,759,o),
(316,759,cs),
(407,759,o),
(461,671,o),
(471,551,cs),
(474,524,o),
(476,492,o),
(517,492,cs),
(544,492,o),
(557,503,o),
(557,526,cs),
(557,547,o),
(557,568,o),
(556,590,cs),
(555,611,o),
(555,631,o),
(555,649,cs),
(555,674,o),
(556,700,o),
(557,727,cs),
(558,753,o),
(559,774,o),
(559,791,cs),
(559,809,o),
(556,837,o),
(518,837,cs),
(482,837,o),
(474,815,o),
(474,796,cs),
(474,788,o),
(479,748,o),
(481,713,c),
(446,805,o),
(401,837,o),
(322,837,cs),
(177,837,o),
(55,727,o),
(55,562,cs),
(55,411,o),
(155,354,o),
(240,314,cs),
(341,268,o),
(463,230,o),
(463,154,cs),
(463,105,o),
(413,62,o),
(329,62,cs),
(227,62,o),
(149,133,o),
(135,187,cs),
(130,211,o),
(128,271,o),
(84,271,cs),
(45,271,o),
(44,220,o),
(44,196,cs),
(44,186,o),
(44,173,o),
(45,157,cs),
(46,141,o),
(46,126,o),
(46,113,cs),
(46,67,o),
(42,36,o),
(42,9,cs),
(42,-10,o),
(52,-32,o),
(83,-32,cs)
);
},
{
closed = 1;
nodes = (
(328,-250,o),
(391,-208,o),
(391,-131,cs),
(391,-74,o),
(355,-50,o),
(323,-50,cs),
(279,-50,o),
(263,-80,o),
(263,-108,cs),
(263,-139,o),
(299,-141,o),
(299,-158,cs),
(299,-178,o),
(297,-193,o),
(292,-202,cs),
(287,-212,o),
(284,-220,o),
(284,-227,cs),
(284,-250,o),
(303,-250,o),
(310,-250,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
53 1 5 6 0 1 2 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 8 0 9 8 9 87 0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 1 0 0 8 1 0 91 0 8 0 9 8 9 87 0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 2 2 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 6 5 3 6 79 4 1 3 0 5 1 3 5 91 0 1 0 0 8 1 0 91 0 8 0 9 8 9 87 0 2 2 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
123 121 115 113 109 107 87 85 77 75 64 62 51 49 40 46 37 10 18
CALL[ ]	/* CallFunction */";
};
width = 628;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(103,-26,o),
(113,-7,o),
(113,9,cs),
(111,47,ls),
(110,58,o),
(110,71,o),
(110,85,c),
(144,9,o),
(234,-16,o),
(308,-16,cs),
(412,-16,o),
(556,26,o),
(556,145,cs),
(556,210,o),
(505,260,o),
(439,298,cs),
(358,343,o),
(315,354,o),
(255,381,cs),
(191,410,o),
(125,442,o),
(125,565,cs),
(125,668,o),
(209,777,o),
(320,777,cs),
(404,777,o),
(496,681,o),
(506,557,c),
(506,528,o),
(513,498,o),
(540,498,cs),
(564,498,o),
(576,513,o),
(576,532,cs),
(576,553,o),
(576,573,o),
(575,592,cs),
(574,611,o),
(574,631,o),
(574,652,cs),
(574,676,o),
(575,701,o),
(576,726,cs),
(577,751,o),
(578,775,o),
(578,798,cs),
(578,806,o),
(571,831,o),
(543,831,cs),
(515,831,o),
(509,812,o),
(509,796,cs),
(509,795,o),
(510,785,o),
(511,765,cs),
(512,744,o),
(514,713,o),
(517,671,c),
(477,787,o),
(409,837,o),
(312,837,cs),
(193,837,o),
(54,724,o),
(54,574,cs),
(54,404,o),
(155,355,o),
(243,314,cs),
(313,280,o),
(485,229,o),
(485,145,cs),
(485,82,o),
(394,44,o),
(305,44,cs),
(190,44,o),
(117,108,o),
(117,180,cs),
(117,211,o),
(113,249,o),
(80,249,cs),
(51,249,o),
(46,224,o),
(46,205,cs),
(46,173,o),
(48,140,o),
(48,108,cs),
(48,77,o),
(44,25,o),
(44,7,cs),
(44,-2,o),
(56,-26,o),
(79,-26,cs)
);
},
{
closed = 1;
nodes = (
(313,-230,o),
(354,-180,o),
(354,-126,cs),
(354,-73,o),
(324,-54,o),
(297,-54,cs),
(260,-54,o),
(245,-79,o),
(245,-103,cs),
(245,-135,o),
(281,-134,o),
(281,-151,cs),
(281,-168,o),
(279,-181,o),
(275,-189,cs),
(270,-198,o),
(268,-205,o),
(268,-211,cs),
(268,-228,o),
(282,-230,o),
(289,-230,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
79 56 2 5 6 1 1 2 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 8 0 9 8 9 87 0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 8 0 9 8 9 87 0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 20 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 0 8 1 0 91 0 8 0 9 8 9 87 0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 20 67 0 2 2 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 0 0 8 1 0 91 0 8 0 9 8 9 87 0 2 2 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
123 121 115 113 107 105 85 83 77 75 63 61 54 52 40 46 38 10 29
CALL[ ]	/* CallFunction */";
};
width = 613;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(81,-16,o),
(87,-8,o),
(87,9,c),
(86,13,o),
(86,17,o),
(86,22,cs),
(86,26,o),
(86,30,o),
(86,35,cs),
(85,40,o),
(85,45,o),
(85,50,cs),
(84,62,o),
(84,76,o),
(84,91,c),
(127,13,o),
(227,-16,o),
(312,-16,cs),
(398,-16,o),
(540,26,o),
(540,145,cs),
(540,201,o),
(490,243,o),
(430,276,cs),
(363,313,o),
(308,328,o),
(259,351,cs),
(180,388,o),
(99,431,o),
(99,565,cs),
(99,688,o),
(196,807,o),
(320,807,cs),
(429,807,o),
(499,712,o),
(510,567,c),
(510,538,o),
(512,508,o),
(531,508,cs),
(548,508,o),
(550,523,o),
(550,542,cs),
(550,563,o),
(550,582,o),
(549,597,cs),
(548,612,o),
(548,631,o),
(548,652,cs),
(548,676,o),
(549,701,o),
(550,726,cs),
(551,751,o),
(552,775,o),
(552,798,cs),
(552,807,o),
(545,821,o),
(532,821,cs),
(519,821,o),
(513,813,o),
(513,796,cs),
(513,795,o),
(514,785,o),
(515,765,cs),
(516,744,o),
(518,713,o),
(521,671,c),
(481,787,o),
(413,837,o),
(316,837,cs),
(197,837,o),
(58,724,o),
(58,574,cs),
(58,412,o),
(157,356,o),
(247,314,cs),
(319,280,o),
(499,230,o),
(499,145,cs),
(499,63,o),
(404,14,o),
(309,14,cs),
(172,14,o),
(91,95,o),
(91,180,cs),
(91,209,o),
(88,239,o),
(69,239,cs),
(52,239,o),
(50,224,o),
(50,205,cs),
(50,173,o),
(52,140,o),
(52,108,cs),
(52,77,o),
(48,25,o),
(48,7,cs),
(48,-2,o),
(55,-16,o),
(68,-16,cs)
);
},
{
closed = 1;
nodes = (
(330,-204,o),
(346,-154,o),
(346,-125,cs),
(346,-80,o),
(324,-68,o),
(304,-68,cs),
(277,-68,o),
(264,-85,o),
(264,-102,cs),
(264,-134,o),
(300,-129,o),
(300,-146,cs),
(300,-153,o),
(298,-161,o),
(295,-170,cs),
(291,-180,o),
(289,-187,o),
(289,-192,cs),
(289,-199,o),
(296,-204,o),
(303,-204,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
76 56 2 5 6 0 1 2 1 7 1 0 2 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 12 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 67 0 8 8 9 83 0 9 9 17 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 8 0 9 8 9 87 0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 12 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 3 0 6 5 3 6 91 0 8 0 9 8 9 87 0 5 5 4 83 0 4 4 14 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
118 116 110 108 102 100 82 80 74 72 62 60 54 52 38 46 40 10 18
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = uni0218;
unicode = 536;
},
{
glyphname = Germandbls;
lastChange = "2024-06-13 14:49:17 +0000";
layers = (
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
ref = S;
},
{
pos = (592,0);
ref = S;
}
);
width = 1184;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
ref = S;
},
{
pos = (613,0);
ref = S;
}
);
width = 1226;
},
{
layerId = m01;
shapes = (
{
ref = S;
},
{
pos = (628,0);
ref = S;
}
);
width = 1256;
}
);
unicode = 7838;
},
{
glyphname = T;
kernLeft = T;
kernRight = T;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(465,0,ls),
(482,0,o),
(492,17,o),
(492,32,cs),
(492,59,o),
(467,67,o),
(450,67,cs),
(371,67,l),
(371,737,l),
(515,737,ls),
(550,737,o),
(552,728,o),
(552,688,cs),
(552,614,ls),
(552,571,o),
(563,559,o),
(600,559,cs),
(619,559,o),
(640,563,o),
(640,603,cs),
(640,625,o),
(639,658,o),
(639,693,cs),
(639,704,o),
(639,718,o),
(640,735,cs),
(640,752,o),
(640,767,o),
(640,778,cs),
(640,817,o),
(634,821,o),
(602,821,cs),
(553,821,o),
(507,821,o),
(464,820,cs),
(421,819,o),
(375,819,o),
(326,819,cs),
(248,819,o),
(129,821,o),
(51,821,cs),
(20,821,o),
(13,817,o),
(13,778,cs),
(13,767,o),
(13,752,o),
(14,735,cs),
(14,718,o),
(14,704,o),
(14,693,cs),
(14,654,o),
(13,654,o),
(13,603,cs),
(13,564,o),
(37,559,o),
(56,559,cs),
(84,559,o),
(101,571,o),
(101,614,cs),
(101,688,ls),
(101,727,o),
(103,737,o),
(138,737,cs),
(275,737,l),
(275,737,l),
(275,636,o),
(279,502,o),
(279,401,cs),
(279,295,o),
(275,218,o),
(275,120,cs),
(275,77,o),
(244,73,o),
(209,70,cs),
(178,67,o),
(163,53,o),
(163,26,cs),
(163,3,o),
(186,0,o),
(205,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
3 1 1 0 5 0 1 5 104 4 7 2 0 0 2 83 0 2 2 12 67 0 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
3 1 1 0 5 0 1 5 104 4 7 2 0 0 2 83 0 2 2 14 67 0 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
1 0 63 60 54 52 51 49 44 42 30 20 8 6 0 82 1 82 8 15
CALL[ ]	/* CallFunction */";
};
width = 653;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(452,0,ls),
(465,0,o),
(472,12,o),
(472,24,cs),
(472,47,o),
(457,51,o),
(442,51,cs),
(351,51,l),
(351,755,l),
(516,755,ls),
(551,755,o),
(553,745,o),
(553,706,cs),
(553,610,ls),
(553,567,o),
(556,555,o),
(587,555,cs),
(606,555,o),
(620,559,o),
(620,599,cs),
(620,623,o),
(619,656,o),
(619,693,cs),
(619,704,o),
(619,718,o),
(620,735,cs),
(620,752,o),
(620,767,o),
(620,778,cs),
(620,817,o),
(614,821,o),
(582,821,cs),
(535,821,o),
(491,821,o),
(450,820,cs),
(409,819,o),
(364,819,o),
(317,819,cs),
(270,819,o),
(226,819,o),
(185,820,cs),
(144,821,o),
(99,821,o),
(52,821,cs),
(21,821,o),
(14,817,o),
(14,778,cs),
(14,767,o),
(14,752,o),
(15,735,cs),
(15,718,o),
(15,704,o),
(15,693,cs),
(15,659,o),
(14,645,o),
(14,599,cs),
(14,559,o),
(30,555,o),
(47,555,cs),
(72,555,o),
(81,567,o),
(81,610,cs),
(81,706,ls),
(81,745,o),
(83,755,o),
(118,755,cs),
(276,755,l),
(276,755,l),
(276,651,o),
(280,505,o),
(280,401,cs),
(280,346,o),
(279,294,o),
(278,245,cs),
(277,196,o),
(276,145,o),
(276,94,cs),
(276,49,o),
(232,48,o),
(208,48,cs),
(196,48,o),
(179,46,o),
(179,23,cs),
(179,2,o),
(201,0,o),
(220,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
3 1 1 0 5 0 1 5 104 4 8 2 0 0 2 83 0 2 2 12 67 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
3 1 1 0 5 0 1 5 104 4 8 2 0 0 2 83 0 2 2 14 67 7 1 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
1 0 66 63 59 56 52 50 49 47 42 40 28 20 8 6 0 77 1 77 9 15
CALL[ ]	/* CallFunction */";
};
width = 635;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(429,0,ls),
(442,0,o),
(449,4,o),
(449,13,cs),
(449,24,o),
(434,31,o),
(419,31,cs),
(323,31,l),
(323,785,l),
(518,785,ls),
(553,785,o),
(555,775,o),
(555,736,cs),
(555,620,ls),
(555,599,o),
(556,584,o),
(558,577,cs),
(560,569,o),
(565,565,o),
(574,565,cs),
(579,565,o),
(584,567,o),
(587,572,cs),
(590,577,o),
(592,589,o),
(592,609,cs),
(592,620,o),
(592,634,o),
(592,651,cs),
(591,668,o),
(591,682,o),
(591,693,cs),
(591,704,o),
(591,718,o),
(592,735,cs),
(592,752,o),
(592,767,o),
(592,778,cs),
(592,817,o),
(586,821,o),
(554,821,cs),
(482,821,o),
(376,819,o),
(304,819,cs),
(232,819,o),
(126,821,o),
(54,821,cs),
(22,821,o),
(16,817,o),
(16,778,cs),
(16,767,o),
(16,752,o),
(17,735,cs),
(17,718,o),
(17,704,o),
(17,693,cs),
(17,682,o),
(17,668,o),
(17,651,cs),
(16,634,o),
(16,620,o),
(16,609,cs),
(16,589,o),
(18,577,o),
(21,572,cs),
(24,567,o),
(29,565,o),
(34,565,cs),
(43,565,o),
(48,569,o),
(50,577,cs),
(52,584,o),
(53,599,o),
(53,620,cs),
(53,736,ls),
(53,775,o),
(55,785,o),
(90,785,cs),
(278,785,l),
(278,673,o),
(282,517,o),
(282,401,cs),
(282,342,o),
(281,287,o),
(280,235,cs),
(279,182,o),
(278,129,o),
(278,74,cs),
(278,30,o),
(238,28,o),
(205,28,cs),
(193,28,o),
(176,25,o),
(176,13,cs),
(176,2,o),
(198,0,o),
(217,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
3 1 1 0 5 0 1 5 104 4 8 2 0 0 2 83 0 2 2 12 67 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
3 1 1 0 5 0 1 5 104 4 8 2 0 0 2 83 0 2 2 14 67 7 1 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
1 0 65 62 58 55 52 50 49 47 42 40 30 18 8 6 0 76 1 76 9 15
CALL[ ]	/* CallFunction */";
};
width = 609;
}
);
note = T;
unicode = 84;
},
{
glyphname = Tbar;
kernLeft = T;
kernRight = T;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(465,0,ls),
(482,0,o),
(492,17,o),
(492,32,cs),
(492,59,o),
(467,67,o),
(450,67,cs),
(371,67,l),
(371,394,l),
(457,394,ls),
(486,394,o),
(493,426,o),
(493,439,cs),
(493,456,o),
(480,480,o),
(465,480,cs),
(454,480,o),
(440,480,o),
(424,479,cs),
(407,478,o),
(390,478,o),
(371,477,c),
(371,737,l),
(515,737,ls),
(550,737,o),
(552,728,o),
(552,688,cs),
(552,614,ls),
(552,571,o),
(563,559,o),
(600,559,cs),
(619,559,o),
(640,563,o),
(640,603,cs),
(640,625,o),
(639,658,o),
(639,693,cs),
(639,704,o),
(639,718,o),
(640,735,cs),
(640,752,o),
(640,767,o),
(640,778,cs),
(640,817,o),
(634,821,o),
(602,821,cs),
(553,821,o),
(507,821,o),
(464,820,cs),
(421,819,o),
(375,819,o),
(326,819,cs),
(248,819,o),
(129,821,o),
(51,821,cs),
(20,821,o),
(13,817,o),
(13,778,cs),
(13,767,o),
(13,752,o),
(14,735,cs),
(14,718,o),
(14,704,o),
(14,693,cs),
(14,654,o),
(13,654,o),
(13,603,cs),
(13,564,o),
(37,559,o),
(56,559,cs),
(84,559,o),
(101,571,o),
(101,614,cs),
(101,688,ls),
(101,727,o),
(103,737,o),
(138,737,cs),
(275,737,l),
(275,737,l),
(275,658,o),
(277,564,o),
(278,477,c),
(245,478,o),
(208,479,o),
(196,479,cs),
(173,479,o),
(163,453,o),
(163,436,cs),
(163,419,o),
(177,393,o),
(196,393,cs),
(279,393,l),
(279,290,o),
(275,215,o),
(275,120,cs),
(275,77,o),
(244,73,o),
(209,70,cs),
(178,67,o),
(163,53,o),
(163,26,cs),
(163,3,o),
(186,0,o),
(205,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
3 1 1 0 5 0 1 5 104 4 11 2 0 0 2 83 0 2 2 12 67 9 1 6 6 5 83 10 1 5 5 23 67 0 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
3 1 1 0 5 0 1 5 104 10 1 5 9 1 6 7 5 6 91 4 11 2 0 0 2 83 0 2 2 12 67 0 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
3 1 1 0 5 0 1 5 104 10 1 5 9 1 6 7 5 6 91 4 11 2 0 0 2 83 0 2 2 14 67 0 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 100 96 92 90 76 73 67 65 64 62 56 52 51 49 44 42 30 20 8 6 0 103 1 103 12 15
CALL[ ]	/* CallFunction */";
};
width = 653;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(452,0,ls),
(465,0,o),
(472,12,o),
(472,24,cs),
(472,47,o),
(457,51,o),
(442,51,cs),
(351,51,l),
(351,755,l),
(516,755,ls),
(551,755,o),
(553,745,o),
(553,706,cs),
(553,610,ls),
(553,567,o),
(556,555,o),
(587,555,cs),
(606,555,o),
(620,559,o),
(620,599,cs),
(620,623,o),
(619,656,o),
(619,693,cs),
(619,704,o),
(619,718,o),
(620,735,cs),
(620,752,o),
(620,767,o),
(620,778,cs),
(620,817,o),
(614,821,o),
(582,821,cs),
(535,821,o),
(491,821,o),
(450,820,cs),
(409,819,o),
(364,819,o),
(317,819,cs),
(270,819,o),
(226,819,o),
(185,820,cs),
(144,821,o),
(99,821,o),
(52,821,cs),
(21,821,o),
(14,817,o),
(14,778,cs),
(14,767,o),
(14,752,o),
(15,735,cs),
(15,718,o),
(15,704,o),
(15,693,cs),
(15,659,o),
(14,645,o),
(14,599,cs),
(14,559,o),
(30,555,o),
(47,555,cs),
(72,555,o),
(81,567,o),
(81,610,cs),
(81,706,ls),
(81,745,o),
(83,755,o),
(118,755,cs),
(276,755,l),
(276,755,l),
(276,651,o),
(280,505,o),
(280,401,cs),
(280,346,o),
(279,294,o),
(278,245,cs),
(277,196,o),
(276,145,o),
(276,94,cs),
(276,49,o),
(232,48,o),
(208,48,cs),
(196,48,o),
(179,46,o),
(179,23,cs),
(179,2,o),
(201,0,o),
(220,0,cs)
);
},
{
closed = 1;
nodes = (
(262,402,o),
(369,403,o),
(448,403,cs),
(470,403,o),
(477,426,o),
(477,439,cs),
(477,452,o),
(467,471,o),
(456,471,cs),
(440,471,o),
(420,471,o),
(396,470,cs),
(372,469,o),
(346,468,o),
(318,468,cs),
(274,468,o),
(220,470,o),
(187,470,cs),
(168,470,o),
(161,449,o),
(161,436,cs),
(161,423,o),
(172,402,o),
(187,402,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
5 1 3 2 0 2 3 0 104 6 11 2 2 2 4 83 0 4 4 12 67 0 1 1 0 83 10 1 0 0 23 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
5 1 3 2 0 2 3 0 104 10 1 0 0 1 7 0 1 91 6 11 2 2 2 4 83 0 4 4 12 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
5 1 3 2 0 2 3 0 104 10 1 0 0 1 7 0 1 91 6 11 2 2 2 4 83 0 4 4 14 67 9 1 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
28 27 1 0 93 90 86 83 79 77 76 74 69 67 55 47 35 33 27 104 28 104 14 7 0 26 1 18 12 15
CALL[ ]	/* CallFunction */";
};
width = 635;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(429,0,ls),
(442,0,o),
(449,4,o),
(449,13,cs),
(449,24,o),
(434,31,o),
(419,31,cs),
(323,31,l),
(323,417,l),
(346,417,o),
(367,417,o),
(388,418,cs),
(408,418,o),
(424,418,o),
(435,418,cs),
(450,418,o),
(454,432,o),
(454,439,cs),
(454,446,o),
(448,456,o),
(443,456,cs),
(428,456,o),
(411,456,o),
(390,455,cs),
(369,454,o),
(347,453,o),
(323,453,c),
(323,785,l),
(518,785,ls),
(553,785,o),
(555,775,o),
(555,736,cs),
(555,620,ls),
(555,599,o),
(556,584,o),
(558,577,cs),
(560,569,o),
(565,565,o),
(574,565,cs),
(579,565,o),
(584,567,o),
(587,572,cs),
(590,577,o),
(592,589,o),
(592,609,cs),
(592,620,o),
(592,634,o),
(592,651,cs),
(591,668,o),
(591,682,o),
(591,693,cs),
(591,704,o),
(591,718,o),
(592,735,cs),
(592,752,o),
(592,767,o),
(592,778,cs),
(592,817,o),
(586,821,o),
(554,821,cs),
(482,821,o),
(376,819,o),
(304,819,cs),
(232,819,o),
(126,821,o),
(54,821,cs),
(22,821,o),
(16,817,o),
(16,778,cs),
(16,767,o),
(16,752,o),
(17,735,cs),
(17,718,o),
(17,704,o),
(17,693,cs),
(17,682,o),
(17,668,o),
(17,651,cs),
(16,634,o),
(16,620,o),
(16,609,cs),
(16,589,o),
(18,577,o),
(21,572,cs),
(24,567,o),
(29,565,o),
(34,565,cs),
(43,565,o),
(48,569,o),
(50,577,cs),
(52,584,o),
(53,599,o),
(53,620,cs),
(53,736,ls),
(53,775,o),
(55,785,o),
(90,785,cs),
(278,785,l),
(278,670,o),
(282,600,o),
(282,453,c),
(242,453,o),
(200,455,o),
(174,455,cs),
(163,455,o),
(158,443,o),
(158,436,cs),
(158,429,o),
(165,417,o),
(174,417,cs),
(282,417,l),
(282,401,ls),
(282,342,o),
(281,287,o),
(280,235,cs),
(279,182,o),
(278,129,o),
(278,74,cs),
(278,30,o),
(238,28,o),
(205,28,cs),
(193,28,o),
(176,25,o),
(176,13,cs),
(176,2,o),
(198,0,o),
(217,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
3 1 1 0 5 0 1 5 104 4 12 2 0 0 2 83 0 2 2 12 67 10 1 6 6 5 83 11 1 5 5 15 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
3 1 1 0 5 0 1 5 104 11 1 5 10 1 6 7 5 6 91 4 12 2 0 0 2 83 0 2 2 12 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
3 1 1 0 5 0 1 5 104 11 1 5 10 1 6 7 5 6 91 4 12 2 0 0 2 83 0 2 2 14 67 9 1 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 97 91 87 85 78 75 71 68 65 63 62 58 54 50 49 47 42 40 30 18 8 6 0 102 1 102 13 15
CALL[ ]	/* CallFunction */";
};
width = 609;
}
);
note = Tbar;
unicode = 358;
},
{
glyphname = Tcaron;
kernLeft = T;
kernRight = T;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(465,0,ls),
(482,0,o),
(492,17,o),
(492,32,cs),
(492,59,o),
(467,67,o),
(450,67,cs),
(371,67,l),
(371,737,l),
(515,737,ls),
(550,737,o),
(552,728,o),
(552,688,cs),
(552,614,ls),
(552,571,o),
(563,559,o),
(600,559,cs),
(619,559,o),
(640,563,o),
(640,603,cs),
(640,625,o),
(639,658,o),
(639,693,cs),
(639,704,o),
(639,718,o),
(640,735,cs),
(640,752,o),
(640,767,o),
(640,778,cs),
(640,817,o),
(634,821,o),
(602,821,cs),
(553,821,o),
(507,821,o),
(464,820,cs),
(421,819,o),
(375,819,o),
(326,819,cs),
(248,819,o),
(129,821,o),
(51,821,cs),
(20,821,o),
(13,817,o),
(13,778,cs),
(13,767,o),
(13,752,o),
(14,735,cs),
(14,718,o),
(14,704,o),
(14,693,cs),
(14,654,o),
(13,654,o),
(13,603,cs),
(13,564,o),
(37,559,o),
(56,559,cs),
(84,559,o),
(101,571,o),
(101,614,cs),
(101,688,ls),
(101,727,o),
(103,737,o),
(138,737,cs),
(275,737,l),
(275,737,l),
(275,636,o),
(279,502,o),
(279,401,cs),
(279,295,o),
(275,218,o),
(275,120,cs),
(275,77,o),
(244,73,o),
(209,70,cs),
(178,67,o),
(163,53,o),
(163,26,cs),
(163,3,o),
(186,0,o),
(205,0,cs)
);
},
{
closed = 1;
nodes = (
(341,830,o),
(451,909,o),
(451,951,cs),
(451,960,o),
(449,972,o),
(438,972,cs),
(423,972,o),
(365,952,o),
(318,922,c),
(278,948,o),
(217,972,o),
(199,972,cs),
(190,972,o),
(186,965,o),
(186,958,cs),
(186,931,o),
(214,901,o),
(245,875,cs),
(272,852,o),
(307,830,o),
(318,830,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
2 10 2 0 1 0 106 0 1 5 1 106 6 1 4 3 8 3 4 8 104 7 11 2 3 3 5 83 0 5 5 12 67 0 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
2 10 2 0 1 0 106 0 1 5 1 106 6 1 4 3 8 3 4 8 104 7 11 2 3 3 5 83 0 5 5 14 67 0 8 8 9 83 0 9 9 13 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
27 26 1 0 89 86 80 78 77 75 70 68 56 46 34 32 26 108 27 108 17 15 9 7 0 25 1 25 12 15
CALL[ ]	/* CallFunction */";
};
width = 653;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(452,0,ls),
(465,0,o),
(472,12,o),
(472,24,cs),
(472,47,o),
(457,51,o),
(442,51,cs),
(351,51,l),
(351,755,l),
(516,755,ls),
(551,755,o),
(553,745,o),
(553,706,cs),
(553,610,ls),
(553,567,o),
(556,555,o),
(587,555,cs),
(606,555,o),
(620,559,o),
(620,599,cs),
(620,623,o),
(619,656,o),
(619,693,cs),
(619,704,o),
(619,718,o),
(620,735,cs),
(620,752,o),
(620,767,o),
(620,778,cs),
(620,817,o),
(614,821,o),
(582,821,cs),
(535,821,o),
(491,821,o),
(450,820,cs),
(409,819,o),
(364,819,o),
(317,819,cs),
(270,819,o),
(226,819,o),
(185,820,cs),
(144,821,o),
(99,821,o),
(52,821,cs),
(21,821,o),
(14,817,o),
(14,778,cs),
(14,767,o),
(14,752,o),
(15,735,cs),
(15,718,o),
(15,704,o),
(15,693,cs),
(15,659,o),
(14,645,o),
(14,599,cs),
(14,559,o),
(30,555,o),
(47,555,cs),
(72,555,o),
(81,567,o),
(81,610,cs),
(81,706,ls),
(81,745,o),
(83,755,o),
(118,755,cs),
(276,755,l),
(276,755,l),
(276,651,o),
(280,505,o),
(280,401,cs),
(280,346,o),
(279,294,o),
(278,245,cs),
(277,196,o),
(276,145,o),
(276,94,cs),
(276,49,o),
(232,48,o),
(208,48,cs),
(196,48,o),
(179,46,o),
(179,23,cs),
(179,2,o),
(201,0,o),
(220,0,cs)
);
},
{
closed = 1;
nodes = (
(335,847,o),
(441,919,o),
(441,955,cs),
(441,964,o),
(438,972,o),
(430,972,cs),
(422,972,o),
(374,959,o),
(310,921,c),
(270,945,o),
(209,972,o),
(191,972,cs),
(184,972,o),
(180,968,o),
(180,959,cs),
(180,918,o),
(288,847,o),
(310,847,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
2 11 2 0 1 0 106 0 1 5 1 106 6 1 4 3 8 3 4 8 104 7 12 2 3 3 5 83 0 5 5 12 67 10 1 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
2 11 2 0 1 0 106 0 1 5 1 106 6 1 4 3 8 3 4 8 104 7 12 2 3 3 5 83 0 5 5 14 67 10 1 8 8 9 83 0 9 9 13 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
26 25 1 0 91 88 84 81 77 75 74 72 67 65 53 45 33 31 25 102 26 102 16 14 9 7 0 24 1 24 13 15
CALL[ ]	/* CallFunction */";
};
width = 635;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(429,0,ls),
(442,0,o),
(449,4,o),
(449,13,cs),
(449,24,o),
(434,31,o),
(419,31,cs),
(323,31,l),
(323,785,l),
(518,785,ls),
(553,785,o),
(555,775,o),
(555,736,cs),
(555,620,ls),
(555,599,o),
(556,584,o),
(558,577,cs),
(560,569,o),
(565,565,o),
(574,565,cs),
(579,565,o),
(584,567,o),
(587,572,cs),
(590,577,o),
(592,589,o),
(592,609,cs),
(592,620,o),
(592,634,o),
(592,651,cs),
(591,668,o),
(591,682,o),
(591,693,cs),
(591,704,o),
(591,718,o),
(592,735,cs),
(592,752,o),
(592,767,o),
(592,778,cs),
(592,817,o),
(586,821,o),
(554,821,cs),
(482,821,o),
(376,819,o),
(304,819,cs),
(232,819,o),
(126,821,o),
(54,821,cs),
(22,821,o),
(16,817,o),
(16,778,cs),
(16,767,o),
(16,752,o),
(17,735,cs),
(17,718,o),
(17,704,o),
(17,693,cs),
(17,682,o),
(17,668,o),
(17,651,cs),
(16,634,o),
(16,620,o),
(16,609,cs),
(16,589,o),
(18,577,o),
(21,572,cs),
(24,567,o),
(29,565,o),
(34,565,cs),
(43,565,o),
(48,569,o),
(50,577,cs),
(52,584,o),
(53,599,o),
(53,620,cs),
(53,736,ls),
(53,775,o),
(55,785,o),
(90,785,cs),
(278,785,l),
(278,673,o),
(282,517,o),
(282,401,cs),
(282,342,o),
(281,287,o),
(280,235,cs),
(279,182,o),
(278,129,o),
(278,74,cs),
(278,30,o),
(238,28,o),
(205,28,cs),
(193,28,o),
(176,25,o),
(176,13,cs),
(176,2,o),
(198,0,o),
(217,0,cs)
);
},
{
closed = 1;
nodes = (
(325,875,o),
(427,936,o),
(427,961,cs),
(427,968,o),
(424,972,o),
(419,972,cs),
(411,972,o),
(363,953,o),
(299,919,c),
(235,953,o),
(187,972,o),
(180,972,cs),
(175,972,o),
(172,968,o),
(172,961,cs),
(172,936,o),
(276,875,o),
(299,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
19 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
2 11 2 0 1 0 106 0 1 5 1 106 6 1 4 3 8 3 4 8 104 7 12 2 3 3 5 83 0 5 5 12 67 10 1 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
2 11 2 0 1 0 106 0 1 5 1 106 6 1 4 3 8 3 4 8 104 7 12 2 3 3 5 83 0 5 5 14 67 10 1 8 8 9 83 0 9 9 13 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
25 24 1 0 89 86 82 79 76 74 73 71 66 64 54 42 32 30 24 100 25 100 15 13 8 6 0 23 1 23 13 15
CALL[ ]	/* CallFunction */";
};
width = 609;
}
);
note = Tcaron;
unicode = 356;
},
{
glyphname = Tcedilla;
kernLeft = T;
kernRight = T;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(467,0,ls),
(484,0,o),
(494,17,o),
(494,32,cs),
(494,59,o),
(469,67,o),
(452,67,cs),
(373,67,l),
(373,737,l),
(517,737,ls),
(552,737,o),
(554,728,o),
(554,688,cs),
(554,614,ls),
(554,571,o),
(565,559,o),
(602,559,cs),
(621,559,o),
(642,563,o),
(642,603,cs),
(642,625,o),
(641,658,o),
(641,693,cs),
(641,704,o),
(641,718,o),
(642,735,cs),
(642,752,o),
(642,767,o),
(642,778,cs),
(642,817,o),
(636,821,o),
(604,821,cs),
(555,821,o),
(509,821,o),
(466,820,cs),
(423,819,o),
(377,819,o),
(328,819,cs),
(250,819,o),
(131,821,o),
(53,821,cs),
(22,821,o),
(15,817,o),
(15,778,cs),
(15,767,o),
(15,752,o),
(16,735,cs),
(16,718,o),
(16,704,o),
(16,693,cs),
(16,654,o),
(15,654,o),
(15,603,cs),
(15,564,o),
(39,559,o),
(58,559,cs),
(86,559,o),
(103,571,o),
(103,614,cs),
(103,688,ls),
(103,727,o),
(105,737,o),
(140,737,cs),
(277,737,l),
(277,737,l),
(277,636,o),
(281,502,o),
(281,401,cs),
(281,295,o),
(277,218,o),
(277,120,cs),
(277,77,o),
(246,73,o),
(211,70,cs),
(180,67,o),
(165,53,o),
(165,26,cs),
(165,3,o),
(188,0,o),
(207,0,cs)
);
},
{
closed = 1;
nodes = (
(322,-245,o),
(385,-203,o),
(385,-126,cs),
(385,-69,o),
(349,-45,o),
(317,-45,cs),
(273,-45,o),
(257,-75,o),
(257,-103,cs),
(257,-134,o),
(293,-136,o),
(293,-153,cs),
(293,-173,o),
(291,-188,o),
(286,-197,cs),
(281,-207,o),
(278,-215,o),
(278,-222,cs),
(278,-245,o),
(297,-245,o),
(304,-245,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
5 1 3 2 7 2 3 7 104 6 9 2 2 2 4 83 0 4 4 12 67 0 7 7 8 83 0 8 8 13 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
5 1 3 2 7 2 3 7 104 0 0 0 1 0 1 87 6 9 2 2 2 4 83 0 4 4 12 67 0 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
5 1 3 2 7 2 3 7 104 0 0 0 1 0 1 87 6 9 2 2 2 4 83 0 4 4 14 67 0 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
23 22 85 82 76 74 73 71 66 64 52 42 30 28 22 104 23 104 38 34 10 17
CALL[ ]	/* CallFunction */";
};
width = 657;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(453,0,ls),
(466,0,o),
(473,12,o),
(473,24,cs),
(473,47,o),
(458,51,o),
(443,51,cs),
(352,51,l),
(352,755,l),
(517,755,ls),
(552,755,o),
(554,745,o),
(554,706,cs),
(554,610,ls),
(554,567,o),
(557,555,o),
(588,555,cs),
(607,555,o),
(621,559,o),
(621,599,cs),
(621,623,o),
(620,656,o),
(620,693,cs),
(620,704,o),
(620,718,o),
(621,735,cs),
(621,752,o),
(621,767,o),
(621,778,cs),
(621,817,o),
(615,821,o),
(583,821,cs),
(536,821,o),
(492,821,o),
(451,820,cs),
(410,819,o),
(365,819,o),
(318,819,cs),
(271,819,o),
(227,819,o),
(186,820,cs),
(145,821,o),
(100,821,o),
(53,821,cs),
(22,821,o),
(15,817,o),
(15,778,cs),
(15,767,o),
(15,752,o),
(16,735,cs),
(16,718,o),
(16,704,o),
(16,693,cs),
(16,659,o),
(15,645,o),
(15,599,cs),
(15,559,o),
(31,555,o),
(48,555,cs),
(73,555,o),
(82,567,o),
(82,610,cs),
(82,706,ls),
(82,745,o),
(84,755,o),
(119,755,cs),
(277,755,l),
(277,755,l),
(277,651,o),
(281,505,o),
(281,401,cs),
(281,346,o),
(280,294,o),
(279,245,cs),
(278,196,o),
(277,145,o),
(277,94,cs),
(277,49,o),
(233,48,o),
(209,48,cs),
(197,48,o),
(180,46,o),
(180,23,cs),
(180,2,o),
(202,0,o),
(221,0,cs)
);
},
{
closed = 1;
nodes = (
(324,-228,o),
(365,-178,o),
(365,-124,cs),
(365,-71,o),
(335,-52,o),
(308,-52,cs),
(271,-52,o),
(256,-77,o),
(256,-101,cs),
(256,-133,o),
(292,-132,o),
(292,-149,cs),
(292,-166,o),
(290,-179,o),
(286,-187,cs),
(281,-196,o),
(279,-203,o),
(279,-209,cs),
(279,-226,o),
(293,-228,o),
(300,-228,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
3 1 1 0 5 0 1 5 104 4 10 2 0 0 2 83 0 2 2 12 67 7 1 5 5 6 83 0 6 6 13 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
3 1 1 0 5 0 1 5 104 0 8 0 9 8 9 87 4 10 2 0 0 2 83 0 2 2 12 67 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
3 1 1 0 5 0 1 5 104 0 8 0 9 8 9 87 4 10 2 0 0 2 83 0 2 2 14 67 7 1 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
2 1 91 89 83 81 67 64 60 57 53 51 50 48 43 41 29 21 9 7 1 78 2 78 11 26
CALL[ ]	/* CallFunction */";
};
width = 637;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(429,0,ls),
(442,0,o),
(449,4,o),
(449,13,cs),
(449,24,o),
(434,31,o),
(419,31,cs),
(323,31,l),
(323,785,l),
(518,785,ls),
(553,785,o),
(555,775,o),
(555,736,cs),
(555,620,ls),
(555,599,o),
(556,584,o),
(558,577,cs),
(560,569,o),
(565,565,o),
(574,565,cs),
(579,565,o),
(584,567,o),
(587,572,cs),
(590,577,o),
(592,589,o),
(592,609,cs),
(592,620,o),
(592,634,o),
(592,651,cs),
(591,668,o),
(591,682,o),
(591,693,cs),
(591,704,o),
(591,718,o),
(592,735,cs),
(592,752,o),
(592,767,o),
(592,778,cs),
(592,817,o),
(586,821,o),
(554,821,cs),
(482,821,o),
(376,819,o),
(304,819,cs),
(232,819,o),
(126,821,o),
(54,821,cs),
(22,821,o),
(16,817,o),
(16,778,cs),
(16,767,o),
(16,752,o),
(17,735,cs),
(17,718,o),
(17,704,o),
(17,693,cs),
(17,682,o),
(17,668,o),
(17,651,cs),
(16,634,o),
(16,620,o),
(16,609,cs),
(16,589,o),
(18,577,o),
(21,572,cs),
(24,567,o),
(29,565,o),
(34,565,cs),
(43,565,o),
(48,569,o),
(50,577,cs),
(52,584,o),
(53,599,o),
(53,620,cs),
(53,736,ls),
(53,775,o),
(55,785,o),
(90,785,cs),
(278,785,l),
(278,673,o),
(282,517,o),
(282,401,cs),
(282,342,o),
(281,287,o),
(280,235,cs),
(279,182,o),
(278,129,o),
(278,74,cs),
(278,30,o),
(238,28,o),
(205,28,cs),
(193,28,o),
(176,25,o),
(176,13,cs),
(176,2,o),
(198,0,o),
(217,0,cs)
);
},
{
closed = 1;
nodes = (
(321,-203,o),
(337,-153,o),
(337,-124,cs),
(337,-79,o),
(315,-67,o),
(295,-67,cs),
(268,-67,o),
(255,-84,o),
(255,-101,cs),
(255,-133,o),
(291,-128,o),
(291,-145,cs),
(291,-152,o),
(289,-160,o),
(286,-169,cs),
(282,-179,o),
(280,-186,o),
(280,-191,cs),
(280,-198,o),
(287,-203,o),
(294,-203,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
5 1 3 2 7 2 3 7 104 6 10 2 2 2 4 83 0 4 4 12 67 9 1 7 7 8 83 0 8 8 13 67 0 0 0 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
5 1 3 2 7 2 3 7 104 0 0 0 1 0 1 87 6 10 2 2 2 4 83 0 4 4 12 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
5 1 3 2 7 2 3 7 104 0 0 0 1 0 1 87 6 10 2 2 2 4 83 0 4 4 14 67 9 1 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
23 22 87 84 80 77 74 72 71 69 64 62 52 40 30 28 22 98 23 98 38 34 11 17
CALL[ ]	/* CallFunction */";
};
width = 609;
}
);
note = uni0162;
unicode = 354;
},
{
glyphname = Tcommaaccent;
kernLeft = T;
kernRight = T;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(467,0,ls),
(484,0,o),
(494,17,o),
(494,32,cs),
(494,59,o),
(469,67,o),
(452,67,cs),
(373,67,l),
(373,737,l),
(517,737,ls),
(552,737,o),
(554,728,o),
(554,688,cs),
(554,614,ls),
(554,571,o),
(565,559,o),
(602,559,cs),
(621,559,o),
(642,563,o),
(642,603,cs),
(642,625,o),
(641,658,o),
(641,693,cs),
(641,704,o),
(641,718,o),
(642,735,cs),
(642,752,o),
(642,767,o),
(642,778,cs),
(642,817,o),
(636,821,o),
(604,821,cs),
(555,821,o),
(509,821,o),
(466,820,cs),
(423,819,o),
(377,819,o),
(328,819,cs),
(250,819,o),
(131,821,o),
(53,821,cs),
(22,821,o),
(15,817,o),
(15,778,cs),
(15,767,o),
(15,752,o),
(16,735,cs),
(16,718,o),
(16,704,o),
(16,693,cs),
(16,654,o),
(15,654,o),
(15,603,cs),
(15,564,o),
(39,559,o),
(58,559,cs),
(86,559,o),
(103,571,o),
(103,614,cs),
(103,688,ls),
(103,727,o),
(105,737,o),
(140,737,cs),
(277,737,l),
(277,737,l),
(277,636,o),
(281,502,o),
(281,401,cs),
(281,295,o),
(277,218,o),
(277,120,cs),
(277,77,o),
(246,73,o),
(211,70,cs),
(180,67,o),
(165,53,o),
(165,26,cs),
(165,3,o),
(188,0,o),
(207,0,cs)
);
},
{
closed = 1;
nodes = (
(322,-242,o),
(385,-200,o),
(385,-123,cs),
(385,-66,o),
(349,-42,o),
(317,-42,cs),
(273,-42,o),
(257,-72,o),
(257,-100,cs),
(257,-131,o),
(293,-133,o),
(293,-150,cs),
(293,-170,o),
(291,-185,o),
(286,-194,cs),
(281,-204,o),
(278,-212,o),
(278,-219,cs),
(278,-242,o),
(297,-242,o),
(304,-242,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
5 1 3 2 7 2 3 7 104 6 9 2 2 2 4 83 0 4 4 12 67 0 7 7 8 83 0 8 8 13 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
5 1 3 2 7 2 3 7 104 0 0 0 1 0 1 87 6 9 2 2 2 4 83 0 4 4 12 67 0 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
5 1 3 2 7 2 3 7 104 0 0 0 1 0 1 87 6 9 2 2 2 4 83 0 4 4 14 67 0 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
23 22 85 82 76 74 73 71 66 64 52 42 30 28 22 104 23 104 38 34 10 17
CALL[ ]	/* CallFunction */";
};
width = 657;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(453,0,ls),
(466,0,o),
(473,12,o),
(473,24,cs),
(473,47,o),
(458,51,o),
(443,51,cs),
(352,51,l),
(352,755,l),
(517,755,ls),
(552,755,o),
(554,745,o),
(554,706,cs),
(554,610,ls),
(554,567,o),
(557,555,o),
(588,555,cs),
(607,555,o),
(621,559,o),
(621,599,cs),
(621,623,o),
(620,656,o),
(620,693,cs),
(620,704,o),
(620,718,o),
(621,735,cs),
(621,752,o),
(621,767,o),
(621,778,cs),
(621,817,o),
(615,821,o),
(583,821,cs),
(536,821,o),
(492,821,o),
(451,820,cs),
(410,819,o),
(365,819,o),
(318,819,cs),
(271,819,o),
(227,819,o),
(186,820,cs),
(145,821,o),
(100,821,o),
(53,821,cs),
(22,821,o),
(15,817,o),
(15,778,cs),
(15,767,o),
(15,752,o),
(16,735,cs),
(16,718,o),
(16,704,o),
(16,693,cs),
(16,659,o),
(15,645,o),
(15,599,cs),
(15,559,o),
(31,555,o),
(48,555,cs),
(73,555,o),
(82,567,o),
(82,610,cs),
(82,706,ls),
(82,745,o),
(84,755,o),
(119,755,cs),
(277,755,l),
(277,755,l),
(277,651,o),
(281,505,o),
(281,401,cs),
(281,346,o),
(280,294,o),
(279,245,cs),
(278,196,o),
(277,145,o),
(277,94,cs),
(277,49,o),
(233,48,o),
(209,48,cs),
(197,48,o),
(180,46,o),
(180,23,cs),
(180,2,o),
(202,0,o),
(221,0,cs)
);
},
{
closed = 1;
nodes = (
(324,-226,o),
(365,-176,o),
(365,-122,cs),
(365,-69,o),
(335,-50,o),
(308,-50,cs),
(271,-50,o),
(256,-75,o),
(256,-99,cs),
(256,-131,o),
(292,-130,o),
(292,-147,cs),
(292,-164,o),
(290,-177,o),
(286,-185,cs),
(281,-194,o),
(279,-201,o),
(279,-207,cs),
(279,-224,o),
(293,-226,o),
(300,-226,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
3 1 1 0 5 0 1 5 104 4 10 2 0 0 2 83 0 2 2 12 67 7 1 5 5 6 83 0 6 6 13 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
3 1 1 0 5 0 1 5 104 0 8 0 9 8 9 87 4 10 2 0 0 2 83 0 2 2 12 67 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
3 1 1 0 5 0 1 5 104 0 8 0 9 8 9 87 4 10 2 0 0 2 83 0 2 2 14 67 7 1 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
2 1 91 89 83 81 67 64 60 57 53 51 50 48 43 41 29 21 9 7 1 78 2 78 11 26
CALL[ ]	/* CallFunction */";
};
width = 637;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(429,0,ls),
(442,0,o),
(449,4,o),
(449,13,cs),
(449,24,o),
(434,31,o),
(419,31,cs),
(323,31,l),
(323,785,l),
(518,785,ls),
(553,785,o),
(555,775,o),
(555,736,cs),
(555,620,ls),
(555,599,o),
(556,584,o),
(558,577,cs),
(560,569,o),
(565,565,o),
(574,565,cs),
(579,565,o),
(584,567,o),
(587,572,cs),
(590,577,o),
(592,589,o),
(592,609,cs),
(592,620,o),
(592,634,o),
(592,651,cs),
(591,668,o),
(591,682,o),
(591,693,cs),
(591,704,o),
(591,718,o),
(592,735,cs),
(592,752,o),
(592,767,o),
(592,778,cs),
(592,817,o),
(586,821,o),
(554,821,cs),
(482,821,o),
(376,819,o),
(304,819,cs),
(232,819,o),
(126,821,o),
(54,821,cs),
(22,821,o),
(16,817,o),
(16,778,cs),
(16,767,o),
(16,752,o),
(17,735,cs),
(17,718,o),
(17,704,o),
(17,693,cs),
(17,682,o),
(17,668,o),
(17,651,cs),
(16,634,o),
(16,620,o),
(16,609,cs),
(16,589,o),
(18,577,o),
(21,572,cs),
(24,567,o),
(29,565,o),
(34,565,cs),
(43,565,o),
(48,569,o),
(50,577,cs),
(52,584,o),
(53,599,o),
(53,620,cs),
(53,736,ls),
(53,775,o),
(55,785,o),
(90,785,cs),
(278,785,l),
(278,673,o),
(282,517,o),
(282,401,cs),
(282,342,o),
(281,287,o),
(280,235,cs),
(279,182,o),
(278,129,o),
(278,74,cs),
(278,30,o),
(238,28,o),
(205,28,cs),
(193,28,o),
(176,25,o),
(176,13,cs),
(176,2,o),
(198,0,o),
(217,0,cs)
);
},
{
closed = 1;
nodes = (
(321,-203,o),
(337,-153,o),
(337,-124,cs),
(337,-79,o),
(315,-67,o),
(295,-67,cs),
(268,-67,o),
(255,-84,o),
(255,-101,cs),
(255,-133,o),
(291,-128,o),
(291,-145,cs),
(291,-152,o),
(289,-160,o),
(286,-169,cs),
(282,-179,o),
(280,-186,o),
(280,-191,cs),
(280,-198,o),
(287,-203,o),
(294,-203,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
5 1 3 2 7 2 3 7 104 6 10 2 2 2 4 83 0 4 4 12 67 9 1 7 7 8 83 0 8 8 13 67 0 0 0 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
5 1 3 2 7 2 3 7 104 0 0 0 1 0 1 87 6 10 2 2 2 4 83 0 4 4 12 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
5 1 3 2 7 2 3 7 104 0 0 0 1 0 1 87 6 10 2 2 2 4 83 0 4 4 14 67 9 1 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
23 22 87 84 80 77 74 72 71 69 64 62 52 40 30 28 22 98 23 98 38 34 11 17
CALL[ ]	/* CallFunction */";
};
width = 609;
}
);
note = uni021A;
unicode = 538;
},
{
glyphname = U;
kernLeft = U;
kernRight = U;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(550,-14,o),
(658,76,o),
(658,272,cs),
(658,309,o),
(658,345,o),
(657,382,cs),
(656,419,o),
(656,455,o),
(656,492,cs),
(656,523,o),
(656,553,o),
(657,581,cs),
(658,608,o),
(658,638,o),
(658,670,cs),
(658,683,o),
(665,691,o),
(678,695,cs),
(691,698,o),
(709,700,o),
(732,700,cs),
(748,700,o),
(769,709,o),
(769,736,cs),
(769,759,o),
(761,767,o),
(718,767,cs),
(515,767,ls),
(486,767,o),
(468,756,o),
(468,736,cs),
(468,712,o),
(476,700,o),
(515,696,cs),
(555,692,o),
(567,686,o),
(567,663,cs),
(567,272,ls),
(567,169,o),
(521,66,o),
(394,66,cs),
(201,66,o),
(194,190,o),
(194,323,cs),
(194,729,l),
(194,729,l),
(194,754,o),
(234,754,o),
(277,754,cs),
(304,754,o),
(314,767,o),
(314,790,cs),
(314,813,o),
(301,821,o),
(258,821,cs),
(39,821,ls),
(27,821,o),
(2,815,o),
(2,790,cs),
(2,762,o),
(22,759,o),
(39,759,cs),
(59,759,o),
(75,758,o),
(86,755,cs),
(97,752,o),
(102,745,o),
(102,734,cs),
(102,689,o),
(102,644,o),
(103,600,cs),
(104,556,o),
(104,512,o),
(104,467,cs),
(104,444,o),
(104,422,o),
(104,400,cs),
(103,377,o),
(103,355,o),
(103,334,cs),
(103,257,o),
(105,172,o),
(123,125,cs),
(159,30,o),
(237,-14,o),
(393,-14,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 0 2 0 1 2 91 6 1 4 4 5 83 0 5 5 12 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 4 1 6 6 4 96 0 1 0 2 0 1 2 91 0 6 6 5 84 0 5 5 12 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 4 1 6 6 4 96 0 1 0 2 0 1 2 91 0 6 6 5 84 0 5 5 14 67 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
52 52 47 44 36 61 36 7 22
CALL[ ]	/* CallFunction */";
};
width = 784;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(540,-14,o),
(648,75,o),
(648,272,cs),
(648,309,o),
(648,345,o),
(647,382,cs),
(646,419,o),
(646,455,o),
(646,492,cs),
(646,525,o),
(646,559,o),
(647,592,cs),
(648,625,o),
(648,658,o),
(648,692,cs),
(648,716,o),
(709,717,o),
(728,717,cs),
(744,717,o),
(765,719,o),
(765,742,cs),
(765,751,o),
(762,758,o),
(756,762,cs),
(749,765,o),
(735,767,o),
(714,767,cs),
(518,767,ls),
(493,767,o),
(481,759,o),
(481,742,cs),
(481,722,o),
(503,717,o),
(518,717,cs),
(530,717,o),
(578,718,o),
(578,694,cs),
(578,272,ls),
(578,161,o),
(527,48,o),
(383,48,cs),
(191,48,o),
(184,178,o),
(184,323,cs),
(184,746,l),
(184,746,l),
(184,770,o),
(247,771,o),
(264,771,cs),
(280,771,o),
(301,777,o),
(301,796,cs),
(301,805,o),
(298,812,o),
(292,816,cs),
(285,819,o),
(271,821,o),
(250,821,cs),
(53,821,ls),
(41,821,o),
(16,817,o),
(16,796,cs),
(16,772,o),
(38,771,o),
(53,771,cs),
(65,771,o),
(113,772,o),
(113,748,cs),
(113,701,o),
(113,654,o),
(114,607,cs),
(115,560,o),
(115,514,o),
(115,467,cs),
(115,444,o),
(115,422,o),
(115,400,cs),
(114,377,o),
(114,355,o),
(114,334,cs),
(114,261,o),
(114,193,o),
(134,125,cs),
(161,30,o),
(261,-14,o),
(382,-14,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
78 75 71 68 64 61 45 52 51 56 36 8 20
CALL[ ]	/* CallFunction */";
};
width = 772;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(526,-14,o),
(634,76,o),
(634,272,cs),
(634,309,o),
(634,345,o),
(633,382,cs),
(632,419,o),
(632,455,o),
(632,492,cs),
(632,529,o),
(632,565,o),
(633,602,cs),
(634,638,o),
(634,675,o),
(634,712,cs),
(634,733,o),
(687,737,o),
(704,737,cs),
(720,737,o),
(741,737,o),
(741,752,cs),
(741,757,o),
(738,761,o),
(732,764,cs),
(725,766,o),
(711,767,o),
(690,767,cs),
(508,767,ls),
(496,767,o),
(471,767,o),
(471,752,cs),
(471,739,o),
(493,737,o),
(508,737,cs),
(535,737,o),
(594,737,o),
(594,714,cs),
(594,272,ls),
(594,146,o),
(535,18,o),
(368,18,cs),
(173,18,o),
(170,165,o),
(170,323,cs),
(170,766,ls),
(170,790,o),
(226,791,o),
(245,791,cs),
(261,791,o),
(282,791,o),
(282,806,cs),
(282,811,o),
(279,815,o),
(273,818,cs),
(266,820,o),
(252,821,o),
(231,821,cs),
(49,821,ls),
(37,821,o),
(12,821,o),
(12,806,cs),
(12,793,o),
(34,791,o),
(49,791,cs),
(79,791,o),
(129,791,o),
(129,768,cs),
(129,717,o),
(129,667,o),
(130,617,cs),
(131,567,o),
(131,517,o),
(131,467,cs),
(131,444,o),
(131,422,o),
(131,400,cs),
(130,377,o),
(130,355,o),
(130,334,cs),
(130,261,o),
(133,193,o),
(150,125,cs),
(174,31,o),
(260,-14,o),
(367,-14,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
79 76 72 69 65 62 45 52 52 56 36 8 20
CALL[ ]	/* CallFunction */";
};
width = 755;
}
);
note = U;
unicode = 85;
},
{
glyphname = Uacute;
kernLeft = U;
kernRight = U;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(550,-14,o),
(658,76,o),
(658,272,cs),
(658,309,o),
(658,345,o),
(657,382,cs),
(656,419,o),
(656,455,o),
(656,492,cs),
(656,523,o),
(656,553,o),
(657,581,cs),
(658,608,o),
(658,638,o),
(658,670,cs),
(658,683,o),
(665,691,o),
(678,695,cs),
(691,698,o),
(709,700,o),
(732,700,cs),
(748,700,o),
(769,709,o),
(769,736,cs),
(769,759,o),
(761,767,o),
(718,767,cs),
(515,767,ls),
(486,767,o),
(468,756,o),
(468,736,cs),
(468,712,o),
(476,700,o),
(515,696,cs),
(555,692,o),
(567,686,o),
(567,663,cs),
(567,272,ls),
(567,169,o),
(521,66,o),
(394,66,cs),
(201,66,o),
(194,190,o),
(194,323,cs),
(194,729,l),
(194,729,l),
(194,754,o),
(234,754,o),
(277,754,cs),
(304,754,o),
(314,767,o),
(314,790,cs),
(314,813,o),
(301,821,o),
(258,821,cs),
(39,821,ls),
(27,821,o),
(2,815,o),
(2,790,cs),
(2,762,o),
(22,759,o),
(39,759,cs),
(59,759,o),
(75,758,o),
(86,755,cs),
(97,752,o),
(102,745,o),
(102,734,cs),
(102,689,o),
(102,644,o),
(103,600,cs),
(104,556,o),
(104,512,o),
(104,467,cs),
(104,444,o),
(104,422,o),
(104,400,cs),
(103,377,o),
(103,355,o),
(103,334,cs),
(103,257,o),
(105,172,o),
(123,125,cs),
(159,30,o),
(237,-14,o),
(393,-14,cs)
);
},
{
closed = 1;
nodes = (
(399,841,o),
(486,897,o),
(486,936,cs),
(486,953,o),
(472,972,o),
(445,972,cs),
(407,972,o),
(331,899,o),
(331,872,cs),
(331,856,o),
(346,841,o),
(366,841,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 1 0 1 106 0 0 7 0 106 0 3 0 4 2 3 4 91 8 1 6 6 7 83 0 7 7 12 67 0 2 2 5 84 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 1 106 0 0 7 0 106 0 6 3 8 8 6 96 0 3 0 4 2 3 4 91 0 8 8 7 84 0 7 7 12 67 0 2 2 5 84 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 1 106 0 0 7 0 106 0 6 3 8 8 6 96 0 3 0 4 2 3 4 91 0 8 8 7 84 0 7 7 14 67 0 2 2 5 84 0 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
52 52 47 44 36 61 38 38 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 784;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(540,-14,o),
(648,75,o),
(648,272,cs),
(648,309,o),
(648,345,o),
(647,382,cs),
(646,419,o),
(646,455,o),
(646,492,cs),
(646,525,o),
(646,559,o),
(647,592,cs),
(648,625,o),
(648,658,o),
(648,692,cs),
(648,716,o),
(709,717,o),
(728,717,cs),
(744,717,o),
(765,719,o),
(765,742,cs),
(765,751,o),
(762,758,o),
(756,762,cs),
(749,765,o),
(735,767,o),
(714,767,cs),
(518,767,ls),
(493,767,o),
(481,759,o),
(481,742,cs),
(481,722,o),
(503,717,o),
(518,717,cs),
(530,717,o),
(578,718,o),
(578,694,cs),
(578,272,ls),
(578,161,o),
(527,48,o),
(383,48,cs),
(191,48,o),
(184,178,o),
(184,323,cs),
(184,746,l),
(184,746,l),
(184,770,o),
(247,771,o),
(264,771,cs),
(280,771,o),
(301,777,o),
(301,796,cs),
(301,805,o),
(298,812,o),
(292,816,cs),
(285,819,o),
(271,821,o),
(250,821,cs),
(53,821,ls),
(41,821,o),
(16,817,o),
(16,796,cs),
(16,772,o),
(38,771,o),
(53,771,cs),
(65,771,o),
(113,772,o),
(113,748,cs),
(113,701,o),
(113,654,o),
(114,607,cs),
(115,560,o),
(115,514,o),
(115,467,cs),
(115,444,o),
(115,422,o),
(115,400,cs),
(114,377,o),
(114,355,o),
(114,334,cs),
(114,261,o),
(114,193,o),
(134,125,cs),
(161,30,o),
(261,-14,o),
(382,-14,cs)
);
},
{
closed = 1;
nodes = (
(378,854,o),
(466,908,o),
(466,941,cs),
(466,960,o),
(454,972,o),
(434,972,cs),
(405,972,o),
(328,904,o),
(328,877,cs),
(328,864,o),
(337,854,o),
(352,854,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 8 0 106 0 4 5 1 3 2 4 3 91 9 1 7 7 8 83 0 8 8 12 67 0 2 2 6 84 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 8 0 106 0 4 5 1 3 2 4 3 91 9 1 7 7 8 83 0 8 8 14 67 0 2 2 6 84 0 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
94 91 87 84 80 77 45 52 51 56 38 38 36 10 22
CALL[ ]	/* CallFunction */";
};
width = 772;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(526,-14,o),
(634,76,o),
(634,272,cs),
(634,309,o),
(634,345,o),
(633,382,cs),
(632,419,o),
(632,455,o),
(632,492,cs),
(632,529,o),
(632,565,o),
(633,602,cs),
(634,638,o),
(634,675,o),
(634,712,cs),
(634,733,o),
(687,737,o),
(704,737,cs),
(720,737,o),
(741,737,o),
(741,752,cs),
(741,757,o),
(738,761,o),
(732,764,cs),
(725,766,o),
(711,767,o),
(690,767,cs),
(508,767,ls),
(496,767,o),
(471,767,o),
(471,752,cs),
(471,739,o),
(493,737,o),
(508,737,cs),
(535,737,o),
(594,737,o),
(594,714,cs),
(594,272,ls),
(594,146,o),
(535,18,o),
(368,18,cs),
(173,18,o),
(170,165,o),
(170,323,cs),
(170,766,ls),
(170,790,o),
(226,791,o),
(245,791,cs),
(261,791,o),
(282,791,o),
(282,806,cs),
(282,811,o),
(279,815,o),
(273,818,cs),
(266,820,o),
(252,821,o),
(231,821,cs),
(49,821,ls),
(37,821,o),
(12,821,o),
(12,806,cs),
(12,793,o),
(34,791,o),
(49,791,cs),
(79,791,o),
(129,791,o),
(129,768,cs),
(129,717,o),
(129,667,o),
(130,617,cs),
(131,567,o),
(131,517,o),
(131,467,cs),
(131,444,o),
(131,422,o),
(131,400,cs),
(130,377,o),
(130,355,o),
(130,334,cs),
(130,261,o),
(133,193,o),
(150,125,cs),
(174,31,o),
(260,-14,o),
(367,-14,cs)
);
},
{
closed = 1;
nodes = (
(348,875,o),
(438,928,o),
(438,950,cs),
(438,969,o),
(430,972,o),
(419,972,cs),
(399,972,o),
(324,911,o),
(324,886,cs),
(324,879,o),
(327,875,o),
(332,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 8 0 106 0 4 5 1 3 2 4 3 91 9 1 7 7 8 83 0 8 8 12 67 0 2 2 6 84 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 8 0 106 0 4 5 1 3 2 4 3 91 9 1 7 7 8 83 0 8 8 14 67 0 2 2 6 84 0 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
94 91 87 84 80 77 45 52 52 56 38 37 36 10 22
CALL[ ]	/* CallFunction */";
};
width = 755;
}
);
note = Uacute;
unicode = 218;
},
{
glyphname = Ubreve;
kernLeft = U;
kernRight = U;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(550,-14,o),
(658,76,o),
(658,272,cs),
(658,309,o),
(658,345,o),
(657,382,cs),
(656,419,o),
(656,455,o),
(656,492,cs),
(656,523,o),
(656,553,o),
(657,581,cs),
(658,608,o),
(658,638,o),
(658,670,cs),
(658,683,o),
(665,691,o),
(678,695,cs),
(691,698,o),
(709,700,o),
(732,700,cs),
(748,700,o),
(769,709,o),
(769,736,cs),
(769,759,o),
(761,767,o),
(718,767,cs),
(515,767,ls),
(486,767,o),
(468,756,o),
(468,736,cs),
(468,712,o),
(476,700,o),
(515,696,cs),
(555,692,o),
(567,686,o),
(567,663,cs),
(567,272,ls),
(567,169,o),
(521,66,o),
(394,66,cs),
(201,66,o),
(194,190,o),
(194,323,cs),
(194,729,l),
(194,729,l),
(194,754,o),
(234,754,o),
(277,754,cs),
(304,754,o),
(314,767,o),
(314,790,cs),
(314,813,o),
(301,821,o),
(258,821,cs),
(39,821,ls),
(27,821,o),
(2,815,o),
(2,790,cs),
(2,762,o),
(22,759,o),
(39,759,cs),
(59,759,o),
(75,758,o),
(86,755,cs),
(97,752,o),
(102,745,o),
(102,734,cs),
(102,689,o),
(102,644,o),
(103,600,cs),
(104,556,o),
(104,512,o),
(104,467,cs),
(104,444,o),
(104,422,o),
(104,400,cs),
(103,377,o),
(103,355,o),
(103,334,cs),
(103,257,o),
(105,172,o),
(123,125,cs),
(159,30,o),
(237,-14,o),
(393,-14,cs)
);
},
{
closed = 1;
nodes = (
(467,862,o),
(536,889,o),
(536,941,cs),
(536,968,o),
(518,971,o),
(498,971,cs),
(481,971,o),
(466,957,o),
(466,942,cs),
(466,937,o),
(462,932,o),
(453,927,cs),
(444,922,o),
(429,919,o),
(410,919,cs),
(380,919,o),
(351,927,o),
(351,942,cs),
(351,965,o),
(338,971,o),
(315,971,cs),
(292,971,o),
(283,958,o),
(283,941,cs),
(283,898,o),
(328,862,o),
(415,862,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
10 1 8 9 8 106 0 9 0 7 5 9 7 91 0 1 0 2 0 1 2 91 6 1 4 4 5 83 0 5 5 12 67 0 0 0 3 84 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
10 1 8 9 8 106 0 4 1 6 6 4 96 0 9 0 7 5 9 7 91 0 1 0 2 0 1 2 91 0 6 6 5 84 0 5 5 12 67 0 0 0 3 84 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
10 1 8 9 8 106 0 4 1 6 6 4 96 0 9 0 7 5 9 7 91 0 1 0 2 0 1 2 91 0 6 6 5 84 0 5 5 14 67 0 0 0 3 84 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
103 101 97 95 36 40 52 52 47 44 36 61 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 784;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(540,-14,o),
(648,75,o),
(648,272,cs),
(648,309,o),
(648,345,o),
(647,382,cs),
(646,419,o),
(646,455,o),
(646,492,cs),
(646,525,o),
(646,559,o),
(647,592,cs),
(648,625,o),
(648,658,o),
(648,692,cs),
(648,716,o),
(709,717,o),
(728,717,cs),
(744,717,o),
(765,719,o),
(765,742,cs),
(765,751,o),
(762,758,o),
(756,762,cs),
(749,765,o),
(735,767,o),
(714,767,cs),
(518,767,ls),
(493,767,o),
(481,759,o),
(481,742,cs),
(481,722,o),
(503,717,o),
(518,717,cs),
(530,717,o),
(578,718,o),
(578,694,cs),
(578,272,ls),
(578,161,o),
(527,48,o),
(383,48,cs),
(191,48,o),
(184,178,o),
(184,323,cs),
(184,746,l),
(184,746,l),
(184,770,o),
(247,771,o),
(264,771,cs),
(280,771,o),
(301,777,o),
(301,796,cs),
(301,805,o),
(298,812,o),
(292,816,cs),
(285,819,o),
(271,821,o),
(250,821,cs),
(53,821,ls),
(41,821,o),
(16,817,o),
(16,796,cs),
(16,772,o),
(38,771,o),
(53,771,cs),
(65,771,o),
(113,772,o),
(113,748,cs),
(113,701,o),
(113,654,o),
(114,607,cs),
(115,560,o),
(115,514,o),
(115,467,cs),
(115,444,o),
(115,422,o),
(115,400,cs),
(114,377,o),
(114,355,o),
(114,334,cs),
(114,261,o),
(114,193,o),
(134,125,cs),
(161,30,o),
(261,-14,o),
(382,-14,cs)
);
},
{
closed = 1;
nodes = (
(453,865,o),
(519,892,o),
(519,944,cs),
(519,971,o),
(502,972,o),
(489,972,cs),
(474,972,o),
(463,960,o),
(463,945,cs),
(463,928,o),
(438,910,o),
(399,910,cs),
(369,910,o),
(334,919,o),
(334,945,cs),
(334,965,o),
(325,972,o),
(306,972,cs),
(289,972,o),
(280,963,o),
(280,944,cs),
(280,903,o),
(326,865,o),
(402,865,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
11 1 9 10 9 106 0 10 0 8 6 10 8 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
11 1 9 10 9 106 0 10 0 8 6 10 8 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
108 106 102 100 94 92 89 87 79 76 72 69 65 62 45 52 51 56 37 12 31
CALL[ ]	/* CallFunction */";
};
width = 772;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(526,-14,o),
(634,76,o),
(634,272,cs),
(634,309,o),
(634,345,o),
(633,382,cs),
(632,419,o),
(632,455,o),
(632,492,cs),
(632,529,o),
(632,565,o),
(633,602,cs),
(634,638,o),
(634,675,o),
(634,712,cs),
(634,733,o),
(687,737,o),
(704,737,cs),
(720,737,o),
(741,737,o),
(741,752,cs),
(741,757,o),
(738,761,o),
(732,764,cs),
(725,766,o),
(711,767,o),
(690,767,cs),
(508,767,ls),
(496,767,o),
(471,767,o),
(471,752,cs),
(471,739,o),
(493,737,o),
(508,737,cs),
(535,737,o),
(594,737,o),
(594,714,cs),
(594,272,ls),
(594,146,o),
(535,18,o),
(368,18,cs),
(173,18,o),
(170,165,o),
(170,323,cs),
(170,766,ls),
(170,790,o),
(226,791,o),
(245,791,cs),
(261,791,o),
(282,791,o),
(282,806,cs),
(282,811,o),
(279,815,o),
(273,818,cs),
(266,820,o),
(252,821,o),
(231,821,cs),
(49,821,ls),
(37,821,o),
(12,821,o),
(12,806,cs),
(12,793,o),
(34,791,o),
(49,791,cs),
(79,791,o),
(129,791,o),
(129,768,cs),
(129,717,o),
(129,667,o),
(130,617,cs),
(131,567,o),
(131,517,o),
(131,467,cs),
(131,444,o),
(131,422,o),
(131,400,cs),
(130,377,o),
(130,355,o),
(130,334,cs),
(130,261,o),
(133,193,o),
(150,125,cs),
(174,31,o),
(260,-14,o),
(367,-14,cs)
);
},
{
closed = 1;
nodes = (
(437,875,o),
(495,899,o),
(495,948,cs),
(495,969,o),
(487,972,o),
(476,972,cs),
(465,972,o),
(459,964,o),
(459,949,cs),
(459,922,o),
(420,900,o),
(384,900,cs),
(342,900,o),
(310,910,o),
(310,949,cs),
(310,965,o),
(308,972,o),
(293,972,cs),
(282,972,o),
(276,964,o),
(276,948,cs),
(276,908,o),
(324,875,o),
(384,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
3 1 1 2 1 106 0 2 0 0 10 2 0 91 0 6 7 1 5 4 6 5 91 11 1 9 9 10 83 0 10 10 12 67 0 4 4 8 83 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
3 1 1 2 1 106 0 2 0 0 10 2 0 91 0 6 7 1 5 4 6 5 91 11 1 9 9 10 83 0 10 10 14 67 0 4 4 8 83 0 8 8 21 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
107 104 100 97 93 90 45 52 52 56 38 37 38 35 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 755;
}
);
note = Ubreve;
unicode = 364;
},
{
glyphname = Ucircumflex;
kernLeft = U;
kernRight = U;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(550,-14,o),
(658,76,o),
(658,272,cs),
(658,309,o),
(658,345,o),
(657,382,cs),
(656,419,o),
(656,455,o),
(656,492,cs),
(656,523,o),
(656,553,o),
(657,581,cs),
(658,608,o),
(658,638,o),
(658,670,cs),
(658,683,o),
(665,691,o),
(678,695,cs),
(691,698,o),
(709,700,o),
(732,700,cs),
(748,700,o),
(769,709,o),
(769,736,cs),
(769,759,o),
(761,767,o),
(718,767,cs),
(515,767,ls),
(486,767,o),
(468,756,o),
(468,736,cs),
(468,712,o),
(476,700,o),
(515,696,cs),
(555,692,o),
(567,686,o),
(567,663,cs),
(567,272,ls),
(567,169,o),
(521,66,o),
(394,66,cs),
(201,66,o),
(194,190,o),
(194,323,cs),
(194,729,l),
(194,729,l),
(194,754,o),
(234,754,o),
(277,754,cs),
(304,754,o),
(314,767,o),
(314,790,cs),
(314,813,o),
(301,821,o),
(258,821,cs),
(39,821,ls),
(27,821,o),
(2,815,o),
(2,790,cs),
(2,762,o),
(22,759,o),
(39,759,cs),
(59,759,o),
(75,758,o),
(86,755,cs),
(97,752,o),
(102,745,o),
(102,734,cs),
(102,689,o),
(102,644,o),
(103,600,cs),
(104,556,o),
(104,512,o),
(104,467,cs),
(104,444,o),
(104,422,o),
(104,400,cs),
(103,377,o),
(103,355,o),
(103,334,cs),
(103,257,o),
(105,172,o),
(123,125,cs),
(159,30,o),
(237,-14,o),
(393,-14,cs)
);
},
{
closed = 1;
nodes = (
(298,830,o),
(360,854,o),
(400,880,c),
(459,842,o),
(514,830,o),
(520,830,cs),
(531,830,o),
(533,842,o),
(533,851,cs),
(533,892,o),
(424,972,o),
(400,972,cs),
(389,972,o),
(354,950,o),
(327,928,cs),
(296,903,o),
(268,871,o),
(268,844,cs),
(268,837,o),
(272,830,o),
(281,830,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 0 2 106 1 10 2 0 8 0 106 0 4 0 5 3 4 5 91 9 1 7 7 8 83 0 8 8 12 67 0 3 3 6 84 0 6 6 21 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 2 0 2 106 1 10 2 0 8 0 106 0 7 4 9 9 7 96 0 4 0 5 3 4 5 91 0 9 9 8 84 0 8 8 12 67 0 3 3 6 84 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 2 0 2 106 1 10 2 0 8 0 106 0 7 4 9 9 7 96 0 4 0 5 3 4 5 91 0 9 9 8 84 0 8 8 14 67 0 3 3 6 84 0 6 6 21 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 99 96 92 89 85 83 68 66 54 52 48 45 32 30 19 17 11 9 0 25 1 25 11 15
CALL[ ]	/* CallFunction */";
};
width = 784;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(540,-14,o),
(648,75,o),
(648,272,cs),
(648,309,o),
(648,345,o),
(647,382,cs),
(646,419,o),
(646,455,o),
(646,492,cs),
(646,525,o),
(646,559,o),
(647,592,cs),
(648,625,o),
(648,658,o),
(648,692,cs),
(648,716,o),
(709,717,o),
(728,717,cs),
(744,717,o),
(765,719,o),
(765,742,cs),
(765,751,o),
(762,758,o),
(756,762,cs),
(749,765,o),
(735,767,o),
(714,767,cs),
(518,767,ls),
(493,767,o),
(481,759,o),
(481,742,cs),
(481,722,o),
(503,717,o),
(518,717,cs),
(530,717,o),
(578,718,o),
(578,694,cs),
(578,272,ls),
(578,161,o),
(527,48,o),
(383,48,cs),
(191,48,o),
(184,178,o),
(184,323,cs),
(184,746,l),
(184,746,l),
(184,770,o),
(247,771,o),
(264,771,cs),
(280,771,o),
(301,777,o),
(301,796,cs),
(301,805,o),
(298,812,o),
(292,816,cs),
(285,819,o),
(271,821,o),
(250,821,cs),
(53,821,ls),
(41,821,o),
(16,817,o),
(16,796,cs),
(16,772,o),
(38,771,o),
(53,771,cs),
(65,771,o),
(113,772,o),
(113,748,cs),
(113,701,o),
(113,654,o),
(114,607,cs),
(115,560,o),
(115,514,o),
(115,467,cs),
(115,444,o),
(115,422,o),
(115,400,cs),
(114,377,o),
(114,355,o),
(114,334,cs),
(114,261,o),
(114,193,o),
(134,125,cs),
(161,30,o),
(261,-14,o),
(382,-14,cs)
);
},
{
closed = 1;
nodes = (
(291,847,o),
(352,874,o),
(392,898,c),
(456,860,o),
(504,847,o),
(512,847,cs),
(520,847,o),
(523,855,o),
(523,864,cs),
(523,900,o),
(416,972,o),
(392,972,cs),
(370,972,o),
(262,901,o),
(262,860,cs),
(262,851,o),
(266,847,o),
(273,847,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 2 0 2 106 1 11 2 0 9 0 106 0 5 6 1 4 3 5 4 91 10 1 8 8 9 83 0 9 9 12 67 0 3 3 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 2 0 2 106 1 11 2 0 9 0 106 0 5 6 1 4 3 5 4 91 10 1 8 8 9 83 0 9 9 14 67 0 3 3 7 84 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 103 100 96 93 89 86 70 68 55 52 48 45 42 39 31 29 18 16 11 9 0 24 1 24 12 15
CALL[ ]	/* CallFunction */";
};
width = 772;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(526,-14,o),
(634,76,o),
(634,272,cs),
(634,309,o),
(634,345,o),
(633,382,cs),
(632,419,o),
(632,455,o),
(632,492,cs),
(632,529,o),
(632,565,o),
(633,602,cs),
(634,638,o),
(634,675,o),
(634,712,cs),
(634,733,o),
(687,737,o),
(704,737,cs),
(720,737,o),
(741,737,o),
(741,752,cs),
(741,757,o),
(738,761,o),
(732,764,cs),
(725,766,o),
(711,767,o),
(690,767,cs),
(508,767,ls),
(496,767,o),
(471,767,o),
(471,752,cs),
(471,739,o),
(493,737,o),
(508,737,cs),
(535,737,o),
(594,737,o),
(594,714,cs),
(594,272,ls),
(594,146,o),
(535,18,o),
(368,18,cs),
(173,18,o),
(170,165,o),
(170,323,cs),
(170,766,ls),
(170,790,o),
(226,791,o),
(245,791,cs),
(261,791,o),
(282,791,o),
(282,806,cs),
(282,811,o),
(279,815,o),
(273,818,cs),
(266,820,o),
(252,821,o),
(231,821,cs),
(49,821,ls),
(37,821,o),
(12,821,o),
(12,806,cs),
(12,793,o),
(34,791,o),
(49,791,cs),
(79,791,o),
(129,791,o),
(129,768,cs),
(129,717,o),
(129,667,o),
(130,617,cs),
(131,567,o),
(131,517,o),
(131,467,cs),
(131,444,o),
(131,422,o),
(131,400,cs),
(130,377,o),
(130,355,o),
(130,334,cs),
(130,261,o),
(133,193,o),
(150,125,cs),
(174,31,o),
(260,-14,o),
(367,-14,cs)
);
},
{
closed = 1;
nodes = (
(269,875,o),
(317,894,o),
(381,928,c),
(445,894,o),
(493,875,o),
(501,875,cs),
(506,875,o),
(509,879,o),
(509,886,cs),
(509,911,o),
(407,972,o),
(381,972,cs),
(358,972,o),
(254,911,o),
(254,886,cs),
(254,879,o),
(257,875,o),
(262,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 2 0 2 106 1 11 2 0 9 0 106 0 5 6 1 4 3 5 4 91 10 1 8 8 9 83 0 9 9 12 67 0 3 3 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 2 0 2 106 1 11 2 0 9 0 106 0 5 6 1 4 3 5 4 91 10 1 8 8 9 83 0 9 9 14 67 0 3 3 7 84 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 103 100 96 93 89 86 70 68 55 52 48 45 41 38 30 28 18 16 11 9 0 23 1 23 12 15
CALL[ ]	/* CallFunction */";
};
width = 755;
}
);
note = Ucircumflex;
unicode = 219;
},
{
glyphname = Udieresis;
kernLeft = U;
kernRight = U;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(550,-14,o),
(658,76,o),
(658,272,cs),
(658,309,o),
(658,345,o),
(657,382,cs),
(656,419,o),
(656,455,o),
(656,492,cs),
(656,523,o),
(656,553,o),
(657,581,cs),
(658,608,o),
(658,638,o),
(658,670,cs),
(658,683,o),
(665,691,o),
(678,695,cs),
(691,698,o),
(709,700,o),
(732,700,cs),
(748,700,o),
(769,709,o),
(769,736,cs),
(769,759,o),
(761,767,o),
(718,767,cs),
(515,767,ls),
(486,767,o),
(468,756,o),
(468,736,cs),
(468,712,o),
(476,700,o),
(515,696,cs),
(555,692,o),
(567,686,o),
(567,663,cs),
(567,272,ls),
(567,169,o),
(521,66,o),
(394,66,cs),
(201,66,o),
(194,190,o),
(194,323,cs),
(194,729,l),
(194,729,l),
(194,754,o),
(234,754,o),
(277,754,cs),
(304,754,o),
(314,767,o),
(314,790,cs),
(314,813,o),
(301,821,o),
(258,821,cs),
(39,821,ls),
(27,821,o),
(2,815,o),
(2,790,cs),
(2,762,o),
(22,759,o),
(39,759,cs),
(59,759,o),
(75,758,o),
(86,755,cs),
(97,752,o),
(102,745,o),
(102,734,cs),
(102,689,o),
(102,644,o),
(103,600,cs),
(104,556,o),
(104,512,o),
(104,467,cs),
(104,444,o),
(104,422,o),
(104,400,cs),
(103,377,o),
(103,355,o),
(103,334,cs),
(103,257,o),
(105,172,o),
(123,125,cs),
(159,30,o),
(237,-14,o),
(393,-14,cs)
);
},
{
closed = 1;
nodes = (
(328,841,o),
(365,856,o),
(365,911,cs),
(365,947,o),
(337,972,o),
(305,972,cs),
(258,972,o),
(239,931,o),
(239,907,cs),
(239,868,o),
(266,841,o),
(298,841,cs)
);
},
{
closed = 1;
nodes = (
(535,830,o),
(572,845,o),
(572,900,cs),
(572,937,o),
(544,961,o),
(512,961,cs),
(465,961,o),
(446,920,o),
(446,896,cs),
(446,857,o),
(473,830,o),
(505,830,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
2 1 0 3 1 1 9 0 1 91 0 5 0 6 4 5 6 91 10 1 8 8 9 83 0 9 9 12 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 9 2 3 91 0 5 0 6 4 5 6 91 10 1 8 8 9 83 0 9 9 12 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 8 5 10 10 8 96 0 0 0 1 3 0 1 91 0 2 0 3 9 2 3 91 0 5 0 6 4 5 6 91 0 10 10 9 84 0 9 9 12 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 8 5 10 10 8 96 0 0 0 1 3 0 1 91 0 2 0 3 9 2 3 91 0 5 0 6 4 5 6 91 0 10 10 9 84 0 9 9 14 67 0 4 4 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
105 102 98 95 47 44 36 61 38 38 38 38 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 784;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(540,-14,o),
(648,75,o),
(648,272,cs),
(648,309,o),
(648,345,o),
(647,382,cs),
(646,419,o),
(646,455,o),
(646,492,cs),
(646,525,o),
(646,559,o),
(647,592,cs),
(648,625,o),
(648,658,o),
(648,692,cs),
(648,716,o),
(709,717,o),
(728,717,cs),
(744,717,o),
(765,719,o),
(765,742,cs),
(765,751,o),
(762,758,o),
(756,762,cs),
(749,765,o),
(735,767,o),
(714,767,cs),
(518,767,ls),
(493,767,o),
(481,759,o),
(481,742,cs),
(481,722,o),
(503,717,o),
(518,717,cs),
(530,717,o),
(578,718,o),
(578,694,cs),
(578,272,ls),
(578,161,o),
(527,48,o),
(383,48,cs),
(191,48,o),
(184,178,o),
(184,323,cs),
(184,746,l),
(184,746,l),
(184,770,o),
(247,771,o),
(264,771,cs),
(280,771,o),
(301,777,o),
(301,796,cs),
(301,805,o),
(298,812,o),
(292,816,cs),
(285,819,o),
(271,821,o),
(250,821,cs),
(53,821,ls),
(41,821,o),
(16,817,o),
(16,796,cs),
(16,772,o),
(38,771,o),
(53,771,cs),
(65,771,o),
(113,772,o),
(113,748,cs),
(113,701,o),
(113,654,o),
(114,607,cs),
(115,560,o),
(115,514,o),
(115,467,cs),
(115,444,o),
(115,422,o),
(115,400,cs),
(114,377,o),
(114,355,o),
(114,334,cs),
(114,261,o),
(114,193,o),
(134,125,cs),
(161,30,o),
(261,-14,o),
(382,-14,cs)
);
},
{
closed = 1;
nodes = (
(314,859,o),
(345,872,o),
(345,920,cs),
(345,951,o),
(323,972,o),
(296,972,cs),
(258,972,o),
(240,937,o),
(240,916,cs),
(240,883,o),
(262,859,o),
(289,859,cs)
);
},
{
closed = 1;
nodes = (
(521,847,o),
(552,860,o),
(552,908,cs),
(552,939,o),
(530,960,o),
(503,960,cs),
(465,960,o),
(447,925,o),
(447,904,cs),
(447,871,o),
(469,847,o),
(496,847,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 10 2 3 91 0 6 7 1 5 4 6 5 91 11 1 9 9 10 83 0 10 10 12 67 0 4 4 8 83 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 10 2 3 91 0 6 7 1 5 4 6 5 91 11 1 9 9 10 83 0 10 10 14 67 0 4 4 8 83 0 8 8 21 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
106 103 99 96 92 89 45 52 51 56 38 36 38 36 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 772;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(526,-14,o),
(634,76,o),
(634,272,cs),
(634,309,o),
(634,345,o),
(633,382,cs),
(632,419,o),
(632,455,o),
(632,492,cs),
(632,529,o),
(632,565,o),
(633,602,cs),
(634,638,o),
(634,675,o),
(634,712,cs),
(634,733,o),
(687,737,o),
(704,737,cs),
(720,737,o),
(741,737,o),
(741,752,cs),
(741,757,o),
(738,761,o),
(732,764,cs),
(725,766,o),
(711,767,o),
(690,767,cs),
(508,767,ls),
(496,767,o),
(471,767,o),
(471,752,cs),
(471,739,o),
(493,737,o),
(508,737,cs),
(535,737,o),
(594,737,o),
(594,714,cs),
(594,272,ls),
(594,146,o),
(535,18,o),
(368,18,cs),
(173,18,o),
(170,165,o),
(170,323,cs),
(170,766,ls),
(170,790,o),
(226,791,o),
(245,791,cs),
(261,791,o),
(282,791,o),
(282,806,cs),
(282,811,o),
(279,815,o),
(273,818,cs),
(266,820,o),
(252,821,o),
(231,821,cs),
(49,821,ls),
(37,821,o),
(12,821,o),
(12,806,cs),
(12,793,o),
(34,791,o),
(49,791,cs),
(79,791,o),
(129,791,o),
(129,768,cs),
(129,717,o),
(129,667,o),
(130,617,cs),
(131,567,o),
(131,517,o),
(131,467,cs),
(131,444,o),
(131,422,o),
(131,400,cs),
(130,377,o),
(130,355,o),
(130,334,cs),
(130,261,o),
(133,193,o),
(150,125,cs),
(174,31,o),
(260,-14,o),
(367,-14,cs)
);
},
{
closed = 1;
nodes = (
(295,889,o),
(317,899,o),
(317,935,cs),
(317,958,o),
(302,972,o),
(283,972,cs),
(255,972,o),
(242,945,o),
(242,931,cs),
(242,907,o),
(257,889,o),
(276,889,cs)
);
},
{
closed = 1;
nodes = (
(502,875,o),
(524,885,o),
(524,921,cs),
(524,944,o),
(509,958,o),
(490,958,cs),
(462,958,o),
(449,931,o),
(449,917,cs),
(449,893,o),
(464,875,o),
(483,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 10 2 3 91 0 6 7 1 5 4 6 5 91 11 1 9 9 10 83 0 10 10 12 67 0 4 4 8 83 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 10 2 3 91 0 6 7 1 5 4 6 5 91 11 1 9 9 10 83 0 10 10 14 67 0 4 4 8 83 0 8 8 21 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
107 104 100 97 93 90 45 52 52 56 38 36 38 36 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 755;
}
);
note = Udieresis;
unicode = 220;
},
{
glyphname = Ugrave;
kernLeft = U;
kernRight = U;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(550,-14,o),
(658,76,o),
(658,272,cs),
(658,309,o),
(658,345,o),
(657,382,cs),
(656,419,o),
(656,455,o),
(656,492,cs),
(656,523,o),
(656,553,o),
(657,581,cs),
(658,608,o),
(658,638,o),
(658,670,cs),
(658,683,o),
(665,691,o),
(678,695,cs),
(691,698,o),
(709,700,o),
(732,700,cs),
(748,700,o),
(769,709,o),
(769,736,cs),
(769,759,o),
(761,767,o),
(718,767,cs),
(515,767,ls),
(486,767,o),
(468,756,o),
(468,736,cs),
(468,712,o),
(476,700,o),
(515,696,cs),
(555,692,o),
(567,686,o),
(567,663,cs),
(567,272,ls),
(567,169,o),
(521,66,o),
(394,66,cs),
(201,66,o),
(194,190,o),
(194,323,cs),
(194,729,l),
(194,729,l),
(194,754,o),
(234,754,o),
(277,754,cs),
(304,754,o),
(314,767,o),
(314,790,cs),
(314,813,o),
(301,821,o),
(258,821,cs),
(39,821,ls),
(27,821,o),
(2,815,o),
(2,790,cs),
(2,762,o),
(22,759,o),
(39,759,cs),
(59,759,o),
(75,758,o),
(86,755,cs),
(97,752,o),
(102,745,o),
(102,734,cs),
(102,689,o),
(102,644,o),
(103,600,cs),
(104,556,o),
(104,512,o),
(104,467,cs),
(104,444,o),
(104,422,o),
(104,400,cs),
(103,377,o),
(103,355,o),
(103,334,cs),
(103,257,o),
(105,172,o),
(123,125,cs),
(159,30,o),
(237,-14,o),
(393,-14,cs)
);
},
{
closed = 1;
nodes = (
(465,861,o),
(480,876,o),
(480,891,cs),
(480,919,o),
(406,972,o),
(366,972,cs),
(339,972,o),
(325,953,o),
(325,936,cs),
(325,895,o),
(413,861,o),
(445,861,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 0 1 0 106 0 1 7 1 106 0 3 0 4 2 3 4 91 8 1 6 6 7 83 0 7 7 12 67 0 2 2 5 84 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 0 1 0 106 0 1 7 1 106 0 6 3 8 8 6 96 0 3 0 4 2 3 4 91 0 8 8 7 84 0 7 7 12 67 0 2 2 5 84 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 0 1 0 106 0 1 7 1 106 0 6 3 8 8 6 96 0 3 0 4 2 3 4 91 0 8 8 7 84 0 7 7 14 67 0 2 2 5 84 0 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
52 52 47 44 36 61 40 38 34 9 24
CALL[ ]	/* CallFunction */";
};
width = 784;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(540,-14,o),
(648,75,o),
(648,272,cs),
(648,309,o),
(648,345,o),
(647,382,cs),
(646,419,o),
(646,455,o),
(646,492,cs),
(646,525,o),
(646,559,o),
(647,592,cs),
(648,625,o),
(648,658,o),
(648,692,cs),
(648,716,o),
(709,717,o),
(728,717,cs),
(744,717,o),
(765,719,o),
(765,742,cs),
(765,751,o),
(762,758,o),
(756,762,cs),
(749,765,o),
(735,767,o),
(714,767,cs),
(518,767,ls),
(493,767,o),
(481,759,o),
(481,742,cs),
(481,722,o),
(503,717,o),
(518,717,cs),
(530,717,o),
(578,718,o),
(578,694,cs),
(578,272,ls),
(578,161,o),
(527,48,o),
(383,48,cs),
(191,48,o),
(184,178,o),
(184,323,cs),
(184,746,l),
(184,746,l),
(184,770,o),
(247,771,o),
(264,771,cs),
(280,771,o),
(301,777,o),
(301,796,cs),
(301,805,o),
(298,812,o),
(292,816,cs),
(285,819,o),
(271,821,o),
(250,821,cs),
(53,821,ls),
(41,821,o),
(16,817,o),
(16,796,cs),
(16,772,o),
(38,771,o),
(53,771,cs),
(65,771,o),
(113,772,o),
(113,748,cs),
(113,701,o),
(113,654,o),
(114,607,cs),
(115,560,o),
(115,514,o),
(115,467,cs),
(115,444,o),
(115,422,o),
(115,400,cs),
(114,377,o),
(114,355,o),
(114,334,cs),
(114,261,o),
(114,193,o),
(134,125,cs),
(161,30,o),
(261,-14,o),
(382,-14,cs)
);
},
{
closed = 1;
nodes = (
(454,854,o),
(463,864,o),
(463,877,cs),
(463,904,o),
(386,972,o),
(357,972,cs),
(337,972,o),
(325,960,o),
(325,941,cs),
(325,910,o),
(410,854,o),
(439,854,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 0 1 0 106 0 1 8 1 106 0 4 5 1 3 2 4 3 91 9 1 7 7 8 83 0 8 8 12 67 0 2 2 6 84 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 0 1 0 106 0 1 8 1 106 0 4 5 1 3 2 4 3 91 9 1 7 7 8 83 0 8 8 14 67 0 2 2 6 84 0 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
94 91 87 84 80 77 45 52 51 56 40 38 34 10 22
CALL[ ]	/* CallFunction */";
};
width = 772;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(526,-14,o),
(634,76,o),
(634,272,cs),
(634,309,o),
(634,345,o),
(633,382,cs),
(632,419,o),
(632,455,o),
(632,492,cs),
(632,529,o),
(632,565,o),
(633,602,cs),
(634,638,o),
(634,675,o),
(634,712,cs),
(634,733,o),
(687,737,o),
(704,737,cs),
(720,737,o),
(741,737,o),
(741,752,cs),
(741,757,o),
(738,761,o),
(732,764,cs),
(725,766,o),
(711,767,o),
(690,767,cs),
(508,767,ls),
(496,767,o),
(471,767,o),
(471,752,cs),
(471,739,o),
(493,737,o),
(508,737,cs),
(535,737,o),
(594,737,o),
(594,714,cs),
(594,272,ls),
(594,146,o),
(535,18,o),
(368,18,cs),
(173,18,o),
(170,165,o),
(170,323,cs),
(170,766,ls),
(170,790,o),
(226,791,o),
(245,791,cs),
(261,791,o),
(282,791,o),
(282,806,cs),
(282,811,o),
(279,815,o),
(273,818,cs),
(266,820,o),
(252,821,o),
(231,821,cs),
(49,821,ls),
(37,821,o),
(12,821,o),
(12,806,cs),
(12,793,o),
(34,791,o),
(49,791,cs),
(79,791,o),
(129,791,o),
(129,768,cs),
(129,717,o),
(129,667,o),
(130,617,cs),
(131,567,o),
(131,517,o),
(131,467,cs),
(131,444,o),
(131,422,o),
(131,400,cs),
(130,377,o),
(130,355,o),
(130,334,cs),
(130,261,o),
(133,193,o),
(150,125,cs),
(174,31,o),
(260,-14,o),
(367,-14,cs)
);
},
{
closed = 1;
nodes = (
(436,842,o),
(439,846,o),
(439,853,cs),
(439,878,o),
(364,972,o),
(344,972,cs),
(333,972,o),
(325,969,o),
(325,950,cs),
(325,929,o),
(412,842,o),
(431,842,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 8 9 8 106 0 9 6 9 106 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 84 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 8 9 8 106 0 9 6 9 106 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 14 67 0 0 0 4 84 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
94 92 87 85 79 76 72 69 65 62 45 52 52 56 36 10 20
CALL[ ]	/* CallFunction */";
};
width = 755;
}
);
note = Ugrave;
unicode = 217;
},
{
glyphname = Uhungarumlaut;
kernLeft = U;
kernRight = U;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(550,-14,o),
(658,76,o),
(658,272,cs),
(658,309,o),
(658,345,o),
(657,382,cs),
(656,419,o),
(656,455,o),
(656,492,cs),
(656,523,o),
(656,553,o),
(657,581,cs),
(658,608,o),
(658,638,o),
(658,670,cs),
(658,683,o),
(665,691,o),
(678,695,cs),
(691,698,o),
(709,700,o),
(732,700,cs),
(748,700,o),
(769,709,o),
(769,736,cs),
(769,759,o),
(761,767,o),
(718,767,cs),
(515,767,ls),
(486,767,o),
(468,756,o),
(468,736,cs),
(468,712,o),
(476,700,o),
(515,696,cs),
(555,692,o),
(567,686,o),
(567,663,cs),
(567,272,ls),
(567,169,o),
(521,66,o),
(394,66,cs),
(201,66,o),
(194,190,o),
(194,323,cs),
(194,729,l),
(194,729,l),
(194,754,o),
(234,754,o),
(277,754,cs),
(304,754,o),
(314,767,o),
(314,790,cs),
(314,813,o),
(301,821,o),
(258,821,cs),
(39,821,ls),
(27,821,o),
(2,815,o),
(2,790,cs),
(2,762,o),
(22,759,o),
(39,759,cs),
(59,759,o),
(75,758,o),
(86,755,cs),
(97,752,o),
(102,745,o),
(102,734,cs),
(102,689,o),
(102,644,o),
(103,600,cs),
(104,556,o),
(104,512,o),
(104,467,cs),
(104,444,o),
(104,422,o),
(104,400,cs),
(103,377,o),
(103,355,o),
(103,334,cs),
(103,257,o),
(105,172,o),
(123,125,cs),
(159,30,o),
(237,-14,o),
(393,-14,cs)
);
},
{
closed = 1;
nodes = (
(308,841,o),
(395,897,o),
(395,936,cs),
(395,953,o),
(381,972,o),
(354,972,cs),
(316,972,o),
(240,899,o),
(240,872,cs),
(240,856,o),
(255,841,o),
(275,841,cs)
);
},
{
closed = 1;
nodes = (
(491,841,o),
(578,897,o),
(578,936,cs),
(578,953,o),
(563,972,o),
(536,972,cs),
(498,972,o),
(423,899,o),
(423,872,cs),
(423,856,o),
(438,841,o),
(458,841,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
3 1 1 0 1 106 2 1 0 9 0 106 0 5 0 6 4 5 6 91 10 1 8 8 9 83 0 9 9 12 67 0 4 4 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
3 1 1 0 1 106 2 1 0 9 0 106 0 8 5 10 10 8 96 0 5 0 6 4 5 6 91 0 10 10 9 84 0 9 9 12 67 0 4 4 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
3 1 1 0 1 106 2 1 0 9 0 106 0 8 5 10 10 8 96 0 5 0 6 4 5 6 91 0 10 10 9 84 0 9 9 14 67 0 4 4 7 84 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
105 102 98 95 47 44 36 61 38 38 38 38 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 784;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(540,-14,o),
(648,75,o),
(648,272,cs),
(648,309,o),
(648,345,o),
(647,382,cs),
(646,419,o),
(646,455,o),
(646,492,cs),
(646,525,o),
(646,559,o),
(647,592,cs),
(648,625,o),
(648,658,o),
(648,692,cs),
(648,716,o),
(709,717,o),
(728,717,cs),
(744,717,o),
(765,719,o),
(765,742,cs),
(765,751,o),
(762,758,o),
(756,762,cs),
(749,765,o),
(735,767,o),
(714,767,cs),
(518,767,ls),
(493,767,o),
(481,759,o),
(481,742,cs),
(481,722,o),
(503,717,o),
(518,717,cs),
(530,717,o),
(578,718,o),
(578,694,cs),
(578,272,ls),
(578,161,o),
(527,48,o),
(383,48,cs),
(191,48,o),
(184,178,o),
(184,323,cs),
(184,746,l),
(184,746,l),
(184,770,o),
(247,771,o),
(264,771,cs),
(280,771,o),
(301,777,o),
(301,796,cs),
(301,805,o),
(298,812,o),
(292,816,cs),
(285,819,o),
(271,821,o),
(250,821,cs),
(53,821,ls),
(41,821,o),
(16,817,o),
(16,796,cs),
(16,772,o),
(38,771,o),
(53,771,cs),
(65,771,o),
(113,772,o),
(113,748,cs),
(113,701,o),
(113,654,o),
(114,607,cs),
(115,560,o),
(115,514,o),
(115,467,cs),
(115,444,o),
(115,422,o),
(115,400,cs),
(114,377,o),
(114,355,o),
(114,334,cs),
(114,261,o),
(114,193,o),
(134,125,cs),
(161,30,o),
(261,-14,o),
(382,-14,cs)
);
},
{
closed = 1;
nodes = (
(294,854,o),
(382,908,o),
(382,941,cs),
(382,960,o),
(370,972,o),
(350,972,cs),
(321,972,o),
(244,904,o),
(244,877,cs),
(244,864,o),
(253,854,o),
(268,854,cs)
);
},
{
closed = 1;
nodes = (
(465,854,o),
(553,908,o),
(553,941,cs),
(553,960,o),
(541,972,o),
(521,972,cs),
(492,972,o),
(415,904,o),
(415,877,cs),
(415,864,o),
(424,854,o),
(439,854,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
3 1 1 0 1 106 2 1 0 10 0 106 0 6 7 1 5 4 6 5 92 11 1 9 9 10 83 0 10 10 12 67 0 4 4 8 84 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
3 1 1 0 1 106 2 1 0 10 0 106 0 6 7 1 5 4 6 5 92 11 1 9 9 10 83 0 10 10 14 67 0 4 4 8 84 0 8 8 21 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
110 107 103 100 96 93 45 52 51 56 38 38 38 38 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 772;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(526,-14,o),
(634,76,o),
(634,272,cs),
(634,309,o),
(634,345,o),
(633,382,cs),
(632,419,o),
(632,455,o),
(632,492,cs),
(632,529,o),
(632,565,o),
(633,602,cs),
(634,638,o),
(634,675,o),
(634,712,cs),
(634,733,o),
(687,737,o),
(704,737,cs),
(720,737,o),
(741,737,o),
(741,752,cs),
(741,757,o),
(738,761,o),
(732,764,cs),
(725,766,o),
(711,767,o),
(690,767,cs),
(508,767,ls),
(496,767,o),
(471,767,o),
(471,752,cs),
(471,739,o),
(493,737,o),
(508,737,cs),
(535,737,o),
(594,737,o),
(594,714,cs),
(594,272,ls),
(594,146,o),
(535,18,o),
(368,18,cs),
(173,18,o),
(170,165,o),
(170,323,cs),
(170,766,ls),
(170,790,o),
(226,791,o),
(245,791,cs),
(261,791,o),
(282,791,o),
(282,806,cs),
(282,811,o),
(279,815,o),
(273,818,cs),
(266,820,o),
(252,821,o),
(231,821,cs),
(49,821,ls),
(37,821,o),
(12,821,o),
(12,806,cs),
(12,793,o),
(34,791,o),
(49,791,cs),
(79,791,o),
(129,791,o),
(129,768,cs),
(129,717,o),
(129,667,o),
(130,617,cs),
(131,567,o),
(131,517,o),
(131,467,cs),
(131,444,o),
(131,422,o),
(131,400,cs),
(130,377,o),
(130,355,o),
(130,334,cs),
(130,261,o),
(133,193,o),
(150,125,cs),
(174,31,o),
(260,-14,o),
(367,-14,cs)
);
},
{
closed = 1;
nodes = (
(274,875,o),
(364,928,o),
(364,950,cs),
(364,969,o),
(356,972,o),
(345,972,cs),
(325,972,o),
(250,911,o),
(250,886,cs),
(250,879,o),
(253,875,o),
(258,875,cs)
);
},
{
closed = 1;
nodes = (
(428,875,o),
(518,928,o),
(518,950,cs),
(518,969,o),
(510,972,o),
(499,972,cs),
(479,972,o),
(404,911,o),
(404,886,cs),
(404,879,o),
(407,875,o),
(412,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
3 1 1 0 1 106 2 1 0 10 0 106 0 6 7 1 5 4 6 5 92 11 1 9 9 10 83 0 10 10 12 67 0 4 4 8 84 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
3 1 1 0 1 106 2 1 0 10 0 106 0 6 7 1 5 4 6 5 92 11 1 9 9 10 83 0 10 10 14 67 0 4 4 8 84 0 8 8 21 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
109 106 102 99 95 92 45 52 52 56 38 37 38 37 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 755;
}
);
note = Uhungarumlaut;
unicode = 368;
},
{
glyphname = Umacron;
kernLeft = U;
kernRight = U;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(550,-14,o),
(658,76,o),
(658,272,cs),
(658,309,o),
(658,345,o),
(657,382,cs),
(656,419,o),
(656,455,o),
(656,492,cs),
(656,523,o),
(656,553,o),
(657,581,cs),
(658,608,o),
(658,638,o),
(658,670,cs),
(658,683,o),
(665,691,o),
(678,695,cs),
(691,698,o),
(709,700,o),
(732,700,cs),
(748,700,o),
(769,709,o),
(769,736,cs),
(769,759,o),
(761,767,o),
(718,767,cs),
(515,767,ls),
(486,767,o),
(468,756,o),
(468,736,cs),
(468,712,o),
(476,700,o),
(515,696,cs),
(555,692,o),
(567,686,o),
(567,663,cs),
(567,272,ls),
(567,169,o),
(521,66,o),
(394,66,cs),
(201,66,o),
(194,190,o),
(194,323,cs),
(194,729,l),
(194,729,l),
(194,754,o),
(234,754,o),
(277,754,cs),
(304,754,o),
(314,767,o),
(314,790,cs),
(314,813,o),
(301,821,o),
(258,821,cs),
(39,821,ls),
(27,821,o),
(2,815,o),
(2,790,cs),
(2,762,o),
(22,759,o),
(39,759,cs),
(59,759,o),
(75,758,o),
(86,755,cs),
(97,752,o),
(102,745,o),
(102,734,cs),
(102,689,o),
(102,644,o),
(103,600,cs),
(104,556,o),
(104,512,o),
(104,467,cs),
(104,444,o),
(104,422,o),
(104,400,cs),
(103,377,o),
(103,355,o),
(103,334,cs),
(103,257,o),
(105,172,o),
(123,125,cs),
(159,30,o),
(237,-14,o),
(393,-14,cs)
);
},
{
closed = 1;
nodes = (
(369,885,o),
(466,886,o),
(540,886,cs),
(569,886,o),
(576,913,o),
(576,928,cs),
(576,948,o),
(563,965,o),
(548,965,cs),
(532,965,o),
(514,965,o),
(493,964,cs),
(472,963,o),
(448,962,o),
(420,962,cs),
(378,962,o),
(329,964,o),
(299,964,cs),
(276,964,o),
(266,944,o),
(266,925,cs),
(266,906,o),
(280,885,o),
(299,885,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
9 1 7 0 8 5 7 8 91 0 1 0 2 0 1 2 91 6 1 4 4 5 83 0 5 5 12 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 4 1 6 6 4 96 9 1 7 0 8 5 7 8 91 0 1 0 2 0 1 2 91 0 6 6 5 84 0 5 5 12 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 4 1 6 6 4 96 9 1 7 0 8 5 7 8 91 0 1 0 2 0 1 2 91 0 6 6 5 84 0 5 5 14 67 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
78 77 91 84 77 103 78 95 52 52 47 44 36 61 36 10 22
CALL[ ]	/* CallFunction */";
};
width = 784;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(540,-14,o),
(648,75,o),
(648,272,cs),
(648,309,o),
(648,345,o),
(647,382,cs),
(646,419,o),
(646,455,o),
(646,492,cs),
(646,525,o),
(646,559,o),
(647,592,cs),
(648,625,o),
(648,658,o),
(648,692,cs),
(648,716,o),
(709,717,o),
(728,717,cs),
(744,717,o),
(765,719,o),
(765,742,cs),
(765,751,o),
(762,758,o),
(756,762,cs),
(749,765,o),
(735,767,o),
(714,767,cs),
(518,767,ls),
(493,767,o),
(481,759,o),
(481,742,cs),
(481,722,o),
(503,717,o),
(518,717,cs),
(530,717,o),
(578,718,o),
(578,694,cs),
(578,272,ls),
(578,161,o),
(527,48,o),
(383,48,cs),
(191,48,o),
(184,178,o),
(184,323,cs),
(184,746,l),
(184,746,l),
(184,770,o),
(247,771,o),
(264,771,cs),
(280,771,o),
(301,777,o),
(301,796,cs),
(301,805,o),
(298,812,o),
(292,816,cs),
(285,819,o),
(271,821,o),
(250,821,cs),
(53,821,ls),
(41,821,o),
(16,817,o),
(16,796,cs),
(16,772,o),
(38,771,o),
(53,771,cs),
(65,771,o),
(113,772,o),
(113,748,cs),
(113,701,o),
(113,654,o),
(114,607,cs),
(115,560,o),
(115,514,o),
(115,467,cs),
(115,444,o),
(115,422,o),
(115,400,cs),
(114,377,o),
(114,355,o),
(114,334,cs),
(114,261,o),
(114,193,o),
(134,125,cs),
(161,30,o),
(261,-14,o),
(382,-14,cs)
);
},
{
closed = 1;
nodes = (
(358,880,o),
(455,881,o),
(529,881,cs),
(552,881,o),
(558,903,o),
(558,914,cs),
(558,929,o),
(548,942,o),
(537,942,cs),
(521,942,o),
(503,942,o),
(482,941,cs),
(461,940,o),
(437,939,o),
(409,939,cs),
(367,939,o),
(318,941,o),
(288,941,cs),
(269,941,o),
(262,926,o),
(262,911,cs),
(262,896,o),
(273,880,o),
(288,880,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
10 1 8 0 9 6 8 9 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
10 1 8 0 9 6 8 9 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
84 83 95 88 83 107 84 99 79 76 72 69 65 62 45 52 51 56 37 11 31
CALL[ ]	/* CallFunction */";
};
width = 772;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(526,-14,o),
(634,76,o),
(634,272,cs),
(634,309,o),
(634,345,o),
(633,382,cs),
(632,419,o),
(632,455,o),
(632,492,cs),
(632,529,o),
(632,565,o),
(633,602,cs),
(634,638,o),
(634,675,o),
(634,712,cs),
(634,733,o),
(687,737,o),
(704,737,cs),
(720,737,o),
(741,737,o),
(741,752,cs),
(741,757,o),
(738,761,o),
(732,764,cs),
(725,766,o),
(711,767,o),
(690,767,cs),
(508,767,ls),
(496,767,o),
(471,767,o),
(471,752,cs),
(471,739,o),
(493,737,o),
(508,737,cs),
(535,737,o),
(594,737,o),
(594,714,cs),
(594,272,ls),
(594,146,o),
(535,18,o),
(368,18,cs),
(173,18,o),
(170,165,o),
(170,323,cs),
(170,766,ls),
(170,790,o),
(226,791,o),
(245,791,cs),
(261,791,o),
(282,791,o),
(282,806,cs),
(282,811,o),
(279,815,o),
(273,818,cs),
(266,820,o),
(252,821,o),
(231,821,cs),
(49,821,ls),
(37,821,o),
(12,821,o),
(12,806,cs),
(12,793,o),
(34,791,o),
(49,791,cs),
(79,791,o),
(129,791,o),
(129,768,cs),
(129,717,o),
(129,667,o),
(130,617,cs),
(131,567,o),
(131,517,o),
(131,467,cs),
(131,444,o),
(131,422,o),
(131,400,cs),
(130,377,o),
(130,355,o),
(130,334,cs),
(130,261,o),
(133,193,o),
(150,125,cs),
(174,31,o),
(260,-14,o),
(367,-14,cs)
);
},
{
closed = 1;
nodes = (
(343,875,o),
(440,876,o),
(514,876,cs),
(529,876,o),
(533,887,o),
(533,894,cs),
(533,901,o),
(527,907,o),
(522,907,cs),
(506,907,o),
(488,907,o),
(467,906,cs),
(446,905,o),
(422,904,o),
(394,904,cs),
(352,904,o),
(303,906,o),
(273,906,cs),
(262,906,o),
(257,898,o),
(257,891,cs),
(257,884,o),
(264,875,o),
(273,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
10 1 8 0 9 6 8 9 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
10 1 8 0 9 6 8 9 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
84 83 95 88 83 107 84 99 79 76 72 69 65 62 45 52 52 56 36 11 20
CALL[ ]	/* CallFunction */";
};
width = 755;
}
);
note = Umacron;
unicode = 362;
},
{
glyphname = Uogonek;
kernLeft = U;
kernRight = U;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(459,-170,o),
(490,-141,o),
(490,-117,cs),
(490,-105,o),
(478,-93,o),
(465,-93,cs),
(445,-93,o),
(446,-117,o),
(405,-117,cs),
(390,-117,o),
(376,-111,o),
(376,-96,cs),
(376,-69,o),
(392,-29,o),
(420,-13,c),
(564,-5,o),
(660,88,o),
(660,272,cs),
(660,309,o),
(660,345,o),
(659,382,cs),
(658,419,o),
(658,455,o),
(658,492,cs),
(658,523,o),
(658,553,o),
(659,581,cs),
(660,608,o),
(660,638,o),
(660,670,cs),
(660,683,o),
(667,691,o),
(680,695,cs),
(693,698,o),
(711,700,o),
(734,700,cs),
(750,700,o),
(771,709,o),
(771,736,cs),
(771,759,o),
(763,767,o),
(720,767,cs),
(517,767,ls),
(488,767,o),
(470,756,o),
(470,736,cs),
(470,712,o),
(478,700,o),
(517,696,cs),
(557,692,o),
(569,686,o),
(569,663,cs),
(569,272,ls),
(569,169,o),
(523,66,o),
(396,66,cs),
(203,66,o),
(196,190,o),
(196,323,cs),
(196,729,ls),
(196,754,o),
(236,754,o),
(279,754,cs),
(306,754,o),
(316,767,o),
(316,790,cs),
(316,813,o),
(303,821,o),
(260,821,cs),
(41,821,ls),
(29,821,o),
(4,815,o),
(4,790,cs),
(4,762,o),
(24,759,o),
(41,759,cs),
(61,759,o),
(77,758,o),
(88,755,cs),
(99,752,o),
(104,745,o),
(104,734,cs),
(104,689,o),
(104,644,o),
(105,600,cs),
(106,556,o),
(106,512,o),
(106,467,cs),
(106,444,o),
(106,422,o),
(106,400,cs),
(105,377,o),
(105,355,o),
(105,334,cs),
(105,257,o),
(107,172,o),
(125,125,cs),
(158,36,o),
(228,-8,o),
(363,-13,c),
(338,-27,o),
(297,-53,o),
(297,-95,cs),
(297,-147,o),
(357,-170,o),
(407,-170,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 10 1 9 1 10 9 104 0 6 0 7 5 6 7 91 0 9 11 1 0 9 0 87 4 1 2 2 3 83 0 3 3 12 67 0 5 5 1 83 8 1 1 1 24 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 2 6 4 4 2 96 0 10 1 9 1 10 9 104 0 6 0 7 5 6 7 91 0 9 11 1 0 9 0 87 0 4 4 3 84 0 3 3 12 67 0 5 5 1 83 8 1 1 1 24 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 2 6 4 4 2 96 0 10 1 9 1 10 9 104 0 6 0 7 5 6 7 91 0 9 11 1 0 9 0 87 0 4 4 3 84 0 3 3 14 67 0 5 5 1 83 8 1 1 1 24 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 99 97 94 92 87 86 74 72 68 65 52 50 42 39 35 32 28 26 11 10 0 105 1 105 12 15
CALL[ ]	/* CallFunction */";
};
width = 786;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(541,-14,o),
(649,75,o),
(649,272,cs),
(649,309,o),
(649,345,o),
(648,382,cs),
(647,419,o),
(647,455,o),
(647,492,cs),
(647,525,o),
(647,559,o),
(648,592,cs),
(649,625,o),
(649,658,o),
(649,692,cs),
(649,716,o),
(710,717,o),
(729,717,cs),
(745,717,o),
(766,719,o),
(766,742,cs),
(766,751,o),
(763,758,o),
(757,762,cs),
(750,765,o),
(736,767,o),
(715,767,cs),
(519,767,ls),
(494,767,o),
(482,759,o),
(482,742,cs),
(482,722,o),
(504,717,o),
(519,717,cs),
(531,717,o),
(579,718,o),
(579,694,cs),
(579,272,ls),
(579,161,o),
(528,48,o),
(384,48,cs),
(192,48,o),
(185,178,o),
(185,323,cs),
(185,746,l),
(185,746,l),
(185,770,o),
(248,771,o),
(265,771,cs),
(281,771,o),
(302,777,o),
(302,796,cs),
(302,805,o),
(299,812,o),
(293,816,cs),
(286,819,o),
(272,821,o),
(251,821,cs),
(54,821,ls),
(42,821,o),
(17,817,o),
(17,796,cs),
(17,772,o),
(39,771,o),
(54,771,cs),
(66,771,o),
(114,772,o),
(114,748,cs),
(114,701,o),
(114,654,o),
(115,607,cs),
(116,560,o),
(116,514,o),
(116,467,cs),
(116,444,o),
(116,422,o),
(116,400,cs),
(115,377,o),
(115,355,o),
(115,334,cs),
(115,261,o),
(115,193,o),
(135,125,cs),
(162,30,o),
(262,-14,o),
(383,-14,cs)
);
},
{
closed = 1;
nodes = (
(438,-149,o),
(468,-108,o),
(468,-98,cs),
(468,-87,o),
(462,-76,o),
(447,-76,cs),
(443,-76,o),
(439,-78,o),
(434,-82,cs),
(429,-87,o),
(423,-92,o),
(418,-97,cs),
(412,-103,o),
(401,-106,o),
(384,-106,cs),
(368,-106,o),
(353,-91,o),
(353,-75,cs),
(353,-56,o),
(367,-2,o),
(412,13,c),
(362,14,l),
(362,14,l),
(348,7,o),
(336,0,o),
(325,-9,cs),
(306,-24,o),
(289,-45,o),
(289,-76,cs),
(289,-119,o),
(331,-149,o),
(390,-149,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 0 1 11 11 0 96 0 9 4 8 4 9 8 104 0 2 3 1 1 0 2 1 91 0 8 0 10 8 10 87 7 1 5 5 6 83 0 6 6 12 67 12 1 11 11 4 84 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 0 1 11 1 0 11 104 0 9 4 8 4 9 8 104 0 2 3 1 1 0 2 1 91 0 8 0 10 8 10 87 7 1 5 5 6 83 0 6 6 12 67 12 1 11 11 4 84 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 0 1 11 1 0 11 104 0 9 4 8 4 9 8 104 0 2 3 1 1 0 2 1 91 0 8 0 10 8 10 87 7 1 5 5 6 83 0 6 6 14 67 12 1 11 11 4 84 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
83 83 83 112 83 112 105 103 97 95 92 90 79 76 72 69 65 62 45 52 51 56 37 13 31
CALL[ ]	/* CallFunction */";
};
width = 773;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(428,-172,o),
(458,-131,o),
(458,-121,cs),
(458,-113,o),
(456,-105,o),
(444,-105,cs),
(425,-105,o),
(419,-145,o),
(382,-145,cs),
(351,-145,o),
(343,-115,o),
(343,-98,cs),
(343,-79,o),
(354,-31,o),
(395,-13,c),
(534,-3,o),
(634,82,o),
(634,272,cs),
(634,309,o),
(634,345,o),
(633,382,cs),
(632,419,o),
(632,455,o),
(632,492,cs),
(632,529,o),
(632,565,o),
(633,602,cs),
(634,638,o),
(634,675,o),
(634,712,cs),
(634,733,o),
(687,737,o),
(704,737,cs),
(720,737,o),
(741,737,o),
(741,752,cs),
(741,757,o),
(738,761,o),
(732,764,cs),
(725,766,o),
(711,767,o),
(690,767,cs),
(508,767,ls),
(496,767,o),
(471,767,o),
(471,752,cs),
(471,739,o),
(493,737,o),
(508,737,cs),
(535,737,o),
(594,737,o),
(594,714,cs),
(594,272,ls),
(594,146,o),
(535,18,o),
(368,18,cs),
(173,18,o),
(170,165,o),
(170,323,cs),
(170,766,ls),
(170,790,o),
(226,791,o),
(245,791,cs),
(261,791,o),
(282,791,o),
(282,806,cs),
(282,811,o),
(279,815,o),
(273,818,cs),
(266,820,o),
(252,821,o),
(231,821,cs),
(49,821,ls),
(37,821,o),
(12,821,o),
(12,806,cs),
(12,793,o),
(34,791,o),
(49,791,cs),
(79,791,o),
(129,791,o),
(129,768,cs),
(129,717,o),
(129,667,o),
(130,617,cs),
(131,567,o),
(131,517,o),
(131,467,cs),
(131,444,o),
(131,422,o),
(131,400,cs),
(130,377,o),
(130,355,o),
(130,334,cs),
(130,261,o),
(133,193,o),
(150,125,cs),
(174,34,o),
(255,-11,o),
(357,-14,c),
(336,-26,o),
(299,-55,o),
(299,-99,cs),
(299,-142,o),
(333,-172,o),
(380,-172,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 5 7 4 7 5 4 104 0 2 3 1 1 0 2 1 91 0 4 0 6 4 6 87 10 1 8 8 9 83 0 9 9 12 67 0 0 0 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 5 7 4 7 5 4 104 0 2 3 1 1 0 2 1 91 0 4 0 6 4 6 87 10 1 8 8 9 83 0 9 9 14 67 0 0 0 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
110 107 103 100 96 93 77 76 69 67 61 59 56 54 52 52 56 36 11 19
CALL[ ]	/* CallFunction */";
};
width = 755;
}
);
note = Uogonek;
unicode = 370;
},
{
glyphname = Uring;
kernLeft = U;
kernRight = U;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(550,-14,o),
(658,76,o),
(658,272,cs),
(658,309,o),
(658,345,o),
(657,382,cs),
(656,419,o),
(656,455,o),
(656,492,cs),
(656,523,o),
(656,553,o),
(657,581,cs),
(658,608,o),
(658,638,o),
(658,670,cs),
(658,683,o),
(665,691,o),
(678,695,cs),
(691,698,o),
(709,700,o),
(732,700,cs),
(748,700,o),
(769,709,o),
(769,736,cs),
(769,759,o),
(761,767,o),
(718,767,cs),
(515,767,ls),
(486,767,o),
(468,756,o),
(468,736,cs),
(468,712,o),
(476,700,o),
(515,696,cs),
(555,692,o),
(567,686,o),
(567,663,cs),
(567,272,ls),
(567,169,o),
(521,66,o),
(394,66,cs),
(201,66,o),
(194,190,o),
(194,323,cs),
(194,729,l),
(194,729,l),
(194,754,o),
(234,754,o),
(277,754,cs),
(304,754,o),
(314,767,o),
(314,790,cs),
(314,813,o),
(301,821,o),
(258,821,cs),
(39,821,ls),
(27,821,o),
(2,815,o),
(2,790,cs),
(2,762,o),
(22,759,o),
(39,759,cs),
(59,759,o),
(75,758,o),
(86,755,cs),
(97,752,o),
(102,745,o),
(102,734,cs),
(102,689,o),
(102,644,o),
(103,600,cs),
(104,556,o),
(104,512,o),
(104,467,cs),
(104,444,o),
(104,422,o),
(104,400,cs),
(103,377,o),
(103,355,o),
(103,334,cs),
(103,257,o),
(105,172,o),
(123,125,cs),
(159,30,o),
(237,-14,o),
(393,-14,cs)
);
},
{
closed = 1;
nodes = (
(451,833,o),
(484,856,o),
(484,904,cs),
(484,949,o),
(458,972,o),
(406,972,cs),
(365,972,o),
(331,953,o),
(331,902,cs),
(331,855,o),
(366,833,o),
(411,833,cs)
);
},
{
closed = 1;
nodes = (
(402,876,o),
(387,879,o),
(387,902,cs),
(387,913,o),
(390,921,o),
(395,925,cs),
(400,928,o),
(404,930,o),
(407,930,cs),
(418,930,o),
(429,922,o),
(429,903,cs),
(429,882,o),
(419,876,o),
(411,876,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
11 1 2 1 3 0 2 96 0 3 0 1 3 94 0 1 0 0 9 1 0 91 0 5 0 6 4 5 6 91 10 1 8 8 9 83 0 9 9 12 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
11 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 1 0 0 9 1 0 91 0 5 0 6 4 5 6 91 10 1 8 8 9 83 0 9 9 12 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
11 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 8 5 10 10 8 96 0 1 0 0 9 1 0 91 0 5 0 6 4 5 6 91 0 10 10 9 84 0 9 9 12 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
11 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 8 5 10 10 8 96 0 1 0 0 9 1 0 91 0 5 0 6 4 5 6 91 0 10 10 9 84 0 9 9 14 67 0 4 4 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
12 11 96 93 89 86 82 80 65 63 51 49 45 42 29 27 18 16 11 22 12 22 36 34 12 17
CALL[ ]	/* CallFunction */";
};
width = 784;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(540,-14,o),
(648,75,o),
(648,272,cs),
(648,309,o),
(648,345,o),
(647,382,cs),
(646,419,o),
(646,455,o),
(646,492,cs),
(646,525,o),
(646,559,o),
(647,592,cs),
(648,625,o),
(648,658,o),
(648,692,cs),
(648,716,o),
(709,717,o),
(728,717,cs),
(744,717,o),
(765,719,o),
(765,742,cs),
(765,751,o),
(762,758,o),
(756,762,cs),
(749,765,o),
(735,767,o),
(714,767,cs),
(518,767,ls),
(493,767,o),
(481,759,o),
(481,742,cs),
(481,722,o),
(503,717,o),
(518,717,cs),
(530,717,o),
(578,718,o),
(578,694,cs),
(578,272,ls),
(578,161,o),
(527,48,o),
(383,48,cs),
(191,48,o),
(184,178,o),
(184,323,cs),
(184,746,l),
(184,746,l),
(184,770,o),
(247,771,o),
(264,771,cs),
(280,771,o),
(301,777,o),
(301,796,cs),
(301,805,o),
(298,812,o),
(292,816,cs),
(285,819,o),
(271,821,o),
(250,821,cs),
(53,821,ls),
(41,821,o),
(16,817,o),
(16,796,cs),
(16,772,o),
(38,771,o),
(53,771,cs),
(65,771,o),
(113,772,o),
(113,748,cs),
(113,701,o),
(113,654,o),
(114,607,cs),
(115,560,o),
(115,514,o),
(115,467,cs),
(115,444,o),
(115,422,o),
(115,400,cs),
(114,377,o),
(114,355,o),
(114,334,cs),
(114,261,o),
(114,193,o),
(134,125,cs),
(161,30,o),
(261,-14,o),
(382,-14,cs)
);
},
{
closed = 1;
nodes = (
(435,833,o),
(469,856,o),
(469,904,cs),
(469,947,o),
(445,972,o),
(398,972,cs),
(358,972,o),
(327,942,o),
(327,902,cs),
(327,861,o),
(359,833,o),
(399,833,cs)
);
},
{
closed = 1;
nodes = (
(391,867,o),
(372,873,o),
(372,902,cs),
(372,930,o),
(387,938,o),
(398,938,cs),
(411,938,o),
(424,928,o),
(424,903,cs),
(424,888,o),
(421,878,o),
(414,874,cs),
(407,869,o),
(402,867,o),
(399,867,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
12 1 10 9 11 8 10 96 0 11 8 9 11 94 0 9 0 8 6 9 8 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
12 1 10 9 11 9 10 11 104 0 11 8 9 11 8 102 0 9 0 8 6 9 8 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
12 1 10 9 11 9 10 11 104 0 11 8 9 11 8 102 0 9 0 8 6 9 8 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
96 95 102 100 95 106 96 106 93 91 87 85 79 76 72 69 65 62 45 52 51 56 37 13 31
CALL[ ]	/* CallFunction */";
};
width = 772;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(526,-14,o),
(634,76,o),
(634,272,cs),
(634,309,o),
(634,345,o),
(633,382,cs),
(632,419,o),
(632,455,o),
(632,492,cs),
(632,529,o),
(632,565,o),
(633,602,cs),
(634,638,o),
(634,675,o),
(634,712,cs),
(634,733,o),
(687,737,o),
(704,737,cs),
(720,737,o),
(741,737,o),
(741,752,cs),
(741,757,o),
(738,761,o),
(732,764,cs),
(725,766,o),
(711,767,o),
(690,767,cs),
(508,767,ls),
(496,767,o),
(471,767,o),
(471,752,cs),
(471,739,o),
(493,737,o),
(508,737,cs),
(535,737,o),
(594,737,o),
(594,714,cs),
(594,272,ls),
(594,146,o),
(535,18,o),
(368,18,cs),
(173,18,o),
(170,165,o),
(170,323,cs),
(170,766,ls),
(170,790,o),
(226,791,o),
(245,791,cs),
(261,791,o),
(282,791,o),
(282,806,cs),
(282,811,o),
(279,815,o),
(273,818,cs),
(266,820,o),
(252,821,o),
(231,821,cs),
(49,821,ls),
(37,821,o),
(12,821,o),
(12,806,cs),
(12,793,o),
(34,791,o),
(49,791,cs),
(79,791,o),
(129,791,o),
(129,768,cs),
(129,717,o),
(129,667,o),
(130,617,cs),
(131,567,o),
(131,517,o),
(131,467,cs),
(131,444,o),
(131,422,o),
(131,400,cs),
(130,377,o),
(130,355,o),
(130,334,cs),
(130,261,o),
(133,193,o),
(150,125,cs),
(174,31,o),
(260,-14,o),
(367,-14,cs)
);
},
{
closed = 1;
nodes = (
(413,833,o),
(447,856,o),
(447,904,cs),
(447,940,o),
(426,972,o),
(386,972,cs),
(347,972,o),
(320,942,o),
(320,902,cs),
(320,861,o),
(347,833,o),
(382,833,cs)
);
},
{
closed = 1;
nodes = (
(359,852,o),
(350,873,o),
(350,902,cs),
(350,930,o),
(359,952,o),
(384,952,cs),
(411,952,o),
(417,928,o),
(417,903,cs),
(417,872,o),
(405,852,o),
(382,852,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 9 12 1 10 11 9 10 91 0 2 3 1 1 0 2 1 91 0 8 8 11 83 0 11 11 20 67 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 9 12 1 10 11 9 10 91 0 11 0 8 6 11 8 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 9 12 1 10 11 9 10 91 0 11 0 8 6 11 8 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
96 95 102 100 95 106 96 106 93 91 87 85 79 76 72 69 65 62 45 52 52 56 36 13 20
CALL[ ]	/* CallFunction */";
};
width = 755;
}
);
note = Uring;
unicode = 366;
},
{
glyphname = Utilde;
kernLeft = U;
kernRight = U;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(550,-14,o),
(658,76,o),
(658,272,cs),
(658,309,o),
(658,345,o),
(657,382,cs),
(656,419,o),
(656,455,o),
(656,492,cs),
(656,523,o),
(656,553,o),
(657,581,cs),
(658,608,o),
(658,638,o),
(658,670,cs),
(658,683,o),
(665,691,o),
(678,695,cs),
(691,698,o),
(709,700,o),
(732,700,cs),
(748,700,o),
(769,709,o),
(769,736,cs),
(769,759,o),
(761,767,o),
(718,767,cs),
(515,767,ls),
(486,767,o),
(468,756,o),
(468,736,cs),
(468,712,o),
(476,700,o),
(515,696,cs),
(555,692,o),
(567,686,o),
(567,663,cs),
(567,272,ls),
(567,169,o),
(521,66,o),
(394,66,cs),
(201,66,o),
(194,190,o),
(194,323,cs),
(194,729,l),
(194,729,l),
(194,754,o),
(234,754,o),
(277,754,cs),
(304,754,o),
(314,767,o),
(314,790,cs),
(314,813,o),
(301,821,o),
(258,821,cs),
(39,821,ls),
(27,821,o),
(2,815,o),
(2,790,cs),
(2,762,o),
(22,759,o),
(39,759,cs),
(59,759,o),
(75,758,o),
(86,755,cs),
(97,752,o),
(102,745,o),
(102,734,cs),
(102,689,o),
(102,644,o),
(103,600,cs),
(104,556,o),
(104,512,o),
(104,467,cs),
(104,444,o),
(104,422,o),
(104,400,cs),
(103,377,o),
(103,355,o),
(103,334,cs),
(103,257,o),
(105,172,o),
(123,125,cs),
(159,30,o),
(237,-14,o),
(393,-14,cs)
);
},
{
closed = 1;
nodes = (
(283,861,o),
(307,886,o),
(346,886,cs),
(385,886,o),
(427,862,o),
(483,862,cs),
(516,862,o),
(594,880,o),
(594,937,cs),
(594,958,o),
(579,972,o),
(572,972,cs),
(567,972,o),
(557,968,o),
(542,959,cs),
(523,948,o),
(501,942,o),
(482,942,cs),
(443,942,o),
(381,970,o),
(345,970,cs),
(320,970,o),
(298,964,o),
(277,952,cs),
(258,941,o),
(243,926,o),
(243,897,cs),
(243,877,o),
(250,861,o),
(262,861,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
9 1 7 0 11 10 7 11 91 0 8 12 1 10 5 8 10 91 0 1 0 2 0 1 2 91 6 1 4 4 5 83 0 5 5 12 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 4 1 6 6 4 96 9 1 7 0 11 10 7 11 91 0 8 12 1 10 5 8 10 91 0 1 0 2 0 1 2 91 0 6 6 5 84 0 5 5 12 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 4 1 6 6 4 96 9 1 7 0 11 10 7 11 91 0 8 12 1 10 5 8 10 91 0 1 0 2 0 1 2 91 0 6 6 5 84 0 5 5 14 67 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
111 109 106 104 101 99 93 91 35 40 52 52 47 44 36 61 36 13 24
CALL[ ]	/* CallFunction */";
};
width = 784;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(540,-14,o),
(648,75,o),
(648,272,cs),
(648,309,o),
(648,345,o),
(647,382,cs),
(646,419,o),
(646,455,o),
(646,492,cs),
(646,525,o),
(646,559,o),
(647,592,cs),
(648,625,o),
(648,658,o),
(648,692,cs),
(648,716,o),
(709,717,o),
(728,717,cs),
(744,717,o),
(765,719,o),
(765,742,cs),
(765,751,o),
(762,758,o),
(756,762,cs),
(749,765,o),
(735,767,o),
(714,767,cs),
(518,767,ls),
(493,767,o),
(481,759,o),
(481,742,cs),
(481,722,o),
(503,717,o),
(518,717,cs),
(530,717,o),
(578,718,o),
(578,694,cs),
(578,272,ls),
(578,161,o),
(527,48,o),
(383,48,cs),
(191,48,o),
(184,178,o),
(184,323,cs),
(184,746,l),
(184,746,l),
(184,770,o),
(247,771,o),
(264,771,cs),
(280,771,o),
(301,777,o),
(301,796,cs),
(301,805,o),
(298,812,o),
(292,816,cs),
(285,819,o),
(271,821,o),
(250,821,cs),
(53,821,ls),
(41,821,o),
(16,817,o),
(16,796,cs),
(16,772,o),
(38,771,o),
(53,771,cs),
(65,771,o),
(113,772,o),
(113,748,cs),
(113,701,o),
(113,654,o),
(114,607,cs),
(115,560,o),
(115,514,o),
(115,467,cs),
(115,444,o),
(115,422,o),
(115,400,cs),
(114,377,o),
(114,355,o),
(114,334,cs),
(114,261,o),
(114,193,o),
(134,125,cs),
(161,30,o),
(261,-14,o),
(382,-14,cs)
);
},
{
closed = 1;
nodes = (
(260,879,o),
(287,904,o),
(327,904,cs),
(366,904,o),
(408,880,o),
(464,880,cs),
(520,880,o),
(553,902,o),
(566,925,cs),
(569,931,o),
(571,937,o),
(571,944,cs),
(571,960,o),
(560,972,o),
(553,972,cs),
(550,972,o),
(546,971,o),
(543,970,cs),
(539,968,o),
(532,964,o),
(523,959,cs),
(500,948,o),
(480,942,o),
(463,942,cs),
(424,942,o),
(362,970,o),
(326,970,cs),
(301,970,o),
(279,964,o),
(258,952,cs),
(248,946,o),
(241,941,o),
(237,936,cs),
(233,931,o),
(230,927,o),
(229,924,cs),
(227,919,o),
(226,913,o),
(226,907,cs),
(226,892,o),
(232,879,o),
(243,879,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 6 9 11 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 6 9 11 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
117 115 112 110 107 105 99 97 94 92 89 87 79 76 72 69 65 62 45 52 51 56 37 14 31
CALL[ ]	/* CallFunction */";
};
width = 772;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(526,-14,o),
(634,76,o),
(634,272,cs),
(634,309,o),
(634,345,o),
(633,382,cs),
(632,419,o),
(632,455,o),
(632,492,cs),
(632,529,o),
(632,565,o),
(633,602,cs),
(634,638,o),
(634,675,o),
(634,712,cs),
(634,733,o),
(687,737,o),
(704,737,cs),
(720,737,o),
(741,737,o),
(741,752,cs),
(741,757,o),
(738,761,o),
(732,764,cs),
(725,766,o),
(711,767,o),
(690,767,cs),
(508,767,ls),
(496,767,o),
(471,767,o),
(471,752,cs),
(471,739,o),
(493,737,o),
(508,737,cs),
(535,737,o),
(594,737,o),
(594,714,cs),
(594,272,ls),
(594,146,o),
(535,18,o),
(368,18,cs),
(173,18,o),
(170,165,o),
(170,323,cs),
(170,766,ls),
(170,790,o),
(226,791,o),
(245,791,cs),
(261,791,o),
(282,791,o),
(282,806,cs),
(282,811,o),
(279,815,o),
(273,818,cs),
(266,820,o),
(252,821,o),
(231,821,cs),
(49,821,ls),
(37,821,o),
(12,821,o),
(12,806,cs),
(12,793,o),
(34,791,o),
(49,791,cs),
(79,791,o),
(129,791,o),
(129,768,cs),
(129,717,o),
(129,667,o),
(130,617,cs),
(131,567,o),
(131,517,o),
(131,467,cs),
(131,444,o),
(131,422,o),
(131,400,cs),
(130,377,o),
(130,355,o),
(130,334,cs),
(130,261,o),
(133,193,o),
(150,125,cs),
(174,31,o),
(260,-14,o),
(367,-14,cs)
);
},
{
closed = 1;
nodes = (
(246,888,o),
(273,913,o),
(314,913,cs),
(353,913,o),
(395,889,o),
(451,889,cs),
(504,889,o),
(553,909,o),
(553,934,cs),
(553,943,o),
(547,951,o),
(540,951,cs),
(537,951,o),
(533,950,o),
(530,949,cs),
(526,947,o),
(519,943,o),
(510,938,cs),
(487,927,o),
(467,921,o),
(450,921,cs),
(411,921,o),
(349,949,o),
(313,949,cs),
(288,949,o),
(266,943,o),
(245,931,cs),
(226,920,o),
(216,910,o),
(216,903,cs),
(216,896,o),
(223,888,o),
(230,888,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 6 9 11 91 0 2 3 1 1 0 2 1 92 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 6 9 11 91 0 2 3 1 1 0 2 1 92 7 1 5 5 6 83 0 6 6 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
116 114 111 109 106 104 98 96 93 91 88 86 79 76 72 69 65 62 45 52 52 56 36 14 20
CALL[ ]	/* CallFunction */";
};
width = 755;
}
);
note = Utilde;
unicode = 360;
},
{
glyphname = V;
kernLeft = V;
kernRight = V;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(377,-38,o),
(388,-20,o),
(391,-9,cs),
(415,74,o),
(435,143,o),
(484,314,cs),
(525,455,o),
(564,582,o),
(593,665,cs),
(602,689,o),
(613,700,o),
(642,703,cs),
(641,703,o),
(691,709,o),
(721,709,cs),
(738,710,o),
(758,713,o),
(758,736,cs),
(758,763,o),
(749,766,o),
(718,766,cs),
(455,766,ls),
(420,766,o),
(403,754,o),
(403,731,cs),
(403,707,o),
(415,696,o),
(450,695,cs),
(469,694,o),
(483,693,o),
(490,692,cs),
(497,690,o),
(500,686,o),
(500,679,cs),
(500,653,o),
(474,561,o),
(423,385,cs),
(372,213,o),
(344,127,o),
(344,125,cs),
(344,150,o),
(305,267,o),
(266,413,cs),
(230,544,o),
(189,710,o),
(189,731,cs),
(189,767,o),
(285,741,o),
(285,794,cs),
(285,817,o),
(274,821,o),
(247,821,cs),
(39,821,ls),
(3,821,o),
(-15,814,o),
(-15,793,cs),
(-15,767,o),
(19,759,o),
(40,759,cs),
(71,758,o),
(87,752,o),
(95,725,cs),
(299,-9,ls),
(303,-25,o),
(318,-38,o),
(345,-38,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 4 107 0 1 3 2 2 0 4 1 0 91 0 5 5 6 83 0 6 6 12 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 1 3 2 2 0 4 1 0 91 0 5 5 6 83 0 6 6 12 67 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 2 5 0 0 2 96 0 1 3 1 0 4 1 0 91 0 5 5 6 83 0 6 6 12 67 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 2 5 0 0 2 96 0 4 0 4 107 0 1 3 1 0 4 1 0 91 0 5 5 6 83 0 6 6 12 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
3 1 2 5 0 0 2 96 0 4 0 4 107 0 1 0 0 4 1 0 91 0 5 5 6 83 0 6 6 12 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 2 5 3 0 2 96 0 3 0 0 3 94 0 4 0 4 107 0 1 0 0 4 1 0 91 0 5 5 6 83 0 6 6 12 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 2 5 3 0 2 96 0 3 0 0 3 94 0 4 0 4 107 0 1 0 0 4 1 0 91 0 5 5 6 83 0 6 6 14 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
54 37 44 19 21 51 43 7 22
CALL[ ]	/* CallFunction */";
};
width = 691;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(366,-34,o),
(376,-20,o),
(379,-9,cs),
(398,54,o),
(429,164,o),
(475,321,cs),
(514,457,o),
(554,591,o),
(586,677,cs),
(595,701,o),
(606,712,o),
(635,715,cs),
(634,715,o),
(680,721,o),
(714,721,cs),
(727,721,o),
(744,723,o),
(744,742,cs),
(744,762,o),
(734,766,o),
(711,766,cs),
(468,766,ls),
(441,766,o),
(429,760,o),
(429,741,cs),
(429,719,o),
(455,717,o),
(468,717,cs),
(477,716,o),
(486,716,o),
(495,715,cs),
(504,714,o),
(509,710,o),
(509,701,cs),
(509,678,o),
(481,571,o),
(428,380,cs),
(404,295,o),
(377,202,o),
(347,99,c),
(314,213,o),
(285,316,o),
(260,408,cs),
(220,554,o),
(174,726,o),
(174,751,cs),
(174,787,o),
(270,760,o),
(270,801,cs),
(270,816,o),
(263,821,o),
(239,821,cs),
(22,821,ls),
(-1,821,o),
(-23,820,o),
(-23,801,cs),
(-23,778,o),
(4,775,o),
(23,775,cs),
(68,775,o),
(91,770,o),
(96,743,c),
(308,-9,ls),
(313,-26,o),
(329,-34,o),
(345,-34,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 1 3 2 2 0 4 1 0 91 0 5 5 6 83 0 6 6 12 67 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 4 107 0 1 3 2 2 0 4 1 0 91 0 5 5 6 83 0 6 6 12 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 4 107 0 1 3 2 2 0 4 1 0 91 0 5 5 6 83 0 6 6 14 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
52 37 44 19 36 54 26 7 22
CALL[ ]	/* CallFunction */";
};
width = 687;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(352,-28,o),
(359,-20,o),
(362,-9,cs),
(381,54,o),
(414,167,o),
(462,330,cs),
(503,472,o),
(544,611,o),
(576,697,cs),
(585,721,o),
(596,732,o),
(625,735,cs),
(624,735,o),
(670,741,o),
(704,741,cs),
(717,741,o),
(724,745,o),
(724,752,cs),
(724,763,o),
(713,766,o),
(701,766,cs),
(458,766,ls),
(445,766,o),
(436,764,o),
(431,761,cs),
(426,758,o),
(424,754,o),
(424,751,cs),
(424,736,o),
(445,737,o),
(458,737,cs),
(478,737,o),
(529,740,o),
(529,721,cs),
(529,695,o),
(497,584,o),
(436,367,cs),
(409,272,o),
(378,167,o),
(343,52,c),
(307,179,o),
(275,293,o),
(247,395,cs),
(184,622,o),
(152,753,o),
(152,771,cs),
(152,803,o),
(248,782,o),
(248,807,cs),
(248,812,o),
(246,816,o),
(242,818,cs),
(237,820,o),
(229,821,o),
(217,821,cs),
(0,821,ls),
(-23,821,o),
(-35,816,o),
(-35,807,cs),
(-35,795,o),
(-18,795,o),
(1,795,cs),
(33,795,o),
(57,793,o),
(74,789,cs),
(91,785,o),
(101,776,o),
(104,763,cs),
(321,-9,ls),
(325,-24,o),
(334,-28,o),
(341,-28,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 1 3 2 2 0 4 1 0 91 7 1 5 5 6 83 0 6 6 12 67 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 4 0 4 107 0 1 3 2 2 0 4 1 0 91 7 1 5 5 6 83 0 6 6 12 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 4 0 4 107 0 1 3 2 2 0 4 1 0 91 7 1 5 5 6 83 0 6 6 14 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
20 51 37 44 19 35 52 58 8 23
CALL[ ]	/* CallFunction */";
};
width = 682;
}
);
note = V;
unicode = 86;
},
{
glyphname = W;
kernLeft = W;
kernRight = W;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(810,-54,o),
(823,-40,o),
(830,-17,cs),
(915,295,o),
(952,422,o),
(1011,658,cs),
(1016,681,o),
(1033,693,o),
(1060,696,cs),
(1059,696,o),
(1118,702,o),
(1151,702,cs),
(1164,702,o),
(1188,706,o),
(1188,729,cs),
(1188,756,o),
(1171,759,o),
(1148,759,cs),
(893,759,ls),
(850,759,o),
(838,750,o),
(838,726,cs),
(838,701,o),
(850,693,o),
(893,690,cs),
(914,689,o),
(926,684,o),
(926,661,cs),
(926,639,o),
(899,548,o),
(862,415,cs),
(827,291,o),
(791,167,o),
(779,99,c),
(731,285,o),
(682,441,o),
(626,690,cs),
(614,743,o),
(602,753,o),
(571,753,cs),
(532,753,o),
(522,721,o),
(513,690,cs),
(502,658,o),
(457,489,o),
(429,378,cs),
(410,305,o),
(389,225,o),
(367,140,c),
(331,264,o),
(293,388,o),
(254,512,cs),
(217,626,o),
(191,719,o),
(191,736,cs),
(191,768,o),
(296,743,o),
(296,794,cs),
(296,809,o),
(287,821,o),
(263,821,cs),
(14,821,ls),
(-11,821,o),
(-29,813,o),
(-29,793,cs),
(-29,770,o),
(-18,761,o),
(23,757,cs),
(74,752,o),
(92,744,o),
(99,721,cs),
(141,589,o),
(179,465,o),
(215,348,cs),
(249,236,o),
(283,122,o),
(317,13,cs),
(322,-3,o),
(332,-17,o),
(363,-17,cs),
(398,-17,o),
(407,-5,o),
(414,16,cs),
(449,141,o),
(487,278,o),
(518,385,cs),
(535,447,o),
(553,507,o),
(570,566,c),
(570,557,o),
(590,485,o),
(623,364,cs),
(652,256,o),
(686,125,o),
(719,-15,cs),
(727,-48,o),
(754,-54,o),
(777,-54,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
100 82 41 3 6 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 5 6 5 107 8 1 1 4 3 2 3 0 6 1 0 91 0 7 7 12 67 0 6 6 21 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 1 0 0 2 96 0 5 6 5 107 8 1 1 4 3 2 0 6 1 0 91 0 7 7 12 67 0 6 6 21 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
3 1 2 1 0 0 2 96 0 5 6 5 107 8 1 1 4 1 0 6 1 0 91 0 7 7 12 67 0 6 6 21 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 8 1 2 1 8 2 104 3 1 2 4 0 2 94 0 4 0 0 4 94 0 5 6 5 107 0 1 0 0 6 1 0 91 0 7 7 12 67 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 8 1 2 1 8 2 104 3 1 2 4 0 2 94 0 4 0 0 4 94 0 5 6 5 107 0 1 0 0 6 1 0 91 0 7 7 14 67 0 6 6 21 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
93 91 68 65 50 48 41 17 17 36 52 34 9 21
CALL[ ]	/* CallFunction */";
};
width = 1131;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(792,-51,o),
(808,-44,o),
(815,-17,cs),
(856,134,o),
(891,262,o),
(920,365,cs),
(949,471,o),
(970,554,o),
(1000,670,cs),
(1005,693,o),
(1022,705,o),
(1049,708,cs),
(1048,708,o),
(1101,714,o),
(1140,714,cs),
(1153,714,o),
(1170,719,o),
(1170,735,cs),
(1170,759,o),
(1149,759,o),
(1137,759,cs),
(882,759,ls),
(855,759,o),
(848,750,o),
(848,734,cs),
(848,715,o),
(869,710,o),
(882,710,cs),
(899,710,o),
(936,711,o),
(936,681,cs),
(936,661,o),
(906,552,o),
(866,410,cs),
(823,257,o),
(787,134,o),
(773,68,c),
(754,141,o),
(730,226,o),
(704,323,cs),
(676,423,o),
(644,542,o),
(611,690,cs),
(602,729,o),
(594,747,o),
(566,747,cs),
(535,747,o),
(527,718,o),
(519,690,cs),
(503,637,o),
(466,504,o),
(429,364,cs),
(408,287,o),
(385,204,o),
(361,115,c),
(328,228,o),
(284,368,o),
(242,507,cs),
(197,652,o),
(173,732,o),
(173,751,cs),
(173,782,o),
(274,759,o),
(274,800,cs),
(274,813,o),
(267,821,o),
(243,821,cs),
(6,821,ls),
(-17,821,o),
(-31,816,o),
(-31,797,cs),
(-31,780,o),
(-12,775,o),
(7,775,cs),
(51,775,o),
(87,770,o),
(94,743,c),
(178,498,o),
(251,246,o),
(323,13,cs),
(330,-6,o),
(345,-12,o),
(364,-12,cs),
(383,-12,o),
(396,5,o),
(399,16,cs),
(423,101,o),
(457,220,o),
(501,375,cs),
(522,446,o),
(543,519,o),
(565,595,c),
(567,584,o),
(586,511,o),
(622,378,cs),
(653,262,o),
(689,129,o),
(725,-15,cs),
(733,-46,o),
(754,-51,o),
(773,-51,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
106 88 45 3 5 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 8 1 0 1 8 0 104 0 4 5 4 107 0 1 3 2 2 0 5 1 0 91 0 6 6 7 83 0 7 7 12 67 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 8 1 0 1 8 0 104 0 4 5 4 107 0 1 3 2 2 0 5 1 0 91 0 6 6 7 83 0 7 7 12 67 0 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 8 1 2 1 8 2 104 0 2 0 0 2 94 0 4 5 4 107 0 1 3 1 0 5 1 0 91 0 6 6 7 83 0 7 7 14 67 0 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
99 97 74 71 67 65 56 54 43 19 36 52 51 9 20
CALL[ ]	/* CallFunction */";
};
width = 1122;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(770,-47,o),
(775,-45,o),
(781,-42,cs),
(786,-39,o),
(791,-30,o),
(794,-17,cs),
(841,154,o),
(877,288,o),
(902,374,cs),
(926,461,o),
(960,595,o),
(984,690,cs),
(989,713,o),
(1006,725,o),
(1033,728,cs),
(1032,728,o),
(1085,734,o),
(1124,734,cs),
(1137,734,o),
(1144,738,o),
(1144,745,cs),
(1144,756,o),
(1133,759,o),
(1121,759,cs),
(866,759,ls),
(853,759,o),
(844,757,o),
(839,754,cs),
(834,751,o),
(832,747,o),
(832,744,cs),
(832,729,o),
(853,730,o),
(866,730,cs),
(897,730,o),
(950,730,o),
(950,701,cs),
(950,688,o),
(922,574,o),
(871,394,cs),
(816,202,o),
(782,76,o),
(765,17,c),
(746,89,o),
(720,181,o),
(689,295,cs),
(658,407,o),
(623,539,o),
(590,690,c),
(587,698,o),
(580,737,o),
(559,737,cs),
(540,737,o),
(536,714,o),
(528,690,cs),
(514,641,o),
(482,524,o),
(429,340,cs),
(406,258,o),
(380,169,o),
(352,73,c),
(325,167,o),
(269,350,o),
(224,496,cs),
(173,661,o),
(147,753,o),
(147,771,cs),
(147,803,o),
(243,782,o),
(243,807,cs),
(243,812,o),
(241,816,o),
(237,818,cs),
(232,820,o),
(224,821,o),
(212,821,cs),
(-5,821,ls),
(-28,821,o),
(-40,816,o),
(-40,807,cs),
(-40,795,o),
(-23,795,o),
(-4,795,cs),
(28,795,o),
(52,793,o),
(68,789,cs),
(83,785,o),
(93,776,o),
(98,763,cs),
(184,511,o),
(251,274,o),
(332,13,cs),
(337,-3,o),
(347,-9,o),
(355,-9,cs),
(370,-9,o),
(375,5,o),
(378,16,cs),
(408,122,o),
(446,262,o),
(487,399,cs),
(509,477,o),
(533,558,o),
(558,643,c),
(560,633,o),
(581,551,o),
(621,402,cs),
(654,275,o),
(693,132,o),
(734,-15,cs),
(742,-42,o),
(754,-47,o),
(765,-47,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
106 86 44 3 5 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 9 1 0 1 9 0 104 0 4 5 4 107 0 1 3 2 2 0 5 1 0 91 8 1 6 6 7 83 0 7 7 12 67 0 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 9 1 2 1 9 2 104 0 2 0 0 2 94 0 4 5 4 107 0 1 3 1 0 5 1 0 91 8 1 6 6 7 83 0 7 7 14 67 0 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
97 95 77 76 72 69 66 64 55 53 43 19 35 52 51 10 20
CALL[ ]	/* CallFunction */";
};
width = 1109;
}
);
note = W;
unicode = 87;
},
{
glyphname = Wacute;
kernLeft = W;
kernRight = W;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(810,-54,o),
(823,-40,o),
(830,-17,cs),
(915,295,o),
(952,422,o),
(1011,658,cs),
(1016,681,o),
(1033,693,o),
(1060,696,cs),
(1059,696,o),
(1118,702,o),
(1151,702,cs),
(1164,702,o),
(1188,706,o),
(1188,729,cs),
(1188,756,o),
(1171,759,o),
(1148,759,cs),
(893,759,ls),
(850,759,o),
(838,750,o),
(838,726,cs),
(838,701,o),
(850,693,o),
(893,690,cs),
(914,689,o),
(926,684,o),
(926,661,cs),
(926,639,o),
(899,548,o),
(862,415,cs),
(827,291,o),
(791,167,o),
(779,99,c),
(731,285,o),
(682,441,o),
(626,690,cs),
(614,743,o),
(602,753,o),
(571,753,cs),
(532,753,o),
(522,721,o),
(513,690,cs),
(502,658,o),
(457,489,o),
(429,378,cs),
(410,305,o),
(389,225,o),
(367,140,c),
(331,264,o),
(293,388,o),
(254,512,cs),
(217,626,o),
(191,719,o),
(191,736,cs),
(191,768,o),
(296,743,o),
(296,794,cs),
(296,809,o),
(287,821,o),
(263,821,cs),
(14,821,ls),
(-11,821,o),
(-29,813,o),
(-29,793,cs),
(-29,770,o),
(-18,761,o),
(23,757,cs),
(74,752,o),
(92,744,o),
(99,721,cs),
(141,589,o),
(179,465,o),
(215,348,cs),
(249,236,o),
(283,122,o),
(317,13,cs),
(322,-3,o),
(332,-17,o),
(363,-17,cs),
(398,-17,o),
(407,-5,o),
(414,16,cs),
(449,141,o),
(487,278,o),
(518,385,cs),
(535,447,o),
(553,507,o),
(570,566,c),
(570,557,o),
(590,485,o),
(623,364,cs),
(652,256,o),
(686,125,o),
(719,-15,cs),
(727,-48,o),
(754,-54,o),
(777,-54,cs)
);
},
{
closed = 1;
nodes = (
(561,841,o),
(647,897,o),
(647,936,cs),
(647,953,o),
(633,972,o),
(606,972,cs),
(568,972,o),
(493,899,o),
(493,872,cs),
(493,856,o),
(507,841,o),
(528,841,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
116 98 57 3 8 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 1 0 1 106 0 0 9 0 106 0 7 8 7 107 10 1 3 6 5 4 3 2 8 3 2 91 0 9 9 12 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 0 9 0 106 0 4 3 2 2 4 96 0 7 8 7 107 10 1 3 6 5 2 2 8 3 2 91 0 9 9 12 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 0 9 0 106 5 1 4 3 2 2 4 96 0 7 8 7 107 10 1 3 6 1 2 8 3 2 91 0 9 9 12 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 1 0 1 106 0 0 9 0 106 0 10 3 4 3 10 4 104 5 1 4 6 2 4 94 0 6 2 2 6 94 0 7 8 7 107 0 3 0 2 8 3 2 91 0 9 9 12 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 1 0 1 106 0 0 9 0 106 0 10 3 4 3 10 4 104 5 1 4 6 2 4 94 0 6 2 2 6 94 0 7 8 7 107 0 3 0 2 8 3 2 91 0 9 9 14 67 0 8 8 21 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
109 107 84 81 66 64 41 17 17 36 52 36 38 36 11 23
CALL[ ]	/* CallFunction */";
};
width = 1131;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(792,-51,o),
(808,-44,o),
(815,-17,cs),
(856,134,o),
(891,262,o),
(920,365,cs),
(949,471,o),
(970,554,o),
(1000,670,cs),
(1005,693,o),
(1022,705,o),
(1049,708,cs),
(1048,708,o),
(1101,714,o),
(1140,714,cs),
(1153,714,o),
(1170,719,o),
(1170,735,cs),
(1170,759,o),
(1149,759,o),
(1137,759,cs),
(882,759,ls),
(855,759,o),
(848,750,o),
(848,734,cs),
(848,715,o),
(869,710,o),
(882,710,cs),
(899,710,o),
(936,711,o),
(936,681,cs),
(936,661,o),
(906,552,o),
(866,410,cs),
(823,257,o),
(787,134,o),
(773,68,c),
(754,141,o),
(730,226,o),
(704,323,cs),
(676,423,o),
(644,542,o),
(611,690,cs),
(602,729,o),
(594,747,o),
(566,747,cs),
(535,747,o),
(527,718,o),
(519,690,cs),
(503,637,o),
(466,504,o),
(429,364,cs),
(408,287,o),
(385,204,o),
(361,115,c),
(328,228,o),
(284,368,o),
(242,507,cs),
(197,652,o),
(173,732,o),
(173,751,cs),
(173,782,o),
(274,759,o),
(274,800,cs),
(274,813,o),
(267,821,o),
(243,821,cs),
(6,821,ls),
(-17,821,o),
(-31,816,o),
(-31,797,cs),
(-31,780,o),
(-12,775,o),
(7,775,cs),
(51,775,o),
(87,770,o),
(94,743,c),
(178,498,o),
(251,246,o),
(323,13,cs),
(330,-6,o),
(345,-12,o),
(364,-12,cs),
(383,-12,o),
(396,5,o),
(399,16,cs),
(423,101,o),
(457,220,o),
(501,375,cs),
(522,446,o),
(543,519,o),
(565,595,c),
(567,584,o),
(586,511,o),
(622,378,cs),
(653,262,o),
(689,129,o),
(725,-15,cs),
(733,-46,o),
(754,-51,o),
(773,-51,cs)
);
},
{
closed = 1;
nodes = (
(546,854,o),
(634,908,o),
(634,941,cs),
(634,960,o),
(622,972,o),
(602,972,cs),
(573,972,o),
(496,904,o),
(496,877,cs),
(496,864,o),
(505,854,o),
(520,854,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
122 104 61 3 7 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 9 0 106 0 10 3 2 3 10 2 104 0 6 7 6 107 0 3 5 4 2 2 7 3 2 91 0 8 8 9 83 0 9 9 12 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 9 0 106 0 10 3 2 3 10 2 104 0 6 7 6 107 0 3 5 4 2 2 7 3 2 91 0 8 8 9 83 0 9 9 12 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 1 0 1 106 0 0 9 0 106 0 10 3 4 3 10 4 104 0 4 2 2 4 94 0 6 7 6 107 0 3 5 1 2 7 3 2 91 0 8 8 9 83 0 9 9 14 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
115 113 90 87 83 81 72 70 43 19 36 52 53 38 36 11 22
CALL[ ]	/* CallFunction */";
};
width = 1122;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(770,-47,o),
(775,-45,o),
(781,-42,cs),
(786,-39,o),
(791,-30,o),
(794,-17,cs),
(841,154,o),
(877,288,o),
(902,374,cs),
(926,461,o),
(960,595,o),
(984,690,cs),
(989,713,o),
(1006,725,o),
(1033,728,cs),
(1032,728,o),
(1085,734,o),
(1124,734,cs),
(1137,734,o),
(1144,738,o),
(1144,745,cs),
(1144,756,o),
(1133,759,o),
(1121,759,cs),
(866,759,ls),
(853,759,o),
(844,757,o),
(839,754,cs),
(834,751,o),
(832,747,o),
(832,744,cs),
(832,729,o),
(853,730,o),
(866,730,cs),
(897,730,o),
(950,730,o),
(950,701,cs),
(950,688,o),
(922,574,o),
(871,394,cs),
(816,202,o),
(782,76,o),
(765,17,c),
(746,89,o),
(720,181,o),
(689,295,cs),
(658,407,o),
(623,539,o),
(590,690,c),
(587,698,o),
(580,737,o),
(559,737,cs),
(540,737,o),
(536,714,o),
(528,690,cs),
(514,641,o),
(482,524,o),
(429,340,cs),
(406,258,o),
(380,169,o),
(352,73,c),
(325,167,o),
(269,350,o),
(224,496,cs),
(173,661,o),
(147,753,o),
(147,771,cs),
(147,803,o),
(243,782,o),
(243,807,cs),
(243,812,o),
(241,816,o),
(237,818,cs),
(232,820,o),
(224,821,o),
(212,821,cs),
(-5,821,ls),
(-28,821,o),
(-40,816,o),
(-40,807,cs),
(-40,795,o),
(-23,795,o),
(-4,795,cs),
(28,795,o),
(52,793,o),
(68,789,cs),
(83,785,o),
(93,776,o),
(98,763,cs),
(184,511,o),
(251,274,o),
(332,13,cs),
(337,-3,o),
(347,-9,o),
(355,-9,cs),
(370,-9,o),
(375,5,o),
(378,16,cs),
(408,122,o),
(446,262,o),
(487,399,cs),
(509,477,o),
(533,558,o),
(558,643,c),
(560,633,o),
(581,551,o),
(621,402,cs),
(654,275,o),
(693,132,o),
(734,-15,cs),
(742,-42,o),
(754,-47,o),
(765,-47,cs)
);
},
{
closed = 1;
nodes = (
(525,875,o),
(615,928,o),
(615,950,cs),
(615,969,o),
(607,972,o),
(596,972,cs),
(576,972,o),
(501,911,o),
(501,886,cs),
(501,879,o),
(504,875,o),
(509,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
121 101 59 3 7 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 1 106 0 0 9 0 106 0 11 3 2 3 11 2 104 0 6 7 6 107 0 3 5 4 2 2 7 3 2 91 10 1 8 8 9 83 0 9 9 12 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 1 0 1 106 0 0 9 0 106 0 11 3 4 3 11 4 104 0 4 2 2 4 94 0 6 7 6 107 0 3 5 1 2 7 3 2 91 10 1 8 8 9 83 0 9 9 14 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
112 110 92 91 87 84 81 79 70 68 43 19 35 52 53 37 36 12 22
CALL[ ]	/* CallFunction */";
};
width = 1109;
}
);
note = Wacute;
unicode = 7810;
},
{
glyphname = Wcircumflex;
kernLeft = W;
kernRight = W;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(810,-54,o),
(823,-40,o),
(830,-17,cs),
(915,295,o),
(952,422,o),
(1011,658,cs),
(1016,681,o),
(1033,693,o),
(1060,696,cs),
(1059,696,o),
(1118,702,o),
(1151,702,cs),
(1164,702,o),
(1188,706,o),
(1188,729,cs),
(1188,756,o),
(1171,759,o),
(1148,759,cs),
(893,759,ls),
(850,759,o),
(838,750,o),
(838,726,cs),
(838,701,o),
(850,693,o),
(893,690,cs),
(914,689,o),
(926,684,o),
(926,661,cs),
(926,639,o),
(899,548,o),
(862,415,cs),
(827,291,o),
(791,167,o),
(779,99,c),
(731,285,o),
(682,441,o),
(626,690,cs),
(614,743,o),
(602,753,o),
(571,753,cs),
(532,753,o),
(522,721,o),
(513,690,cs),
(502,658,o),
(457,489,o),
(429,378,cs),
(410,305,o),
(389,225,o),
(367,140,c),
(331,264,o),
(293,388,o),
(254,512,cs),
(217,626,o),
(191,719,o),
(191,736,cs),
(191,768,o),
(296,743,o),
(296,794,cs),
(296,809,o),
(287,821,o),
(263,821,cs),
(14,821,ls),
(-11,821,o),
(-29,813,o),
(-29,793,cs),
(-29,770,o),
(-18,761,o),
(23,757,cs),
(74,752,o),
(92,744,o),
(99,721,cs),
(141,589,o),
(179,465,o),
(215,348,cs),
(249,236,o),
(283,122,o),
(317,13,cs),
(322,-3,o),
(332,-17,o),
(363,-17,cs),
(398,-17,o),
(407,-5,o),
(414,16,cs),
(449,141,o),
(487,278,o),
(518,385,cs),
(535,447,o),
(553,507,o),
(570,566,c),
(570,557,o),
(590,485,o),
(623,364,cs),
(652,256,o),
(686,125,o),
(719,-15,cs),
(727,-48,o),
(754,-54,o),
(777,-54,cs)
);
},
{
closed = 1;
nodes = (
(483,830,o),
(544,853,o),
(585,880,c),
(644,842,o),
(699,830,o),
(705,830,cs),
(716,830,o),
(718,842,o),
(718,851,cs),
(718,892,o),
(610,972,o),
(585,972,cs),
(574,972,o),
(539,950,o),
(512,928,cs),
(481,903,o),
(453,871,o),
(453,844,cs),
(453,837,o),
(458,830,o),
(466,830,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
5 1 0 2 126 108 67 3 9 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 2 0 2 106 1 12 2 0 10 0 106 0 8 9 8 107 11 1 4 7 6 5 3 3 9 4 3 91 0 10 10 12 67 0 9 9 21 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 2 0 2 106 1 12 2 0 10 0 106 0 5 4 3 3 5 96 0 8 9 8 107 11 1 4 7 6 2 3 9 4 3 91 0 10 10 12 67 0 9 9 21 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 2 0 2 106 1 12 2 0 10 0 106 6 1 5 4 3 3 5 96 0 8 9 8 107 11 1 4 7 1 3 9 4 3 91 0 10 10 12 67 0 9 9 21 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 2 0 2 106 1 12 2 0 10 0 106 0 11 4 5 4 11 5 104 6 1 5 7 3 5 94 0 7 3 3 7 94 0 8 9 8 107 0 4 0 3 9 4 3 91 0 10 10 12 67 0 9 9 21 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 2 0 2 106 1 12 2 0 10 0 106 0 11 4 5 4 11 5 104 6 1 5 7 3 5 94 0 7 3 3 7 94 0 8 9 8 107 0 4 0 3 9 4 3 91 0 10 10 14 67 0 9 9 21 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 119 117 94 91 76 74 58 56 47 46 45 44 43 41 37 34 30 28 19 17 11 9 0 25 1 25 13 15
CALL[ ]	/* CallFunction */";
};
width = 1131;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(792,-51,o),
(808,-44,o),
(815,-17,cs),
(856,134,o),
(891,262,o),
(920,365,cs),
(949,471,o),
(970,554,o),
(1000,670,cs),
(1005,693,o),
(1022,705,o),
(1049,708,cs),
(1048,708,o),
(1101,714,o),
(1140,714,cs),
(1153,714,o),
(1170,719,o),
(1170,735,cs),
(1170,759,o),
(1149,759,o),
(1137,759,cs),
(882,759,ls),
(855,759,o),
(848,750,o),
(848,734,cs),
(848,715,o),
(869,710,o),
(882,710,cs),
(899,710,o),
(936,711,o),
(936,681,cs),
(936,661,o),
(906,552,o),
(866,410,cs),
(823,257,o),
(787,134,o),
(773,68,c),
(754,141,o),
(730,226,o),
(704,323,cs),
(676,423,o),
(644,542,o),
(611,690,cs),
(602,729,o),
(594,747,o),
(566,747,cs),
(535,747,o),
(527,718,o),
(519,690,cs),
(503,637,o),
(466,504,o),
(429,364,cs),
(408,287,o),
(385,204,o),
(361,115,c),
(328,228,o),
(284,368,o),
(242,507,cs),
(197,652,o),
(173,732,o),
(173,751,cs),
(173,782,o),
(274,759,o),
(274,800,cs),
(274,813,o),
(267,821,o),
(243,821,cs),
(6,821,ls),
(-17,821,o),
(-31,816,o),
(-31,797,cs),
(-31,780,o),
(-12,775,o),
(7,775,cs),
(51,775,o),
(87,770,o),
(94,743,c),
(178,498,o),
(251,246,o),
(323,13,cs),
(330,-6,o),
(345,-12,o),
(364,-12,cs),
(383,-12,o),
(396,5,o),
(399,16,cs),
(423,101,o),
(457,220,o),
(501,375,cs),
(522,446,o),
(543,519,o),
(565,595,c),
(567,584,o),
(586,511,o),
(622,378,cs),
(653,262,o),
(689,129,o),
(725,-15,cs),
(733,-46,o),
(754,-51,o),
(773,-51,cs)
);
},
{
closed = 1;
nodes = (
(473,847,o),
(534,874,o),
(574,898,c),
(638,860,o),
(686,847,o),
(694,847,cs),
(702,847,o),
(705,855,o),
(705,864,cs),
(705,900,o),
(598,972,o),
(574,972,cs),
(552,972,o),
(444,901,o),
(444,860,cs),
(444,851,o),
(448,847,o),
(455,847,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
5 1 0 2 131 113 70 3 8 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 2 0 2 106 1 12 2 0 10 0 106 0 11 4 3 4 11 3 104 0 7 8 7 107 0 4 6 5 2 3 8 4 3 91 0 9 9 10 83 0 10 10 12 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 2 0 2 106 1 12 2 0 10 0 106 0 11 4 3 4 11 3 104 0 7 8 7 107 0 4 6 5 2 3 8 4 3 91 0 9 9 10 83 0 10 10 12 67 0 8 8 24 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 2 0 2 106 1 12 2 0 10 0 106 0 11 4 5 4 11 5 104 0 5 3 3 5 94 0 7 8 7 107 0 4 6 1 3 8 4 3 91 0 9 9 10 83 0 10 10 14 67 0 8 8 24 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 124 122 99 96 92 90 81 79 61 59 48 47 44 42 38 35 31 28 18 16 11 9 0 24 1 24 13 15
CALL[ ]	/* CallFunction */";
};
width = 1122;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(770,-47,o),
(775,-45,o),
(781,-42,cs),
(786,-39,o),
(791,-30,o),
(794,-17,cs),
(841,154,o),
(877,288,o),
(902,374,cs),
(926,461,o),
(960,595,o),
(984,690,cs),
(989,713,o),
(1006,725,o),
(1033,728,cs),
(1032,728,o),
(1085,734,o),
(1124,734,cs),
(1137,734,o),
(1144,738,o),
(1144,745,cs),
(1144,756,o),
(1133,759,o),
(1121,759,cs),
(866,759,ls),
(853,759,o),
(844,757,o),
(839,754,cs),
(834,751,o),
(832,747,o),
(832,744,cs),
(832,729,o),
(853,730,o),
(866,730,cs),
(897,730,o),
(950,730,o),
(950,701,cs),
(950,688,o),
(922,574,o),
(871,394,cs),
(816,202,o),
(782,76,o),
(765,17,c),
(746,89,o),
(720,181,o),
(689,295,cs),
(658,407,o),
(623,539,o),
(590,690,c),
(587,698,o),
(580,737,o),
(559,737,cs),
(540,737,o),
(536,714,o),
(528,690,cs),
(514,641,o),
(482,524,o),
(429,340,cs),
(406,258,o),
(380,169,o),
(352,73,c),
(325,167,o),
(269,350,o),
(224,496,cs),
(173,661,o),
(147,753,o),
(147,771,cs),
(147,803,o),
(243,782,o),
(243,807,cs),
(243,812,o),
(241,816,o),
(237,818,cs),
(232,820,o),
(224,821,o),
(212,821,cs),
(-5,821,ls),
(-28,821,o),
(-40,816,o),
(-40,807,cs),
(-40,795,o),
(-23,795,o),
(-4,795,cs),
(28,795,o),
(52,793,o),
(68,789,cs),
(83,785,o),
(93,776,o),
(98,763,cs),
(184,511,o),
(251,274,o),
(332,13,cs),
(337,-3,o),
(347,-9,o),
(355,-9,cs),
(370,-9,o),
(375,5,o),
(378,16,cs),
(408,122,o),
(446,262,o),
(487,399,cs),
(509,477,o),
(533,558,o),
(558,643,c),
(560,633,o),
(581,551,o),
(621,402,cs),
(654,275,o),
(693,132,o),
(734,-15,cs),
(742,-42,o),
(754,-47,o),
(765,-47,cs)
);
},
{
closed = 1;
nodes = (
(446,875,o),
(494,894,o),
(558,928,c),
(622,894,o),
(670,875,o),
(678,875,cs),
(683,875,o),
(686,879,o),
(686,886,cs),
(686,911,o),
(584,972,o),
(558,972,cs),
(535,972,o),
(431,911,o),
(431,886,cs),
(431,879,o),
(434,875,o),
(439,875,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
5 1 0 2 130 110 68 3 8 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 0 2 106 1 13 2 0 10 0 106 0 12 4 3 4 12 3 104 0 7 8 7 107 0 4 6 5 2 3 8 4 3 91 11 1 9 9 10 83 0 10 10 12 67 0 8 8 24 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 2 0 2 106 1 13 2 0 10 0 106 0 12 4 5 4 12 5 104 0 5 3 3 5 94 0 7 8 7 107 0 4 6 1 3 8 4 3 91 11 1 9 9 10 83 0 10 10 14 67 0 8 8 24 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
1 0 121 119 101 100 96 93 90 88 79 77 59 57 46 45 42 40 37 34 30 27 18 16 11 9 0 23 1 23 14 15
CALL[ ]	/* CallFunction */";
};
width = 1109;
}
);
note = Wcircumflex;
unicode = 372;
},
{
glyphname = Wdieresis;
kernLeft = W;
kernRight = W;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(810,-54,o),
(823,-40,o),
(830,-17,cs),
(915,295,o),
(952,422,o),
(1011,658,cs),
(1016,681,o),
(1033,693,o),
(1060,696,cs),
(1059,696,o),
(1118,702,o),
(1151,702,cs),
(1164,702,o),
(1188,706,o),
(1188,729,cs),
(1188,756,o),
(1171,759,o),
(1148,759,cs),
(893,759,ls),
(850,759,o),
(838,750,o),
(838,726,cs),
(838,701,o),
(850,693,o),
(893,690,cs),
(914,689,o),
(926,684,o),
(926,661,cs),
(926,639,o),
(899,548,o),
(862,415,cs),
(827,291,o),
(791,167,o),
(779,99,c),
(731,285,o),
(682,441,o),
(626,690,cs),
(614,743,o),
(602,753,o),
(571,753,cs),
(532,753,o),
(522,721,o),
(513,690,cs),
(502,658,o),
(457,489,o),
(429,378,cs),
(410,305,o),
(389,225,o),
(367,140,c),
(331,264,o),
(293,388,o),
(254,512,cs),
(217,626,o),
(191,719,o),
(191,736,cs),
(191,768,o),
(296,743,o),
(296,794,cs),
(296,809,o),
(287,821,o),
(263,821,cs),
(14,821,ls),
(-11,821,o),
(-29,813,o),
(-29,793,cs),
(-29,770,o),
(-18,761,o),
(23,757,cs),
(74,752,o),
(92,744,o),
(99,721,cs),
(141,589,o),
(179,465,o),
(215,348,cs),
(249,236,o),
(283,122,o),
(317,13,cs),
(322,-3,o),
(332,-17,o),
(363,-17,cs),
(398,-17,o),
(407,-5,o),
(414,16,cs),
(449,141,o),
(487,278,o),
(518,385,cs),
(535,447,o),
(553,507,o),
(570,566,c),
(570,557,o),
(590,485,o),
(623,364,cs),
(652,256,o),
(686,125,o),
(719,-15,cs),
(727,-48,o),
(754,-54,o),
(777,-54,cs)
);
},
{
closed = 1;
nodes = (
(520,841,o),
(555,856,o),
(555,911,cs),
(555,947,o),
(527,972,o),
(496,972,cs),
(449,972,o),
(429,930,o),
(429,907,cs),
(429,868,o),
(456,841,o),
(489,841,cs)
);
},
{
closed = 1;
nodes = (
(727,830,o),
(762,845,o),
(762,900,cs),
(762,937,o),
(734,961,o),
(703,961,cs),
(656,961,o),
(636,919,o),
(636,896,cs),
(636,857,o),
(663,830,o),
(696,830,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
132 114 73 3 10 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 9 10 9 107 2 1 0 3 1 1 11 0 1 91 12 1 5 8 7 6 3 4 10 5 4 91 0 11 11 12 67 0 10 10 21 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 6 5 4 4 6 96 0 9 10 9 107 2 1 0 3 1 1 11 0 1 91 12 1 5 8 7 2 4 10 5 4 91 0 11 11 12 67 0 10 10 21 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 6 5 4 4 6 96 0 9 10 9 107 0 0 0 1 3 0 1 91 0 2 0 3 11 2 3 91 12 1 5 8 7 2 4 10 5 4 91 0 11 11 12 67 0 10 10 21 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
7 1 6 5 4 4 6 96 0 9 10 9 107 0 0 0 1 3 0 1 91 0 2 0 3 11 2 3 91 12 1 5 8 1 4 10 5 4 91 0 11 11 12 67 0 10 10 21 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 12 5 6 5 12 6 104 7 1 6 8 4 6 94 0 8 4 4 8 94 0 9 10 9 107 0 0 0 1 3 0 1 91 0 2 0 3 11 2 3 91 0 5 0 4 10 5 4 91 0 11 11 12 67 0 10 10 21 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 12 5 6 5 12 6 104 7 1 6 8 4 6 94 0 8 4 4 8 94 0 9 10 9 107 0 0 0 1 3 0 1 91 0 2 0 3 11 2 3 91 0 5 0 4 10 5 4 91 0 11 11 14 67 0 10 10 21 10 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
125 123 100 97 82 80 64 62 17 17 36 52 36 38 38 38 36 13 24
CALL[ ]	/* CallFunction */";
};
width = 1131;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(792,-51,o),
(808,-44,o),
(815,-17,cs),
(856,134,o),
(891,262,o),
(920,365,cs),
(949,471,o),
(970,554,o),
(1000,670,cs),
(1005,693,o),
(1022,705,o),
(1049,708,cs),
(1048,708,o),
(1101,714,o),
(1140,714,cs),
(1153,714,o),
(1170,719,o),
(1170,735,cs),
(1170,759,o),
(1149,759,o),
(1137,759,cs),
(882,759,ls),
(855,759,o),
(848,750,o),
(848,734,cs),
(848,715,o),
(869,710,o),
(882,710,cs),
(899,710,o),
(936,711,o),
(936,681,cs),
(936,661,o),
(906,552,o),
(866,410,cs),
(823,257,o),
(787,134,o),
(773,68,c),
(754,141,o),
(730,226,o),
(704,323,cs),
(676,423,o),
(644,542,o),
(611,690,cs),
(602,729,o),
(594,747,o),
(566,747,cs),
(535,747,o),
(527,718,o),
(519,690,cs),
(503,637,o),
(466,504,o),
(429,364,cs),
(408,287,o),
(385,204,o),
(361,115,c),
(328,228,o),
(284,368,o),
(242,507,cs),
(197,652,o),
(173,732,o),
(173,751,cs),
(173,782,o),
(274,759,o),
(274,800,cs),
(274,813,o),
(267,821,o),
(243,821,cs),
(6,821,ls),
(-17,821,o),
(-31,816,o),
(-31,797,cs),
(-31,780,o),
(-12,775,o),
(7,775,cs),
(51,775,o),
(87,770,o),
(94,743,c),
(178,498,o),
(251,246,o),
(323,13,cs),
(330,-6,o),
(345,-12,o),
(364,-12,cs),
(383,-12,o),
(396,5,o),
(399,16,cs),
(423,101,o),
(457,220,o),
(501,375,cs),
(522,446,o),
(543,519,o),
(565,595,c),
(567,584,o),
(586,511,o),
(622,378,cs),
(653,262,o),
(689,129,o),
(725,-15,cs),
(733,-46,o),
(754,-51,o),
(773,-51,cs)
);
},
{
closed = 1;
nodes = (
(499,859,o),
(530,872,o),
(530,920,cs),
(530,951,o),
(508,972,o),
(481,972,cs),
(443,972,o),
(425,937,o),
(425,916,cs),
(425,883,o),
(447,859,o),
(474,859,cs)
);
},
{
closed = 1;
nodes = (
(706,847,o),
(737,860,o),
(737,908,cs),
(737,939,o),
(715,960,o),
(688,960,cs),
(650,960,o),
(632,925,o),
(632,904,cs),
(632,871,o),
(654,847,o),
(681,847,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
134 116 73 3 9 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 12 5 4 5 12 4 104 0 8 9 8 107 0 0 0 1 3 0 1 91 0 2 0 3 11 2 3 91 0 5 7 6 2 4 9 5 4 91 0 10 10 11 83 0 11 11 12 67 0 9 9 21 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 12 5 4 5 12 4 104 0 8 9 8 107 0 0 0 1 3 0 1 91 0 2 0 3 11 2 3 91 0 5 7 6 2 4 9 5 4 91 0 10 10 11 83 0 11 11 12 67 0 9 9 24 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 12 5 6 5 12 6 104 0 6 4 4 6 94 0 8 9 8 107 0 0 0 1 3 0 1 91 0 2 0 3 11 2 3 91 0 5 7 1 4 9 5 4 91 0 10 10 11 83 0 11 11 14 67 0 9 9 24 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
127 125 102 99 95 93 84 82 43 19 36 52 53 36 38 36 36 13 24
CALL[ ]	/* CallFunction */";
};
width = 1122;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(770,-47,o),
(775,-45,o),
(781,-42,cs),
(786,-39,o),
(791,-30,o),
(794,-17,cs),
(841,154,o),
(877,288,o),
(902,374,cs),
(926,461,o),
(960,595,o),
(984,690,cs),
(989,713,o),
(1006,725,o),
(1033,728,cs),
(1032,728,o),
(1085,734,o),
(1124,734,cs),
(1137,734,o),
(1144,738,o),
(1144,745,cs),
(1144,756,o),
(1133,759,o),
(1121,759,cs),
(866,759,ls),
(853,759,o),
(844,757,o),
(839,754,cs),
(834,751,o),
(832,747,o),
(832,744,cs),
(832,729,o),
(853,730,o),
(866,730,cs),
(897,730,o),
(950,730,o),
(950,701,cs),
(950,688,o),
(922,574,o),
(871,394,cs),
(816,202,o),
(782,76,o),
(765,17,c),
(746,89,o),
(720,181,o),
(689,295,cs),
(658,407,o),
(623,539,o),
(590,690,c),
(587,698,o),
(580,737,o),
(559,737,cs),
(540,737,o),
(536,714,o),
(528,690,cs),
(514,641,o),
(482,524,o),
(429,340,cs),
(406,258,o),
(380,169,o),
(352,73,c),
(325,167,o),
(269,350,o),
(224,496,cs),
(173,661,o),
(147,753,o),
(147,771,cs),
(147,803,o),
(243,782,o),
(243,807,cs),
(243,812,o),
(241,816,o),
(237,818,cs),
(232,820,o),
(224,821,o),
(212,821,cs),
(-5,821,ls),
(-28,821,o),
(-40,816,o),
(-40,807,cs),
(-40,795,o),
(-23,795,o),
(-4,795,cs),
(28,795,o),
(52,793,o),
(68,789,cs),
(83,785,o),
(93,776,o),
(98,763,cs),
(184,511,o),
(251,274,o),
(332,13,cs),
(337,-3,o),
(347,-9,o),
(355,-9,cs),
(370,-9,o),
(375,5,o),
(378,16,cs),
(408,122,o),
(446,262,o),
(487,399,cs),
(509,477,o),
(533,558,o),
(558,643,c),
(560,633,o),
(581,551,o),
(621,402,cs),
(654,275,o),
(693,132,o),
(734,-15,cs),
(742,-42,o),
(754,-47,o),
(765,-47,cs)
);
},
{
closed = 1;
nodes = (
(472,889,o),
(494,899,o),
(494,935,cs),
(494,958,o),
(479,972,o),
(460,972,cs),
(432,972,o),
(419,945,o),
(419,931,cs),
(419,907,o),
(434,889,o),
(453,889,cs)
);
},
{
closed = 1;
nodes = (
(679,875,o),
(701,885,o),
(701,921,cs),
(701,944,o),
(686,958,o),
(667,958,cs),
(639,958,o),
(626,931,o),
(626,917,cs),
(626,893,o),
(641,875,o),
(660,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
134 114 72 3 9 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 13 5 4 5 13 4 104 0 8 9 8 107 0 0 0 1 3 0 1 91 0 2 0 3 11 2 3 91 0 5 7 6 2 4 9 5 4 91 12 1 10 10 11 83 0 11 11 12 67 0 9 9 24 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 13 5 6 5 13 6 104 0 6 4 4 6 94 0 8 9 8 107 0 0 0 1 3 0 1 91 0 2 0 3 11 2 3 91 0 5 7 1 4 9 5 4 91 12 1 10 10 11 83 0 11 11 14 67 0 9 9 24 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
125 123 105 104 100 97 94 92 83 81 43 19 35 52 53 36 38 36 36 14 24
CALL[ ]	/* CallFunction */";
};
width = 1109;
}
);
note = Wdieresis;
unicode = 7812;
},
{
glyphname = Wgrave;
kernLeft = W;
kernRight = W;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(810,-54,o),
(823,-40,o),
(830,-17,cs),
(915,295,o),
(952,422,o),
(1011,658,cs),
(1016,681,o),
(1033,693,o),
(1060,696,cs),
(1059,696,o),
(1118,702,o),
(1151,702,cs),
(1164,702,o),
(1188,706,o),
(1188,729,cs),
(1188,756,o),
(1171,759,o),
(1148,759,cs),
(893,759,ls),
(850,759,o),
(838,750,o),
(838,726,cs),
(838,701,o),
(850,693,o),
(893,690,cs),
(914,689,o),
(926,684,o),
(926,661,cs),
(926,639,o),
(899,548,o),
(862,415,cs),
(827,291,o),
(791,167,o),
(779,99,c),
(731,285,o),
(682,441,o),
(626,690,cs),
(614,743,o),
(602,753,o),
(571,753,cs),
(532,753,o),
(522,721,o),
(513,690,cs),
(502,658,o),
(457,489,o),
(429,378,cs),
(410,305,o),
(389,225,o),
(367,140,c),
(331,264,o),
(293,388,o),
(254,512,cs),
(217,626,o),
(191,719,o),
(191,736,cs),
(191,768,o),
(296,743,o),
(296,794,cs),
(296,809,o),
(287,821,o),
(263,821,cs),
(14,821,ls),
(-11,821,o),
(-29,813,o),
(-29,793,cs),
(-29,770,o),
(-18,761,o),
(23,757,cs),
(74,752,o),
(92,744,o),
(99,721,cs),
(141,589,o),
(179,465,o),
(215,348,cs),
(249,236,o),
(283,122,o),
(317,13,cs),
(322,-3,o),
(332,-17,o),
(363,-17,cs),
(398,-17,o),
(407,-5,o),
(414,16,cs),
(449,141,o),
(487,278,o),
(518,385,cs),
(535,447,o),
(553,507,o),
(570,566,c),
(570,557,o),
(590,485,o),
(623,364,cs),
(652,256,o),
(686,125,o),
(719,-15,cs),
(727,-48,o),
(754,-54,o),
(777,-54,cs)
);
},
{
closed = 1;
nodes = (
(659,841,o),
(674,856,o),
(674,872,cs),
(674,898,o),
(600,972,o),
(560,972,cs),
(533,972,o),
(519,953,o),
(519,936,cs),
(519,897,o),
(606,841,o),
(639,841,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
116 98 57 3 8 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 1 0 106 0 1 9 1 106 0 7 8 7 107 10 1 3 6 5 4 3 2 8 3 2 91 0 9 9 12 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 0 1 0 106 0 1 9 1 106 0 4 3 2 2 4 96 0 7 8 7 107 10 1 3 6 5 2 2 8 3 2 91 0 9 9 12 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 0 1 0 106 0 1 9 1 106 5 1 4 3 2 2 4 96 0 7 8 7 107 10 1 3 6 1 2 8 3 2 91 0 9 9 12 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 0 1 0 106 0 1 9 1 106 0 10 3 4 3 10 4 104 5 1 4 6 2 4 94 0 6 2 2 6 94 0 7 8 7 107 0 3 0 2 8 3 2 91 0 9 9 12 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 0 1 0 106 0 1 9 1 106 0 10 3 4 3 10 4 104 5 1 4 6 2 4 94 0 6 2 2 6 94 0 7 8 7 107 0 3 0 2 8 3 2 91 0 9 9 14 67 0 8 8 21 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
109 107 84 81 66 64 41 17 17 36 52 38 38 34 11 23
CALL[ ]	/* CallFunction */";
};
width = 1131;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(792,-51,o),
(808,-44,o),
(815,-17,cs),
(856,134,o),
(891,262,o),
(920,365,cs),
(949,471,o),
(970,554,o),
(1000,670,cs),
(1005,693,o),
(1022,705,o),
(1049,708,cs),
(1048,708,o),
(1101,714,o),
(1140,714,cs),
(1153,714,o),
(1170,719,o),
(1170,735,cs),
(1170,759,o),
(1149,759,o),
(1137,759,cs),
(882,759,ls),
(855,759,o),
(848,750,o),
(848,734,cs),
(848,715,o),
(869,710,o),
(882,710,cs),
(899,710,o),
(936,711,o),
(936,681,cs),
(936,661,o),
(906,552,o),
(866,410,cs),
(823,257,o),
(787,134,o),
(773,68,c),
(754,141,o),
(730,226,o),
(704,323,cs),
(676,423,o),
(644,542,o),
(611,690,cs),
(602,729,o),
(594,747,o),
(566,747,cs),
(535,747,o),
(527,718,o),
(519,690,cs),
(503,637,o),
(466,504,o),
(429,364,cs),
(408,287,o),
(385,204,o),
(361,115,c),
(328,228,o),
(284,368,o),
(242,507,cs),
(197,652,o),
(173,732,o),
(173,751,cs),
(173,782,o),
(274,759,o),
(274,800,cs),
(274,813,o),
(267,821,o),
(243,821,cs),
(6,821,ls),
(-17,821,o),
(-31,816,o),
(-31,797,cs),
(-31,780,o),
(-12,775,o),
(7,775,cs),
(51,775,o),
(87,770,o),
(94,743,c),
(178,498,o),
(251,246,o),
(323,13,cs),
(330,-6,o),
(345,-12,o),
(364,-12,cs),
(383,-12,o),
(396,5,o),
(399,16,cs),
(423,101,o),
(457,220,o),
(501,375,cs),
(522,446,o),
(543,519,o),
(565,595,c),
(567,584,o),
(586,511,o),
(622,378,cs),
(653,262,o),
(689,129,o),
(725,-15,cs),
(733,-46,o),
(754,-51,o),
(773,-51,cs)
);
},
{
closed = 1;
nodes = (
(641,854,o),
(650,864,o),
(650,877,cs),
(650,904,o),
(573,972,o),
(544,972,cs),
(524,972,o),
(512,960,o),
(512,941,cs),
(512,910,o),
(597,854,o),
(626,854,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
122 104 61 3 7 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 0 1 0 106 0 1 9 1 106 0 10 3 2 3 10 2 104 0 6 7 6 107 0 3 5 4 2 2 7 3 2 91 0 8 8 9 83 0 9 9 12 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 0 1 0 106 0 1 9 1 106 0 10 3 2 3 10 2 104 0 6 7 6 107 0 3 5 4 2 2 7 3 2 91 0 8 8 9 83 0 9 9 12 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 0 1 0 106 0 1 9 1 106 0 10 3 4 3 10 4 104 0 4 2 2 4 94 0 6 7 6 107 0 3 5 1 2 7 3 2 91 0 8 8 9 83 0 9 9 14 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
115 113 90 87 83 81 72 70 43 19 36 52 55 38 34 11 22
CALL[ ]	/* CallFunction */";
};
width = 1122;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(770,-47,o),
(775,-45,o),
(781,-42,cs),
(786,-39,o),
(791,-30,o),
(794,-17,cs),
(841,154,o),
(877,288,o),
(902,374,cs),
(926,461,o),
(960,595,o),
(984,690,cs),
(989,713,o),
(1006,725,o),
(1033,728,cs),
(1032,728,o),
(1085,734,o),
(1124,734,cs),
(1137,734,o),
(1144,738,o),
(1144,745,cs),
(1144,756,o),
(1133,759,o),
(1121,759,cs),
(866,759,ls),
(853,759,o),
(844,757,o),
(839,754,cs),
(834,751,o),
(832,747,o),
(832,744,cs),
(832,729,o),
(853,730,o),
(866,730,cs),
(897,730,o),
(950,730,o),
(950,701,cs),
(950,688,o),
(922,574,o),
(871,394,cs),
(816,202,o),
(782,76,o),
(765,17,c),
(746,89,o),
(720,181,o),
(689,295,cs),
(658,407,o),
(623,539,o),
(590,690,c),
(587,698,o),
(580,737,o),
(559,737,cs),
(540,737,o),
(536,714,o),
(528,690,cs),
(514,641,o),
(482,524,o),
(429,340,cs),
(406,258,o),
(380,169,o),
(352,73,c),
(325,167,o),
(269,350,o),
(224,496,cs),
(173,661,o),
(147,753,o),
(147,771,cs),
(147,803,o),
(243,782,o),
(243,807,cs),
(243,812,o),
(241,816,o),
(237,818,cs),
(232,820,o),
(224,821,o),
(212,821,cs),
(-5,821,ls),
(-28,821,o),
(-40,816,o),
(-40,807,cs),
(-40,795,o),
(-23,795,o),
(-4,795,cs),
(28,795,o),
(52,793,o),
(68,789,cs),
(83,785,o),
(93,776,o),
(98,763,cs),
(184,511,o),
(251,274,o),
(332,13,cs),
(337,-3,o),
(347,-9,o),
(355,-9,cs),
(370,-9,o),
(375,5,o),
(378,16,cs),
(408,122,o),
(446,262,o),
(487,399,cs),
(509,477,o),
(533,558,o),
(558,643,c),
(560,633,o),
(581,551,o),
(621,402,cs),
(654,275,o),
(693,132,o),
(734,-15,cs),
(742,-42,o),
(754,-47,o),
(765,-47,cs)
);
},
{
closed = 1;
nodes = (
(613,875,o),
(616,879,o),
(616,886,cs),
(616,911,o),
(541,972,o),
(521,972,cs),
(510,972,o),
(502,969,o),
(502,950,cs),
(502,928,o),
(592,875,o),
(608,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
121 101 59 3 7 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 0 1 0 106 0 1 9 1 106 0 11 3 2 3 11 2 104 0 6 7 6 107 0 3 5 4 2 2 7 3 2 91 10 1 8 8 9 83 0 9 9 12 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 0 1 0 106 0 1 9 1 106 0 11 3 4 3 11 4 104 0 4 2 2 4 94 0 6 7 6 107 0 3 5 1 2 7 3 2 91 10 1 8 8 9 83 0 9 9 14 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
112 110 92 91 87 84 81 79 70 68 43 19 35 52 55 37 34 12 22
CALL[ ]	/* CallFunction */";
};
width = 1109;
}
);
note = Wgrave;
unicode = 7808;
},
{
glyphname = X;
kernLeft = X;
kernRight = X;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(678,-37,ls),
(706,-37,o),
(722,-31,o),
(722,-10,cs),
(722,13,o),
(707,24,o),
(676,24,cs),
(603,24,o),
(561,31,o),
(546,59,cs),
(359,414,l),
(519,720,ls),
(531,743,o),
(539,755,o),
(568,758,cs),
(573,759,o),
(584,759,o),
(599,759,cs),
(614,759,o),
(628,761,o),
(642,764,cs),
(657,767,o),
(679,775,o),
(679,794,cs),
(679,815,o),
(670,821,o),
(639,821,cs),
(408,821,ls),
(372,821,o),
(361,816,o),
(361,793,cs),
(361,773,o),
(376,766,o),
(399,763,cs),
(424,759,o),
(436,750,o),
(436,737,cs),
(436,715,o),
(357,591,o),
(315,504,c),
(296,541,o),
(278,574,o),
(263,605,cs),
(229,669,o),
(211,717,o),
(211,722,cs),
(211,749,o),
(282,729,o),
(282,772,cs),
(282,791,o),
(275,799,o),
(251,799,cs),
(52,799,ls),
(21,799,o),
(1,791,o),
(1,772,cs),
(1,747,o),
(15,741,o),
(50,738,cs),
(81,735,o),
(108,730,o),
(119,709,cs),
(273,412,l),
(122,104,ls),
(109,77,o),
(95,74,o),
(71,67,cs),
(62,65,o),
(34,57,o),
(18,57,c),
(1,54,o),
(-21,48,o),
(-21,24,cs),
(-21,4,o),
(-8,0,o),
(11,0,cs),
(247,0,ls),
(274,0,o),
(283,7,o),
(283,27,cs),
(283,50,o),
(271,55,o),
(248,58,cs),
(236,59,o),
(226,61,o),
(217,63,cs),
(208,65,o),
(204,69,o),
(204,74,cs),
(204,85,o),
(229,139,o),
(261,207,cs),
(294,277,o),
(317,322,o),
(317,324,c),
(343,274,o),
(367,228,o),
(388,187,cs),
(435,93,o),
(459,44,o),
(459,34,cs),
(459,17,o),
(395,33,o),
(395,-10,cs),
(395,-23,o),
(402,-37,o),
(426,-37,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
91 59 34 7 4 5 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 5 1 2 1 5 2 104 0 6 6 14 67 0 1 1 0 83 0 0 0 12 67 0 4 4 13 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 5 1 2 1 5 2 104 0 2 0 3 2 3 87 0 6 6 14 67 0 1 1 0 83 0 0 0 12 67 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 5 1 2 1 5 2 104 0 2 0 3 2 3 87 0 1 1 0 83 0 0 0 12 67 0 6 6 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 5 1 2 1 5 2 104 0 2 0 3 2 3 87 0 1 1 0 83 0 0 0 14 67 0 6 6 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
103 100 83 82 77 74 45 42 39 37 29 28 22 19 7 15
CALL[ ]	/* CallFunction */";
};
width = 689;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(677,-37,ls),
(700,-37,o),
(717,-32,o),
(717,-15,cs),
(717,4,o),
(701,9,o),
(676,9,cs),
(612,9,o),
(568,14,o),
(553,41,cs),
(358,414,l),
(525,732,ls),
(537,755,o),
(545,767,o),
(574,770,cs),
(579,771,o),
(589,771,o),
(604,772,cs),
(619,773,o),
(633,774,o),
(647,776,cs),
(662,779,o),
(677,784,o),
(677,799,cs),
(677,818,o),
(663,821,o),
(644,821,cs),
(421,821,ls),
(394,821,o),
(387,814,o),
(387,798,cs),
(387,779,o),
(402,772,o),
(421,772,cs),
(436,772,o),
(446,771,o),
(451,770,cs),
(456,769,o),
(458,764,o),
(458,756,cs),
(458,749,o),
(434,696,o),
(403,637,cs),
(369,574,o),
(337,515,o),
(324,485,c),
(301,528,o),
(280,567,o),
(263,602,cs),
(224,681,o),
(203,725,o),
(203,734,cs),
(203,760,o),
(295,740,o),
(295,777,cs),
(295,794,o),
(288,799,o),
(264,799,cs),
(41,799,ls),
(18,799,o),
(6,792,o),
(6,777,cs),
(6,757,o),
(23,753,o),
(42,753,cs),
(89,753,o),
(119,745,o),
(132,721,cs),
(289,414,l),
(129,89,l),
(116,66,o),
(108,54,o),
(80,51,cs),
(81,51,o),
(41,45,o),
(14,45,cs),
(1,45,o),
(-16,39,o),
(-16,24,cs),
(-16,5,o),
(5,0,o),
(17,0,cs),
(261,0,ls),
(288,0,o),
(295,9,o),
(295,25,cs),
(295,44,o),
(280,48,o),
(261,49,cs),
(231,52,o),
(196,47,o),
(196,65,cs),
(196,72,o),
(218,120,o),
(261,209,cs),
(298,288,o),
(325,338,o),
(325,341,c),
(355,285,o),
(382,234,o),
(405,189,cs),
(413,173,o),
(486,35,o),
(486,22,cs),
(486,5,o),
(419,19,o),
(419,-15,cs),
(419,-31,o),
(426,-37,o),
(450,-37,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
97 63 37 7 4 5 9 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
2 1 0 0 1 83 0 1 1 12 67 0 9 9 10 83 0 10 10 14 67 8 7 2 5 5 6 83 0 6 6 13 67 0 3 3 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 0 4 3 4 87 2 1 0 0 1 83 0 1 1 12 67 0 9 9 10 83 0 10 10 14 67 8 7 2 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 10 0 9 5 10 9 91 0 3 0 4 3 4 87 2 1 0 0 1 83 0 1 1 12 67 8 7 2 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 7 5 3 5 7 96 0 10 0 9 5 10 9 91 0 3 0 4 3 4 87 2 1 0 0 1 83 0 1 1 14 67 8 1 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
108 105 102 100 93 92 89 87 83 80 74 73 49 46 42 40 32 31 25 22 18 16 11 15
CALL[ ]	/* CallFunction */";
};
width = 685;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(675,-37,ls),
(698,-37,o),
(710,-32,o),
(710,-23,cs),
(710,-11,o),
(693,-11,o),
(674,-11,cs),
(610,-11,o),
(574,-4,o),
(561,21,cs),
(356,414,l),
(534,752,ls),
(546,775,o),
(554,787,o),
(583,790,cs),
(594,791,o),
(626,795,o),
(654,796,cs),
(667,796,o),
(674,800,o),
(674,807,cs),
(674,818,o),
(663,821,o),
(651,821,cs),
(426,821,ls),
(413,821,o),
(404,819,o),
(399,816,cs),
(394,813,o),
(392,809,o),
(392,806,cs),
(392,791,o),
(413,792,o),
(426,792,cs),
(451,792,o),
(470,791,o),
(481,790,cs),
(492,789,o),
(497,784,o),
(497,776,cs),
(497,768,o),
(474,718,o),
(428,632,cs),
(388,556,o),
(348,478,o),
(337,454,c),
(310,506,o),
(285,553,o),
(264,596,cs),
(231,660,o),
(192,744,o),
(192,754,cs),
(192,781,o),
(288,760,o),
(288,785,cs),
(288,790,o),
(286,794,o),
(282,796,cs),
(277,798,o),
(269,799,o),
(257,799,cs),
(40,799,ls),
(17,799,o),
(5,794,o),
(5,785,cs),
(5,773,o),
(22,773,o),
(41,773,cs),
(105,773,o),
(138,768,o),
(151,741,cs),
(316,412,l),
(148,69,ls),
(136,46,o),
(128,34,o),
(99,31,cs),
(100,31,o),
(47,25,o),
(8,25,cs),
(-5,25,o),
(-12,21,o),
(-12,14,cs),
(-12,3,o),
(-1,0,o),
(11,0,cs),
(256,0,ls),
(269,0,o),
(278,2,o),
(283,5,cs),
(288,8,o),
(290,12,o),
(290,15,cs),
(290,30,o),
(269,29,o),
(256,29,cs),
(236,29,o),
(185,26,o),
(185,45,cs),
(185,50,o),
(217,123,o),
(261,213,cs),
(308,309,o),
(337,370,o),
(337,370,c),
(372,305,o),
(403,246,o),
(430,194,cs),
(465,130,o),
(524,13,o),
(524,2,cs),
(524,-15,o),
(427,1,o),
(427,-23,cs),
(427,-28,o),
(429,-32,o),
(434,-34,cs),
(438,-36,o),
(446,-37,o),
(458,-37,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
94 61 36 7 4 6 10 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
2 1 0 0 1 83 0 1 1 12 67 12 1 10 10 11 83 0 11 11 14 67 9 8 2 6 6 7 83 0 7 7 13 67 5 1 3 3 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
5 1 3 0 4 3 4 87 2 1 0 0 1 83 0 1 1 12 67 12 1 10 10 11 83 0 11 11 14 67 9 8 2 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 11 12 1 10 6 11 10 91 5 1 3 0 4 3 4 87 2 1 0 0 1 83 0 1 1 12 67 9 8 2 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 11 12 1 10 6 11 10 91 5 1 3 0 4 3 4 87 2 1 0 0 1 83 0 1 1 14 67 9 8 2 6 6 7 83 0 7 7 13 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
110 109 105 102 99 97 90 89 87 84 81 78 74 71 52 51 47 44 41 39 30 28 25 22 18 16 13 15
CALL[ ]	/* CallFunction */";
};
width = 679;
}
);
note = X;
unicode = 88;
},
{
glyphname = Y;
kernLeft = Y;
kernRight = Y;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(459,0,ls),
(482,0,o),
(497,4,o),
(497,31,cs),
(497,58,o),
(471,63,o),
(446,63,cs),
(380,63,l),
(380,118,o),
(379,184,o),
(378,239,cs),
(377,271,o),
(377,303,o),
(377,334,c),
(415,421,o),
(487,560,o),
(547,674,cs),
(562,701,o),
(569,705,o),
(596,712,cs),
(604,714,o),
(668,718,o),
(682,718,cs),
(695,718,o),
(719,722,o),
(719,745,cs),
(719,772,o),
(703,775,o),
(679,775,cs),
(439,775,ls),
(406,775,o),
(397,767,o),
(397,744,cs),
(397,721,o),
(412,714,o),
(439,714,cs),
(447,714,o),
(459,713,o),
(459,698,cs),
(459,664,o),
(378,509,o),
(339,440,c),
(315,489,o),
(305,512,o),
(263,601,cs),
(227,677,o),
(209,720,o),
(209,731,cs),
(209,762,o),
(281,742,o),
(281,783,cs),
(281,799,o),
(266,813,o),
(242,813,cs),
(14,813,ls),
(-9,813,o),
(-32,804,o),
(-32,783,cs),
(-32,760,o),
(-7,752,o),
(17,749,cs),
(50,746,o),
(74,741,o),
(87,736,cs),
(100,731,o),
(109,723,o),
(114,712,cs),
(153,640,o),
(176,595,o),
(200,545,cs),
(220,500,o),
(253,427,o),
(289,350,c),
(289,109,ls),
(289,76,o),
(264,67,o),
(229,63,cs),
(192,59,o),
(181,49,o),
(181,30,cs),
(181,3,o),
(198,0,o),
(235,0,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
64 41 7 3 4 0 1 66 0 1 3 2 2 0 4 1 0 91 0 6 6 14 67 0 4 4 5 84 0 5 5 13 5 68 80 77 52 47 17 36 52 46 7 21
CALL[ ]	/* CallFunction */";
};
width = 668;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(461,0,ls),
(474,0,o),
(486,5,o),
(486,28,cs),
(486,48,o),
(466,51,o),
(451,51,cs),
(365,51,l),
(365,107,o),
(364,178,o),
(363,235,cs),
(362,268,o),
(362,301,o),
(362,334,c),
(402,425,o),
(483,581,o),
(540,687,cs),
(552,710,o),
(560,722,o),
(589,725,cs),
(588,725,o),
(638,731,o),
(677,731,cs),
(690,731,o),
(707,736,o),
(707,752,cs),
(707,776,o),
(686,776,o),
(674,776,cs),
(432,776,ls),
(401,776,o),
(393,767,o),
(393,751,cs),
(393,732,o),
(411,727,o),
(432,727,cs),
(449,727,o),
(473,727,o),
(473,711,cs),
(473,693,o),
(442,635,o),
(412,576,cs),
(379,512,o),
(346,454,o),
(336,423,c),
(323,453,o),
(290,519,o),
(252,598,cs),
(210,684,o),
(188,732,o),
(188,743,cs),
(188,776,o),
(270,753,o),
(270,789,cs),
(270,804,o),
(258,813,o),
(234,813,cs),
(6,813,ls),
(-17,813,o),
(-29,805,o),
(-29,789,cs),
(-29,770,o),
(-12,767,o),
(7,767,cs),
(52,767,o),
(97,759,o),
(109,735,cs),
(142,664,o),
(173,606,o),
(199,554,cs),
(223,505,o),
(253,445,o),
(293,355,c),
(293,94,ls),
(293,50,o),
(259,48,o),
(239,48,cs),
(213,48,o),
(200,41,o),
(200,26,cs),
(200,5,o),
(222,0,o),
(251,0,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
67 43 7 3 4 0 1 66 0 1 3 2 2 0 4 1 0 91 0 7 7 8 83 0 8 8 14 67 6 1 4 4 5 83 0 5 5 13 5 68 84 81 78 76 63 60 57 54 50 48 35 34 31 29 25 22 18 16 9 15
CALL[ ]	/* CallFunction */";
};
width = 660;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(450,0,ls),
(463,0,o),
(470,4,o),
(470,13,cs),
(470,24,o),
(455,31,o),
(440,31,cs),
(344,31,l),
(344,91,o),
(343,167,o),
(342,228,cs),
(341,264,o),
(341,299,o),
(341,334,c),
(384,432,o),
(477,610,o),
(530,708,cs),
(542,731,o),
(550,743,o),
(579,746,cs),
(578,746,o),
(631,752,o),
(670,752,cs),
(683,752,o),
(690,756,o),
(690,763,cs),
(690,774,o),
(679,777,o),
(667,777,cs),
(422,777,ls),
(409,777,o),
(400,775,o),
(395,772,cs),
(390,769,o),
(388,765,o),
(388,762,cs),
(388,747,o),
(409,748,o),
(422,748,cs),
(442,748,o),
(493,751,o),
(493,732,cs),
(493,714,o),
(462,653,o),
(420,573,cs),
(372,483,o),
(336,418,o),
(327,395,c),
(314,429,o),
(274,508,o),
(233,594,cs),
(190,684,o),
(158,752,o),
(158,763,cs),
(158,795,o),
(254,774,o),
(254,799,cs),
(254,804,o),
(252,808,o),
(248,810,cs),
(243,812,o),
(235,813,o),
(223,813,cs),
(5,813,ls),
(-18,813,o),
(-30,808,o),
(-30,799,cs),
(-30,787,o),
(-13,787,o),
(6,787,cs),
(70,787,o),
(94,780,o),
(109,755,cs),
(154,671,o),
(182,621,o),
(208,566,cs),
(231,517,o),
(264,438,o),
(302,355,c),
(302,74,ls),
(302,30,o),
(262,28,o),
(229,28,cs),
(217,28,o),
(200,25,o),
(200,13,cs),
(200,2,o),
(222,0,o),
(241,0,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
68 44 7 3 4 0 1 66 0 1 3 2 2 0 4 1 0 91 9 1 7 7 8 83 0 8 8 14 67 6 1 4 4 5 83 0 5 5 13 5 68 88 87 83 80 77 75 64 61 57 54 51 49 36 35 32 30 27 24 20 17 10 15
CALL[ ]	/* CallFunction */";
};
width = 648;
}
);
note = Y;
unicode = 89;
},
{
glyphname = Yacute;
kernLeft = Y;
kernRight = Y;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(459,0,ls),
(482,0,o),
(497,4,o),
(497,31,cs),
(497,58,o),
(471,63,o),
(446,63,cs),
(380,63,l),
(380,118,o),
(379,184,o),
(378,239,cs),
(377,271,o),
(377,303,o),
(377,334,c),
(415,421,o),
(487,560,o),
(547,674,cs),
(562,701,o),
(569,705,o),
(596,712,cs),
(604,714,o),
(668,718,o),
(682,718,cs),
(695,718,o),
(719,722,o),
(719,745,cs),
(719,772,o),
(703,775,o),
(679,775,cs),
(439,775,ls),
(406,775,o),
(397,767,o),
(397,744,cs),
(397,721,o),
(412,714,o),
(439,714,cs),
(447,714,o),
(459,713,o),
(459,698,cs),
(459,664,o),
(378,509,o),
(339,440,c),
(315,489,o),
(305,512,o),
(263,601,cs),
(227,677,o),
(209,720,o),
(209,731,cs),
(209,762,o),
(281,742,o),
(281,783,cs),
(281,799,o),
(266,813,o),
(242,813,cs),
(14,813,ls),
(-9,813,o),
(-32,804,o),
(-32,783,cs),
(-32,760,o),
(-7,752,o),
(17,749,cs),
(50,746,o),
(74,741,o),
(87,736,cs),
(100,731,o),
(109,723,o),
(114,712,cs),
(153,640,o),
(176,595,o),
(200,545,cs),
(220,500,o),
(253,427,o),
(289,350,c),
(289,109,ls),
(289,76,o),
(264,67,o),
(229,63,cs),
(192,59,o),
(181,49,o),
(181,30,cs),
(181,3,o),
(198,0,o),
(235,0,cs)
);
},
{
closed = 1;
nodes = (
(387,840,o),
(472,897,o),
(472,935,cs),
(472,954,o),
(458,972,o),
(431,972,cs),
(393,972,o),
(318,899,o),
(318,871,cs),
(318,855,o),
(333,840,o),
(353,840,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
80 57 23 3 6 2 1 66 0 1 0 1 106 0 0 8 0 106 0 3 5 4 2 2 6 3 2 92 0 8 8 14 67 0 6 6 7 84 0 7 7 13 7 68 96 93 71 68 64 62 47 46 45 43 39 36 32 30 38 36 9 17
CALL[ ]	/* CallFunction */";
};
width = 668;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(461,0,ls),
(474,0,o),
(486,5,o),
(486,28,cs),
(486,48,o),
(466,51,o),
(451,51,cs),
(365,51,l),
(365,107,o),
(364,178,o),
(363,235,cs),
(362,268,o),
(362,301,o),
(362,334,c),
(402,425,o),
(483,581,o),
(540,687,cs),
(552,710,o),
(560,722,o),
(589,725,cs),
(588,725,o),
(638,731,o),
(677,731,cs),
(690,731,o),
(707,736,o),
(707,752,cs),
(707,776,o),
(686,776,o),
(674,776,cs),
(432,776,ls),
(401,776,o),
(393,767,o),
(393,751,cs),
(393,732,o),
(411,727,o),
(432,727,cs),
(449,727,o),
(473,727,o),
(473,711,cs),
(473,693,o),
(442,635,o),
(412,576,cs),
(379,512,o),
(346,454,o),
(336,423,c),
(323,453,o),
(290,519,o),
(252,598,cs),
(210,684,o),
(188,732,o),
(188,743,cs),
(188,776,o),
(270,753,o),
(270,789,cs),
(270,804,o),
(258,813,o),
(234,813,cs),
(6,813,ls),
(-17,813,o),
(-29,805,o),
(-29,789,cs),
(-29,770,o),
(-12,767,o),
(7,767,cs),
(52,767,o),
(97,759,o),
(109,735,cs),
(142,664,o),
(173,606,o),
(199,554,cs),
(223,505,o),
(253,445,o),
(293,355,c),
(293,94,ls),
(293,50,o),
(259,48,o),
(239,48,cs),
(213,48,o),
(200,41,o),
(200,26,cs),
(200,5,o),
(222,0,o),
(251,0,cs)
);
},
{
closed = 1;
nodes = (
(319,854,o),
(407,908,o),
(407,941,cs),
(407,960,o),
(395,972,o),
(375,972,cs),
(346,972,o),
(269,904,o),
(269,877,cs),
(269,864,o),
(278,854,o),
(293,854,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
83 59 23 3 6 2 1 66 0 1 0 1 106 0 0 10 0 106 0 3 5 4 2 2 6 3 2 91 0 9 9 10 83 0 10 10 14 67 8 1 6 6 7 84 0 7 7 13 7 68 100 97 94 92 79 76 73 70 66 64 51 50 47 45 41 38 34 32 38 36 11 17
CALL[ ]	/* CallFunction */";
};
width = 660;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(450,0,ls),
(463,0,o),
(470,4,o),
(470,13,cs),
(470,24,o),
(455,31,o),
(440,31,cs),
(344,31,l),
(344,91,o),
(343,167,o),
(342,228,cs),
(341,264,o),
(341,299,o),
(341,334,c),
(384,432,o),
(477,610,o),
(530,708,cs),
(542,731,o),
(550,743,o),
(579,746,cs),
(578,746,o),
(631,752,o),
(670,752,cs),
(683,752,o),
(690,756,o),
(690,763,cs),
(690,774,o),
(679,777,o),
(667,777,cs),
(422,777,ls),
(409,777,o),
(400,775,o),
(395,772,cs),
(390,769,o),
(388,765,o),
(388,762,cs),
(388,747,o),
(409,748,o),
(422,748,cs),
(442,748,o),
(493,751,o),
(493,732,cs),
(493,714,o),
(462,653,o),
(420,573,cs),
(372,483,o),
(336,418,o),
(327,395,c),
(314,429,o),
(274,508,o),
(233,594,cs),
(190,684,o),
(158,752,o),
(158,763,cs),
(158,795,o),
(254,774,o),
(254,799,cs),
(254,804,o),
(252,808,o),
(248,810,cs),
(243,812,o),
(235,813,o),
(223,813,cs),
(5,813,ls),
(-18,813,o),
(-30,808,o),
(-30,799,cs),
(-30,787,o),
(-13,787,o),
(6,787,cs),
(70,787,o),
(94,780,o),
(109,755,cs),
(154,671,o),
(182,621,o),
(208,566,cs),
(231,517,o),
(264,438,o),
(302,355,c),
(302,74,ls),
(302,30,o),
(262,28,o),
(229,28,cs),
(217,28,o),
(200,25,o),
(200,13,cs),
(200,2,o),
(222,0,o),
(241,0,cs)
);
},
{
closed = 1;
nodes = (
(297,875,o),
(385,928,o),
(385,949,cs),
(385,968,o),
(377,971,o),
(366,971,cs),
(346,971,o),
(271,910,o),
(271,886,cs),
(271,879,o),
(274,875,o),
(279,875,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
83 59 22 3 6 2 1 66 0 1 0 1 106 0 0 10 0 106 0 3 5 4 2 2 6 3 2 91 11 1 9 9 10 83 0 10 10 14 67 8 1 6 6 7 84 0 7 7 13 7 68 103 102 98 95 92 90 79 76 72 69 66 64 51 50 47 45 42 39 35 32 37 36 12 17
CALL[ ]	/* CallFunction */";
};
width = 648;
}
);
note = Yacute;
unicode = 221;
},
{
glyphname = Ycircumflex;
kernLeft = Y;
kernRight = Y;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(459,0,ls),
(482,0,o),
(497,4,o),
(497,31,cs),
(497,58,o),
(471,63,o),
(446,63,cs),
(380,63,l),
(380,118,o),
(379,184,o),
(378,239,cs),
(377,271,o),
(377,303,o),
(377,334,c),
(415,421,o),
(487,560,o),
(547,674,cs),
(562,701,o),
(569,705,o),
(596,712,cs),
(604,714,o),
(668,718,o),
(682,718,cs),
(695,718,o),
(719,722,o),
(719,745,cs),
(719,772,o),
(703,775,o),
(679,775,cs),
(439,775,ls),
(406,775,o),
(397,767,o),
(397,744,cs),
(397,721,o),
(412,714,o),
(439,714,cs),
(447,714,o),
(459,713,o),
(459,698,cs),
(459,664,o),
(378,509,o),
(339,440,c),
(315,489,o),
(305,512,o),
(263,601,cs),
(227,677,o),
(209,720,o),
(209,731,cs),
(209,762,o),
(281,742,o),
(281,783,cs),
(281,799,o),
(266,813,o),
(242,813,cs),
(14,813,ls),
(-9,813,o),
(-32,804,o),
(-32,783,cs),
(-32,760,o),
(-7,752,o),
(17,749,cs),
(50,746,o),
(74,741,o),
(87,736,cs),
(100,731,o),
(109,723,o),
(114,712,cs),
(153,640,o),
(176,595,o),
(200,545,cs),
(220,500,o),
(253,427,o),
(289,350,c),
(289,109,ls),
(289,76,o),
(264,67,o),
(229,63,cs),
(192,59,o),
(181,49,o),
(181,30,cs),
(181,3,o),
(198,0,o),
(235,0,cs)
);
},
{
closed = 1;
nodes = (
(257,830,o),
(319,854,o),
(359,880,c),
(418,842,o),
(473,830,o),
(479,830,cs),
(490,830,o),
(492,842,o),
(492,851,cs),
(492,892,o),
(383,972,o),
(359,972,cs),
(348,972,o),
(313,950,o),
(286,928,cs),
(255,903,o),
(227,871,o),
(227,844,cs),
(227,837,o),
(231,830,o),
(240,830,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
5 1 0 2 90 67 33 3 7 3 2 66 0 2 0 2 106 1 10 2 0 9 0 106 0 4 6 5 2 3 7 4 3 91 0 9 9 14 67 0 7 7 8 84 0 8 8 13 8 68 1 0 106 103 81 78 74 72 57 56 55 53 49 46 42 40 19 17 11 9 0 25 1 25 11 15
CALL[ ]	/* CallFunction */";
};
width = 668;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(461,0,ls),
(474,0,o),
(486,5,o),
(486,28,cs),
(486,48,o),
(466,51,o),
(451,51,cs),
(365,51,l),
(365,107,o),
(364,178,o),
(363,235,cs),
(362,268,o),
(362,301,o),
(362,334,c),
(402,425,o),
(483,581,o),
(540,687,cs),
(552,710,o),
(560,722,o),
(589,725,cs),
(588,725,o),
(638,731,o),
(677,731,cs),
(690,731,o),
(707,736,o),
(707,752,cs),
(707,776,o),
(686,776,o),
(674,776,cs),
(432,776,ls),
(401,776,o),
(393,767,o),
(393,751,cs),
(393,732,o),
(411,727,o),
(432,727,cs),
(449,727,o),
(473,727,o),
(473,711,cs),
(473,693,o),
(442,635,o),
(412,576,cs),
(379,512,o),
(346,454,o),
(336,423,c),
(323,453,o),
(290,519,o),
(252,598,cs),
(210,684,o),
(188,732,o),
(188,743,cs),
(188,776,o),
(270,753,o),
(270,789,cs),
(270,804,o),
(258,813,o),
(234,813,cs),
(6,813,ls),
(-17,813,o),
(-29,805,o),
(-29,789,cs),
(-29,770,o),
(-12,767,o),
(7,767,cs),
(52,767,o),
(97,759,o),
(109,735,cs),
(142,664,o),
(173,606,o),
(199,554,cs),
(223,505,o),
(253,445,o),
(293,355,c),
(293,94,ls),
(293,50,o),
(259,48,o),
(239,48,cs),
(213,48,o),
(200,41,o),
(200,26,cs),
(200,5,o),
(222,0,o),
(251,0,cs)
);
},
{
closed = 1;
nodes = (
(245,847,o),
(306,874,o),
(346,898,c),
(410,860,o),
(458,847,o),
(466,847,cs),
(474,847,o),
(477,855,o),
(477,864,cs),
(477,900,o),
(370,972,o),
(346,972,cs),
(324,972,o),
(216,901,o),
(216,860,cs),
(216,851,o),
(220,847,o),
(227,847,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
5 1 0 2 92 68 32 3 7 3 2 66 0 2 0 2 106 1 12 2 0 11 0 106 0 4 6 5 2 3 7 4 3 91 0 10 10 11 83 0 11 11 14 67 9 1 7 7 8 84 0 8 8 13 8 68 1 0 109 106 103 101 88 85 82 79 75 73 60 59 56 54 50 47 43 41 18 16 11 9 0 24 1 24 13 15
CALL[ ]	/* CallFunction */";
};
width = 660;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(450,0,ls),
(463,0,o),
(470,4,o),
(470,13,cs),
(470,24,o),
(455,31,o),
(440,31,cs),
(344,31,l),
(344,91,o),
(343,167,o),
(342,228,cs),
(341,264,o),
(341,299,o),
(341,334,c),
(384,432,o),
(477,610,o),
(530,708,cs),
(542,731,o),
(550,743,o),
(579,746,cs),
(578,746,o),
(631,752,o),
(670,752,cs),
(683,752,o),
(690,756,o),
(690,763,cs),
(690,774,o),
(679,777,o),
(667,777,cs),
(422,777,ls),
(409,777,o),
(400,775,o),
(395,772,cs),
(390,769,o),
(388,765,o),
(388,762,cs),
(388,747,o),
(409,748,o),
(422,748,cs),
(442,748,o),
(493,751,o),
(493,732,cs),
(493,714,o),
(462,653,o),
(420,573,cs),
(372,483,o),
(336,418,o),
(327,395,c),
(314,429,o),
(274,508,o),
(233,594,cs),
(190,684,o),
(158,752,o),
(158,763,cs),
(158,795,o),
(254,774,o),
(254,799,cs),
(254,804,o),
(252,808,o),
(248,810,cs),
(243,812,o),
(235,813,o),
(223,813,cs),
(5,813,ls),
(-18,813,o),
(-30,808,o),
(-30,799,cs),
(-30,787,o),
(-13,787,o),
(6,787,cs),
(70,787,o),
(94,780,o),
(109,755,cs),
(154,671,o),
(182,621,o),
(208,566,cs),
(231,517,o),
(264,438,o),
(302,355,c),
(302,74,ls),
(302,30,o),
(262,28,o),
(229,28,cs),
(217,28,o),
(200,25,o),
(200,13,cs),
(200,2,o),
(222,0,o),
(241,0,cs)
);
},
{
closed = 1;
nodes = (
(216,875,o),
(264,894,o),
(328,928,c),
(392,894,o),
(440,875,o),
(448,875,cs),
(453,875,o),
(456,879,o),
(456,886,cs),
(456,911,o),
(354,972,o),
(328,972,cs),
(305,972,o),
(201,911,o),
(201,886,cs),
(201,879,o),
(204,875,o),
(209,875,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 89 values pushed */
5 1 0 2 92 68 31 3 7 3 2 66 0 2 0 2 106 1 13 2 0 11 0 106 0 4 6 5 2 3 7 4 3 91 12 1 10 10 11 83 0 11 11 14 67 9 1 7 7 8 84 0 8 8 13 8 68 1 0 112 111 107 104 101 99 88 85 81 78 75 73 60 59 56 54 51 48 44 41 18 16 11 9 0 23 1 23 14 15
CALL[ ]	/* CallFunction */";
};
width = 648;
}
);
note = Ycircumflex;
unicode = 374;
},
{
glyphname = Ydieresis;
kernLeft = Y;
kernRight = Y;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(459,0,ls),
(482,0,o),
(497,4,o),
(497,31,cs),
(497,58,o),
(471,63,o),
(446,63,cs),
(380,63,l),
(380,118,o),
(379,184,o),
(378,239,cs),
(377,271,o),
(377,303,o),
(377,334,c),
(415,421,o),
(487,560,o),
(547,674,cs),
(562,701,o),
(569,705,o),
(596,712,cs),
(604,714,o),
(668,718,o),
(682,718,cs),
(695,718,o),
(719,722,o),
(719,745,cs),
(719,772,o),
(703,775,o),
(679,775,cs),
(439,775,ls),
(406,775,o),
(397,767,o),
(397,744,cs),
(397,721,o),
(412,714,o),
(439,714,cs),
(447,714,o),
(459,713,o),
(459,698,cs),
(459,664,o),
(378,509,o),
(339,440,c),
(315,489,o),
(305,512,o),
(263,601,cs),
(227,677,o),
(209,720,o),
(209,731,cs),
(209,762,o),
(281,742,o),
(281,783,cs),
(281,799,o),
(266,813,o),
(242,813,cs),
(14,813,ls),
(-9,813,o),
(-32,804,o),
(-32,783,cs),
(-32,760,o),
(-7,752,o),
(17,749,cs),
(50,746,o),
(74,741,o),
(87,736,cs),
(100,731,o),
(109,723,o),
(114,712,cs),
(153,640,o),
(176,595,o),
(200,545,cs),
(220,500,o),
(253,427,o),
(289,350,c),
(289,109,ls),
(289,76,o),
(264,67,o),
(229,63,cs),
(192,59,o),
(181,49,o),
(181,30,cs),
(181,3,o),
(198,0,o),
(235,0,cs)
);
},
{
closed = 1;
nodes = (
(266,841,o),
(301,856,o),
(301,911,cs),
(301,947,o),
(274,972,o),
(242,972,cs),
(195,972,o),
(175,930,o),
(175,907,cs),
(175,868,o),
(202,841,o),
(235,841,cs)
);
},
{
closed = 1;
nodes = (
(473,830,o),
(508,845,o),
(508,900,cs),
(508,937,o),
(481,961,o),
(449,961,cs),
(402,961,o),
(382,919,o),
(382,896,cs),
(382,857,o),
(409,830,o),
(442,830,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
96 73 39 3 8 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
2 1 0 3 1 1 10 0 1 91 0 5 7 6 2 4 8 5 4 91 0 10 10 14 67 0 8 8 9 84 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 10 2 3 91 0 5 7 6 2 4 8 5 4 91 0 10 10 14 67 0 8 8 9 84 0 9 9 13 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
112 109 87 84 80 78 63 62 61 59 55 52 48 46 38 38 38 36 11 19
CALL[ ]	/* CallFunction */";
};
width = 668;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(461,0,ls),
(474,0,o),
(486,5,o),
(486,28,cs),
(486,48,o),
(466,51,o),
(451,51,cs),
(365,51,l),
(365,107,o),
(364,178,o),
(363,235,cs),
(362,268,o),
(362,301,o),
(362,334,c),
(402,425,o),
(483,581,o),
(540,687,cs),
(552,710,o),
(560,722,o),
(589,725,cs),
(588,725,o),
(638,731,o),
(677,731,cs),
(690,731,o),
(707,736,o),
(707,752,cs),
(707,776,o),
(686,776,o),
(674,776,cs),
(432,776,ls),
(401,776,o),
(393,767,o),
(393,751,cs),
(393,732,o),
(411,727,o),
(432,727,cs),
(449,727,o),
(473,727,o),
(473,711,cs),
(473,693,o),
(442,635,o),
(412,576,cs),
(379,512,o),
(346,454,o),
(336,423,c),
(323,453,o),
(290,519,o),
(252,598,cs),
(210,684,o),
(188,732,o),
(188,743,cs),
(188,776,o),
(270,753,o),
(270,789,cs),
(270,804,o),
(258,813,o),
(234,813,cs),
(6,813,ls),
(-17,813,o),
(-29,805,o),
(-29,789,cs),
(-29,770,o),
(-12,767,o),
(7,767,cs),
(52,767,o),
(97,759,o),
(109,735,cs),
(142,664,o),
(173,606,o),
(199,554,cs),
(223,505,o),
(253,445,o),
(293,355,c),
(293,94,ls),
(293,50,o),
(259,48,o),
(239,48,cs),
(213,48,o),
(200,41,o),
(200,26,cs),
(200,5,o),
(222,0,o),
(251,0,cs)
);
},
{
closed = 1;
nodes = (
(255,859,o),
(286,872,o),
(286,920,cs),
(286,951,o),
(264,972,o),
(237,972,cs),
(199,972,o),
(181,937,o),
(181,916,cs),
(181,883,o),
(203,859,o),
(230,859,cs)
);
},
{
closed = 1;
nodes = (
(462,847,o),
(493,860,o),
(493,908,cs),
(493,939,o),
(471,960,o),
(444,960,cs),
(406,960,o),
(388,925,o),
(388,904,cs),
(388,871,o),
(410,847,o),
(437,847,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
95 71 35 3 8 4 1 66 0 0 0 1 3 0 1 91 0 2 0 3 12 2 3 91 0 5 7 6 2 4 8 5 4 91 0 11 11 12 83 0 12 12 14 67 10 1 8 8 9 83 0 9 9 13 9 68 112 109 106 104 91 88 85 82 78 76 63 62 59 57 53 50 46 44 36 38 36 36 13 19
CALL[ ]	/* CallFunction */";
};
width = 660;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(450,0,ls),
(463,0,o),
(470,4,o),
(470,13,cs),
(470,24,o),
(455,31,o),
(440,31,cs),
(344,31,l),
(344,91,o),
(343,167,o),
(342,228,cs),
(341,264,o),
(341,299,o),
(341,334,c),
(384,432,o),
(477,610,o),
(530,708,cs),
(542,731,o),
(550,743,o),
(579,746,cs),
(578,746,o),
(631,752,o),
(670,752,cs),
(683,752,o),
(690,756,o),
(690,763,cs),
(690,774,o),
(679,777,o),
(667,777,cs),
(422,777,ls),
(409,777,o),
(400,775,o),
(395,772,cs),
(390,769,o),
(388,765,o),
(388,762,cs),
(388,747,o),
(409,748,o),
(422,748,cs),
(442,748,o),
(493,751,o),
(493,732,cs),
(493,714,o),
(462,653,o),
(420,573,cs),
(372,483,o),
(336,418,o),
(327,395,c),
(314,429,o),
(274,508,o),
(233,594,cs),
(190,684,o),
(158,752,o),
(158,763,cs),
(158,795,o),
(254,774,o),
(254,799,cs),
(254,804,o),
(252,808,o),
(248,810,cs),
(243,812,o),
(235,813,o),
(223,813,cs),
(5,813,ls),
(-18,813,o),
(-30,808,o),
(-30,799,cs),
(-30,787,o),
(-13,787,o),
(6,787,cs),
(70,787,o),
(94,780,o),
(109,755,cs),
(154,671,o),
(182,621,o),
(208,566,cs),
(231,517,o),
(264,438,o),
(302,355,c),
(302,74,ls),
(302,30,o),
(262,28,o),
(229,28,cs),
(217,28,o),
(200,25,o),
(200,13,cs),
(200,2,o),
(222,0,o),
(241,0,cs)
);
},
{
closed = 1;
nodes = (
(242,889,o),
(264,899,o),
(264,935,cs),
(264,958,o),
(249,972,o),
(230,972,cs),
(202,972,o),
(189,945,o),
(189,931,cs),
(189,907,o),
(204,889,o),
(223,889,cs)
);
},
{
closed = 1;
nodes = (
(449,875,o),
(471,885,o),
(471,921,cs),
(471,944,o),
(456,958,o),
(437,958,cs),
(409,958,o),
(396,931,o),
(396,917,cs),
(396,893,o),
(411,875,o),
(430,875,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
96 72 35 3 8 4 1 66 0 0 0 1 3 0 1 91 0 2 0 3 12 2 3 91 0 5 7 6 2 4 8 5 4 91 13 1 11 11 12 83 0 12 12 14 67 10 1 8 8 9 83 0 9 9 13 9 68 116 115 111 108 105 103 92 89 85 82 79 77 64 63 60 58 55 52 48 45 36 38 36 36 14 19
CALL[ ]	/* CallFunction */";
};
width = 648;
}
);
note = Ydieresis;
unicode = 376;
},
{
glyphname = Ygrave;
kernLeft = Y;
kernRight = Y;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(459,0,ls),
(482,0,o),
(497,4,o),
(497,31,cs),
(497,58,o),
(471,63,o),
(446,63,cs),
(380,63,l),
(380,118,o),
(379,184,o),
(378,239,cs),
(377,271,o),
(377,303,o),
(377,334,c),
(415,421,o),
(487,560,o),
(547,674,cs),
(562,701,o),
(569,705,o),
(596,712,cs),
(604,714,o),
(668,718,o),
(682,718,cs),
(695,718,o),
(719,722,o),
(719,745,cs),
(719,772,o),
(703,775,o),
(679,775,cs),
(439,775,ls),
(406,775,o),
(397,767,o),
(397,744,cs),
(397,721,o),
(412,714,o),
(439,714,cs),
(447,714,o),
(459,713,o),
(459,698,cs),
(459,664,o),
(378,509,o),
(339,440,c),
(315,489,o),
(305,512,o),
(263,601,cs),
(227,677,o),
(209,720,o),
(209,731,cs),
(209,762,o),
(281,742,o),
(281,783,cs),
(281,799,o),
(266,813,o),
(242,813,cs),
(14,813,ls),
(-9,813,o),
(-32,804,o),
(-32,783,cs),
(-32,760,o),
(-7,752,o),
(17,749,cs),
(50,746,o),
(74,741,o),
(87,736,cs),
(100,731,o),
(109,723,o),
(114,712,cs),
(153,640,o),
(176,595,o),
(200,545,cs),
(220,500,o),
(253,427,o),
(289,350,c),
(289,109,ls),
(289,76,o),
(264,67,o),
(229,63,cs),
(192,59,o),
(181,49,o),
(181,30,cs),
(181,3,o),
(198,0,o),
(235,0,cs)
);
},
{
closed = 1;
nodes = (
(407,841,o),
(422,856,o),
(422,872,cs),
(422,898,o),
(348,972,o),
(308,972,cs),
(281,972,o),
(267,953,o),
(267,936,cs),
(267,897,o),
(354,841,o),
(387,841,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
80 57 23 3 6 2 1 66 0 0 1 0 106 0 1 8 1 106 0 3 5 4 2 2 6 3 2 91 0 8 8 14 67 0 6 6 7 84 0 7 7 13 7 68 96 93 71 68 64 62 47 46 45 43 39 36 32 30 38 34 9 17
CALL[ ]	/* CallFunction */";
};
width = 668;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(461,0,ls),
(474,0,o),
(486,5,o),
(486,28,cs),
(486,48,o),
(466,51,o),
(451,51,cs),
(365,51,l),
(365,107,o),
(364,178,o),
(363,235,cs),
(362,268,o),
(362,301,o),
(362,334,c),
(402,425,o),
(483,581,o),
(540,687,cs),
(552,710,o),
(560,722,o),
(589,725,cs),
(588,725,o),
(638,731,o),
(677,731,cs),
(690,731,o),
(707,736,o),
(707,752,cs),
(707,776,o),
(686,776,o),
(674,776,cs),
(432,776,ls),
(401,776,o),
(393,767,o),
(393,751,cs),
(393,732,o),
(411,727,o),
(432,727,cs),
(449,727,o),
(473,727,o),
(473,711,cs),
(473,693,o),
(442,635,o),
(412,576,cs),
(379,512,o),
(346,454,o),
(336,423,c),
(323,453,o),
(290,519,o),
(252,598,cs),
(210,684,o),
(188,732,o),
(188,743,cs),
(188,776,o),
(270,753,o),
(270,789,cs),
(270,804,o),
(258,813,o),
(234,813,cs),
(6,813,ls),
(-17,813,o),
(-29,805,o),
(-29,789,cs),
(-29,770,o),
(-12,767,o),
(7,767,cs),
(52,767,o),
(97,759,o),
(109,735,cs),
(142,664,o),
(173,606,o),
(199,554,cs),
(223,505,o),
(253,445,o),
(293,355,c),
(293,94,ls),
(293,50,o),
(259,48,o),
(239,48,cs),
(213,48,o),
(200,41,o),
(200,26,cs),
(200,5,o),
(222,0,o),
(251,0,cs)
);
},
{
closed = 1;
nodes = (
(398,854,o),
(407,864,o),
(407,877,cs),
(407,904,o),
(330,972,o),
(301,972,cs),
(281,972,o),
(269,960,o),
(269,941,cs),
(269,910,o),
(354,854,o),
(383,854,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
83 59 23 3 6 2 1 66 0 0 1 0 106 0 1 10 1 106 0 3 5 4 2 2 6 3 2 91 0 9 9 10 83 0 10 10 14 67 8 1 6 6 7 84 0 7 7 13 7 68 100 97 94 92 79 76 73 70 66 64 51 50 47 45 41 38 34 32 38 34 11 17
CALL[ ]	/* CallFunction */";
};
width = 660;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(450,0,ls),
(463,0,o),
(470,4,o),
(470,13,cs),
(470,24,o),
(455,31,o),
(440,31,cs),
(344,31,l),
(344,91,o),
(343,167,o),
(342,228,cs),
(341,264,o),
(341,299,o),
(341,334,c),
(384,432,o),
(477,610,o),
(530,708,cs),
(542,731,o),
(550,743,o),
(579,746,cs),
(578,746,o),
(631,752,o),
(670,752,cs),
(683,752,o),
(690,756,o),
(690,763,cs),
(690,774,o),
(679,777,o),
(667,777,cs),
(422,777,ls),
(409,777,o),
(400,775,o),
(395,772,cs),
(390,769,o),
(388,765,o),
(388,762,cs),
(388,747,o),
(409,748,o),
(422,748,cs),
(442,748,o),
(493,751,o),
(493,732,cs),
(493,714,o),
(462,653,o),
(420,573,cs),
(372,483,o),
(336,418,o),
(327,395,c),
(314,429,o),
(274,508,o),
(233,594,cs),
(190,684,o),
(158,752,o),
(158,763,cs),
(158,795,o),
(254,774,o),
(254,799,cs),
(254,804,o),
(252,808,o),
(248,810,cs),
(243,812,o),
(235,813,o),
(223,813,cs),
(5,813,ls),
(-18,813,o),
(-30,808,o),
(-30,799,cs),
(-30,787,o),
(-13,787,o),
(6,787,cs),
(70,787,o),
(94,780,o),
(109,755,cs),
(154,671,o),
(182,621,o),
(208,566,cs),
(231,517,o),
(264,438,o),
(302,355,c),
(302,74,ls),
(302,30,o),
(262,28,o),
(229,28,cs),
(217,28,o),
(200,25,o),
(200,13,cs),
(200,2,o),
(222,0,o),
(241,0,cs)
);
},
{
closed = 1;
nodes = (
(383,875,o),
(386,879,o),
(386,886,cs),
(386,911,o),
(311,972,o),
(291,972,cs),
(280,972,o),
(272,969,o),
(272,950,cs),
(272,928,o),
(362,875,o),
(378,875,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
83 59 22 3 6 2 1 66 0 0 1 0 106 0 1 10 1 106 0 3 5 4 2 2 6 3 2 91 11 1 9 9 10 83 0 10 10 14 67 8 1 6 6 7 84 0 7 7 13 7 68 103 102 98 95 92 90 79 76 72 69 66 64 51 50 47 45 42 39 35 32 37 34 12 17
CALL[ ]	/* CallFunction */";
};
width = 648;
}
);
note = Ygrave;
unicode = 7922;
},
{
glyphname = Ytilde;
kernLeft = Y;
kernRight = Y;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(459,0,ls),
(482,0,o),
(497,4,o),
(497,31,cs),
(497,58,o),
(471,63,o),
(446,63,cs),
(380,63,l),
(380,118,o),
(379,184,o),
(378,239,cs),
(377,271,o),
(377,303,o),
(377,334,c),
(415,421,o),
(487,560,o),
(547,674,cs),
(562,701,o),
(569,705,o),
(596,712,cs),
(604,714,o),
(668,718,o),
(682,718,cs),
(695,718,o),
(719,722,o),
(719,745,cs),
(719,772,o),
(703,775,o),
(679,775,cs),
(439,775,ls),
(406,775,o),
(397,767,o),
(397,744,cs),
(397,721,o),
(412,714,o),
(439,714,cs),
(447,714,o),
(459,713,o),
(459,698,cs),
(459,664,o),
(378,509,o),
(339,440,c),
(315,489,o),
(305,512,o),
(263,601,cs),
(227,677,o),
(209,720,o),
(209,731,cs),
(209,762,o),
(281,742,o),
(281,783,cs),
(281,799,o),
(266,813,o),
(242,813,cs),
(14,813,ls),
(-9,813,o),
(-32,804,o),
(-32,783,cs),
(-32,760,o),
(-7,752,o),
(17,749,cs),
(50,746,o),
(74,741,o),
(87,736,cs),
(100,731,o),
(109,723,o),
(114,712,cs),
(153,640,o),
(176,595,o),
(200,545,cs),
(220,500,o),
(253,427,o),
(289,350,c),
(289,109,ls),
(289,76,o),
(264,67,o),
(229,63,cs),
(192,59,o),
(181,49,o),
(181,30,cs),
(181,3,o),
(198,0,o),
(235,0,cs)
);
},
{
closed = 1;
nodes = (
(215,861,o),
(239,886,o),
(278,886,cs),
(317,886,o),
(359,862,o),
(415,862,cs),
(448,862,o),
(526,880,o),
(526,937,cs),
(526,958,o),
(511,972,o),
(504,972,cs),
(499,972,o),
(489,968,o),
(474,959,cs),
(455,948,o),
(433,942,o),
(414,942,cs),
(375,942,o),
(313,970,o),
(277,970,cs),
(252,970,o),
(230,964,o),
(209,952,cs),
(190,941,o),
(175,926,o),
(175,897,cs),
(175,877,o),
(182,861,o),
(194,861,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
64 41 7 3 4 0 1 66 9 1 7 0 11 10 7 11 91 0 8 12 1 10 6 8 10 91 0 1 3 2 2 0 4 1 0 91 0 6 6 14 67 0 4 4 5 84 0 5 5 13 5 68 121 119 116 114 111 109 103 101 98 96 93 91 80 77 52 47 17 36 52 46 13 21
CALL[ ]	/* CallFunction */";
};
width = 668;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(461,0,ls),
(474,0,o),
(486,5,o),
(486,28,cs),
(486,48,o),
(466,51,o),
(451,51,cs),
(365,51,l),
(365,107,o),
(364,178,o),
(363,235,cs),
(362,268,o),
(362,301,o),
(362,334,c),
(402,425,o),
(483,581,o),
(540,687,cs),
(552,710,o),
(560,722,o),
(589,725,cs),
(588,725,o),
(638,731,o),
(677,731,cs),
(690,731,o),
(707,736,o),
(707,752,cs),
(707,776,o),
(686,776,o),
(674,776,cs),
(432,776,ls),
(401,776,o),
(393,767,o),
(393,751,cs),
(393,732,o),
(411,727,o),
(432,727,cs),
(449,727,o),
(473,727,o),
(473,711,cs),
(473,693,o),
(442,635,o),
(412,576,cs),
(379,512,o),
(346,454,o),
(336,423,c),
(323,453,o),
(290,519,o),
(252,598,cs),
(210,684,o),
(188,732,o),
(188,743,cs),
(188,776,o),
(270,753,o),
(270,789,cs),
(270,804,o),
(258,813,o),
(234,813,cs),
(6,813,ls),
(-17,813,o),
(-29,805,o),
(-29,789,cs),
(-29,770,o),
(-12,767,o),
(7,767,cs),
(52,767,o),
(97,759,o),
(109,735,cs),
(142,664,o),
(173,606,o),
(199,554,cs),
(223,505,o),
(253,445,o),
(293,355,c),
(293,94,ls),
(293,50,o),
(259,48,o),
(239,48,cs),
(213,48,o),
(200,41,o),
(200,26,cs),
(200,5,o),
(222,0,o),
(251,0,cs)
);
},
{
closed = 1;
nodes = (
(197,879,o),
(224,904,o),
(264,904,cs),
(303,904,o),
(345,880,o),
(401,880,cs),
(457,880,o),
(490,902,o),
(503,925,cs),
(506,931,o),
(508,937,o),
(508,944,cs),
(508,960,o),
(497,972,o),
(490,972,cs),
(487,972,o),
(483,971,o),
(480,970,cs),
(476,968,o),
(469,964,o),
(460,959,cs),
(437,948,o),
(417,942,o),
(400,942,cs),
(361,942,o),
(299,970,o),
(263,970,cs),
(238,970,o),
(216,964,o),
(195,952,cs),
(185,946,o),
(178,941,o),
(174,936,cs),
(170,931,o),
(167,927,o),
(166,924,cs),
(164,919,o),
(163,913,o),
(163,907,cs),
(163,892,o),
(169,879,o),
(180,879,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 90 values pushed */
68 44 8 3 4 0 1 66 11 1 9 0 13 12 9 13 91 0 10 14 1 12 8 10 12 91 0 1 3 2 2 0 4 1 0 91 0 7 7 8 83 0 8 8 14 67 6 1 4 4 5 83 0 5 5 13 5 68 126 124 121 119 116 114 108 106 103 101 98 96 85 82 79 77 64 61 58 55 51 49 36 35 32 30 26 23 19 17 15 26
CALL[ ]	/* CallFunction */";
};
width = 660;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(450,0,ls),
(463,0,o),
(470,4,o),
(470,13,cs),
(470,24,o),
(455,31,o),
(440,31,cs),
(344,31,l),
(344,91,o),
(343,167,o),
(342,228,cs),
(341,264,o),
(341,299,o),
(341,334,c),
(384,432,o),
(477,610,o),
(530,708,cs),
(542,731,o),
(550,743,o),
(579,746,cs),
(578,746,o),
(631,752,o),
(670,752,cs),
(683,752,o),
(690,756,o),
(690,763,cs),
(690,774,o),
(679,777,o),
(667,777,cs),
(422,777,ls),
(409,777,o),
(400,775,o),
(395,772,cs),
(390,769,o),
(388,765,o),
(388,762,cs),
(388,747,o),
(409,748,o),
(422,748,cs),
(442,748,o),
(493,751,o),
(493,732,cs),
(493,714,o),
(462,653,o),
(420,573,cs),
(372,483,o),
(336,418,o),
(327,395,c),
(314,429,o),
(274,508,o),
(233,594,cs),
(190,684,o),
(158,752,o),
(158,763,cs),
(158,795,o),
(254,774,o),
(254,799,cs),
(254,804,o),
(252,808,o),
(248,810,cs),
(243,812,o),
(235,813,o),
(223,813,cs),
(5,813,ls),
(-18,813,o),
(-30,808,o),
(-30,799,cs),
(-30,787,o),
(-13,787,o),
(6,787,cs),
(70,787,o),
(94,780,o),
(109,755,cs),
(154,671,o),
(182,621,o),
(208,566,cs),
(231,517,o),
(264,438,o),
(302,355,c),
(302,74,ls),
(302,30,o),
(262,28,o),
(229,28,cs),
(217,28,o),
(200,25,o),
(200,13,cs),
(200,2,o),
(222,0,o),
(241,0,cs)
);
},
{
closed = 1;
nodes = (
(190,888,o),
(217,913,o),
(258,913,cs),
(297,913,o),
(339,889,o),
(395,889,cs),
(448,889,o),
(497,909,o),
(497,934,cs),
(497,943,o),
(491,951,o),
(484,951,cs),
(481,951,o),
(477,950,o),
(474,949,cs),
(470,947,o),
(463,943,o),
(454,938,cs),
(431,927,o),
(411,921,o),
(394,921,cs),
(355,921,o),
(293,949,o),
(257,949,cs),
(232,949,o),
(210,943,o),
(189,931,cs),
(170,920,o),
(160,910,o),
(160,903,cs),
(160,896,o),
(167,888,o),
(174,888,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 93 values pushed */
68 44 7 3 4 0 1 66 12 1 10 0 14 13 10 14 91 0 11 15 1 13 8 11 13 91 0 1 3 2 2 0 4 1 0 91 9 1 7 7 8 83 0 8 8 14 67 6 1 4 4 5 83 0 5 5 13 5 68 123 121 118 116 113 111 105 103 100 98 95 93 88 87 83 80 77 75 64 61 57 54 51 49 36 35 32 30 27 24 20 17 16 15
CALL[ ]	/* CallFunction */";
};
width = 648;
}
);
note = Ytilde;
unicode = 7928;
},
{
glyphname = Z;
kernLeft = Z;
kernRight = Z;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(162,0,o),
(253,1,o),
(343,1,cs),
(382,1,o),
(420,1,o),
(459,1,cs),
(498,0,o),
(536,0,o),
(575,0,cs),
(604,0,o),
(611,6,o),
(611,31,cs),
(611,66,o),
(613,78,o),
(616,163,cs),
(618,220,o),
(621,257,o),
(621,273,cs),
(621,296,o),
(613,317,o),
(581,317,cs),
(542,317,o),
(539,287,o),
(539,268,cs),
(539,246,o),
(533,150,o),
(529,117,cs),
(526,92,o),
(512,83,o),
(469,83,cs),
(187,83,ls),
(179,83,o),
(174,84,o),
(171,85,cs),
(168,86,o),
(167,89,o),
(167,93,cs),
(167,97,o),
(221,182,o),
(331,352,cs),
(429,503,o),
(511,632,o),
(577,738,c),
(577,739,o),
(611,794,o),
(611,807,cs),
(611,819,o),
(604,821,o),
(589,821,cs),
(518,821,o),
(439,819,o),
(357,819,cs),
(323,819,o),
(289,819,o),
(256,820,cs),
(222,821,o),
(188,821,o),
(154,821,cs),
(61,821,o),
(49,814,o),
(49,780,cs),
(49,765,o),
(49,750,o),
(50,735,cs),
(50,720,o),
(50,705,o),
(50,690,cs),
(50,675,o),
(50,661,o),
(50,649,cs),
(49,636,o),
(49,622,o),
(49,607,cs),
(49,586,o),
(58,555,o),
(95,555,cs),
(126,555,o),
(132,577,o),
(132,626,cs),
(132,651,o),
(133,666,o),
(133,694,cs),
(133,726,o),
(136,737,o),
(175,737,cs),
(419,737,ls),
(458,737,o),
(467,737,o),
(467,721,cs),
(467,710,o),
(400,603,o),
(267,401,cs),
(142,214,o),
(43,68,o),
(38,61,cs),
(31,50,o),
(26,41,o),
(23,36,cs),
(20,30,o),
(19,24,o),
(19,19,cs),
(19,11,o),
(23,6,o),
(30,4,cs),
(37,1,o),
(51,0,o),
(72,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 1 1 3 83 0 3 3 12 67 0 4 4 0 84 0 0 0 13 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 1 1 3 83 0 3 3 14 67 0 4 4 0 84 0 0 0 13 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
107 105 94 91 75 65 51 49 40 36 169 6 16
CALL[ ]	/* CallFunction */";
};
width = 659;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(132,0,o),
(170,0,o),
(209,1,cs),
(247,1,o),
(285,1,o),
(324,1,cs),
(363,1,o),
(401,1,o),
(440,1,cs),
(479,0,o),
(517,0,o),
(556,0,cs),
(583,0,o),
(592,0,o),
(592,31,cs),
(592,46,o),
(595,100,o),
(599,167,cs),
(602,241,o),
(605,279,o),
(605,281,cs),
(605,304,o),
(595,319,o),
(574,319,cs),
(546,319,o),
(539,296,o),
(539,276,cs),
(539,247,o),
(530,132,o),
(526,99,cs),
(521,66,o),
(501,65,o),
(466,65,cs),
(154,65,ls),
(146,65,o),
(141,66,o),
(138,67,cs),
(135,68,o),
(134,71,o),
(134,75,cs),
(134,82,o),
(228,223,o),
(305,341,cs),
(383,462,o),
(471,593,o),
(558,738,c),
(555,728,o),
(594,782,o),
(594,802,cs),
(594,821,o),
(569,821,o),
(542,821,cs),
(508,821,o),
(474,821,o),
(440,820,cs),
(406,819,o),
(372,819,o),
(338,819,cs),
(304,819,o),
(270,819,o),
(237,820,cs),
(203,821,o),
(169,821,o),
(135,821,cs),
(65,821,o),
(51,820,o),
(51,780,cs),
(51,765,o),
(51,750,o),
(52,735,cs),
(52,720,o),
(52,705,o),
(52,690,cs),
(52,675,o),
(52,660,o),
(52,646,cs),
(51,631,o),
(51,616,o),
(51,601,cs),
(51,581,o),
(56,555,o),
(87,555,cs),
(98,555,o),
(106,560,o),
(111,569,cs),
(116,578,o),
(118,595,o),
(118,620,cs),
(118,662,o),
(119,663,o),
(119,712,cs),
(119,744,o),
(122,755,o),
(161,755,cs),
(423,755,ls),
(463,755,o),
(471,755,o),
(471,739,cs),
(471,728,o),
(403,612,o),
(271,409,cs),
(194,292,o),
(115,179,o),
(40,61,cs),
(24,35,o),
(19,36,o),
(19,19,cs),
(19,11,o),
(25,6,o),
(38,4,cs),
(50,1,o),
(68,0,o),
(93,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 1 1 3 83 0 3 3 12 67 0 4 4 0 84 0 0 0 13 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 1 1 3 83 0 3 3 14 67 0 4 4 0 84 0 0 0 13 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
105 103 93 89 71 62 51 49 40 36 137 6 16
CALL[ ]	/* CallFunction */";
};
width = 642;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(105,0,o),
(143,0,o),
(182,1,cs),
(220,1,o),
(258,1,o),
(297,1,cs),
(336,1,o),
(374,1,o),
(413,1,cs),
(452,0,o),
(490,0,o),
(529,0,cs),
(556,0,o),
(565,0,o),
(565,31,cs),
(565,46,o),
(568,100,o),
(572,167,cs),
(575,241,o),
(578,279,o),
(578,281,cs),
(578,292,o),
(576,300,o),
(572,304,cs),
(568,307,o),
(564,309,o),
(561,309,cs),
(550,309,o),
(542,296,o),
(542,276,cs),
(542,242,o),
(533,108,o),
(529,69,cs),
(526,36,o),
(504,35,o),
(469,35,cs),
(107,35,ls),
(99,35,o),
(94,36,o),
(91,37,cs),
(88,38,o),
(87,41,o),
(87,45,cs),
(87,51,o),
(185,197,o),
(268,323,cs),
(366,472,o),
(475,642,o),
(531,738,c),
(528,728,o),
(567,782,o),
(567,802,cs),
(567,821,o),
(542,821,o),
(515,821,cs),
(481,821,o),
(447,821,o),
(413,820,cs),
(379,819,o),
(345,819,o),
(311,819,cs),
(277,819,o),
(243,819,o),
(210,820,cs),
(176,821,o),
(142,821,o),
(108,821,cs),
(61,821,o),
(54,820,o),
(54,780,cs),
(54,765,o),
(54,750,o),
(55,735,cs),
(55,720,o),
(55,705,o),
(55,690,cs),
(55,675,o),
(55,660,o),
(55,646,cs),
(54,631,o),
(54,616,o),
(54,601,cs),
(54,581,o),
(57,565,o),
(72,565,cs),
(79,565,o),
(84,568,o),
(87,574,cs),
(90,580,o),
(91,595,o),
(91,620,cs),
(91,659,o),
(92,708,o),
(92,742,cs),
(92,774,o),
(95,785,o),
(134,785,cs),
(454,785,ls),
(494,785,o),
(502,785,o),
(502,769,cs),
(502,753,o),
(431,643,o),
(287,425,cs),
(232,342,o),
(176,259,o),
(132,192,cs),
(82,118,o),
(52,75,o),
(43,61,cs),
(27,35,o),
(22,36,o),
(22,19,cs),
(22,11,o),
(26,6,o),
(33,4,cs),
(40,1,o),
(51,0,o),
(66,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 1 1 3 83 0 3 3 12 67 0 4 4 0 83 0 0 0 13 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 1 1 3 83 0 3 3 14 67 0 4 4 0 83 0 0 0 13 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
105 103 93 89 71 62 51 49 40 36 137 6 16
CALL[ ]	/* CallFunction */";
};
width = 618;
}
);
note = Z;
unicode = 90;
},
{
glyphname = Zacute;
kernLeft = Z;
kernRight = Z;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(162,0,o),
(253,1,o),
(343,1,cs),
(382,1,o),
(420,1,o),
(459,1,cs),
(498,0,o),
(536,0,o),
(575,0,cs),
(604,0,o),
(611,6,o),
(611,31,cs),
(611,66,o),
(613,78,o),
(616,163,cs),
(618,220,o),
(621,257,o),
(621,273,cs),
(621,296,o),
(613,317,o),
(581,317,cs),
(542,317,o),
(539,287,o),
(539,268,cs),
(539,246,o),
(533,150,o),
(529,117,cs),
(526,92,o),
(512,83,o),
(469,83,cs),
(187,83,ls),
(179,83,o),
(174,84,o),
(171,85,cs),
(168,86,o),
(167,89,o),
(167,93,cs),
(167,97,o),
(221,182,o),
(331,352,cs),
(429,503,o),
(511,632,o),
(577,738,c),
(577,739,o),
(611,794,o),
(611,807,cs),
(611,819,o),
(604,821,o),
(589,821,cs),
(518,821,o),
(439,819,o),
(357,819,cs),
(323,819,o),
(289,819,o),
(256,820,cs),
(222,821,o),
(188,821,o),
(154,821,cs),
(61,821,o),
(49,814,o),
(49,780,cs),
(49,765,o),
(49,750,o),
(50,735,cs),
(50,720,o),
(50,705,o),
(50,690,cs),
(50,675,o),
(50,661,o),
(50,649,cs),
(49,636,o),
(49,622,o),
(49,607,cs),
(49,586,o),
(58,555,o),
(95,555,cs),
(126,555,o),
(132,577,o),
(132,626,cs),
(132,651,o),
(133,666,o),
(133,694,cs),
(133,726,o),
(136,737,o),
(175,737,cs),
(419,737,ls),
(458,737,o),
(467,737,o),
(467,721,cs),
(467,710,o),
(400,603,o),
(267,401,cs),
(142,214,o),
(43,68,o),
(38,61,cs),
(31,50,o),
(26,41,o),
(23,36,cs),
(20,30,o),
(19,24,o),
(19,19,cs),
(19,11,o),
(23,6,o),
(30,4,cs),
(37,1,o),
(51,0,o),
(72,0,cs)
);
},
{
closed = 1;
nodes = (
(341,841,o),
(428,897,o),
(428,936,cs),
(428,953,o),
(414,972,o),
(387,972,cs),
(349,972,o),
(273,899,o),
(273,872,cs),
(273,856,o),
(288,841,o),
(308,841,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 1 106 0 0 5 0 106 0 4 3 7 3 4 7 104 0 7 6 3 7 6 102 0 3 3 5 83 0 5 5 12 67 0 6 6 2 84 0 2 2 13 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 1 106 0 0 5 0 106 0 4 3 7 3 4 7 104 0 7 6 3 7 6 102 0 3 3 5 83 0 5 5 14 67 0 6 6 2 84 0 2 2 13 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
123 121 110 107 91 81 67 65 56 52 171 38 36 8 18
CALL[ ]	/* CallFunction */";
};
width = 659;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(132,0,o),
(170,0,o),
(209,1,cs),
(247,1,o),
(285,1,o),
(324,1,cs),
(363,1,o),
(401,1,o),
(440,1,cs),
(479,0,o),
(517,0,o),
(556,0,cs),
(583,0,o),
(592,0,o),
(592,31,cs),
(592,46,o),
(595,100,o),
(599,167,cs),
(602,241,o),
(605,279,o),
(605,281,cs),
(605,304,o),
(595,319,o),
(574,319,cs),
(546,319,o),
(539,296,o),
(539,276,cs),
(539,247,o),
(530,132,o),
(526,99,cs),
(521,66,o),
(501,65,o),
(466,65,cs),
(154,65,ls),
(146,65,o),
(141,66,o),
(138,67,cs),
(135,68,o),
(134,71,o),
(134,75,cs),
(134,82,o),
(228,223,o),
(305,341,cs),
(383,462,o),
(471,593,o),
(558,738,c),
(555,728,o),
(594,782,o),
(594,802,cs),
(594,821,o),
(569,821,o),
(542,821,cs),
(508,821,o),
(474,821,o),
(440,820,cs),
(406,819,o),
(372,819,o),
(338,819,cs),
(304,819,o),
(270,819,o),
(237,820,cs),
(203,821,o),
(169,821,o),
(135,821,cs),
(65,821,o),
(51,820,o),
(51,780,cs),
(51,765,o),
(51,750,o),
(52,735,cs),
(52,720,o),
(52,705,o),
(52,690,cs),
(52,675,o),
(52,660,o),
(52,646,cs),
(51,631,o),
(51,616,o),
(51,601,cs),
(51,581,o),
(56,555,o),
(87,555,cs),
(98,555,o),
(106,560,o),
(111,569,cs),
(116,578,o),
(118,595,o),
(118,620,cs),
(118,662,o),
(119,663,o),
(119,712,cs),
(119,744,o),
(122,755,o),
(161,755,cs),
(423,755,ls),
(463,755,o),
(471,755,o),
(471,739,cs),
(471,728,o),
(403,612,o),
(271,409,cs),
(194,292,o),
(115,179,o),
(40,61,cs),
(24,35,o),
(19,36,o),
(19,19,cs),
(19,11,o),
(25,6,o),
(38,4,cs),
(50,1,o),
(68,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(312,854,o),
(400,908,o),
(400,941,cs),
(400,960,o),
(388,972,o),
(368,972,cs),
(339,972,o),
(262,904,o),
(262,877,cs),
(262,864,o),
(271,854,o),
(286,854,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 1 106 0 0 5 0 106 0 4 3 7 3 4 7 104 0 7 6 3 7 6 102 0 3 3 5 83 0 5 5 12 67 0 6 6 2 84 0 2 2 13 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 1 106 0 0 5 0 106 0 4 3 7 3 4 7 104 0 7 6 3 7 6 102 0 3 3 5 83 0 5 5 14 67 0 6 6 2 84 0 2 2 13 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
121 119 109 105 87 78 67 65 56 52 139 38 36 8 18
CALL[ ]	/* CallFunction */";
};
width = 642;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(105,0,o),
(143,0,o),
(182,1,cs),
(220,1,o),
(258,1,o),
(297,1,cs),
(336,1,o),
(374,1,o),
(413,1,cs),
(452,0,o),
(490,0,o),
(529,0,cs),
(556,0,o),
(565,0,o),
(565,31,cs),
(565,46,o),
(568,100,o),
(572,167,cs),
(575,241,o),
(578,279,o),
(578,281,cs),
(578,292,o),
(576,300,o),
(572,304,cs),
(568,307,o),
(564,309,o),
(561,309,cs),
(550,309,o),
(542,296,o),
(542,276,cs),
(542,242,o),
(533,108,o),
(529,69,cs),
(526,36,o),
(504,35,o),
(469,35,cs),
(107,35,ls),
(99,35,o),
(94,36,o),
(91,37,cs),
(88,38,o),
(87,41,o),
(87,45,cs),
(87,51,o),
(185,197,o),
(268,323,cs),
(366,472,o),
(475,642,o),
(531,738,c),
(528,728,o),
(567,782,o),
(567,802,cs),
(567,821,o),
(542,821,o),
(515,821,cs),
(481,821,o),
(447,821,o),
(413,820,cs),
(379,819,o),
(345,819,o),
(311,819,cs),
(277,819,o),
(243,819,o),
(210,820,cs),
(176,821,o),
(142,821,o),
(108,821,cs),
(61,821,o),
(54,820,o),
(54,780,cs),
(54,765,o),
(54,750,o),
(55,735,cs),
(55,720,o),
(55,705,o),
(55,690,cs),
(55,675,o),
(55,660,o),
(55,646,cs),
(54,631,o),
(54,616,o),
(54,601,cs),
(54,581,o),
(57,565,o),
(72,565,cs),
(79,565,o),
(84,568,o),
(87,574,cs),
(90,580,o),
(91,595,o),
(91,620,cs),
(91,659,o),
(92,708,o),
(92,742,cs),
(92,774,o),
(95,785,o),
(134,785,cs),
(454,785,ls),
(494,785,o),
(502,785,o),
(502,769,cs),
(502,753,o),
(431,643,o),
(287,425,cs),
(232,342,o),
(176,259,o),
(132,192,cs),
(82,118,o),
(52,75,o),
(43,61,cs),
(27,35,o),
(22,36,o),
(22,19,cs),
(22,11,o),
(26,6,o),
(33,4,cs),
(40,1,o),
(51,0,o),
(66,0,cs)
);
},
{
closed = 1;
nodes = (
(270,875,o),
(360,928,o),
(360,950,cs),
(360,969,o),
(352,972,o),
(341,972,cs),
(321,972,o),
(246,911,o),
(246,886,cs),
(246,879,o),
(249,875,o),
(254,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 1 106 0 0 5 0 106 0 4 3 7 3 4 7 104 0 7 6 3 7 6 102 0 3 3 5 83 0 5 5 12 67 0 6 6 2 83 0 2 2 13 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 1 106 0 0 5 0 106 0 4 3 7 3 4 7 104 0 7 6 3 7 6 102 0 3 3 5 83 0 5 5 14 67 0 6 6 2 83 0 2 2 13 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
120 118 108 104 86 77 66 64 55 51 139 37 36 8 18
CALL[ ]	/* CallFunction */";
};
width = 618;
}
);
note = Zacute;
unicode = 377;
},
{
glyphname = Zcaron;
kernLeft = Z;
kernRight = Z;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(162,0,o),
(253,1,o),
(343,1,cs),
(382,1,o),
(420,1,o),
(459,1,cs),
(498,0,o),
(536,0,o),
(575,0,cs),
(604,0,o),
(611,6,o),
(611,31,cs),
(611,66,o),
(613,78,o),
(616,163,cs),
(618,220,o),
(621,257,o),
(621,273,cs),
(621,296,o),
(613,317,o),
(581,317,cs),
(542,317,o),
(539,287,o),
(539,268,cs),
(539,246,o),
(533,150,o),
(529,117,cs),
(526,92,o),
(512,83,o),
(469,83,cs),
(187,83,ls),
(179,83,o),
(174,84,o),
(171,85,cs),
(168,86,o),
(167,89,o),
(167,93,cs),
(167,97,o),
(221,182,o),
(331,352,cs),
(429,503,o),
(511,632,o),
(577,738,c),
(577,739,o),
(611,794,o),
(611,807,cs),
(611,819,o),
(604,821,o),
(589,821,cs),
(518,821,o),
(439,819,o),
(357,819,cs),
(323,819,o),
(289,819,o),
(256,820,cs),
(222,821,o),
(188,821,o),
(154,821,cs),
(61,821,o),
(49,814,o),
(49,780,cs),
(49,765,o),
(49,750,o),
(50,735,cs),
(50,720,o),
(50,705,o),
(50,690,cs),
(50,675,o),
(50,661,o),
(50,649,cs),
(49,636,o),
(49,622,o),
(49,607,cs),
(49,586,o),
(58,555,o),
(95,555,cs),
(126,555,o),
(132,577,o),
(132,626,cs),
(132,651,o),
(133,666,o),
(133,694,cs),
(133,726,o),
(136,737,o),
(175,737,cs),
(419,737,ls),
(458,737,o),
(467,737,o),
(467,721,cs),
(467,710,o),
(400,603,o),
(267,401,cs),
(142,214,o),
(43,68,o),
(38,61,cs),
(31,50,o),
(26,41,o),
(23,36,cs),
(20,30,o),
(19,24,o),
(19,19,cs),
(19,11,o),
(23,6,o),
(30,4,cs),
(37,1,o),
(51,0,o),
(72,0,cs)
);
},
{
closed = 1;
nodes = (
(364,830,o),
(474,909,o),
(474,951,cs),
(474,960,o),
(472,972,o),
(461,972,cs),
(455,972,o),
(400,960,o),
(341,922,c),
(301,948,o),
(239,972,o),
(222,972,cs),
(213,972,o),
(209,965,o),
(209,958,cs),
(209,931,o),
(237,901,o),
(268,875,cs),
(295,852,o),
(330,830,o),
(341,830,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
2 9 2 0 1 0 106 0 1 6 1 106 0 5 4 8 4 5 8 104 0 8 7 4 8 7 102 0 4 4 6 83 0 6 6 12 67 0 7 7 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
2 9 2 0 1 0 106 0 1 6 1 106 0 5 4 8 4 5 8 104 0 8 7 4 8 7 102 0 4 4 6 83 0 6 6 14 67 0 7 7 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
1 0 133 131 120 117 101 91 77 75 66 62 45 35 17 15 9 7 0 25 1 25 10 15
CALL[ ]	/* CallFunction */";
};
width = 659;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(132,0,o),
(170,0,o),
(209,1,cs),
(247,1,o),
(285,1,o),
(324,1,cs),
(363,1,o),
(401,1,o),
(440,1,cs),
(479,0,o),
(517,0,o),
(556,0,cs),
(583,0,o),
(592,0,o),
(592,31,cs),
(592,46,o),
(595,100,o),
(599,167,cs),
(602,241,o),
(605,279,o),
(605,281,cs),
(605,304,o),
(595,319,o),
(574,319,cs),
(546,319,o),
(539,296,o),
(539,276,cs),
(539,247,o),
(530,132,o),
(526,99,cs),
(521,66,o),
(501,65,o),
(466,65,cs),
(154,65,ls),
(146,65,o),
(141,66,o),
(138,67,cs),
(135,68,o),
(134,71,o),
(134,75,cs),
(134,82,o),
(228,223,o),
(305,341,cs),
(383,462,o),
(471,593,o),
(558,738,c),
(555,728,o),
(594,782,o),
(594,802,cs),
(594,821,o),
(569,821,o),
(542,821,cs),
(508,821,o),
(474,821,o),
(440,820,cs),
(406,819,o),
(372,819,o),
(338,819,cs),
(304,819,o),
(270,819,o),
(237,820,cs),
(203,821,o),
(169,821,o),
(135,821,cs),
(65,821,o),
(51,820,o),
(51,780,cs),
(51,765,o),
(51,750,o),
(52,735,cs),
(52,720,o),
(52,705,o),
(52,690,cs),
(52,675,o),
(52,660,o),
(52,646,cs),
(51,631,o),
(51,616,o),
(51,601,cs),
(51,581,o),
(56,555,o),
(87,555,cs),
(98,555,o),
(106,560,o),
(111,569,cs),
(116,578,o),
(118,595,o),
(118,620,cs),
(118,662,o),
(119,663,o),
(119,712,cs),
(119,744,o),
(122,755,o),
(161,755,cs),
(423,755,ls),
(463,755,o),
(471,755,o),
(471,739,cs),
(471,728,o),
(403,612,o),
(271,409,cs),
(194,292,o),
(115,179,o),
(40,61,cs),
(24,35,o),
(19,36,o),
(19,19,cs),
(19,11,o),
(25,6,o),
(38,4,cs),
(50,1,o),
(68,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(349,847,o),
(455,919,o),
(455,955,cs),
(455,964,o),
(452,972,o),
(444,972,cs),
(436,972,o),
(388,959,o),
(324,921,c),
(284,945,o),
(223,972,o),
(205,972,cs),
(198,972,o),
(194,968,o),
(194,959,cs),
(194,918,o),
(302,847,o),
(324,847,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
2 9 2 0 1 0 106 0 1 6 1 106 0 5 4 8 4 5 8 104 0 8 7 4 8 7 102 0 4 4 6 83 0 6 6 12 67 0 7 7 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
2 9 2 0 1 0 106 0 1 6 1 106 0 5 4 8 4 5 8 104 0 8 7 4 8 7 102 0 4 4 6 83 0 6 6 14 67 0 7 7 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
1 0 130 128 118 114 96 87 76 74 65 61 42 34 16 14 9 7 0 24 1 24 10 15
CALL[ ]	/* CallFunction */";
};
width = 642;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(105,0,o),
(143,0,o),
(182,1,cs),
(220,1,o),
(258,1,o),
(297,1,cs),
(336,1,o),
(374,1,o),
(413,1,cs),
(452,0,o),
(490,0,o),
(529,0,cs),
(556,0,o),
(565,0,o),
(565,31,cs),
(565,46,o),
(568,100,o),
(572,167,cs),
(575,241,o),
(578,279,o),
(578,281,cs),
(578,292,o),
(576,300,o),
(572,304,cs),
(568,307,o),
(564,309,o),
(561,309,cs),
(550,309,o),
(542,296,o),
(542,276,cs),
(542,242,o),
(533,108,o),
(529,69,cs),
(526,36,o),
(504,35,o),
(469,35,cs),
(107,35,ls),
(99,35,o),
(94,36,o),
(91,37,cs),
(88,38,o),
(87,41,o),
(87,45,cs),
(87,51,o),
(185,197,o),
(268,323,cs),
(366,472,o),
(475,642,o),
(531,738,c),
(528,728,o),
(567,782,o),
(567,802,cs),
(567,821,o),
(542,821,o),
(515,821,cs),
(481,821,o),
(447,821,o),
(413,820,cs),
(379,819,o),
(345,819,o),
(311,819,cs),
(277,819,o),
(243,819,o),
(210,820,cs),
(176,821,o),
(142,821,o),
(108,821,cs),
(61,821,o),
(54,820,o),
(54,780,cs),
(54,765,o),
(54,750,o),
(55,735,cs),
(55,720,o),
(55,705,o),
(55,690,cs),
(55,675,o),
(55,660,o),
(55,646,cs),
(54,631,o),
(54,616,o),
(54,601,cs),
(54,581,o),
(57,565,o),
(72,565,cs),
(79,565,o),
(84,568,o),
(87,574,cs),
(90,580,o),
(91,595,o),
(91,620,cs),
(91,659,o),
(92,708,o),
(92,742,cs),
(92,774,o),
(95,785,o),
(134,785,cs),
(454,785,ls),
(494,785,o),
(502,785,o),
(502,769,cs),
(502,753,o),
(431,643,o),
(287,425,cs),
(232,342,o),
(176,259,o),
(132,192,cs),
(82,118,o),
(52,75,o),
(43,61,cs),
(27,35,o),
(22,36,o),
(22,19,cs),
(22,11,o),
(26,6,o),
(33,4,cs),
(40,1,o),
(51,0,o),
(66,0,cs)
);
},
{
closed = 1;
nodes = (
(323,876,o),
(428,936,o),
(428,961,cs),
(428,968,o),
(425,972,o),
(420,972,cs),
(413,972,o),
(365,954,o),
(300,920,c),
(263,940,o),
(194,972,o),
(181,972,cs),
(176,972,o),
(173,968,o),
(173,961,cs),
(173,937,o),
(276,876,o),
(300,876,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
19 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
2 9 2 0 1 0 106 0 1 6 1 106 0 5 4 8 4 5 8 104 0 8 7 4 8 7 102 0 4 4 6 83 0 6 6 12 67 0 7 7 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
2 9 2 0 1 0 106 0 1 6 1 106 0 5 4 8 4 5 8 104 0 8 7 4 8 7 102 0 4 4 6 83 0 6 6 14 67 0 7 7 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
1 0 129 127 117 113 95 86 75 73 64 60 41 33 15 13 8 6 0 23 1 23 10 15
CALL[ ]	/* CallFunction */";
};
width = 618;
}
);
note = Zcaron;
unicode = 381;
},
{
glyphname = Zdotaccent;
kernLeft = Z;
kernRight = Z;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(162,0,o),
(253,1,o),
(343,1,cs),
(382,1,o),
(420,1,o),
(459,1,cs),
(498,0,o),
(536,0,o),
(575,0,cs),
(604,0,o),
(611,6,o),
(611,31,cs),
(611,66,o),
(613,78,o),
(616,163,cs),
(618,220,o),
(621,257,o),
(621,273,cs),
(621,296,o),
(613,317,o),
(581,317,cs),
(542,317,o),
(539,287,o),
(539,268,cs),
(539,246,o),
(533,150,o),
(529,117,cs),
(526,92,o),
(512,83,o),
(469,83,cs),
(187,83,ls),
(179,83,o),
(174,84,o),
(171,85,cs),
(168,86,o),
(167,89,o),
(167,93,cs),
(167,97,o),
(221,182,o),
(331,352,cs),
(429,503,o),
(511,632,o),
(577,738,c),
(577,739,o),
(611,794,o),
(611,807,cs),
(611,819,o),
(604,821,o),
(589,821,cs),
(518,821,o),
(439,819,o),
(357,819,cs),
(323,819,o),
(289,819,o),
(256,820,cs),
(222,821,o),
(188,821,o),
(154,821,cs),
(61,821,o),
(49,814,o),
(49,780,cs),
(49,765,o),
(49,750,o),
(50,735,cs),
(50,720,o),
(50,705,o),
(50,690,cs),
(50,675,o),
(50,661,o),
(50,649,cs),
(49,636,o),
(49,622,o),
(49,607,cs),
(49,586,o),
(58,555,o),
(95,555,cs),
(126,555,o),
(132,577,o),
(132,626,cs),
(132,651,o),
(133,666,o),
(133,694,cs),
(133,726,o),
(136,737,o),
(175,737,cs),
(419,737,ls),
(458,737,o),
(467,737,o),
(467,721,cs),
(467,710,o),
(400,603,o),
(267,401,cs),
(142,214,o),
(43,68,o),
(38,61,cs),
(31,50,o),
(26,41,o),
(23,36,cs),
(20,30,o),
(19,24,o),
(19,19,cs),
(19,11,o),
(23,6,o),
(30,4,cs),
(37,1,o),
(51,0,o),
(72,0,cs)
);
},
{
closed = 1;
nodes = (
(381,840,o),
(418,855,o),
(418,910,cs),
(418,946,o),
(390,971,o),
(358,971,cs),
(310,971,o),
(292,933,o),
(292,906,cs),
(292,863,o),
(318,840,o),
(351,840,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 6 0 7 3 6 7 91 0 1 1 3 83 0 3 3 12 67 0 4 4 0 84 0 0 0 13 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 6 0 7 3 6 7 91 0 1 1 3 83 0 3 3 14 67 0 4 4 0 84 0 0 0 13 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
123 121 115 113 107 105 94 91 75 65 51 49 40 36 169 8 16
CALL[ ]	/* CallFunction */";
};
width = 659;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(132,0,o),
(170,0,o),
(209,1,cs),
(247,1,o),
(285,1,o),
(324,1,cs),
(363,1,o),
(401,1,o),
(440,1,cs),
(479,0,o),
(517,0,o),
(556,0,cs),
(583,0,o),
(592,0,o),
(592,31,cs),
(592,46,o),
(595,100,o),
(599,167,cs),
(602,241,o),
(605,279,o),
(605,281,cs),
(605,304,o),
(595,319,o),
(574,319,cs),
(546,319,o),
(539,296,o),
(539,276,cs),
(539,247,o),
(530,132,o),
(526,99,cs),
(521,66,o),
(501,65,o),
(466,65,cs),
(154,65,ls),
(146,65,o),
(141,66,o),
(138,67,cs),
(135,68,o),
(134,71,o),
(134,75,cs),
(134,82,o),
(228,223,o),
(305,341,cs),
(383,462,o),
(471,593,o),
(558,738,c),
(555,728,o),
(594,782,o),
(594,802,cs),
(594,821,o),
(569,821,o),
(542,821,cs),
(508,821,o),
(474,821,o),
(440,820,cs),
(406,819,o),
(372,819,o),
(338,819,cs),
(304,819,o),
(270,819,o),
(237,820,cs),
(203,821,o),
(169,821,o),
(135,821,cs),
(65,821,o),
(51,820,o),
(51,780,cs),
(51,765,o),
(51,750,o),
(52,735,cs),
(52,720,o),
(52,705,o),
(52,690,cs),
(52,675,o),
(52,660,o),
(52,646,cs),
(51,631,o),
(51,616,o),
(51,601,cs),
(51,581,o),
(56,555,o),
(87,555,cs),
(98,555,o),
(106,560,o),
(111,569,cs),
(116,578,o),
(118,595,o),
(118,620,cs),
(118,662,o),
(119,663,o),
(119,712,cs),
(119,744,o),
(122,755,o),
(161,755,cs),
(423,755,ls),
(463,755,o),
(471,755,o),
(471,739,cs),
(471,728,o),
(403,612,o),
(271,409,cs),
(194,292,o),
(115,179,o),
(40,61,cs),
(24,35,o),
(19,36,o),
(19,19,cs),
(19,11,o),
(25,6,o),
(38,4,cs),
(50,1,o),
(68,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(356,859,o),
(387,872,o),
(387,920,cs),
(387,951,o),
(365,972,o),
(338,972,cs),
(296,972,o),
(282,936,o),
(282,916,cs),
(282,880,o),
(304,859,o),
(331,859,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 6 0 7 3 6 7 91 0 1 1 3 83 0 3 3 12 67 0 4 4 0 84 0 0 0 13 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 6 0 7 3 6 7 91 0 1 1 3 83 0 3 3 14 67 0 4 4 0 84 0 0 0 13 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
120 118 114 112 106 104 94 90 72 63 52 50 41 37 138 8 27
CALL[ ]	/* CallFunction */";
};
width = 642;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(105,0,o),
(143,0,o),
(182,1,cs),
(220,1,o),
(258,1,o),
(297,1,cs),
(336,1,o),
(374,1,o),
(413,1,cs),
(452,0,o),
(490,0,o),
(529,0,cs),
(556,0,o),
(565,0,o),
(565,31,cs),
(565,46,o),
(568,100,o),
(572,167,cs),
(575,241,o),
(578,279,o),
(578,281,cs),
(578,292,o),
(576,300,o),
(572,304,cs),
(568,307,o),
(564,309,o),
(561,309,cs),
(550,309,o),
(542,296,o),
(542,276,cs),
(542,242,o),
(533,108,o),
(529,69,cs),
(526,36,o),
(504,35,o),
(469,35,cs),
(107,35,ls),
(99,35,o),
(94,36,o),
(91,37,cs),
(88,38,o),
(87,41,o),
(87,45,cs),
(87,51,o),
(185,197,o),
(268,323,cs),
(366,472,o),
(475,642,o),
(531,738,c),
(528,728,o),
(567,782,o),
(567,802,cs),
(567,821,o),
(542,821,o),
(515,821,cs),
(481,821,o),
(447,821,o),
(413,820,cs),
(379,819,o),
(345,819,o),
(311,819,cs),
(277,819,o),
(243,819,o),
(210,820,cs),
(176,821,o),
(142,821,o),
(108,821,cs),
(61,821,o),
(54,820,o),
(54,780,cs),
(54,765,o),
(54,750,o),
(55,735,cs),
(55,720,o),
(55,705,o),
(55,690,cs),
(55,675,o),
(55,660,o),
(55,646,cs),
(54,631,o),
(54,616,o),
(54,601,cs),
(54,581,o),
(57,565,o),
(72,565,cs),
(79,565,o),
(84,568,o),
(87,574,cs),
(90,580,o),
(91,595,o),
(91,620,cs),
(91,659,o),
(92,708,o),
(92,742,cs),
(92,774,o),
(95,785,o),
(134,785,cs),
(454,785,ls),
(494,785,o),
(502,785,o),
(502,769,cs),
(502,753,o),
(431,643,o),
(287,425,cs),
(232,342,o),
(176,259,o),
(132,192,cs),
(82,118,o),
(52,75,o),
(43,61,cs),
(27,35,o),
(22,36,o),
(22,19,cs),
(22,11,o),
(26,6,o),
(33,4,cs),
(40,1,o),
(51,0,o),
(66,0,cs)
);
},
{
closed = 1;
nodes = (
(322,889,o),
(344,899,o),
(344,935,cs),
(344,958,o),
(329,972,o),
(310,972,cs),
(282,972,o),
(269,945,o),
(269,931,cs),
(269,907,o),
(284,889,o),
(303,889,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 6 0 7 3 6 7 91 0 1 1 3 83 0 3 3 12 67 0 4 4 0 83 0 0 0 13 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 6 0 7 3 6 7 91 0 1 1 3 83 0 3 3 14 67 0 4 4 0 83 0 0 0 13 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
119 117 113 111 105 103 93 89 71 62 51 49 40 36 137 8 16
CALL[ ]	/* CallFunction */";
};
width = 618;
}
);
note = Zdotaccent;
unicode = 379;
},
{
glyphname = K.salt;
kernLeft = B;
kernRight = K.salt;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(698,-47,o),
(747,-27,o),
(747,50,cs),
(747,65,o),
(741,93,o),
(707,93,cs),
(672,93,o),
(661,73,o),
(661,54,cs),
(661,39,o),
(659,31,o),
(643,31,cs),
(601,31,o),
(607,162,o),
(600,220,cs),
(595,254,o),
(590,301,o),
(551,351,cs),
(512,400,o),
(436,436,o),
(327,436,c),
(454,565,o),
(538,650,o),
(609,717,cs),
(630,735,o),
(725,735,o),
(762,738,cs),
(777,739,o),
(782,751,o),
(782,766,cs),
(782,787,o),
(771,795,o),
(759,795,cs),
(485,795,ls),
(458,795,o),
(451,776,o),
(451,764,cs),
(451,749,o),
(457,734,o),
(477,734,cs),
(481,734,o),
(488,733,o),
(488,722,cs),
(488,708,o),
(447,662,o),
(388,603,cs),
(351,565,o),
(269,483,o),
(229,439,c),
(229,728,l),
(229,728,l),
(229,753,o),
(263,759,o),
(307,759,cs),
(323,759,o),
(344,766,o),
(344,790,cs),
(344,797,o),
(341,804,o),
(335,811,cs),
(328,818,o),
(314,821,o),
(293,821,cs),
(87,821,ls),
(75,821,o),
(50,817,o),
(50,790,cs),
(50,761,o),
(73,759,o),
(98,759,cs),
(129,759,o),
(134,741,o),
(134,666,cs),
(134,644,o),
(134,602,o),
(136,527,cs),
(137,453,o),
(137,413,o),
(137,404,cs),
(137,376,o),
(135,224,o),
(132,104,cs),
(131,67,o),
(124,60,o),
(92,60,cs),
(55,60,o),
(47,52,o),
(47,29,cs),
(47,6,o),
(76,0,o),
(107,0,cs),
(124,0,o),
(142,0,o),
(161,1,cs),
(180,2,o),
(198,2,o),
(215,2,cs),
(252,2,o),
(291,0,o),
(318,0,cs),
(342,0,o),
(363,4,o),
(363,27,cs),
(363,55,o),
(345,62,o),
(320,62,cs),
(229,62,l),
(229,335,l),
(261,369,l),
(440,361,o),
(501,298,o),
(509,220,cs),
(523,111,o),
(496,-47,o),
(658,-47,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
117 58 1 40
CALL[ ]	/* CallFunction */";
};
width = 780;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(683,-47,o),
(729,-30,o),
(729,50,cs),
(729,63,o),
(724,88,o),
(698,88,cs),
(671,88,o),
(664,67,o),
(664,54,cs),
(663,27,o),
(659,13,o),
(635,13,cs),
(581,13,o),
(589,159,o),
(582,220,cs),
(578,255,o),
(572,300,o),
(533,351,cs),
(494,399,o),
(420,434,o),
(309,436,c),
(437,567,o),
(528,658,o),
(603,729,cs),
(619,744,o),
(675,747,o),
(742,750,cs),
(757,751,o),
(762,765,o),
(762,772,cs),
(762,781,o),
(751,795,o),
(739,795,cs),
(472,795,ls),
(459,795,o),
(450,792,o),
(445,785,cs),
(440,778,o),
(438,773,o),
(438,770,cs),
(438,755,o),
(451,746,o),
(472,746,cs),
(483,746,o),
(503,746,o),
(503,734,cs),
(503,720,o),
(432,643,o),
(389,600,cs),
(333,544,o),
(267,477,o),
(211,421,c),
(211,746,l),
(211,746,l),
(211,770,o),
(267,771,o),
(286,771,cs),
(302,771,o),
(323,776,o),
(323,796,cs),
(323,801,o),
(320,807,o),
(314,813,cs),
(307,818,o),
(293,821,o),
(272,821,cs),
(76,821,ls),
(64,821,o),
(39,817,o),
(39,796,cs),
(39,773,o),
(62,771,o),
(87,771,cs),
(132,771,o),
(137,764,o),
(137,678,cs),
(137,645,o),
(140,554,o),
(140,404,cs),
(140,385,o),
(140,281,o),
(135,92,cs),
(135,50,o),
(114,48,o),
(74,48,cs),
(45,48,o),
(36,42,o),
(36,23,cs),
(36,4,o),
(64,0,o),
(89,0,cs),
(106,0,o),
(124,0,o),
(143,1,cs),
(162,2,o),
(180,2,o),
(197,2,cs),
(234,2,o),
(273,0,o),
(300,0,cs),
(325,0,o),
(338,7,o),
(338,21,cs),
(338,48,o),
(317,50,o),
(302,50,cs),
(211,50,l),
(211,335,l),
(257,382,l),
(357,378,o),
(419,357,o),
(456,327,cs),
(493,297,o),
(508,257,o),
(512,220,cs),
(518,169,o),
(515,106,o),
(528,48,cs),
(540,-6,o),
(574,-47,o),
(647,-47,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
116 56 1 40
CALL[ ]	/* CallFunction */";
};
width = 763;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(657,-47,o),
(703,-30,o),
(703,50,cs),
(703,62,o),
(702,79,o),
(685,79,cs),
(670,79,o),
(669,67,o),
(668,54,cs),
(665,7,o),
(650,-17,o),
(623,-17,cs),
(551,-17,o),
(562,158,o),
(556,220,cs),
(552,255,o),
(546,300,o),
(507,351,cs),
(468,399,o),
(394,434,o),
(283,436,c),
(412,568,o),
(520,678,o),
(595,749,cs),
(603,756,o),
(617,761,o),
(636,764,cs),
(655,767,o),
(681,769,o),
(714,770,cs),
(727,771,o),
(734,775,o),
(734,782,cs),
(734,791,o),
(723,795,o),
(711,795,cs),
(454,795,ls),
(441,795,o),
(432,793,o),
(427,790,cs),
(422,787,o),
(420,783,o),
(420,780,cs),
(420,765,o),
(443,766,o),
(454,766,cs),
(474,766,o),
(525,765,o),
(525,754,cs),
(525,741,o),
(469,678,o),
(390,595,cs),
(313,514,o),
(221,424,o),
(185,391,c),
(185,766,ls),
(185,790,o),
(238,791,o),
(256,791,cs),
(272,791,o),
(293,791,o),
(293,806,cs),
(293,811,o),
(290,815,o),
(284,818,cs),
(277,820,o),
(263,821,o),
(242,821,cs),
(60,821,ls),
(48,821,o),
(23,821,o),
(23,806,cs),
(23,799,o),
(28,795,o),
(38,794,cs),
(47,792,o),
(58,791,o),
(71,791,cs),
(146,791,o),
(141,783,o),
(141,698,cs),
(141,672,o),
(141,624,o),
(143,542,cs),
(144,460,o),
(144,415,o),
(144,404,cs),
(144,385,o),
(144,274,o),
(139,72,cs),
(139,30,o),
(109,28,o),
(48,28,cs),
(29,28,o),
(20,23,o),
(20,13,cs),
(20,0,o),
(46,0,o),
(63,0,cs),
(80,0,o),
(98,0,o),
(117,1,cs),
(136,2,o),
(154,2,o),
(171,2,cs),
(208,2,o),
(247,0,o),
(274,0,cs),
(286,0,o),
(294,1,o),
(297,3,cs),
(300,4,o),
(302,7,o),
(302,11,cs),
(302,24,o),
(291,30,o),
(276,30,cs),
(185,30,l),
(185,335,l),
(251,403,l),
(364,399,o),
(428,373,o),
(465,338,cs),
(502,302,o),
(512,257,o),
(516,220,cs),
(522,171,o),
(518,108,o),
(529,48,cs),
(539,-8,o),
(565,-47,o),
(621,-47,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
116 54 1 40
CALL[ ]	/* CallFunction */";
};
width = 739;
}
);
note = K.salt;
},
{
glyphname = R.salt;
kernLeft = B;
kernRight = R.salt;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(664,-96,o),
(708,-73,o),
(708,2,cs),
(708,21,o),
(701,46,o),
(673,46,cs),
(647,46,o),
(640,21,o),
(640,11,cs),
(639,0,o),
(629,-18,o),
(613,-18,cs),
(556,-18,o),
(569,107,o),
(561,191,cs),
(548,325,o),
(484,357,o),
(421,384,c),
(542,405,o),
(637,469,o),
(637,602,cs),
(637,775,o),
(474,821,o),
(305,821,cs),
(288,821,o),
(189,818,o),
(131,818,cs),
(94,818,o),
(56,813,o),
(56,788,cs),
(56,758,o),
(91,751,o),
(105,751,cs),
(126,751,o),
(133,744,o),
(134,709,cs),
(134,697,o),
(140,513,o),
(140,412,cs),
(140,405,o),
(139,359,o),
(138,273,cs),
(136,185,o),
(135,129,o),
(135,104,cs),
(134,65,o),
(126,60,o),
(95,60,cs),
(72,60,o),
(50,53,o),
(50,29,cs),
(50,6,o),
(87,0,o),
(110,0,cs),
(127,0,o),
(145,0,o),
(164,1,cs),
(183,2,o),
(201,2,o),
(218,2,cs),
(255,2,o),
(294,0,o),
(321,0,cs),
(345,0,o),
(357,13,o),
(357,32,cs),
(357,55,o),
(338,62,o),
(323,62,cs),
(232,62,l),
(232,349,l),
(332,349,o),
(389,326,o),
(422,294,cs),
(454,262,o),
(462,223,o),
(465,191,cs),
(467,141,o),
(463,74,o),
(479,10,cs),
(491,-38,o),
(526,-96,o),
(625,-96,cs)
);
},
{
closed = 1;
nodes = (
(272,432,o),
(258,434,o),
(232,434,c),
(232,732,l),
(253,735,ls),
(268,738,o),
(287,739,o),
(311,739,cs),
(387,739,o),
(541,719,o),
(541,597,cs),
(541,452,o),
(381,432,o),
(274,432,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
117 107 97 30 2 40
CALL[ ]	/* CallFunction */";
};
width = 718;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(646,-96,o),
(688,-76,o),
(688,2,cs),
(688,11,o),
(687,40,o),
(660,40,cs),
(637,40,o),
(634,18,o),
(634,11,cs),
(633,-6,o),
(623,-36,o),
(599,-36,cs),
(531,-36,o),
(547,131,o),
(541,191,cs),
(531,324,o),
(459,359,o),
(401,384,c),
(522,405,o),
(617,469,o),
(617,602,cs),
(617,775,o),
(454,821,o),
(285,821,cs),
(268,821,o),
(169,818,o),
(111,818,cs),
(76,818,o),
(43,817,o),
(43,794,cs),
(43,771,o),
(76,765,o),
(85,765,cs),
(121,765,o),
(134,763,o),
(135,723,cs),
(135,708,o),
(141,519,o),
(141,412,cs),
(141,403,o),
(140,355,o),
(139,268,cs),
(137,177,o),
(136,119,o),
(136,92,cs),
(136,50,o),
(114,48,o),
(75,48,cs),
(58,48,o),
(37,44,o),
(37,23,cs),
(37,1,o),
(77,0,o),
(90,0,cs),
(107,0,o),
(125,0,o),
(144,1,cs),
(163,2,o),
(181,2,o),
(198,2,cs),
(235,2,o),
(274,0,o),
(301,0,cs),
(325,0,o),
(334,9,o),
(334,24,cs),
(334,43,o),
(318,50,o),
(303,50,cs),
(212,50,l),
(212,358,l),
(425,358,o),
(461,263,o),
(466,191,cs),
(470,135,o),
(465,77,o),
(480,9,cs),
(493,-53,o),
(530,-96,o),
(605,-96,cs)
);
},
{
closed = 1;
nodes = (
(252,423,o),
(238,425,o),
(212,425,c),
(212,750,l),
(233,753,ls),
(248,756,o),
(267,757,o),
(291,757,cs),
(325,757,o),
(387,753,o),
(443,732,cs),
(499,710,o),
(542,665,o),
(542,597,cs),
(542,445,o),
(373,423,o),
(254,423,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
121 111 99 30 2 40
CALL[ ]	/* CallFunction */";
};
width = 700;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(618,-96,o),
(660,-76,o),
(660,2,cs),
(660,14,o),
(659,30,o),
(642,30,cs),
(627,30,o),
(626,18,o),
(626,11,cs),
(624,-16,o),
(621,-66,o),
(579,-66,cs),
(543,-66,o),
(524,-24,o),
(520,30,cs),
(514,93,o),
(516,153,o),
(513,191,cs),
(503,324,o),
(431,359,o),
(373,384,c),
(494,405,o),
(589,469,o),
(589,602,cs),
(589,775,o),
(426,821,o),
(257,821,cs),
(240,821,o),
(141,818,o),
(83,818,cs),
(66,818,o),
(52,817,o),
(41,816,cs),
(30,815,o),
(25,811,o),
(25,804,cs),
(25,789,o),
(48,789,o),
(57,789,cs),
(115,789,o),
(137,786,o),
(137,747,cs),
(137,734,o),
(143,530,o),
(143,412,cs),
(143,403,o),
(142,352,o),
(141,259,cs),
(139,163,o),
(138,101,o),
(138,72,cs),
(138,30,o),
(105,28,o),
(47,28,cs),
(28,28,o),
(19,23,o),
(19,13,cs),
(19,0,o),
(45,0,o),
(62,0,cs),
(79,0,o),
(97,0,o),
(116,1,cs),
(135,2,o),
(153,2,o),
(170,2,cs),
(207,2,o),
(246,0,o),
(273,0,cs),
(285,0,o),
(293,1,o),
(296,3,cs),
(299,4,o),
(301,7,o),
(301,11,cs),
(301,24,o),
(290,30,o),
(275,30,cs),
(184,30,l),
(184,373,l),
(424,373,o),
(460,268,o),
(468,191,cs),
(474,140,o),
(469,73,o),
(480,9,cs),
(490,-53,o),
(517,-96,o),
(577,-96,cs)
);
},
{
closed = 1;
nodes = (
(224,408,o),
(210,410,o),
(184,410,c),
(184,780,l),
(205,783,ls),
(220,786,o),
(239,787,o),
(263,787,cs),
(305,787,o),
(366,783,o),
(432,757,cs),
(493,732,o),
(544,682,o),
(544,597,cs),
(544,518,o),
(500,468,o),
(434,441,cs),
(367,414,o),
(292,408,o),
(226,408,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
120 110 98 32 2 40
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = R.salt;
},
{
glyphname = a;
kernLeft = a;
kernRight = a;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(240,-11,o),
(292,9,o),
(335,48,c),
(348,1,o),
(379,-11,o),
(414,-11,cs),
(462,-11,o),
(498,14,o),
(498,69,cs),
(498,100,o),
(486,108,o),
(466,108,cs),
(439,108,o),
(438,94,o),
(437,79,cs),
(437,72,o),
(435,67,o),
(428,67,cs),
(423,67,o),
(421,70,o),
(420,77,cs),
(419,84,o),
(419,99,o),
(419,124,cs),
(419,163,o),
(423,230,o),
(423,269,cs),
(423,394,o),
(365,465,o),
(236,465,cs),
(125,465,o),
(49,410,o),
(49,335,cs),
(49,303,o),
(62,265,o),
(108,265,cs),
(131,265,o),
(157,274,o),
(157,303,cs),
(157,318,o),
(150,329,o),
(137,335,cs),
(134,336,o),
(126,338,o),
(126,349,cs),
(126,375,o),
(178,397,o),
(228,397,cs),
(309,397,o),
(333,345,o),
(333,261,cs),
(333,203,l),
(333,203,l),
(292,228,o),
(252,238,o),
(204,238,cs),
(91,238,o),
(24,182,o),
(24,106,cs),
(24,34,o),
(84,-11,o),
(177,-11,cs)
);
},
{
closed = 1;
nodes = (
(143,57,o),
(116,75,o),
(116,110,cs),
(116,143,o),
(143,176,o),
(218,176,cs),
(285,176,o),
(329,150,o),
(329,122,cs),
(329,93,o),
(289,57,o),
(206,57,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 3 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 8 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
79 77 37 36 36 36 36 41 40 43 36 10 24
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(241,-11,o),
(291,9,o),
(334,48,c),
(346,5,o),
(377,-11,o),
(413,-11,cs),
(453,-11,o),
(490,11,o),
(490,65,cs),
(490,82,o),
(486,98,o),
(469,98,cs),
(450,98,o),
(443,84,o),
(442,76,cs),
(439,59,o),
(437,49,o),
(422,49,cs),
(413,49,o),
(407,54,o),
(404,63,cs),
(401,72,o),
(400,92,o),
(400,123,cs),
(400,175,o),
(403,264,o),
(403,267,cs),
(403,397,o),
(344,462,o),
(226,462,cs),
(121,462,o),
(55,411,o),
(55,339,cs),
(55,304,o),
(71,269,o),
(112,269,cs),
(139,269,o),
(156,282,o),
(156,305,cs),
(156,326,o),
(140,335,o),
(131,336,cs),
(118,339,o),
(111,340,o),
(111,351,cs),
(111,385,o),
(179,402,o),
(218,402,cs),
(298,402,o),
(333,349,o),
(333,261,cs),
(333,258,o),
(333,253,o),
(333,246,cs),
(332,239,o),
(332,231,o),
(332,224,cs),
(332,197,l),
(332,197,l),
(290,228,o),
(243,243,o),
(192,243,cs),
(91,243,o),
(25,184,o),
(25,107,cs),
(25,35,o),
(85,-11,o),
(178,-11,cs)
);
},
{
closed = 1;
nodes = (
(144,49,o),
(96,68,o),
(96,108,cs),
(96,152,o),
(150,183,o),
(217,183,cs),
(279,183,o),
(332,156,o),
(332,118,cs),
(332,79,o),
(272,49,o),
(201,49,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
66 1 9 7 53 1 5 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
81 79 36 38 36 38 36 40 36 44 37 10 24
CALL[ ]	/* CallFunction */";
};
width = 468;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(242,-11,o),
(292,9,o),
(335,48,c),
(347,5,o),
(378,-11,o),
(414,-11,cs),
(453,-11,o),
(481,8,o),
(481,65,cs),
(481,80,o),
(479,88,o),
(468,88,cs),
(462,88,o),
(459,84,o),
(458,76,cs),
(455,47,o),
(453,19,o),
(415,19,cs),
(380,19,o),
(371,44,o),
(371,122,cs),
(371,173,o),
(374,262,o),
(374,268,cs),
(374,400,o),
(325,457,o),
(220,457,cs),
(128,457,o),
(56,412,o),
(56,339,cs),
(56,304,o),
(73,276,o),
(104,276,cs),
(127,276,o),
(140,291,o),
(140,311,cs),
(140,332,o),
(126,335,o),
(115,338,cs),
(104,341,o),
(95,342,o),
(95,358,cs),
(95,401,o),
(152,427,o),
(212,427,cs),
(300,427,o),
(334,368,o),
(334,264,cs),
(334,259,o),
(334,253,o),
(334,245,cs),
(333,236,o),
(333,228,o),
(333,219,cs),
(333,187,l),
(292,219,o),
(245,233,o),
(194,233,cs),
(94,233,o),
(26,180,o),
(26,106,cs),
(26,35,o),
(86,-11,o),
(179,-11,cs)
);
},
{
closed = 1;
nodes = (
(115,19,o),
(67,53,o),
(67,106,cs),
(67,165,o),
(124,203,o),
(199,203,cs),
(272,203,o),
(333,167,o),
(333,117,cs),
(333,64,o),
(262,19,o),
(184,19,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 4 9 57 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
86 84 37 38 36 36 37 43 38 44 37 10 24
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = a;
unicode = 97;
},
{
glyphname = aacute;
kernLeft = a;
kernRight = a;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(240,-11,o),
(292,9,o),
(335,48,c),
(348,1,o),
(379,-11,o),
(414,-11,cs),
(462,-11,o),
(498,14,o),
(498,69,cs),
(498,100,o),
(486,108,o),
(466,108,cs),
(439,108,o),
(438,94,o),
(437,79,cs),
(437,72,o),
(435,67,o),
(428,67,cs),
(423,67,o),
(421,70,o),
(420,77,cs),
(419,84,o),
(419,99,o),
(419,124,cs),
(419,163,o),
(423,230,o),
(423,269,cs),
(423,394,o),
(365,465,o),
(236,465,cs),
(125,465,o),
(49,410,o),
(49,335,cs),
(49,303,o),
(62,265,o),
(108,265,cs),
(131,265,o),
(157,274,o),
(157,303,cs),
(157,318,o),
(150,329,o),
(137,335,cs),
(134,336,o),
(126,338,o),
(126,349,cs),
(126,375,o),
(178,397,o),
(228,397,cs),
(309,397,o),
(333,345,o),
(333,261,cs),
(333,203,l),
(292,228,o),
(252,238,o),
(204,238,cs),
(91,238,o),
(24,182,o),
(24,106,cs),
(24,34,o),
(84,-11,o),
(177,-11,cs)
);
},
{
closed = 1;
nodes = (
(143,57,o),
(116,75,o),
(116,110,cs),
(116,143,o),
(143,176,o),
(218,176,cs),
(285,176,o),
(329,150,o),
(329,122,cs),
(329,93,o),
(289,57,o),
(206,57,cs)
);
},
{
closed = 1;
nodes = (
(217,486,o),
(252,509,o),
(291,543,cs),
(326,574,o),
(355,608,o),
(355,626,cs),
(355,651,o),
(328,673,o),
(285,674,cs),
(260,674,o),
(229,635,o),
(205,595,cs),
(185,560,o),
(163,513,o),
(163,508,cs),
(163,493,o),
(185,486,o),
(200,486,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
84 1 11 9 60 1 5 6 72 1 7 5 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
84 1 11 9 60 1 5 6 72 1 7 10 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 1 0 1 106 0 0 4 0 106 0 3 2 9 2 3 9 104 0 6 11 5 5 6 96 0 9 0 11 6 9 11 91 0 2 2 4 83 0 4 4 23 67 10 1 5 5 7 84 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 1 0 1 106 0 0 4 0 106 0 3 2 9 2 3 9 104 0 6 11 5 5 6 96 0 4 0 2 3 4 2 91 0 9 0 11 6 9 11 91 10 1 5 5 7 84 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 1 0 1 106 0 0 4 0 106 0 3 2 9 2 3 9 104 0 6 11 5 5 6 96 0 4 0 2 3 4 2 91 0 9 0 11 6 9 11 91 0 5 5 7 84 8 1 7 7 24 67 0 10 10 7 83 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 1 0 1 106 0 0 4 0 106 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 4 0 2 3 4 2 91 0 9 0 11 6 9 11 91 0 5 5 7 84 8 1 7 7 24 67 0 10 10 7 83 8 1 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
97 95 89 87 82 80 36 36 36 41 40 43 38 38 38 12 24
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(241,-11,o),
(291,9,o),
(334,48,c),
(346,5,o),
(377,-11,o),
(413,-11,cs),
(453,-11,o),
(490,11,o),
(490,65,cs),
(490,82,o),
(486,98,o),
(469,98,cs),
(450,98,o),
(443,84,o),
(442,76,cs),
(439,59,o),
(437,49,o),
(422,49,cs),
(413,49,o),
(407,54,o),
(404,63,cs),
(401,72,o),
(400,92,o),
(400,123,cs),
(400,175,o),
(403,264,o),
(403,267,cs),
(403,397,o),
(344,462,o),
(226,462,cs),
(121,462,o),
(55,411,o),
(55,339,cs),
(55,304,o),
(71,269,o),
(112,269,cs),
(139,269,o),
(156,282,o),
(156,305,cs),
(156,326,o),
(140,335,o),
(131,336,cs),
(118,339,o),
(111,340,o),
(111,351,cs),
(111,385,o),
(179,402,o),
(218,402,cs),
(298,402,o),
(333,349,o),
(333,261,cs),
(333,258,o),
(333,253,o),
(333,246,cs),
(332,239,o),
(332,231,o),
(332,224,cs),
(332,197,l),
(290,228,o),
(243,243,o),
(192,243,cs),
(91,243,o),
(25,184,o),
(25,107,cs),
(25,35,o),
(85,-11,o),
(178,-11,cs)
);
},
{
closed = 1;
nodes = (
(144,49,o),
(96,68,o),
(96,108,cs),
(96,152,o),
(150,183,o),
(217,183,cs),
(279,183,o),
(332,156,o),
(332,118,cs),
(332,79,o),
(272,49,o),
(201,49,cs)
);
},
{
closed = 1;
nodes = (
(215,495,o),
(320,594,o),
(320,623,cs),
(320,646,o),
(302,661,o),
(271,661,cs),
(253,661,o),
(224,627,o),
(201,591,cs),
(175,551,o),
(160,517,o),
(160,513,cs),
(160,500,o),
(174,495,o),
(185,495,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
84 1 11 9 71 1 7 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 1 0 1 106 0 0 4 0 106 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 9 0 11 6 9 11 91 0 2 2 4 83 0 4 4 23 67 10 1 5 5 7 83 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 1 0 1 106 0 0 4 0 106 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 4 0 2 3 4 2 92 0 9 0 11 6 9 11 91 10 1 5 5 7 83 8 1 7 7 24 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
99 97 89 87 83 81 36 38 36 40 36 44 39 40 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 468;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(242,-11,o),
(292,9,o),
(335,48,c),
(347,5,o),
(378,-11,o),
(414,-11,cs),
(453,-11,o),
(481,8,o),
(481,65,cs),
(481,80,o),
(479,88,o),
(468,88,cs),
(462,88,o),
(459,84,o),
(458,76,cs),
(455,47,o),
(453,19,o),
(415,19,cs),
(380,19,o),
(371,44,o),
(371,122,cs),
(371,173,o),
(374,262,o),
(374,268,cs),
(374,400,o),
(325,457,o),
(220,457,cs),
(128,457,o),
(56,412,o),
(56,339,cs),
(56,304,o),
(73,276,o),
(104,276,cs),
(127,276,o),
(140,291,o),
(140,311,cs),
(140,332,o),
(126,335,o),
(115,338,cs),
(104,341,o),
(95,342,o),
(95,358,cs),
(95,401,o),
(152,427,o),
(212,427,cs),
(300,427,o),
(334,368,o),
(334,264,cs),
(334,259,o),
(334,253,o),
(334,245,cs),
(333,236,o),
(333,228,o),
(333,219,cs),
(333,187,l),
(292,219,o),
(245,233,o),
(194,233,cs),
(94,233,o),
(26,180,o),
(26,106,cs),
(26,35,o),
(86,-11,o),
(179,-11,cs)
);
},
{
closed = 1;
nodes = (
(115,19,o),
(67,53,o),
(67,106,cs),
(67,165,o),
(124,203,o),
(199,203,cs),
(272,203,o),
(333,167,o),
(333,117,cs),
(333,64,o),
(262,19,o),
(184,19,cs)
);
},
{
closed = 1;
nodes = (
(183,510,o),
(270,597,o),
(270,618,cs),
(270,637,o),
(262,640,o),
(251,640,cs),
(231,640,o),
(156,546,o),
(156,521,cs),
(156,514,o),
(159,510,o),
(164,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 4 9 57 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 11 10 11 106 0 10 2 10 106 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 11 10 11 106 0 10 2 10 106 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 2 0 0 1 2 0 92 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
103 101 96 94 86 84 37 38 36 36 37 43 38 44 37 12 24
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = aacute;
unicode = 225;
},
{
glyphname = abreve;
kernLeft = a;
kernRight = a;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(240,-11,o),
(292,9,o),
(335,48,c),
(348,1,o),
(379,-11,o),
(414,-11,cs),
(462,-11,o),
(498,14,o),
(498,69,cs),
(498,100,o),
(486,108,o),
(466,108,cs),
(439,108,o),
(438,94,o),
(437,79,cs),
(437,72,o),
(435,67,o),
(428,67,cs),
(423,67,o),
(421,70,o),
(420,77,cs),
(419,84,o),
(419,99,o),
(419,124,cs),
(419,163,o),
(423,230,o),
(423,269,cs),
(423,394,o),
(365,465,o),
(236,465,cs),
(125,465,o),
(49,410,o),
(49,335,cs),
(49,303,o),
(62,265,o),
(108,265,cs),
(131,265,o),
(157,274,o),
(157,303,cs),
(157,318,o),
(150,329,o),
(137,335,cs),
(134,336,o),
(126,338,o),
(126,349,cs),
(126,375,o),
(178,397,o),
(228,397,cs),
(309,397,o),
(333,345,o),
(333,261,cs),
(333,203,l),
(333,203,l),
(292,228,o),
(252,238,o),
(204,238,cs),
(91,238,o),
(24,182,o),
(24,106,cs),
(24,34,o),
(84,-11,o),
(177,-11,cs)
);
},
{
closed = 1;
nodes = (
(143,57,o),
(116,75,o),
(116,110,cs),
(116,143,o),
(143,176,o),
(218,176,cs),
(285,176,o),
(329,150,o),
(329,122,cs),
(329,93,o),
(289,57,o),
(206,57,cs)
);
},
{
closed = 1;
nodes = (
(290,510,o),
(359,537,o),
(359,589,cs),
(359,616,o),
(341,619,o),
(321,619,cs),
(304,619,o),
(289,605,o),
(289,590,cs),
(289,585,o),
(285,580,o),
(276,575,cs),
(267,570,o),
(252,567,o),
(233,567,cs),
(203,567,o),
(174,575,o),
(174,590,cs),
(174,613,o),
(161,619,o),
(138,619,cs),
(115,619,o),
(106,606,o),
(106,589,cs),
(106,546,o),
(151,510,o),
(238,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 3 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 8 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
13 1 11 12 11 106 0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 12 0 10 2 12 10 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
13 1 11 12 11 106 0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 12 0 10 2 12 10 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
13 1 11 12 11 106 0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 12 0 10 2 12 10 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 69 values pushed */
13 1 11 12 11 106 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 12 0 10 2 12 10 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 84 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
107 105 101 99 93 91 87 85 79 77 37 36 36 36 36 41 40 43 36 14 24
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(241,-11,o),
(291,9,o),
(334,48,c),
(346,5,o),
(377,-11,o),
(413,-11,cs),
(453,-11,o),
(490,11,o),
(490,65,cs),
(490,82,o),
(486,98,o),
(469,98,cs),
(450,98,o),
(443,84,o),
(442,76,cs),
(439,59,o),
(437,49,o),
(422,49,cs),
(413,49,o),
(407,54,o),
(404,63,cs),
(401,72,o),
(400,92,o),
(400,123,cs),
(400,175,o),
(403,264,o),
(403,267,cs),
(403,397,o),
(344,462,o),
(226,462,cs),
(121,462,o),
(55,411,o),
(55,339,cs),
(55,304,o),
(71,269,o),
(112,269,cs),
(139,269,o),
(156,282,o),
(156,305,cs),
(156,326,o),
(140,335,o),
(131,336,cs),
(118,339,o),
(111,340,o),
(111,351,cs),
(111,385,o),
(179,402,o),
(218,402,cs),
(298,402,o),
(333,349,o),
(333,261,cs),
(333,258,o),
(333,253,o),
(333,246,cs),
(332,239,o),
(332,231,o),
(332,224,cs),
(332,197,l),
(332,197,l),
(290,228,o),
(243,243,o),
(192,243,cs),
(91,243,o),
(25,184,o),
(25,107,cs),
(25,35,o),
(85,-11,o),
(178,-11,cs)
);
},
{
closed = 1;
nodes = (
(144,49,o),
(96,68,o),
(96,108,cs),
(96,152,o),
(150,183,o),
(217,183,cs),
(279,183,o),
(332,156,o),
(332,118,cs),
(332,79,o),
(272,49,o),
(201,49,cs)
);
},
{
closed = 1;
nodes = (
(280,510,o),
(346,537,o),
(346,589,cs),
(346,616,o),
(329,617,o),
(316,617,cs),
(301,617,o),
(290,605,o),
(290,590,cs),
(290,573,o),
(265,555,o),
(226,555,cs),
(196,555,o),
(161,564,o),
(161,590,cs),
(161,610,o),
(152,617,o),
(133,617,cs),
(116,617,o),
(107,608,o),
(107,589,cs),
(107,548,o),
(153,510,o),
(229,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
67 1 9 7 54 1 5 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 4 9 3 9 4 3 104 0 12 0 10 2 12 10 91 13 1 11 0 1 7 11 1 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 4 9 3 9 4 3 104 0 12 0 10 2 12 10 91 0 2 0 0 1 2 0 91 13 1 11 0 1 7 11 1 91 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
111 109 105 103 97 95 92 90 82 80 36 38 36 38 36 40 36 44 38 14 35
CALL[ ]	/* CallFunction */";
};
width = 468;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(242,-11,o),
(292,9,o),
(335,48,c),
(347,5,o),
(378,-11,o),
(414,-11,cs),
(453,-11,o),
(481,8,o),
(481,65,cs),
(481,80,o),
(479,88,o),
(468,88,cs),
(462,88,o),
(459,84,o),
(458,76,cs),
(455,47,o),
(453,19,o),
(415,19,cs),
(380,19,o),
(371,44,o),
(371,122,cs),
(371,173,o),
(374,262,o),
(374,268,cs),
(374,400,o),
(325,457,o),
(220,457,cs),
(128,457,o),
(56,412,o),
(56,339,cs),
(56,304,o),
(73,276,o),
(104,276,cs),
(127,276,o),
(140,291,o),
(140,311,cs),
(140,332,o),
(126,335,o),
(115,338,cs),
(104,341,o),
(95,342,o),
(95,358,cs),
(95,401,o),
(152,427,o),
(212,427,cs),
(300,427,o),
(334,368,o),
(334,264,cs),
(334,259,o),
(334,253,o),
(334,245,cs),
(333,236,o),
(333,228,o),
(333,219,cs),
(333,187,l),
(292,219,o),
(245,233,o),
(194,233,cs),
(94,233,o),
(26,180,o),
(26,106,cs),
(26,35,o),
(86,-11,o),
(179,-11,cs)
);
},
{
closed = 1;
nodes = (
(115,19,o),
(67,53,o),
(67,106,cs),
(67,165,o),
(124,203,o),
(199,203,cs),
(272,203,o),
(333,167,o),
(333,117,cs),
(333,64,o),
(262,19,o),
(184,19,cs)
);
},
{
closed = 1;
nodes = (
(269,510,o),
(327,541,o),
(327,589,cs),
(327,610,o),
(319,613,o),
(308,613,cs),
(297,613,o),
(291,605,o),
(291,590,cs),
(291,563,o),
(252,535,o),
(216,535,cs),
(177,535,o),
(142,549,o),
(142,590,cs),
(142,606,o),
(140,613,o),
(125,613,cs),
(114,613,o),
(108,605,o),
(108,589,cs),
(108,548,o),
(158,510,o),
(216,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 4 9 57 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 4 9 3 9 4 3 104 0 12 0 10 2 12 10 91 13 1 11 0 1 7 11 1 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 4 9 3 9 4 3 104 0 12 0 10 2 12 10 91 0 2 0 0 1 2 0 91 13 1 11 0 1 7 11 1 91 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
116 114 109 107 103 101 96 94 86 84 37 38 36 36 37 43 38 44 37 14 24
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = abreve;
unicode = 259;
},
{
glyphname = acircumflex;
kernLeft = a;
kernRight = a;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(240,-11,o),
(292,9,o),
(335,48,c),
(348,1,o),
(379,-11,o),
(414,-11,cs),
(462,-11,o),
(498,14,o),
(498,69,cs),
(498,100,o),
(486,108,o),
(466,108,cs),
(439,108,o),
(438,94,o),
(437,79,cs),
(437,72,o),
(435,67,o),
(428,67,cs),
(423,67,o),
(421,70,o),
(420,77,cs),
(419,84,o),
(419,99,o),
(419,124,cs),
(419,163,o),
(423,230,o),
(423,269,cs),
(423,394,o),
(365,465,o),
(236,465,cs),
(125,465,o),
(49,410,o),
(49,335,cs),
(49,303,o),
(62,265,o),
(108,265,cs),
(131,265,o),
(157,274,o),
(157,303,cs),
(157,318,o),
(150,329,o),
(137,335,cs),
(134,336,o),
(126,338,o),
(126,349,cs),
(126,375,o),
(178,397,o),
(228,397,cs),
(309,397,o),
(333,345,o),
(333,261,cs),
(333,203,l),
(333,203,l),
(292,228,o),
(252,238,o),
(204,238,cs),
(91,238,o),
(24,182,o),
(24,106,cs),
(24,34,o),
(84,-11,o),
(177,-11,cs)
);
},
{
closed = 1;
nodes = (
(143,57,o),
(116,75,o),
(116,110,cs),
(116,143,o),
(143,176,o),
(218,176,cs),
(285,176,o),
(329,150,o),
(329,122,cs),
(329,93,o),
(289,57,o),
(206,57,cs)
);
},
{
closed = 1;
nodes = (
(123,510,o),
(181,546,o),
(230,572,c),
(302,534,o),
(339,510,o),
(350,510,cs),
(359,510,o),
(363,520,o),
(363,531,cs),
(363,572,o),
(254,664,o),
(230,664,cs),
(219,664,o),
(184,639,o),
(157,614,cs),
(126,585,o),
(98,549,o),
(98,524,cs),
(98,517,o),
(103,510,o),
(111,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
86 1 10 12 66 1 9 7 42 1 3 4 54 1 5 3 4 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
86 1 10 12 66 1 9 7 42 1 3 4 54 1 5 8 4 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 12 10 12 106 11 13 2 10 2 10 106 0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 12 10 12 106 11 13 2 10 2 10 106 0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 2 0 0 1 2 0 92 0 7 0 9 4 7 9 91 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 12 10 12 106 11 13 2 10 2 10 106 0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 2 0 0 1 2 0 92 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
0 12 10 12 106 11 13 2 10 2 10 106 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 2 0 0 1 2 0 92 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
82 81 100 98 92 90 81 106 82 106 79 77 37 36 36 36 36 41 40 43 36 14 24
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(241,-11,o),
(291,9,o),
(334,48,c),
(346,5,o),
(377,-11,o),
(413,-11,cs),
(453,-11,o),
(490,11,o),
(490,65,cs),
(490,82,o),
(486,98,o),
(469,98,cs),
(450,98,o),
(443,84,o),
(442,76,cs),
(439,59,o),
(437,49,o),
(422,49,cs),
(413,49,o),
(407,54,o),
(404,63,cs),
(401,72,o),
(400,92,o),
(400,123,cs),
(400,175,o),
(403,264,o),
(403,267,cs),
(403,397,o),
(344,462,o),
(226,462,cs),
(121,462,o),
(55,411,o),
(55,339,cs),
(55,304,o),
(71,269,o),
(112,269,cs),
(139,269,o),
(156,282,o),
(156,305,cs),
(156,326,o),
(140,335,o),
(131,336,cs),
(118,339,o),
(111,340,o),
(111,351,cs),
(111,385,o),
(179,402,o),
(218,402,cs),
(298,402,o),
(333,349,o),
(333,261,cs),
(333,258,o),
(333,253,o),
(333,246,cs),
(332,239,o),
(332,231,o),
(332,224,cs),
(332,197,l),
(332,197,l),
(290,228,o),
(243,243,o),
(192,243,cs),
(91,243,o),
(25,184,o),
(25,107,cs),
(25,35,o),
(85,-11,o),
(178,-11,cs)
);
},
{
closed = 1;
nodes = (
(144,49,o),
(96,68,o),
(96,108,cs),
(96,152,o),
(150,183,o),
(217,183,cs),
(279,183,o),
(332,156,o),
(332,118,cs),
(332,79,o),
(272,49,o),
(201,49,cs)
);
},
{
closed = 1;
nodes = (
(119,510,o),
(150,538,o),
(223,581,c),
(236,573,o),
(330,510,o),
(343,510,cs),
(351,510,o),
(354,518,o),
(354,527,cs),
(354,562,o),
(248,655,o),
(223,655,cs),
(201,655,o),
(93,564,o),
(93,523,cs),
(93,514,o),
(97,510,o),
(104,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
91 1 10 12 67 1 9 7 54 1 5 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 12 10 12 106 11 13 2 10 2 10 106 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 12 10 12 106 11 13 2 10 2 10 106 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 2 0 0 1 2 0 92 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
87 86 104 102 97 95 86 110 87 110 82 80 36 38 36 38 36 40 36 44 38 14 35
CALL[ ]	/* CallFunction */";
};
width = 468;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(242,-11,o),
(292,9,o),
(335,48,c),
(347,5,o),
(378,-11,o),
(414,-11,cs),
(453,-11,o),
(481,8,o),
(481,65,cs),
(481,80,o),
(479,88,o),
(468,88,cs),
(462,88,o),
(459,84,o),
(458,76,cs),
(455,47,o),
(453,19,o),
(415,19,cs),
(380,19,o),
(371,44,o),
(371,122,cs),
(371,173,o),
(374,262,o),
(374,268,cs),
(374,400,o),
(325,457,o),
(220,457,cs),
(128,457,o),
(56,412,o),
(56,339,cs),
(56,304,o),
(73,276,o),
(104,276,cs),
(127,276,o),
(140,291,o),
(140,311,cs),
(140,332,o),
(126,335,o),
(115,338,cs),
(104,341,o),
(95,342,o),
(95,358,cs),
(95,401,o),
(152,427,o),
(212,427,cs),
(300,427,o),
(334,368,o),
(334,264,cs),
(334,259,o),
(334,253,o),
(334,245,cs),
(333,236,o),
(333,228,o),
(333,219,cs),
(333,187,l),
(292,219,o),
(245,233,o),
(194,233,cs),
(94,233,o),
(26,180,o),
(26,106,cs),
(26,35,o),
(86,-11,o),
(179,-11,cs)
);
},
{
closed = 1;
nodes = (
(115,19,o),
(67,53,o),
(67,106,cs),
(67,165,o),
(124,203,o),
(199,203,cs),
(272,203,o),
(333,167,o),
(333,117,cs),
(333,64,o),
(262,19,o),
(184,19,cs)
);
},
{
closed = 1;
nodes = (
(108,510,o),
(160,559,o),
(213,596,c),
(289,542,o),
(318,510,o),
(333,510,cs),
(338,510,o),
(341,514,o),
(341,521,cs),
(341,546,o),
(238,640,o),
(213,640,cs),
(190,640,o),
(86,546,o),
(86,521,cs),
(86,514,o),
(89,510,o),
(94,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
95 1 10 12 71 1 4 9 57 1 3 4 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 12 10 12 106 11 13 2 10 2 10 106 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 12 10 12 106 11 13 2 10 2 10 106 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 2 0 0 1 2 0 92 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
91 90 108 106 101 99 90 113 91 113 86 84 37 38 36 36 37 43 38 44 37 14 24
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = acircumflex;
unicode = 226;
},
{
glyphname = adieresis;
kernLeft = a;
kernRight = a;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(240,-11,o),
(292,9,o),
(335,48,c),
(348,1,o),
(379,-11,o),
(414,-11,cs),
(462,-11,o),
(498,14,o),
(498,69,cs),
(498,100,o),
(486,108,o),
(466,108,cs),
(439,108,o),
(438,94,o),
(437,79,cs),
(437,72,o),
(435,67,o),
(428,67,cs),
(423,67,o),
(421,70,o),
(420,77,cs),
(419,84,o),
(419,99,o),
(419,124,cs),
(419,163,o),
(423,230,o),
(423,269,cs),
(423,394,o),
(365,465,o),
(236,465,cs),
(125,465,o),
(49,410,o),
(49,335,cs),
(49,303,o),
(62,265,o),
(108,265,cs),
(131,265,o),
(157,274,o),
(157,303,cs),
(157,318,o),
(150,329,o),
(137,335,cs),
(134,336,o),
(126,338,o),
(126,349,cs),
(126,375,o),
(178,397,o),
(228,397,cs),
(309,397,o),
(333,345,o),
(333,261,cs),
(333,203,l),
(333,203,l),
(292,228,o),
(252,238,o),
(204,238,cs),
(91,238,o),
(24,182,o),
(24,106,cs),
(24,34,o),
(84,-11,o),
(177,-11,cs)
);
},
{
closed = 1;
nodes = (
(143,57,o),
(116,75,o),
(116,110,cs),
(116,143,o),
(143,176,o),
(218,176,cs),
(285,176,o),
(329,150,o),
(329,122,cs),
(329,93,o),
(289,57,o),
(206,57,cs)
);
},
{
closed = 1;
nodes = (
(162,509,o),
(199,524,o),
(199,579,cs),
(199,615,o),
(171,640,o),
(139,640,cs),
(92,640,o),
(73,599,o),
(73,575,cs),
(73,536,o),
(99,509,o),
(132,509,cs)
);
},
{
closed = 1;
nodes = (
(369,486,o),
(406,501,o),
(406,556,cs),
(406,592,o),
(378,617,o),
(346,617,cs),
(299,617,o),
(280,576,o),
(280,552,cs),
(280,513,o),
(306,486,o),
(339,486,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 3 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 8 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 10 0 11 13 10 11 91 0 12 0 13 2 12 13 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 10 0 11 13 10 11 91 0 12 0 13 2 12 13 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 10 0 11 13 10 11 91 0 12 0 13 2 12 13 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 71 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 10 0 11 13 10 11 91 0 12 0 13 2 12 13 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
111 109 103 101 95 93 87 85 79 77 37 36 36 36 36 41 40 43 36 14 24
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(241,-11,o),
(291,9,o),
(334,48,c),
(346,5,o),
(377,-11,o),
(413,-11,cs),
(453,-11,o),
(490,11,o),
(490,65,cs),
(490,82,o),
(486,98,o),
(469,98,cs),
(450,98,o),
(443,84,o),
(442,76,cs),
(439,59,o),
(437,49,o),
(422,49,cs),
(413,49,o),
(407,54,o),
(404,63,cs),
(401,72,o),
(400,92,o),
(400,123,cs),
(400,175,o),
(403,264,o),
(403,267,cs),
(403,397,o),
(344,462,o),
(226,462,cs),
(121,462,o),
(55,411,o),
(55,339,cs),
(55,304,o),
(71,269,o),
(112,269,cs),
(139,269,o),
(156,282,o),
(156,305,cs),
(156,326,o),
(140,335,o),
(131,336,cs),
(118,339,o),
(111,340,o),
(111,351,cs),
(111,385,o),
(179,402,o),
(218,402,cs),
(298,402,o),
(333,349,o),
(333,261,cs),
(333,258,o),
(333,253,o),
(333,246,cs),
(332,239,o),
(332,231,o),
(332,224,cs),
(332,197,l),
(332,197,l),
(290,228,o),
(243,243,o),
(192,243,cs),
(91,243,o),
(25,184,o),
(25,107,cs),
(25,35,o),
(85,-11,o),
(178,-11,cs)
);
},
{
closed = 1;
nodes = (
(144,49,o),
(96,68,o),
(96,108,cs),
(96,152,o),
(150,183,o),
(217,183,cs),
(279,183,o),
(332,156,o),
(332,118,cs),
(332,79,o),
(272,49,o),
(201,49,cs)
);
},
{
closed = 1;
nodes = (
(147,518,o),
(178,531,o),
(178,579,cs),
(178,610,o),
(156,631,o),
(129,631,cs),
(91,631,o),
(73,596,o),
(73,575,cs),
(73,542,o),
(95,518,o),
(122,518,cs)
);
},
{
closed = 1;
nodes = (
(354,495,o),
(385,508,o),
(385,556,cs),
(385,587,o),
(363,608,o),
(336,608,cs),
(298,608,o),
(280,573,o),
(280,552,cs),
(280,519,o),
(302,495,o),
(329,495,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
67 1 9 7 54 1 5 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 10 0 11 13 10 11 91 0 12 0 13 2 12 13 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 10 0 11 13 10 11 91 0 12 0 13 2 12 13 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
112 110 106 104 98 96 92 90 82 80 36 38 36 38 36 40 36 44 38 14 35
CALL[ ]	/* CallFunction */";
};
width = 468;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(242,-11,o),
(292,9,o),
(335,48,c),
(347,5,o),
(378,-11,o),
(414,-11,cs),
(453,-11,o),
(481,8,o),
(481,65,cs),
(481,80,o),
(479,88,o),
(468,88,cs),
(462,88,o),
(459,84,o),
(458,76,cs),
(455,47,o),
(453,19,o),
(415,19,cs),
(380,19,o),
(371,44,o),
(371,122,cs),
(371,173,o),
(374,262,o),
(374,268,cs),
(374,400,o),
(325,457,o),
(220,457,cs),
(128,457,o),
(56,412,o),
(56,339,cs),
(56,304,o),
(73,276,o),
(104,276,cs),
(127,276,o),
(140,291,o),
(140,311,cs),
(140,332,o),
(126,335,o),
(115,338,cs),
(104,341,o),
(95,342,o),
(95,358,cs),
(95,401,o),
(152,427,o),
(212,427,cs),
(300,427,o),
(334,368,o),
(334,264,cs),
(334,259,o),
(334,253,o),
(334,245,cs),
(333,236,o),
(333,228,o),
(333,219,cs),
(333,187,l),
(292,219,o),
(245,233,o),
(194,233,cs),
(94,233,o),
(26,180,o),
(26,106,cs),
(26,35,o),
(86,-11,o),
(179,-11,cs)
);
},
{
closed = 1;
nodes = (
(115,19,o),
(67,53,o),
(67,106,cs),
(67,165,o),
(124,203,o),
(199,203,cs),
(272,203,o),
(333,167,o),
(333,117,cs),
(333,64,o),
(262,19,o),
(184,19,cs)
);
},
{
closed = 1;
nodes = (
(127,533,o),
(149,543,o),
(149,579,cs),
(149,602,o),
(134,616,o),
(115,616,cs),
(87,616,o),
(74,589,o),
(74,575,cs),
(74,551,o),
(89,533,o),
(108,533,cs)
);
},
{
closed = 1;
nodes = (
(334,510,o),
(356,520,o),
(356,556,cs),
(356,579,o),
(341,593,o),
(322,593,cs),
(294,593,o),
(281,566,o),
(281,552,cs),
(281,528,o),
(296,510,o),
(315,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 4 9 57 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 10 0 11 13 10 11 91 0 12 0 13 2 12 13 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 10 0 11 13 10 11 91 0 12 0 13 2 12 13 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
116 114 110 108 102 100 96 94 86 84 37 38 36 36 37 43 38 44 37 14 24
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = adieresis;
unicode = 228;
},
{
glyphname = agrave;
kernLeft = a;
kernRight = a;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(240,-11,o),
(292,9,o),
(335,48,c),
(348,1,o),
(379,-11,o),
(414,-11,cs),
(462,-11,o),
(498,14,o),
(498,69,cs),
(498,100,o),
(486,108,o),
(466,108,cs),
(439,108,o),
(438,94,o),
(437,79,cs),
(437,72,o),
(435,67,o),
(428,67,cs),
(423,67,o),
(421,70,o),
(420,77,cs),
(419,84,o),
(419,99,o),
(419,124,cs),
(419,163,o),
(423,230,o),
(423,269,cs),
(423,394,o),
(365,465,o),
(236,465,cs),
(125,465,o),
(49,410,o),
(49,335,cs),
(49,303,o),
(62,265,o),
(108,265,cs),
(131,265,o),
(157,274,o),
(157,303,cs),
(157,318,o),
(150,329,o),
(137,335,cs),
(134,336,o),
(126,338,o),
(126,349,cs),
(126,375,o),
(178,397,o),
(228,397,cs),
(309,397,o),
(333,345,o),
(333,261,cs),
(333,203,l),
(333,203,l),
(292,228,o),
(252,238,o),
(204,238,cs),
(91,238,o),
(24,182,o),
(24,106,cs),
(24,34,o),
(84,-11,o),
(177,-11,cs)
);
},
{
closed = 1;
nodes = (
(143,57,o),
(116,75,o),
(116,110,cs),
(116,143,o),
(143,176,o),
(218,176,cs),
(285,176,o),
(329,150,o),
(329,122,cs),
(329,93,o),
(289,57,o),
(206,57,cs)
);
},
{
closed = 1;
nodes = (
(330,486,o),
(352,493,o),
(352,508,cs),
(352,513,o),
(330,560,o),
(310,595,cs),
(286,635,o),
(255,674,o),
(230,674,cs),
(187,673,o),
(160,651,o),
(160,626,cs),
(160,592,o),
(277,486,o),
(315,486,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
82 1 11 9 58 1 5 6 70 1 7 5 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
82 1 11 9 58 1 5 6 70 1 7 10 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 0 1 0 106 0 1 4 1 106 0 3 2 9 2 3 9 104 0 6 11 5 5 6 96 0 9 0 11 6 9 11 91 0 2 2 4 83 0 4 4 23 67 10 1 5 5 7 84 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 0 1 0 106 0 1 4 1 106 0 3 2 9 2 3 9 104 0 6 11 5 5 6 96 0 4 0 2 3 4 2 92 0 9 0 11 6 9 11 91 10 1 5 5 7 84 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 0 1 0 106 0 1 4 1 106 0 3 2 9 2 3 9 104 0 6 11 5 5 6 96 0 4 0 2 3 4 2 92 0 9 0 11 6 9 11 91 0 5 5 7 84 8 1 7 7 24 67 0 10 10 7 83 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 0 1 0 106 0 1 4 1 106 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 4 0 2 3 4 2 92 0 9 0 11 6 9 11 91 0 5 5 7 84 8 1 7 7 24 67 0 10 10 7 83 8 1 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
95 93 87 85 80 78 36 36 36 41 40 43 40 38 34 12 24
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(241,-11,o),
(291,9,o),
(334,48,c),
(346,5,o),
(377,-11,o),
(413,-11,cs),
(453,-11,o),
(490,11,o),
(490,65,cs),
(490,82,o),
(486,98,o),
(469,98,cs),
(450,98,o),
(443,84,o),
(442,76,cs),
(439,59,o),
(437,49,o),
(422,49,cs),
(413,49,o),
(407,54,o),
(404,63,cs),
(401,72,o),
(400,92,o),
(400,123,cs),
(400,175,o),
(403,264,o),
(403,267,cs),
(403,397,o),
(344,462,o),
(226,462,cs),
(121,462,o),
(55,411,o),
(55,339,cs),
(55,304,o),
(71,269,o),
(112,269,cs),
(139,269,o),
(156,282,o),
(156,305,cs),
(156,326,o),
(140,335,o),
(131,336,cs),
(118,339,o),
(111,340,o),
(111,351,cs),
(111,385,o),
(179,402,o),
(218,402,cs),
(298,402,o),
(333,349,o),
(333,261,cs),
(333,258,o),
(333,253,o),
(333,246,cs),
(332,239,o),
(332,231,o),
(332,224,cs),
(332,197,l),
(332,197,l),
(290,228,o),
(243,243,o),
(192,243,cs),
(91,243,o),
(25,184,o),
(25,107,cs),
(25,35,o),
(85,-11,o),
(178,-11,cs)
);
},
{
closed = 1;
nodes = (
(144,49,o),
(96,68,o),
(96,108,cs),
(96,152,o),
(150,183,o),
(217,183,cs),
(279,183,o),
(332,156,o),
(332,118,cs),
(332,79,o),
(272,49,o),
(201,49,cs)
);
},
{
closed = 1;
nodes = (
(306,495,o),
(320,500,o),
(320,513,cs),
(320,519,o),
(305,548,o),
(279,591,cs),
(256,627,o),
(227,661,o),
(209,661,cs),
(178,661,o),
(160,646,o),
(160,623,cs),
(160,594,o),
(265,495,o),
(295,495,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
84 1 11 9 71 1 7 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 0 1 0 106 0 1 4 1 106 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 9 0 11 6 9 11 91 0 2 2 4 83 0 4 4 23 67 10 1 5 5 7 83 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 0 1 0 106 0 1 4 1 106 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 4 0 2 3 4 2 92 0 9 0 11 6 9 11 91 10 1 5 5 7 83 8 1 7 7 24 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
99 97 89 87 83 81 36 38 36 40 36 44 41 40 34 12 24
CALL[ ]	/* CallFunction */";
};
width = 468;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(242,-11,o),
(292,9,o),
(335,48,c),
(347,5,o),
(378,-11,o),
(414,-11,cs),
(453,-11,o),
(481,8,o),
(481,65,cs),
(481,80,o),
(479,88,o),
(468,88,cs),
(462,88,o),
(459,84,o),
(458,76,cs),
(455,47,o),
(453,19,o),
(415,19,cs),
(380,19,o),
(371,44,o),
(371,122,cs),
(371,173,o),
(374,262,o),
(374,268,cs),
(374,400,o),
(325,457,o),
(220,457,cs),
(128,457,o),
(56,412,o),
(56,339,cs),
(56,304,o),
(73,276,o),
(104,276,cs),
(127,276,o),
(140,291,o),
(140,311,cs),
(140,332,o),
(126,335,o),
(115,338,cs),
(104,341,o),
(95,342,o),
(95,358,cs),
(95,401,o),
(152,427,o),
(212,427,cs),
(300,427,o),
(334,368,o),
(334,264,cs),
(334,259,o),
(334,253,o),
(334,245,cs),
(333,236,o),
(333,228,o),
(333,219,cs),
(333,187,l),
(292,219,o),
(245,233,o),
(194,233,cs),
(94,233,o),
(26,180,o),
(26,106,cs),
(26,35,o),
(86,-11,o),
(179,-11,cs)
);
},
{
closed = 1;
nodes = (
(115,19,o),
(67,53,o),
(67,106,cs),
(67,165,o),
(124,203,o),
(199,203,cs),
(272,203,o),
(333,167,o),
(333,117,cs),
(333,64,o),
(262,19,o),
(184,19,cs)
);
},
{
closed = 1;
nodes = (
(268,510,o),
(271,514,o),
(271,521,cs),
(271,546,o),
(196,640,o),
(176,640,cs),
(165,640,o),
(157,637,o),
(157,618,cs),
(157,597,o),
(244,510,o),
(263,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 4 9 57 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 10 11 10 106 0 11 2 11 106 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 7 0 9 4 7 9 92 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 10 11 10 106 0 11 2 11 106 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 92 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
101 99 94 92 86 84 37 38 36 36 37 43 38 44 37 12 24
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = agrave;
unicode = 224;
},
{
glyphname = amacron;
kernLeft = a;
kernRight = a;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(240,-11,o),
(292,9,o),
(335,48,c),
(348,1,o),
(379,-11,o),
(414,-11,cs),
(462,-11,o),
(498,14,o),
(498,69,cs),
(498,100,o),
(486,108,o),
(466,108,cs),
(439,108,o),
(438,94,o),
(437,79,cs),
(437,72,o),
(435,67,o),
(428,67,cs),
(423,67,o),
(421,70,o),
(420,77,cs),
(419,84,o),
(419,99,o),
(419,124,cs),
(419,163,o),
(423,230,o),
(423,269,cs),
(423,394,o),
(365,465,o),
(236,465,cs),
(125,465,o),
(49,410,o),
(49,335,cs),
(49,303,o),
(62,265,o),
(108,265,cs),
(131,265,o),
(157,274,o),
(157,303,cs),
(157,318,o),
(150,329,o),
(137,335,cs),
(134,336,o),
(126,338,o),
(126,349,cs),
(126,375,o),
(178,397,o),
(228,397,cs),
(309,397,o),
(333,345,o),
(333,261,cs),
(333,203,l),
(333,203,l),
(292,228,o),
(252,238,o),
(204,238,cs),
(91,238,o),
(24,182,o),
(24,106,cs),
(24,34,o),
(84,-11,o),
(177,-11,cs)
);
},
{
closed = 1;
nodes = (
(143,57,o),
(116,75,o),
(116,110,cs),
(116,143,o),
(143,176,o),
(218,176,cs),
(285,176,o),
(329,150,o),
(329,122,cs),
(329,93,o),
(289,57,o),
(206,57,cs)
);
},
{
closed = 1;
nodes = (
(190,539,o),
(287,540,o),
(361,540,cs),
(390,540,o),
(397,567,o),
(397,582,cs),
(397,602,o),
(384,619,o),
(369,619,cs),
(353,619,o),
(335,619,o),
(314,618,cs),
(293,617,o),
(269,616,o),
(241,616,cs),
(199,616,o),
(150,618,o),
(120,618,cs),
(97,618,o),
(87,598,o),
(87,579,cs),
(87,560,o),
(101,539,o),
(120,539,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 3 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 8 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 12 1 10 0 11 2 10 11 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 12 1 10 0 11 2 10 11 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 12 1 10 0 11 2 10 11 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 12 1 10 0 11 2 10 11 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
82 81 95 88 81 107 82 99 79 77 37 36 36 36 36 41 40 43 36 13 24
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(241,-11,o),
(291,9,o),
(334,48,c),
(346,5,o),
(377,-11,o),
(413,-11,cs),
(453,-11,o),
(490,11,o),
(490,65,cs),
(490,82,o),
(486,98,o),
(469,98,cs),
(450,98,o),
(443,84,o),
(442,76,cs),
(439,59,o),
(437,49,o),
(422,49,cs),
(413,49,o),
(407,54,o),
(404,63,cs),
(401,72,o),
(400,92,o),
(400,123,cs),
(400,175,o),
(403,264,o),
(403,267,cs),
(403,397,o),
(344,462,o),
(226,462,cs),
(121,462,o),
(55,411,o),
(55,339,cs),
(55,304,o),
(71,269,o),
(112,269,cs),
(139,269,o),
(156,282,o),
(156,305,cs),
(156,326,o),
(140,335,o),
(131,336,cs),
(118,339,o),
(111,340,o),
(111,351,cs),
(111,385,o),
(179,402,o),
(218,402,cs),
(298,402,o),
(333,349,o),
(333,261,cs),
(333,258,o),
(333,253,o),
(333,246,cs),
(332,239,o),
(332,231,o),
(332,224,cs),
(332,197,l),
(332,197,l),
(290,228,o),
(243,243,o),
(192,243,cs),
(91,243,o),
(25,184,o),
(25,107,cs),
(25,35,o),
(85,-11,o),
(178,-11,cs)
);
},
{
closed = 1;
nodes = (
(144,49,o),
(96,68,o),
(96,108,cs),
(96,152,o),
(150,183,o),
(217,183,cs),
(279,183,o),
(332,156,o),
(332,118,cs),
(332,79,o),
(272,49,o),
(201,49,cs)
);
},
{
closed = 1;
nodes = (
(184,526,o),
(281,527,o),
(355,527,cs),
(378,527,o),
(384,549,o),
(384,560,cs),
(384,575,o),
(374,588,o),
(363,588,cs),
(347,588,o),
(329,588,o),
(308,587,cs),
(287,586,o),
(263,585,o),
(235,585,cs),
(193,585,o),
(144,587,o),
(114,587,cs),
(95,587,o),
(88,572,o),
(88,557,cs),
(88,542,o),
(99,526,o),
(114,526,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
67 1 9 7 54 1 5 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 12 1 10 0 11 2 10 11 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 12 1 10 0 11 2 10 11 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
87 86 98 91 86 110 87 102 82 80 36 38 36 38 36 40 36 44 38 13 35
CALL[ ]	/* CallFunction */";
};
width = 468;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(242,-11,o),
(292,9,o),
(335,48,c),
(347,5,o),
(378,-11,o),
(414,-11,cs),
(453,-11,o),
(481,8,o),
(481,65,cs),
(481,80,o),
(479,88,o),
(468,88,cs),
(462,88,o),
(459,84,o),
(458,76,cs),
(455,47,o),
(453,19,o),
(415,19,cs),
(380,19,o),
(371,44,o),
(371,122,cs),
(371,173,o),
(374,262,o),
(374,268,cs),
(374,400,o),
(325,457,o),
(220,457,cs),
(128,457,o),
(56,412,o),
(56,339,cs),
(56,304,o),
(73,276,o),
(104,276,cs),
(127,276,o),
(140,291,o),
(140,311,cs),
(140,332,o),
(126,335,o),
(115,338,cs),
(104,341,o),
(95,342,o),
(95,358,cs),
(95,401,o),
(152,427,o),
(212,427,cs),
(300,427,o),
(334,368,o),
(334,264,cs),
(334,259,o),
(334,253,o),
(334,245,cs),
(333,236,o),
(333,228,o),
(333,219,cs),
(333,187,l),
(292,219,o),
(245,233,o),
(194,233,cs),
(94,233,o),
(26,180,o),
(26,106,cs),
(26,35,o),
(86,-11,o),
(179,-11,cs)
);
},
{
closed = 1;
nodes = (
(115,19,o),
(67,53,o),
(67,106,cs),
(67,165,o),
(124,203,o),
(199,203,cs),
(272,203,o),
(333,167,o),
(333,117,cs),
(333,64,o),
(262,19,o),
(184,19,cs)
);
},
{
closed = 1;
nodes = (
(175,510,o),
(272,511,o),
(346,511,cs),
(361,511,o),
(365,522,o),
(365,529,cs),
(365,536,o),
(359,542,o),
(354,542,cs),
(338,542,o),
(320,542,o),
(299,541,cs),
(278,540,o),
(254,539,o),
(226,539,cs),
(184,539,o),
(135,541,o),
(105,541,cs),
(94,541,o),
(89,533,o),
(89,526,cs),
(89,519,o),
(96,510,o),
(105,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 4 9 57 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 12 1 10 0 11 2 10 11 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 12 1 10 0 11 2 10 11 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
91 90 102 95 90 114 91 106 86 84 37 38 36 36 37 43 38 44 37 13 24
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = amacron;
unicode = 257;
},
{
glyphname = aogonek;
kernLeft = a;
kernRight = a;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(481,-162,o),
(512,-133,o),
(512,-109,cs),
(512,-97,o),
(500,-85,o),
(487,-85,cs),
(467,-85,o),
(468,-109,o),
(427,-109,cs),
(412,-109,o),
(398,-103,o),
(398,-88,cs),
(398,-63,o),
(412,-26,o),
(437,-9,c),
(473,-1,o),
(498,24,o),
(498,69,cs),
(498,100,o),
(486,108,o),
(466,108,cs),
(439,108,o),
(438,94,o),
(437,79,cs),
(437,72,o),
(435,67,o),
(428,67,cs),
(423,67,o),
(421,70,o),
(420,77,cs),
(419,84,o),
(419,99,o),
(419,124,cs),
(419,163,o),
(423,230,o),
(423,269,cs),
(423,394,o),
(365,465,o),
(236,465,cs),
(125,465,o),
(49,410,o),
(49,335,cs),
(49,303,o),
(62,265,o),
(108,265,cs),
(131,265,o),
(157,274,o),
(157,303,cs),
(157,318,o),
(150,329,o),
(137,335,cs),
(134,336,o),
(126,338,o),
(126,349,cs),
(126,375,o),
(178,397,o),
(228,397,cs),
(309,397,o),
(333,345,o),
(333,261,cs),
(333,203,l),
(292,228,o),
(252,238,o),
(204,238,cs),
(91,238,o),
(24,182,o),
(24,106,cs),
(24,34,o),
(84,-11,o),
(177,-11,cs),
(240,-11,o),
(292,9,o),
(335,48,c),
(344,16,o),
(362,1,o),
(383,-6,c),
(358,-20,o),
(319,-45,o),
(319,-87,cs),
(319,-139,o),
(379,-162,o),
(429,-162,cs)
);
},
{
closed = 1;
nodes = (
(143,57,o),
(116,75,o),
(116,110,cs),
(116,143,o),
(143,176,o),
(218,176,cs),
(285,176,o),
(329,150,o),
(329,122,cs),
(329,93,o),
(289,57,o),
(206,57,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
25 1 11 2 68 1 6 7 13 10 2 1 6 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
25 1 11 2 68 1 6 7 13 10 2 1 10 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 4 3 2 3 4 2 104 0 7 11 6 11 7 6 104 0 9 1 8 1 9 8 104 0 2 0 11 7 2 11 91 0 8 12 1 0 8 0 88 0 3 3 5 83 0 5 5 23 67 10 1 6 6 1 83 0 1 1 24 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 4 3 2 3 4 2 104 0 7 11 6 11 7 6 104 0 9 1 8 1 9 8 104 0 5 0 3 4 5 3 91 0 2 0 11 7 2 11 91 0 8 12 1 0 8 0 88 10 1 6 6 1 83 0 1 1 24 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
0 4 3 2 3 4 2 104 0 7 11 6 11 7 6 104 0 6 10 11 6 10 102 0 9 1 8 1 9 8 104 0 5 0 3 4 5 3 91 0 2 0 11 7 2 11 91 0 8 12 1 0 8 0 88 0 10 10 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 108 106 100 98 89 87 84 82 72 70 66 64 55 53 45 43 32 30 23 21 17 15 0 95 1 95 13 15
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(241,-11,o),
(291,9,o),
(334,48,c),
(346,5,o),
(377,-11,o),
(413,-11,cs),
(453,-11,o),
(490,11,o),
(490,65,cs),
(490,82,o),
(486,98,o),
(469,98,cs),
(450,98,o),
(443,84,o),
(442,76,cs),
(439,59,o),
(437,49,o),
(422,49,cs),
(413,49,o),
(407,54,o),
(404,63,cs),
(401,72,o),
(400,92,o),
(400,123,cs),
(400,175,o),
(403,264,o),
(403,267,cs),
(403,397,o),
(344,462,o),
(226,462,cs),
(121,462,o),
(55,411,o),
(55,339,cs),
(55,304,o),
(71,269,o),
(112,269,cs),
(139,269,o),
(156,282,o),
(156,305,cs),
(156,326,o),
(140,335,o),
(131,336,cs),
(118,339,o),
(111,340,o),
(111,351,cs),
(111,385,o),
(179,402,o),
(218,402,cs),
(298,402,o),
(333,349,o),
(333,261,cs),
(333,258,o),
(333,253,o),
(333,246,cs),
(332,239,o),
(332,231,o),
(332,224,cs),
(332,197,l),
(332,197,l),
(290,228,o),
(243,243,o),
(192,243,cs),
(91,243,o),
(25,184,o),
(25,107,cs),
(25,35,o),
(85,-11,o),
(178,-11,cs)
);
},
{
closed = 1;
nodes = (
(144,49,o),
(96,68,o),
(96,108,cs),
(96,152,o),
(150,183,o),
(217,183,cs),
(279,183,o),
(332,156,o),
(332,118,cs),
(332,79,o),
(272,49,o),
(201,49,cs)
);
},
{
closed = 1;
nodes = (
(488,-163,o),
(518,-122,o),
(518,-112,cs),
(518,-101,o),
(512,-90,o),
(497,-90,cs),
(493,-90,o),
(489,-92,o),
(484,-96,cs),
(479,-101,o),
(473,-106,o),
(468,-111,cs),
(462,-117,o),
(451,-120,o),
(434,-120,cs),
(418,-120,o),
(403,-105,o),
(403,-89,cs),
(403,-70,o),
(417,-16,o),
(462,-1,c),
(412,0,l),
(412,0,l),
(398,-7,o),
(386,-14,o),
(375,-23,cs),
(356,-38,o),
(339,-59,o),
(339,-90,cs),
(339,-133,o),
(381,-163,o),
(440,-163,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
67 1 9 7 54 1 13 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 11 5 10 5 11 10 104 0 7 0 9 4 7 9 91 0 10 0 12 10 12 88 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 67 14 1 13 13 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 72 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 11 5 10 5 11 10 104 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 10 0 12 10 12 88 8 1 3 3 5 83 6 1 5 5 24 67 14 1 13 13 5 84 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
86 86 86 115 86 115 108 106 100 98 95 93 82 80 36 38 36 38 36 40 36 44 38 15 35
CALL[ ]	/* CallFunction */";
};
width = 468;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(473,-164,o),
(503,-123,o),
(503,-113,cs),
(503,-105,o),
(501,-97,o),
(489,-97,cs),
(470,-97,o),
(464,-137,o),
(427,-137,cs),
(396,-137,o),
(388,-107,o),
(388,-90,cs),
(388,-72,o),
(399,-29,o),
(431,-9,c),
(462,-4,o),
(481,17,o),
(481,65,cs),
(481,80,o),
(479,88,o),
(468,88,cs),
(462,88,o),
(459,84,o),
(458,76,cs),
(455,47,o),
(453,19,o),
(415,19,cs),
(380,19,o),
(371,44,o),
(371,122,cs),
(371,173,o),
(374,262,o),
(374,268,cs),
(374,400,o),
(325,457,o),
(220,457,cs),
(128,457,o),
(56,412,o),
(56,339,cs),
(56,304,o),
(73,276,o),
(104,276,cs),
(127,276,o),
(140,291,o),
(140,311,cs),
(140,332,o),
(126,335,o),
(115,338,cs),
(104,341,o),
(95,342,o),
(95,358,cs),
(95,401,o),
(152,427,o),
(212,427,cs),
(300,427,o),
(334,368,o),
(334,264,cs),
(334,259,o),
(334,253,o),
(334,245,cs),
(333,236,o),
(333,228,o),
(333,219,cs),
(333,187,l),
(292,219,o),
(245,233,o),
(194,233,cs),
(94,233,o),
(26,180,o),
(26,106,cs),
(26,35,o),
(86,-11,o),
(179,-11,cs),
(242,-11,o),
(292,9,o),
(335,48,c),
(346,12,o),
(368,-5,o),
(396,-9,c),
(375,-22,o),
(344,-50,o),
(344,-91,cs),
(344,-134,o),
(378,-164,o),
(425,-164,cs)
);
},
{
closed = 1;
nodes = (
(115,19,o),
(67,53,o),
(67,106,cs),
(67,165,o),
(124,203,o),
(199,203,cs),
(272,203,o),
(333,167,o),
(333,117,cs),
(333,64,o),
(262,19,o),
(184,19,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
102 1 4 11 88 1 3 4 85 1 8 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 1 0 9 0 1 9 104 0 4 11 3 11 4 3 104 0 6 8 5 8 6 5 104 0 9 0 11 4 9 11 91 0 5 0 7 5 7 88 0 0 0 2 83 0 2 2 23 67 10 1 3 3 8 83 0 8 8 24 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
0 1 0 9 0 1 9 104 0 4 11 3 11 4 3 104 0 6 8 5 8 6 5 104 0 2 0 0 1 2 0 91 0 9 0 11 4 9 11 91 0 5 0 7 5 7 88 10 1 3 3 8 83 0 8 8 24 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
117 115 107 105 100 98 44 38 35 46 37 43 38 44 37 12 24
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = aogonek;
unicode = 261;
},
{
glyphname = aring;
kernLeft = a;
kernRight = a;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(240,-11,o),
(292,9,o),
(335,48,c),
(348,1,o),
(379,-11,o),
(414,-11,cs),
(462,-11,o),
(498,14,o),
(498,69,cs),
(498,100,o),
(486,108,o),
(466,108,cs),
(439,108,o),
(438,94,o),
(437,79,cs),
(437,72,o),
(435,67,o),
(428,67,cs),
(423,67,o),
(421,70,o),
(420,77,cs),
(419,84,o),
(419,99,o),
(419,124,cs),
(419,163,o),
(423,230,o),
(423,269,cs),
(423,394,o),
(365,465,o),
(236,465,cs),
(125,465,o),
(49,410,o),
(49,335,cs),
(49,303,o),
(62,265,o),
(108,265,cs),
(131,265,o),
(157,274,o),
(157,303,cs),
(157,318,o),
(150,329,o),
(137,335,cs),
(134,336,o),
(126,338,o),
(126,349,cs),
(126,375,o),
(178,397,o),
(228,397,cs),
(309,397,o),
(333,345,o),
(333,261,cs),
(333,203,l),
(333,203,l),
(292,228,o),
(252,238,o),
(204,238,cs),
(91,238,o),
(24,182,o),
(24,106,cs),
(24,34,o),
(84,-11,o),
(177,-11,cs)
);
},
{
closed = 1;
nodes = (
(143,57,o),
(116,75,o),
(116,110,cs),
(116,143,o),
(143,176,o),
(218,176,cs),
(285,176,o),
(329,150,o),
(329,122,cs),
(329,93,o),
(289,57,o),
(206,57,cs)
);
},
{
closed = 1;
nodes = (
(285,510,o),
(318,533,o),
(318,581,cs),
(318,626,o),
(292,649,o),
(240,649,cs),
(199,649,o),
(165,630,o),
(165,579,cs),
(165,532,o),
(200,510,o),
(245,510,cs)
);
},
{
closed = 1;
nodes = (
(236,553,o),
(221,556,o),
(221,579,cs),
(221,590,o),
(224,598,o),
(229,602,cs),
(234,605,o),
(238,607,o),
(241,607,cs),
(252,607,o),
(263,599,o),
(263,580,cs),
(263,559,o),
(253,553,o),
(245,553,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 3 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 8 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
14 1 12 11 13 10 12 96 0 13 10 11 13 94 0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 11 0 10 2 11 10 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
14 1 12 11 13 11 12 13 104 0 13 10 11 13 10 102 0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 11 0 10 2 11 10 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
14 1 12 11 13 11 12 13 104 0 13 10 11 13 10 102 0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 11 0 10 2 11 10 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
14 1 12 11 13 11 12 13 104 0 13 10 11 13 10 102 0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 11 0 10 2 11 10 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 79 values pushed */
14 1 12 11 13 11 12 13 104 0 13 10 11 13 10 102 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 11 0 10 2 11 10 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
93 92 99 97 92 103 93 103 91 89 85 83 79 77 37 36 36 36 36 41 40 43 36 15 24
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(241,-11,o),
(291,9,o),
(334,48,c),
(346,5,o),
(377,-11,o),
(413,-11,cs),
(453,-11,o),
(490,11,o),
(490,65,cs),
(490,82,o),
(486,98,o),
(469,98,cs),
(450,98,o),
(443,84,o),
(442,76,cs),
(439,59,o),
(437,49,o),
(422,49,cs),
(413,49,o),
(407,54,o),
(404,63,cs),
(401,72,o),
(400,92,o),
(400,123,cs),
(400,175,o),
(403,264,o),
(403,267,cs),
(403,397,o),
(344,462,o),
(226,462,cs),
(121,462,o),
(55,411,o),
(55,339,cs),
(55,304,o),
(71,269,o),
(112,269,cs),
(139,269,o),
(156,282,o),
(156,305,cs),
(156,326,o),
(140,335,o),
(131,336,cs),
(118,339,o),
(111,340,o),
(111,351,cs),
(111,385,o),
(179,402,o),
(218,402,cs),
(298,402,o),
(333,349,o),
(333,261,cs),
(333,258,o),
(333,253,o),
(333,246,cs),
(332,239,o),
(332,231,o),
(332,224,cs),
(332,197,l),
(332,197,l),
(290,228,o),
(243,243,o),
(192,243,cs),
(91,243,o),
(25,184,o),
(25,107,cs),
(25,35,o),
(85,-11,o),
(178,-11,cs)
);
},
{
closed = 1;
nodes = (
(144,49,o),
(96,68,o),
(96,108,cs),
(96,152,o),
(150,183,o),
(217,183,cs),
(279,183,o),
(332,156,o),
(332,118,cs),
(332,79,o),
(272,49,o),
(201,49,cs)
);
},
{
closed = 1;
nodes = (
(268,510,o),
(302,533,o),
(302,581,cs),
(302,624,o),
(278,649,o),
(231,649,cs),
(191,649,o),
(160,619,o),
(160,579,cs),
(160,538,o),
(192,510,o),
(232,510,cs)
);
},
{
closed = 1;
nodes = (
(224,544,o),
(205,550,o),
(205,579,cs),
(205,607,o),
(220,615,o),
(231,615,cs),
(244,615,o),
(257,605,o),
(257,580,cs),
(257,565,o),
(254,555,o),
(247,551,cs),
(240,546,o),
(235,544,o),
(232,544,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
67 1 9 7 54 1 5 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
14 1 12 11 13 10 12 96 0 13 10 11 13 94 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 11 0 10 2 11 10 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
14 1 12 11 13 11 12 13 104 0 13 10 11 13 10 102 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 11 0 10 2 11 10 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 69 values pushed */
14 1 12 11 13 11 12 13 104 0 13 10 11 13 10 102 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 11 0 10 2 11 10 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
99 98 105 103 98 109 99 109 96 94 90 88 82 80 36 38 36 38 36 40 36 44 38 15 35
CALL[ ]	/* CallFunction */";
};
width = 468;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(242,-11,o),
(292,9,o),
(335,48,c),
(347,5,o),
(378,-11,o),
(414,-11,cs),
(453,-11,o),
(481,8,o),
(481,65,cs),
(481,80,o),
(479,88,o),
(468,88,cs),
(462,88,o),
(459,84,o),
(458,76,cs),
(455,47,o),
(453,19,o),
(415,19,cs),
(380,19,o),
(371,44,o),
(371,122,cs),
(371,173,o),
(374,262,o),
(374,268,cs),
(374,400,o),
(325,457,o),
(220,457,cs),
(128,457,o),
(56,412,o),
(56,339,cs),
(56,304,o),
(73,276,o),
(104,276,cs),
(127,276,o),
(140,291,o),
(140,311,cs),
(140,332,o),
(126,335,o),
(115,338,cs),
(104,341,o),
(95,342,o),
(95,358,cs),
(95,401,o),
(152,427,o),
(212,427,cs),
(300,427,o),
(334,368,o),
(334,264,cs),
(334,259,o),
(334,253,o),
(334,245,cs),
(333,236,o),
(333,228,o),
(333,219,cs),
(333,187,l),
(292,219,o),
(245,233,o),
(194,233,cs),
(94,233,o),
(26,180,o),
(26,106,cs),
(26,35,o),
(86,-11,o),
(179,-11,cs)
);
},
{
closed = 1;
nodes = (
(115,19,o),
(67,53,o),
(67,106,cs),
(67,165,o),
(124,203,o),
(199,203,cs),
(272,203,o),
(333,167,o),
(333,117,cs),
(333,64,o),
(262,19,o),
(184,19,cs)
);
},
{
closed = 1;
nodes = (
(245,510,o),
(279,533,o),
(279,581,cs),
(279,617,o),
(258,649,o),
(218,649,cs),
(179,649,o),
(152,619,o),
(152,579,cs),
(152,538,o),
(179,510,o),
(214,510,cs)
);
},
{
closed = 1;
nodes = (
(191,529,o),
(182,550,o),
(182,579,cs),
(182,607,o),
(191,629,o),
(216,629,cs),
(243,629,o),
(249,605,o),
(249,580,cs),
(249,549,o),
(237,529,o),
(214,529,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 4 9 57 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 11 14 1 12 13 11 12 91 0 13 0 10 2 13 10 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 11 14 1 12 13 11 12 91 0 13 0 10 2 13 10 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
103 102 109 107 102 113 103 113 100 98 94 92 86 84 37 38 36 36 37 43 38 44 37 15 24
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = aring;
unicode = 229;
},
{
glyphname = aringacute;
kernLeft = a;
kernRight = a;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(240,-11,o),
(292,9,o),
(335,48,c),
(348,1,o),
(379,-11,o),
(414,-11,cs),
(462,-11,o),
(498,14,o),
(498,69,cs),
(498,100,o),
(486,108,o),
(466,108,cs),
(439,108,o),
(438,94,o),
(437,79,cs),
(437,72,o),
(435,67,o),
(428,67,cs),
(423,67,o),
(421,70,o),
(420,77,cs),
(419,84,o),
(419,99,o),
(419,124,cs),
(419,163,o),
(423,230,o),
(423,269,cs),
(423,394,o),
(365,465,o),
(236,465,cs),
(125,465,o),
(49,410,o),
(49,335,cs),
(49,303,o),
(62,265,o),
(108,265,cs),
(131,265,o),
(157,274,o),
(157,303,cs),
(157,318,o),
(150,329,o),
(137,335,cs),
(134,336,o),
(126,338,o),
(126,349,cs),
(126,375,o),
(178,397,o),
(228,397,cs),
(309,397,o),
(333,345,o),
(333,261,cs),
(333,203,l),
(333,203,l),
(292,228,o),
(252,238,o),
(204,238,cs),
(91,238,o),
(24,182,o),
(24,106,cs),
(24,34,o),
(84,-11,o),
(177,-11,cs)
);
},
{
closed = 1;
nodes = (
(143,57,o),
(116,75,o),
(116,110,cs),
(116,143,o),
(143,176,o),
(218,176,cs),
(285,176,o),
(329,150,o),
(329,122,cs),
(329,93,o),
(289,57,o),
(206,57,cs)
);
},
{
closed = 1;
nodes = (
(285,510,o),
(318,533,o),
(318,581,cs),
(318,626,o),
(292,649,o),
(240,649,cs),
(199,649,o),
(165,630,o),
(165,579,cs),
(165,532,o),
(200,510,o),
(245,510,cs)
);
},
{
closed = 1;
nodes = (
(236,553,o),
(221,556,o),
(221,579,cs),
(221,590,o),
(224,598,o),
(229,602,cs),
(234,605,o),
(238,607,o),
(241,607,cs),
(252,607,o),
(263,599,o),
(263,580,cs),
(263,559,o),
(253,553,o),
(245,553,cs)
);
},
{
closed = 1;
nodes = (
(241,672,o),
(336,742,o),
(336,778,cs),
(336,805,o),
(327,826,o),
(283,826,cs),
(258,826,o),
(229,794,o),
(208,762,cs),
(189,733,o),
(171,697,o),
(171,694,cs),
(171,679,o),
(193,672,o),
(208,672,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
82 1 11 9 58 1 5 6 70 1 7 5 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
82 1 11 9 58 1 5 6 70 1 7 10 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 81 values pushed */
0 0 1 13 1 0 13 104 16 1 14 13 15 12 14 96 0 15 12 13 15 94 0 3 2 9 2 3 9 104 0 6 11 5 5 6 96 0 13 0 12 4 13 12 92 0 9 0 11 6 9 11 91 0 1 1 12 67 0 2 2 4 83 0 4 4 23 67 10 1 5 5 7 84 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 83 values pushed */
0 0 1 13 1 0 13 104 16 1 14 13 15 13 14 15 104 0 15 12 13 15 12 102 0 3 2 9 2 3 9 104 0 6 11 5 5 6 96 0 13 0 12 4 13 12 92 0 9 0 11 6 9 11 91 0 1 1 12 67 0 2 2 4 83 0 4 4 23 67 10 1 5 5 7 84 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 81 values pushed */
0 0 1 13 1 0 13 104 16 1 14 13 15 13 14 15 104 0 15 12 13 15 12 102 0 3 2 9 2 3 9 104 0 6 11 5 5 6 96 0 13 0 12 4 13 12 92 0 4 0 2 3 4 2 91 0 9 0 11 6 9 11 91 0 1 1 12 67 10 1 5 5 7 84 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 91 values pushed */
0 0 1 13 1 0 13 104 16 1 14 13 15 13 14 15 104 0 15 12 13 15 12 102 0 3 2 9 2 3 9 104 0 6 11 5 5 6 96 0 13 0 12 4 13 12 92 0 4 0 2 3 4 2 91 0 9 0 11 6 9 11 91 0 1 1 12 67 0 5 5 7 84 8 1 7 7 24 67 0 10 10 7 83 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 92 values pushed */
0 0 1 13 1 0 13 104 16 1 14 13 15 13 14 15 104 0 15 12 13 15 12 102 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 13 0 12 4 13 12 92 0 4 0 2 3 4 2 91 0 9 0 11 6 9 11 91 0 1 1 12 67 0 5 5 7 84 8 1 7 7 24 67 0 10 10 7 83 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 92 values pushed */
0 0 1 13 1 0 13 104 16 1 14 13 15 13 14 15 104 0 15 12 13 15 12 102 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 13 0 12 4 13 12 92 0 4 0 2 3 4 2 91 0 9 0 11 6 9 11 91 0 1 1 14 67 0 5 5 7 84 8 1 7 7 24 67 0 10 10 7 83 8 1 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
109 108 115 113 108 119 109 119 107 105 101 99 95 93 87 85 80 78 36 36 36 41 40 43 38 38 36 17 24
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(241,-11,o),
(291,9,o),
(334,48,c),
(346,5,o),
(377,-11,o),
(413,-11,cs),
(453,-11,o),
(490,11,o),
(490,65,cs),
(490,82,o),
(486,98,o),
(469,98,cs),
(450,98,o),
(443,84,o),
(442,76,cs),
(439,59,o),
(437,49,o),
(422,49,cs),
(413,49,o),
(407,54,o),
(404,63,cs),
(401,72,o),
(400,92,o),
(400,123,cs),
(400,175,o),
(403,264,o),
(403,267,cs),
(403,397,o),
(344,462,o),
(226,462,cs),
(121,462,o),
(55,411,o),
(55,339,cs),
(55,304,o),
(71,269,o),
(112,269,cs),
(139,269,o),
(156,282,o),
(156,305,cs),
(156,326,o),
(140,335,o),
(131,336,cs),
(118,339,o),
(111,340,o),
(111,351,cs),
(111,385,o),
(179,402,o),
(218,402,cs),
(298,402,o),
(333,349,o),
(333,261,cs),
(333,258,o),
(333,253,o),
(333,246,cs),
(332,239,o),
(332,231,o),
(332,224,cs),
(332,197,l),
(332,197,l),
(290,228,o),
(243,243,o),
(192,243,cs),
(91,243,o),
(25,184,o),
(25,107,cs),
(25,35,o),
(85,-11,o),
(178,-11,cs)
);
},
{
closed = 1;
nodes = (
(144,49,o),
(96,68,o),
(96,108,cs),
(96,152,o),
(150,183,o),
(217,183,cs),
(279,183,o),
(332,156,o),
(332,118,cs),
(332,79,o),
(272,49,o),
(201,49,cs)
);
},
{
closed = 1;
nodes = (
(268,510,o),
(302,533,o),
(302,581,cs),
(302,624,o),
(278,649,o),
(231,649,cs),
(191,649,o),
(160,619,o),
(160,579,cs),
(160,538,o),
(192,510,o),
(232,510,cs)
);
},
{
closed = 1;
nodes = (
(224,544,o),
(205,550,o),
(205,579,cs),
(205,607,o),
(220,615,o),
(231,615,cs),
(244,615,o),
(257,605,o),
(257,580,cs),
(257,565,o),
(254,555,o),
(247,551,cs),
(240,546,o),
(235,544,o),
(232,544,cs)
);
},
{
closed = 1;
nodes = (
(226,676,o),
(316,753,o),
(316,783,cs),
(316,806,o),
(308,821,o),
(277,821,cs),
(258,821,o),
(231,792,o),
(210,761,cs),
(191,734,o),
(172,699,o),
(172,694,cs),
(172,681,o),
(186,676,o),
(197,676,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
82 1 11 9 69 1 7 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
0 0 1 13 1 0 13 104 16 1 14 13 15 12 14 96 0 15 12 13 15 94 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 13 0 12 4 13 12 91 0 9 0 11 6 9 11 91 0 1 1 12 67 0 2 2 4 83 0 4 4 23 67 10 1 5 5 7 83 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 84 values pushed */
0 0 1 13 1 0 13 104 16 1 14 13 15 13 14 15 104 0 15 12 13 15 12 102 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 13 0 12 4 13 12 91 0 9 0 11 6 9 11 91 0 1 1 12 67 0 2 2 4 83 0 4 4 23 67 10 1 5 5 7 83 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
0 0 1 13 1 0 13 104 16 1 14 13 15 13 14 15 104 0 15 12 13 15 12 102 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 13 0 12 4 13 12 91 0 4 0 2 3 4 2 92 0 9 0 11 6 9 11 91 0 1 1 12 67 10 1 5 5 7 83 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 82 values pushed */
0 0 1 13 1 0 13 104 16 1 14 13 15 13 14 15 104 0 15 12 13 15 12 102 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 13 0 12 4 13 12 91 0 4 0 2 3 4 2 92 0 9 0 11 6 9 11 91 0 1 1 14 67 10 1 5 5 7 83 8 1 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
114 113 120 118 113 124 114 124 111 109 105 103 97 95 87 85 81 79 36 38 36 40 36 44 39 38 36 17 24
CALL[ ]	/* CallFunction */";
};
width = 468;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(242,-11,o),
(292,9,o),
(335,48,c),
(347,5,o),
(378,-11,o),
(414,-11,cs),
(453,-11,o),
(481,8,o),
(481,65,cs),
(481,80,o),
(479,88,o),
(468,88,cs),
(462,88,o),
(459,84,o),
(458,76,cs),
(455,47,o),
(453,19,o),
(415,19,cs),
(380,19,o),
(371,44,o),
(371,122,cs),
(371,173,o),
(374,262,o),
(374,268,cs),
(374,400,o),
(325,457,o),
(220,457,cs),
(128,457,o),
(56,412,o),
(56,339,cs),
(56,304,o),
(73,276,o),
(104,276,cs),
(127,276,o),
(140,291,o),
(140,311,cs),
(140,332,o),
(126,335,o),
(115,338,cs),
(104,341,o),
(95,342,o),
(95,358,cs),
(95,401,o),
(152,427,o),
(212,427,cs),
(300,427,o),
(334,368,o),
(334,264,cs),
(334,259,o),
(334,253,o),
(334,245,cs),
(333,236,o),
(333,228,o),
(333,219,cs),
(333,187,l),
(292,219,o),
(245,233,o),
(194,233,cs),
(94,233,o),
(26,180,o),
(26,106,cs),
(26,35,o),
(86,-11,o),
(179,-11,cs)
);
},
{
closed = 1;
nodes = (
(115,19,o),
(67,53,o),
(67,106,cs),
(67,165,o),
(124,203,o),
(199,203,cs),
(272,203,o),
(333,167,o),
(333,117,cs),
(333,64,o),
(262,19,o),
(184,19,cs)
);
},
{
closed = 1;
nodes = (
(245,510,o),
(279,533,o),
(279,581,cs),
(279,617,o),
(258,649,o),
(218,649,cs),
(179,649,o),
(152,619,o),
(152,579,cs),
(152,538,o),
(179,510,o),
(214,510,cs)
);
},
{
closed = 1;
nodes = (
(191,529,o),
(182,550,o),
(182,579,cs),
(182,607,o),
(191,629,o),
(216,629,cs),
(243,629,o),
(249,605,o),
(249,580,cs),
(249,549,o),
(237,529,o),
(214,529,cs)
);
},
{
closed = 1;
nodes = (
(200,683,o),
(287,770,o),
(287,791,cs),
(287,810,o),
(279,813,o),
(268,813,cs),
(248,813,o),
(173,719,o),
(173,694,cs),
(173,687,o),
(176,683,o),
(181,683,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 4 9 57 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 14 15 11 15 14 11 104 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 11 16 1 12 13 11 12 91 0 13 0 10 2 13 10 91 0 7 0 9 4 7 9 91 0 15 15 14 67 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 75 values pushed */
0 14 15 11 15 14 11 104 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 11 16 1 12 13 11 12 91 0 13 0 10 2 13 10 91 0 2 0 0 1 2 0 92 0 7 0 9 4 7 9 91 0 15 15 14 67 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
103 102 127 125 120 118 109 107 102 113 103 113 100 98 94 92 86 84 37 38 36 36 37 43 38 44 37 17 24
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = aringacute;
unicode = 507;
},
{
glyphname = atilde;
kernLeft = a;
kernRight = a;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(240,-11,o),
(292,9,o),
(335,48,c),
(348,1,o),
(379,-11,o),
(414,-11,cs),
(462,-11,o),
(498,14,o),
(498,69,cs),
(498,100,o),
(486,108,o),
(466,108,cs),
(439,108,o),
(438,94,o),
(437,79,cs),
(437,72,o),
(435,67,o),
(428,67,cs),
(423,67,o),
(421,70,o),
(420,77,cs),
(419,84,o),
(419,99,o),
(419,124,cs),
(419,163,o),
(423,230,o),
(423,269,cs),
(423,394,o),
(365,465,o),
(236,465,cs),
(125,465,o),
(49,410,o),
(49,335,cs),
(49,303,o),
(62,265,o),
(108,265,cs),
(131,265,o),
(157,274,o),
(157,303,cs),
(157,318,o),
(150,329,o),
(137,335,cs),
(134,336,o),
(126,338,o),
(126,349,cs),
(126,375,o),
(178,397,o),
(228,397,cs),
(309,397,o),
(333,345,o),
(333,261,cs),
(333,203,l),
(333,203,l),
(292,228,o),
(252,238,o),
(204,238,cs),
(91,238,o),
(24,182,o),
(24,106,cs),
(24,34,o),
(84,-11,o),
(177,-11,cs)
);
},
{
closed = 1;
nodes = (
(143,57,o),
(116,75,o),
(116,110,cs),
(116,143,o),
(143,176,o),
(218,176,cs),
(285,176,o),
(329,150,o),
(329,122,cs),
(329,93,o),
(289,57,o),
(206,57,cs)
);
},
{
closed = 1;
nodes = (
(107,498,o),
(131,523,o),
(170,523,cs),
(209,523,o),
(251,499,o),
(307,499,cs),
(340,499,o),
(418,517,o),
(418,574,cs),
(418,595,o),
(403,609,o),
(396,609,cs),
(391,609,o),
(381,605,o),
(366,596,cs),
(347,585,o),
(325,579,o),
(306,579,cs),
(267,579,o),
(205,607,o),
(169,607,cs),
(144,607,o),
(122,601,o),
(101,589,cs),
(82,578,o),
(67,563,o),
(67,534,cs),
(67,514,o),
(74,498,o),
(86,498,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 3 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 8 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 12 1 10 0 14 13 10 14 91 0 11 15 1 13 2 11 13 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 12 1 10 0 14 13 10 14 91 0 11 15 1 13 2 11 13 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 12 1 10 0 14 13 10 14 91 0 11 15 1 13 2 11 13 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 12 1 10 0 14 13 10 14 91 0 11 15 1 13 2 11 13 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
115 113 110 108 105 103 97 95 92 90 87 85 79 77 37 36 36 36 36 41 40 43 36 16 24
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(241,-11,o),
(291,9,o),
(334,48,c),
(346,5,o),
(377,-11,o),
(413,-11,cs),
(453,-11,o),
(490,11,o),
(490,65,cs),
(490,82,o),
(486,98,o),
(469,98,cs),
(450,98,o),
(443,84,o),
(442,76,cs),
(439,59,o),
(437,49,o),
(422,49,cs),
(413,49,o),
(407,54,o),
(404,63,cs),
(401,72,o),
(400,92,o),
(400,123,cs),
(400,175,o),
(403,264,o),
(403,267,cs),
(403,397,o),
(344,462,o),
(226,462,cs),
(121,462,o),
(55,411,o),
(55,339,cs),
(55,304,o),
(71,269,o),
(112,269,cs),
(139,269,o),
(156,282,o),
(156,305,cs),
(156,326,o),
(140,335,o),
(131,336,cs),
(118,339,o),
(111,340,o),
(111,351,cs),
(111,385,o),
(179,402,o),
(218,402,cs),
(298,402,o),
(333,349,o),
(333,261,cs),
(333,258,o),
(333,253,o),
(333,246,cs),
(332,239,o),
(332,231,o),
(332,224,cs),
(332,197,l),
(332,197,l),
(290,228,o),
(243,243,o),
(192,243,cs),
(91,243,o),
(25,184,o),
(25,107,cs),
(25,35,o),
(85,-11,o),
(178,-11,cs)
);
},
{
closed = 1;
nodes = (
(144,49,o),
(96,68,o),
(96,108,cs),
(96,152,o),
(150,183,o),
(217,183,cs),
(279,183,o),
(332,156,o),
(332,118,cs),
(332,79,o),
(272,49,o),
(201,49,cs)
);
},
{
closed = 1;
nodes = (
(97,507,o),
(124,532,o),
(164,532,cs),
(203,532,o),
(245,508,o),
(301,508,cs),
(357,508,o),
(390,530,o),
(403,553,cs),
(406,559,o),
(408,565,o),
(408,572,cs),
(408,588,o),
(397,600,o),
(390,600,cs),
(387,600,o),
(383,599,o),
(380,598,cs),
(376,596,o),
(369,592,o),
(360,587,cs),
(337,576,o),
(317,570,o),
(300,570,cs),
(261,570,o),
(199,598,o),
(163,598,cs),
(138,598,o),
(116,592,o),
(95,580,cs),
(85,574,o),
(78,569,o),
(74,564,cs),
(70,559,o),
(67,555,o),
(66,552,cs),
(64,547,o),
(63,541,o),
(63,535,cs),
(63,520,o),
(69,507,o),
(80,507,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
105 1 15 13 92 1 11 9 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 7 6 13 6 7 13 104 0 10 15 9 15 10 9 104 2 1 0 0 4 3 0 4 91 0 1 5 1 3 8 1 3 91 0 13 0 15 10 13 15 91 0 6 6 8 83 0 8 8 23 67 14 1 9 9 11 84 12 1 11 11 24 11 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 7 6 13 6 7 13 104 0 10 15 9 15 10 9 104 2 1 0 0 4 3 0 4 91 0 1 5 1 3 8 1 3 91 0 8 0 6 7 8 6 91 0 13 0 15 10 13 15 91 14 1 9 9 11 84 12 1 11 11 24 11 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
120 118 110 108 104 102 96 94 90 88 82 80 76 74 36 44 41 35 35 38 35 35 37 16 35
CALL[ ]	/* CallFunction */";
};
width = 468;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(242,-11,o),
(292,9,o),
(335,48,c),
(347,5,o),
(378,-11,o),
(414,-11,cs),
(453,-11,o),
(481,8,o),
(481,65,cs),
(481,80,o),
(479,88,o),
(468,88,cs),
(462,88,o),
(459,84,o),
(458,76,cs),
(455,47,o),
(453,19,o),
(415,19,cs),
(380,19,o),
(371,44,o),
(371,122,cs),
(371,173,o),
(374,262,o),
(374,268,cs),
(374,400,o),
(325,457,o),
(220,457,cs),
(128,457,o),
(56,412,o),
(56,339,cs),
(56,304,o),
(73,276,o),
(104,276,cs),
(127,276,o),
(140,291,o),
(140,311,cs),
(140,332,o),
(126,335,o),
(115,338,cs),
(104,341,o),
(95,342,o),
(95,358,cs),
(95,401,o),
(152,427,o),
(212,427,cs),
(300,427,o),
(334,368,o),
(334,264,cs),
(334,259,o),
(334,253,o),
(334,245,cs),
(333,236,o),
(333,228,o),
(333,219,cs),
(333,187,l),
(292,219,o),
(245,233,o),
(194,233,cs),
(94,233,o),
(26,180,o),
(26,106,cs),
(26,35,o),
(86,-11,o),
(179,-11,cs)
);
},
{
closed = 1;
nodes = (
(115,19,o),
(67,53,o),
(67,106,cs),
(67,165,o),
(124,203,o),
(199,203,cs),
(272,203,o),
(333,167,o),
(333,117,cs),
(333,64,o),
(262,19,o),
(184,19,cs)
);
},
{
closed = 1;
nodes = (
(88,522,o),
(115,547,o),
(156,547,cs),
(195,547,o),
(237,523,o),
(293,523,cs),
(346,523,o),
(395,543,o),
(395,568,cs),
(395,577,o),
(389,585,o),
(382,585,cs),
(379,585,o),
(375,584,o),
(372,583,cs),
(368,581,o),
(361,577,o),
(352,572,cs),
(329,561,o),
(309,555,o),
(292,555,cs),
(253,555,o),
(191,583,o),
(155,583,cs),
(130,583,o),
(108,577,o),
(87,565,cs),
(68,554,o),
(58,544,o),
(58,537,cs),
(58,530,o),
(65,522,o),
(72,522,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 4 9 57 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 12 1 10 0 14 13 10 14 91 0 11 15 1 13 2 11 13 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 12 1 10 0 14 13 10 14 91 0 11 15 1 13 2 11 13 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
123 121 118 116 113 111 105 103 100 98 95 93 86 84 37 38 36 36 37 43 38 44 37 16 24
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = atilde;
unicode = 227;
},
{
glyphname = ae;
kernLeft = a;
kernRight = ae;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(237,-11,o),
(327,7,o),
(392,82,c),
(419,39,o),
(448,-11,o),
(559,-11,cs),
(729,-11,o),
(792,90,o),
(792,158,cs),
(792,181,o),
(789,211,o),
(750,211,cs),
(717,211,o),
(711,185,o),
(707,171,cs),
(689,76,o),
(592,69,o),
(549,69,cs),
(457,69,o),
(429,132,o),
(429,194,cs),
(429,206,o),
(430,220,o),
(431,235,c),
(465,235,o),
(493,235,o),
(515,236,cs),
(537,236,o),
(551,236,o),
(556,236,cs),
(616,236,o),
(661,237,o),
(690,239,cs),
(719,240,o),
(736,242,o),
(741,243,cs),
(756,246,o),
(778,252,o),
(778,283,cs),
(778,389,o),
(699,477,o),
(562,477,cs),
(452,477,o),
(401,417,o),
(387,358,c),
(365,427,o),
(297,457,o),
(220,457,cs),
(127,457,o),
(56,407,o),
(56,345,cs),
(56,304,o),
(87,276,o),
(131,276,cs),
(159,276,o),
(187,286,o),
(187,314,cs),
(187,330,o),
(180,341,o),
(166,346,cs),
(163,347,o),
(159,349,o),
(154,350,cs),
(149,351,o),
(146,355,o),
(146,361,cs),
(146,378,o),
(191,379,o),
(214,379,cs),
(278,379,o),
(334,339,o),
(334,261,cs),
(334,256,o),
(334,250,o),
(334,243,cs),
(333,235,o),
(333,222,o),
(333,203,c),
(293,239,o),
(247,257,o),
(194,257,cs),
(92,257,o),
(26,191,o),
(26,111,cs),
(26,34,o),
(83,-11,o),
(179,-11,cs)
);
},
{
closed = 1;
nodes = (
(163,67,o),
(118,82,o),
(118,119,cs),
(118,150,o),
(148,179,o),
(223,179,cs),
(262,179,o),
(290,172,o),
(307,159,cs),
(324,145,o),
(333,131,o),
(333,117,cs),
(333,102,o),
(323,90,o),
(304,81,cs),
(284,72,o),
(257,67,o),
(223,67,cs)
);
},
{
closed = 1;
nodes = (
(442,340,o),
(475,397,o),
(558,397,cs),
(625,397,o),
(682,349,o),
(682,329,cs),
(682,326,o),
(681,324,o),
(678,321,cs),
(675,318,o),
(668,317,o),
(657,317,cs),
(435,313,l),
(435,313,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
82 1 12 5 48 1 11 1 33 1 0 11 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 6 12 4 12 6 4 104 0 1 9 11 9 1 11 104 15 1 12 14 1 9 1 12 9 91 0 4 0 11 0 4 11 91 0 13 13 8 83 0 8 8 23 67 0 5 5 7 83 0 7 7 23 67 10 1 0 0 2 83 3 1 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 6 12 4 12 6 4 104 0 1 9 11 9 1 11 104 0 8 0 13 5 8 13 91 0 7 0 5 12 7 5 91 15 1 12 14 1 9 1 12 9 91 0 4 0 11 0 4 11 91 10 1 0 0 2 83 3 1 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
116 115 0 0 124 122 115 128 116 128 113 111 107 105 0 102 0 98 40 38 42 56 38 40 40 40 39 16 24
CALL[ ]	/* CallFunction */";
};
width = 815;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(241,-11,o),
(319,9,o),
(382,82,c),
(411,37,o),
(450,-11,o),
(553,-11,cs),
(700,-11,o),
(771,90,o),
(771,169,cs),
(771,188,o),
(767,209,o),
(739,209,cs),
(712,209,o),
(707,188,o),
(707,177,c),
(696,84,o),
(613,51,o),
(546,51,cs),
(442,51,o),
(408,129,o),
(408,203,cs),
(408,215,o),
(409,229,o),
(410,244,c),
(465,244,o),
(463,245,o),
(512,245,cs),
(530,245,o),
(702,245,o),
(721,250,cs),
(742,255,o),
(757,264,o),
(757,291,cs),
(757,374,o),
(692,477,o),
(556,477,cs),
(458,477,o),
(402,424,o),
(377,358,c),
(357,426,o),
(296,457,o),
(220,457,cs),
(127,457,o),
(56,409,o),
(56,343,cs),
(56,304,o),
(81,276,o),
(120,276,cs),
(147,276,o),
(168,288,o),
(168,313,cs),
(168,332,o),
(157,340,o),
(145,343,cs),
(142,344,o),
(138,346,o),
(133,347,cs),
(128,348,o),
(125,353,o),
(125,360,cs),
(125,387,o),
(177,397,o),
(213,397,cs),
(288,397,o),
(334,350,o),
(334,262,cs),
(334,255,o),
(334,248,o),
(334,240,cs),
(333,232,o),
(333,218,o),
(333,197,c),
(293,231,o),
(247,248,o),
(194,248,cs),
(92,248,o),
(26,186,o),
(26,109,cs),
(26,34,o),
(84,-11,o),
(179,-11,cs)
);
},
{
closed = 1;
nodes = (
(143,49,o),
(97,71,o),
(97,114,cs),
(97,155,o),
(138,188,o),
(213,188,cs),
(289,188,o),
(333,153,o),
(333,117,cs),
(333,78,o),
(279,49,o),
(207,49,cs)
);
},
{
closed = 1;
nodes = (
(425,349,o),
(463,415,o),
(552,415,cs),
(642,415,o),
(683,348,o),
(683,322,cs),
(683,315,o),
(680,308,o),
(667,308,cs),
(414,304,l),
(414,304,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
77 1 12 5 46 1 11 1 31 13 2 0 11 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 6 12 4 12 6 4 104 0 1 9 11 9 1 11 104 15 1 12 14 1 9 1 12 9 91 0 4 0 11 0 4 11 91 0 13 13 8 83 0 8 8 23 67 0 5 5 7 83 0 7 7 23 67 10 1 0 0 2 83 3 1 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 6 12 4 12 6 4 104 0 1 9 11 9 1 11 104 0 8 0 13 5 8 13 91 0 7 0 5 12 7 5 91 15 1 12 14 1 9 1 12 9 91 0 4 0 11 0 4 11 91 10 1 0 0 2 83 3 1 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
113 112 0 0 121 119 112 125 113 125 110 108 104 102 0 99 0 91 38 38 44 38 38 40 38 40 39 16 24
CALL[ ]	/* CallFunction */";
};
width = 795;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(238,-11,o),
(305,7,o),
(368,82,c),
(403,25,o),
(460,-11,o),
(544,-11,cs),
(655,-11,o),
(741,81,o),
(741,187,cs),
(741,199,o),
(735,205,o),
(724,205,cs),
(713,205,o),
(707,199,o),
(707,187,cs),
(707,101,o),
(650,21,o),
(542,21,cs),
(422,21,o),
(378,122,o),
(378,218,cs),
(378,230,o),
(379,244,o),
(380,259,c),
(433,259,o),
(502,260,o),
(551,260,cs),
(578,260,o),
(604,260,o),
(629,260,cs),
(654,260,o),
(675,260,o),
(692,261,cs),
(716,262,o),
(727,283,o),
(727,304,cs),
(727,359,o),
(673,477,o),
(547,477,cs),
(467,477,o),
(400,433,o),
(363,358,c),
(343,426,o),
(296,457,o),
(220,457,cs),
(128,457,o),
(56,412,o),
(56,339,cs),
(56,304,o),
(73,276,o),
(104,276,cs),
(127,276,o),
(140,291,o),
(140,311,cs),
(140,332,o),
(126,335,o),
(115,338,cs),
(104,341,o),
(95,342,o),
(95,358,cs),
(95,401,o),
(152,427,o),
(212,427,cs),
(300,427,o),
(334,368,o),
(334,264,cs),
(334,234,o),
(333,226,o),
(333,187,c),
(292,219,o),
(245,233,o),
(194,233,cs),
(94,233,o),
(26,180,o),
(26,106,cs),
(26,35,o),
(86,-11,o),
(179,-11,cs)
);
},
{
closed = 1;
nodes = (
(115,19,o),
(67,53,o),
(67,106,cs),
(67,165,o),
(124,203,o),
(199,203,cs),
(272,203,o),
(333,167,o),
(333,117,cs),
(333,64,o),
(262,19,o),
(184,19,cs)
);
},
{
closed = 1;
nodes = (
(384,289,l),
(384,289,l),
(397,364,o),
(445,445,o),
(544,445,cs),
(643,445,o),
(684,364,o),
(684,311,cs),
(684,299,o),
(678,293,o),
(667,293,cs),
(384,289,l),
(384,289,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
72 1 12 5 39 25 2 0 11 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 6 12 9 12 6 9 104 0 1 4 11 4 1 11 104 15 1 12 14 1 9 4 12 9 91 0 4 0 11 0 4 11 91 0 13 13 8 83 0 8 8 23 67 0 5 5 7 83 0 7 7 23 67 10 1 0 0 2 83 3 1 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 6 12 9 12 6 9 104 0 1 4 11 4 1 11 104 0 8 0 13 5 8 13 91 0 7 0 5 12 7 5 91 15 1 12 14 1 9 4 12 9 91 0 4 0 11 0 4 11 91 10 1 0 0 2 83 3 1 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
110 109 0 0 117 115 109 121 110 121 105 103 95 93 0 90 0 82 36 38 44 41 38 36 37 37 39 16 24
CALL[ ]	/* CallFunction */";
};
width = 767;
}
);
note = ae;
unicode = 230;
},
{
glyphname = aeacute;
kernLeft = a;
kernRight = ae;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(237,-11,o),
(327,7,o),
(392,82,c),
(419,39,o),
(448,-11,o),
(559,-11,cs),
(729,-11,o),
(792,90,o),
(792,158,cs),
(792,181,o),
(789,211,o),
(750,211,cs),
(717,211,o),
(711,185,o),
(707,171,cs),
(689,76,o),
(592,69,o),
(549,69,cs),
(457,69,o),
(429,132,o),
(429,194,cs),
(429,206,o),
(430,220,o),
(431,235,c),
(465,235,o),
(493,235,o),
(515,236,cs),
(537,236,o),
(551,236,o),
(556,236,cs),
(616,236,o),
(661,237,o),
(690,239,cs),
(719,240,o),
(736,242,o),
(741,243,cs),
(756,246,o),
(778,252,o),
(778,283,cs),
(778,389,o),
(699,477,o),
(562,477,cs),
(452,477,o),
(401,417,o),
(387,358,c),
(365,427,o),
(297,457,o),
(220,457,cs),
(127,457,o),
(56,407,o),
(56,345,cs),
(56,304,o),
(87,276,o),
(131,276,cs),
(159,276,o),
(187,286,o),
(187,314,cs),
(187,330,o),
(180,341,o),
(166,346,cs),
(163,347,o),
(159,349,o),
(154,350,cs),
(149,351,o),
(146,355,o),
(146,361,cs),
(146,378,o),
(191,379,o),
(214,379,cs),
(278,379,o),
(334,339,o),
(334,261,cs),
(334,256,o),
(334,250,o),
(334,243,cs),
(333,235,o),
(333,222,o),
(333,203,c),
(293,239,o),
(247,257,o),
(194,257,cs),
(92,257,o),
(26,191,o),
(26,111,cs),
(26,34,o),
(83,-11,o),
(179,-11,cs)
);
},
{
closed = 1;
nodes = (
(163,67,o),
(118,82,o),
(118,119,cs),
(118,150,o),
(148,179,o),
(223,179,cs),
(262,179,o),
(290,172,o),
(307,159,cs),
(324,145,o),
(333,131,o),
(333,117,cs),
(333,102,o),
(323,90,o),
(304,81,cs),
(284,72,o),
(257,67,o),
(223,67,cs)
);
},
{
closed = 1;
nodes = (
(442,340,o),
(475,397,o),
(558,397,cs),
(625,397,o),
(682,349,o),
(682,329,cs),
(682,326,o),
(681,324,o),
(678,321,cs),
(675,318,o),
(668,317,o),
(657,317,cs),
(435,313,l),
(435,313,l)
);
},
{
closed = 1;
nodes = (
(348,486,o),
(383,509,o),
(422,543,cs),
(457,574,o),
(486,608,o),
(486,626,cs),
(486,651,o),
(459,673,o),
(416,674,cs),
(391,674,o),
(360,635,o),
(336,595,cs),
(316,560,o),
(294,513,o),
(294,508,cs),
(294,493,o),
(316,486,o),
(331,486,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
100 1 14 7 66 1 13 3 51 1 2 13 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 1 0 1 106 0 0 10 0 106 0 8 14 6 14 8 6 104 0 3 11 13 11 3 13 104 17 1 14 16 1 11 3 14 11 92 0 6 0 13 2 6 13 91 0 15 15 10 83 0 10 10 23 67 0 7 7 9 83 0 9 9 23 67 12 1 2 2 4 83 5 1 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 1 0 1 106 0 0 10 0 106 0 8 14 6 14 8 6 104 0 3 11 13 11 3 13 104 0 10 0 15 7 10 15 91 0 9 0 7 14 9 7 91 17 1 14 16 1 11 3 14 11 92 0 6 0 13 2 6 13 91 12 1 2 2 4 83 5 1 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
134 133 18 18 142 140 133 146 134 146 131 129 125 123 18 120 18 116 106 104 96 94 42 56 38 40 40 40 41 38 38 18 24
CALL[ ]	/* CallFunction */";
};
width = 815;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(241,-11,o),
(319,9,o),
(382,82,c),
(411,37,o),
(450,-11,o),
(553,-11,cs),
(700,-11,o),
(771,90,o),
(771,169,cs),
(771,188,o),
(767,209,o),
(739,209,cs),
(712,209,o),
(707,188,o),
(707,177,c),
(696,84,o),
(613,51,o),
(546,51,cs),
(442,51,o),
(408,129,o),
(408,203,cs),
(408,215,o),
(409,229,o),
(410,244,c),
(465,244,o),
(463,245,o),
(512,245,cs),
(530,245,o),
(702,245,o),
(721,250,cs),
(742,255,o),
(757,264,o),
(757,291,cs),
(757,374,o),
(692,477,o),
(556,477,cs),
(458,477,o),
(402,424,o),
(377,358,c),
(357,426,o),
(296,457,o),
(220,457,cs),
(127,457,o),
(56,409,o),
(56,343,cs),
(56,304,o),
(81,276,o),
(120,276,cs),
(147,276,o),
(168,288,o),
(168,313,cs),
(168,332,o),
(157,340,o),
(145,343,cs),
(142,344,o),
(138,346,o),
(133,347,cs),
(128,348,o),
(125,353,o),
(125,360,cs),
(125,387,o),
(177,397,o),
(213,397,cs),
(288,397,o),
(334,350,o),
(334,262,cs),
(334,255,o),
(334,248,o),
(334,240,cs),
(333,232,o),
(333,218,o),
(333,197,c),
(293,231,o),
(247,248,o),
(194,248,cs),
(92,248,o),
(26,186,o),
(26,109,cs),
(26,34,o),
(84,-11,o),
(179,-11,cs)
);
},
{
closed = 1;
nodes = (
(143,49,o),
(97,71,o),
(97,114,cs),
(97,155,o),
(138,188,o),
(213,188,cs),
(289,188,o),
(333,153,o),
(333,117,cs),
(333,78,o),
(279,49,o),
(207,49,cs)
);
},
{
closed = 1;
nodes = (
(425,349,o),
(463,415,o),
(552,415,cs),
(642,415,o),
(683,348,o),
(683,322,cs),
(683,315,o),
(680,308,o),
(667,308,cs),
(414,304,l),
(414,304,l)
);
},
{
closed = 1;
nodes = (
(353,495,o),
(458,594,o),
(458,623,cs),
(458,646,o),
(440,661,o),
(409,661,cs),
(391,661,o),
(362,627,o),
(340,591,cs),
(313,548,o),
(298,519,o),
(298,513,cs),
(298,500,o),
(312,495,o),
(323,495,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
95 1 14 7 64 1 13 3 49 31 2 2 13 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 1 0 1 106 0 0 10 0 106 0 8 14 6 14 8 6 104 0 3 11 13 11 3 13 104 17 1 14 16 1 11 3 14 11 92 0 6 0 13 2 6 13 91 0 15 15 10 83 0 10 10 23 67 0 7 7 9 83 0 9 9 23 67 12 1 2 2 4 83 5 1 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 1 0 1 106 0 0 10 0 106 0 8 14 6 14 8 6 104 0 3 11 13 11 3 13 104 0 10 0 15 7 10 15 91 0 9 0 7 14 9 7 91 17 1 14 16 1 11 3 14 11 92 0 6 0 13 2 6 13 91 12 1 2 2 4 83 5 1 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
131 130 18 18 139 137 130 143 131 143 128 126 122 120 18 117 18 109 101 99 93 91 44 38 38 40 38 40 41 40 36 18 24
CALL[ ]	/* CallFunction */";
};
width = 795;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(238,-11,o),
(305,7,o),
(368,82,c),
(403,25,o),
(460,-11,o),
(544,-11,cs),
(655,-11,o),
(741,81,o),
(741,187,cs),
(741,199,o),
(735,205,o),
(724,205,cs),
(713,205,o),
(707,199,o),
(707,187,cs),
(707,101,o),
(650,21,o),
(542,21,cs),
(422,21,o),
(378,122,o),
(378,218,cs),
(378,230,o),
(379,244,o),
(380,259,c),
(433,259,o),
(502,260,o),
(551,260,cs),
(578,260,o),
(604,260,o),
(629,260,cs),
(654,260,o),
(675,260,o),
(692,261,cs),
(716,262,o),
(727,283,o),
(727,304,cs),
(727,359,o),
(673,477,o),
(547,477,cs),
(467,477,o),
(400,433,o),
(363,358,c),
(343,426,o),
(296,457,o),
(220,457,cs),
(128,457,o),
(56,412,o),
(56,339,cs),
(56,304,o),
(73,276,o),
(104,276,cs),
(127,276,o),
(140,291,o),
(140,311,cs),
(140,332,o),
(126,335,o),
(115,338,cs),
(104,341,o),
(95,342,o),
(95,358,cs),
(95,401,o),
(152,427,o),
(212,427,cs),
(300,427,o),
(334,368,o),
(334,264,cs),
(334,234,o),
(333,226,o),
(333,187,c),
(292,219,o),
(245,233,o),
(194,233,cs),
(94,233,o),
(26,180,o),
(26,106,cs),
(26,35,o),
(86,-11,o),
(179,-11,cs)
);
},
{
closed = 1;
nodes = (
(115,19,o),
(67,53,o),
(67,106,cs),
(67,165,o),
(124,203,o),
(199,203,cs),
(272,203,o),
(333,167,o),
(333,117,cs),
(333,64,o),
(262,19,o),
(184,19,cs)
);
},
{
closed = 1;
nodes = (
(397,364,o),
(445,445,o),
(544,445,cs),
(643,445,o),
(684,364,o),
(684,311,cs),
(684,299,o),
(678,293,o),
(667,293,cs),
(384,289,l),
(384,289,l),
(384,289,l),
(384,289,l)
);
},
{
closed = 1;
nodes = (
(331,510,o),
(418,597,o),
(418,618,cs),
(418,637,o),
(410,640,o),
(399,640,cs),
(379,640,o),
(304,546,o),
(304,521,cs),
(304,514,o),
(307,510,o),
(312,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
72 1 12 5 39 25 2 0 11 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 15 14 15 106 0 14 8 14 106 0 6 12 9 12 6 9 104 0 1 4 11 4 1 11 104 17 1 12 16 1 9 4 12 9 92 0 4 0 11 0 4 11 91 0 13 13 8 83 0 8 8 23 67 0 5 5 7 83 0 7 7 23 67 10 1 0 0 2 83 3 1 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 15 14 15 106 0 14 8 14 106 0 6 12 9 12 6 9 104 0 1 4 11 4 1 11 104 0 8 0 13 5 8 13 91 0 7 0 5 12 7 5 91 17 1 12 16 1 9 4 12 9 92 0 4 0 11 0 4 11 91 10 1 0 0 2 83 3 1 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
110 109 0 0 135 133 128 126 117 115 109 121 110 121 105 103 95 93 0 90 0 82 36 38 44 41 38 36 37 37 39 18 24
CALL[ ]	/* CallFunction */";
};
width = 767;
}
);
note = aeacute;
unicode = 509;
},
{
glyphname = b;
kernLeft = b;
kernRight = b;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(143,-12,o),
(141,2,o),
(146,64,c),
(168,26,o),
(208,-9,o),
(283,-9,cs),
(382,-9,o),
(504,51,o),
(504,220,cs),
(504,324,o),
(459,458,o),
(329,458,cs),
(253,458,o),
(191,418,o),
(154,339,c),
(154,782,l),
(154,782,l),
(154,799,o),
(151,810,o),
(146,813,cs),
(140,816,o),
(134,818,o),
(128,818,cs),
(38,818,ls),
(-35,818,o),
(-53,807,o),
(-53,783,cs),
(-53,764,o),
(-30,755,o),
(-7,755,cs),
(17,755,ls),
(47,755,o),
(62,746,o),
(62,728,cs),
(62,683,o),
(63,604,o),
(63,498,cs),
(63,359,o),
(61,261,o),
(59,198,cs),
(57,136,o),
(54,83,o),
(54,24,cs),
(54,0,o),
(74,-12,o),
(97,-12,cs)
);
},
{
closed = 1;
nodes = (
(214,70,o),
(160,110,o),
(160,219,cs),
(160,246,o),
(182,376,o),
(305,376,cs),
(360,376,o),
(410,344,o),
(410,225,cs),
(410,108,o),
(336,70,o),
(280,70,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 1 5 6 18 1 1 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 4 83 0 4 4 14 67 0 6 6 0 83 0 0 0 23 67 0 5 5 1 83 2 1 1 1 24 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 0 6 5 0 6 91 0 3 3 4 83 0 4 4 14 67 0 5 5 1 83 2 1 1 1 24 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
40 39 54 63 40 40 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 532;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(124,-12,o),
(123,2,o),
(128,68,c),
(150,29,o),
(190,-9,o),
(265,-9,cs),
(364,-9,o),
(486,51,o),
(486,220,cs),
(486,324,o),
(441,458,o),
(311,458,cs),
(235,458,o),
(173,414,o),
(136,334,c),
(136,782,l),
(136,782,l),
(136,799,o),
(133,810,o),
(128,813,cs),
(122,816,o),
(116,818,o),
(110,818,cs),
(20,818,ls),
(-6,818,o),
(-26,816,o),
(-41,811,cs),
(-56,806,o),
(-64,798,o),
(-64,789,cs),
(-64,773,o),
(-41,767,o),
(-18,767,cs),
(20,767,ls),
(50,767,o),
(65,758,o),
(65,740,cs),
(65,692,o),
(66,607,o),
(66,498,cs),
(66,359,o),
(64,261,o),
(62,198,cs),
(60,136,o),
(57,83,o),
(57,24,cs),
(57,0,o),
(71,-12,o),
(90,-12,cs)
);
},
{
closed = 1;
nodes = (
(182,52,o),
(139,105,o),
(139,205,cs),
(139,255,o),
(186,397,o),
(294,397,cs),
(341,397,o),
(413,350,o),
(413,225,cs),
(413,91,o),
(326,52,o),
(263,52,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
18 0 2 5 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 4 83 0 4 4 14 67 0 6 6 0 83 0 0 0 23 67 0 5 5 1 83 2 1 1 1 24 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 0 6 5 0 6 91 0 3 3 4 83 0 4 4 14 67 0 5 5 1 83 2 1 1 1 24 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
40 37 52 63 40 40 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 517;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(87,-12,o),
(92,-7,o),
(95,4,cs),
(98,15,o),
(100,36,o),
(102,68,c),
(124,29,o),
(164,-9,o),
(239,-9,cs),
(338,-9,o),
(460,51,o),
(460,220,cs),
(460,324,o),
(415,458,o),
(285,458,cs),
(209,458,o),
(147,414,o),
(110,334,c),
(110,782,ls),
(110,799,o),
(107,810,o),
(102,813,cs),
(96,816,o),
(90,818,o),
(84,818,cs),
(-6,818,ls),
(-3,818,o),
(-80,819,o),
(-80,799,cs),
(-80,794,o),
(-75,790,o),
(-65,789,cs),
(-56,788,o),
(-45,787,o),
(-34,787,cs),
(24,787,ls),
(53,787,o),
(69,780,o),
(69,760,cs),
(69,708,o),
(70,617,o),
(70,498,cs),
(70,359,o),
(68,261,o),
(66,198,cs),
(64,136,o),
(61,83,o),
(61,24,cs),
(61,0,o),
(67,-12,o),
(80,-12,cs)
);
},
{
closed = 1;
nodes = (
(133,22,o),
(109,104,o),
(109,182,cs),
(109,317,o),
(189,427,o),
(278,427,cs),
(338,427,o),
(417,372,o),
(417,225,cs),
(417,64,o),
(315,22,o),
(239,22,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
18 0 2 5 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 4 83 0 4 4 14 67 0 6 6 0 83 0 0 0 23 67 0 5 5 1 83 2 1 1 1 24 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 0 6 5 0 6 91 0 3 3 4 83 0 4 4 14 67 0 5 5 1 83 2 1 1 1 24 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
40 39 69 63 38 40 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 495;
}
);
note = b;
unicode = 98;
},
{
glyphname = c;
kernLeft = c;
kernRight = c;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(384,-6,o),
(450,49,o),
(477,100,cs),
(484,111,o),
(485,123,o),
(485,130,cs),
(485,146,o),
(473,161,o),
(450,161,cs),
(427,161,o),
(414,145,o),
(399,128,cs),
(372,97,o),
(337,73,o),
(269,73,cs),
(166,73,o),
(124,134,o),
(124,229,cs),
(124,327,o),
(170,404,o),
(272,404,cs),
(356,404,o),
(367,352,o),
(377,313,cs),
(380,301,o),
(392,282,o),
(421,282,cs),
(452,282,o),
(461,296,o),
(461,335,cs),
(461,342,o),
(460,385,o),
(460,463,cs),
(460,486,o),
(454,511,o),
(422,511,cs),
(390,511,o),
(380,488,o),
(380,465,cs),
(380,457,o),
(381,443,o),
(382,428,c),
(353,473,o),
(304,482,o),
(264,482,cs),
(120,482,o),
(26,361,o),
(26,231,cs),
(26,99,o),
(123,-6,o),
(269,-6,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 2 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 1 3 1 4 3 104 0 0 0 1 4 0 1 91 0 2 2 6 83 0 6 6 23 67 0 3 3 5 83 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 4 1 3 1 4 3 104 0 6 0 2 1 6 2 91 0 0 0 1 4 0 1 91 0 3 3 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
40 41 36 38 38 41 37 7 22
CALL[ ]	/* CallFunction */";
};
width = 504;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(342,-6,o),
(410,30,o),
(457,101,cs),
(464,112,o),
(467,117,o),
(467,128,cs),
(467,147,o),
(452,154,o),
(437,154,cs),
(428,154,o),
(416,149,o),
(403,128,cs),
(379,88,o),
(326,56,o),
(249,56,cs),
(158,56,o),
(106,122,o),
(106,227,cs),
(106,342,o),
(171,422,o),
(259,422,cs),
(348,422,o),
(380,378,o),
(380,309,cs),
(380,294,o),
(396,288,o),
(407,288,cs),
(427,288,o),
(443,299,o),
(443,310,cs),
(443,359,o),
(444,427,o),
(444,478,cs),
(444,498,o),
(434,511,o),
(411,511,cs),
(388,511,o),
(380,498,o),
(380,483,cs),
(380,464,o),
(381,443,o),
(382,428,c),
(353,472,o),
(313,482,o),
(262,482,cs),
(127,482,o),
(29,369,o),
(29,225,cs),
(29,101,o),
(109,-6,o),
(253,-6,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 2 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 1 3 1 4 3 104 0 0 0 1 4 0 1 91 0 2 2 6 83 0 6 6 23 67 0 3 3 5 83 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 4 1 3 1 4 3 104 0 6 0 2 1 6 2 91 0 0 0 1 4 0 1 91 0 3 3 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
40 38 36 38 36 41 37 7 22
CALL[ ]	/* CallFunction */";
};
width = 488;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(328,-6,o),
(389,30,o),
(431,101,cs),
(438,112,o),
(441,121,o),
(441,128,cs),
(441,136,o),
(435,143,o),
(428,143,cs),
(421,143,o),
(414,138,o),
(407,128,cs),
(366,59,o),
(318,26,o),
(253,26,cs),
(144,26,o),
(80,103,o),
(80,227,cs),
(80,358,o),
(156,452,o),
(263,452,cs),
(352,452,o),
(384,400,o),
(384,319,cs),
(384,303,o),
(390,298,o),
(401,298,cs),
(412,298,o),
(417,309,o),
(417,320,cs),
(417,347,o),
(418,401,o),
(418,484,cs),
(418,499,o),
(412,511,o),
(401,511,cs),
(390,511,o),
(384,498,o),
(384,483,cs),
(384,464,o),
(385,443,o),
(386,428,c),
(357,472,o),
(317,482,o),
(266,482,cs),
(131,482,o),
(33,369,o),
(33,225,cs),
(33,97,o),
(120,-6,o),
(247,-6,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 1 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 1 3 1 4 3 104 0 0 0 1 4 0 1 91 0 2 2 6 83 0 6 6 23 67 0 3 3 5 83 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 4 1 3 1 4 3 104 0 6 0 2 1 6 2 91 0 0 0 1 4 0 1 91 0 3 3 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
40 37 35 38 36 41 37 7 22
CALL[ ]	/* CallFunction */";
};
width = 465;
}
);
note = c;
unicode = 99;
},
{
glyphname = cacute;
kernLeft = c;
kernRight = c;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(384,-6,o),
(450,49,o),
(477,100,cs),
(484,111,o),
(485,123,o),
(485,130,cs),
(485,146,o),
(473,161,o),
(450,161,cs),
(427,161,o),
(414,145,o),
(399,128,cs),
(372,97,o),
(337,73,o),
(269,73,cs),
(166,73,o),
(124,134,o),
(124,229,cs),
(124,327,o),
(170,404,o),
(272,404,cs),
(356,404,o),
(367,352,o),
(377,313,cs),
(380,301,o),
(392,282,o),
(421,282,cs),
(452,282,o),
(461,296,o),
(461,335,cs),
(461,342,o),
(460,385,o),
(460,463,cs),
(460,486,o),
(454,511,o),
(422,511,cs),
(390,511,o),
(380,488,o),
(380,465,cs),
(380,457,o),
(381,443,o),
(382,428,c),
(353,473,o),
(304,482,o),
(264,482,cs),
(120,482,o),
(26,361,o),
(26,231,cs),
(26,99,o),
(123,-6,o),
(269,-6,cs)
);
},
{
closed = 1;
nodes = (
(262,502,o),
(297,525,o),
(336,559,cs),
(371,590,o),
(400,624,o),
(400,642,cs),
(400,667,o),
(373,689,o),
(330,690,cs),
(305,690,o),
(274,651,o),
(250,611,cs),
(230,576,o),
(208,529,o),
(208,524,cs),
(208,509,o),
(230,502,o),
(245,502,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
18 1 4 8 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 2 1 106 0 0 2 8 2 0 8 104 0 6 3 5 3 6 5 104 0 2 0 3 6 2 3 91 0 4 4 8 83 0 8 8 23 67 0 5 5 7 84 0 7 7 16 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 2 1 106 0 0 2 8 2 0 8 104 0 6 3 5 3 6 5 104 0 8 0 4 3 8 4 91 0 2 0 3 6 2 3 91 0 5 5 7 84 0 7 7 16 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
40 41 36 38 38 41 39 38 38 9 24
CALL[ ]	/* CallFunction */";
};
width = 504;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(342,-6,o),
(410,30,o),
(457,101,cs),
(464,112,o),
(467,117,o),
(467,128,cs),
(467,147,o),
(452,154,o),
(437,154,cs),
(428,154,o),
(416,149,o),
(403,128,cs),
(379,88,o),
(326,56,o),
(249,56,cs),
(158,56,o),
(106,122,o),
(106,227,cs),
(106,342,o),
(171,422,o),
(259,422,cs),
(348,422,o),
(380,378,o),
(380,309,cs),
(380,294,o),
(396,288,o),
(407,288,cs),
(427,288,o),
(443,299,o),
(443,310,cs),
(443,359,o),
(444,427,o),
(444,478,cs),
(444,498,o),
(434,511,o),
(411,511,cs),
(388,511,o),
(380,498,o),
(380,483,cs),
(380,464,o),
(381,443,o),
(382,428,c),
(353,472,o),
(313,482,o),
(262,482,cs),
(127,482,o),
(29,369,o),
(29,225,cs),
(29,101,o),
(109,-6,o),
(253,-6,cs)
);
},
{
closed = 1;
nodes = (
(259,505,o),
(364,604,o),
(364,633,cs),
(364,656,o),
(346,671,o),
(315,671,cs),
(297,671,o),
(268,637,o),
(246,601,cs),
(219,558,o),
(204,529,o),
(204,523,cs),
(204,510,o),
(218,505,o),
(229,505,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
18 1 4 8 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 2 1 106 0 0 2 8 2 0 8 104 0 6 3 5 3 6 5 104 0 2 0 3 6 2 3 91 0 4 4 8 83 0 8 8 23 67 0 5 5 7 83 0 7 7 16 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 2 1 106 0 0 2 8 2 0 8 104 0 6 3 5 3 6 5 104 0 8 0 4 3 8 4 92 0 2 0 3 6 2 3 91 0 5 5 7 83 0 7 7 16 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
40 38 36 38 36 41 39 40 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 488;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(328,-6,o),
(389,30,o),
(431,101,cs),
(438,112,o),
(441,121,o),
(441,128,cs),
(441,136,o),
(435,143,o),
(428,143,cs),
(421,143,o),
(414,138,o),
(407,128,cs),
(366,59,o),
(318,26,o),
(253,26,cs),
(144,26,o),
(80,103,o),
(80,227,cs),
(80,358,o),
(156,452,o),
(263,452,cs),
(352,452,o),
(384,400,o),
(384,319,cs),
(384,303,o),
(390,298,o),
(401,298,cs),
(412,298,o),
(417,309,o),
(417,320,cs),
(417,347,o),
(418,401,o),
(418,484,cs),
(418,499,o),
(412,511,o),
(401,511,cs),
(390,511,o),
(384,498,o),
(384,483,cs),
(384,464,o),
(385,443,o),
(386,428,c),
(357,472,o),
(317,482,o),
(266,482,cs),
(131,482,o),
(33,369,o),
(33,225,cs),
(33,97,o),
(120,-6,o),
(247,-6,cs)
);
},
{
closed = 1;
nodes = (
(226,510,o),
(313,597,o),
(313,618,cs),
(313,637,o),
(305,640,o),
(294,640,cs),
(274,640,o),
(199,546,o),
(199,521,cs),
(199,514,o),
(202,510,o),
(207,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
15 1 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 2 1 106 0 0 2 8 2 0 8 104 0 6 3 5 3 6 5 104 0 2 0 3 6 2 3 91 0 4 4 8 83 0 8 8 23 67 0 5 5 7 83 0 7 7 16 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 2 1 106 0 0 2 8 2 0 8 104 0 6 3 5 3 6 5 104 0 8 0 4 3 8 4 92 0 2 0 3 6 2 3 91 0 5 5 7 83 0 7 7 16 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
40 37 35 38 36 41 39 37 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 465;
}
);
note = cacute;
unicode = 263;
},
{
glyphname = ccaron;
kernLeft = c;
kernRight = c;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(384,-6,o),
(450,49,o),
(477,100,cs),
(484,111,o),
(485,123,o),
(485,130,cs),
(485,146,o),
(473,161,o),
(450,161,cs),
(427,161,o),
(414,145,o),
(399,128,cs),
(372,97,o),
(337,73,o),
(269,73,cs),
(166,73,o),
(124,134,o),
(124,229,cs),
(124,327,o),
(170,404,o),
(272,404,cs),
(356,404,o),
(367,352,o),
(377,313,cs),
(380,301,o),
(392,282,o),
(421,282,cs),
(452,282,o),
(461,296,o),
(461,335,cs),
(461,342,o),
(460,385,o),
(460,463,cs),
(460,486,o),
(454,511,o),
(422,511,cs),
(390,511,o),
(380,488,o),
(380,465,cs),
(380,457,o),
(381,443,o),
(382,428,c),
(353,473,o),
(304,482,o),
(264,482,cs),
(120,482,o),
(26,361,o),
(26,231,cs),
(26,99,o),
(123,-6,o),
(269,-6,cs)
);
},
{
closed = 1;
nodes = (
(306,486,o),
(415,578,o),
(415,619,cs),
(415,630,o),
(411,640,o),
(402,640,cs),
(391,640,o),
(354,616,o),
(282,578,c),
(233,604,o),
(175,640,o),
(163,640,cs),
(155,640,o),
(150,633,o),
(150,626,cs),
(150,599,o),
(178,565,o),
(209,537,cs),
(236,511,o),
(271,486,o),
(282,486,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
21 1 3 0 26 1 5 9 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
2 10 2 0 3 3 0 94 0 1 3 9 3 1 9 104 0 7 4 6 4 7 6 104 0 3 0 4 7 3 4 92 0 5 5 9 83 0 9 9 23 67 0 6 6 8 83 0 8 8 16 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
2 10 2 0 3 0 106 0 1 3 9 3 1 9 104 0 7 4 6 4 7 6 104 0 3 0 4 7 3 4 92 0 5 5 9 83 0 9 9 23 67 0 6 6 8 83 0 8 8 16 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
2 10 2 0 3 0 106 0 1 3 9 3 1 9 104 0 7 4 6 4 7 6 104 0 9 0 5 4 9 5 91 0 3 0 4 7 3 4 92 0 6 6 8 83 0 8 8 16 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 87 85 77 75 66 64 60 58 52 50 44 42 33 31 17 15 9 7 0 25 1 25 11 15
CALL[ ]	/* CallFunction */";
};
width = 499;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(342,-6,o),
(410,30,o),
(457,101,cs),
(464,112,o),
(467,117,o),
(467,128,cs),
(467,147,o),
(452,154,o),
(437,154,cs),
(428,154,o),
(416,149,o),
(403,128,cs),
(379,88,o),
(326,56,o),
(249,56,cs),
(158,56,o),
(106,122,o),
(106,227,cs),
(106,342,o),
(171,422,o),
(259,422,cs),
(348,422,o),
(380,378,o),
(380,309,cs),
(380,294,o),
(396,288,o),
(407,288,cs),
(427,288,o),
(443,299,o),
(443,310,cs),
(443,359,o),
(444,427,o),
(444,478,cs),
(444,498,o),
(434,511,o),
(411,511,cs),
(388,511,o),
(380,498,o),
(380,483,cs),
(380,464,o),
(381,443,o),
(382,428,c),
(353,472,o),
(313,482,o),
(262,482,cs),
(127,482,o),
(29,369,o),
(29,225,cs),
(29,101,o),
(109,-6,o),
(253,-6,cs)
);
},
{
closed = 1;
nodes = (
(298,495,o),
(404,588,o),
(404,623,cs),
(404,632,o),
(401,640,o),
(393,640,cs),
(380,640,o),
(286,577,o),
(273,569,c),
(200,612,o),
(169,640,o),
(154,640,cs),
(147,640,o),
(143,636,o),
(143,627,cs),
(143,586,o),
(251,495,o),
(273,495,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
64 1 0 7 1 1 2 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
8 10 2 7 0 7 106 0 4 1 3 1 4 3 104 0 0 0 1 4 0 1 91 0 9 9 23 67 0 2 2 6 83 0 6 6 23 67 0 3 3 5 83 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
8 10 2 7 0 7 106 0 9 0 6 6 9 96 0 4 1 3 1 4 3 104 0 6 0 2 1 6 2 92 0 0 0 1 4 0 1 91 0 3 3 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
60 59 77 75 70 68 59 83 60 83 40 38 36 38 36 41 38 11 33
CALL[ ]	/* CallFunction */";
};
width = 488;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(340,-6,o),
(397,38,o),
(440,103,cs),
(447,113,o),
(450,121,o),
(450,126,cs),
(450,133,o),
(447,140,o),
(435,140,cs),
(426,140,o),
(421,135,o),
(417,128,cs),
(374,57,o),
(322,26,o),
(253,26,cs),
(144,26,o),
(78,103,o),
(78,227,cs),
(78,358,o),
(155,452,o),
(263,452,cs),
(359,452,o),
(394,400,o),
(394,319,cs),
(394,312,o),
(398,296,o),
(411,296,cs),
(422,296,o),
(425,309,o),
(425,320,cs),
(425,327,o),
(425,342,o),
(426,364,cs),
(426,385,o),
(426,416,o),
(426,456,cs),
(426,471,o),
(420,482,o),
(408,482,cs),
(397,482,o),
(394,470,o),
(394,455,cs),
(394,443,o),
(397,427,o),
(398,419,c),
(367,466,o),
(321,482,o),
(266,482,cs),
(131,482,o),
(33,369,o),
(33,225,cs),
(33,97,o),
(120,-6,o),
(247,-6,cs)
);
},
{
closed = 1;
nodes = (
(285,510,o),
(388,604,o),
(388,629,cs),
(388,636,o),
(385,640,o),
(380,640,cs),
(365,640,o),
(336,608,o),
(260,554,c),
(224,580,o),
(154,640,o),
(141,640,cs),
(136,640,o),
(133,636,o),
(133,629,cs),
(133,604,o),
(237,510,o),
(260,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
75 1 8 7 0 1 1 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
9 10 2 7 8 7 106 0 8 0 8 106 0 4 1 3 1 4 3 104 0 2 2 0 83 6 1 0 0 23 67 0 1 1 0 83 6 1 0 0 23 67 0 3 3 5 83 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
9 10 2 7 8 7 106 0 8 0 8 106 0 4 1 3 1 4 3 104 0 2 1 0 2 79 6 1 0 0 1 4 0 1 91 0 3 3 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
57 56 71 69 64 62 56 79 57 79 40 38 36 38 36 39 37 11 22
CALL[ ]	/* CallFunction */";
};
width = 473;
}
);
note = ccaron;
unicode = 269;
},
{
glyphname = ccedilla;
kernLeft = c;
kernRight = c;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(383,-181,o),
(442,-155,o),
(442,-103,cs),
(442,-64,o),
(409,-40,o),
(365,-40,cs),
(337,-40,o),
(317,-50,o),
(285,-69,c),
(296,-5,l),
(395,3,o),
(454,55,o),
(477,100,c),
(484,111,o),
(485,123,o),
(485,130,cs),
(485,146,o),
(473,161,o),
(450,161,cs),
(427,161,o),
(414,145,o),
(399,128,cs),
(372,97,o),
(337,73,o),
(269,73,cs),
(166,73,o),
(124,134,o),
(124,229,cs),
(124,327,o),
(170,404,o),
(272,404,cs),
(356,404,o),
(367,352,o),
(377,313,cs),
(380,301,o),
(392,282,o),
(421,282,cs),
(452,282,o),
(461,296,o),
(461,335,cs),
(461,342,o),
(460,385,o),
(460,463,cs),
(460,486,o),
(454,511,o),
(422,511,cs),
(390,511,o),
(380,488,o),
(380,465,cs),
(380,457,o),
(381,443,o),
(382,428,c),
(353,473,o),
(304,482,o),
(264,482,cs),
(120,482,o),
(26,361,o),
(26,231,cs),
(26,116,o),
(98,21,o),
(216,-1,c),
(215,-10,o),
(213,-21,o),
(212,-34,cs),
(211,-47,o),
(209,-60,o),
(206,-71,cs),
(205,-76,o),
(203,-84,o),
(203,-88,cs),
(203,-103,o),
(210,-121,o),
(241,-121,cs),
(283,-121,o),
(297,-93,o),
(331,-93,cs),
(342,-93,o),
(354,-98,o),
(354,-109,cs),
(354,-117,o),
(351,-123,o),
(345,-126,cs),
(339,-129,o),
(327,-131,o),
(309,-131,cs),
(236,-131,o),
(234,-151,o),
(234,-159,cs),
(234,-168,o),
(240,-173,o),
(253,-176,cs),
(265,-179,o),
(285,-181,o),
(313,-181,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 1 2 10 90 1 5 3 51 1 8 5 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 4 1 3 1 4 3 104 0 5 3 8 3 5 8 104 0 8 9 9 8 94 0 0 0 1 4 0 1 91 0 3 0 9 7 3 9 91 0 2 2 10 83 0 10 10 23 67 0 7 7 6 83 0 6 6 17 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 4 1 3 1 4 3 104 0 5 3 8 3 5 8 104 0 8 9 9 8 94 0 10 0 2 1 10 2 91 0 0 0 1 4 0 1 91 0 3 0 9 7 3 9 91 0 7 6 6 7 79 0 7 7 6 83 0 6 7 6 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 4 1 3 1 4 3 104 0 5 3 8 3 5 8 104 0 8 9 3 8 9 102 0 10 0 2 1 10 2 91 0 0 0 1 4 0 1 91 0 3 0 9 7 3 9 91 0 7 6 6 7 79 0 7 7 6 83 0 6 7 6 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
101 99 82 80 36 38 38 45 36 38 38 41 37 11 24
CALL[ ]	/* CallFunction */";
};
width = 504;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(342,-6,o),
(410,30,o),
(457,101,cs),
(464,112,o),
(467,117,o),
(467,128,cs),
(467,147,o),
(452,154,o),
(437,154,cs),
(428,154,o),
(416,149,o),
(403,128,cs),
(379,88,o),
(326,56,o),
(249,56,cs),
(158,56,o),
(106,122,o),
(106,227,cs),
(106,342,o),
(171,422,o),
(259,422,cs),
(348,422,o),
(380,378,o),
(380,309,cs),
(380,294,o),
(396,288,o),
(407,288,cs),
(427,288,o),
(443,299,o),
(443,310,cs),
(443,359,o),
(444,427,o),
(444,478,cs),
(444,498,o),
(434,511,o),
(411,511,cs),
(388,511,o),
(380,498,o),
(380,483,cs),
(380,464,o),
(381,443,o),
(382,428,c),
(353,472,o),
(313,482,o),
(262,482,cs),
(127,482,o),
(29,369,o),
(29,225,cs),
(29,101,o),
(109,-6,o),
(253,-6,cs)
);
},
{
closed = 1;
nodes = (
(365,-181,o),
(424,-155,o),
(424,-103,cs),
(424,-64,o),
(391,-40,o),
(347,-40,cs),
(319,-40,o),
(299,-50,o),
(267,-69,c),
(280,3,l),
(261,7,l),
(221,7,l),
(221,7,l),
(220,1,o),
(218,-10,o),
(217,-26,cs),
(215,-42,o),
(212,-57,o),
(209,-71,cs),
(208,-76,o),
(206,-84,o),
(206,-88,cs),
(206,-99,o),
(212,-113,o),
(235,-113,cs),
(266,-113,o),
(290,-85,o),
(326,-85,cs),
(335,-85,o),
(357,-90,o),
(357,-109,cs),
(357,-136,o),
(334,-139,o),
(291,-139,cs),
(264,-139,o),
(248,-141,o),
(241,-146,cs),
(234,-151,o),
(230,-156,o),
(230,-161,cs),
(230,-170,o),
(236,-175,o),
(247,-177,cs),
(258,-180,o),
(274,-181,o),
(295,-181,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
1 1 2 6 60 1 5 12 61 1 10 7 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
0 4 1 3 1 4 3 104 0 3 12 12 3 94 0 11 10 9 5 11 96 0 0 0 1 4 0 1 91 0 7 0 10 11 7 10 91 0 2 2 6 83 0 6 6 23 67 13 1 12 12 5 84 0 5 5 16 67 0 9 9 8 83 0 8 8 17 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 4 1 3 1 4 3 104 0 3 12 12 3 94 0 11 10 9 10 11 9 104 0 0 0 1 4 0 1 91 0 7 0 10 11 7 10 91 0 2 2 6 83 0 6 6 23 67 13 1 12 12 5 84 0 5 5 16 67 0 9 9 8 83 0 8 8 17 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 4 1 3 1 4 3 104 0 3 12 12 3 94 0 11 10 9 10 11 9 104 0 6 0 2 1 6 2 91 0 0 0 1 4 0 1 91 0 7 0 10 11 7 10 91 13 1 12 12 5 84 0 5 5 16 67 0 9 9 8 83 0 8 8 17 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 4 1 3 1 4 3 104 0 3 12 12 3 94 0 11 10 9 10 11 9 104 0 6 0 2 1 6 2 91 0 0 0 1 4 0 1 91 0 7 0 10 11 7 10 91 0 9 0 8 9 8 87 13 1 12 12 5 84 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
0 4 1 3 1 4 3 104 0 3 12 1 3 12 102 0 11 10 9 10 11 9 104 0 6 0 2 1 6 2 91 0 0 0 1 4 0 1 91 0 7 0 10 11 7 10 91 0 9 0 8 9 8 87 13 1 12 12 5 84 0 5 5 16 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
59 59 59 98 59 98 90 88 85 83 79 77 38 38 40 38 36 38 36 41 38 14 35
CALL[ ]	/* CallFunction */";
};
width = 488;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(339,-181,o),
(398,-155,o),
(398,-103,cs),
(398,-64,o),
(365,-40,o),
(321,-40,cs),
(293,-40,o),
(273,-50,o),
(241,-69,c),
(252,-6,l),
(331,-4,o),
(391,32,o),
(431,101,cs),
(438,112,o),
(441,121,o),
(441,128,cs),
(441,136,o),
(435,143,o),
(428,143,cs),
(421,143,o),
(414,138,o),
(407,128,cs),
(366,59,o),
(318,26,o),
(253,26,cs),
(144,26,o),
(80,103,o),
(80,227,cs),
(80,358,o),
(156,452,o),
(263,452,cs),
(352,452,o),
(384,400,o),
(384,319,cs),
(384,303,o),
(390,298,o),
(401,298,cs),
(412,298,o),
(417,309,o),
(417,320,cs),
(417,347,o),
(418,401,o),
(418,484,cs),
(418,499,o),
(412,511,o),
(401,511,cs),
(390,511,o),
(384,498,o),
(384,483,cs),
(384,464,o),
(385,443,o),
(386,428,c),
(357,472,o),
(317,482,o),
(266,482,cs),
(131,482,o),
(33,369,o),
(33,225,cs),
(33,108,o),
(108,6,o),
(223,-5,c),
(222,-14,o),
(220,-24,o),
(219,-36,cs),
(217,-48,o),
(215,-60,o),
(213,-71,cs),
(212,-76,o),
(210,-84,o),
(210,-88,cs),
(210,-93,o),
(215,-100,o),
(226,-100,cs),
(248,-100,o),
(282,-72,o),
(318,-72,cs),
(347,-72,o),
(361,-90,o),
(361,-109,cs),
(361,-140,o),
(326,-152,o),
(265,-152,cs),
(252,-152,o),
(242,-152,o),
(235,-153,cs),
(228,-154,o),
(224,-158,o),
(224,-164,cs),
(224,-169,o),
(227,-173,o),
(233,-176,cs),
(238,-179,o),
(250,-181,o),
(269,-181,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
0 1 1 2 44 1 9 6 2 66 81 1 5 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 4 1 3 1 4 3 104 0 10 9 8 5 10 96 0 0 0 1 4 0 1 91 0 6 0 9 10 6 9 91 0 2 2 11 83 0 11 11 23 67 0 3 3 5 83 0 5 5 16 67 0 8 8 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 4 1 3 1 4 3 104 0 10 9 8 9 10 8 104 0 0 0 1 4 0 1 91 0 6 0 9 10 6 9 91 0 2 2 11 83 0 11 11 23 67 0 3 3 5 83 0 5 5 16 67 0 8 8 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 4 1 3 1 4 3 104 0 10 9 8 9 10 8 104 0 11 0 2 1 11 2 91 0 0 0 1 4 0 1 91 0 6 0 9 10 6 9 91 0 3 3 5 83 0 5 5 16 67 0 8 8 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 4 1 3 1 4 3 104 0 10 9 8 9 10 8 104 0 11 0 2 1 11 2 91 0 0 0 1 4 0 1 91 0 6 0 9 10 6 9 91 0 8 0 7 8 7 87 0 3 3 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
92 90 73 71 68 66 36 38 35 21 35 38 36 41 37 12 24
CALL[ ]	/* CallFunction */";
};
width = 465;
}
);
note = ccedilla;
unicode = 231;
},
{
glyphname = ccircumflex;
kernLeft = c;
kernRight = c;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(384,-6,o),
(450,49,o),
(477,100,cs),
(484,111,o),
(485,123,o),
(485,130,cs),
(485,146,o),
(473,161,o),
(450,161,cs),
(427,161,o),
(414,145,o),
(399,128,cs),
(372,97,o),
(337,73,o),
(269,73,cs),
(166,73,o),
(124,134,o),
(124,229,cs),
(124,327,o),
(170,404,o),
(272,404,cs),
(356,404,o),
(367,352,o),
(377,313,cs),
(380,301,o),
(392,282,o),
(421,282,cs),
(452,282,o),
(461,296,o),
(461,335,cs),
(461,342,o),
(460,385,o),
(460,463,cs),
(460,486,o),
(454,511,o),
(422,511,cs),
(390,511,o),
(380,488,o),
(380,465,cs),
(380,457,o),
(381,443,o),
(382,428,c),
(353,473,o),
(304,482,o),
(264,482,cs),
(120,482,o),
(26,361,o),
(26,231,cs),
(26,99,o),
(123,-6,o),
(269,-6,cs)
);
},
{
closed = 1;
nodes = (
(166,510,o),
(224,546,o),
(273,572,c),
(345,534,o),
(382,510,o),
(393,510,cs),
(402,510,o),
(406,520,o),
(406,531,cs),
(406,572,o),
(297,664,o),
(273,664,cs),
(262,664,o),
(227,639,o),
(200,614,cs),
(169,585,o),
(141,549,o),
(141,524,cs),
(141,517,o),
(146,510,o),
(154,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
5 1 3 2 26 1 5 9 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 3 2 106 1 10 2 0 3 9 3 0 9 104 0 7 4 6 4 7 6 104 0 3 0 4 7 3 4 91 0 5 5 9 83 0 9 9 23 67 0 6 6 8 83 0 8 8 16 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 2 3 2 106 1 10 2 0 3 9 3 0 9 104 0 7 4 6 4 7 6 104 0 9 0 5 4 9 5 92 0 3 0 4 7 3 4 91 0 6 6 8 83 0 8 8 16 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 87 85 77 75 66 64 60 58 52 50 44 42 33 31 19 17 11 9 0 25 1 25 11 15
CALL[ ]	/* CallFunction */";
};
width = 499;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(342,-6,o),
(410,30,o),
(457,101,cs),
(464,112,o),
(467,117,o),
(467,128,cs),
(467,147,o),
(452,154,o),
(437,154,cs),
(428,154,o),
(416,149,o),
(403,128,cs),
(379,88,o),
(326,56,o),
(249,56,cs),
(158,56,o),
(106,122,o),
(106,227,cs),
(106,342,o),
(171,422,o),
(259,422,cs),
(348,422,o),
(380,378,o),
(380,309,cs),
(380,294,o),
(396,288,o),
(407,288,cs),
(427,288,o),
(443,299,o),
(443,310,cs),
(443,359,o),
(444,427,o),
(444,478,cs),
(444,498,o),
(434,511,o),
(411,511,cs),
(388,511,o),
(380,498,o),
(380,483,cs),
(380,464,o),
(381,443,o),
(382,428,c),
(353,472,o),
(313,482,o),
(262,482,cs),
(127,482,o),
(29,369,o),
(29,225,cs),
(29,101,o),
(109,-6,o),
(253,-6,cs)
);
},
{
closed = 1;
nodes = (
(161,510,o),
(192,538,o),
(265,581,c),
(278,573,o),
(372,510,o),
(385,510,cs),
(393,510,o),
(396,518,o),
(396,527,cs),
(396,562,o),
(290,655,o),
(265,655,cs),
(243,655,o),
(135,564,o),
(135,523,cs),
(135,514,o),
(139,510,o),
(146,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
64 1 0 9 1 1 2 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 9 0 9 106 8 10 2 7 0 6 0 7 6 104 0 4 1 3 1 4 3 104 0 0 0 1 4 0 1 91 0 2 2 6 83 0 6 6 23 67 0 3 3 5 83 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 9 0 9 106 8 10 2 7 0 6 0 7 6 104 0 4 1 3 1 4 3 104 0 6 0 2 1 6 2 92 0 0 0 1 4 0 1 91 0 3 3 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
60 59 77 75 70 68 59 83 60 83 40 38 36 38 36 41 38 11 33
CALL[ ]	/* CallFunction */";
};
width = 488;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(340,-6,o),
(397,38,o),
(440,103,cs),
(447,113,o),
(450,121,o),
(450,126,cs),
(450,133,o),
(447,140,o),
(435,140,cs),
(426,140,o),
(421,135,o),
(417,128,cs),
(374,57,o),
(322,26,o),
(253,26,cs),
(144,26,o),
(78,103,o),
(78,227,cs),
(78,358,o),
(155,452,o),
(263,452,cs),
(359,452,o),
(394,400,o),
(394,319,cs),
(394,312,o),
(398,296,o),
(411,296,cs),
(422,296,o),
(425,309,o),
(425,320,cs),
(425,327,o),
(425,342,o),
(426,364,cs),
(426,385,o),
(426,416,o),
(426,456,cs),
(426,471,o),
(420,482,o),
(408,482,cs),
(397,482,o),
(394,470,o),
(394,455,cs),
(394,443,o),
(397,427,o),
(398,419,c),
(367,466,o),
(321,482,o),
(266,482,cs),
(131,482,o),
(33,369,o),
(33,225,cs),
(33,97,o),
(120,-6,o),
(247,-6,cs)
);
},
{
closed = 1;
nodes = (
(151,510,o),
(203,559,o),
(256,596,c),
(332,542,o),
(361,510,o),
(376,510,cs),
(381,510,o),
(384,514,o),
(384,521,cs),
(384,546,o),
(281,640,o),
(256,640,cs),
(233,640,o),
(129,546,o),
(129,521,cs),
(129,514,o),
(132,510,o),
(137,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
61 1 7 9 0 1 1 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 9 7 9 106 8 10 2 7 0 7 106 0 4 1 3 1 4 3 104 0 2 2 0 83 6 1 0 0 23 67 0 1 1 0 83 6 1 0 0 23 67 0 3 3 5 83 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 9 7 9 106 8 10 2 7 0 7 106 0 4 1 3 1 4 3 104 0 2 1 0 2 80 6 1 0 0 1 4 0 1 92 0 3 3 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
57 56 74 72 67 65 56 79 57 79 40 38 36 38 36 39 37 11 22
CALL[ ]	/* CallFunction */";
};
width = 473;
}
);
note = ccircumflex;
unicode = 265;
},
{
glyphname = cdotaccent;
kernLeft = c;
kernRight = c;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(384,-6,o),
(450,49,o),
(477,100,cs),
(484,111,o),
(485,123,o),
(485,130,cs),
(485,146,o),
(473,161,o),
(450,161,cs),
(427,161,o),
(414,145,o),
(399,128,cs),
(372,97,o),
(337,73,o),
(269,73,cs),
(166,73,o),
(124,134,o),
(124,229,cs),
(124,327,o),
(170,404,o),
(272,404,cs),
(356,404,o),
(367,352,o),
(377,313,cs),
(380,301,o),
(392,282,o),
(421,282,cs),
(452,282,o),
(461,296,o),
(461,335,cs),
(461,342,o),
(460,385,o),
(460,463,cs),
(460,486,o),
(454,511,o),
(422,511,cs),
(390,511,o),
(380,488,o),
(380,465,cs),
(380,457,o),
(381,443,o),
(382,428,c),
(353,473,o),
(304,482,o),
(264,482,cs),
(120,482,o),
(26,361,o),
(26,231,cs),
(26,99,o),
(123,-6,o),
(269,-6,cs)
);
},
{
closed = 1;
nodes = (
(306,514,o),
(343,529,o),
(343,584,cs),
(343,620,o),
(315,645,o),
(283,645,cs),
(235,645,o),
(217,607,o),
(217,580,cs),
(217,537,o),
(243,514,o),
(276,514,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 2 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 4 1 3 1 4 3 104 0 7 0 8 0 7 8 91 0 0 0 1 4 0 1 91 0 2 2 6 83 0 6 6 23 67 0 3 3 5 83 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 4 1 3 1 4 3 104 0 7 0 8 0 7 8 91 0 6 0 2 1 6 2 91 0 0 0 1 4 0 1 91 0 3 3 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 38 40 41 36 38 38 41 37 9 24
CALL[ ]	/* CallFunction */";
};
width = 504;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(342,-6,o),
(410,30,o),
(457,101,cs),
(464,112,o),
(467,117,o),
(467,128,cs),
(467,147,o),
(452,154,o),
(437,154,cs),
(428,154,o),
(416,149,o),
(403,128,cs),
(379,88,o),
(326,56,o),
(249,56,cs),
(158,56,o),
(106,122,o),
(106,227,cs),
(106,342,o),
(171,422,o),
(259,422,cs),
(348,422,o),
(380,378,o),
(380,309,cs),
(380,294,o),
(396,288,o),
(407,288,cs),
(427,288,o),
(443,299,o),
(443,310,cs),
(443,359,o),
(444,427,o),
(444,478,cs),
(444,498,o),
(434,511,o),
(411,511,cs),
(388,511,o),
(380,498,o),
(380,483,cs),
(380,464,o),
(381,443,o),
(382,428,c),
(353,472,o),
(313,482,o),
(262,482,cs),
(127,482,o),
(29,369,o),
(29,225,cs),
(29,101,o),
(109,-6,o),
(253,-6,cs)
);
},
{
closed = 1;
nodes = (
(293,523,o),
(324,536,o),
(324,584,cs),
(324,615,o),
(302,636,o),
(275,636,cs),
(233,636,o),
(219,600,o),
(219,580,cs),
(219,544,o),
(241,523,o),
(268,523,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
1 1 2 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 4 1 3 1 4 3 104 0 7 0 8 0 7 8 91 0 0 0 1 4 0 1 91 0 2 2 6 83 0 6 6 23 67 0 3 3 5 83 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 4 1 3 1 4 3 104 0 7 0 8 0 7 8 91 0 6 0 2 1 6 2 91 0 0 0 1 4 0 1 91 0 3 3 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 38 40 38 36 38 36 41 38 9 35
CALL[ ]	/* CallFunction */";
};
width = 488;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(328,-6,o),
(389,30,o),
(431,101,cs),
(438,112,o),
(441,121,o),
(441,128,cs),
(441,136,o),
(435,143,o),
(428,143,cs),
(421,143,o),
(414,138,o),
(407,128,cs),
(366,59,o),
(318,26,o),
(253,26,cs),
(144,26,o),
(80,103,o),
(80,227,cs),
(80,358,o),
(156,452,o),
(263,452,cs),
(352,452,o),
(384,400,o),
(384,319,cs),
(384,303,o),
(390,298,o),
(401,298,cs),
(412,298,o),
(417,309,o),
(417,320,cs),
(417,347,o),
(418,401,o),
(418,484,cs),
(418,499,o),
(412,511,o),
(401,511,cs),
(390,511,o),
(384,498,o),
(384,483,cs),
(384,464,o),
(385,443,o),
(386,428,c),
(357,472,o),
(317,482,o),
(266,482,cs),
(131,482,o),
(33,369,o),
(33,225,cs),
(33,97,o),
(120,-6,o),
(247,-6,cs)
);
},
{
closed = 1;
nodes = (
(275,538,o),
(297,548,o),
(297,584,cs),
(297,607,o),
(282,621,o),
(263,621,cs),
(235,621,o),
(222,594,o),
(222,580,cs),
(222,556,o),
(237,538,o),
(256,538,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 6 3 5 3 6 5 104 0 0 0 1 2 0 1 91 0 2 0 3 6 2 3 91 0 4 4 8 83 0 8 8 23 67 0 5 5 7 83 0 7 7 16 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 6 3 5 3 6 5 104 0 0 0 1 2 0 1 91 0 8 0 4 3 8 4 91 0 2 0 3 6 2 3 91 0 5 5 7 83 0 7 7 16 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
40 37 35 38 36 41 39 36 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 465;
}
);
note = cdotaccent;
unicode = 267;
},
{
glyphname = d;
kernLeft = d;
kernRight = d;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(556,-30,o),
(579,-18,o),
(579,10,cs),
(579,45,o),
(547,45,o),
(499,48,cs),
(495,48,o),
(491,49,o),
(488,52,cs),
(484,55,o),
(482,63,o),
(482,76,cs),
(481,107,o),
(481,138,o),
(481,168,cs),
(481,197,o),
(481,224,o),
(481,247,cs),
(481,274,o),
(481,300,o),
(480,325,cs),
(480,340,o),
(480,408,o),
(482,534,cs),
(483,661,o),
(483,737,o),
(483,771,cs),
(483,808,o),
(449,809,o),
(397,809,cs),
(266,809,o),
(225,803,o),
(225,760,cs),
(225,747,o),
(236,740,o),
(257,740,cs),
(278,740,o),
(309,742,o),
(343,742,cs),
(371,742,o),
(389,739,o),
(389,708,cs),
(389,416,l),
(367,443,o),
(322,477,o),
(241,477,cs),
(154,477,o),
(96,434,o),
(65,376,cs),
(33,316,o),
(27,254,o),
(27,218,cs),
(27,122,o),
(77,-9,o),
(218,-9,cs),
(291,-9,o),
(358,25,o),
(386,83,c),
(388,29,ls),
(389,-11,o),
(398,-23,o),
(425,-27,cs),
(440,-30,o),
(498,-30,o),
(533,-30,cs)
);
},
{
closed = 1;
nodes = (
(185,67,o),
(121,101,o),
(121,221,cs),
(121,319,o),
(165,397,o),
(263,397,cs),
(334,397,o),
(362,358,o),
(377,327,cs),
(389,299,o),
(391,270,o),
(391,247,cs),
(391,128,o),
(339,67,o),
(251,67,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
40 1 7 3 18 1 6 7 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 4 4 5 83 0 5 5 14 67 0 7 7 3 83 0 3 3 23 67 8 1 6 6 2 83 0 2 2 24 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 3 0 7 6 3 7 91 0 4 4 5 83 0 5 5 14 67 8 1 6 6 2 83 0 2 2 24 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 0 7 6 3 7 91 0 0 0 1 0 1 87 0 4 4 5 83 0 5 5 14 67 8 1 6 6 2 83 0 2 2 24 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
72 71 83 81 71 91 72 91 37 119 42 41 84 34 9 21
CALL[ ]	/* CallFunction */";
};
width = 554;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(560,-30,o),
(575,-18,o),
(575,-2,cs),
(575,11,o),
(570,19,o),
(560,24,cs),
(550,29,o),
(531,31,o),
(502,31,cs),
(470,31,o),
(465,30,o),
(465,57,cs),
(464,131,o),
(463,192,o),
(463,239,cs),
(462,286,o),
(462,314,o),
(462,325,cs),
(462,345,o),
(462,411,o),
(464,535,cs),
(465,662,o),
(465,737,o),
(465,771,cs),
(465,808,o),
(439,809,o),
(388,809,cs),
(329,809,o),
(285,806,o),
(257,801,cs),
(229,795,o),
(215,783,o),
(215,766,cs),
(215,757,o),
(232,752,o),
(245,752,cs),
(270,752,o),
(290,752,o),
(305,753,cs),
(320,754,o),
(335,754,o),
(352,754,cs),
(375,754,o),
(392,751,o),
(392,726,cs),
(392,416,l),
(370,443,o),
(325,477,o),
(244,477,cs),
(157,477,o),
(99,434,o),
(68,376,cs),
(36,316,o),
(30,254,o),
(30,218,cs),
(30,122,o),
(80,-9,o),
(220,-9,cs),
(292,-9,o),
(358,23,o),
(389,83,c),
(391,29,ls),
(392,-4,o),
(400,-25,o),
(428,-28,cs),
(444,-28,o),
(483,-30,o),
(536,-30,cs)
);
},
{
closed = 1;
nodes = (
(178,51,o),
(103,102,o),
(103,222,cs),
(103,324,o),
(159,418,o),
(258,418,cs),
(337,418,o),
(367,373,o),
(384,334,c),
(393,301,o),
(395,275,o),
(395,248,cs),
(395,184,o),
(354,51,o),
(250,51,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
38 18 2 7 8 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 5 5 6 83 0 6 6 14 67 0 8 8 4 83 0 4 4 23 67 9 1 7 7 3 83 0 3 3 24 67 0 0 0 1 83 2 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 0 8 7 4 8 91 0 5 5 6 83 0 6 6 14 67 9 1 7 7 3 83 0 3 3 24 67 0 0 0 1 83 2 1 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 4 0 8 7 4 8 91 0 0 2 1 1 0 1 87 0 5 5 6 83 0 6 6 14 67 9 1 7 7 3 83 0 3 3 24 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
65 64 78 76 64 86 65 86 36 87 42 38 17 68 34 10 22
CALL[ ]	/* CallFunction */";
};
width = 548;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(552,-30,o),
(560,-28,o),
(564,-25,cs),
(567,-22,o),
(569,-18,o),
(569,-15,cs),
(569,-8,o),
(565,-4,o),
(557,-2,cs),
(548,-1,o),
(531,0,o),
(506,1,cs),
(448,1,o),
(439,3,o),
(439,27,cs),
(438,108,o),
(437,176,o),
(437,229,cs),
(436,282,o),
(436,314,o),
(436,325,cs),
(436,345,o),
(436,411,o),
(438,535,cs),
(439,662,o),
(439,737,o),
(439,771,cs),
(439,808,o),
(423,809,o),
(392,809,cs),
(286,809,o),
(229,799,o),
(229,783,cs),
(229,773,o),
(248,772,o),
(257,772,cs),
(280,772,o),
(298,772,o),
(312,773,cs),
(326,774,o),
(341,774,o),
(356,774,cs),
(379,774,o),
(396,773,o),
(396,756,cs),
(396,416,l),
(374,443,o),
(329,477,o),
(248,477,cs),
(161,477,o),
(103,434,o),
(72,376,cs),
(40,316,o),
(34,254,o),
(34,218,cs),
(34,122,o),
(84,-9,o),
(224,-9,cs),
(296,-9,o),
(361,26,o),
(393,83,c),
(395,29,ls),
(396,-4,o),
(404,-25,o),
(432,-28,cs),
(448,-28,o),
(487,-30,o),
(540,-30,cs)
);
},
{
closed = 1;
nodes = (
(151,21,o),
(77,85,o),
(77,222,cs),
(77,335,o),
(127,449,o),
(256,449,cs),
(336,449,o),
(372,405,o),
(388,349,cs),
(397,316,o),
(399,275,o),
(399,248,cs),
(399,145,o),
(368,21,o),
(241,21,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
40 20 2 7 8 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 5 5 6 83 0 6 6 14 67 0 8 8 4 83 0 4 4 23 67 9 1 7 7 3 83 0 3 3 24 67 0 0 0 1 83 2 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 0 8 7 4 8 91 0 5 5 6 83 0 6 6 14 67 9 1 7 7 3 83 0 3 3 24 67 0 0 0 1 83 2 1 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 4 0 8 7 4 8 91 0 0 2 1 1 0 1 87 0 5 5 6 83 0 6 6 14 67 9 1 7 7 3 83 0 3 3 24 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
71 70 84 82 70 92 71 92 54 103 42 38 17 68 36 10 22
CALL[ ]	/* CallFunction */";
};
width = 539;
}
);
note = d;
unicode = 100;
},
{
glyphname = dcaron;
kernLeft = d;
kernRight = d;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(556,-30,o),
(579,-18,o),
(579,10,cs),
(579,45,o),
(547,45,o),
(499,48,cs),
(495,48,o),
(491,49,o),
(488,52,cs),
(484,55,o),
(482,63,o),
(482,76,cs),
(481,107,o),
(481,138,o),
(481,168,cs),
(481,197,o),
(481,224,o),
(481,247,cs),
(481,274,o),
(481,300,o),
(480,325,cs),
(480,340,o),
(480,408,o),
(482,534,cs),
(483,661,o),
(483,737,o),
(483,771,cs),
(483,808,o),
(449,809,o),
(397,809,cs),
(266,809,o),
(225,803,o),
(225,760,cs),
(225,747,o),
(236,740,o),
(257,740,cs),
(278,740,o),
(309,742,o),
(343,742,cs),
(371,742,o),
(389,739,o),
(389,708,cs),
(389,416,l),
(367,443,o),
(322,477,o),
(241,477,cs),
(154,477,o),
(96,434,o),
(65,376,cs),
(33,316,o),
(27,254,o),
(27,218,cs),
(27,122,o),
(77,-9,o),
(218,-9,cs),
(291,-9,o),
(358,25,o),
(386,83,c),
(388,29,ls),
(389,-11,o),
(398,-23,o),
(425,-27,cs),
(440,-30,o),
(498,-30,o),
(533,-30,cs)
);
},
{
closed = 1;
nodes = (
(185,67,o),
(121,101,o),
(121,221,cs),
(121,319,o),
(165,397,o),
(263,397,cs),
(334,397,o),
(362,358,o),
(377,327,cs),
(389,299,o),
(391,270,o),
(391,247,cs),
(391,128,o),
(339,67,o),
(251,67,cs)
);
},
{
closed = 1;
nodes = (
(589,649,o),
(652,691,o),
(652,768,cs),
(652,825,o),
(616,849,o),
(584,849,cs),
(540,849,o),
(524,819,o),
(524,791,cs),
(524,760,o),
(560,758,o),
(560,741,cs),
(560,721,o),
(558,706,o),
(553,697,cs),
(548,687,o),
(545,679,o),
(545,672,cs),
(545,649,o),
(564,649,o),
(571,649,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
62 1 9 5 40 1 8 9 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 6 6 7 83 0 7 7 14 67 0 1 1 0 83 0 0 0 20 67 0 9 9 5 83 0 5 5 23 67 10 1 8 8 4 83 0 4 4 24 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 5 0 9 8 5 9 91 0 6 6 7 83 0 7 7 14 67 0 1 1 0 83 0 0 0 20 67 10 1 8 8 4 83 0 4 4 24 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 5 0 9 8 5 9 91 0 2 0 3 2 3 87 0 6 6 7 83 0 7 7 14 67 0 1 1 0 83 0 0 0 20 67 10 1 8 8 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 1 5 0 1 91 0 5 0 9 8 5 9 91 0 2 0 3 2 3 87 0 6 6 7 83 0 7 7 14 67 10 1 8 8 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
94 93 105 103 93 113 94 113 37 119 42 41 84 44 38 34 11 23
CALL[ ]	/* CallFunction */";
};
width = 554;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(560,-30,o),
(575,-18,o),
(575,-2,cs),
(575,11,o),
(570,19,o),
(560,24,cs),
(550,29,o),
(531,31,o),
(502,31,cs),
(470,31,o),
(465,30,o),
(465,57,cs),
(464,131,o),
(463,192,o),
(463,239,cs),
(462,286,o),
(462,314,o),
(462,325,cs),
(462,345,o),
(462,411,o),
(464,535,cs),
(465,662,o),
(465,737,o),
(465,771,cs),
(465,808,o),
(439,809,o),
(388,809,cs),
(329,809,o),
(285,806,o),
(257,801,cs),
(229,795,o),
(215,783,o),
(215,766,cs),
(215,757,o),
(232,752,o),
(245,752,cs),
(270,752,o),
(290,752,o),
(305,753,cs),
(320,754,o),
(335,754,o),
(352,754,cs),
(375,754,o),
(392,751,o),
(392,726,cs),
(392,416,l),
(370,443,o),
(325,477,o),
(244,477,cs),
(157,477,o),
(99,434,o),
(68,376,cs),
(36,316,o),
(30,254,o),
(30,218,cs),
(30,122,o),
(80,-9,o),
(220,-9,cs),
(292,-9,o),
(358,23,o),
(389,83,c),
(391,29,ls),
(392,-4,o),
(400,-25,o),
(428,-28,cs),
(444,-28,o),
(483,-30,o),
(536,-30,cs)
);
},
{
closed = 1;
nodes = (
(178,51,o),
(103,102,o),
(103,222,cs),
(103,324,o),
(159,418,o),
(258,418,cs),
(337,418,o),
(367,373,o),
(384,334,c),
(393,301,o),
(395,275,o),
(395,248,cs),
(395,184,o),
(354,51,o),
(250,51,cs)
);
},
{
closed = 1;
nodes = (
(581,674,o),
(622,724,o),
(622,778,cs),
(622,831,o),
(592,850,o),
(565,850,cs),
(528,850,o),
(513,825,o),
(513,801,cs),
(513,769,o),
(549,770,o),
(549,753,cs),
(549,736,o),
(547,723,o),
(543,715,cs),
(538,706,o),
(536,699,o),
(536,693,cs),
(536,676,o),
(550,674,o),
(557,674,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
39 19 2 7 8 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 5 5 6 83 0 6 6 14 67 0 10 10 9 83 0 9 9 20 67 0 8 8 4 83 0 4 4 23 67 11 1 7 7 3 83 0 3 3 24 67 0 0 0 1 83 2 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 4 0 8 7 4 8 91 0 5 5 6 83 0 6 6 14 67 0 10 10 9 83 0 9 9 20 67 11 1 7 7 3 83 0 3 3 24 67 0 0 0 1 83 2 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 4 0 8 7 4 8 91 0 0 2 1 1 0 1 87 0 5 5 6 83 0 6 6 14 67 0 10 10 9 83 0 9 9 20 67 11 1 7 7 3 83 0 3 3 24 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 9 0 10 4 9 10 91 0 4 0 8 7 4 8 91 0 0 2 1 1 0 1 87 0 5 5 6 83 0 6 6 14 67 11 1 7 7 3 83 0 3 3 24 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
66 65 100 98 92 90 79 77 65 87 66 87 36 87 42 38 17 68 35 12 33
CALL[ ]	/* CallFunction */";
};
width = 548;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(552,-30,o),
(560,-28,o),
(564,-25,cs),
(567,-22,o),
(569,-18,o),
(569,-15,cs),
(569,-8,o),
(565,-4,o),
(557,-2,cs),
(548,-1,o),
(531,0,o),
(506,1,cs),
(448,1,o),
(439,3,o),
(439,27,cs),
(438,108,o),
(437,176,o),
(437,229,cs),
(436,282,o),
(436,314,o),
(436,325,cs),
(436,345,o),
(436,411,o),
(438,535,cs),
(439,662,o),
(439,737,o),
(439,771,cs),
(439,808,o),
(423,809,o),
(392,809,cs),
(286,809,o),
(229,799,o),
(229,783,cs),
(229,773,o),
(248,772,o),
(257,772,cs),
(280,772,o),
(298,772,o),
(312,773,cs),
(326,774,o),
(341,774,o),
(356,774,cs),
(379,774,o),
(396,773,o),
(396,756,cs),
(396,416,l),
(374,443,o),
(329,477,o),
(248,477,cs),
(161,477,o),
(103,434,o),
(72,376,cs),
(40,316,o),
(34,254,o),
(34,218,cs),
(34,122,o),
(84,-9,o),
(224,-9,cs),
(296,-9,o),
(361,26,o),
(393,83,c),
(395,29,ls),
(396,-4,o),
(404,-25,o),
(432,-28,cs),
(448,-28,o),
(487,-30,o),
(540,-30,cs)
);
},
{
closed = 1;
nodes = (
(151,21,o),
(77,85,o),
(77,222,cs),
(77,335,o),
(127,449,o),
(256,449,cs),
(336,449,o),
(372,405,o),
(388,349,cs),
(397,316,o),
(399,275,o),
(399,248,cs),
(399,145,o),
(368,21,o),
(241,21,cs)
);
},
{
closed = 1;
nodes = (
(563,715,o),
(583,782,o),
(583,806,cs),
(583,833,o),
(566,850,o),
(541,850,cs),
(520,850,o),
(505,835,o),
(505,816,cs),
(505,793,o),
(531,784,o),
(531,772,cs),
(531,765,o),
(528,757,o),
(522,750,cs),
(515,742,o),
(512,735,o),
(512,730,cs),
(512,722,o),
(521,715,o),
(528,715,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
62 42 2 9 10 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 7 7 8 83 0 8 8 14 67 0 1 1 0 83 0 0 0 20 67 0 10 10 6 83 0 6 6 23 67 11 1 9 9 5 83 0 5 5 24 67 0 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 6 0 10 9 6 10 91 0 7 7 8 83 0 8 8 14 67 0 1 1 0 83 0 0 0 20 67 11 1 9 9 5 83 0 5 5 24 67 0 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 6 0 10 9 6 10 91 0 2 4 1 3 2 3 87 0 7 7 8 83 0 8 8 14 67 0 1 1 0 83 0 0 0 20 67 11 1 9 9 5 83 0 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 0 0 1 6 0 1 91 0 6 0 10 9 6 10 91 0 2 4 1 3 2 3 87 0 7 7 8 83 0 8 8 14 67 11 1 9 9 5 83 0 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
93 92 106 104 92 114 93 114 54 103 42 38 17 68 46 38 34 12 24
CALL[ ]	/* CallFunction */";
};
width = 539;
}
);
note = dcaron;
unicode = 271;
},
{
glyphname = dcroat;
kernLeft = d;
kernRight = d;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(556,-30,o),
(579,-18,o),
(579,10,cs),
(579,45,o),
(547,45,o),
(499,48,cs),
(495,48,o),
(491,49,o),
(488,52,cs),
(484,55,o),
(482,63,o),
(482,76,cs),
(481,107,o),
(481,138,o),
(481,168,cs),
(481,197,o),
(481,224,o),
(481,247,cs),
(481,274,o),
(481,300,o),
(480,325,cs),
(480,372,o),
(482,436,o),
(482,565,c),
(540,565,ls),
(567,565,o),
(576,595,o),
(576,609,cs),
(576,628,o),
(561,648,o),
(548,648,cs),
(529,648,o),
(509,647,o),
(482,646,c),
(483,674,o),
(483,699,o),
(483,721,cs),
(483,743,o),
(483,760,o),
(483,771,cs),
(483,808,o),
(449,809,o),
(397,809,cs),
(266,809,o),
(225,803,o),
(225,760,cs),
(225,747,o),
(236,740,o),
(257,740,cs),
(278,740,o),
(309,742,o),
(343,742,cs),
(371,742,o),
(389,739,o),
(389,708,cs),
(389,645,l),
(353,645,o),
(317,647,o),
(296,647,cs),
(273,647,o),
(263,623,o),
(263,606,cs),
(263,589,o),
(276,564,o),
(296,564,cs),
(389,564,l),
(389,416,l),
(367,443,o),
(322,477,o),
(241,477,cs),
(154,477,o),
(96,434,o),
(65,376,cs),
(33,316,o),
(27,254,o),
(27,218,cs),
(27,122,o),
(77,-9,o),
(218,-9,cs),
(291,-9,o),
(358,25,o),
(386,83,c),
(388,29,ls),
(389,-11,o),
(398,-23,o),
(425,-27,cs),
(440,-30,o),
(498,-30,o),
(533,-30,cs)
);
},
{
closed = 1;
nodes = (
(185,67,o),
(121,101,o),
(121,221,cs),
(121,319,o),
(165,397,o),
(263,397,cs),
(334,397,o),
(362,358,o),
(377,327,cs),
(389,299,o),
(391,270,o),
(391,247,cs),
(391,128,o),
(339,67,o),
(251,67,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
40 1 11 3 18 1 10 11 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
8 1 5 9 1 4 3 5 4 91 0 6 6 7 83 0 7 7 14 67 0 11 11 3 83 0 3 3 23 67 12 1 10 10 2 83 0 2 2 24 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
8 1 5 9 1 4 3 5 4 91 0 3 0 11 10 3 11 91 0 6 6 7 83 0 7 7 14 67 12 1 10 10 2 83 0 2 2 24 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
8 1 5 9 1 4 3 5 4 91 0 3 0 11 10 3 11 91 0 0 0 1 0 1 87 0 6 6 7 83 0 7 7 14 67 12 1 10 10 2 83 0 2 2 24 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
98 97 109 107 97 117 98 117 87 85 69 37 115 100 37 42 41 84 34 13 24
CALL[ ]	/* CallFunction */";
};
width = 554;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(560,-30,o),
(575,-18,o),
(575,-2,cs),
(575,11,o),
(570,19,o),
(560,24,cs),
(550,29,o),
(531,31,o),
(502,31,cs),
(470,31,o),
(465,30,o),
(465,57,cs),
(464,131,o),
(463,192,o),
(463,239,cs),
(462,286,o),
(462,314,o),
(462,325,cs),
(462,345,o),
(462,411,o),
(464,535,cs),
(465,662,o),
(465,737,o),
(465,771,cs),
(465,808,o),
(439,809,o),
(388,809,cs),
(329,809,o),
(285,806,o),
(257,801,cs),
(229,795,o),
(215,783,o),
(215,766,cs),
(215,757,o),
(232,752,o),
(245,752,cs),
(270,752,o),
(290,752,o),
(305,753,cs),
(320,754,o),
(335,754,o),
(352,754,cs),
(375,754,o),
(392,751,o),
(392,726,cs),
(392,416,l),
(370,443,o),
(325,477,o),
(244,477,cs),
(157,477,o),
(99,434,o),
(68,376,cs),
(36,316,o),
(30,254,o),
(30,218,cs),
(30,122,o),
(80,-9,o),
(220,-9,cs),
(292,-9,o),
(358,23,o),
(389,83,c),
(391,29,ls),
(392,-4,o),
(400,-25,o),
(428,-28,cs),
(444,-28,o),
(483,-30,o),
(536,-30,cs)
);
},
{
closed = 1;
nodes = (
(178,51,o),
(103,102,o),
(103,222,cs),
(103,324,o),
(159,418,o),
(258,418,cs),
(337,418,o),
(367,373,o),
(384,334,c),
(393,301,o),
(395,275,o),
(395,248,cs),
(395,184,o),
(354,51,o),
(250,51,cs)
);
},
{
closed = 1;
nodes = (
(363,562,o),
(460,563,o),
(534,563,cs),
(557,563,o),
(563,587,o),
(563,598,cs),
(563,613,o),
(553,628,o),
(542,628,cs),
(526,628,o),
(508,628,o),
(487,627,cs),
(466,626,o),
(442,625,o),
(414,625,cs),
(372,625,o),
(323,627,o),
(293,627,cs),
(274,627,o),
(267,608,o),
(267,595,cs),
(267,582,o),
(278,562,o),
(293,562,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
63 43 2 9 10 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
11 1 0 0 1 6 0 1 91 0 7 7 8 83 0 8 8 14 67 0 10 10 6 83 0 6 6 23 67 12 1 9 9 5 83 0 5 5 24 67 0 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
11 1 0 0 1 6 0 1 91 0 6 0 10 9 6 10 91 0 7 7 8 83 0 8 8 14 67 12 1 9 9 5 83 0 5 5 24 67 0 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
11 1 0 0 1 6 0 1 91 0 6 0 10 9 6 10 91 0 2 4 1 3 2 3 87 0 7 7 8 83 0 8 8 14 67 12 1 9 9 5 83 0 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
90 89 1 0 103 101 89 111 90 111 77 75 71 66 59 57 47 45 39 38 37 33 29 27 12 5 0 24 1 16 13 15
CALL[ ]	/* CallFunction */";
};
width = 548;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(552,-30,o),
(560,-28,o),
(564,-25,cs),
(567,-22,o),
(569,-18,o),
(569,-15,cs),
(569,-8,o),
(565,-4,o),
(557,-2,cs),
(548,-1,o),
(531,0,o),
(506,1,cs),
(448,1,o),
(439,3,o),
(439,27,cs),
(438,108,o),
(437,176,o),
(437,229,cs),
(436,282,o),
(436,314,o),
(436,325,cs),
(436,378,o),
(438,445,o),
(438,577,c),
(455,577,o),
(472,577,o),
(488,578,cs),
(503,578,o),
(516,578,o),
(526,578,cs),
(541,578,o),
(545,591,o),
(545,598,cs),
(545,605,o),
(539,613,o),
(534,613,cs),
(521,613,o),
(506,613,o),
(491,612,cs),
(475,611,o),
(457,611,o),
(438,610,c),
(439,645,o),
(439,678,o),
(439,707,cs),
(439,736,o),
(439,757,o),
(439,771,cs),
(439,808,o),
(423,809,o),
(392,809,cs),
(286,809,o),
(229,799,o),
(229,783,cs),
(229,773,o),
(248,772,o),
(257,772,cs),
(280,772,o),
(298,772,o),
(312,773,cs),
(326,774,o),
(341,774,o),
(356,774,cs),
(379,774,o),
(396,773,o),
(396,756,cs),
(396,610,l),
(354,610,o),
(311,612,o),
(285,612,cs),
(274,612,o),
(269,602,o),
(269,595,cs),
(269,588,o),
(276,577,o),
(285,577,cs),
(396,577,l),
(396,416,l),
(374,443,o),
(329,477,o),
(248,477,cs),
(161,477,o),
(103,434,o),
(72,376,cs),
(40,316,o),
(34,254,o),
(34,218,cs),
(34,122,o),
(84,-9,o),
(224,-9,cs),
(296,-9,o),
(361,26,o),
(393,83,c),
(395,29,ls),
(396,-4,o),
(404,-25,o),
(432,-28,cs),
(448,-28,o),
(487,-30,o),
(540,-30,cs)
);
},
{
closed = 1;
nodes = (
(151,21,o),
(77,85,o),
(77,222,cs),
(77,335,o),
(127,449,o),
(256,449,cs),
(336,449,o),
(372,405,o),
(388,349,cs),
(397,316,o),
(399,275,o),
(399,248,cs),
(399,145,o),
(368,21,o),
(241,21,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
40 20 2 11 12 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
9 1 6 10 1 5 4 6 5 91 0 7 7 8 83 0 8 8 14 67 0 12 12 4 83 0 4 4 23 67 13 1 11 11 3 83 0 3 3 24 67 0 0 0 1 83 2 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
9 1 6 10 1 5 4 6 5 91 0 4 0 12 11 4 12 91 0 7 7 8 83 0 8 8 14 67 13 1 11 11 3 83 0 3 3 24 67 0 0 0 1 83 2 1 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
9 1 6 10 1 5 4 6 5 91 0 4 0 12 11 4 12 91 0 0 2 1 1 0 1 87 0 7 7 8 83 0 8 8 14 67 13 1 11 11 3 83 0 3 3 24 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
97 96 110 108 96 118 97 118 88 84 80 76 54 99 100 37 42 38 17 68 36 14 24
CALL[ ]	/* CallFunction */";
};
width = 539;
}
);
note = dcroat;
unicode = 273;
},
{
glyphname = eth;
kernLeft = c;
kernRight = eth;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(487,-19,o),
(544,127,o),
(544,220,cs),
(544,365,o),
(505,501,o),
(433,621,c),
(425,632,o),
(423,638,o),
(414,654,c),
(429,663,o),
(443,670,o),
(455,677,cs),
(466,684,o),
(476,689,o),
(485,694,cs),
(492,697,o),
(502,708,o),
(502,725,cs),
(502,740,o),
(494,756,o),
(470,756,cs),
(454,756,o),
(390,718,o),
(376,707,c),
(328,766,o),
(294,791,o),
(259,819,cs),
(248,828,o),
(228,833,o),
(211,833,cs),
(187,833,o),
(176,815,o),
(176,800,cs),
(176,796,o),
(176,787,o),
(183,783,cs),
(230,754,o),
(276,723,o),
(315,671,c),
(243,632,ls),
(224,621,o),
(215,615,o),
(215,603,cs),
(215,593,o),
(226,566,o),
(244,566,cs),
(239,566,o),
(303,586,o),
(349,617,c),
(377,569,o),
(399,521,o),
(415,483,cs),
(428,451,o),
(440,418,o),
(445,413,cs),
(398,454,o),
(333,468,o),
(274,468,cs),
(158,468,o),
(26,396,o),
(26,230,cs),
(26,114,o),
(87,-19,o),
(277,-19,cs)
);
},
{
closed = 1;
nodes = (
(196,60,o),
(122,102,o),
(122,224,cs),
(122,309,o),
(181,387,o),
(292,387,cs),
(366,387,o),
(449,347,o),
(449,219,cs),
(449,142,o),
(411,60,o),
(283,60,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
71 54 40 9 4 3 0 35 1 6 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
7 1 0 4 3 4 0 3 104 0 3 2 4 3 2 102 0 4 4 20 67 0 6 6 2 83 0 2 2 23 67 8 1 5 5 1 84 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
7 1 0 4 3 4 0 3 104 0 3 2 4 3 2 102 0 2 0 6 5 2 6 91 0 4 4 20 67 8 1 5 5 1 84 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 4 0 4 106 7 1 0 3 0 106 0 3 2 3 106 0 2 0 6 5 2 6 91 8 1 5 5 1 84 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
77 76 1 0 87 85 76 95 77 95 64 62 46 44 33 31 23 21 0 75 1 75 9 15
CALL[ ]	/* CallFunction */";
};
width = 578;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(489,-19,o),
(526,128,o),
(526,220,cs),
(526,361,o),
(480,497,o),
(417,609,cs),
(412,619,o),
(408,626,o),
(405,631,cs),
(402,635,o),
(397,642,o),
(392,651,c),
(407,660,o),
(422,668,o),
(435,676,cs),
(448,683,o),
(458,689,o),
(467,694,cs),
(474,698,o),
(482,708,o),
(482,721,cs),
(482,736,o),
(471,747,o),
(455,747,cs),
(442,747,o),
(383,710,o),
(361,695,c),
(315,755,o),
(275,792,o),
(241,819,cs),
(232,826,o),
(216,832,o),
(201,832,cs),
(185,832,o),
(172,820,o),
(172,805,cs),
(172,796,o),
(177,788,o),
(186,783,cs),
(230,755,o),
(275,718,o),
(314,667,c),
(239,627,ls),
(230,622,o),
(218,614,o),
(218,602,cs),
(218,590,o),
(230,573,o),
(243,573,cs),
(241,573,o),
(294,591,o),
(343,622,c),
(398,532,o),
(439,428,o),
(452,376,c),
(405,444,o),
(327,467,o),
(265,467,cs),
(147,467,o),
(29,386,o),
(29,230,cs),
(29,114,o),
(96,-19,o),
(276,-19,cs)
);
},
{
closed = 1;
nodes = (
(188,42,o),
(104,95,o),
(104,227,cs),
(104,322,o),
(166,405,o),
(278,405,cs),
(382,405,o),
(452,325,o),
(452,209,cs),
(452,141,o),
(418,42,o),
(275,42,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
68 52 40 9 4 3 0 35 1 5 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
7 1 0 4 3 4 0 3 104 0 3 2 4 3 2 102 0 4 4 20 67 0 6 6 2 83 0 2 2 23 67 8 1 5 5 1 84 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
7 1 0 4 3 4 0 3 104 0 3 2 4 3 2 102 0 2 0 6 5 2 6 91 0 4 4 20 67 8 1 5 5 1 84 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 4 0 4 106 7 1 0 3 0 106 0 3 2 3 106 0 2 0 6 5 2 6 91 8 1 5 5 1 84 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
74 73 1 0 84 82 73 92 74 92 61 59 46 44 31 29 21 19 0 72 1 72 9 15
CALL[ ]	/* CallFunction */";
};
width = 561;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(450,-19,o),
(500,128,o),
(500,220,cs),
(500,354,o),
(452,496,o),
(400,594,cs),
(395,604,o),
(389,614,o),
(383,623,cs),
(377,632,o),
(371,642,o),
(366,651,c),
(381,660,o),
(396,668,o),
(409,676,cs),
(422,683,o),
(432,689,o),
(441,694,cs),
(450,699,o),
(453,711,o),
(453,715,cs),
(453,730,o),
(438,732,o),
(434,732,cs),
(430,732,o),
(419,727,o),
(402,716,cs),
(385,705,o),
(366,693,o),
(346,680,c),
(299,747,o),
(252,788,o),
(215,819,cs),
(206,826,o),
(196,830,o),
(187,830,cs),
(182,830,o),
(167,829,o),
(167,814,cs),
(167,799,o),
(175,794,o),
(190,783,cs),
(233,755,o),
(274,711,o),
(313,660,c),
(234,619,ls),
(223,612,o),
(222,607,o),
(222,600,cs),
(222,587,o),
(234,584,o),
(242,584,cs),
(245,584,o),
(256,589,o),
(274,598,cs),
(291,607,o),
(311,618,o),
(333,631,c),
(397,535,o),
(445,419,o),
(462,314,c),
(412,434,o),
(318,466,o),
(252,466,cs),
(134,466,o),
(33,374,o),
(33,230,cs),
(33,115,o),
(108,-19,o),
(274,-19,cs)
);
},
{
closed = 1;
nodes = (
(186,12,o),
(78,75,o),
(78,235,cs),
(78,346,o),
(131,435,o),
(246,435,cs),
(397,435,o),
(456,285,o),
(456,196,cs),
(456,124,o),
(405,12,o),
(268,12,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
64 50 40 9 4 3 0 37 1 5 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
7 1 0 4 3 4 0 3 104 0 3 2 4 3 2 102 0 4 4 20 67 0 6 6 2 83 0 2 2 23 67 8 1 5 5 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
16
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
7 1 0 4 3 4 0 3 104 0 3 2 4 3 2 102 0 4 4 12 67 0 6 6 2 83 0 2 2 23 67 8 1 5 5 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
7 1 0 4 3 4 0 3 104 0 3 2 4 3 2 102 0 4 4 20 67 0 6 6 2 83 0 2 2 23 67 8 1 5 5 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
7 1 0 4 3 4 0 3 104 0 3 2 4 3 2 102 0 2 0 6 5 2 6 91 0 4 4 20 67 8 1 5 5 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 4 0 4 106 7 1 0 3 0 106 0 3 2 3 106 0 2 0 6 5 2 6 91 8 1 5 5 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
68 67 1 0 78 76 67 86 68 86 60 58 44 42 33 31 23 21 0 66 1 66 9 15
CALL[ ]	/* CallFunction */";
};
width = 537;
}
);
note = eth;
unicode = 240;
},
{
glyphname = e;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(429,-14,o),
(470,101,o),
(470,143,cs),
(470,176,o),
(454,183,o),
(429,183,cs),
(406,183,o),
(392,167,o),
(384,146,cs),
(370,108,o),
(340,62,o),
(269,62,cs),
(149,62,o),
(124,147,o),
(124,218,cs),
(124,219,o),
(124,221,o),
(124,224,cs),
(124,226,o),
(124,228,o),
(125,229,c),
(126,229,o),
(132,229,o),
(142,229,cs),
(152,229,o),
(164,229,o),
(179,229,cs),
(193,229,o),
(208,229,o),
(225,230,cs),
(242,230,o),
(257,230,o),
(272,230,cs),
(287,230,o),
(299,230,o),
(310,230,cs),
(321,230,o),
(327,230,o),
(330,230,cs),
(405,230,o),
(431,232,o),
(447,241,cs),
(467,252,o),
(474,270,o),
(474,297,cs),
(474,355,o),
(427,478,o),
(264,478,cs),
(123,478,o),
(31,383,o),
(31,227,cs),
(31,72,o),
(123,-14,o),
(263,-14,cs)
);
},
{
closed = 1;
nodes = (
(134,347,o),
(181,403,o),
(262,403,cs),
(343,403,o),
(378,352,o),
(378,316,cs),
(378,300,o),
(372,292,o),
(360,292,cs),
(126,288,l),
(126,288,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 6 2 6 3 2 104 7 1 0 8 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 6 2 6 3 2 104 0 5 0 1 0 5 1 91 7 1 0 8 1 6 3 0 6 91 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
13 13 1 0 13 66 13 58 48 46 38 36 30 28 22 20 8 6 0 12 1 12 9 15
CALL[ ]	/* CallFunction */";
};
width = 507;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(409,-13,o),
(463,75,o),
(463,173,cs),
(463,193,o),
(449,205,o),
(433,205,cs),
(405,205,o),
(399,184,o),
(399,173,cs),
(399,126,o),
(364,51,o),
(258,51,cs),
(160,51,o),
(105,136,o),
(105,218,cs),
(105,225,o),
(106,232,o),
(107,239,c),
(151,239,o),
(208,240,o),
(248,240,cs),
(280,240,o),
(310,240,o),
(339,241,cs),
(367,241,o),
(391,241,o),
(412,241,cs),
(439,241,o),
(454,273,o),
(454,304,cs),
(454,357,o),
(404,477,o),
(257,477,cs),
(122,477,o),
(30,384,o),
(30,226,cs),
(30,85,o),
(104,-13,o),
(242,-13,cs)
);
},
{
closed = 1;
nodes = (
(121,354,o),
(170,415,o),
(254,415,cs),
(337,415,o),
(381,354,o),
(381,311,cs),
(381,306,o),
(375,303,o),
(364,303,cs),
(111,299,l),
(111,299,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 6 2 6 3 2 104 7 1 0 8 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 6 2 6 3 2 104 0 5 0 1 0 5 1 91 7 1 0 8 1 6 3 0 6 91 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
13 13 1 0 13 62 13 54 48 46 38 36 30 28 22 20 8 6 0 12 1 12 9 15
CALL[ ]	/* CallFunction */";
};
width = 491;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356,-11,o),
(442,81,o),
(442,187,cs),
(442,199,o),
(436,205,o),
(425,205,cs),
(414,205,o),
(408,199,o),
(408,187,cs),
(408,101,o),
(351,21,o),
(243,21,cs),
(123,21,o),
(79,122,o),
(79,218,cs),
(79,230,o),
(80,244,o),
(81,259,c),
(134,259,o),
(203,260,o),
(252,260,cs),
(279,260,o),
(305,260,o),
(330,260,cs),
(355,260,o),
(376,260,o),
(393,261,cs),
(417,262,o),
(428,283,o),
(428,304,cs),
(428,359,o),
(374,477,o),
(248,477,cs),
(126,477,o),
(34,372,o),
(34,226,cs),
(34,97,o),
(100,-11,o),
(245,-11,cs)
);
},
{
closed = 1;
nodes = (
(85,289,l),
(85,289,l),
(98,364,o),
(146,445,o),
(245,445,cs),
(344,445,o),
(385,364,o),
(385,311,cs),
(385,299,o),
(379,293,o),
(368,293,cs),
(85,289,l),
(85,289,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 6 2 6 3 2 104 7 1 0 8 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 6 2 6 3 2 104 0 5 0 1 0 5 1 91 7 1 0 8 1 6 3 0 6 91 0 2 2 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
13 13 1 0 13 60 13 52 46 44 36 34 29 27 22 20 8 6 0 12 1 12 9 15
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = e;
unicode = 101;
},
{
glyphname = eacute;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(429,-14,o),
(470,101,o),
(470,143,cs),
(470,176,o),
(454,183,o),
(429,183,cs),
(406,183,o),
(392,167,o),
(384,146,cs),
(370,108,o),
(340,62,o),
(269,62,cs),
(149,62,o),
(124,147,o),
(124,218,cs),
(124,219,o),
(124,221,o),
(124,224,cs),
(124,226,o),
(124,228,o),
(125,229,c),
(126,229,o),
(132,229,o),
(142,229,cs),
(152,229,o),
(164,229,o),
(179,229,cs),
(193,229,o),
(208,229,o),
(225,230,cs),
(242,230,o),
(257,230,o),
(272,230,cs),
(287,230,o),
(299,230,o),
(310,230,cs),
(321,230,o),
(327,230,o),
(330,230,cs),
(405,230,o),
(431,232,o),
(447,241,cs),
(467,252,o),
(474,270,o),
(474,297,cs),
(474,355,o),
(427,478,o),
(264,478,cs),
(123,478,o),
(31,383,o),
(31,227,cs),
(31,72,o),
(123,-14,o),
(263,-14,cs)
);
},
{
closed = 1;
nodes = (
(134,347,o),
(181,403,o),
(262,403,cs),
(343,403,o),
(378,352,o),
(378,316,cs),
(378,300,o),
(372,292,o),
(360,292,cs),
(126,288,l),
(126,288,l)
);
},
{
closed = 1;
nodes = (
(238,502,o),
(273,525,o),
(312,559,cs),
(347,590,o),
(376,624,o),
(376,642,cs),
(376,667,o),
(349,689,o),
(306,690,cs),
(281,690,o),
(250,651,o),
(226,611,cs),
(206,576,o),
(184,529,o),
(184,524,cs),
(184,509,o),
(206,502,o),
(221,502,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 7 0 106 0 5 8 4 8 5 4 104 9 1 2 10 1 8 5 2 8 92 0 3 3 7 83 0 7 7 23 67 0 4 4 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 106 0 0 7 0 106 0 5 8 4 8 5 4 104 0 7 0 3 2 7 3 91 9 1 2 10 1 8 5 2 8 92 0 4 4 6 83 0 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
31 31 19 18 31 84 31 76 66 64 56 54 48 46 40 38 26 24 18 30 19 30 38 38 11 17
CALL[ ]	/* CallFunction */";
};
width = 507;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(409,-13,o),
(463,75,o),
(463,173,cs),
(463,193,o),
(449,205,o),
(433,205,cs),
(405,205,o),
(399,184,o),
(399,173,cs),
(399,126,o),
(364,51,o),
(258,51,cs),
(160,51,o),
(105,136,o),
(105,218,cs),
(105,225,o),
(106,232,o),
(107,239,c),
(151,239,o),
(208,240,o),
(248,240,cs),
(280,240,o),
(310,240,o),
(339,241,cs),
(367,241,o),
(391,241,o),
(412,241,cs),
(439,241,o),
(454,273,o),
(454,304,cs),
(454,357,o),
(404,477,o),
(257,477,cs),
(122,477,o),
(30,384,o),
(30,226,cs),
(30,85,o),
(104,-13,o),
(242,-13,cs)
);
},
{
closed = 1;
nodes = (
(121,354,o),
(170,415,o),
(254,415,cs),
(337,415,o),
(381,354,o),
(381,311,cs),
(381,306,o),
(375,303,o),
(364,303,cs),
(111,299,l),
(111,299,l)
);
},
{
closed = 1;
nodes = (
(240,505,o),
(345,604,o),
(345,633,cs),
(345,656,o),
(327,671,o),
(296,671,cs),
(278,671,o),
(249,637,o),
(226,601,cs),
(200,561,o),
(185,527,o),
(185,523,cs),
(185,510,o),
(199,505,o),
(210,505,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 7 0 106 0 5 8 4 8 5 4 104 9 1 2 10 1 8 5 2 8 92 0 3 3 7 83 0 7 7 23 67 0 4 4 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 106 0 0 7 0 106 0 5 8 4 8 5 4 104 0 7 0 3 2 7 3 91 9 1 2 10 1 8 5 2 8 92 0 4 4 6 83 0 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
31 31 19 18 31 80 31 72 66 64 56 54 48 46 40 38 26 24 18 30 19 30 40 36 11 17
CALL[ ]	/* CallFunction */";
};
width = 491;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356,-11,o),
(442,81,o),
(442,187,cs),
(442,199,o),
(436,205,o),
(425,205,cs),
(414,205,o),
(408,199,o),
(408,187,cs),
(408,101,o),
(351,21,o),
(243,21,cs),
(123,21,o),
(79,122,o),
(79,218,cs),
(79,230,o),
(80,244,o),
(81,259,c),
(134,259,o),
(203,260,o),
(252,260,cs),
(279,260,o),
(305,260,o),
(330,260,cs),
(355,260,o),
(376,260,o),
(393,261,cs),
(417,262,o),
(428,283,o),
(428,304,cs),
(428,359,o),
(374,477,o),
(248,477,cs),
(126,477,o),
(34,372,o),
(34,226,cs),
(34,97,o),
(100,-11,o),
(245,-11,cs)
);
},
{
closed = 1;
nodes = (
(85,289,l),
(85,289,l),
(98,364,o),
(146,445,o),
(245,445,cs),
(344,445,o),
(385,364,o),
(385,311,cs),
(385,299,o),
(379,293,o),
(368,293,cs),
(85,289,l),
(85,289,l)
);
},
{
closed = 1;
nodes = (
(214,510,o),
(301,597,o),
(301,618,cs),
(301,637,o),
(293,640,o),
(282,640,cs),
(262,640,o),
(187,546,o),
(187,521,cs),
(187,514,o),
(190,510,o),
(195,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 8 7 8 106 0 7 5 7 106 0 3 6 2 6 3 2 104 9 1 0 10 1 6 3 0 6 92 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 8 7 8 106 0 7 5 7 106 0 3 6 2 6 3 2 104 0 5 0 1 0 5 1 91 9 1 0 10 1 6 3 0 6 92 0 2 2 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
13 13 1 0 74 72 67 65 13 60 13 52 46 44 36 34 29 27 22 20 8 6 0 12 1 12 11 15
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = eacute;
unicode = 233;
},
{
glyphname = ebreve;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(429,-14,o),
(470,101,o),
(470,143,cs),
(470,176,o),
(454,183,o),
(429,183,cs),
(406,183,o),
(392,167,o),
(384,146,cs),
(370,108,o),
(340,62,o),
(269,62,cs),
(149,62,o),
(124,147,o),
(124,218,cs),
(124,219,o),
(124,221,o),
(124,224,cs),
(124,226,o),
(124,228,o),
(125,229,c),
(126,229,o),
(132,229,o),
(142,229,cs),
(152,229,o),
(164,229,o),
(179,229,cs),
(193,229,o),
(208,229,o),
(225,230,cs),
(242,230,o),
(257,230,o),
(272,230,cs),
(287,230,o),
(299,230,o),
(310,230,cs),
(321,230,o),
(327,230,o),
(330,230,cs),
(405,230,o),
(431,232,o),
(447,241,cs),
(467,252,o),
(474,270,o),
(474,297,cs),
(474,355,o),
(427,478,o),
(264,478,cs),
(123,478,o),
(31,383,o),
(31,227,cs),
(31,72,o),
(123,-14,o),
(263,-14,cs)
);
},
{
closed = 1;
nodes = (
(134,347,o),
(181,403,o),
(262,403,cs),
(343,403,o),
(378,352,o),
(378,316,cs),
(378,300,o),
(372,292,o),
(360,292,cs),
(126,288,l),
(126,288,l)
);
},
{
closed = 1;
nodes = (
(316,510,o),
(385,537,o),
(385,589,cs),
(385,616,o),
(367,619,o),
(347,619,cs),
(330,619,o),
(315,605,o),
(315,590,cs),
(315,585,o),
(311,580,o),
(302,575,cs),
(293,570,o),
(278,567,o),
(259,567,cs),
(229,567,o),
(200,575,o),
(200,590,cs),
(200,613,o),
(187,619,o),
(164,619,cs),
(141,619,o),
(132,606,o),
(132,589,cs),
(132,546,o),
(177,510,o),
(264,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
10 1 8 9 8 106 0 3 6 2 6 3 2 104 0 9 0 7 5 9 7 91 11 1 0 12 1 6 3 0 6 92 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
10 1 8 9 8 106 0 3 6 2 6 3 2 104 0 9 0 7 5 9 7 91 0 5 0 1 0 5 1 91 11 1 0 12 1 6 3 0 6 92 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
13 13 1 0 93 91 87 85 79 77 73 71 13 66 13 58 48 46 38 36 30 28 22 20 8 6 0 12 1 12 13 15
CALL[ ]	/* CallFunction */";
};
width = 507;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(409,-13,o),
(463,75,o),
(463,173,cs),
(463,193,o),
(449,205,o),
(433,205,cs),
(405,205,o),
(399,184,o),
(399,173,cs),
(399,126,o),
(364,51,o),
(258,51,cs),
(160,51,o),
(105,136,o),
(105,218,cs),
(105,225,o),
(106,232,o),
(107,239,c),
(151,239,o),
(208,240,o),
(248,240,cs),
(280,240,o),
(310,240,o),
(339,241,cs),
(367,241,o),
(391,241,o),
(412,241,cs),
(439,241,o),
(454,273,o),
(454,304,cs),
(454,357,o),
(404,477,o),
(257,477,cs),
(122,477,o),
(30,384,o),
(30,226,cs),
(30,85,o),
(104,-13,o),
(242,-13,cs)
);
},
{
closed = 1;
nodes = (
(121,354,o),
(170,415,o),
(254,415,cs),
(337,415,o),
(381,354,o),
(381,311,cs),
(381,306,o),
(375,303,o),
(364,303,cs),
(111,299,l),
(111,299,l)
);
},
{
closed = 1;
nodes = (
(308,510,o),
(374,537,o),
(374,589,cs),
(374,616,o),
(357,617,o),
(344,617,cs),
(329,617,o),
(318,605,o),
(318,590,cs),
(318,573,o),
(293,555,o),
(254,555,cs),
(224,555,o),
(189,564,o),
(189,590,cs),
(189,610,o),
(180,617,o),
(161,617,cs),
(144,617,o),
(135,608,o),
(135,589,cs),
(135,548,o),
(181,510,o),
(257,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
10 1 8 9 8 106 0 3 6 2 6 3 2 104 0 9 0 7 5 9 7 91 11 1 0 12 1 6 3 0 6 92 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
10 1 8 9 8 106 0 3 6 2 6 3 2 104 0 9 0 7 5 9 7 91 0 5 0 1 0 5 1 91 11 1 0 12 1 6 3 0 6 92 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
14 14 2 1 89 87 83 81 75 73 70 68 14 63 14 55 49 47 39 37 31 29 23 21 9 7 1 13 2 13 13 26
CALL[ ]	/* CallFunction */";
};
width = 491;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356,-11,o),
(442,81,o),
(442,187,cs),
(442,199,o),
(436,205,o),
(425,205,cs),
(414,205,o),
(408,199,o),
(408,187,cs),
(408,101,o),
(351,21,o),
(243,21,cs),
(123,21,o),
(79,122,o),
(79,218,cs),
(79,230,o),
(80,244,o),
(81,259,c),
(134,259,o),
(203,260,o),
(252,260,cs),
(279,260,o),
(305,260,o),
(330,260,cs),
(355,260,o),
(376,260,o),
(393,261,cs),
(417,262,o),
(428,283,o),
(428,304,cs),
(428,359,o),
(374,477,o),
(248,477,cs),
(126,477,o),
(34,372,o),
(34,226,cs),
(34,97,o),
(100,-11,o),
(245,-11,cs)
);
},
{
closed = 1;
nodes = (
(85,289,l),
(85,289,l),
(98,364,o),
(146,445,o),
(245,445,cs),
(344,445,o),
(385,364,o),
(385,311,cs),
(385,299,o),
(379,293,o),
(368,293,cs),
(85,289,l),
(85,289,l)
);
},
{
closed = 1;
nodes = (
(300,510,o),
(358,541,o),
(358,589,cs),
(358,610,o),
(350,613,o),
(339,613,cs),
(328,613,o),
(322,605,o),
(322,590,cs),
(322,563,o),
(283,535,o),
(247,535,cs),
(208,535,o),
(173,549,o),
(173,590,cs),
(173,606,o),
(171,613,o),
(156,613,cs),
(145,613,o),
(139,605,o),
(139,589,cs),
(139,548,o),
(189,510,o),
(247,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
10 1 8 9 8 106 0 3 6 2 6 3 2 104 0 9 0 7 5 9 7 91 11 1 0 12 1 6 3 0 6 92 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
10 1 8 9 8 106 0 3 6 2 6 3 2 104 0 9 0 7 5 9 7 91 0 5 0 1 0 5 1 91 11 1 0 12 1 6 3 0 6 92 0 2 2 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
13 13 1 0 87 85 80 78 74 72 67 65 13 60 13 52 46 44 36 34 29 27 22 20 8 6 0 12 1 12 13 15
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = ebreve;
unicode = 277;
},
{
glyphname = ecaron;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(429,-14,o),
(470,101,o),
(470,143,cs),
(470,176,o),
(454,183,o),
(429,183,cs),
(406,183,o),
(392,167,o),
(384,146,cs),
(370,108,o),
(340,62,o),
(269,62,cs),
(149,62,o),
(124,147,o),
(124,218,cs),
(124,219,o),
(124,221,o),
(124,224,cs),
(124,226,o),
(124,228,o),
(125,229,c),
(126,229,o),
(132,229,o),
(142,229,cs),
(152,229,o),
(164,229,o),
(179,229,cs),
(193,229,o),
(208,229,o),
(225,230,cs),
(242,230,o),
(257,230,o),
(272,230,cs),
(287,230,o),
(299,230,o),
(310,230,cs),
(321,230,o),
(327,230,o),
(330,230,cs),
(405,230,o),
(431,232,o),
(447,241,cs),
(467,252,o),
(474,270,o),
(474,297,cs),
(474,355,o),
(427,478,o),
(264,478,cs),
(123,478,o),
(31,383,o),
(31,227,cs),
(31,72,o),
(123,-14,o),
(263,-14,cs)
);
},
{
closed = 1;
nodes = (
(134,347,o),
(181,403,o),
(262,403,cs),
(343,403,o),
(378,352,o),
(378,316,cs),
(378,300,o),
(372,292,o),
(360,292,cs),
(126,288,l),
(126,288,l)
);
},
{
closed = 1;
nodes = (
(279,486,o),
(388,578,o),
(388,619,cs),
(388,630,o),
(384,640,o),
(375,640,cs),
(364,640,o),
(327,616,o),
(255,578,c),
(206,604,o),
(148,640,o),
(136,640,cs),
(128,640,o),
(123,633,o),
(123,626,cs),
(123,599,o),
(151,565,o),
(182,537,cs),
(209,511,o),
(244,486,o),
(255,486,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
2 10 2 0 1 0 106 0 1 8 1 106 0 6 9 5 9 6 5 104 11 1 3 12 1 9 6 3 9 92 0 4 4 8 83 0 8 8 23 67 0 5 5 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
2 10 2 0 1 0 106 0 1 8 1 106 0 6 9 5 9 6 5 104 0 8 0 4 3 8 4 91 11 1 3 12 1 9 6 3 9 92 0 5 5 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
39 39 27 26 1 0 39 92 39 84 74 72 64 62 56 54 48 46 34 32 26 38 27 38 17 15 9 7 0 25 1 25 13 15
CALL[ ]	/* CallFunction */";
};
width = 507;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(409,-13,o),
(463,75,o),
(463,173,cs),
(463,193,o),
(449,205,o),
(433,205,cs),
(405,205,o),
(399,184,o),
(399,173,cs),
(399,126,o),
(364,51,o),
(258,51,cs),
(160,51,o),
(105,136,o),
(105,218,cs),
(105,225,o),
(106,232,o),
(107,239,c),
(151,239,o),
(208,240,o),
(248,240,cs),
(280,240,o),
(310,240,o),
(339,241,cs),
(367,241,o),
(391,241,o),
(412,241,cs),
(439,241,o),
(454,273,o),
(454,304,cs),
(454,357,o),
(404,477,o),
(257,477,cs),
(122,477,o),
(30,384,o),
(30,226,cs),
(30,85,o),
(104,-13,o),
(242,-13,cs)
);
},
{
closed = 1;
nodes = (
(121,354,o),
(170,415,o),
(254,415,cs),
(337,415,o),
(381,354,o),
(381,311,cs),
(381,306,o),
(375,303,o),
(364,303,cs),
(111,299,l),
(111,299,l)
);
},
{
closed = 1;
nodes = (
(275,495,o),
(381,588,o),
(381,623,cs),
(381,632,o),
(378,640,o),
(370,640,cs),
(357,640,o),
(263,577,o),
(250,569,c),
(177,612,o),
(146,640,o),
(131,640,cs),
(124,640,o),
(120,636,o),
(120,627,cs),
(120,586,o),
(228,495,o),
(250,495,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
69 1 9 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
8 12 2 7 9 7 106 0 3 6 2 6 3 2 104 10 1 0 11 1 6 3 0 6 91 0 9 9 23 67 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
8 12 2 7 9 7 106 0 9 5 5 9 94 0 3 6 2 6 3 2 104 0 5 0 1 0 5 1 92 10 1 0 11 1 6 3 0 6 91 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
65 64 14 14 2 1 82 80 75 73 64 88 65 88 14 63 14 55 49 47 39 37 31 29 23 21 9 7 1 13 2 13 13 26
CALL[ ]	/* CallFunction */";
};
width = 491;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356,-11,o),
(442,81,o),
(442,187,cs),
(442,199,o),
(436,205,o),
(425,205,cs),
(414,205,o),
(408,199,o),
(408,187,cs),
(408,101,o),
(351,21,o),
(243,21,cs),
(123,21,o),
(79,122,o),
(79,218,cs),
(79,230,o),
(80,244,o),
(81,259,c),
(134,259,o),
(203,260,o),
(252,260,cs),
(279,260,o),
(305,260,o),
(330,260,cs),
(355,260,o),
(376,260,o),
(393,261,cs),
(417,262,o),
(428,283,o),
(428,304,cs),
(428,359,o),
(374,477,o),
(248,477,cs),
(126,477,o),
(34,372,o),
(34,226,cs),
(34,97,o),
(100,-11,o),
(245,-11,cs)
);
},
{
closed = 1;
nodes = (
(98,364,o),
(146,445,o),
(245,445,cs),
(344,445,o),
(385,364,o),
(385,311,cs),
(385,299,o),
(379,293,o),
(368,293,cs),
(85,289,l),
(85,289,l),
(85,289,l),
(85,289,l)
);
},
{
closed = 1;
nodes = (
(268,510,o),
(371,604,o),
(371,629,cs),
(371,636,o),
(368,640,o),
(363,640,cs),
(348,640,o),
(319,608,o),
(243,554,c),
(207,580,o),
(137,640,o),
(124,640,cs),
(119,640,o),
(116,636,o),
(116,629,cs),
(116,604,o),
(220,510,o),
(243,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
80 1 8 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
9 12 2 7 8 7 106 0 8 5 8 106 0 3 6 2 6 3 2 104 10 1 0 11 1 6 3 0 6 92 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
9 12 2 7 8 7 106 0 8 5 8 106 0 3 6 2 6 3 2 104 0 5 0 1 0 5 1 91 10 1 0 11 1 6 3 0 6 92 0 2 2 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
62 61 13 13 1 0 76 74 69 67 61 84 62 84 13 60 13 52 46 44 36 34 29 27 22 20 8 6 0 12 1 12 13 15
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = ecaron;
unicode = 283;
},
{
glyphname = ecircumflex;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(429,-14,o),
(470,101,o),
(470,143,cs),
(470,176,o),
(454,183,o),
(429,183,cs),
(406,183,o),
(392,167,o),
(384,146,cs),
(370,108,o),
(340,62,o),
(269,62,cs),
(149,62,o),
(124,147,o),
(124,218,cs),
(124,219,o),
(124,221,o),
(124,224,cs),
(124,226,o),
(124,228,o),
(125,229,c),
(126,229,o),
(132,229,o),
(142,229,cs),
(152,229,o),
(164,229,o),
(179,229,cs),
(193,229,o),
(208,229,o),
(225,230,cs),
(242,230,o),
(257,230,o),
(272,230,cs),
(287,230,o),
(299,230,o),
(310,230,cs),
(321,230,o),
(327,230,o),
(330,230,cs),
(405,230,o),
(431,232,o),
(447,241,cs),
(467,252,o),
(474,270,o),
(474,297,cs),
(474,355,o),
(427,478,o),
(264,478,cs),
(123,478,o),
(31,383,o),
(31,227,cs),
(31,72,o),
(123,-14,o),
(263,-14,cs)
);
},
{
closed = 1;
nodes = (
(134,347,o),
(181,403,o),
(262,403,cs),
(343,403,o),
(378,352,o),
(378,316,cs),
(378,300,o),
(372,292,o),
(360,292,cs),
(126,288,l),
(126,288,l)
);
},
{
closed = 1;
nodes = (
(146,510,o),
(204,546,o),
(253,572,c),
(325,534,o),
(362,510,o),
(373,510,cs),
(382,510,o),
(386,520,o),
(386,531,cs),
(386,572,o),
(277,664,o),
(253,664,cs),
(242,664,o),
(207,639,o),
(180,614,cs),
(149,585,o),
(121,549,o),
(121,524,cs),
(121,517,o),
(126,510,o),
(134,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 2 0 2 106 1 10 2 0 8 0 106 0 6 9 5 9 6 5 104 11 1 3 12 1 9 6 3 9 91 0 4 4 8 83 0 8 8 23 67 0 5 5 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 2 0 2 106 1 10 2 0 8 0 106 0 6 9 5 9 6 5 104 0 8 0 4 3 8 4 92 11 1 3 12 1 9 6 3 9 91 0 5 5 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
39 39 27 26 1 0 39 92 39 84 74 72 64 62 56 54 48 46 34 32 26 38 27 38 19 17 11 9 0 25 1 25 13 15
CALL[ ]	/* CallFunction */";
};
width = 507;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(409,-13,o),
(463,75,o),
(463,173,cs),
(463,193,o),
(449,205,o),
(433,205,cs),
(405,205,o),
(399,184,o),
(399,173,cs),
(399,126,o),
(364,51,o),
(258,51,cs),
(160,51,o),
(105,136,o),
(105,218,cs),
(105,225,o),
(106,232,o),
(107,239,c),
(151,239,o),
(208,240,o),
(248,240,cs),
(280,240,o),
(310,240,o),
(339,241,cs),
(367,241,o),
(391,241,o),
(412,241,cs),
(439,241,o),
(454,273,o),
(454,304,cs),
(454,357,o),
(404,477,o),
(257,477,cs),
(122,477,o),
(30,384,o),
(30,226,cs),
(30,85,o),
(104,-13,o),
(242,-13,cs)
);
},
{
closed = 1;
nodes = (
(121,354,o),
(170,415,o),
(254,415,cs),
(337,415,o),
(381,354,o),
(381,311,cs),
(381,306,o),
(375,303,o),
(364,303,cs),
(111,299,l),
(111,299,l)
);
},
{
closed = 1;
nodes = (
(145,510,o),
(176,538,o),
(249,581,c),
(262,573,o),
(356,510,o),
(369,510,cs),
(377,510,o),
(380,518,o),
(380,527,cs),
(380,562,o),
(274,655,o),
(249,655,cs),
(227,655,o),
(119,564,o),
(119,523,cs),
(119,514,o),
(123,510,o),
(130,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
69 1 7 9 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 9 7 9 106 8 12 2 7 5 7 106 0 3 6 2 6 3 2 104 10 1 0 11 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 9 7 9 106 8 12 2 7 5 7 106 0 3 6 2 6 3 2 104 0 5 0 1 0 5 1 92 10 1 0 11 1 6 3 0 6 91 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
65 64 14 14 2 1 82 80 75 73 64 88 65 88 14 63 14 55 49 47 39 37 31 29 23 21 9 7 1 13 2 13 13 26
CALL[ ]	/* CallFunction */";
};
width = 491;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356,-11,o),
(442,81,o),
(442,187,cs),
(442,199,o),
(436,205,o),
(425,205,cs),
(414,205,o),
(408,199,o),
(408,187,cs),
(408,101,o),
(351,21,o),
(243,21,cs),
(123,21,o),
(79,122,o),
(79,218,cs),
(79,230,o),
(80,244,o),
(81,259,c),
(134,259,o),
(203,260,o),
(252,260,cs),
(279,260,o),
(305,260,o),
(330,260,cs),
(355,260,o),
(376,260,o),
(393,261,cs),
(417,262,o),
(428,283,o),
(428,304,cs),
(428,359,o),
(374,477,o),
(248,477,cs),
(126,477,o),
(34,372,o),
(34,226,cs),
(34,97,o),
(100,-11,o),
(245,-11,cs)
);
},
{
closed = 1;
nodes = (
(98,364,o),
(146,445,o),
(245,445,cs),
(344,445,o),
(385,364,o),
(385,311,cs),
(385,299,o),
(379,293,o),
(368,293,cs),
(85,289,l),
(85,289,l),
(85,289,l),
(85,289,l)
);
},
{
closed = 1;
nodes = (
(139,510,o),
(191,559,o),
(244,596,c),
(320,542,o),
(349,510,o),
(364,510,cs),
(369,510,o),
(372,514,o),
(372,521,cs),
(372,546,o),
(269,640,o),
(244,640,cs),
(221,640,o),
(117,546,o),
(117,521,cs),
(117,514,o),
(120,510,o),
(125,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
66 1 7 9 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 9 7 9 106 8 12 2 7 5 7 106 0 3 6 2 6 3 2 104 10 1 0 11 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 9 7 9 106 8 12 2 7 5 7 106 0 3 6 2 6 3 2 104 0 5 0 1 0 5 1 92 10 1 0 11 1 6 3 0 6 91 0 2 2 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
62 61 13 13 1 0 79 77 72 70 61 84 62 84 13 60 13 52 46 44 36 34 29 27 22 20 8 6 0 12 1 12 13 15
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = ecircumflex;
unicode = 234;
},
{
glyphname = edieresis;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(429,-14,o),
(470,101,o),
(470,143,cs),
(470,176,o),
(454,183,o),
(429,183,cs),
(406,183,o),
(392,167,o),
(384,146,cs),
(370,108,o),
(340,62,o),
(269,62,cs),
(149,62,o),
(124,147,o),
(124,218,cs),
(124,219,o),
(124,221,o),
(124,224,cs),
(124,226,o),
(124,228,o),
(125,229,c),
(126,229,o),
(132,229,o),
(142,229,cs),
(152,229,o),
(164,229,o),
(179,229,cs),
(193,229,o),
(208,229,o),
(225,230,cs),
(242,230,o),
(257,230,o),
(272,230,cs),
(287,230,o),
(299,230,o),
(310,230,cs),
(321,230,o),
(327,230,o),
(330,230,cs),
(405,230,o),
(431,232,o),
(447,241,cs),
(467,252,o),
(474,270,o),
(474,297,cs),
(474,355,o),
(427,478,o),
(264,478,cs),
(123,478,o),
(31,383,o),
(31,227,cs),
(31,72,o),
(123,-14,o),
(263,-14,cs)
);
},
{
closed = 1;
nodes = (
(126,288,l),
(134,347,o),
(181,403,o),
(262,403,cs),
(343,403,o),
(378,352,o),
(378,316,cs),
(378,300,o),
(372,292,o),
(360,292,cs),
(126,288,l)
);
},
{
closed = 1;
nodes = (
(179,524,o),
(216,539,o),
(216,594,cs),
(216,630,o),
(188,655,o),
(156,655,cs),
(109,655,o),
(90,614,o),
(90,590,cs),
(90,551,o),
(116,524,o),
(149,524,cs)
);
},
{
closed = 1;
nodes = (
(386,501,o),
(423,516,o),
(423,571,cs),
(423,607,o),
(395,632,o),
(363,632,cs),
(316,632,o),
(297,591,o),
(297,567,cs),
(297,528,o),
(323,501,o),
(356,501,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 7 10 6 10 7 6 104 0 0 0 1 3 0 1 91 0 2 0 3 9 2 3 91 11 1 4 12 1 10 7 4 10 91 0 5 5 9 83 0 9 9 23 67 0 6 6 8 83 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 7 10 6 10 7 6 104 0 0 0 1 3 0 1 91 0 2 0 3 9 2 3 91 0 9 0 5 4 9 5 91 11 1 4 12 1 10 7 4 10 91 0 6 6 8 83 0 8 8 21 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
45 45 33 32 45 98 45 90 80 78 70 68 62 60 54 52 40 38 32 44 33 44 38 38 38 36 13 19
CALL[ ]	/* CallFunction */";
};
width = 507;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(409,-13,o),
(463,75,o),
(463,173,cs),
(463,193,o),
(449,205,o),
(433,205,cs),
(405,205,o),
(399,184,o),
(399,173,cs),
(399,126,o),
(364,51,o),
(258,51,cs),
(160,51,o),
(105,136,o),
(105,218,cs),
(105,225,o),
(106,232,o),
(107,239,c),
(151,239,o),
(208,240,o),
(248,240,cs),
(280,240,o),
(310,240,o),
(339,241,cs),
(367,241,o),
(391,241,o),
(412,241,cs),
(439,241,o),
(454,273,o),
(454,304,cs),
(454,357,o),
(404,477,o),
(257,477,cs),
(122,477,o),
(30,384,o),
(30,226,cs),
(30,85,o),
(104,-13,o),
(242,-13,cs)
);
},
{
closed = 1;
nodes = (
(111,299,l),
(121,354,o),
(170,415,o),
(254,415,cs),
(337,415,o),
(381,354,o),
(381,311,cs),
(381,306,o),
(375,303,o),
(364,303,cs),
(111,299,l)
);
},
{
closed = 1;
nodes = (
(170,527,o),
(201,540,o),
(201,588,cs),
(201,619,o),
(179,640,o),
(152,640,cs),
(114,640,o),
(96,605,o),
(96,584,cs),
(96,551,o),
(118,527,o),
(145,527,cs)
);
},
{
closed = 1;
nodes = (
(377,504,o),
(408,517,o),
(408,565,cs),
(408,596,o),
(386,617,o),
(359,617,cs),
(321,617,o),
(303,582,o),
(303,561,cs),
(303,528,o),
(325,504,o),
(352,504,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 3 6 2 6 3 2 104 0 7 0 8 10 7 8 91 0 9 0 10 5 9 10 91 11 1 0 12 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 3 6 2 6 3 2 104 0 7 0 8 10 7 8 91 0 9 0 10 5 9 10 91 0 5 0 1 0 5 1 91 11 1 0 12 1 6 3 0 6 91 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
14 14 2 1 90 88 84 82 76 74 70 68 14 63 14 55 49 47 39 37 31 29 23 21 9 7 1 13 2 13 13 26
CALL[ ]	/* CallFunction */";
};
width = 491;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356,-11,o),
(442,81,o),
(442,187,cs),
(442,199,o),
(436,205,o),
(425,205,cs),
(414,205,o),
(408,199,o),
(408,187,cs),
(408,101,o),
(351,21,o),
(243,21,cs),
(123,21,o),
(79,122,o),
(79,218,cs),
(79,230,o),
(80,244,o),
(81,259,c),
(134,259,o),
(203,260,o),
(252,260,cs),
(279,260,o),
(305,260,o),
(330,260,cs),
(355,260,o),
(376,260,o),
(393,261,cs),
(417,262,o),
(428,283,o),
(428,304,cs),
(428,359,o),
(374,477,o),
(248,477,cs),
(126,477,o),
(34,372,o),
(34,226,cs),
(34,97,o),
(100,-11,o),
(245,-11,cs)
);
},
{
closed = 1;
nodes = (
(85,289,l),
(85,289,l),
(85,289,l),
(98,364,o),
(146,445,o),
(245,445,cs),
(344,445,o),
(385,364,o),
(385,311,cs),
(385,299,o),
(379,293,o),
(368,293,cs),
(85,289,l)
);
},
{
closed = 1;
nodes = (
(158,533,o),
(180,543,o),
(180,579,cs),
(180,602,o),
(165,616,o),
(146,616,cs),
(118,616,o),
(105,589,o),
(105,575,cs),
(105,551,o),
(120,533,o),
(139,533,cs)
);
},
{
closed = 1;
nodes = (
(365,510,o),
(387,520,o),
(387,556,cs),
(387,579,o),
(372,593,o),
(353,593,cs),
(325,593,o),
(312,566,o),
(312,552,cs),
(312,528,o),
(327,510,o),
(346,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 3 6 2 6 3 2 104 0 7 0 8 10 7 8 91 0 9 0 10 5 9 10 91 11 1 0 12 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 3 6 2 6 3 2 104 0 7 0 8 10 7 8 91 0 9 0 10 5 9 10 91 0 5 0 1 0 5 1 91 11 1 0 12 1 6 3 0 6 91 0 2 2 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
13 13 1 0 87 85 81 79 73 71 67 65 13 60 13 52 46 44 36 34 29 27 22 20 8 6 0 12 1 12 13 15
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = edieresis;
unicode = 235;
},
{
glyphname = edotaccent;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(429,-14,o),
(470,101,o),
(470,143,cs),
(470,176,o),
(454,183,o),
(429,183,cs),
(406,183,o),
(392,167,o),
(384,146,cs),
(370,108,o),
(340,62,o),
(269,62,cs),
(149,62,o),
(124,147,o),
(124,218,cs),
(124,219,o),
(124,221,o),
(124,224,cs),
(124,226,o),
(124,228,o),
(125,229,c),
(126,229,o),
(132,229,o),
(142,229,cs),
(152,229,o),
(164,229,o),
(179,229,cs),
(193,229,o),
(208,229,o),
(225,230,cs),
(242,230,o),
(257,230,o),
(272,230,cs),
(287,230,o),
(299,230,o),
(310,230,cs),
(321,230,o),
(327,230,o),
(330,230,cs),
(405,230,o),
(431,232,o),
(447,241,cs),
(467,252,o),
(474,270,o),
(474,297,cs),
(474,355,o),
(427,478,o),
(264,478,cs),
(123,478,o),
(31,383,o),
(31,227,cs),
(31,72,o),
(123,-14,o),
(263,-14,cs)
);
},
{
closed = 1;
nodes = (
(134,347,o),
(181,403,o),
(262,403,cs),
(343,403,o),
(378,352,o),
(378,316,cs),
(378,300,o),
(372,292,o),
(360,292,cs),
(126,288,l),
(126,288,l)
);
},
{
closed = 1;
nodes = (
(286,521,o),
(323,536,o),
(323,591,cs),
(323,627,o),
(295,652,o),
(263,652,cs),
(215,652,o),
(197,614,o),
(197,587,cs),
(197,544,o),
(223,521,o),
(256,521,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 6 2 6 3 2 104 0 7 0 8 5 7 8 91 9 1 0 10 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 6 2 6 3 2 104 0 7 0 8 5 7 8 91 0 5 0 1 0 5 1 91 9 1 0 10 1 6 3 0 6 91 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
13 13 1 0 81 79 73 71 13 66 13 58 48 46 38 36 30 28 22 20 8 6 0 12 1 12 11 15
CALL[ ]	/* CallFunction */";
};
width = 507;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(409,-13,o),
(463,75,o),
(463,173,cs),
(463,193,o),
(449,205,o),
(433,205,cs),
(405,205,o),
(399,184,o),
(399,173,cs),
(399,126,o),
(364,51,o),
(258,51,cs),
(160,51,o),
(105,136,o),
(105,218,cs),
(105,225,o),
(106,232,o),
(107,239,c),
(151,239,o),
(208,240,o),
(248,240,cs),
(280,240,o),
(310,240,o),
(339,241,cs),
(367,241,o),
(391,241,o),
(412,241,cs),
(439,241,o),
(454,273,o),
(454,304,cs),
(454,357,o),
(404,477,o),
(257,477,cs),
(122,477,o),
(30,384,o),
(30,226,cs),
(30,85,o),
(104,-13,o),
(242,-13,cs)
);
},
{
closed = 1;
nodes = (
(121,354,o),
(170,415,o),
(254,415,cs),
(337,415,o),
(381,354,o),
(381,311,cs),
(381,306,o),
(375,303,o),
(364,303,cs),
(111,299,l),
(111,299,l)
);
},
{
closed = 1;
nodes = (
(276,527,o),
(307,540,o),
(307,588,cs),
(307,619,o),
(285,640,o),
(258,640,cs),
(216,640,o),
(202,604,o),
(202,584,cs),
(202,548,o),
(224,527,o),
(251,527,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 6 2 6 3 2 104 0 7 0 8 5 7 8 91 9 1 0 10 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 6 2 6 3 2 104 0 7 0 8 5 7 8 91 0 5 0 1 0 5 1 91 9 1 0 10 1 6 3 0 6 91 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
14 14 2 1 76 74 70 68 14 63 14 55 49 47 39 37 31 29 23 21 9 7 1 13 2 13 11 26
CALL[ ]	/* CallFunction */";
};
width = 491;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356,-11,o),
(442,81,o),
(442,187,cs),
(442,199,o),
(436,205,o),
(425,205,cs),
(414,205,o),
(408,199,o),
(408,187,cs),
(408,101,o),
(351,21,o),
(243,21,cs),
(123,21,o),
(79,122,o),
(79,218,cs),
(79,230,o),
(80,244,o),
(81,259,c),
(134,259,o),
(203,260,o),
(252,260,cs),
(279,260,o),
(305,260,o),
(330,260,cs),
(355,260,o),
(376,260,o),
(393,261,cs),
(417,262,o),
(428,283,o),
(428,304,cs),
(428,359,o),
(374,477,o),
(248,477,cs),
(126,477,o),
(34,372,o),
(34,226,cs),
(34,97,o),
(100,-11,o),
(245,-11,cs)
);
},
{
closed = 1;
nodes = (
(85,289,l),
(85,289,l),
(98,364,o),
(146,445,o),
(245,445,cs),
(344,445,o),
(385,364,o),
(385,311,cs),
(385,299,o),
(379,293,o),
(368,293,cs),
(85,289,l),
(85,289,l)
);
},
{
closed = 1;
nodes = (
(263,538,o),
(285,548,o),
(285,584,cs),
(285,607,o),
(270,621,o),
(251,621,cs),
(223,621,o),
(210,594,o),
(210,580,cs),
(210,556,o),
(225,538,o),
(244,538,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 6 2 6 3 2 104 0 7 0 8 5 7 8 91 9 1 0 10 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 6 2 6 3 2 104 0 7 0 8 5 7 8 91 0 5 0 1 0 5 1 91 9 1 0 10 1 6 3 0 6 91 0 2 2 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
13 13 1 0 73 71 67 65 13 60 13 52 46 44 36 34 29 27 22 20 8 6 0 12 1 12 11 15
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = edotaccent;
unicode = 279;
},
{
glyphname = egrave;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(429,-14,o),
(470,101,o),
(470,143,cs),
(470,176,o),
(454,183,o),
(429,183,cs),
(406,183,o),
(392,167,o),
(384,146,cs),
(370,108,o),
(340,62,o),
(269,62,cs),
(149,62,o),
(124,147,o),
(124,218,cs),
(124,219,o),
(124,221,o),
(124,224,cs),
(124,226,o),
(124,228,o),
(125,229,c),
(126,229,o),
(132,229,o),
(142,229,cs),
(152,229,o),
(164,229,o),
(179,229,cs),
(193,229,o),
(208,229,o),
(225,230,cs),
(242,230,o),
(257,230,o),
(272,230,cs),
(287,230,o),
(299,230,o),
(310,230,cs),
(321,230,o),
(327,230,o),
(330,230,cs),
(405,230,o),
(431,232,o),
(447,241,cs),
(467,252,o),
(474,270,o),
(474,297,cs),
(474,355,o),
(427,478,o),
(264,478,cs),
(123,478,o),
(31,383,o),
(31,227,cs),
(31,72,o),
(123,-14,o),
(263,-14,cs)
);
},
{
closed = 1;
nodes = (
(134,347,o),
(181,403,o),
(262,403,cs),
(343,403,o),
(378,352,o),
(378,316,cs),
(378,300,o),
(372,292,o),
(360,292,cs),
(126,288,l),
(126,288,l)
);
},
{
closed = 1;
nodes = (
(346,500,o),
(368,507,o),
(368,522,cs),
(368,527,o),
(346,574,o),
(326,609,cs),
(302,649,o),
(271,688,o),
(246,688,cs),
(203,687,o),
(176,665,o),
(176,640,cs),
(176,606,o),
(293,500,o),
(331,500,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 0 1 0 106 0 1 7 1 106 0 5 8 4 8 5 4 104 9 1 2 10 1 8 5 2 8 91 0 3 3 7 83 0 7 7 23 67 0 4 4 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 0 1 0 106 0 1 7 1 106 0 5 8 4 8 5 4 104 0 7 0 3 2 7 3 92 9 1 2 10 1 8 5 2 8 91 0 4 4 6 83 0 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
29 29 17 16 29 82 29 74 64 62 54 52 46 44 38 36 24 22 16 28 17 28 38 34 11 17
CALL[ ]	/* CallFunction */";
};
width = 507;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(409,-13,o),
(463,75,o),
(463,173,cs),
(463,193,o),
(449,205,o),
(433,205,cs),
(405,205,o),
(399,184,o),
(399,173,cs),
(399,126,o),
(364,51,o),
(258,51,cs),
(160,51,o),
(105,136,o),
(105,218,cs),
(105,225,o),
(106,232,o),
(107,239,c),
(151,239,o),
(208,240,o),
(248,240,cs),
(280,240,o),
(310,240,o),
(339,241,cs),
(367,241,o),
(391,241,o),
(412,241,cs),
(439,241,o),
(454,273,o),
(454,304,cs),
(454,357,o),
(404,477,o),
(257,477,cs),
(122,477,o),
(30,384,o),
(30,226,cs),
(30,85,o),
(104,-13,o),
(242,-13,cs)
);
},
{
closed = 1;
nodes = (
(121,354,o),
(170,415,o),
(254,415,cs),
(337,415,o),
(381,354,o),
(381,311,cs),
(381,306,o),
(375,303,o),
(364,303,cs),
(111,299,l),
(111,299,l)
);
},
{
closed = 1;
nodes = (
(327,504,o),
(341,509,o),
(341,522,cs),
(341,528,o),
(326,557,o),
(300,600,cs),
(277,636,o),
(248,670,o),
(230,670,cs),
(199,670,o),
(181,655,o),
(181,632,cs),
(181,603,o),
(286,504,o),
(316,504,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 0 1 0 106 0 1 7 1 106 0 5 8 4 8 5 4 104 9 1 2 10 1 8 5 2 8 91 0 3 3 7 83 0 7 7 23 67 0 4 4 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 0 1 0 106 0 1 7 1 106 0 5 8 4 8 5 4 104 0 7 0 3 2 7 3 92 9 1 2 10 1 8 5 2 8 91 0 4 4 6 83 0 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
31 31 19 18 31 80 31 72 66 64 56 54 48 46 40 38 26 24 18 30 19 30 40 34 11 17
CALL[ ]	/* CallFunction */";
};
width = 491;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356,-11,o),
(442,81,o),
(442,187,cs),
(442,199,o),
(436,205,o),
(425,205,cs),
(414,205,o),
(408,199,o),
(408,187,cs),
(408,101,o),
(351,21,o),
(243,21,cs),
(123,21,o),
(79,122,o),
(79,218,cs),
(79,230,o),
(80,244,o),
(81,259,c),
(134,259,o),
(203,260,o),
(252,260,cs),
(279,260,o),
(305,260,o),
(330,260,cs),
(355,260,o),
(376,260,o),
(393,261,cs),
(417,262,o),
(428,283,o),
(428,304,cs),
(428,359,o),
(374,477,o),
(248,477,cs),
(126,477,o),
(34,372,o),
(34,226,cs),
(34,97,o),
(100,-11,o),
(245,-11,cs)
);
},
{
closed = 1;
nodes = (
(85,289,l),
(85,289,l),
(98,364,o),
(146,445,o),
(245,445,cs),
(344,445,o),
(385,364,o),
(385,311,cs),
(385,299,o),
(379,293,o),
(368,293,cs),
(85,289,l),
(85,289,l)
);
},
{
closed = 1;
nodes = (
(299,510,o),
(302,514,o),
(302,521,cs),
(302,546,o),
(227,640,o),
(207,640,cs),
(196,640,o),
(188,637,o),
(188,618,cs),
(188,597,o),
(275,510,o),
(294,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 7 8 7 106 0 8 5 8 106 0 3 6 2 6 3 2 104 9 1 0 10 1 6 3 0 6 92 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 7 8 7 106 0 8 5 8 106 0 3 6 2 6 3 2 104 0 5 0 1 0 5 1 91 9 1 0 10 1 6 3 0 6 92 0 2 2 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
13 13 1 0 72 70 65 63 13 60 13 52 46 44 36 34 29 27 22 20 8 6 0 12 1 12 11 15
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = egrave;
unicode = 232;
},
{
glyphname = emacron;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(429,-14,o),
(470,101,o),
(470,143,cs),
(470,176,o),
(454,183,o),
(429,183,cs),
(406,183,o),
(392,167,o),
(384,146,cs),
(370,108,o),
(340,62,o),
(269,62,cs),
(149,62,o),
(124,147,o),
(124,218,cs),
(124,219,o),
(124,221,o),
(124,224,cs),
(124,226,o),
(124,228,o),
(125,229,c),
(126,229,o),
(132,229,o),
(142,229,cs),
(152,229,o),
(164,229,o),
(179,229,cs),
(193,229,o),
(208,229,o),
(225,230,cs),
(242,230,o),
(257,230,o),
(272,230,cs),
(287,230,o),
(299,230,o),
(310,230,cs),
(321,230,o),
(327,230,o),
(330,230,cs),
(405,230,o),
(431,232,o),
(447,241,cs),
(467,252,o),
(474,270,o),
(474,297,cs),
(474,355,o),
(427,478,o),
(264,478,cs),
(123,478,o),
(31,383,o),
(31,227,cs),
(31,72,o),
(123,-14,o),
(263,-14,cs)
);
},
{
closed = 1;
nodes = (
(134,347,o),
(181,403,o),
(262,403,cs),
(343,403,o),
(378,352,o),
(378,316,cs),
(378,300,o),
(372,292,o),
(360,292,cs),
(126,288,l),
(126,288,l)
);
},
{
closed = 1;
nodes = (
(216,563,o),
(313,564,o),
(387,564,cs),
(416,564,o),
(423,591,o),
(423,606,cs),
(423,626,o),
(410,643,o),
(395,643,cs),
(379,643,o),
(361,643,o),
(340,642,cs),
(319,641,o),
(295,640,o),
(267,640,cs),
(225,640,o),
(176,642,o),
(146,642,cs),
(123,642,o),
(113,622,o),
(113,603,cs),
(113,584,o),
(127,563,o),
(146,563,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 3 6 2 6 3 2 104 11 1 7 0 8 5 7 8 91 9 1 0 10 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 3 6 2 6 3 2 104 11 1 7 0 8 5 7 8 91 0 5 0 1 0 5 1 91 9 1 0 10 1 6 3 0 6 91 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
68 67 13 13 1 0 81 74 67 93 68 85 13 66 13 58 48 46 38 36 30 28 22 20 8 6 0 12 1 12 12 15
CALL[ ]	/* CallFunction */";
};
width = 507;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(409,-13,o),
(463,75,o),
(463,173,cs),
(463,193,o),
(449,205,o),
(433,205,cs),
(405,205,o),
(399,184,o),
(399,173,cs),
(399,126,o),
(364,51,o),
(258,51,cs),
(160,51,o),
(105,136,o),
(105,218,cs),
(105,225,o),
(106,232,o),
(107,239,c),
(151,239,o),
(208,240,o),
(248,240,cs),
(280,240,o),
(310,240,o),
(339,241,cs),
(367,241,o),
(391,241,o),
(412,241,cs),
(439,241,o),
(454,273,o),
(454,304,cs),
(454,357,o),
(404,477,o),
(257,477,cs),
(122,477,o),
(30,384,o),
(30,226,cs),
(30,85,o),
(104,-13,o),
(242,-13,cs)
);
},
{
closed = 1;
nodes = (
(121,354,o),
(170,415,o),
(254,415,cs),
(337,415,o),
(381,354,o),
(381,311,cs),
(381,306,o),
(375,303,o),
(364,303,cs),
(111,299,l),
(111,299,l)
);
},
{
closed = 1;
nodes = (
(212,540,o),
(309,541,o),
(383,541,cs),
(406,541,o),
(412,563,o),
(412,574,cs),
(412,589,o),
(402,602,o),
(391,602,cs),
(375,602,o),
(357,602,o),
(336,601,cs),
(315,600,o),
(291,599,o),
(263,599,cs),
(221,599,o),
(172,601,o),
(142,601,cs),
(123,601,o),
(116,586,o),
(116,571,cs),
(116,556,o),
(127,540,o),
(142,540,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 3 6 2 6 3 2 104 11 1 7 0 8 5 7 8 91 9 1 0 10 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 3 6 2 6 3 2 104 11 1 7 0 8 5 7 8 91 0 5 0 1 0 5 1 91 9 1 0 10 1 6 3 0 6 91 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
65 64 14 14 2 1 76 69 64 88 65 80 14 63 14 55 49 47 39 37 31 29 23 21 9 7 1 13 2 13 12 26
CALL[ ]	/* CallFunction */";
};
width = 491;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356,-11,o),
(442,81,o),
(442,187,cs),
(442,199,o),
(436,205,o),
(425,205,cs),
(414,205,o),
(408,199,o),
(408,187,cs),
(408,101,o),
(351,21,o),
(243,21,cs),
(123,21,o),
(79,122,o),
(79,218,cs),
(79,230,o),
(80,244,o),
(81,259,c),
(134,259,o),
(203,260,o),
(252,260,cs),
(279,260,o),
(305,260,o),
(330,260,cs),
(355,260,o),
(376,260,o),
(393,261,cs),
(417,262,o),
(428,283,o),
(428,304,cs),
(428,359,o),
(374,477,o),
(248,477,cs),
(126,477,o),
(34,372,o),
(34,226,cs),
(34,97,o),
(100,-11,o),
(245,-11,cs)
);
},
{
closed = 1;
nodes = (
(85,289,l),
(85,289,l),
(98,364,o),
(146,445,o),
(245,445,cs),
(344,445,o),
(385,364,o),
(385,311,cs),
(385,299,o),
(379,293,o),
(368,293,cs),
(85,289,l),
(85,289,l)
);
},
{
closed = 1;
nodes = (
(206,510,o),
(303,511,o),
(377,511,cs),
(392,511,o),
(396,522,o),
(396,529,cs),
(396,536,o),
(390,542,o),
(385,542,cs),
(369,542,o),
(351,542,o),
(330,541,cs),
(309,540,o),
(285,539,o),
(257,539,cs),
(215,539,o),
(166,541,o),
(136,541,cs),
(125,541,o),
(120,533,o),
(120,526,cs),
(120,519,o),
(127,510,o),
(136,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 3 6 2 6 3 2 104 11 1 7 0 8 5 7 8 91 9 1 0 10 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 3 6 2 6 3 2 104 11 1 7 0 8 5 7 8 91 0 5 0 1 0 5 1 91 9 1 0 10 1 6 3 0 6 91 0 2 2 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
62 61 13 13 1 0 73 66 61 85 62 77 13 60 13 52 46 44 36 34 29 27 22 20 8 6 0 12 1 12 12 15
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = emacron;
unicode = 275;
},
{
glyphname = eogonek;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(374,-161,o),
(405,-132,o),
(405,-108,cs),
(405,-96,o),
(393,-84,o),
(380,-84,cs),
(360,-84,o),
(361,-108,o),
(320,-108,cs),
(305,-108,o),
(291,-102,o),
(291,-87,cs),
(291,-60,o),
(305,-23,o),
(332,-6,c),
(435,19,o),
(470,98,o),
(470,143,cs),
(470,176,o),
(454,183,o),
(429,183,cs),
(406,183,o),
(392,167,o),
(384,146,cs),
(370,108,o),
(340,62,o),
(269,62,cs),
(149,62,o),
(124,147,o),
(124,218,cs),
(124,219,o),
(124,221,o),
(124,224,cs),
(124,226,o),
(124,228,o),
(125,229,c),
(126,229,o),
(132,229,o),
(142,229,cs),
(152,229,o),
(164,229,o),
(179,229,cs),
(193,229,o),
(208,229,o),
(225,230,cs),
(242,230,o),
(257,230,o),
(272,230,cs),
(287,230,o),
(299,230,o),
(310,230,cs),
(321,230,o),
(327,230,o),
(330,230,cs),
(405,230,o),
(431,232,o),
(447,241,cs),
(467,252,o),
(474,270,o),
(474,297,cs),
(474,355,o),
(427,478,o),
(264,478,cs),
(123,478,o),
(31,383,o),
(31,227,cs),
(31,78,o),
(116,-13,o),
(261,-14,c),
(238,-29,o),
(212,-53,o),
(212,-86,cs),
(212,-138,o),
(272,-161,o),
(322,-161,cs)
);
},
{
closed = 1;
nodes = (
(134,347,o),
(181,403,o),
(262,403,cs),
(343,403,o),
(378,352,o),
(378,316,cs),
(378,300,o),
(372,292,o),
(360,292,cs),
(126,288,l),
(126,288,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 1 7 0 7 1 0 104 0 3 5 2 5 3 2 104 11 1 8 10 1 7 1 8 7 91 0 2 0 4 2 4 87 0 9 9 6 83 0 6 6 23 67 0 0 0 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 1 7 0 7 1 0 104 0 3 5 2 5 3 2 104 0 6 0 9 8 6 9 91 11 1 8 10 1 7 1 8 7 91 0 2 0 4 2 4 87 0 0 0 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
80 79 0 0 87 85 79 91 80 91 0 78 0 70 38 23 38 35 44 38 39 12 22
CALL[ ]	/* CallFunction */";
};
width = 507;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(409,-13,o),
(463,75,o),
(463,173,cs),
(463,193,o),
(449,205,o),
(433,205,cs),
(405,205,o),
(399,184,o),
(399,173,cs),
(399,126,o),
(364,51,o),
(258,51,cs),
(160,51,o),
(105,136,o),
(105,218,cs),
(105,225,o),
(106,232,o),
(107,239,c),
(151,239,o),
(208,240,o),
(248,240,cs),
(280,240,o),
(310,240,o),
(339,241,cs),
(367,241,o),
(391,241,o),
(412,241,cs),
(439,241,o),
(454,273,o),
(454,304,cs),
(454,357,o),
(404,477,o),
(257,477,cs),
(122,477,o),
(30,384,o),
(30,226,cs),
(30,85,o),
(104,-13,o),
(242,-13,cs)
);
},
{
closed = 1;
nodes = (
(318,-165,o),
(348,-124,o),
(348,-114,cs),
(348,-103,o),
(342,-92,o),
(327,-92,cs),
(323,-92,o),
(319,-94,o),
(314,-98,cs),
(309,-103,o),
(303,-108,o),
(298,-113,cs),
(292,-119,o),
(281,-122,o),
(264,-122,cs),
(248,-122,o),
(233,-107,o),
(233,-91,cs),
(233,-72,o),
(247,-18,o),
(292,-3,c),
(242,-2,l),
(242,-2,l),
(228,-9,o),
(216,-16,o),
(205,-25,cs),
(186,-40,o),
(169,-61,o),
(169,-92,cs),
(169,-135,o),
(211,-165,o),
(270,-165,cs)
);
},
{
closed = 1;
nodes = (
(121,354,o),
(170,415,o),
(254,415,cs),
(337,415,o),
(381,354,o),
(381,311,cs),
(381,306,o),
(375,303,o),
(364,303,cs),
(111,299,l),
(111,299,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 3 6 2 6 3 2 104 0 2 10 10 2 94 0 8 4 7 4 8 7 104 11 1 0 12 1 6 3 0 6 91 0 7 0 9 7 9 87 0 1 1 5 83 0 5 5 23 67 13 1 10 10 4 84 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 3 6 2 6 3 2 104 0 2 10 10 2 94 0 8 4 7 4 8 7 104 0 5 0 1 0 5 1 91 11 1 0 12 1 6 3 0 6 91 0 7 0 9 7 9 87 13 1 10 10 4 84 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 3 6 2 6 3 2 104 0 2 10 6 2 10 102 0 8 4 7 4 8 7 104 0 5 0 1 0 5 1 91 11 1 0 12 1 6 3 0 6 91 0 7 0 9 7 9 87 13 1 10 10 4 84 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
64 64 14 14 2 1 64 93 64 93 86 84 78 76 73 71 14 63 14 55 49 47 39 37 31 29 23 21 9 7 1 13 2 13 14 26
CALL[ ]	/* CallFunction */";
};
width = 491;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(301,-166,o),
(331,-125,o),
(331,-115,cs),
(331,-107,o),
(329,-99,o),
(317,-99,cs),
(298,-99,o),
(292,-139,o),
(255,-139,cs),
(224,-139,o),
(216,-109,o),
(216,-92,cs),
(216,-77,o),
(225,-30,o),
(260,-10,c),
(364,-2,o),
(442,87,o),
(442,187,cs),
(442,199,o),
(436,205,o),
(425,205,cs),
(414,205,o),
(408,199,o),
(408,187,cs),
(408,101,o),
(351,21,o),
(243,21,cs),
(123,21,o),
(79,122,o),
(79,218,cs),
(79,230,o),
(80,244,o),
(81,259,c),
(134,259,o),
(203,260,o),
(252,260,cs),
(279,260,o),
(305,260,o),
(330,260,cs),
(355,260,o),
(376,260,o),
(393,261,cs),
(417,262,o),
(428,283,o),
(428,304,cs),
(428,359,o),
(374,477,o),
(248,477,cs),
(126,477,o),
(34,372,o),
(34,226,cs),
(34,95,o),
(99,-2,o),
(226,-10,c),
(205,-23,o),
(172,-50,o),
(172,-93,cs),
(172,-136,o),
(206,-166,o),
(253,-166,cs)
);
},
{
closed = 1;
nodes = (
(98,364,o),
(146,445,o),
(245,445,cs),
(344,445,o),
(385,364,o),
(385,311,cs),
(385,299,o),
(379,293,o),
(368,293,cs),
(85,289,l),
(85,289,l),
(85,289,l),
(85,289,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 1 7 0 7 1 0 104 0 3 5 2 5 3 2 104 11 1 8 10 1 7 1 8 7 91 0 2 0 4 2 4 87 0 9 9 6 83 0 6 6 23 67 0 0 0 5 83 0 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 1 7 0 7 1 0 104 0 3 5 2 5 3 2 104 0 6 0 9 8 6 9 91 11 1 8 10 1 7 1 8 7 91 0 2 0 4 2 4 87 0 0 0 5 83 0 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
80 79 0 0 87 85 79 91 80 91 0 78 0 70 40 23 38 35 47 37 39 12 22
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = eogonek;
unicode = 281;
},
{
glyphname = etilde;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(429,-14,o),
(470,101,o),
(470,143,cs),
(470,176,o),
(454,183,o),
(429,183,cs),
(406,183,o),
(392,167,o),
(384,146,cs),
(370,108,o),
(340,62,o),
(269,62,cs),
(149,62,o),
(124,147,o),
(124,218,cs),
(124,219,o),
(124,221,o),
(124,224,cs),
(124,226,o),
(124,228,o),
(125,229,c),
(126,229,o),
(132,229,o),
(142,229,cs),
(152,229,o),
(164,229,o),
(179,229,cs),
(193,229,o),
(208,229,o),
(225,230,cs),
(242,230,o),
(257,230,o),
(272,230,cs),
(287,230,o),
(299,230,o),
(310,230,cs),
(321,230,o),
(327,230,o),
(330,230,cs),
(405,230,o),
(431,232,o),
(447,241,cs),
(467,252,o),
(474,270,o),
(474,297,cs),
(474,355,o),
(427,478,o),
(264,478,cs),
(123,478,o),
(31,383,o),
(31,227,cs),
(31,72,o),
(123,-14,o),
(263,-14,cs)
);
},
{
closed = 1;
nodes = (
(134,347,o),
(181,403,o),
(262,403,cs),
(343,403,o),
(378,352,o),
(378,316,cs),
(378,300,o),
(372,292,o),
(360,292,cs),
(126,288,l),
(126,288,l)
);
},
{
closed = 1;
nodes = (
(126,501,o),
(150,526,o),
(189,526,cs),
(228,526,o),
(270,502,o),
(326,502,cs),
(359,502,o),
(437,520,o),
(437,577,cs),
(437,598,o),
(422,612,o),
(415,612,cs),
(410,612,o),
(400,608,o),
(385,599,cs),
(366,588,o),
(344,582,o),
(325,582,cs),
(286,582,o),
(224,610,o),
(188,610,cs),
(163,610,o),
(141,604,o),
(120,592,cs),
(101,581,o),
(86,566,o),
(86,537,cs),
(86,517,o),
(93,501,o),
(105,501,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 3 6 2 6 3 2 104 9 1 7 0 11 10 7 11 91 0 8 12 1 10 5 8 10 91 13 1 0 14 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 3 6 2 6 3 2 104 9 1 7 0 11 10 7 11 91 0 8 12 1 10 5 8 10 91 0 5 0 1 0 5 1 91 13 1 0 14 1 6 3 0 6 91 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
13 13 1 0 101 99 96 94 91 89 83 81 78 76 73 71 13 66 13 58 48 46 38 36 30 28 22 20 8 6 0 12 1 12 15 15
CALL[ ]	/* CallFunction */";
};
width = 507;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(409,-13,o),
(463,75,o),
(463,173,cs),
(463,193,o),
(449,205,o),
(433,205,cs),
(405,205,o),
(399,184,o),
(399,173,cs),
(399,126,o),
(364,51,o),
(258,51,cs),
(160,51,o),
(105,136,o),
(105,218,cs),
(105,225,o),
(106,232,o),
(107,239,c),
(151,239,o),
(208,240,o),
(248,240,cs),
(280,240,o),
(310,240,o),
(339,241,cs),
(367,241,o),
(391,241,o),
(412,241,cs),
(439,241,o),
(454,273,o),
(454,304,cs),
(454,357,o),
(404,477,o),
(257,477,cs),
(122,477,o),
(30,384,o),
(30,226,cs),
(30,85,o),
(104,-13,o),
(242,-13,cs)
);
},
{
closed = 1;
nodes = (
(121,354,o),
(170,415,o),
(254,415,cs),
(337,415,o),
(381,354,o),
(381,311,cs),
(381,306,o),
(375,303,o),
(364,303,cs),
(111,299,l),
(111,299,l)
);
},
{
closed = 1;
nodes = (
(119,509,o),
(146,534,o),
(186,534,cs),
(225,534,o),
(267,510,o),
(323,510,cs),
(379,510,o),
(412,532,o),
(425,555,cs),
(428,561,o),
(430,567,o),
(430,574,cs),
(430,590,o),
(419,602,o),
(412,602,cs),
(409,602,o),
(405,601,o),
(402,600,cs),
(398,598,o),
(391,594,o),
(382,589,cs),
(359,578,o),
(339,572,o),
(322,572,cs),
(283,572,o),
(221,600,o),
(185,600,cs),
(160,600,o),
(138,594,o),
(117,582,cs),
(107,576,o),
(100,571,o),
(96,566,cs),
(92,561,o),
(89,557,o),
(88,554,cs),
(86,549,o),
(85,543,o),
(85,537,cs),
(85,522,o),
(91,509,o),
(102,509,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 3 6 2 6 3 2 104 9 1 7 0 11 10 7 11 91 0 8 12 1 10 5 8 10 91 13 1 0 14 1 6 3 0 6 92 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 3 6 2 6 3 2 104 9 1 7 0 11 10 7 11 91 0 8 12 1 10 5 8 10 91 0 5 0 1 0 5 1 91 13 1 0 14 1 6 3 0 6 92 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
14 14 2 1 98 96 93 91 88 86 80 78 75 73 70 68 14 63 14 55 49 47 39 37 31 29 23 21 9 7 1 13 2 13 15 26
CALL[ ]	/* CallFunction */";
};
width = 491;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356,-11,o),
(442,81,o),
(442,187,cs),
(442,199,o),
(436,205,o),
(425,205,cs),
(414,205,o),
(408,199,o),
(408,187,cs),
(408,101,o),
(351,21,o),
(243,21,cs),
(123,21,o),
(79,122,o),
(79,218,cs),
(79,230,o),
(80,244,o),
(81,259,c),
(134,259,o),
(203,260,o),
(252,260,cs),
(279,260,o),
(305,260,o),
(330,260,cs),
(355,260,o),
(376,260,o),
(393,261,cs),
(417,262,o),
(428,283,o),
(428,304,cs),
(428,359,o),
(374,477,o),
(248,477,cs),
(126,477,o),
(34,372,o),
(34,226,cs),
(34,97,o),
(100,-11,o),
(245,-11,cs)
);
},
{
closed = 1;
nodes = (
(85,289,l),
(85,289,l),
(98,364,o),
(146,445,o),
(245,445,cs),
(344,445,o),
(385,364,o),
(385,311,cs),
(385,299,o),
(379,293,o),
(368,293,cs),
(85,289,l),
(85,289,l)
);
},
{
closed = 1;
nodes = (
(337,510,o),
(414,526,o),
(414,560,cs),
(414,576,o),
(405,583,o),
(394,583,cs),
(375,583,o),
(341,546,o),
(317,546,cs),
(265,546,o),
(214,589,o),
(163,589,cs),
(136,589,o),
(83,566,o),
(83,544,cs),
(83,532,o),
(86,519,o),
(102,519,cs),
(121,519,o),
(146,554,o),
(168,554,cs),
(213,554,o),
(262,510,o),
(317,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
0 9 7 11 7 9 11 104 0 12 8 10 8 12 10 104 0 3 6 2 6 3 2 104 0 7 0 11 8 7 11 91 0 8 0 10 5 8 10 91 13 1 0 14 1 6 3 0 6 92 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 69 values pushed */
0 9 7 11 7 9 11 104 0 12 8 10 8 12 10 104 0 3 6 2 6 3 2 104 0 7 0 11 8 7 11 91 0 8 0 10 5 8 10 91 0 5 0 1 0 5 1 91 13 1 0 14 1 6 3 0 6 92 0 2 2 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
13 13 1 0 95 93 90 88 85 83 77 75 72 70 67 65 13 60 13 52 46 44 36 34 29 27 22 20 8 6 0 12 1 12 15 15
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = etilde;
unicode = 7869;
},
{
glyphname = schwa;
kernRight = c_p;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(398,-11,o),
(476,90,o),
(476,240,cs),
(476,373,o),
(410,477,o),
(245,477,cs),
(98,477,o),
(23,401,o),
(23,337,cs),
(23,313,o),
(29,292,o),
(65,292,cs),
(98,292,o),
(105,313,o),
(108,326,cs),
(111,342,o),
(135,397,o),
(224,397,cs),
(334,397,o),
(380,336,o),
(380,272,cs),
(380,260,o),
(379,246,o),
(378,231,c),
(286,231,o),
(221,230,o),
(119,230,cs),
(97,230,o),
(81,230,o),
(71,229,cs),
(60,228,o),
(53,226,o),
(49,221,cs),
(34,206,o),
(31,195,o),
(31,164,cs),
(31,110,o),
(68,-11,o),
(242,-11,cs)
);
},
{
closed = 1;
nodes = (
(184,69,o),
(125,105,o),
(125,133,cs),
(125,144,o),
(131,149,o),
(142,149,cs),
(365,153,l),
(365,153,l),
(349,107,o),
(296,69,o),
(238,69,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 2 6 2 3 6 104 8 1 6 7 1 0 1 6 0 91 0 2 2 4 83 0 4 4 23 67 0 1 1 5 83 0 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 2 6 2 3 6 104 0 4 0 2 3 4 2 91 8 1 6 7 1 0 1 6 0 91 0 1 1 5 83 0 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
13 13 1 0 13 62 13 56 48 46 38 36 30 28 22 20 8 6 0 12 1 12 9 15
CALL[ ]	/* CallFunction */";
};
width = 503;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(372,-11,o),
(457,92,o),
(457,240,cs),
(457,372,o),
(391,477,o),
(234,477,cs),
(102,477,o),
(25,402,o),
(25,333,cs),
(25,314,o),
(30,298,o),
(57,298,cs),
(82,298,o),
(86,313,o),
(89,326,cs),
(100,377,o),
(127,415,o),
(215,415,cs),
(338,415,o),
(382,339,o),
(382,263,cs),
(382,251,o),
(381,237,o),
(380,222,c),
(336,222,o),
(255,221,o),
(157,221,cs),
(155,221,o),
(125,220,o),
(68,220,cs),
(44,219,o),
(33,190,o),
(33,163,cs),
(33,103,o),
(82,-11,o),
(231,-11,cs)
);
},
{
closed = 1;
nodes = (
(158,51,o),
(106,103,o),
(106,141,cs),
(106,152,o),
(112,158,o),
(123,158,cs),
(371,162,l),
(371,162,l),
(355,106,o),
(304,51,o),
(230,51,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 2 6 2 3 6 104 8 1 6 7 1 0 1 6 0 91 0 2 2 4 83 0 4 4 23 67 0 1 1 5 83 0 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 2 6 2 3 6 104 0 4 0 2 3 4 2 91 8 1 6 7 1 0 1 6 0 91 0 1 1 5 83 0 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
13 13 1 0 13 64 13 54 48 46 38 36 30 28 22 20 8 6 0 12 1 12 9 15
CALL[ ]	/* CallFunction */";
};
width = 487;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(336,-11,o),
(430,92,o),
(430,240,cs),
(430,374,o),
(360,477,o),
(219,477,cs),
(123,477,o),
(28,415,o),
(28,326,cs),
(28,314,o),
(34,308,o),
(45,308,cs),
(56,308,o),
(62,314,o),
(62,326,cs),
(62,391,o),
(132,445,o),
(221,445,cs),
(339,445,o),
(385,343,o),
(385,248,cs),
(385,236,o),
(384,222,o),
(383,207,c),
(330,207,o),
(261,206,o),
(212,206,cs),
(185,206,o),
(160,206,o),
(135,206,cs),
(110,206,o),
(88,206,o),
(71,205,cs),
(47,204,o),
(36,183,o),
(36,162,cs),
(36,107,o),
(90,-11,o),
(216,-11,cs)
);
},
{
closed = 1;
nodes = (
(120,21,o),
(79,102,o),
(79,155,cs),
(79,167,o),
(85,173,o),
(96,173,cs),
(379,177,l),
(366,102,o),
(318,21,o),
(219,21,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 2 6 2 3 6 104 8 1 6 7 1 0 1 6 0 91 0 2 2 4 83 0 4 4 23 67 0 1 1 5 83 0 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 2 6 2 3 6 104 0 4 0 2 3 4 2 91 8 1 6 7 1 0 1 6 0 91 0 1 1 5 83 0 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
13 13 1 0 13 60 13 52 46 44 36 34 29 27 22 20 8 6 0 12 1 12 9 15
CALL[ ]	/* CallFunction */";
};
width = 464;
}
);
note = schwa;
unicode = 601;
},
{
glyphname = f;
kernLeft = f;
kernRight = f;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(60,0,o),
(122,3,o),
(164,3,cs),
(200,3,o),
(243,1,o),
(273,1,cs),
(312,1,o),
(333,8,o),
(333,41,cs),
(333,79,o),
(305,78,o),
(287,78,cs),
(178,78,l),
(178,392,ls),
(178,395,o),
(179,398,o),
(181,400,cs),
(183,402,o),
(188,403,o),
(196,403,cs),
(211,403,o),
(235,401,o),
(262,401,cs),
(276,401,o),
(308,402,o),
(308,441,cs),
(308,480,o),
(277,479,o),
(264,479,cs),
(186,479,ls),
(181,479,o),
(178,481,o),
(178,484,cs),
(178,525,o),
(178,583,o),
(196,646,cs),
(213,706,o),
(252,751,o),
(321,751,cs),
(334,751,o),
(345,750,o),
(353,747,cs),
(361,744,o),
(365,740,o),
(365,736,cs),
(365,729,o),
(357,723,o),
(350,716,cs),
(337,701,o),
(335,685,o),
(335,677,cs),
(335,650,o),
(358,627,o),
(390,627,cs),
(431,627,o),
(456,665,o),
(456,714,cs),
(456,763,o),
(430,825,o),
(320,825,cs),
(206,825,o),
(147,757,o),
(121,693,cs),
(89,616,o),
(86,539,o),
(84,491,cs),
(84,484,o),
(83,479,o),
(72,479,cs),
(59,479,ls),
(36,479,o),
(10,478,o),
(10,443,cs),
(10,410,o),
(33,403,o),
(56,403,cs),
(72,403,ls),
(77,403,o),
(81,403,o),
(83,402,cs),
(84,401,o),
(85,400,o),
(85,398,cs),
(85,276,o),
(87,215,o),
(87,215,c),
(87,182,o),
(84,126,o),
(81,93,cs),
(78,74,o),
(75,75,o),
(58,72,c),
(44,72,o),
(9,64,o),
(9,33,cs),
(9,2,o),
(40,0,o),
(60,0,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 7 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 3 4 1 4 3 1 104 0 4 4 2 83 0 2 2 12 67 6 1 0 0 1 83 5 1 1 1 23 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 3 4 1 4 3 1 104 5 1 1 6 1 0 7 1 0 91 0 4 4 2 83 0 2 2 12 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 3 4 1 4 3 1 104 0 9 7 8 7 9 96 5 1 1 6 1 0 7 1 0 91 0 4 4 2 83 0 2 2 14 67 0 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
109 108 213 51 134 71 42 38 40 52 60 10 24
CALL[ ]	/* CallFunction */";
};
width = 333;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(52,0,o),
(114,3,o),
(156,3,cs),
(191,3,o),
(234,1,o),
(266,1,cs),
(301,1,o),
(318,7,o),
(318,30,cs),
(318,58,o),
(299,60,o),
(279,60,cs),
(170,60,l),
(170,404,ls),
(170,407,o),
(171,410,o),
(173,412,cs),
(175,414,o),
(180,415,o),
(188,415,cs),
(203,415,o),
(227,413,o),
(254,413,cs),
(271,413,o),
(293,414,o),
(293,445,cs),
(293,470,o),
(269,473,o),
(256,473,cs),
(178,473,ls),
(173,473,o),
(170,477,o),
(170,484,cs),
(170,535,o),
(169,595,o),
(189,662,cs),
(208,725,o),
(250,769,o),
(323,769,cs),
(340,769,o),
(353,766,o),
(363,759,cs),
(373,752,o),
(378,746,o),
(378,742,cs),
(378,737,o),
(377,734,o),
(374,731,cs),
(371,728,o),
(367,725,o),
(363,721,cs),
(352,712,o),
(348,697,o),
(348,686,cs),
(348,665,o),
(364,642,o),
(396,642,cs),
(420,642,o),
(450,662,o),
(450,718,cs),
(450,757,o),
(421,825,o),
(323,825,cs),
(213,825,o),
(158,759,o),
(133,697,cs),
(102,621,o),
(99,544,o),
(97,491,cs),
(97,482,o),
(96,473,o),
(85,473,cs),
(51,473,ls),
(27,473,o),
(9,472,o),
(9,445,cs),
(9,422,o),
(25,415,o),
(48,415,cs),
(85,415,ls),
(90,415,o),
(94,415,o),
(96,414,cs),
(97,413,o),
(98,411,o),
(98,409,cs),
(98,377,o),
(98,345,o),
(99,313,cs),
(100,281,o),
(100,249,o),
(100,217,cs),
(100,169,o),
(98,122,o),
(94,75,cs),
(93,68,o),
(90,63,o),
(84,60,cs),
(77,57,o),
(66,55,o),
(50,54,cs),
(35,54,o),
(8,47,o),
(8,26,cs),
(8,1,o),
(34,0,o),
(52,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 3 4 1 4 3 1 104 0 4 4 2 83 0 2 2 12 67 6 1 0 0 1 83 5 1 1 1 23 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 3 4 1 4 3 1 104 5 1 1 6 1 0 7 1 0 91 0 4 4 2 83 0 2 2 12 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 3 4 1 4 3 1 104 0 9 7 8 7 9 96 5 1 1 6 1 0 7 1 0 91 0 4 4 2 83 0 2 2 12 67 0 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 3 4 1 4 3 1 104 0 9 7 8 7 9 96 5 1 1 6 1 0 7 1 0 91 0 4 4 2 83 0 2 2 14 67 0 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
100 99 212 35 118 55 42 38 40 52 55 10 24
CALL[ ]	/* CallFunction */";
};
width = 318;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(41,0,o),
(103,3,o),
(145,3,cs),
(180,3,o),
(223,1,o),
(255,1,cs),
(272,1,o),
(284,2,o),
(289,5,cs),
(294,7,o),
(297,10,o),
(297,15,cs),
(297,25,o),
(287,30,o),
(268,30,cs),
(159,30,l),
(159,424,ls),
(159,427,o),
(160,430,o),
(162,432,cs),
(164,434,o),
(169,435,o),
(177,435,cs),
(192,435,o),
(216,433,o),
(243,433,cs),
(258,433,o),
(272,436,o),
(272,447,cs),
(272,458,o),
(258,463,o),
(245,463,cs),
(167,463,ls),
(164,463,o),
(162,464,o),
(161,467,cs),
(160,470,o),
(159,475,o),
(159,484,cs),
(159,539,o),
(158,609,o),
(179,681,cs),
(198,750,o),
(240,799,o),
(317,799,cs),
(376,799,o),
(397,771,o),
(397,750,cs),
(397,741,o),
(393,737,o),
(382,729,cs),
(372,722,o),
(367,713,o),
(367,702,cs),
(367,679,o),
(381,667,o),
(400,667,cs),
(424,667,o),
(439,689,o),
(439,718,cs),
(439,757,o),
(410,825,o),
(312,825,cs),
(225,825,o),
(173,771,o),
(148,697,cs),
(122,623,o),
(118,541,o),
(116,491,cs),
(116,476,o),
(115,463,o),
(104,463,cs),
(40,463,ls),
(28,463,o),
(20,463,o),
(15,462,cs),
(10,461,o),
(8,457,o),
(8,452,cs),
(8,448,o),
(10,444,o),
(14,441,cs),
(18,437,o),
(26,435,o),
(37,435,cs),
(104,435,ls),
(115,435,o),
(117,428,o),
(117,409,cs),
(117,377,o),
(117,345,o),
(118,313,cs),
(119,281,o),
(119,249,o),
(119,217,cs),
(119,159,o),
(117,102,o),
(113,45,cs),
(112,38,o),
(107,33,o),
(96,31,cs),
(85,28,o),
(66,26,o),
(39,24,cs),
(24,23,o),
(7,22,o),
(7,11,cs),
(7,6,o),
(10,3,o),
(17,2,cs),
(24,1,o),
(32,0,o),
(41,0,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 7 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 4 1 4 3 1 104 0 4 4 2 83 0 2 2 12 67 6 1 0 0 1 83 5 1 1 1 23 67 0 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 4 1 4 3 1 104 5 1 1 6 1 0 7 1 0 91 0 4 4 2 83 0 2 2 12 67 0 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 3 4 1 4 3 1 104 5 1 1 6 1 0 7 1 0 91 0 4 4 2 83 0 2 2 14 67 0 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
195 35 116 56 41 38 40 52 55 9 24
CALL[ ]	/* CallFunction */";
};
width = 297;
}
);
note = f;
unicode = 102;
},
{
glyphname = g;
kernLeft = g;
kernRight = g;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(442,-250,o),
(569,-192,o),
(569,-76,cs),
(569,-5,o),
(521,35,o),
(457,55,cs),
(392,74,o),
(324,75,o),
(280,75,cs),
(233,76,o),
(200,78,o),
(179,83,cs),
(158,87,o),
(147,93,o),
(147,100,cs),
(147,111,o),
(172,131,o),
(197,139,c),
(212,136,o),
(218,136,o),
(231,136,cs),
(368,136,o),
(444,201,o),
(444,301,cs),
(444,354,o),
(421,402,o),
(372,431,c),
(406,451,o),
(445,449,o),
(462,455,cs),
(473,458,o),
(480,464,o),
(480,483,cs),
(480,516,o),
(457,528,o),
(433,528,cs),
(392,528,o),
(345,494,o),
(314,453,c),
(295,457,o),
(274,460,o),
(250,460,cs),
(117,460,o),
(53,390,o),
(53,295,cs),
(53,243,o),
(73,193,o),
(116,165,c),
(75,146,o),
(54,128,o),
(54,89,cs),
(54,37,o),
(90,16,o),
(142,7,c),
(65,-8,o),
(29,-49,o),
(29,-109,cs),
(29,-204,o),
(124,-250,o),
(281,-250,cs)
);
},
{
closed = 1;
nodes = (
(222,-175,o),
(120,-156,o),
(120,-100,cs),
(120,-43,o),
(221,-3,o),
(305,-3,cs),
(391,-3,o),
(475,-25,o),
(475,-91,cs),
(475,-150,o),
(398,-175,o),
(301,-175,cs)
);
},
{
closed = 1;
nodes = (
(186,209,o),
(147,252,o),
(147,296,cs),
(147,351,o),
(183,386,o),
(250,386,cs),
(319,386,o),
(350,348,o),
(350,301,cs),
(350,250,o),
(313,209,o),
(249,209,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
17 3 2 7 0 58 26 2 2 8 52 1 5 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 106 0 8 0 2 3 8 2 91 11 1 7 7 0 83 9 1 0 0 23 67 0 3 3 5 83 10 1 5 5 16 67 0 6 6 4 83 0 4 4 25 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 1 106 9 1 0 11 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 83 10 1 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
87 86 67 66 1 0 95 93 86 99 87 99 77 75 66 85 67 85 45 43 34 31 24 22 7 5 0 65 1 65 12 15
CALL[ ]	/* CallFunction */";
};
width = 515;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(356,-250,o),
(426,-234,o),
(475,-206,cs),
(524,-179,o),
(553,-139,o),
(553,-91,cs),
(553,46,o),
(401,57,o),
(285,57,cs),
(233,58,o),
(194,61,o),
(169,67,cs),
(144,72,o),
(131,82,o),
(131,95,cs),
(131,119,o),
(152,132,o),
(181,143,c),
(198,138,o),
(212,137,o),
(231,137,cs),
(359,137,o),
(428,210,o),
(428,301,cs),
(428,353,o),
(406,400,o),
(359,429,c),
(386,456,o),
(420,466,o),
(449,469,cs),
(464,472,o),
(473,483,o),
(473,498,cs),
(473,521,o),
(452,530,o),
(435,530,cs),
(396,530,o),
(349,493,o),
(316,449,c),
(293,456,o),
(267,460,o),
(240,460,cs),
(127,460,o),
(58,387,o),
(58,294,cs),
(58,243,o),
(78,193,o),
(121,165,c),
(80,146,o),
(59,128,o),
(59,89,cs),
(59,37,o),
(95,16,o),
(147,7,c),
(70,-8,o),
(31,-45,o),
(31,-102,cs),
(31,-202,o),
(142,-250,o),
(273,-250,cs)
);
},
{
closed = 1;
nodes = (
(204,-189,o),
(104,-163,o),
(104,-106,cs),
(104,-33,o),
(214,-1,o),
(299,-1,cs),
(315,-1,o),
(353,-2,o),
(397,-14,cs),
(442,-26,o),
(480,-52,o),
(480,-99,cs),
(480,-124,o),
(464,-146,o),
(432,-163,cs),
(399,-180,o),
(352,-189,o),
(290,-189,cs)
);
},
{
closed = 1;
nodes = (
(171,197,o),
(131,240,o),
(131,292,cs),
(131,356,o),
(175,400,o),
(247,400,cs),
(315,400,o),
(355,361,o),
(355,301,cs),
(355,238,o),
(312,197,o),
(240,197,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
16 2 2 7 0 56 27 2 2 8 50 1 5 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 106 0 8 0 2 3 8 2 91 11 1 7 7 0 83 9 1 0 0 23 67 0 3 3 5 83 10 1 5 5 16 67 0 6 6 4 83 0 4 4 25 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 9 1 0 11 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 3 3 5 83 10 1 5 5 16 67 0 6 6 4 83 0 4 4 25 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 1 106 9 1 0 11 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 83 10 1 5 5 16 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
85 84 65 64 1 0 91 89 84 95 85 95 75 73 64 83 65 82 44 42 34 32 25 23 8 6 0 63 1 63 12 15
CALL[ ]	/* CallFunction */";
};
width = 495;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(424,-250,o),
(530,-188,o),
(530,-91,cs),
(530,20,o),
(393,24,o),
(292,27,cs),
(175,29,o),
(108,32,o),
(108,95,cs),
(108,126,o),
(123,135,o),
(158,150,c),
(181,141,o),
(206,137,o),
(231,137,cs),
(342,137,o),
(405,218,o),
(405,301,cs),
(405,349,o),
(381,393,o),
(345,422,c),
(370,461,o),
(399,477,o),
(431,486,cs),
(450,493,o),
(464,501,o),
(464,512,cs),
(464,523,o),
(455,530,o),
(442,530,cs),
(401,530,o),
(346,486,o),
(318,441,c),
(295,454,o),
(271,460,o),
(247,460,cs),
(134,460,o),
(65,387,o),
(65,294,cs),
(65,243,o),
(85,193,o),
(128,165,c),
(87,146,o),
(66,128,o),
(66,89,cs),
(66,37,o),
(102,16,o),
(154,7,c),
(77,-8,o),
(38,-45,o),
(38,-102,cs),
(38,-202,o),
(149,-250,o),
(280,-250,cs)
);
},
{
closed = 1;
nodes = (
(184,-219,o),
(81,-183,o),
(81,-106,cs),
(81,-31,o),
(182,-1,o),
(297,-1,cs),
(332,-1,o),
(487,-6,o),
(487,-99,cs),
(487,-168,o),
(403,-219,o),
(285,-219,cs)
);
},
{
closed = 1;
nodes = (
(151,167,o),
(108,212,o),
(108,292,cs),
(108,376,o),
(158,430,o),
(239,430,cs),
(318,430,o),
(362,381,o),
(362,301,cs),
(362,217,o),
(311,167,o),
(230,167,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
2 1 7 0 16 1 8 7 58 27 2 2 8 52 1 5 3 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 11 1 7 7 0 83 9 1 0 0 23 67 0 3 3 5 83 10 1 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 1 106 9 1 0 11 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 83 10 1 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
87 86 67 66 1 0 93 91 86 97 87 97 77 75 66 85 67 84 46 44 36 33 25 23 8 6 0 65 1 65 12 15
CALL[ ]	/* CallFunction */";
};
width = 467;
}
);
note = g;
unicode = 103;
},
{
glyphname = gbreve;
kernLeft = g;
kernRight = g;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(442,-250,o),
(569,-192,o),
(569,-76,cs),
(569,-5,o),
(521,35,o),
(457,55,cs),
(392,74,o),
(324,75,o),
(280,75,cs),
(233,76,o),
(200,78,o),
(179,83,cs),
(158,87,o),
(147,93,o),
(147,100,cs),
(147,111,o),
(172,131,o),
(197,139,c),
(212,136,o),
(218,136,o),
(231,136,cs),
(368,136,o),
(444,201,o),
(444,301,cs),
(444,354,o),
(421,402,o),
(372,431,c),
(406,451,o),
(445,449,o),
(462,455,cs),
(473,458,o),
(480,464,o),
(480,483,cs),
(480,516,o),
(457,528,o),
(433,528,cs),
(392,528,o),
(345,494,o),
(314,453,c),
(295,457,o),
(274,460,o),
(250,460,cs),
(117,460,o),
(53,390,o),
(53,295,cs),
(53,243,o),
(73,193,o),
(116,165,c),
(75,146,o),
(54,128,o),
(54,89,cs),
(54,37,o),
(90,16,o),
(142,7,c),
(65,-8,o),
(29,-49,o),
(29,-109,cs),
(29,-204,o),
(124,-250,o),
(281,-250,cs)
);
},
{
closed = 1;
nodes = (
(222,-175,o),
(120,-156,o),
(120,-100,cs),
(120,-43,o),
(221,-3,o),
(305,-3,cs),
(391,-3,o),
(475,-25,o),
(475,-91,cs),
(475,-150,o),
(398,-175,o),
(301,-175,cs)
);
},
{
closed = 1;
nodes = (
(186,209,o),
(147,252,o),
(147,296,cs),
(147,351,o),
(183,386,o),
(250,386,cs),
(319,386,o),
(350,348,o),
(350,301,cs),
(350,250,o),
(313,209,o),
(249,209,cs)
);
},
{
closed = 1;
nodes = (
(312,510,o),
(381,537,o),
(381,589,cs),
(381,616,o),
(363,619,o),
(343,619,cs),
(326,619,o),
(311,605,o),
(311,590,cs),
(311,585,o),
(307,580,o),
(298,575,cs),
(289,570,o),
(274,567,o),
(255,567,cs),
(225,567,o),
(196,575,o),
(196,590,cs),
(196,613,o),
(183,619,o),
(160,619,cs),
(137,619,o),
(128,606,o),
(128,589,cs),
(128,546,o),
(173,510,o),
(260,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
17 3 2 7 0 58 26 2 2 8 52 1 5 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
12 1 10 11 10 106 0 1 11 9 11 1 9 104 0 11 0 9 0 11 9 91 0 8 0 2 3 8 2 91 15 1 7 7 0 83 13 1 0 0 23 67 0 3 3 5 84 14 1 5 5 16 67 0 6 6 4 83 0 4 4 25 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
12 1 10 11 10 106 0 1 11 9 11 1 9 104 0 11 0 9 0 11 9 91 13 1 0 15 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 84 14 1 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
87 86 67 66 1 0 126 124 120 118 112 110 106 104 95 93 86 99 87 99 77 75 66 85 67 85 45 43 34 31 24 22 7 5 0 65 1 65 16 15
CALL[ ]	/* CallFunction */";
};
width = 515;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(356,-250,o),
(426,-234,o),
(475,-206,cs),
(524,-179,o),
(553,-139,o),
(553,-91,cs),
(553,46,o),
(401,57,o),
(285,57,cs),
(233,58,o),
(194,61,o),
(169,67,cs),
(144,72,o),
(131,82,o),
(131,95,cs),
(131,119,o),
(152,132,o),
(181,143,c),
(198,138,o),
(212,137,o),
(231,137,cs),
(359,137,o),
(428,210,o),
(428,301,cs),
(428,353,o),
(406,400,o),
(359,429,c),
(386,456,o),
(420,466,o),
(449,469,cs),
(464,472,o),
(473,483,o),
(473,498,cs),
(473,521,o),
(452,530,o),
(435,530,cs),
(396,530,o),
(349,493,o),
(316,449,c),
(293,456,o),
(267,460,o),
(240,460,cs),
(127,460,o),
(58,387,o),
(58,294,cs),
(58,243,o),
(78,193,o),
(121,165,c),
(80,146,o),
(59,128,o),
(59,89,cs),
(59,37,o),
(95,16,o),
(147,7,c),
(70,-8,o),
(31,-45,o),
(31,-102,cs),
(31,-202,o),
(142,-250,o),
(273,-250,cs)
);
},
{
closed = 1;
nodes = (
(204,-189,o),
(104,-163,o),
(104,-106,cs),
(104,-33,o),
(214,-1,o),
(299,-1,cs),
(315,-1,o),
(353,-2,o),
(397,-14,cs),
(442,-26,o),
(480,-52,o),
(480,-99,cs),
(480,-124,o),
(464,-146,o),
(432,-163,cs),
(399,-180,o),
(352,-189,o),
(290,-189,cs)
);
},
{
closed = 1;
nodes = (
(171,197,o),
(131,240,o),
(131,292,cs),
(131,356,o),
(175,400,o),
(247,400,cs),
(315,400,o),
(355,361,o),
(355,301,cs),
(355,238,o),
(312,197,o),
(240,197,cs)
);
},
{
closed = 1;
nodes = (
(298,510,o),
(364,537,o),
(364,589,cs),
(364,616,o),
(347,617,o),
(334,617,cs),
(319,617,o),
(308,605,o),
(308,590,cs),
(308,573,o),
(283,555,o),
(244,555,cs),
(214,555,o),
(179,564,o),
(179,590,cs),
(179,610,o),
(170,617,o),
(151,617,cs),
(134,617,o),
(125,608,o),
(125,589,cs),
(125,548,o),
(171,510,o),
(247,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
17 3 2 7 0 57 28 2 2 8 51 1 5 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
12 1 10 11 10 106 0 1 11 9 11 1 9 104 0 11 0 9 0 11 9 91 0 8 0 2 3 8 2 91 15 1 7 7 0 83 13 1 0 0 23 67 0 3 3 5 84 14 1 5 5 16 67 0 6 6 4 83 0 4 4 25 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
12 1 10 11 10 106 0 1 11 9 11 1 9 104 0 11 0 9 0 11 9 91 13 1 0 15 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 3 3 5 84 14 1 5 5 16 67 0 6 6 4 83 0 4 4 25 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
12 1 10 11 10 106 0 1 11 9 11 1 9 104 0 11 0 9 0 11 9 91 13 1 0 15 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 84 14 1 5 5 16 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
86 85 66 65 2 1 122 120 116 114 108 106 103 101 92 90 85 96 86 96 76 74 65 84 66 83 45 43 35 33 26 24 9 7 1 64 2 64 16 26
CALL[ ]	/* CallFunction */";
};
width = 495;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(424,-250,o),
(530,-188,o),
(530,-91,cs),
(530,20,o),
(393,24,o),
(292,27,cs),
(175,29,o),
(108,32,o),
(108,95,cs),
(108,126,o),
(123,135,o),
(158,150,c),
(181,141,o),
(206,137,o),
(231,137,cs),
(342,137,o),
(405,218,o),
(405,301,cs),
(405,349,o),
(381,393,o),
(345,422,c),
(370,461,o),
(399,477,o),
(431,486,cs),
(450,493,o),
(464,501,o),
(464,512,cs),
(464,523,o),
(455,530,o),
(442,530,cs),
(401,530,o),
(346,486,o),
(318,441,c),
(295,454,o),
(271,460,o),
(247,460,cs),
(134,460,o),
(65,387,o),
(65,294,cs),
(65,243,o),
(85,193,o),
(128,165,c),
(87,146,o),
(66,128,o),
(66,89,cs),
(66,37,o),
(102,16,o),
(154,7,c),
(77,-8,o),
(38,-45,o),
(38,-102,cs),
(38,-202,o),
(149,-250,o),
(280,-250,cs)
);
},
{
closed = 1;
nodes = (
(184,-219,o),
(81,-183,o),
(81,-106,cs),
(81,-31,o),
(182,-1,o),
(297,-1,cs),
(332,-1,o),
(487,-6,o),
(487,-99,cs),
(487,-168,o),
(403,-219,o),
(285,-219,cs)
);
},
{
closed = 1;
nodes = (
(151,167,o),
(108,212,o),
(108,292,cs),
(108,376,o),
(158,430,o),
(239,430,cs),
(318,430,o),
(362,381,o),
(362,301,cs),
(362,217,o),
(311,167,o),
(230,167,cs)
);
},
{
closed = 1;
nodes = (
(282,510,o),
(340,541,o),
(340,589,cs),
(340,610,o),
(332,613,o),
(321,613,cs),
(310,613,o),
(304,605,o),
(304,590,cs),
(304,563,o),
(265,535,o),
(229,535,cs),
(190,535,o),
(155,549,o),
(155,590,cs),
(155,606,o),
(153,613,o),
(138,613,cs),
(127,613,o),
(121,605,o),
(121,589,cs),
(121,548,o),
(171,510,o),
(229,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
2 1 7 0 16 1 8 7 58 27 2 2 8 52 1 5 3 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
12 1 10 1 10 106 11 1 1 0 9 0 1 9 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 15 1 7 7 0 83 13 1 0 0 23 67 0 3 3 5 84 14 1 5 5 16 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
12 1 10 1 10 106 11 1 1 0 9 0 1 9 91 13 1 0 15 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 84 14 1 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
12 1 10 11 10 106 0 1 11 9 11 1 9 104 0 11 0 9 0 11 9 91 13 1 0 15 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 84 14 1 5 5 16 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
87 86 67 66 1 0 124 122 117 115 111 109 104 102 93 91 86 97 87 97 77 75 66 85 67 84 46 44 36 33 25 23 8 6 0 65 1 65 16 15
CALL[ ]	/* CallFunction */";
};
width = 467;
}
);
note = gbreve;
unicode = 287;
},
{
glyphname = gcircumflex;
kernLeft = g;
kernRight = g;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(442,-250,o),
(569,-192,o),
(569,-76,cs),
(569,-5,o),
(521,35,o),
(457,55,cs),
(392,74,o),
(324,75,o),
(280,75,cs),
(233,76,o),
(200,78,o),
(179,83,cs),
(158,87,o),
(147,93,o),
(147,100,cs),
(147,111,o),
(172,131,o),
(197,139,c),
(212,136,o),
(218,136,o),
(231,136,cs),
(368,136,o),
(444,201,o),
(444,301,cs),
(444,354,o),
(421,402,o),
(372,431,c),
(406,451,o),
(445,449,o),
(462,455,cs),
(473,458,o),
(480,464,o),
(480,483,cs),
(480,516,o),
(457,528,o),
(433,528,cs),
(392,528,o),
(345,494,o),
(314,453,c),
(295,457,o),
(274,460,o),
(250,460,cs),
(117,460,o),
(53,390,o),
(53,295,cs),
(53,243,o),
(73,193,o),
(116,165,c),
(75,146,o),
(54,128,o),
(54,89,cs),
(54,37,o),
(90,16,o),
(142,7,c),
(65,-8,o),
(29,-49,o),
(29,-109,cs),
(29,-204,o),
(124,-250,o),
(281,-250,cs)
);
},
{
closed = 1;
nodes = (
(222,-175,o),
(120,-156,o),
(120,-100,cs),
(120,-43,o),
(221,-3,o),
(305,-3,cs),
(391,-3,o),
(475,-25,o),
(475,-91,cs),
(475,-150,o),
(398,-175,o),
(301,-175,cs)
);
},
{
closed = 1;
nodes = (
(186,209,o),
(147,252,o),
(147,296,cs),
(147,351,o),
(183,386,o),
(250,386,cs),
(319,386,o),
(350,348,o),
(350,301,cs),
(350,250,o),
(313,209,o),
(249,209,cs)
);
},
{
closed = 1;
nodes = (
(157,488,o),
(190,512,o),
(262,550,c),
(285,538,o),
(304,529,o),
(319,523,cs),
(333,517,o),
(342,514,o),
(345,514,cs),
(356,514,o),
(359,522,o),
(359,531,cs),
(359,567,o),
(285,642,o),
(262,642,cs),
(248,642,o),
(129,559,o),
(129,502,cs),
(129,493,o),
(134,488,o),
(143,488,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
3 1 4 2 40 26 2 10 3 81 49 2 5 11 75 1 8 6 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 2 4 2 106 0 4 0 4 106 12 1 0 1 0 106 0 1 3 1 106 0 11 0 5 6 11 5 91 15 1 10 10 3 83 13 1 3 3 23 67 0 6 6 8 83 14 1 8 8 16 67 0 9 9 7 83 0 7 7 25 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 2 4 2 106 0 4 0 4 106 12 1 0 1 0 106 0 1 3 1 106 13 1 3 15 1 10 11 3 10 92 0 11 0 5 6 11 5 91 0 9 0 7 9 7 87 0 6 6 8 83 14 1 8 8 16 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
110 109 90 89 24 23 1 0 118 116 109 122 110 122 100 98 89 108 90 108 68 66 57 54 47 45 30 28 23 88 24 88 16 14 9 7 0 22 1 22 16 15
CALL[ ]	/* CallFunction */";
};
width = 515;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(356,-250,o),
(426,-234,o),
(475,-206,cs),
(524,-179,o),
(553,-139,o),
(553,-91,cs),
(553,46,o),
(401,57,o),
(285,57,cs),
(233,58,o),
(194,61,o),
(169,67,cs),
(144,72,o),
(131,82,o),
(131,95,cs),
(131,119,o),
(152,132,o),
(181,143,c),
(198,138,o),
(212,137,o),
(231,137,cs),
(359,137,o),
(428,210,o),
(428,301,cs),
(428,353,o),
(406,400,o),
(359,429,c),
(386,456,o),
(420,466,o),
(449,469,cs),
(464,472,o),
(473,483,o),
(473,498,cs),
(473,521,o),
(452,530,o),
(435,530,cs),
(396,530,o),
(349,493,o),
(316,449,c),
(293,456,o),
(267,460,o),
(240,460,cs),
(127,460,o),
(58,387,o),
(58,294,cs),
(58,243,o),
(78,193,o),
(121,165,c),
(80,146,o),
(59,128,o),
(59,89,cs),
(59,37,o),
(95,16,o),
(147,7,c),
(70,-8,o),
(31,-45,o),
(31,-102,cs),
(31,-202,o),
(142,-250,o),
(273,-250,cs)
);
},
{
closed = 1;
nodes = (
(204,-189,o),
(104,-163,o),
(104,-106,cs),
(104,-33,o),
(214,-1,o),
(299,-1,cs),
(315,-1,o),
(353,-2,o),
(397,-14,cs),
(442,-26,o),
(480,-52,o),
(480,-99,cs),
(480,-124,o),
(464,-146,o),
(432,-163,cs),
(399,-180,o),
(352,-189,o),
(290,-189,cs)
);
},
{
closed = 1;
nodes = (
(171,197,o),
(131,240,o),
(131,292,cs),
(131,356,o),
(175,400,o),
(247,400,cs),
(315,400,o),
(355,361,o),
(355,301,cs),
(355,238,o),
(312,197,o),
(240,197,cs)
);
},
{
closed = 1;
nodes = (
(147,496,o),
(178,524,o),
(251,567,c),
(274,554,o),
(293,543,o),
(306,535,cs),
(319,526,o),
(330,522,o),
(337,522,cs),
(344,522,o),
(348,527,o),
(348,537,cs),
(348,569,o),
(276,641,o),
(251,641,cs),
(229,641,o),
(121,550,o),
(121,509,cs),
(121,500,o),
(125,496,o),
(132,496,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
3 1 4 2 38 24 2 10 3 78 49 2 5 11 72 1 8 6 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 2 4 2 106 0 4 0 4 106 12 1 0 1 0 106 0 1 3 1 106 0 11 0 5 6 11 5 91 15 1 10 10 3 83 13 1 3 3 23 67 0 6 6 8 83 14 1 8 8 16 67 0 9 9 7 83 0 7 7 25 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 2 4 2 106 0 4 0 4 106 12 1 0 1 0 106 0 1 3 1 106 13 1 3 15 1 10 11 3 10 92 0 11 0 5 6 11 5 91 0 6 6 8 83 14 1 8 8 16 67 0 9 9 7 83 0 7 7 25 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 2 4 2 106 0 4 0 4 106 12 1 0 1 0 106 0 1 3 1 106 13 1 3 15 1 10 11 3 10 92 0 11 0 5 6 11 5 91 0 9 0 7 9 7 87 0 6 6 8 83 14 1 8 8 16 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
107 106 87 86 23 22 1 0 113 111 106 117 107 117 97 95 86 105 87 104 66 64 56 54 47 45 30 28 22 85 23 85 16 14 9 7 0 21 1 21 16 15
CALL[ ]	/* CallFunction */";
};
width = 495;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(424,-250,o),
(530,-188,o),
(530,-91,cs),
(530,20,o),
(393,24,o),
(292,27,cs),
(175,29,o),
(108,32,o),
(108,95,cs),
(108,126,o),
(123,135,o),
(158,150,c),
(181,141,o),
(206,137,o),
(231,137,cs),
(342,137,o),
(405,218,o),
(405,301,cs),
(405,349,o),
(381,393,o),
(345,422,c),
(370,461,o),
(399,477,o),
(431,486,cs),
(450,493,o),
(464,501,o),
(464,512,cs),
(464,523,o),
(455,530,o),
(442,530,cs),
(401,530,o),
(346,486,o),
(318,441,c),
(295,454,o),
(271,460,o),
(247,460,cs),
(134,460,o),
(65,387,o),
(65,294,cs),
(65,243,o),
(85,193,o),
(128,165,c),
(87,146,o),
(66,128,o),
(66,89,cs),
(66,37,o),
(102,16,o),
(154,7,c),
(77,-8,o),
(38,-45,o),
(38,-102,cs),
(38,-202,o),
(149,-250,o),
(280,-250,cs)
);
},
{
closed = 1;
nodes = (
(184,-219,o),
(81,-183,o),
(81,-106,cs),
(81,-31,o),
(182,-1,o),
(297,-1,cs),
(332,-1,o),
(487,-6,o),
(487,-99,cs),
(487,-168,o),
(403,-219,o),
(285,-219,cs)
);
},
{
closed = 1;
nodes = (
(151,167,o),
(108,212,o),
(108,292,cs),
(108,376,o),
(158,430,o),
(239,430,cs),
(318,430,o),
(362,381,o),
(362,301,cs),
(362,217,o),
(311,167,o),
(230,167,cs)
);
},
{
closed = 1;
nodes = (
(131,510,o),
(183,559,o),
(236,596,c),
(259,579,o),
(276,565,o),
(289,554,cs),
(301,542,o),
(313,536,o),
(325,536,cs),
(330,536,o),
(333,540,o),
(333,547,cs),
(333,573,o),
(260,640,o),
(236,640,cs),
(213,640,o),
(109,546,o),
(109,521,cs),
(109,514,o),
(112,510,o),
(117,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
101 1 9 11 2 1 7 0 16 1 8 7 58 27 2 2 8 52 1 5 3 5 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 11 9 11 106 15 1 9 1 9 106 0 1 10 1 106 0 10 0 10 106 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 14 1 7 7 0 83 12 1 0 0 23 67 0 3 3 5 83 13 1 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 11 9 11 106 15 1 9 1 9 106 0 1 10 1 106 0 10 0 10 106 12 1 0 14 1 7 8 0 7 92 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 83 13 1 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
99 98 87 86 67 66 1 0 114 112 107 105 98 119 99 119 93 91 86 97 87 97 77 75 66 85 67 84 46 44 36 33 25 23 8 6 0 65 1 65 16 15
CALL[ ]	/* CallFunction */";
};
width = 467;
}
);
note = gcircumflex;
unicode = 285;
},
{
glyphname = gcommaaccent;
kernLeft = g;
kernRight = g;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(442,-250,o),
(569,-192,o),
(569,-76,cs),
(569,-5,o),
(521,35,o),
(457,55,cs),
(392,74,o),
(324,75,o),
(280,75,cs),
(233,76,o),
(200,78,o),
(179,83,cs),
(158,87,o),
(147,93,o),
(147,100,cs),
(147,111,o),
(172,131,o),
(197,139,c),
(212,136,o),
(218,136,o),
(231,136,cs),
(368,136,o),
(444,201,o),
(444,301,cs),
(444,354,o),
(421,402,o),
(372,431,c),
(406,451,o),
(445,449,o),
(462,455,cs),
(473,458,o),
(480,464,o),
(480,483,cs),
(480,516,o),
(457,528,o),
(433,528,cs),
(392,528,o),
(345,494,o),
(314,453,c),
(295,457,o),
(274,460,o),
(250,460,cs),
(117,460,o),
(53,390,o),
(53,295,cs),
(53,243,o),
(73,193,o),
(116,165,c),
(75,146,o),
(54,128,o),
(54,89,cs),
(54,37,o),
(90,16,o),
(142,7,c),
(65,-8,o),
(29,-49,o),
(29,-109,cs),
(29,-204,o),
(124,-250,o),
(281,-250,cs)
);
},
{
closed = 1;
nodes = (
(222,-175,o),
(120,-156,o),
(120,-100,cs),
(120,-43,o),
(221,-3,o),
(305,-3,cs),
(391,-3,o),
(475,-25,o),
(475,-91,cs),
(475,-150,o),
(398,-175,o),
(301,-175,cs)
);
},
{
closed = 1;
nodes = (
(186,209,o),
(147,252,o),
(147,296,cs),
(147,351,o),
(183,386,o),
(250,386,cs),
(319,386,o),
(350,348,o),
(350,301,cs),
(350,250,o),
(313,209,o),
(249,209,cs)
);
},
{
closed = 1;
nodes = (
(268,487,o),
(331,529,o),
(331,606,cs),
(331,663,o),
(295,687,o),
(263,687,cs),
(219,687,o),
(203,657,o),
(203,629,cs),
(203,598,o),
(239,596,o),
(239,579,cs),
(239,559,o),
(237,544,o),
(232,535,cs),
(227,525,o),
(224,517,o),
(224,510,cs),
(224,487,o),
(243,487,o),
(250,487,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
39 25 2 9 2 80 48 2 4 10 74 1 7 5 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 0 3 0 106 0 3 1 3 106 0 1 2 1 106 0 10 0 4 5 10 4 91 13 1 9 9 2 83 11 1 2 2 23 67 0 5 5 7 83 12 1 7 7 16 67 0 8 8 6 83 0 6 6 25 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 0 3 0 106 0 3 1 3 106 0 1 2 1 106 11 1 2 13 1 9 10 2 9 92 0 10 0 4 5 10 4 91 0 8 0 6 8 6 87 0 5 5 7 83 12 1 7 7 16 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
109 108 89 88 23 22 117 115 108 121 109 121 99 97 88 107 89 107 67 65 56 53 46 44 29 27 22 87 23 87 38 34 14 17
CALL[ ]	/* CallFunction */";
};
width = 515;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(356,-250,o),
(426,-234,o),
(475,-206,cs),
(524,-179,o),
(553,-139,o),
(553,-91,cs),
(553,46,o),
(401,57,o),
(285,57,cs),
(233,58,o),
(194,61,o),
(169,67,cs),
(144,72,o),
(131,82,o),
(131,95,cs),
(131,119,o),
(152,132,o),
(181,143,c),
(198,138,o),
(212,137,o),
(231,137,cs),
(359,137,o),
(428,210,o),
(428,301,cs),
(428,353,o),
(406,400,o),
(359,429,c),
(386,456,o),
(420,466,o),
(449,469,cs),
(464,472,o),
(473,483,o),
(473,498,cs),
(473,521,o),
(452,530,o),
(435,530,cs),
(396,530,o),
(349,493,o),
(316,449,c),
(293,456,o),
(267,460,o),
(240,460,cs),
(127,460,o),
(58,387,o),
(58,294,cs),
(58,243,o),
(78,193,o),
(121,165,c),
(80,146,o),
(59,128,o),
(59,89,cs),
(59,37,o),
(95,16,o),
(147,7,c),
(70,-8,o),
(31,-45,o),
(31,-102,cs),
(31,-202,o),
(142,-250,o),
(273,-250,cs)
);
},
{
closed = 1;
nodes = (
(204,-189,o),
(104,-163,o),
(104,-106,cs),
(104,-33,o),
(214,-1,o),
(299,-1,cs),
(315,-1,o),
(353,-2,o),
(397,-14,cs),
(442,-26,o),
(480,-52,o),
(480,-99,cs),
(480,-124,o),
(464,-146,o),
(432,-163,cs),
(399,-180,o),
(352,-189,o),
(290,-189,cs)
);
},
{
closed = 1;
nodes = (
(171,197,o),
(131,240,o),
(131,292,cs),
(131,356,o),
(175,400,o),
(247,400,cs),
(315,400,o),
(355,361,o),
(355,301,cs),
(355,238,o),
(312,197,o),
(240,197,cs)
);
},
{
closed = 1;
nodes = (
(271,495,o),
(312,545,o),
(312,599,cs),
(312,652,o),
(282,671,o),
(255,671,cs),
(218,671,o),
(203,646,o),
(203,622,cs),
(203,590,o),
(239,591,o),
(239,574,cs),
(239,557,o),
(237,544,o),
(233,536,cs),
(228,527,o),
(226,520,o),
(226,514,cs),
(226,497,o),
(240,495,o),
(247,495,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
17 3 2 7 0 57 28 2 2 8 51 1 5 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 9 1 9 106 0 1 10 1 106 0 10 0 10 106 0 8 0 2 3 8 2 91 13 1 7 7 0 83 11 1 0 0 23 67 0 3 3 5 83 12 1 5 5 16 67 0 6 6 4 83 0 4 4 25 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 9 1 9 106 0 1 10 1 106 0 10 0 10 106 11 1 0 13 1 7 8 0 7 92 0 8 0 2 3 8 2 91 0 3 3 5 83 12 1 5 5 16 67 0 6 6 4 83 0 4 4 25 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 9 1 9 106 0 1 10 1 106 0 10 0 10 106 11 1 0 13 1 7 8 0 7 92 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 83 12 1 5 5 16 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
86 85 66 65 2 1 109 107 101 99 92 90 85 96 86 96 76 74 65 84 66 83 45 43 35 33 26 24 9 7 1 64 2 64 14 26
CALL[ ]	/* CallFunction */";
};
width = 495;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(424,-250,o),
(530,-188,o),
(530,-91,cs),
(530,20,o),
(393,24,o),
(292,27,cs),
(175,29,o),
(108,32,o),
(108,95,cs),
(108,126,o),
(123,135,o),
(158,150,c),
(181,141,o),
(206,137,o),
(231,137,cs),
(342,137,o),
(405,218,o),
(405,301,cs),
(405,349,o),
(381,393,o),
(345,422,c),
(370,461,o),
(399,477,o),
(431,486,cs),
(450,493,o),
(464,501,o),
(464,512,cs),
(464,523,o),
(455,530,o),
(442,530,cs),
(401,530,o),
(346,486,o),
(318,441,c),
(295,454,o),
(271,460,o),
(247,460,cs),
(134,460,o),
(65,387,o),
(65,294,cs),
(65,243,o),
(85,193,o),
(128,165,c),
(87,146,o),
(66,128,o),
(66,89,cs),
(66,37,o),
(102,16,o),
(154,7,c),
(77,-8,o),
(38,-45,o),
(38,-102,cs),
(38,-202,o),
(149,-250,o),
(280,-250,cs)
);
},
{
closed = 1;
nodes = (
(184,-219,o),
(81,-183,o),
(81,-106,cs),
(81,-31,o),
(182,-1,o),
(297,-1,cs),
(332,-1,o),
(487,-6,o),
(487,-99,cs),
(487,-168,o),
(403,-219,o),
(285,-219,cs)
);
},
{
closed = 1;
nodes = (
(151,167,o),
(108,212,o),
(108,292,cs),
(108,376,o),
(158,430,o),
(239,430,cs),
(318,430,o),
(362,381,o),
(362,301,cs),
(362,217,o),
(311,167,o),
(230,167,cs)
);
},
{
closed = 1;
nodes = (
(269,509,o),
(285,559,o),
(285,588,cs),
(285,633,o),
(263,645,o),
(243,645,cs),
(216,645,o),
(203,628,o),
(203,611,cs),
(203,579,o),
(239,584,o),
(239,567,cs),
(239,560,o),
(237,552,o),
(234,543,cs),
(230,533,o),
(228,526,o),
(228,521,cs),
(228,514,o),
(235,509,o),
(242,509,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
2 1 7 0 16 1 8 7 58 27 2 2 8 52 1 5 3 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 9 1 9 106 0 1 10 1 106 0 10 0 10 106 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 13 1 7 7 0 83 11 1 0 0 23 67 0 3 3 5 83 12 1 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 9 1 9 106 0 1 10 1 106 0 10 0 10 106 11 1 0 13 1 7 8 0 7 92 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 83 12 1 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
87 86 67 66 1 0 110 108 102 100 93 91 86 97 87 97 77 75 66 85 67 84 46 44 36 33 25 23 8 6 0 65 1 65 14 15
CALL[ ]	/* CallFunction */";
};
width = 467;
}
);
note = gcommaaccent;
unicode = 291;
},
{
glyphname = gdotaccent;
kernLeft = g;
kernRight = g;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(442,-250,o),
(569,-192,o),
(569,-76,cs),
(569,-5,o),
(521,35,o),
(457,55,cs),
(392,74,o),
(324,75,o),
(280,75,cs),
(233,76,o),
(200,78,o),
(179,83,cs),
(158,87,o),
(147,93,o),
(147,100,cs),
(147,111,o),
(172,131,o),
(197,139,c),
(212,136,o),
(218,136,o),
(231,136,cs),
(368,136,o),
(444,201,o),
(444,301,cs),
(444,354,o),
(421,402,o),
(372,431,c),
(406,451,o),
(445,449,o),
(462,455,cs),
(473,458,o),
(480,464,o),
(480,483,cs),
(480,516,o),
(457,528,o),
(433,528,cs),
(392,528,o),
(345,494,o),
(314,453,c),
(295,457,o),
(274,460,o),
(250,460,cs),
(117,460,o),
(53,390,o),
(53,295,cs),
(53,243,o),
(73,193,o),
(116,165,c),
(75,146,o),
(54,128,o),
(54,89,cs),
(54,37,o),
(90,16,o),
(142,7,c),
(65,-8,o),
(29,-49,o),
(29,-109,cs),
(29,-204,o),
(124,-250,o),
(281,-250,cs)
);
},
{
closed = 1;
nodes = (
(222,-175,o),
(120,-156,o),
(120,-100,cs),
(120,-43,o),
(221,-3,o),
(305,-3,cs),
(391,-3,o),
(475,-25,o),
(475,-91,cs),
(475,-150,o),
(398,-175,o),
(301,-175,cs)
);
},
{
closed = 1;
nodes = (
(186,209,o),
(147,252,o),
(147,296,cs),
(147,351,o),
(183,386,o),
(250,386,cs),
(319,386,o),
(350,348,o),
(350,301,cs),
(350,250,o),
(313,209,o),
(249,209,cs)
);
},
{
closed = 1;
nodes = (
(285,521,o),
(322,536,o),
(322,591,cs),
(322,627,o),
(294,652,o),
(262,652,cs),
(214,652,o),
(196,614,o),
(196,587,cs),
(196,544,o),
(222,521,o),
(255,521,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
17 3 2 7 0 58 26 2 2 8 52 1 5 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 1 9 10 9 1 10 104 0 9 0 10 0 9 10 91 0 8 0 2 3 8 2 91 13 1 7 7 0 83 11 1 0 0 23 67 0 3 3 5 83 12 1 5 5 16 67 0 6 6 4 83 0 4 4 25 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 1 9 10 9 1 10 104 0 9 0 10 0 9 10 91 11 1 0 13 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 83 12 1 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
87 86 67 66 1 0 114 112 106 104 95 93 86 99 87 99 77 75 66 85 67 85 45 43 34 31 24 22 7 5 0 65 1 65 14 15
CALL[ ]	/* CallFunction */";
};
width = 515;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(356,-250,o),
(426,-234,o),
(475,-206,cs),
(524,-179,o),
(553,-139,o),
(553,-91,cs),
(553,46,o),
(401,57,o),
(285,57,cs),
(233,58,o),
(194,61,o),
(169,67,cs),
(144,72,o),
(131,82,o),
(131,95,cs),
(131,119,o),
(152,132,o),
(181,143,c),
(198,138,o),
(212,137,o),
(231,137,cs),
(359,137,o),
(428,210,o),
(428,301,cs),
(428,353,o),
(406,400,o),
(359,429,c),
(386,456,o),
(420,466,o),
(449,469,cs),
(464,472,o),
(473,483,o),
(473,498,cs),
(473,521,o),
(452,530,o),
(435,530,cs),
(396,530,o),
(349,493,o),
(316,449,c),
(293,456,o),
(267,460,o),
(240,460,cs),
(127,460,o),
(58,387,o),
(58,294,cs),
(58,243,o),
(78,193,o),
(121,165,c),
(80,146,o),
(59,128,o),
(59,89,cs),
(59,37,o),
(95,16,o),
(147,7,c),
(70,-8,o),
(31,-45,o),
(31,-102,cs),
(31,-202,o),
(142,-250,o),
(273,-250,cs)
);
},
{
closed = 1;
nodes = (
(204,-189,o),
(104,-163,o),
(104,-106,cs),
(104,-33,o),
(214,-1,o),
(299,-1,cs),
(315,-1,o),
(353,-2,o),
(397,-14,cs),
(442,-26,o),
(480,-52,o),
(480,-99,cs),
(480,-124,o),
(464,-146,o),
(432,-163,cs),
(399,-180,o),
(352,-189,o),
(290,-189,cs)
);
},
{
closed = 1;
nodes = (
(171,197,o),
(131,240,o),
(131,292,cs),
(131,356,o),
(175,400,o),
(247,400,cs),
(315,400,o),
(355,361,o),
(355,301,cs),
(355,238,o),
(312,197,o),
(240,197,cs)
);
},
{
closed = 1;
nodes = (
(271,527,o),
(302,540,o),
(302,588,cs),
(302,619,o),
(280,640,o),
(253,640,cs),
(211,640,o),
(197,604,o),
(197,584,cs),
(197,548,o),
(219,527,o),
(246,527,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
17 3 2 7 0 57 28 2 2 8 51 1 5 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 1 9 10 9 1 10 104 0 9 0 10 0 9 10 91 0 8 0 2 3 8 2 91 13 1 7 7 0 83 11 1 0 0 23 67 0 3 3 5 83 12 1 5 5 16 67 0 6 6 4 83 0 4 4 25 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 1 9 10 9 1 10 104 0 9 0 10 0 9 10 91 11 1 0 13 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 3 3 5 83 12 1 5 5 16 67 0 6 6 4 83 0 4 4 25 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 1 9 10 9 1 10 104 0 9 0 10 0 9 10 91 11 1 0 13 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 83 12 1 5 5 16 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
86 85 66 65 2 1 109 107 103 101 92 90 85 96 86 96 76 74 65 84 66 83 45 43 35 33 26 24 9 7 1 64 2 64 14 26
CALL[ ]	/* CallFunction */";
};
width = 495;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(424,-250,o),
(530,-188,o),
(530,-91,cs),
(530,20,o),
(393,24,o),
(292,27,cs),
(175,29,o),
(108,32,o),
(108,95,cs),
(108,126,o),
(123,135,o),
(158,150,c),
(181,141,o),
(206,137,o),
(231,137,cs),
(342,137,o),
(405,218,o),
(405,301,cs),
(405,349,o),
(381,393,o),
(345,422,c),
(370,461,o),
(399,477,o),
(431,486,cs),
(450,493,o),
(464,501,o),
(464,512,cs),
(464,523,o),
(455,530,o),
(442,530,cs),
(401,530,o),
(346,486,o),
(318,441,c),
(295,454,o),
(271,460,o),
(247,460,cs),
(134,460,o),
(65,387,o),
(65,294,cs),
(65,243,o),
(85,193,o),
(128,165,c),
(87,146,o),
(66,128,o),
(66,89,cs),
(66,37,o),
(102,16,o),
(154,7,c),
(77,-8,o),
(38,-45,o),
(38,-102,cs),
(38,-202,o),
(149,-250,o),
(280,-250,cs)
);
},
{
closed = 1;
nodes = (
(184,-219,o),
(81,-183,o),
(81,-106,cs),
(81,-31,o),
(182,-1,o),
(297,-1,cs),
(332,-1,o),
(487,-6,o),
(487,-99,cs),
(487,-168,o),
(403,-219,o),
(285,-219,cs)
);
},
{
closed = 1;
nodes = (
(151,167,o),
(108,212,o),
(108,292,cs),
(108,376,o),
(158,430,o),
(239,430,cs),
(318,430,o),
(362,381,o),
(362,301,cs),
(362,217,o),
(311,167,o),
(230,167,cs)
);
},
{
closed = 1;
nodes = (
(252,538,o),
(274,548,o),
(274,584,cs),
(274,607,o),
(259,621,o),
(240,621,cs),
(212,621,o),
(199,594,o),
(199,580,cs),
(199,556,o),
(214,538,o),
(233,538,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
2 1 7 0 16 1 8 7 58 27 2 2 8 52 1 5 3 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 1 10 0 10 1 0 104 0 9 0 10 1 9 10 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 13 1 7 7 0 83 11 1 0 0 23 67 0 3 3 5 83 12 1 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 1 10 0 10 1 0 104 0 9 0 10 1 9 10 91 11 1 0 13 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 83 12 1 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
87 86 67 66 1 0 110 108 104 102 93 91 86 97 87 97 77 75 66 85 67 84 46 44 36 33 25 23 8 6 0 65 1 65 14 15
CALL[ ]	/* CallFunction */";
};
width = 467;
}
);
note = gdotaccent;
unicode = 289;
},
{
glyphname = h;
kernLeft = germandbls;
kernRight = c_h;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(422,-59,o),
(435,-59,o),
(445,-58,cs),
(455,-58,o),
(463,-58,o),
(468,-58,cs),
(477,-58,o),
(490,-58,o),
(506,-57,cs),
(521,-56,o),
(533,-56,o),
(542,-56,cs),
(563,-56,o),
(584,-46,o),
(584,-19,cs),
(584,14,o),
(556,19,o),
(527,19,cs),
(466,19,l),
(466,187,ls),
(466,233,o),
(464,270,o),
(461,299,cs),
(457,328,o),
(453,348,o),
(448,360,cs),
(425,416,o),
(387,430,o),
(326,430,cs),
(256,430,o),
(182,388,o),
(158,332,c),
(158,791,ls),
(158,819,o),
(148,823,o),
(101,823,cs),
(46,823,o),
(7,819,o),
(-16,812,cs),
(-39,804,o),
(-51,795,o),
(-51,784,cs),
(-51,757,o),
(-19,751,o),
(21,751,cs),
(52,751,ls),
(63,751,o),
(66,736,o),
(66,721,cs),
(66,692,o),
(66,658,o),
(66,619,cs),
(66,571,o),
(65,503,o),
(64,398,cs),
(63,329,o),
(63,273,o),
(62,230,cs),
(61,187,o),
(61,156,o),
(61,135,cs),
(61,112,o),
(59,96,o),
(55,87,cs),
(50,78,o),
(43,73,o),
(32,72,cs),
(13,69,o),
(-2,58,o),
(-2,37,cs),
(-2,4,o),
(22,0,o),
(61,0,cs),
(99,0,o),
(95,1,o),
(150,1,cs),
(165,1,o),
(181,1,o),
(197,2,cs),
(212,2,o),
(223,2,o),
(230,2,cs),
(262,2,o),
(278,8,o),
(278,36,cs),
(278,68,o),
(264,77,o),
(228,77,cs),
(156,77,l),
(156,182,ls),
(156,264,o),
(228,343,o),
(307,343,cs),
(331,343,o),
(345,336,o),
(353,329,cs),
(373,312,o),
(377,282,o),
(377,211,cs),
(377,179,o),
(375,81,o),
(373,61,cs),
(370,25,o),
(369,20,o),
(343,10,cs),
(328,5,o),
(321,-8,o),
(321,-28,cs),
(321,-41,o),
(328,-50,o),
(341,-53,cs),
(354,-57,o),
(376,-59,o),
(407,-59,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
31 1 7 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 4 0 5 4 5 87 0 1 1 2 83 0 2 2 12 67 0 6 6 3 83 0 3 3 15 67 0 7 7 0 83 8 1 0 0 13 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 3 0 6 7 3 6 91 0 4 0 5 4 5 87 0 1 1 2 83 0 2 2 12 67 0 7 7 0 83 8 1 0 0 13 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 0 6 7 3 6 91 0 4 0 5 4 5 87 0 1 1 2 83 0 2 2 14 67 0 7 7 0 83 8 1 0 0 13 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
1 0 87 85 80 78 57 49 45 43 37 35 28 26 22 19 0 99 1 91 9 15
CALL[ ]	/* CallFunction */";
};
width = 566;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(355,-60,o),
(416,-58,o),
(532,-58,cs),
(552,-58,o),
(569,-53,o),
(569,-33,cs),
(569,-5,o),
(537,0,o),
(513,0,cs),
(459,0,l),
(459,233,l),
(459,233,l),
(459,389,o),
(396,428,o),
(318,428,cs),
(251,428,o),
(182,393,o),
(153,330,c),
(153,789,l),
(150,816,o),
(146,821,o),
(111,821,cs),
(6,821,o),
(-48,812,o),
(-48,787,cs),
(-48,771,o),
(-8,770,o),
(17,770,cs),
(64,770,ls),
(75,770,o),
(81,759,o),
(81,737,cs),
(81,692,o),
(80,599,o),
(79,435,cs),
(77,237,o),
(76,129,o),
(76,111,cs),
(76,87,o),
(71,57,o),
(48,57,cs),
(32,57,ls),
(16,57,o),
(-5,51,o),
(-5,27,cs),
(-5,2,o),
(18,0,o),
(39,0,cs),
(41,0,o),
(47,0,o),
(57,0,cs),
(67,0,o),
(79,0,o),
(92,0,cs),
(105,0,o),
(120,0,o),
(135,1,cs),
(150,1,o),
(165,1,o),
(178,1,cs),
(191,1,o),
(203,1,o),
(212,1,cs),
(221,1,o),
(226,1,o),
(228,1,cs),
(255,1,o),
(267,5,o),
(267,28,cs),
(267,55,o),
(251,60,o),
(228,60,cs),
(148,60,l),
(148,186,ls),
(148,217,o),
(156,249,o),
(173,280,cs),
(200,329,o),
(243,368,o),
(299,368,cs),
(387,368,o),
(389,287,o),
(389,163,cs),
(389,176,o),
(389,103,o),
(386,36,cs),
(383,4,o),
(376,1,o),
(343,-3,c),
(331,-6,o),
(315,-13,o),
(315,-32,cs),
(315,-55,o),
(331,-60,o),
(348,-60,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
90 1 6 7 91 1 3 2 23 1 4 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 0 0 1 0 1 87 0 6 6 7 83 0 7 7 12 67 0 2 2 8 83 0 8 8 15 67 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 8 0 2 3 8 2 91 0 0 0 1 0 1 87 0 6 6 7 83 0 7 7 12 67 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 8 0 2 3 8 2 91 0 0 0 1 0 1 87 0 6 6 7 83 0 7 7 14 67 5 1 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
95 93 88 86 79 75 61 58 54 45 41 39 34 32 118 32 9 17
CALL[ ]	/* CallFunction */";
};
width = 551;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(346,-61,o),
(360,-60,o),
(377,-59,cs),
(394,-58,o),
(409,-58,o),
(424,-58,cs),
(438,-58,o),
(455,-58,o),
(474,-59,cs),
(493,-60,o),
(507,-61,o),
(518,-61,cs),
(537,-61,o),
(547,-57,o),
(547,-50,cs),
(547,-37,o),
(520,-32,o),
(493,-32,cs),
(449,-32,l),
(449,176,ls),
(449,228,o),
(449,258,o),
(445,293,cs),
(440,340,o),
(420,428,o),
(309,428,cs),
(237,428,o),
(178,391,o),
(143,327,c),
(143,745,ls),
(143,800,o),
(140,818,o),
(101,818,cs),
(59,818,o),
(-30,812,o),
(-30,795,cs),
(-30,786,o),
(-8,785,o),
(11,785,cs),
(81,785,ls),
(96,785,o),
(103,774,o),
(103,753,cs),
(103,625,o),
(104,519,o),
(104,436,cs),
(104,310,o),
(99,110,o),
(97,72,cs),
(96,41,o),
(90,35,o),
(71,32,cs),
(46,29,o),
(26,27,o),
(12,24,cs),
(-2,21,o),
(-9,17,o),
(-9,10,cs),
(-9,5,o),
(-6,3,o),
(1,2,cs),
(8,1,o),
(16,0,o),
(25,0,cs),
(40,0,o),
(56,1,o),
(71,2,cs),
(86,3,o),
(101,3,o),
(116,3,cs),
(131,3,o),
(150,3,o),
(171,2,cs),
(192,1,o),
(213,0,o),
(232,0,cs),
(243,0,o),
(252,6,o),
(252,14,cs),
(252,26,o),
(231,32,o),
(210,32,cs),
(137,32,l),
(137,193,ls),
(137,301,o),
(198,399,o),
(299,399,cs),
(385,399,o),
(397,332,o),
(403,288,cs),
(409,235,o),
(409,126,o),
(409,120,cs),
(409,110,o),
(409,38,o),
(406,0,cs),
(403,-21,o),
(398,-28,o),
(371,-31,cs),
(345,-33,o),
(306,-37,o),
(306,-50,cs),
(306,-57,o),
(316,-61,o),
(337,-61,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
94 1 3 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 0 1 0 1 87 0 5 5 6 83 0 6 6 14 67 0 2 2 7 83 0 7 7 15 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 7 0 2 3 7 2 91 0 0 0 1 0 1 87 0 5 5 6 83 0 6 6 14 67 0 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
98 96 91 88 83 80 61 53 49 47 42 40 131 36 8 17
CALL[ ]	/* CallFunction */";
};
width = 529;
}
);
note = h;
unicode = 104;
},
{
glyphname = hbar;
kernLeft = germandbls;
kernRight = c_h;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(422,-59,o),
(435,-59,o),
(445,-58,cs),
(455,-58,o),
(463,-58,o),
(468,-58,cs),
(477,-58,o),
(490,-58,o),
(506,-57,cs),
(521,-56,o),
(533,-56,o),
(542,-56,cs),
(563,-56,o),
(584,-46,o),
(584,-19,cs),
(584,14,o),
(556,19,o),
(527,19,cs),
(466,19,l),
(466,187,ls),
(466,233,o),
(464,270,o),
(461,299,cs),
(457,328,o),
(453,348,o),
(448,360,cs),
(425,416,o),
(387,430,o),
(326,430,cs),
(256,430,o),
(182,388,o),
(158,332,c),
(158,522,l),
(179,522,o),
(200,522,o),
(219,523,cs),
(238,523,o),
(253,523,o),
(265,523,cs),
(294,523,o),
(301,550,o),
(301,565,cs),
(301,584,o),
(288,604,o),
(273,604,cs),
(258,604,o),
(241,604,o),
(222,603,cs),
(203,602,o),
(182,601,o),
(158,601,c),
(158,791,ls),
(158,819,o),
(148,823,o),
(101,823,cs),
(46,823,o),
(7,819,o),
(-16,812,cs),
(-39,804,o),
(-51,795,o),
(-51,784,cs),
(-51,757,o),
(-19,751,o),
(21,751,cs),
(52,751,ls),
(63,751,o),
(66,736,o),
(66,721,cs),
(66,602,l),
(57,603,o),
(48,603,o),
(41,603,cs),
(33,603,o),
(27,603,o),
(24,603,cs),
(1,603,o),
(-9,579,o),
(-9,562,cs),
(-9,543,o),
(5,522,o),
(24,522,cs),
(65,522,l),
(65,505,o),
(65,486,o),
(65,466,cs),
(64,446,o),
(64,423,o),
(64,398,cs),
(63,329,o),
(63,273,o),
(62,230,cs),
(61,187,o),
(61,156,o),
(61,135,cs),
(61,112,o),
(59,96,o),
(55,87,cs),
(50,78,o),
(43,73,o),
(32,72,cs),
(13,69,o),
(-2,58,o),
(-2,37,cs),
(-2,4,o),
(22,0,o),
(61,0,cs),
(99,0,o),
(95,1,o),
(150,1,cs),
(165,1,o),
(181,1,o),
(197,2,cs),
(212,2,o),
(223,2,o),
(230,2,cs),
(262,2,o),
(278,8,o),
(278,36,cs),
(278,68,o),
(264,77,o),
(228,77,cs),
(156,77,l),
(156,182,ls),
(156,264,o),
(228,343,o),
(307,343,cs),
(331,343,o),
(345,336,o),
(353,329,cs),
(373,312,o),
(377,282,o),
(377,211,cs),
(377,179,o),
(375,81,o),
(373,61,cs),
(370,25,o),
(369,20,o),
(343,10,cs),
(328,5,o),
(321,-8,o),
(321,-28,cs),
(321,-41,o),
(328,-50,o),
(341,-53,cs),
(354,-57,o),
(376,-59,o),
(407,-59,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
25 1 1 2 55 1 11 10 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
5 1 2 6 1 1 7 2 1 91 0 8 0 9 8 9 87 0 3 3 4 83 0 4 4 12 67 0 10 10 7 83 0 7 7 15 67 0 11 11 0 83 12 1 0 0 13 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
5 1 2 6 1 1 7 2 1 91 0 7 0 10 11 7 10 91 0 8 0 9 8 9 87 0 3 3 4 83 0 4 4 12 67 0 11 11 0 83 12 1 0 0 13 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
5 1 2 6 1 1 7 2 1 91 0 7 0 10 11 7 10 91 0 8 0 9 8 9 87 0 3 3 4 83 0 4 4 14 67 0 11 11 0 83 12 1 0 0 13 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 111 109 104 102 81 73 69 67 61 59 54 50 44 40 37 35 31 28 24 21 17 15 0 123 1 115 13 15
CALL[ ]	/* CallFunction */";
};
width = 566;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(355,-60,o),
(416,-58,o),
(532,-58,cs),
(552,-58,o),
(569,-53,o),
(569,-33,cs),
(569,-5,o),
(537,0,o),
(513,0,cs),
(459,0,l),
(459,233,l),
(459,233,l),
(459,389,o),
(396,428,o),
(318,428,cs),
(251,428,o),
(182,393,o),
(153,330,c),
(153,789,l),
(150,816,o),
(146,821,o),
(111,821,cs),
(6,821,o),
(-48,812,o),
(-48,787,cs),
(-48,771,o),
(-8,770,o),
(17,770,cs),
(64,770,ls),
(75,770,o),
(81,759,o),
(81,737,cs),
(81,692,o),
(80,599,o),
(79,435,cs),
(77,237,o),
(76,129,o),
(76,111,cs),
(76,87,o),
(71,57,o),
(48,57,cs),
(32,57,ls),
(16,57,o),
(-5,51,o),
(-5,27,cs),
(-5,2,o),
(18,0,o),
(39,0,cs),
(41,0,o),
(47,0,o),
(57,0,cs),
(67,0,o),
(79,0,o),
(92,0,cs),
(105,0,o),
(120,0,o),
(135,1,cs),
(150,1,o),
(165,1,o),
(178,1,cs),
(191,1,o),
(203,1,o),
(212,1,cs),
(221,1,o),
(226,1,o),
(228,1,cs),
(255,1,o),
(267,5,o),
(267,28,cs),
(267,55,o),
(251,60,o),
(228,60,cs),
(148,60,l),
(148,186,ls),
(148,217,o),
(156,249,o),
(173,280,cs),
(200,329,o),
(243,368,o),
(299,368,cs),
(387,368,o),
(389,287,o),
(389,163,cs),
(389,176,o),
(389,103,o),
(386,36,cs),
(383,4,o),
(376,1,o),
(343,-3,c),
(331,-6,o),
(315,-13,o),
(315,-32,cs),
(315,-55,o),
(331,-60,o),
(348,-60,cs)
);
},
{
closed = 1;
nodes = (
(87,531,o),
(184,532,o),
(258,532,cs),
(281,532,o),
(287,554,o),
(287,565,cs),
(287,580,o),
(277,595,o),
(266,595,cs),
(250,595,o),
(232,595,o),
(211,594,cs),
(190,593,o),
(166,592,o),
(138,592,cs),
(96,592,o),
(47,594,o),
(17,594,cs),
(-2,594,o),
(-9,575,o),
(-9,562,cs),
(-9,547,o),
(2,531,o),
(17,531,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
115 1 8 9 116 1 5 4 48 1 6 5 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
11 1 0 0 1 10 0 1 91 0 2 0 3 2 3 87 0 8 8 9 83 0 9 9 12 67 0 4 4 10 83 0 10 10 15 67 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
11 1 0 0 1 10 0 1 91 0 10 0 4 5 10 4 91 0 2 0 3 2 3 87 0 8 8 9 83 0 9 9 12 67 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
11 1 0 0 1 10 0 1 91 0 10 0 4 5 10 4 91 0 2 0 3 2 3 87 0 8 8 9 83 0 9 9 14 67 7 1 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 120 118 113 111 104 100 86 83 79 70 66 64 59 57 40 33 27 25 12 5 0 24 1 16 12 15
CALL[ ]	/* CallFunction */";
};
width = 551;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(346,-61,o),
(360,-60,o),
(377,-59,cs),
(394,-58,o),
(409,-58,o),
(424,-58,cs),
(438,-58,o),
(455,-58,o),
(474,-59,cs),
(493,-60,o),
(507,-61,o),
(518,-61,cs),
(537,-61,o),
(547,-57,o),
(547,-50,cs),
(547,-37,o),
(520,-32,o),
(493,-32,cs),
(449,-32,l),
(449,176,ls),
(449,228,o),
(449,258,o),
(445,293,cs),
(440,340,o),
(420,428,o),
(309,428,cs),
(237,428,o),
(178,391,o),
(143,327,c),
(143,546,l),
(164,546,o),
(184,546,o),
(203,547,cs),
(222,547,o),
(237,547,o),
(248,547,cs),
(263,547,o),
(267,558,o),
(267,565,cs),
(267,572,o),
(261,580,o),
(256,580,cs),
(241,580,o),
(225,580,o),
(206,579,cs),
(187,578,o),
(166,577,o),
(143,577,c),
(143,745,ls),
(143,800,o),
(140,818,o),
(101,818,cs),
(59,818,o),
(-30,812,o),
(-30,795,cs),
(-30,786,o),
(-8,785,o),
(11,785,cs),
(81,785,ls),
(96,785,o),
(103,774,o),
(103,753,cs),
(103,577,l),
(67,577,o),
(30,579,o),
(7,579,cs),
(-4,579,o),
(-9,569,o),
(-9,562,cs),
(-9,555,o),
(-2,546,o),
(7,546,cs),
(103,546,l),
(103,524,o),
(103,504,o),
(104,485,cs),
(104,466,o),
(104,449,o),
(104,436,cs),
(104,310,o),
(99,110,o),
(97,72,cs),
(96,41,o),
(90,35,o),
(71,32,cs),
(46,29,o),
(26,27,o),
(12,24,cs),
(-2,21,o),
(-9,17,o),
(-9,10,cs),
(-9,5,o),
(-6,3,o),
(1,2,cs),
(8,1,o),
(16,0,o),
(25,0,cs),
(40,0,o),
(56,1,o),
(71,2,cs),
(86,3,o),
(101,3,o),
(116,3,cs),
(131,3,o),
(150,3,o),
(171,2,cs),
(192,1,o),
(213,0,o),
(232,0,cs),
(243,0,o),
(252,6,o),
(252,14,cs),
(252,26,o),
(231,32,o),
(210,32,cs),
(137,32,l),
(137,193,ls),
(137,301,o),
(198,399,o),
(299,399,cs),
(385,399,o),
(397,332,o),
(403,288,cs),
(409,235,o),
(409,126,o),
(409,120,cs),
(409,110,o),
(409,38,o),
(406,0,cs),
(403,-21,o),
(398,-28,o),
(371,-31,cs),
(345,-33,o),
(306,-37,o),
(306,-50,cs),
(306,-57,o),
(316,-61,o),
(337,-61,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
118 1 3 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
9 1 6 10 1 5 11 6 5 91 0 0 0 1 0 1 87 0 7 7 8 83 0 8 8 14 67 0 2 2 11 83 0 11 11 15 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
9 1 6 10 1 5 11 6 5 91 0 11 0 2 3 11 2 91 0 0 0 1 0 1 87 0 7 7 8 83 0 8 8 14 67 0 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
122 120 117 113 109 105 102 99 94 91 89 83 79 77 61 53 49 47 42 40 131 36 12 17
CALL[ ]	/* CallFunction */";
};
width = 529;
}
);
note = hbar;
unicode = 295;
},
{
glyphname = hcircumflex;
kernLeft = germandbls;
kernRight = c_h;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(422,-59,o),
(435,-59,o),
(445,-58,cs),
(455,-58,o),
(463,-58,o),
(468,-58,cs),
(477,-58,o),
(490,-58,o),
(506,-57,cs),
(521,-56,o),
(533,-56,o),
(542,-56,cs),
(563,-56,o),
(584,-46,o),
(584,-19,cs),
(584,14,o),
(556,19,o),
(527,19,cs),
(466,19,l),
(466,187,ls),
(466,233,o),
(464,270,o),
(461,299,cs),
(457,328,o),
(453,348,o),
(448,360,cs),
(425,416,o),
(387,430,o),
(326,430,cs),
(256,430,o),
(182,388,o),
(158,332,c),
(158,791,ls),
(158,819,o),
(148,823,o),
(101,823,cs),
(46,823,o),
(7,819,o),
(-16,812,cs),
(-39,804,o),
(-51,795,o),
(-51,784,cs),
(-51,757,o),
(-19,751,o),
(21,751,cs),
(52,751,ls),
(63,751,o),
(66,736,o),
(66,721,cs),
(66,692,o),
(66,658,o),
(66,619,cs),
(66,571,o),
(65,503,o),
(64,398,cs),
(63,329,o),
(63,273,o),
(62,230,cs),
(61,187,o),
(61,156,o),
(61,135,cs),
(61,112,o),
(59,96,o),
(55,87,cs),
(50,78,o),
(43,73,o),
(32,72,cs),
(13,69,o),
(-2,58,o),
(-2,37,cs),
(-2,4,o),
(22,0,o),
(61,0,cs),
(99,0,o),
(95,1,o),
(150,1,cs),
(165,1,o),
(181,1,o),
(197,2,cs),
(212,2,o),
(223,2,o),
(230,2,cs),
(262,2,o),
(278,8,o),
(278,36,cs),
(278,68,o),
(264,77,o),
(228,77,cs),
(156,77,l),
(156,182,ls),
(156,264,o),
(228,343,o),
(307,343,cs),
(331,343,o),
(345,336,o),
(353,329,cs),
(373,312,o),
(377,282,o),
(377,211,cs),
(377,179,o),
(375,81,o),
(373,61,cs),
(370,25,o),
(369,20,o),
(343,10,cs),
(328,5,o),
(321,-8,o),
(321,-28,cs),
(321,-41,o),
(328,-50,o),
(341,-53,cs),
(354,-57,o),
(376,-59,o),
(407,-59,cs)
);
},
{
closed = 1;
nodes = (
(-15,817,o),
(43,853,o),
(92,879,c),
(164,841,o),
(201,817,o),
(212,817,cs),
(221,817,o),
(225,827,o),
(225,838,cs),
(225,879,o),
(116,971,o),
(92,971,cs),
(81,971,o),
(46,946,o),
(19,921,cs),
(-12,892,o),
(-40,856,o),
(-40,831,cs),
(-40,824,o),
(-35,817,o),
(-27,817,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
5 1 5 2 57 1 10 9 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 2 5 2 106 1 11 2 0 5 4 5 0 4 104 0 7 0 8 7 8 87 0 4 4 5 83 0 5 5 12 67 0 9 9 6 83 0 6 6 15 67 0 10 10 3 84 12 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 5 2 106 1 11 2 0 5 4 5 0 4 104 0 6 0 9 10 6 9 91 0 7 0 8 7 8 87 0 4 4 5 83 0 5 5 12 67 0 10 10 3 84 12 1 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 2 5 2 106 1 11 2 0 5 4 5 0 4 104 0 6 0 9 10 6 9 91 0 7 0 8 7 8 87 0 4 4 5 83 0 5 5 14 67 0 10 10 3 84 12 1 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
27 26 1 0 113 111 106 104 83 75 71 69 63 61 54 52 48 45 26 125 27 117 19 17 11 9 0 25 1 25 13 15
CALL[ ]	/* CallFunction */";
};
width = 566;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(355,-60,o),
(416,-58,o),
(532,-58,cs),
(552,-58,o),
(569,-53,o),
(569,-33,cs),
(569,-5,o),
(537,0,o),
(513,0,cs),
(459,0,l),
(459,233,l),
(459,233,l),
(459,389,o),
(396,428,o),
(318,428,cs),
(251,428,o),
(182,393,o),
(153,330,c),
(153,789,l),
(150,816,o),
(146,821,o),
(111,821,cs),
(6,821,o),
(-48,812,o),
(-48,787,cs),
(-48,771,o),
(-8,770,o),
(17,770,cs),
(64,770,ls),
(75,770,o),
(81,759,o),
(81,737,cs),
(81,692,o),
(80,599,o),
(79,435,cs),
(77,237,o),
(76,129,o),
(76,111,cs),
(76,87,o),
(71,57,o),
(48,57,cs),
(32,57,ls),
(16,57,o),
(-5,51,o),
(-5,27,cs),
(-5,2,o),
(18,0,o),
(39,0,cs),
(41,0,o),
(47,0,o),
(57,0,cs),
(67,0,o),
(79,0,o),
(92,0,cs),
(105,0,o),
(120,0,o),
(135,1,cs),
(150,1,o),
(165,1,o),
(178,1,cs),
(191,1,o),
(203,1,o),
(212,1,cs),
(221,1,o),
(226,1,o),
(228,1,cs),
(255,1,o),
(267,5,o),
(267,28,cs),
(267,55,o),
(251,60,o),
(228,60,cs),
(148,60,l),
(148,186,ls),
(148,217,o),
(156,249,o),
(173,280,cs),
(200,329,o),
(243,368,o),
(299,368,cs),
(387,368,o),
(389,287,o),
(389,163,cs),
(389,176,o),
(389,103,o),
(386,36,cs),
(383,4,o),
(376,1,o),
(343,-3,c),
(331,-6,o),
(315,-13,o),
(315,-32,cs),
(315,-55,o),
(331,-60,o),
(348,-60,cs)
);
},
{
closed = 1;
nodes = (
(-19,827,o),
(12,855,o),
(85,898,c),
(98,890,o),
(192,827,o),
(205,827,cs),
(213,827,o),
(216,835,o),
(216,844,cs),
(216,879,o),
(110,972,o),
(85,972,cs),
(63,972,o),
(-45,881,o),
(-45,840,cs),
(-45,831,o),
(-41,827,o),
(-34,827,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
106 1 9 11 91 1 6 7 92 1 3 2 24 1 4 3 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 11 9 11 106 10 12 2 9 7 9 106 0 0 0 1 0 1 87 0 6 6 7 83 0 7 7 12 67 0 2 2 8 83 0 8 8 15 67 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 11 9 11 106 10 12 2 9 7 9 106 0 8 0 2 3 8 2 91 0 0 0 1 0 1 87 0 6 6 7 83 0 7 7 12 67 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 11 9 11 106 10 12 2 9 7 9 106 0 8 0 2 3 8 2 91 0 0 0 1 0 1 87 0 6 6 7 83 0 7 7 14 67 5 1 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
102 101 119 117 112 110 101 125 102 125 96 94 89 87 80 76 62 59 55 46 42 40 35 33 118 33 13 28
CALL[ ]	/* CallFunction */";
};
width = 551;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(346,-61,o),
(360,-60,o),
(377,-59,cs),
(394,-58,o),
(409,-58,o),
(424,-58,cs),
(438,-58,o),
(455,-58,o),
(474,-59,cs),
(493,-60,o),
(507,-61,o),
(518,-61,cs),
(537,-61,o),
(547,-57,o),
(547,-50,cs),
(547,-37,o),
(520,-32,o),
(493,-32,cs),
(449,-32,l),
(449,176,ls),
(449,228,o),
(449,258,o),
(445,293,cs),
(440,340,o),
(420,428,o),
(309,428,cs),
(237,428,o),
(178,391,o),
(143,327,c),
(143,726,ls),
(143,781,o),
(140,799,o),
(101,799,cs),
(59,799,o),
(-30,793,o),
(-30,776,cs),
(-30,767,o),
(-8,766,o),
(11,766,cs),
(81,766,ls),
(96,766,o),
(103,755,o),
(103,734,cs),
(103,602,o),
(104,513,o),
(104,436,cs),
(104,310,o),
(99,110,o),
(97,72,cs),
(96,41,o),
(90,35,o),
(71,32,cs),
(46,29,o),
(26,27,o),
(12,24,cs),
(-2,21,o),
(-9,17,o),
(-9,10,cs),
(-9,5,o),
(-6,3,o),
(1,2,cs),
(8,1,o),
(16,0,o),
(25,0,cs),
(40,0,o),
(56,1,o),
(71,2,cs),
(86,3,o),
(101,3,o),
(116,3,cs),
(131,3,o),
(150,3,o),
(171,2,cs),
(192,1,o),
(213,0,o),
(232,0,cs),
(243,0,o),
(252,6,o),
(252,14,cs),
(252,26,o),
(231,32,o),
(210,32,cs),
(137,32,l),
(137,193,ls),
(137,301,o),
(198,399,o),
(299,399,cs),
(385,399,o),
(397,332,o),
(403,288,cs),
(409,235,o),
(409,126,o),
(409,120,cs),
(409,110,o),
(409,38,o),
(406,0,cs),
(403,-21,o),
(398,-28,o),
(371,-31,cs),
(345,-33,o),
(306,-37,o),
(306,-50,cs),
(306,-57,o),
(316,-61,o),
(337,-61,cs)
);
},
{
closed = 1;
nodes = (
(-32,841,o),
(20,890,o),
(73,927,c),
(149,873,o),
(178,841,o),
(193,841,cs),
(198,841,o),
(201,845,o),
(201,852,cs),
(201,877,o),
(98,971,o),
(73,971,cs),
(50,971,o),
(-54,877,o),
(-54,852,cs),
(-54,845,o),
(-51,841,o),
(-46,841,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
107 1 8 10 94 1 3 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 10 8 10 106 9 11 2 8 6 8 106 0 0 0 1 0 1 87 0 5 5 6 83 0 6 6 14 67 0 2 2 7 83 0 7 7 15 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 10 8 10 106 9 11 2 8 6 8 106 0 7 0 2 3 7 2 91 0 0 0 1 0 1 87 0 5 5 6 83 0 6 6 14 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 10 8 10 106 9 11 2 8 6 8 106 0 6 0 5 7 6 5 92 0 7 0 2 3 7 2 91 0 0 0 1 0 1 87 0 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
103 102 120 118 113 111 102 125 103 125 98 96 91 88 83 80 61 53 49 47 42 40 131 36 12 17
CALL[ ]	/* CallFunction */";
};
width = 529;
}
);
note = hcircumflex;
unicode = 293;
},
{
glyphname = i;
kernLeft = dotlessi;
kernRight = dotlessi;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(282,0,ls),
(299,0,o),
(312,16,o),
(312,37,cs),
(312,68,o),
(293,76,o),
(264,76,cs),
(211,76,l),
(211,401,l),
(211,401,l),
(211,422,o),
(204,436,o),
(184,436,cs),
(161,436,o),
(121,435,o),
(82,432,cs),
(52,430,o),
(31,427,o),
(20,422,cs),
(8,417,o),
(2,408,o),
(2,395,cs),
(2,376,o),
(10,362,o),
(33,362,cs),
(38,362,o),
(61,364,o),
(101,364,cs),
(116,364,o),
(119,350,o),
(120,331,cs),
(123,287,o),
(124,258,o),
(124,213,cs),
(124,196,o),
(126,157,o),
(120,95,cs),
(119,80,o),
(101,77,o),
(80,74,cs),
(45,71,o),
(24,61,o),
(24,36,cs),
(24,1,o),
(64,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(178,509,o),
(221,527,o),
(221,584,cs),
(221,625,o),
(193,650,o),
(160,650,cs),
(112,650,o),
(92,604,o),
(92,580,cs),
(92,540,o),
(118,509,o),
(153,509,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
27 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 0 5 3 4 5 91 0 2 2 3 83 0 3 3 15 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 4 0 5 3 4 5 91 0 3 0 2 0 3 2 91 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
62 60 54 52 45 40 36 29 52 32 6 17
CALL[ ]	/* CallFunction */";
};
width = 306;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(272,0,ls),
(288,0,o),
(302,11,o),
(302,28,cs),
(302,55,o),
(283,58,o),
(254,58,cs),
(197,58,l),
(197,401,l),
(197,401,l),
(197,422,o),
(195,436,o),
(179,436,cs),
(146,436,o),
(126,435,o),
(75,431,cs),
(29,426,o),
(2,429,o),
(2,397,cs),
(2,389,o),
(19,381,o),
(30,381,cs),
(47,381,o),
(76,386,o),
(108,386,cs),
(119,386,o),
(122,375,o),
(123,359,cs),
(126,308,o),
(127,264,o),
(127,213,cs),
(127,174,o),
(127,120,o),
(123,77,cs),
(122,70,o),
(118,65,o),
(113,63,cs),
(108,60,o),
(98,58,o),
(83,56,cs),
(48,51,o),
(24,51,o),
(24,27,cs),
(24,-2,o),
(73,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(170,520,o),
(203,536,o),
(203,584,cs),
(203,619,o),
(180,639,o),
(153,639,cs),
(113,639,o),
(96,599,o),
(96,580,cs),
(96,545,o),
(118,520,o),
(146,520,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
27 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
27 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 6 0 7 5 6 7 91 4 3 2 2 2 5 83 0 5 5 15 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 6 0 7 5 6 7 91 0 5 4 3 2 2 0 5 2 91 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 4 2 0 2 4 0 104 0 6 0 7 5 6 7 91 0 5 3 1 2 4 5 2 91 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
64 62 58 56 49 44 36 34 33 32 31 29 68 32 8 17
CALL[ ]	/* CallFunction */";
};
width = 292;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(252,0,ls),
(267,0,o),
(282,1,o),
(282,13,cs),
(282,18,o),
(278,22,o),
(269,25,cs),
(260,27,o),
(249,28,o),
(234,28,cs),
(172,28,l),
(172,401,ls),
(172,422,o),
(170,436,o),
(154,436,cs),
(137,436,o),
(94,434,o),
(65,431,cs),
(42,430,o),
(25,428,o),
(16,425,cs),
(7,422,o),
(2,418,o),
(2,412,cs),
(2,401,o),
(19,401,o),
(30,401,cs),
(51,401,o),
(82,406,o),
(113,406,cs),
(124,406,o),
(127,400,o),
(128,389,cs),
(131,329,o),
(132,274,o),
(132,213,cs),
(132,165,o),
(132,98,o),
(128,47,cs),
(127,40,o),
(124,35,o),
(119,32,cs),
(113,29,o),
(103,27,o),
(88,26,cs),
(45,23,o),
(24,19,o),
(24,12,cs),
(24,6,o),
(32,3,o),
(47,2,cs),
(62,1,o),
(77,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(155,538,o),
(177,548,o),
(177,584,cs),
(177,607,o),
(162,621,o),
(143,621,cs),
(115,621,o),
(102,594,o),
(102,580,cs),
(102,556,o),
(117,538,o),
(136,538,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
23 1 0 3 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
23 1 0 5 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 8 0 9 6 8 9 91 5 4 2 3 3 6 83 7 1 6 6 15 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 8 0 9 6 8 9 91 7 1 6 5 4 2 3 0 6 3 91 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 5 3 0 3 5 96 0 8 0 9 6 8 9 91 7 1 6 4 1 3 5 6 3 91 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
56 54 39 49 20 33 17 43 18 68 33 10 35
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = i;
unicode = 105;
},
{
glyphname = idotless;
kernLeft = dotlessi;
kernRight = dotlessi;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(267,0,ls),
(280,0,o),
(314,4,o),
(314,29,cs),
(314,50,o),
(292,60,o),
(249,60,cs),
(213,60,l),
(213,401,l),
(213,401,l),
(213,422,o),
(211,436,o),
(195,436,cs),
(172,436,o),
(119,435,o),
(80,431,cs),
(33,426,o),
(0,420,o),
(0,391,cs),
(0,370,o),
(36,369,o),
(45,369,cs),
(57,369,o),
(79,374,o),
(103,374,cs),
(114,374,o),
(118,361,o),
(118,357,cs),
(122,300,o),
(122,270,o),
(122,213,cs),
(122,174,o),
(122,120,o),
(118,79,cs),
(117,66,o),
(112,59,o),
(103,58,cs),
(80,56,o),
(61,53,o),
(46,49,cs),
(30,45,o),
(22,38,o),
(22,28,cs),
(22,1,o),
(71,0,o),
(108,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
19 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
19 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
4 3 2 2 5 0 5 2 0 104 0 5 5 15 67 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 5 2 5 106 4 3 2 2 0 2 106 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 5 2 5 106 3 1 2 4 2 106 0 4 0 4 106 0 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
47 44 37 34 33 32 31 29 69 32 6 17
CALL[ ]	/* CallFunction */";
};
width = 303;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(261,0,ls),
(276,0,o),
(301,3,o),
(301,23,cs),
(301,40,o),
(282,48,o),
(243,48,cs),
(196,48,l),
(196,401,l),
(196,401,l),
(196,422,o),
(194,436,o),
(178,436,cs),
(157,436,o),
(113,434,o),
(74,431,cs),
(51,429,o),
(33,426,o),
(20,423,cs),
(7,420,o),
(1,412,o),
(1,399,cs),
(1,383,o),
(25,381,o),
(39,381,cs),
(39,381,o),
(94,386,o),
(107,386,cs),
(118,386,o),
(121,377,o),
(122,369,c),
(125,316,o),
(126,268,o),
(126,213,cs),
(126,170,o),
(126,112,o),
(122,67,cs),
(121,52,o),
(116,49,o),
(97,46,cs),
(75,43,o),
(57,40,o),
(44,37,cs),
(30,34,o),
(23,29,o),
(23,22,cs),
(23,0,o),
(74,0,o),
(102,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
24 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
24 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
4 3 2 2 2 5 83 0 5 5 15 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 5 4 3 2 2 0 5 2 91 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 4 2 0 2 4 0 104 0 5 3 1 2 4 5 2 91 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
46 41 33 31 30 29 28 26 67 32 6 17
CALL[ ]	/* CallFunction */";
};
width = 290;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(252,0,ls),
(267,0,o),
(282,1,o),
(282,13,cs),
(282,18,o),
(278,22,o),
(269,25,cs),
(260,27,o),
(249,28,o),
(234,28,cs),
(172,28,l),
(172,401,ls),
(172,422,o),
(170,436,o),
(154,436,cs),
(137,436,o),
(94,434,o),
(65,431,cs),
(42,430,o),
(25,428,o),
(16,425,cs),
(7,422,o),
(2,418,o),
(2,412,cs),
(2,401,o),
(19,401,o),
(30,401,cs),
(51,401,o),
(82,406,o),
(113,406,cs),
(124,406,o),
(127,400,o),
(128,389,cs),
(131,329,o),
(132,274,o),
(132,213,cs),
(132,165,o),
(132,98,o),
(128,47,cs),
(127,40,o),
(124,35,o),
(119,32,cs),
(113,29,o),
(103,27,o),
(88,26,cs),
(45,23,o),
(24,19,o),
(24,12,cs),
(24,6,o),
(32,3,o),
(47,2,cs),
(62,1,o),
(77,0,o),
(93,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
22 1 0 3 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
22 1 0 5 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 4 2 3 3 6 83 7 1 6 6 15 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
7 1 6 5 4 2 3 0 6 3 91 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 5 3 0 3 5 96 7 1 6 4 1 3 5 6 3 91 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
49 20 33 17 43 18 68 32 8 23
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = dotlessi;
unicode = 305;
},
{
glyphname = iacute;
kernLeft = dotlessi;
kernRight = dotlessi;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(286,0,ls),
(303,0,o),
(316,17,o),
(316,37,cs),
(316,68,o),
(303,76,o),
(268,76,cs),
(215,76,l),
(215,401,l),
(215,401,l),
(215,424,o),
(209,436,o),
(197,436,cs),
(174,436,o),
(125,434,o),
(82,431,cs),
(17,426,o),
(2,417,o),
(2,388,cs),
(2,376,o),
(17,369,o),
(30,369,cs),
(45,369,o),
(74,374,o),
(105,374,cs),
(110,374,o),
(113,372,o),
(115,367,cs),
(117,362,o),
(119,354,o),
(120,341,cs),
(124,297,o),
(124,258,o),
(124,213,cs),
(124,202,o),
(125,151,o),
(120,95,c),
(117,82,o),
(100,77,o),
(80,74,cs),
(37,67,o),
(24,60,o),
(24,36,cs),
(24,1,o),
(64,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(120,502,o),
(155,525,o),
(194,559,cs),
(229,590,o),
(258,624,o),
(258,642,cs),
(258,667,o),
(231,689,o),
(188,690,cs),
(163,690,o),
(132,651,o),
(108,611,cs),
(88,576,o),
(66,529,o),
(66,524,cs),
(66,509,o),
(88,502,o),
(103,502,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 7 6 7 106 0 6 5 6 106 4 3 2 2 2 5 83 0 5 5 15 67 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 7 6 7 106 0 6 5 6 106 0 5 4 3 2 2 0 5 2 91 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 7 6 7 106 0 6 5 6 106 0 4 2 0 2 4 0 104 0 5 3 1 2 4 5 2 91 0 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
67 65 59 57 49 44 36 34 33 32 31 29 52 32 8 17
CALL[ ]	/* CallFunction */";
};
width = 306;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(272,0,ls),
(288,0,o),
(302,11,o),
(302,28,cs),
(302,55,o),
(283,58,o),
(254,58,cs),
(197,58,l),
(197,401,l),
(197,401,l),
(197,422,o),
(195,436,o),
(179,436,cs),
(146,436,o),
(126,435,o),
(75,431,cs),
(29,426,o),
(2,429,o),
(2,397,cs),
(2,389,o),
(19,381,o),
(30,381,cs),
(47,381,o),
(76,386,o),
(108,386,cs),
(119,386,o),
(122,375,o),
(123,359,cs),
(126,308,o),
(127,264,o),
(127,213,cs),
(127,174,o),
(127,120,o),
(123,77,cs),
(122,70,o),
(118,65,o),
(113,63,cs),
(108,60,o),
(98,58,o),
(83,56,cs),
(48,51,o),
(24,51,o),
(24,27,cs),
(24,-2,o),
(73,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(131,505,o),
(236,604,o),
(236,633,cs),
(236,656,o),
(218,671,o),
(187,671,cs),
(169,671,o),
(140,637,o),
(117,601,cs),
(91,561,o),
(76,527,o),
(76,523,cs),
(76,510,o),
(90,505,o),
(101,505,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
27 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
27 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 7 6 7 106 0 6 5 6 106 4 3 2 2 2 5 83 0 5 5 15 67 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 7 6 7 106 0 6 5 6 106 0 5 4 3 2 2 0 5 2 91 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 7 6 7 106 0 6 5 6 106 0 4 2 0 2 4 0 104 0 5 3 1 2 4 5 2 91 0 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
68 66 58 56 49 44 36 34 33 32 31 29 68 32 8 17
CALL[ ]	/* CallFunction */";
};
width = 292;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(252,0,ls),
(267,0,o),
(282,1,o),
(282,13,cs),
(282,18,o),
(278,22,o),
(269,25,cs),
(260,27,o),
(249,28,o),
(234,28,cs),
(172,28,l),
(172,401,ls),
(172,422,o),
(170,436,o),
(154,436,cs),
(137,436,o),
(94,434,o),
(65,431,cs),
(42,430,o),
(25,428,o),
(16,425,cs),
(7,422,o),
(2,418,o),
(2,412,cs),
(2,401,o),
(19,401,o),
(30,401,cs),
(51,401,o),
(82,406,o),
(113,406,cs),
(124,406,o),
(127,400,o),
(128,389,cs),
(131,329,o),
(132,274,o),
(132,213,cs),
(132,165,o),
(132,98,o),
(128,47,cs),
(127,40,o),
(124,35,o),
(119,32,cs),
(113,29,o),
(103,27,o),
(88,26,cs),
(45,23,o),
(24,19,o),
(24,12,cs),
(24,6,o),
(32,3,o),
(47,2,cs),
(62,1,o),
(77,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(118,510,o),
(205,597,o),
(205,618,cs),
(205,637,o),
(197,640,o),
(186,640,cs),
(166,640,o),
(91,546,o),
(91,521,cs),
(91,514,o),
(94,510,o),
(99,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
22 1 0 3 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
22 1 0 5 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 9 8 9 106 0 8 6 8 106 5 4 2 3 3 6 83 7 1 6 6 15 67 2 1 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 9 8 9 106 0 8 6 8 106 7 1 6 5 4 2 3 0 6 3 91 2 1 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 9 8 9 106 0 8 6 8 106 0 5 3 0 3 5 96 7 1 6 4 1 3 5 6 3 91 2 1 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
56 54 39 49 20 33 17 43 18 68 32 10 24
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = iacute;
unicode = 237;
},
{
glyphname = ibreve;
kernLeft = dotlessi;
kernRight = dotlessi;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(286,0,ls),
(303,0,o),
(316,17,o),
(316,37,cs),
(316,74,o),
(297,76,o),
(268,76,cs),
(215,76,l),
(215,401,l),
(215,401,l),
(215,422,o),
(213,436,o),
(197,436,cs),
(189,436,o),
(125,437,o),
(82,431,cs),
(37,426,o),
(2,430,o),
(2,388,cs),
(2,381,o),
(19,369,o),
(30,369,cs),
(45,369,o),
(74,374,o),
(105,374,cs),
(116,374,o),
(119,360,o),
(120,341,cs),
(123,297,o),
(124,258,o),
(124,213,cs),
(124,202,o),
(125,151,o),
(120,95,cs),
(119,86,o),
(114,81,o),
(106,80,cs),
(98,78,o),
(89,76,o),
(80,74,cs),
(48,67,o),
(24,70,o),
(24,36,cs),
(24,1,o),
(64,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(227,510,o),
(296,537,o),
(296,589,cs),
(296,616,o),
(278,619,o),
(258,619,cs),
(241,619,o),
(226,605,o),
(226,590,cs),
(226,585,o),
(222,580,o),
(213,575,cs),
(204,570,o),
(189,567,o),
(170,567,cs),
(140,567,o),
(111,575,o),
(111,590,cs),
(111,613,o),
(98,619,o),
(75,619,cs),
(52,619,o),
(43,606,o),
(43,589,cs),
(43,546,o),
(88,510,o),
(175,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
29 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
29 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
10 1 8 9 8 106 0 9 0 7 5 9 7 91 4 3 2 2 2 5 83 6 1 5 5 15 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
10 1 8 9 8 106 0 9 0 7 5 9 7 91 6 1 5 4 3 2 2 0 5 2 92 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
10 1 8 9 8 106 0 9 0 7 6 9 7 91 0 6 5 2 6 79 0 5 4 3 2 2 0 5 2 92 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
10 1 8 9 8 106 0 4 2 0 2 4 0 104 0 9 0 7 6 9 7 91 0 6 5 2 6 79 0 5 3 1 2 4 5 2 92 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
80 78 74 72 66 64 60 58 51 46 44 43 38 36 35 34 33 31 52 32 11 17
CALL[ ]	/* CallFunction */";
};
width = 306;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(272,0,ls),
(288,0,o),
(302,11,o),
(302,28,cs),
(302,55,o),
(283,58,o),
(254,58,cs),
(197,58,l),
(197,401,l),
(197,401,l),
(197,422,o),
(195,436,o),
(179,436,cs),
(146,436,o),
(126,435,o),
(75,431,cs),
(29,426,o),
(2,429,o),
(2,397,cs),
(2,389,o),
(19,381,o),
(30,381,cs),
(47,381,o),
(76,386,o),
(108,386,cs),
(119,386,o),
(122,375,o),
(123,359,cs),
(126,308,o),
(127,264,o),
(127,213,cs),
(127,174,o),
(127,120,o),
(123,77,cs),
(122,70,o),
(118,65,o),
(113,63,cs),
(108,60,o),
(98,58,o),
(83,56,cs),
(48,51,o),
(24,51,o),
(24,27,cs),
(24,-2,o),
(73,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(216,510,o),
(282,537,o),
(282,589,cs),
(282,616,o),
(265,617,o),
(252,617,cs),
(237,617,o),
(226,605,o),
(226,590,cs),
(226,573,o),
(201,555,o),
(162,555,cs),
(132,555,o),
(97,564,o),
(97,590,cs),
(97,610,o),
(88,617,o),
(69,617,cs),
(52,617,o),
(43,608,o),
(43,589,cs),
(43,548,o),
(89,510,o),
(165,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
27 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
27 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
9 1 7 8 2 7 79 0 8 0 6 5 8 6 91 4 3 2 2 2 5 83 0 5 5 15 67 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
9 1 7 8 2 7 79 0 8 0 6 5 8 6 91 0 5 4 3 2 2 0 5 2 91 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 4 2 0 2 4 0 104 9 1 7 8 2 7 79 0 8 0 6 5 8 6 91 0 5 3 1 2 4 5 2 91 0 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
77 75 71 69 63 61 58 56 49 44 36 34 33 32 31 29 68 32 10 17
CALL[ ]	/* CallFunction */";
};
width = 292;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(252,0,ls),
(267,0,o),
(282,1,o),
(282,13,cs),
(282,18,o),
(278,22,o),
(269,25,cs),
(260,27,o),
(249,28,o),
(234,28,cs),
(172,28,l),
(172,401,ls),
(172,422,o),
(170,436,o),
(154,436,cs),
(137,436,o),
(94,434,o),
(65,431,cs),
(42,430,o),
(25,428,o),
(16,425,cs),
(7,422,o),
(2,418,o),
(2,412,cs),
(2,401,o),
(19,401,o),
(30,401,cs),
(51,401,o),
(82,406,o),
(113,406,cs),
(124,406,o),
(127,400,o),
(128,389,cs),
(131,329,o),
(132,274,o),
(132,213,cs),
(132,165,o),
(132,98,o),
(128,47,cs),
(127,40,o),
(124,35,o),
(119,32,cs),
(113,29,o),
(103,27,o),
(88,26,cs),
(45,23,o),
(24,19,o),
(24,12,cs),
(24,6,o),
(32,3,o),
(47,2,cs),
(62,1,o),
(77,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(204,510,o),
(262,541,o),
(262,589,cs),
(262,610,o),
(254,613,o),
(243,613,cs),
(232,613,o),
(226,605,o),
(226,590,cs),
(226,563,o),
(187,535,o),
(151,535,cs),
(112,535,o),
(77,549,o),
(77,590,cs),
(77,606,o),
(75,613,o),
(60,613,cs),
(49,613,o),
(43,605,o),
(43,589,cs),
(43,548,o),
(93,510,o),
(151,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
22 1 0 3 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
22 1 0 5 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
11 1 9 10 3 9 79 0 10 0 8 6 10 8 91 5 4 2 3 3 6 83 7 1 6 6 15 67 2 1 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
11 1 9 10 3 9 79 0 10 0 8 6 10 8 91 7 1 6 5 4 2 3 0 6 3 91 2 1 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 5 3 0 3 5 96 11 1 9 10 3 9 79 0 10 0 8 6 10 8 91 7 1 6 4 1 3 5 6 3 91 2 1 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
69 67 62 60 56 54 39 49 20 33 17 43 18 68 32 12 24
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = ibreve;
unicode = 301;
},
{
glyphname = icircumflex;
kernLeft = dotlessi;
kernRight = dotlessi;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(286,0,ls),
(303,0,o),
(316,17,o),
(316,37,cs),
(316,74,o),
(297,76,o),
(268,76,cs),
(215,76,l),
(215,401,l),
(215,401,l),
(215,422,o),
(213,436,o),
(197,436,cs),
(189,436,o),
(125,437,o),
(82,431,cs),
(37,426,o),
(2,430,o),
(2,388,cs),
(2,381,o),
(19,369,o),
(30,369,cs),
(45,369,o),
(74,374,o),
(105,374,cs),
(116,374,o),
(119,360,o),
(120,341,cs),
(123,297,o),
(124,258,o),
(124,213,cs),
(124,202,o),
(125,151,o),
(120,95,cs),
(119,86,o),
(114,81,o),
(106,80,cs),
(98,78,o),
(89,76,o),
(80,74,cs),
(48,67,o),
(24,70,o),
(24,36,cs),
(24,1,o),
(64,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(28,510,o),
(86,546,o),
(135,572,c),
(207,534,o),
(244,510,o),
(255,510,cs),
(264,510,o),
(268,520,o),
(268,531,cs),
(268,572,o),
(159,664,o),
(135,664,cs),
(124,664,o),
(89,639,o),
(62,614,cs),
(31,585,o),
(3,549,o),
(3,524,cs),
(3,517,o),
(8,510,o),
(16,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
59 1 7 9 29 1 0 2 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
59 1 7 9 29 1 0 4 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 9 7 9 106 8 10 2 7 5 7 106 4 3 2 2 2 5 83 6 1 5 5 15 67 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 9 7 9 106 8 10 2 7 5 7 106 6 1 5 4 3 2 2 0 5 2 91 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 9 7 9 106 8 10 2 7 6 7 106 0 6 5 2 6 79 0 5 4 3 2 2 0 5 2 91 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 9 7 9 106 8 10 2 7 6 7 106 0 4 2 0 2 4 0 104 0 6 5 2 6 79 0 5 3 1 2 4 5 2 91 0 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
55 54 73 71 65 63 54 79 55 79 51 46 44 43 38 36 35 34 33 31 52 32 11 17
CALL[ ]	/* CallFunction */";
};
width = 306;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(272,0,ls),
(288,0,o),
(302,11,o),
(302,28,cs),
(302,55,o),
(283,58,o),
(254,58,cs),
(197,58,l),
(197,401,l),
(197,401,l),
(197,422,o),
(195,436,o),
(179,436,cs),
(146,436,o),
(126,435,o),
(75,431,cs),
(29,426,o),
(2,429,o),
(2,397,cs),
(2,389,o),
(19,381,o),
(30,381,cs),
(47,381,o),
(76,386,o),
(108,386,cs),
(119,386,o),
(122,375,o),
(123,359,cs),
(126,308,o),
(127,264,o),
(127,213,cs),
(127,174,o),
(127,120,o),
(123,77,cs),
(122,70,o),
(118,65,o),
(113,63,cs),
(108,60,o),
(98,58,o),
(83,56,cs),
(48,51,o),
(24,51,o),
(24,27,cs),
(24,-2,o),
(73,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(24,510,o),
(55,538,o),
(128,581,c),
(141,573,o),
(235,510,o),
(248,510,cs),
(256,510,o),
(259,518,o),
(259,527,cs),
(259,562,o),
(153,655,o),
(128,655,cs),
(106,655,o),
(-2,564,o),
(-2,523,cs),
(-2,514,o),
(2,510,o),
(9,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
57 1 6 8 27 1 0 2 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
57 1 6 8 27 1 0 4 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 8 6 8 106 7 9 2 6 5 6 106 4 3 2 2 2 5 83 0 5 5 15 67 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 8 6 8 106 7 9 2 6 5 6 106 0 5 4 3 2 2 0 5 2 91 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 8 6 8 106 7 9 2 6 5 6 106 0 4 2 0 2 4 0 104 0 5 3 1 2 4 5 2 91 0 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
53 52 70 68 63 61 52 76 53 76 49 44 36 34 33 32 31 29 68 32 10 17
CALL[ ]	/* CallFunction */";
};
width = 292;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(252,0,ls),
(267,0,o),
(282,1,o),
(282,13,cs),
(282,18,o),
(278,22,o),
(269,25,cs),
(260,27,o),
(249,28,o),
(234,28,cs),
(172,28,l),
(172,401,ls),
(172,422,o),
(170,436,o),
(154,436,cs),
(137,436,o),
(94,434,o),
(65,431,cs),
(42,430,o),
(25,428,o),
(16,425,cs),
(7,422,o),
(2,418,o),
(2,412,cs),
(2,401,o),
(19,401,o),
(30,401,cs),
(51,401,o),
(82,406,o),
(113,406,cs),
(124,406,o),
(127,400,o),
(128,389,cs),
(131,329,o),
(132,274,o),
(132,213,cs),
(132,165,o),
(132,98,o),
(128,47,cs),
(127,40,o),
(124,35,o),
(119,32,cs),
(113,29,o),
(103,27,o),
(88,26,cs),
(45,23,o),
(24,19,o),
(24,12,cs),
(24,6,o),
(32,3,o),
(47,2,cs),
(62,1,o),
(77,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(13,510,o),
(65,559,o),
(118,596,c),
(194,542,o),
(223,510,o),
(238,510,cs),
(243,510,o),
(246,514,o),
(246,521,cs),
(246,546,o),
(143,640,o),
(118,640,cs),
(95,640,o),
(-9,546,o),
(-9,521,cs),
(-9,514,o),
(-6,510,o),
(-1,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
48 1 8 10 22 1 0 3 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
48 1 8 10 22 1 0 5 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 10 8 10 106 9 11 2 8 6 8 106 5 4 2 3 3 6 83 7 1 6 6 15 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 10 8 10 106 9 11 2 8 6 8 106 7 1 6 5 4 2 3 0 6 3 92 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 10 8 10 106 9 11 2 8 6 8 106 0 5 3 0 3 5 96 7 1 6 4 1 3 5 6 3 92 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
44 43 61 59 54 52 43 66 44 66 49 20 33 17 43 18 68 32 12 23
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = icircumflex;
unicode = 238;
},
{
glyphname = idieresis;
kernLeft = dotlessi;
kernRight = dotlessi;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(286,0,ls),
(303,0,o),
(316,17,o),
(316,37,cs),
(316,74,o),
(297,76,o),
(268,76,cs),
(215,76,l),
(215,401,l),
(215,401,l),
(215,422,o),
(213,436,o),
(197,436,cs),
(189,436,o),
(125,437,o),
(82,431,cs),
(37,426,o),
(2,430,o),
(2,388,cs),
(2,381,o),
(19,369,o),
(30,369,cs),
(45,369,o),
(74,374,o),
(105,374,cs),
(116,374,o),
(119,360,o),
(120,341,cs),
(123,297,o),
(124,258,o),
(124,213,cs),
(124,202,o),
(125,151,o),
(120,95,cs),
(119,86,o),
(114,81,o),
(106,80,cs),
(98,78,o),
(89,76,o),
(80,74,cs),
(48,67,o),
(24,70,o),
(24,36,cs),
(24,1,o),
(64,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(90,509,o),
(127,524,o),
(127,579,cs),
(127,615,o),
(99,640,o),
(67,640,cs),
(20,640,o),
(1,599,o),
(1,575,cs),
(1,536,o),
(27,509,o),
(60,509,cs)
);
},
{
closed = 1;
nodes = (
(297,486,o),
(334,501,o),
(334,556,cs),
(334,592,o),
(306,617,o),
(274,617,cs),
(227,617,o),
(208,576,o),
(208,552,cs),
(208,513,o),
(234,486,o),
(267,486,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
29 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
29 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 7 0 8 10 7 8 91 0 9 0 10 5 9 10 91 4 3 2 2 2 5 83 6 1 5 5 15 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 7 0 8 10 7 8 91 0 9 0 10 5 9 10 91 6 1 5 4 3 2 2 0 5 2 91 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 7 0 8 10 7 8 91 0 9 0 10 6 9 10 91 0 6 5 2 6 79 0 5 4 3 2 2 0 5 2 91 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 4 2 0 2 4 0 104 0 7 0 8 10 7 8 91 0 9 0 10 6 9 10 91 0 6 5 2 6 79 0 5 3 1 2 4 5 2 91 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
84 82 76 74 68 66 60 58 51 46 44 43 38 36 35 34 33 31 52 32 11 17
CALL[ ]	/* CallFunction */";
};
width = 306;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(272,0,ls),
(288,0,o),
(302,11,o),
(302,28,cs),
(302,55,o),
(283,58,o),
(254,58,cs),
(197,58,l),
(197,401,l),
(197,401,l),
(197,422,o),
(195,436,o),
(179,436,cs),
(146,436,o),
(126,435,o),
(75,431,cs),
(29,426,o),
(2,429,o),
(2,397,cs),
(2,389,o),
(19,381,o),
(30,381,cs),
(47,381,o),
(76,386,o),
(108,386,cs),
(119,386,o),
(122,375,o),
(123,359,cs),
(126,308,o),
(127,264,o),
(127,213,cs),
(127,174,o),
(127,120,o),
(123,77,cs),
(122,70,o),
(118,65,o),
(113,63,cs),
(108,60,o),
(98,58,o),
(83,56,cs),
(48,51,o),
(24,51,o),
(24,27,cs),
(24,-2,o),
(73,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(78,518,o),
(109,531,o),
(109,579,cs),
(109,610,o),
(87,631,o),
(60,631,cs),
(22,631,o),
(4,596,o),
(4,575,cs),
(4,542,o),
(26,518,o),
(53,518,cs)
);
},
{
closed = 1;
nodes = (
(285,495,o),
(316,508,o),
(316,556,cs),
(316,587,o),
(294,608,o),
(267,608,cs),
(229,608,o),
(211,573,o),
(211,552,cs),
(211,519,o),
(233,495,o),
(260,495,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
27 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
27 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 6 0 7 9 6 7 91 0 8 0 9 5 8 9 91 4 3 2 2 2 5 83 0 5 5 15 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 6 0 7 9 6 7 91 0 8 0 9 5 8 9 91 0 5 4 3 2 2 0 5 2 91 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 4 2 0 2 4 0 104 0 6 0 7 9 6 7 91 0 8 0 9 5 8 9 91 0 5 3 1 2 4 5 2 91 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
78 76 72 70 64 62 58 56 49 44 36 34 33 32 31 29 68 32 10 17
CALL[ ]	/* CallFunction */";
};
width = 292;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(252,0,ls),
(267,0,o),
(282,1,o),
(282,13,cs),
(282,18,o),
(278,22,o),
(269,25,cs),
(260,27,o),
(249,28,o),
(234,28,cs),
(172,28,l),
(172,401,ls),
(172,422,o),
(170,436,o),
(154,436,cs),
(137,436,o),
(94,434,o),
(65,431,cs),
(42,430,o),
(25,428,o),
(16,425,cs),
(7,422,o),
(2,418,o),
(2,412,cs),
(2,401,o),
(19,401,o),
(30,401,cs),
(51,401,o),
(82,406,o),
(113,406,cs),
(124,406,o),
(127,400,o),
(128,389,cs),
(131,329,o),
(132,274,o),
(132,213,cs),
(132,165,o),
(132,98,o),
(128,47,cs),
(127,40,o),
(124,35,o),
(119,32,cs),
(113,29,o),
(103,27,o),
(88,26,cs),
(45,23,o),
(24,19,o),
(24,12,cs),
(24,6,o),
(32,3,o),
(47,2,cs),
(62,1,o),
(77,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(62,533,o),
(84,543,o),
(84,579,cs),
(84,602,o),
(69,616,o),
(50,616,cs),
(22,616,o),
(9,589,o),
(9,575,cs),
(9,551,o),
(24,533,o),
(43,533,cs)
);
},
{
closed = 1;
nodes = (
(269,510,o),
(291,520,o),
(291,556,cs),
(291,579,o),
(276,593,o),
(257,593,cs),
(229,593,o),
(216,566,o),
(216,552,cs),
(216,528,o),
(231,510,o),
(250,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
22 1 0 3 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
22 1 0 5 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 8 0 9 11 8 9 91 0 10 0 11 6 10 11 91 5 4 2 3 3 6 83 7 1 6 6 15 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 8 0 9 11 8 9 91 0 10 0 11 6 10 11 91 7 1 6 5 4 2 3 0 6 3 91 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 5 3 0 3 5 96 0 8 0 9 11 8 9 91 0 10 0 11 6 10 11 91 7 1 6 4 1 3 5 6 3 91 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
69 67 63 61 55 53 39 49 20 33 17 43 18 68 32 12 24
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = idieresis;
unicode = 239;
},
{
glyphname = idotaccent;
lastChange = "2024-06-13 14:49:07 +0000";
layers = (
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
ref = idotless;
},
{
pos = (70,0);
ref = dotaccentcomb;
}
);
width = 272;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
ref = idotless;
},
{
pos = (84,0);
ref = dotaccentcomb;
}
);
width = 290;
},
{
layerId = m01;
shapes = (
{
ref = idotless;
},
{
pos = (80,0);
ref = dotaccentcomb;
}
);
width = 303;
}
);
},
{
glyphname = igrave;
kernLeft = dotlessi;
kernRight = dotlessi;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(286,0,ls),
(303,0,o),
(316,17,o),
(316,37,cs),
(316,68,o),
(303,76,o),
(268,76,cs),
(215,76,l),
(215,401,l),
(215,401,l),
(215,424,o),
(209,436,o),
(197,436,cs),
(174,436,o),
(125,434,o),
(82,431,cs),
(17,426,o),
(2,417,o),
(2,388,cs),
(2,376,o),
(17,369,o),
(30,369,cs),
(45,369,o),
(74,374,o),
(105,374,cs),
(110,374,o),
(113,372,o),
(115,367,cs),
(117,362,o),
(119,354,o),
(120,341,cs),
(124,297,o),
(124,258,o),
(124,213,cs),
(124,202,o),
(125,151,o),
(120,95,c),
(117,82,o),
(100,77,o),
(80,74,cs),
(37,67,o),
(24,60,o),
(24,36,cs),
(24,1,o),
(64,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(154,500,o),
(176,507,o),
(176,522,cs),
(176,527,o),
(154,574,o),
(134,609,cs),
(110,649,o),
(79,688,o),
(54,688,cs),
(11,687,o),
(-16,665,o),
(-16,640,cs),
(-16,606,o),
(101,500,o),
(139,500,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 1 0 7 0 1 7 104 0 0 1 4 0 79 6 5 2 4 4 7 83 0 7 7 15 67 0 2 2 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 1 0 7 0 1 7 104 0 0 1 4 0 79 0 7 6 5 2 4 2 7 4 91 0 2 2 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 7 0 1 7 104 0 6 4 2 4 6 96 0 0 1 4 0 79 0 7 5 1 4 6 7 4 91 0 2 2 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
65 60 52 50 49 48 47 45 52 36 38 34 8 19
CALL[ ]	/* CallFunction */";
};
width = 306;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(272,0,ls),
(288,0,o),
(302,11,o),
(302,28,cs),
(302,55,o),
(283,58,o),
(254,58,cs),
(197,58,l),
(197,401,l),
(197,401,l),
(197,422,o),
(195,436,o),
(179,436,cs),
(146,436,o),
(126,435,o),
(75,431,cs),
(29,426,o),
(2,429,o),
(2,397,cs),
(2,389,o),
(19,381,o),
(30,381,cs),
(47,381,o),
(76,386,o),
(108,386,cs),
(119,386,o),
(122,375,o),
(123,359,cs),
(126,308,o),
(127,264,o),
(127,213,cs),
(127,174,o),
(127,120,o),
(123,77,cs),
(122,70,o),
(118,65,o),
(113,63,cs),
(108,60,o),
(98,58,o),
(83,56,cs),
(48,51,o),
(24,51,o),
(24,27,cs),
(24,-2,o),
(73,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(214,504,o),
(228,509,o),
(228,522,cs),
(228,526,o),
(213,560,o),
(187,600,cs),
(164,635,o),
(135,670,o),
(117,670,cs),
(86,670,o),
(68,655,o),
(68,632,cs),
(68,603,o),
(173,504,o),
(203,504,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
27 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
27 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 6 7 6 106 0 7 5 7 106 4 3 2 2 2 5 83 0 5 5 15 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 6 7 6 106 0 7 5 7 106 0 5 4 3 2 2 0 5 2 92 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 6 7 6 106 0 7 5 7 106 0 4 2 0 2 4 0 104 0 5 3 1 2 4 5 2 92 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
66 64 56 54 49 44 36 34 33 32 31 29 68 32 8 17
CALL[ ]	/* CallFunction */";
};
width = 292;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(252,0,ls),
(267,0,o),
(282,1,o),
(282,13,cs),
(282,18,o),
(278,22,o),
(269,25,cs),
(260,27,o),
(249,28,o),
(234,28,cs),
(172,28,l),
(172,401,ls),
(172,422,o),
(170,436,o),
(154,436,cs),
(137,436,o),
(94,434,o),
(65,431,cs),
(42,430,o),
(25,428,o),
(16,425,cs),
(7,422,o),
(2,418,o),
(2,412,cs),
(2,401,o),
(19,401,o),
(30,401,cs),
(51,401,o),
(82,406,o),
(113,406,cs),
(124,406,o),
(127,400,o),
(128,389,cs),
(131,329,o),
(132,274,o),
(132,213,cs),
(132,165,o),
(132,98,o),
(128,47,cs),
(127,40,o),
(124,35,o),
(119,32,cs),
(113,29,o),
(103,27,o),
(88,26,cs),
(45,23,o),
(24,19,o),
(24,12,cs),
(24,6,o),
(32,3,o),
(47,2,cs),
(62,1,o),
(77,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(203,510,o),
(206,514,o),
(206,521,cs),
(206,546,o),
(131,640,o),
(111,640,cs),
(100,640,o),
(92,637,o),
(92,618,cs),
(92,597,o),
(179,510,o),
(198,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
22 1 0 3 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
22 1 0 5 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 8 9 8 106 0 9 6 9 106 5 4 2 3 3 6 83 7 1 6 6 15 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 8 9 8 106 0 9 6 9 106 7 1 6 5 4 2 3 0 6 3 92 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 8 9 8 106 0 9 6 9 106 0 5 3 0 3 5 96 7 1 6 4 1 3 5 6 3 92 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
54 52 37 49 20 33 17 43 18 68 32 10 24
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = igrave;
unicode = 236;
},
{
glyphname = imacron;
kernLeft = dotlessi;
kernRight = dotlessi;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(286,0,ls),
(303,0,o),
(316,17,o),
(316,37,cs),
(316,74,o),
(297,76,o),
(268,76,cs),
(215,76,l),
(215,401,l),
(215,401,l),
(215,422,o),
(213,436,o),
(197,436,cs),
(189,436,o),
(125,437,o),
(82,431,cs),
(37,426,o),
(2,430,o),
(2,388,cs),
(2,381,o),
(19,369,o),
(30,369,cs),
(45,369,o),
(74,374,o),
(105,374,cs),
(116,374,o),
(119,360,o),
(120,341,cs),
(123,297,o),
(124,258,o),
(124,213,cs),
(124,202,o),
(125,151,o),
(120,95,cs),
(119,86,o),
(114,81,o),
(106,80,cs),
(98,78,o),
(89,76,o),
(80,74,cs),
(48,67,o),
(24,70,o),
(24,36,cs),
(24,1,o),
(64,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(104,537,o),
(201,538,o),
(275,538,cs),
(304,538,o),
(311,565,o),
(311,580,cs),
(311,600,o),
(298,617,o),
(283,617,cs),
(267,617,o),
(249,617,o),
(228,616,cs),
(207,615,o),
(183,614,o),
(155,614,cs),
(113,614,o),
(64,616,o),
(34,616,cs),
(11,616,o),
(1,596,o),
(1,577,cs),
(1,558,o),
(15,537,o),
(34,537,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
29 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
29 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
9 1 7 0 8 5 7 8 91 4 3 2 2 2 5 83 6 1 5 5 15 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
9 1 7 0 8 5 7 8 91 6 1 5 4 3 2 2 0 5 2 91 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
9 1 7 0 8 6 7 8 91 0 6 5 2 6 79 0 5 4 3 2 2 0 5 2 91 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 4 2 0 2 4 0 104 9 1 7 0 8 6 7 8 91 0 6 5 2 6 79 0 5 3 1 2 4 5 2 91 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
55 54 68 61 54 80 55 72 51 46 44 43 38 36 35 34 33 31 52 32 10 17
CALL[ ]	/* CallFunction */";
};
width = 306;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(272,0,ls),
(288,0,o),
(302,11,o),
(302,28,cs),
(302,55,o),
(283,58,o),
(254,58,cs),
(197,58,l),
(197,401,l),
(197,401,l),
(197,422,o),
(195,436,o),
(179,436,cs),
(146,436,o),
(126,435,o),
(75,431,cs),
(29,426,o),
(2,429,o),
(2,397,cs),
(2,389,o),
(19,381,o),
(30,381,cs),
(47,381,o),
(76,386,o),
(108,386,cs),
(119,386,o),
(122,375,o),
(123,359,cs),
(126,308,o),
(127,264,o),
(127,213,cs),
(127,174,o),
(127,120,o),
(123,77,cs),
(122,70,o),
(118,65,o),
(113,63,cs),
(108,60,o),
(98,58,o),
(83,56,cs),
(48,51,o),
(24,51,o),
(24,27,cs),
(24,-2,o),
(73,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(96,525,o),
(193,526,o),
(267,526,cs),
(290,526,o),
(296,548,o),
(296,559,cs),
(296,574,o),
(286,587,o),
(275,587,cs),
(259,587,o),
(241,587,o),
(220,586,cs),
(199,585,o),
(175,584,o),
(147,584,cs),
(105,584,o),
(56,586,o),
(26,586,cs),
(7,586,o),
(0,571,o),
(0,556,cs),
(0,541,o),
(11,525,o),
(26,525,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
27 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
27 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
8 1 6 0 7 5 6 7 91 4 3 2 2 2 5 83 0 5 5 15 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
8 1 6 0 7 5 6 7 91 0 5 4 3 2 2 0 5 2 91 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 4 2 0 2 4 0 104 8 1 6 0 7 5 6 7 91 0 5 3 1 2 4 5 2 91 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
53 52 64 57 52 76 53 68 49 44 36 34 33 32 31 29 68 32 9 17
CALL[ ]	/* CallFunction */";
};
width = 292;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(252,0,ls),
(267,0,o),
(282,1,o),
(282,13,cs),
(282,18,o),
(278,22,o),
(269,25,cs),
(260,27,o),
(249,28,o),
(234,28,cs),
(172,28,l),
(172,401,ls),
(172,422,o),
(170,436,o),
(154,436,cs),
(137,436,o),
(94,434,o),
(65,431,cs),
(42,430,o),
(25,428,o),
(16,425,cs),
(7,422,o),
(2,418,o),
(2,412,cs),
(2,401,o),
(19,401,o),
(30,401,cs),
(51,401,o),
(82,406,o),
(113,406,cs),
(124,406,o),
(127,400,o),
(128,389,cs),
(131,329,o),
(132,274,o),
(132,213,cs),
(132,165,o),
(132,98,o),
(128,47,cs),
(127,40,o),
(124,35,o),
(119,32,cs),
(113,29,o),
(103,27,o),
(88,26,cs),
(45,23,o),
(24,19,o),
(24,12,cs),
(24,6,o),
(32,3,o),
(47,2,cs),
(62,1,o),
(77,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(85,510,o),
(182,511,o),
(256,511,cs),
(271,511,o),
(275,522,o),
(275,529,cs),
(275,536,o),
(269,542,o),
(264,542,cs),
(248,542,o),
(230,542,o),
(209,541,cs),
(188,540,o),
(164,539,o),
(136,539,cs),
(94,539,o),
(45,541,o),
(15,541,cs),
(4,541,o),
(-1,533,o),
(-1,526,cs),
(-1,519,o),
(6,510,o),
(15,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
22 1 0 3 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
22 1 0 5 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
10 1 8 0 9 6 8 9 91 5 4 2 3 3 6 83 7 1 6 6 15 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
10 1 8 0 9 6 8 9 91 7 1 6 5 4 2 3 0 6 3 91 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 5 3 0 3 5 0 104 10 1 8 0 9 6 8 9 91 7 1 6 4 1 3 5 6 3 91 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
44 43 55 48 43 67 44 59 49 20 33 17 43 18 68 32 11 23
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = imacron;
unicode = 299;
},
{
glyphname = iogonek;
kernLeft = dotlessi;
kernRight = dotlessi;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(236,-149,o),
(267,-120,o),
(267,-96,cs),
(267,-84,o),
(255,-72,o),
(242,-72,cs),
(222,-72,o),
(223,-96,o),
(182,-96,cs),
(167,-96,o),
(153,-90,o),
(153,-75,cs),
(153,-52,o),
(165,-19,o),
(186,0,c),
(282,0,ls),
(299,0,o),
(312,16,o),
(312,37,cs),
(312,68,o),
(293,76,o),
(264,76,cs),
(211,76,l),
(211,401,ls),
(211,422,o),
(204,436,o),
(184,436,cs),
(161,436,o),
(121,435,o),
(82,432,cs),
(52,430,o),
(31,427,o),
(20,422,cs),
(8,417,o),
(2,408,o),
(2,395,cs),
(2,376,o),
(10,362,o),
(33,362,cs),
(38,362,o),
(61,364,o),
(101,364,cs),
(116,364,o),
(119,350,o),
(120,331,cs),
(123,287,o),
(124,258,o),
(124,213,cs),
(124,196,o),
(126,157,o),
(120,95,cs),
(119,80,o),
(101,77,o),
(80,74,cs),
(45,71,o),
(24,61,o),
(24,36,cs),
(24,1,o),
(64,0,o),
(93,0,cs),
(127,0,l),
(103,-15,o),
(74,-39,o),
(74,-74,cs),
(74,-126,o),
(134,-149,o),
(184,-149,cs)
);
},
{
closed = 1;
nodes = (
(178,509,o),
(221,527,o),
(221,584,cs),
(221,625,o),
(193,650,o),
(160,650,cs),
(112,650,o),
(92,604,o),
(92,580,cs),
(92,540,o),
(118,509,o),
(153,509,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
28 1 4 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 7 1 6 1 7 6 104 0 8 0 9 3 8 9 91 0 6 10 1 0 6 0 87 0 2 2 3 83 0 3 3 15 67 0 4 4 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 7 1 6 1 7 6 104 0 8 0 9 3 8 9 91 0 3 0 2 4 3 2 91 0 6 10 1 0 6 0 87 0 4 4 1 83 5 1 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 90 88 82 80 69 67 64 62 57 55 51 49 46 41 37 30 10 8 0 75 1 75 11 15
CALL[ ]	/* CallFunction */";
};
width = 308;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(272,0,ls),
(288,0,o),
(302,11,o),
(302,28,cs),
(302,55,o),
(283,58,o),
(254,58,cs),
(197,58,l),
(197,401,l),
(197,401,l),
(197,422,o),
(195,436,o),
(179,436,cs),
(146,436,o),
(126,435,o),
(75,431,cs),
(29,426,o),
(2,429,o),
(2,397,cs),
(2,389,o),
(19,381,o),
(30,381,cs),
(47,381,o),
(76,386,o),
(108,386,cs),
(119,386,o),
(122,375,o),
(123,359,cs),
(126,308,o),
(127,264,o),
(127,213,cs),
(127,174,o),
(127,120,o),
(123,77,cs),
(122,70,o),
(118,65,o),
(113,63,cs),
(108,60,o),
(98,58,o),
(83,56,cs),
(48,51,o),
(24,51,o),
(24,27,cs),
(24,-2,o),
(73,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(224,-159,o),
(254,-118,o),
(254,-108,cs),
(254,-97,o),
(248,-86,o),
(233,-86,cs),
(229,-86,o),
(225,-88,o),
(220,-92,cs),
(215,-97,o),
(209,-102,o),
(204,-107,cs),
(198,-113,o),
(187,-116,o),
(170,-116,cs),
(154,-116,o),
(139,-101,o),
(139,-85,cs),
(139,-66,o),
(153,-12,o),
(198,3,c),
(148,4,l),
(148,4,l),
(134,-3,o),
(122,-10,o),
(111,-19,cs),
(92,-34,o),
(75,-55,o),
(75,-86,cs),
(75,-129,o),
(117,-159,o),
(176,-159,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
27 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
27 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 0 2 9 9 0 96 0 7 1 6 1 7 6 104 0 6 0 8 6 8 87 4 3 2 2 2 5 83 0 5 5 15 67 10 1 9 9 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 0 2 9 9 0 96 0 7 1 6 1 7 6 104 0 5 4 3 2 2 0 5 2 91 0 6 0 8 6 8 87 10 1 9 9 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 2 9 2 0 9 104 0 7 1 6 1 7 6 104 0 5 4 3 2 2 0 5 2 91 0 6 0 8 6 8 87 10 1 9 9 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 4 2 0 2 4 0 104 0 0 9 2 0 9 102 0 7 1 6 1 7 6 104 0 5 3 1 2 4 5 2 91 0 6 0 8 6 8 87 10 1 9 9 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
52 52 52 81 52 81 74 72 66 64 61 59 49 44 36 34 33 32 31 29 68 32 11 17
CALL[ ]	/* CallFunction */";
};
width = 293;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(207,-159,o),
(237,-118,o),
(237,-108,cs),
(237,-100,o),
(235,-92,o),
(223,-92,cs),
(204,-92,o),
(198,-132,o),
(161,-132,cs),
(130,-132,o),
(122,-102,o),
(122,-85,cs),
(122,-66,o),
(133,-18,o),
(174,0,c),
(252,0,ls),
(267,0,o),
(282,1,o),
(282,13,cs),
(282,18,o),
(278,22,o),
(269,25,cs),
(260,27,o),
(249,28,o),
(234,28,cs),
(172,28,l),
(172,401,ls),
(172,422,o),
(170,436,o),
(154,436,cs),
(137,436,o),
(94,434,o),
(65,431,cs),
(42,430,o),
(25,428,o),
(16,425,cs),
(7,422,o),
(2,418,o),
(2,412,cs),
(2,401,o),
(19,401,o),
(30,401,cs),
(51,401,o),
(82,406,o),
(113,406,cs),
(124,406,o),
(127,400,o),
(128,389,cs),
(131,329,o),
(132,274,o),
(132,213,cs),
(132,165,o),
(132,98,o),
(128,47,cs),
(127,40,o),
(124,35,o),
(119,32,cs),
(113,29,o),
(103,27,o),
(88,26,cs),
(45,23,o),
(24,19,o),
(24,12,cs),
(24,6,o),
(32,3,o),
(47,2,cs),
(62,1,o),
(77,0,o),
(93,0,cs),
(138,0,l),
(120,-10,o),
(78,-37,o),
(78,-86,cs),
(78,-129,o),
(112,-159,o),
(159,-159,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
54 1 0 7 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
54 1 0 9 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 1 2 1 3 2 104 0 2 0 4 2 4 87 9 8 2 7 7 10 83 11 1 10 10 15 67 6 1 0 0 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 1 2 1 3 2 104 11 1 10 9 8 2 7 0 10 7 91 0 2 0 4 2 4 87 6 1 0 0 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 9 7 0 7 9 96 0 3 1 2 1 3 2 104 11 1 10 8 1 7 9 10 7 91 0 2 0 4 2 4 87 6 1 0 0 1 83 5 1 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
72 69 68 67 63 61 17 43 18 55 38 35 41 36 32 12 24
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = iogonek;
unicode = 303;
},
{
glyphname = itilde;
kernLeft = dotlessi;
kernRight = dotlessi;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(286,0,ls),
(303,0,o),
(316,17,o),
(316,37,cs),
(316,74,o),
(297,76,o),
(268,76,cs),
(215,76,l),
(215,401,l),
(215,401,l),
(215,422,o),
(213,436,o),
(197,436,cs),
(189,436,o),
(125,437,o),
(82,431,cs),
(37,426,o),
(2,430,o),
(2,388,cs),
(2,381,o),
(19,369,o),
(30,369,cs),
(45,369,o),
(74,374,o),
(105,374,cs),
(116,374,o),
(119,360,o),
(120,341,cs),
(123,297,o),
(124,258,o),
(124,213,cs),
(124,202,o),
(125,151,o),
(120,95,cs),
(119,86,o),
(114,81,o),
(106,80,cs),
(98,78,o),
(89,76,o),
(80,74,cs),
(48,67,o),
(24,70,o),
(24,36,cs),
(24,1,o),
(64,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(37,498,o),
(61,523,o),
(100,523,cs),
(139,523,o),
(181,499,o),
(237,499,cs),
(270,499,o),
(348,517,o),
(348,574,cs),
(348,595,o),
(333,609,o),
(326,609,cs),
(321,609,o),
(311,605,o),
(296,596,cs),
(277,585,o),
(255,579,o),
(236,579,cs),
(197,579,o),
(135,607,o),
(99,607,cs),
(74,607,o),
(52,601,o),
(31,589,cs),
(12,578,o),
(-3,563,o),
(-3,534,cs),
(-3,514,o),
(4,498,o),
(16,498,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
29 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
29 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
9 1 7 0 11 10 7 11 91 0 8 12 1 10 5 8 10 91 4 3 2 2 2 5 83 6 1 5 5 15 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
9 1 7 0 11 10 7 11 91 0 8 12 1 10 5 8 10 91 6 1 5 4 3 2 2 0 5 2 91 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
9 1 7 0 11 10 7 11 91 0 8 12 1 10 6 8 10 91 0 6 5 2 6 79 0 5 4 3 2 2 0 5 2 91 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 4 2 0 2 4 0 104 9 1 7 0 11 10 7 11 91 0 8 12 1 10 6 8 10 91 0 6 5 2 6 79 0 5 3 1 2 4 5 2 91 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
88 86 83 81 78 76 70 68 65 63 60 58 51 46 44 43 38 36 35 34 33 31 52 32 13 17
CALL[ ]	/* CallFunction */";
};
width = 306;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(272,0,ls),
(288,0,o),
(302,11,o),
(302,28,cs),
(302,55,o),
(283,58,o),
(254,58,cs),
(197,58,l),
(197,401,l),
(197,401,l),
(197,422,o),
(195,436,o),
(179,436,cs),
(146,436,o),
(126,435,o),
(75,431,cs),
(29,426,o),
(2,429,o),
(2,397,cs),
(2,389,o),
(19,381,o),
(30,381,cs),
(47,381,o),
(76,386,o),
(108,386,cs),
(119,386,o),
(122,375,o),
(123,359,cs),
(126,308,o),
(127,264,o),
(127,213,cs),
(127,174,o),
(127,120,o),
(123,77,cs),
(122,70,o),
(118,65,o),
(113,63,cs),
(108,60,o),
(98,58,o),
(83,56,cs),
(48,51,o),
(24,51,o),
(24,27,cs),
(24,-2,o),
(73,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(16,507,o),
(43,532,o),
(83,532,cs),
(122,532,o),
(164,508,o),
(220,508,cs),
(276,508,o),
(309,530,o),
(322,553,cs),
(325,559,o),
(327,565,o),
(327,572,cs),
(327,588,o),
(316,600,o),
(309,600,cs),
(306,600,o),
(302,599,o),
(299,598,cs),
(295,596,o),
(288,592,o),
(279,587,cs),
(256,576,o),
(236,570,o),
(219,570,cs),
(180,570,o),
(118,598,o),
(82,598,cs),
(57,598,o),
(35,592,o),
(14,580,cs),
(4,574,o),
(-3,569,o),
(-7,564,cs),
(-11,559,o),
(-14,555,o),
(-15,552,cs),
(-17,547,o),
(-18,541,o),
(-18,535,cs),
(-18,520,o),
(-12,507,o),
(-1,507,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
27 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
27 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
8 1 6 0 10 9 6 10 91 0 7 11 1 9 5 7 9 91 4 3 2 2 2 5 83 0 5 5 15 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
8 1 6 0 10 9 6 10 91 0 7 11 1 9 5 7 9 91 0 5 4 3 2 2 0 5 2 91 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 4 2 0 2 4 0 104 8 1 6 0 10 9 6 10 91 0 7 11 1 9 5 7 9 91 0 5 3 1 2 4 5 2 91 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
86 84 81 79 76 74 68 66 63 61 58 56 49 44 36 34 33 32 31 29 68 32 12 17
CALL[ ]	/* CallFunction */";
};
width = 292;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(252,0,ls),
(267,0,o),
(282,1,o),
(282,13,cs),
(282,18,o),
(278,22,o),
(269,25,cs),
(260,27,o),
(249,28,o),
(234,28,cs),
(172,28,l),
(172,401,ls),
(172,422,o),
(170,436,o),
(154,436,cs),
(137,436,o),
(94,434,o),
(65,431,cs),
(42,430,o),
(25,428,o),
(16,425,cs),
(7,422,o),
(2,418,o),
(2,412,cs),
(2,401,o),
(19,401,o),
(30,401,cs),
(51,401,o),
(82,406,o),
(113,406,cs),
(124,406,o),
(127,400,o),
(128,389,cs),
(131,329,o),
(132,274,o),
(132,213,cs),
(132,165,o),
(132,98,o),
(128,47,cs),
(127,40,o),
(124,35,o),
(119,32,cs),
(113,29,o),
(103,27,o),
(88,26,cs),
(45,23,o),
(24,19,o),
(24,12,cs),
(24,6,o),
(32,3,o),
(47,2,cs),
(62,1,o),
(77,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(-9,522,o),
(18,547,o),
(59,547,cs),
(98,547,o),
(140,523,o),
(196,523,cs),
(249,523,o),
(298,543,o),
(298,568,cs),
(298,577,o),
(292,585,o),
(285,585,cs),
(282,585,o),
(278,584,o),
(275,583,cs),
(271,581,o),
(264,577,o),
(255,572,cs),
(232,561,o),
(212,555,o),
(195,555,cs),
(156,555,o),
(94,583,o),
(58,583,cs),
(33,583,o),
(11,577,o),
(-10,565,cs),
(-29,554,o),
(-39,544,o),
(-39,537,cs),
(-39,530,o),
(-32,522,o),
(-25,522,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
22 1 0 3 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
22 1 0 5 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 6 9 11 91 5 4 2 3 3 6 83 7 1 6 6 15 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 6 9 11 91 7 1 6 5 4 2 3 0 6 3 91 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 3 0 3 5 0 104 10 1 8 0 12 11 8 12 91 0 9 13 1 11 6 9 11 91 7 1 6 4 1 3 5 6 3 91 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
76 74 71 69 66 64 58 56 53 51 38 49 20 33 17 43 18 68 32 14 24
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = itilde;
unicode = 297;
},
{
glyphname = ij;
kernLeft = dotlessi;
kernRight = dotlessj;
lastChange = "2024-06-14 09:00:26 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(405,-240,o),
(491,-185,o),
(512,-44,cs),
(514,-22,o),
(518,30,o),
(518,61,cs),
(518,73,o),
(518,130,o),
(520,231,cs),
(521,333,o),
(521,390,o),
(521,402,cs),
(521,427,o),
(514,440,o),
(493,440,cs),
(298,440,o),
(273,429,o),
(273,399,cs),
(273,384,o),
(283,368,o),
(311,368,cs),
(408,368,ls),
(427,368,o),
(433,362,o),
(433,342,cs),
(433,278,ls),
(433,223,o),
(431,23,o),
(425,-40,cs),
(417,-102,o),
(387,-173,o),
(316,-173,cs),
(273,-173,o),
(264,-149,o),
(264,-140,cs),
(264,-131,o),
(269,-125,o),
(280,-124,cs),
(315,-121,o),
(322,-98,o),
(322,-73,cs),
(322,-42,o),
(298,-25,o),
(257,-25,cs),
(218,-25,o),
(184,-56,o),
(184,-120,cs),
(184,-173,o),
(224,-240,o),
(310,-240,cs)
);
},
{
closed = 1;
nodes = (
(284,0,ls),
(301,0,o),
(314,16,o),
(314,37,cs),
(314,68,o),
(295,76,o),
(266,76,cs),
(213,76,l),
(213,401,l),
(213,422,o),
(206,436,o),
(186,436,cs),
(163,436,o),
(123,435,o),
(84,432,cs),
(54,430,o),
(33,427,o),
(22,422,cs),
(10,417,o),
(4,408,o),
(4,395,cs),
(4,376,o),
(12,362,o),
(35,362,cs),
(40,362,o),
(63,364,o),
(103,364,cs),
(118,364,o),
(121,350,o),
(122,331,cs),
(125,287,o),
(126,258,o),
(126,213,cs),
(126,196,o),
(128,157,o),
(122,95,cs),
(121,80,o),
(103,77,o),
(82,74,cs),
(47,71,o),
(26,61,o),
(26,36,cs),
(26,1,o),
(66,0,o),
(95,0,cs)
);
},
{
closed = 1;
nodes = (
(180,509,o),
(223,527,o),
(223,584,cs),
(223,625,o),
(195,650,o),
(162,650,cs),
(114,650,o),
(94,604,o),
(94,580,cs),
(94,540,o),
(120,509,o),
(155,509,cs)
);
},
{
closed = 1;
nodes = (
(482,509,o),
(520,531,o),
(520,585,cs),
(520,624,o),
(492,650,o),
(460,650,cs),
(411,650,o),
(391,603,o),
(391,581,cs),
(391,537,o),
(420,509,o),
(451,509,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
27 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 10 1 6 1 10 6 104 11 1 4 12 1 5 3 4 5 91 7 1 2 2 3 83 8 1 3 3 15 67 0 0 0 1 83 0 1 1 13 67 0 6 6 9 84 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 10 1 6 1 10 6 104 11 1 4 12 1 5 3 4 5 91 8 1 3 7 1 2 0 3 2 91 0 6 0 9 6 9 88 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 10 1 6 1 10 6 104 11 1 4 12 1 5 8 4 5 91 0 8 3 2 8 79 0 3 7 1 2 0 3 2 91 0 6 0 9 6 9 88 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 10 1 6 1 10 6 104 11 1 4 12 1 5 8 4 5 91 0 8 0 7 2 8 7 91 0 3 0 2 0 3 2 91 0 6 0 9 6 9 88 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
142 140 134 132 126 124 118 116 98 95 90 87 75 73 62 60 54 52 45 40 36 29 52 32 13 17
CALL[ ]	/* CallFunction */";
};
width = 578;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(386,-233,o),
(468,-186,o),
(486,-44,cs),
(488,-20,o),
(492,26,o),
(492,61,cs),
(492,73,o),
(492,130,o),
(494,231,cs),
(495,333,o),
(495,390,o),
(495,402,cs),
(495,427,o),
(493,440,o),
(472,440,cs),
(360,440,o),
(275,441,o),
(275,409,cs),
(275,396,o),
(288,389,o),
(313,389,cs),
(403,389,ls),
(420,389,o),
(428,389,o),
(428,368,cs),
(428,278,ls),
(428,321,o),
(430,45,o),
(420,-40,cs),
(409,-125,o),
(373,-171,o),
(305,-171,cs),
(279,-171,o),
(262,-167,o),
(253,-160,cs),
(244,-153,o),
(240,-148,o),
(240,-143,cs),
(240,-132,o),
(245,-125,o),
(256,-124,cs),
(283,-121,o),
(296,-106,o),
(296,-79,cs),
(296,-51,o),
(270,-38,o),
(245,-38,cs),
(212,-38,o),
(179,-65,o),
(179,-120,cs),
(179,-173,o),
(216,-233,o),
(303,-233,cs)
);
},
{
closed = 1;
nodes = (
(272,0,ls),
(288,0,o),
(302,11,o),
(302,28,cs),
(302,55,o),
(283,58,o),
(254,58,cs),
(197,58,l),
(197,401,l),
(197,401,l),
(197,422,o),
(195,436,o),
(179,436,cs),
(146,436,o),
(126,435,o),
(75,431,cs),
(29,426,o),
(2,429,o),
(2,397,cs),
(2,389,o),
(19,381,o),
(30,381,cs),
(47,381,o),
(76,386,o),
(108,386,cs),
(119,386,o),
(122,375,o),
(123,359,cs),
(126,308,o),
(127,264,o),
(127,213,cs),
(127,174,o),
(127,120,o),
(123,77,cs),
(122,70,o),
(118,65,o),
(113,63,cs),
(108,60,o),
(98,58,o),
(83,56,cs),
(48,51,o),
(24,51,o),
(24,27,cs),
(24,-2,o),
(73,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(170,520,o),
(203,536,o),
(203,584,cs),
(203,619,o),
(180,639,o),
(153,639,cs),
(113,639,o),
(96,599,o),
(96,580,cs),
(96,545,o),
(118,520,o),
(146,520,cs)
);
},
{
closed = 1;
nodes = (
(462,520,o),
(495,536,o),
(495,584,cs),
(495,619,o),
(472,639,o),
(445,639,cs),
(405,639,o),
(388,599,o),
(388,580,cs),
(388,545,o),
(410,520,o),
(438,520,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
28 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
28 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 12 1 8 1 12 8 104 13 1 6 14 1 7 5 6 7 91 9 4 3 3 2 2 5 83 10 1 5 5 15 67 0 0 0 1 83 0 1 1 13 67 0 8 8 11 83 0 11 11 25 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 12 1 8 1 12 8 104 13 1 6 14 1 7 5 6 7 91 10 1 5 9 4 3 3 2 0 5 2 91 0 0 0 1 83 0 1 1 13 67 0 8 8 11 83 0 11 11 25 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 12 1 8 1 12 8 104 13 1 6 14 1 7 5 6 7 91 10 1 5 9 4 3 3 2 0 5 2 91 0 8 0 11 8 11 87 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 4 2 0 2 4 0 104 0 12 1 8 1 12 8 104 13 1 6 14 1 7 10 6 7 91 0 10 5 2 10 79 0 5 9 3 2 2 4 5 2 91 0 8 0 11 8 11 87 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
138 136 132 130 124 122 116 114 96 93 89 86 76 74 65 63 59 57 50 45 37 35 34 33 32 30 68 33 15 28
CALL[ ]	/* CallFunction */";
};
width = 555;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(368,-221,o),
(435,-183,o),
(450,-44,cs),
(452,-20,o),
(456,26,o),
(456,61,cs),
(456,73,o),
(456,130,o),
(458,231,cs),
(459,333,o),
(459,390,o),
(459,402,cs),
(459,427,o),
(457,440,o),
(436,440,cs),
(363,440,o),
(279,438,o),
(279,419,cs),
(279,412,o),
(292,409,o),
(317,409,cs),
(397,409,ls),
(414,409,o),
(422,404,o),
(422,388,cs),
(422,278,ls),
(422,223,o),
(420,33,o),
(414,-40,cs),
(403,-150,o),
(362,-189,o),
(292,-189,cs),
(240,-189,o),
(207,-168,o),
(207,-143,cs),
(207,-128,o),
(212,-125,o),
(223,-124,cs),
(240,-121,o),
(260,-117,o),
(260,-89,cs),
(260,-64,o),
(244,-59,o),
(229,-59,cs),
(202,-59,o),
(173,-81,o),
(173,-120,cs),
(173,-174,o),
(208,-221,o),
(294,-221,cs)
);
},
{
closed = 1;
nodes = (
(252,0,ls),
(267,0,o),
(282,1,o),
(282,13,cs),
(282,18,o),
(278,22,o),
(269,25,cs),
(260,27,o),
(249,28,o),
(234,28,cs),
(172,28,l),
(172,401,ls),
(172,422,o),
(170,436,o),
(154,436,cs),
(137,436,o),
(94,434,o),
(65,431,cs),
(42,430,o),
(25,428,o),
(16,425,cs),
(7,422,o),
(2,418,o),
(2,412,cs),
(2,401,o),
(19,401,o),
(30,401,cs),
(51,401,o),
(82,406,o),
(113,406,cs),
(124,406,o),
(127,400,o),
(128,389,cs),
(131,329,o),
(132,274,o),
(132,213,cs),
(132,165,o),
(132,98,o),
(128,47,cs),
(127,40,o),
(124,35,o),
(119,32,cs),
(113,29,o),
(103,27,o),
(88,26,cs),
(45,23,o),
(24,19,o),
(24,12,cs),
(24,6,o),
(32,3,o),
(47,2,cs),
(62,1,o),
(77,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(155,538,o),
(177,548,o),
(177,584,cs),
(177,607,o),
(162,621,o),
(143,621,cs),
(115,621,o),
(102,594,o),
(102,580,cs),
(102,556,o),
(117,538,o),
(136,538,cs)
);
},
{
closed = 1;
nodes = (
(437,538,o),
(460,550,o),
(460,582,cs),
(460,609,o),
(444,621,o),
(425,621,cs),
(400,621,o),
(385,598,o),
(385,578,cs),
(385,561,o),
(396,538,o),
(420,538,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
23 1 0 3 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
23 1 0 5 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 14 1 10 1 14 10 104 15 1 8 16 1 9 12 8 9 91 11 5 4 3 3 3 12 83 0 12 12 15 67 11 5 4 3 3 3 6 83 7 1 6 6 15 67 2 1 0 0 1 83 0 1 1 13 67 0 10 10 13 83 0 13 13 25 13 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 14 1 10 1 14 10 104 15 1 8 16 1 9 12 8 9 91 0 12 6 3 12 79 7 1 6 11 5 4 3 3 0 6 3 91 2 1 0 0 1 83 0 1 1 13 67 0 10 10 13 83 0 13 13 25 13 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 14 1 10 1 14 10 104 15 1 8 16 1 9 12 8 9 91 0 12 6 3 12 79 7 1 6 11 5 4 3 3 0 6 3 91 0 10 0 13 10 13 87 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 5 3 0 3 5 96 0 14 1 10 1 14 10 104 15 1 8 16 1 9 12 8 9 91 0 12 6 3 12 79 7 1 6 11 4 2 3 5 6 3 91 0 10 0 13 10 13 87 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
130 128 124 122 118 116 110 108 90 87 83 80 68 66 56 54 39 49 20 33 17 43 18 68 33 17 35
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = ij;
unicode = 307;
},
{
glyphname = j;
kernLeft = dotlessj;
kernRight = dotlessj;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(116,-240,o),
(202,-185,o),
(223,-44,cs),
(225,-22,o),
(229,30,o),
(229,61,cs),
(229,73,o),
(229,130,o),
(231,231,cs),
(232,333,o),
(232,390,o),
(232,402,cs),
(232,427,o),
(225,440,o),
(204,440,cs),
(9,440,o),
(-16,429,o),
(-16,399,cs),
(-16,384,o),
(-6,368,o),
(22,368,cs),
(119,368,ls),
(138,368,o),
(144,362,o),
(144,342,cs),
(144,278,ls),
(144,223,o),
(142,23,o),
(136,-40,cs),
(128,-102,o),
(98,-173,o),
(27,-173,cs),
(-16,-173,o),
(-25,-149,o),
(-25,-140,cs),
(-25,-131,o),
(-20,-125,o),
(-9,-124,cs),
(26,-121,o),
(33,-98,o),
(33,-73,cs),
(33,-42,o),
(9,-25,o),
(-32,-25,cs),
(-71,-25,o),
(-105,-56,o),
(-105,-120,cs),
(-105,-173,o),
(-65,-240,o),
(21,-240,cs)
);
},
{
closed = 1;
nodes = (
(193,509,o),
(231,531,o),
(231,585,cs),
(231,624,o),
(203,650,o),
(171,650,cs),
(122,650,o),
(102,603,o),
(102,581,cs),
(102,537,o),
(131,509,o),
(162,509,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 1 0 1 4 0 104 0 5 0 6 2 5 6 91 0 1 1 2 83 0 2 2 15 67 0 0 0 3 84 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 4 1 0 1 4 0 104 0 5 0 6 2 5 6 91 0 2 0 1 4 2 1 91 0 0 3 3 0 79 0 0 0 3 84 0 3 0 3 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
78 76 70 68 62 60 54 52 53 60 41 7 18
CALL[ ]	/* CallFunction */";
};
width = 290;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(94,-233,o),
(176,-186,o),
(194,-44,cs),
(196,-20,o),
(200,26,o),
(200,61,cs),
(200,73,o),
(200,130,o),
(202,231,cs),
(203,333,o),
(203,390,o),
(203,402,cs),
(203,427,o),
(201,440,o),
(180,440,cs),
(68,440,o),
(-17,441,o),
(-17,409,cs),
(-17,396,o),
(-4,389,o),
(21,389,cs),
(111,389,ls),
(128,389,o),
(136,389,o),
(136,368,cs),
(136,278,ls),
(136,321,o),
(138,45,o),
(128,-40,cs),
(117,-125,o),
(81,-171,o),
(13,-171,cs),
(-13,-171,o),
(-30,-167,o),
(-39,-160,cs),
(-48,-153,o),
(-52,-148,o),
(-52,-143,cs),
(-52,-132,o),
(-47,-125,o),
(-36,-124,cs),
(-9,-121,o),
(4,-106,o),
(4,-79,cs),
(4,-51,o),
(-22,-38,o),
(-47,-38,cs),
(-80,-38,o),
(-113,-65,o),
(-113,-120,cs),
(-113,-173,o),
(-76,-233,o),
(11,-233,cs)
);
},
{
closed = 1;
nodes = (
(170,520,o),
(203,536,o),
(203,584,cs),
(203,619,o),
(180,639,o),
(153,639,cs),
(113,639,o),
(96,599,o),
(96,580,cs),
(96,545,o),
(118,520,o),
(146,520,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 1 0 1 4 0 104 0 5 0 6 2 5 6 91 0 1 1 2 83 0 2 2 15 67 0 0 0 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 4 1 0 1 4 0 104 0 5 0 6 2 5 6 91 0 2 0 1 4 2 1 91 0 0 0 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 4 1 0 1 4 0 104 0 5 0 6 2 5 6 91 0 2 0 1 4 2 1 91 0 0 3 3 0 79 0 0 0 3 83 0 3 0 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
71 69 65 63 57 55 49 47 52 58 39 7 18
CALL[ ]	/* CallFunction */";
};
width = 263;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(71,-221,o),
(138,-183,o),
(153,-44,cs),
(155,-20,o),
(159,26,o),
(159,61,cs),
(159,73,o),
(159,130,o),
(161,231,cs),
(162,333,o),
(162,390,o),
(162,402,cs),
(162,427,o),
(160,440,o),
(139,440,cs),
(66,440,o),
(-18,438,o),
(-18,419,cs),
(-18,412,o),
(-5,409,o),
(20,409,cs),
(100,409,ls),
(117,409,o),
(125,404,o),
(125,388,cs),
(125,278,ls),
(125,223,o),
(123,33,o),
(117,-40,cs),
(106,-150,o),
(65,-189,o),
(-5,-189,cs),
(-57,-189,o),
(-90,-168,o),
(-90,-143,cs),
(-90,-128,o),
(-85,-125,o),
(-74,-124,cs),
(-57,-121,o),
(-37,-117,o),
(-37,-89,cs),
(-37,-64,o),
(-53,-59,o),
(-68,-59,cs),
(-95,-59,o),
(-124,-81,o),
(-124,-120,cs),
(-124,-174,o),
(-89,-221,o),
(-3,-221,cs)
);
},
{
closed = 1;
nodes = (
(140,538,o),
(163,550,o),
(163,582,cs),
(163,609,o),
(147,621,o),
(128,621,cs),
(103,621,o),
(88,598,o),
(88,578,cs),
(88,561,o),
(99,538,o),
(123,538,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 1 0 1 4 0 104 0 5 0 6 2 5 6 91 0 1 1 2 83 0 2 2 15 67 0 0 0 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 4 1 0 1 4 0 104 0 5 0 6 2 5 6 91 0 2 0 1 4 2 1 91 0 0 0 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 4 1 0 1 4 0 104 0 5 0 6 2 5 6 91 0 2 0 1 4 2 1 91 0 0 3 3 0 79 0 0 0 3 83 0 3 0 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
72 70 66 64 60 58 52 50 52 60 40 7 18
CALL[ ]	/* CallFunction */";
};
width = 225;
}
);
note = j;
unicode = 106;
},
{
glyphname = jdotless;
kernLeft = dotlessj;
kernRight = dotlessj;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(116,-240,o),
(202,-185,o),
(223,-44,cs),
(225,-22,o),
(229,30,o),
(229,61,cs),
(229,73,o),
(229,130,o),
(231,231,cs),
(232,333,o),
(232,390,o),
(232,402,cs),
(232,429,o),
(228,440,o),
(209,440,cs),
(50,440,o),
(-16,441,o),
(-16,403,cs),
(-16,388,o),
(-5,377,o),
(22,377,cs),
(119,377,ls),
(138,377,o),
(144,373,o),
(144,356,cs),
(144,278,ls),
(144,308,o),
(146,45,o),
(136,-40,cs),
(128,-103,o),
(99,-160,o),
(26,-160,cs),
(4,-160,o),
(-10,-158,o),
(-16,-153,cs),
(-22,-148,o),
(-25,-144,o),
(-25,-141,cs),
(-25,-131,o),
(-20,-125,o),
(-9,-124,cs),
(26,-121,o),
(33,-98,o),
(33,-73,cs),
(33,-42,o),
(6,-25,o),
(-26,-25,cs),
(-65,-25,o),
(-105,-58,o),
(-105,-120,cs),
(-105,-173,o),
(-65,-240,o),
(21,-240,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 4 1 0 0 4 96 0 1 1 2 83 0 2 2 15 67 0 0 0 3 84 0 3 3 25 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 1 0 1 4 0 104 0 1 1 2 83 0 2 2 15 67 0 0 0 3 84 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 4 1 0 1 4 0 104 0 2 0 1 4 2 1 91 0 0 3 3 0 79 0 0 0 3 84 0 3 0 3 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
62 60 52 50 53 60 39 5 18
CALL[ ]	/* CallFunction */";
};
width = 290;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(94,-233,o),
(176,-186,o),
(194,-44,cs),
(196,-20,o),
(200,26,o),
(200,61,cs),
(200,73,o),
(200,130,o),
(202,231,cs),
(203,333,o),
(203,390,o),
(203,402,cs),
(203,427,o),
(201,440,o),
(180,440,cs),
(68,440,o),
(-17,441,o),
(-17,409,cs),
(-17,396,o),
(-4,389,o),
(21,389,cs),
(111,389,ls),
(128,389,o),
(136,389,o),
(136,368,cs),
(136,278,ls),
(136,321,o),
(138,45,o),
(128,-40,cs),
(117,-125,o),
(81,-171,o),
(13,-171,cs),
(-13,-171,o),
(-30,-167,o),
(-39,-160,cs),
(-48,-153,o),
(-52,-148,o),
(-52,-143,cs),
(-52,-132,o),
(-47,-125,o),
(-36,-124,cs),
(-9,-121,o),
(4,-106,o),
(4,-79,cs),
(4,-51,o),
(-22,-38,o),
(-47,-38,cs),
(-80,-38,o),
(-113,-65,o),
(-113,-120,cs),
(-113,-173,o),
(-76,-233,o),
(11,-233,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 1 0 1 4 0 104 0 1 1 2 83 0 2 2 15 67 0 0 0 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 4 1 0 1 4 0 104 0 2 0 1 4 2 1 91 0 0 0 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 4 1 0 1 4 0 104 0 2 0 1 4 2 1 91 0 0 3 3 0 79 0 0 0 3 83 0 3 0 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
57 55 49 47 52 58 39 5 18
CALL[ ]	/* CallFunction */";
};
width = 263;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(71,-221,o),
(138,-183,o),
(153,-44,cs),
(155,-20,o),
(159,26,o),
(159,61,cs),
(159,73,o),
(159,130,o),
(161,231,cs),
(162,333,o),
(162,390,o),
(162,402,cs),
(162,427,o),
(160,440,o),
(139,440,cs),
(66,440,o),
(-18,438,o),
(-18,419,cs),
(-18,412,o),
(-5,409,o),
(20,409,cs),
(100,409,ls),
(117,409,o),
(125,404,o),
(125,388,cs),
(125,278,ls),
(125,223,o),
(123,33,o),
(117,-40,cs),
(106,-150,o),
(65,-189,o),
(-5,-189,cs),
(-57,-189,o),
(-90,-168,o),
(-90,-143,cs),
(-90,-128,o),
(-85,-125,o),
(-74,-124,cs),
(-57,-121,o),
(-37,-117,o),
(-37,-89,cs),
(-37,-64,o),
(-53,-59,o),
(-68,-59,cs),
(-95,-59,o),
(-124,-81,o),
(-124,-120,cs),
(-124,-174,o),
(-89,-221,o),
(-3,-221,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 1 0 1 4 0 104 0 1 1 2 83 0 2 2 15 67 0 0 0 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 4 1 0 1 4 0 104 0 2 0 1 4 2 1 91 0 0 0 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 4 1 0 1 4 0 104 0 2 0 1 4 2 1 91 0 0 3 3 0 79 0 0 0 3 83 0 3 0 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
60 58 52 50 52 60 40 5 18
CALL[ ]	/* CallFunction */";
};
width = 225;
}
);
note = dotlessj;
unicode = 567;
},
{
glyphname = jcircumflex;
kernLeft = dotlessj;
kernRight = dotlessj;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(116,-240,o),
(202,-185,o),
(223,-44,cs),
(225,-22,o),
(229,30,o),
(229,61,cs),
(229,73,o),
(229,130,o),
(231,231,cs),
(232,333,o),
(232,390,o),
(232,402,cs),
(232,427,o),
(225,440,o),
(204,440,cs),
(9,440,o),
(-16,429,o),
(-16,399,cs),
(-16,384,o),
(-6,368,o),
(22,368,cs),
(119,368,ls),
(138,368,o),
(144,362,o),
(144,342,cs),
(144,278,ls),
(144,223,o),
(142,23,o),
(136,-40,cs),
(128,-103,o),
(99,-160,o),
(26,-160,cs),
(3,-160,o),
(-11,-157,o),
(-16,-152,cs),
(-22,-147,o),
(-25,-143,o),
(-25,-140,cs),
(-25,-131,o),
(-20,-125,o),
(-9,-124,cs),
(26,-121,o),
(33,-98,o),
(33,-73,cs),
(33,-42,o),
(9,-25,o),
(-32,-25,cs),
(-71,-25,o),
(-105,-56,o),
(-105,-120,cs),
(-105,-173,o),
(-65,-240,o),
(21,-240,cs)
);
},
{
closed = 1;
nodes = (
(36,510,o),
(94,546,o),
(143,572,c),
(215,534,o),
(252,510,o),
(263,510,cs),
(272,510,o),
(276,520,o),
(276,531,cs),
(276,572,o),
(167,664,o),
(143,664,cs),
(132,664,o),
(97,639,o),
(70,614,cs),
(39,585,o),
(11,549,o),
(11,524,cs),
(11,517,o),
(16,510,o),
(24,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
67 1 5 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 7 5 7 106 6 8 2 5 2 5 106 0 4 1 0 0 4 96 0 1 1 2 83 0 2 2 15 67 0 0 0 3 84 0 3 3 25 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 7 5 7 106 6 8 2 5 2 5 106 0 4 1 0 1 4 0 104 0 1 1 2 83 0 2 2 15 67 0 0 0 3 84 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 7 5 7 106 6 8 2 5 2 5 106 0 4 1 0 1 4 0 104 0 2 0 1 4 2 1 91 0 0 3 3 0 79 0 0 0 3 84 0 3 0 3 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
63 62 81 79 73 71 62 87 63 87 60 58 52 50 53 60 39 9 18
CALL[ ]	/* CallFunction */";
};
width = 290;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(94,-233,o),
(176,-186,o),
(194,-44,cs),
(196,-20,o),
(200,26,o),
(200,61,cs),
(200,73,o),
(200,130,o),
(202,231,cs),
(203,333,o),
(203,390,o),
(203,402,cs),
(203,427,o),
(201,440,o),
(180,440,cs),
(68,440,o),
(-17,441,o),
(-17,409,cs),
(-17,396,o),
(-4,389,o),
(21,389,cs),
(111,389,ls),
(128,389,o),
(136,389,o),
(136,368,cs),
(136,278,ls),
(136,321,o),
(138,45,o),
(128,-40,cs),
(117,-125,o),
(81,-171,o),
(13,-171,cs),
(-13,-171,o),
(-30,-167,o),
(-39,-160,cs),
(-48,-153,o),
(-52,-148,o),
(-52,-143,cs),
(-52,-132,o),
(-47,-125,o),
(-36,-124,cs),
(-9,-121,o),
(4,-106,o),
(4,-79,cs),
(4,-51,o),
(-22,-38,o),
(-47,-38,cs),
(-80,-38,o),
(-113,-65,o),
(-113,-120,cs),
(-113,-173,o),
(-76,-233,o),
(11,-233,cs)
);
},
{
closed = 1;
nodes = (
(32,510,o),
(63,538,o),
(136,581,c),
(149,573,o),
(243,510,o),
(256,510,cs),
(264,510,o),
(267,518,o),
(267,527,cs),
(267,562,o),
(161,655,o),
(136,655,cs),
(114,655,o),
(6,564,o),
(6,523,cs),
(6,514,o),
(10,510,o),
(17,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
64 1 5 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 7 5 7 106 6 8 2 5 2 5 106 0 4 1 0 1 4 0 104 0 1 1 2 83 0 2 2 15 67 0 0 0 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 7 5 7 106 6 8 2 5 2 5 106 0 4 1 0 1 4 0 104 0 2 0 1 4 2 1 91 0 0 0 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 7 5 7 106 6 8 2 5 2 5 106 0 4 1 0 1 4 0 104 0 2 0 1 4 2 1 91 0 0 3 3 0 79 0 0 0 3 83 0 3 0 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
60 59 77 75 70 68 59 83 60 83 57 55 49 47 52 58 39 9 18
CALL[ ]	/* CallFunction */";
};
width = 263;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(66,-217,o),
(128,-186,o),
(151,-44,cs),
(156,-13,o),
(159,15,o),
(159,46,cs),
(159,58,o),
(159,118,o),
(161,224,cs),
(162,328,o),
(162,388,o),
(162,402,cs),
(162,427,o),
(160,440,o),
(139,440,cs),
(66,440,o),
(-18,438,o),
(-18,419,cs),
(-18,412,o),
(-5,409,o),
(20,409,cs),
(100,409,ls),
(117,409,o),
(125,404,o),
(125,388,cs),
(125,278,ls),
(125,238,o),
(126,89,o),
(113,-40,cs),
(97,-186,o),
(48,-190,o),
(6,-190,cs),
(-68,-190,o),
(-90,-170,o),
(-90,-143,cs),
(-90,-128,o),
(-85,-125,o),
(-74,-124,cs),
(-57,-121,o),
(-37,-117,o),
(-37,-89,cs),
(-37,-64,o),
(-53,-59,o),
(-68,-59,cs),
(-95,-59,o),
(-124,-76,o),
(-124,-120,cs),
(-124,-172,o),
(-84,-217,o),
(1,-217,cs)
);
},
{
closed = 1;
nodes = (
(21,510,o),
(73,559,o),
(126,596,c),
(202,542,o),
(231,510,o),
(246,510,cs),
(251,510,o),
(254,514,o),
(254,521,cs),
(254,546,o),
(151,640,o),
(126,640,cs),
(103,640,o),
(-1,546,o),
(-1,521,cs),
(-1,514,o),
(2,510,o),
(7,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
65 1 5 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 7 5 7 106 6 8 2 5 2 5 106 0 4 1 0 0 4 96 0 1 1 2 83 0 2 2 15 67 0 0 0 3 84 0 3 3 25 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 7 5 7 106 6 8 2 5 2 5 106 0 4 1 0 1 4 0 104 0 1 1 2 83 0 2 2 15 67 0 0 0 3 84 0 3 3 25 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 7 5 7 106 6 8 2 5 2 5 106 0 4 1 0 1 4 0 104 0 2 0 1 4 2 1 91 0 0 0 3 84 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 7 5 7 106 6 8 2 5 2 5 106 0 4 1 0 1 4 0 104 0 2 0 1 4 2 1 91 0 0 3 3 0 79 0 0 0 3 84 0 3 0 3 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
61 60 78 76 71 69 60 83 61 83 58 56 52 50 52 60 42 9 18
CALL[ ]	/* CallFunction */";
};
width = 225;
}
);
note = jcircumflex;
unicode = 309;
},
{
glyphname = k;
kernLeft = germandbls;
kernRight = k;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(445,-80,o),
(481,-40,o),
(481,9,cs),
(481,32,o),
(471,52,o),
(442,52,cs),
(415,52,o),
(402,39,o),
(402,12,cs),
(402,5,o),
(398,2,o),
(391,2,cs),
(380,2,o),
(369,5,o),
(369,68,cs),
(369,116,ls),
(369,234,o),
(334,272,o),
(246,272,c),
(345,366,ls),
(352,373,o),
(372,379,o),
(387,382,cs),
(454,391,o),
(483,396,o),
(483,419,cs),
(483,430,o),
(473,438,o),
(452,441,cs),
(431,444,o),
(396,446,o),
(345,446,cs),
(300,446,o),
(268,443,o),
(250,438,cs),
(232,433,o),
(223,423,o),
(223,410,cs),
(223,387,o),
(233,381,o),
(252,381,cs),
(262,381,ls),
(265,381,o),
(267,380,o),
(267,377,cs),
(267,374,o),
(257,363,o),
(236,345,cs),
(215,327,o),
(187,302,o),
(153,270,c),
(153,788,l),
(153,788,l),
(153,807,o),
(145,817,o),
(128,817,cs),
(9,817,o),
(-47,803,o),
(-47,775,cs),
(-47,753,o),
(-15,749,o),
(-2,749,cs),
(38,749,ls),
(53,749,o),
(60,741,o),
(60,726,cs),
(60,691,o),
(61,648,o),
(62,592,cs),
(63,535,o),
(64,463,o),
(64,370,cs),
(64,294,o),
(62,231,o),
(59,123,cs),
(59,110,o),
(58,98,o),
(57,87,cs),
(56,76,o),
(53,70,o),
(50,69,cs),
(11,58,o),
(-5,47,o),
(-5,28,cs),
(-5,0,o),
(22,-6,o),
(45,-6,cs),
(54,-6,o),
(66,-6,o),
(81,-5,cs),
(95,-4,o),
(107,-4,o),
(118,-4,cs),
(143,-4,o),
(162,-4,o),
(173,-5,cs),
(184,-6,o),
(193,-6,o),
(201,-6,cs),
(227,-6,o),
(240,5,o),
(240,28,cs),
(240,52,o),
(228,69,o),
(200,69,cs),
(153,69,l),
(153,185,l),
(182,211,l),
(244,211,o),
(283,202,o),
(283,116,cs),
(283,50,ls),
(283,-45,o),
(322,-80,o),
(389,-80,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 1 6 2 55 1 7 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 9 10 1 10 9 1 104 0 0 1 2 1 0 2 104 0 2 6 1 2 6 102 0 6 7 1 6 7 102 0 3 4 8 4 3 96 0 4 0 5 4 5 88 0 10 10 14 67 0 1 1 15 67 0 7 7 8 84 0 8 8 16 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 9 10 1 10 9 1 104 0 1 0 10 1 0 102 0 0 2 10 0 2 102 0 2 6 10 2 6 102 0 6 7 10 6 7 102 0 3 4 8 4 3 96 0 4 0 5 4 5 88 0 10 10 14 67 0 7 7 8 84 0 8 8 16 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
0 9 10 1 10 9 1 104 0 1 0 10 1 0 102 0 0 2 10 0 2 102 0 2 6 10 2 6 102 0 6 7 10 6 7 102 0 3 4 8 4 3 8 104 0 4 0 5 4 5 88 0 10 10 14 67 0 7 7 8 84 0 8 8 16 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
101 99 91 88 131 34 23 36 34 41 27 36 52 11 24
CALL[ ]	/* CallFunction */";
};
width = 497;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(431,-71,o),
(468,-35,o),
(468,9,cs),
(468,28,o),
(463,46,o),
(440,46,cs),
(418,46,o),
(407,35,o),
(407,12,cs),
(407,-3,o),
(397,-7,o),
(389,-7,cs),
(379,-7,o),
(360,-2,o),
(360,68,cs),
(360,116,ls),
(360,236,o),
(321,268,o),
(234,268,c),
(348,376,ls),
(355,383,o),
(366,388,o),
(379,389,cs),
(455,394,o),
(480,397,o),
(480,419,cs),
(480,426,o),
(468,431,o),
(444,435,cs),
(420,439,o),
(377,441,o),
(316,441,cs),
(291,441,o),
(271,439,o),
(255,434,cs),
(239,429,o),
(231,422,o),
(231,412,cs),
(231,397,o),
(247,394,o),
(252,394,cs),
(259,394,ls),
(262,394,o),
(267,394,o),
(267,387,cs),
(267,382,o),
(256,368,o),
(233,347,cs),
(210,326,o),
(180,298,o),
(144,264,c),
(144,788,l),
(144,788,l),
(144,807,o),
(136,817,o),
(119,817,cs),
(64,817,o),
(24,813,o),
(-1,806,cs),
(-26,799,o),
(-38,790,o),
(-38,781,cs),
(-38,765,o),
(-16,761,o),
(0,761,cs),
(50,761,ls),
(65,761,o),
(72,753,o),
(72,738,cs),
(72,702,o),
(73,659,o),
(74,600,cs),
(75,540,o),
(76,466,o),
(76,370,cs),
(76,295,o),
(75,249,o),
(74,219,cs),
(72,188,o),
(71,154,o),
(71,105,cs),
(71,86,o),
(70,73,o),
(69,66,cs),
(67,59,o),
(63,54,o),
(57,53,cs),
(34,48,o),
(17,43,o),
(8,40,cs),
(-2,36,o),
(-7,29,o),
(-7,20,cs),
(-7,-1,o),
(13,-6,o),
(36,-6,cs),
(45,-6,o),
(57,-6,o),
(72,-5,cs),
(86,-4,o),
(98,-4,o),
(109,-4,cs),
(134,-4,o),
(155,-4,o),
(172,-5,cs),
(188,-6,o),
(203,-6,o),
(218,-6,cs),
(234,-6,o),
(250,-2,o),
(250,15,cs),
(250,36,o),
(236,51,o),
(205,51,cs),
(144,51,l),
(144,185,l),
(186,220,l),
(267,220,o),
(290,199,o),
(290,116,cs),
(290,50,ls),
(290,-38,o),
(324,-71,o),
(380,-71,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
0 1 7 3 56 1 5 7 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
0 1 7 3 56 1 8 7 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 3 0 7 0 3 7 104 0 7 5 0 7 5 102 0 4 0 6 4 6 88 0 10 10 11 83 0 11 11 14 67 2 1 0 0 1 83 0 1 1 15 67 8 1 5 5 9 83 0 9 9 16 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 3 0 7 0 3 7 104 0 7 5 0 7 5 102 0 1 2 1 0 3 1 0 91 0 4 0 6 4 6 88 0 10 10 11 83 0 11 11 14 67 8 1 5 5 9 83 0 9 9 16 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 3 0 7 0 3 7 104 0 7 8 0 7 8 102 0 5 8 9 8 5 9 104 0 1 2 1 0 3 1 0 91 0 4 0 6 4 6 88 0 10 10 11 83 0 11 11 14 67 0 8 8 9 83 0 9 9 16 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
101 99 95 92 71 63 34 23 36 35 41 19 22 36 53 12 24
CALL[ ]	/* CallFunction */";
};
width = 483;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(412,-56,o),
(445,-27,o),
(445,9,cs),
(445,27,o),
(440,36,o),
(430,36,cs),
(419,36,o),
(414,30,o),
(414,17,cs),
(414,-10,o),
(399,-22,o),
(378,-22,cs),
(353,-22,o),
(347,-4,o),
(347,68,cs),
(347,116,ls),
(347,232,o),
(298,257,o),
(209,257,c),
(345,386,ls),
(352,393,o),
(363,398,o),
(376,399,cs),
(432,403,o),
(457,406,o),
(457,419,cs),
(457,431,o),
(387,431,o),
(303,431,cs),
(253,431,o),
(228,426,o),
(228,417,cs),
(228,409,o),
(235,405,o),
(248,404,cs),
(282,402,ls),
(290,402,o),
(294,399,o),
(294,394,cs),
(294,385,o),
(241,329,o),
(131,234,c),
(131,788,ls),
(131,807,o),
(123,817,o),
(106,817,cs),
(8,817,o),
(-41,802,o),
(-41,791,cs),
(-41,788,o),
(-38,785,o),
(-33,784,cs),
(-28,782,o),
(-21,781,o),
(-13,781,cs),
(67,781,ls),
(82,781,o),
(89,773,o),
(89,758,cs),
(89,719,o),
(90,674,o),
(91,612,cs),
(92,550,o),
(93,471,o),
(93,370,cs),
(93,286,o),
(92,234,o),
(91,202,cs),
(89,167,o),
(88,130,o),
(88,75,cs),
(88,36,o),
(81,28,o),
(44,23,cs),
(21,20,o),
(6,17,o),
(0,15,cs),
(-7,12,o),
(-10,9,o),
(-10,6,cs),
(-10,-2,o),
(1,-6,o),
(23,-6,cs),
(32,-6,o),
(44,-6,o),
(59,-5,cs),
(73,-4,o),
(85,-4,o),
(96,-4,cs),
(121,-4,o),
(142,-4,o),
(159,-5,cs),
(175,-6,o),
(190,-6,o),
(205,-6,cs),
(213,-6,o),
(220,-5,o),
(226,-3,cs),
(231,-1,o),
(234,2,o),
(234,5,cs),
(234,9,o),
(231,13,o),
(225,16,cs),
(218,19,o),
(207,21,o),
(192,21,cs),
(131,21,l),
(131,185,l),
(182,228,l),
(285,228,o),
(307,202,o),
(307,116,cs),
(307,50,ls),
(307,-27,o),
(328,-56,o),
(367,-56,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 1 6 2 56 1 4 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 4 6 7 6 4 7 104 0 2 0 6 4 2 6 91 0 3 0 5 3 5 87 0 9 9 10 83 0 10 10 14 67 0 0 0 1 83 0 1 1 15 67 0 7 7 8 83 0 8 8 16 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 4 6 7 6 4 7 104 0 1 0 0 2 1 0 91 0 2 0 6 4 2 6 91 0 3 0 5 3 5 87 0 9 9 10 83 0 10 10 14 67 0 7 7 8 83 0 8 8 16 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
102 100 94 91 132 34 23 35 35 41 27 50 54 11 24
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = k;
unicode = 107;
},
{
glyphname = kcommaaccent;
kernLeft = germandbls;
kernRight = c_k;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(461,-58,o),
(555,-62,o),
(555,-28,cs),
(555,-2,o),
(507,0,o),
(475,3,cs),
(447,6,o),
(427,7,o),
(414,8,cs),
(401,9,o),
(391,9,o),
(384,9,cs),
(376,9,o),
(295,154,o),
(246,268,c),
(269,288,o),
(290,311,o),
(335,354,cs),
(342,361,o),
(353,366,o),
(366,367,cs),
(401,370,o),
(429,374,o),
(450,379,cs),
(471,384,o),
(481,392,o),
(481,403,cs),
(481,427,o),
(456,431,o),
(357,431,cs),
(253,431,o),
(200,431,o),
(200,396,cs),
(200,380,o),
(210,370,o),
(223,370,cs),
(231,370,ls),
(234,370,o),
(236,369,o),
(236,366,cs),
(236,355,o),
(202,329,o),
(157,282,c),
(157,788,l),
(157,788,l),
(157,807,o),
(149,817,o),
(132,817,cs),
(51,817,o),
(-33,807,o),
(-33,775,cs),
(-33,752,o),
(-10,749,o),
(13,749,cs),
(42,749,ls),
(57,749,o),
(64,741,o),
(64,726,cs),
(64,691,o),
(65,648,o),
(66,592,cs),
(67,535,o),
(68,463,o),
(68,370,cs),
(68,269,o),
(63,163,o),
(63,107,cs),
(63,68,o),
(50,59,o),
(19,55,cs),
(16,54,o),
(11,52,o),
(6,49,cs),
(1,46,o),
(-2,37,o),
(-2,24,cs),
(-2,0,o),
(26,-6,o),
(49,-6,cs),
(58,-6,o),
(70,-6,o),
(85,-5,cs),
(99,-4,o),
(111,-4,o),
(122,-4,cs),
(147,-4,o),
(168,-4,o),
(185,-5,cs),
(201,-6,o),
(216,-6,o),
(231,-6,cs),
(247,-6,o),
(260,-4,o),
(260,23,cs),
(260,43,o),
(249,53,o),
(218,53,cs),
(157,53,l),
(157,185,l),
(176,205,l),
(189,178,o),
(219,121,o),
(256,54,cs),
(291,-13,o),
(322,-58,o),
(339,-58,cs)
);
},
{
closed = 1;
nodes = (
(252,-250,o),
(315,-208,o),
(315,-131,cs),
(315,-74,o),
(279,-50,o),
(247,-50,cs),
(203,-50,o),
(187,-80,o),
(187,-108,cs),
(187,-139,o),
(223,-141,o),
(223,-158,cs),
(223,-178,o),
(221,-193,o),
(216,-202,cs),
(211,-212,o),
(208,-220,o),
(208,-227,cs),
(208,-250,o),
(227,-250,o),
(234,-250,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
79 78 53 22 4 6 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 3 6 3 2 6 104 0 4 0 5 1 4 5 92 0 8 8 9 83 0 9 9 14 67 0 3 3 15 67 0 6 6 7 83 0 7 7 16 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 3 8 2 8 3 2 104 0 2 6 8 2 6 102 0 4 0 5 1 4 5 92 0 0 0 1 0 1 87 0 8 8 9 83 0 9 9 14 67 0 6 6 7 83 0 7 7 16 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
124 121 116 113 94 86 82 80 72 69 60 57 40 36 31 28 38 34 10 17
CALL[ ]	/* CallFunction */";
};
width = 549;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(416,-58,o),
(465,-57,o),
(494,-54,cs),
(523,-52,o),
(537,-45,o),
(537,-34,cs),
(537,-13,o),
(502,-9,o),
(471,-9,cs),
(443,-9,o),
(422,-8,o),
(409,-7,cs),
(395,-6,o),
(385,-3,o),
(380,2,cs),
(346,33,o),
(271,177,o),
(235,268,c),
(251,282,o),
(267,298,o),
(280,310,cs),
(295,325,o),
(315,343,o),
(339,366,cs),
(346,373,o),
(357,378,o),
(370,379,cs),
(405,382,o),
(430,386,o),
(447,389,cs),
(463,392,o),
(471,399,o),
(471,409,cs),
(471,419,o),
(464,425,o),
(449,428,cs),
(434,430,o),
(409,431,o),
(376,431,cs),
(297,431,ls),
(272,431,o),
(253,430,o),
(240,428,cs),
(227,425,o),
(220,418,o),
(220,407,cs),
(220,391,o),
(230,384,o),
(245,384,cs),
(249,384,ls),
(255,384,o),
(258,381,o),
(258,374,cs),
(258,369,o),
(249,358,o),
(232,342,cs),
(214,326,o),
(185,300,o),
(146,264,c),
(146,788,l),
(146,788,l),
(146,807,o),
(138,817,o),
(121,817,cs),
(17,817,o),
(-36,801,o),
(-36,781,cs),
(-36,762,o),
(-14,761,o),
(2,761,cs),
(52,761,ls),
(67,761,o),
(74,753,o),
(74,738,cs),
(74,702,o),
(75,659,o),
(76,600,cs),
(77,540,o),
(78,466,o),
(78,370,cs),
(78,292,o),
(77,245,o),
(76,214,cs),
(74,181,o),
(73,146,o),
(73,95,cs),
(73,56,o),
(62,50,o),
(29,43,cs),
(6,39,o),
(-5,40,o),
(-5,17,cs),
(-5,-2,o),
(15,-6,o),
(38,-6,cs),
(47,-6,o),
(59,-6,o),
(74,-5,cs),
(88,-4,o),
(100,-4,o),
(111,-4,cs),
(136,-4,o),
(157,-4,o),
(174,-5,cs),
(190,-6,o),
(205,-6,o),
(220,-6,cs),
(236,-6,o),
(249,-3,o),
(249,16,cs),
(249,32,o),
(238,41,o),
(207,41,cs),
(146,41,l),
(146,185,l),
(179,216,l),
(191,194,o),
(219,137,o),
(260,63,cs),
(305,-18,o),
(335,-59,o),
(349,-59,cs)
);
},
{
closed = 1;
nodes = (
(269,-240,o),
(310,-190,o),
(310,-136,cs),
(310,-83,o),
(280,-64,o),
(253,-64,cs),
(216,-64,o),
(201,-89,o),
(201,-113,cs),
(201,-145,o),
(237,-144,o),
(237,-161,cs),
(237,-178,o),
(235,-191,o),
(231,-199,cs),
(226,-208,o),
(224,-215,o),
(224,-221,cs),
(224,-238,o),
(238,-240,o),
(245,-240,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
51 50 27 1 4 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 6 7 1 7 6 1 104 0 0 1 4 1 0 4 104 0 2 0 3 8 2 3 92 0 7 7 14 67 0 1 1 15 67 0 4 4 5 84 0 5 5 16 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 6 7 1 7 6 1 104 0 1 0 7 1 0 102 0 0 4 7 0 4 102 0 2 0 3 8 2 3 92 0 7 7 14 67 0 4 4 5 84 0 5 5 16 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 6 7 1 7 6 1 104 0 1 0 7 1 0 102 0 0 4 7 0 4 102 0 2 0 3 8 2 3 92 0 8 0 9 8 9 87 0 7 7 14 67 0 4 4 5 84 0 5 5 16 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
112 110 104 102 98 96 90 87 66 58 54 52 44 42 36 34 52 53 10 28
CALL[ ]	/* CallFunction */";
};
width = 533;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(411,-59,o),
(448,-58,o),
(474,-57,cs),
(499,-56,o),
(512,-51,o),
(512,-44,cs),
(512,-37,o),
(508,-33,o),
(501,-31,cs),
(493,-30,o),
(481,-29,o),
(466,-29,cs),
(438,-29,o),
(417,-28,o),
(404,-27,cs),
(391,-26,o),
(382,-23,o),
(378,-18,cs),
(308,68,o),
(232,233,o),
(220,268,c),
(254,298,o),
(293,336,o),
(345,386,cs),
(352,393,o),
(363,398,o),
(376,399,cs),
(432,403,o),
(457,406,o),
(457,419,cs),
(457,431,o),
(387,431,o),
(303,431,cs),
(253,431,o),
(228,426,o),
(228,417,cs),
(228,409,o),
(235,405,o),
(248,404,cs),
(282,402,ls),
(290,402,o),
(294,399,o),
(294,394,cs),
(294,385,o),
(241,329,o),
(131,234,c),
(131,788,ls),
(131,807,o),
(123,817,o),
(106,817,cs),
(8,817,o),
(-41,802,o),
(-41,791,cs),
(-41,788,o),
(-38,785,o),
(-33,784,cs),
(-28,782,o),
(-21,781,o),
(-13,781,cs),
(67,781,ls),
(82,781,o),
(89,773,o),
(89,758,cs),
(89,719,o),
(90,674,o),
(91,612,cs),
(92,550,o),
(93,471,o),
(93,370,cs),
(93,286,o),
(92,234,o),
(91,202,cs),
(89,167,o),
(88,130,o),
(88,75,cs),
(88,36,o),
(81,28,o),
(44,23,cs),
(21,20,o),
(6,17,o),
(0,15,cs),
(-7,12,o),
(-10,9,o),
(-10,6,cs),
(-10,-2,o),
(1,-6,o),
(23,-6,cs),
(32,-6,o),
(44,-6,o),
(59,-5,cs),
(73,-4,o),
(85,-4,o),
(96,-4,cs),
(121,-4,o),
(142,-4,o),
(159,-5,cs),
(175,-6,o),
(190,-6,o),
(205,-6,cs),
(213,-6,o),
(220,-5,o),
(226,-3,cs),
(231,-1,o),
(234,2,o),
(234,5,cs),
(234,9,o),
(231,13,o),
(225,16,cs),
(218,19,o),
(207,21,o),
(192,21,cs),
(131,21,l),
(131,185,l),
(184,235,l),
(196,212,o),
(225,152,o),
(270,72,cs),
(312,-5,o),
(348,-59,o),
(364,-59,cs)
);
},
{
closed = 1;
nodes = (
(272,-204,o),
(288,-154,o),
(288,-125,cs),
(288,-80,o),
(266,-68,o),
(246,-68,cs),
(219,-68,o),
(206,-85,o),
(206,-102,cs),
(206,-134,o),
(242,-129,o),
(242,-146,cs),
(242,-153,o),
(240,-161,o),
(237,-170,cs),
(233,-180,o),
(231,-187,o),
(231,-192,cs),
(231,-199,o),
(238,-204,o),
(245,-204,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
51 50 29 0 4 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 2 0 3 8 2 3 91 0 6 6 7 83 0 7 7 14 67 0 0 0 1 83 0 1 1 15 67 0 4 4 5 83 0 5 5 16 67 0 8 8 9 83 0 9 9 17 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 0 4 1 0 91 0 2 0 3 8 2 3 91 0 6 6 7 83 0 7 7 14 67 0 4 4 5 83 0 5 5 16 67 0 8 8 9 83 0 9 9 17 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 0 4 1 0 91 0 2 0 3 8 2 3 91 0 8 0 9 8 9 87 0 6 6 7 83 0 7 7 14 67 0 4 4 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
111 109 103 101 97 95 89 86 66 58 54 52 44 41 38 36 50 54 10 17
CALL[ ]	/* CallFunction */";
};
width = 510;
}
);
note = kcommaaccent;
unicode = 311;
},
{
glyphname = kgreenlandic;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(439,-59,o),
(492,-56,o),
(525,-51,cs),
(558,-46,o),
(575,-39,o),
(575,-28,cs),
(575,3,o),
(514,3,o),
(494,3,cs),
(466,3,o),
(445,4,o),
(432,5,cs),
(418,6,o),
(409,9,o),
(406,14,cs),
(337,120,o),
(280,246,o),
(273,268,c),
(296,288,o),
(317,311,o),
(362,354,cs),
(369,361,o),
(380,366,o),
(393,367,cs),
(437,370,o),
(468,375,o),
(486,381,cs),
(503,386,o),
(512,394,o),
(512,403,cs),
(512,430,o),
(452,431,o),
(320,431,cs),
(271,431,o),
(242,425,o),
(242,397,cs),
(242,384,o),
(248,377,o),
(259,377,cs),
(268,377,ls),
(271,377,o),
(273,376,o),
(273,374,cs),
(273,371,o),
(266,362,o),
(253,348,cs),
(240,333,o),
(217,311,o),
(184,282,c),
(184,428,l),
(184,428,l),
(184,447,o),
(176,457,o),
(159,457,cs),
(78,457,o),
(-5,444,o),
(-5,415,cs),
(-5,390,o),
(25,389,o),
(40,389,cs),
(69,389,ls),
(84,389,o),
(91,381,o),
(91,366,cs),
(91,306,o),
(92,298,o),
(92,238,cs),
(92,195,o),
(92,161,o),
(91,135,cs),
(90,108,o),
(90,88,o),
(90,75,cs),
(90,68,o),
(87,63,o),
(81,62,cs),
(75,61,o),
(63,58,o),
(46,55,cs),
(31,52,o),
(26,41,o),
(26,26,cs),
(26,2,o),
(49,-6,o),
(76,-6,cs),
(85,-6,o),
(97,-6,o),
(112,-5,cs),
(126,-4,o),
(138,-4,o),
(149,-4,cs),
(174,-4,o),
(195,-4,o),
(212,-5,cs),
(228,-6,o),
(243,-6,o),
(258,-6,cs),
(274,-6,o),
(287,2,o),
(287,21,cs),
(287,45,o),
(276,53,o),
(245,53,cs),
(184,53,l),
(184,185,l),
(203,205,l),
(218,178,o),
(247,117,o),
(281,57,cs),
(324,-20,o),
(352,-59,o),
(366,-59,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
50 49 26 0 4 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
6 1 0 1 4 1 0 4 104 0 2 0 3 2 3 88 0 7 7 23 67 0 1 1 15 67 0 4 4 5 84 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 7 1 7 106 0 1 6 1 106 0 6 0 6 106 0 0 4 0 106 0 2 0 3 2 3 88 0 4 4 5 84 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
95 93 86 82 65 57 53 51 43 41 35 33 51 52 8 17
CALL[ ]	/* CallFunction */";
};
width = 572;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(443,-59,o),
(489,-57,o),
(519,-53,cs),
(549,-50,o),
(564,-43,o),
(564,-34,cs),
(564,-11,o),
(532,-9,o),
(497,-9,cs),
(469,-9,o),
(448,-8,o),
(435,-7,cs),
(421,-6,o),
(412,-3,o),
(409,2,cs),
(331,110,o),
(277,235,o),
(266,268,c),
(282,282,o),
(298,298,o),
(311,310,cs),
(326,325,o),
(346,343,o),
(370,366,cs),
(377,373,o),
(388,378,o),
(401,379,cs),
(441,382,o),
(468,386,o),
(483,391,cs),
(497,395,o),
(504,401,o),
(504,409,cs),
(504,431,o),
(433,431,o),
(328,431,cs),
(303,431,o),
(284,429,o),
(271,426,cs),
(258,422,o),
(251,416,o),
(251,407,cs),
(251,396,o),
(255,384,o),
(274,384,cs),
(278,384,ls),
(285,384,o),
(289,381,o),
(289,374,cs),
(289,370,o),
(280,359,o),
(263,342,cs),
(245,324,o),
(216,298,o),
(177,264,c),
(177,428,l),
(177,428,l),
(177,447,o),
(169,457,o),
(152,457,cs),
(74,457,o),
(-5,444,o),
(-5,421,cs),
(-5,402,o),
(17,401,o),
(33,401,cs),
(83,401,ls),
(98,401,o),
(105,393,o),
(105,378,cs),
(105,313,o),
(106,301,o),
(106,238,cs),
(106,195,o),
(106,161,o),
(105,135,cs),
(104,108,o),
(104,88,o),
(104,75,cs),
(104,52,o),
(96,50,o),
(60,43,cs),
(37,39,o),
(26,30,o),
(26,16,cs),
(26,-1,o),
(46,-6,o),
(69,-6,cs),
(78,-6,o),
(90,-6,o),
(105,-5,cs),
(119,-4,o),
(131,-4,o),
(142,-4,cs),
(167,-4,o),
(188,-4,o),
(205,-5,cs),
(221,-6,o),
(236,-6,o),
(251,-6,cs),
(267,-6,o),
(280,0,o),
(280,15,cs),
(280,34,o),
(269,41,o),
(238,41,cs),
(177,41,l),
(177,185,l),
(210,216,l),
(222,194,o),
(250,137,o),
(291,63,cs),
(319,13,o),
(361,-59,o),
(380,-59,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
51 50 27 0 4 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 6 1 0 1 6 0 104 0 0 4 1 0 4 102 0 2 0 3 2 3 88 0 7 7 23 67 0 1 1 15 67 0 4 4 5 84 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 7 1 7 106 0 1 6 1 106 0 6 0 6 106 0 0 4 0 106 0 2 0 3 2 3 88 0 4 4 5 84 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
93 91 85 82 66 58 54 52 44 42 37 34 52 52 8 17
CALL[ ]	/* CallFunction */";
};
width = 561;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(447,-59,o),
(484,-58,o),
(510,-57,cs),
(535,-56,o),
(548,-51,o),
(548,-44,cs),
(548,-37,o),
(544,-33,o),
(537,-31,cs),
(529,-30,o),
(517,-29,o),
(502,-29,cs),
(474,-29,o),
(453,-28,o),
(440,-27,cs),
(427,-26,o),
(418,-23,o),
(414,-18,cs),
(344,68,o),
(268,233,o),
(256,268,c),
(290,298,o),
(329,336,o),
(381,386,cs),
(388,393,o),
(399,398,o),
(412,399,cs),
(468,403,o),
(493,406,o),
(493,419,cs),
(493,431,o),
(423,431,o),
(339,431,cs),
(289,431,o),
(264,426,o),
(264,417,cs),
(264,409,o),
(271,405,o),
(284,404,cs),
(318,402,ls),
(326,402,o),
(330,399,o),
(330,394,cs),
(330,385,o),
(277,329,o),
(167,234,c),
(167,428,ls),
(167,447,o),
(159,457,o),
(142,457,cs),
(44,457,o),
(-5,442,o),
(-5,431,cs),
(-5,428,o),
(-2,425,o),
(3,424,cs),
(8,422,o),
(15,421,o),
(23,421,cs),
(103,421,ls),
(118,421,o),
(125,413,o),
(125,398,cs),
(125,326,o),
(126,307,o),
(126,238,cs),
(126,195,o),
(126,161,o),
(125,135,cs),
(124,108,o),
(124,88,o),
(124,75,cs),
(124,36,o),
(117,28,o),
(80,23,cs),
(57,20,o),
(42,17,o),
(36,15,cs),
(29,12,o),
(26,9,o),
(26,6,cs),
(26,-2,o),
(37,-6,o),
(59,-6,cs),
(68,-6,o),
(80,-6,o),
(95,-5,cs),
(109,-4,o),
(121,-4,o),
(132,-4,cs),
(157,-4,o),
(178,-4,o),
(195,-5,cs),
(211,-6,o),
(226,-6,o),
(241,-6,cs),
(249,-6,o),
(256,-5,o),
(262,-3,cs),
(267,-1,o),
(270,2,o),
(270,5,cs),
(270,9,o),
(267,13,o),
(261,16,cs),
(254,19,o),
(243,21,o),
(228,21,cs),
(167,21,l),
(167,185,l),
(220,235,l),
(232,212,o),
(263,152,o),
(306,72,cs),
(348,-5,o),
(384,-59,o),
(400,-59,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
51 50 29 0 4 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 2 0 3 2 3 87 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 0 4 4 5 83 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 7 0 6 0 7 6 91 0 1 0 0 4 1 0 91 0 2 0 3 2 3 87 0 4 4 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
93 91 85 82 66 58 54 52 44 41 38 36 50 54 8 17
CALL[ ]	/* CallFunction */";
};
width = 546;
}
);
note = kgreenlandic;
unicode = 312;
},
{
glyphname = l;
kernLeft = l;
kernRight = l;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(266,-1,o),
(278,22,o),
(278,34,cs),
(278,55,o),
(268,75,o),
(221,75,cs),
(186,75,l),
(186,118,o),
(186,184,o),
(185,274,cs),
(184,363,o),
(184,481,o),
(184,626,cs),
(184,635,o),
(184,651,o),
(185,675,cs),
(185,699,o),
(185,728,o),
(185,761,cs),
(185,821,o),
(179,821,o),
(135,821,cs),
(-5,821,o),
(-29,808,o),
(-29,779,cs),
(-29,771,o),
(-25,765,o),
(-18,761,cs),
(-11,757,o),
(1,755,o),
(18,755,cs),
(61,755,ls),
(80,755,o),
(94,746,o),
(94,723,cs),
(94,683,o),
(94,643,o),
(95,602,cs),
(95,553,o),
(95,490,o),
(95,413,cs),
(95,337,o),
(95,275,o),
(94,226,cs),
(93,177,o),
(91,138,o),
(90,103,cs),
(89,84,o),
(73,72,o),
(53,71,cs),
(16,69,ls),
(3,68,o),
(-10,60,o),
(-10,39,cs),
(-10,18,o),
(6,0,o),
(42,0,cs),
(53,0,o),
(65,0,o),
(80,1,cs),
(95,2,o),
(111,2,o),
(129,2,cs),
(128,2,o),
(197,-1,o),
(233,-1,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
31 1 0 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 3 4 0 4 3 0 104 0 4 4 12 67 2 1 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 3 4 0 4 3 0 104 0 2 0 1 0 2 96 0 4 4 14 67 0 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
38 62 37 164 38 5 20
CALL[ ]	/* CallFunction */";
};
width = 269;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(254,-1,o),
(264,14,o),
(264,25,cs),
(264,33,o),
(261,40,o),
(255,47,cs),
(248,54,o),
(235,57,o),
(214,57,cs),
(168,57,l),
(168,102,o),
(168,170,o),
(167,262,cs),
(166,354,o),
(166,475,o),
(166,626,cs),
(166,628,o),
(167,681,o),
(167,785,cs),
(167,820,o),
(147,820,o),
(110,820,cs),
(77,820,o),
(-30,819,o),
(-30,791,cs),
(-30,775,o),
(-12,770,o),
(16,770,cs),
(78,770,ls),
(95,770,o),
(97,763,o),
(97,742,cs),
(97,702,o),
(97,659,o),
(98,613,cs),
(98,560,o),
(98,493,o),
(98,413,cs),
(98,333,o),
(98,267,o),
(97,214,cs),
(96,162,o),
(94,122,o),
(93,85,cs),
(92,66,o),
(76,56,o),
(46,54,cs),
(13,52,ls),
(6,52,o),
(-8,46,o),
(-8,26,cs),
(-8,20,o),
(-5,14,o),
(2,9,cs),
(8,3,o),
(19,0,o),
(35,0,cs),
(58,0,o),
(91,2,o),
(126,2,cs),
(162,2,o),
(200,-1,o),
(226,-1,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 0 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
53 61 52 196 40 5 20
CALL[ ]	/* CallFunction */";
};
width = 256;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(227,-1,o),
(234,0,o),
(238,2,cs),
(242,4,o),
(244,7,o),
(244,10,cs),
(244,14,o),
(242,18,o),
(237,22,cs),
(232,25,o),
(221,27,o),
(204,27,cs),
(143,27,l),
(143,74,o),
(143,146,o),
(142,243,cs),
(141,340,o),
(141,467,o),
(141,626,cs),
(141,628,o),
(142,681,o),
(142,785,cs),
(142,820,o),
(127,820,o),
(100,820,cs),
(47,820,o),
(-30,816,o),
(-30,799,cs),
(-30,796,o),
(-27,793,o),
(-20,792,cs),
(-14,791,o),
(-5,790,o),
(6,790,cs),
(83,790,ls),
(100,790,o),
(102,783,o),
(102,762,cs),
(102,719,o),
(102,673,o),
(103,624,cs),
(103,568,o),
(103,498,o),
(103,413,cs),
(103,327,o),
(103,254,o),
(102,196,cs),
(101,139,o),
(99,95,o),
(98,55,cs),
(97,37,o),
(76,27,o),
(36,25,cs),
(13,24,ls),
(-1,23,o),
(-8,19,o),
(-8,11,cs),
(-8,7,o),
(-6,4,o),
(-1,3,cs),
(3,1,o),
(12,0,o),
(25,0,cs),
(48,0,o),
(81,2,o),
(116,2,cs),
(152,2,o),
(190,-1,o),
(216,-1,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
33 1 0 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
53 61 51 196 40 5 20
CALL[ ]	/* CallFunction */";
};
width = 237;
}
);
note = l;
unicode = 108;
},
{
glyphname = lacute;
kernLeft = l;
kernRight = l;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(301,-1,o),
(313,22,o),
(313,34,cs),
(313,55,o),
(303,75,o),
(256,75,cs),
(221,75,l),
(221,118,o),
(221,184,o),
(220,274,cs),
(219,363,o),
(219,481,o),
(219,626,cs),
(219,635,o),
(219,651,o),
(220,675,cs),
(220,699,o),
(220,728,o),
(220,761,cs),
(220,821,o),
(214,821,o),
(170,821,cs),
(30,821,o),
(6,808,o),
(6,779,cs),
(6,771,o),
(10,765,o),
(17,761,cs),
(24,757,o),
(36,755,o),
(53,755,cs),
(96,755,ls),
(115,755,o),
(129,746,o),
(129,723,cs),
(129,683,o),
(129,643,o),
(130,602,cs),
(130,553,o),
(130,490,o),
(130,413,cs),
(130,337,o),
(130,275,o),
(129,226,cs),
(128,177,o),
(126,138,o),
(125,103,cs),
(124,84,o),
(108,72,o),
(88,71,cs),
(51,69,ls),
(38,68,o),
(25,60,o),
(25,39,cs),
(25,18,o),
(41,0,o),
(77,0,cs),
(88,0,o),
(100,0,o),
(115,1,cs),
(130,2,o),
(146,2,o),
(164,2,cs),
(163,2,o),
(232,-1,o),
(268,-1,cs)
);
},
{
closed = 1;
nodes = (
(128,830,o),
(204,882,o),
(204,931,cs),
(204,943,o),
(194,972,o),
(154,972,cs),
(127,972,o),
(99,943,o),
(79,915,cs),
(60,889,o),
(44,857,o),
(44,852,cs),
(47,833,o),
(62,830,o),
(81,830,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
8 1 0 1 49 1 2 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 6 2 6 5 2 104 0 6 6 12 67 4 1 2 2 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 6 2 6 5 2 104 0 4 2 3 2 4 96 0 6 6 14 67 0 2 2 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 62 37 164 42 38 36 7 22
CALL[ ]	/* CallFunction */";
};
width = 269;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(254,-1,o),
(264,14,o),
(264,25,cs),
(264,33,o),
(261,40,o),
(255,47,cs),
(248,54,o),
(235,57,o),
(214,57,cs),
(168,57,l),
(168,102,o),
(168,170,o),
(167,262,cs),
(166,354,o),
(166,475,o),
(166,626,cs),
(166,628,o),
(167,681,o),
(167,785,cs),
(167,820,o),
(147,820,o),
(110,820,cs),
(77,820,o),
(-30,819,o),
(-30,791,cs),
(-30,775,o),
(-12,770,o),
(16,770,cs),
(78,770,ls),
(95,770,o),
(97,763,o),
(97,742,cs),
(97,702,o),
(97,659,o),
(98,613,cs),
(98,560,o),
(98,493,o),
(98,413,cs),
(98,333,o),
(98,267,o),
(97,214,cs),
(96,162,o),
(94,122,o),
(93,85,cs),
(92,66,o),
(76,56,o),
(46,54,cs),
(13,52,ls),
(6,52,o),
(-8,46,o),
(-8,26,cs),
(-8,20,o),
(-5,14,o),
(2,9,cs),
(8,3,o),
(19,0,o),
(35,0,cs),
(58,0,o),
(91,2,o),
(126,2,cs),
(162,2,o),
(200,-1,o),
(226,-1,cs)
);
},
{
closed = 1;
nodes = (
(112,847,o),
(192,901,o),
(192,938,cs),
(192,954,o),
(182,972,o),
(155,972,cs),
(135,972,o),
(108,948,o),
(88,924,cs),
(69,902,o),
(51,873,o),
(51,865,cs),
(52,849,o),
(65,847,o),
(76,847,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
8 1 0 1 50 1 2 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 5 6 83 0 6 6 12 67 4 1 2 2 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 5 6 83 0 6 6 14 67 4 1 2 2 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
53 61 52 196 42 38 36 7 22
CALL[ ]	/* CallFunction */";
};
width = 256;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(227,-1,o),
(234,0,o),
(238,2,cs),
(242,4,o),
(244,7,o),
(244,10,cs),
(244,14,o),
(242,18,o),
(237,22,cs),
(232,25,o),
(221,27,o),
(204,27,cs),
(143,27,l),
(143,74,o),
(143,146,o),
(142,243,cs),
(141,340,o),
(141,467,o),
(141,626,cs),
(141,628,o),
(142,681,o),
(142,785,cs),
(142,820,o),
(127,820,o),
(100,820,cs),
(47,820,o),
(-30,816,o),
(-30,799,cs),
(-30,796,o),
(-27,793,o),
(-20,792,cs),
(-14,791,o),
(-5,790,o),
(6,790,cs),
(83,790,ls),
(100,790,o),
(102,783,o),
(102,762,cs),
(102,719,o),
(102,673,o),
(103,624,cs),
(103,568,o),
(103,498,o),
(103,413,cs),
(103,327,o),
(103,254,o),
(102,196,cs),
(101,139,o),
(99,95,o),
(98,55,cs),
(97,37,o),
(76,27,o),
(36,25,cs),
(13,24,ls),
(-1,23,o),
(-8,19,o),
(-8,11,cs),
(-8,7,o),
(-6,4,o),
(-1,3,cs),
(3,1,o),
(12,0,o),
(25,0,cs),
(48,0,o),
(81,2,o),
(116,2,cs),
(152,2,o),
(190,-1,o),
(216,-1,cs)
);
},
{
closed = 1;
nodes = (
(85,875,o),
(175,928,o),
(175,950,cs),
(175,969,o),
(167,972,o),
(156,972,cs),
(136,972,o),
(61,911,o),
(61,886,cs),
(61,879,o),
(64,875,o),
(69,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
48 1 2 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 5 6 83 0 6 6 12 67 4 1 2 2 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 5 6 83 0 6 6 14 67 4 1 2 2 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
53 61 51 196 42 37 36 7 22
CALL[ ]	/* CallFunction */";
};
width = 237;
}
);
note = lacute;
unicode = 314;
},
{
glyphname = lcaron;
kernLeft = l;
kernRight = l;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(301,-1,o),
(313,22,o),
(313,34,cs),
(313,55,o),
(303,75,o),
(256,75,cs),
(221,75,l),
(221,118,o),
(221,184,o),
(220,274,cs),
(219,363,o),
(219,481,o),
(219,626,cs),
(219,635,o),
(219,651,o),
(220,675,cs),
(220,699,o),
(220,728,o),
(220,761,cs),
(220,821,o),
(214,821,o),
(170,821,cs),
(30,821,o),
(6,808,o),
(6,779,cs),
(6,771,o),
(10,765,o),
(17,761,cs),
(24,757,o),
(36,755,o),
(53,755,cs),
(96,755,ls),
(115,755,o),
(129,746,o),
(129,723,cs),
(129,683,o),
(129,643,o),
(130,602,cs),
(130,553,o),
(130,490,o),
(130,413,cs),
(130,337,o),
(130,275,o),
(129,226,cs),
(128,177,o),
(126,138,o),
(125,103,cs),
(124,84,o),
(108,72,o),
(88,71,cs),
(51,69,ls),
(38,68,o),
(25,60,o),
(25,39,cs),
(25,18,o),
(41,0,o),
(77,0,cs),
(88,0,o),
(100,0,o),
(115,1,cs),
(130,2,o),
(146,2,o),
(164,2,cs),
(163,2,o),
(232,-1,o),
(268,-1,cs)
);
},
{
closed = 1;
nodes = (
(317,649,o),
(380,691,o),
(380,768,cs),
(380,825,o),
(344,849,o),
(312,849,cs),
(268,849,o),
(252,819,o),
(252,791,cs),
(252,760,o),
(288,758,o),
(288,741,cs),
(288,721,o),
(286,706,o),
(281,697,cs),
(276,687,o),
(273,679,o),
(273,672,cs),
(273,649,o),
(292,649,o),
(299,649,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
53 1 2 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 5 6 1 6 5 1 104 0 6 6 12 67 0 1 1 0 83 0 0 0 20 67 4 1 2 2 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 5 6 1 6 5 1 104 0 4 2 3 2 4 96 0 0 0 1 2 0 1 91 0 6 6 14 67 0 2 2 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
76 74 68 65 51 49 44 34 30 28 38 34 7 17
CALL[ ]	/* CallFunction */";
};
width = 269;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(254,-1,o),
(264,14,o),
(264,25,cs),
(264,33,o),
(261,40,o),
(255,47,cs),
(248,54,o),
(235,57,o),
(214,57,cs),
(168,57,l),
(168,102,o),
(168,170,o),
(167,262,cs),
(166,354,o),
(166,475,o),
(166,626,cs),
(166,628,o),
(167,681,o),
(167,785,cs),
(167,820,o),
(147,820,o),
(110,820,cs),
(77,820,o),
(-30,819,o),
(-30,791,cs),
(-30,775,o),
(-12,770,o),
(16,770,cs),
(78,770,ls),
(95,770,o),
(97,763,o),
(97,742,cs),
(97,702,o),
(97,659,o),
(98,613,cs),
(98,560,o),
(98,493,o),
(98,413,cs),
(98,333,o),
(98,267,o),
(97,214,cs),
(96,162,o),
(94,122,o),
(93,85,cs),
(92,66,o),
(76,56,o),
(46,54,cs),
(13,52,ls),
(6,52,o),
(-8,46,o),
(-8,26,cs),
(-8,20,o),
(-5,14,o),
(2,9,cs),
(8,3,o),
(19,0,o),
(35,0,cs),
(58,0,o),
(91,2,o),
(126,2,cs),
(162,2,o),
(200,-1,o),
(226,-1,cs)
);
},
{
closed = 1;
nodes = (
(279,674,o),
(320,724,o),
(320,778,cs),
(320,831,o),
(290,850,o),
(263,850,cs),
(226,850,o),
(211,825,o),
(211,801,cs),
(211,769,o),
(247,770,o),
(247,753,cs),
(247,736,o),
(245,723,o),
(241,715,cs),
(236,706,o),
(234,699,o),
(234,693,cs),
(234,676,o),
(248,674,o),
(255,674,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
35 1 0 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 4 83 0 4 4 12 67 0 6 6 5 83 0 5 5 20 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 0 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 36 53 61 52 196 41 7 33
CALL[ ]	/* CallFunction */";
};
width = 256;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(227,-1,o),
(234,0,o),
(238,2,cs),
(242,4,o),
(244,7,o),
(244,10,cs),
(244,14,o),
(242,18,o),
(237,22,cs),
(232,25,o),
(221,27,o),
(204,27,cs),
(143,27,l),
(143,74,o),
(143,146,o),
(142,243,cs),
(141,340,o),
(141,467,o),
(141,626,cs),
(141,628,o),
(142,681,o),
(142,785,cs),
(142,820,o),
(127,820,o),
(100,820,cs),
(47,820,o),
(-30,816,o),
(-30,799,cs),
(-30,796,o),
(-27,793,o),
(-20,792,cs),
(-14,791,o),
(-5,790,o),
(6,790,cs),
(83,790,ls),
(100,790,o),
(102,783,o),
(102,762,cs),
(102,719,o),
(102,673,o),
(103,624,cs),
(103,568,o),
(103,498,o),
(103,413,cs),
(103,327,o),
(103,254,o),
(102,196,cs),
(101,139,o),
(99,95,o),
(98,55,cs),
(97,37,o),
(76,27,o),
(36,25,cs),
(13,24,ls),
(-1,23,o),
(-8,19,o),
(-8,11,cs),
(-8,7,o),
(-6,4,o),
(-1,3,cs),
(3,1,o),
(12,0,o),
(25,0,cs),
(48,0,o),
(81,2,o),
(116,2,cs),
(152,2,o),
(190,-1,o),
(216,-1,cs)
);
},
{
closed = 1;
nodes = (
(259,715,o),
(279,782,o),
(279,806,cs),
(279,833,o),
(262,850,o),
(237,850,cs),
(216,850,o),
(201,835,o),
(201,816,cs),
(201,793,o),
(227,784,o),
(227,772,cs),
(227,765,o),
(224,757,o),
(218,750,cs),
(211,742,o),
(208,735,o),
(208,730,cs),
(208,722,o),
(217,715,o),
(224,715,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
33 1 0 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 4 83 0 4 4 12 67 0 6 6 5 83 0 5 5 20 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 0 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 36 53 61 51 196 40 7 22
CALL[ ]	/* CallFunction */";
};
width = 237;
}
);
note = lcaron;
unicode = 318;
},
{
glyphname = lcommaaccent;
kernLeft = l;
kernRight = l;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(301,-1,o),
(313,22,o),
(313,34,cs),
(313,55,o),
(303,75,o),
(256,75,cs),
(221,75,l),
(221,118,o),
(221,184,o),
(220,274,cs),
(219,363,o),
(219,481,o),
(219,626,cs),
(219,635,o),
(219,651,o),
(220,675,cs),
(220,699,o),
(220,728,o),
(220,761,cs),
(220,821,o),
(214,821,o),
(170,821,cs),
(30,821,o),
(6,808,o),
(6,779,cs),
(6,771,o),
(10,765,o),
(17,761,cs),
(24,757,o),
(36,755,o),
(53,755,cs),
(96,755,ls),
(115,755,o),
(129,746,o),
(129,723,cs),
(129,683,o),
(129,643,o),
(130,602,cs),
(130,553,o),
(130,490,o),
(130,413,cs),
(130,337,o),
(130,275,o),
(129,226,cs),
(128,177,o),
(126,138,o),
(125,103,cs),
(124,84,o),
(108,72,o),
(88,71,cs),
(51,69,ls),
(38,68,o),
(25,60,o),
(25,39,cs),
(25,18,o),
(41,0,o),
(77,0,cs),
(88,0,o),
(100,0,o),
(115,1,cs),
(130,2,o),
(146,2,o),
(164,2,cs),
(163,2,o),
(232,-1,o),
(268,-1,cs)
);
},
{
closed = 1;
nodes = (
(138,-249,o),
(201,-207,o),
(201,-130,cs),
(201,-73,o),
(165,-49,o),
(133,-49,cs),
(89,-49,o),
(73,-79,o),
(73,-107,cs),
(73,-138,o),
(109,-140,o),
(109,-157,cs),
(109,-177,o),
(107,-192,o),
(102,-201,cs),
(97,-211,o),
(94,-219,o),
(94,-226,cs),
(94,-249,o),
(113,-249,o),
(120,-249,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
53 1 2 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 5 6 2 6 5 2 104 0 6 6 12 67 4 1 2 2 3 84 0 3 3 13 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 5 6 2 6 5 2 104 0 0 0 1 0 1 87 0 6 6 12 67 4 1 2 2 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 5 6 2 6 5 2 104 0 4 2 3 2 4 96 0 0 0 1 0 1 87 0 6 6 14 67 0 2 2 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
76 74 68 65 51 49 44 34 30 28 38 34 7 17
CALL[ ]	/* CallFunction */";
};
width = 271;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(254,-1,o),
(264,14,o),
(264,25,cs),
(264,33,o),
(261,40,o),
(255,47,cs),
(248,54,o),
(235,57,o),
(214,57,cs),
(168,57,l),
(168,102,o),
(168,170,o),
(167,262,cs),
(166,354,o),
(166,475,o),
(166,626,cs),
(166,628,o),
(167,681,o),
(167,785,cs),
(167,820,o),
(147,820,o),
(110,820,cs),
(77,820,o),
(-30,819,o),
(-30,791,cs),
(-30,775,o),
(-12,770,o),
(16,770,cs),
(78,770,ls),
(95,770,o),
(97,763,o),
(97,742,cs),
(97,702,o),
(97,659,o),
(98,613,cs),
(98,560,o),
(98,493,o),
(98,413,cs),
(98,333,o),
(98,267,o),
(97,214,cs),
(96,162,o),
(94,122,o),
(93,85,cs),
(92,66,o),
(76,56,o),
(46,54,cs),
(13,52,ls),
(6,52,o),
(-8,46,o),
(-8,26,cs),
(-8,20,o),
(-5,14,o),
(2,9,cs),
(8,3,o),
(19,0,o),
(35,0,cs),
(58,0,o),
(91,2,o),
(126,2,cs),
(162,2,o),
(200,-1,o),
(226,-1,cs)
);
},
{
closed = 1;
nodes = (
(144,-230,o),
(185,-180,o),
(185,-126,cs),
(185,-73,o),
(155,-54,o),
(128,-54,cs),
(91,-54,o),
(76,-79,o),
(76,-103,cs),
(76,-135,o),
(112,-134,o),
(112,-151,cs),
(112,-168,o),
(110,-181,o),
(106,-189,cs),
(101,-198,o),
(99,-205,o),
(99,-211,cs),
(99,-228,o),
(113,-230,o),
(120,-230,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
35 1 0 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 67 0 5 5 6 83 0 6 6 25 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 5 0 6 5 6 87 0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 5 0 6 5 6 87 0 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 36 53 61 52 196 41 7 33
CALL[ ]	/* CallFunction */";
};
width = 257;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(227,-1,o),
(234,0,o),
(238,2,cs),
(242,4,o),
(244,7,o),
(244,10,cs),
(244,14,o),
(242,18,o),
(237,22,cs),
(232,25,o),
(221,27,o),
(204,27,cs),
(143,27,l),
(143,74,o),
(143,146,o),
(142,243,cs),
(141,340,o),
(141,467,o),
(141,626,cs),
(141,628,o),
(142,681,o),
(142,785,cs),
(142,820,o),
(127,820,o),
(100,820,cs),
(47,820,o),
(-30,816,o),
(-30,799,cs),
(-30,796,o),
(-27,793,o),
(-20,792,cs),
(-14,791,o),
(-5,790,o),
(6,790,cs),
(83,790,ls),
(100,790,o),
(102,783,o),
(102,762,cs),
(102,719,o),
(102,673,o),
(103,624,cs),
(103,568,o),
(103,498,o),
(103,413,cs),
(103,327,o),
(103,254,o),
(102,196,cs),
(101,139,o),
(99,95,o),
(98,55,cs),
(97,37,o),
(76,27,o),
(36,25,cs),
(13,24,ls),
(-1,23,o),
(-8,19,o),
(-8,11,cs),
(-8,7,o),
(-6,4,o),
(-1,3,cs),
(3,1,o),
(12,0,o),
(25,0,cs),
(48,0,o),
(81,2,o),
(116,2,cs),
(152,2,o),
(190,-1,o),
(216,-1,cs)
);
},
{
closed = 1;
nodes = (
(146,-201,o),
(162,-151,o),
(162,-122,cs),
(162,-77,o),
(140,-65,o),
(120,-65,cs),
(93,-65,o),
(80,-82,o),
(80,-99,cs),
(80,-131,o),
(116,-126,o),
(116,-143,cs),
(116,-150,o),
(114,-158,o),
(111,-167,cs),
(107,-177,o),
(105,-184,o),
(105,-189,cs),
(105,-196,o),
(112,-201,o),
(119,-201,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
33 1 0 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 67 0 5 5 6 83 0 6 6 17 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 5 0 6 5 6 87 0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 5 0 6 5 6 87 0 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 36 53 61 51 196 40 7 22
CALL[ ]	/* CallFunction */";
};
width = 237;
}
);
note = lcommaaccent;
unicode = 316;
},
{
glyphname = ldot;
kernLeft = l;
lastChange = "2024-06-14 09:00:45 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(301,-1,o),
(313,22,o),
(313,34,cs),
(313,55,o),
(303,75,o),
(256,75,cs),
(221,75,l),
(221,118,o),
(221,184,o),
(220,274,cs),
(219,363,o),
(219,481,o),
(219,626,cs),
(219,635,o),
(219,651,o),
(220,675,cs),
(220,699,o),
(220,728,o),
(220,761,cs),
(220,821,o),
(214,821,o),
(170,821,cs),
(30,821,o),
(6,808,o),
(6,779,cs),
(6,771,o),
(10,765,o),
(17,761,cs),
(24,757,o),
(36,755,o),
(53,755,cs),
(96,755,ls),
(115,755,o),
(129,746,o),
(129,723,cs),
(129,683,o),
(129,643,o),
(130,602,cs),
(130,553,o),
(130,490,o),
(130,413,cs),
(130,337,o),
(130,275,o),
(129,226,cs),
(128,177,o),
(126,138,o),
(125,103,cs),
(124,84,o),
(108,72,o),
(88,71,cs),
(51,69,ls),
(38,68,o),
(25,60,o),
(25,39,cs),
(25,18,o),
(41,0,o),
(77,0,cs),
(88,0,o),
(100,0,o),
(115,1,cs),
(130,2,o),
(146,2,o),
(164,2,cs),
(163,2,o),
(232,-1,o),
(268,-1,cs)
);
},
{
closed = 1;
nodes = (
(355,333,o),
(392,348,o),
(392,403,cs),
(392,439,o),
(364,464,o),
(332,464,cs),
(284,464,o),
(266,426,o),
(266,399,cs),
(266,356,o),
(292,333,o),
(325,333,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
31 1 0 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 3 4 5 4 3 5 104 0 4 4 12 67 0 6 6 5 83 0 5 5 23 67 2 1 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 3 4 5 4 3 5 104 0 5 0 6 0 5 6 91 0 4 4 12 67 2 1 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 3 4 5 4 3 5 104 0 2 0 1 0 2 96 0 5 0 6 0 5 6 91 0 4 4 14 67 0 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 40 38 62 37 164 38 7 22
CALL[ ]	/* CallFunction */";
};
width = 350;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(254,-1,o),
(264,14,o),
(264,25,cs),
(264,33,o),
(261,40,o),
(255,47,cs),
(248,54,o),
(235,57,o),
(214,57,cs),
(168,57,l),
(168,102,o),
(168,170,o),
(167,262,cs),
(166,354,o),
(166,475,o),
(166,626,cs),
(166,628,o),
(167,681,o),
(167,785,cs),
(167,820,o),
(147,820,o),
(110,820,cs),
(77,820,o),
(-30,819,o),
(-30,791,cs),
(-30,775,o),
(-12,770,o),
(16,770,cs),
(78,770,ls),
(95,770,o),
(97,763,o),
(97,742,cs),
(97,702,o),
(97,659,o),
(98,613,cs),
(98,560,o),
(98,493,o),
(98,413,cs),
(98,333,o),
(98,267,o),
(97,214,cs),
(96,162,o),
(94,122,o),
(93,85,cs),
(92,66,o),
(76,56,o),
(46,54,cs),
(13,52,ls),
(6,52,o),
(-8,46,o),
(-8,26,cs),
(-8,20,o),
(-5,14,o),
(2,9,cs),
(8,3,o),
(19,0,o),
(35,0,cs),
(58,0,o),
(91,2,o),
(126,2,cs),
(162,2,o),
(200,-1,o),
(226,-1,cs)
);
},
{
closed = 1;
nodes = (
(301,338,o),
(332,351,o),
(332,399,cs),
(332,430,o),
(310,451,o),
(283,451,cs),
(241,451,o),
(227,415,o),
(227,395,cs),
(227,359,o),
(249,338,o),
(276,338,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
35 1 0 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 4 83 0 4 4 12 67 0 6 6 5 83 0 5 5 15 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 0 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
36 38 53 61 52 196 41 7 33
CALL[ ]	/* CallFunction */";
};
width = 317;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(227,-1,o),
(234,0,o),
(238,2,cs),
(242,4,o),
(244,7,o),
(244,10,cs),
(244,14,o),
(242,18,o),
(237,22,cs),
(232,25,o),
(221,27,o),
(204,27,cs),
(143,27,l),
(143,74,o),
(143,146,o),
(142,243,cs),
(141,340,o),
(141,467,o),
(141,626,cs),
(141,628,o),
(142,681,o),
(142,785,cs),
(142,820,o),
(127,820,o),
(100,820,cs),
(47,820,o),
(-30,816,o),
(-30,799,cs),
(-30,796,o),
(-27,793,o),
(-20,792,cs),
(-14,791,o),
(-5,790,o),
(6,790,cs),
(83,790,ls),
(100,790,o),
(102,783,o),
(102,762,cs),
(102,719,o),
(102,673,o),
(103,624,cs),
(103,568,o),
(103,498,o),
(103,413,cs),
(103,327,o),
(103,254,o),
(102,196,cs),
(101,139,o),
(99,95,o),
(98,55,cs),
(97,37,o),
(76,27,o),
(36,25,cs),
(13,24,ls),
(-1,23,o),
(-8,19,o),
(-8,11,cs),
(-8,7,o),
(-6,4,o),
(-1,3,cs),
(3,1,o),
(12,0,o),
(25,0,cs),
(48,0,o),
(81,2,o),
(116,2,cs),
(152,2,o),
(190,-1,o),
(216,-1,cs)
);
},
{
closed = 1;
nodes = (
(298,357,o),
(314,377,o),
(314,397,cs),
(314,416,o),
(302,435,o),
(271,435,cs),
(239,435,o),
(227,412,o),
(227,395,cs),
(227,378,o),
(238,357,o),
(269,357,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
33 1 0 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 4 83 0 4 4 12 67 0 6 6 5 83 0 5 5 15 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 0 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
36 36 53 61 51 196 40 7 22
CALL[ ]	/* CallFunction */";
};
width = 299;
}
);
note = ldot;
unicode = 320;
},
{
glyphname = lslash;
kernLeft = l;
kernRight = l;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(299,-1,o),
(311,22,o),
(311,34,cs),
(311,55,o),
(301,75,o),
(254,75,cs),
(219,75,l),
(219,135,o),
(218,237,o),
(217,390,c),
(266,425,o),
(309,458,o),
(322,471,c),
(326,476,o),
(331,481,o),
(331,492,cs),
(331,508,o),
(325,538,o),
(289,538,cs),
(286,538,o),
(278,534,o),
(264,525,cs),
(250,516,o),
(234,505,o),
(217,492,c),
(217,626,ls),
(217,635,o),
(217,651,o),
(218,675,cs),
(218,699,o),
(218,728,o),
(218,761,cs),
(218,821,o),
(212,821,o),
(168,821,cs),
(28,821,o),
(4,808,o),
(4,779,cs),
(4,771,o),
(8,765,o),
(15,761,cs),
(22,757,o),
(34,755,o),
(51,755,cs),
(94,755,ls),
(113,755,o),
(127,746,o),
(127,723,cs),
(127,685,o),
(127,646,o),
(128,606,cs),
(128,560,o),
(128,501,o),
(128,429,c),
(81,396,o),
(38,366,o),
(17,351,cs),
(13,348,o),
(12,338,o),
(12,330,cs),
(12,306,o),
(29,289,o),
(53,289,cs),
(57,289,o),
(66,293,o),
(80,301,cs),
(93,308,o),
(109,318,o),
(128,329,c),
(127,225,o),
(126,159,o),
(123,103,cs),
(122,84,o),
(106,72,o),
(86,71,cs),
(49,69,ls),
(36,68,o),
(23,60,o),
(23,39,cs),
(23,18,o),
(39,0,o),
(75,0,cs),
(86,0,o),
(98,0,o),
(113,1,cs),
(128,2,o),
(144,2,o),
(162,2,cs),
(161,2,o),
(230,-1,o),
(266,-1,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
61 49 18 4 4 4 0 46 1 1 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 5 6 0 6 5 0 104 0 0 4 6 0 4 102 0 4 1 6 4 1 102 0 6 6 12 67 3 1 1 1 2 84 0 2 2 13 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 5 6 0 6 5 0 104 0 0 4 6 0 4 102 0 4 1 6 4 1 102 0 3 1 2 1 3 96 0 6 6 14 67 0 1 1 2 84 0 2 2 13 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 63 39 37 164 45 38 7 22
CALL[ ]	/* CallFunction */";
};
width = 268;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(262,-1,o),
(272,14,o),
(272,25,cs),
(272,33,o),
(269,40,o),
(263,47,cs),
(256,54,o),
(243,57,o),
(222,57,cs),
(176,57,l),
(176,102,o),
(176,170,o),
(175,262,cs),
(174,354,o),
(174,475,o),
(174,626,cs),
(174,628,o),
(175,681,o),
(175,785,cs),
(175,820,o),
(155,820,o),
(118,820,cs),
(85,820,o),
(-22,819,o),
(-22,791,cs),
(-22,775,o),
(-4,770,o),
(24,770,cs),
(86,770,ls),
(103,770,o),
(105,763,o),
(105,742,cs),
(105,702,o),
(105,659,o),
(106,613,cs),
(106,560,o),
(106,493,o),
(106,413,cs),
(106,333,o),
(106,267,o),
(105,214,cs),
(104,162,o),
(102,122,o),
(101,85,cs),
(100,66,o),
(84,56,o),
(54,54,cs),
(21,52,ls),
(14,52,o),
(0,46,o),
(0,26,cs),
(0,20,o),
(3,14,o),
(10,9,cs),
(16,3,o),
(27,0,o),
(43,0,cs),
(66,0,o),
(99,2,o),
(134,2,cs),
(170,2,o),
(208,-1,o),
(234,-1,cs)
);
},
{
closed = 1;
nodes = (
(48,295,o),
(92,320,o),
(166,373,cs),
(233,420,o),
(278,453,o),
(307,477,cs),
(314,483,o),
(318,490,o),
(318,499,cs),
(318,514,o),
(313,532,o),
(288,532,cs),
(284,532,o),
(232,498,o),
(168,452,cs),
(101,404,o),
(41,362,o),
(16,345,cs),
(9,341,o),
(8,332,o),
(8,325,cs),
(8,306,o),
(21,295,o),
(38,295,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
59 1 2 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 5 1 5 0 1 104 0 1 2 5 1 2 102 0 5 5 6 83 0 6 6 12 67 4 1 2 2 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 0 5 1 5 0 1 104 0 1 2 5 1 2 102 0 5 5 6 83 0 6 6 14 67 4 1 2 2 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
53 61 52 196 45 42 38 7 22
CALL[ ]	/* CallFunction */";
};
width = 264;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(249,-1,o),
(256,0,o),
(260,2,cs),
(264,4,o),
(266,7,o),
(266,10,cs),
(266,14,o),
(264,18,o),
(259,22,cs),
(254,25,o),
(243,27,o),
(226,27,cs),
(165,27,l),
(165,61,o),
(165,109,o),
(164,170,cs),
(163,231,o),
(163,307,o),
(163,398,c),
(188,415,o),
(211,432,o),
(233,449,cs),
(255,465,o),
(273,478,o),
(286,487,cs),
(297,495,o),
(300,503,o),
(300,510,cs),
(300,518,o),
(296,522,o),
(287,522,cs),
(281,522,o),
(222,480,o),
(163,439,c),
(163,626,ls),
(163,628,o),
(164,681,o),
(164,785,cs),
(164,820,o),
(149,820,o),
(122,820,cs),
(69,820,o),
(-8,816,o),
(-8,799,cs),
(-8,796,o),
(-5,793,o),
(2,792,cs),
(8,791,o),
(17,790,o),
(28,790,cs),
(105,790,ls),
(122,790,o),
(124,783,o),
(124,762,cs),
(124,719,o),
(124,673,o),
(125,624,cs),
(125,568,o),
(125,498,o),
(125,413,c),
(15,335,ls),
(7,330,o),
(3,324,o),
(3,317,cs),
(3,309,o),
(8,305,o),
(17,305,cs),
(22,305,o),
(35,312,o),
(56,325,cs),
(76,338,o),
(99,353,o),
(125,371,c),
(125,233,o),
(123,126,o),
(120,55,cs),
(119,37,o),
(98,27,o),
(58,25,cs),
(35,24,ls),
(21,23,o),
(14,19,o),
(14,11,cs),
(14,7,o),
(16,4,o),
(21,3,cs),
(25,1,o),
(34,0,o),
(47,0,cs),
(70,0,o),
(103,2,o),
(138,2,cs),
(174,2,o),
(212,-1,o),
(238,-1,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
60 52 19 6 4 4 0 47 1 1 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 5 4 5 0 4 104 0 4 1 5 4 1 102 0 5 5 6 83 0 6 6 12 67 3 1 1 1 2 83 0 2 2 13 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 0 5 4 5 0 4 104 0 4 1 5 4 1 102 0 5 5 6 83 0 6 6 14 67 3 1 1 1 2 83 0 2 2 13 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
53 59 40 51 196 42 42 7 22
CALL[ ]	/* CallFunction */";
};
width = 258;
}
);
note = lslash;
unicode = 322;
},
{
glyphname = m;
kernLeft = m;
kernRight = m;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(708,-21,o),
(727,-19,o),
(815,-19,cs),
(842,-18,o),
(855,-1,o),
(855,16,cs),
(855,28,o),
(849,54,o),
(804,54,cs),
(740,54,l),
(740,282,l),
(740,282,l),
(740,395,o),
(683,444,o),
(607,444,cs),
(544,444,o),
(491,412,o),
(452,347,c),
(431,405,o),
(390,434,o),
(329,434,cs),
(264,434,o),
(210,400,o),
(186,341,c),
(183,406,ls),
(182,423,o),
(177,428,o),
(166,428,cs),
(114,428,o),
(74,425,o),
(45,420,cs),
(16,414,o),
(2,403,o),
(2,388,cs),
(2,377,o),
(6,369,o),
(14,363,cs),
(22,357,o),
(38,354,o),
(63,354,cs),
(76,354,ls),
(92,354,o),
(100,350,o),
(100,264,cs),
(100,196,o),
(91,117,o),
(89,108,cs),
(82,79,o),
(74,77,o),
(55,74,cs),
(35,71,o),
(26,57,o),
(26,41,cs),
(26,21,o),
(36,2,o),
(61,2,cs),
(161,2,o),
(234,1,o),
(252,1,cs),
(284,1,o),
(290,25,o),
(290,37,cs),
(290,58,o),
(277,77,o),
(234,77,cs),
(189,77,l),
(189,197,ls),
(189,303,o),
(246,356,o),
(320,356,cs),
(351,356,o),
(368,326,o),
(370,265,cs),
(371,250,o),
(371,236,o),
(371,223,cs),
(371,210,o),
(371,203,o),
(371,202,cs),
(371,183,o),
(372,164,o),
(373,146,cs),
(374,128,o),
(374,116,o),
(374,109,cs),
(374,98,o),
(373,92,o),
(352,88,cs),
(342,86,ls),
(333,83,o),
(320,74,o),
(320,50,cs),
(320,27,o),
(332,9,o),
(367,9,cs),
(379,9,o),
(432,10,o),
(526,10,cs),
(545,10,o),
(554,22,o),
(554,47,cs),
(554,62,o),
(548,83,o),
(517,83,cs),
(461,83,l),
(461,262,l),
(485,313,o),
(531,366,o),
(588,366,cs),
(607,366,o),
(623,355,o),
(634,333,cs),
(645,310,o),
(651,273,o),
(651,220,cs),
(651,165,o),
(647,108,o),
(644,89,cs),
(641,61,o),
(633,58,o),
(621,58,cs),
(615,58,ls),
(594,58,o),
(583,44,o),
(583,21,cs),
(583,-10,o),
(597,-21,o),
(653,-21,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
112 1 3 10 118 113 35 3 4 3 2 66
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
112 1 3 10 118 113 35 3 4 9 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 12 values pushed */
112 1 3 10 118 113 35 3 4 6 2 66
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
9 6 2 3 3 10 83 11 1 10 10 15 67 9 6 2 3 3 12 83 0 12 12 15 67 7 1 4 4 5 84 8 1 5 5 13 67 2 1 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 9 3 4 3 9 4 104 11 1 10 3 3 10 79 0 12 6 1 3 9 12 3 91 7 1 4 4 5 84 8 1 5 5 13 67 2 1 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 12 0 3 6 12 3 91 11 1 10 9 1 6 4 10 6 91 7 1 4 4 5 84 8 1 5 5 13 67 2 1 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 12 0 3 6 12 3 91 11 1 10 9 1 6 4 10 6 91 7 1 4 4 5 84 0 5 5 13 67 7 1 4 4 8 84 0 8 8 13 67 2 1 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 10 11 3 11 10 3 104 0 12 0 3 6 12 3 91 0 11 9 1 6 4 11 6 91 0 4 4 5 83 0 5 5 13 67 0 7 7 8 84 0 8 8 13 67 2 1 0 0 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
122 120 117 115 110 108 104 101 84 77 73 71 66 64 115 37 39 52 118 32 13 21
CALL[ ]	/* CallFunction */";
};
width = 838;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(697,-21,o),
(718,-19,o),
(801,-19,cs),
(828,-18,o),
(841,-7,o),
(841,8,cs),
(841,13,o),
(838,19,o),
(832,26,cs),
(826,33,o),
(812,36,o),
(790,36,cs),
(733,36,l),
(733,282,l),
(733,282,l),
(733,395,o),
(676,444,o),
(600,444,cs),
(537,444,o),
(484,412,o),
(445,347,c),
(424,405,o),
(383,434,o),
(322,434,cs),
(257,434,o),
(203,400,o),
(179,341,c),
(176,406,ls),
(175,423,o),
(170,428,o),
(159,428,cs),
(55,428,o),
(2,419,o),
(2,397,cs),
(2,382,o),
(26,375,o),
(75,375,cs),
(88,375,ls),
(108,375,o),
(114,347,o),
(114,264,cs),
(114,180,o),
(106,113,o),
(103,90,cs),
(98,55,o),
(89,56,o),
(55,56,cs),
(36,56,o),
(29,42,o),
(29,31,cs),
(29,18,o),
(37,2,o),
(56,2,cs),
(158,2,o),
(230,1,o),
(250,1,cs),
(274,1,o),
(281,13,o),
(281,24,cs),
(281,40,o),
(268,59,o),
(225,59,cs),
(182,59,l),
(182,215,ls),
(182,321,o),
(242,374,o),
(316,374,cs),
(363,374,o),
(381,337,o),
(384,265,cs),
(385,250,o),
(385,236,o),
(385,223,cs),
(385,210,o),
(385,203,o),
(385,202,cs),
(385,177,o),
(385,158,o),
(386,145,cs),
(386,132,o),
(386,120,o),
(386,109,cs),
(386,86,o),
(380,70,o),
(349,67,cs),
(339,66,ls),
(324,65,o),
(315,53,o),
(315,37,cs),
(315,14,o),
(329,9,o),
(362,9,cs),
(374,9,o),
(428,10,o),
(523,10,cs),
(535,10,o),
(545,19,o),
(545,36,cs),
(545,48,o),
(539,65,o),
(508,65,cs),
(454,65,l),
(454,280,l),
(477,331,o),
(524,384,o),
(588,384,cs),
(616,384,o),
(636,372,o),
(648,347,cs),
(659,322,o),
(665,279,o),
(665,220,cs),
(665,165,o),
(660,82,o),
(658,71,cs),
(655,43,o),
(648,41,o),
(635,40,cs),
(605,38,ls),
(586,37,o),
(577,27,o),
(577,10,cs),
(577,-1,o),
(582,-9,o),
(591,-14,cs),
(600,-19,o),
(618,-21,o),
(646,-21,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
114 1 3 11 120 115 34 3 4 3 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 12 values pushed */
114 1 3 11 120 115 34 3 4 6 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
10 6 2 3 3 13 83 0 13 13 15 67 10 6 2 3 3 11 83 12 1 11 11 15 67 9 7 2 4 4 5 83 8 1 5 5 13 67 2 1 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 13 11 3 13 79 12 1 11 10 6 2 3 4 11 3 91 9 7 2 4 4 5 83 8 1 5 5 13 67 2 1 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 13 0 3 6 13 3 91 12 1 11 10 1 6 4 11 6 91 9 7 2 4 4 5 83 8 1 5 5 13 67 2 1 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 9 4 0 4 9 96 0 13 0 3 6 13 3 91 12 1 11 10 1 6 4 11 6 91 7 1 4 4 5 83 8 1 5 5 13 67 2 1 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 9 4 0 4 9 96 0 12 11 6 12 79 0 13 0 3 6 13 3 91 0 11 10 1 6 4 11 6 91 7 1 4 4 5 83 0 5 5 13 67 7 1 4 4 8 83 0 8 8 13 67 2 1 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 12 11 6 12 79 0 13 0 3 6 13 3 91 0 11 10 1 6 4 11 6 91 0 4 4 5 83 0 5 5 13 67 9 1 7 7 8 83 0 8 8 13 67 2 1 0 0 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
124 122 119 117 112 109 105 102 92 89 85 78 74 72 67 65 116 37 42 20 116 32 14 21
CALL[ ]	/* CallFunction */";
};
width = 825;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(683,-21,o),
(705,-19,o),
(781,-19,cs),
(808,-18,o),
(821,-14,o),
(821,-6,cs),
(821,-3,o),
(818,0,o),
(812,3,cs),
(806,5,o),
(792,6,o),
(770,6,cs),
(723,6,l),
(723,282,ls),
(723,395,o),
(666,444,o),
(590,444,cs),
(527,444,o),
(474,412,o),
(435,347,c),
(414,405,o),
(373,434,o),
(312,434,cs),
(247,434,o),
(193,400,o),
(169,341,c),
(166,406,ls),
(165,423,o),
(160,428,o),
(149,428,cs),
(51,428,o),
(2,418,o),
(2,407,cs),
(2,399,o),
(26,395,o),
(75,395,cs),
(108,395,ls),
(130,395,o),
(134,354,o),
(134,264,cs),
(134,165,o),
(126,87,o),
(123,60,cs),
(118,19,o),
(115,31,o),
(55,26,cs),
(38,25,o),
(29,22,o),
(29,15,cs),
(29,8,o),
(38,2,o),
(49,2,cs),
(153,2,o),
(228,1,o),
(247,1,cs),
(261,1,o),
(268,5,o),
(268,12,cs),
(268,16,o),
(264,20,o),
(256,24,cs),
(248,27,o),
(233,29,o),
(212,29,cs),
(172,29,l),
(172,245,ls),
(172,345,o),
(233,404,o),
(311,404,cs),
(380,404,o),
(400,357,o),
(404,265,cs),
(405,250,o),
(405,236,o),
(405,223,cs),
(405,210,o),
(405,203,o),
(405,202,cs),
(405,151,o),
(404,132,o),
(403,109,cs),
(400,71,o),
(400,40,o),
(372,37,cs),
(337,33,ls),
(318,31,o),
(308,27,o),
(308,21,cs),
(308,13,o),
(324,9,o),
(355,9,cs),
(367,9,o),
(419,10,o),
(510,10,cs),
(522,10,o),
(532,16,o),
(532,23,cs),
(532,26,o),
(530,29,o),
(525,32,cs),
(520,34,o),
(510,35,o),
(495,35,cs),
(444,35,l),
(444,310,l),
(469,366,o),
(512,414,o),
(588,414,cs),
(669,414,o),
(685,355,o),
(685,220,cs),
(685,152,o),
(680,55,o),
(678,41,cs),
(675,13,o),
(668,11,o),
(655,10,cs),
(591,5,ls),
(576,4,o),
(568,-1,o),
(568,-9,cs),
(568,-14,o),
(572,-17,o),
(581,-18,cs),
(590,-20,o),
(608,-21,o),
(636,-21,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
113 1 5 2 119 114 35 3 3 10 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 2 2 13 83 0 13 13 15 67 0 5 5 12 83 0 12 12 15 67 0 10 10 11 83 0 11 11 15 67 0 3 3 4 83 0 4 4 13 67 9 8 2 6 6 7 83 0 7 7 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 13 0 2 5 13 2 91 0 12 0 5 10 12 5 91 0 11 0 10 3 11 10 91 0 3 3 4 83 0 4 4 13 67 9 8 2 6 6 7 83 0 7 7 13 67 0 0 0 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
123 121 118 116 111 108 104 101 91 90 89 88 85 78 75 73 68 66 49 42 38 36 31 29 115 32 14 17
CALL[ ]	/* CallFunction */";
};
width = 807;
}
);
note = m;
unicode = 109;
},
{
glyphname = n;
kernLeft = eng;
kernRight = n;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(441,-31,o),
(469,-30,o),
(505,-30,cs),
(541,-30,o),
(570,-29,o),
(593,-29,cs),
(621,-29,o),
(644,-19,o),
(644,8,cs),
(644,41,o),
(609,47,o),
(581,47,cs),
(527,47,l),
(527,260,l),
(527,260,l),
(527,427,o),
(430,455,o),
(377,455,cs),
(314,455,o),
(242,420,o),
(216,357,c),
(213,415,ls),
(212,446,o),
(205,451,o),
(164,451,cs),
(10,451,o),
(-7,438,o),
(-7,411,cs),
(-7,399,o),
(-1,391,o),
(12,387,cs),
(24,382,o),
(42,380,o),
(65,380,cs),
(105,380,ls),
(117,380,o),
(123,367,o),
(123,340,cs),
(123,282,o),
(118,194,o),
(118,143,cs),
(118,134,o),
(117,89,o),
(90,89,cs),
(79,89,ls),
(67,89,o),
(43,82,o),
(43,51,cs),
(43,16,o),
(76,14,o),
(95,14,cs),
(98,14,o),
(104,14,o),
(113,14,cs),
(122,14,o),
(134,14,o),
(147,14,cs),
(160,14,o),
(173,14,o),
(188,15,cs),
(203,15,o),
(217,15,o),
(230,15,cs),
(243,15,o),
(253,15,o),
(262,15,cs),
(271,15,o),
(276,15,o),
(278,15,cs),
(307,15,o),
(321,30,o),
(321,53,cs),
(321,88,o),
(302,92,o),
(278,92,cs),
(211,92,l),
(211,186,ls),
(211,227,o),
(232,283,o),
(232,283,cs),
(249,324,o),
(286,377,o),
(345,377,cs),
(422,377,o),
(436,274,o),
(436,143,cs),
(436,118,o),
(435,105,o),
(434,86,cs),
(433,61,o),
(430,48,o),
(411,44,cs),
(392,40,o),
(380,30,o),
(380,7,cs),
(380,-20,o),
(402,-31,o),
(419,-31,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
94 1 3 2 25 1 0 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
8 1 7 6 1 2 3 7 2 91 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
8 1 7 6 1 2 3 7 2 91 0 0 0 1 0 1 87 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
8 1 7 6 1 2 3 7 2 91 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
39 38 58 56 148 42 47 150 32 9 24
CALL[ ]	/* CallFunction */";
};
width = 625;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(407,-31,o),
(468,-29,o),
(584,-29,cs),
(604,-29,o),
(621,-24,o),
(621,-4,cs),
(621,24,o),
(589,29,o),
(565,29,cs),
(511,29,l),
(511,260,l),
(511,260,l),
(511,424,o),
(418,455,o),
(360,455,cs),
(293,455,o),
(229,420,o),
(200,357,c),
(197,419,ls),
(196,446,o),
(193,451,o),
(158,451,cs),
(28,451,o),
(-6,443,o),
(-6,417,cs),
(-6,401,o),
(34,400,o),
(59,400,cs),
(111,400,ls),
(122,400,o),
(128,389,o),
(128,367,cs),
(128,356,o),
(123,275,o),
(123,125,cs),
(123,101,o),
(118,71,o),
(95,71,cs),
(75,71,ls),
(59,71,o),
(38,65,o),
(38,41,cs),
(38,16,o),
(60,14,o),
(81,14,cs),
(90,14,o),
(150,15,o),
(262,15,cs),
(289,15,o),
(301,19,o),
(301,42,cs),
(301,69,o),
(285,74,o),
(262,74,cs),
(195,74,l),
(195,186,ls),
(195,226,o),
(202,269,o),
(217,300,cs),
(240,351,o),
(285,395,o),
(341,395,cs),
(429,395,o),
(441,284,o),
(441,163,cs),
(441,162,o),
(441,152,o),
(441,133,cs),
(440,114,o),
(439,92,o),
(438,65,cs),
(435,33,o),
(428,30,o),
(395,26,c),
(383,23,o),
(367,16,o),
(367,-3,cs),
(367,-26,o),
(383,-31,o),
(400,-31,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
84 1 3 2 23 1 0 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
8 1 7 6 1 2 3 7 2 91 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
8 1 7 6 1 2 3 7 2 91 0 0 0 1 0 1 87 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
8 1 7 6 1 2 3 7 2 91 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 8 7 2 8 79 0 7 6 1 2 3 7 2 91 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 7 0 6 2 7 6 91 0 8 0 2 3 8 2 91 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
37 54 74 52 116 38 47 118 32 9 24
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(398,-31,o),
(431,-30,o),
(472,-30,cs),
(513,-30,o),
(546,-29,o),
(571,-29,cs),
(580,-29,o),
(588,-26,o),
(588,-18,cs),
(588,-3,o),
(562,-1,o),
(542,-1,cs),
(488,-1,l),
(488,260,ls),
(488,412,o),
(406,455,o),
(336,455,cs),
(268,455,o),
(208,418,o),
(177,357,c),
(174,425,ls),
(173,448,o),
(166,451,o),
(150,451,cs),
(49,451,o),
(-4,444,o),
(-4,431,cs),
(-4,426,o),
(2,423,o),
(15,422,cs),
(27,421,o),
(39,420,o),
(51,420,cs),
(120,420,ls),
(132,420,o),
(135,411,o),
(135,398,cs),
(135,300,o),
(132,210,o),
(130,95,cs),
(129,74,o),
(127,60,o),
(123,54,cs),
(119,48,o),
(112,45,o),
(102,44,cs),
(57,41,ls),
(41,40,o),
(30,33,o),
(30,24,cs),
(30,21,o),
(32,18,o),
(37,17,cs),
(42,15,o),
(50,14,o),
(61,14,cs),
(63,14,o),
(69,14,o),
(78,14,cs),
(87,14,o),
(98,14,o),
(111,14,cs),
(124,14,o),
(137,14,o),
(152,15,cs),
(166,15,o),
(179,15,o),
(192,15,cs),
(204,15,o),
(214,15,o),
(223,15,cs),
(232,15,o),
(237,15,o),
(239,15,cs),
(262,15,o),
(273,20,o),
(273,29,cs),
(273,41,o),
(258,44,o),
(239,44,cs),
(172,44,l),
(172,186,ls),
(172,235,o),
(172,280,o),
(195,329,cs),
(226,393,o),
(281,425,o),
(336,425,cs),
(441,425,o),
(448,305,o),
(448,196,cs),
(448,153,o),
(447,90,o),
(444,30,cs),
(444,3,o),
(420,1,o),
(372,-4,cs),
(357,-5,o),
(349,-10,o),
(349,-19,cs),
(349,-27,o),
(357,-31,o),
(373,-31,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
82 1 3 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
82 1 3 6 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
8 1 7 6 1 2 3 7 2 91 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
8 1 7 6 1 2 3 7 2 91 0 0 0 1 0 1 87 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
8 1 7 6 1 2 3 7 2 91 5 1 3 0 4 0 3 4 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 8 0 2 6 8 2 91 0 7 0 6 3 7 6 91 5 1 3 0 4 0 3 4 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
37 53 57 37 147 38 47 148 32 9 24
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = n;
unicode = 110;
},
{
glyphname = nacute;
kernLeft = eng;
kernRight = n;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(441,-31,o),
(469,-30,o),
(505,-30,cs),
(541,-30,o),
(570,-29,o),
(593,-29,cs),
(621,-29,o),
(644,-19,o),
(644,8,cs),
(644,41,o),
(609,47,o),
(581,47,cs),
(527,47,l),
(527,260,l),
(527,260,l),
(527,427,o),
(430,455,o),
(377,455,cs),
(314,455,o),
(242,420,o),
(216,357,c),
(213,415,ls),
(212,446,o),
(205,451,o),
(164,451,cs),
(10,451,o),
(-7,438,o),
(-7,411,cs),
(-7,399,o),
(-1,391,o),
(12,387,cs),
(24,382,o),
(42,380,o),
(65,380,cs),
(105,380,ls),
(117,380,o),
(123,367,o),
(123,340,cs),
(123,282,o),
(118,194,o),
(118,143,cs),
(118,134,o),
(117,89,o),
(90,89,cs),
(79,89,ls),
(67,89,o),
(43,82,o),
(43,51,cs),
(43,16,o),
(76,14,o),
(95,14,cs),
(98,14,o),
(104,14,o),
(113,14,cs),
(122,14,o),
(134,14,o),
(147,14,cs),
(160,14,o),
(173,14,o),
(188,15,cs),
(203,15,o),
(217,15,o),
(230,15,cs),
(243,15,o),
(253,15,o),
(262,15,cs),
(271,15,o),
(276,15,o),
(278,15,cs),
(307,15,o),
(321,30,o),
(321,53,cs),
(321,88,o),
(302,92,o),
(278,92,cs),
(211,92,l),
(211,186,ls),
(211,227,o),
(232,283,o),
(232,283,cs),
(249,324,o),
(286,377,o),
(345,377,cs),
(422,377,o),
(436,274,o),
(436,143,cs),
(436,118,o),
(435,105,o),
(434,86,cs),
(433,61,o),
(430,48,o),
(411,44,cs),
(392,40,o),
(380,30,o),
(380,7,cs),
(380,-20,o),
(402,-31,o),
(419,-31,cs)
);
},
{
closed = 1;
nodes = (
(339,500,o),
(374,523,o),
(413,557,cs),
(448,588,o),
(477,622,o),
(477,640,cs),
(477,665,o),
(450,687,o),
(407,688,cs),
(382,688,o),
(351,649,o),
(327,609,cs),
(307,574,o),
(285,527,o),
(285,522,cs),
(285,507,o),
(307,500,o),
(322,500,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
112 1 5 4 43 1 2 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 0 9 0 106 8 1 4 4 9 83 10 1 9 9 15 67 7 1 5 5 6 83 0 6 6 13 67 0 2 2 3 84 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 1 106 0 0 9 0 106 10 1 9 8 1 4 5 9 4 91 7 1 5 5 6 83 0 6 6 13 67 0 2 2 3 84 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 1 0 1 106 0 0 9 0 106 10 1 9 8 1 4 5 9 4 91 0 2 0 3 2 3 88 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 0 0 9 0 106 10 1 9 8 1 4 5 9 4 91 0 2 6 3 2 79 7 1 5 0 6 3 5 6 91 0 2 2 3 84 0 3 2 3 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
118 116 109 107 58 56 148 42 47 150 34 38 38 11 24
CALL[ ]	/* CallFunction */";
};
width = 625;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(407,-31,o),
(468,-29,o),
(584,-29,cs),
(604,-29,o),
(621,-24,o),
(621,-4,cs),
(621,24,o),
(589,29,o),
(565,29,cs),
(511,29,l),
(511,260,l),
(511,260,l),
(511,424,o),
(418,455,o),
(360,455,cs),
(293,455,o),
(229,420,o),
(200,357,c),
(197,419,ls),
(196,446,o),
(193,451,o),
(158,451,cs),
(28,451,o),
(-6,443,o),
(-6,417,cs),
(-6,401,o),
(34,400,o),
(59,400,cs),
(111,400,ls),
(122,400,o),
(128,389,o),
(128,367,cs),
(128,356,o),
(123,275,o),
(123,125,cs),
(123,101,o),
(118,71,o),
(95,71,cs),
(75,71,ls),
(59,71,o),
(38,65,o),
(38,41,cs),
(38,16,o),
(60,14,o),
(81,14,cs),
(90,14,o),
(150,15,o),
(262,15,cs),
(289,15,o),
(301,19,o),
(301,42,cs),
(301,69,o),
(285,74,o),
(262,74,cs),
(195,74,l),
(195,186,ls),
(195,226,o),
(202,269,o),
(217,300,cs),
(240,351,o),
(285,395,o),
(341,395,cs),
(429,395,o),
(441,284,o),
(441,163,cs),
(441,162,o),
(441,152,o),
(441,133,cs),
(440,114,o),
(439,92,o),
(438,65,cs),
(435,33,o),
(428,30,o),
(395,26,c),
(383,23,o),
(367,16,o),
(367,-3,cs),
(367,-26,o),
(383,-31,o),
(400,-31,cs)
);
},
{
closed = 1;
nodes = (
(336,504,o),
(441,603,o),
(441,632,cs),
(441,655,o),
(423,670,o),
(392,670,cs),
(374,670,o),
(345,636,o),
(323,600,cs),
(296,557,o),
(281,528,o),
(281,522,cs),
(281,509,o),
(295,504,o),
(306,504,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
102 1 5 4 41 1 2 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 0 9 0 106 8 1 4 4 9 83 10 1 9 9 15 67 7 1 5 5 6 83 0 6 6 13 67 0 2 2 3 84 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 1 106 0 0 9 0 106 10 1 9 8 1 4 5 9 4 91 7 1 5 5 6 83 0 6 6 13 67 0 2 2 3 84 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 1 0 1 106 0 0 9 0 106 10 1 9 8 1 4 5 9 4 91 0 2 0 3 2 3 88 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 0 0 9 0 106 10 1 9 8 1 4 5 9 4 91 0 2 6 3 2 79 7 1 5 0 6 3 5 6 91 0 2 2 3 84 0 3 2 3 72
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 1 106 0 0 10 0 106 0 10 9 4 10 79 0 9 8 1 4 5 9 4 91 0 2 6 3 2 79 7 1 5 0 6 3 5 6 91 0 2 2 3 84 0 3 2 3 72
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 1 106 0 0 10 0 106 0 9 0 8 4 9 8 91 0 10 0 4 5 10 4 91 0 2 6 3 2 79 7 1 5 0 6 3 5 6 91 0 2 2 3 84 0 3 2 3 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
106 104 99 96 74 52 116 38 47 118 34 40 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(398,-31,o),
(431,-30,o),
(472,-30,cs),
(513,-30,o),
(546,-29,o),
(571,-29,cs),
(580,-29,o),
(588,-26,o),
(588,-18,cs),
(588,-3,o),
(562,-1,o),
(542,-1,cs),
(488,-1,l),
(488,260,ls),
(488,412,o),
(406,455,o),
(336,455,cs),
(268,455,o),
(208,418,o),
(177,357,c),
(174,425,ls),
(173,448,o),
(166,451,o),
(150,451,cs),
(49,451,o),
(-4,444,o),
(-4,431,cs),
(-4,426,o),
(2,423,o),
(15,422,cs),
(27,421,o),
(39,420,o),
(51,420,cs),
(120,420,ls),
(132,420,o),
(135,411,o),
(135,398,cs),
(135,300,o),
(132,210,o),
(130,95,cs),
(129,74,o),
(127,60,o),
(123,54,cs),
(119,48,o),
(112,45,o),
(102,44,cs),
(57,41,ls),
(41,40,o),
(30,33,o),
(30,24,cs),
(30,21,o),
(32,18,o),
(37,17,cs),
(42,15,o),
(50,14,o),
(61,14,cs),
(63,14,o),
(69,14,o),
(78,14,cs),
(87,14,o),
(98,14,o),
(111,14,cs),
(124,14,o),
(137,14,o),
(152,15,cs),
(166,15,o),
(179,15,o),
(192,15,cs),
(204,15,o),
(214,15,o),
(223,15,cs),
(232,15,o),
(237,15,o),
(239,15,cs),
(262,15,o),
(273,20,o),
(273,29,cs),
(273,41,o),
(258,44,o),
(239,44,cs),
(172,44,l),
(172,186,ls),
(172,235,o),
(172,280,o),
(195,329,cs),
(226,393,o),
(281,425,o),
(336,425,cs),
(441,425,o),
(448,305,o),
(448,196,cs),
(448,153,o),
(447,90,o),
(444,30,cs),
(444,3,o),
(420,1,o),
(372,-4,cs),
(357,-5,o),
(349,-10,o),
(349,-19,cs),
(349,-27,o),
(357,-31,o),
(373,-31,cs)
);
},
{
closed = 1;
nodes = (
(303,510,o),
(390,597,o),
(390,618,cs),
(390,637,o),
(382,640,o),
(371,640,cs),
(351,640,o),
(276,546,o),
(276,521,cs),
(276,514,o),
(279,510,o),
(284,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
82 1 3 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
82 1 3 6 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 10 9 10 106 0 9 7 9 106 6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 10 9 10 106 0 9 7 9 106 8 1 7 6 1 2 3 7 2 92 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 10 9 10 106 0 9 7 9 106 8 1 7 6 1 2 3 7 2 92 0 0 0 1 0 1 87 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 10 9 10 106 0 9 7 9 106 8 1 7 6 1 2 3 7 2 92 5 1 3 0 4 0 3 4 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 10 9 10 106 0 9 8 9 106 0 8 0 2 6 8 2 92 0 7 0 6 3 7 6 91 5 1 3 0 4 0 3 4 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
104 102 97 95 37 53 57 37 147 38 47 148 32 11 24
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = nacute;
unicode = 324;
},
{
glyphname = napostrophe;
kernLeft = eng;
kernRight = n;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(441,-31,o),
(469,-30,o),
(505,-30,cs),
(541,-30,o),
(570,-29,o),
(593,-29,cs),
(621,-29,o),
(644,-19,o),
(644,8,cs),
(644,41,o),
(609,47,o),
(581,47,cs),
(527,47,l),
(527,260,l),
(527,260,l),
(527,427,o),
(430,455,o),
(377,455,cs),
(314,455,o),
(242,420,o),
(216,357,c),
(213,415,ls),
(212,446,o),
(205,451,o),
(164,451,cs),
(10,451,o),
(-7,438,o),
(-7,411,cs),
(-7,399,o),
(-1,391,o),
(12,387,cs),
(24,382,o),
(42,380,o),
(65,380,cs),
(105,380,ls),
(117,380,o),
(123,367,o),
(123,340,cs),
(123,282,o),
(118,194,o),
(118,143,cs),
(118,134,o),
(117,89,o),
(90,89,cs),
(79,89,ls),
(67,89,o),
(43,82,o),
(43,51,cs),
(43,16,o),
(76,14,o),
(95,14,cs),
(98,14,o),
(104,14,o),
(113,14,cs),
(122,14,o),
(134,14,o),
(147,14,cs),
(160,14,o),
(173,14,o),
(188,15,cs),
(203,15,o),
(217,15,o),
(230,15,cs),
(243,15,o),
(253,15,o),
(262,15,cs),
(271,15,o),
(276,15,o),
(278,15,cs),
(307,15,o),
(321,30,o),
(321,53,cs),
(321,88,o),
(302,92,o),
(278,92,cs),
(211,92,l),
(211,186,ls),
(211,227,o),
(232,283,o),
(232,283,cs),
(249,324,o),
(286,377,o),
(345,377,cs),
(422,377,o),
(436,274,o),
(436,143,cs),
(436,118,o),
(435,105,o),
(434,86,cs),
(433,61,o),
(430,48,o),
(411,44,cs),
(392,40,o),
(380,30,o),
(380,7,cs),
(380,-20,o),
(402,-31,o),
(419,-31,cs)
);
},
{
closed = 1;
nodes = (
(9,471,o),
(31,551,o),
(31,610,cs),
(31,646,o),
(23,680,o),
(-18,680,cs),
(-60,680,o),
(-65,635,o),
(-65,609,cs),
(-65,565,o),
(-60,531,o),
(-50,507,cs),
(-40,483,o),
(-29,471,o),
(-17,471,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
112 1 5 4 43 1 2 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
11 1 0 0 1 9 0 1 91 8 1 4 4 9 83 10 1 9 9 15 67 7 1 5 5 6 83 0 6 6 13 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
11 1 0 0 1 9 0 1 91 10 1 9 8 1 4 5 9 4 91 7 1 5 5 6 83 0 6 6 13 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
11 1 0 0 1 9 0 1 91 10 1 9 8 1 4 5 9 4 91 0 2 0 3 2 3 87 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
11 1 0 0 1 9 0 1 91 10 1 9 8 1 4 5 9 4 91 0 2 6 3 2 79 7 1 5 0 6 3 5 6 91 0 2 2 3 83 0 3 2 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 118 116 109 107 101 98 88 85 77 68 64 62 52 50 35 26 20 18 11 9 0 17 1 17 12 15
CALL[ ]	/* CallFunction */";
};
width = 625;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(407,-31,o),
(468,-29,o),
(584,-29,cs),
(604,-29,o),
(621,-24,o),
(621,-4,cs),
(621,24,o),
(589,29,o),
(565,29,cs),
(511,29,l),
(511,260,l),
(511,260,l),
(511,424,o),
(418,455,o),
(360,455,cs),
(293,455,o),
(229,420,o),
(200,357,c),
(197,419,ls),
(196,446,o),
(193,451,o),
(158,451,cs),
(28,451,o),
(-6,443,o),
(-6,417,cs),
(-6,401,o),
(34,400,o),
(59,400,cs),
(111,400,ls),
(122,400,o),
(128,389,o),
(128,367,cs),
(128,356,o),
(123,275,o),
(123,125,cs),
(123,101,o),
(118,71,o),
(95,71,cs),
(75,71,ls),
(59,71,o),
(38,65,o),
(38,41,cs),
(38,16,o),
(60,14,o),
(81,14,cs),
(90,14,o),
(150,15,o),
(262,15,cs),
(289,15,o),
(301,19,o),
(301,42,cs),
(301,69,o),
(285,74,o),
(262,74,cs),
(195,74,l),
(195,186,ls),
(195,226,o),
(202,269,o),
(217,300,cs),
(240,351,o),
(285,395,o),
(341,395,cs),
(429,395,o),
(441,284,o),
(441,163,cs),
(441,162,o),
(441,152,o),
(441,133,cs),
(440,114,o),
(439,92,o),
(438,65,cs),
(435,33,o),
(428,30,o),
(395,26,c),
(383,23,o),
(367,16,o),
(367,-3,cs),
(367,-26,o),
(383,-31,o),
(400,-31,cs)
);
},
{
closed = 1;
nodes = (
(5,479,o),
(12,606,o),
(12,621,cs),
(12,645,o),
(11,682,o),
(-26,682,cs),
(-62,682,o),
(-63,632,o),
(-63,615,cs),
(-63,584,o),
(-58,479,o),
(-25,479,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
85 1 3 2 24 1 0 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
11 1 9 0 10 7 9 10 91 6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
11 1 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
11 1 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 0 0 0 1 0 1 87 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
11 1 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
11 1 9 0 10 8 9 10 91 0 8 7 2 8 79 0 7 6 1 2 3 7 2 91 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
11 1 9 0 10 8 9 10 91 0 7 0 6 2 7 6 91 0 8 0 2 3 8 2 91 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
95 94 105 103 94 113 95 113 37 54 74 52 116 38 47 118 33 12 35
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(398,-31,o),
(431,-30,o),
(472,-30,cs),
(513,-30,o),
(546,-29,o),
(571,-29,cs),
(580,-29,o),
(588,-26,o),
(588,-18,cs),
(588,-3,o),
(562,-1,o),
(542,-1,cs),
(488,-1,l),
(488,260,ls),
(488,412,o),
(406,455,o),
(336,455,cs),
(268,455,o),
(208,418,o),
(177,357,c),
(174,425,ls),
(173,448,o),
(166,451,o),
(150,451,cs),
(49,451,o),
(-4,444,o),
(-4,431,cs),
(-4,426,o),
(2,423,o),
(15,422,cs),
(27,421,o),
(39,420,o),
(51,420,cs),
(120,420,ls),
(132,420,o),
(135,411,o),
(135,398,cs),
(135,300,o),
(132,210,o),
(130,95,cs),
(129,74,o),
(127,60,o),
(123,54,cs),
(119,48,o),
(112,45,o),
(102,44,cs),
(57,41,ls),
(41,40,o),
(30,33,o),
(30,24,cs),
(30,21,o),
(32,18,o),
(37,17,cs),
(42,15,o),
(50,14,o),
(61,14,cs),
(63,14,o),
(69,14,o),
(78,14,cs),
(87,14,o),
(98,14,o),
(111,14,cs),
(124,14,o),
(137,14,o),
(152,15,cs),
(166,15,o),
(179,15,o),
(192,15,cs),
(204,15,o),
(214,15,o),
(223,15,cs),
(232,15,o),
(237,15,o),
(239,15,cs),
(262,15,o),
(273,20,o),
(273,29,cs),
(273,41,o),
(258,44,o),
(239,44,cs),
(172,44,l),
(172,186,ls),
(172,235,o),
(172,280,o),
(195,329,cs),
(226,393,o),
(281,425,o),
(336,425,cs),
(441,425,o),
(448,305,o),
(448,196,cs),
(448,153,o),
(447,90,o),
(444,30,cs),
(444,3,o),
(420,1,o),
(372,-4,cs),
(357,-5,o),
(349,-10,o),
(349,-19,cs),
(349,-27,o),
(357,-31,o),
(373,-31,cs)
);
},
{
closed = 1;
nodes = (
(-30,510,o),
(-26,537,o),
(-22,562,cs),
(-20,578,o),
(-18,606,o),
(-18,621,cs),
(-18,636,o),
(-17,673,o),
(-41,673,cs),
(-61,673,o),
(-63,626,o),
(-63,606,cs),
(-63,586,o),
(-61,510,o),
(-40,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
82 1 3 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
82 1 3 6 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
11 1 9 0 10 7 9 10 91 6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
11 1 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
11 1 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 0 0 0 1 0 1 87 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
11 1 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 5 1 3 0 4 0 3 4 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
11 1 9 0 10 8 9 10 91 0 8 0 2 6 8 2 91 0 7 0 6 3 7 6 91 5 1 3 0 4 0 3 4 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
92 91 102 100 91 110 92 110 37 53 57 37 147 38 47 148 32 12 24
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = napostrophe;
unicode = 329;
},
{
glyphname = ncaron;
kernLeft = eng;
kernRight = n;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(441,-31,o),
(469,-30,o),
(505,-30,cs),
(541,-30,o),
(570,-29,o),
(593,-29,cs),
(621,-29,o),
(644,-19,o),
(644,8,cs),
(644,41,o),
(609,47,o),
(581,47,cs),
(527,47,l),
(527,260,l),
(527,260,l),
(527,427,o),
(430,455,o),
(377,455,cs),
(314,455,o),
(242,420,o),
(216,357,c),
(213,415,ls),
(212,446,o),
(205,451,o),
(164,451,cs),
(10,451,o),
(-7,438,o),
(-7,411,cs),
(-7,399,o),
(-1,391,o),
(12,387,cs),
(24,382,o),
(42,380,o),
(65,380,cs),
(105,380,ls),
(117,380,o),
(123,367,o),
(123,340,cs),
(123,282,o),
(118,194,o),
(118,143,cs),
(118,134,o),
(117,89,o),
(90,89,cs),
(79,89,ls),
(67,89,o),
(43,82,o),
(43,51,cs),
(43,16,o),
(76,14,o),
(95,14,cs),
(98,14,o),
(104,14,o),
(113,14,cs),
(122,14,o),
(134,14,o),
(147,14,cs),
(160,14,o),
(173,14,o),
(188,15,cs),
(203,15,o),
(217,15,o),
(230,15,cs),
(243,15,o),
(253,15,o),
(262,15,cs),
(271,15,o),
(276,15,o),
(278,15,cs),
(307,15,o),
(321,30,o),
(321,53,cs),
(321,88,o),
(302,92,o),
(278,92,cs),
(211,92,l),
(211,186,ls),
(211,227,o),
(232,283,o),
(232,283,cs),
(249,324,o),
(286,377,o),
(345,377,cs),
(422,377,o),
(436,274,o),
(436,143,cs),
(436,118,o),
(435,105,o),
(434,86,cs),
(433,61,o),
(430,48,o),
(411,44,cs),
(392,40,o),
(380,30,o),
(380,7,cs),
(380,-20,o),
(402,-31,o),
(419,-31,cs)
);
},
{
closed = 1;
nodes = (
(395,486,o),
(504,578,o),
(504,619,cs),
(504,630,o),
(500,640,o),
(491,640,cs),
(480,640,o),
(443,616,o),
(371,578,c),
(322,604,o),
(264,640,o),
(252,640,cs),
(244,640,o),
(239,633,o),
(239,626,cs),
(239,599,o),
(267,565,o),
(298,537,cs),
(325,511,o),
(360,486,o),
(371,486,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
21 1 1 0 120 1 6 5 51 1 3 6 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
2 12 2 0 1 0 106 0 1 10 1 106 9 1 5 5 10 83 11 1 10 10 15 67 8 1 6 6 7 84 0 7 7 13 67 0 3 3 4 84 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
2 12 2 0 1 0 106 0 1 10 1 106 11 1 10 9 1 5 6 10 5 91 8 1 6 6 7 84 0 7 7 13 67 0 3 3 4 84 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
2 12 2 0 1 0 106 0 1 10 1 106 11 1 10 9 1 5 6 10 5 91 0 3 0 4 3 4 88 8 1 6 6 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
2 12 2 0 1 0 106 0 1 10 1 106 11 1 10 9 1 5 6 10 5 91 0 3 7 4 3 79 8 1 6 0 7 4 6 7 92 0 3 3 4 84 0 4 3 4 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 126 124 117 115 109 106 96 93 85 76 72 70 60 58 43 34 28 26 17 15 9 7 0 25 1 25 13 15
CALL[ ]	/* CallFunction */";
};
width = 625;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(407,-31,o),
(468,-29,o),
(584,-29,cs),
(604,-29,o),
(621,-24,o),
(621,-4,cs),
(621,24,o),
(589,29,o),
(565,29,cs),
(511,29,l),
(511,260,l),
(511,260,l),
(511,424,o),
(418,455,o),
(360,455,cs),
(293,455,o),
(229,420,o),
(200,357,c),
(197,419,ls),
(196,446,o),
(193,451,o),
(158,451,cs),
(28,451,o),
(-6,443,o),
(-6,417,cs),
(-6,401,o),
(34,400,o),
(59,400,cs),
(111,400,ls),
(122,400,o),
(128,389,o),
(128,367,cs),
(128,356,o),
(123,275,o),
(123,125,cs),
(123,101,o),
(118,71,o),
(95,71,cs),
(75,71,ls),
(59,71,o),
(38,65,o),
(38,41,cs),
(38,16,o),
(60,14,o),
(81,14,cs),
(90,14,o),
(150,15,o),
(262,15,cs),
(289,15,o),
(301,19,o),
(301,42,cs),
(301,69,o),
(285,74,o),
(262,74,cs),
(195,74,l),
(195,186,ls),
(195,226,o),
(202,269,o),
(217,300,cs),
(240,351,o),
(285,395,o),
(341,395,cs),
(429,395,o),
(441,284,o),
(441,163,cs),
(441,162,o),
(441,152,o),
(441,133,cs),
(440,114,o),
(439,92,o),
(438,65,cs),
(435,33,o),
(428,30,o),
(395,26,c),
(383,23,o),
(367,16,o),
(367,-3,cs),
(367,-26,o),
(383,-31,o),
(400,-31,cs)
);
},
{
closed = 1;
nodes = (
(380,495,o),
(486,588,o),
(486,623,cs),
(486,632,o),
(483,640,o),
(475,640,cs),
(462,640,o),
(368,577,o),
(355,569,c),
(282,612,o),
(251,640,o),
(236,640,cs),
(229,640,o),
(225,636,o),
(225,627,cs),
(225,586,o),
(333,495,o),
(355,495,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
99 1 11 9 85 1 3 2 24 1 0 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
10 12 2 9 11 9 106 0 11 11 23 67 6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
10 12 2 9 11 9 106 0 11 7 7 11 94 8 1 7 6 1 2 3 7 2 92 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
10 12 2 9 11 9 106 0 11 7 11 106 8 1 7 6 1 2 3 7 2 92 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
10 12 2 9 11 9 106 0 11 7 11 106 8 1 7 6 1 2 3 7 2 92 0 0 0 1 0 1 87 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
10 12 2 9 11 9 106 0 11 7 11 106 8 1 7 6 1 2 3 7 2 92 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
10 12 2 9 11 9 106 0 11 8 11 106 0 8 7 2 8 79 0 7 6 1 2 3 7 2 91 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
10 12 2 9 11 9 106 0 11 8 11 106 0 7 0 6 2 7 6 91 0 8 0 2 3 8 2 92 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
95 94 112 110 105 103 94 118 95 118 37 54 74 52 116 38 47 118 33 13 35
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(398,-31,o),
(431,-30,o),
(472,-30,cs),
(513,-30,o),
(546,-29,o),
(571,-29,cs),
(580,-29,o),
(588,-26,o),
(588,-18,cs),
(588,-3,o),
(562,-1,o),
(542,-1,cs),
(488,-1,l),
(488,260,ls),
(488,412,o),
(406,455,o),
(336,455,cs),
(268,455,o),
(208,418,o),
(177,357,c),
(174,425,ls),
(173,448,o),
(166,451,o),
(150,451,cs),
(49,451,o),
(-4,444,o),
(-4,431,cs),
(-4,426,o),
(2,423,o),
(15,422,cs),
(27,421,o),
(39,420,o),
(51,420,cs),
(120,420,ls),
(132,420,o),
(135,411,o),
(135,398,cs),
(135,300,o),
(132,210,o),
(130,95,cs),
(129,74,o),
(127,60,o),
(123,54,cs),
(119,48,o),
(112,45,o),
(102,44,cs),
(57,41,ls),
(41,40,o),
(30,33,o),
(30,24,cs),
(30,21,o),
(32,18,o),
(37,17,cs),
(42,15,o),
(50,14,o),
(61,14,cs),
(63,14,o),
(69,14,o),
(78,14,cs),
(87,14,o),
(98,14,o),
(111,14,cs),
(124,14,o),
(137,14,o),
(152,15,cs),
(166,15,o),
(179,15,o),
(192,15,cs),
(204,15,o),
(214,15,o),
(223,15,cs),
(232,15,o),
(237,15,o),
(239,15,cs),
(262,15,o),
(273,20,o),
(273,29,cs),
(273,41,o),
(258,44,o),
(239,44,cs),
(172,44,l),
(172,186,ls),
(172,235,o),
(172,280,o),
(195,329,cs),
(226,393,o),
(281,425,o),
(336,425,cs),
(441,425,o),
(448,305,o),
(448,196,cs),
(448,153,o),
(447,90,o),
(444,30,cs),
(444,3,o),
(420,1,o),
(372,-4,cs),
(357,-5,o),
(349,-10,o),
(349,-19,cs),
(349,-27,o),
(357,-31,o),
(373,-31,cs)
);
},
{
closed = 1;
nodes = (
(357,510,o),
(460,604,o),
(460,629,cs),
(460,636,o),
(457,640,o),
(452,640,cs),
(437,640,o),
(408,608,o),
(332,554,c),
(296,580,o),
(226,640,o),
(213,640,cs),
(208,640,o),
(205,636,o),
(205,629,cs),
(205,604,o),
(309,510,o),
(332,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
110 1 10 9 82 1 3 2 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
110 1 10 9 82 1 3 6 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
11 12 2 9 10 9 106 0 10 7 10 106 6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 84 0 4 4 13 67 0 0 0 1 84 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
11 12 2 9 10 9 106 0 10 7 10 106 8 1 7 6 1 2 3 7 2 91 5 1 3 3 4 84 0 4 4 13 67 0 0 0 1 84 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
11 12 2 9 10 9 106 0 10 7 10 106 8 1 7 6 1 2 3 7 2 91 0 0 0 1 0 1 88 5 1 3 3 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
11 12 2 9 10 9 106 0 10 7 10 106 8 1 7 6 1 2 3 7 2 91 5 1 3 0 4 0 3 4 92 0 0 1 1 0 79 0 0 0 1 84 0 1 0 1 72
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
11 12 2 9 10 9 106 0 10 8 10 106 0 8 0 2 6 8 2 91 0 7 0 6 3 7 6 91 5 1 3 0 4 0 3 4 92 0 0 1 1 0 79 0 0 0 1 84 0 1 0 1 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
92 91 106 104 99 97 91 114 92 114 37 53 57 37 147 38 47 148 32 13 24
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = ncaron;
unicode = 328;
},
{
glyphname = ncommaaccent;
kernLeft = eng;
kernRight = n;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(441,-31,o),
(469,-30,o),
(505,-30,cs),
(541,-30,o),
(570,-29,o),
(593,-29,cs),
(621,-29,o),
(644,-19,o),
(644,8,cs),
(644,41,o),
(609,47,o),
(581,47,cs),
(527,47,l),
(527,260,l),
(527,260,l),
(527,427,o),
(430,455,o),
(377,455,cs),
(314,455,o),
(242,420,o),
(216,357,c),
(213,415,ls),
(212,446,o),
(205,451,o),
(164,451,cs),
(10,451,o),
(-7,438,o),
(-7,411,cs),
(-7,399,o),
(-1,391,o),
(12,387,cs),
(24,382,o),
(42,380,o),
(65,380,cs),
(105,380,ls),
(117,380,o),
(123,367,o),
(123,340,cs),
(123,282,o),
(118,194,o),
(118,143,cs),
(118,134,o),
(117,89,o),
(90,89,cs),
(79,89,ls),
(67,89,o),
(43,82,o),
(43,51,cs),
(43,16,o),
(76,14,o),
(95,14,cs),
(98,14,o),
(104,14,o),
(113,14,cs),
(122,14,o),
(134,14,o),
(147,14,cs),
(160,14,o),
(173,14,o),
(188,15,cs),
(203,15,o),
(217,15,o),
(230,15,cs),
(243,15,o),
(253,15,o),
(262,15,cs),
(271,15,o),
(276,15,o),
(278,15,cs),
(307,15,o),
(321,30,o),
(321,53,cs),
(321,88,o),
(302,92,o),
(278,92,cs),
(211,92,l),
(211,186,ls),
(211,227,o),
(232,283,o),
(232,283,cs),
(249,324,o),
(286,377,o),
(345,377,cs),
(422,377,o),
(436,274,o),
(436,143,cs),
(436,118,o),
(435,105,o),
(434,86,cs),
(433,61,o),
(430,48,o),
(411,44,cs),
(392,40,o),
(380,30,o),
(380,7,cs),
(380,-20,o),
(402,-31,o),
(419,-31,cs)
);
},
{
closed = 1;
nodes = (
(347,-249,o),
(410,-207,o),
(410,-130,cs),
(410,-73,o),
(374,-49,o),
(342,-49,cs),
(298,-49,o),
(282,-79,o),
(282,-107,cs),
(282,-138,o),
(318,-140,o),
(318,-157,cs),
(318,-177,o),
(316,-192,o),
(311,-201,cs),
(306,-211,o),
(303,-219,o),
(303,-226,cs),
(303,-249,o),
(322,-249,o),
(329,-249,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
116 1 5 4 47 1 2 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
8 1 4 4 9 83 10 1 9 9 15 67 7 1 5 5 6 83 0 6 6 13 67 0 2 2 3 83 0 3 3 21 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
10 1 9 8 1 4 5 9 4 91 0 0 0 1 0 1 87 7 1 5 5 6 83 0 6 6 13 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
10 1 9 8 1 4 5 9 4 91 0 2 0 3 0 2 3 91 0 0 0 1 0 1 87 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
10 1 9 8 1 4 5 9 4 91 7 1 5 0 6 3 5 6 91 0 2 0 3 0 2 3 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
122 120 113 111 58 56 148 42 47 150 42 38 34 11 24
CALL[ ]	/* CallFunction */";
};
width = 625;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(407,-31,o),
(468,-29,o),
(584,-29,cs),
(604,-29,o),
(621,-24,o),
(621,-4,cs),
(621,24,o),
(589,29,o),
(565,29,cs),
(511,29,l),
(511,260,l),
(511,260,l),
(511,424,o),
(418,455,o),
(360,455,cs),
(293,455,o),
(229,420,o),
(200,357,c),
(197,419,ls),
(196,446,o),
(193,451,o),
(158,451,cs),
(28,451,o),
(-6,443,o),
(-6,417,cs),
(-6,401,o),
(34,400,o),
(59,400,cs),
(111,400,ls),
(122,400,o),
(128,389,o),
(128,367,cs),
(128,356,o),
(123,275,o),
(123,125,cs),
(123,101,o),
(118,71,o),
(95,71,cs),
(75,71,ls),
(59,71,o),
(38,65,o),
(38,41,cs),
(38,16,o),
(60,14,o),
(81,14,cs),
(90,14,o),
(150,15,o),
(262,15,cs),
(289,15,o),
(301,19,o),
(301,42,cs),
(301,69,o),
(285,74,o),
(262,74,cs),
(195,74,l),
(195,186,ls),
(195,226,o),
(202,269,o),
(217,300,cs),
(240,351,o),
(285,395,o),
(341,395,cs),
(429,395,o),
(441,284,o),
(441,163,cs),
(441,162,o),
(441,152,o),
(441,133,cs),
(440,114,o),
(439,92,o),
(438,65,cs),
(435,33,o),
(428,30,o),
(395,26,c),
(383,23,o),
(367,16,o),
(367,-3,cs),
(367,-26,o),
(383,-31,o),
(400,-31,cs)
);
},
{
closed = 1;
nodes = (
(344,-230,o),
(385,-180,o),
(385,-126,cs),
(385,-73,o),
(355,-54,o),
(328,-54,cs),
(291,-54,o),
(276,-79,o),
(276,-103,cs),
(276,-135,o),
(312,-134,o),
(312,-151,cs),
(312,-168,o),
(310,-181,o),
(306,-189,cs),
(301,-198,o),
(299,-205,o),
(299,-211,cs),
(299,-228,o),
(313,-230,o),
(320,-230,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
85 1 3 2 24 1 0 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 67 0 9 9 10 83 0 10 10 25 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
8 1 7 6 1 2 3 7 2 91 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 67 0 9 9 10 83 0 10 10 25 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
8 1 7 6 1 2 3 7 2 91 0 9 0 10 9 10 87 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
8 1 7 6 1 2 3 7 2 91 0 0 0 1 9 0 1 91 0 9 0 10 9 10 87 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
8 1 7 6 1 2 3 7 2 91 5 1 3 0 4 1 3 4 91 0 0 0 1 9 0 1 91 0 9 10 10 9 79 0 9 9 10 83 0 10 9 10 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 8 7 2 8 79 0 7 6 1 2 3 7 2 91 5 1 3 0 4 1 3 4 91 0 0 0 1 9 0 1 91 0 9 10 10 9 79 0 9 9 10 83 0 10 9 10 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 7 0 6 2 7 6 91 0 8 0 2 3 8 2 91 5 1 3 0 4 1 3 4 91 0 0 0 1 9 0 1 91 0 9 10 10 9 79 0 9 9 10 83 0 10 9 10 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
106 104 98 96 37 54 74 52 116 38 47 118 33 11 35
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(398,-31,o),
(431,-30,o),
(472,-30,cs),
(513,-30,o),
(546,-29,o),
(571,-29,cs),
(580,-29,o),
(588,-26,o),
(588,-18,cs),
(588,-3,o),
(562,-1,o),
(542,-1,cs),
(488,-1,l),
(488,260,ls),
(488,412,o),
(406,455,o),
(336,455,cs),
(268,455,o),
(208,418,o),
(177,357,c),
(174,425,ls),
(173,448,o),
(166,451,o),
(150,451,cs),
(49,451,o),
(-4,444,o),
(-4,431,cs),
(-4,426,o),
(2,423,o),
(15,422,cs),
(27,421,o),
(39,420,o),
(51,420,cs),
(120,420,ls),
(132,420,o),
(135,411,o),
(135,398,cs),
(135,300,o),
(132,210,o),
(130,95,cs),
(129,74,o),
(127,60,o),
(123,54,cs),
(119,48,o),
(112,45,o),
(102,44,cs),
(57,41,ls),
(41,40,o),
(30,33,o),
(30,24,cs),
(30,21,o),
(32,18,o),
(37,17,cs),
(42,15,o),
(50,14,o),
(61,14,cs),
(63,14,o),
(69,14,o),
(78,14,cs),
(87,14,o),
(98,14,o),
(111,14,cs),
(124,14,o),
(137,14,o),
(152,15,cs),
(166,15,o),
(179,15,o),
(192,15,cs),
(204,15,o),
(214,15,o),
(223,15,cs),
(232,15,o),
(237,15,o),
(239,15,cs),
(262,15,o),
(273,20,o),
(273,29,cs),
(273,41,o),
(258,44,o),
(239,44,cs),
(172,44,l),
(172,186,ls),
(172,235,o),
(172,280,o),
(195,329,cs),
(226,393,o),
(281,425,o),
(336,425,cs),
(441,425,o),
(448,305,o),
(448,196,cs),
(448,153,o),
(447,90,o),
(444,30,cs),
(444,3,o),
(420,1,o),
(372,-4,cs),
(357,-5,o),
(349,-10,o),
(349,-19,cs),
(349,-27,o),
(357,-31,o),
(373,-31,cs)
);
},
{
closed = 1;
nodes = (
(334,-203,o),
(350,-153,o),
(350,-124,cs),
(350,-79,o),
(328,-67,o),
(308,-67,cs),
(281,-67,o),
(268,-84,o),
(268,-101,cs),
(268,-133,o),
(304,-128,o),
(304,-145,cs),
(304,-152,o),
(302,-160,o),
(299,-169,cs),
(295,-179,o),
(293,-186,o),
(293,-191,cs),
(293,-198,o),
(300,-203,o),
(307,-203,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
82 1 3 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
82 1 3 6 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 67 0 9 9 10 83 0 10 10 17 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
8 1 7 6 1 2 3 7 2 91 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 67 0 9 9 10 83 0 10 10 17 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
8 1 7 6 1 2 3 7 2 91 0 0 0 1 9 0 1 91 5 1 3 3 4 83 0 4 4 13 67 0 9 9 10 83 0 10 10 17 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
8 1 7 6 1 2 3 7 2 91 5 1 3 0 4 0 3 4 91 0 0 0 1 9 0 1 91 0 9 9 10 83 0 10 10 17 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
8 1 7 6 1 2 3 7 2 91 5 1 3 0 4 0 3 4 91 0 0 0 1 9 0 1 91 0 9 10 10 9 79 0 9 9 10 83 0 10 9 10 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 8 0 2 6 8 2 91 0 7 0 6 3 7 6 91 5 1 3 0 4 0 3 4 91 0 0 0 1 9 0 1 91 0 9 10 10 9 79 0 9 9 10 83 0 10 9 10 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
103 101 95 93 37 53 57 37 147 38 47 148 32 11 24
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = ncommaaccent;
unicode = 326;
},
{
glyphname = ndotaccent;
kernLeft = eng;
kernRight = n;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(441,-31,o),
(469,-30,o),
(505,-30,cs),
(541,-30,o),
(570,-29,o),
(593,-29,cs),
(621,-29,o),
(644,-19,o),
(644,8,cs),
(644,41,o),
(609,47,o),
(581,47,cs),
(527,47,l),
(527,260,l),
(527,260,l),
(527,427,o),
(430,455,o),
(377,455,cs),
(314,455,o),
(242,420,o),
(216,357,c),
(213,415,ls),
(212,446,o),
(205,451,o),
(164,451,cs),
(10,451,o),
(-7,438,o),
(-7,411,cs),
(-7,399,o),
(-1,391,o),
(12,387,cs),
(24,382,o),
(42,380,o),
(65,380,cs),
(105,380,ls),
(117,380,o),
(123,367,o),
(123,340,cs),
(123,282,o),
(118,194,o),
(118,143,cs),
(118,134,o),
(117,89,o),
(90,89,cs),
(79,89,ls),
(67,89,o),
(43,82,o),
(43,51,cs),
(43,16,o),
(76,14,o),
(95,14,cs),
(98,14,o),
(104,14,o),
(113,14,cs),
(122,14,o),
(134,14,o),
(147,14,cs),
(160,14,o),
(173,14,o),
(188,15,cs),
(203,15,o),
(217,15,o),
(230,15,cs),
(243,15,o),
(253,15,o),
(262,15,cs),
(271,15,o),
(276,15,o),
(278,15,cs),
(307,15,o),
(321,30,o),
(321,53,cs),
(321,88,o),
(302,92,o),
(278,92,cs),
(211,92,l),
(211,186,ls),
(211,227,o),
(232,283,o),
(232,283,cs),
(249,324,o),
(286,377,o),
(345,377,cs),
(422,377,o),
(436,274,o),
(436,143,cs),
(436,118,o),
(435,105,o),
(434,86,cs),
(433,61,o),
(430,48,o),
(411,44,cs),
(392,40,o),
(380,30,o),
(380,7,cs),
(380,-20,o),
(402,-31,o),
(419,-31,cs)
);
},
{
closed = 1;
nodes = (
(399,514,o),
(436,529,o),
(436,584,cs),
(436,620,o),
(408,645,o),
(376,645,cs),
(328,645,o),
(310,607,o),
(310,580,cs),
(310,537,o),
(336,514,o),
(369,514,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
110 1 5 4 41 1 2 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 0 0 1 9 0 1 91 8 1 4 4 9 83 10 1 9 9 15 67 7 1 5 5 6 83 0 6 6 13 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 0 0 1 9 0 1 91 10 1 9 8 1 4 5 9 4 91 7 1 5 5 6 83 0 6 6 13 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 1 9 0 1 91 10 1 9 8 1 4 5 9 4 91 0 2 0 3 2 3 87 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 0 0 1 9 0 1 91 10 1 9 8 1 4 5 9 4 91 0 2 6 3 2 79 7 1 5 0 6 3 5 6 91 0 2 2 3 83 0 3 2 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
116 114 107 105 58 56 148 42 47 150 34 38 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 625;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(407,-31,o),
(468,-29,o),
(584,-29,cs),
(604,-29,o),
(621,-24,o),
(621,-4,cs),
(621,24,o),
(589,29,o),
(565,29,cs),
(511,29,l),
(511,260,l),
(511,260,l),
(511,424,o),
(418,455,o),
(360,455,cs),
(293,455,o),
(229,420,o),
(200,357,c),
(197,419,ls),
(196,446,o),
(193,451,o),
(158,451,cs),
(28,451,o),
(-6,443,o),
(-6,417,cs),
(-6,401,o),
(34,400,o),
(59,400,cs),
(111,400,ls),
(122,400,o),
(128,389,o),
(128,367,cs),
(128,356,o),
(123,275,o),
(123,125,cs),
(123,101,o),
(118,71,o),
(95,71,cs),
(75,71,ls),
(59,71,o),
(38,65,o),
(38,41,cs),
(38,16,o),
(60,14,o),
(81,14,cs),
(90,14,o),
(150,15,o),
(262,15,cs),
(289,15,o),
(301,19,o),
(301,42,cs),
(301,69,o),
(285,74,o),
(262,74,cs),
(195,74,l),
(195,186,ls),
(195,226,o),
(202,269,o),
(217,300,cs),
(240,351,o),
(285,395,o),
(341,395,cs),
(429,395,o),
(441,284,o),
(441,163,cs),
(441,162,o),
(441,152,o),
(441,133,cs),
(440,114,o),
(439,92,o),
(438,65,cs),
(435,33,o),
(428,30,o),
(395,26,c),
(383,23,o),
(367,16,o),
(367,-3,cs),
(367,-26,o),
(383,-31,o),
(400,-31,cs)
);
},
{
closed = 1;
nodes = (
(379,523,o),
(410,536,o),
(410,584,cs),
(410,615,o),
(388,636,o),
(361,636,cs),
(319,636,o),
(305,600,o),
(305,580,cs),
(305,544,o),
(327,523,o),
(354,523,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
85 1 3 2 24 1 0 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 9 0 10 7 9 10 91 6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 0 0 0 1 0 1 87 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 9 0 10 8 9 10 91 0 8 7 2 8 79 0 7 6 1 2 3 7 2 91 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 9 0 10 8 9 10 91 0 7 0 6 2 7 6 91 0 8 0 2 3 8 2 91 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
106 104 100 98 37 54 74 52 116 38 47 118 33 11 35
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(398,-31,o),
(431,-30,o),
(472,-30,cs),
(513,-30,o),
(546,-29,o),
(571,-29,cs),
(580,-29,o),
(588,-26,o),
(588,-18,cs),
(588,-3,o),
(562,-1,o),
(542,-1,cs),
(488,-1,l),
(488,260,ls),
(488,412,o),
(406,455,o),
(336,455,cs),
(268,455,o),
(208,418,o),
(177,357,c),
(174,425,ls),
(173,448,o),
(166,451,o),
(150,451,cs),
(49,451,o),
(-4,444,o),
(-4,431,cs),
(-4,426,o),
(2,423,o),
(15,422,cs),
(27,421,o),
(39,420,o),
(51,420,cs),
(120,420,ls),
(132,420,o),
(135,411,o),
(135,398,cs),
(135,300,o),
(132,210,o),
(130,95,cs),
(129,74,o),
(127,60,o),
(123,54,cs),
(119,48,o),
(112,45,o),
(102,44,cs),
(57,41,ls),
(41,40,o),
(30,33,o),
(30,24,cs),
(30,21,o),
(32,18,o),
(37,17,cs),
(42,15,o),
(50,14,o),
(61,14,cs),
(63,14,o),
(69,14,o),
(78,14,cs),
(87,14,o),
(98,14,o),
(111,14,cs),
(124,14,o),
(137,14,o),
(152,15,cs),
(166,15,o),
(179,15,o),
(192,15,cs),
(204,15,o),
(214,15,o),
(223,15,cs),
(232,15,o),
(237,15,o),
(239,15,cs),
(262,15,o),
(273,20,o),
(273,29,cs),
(273,41,o),
(258,44,o),
(239,44,cs),
(172,44,l),
(172,186,ls),
(172,235,o),
(172,280,o),
(195,329,cs),
(226,393,o),
(281,425,o),
(336,425,cs),
(441,425,o),
(448,305,o),
(448,196,cs),
(448,153,o),
(447,90,o),
(444,30,cs),
(444,3,o),
(420,1,o),
(372,-4,cs),
(357,-5,o),
(349,-10,o),
(349,-19,cs),
(349,-27,o),
(357,-31,o),
(373,-31,cs)
);
},
{
closed = 1;
nodes = (
(352,538,o),
(374,548,o),
(374,584,cs),
(374,607,o),
(359,621,o),
(340,621,cs),
(312,621,o),
(299,594,o),
(299,580,cs),
(299,556,o),
(314,538,o),
(333,538,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
82 1 3 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
82 1 3 6 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 9 0 10 7 9 10 91 6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 0 0 0 1 0 1 87 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 5 1 3 0 4 0 3 4 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 9 0 10 8 9 10 91 0 8 0 2 6 8 2 91 0 7 0 6 3 7 6 91 5 1 3 0 4 0 3 4 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
103 101 97 95 37 53 57 37 147 38 47 148 32 11 24
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = ndotaccent;
unicode = 7749;
},
{
glyphname = ntilde;
kernLeft = eng;
kernRight = n;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(441,-31,o),
(469,-30,o),
(505,-30,cs),
(541,-30,o),
(570,-29,o),
(593,-29,cs),
(621,-29,o),
(644,-19,o),
(644,8,cs),
(644,41,o),
(609,47,o),
(581,47,cs),
(527,47,l),
(527,260,l),
(527,260,l),
(527,427,o),
(430,455,o),
(377,455,cs),
(314,455,o),
(242,420,o),
(216,357,c),
(213,415,ls),
(212,446,o),
(205,451,o),
(164,451,cs),
(10,451,o),
(-7,438,o),
(-7,411,cs),
(-7,399,o),
(-1,391,o),
(12,387,cs),
(24,382,o),
(42,380,o),
(65,380,cs),
(105,380,ls),
(117,380,o),
(123,367,o),
(123,340,cs),
(123,282,o),
(118,194,o),
(118,143,cs),
(118,134,o),
(117,89,o),
(90,89,cs),
(79,89,ls),
(67,89,o),
(43,82,o),
(43,51,cs),
(43,16,o),
(76,14,o),
(95,14,cs),
(98,14,o),
(104,14,o),
(113,14,cs),
(122,14,o),
(134,14,o),
(147,14,cs),
(160,14,o),
(173,14,o),
(188,15,cs),
(203,15,o),
(217,15,o),
(230,15,cs),
(243,15,o),
(253,15,o),
(262,15,cs),
(271,15,o),
(276,15,o),
(278,15,cs),
(307,15,o),
(321,30,o),
(321,53,cs),
(321,88,o),
(302,92,o),
(278,92,cs),
(211,92,l),
(211,186,ls),
(211,227,o),
(232,283,o),
(232,283,cs),
(249,324,o),
(286,377,o),
(345,377,cs),
(422,377,o),
(436,274,o),
(436,143,cs),
(436,118,o),
(435,105,o),
(434,86,cs),
(433,61,o),
(430,48,o),
(411,44,cs),
(392,40,o),
(380,30,o),
(380,7,cs),
(380,-20,o),
(402,-31,o),
(419,-31,cs)
);
},
{
closed = 1;
nodes = (
(245,498,o),
(269,523,o),
(308,523,cs),
(347,523,o),
(389,499,o),
(445,499,cs),
(478,499,o),
(556,517,o),
(556,574,cs),
(556,595,o),
(541,609,o),
(534,609,cs),
(529,609,o),
(519,605,o),
(504,596,cs),
(485,585,o),
(463,579,o),
(444,579,cs),
(405,579,o),
(343,607,o),
(307,607,cs),
(282,607,o),
(260,601,o),
(239,589,cs),
(220,578,o),
(205,563,o),
(205,534,cs),
(205,514,o),
(212,498,o),
(224,498,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
130 1 9 8 61 1 6 9 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 13 1 3 91 12 1 8 8 13 83 14 1 13 13 15 67 11 1 9 9 10 83 0 10 10 13 67 0 6 6 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 13 1 3 91 14 1 13 12 1 8 9 13 8 91 11 1 9 9 10 83 0 10 10 13 67 0 6 6 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 13 1 3 91 14 1 13 12 1 8 9 13 8 91 0 6 0 7 6 7 88 11 1 9 9 10 83 0 10 10 13 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 13 1 3 91 14 1 13 12 1 8 9 13 8 91 0 6 10 7 6 79 11 1 9 0 10 7 9 10 91 0 6 6 7 84 0 7 6 7 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
136 134 127 125 119 116 106 103 95 86 82 80 47 150 34 35 35 38 35 35 36 15 24
CALL[ ]	/* CallFunction */";
};
width = 625;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(407,-31,o),
(468,-29,o),
(584,-29,cs),
(604,-29,o),
(621,-24,o),
(621,-4,cs),
(621,24,o),
(589,29,o),
(565,29,cs),
(511,29,l),
(511,260,l),
(511,260,l),
(511,424,o),
(418,455,o),
(360,455,cs),
(293,455,o),
(229,420,o),
(200,357,c),
(197,419,ls),
(196,446,o),
(193,451,o),
(158,451,cs),
(28,451,o),
(-6,443,o),
(-6,417,cs),
(-6,401,o),
(34,400,o),
(59,400,cs),
(111,400,ls),
(122,400,o),
(128,389,o),
(128,367,cs),
(128,356,o),
(123,275,o),
(123,125,cs),
(123,101,o),
(118,71,o),
(95,71,cs),
(75,71,ls),
(59,71,o),
(38,65,o),
(38,41,cs),
(38,16,o),
(60,14,o),
(81,14,cs),
(90,14,o),
(150,15,o),
(262,15,cs),
(289,15,o),
(301,19,o),
(301,42,cs),
(301,69,o),
(285,74,o),
(262,74,cs),
(195,74,l),
(195,186,ls),
(195,226,o),
(202,269,o),
(217,300,cs),
(240,351,o),
(285,395,o),
(341,395,cs),
(429,395,o),
(441,284,o),
(441,163,cs),
(441,162,o),
(441,152,o),
(441,133,cs),
(440,114,o),
(439,92,o),
(438,65,cs),
(435,33,o),
(428,30,o),
(395,26,c),
(383,23,o),
(367,16,o),
(367,-3,cs),
(367,-26,o),
(383,-31,o),
(400,-31,cs)
);
},
{
closed = 1;
nodes = (
(211,507,o),
(238,532,o),
(278,532,cs),
(317,532,o),
(359,508,o),
(415,508,cs),
(471,508,o),
(504,530,o),
(517,553,cs),
(520,559,o),
(522,565,o),
(522,572,cs),
(522,588,o),
(511,600,o),
(504,600,cs),
(501,600,o),
(497,599,o),
(494,598,cs),
(490,596,o),
(483,592,o),
(474,587,cs),
(451,576,o),
(431,570,o),
(414,570,cs),
(375,570,o),
(313,598,o),
(277,598,cs),
(252,598,o),
(230,592,o),
(209,580,cs),
(199,574,o),
(192,569,o),
(188,564,cs),
(184,559,o),
(181,555,o),
(180,552,cs),
(178,547,o),
(177,541,o),
(177,535,cs),
(177,520,o),
(183,507,o),
(194,507,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
123 1 9 8 62 1 6 9 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 13 1 3 91 12 1 8 8 13 83 14 1 13 13 15 67 11 1 9 9 10 83 0 10 10 13 67 0 6 6 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 13 1 3 91 14 1 13 12 1 8 9 13 8 91 11 1 9 9 10 83 0 10 10 13 67 0 6 6 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 13 1 3 91 14 1 13 12 1 8 9 13 8 91 0 6 0 7 6 7 88 11 1 9 9 10 83 0 10 10 13 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 13 1 3 91 14 1 13 12 1 8 9 13 8 91 0 6 10 7 6 79 11 1 9 0 10 7 9 10 91 0 6 6 7 84 0 7 6 7 72
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 14 1 3 91 0 14 13 8 14 79 0 13 12 1 8 9 13 8 91 0 6 10 7 6 79 11 1 9 0 10 7 9 10 91 0 6 6 7 84 0 7 6 7 72
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 14 1 3 91 0 13 0 12 8 13 12 91 0 14 0 8 9 14 8 91 0 6 10 7 6 79 11 1 9 0 10 7 9 10 91 0 6 6 7 84 0 7 6 7 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
127 125 120 117 111 107 97 94 90 83 79 77 47 118 36 35 35 38 35 35 37 15 35
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(398,-31,o),
(431,-30,o),
(472,-30,cs),
(513,-30,o),
(546,-29,o),
(571,-29,cs),
(580,-29,o),
(588,-26,o),
(588,-18,cs),
(588,-3,o),
(562,-1,o),
(542,-1,cs),
(488,-1,l),
(488,260,ls),
(488,412,o),
(406,455,o),
(336,455,cs),
(268,455,o),
(208,418,o),
(177,357,c),
(174,425,ls),
(173,448,o),
(166,451,o),
(150,451,cs),
(49,451,o),
(-4,444,o),
(-4,431,cs),
(-4,426,o),
(2,423,o),
(15,422,cs),
(27,421,o),
(39,420,o),
(51,420,cs),
(120,420,ls),
(132,420,o),
(135,411,o),
(135,398,cs),
(135,300,o),
(132,210,o),
(130,95,cs),
(129,74,o),
(127,60,o),
(123,54,cs),
(119,48,o),
(112,45,o),
(102,44,cs),
(57,41,ls),
(41,40,o),
(30,33,o),
(30,24,cs),
(30,21,o),
(32,18,o),
(37,17,cs),
(42,15,o),
(50,14,o),
(61,14,cs),
(63,14,o),
(69,14,o),
(78,14,cs),
(87,14,o),
(98,14,o),
(111,14,cs),
(124,14,o),
(137,14,o),
(152,15,cs),
(166,15,o),
(179,15,o),
(192,15,cs),
(204,15,o),
(214,15,o),
(223,15,cs),
(232,15,o),
(237,15,o),
(239,15,cs),
(262,15,o),
(273,20,o),
(273,29,cs),
(273,41,o),
(258,44,o),
(239,44,cs),
(172,44,l),
(172,186,ls),
(172,235,o),
(172,280,o),
(195,329,cs),
(226,393,o),
(281,425,o),
(336,425,cs),
(441,425,o),
(448,305,o),
(448,196,cs),
(448,153,o),
(447,90,o),
(444,30,cs),
(444,3,o),
(420,1,o),
(372,-4,cs),
(357,-5,o),
(349,-10,o),
(349,-19,cs),
(349,-27,o),
(357,-31,o),
(373,-31,cs)
);
},
{
closed = 1;
nodes = (
(167,522,o),
(194,547,o),
(235,547,cs),
(274,547,o),
(316,523,o),
(372,523,cs),
(425,523,o),
(474,543,o),
(474,568,cs),
(474,577,o),
(468,585,o),
(461,585,cs),
(458,585,o),
(454,584,o),
(451,583,cs),
(447,581,o),
(440,577,o),
(431,572,cs),
(408,561,o),
(388,555,o),
(371,555,cs),
(332,555,o),
(270,583,o),
(234,583,cs),
(209,583,o),
(187,577,o),
(166,565,cs),
(147,554,o),
(137,544,o),
(137,537,cs),
(137,530,o),
(144,522,o),
(151,522,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
82 1 3 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
82 1 3 6 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
11 1 9 0 13 12 9 13 91 0 10 14 1 12 7 10 12 91 6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 84 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
11 1 9 0 13 12 9 13 91 0 10 14 1 12 7 10 12 91 8 1 7 6 1 2 3 7 2 91 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 84 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
11 1 9 0 13 12 9 13 91 0 10 14 1 12 7 10 12 91 8 1 7 6 1 2 3 7 2 91 0 0 0 1 0 1 88 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
11 1 9 0 13 12 9 13 91 0 10 14 1 12 7 10 12 91 8 1 7 6 1 2 3 7 2 91 5 1 3 0 4 0 3 4 91 0 0 1 1 0 79 0 0 0 1 84 0 1 0 1 72
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
11 1 9 0 13 12 9 13 91 0 10 14 1 12 8 10 12 91 0 8 0 2 6 8 2 91 0 7 0 6 3 7 6 91 5 1 3 0 4 0 3 4 91 0 0 1 1 0 79 0 0 0 1 84 0 1 0 1 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
124 122 119 117 114 112 106 104 101 99 96 94 37 53 57 37 147 38 47 148 32 15 24
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = ntilde;
unicode = 241;
},
{
glyphname = eng;
kernLeft = eng;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(447,-250,o),
(527,-181,o),
(527,-29,cs),
(527,257,ls),
(527,419,o),
(437,455,o),
(377,455,cs),
(314,455,o),
(242,420,o),
(216,357,c),
(213,415,ls),
(210,447,o),
(204,451,o),
(164,451,cs),
(0,451,o),
(-7,442,o),
(-7,416,cs),
(-7,405,o),
(-1,397,o),
(10,394,cs),
(21,390,o),
(39,388,o),
(65,388,cs),
(105,388,ls),
(120,388,o),
(123,375,o),
(123,348,cs),
(123,330,o),
(122,291,o),
(121,232,cs),
(119,174,o),
(118,145,o),
(118,143,cs),
(117,122,o),
(114,108,o),
(109,100,cs),
(104,91,o),
(97,87,o),
(90,87,cs),
(75,86,ls),
(58,86,o),
(44,78,o),
(44,51,cs),
(44,15,o),
(72,14,o),
(95,14,cs),
(98,14,o),
(103,14,o),
(112,14,cs),
(121,14,o),
(131,14,o),
(144,14,cs),
(156,14,o),
(169,14,o),
(182,15,cs),
(195,15,o),
(208,15,o),
(220,15,cs),
(231,15,o),
(241,15,o),
(250,15,cs),
(258,15,o),
(263,15,o),
(265,15,cs),
(293,15,o),
(321,19,o),
(321,50,cs),
(321,85,o),
(302,92,o),
(278,92,cs),
(211,92,l),
(211,186,ls),
(211,227,o),
(232,283,o),
(232,283,cs),
(249,324,o),
(286,377,o),
(345,377,cs),
(422,377,o),
(436,329,o),
(436,205,cs),
(436,-36,ls),
(436,-104,o),
(419,-176,o),
(352,-176,cs),
(331,-176,o),
(313,-164,o),
(313,-139,cs),
(313,-122,o),
(323,-108,o),
(343,-107,cs),
(394,-104,o),
(406,-84,o),
(406,-61,cs),
(406,-26,o),
(385,-10,o),
(354,-10,cs),
(261,-10,o),
(235,-74,o),
(235,-141,cs),
(235,-217,o),
(312,-250,o),
(361,-250,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
94 1 4 9 95 1 5 4 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
94 1 8 9 95 1 5 4 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 2 3 1 2 91 8 1 4 4 9 83 10 1 9 9 15 67 7 1 5 5 6 83 0 6 6 13 67 0 3 3 0 83 11 1 0 0 25 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
10 1 9 8 1 4 5 9 4 91 0 1 0 2 3 1 2 91 0 3 11 1 0 3 0 87 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 8 4 9 8 79 10 1 9 0 4 5 9 4 91 0 1 0 2 3 1 2 91 0 3 11 1 0 3 0 87 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 8 4 9 8 79 10 1 9 0 4 5 9 4 91 7 1 5 0 6 1 5 6 91 0 1 0 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 11 1 0 3 0 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 7 5 6 5 7 96 0 9 0 8 4 9 8 91 0 10 0 4 5 10 4 91 0 5 0 6 1 5 6 91 0 1 0 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 11 1 0 3 0 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 101 99 90 87 82 79 68 65 59 50 46 44 34 32 23 21 17 15 11 9 0 110 1 110 12 15
CALL[ ]	/* CallFunction */";
};
width = 581;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(459,-239,o),
(511,-150,o),
(511,-1,cs),
(511,260,l),
(511,260,l),
(511,424,o),
(418,455,o),
(360,455,cs),
(293,455,o),
(229,420,o),
(200,357,c),
(197,419,ls),
(196,446,o),
(193,451,o),
(158,451,cs),
(28,451,o),
(-6,443,o),
(-6,417,cs),
(-6,401,o),
(34,400,o),
(59,400,cs),
(111,400,ls),
(122,400,o),
(128,389,o),
(128,367,cs),
(128,356,o),
(123,275,o),
(123,125,cs),
(123,101,o),
(118,71,o),
(95,71,cs),
(75,71,ls),
(59,71,o),
(38,65,o),
(38,41,cs),
(38,16,o),
(60,14,o),
(81,14,cs),
(90,14,o),
(150,15,o),
(262,15,cs),
(289,15,o),
(301,19,o),
(301,42,cs),
(301,69,o),
(285,74,o),
(262,74,cs),
(195,74,l),
(195,186,ls),
(195,226,o),
(202,269,o),
(217,300,cs),
(240,351,o),
(285,395,o),
(341,395,cs),
(427,395,o),
(441,290,o),
(441,163,cs),
(441,1,ls),
(441,-123,o),
(424,-180,o),
(352,-180,cs),
(323,-180,o),
(298,-160,o),
(298,-133,cs),
(298,-124,o),
(299,-103,o),
(310,-96,c),
(317,-104,o),
(329,-112,o),
(346,-112,cs),
(367,-112,o),
(386,-99,o),
(386,-70,cs),
(386,-39,o),
(360,-27,o),
(336,-27,cs),
(272,-27,o),
(238,-79,o),
(238,-135,cs),
(238,-205,o),
(300,-239,o),
(355,-239,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
92 1 5 4 22 1 2 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 2 3 1 2 91 8 1 4 4 9 83 10 1 9 9 15 67 7 1 5 5 6 83 0 6 6 13 67 0 3 3 0 83 0 0 0 25 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
10 1 9 8 1 4 5 9 4 91 0 1 0 2 3 1 2 91 7 1 5 5 6 83 0 6 6 13 67 0 3 3 0 83 0 0 0 25 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
10 1 9 8 1 4 5 9 4 91 0 1 0 2 3 1 2 91 0 3 0 0 3 0 87 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
10 1 9 8 1 4 5 9 4 91 7 1 5 0 6 1 5 6 91 0 1 0 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 10 9 4 10 79 0 9 8 1 4 5 9 4 91 7 1 5 0 6 1 5 6 91 0 1 0 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 9 0 8 4 9 8 91 0 10 0 4 5 10 4 91 7 1 5 0 6 1 5 6 91 0 1 0 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
96 94 89 86 74 52 116 38 41 39 36 40 34 11 24
CALL[ ]	/* CallFunction */";
};
width = 567;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(480,-217,o),
(488,-96,o),
(488,46,cs),
(488,59,o),
(488,75,o),
(487,96,cs),
(486,117,o),
(486,136,o),
(486,155,cs),
(486,173,o),
(486,191,o),
(487,210,cs),
(488,228,o),
(488,246,o),
(488,265,cs),
(488,415,o),
(407,455,o),
(336,455,cs),
(268,455,o),
(208,418,o),
(177,357,c),
(174,425,ls),
(173,448,o),
(166,451,o),
(150,451,cs),
(49,451,o),
(-4,444,o),
(-4,431,cs),
(-4,426,o),
(2,423,o),
(15,422,cs),
(27,421,o),
(39,420,o),
(51,420,cs),
(120,420,ls),
(132,420,o),
(135,411,o),
(135,398,cs),
(135,300,o),
(132,210,o),
(130,95,cs),
(129,74,o),
(127,60,o),
(123,54,cs),
(119,48,o),
(112,45,o),
(102,44,cs),
(57,41,ls),
(41,40,o),
(30,33,o),
(30,24,cs),
(30,21,o),
(32,18,o),
(37,17,cs),
(42,15,o),
(50,14,o),
(61,14,cs),
(63,14,o),
(69,14,o),
(78,14,cs),
(87,14,o),
(98,14,o),
(111,14,cs),
(124,14,o),
(137,14,o),
(152,15,cs),
(166,15,o),
(179,15,o),
(192,15,cs),
(204,15,o),
(214,15,o),
(223,15,cs),
(232,15,o),
(237,15,o),
(239,15,cs),
(262,15,o),
(273,20,o),
(273,29,cs),
(273,41,o),
(258,44,o),
(239,44,cs),
(172,44,l),
(172,186,ls),
(172,235,o),
(172,280,o),
(195,329,cs),
(226,393,o),
(281,425,o),
(336,425,cs),
(441,425,o),
(448,305,o),
(448,196,cs),
(448,63,ls),
(448,-171,o),
(416,-186,o),
(352,-186,cs),
(311,-186,o),
(276,-162,o),
(276,-139,cs),
(276,-124,o),
(281,-121,o),
(292,-120,cs),
(309,-117,o),
(329,-113,o),
(329,-85,cs),
(329,-60,o),
(313,-55,o),
(298,-55,cs),
(271,-55,o),
(242,-72,o),
(242,-116,cs),
(242,-177,o),
(275,-217,o),
(347,-217,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
71 1 2 1 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
71 1 2 5 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 9 3 0 0 9 96 5 1 1 1 6 83 7 1 6 6 15 67 4 1 2 2 3 83 0 3 3 13 67 0 0 0 8 84 0 8 8 25 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 9 3 0 3 9 0 104 5 1 1 1 6 83 7 1 6 6 15 67 4 1 2 2 3 83 0 3 3 13 67 0 0 0 8 84 0 8 8 25 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 9 3 0 3 9 0 104 7 1 6 5 1 1 2 6 1 91 4 1 2 2 3 83 0 3 3 13 67 0 0 0 8 84 0 8 8 25 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 9 3 0 3 9 0 104 7 1 6 5 1 1 2 6 1 91 4 1 2 0 3 9 2 3 91 0 0 0 8 84 0 8 8 25 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 9 3 0 3 9 0 104 7 1 6 5 1 1 2 6 1 91 4 1 2 0 3 9 2 3 91 0 0 8 8 0 79 0 0 0 8 84 0 8 0 8 72
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 9 3 0 3 9 0 104 0 7 0 1 5 7 1 91 0 6 0 5 2 6 5 91 4 1 2 0 3 9 2 3 91 0 0 8 8 0 79 0 0 0 8 84 0 8 0 8 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
97 95 46 37 53 57 37 147 38 41 40 10 24
CALL[ ]	/* CallFunction */";
};
width = 547;
}
);
note = eng;
unicode = 331;
},
{
glyphname = o;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(387,-11,o),
(518,69,o),
(518,231,cs),
(518,360,o),
(429,472,o),
(276,472,cs),
(118,472,o),
(26,368,o),
(26,230,cs),
(26,90,o),
(114,-11,o),
(267,-11,cs)
);
},
{
closed = 1;
nodes = (
(200,68,o),
(122,123,o),
(122,231,cs),
(122,332,o),
(192,394,o),
(278,394,cs),
(364,394,o),
(424,327,o),
(424,235,cs),
(424,122,o),
(336,68,o),
(269,68,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
4 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
0 1 4 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
21 20 31 29 20 39 21 39 40 36 5 17
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(373,-11,o),
(500,70,o),
(500,233,cs),
(500,361,o),
(418,472,o),
(271,472,cs),
(121,472,o),
(29,367,o),
(29,230,cs),
(29,88,o),
(124,-11,o),
(259,-11,cs)
);
},
{
closed = 1;
nodes = (
(191,50,o),
(104,107,o),
(104,231,cs),
(104,345,o),
(180,412,o),
(270,412,cs),
(362,412,o),
(427,340,o),
(427,235,cs),
(427,105,o),
(329,50,o),
(261,50,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
4 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
0 1 4 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
21 20 31 29 20 39 21 39 40 36 5 17
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356,-11,o),
(474,74,o),
(474,236,cs),
(474,363,o),
(402,472,o),
(264,472,cs),
(131,472,o),
(33,370,o),
(33,230,cs),
(33,93,o),
(127,-11,o),
(248,-11,cs)
);
},
{
closed = 1;
nodes = (
(172,20,o),
(78,90,o),
(78,231,cs),
(78,364,o),
(163,442,o),
(259,442,cs),
(361,442,o),
(431,355,o),
(431,235,cs),
(431,84,o),
(324,20,o),
(250,20,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
4 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
0 1 4 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
21 20 31 29 20 39 21 39 40 36 5 17
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = o;
unicode = 111;
},
{
glyphname = oacute;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(387,-11,o),
(518,69,o),
(518,231,cs),
(518,360,o),
(429,472,o),
(276,472,cs),
(118,472,o),
(26,368,o),
(26,230,cs),
(26,90,o),
(114,-11,o),
(267,-11,cs)
);
},
{
closed = 1;
nodes = (
(200,68,o),
(122,123,o),
(122,231,cs),
(122,332,o),
(192,394,o),
(278,394,cs),
(364,394,o),
(424,327,o),
(424,235,cs),
(424,122,o),
(336,68,o),
(269,68,cs)
);
},
{
closed = 1;
nodes = (
(239,500,o),
(274,523,o),
(313,557,cs),
(348,588,o),
(377,622,o),
(377,640,cs),
(377,665,o),
(350,687,o),
(307,688,cs),
(282,688,o),
(251,649,o),
(227,609,cs),
(207,574,o),
(185,527,o),
(185,522,cs),
(185,507,o),
(207,500,o),
(222,500,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 1 106 0 0 3 0 106 6 1 4 4 3 83 0 3 3 23 67 0 5 5 2 83 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 1 0 1 106 0 0 3 0 106 0 3 6 1 4 5 3 4 92 0 5 5 2 83 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
39 38 49 47 38 57 39 57 40 38 38 38 7 19
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(373,-11,o),
(500,70,o),
(500,233,cs),
(500,361,o),
(418,472,o),
(271,472,cs),
(121,472,o),
(29,367,o),
(29,230,cs),
(29,88,o),
(124,-11,o),
(259,-11,cs)
);
},
{
closed = 1;
nodes = (
(191,50,o),
(104,107,o),
(104,231,cs),
(104,345,o),
(180,412,o),
(270,412,cs),
(362,412,o),
(427,340,o),
(427,235,cs),
(427,105,o),
(329,50,o),
(261,50,cs)
);
},
{
closed = 1;
nodes = (
(247,504,o),
(352,603,o),
(352,632,cs),
(352,655,o),
(334,670,o),
(303,670,cs),
(285,670,o),
(256,636,o),
(233,600,cs),
(207,560,o),
(192,526,o),
(192,522,cs),
(192,509,o),
(206,504,o),
(217,504,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 1 106 0 0 3 0 106 6 1 4 4 3 83 0 3 3 23 67 0 5 5 2 83 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 1 0 1 106 0 0 3 0 106 0 3 6 1 4 5 3 4 92 0 5 5 2 83 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
39 38 49 47 38 57 39 57 40 38 40 36 7 19
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356,-11,o),
(474,74,o),
(474,236,cs),
(474,363,o),
(402,472,o),
(264,472,cs),
(131,472,o),
(33,370,o),
(33,230,cs),
(33,93,o),
(127,-11,o),
(248,-11,cs)
);
},
{
closed = 1;
nodes = (
(172,20,o),
(78,90,o),
(78,231,cs),
(78,364,o),
(163,442,o),
(259,442,cs),
(361,442,o),
(431,355,o),
(431,235,cs),
(431,84,o),
(324,20,o),
(250,20,cs)
);
},
{
closed = 1;
nodes = (
(230,510,o),
(317,597,o),
(317,618,cs),
(317,637,o),
(309,640,o),
(298,640,cs),
(278,640,o),
(203,546,o),
(203,521,cs),
(203,514,o),
(206,510,o),
(211,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 5 4 5 106 0 4 1 4 106 6 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 5 4 5 106 0 4 1 4 106 0 1 6 1 2 3 1 2 92 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
21 20 53 51 46 44 31 29 20 39 21 39 40 36 7 17
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = oacute;
unicode = 243;
},
{
glyphname = obreve;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(387,-11,o),
(518,69,o),
(518,231,cs),
(518,360,o),
(429,472,o),
(276,472,cs),
(118,472,o),
(26,368,o),
(26,230,cs),
(26,90,o),
(114,-11,o),
(267,-11,cs)
);
},
{
closed = 1;
nodes = (
(200,68,o),
(122,123,o),
(122,231,cs),
(122,332,o),
(192,394,o),
(278,394,cs),
(364,394,o),
(424,327,o),
(424,235,cs),
(424,122,o),
(336,68,o),
(269,68,cs)
);
},
{
closed = 1;
nodes = (
(322,510,o),
(391,537,o),
(391,589,cs),
(391,616,o),
(373,619,o),
(353,619,cs),
(336,619,o),
(321,605,o),
(321,590,cs),
(321,585,o),
(317,580,o),
(308,575,cs),
(299,570,o),
(284,567,o),
(265,567,cs),
(235,567,o),
(206,575,o),
(206,590,cs),
(206,613,o),
(193,619,o),
(170,619,cs),
(147,619,o),
(138,606,o),
(138,589,cs),
(138,546,o),
(183,510,o),
(270,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
7 1 5 6 5 106 0 6 0 4 1 6 4 91 8 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
7 1 5 6 5 106 0 6 0 4 1 6 4 91 0 1 8 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
21 20 66 64 60 58 52 50 46 44 31 29 20 39 21 39 40 36 9 17
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(373,-11,o),
(500,70,o),
(500,233,cs),
(500,361,o),
(418,472,o),
(271,472,cs),
(121,472,o),
(29,367,o),
(29,230,cs),
(29,88,o),
(124,-11,o),
(259,-11,cs)
);
},
{
closed = 1;
nodes = (
(191,50,o),
(104,107,o),
(104,231,cs),
(104,345,o),
(180,412,o),
(270,412,cs),
(362,412,o),
(427,340,o),
(427,235,cs),
(427,105,o),
(329,50,o),
(261,50,cs)
);
},
{
closed = 1;
nodes = (
(318,510,o),
(384,537,o),
(384,589,cs),
(384,616,o),
(367,617,o),
(354,617,cs),
(339,617,o),
(328,605,o),
(328,590,cs),
(328,573,o),
(303,555,o),
(264,555,cs),
(234,555,o),
(199,564,o),
(199,590,cs),
(199,610,o),
(190,617,o),
(171,617,cs),
(154,617,o),
(145,608,o),
(145,589,cs),
(145,548,o),
(191,510,o),
(267,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
7 1 5 6 5 106 0 6 0 4 1 6 4 91 8 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
7 1 5 6 5 106 0 6 0 4 1 6 4 91 0 1 8 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
22 21 66 64 60 58 52 50 47 45 32 30 21 40 22 40 40 37 9 28
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356,-11,o),
(474,74,o),
(474,236,cs),
(474,363,o),
(402,472,o),
(264,472,cs),
(131,472,o),
(33,370,o),
(33,230,cs),
(33,93,o),
(127,-11,o),
(248,-11,cs)
);
},
{
closed = 1;
nodes = (
(172,20,o),
(78,90,o),
(78,231,cs),
(78,364,o),
(163,442,o),
(259,442,cs),
(361,442,o),
(431,355,o),
(431,235,cs),
(431,84,o),
(324,20,o),
(250,20,cs)
);
},
{
closed = 1;
nodes = (
(316,510,o),
(374,541,o),
(374,589,cs),
(374,610,o),
(366,613,o),
(355,613,cs),
(344,613,o),
(338,605,o),
(338,590,cs),
(338,563,o),
(299,535,o),
(263,535,cs),
(224,535,o),
(189,549,o),
(189,590,cs),
(189,606,o),
(187,613,o),
(172,613,cs),
(161,613,o),
(155,605,o),
(155,589,cs),
(155,548,o),
(205,510,o),
(263,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
7 1 5 6 5 106 0 6 0 4 1 6 4 91 8 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
7 1 5 6 5 106 0 6 0 4 1 6 4 91 0 1 8 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
21 20 66 64 59 57 53 51 46 44 31 29 20 39 21 39 40 36 9 17
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = obreve;
unicode = 335;
},
{
glyphname = ocircumflex;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(387,-11,o),
(518,69,o),
(518,231,cs),
(518,360,o),
(429,472,o),
(276,472,cs),
(118,472,o),
(26,368,o),
(26,230,cs),
(26,90,o),
(114,-11,o),
(267,-11,cs)
);
},
{
closed = 1;
nodes = (
(200,68,o),
(122,123,o),
(122,231,cs),
(122,332,o),
(192,394,o),
(278,394,cs),
(364,394,o),
(424,327,o),
(424,235,cs),
(424,122,o),
(336,68,o),
(269,68,cs)
);
},
{
closed = 1;
nodes = (
(151,484,o),
(209,520,o),
(258,546,c),
(330,508,o),
(367,484,o),
(378,484,cs),
(387,484,o),
(391,494,o),
(391,505,cs),
(391,546,o),
(282,638,o),
(258,638,cs),
(247,638,o),
(212,613,o),
(185,588,cs),
(154,559,o),
(126,523,o),
(126,498,cs),
(126,491,o),
(131,484,o),
(139,484,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 0 2 106 1 7 2 0 4 0 106 8 1 5 5 4 83 0 4 4 23 67 0 6 6 3 83 0 3 3 24 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 2 0 2 106 1 7 2 0 4 0 106 0 4 8 1 5 6 4 5 92 0 6 6 3 83 0 3 3 24 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
47 46 1 0 57 55 46 65 47 65 42 40 32 30 19 17 11 9 0 25 1 25 9 15
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(373,-11,o),
(500,70,o),
(500,233,cs),
(500,361,o),
(418,472,o),
(271,472,cs),
(121,472,o),
(29,367,o),
(29,230,cs),
(29,88,o),
(124,-11,o),
(259,-11,cs)
);
},
{
closed = 1;
nodes = (
(191,50,o),
(104,107,o),
(104,231,cs),
(104,345,o),
(180,412,o),
(270,412,cs),
(362,412,o),
(427,340,o),
(427,235,cs),
(427,105,o),
(329,50,o),
(261,50,cs)
);
},
{
closed = 1;
nodes = (
(155,496,o),
(186,524,o),
(259,567,c),
(272,559,o),
(366,496,o),
(379,496,cs),
(387,496,o),
(390,504,o),
(390,513,cs),
(390,548,o),
(284,641,o),
(259,641,cs),
(237,641,o),
(129,550,o),
(129,509,cs),
(129,500,o),
(133,496,o),
(140,496,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
46 1 4 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 6 4 6 106 5 8 2 4 1 4 106 7 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 6 4 6 106 5 8 2 4 1 4 106 0 1 7 1 2 3 1 2 92 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
42 41 22 21 59 57 52 50 41 65 42 65 32 30 21 40 22 40 40 37 9 28
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356,-11,o),
(474,74,o),
(474,236,cs),
(474,363,o),
(402,472,o),
(264,472,cs),
(131,472,o),
(33,370,o),
(33,230,cs),
(33,93,o),
(127,-11,o),
(248,-11,cs)
);
},
{
closed = 1;
nodes = (
(172,20,o),
(78,90,o),
(78,231,cs),
(78,364,o),
(163,442,o),
(259,442,cs),
(361,442,o),
(431,355,o),
(431,235,cs),
(431,84,o),
(324,20,o),
(250,20,cs)
);
},
{
closed = 1;
nodes = (
(155,510,o),
(207,559,o),
(260,596,c),
(336,542,o),
(365,510,o),
(380,510,cs),
(385,510,o),
(388,514,o),
(388,521,cs),
(388,546,o),
(285,640,o),
(260,640,cs),
(237,640,o),
(133,546,o),
(133,521,cs),
(133,514,o),
(136,510,o),
(141,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
45 1 4 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 6 4 6 106 5 8 2 4 1 4 106 7 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 6 4 6 106 5 8 2 4 1 4 106 0 1 7 1 2 3 1 2 92 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
41 40 21 20 58 56 51 49 40 63 41 63 31 29 20 39 21 39 40 36 9 17
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = ocircumflex;
unicode = 244;
},
{
glyphname = odieresis;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(387,-11,o),
(518,69,o),
(518,231,cs),
(518,360,o),
(429,472,o),
(276,472,cs),
(118,472,o),
(26,368,o),
(26,230,cs),
(26,90,o),
(114,-11,o),
(267,-11,cs)
);
},
{
closed = 1;
nodes = (
(200,68,o),
(122,123,o),
(122,231,cs),
(122,332,o),
(192,394,o),
(278,394,cs),
(364,394,o),
(424,327,o),
(424,235,cs),
(424,122,o),
(336,68,o),
(269,68,cs)
);
},
{
closed = 1;
nodes = (
(185,509,o),
(222,524,o),
(222,579,cs),
(222,615,o),
(194,640,o),
(162,640,cs),
(115,640,o),
(96,599,o),
(96,575,cs),
(96,536,o),
(122,509,o),
(155,509,cs)
);
},
{
closed = 1;
nodes = (
(392,486,o),
(429,501,o),
(429,556,cs),
(429,592,o),
(401,617,o),
(369,617,cs),
(322,617,o),
(303,576,o),
(303,552,cs),
(303,513,o),
(329,486,o),
(362,486,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 5 2 3 91 8 1 6 6 5 83 0 5 5 23 67 0 7 7 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 5 2 3 91 0 5 8 1 6 7 5 6 91 0 7 7 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
53 52 63 61 52 71 53 71 40 38 38 38 38 36 9 21
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(373,-11,o),
(500,70,o),
(500,233,cs),
(500,361,o),
(418,472,o),
(271,472,cs),
(121,472,o),
(29,367,o),
(29,230,cs),
(29,88,o),
(124,-11,o),
(259,-11,cs)
);
},
{
closed = 1;
nodes = (
(191,50,o),
(104,107,o),
(104,231,cs),
(104,345,o),
(180,412,o),
(270,412,cs),
(362,412,o),
(427,340,o),
(427,235,cs),
(427,105,o),
(329,50,o),
(261,50,cs)
);
},
{
closed = 1;
nodes = (
(180,518,o),
(211,531,o),
(211,579,cs),
(211,610,o),
(189,631,o),
(162,631,cs),
(124,631,o),
(106,596,o),
(106,575,cs),
(106,542,o),
(128,518,o),
(155,518,cs)
);
},
{
closed = 1;
nodes = (
(387,495,o),
(418,508,o),
(418,556,cs),
(418,587,o),
(396,608,o),
(369,608,cs),
(331,608,o),
(313,573,o),
(313,552,cs),
(313,519,o),
(335,495,o),
(362,495,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 4 0 5 7 4 5 91 0 6 0 7 1 6 7 91 8 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 4 0 5 7 4 5 91 0 6 0 7 1 6 7 91 0 1 8 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
22 21 67 65 61 59 53 51 47 45 32 30 21 40 22 40 40 37 9 28
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356,-11,o),
(474,74,o),
(474,236,cs),
(474,363,o),
(402,472,o),
(264,472,cs),
(131,472,o),
(33,370,o),
(33,230,cs),
(33,93,o),
(127,-11,o),
(248,-11,cs)
);
},
{
closed = 1;
nodes = (
(172,20,o),
(78,90,o),
(78,231,cs),
(78,364,o),
(163,442,o),
(259,442,cs),
(361,442,o),
(431,355,o),
(431,235,cs),
(431,84,o),
(324,20,o),
(250,20,cs)
);
},
{
closed = 1;
nodes = (
(174,533,o),
(196,543,o),
(196,579,cs),
(196,602,o),
(181,616,o),
(162,616,cs),
(134,616,o),
(121,589,o),
(121,575,cs),
(121,551,o),
(136,533,o),
(155,533,cs)
);
},
{
closed = 1;
nodes = (
(381,510,o),
(403,520,o),
(403,556,cs),
(403,579,o),
(388,593,o),
(369,593,cs),
(341,593,o),
(328,566,o),
(328,552,cs),
(328,528,o),
(343,510,o),
(362,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 4 0 5 7 4 5 91 0 6 0 7 1 6 7 91 8 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 4 0 5 7 4 5 91 0 6 0 7 1 6 7 91 0 1 8 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
21 20 66 64 60 58 52 50 46 44 31 29 20 39 21 39 40 36 9 17
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = odieresis;
unicode = 246;
},
{
glyphname = ograve;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(387,-11,o),
(518,69,o),
(518,231,cs),
(518,360,o),
(429,472,o),
(276,472,cs),
(118,472,o),
(26,368,o),
(26,230,cs),
(26,90,o),
(114,-11,o),
(267,-11,cs)
);
},
{
closed = 1;
nodes = (
(200,68,o),
(122,123,o),
(122,231,cs),
(122,332,o),
(192,394,o),
(278,394,cs),
(364,394,o),
(424,327,o),
(424,235,cs),
(424,122,o),
(336,68,o),
(269,68,cs)
);
},
{
closed = 1;
nodes = (
(353,500,o),
(375,507,o),
(375,522,cs),
(375,527,o),
(353,574,o),
(333,609,cs),
(309,649,o),
(278,688,o),
(253,688,cs),
(210,687,o),
(183,665,o),
(183,640,cs),
(183,606,o),
(300,500,o),
(338,500,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 1 0 106 0 1 3 1 106 6 1 4 4 3 83 0 3 3 23 67 0 5 5 2 83 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 1 0 106 0 1 3 1 106 0 3 6 1 4 5 3 4 92 0 5 5 2 83 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
37 36 47 45 36 55 37 55 40 40 38 34 7 19
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(373,-11,o),
(500,70,o),
(500,233,cs),
(500,361,o),
(418,472,o),
(271,472,cs),
(121,472,o),
(29,367,o),
(29,230,cs),
(29,88,o),
(124,-11,o),
(259,-11,cs)
);
},
{
closed = 1;
nodes = (
(191,50,o),
(104,107,o),
(104,231,cs),
(104,345,o),
(180,412,o),
(270,412,cs),
(362,412,o),
(427,340,o),
(427,235,cs),
(427,105,o),
(329,50,o),
(261,50,cs)
);
},
{
closed = 1;
nodes = (
(338,504,o),
(352,509,o),
(352,522,cs),
(352,528,o),
(337,557,o),
(311,600,cs),
(288,636,o),
(259,670,o),
(241,670,cs),
(210,670,o),
(192,655,o),
(192,632,cs),
(192,603,o),
(297,504,o),
(327,504,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 1 0 106 0 1 3 1 106 6 1 4 4 3 83 0 3 3 23 67 0 5 5 2 83 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 1 0 106 0 1 3 1 106 0 3 6 1 4 5 3 4 92 0 5 5 2 83 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
39 38 49 47 38 57 39 57 40 40 40 34 7 19
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356,-11,o),
(474,74,o),
(474,236,cs),
(474,363,o),
(402,472,o),
(264,472,cs),
(131,472,o),
(33,370,o),
(33,230,cs),
(33,93,o),
(127,-11,o),
(248,-11,cs)
);
},
{
closed = 1;
nodes = (
(172,20,o),
(78,90,o),
(78,231,cs),
(78,364,o),
(163,442,o),
(259,442,cs),
(361,442,o),
(431,355,o),
(431,235,cs),
(431,84,o),
(324,20,o),
(250,20,cs)
);
},
{
closed = 1;
nodes = (
(315,510,o),
(318,514,o),
(318,521,cs),
(318,546,o),
(243,640,o),
(223,640,cs),
(212,640,o),
(204,637,o),
(204,618,cs),
(204,597,o),
(291,510,o),
(310,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 4 5 4 106 0 5 1 5 106 6 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 4 5 4 106 0 5 1 5 106 0 1 6 1 2 3 1 2 92 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
21 20 51 49 44 42 31 29 20 39 21 39 40 36 7 17
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = ograve;
unicode = 242;
},
{
glyphname = ohungarumlaut;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(387,-11,o),
(518,69,o),
(518,231,cs),
(518,360,o),
(429,472,o),
(276,472,cs),
(118,472,o),
(26,368,o),
(26,230,cs),
(26,90,o),
(114,-11,o),
(267,-11,cs)
);
},
{
closed = 1;
nodes = (
(200,68,o),
(122,123,o),
(122,231,cs),
(122,332,o),
(192,394,o),
(278,394,cs),
(364,394,o),
(424,327,o),
(424,235,cs),
(424,122,o),
(336,68,o),
(269,68,cs)
);
},
{
closed = 1;
nodes = (
(169,500,o),
(204,523,o),
(243,557,cs),
(278,588,o),
(307,622,o),
(307,640,cs),
(307,665,o),
(280,687,o),
(237,688,cs),
(212,688,o),
(181,649,o),
(157,609,cs),
(137,574,o),
(115,527,o),
(115,522,cs),
(115,507,o),
(137,500,o),
(152,500,cs)
);
},
{
closed = 1;
nodes = (
(336,500,o),
(371,523,o),
(410,557,cs),
(445,588,o),
(474,622,o),
(474,640,cs),
(474,665,o),
(447,687,o),
(404,688,cs),
(379,688,o),
(348,649,o),
(324,609,cs),
(304,574,o),
(282,527,o),
(282,522,cs),
(282,507,o),
(304,500,o),
(319,500,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
3 1 1 0 1 106 2 1 0 5 0 106 8 1 6 6 5 83 0 5 5 23 67 0 7 7 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
3 1 1 0 1 106 2 1 0 5 0 106 0 5 8 1 6 7 5 6 92 0 7 7 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
57 56 67 65 56 75 57 75 40 38 38 40 38 38 9 21
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(373,-11,o),
(500,70,o),
(500,233,cs),
(500,361,o),
(418,472,o),
(271,472,cs),
(121,472,o),
(29,367,o),
(29,230,cs),
(29,88,o),
(124,-11,o),
(259,-11,cs)
);
},
{
closed = 1;
nodes = (
(191,50,o),
(104,107,o),
(104,231,cs),
(104,345,o),
(180,412,o),
(270,412,cs),
(362,412,o),
(427,340,o),
(427,235,cs),
(427,105,o),
(329,50,o),
(261,50,cs)
);
},
{
closed = 1;
nodes = (
(175,504,o),
(280,603,o),
(280,632,cs),
(280,655,o),
(262,670,o),
(231,670,cs),
(213,670,o),
(184,636,o),
(161,600,cs),
(135,560,o),
(120,526,o),
(120,522,cs),
(120,509,o),
(134,504,o),
(145,504,cs)
);
},
{
closed = 1;
nodes = (
(337,504,o),
(442,603,o),
(442,632,cs),
(442,655,o),
(424,670,o),
(393,670,cs),
(375,670,o),
(346,636,o),
(323,600,cs),
(297,560,o),
(282,526,o),
(282,522,cs),
(282,509,o),
(296,504,o),
(307,504,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
3 1 1 0 1 106 2 1 0 5 0 106 8 1 6 6 5 83 0 5 5 23 67 0 7 7 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
3 1 1 0 1 106 2 1 0 5 0 106 0 5 8 1 6 7 5 6 92 0 7 7 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
57 56 67 65 56 75 57 75 40 38 40 38 40 36 9 21
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356,-11,o),
(474,74,o),
(474,236,cs),
(474,363,o),
(402,472,o),
(264,472,cs),
(131,472,o),
(33,370,o),
(33,230,cs),
(33,93,o),
(127,-11,o),
(248,-11,cs)
);
},
{
closed = 1;
nodes = (
(172,20,o),
(78,90,o),
(78,231,cs),
(78,364,o),
(163,442,o),
(259,442,cs),
(361,442,o),
(431,355,o),
(431,235,cs),
(431,84,o),
(324,20,o),
(250,20,cs)
);
},
{
closed = 1;
nodes = (
(156,510,o),
(243,597,o),
(243,618,cs),
(243,637,o),
(235,640,o),
(224,640,cs),
(204,640,o),
(129,546,o),
(129,521,cs),
(129,514,o),
(132,510,o),
(137,510,cs)
);
},
{
closed = 1;
nodes = (
(310,510,o),
(397,597,o),
(397,618,cs),
(397,637,o),
(389,640,o),
(378,640,cs),
(358,640,o),
(283,546,o),
(283,521,cs),
(283,514,o),
(286,510,o),
(291,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
7 1 5 4 5 106 6 1 4 1 4 106 8 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
7 1 5 4 5 106 6 1 4 1 4 106 0 1 8 1 2 3 1 2 92 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
21 20 68 66 61 59 53 51 46 44 31 29 20 39 21 39 40 36 9 17
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = ohungarumlaut;
unicode = 337;
},
{
glyphname = omacron;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(387,-11,o),
(518,69,o),
(518,231,cs),
(518,360,o),
(429,472,o),
(276,472,cs),
(118,472,o),
(26,368,o),
(26,230,cs),
(26,90,o),
(114,-11,o),
(267,-11,cs)
);
},
{
closed = 1;
nodes = (
(200,68,o),
(122,123,o),
(122,231,cs),
(122,332,o),
(192,394,o),
(278,394,cs),
(364,394,o),
(424,327,o),
(424,235,cs),
(424,122,o),
(336,68,o),
(269,68,cs)
);
},
{
closed = 1;
nodes = (
(229,566,o),
(326,567,o),
(400,567,cs),
(429,567,o),
(436,594,o),
(436,609,cs),
(436,629,o),
(423,646,o),
(408,646,cs),
(392,646,o),
(374,646,o),
(353,645,cs),
(332,644,o),
(308,643,o),
(280,643,cs),
(238,643,o),
(189,645,o),
(159,645,cs),
(136,645,o),
(126,625,o),
(126,606,cs),
(126,587,o),
(140,566,o),
(159,566,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
6 1 0 0 1 3 0 1 91 7 1 4 4 3 83 0 3 3 23 67 0 5 5 2 83 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
6 1 0 0 1 3 0 1 91 0 3 7 1 4 5 3 4 91 0 5 5 2 83 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
48 47 1 0 58 56 47 66 48 66 43 41 33 31 14 7 0 26 1 18 8 15
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(373,-11,o),
(500,70,o),
(500,233,cs),
(500,361,o),
(418,472,o),
(271,472,cs),
(121,472,o),
(29,367,o),
(29,230,cs),
(29,88,o),
(124,-11,o),
(259,-11,cs)
);
},
{
closed = 1;
nodes = (
(191,50,o),
(104,107,o),
(104,231,cs),
(104,345,o),
(180,412,o),
(270,412,cs),
(362,412,o),
(427,340,o),
(427,235,cs),
(427,105,o),
(329,50,o),
(261,50,cs)
);
},
{
closed = 1;
nodes = (
(226,542,o),
(323,543,o),
(397,543,cs),
(420,543,o),
(426,565,o),
(426,576,cs),
(426,591,o),
(416,604,o),
(405,604,cs),
(389,604,o),
(371,604,o),
(350,603,cs),
(329,602,o),
(305,601,o),
(277,601,cs),
(235,601,o),
(186,603,o),
(156,603,cs),
(137,603,o),
(130,588,o),
(130,573,cs),
(130,558,o),
(141,542,o),
(156,542,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
7 1 4 0 5 1 4 5 91 6 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
7 1 4 0 5 1 4 5 91 0 1 6 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
42 41 22 21 53 46 41 65 42 57 32 30 21 40 22 40 40 37 8 28
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356,-11,o),
(474,74,o),
(474,236,cs),
(474,363,o),
(402,472,o),
(264,472,cs),
(131,472,o),
(33,370,o),
(33,230,cs),
(33,93,o),
(127,-11,o),
(248,-11,cs)
);
},
{
closed = 1;
nodes = (
(172,20,o),
(78,90,o),
(78,231,cs),
(78,364,o),
(163,442,o),
(259,442,cs),
(361,442,o),
(431,355,o),
(431,235,cs),
(431,84,o),
(324,20,o),
(250,20,cs)
);
},
{
closed = 1;
nodes = (
(222,510,o),
(319,511,o),
(393,511,cs),
(408,511,o),
(412,522,o),
(412,529,cs),
(412,536,o),
(406,542,o),
(401,542,cs),
(385,542,o),
(367,542,o),
(346,541,cs),
(325,540,o),
(301,539,o),
(273,539,cs),
(231,539,o),
(182,541,o),
(152,541,cs),
(141,541,o),
(136,533,o),
(136,526,cs),
(136,519,o),
(143,510,o),
(152,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
7 1 4 0 5 1 4 5 91 6 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
7 1 4 0 5 1 4 5 91 0 1 6 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
41 40 21 20 52 45 40 64 41 56 31 29 20 39 21 39 40 36 8 17
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = omacron;
unicode = 333;
},
{
glyphname = oogonek;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(327,-169,o),
(358,-140,o),
(358,-116,cs),
(358,-104,o),
(346,-92,o),
(333,-92,cs),
(313,-92,o),
(314,-116,o),
(273,-116,cs),
(258,-116,o),
(244,-110,o),
(244,-95,cs),
(244,-66,o),
(262,-24,o),
(294,-9,c),
(406,2,o),
(518,81,o),
(518,231,cs),
(518,360,o),
(429,472,o),
(276,472,cs),
(118,472,o),
(26,368,o),
(26,230,cs),
(26,99,o),
(106,2,o),
(236,-9,c),
(212,-21,o),
(165,-49,o),
(165,-94,cs),
(165,-146,o),
(225,-169,o),
(275,-169,cs)
);
},
{
closed = 1;
nodes = (
(200,68,o),
(122,123,o),
(122,231,cs),
(122,332,o),
(192,394,o),
(278,394,cs),
(364,394,o),
(424,327,o),
(424,235,cs),
(424,122,o),
(336,68,o),
(269,68,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 1 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 5 4 1 4 5 1 104 0 1 0 4 1 0 102 0 0 0 2 0 2 88 6 1 4 4 3 83 0 3 3 23 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 5 4 1 4 5 1 104 0 1 0 4 1 0 102 0 3 6 1 4 5 3 4 91 0 0 2 2 0 79 0 0 0 2 84 0 2 0 2 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
50 49 60 58 49 68 50 68 45 43 38 35 42 7 18
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(373,-11,o),
(500,70,o),
(500,233,cs),
(500,361,o),
(418,472,o),
(271,472,cs),
(121,472,o),
(29,367,o),
(29,230,cs),
(29,88,o),
(124,-11,o),
(259,-11,cs)
);
},
{
closed = 1;
nodes = (
(308,-168,o),
(338,-127,o),
(338,-117,cs),
(338,-106,o),
(332,-95,o),
(317,-95,cs),
(313,-95,o),
(309,-97,o),
(304,-101,cs),
(299,-106,o),
(293,-111,o),
(288,-116,cs),
(282,-122,o),
(271,-125,o),
(254,-125,cs),
(238,-125,o),
(223,-110,o),
(223,-94,cs),
(223,-75,o),
(237,-21,o),
(282,-6,c),
(232,-5,l),
(232,-5,l),
(218,-12,o),
(206,-19,o),
(195,-28,cs),
(176,-43,o),
(159,-64,o),
(159,-95,cs),
(159,-138,o),
(201,-168,o),
(260,-168,cs)
);
},
{
closed = 1;
nodes = (
(191,50,o),
(104,107,o),
(104,231,cs),
(104,345,o),
(180,412,o),
(270,412,cs),
(362,412,o),
(427,340,o),
(427,235,cs),
(427,105,o),
(329,50,o),
(261,50,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 3 2 7 7 3 96 0 5 0 4 0 5 4 104 0 4 0 6 4 6 87 8 1 2 2 1 83 0 1 1 23 67 9 1 7 7 0 84 0 0 0 24 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 3 2 7 7 3 96 0 5 0 4 0 5 4 104 0 1 8 1 2 3 1 2 91 0 4 0 6 4 6 87 9 1 7 7 0 84 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 3 2 7 2 3 7 104 0 5 0 4 0 5 4 104 0 1 8 1 2 3 1 2 91 0 4 0 6 4 6 87 9 1 7 7 0 84 0 0 0 24 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
41 41 22 21 41 70 41 70 63 61 55 53 50 48 32 30 21 40 22 40 40 37 10 28
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(301,-169,o),
(331,-128,o),
(331,-118,cs),
(331,-110,o),
(329,-102,o),
(317,-102,cs),
(298,-102,o),
(292,-142,o),
(255,-142,cs),
(224,-142,o),
(216,-112,o),
(216,-95,cs),
(216,-76,o),
(227,-28,o),
(268,-10,c),
(367,1,o),
(474,79,o),
(474,236,cs),
(474,363,o),
(402,472,o),
(264,472,cs),
(131,472,o),
(33,370,o),
(33,230,cs),
(33,96,o),
(121,-2,o),
(231,-10,c),
(211,-21,o),
(172,-49,o),
(172,-96,cs),
(172,-139,o),
(206,-169,o),
(253,-169,cs)
);
},
{
closed = 1;
nodes = (
(172,20,o),
(78,90,o),
(78,231,cs),
(78,364,o),
(163,442,o),
(259,442,cs),
(361,442,o),
(431,355,o),
(431,235,cs),
(431,84,o),
(324,20,o),
(250,20,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
36 1 1 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 5 4 1 4 5 1 104 0 1 0 4 1 0 102 0 0 0 2 0 2 88 6 1 4 4 3 83 0 3 3 23 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 5 4 1 4 5 1 104 0 1 0 4 1 0 102 0 3 6 1 4 5 3 4 91 0 0 2 2 0 79 0 0 0 2 84 0 2 0 2 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
52 51 62 60 51 70 52 70 47 45 38 35 46 7 18
CALL[ ]	/* CallFunction */";
};
width = 507;
}
);
note = oogonek;
unicode = 491;
},
{
glyphname = oslash;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(159,-67,o),
(174,-64,o),
(189,-35,cs),
(205,-4,l),
(224,-8,o),
(244,-11,o),
(267,-11,cs),
(387,-11,o),
(518,69,o),
(518,231,cs),
(518,307,o),
(488,376,o),
(431,421,c),
(442,441,o),
(453,469,o),
(453,481,cs),
(453,493,o),
(445,517,o),
(405,517,cs),
(381,517,o),
(363,476,o),
(361,470,cs),
(356,460,l),
(332,468,o),
(305,472,o),
(276,472,cs),
(118,472,o),
(26,368,o),
(26,230,cs),
(26,141,o),
(61,69,o),
(125,28,c),
(100,-22,ls),
(97,-29,o),
(94,-37,o),
(94,-42,cs),
(94,-66,o),
(129,-67,o),
(142,-67,cs)
);
},
{
closed = 1;
nodes = (
(141,138,o),
(122,178,o),
(122,231,cs),
(122,332,o),
(192,394,o),
(278,394,cs),
(292,394,o),
(306,392,o),
(319,388,c),
(294,339,o),
(268,291,o),
(243,246,cs),
(217,201,o),
(192,156,o),
(168,111,c)
);
},
{
closed = 1;
nodes = (
(261,68,o),
(252,69,o),
(244,70,c),
(389,342,l),
(412,314,o),
(424,278,o),
(424,235,cs),
(424,122,o),
(336,68,o),
(269,68,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
43 31 2 4 2 62 57 54 3 5 4 21 8 2 0 5 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 2 3 106 0 1 0 1 107 6 1 4 4 2 83 0 2 2 23 67 0 5 5 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 3 2 3 106 0 1 0 1 107 0 2 6 1 4 5 2 4 91 0 5 5 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
47 46 67 65 46 58 47 58 38 46 53 36 7 19
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(373,-11,o),
(500,70,o),
(500,233,cs),
(500,361,o),
(418,472,o),
(271,472,cs),
(121,472,o),
(29,367,o),
(29,230,cs),
(29,88,o),
(124,-11,o),
(259,-11,cs)
);
},
{
closed = 1;
nodes = (
(146,-64,o),
(164,-46,o),
(169,-35,cs),
(413,421,ls),
(417,429,o),
(440,472,o),
(440,489,cs),
(440,500,o),
(434,517,o),
(406,517,cs),
(382,517,o),
(364,476,o),
(362,470,c),
(264,271,o),
(189,153,o),
(101,-22,cs),
(97,-30,o),
(95,-37,o),
(95,-44,cs),
(95,-61,o),
(117,-64,o),
(129,-64,cs)
);
},
{
closed = 1;
nodes = (
(191,50,o),
(104,107,o),
(104,231,cs),
(104,345,o),
(180,412,o),
(270,412,cs),
(362,412,o),
(427,340,o),
(427,235,cs),
(427,105,o),
(329,50,o),
(261,50,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 3 0 106 0 1 2 1 107 6 1 4 4 3 83 0 3 3 23 67 0 5 5 2 83 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 3 0 106 0 1 2 1 107 0 3 6 1 4 5 3 4 91 0 5 5 2 83 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
48 47 58 56 47 66 48 66 40 40 42 41 7 19
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(127,-59,o),
(131,-54,o),
(140,-35,cs),
(163,8,l),
(190,-5,o),
(219,-11,o),
(248,-11,cs),
(356,-11,o),
(474,74,o),
(474,236,cs),
(474,316,o),
(446,388,o),
(390,431,c),
(408,464,ls),
(413,475,o),
(422,492,o),
(422,503,cs),
(422,511,o),
(419,517,o),
(407,517,cs),
(383,517,o),
(365,476,o),
(363,470,c),
(354,453,l),
(327,466,o),
(297,472,o),
(264,472,cs),
(131,472,o),
(33,370,o),
(33,230,cs),
(33,141,o),
(71,71,o),
(128,28,c),
(123,20,o),
(119,12,o),
(115,4,cs),
(111,-5,o),
(107,-13,o),
(102,-22,cs),
(99,-29,o),
(97,-39,o),
(97,-47,cs),
(97,-55,o),
(102,-59,o),
(111,-59,cs)
);
},
{
closed = 1;
nodes = (
(107,96,o),
(78,151,o),
(78,231,cs),
(78,364,o),
(163,442,o),
(259,442,cs),
(288,442,o),
(315,434,o),
(338,421,c),
(305,356,o),
(272,294,o),
(241,236,cs),
(209,177,o),
(177,119,o),
(146,61,c)
);
},
{
closed = 1;
nodes = (
(227,20,o),
(203,26,o),
(179,38,c),
(372,396,l),
(409,359,o),
(431,303,o),
(431,235,cs),
(431,84,o),
(324,20,o),
(250,20,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
29 1 4 2 63 62 56 53 42 19 6 5 4 7 1 0 5 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 2 3 106 0 1 0 1 107 6 1 4 4 2 83 0 2 2 23 67 0 5 5 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 3 2 3 106 0 1 0 1 107 0 2 6 1 4 5 2 4 91 0 5 5 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
46 45 66 64 45 58 46 58 38 46 36 36 7 19
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = oslash;
unicode = 248;
},
{
glyphname = oslashacute;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(159,-67,o),
(174,-64,o),
(189,-35,cs),
(205,-4,l),
(224,-8,o),
(244,-11,o),
(267,-11,cs),
(387,-11,o),
(518,69,o),
(518,231,cs),
(518,307,o),
(488,376,o),
(431,421,c),
(442,441,o),
(453,469,o),
(453,481,cs),
(453,493,o),
(445,517,o),
(405,517,cs),
(381,517,o),
(363,476,o),
(361,470,cs),
(356,460,l),
(332,468,o),
(305,472,o),
(276,472,cs),
(118,472,o),
(26,368,o),
(26,230,cs),
(26,141,o),
(61,69,o),
(125,28,c),
(100,-22,ls),
(97,-29,o),
(94,-37,o),
(94,-42,cs),
(94,-66,o),
(129,-67,o),
(142,-67,cs)
);
},
{
closed = 1;
nodes = (
(141,138,o),
(122,178,o),
(122,231,cs),
(122,332,o),
(192,394,o),
(278,394,cs),
(292,394,o),
(306,392,o),
(319,388,c),
(294,339,o),
(268,291,o),
(243,246,cs),
(217,201,o),
(192,156,o),
(168,111,c)
);
},
{
closed = 1;
nodes = (
(261,68,o),
(252,69,o),
(244,70,c),
(389,342,l),
(412,314,o),
(424,278,o),
(424,235,cs),
(424,122,o),
(336,68,o),
(269,68,cs)
);
},
{
closed = 1;
nodes = (
(226,500,o),
(261,523,o),
(300,557,cs),
(335,588,o),
(364,622,o),
(364,640,cs),
(364,665,o),
(337,687,o),
(294,688,cs),
(269,688,o),
(238,649,o),
(214,609,cs),
(194,574,o),
(172,527,o),
(172,522,cs),
(172,507,o),
(194,500,o),
(209,500,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
61 49 2 6 4 80 75 72 3 7 6 39 26 2 2 7 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 5 1 106 0 5 0 5 106 0 0 4 0 106 0 3 2 3 107 8 1 6 6 4 83 0 4 4 23 67 0 7 7 2 83 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 1 5 1 106 0 5 0 5 106 0 0 4 0 106 0 3 2 3 107 0 4 8 1 6 7 4 6 92 0 7 7 2 83 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
65 64 85 83 64 76 65 76 38 46 53 38 38 38 9 21
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(373,-11,o),
(500,70,o),
(500,233,cs),
(500,361,o),
(418,472,o),
(271,472,cs),
(121,472,o),
(29,367,o),
(29,230,cs),
(29,88,o),
(124,-11,o),
(259,-11,cs)
);
},
{
closed = 1;
nodes = (
(146,-64,o),
(164,-46,o),
(169,-35,cs),
(413,421,ls),
(417,429,o),
(440,472,o),
(440,489,cs),
(440,500,o),
(434,517,o),
(406,517,cs),
(382,517,o),
(364,476,o),
(362,470,c),
(264,271,o),
(189,153,o),
(101,-22,cs),
(97,-30,o),
(95,-37,o),
(95,-44,cs),
(95,-61,o),
(117,-64,o),
(129,-64,cs)
);
},
{
closed = 1;
nodes = (
(191,50,o),
(104,107,o),
(104,231,cs),
(104,345,o),
(180,412,o),
(270,412,cs),
(362,412,o),
(427,340,o),
(427,235,cs),
(427,105,o),
(329,50,o),
(261,50,cs)
);
},
{
closed = 1;
nodes = (
(252,504,o),
(357,603,o),
(357,632,cs),
(357,655,o),
(339,670,o),
(308,670,cs),
(290,670,o),
(261,636,o),
(238,600,cs),
(212,560,o),
(197,526,o),
(197,522,cs),
(197,509,o),
(211,504,o),
(222,504,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 3 0 3 106 0 0 2 0 106 0 2 5 2 106 0 1 4 1 107 8 1 6 6 5 83 0 5 5 23 67 0 7 7 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 3 0 3 106 0 0 2 0 106 0 2 5 2 106 0 1 4 1 107 0 5 8 1 6 7 5 6 92 0 7 7 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
66 65 76 74 65 84 66 84 40 38 40 40 42 41 9 21
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(127,-59,o),
(131,-54,o),
(140,-35,cs),
(163,8,l),
(190,-5,o),
(219,-11,o),
(248,-11,cs),
(356,-11,o),
(474,74,o),
(474,236,cs),
(474,316,o),
(446,388,o),
(390,431,c),
(408,464,ls),
(413,475,o),
(422,492,o),
(422,503,cs),
(422,511,o),
(419,517,o),
(407,517,cs),
(383,517,o),
(365,476,o),
(363,470,c),
(354,453,l),
(327,466,o),
(297,472,o),
(264,472,cs),
(131,472,o),
(33,370,o),
(33,230,cs),
(33,141,o),
(71,71,o),
(128,28,c),
(123,20,o),
(119,12,o),
(115,4,cs),
(111,-5,o),
(107,-13,o),
(102,-22,cs),
(99,-29,o),
(97,-39,o),
(97,-47,cs),
(97,-55,o),
(102,-59,o),
(111,-59,cs)
);
},
{
closed = 1;
nodes = (
(107,96,o),
(78,151,o),
(78,231,cs),
(78,364,o),
(163,442,o),
(259,442,cs),
(288,442,o),
(315,434,o),
(338,421,c),
(305,356,o),
(272,294,o),
(241,236,cs),
(209,177,o),
(177,119,o),
(146,61,c)
);
},
{
closed = 1;
nodes = (
(227,20,o),
(203,26,o),
(179,38,c),
(372,396,l),
(409,359,o),
(431,303,o),
(431,235,cs),
(431,84,o),
(324,20,o),
(250,20,cs)
);
},
{
closed = 1;
nodes = (
(261,510,o),
(348,597,o),
(348,618,cs),
(348,637,o),
(340,640,o),
(329,640,cs),
(309,640,o),
(234,546,o),
(234,521,cs),
(234,514,o),
(237,510,o),
(242,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
29 1 4 2 63 62 56 53 42 19 6 5 4 7 1 0 5 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 7 3 7 106 0 3 6 3 106 0 6 2 6 106 0 1 0 1 107 8 1 4 4 2 83 0 2 2 23 67 0 5 5 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 7 3 7 106 0 3 6 3 106 0 6 2 6 106 0 1 0 1 107 0 2 8 1 4 5 2 4 91 0 5 5 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
46 45 83 81 76 74 66 64 45 58 46 58 38 46 36 36 9 19
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = oslashacute;
unicode = 511;
},
{
glyphname = otilde;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(387,-11,o),
(518,69,o),
(518,231,cs),
(518,360,o),
(429,472,o),
(276,472,cs),
(118,472,o),
(26,368,o),
(26,230,cs),
(26,90,o),
(114,-11,o),
(267,-11,cs)
);
},
{
closed = 1;
nodes = (
(200,68,o),
(122,123,o),
(122,231,cs),
(122,332,o),
(192,394,o),
(278,394,cs),
(364,394,o),
(424,327,o),
(424,235,cs),
(424,122,o),
(336,68,o),
(269,68,cs)
);
},
{
closed = 1;
nodes = (
(122,498,o),
(146,523,o),
(185,523,cs),
(224,523,o),
(266,499,o),
(322,499,cs),
(355,499,o),
(433,517,o),
(433,574,cs),
(433,595,o),
(418,609,o),
(411,609,cs),
(406,609,o),
(396,605,o),
(381,596,cs),
(362,585,o),
(340,579,o),
(321,579,cs),
(282,579,o),
(220,607,o),
(184,607,cs),
(159,607,o),
(137,601,o),
(116,589,cs),
(97,578,o),
(82,563,o),
(82,534,cs),
(82,514,o),
(89,498,o),
(101,498,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 1 5 7 91 10 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 1 5 7 91 0 1 10 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
21 20 74 72 69 67 64 62 56 54 51 49 46 44 31 29 20 39 21 39 40 36 11 17
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(373,-11,o),
(500,70,o),
(500,233,cs),
(500,361,o),
(418,472,o),
(271,472,cs),
(121,472,o),
(29,367,o),
(29,230,cs),
(29,88,o),
(124,-11,o),
(259,-11,cs)
);
},
{
closed = 1;
nodes = (
(191,50,o),
(104,107,o),
(104,231,cs),
(104,345,o),
(180,412,o),
(270,412,cs),
(362,412,o),
(427,340,o),
(427,235,cs),
(427,105,o),
(329,50,o),
(261,50,cs)
);
},
{
closed = 1;
nodes = (
(119,507,o),
(146,532,o),
(186,532,cs),
(225,532,o),
(267,508,o),
(323,508,cs),
(379,508,o),
(412,530,o),
(425,553,cs),
(428,559,o),
(430,565,o),
(430,572,cs),
(430,588,o),
(419,600,o),
(412,600,cs),
(409,600,o),
(405,599,o),
(402,598,cs),
(398,596,o),
(391,592,o),
(382,587,cs),
(359,576,o),
(339,570,o),
(322,570,cs),
(283,570,o),
(221,598,o),
(185,598,cs),
(160,598,o),
(138,592,o),
(117,580,cs),
(107,574,o),
(100,569,o),
(96,564,cs),
(92,559,o),
(89,555,o),
(88,552,cs),
(86,547,o),
(85,541,o),
(85,535,cs),
(85,520,o),
(91,507,o),
(102,507,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 7 1 3 91 10 1 8 8 7 83 0 7 7 23 67 0 9 9 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 7 1 3 91 0 7 10 1 8 9 7 8 91 0 9 9 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
60 59 70 68 59 78 60 78 40 40 35 35 38 35 35 37 11 34
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356,-11,o),
(474,74,o),
(474,236,cs),
(474,363,o),
(402,472,o),
(264,472,cs),
(131,472,o),
(33,370,o),
(33,230,cs),
(33,93,o),
(127,-11,o),
(248,-11,cs)
);
},
{
closed = 1;
nodes = (
(172,20,o),
(78,90,o),
(78,231,cs),
(78,364,o),
(163,442,o),
(259,442,cs),
(361,442,o),
(431,355,o),
(431,235,cs),
(431,84,o),
(324,20,o),
(250,20,cs)
);
},
{
closed = 1;
nodes = (
(119,522,o),
(146,547,o),
(187,547,cs),
(226,547,o),
(268,523,o),
(324,523,cs),
(377,523,o),
(426,543,o),
(426,568,cs),
(426,577,o),
(420,585,o),
(413,585,cs),
(410,585,o),
(406,584,o),
(403,583,cs),
(399,581,o),
(392,577,o),
(383,572,cs),
(360,561,o),
(340,555,o),
(323,555,cs),
(284,555,o),
(222,583,o),
(186,583,cs),
(161,583,o),
(139,577,o),
(118,565,cs),
(99,554,o),
(89,544,o),
(89,537,cs),
(89,530,o),
(96,522,o),
(103,522,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 1 5 7 91 10 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 1 5 7 91 0 1 10 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
21 20 73 71 68 66 63 61 55 53 50 48 45 43 31 29 20 39 21 39 40 36 11 17
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = otilde;
unicode = 245;
},
{
glyphname = oe;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(319,-11,o),
(393,-4,o),
(442,80,c),
(481,11,o),
(540,-11,o),
(627,-11,cs),
(729,-11,o),
(802,21,o),
(838,64,cs),
(874,106,o),
(883,143,o),
(883,166,cs),
(883,183,o),
(876,211,o),
(841,211,cs),
(822,211,o),
(795,204,o),
(795,171,cs),
(795,110,o),
(721,69,o),
(654,69,cs),
(567,69,o),
(520,134,o),
(520,196,cs),
(520,207,o),
(521,220,o),
(522,235,c),
(559,235,o),
(608,236,o),
(642,236,cs),
(678,236,o),
(713,236,o),
(746,236,cs),
(779,236,o),
(806,236,o),
(828,237,cs),
(853,238,o),
(869,269,o),
(869,304,cs),
(869,357,o),
(813,477,o),
(637,477,cs),
(559,477,o),
(488,459,o),
(447,377,c),
(415,433,o),
(370,472,o),
(273,472,cs),
(114,472,o),
(26,369,o),
(26,228,cs),
(26,80,o),
(124,-11,o),
(267,-11,cs)
);
},
{
closed = 1;
nodes = (
(206,68,o),
(122,122,o),
(122,233,cs),
(122,337,o),
(197,394,o),
(279,394,cs),
(363,394,o),
(424,335,o),
(424,236,cs),
(424,105,o),
(340,68,o),
(279,68,cs)
);
},
{
closed = 1;
nodes = (
(534,353,o),
(594,395,o),
(659,395,cs),
(720,395,o),
(772,360,o),
(772,332,cs),
(772,322,o),
(767,317,o),
(758,317,cs),
(526,313,l),
(526,313,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
51 1 9 7 31 1 0 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 6 0 6 1 0 104 13 1 9 11 1 6 1 9 6 91 10 12 2 7 7 4 83 5 1 4 4 23 67 8 1 0 0 2 83 3 1 2 2 24 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 6 0 6 1 0 104 5 1 4 10 12 2 7 9 4 7 91 13 1 9 11 1 6 1 9 6 91 8 1 0 0 2 83 3 1 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 6 0 6 1 0 104 0 5 4 7 5 79 0 4 10 12 2 7 9 4 7 91 13 1 9 11 1 6 1 9 6 91 8 1 0 0 2 83 3 1 2 2 24 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
93 92 73 72 0 0 100 98 92 104 93 104 83 81 72 91 73 91 0 71 0 63 40 40 38 42 38 39 14 21
CALL[ ]	/* CallFunction */";
};
width = 904;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(322,-11,o),
(401,11,o),
(445,94,c),
(480,22,o),
(541,-11,o),
(633,-11,cs),
(805,-11,o),
(865,107,o),
(865,174,cs),
(865,189,o),
(862,209,o),
(833,209,cs),
(800,209,o),
(801,185,o),
(801,177,cs),
(796,107,o),
(734,51,o),
(648,51,cs),
(545,51,o),
(502,132,o),
(502,204,cs),
(502,215,o),
(503,229,o),
(504,244,c),
(548,244,o),
(605,245,o),
(645,245,cs),
(677,245,o),
(708,245,o),
(739,245,cs),
(770,245,o),
(795,245,o),
(816,246,cs),
(837,247,o),
(851,276,o),
(851,304,cs),
(851,357,o),
(796,477,o),
(640,477,cs),
(560,477,o),
(487,446,o),
(450,365,c),
(419,429,o),
(366,472,o),
(269,472,cs),
(118,472,o),
(29,367,o),
(29,229,cs),
(29,83,o),
(127,-11,o),
(259,-11,cs)
);
},
{
closed = 1;
nodes = (
(192,50,o),
(104,108,o),
(104,232,cs),
(104,347,o),
(183,412,o),
(271,412,cs),
(363,412,o),
(427,341,o),
(427,232,cs),
(427,104,o),
(338,50,o),
(267,50,cs)
);
},
{
closed = 1;
nodes = (
(519,360,o),
(573,414,o),
(652,414,cs),
(730,414,o),
(776,362,o),
(776,324,cs),
(776,316,o),
(774,308,o),
(761,308,cs),
(508,304,l),
(508,304,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
47 1 9 7 29 13 2 0 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 6 0 6 1 0 104 13 1 9 11 1 6 1 9 6 91 10 12 2 7 7 4 83 5 1 4 4 23 67 8 1 0 0 2 83 3 1 2 2 24 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 6 0 6 1 0 104 5 1 4 10 12 2 7 9 4 7 91 13 1 9 11 1 6 1 9 6 91 8 1 0 0 2 83 3 1 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 6 0 6 1 0 104 0 5 4 7 5 79 0 4 10 12 2 7 9 4 7 91 13 1 9 11 1 6 1 9 6 91 8 1 0 0 2 83 3 1 2 2 24 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
87 86 67 66 0 0 95 93 86 99 87 99 77 75 66 85 67 85 0 65 0 57 36 40 38 38 40 39 14 21
CALL[ ]	/* CallFunction */";
};
width = 888;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(323,-11,o),
(409,32,o),
(449,118,c),
(478,39,o),
(542,-11,o),
(642,-11,cs),
(753,-11,o),
(839,81,o),
(839,187,cs),
(839,199,o),
(833,205,o),
(822,205,cs),
(811,205,o),
(805,199,o),
(805,187,cs),
(805,101,o),
(748,21,o),
(640,21,cs),
(520,21,o),
(476,122,o),
(476,218,cs),
(476,230,o),
(477,244,o),
(478,259,c),
(531,259,o),
(600,260,o),
(649,260,cs),
(676,260,o),
(702,260,o),
(727,260,cs),
(752,260,o),
(773,260,o),
(790,261,cs),
(814,262,o),
(825,283,o),
(825,304,cs),
(825,359,o),
(771,477,o),
(645,477,cs),
(561,477,o),
(489,426,o),
(454,345,c),
(423,420,o),
(360,472,o),
(264,472,cs),
(131,472,o),
(33,370,o),
(33,230,cs),
(33,93,o),
(127,-11,o),
(248,-11,cs)
);
},
{
closed = 1;
nodes = (
(172,20,o),
(78,90,o),
(78,231,cs),
(78,364,o),
(163,442,o),
(259,442,cs),
(362,442,o),
(431,363,o),
(431,226,cs),
(431,88,o),
(323,20,o),
(250,20,cs)
);
},
{
closed = 1;
nodes = (
(482,289,l),
(482,289,l),
(495,364,o),
(543,445,o),
(642,445,cs),
(741,445,o),
(782,364,o),
(782,311,cs),
(782,299,o),
(776,293,o),
(765,293,cs),
(482,289,l),
(482,289,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
43 1 9 7 25 1 0 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 6 0 6 1 0 104 13 1 9 11 1 6 1 9 6 91 10 12 2 7 7 4 83 5 1 4 4 23 67 8 1 0 0 2 83 3 1 2 2 24 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 6 0 6 1 0 104 5 1 4 10 12 2 7 9 4 7 91 13 1 9 11 1 6 1 9 6 91 8 1 0 0 2 83 3 1 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 6 0 6 1 0 104 0 5 4 7 5 79 0 4 10 12 2 7 9 4 7 91 13 1 9 11 1 6 1 9 6 91 8 1 0 0 2 83 3 1 2 2 24 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
81 80 63 62 0 0 88 86 80 92 81 92 73 71 62 79 63 79 0 61 0 53 36 40 38 37 37 39 14 21
CALL[ ]	/* CallFunction */";
};
width = 865;
}
);
note = oe;
unicode = 339;
},
{
glyphname = p;
kernLeft = p;
kernRight = c_p;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(267,-202,ls),
(294,-202,o),
(314,-195,o),
(314,-170,cs),
(314,-138,o),
(282,-126,o),
(247,-126,cs),
(182,-126,l),
(182,68,l),
(200,35,o),
(240,-11,o),
(330,-11,cs),
(398,-11,o),
(536,46,o),
(536,238,cs),
(536,347,o),
(492,471,o),
(356,471,cs),
(268,471,o),
(217,420,o),
(182,346,c),
(182,413,l),
(182,413,l),
(182,444,o),
(176,449,o),
(157,449,cs),
(23,449,o),
(-22,439,o),
(-22,408,cs),
(-22,386,o),
(7,377,o),
(30,377,cs),
(56,377,ls),
(88,377,o),
(90,374,o),
(90,355,cs),
(90,284,o),
(94,264,o),
(94,124,cs),
(94,54,o),
(91,-31,o),
(91,-86,cs),
(91,-104,o),
(90,-115,o),
(89,-119,cs),
(88,-123,o),
(85,-125,o),
(80,-126,cs),
(44,-134,o),
(17,-139,o),
(17,-166,cs),
(17,-193,o),
(35,-202,o),
(62,-202,cs)
);
},
{
closed = 1;
nodes = (
(229,67,o),
(181,131,o),
(181,219,cs),
(181,323,o),
(253,391,o),
(323,391,cs),
(412,391,o),
(441,316,o),
(441,240,cs),
(441,106,o),
(367,67,o),
(312,67,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
20 0 2 6 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 5 5 15 67 7 1 4 4 0 83 0 0 0 23 67 0 6 6 1 83 0 1 1 24 67 0 2 2 3 84 0 3 3 17 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 4 7 6 7 4 6 104 0 5 5 15 67 0 7 7 0 83 0 0 0 23 67 0 6 6 1 83 0 1 1 24 67 0 2 2 3 84 0 3 3 17 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 5 0 7 0 5 7 104 0 4 7 6 7 4 6 104 0 0 0 7 4 0 7 91 0 2 0 3 2 3 88 0 6 6 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
80 78 70 68 63 61 53 50 52 37 40 36 8 19
CALL[ ]	/* CallFunction */";
};
width = 564;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(272,-202,ls),
(283,-202,o),
(302,-198,o),
(302,-179,cs),
(302,-156,o),
(277,-144,o),
(242,-144,cs),
(177,-144,l),
(177,68,l),
(195,35,o),
(235,-11,o),
(325,-11,cs),
(393,-11,o),
(531,46,o),
(531,238,cs),
(531,337,o),
(497,471,o),
(347,471,cs),
(280,471,o),
(212,427,o),
(177,346,c),
(177,413,l),
(177,413,l),
(177,444,o),
(171,449,o),
(152,449,cs),
(50,449,o),
(-20,445,o),
(-20,418,cs),
(-20,399,o),
(16,397,o),
(30,397,cs),
(72,397,ls),
(100,397,o),
(106,396,o),
(106,375,cs),
(106,301,o),
(110,266,o),
(110,124,cs),
(110,54,o),
(107,-31,o),
(107,-86,cs),
(107,-136,o),
(110,-142,o),
(75,-145,cs),
(40,-149,o),
(19,-160,o),
(19,-180,cs),
(19,-201,o),
(39,-202,o),
(47,-202,cs)
);
},
{
closed = 1;
nodes = (
(207,49,o),
(176,129,o),
(176,219,cs),
(176,345,o),
(269,410,o),
(343,410,cs),
(442,410,o),
(457,305,o),
(457,240,cs),
(457,89,o),
(373,49,o),
(322,49,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
18 0 2 6 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 7 7 0 83 0 0 0 23 67 0 4 4 5 83 0 5 5 15 67 0 6 6 1 83 0 1 1 24 67 0 2 2 3 83 0 3 3 17 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 7 4 0 7 91 0 5 0 4 6 5 4 91 0 6 6 1 83 0 1 1 24 67 0 2 2 3 83 0 3 3 17 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 0 0 7 4 0 7 91 0 5 0 4 6 5 4 91 0 2 0 3 2 3 87 0 6 6 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
82 80 72 70 63 60 54 50 52 37 40 34 8 19
CALL[ ]	/* CallFunction */";
};
width = 562;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(265,-202,ls),
(276,-202,o),
(285,-198,o),
(285,-189,cs),
(285,-186,o),
(281,-182,o),
(273,-179,cs),
(265,-176,o),
(252,-174,o),
(235,-174,cs),
(170,-174,l),
(170,68,l),
(188,35,o),
(228,-11,o),
(318,-11,cs),
(386,-11,o),
(524,46,o),
(524,238,cs),
(524,337,o),
(490,471,o),
(340,471,cs),
(273,471,o),
(205,427,o),
(170,346,c),
(170,413,ls),
(170,444,o),
(164,449,o),
(145,449,cs),
(37,449,o),
(-17,444,o),
(-17,427,cs),
(-17,418,o),
(8,417,o),
(23,417,cs),
(95,417,ls),
(123,417,o),
(129,415,o),
(129,375,cs),
(129,301,o),
(133,266,o),
(133,124,cs),
(133,54,o),
(130,-31,o),
(130,-86,cs),
(130,-162,o),
(135,-172,o),
(68,-175,cs),
(51,-176,o),
(39,-178,o),
(32,-180,cs),
(25,-183,o),
(22,-186,o),
(22,-190,cs),
(22,-201,o),
(32,-202,o),
(40,-202,cs)
);
},
{
closed = 1;
nodes = (
(199,19,o),
(169,114,o),
(169,219,cs),
(169,369,o),
(265,440,o),
(336,440,cs),
(459,440,o),
(480,319,o),
(480,240,cs),
(480,72,o),
(385,19,o),
(315,19,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
18 0 2 7 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 8 8 0 83 0 0 0 23 67 0 5 5 6 83 0 6 6 15 67 0 7 7 1 83 0 1 1 24 67 4 1 2 2 3 83 0 3 3 17 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 0 8 5 0 8 91 0 6 0 5 7 6 5 91 0 7 7 1 83 0 1 1 24 67 4 1 2 2 3 83 0 3 3 17 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 0 8 5 0 8 91 0 6 0 5 7 6 5 91 4 1 2 0 3 2 3 87 0 7 7 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
80 78 70 68 61 58 53 50 21 52 37 40 34 9 20
CALL[ ]	/* CallFunction */";
};
width = 559;
}
);
note = p;
unicode = 112;
},
{
glyphname = thorn;
kernLeft = b;
kernRight = b;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(54,-235,o),
(81,-232,o),
(128,-232,cs),
(130,-232,o),
(168,-235,o),
(242,-235,cs),
(258,-235,o),
(283,-226,o),
(283,-199,cs),
(283,-167,o),
(243,-158,o),
(211,-158,cs),
(146,-158,l),
(146,36,l),
(172,13,o),
(193,-9,o),
(267,-9,cs),
(395,-9,o),
(505,49,o),
(505,220,cs),
(505,325,o),
(465,458,o),
(301,458,cs),
(245,458,o),
(192,430,o),
(155,366,c),
(155,734,l),
(155,734,l),
(155,800,o),
(146,818,o),
(129,818,cs),
(39,818,ls),
(4,818,o),
(-52,809,o),
(-52,775,cs),
(-52,742,o),
(-19,739,o),
(1,739,cs),
(25,739,ls),
(54,739,o),
(63,729,o),
(63,712,cs),
(63,670,o),
(64,596,o),
(64,498,cs),
(64,359,o),
(63,239,o),
(60,140,cs),
(57,40,o),
(55,-40,o),
(55,-101,cs),
(55,-126,o),
(52,-142,o),
(46,-149,cs),
(39,-156,o),
(32,-159,o),
(24,-159,cs),
(-1,-159,o),
(-14,-170,o),
(-14,-192,cs),
(-14,-227,o),
(8,-235,o),
(45,-235,cs)
);
},
{
closed = 1;
nodes = (
(210,70,o),
(154,114,o),
(154,214,cs),
(154,304,o),
(200,379,o),
(291,379,cs),
(359,379,o),
(411,338,o),
(411,218,cs),
(411,93,o),
(336,70,o),
(269,70,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 1 7 8 18 1 1 7 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 5 5 6 83 0 6 6 14 67 0 8 8 0 83 0 0 0 23 67 0 7 7 1 83 0 1 1 24 67 4 1 2 2 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 8 7 0 8 91 4 1 2 0 3 2 3 87 0 5 5 6 83 0 6 6 14 67 0 7 7 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
40 41 56 60 35 198 37 40 34 9 24
CALL[ ]	/* CallFunction */";
};
width = 533;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(35,-235,o),
(62,-232,o),
(109,-232,cs),
(111,-232,o),
(149,-235,o),
(223,-235,cs),
(226,-235,o),
(257,-228,o),
(257,-208,cs),
(257,-180,o),
(210,-176,o),
(192,-176,cs),
(127,-176,l),
(127,48,l),
(152,20,o),
(178,-9,o),
(255,-9,cs),
(369,-9,o),
(486,49,o),
(486,220,cs),
(486,320,o),
(447,458,o),
(294,458,cs),
(230,458,o),
(173,423,o),
(136,354,c),
(136,752,l),
(136,752,l),
(136,807,o),
(126,818,o),
(110,818,cs),
(20,818,ls),
(4,818,o),
(-64,815,o),
(-64,788,cs),
(-64,757,o),
(-29,757,o),
(-8,757,cs),
(20,757,ls),
(50,757,o),
(65,748,o),
(65,730,cs),
(65,686,o),
(66,604,o),
(66,498,cs),
(66,355,o),
(65,232,o),
(62,129,cs),
(59,26,o),
(57,-56,o),
(57,-119,cs),
(57,-171,o),
(43,-171,o),
(24,-176,c),
(11,-189,o),
(-26,-174,o),
(-26,-209,cs),
(-26,-218,o),
(-22,-225,o),
(-14,-229,cs),
(-6,-233,o),
(7,-235,o),
(26,-235,cs)
);
},
{
closed = 1;
nodes = (
(192,52,o),
(135,90,o),
(135,182,cs),
(135,309,o),
(194,397,o),
(285,397,cs),
(349,397,o),
(413,356,o),
(413,225,cs),
(413,81,o),
(320,52,o),
(256,52,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 1 6 7 18 1 1 6 48 1 2 1 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 4 5 83 0 5 5 14 67 0 7 7 0 83 0 0 0 23 67 0 6 6 1 83 0 1 1 24 67 0 2 2 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 0 0 7 6 0 7 91 0 4 4 5 83 0 5 5 14 67 0 6 6 1 83 0 1 1 24 67 0 2 2 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 0 0 7 6 0 7 91 0 2 0 3 2 3 87 0 4 4 5 83 0 5 5 14 67 0 6 6 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
97 95 87 85 76 72 66 62 199 53 40 34 8 19
CALL[ ]	/* CallFunction */";
};
width = 517;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(8,-235,o),
(35,-232,o),
(82,-232,cs),
(84,-232,o),
(122,-235,o),
(196,-235,cs),
(199,-235,o),
(220,-235,o),
(220,-223,cs),
(220,-208,o),
(172,-206,o),
(165,-206,cs),
(100,-206,l),
(100,68,l),
(122,30,o),
(163,-9,o),
(238,-9,cs),
(337,-9,o),
(459,51,o),
(459,220,cs),
(459,324,o),
(414,458,o),
(284,458,cs),
(208,458,o),
(146,414,o),
(109,334,c),
(109,782,ls),
(109,799,o),
(106,810,o),
(101,813,cs),
(95,816,o),
(89,818,o),
(83,818,cs),
(-7,818,ls),
(-4,818,o),
(-81,819,o),
(-81,799,cs),
(-81,794,o),
(-76,790,o),
(-66,789,cs),
(-57,788,o),
(-46,787,o),
(-35,787,cs),
(23,787,ls),
(52,787,o),
(68,780,o),
(68,760,cs),
(68,708,o),
(69,617,o),
(69,498,cs),
(69,347,o),
(68,218,o),
(65,111,cs),
(62,4,o),
(60,-83,o),
(60,-149,cs),
(60,-201,o),
(49,-202,o),
(27,-206,cs),
(10,-210,o),
(-43,-205,o),
(-43,-224,cs),
(-43,-227,o),
(-41,-230,o),
(-36,-232,cs),
(-31,-234,o),
(-20,-235,o),
(-1,-235,cs)
);
},
{
closed = 1;
nodes = (
(132,22,o),
(108,104,o),
(108,182,cs),
(108,317,o),
(188,427,o),
(277,427,cs),
(337,427,o),
(416,372,o),
(416,225,cs),
(416,64,o),
(314,22,o),
(238,22,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
18 0 2 7 8 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 5 5 6 83 0 6 6 14 67 0 8 8 0 83 0 0 0 23 67 0 7 7 1 83 0 1 1 24 67 4 1 2 2 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 0 0 8 7 0 8 91 0 5 5 6 83 0 6 6 14 67 0 7 7 1 83 0 1 1 24 67 4 1 2 2 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 8 7 0 8 91 4 1 2 0 3 2 3 87 0 5 5 6 83 0 6 6 14 67 0 7 7 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
94 92 84 82 75 71 66 63 21 214 53 40 34 9 20
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = thorn;
unicode = 254;
},
{
glyphname = q;
kernLeft = q;
kernRight = q;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(502,-203,ls),
(530,-203,o),
(539,-181,o),
(539,-162,cs),
(539,-146,o),
(526,-126,o),
(487,-126,cs),
(462,-126,l),
(462,-82,o),
(460,-13,o),
(460,37,cs),
(460,105,o),
(459,196,o),
(459,270,cs),
(459,287,o),
(466,308,o),
(477,327,cs),
(488,344,o),
(502,360,o),
(519,376,cs),
(532,388,o),
(544,402,o),
(544,423,cs),
(544,446,o),
(533,457,o),
(510,457,cs),
(465,457,o),
(448,412,o),
(413,372,c),
(366,420,o),
(318,454,o),
(238,454,cs),
(139,454,o),
(28,376,o),
(28,217,cs),
(28,84,o),
(103,-10,o),
(219,-10,cs),
(298,-10,o),
(351,32,o),
(370,81,c),
(370,-50,ls),
(370,-73,o),
(369,-89,o),
(368,-98,cs),
(367,-107,o),
(364,-113,o),
(359,-116,cs),
(353,-122,o),
(331,-125,o),
(289,-127,cs),
(254,-128,o),
(238,-138,o),
(238,-165,cs),
(238,-188,o),
(255,-203,o),
(278,-203,cs)
);
},
{
closed = 1;
nodes = (
(166,68,o),
(122,143,o),
(122,214,cs),
(122,285,o),
(157,376,o),
(243,376,cs),
(340,376,o),
(377,311,o),
(377,245,cs),
(377,152,o),
(328,68,o),
(246,68,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
49 0 2 6 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 7 7 0 83 5 1 0 0 23 67 8 1 6 6 4 83 0 4 4 24 67 3 1 1 1 2 84 0 2 2 17 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
5 1 0 0 7 6 0 7 91 3 1 1 0 2 1 2 88 8 1 6 6 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
66 65 76 74 65 84 66 84 63 61 53 51 41 39 35 32 28 26 36 9 16
CALL[ ]	/* CallFunction */";
};
width = 537;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(496,-203,ls),
(520,-203,o),
(529,-188,o),
(529,-173,cs),
(529,-166,o),
(525,-160,o),
(518,-153,cs),
(510,-147,o),
(496,-144,o),
(477,-144,cs),
(444,-144,l),
(444,-95,o),
(442,-19,o),
(442,36,cs),
(442,88,o),
(444,156,o),
(444,281,cs),
(444,300,o),
(443,325,o),
(450,337,cs),
(458,354,o),
(474,354,o),
(505,357,cs),
(522,358,o),
(532,370,o),
(532,385,cs),
(532,397,o),
(524,411,o),
(501,411,cs),
(466,411,o),
(437,400,o),
(406,371,c),
(374,413,o),
(318,453,o),
(241,453,cs),
(142,453,o),
(31,375,o),
(31,216,cs),
(31,83,o),
(106,-11,o),
(222,-11,cs),
(301,-11,o),
(354,31,o),
(373,80,c),
(373,-68,ls),
(373,-91,o),
(372,-107,o),
(371,-116,cs),
(370,-125,o),
(367,-131,o),
(362,-134,cs),
(357,-137,o),
(350,-140,o),
(341,-141,cs),
(331,-142,o),
(315,-144,o),
(292,-145,cs),
(265,-146,o),
(248,-153,o),
(248,-174,cs),
(248,-191,o),
(261,-203,o),
(281,-203,cs)
);
},
{
closed = 1;
nodes = (
(146,49,o),
(104,133,o),
(104,213,cs),
(104,290,o),
(140,393,o),
(244,393,cs),
(349,393,o),
(383,315,o),
(383,241,cs),
(383,147,o),
(338,49,o),
(240,49,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
46 0 2 6 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 0 5 7 5 0 7 104 0 7 7 5 83 0 5 5 15 67 8 1 6 6 4 83 0 4 4 24 67 3 1 1 1 2 84 0 2 2 17 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 0 5 7 5 0 7 104 0 5 0 7 6 5 7 91 8 1 6 6 4 83 0 4 4 24 67 3 1 1 1 2 84 0 2 2 17 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 0 5 7 5 0 7 104 0 5 0 7 6 5 7 91 3 1 1 0 2 1 2 88 8 1 6 6 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
65 64 75 73 64 83 65 83 60 58 50 48 40 38 34 31 27 25 34 9 16
CALL[ ]	/* CallFunction */";
};
width = 524;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(496,-203,ls),
(514,-203,o),
(523,-199,o),
(523,-191,cs),
(523,-187,o),
(519,-183,o),
(512,-179,cs),
(504,-176,o),
(490,-174,o),
(471,-174,cs),
(418,-174,l),
(418,-117,o),
(416,-28,o),
(416,36,cs),
(416,80,o),
(418,168,o),
(423,301,cs),
(424,330,o),
(424,339,o),
(435,352,cs),
(454,376,o),
(501,374,o),
(510,376,cs),
(521,378,o),
(526,383,o),
(526,391,cs),
(526,402,o),
(520,411,o),
(500,411,cs),
(471,411,o),
(429,390,o),
(396,371,c),
(384,406,o),
(320,453,o),
(245,453,cs),
(146,453,o),
(35,375,o),
(35,216,cs),
(35,83,o),
(110,-11,o),
(226,-11,cs),
(305,-11,o),
(358,31,o),
(377,80,c),
(377,-98,ls),
(377,-121,o),
(376,-137,o),
(375,-146,cs),
(374,-155,o),
(371,-161,o),
(366,-164,cs),
(361,-167,o),
(354,-170,o),
(345,-171,cs),
(335,-172,o),
(319,-174,o),
(296,-175,cs),
(279,-176,o),
(262,-177,o),
(262,-189,cs),
(262,-198,o),
(270,-203,o),
(285,-203,cs)
);
},
{
closed = 1;
nodes = (
(117,19,o),
(78,119,o),
(78,213,cs),
(78,300,o),
(111,423,o),
(246,423,cs),
(364,423,o),
(387,327,o),
(387,241,cs),
(387,136,o),
(353,19,o),
(231,19,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
45 0 2 7 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 0 0 1 7 0 1 91 0 8 8 6 83 0 6 6 15 67 9 1 7 7 5 83 0 5 5 24 67 4 1 2 2 3 83 0 3 3 17 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 6 0 8 0 6 8 91 0 0 0 1 7 0 1 91 9 1 7 7 5 83 0 5 5 24 67 4 1 2 2 3 83 0 3 3 17 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 6 0 8 0 6 8 91 0 0 0 1 7 0 1 91 4 1 2 0 3 2 3 87 9 1 7 7 5 83 0 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
64 63 74 72 63 82 64 82 59 57 49 47 39 38 34 31 28 26 21 34 10 17
CALL[ ]	/* CallFunction */";
};
width = 518;
}
);
note = q;
unicode = 113;
},
{
glyphname = r;
kernLeft = r;
kernRight = r;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(103,0,o),
(120,3,o),
(163,3,cs),
(183,3,o),
(204,3,o),
(225,2,cs),
(246,1,o),
(267,0,o),
(288,0,cs),
(313,0,o),
(325,12,o),
(325,35,cs),
(325,50,o),
(318,62,o),
(304,69,cs),
(290,76,o),
(266,79,o),
(231,79,cs),
(183,79,l),
(183,195,ls),
(183,317,o),
(264,370,o),
(311,370,cs),
(336,370,o),
(356,358,o),
(356,335,cs),
(356,299,o),
(304,307,o),
(304,264,cs),
(304,233,o),
(331,222,o),
(358,222,cs),
(417,222,o),
(436,278,o),
(436,323,cs),
(436,411,o),
(363,439,o),
(312,439,cs),
(259,439,o),
(219,409,o),
(188,364,c),
(188,413,ls),
(188,448,o),
(179,451,o),
(144,451,cs),
(89,451,o),
(50,448,o),
(28,442,cs),
(5,436,o),
(-6,426,o),
(-6,412,cs),
(-6,385,o),
(29,379,o),
(49,379,cs),
(79,379,ls),
(89,379,o),
(94,374,o),
(94,365,cs),
(94,249,o),
(93,155,o),
(93,118,cs),
(92,89,o),
(72,84,o),
(51,79,cs),
(28,74,o),
(22,59,o),
(22,42,cs),
(22,22,o),
(31,0,o),
(63,0,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
65 1 0 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 1 2 1 0 2 104 4 1 1 1 5 83 6 1 5 5 15 67 0 2 2 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 0 1 2 1 0 2 104 0 5 6 1 5 79 0 6 4 1 1 0 6 1 91 0 2 2 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 1 2 1 0 2 104 0 5 0 4 1 5 4 91 0 6 0 1 0 6 1 91 0 2 2 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
37 38 62 163 37 41 36 7 22
CALL[ ]	/* CallFunction */";
};
width = 453;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(94,0,o),
(125,3,o),
(156,3,cs),
(169,3,o),
(253,0,o),
(294,0,cs),
(314,0,o),
(324,9,o),
(324,27,cs),
(324,38,o),
(317,47,o),
(303,53,cs),
(289,58,o),
(265,61,o),
(230,61,cs),
(176,61,l),
(176,213,ls),
(176,335,o),
(249,373,o),
(296,373,cs),
(323,373,o),
(342,364,o),
(342,339,cs),
(342,308,o),
(299,327,o),
(299,285,cs),
(299,258,o),
(322,246,o),
(345,246,cs),
(397,246,o),
(414,291,o),
(414,336,cs),
(414,388,o),
(366,434,o),
(302,434,cs),
(255,434,o),
(213,411,o),
(181,364,c),
(181,413,ls),
(181,448,o),
(172,451,o),
(137,451,cs),
(45,451,o),
(-6,440,o),
(-6,423,cs),
(-6,418,o),
(-2,413,o),
(7,408,cs),
(15,403,o),
(27,400,o),
(44,400,cs),
(93,400,ls),
(103,400,o),
(108,395,o),
(108,386,cs),
(108,250,o),
(106,130,o),
(103,95,cs),
(102,76,o),
(95,65,o),
(63,61,cs),
(40,58,o),
(31,43,o),
(31,28,cs),
(31,13,o),
(42,0,o),
(63,0,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
67 1 0 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 0 1 2 1 0 2 104 0 4 4 5 83 0 5 5 15 67 0 1 1 6 83 0 6 6 15 67 0 2 2 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 1 2 1 0 2 104 0 5 0 4 1 5 4 91 0 6 0 1 0 6 1 91 0 2 2 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
37 53 62 195 37 41 36 7 22
CALL[ ]	/* CallFunction */";
};
width = 429;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(70,0,o),
(85,1,o),
(99,2,cs),
(113,3,o),
(129,3,o),
(146,3,cs),
(154,3,o),
(240,0,o),
(284,0,cs),
(293,0,o),
(304,5,o),
(304,13,cs),
(304,18,o),
(297,23,o),
(283,26,cs),
(269,29,o),
(245,31,o),
(210,31,cs),
(166,31,l),
(166,243,ls),
(166,365,o),
(239,403,o),
(286,403,cs),
(313,403,o),
(332,392,o),
(332,369,cs),
(332,338,o),
(291,343,o),
(291,308,cs),
(291,289,o),
(302,276,o),
(325,276,cs),
(364,276,o),
(374,315,o),
(374,349,cs),
(374,409,o),
(341,434,o),
(292,434,cs),
(245,434,o),
(203,411,o),
(171,364,c),
(171,413,ls),
(171,448,o),
(162,451,o),
(127,451,cs),
(69,451,o),
(-6,444,o),
(-6,433,cs),
(-6,429,o),
(1,420,o),
(14,420,cs),
(113,420,ls),
(123,420,o),
(128,415,o),
(128,406,cs),
(128,294,o),
(128,218,o),
(126,164,cs),
(124,110,o),
(122,78,o),
(118,57,cs),
(114,34,o),
(113,32,o),
(89,31,cs),
(72,30,o),
(58,27,o),
(47,24,cs),
(36,21,o),
(31,17,o),
(31,13,cs),
(31,6,o),
(42,0,o),
(53,0,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
66 1 0 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 0 1 2 1 0 96 0 6 6 7 83 0 7 7 15 67 0 1 1 8 83 0 8 8 15 67 5 1 2 2 3 83 4 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 0 1 2 1 0 2 104 0 6 6 7 83 0 7 7 15 67 0 1 1 8 83 0 8 8 15 67 5 1 2 2 3 83 4 1 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 0 1 2 1 0 2 104 0 7 0 6 1 7 6 91 0 8 0 1 0 8 1 91 5 1 2 2 3 83 4 1 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
37 53 56 21 33 116 37 41 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 395;
}
);
note = r;
unicode = 114;
},
{
glyphname = racute;
kernLeft = r;
kernRight = r;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(103,0,o),
(120,3,o),
(163,3,cs),
(183,3,o),
(204,3,o),
(225,2,cs),
(246,1,o),
(267,0,o),
(288,0,cs),
(313,0,o),
(325,12,o),
(325,35,cs),
(325,50,o),
(318,62,o),
(304,69,cs),
(290,76,o),
(266,79,o),
(231,79,cs),
(183,79,l),
(183,195,ls),
(183,317,o),
(264,370,o),
(311,370,cs),
(336,370,o),
(356,358,o),
(356,335,cs),
(356,299,o),
(304,307,o),
(304,264,cs),
(304,233,o),
(331,222,o),
(358,222,cs),
(417,222,o),
(436,278,o),
(436,323,cs),
(436,411,o),
(363,439,o),
(312,439,cs),
(259,439,o),
(219,409,o),
(188,364,c),
(188,413,ls),
(188,448,o),
(179,451,o),
(144,451,cs),
(89,451,o),
(50,448,o),
(28,442,cs),
(5,436,o),
(-6,426,o),
(-6,412,cs),
(-6,385,o),
(29,379,o),
(49,379,cs),
(79,379,ls),
(89,379,o),
(94,374,o),
(94,365,cs),
(94,249,o),
(93,155,o),
(93,118,cs),
(92,89,o),
(72,84,o),
(51,79,cs),
(28,74,o),
(22,59,o),
(22,42,cs),
(22,22,o),
(31,0,o),
(63,0,cs)
);
},
{
closed = 1;
nodes = (
(208,500,o),
(243,523,o),
(282,557,cs),
(317,588,o),
(346,622,o),
(346,640,cs),
(346,665,o),
(319,687,o),
(276,688,cs),
(251,688,o),
(220,649,o),
(196,609,cs),
(176,574,o),
(154,527,o),
(154,522,cs),
(154,507,o),
(176,500,o),
(191,500,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
83 1 2 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 7 0 106 0 2 3 4 3 2 4 104 6 1 3 3 7 83 8 1 7 7 15 67 0 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 0 7 0 106 0 2 3 4 3 2 4 104 0 7 8 3 7 79 0 8 6 1 3 2 8 3 92 0 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 0 0 7 0 106 0 2 3 4 3 2 4 104 0 7 0 6 3 7 6 91 0 8 0 3 2 8 3 92 0 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
37 38 62 163 37 41 38 38 38 9 24
CALL[ ]	/* CallFunction */";
};
width = 453;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(94,0,o),
(125,3,o),
(156,3,cs),
(169,3,o),
(253,0,o),
(294,0,cs),
(314,0,o),
(324,9,o),
(324,27,cs),
(324,38,o),
(317,47,o),
(303,53,cs),
(289,58,o),
(265,61,o),
(230,61,cs),
(176,61,l),
(176,213,ls),
(176,335,o),
(249,373,o),
(296,373,cs),
(323,373,o),
(342,364,o),
(342,339,cs),
(342,308,o),
(299,327,o),
(299,285,cs),
(299,258,o),
(322,246,o),
(345,246,cs),
(397,246,o),
(414,291,o),
(414,336,cs),
(414,388,o),
(366,434,o),
(302,434,cs),
(255,434,o),
(213,411,o),
(181,364,c),
(181,413,ls),
(181,448,o),
(172,451,o),
(137,451,cs),
(45,451,o),
(-6,440,o),
(-6,423,cs),
(-6,418,o),
(-2,413,o),
(7,408,cs),
(15,403,o),
(27,400,o),
(44,400,cs),
(93,400,ls),
(103,400,o),
(108,395,o),
(108,386,cs),
(108,250,o),
(106,130,o),
(103,95,cs),
(102,76,o),
(95,65,o),
(63,61,cs),
(40,58,o),
(31,43,o),
(31,28,cs),
(31,13,o),
(42,0,o),
(63,0,cs)
);
},
{
closed = 1;
nodes = (
(207,504,o),
(312,603,o),
(312,632,cs),
(312,655,o),
(294,670,o),
(263,670,cs),
(245,670,o),
(216,636,o),
(193,600,cs),
(167,560,o),
(152,526,o),
(152,522,cs),
(152,509,o),
(166,504,o),
(177,504,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
85 1 2 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 7 0 106 0 2 3 4 3 2 4 104 0 6 6 7 83 0 7 7 15 67 0 3 3 8 83 0 8 8 15 67 0 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 0 0 7 0 106 0 2 3 4 3 2 4 104 0 7 0 6 3 7 6 91 0 8 0 3 2 8 3 92 0 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
37 53 62 195 37 41 38 40 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 429;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(70,0,o),
(85,1,o),
(99,2,cs),
(113,3,o),
(129,3,o),
(146,3,cs),
(154,3,o),
(240,0,o),
(284,0,cs),
(293,0,o),
(304,5,o),
(304,13,cs),
(304,18,o),
(297,23,o),
(283,26,cs),
(269,29,o),
(245,31,o),
(210,31,cs),
(166,31,l),
(166,243,ls),
(166,365,o),
(239,403,o),
(286,403,cs),
(313,403,o),
(332,392,o),
(332,369,cs),
(332,338,o),
(291,343,o),
(291,308,cs),
(291,289,o),
(302,276,o),
(325,276,cs),
(364,276,o),
(374,315,o),
(374,349,cs),
(374,409,o),
(341,434,o),
(292,434,cs),
(245,434,o),
(203,411,o),
(171,364,c),
(171,413,ls),
(171,448,o),
(162,451,o),
(127,451,cs),
(69,451,o),
(-6,444,o),
(-6,433,cs),
(-6,429,o),
(1,420,o),
(14,420,cs),
(113,420,ls),
(123,420,o),
(128,415,o),
(128,406,cs),
(128,294,o),
(128,218,o),
(126,164,cs),
(124,110,o),
(122,78,o),
(118,57,cs),
(114,34,o),
(113,32,o),
(89,31,cs),
(72,30,o),
(58,27,o),
(47,24,cs),
(36,21,o),
(31,17,o),
(31,13,cs),
(31,6,o),
(42,0,o),
(53,0,cs)
);
},
{
closed = 1;
nodes = (
(177,510,o),
(264,597,o),
(264,618,cs),
(264,637,o),
(256,640,o),
(245,640,cs),
(225,640,o),
(150,546,o),
(150,521,cs),
(150,514,o),
(153,510,o),
(158,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
66 1 0 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 10 9 10 106 0 9 7 9 106 0 0 1 2 1 0 96 0 6 6 7 83 0 7 7 15 67 0 1 1 8 83 0 8 8 15 67 5 1 2 2 3 84 4 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 10 9 10 106 0 9 7 9 106 0 0 1 2 1 0 2 104 0 6 6 7 83 0 7 7 15 67 0 1 1 8 83 0 8 8 15 67 5 1 2 2 3 84 4 1 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 10 9 10 106 0 9 7 9 106 0 0 1 2 1 0 2 104 0 7 0 6 1 7 6 91 0 8 0 1 0 8 1 91 5 1 2 2 3 84 4 1 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
85 83 78 76 37 53 56 21 33 116 37 41 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 395;
}
);
note = racute;
unicode = 341;
},
{
glyphname = rcaron;
kernLeft = r;
kernRight = r;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(103,0,o),
(120,3,o),
(163,3,cs),
(183,3,o),
(204,3,o),
(225,2,cs),
(246,1,o),
(267,0,o),
(288,0,cs),
(313,0,o),
(325,12,o),
(325,35,cs),
(325,50,o),
(318,62,o),
(304,69,cs),
(290,76,o),
(266,79,o),
(231,79,cs),
(183,79,l),
(183,195,ls),
(183,317,o),
(264,370,o),
(311,370,cs),
(336,370,o),
(356,358,o),
(356,335,cs),
(356,299,o),
(304,307,o),
(304,264,cs),
(304,233,o),
(331,222,o),
(358,222,cs),
(417,222,o),
(436,278,o),
(436,323,cs),
(436,411,o),
(363,439,o),
(312,439,cs),
(259,439,o),
(219,409,o),
(188,364,c),
(188,413,ls),
(188,448,o),
(179,451,o),
(144,451,cs),
(89,451,o),
(50,448,o),
(28,442,cs),
(5,436,o),
(-6,426,o),
(-6,412,cs),
(-6,385,o),
(29,379,o),
(49,379,cs),
(79,379,ls),
(89,379,o),
(94,374,o),
(94,365,cs),
(94,249,o),
(93,155,o),
(93,118,cs),
(92,89,o),
(72,84,o),
(51,79,cs),
(28,74,o),
(22,59,o),
(22,42,cs),
(22,22,o),
(31,0,o),
(63,0,cs)
);
},
{
closed = 1;
nodes = (
(224,486,o),
(333,578,o),
(333,619,cs),
(333,630,o),
(329,640,o),
(320,640,cs),
(309,640,o),
(272,616,o),
(200,578,c),
(151,604,o),
(93,640,o),
(81,640,cs),
(73,640,o),
(68,633,o),
(68,626,cs),
(68,599,o),
(96,565,o),
(127,537,cs),
(154,511,o),
(189,486,o),
(200,486,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
21 1 1 0 91 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
2 10 2 0 1 0 106 0 1 8 1 106 0 3 4 5 4 3 5 104 7 1 4 4 8 83 9 1 8 8 15 67 0 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
2 10 2 0 1 0 106 0 1 8 1 106 0 3 4 5 4 3 5 104 0 8 9 4 8 79 0 9 7 1 4 3 9 4 92 0 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
2 10 2 0 1 0 106 0 1 8 1 106 0 3 4 5 4 3 5 104 0 8 0 7 4 8 7 92 0 9 0 4 3 9 4 92 0 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 95 93 88 86 80 77 63 53 50 48 43 41 32 30 17 15 9 7 0 25 1 25 11 15
CALL[ ]	/* CallFunction */";
};
width = 453;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(94,0,o),
(125,3,o),
(156,3,cs),
(169,3,o),
(253,0,o),
(294,0,cs),
(314,0,o),
(324,9,o),
(324,27,cs),
(324,38,o),
(317,47,o),
(303,53,cs),
(289,58,o),
(265,61,o),
(230,61,cs),
(176,61,l),
(176,213,ls),
(176,335,o),
(249,373,o),
(296,373,cs),
(323,373,o),
(342,364,o),
(342,339,cs),
(342,308,o),
(299,327,o),
(299,285,cs),
(299,258,o),
(322,246,o),
(345,246,cs),
(397,246,o),
(414,291,o),
(414,336,cs),
(414,388,o),
(366,434,o),
(302,434,cs),
(255,434,o),
(213,411,o),
(181,364,c),
(181,413,ls),
(181,448,o),
(172,451,o),
(137,451,cs),
(45,451,o),
(-6,440,o),
(-6,423,cs),
(-6,418,o),
(-2,413,o),
(7,408,cs),
(15,403,o),
(27,400,o),
(44,400,cs),
(93,400,ls),
(103,400,o),
(108,395,o),
(108,386,cs),
(108,250,o),
(106,130,o),
(103,95,cs),
(102,76,o),
(95,65,o),
(63,61,cs),
(40,58,o),
(31,43,o),
(31,28,cs),
(31,13,o),
(42,0,o),
(63,0,cs)
);
},
{
closed = 1;
nodes = (
(218,495,o),
(324,588,o),
(324,623,cs),
(324,632,o),
(321,640,o),
(313,640,cs),
(300,640,o),
(206,577,o),
(193,569,c),
(120,612,o),
(89,640,o),
(74,640,cs),
(67,640,o),
(63,636,o),
(63,627,cs),
(63,586,o),
(171,495,o),
(193,495,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
81 1 9 7 68 1 0 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
8 10 2 7 9 7 106 0 0 1 2 1 0 2 104 0 9 9 23 67 0 4 4 5 83 0 5 5 15 67 0 1 1 6 83 0 6 6 15 67 0 2 2 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
8 10 2 7 9 7 106 0 9 5 9 106 0 0 1 2 1 0 2 104 0 5 0 4 1 5 4 91 0 6 0 1 0 6 1 91 0 2 2 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
77 76 94 92 87 85 76 100 77 100 37 53 62 195 37 41 37 11 33
CALL[ ]	/* CallFunction */";
};
width = 429;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(70,0,o),
(85,1,o),
(99,2,cs),
(113,3,o),
(129,3,o),
(146,3,cs),
(154,3,o),
(240,0,o),
(284,0,cs),
(293,0,o),
(304,5,o),
(304,13,cs),
(304,18,o),
(297,23,o),
(283,26,cs),
(269,29,o),
(245,31,o),
(210,31,cs),
(166,31,l),
(166,243,ls),
(166,365,o),
(239,403,o),
(286,403,cs),
(313,403,o),
(332,392,o),
(332,369,cs),
(332,338,o),
(291,343,o),
(291,308,cs),
(291,289,o),
(302,276,o),
(325,276,cs),
(364,276,o),
(374,315,o),
(374,349,cs),
(374,409,o),
(341,434,o),
(292,434,cs),
(245,434,o),
(203,411,o),
(171,364,c),
(171,413,ls),
(171,448,o),
(162,451,o),
(127,451,cs),
(69,451,o),
(-6,444,o),
(-6,433,cs),
(-6,429,o),
(1,420,o),
(14,420,cs),
(113,420,ls),
(123,420,o),
(128,415,o),
(128,406,cs),
(128,294,o),
(128,218,o),
(126,164,cs),
(124,110,o),
(122,78,o),
(118,57,cs),
(114,34,o),
(113,32,o),
(89,31,cs),
(72,30,o),
(58,27,o),
(47,24,cs),
(36,21,o),
(31,17,o),
(31,13,cs),
(31,6,o),
(42,0,o),
(53,0,cs)
);
},
{
closed = 1;
nodes = (
(208,510,o),
(311,604,o),
(311,629,cs),
(311,636,o),
(308,640,o),
(303,640,cs),
(288,640,o),
(259,608,o),
(183,554,c),
(147,580,o),
(77,640,o),
(64,640,cs),
(59,640,o),
(56,636,o),
(56,629,cs),
(56,604,o),
(160,510,o),
(183,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
91 1 10 9 66 1 0 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
11 12 2 9 10 9 106 0 10 7 10 106 0 0 1 2 1 0 96 0 6 6 7 83 0 7 7 15 67 0 1 1 8 83 0 8 8 15 67 5 1 2 2 3 83 4 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
11 12 2 9 10 9 106 0 10 7 10 106 0 0 1 2 1 0 2 104 0 6 6 7 83 0 7 7 15 67 0 1 1 8 83 0 8 8 15 67 5 1 2 2 3 83 4 1 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
11 12 2 9 10 9 106 0 10 7 10 106 0 0 1 2 1 0 2 104 0 7 0 6 1 7 6 92 0 8 0 1 0 8 1 92 5 1 2 2 3 83 4 1 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
73 72 87 85 80 78 72 95 73 95 37 53 56 21 33 116 37 41 36 13 24
CALL[ ]	/* CallFunction */";
};
width = 395;
}
);
note = rcaron;
unicode = 345;
},
{
glyphname = rcommaaccent;
kernLeft = r;
kernRight = r;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(103,0,o),
(120,3,o),
(163,3,cs),
(183,3,o),
(204,3,o),
(225,2,cs),
(246,1,o),
(267,0,o),
(288,0,cs),
(313,0,o),
(325,12,o),
(325,35,cs),
(325,50,o),
(318,62,o),
(304,69,cs),
(290,76,o),
(266,79,o),
(231,79,cs),
(183,79,l),
(183,195,ls),
(183,317,o),
(264,370,o),
(311,370,cs),
(336,370,o),
(356,358,o),
(356,335,cs),
(356,299,o),
(304,307,o),
(304,264,cs),
(304,233,o),
(331,222,o),
(358,222,cs),
(417,222,o),
(436,278,o),
(436,323,cs),
(436,411,o),
(363,439,o),
(312,439,cs),
(259,439,o),
(219,409,o),
(188,364,c),
(188,413,ls),
(188,448,o),
(179,451,o),
(144,451,cs),
(89,451,o),
(50,448,o),
(28,442,cs),
(5,436,o),
(-6,426,o),
(-6,412,cs),
(-6,385,o),
(29,379,o),
(49,379,cs),
(79,379,ls),
(89,379,o),
(94,374,o),
(94,365,cs),
(94,249,o),
(93,155,o),
(93,118,cs),
(92,89,o),
(72,84,o),
(51,79,cs),
(28,74,o),
(22,59,o),
(22,42,cs),
(22,22,o),
(31,0,o),
(63,0,cs)
);
},
{
closed = 1;
nodes = (
(161,-250,o),
(224,-208,o),
(224,-131,cs),
(224,-74,o),
(188,-50,o),
(156,-50,cs),
(112,-50,o),
(96,-80,o),
(96,-108,cs),
(96,-139,o),
(132,-141,o),
(132,-158,cs),
(132,-178,o),
(130,-193,o),
(125,-202,cs),
(120,-212,o),
(117,-220,o),
(117,-227,cs),
(117,-250,o),
(136,-250,o),
(143,-250,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
65 1 0 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 0 1 2 1 0 2 104 4 1 1 1 5 83 6 1 5 5 15 67 0 2 2 3 83 0 3 3 13 67 0 7 7 8 83 0 8 8 25 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 0 1 2 1 0 2 104 0 5 6 1 5 79 0 6 4 1 1 0 6 1 91 0 7 0 8 7 8 87 0 2 2 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 0 1 2 1 0 2 104 0 5 0 4 1 5 4 91 0 6 0 1 0 6 1 91 0 7 0 8 7 8 87 0 2 2 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 38 37 38 62 163 37 41 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 454;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(94,0,o),
(125,3,o),
(156,3,cs),
(169,3,o),
(253,0,o),
(294,0,cs),
(314,0,o),
(324,9,o),
(324,27,cs),
(324,38,o),
(317,47,o),
(303,53,cs),
(289,58,o),
(265,61,o),
(230,61,cs),
(176,61,l),
(176,213,ls),
(176,335,o),
(249,373,o),
(296,373,cs),
(323,373,o),
(342,364,o),
(342,339,cs),
(342,308,o),
(299,327,o),
(299,285,cs),
(299,258,o),
(322,246,o),
(345,246,cs),
(397,246,o),
(414,291,o),
(414,336,cs),
(414,388,o),
(366,434,o),
(302,434,cs),
(255,434,o),
(213,411,o),
(181,364,c),
(181,413,ls),
(181,448,o),
(172,451,o),
(137,451,cs),
(45,451,o),
(-6,440,o),
(-6,423,cs),
(-6,418,o),
(-2,413,o),
(7,408,cs),
(15,403,o),
(27,400,o),
(44,400,cs),
(93,400,ls),
(103,400,o),
(108,395,o),
(108,386,cs),
(108,250,o),
(106,130,o),
(103,95,cs),
(102,76,o),
(95,65,o),
(63,61,cs),
(40,58,o),
(31,43,o),
(31,28,cs),
(31,13,o),
(42,0,o),
(63,0,cs)
);
},
{
closed = 1;
nodes = (
(167,-232,o),
(208,-182,o),
(208,-128,cs),
(208,-75,o),
(178,-56,o),
(151,-56,cs),
(114,-56,o),
(99,-81,o),
(99,-105,cs),
(99,-137,o),
(135,-136,o),
(135,-153,cs),
(135,-170,o),
(133,-183,o),
(129,-191,cs),
(124,-200,o),
(122,-207,o),
(122,-213,cs),
(122,-230,o),
(136,-232,o),
(143,-232,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
68 1 0 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 0 1 2 1 0 2 104 0 4 4 5 83 0 5 5 15 67 0 1 1 6 83 0 6 6 15 67 0 2 2 3 83 0 3 3 13 67 0 7 7 8 83 0 8 8 25 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 1 2 1 0 2 104 0 5 0 4 1 5 4 91 0 6 0 1 0 6 1 91 0 2 2 3 83 0 3 3 13 67 0 7 7 8 83 0 8 8 25 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 0 1 2 1 0 2 104 0 5 0 4 1 5 4 91 0 6 0 1 0 6 1 91 0 7 0 8 7 8 87 0 2 2 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 38 37 53 62 195 37 41 37 9 35
CALL[ ]	/* CallFunction */";
};
width = 429;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(69,0,o),
(84,1,o),
(98,2,cs),
(112,3,o),
(128,3,o),
(145,3,cs),
(153,3,o),
(239,0,o),
(283,0,cs),
(292,0,o),
(303,5,o),
(303,13,cs),
(303,18,o),
(296,23,o),
(282,26,cs),
(268,29,o),
(244,31,o),
(209,31,cs),
(165,31,l),
(165,243,ls),
(165,365,o),
(238,403,o),
(285,403,cs),
(312,403,o),
(331,392,o),
(331,369,cs),
(331,338,o),
(290,343,o),
(290,308,cs),
(290,289,o),
(301,276,o),
(324,276,cs),
(363,276,o),
(373,315,o),
(373,349,cs),
(373,409,o),
(340,434,o),
(291,434,cs),
(244,434,o),
(202,411,o),
(170,364,c),
(170,413,ls),
(170,448,o),
(161,451,o),
(126,451,cs),
(68,451,o),
(-7,444,o),
(-7,433,cs),
(-7,429,o),
(0,420,o),
(13,420,cs),
(112,420,ls),
(122,420,o),
(127,415,o),
(127,406,cs),
(127,294,o),
(127,218,o),
(125,164,cs),
(123,110,o),
(121,78,o),
(117,57,cs),
(113,34,o),
(112,32,o),
(88,31,cs),
(71,30,o),
(57,27,o),
(46,24,cs),
(35,21,o),
(30,17,o),
(30,13,cs),
(30,6,o),
(41,0,o),
(52,0,cs)
);
},
{
closed = 1;
nodes = (
(169,-203,o),
(185,-153,o),
(185,-124,cs),
(185,-79,o),
(163,-67,o),
(143,-67,cs),
(116,-67,o),
(103,-84,o),
(103,-101,cs),
(103,-133,o),
(139,-128,o),
(139,-145,cs),
(139,-152,o),
(137,-160,o),
(134,-169,cs),
(130,-179,o),
(128,-186,o),
(128,-191,cs),
(128,-198,o),
(135,-203,o),
(142,-203,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
66 1 0 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 0 1 2 1 0 96 0 6 6 7 83 0 7 7 15 67 0 1 1 8 83 0 8 8 15 67 5 1 2 2 3 83 4 1 3 3 13 67 0 9 9 10 83 0 10 10 17 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 0 1 2 1 0 2 104 0 6 6 7 83 0 7 7 15 67 0 1 1 8 83 0 8 8 15 67 5 1 2 2 3 83 4 1 3 3 13 67 0 9 9 10 83 0 10 10 17 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 0 1 2 1 0 2 104 0 7 0 6 1 7 6 91 0 8 0 1 0 8 1 91 5 1 2 2 3 83 4 1 3 3 13 67 0 9 9 10 83 0 10 10 17 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 0 1 2 1 0 2 104 0 7 0 6 1 7 6 91 0 8 0 1 0 8 1 91 0 9 0 10 9 10 87 5 1 2 2 3 83 4 1 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
84 82 76 74 37 53 56 21 33 116 37 41 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 394;
}
);
note = rcommaaccent;
unicode = 343;
},
{
glyphname = s;
kernLeft = s;
kernRight = s;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(96,-30,o),
(110,-16,o),
(110,-3,cs),
(110,1,o),
(110,5,o),
(110,9,cs),
(110,13,o),
(110,18,o),
(109,23,c),
(148,-20,o),
(193,-27,o),
(238,-27,cs),
(326,-27,o),
(412,8,o),
(412,102,cs),
(412,202,o),
(315,217,o),
(223,244,cs),
(190,254,o),
(139,270,o),
(139,325,cs),
(139,358,o),
(158,384,o),
(217,384,cs),
(272,384,o),
(295,361,o),
(307,342,cs),
(318,327,o),
(329,304,o),
(334,280,cs),
(337,265,o),
(353,250,o),
(370,250,cs),
(393,250,o),
(399,266,o),
(402,289,cs),
(405,312,o),
(408,382,o),
(408,422,cs),
(408,469,o),
(393,475,o),
(372,475,cs),
(353,475,o),
(332,469,o),
(332,436,cs),
(332,432,o),
(333,409,o),
(334,392,c),
(315,424,o),
(286,457,o),
(209,457,cs),
(130,457,o),
(52,418,o),
(52,320,cs),
(52,210,o),
(146,180,o),
(216,164,cs),
(299,143,o),
(322,120,o),
(322,91,cs),
(322,56,o),
(284,44,o),
(240,44,cs),
(181,44,o),
(146,64,o),
(129,91,cs),
(110,122,o),
(108,141,o),
(105,154,cs),
(102,167,o),
(90,181,o),
(75,181,cs),
(48,181,o),
(35,170,o),
(35,148,cs),
(35,132,o),
(36,117,o),
(37,104,cs),
(38,91,o),
(39,77,o),
(39,64,cs),
(39,55,o),
(39,45,o),
(38,36,cs),
(37,27,o),
(37,16,o),
(37,4,cs),
(37,-15,o),
(41,-30,o),
(72,-30,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
49 1 6 3 0 1 0 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 6 6 3 83 0 3 3 23 67 0 5 5 4 83 0 4 4 23 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 0 0 2 79 0 2 2 0 83 7 1 0 2 0 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
94 92 76 74 67 65 56 54 45 43 39 41 37 8 18
CALL[ ]	/* CallFunction */";
};
width = 451;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(92,-30,o),
(102,-15,o),
(102,5,cs),
(102,9,o),
(102,13,o),
(102,18,cs),
(102,23,o),
(102,28,o),
(101,33,c),
(125,-13,o),
(186,-24,o),
(234,-24,cs),
(298,-24,o),
(399,-5,o),
(399,99,cs),
(399,188,o),
(323,209,o),
(225,235,cs),
(167,250,o),
(114,267,o),
(114,322,cs),
(114,366,o),
(146,396,o),
(209,396,cs),
(272,396,o),
(302,367,o),
(318,336,cs),
(323,328,o),
(330,295,o),
(330,284,c),
(333,275,o),
(340,259,o),
(357,259,cs),
(369,259,o),
(388,266,o),
(389,285,cs),
(389,298,o),
(394,347,o),
(394,432,cs),
(394,467,o),
(377,475,o),
(362,475,cs),
(350,475,o),
(330,469,o),
(330,438,cs),
(330,431,o),
(331,409,o),
(332,392,c),
(313,424,o),
(283,457,o),
(206,457,cs),
(126,457,o),
(48,419,o),
(48,320,cs),
(48,218,o),
(131,192,o),
(203,175,cs),
(282,155,o),
(331,140,o),
(331,95,cs),
(331,49,o),
(278,33,o),
(231,33,cs),
(169,33,o),
(123,64,o),
(107,100,cs),
(104,107,o),
(102,113,o),
(102,119,cs),
(101,124,o),
(100,132,o),
(99,141,cs),
(96,165,o),
(91,181,o),
(64,181,cs),
(39,181,o),
(37,167,o),
(37,146,cs),
(37,131,o),
(38,116,o),
(39,99,cs),
(40,82,o),
(41,67,o),
(41,54,cs),
(41,45,o),
(41,34,o),
(40,21,cs),
(39,8,o),
(39,-1,o),
(39,-4,cs),
(39,-23,o),
(56,-30,o),
(72,-30,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
74 68 54 3 5 6 1 66 0 1 2 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 6 6 3 83 0 3 3 23 67 0 5 5 4 83 0 4 4 23 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 0 0 2 79 0 2 2 0 83 7 1 0 2 0 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 0 0 1 0 87 0 2 2 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 0 7 0 2 7 91 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
101 99 83 81 72 70 61 59 50 48 41 44 37 8 18
CALL[ ]	/* CallFunction */";
};
width = 435;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(73,-30,o),
(75,-15,o),
(75,5,cs),
(75,9,o),
(75,14,o),
(75,20,cs),
(75,26,o),
(75,32,o),
(74,37,c),
(93,2,o),
(161,-23,o),
(212,-23,cs),
(256,-23,o),
(372,-7,o),
(372,103,cs),
(372,179,o),
(315,199,o),
(228,220,cs),
(131,242,o),
(87,254,o),
(87,323,cs),
(87,398,o),
(139,426,o),
(206,426,cs),
(279,426,o),
(312,390,o),
(325,342,cs),
(328,332,o),
(330,324,o),
(331,317,cs),
(331,310,o),
(331,303,o),
(332,298,cs),
(333,287,o),
(337,273,o),
(349,273,cs),
(361,273,o),
(364,287,o),
(364,299,cs),
(364,306,o),
(365,323,o),
(366,350,cs),
(367,376,o),
(367,409,o),
(367,449,cs),
(367,464,o),
(361,475,o),
(349,475,cs),
(344,475,o),
(340,473,o),
(337,468,cs),
(334,463,o),
(333,454,o),
(333,441,cs),
(333,430,o),
(334,409,o),
(335,392,c),
(316,424,o),
(286,457,o),
(210,457,cs),
(130,457,o),
(51,418,o),
(51,323,cs),
(51,247,o),
(100,213,o),
(184,194,cs),
(277,173,o),
(334,159,o),
(334,98,cs),
(334,29,o),
(265,8,o),
(216,8,cs),
(175,8,o),
(136,18,o),
(105,46,cs),
(80,69,o),
(75,89,o),
(72,136,cs),
(70,159,o),
(64,171,o),
(54,171,cs),
(45,171,o),
(40,160,o),
(40,139,cs),
(40,127,o),
(41,113,o),
(42,97,cs),
(43,81,o),
(44,67,o),
(44,54,cs),
(44,45,o),
(44,34,o),
(43,21,cs),
(42,8,o),
(42,-1,o),
(42,-6,cs),
(42,-25,o),
(49,-30,o),
(58,-30,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
48 1 5 6 19 0 2 2 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 6 6 3 83 0 3 3 23 67 0 5 5 4 83 0 4 4 23 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 0 0 1 0 87 0 2 2 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
95 93 75 73 64 62 55 53 44 42 38 41 37 8 18
CALL[ ]	/* CallFunction */";
};
width = 412;
}
);
note = s;
unicode = 115;
},
{
glyphname = sacute;
kernLeft = s;
kernRight = s;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(96,-30,o),
(110,-16,o),
(110,-3,cs),
(110,1,o),
(110,5,o),
(110,9,cs),
(110,13,o),
(110,18,o),
(109,23,c),
(148,-20,o),
(193,-27,o),
(238,-27,cs),
(326,-27,o),
(412,8,o),
(412,102,cs),
(412,202,o),
(315,217,o),
(223,244,cs),
(190,254,o),
(139,270,o),
(139,325,cs),
(139,358,o),
(158,384,o),
(217,384,cs),
(272,384,o),
(295,361,o),
(307,342,cs),
(318,327,o),
(329,304,o),
(334,280,cs),
(337,265,o),
(353,250,o),
(370,250,cs),
(393,250,o),
(399,266,o),
(402,289,cs),
(405,312,o),
(408,382,o),
(408,422,cs),
(408,469,o),
(393,475,o),
(372,475,cs),
(353,475,o),
(332,469,o),
(332,436,cs),
(332,432,o),
(333,409,o),
(334,392,c),
(315,424,o),
(286,457,o),
(209,457,cs),
(130,457,o),
(52,418,o),
(52,320,cs),
(52,210,o),
(146,180,o),
(216,164,cs),
(299,143,o),
(322,120,o),
(322,91,cs),
(322,56,o),
(284,44,o),
(240,44,cs),
(181,44,o),
(146,64,o),
(129,91,cs),
(110,122,o),
(108,141,o),
(105,154,cs),
(102,167,o),
(90,181,o),
(75,181,cs),
(48,181,o),
(35,170,o),
(35,148,cs),
(35,132,o),
(36,117,o),
(37,104,cs),
(38,91,o),
(39,77,o),
(39,64,cs),
(39,55,o),
(39,45,o),
(38,36,cs),
(37,27,o),
(37,16,o),
(37,4,cs),
(37,-15,o),
(41,-30,o),
(72,-30,cs)
);
},
{
closed = 1;
nodes = (
(175,500,o),
(210,523,o),
(249,557,cs),
(284,588,o),
(313,622,o),
(313,640,cs),
(313,665,o),
(286,687,o),
(243,688,cs),
(218,688,o),
(187,649,o),
(163,609,cs),
(143,574,o),
(121,527,o),
(121,522,cs),
(121,507,o),
(143,500,o),
(158,500,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
67 1 8 5 18 1 2 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 1 0 1 106 0 0 6 0 106 0 8 8 5 83 0 5 5 23 67 0 7 7 6 83 0 6 6 23 67 0 3 3 2 83 9 1 2 2 21 67 0 4 4 2 83 9 1 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 0 8 7 5 8 92 0 6 0 7 3 6 7 91 0 3 3 2 83 9 1 2 2 21 67 0 4 4 2 83 9 1 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 0 8 7 5 8 92 0 6 0 7 3 6 7 91 0 3 4 2 3 79 0 4 2 2 4 79 0 4 4 2 83 9 1 2 4 2 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
112 110 94 92 85 83 74 72 63 61 39 41 39 38 38 10 20
CALL[ ]	/* CallFunction */";
};
width = 451;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(92,-30,o),
(102,-15,o),
(102,5,cs),
(102,9,o),
(102,13,o),
(102,18,cs),
(102,23,o),
(102,28,o),
(101,33,c),
(125,-13,o),
(186,-24,o),
(234,-24,cs),
(298,-24,o),
(399,-5,o),
(399,99,cs),
(399,188,o),
(323,209,o),
(225,235,cs),
(167,250,o),
(114,267,o),
(114,322,cs),
(114,366,o),
(146,396,o),
(209,396,cs),
(272,396,o),
(302,367,o),
(318,336,cs),
(323,328,o),
(330,295,o),
(330,284,c),
(333,275,o),
(340,259,o),
(357,259,cs),
(369,259,o),
(388,266,o),
(389,285,cs),
(389,298,o),
(394,347,o),
(394,432,cs),
(394,467,o),
(377,475,o),
(362,475,cs),
(350,475,o),
(330,469,o),
(330,438,cs),
(330,431,o),
(331,409,o),
(332,392,c),
(313,424,o),
(283,457,o),
(206,457,cs),
(126,457,o),
(48,419,o),
(48,320,cs),
(48,218,o),
(131,192,o),
(203,175,cs),
(282,155,o),
(331,140,o),
(331,95,cs),
(331,49,o),
(278,33,o),
(231,33,cs),
(169,33,o),
(123,64,o),
(107,100,cs),
(104,107,o),
(102,113,o),
(102,119,cs),
(101,124,o),
(100,132,o),
(99,141,cs),
(96,165,o),
(91,181,o),
(64,181,cs),
(39,181,o),
(37,167,o),
(37,146,cs),
(37,131,o),
(38,116,o),
(39,99,cs),
(40,82,o),
(41,67,o),
(41,54,cs),
(41,45,o),
(41,34,o),
(40,21,cs),
(39,8,o),
(39,-1,o),
(39,-4,cs),
(39,-23,o),
(56,-30,o),
(72,-30,cs)
);
},
{
closed = 1;
nodes = (
(180,504,o),
(285,603,o),
(285,632,cs),
(285,655,o),
(267,670,o),
(236,670,cs),
(218,670,o),
(189,636,o),
(166,600,cs),
(140,560,o),
(125,526,o),
(125,522,cs),
(125,509,o),
(139,504,o),
(150,504,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
92 86 72 3 7 8 1 66 18 1 4 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 1 0 1 106 0 0 6 0 106 0 8 8 5 83 0 5 5 23 67 0 7 7 6 83 0 6 6 23 67 0 3 3 2 83 9 1 2 2 21 67 0 4 4 2 83 9 1 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 0 8 7 5 8 92 0 6 0 7 3 6 7 91 0 3 3 2 83 9 1 2 2 21 67 0 4 4 2 83 9 1 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 0 8 7 5 8 92 0 6 0 7 3 6 7 91 0 3 4 2 3 79 0 4 2 2 4 79 0 4 4 2 83 9 1 2 4 2 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 0 8 7 5 8 92 0 6 0 7 3 6 7 91 0 3 0 2 3 2 87 0 4 4 9 83 0 9 9 21 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 0 8 7 5 8 92 0 6 0 7 3 6 7 91 0 3 4 2 3 79 0 4 0 9 2 4 9 91 0 3 3 2 83 0 2 3 2 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
119 117 101 99 90 88 79 77 68 66 41 44 39 40 36 10 20
CALL[ ]	/* CallFunction */";
};
width = 435;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(73,-30,o),
(75,-15,o),
(75,5,cs),
(75,9,o),
(75,14,o),
(75,20,cs),
(75,26,o),
(75,32,o),
(74,37,c),
(93,2,o),
(161,-23,o),
(212,-23,cs),
(256,-23,o),
(372,-7,o),
(372,103,cs),
(372,179,o),
(315,199,o),
(228,220,cs),
(131,242,o),
(87,254,o),
(87,323,cs),
(87,398,o),
(139,426,o),
(206,426,cs),
(279,426,o),
(312,390,o),
(325,342,cs),
(328,332,o),
(330,324,o),
(331,317,cs),
(331,310,o),
(331,303,o),
(332,298,cs),
(333,287,o),
(337,273,o),
(349,273,cs),
(361,273,o),
(364,287,o),
(364,299,cs),
(364,306,o),
(365,323,o),
(366,350,cs),
(367,376,o),
(367,409,o),
(367,449,cs),
(367,464,o),
(361,475,o),
(349,475,cs),
(344,475,o),
(340,473,o),
(337,468,cs),
(334,463,o),
(333,454,o),
(333,441,cs),
(333,430,o),
(334,409,o),
(335,392,c),
(316,424,o),
(286,457,o),
(210,457,cs),
(130,457,o),
(51,418,o),
(51,323,cs),
(51,247,o),
(100,213,o),
(184,194,cs),
(277,173,o),
(334,159,o),
(334,98,cs),
(334,29,o),
(265,8,o),
(216,8,cs),
(175,8,o),
(136,18,o),
(105,46,cs),
(80,69,o),
(75,89,o),
(72,136,cs),
(70,159,o),
(64,171,o),
(54,171,cs),
(45,171,o),
(40,160,o),
(40,139,cs),
(40,127,o),
(41,113,o),
(42,97,cs),
(43,81,o),
(44,67,o),
(44,54,cs),
(44,45,o),
(44,34,o),
(43,21,cs),
(42,8,o),
(42,-1,o),
(42,-6,cs),
(42,-25,o),
(49,-30,o),
(58,-30,cs)
);
},
{
closed = 1;
nodes = (
(161,510,o),
(248,597,o),
(248,618,cs),
(248,637,o),
(240,640,o),
(229,640,cs),
(209,640,o),
(134,546,o),
(134,521,cs),
(134,514,o),
(137,510,o),
(142,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
63 1 7 8 34 15 2 4 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 1 106 0 0 6 0 106 0 8 8 5 83 0 5 5 23 67 0 7 7 6 83 0 6 6 23 67 0 4 4 9 83 0 9 9 21 67 0 3 3 2 83 0 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 0 8 7 5 8 92 0 6 0 7 3 6 7 91 0 4 4 9 83 0 9 9 21 67 0 3 3 2 83 0 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 0 8 7 5 8 92 0 6 0 7 3 6 7 91 0 3 0 2 3 2 87 0 4 4 9 83 0 9 9 21 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
110 108 90 88 79 77 70 68 59 57 38 41 39 37 36 10 20
CALL[ ]	/* CallFunction */";
};
width = 412;
}
);
note = sacute;
unicode = 347;
},
{
glyphname = scaron;
kernLeft = s;
kernRight = s;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(96,-30,o),
(110,-16,o),
(110,-3,cs),
(110,1,o),
(110,5,o),
(110,9,cs),
(110,13,o),
(110,18,o),
(109,23,c),
(148,-20,o),
(193,-27,o),
(238,-27,cs),
(326,-27,o),
(412,8,o),
(412,102,cs),
(412,202,o),
(315,217,o),
(223,244,cs),
(190,254,o),
(139,270,o),
(139,325,cs),
(139,358,o),
(158,384,o),
(217,384,cs),
(272,384,o),
(295,361,o),
(307,342,cs),
(318,327,o),
(329,304,o),
(334,280,cs),
(337,265,o),
(353,250,o),
(370,250,cs),
(393,250,o),
(399,266,o),
(402,289,cs),
(405,312,o),
(408,382,o),
(408,422,cs),
(408,469,o),
(393,475,o),
(372,475,cs),
(353,475,o),
(332,469,o),
(332,436,cs),
(332,432,o),
(333,409,o),
(334,392,c),
(315,424,o),
(286,457,o),
(209,457,cs),
(130,457,o),
(52,418,o),
(52,320,cs),
(52,210,o),
(146,180,o),
(216,164,cs),
(299,143,o),
(322,120,o),
(322,91,cs),
(322,56,o),
(284,44,o),
(240,44,cs),
(181,44,o),
(146,64,o),
(129,91,cs),
(110,122,o),
(108,141,o),
(105,154,cs),
(102,167,o),
(90,181,o),
(75,181,cs),
(48,181,o),
(35,170,o),
(35,148,cs),
(35,132,o),
(36,117,o),
(37,104,cs),
(38,91,o),
(39,77,o),
(39,64,cs),
(39,55,o),
(39,45,o),
(38,36,cs),
(37,27,o),
(37,16,o),
(37,4,cs),
(37,-15,o),
(41,-30,o),
(72,-30,cs)
);
},
{
closed = 1;
nodes = (
(226,486,o),
(335,578,o),
(335,619,cs),
(335,630,o),
(331,640,o),
(322,640,cs),
(311,640,o),
(274,616,o),
(202,578,c),
(153,604,o),
(95,640,o),
(83,640,cs),
(75,640,o),
(70,633,o),
(70,626,cs),
(70,599,o),
(98,565,o),
(129,537,cs),
(156,511,o),
(191,486,o),
(202,486,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
21 1 1 0 75 1 9 6 26 1 3 5 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
2 11 2 0 1 0 106 0 1 7 1 106 0 9 9 6 83 0 6 6 23 67 0 8 8 7 83 0 7 7 23 67 0 4 4 3 84 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
2 11 2 0 1 0 106 0 1 7 1 106 0 6 0 9 8 6 9 91 0 7 0 8 4 7 8 91 0 4 4 3 84 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
2 11 2 0 1 0 106 0 1 7 1 106 0 6 0 9 8 6 9 91 0 7 0 8 4 7 8 91 0 4 5 3 4 79 0 5 3 3 5 79 0 5 5 3 83 10 1 3 5 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 120 118 102 100 93 91 82 80 71 69 53 51 44 42 33 31 17 15 9 7 0 25 1 25 12 15
CALL[ ]	/* CallFunction */";
};
width = 451;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(92,-30,o),
(102,-15,o),
(102,5,cs),
(102,9,o),
(102,13,o),
(102,18,cs),
(102,23,o),
(102,28,o),
(101,33,c),
(125,-13,o),
(186,-24,o),
(234,-24,cs),
(298,-24,o),
(399,-5,o),
(399,99,cs),
(399,188,o),
(323,209,o),
(225,235,cs),
(167,250,o),
(114,267,o),
(114,322,cs),
(114,366,o),
(146,396,o),
(209,396,cs),
(272,396,o),
(302,367,o),
(318,336,cs),
(323,328,o),
(330,295,o),
(330,284,c),
(333,275,o),
(340,259,o),
(357,259,cs),
(369,259,o),
(388,266,o),
(389,285,cs),
(389,298,o),
(394,347,o),
(394,432,cs),
(394,467,o),
(377,475,o),
(362,475,cs),
(350,475,o),
(330,469,o),
(330,438,cs),
(330,431,o),
(331,409,o),
(332,392,c),
(313,424,o),
(283,457,o),
(206,457,cs),
(126,457,o),
(48,419,o),
(48,320,cs),
(48,218,o),
(131,192,o),
(203,175,cs),
(282,155,o),
(331,140,o),
(331,95,cs),
(331,49,o),
(278,33,o),
(231,33,cs),
(169,33,o),
(123,64,o),
(107,100,cs),
(104,107,o),
(102,113,o),
(102,119,cs),
(101,124,o),
(100,132,o),
(99,141,cs),
(96,165,o),
(91,181,o),
(64,181,cs),
(39,181,o),
(37,167,o),
(37,146,cs),
(37,131,o),
(38,116,o),
(39,99,cs),
(40,82,o),
(41,67,o),
(41,54,cs),
(41,45,o),
(41,34,o),
(40,21,cs),
(39,8,o),
(39,-1,o),
(39,-4,cs),
(39,-23,o),
(56,-30,o),
(72,-30,cs)
);
},
{
closed = 1;
nodes = (
(228,495,o),
(334,588,o),
(334,623,cs),
(334,632,o),
(331,640,o),
(323,640,cs),
(310,640,o),
(216,577,o),
(203,569,c),
(130,612,o),
(99,640,o),
(84,640,cs),
(77,640,o),
(73,636,o),
(73,627,cs),
(73,586,o),
(181,495,o),
(203,495,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
111 1 10 8 75 69 55 3 5 6 2 66 1 1 2 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
9 11 2 8 10 8 106 0 10 10 23 67 0 6 6 3 83 0 3 3 23 67 0 5 5 4 83 0 4 4 23 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
9 11 2 8 10 8 106 0 10 4 3 10 94 0 3 0 6 5 3 6 92 0 4 0 5 1 4 5 91 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
9 11 2 8 10 8 106 0 10 4 3 10 94 0 3 0 6 5 3 6 92 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 0 0 2 79 0 2 2 0 83 7 1 0 2 0 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
9 11 2 8 10 8 106 0 10 4 10 106 0 3 0 6 5 3 6 92 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 0 0 2 79 0 2 2 0 83 7 1 0 2 0 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
9 11 2 8 10 8 106 0 10 4 10 106 0 3 0 6 5 3 6 92 0 4 0 5 1 4 5 91 0 1 0 0 1 0 87 0 2 2 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
9 11 2 8 10 8 106 0 10 4 10 106 0 3 0 6 5 3 6 92 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 0 7 0 2 7 91 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
107 106 124 122 117 115 106 130 107 130 102 100 84 82 73 71 62 60 51 49 41 44 38 12 29
CALL[ ]	/* CallFunction */";
};
width = 435;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(73,-30,o),
(75,-15,o),
(75,5,cs),
(75,9,o),
(75,14,o),
(75,20,cs),
(75,26,o),
(75,32,o),
(74,37,c),
(93,2,o),
(161,-23,o),
(212,-23,cs),
(256,-23,o),
(372,-7,o),
(372,103,cs),
(372,179,o),
(315,199,o),
(228,220,cs),
(131,242,o),
(87,254,o),
(87,323,cs),
(87,398,o),
(139,426,o),
(206,426,cs),
(279,426,o),
(312,390,o),
(325,342,cs),
(328,332,o),
(330,324,o),
(331,317,cs),
(331,310,o),
(331,303,o),
(332,298,cs),
(333,287,o),
(337,273,o),
(349,273,cs),
(361,273,o),
(364,287,o),
(364,299,cs),
(364,306,o),
(365,323,o),
(366,350,cs),
(367,376,o),
(367,409,o),
(367,449,cs),
(367,464,o),
(361,475,o),
(349,475,cs),
(344,475,o),
(340,473,o),
(337,468,cs),
(334,463,o),
(333,454,o),
(333,441,cs),
(333,430,o),
(334,409,o),
(335,392,c),
(316,424,o),
(286,457,o),
(210,457,cs),
(130,457,o),
(51,418,o),
(51,323,cs),
(51,247,o),
(100,213,o),
(184,194,cs),
(277,173,o),
(334,159,o),
(334,98,cs),
(334,29,o),
(265,8,o),
(216,8,cs),
(175,8,o),
(136,18,o),
(105,46,cs),
(80,69,o),
(75,89,o),
(72,136,cs),
(70,159,o),
(64,171,o),
(54,171,cs),
(45,171,o),
(40,160,o),
(40,139,cs),
(40,127,o),
(41,113,o),
(42,97,cs),
(43,81,o),
(44,67,o),
(44,54,cs),
(44,45,o),
(44,34,o),
(43,21,cs),
(42,8,o),
(42,-1,o),
(42,-6,cs),
(42,-25,o),
(49,-30,o),
(58,-30,cs)
);
},
{
closed = 1;
nodes = (
(229,510,o),
(332,604,o),
(332,629,cs),
(332,636,o),
(329,640,o),
(324,640,cs),
(309,640,o),
(280,608,o),
(204,554,c),
(168,580,o),
(98,640,o),
(85,640,cs),
(80,640,o),
(77,636,o),
(77,629,cs),
(77,604,o),
(181,510,o),
(204,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
19 1 1 0 72 1 8 9 43 24 2 5 4 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
2 11 2 0 1 0 106 0 1 7 1 106 0 9 9 6 83 0 6 6 23 67 0 8 8 7 83 0 7 7 23 67 0 5 5 10 83 0 10 10 21 67 0 4 4 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
2 11 2 0 1 0 106 0 1 7 1 106 0 6 0 9 8 6 9 91 0 7 0 8 4 7 8 91 0 5 5 10 83 0 10 10 21 67 0 4 4 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
2 11 2 0 1 0 106 0 1 7 1 106 0 6 0 9 8 6 9 91 0 7 0 8 4 7 8 91 0 4 0 3 4 3 87 0 5 5 10 83 0 10 10 21 10 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 119 117 99 97 88 86 79 77 68 66 50 48 42 40 31 29 15 13 8 6 0 23 1 23 12 15
CALL[ ]	/* CallFunction */";
};
width = 412;
}
);
note = scaron;
unicode = 353;
},
{
glyphname = scedilla;
kernLeft = s;
kernRight = s;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(96,-30,o),
(110,-16,o),
(110,-3,cs),
(110,1,o),
(110,5,o),
(110,9,cs),
(110,13,o),
(110,18,o),
(109,23,c),
(148,-20,o),
(193,-27,o),
(238,-27,cs),
(326,-27,o),
(412,8,o),
(412,102,cs),
(412,202,o),
(315,217,o),
(223,244,cs),
(190,254,o),
(139,270,o),
(139,325,cs),
(139,358,o),
(158,384,o),
(217,384,cs),
(272,384,o),
(295,361,o),
(307,342,cs),
(318,327,o),
(329,304,o),
(334,280,cs),
(337,265,o),
(353,250,o),
(370,250,cs),
(393,250,o),
(399,266,o),
(402,289,cs),
(405,312,o),
(408,382,o),
(408,422,cs),
(408,469,o),
(393,475,o),
(372,475,cs),
(353,475,o),
(332,469,o),
(332,436,cs),
(332,432,o),
(333,409,o),
(334,392,c),
(315,424,o),
(286,457,o),
(209,457,cs),
(130,457,o),
(52,418,o),
(52,320,cs),
(52,210,o),
(146,180,o),
(216,164,cs),
(299,143,o),
(322,120,o),
(322,91,cs),
(322,56,o),
(284,44,o),
(240,44,cs),
(181,44,o),
(146,64,o),
(129,91,cs),
(110,122,o),
(108,141,o),
(105,154,cs),
(102,167,o),
(90,181,o),
(75,181,cs),
(48,181,o),
(35,170,o),
(35,148,cs),
(35,132,o),
(36,117,o),
(37,104,cs),
(38,91,o),
(39,77,o),
(39,64,cs),
(39,55,o),
(39,45,o),
(38,36,cs),
(37,27,o),
(37,16,o),
(37,4,cs),
(37,-15,o),
(41,-30,o),
(72,-30,cs)
);
},
{
closed = 1;
nodes = (
(228,-250,o),
(291,-208,o),
(291,-131,cs),
(291,-74,o),
(255,-50,o),
(223,-50,cs),
(179,-50,o),
(163,-80,o),
(163,-108,cs),
(163,-139,o),
(199,-141,o),
(199,-158,cs),
(199,-178,o),
(197,-193,o),
(192,-202,cs),
(187,-212,o),
(184,-220,o),
(184,-227,cs),
(184,-250,o),
(203,-250,o),
(210,-250,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
49 1 6 3 0 1 0 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 6 6 3 83 0 3 3 23 67 0 5 5 4 83 0 4 4 23 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 8 0 9 8 9 87 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 7 1 0 8 2 0 91 0 8 9 9 8 79 0 8 8 9 83 0 9 8 9 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
108 106 100 98 94 92 76 74 67 65 56 54 45 43 39 41 37 10 18
CALL[ ]	/* CallFunction */";
};
width = 451;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(92,-30,o),
(102,-15,o),
(102,5,cs),
(102,9,o),
(102,13,o),
(102,18,cs),
(102,23,o),
(102,28,o),
(101,33,c),
(125,-13,o),
(186,-24,o),
(234,-24,cs),
(298,-24,o),
(399,-5,o),
(399,99,cs),
(399,188,o),
(323,209,o),
(225,235,cs),
(167,250,o),
(114,267,o),
(114,322,cs),
(114,366,o),
(146,396,o),
(209,396,cs),
(272,396,o),
(302,367,o),
(318,336,cs),
(323,328,o),
(330,295,o),
(330,284,c),
(333,275,o),
(340,259,o),
(357,259,cs),
(369,259,o),
(388,266,o),
(389,285,cs),
(389,298,o),
(394,347,o),
(394,432,cs),
(394,467,o),
(377,475,o),
(362,475,cs),
(350,475,o),
(330,469,o),
(330,438,cs),
(330,431,o),
(331,409,o),
(332,392,c),
(313,424,o),
(283,457,o),
(206,457,cs),
(126,457,o),
(48,419,o),
(48,320,cs),
(48,218,o),
(131,192,o),
(203,175,cs),
(282,155,o),
(331,140,o),
(331,95,cs),
(331,49,o),
(278,33,o),
(231,33,cs),
(169,33,o),
(123,64,o),
(107,100,cs),
(104,107,o),
(102,113,o),
(102,119,cs),
(101,124,o),
(100,132,o),
(99,141,cs),
(96,165,o),
(91,181,o),
(64,181,cs),
(39,181,o),
(37,167,o),
(37,146,cs),
(37,131,o),
(38,116,o),
(39,99,cs),
(40,82,o),
(41,67,o),
(41,54,cs),
(41,45,o),
(41,34,o),
(40,21,cs),
(39,8,o),
(39,-1,o),
(39,-4,cs),
(39,-23,o),
(56,-30,o),
(72,-30,cs)
);
},
{
closed = 1;
nodes = (
(214,-240,o),
(255,-190,o),
(255,-136,cs),
(255,-83,o),
(225,-64,o),
(198,-64,cs),
(161,-64,o),
(146,-89,o),
(146,-113,cs),
(146,-145,o),
(182,-144,o),
(182,-161,cs),
(182,-178,o),
(180,-191,o),
(176,-199,cs),
(171,-208,o),
(169,-215,o),
(169,-221,cs),
(169,-238,o),
(183,-240,o),
(190,-240,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
75 69 55 3 5 6 1 66 1 1 2 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 6 6 3 83 0 3 3 23 67 0 5 5 4 83 0 4 4 23 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 8 0 9 8 9 87 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 7 1 0 8 2 0 91 0 8 9 9 8 79 0 8 8 9 83 0 9 8 9 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 0 0 8 1 0 91 0 8 0 9 8 9 87 0 2 2 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 2 0 7 0 2 7 91 0 1 0 0 8 1 0 91 0 8 9 9 8 79 0 8 8 9 83 0 9 8 9 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
118 116 110 108 102 100 84 82 73 71 62 60 51 49 41 44 38 10 29
CALL[ ]	/* CallFunction */";
};
width = 435;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(73,-30,o),
(75,-15,o),
(75,5,cs),
(75,9,o),
(75,14,o),
(75,20,cs),
(75,26,o),
(75,32,o),
(74,37,c),
(93,2,o),
(161,-23,o),
(212,-23,cs),
(256,-23,o),
(372,-7,o),
(372,103,cs),
(372,179,o),
(315,199,o),
(228,220,cs),
(131,242,o),
(87,254,o),
(87,323,cs),
(87,398,o),
(139,426,o),
(206,426,cs),
(279,426,o),
(312,390,o),
(325,342,cs),
(328,332,o),
(330,324,o),
(331,317,cs),
(331,310,o),
(331,303,o),
(332,298,cs),
(333,287,o),
(337,273,o),
(349,273,cs),
(361,273,o),
(364,287,o),
(364,299,cs),
(364,306,o),
(365,323,o),
(366,350,cs),
(367,376,o),
(367,409,o),
(367,449,cs),
(367,464,o),
(361,475,o),
(349,475,cs),
(344,475,o),
(340,473,o),
(337,468,cs),
(334,463,o),
(333,454,o),
(333,441,cs),
(333,430,o),
(334,409,o),
(335,392,c),
(316,424,o),
(286,457,o),
(210,457,cs),
(130,457,o),
(51,418,o),
(51,323,cs),
(51,247,o),
(100,213,o),
(184,194,cs),
(277,173,o),
(334,159,o),
(334,98,cs),
(334,29,o),
(265,8,o),
(216,8,cs),
(175,8,o),
(136,18,o),
(105,46,cs),
(80,69,o),
(75,89,o),
(72,136,cs),
(70,159,o),
(64,171,o),
(54,171,cs),
(45,171,o),
(40,160,o),
(40,139,cs),
(40,127,o),
(41,113,o),
(42,97,cs),
(43,81,o),
(44,67,o),
(44,54,cs),
(44,45,o),
(44,34,o),
(43,21,cs),
(42,8,o),
(42,-1,o),
(42,-6,cs),
(42,-25,o),
(49,-30,o),
(58,-30,cs)
);
},
{
closed = 1;
nodes = (
(225,-214,o),
(241,-164,o),
(241,-135,cs),
(241,-90,o),
(219,-78,o),
(199,-78,cs),
(172,-78,o),
(159,-95,o),
(159,-112,cs),
(159,-144,o),
(195,-139,o),
(195,-156,cs),
(195,-163,o),
(193,-171,o),
(190,-180,cs),
(186,-190,o),
(184,-197,o),
(184,-202,cs),
(184,-209,o),
(191,-214,o),
(198,-214,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
70 1 7 8 41 22 2 4 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 8 8 5 83 0 5 5 23 67 0 7 7 6 83 0 6 6 23 67 0 4 4 9 83 0 9 9 21 67 0 3 3 2 83 0 2 2 21 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 5 0 8 7 5 8 91 0 6 0 7 3 6 7 91 0 4 4 9 83 0 9 9 21 67 0 3 3 2 83 0 2 2 21 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 5 0 8 7 5 8 91 0 6 0 7 3 6 7 91 0 3 0 2 0 3 2 91 0 4 4 9 83 0 9 9 21 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 5 0 8 7 5 8 91 0 6 0 7 3 6 7 91 0 3 0 2 0 3 2 91 0 0 0 1 0 1 87 0 4 4 9 83 0 9 9 21 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
117 115 97 95 86 84 77 75 66 64 38 41 47 38 34 10 20
CALL[ ]	/* CallFunction */";
};
width = 412;
}
);
note = uni015F;
unicode = 351;
},
{
glyphname = scircumflex;
kernLeft = s;
kernRight = s;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(96,-30,o),
(110,-16,o),
(110,-3,cs),
(110,1,o),
(110,5,o),
(110,9,cs),
(110,13,o),
(110,18,o),
(109,23,c),
(148,-20,o),
(193,-27,o),
(238,-27,cs),
(326,-27,o),
(412,8,o),
(412,102,cs),
(412,202,o),
(315,217,o),
(223,244,cs),
(190,254,o),
(139,270,o),
(139,325,cs),
(139,358,o),
(158,384,o),
(217,384,cs),
(272,384,o),
(295,361,o),
(307,342,cs),
(318,327,o),
(329,304,o),
(334,280,cs),
(337,265,o),
(353,250,o),
(370,250,cs),
(393,250,o),
(399,266,o),
(402,289,cs),
(405,312,o),
(408,382,o),
(408,422,cs),
(408,469,o),
(393,475,o),
(372,475,cs),
(353,475,o),
(332,469,o),
(332,436,cs),
(332,432,o),
(333,409,o),
(334,392,c),
(315,424,o),
(286,457,o),
(209,457,cs),
(130,457,o),
(52,418,o),
(52,320,cs),
(52,210,o),
(146,180,o),
(216,164,cs),
(299,143,o),
(322,120,o),
(322,91,cs),
(322,56,o),
(284,44,o),
(240,44,cs),
(181,44,o),
(146,64,o),
(129,91,cs),
(110,122,o),
(108,141,o),
(105,154,cs),
(102,167,o),
(90,181,o),
(75,181,cs),
(48,181,o),
(35,170,o),
(35,148,cs),
(35,132,o),
(36,117,o),
(37,104,cs),
(38,91,o),
(39,77,o),
(39,64,cs),
(39,55,o),
(39,45,o),
(38,36,cs),
(37,27,o),
(37,16,o),
(37,4,cs),
(37,-15,o),
(41,-30,o),
(72,-30,cs)
);
},
{
closed = 1;
nodes = (
(80,510,o),
(138,546,o),
(187,572,c),
(259,534,o),
(296,510,o),
(307,510,cs),
(316,510,o),
(320,520,o),
(320,531,cs),
(320,572,o),
(211,664,o),
(187,664,cs),
(176,664,o),
(141,639,o),
(114,614,cs),
(83,585,o),
(55,549,o),
(55,524,cs),
(55,517,o),
(60,510,o),
(68,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
5 1 0 2 75 1 9 6 26 1 3 5 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 2 0 2 106 1 11 2 0 7 0 106 0 9 9 6 83 0 6 6 23 67 0 8 8 7 83 0 7 7 23 67 0 4 4 3 83 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 2 0 2 106 1 11 2 0 7 0 106 0 6 0 9 8 6 9 92 0 7 0 8 4 7 8 91 0 4 4 3 83 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 2 0 2 106 1 11 2 0 7 0 106 0 6 0 9 8 6 9 92 0 7 0 8 4 7 8 91 0 4 5 3 4 79 0 5 3 3 5 79 0 5 5 3 83 10 1 3 5 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 120 118 102 100 93 91 82 80 71 69 53 51 44 42 33 31 19 17 11 9 0 25 1 25 12 15
CALL[ ]	/* CallFunction */";
};
width = 451;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(92,-30,o),
(102,-15,o),
(102,5,cs),
(102,9,o),
(102,13,o),
(102,18,cs),
(102,23,o),
(102,28,o),
(101,33,c),
(125,-13,o),
(186,-24,o),
(234,-24,cs),
(298,-24,o),
(399,-5,o),
(399,99,cs),
(399,188,o),
(323,209,o),
(225,235,cs),
(167,250,o),
(114,267,o),
(114,322,cs),
(114,366,o),
(146,396,o),
(209,396,cs),
(272,396,o),
(302,367,o),
(318,336,cs),
(323,328,o),
(330,295,o),
(330,284,c),
(333,275,o),
(340,259,o),
(357,259,cs),
(369,259,o),
(388,266,o),
(389,285,cs),
(389,298,o),
(394,347,o),
(394,432,cs),
(394,467,o),
(377,475,o),
(362,475,cs),
(350,475,o),
(330,469,o),
(330,438,cs),
(330,431,o),
(331,409,o),
(332,392,c),
(313,424,o),
(283,457,o),
(206,457,cs),
(126,457,o),
(48,419,o),
(48,320,cs),
(48,218,o),
(131,192,o),
(203,175,cs),
(282,155,o),
(331,140,o),
(331,95,cs),
(331,49,o),
(278,33,o),
(231,33,cs),
(169,33,o),
(123,64,o),
(107,100,cs),
(104,107,o),
(102,113,o),
(102,119,cs),
(101,124,o),
(100,132,o),
(99,141,cs),
(96,165,o),
(91,181,o),
(64,181,cs),
(39,181,o),
(37,167,o),
(37,146,cs),
(37,131,o),
(38,116,o),
(39,99,cs),
(40,82,o),
(41,67,o),
(41,54,cs),
(41,45,o),
(41,34,o),
(40,21,cs),
(39,8,o),
(39,-1,o),
(39,-4,cs),
(39,-23,o),
(56,-30,o),
(72,-30,cs)
);
},
{
closed = 1;
nodes = (
(85,510,o),
(116,538,o),
(189,581,c),
(202,573,o),
(296,510,o),
(309,510,cs),
(317,510,o),
(320,518,o),
(320,527,cs),
(320,562,o),
(214,655,o),
(189,655,cs),
(167,655,o),
(59,564,o),
(59,523,cs),
(59,514,o),
(63,510,o),
(70,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
111 1 8 10 75 69 55 3 5 6 2 66 1 1 2 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 10 8 10 106 9 11 2 8 4 8 106 0 6 6 3 83 0 3 3 23 67 0 5 5 4 83 0 4 4 23 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 10 8 10 106 9 11 2 8 4 8 106 0 3 0 6 5 3 6 92 0 4 0 5 1 4 5 91 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 10 8 10 106 9 11 2 8 4 8 106 0 3 0 6 5 3 6 92 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 0 0 2 79 0 2 2 0 83 7 1 0 2 0 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 10 8 10 106 9 11 2 8 4 8 106 0 3 0 6 5 3 6 92 0 4 0 5 1 4 5 91 0 1 0 0 1 0 87 0 2 2 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 10 8 10 106 9 11 2 8 4 8 106 0 3 0 6 5 3 6 92 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 0 7 0 2 7 91 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
107 106 124 122 117 115 106 130 107 130 102 100 84 82 73 71 62 60 51 49 41 44 38 12 29
CALL[ ]	/* CallFunction */";
};
width = 435;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(73,-30,o),
(75,-15,o),
(75,5,cs),
(75,9,o),
(75,14,o),
(75,20,cs),
(75,26,o),
(75,32,o),
(74,37,c),
(93,2,o),
(161,-23,o),
(212,-23,cs),
(256,-23,o),
(372,-7,o),
(372,103,cs),
(372,179,o),
(315,199,o),
(228,220,cs),
(131,242,o),
(87,254,o),
(87,323,cs),
(87,398,o),
(139,426,o),
(206,426,cs),
(279,426,o),
(312,390,o),
(325,342,cs),
(328,332,o),
(330,324,o),
(331,317,cs),
(331,310,o),
(331,303,o),
(332,298,cs),
(333,287,o),
(337,273,o),
(349,273,cs),
(361,273,o),
(364,287,o),
(364,299,cs),
(364,306,o),
(365,323,o),
(366,350,cs),
(367,376,o),
(367,409,o),
(367,449,cs),
(367,464,o),
(361,475,o),
(349,475,cs),
(344,475,o),
(340,473,o),
(337,468,cs),
(334,463,o),
(333,454,o),
(333,441,cs),
(333,430,o),
(334,409,o),
(335,392,c),
(316,424,o),
(286,457,o),
(210,457,cs),
(130,457,o),
(51,418,o),
(51,323,cs),
(51,247,o),
(100,213,o),
(184,194,cs),
(277,173,o),
(334,159,o),
(334,98,cs),
(334,29,o),
(265,8,o),
(216,8,cs),
(175,8,o),
(136,18,o),
(105,46,cs),
(80,69,o),
(75,89,o),
(72,136,cs),
(70,159,o),
(64,171,o),
(54,171,cs),
(45,171,o),
(40,160,o),
(40,139,cs),
(40,127,o),
(41,113,o),
(42,97,cs),
(43,81,o),
(44,67,o),
(44,54,cs),
(44,45,o),
(44,34,o),
(43,21,cs),
(42,8,o),
(42,-1,o),
(42,-6,cs),
(42,-25,o),
(49,-30,o),
(58,-30,cs)
);
},
{
closed = 1;
nodes = (
(86,510,o),
(138,559,o),
(191,596,c),
(267,542,o),
(296,510,o),
(311,510,cs),
(316,510,o),
(319,514,o),
(319,521,cs),
(319,546,o),
(216,640,o),
(191,640,cs),
(168,640,o),
(64,546,o),
(64,521,cs),
(64,514,o),
(67,510,o),
(72,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
5 1 0 2 72 1 8 9 43 24 2 5 4 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 2 0 2 106 1 11 2 0 7 0 106 0 9 9 6 83 0 6 6 23 67 0 8 8 7 83 0 7 7 23 67 0 5 5 10 83 0 10 10 21 67 0 4 4 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 2 0 2 106 1 11 2 0 7 0 106 0 6 0 9 8 6 9 92 0 7 0 8 4 7 8 91 0 5 5 10 83 0 10 10 21 67 0 4 4 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 2 0 2 106 1 11 2 0 7 0 106 0 6 0 9 8 6 9 92 0 7 0 8 4 7 8 91 0 4 0 3 4 3 87 0 5 5 10 83 0 10 10 21 10 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 119 117 99 97 88 86 79 77 68 66 50 48 42 40 31 29 18 16 11 9 0 23 1 23 12 15
CALL[ ]	/* CallFunction */";
};
width = 412;
}
);
note = scircumflex;
unicode = 349;
},
{
glyphname = scommaaccent;
kernLeft = s;
kernRight = s;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(96,-30,o),
(110,-16,o),
(110,-3,cs),
(110,1,o),
(110,5,o),
(110,9,cs),
(110,13,o),
(110,18,o),
(109,23,c),
(148,-20,o),
(193,-27,o),
(238,-27,cs),
(326,-27,o),
(412,8,o),
(412,102,cs),
(412,202,o),
(315,217,o),
(223,244,cs),
(190,254,o),
(139,270,o),
(139,325,cs),
(139,358,o),
(158,384,o),
(217,384,cs),
(272,384,o),
(295,361,o),
(307,342,cs),
(318,327,o),
(329,304,o),
(334,280,cs),
(337,265,o),
(353,250,o),
(370,250,cs),
(393,250,o),
(399,266,o),
(402,289,cs),
(405,312,o),
(408,382,o),
(408,422,cs),
(408,469,o),
(393,475,o),
(372,475,cs),
(353,475,o),
(332,469,o),
(332,436,cs),
(332,432,o),
(333,409,o),
(334,392,c),
(315,424,o),
(286,457,o),
(209,457,cs),
(130,457,o),
(52,418,o),
(52,320,cs),
(52,210,o),
(146,180,o),
(216,164,cs),
(299,143,o),
(322,120,o),
(322,91,cs),
(322,56,o),
(284,44,o),
(240,44,cs),
(181,44,o),
(146,64,o),
(129,91,cs),
(110,122,o),
(108,141,o),
(105,154,cs),
(102,167,o),
(90,181,o),
(75,181,cs),
(48,181,o),
(35,170,o),
(35,148,cs),
(35,132,o),
(36,117,o),
(37,104,cs),
(38,91,o),
(39,77,o),
(39,64,cs),
(39,55,o),
(39,45,o),
(38,36,cs),
(37,27,o),
(37,16,o),
(37,4,cs),
(37,-15,o),
(41,-30,o),
(72,-30,cs)
);
},
{
closed = 1;
nodes = (
(225,-250,o),
(288,-208,o),
(288,-131,cs),
(288,-74,o),
(252,-50,o),
(220,-50,cs),
(176,-50,o),
(160,-80,o),
(160,-108,cs),
(160,-139,o),
(196,-141,o),
(196,-158,cs),
(196,-178,o),
(194,-193,o),
(189,-202,cs),
(184,-212,o),
(181,-220,o),
(181,-227,cs),
(181,-250,o),
(200,-250,o),
(207,-250,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
49 1 6 3 0 1 0 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 6 6 3 83 0 3 3 23 67 0 5 5 4 83 0 4 4 23 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 8 0 9 8 9 87 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 7 1 0 8 2 0 91 0 8 9 9 8 79 0 8 8 9 83 0 9 8 9 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
108 106 100 98 94 92 76 74 67 65 56 54 45 43 39 41 37 10 18
CALL[ ]	/* CallFunction */";
};
width = 451;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(92,-30,o),
(102,-15,o),
(102,5,cs),
(102,9,o),
(102,13,o),
(102,18,cs),
(102,23,o),
(102,28,o),
(101,33,c),
(125,-13,o),
(186,-24,o),
(234,-24,cs),
(298,-24,o),
(399,-5,o),
(399,99,cs),
(399,188,o),
(323,209,o),
(225,235,cs),
(167,250,o),
(114,267,o),
(114,322,cs),
(114,366,o),
(146,396,o),
(209,396,cs),
(272,396,o),
(302,367,o),
(318,336,cs),
(323,328,o),
(330,295,o),
(330,284,c),
(333,275,o),
(340,259,o),
(357,259,cs),
(369,259,o),
(388,266,o),
(389,285,cs),
(389,298,o),
(394,347,o),
(394,432,cs),
(394,467,o),
(377,475,o),
(362,475,cs),
(350,475,o),
(330,469,o),
(330,438,cs),
(330,431,o),
(331,409,o),
(332,392,c),
(313,424,o),
(283,457,o),
(206,457,cs),
(126,457,o),
(48,419,o),
(48,320,cs),
(48,218,o),
(131,192,o),
(203,175,cs),
(282,155,o),
(331,140,o),
(331,95,cs),
(331,49,o),
(278,33,o),
(231,33,cs),
(169,33,o),
(123,64,o),
(107,100,cs),
(104,107,o),
(102,113,o),
(102,119,cs),
(101,124,o),
(100,132,o),
(99,141,cs),
(96,165,o),
(91,181,o),
(64,181,cs),
(39,181,o),
(37,167,o),
(37,146,cs),
(37,131,o),
(38,116,o),
(39,99,cs),
(40,82,o),
(41,67,o),
(41,54,cs),
(41,45,o),
(41,34,o),
(40,21,cs),
(39,8,o),
(39,-1,o),
(39,-4,cs),
(39,-23,o),
(56,-30,o),
(72,-30,cs)
);
},
{
closed = 1;
nodes = (
(214,-240,o),
(255,-190,o),
(255,-136,cs),
(255,-83,o),
(225,-64,o),
(198,-64,cs),
(161,-64,o),
(146,-89,o),
(146,-113,cs),
(146,-145,o),
(182,-144,o),
(182,-161,cs),
(182,-178,o),
(180,-191,o),
(176,-199,cs),
(171,-208,o),
(169,-215,o),
(169,-221,cs),
(169,-238,o),
(183,-240,o),
(190,-240,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
75 69 55 3 5 6 1 66 1 1 2 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 6 6 3 83 0 3 3 23 67 0 5 5 4 83 0 4 4 23 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 8 0 9 8 9 87 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 7 1 0 8 2 0 91 0 8 9 9 8 79 0 8 8 9 83 0 9 8 9 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 0 0 8 1 0 91 0 8 0 9 8 9 87 0 2 2 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 2 0 7 0 2 7 91 0 1 0 0 8 1 0 91 0 8 9 9 8 79 0 8 8 9 83 0 9 8 9 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
118 116 110 108 102 100 84 82 73 71 62 60 51 49 41 44 38 10 29
CALL[ ]	/* CallFunction */";
};
width = 435;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(73,-30,o),
(75,-15,o),
(75,5,cs),
(75,9,o),
(75,14,o),
(75,20,cs),
(75,26,o),
(75,32,o),
(74,37,c),
(93,2,o),
(161,-23,o),
(212,-23,cs),
(256,-23,o),
(372,-7,o),
(372,103,cs),
(372,179,o),
(315,199,o),
(228,220,cs),
(131,242,o),
(87,254,o),
(87,323,cs),
(87,398,o),
(139,426,o),
(206,426,cs),
(279,426,o),
(312,390,o),
(325,342,cs),
(328,332,o),
(330,324,o),
(331,317,cs),
(331,310,o),
(331,303,o),
(332,298,cs),
(333,287,o),
(337,273,o),
(349,273,cs),
(361,273,o),
(364,287,o),
(364,299,cs),
(364,306,o),
(365,323,o),
(366,350,cs),
(367,376,o),
(367,409,o),
(367,449,cs),
(367,464,o),
(361,475,o),
(349,475,cs),
(344,475,o),
(340,473,o),
(337,468,cs),
(334,463,o),
(333,454,o),
(333,441,cs),
(333,430,o),
(334,409,o),
(335,392,c),
(316,424,o),
(286,457,o),
(210,457,cs),
(130,457,o),
(51,418,o),
(51,323,cs),
(51,247,o),
(100,213,o),
(184,194,cs),
(277,173,o),
(334,159,o),
(334,98,cs),
(334,29,o),
(265,8,o),
(216,8,cs),
(175,8,o),
(136,18,o),
(105,46,cs),
(80,69,o),
(75,89,o),
(72,136,cs),
(70,159,o),
(64,171,o),
(54,171,cs),
(45,171,o),
(40,160,o),
(40,139,cs),
(40,127,o),
(41,113,o),
(42,97,cs),
(43,81,o),
(44,67,o),
(44,54,cs),
(44,45,o),
(44,34,o),
(43,21,cs),
(42,8,o),
(42,-1,o),
(42,-6,cs),
(42,-25,o),
(49,-30,o),
(58,-30,cs)
);
},
{
closed = 1;
nodes = (
(225,-214,o),
(241,-164,o),
(241,-135,cs),
(241,-90,o),
(219,-78,o),
(199,-78,cs),
(172,-78,o),
(159,-95,o),
(159,-112,cs),
(159,-144,o),
(195,-139,o),
(195,-156,cs),
(195,-163,o),
(193,-171,o),
(190,-180,cs),
(186,-190,o),
(184,-197,o),
(184,-202,cs),
(184,-209,o),
(191,-214,o),
(198,-214,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
70 1 7 8 41 22 2 4 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 8 8 5 83 0 5 5 23 67 0 7 7 6 83 0 6 6 23 67 0 4 4 9 83 0 9 9 21 67 0 3 3 2 83 0 2 2 21 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 5 0 8 7 5 8 91 0 6 0 7 3 6 7 91 0 4 4 9 83 0 9 9 21 67 0 3 3 2 83 0 2 2 21 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 5 0 8 7 5 8 91 0 6 0 7 3 6 7 91 0 3 0 2 0 3 2 91 0 4 4 9 83 0 9 9 21 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 5 0 8 7 5 8 91 0 6 0 7 3 6 7 91 0 3 0 2 0 3 2 91 0 0 0 1 0 1 87 0 4 4 9 83 0 9 9 21 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
117 115 97 95 86 84 77 75 66 64 38 41 47 38 34 10 20
CALL[ ]	/* CallFunction */";
};
width = 412;
}
);
note = uni0219;
unicode = 537;
},
{
glyphname = germandbls;
kernLeft = germandbls;
kernRight = germandbls;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(274,-13,o),
(287,7,o),
(288,50,c),
(310,17,o),
(369,0,o),
(413,0,cs),
(466,0,o),
(567,27,o),
(567,114,cs),
(567,195,o),
(475,262,o),
(405,300,cs),
(344,332,o),
(292,368,o),
(292,432,cs),
(292,511,o),
(443,576,o),
(443,698,cs),
(443,734,o),
(411,825,o),
(306,825,cs),
(187,825,o),
(125,760,o),
(97,698,cs),
(64,623,o),
(59,546,o),
(59,491,cs),
(59,419,o),
(61,333,o),
(61,263,cs),
(61,194,o),
(60,140,o),
(56,77,cs),
(55,62,o),
(53,56,o),
(33,56,cs),
(18,56,o),
(-7,50,o),
(-7,29,cs),
(-7,8,o),
(16,0,o),
(35,0,cs),
(35,0,o),
(91,3,o),
(127,3,cs),
(140,3,o),
(153,7,o),
(153,30,cs),
(153,484,ls),
(153,532,o),
(152,590,o),
(173,651,cs),
(190,703,o),
(229,751,o),
(311,751,cs),
(338,751,o),
(351,724,o),
(351,700,cs),
(351,640,o),
(317,594,o),
(278,555,cs),
(240,517,o),
(204,476,o),
(204,429,cs),
(204,336,o),
(298,279,o),
(339,257,cs),
(384,232,o),
(419,208,o),
(444,187,cs),
(469,166,o),
(482,149,o),
(482,136,cs),
(482,101,o),
(455,78,o),
(416,78,cs),
(365,78,o),
(330,90,o),
(309,110,cs),
(306,113,o),
(292,125,o),
(285,141,cs),
(274,166,o),
(266,181,o),
(235,181,cs),
(220,181,o),
(203,167,o),
(203,148,cs),
(203,134,o),
(204,120,o),
(206,107,cs),
(207,93,o),
(208,80,o),
(208,67,cs),
(208,58,o),
(208,49,o),
(207,40,cs),
(206,31,o),
(205,23,o),
(205,16,cs),
(205,1,o),
(220,-13,o),
(239,-13,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
28 1 2 7 73 1 1 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 0 0 3 83 0 3 3 12 67 0 6 6 1 83 5 4 2 1 1 13 67 0 7 7 1 83 5 4 2 1 1 13 67 0 2 2 1 83 5 4 2 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 0 3 83 0 3 3 12 67 0 7 7 1 83 4 1 1 1 13 67 0 2 2 1 83 4 1 1 1 13 67 0 6 6 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 0 0 3 83 0 3 3 14 67 0 7 7 1 83 4 1 1 1 13 67 0 2 2 1 83 4 1 1 1 13 67 0 6 6 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
98 96 89 87 77 75 69 67 44 42 36 121 34 8 18
CALL[ ]	/* CallFunction */";
};
width = 584;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(271,-11,o),
(283,9,o),
(284,50,c),
(306,17,o),
(365,0,o),
(409,0,cs),
(461,0,o),
(572,26,o),
(572,114,cs),
(572,195,o),
(477,257,o),
(412,292,cs),
(353,323,o),
(294,368,o),
(294,432,cs),
(294,512,o),
(439,576,o),
(439,698,cs),
(439,737,o),
(401,825,o),
(302,825,cs),
(193,825,o),
(136,761,o),
(111,698,cs),
(79,621,o),
(76,549,o),
(76,491,cs),
(76,419,o),
(78,333,o),
(78,263,cs),
(78,189,o),
(77,151,o),
(73,65,cs),
(72,44,o),
(61,44,o),
(29,44,cs),
(14,44,o),
(-8,42,o),
(-8,22,cs),
(-8,5,o),
(12,0,o),
(31,0,cs),
(31,0,o),
(87,3,o),
(123,3,cs),
(136,3,o),
(149,7,o),
(149,30,cs),
(149,484,ls),
(149,534,o),
(148,596,o),
(169,662,cs),
(187,722,o),
(228,769,o),
(307,769,cs),
(350,769,o),
(368,732,o),
(368,700,cs),
(368,640,o),
(334,594,o),
(295,555,cs),
(257,517,o),
(221,476,o),
(221,429,cs),
(221,336,o),
(315,279,o),
(356,257,cs),
(445,206,o),
(499,166,o),
(499,123,cs),
(499,84,o),
(463,60,o),
(412,60,cs),
(361,60,o),
(312,78,o),
(289,118,cs),
(285,125,o),
(284,130,o),
(281,141,cs),
(276,166,o),
(264,179,o),
(244,179,cs),
(231,179,o),
(220,167,o),
(220,148,cs),
(220,134,o),
(221,120,o),
(223,107,cs),
(224,93,o),
(225,80,o),
(225,67,cs),
(225,58,o),
(225,49,o),
(224,40,cs),
(223,31,o),
(222,23,o),
(222,16,cs),
(222,1,o),
(236,-11,o),
(247,-11,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
75 1 2 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 0 3 83 0 3 3 12 67 0 7 7 1 83 4 1 1 1 13 67 0 2 2 1 83 4 1 1 1 13 67 0 6 6 5 83 0 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 0 0 3 83 0 3 3 14 67 0 7 7 1 83 4 1 1 1 13 67 0 2 2 1 83 4 1 1 1 13 67 0 6 6 5 83 0 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
98 96 90 88 78 76 71 69 46 44 36 121 34 8 18
CALL[ ]	/* CallFunction */";
};
width = 583;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(264,-7,o),
(269,-3,o),
(272,6,cs),
(275,14,o),
(277,29,o),
(278,50,c),
(300,17,o),
(359,0,o),
(403,0,cs),
(455,0,o),
(566,26,o),
(566,114,cs),
(566,195,o),
(471,257,o),
(406,292,cs),
(347,323,o),
(288,368,o),
(288,432,cs),
(288,512,o),
(433,576,o),
(433,698,cs),
(433,737,o),
(395,825,o),
(296,825,cs),
(209,825,o),
(157,772,o),
(130,698,cs),
(103,624,o),
(100,544,o),
(100,491,cs),
(100,419,o),
(102,333,o),
(102,263,cs),
(102,190,o),
(101,139,o),
(97,45,cs),
(96,38,o),
(91,33,o),
(80,31,cs),
(69,28,o),
(50,26,o),
(23,24,cs),
(8,23,o),
(-9,22,o),
(-9,11,cs),
(-9,6,o),
(-6,3,o),
(1,2,cs),
(8,1,o),
(16,0,o),
(25,0,cs),
(25,0,o),
(81,3,o),
(117,3,cs),
(130,3,o),
(143,7,o),
(143,30,cs),
(143,484,ls),
(143,539,o),
(142,609,o),
(163,681,cs),
(182,750,o),
(224,799,o),
(301,799,cs),
(358,799,o),
(392,747,o),
(392,700,cs),
(392,640,o),
(358,594,o),
(319,555,cs),
(281,517,o),
(245,476,o),
(245,429,cs),
(245,336,o),
(339,279,o),
(380,257,cs),
(468,206,o),
(523,172,o),
(523,102,cs),
(523,55,o),
(474,30,o),
(406,30,cs),
(355,30,o),
(310,45,o),
(289,88,cs),
(281,104,o),
(279,120,o),
(275,141,cs),
(272,154,o),
(270,163,o),
(268,168,cs),
(266,173,o),
(262,175,o),
(257,175,cs),
(246,175,o),
(244,167,o),
(244,148,cs),
(244,134,o),
(245,120,o),
(247,107,cs),
(248,93,o),
(249,80,o),
(249,67,cs),
(249,58,o),
(249,49,o),
(248,40,cs),
(247,31,o),
(246,23,o),
(246,16,cs),
(246,1,o),
(250,-7,o),
(258,-7,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
77 30 2 6 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 2 83 0 2 2 12 67 0 6 6 1 83 3 1 1 1 13 67 0 5 5 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 2 83 0 2 2 12 67 0 6 6 1 83 3 1 1 1 13 67 0 5 5 4 83 0 4 4 16 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 2 83 0 2 2 12 67 0 6 6 1 83 3 1 1 1 13 67 0 5 5 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 2 83 0 2 2 14 67 0 6 6 1 83 3 1 1 1 13 67 0 5 5 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
101 99 92 90 81 79 73 71 48 46 121 36 7 17
CALL[ ]	/* CallFunction */";
};
width = 581;
}
);
note = germandbls;
unicode = 223;
},
{
glyphname = t;
kernLeft = t;
kernRight = c_t;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(308,-11,o),
(356,44,o),
(356,114,cs),
(356,137,o),
(347,150,o),
(323,150,cs),
(300,150,o),
(289,144,o),
(284,121,cs),
(273,78,o),
(265,67,o),
(236,67,cs),
(221,67,o),
(211,73,o),
(204,85,cs),
(197,96,o),
(194,119,o),
(194,152,cs),
(194,394,l),
(213,395,o),
(234,397,o),
(255,398,cs),
(276,399,o),
(297,401,o),
(318,402,cs),
(331,403,o),
(352,414,o),
(352,439,cs),
(352,467,o),
(325,478,o),
(309,478,cs),
(290,478,o),
(211,474,o),
(194,474,c),
(194,575,ls),
(194,615,o),
(172,621,o),
(151,621,cs),
(135,621,o),
(123,611,o),
(116,590,cs),
(112,579,o),
(110,566,o),
(109,549,cs),
(108,532,o),
(106,516,o),
(105,500,cs),
(104,480,o),
(94,475,o),
(74,472,cs),
(23,465,ls),
(3,462,o),
(-18,455,o),
(-18,430,cs),
(-18,397,o),
(1,390,o),
(18,390,cs),
(30,390,o),
(44,390,o),
(60,391,cs),
(76,392,o),
(90,392,o),
(103,392,c),
(103,165,l),
(103,130,o),
(102,70,o),
(129,30,cs),
(147,3,o),
(177,-11,o),
(219,-11,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
13 1 2 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 3 1 0 0 2 83 0 2 2 23 67 0 4 4 6 84 0 6 6 24 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 91 0 4 4 6 84 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 1 2 1 106 0 0 3 5 3 0 5 104 0 5 4 3 5 4 102 0 2 0 3 0 2 3 89 0 4 4 6 84 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 36 35 53 99 45 64 7 22
CALL[ ]	/* CallFunction */";
};
width = 366;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(309,-11,o),
(349,80,o),
(349,117,cs),
(349,124,o),
(344,147,o),
(324,147,cs),
(292,147,o),
(290,124,o),
(282,102,cs),
(274,80,o),
(261,49,o),
(221,49,cs),
(175,49,o),
(167,107,o),
(167,152,cs),
(167,406,l),
(190,407,o),
(214,408,o),
(239,409,cs),
(264,410,o),
(288,411,o),
(312,414,c),
(324,417,o),
(339,424,o),
(339,443,cs),
(339,464,o),
(319,472,o),
(303,472,cs),
(285,472,o),
(192,468,o),
(167,468,c),
(167,575,ls),
(167,615,o),
(151,618,o),
(134,618,cs),
(131,618,o),
(125,617,o),
(118,614,cs),
(111,611,o),
(105,603,o),
(102,590,cs),
(95,563,o),
(96,528,o),
(96,500,cs),
(96,477,o),
(95,469,o),
(68,466,cs),
(17,461,ls),
(-2,458,o),
(-17,451,o),
(-17,432,cs),
(-17,408,o),
(4,402,o),
(12,402,cs),
(24,402,o),
(38,402,o),
(54,403,cs),
(70,404,o),
(84,404,o),
(97,404,c),
(97,165,l),
(97,134,o),
(95,72,o),
(123,30,cs),
(141,3,o),
(169,-11,o),
(207,-11,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 3 1 0 0 2 83 0 2 2 23 67 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 91 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 1 2 1 106 0 0 3 5 3 0 5 104 0 5 4 3 5 4 102 0 2 0 3 0 2 3 91 0 4 4 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
40 40 37 38 99 46 64 7 22
CALL[ ]	/* CallFunction */";
};
width = 359;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(301,-11,o),
(341,80,o),
(341,117,cs),
(341,124,o),
(341,137,o),
(326,137,cs),
(311,137,o),
(311,123,o),
(304,102,cs),
(293,64,o),
(263,19,o),
(206,19,cs),
(128,19,o),
(129,98,o),
(129,152,cs),
(129,426,l),
(156,427,o),
(185,428,o),
(215,429,cs),
(245,430,o),
(275,431,o),
(304,434,cs),
(316,435,o),
(321,442,o),
(321,449,cs),
(321,458,o),
(312,462,o),
(295,462,cs),
(275,462,o),
(151,458,o),
(129,458,c),
(129,575,ls),
(129,595,o),
(128,607,o),
(125,612,cs),
(122,616,o),
(118,618,o),
(113,618,cs),
(110,618,o),
(107,617,o),
(104,614,cs),
(101,611,o),
(98,603,o),
(95,590,cs),
(88,563,o),
(88,528,o),
(88,500,cs),
(88,471,o),
(87,459,o),
(60,456,cs),
(9,450,ls),
(0,449,o),
(-7,447,o),
(-10,445,cs),
(-13,442,o),
(-15,439,o),
(-15,436,cs),
(-15,425,o),
(-4,422,o),
(4,422,cs),
(16,422,o),
(30,422,o),
(46,423,cs),
(62,424,o),
(76,424,o),
(89,424,c),
(89,165,ls),
(89,134,o),
(87,72,o),
(115,30,cs),
(133,3,o),
(161,-11,o),
(199,-11,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 3 1 0 0 2 83 0 2 2 23 67 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 91 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 1 2 1 106 0 0 3 5 3 0 5 104 0 5 4 3 5 4 102 0 2 0 3 0 2 3 91 0 4 4 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 38 37 37 99 46 64 7 22
CALL[ ]	/* CallFunction */";
};
width = 349;
}
);
note = t;
unicode = 116;
},
{
glyphname = tbar;
kernLeft = t;
kernRight = c_t;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(313,-11,o),
(361,44,o),
(361,114,cs),
(361,137,o),
(352,150,o),
(328,150,cs),
(305,150,o),
(294,144,o),
(289,121,cs),
(278,78,o),
(270,67,o),
(241,67,cs),
(226,67,o),
(216,73,o),
(209,85,cs),
(202,96,o),
(199,119,o),
(199,152,cs),
(199,228,l),
(224,228,o),
(248,228,o),
(269,229,cs),
(290,229,o),
(306,229,o),
(317,229,cs),
(345,229,o),
(353,250,o),
(353,273,cs),
(353,296,o),
(338,312,o),
(325,312,cs),
(314,312,o),
(296,312,o),
(272,311,cs),
(248,310,o),
(224,310,o),
(199,309,c),
(199,394,l),
(218,395,o),
(239,397,o),
(260,398,cs),
(281,399,o),
(302,401,o),
(323,402,cs),
(336,403,o),
(357,414,o),
(357,439,cs),
(357,467,o),
(330,478,o),
(314,478,cs),
(295,478,o),
(216,474,o),
(199,474,c),
(199,575,ls),
(199,615,o),
(177,621,o),
(156,621,cs),
(140,621,o),
(128,611,o),
(121,590,cs),
(117,579,o),
(115,566,o),
(114,549,cs),
(113,532,o),
(111,516,o),
(110,500,cs),
(109,480,o),
(99,475,o),
(79,472,cs),
(28,465,ls),
(8,462,o),
(-13,455,o),
(-13,430,cs),
(-13,397,o),
(6,390,o),
(23,390,cs),
(35,390,o),
(49,390,o),
(65,391,cs),
(81,392,o),
(95,392,o),
(108,392,c),
(108,309,l),
(75,310,o),
(38,311,o),
(25,311,cs),
(14,311,o),
(-8,293,o),
(-8,270,cs),
(-8,248,o),
(15,228,o),
(25,228,cs),
(106,228,l),
(106,165,l),
(106,165,l),
(106,130,o),
(107,70,o),
(134,30,cs),
(152,3,o),
(182,-11,o),
(224,-11,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
26 1 4 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 3 4 3 106 0 9 0 8 0 9 8 104 6 1 1 7 1 0 9 1 0 91 5 1 2 2 4 83 0 4 4 23 67 0 8 8 10 84 0 10 10 24 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 3 4 3 106 0 9 0 8 0 9 8 104 0 4 5 1 2 1 4 2 91 6 1 1 7 1 0 9 1 0 91 0 8 8 10 84 0 10 10 24 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 3 4 3 106 0 2 5 1 5 2 1 104 0 9 0 8 0 9 8 104 0 4 0 5 2 4 5 89 6 1 1 7 1 0 9 1 0 91 0 8 8 10 84 0 10 10 24 10 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
81 79 73 71 35 68 65 53 99 45 65 70 32 11 24
CALL[ ]	/* CallFunction */";
};
width = 373;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(315,-11,o),
(355,80,o),
(355,117,cs),
(355,124,o),
(350,147,o),
(330,147,cs),
(298,147,o),
(296,124,o),
(288,102,cs),
(280,80,o),
(267,49,o),
(227,49,cs),
(181,49,o),
(173,107,o),
(173,152,cs),
(173,406,l),
(196,407,o),
(220,408,o),
(245,409,cs),
(270,410,o),
(294,411,o),
(318,414,c),
(330,417,o),
(345,424,o),
(345,443,cs),
(345,464,o),
(325,472,o),
(309,472,cs),
(291,472,o),
(198,468,o),
(173,468,c),
(173,575,ls),
(173,615,o),
(157,618,o),
(140,618,cs),
(137,618,o),
(131,617,o),
(124,614,cs),
(117,611,o),
(111,603,o),
(108,590,cs),
(101,563,o),
(102,528,o),
(102,500,cs),
(102,477,o),
(101,469,o),
(74,466,cs),
(23,461,ls),
(4,458,o),
(-11,451,o),
(-11,432,cs),
(-11,408,o),
(10,402,o),
(18,402,cs),
(30,402,o),
(44,402,o),
(60,403,cs),
(76,404,o),
(90,404,o),
(103,404,c),
(101,165,l),
(101,165,l),
(101,134,o),
(101,72,o),
(129,30,cs),
(147,3,o),
(175,-11,o),
(213,-11,cs)
);
},
{
closed = 1;
nodes = (
(103,237,o),
(224,238,o),
(311,238,cs),
(334,238,o),
(340,257,o),
(340,273,cs),
(340,290,o),
(330,303,o),
(319,303,cs),
(313,303,o),
(213,300,o),
(140,300,cs),
(98,300,o),
(49,302,o),
(19,302,cs),
(8,302,o),
(-7,287,o),
(-7,270,cs),
(-7,253,o),
(10,237,o),
(19,237,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 4 3 106 0 7 1 6 1 7 6 104 9 1 0 0 1 7 0 1 92 5 1 2 2 4 83 0 4 4 23 67 0 6 6 8 83 0 8 8 24 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 3 4 3 106 0 7 1 6 1 7 6 104 0 4 5 1 2 0 4 2 91 9 1 0 0 1 7 0 1 92 0 6 6 8 83 0 8 8 24 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 3 4 3 106 0 2 5 0 5 2 0 104 0 7 1 6 1 7 6 104 0 4 0 5 2 4 5 91 9 1 0 0 1 7 0 1 92 0 6 6 8 83 0 8 8 24 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
1 0 91 89 81 79 71 69 64 62 56 50 47 45 31 27 12 5 0 26 1 16 10 15
CALL[ ]	/* CallFunction */";
};
width = 366;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(307,-11,o),
(347,80,o),
(347,117,cs),
(347,124,o),
(347,137,o),
(332,137,cs),
(317,137,o),
(317,123,o),
(310,102,cs),
(299,64,o),
(269,19,o),
(212,19,cs),
(134,19,o),
(135,98,o),
(135,152,cs),
(135,252,l),
(168,252,o),
(201,252,o),
(233,253,cs),
(264,253,o),
(288,253,o),
(303,253,cs),
(318,253,o),
(322,266,o),
(322,273,cs),
(322,280,o),
(316,288,o),
(311,288,cs),
(305,288,o),
(206,285,o),
(135,285,c),
(135,426,l),
(162,427,o),
(191,428,o),
(221,429,cs),
(251,430,o),
(281,431,o),
(310,434,cs),
(322,435,o),
(327,442,o),
(327,449,cs),
(327,458,o),
(318,462,o),
(301,462,cs),
(281,462,o),
(157,458,o),
(135,458,c),
(135,575,ls),
(135,595,o),
(134,607,o),
(131,612,cs),
(128,616,o),
(124,618,o),
(119,618,cs),
(116,618,o),
(113,617,o),
(110,614,cs),
(107,611,o),
(104,603,o),
(101,590,cs),
(94,563,o),
(94,528,o),
(94,500,cs),
(94,471,o),
(93,459,o),
(66,456,cs),
(15,450,ls),
(6,449,o),
(-1,447,o),
(-4,445,cs),
(-7,442,o),
(-9,439,o),
(-9,436,cs),
(-9,425,o),
(2,422,o),
(10,422,cs),
(22,422,o),
(36,422,o),
(52,423,cs),
(67,424,o),
(81,424,o),
(94,424,c),
(94,285,l),
(61,286,o),
(24,287,o),
(11,287,cs),
(0,287,o),
(-5,277,o),
(-5,270,cs),
(-5,263,o),
(2,252,o),
(11,252,cs),
(93,252,l),
(93,165,ls),
(93,134,o),
(93,72,o),
(121,30,cs),
(139,3,o),
(167,-11,o),
(205,-11,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 3 4 3 106 0 9 0 8 0 9 8 104 6 1 1 7 1 0 9 1 0 91 5 1 2 2 4 83 0 4 4 23 67 0 8 8 10 83 0 10 10 24 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 3 4 3 106 0 9 0 8 0 9 8 104 0 4 5 1 2 1 4 2 91 6 1 1 7 1 0 9 1 0 91 0 8 8 10 83 0 10 10 24 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 3 4 3 106 0 2 5 1 5 2 1 104 0 9 0 8 0 9 8 104 0 4 0 5 2 4 5 91 6 1 1 7 1 0 9 1 0 91 0 8 8 10 83 0 10 10 24 10 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
85 83 77 75 37 68 97 37 99 46 65 68 32 11 24
CALL[ ]	/* CallFunction */";
};
width = 356;
}
);
note = tbar;
unicode = 359;
},
{
glyphname = tcaron;
kernLeft = t;
kernRight = c_t;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(308,-11,o),
(356,44,o),
(356,114,cs),
(356,137,o),
(347,150,o),
(323,150,cs),
(300,150,o),
(289,144,o),
(284,121,cs),
(273,78,o),
(265,67,o),
(236,67,cs),
(221,67,o),
(211,73,o),
(204,85,cs),
(197,96,o),
(194,119,o),
(194,152,cs),
(194,394,l),
(213,395,o),
(234,397,o),
(255,398,cs),
(276,399,o),
(297,401,o),
(318,402,cs),
(331,403,o),
(352,414,o),
(352,439,cs),
(352,467,o),
(325,478,o),
(309,478,cs),
(290,478,o),
(211,474,o),
(194,474,c),
(194,575,ls),
(194,615,o),
(172,621,o),
(151,621,cs),
(135,621,o),
(123,611,o),
(116,590,cs),
(112,579,o),
(110,566,o),
(109,549,cs),
(108,532,o),
(106,516,o),
(105,500,cs),
(104,480,o),
(94,475,o),
(74,472,cs),
(23,465,ls),
(3,462,o),
(-18,455,o),
(-18,430,cs),
(-18,397,o),
(1,390,o),
(18,390,cs),
(30,390,o),
(44,390,o),
(60,391,cs),
(76,392,o),
(90,392,o),
(103,392,c),
(103,165,l),
(103,130,o),
(102,70,o),
(129,30,cs),
(147,3,o),
(177,-11,o),
(219,-11,cs)
);
},
{
closed = 1;
nodes = (
(286,494,o),
(349,536,o),
(349,613,cs),
(349,670,o),
(313,694,o),
(281,694,cs),
(237,694,o),
(221,664,o),
(221,636,cs),
(221,605,o),
(257,603,o),
(257,586,cs),
(257,566,o),
(255,551,o),
(250,542,cs),
(245,532,o),
(242,524,o),
(242,517,cs),
(242,494,o),
(261,494,o),
(268,494,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
35 1 1 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 3 0 106 0 3 1 3 106 0 1 4 1 106 0 7 2 6 2 7 6 104 5 1 2 2 4 83 0 4 4 23 67 0 6 6 8 84 0 8 8 24 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 3 0 106 0 3 1 3 106 0 1 4 1 106 0 7 2 6 2 7 6 104 0 4 5 1 2 7 4 2 92 0 6 6 8 84 0 8 8 24 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 0 3 0 106 0 3 1 3 106 0 1 4 1 106 0 2 5 7 5 2 7 104 0 7 6 5 7 6 102 0 4 0 5 2 4 5 90 0 6 6 8 84 0 8 8 24 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 36 35 53 99 45 74 38 34 9 24
CALL[ ]	/* CallFunction */";
};
width = 366;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(309,-11,o),
(349,80,o),
(349,117,cs),
(349,124,o),
(344,147,o),
(324,147,cs),
(292,147,o),
(290,124,o),
(282,102,cs),
(274,80,o),
(261,49,o),
(221,49,cs),
(175,49,o),
(167,107,o),
(167,152,cs),
(167,406,l),
(190,407,o),
(214,408,o),
(239,409,cs),
(264,410,o),
(288,411,o),
(312,414,c),
(324,417,o),
(339,424,o),
(339,443,cs),
(339,464,o),
(319,472,o),
(303,472,cs),
(285,472,o),
(192,468,o),
(167,468,c),
(167,575,ls),
(167,615,o),
(151,618,o),
(134,618,cs),
(131,618,o),
(125,617,o),
(118,614,cs),
(111,611,o),
(105,603,o),
(102,590,cs),
(95,563,o),
(96,528,o),
(96,500,cs),
(96,477,o),
(95,469,o),
(68,466,cs),
(17,461,ls),
(-2,458,o),
(-17,451,o),
(-17,432,cs),
(-17,408,o),
(4,402,o),
(12,402,cs),
(24,402,o),
(38,402,o),
(54,403,cs),
(70,404,o),
(84,404,o),
(97,404,c),
(97,165,l),
(97,134,o),
(95,72,o),
(123,30,cs),
(141,3,o),
(169,-11,o),
(207,-11,cs)
);
},
{
closed = 1;
nodes = (
(259,499,o),
(300,549,o),
(300,603,cs),
(300,656,o),
(270,675,o),
(243,675,cs),
(206,675,o),
(191,650,o),
(191,626,cs),
(191,594,o),
(227,595,o),
(227,578,cs),
(227,561,o),
(225,548,o),
(221,540,cs),
(216,531,o),
(214,524,o),
(214,518,cs),
(214,501,o),
(228,499,o),
(235,499,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 7 1 7 106 0 1 8 1 106 0 8 2 8 106 0 5 0 4 0 5 4 104 3 1 0 0 2 83 0 2 2 23 67 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 7 1 7 106 0 1 8 1 106 0 8 2 8 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 92 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 7 1 7 106 0 1 8 1 106 0 8 2 8 106 0 0 3 5 3 0 5 104 0 5 4 3 5 4 102 0 2 0 3 0 2 3 92 0 4 4 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 41 40 40 37 38 99 46 65 9 35
CALL[ ]	/* CallFunction */";
};
width = 359;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(301,-11,o),
(341,80,o),
(341,117,cs),
(341,124,o),
(341,137,o),
(326,137,cs),
(311,137,o),
(311,123,o),
(304,102,cs),
(293,64,o),
(263,19,o),
(206,19,cs),
(128,19,o),
(129,98,o),
(129,152,cs),
(129,426,l),
(156,427,o),
(185,428,o),
(215,429,cs),
(245,430,o),
(275,431,o),
(304,434,cs),
(316,435,o),
(321,442,o),
(321,449,cs),
(321,458,o),
(312,462,o),
(295,462,cs),
(275,462,o),
(151,458,o),
(129,458,c),
(129,575,ls),
(129,595,o),
(128,607,o),
(125,612,cs),
(122,616,o),
(118,618,o),
(113,618,cs),
(110,618,o),
(107,617,o),
(104,614,cs),
(101,611,o),
(98,603,o),
(95,590,cs),
(88,563,o),
(88,528,o),
(88,500,cs),
(88,471,o),
(87,459,o),
(60,456,cs),
(9,450,ls),
(0,449,o),
(-7,447,o),
(-10,445,cs),
(-13,442,o),
(-15,439,o),
(-15,436,cs),
(-15,425,o),
(-4,422,o),
(4,422,cs),
(16,422,o),
(30,422,o),
(46,423,cs),
(62,424,o),
(76,424,o),
(89,424,c),
(89,164,ls),
(89,133,o),
(87,72,o),
(115,30,cs),
(133,3,o),
(161,-11,o),
(199,-11,cs)
);
},
{
closed = 1;
nodes = (
(259,510,o),
(279,577,o),
(279,601,cs),
(279,628,o),
(262,645,o),
(237,645,cs),
(216,645,o),
(201,630,o),
(201,611,cs),
(201,588,o),
(227,579,o),
(227,567,cs),
(227,560,o),
(224,552,o),
(218,545,cs),
(211,537,o),
(208,530,o),
(208,525,cs),
(208,517,o),
(217,510,o),
(224,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 7 1 7 106 0 1 8 1 106 0 8 2 8 106 0 5 0 4 0 5 4 104 3 1 0 0 2 83 0 2 2 23 67 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 7 1 7 106 0 1 8 1 106 0 8 2 8 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 92 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 7 1 7 106 0 1 8 1 106 0 8 2 8 106 0 0 3 5 3 0 5 104 0 5 4 3 5 4 102 0 2 0 3 0 2 3 92 0 4 4 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 41 38 38 37 37 99 46 64 9 24
CALL[ ]	/* CallFunction */";
};
width = 349;
}
);
note = tcaron;
unicode = 357;
},
{
glyphname = tcedilla;
kernLeft = t;
kernRight = c_t;
lastChange = "2024-06-14 09:01:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(308,-11,o),
(356,44,o),
(356,114,cs),
(356,137,o),
(347,150,o),
(323,150,cs),
(300,150,o),
(289,144,o),
(284,121,cs),
(273,78,o),
(265,67,o),
(236,67,cs),
(221,67,o),
(211,73,o),
(204,85,cs),
(197,96,o),
(194,119,o),
(194,152,cs),
(194,394,l),
(213,395,o),
(234,397,o),
(255,398,cs),
(276,399,o),
(297,401,o),
(318,402,cs),
(331,403,o),
(352,414,o),
(352,439,cs),
(352,467,o),
(325,478,o),
(309,478,cs),
(290,478,o),
(211,474,o),
(194,474,c),
(194,575,ls),
(194,615,o),
(172,621,o),
(151,621,cs),
(135,621,o),
(123,611,o),
(116,590,cs),
(112,579,o),
(110,566,o),
(109,549,cs),
(108,532,o),
(106,516,o),
(105,500,cs),
(104,480,o),
(94,475,o),
(74,472,cs),
(23,465,ls),
(3,462,o),
(-18,455,o),
(-18,430,cs),
(-18,397,o),
(1,390,o),
(18,390,cs),
(30,390,o),
(44,390,o),
(60,391,cs),
(76,392,o),
(90,392,o),
(103,392,c),
(103,165,l),
(103,130,o),
(102,70,o),
(129,30,cs),
(147,3,o),
(177,-11,o),
(219,-11,cs)
);
},
{
closed = 1;
nodes = (
(211,-245,o),
(274,-203,o),
(274,-126,cs),
(274,-69,o),
(238,-45,o),
(206,-45,cs),
(162,-45,o),
(146,-75,o),
(146,-103,cs),
(146,-134,o),
(182,-136,o),
(182,-153,cs),
(182,-173,o),
(180,-188,o),
(175,-197,cs),
(170,-207,o),
(167,-215,o),
(167,-222,cs),
(167,-245,o),
(186,-245,o),
(193,-245,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
35 1 4 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 3 4 3 106 0 7 2 6 2 7 6 104 5 1 2 2 4 83 0 4 4 23 67 0 6 6 8 84 0 8 8 24 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 3 4 3 106 0 7 2 6 2 7 6 104 0 4 5 1 2 7 4 2 91 0 0 0 1 0 1 87 0 6 6 8 84 0 8 8 24 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 3 4 3 106 0 2 5 7 5 2 7 104 0 7 6 5 7 6 102 0 4 0 5 2 4 5 89 0 0 0 1 0 1 87 0 6 6 8 84 0 8 8 24 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 36 35 53 99 45 74 38 34 9 24
CALL[ ]	/* CallFunction */";
};
width = 366;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(309,-11,o),
(349,80,o),
(349,117,cs),
(349,124,o),
(344,147,o),
(324,147,cs),
(292,147,o),
(290,124,o),
(282,102,cs),
(274,80,o),
(261,49,o),
(221,49,cs),
(175,49,o),
(167,107,o),
(167,152,cs),
(167,406,l),
(190,407,o),
(214,408,o),
(239,409,cs),
(264,410,o),
(288,411,o),
(312,414,c),
(324,417,o),
(339,424,o),
(339,443,cs),
(339,464,o),
(319,472,o),
(303,472,cs),
(285,472,o),
(192,468,o),
(167,468,c),
(167,575,ls),
(167,615,o),
(151,618,o),
(134,618,cs),
(131,618,o),
(125,617,o),
(118,614,cs),
(111,611,o),
(105,603,o),
(102,590,cs),
(95,563,o),
(96,528,o),
(96,500,cs),
(96,477,o),
(95,469,o),
(68,466,cs),
(17,461,ls),
(-2,458,o),
(-17,451,o),
(-17,432,cs),
(-17,408,o),
(4,402,o),
(12,402,cs),
(24,402,o),
(38,402,o),
(54,403,cs),
(70,404,o),
(84,404,o),
(97,404,c),
(97,165,l),
(97,134,o),
(95,72,o),
(123,30,cs),
(141,3,o),
(169,-11,o),
(207,-11,cs)
);
},
{
closed = 1;
nodes = (
(218,-228,o),
(259,-178,o),
(259,-124,cs),
(259,-71,o),
(229,-52,o),
(202,-52,cs),
(165,-52,o),
(150,-77,o),
(150,-101,cs),
(150,-133,o),
(186,-132,o),
(186,-149,cs),
(186,-166,o),
(184,-179,o),
(180,-187,cs),
(175,-196,o),
(173,-203,o),
(173,-209,cs),
(173,-226,o),
(187,-228,o),
(194,-228,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 3 1 0 0 2 83 0 2 2 23 67 0 4 4 6 83 0 6 6 24 67 0 7 7 8 83 0 8 8 25 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 91 0 4 4 6 83 0 6 6 24 67 0 7 7 8 83 0 8 8 25 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 91 0 7 0 8 7 8 87 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 1 2 1 106 0 0 3 5 3 0 5 104 0 5 4 3 5 4 102 0 2 0 3 0 2 3 91 0 7 0 8 7 8 87 0 4 4 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 41 40 40 37 38 99 46 65 9 35
CALL[ ]	/* CallFunction */";
};
width = 359;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(301,-11,o),
(341,80,o),
(341,117,cs),
(341,124,o),
(341,137,o),
(326,137,cs),
(311,137,o),
(311,123,o),
(304,102,cs),
(293,64,o),
(263,19,o),
(206,19,cs),
(128,19,o),
(129,98,o),
(129,152,cs),
(129,426,l),
(156,427,o),
(185,428,o),
(215,429,cs),
(245,430,o),
(275,431,o),
(304,434,cs),
(316,435,o),
(321,442,o),
(321,449,cs),
(321,458,o),
(312,462,o),
(295,462,cs),
(275,462,o),
(151,458,o),
(129,458,c),
(129,575,ls),
(129,595,o),
(128,607,o),
(125,612,cs),
(122,616,o),
(118,618,o),
(113,618,cs),
(110,618,o),
(107,617,o),
(104,614,cs),
(101,611,o),
(98,603,o),
(95,590,cs),
(88,563,o),
(88,528,o),
(88,500,cs),
(88,471,o),
(87,459,o),
(60,456,cs),
(9,450,ls),
(0,449,o),
(-7,447,o),
(-10,445,cs),
(-13,442,o),
(-15,439,o),
(-15,436,cs),
(-15,425,o),
(-4,422,o),
(4,422,cs),
(16,422,o),
(30,422,o),
(46,423,cs),
(62,424,o),
(76,424,o),
(89,424,c),
(89,165,ls),
(89,134,o),
(87,72,o),
(115,30,cs),
(133,3,o),
(161,-11,o),
(199,-11,cs)
);
},
{
closed = 1;
nodes = (
(223,-203,o),
(239,-153,o),
(239,-124,cs),
(239,-79,o),
(217,-67,o),
(197,-67,cs),
(170,-67,o),
(157,-84,o),
(157,-101,cs),
(157,-133,o),
(193,-128,o),
(193,-145,cs),
(193,-152,o),
(191,-160,o),
(188,-169,cs),
(184,-179,o),
(182,-186,o),
(182,-191,cs),
(182,-198,o),
(189,-203,o),
(196,-203,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 3 1 0 0 2 83 0 2 2 23 67 0 4 4 6 83 0 6 6 24 67 0 7 7 8 83 0 8 8 17 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 91 0 4 4 6 83 0 6 6 24 67 0 7 7 8 83 0 8 8 17 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 91 0 7 0 8 7 8 87 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 1 2 1 106 0 0 3 5 3 0 5 104 0 5 4 3 5 4 102 0 2 0 3 0 2 3 91 0 7 0 8 7 8 87 0 4 4 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 41 38 38 37 37 99 46 64 9 24
CALL[ ]	/* CallFunction */";
};
width = 349;
}
);
note = uni0163;
unicode = 355;
},
{
glyphname = tcommaaccent;
kernLeft = t;
kernRight = c_t;
lastChange = "2024-06-14 09:01:26 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(307,-11,o),
(355,44,o),
(355,114,cs),
(355,137,o),
(346,150,o),
(322,150,cs),
(299,150,o),
(288,144,o),
(283,121,cs),
(272,78,o),
(264,67,o),
(235,67,cs),
(220,67,o),
(210,73,o),
(203,85,cs),
(196,96,o),
(193,119,o),
(193,152,cs),
(193,394,l),
(212,395,o),
(233,397,o),
(254,398,cs),
(275,399,o),
(296,401,o),
(317,402,cs),
(330,403,o),
(351,414,o),
(351,439,cs),
(351,467,o),
(324,478,o),
(308,478,cs),
(289,478,o),
(210,474,o),
(193,474,c),
(193,575,ls),
(193,615,o),
(171,621,o),
(150,621,cs),
(134,621,o),
(122,611,o),
(115,590,cs),
(111,579,o),
(109,566,o),
(108,549,cs),
(107,532,o),
(105,516,o),
(104,500,cs),
(103,480,o),
(93,475,o),
(73,472,cs),
(22,465,ls),
(2,462,o),
(-19,455,o),
(-19,430,cs),
(-19,397,o),
(0,390,o),
(17,390,cs),
(29,390,o),
(43,390,o),
(59,391,cs),
(75,392,o),
(89,392,o),
(102,392,c),
(102,165,l),
(102,130,o),
(101,70,o),
(128,30,cs),
(146,3,o),
(176,-11,o),
(218,-11,cs)
);
},
{
closed = 1;
nodes = (
(213,-240,o),
(276,-198,o),
(276,-121,cs),
(276,-64,o),
(240,-40,o),
(208,-40,cs),
(164,-40,o),
(148,-70,o),
(148,-98,cs),
(148,-129,o),
(184,-131,o),
(184,-148,cs),
(184,-168,o),
(182,-183,o),
(177,-192,cs),
(172,-202,o),
(169,-210,o),
(169,-217,cs),
(169,-240,o),
(188,-240,o),
(195,-240,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
35 1 4 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 3 4 3 106 0 7 2 6 2 7 6 104 5 1 2 2 4 83 0 4 4 23 67 0 6 6 8 84 0 8 8 24 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 3 4 3 106 0 7 2 6 2 7 6 104 0 4 5 1 2 7 4 2 91 0 0 0 1 0 1 87 0 6 6 8 84 0 8 8 24 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 3 4 3 106 0 2 5 7 5 2 7 104 0 7 6 5 7 6 102 0 4 0 5 2 4 5 89 0 0 0 1 0 1 87 0 6 6 8 84 0 8 8 24 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 36 35 53 99 45 74 38 34 9 24
CALL[ ]	/* CallFunction */";
};
width = 366;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(309,-11,o),
(349,80,o),
(349,117,cs),
(349,124,o),
(344,147,o),
(324,147,cs),
(292,147,o),
(290,124,o),
(282,102,cs),
(274,80,o),
(261,49,o),
(221,49,cs),
(175,49,o),
(167,107,o),
(167,152,cs),
(167,406,l),
(190,407,o),
(214,408,o),
(239,409,cs),
(264,410,o),
(288,411,o),
(312,414,c),
(324,417,o),
(339,424,o),
(339,443,cs),
(339,464,o),
(319,472,o),
(303,472,cs),
(285,472,o),
(192,468,o),
(167,468,c),
(167,575,ls),
(167,615,o),
(151,618,o),
(134,618,cs),
(131,618,o),
(125,617,o),
(118,614,cs),
(111,611,o),
(105,603,o),
(102,590,cs),
(95,563,o),
(96,528,o),
(96,500,cs),
(96,477,o),
(95,469,o),
(68,466,cs),
(17,461,ls),
(-2,458,o),
(-17,451,o),
(-17,432,cs),
(-17,408,o),
(4,402,o),
(12,402,cs),
(24,402,o),
(38,402,o),
(54,403,cs),
(70,404,o),
(84,404,o),
(97,404,c),
(97,165,l),
(97,134,o),
(96,72,o),
(123,30,cs),
(141,3,o),
(169,-11,o),
(207,-11,cs)
);
},
{
closed = 1;
nodes = (
(219,-225,o),
(260,-175,o),
(260,-121,cs),
(260,-68,o),
(230,-49,o),
(203,-49,cs),
(166,-49,o),
(151,-74,o),
(151,-98,cs),
(151,-130,o),
(187,-129,o),
(187,-146,cs),
(187,-163,o),
(185,-176,o),
(181,-184,cs),
(176,-193,o),
(174,-200,o),
(174,-206,cs),
(174,-223,o),
(188,-225,o),
(195,-225,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 3 1 0 0 2 83 0 2 2 23 67 0 4 4 6 83 0 6 6 24 67 0 7 7 8 83 0 8 8 25 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 91 0 4 4 6 83 0 6 6 24 67 0 7 7 8 83 0 8 8 25 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 91 0 7 0 8 7 8 87 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 1 2 1 106 0 0 3 5 3 0 5 104 0 5 4 3 5 4 102 0 2 0 3 0 2 3 91 0 7 0 8 7 8 87 0 4 4 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 41 40 40 37 38 99 46 65 9 35
CALL[ ]	/* CallFunction */";
};
width = 359;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(301,-11,o),
(341,80,o),
(341,117,cs),
(341,124,o),
(341,137,o),
(326,137,cs),
(311,137,o),
(311,123,o),
(304,102,cs),
(293,64,o),
(263,19,o),
(206,19,cs),
(128,19,o),
(129,98,o),
(129,152,cs),
(129,426,l),
(156,427,o),
(185,428,o),
(215,429,cs),
(245,430,o),
(275,431,o),
(304,434,cs),
(316,435,o),
(321,442,o),
(321,449,cs),
(321,458,o),
(312,462,o),
(295,462,cs),
(275,462,o),
(151,458,o),
(129,458,c),
(129,575,ls),
(129,595,o),
(128,607,o),
(125,612,cs),
(122,616,o),
(118,618,o),
(113,618,cs),
(110,618,o),
(107,617,o),
(104,614,cs),
(101,611,o),
(98,603,o),
(95,590,cs),
(88,563,o),
(88,528,o),
(88,500,cs),
(88,471,o),
(87,459,o),
(60,456,cs),
(9,450,ls),
(0,449,o),
(-7,447,o),
(-10,445,cs),
(-13,442,o),
(-15,439,o),
(-15,436,cs),
(-15,425,o),
(-4,422,o),
(4,422,cs),
(16,422,o),
(30,422,o),
(46,423,cs),
(62,424,o),
(76,424,o),
(89,424,c),
(89,165,ls),
(89,134,o),
(87,72,o),
(115,30,cs),
(133,3,o),
(161,-11,o),
(199,-11,cs)
);
},
{
closed = 1;
nodes = (
(223,-203,o),
(239,-153,o),
(239,-124,cs),
(239,-79,o),
(217,-67,o),
(197,-67,cs),
(170,-67,o),
(157,-84,o),
(157,-101,cs),
(157,-133,o),
(193,-128,o),
(193,-145,cs),
(193,-152,o),
(191,-160,o),
(188,-169,cs),
(184,-179,o),
(182,-186,o),
(182,-191,cs),
(182,-198,o),
(189,-203,o),
(196,-203,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 3 1 0 0 2 83 0 2 2 23 67 0 4 4 6 83 0 6 6 24 67 0 7 7 8 83 0 8 8 17 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 91 0 4 4 6 83 0 6 6 24 67 0 7 7 8 83 0 8 8 17 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 91 0 7 0 8 7 8 87 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 1 2 1 106 0 0 3 5 3 0 5 104 0 5 4 3 5 4 102 0 2 0 3 0 2 3 91 0 7 0 8 7 8 87 0 4 4 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 41 38 38 37 37 99 46 64 9 24
CALL[ ]	/* CallFunction */";
};
width = 349;
}
);
note = uni021B;
unicode = 539;
},
{
glyphname = u;
kernLeft = u;
kernRight = u;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(603,-22,o),
(609,-6,o),
(609,22,cs),
(609,43,o),
(599,50,o),
(586,53,cs),
(581,54,o),
(565,55,o),
(556,55,cs),
(533,55,o),
(528,63,o),
(528,78,cs),
(528,80,o),
(528,87,o),
(528,99,cs),
(527,110,o),
(527,129,o),
(527,156,cs),
(527,266,o),
(530,346,o),
(530,383,cs),
(530,431,o),
(510,432,o),
(436,432,cs),
(351,432,o),
(324,421,o),
(324,390,cs),
(324,371,o),
(335,359,o),
(358,359,cs),
(411,359,ls),
(435,359,o),
(438,341,o),
(438,318,cs),
(436,191,l),
(436,191,l),
(436,121,o),
(370,58,o),
(297,58,cs),
(203,58,o),
(202,164,o),
(202,243,cs),
(202,301,o),
(206,389,o),
(206,427,cs),
(206,469,o),
(191,472,o),
(121,472,cs),
(42,472,o),
(10,463,o),
(10,432,cs),
(10,401,o),
(30,399,o),
(55,399,cs),
(79,399,ls),
(110,399,o),
(111,392,o),
(111,361,cs),
(111,187,ls),
(111,83,o),
(150,-20,o),
(275,-20,cs),
(369,-20,o),
(417,37,o),
(436,81,c),
(436,7,o),
(437,-22,o),
(466,-22,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
44 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 6 0 5 0 6 5 91 0 1 0 0 2 1 0 91 7 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
44 54 55 40 40 61 54 50 8 23
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(563,-22,o),
(596,-12,o),
(596,15,cs),
(596,31,o),
(584,39,o),
(560,39,cs),
(549,39,o),
(542,39,o),
(539,39,cs),
(535,38,o),
(532,38,o),
(529,38,cs),
(506,38,o),
(501,45,o),
(501,60,cs),
(501,63,o),
(501,71,o),
(501,85,cs),
(500,99,o),
(500,123,o),
(500,156,cs),
(500,266,o),
(503,346,o),
(503,383,cs),
(503,430,o),
(488,432,o),
(430,432,cs),
(382,432,o),
(348,430,o),
(327,425,cs),
(306,420,o),
(295,411,o),
(295,398,cs),
(295,386,o),
(306,380,o),
(329,380,cs),
(405,380,ls),
(423,380,o),
(432,366,o),
(432,339,cs),
(429,180,l),
(429,180,l),
(429,106,o),
(360,40,o),
(281,40,cs),
(174,40,o),
(175,159,o),
(175,243,cs),
(175,301,o),
(179,389,o),
(179,427,cs),
(179,470,o),
(168,472,o),
(115,472,cs),
(73,472,o),
(40,470,o),
(16,465,cs),
(-9,460,o),
(-21,453,o),
(-21,442,cs),
(-21,423,o),
(0,420,o),
(20,420,cs),
(73,420,ls),
(104,420,o),
(105,413,o),
(105,382,cs),
(105,187,ls),
(105,83,o),
(144,-20,o),
(269,-20,cs),
(363,-20,o),
(411,37,o),
(430,81,c),
(431,42,o),
(432,15,o),
(435,0,cs),
(438,-15,o),
(443,-22,o),
(450,-22,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
37 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 3 2 2 2 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 7 0 6 0 7 6 91 0 1 0 0 2 1 0 91 8 3 2 2 2 4 83 5 1 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
45 36 55 38 37 33 46 35 49 9 24
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(467,-22,o),
(578,-23,o),
(578,-1,cs),
(578,7,o),
(563,10,o),
(551,10,cs),
(535,10,o),
(522,10,o),
(512,10,cs),
(502,9,o),
(495,9,o),
(491,9,cs),
(468,9,o),
(463,17,o),
(463,30,cs),
(463,33,o),
(463,44,o),
(463,63,cs),
(462,81,o),
(462,112,o),
(462,156,cs),
(462,266,o),
(465,346,o),
(465,383,cs),
(465,428,o),
(458,432,o),
(422,432,cs),
(340,432,o),
(297,424,o),
(297,411,cs),
(297,404,o),
(308,400,o),
(331,400,cs),
(397,400,ls),
(420,400,o),
(424,395,o),
(424,359,cs),
(421,172,ls),
(421,84,o),
(347,10,o),
(258,10,cs),
(138,10,o),
(137,144,o),
(137,243,cs),
(137,301,o),
(141,389,o),
(141,427,cs),
(141,468,o),
(135,472,o),
(107,472,cs),
(26,472,o),
(-19,464,o),
(-19,452,cs),
(-19,448,o),
(-14,440,o),
(-2,440,cs),
(65,440,ls),
(96,440,o),
(97,433,o),
(97,402,cs),
(97,187,ls),
(97,83,o),
(136,-20,o),
(261,-20,cs),
(355,-20,o),
(403,37,o),
(422,81,c),
(423,42,o),
(424,15,o),
(427,0,cs),
(430,-15,o),
(435,-22,o),
(442,-22,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 6 0 5 1 6 5 91 0 1 0 0 2 1 0 91 7 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
43 53 55 38 53 94 52 50 8 23
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = u;
unicode = 117;
},
{
glyphname = uacute;
kernLeft = u;
kernRight = u;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(603,-22,o),
(609,-6,o),
(609,22,cs),
(609,43,o),
(599,50,o),
(586,53,cs),
(581,54,o),
(565,55,o),
(556,55,cs),
(533,55,o),
(528,63,o),
(528,78,cs),
(528,80,o),
(528,87,o),
(528,99,cs),
(527,110,o),
(527,129,o),
(527,156,cs),
(527,266,o),
(530,346,o),
(530,383,cs),
(530,431,o),
(510,432,o),
(436,432,cs),
(351,432,o),
(324,421,o),
(324,390,cs),
(324,371,o),
(335,359,o),
(358,359,cs),
(411,359,ls),
(435,359,o),
(438,341,o),
(438,318,cs),
(436,191,l),
(436,191,l),
(436,121,o),
(370,58,o),
(297,58,cs),
(203,58,o),
(202,164,o),
(202,243,cs),
(202,301,o),
(206,389,o),
(206,427,cs),
(206,469,o),
(191,472,o),
(121,472,cs),
(42,472,o),
(10,463,o),
(10,432,cs),
(10,401,o),
(30,399,o),
(55,399,cs),
(79,399,ls),
(110,399,o),
(111,392,o),
(111,361,cs),
(111,187,ls),
(111,83,o),
(150,-20,o),
(275,-20,cs),
(369,-20,o),
(417,37,o),
(436,81,c),
(436,7,o),
(437,-22,o),
(466,-22,cs)
);
},
{
closed = 1;
nodes = (
(248,486,o),
(283,509,o),
(322,543,cs),
(357,574,o),
(386,608,o),
(386,626,cs),
(386,651,o),
(359,673,o),
(316,674,cs),
(291,674,o),
(260,635,o),
(236,595,cs),
(216,560,o),
(194,513,o),
(194,508,cs),
(194,493,o),
(216,486,o),
(231,486,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
62 1 4 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 1 106 0 0 8 0 106 0 7 7 8 83 0 8 8 23 67 0 2 2 3 83 0 3 3 15 67 9 1 4 4 5 83 6 1 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 1 0 1 106 0 0 8 0 106 0 8 0 7 2 8 7 91 0 3 0 2 4 3 2 92 9 1 4 4 5 83 6 1 5 5 21 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
101 99 54 55 40 40 61 54 52 38 38 10 24
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(563,-22,o),
(596,-12,o),
(596,15,cs),
(596,31,o),
(584,39,o),
(560,39,cs),
(549,39,o),
(542,39,o),
(539,39,cs),
(535,38,o),
(532,38,o),
(529,38,cs),
(506,38,o),
(501,45,o),
(501,60,cs),
(501,63,o),
(501,71,o),
(501,85,cs),
(500,99,o),
(500,123,o),
(500,156,cs),
(500,266,o),
(503,346,o),
(503,383,cs),
(503,430,o),
(488,432,o),
(430,432,cs),
(382,432,o),
(348,430,o),
(327,425,cs),
(306,420,o),
(295,411,o),
(295,398,cs),
(295,386,o),
(306,380,o),
(329,380,cs),
(405,380,ls),
(423,380,o),
(432,366,o),
(432,339,cs),
(429,180,l),
(429,180,l),
(429,106,o),
(360,40,o),
(281,40,cs),
(174,40,o),
(175,159,o),
(175,243,cs),
(175,301,o),
(179,389,o),
(179,427,cs),
(179,470,o),
(168,472,o),
(115,472,cs),
(73,472,o),
(40,470,o),
(16,465,cs),
(-9,460,o),
(-21,453,o),
(-21,442,cs),
(-21,423,o),
(0,420,o),
(20,420,cs),
(73,420,ls),
(104,420,o),
(105,413,o),
(105,382,cs),
(105,187,ls),
(105,83,o),
(144,-20,o),
(269,-20,cs),
(363,-20,o),
(411,37,o),
(430,81,c),
(431,42,o),
(432,15,o),
(435,0,cs),
(438,-15,o),
(443,-22,o),
(450,-22,cs)
);
},
{
closed = 1;
nodes = (
(256,495,o),
(361,594,o),
(361,623,cs),
(361,646,o),
(343,661,o),
(312,661,cs),
(294,661,o),
(265,627,o),
(242,591,cs),
(216,551,o),
(201,517,o),
(201,513,cs),
(201,500,o),
(215,495,o),
(226,495,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
55 1 4 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 0 9 0 106 0 8 8 9 83 0 9 9 23 67 0 2 2 3 83 0 3 3 15 67 10 5 2 4 4 6 83 7 1 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 1 0 1 106 0 0 9 0 106 0 9 0 8 2 9 8 91 0 3 0 2 4 3 2 92 10 5 2 4 4 6 83 7 1 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
92 90 77 75 55 38 37 33 46 35 51 40 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(467,-22,o),
(578,-23,o),
(578,-1,cs),
(578,7,o),
(563,10,o),
(551,10,cs),
(535,10,o),
(522,10,o),
(512,10,cs),
(502,9,o),
(495,9,o),
(491,9,cs),
(468,9,o),
(463,17,o),
(463,30,cs),
(463,33,o),
(463,44,o),
(463,63,cs),
(462,81,o),
(462,112,o),
(462,156,cs),
(462,266,o),
(465,346,o),
(465,383,cs),
(465,428,o),
(458,432,o),
(422,432,cs),
(340,432,o),
(297,424,o),
(297,411,cs),
(297,404,o),
(308,400,o),
(331,400,cs),
(397,400,ls),
(420,400,o),
(424,395,o),
(424,359,cs),
(421,172,ls),
(421,84,o),
(347,10,o),
(258,10,cs),
(138,10,o),
(137,144,o),
(137,243,cs),
(137,301,o),
(141,389,o),
(141,427,cs),
(141,468,o),
(135,472,o),
(107,472,cs),
(26,472,o),
(-19,464,o),
(-19,452,cs),
(-19,448,o),
(-14,440,o),
(-2,440,cs),
(65,440,ls),
(96,440,o),
(97,433,o),
(97,402,cs),
(97,187,ls),
(97,83,o),
(136,-20,o),
(261,-20,cs),
(355,-20,o),
(403,37,o),
(422,81,c),
(423,42,o),
(424,15,o),
(427,0,cs),
(430,-15,o),
(435,-22,o),
(442,-22,cs)
);
},
{
closed = 1;
nodes = (
(239,510,o),
(326,597,o),
(326,618,cs),
(326,637,o),
(318,640,o),
(307,640,cs),
(287,640,o),
(212,546,o),
(212,521,cs),
(212,514,o),
(215,510,o),
(220,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 9 8 9 106 0 8 6 8 106 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 9 8 9 106 0 8 6 8 106 0 6 0 5 1 6 5 91 0 1 0 0 2 1 0 92 7 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
96 94 41 43 53 55 38 53 94 52 50 10 24
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = uacute;
unicode = 250;
},
{
glyphname = ubreve;
kernLeft = u;
kernRight = u;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(603,-22,o),
(609,-6,o),
(609,22,cs),
(609,43,o),
(599,50,o),
(586,53,cs),
(581,54,o),
(565,55,o),
(556,55,cs),
(533,55,o),
(528,63,o),
(528,78,cs),
(528,80,o),
(528,87,o),
(528,99,cs),
(527,110,o),
(527,129,o),
(527,156,cs),
(527,266,o),
(530,346,o),
(530,383,cs),
(530,431,o),
(510,432,o),
(436,432,cs),
(351,432,o),
(324,421,o),
(324,390,cs),
(324,371,o),
(335,359,o),
(358,359,cs),
(411,359,ls),
(435,359,o),
(438,341,o),
(438,318,cs),
(436,191,l),
(436,191,l),
(436,121,o),
(370,58,o),
(297,58,cs),
(203,58,o),
(202,164,o),
(202,243,cs),
(202,301,o),
(206,389,o),
(206,427,cs),
(206,469,o),
(191,472,o),
(121,472,cs),
(42,472,o),
(10,463,o),
(10,432,cs),
(10,401,o),
(30,399,o),
(55,399,cs),
(79,399,ls),
(110,399,o),
(111,392,o),
(111,361,cs),
(111,187,ls),
(111,83,o),
(150,-20,o),
(275,-20,cs),
(369,-20,o),
(417,37,o),
(436,81,c),
(436,7,o),
(437,-22,o),
(466,-22,cs)
);
},
{
closed = 1;
nodes = (
(345,510,o),
(414,537,o),
(414,589,cs),
(414,616,o),
(396,619,o),
(376,619,cs),
(359,619,o),
(344,605,o),
(344,590,cs),
(344,585,o),
(340,580,o),
(331,575,cs),
(322,570,o),
(307,567,o),
(288,567,cs),
(258,567,o),
(229,575,o),
(229,590,cs),
(229,613,o),
(216,619,o),
(193,619,cs),
(170,619,o),
(161,606,o),
(161,589,cs),
(161,546,o),
(206,510,o),
(293,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
44 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
11 1 9 10 9 106 0 10 0 8 6 10 8 91 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
11 1 9 10 9 106 0 10 0 8 6 10 8 91 0 6 0 5 0 6 5 91 0 1 0 0 2 1 0 92 7 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
114 112 108 106 100 98 41 44 54 55 40 40 61 54 50 12 24
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(563,-22,o),
(596,-12,o),
(596,15,cs),
(596,31,o),
(584,39,o),
(560,39,cs),
(549,39,o),
(542,39,o),
(539,39,cs),
(535,38,o),
(532,38,o),
(529,38,cs),
(506,38,o),
(501,45,o),
(501,60,cs),
(501,63,o),
(501,71,o),
(501,85,cs),
(500,99,o),
(500,123,o),
(500,156,cs),
(500,266,o),
(503,346,o),
(503,383,cs),
(503,430,o),
(488,432,o),
(430,432,cs),
(382,432,o),
(348,430,o),
(327,425,cs),
(306,420,o),
(295,411,o),
(295,398,cs),
(295,386,o),
(306,380,o),
(329,380,cs),
(405,380,ls),
(423,380,o),
(432,366,o),
(432,339,cs),
(429,180,l),
(429,180,l),
(429,106,o),
(360,40,o),
(281,40,cs),
(174,40,o),
(175,159,o),
(175,243,cs),
(175,301,o),
(179,389,o),
(179,427,cs),
(179,470,o),
(168,472,o),
(115,472,cs),
(73,472,o),
(40,470,o),
(16,465,cs),
(-9,460,o),
(-21,453,o),
(-21,442,cs),
(-21,423,o),
(0,420,o),
(20,420,cs),
(73,420,ls),
(104,420,o),
(105,413,o),
(105,382,cs),
(105,187,ls),
(105,83,o),
(144,-20,o),
(269,-20,cs),
(363,-20,o),
(411,37,o),
(430,81,c),
(431,42,o),
(432,15,o),
(435,0,cs),
(438,-15,o),
(443,-22,o),
(450,-22,cs)
);
},
{
closed = 1;
nodes = (
(335,510,o),
(401,537,o),
(401,589,cs),
(401,616,o),
(384,617,o),
(371,617,cs),
(356,617,o),
(345,605,o),
(345,590,cs),
(345,573,o),
(320,555,o),
(281,555,cs),
(251,555,o),
(216,564,o),
(216,590,cs),
(216,610,o),
(207,617,o),
(188,617,cs),
(171,617,o),
(162,608,o),
(162,589,cs),
(162,548,o),
(208,510,o),
(284,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
38 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
12 1 10 11 10 106 0 11 0 9 7 11 9 91 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 3 2 2 2 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
12 1 10 11 10 106 0 11 0 9 7 11 9 91 0 7 0 6 0 7 6 91 0 1 0 0 2 1 0 92 8 3 2 2 2 4 83 5 1 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
105 103 99 97 91 89 86 84 45 36 55 38 37 33 46 35 50 13 35
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(467,-22,o),
(578,-23,o),
(578,-1,cs),
(578,7,o),
(563,10,o),
(551,10,cs),
(535,10,o),
(522,10,o),
(512,10,cs),
(502,9,o),
(495,9,o),
(491,9,cs),
(468,9,o),
(463,17,o),
(463,30,cs),
(463,33,o),
(463,44,o),
(463,63,cs),
(462,81,o),
(462,112,o),
(462,156,cs),
(462,266,o),
(465,346,o),
(465,383,cs),
(465,428,o),
(458,432,o),
(422,432,cs),
(340,432,o),
(297,424,o),
(297,411,cs),
(297,404,o),
(308,400,o),
(331,400,cs),
(397,400,ls),
(420,400,o),
(424,395,o),
(424,359,cs),
(421,172,ls),
(421,84,o),
(347,10,o),
(258,10,cs),
(138,10,o),
(137,144,o),
(137,243,cs),
(137,301,o),
(141,389,o),
(141,427,cs),
(141,468,o),
(135,472,o),
(107,472,cs),
(26,472,o),
(-19,464,o),
(-19,452,cs),
(-19,448,o),
(-14,440,o),
(-2,440,cs),
(65,440,ls),
(96,440,o),
(97,433,o),
(97,402,cs),
(97,187,ls),
(97,83,o),
(136,-20,o),
(261,-20,cs),
(355,-20,o),
(403,37,o),
(422,81,c),
(423,42,o),
(424,15,o),
(427,0,cs),
(430,-15,o),
(435,-22,o),
(442,-22,cs)
);
},
{
closed = 1;
nodes = (
(325,510,o),
(383,541,o),
(383,589,cs),
(383,610,o),
(375,613,o),
(364,613,cs),
(353,613,o),
(347,605,o),
(347,590,cs),
(347,563,o),
(308,535,o),
(272,535,cs),
(233,535,o),
(198,549,o),
(198,590,cs),
(198,606,o),
(196,613,o),
(181,613,cs),
(170,613,o),
(164,605,o),
(164,589,cs),
(164,548,o),
(214,510,o),
(272,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
11 1 9 10 9 106 0 10 0 8 6 10 8 91 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
11 1 9 10 9 106 0 10 0 8 6 10 8 91 0 6 0 5 1 6 5 91 0 1 0 0 2 1 0 92 7 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
109 107 102 100 96 94 41 43 53 55 38 53 94 52 50 12 24
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = ubreve;
unicode = 365;
},
{
glyphname = ucircumflex;
kernLeft = u;
kernRight = u;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(603,-22,o),
(609,-6,o),
(609,22,cs),
(609,43,o),
(599,50,o),
(586,53,cs),
(581,54,o),
(565,55,o),
(556,55,cs),
(533,55,o),
(528,63,o),
(528,78,cs),
(528,80,o),
(528,87,o),
(528,99,cs),
(527,110,o),
(527,129,o),
(527,156,cs),
(527,266,o),
(530,346,o),
(530,383,cs),
(530,431,o),
(510,432,o),
(436,432,cs),
(351,432,o),
(324,421,o),
(324,390,cs),
(324,371,o),
(335,359,o),
(358,359,cs),
(411,359,ls),
(435,359,o),
(438,341,o),
(438,318,cs),
(436,191,l),
(436,191,l),
(436,121,o),
(370,58,o),
(297,58,cs),
(203,58,o),
(202,164,o),
(202,243,cs),
(202,301,o),
(206,389,o),
(206,427,cs),
(206,469,o),
(191,472,o),
(121,472,cs),
(42,472,o),
(10,463,o),
(10,432,cs),
(10,401,o),
(30,399,o),
(55,399,cs),
(79,399,ls),
(110,399,o),
(111,392,o),
(111,361,cs),
(111,187,ls),
(111,83,o),
(150,-20,o),
(275,-20,cs),
(369,-20,o),
(417,37,o),
(436,81,c),
(436,7,o),
(437,-22,o),
(466,-22,cs)
);
},
{
closed = 1;
nodes = (
(176,510,o),
(234,546,o),
(283,572,c),
(355,534,o),
(392,510,o),
(403,510,cs),
(412,510,o),
(416,520,o),
(416,531,cs),
(416,572,o),
(307,664,o),
(283,664,cs),
(272,664,o),
(237,639,o),
(210,614,cs),
(179,585,o),
(151,549,o),
(151,524,cs),
(151,517,o),
(156,510,o),
(164,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
5 1 0 2 70 1 5 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 0 2 106 1 11 2 0 9 0 106 0 8 8 9 83 0 9 9 23 67 0 3 3 4 83 0 4 4 15 67 10 1 5 5 6 84 7 1 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 2 0 2 106 1 11 2 0 9 0 106 0 9 0 8 3 9 8 91 0 4 0 3 5 4 3 91 10 1 5 5 6 84 7 1 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 109 107 95 92 86 83 76 74 66 64 56 53 40 37 31 28 19 17 11 9 0 25 1 25 12 15
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(563,-22,o),
(596,-12,o),
(596,15,cs),
(596,31,o),
(584,39,o),
(560,39,cs),
(549,39,o),
(542,39,o),
(539,39,cs),
(535,38,o),
(532,38,o),
(529,38,cs),
(506,38,o),
(501,45,o),
(501,60,cs),
(501,63,o),
(501,71,o),
(501,85,cs),
(500,99,o),
(500,123,o),
(500,156,cs),
(500,266,o),
(503,346,o),
(503,383,cs),
(503,430,o),
(488,432,o),
(430,432,cs),
(382,432,o),
(348,430,o),
(327,425,cs),
(306,420,o),
(295,411,o),
(295,398,cs),
(295,386,o),
(306,380,o),
(329,380,cs),
(405,380,ls),
(423,380,o),
(432,366,o),
(432,339,cs),
(429,180,l),
(429,180,l),
(429,106,o),
(360,40,o),
(281,40,cs),
(174,40,o),
(175,159,o),
(175,243,cs),
(175,301,o),
(179,389,o),
(179,427,cs),
(179,470,o),
(168,472,o),
(115,472,cs),
(73,472,o),
(40,470,o),
(16,465,cs),
(-9,460,o),
(-21,453,o),
(-21,442,cs),
(-21,423,o),
(0,420,o),
(20,420,cs),
(73,420,ls),
(104,420,o),
(105,413,o),
(105,382,cs),
(105,187,ls),
(105,83,o),
(144,-20,o),
(269,-20,cs),
(363,-20,o),
(411,37,o),
(430,81,c),
(431,42,o),
(432,15,o),
(435,0,cs),
(438,-15,o),
(443,-22,o),
(450,-22,cs)
);
},
{
closed = 1;
nodes = (
(173,510,o),
(204,538,o),
(277,581,c),
(290,573,o),
(384,510,o),
(397,510,cs),
(405,510,o),
(408,518,o),
(408,527,cs),
(408,562,o),
(302,655,o),
(277,655,cs),
(255,655,o),
(147,564,o),
(147,523,cs),
(147,514,o),
(151,510,o),
(158,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
85 1 9 11 38 1 2 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 11 9 11 106 10 12 2 9 7 9 106 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 3 2 2 2 4 84 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 11 9 11 106 10 12 2 9 7 9 106 0 7 0 6 0 7 6 91 0 1 0 0 2 1 0 91 8 3 2 2 2 4 84 5 1 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
81 80 98 96 91 89 80 104 81 104 45 36 55 38 37 33 46 35 50 13 35
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(467,-22,o),
(578,-23,o),
(578,-1,cs),
(578,7,o),
(563,10,o),
(551,10,cs),
(535,10,o),
(522,10,o),
(512,10,cs),
(502,9,o),
(495,9,o),
(491,9,cs),
(468,9,o),
(463,17,o),
(463,30,cs),
(463,33,o),
(463,44,o),
(463,63,cs),
(462,81,o),
(462,112,o),
(462,156,cs),
(462,266,o),
(465,346,o),
(465,383,cs),
(465,428,o),
(458,432,o),
(422,432,cs),
(340,432,o),
(297,424,o),
(297,411,cs),
(297,404,o),
(308,400,o),
(331,400,cs),
(397,400,ls),
(420,400,o),
(424,395,o),
(424,359,cs),
(421,172,ls),
(421,84,o),
(347,10,o),
(258,10,cs),
(138,10,o),
(137,144,o),
(137,243,cs),
(137,301,o),
(141,389,o),
(141,427,cs),
(141,468,o),
(135,472,o),
(107,472,cs),
(26,472,o),
(-19,464,o),
(-19,452,cs),
(-19,448,o),
(-14,440,o),
(-2,440,cs),
(65,440,ls),
(96,440,o),
(97,433,o),
(97,402,cs),
(97,187,ls),
(97,83,o),
(136,-20,o),
(261,-20,cs),
(355,-20,o),
(403,37,o),
(422,81,c),
(423,42,o),
(424,15,o),
(427,0,cs),
(430,-15,o),
(435,-22,o),
(442,-22,cs)
);
},
{
closed = 1;
nodes = (
(164,510,o),
(216,559,o),
(269,596,c),
(345,542,o),
(374,510,o),
(389,510,cs),
(394,510,o),
(397,514,o),
(397,521,cs),
(397,546,o),
(294,640,o),
(269,640,cs),
(246,640,o),
(142,546,o),
(142,521,cs),
(142,514,o),
(145,510,o),
(150,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
88 1 8 10 41 1 2 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 10 8 10 106 9 11 2 8 6 8 106 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 84 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 10 8 10 106 9 11 2 8 6 8 106 0 6 0 5 1 6 5 91 0 1 0 0 2 1 0 91 7 1 2 2 3 84 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
84 83 101 99 94 92 83 106 84 106 43 53 55 38 53 94 52 50 12 23
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = ucircumflex;
unicode = 251;
},
{
glyphname = udieresis;
kernLeft = u;
kernRight = u;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(603,-22,o),
(609,-6,o),
(609,22,cs),
(609,43,o),
(599,50,o),
(586,53,cs),
(581,54,o),
(565,55,o),
(556,55,cs),
(533,55,o),
(528,63,o),
(528,78,cs),
(528,80,o),
(528,87,o),
(528,99,cs),
(527,110,o),
(527,129,o),
(527,156,cs),
(527,266,o),
(530,346,o),
(530,383,cs),
(530,431,o),
(510,432,o),
(436,432,cs),
(351,432,o),
(324,421,o),
(324,390,cs),
(324,371,o),
(335,359,o),
(358,359,cs),
(411,359,ls),
(435,359,o),
(438,341,o),
(438,318,cs),
(436,191,l),
(436,191,l),
(436,121,o),
(370,58,o),
(297,58,cs),
(203,58,o),
(202,164,o),
(202,243,cs),
(202,301,o),
(206,389,o),
(206,427,cs),
(206,469,o),
(191,472,o),
(121,472,cs),
(42,472,o),
(10,463,o),
(10,432,cs),
(10,401,o),
(30,399,o),
(55,399,cs),
(79,399,ls),
(110,399,o),
(111,392,o),
(111,361,cs),
(111,187,ls),
(111,83,o),
(150,-20,o),
(275,-20,cs),
(369,-20,o),
(417,37,o),
(436,81,c),
(436,7,o),
(437,-22,o),
(466,-22,cs)
);
},
{
closed = 1;
nodes = (
(208,509,o),
(245,524,o),
(245,579,cs),
(245,615,o),
(217,640,o),
(185,640,cs),
(138,640,o),
(119,599,o),
(119,575,cs),
(119,536,o),
(145,509,o),
(178,509,cs)
);
},
{
closed = 1;
nodes = (
(415,486,o),
(452,501,o),
(452,556,cs),
(452,592,o),
(424,617,o),
(392,617,cs),
(345,617,o),
(326,576,o),
(326,552,cs),
(326,513,o),
(352,486,o),
(385,486,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
76 1 6 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 10 2 3 91 0 9 9 10 83 0 10 10 23 67 0 4 4 5 83 0 5 5 15 67 11 1 6 6 7 83 8 1 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 10 2 3 91 0 10 0 9 4 10 9 91 0 5 0 4 6 5 4 91 11 1 6 6 7 83 8 1 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
115 113 101 98 92 89 40 40 61 54 52 38 38 38 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(563,-22,o),
(596,-12,o),
(596,15,cs),
(596,31,o),
(584,39,o),
(560,39,cs),
(549,39,o),
(542,39,o),
(539,39,cs),
(535,38,o),
(532,38,o),
(529,38,cs),
(506,38,o),
(501,45,o),
(501,60,cs),
(501,63,o),
(501,71,o),
(501,85,cs),
(500,99,o),
(500,123,o),
(500,156,cs),
(500,266,o),
(503,346,o),
(503,383,cs),
(503,430,o),
(488,432,o),
(430,432,cs),
(382,432,o),
(348,430,o),
(327,425,cs),
(306,420,o),
(295,411,o),
(295,398,cs),
(295,386,o),
(306,380,o),
(329,380,cs),
(405,380,ls),
(423,380,o),
(432,366,o),
(432,339,cs),
(429,180,l),
(429,180,l),
(429,106,o),
(360,40,o),
(281,40,cs),
(174,40,o),
(175,159,o),
(175,243,cs),
(175,301,o),
(179,389,o),
(179,427,cs),
(179,470,o),
(168,472,o),
(115,472,cs),
(73,472,o),
(40,470,o),
(16,465,cs),
(-9,460,o),
(-21,453,o),
(-21,442,cs),
(-21,423,o),
(0,420,o),
(20,420,cs),
(73,420,ls),
(104,420,o),
(105,413,o),
(105,382,cs),
(105,187,ls),
(105,83,o),
(144,-20,o),
(269,-20,cs),
(363,-20,o),
(411,37,o),
(430,81,c),
(431,42,o),
(432,15,o),
(435,0,cs),
(438,-15,o),
(443,-22,o),
(450,-22,cs)
);
},
{
closed = 1;
nodes = (
(197,518,o),
(228,531,o),
(228,579,cs),
(228,610,o),
(206,631,o),
(179,631,cs),
(141,631,o),
(123,596,o),
(123,575,cs),
(123,542,o),
(145,518,o),
(172,518,cs)
);
},
{
closed = 1;
nodes = (
(404,495,o),
(435,508,o),
(435,556,cs),
(435,587,o),
(413,608,o),
(386,608,cs),
(348,608,o),
(330,573,o),
(330,552,cs),
(330,519,o),
(352,495,o),
(379,495,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
38 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 9 0 10 12 9 10 91 0 11 0 12 7 11 12 91 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 3 2 2 2 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 9 0 10 12 9 10 91 0 11 0 12 7 11 12 91 0 7 0 6 0 7 6 91 0 1 0 0 2 1 0 91 8 3 2 2 2 4 83 5 1 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
106 104 100 98 92 90 86 84 45 36 55 38 37 33 46 35 50 13 35
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(467,-22,o),
(578,-23,o),
(578,-1,cs),
(578,7,o),
(563,10,o),
(551,10,cs),
(535,10,o),
(522,10,o),
(512,10,cs),
(502,9,o),
(495,9,o),
(491,9,cs),
(468,9,o),
(463,17,o),
(463,30,cs),
(463,33,o),
(463,44,o),
(463,63,cs),
(462,81,o),
(462,112,o),
(462,156,cs),
(462,266,o),
(465,346,o),
(465,383,cs),
(465,428,o),
(458,432,o),
(422,432,cs),
(340,432,o),
(297,424,o),
(297,411,cs),
(297,404,o),
(308,400,o),
(331,400,cs),
(397,400,ls),
(420,400,o),
(424,395,o),
(424,359,cs),
(421,172,ls),
(421,84,o),
(347,10,o),
(258,10,cs),
(138,10,o),
(137,144,o),
(137,243,cs),
(137,301,o),
(141,389,o),
(141,427,cs),
(141,468,o),
(135,472,o),
(107,472,cs),
(26,472,o),
(-19,464,o),
(-19,452,cs),
(-19,448,o),
(-14,440,o),
(-2,440,cs),
(65,440,ls),
(96,440,o),
(97,433,o),
(97,402,cs),
(97,187,ls),
(97,83,o),
(136,-20,o),
(261,-20,cs),
(355,-20,o),
(403,37,o),
(422,81,c),
(423,42,o),
(424,15,o),
(427,0,cs),
(430,-15,o),
(435,-22,o),
(442,-22,cs)
);
},
{
closed = 1;
nodes = (
(183,533,o),
(205,543,o),
(205,579,cs),
(205,602,o),
(190,616,o),
(171,616,cs),
(143,616,o),
(130,589,o),
(130,575,cs),
(130,551,o),
(145,533,o),
(164,533,cs)
);
},
{
closed = 1;
nodes = (
(390,510,o),
(412,520,o),
(412,556,cs),
(412,579,o),
(397,593,o),
(378,593,cs),
(350,593,o),
(337,566,o),
(337,552,cs),
(337,528,o),
(352,510,o),
(371,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 8 0 9 11 8 9 91 0 10 0 11 6 10 11 91 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 8 0 9 11 8 9 91 0 10 0 11 6 10 11 91 0 6 0 5 1 6 5 91 0 1 0 0 2 1 0 91 7 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
109 107 103 101 95 93 41 43 53 55 38 53 94 52 50 12 24
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = udieresis;
unicode = 252;
},
{
glyphname = ugrave;
kernLeft = u;
kernRight = u;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(603,-22,o),
(609,-6,o),
(609,22,cs),
(609,43,o),
(599,50,o),
(586,53,cs),
(581,54,o),
(565,55,o),
(556,55,cs),
(533,55,o),
(528,63,o),
(528,78,cs),
(528,80,o),
(528,87,o),
(528,99,cs),
(527,110,o),
(527,129,o),
(527,156,cs),
(527,266,o),
(530,346,o),
(530,383,cs),
(530,431,o),
(510,432,o),
(436,432,cs),
(351,432,o),
(324,421,o),
(324,390,cs),
(324,371,o),
(335,359,o),
(358,359,cs),
(411,359,ls),
(435,359,o),
(438,341,o),
(438,318,cs),
(436,191,l),
(436,191,l),
(436,121,o),
(370,58,o),
(297,58,cs),
(203,58,o),
(202,164,o),
(202,243,cs),
(202,301,o),
(206,389,o),
(206,427,cs),
(206,469,o),
(191,472,o),
(121,472,cs),
(42,472,o),
(10,463,o),
(10,432,cs),
(10,401,o),
(30,399,o),
(55,399,cs),
(79,399,ls),
(110,399,o),
(111,392,o),
(111,361,cs),
(111,187,ls),
(111,83,o),
(150,-20,o),
(275,-20,cs),
(369,-20,o),
(417,37,o),
(436,81,c),
(436,7,o),
(437,-22,o),
(466,-22,cs)
);
},
{
closed = 1;
nodes = (
(362,500,o),
(384,507,o),
(384,522,cs),
(384,527,o),
(362,574,o),
(342,609,cs),
(318,649,o),
(287,688,o),
(262,688,cs),
(219,687,o),
(192,665,o),
(192,640,cs),
(192,606,o),
(309,500,o),
(347,500,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
60 1 4 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 1 0 106 0 1 8 1 106 0 7 7 8 83 0 8 8 23 67 0 2 2 3 83 0 3 3 15 67 9 1 4 4 5 84 6 1 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 0 1 0 106 0 1 8 1 106 0 8 0 7 2 8 7 91 0 3 0 2 4 3 2 91 9 1 4 4 5 84 6 1 5 5 21 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
99 97 54 55 40 40 61 54 54 38 34 10 24
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(563,-22,o),
(596,-12,o),
(596,15,cs),
(596,31,o),
(584,39,o),
(560,39,cs),
(549,39,o),
(542,39,o),
(539,39,cs),
(535,38,o),
(532,38,o),
(529,38,cs),
(506,38,o),
(501,45,o),
(501,60,cs),
(501,63,o),
(501,71,o),
(501,85,cs),
(500,99,o),
(500,123,o),
(500,156,cs),
(500,266,o),
(503,346,o),
(503,383,cs),
(503,430,o),
(488,432,o),
(430,432,cs),
(382,432,o),
(348,430,o),
(327,425,cs),
(306,420,o),
(295,411,o),
(295,398,cs),
(295,386,o),
(306,380,o),
(329,380,cs),
(405,380,ls),
(423,380,o),
(432,366,o),
(432,339,cs),
(429,180,l),
(429,180,l),
(429,106,o),
(360,40,o),
(281,40,cs),
(174,40,o),
(175,159,o),
(175,243,cs),
(175,301,o),
(179,389,o),
(179,427,cs),
(179,470,o),
(168,472,o),
(115,472,cs),
(73,472,o),
(40,470,o),
(16,465,cs),
(-9,460,o),
(-21,453,o),
(-21,442,cs),
(-21,423,o),
(0,420,o),
(20,420,cs),
(73,420,ls),
(104,420,o),
(105,413,o),
(105,382,cs),
(105,187,ls),
(105,83,o),
(144,-20,o),
(269,-20,cs),
(363,-20,o),
(411,37,o),
(430,81,c),
(431,42,o),
(432,15,o),
(435,0,cs),
(438,-15,o),
(443,-22,o),
(450,-22,cs)
);
},
{
closed = 1;
nodes = (
(347,504,o),
(361,509,o),
(361,522,cs),
(361,528,o),
(346,557,o),
(320,600,cs),
(297,636,o),
(268,670,o),
(250,670,cs),
(219,670,o),
(201,655,o),
(201,632,cs),
(201,603,o),
(306,504,o),
(336,504,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
55 1 4 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 0 1 0 106 0 1 9 1 106 0 8 8 9 83 0 9 9 23 67 0 2 2 3 83 0 3 3 15 67 10 5 2 4 4 6 84 7 1 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 0 1 0 106 0 1 9 1 106 0 9 0 8 2 9 8 91 0 3 0 2 4 3 2 91 10 5 2 4 4 6 84 7 1 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
92 90 77 75 55 38 37 33 46 35 53 40 34 11 24
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(467,-22,o),
(578,-23,o),
(578,-1,cs),
(578,7,o),
(563,10,o),
(551,10,cs),
(535,10,o),
(522,10,o),
(512,10,cs),
(502,9,o),
(495,9,o),
(491,9,cs),
(468,9,o),
(463,17,o),
(463,30,cs),
(463,33,o),
(463,44,o),
(463,63,cs),
(462,81,o),
(462,112,o),
(462,156,cs),
(462,266,o),
(465,346,o),
(465,383,cs),
(465,428,o),
(458,432,o),
(422,432,cs),
(340,432,o),
(297,424,o),
(297,411,cs),
(297,404,o),
(308,400,o),
(331,400,cs),
(397,400,ls),
(420,400,o),
(424,395,o),
(424,359,cs),
(421,172,ls),
(421,84,o),
(347,10,o),
(258,10,cs),
(138,10,o),
(137,144,o),
(137,243,cs),
(137,301,o),
(141,389,o),
(141,427,cs),
(141,468,o),
(135,472,o),
(107,472,cs),
(26,472,o),
(-19,464,o),
(-19,452,cs),
(-19,448,o),
(-14,440,o),
(-2,440,cs),
(65,440,ls),
(96,440,o),
(97,433,o),
(97,402,cs),
(97,187,ls),
(97,83,o),
(136,-20,o),
(261,-20,cs),
(355,-20,o),
(403,37,o),
(422,81,c),
(423,42,o),
(424,15,o),
(427,0,cs),
(430,-15,o),
(435,-22,o),
(442,-22,cs)
);
},
{
closed = 1;
nodes = (
(324,510,o),
(327,514,o),
(327,521,cs),
(327,546,o),
(252,640,o),
(232,640,cs),
(221,640,o),
(213,637,o),
(213,618,cs),
(213,597,o),
(300,510,o),
(319,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 8 9 8 106 0 9 6 9 106 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 84 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 8 9 8 106 0 9 6 9 106 0 6 0 5 1 6 5 91 0 1 0 0 2 1 0 91 7 1 2 2 3 84 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
94 92 39 43 53 55 38 53 94 52 50 10 24
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = ugrave;
unicode = 249;
},
{
glyphname = uhungarumlaut;
kernLeft = u;
kernRight = u;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(603,-22,o),
(609,-6,o),
(609,22,cs),
(609,43,o),
(599,50,o),
(586,53,cs),
(581,54,o),
(565,55,o),
(556,55,cs),
(533,55,o),
(528,63,o),
(528,78,cs),
(528,80,o),
(528,87,o),
(528,99,cs),
(527,110,o),
(527,129,o),
(527,156,cs),
(527,266,o),
(530,346,o),
(530,383,cs),
(530,431,o),
(510,432,o),
(436,432,cs),
(351,432,o),
(324,421,o),
(324,390,cs),
(324,371,o),
(335,359,o),
(358,359,cs),
(411,359,ls),
(435,359,o),
(438,341,o),
(438,318,cs),
(436,191,l),
(436,191,l),
(436,121,o),
(370,58,o),
(297,58,cs),
(203,58,o),
(202,164,o),
(202,243,cs),
(202,301,o),
(206,389,o),
(206,427,cs),
(206,469,o),
(191,472,o),
(121,472,cs),
(42,472,o),
(10,463,o),
(10,432,cs),
(10,401,o),
(30,399,o),
(55,399,cs),
(79,399,ls),
(110,399,o),
(111,392,o),
(111,361,cs),
(111,187,ls),
(111,83,o),
(150,-20,o),
(275,-20,cs),
(369,-20,o),
(417,37,o),
(436,81,c),
(436,7,o),
(437,-22,o),
(466,-22,cs)
);
},
{
closed = 1;
nodes = (
(189,500,o),
(224,523,o),
(263,557,cs),
(298,588,o),
(327,622,o),
(327,640,cs),
(327,665,o),
(300,687,o),
(257,688,cs),
(232,688,o),
(201,649,o),
(177,609,cs),
(157,574,o),
(135,527,o),
(135,522,cs),
(135,507,o),
(157,500,o),
(172,500,cs)
);
},
{
closed = 1;
nodes = (
(382,500,o),
(417,523,o),
(456,557,cs),
(491,588,o),
(520,622,o),
(520,640,cs),
(520,665,o),
(493,687,o),
(450,688,cs),
(425,688,o),
(394,649,o),
(370,609,cs),
(350,574,o),
(328,527,o),
(328,522,cs),
(328,507,o),
(350,500,o),
(365,500,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
80 1 6 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
3 1 1 0 1 106 2 1 0 10 0 106 0 9 9 10 83 0 10 10 23 67 0 4 4 5 83 0 5 5 15 67 11 1 6 6 7 84 8 1 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
3 1 1 0 1 106 2 1 0 10 0 106 0 10 0 9 4 10 9 91 0 5 0 4 6 5 4 92 11 1 6 6 7 84 8 1 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
119 117 105 102 96 93 40 40 61 54 52 38 40 38 38 12 24
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(563,-22,o),
(596,-12,o),
(596,15,cs),
(596,31,o),
(584,39,o),
(560,39,cs),
(549,39,o),
(542,39,o),
(539,39,cs),
(535,38,o),
(532,38,o),
(529,38,cs),
(506,38,o),
(501,45,o),
(501,60,cs),
(501,63,o),
(501,71,o),
(501,85,cs),
(500,99,o),
(500,123,o),
(500,156,cs),
(500,266,o),
(503,346,o),
(503,383,cs),
(503,430,o),
(488,432,o),
(430,432,cs),
(382,432,o),
(348,430,o),
(327,425,cs),
(306,420,o),
(295,411,o),
(295,398,cs),
(295,386,o),
(306,380,o),
(329,380,cs),
(405,380,ls),
(423,380,o),
(432,366,o),
(432,339,cs),
(429,180,l),
(429,180,l),
(429,106,o),
(360,40,o),
(281,40,cs),
(174,40,o),
(175,159,o),
(175,243,cs),
(175,301,o),
(179,389,o),
(179,427,cs),
(179,470,o),
(168,472,o),
(115,472,cs),
(73,472,o),
(40,470,o),
(16,465,cs),
(-9,460,o),
(-21,453,o),
(-21,442,cs),
(-21,423,o),
(0,420,o),
(20,420,cs),
(73,420,ls),
(104,420,o),
(105,413,o),
(105,382,cs),
(105,187,ls),
(105,83,o),
(144,-20,o),
(269,-20,cs),
(363,-20,o),
(411,37,o),
(430,81,c),
(431,42,o),
(432,15,o),
(435,0,cs),
(438,-15,o),
(443,-22,o),
(450,-22,cs)
);
},
{
closed = 1;
nodes = (
(202,504,o),
(307,603,o),
(307,632,cs),
(307,655,o),
(289,670,o),
(258,670,cs),
(240,670,o),
(211,636,o),
(188,600,cs),
(162,560,o),
(147,526,o),
(147,522,cs),
(147,509,o),
(161,504,o),
(172,504,cs)
);
},
{
closed = 1;
nodes = (
(379,504,o),
(484,603,o),
(484,632,cs),
(484,655,o),
(466,670,o),
(435,670,cs),
(417,670,o),
(388,636,o),
(365,600,cs),
(339,560,o),
(324,526,o),
(324,522,cs),
(324,509,o),
(338,504,o),
(349,504,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
73 1 6 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
3 1 1 0 1 106 2 1 0 11 0 106 0 10 10 11 83 0 11 11 23 67 0 4 4 5 83 0 5 5 15 67 12 7 2 6 6 8 84 9 1 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
3 1 1 0 1 106 2 1 0 11 0 106 0 11 0 10 4 11 10 91 0 5 0 4 6 5 4 92 12 7 2 6 6 8 84 9 1 8 8 21 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
110 108 95 93 89 86 79 77 37 33 46 35 51 40 38 40 36 13 24
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(467,-22,o),
(578,-23,o),
(578,-1,cs),
(578,7,o),
(563,10,o),
(551,10,cs),
(535,10,o),
(522,10,o),
(512,10,cs),
(502,9,o),
(495,9,o),
(491,9,cs),
(468,9,o),
(463,17,o),
(463,30,cs),
(463,33,o),
(463,44,o),
(463,63,cs),
(462,81,o),
(462,112,o),
(462,156,cs),
(462,266,o),
(465,346,o),
(465,383,cs),
(465,428,o),
(458,432,o),
(422,432,cs),
(340,432,o),
(297,424,o),
(297,411,cs),
(297,404,o),
(308,400,o),
(331,400,cs),
(397,400,ls),
(420,400,o),
(424,395,o),
(424,359,cs),
(421,172,ls),
(421,84,o),
(347,10,o),
(258,10,cs),
(138,10,o),
(137,144,o),
(137,243,cs),
(137,301,o),
(141,389,o),
(141,427,cs),
(141,468,o),
(135,472,o),
(107,472,cs),
(26,472,o),
(-19,464,o),
(-19,452,cs),
(-19,448,o),
(-14,440,o),
(-2,440,cs),
(65,440,ls),
(96,440,o),
(97,433,o),
(97,402,cs),
(97,187,ls),
(97,83,o),
(136,-20,o),
(261,-20,cs),
(355,-20,o),
(403,37,o),
(422,81,c),
(423,42,o),
(424,15,o),
(427,0,cs),
(430,-15,o),
(435,-22,o),
(442,-22,cs)
);
},
{
closed = 1;
nodes = (
(193,510,o),
(280,597,o),
(280,618,cs),
(280,637,o),
(272,640,o),
(261,640,cs),
(241,640,o),
(166,546,o),
(166,521,cs),
(166,514,o),
(169,510,o),
(174,510,cs)
);
},
{
closed = 1;
nodes = (
(347,510,o),
(434,597,o),
(434,618,cs),
(434,637,o),
(426,640,o),
(415,640,cs),
(395,640,o),
(320,546,o),
(320,521,cs),
(320,514,o),
(323,510,o),
(328,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
11 1 9 8 9 106 10 1 8 6 8 106 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 84 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
11 1 9 8 9 106 10 1 8 6 8 106 0 6 0 5 1 6 5 91 0 1 0 0 2 1 0 92 7 1 2 2 3 84 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
111 109 104 102 96 94 41 43 53 55 38 53 94 52 50 12 24
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = uhungarumlaut;
unicode = 369;
},
{
glyphname = umacron;
kernLeft = u;
kernRight = u;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(603,-22,o),
(609,-6,o),
(609,22,cs),
(609,43,o),
(599,50,o),
(586,53,cs),
(581,54,o),
(565,55,o),
(556,55,cs),
(533,55,o),
(528,63,o),
(528,78,cs),
(528,80,o),
(528,87,o),
(528,99,cs),
(527,110,o),
(527,129,o),
(527,156,cs),
(527,266,o),
(530,346,o),
(530,383,cs),
(530,431,o),
(510,432,o),
(436,432,cs),
(351,432,o),
(324,421,o),
(324,390,cs),
(324,371,o),
(335,359,o),
(358,359,cs),
(411,359,ls),
(435,359,o),
(438,341,o),
(438,318,cs),
(436,191,l),
(436,191,l),
(436,121,o),
(370,58,o),
(297,58,cs),
(203,58,o),
(202,164,o),
(202,243,cs),
(202,301,o),
(206,389,o),
(206,427,cs),
(206,469,o),
(191,472,o),
(121,472,cs),
(42,472,o),
(10,463,o),
(10,432,cs),
(10,401,o),
(30,399,o),
(55,399,cs),
(79,399,ls),
(110,399,o),
(111,392,o),
(111,361,cs),
(111,187,ls),
(111,83,o),
(150,-20,o),
(275,-20,cs),
(369,-20,o),
(417,37,o),
(436,81,c),
(436,7,o),
(437,-22,o),
(466,-22,cs)
);
},
{
closed = 1;
nodes = (
(246,537,o),
(343,538,o),
(417,538,cs),
(446,538,o),
(453,565,o),
(453,580,cs),
(453,600,o),
(440,617,o),
(425,617,cs),
(409,617,o),
(391,617,o),
(370,616,cs),
(349,615,o),
(325,614,o),
(297,614,cs),
(255,614,o),
(206,616,o),
(176,616,cs),
(153,616,o),
(143,596,o),
(143,577,cs),
(143,558,o),
(157,537,o),
(176,537,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
44 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
10 1 8 0 9 6 8 9 91 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
10 1 8 0 9 6 8 9 91 0 6 0 5 0 6 5 91 0 1 0 0 2 1 0 91 7 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
89 88 102 95 88 114 89 106 44 54 55 40 40 61 54 50 11 23
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(563,-22,o),
(596,-12,o),
(596,15,cs),
(596,31,o),
(584,39,o),
(560,39,cs),
(549,39,o),
(542,39,o),
(539,39,cs),
(535,38,o),
(532,38,o),
(529,38,cs),
(506,38,o),
(501,45,o),
(501,60,cs),
(501,63,o),
(501,71,o),
(501,85,cs),
(500,99,o),
(500,123,o),
(500,156,cs),
(500,266,o),
(503,346,o),
(503,383,cs),
(503,430,o),
(488,432,o),
(430,432,cs),
(382,432,o),
(348,430,o),
(327,425,cs),
(306,420,o),
(295,411,o),
(295,398,cs),
(295,386,o),
(306,380,o),
(329,380,cs),
(405,380,ls),
(423,380,o),
(432,366,o),
(432,339,cs),
(429,180,l),
(429,180,l),
(429,106,o),
(360,40,o),
(281,40,cs),
(174,40,o),
(175,159,o),
(175,243,cs),
(175,301,o),
(179,389,o),
(179,427,cs),
(179,470,o),
(168,472,o),
(115,472,cs),
(73,472,o),
(40,470,o),
(16,465,cs),
(-9,460,o),
(-21,453,o),
(-21,442,cs),
(-21,423,o),
(0,420,o),
(20,420,cs),
(73,420,ls),
(104,420,o),
(105,413,o),
(105,382,cs),
(105,187,ls),
(105,83,o),
(144,-20,o),
(269,-20,cs),
(363,-20,o),
(411,37,o),
(430,81,c),
(431,42,o),
(432,15,o),
(435,0,cs),
(438,-15,o),
(443,-22,o),
(450,-22,cs)
);
},
{
closed = 1;
nodes = (
(240,525,o),
(337,526,o),
(411,526,cs),
(434,526,o),
(440,548,o),
(440,559,cs),
(440,574,o),
(430,587,o),
(419,587,cs),
(403,587,o),
(385,587,o),
(364,586,cs),
(343,585,o),
(319,584,o),
(291,584,cs),
(249,584,o),
(200,586,o),
(170,586,cs),
(151,586,o),
(144,571,o),
(144,556,cs),
(144,541,o),
(155,525,o),
(170,525,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
38 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
11 1 9 0 10 7 9 10 91 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 3 2 2 2 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
11 1 9 0 10 7 9 10 91 0 7 0 6 0 7 6 91 0 1 0 0 2 1 0 91 8 3 2 2 2 4 83 5 1 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
81 80 92 85 80 104 81 96 45 36 55 38 37 33 46 35 50 12 35
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(467,-22,o),
(578,-23,o),
(578,-1,cs),
(578,7,o),
(563,10,o),
(551,10,cs),
(535,10,o),
(522,10,o),
(512,10,cs),
(502,9,o),
(495,9,o),
(491,9,cs),
(468,9,o),
(463,17,o),
(463,30,cs),
(463,33,o),
(463,44,o),
(463,63,cs),
(462,81,o),
(462,112,o),
(462,156,cs),
(462,266,o),
(465,346,o),
(465,383,cs),
(465,428,o),
(458,432,o),
(422,432,cs),
(340,432,o),
(297,424,o),
(297,411,cs),
(297,404,o),
(308,400,o),
(331,400,cs),
(397,400,ls),
(420,400,o),
(424,395,o),
(424,359,cs),
(421,172,ls),
(421,84,o),
(347,10,o),
(258,10,cs),
(138,10,o),
(137,144,o),
(137,243,cs),
(137,301,o),
(141,389,o),
(141,427,cs),
(141,468,o),
(135,472,o),
(107,472,cs),
(26,472,o),
(-19,464,o),
(-19,452,cs),
(-19,448,o),
(-14,440,o),
(-2,440,cs),
(65,440,ls),
(96,440,o),
(97,433,o),
(97,402,cs),
(97,187,ls),
(97,83,o),
(136,-20,o),
(261,-20,cs),
(355,-20,o),
(403,37,o),
(422,81,c),
(423,42,o),
(424,15,o),
(427,0,cs),
(430,-15,o),
(435,-22,o),
(442,-22,cs)
);
},
{
closed = 1;
nodes = (
(231,510,o),
(328,511,o),
(402,511,cs),
(417,511,o),
(421,522,o),
(421,529,cs),
(421,536,o),
(415,542,o),
(410,542,cs),
(394,542,o),
(376,542,o),
(355,541,cs),
(334,540,o),
(310,539,o),
(282,539,cs),
(240,539,o),
(191,541,o),
(161,541,cs),
(150,541,o),
(145,533,o),
(145,526,cs),
(145,519,o),
(152,510,o),
(161,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
10 1 8 0 9 6 8 9 91 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
10 1 8 0 9 6 8 9 91 0 6 0 5 1 6 5 91 0 1 0 0 2 1 0 91 7 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
84 83 95 88 83 107 84 99 43 53 55 38 53 94 52 50 11 23
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = umacron;
unicode = 363;
},
{
glyphname = uogonek;
kernLeft = u;
kernRight = u;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(576,-179,o),
(607,-150,o),
(607,-126,cs),
(607,-114,o),
(595,-102,o),
(582,-102,cs),
(562,-102,o),
(563,-126,o),
(522,-126,cs),
(507,-126,o),
(493,-120,o),
(493,-105,cs),
(493,-76,o),
(511,-32,o),
(544,-19,c),
(601,-14,o),
(609,-2,o),
(609,22,cs),
(609,43,o),
(599,50,o),
(586,53,cs),
(581,54,o),
(565,55,o),
(556,55,cs),
(533,55,o),
(528,63,o),
(528,78,cs),
(528,80,o),
(528,87,o),
(528,99,cs),
(527,110,o),
(527,129,o),
(527,156,cs),
(527,266,o),
(530,346,o),
(530,383,cs),
(530,431,o),
(510,432,o),
(436,432,cs),
(351,432,o),
(324,421,o),
(324,390,cs),
(324,371,o),
(335,359,o),
(358,359,cs),
(411,359,ls),
(435,359,o),
(438,341,o),
(438,318,cs),
(436,191,l),
(436,191,l),
(436,121,o),
(370,58,o),
(297,58,cs),
(203,58,o),
(202,164,o),
(202,243,cs),
(202,301,o),
(206,389,o),
(206,427,cs),
(206,469,o),
(191,472,o),
(121,472,cs),
(42,472,o),
(10,463,o),
(10,432,cs),
(10,401,o),
(30,399,o),
(55,399,cs),
(79,399,ls),
(110,399,o),
(111,392,o),
(111,361,cs),
(111,187,ls),
(111,83,o),
(150,-20,o),
(275,-20,cs),
(369,-20,o),
(417,37,o),
(436,81,c),
(436,7,o),
(437,-22,o),
(466,-22,cs),
(481,-22,l),
(456,-36,o),
(414,-61,o),
(414,-104,cs),
(414,-156,o),
(474,-179,o),
(524,-179,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
74 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 4 6 3 6 4 3 104 0 8 8 9 83 0 9 9 23 67 0 0 0 1 83 0 1 1 15 67 10 1 2 2 6 83 7 1 6 6 21 67 0 3 3 5 84 0 5 5 17 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 4 6 3 6 4 3 104 0 9 0 8 0 9 8 91 0 1 0 0 2 1 0 91 0 3 0 5 3 5 88 10 1 2 2 6 83 7 1 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
113 111 99 96 55 40 41 38 35 46 61 54 50 11 24
CALL[ ]	/* CallFunction */";
};
width = 598;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(563,-22,o),
(596,-12,o),
(596,15,cs),
(596,31,o),
(584,39,o),
(560,39,cs),
(549,39,o),
(542,39,o),
(539,39,cs),
(535,38,o),
(532,38,o),
(529,38,cs),
(506,38,o),
(501,45,o),
(501,60,cs),
(501,63,o),
(501,71,o),
(501,85,cs),
(500,99,o),
(500,123,o),
(500,156,cs),
(500,266,o),
(503,346,o),
(503,383,cs),
(503,430,o),
(488,432,o),
(430,432,cs),
(382,432,o),
(348,430,o),
(327,425,cs),
(306,420,o),
(295,411,o),
(295,398,cs),
(295,386,o),
(306,380,o),
(329,380,cs),
(405,380,ls),
(423,380,o),
(432,366,o),
(432,339,cs),
(429,180,l),
(429,180,l),
(429,106,o),
(360,40,o),
(281,40,cs),
(174,40,o),
(175,159,o),
(175,243,cs),
(175,301,o),
(179,389,o),
(179,427,cs),
(179,470,o),
(168,472,o),
(115,472,cs),
(73,472,o),
(40,470,o),
(16,465,cs),
(-9,460,o),
(-21,453,o),
(-21,442,cs),
(-21,423,o),
(0,420,o),
(20,420,cs),
(73,420,ls),
(104,420,o),
(105,413,o),
(105,382,cs),
(105,187,ls),
(105,83,o),
(144,-20,o),
(269,-20,cs),
(363,-20,o),
(411,37,o),
(430,81,c),
(431,42,o),
(432,15,o),
(435,0,cs),
(438,-15,o),
(443,-22,o),
(450,-22,cs)
);
},
{
closed = 1;
nodes = (
(540,-178,o),
(570,-137,o),
(570,-127,cs),
(570,-116,o),
(564,-105,o),
(549,-105,cs),
(545,-105,o),
(541,-107,o),
(536,-111,cs),
(531,-116,o),
(525,-121,o),
(520,-126,cs),
(514,-132,o),
(503,-135,o),
(486,-135,cs),
(470,-135,o),
(455,-120,o),
(455,-104,cs),
(455,-85,o),
(469,-31,o),
(514,-16,c),
(464,-15,l),
(464,-15,l),
(450,-22,o),
(438,-29,o),
(427,-38,cs),
(408,-53,o),
(391,-74,o),
(391,-105,cs),
(391,-148,o),
(433,-178,o),
(492,-178,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
38 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 10 4 9 4 10 9 104 0 9 0 11 9 11 87 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 3 2 2 2 4 83 5 1 4 4 21 67 13 1 12 12 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 10 4 9 4 10 9 104 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 3 2 2 2 4 83 5 1 4 4 21 67 13 1 12 12 4 83 5 1 4 4 21 67 0 9 9 11 83 0 11 11 17 11 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 10 4 9 4 10 9 104 0 7 0 6 0 7 6 91 0 1 0 0 2 1 0 91 0 9 0 11 9 11 87 8 3 2 2 2 4 83 5 1 4 4 21 67 13 1 12 12 4 83 5 1 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
80 80 80 109 80 109 102 100 94 92 89 87 45 36 55 38 37 33 46 35 50 14 35
CALL[ ]	/* CallFunction */";
};
width = 584;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(516,-179,o),
(546,-138,o),
(546,-128,cs),
(546,-120,o),
(544,-112,o),
(532,-112,cs),
(513,-112,o),
(507,-152,o),
(470,-152,cs),
(439,-152,o),
(431,-122,o),
(431,-105,cs),
(431,-87,o),
(440,-42,o),
(478,-22,c),
(526,-22,o),
(578,-16,o),
(578,-1,cs),
(578,7,o),
(563,10,o),
(551,10,cs),
(535,10,o),
(522,10,o),
(512,10,cs),
(502,9,o),
(495,9,o),
(491,9,cs),
(468,9,o),
(463,17,o),
(463,30,cs),
(463,33,o),
(463,44,o),
(463,63,cs),
(462,81,o),
(462,112,o),
(462,156,cs),
(462,266,o),
(465,346,o),
(465,383,cs),
(465,428,o),
(458,432,o),
(422,432,cs),
(340,432,o),
(297,424,o),
(297,411,cs),
(297,404,o),
(308,400,o),
(331,400,cs),
(397,400,ls),
(420,400,o),
(424,395,o),
(424,359,cs),
(421,172,ls),
(421,84,o),
(347,10,o),
(258,10,cs),
(138,10,o),
(137,144,o),
(137,243,cs),
(137,301,o),
(141,389,o),
(141,427,cs),
(141,468,o),
(135,472,o),
(107,472,cs),
(26,472,o),
(-19,464,o),
(-19,452,cs),
(-19,448,o),
(-14,440,o),
(-2,440,cs),
(65,440,ls),
(96,440,o),
(97,433,o),
(97,402,cs),
(97,187,ls),
(97,83,o),
(136,-20,o),
(261,-20,cs),
(355,-20,o),
(403,37,o),
(422,81,c),
(423,42,o),
(424,15,o),
(427,0,cs),
(430,-15,o),
(435,-22,o),
(442,-22,c),
(422,-33,o),
(387,-63,o),
(387,-106,cs),
(387,-149,o),
(421,-179,o),
(468,-179,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
72 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 5 3 4 3 5 4 104 0 9 9 10 83 0 10 10 23 67 0 0 0 1 83 0 1 1 15 67 11 1 2 2 3 83 8 7 2 3 3 21 67 0 4 4 6 83 0 6 6 17 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 5 3 4 3 5 4 104 0 10 0 9 1 10 9 91 0 1 0 0 2 1 0 91 11 1 2 2 3 83 8 7 2 3 3 21 67 0 4 4 6 83 0 6 6 17 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 5 3 4 3 5 4 104 0 10 0 9 1 10 9 91 0 1 0 0 2 1 0 91 0 4 0 6 4 6 87 11 1 2 2 3 83 8 7 2 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
109 107 96 93 88 85 38 23 38 35 41 22 94 52 50 12 24
CALL[ ]	/* CallFunction */";
};
width = 564;
}
);
note = uogonek;
unicode = 371;
},
{
glyphname = uring;
kernLeft = u;
kernRight = u;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(603,-22,o),
(609,-6,o),
(609,22,cs),
(609,43,o),
(599,50,o),
(586,53,cs),
(581,54,o),
(565,55,o),
(556,55,cs),
(533,55,o),
(528,63,o),
(528,78,cs),
(528,80,o),
(528,87,o),
(528,99,cs),
(527,110,o),
(527,129,o),
(527,156,cs),
(527,266,o),
(530,346,o),
(530,383,cs),
(530,431,o),
(510,432,o),
(436,432,cs),
(351,432,o),
(324,421,o),
(324,390,cs),
(324,371,o),
(335,359,o),
(358,359,cs),
(411,359,ls),
(435,359,o),
(438,341,o),
(438,318,cs),
(436,191,l),
(436,191,l),
(436,121,o),
(370,58,o),
(297,58,cs),
(203,58,o),
(202,164,o),
(202,243,cs),
(202,301,o),
(206,389,o),
(206,427,cs),
(206,469,o),
(191,472,o),
(121,472,cs),
(42,472,o),
(10,463,o),
(10,432,cs),
(10,401,o),
(30,399,o),
(55,399,cs),
(79,399,ls),
(110,399,o),
(111,392,o),
(111,361,cs),
(111,187,ls),
(111,83,o),
(150,-20,o),
(275,-20,cs),
(369,-20,o),
(417,37,o),
(436,81,c),
(436,7,o),
(437,-22,o),
(466,-22,cs)
);
},
{
closed = 1;
nodes = (
(339,510,o),
(372,533,o),
(372,581,cs),
(372,626,o),
(346,649,o),
(294,649,cs),
(253,649,o),
(219,630,o),
(219,579,cs),
(219,532,o),
(254,510,o),
(299,510,cs)
);
},
{
closed = 1;
nodes = (
(290,553,o),
(275,556,o),
(275,579,cs),
(275,590,o),
(278,598,o),
(283,602,cs),
(288,605,o),
(292,607,o),
(295,607,cs),
(306,607,o),
(317,599,o),
(317,580,cs),
(317,559,o),
(307,553,o),
(299,553,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
67 1 6 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
12 1 2 1 3 0 2 96 0 3 0 1 3 94 0 1 0 0 10 1 0 91 0 9 9 10 83 0 10 10 23 67 0 4 4 5 83 0 5 5 15 67 11 1 6 6 7 83 8 1 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
12 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 1 0 0 10 1 0 91 0 9 9 10 83 0 10 10 23 67 0 4 4 5 83 0 5 5 15 67 11 1 6 6 7 83 8 1 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
12 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 1 0 0 10 1 0 91 0 10 0 9 4 10 9 91 0 5 0 4 6 5 4 91 11 1 6 6 7 83 8 1 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
12 11 106 104 92 89 83 80 73 71 63 61 53 50 37 34 28 25 18 16 11 22 12 22 36 34 13 17
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(563,-22,o),
(596,-12,o),
(596,15,cs),
(596,31,o),
(584,39,o),
(560,39,cs),
(549,39,o),
(542,39,o),
(539,39,cs),
(535,38,o),
(532,38,o),
(529,38,cs),
(506,38,o),
(501,45,o),
(501,60,cs),
(501,63,o),
(501,71,o),
(501,85,cs),
(500,99,o),
(500,123,o),
(500,156,cs),
(500,266,o),
(503,346,o),
(503,383,cs),
(503,430,o),
(488,432,o),
(430,432,cs),
(382,432,o),
(348,430,o),
(327,425,cs),
(306,420,o),
(295,411,o),
(295,398,cs),
(295,386,o),
(306,380,o),
(329,380,cs),
(405,380,ls),
(423,380,o),
(432,366,o),
(432,339,cs),
(429,180,l),
(429,180,l),
(429,106,o),
(360,40,o),
(281,40,cs),
(174,40,o),
(175,159,o),
(175,243,cs),
(175,301,o),
(179,389,o),
(179,427,cs),
(179,470,o),
(168,472,o),
(115,472,cs),
(73,472,o),
(40,470,o),
(16,465,cs),
(-9,460,o),
(-21,453,o),
(-21,442,cs),
(-21,423,o),
(0,420,o),
(20,420,cs),
(73,420,ls),
(104,420,o),
(105,413,o),
(105,382,cs),
(105,187,ls),
(105,83,o),
(144,-20,o),
(269,-20,cs),
(363,-20,o),
(411,37,o),
(430,81,c),
(431,42,o),
(432,15,o),
(435,0,cs),
(438,-15,o),
(443,-22,o),
(450,-22,cs)
);
},
{
closed = 1;
nodes = (
(323,510,o),
(357,533,o),
(357,581,cs),
(357,624,o),
(333,649,o),
(286,649,cs),
(246,649,o),
(215,619,o),
(215,579,cs),
(215,538,o),
(247,510,o),
(287,510,cs)
);
},
{
closed = 1;
nodes = (
(279,544,o),
(260,550,o),
(260,579,cs),
(260,607,o),
(275,615,o),
(286,615,cs),
(299,615,o),
(312,605,o),
(312,580,cs),
(312,565,o),
(309,555,o),
(302,551,cs),
(295,546,o),
(290,544,o),
(287,544,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
38 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
13 1 11 10 12 9 11 96 0 12 9 10 12 94 0 10 0 9 7 10 9 91 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 3 2 2 2 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
13 1 11 10 12 10 11 12 104 0 12 9 10 12 9 102 0 10 0 9 7 10 9 91 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 3 2 2 2 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
13 1 11 10 12 10 11 12 104 0 12 9 10 12 9 102 0 10 0 9 7 10 9 91 0 7 0 6 0 7 6 91 0 1 0 0 2 1 0 91 8 3 2 2 2 4 83 5 1 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
93 92 99 97 92 103 93 103 90 88 84 82 45 36 55 38 37 33 46 35 50 14 35
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(467,-22,o),
(578,-23,o),
(578,-1,cs),
(578,7,o),
(563,10,o),
(551,10,cs),
(535,10,o),
(522,10,o),
(512,10,cs),
(502,9,o),
(495,9,o),
(491,9,cs),
(468,9,o),
(463,17,o),
(463,30,cs),
(463,33,o),
(463,44,o),
(463,63,cs),
(462,81,o),
(462,112,o),
(462,156,cs),
(462,266,o),
(465,346,o),
(465,383,cs),
(465,428,o),
(458,432,o),
(422,432,cs),
(340,432,o),
(297,424,o),
(297,411,cs),
(297,404,o),
(308,400,o),
(331,400,cs),
(397,400,ls),
(420,400,o),
(424,395,o),
(424,359,cs),
(421,172,ls),
(421,84,o),
(347,10,o),
(258,10,cs),
(138,10,o),
(137,144,o),
(137,243,cs),
(137,301,o),
(141,389,o),
(141,427,cs),
(141,468,o),
(135,472,o),
(107,472,cs),
(26,472,o),
(-19,464,o),
(-19,452,cs),
(-19,448,o),
(-14,440,o),
(-2,440,cs),
(65,440,ls),
(96,440,o),
(97,433,o),
(97,402,cs),
(97,187,ls),
(97,83,o),
(136,-20,o),
(261,-20,cs),
(355,-20,o),
(403,37,o),
(422,81,c),
(423,42,o),
(424,15,o),
(427,0,cs),
(430,-15,o),
(435,-22,o),
(442,-22,cs)
);
},
{
closed = 1;
nodes = (
(301,510,o),
(335,533,o),
(335,581,cs),
(335,617,o),
(314,649,o),
(274,649,cs),
(235,649,o),
(208,619,o),
(208,579,cs),
(208,538,o),
(235,510,o),
(270,510,cs)
);
},
{
closed = 1;
nodes = (
(247,529,o),
(238,550,o),
(238,579,cs),
(238,607,o),
(247,629,o),
(272,629,cs),
(299,629,o),
(305,605,o),
(305,580,cs),
(305,549,o),
(293,529,o),
(270,529,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 9 12 1 10 11 9 10 91 0 11 0 8 6 11 8 91 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 9 12 1 10 11 9 10 91 0 11 0 8 6 11 8 91 0 6 0 5 1 6 5 91 0 1 0 0 2 1 0 91 7 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
96 95 102 100 95 106 96 106 93 91 39 43 53 55 38 53 94 52 50 13 24
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = uring;
unicode = 367;
},
{
glyphname = utilde;
kernLeft = u;
kernRight = u;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(603,-22,o),
(609,-6,o),
(609,22,cs),
(609,43,o),
(599,50,o),
(586,53,cs),
(581,54,o),
(565,55,o),
(556,55,cs),
(533,55,o),
(528,63,o),
(528,78,cs),
(528,80,o),
(528,87,o),
(528,99,cs),
(527,110,o),
(527,129,o),
(527,156,cs),
(527,266,o),
(530,346,o),
(530,383,cs),
(530,431,o),
(510,432,o),
(436,432,cs),
(351,432,o),
(324,421,o),
(324,390,cs),
(324,371,o),
(335,359,o),
(358,359,cs),
(411,359,ls),
(435,359,o),
(438,341,o),
(438,318,cs),
(436,191,l),
(436,191,l),
(436,121,o),
(370,58,o),
(297,58,cs),
(203,58,o),
(202,164,o),
(202,243,cs),
(202,301,o),
(206,389,o),
(206,427,cs),
(206,469,o),
(191,472,o),
(121,472,cs),
(42,472,o),
(10,463,o),
(10,432,cs),
(10,401,o),
(30,399,o),
(55,399,cs),
(79,399,ls),
(110,399,o),
(111,392,o),
(111,361,cs),
(111,187,ls),
(111,83,o),
(150,-20,o),
(275,-20,cs),
(369,-20,o),
(417,37,o),
(436,81,c),
(436,7,o),
(437,-22,o),
(466,-22,cs)
);
},
{
closed = 1;
nodes = (
(151,498,o),
(175,523,o),
(214,523,cs),
(253,523,o),
(295,499,o),
(351,499,cs),
(384,499,o),
(462,517,o),
(462,574,cs),
(462,595,o),
(447,609,o),
(440,609,cs),
(435,609,o),
(425,605,o),
(410,596,cs),
(391,585,o),
(369,579,o),
(350,579,cs),
(311,579,o),
(249,607,o),
(213,607,cs),
(188,607,o),
(166,601,o),
(145,589,cs),
(126,578,o),
(111,563,o),
(111,534,cs),
(111,514,o),
(118,498,o),
(130,498,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
44 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 6 9 11 91 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 6 9 11 91 0 6 0 5 0 6 5 91 0 1 0 0 2 1 0 91 7 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
122 120 117 115 112 110 104 102 99 97 41 44 54 55 40 40 61 54 50 14 24
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(563,-22,o),
(596,-12,o),
(596,15,cs),
(596,31,o),
(584,39,o),
(560,39,cs),
(549,39,o),
(542,39,o),
(539,39,cs),
(535,38,o),
(532,38,o),
(529,38,cs),
(506,38,o),
(501,45,o),
(501,60,cs),
(501,63,o),
(501,71,o),
(501,85,cs),
(500,99,o),
(500,123,o),
(500,156,cs),
(500,266,o),
(503,346,o),
(503,383,cs),
(503,430,o),
(488,432,o),
(430,432,cs),
(382,432,o),
(348,430,o),
(327,425,cs),
(306,420,o),
(295,411,o),
(295,398,cs),
(295,386,o),
(306,380,o),
(329,380,cs),
(405,380,ls),
(423,380,o),
(432,366,o),
(432,339,cs),
(429,180,l),
(429,180,l),
(429,106,o),
(360,40,o),
(281,40,cs),
(174,40,o),
(175,159,o),
(175,243,cs),
(175,301,o),
(179,389,o),
(179,427,cs),
(179,470,o),
(168,472,o),
(115,472,cs),
(73,472,o),
(40,470,o),
(16,465,cs),
(-9,460,o),
(-21,453,o),
(-21,442,cs),
(-21,423,o),
(0,420,o),
(20,420,cs),
(73,420,ls),
(104,420,o),
(105,413,o),
(105,382,cs),
(105,187,ls),
(105,83,o),
(144,-20,o),
(269,-20,cs),
(363,-20,o),
(411,37,o),
(430,81,c),
(431,42,o),
(432,15,o),
(435,0,cs),
(438,-15,o),
(443,-22,o),
(450,-22,cs)
);
},
{
closed = 1;
nodes = (
(134,507,o),
(161,532,o),
(201,532,cs),
(240,532,o),
(282,508,o),
(338,508,cs),
(394,508,o),
(427,530,o),
(440,553,cs),
(443,559,o),
(445,565,o),
(445,572,cs),
(445,588,o),
(434,600,o),
(427,600,cs),
(424,600,o),
(420,599,o),
(417,598,cs),
(413,596,o),
(406,592,o),
(397,587,cs),
(374,576,o),
(354,570,o),
(337,570,cs),
(298,570,o),
(236,598,o),
(200,598,cs),
(175,598,o),
(153,592,o),
(132,580,cs),
(122,574,o),
(115,569,o),
(111,564,cs),
(107,559,o),
(104,555,o),
(103,552,cs),
(101,547,o),
(100,541,o),
(100,535,cs),
(100,520,o),
(106,507,o),
(117,507,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
76 1 8 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 13 1 3 91 0 12 12 13 83 0 13 13 23 67 0 6 6 7 83 0 7 7 15 67 14 9 2 8 8 10 83 11 1 10 10 21 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 13 1 3 91 0 13 0 12 6 13 12 91 0 7 0 6 8 7 6 92 14 9 2 8 8 10 83 11 1 10 10 21 10 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
113 111 98 96 92 89 82 80 74 72 67 65 46 35 53 35 35 38 35 35 37 15 35
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(467,-22,o),
(578,-23,o),
(578,-1,cs),
(578,7,o),
(563,10,o),
(551,10,cs),
(535,10,o),
(522,10,o),
(512,10,cs),
(502,9,o),
(495,9,o),
(491,9,cs),
(468,9,o),
(463,17,o),
(463,30,cs),
(463,33,o),
(463,44,o),
(463,63,cs),
(462,81,o),
(462,112,o),
(462,156,cs),
(462,266,o),
(465,346,o),
(465,383,cs),
(465,428,o),
(458,432,o),
(422,432,cs),
(340,432,o),
(297,424,o),
(297,411,cs),
(297,404,o),
(308,400,o),
(331,400,cs),
(397,400,ls),
(420,400,o),
(424,395,o),
(424,359,cs),
(421,172,ls),
(421,84,o),
(347,10,o),
(258,10,cs),
(138,10,o),
(137,144,o),
(137,243,cs),
(137,301,o),
(141,389,o),
(141,427,cs),
(141,468,o),
(135,472,o),
(107,472,cs),
(26,472,o),
(-19,464,o),
(-19,452,cs),
(-19,448,o),
(-14,440,o),
(-2,440,cs),
(65,440,ls),
(96,440,o),
(97,433,o),
(97,402,cs),
(97,187,ls),
(97,83,o),
(136,-20,o),
(261,-20,cs),
(355,-20,o),
(403,37,o),
(422,81,c),
(423,42,o),
(424,15,o),
(427,0,cs),
(430,-15,o),
(435,-22,o),
(442,-22,cs)
);
},
{
closed = 1;
nodes = (
(114,522,o),
(141,547,o),
(182,547,cs),
(221,547,o),
(263,523,o),
(319,523,cs),
(372,523,o),
(421,543,o),
(421,568,cs),
(421,577,o),
(415,585,o),
(408,585,cs),
(405,585,o),
(401,584,o),
(398,583,cs),
(394,581,o),
(387,577,o),
(378,572,cs),
(355,561,o),
(335,555,o),
(318,555,cs),
(279,555,o),
(217,583,o),
(181,583,cs),
(156,583,o),
(134,577,o),
(113,565,cs),
(94,554,o),
(84,544,o),
(84,537,cs),
(84,530,o),
(91,522,o),
(98,522,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 6 9 11 91 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 6 9 11 91 0 6 0 5 1 6 5 91 0 1 0 0 2 1 0 92 7 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
116 114 111 109 106 104 98 96 93 91 40 43 53 55 38 53 94 52 50 14 24
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = utilde;
unicode = 361;
},
{
glyphname = v;
kernLeft = v;
kernRight = v;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(284,-14,o),
(302,0,o),
(313,36,cs),
(318,52,o),
(331,88,o),
(362,175,cs),
(388,247,o),
(412,310,o),
(423,337,cs),
(432,360,o),
(449,362,o),
(468,363,cs),
(498,365,o),
(519,369,o),
(531,374,cs),
(542,379,o),
(548,387,o),
(548,397,cs),
(548,418,o),
(539,423,o),
(410,423,cs),
(322,423,o),
(301,424,o),
(301,389,cs),
(301,377,o),
(311,370,o),
(322,367,cs),
(329,366,o),
(332,363,o),
(332,358,cs),
(332,359,o),
(310,252,o),
(260,131,c),
(218,259,o),
(180,376,o),
(180,383,cs),
(180,394,o),
(194,398,o),
(209,399,cs),
(229,400,o),
(243,409,o),
(243,428,cs),
(243,453,o),
(222,454,o),
(201,454,cs),
(179,454,o),
(126,453,o),
(45,453,cs),
(26,453,o),
(2,450,o),
(2,429,cs),
(2,407,o),
(41,402,o),
(58,399,cs),
(75,396,o),
(81,390,o),
(93,358,cs),
(139,230,o),
(146,206,o),
(203,31,cs),
(214,0,o),
(229,-14,o),
(257,-14,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
48 1 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 2 2 1 83 0 1 1 15 67 0 4 4 3 83 0 3 3 15 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 2 4 1 2 91 0 3 0 4 0 3 4 91 0 0 0 21 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
71 70 65 61 40 39 35 28 41 5 16
CALL[ ]	/* CallFunction */";
};
width = 523;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(272,-14,o),
(284,-5,o),
(291,12,cs),
(296,27,o),
(316,82,o),
(347,167,cs),
(377,252,o),
(402,321,o),
(415,349,cs),
(423,368,o),
(433,372,o),
(460,375,cs),
(496,379,o),
(529,378,o),
(529,402,cs),
(529,426,o),
(492,423,o),
(395,423,cs),
(319,423,o),
(294,424,o),
(294,400,cs),
(294,388,o),
(300,378,o),
(311,378,cs),
(334,378,o),
(339,375,o),
(339,362,cs),
(339,347,o),
(305,264,o),
(255,105,c),
(201,261,o),
(161,384,o),
(161,395,cs),
(161,407,o),
(177,408,o),
(189,408,cs),
(209,408,o),
(224,418,o),
(224,433,cs),
(224,452,o),
(207,454,o),
(186,454,cs),
(164,454,o),
(111,453,o),
(30,453,cs),
(11,453,o),
(-6,450,o),
(-6,434,cs),
(-6,418,o),
(18,414,o),
(38,411,cs),
(62,408,o),
(81,406,o),
(94,370,cs),
(150,217,o),
(156,199,o),
(216,9,cs),
(223,-10,o),
(242,-14,o),
(253,-14,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
49 1 0 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 2 2 1 83 0 1 1 15 67 0 3 3 4 83 0 4 4 15 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 2 3 1 2 91 0 4 0 3 0 4 3 91 0 0 0 21 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
67 63 58 56 41 38 34 27 40 5 16
CALL[ ]	/* CallFunction */";
};
width = 510;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(255,-14,o),
(262,-5,o),
(269,12,cs),
(273,23,o),
(292,77,o),
(327,177,cs),
(358,266,o),
(386,339,o),
(403,369,cs),
(412,388,o),
(421,392,o),
(448,395,cs),
(463,396,o),
(476,398,o),
(487,399,cs),
(497,400,o),
(502,403,o),
(502,409,cs),
(502,424,o),
(449,423,o),
(373,423,cs),
(336,423,o),
(311,422,o),
(298,421,cs),
(285,420,o),
(278,416,o),
(278,410,cs),
(278,402,o),
(285,398,o),
(299,398,cs),
(322,398,o),
(337,397,o),
(345,396,cs),
(353,394,o),
(357,389,o),
(357,382,cs),
(357,373,o),
(350,349,o),
(336,310,cs),
(320,262,o),
(290,179,o),
(248,61,c),
(201,198,o),
(168,298,o),
(147,361,cs),
(138,387,o),
(133,405,o),
(133,415,cs),
(133,423,o),
(142,427,o),
(161,428,cs),
(171,429,o),
(180,430,o),
(187,432,cs),
(194,433,o),
(197,437,o),
(197,442,cs),
(197,450,o),
(186,454,o),
(164,454,cs),
(142,454,o),
(89,453,o),
(8,453,cs),
(-9,453,o),
(-18,450,o),
(-18,443,cs),
(-18,436,o),
(-9,432,o),
(10,431,cs),
(45,429,o),
(82,429,o),
(96,390,cs),
(118,333,o),
(142,262,o),
(156,219,cs),
(167,184,o),
(179,143,o),
(196,95,cs),
(204,70,o),
(213,42,o),
(224,9,cs),
(229,-6,o),
(237,-14,o),
(246,-14,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
46 1 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
3 1 1 1 2 83 0 2 2 15 67 0 4 4 5 83 0 5 5 15 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 2 3 1 1 5 2 1 91 0 5 0 4 0 5 4 91 0 0 0 21 0 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
51 47 35 114 29 40 6 21
CALL[ ]	/* CallFunction */";
};
width = 492;
}
);
note = v;
unicode = 118;
},
{
glyphname = w;
kernLeft = w;
kernRight = w;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(543,-17,o),
(560,-4,o),
(570,23,cs),
(609,123,o),
(639,202,o),
(662,259,cs),
(684,316,o),
(698,346,o),
(703,349,c),
(706,352,o),
(711,355,o),
(717,357,cs),
(722,358,o),
(733,359,o),
(748,359,cs),
(775,359,o),
(805,361,o),
(805,388,cs),
(805,409,o),
(791,420,o),
(674,420,cs),
(588,420,o),
(558,411,o),
(558,383,cs),
(558,364,o),
(567,359,o),
(578,359,cs),
(583,359,ls),
(594,359,o),
(599,355,o),
(599,348,cs),
(599,339,o),
(583,292,o),
(563,233,cs),
(539,164,o),
(526,127,o),
(526,122,c),
(515,169,o),
(476,334,o),
(465,387,cs),
(457,420,o),
(442,435,o),
(413,435,cs),
(380,435,o),
(359,419,o),
(350,388,cs),
(339,354,o),
(305,252,o),
(266,131,c),
(220,273,o),
(186,383,o),
(186,396,cs),
(186,403,o),
(191,406,o),
(200,406,cs),
(228,406,ls),
(252,406,o),
(266,413,o),
(266,434,cs),
(266,465,o),
(245,465,o),
(206,465,cs),
(82,465,ls),
(39,465,o),
(10,463,o),
(10,432,cs),
(10,404,o),
(43,406,o),
(73,406,cs),
(81,406,o),
(83,405,o),
(87,394,cs),
(202,62,ls),
(217,21,o),
(234,8,o),
(259,8,cs),
(287,8,o),
(305,21,o),
(314,46,cs),
(405,315,l),
(467,43,ls),
(475,6,o),
(490,-17,o),
(519,-17,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
71 38 0 3 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
2 1 0 5 4 5 0 4 104 0 8 8 15 67 0 1 1 15 67 7 1 5 5 6 83 0 6 6 23 67 0 4 4 13 67 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 8 6 1 6 8 1 104 0 1 5 6 1 5 102 2 1 0 5 4 5 0 4 104 0 6 7 1 5 0 6 5 91 0 4 4 13 67 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
44 52 53 53 37 38 38 38 56 9 24
CALL[ ]	/* CallFunction */";
};
width = 785;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(522,-17,o),
(540,-9,o),
(551,15,cs),
(603,143,o),
(637,227,o),
(658,281,cs),
(677,330,o),
(688,357,o),
(694,361,cs),
(698,364,o),
(702,367,o),
(707,368,cs),
(712,369,o),
(722,370,o),
(737,370,cs),
(764,370,o),
(793,370,o),
(793,394,cs),
(793,413,o),
(778,417,o),
(674,417,cs),
(562,417,o),
(551,405,o),
(551,388,cs),
(551,377,o),
(557,370,o),
(574,370,cs),
(584,370,ls),
(595,370,o),
(601,364,o),
(601,353,cs),
(601,334,o),
(556,198,o),
(512,95,c),
(479,227,o),
(453,345,o),
(447,370,cs),
(437,414,o),
(443,386,o),
(436,413,c),
(424,429,o),
(413,433,o),
(398,433,cs),
(381,433,o),
(367,428,o),
(356,413,c),
(351,402,o),
(341,370,o),
(326,319,cs),
(310,268,o),
(287,198,o),
(258,111,c),
(200,271,o),
(156,395,o),
(156,408,cs),
(156,415,o),
(161,418,o),
(170,418,cs),
(208,418,ls),
(233,418,o),
(246,426,o),
(246,441,cs),
(246,452,o),
(241,459,o),
(232,462,cs),
(223,464,o),
(208,465,o),
(189,465,cs),
(65,465,ls),
(44,465,o),
(28,464,o),
(17,461,cs),
(6,458,o),
(0,451,o),
(0,440,cs),
(0,429,o),
(6,422,o),
(19,421,cs),
(31,419,o),
(46,418,o),
(65,418,cs),
(77,418,o),
(80,416,o),
(83,408,cs),
(216,32,l),
(229,15,o),
(236,8,o),
(255,8,cs),
(274,8,o),
(284,12,o),
(291,29,cs),
(394,345,l),
(469,28,ls),
(478,-9,o),
(488,-17,o),
(511,-17,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
70 39 0 3 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 8 8 15 67 7 1 5 5 6 83 0 6 6 23 67 2 1 0 0 1 83 0 1 1 15 67 0 4 4 13 67 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 8 6 5 6 8 5 104 0 6 7 1 5 1 6 5 91 0 1 2 1 0 4 1 0 91 0 4 4 13 67 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
43 51 52 37 38 41 37 54 54 9 24
CALL[ ]	/* CallFunction */";
};
width = 770;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(506,-17,o),
(516,-9,o),
(527,15,cs),
(591,172,o),
(632,278,o),
(652,325,cs),
(665,356,o),
(672,375,o),
(681,381,cs),
(686,384,o),
(690,387,o),
(695,388,cs),
(699,389,o),
(709,390,o),
(724,390,cs),
(737,390,o),
(747,391,o),
(752,393,cs),
(757,395,o),
(759,399,o),
(759,404,cs),
(759,418,o),
(726,417,o),
(676,417,cs),
(625,417,o),
(589,416,o),
(568,414,cs),
(547,411,o),
(537,407,o),
(537,401,cs),
(537,394,o),
(546,390,o),
(561,390,cs),
(596,390,ls),
(611,390,o),
(618,384,o),
(618,373,cs),
(618,361,o),
(611,336,o),
(598,297,cs),
(582,249,o),
(553,173,o),
(501,50,c),
(460,198,o),
(432,297,o),
(418,348,cs),
(407,383,o),
(400,405,o),
(397,413,cs),
(390,429,o),
(383,433,o),
(374,433,cs),
(363,433,o),
(354,428,o),
(347,413,cs),
(341,400,o),
(333,373,o),
(321,333,cs),
(306,284,o),
(283,206,o),
(246,78,c),
(165,294,o),
(128,411,o),
(128,428,cs),
(128,435,o),
(133,438,o),
(142,438,cs),
(180,438,ls),
(205,438,o),
(217,443,o),
(217,453,cs),
(217,458,o),
(213,461,o),
(206,463,cs),
(198,464,o),
(184,465,o),
(165,465,cs),
(41,465,ls),
(20,465,o),
(5,464,o),
(-2,463,cs),
(-10,461,o),
(-14,458,o),
(-14,453,cs),
(-14,448,o),
(-10,445,o),
(-2,442,cs),
(5,439,o),
(18,438,o),
(37,438,cs),
(68,438,o),
(76,431,o),
(85,408,cs),
(222,32,ls),
(229,15,o),
(238,8,o),
(246,8,cs),
(254,8,o),
(263,14,o),
(267,29,cs),
(371,375,l),
(474,3,ls),
(478,-10,o),
(485,-17,o),
(495,-17,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
69 38 0 3 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
7 1 5 5 6 83 0 6 6 23 67 0 8 8 15 67 2 1 0 0 1 83 0 1 1 15 67 0 4 4 13 67 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 8 5 1 5 8 1 104 0 6 7 1 5 8 6 5 91 0 1 2 1 0 4 1 0 91 0 4 4 13 67 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
45 51 52 37 37 43 37 52 54 9 24
CALL[ ]	/* CallFunction */";
};
width = 748;
}
);
note = w;
unicode = 119;
},
{
glyphname = wacute;
kernLeft = w;
kernRight = w;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(543,-17,o),
(560,-4,o),
(570,23,cs),
(609,123,o),
(639,202,o),
(662,259,cs),
(684,316,o),
(698,346,o),
(703,349,c),
(706,352,o),
(711,355,o),
(717,357,cs),
(722,358,o),
(733,359,o),
(748,359,cs),
(775,359,o),
(805,361,o),
(805,388,cs),
(805,409,o),
(791,420,o),
(674,420,cs),
(588,420,o),
(558,411,o),
(558,383,cs),
(558,364,o),
(567,359,o),
(578,359,cs),
(583,359,ls),
(594,359,o),
(599,355,o),
(599,348,cs),
(599,339,o),
(583,292,o),
(563,233,cs),
(539,164,o),
(526,127,o),
(526,122,c),
(515,169,o),
(476,334,o),
(465,387,cs),
(457,420,o),
(442,435,o),
(413,435,cs),
(380,435,o),
(359,419,o),
(350,388,cs),
(339,354,o),
(305,252,o),
(266,131,c),
(220,273,o),
(186,383,o),
(186,396,cs),
(186,403,o),
(191,406,o),
(200,406,cs),
(228,406,ls),
(252,406,o),
(266,413,o),
(266,434,cs),
(266,465,o),
(245,465,o),
(206,465,cs),
(82,465,ls),
(39,465,o),
(10,463,o),
(10,432,cs),
(10,404,o),
(43,406,o),
(73,406,cs),
(81,406,o),
(83,405,o),
(87,394,cs),
(202,62,ls),
(217,21,o),
(234,8,o),
(259,8,cs),
(287,8,o),
(305,21,o),
(314,46,cs),
(405,315,l),
(467,43,ls),
(475,6,o),
(490,-17,o),
(519,-17,cs)
);
},
{
closed = 1;
nodes = (
(392,500,o),
(427,523,o),
(466,557,cs),
(501,588,o),
(530,622,o),
(530,640,cs),
(530,665,o),
(503,687,o),
(460,688,cs),
(435,688,o),
(404,649,o),
(380,609,cs),
(360,574,o),
(338,527,o),
(338,522,cs),
(338,507,o),
(360,500,o),
(375,500,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
89 56 18 3 6 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 1 106 0 0 8 0 106 4 1 2 7 6 7 2 6 104 0 10 10 15 67 0 3 3 15 67 9 1 7 7 8 83 0 8 8 23 67 0 6 6 13 67 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 1 0 1 106 0 0 8 0 106 0 10 8 3 8 10 3 104 0 3 7 8 3 7 102 4 1 2 7 6 7 2 6 104 0 8 9 1 7 2 8 7 91 0 6 6 13 67 0 5 5 21 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
97 95 83 80 53 53 37 38 38 38 58 38 38 11 24
CALL[ ]	/* CallFunction */";
};
width = 785;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(522,-17,o),
(540,-9,o),
(551,15,cs),
(603,143,o),
(637,227,o),
(658,281,cs),
(677,330,o),
(688,357,o),
(694,361,cs),
(698,364,o),
(702,367,o),
(707,368,cs),
(712,369,o),
(722,370,o),
(737,370,cs),
(764,370,o),
(793,370,o),
(793,394,cs),
(793,413,o),
(778,417,o),
(674,417,cs),
(562,417,o),
(551,405,o),
(551,388,cs),
(551,377,o),
(557,370,o),
(574,370,cs),
(584,370,ls),
(595,370,o),
(601,364,o),
(601,353,cs),
(601,334,o),
(556,198,o),
(512,95,c),
(479,227,o),
(453,345,o),
(447,370,cs),
(437,414,o),
(443,386,o),
(436,413,c),
(424,429,o),
(413,433,o),
(398,433,cs),
(381,433,o),
(367,428,o),
(356,413,c),
(351,402,o),
(341,370,o),
(326,319,cs),
(310,268,o),
(287,198,o),
(258,111,c),
(200,271,o),
(156,395,o),
(156,408,cs),
(156,415,o),
(161,418,o),
(170,418,cs),
(208,418,ls),
(233,418,o),
(246,426,o),
(246,441,cs),
(246,452,o),
(241,459,o),
(232,462,cs),
(223,464,o),
(208,465,o),
(189,465,cs),
(65,465,ls),
(44,465,o),
(28,464,o),
(17,461,cs),
(6,458,o),
(0,451,o),
(0,440,cs),
(0,429,o),
(6,422,o),
(19,421,cs),
(31,419,o),
(46,418,o),
(65,418,cs),
(77,418,o),
(80,416,o),
(83,408,cs),
(216,32,l),
(229,15,o),
(236,8,o),
(255,8,cs),
(274,8,o),
(284,12,o),
(291,29,cs),
(394,345,l),
(469,28,ls),
(478,-9,o),
(488,-17,o),
(511,-17,cs)
);
},
{
closed = 1;
nodes = (
(383,504,o),
(488,603,o),
(488,632,cs),
(488,655,o),
(470,670,o),
(439,670,cs),
(421,670,o),
(392,636,o),
(369,600,cs),
(343,560,o),
(328,526,o),
(328,522,cs),
(328,509,o),
(342,504,o),
(353,504,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
88 57 18 3 6 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 1 0 1 106 0 0 8 0 106 0 10 10 15 67 9 1 7 7 8 83 0 8 8 23 67 4 1 2 2 3 83 0 3 3 15 67 0 6 6 13 67 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 106 0 0 8 0 106 0 10 8 7 8 10 7 104 0 8 9 1 7 3 8 7 91 0 3 4 1 2 6 3 2 91 0 6 6 13 67 0 5 5 21 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
95 93 82 79 52 37 38 41 37 54 56 40 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 770;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(506,-17,o),
(516,-9,o),
(527,15,cs),
(591,172,o),
(632,278,o),
(652,325,cs),
(665,356,o),
(672,375,o),
(681,381,cs),
(686,384,o),
(690,387,o),
(695,388,cs),
(699,389,o),
(709,390,o),
(724,390,cs),
(737,390,o),
(747,391,o),
(752,393,cs),
(757,395,o),
(759,399,o),
(759,404,cs),
(759,418,o),
(726,417,o),
(676,417,cs),
(625,417,o),
(589,416,o),
(568,414,cs),
(547,411,o),
(537,407,o),
(537,401,cs),
(537,394,o),
(546,390,o),
(561,390,cs),
(596,390,ls),
(611,390,o),
(618,384,o),
(618,373,cs),
(618,361,o),
(611,336,o),
(598,297,cs),
(582,249,o),
(553,173,o),
(501,50,c),
(460,198,o),
(432,297,o),
(418,348,cs),
(407,383,o),
(400,405,o),
(397,413,cs),
(390,429,o),
(383,433,o),
(374,433,cs),
(363,433,o),
(354,428,o),
(347,413,cs),
(341,400,o),
(333,373,o),
(321,333,cs),
(306,284,o),
(283,206,o),
(246,78,c),
(165,294,o),
(128,411,o),
(128,428,cs),
(128,435,o),
(133,438,o),
(142,438,cs),
(180,438,ls),
(205,438,o),
(217,443,o),
(217,453,cs),
(217,458,o),
(213,461,o),
(206,463,cs),
(198,464,o),
(184,465,o),
(165,465,cs),
(41,465,ls),
(20,465,o),
(5,464,o),
(-2,463,cs),
(-10,461,o),
(-14,458,o),
(-14,453,cs),
(-14,448,o),
(-10,445,o),
(-2,442,cs),
(5,439,o),
(18,438,o),
(37,438,cs),
(68,438,o),
(76,431,o),
(85,408,cs),
(222,32,ls),
(229,15,o),
(238,8,o),
(246,8,cs),
(254,8,o),
(263,14,o),
(267,29,cs),
(371,375,l),
(474,3,ls),
(478,-10,o),
(485,-17,o),
(495,-17,cs)
);
},
{
closed = 1;
nodes = (
(342,510,o),
(429,597,o),
(429,618,cs),
(429,637,o),
(421,640,o),
(410,640,cs),
(390,640,o),
(315,546,o),
(315,521,cs),
(315,514,o),
(318,510,o),
(323,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
69 38 0 3 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 10 9 10 106 0 9 6 9 106 7 1 5 5 6 83 0 6 6 23 67 0 8 8 15 67 2 1 0 0 1 83 0 1 1 15 67 0 4 4 13 67 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 10 9 10 106 0 9 6 9 106 0 8 5 1 5 8 1 104 0 6 7 1 5 8 6 5 91 0 1 2 1 0 4 1 0 91 0 4 4 13 67 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
98 96 91 89 45 51 52 37 37 43 37 52 54 11 24
CALL[ ]	/* CallFunction */";
};
width = 748;
}
);
note = wacute;
unicode = 7811;
},
{
glyphname = wcircumflex;
kernLeft = w;
kernRight = w;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(543,-17,o),
(560,-4,o),
(570,23,cs),
(609,123,o),
(639,202,o),
(662,259,cs),
(684,316,o),
(698,346,o),
(703,349,c),
(706,352,o),
(711,355,o),
(717,357,cs),
(722,358,o),
(733,359,o),
(748,359,cs),
(775,359,o),
(805,361,o),
(805,388,cs),
(805,409,o),
(791,420,o),
(674,420,cs),
(588,420,o),
(558,411,o),
(558,383,cs),
(558,364,o),
(567,359,o),
(578,359,cs),
(583,359,ls),
(594,359,o),
(599,355,o),
(599,348,cs),
(599,339,o),
(583,292,o),
(563,233,cs),
(539,164,o),
(526,127,o),
(526,122,c),
(515,169,o),
(476,334,o),
(465,387,cs),
(457,420,o),
(442,435,o),
(413,435,cs),
(380,435,o),
(359,419,o),
(350,388,cs),
(339,354,o),
(305,252,o),
(266,131,c),
(220,273,o),
(186,383,o),
(186,396,cs),
(186,403,o),
(191,406,o),
(200,406,cs),
(228,406,ls),
(252,406,o),
(266,413,o),
(266,434,cs),
(266,465,o),
(245,465,o),
(206,465,cs),
(82,465,ls),
(39,465,o),
(10,463,o),
(10,432,cs),
(10,404,o),
(43,406,o),
(73,406,cs),
(81,406,o),
(83,405,o),
(87,394,cs),
(202,62,ls),
(217,21,o),
(234,8,o),
(259,8,cs),
(287,8,o),
(305,21,o),
(314,46,cs),
(405,315,l),
(467,43,ls),
(475,6,o),
(490,-17,o),
(519,-17,cs)
);
},
{
closed = 1;
nodes = (
(306,510,o),
(364,546,o),
(413,572,c),
(485,534,o),
(522,510,o),
(533,510,cs),
(542,510,o),
(546,520,o),
(546,531,cs),
(546,572,o),
(437,664,o),
(413,664,cs),
(402,664,o),
(367,639,o),
(340,614,cs),
(309,585,o),
(281,549,o),
(281,524,cs),
(281,517,o),
(286,510,o),
(294,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
5 1 0 2 97 64 26 3 7 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 2 0 2 106 1 12 2 0 9 0 106 5 1 3 8 7 8 3 7 104 0 11 11 15 67 0 4 4 15 67 10 1 8 8 9 83 0 9 9 23 67 0 7 7 13 67 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 2 0 2 106 1 12 2 0 9 0 106 0 11 9 4 9 11 4 104 0 4 8 9 4 8 102 5 1 3 8 7 8 3 7 104 0 9 10 1 8 3 9 8 91 0 7 7 13 67 0 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 105 103 91 88 84 81 76 73 68 66 61 59 53 51 45 43 37 34 19 17 11 9 0 25 1 25 13 15
CALL[ ]	/* CallFunction */";
};
width = 785;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(522,-17,o),
(540,-9,o),
(551,15,cs),
(603,143,o),
(637,227,o),
(658,281,cs),
(677,330,o),
(688,357,o),
(694,361,cs),
(698,364,o),
(702,367,o),
(707,368,cs),
(712,369,o),
(722,370,o),
(737,370,cs),
(764,370,o),
(793,370,o),
(793,394,cs),
(793,413,o),
(778,417,o),
(674,417,cs),
(562,417,o),
(551,405,o),
(551,388,cs),
(551,377,o),
(557,370,o),
(574,370,cs),
(584,370,ls),
(595,370,o),
(601,364,o),
(601,353,cs),
(601,334,o),
(556,198,o),
(512,95,c),
(479,227,o),
(453,345,o),
(447,370,cs),
(437,414,o),
(443,386,o),
(436,413,c),
(424,429,o),
(413,433,o),
(398,433,cs),
(381,433,o),
(367,428,o),
(356,413,c),
(351,402,o),
(341,370,o),
(326,319,cs),
(310,268,o),
(287,198,o),
(258,111,c),
(200,271,o),
(156,395,o),
(156,408,cs),
(156,415,o),
(161,418,o),
(170,418,cs),
(208,418,ls),
(233,418,o),
(246,426,o),
(246,441,cs),
(246,452,o),
(241,459,o),
(232,462,cs),
(223,464,o),
(208,465,o),
(189,465,cs),
(65,465,ls),
(44,465,o),
(28,464,o),
(17,461,cs),
(6,458,o),
(0,451,o),
(0,440,cs),
(0,429,o),
(6,422,o),
(19,421,cs),
(31,419,o),
(46,418,o),
(65,418,cs),
(77,418,o),
(80,416,o),
(83,408,cs),
(216,32,l),
(229,15,o),
(236,8,o),
(255,8,cs),
(274,8,o),
(284,12,o),
(291,29,cs),
(394,345,l),
(469,28,ls),
(478,-9,o),
(488,-17,o),
(511,-17,cs)
);
},
{
closed = 1;
nodes = (
(292,510,o),
(323,538,o),
(396,581,c),
(409,573,o),
(503,510,o),
(516,510,cs),
(524,510,o),
(527,518,o),
(527,527,cs),
(527,562,o),
(421,655,o),
(396,655,cs),
(374,655,o),
(266,564,o),
(266,523,cs),
(266,514,o),
(270,510,o),
(277,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
92 1 9 11 71 40 1 3 4 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 11 9 11 106 10 12 2 9 6 9 106 0 8 8 15 67 7 1 5 5 6 83 0 6 6 23 67 2 1 0 0 1 83 0 1 1 15 67 0 4 4 13 67 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 11 9 11 106 10 12 2 9 6 9 106 0 8 6 5 6 8 5 104 0 6 7 1 5 1 6 5 91 0 1 2 1 0 4 1 0 91 0 4 4 13 67 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
88 87 105 103 98 96 87 111 88 111 43 51 52 37 38 41 37 54 55 13 35
CALL[ ]	/* CallFunction */";
};
width = 770;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(506,-17,o),
(516,-9,o),
(527,15,cs),
(591,172,o),
(632,278,o),
(652,325,cs),
(665,356,o),
(672,375,o),
(681,381,cs),
(686,384,o),
(690,387,o),
(695,388,cs),
(699,389,o),
(709,390,o),
(724,390,cs),
(737,390,o),
(747,391,o),
(752,393,cs),
(757,395,o),
(759,399,o),
(759,404,cs),
(759,418,o),
(726,417,o),
(676,417,cs),
(625,417,o),
(589,416,o),
(568,414,cs),
(547,411,o),
(537,407,o),
(537,401,cs),
(537,394,o),
(546,390,o),
(561,390,cs),
(596,390,ls),
(611,390,o),
(618,384,o),
(618,373,cs),
(618,361,o),
(611,336,o),
(598,297,cs),
(582,249,o),
(553,173,o),
(501,50,c),
(460,198,o),
(432,297,o),
(418,348,cs),
(407,383,o),
(400,405,o),
(397,413,cs),
(390,429,o),
(383,433,o),
(374,433,cs),
(363,433,o),
(354,428,o),
(347,413,cs),
(341,400,o),
(333,373,o),
(321,333,cs),
(306,284,o),
(283,206,o),
(246,78,c),
(165,294,o),
(128,411,o),
(128,428,cs),
(128,435,o),
(133,438,o),
(142,438,cs),
(180,438,ls),
(205,438,o),
(217,443,o),
(217,453,cs),
(217,458,o),
(213,461,o),
(206,463,cs),
(198,464,o),
(184,465,o),
(165,465,cs),
(41,465,ls),
(20,465,o),
(5,464,o),
(-2,463,cs),
(-10,461,o),
(-14,458,o),
(-14,453,cs),
(-14,448,o),
(-10,445,o),
(-2,442,cs),
(5,439,o),
(18,438,o),
(37,438,cs),
(68,438,o),
(76,431,o),
(85,408,cs),
(222,32,ls),
(229,15,o),
(238,8,o),
(246,8,cs),
(254,8,o),
(263,14,o),
(267,29,cs),
(371,375,l),
(474,3,ls),
(478,-10,o),
(485,-17,o),
(495,-17,cs)
);
},
{
closed = 1;
nodes = (
(267,510,o),
(319,559,o),
(372,596,c),
(448,542,o),
(477,510,o),
(492,510,cs),
(497,510,o),
(500,514,o),
(500,521,cs),
(500,546,o),
(397,640,o),
(372,640,cs),
(349,640,o),
(245,546,o),
(245,521,cs),
(245,514,o),
(248,510,o),
(253,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
90 1 9 11 69 38 0 3 4 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 11 9 11 106 10 12 2 9 6 9 106 7 1 5 5 6 83 0 6 6 23 67 0 8 8 15 67 2 1 0 0 1 83 0 1 1 15 67 0 4 4 13 67 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 11 9 11 106 10 12 2 9 6 9 106 0 8 5 1 5 8 1 104 0 6 7 1 5 8 6 5 91 0 1 2 1 0 4 1 0 91 0 4 4 13 67 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
86 85 103 101 96 94 85 108 86 108 45 51 52 37 37 43 37 52 54 13 24
CALL[ ]	/* CallFunction */";
};
width = 748;
}
);
note = wcircumflex;
unicode = 373;
},
{
glyphname = wdieresis;
kernLeft = w;
kernRight = w;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(543,-17,o),
(560,-4,o),
(570,23,cs),
(609,123,o),
(639,202,o),
(662,259,cs),
(684,316,o),
(698,346,o),
(703,349,c),
(706,352,o),
(711,355,o),
(717,357,cs),
(722,358,o),
(733,359,o),
(748,359,cs),
(775,359,o),
(805,361,o),
(805,388,cs),
(805,409,o),
(791,420,o),
(674,420,cs),
(588,420,o),
(558,411,o),
(558,383,cs),
(558,364,o),
(567,359,o),
(578,359,cs),
(583,359,ls),
(594,359,o),
(599,355,o),
(599,348,cs),
(599,339,o),
(583,292,o),
(563,233,cs),
(539,164,o),
(526,127,o),
(526,122,c),
(515,169,o),
(476,334,o),
(465,387,cs),
(457,420,o),
(442,435,o),
(413,435,cs),
(380,435,o),
(359,419,o),
(350,388,cs),
(339,354,o),
(305,252,o),
(266,131,c),
(220,273,o),
(186,383,o),
(186,396,cs),
(186,403,o),
(191,406,o),
(200,406,cs),
(228,406,ls),
(252,406,o),
(266,413,o),
(266,434,cs),
(266,465,o),
(245,465,o),
(206,465,cs),
(82,465,ls),
(39,465,o),
(10,463,o),
(10,432,cs),
(10,404,o),
(43,406,o),
(73,406,cs),
(81,406,o),
(83,405,o),
(87,394,cs),
(202,62,ls),
(217,21,o),
(234,8,o),
(259,8,cs),
(287,8,o),
(305,21,o),
(314,46,cs),
(405,315,l),
(467,43,ls),
(475,6,o),
(490,-17,o),
(519,-17,cs)
);
},
{
closed = 1;
nodes = (
(336,509,o),
(373,524,o),
(373,579,cs),
(373,615,o),
(345,640,o),
(313,640,cs),
(266,640,o),
(247,599,o),
(247,575,cs),
(247,536,o),
(273,509,o),
(306,509,cs)
);
},
{
closed = 1;
nodes = (
(543,486,o),
(580,501,o),
(580,556,cs),
(580,592,o),
(552,617,o),
(520,617,cs),
(473,617,o),
(454,576,o),
(454,552,cs),
(454,513,o),
(480,486,o),
(513,486,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
103 70 32 3 8 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
6 1 4 9 8 9 4 8 104 0 0 0 1 3 0 1 91 0 2 0 3 10 2 3 91 0 12 12 15 67 0 5 5 15 67 11 1 9 9 10 83 0 10 10 23 67 0 8 8 13 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 12 10 5 10 12 5 104 0 5 9 10 5 9 102 6 1 4 9 8 9 4 8 104 0 0 0 1 3 0 1 91 0 2 0 3 10 2 3 91 0 10 11 1 9 4 10 9 91 0 8 8 13 67 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
111 109 97 94 90 87 82 79 37 38 38 38 58 38 38 38 36 13 24
CALL[ ]	/* CallFunction */";
};
width = 785;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(522,-17,o),
(540,-9,o),
(551,15,cs),
(603,143,o),
(637,227,o),
(658,281,cs),
(677,330,o),
(688,357,o),
(694,361,cs),
(698,364,o),
(702,367,o),
(707,368,cs),
(712,369,o),
(722,370,o),
(737,370,cs),
(764,370,o),
(793,370,o),
(793,394,cs),
(793,413,o),
(778,417,o),
(674,417,cs),
(562,417,o),
(551,405,o),
(551,388,cs),
(551,377,o),
(557,370,o),
(574,370,cs),
(584,370,ls),
(595,370,o),
(601,364,o),
(601,353,cs),
(601,334,o),
(556,198,o),
(512,95,c),
(479,227,o),
(453,345,o),
(447,370,cs),
(437,414,o),
(443,386,o),
(436,413,c),
(424,429,o),
(413,433,o),
(398,433,cs),
(381,433,o),
(367,428,o),
(356,413,c),
(351,402,o),
(341,370,o),
(326,319,cs),
(310,268,o),
(287,198,o),
(258,111,c),
(200,271,o),
(156,395,o),
(156,408,cs),
(156,415,o),
(161,418,o),
(170,418,cs),
(208,418,ls),
(233,418,o),
(246,426,o),
(246,441,cs),
(246,452,o),
(241,459,o),
(232,462,cs),
(223,464,o),
(208,465,o),
(189,465,cs),
(65,465,ls),
(44,465,o),
(28,464,o),
(17,461,cs),
(6,458,o),
(0,451,o),
(0,440,cs),
(0,429,o),
(6,422,o),
(19,421,cs),
(31,419,o),
(46,418,o),
(65,418,cs),
(77,418,o),
(80,416,o),
(83,408,cs),
(216,32,l),
(229,15,o),
(236,8,o),
(255,8,cs),
(274,8,o),
(284,12,o),
(291,29,cs),
(394,345,l),
(469,28,ls),
(478,-9,o),
(488,-17,o),
(511,-17,cs)
);
},
{
closed = 1;
nodes = (
(315,518,o),
(346,531,o),
(346,579,cs),
(346,610,o),
(324,631,o),
(297,631,cs),
(259,631,o),
(241,596,o),
(241,575,cs),
(241,542,o),
(263,518,o),
(290,518,cs)
);
},
{
closed = 1;
nodes = (
(522,495,o),
(553,508,o),
(553,556,cs),
(553,587,o),
(531,608,o),
(504,608,cs),
(466,608,o),
(448,573,o),
(448,552,cs),
(448,519,o),
(470,495,o),
(497,495,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
71 40 1 3 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 9 0 10 12 9 10 91 0 11 0 12 6 11 12 91 0 8 8 15 67 7 1 5 5 6 83 0 6 6 23 67 2 1 0 0 1 83 0 1 1 15 67 0 4 4 13 67 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 8 6 5 6 8 5 104 0 9 0 10 12 9 10 91 0 11 0 12 6 11 12 91 0 6 7 1 5 1 6 5 91 0 1 2 1 0 4 1 0 91 0 4 4 13 67 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
113 111 107 105 99 97 93 91 43 51 52 37 38 41 37 54 55 13 35
CALL[ ]	/* CallFunction */";
};
width = 770;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(506,-17,o),
(516,-9,o),
(527,15,cs),
(591,172,o),
(632,278,o),
(652,325,cs),
(665,356,o),
(672,375,o),
(681,381,cs),
(686,384,o),
(690,387,o),
(695,388,cs),
(699,389,o),
(709,390,o),
(724,390,cs),
(737,390,o),
(747,391,o),
(752,393,cs),
(757,395,o),
(759,399,o),
(759,404,cs),
(759,418,o),
(726,417,o),
(676,417,cs),
(625,417,o),
(589,416,o),
(568,414,cs),
(547,411,o),
(537,407,o),
(537,401,cs),
(537,394,o),
(546,390,o),
(561,390,cs),
(596,390,ls),
(611,390,o),
(618,384,o),
(618,373,cs),
(618,361,o),
(611,336,o),
(598,297,cs),
(582,249,o),
(553,173,o),
(501,50,c),
(460,198,o),
(432,297,o),
(418,348,cs),
(407,383,o),
(400,405,o),
(397,413,cs),
(390,429,o),
(383,433,o),
(374,433,cs),
(363,433,o),
(354,428,o),
(347,413,cs),
(341,400,o),
(333,373,o),
(321,333,cs),
(306,284,o),
(283,206,o),
(246,78,c),
(165,294,o),
(128,411,o),
(128,428,cs),
(128,435,o),
(133,438,o),
(142,438,cs),
(180,438,ls),
(205,438,o),
(217,443,o),
(217,453,cs),
(217,458,o),
(213,461,o),
(206,463,cs),
(198,464,o),
(184,465,o),
(165,465,cs),
(41,465,ls),
(20,465,o),
(5,464,o),
(-2,463,cs),
(-10,461,o),
(-14,458,o),
(-14,453,cs),
(-14,448,o),
(-10,445,o),
(-2,442,cs),
(5,439,o),
(18,438,o),
(37,438,cs),
(68,438,o),
(76,431,o),
(85,408,cs),
(222,32,ls),
(229,15,o),
(238,8,o),
(246,8,cs),
(254,8,o),
(263,14,o),
(267,29,cs),
(371,375,l),
(474,3,ls),
(478,-10,o),
(485,-17,o),
(495,-17,cs)
);
},
{
closed = 1;
nodes = (
(286,533,o),
(308,543,o),
(308,579,cs),
(308,602,o),
(293,616,o),
(274,616,cs),
(246,616,o),
(233,589,o),
(233,575,cs),
(233,551,o),
(248,533,o),
(267,533,cs)
);
},
{
closed = 1;
nodes = (
(493,510,o),
(515,520,o),
(515,556,cs),
(515,579,o),
(500,593,o),
(481,593,cs),
(453,593,o),
(440,566,o),
(440,552,cs),
(440,528,o),
(455,510,o),
(474,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
69 38 0 3 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 9 0 10 12 9 10 91 0 11 0 12 6 11 12 91 7 1 5 5 6 83 0 6 6 23 67 0 8 8 15 67 2 1 0 0 1 83 0 1 1 15 67 0 4 4 13 67 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 8 5 1 5 8 1 104 0 9 0 10 12 9 10 91 0 11 0 12 6 11 12 91 0 6 7 1 5 8 6 5 91 0 1 2 1 0 4 1 0 91 0 4 4 13 67 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
111 109 105 103 97 95 91 89 45 51 52 37 37 43 37 52 54 13 24
CALL[ ]	/* CallFunction */";
};
width = 748;
}
);
note = wdieresis;
unicode = 7813;
},
{
glyphname = wgrave;
kernLeft = w;
kernRight = w;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(543,-17,o),
(560,-4,o),
(570,23,cs),
(609,123,o),
(639,202,o),
(662,259,cs),
(684,316,o),
(698,346,o),
(703,349,c),
(706,352,o),
(711,355,o),
(717,357,cs),
(722,358,o),
(733,359,o),
(748,359,cs),
(775,359,o),
(805,361,o),
(805,388,cs),
(805,409,o),
(791,420,o),
(674,420,cs),
(588,420,o),
(558,411,o),
(558,383,cs),
(558,364,o),
(567,359,o),
(578,359,cs),
(583,359,ls),
(594,359,o),
(599,355,o),
(599,348,cs),
(599,339,o),
(583,292,o),
(563,233,cs),
(539,164,o),
(526,127,o),
(526,122,c),
(515,169,o),
(476,334,o),
(465,387,cs),
(457,420,o),
(442,435,o),
(413,435,cs),
(380,435,o),
(359,419,o),
(350,388,cs),
(339,354,o),
(305,252,o),
(266,131,c),
(220,273,o),
(186,383,o),
(186,396,cs),
(186,403,o),
(191,406,o),
(200,406,cs),
(228,406,ls),
(252,406,o),
(266,413,o),
(266,434,cs),
(266,465,o),
(245,465,o),
(206,465,cs),
(82,465,ls),
(39,465,o),
(10,463,o),
(10,432,cs),
(10,404,o),
(43,406,o),
(73,406,cs),
(81,406,o),
(83,405,o),
(87,394,cs),
(202,62,ls),
(217,21,o),
(234,8,o),
(259,8,cs),
(287,8,o),
(305,21,o),
(314,46,cs),
(405,315,l),
(467,43,ls),
(475,6,o),
(490,-17,o),
(519,-17,cs)
);
},
{
closed = 1;
nodes = (
(452,501,o),
(474,508,o),
(474,523,cs),
(474,528,o),
(452,575,o),
(432,610,cs),
(408,650,o),
(377,689,o),
(352,689,cs),
(309,688,o),
(282,666,o),
(282,641,cs),
(282,607,o),
(399,501,o),
(437,501,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
87 54 16 3 6 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 0 1 0 106 0 1 8 1 106 4 1 2 7 6 7 2 6 104 0 10 10 15 67 0 3 3 15 67 9 1 7 7 8 83 0 8 8 23 67 0 6 6 13 67 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 0 1 0 106 0 1 8 1 106 0 10 8 3 8 10 3 104 0 3 7 8 3 7 102 4 1 2 7 6 7 2 6 104 0 8 9 1 7 2 8 7 91 0 6 6 13 67 0 5 5 21 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
95 93 81 78 53 53 37 38 38 38 60 38 34 11 24
CALL[ ]	/* CallFunction */";
};
width = 785;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(522,-17,o),
(540,-9,o),
(551,15,cs),
(603,143,o),
(637,227,o),
(658,281,cs),
(677,330,o),
(688,357,o),
(694,361,cs),
(698,364,o),
(702,367,o),
(707,368,cs),
(712,369,o),
(722,370,o),
(737,370,cs),
(764,370,o),
(793,370,o),
(793,394,cs),
(793,413,o),
(778,417,o),
(674,417,cs),
(562,417,o),
(551,405,o),
(551,388,cs),
(551,377,o),
(557,370,o),
(574,370,cs),
(584,370,ls),
(595,370,o),
(601,364,o),
(601,353,cs),
(601,334,o),
(556,198,o),
(512,95,c),
(479,227,o),
(453,345,o),
(447,370,cs),
(437,414,o),
(443,386,o),
(436,413,c),
(424,429,o),
(413,433,o),
(398,433,cs),
(381,433,o),
(367,428,o),
(356,413,c),
(351,402,o),
(341,370,o),
(326,319,cs),
(310,268,o),
(287,198,o),
(258,111,c),
(200,271,o),
(156,395,o),
(156,408,cs),
(156,415,o),
(161,418,o),
(170,418,cs),
(208,418,ls),
(233,418,o),
(246,426,o),
(246,441,cs),
(246,452,o),
(241,459,o),
(232,462,cs),
(223,464,o),
(208,465,o),
(189,465,cs),
(65,465,ls),
(44,465,o),
(28,464,o),
(17,461,cs),
(6,458,o),
(0,451,o),
(0,440,cs),
(0,429,o),
(6,422,o),
(19,421,cs),
(31,419,o),
(46,418,o),
(65,418,cs),
(77,418,o),
(80,416,o),
(83,408,cs),
(216,32,l),
(229,15,o),
(236,8,o),
(255,8,cs),
(274,8,o),
(284,12,o),
(291,29,cs),
(394,345,l),
(469,28,ls),
(478,-9,o),
(488,-17,o),
(511,-17,cs)
);
},
{
closed = 1;
nodes = (
(442,504,o),
(456,509,o),
(456,522,cs),
(456,528,o),
(441,557,o),
(415,600,cs),
(392,636,o),
(363,670,o),
(345,670,cs),
(314,670,o),
(296,655,o),
(296,632,cs),
(296,603,o),
(401,504,o),
(431,504,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
88 57 18 3 6 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 0 1 0 106 0 1 8 1 106 0 10 10 15 67 9 1 7 7 8 83 0 8 8 23 67 4 1 2 2 3 83 0 3 3 15 67 0 6 6 13 67 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 0 1 0 106 0 1 8 1 106 0 10 8 7 8 10 7 104 0 8 9 1 7 3 8 7 91 0 3 4 1 2 6 3 2 91 0 6 6 13 67 0 5 5 21 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
95 93 82 79 52 37 38 41 37 54 58 40 34 11 24
CALL[ ]	/* CallFunction */";
};
width = 770;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(506,-17,o),
(516,-9,o),
(527,15,cs),
(591,172,o),
(632,278,o),
(652,325,cs),
(665,356,o),
(672,375,o),
(681,381,cs),
(686,384,o),
(690,387,o),
(695,388,cs),
(699,389,o),
(709,390,o),
(724,390,cs),
(737,390,o),
(747,391,o),
(752,393,cs),
(757,395,o),
(759,399,o),
(759,404,cs),
(759,418,o),
(726,417,o),
(676,417,cs),
(625,417,o),
(589,416,o),
(568,414,cs),
(547,411,o),
(537,407,o),
(537,401,cs),
(537,394,o),
(546,390,o),
(561,390,cs),
(596,390,ls),
(611,390,o),
(618,384,o),
(618,373,cs),
(618,361,o),
(611,336,o),
(598,297,cs),
(582,249,o),
(553,173,o),
(501,50,c),
(460,198,o),
(432,297,o),
(418,348,cs),
(407,383,o),
(400,405,o),
(397,413,cs),
(390,429,o),
(383,433,o),
(374,433,cs),
(363,433,o),
(354,428,o),
(347,413,cs),
(341,400,o),
(333,373,o),
(321,333,cs),
(306,284,o),
(283,206,o),
(246,78,c),
(165,294,o),
(128,411,o),
(128,428,cs),
(128,435,o),
(133,438,o),
(142,438,cs),
(180,438,ls),
(205,438,o),
(217,443,o),
(217,453,cs),
(217,458,o),
(213,461,o),
(206,463,cs),
(198,464,o),
(184,465,o),
(165,465,cs),
(41,465,ls),
(20,465,o),
(5,464,o),
(-2,463,cs),
(-10,461,o),
(-14,458,o),
(-14,453,cs),
(-14,448,o),
(-10,445,o),
(-2,442,cs),
(5,439,o),
(18,438,o),
(37,438,cs),
(68,438,o),
(76,431,o),
(85,408,cs),
(222,32,ls),
(229,15,o),
(238,8,o),
(246,8,cs),
(254,8,o),
(263,14,o),
(267,29,cs),
(371,375,l),
(474,3,ls),
(478,-10,o),
(485,-17,o),
(495,-17,cs)
);
},
{
closed = 1;
nodes = (
(427,510,o),
(430,514,o),
(430,521,cs),
(430,546,o),
(355,640,o),
(335,640,cs),
(324,640,o),
(316,637,o),
(316,618,cs),
(316,597,o),
(403,510,o),
(422,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
69 38 0 3 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 9 10 9 106 0 10 6 10 106 7 1 5 5 6 83 0 6 6 23 67 0 8 8 15 67 2 1 0 0 1 83 0 1 1 15 67 0 4 4 13 67 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 9 10 9 106 0 10 6 10 106 0 8 5 1 5 8 1 104 0 6 7 1 5 8 6 5 91 0 1 2 1 0 4 1 0 91 0 4 4 13 67 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
96 94 89 87 45 51 52 37 37 43 37 52 54 11 24
CALL[ ]	/* CallFunction */";
};
width = 748;
}
);
note = wgrave;
unicode = 7809;
},
{
glyphname = x;
kernLeft = x;
kernRight = x;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(329,-28,o),
(342,-28,o),
(355,-27,cs),
(368,-27,o),
(380,-27,o),
(391,-27,cs),
(406,-27,o),
(420,-27,o),
(432,-27,cs),
(443,-28,o),
(457,-28,o),
(474,-28,cs),
(497,-28,o),
(524,-24,o),
(524,4,cs),
(524,29,o),
(515,39,o),
(445,44,cs),
(406,47,o),
(400,54,o),
(288,208,c),
(326,263,o),
(353,296,o),
(361,308,c),
(383,333,o),
(394,333,o),
(475,338,cs),
(522,341,o),
(527,355,o),
(527,375,cs),
(527,388,o),
(523,396,o),
(515,401,cs),
(506,406,o),
(489,408,o),
(464,408,cs),
(290,408,ls),
(259,408,o),
(244,395,o),
(244,368,cs),
(244,349,o),
(251,344,o),
(256,340,cs),
(260,337,o),
(264,335,o),
(269,335,cs),
(274,334,o),
(276,333,o),
(276,332,cs),
(276,331,o),
(276,329,o),
(275,328,cs),
(274,326,o),
(272,323,o),
(269,318,cs),
(238,274,l),
(217,302,o),
(203,323,o),
(196,336,cs),
(189,349,o),
(186,357,o),
(186,361,cs),
(186,375,o),
(221,374,o),
(221,403,cs),
(221,424,o),
(215,447,o),
(176,447,cs),
(62,447,ls),
(1,447,o),
(-12,436,o),
(-12,408,cs),
(-12,380,o),
(16,376,o),
(60,372,cs),
(78,369,o),
(78,370,o),
(101,336,cs),
(190,207,l),
(176,187,o),
(151,154,o),
(106,95,cs),
(83,64,o),
(7,82,o),
(7,39,cs),
(7,1,o),
(49,1,o),
(63,1,cs),
(72,1,o),
(81,1,o),
(89,2,cs),
(97,2,o),
(108,2,o),
(123,2,cs),
(146,2,o),
(173,0,o),
(196,0,cs),
(211,0,o),
(232,8,o),
(232,35,cs),
(232,51,o),
(225,61,o),
(211,64,cs),
(201,67,o),
(196,70,o),
(196,74,cs),
(196,79,o),
(201,88,o),
(211,101,cs),
(220,114,o),
(230,128,o),
(239,145,c),
(270,101,o),
(293,67,o),
(293,57,cs),
(293,53,o),
(291,50,o),
(287,48,cs),
(283,45,o),
(278,42,o),
(273,39,cs),
(259,31,o),
(252,18,o),
(252,1,cs),
(252,-10,o),
(257,-17,o),
(266,-21,cs),
(275,-26,o),
(292,-28,o),
(318,-28,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
98 69 41 8 4 4 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 2 0 3 4 2 3 91 0 1 1 15 67 0 0 0 13 67 0 4 4 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 2 0 3 4 2 3 91 0 1 1 0 83 0 0 0 13 67 0 4 4 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 2 0 3 4 2 3 91 0 4 0 5 4 5 87 0 1 1 0 83 0 0 0 13 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
118 110 103 102 89 87 83 80 57 54 28 17 6 15
CALL[ ]	/* CallFunction */";
};
width = 559;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(354,-28,o),
(365,-28,o),
(375,-27,cs),
(384,-27,o),
(395,-27,o),
(406,-27,cs),
(421,-27,o),
(435,-27,o),
(447,-27,cs),
(458,-28,o),
(472,-28,o),
(489,-28,cs),
(509,-28,o),
(532,-28,o),
(532,-1,cs),
(532,15,o),
(514,22,o),
(493,23,cs),
(469,24,o),
(455,25,o),
(434,32,cs),
(412,39,o),
(362,109,o),
(290,208,c),
(304,227,o),
(317,246,o),
(328,264,cs),
(339,281,o),
(353,300,o),
(370,319,cs),
(381,332,o),
(393,341,o),
(404,345,cs),
(411,348,o),
(423,350,o),
(440,351,cs),
(456,352,o),
(478,352,o),
(506,352,cs),
(519,352,o),
(528,367,o),
(528,375,cs),
(528,396,o),
(520,407,o),
(505,407,cs),
(321,407,ls),
(296,407,o),
(277,400,o),
(277,377,cs),
(277,361,o),
(293,356,o),
(298,353,cs),
(301,351,o),
(303,349,o),
(303,347,cs),
(303,344,o),
(301,338,o),
(296,330,cs),
(291,321,o),
(284,311,o),
(276,298,cs),
(251,261,l),
(201,327,o),
(176,370,o),
(176,375,cs),
(176,380,o),
(179,382,o),
(185,383,cs),
(190,384,o),
(198,384,o),
(207,384,cs),
(228,384,o),
(240,399,o),
(240,411,cs),
(240,426,o),
(239,443,o),
(184,443,cs),
(69,443,ls),
(38,443,o),
(17,441,o),
(7,437,cs),
(-3,432,o),
(-8,425,o),
(-8,414,cs),
(-8,393,o),
(11,389,o),
(50,386,cs),
(79,383,o),
(91,379,o),
(112,350,cs),
(213,207,l),
(189,175,o),
(190,174,o),
(118,81,cs),
(107,68,o),
(95,63,o),
(76,59,c),
(48,56,o),
(15,52,o),
(15,29,cs),
(15,3,o),
(42,1,o),
(57,1,cs),
(66,1,o),
(78,1,o),
(92,2,cs),
(106,2,o),
(120,2,o),
(135,2,cs),
(158,2,o),
(185,0,o),
(208,0,cs),
(225,0,o),
(251,3,o),
(251,26,cs),
(251,31,o),
(248,36,o),
(243,43,cs),
(238,49,o),
(225,52,o),
(204,52,cs),
(195,52,o),
(190,53,o),
(189,55,cs),
(187,57,o),
(186,59,o),
(186,62,cs),
(186,67,o),
(199,86,o),
(206,94,cs),
(213,104,o),
(220,113,o),
(226,121,cs),
(232,129,o),
(241,141,o),
(252,156,c),
(256,151,o),
(329,55,o),
(329,41,cs),
(329,29,o),
(323,30,o),
(312,27,cs),
(300,24,o),
(296,10,o),
(296,2,cs),
(296,-3,o),
(300,-10,o),
(307,-17,cs),
(314,-24,o),
(326,-28,o),
(343,-28,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
80 1 6 2 100 74 47 8 4 0 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 5 0 6 0 5 6 91 4 1 2 2 3 83 0 3 3 15 67 0 0 0 1 83 0 1 1 13 67 0 7 7 8 83 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 3 4 1 2 6 3 2 91 0 5 0 6 0 5 6 91 0 0 0 1 83 0 1 1 13 67 0 7 7 8 83 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 3 4 1 2 6 3 2 91 0 5 0 6 0 5 6 91 0 7 0 8 7 8 87 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
121 113 109 107 94 91 88 85 67 65 59 56 52 51 32 22 18 16 9 15
CALL[ ]	/* CallFunction */";
};
width = 555;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(376,-28,o),
(387,-28,o),
(397,-27,cs),
(406,-27,o),
(417,-27,o),
(428,-27,cs),
(443,-27,o),
(457,-27,o),
(469,-27,cs),
(480,-28,o),
(494,-28,o),
(511,-28,cs),
(521,-28,o),
(529,-27,o),
(535,-26,cs),
(541,-25,o),
(544,-22,o),
(544,-19,cs),
(544,-12,o),
(534,-8,o),
(515,-7,cs),
(491,-6,o),
(477,-5,o),
(456,2,cs),
(438,8,o),
(387,78,o),
(293,208,c),
(326,254,o),
(349,289,o),
(396,348,cs),
(407,361,o),
(419,370,o),
(430,374,cs),
(447,380,o),
(458,381,o),
(508,381,cs),
(523,381,o),
(530,385,o),
(530,394,cs),
(530,402,o),
(522,406,o),
(507,406,cs),
(347,406,ls),
(324,406,o),
(308,405,o),
(300,404,cs),
(292,403,o),
(288,400,o),
(288,396,cs),
(288,391,o),
(291,387,o),
(296,386,cs),
(301,384,o),
(311,383,o),
(324,382,cs),
(339,381,o),
(349,381,o),
(353,380,cs),
(357,379,o),
(359,376,o),
(359,371,cs),
(359,363,o),
(347,347,o),
(332,327,cs),
(270,239,l),
(201,330,o),
(162,395,o),
(162,398,cs),
(162,403,o),
(165,405,o),
(171,406,cs),
(177,407,o),
(190,407,o),
(209,407,cs),
(228,407,o),
(241,415,o),
(242,424,cs),
(242,429,o),
(237,432,o),
(228,434,cs),
(219,435,o),
(199,436,o),
(170,436,cs),
(79,436,ls),
(48,436,o),
(26,435,o),
(15,434,cs),
(4,433,o),
(-2,429,o),
(-2,424,cs),
(-2,419,o),
(1,416,o),
(6,414,cs),
(11,411,o),
(21,410,o),
(36,409,cs),
(85,406,o),
(104,405,o),
(128,373,cs),
(246,207,l),
(207,155,o),
(195,134,o),
(132,53,cs),
(121,38,o),
(103,33,o),
(68,29,cs),
(41,26,o),
(27,21,o),
(27,13,cs),
(27,5,o),
(34,1,o),
(49,1,cs),
(58,1,o),
(70,1,o),
(84,2,cs),
(98,2,o),
(112,2,o),
(127,2,cs),
(144,2,o),
(161,2,o),
(179,1,cs),
(197,0,o),
(214,0,o),
(230,0,cs),
(245,0,o),
(253,4,o),
(253,13,cs),
(253,18,o),
(250,21,o),
(243,23,cs),
(236,24,o),
(221,25,o),
(196,25,cs),
(180,25,o),
(172,28,o),
(172,35,cs),
(172,40,o),
(175,47,o),
(181,55,cs),
(198,78,o),
(214,100,o),
(229,121,cs),
(244,142,o),
(257,160,o),
(270,175,c),
(306,126,o),
(334,88,o),
(353,61,cs),
(372,34,o),
(381,17,o),
(381,11,cs),
(381,-1,o),
(373,-2,o),
(364,-3,cs),
(345,-5,o),
(332,-7,o),
(327,-10,cs),
(321,-13,o),
(318,-16,o),
(318,-20,cs),
(318,-23,o),
(322,-25,o),
(329,-26,cs),
(336,-27,o),
(348,-28,o),
(365,-28,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
52 1 2 3 93 63 36 6 4 0 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 6 7 1 5 0 6 5 91 4 1 2 2 3 83 0 3 3 15 67 0 0 0 1 83 0 1 1 13 67 0 8 8 9 83 0 9 9 21 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 4 1 2 6 3 2 91 0 6 7 1 5 0 6 5 91 0 0 0 1 83 0 1 1 13 67 0 8 8 9 83 0 9 9 21 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 3 4 1 2 6 3 2 91 0 6 7 1 5 0 6 5 91 0 8 0 9 8 9 87 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
113 105 102 100 84 80 78 75 71 69 56 54 50 47 43 41 131 44 10 17
CALL[ ]	/* CallFunction */";
};
width = 550;
}
);
note = x;
unicode = 120;
},
{
glyphname = y;
kernLeft = y;
kernRight = y;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(264,-196,o),
(312,-165,o),
(345,-124,cs),
(370,-94,o),
(395,-41,o),
(424,44,cs),
(519,313,ls),
(524,328,o),
(529,336,o),
(544,337,cs),
(574,340,o),
(613,347,o),
(613,375,cs),
(613,402,o),
(590,411,o),
(555,411,cs),
(393,411,ls),
(366,411,o),
(343,404,o),
(343,375,cs),
(343,356,o),
(351,345,o),
(380,341,cs),
(396,339,o),
(407,336,o),
(413,333,cs),
(419,329,o),
(422,324,o),
(422,319,cs),
(422,310,o),
(419,297,o),
(414,282,cs),
(354,90,l),
(238,299,ls),
(231,312,o),
(226,322,o),
(224,327,cs),
(221,332,o),
(220,337,o),
(220,342,cs),
(220,347,o),
(223,351,o),
(230,352,cs),
(271,360,o),
(287,372,o),
(287,392,cs),
(287,413,o),
(276,428,o),
(235,428,cs),
(81,428,ls),
(38,428,o),
(19,423,o),
(19,390,cs),
(19,379,o),
(23,370,o),
(31,365,cs),
(39,359,o),
(56,355,o),
(81,352,cs),
(114,349,o),
(122,343,o),
(133,324,cs),
(319,-12,l),
(310,-40,o),
(297,-71,o),
(272,-98,cs),
(253,-117,o),
(237,-127,o),
(205,-127,cs),
(165,-127,o),
(149,-112,o),
(149,-85,cs),
(149,-72,o),
(153,-71,o),
(160,-68,c),
(199,-57,o),
(209,-38,o),
(209,-13,cs),
(209,11,o),
(189,27,o),
(162,27,cs),
(115,27,o),
(75,-16,o),
(75,-85,cs),
(75,-150,o),
(115,-196,o),
(196,-196,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
32 1 4 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 2 1 4 1 2 4 104 0 4 0 1 4 0 102 0 1 1 15 67 0 0 0 3 84 0 3 3 17 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 1 2 1 106 0 2 4 2 106 0 4 0 4 106 0 0 3 3 0 79 0 0 0 3 84 0 3 0 3 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
72 70 66 64 46 43 62 34 5 17
CALL[ ]	/* CallFunction */";
};
width = 621;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(237,-183,o),
(278,-163,o),
(317,-118,cs),
(349,-81,o),
(372,-28,o),
(397,44,cs),
(499,331,ls),
(507,352,o),
(513,354,o),
(545,355,cs),
(572,356,o),
(600,360,o),
(600,383,cs),
(600,404,o),
(574,411,o),
(545,411,cs),
(377,411,ls),
(346,411,o),
(341,406,o),
(341,383,cs),
(341,368,o),
(354,355,o),
(386,355,cs),
(402,355,o),
(412,354,o),
(417,351,cs),
(421,348,o),
(423,343,o),
(423,338,cs),
(423,328,o),
(420,315,o),
(415,300,cs),
(340,68,l),
(202,327,ls),
(195,340,o),
(193,355,o),
(193,359,cs),
(193,372,o),
(198,372,o),
(205,372,cs),
(232,372,o),
(239,386,o),
(239,401,cs),
(239,417,o),
(233,428,o),
(198,428,cs),
(47,428,ls),
(15,428,o),
(-14,419,o),
(-14,395,cs),
(-14,384,o),
(-7,377,o),
(6,375,cs),
(19,372,o),
(39,371,o),
(64,370,cs),
(96,370,o),
(105,367,o),
(118,343,cs),
(313,-12,l),
(296,-51,o),
(280,-80,o),
(259,-99,cs),
(242,-115,o),
(218,-128,o),
(195,-128,cs),
(156,-128,o),
(129,-107,o),
(129,-84,cs),
(129,-75,o),
(135,-62,o),
(147,-61,cs),
(164,-61,o),
(186,-54,o),
(186,-28,cs),
(186,-8,o),
(167,2,o),
(150,2,cs),
(113,2,o),
(76,-29,o),
(76,-84,cs),
(76,-149,o),
(130,-183,o),
(184,-183,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
35 1 8 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 5 6 1 4 8 5 4 91 0 8 0 9 0 8 9 91 3 1 1 1 2 83 0 2 2 15 67 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 8 0 9 0 8 9 91 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 8 0 9 0 8 9 91 0 0 7 7 0 79 0 0 0 7 83 0 7 0 7 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
82 81 40 40 36 52 43 36 52 42 34 10 24
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(204,-183,o),
(240,-169,o),
(279,-118,cs),
(308,-81,o),
(334,-27,o),
(359,44,cs),
(471,361,ls),
(479,383,o),
(491,385,o),
(547,385,cs),
(570,386,o),
(582,390,o),
(582,397,cs),
(582,408,o),
(567,411,o),
(547,411,cs),
(379,411,ls),
(364,411,o),
(353,410,o),
(347,408,cs),
(341,406,o),
(338,402,o),
(338,397,cs),
(338,392,o),
(342,388,o),
(351,387,cs),
(360,386,o),
(372,385,o),
(388,385,cs),
(404,385,o),
(414,384,o),
(419,382,cs),
(423,379,o),
(425,375,o),
(425,368,cs),
(425,358,o),
(422,345,o),
(417,330,cs),
(320,32,l),
(148,357,ls),
(141,370,o),
(139,385,o),
(139,389,cs),
(139,402,o),
(161,402,o),
(181,402,cs),
(207,402,o),
(220,407,o),
(220,417,cs),
(220,421,o),
(217,424,o),
(210,426,cs),
(203,427,o),
(191,428,o),
(174,428,cs),
(23,428,ls),
(7,428,o),
(-4,427,o),
(-9,425,cs),
(-15,423,o),
(-18,419,o),
(-18,414,cs),
(-18,409,o),
(-15,405,o),
(-8,404,cs),
(-1,402,o),
(15,401,o),
(40,400,cs),
(72,400,o),
(81,397,o),
(94,373,cs),
(305,-12,l),
(288,-51,o),
(270,-82,o),
(254,-103,cs),
(229,-136,o),
(206,-152,o),
(171,-152,cs),
(132,-152,o),
(103,-132,o),
(103,-109,cs),
(103,-100,o),
(108,-95,o),
(119,-93,cs),
(134,-92,o),
(156,-87,o),
(156,-58,cs),
(156,-33,o),
(139,-28,o),
(126,-28,cs),
(97,-28,o),
(69,-51,o),
(69,-96,cs),
(69,-152,o),
(115,-183,o),
(167,-183,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 8 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 8 4 0 4 8 0 104 0 5 6 1 4 8 5 4 91 3 1 1 1 2 83 0 2 2 15 67 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 8 4 0 4 8 0 104 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 8 4 0 4 8 0 104 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 7 7 0 79 0 0 0 7 83 0 7 0 7 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 41 35 52 43 35 52 42 34 9 24
CALL[ ]	/* CallFunction */";
};
width = 577;
}
);
note = y;
unicode = 121;
},
{
glyphname = yacute;
kernLeft = y;
kernRight = y;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(264,-196,o),
(312,-165,o),
(345,-124,cs),
(370,-94,o),
(395,-41,o),
(424,44,cs),
(519,313,ls),
(524,328,o),
(529,336,o),
(544,337,cs),
(574,340,o),
(613,347,o),
(613,375,cs),
(613,402,o),
(590,411,o),
(555,411,cs),
(393,411,ls),
(366,411,o),
(343,404,o),
(343,375,cs),
(343,356,o),
(351,345,o),
(380,341,cs),
(396,339,o),
(407,336,o),
(413,333,cs),
(419,329,o),
(422,324,o),
(422,319,cs),
(422,310,o),
(419,297,o),
(414,282,cs),
(354,90,l),
(238,299,ls),
(231,312,o),
(226,322,o),
(224,327,cs),
(221,332,o),
(220,337,o),
(220,342,cs),
(220,347,o),
(223,351,o),
(230,352,cs),
(271,360,o),
(287,372,o),
(287,392,cs),
(287,413,o),
(276,428,o),
(235,428,cs),
(81,428,ls),
(38,428,o),
(19,423,o),
(19,390,cs),
(19,379,o),
(23,370,o),
(31,365,cs),
(39,359,o),
(56,355,o),
(81,352,cs),
(114,349,o),
(122,343,o),
(133,324,cs),
(319,-12,l),
(310,-40,o),
(297,-71,o),
(272,-98,cs),
(253,-117,o),
(237,-127,o),
(205,-127,cs),
(165,-127,o),
(149,-112,o),
(149,-85,cs),
(149,-72,o),
(153,-71,o),
(160,-68,c),
(199,-57,o),
(209,-38,o),
(209,-13,cs),
(209,11,o),
(189,27,o),
(162,27,cs),
(115,27,o),
(75,-16,o),
(75,-85,cs),
(75,-150,o),
(115,-196,o),
(196,-196,cs)
);
},
{
closed = 1;
nodes = (
(272,500,o),
(307,523,o),
(346,557,cs),
(381,588,o),
(410,622,o),
(410,640,cs),
(410,665,o),
(383,687,o),
(340,688,cs),
(315,688,o),
(284,649,o),
(260,609,cs),
(240,574,o),
(218,527,o),
(218,522,cs),
(218,507,o),
(240,500,o),
(255,500,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
50 1 6 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 3 0 106 0 4 3 6 3 4 6 104 0 6 2 3 6 2 102 0 3 3 15 67 0 2 2 5 84 0 5 5 17 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 3 0 106 0 3 4 3 106 0 4 6 4 106 0 6 2 6 106 0 2 5 5 2 79 0 2 2 5 84 0 5 2 5 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
90 88 84 82 64 61 62 36 38 38 7 19
CALL[ ]	/* CallFunction */";
};
width = 621;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(237,-183,o),
(278,-163,o),
(317,-118,cs),
(349,-81,o),
(372,-28,o),
(397,44,cs),
(499,331,ls),
(507,352,o),
(513,354,o),
(545,355,cs),
(572,356,o),
(600,360,o),
(600,383,cs),
(600,404,o),
(574,411,o),
(545,411,cs),
(377,411,ls),
(346,411,o),
(341,406,o),
(341,383,cs),
(341,368,o),
(354,355,o),
(386,355,cs),
(402,355,o),
(412,354,o),
(417,351,cs),
(421,348,o),
(423,343,o),
(423,338,cs),
(423,328,o),
(420,315,o),
(415,300,cs),
(340,68,l),
(202,327,ls),
(195,340,o),
(193,355,o),
(193,359,cs),
(193,372,o),
(198,372,o),
(205,372,cs),
(232,372,o),
(239,386,o),
(239,401,cs),
(239,417,o),
(233,428,o),
(198,428,cs),
(47,428,ls),
(15,428,o),
(-14,419,o),
(-14,395,cs),
(-14,384,o),
(-7,377,o),
(6,375,cs),
(19,372,o),
(39,371,o),
(64,370,cs),
(96,370,o),
(105,367,o),
(118,343,cs),
(313,-12,l),
(296,-51,o),
(280,-80,o),
(259,-99,cs),
(242,-115,o),
(218,-128,o),
(195,-128,cs),
(156,-128,o),
(129,-107,o),
(129,-84,cs),
(129,-75,o),
(135,-62,o),
(147,-61,cs),
(164,-61,o),
(186,-54,o),
(186,-28,cs),
(186,-8,o),
(167,2,o),
(150,2,cs),
(113,2,o),
(76,-29,o),
(76,-84,cs),
(76,-149,o),
(130,-183,o),
(184,-183,cs)
);
},
{
closed = 1;
nodes = (
(278,504,o),
(383,603,o),
(383,632,cs),
(383,655,o),
(365,670,o),
(334,670,cs),
(316,670,o),
(287,636,o),
(264,600,cs),
(238,560,o),
(223,526,o),
(223,522,cs),
(223,509,o),
(237,504,o),
(248,504,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
53 1 10 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 4 0 106 0 7 8 1 6 10 7 6 91 0 10 0 11 2 10 11 91 5 1 3 3 4 83 0 4 4 15 67 0 2 2 9 83 0 9 9 17 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 106 0 0 4 0 106 0 4 5 1 3 6 4 3 91 0 7 8 1 6 10 7 6 91 0 10 0 11 2 10 11 91 0 2 2 9 83 0 9 9 17 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 1 0 1 106 0 0 4 0 106 0 4 5 1 3 6 4 3 91 0 7 8 1 6 10 7 6 91 0 10 0 11 2 10 11 91 0 2 9 9 2 79 0 2 2 9 83 0 9 2 9 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
100 99 93 91 83 81 36 52 43 36 52 42 36 40 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(204,-183,o),
(240,-169,o),
(279,-118,cs),
(308,-81,o),
(334,-27,o),
(359,44,cs),
(471,361,ls),
(479,383,o),
(491,385,o),
(547,385,cs),
(570,386,o),
(582,390,o),
(582,397,cs),
(582,408,o),
(567,411,o),
(547,411,cs),
(379,411,ls),
(364,411,o),
(353,410,o),
(347,408,cs),
(341,406,o),
(338,402,o),
(338,397,cs),
(338,392,o),
(342,388,o),
(351,387,cs),
(360,386,o),
(372,385,o),
(388,385,cs),
(404,385,o),
(414,384,o),
(419,382,cs),
(423,379,o),
(425,375,o),
(425,368,cs),
(425,358,o),
(422,345,o),
(417,330,cs),
(320,32,l),
(148,357,ls),
(141,370,o),
(139,385,o),
(139,389,cs),
(139,402,o),
(161,402,o),
(181,402,cs),
(207,402,o),
(220,407,o),
(220,417,cs),
(220,421,o),
(217,424,o),
(210,426,cs),
(203,427,o),
(191,428,o),
(174,428,cs),
(23,428,ls),
(7,428,o),
(-4,427,o),
(-9,425,cs),
(-15,423,o),
(-18,419,o),
(-18,414,cs),
(-18,409,o),
(-15,405,o),
(-8,404,cs),
(-1,402,o),
(15,401,o),
(40,400,cs),
(72,400,o),
(81,397,o),
(94,373,cs),
(305,-12,l),
(288,-51,o),
(270,-82,o),
(254,-103,cs),
(229,-136,o),
(206,-152,o),
(171,-152,cs),
(132,-152,o),
(103,-132,o),
(103,-109,cs),
(103,-100,o),
(108,-95,o),
(119,-93,cs),
(134,-92,o),
(156,-87,o),
(156,-58,cs),
(156,-33,o),
(139,-28,o),
(126,-28,cs),
(97,-28,o),
(69,-51,o),
(69,-96,cs),
(69,-152,o),
(115,-183,o),
(167,-183,cs)
);
},
{
closed = 1;
nodes = (
(258,510,o),
(345,597,o),
(345,618,cs),
(345,637,o),
(337,640,o),
(326,640,cs),
(306,640,o),
(231,546,o),
(231,521,cs),
(231,514,o),
(234,510,o),
(239,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 8 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 10 9 10 106 0 9 2 9 106 0 8 4 0 4 8 0 104 0 5 6 1 4 8 5 4 91 3 1 1 1 2 83 0 2 2 15 67 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 10 9 10 106 0 9 2 9 106 0 8 4 0 4 8 0 104 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 10 9 10 106 0 9 2 9 106 0 8 4 0 4 8 0 104 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 7 7 0 79 0 0 0 7 83 0 7 0 7 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
92 90 85 83 38 41 35 52 43 35 52 42 34 11 24
CALL[ ]	/* CallFunction */";
};
width = 577;
}
);
note = yacute;
unicode = 253;
},
{
glyphname = ycircumflex;
kernLeft = y;
kernRight = y;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(264,-196,o),
(312,-165,o),
(345,-124,cs),
(370,-94,o),
(395,-41,o),
(424,44,cs),
(519,313,ls),
(524,328,o),
(529,336,o),
(544,337,cs),
(574,340,o),
(613,347,o),
(613,375,cs),
(613,402,o),
(590,411,o),
(555,411,cs),
(393,411,ls),
(366,411,o),
(343,404,o),
(343,375,cs),
(343,356,o),
(351,345,o),
(380,341,cs),
(396,339,o),
(407,336,o),
(413,333,cs),
(419,329,o),
(422,324,o),
(422,319,cs),
(422,310,o),
(419,297,o),
(414,282,cs),
(354,90,l),
(238,299,ls),
(231,312,o),
(226,322,o),
(224,327,cs),
(221,332,o),
(220,337,o),
(220,342,cs),
(220,347,o),
(223,351,o),
(230,352,cs),
(271,360,o),
(287,372,o),
(287,392,cs),
(287,413,o),
(276,428,o),
(235,428,cs),
(81,428,ls),
(38,428,o),
(19,423,o),
(19,390,cs),
(19,379,o),
(23,370,o),
(31,365,cs),
(39,359,o),
(56,355,o),
(81,352,cs),
(114,349,o),
(122,343,o),
(133,324,cs),
(319,-12,l),
(310,-40,o),
(297,-71,o),
(272,-98,cs),
(253,-117,o),
(237,-127,o),
(205,-127,cs),
(165,-127,o),
(149,-112,o),
(149,-85,cs),
(149,-72,o),
(153,-71,o),
(160,-68,c),
(199,-57,o),
(209,-38,o),
(209,-13,cs),
(209,11,o),
(189,27,o),
(162,27,cs),
(115,27,o),
(75,-16,o),
(75,-85,cs),
(75,-150,o),
(115,-196,o),
(196,-196,cs)
);
},
{
closed = 1;
nodes = (
(195,510,o),
(253,546,o),
(302,572,c),
(374,534,o),
(411,510,o),
(422,510,cs),
(431,510,o),
(435,520,o),
(435,531,cs),
(435,572,o),
(326,664,o),
(302,664,cs),
(291,664,o),
(256,639,o),
(229,614,cs),
(198,585,o),
(170,549,o),
(170,524,cs),
(170,517,o),
(175,510,o),
(183,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
85 1 5 7 32 1 4 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 7 5 7 106 6 8 2 5 1 5 106 0 2 1 4 1 2 4 104 0 4 0 1 4 0 102 0 1 1 15 67 0 0 0 3 84 0 3 3 17 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 7 5 7 106 6 8 2 5 1 5 106 0 1 2 1 106 0 2 4 2 106 0 4 0 4 106 0 0 3 3 0 79 0 0 0 3 84 0 3 0 3 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
81 80 99 97 91 89 80 105 81 105 72 70 66 64 46 43 62 34 9 17
CALL[ ]	/* CallFunction */";
};
width = 621;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(237,-183,o),
(278,-163,o),
(317,-118,cs),
(349,-81,o),
(372,-28,o),
(397,44,cs),
(499,331,ls),
(507,352,o),
(513,354,o),
(545,355,cs),
(572,356,o),
(600,360,o),
(600,383,cs),
(600,404,o),
(574,411,o),
(545,411,cs),
(377,411,ls),
(346,411,o),
(341,406,o),
(341,383,cs),
(341,368,o),
(354,355,o),
(386,355,cs),
(402,355,o),
(412,354,o),
(417,351,cs),
(421,348,o),
(423,343,o),
(423,338,cs),
(423,328,o),
(420,315,o),
(415,300,cs),
(340,68,l),
(202,327,ls),
(195,340,o),
(193,355,o),
(193,359,cs),
(193,372,o),
(198,372,o),
(205,372,cs),
(232,372,o),
(239,386,o),
(239,401,cs),
(239,417,o),
(233,428,o),
(198,428,cs),
(47,428,ls),
(15,428,o),
(-14,419,o),
(-14,395,cs),
(-14,384,o),
(-7,377,o),
(6,375,cs),
(19,372,o),
(39,371,o),
(64,370,cs),
(96,370,o),
(105,367,o),
(118,343,cs),
(313,-12,l),
(296,-51,o),
(280,-80,o),
(259,-99,cs),
(242,-115,o),
(218,-128,o),
(195,-128,cs),
(156,-128,o),
(129,-107,o),
(129,-84,cs),
(129,-75,o),
(135,-62,o),
(147,-61,cs),
(164,-61,o),
(186,-54,o),
(186,-28,cs),
(186,-8,o),
(167,2,o),
(150,2,cs),
(113,2,o),
(76,-29,o),
(76,-84,cs),
(76,-149,o),
(130,-183,o),
(184,-183,cs)
);
},
{
closed = 1;
nodes = (
(192,510,o),
(223,538,o),
(296,581,c),
(309,573,o),
(403,510,o),
(416,510,cs),
(424,510,o),
(427,518,o),
(427,527,cs),
(427,562,o),
(321,655,o),
(296,655,cs),
(274,655,o),
(166,564,o),
(166,523,cs),
(166,514,o),
(170,510,o),
(177,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
91 1 10 12 36 1 8 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 12 10 12 106 11 13 2 10 2 10 106 0 5 6 1 4 8 5 4 91 0 8 0 9 0 8 9 91 3 1 1 1 2 83 0 2 2 15 67 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 12 10 12 106 11 13 2 10 2 10 106 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 8 0 9 0 8 9 91 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 12 10 12 106 11 13 2 10 2 10 106 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 8 0 9 0 8 9 91 0 0 7 7 0 79 0 0 0 7 83 0 7 0 7 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
87 86 104 102 97 95 86 110 87 110 83 82 40 40 36 52 43 36 52 42 35 14 35
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(204,-183,o),
(240,-169,o),
(279,-118,cs),
(308,-81,o),
(334,-27,o),
(359,44,cs),
(471,361,ls),
(479,383,o),
(491,385,o),
(547,385,cs),
(570,386,o),
(582,390,o),
(582,397,cs),
(582,408,o),
(567,411,o),
(547,411,cs),
(379,411,ls),
(364,411,o),
(353,410,o),
(347,408,cs),
(341,406,o),
(338,402,o),
(338,397,cs),
(338,392,o),
(342,388,o),
(351,387,cs),
(360,386,o),
(372,385,o),
(388,385,cs),
(404,385,o),
(414,384,o),
(419,382,cs),
(423,379,o),
(425,375,o),
(425,368,cs),
(425,358,o),
(422,345,o),
(417,330,cs),
(320,32,l),
(148,357,ls),
(141,370,o),
(139,385,o),
(139,389,cs),
(139,402,o),
(161,402,o),
(181,402,cs),
(207,402,o),
(220,407,o),
(220,417,cs),
(220,421,o),
(217,424,o),
(210,426,cs),
(203,427,o),
(191,428,o),
(174,428,cs),
(23,428,ls),
(7,428,o),
(-4,427,o),
(-9,425,cs),
(-15,423,o),
(-18,419,o),
(-18,414,cs),
(-18,409,o),
(-15,405,o),
(-8,404,cs),
(-1,402,o),
(15,401,o),
(40,400,cs),
(72,400,o),
(81,397,o),
(94,373,cs),
(305,-12,l),
(288,-51,o),
(270,-82,o),
(254,-103,cs),
(229,-136,o),
(206,-152,o),
(171,-152,cs),
(132,-152,o),
(103,-132,o),
(103,-109,cs),
(103,-100,o),
(108,-95,o),
(119,-93,cs),
(134,-92,o),
(156,-87,o),
(156,-58,cs),
(156,-33,o),
(139,-28,o),
(126,-28,cs),
(97,-28,o),
(69,-51,o),
(69,-96,cs),
(69,-152,o),
(115,-183,o),
(167,-183,cs)
);
},
{
closed = 1;
nodes = (
(183,510,o),
(235,559,o),
(288,596,c),
(364,542,o),
(393,510,o),
(408,510,cs),
(413,510,o),
(416,514,o),
(416,521,cs),
(416,546,o),
(313,640,o),
(288,640,cs),
(265,640,o),
(161,546,o),
(161,521,cs),
(161,514,o),
(164,510,o),
(169,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
84 1 9 11 34 1 8 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 11 9 11 106 10 12 2 9 2 9 106 0 8 4 0 4 8 0 104 0 5 6 1 4 8 5 4 91 3 1 1 1 2 83 0 2 2 15 67 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 11 9 11 106 10 12 2 9 2 9 106 0 8 4 0 4 8 0 104 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 11 9 11 106 10 12 2 9 2 9 106 0 8 4 0 4 8 0 104 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 7 7 0 79 0 0 0 7 83 0 7 0 7 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
80 79 97 95 90 88 79 102 80 102 38 41 35 52 43 35 52 42 34 13 24
CALL[ ]	/* CallFunction */";
};
width = 577;
}
);
note = ycircumflex;
unicode = 375;
},
{
glyphname = ydieresis;
kernLeft = y;
kernRight = y;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(264,-196,o),
(312,-165,o),
(345,-124,cs),
(370,-94,o),
(395,-41,o),
(424,44,cs),
(519,313,ls),
(524,328,o),
(529,336,o),
(544,337,cs),
(574,340,o),
(613,347,o),
(613,375,cs),
(613,402,o),
(590,411,o),
(555,411,cs),
(393,411,ls),
(366,411,o),
(343,404,o),
(343,375,cs),
(343,356,o),
(351,345,o),
(380,341,cs),
(396,339,o),
(407,336,o),
(413,333,cs),
(419,329,o),
(422,324,o),
(422,319,cs),
(422,310,o),
(419,297,o),
(414,282,cs),
(354,90,l),
(238,299,ls),
(231,312,o),
(226,322,o),
(224,327,cs),
(221,332,o),
(220,337,o),
(220,342,cs),
(220,347,o),
(223,351,o),
(230,352,cs),
(271,360,o),
(287,372,o),
(287,392,cs),
(287,413,o),
(276,428,o),
(235,428,cs),
(81,428,ls),
(38,428,o),
(19,423,o),
(19,390,cs),
(19,379,o),
(23,370,o),
(31,365,cs),
(39,359,o),
(56,355,o),
(81,352,cs),
(114,349,o),
(122,343,o),
(133,324,cs),
(319,-12,l),
(310,-40,o),
(297,-71,o),
(272,-98,cs),
(253,-117,o),
(237,-127,o),
(205,-127,cs),
(165,-127,o),
(149,-112,o),
(149,-85,cs),
(149,-72,o),
(153,-71,o),
(160,-68,c),
(199,-57,o),
(209,-38,o),
(209,-13,cs),
(209,11,o),
(189,27,o),
(162,27,cs),
(115,27,o),
(75,-16,o),
(75,-85,cs),
(75,-150,o),
(115,-196,o),
(196,-196,cs)
);
},
{
closed = 1;
nodes = (
(228,509,o),
(265,524,o),
(265,579,cs),
(265,615,o),
(237,640,o),
(205,640,cs),
(158,640,o),
(139,599,o),
(139,575,cs),
(139,536,o),
(165,509,o),
(198,509,cs)
);
},
{
closed = 1;
nodes = (
(435,486,o),
(472,501,o),
(472,556,cs),
(472,592,o),
(444,617,o),
(412,617,cs),
(365,617,o),
(346,576,o),
(346,552,cs),
(346,513,o),
(372,486,o),
(405,486,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
32 1 4 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 2 1 4 1 2 4 104 0 4 0 1 4 0 102 0 5 0 6 8 5 6 91 0 7 0 8 1 7 8 91 0 1 1 15 67 0 0 0 3 84 0 3 3 17 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 1 8 2 8 1 2 104 0 2 4 8 2 4 102 0 4 0 8 4 0 102 0 5 0 6 8 5 6 91 0 7 0 8 1 7 8 91 0 0 3 3 0 79 0 0 0 3 84 0 3 0 3 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
110 108 102 100 94 92 86 84 72 70 66 64 46 43 62 34 9 17
CALL[ ]	/* CallFunction */";
};
width = 621;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(237,-183,o),
(278,-163,o),
(317,-118,cs),
(349,-81,o),
(372,-28,o),
(397,44,cs),
(499,331,ls),
(507,352,o),
(513,354,o),
(545,355,cs),
(572,356,o),
(600,360,o),
(600,383,cs),
(600,404,o),
(574,411,o),
(545,411,cs),
(377,411,ls),
(346,411,o),
(341,406,o),
(341,383,cs),
(341,368,o),
(354,355,o),
(386,355,cs),
(402,355,o),
(412,354,o),
(417,351,cs),
(421,348,o),
(423,343,o),
(423,338,cs),
(423,328,o),
(420,315,o),
(415,300,cs),
(340,68,l),
(202,327,ls),
(195,340,o),
(193,355,o),
(193,359,cs),
(193,372,o),
(198,372,o),
(205,372,cs),
(232,372,o),
(239,386,o),
(239,401,cs),
(239,417,o),
(233,428,o),
(198,428,cs),
(47,428,ls),
(15,428,o),
(-14,419,o),
(-14,395,cs),
(-14,384,o),
(-7,377,o),
(6,375,cs),
(19,372,o),
(39,371,o),
(64,370,cs),
(96,370,o),
(105,367,o),
(118,343,cs),
(313,-12,l),
(296,-51,o),
(280,-80,o),
(259,-99,cs),
(242,-115,o),
(218,-128,o),
(195,-128,cs),
(156,-128,o),
(129,-107,o),
(129,-84,cs),
(129,-75,o),
(135,-62,o),
(147,-61,cs),
(164,-61,o),
(186,-54,o),
(186,-28,cs),
(186,-8,o),
(167,2,o),
(150,2,cs),
(113,2,o),
(76,-29,o),
(76,-84,cs),
(76,-149,o),
(130,-183,o),
(184,-183,cs)
);
},
{
closed = 1;
nodes = (
(217,518,o),
(248,531,o),
(248,579,cs),
(248,610,o),
(226,631,o),
(199,631,cs),
(161,631,o),
(143,596,o),
(143,575,cs),
(143,542,o),
(165,518,o),
(192,518,cs)
);
},
{
closed = 1;
nodes = (
(424,495,o),
(455,508,o),
(455,556,cs),
(455,587,o),
(433,608,o),
(406,608,cs),
(368,608,o),
(350,573,o),
(350,552,cs),
(350,519,o),
(372,495,o),
(399,495,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
36 1 8 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 10 0 11 13 10 11 91 0 12 0 13 2 12 13 91 0 5 6 1 4 8 5 4 91 0 8 0 9 0 8 9 91 3 1 1 1 2 83 0 2 2 15 67 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 10 0 11 13 10 11 91 0 12 0 13 2 12 13 91 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 8 0 9 0 8 9 91 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 10 0 11 13 10 11 91 0 12 0 13 2 12 13 91 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 8 0 9 0 8 9 91 0 0 7 7 0 79 0 0 0 7 83 0 7 0 7 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
112 110 106 104 98 96 92 90 83 82 40 40 36 52 43 36 52 42 35 14 35
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(204,-183,o),
(240,-169,o),
(279,-118,cs),
(308,-81,o),
(334,-27,o),
(359,44,cs),
(471,361,ls),
(479,383,o),
(491,385,o),
(547,385,cs),
(570,386,o),
(582,390,o),
(582,397,cs),
(582,408,o),
(567,411,o),
(547,411,cs),
(379,411,ls),
(364,411,o),
(353,410,o),
(347,408,cs),
(341,406,o),
(338,402,o),
(338,397,cs),
(338,392,o),
(342,388,o),
(351,387,cs),
(360,386,o),
(372,385,o),
(388,385,cs),
(404,385,o),
(414,384,o),
(419,382,cs),
(423,379,o),
(425,375,o),
(425,368,cs),
(425,358,o),
(422,345,o),
(417,330,cs),
(320,32,l),
(148,357,ls),
(141,370,o),
(139,385,o),
(139,389,cs),
(139,402,o),
(161,402,o),
(181,402,cs),
(207,402,o),
(220,407,o),
(220,417,cs),
(220,421,o),
(217,424,o),
(210,426,cs),
(203,427,o),
(191,428,o),
(174,428,cs),
(23,428,ls),
(7,428,o),
(-4,427,o),
(-9,425,cs),
(-15,423,o),
(-18,419,o),
(-18,414,cs),
(-18,409,o),
(-15,405,o),
(-8,404,cs),
(-1,402,o),
(15,401,o),
(40,400,cs),
(72,400,o),
(81,397,o),
(94,373,cs),
(305,-12,l),
(288,-51,o),
(270,-82,o),
(254,-103,cs),
(229,-136,o),
(206,-152,o),
(171,-152,cs),
(132,-152,o),
(103,-132,o),
(103,-109,cs),
(103,-100,o),
(108,-95,o),
(119,-93,cs),
(134,-92,o),
(156,-87,o),
(156,-58,cs),
(156,-33,o),
(139,-28,o),
(126,-28,cs),
(97,-28,o),
(69,-51,o),
(69,-96,cs),
(69,-152,o),
(115,-183,o),
(167,-183,cs)
);
},
{
closed = 1;
nodes = (
(202,533,o),
(224,543,o),
(224,579,cs),
(224,602,o),
(209,616,o),
(190,616,cs),
(162,616,o),
(149,589,o),
(149,575,cs),
(149,551,o),
(164,533,o),
(183,533,cs)
);
},
{
closed = 1;
nodes = (
(409,510,o),
(431,520,o),
(431,556,cs),
(431,579,o),
(416,593,o),
(397,593,cs),
(369,593,o),
(356,566,o),
(356,552,cs),
(356,528,o),
(371,510,o),
(390,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 8 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 8 4 0 4 8 0 104 0 9 0 10 12 9 10 91 0 11 0 12 2 11 12 91 0 5 6 1 4 8 5 4 91 3 1 1 1 2 83 0 2 2 15 67 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 8 4 0 4 8 0 104 0 9 0 10 12 9 10 91 0 11 0 12 2 11 12 91 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 8 4 0 4 8 0 104 0 9 0 10 12 9 10 91 0 11 0 12 2 11 12 91 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 7 7 0 79 0 0 0 7 83 0 7 0 7 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
105 103 99 97 91 89 85 83 38 41 35 52 43 35 52 42 34 13 24
CALL[ ]	/* CallFunction */";
};
width = 577;
}
);
note = ydieresis;
unicode = 255;
},
{
glyphname = ygrave;
kernLeft = y;
kernRight = y;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(264,-196,o),
(312,-165,o),
(345,-124,cs),
(370,-94,o),
(395,-41,o),
(424,44,cs),
(519,313,ls),
(524,328,o),
(529,336,o),
(544,337,cs),
(574,340,o),
(613,347,o),
(613,375,cs),
(613,402,o),
(590,411,o),
(555,411,cs),
(393,411,ls),
(366,411,o),
(343,404,o),
(343,375,cs),
(343,356,o),
(351,345,o),
(380,341,cs),
(396,339,o),
(407,336,o),
(413,333,cs),
(419,329,o),
(422,324,o),
(422,319,cs),
(422,310,o),
(419,297,o),
(414,282,cs),
(354,90,l),
(238,299,ls),
(231,312,o),
(226,322,o),
(224,327,cs),
(221,332,o),
(220,337,o),
(220,342,cs),
(220,347,o),
(223,351,o),
(230,352,cs),
(271,360,o),
(287,372,o),
(287,392,cs),
(287,413,o),
(276,428,o),
(235,428,cs),
(81,428,ls),
(38,428,o),
(19,423,o),
(19,390,cs),
(19,379,o),
(23,370,o),
(31,365,cs),
(39,359,o),
(56,355,o),
(81,352,cs),
(114,349,o),
(122,343,o),
(133,324,cs),
(319,-12,l),
(310,-40,o),
(297,-71,o),
(272,-98,cs),
(253,-117,o),
(237,-127,o),
(205,-127,cs),
(165,-127,o),
(149,-112,o),
(149,-85,cs),
(149,-72,o),
(153,-71,o),
(160,-68,c),
(199,-57,o),
(209,-38,o),
(209,-13,cs),
(209,11,o),
(189,27,o),
(162,27,cs),
(115,27,o),
(75,-16,o),
(75,-85,cs),
(75,-150,o),
(115,-196,o),
(196,-196,cs)
);
},
{
closed = 1;
nodes = (
(350,500,o),
(372,507,o),
(372,522,cs),
(372,527,o),
(350,574,o),
(330,609,cs),
(306,649,o),
(275,688,o),
(250,688,cs),
(207,687,o),
(180,665,o),
(180,640,cs),
(180,606,o),
(297,500,o),
(335,500,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
48 1 6 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 0 1 0 106 0 1 3 1 106 0 4 3 6 3 4 6 104 0 6 2 3 6 2 102 0 3 3 15 67 0 2 2 5 84 0 5 5 17 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 0 1 0 106 0 1 3 1 106 0 3 4 3 106 0 4 6 4 106 0 6 2 6 106 0 2 5 5 2 79 0 2 2 5 84 0 5 2 5 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
88 86 82 80 62 59 62 38 38 34 7 19
CALL[ ]	/* CallFunction */";
};
width = 621;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(237,-183,o),
(278,-163,o),
(317,-118,cs),
(349,-81,o),
(372,-28,o),
(397,44,cs),
(499,331,ls),
(507,352,o),
(513,354,o),
(545,355,cs),
(572,356,o),
(600,360,o),
(600,383,cs),
(600,404,o),
(574,411,o),
(545,411,cs),
(377,411,ls),
(346,411,o),
(341,406,o),
(341,383,cs),
(341,368,o),
(354,355,o),
(386,355,cs),
(402,355,o),
(412,354,o),
(417,351,cs),
(421,348,o),
(423,343,o),
(423,338,cs),
(423,328,o),
(420,315,o),
(415,300,cs),
(340,68,l),
(202,327,ls),
(195,340,o),
(193,355,o),
(193,359,cs),
(193,372,o),
(198,372,o),
(205,372,cs),
(232,372,o),
(239,386,o),
(239,401,cs),
(239,417,o),
(233,428,o),
(198,428,cs),
(47,428,ls),
(15,428,o),
(-14,419,o),
(-14,395,cs),
(-14,384,o),
(-7,377,o),
(6,375,cs),
(19,372,o),
(39,371,o),
(64,370,cs),
(96,370,o),
(105,367,o),
(118,343,cs),
(313,-12,l),
(296,-51,o),
(280,-80,o),
(259,-99,cs),
(242,-115,o),
(218,-128,o),
(195,-128,cs),
(156,-128,o),
(129,-107,o),
(129,-84,cs),
(129,-75,o),
(135,-62,o),
(147,-61,cs),
(164,-61,o),
(186,-54,o),
(186,-28,cs),
(186,-8,o),
(167,2,o),
(150,2,cs),
(113,2,o),
(76,-29,o),
(76,-84,cs),
(76,-149,o),
(130,-183,o),
(184,-183,cs)
);
},
{
closed = 1;
nodes = (
(348,504,o),
(362,509,o),
(362,522,cs),
(362,526,o),
(347,560,o),
(321,600,cs),
(298,635,o),
(269,670,o),
(251,670,cs),
(220,670,o),
(202,655,o),
(202,632,cs),
(202,603,o),
(307,504,o),
(337,504,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
53 1 10 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 0 1 0 106 0 1 4 1 106 0 7 8 1 6 10 7 6 91 0 10 0 11 2 10 11 91 5 1 3 3 4 83 0 4 4 15 67 0 2 2 9 83 0 9 9 17 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 0 1 0 106 0 1 4 1 106 0 4 5 1 3 6 4 3 91 0 7 8 1 6 10 7 6 91 0 10 0 11 2 10 11 91 0 2 2 9 83 0 9 9 17 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 0 1 0 106 0 1 4 1 106 0 4 5 1 3 6 4 3 91 0 7 8 1 6 10 7 6 91 0 10 0 11 2 10 11 91 0 2 9 9 2 79 0 2 2 9 83 0 9 2 9 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
100 99 93 91 83 81 36 52 43 36 52 42 38 40 34 12 24
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(204,-183,o),
(240,-169,o),
(279,-118,cs),
(308,-81,o),
(334,-27,o),
(359,44,cs),
(471,361,ls),
(479,383,o),
(491,385,o),
(547,385,cs),
(570,386,o),
(582,390,o),
(582,397,cs),
(582,408,o),
(567,411,o),
(547,411,cs),
(379,411,ls),
(364,411,o),
(353,410,o),
(347,408,cs),
(341,406,o),
(338,402,o),
(338,397,cs),
(338,392,o),
(342,388,o),
(351,387,cs),
(360,386,o),
(372,385,o),
(388,385,cs),
(404,385,o),
(414,384,o),
(419,382,cs),
(423,379,o),
(425,375,o),
(425,368,cs),
(425,358,o),
(422,345,o),
(417,330,cs),
(320,32,l),
(148,357,ls),
(141,370,o),
(139,385,o),
(139,389,cs),
(139,402,o),
(161,402,o),
(181,402,cs),
(207,402,o),
(220,407,o),
(220,417,cs),
(220,421,o),
(217,424,o),
(210,426,cs),
(203,427,o),
(191,428,o),
(174,428,cs),
(23,428,ls),
(7,428,o),
(-4,427,o),
(-9,425,cs),
(-15,423,o),
(-18,419,o),
(-18,414,cs),
(-18,409,o),
(-15,405,o),
(-8,404,cs),
(-1,402,o),
(15,401,o),
(40,400,cs),
(72,400,o),
(81,397,o),
(94,373,cs),
(305,-12,l),
(288,-51,o),
(270,-82,o),
(254,-103,cs),
(229,-136,o),
(206,-152,o),
(171,-152,cs),
(132,-152,o),
(103,-132,o),
(103,-109,cs),
(103,-100,o),
(108,-95,o),
(119,-93,cs),
(134,-92,o),
(156,-87,o),
(156,-58,cs),
(156,-33,o),
(139,-28,o),
(126,-28,cs),
(97,-28,o),
(69,-51,o),
(69,-96,cs),
(69,-152,o),
(115,-183,o),
(167,-183,cs)
);
},
{
closed = 1;
nodes = (
(343,510,o),
(346,514,o),
(346,521,cs),
(346,546,o),
(271,640,o),
(251,640,cs),
(240,640,o),
(232,637,o),
(232,618,cs),
(232,597,o),
(319,510,o),
(338,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 8 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 9 10 9 106 0 10 2 10 106 0 8 4 0 4 8 0 104 0 5 6 1 4 8 5 4 91 3 1 1 1 2 83 0 2 2 15 67 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 9 10 9 106 0 10 2 10 106 0 8 4 0 4 8 0 104 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 9 10 9 106 0 10 2 10 106 0 8 4 0 4 8 0 104 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 7 7 0 79 0 0 0 7 83 0 7 0 7 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
90 88 83 81 38 41 35 52 43 35 52 42 34 11 24
CALL[ ]	/* CallFunction */";
};
width = 577;
}
);
note = ygrave;
unicode = 7923;
},
{
glyphname = ytilde;
kernLeft = y;
kernRight = y;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(264,-196,o),
(312,-165,o),
(345,-124,cs),
(370,-94,o),
(395,-41,o),
(424,44,cs),
(519,313,ls),
(524,328,o),
(529,336,o),
(544,337,cs),
(574,340,o),
(613,347,o),
(613,375,cs),
(613,402,o),
(590,411,o),
(555,411,cs),
(393,411,ls),
(366,411,o),
(343,404,o),
(343,375,cs),
(343,356,o),
(351,345,o),
(380,341,cs),
(396,339,o),
(407,336,o),
(413,333,cs),
(419,329,o),
(422,324,o),
(422,319,cs),
(422,310,o),
(419,297,o),
(414,282,cs),
(354,90,l),
(238,299,ls),
(231,312,o),
(226,322,o),
(224,327,cs),
(221,332,o),
(220,337,o),
(220,342,cs),
(220,347,o),
(223,351,o),
(230,352,cs),
(271,360,o),
(287,372,o),
(287,392,cs),
(287,413,o),
(276,428,o),
(235,428,cs),
(81,428,ls),
(38,428,o),
(19,423,o),
(19,390,cs),
(19,379,o),
(23,370,o),
(31,365,cs),
(39,359,o),
(56,355,o),
(81,352,cs),
(114,349,o),
(122,343,o),
(133,324,cs),
(319,-12,l),
(310,-40,o),
(297,-71,o),
(272,-98,cs),
(253,-117,o),
(237,-127,o),
(205,-127,cs),
(165,-127,o),
(149,-112,o),
(149,-85,cs),
(149,-72,o),
(153,-71,o),
(160,-68,c),
(199,-57,o),
(209,-38,o),
(209,-13,cs),
(209,11,o),
(189,27,o),
(162,27,cs),
(115,27,o),
(75,-16,o),
(75,-85,cs),
(75,-150,o),
(115,-196,o),
(196,-196,cs)
);
},
{
closed = 1;
nodes = (
(176,498,o),
(200,523,o),
(239,523,cs),
(278,523,o),
(320,499,o),
(376,499,cs),
(409,499,o),
(487,517,o),
(487,574,cs),
(487,595,o),
(472,609,o),
(465,609,cs),
(460,609,o),
(450,605,o),
(435,596,cs),
(416,585,o),
(394,579,o),
(375,579,cs),
(336,579,o),
(274,607,o),
(238,607,cs),
(213,607,o),
(191,601,o),
(170,589,cs),
(151,578,o),
(136,563,o),
(136,534,cs),
(136,514,o),
(143,498,o),
(155,498,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
32 1 4 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 2 1 4 1 2 4 104 0 4 0 1 4 0 102 7 1 5 0 9 8 5 9 91 0 6 10 1 8 1 6 8 91 0 1 1 15 67 0 0 0 3 84 0 3 3 17 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 1 8 2 8 1 2 104 0 2 4 8 2 4 102 0 4 0 8 4 0 102 7 1 5 0 9 8 5 9 91 0 6 10 1 8 1 6 8 91 0 0 3 3 0 79 0 0 0 3 84 0 3 0 3 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
114 112 109 107 104 102 96 94 91 89 86 84 72 70 66 64 46 43 62 34 11 17
CALL[ ]	/* CallFunction */";
};
width = 621;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(237,-183,o),
(278,-163,o),
(317,-118,cs),
(349,-81,o),
(372,-28,o),
(397,44,cs),
(499,331,ls),
(507,352,o),
(513,354,o),
(545,355,cs),
(572,356,o),
(600,360,o),
(600,383,cs),
(600,404,o),
(574,411,o),
(545,411,cs),
(377,411,ls),
(346,411,o),
(341,406,o),
(341,383,cs),
(341,368,o),
(354,355,o),
(386,355,cs),
(402,355,o),
(412,354,o),
(417,351,cs),
(421,348,o),
(423,343,o),
(423,338,cs),
(423,328,o),
(420,315,o),
(415,300,cs),
(340,68,l),
(202,327,ls),
(195,340,o),
(193,355,o),
(193,359,cs),
(193,372,o),
(198,372,o),
(205,372,cs),
(232,372,o),
(239,386,o),
(239,401,cs),
(239,417,o),
(233,428,o),
(198,428,cs),
(47,428,ls),
(15,428,o),
(-14,419,o),
(-14,395,cs),
(-14,384,o),
(-7,377,o),
(6,375,cs),
(19,372,o),
(39,371,o),
(64,370,cs),
(96,370,o),
(105,367,o),
(118,343,cs),
(313,-12,l),
(296,-51,o),
(280,-80,o),
(259,-99,cs),
(242,-115,o),
(218,-128,o),
(195,-128,cs),
(156,-128,o),
(129,-107,o),
(129,-84,cs),
(129,-75,o),
(135,-62,o),
(147,-61,cs),
(164,-61,o),
(186,-54,o),
(186,-28,cs),
(186,-8,o),
(167,2,o),
(150,2,cs),
(113,2,o),
(76,-29,o),
(76,-84,cs),
(76,-149,o),
(130,-183,o),
(184,-183,cs)
);
},
{
closed = 1;
nodes = (
(166,507,o),
(193,532,o),
(233,532,cs),
(272,532,o),
(314,508,o),
(370,508,cs),
(426,508,o),
(459,530,o),
(472,553,cs),
(475,559,o),
(477,565,o),
(477,572,cs),
(477,588,o),
(466,600,o),
(459,600,cs),
(456,600,o),
(452,599,o),
(449,598,cs),
(445,596,o),
(438,592,o),
(429,587,cs),
(406,576,o),
(386,570,o),
(369,570,cs),
(330,570,o),
(268,598,o),
(232,598,cs),
(207,598,o),
(185,592,o),
(164,580,cs),
(154,574,o),
(147,569,o),
(143,564,cs),
(139,559,o),
(136,555,o),
(135,552,cs),
(133,547,o),
(132,541,o),
(132,535,cs),
(132,520,o),
(138,507,o),
(149,507,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
74 1 14 10 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 8 1 3 91 0 11 12 1 10 14 11 10 91 0 14 0 15 6 14 15 91 9 1 7 7 8 83 0 8 8 15 67 0 6 6 13 83 0 13 13 17 13 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 8 1 3 91 0 8 9 1 7 10 8 7 91 0 11 12 1 10 14 11 10 91 0 14 0 15 6 14 15 91 0 6 6 13 83 0 13 13 17 13 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 8 1 3 91 0 8 9 1 7 10 8 7 91 0 11 12 1 10 14 11 10 91 0 14 0 15 6 14 15 91 0 6 13 13 6 79 0 6 6 13 83 0 13 6 13 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
121 120 114 112 104 102 94 92 88 85 81 79 68 66 52 42 38 35 35 38 35 35 37 16 35
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(204,-183,o),
(240,-169,o),
(279,-118,cs),
(308,-81,o),
(334,-27,o),
(359,44,cs),
(471,361,ls),
(479,383,o),
(491,385,o),
(547,385,cs),
(570,386,o),
(582,390,o),
(582,397,cs),
(582,408,o),
(567,411,o),
(547,411,cs),
(379,411,ls),
(364,411,o),
(353,410,o),
(347,408,cs),
(341,406,o),
(338,402,o),
(338,397,cs),
(338,392,o),
(342,388,o),
(351,387,cs),
(360,386,o),
(372,385,o),
(388,385,cs),
(404,385,o),
(414,384,o),
(419,382,cs),
(423,379,o),
(425,375,o),
(425,368,cs),
(425,358,o),
(422,345,o),
(417,330,cs),
(320,32,l),
(148,357,ls),
(141,370,o),
(139,385,o),
(139,389,cs),
(139,402,o),
(161,402,o),
(181,402,cs),
(207,402,o),
(220,407,o),
(220,417,cs),
(220,421,o),
(217,424,o),
(210,426,cs),
(203,427,o),
(191,428,o),
(174,428,cs),
(23,428,ls),
(7,428,o),
(-4,427,o),
(-9,425,cs),
(-15,423,o),
(-18,419,o),
(-18,414,cs),
(-18,409,o),
(-15,405,o),
(-8,404,cs),
(-1,402,o),
(15,401,o),
(40,400,cs),
(72,400,o),
(81,397,o),
(94,373,cs),
(305,-12,l),
(288,-51,o),
(270,-82,o),
(254,-103,cs),
(229,-136,o),
(206,-152,o),
(171,-152,cs),
(132,-152,o),
(103,-132,o),
(103,-109,cs),
(103,-100,o),
(108,-95,o),
(119,-93,cs),
(134,-92,o),
(156,-87,o),
(156,-58,cs),
(156,-33,o),
(139,-28,o),
(126,-28,cs),
(97,-28,o),
(69,-51,o),
(69,-96,cs),
(69,-152,o),
(115,-183,o),
(167,-183,cs)
);
},
{
closed = 1;
nodes = (
(157,522,o),
(184,547,o),
(225,547,cs),
(264,547,o),
(306,523,o),
(362,523,cs),
(415,523,o),
(464,543,o),
(464,568,cs),
(464,577,o),
(458,585,o),
(451,585,cs),
(448,585,o),
(444,584,o),
(441,583,cs),
(437,581,o),
(430,577,o),
(421,572,cs),
(398,561,o),
(378,555,o),
(361,555,cs),
(322,555,o),
(260,583,o),
(224,583,cs),
(199,583,o),
(177,577,o),
(156,565,cs),
(137,554,o),
(127,544,o),
(127,537,cs),
(127,530,o),
(134,522,o),
(141,522,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 8 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 8 4 0 4 8 0 104 11 1 9 0 13 12 9 13 91 0 10 14 1 12 2 10 12 91 0 5 6 1 4 8 5 4 91 3 1 1 1 2 83 0 2 2 15 67 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 8 4 0 4 8 0 104 11 1 9 0 13 12 9 13 91 0 10 14 1 12 2 10 12 91 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 8 4 0 4 8 0 104 11 1 9 0 13 12 9 13 91 0 10 14 1 12 2 10 12 91 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 7 7 0 79 0 0 0 7 83 0 7 0 7 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
112 110 107 105 102 100 94 92 89 87 84 82 38 41 35 52 43 35 52 42 34 15 24
CALL[ ]	/* CallFunction */";
};
width = 577;
}
);
note = ytilde;
unicode = 7929;
},
{
glyphname = z;
kernLeft = z;
kernRight = t_z;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(90,-2,o),
(179,1,o),
(248,1,cs),
(273,1,o),
(301,0,o),
(323,0,cs),
(348,0,o),
(382,-1,o),
(424,-1,cs),
(433,-1,o),
(438,5,o),
(438,18,cs),
(438,35,o),
(439,70,o),
(440,85,cs),
(446,181,ls),
(446,193,o),
(439,212,o),
(408,212,cs),
(372,212,o),
(366,183,o),
(364,151,cs),
(357,96,ls),
(356,85,o),
(355,77,o),
(348,77,cs),
(198,77,ls),
(187,77,o),
(181,79,o),
(181,84,cs),
(181,95,o),
(225,148,o),
(311,247,cs),
(385,334,o),
(440,402,o),
(440,419,cs),
(440,424,o),
(438,428,o),
(433,431,cs),
(428,434,o),
(420,436,o),
(409,436,cs),
(388,436,o),
(364,436,o),
(337,435,cs),
(310,434,o),
(286,434,o),
(265,434,cs),
(193,434,o),
(171,435,o),
(99,435,cs),
(50,435,o),
(46,413,o),
(46,389,cs),
(46,298,ls),
(46,270,o),
(54,251,o),
(89,251,cs),
(121,251,o),
(127,271,o),
(131,322,cs),
(134,358,l),
(263,358,l),
(263,358,l),
(269,358,o),
(272,355,o),
(272,350,cs),
(272,341,o),
(219,282,o),
(147,195,cs),
(74,108,o),
(21,41,o),
(21,24,cs),
(21,12,o),
(26,5,o),
(37,2,cs),
(47,-1,o),
(65,-2,o),
(90,-2,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
47 1 2 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 5 3 5 0 96 0 3 2 2 3 94 6 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 0 5 3 5 0 96 0 3 2 5 3 2 102 6 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 6 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 1 6 1 5 0 1 5 91 0 2 2 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 74 0 73 199 39 58 167 35 7 20
CALL[ ]	/* CallFunction */";
};
width = 480;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(71,-2,o),
(160,1,o),
(229,1,cs),
(254,1,o),
(282,0,o),
(304,0,cs),
(329,0,o),
(363,-1,o),
(405,-1,cs),
(414,-1,o),
(419,5,o),
(419,18,cs),
(419,35,o),
(420,70,o),
(421,85,cs),
(427,181,ls),
(427,192,o),
(425,206,o),
(402,206,cs),
(373,206,o),
(369,186,o),
(366,151,cs),
(359,78,ls),
(358,65,o),
(355,59,o),
(350,59,cs),
(161,59,ls),
(150,59,o),
(144,61,o),
(144,66,cs),
(144,80,o),
(204,147,o),
(283,238,cs),
(362,330,o),
(421,400,o),
(421,419,cs),
(421,424,o),
(419,428,o),
(414,431,cs),
(409,434,o),
(401,436,o),
(390,436,cs),
(369,436,o),
(345,436,o),
(318,435,cs),
(291,434,o),
(267,434,o),
(246,434,cs),
(199,434,o),
(148,436,o),
(101,436,cs),
(64,436,o),
(48,418,o),
(48,395,cs),
(48,298,ls),
(48,273,o),
(56,257,o),
(80,257,cs),
(105,257,o),
(109,283,o),
(112,322,cs),
(115,376,l),
(290,376,l),
(290,376,l),
(296,376,o),
(299,373,o),
(299,368,cs),
(299,361,o),
(239,292,o),
(161,203,cs),
(80,109,o),
(23,36,o),
(23,20,cs),
(23,11,o),
(27,5,o),
(34,2,cs),
(41,-1,o),
(54,-2,o),
(71,-2,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
42 1 2 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 5 3 5 0 96 0 3 2 2 3 94 6 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 6 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 1 6 1 5 0 1 5 91 0 2 2 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 69 0 68 199 36 58 165 35 7 20
CALL[ ]	/* CallFunction */";
};
width = 463;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(44,-2,o),
(133,1,o),
(202,1,cs),
(227,1,o),
(255,0,o),
(277,0,cs),
(302,0,o),
(336,-1,o),
(378,-1,cs),
(387,-1,o),
(392,5,o),
(392,18,cs),
(392,35,o),
(393,70,o),
(394,85,cs),
(400,181,ls),
(400,191,o),
(396,196,o),
(387,196,cs),
(381,196,o),
(377,193,o),
(375,187,cs),
(372,180,o),
(370,168,o),
(369,151,cs),
(362,48,ls),
(361,35,o),
(358,29,o),
(353,29,cs),
(108,29,ls),
(97,29,o),
(91,31,o),
(91,36,cs),
(91,49,o),
(156,125,o),
(243,223,cs),
(329,320,o),
(394,402,o),
(394,419,cs),
(394,424,o),
(392,428,o),
(387,431,cs),
(382,434,o),
(374,436,o),
(363,436,cs),
(342,436,o),
(318,436,o),
(291,435,cs),
(264,434,o),
(240,434,o),
(219,434,cs),
(153,434,o),
(136,433,o),
(74,436,cs),
(57,436,o),
(51,428,o),
(51,405,cs),
(51,298,ls),
(51,285,o),
(52,277,o),
(54,273,cs),
(56,269,o),
(60,267,o),
(66,267,cs),
(72,267,o),
(77,271,o),
(80,280,cs),
(83,289,o),
(84,303,o),
(85,322,cs),
(88,406,l),
(329,406,ls),
(335,406,o),
(338,403,o),
(338,398,cs),
(338,389,o),
(273,319,o),
(182,215,cs),
(92,112,o),
(26,33,o),
(26,13,cs),
(26,3,o),
(32,-2,o),
(44,-2,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
41 35 34 3 2 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 0 5 3 5 0 96 0 3 2 5 3 2 102 6 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 6 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 1 6 1 5 0 1 5 91 0 2 2 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 67 0 66 198 36 58 165 35 7 20
CALL[ ]	/* CallFunction */";
};
width = 439;
}
);
note = z;
unicode = 122;
},
{
glyphname = zacute;
kernLeft = z;
kernRight = t_z;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(90,-2,o),
(179,1,o),
(248,1,cs),
(273,1,o),
(301,0,o),
(323,0,cs),
(348,0,o),
(382,-1,o),
(424,-1,cs),
(433,-1,o),
(438,5,o),
(438,18,cs),
(438,35,o),
(439,70,o),
(440,85,cs),
(446,181,ls),
(446,193,o),
(439,212,o),
(408,212,cs),
(372,212,o),
(366,183,o),
(364,151,cs),
(357,96,ls),
(356,85,o),
(355,77,o),
(348,77,cs),
(198,77,ls),
(187,77,o),
(181,79,o),
(181,84,cs),
(181,95,o),
(225,148,o),
(311,247,cs),
(385,334,o),
(440,402,o),
(440,419,cs),
(440,424,o),
(438,428,o),
(433,431,cs),
(428,434,o),
(420,436,o),
(409,436,cs),
(388,436,o),
(364,436,o),
(337,435,cs),
(310,434,o),
(286,434,o),
(265,434,cs),
(193,434,o),
(171,435,o),
(99,435,cs),
(50,435,o),
(46,413,o),
(46,389,cs),
(46,298,ls),
(46,270,o),
(54,251,o),
(89,251,cs),
(121,251,o),
(127,271,o),
(131,322,cs),
(134,358,l),
(263,358,l),
(263,358,l),
(269,358,o),
(272,355,o),
(272,350,cs),
(272,341,o),
(219,282,o),
(147,195,cs),
(74,108,o),
(21,41,o),
(21,24,cs),
(21,12,o),
(26,5,o),
(37,2,cs),
(47,-1,o),
(65,-2,o),
(90,-2,cs)
);
},
{
closed = 1;
nodes = (
(218,500,o),
(253,523,o),
(292,557,cs),
(327,588,o),
(356,622,o),
(356,640,cs),
(356,665,o),
(329,687,o),
(286,688,cs),
(261,688,o),
(230,649,o),
(206,609,cs),
(186,574,o),
(164,527,o),
(164,522,cs),
(164,507,o),
(186,500,o),
(201,500,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
65 1 4 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 0 0 3 0 106 0 2 7 5 7 2 96 0 5 4 4 5 94 8 1 7 7 3 83 0 3 3 15 67 0 4 4 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 1 106 0 0 3 0 106 0 2 7 5 7 2 96 0 5 4 7 5 4 102 8 1 7 7 3 83 0 3 3 15 67 0 4 4 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 106 0 0 3 0 106 0 2 7 5 7 2 5 104 0 5 4 7 5 4 102 8 1 7 7 3 83 0 3 3 15 67 0 4 4 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 0 0 3 0 106 0 2 7 5 7 2 5 104 0 5 4 7 5 4 102 0 3 8 1 7 2 3 7 91 0 4 4 6 84 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
18 18 18 92 18 91 199 39 58 167 37 38 38 9 22
CALL[ ]	/* CallFunction */";
};
width = 480;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(71,-2,o),
(160,1,o),
(229,1,cs),
(254,1,o),
(282,0,o),
(304,0,cs),
(329,0,o),
(363,-1,o),
(405,-1,cs),
(414,-1,o),
(419,5,o),
(419,18,cs),
(419,35,o),
(420,70,o),
(421,85,cs),
(427,181,ls),
(427,192,o),
(425,206,o),
(402,206,cs),
(373,206,o),
(369,186,o),
(366,151,cs),
(359,78,ls),
(358,65,o),
(355,59,o),
(350,59,cs),
(161,59,ls),
(150,59,o),
(144,61,o),
(144,66,cs),
(144,80,o),
(204,147,o),
(283,238,cs),
(362,330,o),
(421,400,o),
(421,419,cs),
(421,424,o),
(419,428,o),
(414,431,cs),
(409,434,o),
(401,436,o),
(390,436,cs),
(369,436,o),
(345,436,o),
(318,435,cs),
(291,434,o),
(267,434,o),
(246,434,cs),
(199,434,o),
(148,436,o),
(101,436,cs),
(64,436,o),
(48,418,o),
(48,395,cs),
(48,298,ls),
(48,273,o),
(56,257,o),
(80,257,cs),
(105,257,o),
(109,283,o),
(112,322,cs),
(115,376,l),
(290,376,l),
(290,376,l),
(296,376,o),
(299,373,o),
(299,368,cs),
(299,361,o),
(239,292,o),
(161,203,cs),
(80,109,o),
(23,36,o),
(23,20,cs),
(23,11,o),
(27,5,o),
(34,2,cs),
(41,-1,o),
(54,-2,o),
(71,-2,cs)
);
},
{
closed = 1;
nodes = (
(217,504,o),
(322,603,o),
(322,632,cs),
(322,655,o),
(304,670,o),
(273,670,cs),
(255,670,o),
(226,636,o),
(203,600,cs),
(177,560,o),
(162,526,o),
(162,522,cs),
(162,509,o),
(176,504,o),
(187,504,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
60 1 4 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 0 0 3 0 106 0 2 7 5 7 2 96 0 5 4 4 5 94 8 1 7 7 3 83 0 3 3 15 67 0 4 4 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 106 0 0 3 0 106 0 2 7 5 7 2 5 104 0 5 4 7 5 4 102 8 1 7 7 3 83 0 3 3 15 67 0 4 4 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 0 0 3 0 106 0 2 7 5 7 2 5 104 0 5 4 7 5 4 102 0 3 8 1 7 2 3 7 92 0 4 4 6 84 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
18 18 18 87 18 86 199 36 58 165 37 40 36 9 22
CALL[ ]	/* CallFunction */";
};
width = 463;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(44,-2,o),
(133,1,o),
(202,1,cs),
(227,1,o),
(255,0,o),
(277,0,cs),
(302,0,o),
(336,-1,o),
(378,-1,cs),
(387,-1,o),
(392,5,o),
(392,18,cs),
(392,35,o),
(393,70,o),
(394,85,cs),
(400,181,ls),
(400,191,o),
(396,196,o),
(387,196,cs),
(381,196,o),
(377,193,o),
(375,187,cs),
(372,180,o),
(370,168,o),
(369,151,cs),
(362,48,ls),
(361,35,o),
(358,29,o),
(353,29,cs),
(108,29,ls),
(97,29,o),
(91,31,o),
(91,36,cs),
(91,49,o),
(156,125,o),
(243,223,cs),
(329,320,o),
(394,402,o),
(394,419,cs),
(394,424,o),
(392,428,o),
(387,431,cs),
(382,434,o),
(374,436,o),
(363,436,cs),
(342,436,o),
(318,436,o),
(291,435,cs),
(264,434,o),
(240,434,o),
(219,434,cs),
(153,434,o),
(136,433,o),
(74,436,cs),
(57,436,o),
(51,428,o),
(51,405,cs),
(51,298,ls),
(51,285,o),
(52,277,o),
(54,273,cs),
(56,269,o),
(60,267,o),
(66,267,cs),
(72,267,o),
(77,271,o),
(80,280,cs),
(83,289,o),
(84,303,o),
(85,322,cs),
(88,406,l),
(329,406,ls),
(335,406,o),
(338,403,o),
(338,398,cs),
(338,389,o),
(273,319,o),
(182,215,cs),
(92,112,o),
(26,33,o),
(26,13,cs),
(26,3,o),
(32,-2,o),
(44,-2,cs)
);
},
{
closed = 1;
nodes = (
(187,510,o),
(274,597,o),
(274,618,cs),
(274,637,o),
(266,640,o),
(255,640,cs),
(235,640,o),
(160,546,o),
(160,521,cs),
(160,514,o),
(163,510,o),
(168,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
41 35 34 3 2 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 7 6 7 106 0 6 1 6 106 0 0 5 3 5 0 96 0 3 2 5 3 2 102 8 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 6 7 106 0 6 1 6 106 0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 8 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 7 6 7 106 0 6 1 6 106 0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 1 8 1 5 0 1 5 92 0 2 2 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 81 79 74 72 0 67 0 66 198 36 58 165 35 9 20
CALL[ ]	/* CallFunction */";
};
width = 439;
}
);
note = zacute;
unicode = 378;
},
{
glyphname = zcaron;
kernLeft = z;
kernRight = t_z;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(90,-2,o),
(179,1,o),
(248,1,cs),
(273,1,o),
(301,0,o),
(323,0,cs),
(348,0,o),
(382,-1,o),
(424,-1,cs),
(433,-1,o),
(438,5,o),
(438,18,cs),
(438,35,o),
(439,70,o),
(440,85,cs),
(446,181,ls),
(446,193,o),
(439,212,o),
(408,212,cs),
(372,212,o),
(366,183,o),
(364,151,cs),
(357,96,ls),
(356,85,o),
(355,77,o),
(348,77,cs),
(198,77,ls),
(187,77,o),
(181,79,o),
(181,84,cs),
(181,95,o),
(225,148,o),
(311,247,cs),
(385,334,o),
(440,402,o),
(440,419,cs),
(440,424,o),
(438,428,o),
(433,431,cs),
(428,434,o),
(420,436,o),
(409,436,cs),
(388,436,o),
(364,436,o),
(337,435,cs),
(310,434,o),
(286,434,o),
(265,434,cs),
(193,434,o),
(171,435,o),
(99,435,cs),
(50,435,o),
(46,413,o),
(46,389,cs),
(46,298,ls),
(46,270,o),
(54,251,o),
(89,251,cs),
(121,251,o),
(127,271,o),
(131,322,cs),
(134,358,l),
(263,358,l),
(263,358,l),
(269,358,o),
(272,355,o),
(272,350,cs),
(272,341,o),
(219,282,o),
(147,195,cs),
(74,108,o),
(21,41,o),
(21,24,cs),
(21,12,o),
(26,5,o),
(37,2,cs),
(47,-1,o),
(65,-2,o),
(90,-2,cs)
);
},
{
closed = 1;
nodes = (
(283,486,o),
(392,578,o),
(392,619,cs),
(392,630,o),
(388,640,o),
(379,640,cs),
(368,640,o),
(331,616,o),
(259,578,c),
(210,604,o),
(152,640,o),
(140,640,cs),
(132,640,o),
(127,633,o),
(127,626,cs),
(127,599,o),
(155,565,o),
(186,537,cs),
(213,511,o),
(248,486,o),
(259,486,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
21 1 1 0 73 1 5 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
2 9 2 0 1 0 106 0 1 4 1 106 0 3 8 6 8 3 96 0 6 5 5 6 94 10 1 8 8 4 83 0 4 4 15 67 0 5 5 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
2 9 2 0 1 0 106 0 1 4 1 106 0 3 8 6 8 3 96 0 6 5 8 6 5 102 10 1 8 8 4 83 0 4 4 15 67 0 5 5 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
2 9 2 0 1 0 106 0 1 4 1 106 0 3 8 6 8 3 6 104 0 6 5 8 6 5 102 10 1 8 8 4 83 0 4 4 15 67 0 5 5 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
2 9 2 0 1 0 106 0 1 4 1 106 0 3 8 6 8 3 6 104 0 6 5 8 6 5 102 0 4 10 1 8 3 4 8 92 0 5 5 7 84 0 7 7 13 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
26 26 1 0 26 100 26 99 89 77 70 68 61 58 48 38 31 29 17 15 9 7 0 25 1 25 11 15
CALL[ ]	/* CallFunction */";
};
width = 480;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(71,-2,o),
(160,1,o),
(229,1,cs),
(254,1,o),
(282,0,o),
(304,0,cs),
(329,0,o),
(363,-1,o),
(405,-1,cs),
(414,-1,o),
(419,5,o),
(419,18,cs),
(419,35,o),
(420,70,o),
(421,85,cs),
(427,181,ls),
(427,192,o),
(425,206,o),
(402,206,cs),
(373,206,o),
(369,186,o),
(366,151,cs),
(359,78,ls),
(358,65,o),
(355,59,o),
(350,59,cs),
(161,59,ls),
(150,59,o),
(144,61,o),
(144,66,cs),
(144,80,o),
(204,147,o),
(283,238,cs),
(362,330,o),
(421,400,o),
(421,419,cs),
(421,424,o),
(419,428,o),
(414,431,cs),
(409,434,o),
(401,436,o),
(390,436,cs),
(369,436,o),
(345,436,o),
(318,435,cs),
(291,434,o),
(267,434,o),
(246,434,cs),
(199,434,o),
(148,436,o),
(101,436,cs),
(64,436,o),
(48,418,o),
(48,395,cs),
(48,298,ls),
(48,273,o),
(56,257,o),
(80,257,cs),
(105,257,o),
(109,283,o),
(112,322,cs),
(115,376,l),
(290,376,l),
(290,376,l),
(296,376,o),
(299,373,o),
(299,368,cs),
(299,361,o),
(239,292,o),
(161,203,cs),
(80,109,o),
(23,36,o),
(23,20,cs),
(23,11,o),
(27,5,o),
(34,2,cs),
(41,-1,o),
(54,-2,o),
(71,-2,cs)
);
},
{
closed = 1;
nodes = (
(265,495,o),
(371,588,o),
(371,623,cs),
(371,632,o),
(368,640,o),
(360,640,cs),
(347,640,o),
(253,577,o),
(240,569,c),
(167,612,o),
(136,640,o),
(121,640,cs),
(114,640,o),
(110,636,o),
(110,627,cs),
(110,586,o),
(218,495,o),
(240,495,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
76 1 8 6 43 1 2 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
7 10 2 6 8 6 106 0 0 5 3 5 0 96 0 3 2 2 3 94 0 8 8 23 67 9 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
7 10 2 6 8 6 106 0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 8 8 23 67 9 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
7 10 2 6 8 6 106 0 8 1 8 106 0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 1 9 1 5 0 1 5 92 0 2 2 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
72 71 1 1 89 87 82 80 71 95 72 95 1 70 1 69 199 36 58 165 36 11 31
CALL[ ]	/* CallFunction */";
};
width = 463;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(44,-2,o),
(133,1,o),
(202,1,cs),
(227,1,o),
(255,0,o),
(277,0,cs),
(302,0,o),
(336,-1,o),
(378,-1,cs),
(387,-1,o),
(392,5,o),
(392,18,cs),
(392,35,o),
(393,70,o),
(394,85,cs),
(400,181,ls),
(400,191,o),
(396,196,o),
(387,196,cs),
(381,196,o),
(377,193,o),
(375,187,cs),
(372,180,o),
(370,168,o),
(369,151,cs),
(362,48,ls),
(361,35,o),
(358,29,o),
(353,29,cs),
(108,29,ls),
(97,29,o),
(91,31,o),
(91,36,cs),
(91,49,o),
(156,125,o),
(243,223,cs),
(329,320,o),
(394,402,o),
(394,419,cs),
(394,424,o),
(392,428,o),
(387,431,cs),
(382,434,o),
(374,436,o),
(363,436,cs),
(342,436,o),
(318,436,o),
(291,435,cs),
(264,434,o),
(240,434,o),
(219,434,cs),
(153,434,o),
(136,433,o),
(74,436,cs),
(57,436,o),
(51,428,o),
(51,405,cs),
(51,298,ls),
(51,285,o),
(52,277,o),
(54,273,cs),
(56,269,o),
(60,267,o),
(66,267,cs),
(72,267,o),
(77,271,o),
(80,280,cs),
(83,289,o),
(84,303,o),
(85,322,cs),
(88,406,l),
(329,406,ls),
(335,406,o),
(338,403,o),
(338,398,cs),
(338,389,o),
(273,319,o),
(182,215,cs),
(92,112,o),
(26,33,o),
(26,13,cs),
(26,3,o),
(32,-2,o),
(44,-2,cs)
);
},
{
closed = 1;
nodes = (
(238,510,o),
(341,604,o),
(341,629,cs),
(341,636,o),
(338,640,o),
(333,640,cs),
(318,640,o),
(289,608,o),
(213,554,c),
(177,580,o),
(107,640,o),
(94,640,cs),
(89,640,o),
(86,636,o),
(86,629,cs),
(86,604,o),
(190,510,o),
(213,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
87 1 7 6 41 35 34 3 2 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
8 10 2 6 7 6 106 0 7 1 7 106 0 0 5 3 5 0 96 0 3 2 5 3 2 102 9 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
8 10 2 6 7 6 106 0 7 1 7 106 0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 9 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
8 10 2 6 7 6 106 0 7 1 7 106 0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 1 9 1 5 0 1 5 92 0 2 2 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
69 68 0 0 83 81 76 74 68 91 69 91 0 67 0 66 198 36 58 165 35 11 20
CALL[ ]	/* CallFunction */";
};
width = 439;
}
);
note = zcaron;
unicode = 382;
},
{
glyphname = zdotaccent;
kernLeft = z;
kernRight = t_z;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(90,-2,o),
(179,1,o),
(248,1,cs),
(273,1,o),
(301,0,o),
(323,0,cs),
(348,0,o),
(382,-1,o),
(424,-1,cs),
(433,-1,o),
(438,5,o),
(438,18,cs),
(438,35,o),
(439,70,o),
(440,85,cs),
(446,181,ls),
(446,193,o),
(439,212,o),
(408,212,cs),
(372,212,o),
(366,183,o),
(364,151,cs),
(357,96,ls),
(356,85,o),
(355,77,o),
(348,77,cs),
(198,77,ls),
(187,77,o),
(181,79,o),
(181,84,cs),
(181,95,o),
(225,148,o),
(311,247,cs),
(385,334,o),
(440,402,o),
(440,419,cs),
(440,424,o),
(438,428,o),
(433,431,cs),
(428,434,o),
(420,436,o),
(409,436,cs),
(388,436,o),
(364,436,o),
(337,435,cs),
(310,434,o),
(286,434,o),
(265,434,cs),
(193,434,o),
(171,435,o),
(99,435,cs),
(50,435,o),
(46,413,o),
(46,389,cs),
(46,298,ls),
(46,270,o),
(54,251,o),
(89,251,cs),
(121,251,o),
(127,271,o),
(131,322,cs),
(134,358,l),
(263,358,l),
(263,358,l),
(269,358,o),
(272,355,o),
(272,350,cs),
(272,341,o),
(219,282,o),
(147,195,cs),
(74,108,o),
(21,41,o),
(21,24,cs),
(21,12,o),
(26,5,o),
(37,2,cs),
(47,-1,o),
(65,-2,o),
(90,-2,cs)
);
},
{
closed = 1;
nodes = (
(291,514,o),
(328,529,o),
(328,584,cs),
(328,620,o),
(300,645,o),
(268,645,cs),
(220,645,o),
(202,607,o),
(202,580,cs),
(202,537,o),
(228,514,o),
(261,514,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
47 1 2 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 5 3 5 0 96 0 3 2 2 3 94 0 6 0 7 1 6 7 91 8 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 0 5 3 5 0 96 0 3 2 5 3 2 102 0 6 0 7 1 6 7 91 8 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 6 0 7 1 6 7 91 8 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 6 0 7 1 6 7 91 0 1 8 1 5 0 1 5 91 0 2 2 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 89 87 81 79 0 74 0 73 199 39 58 167 35 9 20
CALL[ ]	/* CallFunction */";
};
width = 480;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(71,-2,o),
(160,1,o),
(229,1,cs),
(254,1,o),
(282,0,o),
(304,0,cs),
(329,0,o),
(363,-1,o),
(405,-1,cs),
(414,-1,o),
(419,5,o),
(419,18,cs),
(419,35,o),
(420,70,o),
(421,85,cs),
(427,181,ls),
(427,192,o),
(425,206,o),
(402,206,cs),
(373,206,o),
(369,186,o),
(366,151,cs),
(359,78,ls),
(358,65,o),
(355,59,o),
(350,59,cs),
(161,59,ls),
(150,59,o),
(144,61,o),
(144,66,cs),
(144,80,o),
(204,147,o),
(283,238,cs),
(362,330,o),
(421,400,o),
(421,419,cs),
(421,424,o),
(419,428,o),
(414,431,cs),
(409,434,o),
(401,436,o),
(390,436,cs),
(369,436,o),
(345,436,o),
(318,435,cs),
(291,434,o),
(267,434,o),
(246,434,cs),
(199,434,o),
(148,436,o),
(101,436,cs),
(64,436,o),
(48,418,o),
(48,395,cs),
(48,298,ls),
(48,273,o),
(56,257,o),
(80,257,cs),
(105,257,o),
(109,283,o),
(112,322,cs),
(115,376,l),
(290,376,l),
(290,376,l),
(296,376,o),
(299,373,o),
(299,368,cs),
(299,361,o),
(239,292,o),
(161,203,cs),
(80,109,o),
(23,36,o),
(23,20,cs),
(23,11,o),
(27,5,o),
(34,2,cs),
(41,-1,o),
(54,-2,o),
(71,-2,cs)
);
},
{
closed = 1;
nodes = (
(268,523,o),
(299,536,o),
(299,584,cs),
(299,615,o),
(277,636,o),
(250,636,cs),
(208,636,o),
(194,600,o),
(194,580,cs),
(194,544,o),
(216,523,o),
(243,523,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
43 1 2 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 5 3 5 0 96 0 3 2 2 3 94 0 6 0 7 1 6 7 91 8 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 6 0 7 1 6 7 91 8 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 6 0 7 1 6 7 91 0 1 8 1 5 0 1 5 91 0 2 2 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
1 1 83 81 77 75 1 70 1 69 199 36 58 165 36 9 31
CALL[ ]	/* CallFunction */";
};
width = 463;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(44,-2,o),
(133,1,o),
(202,1,cs),
(227,1,o),
(255,0,o),
(277,0,cs),
(302,0,o),
(336,-1,o),
(378,-1,cs),
(387,-1,o),
(392,5,o),
(392,18,cs),
(392,35,o),
(393,70,o),
(394,85,cs),
(400,181,ls),
(400,191,o),
(396,196,o),
(387,196,cs),
(381,196,o),
(377,193,o),
(375,187,cs),
(372,180,o),
(370,168,o),
(369,151,cs),
(362,48,ls),
(361,35,o),
(358,29,o),
(353,29,cs),
(108,29,ls),
(97,29,o),
(91,31,o),
(91,36,cs),
(91,49,o),
(156,125,o),
(243,223,cs),
(329,320,o),
(394,402,o),
(394,419,cs),
(394,424,o),
(392,428,o),
(387,431,cs),
(382,434,o),
(374,436,o),
(363,436,cs),
(342,436,o),
(318,436,o),
(291,435,cs),
(264,434,o),
(240,434,o),
(219,434,cs),
(153,434,o),
(136,433,o),
(74,436,cs),
(57,436,o),
(51,428,o),
(51,405,cs),
(51,298,ls),
(51,285,o),
(52,277,o),
(54,273,cs),
(56,269,o),
(60,267,o),
(66,267,cs),
(72,267,o),
(77,271,o),
(80,280,cs),
(83,289,o),
(84,303,o),
(85,322,cs),
(88,406,l),
(329,406,ls),
(335,406,o),
(338,403,o),
(338,398,cs),
(338,389,o),
(273,319,o),
(182,215,cs),
(92,112,o),
(26,33,o),
(26,13,cs),
(26,3,o),
(32,-2,o),
(44,-2,cs)
);
},
{
closed = 1;
nodes = (
(236,538,o),
(258,548,o),
(258,584,cs),
(258,607,o),
(243,621,o),
(224,621,cs),
(196,621,o),
(183,594,o),
(183,580,cs),
(183,556,o),
(198,538,o),
(217,538,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
41 35 34 3 2 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 0 5 3 5 0 96 0 3 2 5 3 2 102 0 6 0 7 1 6 7 91 8 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 6 0 7 1 6 7 91 8 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 6 0 7 1 6 7 91 0 1 8 1 5 0 1 5 91 0 2 2 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 80 78 74 72 0 67 0 66 198 36 58 165 35 9 20
CALL[ ]	/* CallFunction */";
};
width = 439;
}
);
note = zdotaccent;
unicode = 380;
},
{
glyphname = a.salt;
kernLeft = a.salt;
kernRight = a.salt;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(271,-11,o),
(313,-6,o),
(336,29,c),
(356,2,o),
(382,-11,o),
(443,-11,cs),
(499,-11,o),
(531,8,o),
(531,72,cs),
(531,82,o),
(521,104,o),
(494,104,cs),
(479,104,o),
(470,100,o),
(465,93,cs),
(460,85,o),
(457,79,o),
(457,76,cs),
(457,69,o),
(453,65,o),
(444,65,cs),
(441,65,o),
(436,69,o),
(429,76,cs),
(422,83,o),
(419,96,o),
(419,117,cs),
(419,178,o),
(422,276,o),
(422,287,cs),
(422,416,o),
(375,475,o),
(270,475,cs),
(215,475,o),
(165,459,o),
(134,412,c),
(135,420,o),
(138,436,o),
(138,448,cs),
(138,464,o),
(128,491,o),
(98,491,cs),
(62,491,o),
(55,465,o),
(55,449,cs),
(55,409,o),
(55,378,o),
(56,357,cs),
(56,335,o),
(56,320,o),
(56,313,cs),
(56,300,o),
(61,273,o),
(104,273,cs),
(132,273,o),
(138,293,o),
(138,312,cs),
(138,364,o),
(164,399,o),
(239,399,cs),
(291,399,o),
(335,356,o),
(335,287,cs),
(335,280,o),
(335,274,o),
(335,268,cs),
(334,261,o),
(334,255,o),
(334,250,cs),
(334,232,l),
(334,232,l),
(306,243,o),
(264,249,o),
(239,249,cs),
(98,249,o),
(25,190,o),
(25,106,cs),
(25,35,o),
(89,-11,o),
(228,-11,cs)
);
},
{
closed = 1;
nodes = (
(198,65,o),
(170,68,o),
(149,75,cs),
(127,81,o),
(116,92,o),
(116,107,cs),
(116,146,o),
(156,173,o),
(232,173,cs),
(278,173,o),
(334,148,o),
(334,117,cs),
(334,104,o),
(326,92,o),
(310,81,cs),
(293,70,o),
(267,65,o),
(232,65,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
86 78 59 24 2 40
CALL[ ]	/* CallFunction */";
};
width = 522;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(259,-11,o),
(306,0,o),
(337,36,c),
(354,4,o),
(381,-11,o),
(432,-11,cs),
(483,-11,o),
(511,8,o),
(511,72,cs),
(511,79,o),
(505,98,o),
(485,98,cs),
(464,98,o),
(458,83,o),
(458,76,cs),
(458,53,o),
(448,48,o),
(433,48,cs),
(424,48,o),
(417,53,o),
(410,62,cs),
(403,71,o),
(399,89,o),
(399,117,cs),
(399,178,o),
(402,276,o),
(402,287,cs),
(402,416,o),
(355,475,o),
(250,475,cs),
(195,475,o),
(145,459,o),
(114,412,c),
(115,420,o),
(118,436,o),
(118,448,cs),
(118,463,o),
(112,485,o),
(89,485,cs),
(59,485,o),
(56,462,o),
(56,449,cs),
(56,409,o),
(56,378,o),
(57,357,cs),
(57,335,o),
(57,320,o),
(57,313,cs),
(57,301,o),
(62,279,o),
(91,279,cs),
(114,279,o),
(118,297,o),
(118,312,cs),
(118,375,o),
(150,417,o),
(233,417,cs),
(287,417,o),
(336,365,o),
(336,287,cs),
(336,280,o),
(336,273,o),
(336,265,cs),
(335,256,o),
(335,248,o),
(335,241,cs),
(335,215,l),
(335,215,l),
(302,234,o),
(258,243,o),
(219,243,cs),
(97,243,o),
(26,185,o),
(26,106,cs),
(26,35,o),
(88,-11,o),
(208,-11,cs)
);
},
{
closed = 1;
nodes = (
(144,47,o),
(96,71,o),
(96,107,cs),
(96,152,o),
(143,185,o),
(219,185,cs),
(276,185,o),
(335,154,o),
(335,117,cs),
(335,80,o),
(288,47,o),
(212,47,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
87 79 58 26 2 40
CALL[ ]	/* CallFunction */";
};
width = 504;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(244,-11,o),
(296,9,o),
(339,48,c),
(351,5,o),
(380,-11,o),
(417,-11,cs),
(458,-11,o),
(483,8,o),
(483,72,cs),
(483,79,o),
(479,88,o),
(472,88,cs),
(464,88,o),
(460,84,o),
(460,76,cs),
(460,29,o),
(435,19,o),
(418,19,cs),
(384,19,o),
(371,41,o),
(371,117,cs),
(371,178,o),
(374,276,o),
(374,287,cs),
(374,416,o),
(327,475,o),
(222,475,cs),
(167,475,o),
(117,459,o),
(86,412,c),
(87,420,o),
(90,436,o),
(90,448,cs),
(90,463,o),
(87,475,o),
(76,475,cs),
(64,475,o),
(58,464,o),
(58,449,cs),
(58,409,o),
(58,378,o),
(59,357,cs),
(59,335,o),
(59,320,o),
(59,313,cs),
(59,302,o),
(62,289,o),
(73,289,cs),
(86,289,o),
(90,305,o),
(90,312,cs),
(90,393,o),
(129,447,o),
(225,447,cs),
(300,447,o),
(338,386,o),
(338,287,cs),
(338,280,o),
(338,272,o),
(338,261,cs),
(337,250,o),
(337,238,o),
(337,227,cs),
(337,187,l),
(296,219,o),
(250,233,o),
(191,233,cs),
(98,233,o),
(28,179,o),
(28,106,cs),
(28,35,o),
(88,-11,o),
(180,-11,cs)
);
},
{
closed = 1;
nodes = (
(116,17,o),
(68,52,o),
(68,107,cs),
(68,163,o),
(128,205,o),
(201,205,cs),
(278,205,o),
(337,164,o),
(337,117,cs),
(337,62,o),
(263,17,o),
(184,17,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
84 74 53 20 2 40
CALL[ ]	/* CallFunction */";
};
width = 479;
}
);
note = a.salt;
},
{
glyphname = c.salt;
kernLeft = c.salt;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(367,-6,o),
(416,29,o),
(484,92,cs),
(490,98,o),
(493,107,o),
(493,118,cs),
(493,137,o),
(483,151,o),
(460,151,cs),
(444,151,o),
(434,143,o),
(417,128,cs),
(373,91,o),
(326,71,o),
(270,71,cs),
(164,71,o),
(128,132,o),
(128,224,cs),
(128,334,o),
(177,406,o),
(290,406,cs),
(311,406,o),
(324,404,o),
(329,399,cs),
(334,394,o),
(336,389,o),
(336,384,cs),
(336,367,o),
(312,366,o),
(312,335,cs),
(312,315,o),
(322,282,o),
(371,282,cs),
(440,282,o),
(458,331,o),
(458,365,cs),
(458,433,o),
(371,482,o),
(268,482,cs),
(122,482,o),
(26,367,o),
(26,227,cs),
(26,98,o),
(95,-6,o),
(263,-6,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
22 12 1 40
CALL[ ]	/* CallFunction */";
};
width = 500;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(347,-6,o),
(409,32,o),
(466,96,cs),
(473,103,o),
(475,113,o),
(475,121,cs),
(475,136,o),
(467,146,o),
(451,146,cs),
(440,146,o),
(435,143,o),
(420,128,cs),
(376,84,o),
(327,54,o),
(259,54,cs),
(154,54,o),
(110,122,o),
(110,225,cs),
(110,343,o),
(169,424,o),
(279,424,cs),
(306,424,o),
(324,420,o),
(334,413,cs),
(344,406,o),
(349,398,o),
(349,391,cs),
(349,372,o),
(321,372,o),
(321,341,cs),
(321,318,o),
(334,294,o),
(371,294,cs),
(419,294,o),
(440,333,o),
(440,367,cs),
(440,435,o),
(358,482,o),
(267,482,cs),
(127,482,o),
(29,368,o),
(29,226,cs),
(29,95,o),
(108,-6,o),
(252,-6,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
21 11 1 40
CALL[ ]	/* CallFunction */";
};
width = 485;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(293,-6,o),
(356,19,o),
(401,58,cs),
(416,71,o),
(429,86,o),
(440,103,cs),
(447,113,o),
(450,121,o),
(450,126,cs),
(450,133,o),
(446,137,o),
(438,137,cs),
(433,137,o),
(428,134,o),
(424,128,cs),
(408,107,o),
(396,92,o),
(389,85,cs),
(350,44,o),
(301,24,o),
(248,24,cs),
(145,24,o),
(84,103,o),
(84,227,cs),
(84,359,o),
(158,454,o),
(263,454,cs),
(313,454,o),
(368,432,o),
(368,403,cs),
(368,381,o),
(334,382,o),
(334,351,cs),
(334,328,o),
(348,314,o),
(371,314,cs),
(398,314,o),
(415,337,o),
(415,370,cs),
(415,432,o),
(352,482,o),
(266,482,cs),
(131,482,o),
(33,369,o),
(33,225,cs),
(33,97,o),
(121,-6,o),
(237,-6,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
20 10 1 40
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = c.salt;
},
{
glyphname = g.salt;
kernLeft = g;
kernRight = g;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(357,-250,o),
(433,-234,o),
(486,-206,cs),
(538,-179,o),
(569,-139,o),
(569,-91,cs),
(569,20,o),
(500,73,o),
(331,73,cs),
(210,73,o),
(147,80,o),
(147,95,cs),
(147,123,o),
(180,131,o),
(192,137,c),
(196,137,o),
(200,137,o),
(204,137,cs),
(207,136,o),
(215,136,o),
(228,136,cs),
(384,136,o),
(444,216,o),
(444,301,cs),
(444,369,o),
(399,429,o),
(347,443,c),
(372,463,o),
(390,472,o),
(413,472,cs),
(458,472,o),
(432,420,o),
(478,420,cs),
(502,420,o),
(516,438,o),
(516,455,cs),
(516,491,o),
(460,517,o),
(388,517,cs),
(343,517,o),
(301,495,o),
(268,456,c),
(259,459,o),
(248,460,o),
(235,460,cs),
(122,460,o),
(53,387,o),
(53,294,cs),
(53,243,o),
(73,193,o),
(116,165,c),
(75,146,o),
(54,128,o),
(54,89,cs),
(54,37,o),
(90,16,o),
(142,7,c),
(65,-8,o),
(26,-45,o),
(26,-102,cs),
(26,-202,o),
(137,-250,o),
(268,-250,cs)
);
},
{
closed = 1;
nodes = (
(214,-171,o),
(120,-156,o),
(120,-97,cs),
(120,-48,o),
(218,-1,o),
(285,-1,cs),
(350,-1,o),
(475,-16,o),
(475,-91,cs),
(475,-137,o),
(409,-171,o),
(283,-171,cs)
);
},
{
closed = 1;
nodes = (
(228,215,o),
(147,222,o),
(147,292,cs),
(147,367,o),
(214,382,o),
(246,382,cs),
(292,382,o),
(350,369,o),
(350,301,cs),
(350,223,o),
(271,215,o),
(242,215,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
100 91 80 71 49 4 3 40
CALL[ ]	/* CallFunction */";
};
width = 565;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(356,-250,o),
(426,-234,o),
(475,-206,cs),
(524,-179,o),
(553,-139,o),
(553,-91,cs),
(553,20,o),
(455,53,o),
(315,56,cs),
(275,56,o),
(131,53,o),
(131,95,cs),
(131,126,o),
(164,135,o),
(178,142,c),
(183,141,o),
(189,140,o),
(198,139,cs),
(206,138,o),
(216,137,o),
(229,137,cs),
(369,137,o),
(428,219,o),
(428,301,cs),
(428,373,o),
(379,429,o),
(331,444,c),
(354,467,o),
(376,478,o),
(397,478,cs),
(439,478,o),
(420,426,o),
(462,426,cs),
(486,426,o),
(500,444,o),
(500,461,cs),
(500,493,o),
(453,517,o),
(393,517,cs),
(348,517,o),
(306,495,o),
(273,456,c),
(264,459,o),
(253,460,o),
(240,460,cs),
(127,460,o),
(58,387,o),
(58,294,cs),
(58,243,o),
(78,193,o),
(121,165,c),
(80,146,o),
(59,128,o),
(59,89,cs),
(59,37,o),
(95,16,o),
(147,7,c),
(70,-8,o),
(31,-45,o),
(31,-102,cs),
(31,-202,o),
(142,-250,o),
(273,-250,cs)
);
},
{
closed = 1;
nodes = (
(211,-189,o),
(104,-163,o),
(104,-106,cs),
(104,-32,o),
(216,-1,o),
(290,-1,cs),
(307,-1,o),
(347,-2,o),
(395,-14,cs),
(440,-26,o),
(480,-52,o),
(480,-99,cs),
(480,-124,o),
(464,-146,o),
(431,-163,cs),
(398,-180,o),
(347,-189,o),
(278,-189,cs)
);
},
{
closed = 1;
nodes = (
(209,197,o),
(131,211,o),
(131,292,cs),
(131,377,o),
(201,400,o),
(243,400,cs),
(292,400,o),
(355,378,o),
(355,301,cs),
(355,219,o),
(282,197,o),
(237,197,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
101 92 81 72 50 4 3 40
CALL[ ]	/* CallFunction */";
};
width = 526;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(424,-250,o),
(530,-188,o),
(530,-91,cs),
(530,20,o),
(393,24,o),
(292,27,cs),
(175,29,o),
(108,32,o),
(108,95,cs),
(108,126,o),
(123,135,o),
(158,150,c),
(181,141,o),
(206,137,o),
(231,137,cs),
(342,137,o),
(405,218,o),
(405,301,cs),
(405,373,o),
(358,422,o),
(308,446,c),
(331,474,o),
(353,488,o),
(374,488,cs),
(416,488,o),
(397,436,o),
(439,436,cs),
(463,436,o),
(477,454,o),
(477,471,cs),
(477,498,o),
(443,517,o),
(400,517,cs),
(355,517,o),
(313,495,o),
(280,456,c),
(271,459,o),
(260,460,o),
(247,460,cs),
(134,460,o),
(65,387,o),
(65,294,cs),
(65,243,o),
(85,193,o),
(128,165,c),
(87,146,o),
(66,128,o),
(66,89,cs),
(66,37,o),
(102,16,o),
(154,7,c),
(77,-8,o),
(38,-45,o),
(38,-102,cs),
(38,-202,o),
(149,-250,o),
(280,-250,cs)
);
},
{
closed = 1;
nodes = (
(184,-219,o),
(81,-183,o),
(81,-106,cs),
(81,-31,o),
(182,-1,o),
(297,-1,cs),
(332,-1,o),
(487,-6,o),
(487,-99,cs),
(487,-168,o),
(403,-219,o),
(285,-219,cs)
);
},
{
closed = 1;
nodes = (
(151,167,o),
(108,212,o),
(108,292,cs),
(108,376,o),
(158,430,o),
(239,430,cs),
(318,430,o),
(362,381,o),
(362,301,cs),
(362,217,o),
(311,167,o),
(230,167,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
95 90 79 70 48 4 3 40
CALL[ ]	/* CallFunction */";
};
width = 470;
}
);
note = g.salt;
},
{
glyphname = k.salt;
kernLeft = germandbls;
kernRight = c_k;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(461,-58,o),
(555,-62,o),
(555,-28,cs),
(555,-2,o),
(507,0,o),
(475,3,cs),
(447,6,o),
(427,7,o),
(414,8,cs),
(401,9,o),
(391,9,o),
(384,9,cs),
(376,9,o),
(295,154,o),
(246,268,c),
(269,288,o),
(290,311,o),
(335,354,cs),
(342,361,o),
(353,366,o),
(366,367,cs),
(401,370,o),
(429,374,o),
(450,379,cs),
(471,384,o),
(481,392,o),
(481,403,cs),
(481,427,o),
(456,431,o),
(357,431,cs),
(253,431,o),
(200,431,o),
(200,396,cs),
(200,380,o),
(210,370,o),
(223,370,cs),
(231,370,ls),
(234,370,o),
(236,369,o),
(236,366,cs),
(236,355,o),
(202,329,o),
(157,282,c),
(157,788,l),
(157,788,l),
(157,807,o),
(149,817,o),
(132,817,cs),
(51,817,o),
(-33,807,o),
(-33,775,cs),
(-33,752,o),
(-10,749,o),
(13,749,cs),
(42,749,ls),
(57,749,o),
(64,741,o),
(64,726,cs),
(64,691,o),
(65,648,o),
(66,592,cs),
(67,535,o),
(68,463,o),
(68,370,cs),
(68,269,o),
(63,163,o),
(63,107,cs),
(63,68,o),
(50,59,o),
(19,55,cs),
(16,54,o),
(11,52,o),
(6,49,cs),
(1,46,o),
(-2,37,o),
(-2,24,cs),
(-2,0,o),
(26,-6,o),
(49,-6,cs),
(58,-6,o),
(70,-6,o),
(85,-5,cs),
(99,-4,o),
(111,-4,o),
(122,-4,cs),
(147,-4,o),
(168,-4,o),
(185,-5,cs),
(201,-6,o),
(216,-6,o),
(231,-6,cs),
(247,-6,o),
(260,-4,o),
(260,23,cs),
(260,43,o),
(249,53,o),
(218,53,cs),
(157,53,l),
(157,185,l),
(176,205,l),
(189,178,o),
(219,121,o),
(256,54,cs),
(291,-13,o),
(322,-58,o),
(339,-58,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
100 48 1 40
CALL[ ]	/* CallFunction */";
};
width = 549;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(416,-58,o),
(465,-57,o),
(494,-54,cs),
(523,-52,o),
(537,-45,o),
(537,-34,cs),
(537,-13,o),
(502,-9,o),
(471,-9,cs),
(443,-9,o),
(422,-8,o),
(409,-7,cs),
(395,-6,o),
(385,-3,o),
(380,2,cs),
(346,33,o),
(271,177,o),
(235,268,c),
(251,282,o),
(267,298,o),
(280,310,cs),
(295,325,o),
(315,343,o),
(339,366,cs),
(346,373,o),
(357,378,o),
(370,379,cs),
(405,382,o),
(430,386,o),
(447,389,cs),
(463,392,o),
(471,399,o),
(471,409,cs),
(471,419,o),
(464,425,o),
(449,428,cs),
(434,430,o),
(409,431,o),
(376,431,cs),
(297,431,ls),
(272,431,o),
(253,430,o),
(240,428,cs),
(227,425,o),
(220,418,o),
(220,407,cs),
(220,391,o),
(230,384,o),
(245,384,cs),
(249,384,ls),
(255,384,o),
(258,381,o),
(258,374,cs),
(258,369,o),
(249,358,o),
(232,342,cs),
(214,326,o),
(185,300,o),
(146,264,c),
(146,788,l),
(146,788,l),
(146,807,o),
(138,817,o),
(121,817,cs),
(17,817,o),
(-36,801,o),
(-36,781,cs),
(-36,762,o),
(-14,761,o),
(2,761,cs),
(52,761,ls),
(67,761,o),
(74,753,o),
(74,738,cs),
(74,702,o),
(75,659,o),
(76,600,cs),
(77,540,o),
(78,466,o),
(78,370,cs),
(78,292,o),
(77,245,o),
(76,214,cs),
(74,181,o),
(73,146,o),
(73,95,cs),
(73,56,o),
(62,50,o),
(29,43,cs),
(6,39,o),
(-5,40,o),
(-5,17,cs),
(-5,-2,o),
(15,-6,o),
(38,-6,cs),
(47,-6,o),
(59,-6,o),
(74,-5,cs),
(88,-4,o),
(100,-4,o),
(111,-4,cs),
(136,-4,o),
(157,-4,o),
(174,-5,cs),
(190,-6,o),
(205,-6,o),
(220,-6,cs),
(236,-6,o),
(249,-3,o),
(249,16,cs),
(249,32,o),
(238,41,o),
(207,41,cs),
(146,41,l),
(146,185,l),
(179,216,l),
(191,194,o),
(219,137,o),
(260,63,cs),
(305,-18,o),
(335,-59,o),
(349,-59,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
95 42 1 40
CALL[ ]	/* CallFunction */";
};
width = 533;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(411,-59,o),
(448,-58,o),
(474,-57,cs),
(499,-56,o),
(512,-51,o),
(512,-44,cs),
(512,-37,o),
(508,-33,o),
(501,-31,cs),
(493,-30,o),
(481,-29,o),
(466,-29,cs),
(438,-29,o),
(417,-28,o),
(404,-27,cs),
(391,-26,o),
(382,-23,o),
(378,-18,cs),
(308,68,o),
(232,233,o),
(220,268,c),
(254,298,o),
(293,336,o),
(345,386,cs),
(352,393,o),
(363,398,o),
(376,399,cs),
(432,403,o),
(457,406,o),
(457,419,cs),
(457,431,o),
(387,431,o),
(303,431,cs),
(253,431,o),
(228,426,o),
(228,417,cs),
(228,409,o),
(235,405,o),
(248,404,cs),
(282,402,ls),
(290,402,o),
(294,399,o),
(294,394,cs),
(294,385,o),
(241,329,o),
(131,234,c),
(131,788,ls),
(131,807,o),
(123,817,o),
(106,817,cs),
(8,817,o),
(-41,802,o),
(-41,791,cs),
(-41,788,o),
(-38,785,o),
(-33,784,cs),
(-28,782,o),
(-21,781,o),
(-13,781,cs),
(67,781,ls),
(82,781,o),
(89,773,o),
(89,758,cs),
(89,719,o),
(90,674,o),
(91,612,cs),
(92,550,o),
(93,471,o),
(93,370,cs),
(93,286,o),
(92,234,o),
(91,202,cs),
(89,167,o),
(88,130,o),
(88,75,cs),
(88,36,o),
(81,28,o),
(44,23,cs),
(21,20,o),
(6,17,o),
(0,15,cs),
(-7,12,o),
(-10,9,o),
(-10,6,cs),
(-10,-2,o),
(1,-6,o),
(23,-6,cs),
(32,-6,o),
(44,-6,o),
(59,-5,cs),
(73,-4,o),
(85,-4,o),
(96,-4,cs),
(121,-4,o),
(142,-4,o),
(159,-5,cs),
(175,-6,o),
(190,-6,o),
(205,-6,cs),
(213,-6,o),
(220,-5,o),
(226,-3,cs),
(231,-1,o),
(234,2,o),
(234,5,cs),
(234,9,o),
(231,13,o),
(225,16,cs),
(218,19,o),
(207,21,o),
(192,21,cs),
(131,21,l),
(131,185,l),
(184,235,l),
(196,212,o),
(225,152,o),
(270,72,cs),
(312,-5,o),
(348,-59,o),
(364,-59,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
95 42 1 40
CALL[ ]	/* CallFunction */";
};
width = 510;
}
);
note = k.salt;
},
{
glyphname = s.salt;
kernLeft = s.salt;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(115,-7,o),
(118,7,o),
(123,50,c),
(140,13,o),
(192,0,o),
(239,0,cs),
(313,0,o),
(411,16,o),
(411,102,cs),
(411,190,o),
(343,229,o),
(219,246,cs),
(181,251,o),
(128,269,o),
(128,311,cs),
(128,356,o),
(158,387,o),
(207,387,cs),
(260,387,o),
(299,359,o),
(314,343,cs),
(325,330,o),
(332,317,o),
(335,304,cs),
(337,291,o),
(338,284,o),
(338,282,cs),
(338,272,o),
(349,253,o),
(380,253,cs),
(408,253,o),
(420,272,o),
(420,283,cs),
(420,290,o),
(420,308,o),
(421,336,cs),
(421,363,o),
(421,397,o),
(421,437,cs),
(421,456,o),
(415,473,o),
(375,473,cs),
(344,473,o),
(338,454,o),
(338,430,cs),
(338,418,o),
(339,405,o),
(340,388,c),
(332,416,o),
(290,465,o),
(210,465,cs),
(123,465,o),
(34,409,o),
(34,309,cs),
(34,222,o),
(104,189,o),
(141,178,cs),
(218,155,o),
(317,158,o),
(317,110,cs),
(317,78,o),
(236,75,o),
(211,75,cs),
(187,75,o),
(140,83,o),
(135,91,c),
(132,94,o),
(128,102,o),
(124,115,cs),
(119,127,o),
(114,139,o),
(108,150,cs),
(104,157,o),
(93,175,o),
(68,175,cs),
(53,175,o),
(38,165,o),
(38,148,cs),
(38,134,o),
(39,120,o),
(41,107,cs),
(42,93,o),
(43,80,o),
(43,67,cs),
(43,58,o),
(43,49,o),
(42,40,cs),
(41,31,o),
(40,23,o),
(40,16,cs),
(40,1,o),
(56,-7,o),
(77,-7,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
58 4 1 40
CALL[ ]	/* CallFunction */";
};
width = 458;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(101,-7,o),
(102,7,o),
(105,50,c),
(123,16,o),
(177,0,o),
(212,0,cs),
(282,0,o),
(393,23,o),
(393,102,cs),
(393,182,o),
(318,212,o),
(222,229,cs),
(177,237,o),
(110,247,o),
(110,311,cs),
(110,367,o),
(149,405,o),
(210,405,cs),
(263,405,o),
(300,380,o),
(319,353,cs),
(328,338,o),
(334,324,o),
(336,311,cs),
(338,298,o),
(340,288,o),
(341,282,c),
(341,274,o),
(346,255,o),
(373,255,cs),
(394,255,o),
(402,272,o),
(402,283,cs),
(402,290,o),
(402,308,o),
(403,336,cs),
(403,363,o),
(403,397,o),
(403,437,cs),
(403,452,o),
(401,469,o),
(369,469,cs),
(346,469,o),
(341,454,o),
(341,430,cs),
(341,418,o),
(342,405,o),
(343,388,c),
(335,416,o),
(293,465,o),
(213,465,cs),
(126,465,o),
(37,409,o),
(37,309,cs),
(37,222,o),
(107,189,o),
(144,178,cs),
(210,158,o),
(320,160,o),
(320,101,cs),
(320,90,o),
(310,81,o),
(291,72,cs),
(271,63,o),
(244,58,o),
(210,58,cs),
(170,58,o),
(122,74,o),
(116,88,cs),
(111,101,o),
(108,112,o),
(106,119,cs),
(104,126,o),
(101,134,o),
(98,141,cs),
(91,156,o),
(86,166,o),
(82,170,cs),
(77,173,o),
(71,175,o),
(64,175,cs),
(53,175,o),
(41,165,o),
(41,148,cs),
(41,134,o),
(42,120,o),
(44,107,cs),
(45,93,o),
(46,80,o),
(46,67,cs),
(46,58,o),
(46,49,o),
(45,40,cs),
(44,31,o),
(43,23,o),
(43,16,cs),
(43,1,o),
(62,-7,o),
(70,-7,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
54 2 1 40
CALL[ ]	/* CallFunction */";
};
width = 441;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(66,-7,o),
(71,-3,o),
(74,6,cs),
(77,14,o),
(79,29,o),
(80,50,c),
(102,17,o),
(161,0,o),
(205,0,cs),
(275,0,o),
(368,37,o),
(368,102,cs),
(368,173,o),
(274,189,o),
(227,199,cs),
(170,210,o),
(85,217,o),
(85,311,cs),
(85,386,o),
(135,435,o),
(215,435,cs),
(268,435,o),
(305,413,o),
(326,369,cs),
(343,334,o),
(342,296,o),
(346,282,cs),
(347,275,o),
(350,259,o),
(363,259,cs),
(374,259,o),
(377,272,o),
(377,283,cs),
(377,290,o),
(377,308,o),
(378,336,cs),
(378,363,o),
(378,397,o),
(378,437,cs),
(378,452,o),
(372,463,o),
(360,463,cs),
(355,463,o),
(351,461,o),
(349,456,cs),
(347,451,o),
(346,442,o),
(346,430,cs),
(346,418,o),
(347,405,o),
(348,388,c),
(340,416,o),
(298,465,o),
(218,465,cs),
(131,465,o),
(42,409,o),
(42,309,cs),
(42,222,o),
(112,189,o),
(149,178,cs),
(215,158,o),
(325,160,o),
(325,101,cs),
(325,58,o),
(276,30,o),
(208,30,cs),
(155,30,o),
(110,48,o),
(91,88,cs),
(84,103,o),
(82,113,o),
(77,141,cs),
(74,156,o),
(72,165,o),
(70,169,cs),
(67,173,o),
(64,175,o),
(59,175,cs),
(48,175,o),
(46,165,o),
(46,148,cs),
(46,134,o),
(47,120,o),
(49,107,cs),
(50,93,o),
(51,80,o),
(51,67,cs),
(51,58,o),
(51,49,o),
(50,40,cs),
(49,31,o),
(48,23,o),
(48,16,cs),
(48,1,o),
(52,-7,o),
(60,-7,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
40 2 1 40
CALL[ ]	/* CallFunction */";
};
width = 417;
}
);
note = s.salt;
},
{
glyphname = c_h;
kernLeft = c;
kernRight = c_h;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
anchors = (
{
name = bottom_1;
pos = (240,0);
},
{
name = bottom_2;
pos = (721,0);
},
{
name = caret_1;
pos = (480.5,0);
},
{
name = top_1;
pos = (240,436);
},
{
name = top_2;
pos = (721,436);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(758,-93,o),
(809,-90,o),
(840,-90,cs),
(878,-90,o),
(932,-93,o),
(931,-93,cs),
(956,-93,o),
(980,-87,o),
(980,-64,cs),
(980,-37,o),
(957,-32,o),
(933,-32,cs),
(916,-32,l),
(916,176,ls),
(916,203,o),
(917,242,o),
(912,293,cs),
(906,344,o),
(868,428,o),
(732,428,cs),
(680,428,o),
(641,418,o),
(610,375,c),
(610,666,ls),
(610,689,o),
(584,767,o),
(481,767,cs),
(400,767,o),
(355,728,o),
(355,615,cs),
(355,547,o),
(369,482,o),
(380,442,cs),
(381,437,o),
(383,432,o),
(385,427,cs),
(386,422,o),
(387,420,o),
(387,419,c),
(354,468,o),
(308,482,o),
(261,482,cs),
(124,482,o),
(26,367,o),
(26,226,cs),
(26,96,o),
(111,-6,o),
(248,-6,cs),
(355,-6,o),
(421,54,o),
(448,103,cs),
(452,110,o),
(457,118,o),
(457,129,cs),
(457,132,o),
(455,138,o),
(452,145,cs),
(448,152,o),
(439,156,o),
(424,156,cs),
(407,156,o),
(394,152,o),
(387,145,cs),
(379,137,o),
(374,131,o),
(373,128,cs),
(365,108,o),
(333,74,o),
(260,74,cs),
(161,74,o),
(122,133,o),
(122,225,cs),
(122,332,o),
(176,404,o),
(269,404,cs),
(349,404,o),
(365,350,o),
(375,319,cs),
(386,283,o),
(408,280,o),
(427,280,cs),
(470,280,o),
(475,307,o),
(475,322,cs),
(475,372,o),
(445,515,o),
(445,609,cs),
(445,674,o),
(461,689,o),
(481,689,cs),
(489,689,o),
(497,686,o),
(506,679,cs),
(515,672,o),
(519,657,o),
(519,634,cs),
(519,598,o),
(520,522,o),
(520,406,cs),
(520,360,o),
(520,259,o),
(513,104,cs),
(512,73,o),
(506,68,o),
(487,64,cs),
(433,53,o),
(423,46,o),
(423,24,cs),
(423,3,o),
(434,0,o),
(455,0,cs),
(465,0,o),
(477,1,o),
(490,2,cs),
(503,3,o),
(517,3,o),
(532,3,cs),
(547,3,o),
(566,3,o),
(587,2,cs),
(608,1,o),
(629,0,o),
(648,0,cs),
(665,0,o),
(685,9,o),
(685,30,cs),
(685,57,o),
(652,64,o),
(626,64,cs),
(604,64,l),
(604,193,ls),
(604,266,o),
(630,351,o),
(729,351,cs),
(797,351,o),
(814,309,o),
(819,288,cs),
(824,259,o),
(825,192,o),
(825,137,cs),
(825,117,o),
(825,30,o),
(822,0,cs),
(819,-25,o),
(810,-28,o),
(787,-31,cs),
(748,-36,o),
(705,-38,o),
(705,-66,cs),
(705,-87,o),
(731,-93,o),
(755,-93,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
163 12 1 40
CALL[ ]	/* CallFunction */";
};
width = 961;
},
{
anchors = (
{
name = bottom_1;
pos = (239,0);
},
{
name = bottom_2;
pos = (718,0);
},
{
name = caret_1;
pos = (478.5,0);
},
{
name = top_1;
pos = (239,436);
},
{
name = top_2;
pos = (718,436);
}
);
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(766,-81,o),
(779,-80,o),
(796,-79,cs),
(813,-78,o),
(829,-78,o),
(843,-78,cs),
(873,-78,o),
(912,-81,o),
(935,-81,cs),
(958,-81,o),
(976,-76,o),
(976,-60,cs),
(976,-37,o),
(942,-32,o),
(912,-32,cs),
(898,-32,l),
(898,176,ls),
(898,219,o),
(898,262,o),
(894,293,cs),
(889,339,o),
(860,428,o),
(732,428,cs),
(672,428,o),
(624,409,o),
(592,357,c),
(592,666,ls),
(592,690,o),
(581,767,o),
(478,767,cs),
(403,767,o),
(358,726,o),
(358,614,cs),
(358,546,o),
(374,479,o),
(383,442,cs),
(384,435,o),
(386,430,o),
(387,427,cs),
(388,424,o),
(388,421,o),
(389,420,cs),
(354,468,o),
(311,482,o),
(264,482,cs),
(127,482,o),
(29,367,o),
(29,227,cs),
(29,96,o),
(115,-6,o),
(247,-6,cs),
(344,-6,o),
(409,50,o),
(437,103,cs),
(442,112,o),
(446,121,o),
(446,128,cs),
(446,135,o),
(443,150,o),
(420,150,cs),
(396,150,o),
(386,135,o),
(383,128,c),
(366,98,o),
(338,56,o),
(256,56,cs),
(155,56,o),
(104,122,o),
(104,226,cs),
(104,340,o),
(167,422,o),
(270,422,cs),
(357,422,o),
(374,366,o),
(386,319,cs),
(393,292,o),
(408,286,o),
(424,286,cs),
(453,286,o),
(457,306,o),
(457,321,cs),
(457,372,o),
(427,513,o),
(427,610,cs),
(427,704,o),
(462,707,o),
(477,707,cs),
(498,707,o),
(522,698,o),
(522,646,cs),
(522,517,ls),
(522,484,o),
(522,447,o),
(523,406,cs),
(523,333,o),
(518,130,o),
(516,92,cs),
(515,61,o),
(509,55,o),
(490,52,cs),
(462,48,o),
(441,44,o),
(428,40,cs),
(415,36,o),
(408,29,o),
(408,19,cs),
(408,2,o),
(426,0,o),
(446,0,cs),
(459,0,o),
(473,1,o),
(489,2,cs),
(504,3,o),
(520,3,o),
(535,3,cs),
(550,3,o),
(569,3,o),
(590,2,cs),
(611,1,o),
(632,0,o),
(651,0,cs),
(662,0,o),
(681,7,o),
(681,24,cs),
(681,47,o),
(650,52,o),
(629,52,cs),
(586,52,l),
(586,193,ls),
(586,278,o),
(627,369,o),
(726,369,cs),
(796,369,o),
(819,313,o),
(822,288,cs),
(827,255,o),
(828,181,o),
(828,132,cs),
(828,125,o),
(828,31,o),
(825,0,cs),
(822,-24,o),
(814,-28,o),
(790,-31,cs),
(758,-33,o),
(715,-37,o),
(715,-60,cs),
(715,-76,o),
(734,-81,o),
(757,-81,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
155 12 1 40
CALL[ ]	/* CallFunction */";
};
width = 957;
},
{
anchors = (
{
name = bottom_1;
pos = (238,0);
},
{
name = bottom_2;
pos = (714,0);
},
{
name = caret_1;
pos = (476,0);
},
{
name = top_1;
pos = (238,436);
},
{
name = top_2;
pos = (714,436);
}
);
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(769,-61,o),
(783,-60,o),
(800,-59,cs),
(817,-58,o),
(832,-58,o),
(847,-58,cs),
(861,-58,o),
(878,-58,o),
(897,-59,cs),
(916,-60,o),
(930,-61,o),
(941,-61,cs),
(960,-61,o),
(970,-57,o),
(970,-50,cs),
(970,-37,o),
(943,-32,o),
(916,-32,cs),
(872,-32,l),
(872,176,ls),
(872,228,o),
(872,258,o),
(868,293,cs),
(863,340,o),
(843,428,o),
(732,428,cs),
(660,428,o),
(601,391,o),
(566,327,c),
(566,666,ls),
(566,693,o),
(560,767,o),
(474,767,cs),
(406,767,o),
(362,722,o),
(362,613,cs),
(362,552,o),
(379,475,o),
(387,442,cs),
(388,436,o),
(389,431,o),
(390,428,cs),
(390,425,o),
(391,422,o),
(392,420,cs),
(353,468,o),
(315,482,o),
(268,482,cs),
(131,482,o),
(33,367,o),
(33,228,cs),
(33,95,o),
(120,-6,o),
(246,-6,cs),
(341,-6,o),
(396,53,o),
(421,103,cs),
(426,114,o),
(430,123,o),
(430,127,cs),
(430,131,o),
(427,140,o),
(415,140,cs),
(406,140,o),
(400,135,o),
(397,128,c),
(371,79,o),
(338,26,o),
(251,26,cs),
(144,26,o),
(78,103,o),
(78,227,cs),
(78,358,o),
(153,452,o),
(271,452,cs),
(374,452,o),
(393,378,o),
(401,319,cs),
(402,312,o),
(405,296,o),
(420,296,cs),
(432,296,o),
(432,307,o),
(432,320,cs),
(432,371,o),
(401,516,o),
(401,612,cs),
(401,717,o),
(442,737,o),
(472,737,cs),
(503,737,o),
(526,722,o),
(526,666,cs),
(526,500,o),
(527,454,o),
(527,406,cs),
(527,281,o),
(524,134,o),
(521,72,cs),
(520,41,o),
(513,35,o),
(494,32,cs),
(469,29,o),
(449,27,o),
(435,24,cs),
(421,21,o),
(414,17,o),
(414,10,cs),
(414,5,o),
(417,3,o),
(424,2,cs),
(430,1,o),
(438,0,o),
(447,0,cs),
(463,0,o),
(479,1,o),
(494,2,cs),
(509,3,o),
(524,3,o),
(539,3,cs),
(554,3,o),
(573,3,o),
(594,2,cs),
(615,1,o),
(636,0,o),
(655,0,cs),
(666,0,o),
(675,6,o),
(675,14,cs),
(675,26,o),
(654,32,o),
(633,32,cs),
(560,32,l),
(560,193,ls),
(560,301,o),
(621,399,o),
(722,399,cs),
(808,399,o),
(820,332,o),
(826,288,cs),
(832,234,o),
(832,120,o),
(832,123,cs),
(832,127,o),
(832,31,o),
(829,0,cs),
(826,-23,o),
(821,-28,o),
(794,-31,cs),
(768,-33,o),
(729,-37,o),
(729,-50,cs),
(729,-57,o),
(739,-61,o),
(760,-61,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
153 9 1 40
CALL[ ]	/* CallFunction */";
};
width = 952;
}
);
note = c_h;
},
{
glyphname = c_k;
kernLeft = c;
kernRight = c_k;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
anchors = (
{
name = bottom_1;
pos = (236,0);
},
{
name = bottom_2;
pos = (707,0);
},
{
name = caret_1;
pos = (471.5,0);
},
{
name = top_1;
pos = (236,436);
},
{
name = top_2;
pos = (707,436);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(921,-58,o),
(966,-60,o),
(966,-29,cs),
(966,-1,o),
(918,3,o),
(886,3,cs),
(873,4,o),
(862,4,o),
(854,5,cs),
(845,6,o),
(840,7,o),
(838,9,c),
(833,12,o),
(738,143,o),
(690,256,c),
(729,292,o),
(761,323,o),
(789,354,cs),
(795,361,o),
(805,366,o),
(820,367,cs),
(900,375,o),
(901,383,o),
(901,400,cs),
(901,432,o),
(860,432,o),
(740,432,cs),
(689,432,o),
(658,420,o),
(658,393,cs),
(658,382,o),
(667,374,o),
(674,374,cs),
(681,374,ls),
(684,374,o),
(688,374,o),
(691,373,cs),
(694,372,o),
(695,371,o),
(694,370,cs),
(690,359,o),
(655,327,o),
(610,282,c),
(610,666,ls),
(610,682,o),
(600,767,o),
(476,767,cs),
(401,767,o),
(355,727,o),
(355,614,cs),
(355,543,o),
(370,483,o),
(379,447,cs),
(381,439,o),
(383,433,o),
(384,429,cs),
(385,424,o),
(386,422,o),
(386,421,c),
(353,468,o),
(308,482,o),
(261,482,cs),
(124,482,o),
(26,367,o),
(26,226,cs),
(26,96,o),
(111,-6,o),
(248,-6,cs),
(355,-6,o),
(421,54,o),
(448,103,cs),
(452,110,o),
(457,118,o),
(457,129,cs),
(457,139,o),
(452,156,o),
(424,156,cs),
(407,156,o),
(394,152,o),
(387,145,cs),
(379,137,o),
(374,131,o),
(373,128,cs),
(365,108,o),
(333,74,o),
(260,74,cs),
(161,74,o),
(122,133,o),
(122,225,cs),
(122,332,o),
(176,404,o),
(269,404,cs),
(349,404,o),
(365,350,o),
(375,319,cs),
(386,286,o),
(404,280,o),
(427,280,cs),
(470,280,o),
(475,307,o),
(475,322,cs),
(475,372,o),
(445,515,o),
(445,609,cs),
(445,673,o),
(460,689,o),
(482,689,cs),
(501,689,o),
(518,678,o),
(519,633,cs),
(520,566,o),
(521,521,o),
(521,481,cs),
(521,443,o),
(521,399,o),
(521,356,cs),
(521,259,o),
(517,202,o),
(517,87,cs),
(517,67,o),
(500,60,o),
(472,55,cs),
(461,52,o),
(452,49,o),
(452,24,cs),
(452,-3,o),
(480,-6,o),
(501,-6,cs),
(522,-6,o),
(545,-4,o),
(570,-4,cs),
(608,-4,o),
(644,-6,o),
(667,-6,cs),
(678,-6,o),
(693,-1,o),
(693,22,cs),
(693,43,o),
(683,53,o),
(651,53,cs),
(610,53,l),
(610,185,l),
(629,205,l),
(642,178,o),
(672,121,o),
(709,54,cs),
(744,-13,o),
(775,-58,o),
(792,-58,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
75 21 1 40
CALL[ ]	/* CallFunction */";
};
width = 943;
},
{
anchors = (
{
name = bottom_1;
pos = (236,0);
},
{
name = bottom_2;
pos = (708,0);
},
{
name = caret_1;
pos = (472,0);
},
{
name = top_1;
pos = (236,436);
},
{
name = top_2;
pos = (708,436);
}
);
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(905,-59,o),
(958,-59,o),
(958,-34,cs),
(958,-13,o),
(923,-9,o),
(892,-9,cs),
(837,-9,o),
(835,-7,o),
(826,2,cs),
(792,33,o),
(717,177,o),
(681,268,c),
(697,282,o),
(713,298,o),
(726,310,cs),
(741,325,o),
(761,343,o),
(785,366,cs),
(792,373,o),
(803,378,o),
(816,379,cs),
(875,384,o),
(897,387,o),
(897,409,cs),
(897,419,o),
(890,425,o),
(875,428,cs),
(860,430,o),
(835,431,o),
(802,431,cs),
(743,431,ls),
(718,431,o),
(698,430,o),
(683,428,cs),
(668,425,o),
(660,418,o),
(660,407,cs),
(660,391,o),
(676,384,o),
(691,384,cs),
(695,384,ls),
(701,384,o),
(704,381,o),
(704,374,cs),
(704,369,o),
(695,358,o),
(678,342,cs),
(660,326,o),
(631,300,o),
(592,264,c),
(592,666,ls),
(592,692,o),
(577,767,o),
(475,767,cs),
(404,767,o),
(358,726,o),
(358,614,cs),
(358,546,o),
(374,479,o),
(383,442,cs),
(384,435,o),
(386,430,o),
(387,427,cs),
(388,424,o),
(388,421,o),
(389,420,cs),
(354,468,o),
(311,482,o),
(264,482,cs),
(127,482,o),
(29,367,o),
(29,227,cs),
(29,96,o),
(115,-6,o),
(247,-6,cs),
(344,-6,o),
(409,50,o),
(437,103,cs),
(442,112,o),
(446,121,o),
(446,128,cs),
(446,135,o),
(443,150,o),
(420,150,cs),
(396,150,o),
(386,135,o),
(383,128,c),
(366,98,o),
(338,56,o),
(256,56,cs),
(155,56,o),
(104,122,o),
(104,226,cs),
(104,340,o),
(167,422,o),
(270,422,cs),
(357,422,o),
(374,366,o),
(386,319,cs),
(393,292,o),
(408,286,o),
(424,286,cs),
(453,286,o),
(457,306,o),
(457,321,cs),
(457,372,o),
(427,513,o),
(427,610,cs),
(427,700,o),
(461,707,o),
(477,707,cs),
(498,707,o),
(521,695,o),
(522,646,cs),
(524,544,o),
(524,458,o),
(524,370,cs),
(524,292,o),
(523,245,o),
(522,214,cs),
(520,181,o),
(519,146,o),
(519,95,cs),
(519,56,o),
(508,50,o),
(475,43,cs),
(452,39,o),
(441,40,o),
(441,17,cs),
(441,-2,o),
(461,-6,o),
(484,-6,cs),
(493,-6,o),
(505,-6,o),
(520,-5,cs),
(534,-4,o),
(546,-4,o),
(557,-4,cs),
(588,-4,o),
(630,-6,o),
(654,-6,cs),
(670,-6,o),
(683,-3,o),
(683,16,cs),
(683,32,o),
(672,41,o),
(641,41,cs),
(592,41,l),
(592,185,l),
(625,216,l),
(637,194,o),
(665,137,o),
(706,63,cs),
(734,13,o),
(776,-59,o),
(795,-59,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
131 77 1 40
CALL[ ]	/* CallFunction */";
};
width = 944;
},
{
anchors = (
{
name = bottom_1;
pos = (236,0);
},
{
name = bottom_2;
pos = (709,0);
},
{
name = caret_1;
pos = (472.5,0);
},
{
name = top_1;
pos = (236,436);
},
{
name = top_2;
pos = (709,436);
}
);
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(852,-59,o),
(890,-58,o),
(913,-57,cs),
(936,-56,o),
(947,-51,o),
(947,-42,cs),
(947,-33,o),
(932,-29,o),
(901,-29,cs),
(873,-29,o),
(852,-28,o),
(839,-27,cs),
(826,-26,o),
(817,-23,o),
(813,-18,cs),
(743,68,o),
(667,233,o),
(655,268,c),
(677,287,o),
(709,318,o),
(780,386,cs),
(787,393,o),
(798,398,o),
(811,399,cs),
(839,402,o),
(860,404,o),
(873,406,cs),
(886,408,o),
(892,412,o),
(892,417,cs),
(892,423,o),
(882,427,o),
(863,429,cs),
(844,430,o),
(813,431,o),
(772,431,cs),
(731,431,o),
(702,430,o),
(687,429,cs),
(671,427,o),
(663,423,o),
(663,416,cs),
(663,413,o),
(664,411,o),
(667,409,cs),
(670,406,o),
(675,405,o),
(683,404,cs),
(717,402,ls),
(724,402,o),
(729,399,o),
(729,395,cs),
(729,380,o),
(646,303,o),
(566,234,c),
(566,666,ls),
(566,693,o),
(560,767,o),
(474,767,cs),
(406,767,o),
(362,722,o),
(362,614,cs),
(362,551,o),
(378,477,o),
(387,442,cs),
(388,437,o),
(389,433,o),
(389,429,cs),
(389,425,o),
(390,422,o),
(391,419,c),
(352,468,o),
(315,482,o),
(268,482,cs),
(131,482,o),
(33,367,o),
(33,228,cs),
(33,95,o),
(120,-6,o),
(246,-6,cs),
(341,-6,o),
(396,53,o),
(421,103,cs),
(426,114,o),
(430,123,o),
(430,127,cs),
(430,131,o),
(427,140,o),
(415,140,cs),
(406,140,o),
(400,135,o),
(397,128,c),
(371,79,o),
(338,26,o),
(251,26,cs),
(144,26,o),
(78,103,o),
(78,227,cs),
(78,358,o),
(153,452,o),
(271,452,cs),
(374,452,o),
(393,378,o),
(401,319,cs),
(402,312,o),
(405,296,o),
(420,296,cs),
(432,296,o),
(432,307,o),
(432,320,cs),
(432,371,o),
(401,516,o),
(401,612,cs),
(401,729,o),
(453,737,o),
(473,737,cs),
(504,737,o),
(525,723,o),
(526,667,cs),
(526,520,o),
(528,435,o),
(528,393,cs),
(528,329,o),
(526,218,o),
(523,75,cs),
(523,33,o),
(518,31,o),
(479,23,cs),
(458,20,o),
(443,17,o),
(436,15,cs),
(429,13,o),
(425,10,o),
(425,6,cs),
(425,-2,o),
(437,-6,o),
(460,-6,cs),
(469,-6,o),
(480,-6,o),
(493,-5,cs),
(506,-4,o),
(521,-4,o),
(538,-4,cs),
(573,-4,o),
(610,-6,o),
(635,-6,cs),
(658,-6,o),
(669,-2,o),
(669,6,cs),
(669,9,o),
(666,13,o),
(660,16,cs),
(653,19,o),
(642,21,o),
(627,21,cs),
(566,21,l),
(566,185,l),
(619,235,l),
(631,212,o),
(662,152,o),
(705,72,cs),
(747,-5,o),
(783,-59,o),
(799,-59,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
156 40 1 40
CALL[ ]	/* CallFunction */";
};
width = 945;
}
);
note = c_k;
},
{
glyphname = c_p;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
anchors = (
{
name = bottom_1;
pos = (248,0);
},
{
name = bottom_2;
pos = (744,0);
},
{
name = caret_1;
pos = (496,0);
},
{
name = top_1;
pos = (248,436);
},
{
name = top_2;
pos = (744,436);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(654,-202,ls),
(667,-202,o),
(683,-195,o),
(683,-176,cs),
(683,-152,o),
(657,-142,o),
(624,-142,cs),
(610,-142,l),
(610,20,l),
(625,3,o),
(671,-11,o),
(732,-11,cs),
(852,-11,o),
(964,57,o),
(964,225,cs),
(964,334,o),
(917,471,o),
(745,471,cs),
(676,471,o),
(641,451,o),
(610,428,c),
(610,567,ls),
(610,631,o),
(603,692,o),
(485,692,cs),
(406,692,o),
(355,654,o),
(355,559,cs),
(355,530,o),
(359,504,o),
(366,482,cs),
(373,459,o),
(376,444,o),
(377,436,c),
(341,468,o),
(308,482,o),
(259,482,cs),
(125,482,o),
(26,367,o),
(26,226,cs),
(26,96,o),
(111,-6,o),
(248,-6,cs),
(355,-6,o),
(421,54,o),
(448,103,cs),
(452,110,o),
(457,118,o),
(457,129,cs),
(457,136,o),
(452,156,o),
(424,156,cs),
(407,156,o),
(394,152,o),
(387,145,cs),
(379,137,o),
(374,131,o),
(373,128,cs),
(366,116,o),
(346,74,o),
(260,74,cs),
(161,74,o),
(122,132,o),
(122,224,cs),
(122,333,o),
(183,404,o),
(261,404,cs),
(335,404,o),
(362,344,o),
(375,319,cs),
(387,292,o),
(394,280,o),
(425,280,cs),
(466,280,o),
(475,305,o),
(475,320,cs),
(475,361,o),
(445,469,o),
(445,542,cs),
(445,603,o),
(470,614,o),
(486,614,cs),
(493,614,o),
(501,610,o),
(509,602,cs),
(516,594,o),
(520,579,o),
(520,558,cs),
(520,500,o),
(521,420,o),
(521,316,cs),
(521,215,o),
(522,153,o),
(522,129,cs),
(522,107,o),
(522,22,o),
(519,-86,cs),
(518,-122,o),
(506,-144,o),
(457,-145,cs),
(424,-146,o),
(403,-153,o),
(403,-177,cs),
(403,-198,o),
(416,-202,o),
(429,-202,cs)
);
},
{
closed = 1;
nodes = (
(656,67,o),
(609,128,o),
(609,223,cs),
(609,319,o),
(657,392,o),
(733,392,cs),
(813,392,o),
(869,322,o),
(869,222,cs),
(869,132,o),
(812,67,o),
(733,67,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
133 124 48 18 2 40
CALL[ ]	/* CallFunction */";
};
width = 992;
},
{
anchors = (
{
name = bottom_1;
pos = (244,0);
},
{
name = bottom_2;
pos = (733,0);
},
{
name = caret_1;
pos = (488.5,0);
},
{
name = top_1;
pos = (244,436);
},
{
name = top_2;
pos = (733,436);
}
);
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(657,-202,ls),
(669,-202,o),
(682,-196,o),
(682,-181,cs),
(682,-162,o),
(658,-154,o),
(627,-154,cs),
(592,-154,l),
(592,38,l),
(607,14,o),
(656,-11,o),
(721,-11,cs),
(824,-11,o),
(946,51,o),
(946,229,cs),
(946,336,o),
(903,471,o),
(744,471,cs),
(668,471,o),
(624,440,o),
(592,397,c),
(592,591,ls),
(592,614,o),
(581,692,o),
(481,692,cs),
(406,692,o),
(358,648,o),
(358,560,cs),
(358,504,o),
(380,450,o),
(380,436,c),
(341,471,o),
(310,482,o),
(265,482,cs),
(127,482,o),
(29,368,o),
(29,227,cs),
(29,96,o),
(115,-6,o),
(247,-6,cs),
(344,-6,o),
(409,50,o),
(437,103,cs),
(442,112,o),
(446,121,o),
(446,128,cs),
(446,135,o),
(443,150,o),
(420,150,cs),
(396,150,o),
(386,135,o),
(383,128,c),
(366,98,o),
(338,56,o),
(256,56,cs),
(155,56,o),
(104,121,o),
(104,225,cs),
(104,340,o),
(168,422,o),
(264,422,cs),
(349,422,o),
(372,359,o),
(386,319,cs),
(393,299,o),
(400,286,o),
(424,286,cs),
(453,286,o),
(457,307,o),
(457,320,cs),
(457,370,o),
(427,461,o),
(427,540,cs),
(427,617,o),
(457,632,o),
(480,632,cs),
(497,632,o),
(522,622,o),
(522,571,cs),
(522,517,ls),
(522,504,o),
(522,461,o),
(524,364,cs),
(525,280,o),
(525,211,o),
(525,155,cs),
(525,115,o),
(525,19,o),
(522,-86,cs),
(522,-146,o),
(514,-151,o),
(460,-156,cs),
(445,-158,o),
(409,-156,o),
(409,-182,cs),
(409,-199,o),
(424,-202,o),
(432,-202,cs)
);
},
{
closed = 1;
nodes = (
(634,49,o),
(591,122,o),
(591,219,cs),
(591,336,o),
(655,410,o),
(736,410,cs),
(824,410,o),
(872,321,o),
(872,227,cs),
(872,113,o),
(802,49,o),
(721,49,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
129 99 14 4 2 40
CALL[ ]	/* CallFunction */";
};
width = 977;
},
{
anchors = (
{
name = bottom_1;
pos = (239,0);
},
{
name = bottom_2;
pos = (716,0);
},
{
name = caret_1;
pos = (477.5,0);
},
{
name = top_1;
pos = (239,436);
},
{
name = top_2;
pos = (716,436);
}
);
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(661,-202,ls),
(672,-202,o),
(681,-197,o),
(681,-190,cs),
(681,-179,o),
(664,-174,o),
(631,-174,cs),
(566,-174,l),
(566,68,l),
(582,33,o),
(634,-11,o),
(705,-11,cs),
(785,-11,o),
(920,46,o),
(920,236,cs),
(920,335,o),
(882,471,o),
(743,471,cs),
(659,471,o),
(601,422,o),
(566,346,c),
(566,591,ls),
(566,662,o),
(528,692,o),
(475,692,cs),
(407,692,o),
(362,641,o),
(362,562,cs),
(362,506,o),
(384,448,o),
(384,436,c),
(344,473,o),
(313,482,o),
(273,482,cs),
(130,482,o),
(33,367,o),
(33,228,cs),
(33,96,o),
(120,-6,o),
(245,-6,cs),
(340,-6,o),
(396,52,o),
(421,103,cs),
(426,114,o),
(430,123,o),
(430,127,cs),
(430,131,o),
(427,140,o),
(415,140,cs),
(406,140,o),
(400,135,o),
(397,128,c),
(371,79,o),
(338,26,o),
(251,26,cs),
(144,26,o),
(78,103,o),
(78,227,cs),
(78,358,o),
(153,452,o),
(271,452,cs),
(374,452,o),
(393,378,o),
(401,319,cs),
(402,312,o),
(405,296,o),
(420,296,cs),
(432,296,o),
(432,307,o),
(432,320,cs),
(432,371,o),
(401,441,o),
(401,537,cs),
(401,642,o),
(442,662,o),
(472,662,cs),
(501,662,o),
(526,647,o),
(526,592,cs),
(526,560,o),
(526,506,o),
(528,393,cs),
(529,291,o),
(529,211,o),
(529,135,cs),
(529,41,o),
(526,8,o),
(526,-86,cs),
(526,-166,o),
(518,-170,o),
(464,-175,cs),
(447,-176,o),
(435,-178,o),
(428,-180,cs),
(421,-182,o),
(418,-186,o),
(418,-191,cs),
(418,-202,o),
(429,-202,o),
(436,-202,cs)
);
},
{
closed = 1;
nodes = (
(600,19,o),
(565,112,o),
(565,212,cs),
(565,370,o),
(654,440,o),
(740,440,cs),
(852,440,o),
(876,317,o),
(876,235,cs),
(876,74,o),
(783,19,o),
(704,19,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
139 129 120 24 2 40
CALL[ ]	/* CallFunction */";
};
width = 955;
}
);
note = c_p;
},
{
glyphname = c_t;
kernLeft = c;
kernRight = c_t;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
anchors = (
{
name = bottom_1;
pos = (196,0);
},
{
name = bottom_2;
pos = (587,0);
},
{
name = caret_1;
pos = (391,0);
},
{
name = top_1;
pos = (196,436);
},
{
name = top_2;
pos = (587,436);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(734,-11,o),
(769,81,o),
(769,117,cs),
(769,132,o),
(753,153,o),
(732,153,cs),
(695,153,o),
(688,121,o),
(681,102,cs),
(676,90,o),
(677,67,o),
(646,67,cs),
(620,67,o),
(608,76,o),
(608,152,cs),
(608,404,l),
(630,405,o),
(652,406,o),
(674,407,cs),
(696,407,o),
(717,409,o),
(737,412,cs),
(749,415,o),
(771,424,o),
(771,449,cs),
(771,477,o),
(744,488,o),
(728,488,cs),
(714,488,o),
(627,484,o),
(613,484,c),
(612,496,o),
(612,508,o),
(612,519,cs),
(612,574,ls),
(612,635,o),
(564,692,o),
(483,692,cs),
(411,692,o),
(355,656,o),
(355,559,cs),
(355,530,o),
(358,506,o),
(363,489,cs),
(368,471,o),
(373,453,o),
(377,436,c),
(341,468,o),
(308,482,o),
(259,482,cs),
(125,482,o),
(26,367,o),
(26,226,cs),
(26,96,o),
(111,-6,o),
(248,-6,cs),
(355,-6,o),
(421,54,o),
(448,103,cs),
(452,110,o),
(457,118,o),
(457,129,cs),
(457,139,o),
(448,159,o),
(420,159,cs),
(389,159,o),
(372,136,o),
(368,128,cs),
(361,110,o),
(330,74,o),
(260,74,cs),
(161,74,o),
(122,132,o),
(122,224,cs),
(122,332,o),
(180,404,o),
(259,404,cs),
(329,404,o),
(362,348,o),
(375,319,cs),
(387,291,o),
(396,280,o),
(427,280,cs),
(465,280,o),
(475,303,o),
(475,320,cs),
(475,360,o),
(445,470,o),
(445,541,cs),
(445,604,o),
(472,614,o),
(484,614,cs),
(498,614,o),
(517,609,o),
(517,573,cs),
(517,505,o),
(517,437,o),
(516,370,cs),
(515,302,o),
(515,234,o),
(515,165,cs),
(515,134,o),
(515,72,o),
(543,30,cs),
(561,3,o),
(593,-11,o),
(639,-11,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
66 20 1 40
CALL[ ]	/* CallFunction */";
};
width = 782;
},
{
anchors = (
{
name = bottom_1;
pos = (196,0);
},
{
name = bottom_2;
pos = (587,0);
},
{
name = caret_1;
pos = (391.5,0);
},
{
name = top_1;
pos = (196,436);
},
{
name = top_2;
pos = (587,436);
}
);
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(735,-11,o),
(772,80,o),
(772,117,cs),
(772,128,o),
(766,147,o),
(747,147,cs),
(715,147,o),
(713,124,o),
(705,102,cs),
(697,80,o),
(684,49,o),
(644,49,cs),
(597,49,o),
(590,84,o),
(590,152,cs),
(590,412,l),
(614,413,o),
(639,414,o),
(664,415,cs),
(689,415,o),
(714,417,o),
(738,420,cs),
(750,423,o),
(765,430,o),
(765,449,cs),
(765,470,o),
(745,478,o),
(729,478,cs),
(711,478,o),
(618,474,o),
(593,474,c),
(593,575,ls),
(593,646,o),
(552,692,o),
(481,692,cs),
(406,692,o),
(358,648,o),
(358,560,cs),
(358,504,o),
(380,450,o),
(380,436,c),
(341,471,o),
(310,482,o),
(265,482,cs),
(127,482,o),
(29,368,o),
(29,227,cs),
(29,96,o),
(115,-6,o),
(247,-6,cs),
(344,-6,o),
(409,50,o),
(437,103,cs),
(442,112,o),
(446,121,o),
(446,128,cs),
(446,135,o),
(441,152,o),
(418,152,cs),
(394,152,o),
(383,135,o),
(380,128,c),
(366,103,o),
(342,56,o),
(256,56,cs),
(155,56,o),
(104,121,o),
(104,225,cs),
(104,340,o),
(168,422,o),
(264,422,cs),
(349,422,o),
(372,359,o),
(386,319,cs),
(393,299,o),
(400,286,o),
(424,286,cs),
(453,286,o),
(457,307,o),
(457,320,cs),
(457,370,o),
(427,461,o),
(427,540,cs),
(427,617,o),
(457,632,o),
(480,632,cs),
(497,632,o),
(522,622,o),
(522,571,cs),
(518,165,l),
(518,165,l),
(518,134,o),
(518,72,o),
(546,30,cs),
(564,3,o),
(594,-11,o),
(637,-11,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
111 71 1 40
CALL[ ]	/* CallFunction */";
};
width = 783;
},
{
anchors = (
{
name = bottom_1;
pos = (196,0);
},
{
name = bottom_2;
pos = (588,0);
},
{
name = caret_1;
pos = (392,0);
},
{
name = top_1;
pos = (196,436);
},
{
name = top_2;
pos = (588,436);
}
);
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(736,-11,o),
(776,80,o),
(776,117,cs),
(776,124,o),
(776,137,o),
(761,137,cs),
(746,137,o),
(746,123,o),
(739,102,cs),
(728,64,o),
(698,19,o),
(641,19,cs),
(563,19,o),
(564,98,o),
(564,152,cs),
(564,426,l),
(591,427,o),
(620,428,o),
(650,429,cs),
(679,430,o),
(709,431,o),
(739,434,cs),
(751,435,o),
(756,442,o),
(756,449,cs),
(756,458,o),
(747,462,o),
(730,462,cs),
(710,462,o),
(586,458,o),
(564,458,c),
(564,477,o),
(564,494,o),
(565,510,cs),
(565,523,o),
(565,537,o),
(566,550,cs),
(566,563,o),
(566,572,o),
(566,577,cs),
(566,661,o),
(535,692,o),
(478,692,cs),
(400,692,o),
(362,634,o),
(362,561,cs),
(362,506,o),
(384,449,o),
(384,436,c),
(344,473,o),
(313,482,o),
(273,482,cs),
(130,482,o),
(33,367,o),
(33,228,cs),
(33,96,o),
(120,-6,o),
(245,-6,cs),
(340,-6,o),
(396,52,o),
(421,103,cs),
(426,114,o),
(430,123,o),
(430,127,cs),
(430,131,o),
(427,140,o),
(415,140,cs),
(406,140,o),
(400,135,o),
(397,128,c),
(371,79,o),
(338,26,o),
(251,26,cs),
(144,26,o),
(78,103,o),
(78,227,cs),
(78,358,o),
(153,452,o),
(271,452,cs),
(374,452,o),
(393,378,o),
(401,319,cs),
(402,312,o),
(405,296,o),
(420,296,cs),
(432,296,o),
(432,307,o),
(432,320,cs),
(432,372,o),
(401,441,o),
(401,538,cs),
(401,644,o),
(441,662,o),
(475,662,cs),
(512,662,o),
(526,645,o),
(526,567,cs),
(526,547,o),
(524,499,o),
(524,424,cs),
(522,165,ls),
(522,134,o),
(522,72,o),
(550,30,cs),
(568,3,o),
(596,-11,o),
(634,-11,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
123 80 1 40
CALL[ ]	/* CallFunction */";
};
width = 784;
}
);
note = c_t;
},
{
glyphname = f_b;
kernLeft = f;
kernRight = b;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
anchors = (
{
name = bottom_1;
pos = (202,0);
},
{
name = bottom_2;
pos = (606,0);
},
{
name = caret_1;
pos = (404,0);
},
{
name = top_1;
pos = (202,972);
},
{
name = top_2;
pos = (606,972);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(414,-12,o),
(417,0,o),
(422,68,c),
(444,29,o),
(484,-9,o),
(559,-9,cs),
(658,-9,o),
(780,51,o),
(780,220,cs),
(780,324,o),
(735,458,o),
(605,458,cs),
(529,458,o),
(467,414,o),
(430,334,c),
(430,693,l),
(430,693,l),
(430,765,o),
(426,825,o),
(307,825,cs),
(99,825,o),
(76,637,o),
(76,491,cs),
(76,488,o),
(72,487,o),
(64,487,cs),
(41,487,ls),
(17,487,o),
(-1,479,o),
(-1,452,cs),
(-1,425,o),
(15,411,o),
(38,411,cs),
(64,411,ls),
(75,411,o),
(77,404,o),
(77,385,cs),
(77,300,ls),
(77,158,o),
(76,144,o),
(72,93,c),
(69,77,o),
(64,75,o),
(53,72,cs),
(25,67,o),
(21,59,o),
(21,36,cs),
(21,12,o),
(36,0,o),
(55,0,cs),
(60,0,o),
(112,3,o),
(151,3,cs),
(166,3,o),
(183,3,o),
(200,2,cs),
(217,1,o),
(231,1,o),
(243,1,cs),
(278,1,o),
(285,18,o),
(285,39,cs),
(285,64,o),
(275,76,o),
(256,76,cs),
(165,76,l),
(165,400,ls),
(165,407,o),
(171,411,o),
(183,411,cs),
(198,411,o),
(222,409,o),
(249,409,cs),
(264,409,o),
(288,420,o),
(288,447,cs),
(288,479,o),
(264,487,o),
(251,487,cs),
(173,487,ls),
(168,487,o),
(165,488,o),
(165,490,cs),
(165,587,o),
(166,751,o),
(287,751,cs),
(314,751,o),
(337,734,o),
(338,705,cs),
(338,642,o),
(339,623,o),
(339,526,cs),
(339,389,o),
(338,280,o),
(335,200,cs),
(332,120,o),
(330,65,o),
(330,36,cs),
(330,1,o),
(341,-12,o),
(372,-12,cs)
);
},
{
closed = 1;
nodes = (
(452,70,o),
(431,126,o),
(431,206,cs),
(431,277,o),
(486,379,o),
(573,379,cs),
(635,379,o),
(686,335,o),
(686,228,cs),
(686,96,o),
(610,70,o),
(559,70,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
126 116 105 22 2 40
CALL[ ]	/* CallFunction */";
};
width = 808;
},
{
anchors = (
{
name = bottom_1;
pos = (202,0);
},
{
name = bottom_2;
pos = (605,0);
},
{
name = caret_1;
pos = (403.5,0);
},
{
name = top_1;
pos = (202,972);
},
{
name = top_2;
pos = (605,972);
}
);
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(410,-12,o),
(413,3,o),
(418,68,c),
(440,29,o),
(480,-9,o),
(555,-9,cs),
(654,-9,o),
(776,51,o),
(776,220,cs),
(776,324,o),
(731,458,o),
(601,458,cs),
(525,458,o),
(463,414,o),
(426,334,c),
(426,693,l),
(426,693,l),
(426,766,o),
(421,825,o),
(310,825,cs),
(112,825,o),
(93,636,o),
(93,491,cs),
(93,484,o),
(92,478,o),
(81,478,cs),
(37,478,ls),
(13,478,o),
(-1,472,o),
(-1,452,cs),
(-1,433,o),
(11,420,o),
(34,420,cs),
(81,420,ls),
(92,420,o),
(94,413,o),
(94,394,cs),
(94,300,ls),
(94,273,o),
(95,114,o),
(89,75,cs),
(88,59,o),
(80,58,o),
(52,54,cs),
(37,51,o),
(20,56,o),
(20,21,cs),
(20,10,o),
(35,0,o),
(54,0,cs),
(61,0,o),
(74,1,o),
(93,2,cs),
(111,3,o),
(129,3,o),
(147,3,cs),
(182,3,o),
(225,1,o),
(257,1,cs),
(274,1,o),
(286,4,o),
(291,9,cs),
(296,14,o),
(299,19,o),
(299,24,cs),
(299,52,o),
(290,58,o),
(270,58,cs),
(161,58,l),
(161,409,ls),
(161,416,o),
(167,420,o),
(179,420,cs),
(194,420,o),
(218,418,o),
(245,418,cs),
(260,418,o),
(280,426,o),
(280,447,cs),
(280,471,o),
(260,478,o),
(247,478,cs),
(169,478,ls),
(164,478,o),
(161,480,o),
(161,484,cs),
(161,538,o),
(161,599,o),
(178,664,cs),
(195,726,o),
(231,769,o),
(297,769,cs),
(333,769,o),
(354,744,o),
(355,705,cs),
(355,658,o),
(356,579,o),
(356,526,cs),
(356,389,o),
(355,280,o),
(352,200,cs),
(349,120,o),
(347,65,o),
(347,36,cs),
(347,1,o),
(355,-12,o),
(379,-12,cs)
);
},
{
closed = 1;
nodes = (
(451,52,o),
(425,116,o),
(425,179,cs),
(425,300,o),
(505,397,o),
(592,397,cs),
(637,397,o),
(703,349,o),
(703,228,cs),
(703,78,o),
(610,52,o),
(555,52,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
132 122 111 22 2 40
CALL[ ]	/* CallFunction */";
};
width = 807;
},
{
anchors = (
{
name = bottom_1;
pos = (201,0);
},
{
name = bottom_2;
pos = (604,0);
},
{
name = caret_1;
pos = (402.5,0);
},
{
name = top_1;
pos = (201,972);
},
{
name = top_2;
pos = (604,972);
}
);
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(407,-12,o),
(408,11,o),
(412,68,c),
(434,29,o),
(474,-9,o),
(549,-9,cs),
(648,-9,o),
(770,51,o),
(770,220,cs),
(770,324,o),
(725,458,o),
(595,458,cs),
(519,458,o),
(457,414,o),
(420,334,c),
(420,693,ls),
(420,764,o),
(418,825,o),
(314,825,cs),
(131,825,o),
(122,636,o),
(117,491,cs),
(117,476,o),
(116,463,o),
(105,463,cs),
(31,463,ls),
(19,463,o),
(11,463,o),
(6,462,cs),
(1,461,o),
(-1,457,o),
(-1,452,cs),
(-1,448,o),
(1,444,o),
(5,441,cs),
(9,437,o),
(17,435,o),
(28,435,cs),
(105,435,ls),
(116,435,o),
(118,428,o),
(118,409,cs),
(118,300,ls),
(118,268,o),
(119,87,o),
(113,45,cs),
(110,30,o),
(102,27,o),
(50,24,cs),
(35,23,o),
(18,22,o),
(18,11,cs),
(18,6,o),
(21,3,o),
(28,2,cs),
(35,1,o),
(43,0,o),
(52,0,cs),
(59,0,o),
(72,1,o),
(89,2,cs),
(106,3,o),
(123,3,o),
(141,3,cs),
(176,3,o),
(219,1,o),
(251,1,cs),
(268,1,o),
(280,2,o),
(285,4,cs),
(290,6,o),
(293,9,o),
(293,14,cs),
(293,23,o),
(283,28,o),
(264,28,cs),
(155,28,l),
(155,424,ls),
(155,431,o),
(161,435,o),
(173,435,cs),
(188,435,o),
(212,433,o),
(239,433,cs),
(254,433,o),
(268,436,o),
(268,447,cs),
(268,458,o),
(254,463,o),
(241,463,cs),
(163,463,ls),
(160,463,o),
(158,464,o),
(157,467,cs),
(156,470,o),
(155,475,o),
(155,484,cs),
(155,542,o),
(154,613,o),
(175,683,cs),
(194,751,o),
(236,799,o),
(311,799,cs),
(362,799,o),
(378,778,o),
(379,705,cs),
(379,637,o),
(380,598,o),
(380,526,cs),
(380,389,o),
(379,280,o),
(376,200,cs),
(373,120,o),
(371,65,o),
(371,36,cs),
(371,19,o),
(372,6,o),
(375,-1,cs),
(377,-8,o),
(382,-12,o),
(389,-12,cs)
);
},
{
closed = 1;
nodes = (
(443,22,o),
(419,103,o),
(419,179,cs),
(419,314,o),
(498,427,o),
(586,427,cs),
(648,427,o),
(727,372,o),
(727,228,cs),
(727,56,o),
(616,22,o),
(549,22,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
132 122 111 22 2 40
CALL[ ]	/* CallFunction */";
};
width = 805;
}
);
note = f_b;
},
{
glyphname = f_f;
kernLeft = f_f;
kernRight = f;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
anchors = (
{
name = caret_1;
pos = (258.5,0);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(27,-110,o),
(91,-107,o),
(136,-107,cs),
(151,-107,o),
(170,-107,o),
(191,-108,cs),
(212,-109,o),
(228,-109,o),
(241,-109,cs),
(280,-109,o),
(300,-99,o),
(300,-71,cs),
(300,-36,o),
(281,-32,o),
(254,-32,cs),
(146,-32,l),
(146,392,ls),
(146,399,o),
(149,403,o),
(164,403,cs),
(192,403,o),
(208,404,o),
(223,405,cs),
(235,405,o),
(252,406,o),
(267,406,c),
(269,403,o),
(270,372,o),
(270,316,cs),
(270,278,o),
(271,244,o),
(271,215,cs),
(271,174,o),
(269,134,o),
(265,93,cs),
(264,86,o),
(261,81,o),
(256,78,cs),
(250,75,o),
(238,73,o),
(221,72,cs),
(206,71,o),
(182,64,o),
(182,35,cs),
(182,4,o),
(199,0,o),
(223,0,cs),
(221,0,o),
(292,3,o),
(348,3,cs),
(379,3,o),
(418,1,o),
(459,1,cs),
(492,1,o),
(517,8,o),
(517,39,cs),
(517,71,o),
(500,78,o),
(471,78,cs),
(362,78,l),
(362,392,ls),
(362,395,o),
(363,398,o),
(365,400,cs),
(367,402,o),
(372,403,o),
(380,403,cs),
(395,403,o),
(419,401,o),
(446,401,cs),
(466,401,o),
(492,407,o),
(492,444,cs),
(492,475,o),
(467,479,o),
(448,479,cs),
(370,479,ls),
(365,479,o),
(362,481,o),
(362,484,cs),
(362,542,o),
(366,604,o),
(385,658,cs),
(404,713,o),
(443,751,o),
(511,751,cs),
(530,751,o),
(549,744,o),
(549,737,cs),
(549,734,o),
(548,731,o),
(546,729,cs),
(544,727,o),
(540,723,o),
(534,716,cs),
(522,701,o),
(519,687,o),
(519,676,cs),
(519,656,o),
(537,627,o),
(578,627,cs),
(605,627,o),
(642,650,o),
(642,718,cs),
(642,757,o),
(613,825,o),
(515,825,cs),
(440,825,o),
(390,800,o),
(354,765,c),
(340,772,o),
(322,775,o),
(300,775,cs),
(73,775,o),
(52,630,o),
(52,491,cs),
(52,483,o),
(48,479,o),
(40,479,cs),
(27,479,ls),
(5,479,o),
(-22,479,o),
(-22,441,cs),
(-22,410,o),
(1,403,o),
(24,403,cs),
(40,403,ls),
(45,403,o),
(49,403,o),
(51,402,cs),
(52,401,o),
(53,400,o),
(53,399,cs),
(53,390,o),
(53,371,o),
(54,342,cs),
(55,313,o),
(55,272,o),
(55,221,cs),
(55,179,o),
(54,56,o),
(49,-17,cs),
(48,-30,o),
(41,-37,o),
(26,-38,cs),
(9,-38,o),
(-23,-47,o),
(-23,-75,cs),
(-23,-106,o),
(4,-110,o),
(28,-110,cs)
);
},
{
closed = 1;
nodes = (
(149,479,o),
(146,483,o),
(146,490,cs),
(146,630,o),
(164,700,o),
(295,700,cs),
(296,700,o),
(297,700,o),
(300,700,cs),
(302,700,o),
(304,699,o),
(307,698,c),
(276,617,o),
(268,554,o),
(268,479,c),
(154,479,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
40 1 7 4 162 1 6 14 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 6 14 3 7 6 96 0 4 17 1 14 6 4 14 91 13 1 1 16 1 0 1 0 87 0 7 7 5 83 0 5 5 12 67 12 9 2 2 2 3 83 15 8 2 3 3 23 67 0 10 10 11 83 0 11 11 13 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 6 14 3 14 6 3 104 0 4 17 1 14 6 4 14 91 13 1 1 16 1 0 1 0 87 0 7 7 5 83 0 5 5 12 67 12 9 2 2 2 3 83 15 8 2 3 3 23 67 0 10 10 11 83 0 11 11 13 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 6 14 3 14 6 3 104 0 4 17 1 14 6 4 14 91 15 8 2 3 12 9 2 2 10 3 2 91 13 1 1 16 1 0 1 0 87 0 7 7 5 83 0 5 5 12 67 0 10 10 11 83 0 11 11 13 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 6 14 3 14 6 3 104 0 1 13 0 13 1 96 0 4 17 1 14 6 4 14 91 15 8 2 3 12 9 2 2 10 3 2 91 0 13 16 1 0 13 0 87 0 7 7 5 83 0 5 5 12 67 0 10 10 11 83 0 11 11 13 11 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 6 14 3 14 6 3 104 0 1 13 0 13 1 96 0 4 17 1 14 6 4 14 91 15 8 2 3 12 9 2 2 10 3 2 91 0 13 16 1 0 13 0 87 0 7 7 5 83 0 5 5 14 67 0 10 10 11 83 0 11 11 13 11 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
152 151 1 0 159 157 151 164 152 163 138 136 133 127 110 98 94 92 89 82 76 73 66 64 54 52 44 42 39 37 32 28 23 20 9 7 0 150 1 142 18 15
CALL[ ]	/* CallFunction */";
};
width = 517;
},
{
anchors = (
{
name = caret_1;
pos = (255.5,0);
}
);
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(245,0,o),
(307,3,o),
(349,3,cs),
(384,3,o),
(427,1,o),
(459,1,cs),
(494,1,o),
(511,7,o),
(511,30,cs),
(511,58,o),
(492,60,o),
(472,60,cs),
(363,60,l),
(363,404,ls),
(363,407,o),
(364,410,o),
(366,412,cs),
(368,414,o),
(373,415,o),
(381,415,cs),
(396,415,o),
(420,413,o),
(447,413,cs),
(464,413,o),
(486,414,o),
(486,445,cs),
(486,470,o),
(462,473,o),
(449,473,cs),
(371,473,ls),
(366,473,o),
(363,477,o),
(363,484,cs),
(363,535,o),
(362,595,o),
(382,662,cs),
(401,725,o),
(443,769,o),
(516,769,cs),
(533,769,o),
(546,766,o),
(556,759,cs),
(566,752,o),
(571,746,o),
(571,742,cs),
(571,737,o),
(570,734,o),
(567,731,cs),
(564,728,o),
(560,725,o),
(556,721,cs),
(545,712,o),
(541,697,o),
(541,686,cs),
(541,665,o),
(557,642,o),
(589,642,cs),
(613,642,o),
(643,662,o),
(643,718,cs),
(643,757,o),
(614,825,o),
(516,825,cs),
(406,825,o),
(351,759,o),
(326,697,cs),
(295,621,o),
(292,544,o),
(290,491,cs),
(290,482,o),
(289,473,o),
(278,473,cs),
(244,473,ls),
(220,473,o),
(202,472,o),
(202,445,cs),
(202,422,o),
(218,415,o),
(241,415,cs),
(278,415,ls),
(283,415,o),
(287,415,o),
(289,414,cs),
(290,413,o),
(291,411,o),
(291,409,cs),
(291,377,o),
(291,345,o),
(292,313,cs),
(293,281,o),
(293,249,o),
(293,217,cs),
(293,169,o),
(291,122,o),
(287,75,cs),
(286,68,o),
(283,63,o),
(277,60,cs),
(270,57,o),
(259,55,o),
(243,54,cs),
(228,54,o),
(201,47,o),
(201,26,cs),
(201,1,o),
(227,0,o),
(245,0,cs)
);
},
{
closed = 1;
nodes = (
(30,-91,o),
(92,-88,o),
(134,-88,cs),
(169,-88,o),
(212,-90,o),
(244,-90,cs),
(279,-90,o),
(296,-84,o),
(296,-61,cs),
(296,-33,o),
(277,-31,o),
(257,-31,cs),
(148,-31,l),
(148,404,ls),
(148,407,o),
(149,410,o),
(151,412,cs),
(153,414,o),
(158,415,o),
(166,415,cs),
(181,415,o),
(205,413,o),
(232,413,cs),
(249,413,o),
(271,414,o),
(271,445,cs),
(271,470,o),
(247,473,o),
(234,473,cs),
(156,473,ls),
(151,473,o),
(148,477,o),
(148,484,cs),
(148,575,o),
(149,719,o),
(301,719,cs),
(322,719,o),
(333,710,o),
(342,702,c),
(387,743,l),
(387,743,l),
(367,762,o),
(344,775,o),
(301,775,cs),
(202,775,o),
(139,732,o),
(111,672,cs),
(80,610,o),
(77,544,o),
(75,491,cs),
(75,482,o),
(74,473,o),
(63,473,cs),
(29,473,ls),
(5,473,o),
(-13,472,o),
(-13,445,cs),
(-13,422,o),
(3,415,o),
(26,415,cs),
(63,415,ls),
(68,415,o),
(72,415,o),
(74,414,cs),
(75,413,o),
(76,411,o),
(76,409,cs),
(76,377,o),
(76,345,o),
(77,313,cs),
(78,281,o),
(78,249,o),
(78,217,cs),
(78,177,o),
(77,72,o),
(72,-16,cs),
(71,-23,o),
(68,-28,o),
(62,-31,cs),
(55,-34,o),
(44,-36,o),
(28,-37,cs),
(13,-37,o),
(-14,-44,o),
(-14,-65,cs),
(-14,-90,o),
(12,-91,o),
(30,-91,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
90 1 0 13 0 1 12 0 58 1 3 17 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 12 0 1 0 12 1 104 0 8 0 0 12 8 0 91 5 1 3 0 4 3 4 87 0 13 13 11 83 0 11 11 12 67 15 9 6 3 2 2 1 83 14 10 7 3 1 1 23 67 18 1 16 16 17 83 0 17 17 13 17 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 12 0 1 0 12 1 104 0 8 0 0 12 8 0 91 14 10 7 3 1 15 9 6 3 2 16 1 2 91 5 1 3 0 4 3 4 87 0 13 13 11 83 0 11 11 12 67 18 1 16 16 17 83 0 17 17 13 17 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 12 0 1 0 12 1 104 0 18 16 17 16 18 96 0 5 3 4 3 5 96 0 8 0 0 12 8 0 91 14 10 7 3 1 15 9 6 3 2 16 1 2 91 0 3 0 4 3 4 87 0 13 13 11 83 0 11 11 12 67 0 16 16 17 83 0 17 17 13 17 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 72 values pushed */
0 12 0 1 0 12 1 104 0 18 16 17 16 18 96 0 5 3 4 3 5 96 0 8 0 0 12 8 0 91 14 10 7 3 1 15 9 6 3 2 16 1 2 91 0 3 0 4 3 4 87 0 13 13 11 83 0 11 11 14 67 0 16 16 17 83 0 17 17 13 17 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
191 190 183 170 166 164 161 154 148 145 138 136 126 124 118 116 108 105 101 98 40 52 61 23 212 35 118 53 34 19 24
CALL[ ]	/* CallFunction */";
};
width = 511;
},
{
anchors = (
{
name = caret_1;
pos = (251,0);
}
);
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(40,-60,o),
(52,-59,o),
(67,-58,cs),
(82,-57,o),
(99,-57,o),
(117,-57,cs),
(132,-57,o),
(148,-57,o),
(164,-58,cs),
(180,-59,o),
(194,-59,o),
(205,-59,cs),
(222,-59,o),
(234,-58,o),
(240,-55,cs),
(245,-53,o),
(248,-50,o),
(248,-45,cs),
(248,-35,o),
(238,-30,o),
(219,-30,cs),
(151,-30,l),
(151,424,ls),
(151,427,o),
(152,430,o),
(154,432,cs),
(156,434,o),
(161,435,o),
(169,435,cs),
(194,435,o),
(253,433,o),
(321,433,c),
(322,364,o),
(324,285,o),
(324,221,cs),
(324,157,o),
(322,102,o),
(318,45,cs),
(317,28,o),
(299,27,o),
(274,24,cs),
(259,23,o),
(242,22,o),
(242,11,cs),
(242,6,o),
(245,3,o),
(252,2,cs),
(259,1,o),
(267,0,o),
(276,0,cs),
(283,0,o),
(293,1,o),
(305,2,cs),
(317,3,o),
(332,3,o),
(350,3,cs),
(386,3,o),
(429,1,o),
(459,1,cs),
(476,1,o),
(488,2,o),
(494,5,cs),
(499,7,o),
(502,10,o),
(502,15,cs),
(502,25,o),
(492,30,o),
(473,30,cs),
(364,30,l),
(364,424,ls),
(364,427,o),
(365,430,o),
(367,432,cs),
(369,434,o),
(374,435,o),
(382,435,cs),
(397,435,o),
(421,433,o),
(448,433,cs),
(463,433,o),
(477,436,o),
(477,447,cs),
(477,458,o),
(463,463,o),
(450,463,cs),
(372,463,ls),
(369,463,o),
(367,464,o),
(366,467,cs),
(365,470,o),
(364,475,o),
(364,484,cs),
(364,539,o),
(363,609,o),
(384,681,cs),
(403,750,o),
(447,799,o),
(523,799,cs),
(580,799,o),
(602,771,o),
(602,750,cs),
(602,741,o),
(598,737,o),
(587,729,cs),
(577,722,o),
(572,713,o),
(572,702,cs),
(572,679,o),
(586,667,o),
(605,667,cs),
(629,667,o),
(644,689,o),
(644,718,cs),
(644,757,o),
(615,825,o),
(517,825,cs),
(450,825,o),
(407,794,o),
(378,751,c),
(361,764,o),
(341,775,o),
(302,775,cs),
(214,775,o),
(163,720,o),
(138,654,cs),
(111,585,o),
(108,519,o),
(108,491,cs),
(108,476,o),
(107,463,o),
(96,463,cs),
(32,463,ls),
(20,463,o),
(12,463,o),
(7,462,cs),
(2,461,o),
(0,457,o),
(0,452,cs),
(0,448,o),
(2,444,o),
(6,441,cs),
(10,437,o),
(18,435,o),
(29,435,cs),
(96,435,ls),
(107,435,o),
(109,428,o),
(109,409,cs),
(109,276,o),
(111,210,o),
(111,210,c),
(111,162,o),
(109,77,o),
(105,-15,cs),
(104,-22,o),
(99,-27,o),
(89,-29,cs),
(78,-32,o),
(59,-34,o),
(31,-36,cs),
(16,-37,o),
(-1,-38,o),
(-1,-49,cs),
(-1,-54,o),
(2,-57,o),
(9,-58,cs),
(16,-59,o),
(24,-60,o),
(33,-60,cs)
);
},
{
closed = 1;
nodes = (
(159,463,l),
(159,463,l),
(156,463,o),
(154,464,o),
(153,467,cs),
(152,470,o),
(151,475,o),
(151,484,cs),
(151,510,o),
(150,565,o),
(171,632,cs),
(190,697,o),
(234,749,o),
(308,749,cs),
(339,749,o),
(354,741,o),
(365,730,c),
(324,653,o),
(321,550,o),
(321,463,c),
(159,463,l),
(159,463,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
70 1 15 5 150 1 7 15 41 0 2 11 0 36 1 1 12 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 7 15 4 15 7 4 104 0 5 0 15 7 5 15 91 0 1 0 2 1 2 87 0 8 8 6 83 0 6 6 12 67 10 3 2 0 0 4 83 14 9 2 4 4 23 67 0 11 11 12 83 13 1 12 12 13 12 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 7 15 4 15 7 4 104 0 5 0 15 7 5 15 91 14 9 2 4 10 3 2 0 11 4 0 91 0 1 0 2 1 2 87 0 8 8 6 83 0 6 6 12 67 0 11 11 12 83 13 1 12 12 13 12 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 7 15 4 15 7 4 104 0 5 0 15 7 5 15 91 14 9 2 4 10 3 2 0 11 4 0 91 0 1 0 2 1 2 87 0 8 8 6 83 0 6 6 14 67 0 11 11 12 83 13 1 12 12 13 12 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
154 152 145 143 133 131 130 123 120 118 115 108 104 101 93 91 82 80 74 72 68 66 58 55 51 48 131 35 102 16 18
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = f_f;
},
{
glyphname = f_f_b;
kernLeft = f_f;
kernRight = b;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
anchors = (
{
name = bottom_1;
pos = (174,0);
},
{
name = bottom_2;
pos = (521,0);
},
{
name = bottom_3;
pos = (868,0);
},
{
name = caret_1;
pos = (347,0);
},
{
name = caret_2;
pos = (694,0);
},
{
name = top_1;
pos = (174,972);
},
{
name = top_2;
pos = (521,972);
},
{
name = top_3;
pos = (868,972);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,-98,o),
(76,-95,o),
(151,-95,cs),
(174,-95,o),
(195,-97,o),
(212,-97,cs),
(247,-97,o),
(271,-91,o),
(271,-59,cs),
(271,-26,o),
(254,-20,o),
(225,-20,cs),
(151,-20,l),
(151,403,ls),
(151,406,o),
(152,409,o),
(154,411,cs),
(156,413,o),
(161,414,o),
(169,414,cs),
(190,414,o),
(237,415,o),
(292,415,c),
(294,396,o),
(296,363,o),
(296,308,cs),
(296,244,o),
(297,161,o),
(292,96,cs),
(291,81,o),
(287,75,o),
(272,72,cs),
(257,69,o),
(240,63,o),
(240,32,cs),
(240,16,o),
(255,0,o),
(274,0,cs),
(279,0,o),
(331,3,o),
(370,3,cs),
(385,3,o),
(400,3,o),
(413,2,cs),
(426,1,o),
(438,1,o),
(450,1,cs),
(485,1,o),
(492,22,o),
(492,41,cs),
(492,64,o),
(482,76,o),
(463,76,cs),
(384,76,l),
(384,400,ls),
(384,407,o),
(390,411,o),
(402,411,cs),
(417,411,o),
(441,409,o),
(468,409,cs),
(483,409,o),
(507,420,o),
(507,447,cs),
(507,479,o),
(483,487,o),
(470,487,cs),
(392,487,ls),
(387,487,o),
(384,489,o),
(384,493,cs),
(384,632,o),
(395,751,o),
(517,751,cs),
(529,751,o),
(570,741,o),
(570,719,cs),
(572,673,o),
(573,664,o),
(573,597,cs),
(573,433,o),
(571,297,o),
(568,201,cs),
(564,101,o),
(562,48,o),
(562,43,cs),
(562,3,o),
(572,-12,o),
(604,-12,cs),
(646,-12,o),
(649,-1,o),
(654,68,c),
(676,29,o),
(716,-9,o),
(791,-9,cs),
(889,-9,o),
(1012,50,o),
(1012,221,cs),
(1012,322,o),
(970,458,o),
(835,458,cs),
(775,458,o),
(710,432,o),
(661,330,c),
(661,335,o),
(661,346,o),
(661,363,cs),
(661,380,o),
(661,400,o),
(661,424,cs),
(661,448,o),
(661,474,o),
(662,503,cs),
(662,531,o),
(662,559,o),
(662,587,cs),
(662,614,o),
(662,640,o),
(662,665,cs),
(662,690,o),
(662,710,o),
(662,726,cs),
(662,772,o),
(651,825,o),
(532,825,cs),
(453,825,o),
(399,802,o),
(368,771,c),
(350,781,o),
(329,786,o),
(306,786,cs),
(196,786,o),
(129,751,o),
(96,695,cs),
(63,637,o),
(59,573,o),
(57,502,cs),
(57,495,o),
(56,490,o),
(45,490,cs),
(32,490,ls),
(10,490,o),
(-17,490,o),
(-17,452,cs),
(-17,421,o),
(6,414,o),
(29,414,cs),
(45,414,ls),
(57,414,o),
(58,413,o),
(58,406,cs),
(58,349,o),
(60,281,o),
(60,235,cs),
(60,191,o),
(59,67,o),
(54,-5,cs),
(54,-22,o),
(7,-26,o),
(-3,-26,cs),
(-17,-26,o),
(-52,-32,o),
(-52,-63,cs),
(-52,-92,o),
(-29,-98,o),
(-1,-98,cs)
);
},
{
closed = 1;
nodes = (
(154,490,o),
(151,492,o),
(151,495,cs),
(151,611,o),
(152,712,o),
(301,712,cs),
(309,712,o),
(317,707,o),
(322,703,c),
(299,648,o),
(296,547,o),
(296,490,c),
(159,490,l),
(159,490,l)
);
},
{
closed = 1;
nodes = (
(696,70,o),
(661,135,o),
(661,188,cs),
(661,292,o),
(723,379,o),
(810,379,cs),
(881,379,o),
(918,328,o),
(918,228,cs),
(918,96,o),
(852,70,o),
(791,70,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
212 205 194 187 159 108 3 40
CALL[ ]	/* CallFunction */";
};
width = 1041;
},
{
anchors = (
{
name = bottom_1;
pos = (170,0);
},
{
name = bottom_2;
pos = (511,0);
},
{
name = bottom_3;
pos = (851,0);
},
{
name = caret_1;
pos = (340.333,0);
},
{
name = caret_2;
pos = (680.667,0);
},
{
name = top_1;
pos = (170,972);
},
{
name = top_2;
pos = (511,972);
},
{
name = top_3;
pos = (851,972);
}
);
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(11,-84,o),
(81,-81,o),
(137,-81,cs),
(152,-81,o),
(168,-81,o),
(185,-82,cs),
(201,-83,o),
(215,-83,o),
(227,-83,cs),
(262,-83,o),
(279,-77,o),
(279,-54,cs),
(279,-26,o),
(260,-24,o),
(240,-24,cs),
(151,-24,l),
(151,411,ls),
(151,414,o),
(152,417,o),
(154,419,cs),
(156,421,o),
(161,422,o),
(169,422,cs),
(295,422,l),
(306,419,o),
(308,413,o),
(308,394,cs),
(308,300,ls),
(308,273,o),
(309,114,o),
(303,75,cs),
(302,59,o),
(294,58,o),
(266,54,cs),
(251,51,o),
(234,56,o),
(234,21,cs),
(234,10,o),
(249,0,o),
(268,0,cs),
(275,0,o),
(288,1,o),
(307,2,cs),
(325,3,o),
(343,3,o),
(361,3,cs),
(396,3,o),
(439,1,o),
(471,1,cs),
(488,1,o),
(500,4,o),
(505,9,cs),
(510,14,o),
(513,19,o),
(513,24,cs),
(513,52,o),
(504,58,o),
(484,58,cs),
(375,58,l),
(375,409,ls),
(375,416,o),
(381,420,o),
(393,420,cs),
(408,420,o),
(432,418,o),
(459,418,cs),
(474,418,o),
(494,426,o),
(494,447,cs),
(494,471,o),
(474,478,o),
(461,478,cs),
(383,478,ls),
(378,478,o),
(375,480,o),
(375,484,cs),
(375,538,o),
(375,599,o),
(392,664,cs),
(409,726,o),
(445,769,o),
(511,769,cs),
(547,769,o),
(568,744,o),
(569,705,cs),
(569,658,o),
(570,579,o),
(570,526,cs),
(570,389,o),
(569,280,o),
(566,200,cs),
(563,120,o),
(561,65,o),
(561,36,cs),
(561,1,o),
(569,-12,o),
(593,-12,cs),
(624,-12,o),
(627,3,o),
(632,68,c),
(654,29,o),
(694,-9,o),
(769,-9,cs),
(868,-9,o),
(990,51,o),
(990,220,cs),
(990,324,o),
(945,458,o),
(815,458,cs),
(739,458,o),
(677,414,o),
(640,334,c),
(640,693,l),
(640,693,l),
(640,766,o),
(635,825,o),
(524,825,cs),
(452,825,o),
(405,802,o),
(373,763,c),
(356,774,o),
(335,782,o),
(304,782,cs),
(205,782,o),
(142,739,o),
(114,679,cs),
(83,617,o),
(80,551,o),
(78,498,cs),
(78,489,o),
(77,480,o),
(66,480,cs),
(32,480,ls),
(8,480,o),
(-10,479,o),
(-10,452,cs),
(-10,429,o),
(6,422,o),
(29,422,cs),
(66,422,ls),
(71,422,o),
(75,422,o),
(77,421,cs),
(78,420,o),
(79,418,o),
(79,416,cs),
(79,384,o),
(79,352,o),
(80,320,cs),
(81,288,o),
(81,256,o),
(81,224,cs),
(81,184,o),
(80,79,o),
(75,-9,cs),
(74,-24,o),
(43,-27,o),
(11,-30,cs),
(-4,-30,o),
(-31,-37,o),
(-31,-58,cs),
(-31,-83,o),
(-5,-84,o),
(13,-84,cs)
);
},
{
closed = 1;
nodes = (
(159,480,l),
(159,480,l),
(154,480,o),
(151,484,o),
(151,491,cs),
(151,582,o),
(152,726,o),
(304,726,cs),
(323,726,o),
(333,719,o),
(341,712,c),
(310,645,o),
(307,563,o),
(307,491,cs),
(307,484,o),
(306,478,o),
(295,478,cs)
);
},
{
closed = 1;
nodes = (
(665,52,o),
(639,116,o),
(639,179,cs),
(639,300,o),
(719,397,o),
(806,397,cs),
(851,397,o),
(917,349,o),
(917,228,cs),
(917,78,o),
(824,52,o),
(769,52,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
198 190 183 135 14 4 3 40
CALL[ ]	/* CallFunction */";
};
width = 1021;
},
{
anchors = (
{
name = bottom_1;
pos = (166,0);
},
{
name = bottom_2;
pos = (497,0);
},
{
name = bottom_3;
pos = (828,0);
},
{
name = caret_1;
pos = (331,0);
},
{
name = caret_2;
pos = (662,0);
},
{
name = top_1;
pos = (166,972);
},
{
name = top_2;
pos = (497,972);
},
{
name = top_3;
pos = (828,972);
}
);
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(40,-60,o),
(52,-59,o),
(67,-58,cs),
(82,-57,o),
(99,-57,o),
(117,-57,cs),
(132,-57,o),
(148,-57,o),
(164,-58,cs),
(180,-59,o),
(194,-59,o),
(205,-59,cs),
(222,-59,o),
(234,-58,o),
(240,-55,cs),
(245,-53,o),
(248,-50,o),
(248,-45,cs),
(248,-35,o),
(238,-30,o),
(219,-30,cs),
(151,-30,l),
(151,424,ls),
(151,427,o),
(152,430,o),
(154,432,cs),
(156,434,o),
(161,435,o),
(169,435,cs),
(194,435,o),
(255,433,o),
(324,433,c),
(324,432,o),
(324,420,o),
(325,399,cs),
(325,378,o),
(325,340,o),
(325,286,cs),
(325,285,o),
(325,280,o),
(325,269,cs),
(325,258,o),
(325,245,o),
(325,229,cs),
(325,174,o),
(324,122,o),
(323,73,cs),
(322,59,o),
(322,50,o),
(321,45,cs),
(320,37,o),
(314,32,o),
(305,30,cs),
(296,27,o),
(280,25,o),
(257,24,cs),
(242,23,o),
(225,22,o),
(225,11,cs),
(225,6,o),
(228,3,o),
(235,2,cs),
(242,1,o),
(250,0,o),
(259,0,cs),
(266,0,o),
(279,1,o),
(296,2,cs),
(313,3,o),
(330,3,o),
(348,3,cs),
(383,3,o),
(426,1,o),
(458,1,cs),
(475,1,o),
(487,2,o),
(492,4,cs),
(497,6,o),
(500,9,o),
(500,14,cs),
(500,23,o),
(490,28,o),
(471,28,cs),
(362,28,l),
(362,424,ls),
(362,431,o),
(368,435,o),
(380,435,cs),
(395,435,o),
(419,433,o),
(446,433,cs),
(461,433,o),
(475,436,o),
(475,447,cs),
(475,458,o),
(461,463,o),
(448,463,cs),
(370,463,ls),
(367,463,o),
(365,465,o),
(364,469,cs),
(363,472,o),
(362,481,o),
(362,494,cs),
(362,539,o),
(365,610,o),
(384,680,cs),
(402,748,o),
(440,799,o),
(503,799,cs),
(569,799,o),
(567,740,o),
(567,683,cs),
(567,584,o),
(568,488,o),
(568,407,cs),
(568,315,o),
(566,255,o),
(564,200,cs),
(562,148,o),
(559,86,o),
(559,24,cs),
(559,0,o),
(565,-12,o),
(578,-12,cs),
(585,-12,o),
(590,-7,o),
(593,4,cs),
(596,15,o),
(598,36,o),
(600,68,c),
(622,29,o),
(662,-9,o),
(737,-9,cs),
(834,-9,o),
(958,52,o),
(958,219,cs),
(958,321,o),
(912,458,o),
(787,458,cs),
(727,458,o),
(684,428,o),
(653,399,cs),
(636,382,o),
(620,362,o),
(607,340,c),
(607,391,o),
(607,442,o),
(608,491,cs),
(609,540,o),
(609,590,o),
(609,639,cs),
(609,767,o),
(602,825,o),
(513,825,cs),
(452,825,o),
(415,800,o),
(380,749,c),
(364,762,o),
(344,775,o),
(301,775,cs),
(216,775,o),
(163,721,o),
(138,653,cs),
(111,582,o),
(108,516,o),
(108,491,cs),
(108,476,o),
(107,463,o),
(96,463,cs),
(32,463,ls),
(20,463,o),
(12,463,o),
(7,462,cs),
(2,461,o),
(0,457,o),
(0,452,cs),
(0,448,o),
(2,444,o),
(6,441,cs),
(10,437,o),
(18,435,o),
(29,435,cs),
(96,435,ls),
(105,435,o),
(109,427,o),
(109,412,cs),
(109,377,o),
(111,297,o),
(111,206,cs),
(111,166,o),
(109,79,o),
(105,-15,cs),
(104,-22,o),
(99,-27,o),
(89,-29,cs),
(78,-32,o),
(59,-34,o),
(31,-36,cs),
(16,-37,o),
(-1,-38,o),
(-1,-49,cs),
(-1,-54,o),
(2,-57,o),
(9,-58,cs),
(16,-59,o),
(24,-60,o),
(33,-60,cs)
);
},
{
closed = 1;
nodes = (
(156,463,o),
(154,464,o),
(153,467,cs),
(152,470,o),
(151,475,o),
(151,484,cs),
(151,511,o),
(150,566,o),
(171,633,cs),
(190,698,o),
(233,749,o),
(308,749,cs),
(341,749,o),
(357,739,o),
(368,727,c),
(328,642,o),
(323,551,o),
(323,463,c),
(159,463,l),
(159,463,l),
(159,463,l),
(159,463,l)
);
},
{
closed = 1;
nodes = (
(631,22,o),
(607,103,o),
(607,179,cs),
(607,314,o),
(686,427,o),
(774,427,cs),
(836,427,o),
(915,372,o),
(915,228,cs),
(915,56,o),
(804,22,o),
(737,22,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
197 192 186 176 163 118 3 40
CALL[ ]	/* CallFunction */";
};
width = 993;
}
);
note = f_f_b;
},
{
glyphname = f_f_h;
kernLeft = f_f;
kernRight = c_h;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
anchors = (
{
name = bottom_1;
pos = (173,0);
},
{
name = bottom_2;
pos = (520,0);
},
{
name = bottom_3;
pos = (867,0);
},
{
name = caret_1;
pos = (346.667,0);
},
{
name = caret_2;
pos = (693.333,0);
},
{
name = top_1;
pos = (173,972);
},
{
name = top_2;
pos = (520,972);
},
{
name = top_3;
pos = (867,972);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(53,-110,o),
(121,-107,o),
(173,-107,cs),
(188,-107,o),
(203,-107,o),
(218,-108,cs),
(232,-109,o),
(246,-109,o),
(259,-109,cs),
(292,-109,o),
(317,-102,o),
(317,-71,cs),
(317,-38,o),
(300,-32,o),
(271,-32,cs),
(173,-32,l),
(173,395,ls),
(173,402,o),
(175,408,o),
(191,408,cs),
(227,408,o),
(248,412,o),
(299,412,c),
(304,398,o),
(304,326,o),
(304,310,cs),
(304,217,o),
(300,111,o),
(300,83,cs),
(300,66,o),
(266,63,o),
(254,63,cs),
(227,63,o),
(214,53,o),
(214,32,cs),
(214,13,o),
(227,0,o),
(256,0,cs),
(263,0,o),
(276,1,o),
(293,2,cs),
(310,3,o),
(327,3,o),
(345,3,cs),
(356,3,o),
(369,3,o),
(383,2,cs),
(397,1,o),
(407,1,o),
(413,1,cs),
(444,1,o),
(456,14,o),
(456,30,cs),
(456,53,o),
(449,63,o),
(426,63,cs),
(392,63,l),
(392,400,ls),
(392,407,o),
(398,411,o),
(410,411,cs),
(416,411,o),
(425,411,o),
(436,410,cs),
(447,409,o),
(456,409,o),
(462,409,cs),
(477,409,o),
(499,416,o),
(499,447,cs),
(499,470,o),
(483,479,o),
(464,479,cs),
(400,479,ls),
(395,479,o),
(392,481,o),
(392,484,cs),
(392,616,o),
(400,751,o),
(527,751,cs),
(546,751,o),
(556,742,o),
(556,725,cs),
(556,722,o),
(556,714,o),
(556,701,cs),
(556,688,o),
(556,671,o),
(556,652,cs),
(556,633,o),
(556,612,o),
(557,590,cs),
(557,567,o),
(557,546,o),
(557,525,cs),
(557,504,o),
(557,486,o),
(557,470,cs),
(557,454,o),
(557,443,o),
(557,436,cs),
(557,300,o),
(550,182,o),
(550,104,cs),
(550,81,o),
(547,65,o),
(532,64,cs),
(517,63,o),
(512,48,o),
(512,36,cs),
(512,13,o),
(527,0,o),
(551,0,cs),
(566,0,o),
(577,1,o),
(585,2,cs),
(593,3,o),
(605,3,o),
(620,3,cs),
(635,3,o),
(652,3,o),
(670,2,cs),
(688,1,o),
(707,0,o),
(726,0,cs),
(745,0,o),
(752,17,o),
(752,30,cs),
(752,53,o),
(739,64,o),
(704,64,cs),
(641,64,l),
(641,172,ls),
(641,254,o),
(681,351,o),
(783,351,cs),
(838,351,o),
(853,308,o),
(856,283,cs),
(862,229,o),
(862,125,o),
(862,123,cs),
(862,104,o),
(859,74,o),
(859,32,cs),
(859,19,o),
(857,10,o),
(854,6,cs),
(850,2,o),
(845,0,o),
(840,0,cs),
(820,0,o),
(807,-5,o),
(807,-34,cs),
(807,-49,o),
(815,-61,o),
(838,-61,cs),
(847,-61,o),
(861,-60,o),
(879,-59,cs),
(897,-58,o),
(913,-58,o),
(928,-58,cs),
(948,-58,o),
(983,-61,o),
(1031,-61,cs),
(1051,-61,o),
(1060,-46,o),
(1060,-34,cs),
(1060,-7,o),
(1046,0,o),
(1006,0,cs),
(953,0,l),
(953,176,ls),
(953,228,o),
(953,258,o),
(949,293,cs),
(944,340,o),
(924,428,o),
(813,428,cs),
(741,428,o),
(681,395,o),
(646,331,c),
(646,479,o),
(647,586,o),
(647,638,cs),
(647,667,o),
(648,694,o),
(648,713,cs),
(648,756,o),
(620,825,o),
(512,825,cs),
(456,825,o),
(404,807,o),
(373,766,c),
(354,773,o),
(330,775,o),
(317,775,cs),
(102,775,o),
(84,628,o),
(79,491,cs),
(79,484,o),
(78,479,o),
(67,479,cs),
(20,479,ls),
(-2,479,o),
(-29,479,o),
(-29,441,cs),
(-29,410,o),
(-6,403,o),
(17,403,cs),
(67,403,ls),
(73,403,o),
(77,403,o),
(78,402,cs),
(79,401,o),
(80,399,o),
(80,397,cs),
(80,372,o),
(81,344,o),
(81,324,cs),
(81,298,o),
(82,264,o),
(82,221,cs),
(82,179,o),
(81,56,o),
(76,-17,cs),
(75,-30,o),
(68,-37,o),
(53,-38,cs),
(35,-38,o),
(4,-48,o),
(4,-75,cs),
(4,-102,o),
(26,-110,o),
(55,-110,cs)
);
},
{
closed = 1;
nodes = (
(176,479,o),
(173,481,o),
(173,484,cs),
(173,609,o),
(182,703,o),
(321,703,cs),
(324,703,o),
(326,703,o),
(328,703,cs),
(330,702,o),
(332,702,o),
(335,702,c),
(315,651,o),
(307,582,o),
(307,479,c),
(181,479,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
235 229 46 0 2 40
CALL[ ]	/* CallFunction */";
};
width = 1040;
},
{
anchors = (
{
name = bottom_1;
pos = (172,0);
},
{
name = bottom_2;
pos = (515,0);
},
{
name = bottom_3;
pos = (858,0);
},
{
name = caret_1;
pos = (343,0);
},
{
name = caret_2;
pos = (686,0);
},
{
name = top_1;
pos = (172,972);
},
{
name = top_2;
pos = (515,972);
},
{
name = top_3;
pos = (858,972);
}
);
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(46,-91,o),
(108,-88,o),
(150,-88,cs),
(185,-88,o),
(228,-90,o),
(260,-90,cs),
(295,-90,o),
(312,-84,o),
(312,-61,cs),
(312,-33,o),
(293,-31,o),
(273,-31,cs),
(164,-31,l),
(164,404,ls),
(164,407,o),
(165,410,o),
(167,412,cs),
(169,414,o),
(174,415,o),
(182,415,cs),
(197,415,o),
(221,413,o),
(248,413,cs),
(257,413,o),
(268,413,o),
(277,420,c),
(304,420,ls),
(315,420,o),
(317,413,o),
(317,394,cs),
(317,300,ls),
(317,304,o),
(318,95,o),
(313,65,cs),
(312,50,o),
(288,49,o),
(260,44,cs),
(247,41,o),
(223,47,o),
(223,21,cs),
(223,10,o),
(243,0,o),
(262,0,cs),
(269,0,o),
(282,1,o),
(299,2,cs),
(316,3,o),
(333,3,o),
(351,3,cs),
(370,3,o),
(388,1,o),
(402,1,cs),
(419,1,o),
(431,4,o),
(437,9,cs),
(442,14,o),
(445,19,o),
(445,24,cs),
(445,45,o),
(435,48,o),
(415,48,cs),
(384,48,l),
(384,409,ls),
(384,416,o),
(390,420,o),
(402,420,cs),
(417,420,o),
(441,418,o),
(468,418,cs),
(483,418,o),
(502,424,o),
(502,447,cs),
(502,466,o),
(483,473,o),
(470,473,cs),
(392,473,ls),
(387,473,o),
(384,477,o),
(384,484,cs),
(384,532,o),
(384,595,o),
(402,660,cs),
(419,722,o),
(456,769,o),
(523,769,cs),
(554,769,o),
(569,754,o),
(569,725,cs),
(569,574,ls),
(569,533,o),
(569,487,o),
(570,436,cs),
(570,295,o),
(563,172,o),
(563,92,cs),
(563,61,o),
(556,55,o),
(537,52,c),
(528,46,o),
(508,58,o),
(508,21,cs),
(508,12,o),
(519,0,o),
(543,0,cs),
(558,0,o),
(569,1,o),
(577,2,cs),
(585,3,o),
(597,3,o),
(612,3,cs),
(627,3,o),
(646,3,o),
(667,2,cs),
(688,1,o),
(709,0,o),
(728,0,cs),
(739,0,o),
(751,16,o),
(751,24,cs),
(751,51,o),
(727,52,o),
(706,52,cs),
(633,52,l),
(633,180,ls),
(633,268,o),
(679,369,o),
(783,369,cs),
(853,369,o),
(866,311,o),
(869,285,cs),
(875,231,o),
(875,123,o),
(875,123,cs),
(875,127,o),
(876,48,o),
(872,20,c),
(872,9,o),
(872,1,o),
(871,-3,cs),
(870,-7,o),
(869,-10,o),
(867,-11,c),
(839,-16,o),
(800,-11,o),
(800,-40,cs),
(800,-47,o),
(808,-61,o),
(831,-61,cs),
(840,-61,o),
(854,-60,o),
(872,-59,cs),
(889,-58,o),
(905,-58,o),
(920,-58,cs),
(953,-58,o),
(1017,-61,o),
(1019,-61,cs),
(1039,-61,o),
(1048,-48,o),
(1048,-40,cs),
(1048,-13,o),
(1021,-12,o),
(994,-12,cs),
(945,-12,l),
(945,176,ls),
(945,228,o),
(945,258,o),
(941,293,cs),
(936,340,o),
(916,428,o),
(805,428,cs),
(733,428,o),
(674,391,o),
(639,327,c),
(639,382,o),
(639,430,o),
(639,470,cs),
(639,509,o),
(639,543,o),
(639,570,cs),
(639,597,o),
(639,619,o),
(640,636,cs),
(640,653,o),
(640,666,o),
(640,677,cs),
(640,687,o),
(640,695,o),
(640,700,cs),
(640,705,o),
(640,709,o),
(640,713,cs),
(640,752,o),
(616,825,o),
(515,825,cs),
(451,825,o),
(408,799,o),
(379,759,c),
(360,770,o),
(337,775,o),
(310,775,cs),
(216,775,o),
(156,733,o),
(127,672,cs),
(96,610,o),
(93,544,o),
(91,491,cs),
(91,482,o),
(90,473,o),
(79,473,cs),
(25,473,ls),
(1,473,o),
(-17,472,o),
(-17,445,cs),
(-17,422,o),
(-1,415,o),
(22,415,cs),
(79,415,ls),
(84,415,o),
(88,415,o),
(90,414,cs),
(91,413,o),
(92,411,o),
(92,409,cs),
(92,377,o),
(92,345,o),
(93,313,cs),
(94,281,o),
(94,249,o),
(94,217,cs),
(94,177,o),
(93,72,o),
(88,-16,cs),
(87,-23,o),
(84,-28,o),
(78,-31,cs),
(71,-34,o),
(60,-36,o),
(44,-37,cs),
(29,-37,o),
(2,-44,o),
(2,-65,cs),
(2,-90,o),
(28,-91,o),
(46,-91,cs)
);
},
{
closed = 1;
nodes = (
(167,473,o),
(164,477,o),
(164,484,cs),
(164,575,o),
(165,719,o),
(317,719,cs),
(332,719,o),
(343,715,o),
(351,708,c),
(324,644,o),
(319,569,o),
(318,506,cs),
(318,486,o),
(316,473,o),
(304,473,cs),
(172,473,l),
(172,473,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 6 values pushed */
249 241 193 0 2 40
CALL[ ]	/* CallFunction */";
};
width = 1029;
},
{
anchors = (
{
name = bottom_1;
pos = (169,0);
},
{
name = bottom_2;
pos = (507,0);
},
{
name = bottom_3;
pos = (844,0);
},
{
name = caret_1;
pos = (337.667,0);
},
{
name = caret_2;
pos = (675.333,0);
},
{
name = top_1;
pos = (169,972);
},
{
name = top_2;
pos = (507,972);
},
{
name = top_3;
pos = (844,972);
}
);
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(830,-61,o),
(844,-60,o),
(861,-59,cs),
(878,-58,o),
(893,-58,o),
(908,-58,cs),
(922,-58,o),
(939,-58,o),
(958,-59,cs),
(977,-60,o),
(991,-61,o),
(1002,-61,cs),
(1021,-61,o),
(1031,-57,o),
(1031,-50,cs),
(1031,-37,o),
(1004,-32,o),
(977,-32,cs),
(933,-32,l),
(933,176,ls),
(933,228,o),
(933,258,o),
(929,293,cs),
(924,340,o),
(904,428,o),
(793,428,cs),
(721,428,o),
(662,391,o),
(627,327,c),
(627,480,o),
(627,583,o),
(628,637,cs),
(628,675,o),
(628,700,o),
(628,713,cs),
(628,756,o),
(621,825,o),
(519,825,cs),
(443,825,o),
(414,785,o),
(387,742,c),
(370,758,o),
(349,775,o),
(300,775,cs),
(216,775,o),
(163,721,o),
(138,653,cs),
(111,582,o),
(108,516,o),
(108,491,cs),
(108,476,o),
(107,463,o),
(96,463,cs),
(32,463,ls),
(20,463,o),
(12,463,o),
(7,462,cs),
(2,461,o),
(0,457,o),
(0,452,cs),
(0,448,o),
(2,444,o),
(6,441,cs),
(10,437,o),
(18,435,o),
(29,435,cs),
(96,435,ls),
(107,435,o),
(109,428,o),
(109,409,cs),
(109,276,o),
(111,210,o),
(111,210,c),
(111,162,o),
(109,77,o),
(105,-15,cs),
(104,-22,o),
(99,-27,o),
(89,-29,cs),
(78,-32,o),
(59,-34,o),
(31,-36,cs),
(16,-37,o),
(-1,-38,o),
(-1,-49,cs),
(-1,-54,o),
(2,-57,o),
(9,-58,cs),
(16,-59,o),
(24,-60,o),
(33,-60,cs),
(40,-60,o),
(52,-59,o),
(67,-58,cs),
(82,-57,o),
(99,-57,o),
(117,-57,cs),
(132,-57,o),
(148,-57,o),
(164,-58,cs),
(180,-59,o),
(194,-59,o),
(205,-59,cs),
(222,-59,o),
(234,-58,o),
(240,-55,cs),
(245,-53,o),
(248,-50,o),
(248,-45,cs),
(248,-35,o),
(238,-30,o),
(219,-30,cs),
(151,-30,l),
(151,424,ls),
(151,427,o),
(152,430,o),
(154,432,cs),
(156,434,o),
(161,435,o),
(169,435,cs),
(156,435,o),
(249,433,o),
(335,433,c),
(335,419,o),
(336,362,o),
(336,283,cs),
(336,214,o),
(336,161,o),
(335,124,cs),
(334,86,o),
(333,60,o),
(331,45,cs),
(328,30,o),
(318,26,o),
(268,24,cs),
(253,23,o),
(236,22,o),
(236,11,cs),
(236,6,o),
(239,3,o),
(246,2,cs),
(253,1,o),
(261,0,o),
(270,0,cs),
(277,0,o),
(290,1,o),
(307,2,cs),
(324,3,o),
(341,3,o),
(359,3,cs),
(381,3,o),
(401,1,o),
(417,1,cs),
(434,1,o),
(446,2,o),
(451,4,cs),
(456,6,o),
(459,9,o),
(459,14,cs),
(459,23,o),
(449,28,o),
(430,28,cs),
(373,28,l),
(373,424,ls),
(373,431,o),
(379,435,o),
(391,435,cs),
(415,435,o),
(451,433,o),
(477,433,cs),
(492,433,o),
(506,436,o),
(506,447,cs),
(506,458,o),
(492,463,o),
(479,463,cs),
(381,463,ls),
(378,463,o),
(376,465,o),
(375,469,cs),
(374,473,o),
(373,482,o),
(373,495,cs),
(373,545,o),
(376,618,o),
(396,685,cs),
(415,751,o),
(453,799,o),
(517,799,cs),
(574,799,o),
(587,762,o),
(587,725,cs),
(587,574,ls),
(587,533,o),
(587,487,o),
(588,436,cs),
(588,313,o),
(583,110,o),
(581,72,cs),
(580,41,o),
(574,35,o),
(555,32,cs),
(543,30,o),
(497,31,o),
(497,11,cs),
(497,4,o),
(508,0,o),
(531,0,cs),
(546,0,o),
(557,1,o),
(565,2,cs),
(573,3,o),
(585,3,o),
(600,3,cs),
(615,3,o),
(634,3,o),
(655,2,cs),
(676,1,o),
(697,0,o),
(716,0,cs),
(727,0,o),
(736,6,o),
(736,14,cs),
(736,26,o),
(715,32,o),
(694,32,cs),
(621,32,l),
(621,193,ls),
(621,301,o),
(682,399,o),
(783,399,cs),
(869,399,o),
(881,332,o),
(887,288,cs),
(893,234,o),
(893,120,o),
(893,123,cs),
(893,127,o),
(893,31,o),
(890,0,cs),
(887,-23,o),
(882,-28,o),
(855,-31,cs),
(829,-33,o),
(790,-37,o),
(790,-50,cs),
(790,-57,o),
(800,-61,o),
(821,-61,cs)
);
},
{
closed = 1;
nodes = (
(159,463,l),
(159,463,l),
(156,463,o),
(154,464,o),
(153,467,cs),
(152,470,o),
(151,475,o),
(151,484,cs),
(151,508,o),
(151,560,o),
(170,629,cs),
(188,694,o),
(232,749,o),
(304,749,cs),
(343,749,o),
(362,735,o),
(374,716,c),
(339,633,o),
(334,547,o),
(334,463,c),
(159,463,l),
(159,463,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
233 228 27 0 2 40
CALL[ ]	/* CallFunction */";
};
width = 1013;
}
);
note = f_f_h;
},
{
glyphname = f_f_i;
kernLeft = f_f;
kernRight = f_f_i;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
anchors = (
{
name = caret_1;
pos = (242,0);
},
{
name = caret_2;
pos = (484,0);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(26,-105,o),
(94,-102,o),
(146,-102,cs),
(161,-102,o),
(173,-102,o),
(181,-103,cs),
(189,-104,o),
(199,-104,o),
(211,-104,cs),
(246,-104,o),
(270,-97,o),
(270,-66,cs),
(270,-34,o),
(255,-27,o),
(224,-27,cs),
(146,-27,l),
(146,402,ls),
(146,411,o),
(153,415,o),
(166,415,cs),
(183,415,o),
(199,415,o),
(213,415,cs),
(227,414,o),
(246,414,o),
(269,414,c),
(269,416,o),
(272,361,o),
(272,300,cs),
(272,268,o),
(272,120,o),
(267,77,cs),
(264,62,o),
(263,57,o),
(255,56,cs),
(240,53,o),
(214,47,o),
(214,27,cs),
(214,4,o),
(230,0,o),
(257,0,cs),
(264,0,o),
(277,1,o),
(294,2,cs),
(311,3,o),
(328,3,o),
(346,3,cs),
(361,3,o),
(376,3,o),
(389,2,cs),
(402,1,o),
(414,1,o),
(426,1,cs),
(461,1,o),
(471,10,o),
(471,30,cs),
(471,50,o),
(460,60,o),
(439,60,cs),
(367,60,l),
(366,63,o),
(365,74,o),
(362,94,cs),
(359,113,o),
(358,134,o),
(358,157,cs),
(358,188,o),
(359,230,o),
(359,284,cs),
(359,336,o),
(360,375,o),
(360,400,cs),
(360,407,o),
(366,411,o),
(378,411,cs),
(395,411,o),
(427,409,o),
(464,409,cs),
(471,409,o),
(490,411,o),
(521,411,cs),
(536,411,o),
(538,401,o),
(539,394,cs),
(540,387,o),
(543,290,o),
(543,149,cs),
(543,107,o),
(543,73,o),
(542,46,cs),
(541,19,o),
(540,-1,o),
(539,-12,cs),
(538,-19,o),
(535,-23,o),
(530,-26,cs),
(524,-29,o),
(513,-32,o),
(498,-33,cs),
(487,-34,o),
(481,-43,o),
(481,-58,cs),
(481,-86,o),
(503,-94,o),
(555,-94,cs),
(720,-94,ls),
(733,-94,o),
(750,-88,o),
(750,-63,cs),
(750,-40,o),
(733,-31,o),
(702,-31,cs),
(628,-31,l),
(628,10,o),
(627,6,o),
(627,77,cs),
(627,166,o),
(632,340,o),
(632,428,cs),
(632,463,o),
(624,487,o),
(593,487,cs),
(368,487,ls),
(361,487,o),
(360,487,o),
(360,498,cs),
(360,570,o),
(371,747,o),
(483,747,cs),
(541,747,o),
(552,723,o),
(552,697,cs),
(552,647,o),
(512,652,o),
(512,618,cs),
(512,595,o),
(525,570,o),
(574,570,cs),
(629,570,o),
(645,614,o),
(645,656,cs),
(645,799,o),
(568,825,o),
(505,825,cs),
(434,825,o),
(387,807,o),
(352,776,c),
(337,783,o),
(320,785,o),
(299,785,cs),
(190,785,o),
(122,749,o),
(89,692,cs),
(57,636,o),
(52,569,o),
(52,501,cs),
(52,493,o),
(48,489,o),
(40,489,cs),
(27,489,ls),
(-2,489,o),
(-22,485,o),
(-22,450,cs),
(-22,419,o),
(1,413,o),
(24,413,cs),
(40,413,ls),
(45,413,o),
(49,413,o),
(51,412,cs),
(52,411,o),
(53,410,o),
(53,409,cs),
(53,377,o),
(53,347,o),
(54,318,cs),
(55,289,o),
(55,259,o),
(55,227,cs),
(55,195,o),
(54,67,o),
(49,-7,cs),
(48,-22,o),
(43,-32,o),
(26,-33,cs),
(8,-33,o),
(-23,-43,o),
(-23,-70,cs),
(-23,-101,o),
(3,-105,o),
(28,-105,cs)
);
},
{
closed = 1;
nodes = (
(149,487,o),
(146,489,o),
(146,494,cs),
(146,633,o),
(160,711,o),
(295,711,cs),
(298,711,o),
(301,710,o),
(304,709,c),
(277,642,o),
(271,582,o),
(271,487,c),
(154,487,l),
(154,487,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
153 1 15 12 194 1 14 17 34 1 3 2 122 1 0 4 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 14 17 11 17 14 11 104 0 12 0 17 14 12 17 91 9 6 2 0 8 7 2 1 0 1 87 0 15 15 13 83 0 13 13 12 67 10 5 2 2 2 11 83 19 18 16 3 11 11 23 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 14 17 11 17 14 11 104 0 12 0 17 14 12 17 91 19 18 16 3 11 10 5 2 2 3 11 2 91 9 6 2 0 8 7 2 1 0 1 87 0 15 15 13 83 0 13 13 12 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 14 17 11 17 14 11 104 0 12 0 17 14 12 17 91 19 18 16 3 11 10 5 2 2 3 11 2 91 0 1 7 0 1 79 9 6 2 0 8 1 7 0 7 87 0 15 15 13 83 0 13 13 12 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
0 14 17 11 17 14 11 104 0 12 0 17 14 12 17 91 19 18 16 3 11 10 5 2 2 3 11 2 91 0 1 7 0 1 79 9 6 2 0 8 1 7 0 7 87 0 15 15 13 83 0 13 13 14 67 0 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
191 191 191 203 191 202 197 195 189 186 180 178 167 165 157 155 151 149 142 139 135 132 119 118 112 105 104 102 98 96 94 90 72 64 61 59 48 36 52 42 20 17
CALL[ ]	/* CallFunction */";
};
width = 726;
},
{
anchors = (
{
name = caret_1;
pos = (241.667,0);
},
{
name = caret_2;
pos = (483.333,0);
}
);
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(30,-88,o),
(92,-85,o),
(134,-85,cs),
(169,-85,o),
(212,-87,o),
(244,-87,cs),
(279,-87,o),
(296,-81,o),
(296,-58,cs),
(296,-30,o),
(277,-28,o),
(257,-28,cs),
(148,-28,l),
(148,410,ls),
(148,413,o),
(149,416,o),
(151,418,cs),
(153,420,o),
(158,421,o),
(166,421,cs),
(281,421,l),
(292,420,o),
(294,413,o),
(294,394,cs),
(294,300,ls),
(294,287,o),
(296,101,o),
(289,65,cs),
(288,58,o),
(286,53,o),
(283,51,cs),
(280,48,o),
(271,46,o),
(256,44,cs),
(241,41,o),
(219,40,o),
(219,21,cs),
(219,0,o),
(239,0,o),
(258,0,cs),
(265,0,o),
(278,1,o),
(295,2,cs),
(312,3,o),
(329,3,o),
(347,3,cs),
(382,3,o),
(425,1,o),
(457,1,cs),
(474,1,o),
(486,3,o),
(492,7,cs),
(498,10,o),
(501,16,o),
(501,24,cs),
(501,40,o),
(491,48,o),
(470,48,cs),
(368,48,l),
(367,51,o),
(366,64,o),
(363,85,cs),
(360,106,o),
(359,130,o),
(359,155,cs),
(359,188,o),
(360,232,o),
(360,287,cs),
(360,343,o),
(361,384,o),
(361,409,cs),
(361,416,o),
(367,420,o),
(379,420,cs),
(396,420,o),
(428,418,o),
(465,418,cs),
(476,418,o),
(502,420,o),
(543,420,cs),
(558,420,o),
(560,411,o),
(561,403,cs),
(562,396,o),
(565,294,o),
(565,145,cs),
(565,69,o),
(564,15,o),
(560,-12,c),
(560,-20,o),
(557,-25,o),
(552,-27,cs),
(547,-29,o),
(535,-31,o),
(518,-33,cs),
(502,-36,o),
(484,-38,o),
(484,-57,cs),
(484,-78,o),
(521,-79,o),
(556,-79,cs),
(717,-79,ls),
(730,-79,o),
(747,-77,o),
(747,-57,cs),
(747,-38,o),
(730,-31,o),
(699,-31,cs),
(629,-31,l),
(629,10,o),
(628,6,o),
(628,77,cs),
(628,166,o),
(633,340,o),
(633,428,cs),
(633,459,o),
(626,478,o),
(601,478,cs),
(369,478,ls),
(366,478,o),
(364,479,o),
(363,481,cs),
(362,483,o),
(361,489,o),
(361,498,cs),
(361,543,o),
(363,599,o),
(380,662,cs),
(396,722,o),
(430,765,o),
(488,765,cs),
(550,765,o),
(574,730,o),
(574,697,cs),
(574,647,o),
(534,652,o),
(534,618,cs),
(534,595,o),
(548,575,o),
(587,575,cs),
(634,575,o),
(646,613,o),
(646,656,cs),
(646,799,o),
(569,825,o),
(506,825,cs),
(438,825,o),
(392,803,o),
(361,768,c),
(346,776,o),
(328,781,o),
(301,781,cs),
(202,781,o),
(139,738,o),
(111,678,cs),
(80,616,o),
(77,550,o),
(75,497,cs),
(75,488,o),
(74,479,o),
(63,479,cs),
(29,479,ls),
(5,479,o),
(-13,478,o),
(-13,451,cs),
(-13,428,o),
(3,421,o),
(26,421,cs),
(63,421,ls),
(68,421,o),
(72,421,o),
(74,420,cs),
(75,419,o),
(76,417,o),
(76,415,cs),
(76,383,o),
(76,351,o),
(77,319,cs),
(78,287,o),
(78,255,o),
(78,223,cs),
(78,183,o),
(77,78,o),
(72,-10,cs),
(71,-17,o),
(68,-23,o),
(62,-26,cs),
(55,-30,o),
(44,-33,o),
(28,-34,cs),
(13,-34,o),
(-14,-41,o),
(-14,-62,cs),
(-14,-87,o),
(12,-88,o),
(30,-88,cs)
);
},
{
closed = 1;
nodes = (
(151,479,o),
(148,481,o),
(148,490,cs),
(148,581,o),
(149,725,o),
(301,725,cs),
(313,725,o),
(321,722,o),
(328,718,c),
(299,654,o),
(295,574,o),
(294,509,cs),
(294,489,o),
(293,478,o),
(281,478,cs),
(156,478,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
161 1 14 11 204 1 13 16 37 1 3 2 129 29 2 0 4 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 13 16 10 16 13 10 104 0 11 0 16 13 11 16 91 8 6 2 0 7 1 1 0 1 87 0 14 14 12 83 0 12 12 12 67 9 5 2 2 2 10 83 17 15 2 10 10 23 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 13 16 10 16 13 10 104 0 11 0 16 13 11 16 91 17 15 2 10 9 5 2 2 3 10 2 91 8 6 2 0 7 1 1 0 1 87 0 14 14 12 83 0 12 12 12 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 13 16 10 16 13 10 104 0 11 0 16 13 11 16 91 17 15 2 10 9 5 2 2 3 10 2 91 0 1 7 0 1 79 8 6 2 0 0 7 0 7 87 0 14 14 12 83 0 12 12 12 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
0 13 16 10 16 13 10 104 0 11 0 16 13 11 16 91 17 15 2 10 9 5 2 2 3 10 2 91 0 1 7 0 1 79 8 6 2 0 0 7 0 7 87 0 14 14 12 83 0 12 12 14 67 0 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
217 215 208 206 199 196 188 186 175 173 165 163 159 157 149 146 142 139 126 125 118 105 101 99 96 94 77 67 64 62 51 39 68 42 18 17
CALL[ ]	/* CallFunction */";
};
width = 725;
},
{
anchors = (
{
name = caret_1;
pos = (241.333,0);
},
{
name = caret_2;
pos = (482.667,0);
}
);
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(40,-60,o),
(52,-59,o),
(67,-58,cs),
(82,-57,o),
(99,-57,o),
(117,-57,cs),
(132,-57,o),
(148,-57,o),
(164,-58,cs),
(180,-59,o),
(194,-59,o),
(206,-59,cs),
(223,-59,o),
(235,-58,o),
(240,-55,cs),
(245,-53,o),
(248,-50,o),
(248,-45,cs),
(248,-35,o),
(238,-30,o),
(219,-30,cs),
(151,-30,l),
(151,424,ls),
(151,427,o),
(152,430,o),
(154,432,cs),
(156,434,o),
(161,435,o),
(169,435,cs),
(195,435,o),
(256,433,o),
(325,433,c),
(325,412,o),
(326,364,o),
(326,300,cs),
(326,268,o),
(327,87,o),
(321,45,cs),
(318,30,o),
(310,27,o),
(258,24,cs),
(243,23,o),
(226,22,o),
(226,11,cs),
(226,6,o),
(229,3,o),
(236,2,cs),
(243,1,o),
(251,0,o),
(260,0,cs),
(267,0,o),
(280,1,o),
(297,2,cs),
(314,3,o),
(331,3,o),
(349,3,cs),
(384,3,o),
(427,1,o),
(459,1,cs),
(476,1,o),
(488,2,o),
(493,4,cs),
(498,6,o),
(501,9,o),
(501,14,cs),
(501,23,o),
(491,28,o),
(472,28,cs),
(370,28,l),
(370,26,o),
(361,84,o),
(361,151,cs),
(361,184,o),
(362,231,o),
(362,294,cs),
(362,355,o),
(363,399,o),
(363,424,cs),
(363,431,o),
(369,435,o),
(381,435,cs),
(398,435,o),
(430,433,o),
(467,433,cs),
(482,433,o),
(518,435,o),
(575,435,cs),
(590,435,o),
(592,429,o),
(593,418,cs),
(594,410,o),
(597,296,o),
(597,138,cs),
(597,58,o),
(597,56,o),
(592,-12,c),
(591,-20,o),
(588,-25,o),
(584,-27,cs),
(580,-30,o),
(570,-32,o),
(553,-33,cs),
(538,-34,o),
(523,-36,o),
(510,-37,cs),
(496,-38,o),
(489,-42,o),
(489,-47,cs),
(489,-53,o),
(497,-56,o),
(512,-57,cs),
(527,-58,o),
(542,-59,o),
(558,-59,cs),
(713,-59,ls),
(726,-59,o),
(743,-58,o),
(743,-47,cs),
(743,-41,o),
(739,-37,o),
(731,-34,cs),
(722,-32,o),
(710,-31,o),
(695,-31,cs),
(631,-31,l),
(631,10,o),
(630,6,o),
(630,77,cs),
(630,166,o),
(635,340,o),
(635,428,cs),
(635,449,o),
(629,463,o),
(613,463,cs),
(371,463,ls),
(368,463,o),
(366,465,o),
(365,469,cs),
(364,473,o),
(363,483,o),
(363,498,cs),
(363,546,o),
(363,612,o),
(381,681,cs),
(398,747,o),
(436,795,o),
(504,795,cs),
(575,795,o),
(606,745,o),
(606,697,cs),
(606,647,o),
(566,652,o),
(566,618,cs),
(566,595,o),
(583,583,o),
(606,583,cs),
(641,583,o),
(648,613,o),
(648,656,cs),
(648,799,o),
(571,825,o),
(508,825,cs),
(443,825,o),
(401,797,o),
(374,754,c),
(358,765,o),
(337,775,o),
(304,775,cs),
(214,775,o),
(163,719,o),
(138,654,cs),
(110,584,o),
(108,516,o),
(108,491,cs),
(108,476,o),
(107,463,o),
(96,463,cs),
(32,463,ls),
(20,463,o),
(12,463,o),
(7,462,cs),
(2,461,o),
(0,457,o),
(0,452,cs),
(0,448,o),
(2,444,o),
(6,441,cs),
(10,437,o),
(18,435,o),
(29,435,cs),
(96,435,ls),
(107,435,o),
(109,428,o),
(109,409,cs),
(109,377,o),
(109,345,o),
(110,313,cs),
(111,281,o),
(111,249,o),
(111,217,cs),
(111,139,o),
(109,60,o),
(105,-15,cs),
(104,-22,o),
(99,-27,o),
(88,-29,cs),
(77,-32,o),
(58,-34,o),
(31,-36,cs),
(16,-37,o),
(-1,-38,o),
(-1,-49,cs),
(-1,-54,o),
(2,-57,o),
(9,-58,cs),
(16,-59,o),
(24,-60,o),
(33,-60,cs)
);
},
{
closed = 1;
nodes = (
(159,463,l),
(159,463,l),
(156,463,o),
(154,464,o),
(153,467,cs),
(152,470,o),
(151,475,o),
(151,484,cs),
(151,511,o),
(150,567,o),
(171,633,cs),
(191,698,o),
(233,749,o),
(309,749,cs),
(336,749,o),
(351,742,o),
(362,733,c),
(333,674,o),
(325,550,o),
(325,463,c),
(159,463,l),
(159,463,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
161 1 16 11 204 1 13 16 129 27 2 0 4 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 13 16 10 16 13 10 104 0 11 0 16 13 11 16 91 7 1 0 8 1 1 0 1 87 0 14 14 12 83 0 12 12 12 67 9 6 2 2 2 10 83 18 17 15 3 10 10 23 67 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 13 16 10 16 13 10 104 0 11 0 16 13 11 16 91 18 17 15 3 10 9 6 2 2 3 10 2 91 7 1 0 8 1 1 0 1 87 0 14 14 12 83 0 12 12 12 67 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 13 16 10 16 13 10 104 0 11 0 16 13 11 16 91 18 17 15 3 10 9 6 2 2 3 10 2 91 7 1 0 8 1 1 0 1 87 0 14 14 12 83 0 12 12 14 67 5 1 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
199 199 199 217 199 216 208 206 197 194 186 184 173 171 165 163 159 157 149 146 142 139 121 113 110 108 105 99 85 84 79 69 66 64 51 39 68 42 19 17
CALL[ ]	/* CallFunction */";
};
width = 724;
}
);
note = f_f_i;
},
{
glyphname = f_f_j;
kernLeft = f_f;
kernRight = dotlessj;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
anchors = (
{
name = bottom_1;
pos = (116,0);
},
{
name = bottom_2;
pos = (349,0);
},
{
name = bottom_3;
pos = (581,0);
},
{
name = caret_1;
pos = (232.333,0);
},
{
name = caret_2;
pos = (464.667,0);
},
{
name = top_1;
pos = (116,972);
},
{
name = top_2;
pos = (349,972);
},
{
name = top_3;
pos = (581,972);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(547,-250,o),
(614,-200,o),
(630,-44,cs),
(641,66,o),
(639,310,o),
(639,434,cs),
(639,477,o),
(625,487,o),
(597,487,cs),
(380,487,ls),
(373,487,o),
(372,487,o),
(372,498,cs),
(372,539,o),
(372,594,o),
(390,651,cs),
(407,707,o),
(446,747,o),
(513,747,cs),
(548,747,o),
(564,722,o),
(564,697,cs),
(564,651,o),
(526,651,o),
(526,618,cs),
(526,585,o),
(536,561,o),
(581,561,cs),
(637,561,o),
(657,595,o),
(657,656,cs),
(657,799,o),
(580,825,o),
(517,825,cs),
(438,825,o),
(389,801,o),
(354,765,c),
(339,772,o),
(318,775,o),
(299,775,cs),
(69,775,o),
(50,627,o),
(50,507,cs),
(50,494,o),
(45,487,o),
(36,487,cs),
(17,487,ls),
(-7,487,o),
(-24,480,o),
(-24,449,cs),
(-24,418,o),
(-1,411,o),
(22,411,cs),
(38,411,ls),
(43,411,o),
(47,411,o),
(49,410,cs),
(50,409,o),
(51,407,o),
(51,404,cs),
(51,352,o),
(53,288,o),
(53,222,cs),
(53,184,o),
(52,60,o),
(47,-12,cs),
(46,-27,o),
(38,-35,o),
(24,-36,cs),
(7,-36,o),
(-25,-46,o),
(-25,-71,cs),
(-25,-100,o),
(6,-102,o),
(26,-102,cs),
(24,-102,o),
(92,-99,o),
(144,-99,cs),
(168,-99,o),
(190,-101,o),
(209,-101,cs),
(242,-101,o),
(262,-97,o),
(262,-66,cs),
(262,-35,o),
(245,-30,o),
(206,-30,cs),
(144,-30,l),
(144,400,ls),
(144,407,o),
(150,411,o),
(162,411,cs),
(227,411,o),
(213,414,o),
(278,414,c),
(282,374,o),
(284,331,o),
(284,300,cs),
(284,222,o),
(281,94,o),
(279,80,cs),
(278,65,o),
(257,60,o),
(250,60,cs),
(231,60,o),
(218,52,o),
(218,31,cs),
(218,11,o),
(233,3,o),
(252,3,cs),
(252,3,o),
(314,6,o),
(358,6,cs),
(373,6,o),
(389,6,o),
(406,5,cs),
(422,4,o),
(436,4,o),
(448,4,cs),
(483,4,o),
(490,14,o),
(490,33,cs),
(490,53,o),
(480,63,o),
(461,63,cs),
(375,63,l),
(372,90,o),
(370,114,o),
(370,159,cs),
(370,190,o),
(371,231,o),
(371,285,cs),
(371,336,o),
(372,374,o),
(372,400,cs),
(372,407,o),
(378,411,o),
(390,411,cs),
(412,411,o),
(452,408,o),
(524,408,cs),
(541,408,o),
(551,403,o),
(551,387,cs),
(551,300,o),
(551,210,o),
(549,134,cs),
(547,57,o),
(544,-7,o),
(543,-40,cs),
(536,-145,o),
(509,-181,o),
(454,-181,cs),
(415,-181,o),
(387,-170,o),
(387,-143,cs),
(387,-132,o),
(392,-125,o),
(403,-124,cs),
(422,-121,o),
(440,-116,o),
(440,-89,cs),
(440,-64,o),
(419,-49,o),
(392,-49,cs),
(336,-49,o),
(302,-90,o),
(302,-131,cs),
(302,-202,o),
(353,-250,o),
(473,-250,cs)
);
},
{
closed = 1;
nodes = (
(147,487,o),
(144,490,o),
(144,497,cs),
(144,572,o),
(166,701,o),
(294,701,cs),
(297,701,o),
(303,700,o),
(311,696,c),
(286,625,o),
(285,556,o),
(285,487,c),
(152,487,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
197 191 147 0 2 40
CALL[ ]	/* CallFunction */";
};
width = 697;
},
{
anchors = (
{
name = bottom_1;
pos = (117,0);
},
{
name = bottom_2;
pos = (351,0);
},
{
name = bottom_3;
pos = (584,0);
},
{
name = caret_1;
pos = (233.667,0);
},
{
name = caret_2;
pos = (467.333,0);
},
{
name = top_1;
pos = (117,972);
},
{
name = top_2;
pos = (351,972);
},
{
name = top_3;
pos = (584,972);
}
);
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(549,-236,o),
(617,-194,o),
(632,-44,cs),
(634,-20,o),
(638,26,o),
(638,61,cs),
(638,73,o),
(638,134,o),
(640,243,cs),
(641,350,o),
(641,411,o),
(641,425,cs),
(641,460,o),
(641,478,o),
(614,478,cs),
(382,478,ls),
(379,478,o),
(377,479,o),
(376,481,cs),
(375,483,o),
(374,489,o),
(374,498,cs),
(374,542,o),
(374,601,o),
(392,662,cs),
(409,722,o),
(447,765,o),
(515,765,cs),
(564,765,o),
(587,730,o),
(587,697,cs),
(587,647,o),
(547,652,o),
(547,618,cs),
(547,595,o),
(561,573,o),
(597,573,cs),
(644,573,o),
(659,601,o),
(659,656,cs),
(659,799,o),
(582,825,o),
(519,825,cs),
(427,825,o),
(368,781,o),
(341,716,cs),
(311,647,o),
(309,581,o),
(307,509,cs),
(307,489,o),
(306,478,o),
(294,478,cs),
(250,478,ls),
(226,478,o),
(211,476,o),
(211,452,cs),
(211,437,o),
(224,420,o),
(247,420,cs),
(294,420,ls),
(305,420,o),
(307,413,o),
(307,394,cs),
(307,300,ls),
(307,287,o),
(309,101,o),
(302,65,cs),
(301,58,o),
(298,53,o),
(291,51,cs),
(284,48,o),
(274,46,o),
(259,44,cs),
(244,41,o),
(227,40,o),
(227,21,cs),
(227,4,o),
(242,0,o),
(261,0,cs),
(264,0,o),
(318,3,o),
(360,3,cs),
(396,3,o),
(440,1,o),
(472,1,cs),
(489,1,o),
(501,3,o),
(506,7,cs),
(511,11,o),
(514,17,o),
(514,24,cs),
(514,40,o),
(504,48,o),
(485,48,cs),
(379,48,l),
(379,60,o),
(372,107,o),
(372,159,cs),
(372,192,o),
(373,235,o),
(373,290,cs),
(373,344,o),
(374,384,o),
(374,409,cs),
(374,416,o),
(380,420,o),
(392,420,cs),
(391,420,o),
(462,417,o),
(499,417,cs),
(549,417,ls),
(566,417,o),
(574,410,o),
(574,396,cs),
(574,278,ls),
(574,223,o),
(572,33,o),
(566,-40,cs),
(558,-138,o),
(528,-174,o),
(474,-174,cs),
(417,-174,o),
(389,-164,o),
(389,-143,cs),
(389,-128,o),
(394,-125,o),
(405,-124,cs),
(422,-121,o),
(442,-117,o),
(442,-89,cs),
(442,-64,o),
(416,-53,o),
(401,-53,cs),
(360,-53,o),
(325,-81,o),
(325,-120,cs),
(325,-182,o),
(358,-236,o),
(476,-236,cs)
);
},
{
closed = 1;
nodes = (
(29,-90,o),
(91,-87,o),
(133,-87,cs),
(168,-87,o),
(211,-89,o),
(243,-89,cs),
(278,-89,o),
(295,-83,o),
(295,-60,cs),
(295,-32,o),
(276,-30,o),
(256,-30,cs),
(147,-30,l),
(147,409,ls),
(147,416,o),
(153,420,o),
(165,420,cs),
(241,420,ls),
(264,420,o),
(288,423,o),
(288,450,cs),
(288,472,o),
(262,478,o),
(243,478,cs),
(155,478,ls),
(150,478,o),
(147,478,o),
(147,489,cs),
(147,553,o),
(158,719,o),
(300,719,cs),
(321,719,o),
(332,710,o),
(341,702,c),
(386,743,l),
(386,743,l),
(366,762,o),
(343,775,o),
(300,775,cs),
(201,775,o),
(139,733,o),
(110,676,cs),
(79,616,o),
(76,551,o),
(74,501,cs),
(74,492,o),
(73,478,o),
(62,478,cs),
(28,478,ls),
(4,478,o),
(-14,477,o),
(-14,450,cs),
(-14,427,o),
(2,420,o),
(25,420,cs),
(62,420,ls),
(67,420,o),
(71,420,o),
(73,419,cs),
(74,418,o),
(75,416,o),
(75,414,cs),
(75,380,o),
(75,347,o),
(76,316,cs),
(77,284,o),
(77,251,o),
(77,217,cs),
(77,176,o),
(76,75,o),
(71,-13,cs),
(70,-20,o),
(67,-26,o),
(61,-29,cs),
(54,-32,o),
(43,-35,o),
(27,-36,cs),
(12,-36,o),
(-15,-43,o),
(-15,-64,cs),
(-15,-89,o),
(11,-90,o),
(29,-90,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
229 179 82 40 2 40
CALL[ ]	/* CallFunction */";
};
width = 701;
},
{
anchors = (
{
name = bottom_1;
pos = (118,0);
},
{
name = bottom_2;
pos = (354,0);
},
{
name = bottom_3;
pos = (589,0);
},
{
name = caret_1;
pos = (235.667,0);
},
{
name = caret_2;
pos = (471.333,0);
},
{
name = top_1;
pos = (118,972);
},
{
name = top_2;
pos = (354,972);
},
{
name = top_3;
pos = (589,972);
}
);
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(543,-221,o),
(619,-194,o),
(635,-44,cs),
(641,7,o),
(642,102,o),
(642,226,cs),
(642,300,o),
(643,349,o),
(644,373,cs),
(644,384,o),
(644,401,o),
(644,410,cs),
(644,429,o),
(643,443,o),
(642,451,cs),
(640,459,o),
(633,463,o),
(622,463,cs),
(385,463,ls),
(382,463,o),
(380,465,o),
(379,469,cs),
(378,473,o),
(377,483,o),
(377,498,cs),
(377,546,o),
(377,612,o),
(395,681,cs),
(412,747,o),
(450,795,o),
(518,795,cs),
(589,795,o),
(620,745,o),
(620,697,cs),
(620,647,o),
(580,652,o),
(580,618,cs),
(580,595,o),
(597,583,o),
(620,583,cs),
(655,583,o),
(662,613,o),
(662,656,cs),
(662,799,o),
(585,825,o),
(522,825,cs),
(453,825,o),
(410,793,o),
(383,746,c),
(366,761,o),
(345,775,o),
(301,775,cs),
(216,775,o),
(163,722,o),
(138,653,cs),
(111,582,o),
(108,517,o),
(108,491,cs),
(108,476,o),
(107,463,o),
(96,463,cs),
(32,463,ls),
(20,463,o),
(12,463,o),
(7,462,cs),
(2,461,o),
(0,457,o),
(0,452,cs),
(0,448,o),
(2,444,o),
(6,441,cs),
(10,437,o),
(18,435,o),
(29,435,cs),
(96,435,ls),
(107,435,o),
(109,428,o),
(109,409,cs),
(109,276,o),
(111,210,o),
(111,210,c),
(111,162,o),
(109,77,o),
(105,-15,cs),
(104,-22,o),
(99,-27,o),
(89,-29,cs),
(78,-32,o),
(59,-34,o),
(31,-36,cs),
(16,-37,o),
(-1,-38,o),
(-1,-49,cs),
(-1,-54,o),
(2,-57,o),
(9,-58,cs),
(16,-59,o),
(24,-60,o),
(33,-60,cs),
(40,-60,o),
(52,-59,o),
(67,-58,cs),
(82,-57,o),
(99,-57,o),
(117,-57,cs),
(132,-57,o),
(148,-57,o),
(164,-58,cs),
(180,-59,o),
(194,-59,o),
(205,-59,cs),
(222,-59,o),
(234,-58,o),
(240,-55,cs),
(245,-53,o),
(248,-50,o),
(248,-45,cs),
(248,-35,o),
(238,-30,o),
(219,-30,cs),
(151,-30,l),
(151,424,ls),
(151,427,o),
(152,430,o),
(154,432,cs),
(156,434,o),
(161,435,o),
(169,435,cs),
(165,435,o),
(247,432,o),
(339,432,c),
(340,426,o),
(340,422,o),
(340,419,cs),
(340,416,o),
(340,413,o),
(340,409,cs),
(340,300,ls),
(340,282,o),
(341,84,o),
(335,45,cs),
(332,28,o),
(317,26,o),
(272,24,cs),
(257,23,o),
(240,22,o),
(240,11,cs),
(240,6,o),
(243,3,o),
(250,2,cs),
(257,1,o),
(265,0,o),
(274,0,cs),
(281,0,o),
(294,1,o),
(311,2,cs),
(328,3,o),
(345,3,o),
(363,3,cs),
(398,3,o),
(441,1,o),
(473,1,cs),
(490,1,o),
(502,2,o),
(507,4,cs),
(512,6,o),
(515,9,o),
(515,14,cs),
(515,23,o),
(505,28,o),
(486,28,cs),
(384,28,l),
(384,26,o),
(375,90,o),
(375,159,cs),
(375,192,o),
(376,238,o),
(376,297,cs),
(376,354,o),
(377,397,o),
(377,424,cs),
(377,431,o),
(383,435,o),
(395,435,cs),
(412,435,o),
(444,433,o),
(481,433,cs),
(496,433,o),
(530,432,o),
(585,432,cs),
(600,432,o),
(607,422,o),
(607,411,cs),
(607,312,o),
(606,221,o),
(606,144,cs),
(605,67,o),
(603,3,o),
(599,-40,cs),
(586,-182,o),
(515,-189,o),
(481,-189,cs),
(415,-189,o),
(392,-164,o),
(392,-143,cs),
(392,-126,o),
(400,-125,o),
(408,-124,cs),
(423,-123,o),
(445,-118,o),
(445,-89,cs),
(445,-64,o),
(429,-59,o),
(414,-59,cs),
(387,-59,o),
(358,-82,o),
(358,-121,cs),
(358,-173,o),
(392,-221,o),
(479,-221,cs)
);
},
{
closed = 1;
nodes = (
(159,463,l),
(159,463,l),
(156,463,o),
(154,464,o),
(153,467,cs),
(152,470,o),
(151,475,o),
(151,484,cs),
(151,511,o),
(150,566,o),
(171,633,cs),
(190,698,o),
(233,749,o),
(308,749,cs),
(347,749,o),
(364,735,o),
(372,722,c),
(339,637,o),
(339,548,o),
(339,463,c),
(159,463,l),
(159,463,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
215 210 174 14 2 40
CALL[ ]	/* CallFunction */";
};
width = 707;
}
);
note = f_f_j;
},
{
glyphname = f_f_k;
kernLeft = f_f;
kernRight = c_k;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
anchors = (
{
name = bottom_1;
pos = (169,0);
},
{
name = bottom_2;
pos = (508,0);
},
{
name = bottom_3;
pos = (846,0);
},
{
name = caret_1;
pos = (338.333,0);
},
{
name = caret_2;
pos = (676.667,0);
},
{
name = top_1;
pos = (169,972);
},
{
name = top_2;
pos = (508,972);
},
{
name = top_3;
pos = (846,972);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(24,-108,o),
(92,-105,o),
(144,-105,cs),
(164,-105,o),
(183,-107,o),
(199,-107,cs),
(232,-107,o),
(257,-100,o),
(257,-69,cs),
(257,-30,o),
(231,-30,o),
(211,-30,cs),
(144,-30,l),
(144,400,ls),
(144,407,o),
(150,411,o),
(162,411,cs),
(216,411,o),
(225,412,o),
(280,414,c),
(283,391,o),
(283,364,o),
(283,337,cs),
(283,300,ls),
(283,206,o),
(279,99,o),
(279,77,cs),
(278,64,o),
(273,57,o),
(266,56,cs),
(251,53,o),
(230,47,o),
(230,27,cs),
(230,0,o),
(249,0,o),
(268,0,cs),
(275,0,o),
(288,1,o),
(305,2,cs),
(322,3,o),
(339,3,o),
(357,3,cs),
(372,3,o),
(387,3,o),
(400,2,cs),
(413,1,o),
(425,1,o),
(437,1,cs),
(472,1,o),
(479,10,o),
(479,30,cs),
(479,50,o),
(469,60,o),
(450,60,cs),
(371,60,l),
(371,400,ls),
(371,407,o),
(377,411,o),
(389,411,cs),
(404,411,o),
(428,409,o),
(455,409,cs),
(470,409,o),
(489,416,o),
(489,447,cs),
(489,474,o),
(474,487,o),
(457,487,cs),
(379,487,ls),
(376,487,o),
(374,488,o),
(373,491,cs),
(372,493,o),
(371,499,o),
(371,508,cs),
(371,609,o),
(383,751,o),
(529,751,cs),
(540,751,o),
(547,744,o),
(550,730,cs),
(553,715,o),
(555,687,o),
(555,645,cs),
(555,557,o),
(557,448,o),
(557,332,cs),
(557,196,o),
(554,103,o),
(554,70,cs),
(554,34,o),
(552,9,o),
(547,-6,cs),
(542,-21,o),
(532,-30,o),
(516,-31,cs),
(501,-32,o),
(489,-35,o),
(489,-60,cs),
(489,-84,o),
(516,-90,o),
(545,-90,cs),
(549,-90,o),
(557,-89,o),
(569,-88,cs),
(580,-87,o),
(590,-87,o),
(599,-87,cs),
(618,-87,o),
(635,-87,o),
(649,-88,cs),
(662,-89,o),
(679,-89,o),
(699,-89,cs),
(711,-89,o),
(726,-84,o),
(726,-63,cs),
(726,-38,o),
(723,-30,o),
(681,-30,cs),
(642,-30,l),
(642,8,o),
(643,91,o),
(643,185,c),
(660,205,l),
(666,195,o),
(694,134,o),
(741,39,cs),
(767,-14,o),
(808,-88,o),
(827,-88,cs),
(904,-88,o),
(959,-86,o),
(993,-83,cs),
(1026,-80,o),
(1043,-72,o),
(1043,-59,cs),
(1043,-32,o),
(1010,-27,o),
(963,-27,cs),
(936,-27,o),
(915,-25,o),
(899,-20,cs),
(883,-15,o),
(873,-10,o),
(868,-5,cs),
(833,42,o),
(791,112,o),
(722,257,c),
(761,293,o),
(796,327,o),
(825,358,cs),
(831,365,o),
(841,370,o),
(856,371,cs),
(895,374,o),
(924,378,o),
(943,382,cs),
(962,386,o),
(971,395,o),
(971,408,cs),
(971,421,o),
(957,429,o),
(930,433,cs),
(902,437,o),
(862,439,o),
(810,439,cs),
(737,439,o),
(700,425,o),
(700,396,cs),
(700,387,o),
(702,380,o),
(705,377,cs),
(708,374,o),
(711,372,o),
(714,372,cs),
(719,372,ls),
(722,372,o),
(723,370,o),
(723,367,cs),
(723,357,o),
(685,325,o),
(642,282,c),
(642,713,ls),
(642,768,o),
(629,825,o),
(532,825,cs),
(448,825,o),
(396,800,o),
(357,763,c),
(345,771,o),
(322,775,o),
(299,775,cs),
(188,775,o),
(120,739,o),
(87,685,cs),
(54,630,o),
(50,566,o),
(50,507,cs),
(50,496,o),
(47,487,o),
(38,487,cs),
(21,487,ls),
(-4,487,o),
(-24,484,o),
(-24,449,cs),
(-24,418,o),
(-1,411,o),
(22,411,cs),
(39,411,ls),
(50,411,o),
(51,411,o),
(51,404,cs),
(51,353,o),
(53,288,o),
(53,221,cs),
(53,182,o),
(52,60,o),
(47,-12,cs),
(46,-27,o),
(38,-35,o),
(24,-36,cs),
(8,-36,o),
(-25,-49,o),
(-25,-73,cs),
(-25,-100,o),
(-2,-108,o),
(26,-108,cs)
);
},
{
closed = 1;
nodes = (
(147,487,o),
(144,491,o),
(144,500,cs),
(144,572,o),
(168,701,o),
(288,701,cs),
(289,701,o),
(305,701,o),
(314,697,c),
(287,633,o),
(284,554,o),
(284,487,c),
(152,487,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
226 220 46 0 2 40
CALL[ ]	/* CallFunction */";
};
width = 1015;
},
{
anchors = (
{
name = bottom_1;
pos = (170,0);
},
{
name = bottom_2;
pos = (510,0);
},
{
name = bottom_3;
pos = (850,0);
},
{
name = caret_1;
pos = (340,0);
},
{
name = caret_2;
pos = (680,0);
},
{
name = top_1;
pos = (170,972);
},
{
name = top_2;
pos = (510,972);
},
{
name = top_3;
pos = (850,972);
}
);
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(545,-78,o),
(557,-78,o),
(572,-77,cs),
(586,-76,o),
(598,-76,o),
(609,-76,cs),
(634,-76,o),
(655,-76,o),
(672,-77,cs),
(688,-78,o),
(703,-78,o),
(718,-78,cs),
(734,-78,o),
(747,-75,o),
(747,-56,cs),
(747,-40,o),
(736,-31,o),
(705,-31,cs),
(644,-31,l),
(644,186,l),
(677,218,l),
(684,204,o),
(713,144,o),
(759,55,cs),
(786,3,o),
(830,-76,o),
(849,-76,cs),
(916,-75,o),
(965,-74,o),
(994,-71,cs),
(1023,-69,o),
(1037,-62,o),
(1037,-51,cs),
(1037,-30,o),
(1002,-26,o),
(971,-26,cs),
(919,-26,o),
(904,-23,o),
(888,-7,cs),
(853,31,o),
(778,171,o),
(734,269,c),
(751,284,o),
(767,300,o),
(780,313,cs),
(795,328,o),
(815,346,o),
(840,370,cs),
(847,377,o),
(858,382,o),
(871,383,cs),
(906,386,o),
(931,390,o),
(948,393,cs),
(964,396,o),
(972,403,o),
(972,413,cs),
(972,423,o),
(965,429,o),
(950,432,cs),
(935,434,o),
(910,435,o),
(877,435,cs),
(798,435,ls),
(773,435,o),
(754,434,o),
(741,432,cs),
(728,429,o),
(721,422,o),
(721,411,cs),
(721,395,o),
(731,388,o),
(746,388,cs),
(750,388,ls),
(756,388,o),
(759,385,o),
(759,378,cs),
(759,373,o),
(750,362,o),
(731,345,cs),
(712,328,o),
(682,301,o),
(643,265,c),
(643,713,ls),
(643,765,o),
(634,825,o),
(535,825,cs),
(334,825,o),
(309,642,o),
(306,523,cs),
(305,509,o),
(304,498,o),
(303,490,cs),
(302,482,o),
(298,478,o),
(292,478,cs),
(248,478,ls),
(224,478,o),
(207,476,o),
(207,452,cs),
(207,437,o),
(222,420,o),
(245,420,cs),
(292,420,ls),
(303,420,o),
(305,413,o),
(305,394,cs),
(305,300,ls),
(305,296,o),
(306,95,o),
(301,65,cs),
(300,50,o),
(295,48,o),
(267,44,cs),
(252,41,o),
(233,40,o),
(233,21,cs),
(233,0,o),
(250,0,o),
(269,0,cs),
(276,0,o),
(289,1,o),
(306,2,cs),
(323,3,o),
(340,3,o),
(358,3,cs),
(393,3,o),
(436,1,o),
(468,1,cs),
(485,1,o),
(497,3,o),
(502,7,cs),
(507,10,o),
(510,16,o),
(510,24,cs),
(510,40,o),
(500,48,o),
(481,48,cs),
(372,48,l),
(372,409,ls),
(372,416,o),
(378,420,o),
(390,420,cs),
(405,420,o),
(429,418,o),
(456,418,cs),
(471,418,o),
(488,424,o),
(488,447,cs),
(488,468,o),
(471,478,o),
(458,478,cs),
(380,478,ls),
(377,478,o),
(375,479,o),
(374,482,cs),
(373,484,o),
(372,490,o),
(372,499,cs),
(372,581,o),
(372,769,o),
(530,769,cs),
(578,769,o),
(577,731,o),
(577,659,cs),
(577,625,o),
(577,585,o),
(578,540,cs),
(579,494,o),
(579,438,o),
(579,371,cs),
(579,291,o),
(578,232,o),
(577,188,cs),
(575,143,o),
(574,98,o),
(574,43,cs),
(574,4,o),
(563,-24,o),
(527,-31,cs),
(504,-35,o),
(493,-32,o),
(493,-55,cs),
(493,-74,o),
(513,-78,o),
(536,-78,cs)
);
},
{
closed = 1;
nodes = (
(29,-90,o),
(91,-87,o),
(133,-87,cs),
(168,-87,o),
(211,-89,o),
(243,-89,cs),
(278,-89,o),
(295,-83,o),
(295,-60,cs),
(295,-32,o),
(276,-30,o),
(256,-30,cs),
(147,-30,l),
(147,409,ls),
(147,416,o),
(153,420,o),
(165,420,cs),
(241,420,ls),
(264,420,o),
(288,423,o),
(288,450,cs),
(288,472,o),
(262,478,o),
(243,478,cs),
(155,478,ls),
(150,478,o),
(147,478,o),
(147,489,cs),
(147,553,o),
(158,719,o),
(300,719,cs),
(321,719,o),
(332,710,o),
(341,702,c),
(386,743,l),
(386,743,l),
(366,762,o),
(343,775,o),
(300,775,cs),
(201,775,o),
(139,733,o),
(110,676,cs),
(79,616,o),
(76,551,o),
(74,501,cs),
(74,492,o),
(73,478,o),
(62,478,cs),
(28,478,ls),
(4,478,o),
(-14,477,o),
(-14,450,cs),
(-14,427,o),
(2,420,o),
(25,420,cs),
(62,420,ls),
(67,420,o),
(71,420,o),
(73,419,cs),
(74,418,o),
(75,416,o),
(75,414,cs),
(75,380,o),
(75,347,o),
(76,316,cs),
(77,284,o),
(77,251,o),
(77,217,cs),
(77,176,o),
(76,75,o),
(71,-13,cs),
(70,-20,o),
(67,-26,o),
(61,-29,cs),
(54,-32,o),
(43,-35,o),
(27,-36,cs),
(12,-36,o),
(-15,-43,o),
(-15,-64,cs),
(-15,-89,o),
(11,-90,o),
(29,-90,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
228 162 82 40 2 40
CALL[ ]	/* CallFunction */";
};
width = 1020;
},
{
anchors = (
{
name = bottom_1;
pos = (171,0);
},
{
name = bottom_2;
pos = (514,0);
},
{
name = bottom_3;
pos = (856,0);
},
{
name = caret_1;
pos = (342.333,0);
},
{
name = caret_2;
pos = (684.667,0);
},
{
name = top_1;
pos = (171,972);
},
{
name = top_2;
pos = (514,972);
},
{
name = top_3;
pos = (856,972);
}
);
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(40,-60,o),
(52,-59,o),
(67,-58,cs),
(82,-57,o),
(99,-57,o),
(117,-57,cs),
(132,-57,o),
(148,-57,o),
(164,-58,cs),
(180,-59,o),
(194,-59,o),
(205,-59,cs),
(222,-59,o),
(234,-58,o),
(240,-55,cs),
(245,-53,o),
(248,-50,o),
(248,-45,cs),
(248,-35,o),
(238,-30,o),
(219,-30,cs),
(151,-30,l),
(151,424,ls),
(151,427,o),
(152,430,o),
(154,432,cs),
(156,434,o),
(161,435,o),
(169,435,cs),
(156,435,o),
(249,433,o),
(336,433,c),
(336,428,o),
(336,424,o),
(337,421,cs),
(337,417,o),
(337,413,o),
(337,409,cs),
(337,300,ls),
(337,300,o),
(338,80,o),
(333,45,cs),
(330,29,o),
(315,26,o),
(269,24,cs),
(254,23,o),
(237,22,o),
(237,11,cs),
(237,6,o),
(240,3,o),
(247,2,cs),
(254,1,o),
(262,0,o),
(271,0,cs),
(278,0,o),
(291,1,o),
(308,2,cs),
(325,3,o),
(342,3,o),
(360,3,cs),
(395,3,o),
(438,1,o),
(470,1,cs),
(487,1,o),
(499,2,o),
(504,4,cs),
(509,6,o),
(512,9,o),
(512,14,cs),
(512,23,o),
(502,28,o),
(483,28,cs),
(374,28,l),
(374,424,ls),
(374,431,o),
(380,435,o),
(392,435,cs),
(407,435,o),
(431,433,o),
(458,433,cs),
(473,433,o),
(487,436,o),
(487,447,cs),
(487,458,o),
(473,463,o),
(460,463,cs),
(382,463,ls),
(379,463,o),
(377,464,o),
(376,467,cs),
(375,470,o),
(374,475,o),
(374,484,cs),
(374,533,o),
(375,608,o),
(395,678,cs),
(414,748,o),
(457,799,o),
(532,799,cs),
(609,799,o),
(609,748,o),
(609,683,cs),
(609,634,o),
(610,556,o),
(610,436,cs),
(610,377,o),
(612,111,o),
(605,-3,cs),
(604,-21,o),
(583,-31,o),
(543,-33,cs),
(520,-34,ls),
(512,-35,o),
(507,-36,o),
(504,-38,cs),
(501,-40,o),
(499,-43,o),
(499,-46,cs),
(499,-49,o),
(501,-52,o),
(504,-54,cs),
(507,-57,o),
(514,-58,o),
(523,-58,cs),
(543,-58,o),
(562,-58,o),
(579,-57,cs),
(596,-57,o),
(611,-57,o),
(624,-57,cs),
(643,-57,o),
(662,-57,o),
(682,-58,cs),
(701,-59,o),
(714,-59,o),
(721,-59,cs),
(736,-59,o),
(745,-57,o),
(748,-54,cs),
(751,-51,o),
(753,-47,o),
(753,-44,cs),
(753,-40,o),
(751,-37,o),
(747,-35,cs),
(743,-33,o),
(736,-32,o),
(725,-32,cs),
(647,-32,l),
(647,-14,o),
(647,15,o),
(647,54,cs),
(646,93,o),
(646,137,o),
(646,187,c),
(701,239,l),
(713,216,o),
(744,156,o),
(787,76,cs),
(829,-1,o),
(865,-55,o),
(881,-55,cs),
(934,-55,o),
(972,-54,o),
(995,-53,cs),
(1018,-52,o),
(1029,-47,o),
(1029,-38,cs),
(1029,-29,o),
(1014,-25,o),
(983,-25,cs),
(955,-25,o),
(934,-24,o),
(921,-23,cs),
(908,-22,o),
(899,-19,o),
(895,-14,cs),
(825,72,o),
(749,237,o),
(737,272,c),
(759,291,o),
(791,322,o),
(862,390,cs),
(869,397,o),
(880,402,o),
(893,403,cs),
(921,406,o),
(942,408,o),
(955,410,cs),
(968,412,o),
(974,416,o),
(974,421,cs),
(974,427,o),
(964,431,o),
(945,433,cs),
(926,434,o),
(895,435,o),
(854,435,cs),
(813,435,o),
(784,434,o),
(769,433,cs),
(753,431,o),
(745,427,o),
(745,420,cs),
(745,417,o),
(746,415,o),
(749,413,cs),
(752,410,o),
(757,409,o),
(765,408,cs),
(799,406,ls),
(807,406,o),
(811,404,o),
(811,399,cs),
(811,385,o),
(724,304,o),
(645,236,c),
(645,547,ls),
(645,587,o),
(645,621,o),
(646,649,cs),
(646,676,o),
(646,698,o),
(646,713,cs),
(646,756,o),
(642,825,o),
(540,825,cs),
(468,825,o),
(416,790,o),
(388,742,c),
(365,761,o),
(346,775,o),
(302,775,cs),
(217,775,o),
(163,721,o),
(138,653,cs),
(111,582,o),
(108,516,o),
(108,491,cs),
(108,476,o),
(107,463,o),
(96,463,cs),
(32,463,ls),
(20,463,o),
(12,463,o),
(7,462,cs),
(2,461,o),
(0,457,o),
(0,452,cs),
(0,448,o),
(2,444,o),
(6,441,cs),
(10,437,o),
(18,435,o),
(29,435,cs),
(96,435,ls),
(107,435,o),
(109,428,o),
(109,409,cs),
(109,276,o),
(111,210,o),
(111,210,c),
(111,162,o),
(109,77,o),
(105,-15,cs),
(104,-22,o),
(99,-27,o),
(89,-29,cs),
(78,-32,o),
(59,-34,o),
(31,-36,cs),
(16,-37,o),
(-1,-38,o),
(-1,-49,cs),
(-1,-54,o),
(2,-57,o),
(9,-58,cs),
(16,-59,o),
(24,-60,o),
(33,-60,cs)
);
},
{
closed = 1;
nodes = (
(159,463,l),
(159,463,l),
(156,463,o),
(154,464,o),
(153,467,cs),
(152,470,o),
(151,475,o),
(151,484,cs),
(151,510,o),
(150,565,o),
(171,632,cs),
(190,697,o),
(234,749,o),
(308,749,cs),
(352,749,o),
(368,731,o),
(375,716,c),
(343,645,o),
(338,571,o),
(336,491,cs),
(335,478,o),
(335,471,o),
(335,470,cs),
(335,468,o),
(335,466,o),
(335,463,c),
(159,463,l),
(159,463,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
240 230 165 119 2 40
CALL[ ]	/* CallFunction */";
};
width = 1027;
}
);
note = f_f_k;
},
{
glyphname = f_f_l;
kernLeft = f_f;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
anchors = (
{
name = caret_1;
pos = (234.333,0);
},
{
name = caret_2;
pos = (468.667,0);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,-110,o),
(86,-107,o),
(126,-107,cs),
(156,-107,o),
(193,-109,o),
(231,-109,cs),
(266,-109,o),
(290,-102,o),
(290,-71,cs),
(290,-35,o),
(271,-32,o),
(244,-32,cs),
(146,-32,l),
(146,392,ls),
(146,395,o),
(147,398,o),
(149,400,cs),
(151,402,o),
(156,403,o),
(164,403,cs),
(219,403,o),
(224,407,o),
(268,407,c),
(271,387,o),
(272,339,o),
(272,292,cs),
(272,147,o),
(268,114,o),
(268,69,cs),
(268,56,o),
(266,53,o),
(255,50,cs),
(244,46,o),
(206,43,o),
(206,19,cs),
(206,-6,o),
(232,-8,o),
(257,-8,cs),
(264,-8,o),
(277,-7,o),
(294,-6,cs),
(311,-5,o),
(328,-5,o),
(344,-5,cs),
(361,-5,o),
(378,-5,o),
(394,-6,cs),
(409,-7,o),
(424,-7,o),
(437,-7,cs),
(472,-7,o),
(478,2,o),
(478,23,cs),
(478,42,o),
(468,52,o),
(449,52,cs),
(360,52,l),
(360,392,ls),
(360,399,o),
(367,403,o),
(380,403,cs),
(393,403,o),
(417,401,o),
(443,401,cs),
(459,401,o),
(478,409,o),
(478,438,cs),
(478,467,o),
(462,479,o),
(446,479,cs),
(368,479,ls),
(363,479,o),
(360,481,o),
(360,485,cs),
(360,518,o),
(361,581,o),
(380,638,cs),
(398,696,o),
(439,743,o),
(513,743,cs),
(526,743,o),
(535,738,o),
(539,728,cs),
(542,717,o),
(544,700,o),
(544,675,cs),
(544,626,o),
(545,548,o),
(545,428,cs),
(545,369,o),
(547,103,o),
(540,-11,cs),
(539,-27,o),
(538,-39,o),
(529,-39,cs),
(506,-40,ls),
(479,-41,o),
(468,-56,o),
(468,-69,cs),
(468,-88,o),
(485,-98,o),
(509,-98,cs),
(528,-98,o),
(547,-98,o),
(566,-97,cs),
(584,-97,o),
(597,-97,o),
(606,-97,cs),
(635,-97,o),
(667,-99,o),
(701,-99,cs),
(740,-99,o),
(756,-87,o),
(756,-68,cs),
(756,-49,o),
(732,-40,o),
(711,-40,cs),
(633,-40,l),
(633,9,o),
(632,91,o),
(632,206,cs),
(632,325,o),
(631,426,o),
(631,510,cs),
(631,572,o),
(631,616,o),
(632,644,cs),
(632,663,o),
(632,688,o),
(632,705,cs),
(632,762,o),
(621,817,o),
(518,817,cs),
(445,817,o),
(396,795,o),
(360,762,c),
(341,773,o),
(323,775,o),
(299,775,cs),
(78,775,o),
(52,629,o),
(52,491,cs),
(52,483,o),
(48,479,o),
(40,479,cs),
(27,479,ls),
(5,479,o),
(-22,479,o),
(-22,441,cs),
(-22,410,o),
(1,403,o),
(24,403,cs),
(40,403,ls),
(46,403,o),
(50,403,o),
(51,402,cs),
(52,401,o),
(53,400,o),
(53,399,cs),
(53,367,o),
(53,337,o),
(54,308,cs),
(55,279,o),
(55,249,o),
(55,217,cs),
(55,185,o),
(54,57,o),
(49,-17,cs),
(48,-32,o),
(43,-37,o),
(26,-38,cs),
(8,-38,o),
(-23,-48,o),
(-23,-75,cs),
(-23,-106,o),
(1,-110,o),
(28,-110,cs)
);
},
{
closed = 1;
nodes = (
(149,479,o),
(146,481,o),
(146,484,cs),
(146,626,o),
(162,701,o),
(295,701,cs),
(300,701,o),
(306,700,o),
(312,697,c),
(285,644,o),
(306,479,o),
(272,479,cs),
(154,479,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
42 1 9 4 198 1 3 17 146 1 13 12 87 11 2 1 13 4 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
42 1 9 4 198 1 3 17 146 1 13 12 87 11 2 16 13 4 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 4 20 1 17 3 4 17 91 16 8 6 3 1 7 19 2 0 1 0 87 0 9 9 5 83 0 5 5 14 67 15 14 11 3 2 2 3 83 18 10 2 3 3 23 67 0 12 12 13 83 0 13 13 24 13 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 4 20 1 17 3 4 17 91 16 8 6 3 1 7 19 2 0 1 0 87 0 9 9 5 83 0 5 5 14 67 15 14 11 3 2 2 3 83 18 10 2 3 3 23 67 0 12 12 13 83 0 13 13 16 13 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 4 20 1 17 3 4 17 91 16 8 6 3 1 7 19 2 0 1 0 87 0 9 9 5 83 0 5 5 14 67 15 14 11 3 2 2 3 83 18 10 2 3 3 23 67 0 12 12 13 83 0 13 13 24 13 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 4 20 1 17 3 4 17 91 18 10 2 3 15 14 11 3 2 12 3 2 91 16 8 6 3 1 7 19 2 0 1 0 87 0 9 9 5 83 0 5 5 14 67 0 12 12 13 83 0 13 13 24 13 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 4 20 1 17 3 4 17 91 18 10 2 3 15 14 11 3 2 12 3 2 91 0 7 0 1 7 79 16 8 6 3 1 19 1 0 1 0 87 0 9 9 5 83 0 5 5 14 67 0 12 12 13 83 0 13 13 24 13 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 4 20 1 17 3 4 17 91 18 10 2 3 15 14 11 3 2 12 3 2 91 8 6 2 1 0 7 0 1 7 91 0 16 19 1 0 16 0 87 0 9 9 5 83 0 5 5 14 67 0 12 12 13 83 0 13 13 24 13 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 48 values pushed */
186 185 1 0 194 191 185 199 186 199 170 168 165 162 161 159 138 129 126 124 122 115 111 108 101 99 85 82 78 68 64 62 46 44 40 38 33 29 24 21 8 7 0 184 1 174 21 15
CALL[ ]	/* CallFunction */";
};
width = 703;
},
{
anchors = (
{
name = caret_1;
pos = (237,0);
},
{
name = caret_2;
pos = (474,0);
}
);
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(737,-84,o),
(750,-70,o),
(750,-59,cs),
(750,-44,o),
(733,-37,o),
(712,-37,cs),
(634,-37,l),
(634,14,o),
(633,96,o),
(633,208,cs),
(633,308,o),
(632,413,o),
(632,524,cs),
(632,577,o),
(632,617,o),
(633,645,cs),
(633,667,o),
(633,691,o),
(633,708,cs),
(633,745,o),
(635,820,o),
(524,820,cs),
(318,820,o),
(298,620,o),
(295,503,cs),
(294,484,o),
(292,473,o),
(280,473,cs),
(237,473,ls),
(213,473,o),
(195,467,o),
(195,443,cs),
(195,424,o),
(208,415,o),
(234,415,cs),
(281,415,ls),
(292,415,o),
(294,408,o),
(294,389,cs),
(294,295,ls),
(294,291,o),
(295,90,o),
(290,60,cs),
(289,53,o),
(287,48,o),
(283,46,cs),
(279,44,o),
(270,42,o),
(256,40,cs),
(238,36,o),
(214,34,o),
(214,16,cs),
(214,-4,o),
(241,-5,o),
(258,-5,cs),
(265,-5,o),
(278,-4,o),
(295,-3,cs),
(312,-2,o),
(329,-2,o),
(347,-2,cs),
(382,-2,o),
(425,-4,o),
(457,-4,cs),
(474,-4,o),
(486,-2,o),
(491,2,cs),
(496,5,o),
(499,11,o),
(499,19,cs),
(499,35,o),
(489,43,o),
(470,43,cs),
(361,43,l),
(361,404,ls),
(361,411,o),
(367,415,o),
(379,415,cs),
(394,415,o),
(418,413,o),
(445,413,cs),
(460,413,o),
(477,419,o),
(477,442,cs),
(477,463,o),
(460,473,o),
(447,473,cs),
(369,473,ls),
(364,473,o),
(361,475,o),
(361,479,cs),
(361,523,o),
(362,591,o),
(382,655,cs),
(400,715,o),
(442,764,o),
(519,764,cs),
(567,764,o),
(566,724,o),
(566,678,cs),
(566,629,o),
(567,551,o),
(567,431,cs),
(567,372,o),
(569,106,o),
(562,-8,cs),
(561,-25,o),
(551,-38,o),
(530,-38,cs),
(507,-38,ls),
(491,-38,o),
(476,-50,o),
(476,-61,cs),
(476,-74,o),
(491,-83,o),
(510,-83,cs),
(530,-83,o),
(549,-83,o),
(566,-82,cs),
(583,-82,o),
(598,-82,o),
(611,-82,cs),
(630,-82,o),
(649,-82,o),
(669,-83,cs),
(688,-84,o),
(701,-84,o),
(708,-84,cs)
);
},
{
closed = 1;
nodes = (
(30,-91,o),
(92,-88,o),
(134,-88,cs),
(169,-88,o),
(212,-90,o),
(244,-90,cs),
(279,-90,o),
(296,-84,o),
(296,-61,cs),
(296,-33,o),
(277,-31,o),
(257,-31,cs),
(148,-31,l),
(148,404,ls),
(148,407,o),
(149,410,o),
(151,412,cs),
(153,414,o),
(158,415,o),
(166,415,cs),
(181,415,o),
(205,413,o),
(232,413,cs),
(249,413,o),
(271,414,o),
(271,445,cs),
(271,470,o),
(247,473,o),
(234,473,cs),
(156,473,ls),
(151,473,o),
(148,477,o),
(148,484,cs),
(148,575,o),
(149,719,o),
(301,719,cs),
(322,719,o),
(333,710,o),
(342,702,c),
(387,743,l),
(387,743,l),
(367,762,o),
(344,775,o),
(301,775,cs),
(202,775,o),
(139,732,o),
(111,672,cs),
(80,610,o),
(77,544,o),
(75,491,cs),
(75,482,o),
(74,473,o),
(63,473,cs),
(29,473,ls),
(5,473,o),
(-13,472,o),
(-13,445,cs),
(-13,422,o),
(3,415,o),
(26,415,cs),
(63,415,ls),
(68,415,o),
(72,415,o),
(74,414,cs),
(75,413,o),
(76,411,o),
(76,409,cs),
(76,377,o),
(76,345,o),
(77,313,cs),
(78,281,o),
(78,249,o),
(78,217,cs),
(78,177,o),
(77,72,o),
(72,-16,cs),
(71,-23,o),
(68,-28,o),
(62,-31,cs),
(55,-34,o),
(44,-36,o),
(28,-37,cs),
(13,-37,o),
(-14,-44,o),
(-14,-65,cs),
(-14,-90,o),
(12,-91,o),
(30,-91,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
90 1 0 13 216 0 2 1 0 131 58 2 3 17 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 8 0 0 1 8 0 91 12 10 5 3 3 11 1 4 3 4 87 0 13 13 9 83 20 1 9 9 12 67 18 15 6 3 2 2 1 83 19 14 7 3 1 1 23 67 0 16 16 17 83 0 17 17 16 17 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 8 0 0 1 8 0 91 19 14 7 3 1 18 15 6 3 2 16 1 2 91 12 10 5 3 3 11 1 4 3 4 87 0 13 13 9 83 20 1 9 9 12 67 0 16 16 17 83 0 17 17 16 17 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 12 3 11 3 12 96 0 8 0 0 1 8 0 91 19 14 7 3 1 18 15 6 3 2 16 1 2 91 0 11 4 3 11 79 10 5 2 3 0 4 3 4 87 0 13 13 9 83 20 1 9 9 12 67 0 16 16 17 83 0 17 17 16 17 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 8 0 0 1 8 0 91 19 14 7 3 1 18 15 6 3 2 16 1 2 91 12 10 2 5 0 11 4 5 11 91 0 3 0 4 3 4 87 0 13 13 9 83 20 1 9 9 12 67 0 16 16 17 83 0 17 17 16 17 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 8 0 0 1 8 0 91 19 14 7 3 1 18 15 6 3 2 16 1 2 91 12 10 2 5 0 11 4 5 11 91 0 3 0 4 3 4 87 0 13 13 9 83 20 1 9 9 14 67 0 16 16 17 83 0 17 17 16 17 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
92 91 214 211 208 205 186 175 172 170 168 161 157 154 147 145 129 126 122 114 110 108 91 220 92 220 40 52 61 23 212 35 118 53 34 21 24
CALL[ ]	/* CallFunction */";
};
width = 711;
},
{
anchors = (
{
name = caret_1;
pos = (241,0);
},
{
name = caret_2;
pos = (482,0);
}
);
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(40,-60,o),
(52,-59,o),
(67,-58,cs),
(82,-57,o),
(99,-57,o),
(117,-57,cs),
(132,-57,o),
(148,-57,o),
(164,-58,cs),
(180,-59,o),
(194,-59,o),
(206,-59,cs),
(223,-59,o),
(235,-58,o),
(240,-55,cs),
(245,-53,o),
(248,-50,o),
(248,-45,cs),
(248,-35,o),
(238,-30,o),
(219,-30,cs),
(151,-30,l),
(151,424,ls),
(151,427,o),
(152,430,o),
(154,432,cs),
(156,434,o),
(161,435,o),
(169,435,cs),
(194,435,o),
(255,433,o),
(324,433,c),
(324,420,o),
(325,370,o),
(325,300,cs),
(325,300,o),
(326,80,o),
(321,45,cs),
(318,32,o),
(308,27,o),
(257,24,cs),
(242,23,o),
(225,22,o),
(225,11,cs),
(225,6,o),
(228,3,o),
(235,2,cs),
(242,1,o),
(250,0,o),
(259,0,cs),
(267,0,o),
(279,1,o),
(295,2,cs),
(311,3,o),
(330,3,o),
(351,3,cs),
(378,3,o),
(416,1,o),
(457,1,cs),
(474,1,o),
(486,2,o),
(492,4,cs),
(497,6,o),
(500,9,o),
(500,13,cs),
(500,23,o),
(490,28,o),
(471,28,cs),
(362,28,l),
(362,424,ls),
(362,431,o),
(365,435,o),
(378,435,cs),
(387,435,o),
(398,435,o),
(413,434,cs),
(428,433,o),
(439,433,o),
(448,433,cs),
(463,433,o),
(475,436,o),
(475,448,cs),
(475,456,o),
(464,463,o),
(448,463,cs),
(370,463,ls),
(367,463,o),
(365,464,o),
(364,467,cs),
(363,470,o),
(362,475,o),
(362,484,cs),
(362,537,o),
(362,615,o),
(383,683,cs),
(404,751,o),
(448,799,o),
(527,799,cs),
(597,799,o),
(597,738,o),
(597,683,cs),
(597,634,o),
(598,556,o),
(598,436,cs),
(598,377,o),
(600,111,o),
(593,-3,cs),
(592,-22,o),
(568,-30,o),
(531,-33,cs),
(508,-34,ls),
(494,-35,o),
(487,-39,o),
(487,-47,cs),
(487,-54,o),
(495,-58,o),
(511,-58,cs),
(558,-58,o),
(571,-57,o),
(618,-57,cs),
(631,-57,o),
(648,-57,o),
(668,-58,cs),
(687,-59,o),
(704,-59,o),
(718,-59,cs),
(733,-59,o),
(741,-51,o),
(741,-44,cs),
(741,-40,o),
(739,-37,o),
(735,-35,cs),
(731,-33,o),
(724,-32,o),
(713,-32,cs),
(635,-32,l),
(635,26,o),
(634,107,o),
(634,211,cs),
(634,329,o),
(633,423,o),
(633,547,cs),
(633,587,o),
(633,621,o),
(634,649,cs),
(634,676,o),
(634,698,o),
(634,713,cs),
(634,750,o),
(630,825,o),
(532,825,cs),
(459,825,o),
(411,796,o),
(380,749,c),
(364,762,o),
(343,775,o),
(304,775,cs),
(214,775,o),
(163,719,o),
(138,654,cs),
(110,584,o),
(108,516,o),
(108,491,cs),
(108,476,o),
(107,463,o),
(96,463,cs),
(32,463,ls),
(20,463,o),
(12,463,o),
(7,462,cs),
(2,461,o),
(0,457,o),
(0,452,cs),
(0,448,o),
(2,444,o),
(6,441,cs),
(10,437,o),
(18,435,o),
(29,435,cs),
(96,435,ls),
(107,435,o),
(109,428,o),
(109,409,cs),
(109,377,o),
(109,345,o),
(110,313,cs),
(111,281,o),
(111,249,o),
(111,217,cs),
(111,139,o),
(109,60,o),
(105,-15,cs),
(104,-22,o),
(99,-27,o),
(88,-29,cs),
(77,-32,o),
(58,-34,o),
(31,-36,cs),
(16,-37,o),
(-1,-38,o),
(-1,-49,cs),
(-1,-54,o),
(2,-57,o),
(9,-58,cs),
(16,-59,o),
(24,-60,o),
(33,-60,cs)
);
},
{
closed = 1;
nodes = (
(159,463,l),
(159,463,l),
(156,463,o),
(154,464,o),
(153,467,cs),
(152,470,o),
(151,475,o),
(151,484,cs),
(151,511,o),
(150,567,o),
(171,633,cs),
(191,698,o),
(233,749,o),
(309,749,cs),
(341,749,o),
(357,739,o),
(368,727,c),
(328,642,o),
(323,551,o),
(323,463,c),
(159,463,l),
(159,463,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
180 1 5 16 102 1 7 6 142 38 2 1 8 3 66 174 1 16 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 15 0 16 5 15 16 91 11 3 2 1 12 1 2 1 2 87 0 4 4 0 83 18 1 0 0 12 67 13 10 2 6 6 5 83 19 17 14 3 5 5 23 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 15 0 16 5 15 16 91 19 17 14 3 5 13 10 2 6 7 5 6 91 11 3 2 1 12 1 2 1 2 87 0 4 4 0 83 18 1 0 0 12 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 15 0 16 5 15 16 91 19 17 14 3 5 13 10 2 6 7 5 6 91 11 3 2 1 12 1 2 1 2 87 0 4 4 0 83 18 1 0 0 14 67 9 1 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 46 values pushed */
177 177 1 0 177 193 177 192 184 182 172 170 162 159 155 152 134 126 123 121 118 112 98 97 92 82 79 77 74 69 65 62 54 52 35 33 31 21 17 15 0 176 1 176 20 15
CALL[ ]	/* CallFunction */";
};
width = 723;
}
);
note = f_f_l;
},
{
glyphname = f_h;
kernLeft = f;
kernRight = c_h;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
anchors = (
{
name = bottom_1;
pos = (208,0);
},
{
name = bottom_2;
pos = (623,0);
},
{
name = caret_1;
pos = (415,0);
},
{
name = top_1;
pos = (208,972);
},
{
name = top_2;
pos = (623,972);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(635,-61,o),
(689,-58,o),
(719,-58,cs),
(753,-58,o),
(820,-61,o),
(821,-61,cs),
(841,-61,o),
(850,-50,o),
(850,-34,cs),
(850,-3,o),
(831,0,o),
(796,0,cs),
(744,0,l),
(744,176,ls),
(744,228,o),
(744,258,o),
(740,293,cs),
(735,340,o),
(715,428,o),
(604,428,cs),
(532,428,o),
(469,401,o),
(434,337,c),
(434,495,o),
(435,592,o),
(437,641,cs),
(437,679,o),
(439,704,o),
(439,713,cs),
(439,756,o),
(432,825,o),
(326,825,cs),
(220,825,o),
(153,778,o),
(120,713,cs),
(85,645,o),
(79,567,o),
(77,506,cs),
(76,487,o),
(74,479,o),
(63,479,cs),
(40,479,ls),
(16,479,o),
(-1,475,o),
(-1,452,cs),
(-1,433,o),
(5,411,o),
(37,411,cs),
(63,411,ls),
(74,411,o),
(76,404,o),
(76,385,cs),
(76,300,ls),
(76,264,o),
(77,117,o),
(72,77,cs),
(71,66,o),
(67,56,o),
(59,56,cs),
(31,55,o),
(18,52,o),
(18,27,cs),
(18,2,o),
(38,0,o),
(61,0,cs),
(68,0,o),
(81,1,o),
(98,2,cs),
(115,3,o),
(132,3,o),
(150,3,cs),
(165,3,o),
(178,3,o),
(187,2,cs),
(196,1,o),
(206,1,o),
(218,1,cs),
(253,1,o),
(261,14,o),
(261,30,cs),
(261,54,o),
(251,60,o),
(231,60,cs),
(164,60,l),
(164,400,ls),
(164,407,o),
(170,411,o),
(182,411,cs),
(197,411,o),
(221,409,o),
(248,409,cs),
(265,409,o),
(285,416,o),
(285,447,cs),
(285,470,o),
(269,479,o),
(250,479,cs),
(172,479,ls),
(167,479,o),
(164,481,o),
(164,484,cs),
(164,528,o),
(165,590,o),
(185,649,cs),
(204,708,o),
(248,751,o),
(322,751,cs),
(333,751,o),
(347,745,o),
(347,725,cs),
(347,574,ls),
(347,533,o),
(347,487,o),
(348,436,cs),
(348,327,o),
(343,137,o),
(341,104,cs),
(340,88,o),
(339,77,o),
(336,71,cs),
(333,65,o),
(329,62,o),
(323,62,cs),
(316,62,o),
(306,51,o),
(306,35,cs),
(306,16,o),
(318,0,o),
(342,0,cs),
(357,0,o),
(368,1,o),
(376,2,cs),
(384,3,o),
(396,3,o),
(411,3,cs),
(426,3,o),
(441,3,o),
(456,2,cs),
(471,1,o),
(488,0,o),
(507,0,cs),
(518,0,o),
(532,11,o),
(532,30,cs),
(532,57,o),
(516,64,o),
(485,64,cs),
(432,64,l),
(432,172,ls),
(432,253,o),
(472,351,o),
(573,351,cs),
(631,351,o),
(644,302,o),
(647,283,cs),
(654,228,o),
(653,111,o),
(653,123,cs),
(653,107,o),
(651,72,o),
(651,32,cs),
(651,8,o),
(647,1,o),
(634,1,cs),
(617,1,o),
(597,-3,o),
(597,-34,cs),
(597,-49,o),
(605,-61,o),
(628,-61,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
30 0 1 40
CALL[ ]	/* CallFunction */";
};
width = 830;
},
{
anchors = (
{
name = bottom_1;
pos = (206,0);
},
{
name = bottom_2;
pos = (618,0);
},
{
name = caret_1;
pos = (412,0);
},
{
name = top_1;
pos = (206,972);
},
{
name = top_2;
pos = (618,972);
}
);
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(635,-61,o),
(649,-60,o),
(667,-59,cs),
(684,-58,o),
(700,-58,o),
(715,-58,cs),
(748,-58,o),
(812,-61,o),
(814,-61,cs),
(834,-61,o),
(843,-48,o),
(843,-40,cs),
(843,-13,o),
(816,-12,o),
(789,-12,cs),
(740,-12,l),
(740,176,ls),
(740,228,o),
(740,258,o),
(736,293,cs),
(731,340,o),
(711,428,o),
(600,428,cs),
(528,428,o),
(469,391,o),
(434,327,c),
(434,382,o),
(434,430,o),
(434,470,cs),
(434,509,o),
(434,543,o),
(434,570,cs),
(434,597,o),
(434,619,o),
(435,636,cs),
(435,653,o),
(435,666,o),
(435,677,cs),
(435,687,o),
(435,695,o),
(435,700,cs),
(435,705,o),
(435,709,o),
(435,713,cs),
(435,756,o),
(428,825,o),
(322,825,cs),
(122,825,o),
(97,634,o),
(94,506,cs),
(93,486,o),
(92,473,o),
(80,473,cs),
(36,473,ls),
(12,473,o),
(-1,471,o),
(-1,452,cs),
(-1,437,o),
(10,420,o),
(33,420,cs),
(80,420,ls),
(91,420,o),
(93,413,o),
(93,394,cs),
(93,300,ls),
(93,304,o),
(94,95,o),
(89,65,cs),
(88,50,o),
(83,48,o),
(55,44,cs),
(42,41,o),
(18,47,o),
(18,21,cs),
(18,10,o),
(38,0,o),
(57,0,cs),
(64,0,o),
(77,1,o),
(94,2,cs),
(111,3,o),
(128,3,o),
(146,3,cs),
(161,3,o),
(174,3,o),
(183,2,cs),
(192,1,o),
(202,1,o),
(214,1,cs),
(231,1,o),
(243,4,o),
(249,9,cs),
(254,14,o),
(257,19,o),
(257,24,cs),
(257,45,o),
(247,48,o),
(227,48,cs),
(160,48,l),
(160,409,ls),
(160,416,o),
(166,420,o),
(178,420,cs),
(193,420,o),
(217,418,o),
(244,418,cs),
(259,418,o),
(278,424,o),
(278,447,cs),
(278,466,o),
(259,473,o),
(246,473,cs),
(168,473,ls),
(163,473,o),
(160,477,o),
(160,484,cs),
(160,530,o),
(161,596,o),
(181,660,cs),
(200,724,o),
(244,769,o),
(318,769,cs),
(349,769,o),
(364,754,o),
(364,725,cs),
(364,574,ls),
(364,533,o),
(364,487,o),
(365,436,cs),
(365,295,o),
(358,172,o),
(358,92,cs),
(358,61,o),
(351,55,o),
(332,52,c),
(323,46,o),
(303,58,o),
(303,21,cs),
(303,12,o),
(314,0,o),
(338,0,cs),
(353,0,o),
(364,1,o),
(372,2,cs),
(380,3,o),
(392,3,o),
(407,3,cs),
(422,3,o),
(441,3,o),
(462,2,cs),
(483,1,o),
(504,0,o),
(523,0,cs),
(534,0,o),
(546,16,o),
(546,24,cs),
(546,51,o),
(522,52,o),
(501,52,cs),
(428,52,l),
(428,180,ls),
(428,268,o),
(474,369,o),
(578,369,cs),
(648,369,o),
(661,311,o),
(664,285,cs),
(670,231,o),
(670,123,o),
(670,123,cs),
(670,127,o),
(671,48,o),
(667,20,c),
(667,9,o),
(667,1,o),
(666,-3,cs),
(665,-7,o),
(664,-10,o),
(662,-11,c),
(634,-16,o),
(595,-11,o),
(595,-40,cs),
(595,-47,o),
(603,-61,o),
(626,-61,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
30 0 1 40
CALL[ ]	/* CallFunction */";
};
width = 824;
},
{
anchors = (
{
name = bottom_1;
pos = (204,0);
},
{
name = bottom_2;
pos = (611,0);
},
{
name = caret_1;
pos = (407.5,0);
},
{
name = top_1;
pos = (204,972);
},
{
name = top_2;
pos = (611,972);
}
);
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(632,-61,o),
(646,-60,o),
(663,-59,cs),
(680,-58,o),
(695,-58,o),
(710,-58,cs),
(724,-58,o),
(741,-58,o),
(760,-59,cs),
(779,-60,o),
(793,-61,o),
(804,-61,cs),
(823,-61,o),
(833,-57,o),
(833,-50,cs),
(833,-37,o),
(806,-32,o),
(779,-32,cs),
(735,-32,l),
(735,176,ls),
(735,228,o),
(735,258,o),
(731,293,cs),
(726,340,o),
(706,428,o),
(595,428,cs),
(523,428,o),
(464,391,o),
(429,327,c),
(429,382,o),
(429,430,o),
(429,470,cs),
(429,509,o),
(429,543,o),
(429,570,cs),
(429,597,o),
(429,619,o),
(430,636,cs),
(430,653,o),
(430,666,o),
(430,677,cs),
(430,687,o),
(430,695,o),
(430,700,cs),
(430,705,o),
(430,709,o),
(430,713,cs),
(430,756,o),
(423,825,o),
(317,825,cs),
(142,825,o),
(122,632,o),
(119,506,cs),
(118,493,o),
(117,482,o),
(116,475,cs),
(115,467,o),
(111,463,o),
(105,463,cs),
(31,463,ls),
(19,463,o),
(11,463,o),
(6,462,cs),
(1,461,o),
(-1,457,o),
(-1,452,cs),
(-1,448,o),
(1,444,o),
(5,441,cs),
(9,437,o),
(17,435,o),
(28,435,cs),
(105,435,ls),
(116,435,o),
(118,428,o),
(118,409,cs),
(118,300,ls),
(118,300,o),
(119,80,o),
(114,45,cs),
(111,29,o),
(96,26,o),
(50,24,cs),
(35,23,o),
(18,22,o),
(18,11,cs),
(18,6,o),
(21,3,o),
(28,2,cs),
(35,1,o),
(43,0,o),
(52,0,cs),
(59,0,o),
(72,1,o),
(89,2,cs),
(106,3,o),
(123,3,o),
(141,3,cs),
(156,3,o),
(169,3,o),
(178,2,cs),
(187,1,o),
(197,1,o),
(209,1,cs),
(226,1,o),
(238,2,o),
(243,4,cs),
(248,6,o),
(251,9,o),
(251,14,cs),
(251,23,o),
(241,28,o),
(222,28,cs),
(155,28,l),
(155,424,ls),
(155,431,o),
(161,435,o),
(173,435,cs),
(188,435,o),
(212,433,o),
(239,433,cs),
(254,433,o),
(268,436,o),
(268,447,cs),
(268,458,o),
(254,463,o),
(241,463,cs),
(163,463,ls),
(160,463,o),
(158,464,o),
(157,467,cs),
(156,470,o),
(155,475,o),
(155,484,cs),
(155,533,o),
(156,608,o),
(176,678,cs),
(195,748,o),
(238,799,o),
(313,799,cs),
(372,799,o),
(389,769,o),
(389,725,cs),
(389,574,ls),
(389,533,o),
(389,487,o),
(390,436,cs),
(390,313,o),
(385,110,o),
(383,72,cs),
(382,41,o),
(376,35,o),
(357,32,cs),
(345,30,o),
(299,31,o),
(299,11,cs),
(299,4,o),
(310,0,o),
(333,0,cs),
(348,0,o),
(359,1,o),
(367,2,cs),
(375,3,o),
(387,3,o),
(402,3,cs),
(417,3,o),
(436,3,o),
(457,2,cs),
(478,1,o),
(499,0,o),
(518,0,cs),
(529,0,o),
(538,6,o),
(538,14,cs),
(538,26,o),
(517,32,o),
(496,32,cs),
(423,32,l),
(423,193,ls),
(423,301,o),
(484,399,o),
(585,399,cs),
(671,399,o),
(683,332,o),
(689,288,cs),
(695,234,o),
(695,120,o),
(695,123,cs),
(695,127,o),
(695,31,o),
(692,0,cs),
(689,-23,o),
(684,-28,o),
(657,-31,cs),
(631,-33,o),
(592,-37,o),
(592,-50,cs),
(592,-57,o),
(602,-61,o),
(623,-61,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
29 0 1 40
CALL[ ]	/* CallFunction */";
};
width = 815;
}
);
note = f_h;
},
{
glyphname = f_i;
kernLeft = f;
kernRight = f_f_i;
lastChange = "2024-06-14 09:07:20 +0000";
layers = (
{
anchors = (
{
name = caret_1;
pos = (265,0);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(524,-91,ls),
(541,-91,o),
(554,-82,o),
(554,-63,cs),
(554,-40,o),
(537,-31,o),
(506,-31,cs),
(432,-31,l),
(432,10,o),
(431,6,o),
(431,77,cs),
(431,166,o),
(436,340,o),
(436,428,cs),
(436,463,o),
(428,487,o),
(397,487,cs),
(172,487,ls),
(165,487,o),
(164,487,o),
(164,498,cs),
(164,571,o),
(182,747,o),
(281,747,cs),
(338,747,o),
(356,720,o),
(356,697,cs),
(356,647,o),
(316,656,o),
(316,618,cs),
(316,595,o),
(329,570,o),
(378,570,cs),
(433,570,o),
(449,609,o),
(449,656,cs),
(449,799,o),
(372,825,o),
(309,825,cs),
(207,825,o),
(142,780,o),
(112,716,cs),
(82,652,o),
(76,579,o),
(76,509,cs),
(76,492,o),
(74,487,o),
(63,487,cs),
(40,487,ls),
(16,487,o),
(-3,477,o),
(-3,450,cs),
(-3,424,o),
(10,411,o),
(37,411,cs),
(63,411,ls),
(74,411,o),
(76,404,o),
(76,385,cs),
(76,300,ls),
(76,220,o),
(72,92,o),
(71,77,cs),
(70,65,o),
(68,59,o),
(59,56,cs),
(36,52,o),
(18,44,o),
(18,27,cs),
(18,4,o),
(38,0,o),
(61,0,cs),
(68,0,o),
(81,1,o),
(98,2,cs),
(115,3,o),
(132,3,o),
(150,3,cs),
(165,3,o),
(181,3,o),
(198,2,cs),
(214,1,o),
(228,1,o),
(240,1,cs),
(275,1,o),
(285,10,o),
(285,30,cs),
(285,50,o),
(274,60,o),
(253,60,cs),
(171,60,l),
(168,76,o),
(162,110,o),
(162,155,cs),
(162,186,o),
(163,228,o),
(163,283,cs),
(163,336,o),
(164,375,o),
(164,400,cs),
(164,407,o),
(170,411,o),
(182,411,cs),
(199,411,o),
(231,409,o),
(268,409,cs),
(275,409,o),
(294,411,o),
(325,411,cs),
(340,411,o),
(342,402,o),
(343,394,cs),
(344,387,o),
(347,288,o),
(347,145,cs),
(347,102,o),
(347,68,o),
(346,45,cs),
(345,22,o),
(344,3,o),
(343,-12,cs),
(342,-18,o),
(339,-22,o),
(333,-24,cs),
(326,-27,o),
(314,-30,o),
(297,-33,cs),
(286,-36,o),
(284,-47,o),
(284,-58,cs),
(284,-71,o),
(290,-80,o),
(303,-84,cs),
(315,-89,o),
(334,-91,o),
(359,-91,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
35 1 3 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 8 9 6 9 8 6 104 0 0 0 1 0 1 87 0 9 9 7 83 0 7 7 12 67 5 1 2 2 6 83 10 1 6 6 23 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 8 9 6 9 8 6 104 10 1 6 5 1 2 3 6 2 91 0 0 0 1 0 1 87 0 9 9 7 83 0 7 7 12 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 8 9 6 9 8 6 104 10 1 6 5 1 2 3 6 2 91 0 0 0 1 0 1 87 0 9 9 7 83 0 7 7 14 67 0 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
136 133 127 125 116 114 108 106 98 95 92 89 73 65 62 60 49 37 52 42 11 17
CALL[ ]	/* CallFunction */";
};
width = 530;
},
{
anchors = (
{
name = caret_1;
pos = (262,0);
}
);
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(516,-79,ls),
(529,-79,o),
(546,-77,o),
(546,-57,cs),
(546,-38,o),
(529,-31,o),
(498,-31,cs),
(428,-31,l),
(428,10,o),
(427,6,o),
(427,77,cs),
(427,166,o),
(432,340,o),
(432,428,cs),
(432,459,o),
(425,478,o),
(400,478,cs),
(168,478,ls),
(165,478,o),
(163,479,o),
(162,481,cs),
(161,483,o),
(160,489,o),
(160,498,cs),
(160,543,o),
(162,599,o),
(179,662,cs),
(195,722,o),
(229,765,o),
(287,765,cs),
(349,765,o),
(373,730,o),
(373,697,cs),
(373,647,o),
(333,652,o),
(333,618,cs),
(333,595,o),
(347,575,o),
(386,575,cs),
(433,575,o),
(445,613,o),
(445,656,cs),
(445,799,o),
(368,825,o),
(305,825,cs),
(213,825,o),
(154,781,o),
(127,716,cs),
(99,652,o),
(93,579,o),
(93,509,cs),
(93,489,o),
(92,478,o),
(80,478,cs),
(36,478,ls),
(12,478,o),
(-2,471,o),
(-2,451,cs),
(-2,434,o),
(10,420,o),
(33,420,cs),
(80,420,ls),
(91,420,o),
(93,413,o),
(93,394,cs),
(93,300,ls),
(93,287,o),
(95,101,o),
(88,65,cs),
(87,58,o),
(85,53,o),
(82,51,cs),
(79,48,o),
(70,46,o),
(55,44,cs),
(40,41,o),
(18,40,o),
(18,21,cs),
(18,0,o),
(38,0,o),
(57,0,cs),
(64,0,o),
(77,1,o),
(94,2,cs),
(111,3,o),
(128,3,o),
(146,3,cs),
(181,3,o),
(224,1,o),
(256,1,cs),
(273,1,o),
(285,3,o),
(291,7,cs),
(297,10,o),
(300,16,o),
(300,24,cs),
(300,40,o),
(290,48,o),
(269,48,cs),
(167,48,l),
(166,51,o),
(165,64,o),
(162,85,cs),
(159,106,o),
(158,130,o),
(158,155,cs),
(158,188,o),
(159,232,o),
(159,287,cs),
(159,343,o),
(160,384,o),
(160,409,cs),
(160,416,o),
(166,420,o),
(178,420,cs),
(195,420,o),
(227,418,o),
(264,418,cs),
(275,418,o),
(301,420,o),
(342,420,cs),
(357,420,o),
(359,411,o),
(360,403,cs),
(361,396,o),
(364,294,o),
(364,145,cs),
(364,69,o),
(363,15,o),
(359,-12,c),
(359,-20,o),
(356,-25,o),
(351,-27,cs),
(346,-29,o),
(334,-31,o),
(317,-33,cs),
(301,-36,o),
(283,-38,o),
(283,-57,cs),
(283,-78,o),
(320,-79,o),
(355,-79,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
37 1 3 2 29 1 0 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 8 9 6 9 8 6 104 0 0 0 1 0 1 87 0 9 9 7 83 0 7 7 12 67 5 1 2 2 6 83 10 1 6 6 23 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 8 9 6 9 8 6 104 10 1 6 5 1 2 3 6 2 91 0 0 0 1 0 1 87 0 9 9 7 83 0 7 7 12 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 8 9 6 9 8 6 104 10 1 6 5 1 2 3 6 2 91 0 0 0 1 0 1 87 0 9 9 7 83 0 7 7 14 67 0 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
147 144 136 134 123 121 113 111 103 100 96 93 77 67 64 62 51 39 68 42 11 17
CALL[ ]	/* CallFunction */";
};
width = 524;
},
{
anchors = (
{
name = caret_1;
pos = (258,0);
}
);
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(505,-59,ls),
(518,-59,o),
(535,-58,o),
(535,-47,cs),
(535,-41,o),
(531,-37,o),
(523,-34,cs),
(514,-32,o),
(502,-31,o),
(487,-31,cs),
(423,-31,l),
(423,10,o),
(422,6,o),
(422,77,cs),
(422,166,o),
(427,340,o),
(427,428,cs),
(427,449,o),
(421,463,o),
(405,463,cs),
(163,463,ls),
(160,463,o),
(158,465,o),
(157,469,cs),
(156,473,o),
(155,483,o),
(155,498,cs),
(155,546,o),
(155,612,o),
(173,681,cs),
(190,747,o),
(228,795,o),
(296,795,cs),
(367,795,o),
(398,745,o),
(398,697,cs),
(398,647,o),
(358,652,o),
(358,618,cs),
(358,595,o),
(375,583,o),
(398,583,cs),
(433,583,o),
(440,613,o),
(440,656,cs),
(440,799,o),
(363,825,o),
(300,825,cs),
(133,825,o),
(121,642,o),
(118,509,cs),
(118,494,o),
(117,483,o),
(116,475,cs),
(115,467,o),
(111,463,o),
(105,463,cs),
(31,463,ls),
(19,463,o),
(11,463,o),
(6,462,cs),
(1,461,o),
(-1,457,o),
(-1,452,cs),
(-1,448,o),
(1,444,o),
(5,441,cs),
(9,437,o),
(17,435,o),
(28,435,cs),
(105,435,ls),
(116,435,o),
(118,428,o),
(118,409,cs),
(118,300,ls),
(118,282,o),
(119,84,o),
(113,45,cs),
(110,28,o),
(97,26,o),
(50,24,cs),
(35,23,o),
(18,22,o),
(18,11,cs),
(18,6,o),
(21,3,o),
(28,2,cs),
(35,1,o),
(43,0,o),
(52,0,cs),
(59,0,o),
(72,1,o),
(89,2,cs),
(106,3,o),
(123,3,o),
(141,3,cs),
(176,3,o),
(219,1,o),
(251,1,cs),
(268,1,o),
(280,2,o),
(285,4,cs),
(290,6,o),
(293,9,o),
(293,14,cs),
(293,23,o),
(283,28,o),
(264,28,cs),
(162,28,l),
(162,29,o),
(153,84,o),
(153,155,cs),
(153,187,o),
(154,234,o),
(154,295,cs),
(154,354,o),
(155,397,o),
(155,424,cs),
(155,431,o),
(161,435,o),
(173,435,cs),
(190,435,o),
(222,433,o),
(259,433,cs),
(274,433,o),
(310,435,o),
(367,435,cs),
(382,435,o),
(384,429,o),
(385,418,cs),
(386,410,o),
(389,300,o),
(389,145,cs),
(389,69,o),
(388,15,o),
(384,-12,cs),
(383,-20,o),
(380,-25,o),
(376,-27,cs),
(372,-30,o),
(362,-32,o),
(345,-33,cs),
(330,-34,o),
(315,-36,o),
(302,-37,cs),
(288,-38,o),
(281,-42,o),
(281,-47,cs),
(281,-53,o),
(289,-56,o),
(304,-57,cs),
(319,-58,o),
(334,-59,o),
(350,-59,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 9 10 7 10 9 7 104 0 0 0 1 0 1 87 0 10 10 8 83 0 8 8 12 67 6 1 2 2 7 83 11 1 7 7 23 67 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 9 10 7 10 9 7 104 11 1 7 6 1 2 3 7 2 91 0 0 0 1 0 1 87 0 10 10 8 83 0 8 8 12 67 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 9 10 7 10 9 7 104 11 1 7 6 1 2 3 7 2 91 0 0 0 1 0 1 87 0 10 10 8 83 0 8 8 14 67 5 1 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
145 142 134 132 121 119 113 111 105 102 98 95 83 82 77 67 64 62 49 37 68 42 12 17
CALL[ ]	/* CallFunction */";
};
width = 516;
}
);
note = f_i;
},
{
glyphname = f_j;
kernLeft = f;
kernRight = dotlessj;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
anchors = (
{
name = bottom_1;
pos = (124,0);
},
{
name = bottom_2;
pos = (371,0);
},
{
name = caret_1;
pos = (247,0);
},
{
name = top_1;
pos = (124,972);
},
{
name = top_2;
pos = (371,972);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(303,-249,o),
(339,-238,o),
(368,-206,cs),
(396,-175,o),
(419,-124,o),
(427,-44,cs),
(431,-4,o),
(433,36,o),
(433,61,cs),
(433,73,o),
(433,134,o),
(435,243,cs),
(436,350,o),
(436,411,o),
(436,425,cs),
(436,448,o),
(434,465,o),
(430,474,cs),
(426,483,o),
(418,487,o),
(407,487,cs),
(177,487,ls),
(170,487,o),
(169,487,o),
(169,498,cs),
(169,539,o),
(169,594,o),
(187,651,cs),
(204,707,o),
(243,747,o),
(310,747,cs),
(345,747,o),
(361,722,o),
(361,697,cs),
(361,647,o),
(321,652,o),
(321,618,cs),
(321,595,o),
(337,567,o),
(378,567,cs),
(434,567,o),
(454,601,o),
(454,656,cs),
(454,799,o),
(377,825,o),
(314,825,cs),
(100,825,o),
(84,642,o),
(81,509,cs),
(81,494,o),
(80,487,o),
(68,487,cs),
(45,487,ls),
(21,487,o),
(1,484,o),
(1,452,cs),
(1,433,o),
(19,411,o),
(42,411,cs),
(68,411,ls),
(79,411,o),
(81,404,o),
(81,385,cs),
(81,300,ls),
(81,156,o),
(80,124,o),
(76,77,cs),
(76,66,o),
(70,60,o),
(47,56,cs),
(36,53,o),
(15,48,o),
(15,27,cs),
(15,6,o),
(30,0,o),
(49,0,cs),
(49,0,o),
(111,3,o),
(155,3,cs),
(170,3,o),
(185,3,o),
(200,2,cs),
(214,1,o),
(227,1,o),
(239,1,cs),
(274,1,o),
(281,11,o),
(281,30,cs),
(281,50,o),
(271,60,o),
(252,60,cs),
(173,60,l),
(173,58,o),
(167,103,o),
(167,159,cs),
(167,190,o),
(168,231,o),
(168,284,cs),
(168,334,o),
(169,372,o),
(169,398,cs),
(169,407,o),
(175,411,o),
(187,411,cs),
(186,411,o),
(257,408,o),
(294,408,cs),
(323,408,ls),
(340,408,o),
(348,401,o),
(348,387,cs),
(348,278,ls),
(348,206,o),
(345,39,o),
(340,-40,cs),
(337,-91,o),
(328,-127,o),
(314,-147,cs),
(299,-168,o),
(281,-178,o),
(258,-178,cs),
(222,-178,o),
(184,-163,o),
(184,-143,cs),
(184,-128,o),
(189,-125,o),
(200,-124,cs),
(217,-121,o),
(237,-117,o),
(237,-89,cs),
(237,-64,o),
(213,-49,o),
(189,-49,cs),
(138,-49,o),
(99,-83,o),
(99,-134,cs),
(99,-188,o),
(130,-249,o),
(268,-249,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
135 87 1 40
CALL[ ]	/* CallFunction */";
};
width = 494;
},
{
anchors = (
{
name = bottom_1;
pos = (123,0);
},
{
name = bottom_2;
pos = (368,0);
},
{
name = caret_1;
pos = (245,0);
},
{
name = top_1;
pos = (123,972);
},
{
name = top_2;
pos = (368,972);
}
);
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(338,-236,o),
(406,-194,o),
(421,-44,cs),
(423,-20,o),
(427,26,o),
(427,61,cs),
(427,73,o),
(427,134,o),
(429,243,cs),
(430,350,o),
(430,411,o),
(430,425,cs),
(430,460,o),
(430,478,o),
(403,478,cs),
(171,478,ls),
(168,478,o),
(166,479,o),
(165,481,cs),
(164,483,o),
(163,489,o),
(163,498,cs),
(163,542,o),
(163,601,o),
(181,662,cs),
(198,722,o),
(236,765,o),
(304,765,cs),
(353,765,o),
(376,730,o),
(376,697,cs),
(376,647,o),
(336,652,o),
(336,618,cs),
(336,595,o),
(350,573,o),
(386,573,cs),
(433,573,o),
(448,601,o),
(448,656,cs),
(448,799,o),
(371,825,o),
(308,825,cs),
(216,825,o),
(157,781,o),
(130,716,cs),
(100,647,o),
(98,581,o),
(96,509,cs),
(96,489,o),
(95,478,o),
(83,478,cs),
(39,478,ls),
(15,478,o),
(0,476,o),
(0,452,cs),
(0,437,o),
(13,420,o),
(36,420,cs),
(83,420,ls),
(94,420,o),
(96,413,o),
(96,394,cs),
(96,300,ls),
(96,287,o),
(98,101,o),
(91,65,cs),
(90,58,o),
(87,53,o),
(80,51,cs),
(73,48,o),
(63,46,o),
(48,44,cs),
(33,41,o),
(16,40,o),
(16,21,cs),
(16,4,o),
(31,0,o),
(50,0,cs),
(53,0,o),
(107,3,o),
(149,3,cs),
(185,3,o),
(229,1,o),
(261,1,cs),
(278,1,o),
(290,3,o),
(295,7,cs),
(300,11,o),
(303,17,o),
(303,24,cs),
(303,40,o),
(293,48,o),
(274,48,cs),
(168,48,l),
(168,60,o),
(161,107,o),
(161,159,cs),
(161,192,o),
(162,235,o),
(162,290,cs),
(162,344,o),
(163,384,o),
(163,409,cs),
(163,416,o),
(169,420,o),
(181,420,cs),
(180,420,o),
(251,417,o),
(288,417,cs),
(338,417,ls),
(355,417,o),
(363,410,o),
(363,396,cs),
(363,278,ls),
(363,223,o),
(361,33,o),
(355,-40,cs),
(347,-138,o),
(317,-174,o),
(263,-174,cs),
(206,-174,o),
(178,-164,o),
(178,-143,cs),
(178,-128,o),
(183,-125,o),
(194,-124,cs),
(211,-121,o),
(231,-117,o),
(231,-89,cs),
(231,-64,o),
(205,-53,o),
(190,-53,cs),
(149,-53,o),
(114,-81,o),
(114,-120,cs),
(114,-182,o),
(147,-236,o),
(265,-236,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
142 92 1 40
CALL[ ]	/* CallFunction */";
};
width = 490;
},
{
anchors = (
{
name = bottom_1;
pos = (121,0);
},
{
name = bottom_2;
pos = (363,0);
},
{
name = caret_1;
pos = (242,0);
},
{
name = top_1;
pos = (121,972);
},
{
name = top_2;
pos = (363,972);
}
);
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(330,-221,o),
(397,-183,o),
(412,-44,cs),
(414,-20,o),
(418,26,o),
(418,61,cs),
(418,73,o),
(418,134,o),
(420,243,cs),
(421,350,o),
(421,411,o),
(421,425,cs),
(421,450,o),
(419,463,o),
(398,463,cs),
(162,463,ls),
(159,463,o),
(157,465,o),
(156,469,cs),
(155,473,o),
(154,483,o),
(154,498,cs),
(154,546,o),
(154,612,o),
(172,681,cs),
(189,747,o),
(227,795,o),
(295,795,cs),
(366,795,o),
(397,745,o),
(397,697,cs),
(397,647,o),
(357,652,o),
(357,618,cs),
(357,595,o),
(374,583,o),
(397,583,cs),
(432,583,o),
(439,613,o),
(439,656,cs),
(439,799,o),
(362,825,o),
(299,825,cs),
(132,825,o),
(120,642,o),
(117,509,cs),
(117,494,o),
(116,483,o),
(115,475,cs),
(114,467,o),
(110,463,o),
(104,463,cs),
(30,463,ls),
(18,463,o),
(10,463,o),
(5,462,cs),
(0,461,o),
(-2,457,o),
(-2,452,cs),
(-2,448,o),
(0,444,o),
(4,441,cs),
(8,437,o),
(16,435,o),
(27,435,cs),
(104,435,ls),
(115,435,o),
(117,428,o),
(117,409,cs),
(117,300,ls),
(117,282,o),
(118,84,o),
(112,45,cs),
(109,28,o),
(94,26,o),
(49,24,cs),
(34,23,o),
(17,22,o),
(17,11,cs),
(17,6,o),
(20,3,o),
(27,2,cs),
(34,1,o),
(42,0,o),
(51,0,cs),
(58,0,o),
(71,1,o),
(88,2,cs),
(105,3,o),
(122,3,o),
(140,3,cs),
(175,3,o),
(218,1,o),
(250,1,cs),
(267,1,o),
(279,2,o),
(284,4,cs),
(289,6,o),
(292,9,o),
(292,14,cs),
(292,23,o),
(282,28,o),
(263,28,cs),
(161,28,l),
(161,26,o),
(152,90,o),
(152,159,cs),
(152,192,o),
(153,238,o),
(153,297,cs),
(153,354,o),
(154,397,o),
(154,424,cs),
(154,431,o),
(160,435,o),
(172,435,cs),
(171,435,o),
(242,432,o),
(279,432,cs),
(359,432,ls),
(376,432,o),
(384,425,o),
(384,411,cs),
(384,278,ls),
(384,223,o),
(382,33,o),
(376,-40,cs),
(365,-150,o),
(324,-189,o),
(254,-189,cs),
(202,-189,o),
(169,-168,o),
(169,-143,cs),
(169,-128,o),
(174,-125,o),
(185,-124,cs),
(202,-121,o),
(222,-117,o),
(222,-89,cs),
(222,-64,o),
(206,-59,o),
(191,-59,cs),
(164,-59,o),
(135,-81,o),
(135,-120,cs),
(135,-174,o),
(170,-221,o),
(256,-221,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
143 91 1 40
CALL[ ]	/* CallFunction */";
};
width = 484;
}
);
note = f_j;
},
{
glyphname = f_k;
kernLeft = f;
kernRight = c_k;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
anchors = (
{
name = bottom_1;
pos = (203,0);
},
{
name = bottom_2;
pos = (608,0);
},
{
name = caret_1;
pos = (405,0);
},
{
name = top_1;
pos = (203,972);
},
{
name = top_2;
pos = (608,972);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(522,-91,o),
(537,-82,o),
(537,-62,cs),
(537,-39,o),
(525,-32,o),
(486,-32,cs),
(437,-32,l),
(437,26,o),
(437,71,o),
(438,104,cs),
(438,137,o),
(438,164,o),
(438,186,c),
(455,205,l),
(469,179,o),
(496,117,o),
(536,39,cs),
(573,-35,o),
(604,-88,o),
(621,-88,cs),
(698,-88,o),
(753,-86,o),
(787,-83,cs),
(820,-80,o),
(837,-72,o),
(837,-59,cs),
(837,-30,o),
(789,-27,o),
(757,-27,cs),
(727,-27,o),
(705,-25,o),
(690,-22,cs),
(675,-19,o),
(665,-13,o),
(660,-5,cs),
(654,4,o),
(639,31,o),
(615,75,cs),
(590,119,o),
(560,180,o),
(523,259,c),
(618,351,o),
(570,309,o),
(619,358,cs),
(624,363,o),
(637,370,o),
(650,371,cs),
(689,374,o),
(718,378,o),
(737,382,cs),
(756,386,o),
(765,395,o),
(765,408,cs),
(765,432,o),
(713,440,o),
(604,440,cs),
(571,440,o),
(545,437,o),
(526,431,cs),
(507,425,o),
(497,414,o),
(497,398,cs),
(497,382,o),
(506,376,o),
(513,375,cs),
(523,374,ls),
(526,374,o),
(527,373,o),
(527,371,cs),
(527,363,o),
(485,331,o),
(436,282,c),
(436,713,ls),
(436,764,o),
(427,825,o),
(328,825,cs),
(222,825,o),
(153,780,o),
(120,719,cs),
(85,655,o),
(80,588,o),
(78,532,cs),
(77,514,o),
(76,502,o),
(74,496,cs),
(72,490,o),
(69,487,o),
(64,487,cs),
(41,487,ls),
(17,487,o),
(-6,484,o),
(-6,452,cs),
(-6,425,o),
(14,411,o),
(38,411,cs),
(64,411,ls),
(75,411,o),
(77,404,o),
(77,385,cs),
(77,300,ls),
(77,192,o),
(76,108,o),
(73,77,cs),
(73,66,o),
(71,59,o),
(60,56,cs),
(45,53,o),
(25,48,o),
(25,27,cs),
(25,3,o),
(41,0,o),
(62,0,cs),
(69,0,o),
(82,1,o),
(99,2,cs),
(116,3,o),
(133,3,o),
(151,3,cs),
(166,3,o),
(181,3,o),
(194,2,cs),
(207,1,o),
(219,1,o),
(231,1,cs),
(266,1,o),
(273,10,o),
(273,30,cs),
(273,50,o),
(263,60,o),
(244,60,cs),
(165,60,l),
(165,400,ls),
(165,407,o),
(171,411,o),
(183,411,cs),
(198,411,o),
(222,409,o),
(249,409,cs),
(264,409,o),
(283,416,o),
(283,447,cs),
(283,474,o),
(264,487,o),
(251,487,cs),
(173,487,ls),
(170,487,o),
(168,488,o),
(167,491,cs),
(166,493,o),
(165,499,o),
(165,508,cs),
(165,582,o),
(165,751,o),
(323,751,cs),
(334,751,o),
(342,744,o),
(345,729,cs),
(348,714,o),
(349,686,o),
(349,645,cs),
(349,533,o),
(352,472,o),
(352,332,cs),
(352,246,o),
(352,207,o),
(351,184,cs),
(349,162,o),
(349,130,o),
(347,71,cs),
(344,-19,o),
(341,-29,o),
(310,-32,cs),
(301,-33,o),
(283,-37,o),
(283,-62,cs),
(283,-84,o),
(313,-89,o),
(340,-89,cs),
(345,-89,o),
(353,-89,o),
(363,-89,cs),
(373,-90,o),
(383,-90,o),
(393,-90,cs),
(456,-90,o),
(461,-91,o),
(511,-91,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
164 96 1 40
CALL[ ]	/* CallFunction */";
};
width = 810;
},
{
anchors = (
{
name = bottom_1;
pos = (202,0);
},
{
name = bottom_2;
pos = (607,0);
},
{
name = caret_1;
pos = (404.5,0);
},
{
name = top_1;
pos = (202,972);
},
{
name = top_2;
pos = (607,972);
}
);
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(334,-78,o),
(346,-78,o),
(361,-77,cs),
(375,-76,o),
(387,-76,o),
(398,-76,cs),
(423,-76,o),
(444,-76,o),
(461,-77,cs),
(477,-78,o),
(492,-78,o),
(507,-78,cs),
(523,-78,o),
(536,-75,o),
(536,-56,cs),
(536,-40,o),
(525,-31,o),
(494,-31,cs),
(433,-31,l),
(433,186,l),
(466,218,l),
(473,204,o),
(502,144,o),
(548,55,cs),
(575,3,o),
(619,-76,o),
(638,-76,cs),
(705,-75,o),
(754,-74,o),
(783,-71,cs),
(812,-69,o),
(826,-62,o),
(826,-51,cs),
(826,-30,o),
(791,-26,o),
(760,-26,cs),
(708,-26,o),
(693,-23,o),
(677,-7,cs),
(642,31,o),
(567,171,o),
(523,269,c),
(540,284,o),
(556,300,o),
(569,313,cs),
(584,328,o),
(604,346,o),
(629,370,cs),
(636,377,o),
(647,382,o),
(660,383,cs),
(695,386,o),
(720,390,o),
(737,393,cs),
(753,396,o),
(761,403,o),
(761,413,cs),
(761,423,o),
(754,429,o),
(739,432,cs),
(724,434,o),
(699,435,o),
(666,435,cs),
(587,435,ls),
(562,435,o),
(543,434,o),
(530,432,cs),
(517,429,o),
(510,422,o),
(510,411,cs),
(510,395,o),
(520,388,o),
(535,388,cs),
(539,388,ls),
(545,388,o),
(548,385,o),
(548,378,cs),
(548,373,o),
(539,362,o),
(520,345,cs),
(501,328,o),
(471,301,o),
(432,265,c),
(432,713,ls),
(432,765,o),
(423,825,o),
(324,825,cs),
(123,825,o),
(98,642,o),
(95,523,cs),
(94,509,o),
(93,498,o),
(92,490,cs),
(91,482,o),
(87,478,o),
(81,478,cs),
(37,478,ls),
(13,478,o),
(-4,476,o),
(-4,452,cs),
(-4,437,o),
(11,420,o),
(34,420,cs),
(81,420,ls),
(92,420,o),
(94,413,o),
(94,394,cs),
(94,300,ls),
(94,296,o),
(95,95,o),
(90,65,cs),
(89,50,o),
(84,48,o),
(56,44,cs),
(41,41,o),
(22,40,o),
(22,21,cs),
(22,0,o),
(39,0,o),
(58,0,cs),
(65,0,o),
(78,1,o),
(95,2,cs),
(112,3,o),
(129,3,o),
(147,3,cs),
(182,3,o),
(225,1,o),
(257,1,cs),
(274,1,o),
(286,3,o),
(291,7,cs),
(296,10,o),
(299,16,o),
(299,24,cs),
(299,40,o),
(289,48,o),
(270,48,cs),
(161,48,l),
(161,409,ls),
(161,416,o),
(167,420,o),
(179,420,cs),
(194,420,o),
(218,418,o),
(245,418,cs),
(260,418,o),
(277,424,o),
(277,447,cs),
(277,468,o),
(260,478,o),
(247,478,cs),
(169,478,ls),
(166,478,o),
(164,479,o),
(163,482,cs),
(162,484,o),
(161,490,o),
(161,499,cs),
(161,581,o),
(161,769,o),
(319,769,cs),
(367,769,o),
(366,731,o),
(366,659,cs),
(366,625,o),
(366,585,o),
(367,540,cs),
(368,494,o),
(368,438,o),
(368,371,cs),
(368,291,o),
(367,232,o),
(366,188,cs),
(364,143,o),
(363,98,o),
(363,43,cs),
(363,4,o),
(352,-24,o),
(316,-31,cs),
(293,-35,o),
(282,-32,o),
(282,-55,cs),
(282,-74,o),
(302,-78,o),
(325,-78,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
141 75 1 40
CALL[ ]	/* CallFunction */";
};
width = 809;
},
{
anchors = (
{
name = bottom_1;
pos = (202,0);
},
{
name = bottom_2;
pos = (606,0);
},
{
name = caret_1;
pos = (404,0);
},
{
name = top_1;
pos = (202,972);
},
{
name = top_2;
pos = (606,972);
}
);
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(517,-59,o),
(526,-57,o),
(529,-54,cs),
(532,-51,o),
(534,-47,o),
(534,-44,cs),
(534,-40,o),
(532,-37,o),
(528,-35,cs),
(524,-33,o),
(517,-32,o),
(506,-32,cs),
(428,-32,l),
(428,-14,o),
(428,15,o),
(428,54,cs),
(427,93,o),
(427,137,o),
(427,187,c),
(482,239,l),
(494,216,o),
(523,156,o),
(568,76,cs),
(616,-11,o),
(648,-55,o),
(662,-55,cs),
(715,-55,o),
(753,-54,o),
(776,-53,cs),
(799,-52,o),
(810,-47,o),
(810,-38,cs),
(810,-29,o),
(795,-25,o),
(764,-25,cs),
(736,-25,o),
(715,-24,o),
(702,-23,cs),
(689,-22,o),
(680,-19,o),
(676,-14,cs),
(606,72,o),
(530,237,o),
(518,272,c),
(540,291,o),
(572,322,o),
(643,390,cs),
(650,397,o),
(661,402,o),
(674,403,cs),
(702,406,o),
(723,408,o),
(736,410,cs),
(749,412,o),
(755,416,o),
(755,421,cs),
(755,427,o),
(745,431,o),
(726,433,cs),
(707,434,o),
(676,435,o),
(635,435,cs),
(594,435,o),
(565,434,o),
(550,433,cs),
(534,431,o),
(526,427,o),
(526,420,cs),
(526,417,o),
(527,415,o),
(530,413,cs),
(533,410,o),
(538,409,o),
(546,408,cs),
(580,406,ls),
(588,406,o),
(592,404,o),
(592,399,cs),
(592,385,o),
(505,304,o),
(426,236,c),
(426,547,ls),
(426,587,o),
(426,621,o),
(427,649,cs),
(427,676,o),
(427,698,o),
(427,713,cs),
(427,750,o),
(429,825,o),
(318,825,cs),
(232,825,o),
(180,777,o),
(153,710,cs),
(124,641,o),
(121,566,o),
(119,508,cs),
(118,494,o),
(117,483,o),
(116,475,cs),
(115,467,o),
(111,463,o),
(105,463,cs),
(31,463,ls),
(19,463,o),
(11,463,o),
(6,462,cs),
(1,461,o),
(-1,457,o),
(-1,452,cs),
(-1,448,o),
(1,444,o),
(5,441,cs),
(9,437,o),
(17,435,o),
(28,435,cs),
(105,435,ls),
(116,435,o),
(118,428,o),
(118,409,cs),
(118,300,ls),
(118,300,o),
(119,80,o),
(114,45,cs),
(111,29,o),
(96,26,o),
(50,24,cs),
(35,23,o),
(18,22,o),
(18,11,cs),
(18,6,o),
(21,3,o),
(28,2,cs),
(35,1,o),
(43,0,o),
(52,0,cs),
(59,0,o),
(72,1,o),
(89,2,cs),
(106,3,o),
(123,3,o),
(141,3,cs),
(176,3,o),
(219,1,o),
(251,1,cs),
(268,1,o),
(280,2,o),
(285,4,cs),
(290,6,o),
(293,9,o),
(293,14,cs),
(293,23,o),
(283,28,o),
(264,28,cs),
(155,28,l),
(155,424,ls),
(155,431,o),
(161,435,o),
(173,435,cs),
(188,435,o),
(212,433,o),
(239,433,cs),
(254,433,o),
(268,436,o),
(268,447,cs),
(268,458,o),
(254,463,o),
(241,463,cs),
(163,463,ls),
(160,463,o),
(158,464,o),
(157,467,cs),
(156,470,o),
(155,475,o),
(155,484,cs),
(155,533,o),
(156,608,o),
(176,678,cs),
(195,748,o),
(238,799,o),
(313,799,cs),
(390,799,o),
(390,748,o),
(390,683,cs),
(390,634,o),
(391,556,o),
(391,436,cs),
(391,377,o),
(393,111,o),
(386,-3,cs),
(385,-21,o),
(364,-31,o),
(324,-33,cs),
(301,-34,ls),
(293,-35,o),
(288,-36,o),
(285,-38,cs),
(282,-40,o),
(280,-43,o),
(280,-46,cs),
(280,-49,o),
(282,-52,o),
(285,-54,cs),
(288,-57,o),
(295,-58,o),
(304,-58,cs),
(324,-58,o),
(343,-58,o),
(360,-57,cs),
(377,-57,o),
(392,-57,o),
(405,-57,cs),
(424,-57,o),
(443,-57,o),
(463,-58,cs),
(482,-59,o),
(495,-59,o),
(502,-59,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
116 9 1 40
CALL[ ]	/* CallFunction */";
};
width = 808;
}
);
note = f_k;
},
{
glyphname = f_l;
kernLeft = f;
lastChange = "2024-06-14 09:07:14 +0000";
layers = (
{
anchors = (
{
name = caret_1;
pos = (271.5,0);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(552,-91,o),
(566,-72,o),
(566,-60,cs),
(566,-41,o),
(542,-32,o),
(521,-32,cs),
(443,-32,l),
(443,19,o),
(442,101,o),
(442,213,cs),
(442,313,o),
(441,418,o),
(441,529,cs),
(441,582,o),
(441,622,o),
(442,650,cs),
(442,672,o),
(442,696,o),
(442,713,cs),
(442,750,o),
(444,825,o),
(333,825,cs),
(225,825,o),
(159,777,o),
(126,711,cs),
(91,642,o),
(85,567,o),
(83,508,cs),
(82,491,o),
(79,487,o),
(68,487,cs),
(46,487,ls),
(22,487,o),
(-3,478,o),
(-3,446,cs),
(-3,422,o),
(16,411,o),
(43,411,cs),
(69,411,ls),
(80,411,o),
(82,404,o),
(82,385,cs),
(82,300,ls),
(82,192,o),
(81,108,o),
(78,77,cs),
(78,66,o),
(74,62,o),
(65,58,cs),
(54,54,o),
(16,51,o),
(16,27,cs),
(16,3,o),
(40,0,o),
(67,0,cs),
(74,0,o),
(87,1,o),
(104,2,cs),
(121,3,o),
(138,3,o),
(156,3,cs),
(171,3,o),
(187,3,o),
(204,2,cs),
(220,1,o),
(234,1,o),
(246,1,cs),
(281,1,o),
(288,10,o),
(288,30,cs),
(288,50,o),
(278,60,o),
(259,60,cs),
(170,60,l),
(170,400,ls),
(170,407,o),
(176,411,o),
(188,411,cs),
(203,411,o),
(227,409,o),
(254,409,cs),
(269,409,o),
(288,416,o),
(288,447,cs),
(288,474,o),
(269,487,o),
(256,487,cs),
(178,487,ls),
(173,487,o),
(170,488,o),
(170,490,cs),
(170,579,o),
(173,751,o),
(328,751,cs),
(339,751,o),
(347,745,o),
(350,734,cs),
(353,722,o),
(354,705,o),
(354,683,cs),
(354,634,o),
(355,556,o),
(355,436,cs),
(355,377,o),
(357,111,o),
(350,-3,cs),
(349,-12,o),
(348,-19,o),
(347,-24,cs),
(345,-30,o),
(342,-33,o),
(339,-33,cs),
(316,-33,ls),
(288,-33,o),
(278,-47,o),
(278,-62,cs),
(278,-79,o),
(294,-90,o),
(319,-90,cs),
(339,-90,o),
(358,-90,o),
(375,-89,cs),
(392,-89,o),
(407,-89,o),
(420,-89,cs),
(439,-89,o),
(458,-89,o),
(478,-90,cs),
(497,-91,o),
(510,-91,o),
(517,-91,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
116 1 5 4 98 1 7 6 95 1 8 7 40 1 1 8 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
3 1 1 0 2 1 2 87 0 4 4 0 83 11 1 0 0 12 67 9 1 6 6 5 83 10 1 5 5 23 67 0 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
10 1 5 9 1 6 7 5 6 91 3 1 1 0 2 1 2 87 0 4 4 0 83 11 1 0 0 12 67 0 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
10 1 5 9 1 6 7 5 6 91 3 1 1 0 2 1 2 87 0 4 4 0 83 11 1 0 0 14 67 0 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 114 111 107 104 88 80 77 75 73 66 62 59 54 52 38 35 31 23 19 17 0 122 1 122 12 15
CALL[ ]	/* CallFunction */";
};
width = 543;
},
{
anchors = (
{
name = caret_1;
pos = (266,0);
}
);
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(540,-79,o),
(553,-65,o),
(553,-54,cs),
(553,-39,o),
(536,-32,o),
(515,-32,cs),
(437,-32,l),
(437,19,o),
(436,101,o),
(436,213,cs),
(436,313,o),
(435,418,o),
(435,529,cs),
(435,582,o),
(435,622,o),
(436,650,cs),
(436,672,o),
(436,696,o),
(436,713,cs),
(436,750,o),
(438,825,o),
(327,825,cs),
(121,825,o),
(101,625,o),
(98,508,cs),
(97,489,o),
(95,478,o),
(83,478,cs),
(40,478,ls),
(16,478,o),
(-2,472,o),
(-2,448,cs),
(-2,429,o),
(11,420,o),
(37,420,cs),
(84,420,ls),
(95,420,o),
(97,413,o),
(97,394,cs),
(97,300,ls),
(97,296,o),
(98,95,o),
(93,65,cs),
(92,58,o),
(90,53,o),
(86,51,cs),
(82,49,o),
(73,47,o),
(59,45,cs),
(41,41,o),
(17,39,o),
(17,21,cs),
(17,1,o),
(44,0,o),
(61,0,cs),
(68,0,o),
(81,1,o),
(98,2,cs),
(115,3,o),
(132,3,o),
(150,3,cs),
(185,3,o),
(228,1,o),
(260,1,cs),
(277,1,o),
(289,3,o),
(294,7,cs),
(299,10,o),
(302,16,o),
(302,24,cs),
(302,40,o),
(292,48,o),
(273,48,cs),
(164,48,l),
(164,409,ls),
(164,416,o),
(170,420,o),
(182,420,cs),
(197,420,o),
(221,418,o),
(248,418,cs),
(263,418,o),
(280,424,o),
(280,447,cs),
(280,468,o),
(263,478,o),
(250,478,cs),
(172,478,ls),
(167,478,o),
(164,480,o),
(164,484,cs),
(164,528,o),
(165,596,o),
(185,660,cs),
(203,720,o),
(245,769,o),
(322,769,cs),
(370,769,o),
(369,729,o),
(369,683,cs),
(369,634,o),
(370,556,o),
(370,436,cs),
(370,377,o),
(372,111,o),
(365,-3,cs),
(364,-20,o),
(354,-33,o),
(333,-33,cs),
(310,-33,ls),
(294,-33,o),
(279,-45,o),
(279,-56,cs),
(279,-69,o),
(294,-78,o),
(313,-78,cs),
(333,-78,o),
(352,-78,o),
(369,-77,cs),
(386,-77,o),
(401,-77,o),
(414,-77,cs),
(433,-77,o),
(452,-77,o),
(472,-78,cs),
(491,-79,o),
(504,-79,o),
(511,-79,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
125 1 5 4 40 1 1 8 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
3 1 1 0 2 1 2 87 0 4 4 0 83 11 1 0 0 12 67 9 1 6 6 5 83 10 1 5 5 23 67 0 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
10 1 5 9 1 6 7 5 6 91 3 1 1 0 2 1 2 87 0 4 4 0 83 11 1 0 0 12 67 0 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
10 1 5 9 1 6 7 5 6 91 3 1 1 0 2 1 2 87 0 4 4 0 83 11 1 0 0 14 67 0 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 123 120 117 114 95 84 81 79 77 70 66 63 56 54 38 35 31 23 19 17 0 129 1 129 12 15
CALL[ ]	/* CallFunction */";
};
width = 532;
},
{
anchors = (
{
name = caret_1;
pos = (258,0);
}
);
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(517,-59,o),
(526,-57,o),
(529,-54,cs),
(532,-51,o),
(534,-47,o),
(534,-44,cs),
(534,-40,o),
(532,-37,o),
(528,-35,cs),
(524,-33,o),
(517,-32,o),
(506,-32,cs),
(428,-32,l),
(428,19,o),
(427,101,o),
(427,213,cs),
(427,313,o),
(426,418,o),
(426,529,cs),
(426,582,o),
(426,622,o),
(427,650,cs),
(427,672,o),
(427,696,o),
(427,713,cs),
(427,750,o),
(429,825,o),
(318,825,cs),
(232,825,o),
(180,777,o),
(153,710,cs),
(124,641,o),
(121,566,o),
(119,508,cs),
(118,494,o),
(117,483,o),
(116,475,cs),
(114,467,o),
(110,463,o),
(104,463,cs),
(31,463,ls),
(19,463,o),
(11,463,o),
(6,462,cs),
(1,461,o),
(-1,457,o),
(-1,452,cs),
(-1,448,o),
(1,444,o),
(5,441,cs),
(9,437,o),
(17,435,o),
(28,435,cs),
(105,435,ls),
(116,435,o),
(118,428,o),
(118,409,cs),
(118,300,ls),
(118,300,o),
(119,80,o),
(114,45,cs),
(111,29,o),
(96,26,o),
(50,24,cs),
(35,23,o),
(18,22,o),
(18,11,cs),
(18,6,o),
(21,3,o),
(28,2,cs),
(35,1,o),
(43,0,o),
(52,0,cs),
(59,0,o),
(72,1,o),
(89,2,cs),
(106,3,o),
(123,3,o),
(141,3,cs),
(176,3,o),
(219,1,o),
(251,1,cs),
(268,1,o),
(280,2,o),
(285,4,cs),
(290,6,o),
(293,9,o),
(293,14,cs),
(293,23,o),
(283,28,o),
(264,28,cs),
(155,28,l),
(155,424,ls),
(155,431,o),
(161,435,o),
(173,435,cs),
(188,435,o),
(212,433,o),
(239,433,cs),
(254,433,o),
(268,436,o),
(268,447,cs),
(268,458,o),
(254,463,o),
(241,463,cs),
(163,463,ls),
(160,463,o),
(158,464,o),
(157,467,cs),
(156,470,o),
(155,475,o),
(155,484,cs),
(155,533,o),
(156,608,o),
(176,678,cs),
(195,748,o),
(238,799,o),
(313,799,cs),
(390,799,o),
(390,748,o),
(390,683,cs),
(390,634,o),
(391,556,o),
(391,436,cs),
(391,377,o),
(393,111,o),
(386,-3,cs),
(385,-21,o),
(364,-31,o),
(324,-33,cs),
(301,-34,ls),
(293,-35,o),
(288,-36,o),
(285,-38,cs),
(282,-40,o),
(280,-43,o),
(280,-46,cs),
(280,-49,o),
(282,-52,o),
(285,-54,cs),
(288,-57,o),
(295,-58,o),
(304,-58,cs),
(324,-58,o),
(343,-58,o),
(360,-57,cs),
(377,-57,o),
(392,-57,o),
(405,-57,cs),
(424,-57,o),
(443,-57,o),
(463,-58,cs),
(482,-59,o),
(495,-59,o),
(502,-59,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
104 1 7 6 39 1 1 8 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
3 1 1 0 2 1 2 87 0 4 4 0 83 12 1 0 0 12 67 10 1 6 6 5 83 11 1 5 5 23 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
11 1 5 10 1 6 7 5 6 91 3 1 1 0 2 1 2 87 0 4 4 0 83 12 1 0 0 12 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
11 1 5 10 1 6 7 5 6 91 3 1 1 0 2 1 2 87 0 4 4 0 83 12 1 0 0 14 67 9 1 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 122 119 115 112 100 99 94 84 81 79 77 70 66 63 55 53 38 36 31 23 19 17 0 130 1 130 13 15
CALL[ ]	/* CallFunction */";
};
width = 516;
}
);
note = f_l;
},
{
glyphname = f_t;
kernLeft = f;
kernRight = c_t;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
anchors = (
{
name = bottom_1;
pos = (156,0);
},
{
name = bottom_2;
pos = (467,0);
},
{
name = caret_1;
pos = (311,0);
},
{
name = top_1;
pos = (156,972);
},
{
name = top_2;
pos = (467,972);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(588,-11,o),
(613,89,o),
(613,114,cs),
(613,141,o),
(596,153,o),
(573,153,cs),
(542,153,o),
(530,129,o),
(523,102,c),
(516,85,o),
(511,67,o),
(471,67,cs),
(406,67,o),
(401,113,o),
(401,152,cs),
(401,409,l),
(445,412,o),
(542,413,o),
(576,416,cs),
(586,416,o),
(612,428,o),
(612,455,cs),
(612,486,o),
(583,492,o),
(563,492,cs),
(567,492,o),
(487,489,o),
(401,489,c),
(401,616,o),
(402,671,o),
(402,711,cs),
(402,759,o),
(392,825,o),
(285,825,cs),
(183,825,o),
(133,763,o),
(112,704,cs),
(85,632,o),
(83,563,o),
(83,515,cs),
(83,499,o),
(80,487,o),
(65,487,cs),
(48,487,ls),
(24,487,o),
(-1,481,o),
(-1,452,cs),
(-1,421,o),
(22,411,o),
(45,411,cs),
(71,411,ls),
(82,411,o),
(84,404,o),
(84,385,cs),
(84,300,ls),
(84,162,o),
(80,113,o),
(80,85,cs),
(80,70,o),
(70,65,o),
(63,64,cs),
(28,59,o),
(18,50,o),
(18,25,cs),
(18,5,o),
(41,0,o),
(56,0,cs),
(66,0,o),
(81,1,o),
(101,2,cs),
(121,3,o),
(140,3,o),
(158,3,cs),
(172,3,o),
(187,3,o),
(202,2,cs),
(217,1,o),
(227,1,o),
(233,1,cs),
(270,1,o),
(285,13,o),
(285,33,cs),
(285,53,o),
(270,69,o),
(251,69,cs),
(172,69,l),
(172,400,ls),
(172,407,o),
(178,411,o),
(190,411,cs),
(211,411,o),
(257,409,o),
(309,409,c),
(309,165,l),
(309,126,o),
(309,66,o),
(338,32,cs),
(365,0,o),
(414,-11,o),
(459,-11,cs)
);
},
{
closed = 1;
nodes = (
(179,487,o),
(176,488,o),
(175,491,cs),
(173,494,o),
(172,500,o),
(172,511,cs),
(172,598,o),
(191,751,o),
(284,751,cs),
(298,751,o),
(309,744,o),
(309,683,cs),
(309,487,l),
(182,487,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
127 120 108 58 2 40
CALL[ ]	/* CallFunction */";
};
width = 622;
},
{
anchors = (
{
name = bottom_1;
pos = (154,0);
},
{
name = bottom_2;
pos = (461,0);
},
{
name = caret_1;
pos = (307,0);
},
{
name = top_1;
pos = (154,972);
},
{
name = top_2;
pos = (461,972);
}
);
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(565,-11,o),
(606,77,o),
(606,115,cs),
(606,134,o),
(593,147,o),
(574,147,cs),
(562,147,o),
(554,142,o),
(551,133,cs),
(547,124,o),
(543,113,o),
(538,102,cs),
(530,80,o),
(517,49,o),
(467,49,cs),
(393,49,o),
(394,115,o),
(394,152,cs),
(394,418,l),
(396,418,o),
(542,422,o),
(569,425,cs),
(580,426,o),
(597,435,o),
(597,455,cs),
(597,478,o),
(576,483,o),
(557,483,cs),
(561,483,o),
(481,480,o),
(394,480,c),
(394,616,o),
(395,670,o),
(395,710,cs),
(395,753,o),
(386,825,o),
(284,825,cs),
(198,825,o),
(150,774,o),
(126,707,cs),
(101,637,o),
(97,561,o),
(97,506,cs),
(97,493,o),
(96,478,o),
(85,478,cs),
(41,478,ls),
(17,478,o),
(-1,475,o),
(-1,452,cs),
(-1,429,o),
(15,420,o),
(38,420,cs),
(85,420,ls),
(96,420,o),
(98,413,o),
(98,394,cs),
(98,300,ls),
(98,225,o),
(98,169,o),
(97,133,cs),
(96,96,o),
(95,74,o),
(94,65,cs),
(91,49,o),
(88,48,o),
(60,44,cs),
(43,41,o),
(18,38,o),
(18,20,cs),
(18,1,o),
(45,0,o),
(60,0,cs),
(69,0,o),
(82,1,o),
(99,2,cs),
(116,3,o),
(133,3,o),
(151,3,cs),
(188,3,o),
(231,1,o),
(258,1,cs),
(276,1,o),
(289,3,o),
(296,8,cs),
(303,12,o),
(306,18,o),
(306,26,cs),
(306,42,o),
(293,48,o),
(274,48,cs),
(165,48,l),
(165,409,ls),
(165,416,o),
(171,420,o),
(183,420,cs),
(208,420,o),
(262,418,o),
(323,418,c),
(323,165,l),
(323,134,o),
(323,65,o),
(351,31,cs),
(375,0,o),
(418,-11,o),
(457,-11,cs)
);
},
{
closed = 1;
nodes = (
(170,478,o),
(168,480,o),
(167,483,cs),
(166,486,o),
(165,494,o),
(165,505,cs),
(165,596,o),
(181,769,o),
(282,769,cs),
(299,769,o),
(310,763,o),
(315,751,cs),
(320,739,o),
(323,716,o),
(323,683,cs),
(323,478,l),
(173,478,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
125 120 108 60 2 40
CALL[ ]	/* CallFunction */";
};
width = 614;
},
{
anchors = (
{
name = bottom_1;
pos = (151,0);
},
{
name = bottom_2;
pos = (452,0);
},
{
name = caret_1;
pos = (301.5,0);
},
{
name = top_1;
pos = (151,972);
},
{
name = top_2;
pos = (452,972);
}
);
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(556,-11,o),
(596,80,o),
(596,117,cs),
(596,124,o),
(596,137,o),
(581,137,cs),
(566,137,o),
(566,123,o),
(559,102,cs),
(548,64,o),
(518,19,o),
(461,19,cs),
(383,19,o),
(384,98,o),
(384,152,cs),
(384,436,l),
(470,436,ls),
(499,436,o),
(529,437,o),
(559,440,cs),
(571,441,o),
(576,448,o),
(576,455,cs),
(576,464,o),
(567,468,o),
(549,468,cs),
(553,468,o),
(468,465,o),
(384,465,c),
(384,708,ls),
(384,746,o),
(376,825,o),
(282,825,cs),
(136,825,o),
(122,638,o),
(117,491,cs),
(117,478,o),
(116,463,o),
(105,463,cs),
(31,463,ls),
(19,463,o),
(11,463,o),
(6,462,cs),
(1,461,o),
(-1,457,o),
(-1,452,cs),
(-1,448,o),
(1,444,o),
(5,441,cs),
(9,437,o),
(17,435,o),
(28,435,cs),
(105,435,ls),
(116,435,o),
(118,428,o),
(118,409,cs),
(118,300,l),
(118,300,o),
(119,80,o),
(114,45,cs),
(111,29,o),
(96,26,o),
(50,24,cs),
(35,23,o),
(18,22,o),
(18,11,cs),
(18,6,o),
(21,3,o),
(28,2,cs),
(35,1,o),
(43,0,o),
(52,0,cs),
(141,0,l),
(251,0,ls),
(268,0,o),
(280,2,o),
(285,4,cs),
(290,6,o),
(293,9,o),
(293,14,cs),
(293,23,o),
(283,28,o),
(264,28,cs),
(155,28,l),
(155,424,ls),
(155,431,o),
(161,435,o),
(173,435,cs),
(202,435,o),
(268,433,o),
(343,433,c),
(343,165,ls),
(343,134,o),
(342,72,o),
(370,30,cs),
(388,3,o),
(416,-11,o),
(454,-11,cs)
);
},
{
closed = 1;
nodes = (
(160,463,o),
(158,465,o),
(157,469,cs),
(156,472,o),
(155,481,o),
(155,495,cs),
(155,544,o),
(158,617,o),
(175,685,cs),
(191,751,o),
(226,799,o),
(279,799,cs),
(344,799,o),
(343,727,o),
(343,683,cs),
(343,463,l),
(163,463,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
120 113 102 57 2 40
CALL[ ]	/* CallFunction */";
};
width = 603;
}
);
note = f_t;
},
{
glyphname = l_l;
kernLeft = l;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
anchors = (
{
name = bottom_1;
pos = (140,0);
},
{
name = bottom_2;
pos = (419,0);
},
{
name = caret_1;
pos = (279.5,0);
},
{
name = center_1;
pos = (140,218);
},
{
name = center_2;
pos = (419,218);
},
{
name = top_1;
pos = (140,972);
},
{
name = top_2;
pos = (419,972);
},
{
name = topright_1;
pos = (539,972);
},
{
name = topright_2;
pos = (539,972);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(301,-1,o),
(313,22,o),
(313,34,cs),
(313,55,o),
(303,75,o),
(256,75,cs),
(221,75,l),
(221,118,o),
(221,184,o),
(220,274,cs),
(219,363,o),
(219,481,o),
(219,626,cs),
(219,635,o),
(219,651,o),
(220,675,cs),
(220,699,o),
(220,728,o),
(220,761,cs),
(220,821,o),
(214,821,o),
(170,821,cs),
(30,821,o),
(6,808,o),
(6,779,cs),
(6,771,o),
(10,765,o),
(17,761,cs),
(24,757,o),
(36,755,o),
(53,755,cs),
(96,755,ls),
(115,755,o),
(129,746,o),
(129,723,cs),
(129,683,o),
(129,643,o),
(130,602,cs),
(130,553,o),
(130,490,o),
(130,413,cs),
(130,337,o),
(130,275,o),
(129,226,cs),
(128,177,o),
(126,138,o),
(125,103,cs),
(124,84,o),
(108,72,o),
(88,71,cs),
(51,69,ls),
(38,68,o),
(25,60,o),
(25,39,cs),
(25,18,o),
(41,0,o),
(77,0,cs),
(88,0,o),
(100,0,o),
(115,1,cs),
(130,2,o),
(146,2,o),
(164,2,cs),
(163,2,o),
(232,-1,o),
(268,-1,cs)
);
},
{
closed = 1;
nodes = (
(562,-77,o),
(574,-54,o),
(574,-42,cs),
(574,-21,o),
(564,-1,o),
(517,-1,cs),
(481,-1,l),
(481,96,o),
(478,275,o),
(478,537,cs),
(478,589,o),
(480,657,o),
(480,709,cs),
(480,738,o),
(463,744,o),
(412,744,cs),
(374,744,o),
(347,741,o),
(331,736,cs),
(315,731,o),
(307,722,o),
(307,710,cs),
(307,689,o),
(328,682,o),
(360,682,cs),
(370,682,ls),
(387,682,o),
(389,675,o),
(389,654,cs),
(389,616,o),
(389,573,o),
(390,525,cs),
(390,472,o),
(390,407,o),
(390,329,cs),
(390,255,o),
(390,194,o),
(389,146,cs),
(388,98,o),
(386,62,o),
(385,27,cs),
(384,7,o),
(368,-4,o),
(349,-5,cs),
(309,-7,ls),
(306,-7,o),
(302,-9,o),
(297,-12,cs),
(291,-16,o),
(288,-26,o),
(288,-41,cs),
(288,-56,o),
(302,-76,o),
(338,-76,cs),
(361,-76,o),
(394,-74,o),
(429,-74,cs),
(465,-74,o),
(503,-77,o),
(529,-77,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
112 72 56 16 2 40
CALL[ ]	/* CallFunction */";
};
width = 559;
},
{
anchors = (
{
name = bottom_1;
pos = (113,0);
},
{
name = bottom_2;
pos = (340,0);
},
{
name = caret_1;
pos = (226.5,0);
},
{
name = center_1;
pos = (113,218);
},
{
name = center_2;
pos = (340,218);
},
{
name = top_1;
pos = (113,972);
},
{
name = top_2;
pos = (340,972);
},
{
name = topright_1;
pos = (433,972);
},
{
name = topright_2;
pos = (433,972);
}
);
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(459,-66,o),
(469,-51,o),
(469,-40,cs),
(469,-32,o),
(466,-25,o),
(460,-18,cs),
(453,-11,o),
(440,-8,o),
(419,-8,cs),
(373,-8,l),
(373,37,o),
(373,105,o),
(372,197,cs),
(371,289,o),
(371,410,o),
(371,561,cs),
(371,563,o),
(372,616,o),
(372,720,cs),
(372,755,o),
(352,755,o),
(315,755,cs),
(282,755,o),
(175,754,o),
(175,726,cs),
(175,710,o),
(193,705,o),
(221,705,cs),
(283,705,ls),
(300,705,o),
(302,698,o),
(302,677,cs),
(302,637,o),
(302,594,o),
(303,548,cs),
(303,495,o),
(303,428,o),
(303,348,cs),
(303,268,o),
(303,202,o),
(302,149,cs),
(301,97,o),
(299,57,o),
(298,20,cs),
(297,1,o),
(281,-9,o),
(251,-11,cs),
(218,-13,ls),
(211,-13,o),
(197,-19,o),
(197,-39,cs),
(197,-45,o),
(200,-51,o),
(207,-56,cs),
(213,-62,o),
(224,-65,o),
(240,-65,cs),
(263,-65,o),
(296,-63,o),
(331,-63,cs),
(367,-63,o),
(405,-66,o),
(431,-66,cs)
);
},
{
closed = 1;
nodes = (
(254,-1,o),
(264,14,o),
(264,25,cs),
(264,33,o),
(261,40,o),
(255,47,cs),
(248,54,o),
(235,57,o),
(214,57,cs),
(168,57,l),
(168,102,o),
(168,170,o),
(167,262,cs),
(166,354,o),
(166,475,o),
(166,626,cs),
(166,628,o),
(167,681,o),
(167,785,cs),
(167,820,o),
(147,820,o),
(110,820,cs),
(77,820,o),
(-30,819,o),
(-30,791,cs),
(-30,775,o),
(-12,770,o),
(16,770,cs),
(78,770,ls),
(95,770,o),
(97,763,o),
(97,742,cs),
(97,702,o),
(97,659,o),
(98,613,cs),
(98,560,o),
(98,493,o),
(98,413,cs),
(98,333,o),
(98,267,o),
(97,214,cs),
(96,162,o),
(94,122,o),
(93,85,cs),
(92,66,o),
(76,56,o),
(46,54,cs),
(13,52,ls),
(6,52,o),
(-8,46,o),
(-8,26,cs),
(-8,20,o),
(-5,14,o),
(2,9,cs),
(8,3,o),
(19,0,o),
(35,0,cs),
(58,0,o),
(91,2,o),
(126,2,cs),
(162,2,o),
(200,-1,o),
(226,-1,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
115 74 56 15 2 41
CALL[ ]	/* CallFunction */";
};
width = 453;
},
{
anchors = (
{
name = bottom_1;
pos = (108,0);
},
{
name = bottom_2;
pos = (323,0);
},
{
name = caret_1;
pos = (215,0);
},
{
name = center_1;
pos = (108,218);
},
{
name = center_2;
pos = (323,218);
},
{
name = top_1;
pos = (108,972);
},
{
name = top_2;
pos = (323,972);
},
{
name = topright_1;
pos = (410,972);
},
{
name = topright_2;
pos = (410,972);
}
);
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(227,-1,o),
(234,0,o),
(238,2,cs),
(242,4,o),
(244,7,o),
(244,10,cs),
(244,14,o),
(242,18,o),
(237,22,cs),
(232,25,o),
(221,27,o),
(204,27,cs),
(143,27,l),
(143,74,o),
(143,146,o),
(142,243,cs),
(141,340,o),
(141,467,o),
(141,626,cs),
(141,628,o),
(142,681,o),
(142,785,cs),
(142,820,o),
(127,820,o),
(100,820,cs),
(47,820,o),
(-30,816,o),
(-30,799,cs),
(-30,796,o),
(-27,793,o),
(-20,792,cs),
(-14,791,o),
(-5,790,o),
(6,790,cs),
(83,790,ls),
(100,790,o),
(102,783,o),
(102,762,cs),
(102,719,o),
(102,673,o),
(103,624,cs),
(103,568,o),
(103,498,o),
(103,413,cs),
(103,327,o),
(103,254,o),
(102,196,cs),
(101,139,o),
(99,95,o),
(98,55,cs),
(97,37,o),
(76,27,o),
(36,25,cs),
(13,24,ls),
(-1,23,o),
(-8,19,o),
(-8,11,cs),
(-8,7,o),
(-6,4,o),
(-1,3,cs),
(3,1,o),
(12,0,o),
(25,0,cs),
(48,0,o),
(81,2,o),
(116,2,cs),
(152,2,o),
(190,-1,o),
(216,-1,cs)
);
},
{
closed = 1;
nodes = (
(431,-67,o),
(438,-66,o),
(442,-64,cs),
(446,-62,o),
(448,-59,o),
(448,-56,cs),
(448,-52,o),
(446,-48,o),
(441,-44,cs),
(436,-41,o),
(425,-39,o),
(408,-39,cs),
(347,-39,l),
(347,4,o),
(347,78,o),
(346,183,cs),
(345,288,o),
(345,420,o),
(345,581,cs),
(345,582,o),
(345,592,o),
(345,612,cs),
(345,632,o),
(345,668,o),
(346,719,cs),
(346,754,o),
(332,754,o),
(305,754,cs),
(260,754,o),
(200,751,o),
(200,733,cs),
(200,730,o),
(203,727,o),
(210,726,cs),
(216,725,o),
(225,724,o),
(236,724,cs),
(287,724,ls),
(304,724,o),
(306,717,o),
(306,696,cs),
(306,652,o),
(306,609,o),
(307,566,cs),
(307,514,o),
(307,445,o),
(307,360,cs),
(307,272,o),
(307,197,o),
(306,136,cs),
(305,76,o),
(303,29,o),
(302,-11,cs),
(301,-19,o),
(296,-26,o),
(287,-31,cs),
(277,-36,o),
(261,-40,o),
(240,-41,cs),
(217,-42,ls),
(203,-43,o),
(196,-47,o),
(196,-55,cs),
(196,-59,o),
(198,-62,o),
(203,-63,cs),
(207,-65,o),
(216,-66,o),
(229,-66,cs),
(252,-66,o),
(285,-64,o),
(320,-64,cs),
(356,-64,o),
(394,-67,o),
(420,-67,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
111 71 53 12 2 40
CALL[ ]	/* CallFunction */";
};
width = 430;
}
);
note = l_l;
},
{
glyphname = s_p;
kernLeft = s;
kernRight = c_p;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
anchors = (
{
name = bottom_1;
pos = (236,0);
},
{
name = bottom_2;
pos = (708,0);
},
{
name = caret_1;
pos = (472,0);
},
{
name = top_1;
pos = (236,436);
},
{
name = top_2;
pos = (708,436);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(657,-202,ls),
(678,-202,o),
(694,-192,o),
(694,-169,cs),
(694,-140,o),
(664,-126,o),
(627,-126,cs),
(562,-126,l),
(562,68,l),
(580,37,o),
(612,-11,o),
(716,-11,cs),
(781,-11,o),
(916,50,o),
(916,239,cs),
(916,334,o),
(887,471,o),
(727,471,cs),
(670,471,o),
(592,439,o),
(558,357,c),
(558,591,ls),
(558,660,o),
(498,692,o),
(417,692,cs),
(348,692,o),
(303,639,o),
(303,566,cs),
(303,527,o),
(321,448,o),
(332,409,c),
(311,433,o),
(268,465,o),
(212,465,cs),
(132,465,o),
(51,431,o),
(51,323,cs),
(51,202,o),
(153,181,o),
(243,162,cs),
(329,143,o),
(337,123,o),
(337,100,cs),
(337,53,o),
(282,43,o),
(258,43,cs),
(181,43,o),
(135,87,o),
(125,114,cs),
(122,123,o),
(117,145,o),
(116,154,cs),
(113,177,o),
(105,197,o),
(70,197,cs),
(37,197,o),
(33,181,o),
(33,158,cs),
(33,143,o),
(34,126,o),
(35,107,cs),
(36,88,o),
(36,72,o),
(36,59,cs),
(36,50,o),
(36,42,o),
(36,33,cs),
(35,24,o),
(35,15,o),
(35,8,cs),
(35,-19,o),
(54,-31,o),
(74,-31,cs),
(109,-31,o),
(118,-20,o),
(118,36,c),
(145,-18,o),
(203,-26,o),
(256,-26,cs),
(328,-26,o),
(423,-8,o),
(423,101,cs),
(423,198,o),
(347,214,o),
(226,244,cs),
(166,259,o),
(133,278,o),
(133,325,cs),
(133,364,o),
(160,385,o),
(221,385,cs),
(290,385,o),
(324,350,o),
(331,328,cs),
(334,321,o),
(339,306,o),
(340,298,c),
(340,288,o),
(354,255,o),
(381,255,cs),
(424,255,o),
(430,275,o),
(430,300,cs),
(430,319,o),
(412,398,o),
(399,457,cs),
(394,481,o),
(391,499,o),
(391,550,cs),
(391,605,o),
(409,622,o),
(431,622,cs),
(454,622,o),
(467,610,o),
(467,530,cs),
(467,414,o),
(469,345,o),
(471,287,cs),
(473,229,o),
(474,182,o),
(474,117,cs),
(474,13,o),
(471,-37,o),
(471,-86,cs),
(471,-101,o),
(470,-112,o),
(468,-118,cs),
(466,-124,o),
(461,-127,o),
(454,-127,cs),
(419,-127,o),
(397,-144,o),
(397,-171,cs),
(397,-199,o),
(417,-202,o),
(432,-202,cs)
);
},
{
closed = 1;
nodes = (
(589,67,o),
(561,137,o),
(561,223,cs),
(561,335,o),
(662,392,o),
(722,392,cs),
(811,392,o),
(821,296,o),
(821,243,cs),
(821,111,o),
(753,67,o),
(712,67,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
175 166 146 12 2 40
CALL[ ]	/* CallFunction */";
};
width = 944;
},
{
anchors = (
{
name = bottom_1;
pos = (230,0);
},
{
name = bottom_2;
pos = (689,0);
},
{
name = caret_1;
pos = (459,0);
},
{
name = top_1;
pos = (230,436);
},
{
name = top_2;
pos = (689,436);
}
);
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(628,-202,ls),
(639,-202,o),
(658,-198,o),
(658,-179,cs),
(658,-156,o),
(633,-144,o),
(598,-144,cs),
(533,-144,l),
(533,68,l),
(551,35,o),
(591,-11,o),
(681,-11,cs),
(749,-11,o),
(887,46,o),
(887,238,cs),
(887,337,o),
(853,471,o),
(703,471,cs),
(636,471,o),
(566,434,o),
(531,353,c),
(531,591,l),
(531,591,l),
(531,662,o),
(480,692,o),
(411,692,cs),
(342,692,o),
(297,639,o),
(297,566,cs),
(297,523,o),
(316,445,o),
(328,401,c),
(307,428,o),
(272,465,o),
(206,465,cs),
(126,465,o),
(48,427,o),
(48,328,cs),
(48,226,o),
(131,200,o),
(203,183,cs),
(282,163,o),
(331,148,o),
(331,103,cs),
(331,57,o),
(278,41,o),
(231,41,cs),
(169,41,o),
(123,72,o),
(107,108,cs),
(104,115,o),
(102,121,o),
(102,127,cs),
(101,132,o),
(100,140,o),
(99,149,cs),
(96,173,o),
(91,189,o),
(64,189,cs),
(39,189,o),
(37,175,o),
(37,154,cs),
(37,139,o),
(38,124,o),
(39,107,cs),
(40,90,o),
(41,75,o),
(41,62,cs),
(41,53,o),
(41,42,o),
(40,29,cs),
(39,16,o),
(39,7,o),
(39,4,cs),
(39,-15,o),
(56,-22,o),
(72,-22,cs),
(92,-22,o),
(102,-7,o),
(102,13,cs),
(102,17,o),
(102,21,o),
(102,26,cs),
(102,31,o),
(102,36,o),
(101,41,c),
(125,-5,o),
(186,-16,o),
(234,-16,cs),
(298,-16,o),
(399,3,o),
(399,107,cs),
(399,196,o),
(323,217,o),
(225,243,cs),
(167,258,o),
(114,275,o),
(114,330,cs),
(114,374,o),
(146,404,o),
(209,404,cs),
(272,404,o),
(302,375,o),
(318,344,cs),
(325,333,o),
(336,294,o),
(336,292,c),
(341,276,o),
(349,257,o),
(369,257,cs),
(400,257,o),
(405,274,o),
(405,293,cs),
(405,315,o),
(388,379,o),
(378,430,cs),
(369,481,o),
(366,519,o),
(366,550,cs),
(366,616,o),
(405,632,o),
(420,632,cs),
(434,632,o),
(461,623,o),
(461,553,cs),
(461,542,o),
(461,525,o),
(461,502,cs),
(461,479,o),
(461,453,o),
(462,423,cs),
(462,343,o),
(466,257,o),
(466,124,cs),
(466,54,o),
(463,-31,o),
(463,-86,cs),
(463,-136,o),
(466,-142,o),
(431,-145,cs),
(396,-149,o),
(375,-160,o),
(375,-180,cs),
(375,-201,o),
(395,-202,o),
(403,-202,cs)
);
},
{
closed = 1;
nodes = (
(563,49,o),
(532,129,o),
(532,219,cs),
(532,345,o),
(625,410,o),
(699,410,cs),
(798,410,o),
(813,305,o),
(813,240,cs),
(813,89,o),
(729,49,o),
(678,49,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
188 178 169 25 2 40
CALL[ ]	/* CallFunction */";
};
width = 918;
},
{
anchors = (
{
name = bottom_1;
pos = (220,0);
},
{
name = bottom_2;
pos = (661,0);
},
{
name = caret_1;
pos = (440.5,0);
},
{
name = top_1;
pos = (220,436);
},
{
name = top_2;
pos = (661,436);
}
);
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(587,-202,ls),
(598,-202,o),
(607,-197,o),
(607,-190,cs),
(607,-179,o),
(590,-174,o),
(557,-174,cs),
(492,-174,l),
(492,68,l),
(508,33,o),
(560,-11,o),
(631,-11,cs),
(711,-11,o),
(846,46,o),
(846,236,cs),
(846,335,o),
(808,471,o),
(669,471,cs),
(585,471,o),
(527,422,o),
(492,346,c),
(492,591,ls),
(492,662,o),
(454,692,o),
(402,692,cs),
(333,692,o),
(288,639,o),
(288,566,cs),
(288,514,o),
(311,438,o),
(322,387,c),
(309,413,o),
(280,465,o),
(197,465,cs),
(113,465,o),
(44,416,o),
(44,336,cs),
(44,260,o),
(105,230,o),
(146,218,cs),
(187,207,o),
(322,188,o),
(322,108,cs),
(322,57,o),
(273,30,o),
(205,30,cs),
(154,30,o),
(109,45,o),
(88,88,cs),
(84,96,o),
(81,104,o),
(80,113,cs),
(78,122,o),
(76,131,o),
(74,141,cs),
(71,154,o),
(69,163,o),
(67,168,cs),
(65,173,o),
(61,175,o),
(56,175,cs),
(45,175,o),
(43,167,o),
(43,148,cs),
(43,134,o),
(44,120,o),
(46,107,cs),
(47,93,o),
(48,80,o),
(48,67,cs),
(48,58,o),
(48,49,o),
(47,40,cs),
(46,31,o),
(45,23,o),
(45,16,cs),
(45,1,o),
(49,-7,o),
(57,-7,cs),
(63,-7,o),
(68,-3,o),
(71,6,cs),
(74,14,o),
(76,29,o),
(77,50,c),
(99,17,o),
(158,0,o),
(202,0,cs),
(253,0,o),
(365,22,o),
(365,117,cs),
(365,195,o),
(291,220,o),
(224,241,cs),
(160,260,o),
(87,268,o),
(87,339,cs),
(87,392,o),
(128,435,o),
(192,435,cs),
(232,435,o),
(272,421,o),
(300,370,cs),
(319,338,o),
(325,310,o),
(332,282,cs),
(335,271,o),
(340,261,o),
(352,261,cs),
(363,261,o),
(369,273,o),
(369,282,cs),
(369,304,o),
(327,461,o),
(327,550,cs),
(327,657,o),
(385,662,o),
(401,662,cs),
(426,662,o),
(452,647,o),
(452,592,cs),
(452,560,o),
(452,506,o),
(454,393,cs),
(455,291,o),
(455,211,o),
(455,135,cs),
(455,41,o),
(452,8,o),
(452,-86,cs),
(452,-161,o),
(448,-172,o),
(398,-175,cs),
(377,-176,o),
(363,-178,o),
(356,-180,cs),
(348,-182,o),
(344,-186,o),
(344,-191,cs),
(344,-202,o),
(355,-202,o),
(362,-202,cs)
);
},
{
closed = 1;
nodes = (
(526,19,o),
(491,112,o),
(491,212,cs),
(491,370,o),
(580,440,o),
(666,440,cs),
(778,440,o),
(802,317,o),
(802,235,cs),
(802,74,o),
(709,19,o),
(630,19,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
169 159 122 93 2 40
CALL[ ]	/* CallFunction */";
};
width = 881;
}
);
note = s_p;
},
{
glyphname = s_t;
kernLeft = s;
kernRight = c_t;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
anchors = (
{
name = caret_1;
pos = (366.5,0);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(111,-31,o),
(117,-11,o),
(118,36,c),
(146,-15,o),
(202,-26,o),
(256,-26,cs),
(328,-26,o),
(423,-8,o),
(423,101,cs),
(423,198,o),
(347,214,o),
(226,244,cs),
(166,259,o),
(133,278,o),
(133,325,cs),
(133,364,o),
(160,385,o),
(221,385,cs),
(294,385,o),
(325,350,o),
(331,328,cs),
(332,324,o),
(333,320,o),
(334,316,cs),
(335,312,o),
(336,308,o),
(337,305,cs),
(338,301,o),
(339,297,o),
(340,294,cs),
(341,281,o),
(358,255,o),
(381,255,cs),
(421,255,o),
(430,275,o),
(430,300,cs),
(430,325,o),
(404,408,o),
(398,460,cs),
(393,507,o),
(393,529,o),
(393,550,cs),
(393,604,o),
(421,614,o),
(433,614,cs),
(448,614,o),
(469,589,o),
(469,530,cs),
(469,165,ls),
(469,120,o),
(471,68,o),
(496,30,cs),
(514,3,o),
(542,-11,o),
(580,-11,cs),
(682,-11,o),
(722,80,o),
(722,117,cs),
(722,130,o),
(717,153,o),
(690,153,cs),
(651,153,o),
(642,128,o),
(634,102,cs),
(629,89,o),
(629,67,o),
(599,67,cs),
(572,67,o),
(561,122,o),
(561,152,cs),
(561,394,l),
(580,395,o),
(601,396,o),
(622,397,cs),
(643,397,o),
(664,399,o),
(685,402,cs),
(693,403,o),
(719,414,o),
(719,439,cs),
(719,467,o),
(692,478,o),
(676,478,cs),
(657,478,o),
(578,474,o),
(561,474,c),
(561,565,ls),
(561,652,o),
(510,692,o),
(417,692,cs),
(348,692,o),
(303,639,o),
(303,566,cs),
(303,527,o),
(321,448,o),
(332,409,c),
(311,433,o),
(268,465,o),
(212,465,cs),
(132,465,o),
(51,431,o),
(51,323,cs),
(51,201,o),
(154,181,o),
(243,162,cs),
(327,143,o),
(337,127,o),
(337,100,cs),
(337,63,o),
(290,48,o),
(249,48,cs),
(168,48,o),
(128,100,o),
(120,120,cs),
(119,123,o),
(116,143,o),
(116,154,cs),
(116,177,o),
(107,197,o),
(70,197,cs),
(35,197,o),
(33,181,o),
(33,158,cs),
(33,143,o),
(34,126,o),
(35,107,cs),
(36,88,o),
(36,72,o),
(36,59,cs),
(36,50,o),
(36,41,o),
(36,30,cs),
(35,19,o),
(35,12,o),
(35,11,cs),
(35,-24,o),
(57,-31,o),
(72,-31,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
112 1 3 8 34 1 2 3 84 1 12 13 63 1 0 7 4 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
112 1 11 8 34 1 2 3 84 1 12 13 63 1 0 7 4 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 2 3 6 3 2 6 104 0 13 6 12 6 13 12 104 0 9 0 1 8 9 1 91 11 1 3 3 8 83 10 1 8 8 23 67 0 6 6 4 83 5 1 4 4 21 67 0 12 12 0 83 14 1 0 0 24 67 0 7 7 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 2 3 6 3 2 6 104 0 13 6 12 6 13 12 104 0 9 0 1 8 9 1 91 10 1 8 11 1 3 2 8 3 91 0 6 6 4 83 5 1 4 4 21 67 0 12 12 0 83 14 1 0 0 24 67 0 7 7 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 2 3 6 3 2 6 104 0 13 6 12 6 13 12 104 0 9 0 1 10 9 1 91 0 10 8 3 10 79 0 8 11 1 3 2 8 3 91 0 6 6 4 83 5 1 4 4 21 67 0 12 12 0 83 14 1 0 0 24 67 0 7 7 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 2 3 6 3 2 6 104 0 13 6 12 6 13 12 104 0 9 0 1 10 9 1 91 0 10 0 11 3 10 11 91 0 8 0 3 2 8 3 91 0 6 6 4 83 5 1 4 4 21 67 0 12 12 0 83 14 1 0 0 24 67 0 7 7 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 2 3 6 3 2 6 104 0 13 6 12 6 13 12 104 0 9 0 1 10 9 1 91 0 10 0 11 3 10 11 91 0 8 0 3 2 8 3 91 0 6 13 4 6 79 0 7 5 1 4 7 4 87 0 12 12 0 83 14 1 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
0 2 3 6 3 2 6 104 0 13 6 12 6 13 12 104 0 9 0 1 10 9 1 91 0 10 0 11 3 10 11 91 0 8 0 3 2 8 3 91 0 7 0 4 5 7 4 91 0 6 0 5 6 5 87 0 12 12 0 83 14 1 0 0 24 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
1 0 155 153 145 143 138 136 130 124 121 119 110 108 90 88 79 77 67 65 59 57 43 41 30 28 14 12 0 161 1 161 15 15
CALL[ ]	/* CallFunction */";
};
width = 733;
},
{
anchors = (
{
name = caret_1;
pos = (362,0);
}
);
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(92,-22,o),
(102,-7,o),
(102,13,cs),
(102,17,o),
(102,21,o),
(102,26,cs),
(102,31,o),
(102,36,o),
(101,41,c),
(125,-5,o),
(186,-16,o),
(234,-16,cs),
(298,-16,o),
(399,3,o),
(399,107,cs),
(399,196,o),
(323,217,o),
(225,243,cs),
(167,258,o),
(114,275,o),
(114,330,cs),
(114,374,o),
(146,404,o),
(209,404,cs),
(272,404,o),
(302,375,o),
(318,344,cs),
(325,333,o),
(336,294,o),
(336,292,c),
(341,276,o),
(349,257,o),
(369,257,cs),
(400,257,o),
(405,274,o),
(405,293,cs),
(405,315,o),
(388,379,o),
(378,430,cs),
(369,481,o),
(366,519,o),
(366,550,cs),
(366,616,o),
(405,632,o),
(420,632,cs),
(434,632,o),
(461,623,o),
(461,553,cs),
(461,165,l),
(461,134,o),
(460,72,o),
(488,30,cs),
(506,3,o),
(534,-11,o),
(572,-11,cs),
(674,-11,o),
(714,80,o),
(714,117,cs),
(714,124,o),
(709,147,o),
(689,147,cs),
(657,147,o),
(655,124,o),
(647,102,cs),
(639,80,o),
(626,49,o),
(586,49,cs),
(540,49,o),
(532,107,o),
(532,152,cs),
(532,406,l),
(555,407,o),
(579,408,o),
(604,409,cs),
(629,410,o),
(653,411,o),
(677,414,c),
(689,417,o),
(704,424,o),
(704,443,cs),
(704,464,o),
(684,472,o),
(668,472,cs),
(650,472,o),
(557,468,o),
(532,468,c),
(532,575,ls),
(532,655,o),
(487,692,o),
(411,692,cs),
(342,692,o),
(297,639,o),
(297,566,cs),
(297,523,o),
(316,445,o),
(328,401,c),
(307,428,o),
(272,465,o),
(206,465,cs),
(126,465,o),
(48,427,o),
(48,328,cs),
(48,226,o),
(131,200,o),
(203,183,cs),
(282,163,o),
(331,148,o),
(331,103,cs),
(331,57,o),
(278,41,o),
(231,41,cs),
(169,41,o),
(123,72,o),
(107,108,cs),
(104,115,o),
(102,121,o),
(102,127,cs),
(101,132,o),
(100,140,o),
(99,149,cs),
(96,173,o),
(91,189,o),
(64,189,cs),
(39,189,o),
(37,175,o),
(37,154,cs),
(37,139,o),
(38,124,o),
(39,107,cs),
(40,90,o),
(41,75,o),
(41,62,cs),
(41,53,o),
(41,42,o),
(40,29,cs),
(39,16,o),
(39,7,o),
(39,4,cs),
(39,-15,o),
(56,-22,o),
(72,-22,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
111 26 2 1 2 1 66 57 1 6 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 1 2 5 2 1 5 104 0 12 5 6 5 12 6 104 0 8 0 0 7 8 0 91 10 1 2 2 7 83 9 1 7 7 23 67 0 5 5 3 83 13 4 2 3 3 21 67 11 1 6 6 3 83 13 4 2 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 1 2 5 2 1 5 104 0 12 5 6 5 12 6 104 0 8 0 0 7 8 0 91 9 1 7 10 1 2 1 7 2 91 0 5 5 3 83 13 4 2 3 3 21 67 11 1 6 6 3 83 13 4 2 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
0 1 2 5 2 1 5 104 0 12 5 11 5 12 11 104 0 8 0 0 7 8 0 91 9 1 7 10 1 2 1 7 2 91 0 5 5 3 83 13 4 2 3 3 21 67 0 11 11 3 83 13 4 2 3 3 21 67 0 6 6 3 83 13 4 2 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 1 2 5 2 1 5 104 0 12 5 11 5 12 11 104 0 8 0 0 7 8 0 91 9 1 7 10 1 2 1 7 2 91 0 11 11 3 83 13 1 3 3 21 67 0 6 6 3 83 13 1 3 3 21 67 0 5 5 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 70 values pushed */
0 1 2 5 2 1 5 104 0 12 5 11 5 12 11 104 0 8 0 0 9 8 0 91 0 9 7 2 9 79 0 7 10 1 2 1 7 2 91 0 11 11 13 83 0 13 13 24 67 0 6 6 3 83 0 3 3 21 67 0 5 5 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
164 162 154 152 144 142 137 135 129 123 120 118 107 105 89 87 78 76 64 62 53 51 43 46 36 14 18
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
anchors = (
{
name = caret_1;
pos = (355.5,0);
}
);
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(663,-11,o),
(703,80,o),
(703,117,cs),
(703,124,o),
(703,137,o),
(688,137,cs),
(673,137,o),
(673,123,o),
(666,102,cs),
(655,64,o),
(625,19,o),
(568,19,cs),
(490,19,o),
(491,98,o),
(491,152,cs),
(491,426,l),
(518,427,o),
(547,428,o),
(577,429,cs),
(607,430,o),
(637,431,o),
(666,434,cs),
(678,435,o),
(683,442,o),
(683,449,cs),
(683,458,o),
(674,462,o),
(657,462,cs),
(637,462,o),
(513,458,o),
(491,458,c),
(491,591,ls),
(491,662,o),
(454,692,o),
(402,692,cs),
(333,692,o),
(288,639,o),
(288,566,cs),
(288,514,o),
(311,438,o),
(322,387,c),
(309,413,o),
(280,465,o),
(197,465,cs),
(113,465,o),
(44,416,o),
(44,336,cs),
(44,260,o),
(105,230,o),
(146,218,cs),
(187,207,o),
(322,188,o),
(322,108,cs),
(322,57,o),
(273,30,o),
(205,30,cs),
(154,30,o),
(109,45,o),
(88,88,cs),
(84,96,o),
(81,104,o),
(80,113,cs),
(78,122,o),
(76,131,o),
(74,141,cs),
(71,154,o),
(69,163,o),
(67,168,cs),
(65,173,o),
(61,175,o),
(56,175,cs),
(45,175,o),
(43,167,o),
(43,148,cs),
(43,134,o),
(44,120,o),
(46,107,cs),
(47,93,o),
(48,80,o),
(48,67,cs),
(48,58,o),
(48,49,o),
(47,40,cs),
(46,31,o),
(45,23,o),
(45,16,cs),
(45,1,o),
(49,-7,o),
(57,-7,cs),
(63,-7,o),
(68,-3,o),
(71,6,cs),
(74,14,o),
(76,29,o),
(77,50,c),
(99,17,o),
(158,0,o),
(202,0,cs),
(253,0,o),
(365,22,o),
(365,117,cs),
(365,195,o),
(291,220,o),
(224,241,cs),
(160,260,o),
(87,268,o),
(87,339,cs),
(87,392,o),
(128,435,o),
(192,435,cs),
(232,435,o),
(272,419,o),
(299,370,cs),
(318,337,o),
(325,310,o),
(332,282,c),
(335,275,o),
(340,261,o),
(352,261,cs),
(363,261,o),
(369,273,o),
(369,282,cs),
(369,304,o),
(327,461,o),
(327,550,cs),
(327,657,o),
(385,662,o),
(401,662,cs),
(426,662,o),
(452,647,o),
(452,592,cs),
(452,165,ls),
(452,134,o),
(449,72,o),
(477,30,cs),
(495,3,o),
(523,-11,o),
(561,-11,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
94 1 1 10 48 1 6 12 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 79 values pushed */
0 1 10 5 10 1 5 104 0 12 5 6 5 12 6 104 0 8 0 0 7 8 0 91 0 2 2 7 83 9 1 7 7 23 67 0 10 10 7 83 9 1 7 7 23 67 0 5 5 4 83 13 1 4 4 24 67 0 6 6 3 83 0 3 3 13 67 0 11 11 4 83 13 1 4 4 24 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 79 values pushed */
0 1 10 5 10 1 5 104 0 12 5 6 5 12 6 104 0 8 0 0 7 8 0 91 0 2 2 7 83 9 1 7 7 23 67 0 10 10 7 83 9 1 7 7 23 67 0 5 5 4 83 13 1 4 4 16 67 0 6 6 3 83 0 3 3 13 67 0 11 11 4 83 13 1 4 4 16 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 79 values pushed */
0 1 10 5 10 1 5 104 0 12 5 6 5 12 6 104 0 8 0 0 7 8 0 91 0 2 2 7 83 9 1 7 7 23 67 0 10 10 7 83 9 1 7 7 23 67 0 5 5 4 83 13 1 4 4 24 67 0 6 6 3 83 0 3 3 13 67 0 11 11 4 83 13 1 4 4 24 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 1 10 5 10 1 5 104 0 12 5 6 5 12 6 104 0 8 0 0 7 8 0 91 0 2 10 7 2 79 9 1 7 0 10 1 7 10 91 0 5 5 4 83 13 1 4 4 24 67 0 6 6 3 83 0 3 3 13 67 0 11 11 4 83 13 1 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 1 10 5 10 1 5 104 0 12 5 6 5 12 6 104 0 8 0 0 7 8 0 91 0 7 0 2 10 7 2 91 0 9 0 10 1 9 10 91 0 5 5 4 83 13 1 4 4 24 67 0 6 6 3 83 0 3 3 13 67 0 11 11 4 83 13 1 4 4 24 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
142 140 134 132 126 124 119 117 112 106 103 101 90 88 72 70 63 61 52 50 44 42 39 43 34 14 18
CALL[ ]	/* CallFunction */";
};
width = 711;
}
);
note = s_t;
},
{
glyphname = t_t;
kernLeft = t;
kernRight = t_t;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
anchors = (
{
name = bottom_1;
pos = (139,0);
},
{
name = bottom_2;
pos = (416,0);
},
{
name = caret_1;
pos = (277.5,0);
},
{
name = center_1;
pos = (139,218);
},
{
name = center_2;
pos = (416,218);
},
{
name = top_1;
pos = (139,618);
},
{
name = top_2;
pos = (416,618);
},
{
name = topright_1;
pos = (535,972);
},
{
name = topright_2;
pos = (535,972);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(520,-73,o),
(560,18,o),
(560,55,cs),
(560,66,o),
(554,91,o),
(528,91,cs),
(485,91,o),
(480,61,o),
(472,40,cs),
(467,28,o),
(466,5,o),
(437,5,cs),
(410,5,o),
(399,60,o),
(399,90,cs),
(399,389,l),
(418,390,o),
(439,391,o),
(460,392,cs),
(481,392,o),
(502,394,o),
(523,397,c),
(529,397,o),
(557,407,o),
(557,435,cs),
(557,462,o),
(530,473,o),
(514,473,cs),
(495,473,o),
(416,469,o),
(399,469,c),
(399,575,ls),
(399,611,o),
(375,618,o),
(354,618,cs),
(334,618,o),
(316,613,o),
(312,590,cs),
(307,563,o),
(307,528,o),
(307,500,cs),
(307,477,o),
(284,470,o),
(245,467,cs),
(194,463,l),
(194,575,ls),
(194,612,o),
(170,618,o),
(149,618,cs),
(133,618,o),
(111,613,o),
(107,590,cs),
(102,563,o),
(102,528,o),
(102,500,cs),
(102,481,o),
(99,475,o),
(74,472,cs),
(23,468,ls),
(4,465,o),
(-18,457,o),
(-18,430,cs),
(-18,396,o),
(11,390,o),
(18,390,cs),
(30,390,o),
(44,390,o),
(59,391,cs),
(74,392,o),
(88,392,o),
(101,392,c),
(101,165,ls),
(101,133,o),
(104,66,o),
(127,30,cs),
(148,-5,o),
(177,-22,o),
(214,-22,cs),
(245,-22,o),
(278,-10,o),
(314,14,c),
(318,-1,o),
(325,-17,o),
(334,-32,cs),
(352,-59,o),
(380,-73,o),
(418,-73,cs)
);
},
{
closed = 1;
nodes = (
(217,62,o),
(194,88,o),
(194,152,cs),
(194,387,l),
(221,387,o),
(263,388,o),
(308,388,c),
(308,149,ls),
(308,98,o),
(275,62,o),
(244,62,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
102 97 34 0 2 40
CALL[ ]	/* CallFunction */";
};
width = 555;
},
{
anchors = (
{
name = bottom_1;
pos = (135,0);
},
{
name = bottom_2;
pos = (406,0);
},
{
name = caret_1;
pos = (270.5,0);
},
{
name = center_1;
pos = (135,218);
},
{
name = center_2;
pos = (406,218);
},
{
name = top_1;
pos = (135,618);
},
{
name = top_2;
pos = (406,618);
},
{
name = topright_1;
pos = (521,972);
},
{
name = topright_2;
pos = (521,972);
}
);
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(484,-73,o),
(524,18,o),
(524,55,cs),
(524,62,o),
(519,85,o),
(499,85,cs),
(467,85,o),
(465,62,o),
(457,40,cs),
(449,18,o),
(436,-13,o),
(396,-13,cs),
(350,-13,o),
(342,45,o),
(342,90,cs),
(342,406,l),
(365,407,o),
(389,408,o),
(414,409,cs),
(439,410,o),
(463,411,o),
(487,414,c),
(499,417,o),
(514,424,o),
(514,443,cs),
(514,464,o),
(494,472,o),
(478,472,cs),
(460,472,o),
(367,468,o),
(342,468,c),
(342,575,ls),
(342,615,o),
(326,618,o),
(309,618,cs),
(306,618,o),
(300,617,o),
(293,614,cs),
(286,611,o),
(280,603,o),
(277,590,cs),
(270,563,o),
(271,528,o),
(271,500,cs),
(271,477,o),
(266,467,o),
(243,466,cs),
(167,461,l),
(167,575,ls),
(167,615,o),
(151,618,o),
(134,618,cs),
(131,618,o),
(125,617,o),
(118,614,cs),
(111,611,o),
(105,603,o),
(102,590,cs),
(95,563,o),
(96,528,o),
(96,500,cs),
(96,477,o),
(95,469,o),
(68,466,cs),
(17,461,ls),
(-2,458,o),
(-17,451,o),
(-17,432,cs),
(-17,408,o),
(4,402,o),
(12,402,cs),
(24,402,o),
(38,402,o),
(54,403,cs),
(69,404,o),
(83,404,o),
(96,404,c),
(96,165,l),
(96,128,o),
(97,68,o),
(122,30,cs),
(140,3,o),
(168,-11,o),
(206,-11,cs),
(235,-11,o),
(258,-1,o),
(278,15,c),
(282,-2,o),
(289,-17,o),
(298,-32,cs),
(316,-59,o),
(344,-73,o),
(382,-73,cs)
);
},
{
closed = 1;
nodes = (
(173,49,o),
(167,106,o),
(167,152,cs),
(167,402,l),
(200,402,o),
(241,404,o),
(272,404,c),
(272,103,l),
(265,72,o),
(247,49,o),
(220,49,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
102 92 76 18 2 40
CALL[ ]	/* CallFunction */";
};
width = 541;
},
{
anchors = (
{
name = bottom_1;
pos = (133,0);
},
{
name = bottom_2;
pos = (399,0);
},
{
name = caret_1;
pos = (266,0);
},
{
name = center_1;
pos = (133,218);
},
{
name = center_2;
pos = (399,218);
},
{
name = top_1;
pos = (133,618);
},
{
name = top_2;
pos = (399,618);
},
{
name = topright_1;
pos = (512,972);
},
{
name = topright_2;
pos = (512,972);
}
);
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(476,-73,o),
(516,18,o),
(516,55,cs),
(516,62,o),
(516,75,o),
(501,75,cs),
(486,75,o),
(486,61,o),
(479,40,cs),
(468,2,o),
(438,-43,o),
(381,-43,cs),
(303,-43,o),
(304,36,o),
(304,90,cs),
(304,434,l),
(332,435,o),
(361,436,o),
(391,437,cs),
(420,438,o),
(450,439,o),
(479,442,cs),
(491,443,o),
(496,450,o),
(496,457,cs),
(496,466,o),
(487,470,o),
(470,470,cs),
(450,470,o),
(326,466,o),
(304,466,c),
(304,575,ls),
(304,595,o),
(303,607,o),
(300,612,cs),
(297,616,o),
(293,618,o),
(288,618,cs),
(285,618,o),
(282,617,o),
(279,614,cs),
(276,611,o),
(273,603,o),
(270,590,cs),
(263,563,o),
(263,536,o),
(263,508,cs),
(263,479,o),
(263,463,o),
(238,462,cs),
(184,460,ls),
(181,460,o),
(178,459,o),
(174,458,c),
(129,458,l),
(129,575,ls),
(129,595,o),
(128,607,o),
(125,612,cs),
(122,616,o),
(118,618,o),
(113,618,cs),
(110,618,o),
(107,617,o),
(104,614,cs),
(101,611,o),
(98,603,o),
(95,590,cs),
(88,563,o),
(88,528,o),
(88,500,cs),
(88,471,o),
(87,459,o),
(60,456,cs),
(9,450,ls),
(0,449,o),
(-7,447,o),
(-10,445,cs),
(-13,442,o),
(-15,439,o),
(-15,436,cs),
(-15,425,o),
(-4,422,o),
(4,422,cs),
(16,422,o),
(30,422,o),
(46,423,cs),
(62,424,o),
(76,424,o),
(89,424,c),
(89,165,ls),
(89,134,o),
(87,72,o),
(115,30,cs),
(133,3,o),
(161,-11,o),
(199,-11,cs),
(232,-11,o),
(254,0,o),
(270,16,c),
(274,-1,o),
(279,-17,o),
(290,-32,cs),
(308,-59,o),
(336,-73,o),
(374,-73,cs)
);
},
{
closed = 1;
nodes = (
(128,19,o),
(129,98,o),
(129,152,cs),
(129,426,l),
(150,427,o),
(172,428,o),
(195,429,cs),
(218,429,o),
(241,430,o),
(264,431,c),
(264,90,ls),
(264,55,o),
(249,19,o),
(206,19,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
99 91 74 18 2 40
CALL[ ]	/* CallFunction */";
};
width = 532;
}
);
note = t_t;
},
{
glyphname = t_z;
kernLeft = t;
kernRight = t_z;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
anchors = (
{
name = bottom_1;
pos = (178,0);
},
{
name = bottom_2;
pos = (533,0);
},
{
name = caret_1;
pos = (355.5,0);
},
{
name = center_1;
pos = (178,218);
},
{
name = center_2;
pos = (533,218);
},
{
name = top_1;
pos = (178,626);
},
{
name = top_2;
pos = (533,626);
},
{
name = topright_1;
pos = (691,972);
},
{
name = topright_2;
pos = (691,972);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(225,-11,o),
(239,4,o),
(239,20,cs),
(239,43,o),
(226,51,o),
(215,51,cs),
(189,51,o),
(189,110,o),
(189,152,cs),
(189,359,l),
(496,359,ls),
(503,359,o),
(508,358,o),
(511,356,cs),
(514,354,o),
(515,352,o),
(515,351,cs),
(515,345,o),
(460,275,o),
(392,193,cs),
(349,141,o),
(268,38,o),
(268,17,cs),
(268,8,o),
(272,3,o),
(281,1,cs),
(289,-1,o),
(303,-2,o),
(323,-2,cs),
(323,-2,o),
(412,1,o),
(481,1,cs),
(506,1,o),
(534,0,o),
(556,0,cs),
(581,0,o),
(615,-1,o),
(657,-1,cs),
(666,-1,o),
(671,5,o),
(671,18,cs),
(671,35,o),
(672,70,o),
(673,85,cs),
(679,181,ls),
(679,194,o),
(674,212,o),
(645,212,cs),
(605,212,o),
(601,186,o),
(597,151,cs),
(590,96,ls),
(589,83,o),
(586,77,o),
(581,77,cs),
(431,77,ls),
(420,77,o),
(414,79,o),
(414,84,cs),
(414,95,o),
(458,148,o),
(544,250,cs),
(618,338,o),
(673,405,o),
(673,424,cs),
(673,429,o),
(671,433,o),
(668,436,cs),
(665,439,o),
(656,440,o),
(642,440,cs),
(528,440,o),
(478,436,o),
(370,436,cs),
(273,436,o),
(245,435,o),
(189,435,c),
(189,575,ls),
(189,615,o),
(174,626,o),
(142,626,cs),
(123,626,o),
(111,617,o),
(104,590,cs),
(97,563,o),
(97,528,o),
(97,500,cs),
(97,472,o),
(96,436,o),
(69,433,cs),
(18,427,ls),
(-7,424,o),
(-15,405,o),
(-15,389,cs),
(-15,366,o),
(1,354,o),
(13,354,cs),
(25,354,o),
(39,354,o),
(54,355,cs),
(69,356,o),
(83,356,o),
(96,356,c),
(96,165,ls),
(96,134,o),
(96,72,o),
(124,30,cs),
(142,3,o),
(170,-11,o),
(208,-11,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
28 0 1 40
CALL[ ]	/* CallFunction */";
};
width = 711;
},
{
anchors = (
{
name = bottom_1;
pos = (173,0);
},
{
name = bottom_2;
pos = (518,0);
},
{
name = caret_1;
pos = (345,0);
},
{
name = center_1;
pos = (173,218);
},
{
name = center_2;
pos = (518,218);
},
{
name = top_1;
pos = (173,623);
},
{
name = top_2;
pos = (518,623);
},
{
name = topright_1;
pos = (670,972);
},
{
name = topright_2;
pos = (670,972);
}
);
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(222,-11,o),
(233,1,o),
(233,14,cs),
(233,31,o),
(223,39,o),
(212,39,cs),
(164,39,o),
(165,105,o),
(165,152,cs),
(165,373,l),
(213,374,o),
(261,375,o),
(308,376,cs),
(355,377,o),
(402,378,o),
(450,378,cs),
(518,378,ls),
(523,378,o),
(527,377,o),
(530,375,cs),
(532,373,o),
(533,371,o),
(533,370,cs),
(533,365,o),
(514,345,o),
(509,340,cs),
(491,319,o),
(418,234,o),
(363,163,cs),
(304,88,o),
(264,30,o),
(264,13,cs),
(264,-2,o),
(275,-2,o),
(299,-2,cs),
(299,-2,o),
(388,1,o),
(457,1,cs),
(482,1,o),
(510,0,o),
(532,0,cs),
(557,0,o),
(591,-1,o),
(633,-1,cs),
(642,-1,o),
(647,5,o),
(647,18,cs),
(647,35,o),
(648,70,o),
(649,85,cs),
(655,181,ls),
(655,192,o),
(653,206,o),
(630,206,cs),
(601,206,o),
(597,186,o),
(594,151,cs),
(587,78,ls),
(586,65,o),
(583,59,o),
(578,59,cs),
(389,59,ls),
(378,59,o),
(372,61,o),
(372,66,cs),
(372,80,o),
(430,145,o),
(511,240,cs),
(590,334,o),
(649,404,o),
(649,423,cs),
(649,428,o),
(647,432,o),
(642,435,cs),
(637,438,o),
(629,440,o),
(618,440,cs),
(597,440,o),
(573,440,o),
(546,439,cs),
(519,438,o),
(495,438,o),
(474,438,cs),
(452,438,l),
(452,438,l),
(435,438,o),
(418,438,o),
(403,438,cs),
(388,437,o),
(376,437,o),
(367,437,cs),
(319,437,o),
(281,436,o),
(252,436,cs),
(229,436,o),
(197,435,o),
(165,435,c),
(165,575,ls),
(165,615,o),
(154,623,o),
(131,623,cs),
(118,623,o),
(108,617,o),
(101,590,cs),
(94,563,o),
(94,528,o),
(94,500,cs),
(94,472,o),
(93,436,o),
(66,433,cs),
(15,427,ls),
(-8,424,o),
(-14,410,o),
(-14,398,cs),
(-14,379,o),
(-1,371,o),
(10,371,cs),
(22,371,o),
(36,371,o),
(51,372,cs),
(66,373,o),
(80,373,o),
(93,373,c),
(93,165,ls),
(93,134,o),
(93,72,o),
(121,30,cs),
(139,3,o),
(167,-11,o),
(205,-11,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
103 74 1 40
CALL[ ]	/* CallFunction */";
};
width = 690;
},
{
anchors = (
{
name = bottom_1;
pos = (165,0);
},
{
name = bottom_2;
pos = (495,0);
},
{
name = caret_1;
pos = (330,0);
},
{
name = center_1;
pos = (165,218);
},
{
name = center_2;
pos = (495,218);
},
{
name = top_1;
pos = (165,618);
},
{
name = top_2;
pos = (495,618);
},
{
name = topright_1;
pos = (640,972);
},
{
name = topright_2;
pos = (640,972);
}
);
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(218,-11,o),
(224,-4,o),
(224,4,cs),
(224,11,o),
(219,19,o),
(208,19,cs),
(130,19,o),
(131,98,o),
(131,152,cs),
(131,403,l),
(550,409,ls),
(556,409,o),
(559,406,o),
(559,401,c),
(559,401,o),
(507,344,o),
(409,225,cs),
(335,136,o),
(258,33,o),
(258,6,cs),
(258,1,o),
(260,-2,o),
(265,-2,cs),
(265,-2,o),
(354,1,o),
(423,1,cs),
(448,1,o),
(476,0,o),
(498,0,cs),
(523,0,o),
(557,-1,o),
(599,-1,cs),
(608,-1,o),
(613,5,o),
(613,18,cs),
(613,35,o),
(614,70,o),
(615,85,cs),
(621,181,ls),
(621,191,o),
(617,196,o),
(608,196,cs),
(602,196,o),
(598,193,o),
(596,187,cs),
(593,180,o),
(591,168,o),
(590,151,cs),
(583,48,ls),
(582,35,o),
(579,29,o),
(574,29,cs),
(329,29,ls),
(318,29,o),
(312,31,o),
(312,36,cs),
(312,48,o),
(378,126,o),
(464,224,cs),
(552,325,o),
(615,404,o),
(615,422,cs),
(615,427,o),
(613,431,o),
(608,434,cs),
(603,437,o),
(595,439,o),
(584,439,cs),
(519,439,o),
(428,437,o),
(363,437,cs),
(307,437,o),
(263,436,o),
(231,436,cs),
(204,436,o),
(168,435,o),
(131,435,c),
(131,575,ls),
(131,595,o),
(130,607,o),
(127,612,cs),
(124,616,o),
(120,618,o),
(115,618,cs),
(112,618,o),
(109,617,o),
(106,614,cs),
(103,611,o),
(100,603,o),
(97,590,cs),
(90,563,o),
(90,528,o),
(90,500,cs),
(90,472,o),
(89,436,o),
(62,433,cs),
(11,427,ls),
(2,426,o),
(-5,424,o),
(-8,422,cs),
(-11,419,o),
(-13,416,o),
(-13,413,cs),
(-13,402,o),
(-2,399,o),
(6,399,cs),
(18,399,o),
(32,399,o),
(47,400,cs),
(62,401,o),
(76,401,o),
(89,401,c),
(89,165,ls),
(89,134,o),
(89,72,o),
(117,30,cs),
(135,3,o),
(163,-11,o),
(201,-11,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
40 11 1 40
CALL[ ]	/* CallFunction */";
};
width = 660;
}
);
note = t_z;
},
{
glyphname = ordfeminine;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(118,648,o),
(138,655,o),
(155,670,c),
(160,654,o),
(179,648,o),
(195,648,cs),
(223,648,o),
(248,659,o),
(248,679,cs),
(248,684,o),
(248,699,o),
(229,699,cs),
(217,699,o),
(212,689,o),
(211,686,cs),
(209,681,o),
(207,679,o),
(206,679,cs),
(205,679,o),
(204,680,o),
(203,683,cs),
(202,685,o),
(202,691,o),
(202,702,cs),
(202,713,o),
(202,724,o),
(203,736,cs),
(203,748,o),
(203,756,o),
(203,759,cs),
(203,811,o),
(168,838,o),
(117,838,cs),
(74,838,o),
(44,818,o),
(44,787,cs),
(44,764,o),
(57,756,o),
(81,756,cs),
(94,756,o),
(110,758,o),
(110,773,cs),
(110,776,o),
(109,779,o),
(107,780,cs),
(104,781,o),
(102,783,o),
(100,784,cs),
(97,785,o),
(92,787,o),
(92,792,cs),
(92,797,o),
(107,797,o),
(111,797,cs),
(146,797,o),
(155,776,o),
(155,761,cs),
(155,736,l),
(155,736,l),
(138,747,o),
(119,750,o),
(103,750,cs),
(58,750,o),
(32,727,o),
(32,698,cs),
(32,670,o),
(56,648,o),
(95,648,cs)
);
},
{
closed = 1;
nodes = (
(92,684,o),
(82,689,o),
(82,699,cs),
(82,710,o),
(95,715,o),
(111,715,cs),
(127,715,o),
(145,710,o),
(145,699,cs),
(145,688,o),
(131,684,o),
(112,684,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
9 1 1 0 55 1 9 7 32 1 3 4 44 1 5 3 4 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
9 1 1 0 55 1 9 7 32 1 8 4 44 1 5 3 4 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 7 0 1 96 0 7 9 3 7 94 0 9 4 0 9 4 102 0 4 3 0 4 3 102 8 1 3 6 1 5 3 5 88 0 0 0 2 83 0 2 2 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 1 0 7 0 1 96 0 7 9 0 7 9 102 0 9 4 0 9 4 102 0 4 3 0 4 3 102 8 1 3 6 1 5 3 5 88 0 0 0 2 83 0 2 2 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 7 0 1 7 104 0 7 9 0 7 9 102 0 9 4 0 9 4 102 0 4 3 0 4 3 102 8 1 3 6 1 5 3 5 88 0 0 0 2 83 0 2 2 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 1 0 7 0 1 7 104 0 7 9 0 7 9 102 0 9 4 0 9 4 102 0 4 8 0 4 8 102 0 2 0 0 1 2 0 91 0 8 3 5 8 79 0 3 5 5 3 79 0 3 3 5 83 6 1 5 3 5 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
65 63 36 36 35 36 35 39 36 41 50 10 24
CALL[ ]	/* CallFunction */";
};
width = 274;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(120,648,o),
(141,656,o),
(158,672,c),
(163,655,o),
(179,648,o),
(198,648,cs),
(222,648,o),
(242,659,o),
(242,680,cs),
(242,685,o),
(241,697,o),
(228,697,cs),
(217,697,o),
(214,689,o),
(213,686,cs),
(212,683,o),
(211,680,o),
(211,678,cs),
(210,676,o),
(208,675,o),
(205,675,cs),
(201,675,o),
(199,677,o),
(198,682,cs),
(197,686,o),
(196,693,o),
(196,703,cs),
(196,712,o),
(196,723,o),
(197,735,cs),
(197,747,o),
(197,755,o),
(197,760,cs),
(197,811,o),
(164,838,o),
(117,838,cs),
(76,838,o),
(47,818,o),
(47,785,cs),
(47,766,o),
(57,756,o),
(78,756,cs),
(91,756,o),
(104,760,o),
(104,772,cs),
(104,779,o),
(98,782,o),
(94,783,cs),
(91,784,o),
(86,785,o),
(86,792,cs),
(86,801,o),
(100,804,o),
(112,804,cs),
(147,804,o),
(158,782,o),
(158,761,cs),
(158,734,l),
(158,734,l),
(141,745,o),
(123,749,o),
(104,749,cs),
(61,749,o),
(35,727,o),
(35,698,cs),
(35,670,o),
(58,648,o),
(97,648,cs)
);
},
{
closed = 1;
nodes = (
(87,679,o),
(76,686,o),
(76,699,cs),
(76,715,o),
(96,720,o),
(111,720,cs),
(128,720,o),
(148,715,o),
(148,700,cs),
(148,688,o),
(133,679,o),
(109,679,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
9 1 1 0 55 1 9 7 32 1 3 4 44 1 5 3 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
16
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 1 0 7 0 1 7 104 0 7 9 3 7 94 0 9 4 0 9 4 102 0 4 3 0 4 3 102 8 1 3 6 1 5 3 5 88 0 0 0 2 83 0 2 2 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 7 0 1 7 104 0 7 9 0 7 9 102 0 9 4 0 9 4 102 0 4 3 0 4 3 102 8 1 3 6 1 5 3 5 88 0 0 0 2 83 0 2 2 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 1 0 7 0 1 7 104 0 7 9 0 7 9 102 0 9 4 0 9 4 102 0 4 3 0 4 3 102 0 2 0 0 1 2 0 91 8 1 3 5 5 3 79 8 1 3 3 5 84 6 1 5 3 5 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
65 63 36 36 35 36 36 39 35 42 34 10 24
CALL[ ]	/* CallFunction */";
};
width = 271;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(125,648,o),
(146,659,o),
(162,675,c),
(167,657,o),
(180,648,o),
(202,648,cs),
(221,648,o),
(233,658,o),
(233,681,cs),
(233,688,o),
(233,694,o),
(226,694,cs),
(223,694,o),
(221,693,o),
(220,691,cs),
(219,689,o),
(218,687,o),
(217,686,cs),
(216,683,o),
(215,679,o),
(214,675,cs),
(213,670,o),
(210,668,o),
(204,668,cs),
(193,668,o),
(187,684,o),
(187,704,cs),
(187,713,o),
(187,723,o),
(188,735,cs),
(188,747,o),
(188,756,o),
(188,762,cs),
(188,811,o),
(158,838,o),
(117,838,cs),
(78,838,o),
(51,820,o),
(51,781,cs),
(51,766,o),
(59,756,o),
(74,756,cs),
(88,756,o),
(95,761,o),
(95,770,cs),
(95,778,o),
(89,782,o),
(85,782,c),
(80,783,o),
(77,787,o),
(77,792,cs),
(77,808,o),
(89,816,o),
(113,816,cs),
(148,816,o),
(162,792,o),
(162,761,cs),
(162,730,l),
(146,742,o),
(127,748,o),
(106,748,cs),
(66,748,o),
(39,727,o),
(39,698,cs),
(39,670,o),
(63,648,o),
(100,648,cs)
);
},
{
closed = 1;
nodes = (
(78,671,o),
(67,684,o),
(67,699,cs),
(67,715,o),
(82,728,o),
(111,728,cs),
(142,728,o),
(152,716,o),
(152,701,cs),
(152,686,o),
(137,671,o),
(105,671,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
52 1 10 8 41 30 2 4 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 2 3 1 96 0 2 8 0 2 94 0 5 10 4 10 5 4 104 0 8 0 10 5 8 10 91 9 1 4 7 1 6 4 6 87 0 0 0 3 83 0 3 3 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 2 3 1 96 0 2 8 0 2 8 102 0 5 10 4 10 5 4 104 0 8 0 10 5 8 10 91 9 1 4 7 1 6 4 6 87 0 0 0 3 83 0 3 3 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 2 0 1 2 104 0 2 8 0 2 8 102 0 5 10 4 10 5 4 104 0 8 0 10 5 8 10 91 9 1 4 7 1 6 4 6 87 0 0 0 3 83 0 3 3 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 1 0 2 0 1 2 104 0 2 8 0 2 8 102 0 5 10 4 10 5 4 104 0 3 0 0 1 3 0 91 0 8 0 10 5 8 10 91 9 1 4 6 6 4 79 9 1 4 4 6 83 7 1 6 4 6 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
63 61 57 55 36 35 36 36 39 36 35 19 34 11 24
CALL[ ]	/* CallFunction */";
};
width = 267;
}
);
note = ordfeminine;
unicode = 170;
},
{
glyphname = ordmasculine;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(193,645,o),
(240,677,o),
(240,744,cs),
(240,795,o),
(200,838,o),
(132,838,cs),
(60,838,o),
(30,794,o),
(30,741,cs),
(30,685,o),
(66,645,o),
(126,645,cs)
);
},
{
closed = 1;
nodes = (
(109,702,o),
(97,715,o),
(97,742,cs),
(97,769,o),
(117,781,o),
(134,781,cs),
(157,781,o),
(174,767,o),
(174,743,cs),
(174,716,o),
(161,702,o),
(134,702,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 3 0 0 3 0 87 4 1 2 2 1 83 0 1 1 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 4 1 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
13 12 18 16 12 21 13 21 36 34 5 17
CALL[ ]	/* CallFunction */";
};
width = 270;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(181,645,o),
(229,677,o),
(229,744,cs),
(229,795,o),
(194,838,o),
(131,838,cs),
(66,838,o),
(33,796,o),
(33,741,cs),
(33,685,o),
(70,645,o),
(125,645,cs)
);
},
{
closed = 1;
nodes = (
(108,690,o),
(86,706,o),
(86,742,cs),
(86,777,o),
(109,793,o),
(133,793,cs),
(158,793,o),
(177,774,o),
(177,743,cs),
(177,704,o),
(159,690,o),
(132,690,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 3 0 0 3 0 87 4 1 2 2 1 83 0 1 1 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 4 1 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
13 12 19 17 12 23 13 23 36 34 5 17
CALL[ ]	/* CallFunction */";
};
width = 262;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(164,645,o),
(213,676,o),
(213,744,cs),
(213,795,o),
(185,838,o),
(129,838,cs),
(74,838,o),
(37,797,o),
(37,741,cs),
(37,685,o),
(76,645,o),
(123,645,cs)
);
},
{
closed = 1;
nodes = (
(97,670,o),
(70,691,o),
(70,742,cs),
(70,789,o),
(94,813,o),
(127,813,cs),
(162,813,o),
(181,786,o),
(181,743,cs),
(181,691,o),
(151,670,o),
(124,670,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 3 0 0 3 0 87 4 1 2 2 1 83 0 1 1 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 4 1 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
15 14 21 19 14 25 15 25 36 36 5 17
CALL[ ]	/* CallFunction */";
};
width = 250;
}
);
note = ordmasculine;
unicode = 186;
},
{
glyphname = mu;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(190,-217,o),
(203,-194,o),
(203,-174,cs),
(203,-98,o),
(199,-87,o),
(199,-1,c),
(208,-10,o),
(242,-20,o),
(277,-20,cs),
(370,-20,o),
(416,37,o),
(435,81,c),
(436,42,o),
(437,15,o),
(440,0,cs),
(443,-15,o),
(448,-22,o),
(457,-22,cs),
(497,-22,o),
(608,-20,o),
(608,15,cs),
(608,39,o),
(584,42,o),
(572,42,cs),
(569,42,o),
(566,42,o),
(561,42,cs),
(556,41,o),
(550,41,o),
(544,41,cs),
(529,41,o),
(527,43,o),
(527,62,cs),
(527,64,o),
(527,72,o),
(527,86,cs),
(526,100,o),
(526,123,o),
(526,156,cs),
(526,266,o),
(529,346,o),
(529,383,cs),
(529,431,o),
(511,432,o),
(435,432,cs),
(360,432,o),
(293,428,o),
(293,395,cs),
(293,374,o),
(323,368,o),
(344,368,cs),
(410,368,ls),
(435,368,o),
(437,352,o),
(437,327,cs),
(434,172,l),
(434,172,l),
(434,108,o),
(365,58,o),
(300,58,cs),
(242,58,o),
(201,124,o),
(201,206,cs),
(201,267,o),
(202,316,o),
(203,351,cs),
(204,386,o),
(205,412,o),
(205,427,cs),
(205,468,o),
(199,472,o),
(171,472,cs),
(92,472,o),
(-23,468,o),
(-23,431,cs),
(-23,416,o),
(-1,408,o),
(11,408,cs),
(78,408,ls),
(109,408,o),
(110,401,o),
(110,370,cs),
(110,322,o),
(111,277,o),
(112,234,cs),
(113,191,o),
(113,152,o),
(113,115,cs),
(113,-1,o),
(112,-93,o),
(109,-177,cs),
(109,-194,o),
(118,-217,o),
(155,-217,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
42 1 8 0 50 1 3 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 8 3 8 2 3 104 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 0 8 8 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 2 8 3 8 2 3 104 0 5 3 5 107 0 7 0 6 0 7 6 91 0 1 0 0 8 1 0 91 0 8 8 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
41 53 60 41 38 53 93 69 50 9 24
CALL[ ]	/* CallFunction */";
};
width = 597;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(170,-211,o),
(177,-194,o),
(177,-174,cs),
(177,-142,o),
(177,-112,o),
(176,-83,cs),
(175,-54,o),
(174,-22,o),
(173,15,c),
(189,-4,o),
(227,-20,o),
(271,-20,cs),
(366,-20,o),
(412,39,o),
(430,81,c),
(431,42,o),
(432,15,o),
(435,0,cs),
(438,-15,o),
(443,-22,o),
(450,-22,cs),
(493,-22,o),
(596,-22,o),
(596,9,cs),
(596,28,o),
(571,30,o),
(559,30,cs),
(551,30,o),
(545,30,o),
(540,30,cs),
(535,29,o),
(531,29,o),
(529,29,cs),
(506,29,o),
(501,29,o),
(501,50,cs),
(501,53,o),
(501,62,o),
(501,78,cs),
(500,93,o),
(500,119,o),
(500,156,cs),
(500,266,o),
(503,346,o),
(503,383,cs),
(503,430,o),
(488,432,o),
(430,432,cs),
(376,432,o),
(295,429,o),
(295,401,cs),
(295,385,o),
(318,380,o),
(339,380,cs),
(405,380,ls),
(432,380,o),
(432,366,o),
(432,339,cs),
(429,172,l),
(429,172,l),
(429,97,o),
(357,40,o),
(283,40,cs),
(205,40,o),
(175,122,o),
(175,206,cs),
(175,267,o),
(176,316,o),
(177,351,cs),
(178,386,o),
(179,412,o),
(179,427,cs),
(179,468,o),
(173,472,o),
(145,472,cs),
(113,472,o),
(-21,472,o),
(-21,439,cs),
(-21,428,o),
(-6,420,o),
(6,420,cs),
(73,420,ls),
(104,420,o),
(105,413,o),
(105,382,cs),
(106,331,o),
(106,284,o),
(107,240,cs),
(108,195,o),
(108,154,o),
(108,115,cs),
(108,-1,o),
(107,-93,o),
(104,-177,cs),
(104,-194,o),
(116,-211,o),
(143,-211,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
42 1 8 0 50 1 3 2 2 66
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
42 1 2 0 50 1 3 2 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
42 1 8 0 50 1 3 2 2 66
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 8 3 8 2 3 104 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 0 8 8 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 1 2 2 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 7 0 6 0 7 6 91 0 1 0 0 2 1 0 91 8 1 2 2 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 8 3 8 2 3 104 0 7 0 6 0 7 6 91 0 1 0 0 8 1 0 91 0 8 8 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 2 8 3 8 2 3 104 0 5 3 5 107 0 7 0 6 0 7 6 91 0 1 0 0 8 1 0 91 0 8 8 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
41 53 58 39 38 53 94 53 50 9 24
CALL[ ]	/* CallFunction */";
};
width = 584;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(133,-201,o),
(140,-194,o),
(140,-174,cs),
(140,-142,o),
(140,-107,o),
(139,-69,cs),
(138,-32,o),
(137,5,o),
(136,42,c),
(163,7,o),
(203,-20,o),
(262,-20,cs),
(356,-20,o),
(404,37,o),
(423,81,c),
(424,42,o),
(425,15,o),
(428,0,cs),
(431,-15,o),
(436,-22,o),
(443,-22,cs),
(468,-22,o),
(579,-23,o),
(579,-1,cs),
(579,7,o),
(564,10,o),
(552,10,cs),
(536,10,o),
(523,10,o),
(513,10,cs),
(503,9,o),
(496,9,o),
(492,9,cs),
(469,9,o),
(464,17,o),
(464,30,cs),
(464,33,o),
(464,44,o),
(464,63,cs),
(463,81,o),
(463,112,o),
(463,156,cs),
(463,266,o),
(466,346,o),
(466,383,cs),
(466,428,o),
(459,432,o),
(423,432,cs),
(341,432,o),
(298,424,o),
(298,411,cs),
(298,404,o),
(309,400,o),
(332,400,cs),
(398,400,ls),
(421,400,o),
(425,395,o),
(425,359,cs),
(422,172,ls),
(422,84,o),
(348,10,o),
(259,10,cs),
(155,10,o),
(138,109,o),
(138,206,cs),
(138,267,o),
(139,316,o),
(140,351,cs),
(141,386,o),
(142,412,o),
(142,427,cs),
(142,468,o),
(136,472,o),
(108,472,cs),
(27,472,o),
(-18,464,o),
(-18,452,cs),
(-18,448,o),
(-13,440,o),
(-1,440,cs),
(66,440,ls),
(97,440,o),
(98,433,o),
(98,402,cs),
(99,347,o),
(99,296,o),
(100,249,cs),
(101,202,o),
(101,157,o),
(101,115,cs),
(101,-1,o),
(100,-93,o),
(97,-177,cs),
(97,-194,o),
(109,-201,o),
(120,-201,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
49 41 2 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 1 2 2 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 7 0 6 1 7 6 91 0 1 0 0 2 1 0 91 8 1 2 2 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 5 3 5 107 0 7 0 6 1 7 6 91 0 1 0 0 2 1 0 91 8 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
41 53 58 39 38 53 94 52 50 9 24
CALL[ ]	/* CallFunction */";
};
width = 566;
}
);
note = uni03BC;
unicode = 956;
},
{
glyphname = zero;
kernRight = zero;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(410,-21,o),
(570,72,o),
(570,399,cs),
(570,492,o),
(562,599,o),
(526,687,cs),
(491,774,o),
(422,839,o),
(309,839,cs),
(204,839,o),
(134,775,o),
(93,681,cs),
(51,585,o),
(37,474,o),
(37,365,cs),
(37,218,o),
(68,122,o),
(116,62,cs),
(163,2,o),
(225,-21,o),
(288,-21,cs)
);
},
{
closed = 1;
nodes = (
(165,60,o),
(133,241,o),
(133,384,cs),
(133,554,o),
(186,758,o),
(304,758,cs),
(379,758,o),
(425,704,o),
(447,629,cs),
(470,552,o),
(474,467,o),
(474,402,cs),
(474,278,o),
(449,192,o),
(415,138,cs),
(381,84,o),
(336,60,o),
(300,60,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
42 42 42 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 608;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(339,-20,o),
(407,5,o),
(460,70,cs),
(513,134,o),
(552,239,o),
(552,399,cs),
(552,492,o),
(542,599,o),
(506,687,cs),
(470,776,o),
(405,838,o),
(303,838,cs),
(104,838,o),
(40,580,o),
(40,365,cs),
(40,218,o),
(73,122,o),
(119,63,cs),
(165,3,o),
(226,-20,o),
(282,-20,cs)
);
},
{
closed = 1;
nodes = (
(147,42,o),
(115,245,o),
(115,384,cs),
(115,569,o),
(174,776,o),
(301,776,cs),
(376,776,o),
(423,718,o),
(447,640,cs),
(471,561,o),
(477,470,o),
(477,402,cs),
(477,271,o),
(451,181,o),
(414,124,cs),
(377,67,o),
(329,42,o),
(288,42,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
42 40 42 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 593;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(325,-19,o),
(388,8,o),
(439,73,cs),
(490,138,o),
(527,243,o),
(527,399,cs),
(527,497,o),
(512,603,o),
(478,687,cs),
(441,777,o),
(383,837,o),
(295,837,cs),
(206,837,o),
(142,773,o),
(102,681,cs),
(63,590,o),
(45,477,o),
(45,365,cs),
(45,218,o),
(78,123,o),
(123,64,cs),
(168,4,o),
(225,-19,o),
(273,-19,cs)
);
},
{
closed = 1;
nodes = (
(131,12,o),
(90,223,o),
(90,384,cs),
(90,483,o),
(106,588,o),
(139,669,cs),
(172,750,o),
(225,806,o),
(297,806,cs),
(373,806,o),
(420,744,o),
(448,659,cs),
(475,573,o),
(482,475,o),
(482,402,cs),
(482,259,o),
(454,163,o),
(414,101,cs),
(373,39,o),
(320,12,o),
(271,12,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
42 42 42 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = zero;
unicode = 48;
},
{
glyphname = one;
kernLeft = one;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(317,0,ls),
(332,0,o),
(344,10,o),
(344,29,cs),
(344,57,o),
(324,63,o),
(305,63,cs),
(235,63,l),
(250,792,l),
(250,792,l),
(250,816,o),
(243,821,o),
(230,821,cs),
(233,821,o),
(143,818,o),
(68,818,cs),
(45,817,o),
(24,810,o),
(24,785,cs),
(24,762,o),
(46,756,o),
(70,756,cs),
(93,756,o),
(102,757,o),
(133,757,cs),
(152,757,o),
(155,747,o),
(155,723,cs),
(155,656,o),
(155,627,o),
(154,593,cs),
(152,562,o),
(152,523,o),
(150,457,cs),
(150,392,o),
(147,193,o),
(139,106,cs),
(134,70,o),
(104,60,o),
(70,60,cs),
(35,60,o),
(23,50,o),
(23,25,cs),
(23,1,o),
(49,0,o),
(82,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
51 44 40 33 36 52 32 5 18
CALL[ ]	/* CallFunction */";
};
width = 364;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(290,0,ls),
(303,0,o),
(315,8,o),
(315,23,cs),
(315,46,o),
(296,51,o),
(281,51,cs),
(215,51,l),
(230,792,l),
(230,792,l),
(230,809,o),
(229,821,o),
(210,821,cs),
(213,821,o),
(131,818,o),
(59,818,c),
(42,817,o),
(22,812,o),
(22,791,cs),
(22,771,o),
(42,768,o),
(61,768,cs),
(89,768,o),
(98,769,o),
(134,769,cs),
(157,769,o),
(157,744,o),
(157,735,cs),
(154,666,o),
(155,618,o),
(152,457,cs),
(147,252,o),
(148,196,o),
(140,94,cs),
(137,50,o),
(83,48,o),
(61,48,cs),
(36,48,o),
(22,43,o),
(22,23,cs),
(22,4,o),
(46,0,o),
(73,0,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
19 1 0 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
51 45 40 33 36 52 32 5 18
CALL[ ]	/* CallFunction */";
};
width = 346;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(272,0,ls),
(285,0,o),
(292,4,o),
(292,13,cs),
(292,24,o),
(278,31,o),
(263,31,cs),
(187,31,l),
(202,792,ls),
(202,809,o),
(201,821,o),
(182,821,cs),
(185,821,o),
(112,818,o),
(46,818,cs),
(28,817,o),
(19,811,o),
(19,801,cs),
(19,792,o),
(29,788,o),
(48,788,cs),
(77,788,o),
(113,789,o),
(136,789,cs),
(159,789,o),
(159,764,o),
(159,755,cs),
(158,721,o),
(158,681,o),
(158,643,cs),
(157,597,o),
(155,536,o),
(154,457,cs),
(151,348,o),
(150,279,o),
(148,224,cs),
(146,176,o),
(143,121,o),
(142,74,cs),
(142,28,o),
(74,28,o),
(48,28,cs),
(36,28,o),
(19,25,o),
(19,13,cs),
(19,2,o),
(41,0,o),
(60,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
48 42 39 32 52 51 32 5 18
CALL[ ]	/* CallFunction */";
};
width = 320;
}
);
note = one;
unicode = 49;
},
{
glyphname = two;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(75,-14,o),
(98,-4,o),
(103,3,c),
(108,3,o),
(119,3,o),
(136,3,cs),
(153,2,o),
(171,2,o),
(191,2,cs),
(271,2,o),
(390,0,o),
(468,0,cs),
(479,0,o),
(490,3,o),
(501,23,cs),
(512,46,o),
(523,67,o),
(532,85,cs),
(541,103,o),
(546,117,o),
(546,126,cs),
(546,147,o),
(531,153,o),
(512,153,cs),
(493,153,o),
(481,148,o),
(468,124,cs),
(455,101,l),
(455,101,l),
(444,82,o),
(432,80,o),
(423,77,cs),
(418,76,o),
(403,75,o),
(378,75,cs),
(353,74,o),
(325,74,o),
(294,74,cs),
(273,74,o),
(253,74,o),
(234,74,cs),
(214,74,o),
(196,75,o),
(181,76,c),
(242,131,o),
(318,216,o),
(389,318,cs),
(459,420,o),
(509,531,o),
(509,626,cs),
(509,739,o),
(445,831,o),
(281,831,cs),
(120,831,o),
(29,681,o),
(29,616,cs),
(29,581,o),
(45,549,o),
(92,549,cs),
(137,549,o),
(152,577,o),
(152,602,cs),
(152,627,o),
(132,637,o),
(132,655,cs),
(132,673,o),
(184,752,o),
(271,752,cs),
(373,752,o),
(413,685,o),
(413,628,cs),
(413,531,o),
(356,411,o),
(277,301,cs),
(197,190,o),
(104,94,o),
(32,40,cs),
(21,31,o),
(11,23,o),
(11,10,cs),
(11,-1,o),
(20,-14,o),
(47,-14,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
74 1 6 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 3 3 5 83 0 5 5 20 67 0 6 6 1 83 0 1 1 13 67 0 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 5 0 3 4 5 3 91 0 6 6 1 83 0 1 1 13 67 0 2 2 21 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
79 75 63 61 55 53 42 40 34 151 34 7 18
CALL[ ]	/* CallFunction */";
};
width = 571;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(61,-11,o),
(79,-4,o),
(84,3,c),
(193,3,ls),
(284,3,o),
(356,0,o),
(446,0,cs),
(453,0,o),
(468,6,o),
(477,22,cs),
(495,54,o),
(509,78,o),
(519,93,cs),
(528,108,o),
(533,119,o),
(533,126,cs),
(533,142,o),
(518,147,o),
(503,147,cs),
(484,147,o),
(477,135,o),
(470,124,cs),
(443,83,l),
(443,83,l),
(432,67,o),
(426,63,o),
(417,63,cs),
(377,63,o),
(217,63,o),
(146,68,c),
(205,123,o),
(289,212,o),
(362,313,cs),
(434,415,o),
(490,527,o),
(490,626,cs),
(490,739,o),
(433,831,o),
(283,831,cs),
(122,831,o),
(31,681,o),
(31,616,cs),
(31,605,o),
(33,555,o),
(77,555,cs),
(112,555,o),
(133,574,o),
(133,602,cs),
(133,628,o),
(110,631,o),
(110,652,cs),
(110,674,o),
(174,770,o),
(273,770,cs),
(376,770,o),
(415,692,o),
(415,628,cs),
(415,531,o),
(357,411,o),
(278,300,cs),
(200,190,o),
(103,91,o),
(34,40,cs),
(29,35,o),
(24,31,o),
(20,28,cs),
(15,24,o),
(13,19,o),
(13,14,cs),
(13,3,o),
(21,-11,o),
(42,-11,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 3 3 5 83 0 5 5 20 67 0 6 6 1 83 0 1 1 13 67 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 5 0 3 4 5 3 91 0 6 6 1 83 0 1 1 13 67 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
80 74 63 61 53 51 40 38 34 119 34 7 18
CALL[ ]	/* CallFunction */";
};
width = 554;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(42,-6,o),
(52,-4,o),
(57,3,c),
(196,3,ls),
(275,3,o),
(341,0,o),
(420,0,cs),
(435,0,o),
(445,14,o),
(450,22,cs),
(485,85,o),
(506,115,o),
(506,126,cs),
(506,133,o),
(502,137,o),
(494,137,cs),
(485,137,o),
(478,133,o),
(473,124,cs),
(426,53,ls),
(415,37,o),
(409,33,o),
(400,33,cs),
(356,33,o),
(167,33,o),
(89,38,c),
(148,97,o),
(237,187,o),
(320,296,cs),
(402,404,o),
(463,523,o),
(463,626,cs),
(463,737,o),
(416,831,o),
(286,831,cs),
(125,831,o),
(34,681,o),
(34,616,cs),
(34,606,o),
(37,565,o),
(75,565,cs),
(83,565,o),
(106,570,o),
(106,602,cs),
(106,625,o),
(78,629,o),
(78,647,cs),
(78,674,o),
(160,800,o),
(276,800,cs),
(380,800,o),
(418,704,o),
(418,628,cs),
(418,531,o),
(360,411,o),
(281,300,cs),
(203,190,o),
(106,91,o),
(37,40,cs),
(32,35,o),
(27,31,o),
(23,28,cs),
(18,24,o),
(16,19,o),
(16,14,cs),
(16,3,o),
(23,-6,o),
(35,-6,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 3 3 5 83 0 5 5 20 67 0 6 6 1 83 0 1 1 13 67 0 2 2 16 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 5 0 3 4 5 3 91 0 6 6 1 83 0 1 1 13 67 0 2 2 16 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
82 76 65 63 55 53 40 38 34 120 33 7 18
CALL[ ]	/* CallFunction */";
};
width = 530;
}
);
note = two;
unicode = 50;
},
{
glyphname = three;
kernLeft = three;
kernRight = three;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(330,-18,o),
(495,123,o),
(495,264,cs),
(495,367,o),
(410,436,o),
(305,436,cs),
(255,436,o),
(234,434,o),
(198,423,c),
(231,433,o),
(301,467,o),
(365,517,cs),
(430,568,o),
(482,634,o),
(482,708,cs),
(482,811,o),
(404,836,o),
(301,836,cs),
(204,836,o),
(138,798,o),
(95,751,cs),
(52,704,o),
(34,648,o),
(34,612,cs),
(34,603,o),
(40,580,o),
(72,580,cs),
(105,580,o),
(128,622,o),
(133,642,cs),
(155,723,o),
(225,765,o),
(283,765,cs),
(359,765,o),
(391,741,o),
(391,694,cs),
(391,641,o),
(338,585,o),
(273,538,cs),
(203,489,o),
(144,456,o),
(106,435,cs),
(94,428,o),
(77,414,o),
(77,381,cs),
(77,356,o),
(88,344,o),
(109,344,cs),
(159,344,o),
(179,368,o),
(255,368,cs),
(332,368,o),
(404,345,o),
(404,263,cs),
(404,199,o),
(363,147,o),
(310,110,cs),
(257,74,o),
(199,56,o),
(163,56,cs),
(142,56,o),
(109,56,o),
(92,64,cs),
(69,76,o),
(57,101,o),
(30,101,cs),
(7,101,o),
(-5,81,o),
(-5,56,cs),
(-5,9,o),
(63,-18,o),
(144,-18,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
42 1 7 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 1 0 3 0 1 3 104 0 8 7 5 7 8 5 104 0 5 6 7 5 6 102 0 0 0 2 83 0 2 2 20 67 0 7 7 3 83 0 3 3 15 67 0 6 6 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 1 0 3 0 1 3 104 0 8 7 5 7 8 5 104 0 5 6 7 5 6 102 0 3 0 7 8 3 7 91 0 0 0 2 83 0 2 2 20 67 0 6 6 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 3 0 1 3 104 0 8 7 5 7 8 5 104 0 5 6 7 5 6 102 0 2 0 0 1 2 0 91 0 3 0 7 8 3 7 91 0 6 6 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
35 42 53 38 40 62 40 40 41 9 24
CALL[ ]	/* CallFunction */";
};
width = 548;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(338,-18,o),
(495,130,o),
(495,267,cs),
(495,371,o),
(404,437,o),
(297,437,cs),
(240,437,o),
(201,425,o),
(200,425,c),
(220,433,o),
(285,462,o),
(357,514,cs),
(426,563,o),
(483,632,o),
(483,709,cs),
(483,822,o),
(362,836,o),
(307,836,cs),
(130,836,o),
(48,687,o),
(48,615,cs),
(48,610,o),
(49,586,o),
(77,586,cs),
(109,586,o),
(118,616,o),
(128,642,c),
(154,728,o),
(231,774,o),
(301,774,cs),
(354,774,o),
(408,745,o),
(408,688,cs),
(408,629,o),
(351,573,o),
(282,528,cs),
(215,483,o),
(142,446,o),
(108,421,cs),
(101,416,o),
(82,403,o),
(82,379,cs),
(82,360,o),
(95,348,o),
(110,348,cs),
(161,348,o),
(178,384,o),
(256,384,cs),
(333,384,o),
(420,344,o),
(420,252,cs),
(420,128,o),
(258,38,o),
(154,38,cs),
(138,38,o),
(107,39,o),
(82,58,cs),
(73,65,o),
(66,72,o),
(63,79,cs),
(60,86,o),
(53,89,o),
(44,89,cs),
(25,89,o),
(17,76,o),
(17,57,cs),
(17,9,o),
(86,-18,o),
(160,-18,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 1 0 4 0 1 4 104 0 8 3 9 3 8 9 104 0 9 6 3 9 6 102 0 6 7 3 6 7 102 0 0 0 2 83 0 2 2 20 67 0 4 4 15 67 0 3 3 15 67 0 7 7 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 1 0 4 0 1 4 104 0 4 3 0 4 3 102 0 3 8 0 3 8 102 0 8 9 0 8 9 102 0 9 6 0 9 6 102 0 6 7 0 6 7 102 0 0 0 2 83 0 2 2 20 67 0 7 7 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 1 0 4 0 1 4 104 0 4 3 0 4 3 102 0 3 8 0 3 8 102 0 8 9 0 8 9 102 0 9 6 0 9 6 102 0 6 7 0 6 7 102 0 2 0 0 1 2 0 91 0 7 7 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
89 87 40 36 38 40 35 27 40 40 43 10 24
CALL[ ]	/* CallFunction */";
};
width = 532;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(313,-18,o),
(468,131,o),
(468,264,cs),
(468,378,o),
(373,433,o),
(267,433,cs),
(253,433,o),
(239,432,o),
(226,429,cs),
(212,426,o),
(204,425,o),
(203,425,c),
(207,431,o),
(254,449,o),
(333,507,cs),
(400,557,o),
(456,628,o),
(456,711,cs),
(456,824,o),
(344,836,o),
(301,836,cs),
(137,836,o),
(51,684,o),
(51,620,cs),
(51,613,o),
(51,596,o),
(67,596,cs),
(82,596,o),
(91,617,o),
(100,642,cs),
(139,745,o),
(209,804,o),
(293,804,cs),
(350,804,o),
(411,777,o),
(411,705,cs),
(411,627,o),
(354,563,o),
(285,514,cs),
(214,464,o),
(143,432,o),
(111,406,cs),
(106,402,o),
(95,393,o),
(95,380,cs),
(95,368,o),
(104,363,o),
(111,363,cs),
(158,363,o),
(182,399,o),
(257,399,cs),
(339,399,o),
(423,364,o),
(423,259,cs),
(423,122,o),
(262,11,o),
(156,11,cs),
(107,11,o),
(75,35,o),
(56,59,cs),
(51,66,o),
(47,71,o),
(45,74,cs),
(43,77,o),
(40,78,o),
(35,78,cs),
(20,78,o),
(20,66,o),
(20,59,cs),
(20,7,o),
(88,-18,o),
(154,-18,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 1 0 4 0 1 4 104 0 9 8 6 8 9 6 104 0 6 7 8 6 7 102 0 0 0 2 83 0 2 2 20 67 0 3 3 15 67 0 8 8 4 83 0 4 4 15 67 0 7 7 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 1 0 4 0 1 4 104 0 3 4 8 4 3 8 104 0 9 8 6 8 9 6 104 0 6 7 8 6 7 102 0 4 0 8 9 4 8 91 0 0 0 2 83 0 2 2 20 67 0 7 7 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 1 0 4 0 1 4 104 0 3 4 8 4 3 8 104 0 9 8 6 8 9 6 104 0 6 7 8 6 7 102 0 2 0 0 1 2 0 91 0 4 0 8 9 4 8 91 0 7 7 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
81 79 40 36 38 40 33 27 38 36 43 10 24
CALL[ ]	/* CallFunction */";
};
width = 509;
}
);
note = three;
unicode = 51;
},
{
glyphname = four;
kernLeft = four;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(501,0,ls),
(528,0,o),
(554,4,o),
(554,31,cs),
(554,42,o),
(549,50,o),
(540,56,cs),
(530,62,o),
(510,65,o),
(481,65,cs),
(461,65,o),
(452,70,o),
(452,87,cs),
(452,88,o),
(454,171,o),
(461,244,c),
(541,244,l),
(541,244,l),
(557,244,o),
(578,254,o),
(578,285,cs),
(578,311,o),
(564,324,o),
(535,325,cs),
(464,328,l),
(464,397,o),
(470,498,o),
(478,603,cs),
(486,715,o),
(491,773,o),
(491,777,cs),
(491,804,o),
(472,820,o),
(437,820,cs),
(410,820,o),
(394,804,o),
(382,789,cs),
(334,729,o),
(264,640,o),
(222,584,cs),
(173,520,o),
(103,426,o),
(1,291,cs),
(-7,280,o),
(-9,272,o),
(-9,264,cs),
(-9,245,o),
(10,234,o),
(33,234,cs),
(48,234,o),
(82,235,o),
(137,238,cs),
(191,240,o),
(269,242,o),
(371,244,c),
(362,101,ls),
(359,74,o),
(344,70,o),
(313,63,cs),
(302,60,o),
(259,58,o),
(240,56,cs),
(221,53,o),
(203,51,o),
(203,28,cs),
(203,1,o),
(230,0,o),
(243,0,cs)
);
},
{
closed = 1;
nodes = (
(132,316,o),
(128,318,o),
(128,322,cs),
(128,325,o),
(129,327,o),
(130,330,cs),
(131,332,o),
(134,336,o),
(139,342,cs),
(400,696,l),
(373,328,l),
(351,327,o),
(195,316,o),
(139,316,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
74 1 5 4 31 1 0 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
9 7 2 5 8 6 2 3 0 5 3 91 0 4 4 12 67 2 1 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 2 0 1 0 2 96 9 7 2 5 8 6 2 3 0 5 3 91 0 4 4 12 67 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 2 0 1 0 2 96 8 1 6 3 5 6 79 9 7 2 5 0 3 0 5 3 91 0 4 4 14 67 0 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
73 68 0 0 68 79 73 79 0 67 0 66 41 46 70 25 52 39 10 21
CALL[ ]	/* CallFunction */";
};
width = 580;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(468,0,ls),
(495,0,o),
(512,6,o),
(512,25,cs),
(512,44,o),
(497,49,o),
(468,49,cs),
(451,49,o),
(427,49,o),
(427,65,cs),
(427,51,o),
(430,175,o),
(437,244,c),
(511,244,l),
(511,244,l),
(522,244,o),
(540,250,o),
(540,273,cs),
(540,293,o),
(525,305,o),
(504,306,cs),
(440,310,l),
(440,385,o),
(446,487,o),
(455,609,cs),
(462,729,o),
(469,793,o),
(469,804,cs),
(469,819,o),
(451,826,o),
(427,826,cs),
(404,826,o),
(383,805,o),
(379,798,c),
(315,718,o),
(260,646,o),
(206,573,cs),
(152,500,o),
(85,407,o),
(-2,291,cs),
(-10,280,o),
(-12,272,o),
(-12,264,cs),
(-12,245,o),
(7,234,o),
(30,234,cs),
(45,234,o),
(79,235,o),
(134,238,cs),
(188,240,o),
(266,242,o),
(368,244,c),
(359,89,ls),
(358,62,o),
(339,54,o),
(310,51,cs),
(311,51,o),
(257,45,o),
(220,45,cs),
(207,45,o),
(190,41,o),
(190,24,cs),
(190,4,o),
(211,0,o),
(223,0,cs)
);
},
{
closed = 1;
nodes = (
(94,298,o),
(91,299,o),
(90,301,cs),
(89,302,o),
(88,304,o),
(88,306,cs),
(88,310,o),
(90,314,o),
(94,318,cs),
(97,321,o),
(99,324,o),
(99,326,c),
(398,727,l),
(370,310,l),
(254,304,o),
(127,298,o),
(101,298,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
74 73 2 6 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
10 8 2 6 9 7 2 4 0 6 4 91 0 5 5 12 67 3 2 2 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
9 1 7 4 6 7 79 10 8 2 6 0 4 0 6 4 91 0 5 5 14 67 3 2 2 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
72 67 0 0 67 79 72 79 0 66 0 65 41 46 68 19 36 52 39 11 22
CALL[ ]	/* CallFunction */";
};
width = 569;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(472,0,ls),
(485,0,o),
(494,2,o),
(499,5,cs),
(504,8,o),
(506,12,o),
(506,15,cs),
(506,30,o),
(485,29,o),
(472,29,cs),
(452,29,o),
(401,26,o),
(401,45,cs),
(401,27,o),
(404,168,o),
(411,244,c),
(515,244,ls),
(526,244,o),
(534,252,o),
(534,259,cs),
(534,270,o),
(529,275,o),
(508,276,cs),
(414,280,l),
(415,335,o),
(423,485,o),
(431,597,cs),
(439,735,o),
(443,797,o),
(443,804,cs),
(443,819,o),
(432,821,o),
(421,821,cs),
(398,821,o),
(387,805,o),
(383,798,c),
(319,718,o),
(264,646,o),
(210,573,cs),
(156,500,o),
(89,407,o),
(2,291,cs),
(-6,280,o),
(-8,272,o),
(-8,264,cs),
(-8,245,o),
(11,234,o),
(34,234,cs),
(49,234,o),
(83,235,o),
(138,238,cs),
(192,240,o),
(270,242,o),
(372,244,c),
(363,69,ls),
(362,42,o),
(343,34,o),
(314,31,cs),
(315,31,o),
(261,25,o),
(224,25,cs),
(211,25,o),
(204,21,o),
(204,14,cs),
(204,3,o),
(215,0,o),
(227,0,cs)
);
},
{
closed = 1;
nodes = (
(45,268,o),
(40,271,o),
(40,276,cs),
(40,279,o),
(42,283,o),
(46,287,cs),
(49,291,o),
(52,294,o),
(53,296,cs),
(404,763,l),
(374,280,l),
(342,278,o),
(134,268,o),
(55,268,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
74 1 6 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
10 8 2 6 9 7 2 4 0 6 4 92 0 5 5 12 67 3 2 2 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
9 1 7 4 6 7 80 10 8 2 6 0 4 0 6 4 92 0 5 5 14 67 3 2 2 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
73 68 0 0 68 79 73 79 0 67 0 66 41 46 68 19 35 52 56 11 22
CALL[ ]	/* CallFunction */";
};
width = 554;
}
);
note = four;
unicode = 52;
},
{
glyphname = five;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(434,-12,o),
(542,140,o),
(542,269,cs),
(542,318,o),
(530,375,o),
(494,418,cs),
(458,461,o),
(398,492,o),
(305,492,cs),
(246,492,o),
(155,467,o),
(146,463,c),
(170,706,l),
(185,713,o),
(242,720,o),
(310,722,cs),
(401,725,o),
(411,725,o),
(454,725,cs),
(477,725,o),
(509,732,o),
(509,771,cs),
(509,803,o),
(485,812,o),
(449,812,cs),
(375,812,o),
(176,805,o),
(105,794,cs),
(94,792,o),
(87,786,o),
(86,775,cs),
(79,662,o),
(73,611,o),
(59,505,cs),
(56,488,o),
(55,468,o),
(55,460,cs),
(55,431,o),
(58,410,o),
(63,396,cs),
(68,382,o),
(78,375,o),
(93,375,cs),
(115,375,o),
(201,412,o),
(300,412,cs),
(408,412,o),
(446,353,o),
(446,274,cs),
(446,172,o),
(366,61,o),
(193,61,cs),
(153,61,o),
(113,79,o),
(113,100,cs),
(113,136,o),
(171,107,o),
(171,165,cs),
(171,196,o),
(149,212,o),
(116,212,cs),
(65,212,o),
(29,168,o),
(29,104,cs),
(29,-2,o),
(129,-12,o),
(211,-12,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
76 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 1 1 0 83 8 1 0 0 14 67 0 6 6 2 83 0 2 2 23 67 0 5 5 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 1 1 0 83 8 1 0 0 14 67 0 6 6 2 83 0 2 2 23 67 0 5 5 3 83 0 3 3 24 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 2 0 6 7 2 6 91 0 1 1 0 83 8 1 0 0 14 67 0 5 5 3 83 0 3 3 24 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
1 0 66 64 61 59 51 49 40 38 32 30 22 20 12 7 0 82 1 80 9 15
CALL[ ]	/* CallFunction */";
};
width = 556;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(419,-12,o),
(522,138,o),
(522,269,cs),
(522,372,o),
(457,492,o),
(287,492,cs),
(230,492,o),
(147,470,o),
(126,463,c),
(159,724,l),
(202,741,o),
(376,743,o),
(423,743,cs),
(444,743,o),
(471,750,o),
(471,779,cs),
(471,806,o),
(447,812,o),
(418,812,cs),
(355,812,o),
(181,806,o),
(106,794,cs),
(95,792,o),
(88,786,o),
(87,775,cs),
(80,656,o),
(74,604,o),
(60,505,cs),
(57,488,o),
(56,468,o),
(56,460,cs),
(56,421,o),
(64,393,o),
(92,393,cs),
(128,393,o),
(195,424,o),
(277,424,cs),
(409,424,o),
(447,347,o),
(447,274,cs),
(447,162,o),
(367,51,o),
(194,51,cs),
(149,51,o),
(93,66,o),
(93,96,cs),
(93,132,o),
(151,103,o),
(151,156,cs),
(151,184,o),
(132,198,o),
(105,198,cs),
(64,198,o),
(30,155,o),
(30,104,cs),
(30,-8,o),
(147,-12,o),
(198,-12,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
76 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 1 1 0 83 8 1 0 0 14 67 0 6 6 2 83 0 2 2 23 67 0 5 5 3 83 0 3 3 24 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 2 0 6 7 2 6 91 0 1 1 0 83 8 1 0 0 14 67 0 5 5 3 83 0 3 3 24 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
1 0 66 64 61 59 51 49 38 36 29 26 18 16 9 5 0 82 1 80 9 15
CALL[ ]	/* CallFunction */";
};
width = 542;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(400,-12,o),
(494,138,o),
(494,269,cs),
(494,370,o),
(439,492,o),
(289,492,cs),
(225,492,o),
(122,470,o),
(98,463,c),
(131,754,l),
(150,761,o),
(209,768,o),
(275,770,cs),
(365,773,o),
(377,773,o),
(425,773,cs),
(446,773,o),
(463,780,o),
(463,792,cs),
(463,809,o),
(439,812,o),
(420,812,cs),
(357,812,o),
(183,806,o),
(108,794,cs),
(97,792,o),
(90,786,o),
(89,775,cs),
(82,656,o),
(76,604,o),
(62,505,cs),
(59,488,o),
(58,468,o),
(58,460,cs),
(58,439,o),
(71,423,o),
(90,423,cs),
(127,423,o),
(197,454,o),
(279,454,cs),
(414,454,o),
(449,358,o),
(449,274,cs),
(449,152,o),
(375,21,o),
(196,21,cs),
(130,21,o),
(65,42,o),
(65,93,cs),
(65,129,o),
(123,97,o),
(123,141,cs),
(123,166,o),
(106,175,o),
(90,175,cs),
(64,175,o),
(32,152,o),
(32,104,cs),
(32,-11,o),
(161,-12,o),
(180,-12,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
78 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 1 1 0 83 8 1 0 0 14 67 0 6 6 2 83 0 2 2 23 67 0 5 5 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 1 1 0 83 8 1 0 0 14 67 0 6 6 2 83 0 2 2 23 67 0 5 5 3 83 0 3 3 24 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 2 0 6 7 2 6 91 0 1 1 0 83 8 1 0 0 14 67 0 5 5 3 83 0 3 3 24 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
1 0 68 66 63 61 53 51 40 38 30 28 20 18 10 5 0 84 1 82 9 15
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = five;
unicode = 53;
},
{
glyphname = six;
kernLeft = six;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(482,-18,o),
(530,108,o),
(530,214,cs),
(530,302,o),
(490,420,o),
(315,420,cs),
(231,420,o),
(163,392,o),
(119,324,c),
(127,400,o),
(135,417,o),
(166,489,cs),
(202,574,o),
(236,631,o),
(268,673,cs),
(300,715,o),
(332,741,o),
(365,772,cs),
(373,779,o),
(377,787,o),
(377,796,cs),
(377,819,o),
(362,830,o),
(342,830,cs),
(333,830,o),
(320,825,o),
(301,816,cs),
(255,792,o),
(189,713,o),
(132,610,cs),
(74,505,o),
(31,373,o),
(31,249,cs),
(31,53,o),
(146,-18,o),
(293,-18,cs)
);
},
{
closed = 1;
nodes = (
(230,61,o),
(145,96,o),
(145,194,cs),
(145,296,o),
(230,338,o),
(298,338,cs),
(401,338,o),
(442,290,o),
(442,203,cs),
(442,118,o),
(386,61,o),
(290,61,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
10 1 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 2 20 67 0 4 4 0 83 0 0 0 15 67 5 1 3 3 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
16
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 2 12 67 0 4 4 0 83 0 0 0 15 67 5 1 3 3 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 2 20 67 0 4 4 0 83 0 0 0 15 67 5 1 3 3 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 4 3 0 4 92 0 2 2 20 67 5 1 3 3 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 106 0 0 0 4 3 0 4 92 5 1 3 3 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
43 42 49 47 42 57 43 57 44 40 44 6 18
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(468,-18,o),
(520,113,o),
(520,207,cs),
(520,287,o),
(481,420,o),
(311,420,cs),
(187,420,o),
(110,353,o),
(94,261,c),
(93,264,o),
(92,272,o),
(92,285,cs),
(92,342,o),
(112,396,o),
(148,481,cs),
(183,564,o),
(223,628,o),
(263,677,cs),
(302,725,o),
(339,760,o),
(370,784,cs),
(378,791,o),
(383,796,o),
(383,807,cs),
(383,820,o),
(375,834,o),
(356,834,cs),
(344,834,o),
(331,829,o),
(320,822,cs),
(267,790,o),
(201,714,o),
(140,607,cs),
(77,499,o),
(34,370,o),
(34,251,cs),
(34,54,o),
(150,-18,o),
(286,-18,cs)
);
},
{
closed = 1;
nodes = (
(212,43,o),
(127,87,o),
(127,183,cs),
(127,298,o),
(210,356,o),
(295,356,cs),
(401,356,o),
(445,285,o),
(445,204,cs),
(445,108,o),
(373,43,o),
(282,43,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
10 1 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 2 20 67 0 4 4 0 83 0 0 0 15 67 5 1 3 3 1 84 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 4 3 0 4 91 0 2 2 20 67 5 1 3 3 1 84 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 106 0 0 0 4 3 0 4 91 5 1 3 3 1 84 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
47 46 57 55 46 65 47 65 45 40 46 6 18
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(443,-18,o),
(494,133,o),
(494,214,cs),
(494,283,o),
(457,420,o),
(305,420,cs),
(190,420,o),
(100,348,o),
(78,231,c),
(77,234,o),
(76,237,o),
(76,241,cs),
(75,244,o),
(75,251,o),
(75,260,cs),
(75,324,o),
(86,392,o),
(123,480,cs),
(180,614,o),
(278,746,o),
(354,794,cs),
(359,797,o),
(369,804,o),
(369,815,cs),
(369,826,o),
(362,831,o),
(349,831,cs),
(338,831,o),
(331,827,o),
(324,822,cs),
(265,781,o),
(193,698,o),
(137,596,cs),
(80,494,o),
(38,371,o),
(38,254,cs),
(38,51,o),
(161,-18,o),
(276,-18,cs)
);
},
{
closed = 1;
nodes = (
(191,13,o),
(101,63,o),
(101,180,cs),
(101,301,o),
(200,386,o),
(302,386,cs),
(416,386,o),
(449,279,o),
(449,205,cs),
(449,87,o),
(365,13,o),
(270,13,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
11 1 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 2 20 67 0 4 4 0 83 0 0 0 15 67 5 1 3 3 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 4 3 0 4 92 0 2 2 20 67 5 1 3 3 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 106 0 0 0 4 3 0 4 92 5 1 3 3 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
45 44 55 53 44 63 45 63 43 40 47 6 18
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = six;
unicode = 54;
},
{
glyphname = seven;
kernLeft = seven;
kernRight = seven;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(53,-24,o),
(66,-16,o),
(77,5,cs),
(457,718,l),
(465,741,o),
(487,765,o),
(487,790,cs),
(487,813,o),
(480,819,o),
(421,819,cs),
(413,819,o),
(400,819,o),
(383,819,cs),
(365,818,o),
(345,818,o),
(322,818,cs),
(299,818,o),
(276,818,o),
(251,817,cs),
(226,816,o),
(202,816,o),
(179,816,cs),
(156,816,o),
(136,816,o),
(119,816,cs),
(101,815,o),
(88,815,o),
(81,815,cs),
(49,815,o),
(25,808,o),
(25,777,cs),
(25,750,o),
(36,730,o),
(57,730,cs),
(110,730,o),
(159,731,o),
(205,734,cs),
(250,736,o),
(298,737,o),
(347,737,cs),
(356,737,o),
(361,733,o),
(361,726,cs),
(361,715,o),
(323,639,o),
(248,498,cs),
(182,376,o),
(102,231,o),
(16,77,cs),
(0,48,o),
(-11,28,o),
(-11,11,cs),
(-11,-16,o),
(11,-24,o),
(28,-24,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 1 83 0 1 1 14 67 0 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 2 0 2 107 0 0 0 1 83 0 1 1 14 0 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
44 148 88 3 18
CALL[ ]	/* CallFunction */";
};
width = 480;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(59,-22,o),
(66,-14,o),
(75,5,cs),
(465,737,l),
(464,733,o),
(487,774,o),
(487,790,cs),
(487,818,o),
(464,820,o),
(429,820,cs),
(417,820,o),
(341,818,o),
(256,815,cs),
(171,811,o),
(95,809,o),
(85,809,cs),
(54,809,o),
(36,805,o),
(36,780,cs),
(36,761,o),
(45,749,o),
(61,749,cs),
(118,749,o),
(172,750,o),
(222,753,cs),
(271,755,o),
(323,756,o),
(376,756,cs),
(385,756,o),
(390,752,o),
(390,743,cs),
(390,735,o),
(259,495,o),
(7,18,c),
(4,11,o),
(2,7,o),
(2,-2,cs),
(2,-13,o),
(20,-22,o),
(36,-22,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 0 1 83 0 1 1 14 67 0 2 2 21 2 68 42 148 86 3 18
CALL[ ]	/* CallFunction */";
};
width = 467;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(39,-19,o),
(43,-14,o),
(52,5,cs),
(457,768,ls),
(461,775,o),
(465,782,o),
(465,789,cs),
(465,805,o),
(456,821,o),
(421,821,cs),
(409,821,o),
(331,819,o),
(244,816,cs),
(154,812,o),
(78,810,o),
(67,810,cs),
(53,810,o),
(43,809,o),
(37,808,cs),
(31,806,o),
(28,801,o),
(28,794,cs),
(28,787,o),
(34,780,o),
(43,780,cs),
(106,780,o),
(166,781,o),
(224,784,cs),
(281,786,o),
(339,787,o),
(398,787,cs),
(407,787,o),
(412,783,o),
(412,774,cs),
(412,768,o),
(394,734,o),
(362,674,cs),
(330,613,o),
(269,500,o),
(181,335,cs),
(136,249,o),
(80,143,o),
(14,18,c),
(11,11,o),
(9,1,o),
(9,-7,cs),
(9,-15,o),
(14,-19,o),
(23,-19,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 0 1 83 0 1 1 14 67 0 2 2 21 2 68 40 148 88 3 18
CALL[ ]	/* CallFunction */";
};
width = 448;
}
);
note = seven;
unicode = 55;
},
{
glyphname = eight;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(429,-20,o),
(527,89,o),
(527,214,cs),
(527,327,o),
(440,407,o),
(369,420,c),
(421,436,o),
(509,511,o),
(509,622,cs),
(509,721,o),
(450,832,o),
(275,832,cs),
(126,832,o),
(47,730,o),
(47,614,cs),
(47,511,o),
(108,447,o),
(167,420,c),
(115,402,o),
(21,336,o),
(21,193,cs),
(21,52,o),
(118,-20,o),
(257,-20,cs)
);
},
{
closed = 1;
nodes = (
(143,55,o),
(117,128,o),
(117,209,cs),
(117,306,o),
(185,374,o),
(271,374,cs),
(359,374,o),
(432,309,o),
(432,209,cs),
(432,109,o),
(362,55,o),
(262,55,cs)
);
},
{
closed = 1;
nodes = (
(208,467,o),
(136,514,o),
(136,612,cs),
(136,677,o),
(178,753,o),
(279,753,cs),
(366,753,o),
(422,694,o),
(422,616,cs),
(422,532,o),
(355,467,o),
(278,467,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
25 5 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 5 5 0 83 0 0 0 20 67 0 3 3 4 83 0 4 4 23 67 0 2 2 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 0 3 2 4 3 91 0 5 5 0 83 0 0 0 20 67 0 2 2 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 2 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
74 72 64 62 54 52 46 44 36 34 46 6 16
CALL[ ]	/* CallFunction */";
};
width = 578;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(420,-20,o),
(522,82,o),
(522,204,cs),
(522,315,o),
(433,400,o),
(356,416,c),
(411,432,o),
(509,509,o),
(509,622,cs),
(509,720,o),
(434,832,o),
(286,832,cs),
(145,832,o),
(59,729,o),
(59,615,cs),
(59,514,o),
(128,443,o),
(191,416,c),
(127,392,o),
(37,319,o),
(37,191,cs),
(37,51,o),
(141,-20,o),
(269,-20,cs)
);
},
{
closed = 1;
nodes = (
(170,41,o),
(112,115,o),
(112,203,cs),
(112,312,o),
(198,377,o),
(279,377,cs),
(356,377,o),
(445,316,o),
(445,206,cs),
(445,99,o),
(361,41,o),
(272,41,cs)
);
},
{
closed = 1;
nodes = (
(215,454,o),
(134,506,o),
(134,610,cs),
(134,682,o),
(174,771,o),
(286,771,cs),
(390,771,o),
(434,696,o),
(434,621,cs),
(434,525,o),
(361,454,o),
(283,454,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
25 5 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 5 5 0 83 0 0 0 20 67 0 3 3 4 83 0 4 4 15 67 0 2 2 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 0 3 2 4 3 91 0 5 5 0 83 0 0 0 20 67 0 2 2 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 2 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
76 74 66 64 56 54 46 44 36 34 46 6 16
CALL[ ]	/* CallFunction */";
};
width = 561;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(392,-20,o),
(495,87,o),
(495,199,cs),
(495,301,o),
(405,394,o),
(329,416,c),
(384,432,o),
(482,508,o),
(482,625,cs),
(482,721,o),
(416,832,o),
(282,832,cs),
(152,832,o),
(62,729,o),
(62,617,cs),
(62,516,o),
(134,442,o),
(194,416,c),
(133,384,o),
(40,315,o),
(40,191,cs),
(40,49,o),
(159,-20,o),
(266,-20,cs)
);
},
{
closed = 1;
nodes = (
(148,11,o),
(85,101,o),
(85,198,cs),
(85,324,o),
(181,392,o),
(268,392,cs),
(355,392,o),
(448,323,o),
(448,204,cs),
(448,82,o),
(358,11,o),
(259,11,cs)
);
},
{
closed = 1;
nodes = (
(194,439,o),
(107,496,o),
(107,612,cs),
(107,698,o),
(155,801,o),
(281,801,cs),
(407,801,o),
(437,698,o),
(437,628,cs),
(437,510,o),
(351,439,o),
(268,439,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
25 5 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 5 5 0 83 0 0 0 20 67 0 3 3 4 83 0 4 4 15 67 0 2 2 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 0 3 2 4 3 91 0 5 5 0 83 0 0 0 20 67 0 2 2 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 2 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
76 74 66 64 56 54 46 44 36 34 46 6 16
CALL[ ]	/* CallFunction */";
};
width = 537;
}
);
note = eight;
unicode = 56;
},
{
glyphname = nine;
kernLeft = nine;
kernRight = nine;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(222,-24,o),
(239,-14,o),
(259,2,cs),
(307,39,o),
(370,101,o),
(433,217,cs),
(484,310,o),
(526,449,o),
(526,578,cs),
(526,618,o),
(519,682,o),
(485,735,cs),
(451,787,o),
(389,830,o),
(282,830,cs),
(88,830,o),
(19,694,o),
(19,581,cs),
(19,437,o),
(113,339,o),
(230,339,cs),
(309,339,o),
(368,350,o),
(419,399,c),
(387,278,o),
(302,124,o),
(183,45,cs),
(164,32,o),
(159,22,o),
(159,6,cs),
(159,-19,o),
(176,-24,o),
(195,-24,cs)
);
},
{
closed = 1;
nodes = (
(171,418,o),
(106,490,o),
(106,576,cs),
(106,700,o),
(170,753,o),
(278,753,cs),
(404,753,o),
(437,667,o),
(437,583,cs),
(437,518,o),
(399,418,o),
(256,418,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 1 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
5 1 3 3 2 83 0 2 2 20 67 0 1 1 4 83 0 4 4 15 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
16
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
5 1 3 3 2 83 0 2 2 12 67 0 1 1 4 83 0 4 4 15 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
5 1 3 3 2 83 0 2 2 20 67 0 1 1 4 83 0 4 4 15 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 4 0 1 0 4 1 91 5 1 3 3 2 83 0 2 2 20 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 2 5 1 3 4 2 3 91 0 4 0 1 0 4 1 91 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 1 0 107 0 2 5 1 3 4 2 3 91 0 4 1 1 4 79 0 4 4 1 83 0 1 4 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
41 40 49 47 40 57 41 57 40 44 34 6 18
CALL[ ]	/* CallFunction */";
};
width = 556;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(194,-28,o),
(207,-21,o),
(223,-8,cs),
(274,33,o),
(344,100,o),
(408,217,cs),
(457,310,o),
(508,454,o),
(508,591,cs),
(508,691,o),
(458,830,o),
(267,830,cs),
(82,830,o),
(11,692,o),
(11,581,cs),
(11,437,o),
(109,339,o),
(226,339,cs),
(295,339,o),
(375,372,o),
(425,437,c),
(396,296,o),
(294,111,o),
(168,28,cs),
(153,17,o),
(145,12,o),
(145,-3,cs),
(145,-22,o),
(164,-28,o),
(175,-28,cs)
);
},
{
closed = 1;
nodes = (
(155,406,o),
(86,479,o),
(86,576,cs),
(86,712,o),
(175,769,o),
(276,769,cs),
(387,769,o),
(434,671,o),
(434,595,cs),
(434,523,o),
(373,406,o),
(247,406,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 4 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 4 0 1 0 4 1 91 5 1 3 3 2 83 0 2 2 20 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
16
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 4 0 1 0 4 1 91 5 1 3 3 2 83 0 2 2 12 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 4 0 1 0 4 1 91 5 1 3 3 2 83 0 2 2 20 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 1 0 107 0 4 0 1 0 4 1 91 5 1 3 3 2 83 0 2 2 20 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 1 0 107 0 2 5 1 3 4 2 3 91 0 4 1 1 4 79 0 4 4 1 83 0 1 4 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
43 42 53 51 42 61 43 61 40 46 34 6 18
CALL[ ]	/* CallFunction */";
};
width = 541;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(178,-19,o),
(188,-15,o),
(197,-8,cs),
(248,33,o),
(318,100,o),
(382,217,cs),
(434,316,o),
(482,457,o),
(482,591,cs),
(482,688,o),
(428,830,o),
(256,830,cs),
(90,830,o),
(15,696,o),
(15,581,cs),
(15,437,o),
(113,339,o),
(230,339,cs),
(298,339,o),
(380,380,o),
(436,467,c),
(406,297,o),
(295,109,o),
(172,28,cs),
(157,17,o),
(149,12,o),
(149,-3,cs),
(149,-18,o),
(164,-19,o),
(169,-19,cs)
);
},
{
closed = 1;
nodes = (
(113,376,o),
(60,465,o),
(60,576,cs),
(60,736,o),
(168,799,o),
(250,799,cs),
(387,799,o),
(438,687,o),
(438,615,cs),
(438,526,o),
(379,376,o),
(228,376,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
13 1 4 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 4 0 1 0 4 1 91 5 1 3 3 2 83 0 2 2 20 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
16
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 4 0 1 0 4 1 91 5 1 3 3 2 83 0 2 2 12 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 4 0 1 0 4 1 91 5 1 3 3 2 83 0 2 2 20 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 2 5 1 3 4 2 3 91 0 4 0 1 0 4 1 91 0 0 0 21 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
40 39 50 48 39 58 40 58 40 44 33 6 18
CALL[ ]	/* CallFunction */";
};
width = 519;
}
);
note = nine;
unicode = 57;
},
{
glyphname = zero.dnom;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(203,-18,o),
(256,27,o),
(256,149,cs),
(256,223,o),
(239,324,o),
(140,324,cs),
(53,324,o),
(30,230,o),
(30,135,cs),
(30,18,o),
(79,-18,o),
(143,-18,cs)
);
},
{
closed = 1;
nodes = (
(110,39,o),
(101,96,o),
(101,143,cs),
(101,203,o),
(110,267,o),
(146,267,cs),
(178,267,o),
(184,193,o),
(184,150,cs),
(184,107,o),
(181,77,o),
(174,62,cs),
(167,47,o),
(156,39,o),
(141,39,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68 40 40 38 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 282;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(189,-14,o),
(243,34,o),
(243,153,cs),
(243,227,o),
(224,328,o),
(137,328,cs),
(55,328,o),
(31,229,o),
(31,139,cs),
(31,25,o),
(79,-14,o),
(135,-14,cs)
);
},
{
closed = 1;
nodes = (
(99,31,o),
(88,94,o),
(88,147,cs),
(88,212,o),
(103,283,o),
(140,283,cs),
(177,283,o),
(185,203,o),
(185,154,cs),
(185,55,o),
(160,31,o),
(133,31,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68 40 40 40 37 4 30
CALL[ ]	/* CallFunction */";
};
width = 272;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(170,-10,o),
(225,39,o),
(225,157,cs),
(225,231,o),
(204,332,o),
(133,332,cs),
(61,332,o),
(33,229,o),
(33,143,cs),
(33,34,o),
(79,-10,o),
(124,-10,cs)
);
},
{
closed = 1;
nodes = (
(86,15,o),
(70,90,o),
(70,151,cs),
(70,224,o),
(93,307,o),
(133,307,cs),
(175,307,o),
(187,218,o),
(187,158,cs),
(187,58,o),
(155,15,o),
(123,15,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 24 3 68 40 40 40 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 258;
}
);
note = zeroinferior;
},
{
glyphname = one.dnom;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(161,0,ls),
(173,0,o),
(192,3,o),
(192,28,cs),
(192,51,o),
(176,56,o),
(157,56,cs),
(144,56,l),
(144,56,l),
(145,119,o),
(146,168,o),
(147,203,cs),
(148,238,o),
(148,263,o),
(149,280,cs),
(150,299,o),
(150,311,o),
(150,315,cs),
(150,320,o),
(149,324,o),
(148,325,cs),
(146,326,o),
(144,327,o),
(142,327,cs),
(137,327,o),
(107,323,o),
(54,323,cs),
(39,323,o),
(21,313,o),
(21,296,cs),
(21,275,o),
(31,270,o),
(54,270,cs),
(56,270,o),
(59,270,o),
(64,271,cs),
(69,271,o),
(72,271,o),
(73,271,cs),
(79,271,o),
(82,266,o),
(82,257,cs),
(82,223,o),
(80,227,o),
(80,183,cs),
(79,153,o),
(77,131,o),
(77,115,cs),
(76,102,o),
(75,87,o),
(75,73,cs),
(75,57,o),
(70,54,o),
(54,54,cs),
(39,54,o),
(22,47,o),
(22,28,cs),
(22,5,o),
(43,0,o),
(59,0,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
0 5 4 1 3 0 5 3 91 2 6 2 0 0 1 83 0 1 1 13 1 68 1 0 43 36 32 30 29 27 14 12 8 5 0 50 1 50 7 15
CALL[ ]	/* CallFunction */";
};
width = 210;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(154,1,ls),
(163,1,o),
(178,3,o),
(178,23,cs),
(178,44,o),
(158,45,o),
(150,45,cs),
(130,45,l),
(130,45,l),
(131,111,o),
(132,162,o),
(133,199,cs),
(134,236,o),
(134,263,o),
(135,280,cs),
(136,301,o),
(136,313,o),
(136,316,cs),
(136,321,o),
(135,325,o),
(134,326,cs),
(132,327,o),
(130,328,o),
(128,328,cs),
(123,328,o),
(96,324,o),
(47,324,cs),
(36,324,o),
(21,316,o),
(21,303,cs),
(21,283,o),
(36,283,o),
(47,283,cs),
(50,283,o),
(55,283,o),
(61,284,cs),
(67,284,o),
(71,284,o),
(73,284,cs),
(82,284,o),
(82,273,o),
(82,270,cs),
(82,231,o),
(80,233,o),
(80,184,cs),
(79,151,o),
(77,126,o),
(77,109,cs),
(76,95,o),
(75,77,o),
(75,62,cs),
(75,45,o),
(68,43,o),
(47,43,cs),
(43,43,o),
(22,39,o),
(22,23,cs),
(22,3,o),
(42,1,o),
(52,1,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
5 1 4 0 3 0 4 3 91 2 6 2 0 0 1 84 0 1 1 13 1 68 2 1 49 45 44 42 38 33 19 17 11 8 1 56 2 56 7 26
CALL[ ]	/* CallFunction */";
};
width = 197;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(144,0,ls),
(153,0,o),
(158,1,o),
(158,12,cs),
(158,24,o),
(147,24,o),
(140,24,cs),
(110,24,l),
(111,95,o),
(112,151,o),
(113,190,cs),
(114,229,o),
(114,257,o),
(115,276,cs),
(116,298,o),
(116,311,o),
(116,315,cs),
(116,320,o),
(115,324,o),
(114,325,cs),
(112,326,o),
(110,327,o),
(108,327,cs),
(104,327,o),
(81,323,o),
(37,323,cs),
(30,323,o),
(21,319,o),
(21,312,cs),
(21,301,o),
(30,302,o),
(37,302,cs),
(42,302,o),
(48,302,o),
(57,303,cs),
(65,303,o),
(70,303,o),
(73,303,cs),
(82,303,o),
(82,294,o),
(82,289,cs),
(82,277,o),
(82,261,o),
(82,251,cs),
(81,237,o),
(80,218,o),
(80,183,cs),
(79,145,o),
(77,116,o),
(77,96,cs),
(76,79,o),
(75,59,o),
(75,41,cs),
(75,24,o),
(65,22,o),
(37,22,cs),
(33,22,o),
(22,20,o),
(22,12,cs),
(22,0,o),
(35,0,o),
(42,0,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
5 1 4 0 3 0 4 3 91 2 6 2 0 0 1 83 0 1 1 13 1 68 1 0 44 40 39 37 33 28 14 12 8 5 0 51 1 51 7 15
CALL[ ]	/* CallFunction */";
};
width = 178;
}
);
note = oneinferior;
},
{
glyphname = two.dnom;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,-5,o),
(54,-3,o),
(58,0,cs),
(61,3,o),
(64,5,o),
(65,6,c),
(83,5,o),
(101,5,o),
(118,4,cs),
(149,3,o),
(184,2,o),
(211,2,cs),
(218,2,o),
(222,8,o),
(223,11,c),
(221,9,o),
(247,47,o),
(247,61,cs),
(247,69,o),
(240,78,o),
(225,78,cs),
(212,78,o),
(203,75,o),
(199,70,cs),
(194,64,o),
(191,60,o),
(190,59,cs),
(189,58,o),
(185,58,o),
(177,58,cs),
(137,60,l),
(172,100,o),
(237,180,o),
(237,253,cs),
(237,298,o),
(208,335,o),
(133,335,cs),
(57,335,o),
(22,279,o),
(22,249,cs),
(22,230,o),
(30,212,o),
(62,212,cs),
(79,212,o),
(97,217,o),
(97,238,cs),
(97,245,o),
(95,250,o),
(92,251,cs),
(88,252,o),
(86,255,o),
(86,258,cs),
(86,265,o),
(106,280,o),
(129,280,cs),
(149,280,o),
(165,269,o),
(165,254,cs),
(165,177,o),
(85,66,o),
(23,18,cs),
(18,14,o),
(15,11,o),
(15,8,cs),
(15,6,o),
(16,3,o),
(18,0,cs),
(20,-3,o),
(25,-5,o),
(33,-5,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
11 1 1 6 1 66 0 1 6 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 4 3 0 3 4 0 104 0 0 6 6 0 94 0 5 0 3 4 5 3 91 0 6 6 1 84 2 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 4 3 0 3 4 0 104 0 0 6 6 0 94 0 5 0 3 4 5 3 91 0 6 6 1 84 0 1 1 13 67 0 2 2 16 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
39 38 39 43 34 105 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 269;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(44,-2,o),
(51,-1,o),
(54,2,cs),
(57,4,o),
(60,6,o),
(61,7,c),
(78,6,o),
(95,6,o),
(112,5,cs),
(141,4,o),
(175,3,o),
(200,3,cs),
(203,3,o),
(206,4,o),
(208,7,cs),
(209,9,o),
(211,11,o),
(212,12,c),
(217,21,o),
(222,29,o),
(227,38,cs),
(232,47,o),
(235,54,o),
(235,59,cs),
(235,66,o),
(230,73,o),
(217,73,cs),
(208,73,o),
(195,68,o),
(187,53,cs),
(184,49,o),
(183,47,o),
(183,47,c),
(182,46,l),
(113,49,l),
(153,89,o),
(226,176,o),
(226,254,cs),
(226,299,o),
(197,336,o),
(132,336,cs),
(60,336,o),
(25,276,o),
(25,250,cs),
(25,231,o),
(29,216,o),
(60,216,cs),
(71,216,o),
(86,223,o),
(86,244,cs),
(86,249,o),
(84,253,o),
(81,255,cs),
(77,256,o),
(75,259,o),
(75,262,cs),
(75,265,o),
(80,271,o),
(89,279,cs),
(98,287,o),
(111,291,o),
(128,291,cs),
(155,291,o),
(168,274,o),
(168,255,cs),
(168,178,o),
(88,67,o),
(26,19,cs),
(21,15,o),
(18,12,o),
(18,9,cs),
(18,7,o),
(19,5,o),
(21,2,cs),
(22,-1,o),
(27,-2,o),
(34,-2,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
61 1 6 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 5 0 3 4 5 3 91 0 6 6 1 83 2 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 5 0 3 4 5 3 91 0 6 6 1 83 0 1 1 13 67 0 2 2 16 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
23 38 39 43 34 103 35 7 33
CALL[ ]	/* CallFunction */";
};
width = 260;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(42,0,o),
(47,1,o),
(50,2,cs),
(52,3,o),
(54,5,o),
(55,6,c),
(72,5,o),
(88,5,o),
(104,4,cs),
(131,3,o),
(163,2,o),
(184,2,cs),
(187,2,o),
(190,3,o),
(192,6,cs),
(193,8,o),
(195,10,o),
(196,11,c),
(216,49,o),
(218,47,o),
(218,53,cs),
(218,54,o),
(217,56,o),
(216,59,cs),
(215,61,o),
(211,62,o),
(206,62,cs),
(197,62,o),
(194,56,o),
(191,52,cs),
(184,40,o),
(178,33,o),
(175,30,cs),
(172,27,o),
(169,25,o),
(168,25,cs),
(79,28,l),
(128,71,o),
(210,171,o),
(210,253,cs),
(210,298,o),
(182,335,o),
(130,335,cs),
(67,335,o),
(29,277,o),
(29,249,cs),
(29,230,o),
(36,220,o),
(50,220,cs),
(51,220,o),
(55,221,o),
(61,224,cs),
(67,226,o),
(70,232,o),
(70,243,cs),
(70,248,o),
(68,252,o),
(65,254,cs),
(61,255,o),
(59,258,o),
(59,261,cs),
(59,274,o),
(81,307,o),
(126,307,cs),
(161,307,o),
(172,285,o),
(172,254,cs),
(172,177,o),
(92,66,o),
(30,18,cs),
(25,14,o),
(22,11,o),
(22,8,cs),
(22,3,o),
(26,0,o),
(35,0,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 5 0 3 4 5 3 91 0 6 6 1 83 2 1 1 1 13 1 68 39 37 41 42 34 105 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 247;
}
);
note = twoinferior;
},
{
glyphname = three.dnom;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(145,-9,o),
(228,37,o),
(228,105,cs),
(228,149,o),
(193,174,o),
(153,174,cs),
(146,174,o),
(142,173,o),
(137,172,c),
(136,175,l),
(136,175,l),
(171,188,o),
(224,211,o),
(224,268,cs),
(224,324,o),
(174,332,o),
(138,332,cs),
(71,332,o),
(28,275,o),
(28,245,cs),
(28,233,o),
(37,225,o),
(49,225,cs),
(74,225,o),
(84,240,o),
(88,249,cs),
(96,268,o),
(111,290,o),
(132,290,cs),
(143,290,o),
(152,283,o),
(152,270,cs),
(152,225,o),
(97,198,o),
(60,172,cs),
(59,171,o),
(56,168,o),
(52,165,cs),
(48,161,o),
(46,156,o),
(46,151,cs),
(46,140,o),
(48,133,o),
(51,129,cs),
(54,125,o),
(57,123,o),
(60,123,cs),
(65,123,o),
(72,125,o),
(80,128,cs),
(87,131,o),
(97,132,o),
(108,132,cs),
(135,132,o),
(156,124,o),
(156,101,cs),
(156,59,o),
(106,41,o),
(73,41,cs),
(59,41,o),
(69,63,o),
(44,63,cs),
(25,63,o),
(16,46,o),
(16,29,cs),
(16,4,o),
(36,-9,o),
(77,-9,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
70 1 0 7 0 1 4 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 7 6 0 6 7 0 104 0 0 4 6 0 4 102 5 1 4 2 6 4 2 102 0 3 2 1 2 3 96 0 8 0 6 7 8 6 91 0 2 2 1 83 0 1 1 24 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 7 6 0 6 7 0 104 0 0 4 6 0 4 102 0 4 5 6 4 5 102 0 5 2 6 5 2 102 0 3 2 1 2 3 96 0 8 0 6 7 8 6 91 0 2 2 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 36 44 33 38 35 35 38 34 9 24
CALL[ ]	/* CallFunction */";
};
width = 253;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(140,-8,o),
(217,43,o),
(217,106,cs),
(217,150,o),
(177,174,o),
(140,174,cs),
(137,174,o),
(135,174,o),
(133,174,cs),
(130,173,o),
(128,173,o),
(126,173,cs),
(123,172,o),
(121,172,o),
(120,172,c),
(149,185,o),
(213,217,o),
(213,281,cs),
(213,328,o),
(156,333,o),
(132,333,cs),
(67,333,o),
(31,273,o),
(31,246,cs),
(31,235,o),
(41,228,o),
(48,228,cs),
(67,228,o),
(74,241,o),
(77,250,c),
(89,279,o),
(108,297,o),
(125,297,cs),
(145,297,o),
(155,291,o),
(155,278,cs),
(155,222,o),
(100,200,o),
(63,173,cs),
(62,172,o),
(59,169,o),
(55,166,cs),
(51,162,o),
(49,157,o),
(49,152,cs),
(49,142,o),
(51,136,o),
(55,134,cs),
(59,131,o),
(62,130,o),
(63,130,cs),
(66,130,o),
(72,132,o),
(81,135,cs),
(90,138,o),
(100,139,o),
(111,139,cs),
(138,139,o),
(159,129,o),
(159,102,cs),
(159,54,o),
(108,33,o),
(76,33,cs),
(57,33,o),
(61,55,o),
(40,55,cs),
(25,55,o),
(19,39,o),
(19,24,cs),
(19,3,o),
(45,-8,o),
(76,-8,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 10 1 9 7 0 9 7 102 0 7 8 0 7 8 102 0 2 0 0 1 2 0 91 0 8 8 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 0 9 10 0 9 10 102 0 10 7 0 10 7 102 0 7 8 0 7 8 102 0 2 0 0 1 2 0 91 0 8 8 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
68 66 65 63 35 36 38 33 17 25 38 36 39 11 35
CALL[ ]	/* CallFunction */";
};
width = 245;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(136,-9,o),
(201,53,o),
(201,105,cs),
(201,149,o),
(153,171,o),
(121,171,cs),
(118,171,o),
(116,171,o),
(114,171,cs),
(111,170,o),
(109,170,o),
(107,170,cs),
(104,169,o),
(102,169,o),
(101,169,c),
(112,180,o),
(197,213,o),
(197,280,cs),
(197,326,o),
(157,332,o),
(136,332,cs),
(71,332,o),
(35,272,o),
(35,245,cs),
(35,235,o),
(39,230,o),
(46,230,cs),
(54,230,o),
(58,240,o),
(61,249,cs),
(73,284,o),
(93,306,o),
(129,306,cs),
(153,306,o),
(159,296,o),
(159,277,cs),
(159,221,o),
(104,199,o),
(67,172,cs),
(66,171,o),
(63,168,o),
(59,165,cs),
(55,161,o),
(53,156,o),
(53,151,cs),
(53,140,o),
(64,139,o),
(67,139,cs),
(70,139,o),
(76,141,o),
(85,144,cs),
(94,147,o),
(104,148,o),
(115,148,cs),
(142,148,o),
(163,136,o),
(163,101,cs),
(163,47,o),
(111,17,o),
(80,17,cs),
(53,17,o),
(50,39,o),
(35,39,cs),
(24,39,o),
(23,30,o),
(23,23,cs),
(23,0,o),
(51,-9,o),
(74,-9,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
0 1 0 3 0 1 3 104 0 10 9 7 9 10 7 104 0 7 8 9 7 8 102 0 2 0 0 1 2 0 91 5 4 2 3 0 9 10 3 9 91 0 8 8 6 83 0 6 6 24 6 68 69 67 66 64 35 36 40 33 17 25 37 36 39 11 24
CALL[ ]	/* CallFunction */";
};
width = 233;
}
);
note = threeinferior;
},
{
glyphname = four.dnom;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(228,0,ls),
(255,0,o),
(264,4,o),
(264,23,cs),
(264,44,o),
(247,48,o),
(236,48,cs),
(233,48,o),
(231,49,o),
(231,50,cs),
(231,51,o),
(231,53,o),
(232,56,cs),
(232,59,o),
(232,62,o),
(233,66,c),
(243,66,l),
(243,66,l),
(264,66,o),
(270,83,o),
(270,94,cs),
(270,113,o),
(261,122,o),
(242,122,cs),
(237,122,l),
(241,168,o),
(250,228,o),
(250,304,cs),
(250,327,o),
(232,337,o),
(213,337,cs),
(197,337,o),
(181,328,o),
(174,319,cs),
(140,276,o),
(143,280,o),
(116,243,cs),
(99,220,o),
(63,172,o),
(22,117,cs),
(13,106,o),
(8,98,o),
(5,93,cs),
(2,88,o),
(1,82,o),
(1,77,cs),
(1,71,o),
(4,67,o),
(9,66,cs),
(14,65,o),
(23,64,o),
(34,64,cs),
(40,64,o),
(50,64,o),
(65,64,cs),
(79,64,o),
(93,64,o),
(108,65,cs),
(119,66,o),
(128,66,o),
(137,66,cs),
(145,66,o),
(154,66,o),
(165,66,c),
(164,55,ls),
(164,51,o),
(160,49,o),
(153,48,c),
(151,47,o),
(146,47,o),
(139,47,cs),
(131,46,o),
(124,46,o),
(117,45,cs),
(104,44,o),
(89,40,o),
(89,25,cs),
(89,5,o),
(107,0,o),
(119,0,cs)
);
},
{
closed = 1;
nodes = (
(100,120,o),
(98,121,o),
(98,124,cs),
(98,125,o),
(99,127,o),
(100,128,cs),
(101,129,o),
(102,131,o),
(103,132,cs),
(178,240,l),
(169,123,l),
(154,122,o),
(140,121,o),
(127,121,cs),
(114,120,o),
(106,120,o),
(104,120,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
65 1 5 4 23 1 0 3 2 66 0 4 5 4 106 9 7 2 5 8 6 2 3 0 5 3 91 2 1 0 0 1 84 0 1 1 13 1 68 63 61 0 0 61 70 63 70 0 60 0 59 39 46 116 22 52 36 10 21
CALL[ ]	/* CallFunction */";
};
width = 294;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(224,1,ls),
(239,1,o),
(253,1,o),
(253,20,cs),
(253,40,o),
(232,40,o),
(224,40,cs),
(220,40,o),
(215,42,o),
(215,50,cs),
(215,53,o),
(216,68,o),
(219,79,c),
(235,79,l),
(235,79,l),
(254,79,o),
(259,94,o),
(259,101,cs),
(259,116,o),
(250,123,o),
(232,123,cs),
(219,123,l),
(220,144,o),
(232,301,o),
(232,309,cs),
(232,334,o),
(207,335,o),
(202,335,cs),
(189,335,o),
(173,324,o),
(170,320,cs),
(125,264,o),
(84,208,o),
(18,118,cs),
(12,110,o),
(8,104,o),
(7,100,cs),
(5,96,o),
(4,92,o),
(4,89,cs),
(4,80,o),
(13,76,o),
(30,76,cs),
(42,76,o),
(75,77,o),
(104,78,cs),
(115,79,o),
(125,79,o),
(135,79,cs),
(145,79,o),
(155,79,o),
(166,79,c),
(162,55,ls),
(159,44,o),
(153,43,o),
(142,40,cs),
(140,39,o),
(136,39,o),
(131,39,cs),
(125,38,o),
(119,38,o),
(113,37,cs),
(102,37,o),
(92,31,o),
(92,20,cs),
(92,5,o),
(106,1,o),
(115,1,cs)
);
},
{
closed = 1;
nodes = (
(82,121,o),
(80,122,o),
(80,125,cs),
(80,126,o),
(81,128,o),
(82,129,cs),
(83,130,o),
(84,132,o),
(85,133,cs),
(175,256,l),
(165,124,l),
(147,123,o),
(130,122,o),
(114,122,cs),
(97,121,o),
(88,121,o),
(86,121,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
67 1 6 5 1 66 23 1 0 1 65 0 5 6 5 106 10 8 2 6 9 7 2 4 0 6 4 91 3 2 2 0 0 1 84 0 1 1 13 1 68 65 63 1 1 63 72 65 72 1 62 1 61 41 43 117 17 20 52 38 11 33
CALL[ ]	/* CallFunction */";
};
width = 283;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(218,0,ls),
(229,0,o),
(237,0,o),
(237,12,cs),
(237,24,o),
(223,24,o),
(218,24,cs),
(206,24,o),
(189,23,o),
(189,34,cs),
(189,41,o),
(190,73,o),
(193,98,c),
(229,98,ls),
(240,98,o),
(243,107,o),
(243,110,cs),
(243,118,o),
(237,122,o),
(226,122,cs),
(193,122,l),
(196,201,o),
(206,292,o),
(206,308,cs),
(206,329,o),
(190,329,o),
(186,329,cs),
(177,329,o),
(167,322,o),
(164,319,cs),
(119,263,o),
(78,207,o),
(12,117,cs),
(8,112,o),
(8,109,o),
(8,106,cs),
(8,98,o),
(13,94,o),
(24,94,cs),
(30,94,o),
(40,94,o),
(55,95,cs),
(69,96,o),
(83,96,o),
(98,97,cs),
(109,98,o),
(119,98,o),
(129,98,cs),
(139,98,o),
(149,98,o),
(160,98,c),
(156,39,ls),
(156,28,o),
(148,25,o),
(136,24,c),
(134,23,o),
(130,23,o),
(125,23,cs),
(119,22,o),
(113,22,o),
(107,21,cs),
(102,21,o),
(96,16,o),
(96,9,cs),
(96,2,o),
(104,0,o),
(109,0,cs)
);
},
{
closed = 1;
nodes = (
(56,120,o),
(54,121,o),
(54,124,cs),
(54,125,o),
(55,127,o),
(56,128,cs),
(57,129,o),
(58,131,o),
(59,132,cs),
(171,280,l),
(159,123,l),
(136,122,o),
(114,121,o),
(94,121,cs),
(74,120,o),
(63,120,o),
(60,120,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
64 1 6 5 1 66 22 1 0 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 5 6 5 106 3 2 2 0 4 1 6 0 96 10 8 2 6 9 7 2 4 0 6 4 91 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 5 6 5 106 3 2 2 0 4 1 4 0 1 104 10 8 2 6 9 7 2 4 0 6 4 91 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
63 60 0 0 60 69 63 69 0 59 0 58 39 43 117 17 20 52 37 11 22
CALL[ ]	/* CallFunction */";
};
width = 267;
}
);
note = fourinferior;
},
{
glyphname = five.dnom;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(168,-12,o),
(250,43,o),
(250,109,cs),
(250,169,o),
(215,204,o),
(155,204,cs),
(139,204,o),
(109,193,o),
(101,180,c),
(111,236,l),
(126,236,o),
(177,255,o),
(190,261,cs),
(212,273,o),
(242,303,o),
(242,322,cs),
(242,325,o),
(241,328,o),
(238,333,cs),
(235,337,o),
(228,339,o),
(215,339,cs),
(200,339,o),
(191,331,o),
(188,328,cs),
(156,298,o),
(66,306,o),
(55,284,cs),
(53,280,o),
(45,238,o),
(36,156,cs),
(35,149,o),
(34,140,o),
(34,136,cs),
(34,117,o),
(38,107,o),
(45,107,cs),
(81,107,o),
(88,146,o),
(132,146,cs),
(168,146,o),
(178,126,o),
(178,107,cs),
(178,71,o),
(150,30,o),
(110,30,cs),
(86,30,o),
(79,41,o),
(79,52,cs),
(79,67,o),
(88,60,o),
(88,76,cs),
(88,87,o),
(79,93,o),
(60,93,cs),
(47,93,o),
(20,75,o),
(20,43,cs),
(20,28,o),
(27,-12,o),
(99,-12,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 1 0 17 1 6 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 1 0 106 0 1 2 1 106 0 7 6 4 6 7 4 104 0 4 5 5 4 94 0 2 0 6 7 2 6 91 0 5 5 3 84 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 1 0 106 0 1 2 1 106 0 7 6 4 6 7 4 104 0 4 5 5 4 94 0 2 0 6 7 2 6 91 0 5 5 3 84 0 3 3 24 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 0 1 0 106 0 1 2 1 106 0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 2 0 6 7 2 6 91 0 5 5 3 84 0 3 3 24 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
35 38 40 38 38 37 27 34 8 23
CALL[ ]	/* CallFunction */";
};
width = 272;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(166,-11,o),
(237,45,o),
(237,110,cs),
(237,166,o),
(203,199,o),
(147,199,cs),
(126,199,o),
(101,188,o),
(88,175,c),
(101,249,l),
(120,253,o),
(175,266,o),
(190,275,cs),
(209,284,o),
(229,308,o),
(229,323,cs),
(229,326,o),
(228,329,o),
(226,333,cs),
(224,336,o),
(218,338,o),
(209,338,cs),
(198,338,o),
(192,332,o),
(189,329,cs),
(157,299,o),
(67,307,o),
(56,285,cs),
(54,280,o),
(48,238,o),
(37,157,cs),
(36,150,o),
(35,141,o),
(35,137,cs),
(35,122,o),
(39,114,o),
(46,114,cs),
(74,114,o),
(90,153,o),
(133,153,cs),
(170,153,o),
(179,122,o),
(179,108,cs),
(179,67,o),
(152,25,o),
(90,25,cs),
(77,25,o),
(66,32,o),
(66,47,cs),
(66,63,o),
(80,54,o),
(80,71,cs),
(80,82,o),
(72,88,o),
(55,88,cs),
(42,88,o),
(21,72,o),
(21,44,cs),
(21,20,o),
(39,-11,o),
(88,-11,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
68 1 1 0 16 1 5 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 1 0 106 0 6 5 3 5 6 3 104 0 3 4 4 3 94 0 1 0 5 6 1 5 91 0 4 4 2 84 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 0 1 0 106 0 6 5 3 5 6 3 104 0 3 4 5 3 4 102 0 1 0 5 6 1 5 91 0 4 4 2 84 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
35 40 40 36 38 45 35 7 33
CALL[ ]	/* CallFunction */";
};
width = 261;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(155,-12,o),
(219,42,o),
(219,109,cs),
(219,160,o),
(184,188,o),
(136,188,cs),
(105,188,o),
(89,177,o),
(70,164,c),
(87,268,l),
(100,272,o),
(172,284,o),
(192,294,cs),
(201,299,o),
(211,314,o),
(211,322,cs),
(211,327,o),
(208,334,o),
(201,334,cs),
(198,334,o),
(195,332,o),
(191,328,cs),
(159,298,o),
(69,306,o),
(58,284,cs),
(56,279,o),
(50,237,o),
(39,156,cs),
(38,149,o),
(37,140,o),
(37,136,cs),
(37,127,o),
(41,123,o),
(48,123,cs),
(64,123,o),
(93,162,o),
(135,162,cs),
(178,162,o),
(181,122,o),
(181,107,cs),
(181,61,o),
(154,14,o),
(92,14,cs),
(68,14,o),
(48,21,o),
(48,36,cs),
(48,50,o),
(68,44,o),
(68,60,cs),
(68,71,o),
(61,77,o),
(48,77,cs),
(35,77,o),
(23,66,o),
(23,43,cs),
(23,19,o),
(41,-12,o),
(90,-12,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
66 1 1 0 14 1 5 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 1 0 106 0 6 5 3 5 6 3 104 0 3 4 4 3 94 0 1 0 5 6 1 5 91 0 4 4 2 84 0 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 1 0 106 0 6 5 3 5 6 3 104 0 3 4 4 3 94 0 1 0 5 6 1 5 91 0 4 4 2 84 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 0 1 0 106 0 6 5 3 5 6 3 104 0 3 4 5 3 4 102 0 1 0 5 6 1 5 91 0 4 4 2 84 0 2 2 24 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
35 40 40 36 38 45 33 7 22
CALL[ ]	/* CallFunction */";
};
width = 245;
}
);
note = fiveinferior;
},
{
glyphname = six.dnom;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(199,-12,o),
(247,21,o),
(247,77,cs),
(247,125,o),
(212,162,o),
(152,162,cs),
(129,162,o),
(112,155,o),
(101,148,cs),
(94,144,o),
(89,140,o),
(84,135,c),
(84,181,o),
(158,270,o),
(185,292,cs),
(193,299,o),
(194,304,o),
(194,308,cs),
(194,323,o),
(171,327,o),
(160,327,cs),
(153,327,o),
(144,324,o),
(135,317,cs),
(91,284,o),
(21,185,o),
(21,101,cs),
(21,18,o),
(80,-12,o),
(142,-12,cs)
);
},
{
closed = 1;
nodes = (
(122,38,o),
(95,48,o),
(95,82,cs),
(95,101,o),
(103,126,o),
(135,126,cs),
(162,126,o),
(175,104,o),
(175,81,cs),
(175,49,o),
(149,38,o),
(136,38,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 2 0 2 106 5 1 3 4 1 4 3 1 104 0 0 0 4 3 0 4 91 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 2 0 2 106 5 1 3 4 1 4 3 1 104 0 0 0 4 3 0 4 91 0 1 1 24 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
37 36 45 43 36 51 37 51 42 38 41 6 18
CALL[ ]	/* CallFunction */";
};
width = 255;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(176,-11,o),
(236,23,o),
(236,80,cs),
(236,125,o),
(198,163,o),
(141,163,cs),
(99,163,o),
(73,138,o),
(73,128,cs),
(73,178,o),
(146,270,o),
(174,293,cs),
(183,300,o),
(188,306,o),
(188,311,cs),
(188,324,o),
(169,328,o),
(162,328,cs),
(155,328,o),
(147,325,o),
(138,318,cs),
(94,288,o),
(24,185,o),
(24,98,cs),
(24,21,o),
(77,-11,o),
(125,-11,cs)
);
},
{
closed = 1;
nodes = (
(110,29,o),
(84,42,o),
(84,77,cs),
(84,97,o),
(94,131,o),
(131,131,cs),
(160,131,o),
(178,109,o),
(178,80,cs),
(178,41,o),
(147,29,o),
(129,29,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 2 0 2 106 0 0 0 4 3 0 4 91 5 1 3 3 1 83 0 1 1 24 1 68 37 36 45 43 36 51 37 51 42 38 42 6 29
CALL[ ]	/* CallFunction */";
};
width = 249;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(175,-12,o),
(221,25,o),
(221,82,cs),
(221,122,o),
(198,162,o),
(137,162,cs),
(75,162,o),
(61,125,o),
(58,116,c),
(61,179,o),
(127,263,o),
(159,292,cs),
(165,297,o),
(170,301,o),
(174,303,cs),
(177,305,o),
(179,308,o),
(179,313,cs),
(179,325,o),
(168,327,o),
(165,327,cs),
(164,327,o),
(161,326,o),
(157,325,cs),
(153,323,o),
(148,320,o),
(143,317,cs),
(98,284,o),
(29,191,o),
(29,91,cs),
(29,16,o),
(67,-12,o),
(118,-12,cs)
);
},
{
closed = 1;
nodes = (
(92,12,o),
(69,30,o),
(69,66,cs),
(69,93,o),
(82,137,o),
(126,137,cs),
(157,137,o),
(183,115,o),
(183,76,cs),
(183,31,o),
(149,12,o),
(119,12,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 106 0 0 0 4 3 0 4 91 5 1 3 3 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 106 0 0 0 4 3 0 4 91 5 1 3 3 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
36 35 44 42 35 50 36 50 41 38 41 6 18
CALL[ ]	/* CallFunction */";
};
width = 240;
}
);
note = sixinferior;
},
{
glyphname = seven.dnom;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(60,-11,o),
(71,-6,o),
(78,5,c),
(225,286,ls),
(233,301,o),
(238,311,o),
(240,316,cs),
(242,320,o),
(243,323,o),
(243,326,cs),
(243,327,o),
(242,329,o),
(240,330,cs),
(238,331,o),
(233,331,o),
(226,331,cs),
(202,331,o),
(74,327,o),
(52,327,cs),
(37,327,o),
(24,316,o),
(24,297,cs),
(24,282,o),
(34,270,o),
(49,270,cs),
(75,270,o),
(105,272,o),
(129,272,cs),
(133,272,o),
(135,270,o),
(135,267,cs),
(135,262,o),
(115,219,o),
(74,139,cs),
(33,58,o),
(13,15,o),
(13,10,cs),
(13,-1,o),
(27,-11,o),
(43,-11,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
0 1 0 0 2 1 0 91 0 2 2 24 2 68 39 116 120 3 18
CALL[ ]	/* CallFunction */";
};
width = 237;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(53,-8,o),
(63,-3,o),
(68,6,cs),
(221,296,ls),
(226,305,o),
(230,312,o),
(231,315,cs),
(232,318,o),
(233,321,o),
(233,324,cs),
(233,329,o),
(227,332,o),
(216,332,cs),
(190,332,o),
(76,328,o),
(49,328,cs),
(34,328,o),
(25,319,o),
(25,304,cs),
(25,293,o),
(31,283,o),
(46,283,cs),
(79,283,o),
(116,285,o),
(145,285,cs),
(149,285,o),
(151,283,o),
(151,280,cs),
(151,272,o),
(122,218,o),
(84,145,cs),
(46,72,o),
(17,17,o),
(17,11,cs),
(17,0,o),
(28,-8,o),
(40,-8,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
0 1 0 0 2 1 0 91 0 2 2 24 2 68 38 116 121 3 29
CALL[ ]	/* CallFunction */";
};
width = 229;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(43,-5,o),
(49,-2,o),
(52,5,cs),
(214,310,l),
(216,313,o),
(217,315,o),
(217,318,cs),
(217,327,o),
(211,331,o),
(200,331,cs),
(177,331,o),
(61,327,o),
(43,327,cs),
(28,327,o),
(24,320,o),
(24,313,cs),
(24,312,o),
(25,310,o),
(27,307,cs),
(28,304,o),
(33,302,o),
(40,302,cs),
(65,302,o),
(87,302,o),
(105,303,cs),
(122,304,o),
(143,304,o),
(166,304,cs),
(170,304,o),
(172,302,o),
(172,299,cs),
(172,291,o),
(146,245,o),
(97,153,cs),
(47,61,o),
(21,17,o),
(21,10,cs),
(21,0,o),
(25,-5,o),
(34,-5,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
0 1 0 0 2 1 0 91 0 2 2 16 2 68 37 116 88 3 18
CALL[ ]	/* CallFunction */";
};
width = 218;
}
);
note = seveninferior;
},
{
glyphname = eight.dnom;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(216,-12,o),
(257,26,o),
(257,75,cs),
(257,118,o),
(234,153,o),
(185,161,c),
(212,164,o),
(252,193,o),
(252,245,cs),
(252,285,o),
(212,327,o),
(144,327,cs),
(71,327,o),
(34,286,o),
(34,241,cs),
(34,198,o),
(64,165,o),
(92,161,c),
(59,156,o),
(24,122,o),
(24,71,cs),
(24,15,o),
(68,-12,o),
(140,-12,cs)
);
},
{
closed = 1;
nodes = (
(118,42,o),
(95,51,o),
(95,79,cs),
(95,115,o),
(123,125,o),
(141,125,cs),
(177,125,o),
(186,102,o),
(186,79,cs),
(186,63,o),
(173,42,o),
(141,42,cs)
);
},
{
closed = 1;
nodes = (
(127,198,o),
(104,205,o),
(104,233,cs),
(104,264,o),
(127,269,o),
(143,269,cs),
(159,269,o),
(181,264,o),
(181,229,cs),
(181,216,o),
(169,198,o),
(142,198,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
19 3 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 2 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 2 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 38 36 36 46 40 6 21
CALL[ ]	/* CallFunction */";
};
width = 282;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(207,-11,o),
(246,31,o),
(246,76,cs),
(246,119,o),
(217,154,o),
(174,162,c),
(196,164,o),
(241,198,o),
(241,246,cs),
(241,283,o),
(204,328,o),
(138,328,cs),
(71,328,o),
(37,287,o),
(37,242,cs),
(37,201,o),
(69,167,o),
(95,162,c),
(66,154,o),
(27,125,o),
(27,72,cs),
(27,16,o),
(78,-11,o),
(139,-11,cs)
);
},
{
closed = 1;
nodes = (
(108,32,o),
(84,48,o),
(84,79,cs),
(84,116,o),
(114,132,o),
(137,132,cs),
(170,132,o),
(189,108,o),
(189,79,cs),
(189,54,o),
(169,32,o),
(137,32,cs)
);
},
{
closed = 1;
nodes = (
(123,193,o),
(93,202,o),
(93,236,cs),
(93,267,o),
(115,282,o),
(140,282,cs),
(161,282,o),
(184,271,o),
(184,236,cs),
(184,216,o),
(167,193,o),
(138,193,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
24 6 2 3 4 1 66 0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 2 1 83 0 1 1 24 1 68 36 38 36 36 46 45 6 32
CALL[ ]	/* CallFunction */";
};
width = 274;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(182,-12,o),
(230,29,o),
(230,75,cs),
(230,117,o),
(191,153,o),
(158,161,c),
(184,170,o),
(225,198,o),
(225,245,cs),
(225,283,o),
(196,327,o),
(137,327,cs),
(80,327,o),
(41,286,o),
(41,241,cs),
(41,202,o),
(71,172,o),
(99,161,c),
(75,150,o),
(31,124,o),
(31,71,cs),
(31,14,o),
(85,-12,o),
(129,-12,cs)
);
},
{
closed = 1;
nodes = (
(91,12,o),
(68,43,o),
(68,76,cs),
(68,116,o),
(102,141,o),
(131,141,cs),
(160,141,o),
(193,117,o),
(193,77,cs),
(193,37,o),
(161,12,o),
(128,12,cs)
);
},
{
closed = 1;
nodes = (
(107,182,o),
(77,200,o),
(77,239,cs),
(77,268,o),
(93,301,o),
(136,301,cs),
(180,301,o),
(188,266,o),
(188,245,cs),
(188,206,o),
(160,182,o),
(132,182,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
21 5 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 2 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 2 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
60 58 52 50 46 44 40 38 32 30 42 6 16
CALL[ ]	/* CallFunction */";
};
width = 262;
}
);
note = eightinferior;
},
{
glyphname = nine.dnom;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,-15,o),
(111,-12,o),
(122,-5,cs),
(165,27,o),
(234,116,o),
(234,221,cs),
(234,290,o),
(196,327,o),
(128,327,cs),
(70,327,o),
(15,303,o),
(15,232,cs),
(15,179,o),
(49,134,o),
(109,134,cs),
(156,134,o),
(173,172,o),
(176,180,c),
(172,137,o),
(132,83,o),
(75,28,cs),
(63,16,o),
(62,13,o),
(62,4,cs),
(62,-9,o),
(78,-15,o),
(94,-15,cs)
);
},
{
closed = 1;
nodes = (
(92,191,o),
(80,211,o),
(80,234,cs),
(80,269,o),
(104,277,o),
(120,277,cs),
(149,277,o),
(166,266,o),
(166,233,cs),
(166,214,o),
(155,191,o),
(124,191,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
3 1 0 4 1 66 0 1 5 1 3 4 1 3 91 0 4 0 0 2 4 0 91 0 2 2 21 2 68 34 33 40 38 33 44 34 44 41 38 39 6 18
CALL[ ]	/* CallFunction */";
};
width = 256;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(94,-13,o),
(103,-10,o),
(112,-3,cs),
(155,27,o),
(225,124,o),
(225,223,cs),
(225,295,o),
(192,328,o),
(132,328,cs),
(73,328,o),
(17,297,o),
(17,231,cs),
(17,183,o),
(46,140,o),
(107,140,cs),
(143,140,o),
(170,155,o),
(177,187,c),
(177,138,o),
(114,57,o),
(78,27,cs),
(75,24,o),
(71,20,o),
(68,17,cs),
(64,13,o),
(62,9,o),
(62,4,cs),
(62,-7,o),
(76,-13,o),
(87,-13,cs)
);
},
{
closed = 1;
nodes = (
(87,184,o),
(70,206,o),
(70,235,cs),
(70,274,o),
(97,288,o),
(121,288,cs),
(145,288,o),
(170,278,o),
(170,238,cs),
(170,211,o),
(155,184,o),
(119,184,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
6 1 4 3 1 66 0 1 5 1 3 4 1 3 91 0 4 0 0 2 4 0 91 0 2 2 21 2 68 34 33 40 38 33 44 34 44 40 38 40 6 29
CALL[ ]	/* CallFunction */";
};
width = 250;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(77,-12,o),
(80,-11,o),
(84,-9,cs),
(88,-8,o),
(93,-5,o),
(98,-2,cs),
(143,28,o),
(212,127,o),
(212,224,cs),
(212,299,o),
(174,327,o),
(123,327,cs),
(66,327,o),
(20,285,o),
(20,228,cs),
(20,188,o),
(43,148,o),
(104,148,cs),
(160,148,o),
(173,178,o),
(178,193,c),
(175,130,o),
(111,50,o),
(82,23,cs),
(76,18,o),
(71,14,o),
(68,12,cs),
(64,10,o),
(62,7,o),
(62,2,cs),
(62,-10,o),
(73,-12,o),
(76,-12,cs)
);
},
{
closed = 1;
nodes = (
(80,171,o),
(55,195,o),
(55,234,cs),
(55,279,o),
(94,304,o),
(122,304,cs),
(149,304,o),
(175,285,o),
(175,249,cs),
(175,220,o),
(154,171,o),
(111,171,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 4 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 5 1 3 4 1 3 91 0 4 0 0 2 4 0 91 0 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 1 5 1 3 4 1 3 91 0 4 0 0 2 4 0 91 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
36 35 44 42 35 50 36 50 41 38 41 6 18
CALL[ ]	/* CallFunction */";
};
width = 241;
}
);
note = nineinferior;
},
{
glyphname = zero.numr;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(201,495,o),
(254,540,o),
(254,662,cs),
(254,736,o),
(237,837,o),
(138,837,cs),
(51,837,o),
(28,743,o),
(28,648,cs),
(28,531,o),
(77,495,o),
(141,495,cs)
);
},
{
closed = 1;
nodes = (
(108,552,o),
(99,609,o),
(99,656,cs),
(99,716,o),
(108,780,o),
(144,780,cs),
(176,780,o),
(182,706,o),
(182,663,cs),
(182,620,o),
(179,590,o),
(172,575,cs),
(165,560,o),
(154,552,o),
(139,552,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 3 0 3 87 0 1 1 2 83 0 2 2 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 1 0 2 1 91 0 0 3 3 0 79 0 0 0 3 83 0 3 0 3 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
40 40 38 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 279;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(189,495,o),
(243,543,o),
(243,662,cs),
(243,736,o),
(224,837,o),
(137,837,cs),
(55,837,o),
(31,738,o),
(31,648,cs),
(31,534,o),
(79,495,o),
(135,495,cs)
);
},
{
closed = 1;
nodes = (
(99,540,o),
(88,603,o),
(88,656,cs),
(88,721,o),
(103,792,o),
(140,792,cs),
(177,792,o),
(185,712,o),
(185,663,cs),
(185,564,o),
(160,540,o),
(133,540,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 3 0 3 87 0 1 1 2 83 0 2 2 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 1 0 2 1 91 0 0 3 3 0 79 0 0 0 3 83 0 3 0 3 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
40 40 40 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 271;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(172,495,o),
(227,544,o),
(227,662,cs),
(227,736,o),
(206,837,o),
(135,837,cs),
(63,837,o),
(35,734,o),
(35,648,cs),
(35,539,o),
(81,495,o),
(126,495,cs)
);
},
{
closed = 1;
nodes = (
(88,520,o),
(72,595,o),
(72,656,cs),
(72,729,o),
(95,812,o),
(135,812,cs),
(177,812,o),
(189,723,o),
(189,663,cs),
(189,563,o),
(157,520,o),
(125,520,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 3 0 3 87 0 1 1 2 83 0 2 2 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 1 0 2 1 91 0 0 3 3 0 79 0 0 0 3 83 0 3 0 3 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
40 40 40 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 260;
}
);
note = zerosuperior;
},
{
glyphname = one.numr;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(161,500,ls),
(173,500,o),
(192,503,o),
(192,528,cs),
(192,551,o),
(176,556,o),
(157,556,cs),
(144,556,l),
(144,556,l),
(145,619,o),
(146,668,o),
(147,703,cs),
(148,738,o),
(148,763,o),
(149,780,cs),
(150,799,o),
(150,811,o),
(150,815,cs),
(150,820,o),
(149,824,o),
(148,825,cs),
(146,826,o),
(144,827,o),
(142,827,cs),
(137,827,o),
(107,823,o),
(54,823,cs),
(39,823,o),
(21,813,o),
(21,796,cs),
(21,775,o),
(31,770,o),
(54,770,cs),
(56,770,o),
(59,770,o),
(64,771,cs),
(69,771,o),
(72,771,o),
(73,771,cs),
(79,771,o),
(82,766,o),
(82,757,cs),
(82,723,o),
(80,727,o),
(80,683,cs),
(79,653,o),
(77,631,o),
(77,615,cs),
(76,602,o),
(75,587,o),
(75,573,cs),
(75,557,o),
(70,554,o),
(54,554,cs),
(39,554,o),
(22,547,o),
(22,528,cs),
(22,505,o),
(43,500,o),
(59,500,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
2 6 2 0 0 1 0 1 87 4 1 3 3 5 83 0 5 5 12 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
2 6 2 0 0 1 0 1 87 4 1 3 3 5 83 0 5 5 14 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
1 0 43 36 32 30 29 27 14 12 8 5 0 50 1 50 7 15
CALL[ ]	/* CallFunction */";
};
width = 210;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(154,500,ls),
(163,500,o),
(178,502,o),
(178,522,cs),
(178,543,o),
(158,544,o),
(150,544,cs),
(130,544,l),
(130,544,l),
(131,610,o),
(132,661,o),
(133,698,cs),
(134,735,o),
(134,762,o),
(135,779,cs),
(136,800,o),
(136,812,o),
(136,815,cs),
(136,820,o),
(135,824,o),
(134,825,cs),
(132,826,o),
(130,827,o),
(128,827,cs),
(123,827,o),
(96,823,o),
(47,823,cs),
(36,823,o),
(21,815,o),
(21,802,cs),
(21,782,o),
(36,782,o),
(47,782,cs),
(50,782,o),
(55,782,o),
(61,783,cs),
(67,783,o),
(71,783,o),
(73,783,cs),
(82,783,o),
(82,772,o),
(82,769,cs),
(82,730,o),
(80,732,o),
(80,683,cs),
(79,650,o),
(77,625,o),
(77,608,cs),
(76,594,o),
(75,576,o),
(75,561,cs),
(75,544,o),
(68,542,o),
(47,542,cs),
(43,542,o),
(22,538,o),
(22,522,cs),
(22,502,o),
(42,500,o),
(52,500,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
2 6 2 0 0 1 0 1 88 0 3 3 4 83 5 1 4 4 12 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
2 6 2 0 0 1 0 1 88 0 3 3 4 83 5 1 4 4 14 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
1 0 48 44 43 41 37 32 18 16 10 7 0 55 1 55 7 15
CALL[ ]	/* CallFunction */";
};
width = 197;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(144,500,ls),
(153,500,o),
(158,501,o),
(158,512,cs),
(158,524,o),
(147,524,o),
(140,524,cs),
(110,524,l),
(111,595,o),
(112,651,o),
(113,690,cs),
(114,729,o),
(114,757,o),
(115,776,cs),
(116,798,o),
(116,811,o),
(116,815,cs),
(116,820,o),
(115,824,o),
(114,825,cs),
(112,826,o),
(110,827,o),
(108,827,cs),
(104,827,o),
(81,823,o),
(37,823,cs),
(30,823,o),
(21,819,o),
(21,812,cs),
(21,801,o),
(30,802,o),
(37,802,cs),
(42,802,o),
(48,802,o),
(57,803,cs),
(65,803,o),
(70,803,o),
(73,803,cs),
(82,803,o),
(82,794,o),
(82,789,cs),
(82,777,o),
(82,761,o),
(82,751,cs),
(81,737,o),
(80,718,o),
(80,683,cs),
(79,645,o),
(77,616,o),
(77,596,cs),
(76,579,o),
(75,559,o),
(75,541,cs),
(75,524,o),
(65,522,o),
(37,522,cs),
(33,522,o),
(22,520,o),
(22,512,cs),
(22,500,o),
(35,500,o),
(42,500,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
2 6 2 0 0 1 0 1 87 0 3 3 4 83 5 1 4 4 12 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
2 6 2 0 0 1 0 1 87 0 3 3 4 83 5 1 4 4 14 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
1 0 44 40 39 37 33 28 14 12 8 5 0 51 1 51 7 15
CALL[ ]	/* CallFunction */";
};
width = 179;
}
);
note = onesuperior;
},
{
glyphname = two.numr;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,496,o),
(54,498,o),
(58,501,cs),
(61,504,o),
(64,506,o),
(65,507,c),
(83,506,o),
(101,506,o),
(118,505,cs),
(149,504,o),
(184,503,o),
(211,503,cs),
(218,503,o),
(222,509,o),
(223,512,c),
(221,510,o),
(247,548,o),
(247,562,cs),
(247,570,o),
(240,579,o),
(225,579,cs),
(212,579,o),
(203,576,o),
(199,571,cs),
(194,565,o),
(191,561,o),
(190,560,cs),
(189,559,o),
(185,559,o),
(177,559,cs),
(137,561,l),
(172,601,o),
(237,681,o),
(237,754,cs),
(237,799,o),
(208,836,o),
(133,836,cs),
(57,836,o),
(22,780,o),
(22,750,cs),
(22,731,o),
(30,713,o),
(62,713,cs),
(79,713,o),
(97,718,o),
(97,739,cs),
(97,746,o),
(95,751,o),
(92,752,cs),
(88,753,o),
(86,756,o),
(86,759,cs),
(86,766,o),
(106,781,o),
(129,781,cs),
(149,781,o),
(165,770,o),
(165,755,cs),
(165,678,o),
(85,567,o),
(23,519,cs),
(18,515,o),
(15,512,o),
(15,509,cs),
(15,507,o),
(16,504,o),
(18,501,cs),
(20,498,o),
(25,496,o),
(33,496,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
11 1 1 6 1 66 0 1 6 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 3 0 3 4 0 104 0 0 6 6 0 94 0 6 2 1 1 6 1 88 0 3 3 5 83 0 5 5 20 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 4 3 0 3 4 0 104 0 0 6 6 0 94 0 2 1 2 107 0 6 0 1 2 6 1 92 0 3 3 5 83 0 5 5 20 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 4 3 0 3 4 0 104 0 0 6 6 0 94 0 2 1 2 107 0 5 0 3 4 5 3 91 0 6 1 1 6 79 0 6 6 1 84 0 1 6 1 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
39 38 39 43 34 105 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 269;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(44,498,o),
(51,499,o),
(54,502,cs),
(57,504,o),
(60,506,o),
(61,507,c),
(78,506,o),
(95,506,o),
(112,505,cs),
(141,504,o),
(175,503,o),
(200,503,cs),
(203,503,o),
(206,504,o),
(208,507,cs),
(209,509,o),
(211,511,o),
(212,512,c),
(217,521,o),
(222,529,o),
(227,538,cs),
(232,547,o),
(235,554,o),
(235,559,cs),
(235,566,o),
(230,573,o),
(217,573,cs),
(208,573,o),
(195,568,o),
(187,553,cs),
(184,549,o),
(183,547,o),
(183,547,c),
(182,546,l),
(113,549,l),
(153,589,o),
(226,676,o),
(226,754,cs),
(226,799,o),
(197,836,o),
(132,836,cs),
(60,836,o),
(25,776,o),
(25,750,cs),
(25,731,o),
(29,716,o),
(60,716,cs),
(71,716,o),
(86,723,o),
(86,744,cs),
(86,749,o),
(84,753,o),
(81,755,cs),
(77,756,o),
(75,759,o),
(75,762,cs),
(75,765,o),
(80,771,o),
(89,779,cs),
(98,787,o),
(111,791,o),
(128,791,cs),
(155,791,o),
(168,774,o),
(168,755,cs),
(168,678,o),
(88,567,o),
(26,519,cs),
(21,515,o),
(18,512,o),
(18,509,cs),
(18,507,o),
(19,505,o),
(21,502,cs),
(22,499,o),
(27,498,o),
(34,498,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
60 1 6 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 6 2 1 1 6 1 87 0 3 3 5 83 0 5 5 20 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 2 1 2 107 0 6 0 1 2 6 1 91 0 3 3 5 83 0 5 5 20 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 2 1 2 107 0 5 0 3 4 5 3 91 0 6 1 1 6 77 0 6 6 1 83 0 1 6 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
23 38 39 43 34 103 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 260;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(42,501,o),
(47,502,o),
(50,503,cs),
(52,504,o),
(54,506,o),
(55,507,c),
(72,506,o),
(88,506,o),
(104,505,cs),
(131,504,o),
(163,503,o),
(184,503,cs),
(187,503,o),
(190,504,o),
(192,507,cs),
(193,509,o),
(195,511,o),
(196,512,c),
(216,550,o),
(218,548,o),
(218,554,cs),
(218,555,o),
(217,557,o),
(216,560,cs),
(215,562,o),
(211,563,o),
(206,563,cs),
(197,563,o),
(194,557,o),
(191,553,cs),
(184,541,o),
(178,534,o),
(175,531,cs),
(172,528,o),
(169,526,o),
(168,526,cs),
(79,529,l),
(128,572,o),
(210,672,o),
(210,754,cs),
(210,799,o),
(182,836,o),
(130,836,cs),
(67,836,o),
(29,778,o),
(29,750,cs),
(29,731,o),
(36,721,o),
(50,721,cs),
(51,721,o),
(55,722,o),
(61,725,cs),
(67,727,o),
(70,733,o),
(70,744,cs),
(70,749,o),
(68,753,o),
(65,755,cs),
(61,756,o),
(59,759,o),
(59,762,cs),
(59,775,o),
(81,808,o),
(126,808,cs),
(161,808,o),
(172,786,o),
(172,755,cs),
(172,678,o),
(92,567,o),
(30,519,cs),
(25,515,o),
(22,512,o),
(22,509,cs),
(22,504,o),
(26,501,o),
(35,501,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 6 2 1 1 6 1 87 0 3 3 5 83 0 5 5 20 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 5 0 3 4 5 3 91 0 6 1 1 6 79 0 6 6 1 83 2 1 1 6 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
39 37 41 42 34 105 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 247;
}
);
note = twosuperior;
},
{
glyphname = three.numr;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(145,495,o),
(228,541,o),
(228,609,cs),
(228,653,o),
(193,678,o),
(153,678,cs),
(146,678,o),
(142,677,o),
(137,676,c),
(136,679,l),
(136,679,l),
(171,692,o),
(224,715,o),
(224,772,cs),
(224,828,o),
(174,836,o),
(138,836,cs),
(71,836,o),
(28,779,o),
(28,749,cs),
(28,737,o),
(37,729,o),
(49,729,cs),
(74,729,o),
(84,744,o),
(88,753,cs),
(96,772,o),
(111,794,o),
(132,794,cs),
(143,794,o),
(152,787,o),
(152,774,cs),
(152,729,o),
(97,702,o),
(60,676,cs),
(59,675,o),
(56,672,o),
(52,669,cs),
(48,665,o),
(46,660,o),
(46,655,cs),
(46,644,o),
(48,637,o),
(51,633,cs),
(54,629,o),
(57,627,o),
(60,627,cs),
(65,627,o),
(72,629,o),
(80,632,cs),
(87,635,o),
(97,636,o),
(108,636,cs),
(135,636,o),
(156,628,o),
(156,605,cs),
(156,563,o),
(106,545,o),
(73,545,cs),
(59,545,o),
(69,567,o),
(44,567,cs),
(25,567,o),
(16,550,o),
(16,533,cs),
(16,508,o),
(36,495,o),
(77,495,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
70 1 0 7 0 1 4 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 7 6 0 6 7 0 104 0 0 4 6 0 4 102 5 1 4 2 6 4 2 102 0 3 2 1 2 3 96 0 2 0 1 2 1 87 0 6 6 8 83 0 8 8 20 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 7 6 0 6 7 0 104 0 0 4 6 0 4 102 0 4 5 6 4 5 102 0 5 2 6 5 2 102 0 3 2 1 2 3 96 0 2 0 1 2 1 87 0 6 6 8 83 0 8 8 20 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 7 6 0 6 7 0 104 0 0 4 6 0 4 102 0 4 5 6 4 5 102 0 5 2 6 5 2 102 0 3 2 1 2 3 96 0 8 0 6 7 8 6 91 0 2 3 1 2 79 0 2 2 1 83 0 1 2 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 36 44 33 38 35 35 38 34 9 24
CALL[ ]	/* CallFunction */";
};
width = 253;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(140,495,o),
(217,546,o),
(217,609,cs),
(217,653,o),
(177,677,o),
(140,677,cs),
(137,677,o),
(135,677,o),
(133,677,cs),
(130,676,o),
(128,676,o),
(126,676,cs),
(123,675,o),
(121,675,o),
(120,675,c),
(149,688,o),
(213,720,o),
(213,784,cs),
(213,831,o),
(156,836,o),
(132,836,cs),
(67,836,o),
(31,776,o),
(31,749,cs),
(31,738,o),
(41,731,o),
(48,731,cs),
(67,731,o),
(74,744,o),
(77,753,c),
(89,782,o),
(108,800,o),
(125,800,cs),
(145,800,o),
(155,794,o),
(155,781,cs),
(155,725,o),
(100,703,o),
(63,676,cs),
(62,675,o),
(59,672,o),
(55,669,cs),
(51,665,o),
(49,660,o),
(49,655,cs),
(49,645,o),
(51,639,o),
(55,637,cs),
(59,634,o),
(62,633,o),
(63,633,cs),
(66,633,o),
(72,635,o),
(81,638,cs),
(90,641,o),
(100,642,o),
(111,642,cs),
(138,642,o),
(159,632,o),
(159,605,cs),
(159,557,o),
(108,536,o),
(76,536,cs),
(57,536,o),
(61,558,o),
(40,558,cs),
(25,558,o),
(19,542,o),
(19,527,cs),
(19,506,o),
(45,495,o),
(76,495,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 10 1 9 7 0 9 7 102 0 7 8 0 7 8 102 0 8 0 6 8 6 87 0 0 0 2 83 0 2 2 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 0 9 10 0 9 10 102 0 10 7 0 10 7 102 0 7 8 0 7 8 102 0 8 0 6 8 6 87 0 0 0 2 83 0 2 2 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 0 9 10 0 9 10 102 0 10 7 0 10 7 102 0 7 8 0 7 8 102 0 2 0 0 1 2 0 91 0 8 6 6 8 79 0 8 8 6 83 0 6 8 6 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
67 65 64 62 35 36 38 33 17 25 38 36 38 11 24
CALL[ ]	/* CallFunction */";
};
width = 245;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(136,495,o),
(201,557,o),
(201,609,cs),
(201,653,o),
(153,675,o),
(121,675,cs),
(118,675,o),
(116,675,o),
(114,675,cs),
(111,674,o),
(109,674,o),
(107,674,cs),
(104,673,o),
(102,673,o),
(101,673,c),
(112,684,o),
(197,717,o),
(197,784,cs),
(197,830,o),
(157,836,o),
(136,836,cs),
(71,836,o),
(35,776,o),
(35,749,cs),
(35,739,o),
(39,734,o),
(46,734,cs),
(54,734,o),
(58,744,o),
(61,753,cs),
(73,788,o),
(93,810,o),
(129,810,cs),
(153,810,o),
(159,800,o),
(159,781,cs),
(159,725,o),
(104,703,o),
(67,676,cs),
(66,675,o),
(63,672,o),
(59,669,cs),
(55,665,o),
(53,660,o),
(53,655,cs),
(53,644,o),
(64,643,o),
(67,643,cs),
(70,643,o),
(76,645,o),
(85,648,cs),
(94,651,o),
(104,652,o),
(115,652,cs),
(142,652,o),
(163,640,o),
(163,605,cs),
(163,551,o),
(111,521,o),
(80,521,cs),
(53,521,o),
(50,543,o),
(35,543,cs),
(24,543,o),
(23,534,o),
(23,527,cs),
(23,504,o),
(51,495,o),
(74,495,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 3 0 1 3 104 0 10 9 7 9 10 7 104 0 7 8 9 7 8 102 5 4 2 3 0 9 10 3 9 91 0 8 0 6 8 6 87 0 0 0 2 83 0 2 2 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 1 0 3 0 1 3 104 0 10 9 7 9 10 7 104 0 7 8 9 7 8 102 0 2 0 0 1 2 0 91 5 4 2 3 0 9 10 3 9 91 0 8 6 6 8 79 0 8 8 6 83 0 6 8 6 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
69 67 66 64 35 36 40 33 17 25 37 36 39 11 24
CALL[ ]	/* CallFunction */";
};
width = 233;
}
);
note = threesuperior;
},
{
glyphname = four.numr;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(228,503,ls),
(255,503,o),
(264,507,o),
(264,526,cs),
(264,547,o),
(247,551,o),
(236,551,cs),
(233,551,o),
(231,552,o),
(231,553,cs),
(231,554,o),
(231,556,o),
(232,559,cs),
(232,562,o),
(232,565,o),
(233,569,c),
(243,569,l),
(243,569,l),
(264,569,o),
(270,586,o),
(270,597,cs),
(270,616,o),
(261,625,o),
(242,625,cs),
(237,625,l),
(241,671,o),
(250,731,o),
(250,807,cs),
(250,830,o),
(232,840,o),
(213,840,cs),
(197,840,o),
(181,831,o),
(174,822,cs),
(140,779,o),
(143,783,o),
(116,746,cs),
(99,723,o),
(63,675,o),
(22,620,cs),
(13,609,o),
(8,601,o),
(5,596,cs),
(2,591,o),
(1,585,o),
(1,580,cs),
(1,574,o),
(4,570,o),
(9,569,cs),
(14,568,o),
(23,567,o),
(34,567,cs),
(40,567,o),
(50,567,o),
(65,567,cs),
(79,567,o),
(93,567,o),
(108,568,cs),
(119,569,o),
(128,569,o),
(137,569,cs),
(145,569,o),
(154,569,o),
(165,569,c),
(164,558,ls),
(164,554,o),
(160,552,o),
(153,551,c),
(151,550,o),
(146,550,o),
(139,550,cs),
(131,549,o),
(124,549,o),
(117,548,cs),
(104,547,o),
(89,543,o),
(89,528,cs),
(89,508,o),
(107,503,o),
(119,503,cs)
);
},
{
closed = 1;
nodes = (
(100,623,o),
(98,624,o),
(98,627,cs),
(98,628,o),
(99,630,o),
(100,631,cs),
(101,632,o),
(102,634,o),
(103,635,cs),
(178,743,l),
(169,626,l),
(154,625,o),
(140,624,o),
(127,624,cs),
(114,623,o),
(106,623,o),
(104,623,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
65 1 5 4 23 1 0 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
9 7 2 5 8 6 2 3 0 5 3 91 2 1 0 0 1 0 1 88 0 4 4 20 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 4 5 4 106 9 7 2 5 8 6 2 3 0 5 3 91 2 1 0 1 1 0 79 2 1 0 0 1 84 0 1 0 1 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
63 61 0 0 61 70 63 70 0 60 0 59 39 46 116 22 52 36 10 21
CALL[ ]	/* CallFunction */";
};
width = 295;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(224,503,ls),
(239,503,o),
(253,503,o),
(253,522,cs),
(253,542,o),
(232,542,o),
(224,542,cs),
(220,542,o),
(215,544,o),
(215,552,cs),
(215,555,o),
(216,570,o),
(219,581,c),
(235,581,l),
(235,581,l),
(254,581,o),
(259,596,o),
(259,603,cs),
(259,618,o),
(250,625,o),
(232,625,cs),
(219,625,l),
(220,646,o),
(232,803,o),
(232,811,cs),
(232,836,o),
(207,837,o),
(202,837,cs),
(189,837,o),
(173,826,o),
(170,822,cs),
(125,766,o),
(84,710,o),
(18,620,cs),
(12,612,o),
(8,606,o),
(7,602,cs),
(5,598,o),
(4,594,o),
(4,591,cs),
(4,582,o),
(13,578,o),
(30,578,cs),
(42,578,o),
(75,579,o),
(104,580,cs),
(115,581,o),
(125,581,o),
(135,581,cs),
(145,581,o),
(155,581,o),
(166,581,c),
(162,557,ls),
(159,546,o),
(153,545,o),
(142,542,cs),
(140,541,o),
(136,541,o),
(131,541,cs),
(125,540,o),
(119,540,o),
(113,539,cs),
(102,539,o),
(92,533,o),
(92,522,cs),
(92,507,o),
(106,503,o),
(115,503,cs)
);
},
{
closed = 1;
nodes = (
(82,623,o),
(80,624,o),
(80,627,cs),
(80,628,o),
(81,630,o),
(82,631,cs),
(83,632,o),
(84,634,o),
(85,635,cs),
(175,758,l),
(165,626,l),
(147,625,o),
(130,624,o),
(114,624,cs),
(97,623,o),
(88,623,o),
(86,623,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
66 1 6 5 1 66 22 1 0 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
10 8 2 6 9 7 2 4 0 6 4 91 3 2 2 0 0 1 0 1 88 0 5 5 20 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 5 6 5 106 10 8 2 6 9 7 2 4 0 6 4 91 3 2 2 0 1 1 0 79 3 2 2 0 0 1 84 0 1 0 1 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
64 62 0 0 62 71 64 71 0 61 0 60 41 43 117 17 20 52 37 11 22
CALL[ ]	/* CallFunction */";
};
width = 283;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(218,503,ls),
(229,503,o),
(237,503,o),
(237,515,cs),
(237,527,o),
(223,527,o),
(218,527,cs),
(206,527,o),
(189,526,o),
(189,537,cs),
(189,544,o),
(190,576,o),
(193,601,c),
(229,601,ls),
(240,601,o),
(243,610,o),
(243,613,cs),
(243,621,o),
(237,625,o),
(226,625,cs),
(193,625,l),
(196,704,o),
(206,795,o),
(206,811,cs),
(206,832,o),
(190,832,o),
(186,832,cs),
(177,832,o),
(167,825,o),
(164,822,cs),
(119,766,o),
(78,710,o),
(12,620,cs),
(8,615,o),
(8,612,o),
(8,609,cs),
(8,601,o),
(13,597,o),
(24,597,cs),
(30,597,o),
(40,597,o),
(55,598,cs),
(69,599,o),
(83,599,o),
(98,600,cs),
(109,601,o),
(119,601,o),
(129,601,cs),
(139,601,o),
(149,601,o),
(160,601,c),
(156,542,ls),
(156,531,o),
(148,528,o),
(136,527,c),
(134,526,o),
(130,526,o),
(125,526,cs),
(119,525,o),
(113,525,o),
(107,524,cs),
(102,524,o),
(96,519,o),
(96,512,cs),
(96,505,o),
(104,503,o),
(109,503,cs)
);
},
{
closed = 1;
nodes = (
(56,623,o),
(54,624,o),
(54,627,cs),
(54,628,o),
(55,630,o),
(56,631,cs),
(57,632,o),
(58,634,o),
(59,635,cs),
(171,783,l),
(159,626,l),
(136,625,o),
(114,624,o),
(94,624,cs),
(74,623,o),
(63,623,o),
(60,623,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
64 1 6 5 1 66 22 1 0 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
3 2 2 0 4 1 6 0 96 0 1 4 1 93 10 8 2 6 9 7 2 4 0 6 4 91 0 5 5 20 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
3 2 2 0 4 1 4 0 1 104 0 1 4 1 93 10 8 2 6 9 7 2 4 0 6 4 91 0 5 5 20 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
3 2 2 0 4 1 4 0 1 104 0 1 1 105 10 8 2 6 9 7 2 4 0 6 4 91 0 5 5 20 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 5 6 5 106 3 2 2 0 4 1 4 0 1 104 0 1 1 105 10 8 2 6 4 4 6 79 10 8 2 6 6 4 83 9 7 2 4 6 4 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
63 60 0 0 60 69 63 69 0 59 0 58 39 43 117 17 20 52 37 11 22
CALL[ ]	/* CallFunction */";
};
width = 266;
}
);
note = foursuperior;
},
{
glyphname = five.numr;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(168,487,o),
(250,542,o),
(250,608,cs),
(250,668,o),
(215,703,o),
(155,703,cs),
(139,703,o),
(109,692,o),
(101,679,c),
(111,735,l),
(126,735,o),
(177,754,o),
(190,760,cs),
(212,772,o),
(242,802,o),
(242,821,cs),
(242,824,o),
(241,827,o),
(238,832,cs),
(235,836,o),
(228,838,o),
(215,838,cs),
(200,838,o),
(191,830,o),
(188,827,cs),
(156,797,o),
(66,805,o),
(55,783,cs),
(53,779,o),
(45,737,o),
(36,655,cs),
(35,648,o),
(34,639,o),
(34,635,cs),
(34,616,o),
(38,606,o),
(45,606,cs),
(81,606,o),
(88,645,o),
(132,645,cs),
(168,645,o),
(178,625,o),
(178,606,cs),
(178,570,o),
(150,529,o),
(110,529,cs),
(86,529,o),
(79,540,o),
(79,551,cs),
(79,566,o),
(88,559,o),
(88,575,cs),
(88,586,o),
(79,592,o),
(60,592,cs),
(47,592,o),
(20,574,o),
(20,542,cs),
(20,527,o),
(27,487,o),
(99,487,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 1 0 17 1 6 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 2 0 1 2 104 0 7 6 4 6 7 4 104 0 4 5 5 4 94 0 2 0 6 7 2 6 91 0 5 0 3 5 3 88 0 0 0 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 2 0 1 2 104 0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 2 0 6 7 2 6 91 0 5 0 3 5 3 88 0 0 0 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 0 1 0 106 0 1 2 1 106 0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 2 0 6 7 2 6 91 0 5 3 3 5 79 0 5 5 3 84 0 3 5 3 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
35 38 40 38 38 37 27 34 8 23
CALL[ ]	/* CallFunction */";
};
width = 272;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(166,487,o),
(237,543,o),
(237,608,cs),
(237,664,o),
(203,697,o),
(147,697,cs),
(126,697,o),
(101,686,o),
(88,673,c),
(101,747,l),
(120,751,o),
(175,764,o),
(190,773,cs),
(209,782,o),
(229,806,o),
(229,821,cs),
(229,824,o),
(228,827,o),
(226,831,cs),
(224,834,o),
(218,836,o),
(209,836,cs),
(198,836,o),
(192,830,o),
(189,827,cs),
(157,797,o),
(67,805,o),
(56,783,cs),
(54,778,o),
(48,736,o),
(37,655,cs),
(36,648,o),
(35,639,o),
(35,635,cs),
(35,620,o),
(39,612,o),
(46,612,cs),
(74,612,o),
(90,651,o),
(133,651,cs),
(170,651,o),
(179,620,o),
(179,606,cs),
(179,565,o),
(152,523,o),
(90,523,cs),
(77,523,o),
(66,530,o),
(66,545,cs),
(66,561,o),
(80,552,o),
(80,569,cs),
(80,580,o),
(72,586,o),
(55,586,cs),
(42,586,o),
(21,570,o),
(21,542,cs),
(21,518,o),
(39,487,o),
(88,487,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
67 1 1 0 15 1 5 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 6 5 3 5 6 3 104 0 3 4 4 3 94 0 1 0 5 6 1 5 91 0 4 0 2 4 2 88 0 0 0 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 6 5 3 5 6 3 104 0 3 4 5 3 4 102 0 1 0 5 6 1 5 91 0 4 0 2 4 2 88 0 0 0 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 0 1 0 106 0 6 5 3 5 6 3 104 0 3 4 5 3 4 102 0 1 0 5 6 1 5 91 0 4 2 2 4 79 0 4 4 2 84 0 2 4 2 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
35 40 40 36 38 45 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 261;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(155,487,o),
(219,541,o),
(219,608,cs),
(219,659,o),
(184,687,o),
(136,687,cs),
(105,687,o),
(89,676,o),
(70,663,c),
(87,767,l),
(100,771,o),
(172,783,o),
(192,793,cs),
(201,798,o),
(211,813,o),
(211,821,cs),
(211,826,o),
(208,833,o),
(201,833,cs),
(198,833,o),
(195,831,o),
(191,827,cs),
(159,797,o),
(69,805,o),
(58,783,cs),
(56,778,o),
(50,736,o),
(39,655,cs),
(38,648,o),
(37,639,o),
(37,635,cs),
(37,626,o),
(41,622,o),
(48,622,cs),
(64,622,o),
(93,661,o),
(135,661,cs),
(178,661,o),
(181,621,o),
(181,606,cs),
(181,560,o),
(154,513,o),
(92,513,cs),
(68,513,o),
(48,520,o),
(48,535,cs),
(48,549,o),
(68,543,o),
(68,559,cs),
(68,570,o),
(61,576,o),
(48,576,cs),
(35,576,o),
(23,565,o),
(23,542,cs),
(23,518,o),
(41,487,o),
(90,487,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
66 1 1 0 14 1 5 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 6 5 3 5 6 3 104 0 3 4 4 3 94 0 1 0 5 6 1 5 91 0 4 0 2 4 2 88 0 0 0 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 6 5 3 5 6 3 104 0 3 4 5 3 4 102 0 1 0 5 6 1 5 91 0 4 0 2 4 2 88 0 0 0 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 0 1 0 106 0 6 5 3 5 6 3 104 0 3 4 5 3 4 102 0 1 0 5 6 1 5 91 0 4 2 2 4 79 0 4 4 2 84 0 2 4 2 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
35 40 40 36 38 45 33 7 22
CALL[ ]	/* CallFunction */";
};
width = 245;
}
);
note = fivesuperior;
},
{
glyphname = six.numr;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(199,494,o),
(247,527,o),
(247,583,cs),
(247,631,o),
(212,668,o),
(152,668,cs),
(129,668,o),
(112,661,o),
(101,654,cs),
(94,650,o),
(89,646,o),
(84,641,c),
(84,687,o),
(158,776,o),
(185,798,cs),
(193,805,o),
(194,810,o),
(194,814,cs),
(194,829,o),
(171,833,o),
(160,833,cs),
(153,833,o),
(144,830,o),
(135,823,cs),
(91,790,o),
(21,691,o),
(21,607,cs),
(21,524,o),
(80,494,o),
(142,494,cs)
);
},
{
closed = 1;
nodes = (
(122,544,o),
(95,554,o),
(95,588,cs),
(95,607,o),
(103,632,o),
(135,632,cs),
(162,632,o),
(175,610,o),
(175,587,cs),
(175,555,o),
(149,544,o),
(136,544,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
5 1 3 4 1 4 3 1 104 0 1 4 1 93 0 0 0 4 3 0 4 91 0 2 2 20 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
5 1 3 4 1 4 3 1 104 0 1 1 105 0 0 0 4 3 0 4 91 0 2 2 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 0 2 106 5 1 3 4 1 4 3 1 104 0 1 1 105 0 0 4 4 0 79 0 0 0 4 83 0 4 0 4 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
37 36 45 43 36 51 37 51 42 38 41 6 18
CALL[ ]	/* CallFunction */";
};
width = 255;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(176,494,o),
(236,528,o),
(236,585,cs),
(236,630,o),
(198,668,o),
(141,668,cs),
(99,668,o),
(73,643,o),
(73,633,cs),
(73,683,o),
(146,775,o),
(174,798,cs),
(183,805,o),
(188,811,o),
(188,816,cs),
(188,829,o),
(169,833,o),
(162,833,cs),
(155,833,o),
(147,830,o),
(138,823,cs),
(94,793,o),
(24,690,o),
(24,603,cs),
(24,526,o),
(77,494,o),
(125,494,cs)
);
},
{
closed = 1;
nodes = (
(110,534,o),
(84,547,o),
(84,582,cs),
(84,602,o),
(94,636,o),
(131,636,cs),
(160,636,o),
(178,614,o),
(178,585,cs),
(178,546,o),
(147,534,o),
(129,534,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 0 0 4 3 0 4 91 5 1 3 0 1 3 1 87 0 2 2 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 0 2 106 0 0 0 4 3 0 4 91 5 1 3 1 1 3 79 5 1 3 3 1 83 0 1 3 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
36 35 44 42 35 50 36 50 42 38 41 6 18
CALL[ ]	/* CallFunction */";
};
width = 249;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(175,494,o),
(221,531,o),
(221,588,cs),
(221,628,o),
(198,668,o),
(137,668,cs),
(75,668,o),
(61,631,o),
(58,622,c),
(61,685,o),
(127,769,o),
(159,798,cs),
(165,803,o),
(170,807,o),
(174,809,cs),
(177,811,o),
(179,814,o),
(179,819,cs),
(179,831,o),
(168,833,o),
(165,833,cs),
(164,833,o),
(161,832,o),
(157,831,cs),
(153,829,o),
(148,826,o),
(143,823,cs),
(98,790,o),
(29,697,o),
(29,597,cs),
(29,522,o),
(67,494,o),
(118,494,cs)
);
},
{
closed = 1;
nodes = (
(92,518,o),
(69,536,o),
(69,572,cs),
(69,599,o),
(82,643,o),
(126,643,cs),
(157,643,o),
(183,621,o),
(183,582,cs),
(183,537,o),
(149,518,o),
(119,518,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 0 0 4 3 0 4 91 5 1 3 0 1 3 1 87 0 2 2 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 0 2 106 0 0 0 4 3 0 4 91 5 1 3 1 1 3 79 5 1 3 3 1 83 0 1 3 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
36 35 44 42 35 50 36 50 41 38 41 6 18
CALL[ ]	/* CallFunction */";
};
width = 240;
}
);
note = sixsuperior;
},
{
glyphname = seven.numr;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(61,485,o),
(72,490,o),
(79,501,c),
(226,782,ls),
(234,797,o),
(239,807,o),
(241,812,cs),
(243,816,o),
(244,819,o),
(244,822,cs),
(244,823,o),
(243,825,o),
(241,826,cs),
(239,827,o),
(234,827,o),
(227,827,cs),
(203,827,o),
(75,823,o),
(53,823,cs),
(38,823,o),
(25,812,o),
(25,793,cs),
(25,778,o),
(35,766,o),
(50,766,cs),
(76,766,o),
(106,768,o),
(130,768,cs),
(134,768,o),
(136,766,o),
(136,763,cs),
(136,758,o),
(116,715,o),
(75,635,cs),
(34,554,o),
(14,511,o),
(14,506,cs),
(14,495,o),
(28,485,o),
(44,485,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
0 2 0 2 107 0 0 0 1 83 0 1 1 12 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 2 0 2 107 0 0 0 1 83 0 1 1 14 0 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
39 116 120 3 18
CALL[ ]	/* CallFunction */";
};
width = 238;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(53,487,o),
(63,492,o),
(68,501,cs),
(221,791,ls),
(226,800,o),
(230,807,o),
(231,810,cs),
(232,813,o),
(233,816,o),
(233,819,cs),
(233,824,o),
(227,827,o),
(216,827,cs),
(190,827,o),
(76,823,o),
(49,823,cs),
(34,823,o),
(25,814,o),
(25,799,cs),
(25,788,o),
(31,778,o),
(46,778,cs),
(79,778,o),
(116,780,o),
(145,780,cs),
(149,780,o),
(151,778,o),
(151,775,cs),
(151,767,o),
(122,713,o),
(84,640,cs),
(46,567,o),
(17,512,o),
(17,506,cs),
(17,495,o),
(28,487,o),
(40,487,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
0 2 0 2 107 0 0 0 1 83 0 1 1 12 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 2 0 2 107 0 0 0 1 83 0 1 1 14 0 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
38 116 120 3 18
CALL[ ]	/* CallFunction */";
};
width = 231;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(44,491,o),
(50,494,o),
(53,501,cs),
(215,806,l),
(217,809,o),
(218,811,o),
(218,814,cs),
(218,823,o),
(212,827,o),
(201,827,cs),
(178,827,o),
(62,823,o),
(44,823,cs),
(29,823,o),
(25,816,o),
(25,809,cs),
(25,808,o),
(26,806,o),
(28,803,cs),
(29,800,o),
(34,798,o),
(41,798,cs),
(66,798,o),
(88,798,o),
(106,799,cs),
(123,800,o),
(144,800,o),
(167,800,cs),
(171,800,o),
(173,798,o),
(173,795,cs),
(173,787,o),
(147,741,o),
(98,649,cs),
(48,557,o),
(22,513,o),
(22,506,cs),
(22,496,o),
(26,491,o),
(35,491,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
0 2 0 2 107 0 0 0 1 83 0 1 1 12 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 2 0 2 107 0 0 0 1 83 0 1 1 14 0 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
37 116 88 3 18
CALL[ ]	/* CallFunction */";
};
width = 221;
}
);
note = sevensuperior;
},
{
glyphname = eight.numr;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(216,496,o),
(257,534,o),
(257,583,cs),
(257,626,o),
(234,661,o),
(185,669,c),
(212,672,o),
(252,701,o),
(252,753,cs),
(252,793,o),
(212,835,o),
(144,835,cs),
(71,835,o),
(34,794,o),
(34,749,cs),
(34,706,o),
(64,673,o),
(92,669,c),
(59,664,o),
(24,630,o),
(24,579,cs),
(24,523,o),
(68,496,o),
(140,496,cs)
);
},
{
closed = 1;
nodes = (
(118,550,o),
(95,559,o),
(95,587,cs),
(95,623,o),
(123,633,o),
(141,633,cs),
(177,633,o),
(186,610,o),
(186,587,cs),
(186,571,o),
(173,550,o),
(141,550,cs)
);
},
{
closed = 1;
nodes = (
(127,706,o),
(104,713,o),
(104,741,cs),
(104,772,o),
(127,777,o),
(143,777,cs),
(159,777,o),
(181,772,o),
(181,737,cs),
(181,724,o),
(169,706,o),
(142,706,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
19 3 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 3 2 4 3 91 0 2 0 1 2 1 87 0 5 5 0 83 0 0 0 20 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 1 1 2 79 0 2 2 1 83 0 1 2 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 38 36 36 46 40 6 21
CALL[ ]	/* CallFunction */";
};
width = 282;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(207,496,o),
(246,538,o),
(246,583,cs),
(246,626,o),
(217,661,o),
(174,669,c),
(196,671,o),
(241,705,o),
(241,753,cs),
(241,790,o),
(204,835,o),
(138,835,cs),
(71,835,o),
(37,794,o),
(37,749,cs),
(37,708,o),
(69,674,o),
(95,669,c),
(66,661,o),
(27,632,o),
(27,579,cs),
(27,523,o),
(78,496,o),
(139,496,cs)
);
},
{
closed = 1;
nodes = (
(108,539,o),
(84,555,o),
(84,586,cs),
(84,623,o),
(114,639,o),
(137,639,cs),
(170,639,o),
(189,615,o),
(189,586,cs),
(189,561,o),
(169,539,o),
(137,539,cs)
);
},
{
closed = 1;
nodes = (
(123,700,o),
(93,709,o),
(93,743,cs),
(93,774,o),
(115,789,o),
(140,789,cs),
(161,789,o),
(184,778,o),
(184,743,cs),
(184,723,o),
(167,700,o),
(138,700,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
23 5 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 3 2 4 3 91 0 2 0 1 2 1 87 0 5 5 0 83 0 0 0 20 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 1 1 2 79 0 2 2 1 83 0 1 2 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 38 36 36 46 44 6 21
CALL[ ]	/* CallFunction */";
};
width = 274;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(182,496,o),
(230,537,o),
(230,583,cs),
(230,625,o),
(191,661,o),
(158,669,c),
(184,678,o),
(225,706,o),
(225,753,cs),
(225,791,o),
(196,835,o),
(137,835,cs),
(80,835,o),
(41,794,o),
(41,749,cs),
(41,710,o),
(71,680,o),
(99,669,c),
(75,658,o),
(31,632,o),
(31,579,cs),
(31,522,o),
(85,496,o),
(129,496,cs)
);
},
{
closed = 1;
nodes = (
(91,520,o),
(68,551,o),
(68,584,cs),
(68,624,o),
(102,649,o),
(131,649,cs),
(160,649,o),
(193,625,o),
(193,585,cs),
(193,545,o),
(161,520,o),
(128,520,cs)
);
},
{
closed = 1;
nodes = (
(107,690,o),
(77,708,o),
(77,747,cs),
(77,776,o),
(93,809,o),
(136,809,cs),
(180,809,o),
(188,774,o),
(188,753,cs),
(188,714,o),
(160,690,o),
(132,690,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
21 5 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 3 2 4 3 91 0 2 0 1 2 1 87 0 5 5 0 83 0 0 0 20 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 1 1 2 79 0 2 2 1 83 0 1 2 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
60 58 52 50 46 44 40 38 32 30 42 6 16
CALL[ ]	/* CallFunction */";
};
width = 262;
}
);
note = eightsuperior;
},
{
glyphname = nine.numr;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,492,o),
(111,495,o),
(122,502,cs),
(165,534,o),
(234,623,o),
(234,728,cs),
(234,797,o),
(196,834,o),
(128,834,cs),
(70,834,o),
(15,810,o),
(15,739,cs),
(15,686,o),
(49,641,o),
(109,641,cs),
(156,641,o),
(173,679,o),
(176,687,c),
(172,644,o),
(132,590,o),
(75,535,cs),
(63,523,o),
(62,520,o),
(62,511,cs),
(62,498,o),
(78,492,o),
(94,492,cs)
);
},
{
closed = 1;
nodes = (
(92,698,o),
(80,718,o),
(80,741,cs),
(80,776,o),
(104,784,o),
(120,784,cs),
(149,784,o),
(166,773,o),
(166,740,cs),
(166,721,o),
(155,698,o),
(124,698,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
3 1 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 107 0 4 0 0 2 4 0 91 5 1 3 3 1 83 0 1 1 20 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 2 0 2 107 0 1 5 1 3 4 1 3 91 0 4 0 0 4 79 0 4 4 0 83 0 0 4 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
34 33 40 38 33 44 34 44 41 38 39 6 18
CALL[ ]	/* CallFunction */";
};
width = 257;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(94,494,o),
(103,497,o),
(112,504,cs),
(155,534,o),
(225,631,o),
(225,730,cs),
(225,802,o),
(192,835,o),
(132,835,cs),
(73,835,o),
(17,804,o),
(17,738,cs),
(17,690,o),
(46,647,o),
(107,647,cs),
(143,647,o),
(170,662,o),
(177,694,c),
(177,645,o),
(114,564,o),
(78,534,cs),
(75,531,o),
(71,527,o),
(68,524,cs),
(64,520,o),
(62,516,o),
(62,511,cs),
(62,500,o),
(76,494,o),
(87,494,cs)
);
},
{
closed = 1;
nodes = (
(87,691,o),
(70,713,o),
(70,742,cs),
(70,781,o),
(97,795,o),
(121,795,cs),
(145,795,o),
(170,785,o),
(170,745,cs),
(170,718,o),
(155,691,o),
(119,691,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 4 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 107 0 4 0 0 2 4 0 91 5 1 3 3 1 83 0 1 1 20 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 2 0 2 107 0 1 5 1 3 4 1 3 91 0 4 0 0 4 79 0 4 4 0 83 0 0 4 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
33 32 39 37 32 43 33 43 40 38 39 6 18
CALL[ ]	/* CallFunction */";
};
width = 250;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(76,497,o),
(79,498,o),
(83,500,cs),
(87,501,o),
(92,504,o),
(97,507,cs),
(142,537,o),
(211,636,o),
(211,733,cs),
(211,808,o),
(173,836,o),
(122,836,cs),
(65,836,o),
(19,794,o),
(19,737,cs),
(19,697,o),
(42,657,o),
(103,657,cs),
(159,657,o),
(172,687,o),
(177,702,c),
(174,639,o),
(110,559,o),
(81,532,cs),
(75,527,o),
(70,523,o),
(67,521,cs),
(63,519,o),
(61,516,o),
(61,511,cs),
(61,499,o),
(72,497,o),
(75,497,cs)
);
},
{
closed = 1;
nodes = (
(79,680,o),
(54,704,o),
(54,743,cs),
(54,788,o),
(93,813,o),
(121,813,cs),
(148,813,o),
(174,794,o),
(174,758,cs),
(174,729,o),
(153,680,o),
(110,680,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 4 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 107 0 4 0 0 2 4 0 91 5 1 3 3 1 83 0 1 1 20 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 2 0 2 107 0 1 5 1 3 4 1 3 91 0 4 0 0 4 79 0 4 4 0 83 0 0 4 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
36 35 44 42 35 50 36 50 41 38 41 6 18
CALL[ ]	/* CallFunction */";
};
width = 240;
}
);
note = ninesuperior;
},
{
glyphname = fraction;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(54,6,o),
(72,30,o),
(80,42,cs),
(101,74,o),
(177,217,o),
(253,364,cs),
(319,493,o),
(395,641,o),
(395,650,cs),
(395,655,o),
(382,676,o),
(358,676,cs),
(328,676,o),
(316,648,o),
(284,602,c),
(284,600,o),
(233,508,o),
(136,326,cs),
(69,202,o),
(-12,48,o),
(-12,37,cs),
(-12,26,o),
(-6,6,o),
(21,6,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 1 1 0 1 66 0 0 1 0 106 0 1 1 13 1 68 45 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 389;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(41,12,o),
(55,29,o),
(62,42,cs),
(76,70,o),
(134,176,o),
(232,364,cs),
(328,548,o),
(377,643,o),
(377,650,cs),
(377,655,o),
(367,670,o),
(350,670,cs),
(318,670,o),
(311,642,o),
(287,602,c),
(287,600,o),
(236,508,o),
(139,326,cs),
(41,142,o),
(-9,46,o),
(-9,37,cs),
(-9,26,o),
(-2,12,o),
(17,12,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 1 0 106 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 9 values pushed */
0 0 1 0 106 0 1 1 97
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
45 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 374;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(27,22,o),
(32,31,o),
(36,42,cs),
(50,75,o),
(101,172,o),
(204,365,cs),
(301,548,o),
(351,643,o),
(351,650,cs),
(351,657,o),
(347,660,o),
(338,660,cs),
(314,660,o),
(309,640,o),
(291,602,c),
(291,600,o),
(240,508,o),
(143,326,cs),
(45,142,o),
(-5,46,o),
(-5,37,cs),
(-5,27,o),
(1,22,o),
(12,22,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 1 0 106 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 9 values pushed */
0 0 1 0 106 0 1 1 97
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
44 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 352;
}
);
note = fraction;
unicode = 8260;
},
{
glyphname = onehalf;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(90,-19,o),
(113,-7,o),
(120,5,cs),
(525,768,l),
(530,776,o),
(539,796,o),
(539,807,cs),
(539,818,o),
(534,837,o),
(507,837,cs),
(474,837,o),
(459,833,o),
(430,774,cs),
(403,721,o),
(375,663,o),
(348,607,cs),
(329,568,o),
(299,515,o),
(249,423,cs),
(199,329,o),
(126,198,o),
(31,18,c),
(30,17,o),
(29,15,o),
(29,14,cs),
(29,13,o),
(29,12,o),
(29,11,cs),
(29,-9,o),
(56,-19,o),
(69,-19,cs)
);
},
{
closed = 1;
nodes = (
(344,-5,o),
(352,-4,o),
(356,-1,cs),
(360,2,o),
(363,4,o),
(364,6,c),
(375,6,o),
(447,2,o),
(510,2,cs),
(517,2,o),
(521,8,o),
(522,11,c),
(520,9,o),
(546,47,o),
(546,61,cs),
(546,69,o),
(539,78,o),
(524,78,cs),
(512,78,o),
(497,73,o),
(490,60,cs),
(489,59,o),
(486,58,o),
(479,58,cs),
(436,60,l),
(471,100,o),
(536,180,o),
(536,253,cs),
(536,298,o),
(508,335,o),
(433,335,cs),
(357,335,o),
(321,279,o),
(321,249,cs),
(321,230,o),
(326,212,o),
(366,212,cs),
(383,212,o),
(396,219,o),
(396,240,cs),
(396,248,o),
(394,253,o),
(391,254,cs),
(387,255,o),
(385,258,o),
(385,261,cs),
(385,262,o),
(389,266,o),
(398,272,cs),
(407,277,o),
(417,280,o),
(429,280,cs),
(448,280,o),
(464,269,o),
(464,254,cs),
(464,177,o),
(384,66,o),
(322,18,cs),
(317,14,o),
(314,11,o),
(314,8,cs),
(314,6,o),
(315,3,o),
(317,0,cs),
(319,-3,o),
(324,-5,o),
(332,-5,cs)
);
},
{
closed = 1;
nodes = (
(195,500,ls),
(207,500,o),
(226,503,o),
(226,528,cs),
(226,551,o),
(206,556,o),
(191,556,cs),
(178,556,l),
(178,556,l),
(182,714,o),
(184,781,o),
(184,815,cs),
(184,823,o),
(181,827,o),
(176,827,cs),
(171,827,o),
(141,823,o),
(88,823,cs),
(71,823,o),
(55,813,o),
(55,796,cs),
(55,773,o),
(69,770,o),
(88,770,cs),
(90,770,o),
(93,770,o),
(98,771,cs),
(103,771,o),
(106,771,o),
(107,771,cs),
(114,771,o),
(116,764,o),
(116,757,cs),
(116,723,o),
(114,727,o),
(114,683,cs),
(112,619,o),
(112,606,o),
(109,573,cs),
(108,556,o),
(103,554,o),
(88,554,cs),
(79,554,o),
(56,549,o),
(56,528,cs),
(56,505,o),
(76,500,o),
(93,500,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
95 1 9 14 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 12 11 8 11 12 8 104 0 8 14 11 8 14 102 4 15 2 2 0 3 13 2 3 91 0 13 0 11 12 13 11 91 6 1 5 5 0 83 7 1 0 0 20 67 0 14 14 9 84 0 9 9 13 67 10 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 12 11 8 11 12 8 104 0 8 14 11 8 14 102 4 15 2 2 0 3 13 2 3 91 0 13 0 11 12 13 11 91 6 1 5 5 0 83 7 1 0 0 20 67 0 14 14 9 84 10 1 9 9 13 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 12 11 8 11 12 8 104 0 8 14 11 8 14 102 4 15 2 2 0 3 13 2 3 91 0 13 0 11 12 13 11 91 0 0 0 20 67 6 1 5 5 7 83 0 7 7 12 67 0 14 14 9 84 10 1 9 9 13 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 12 11 8 11 12 8 104 0 8 14 11 8 14 102 4 15 2 2 0 3 13 2 3 91 0 13 0 11 12 13 11 91 0 0 0 20 67 6 1 5 5 7 83 0 7 7 12 67 0 14 14 9 84 0 9 9 13 67 0 10 10 16 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 70 values pushed */
0 0 7 0 106 0 12 11 8 11 12 8 104 0 8 14 11 8 14 102 4 15 2 2 0 3 13 2 3 91 0 13 0 11 12 13 11 91 6 1 5 5 7 83 0 7 7 14 67 0 14 14 9 84 0 9 9 13 67 0 10 10 16 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
34 33 146 144 137 135 129 127 120 118 107 105 103 97 88 86 77 70 66 64 63 61 47 45 41 38 33 83 34 83 28 26 18 16 16 15
CALL[ ]	/* CallFunction */";
};
width = 583;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(80,-19,o),
(96,-10,o),
(103,5,cs),
(508,768,ls),
(513,777,o),
(522,796,o),
(522,807,cs),
(522,815,o),
(521,831,o),
(497,831,cs),
(465,831,o),
(453,815,o),
(433,774,cs),
(394,694,o),
(386,677,o),
(359,621,cs),
(340,582,o),
(308,525,o),
(253,423,cs),
(221,364,o),
(202,331,o),
(190,311,cs),
(180,294,o),
(170,278,o),
(164,267,cs),
(123,194,o),
(109,166,o),
(35,18,cs),
(34,16,o),
(33,13,o),
(33,9,cs),
(33,-6,o),
(49,-19,o),
(61,-19,cs)
);
},
{
closed = 1;
nodes = (
(348,-2,o),
(355,-1,o),
(358,2,cs),
(361,4,o),
(364,6,o),
(365,7,c),
(382,6,o),
(399,6,o),
(416,5,cs),
(445,4,o),
(479,3,o),
(504,3,cs),
(507,3,o),
(510,4,o),
(512,7,cs),
(513,9,o),
(515,11,o),
(516,12,c),
(521,21,o),
(526,29,o),
(531,38,cs),
(536,47,o),
(539,54,o),
(539,59,cs),
(539,66,o),
(534,73,o),
(521,73,cs),
(512,73,o),
(499,68,o),
(491,53,cs),
(488,49,o),
(487,47,o),
(487,47,c),
(486,46,l),
(417,49,l),
(457,89,o),
(530,176,o),
(530,254,cs),
(530,299,o),
(501,336,o),
(436,336,cs),
(364,336,o),
(329,276,o),
(329,250,cs),
(329,231,o),
(333,216,o),
(364,216,cs),
(375,216,o),
(390,223,o),
(390,244,cs),
(390,249,o),
(388,253,o),
(385,255,cs),
(381,256,o),
(379,259,o),
(379,262,cs),
(379,265,o),
(384,271,o),
(393,279,cs),
(402,287,o),
(415,291,o),
(432,291,cs),
(459,291,o),
(472,274,o),
(472,255,cs),
(472,178,o),
(392,67,o),
(330,19,cs),
(325,15,o),
(322,12,o),
(322,9,cs),
(322,7,o),
(323,5,o),
(325,2,cs),
(326,-1,o),
(331,-2,o),
(338,-2,cs)
);
},
{
closed = 1;
nodes = (
(181,500,ls),
(190,500,o),
(205,502,o),
(205,522,cs),
(205,543,o),
(185,544,o),
(177,544,cs),
(157,544,l),
(157,544,l),
(158,610,o),
(159,661,o),
(160,698,cs),
(161,735,o),
(161,762,o),
(162,779,cs),
(163,800,o),
(163,812,o),
(163,815,cs),
(163,820,o),
(162,824,o),
(161,825,cs),
(159,826,o),
(157,827,o),
(155,827,cs),
(150,827,o),
(123,823,o),
(74,823,cs),
(63,823,o),
(48,815,o),
(48,802,cs),
(48,782,o),
(63,782,o),
(74,782,cs),
(77,782,o),
(82,782,o),
(88,783,cs),
(94,783,o),
(98,783,o),
(100,783,cs),
(109,783,o),
(109,772,o),
(109,769,cs),
(109,730,o),
(107,732,o),
(107,683,cs),
(106,650,o),
(104,625,o),
(104,608,cs),
(103,594,o),
(102,576,o),
(102,561,cs),
(102,544,o),
(95,542,o),
(74,542,cs),
(70,542,o),
(49,538,o),
(49,522,cs),
(49,502,o),
(69,500,o),
(79,500,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
151 1 14 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 12 11 8 11 12 8 104 0 8 14 11 8 14 102 2 15 2 0 0 1 13 0 1 92 0 13 0 11 12 13 11 91 0 3 3 4 83 6 5 2 4 4 12 67 0 14 14 9 83 10 1 9 9 13 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 12 11 8 11 12 8 104 0 8 14 11 8 14 102 2 15 2 0 0 1 13 0 1 92 0 13 0 11 12 13 11 91 0 6 6 20 67 0 3 3 4 83 5 1 4 4 12 67 0 14 14 9 84 10 1 9 9 13 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 12 11 8 11 12 8 104 0 8 14 11 8 14 102 2 15 2 0 0 1 13 0 1 92 0 13 0 11 12 13 11 91 0 6 6 20 67 0 3 3 4 83 5 1 4 4 12 67 0 14 14 9 84 0 9 9 13 67 0 10 10 16 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 70 values pushed */
0 6 4 6 106 0 12 11 8 11 12 8 104 0 8 14 11 8 14 102 2 15 2 0 0 1 13 0 1 92 0 13 0 11 12 13 11 91 0 3 3 4 83 5 1 4 4 14 67 0 14 14 9 84 0 9 9 13 67 0 10 10 16 67 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
2 1 150 149 142 140 134 132 125 123 112 110 108 102 95 93 87 85 77 75 49 45 44 42 38 33 19 17 11 8 1 56 2 56 16 26
CALL[ ]	/* CallFunction */";
};
width = 575;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(66,-19,o),
(70,-14,o),
(79,5,cs),
(484,768,ls),
(489,779,o),
(498,796,o),
(498,807,cs),
(498,815,o),
(495,821,o),
(483,821,cs),
(459,821,o),
(441,780,o),
(439,774,c),
(402,698,o),
(377,645,o),
(364,621,cs),
(345,583,o),
(313,522,o),
(259,423,cs),
(230,370,o),
(209,332,o),
(198,310,cs),
(189,294,o),
(179,277,o),
(173,266,cs),
(153,230,o),
(108,142,o),
(41,18,c),
(38,11,o),
(36,1,o),
(36,-7,cs),
(36,-15,o),
(41,-19,o),
(50,-19,cs)
);
},
{
closed = 1;
nodes = (
(353,0,o),
(358,1,o),
(361,2,cs),
(363,3,o),
(365,5,o),
(366,6,c),
(383,5,o),
(399,5,o),
(415,4,cs),
(442,3,o),
(474,2,o),
(495,2,cs),
(498,2,o),
(501,3,o),
(503,6,cs),
(504,8,o),
(506,10,o),
(507,11,c),
(527,49,o),
(529,47,o),
(529,53,cs),
(529,54,o),
(528,56,o),
(527,59,cs),
(526,61,o),
(522,62,o),
(517,62,cs),
(508,62,o),
(505,56,o),
(502,52,cs),
(495,40,o),
(489,33,o),
(486,30,cs),
(483,27,o),
(480,25,o),
(479,25,cs),
(390,28,l),
(439,71,o),
(521,171,o),
(521,253,cs),
(521,298,o),
(493,335,o),
(441,335,cs),
(378,335,o),
(340,277,o),
(340,249,cs),
(340,230,o),
(347,220,o),
(361,220,cs),
(362,220,o),
(366,221,o),
(372,224,cs),
(378,226,o),
(381,232,o),
(381,243,cs),
(381,248,o),
(379,252,o),
(376,254,cs),
(372,255,o),
(370,258,o),
(370,261,cs),
(370,274,o),
(392,307,o),
(437,307,cs),
(472,307,o),
(483,285,o),
(483,254,cs),
(483,177,o),
(403,66,o),
(341,18,cs),
(336,14,o),
(333,11,o),
(333,8,cs),
(333,3,o),
(337,0,o),
(346,0,cs)
);
},
{
closed = 1;
nodes = (
(161,500,ls),
(166,500,o),
(175,501,o),
(175,512,cs),
(175,524,o),
(164,524,o),
(157,524,cs),
(127,524,l),
(128,595,o),
(129,651,o),
(130,690,cs),
(131,729,o),
(131,757,o),
(132,776,cs),
(133,798,o),
(133,811,o),
(133,815,cs),
(133,820,o),
(132,824,o),
(131,825,cs),
(129,826,o),
(127,827,o),
(125,827,cs),
(121,827,o),
(98,823,o),
(54,823,cs),
(47,823,o),
(38,819,o),
(38,812,cs),
(38,801,o),
(47,802,o),
(54,802,cs),
(59,802,o),
(65,802,o),
(74,803,cs),
(82,803,o),
(87,803,o),
(90,803,cs),
(99,803,o),
(99,794,o),
(99,789,cs),
(99,777,o),
(99,761,o),
(99,751,cs),
(98,737,o),
(97,718,o),
(97,683,cs),
(95,612,o),
(92,574,o),
(92,541,cs),
(92,523,o),
(65,522,o),
(54,522,cs),
(50,522,o),
(39,520,o),
(39,512,cs),
(39,500,o),
(52,500,o),
(59,500,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 12 11 8 11 12 8 104 0 8 14 11 8 14 102 4 15 2 2 0 3 13 2 3 91 0 13 0 11 12 13 11 91 0 5 5 0 83 7 6 2 0 0 12 67 0 14 14 9 84 10 1 9 9 13 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
0 12 11 8 11 12 8 104 0 8 14 11 8 14 102 4 15 2 2 0 3 13 2 3 91 0 13 0 11 12 13 11 91 6 1 0 0 14 67 0 5 5 7 83 0 7 7 14 67 0 14 14 9 84 10 1 9 9 13 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
37 36 152 150 143 141 136 134 125 123 113 111 109 103 94 92 82 78 77 75 71 66 50 48 44 41 36 89 37 89 32 30 22 20 16 15
CALL[ ]	/* CallFunction */";
};
width = 563;
}
);
note = onehalf;
unicode = 189;
},
{
glyphname = onethird;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(88,-19,o),
(111,-7,o),
(118,5,cs),
(523,768,l),
(528,776,o),
(537,796,o),
(537,807,cs),
(537,818,o),
(532,837,o),
(505,837,cs),
(472,837,o),
(457,833,o),
(428,774,cs),
(401,721,o),
(373,663,o),
(346,607,cs),
(327,568,o),
(297,515,o),
(247,423,cs),
(197,329,o),
(124,198,o),
(29,18,c),
(28,17,o),
(27,15,o),
(27,14,cs),
(27,13,o),
(27,12,o),
(27,11,cs),
(27,-9,o),
(54,-19,o),
(67,-19,cs)
);
},
{
closed = 1;
nodes = (
(442,-9,o),
(525,37,o),
(525,105,cs),
(525,149,o),
(490,174,o),
(450,174,cs),
(443,174,o),
(439,173,o),
(434,172,c),
(433,175,l),
(433,175,l),
(468,188,o),
(521,211,o),
(521,268,cs),
(521,324,o),
(471,332,o),
(435,332,cs),
(368,332,o),
(325,275,o),
(325,245,cs),
(325,233,o),
(334,225,o),
(346,225,cs),
(371,225,o),
(381,240,o),
(385,249,cs),
(393,268,o),
(408,290,o),
(429,290,cs),
(440,290,o),
(449,283,o),
(449,270,cs),
(449,225,o),
(394,198,o),
(357,172,cs),
(356,171,o),
(353,168,o),
(349,165,cs),
(345,161,o),
(343,156,o),
(343,151,cs),
(343,140,o),
(345,133,o),
(348,129,cs),
(351,125,o),
(354,123,o),
(357,123,cs),
(362,123,o),
(369,125,o),
(377,128,cs),
(384,131,o),
(394,132,o),
(405,132,cs),
(432,132,o),
(453,124,o),
(453,101,cs),
(453,59,o),
(403,41,o),
(370,41,cs),
(356,41,o),
(366,63,o),
(341,63,cs),
(322,63,o),
(313,46,o),
(313,29,cs),
(313,4,o),
(333,-9,o),
(374,-9,cs)
);
},
{
closed = 1;
nodes = (
(195,500,ls),
(206,500,o),
(226,503,o),
(226,528,cs),
(226,550,o),
(199,556,o),
(191,556,cs),
(178,556,l),
(178,556,l),
(179,619,o),
(180,668,o),
(181,703,cs),
(182,738,o),
(182,763,o),
(183,780,cs),
(184,799,o),
(184,811,o),
(184,815,cs),
(184,820,o),
(183,824,o),
(182,825,cs),
(180,826,o),
(178,827,o),
(176,827,cs),
(141,827,o),
(96,823,o),
(88,823,cs),
(73,823,o),
(55,813,o),
(55,796,cs),
(55,772,o),
(71,770,o),
(88,770,cs),
(90,770,o),
(93,770,o),
(98,771,cs),
(102,771,o),
(105,771,o),
(107,771,cs),
(116,771,o),
(116,760,o),
(116,757,cs),
(116,723,o),
(114,727,o),
(114,683,cs),
(112,626,o),
(109,593,o),
(109,573,cs),
(108,557,o),
(107,554,o),
(88,554,cs),
(75,554,o),
(56,549,o),
(56,528,cs),
(56,504,o),
(78,500,o),
(93,500,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
18 1 0 3 157 1 9 16 87 1 13 9 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 16 15 9 15 16 9 104 0 9 13 15 9 13 102 14 1 13 11 15 13 11 102 0 12 11 8 11 12 96 2 18 2 0 0 1 17 0 1 92 0 17 0 15 16 17 15 91 4 1 3 3 5 83 7 6 2 5 5 12 67 0 11 11 8 83 10 1 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 16 15 9 15 16 9 104 0 9 13 15 9 13 102 14 1 13 11 15 13 11 102 0 12 11 8 11 12 96 2 18 2 0 0 1 17 0 1 92 0 17 0 15 16 17 15 91 0 7 7 20 67 4 1 3 3 5 83 6 1 5 5 12 67 0 11 11 8 83 10 1 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 81 values pushed */
0 16 15 9 15 16 9 104 0 9 13 15 9 13 102 14 1 13 11 15 13 11 102 0 12 11 10 11 12 96 2 18 2 0 0 1 17 0 1 92 0 17 0 15 16 17 15 91 0 7 7 20 67 4 1 3 3 5 83 6 1 5 5 12 67 0 11 11 10 83 0 10 10 24 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 87 values pushed */
0 16 15 9 15 16 9 104 0 9 13 15 9 13 102 0 13 14 15 13 14 102 0 14 11 15 14 11 102 0 12 11 10 11 12 96 2 18 2 0 0 1 17 0 1 92 0 17 0 15 16 17 15 91 0 7 7 20 67 4 1 3 3 5 83 6 1 5 5 12 67 0 11 11 10 83 0 10 10 24 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 87 values pushed */
0 7 5 7 106 0 16 15 9 15 16 9 104 0 9 13 15 9 13 102 0 13 14 15 13 14 102 0 14 11 15 14 11 102 0 12 11 10 11 12 96 2 18 2 0 0 1 17 0 1 92 0 17 0 15 16 17 15 91 4 1 3 3 5 83 6 1 5 5 14 67 0 11 11 10 83 0 10 10 24 67 0 8 8 21 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
1 0 148 146 140 138 134 132 120 118 117 115 109 107 104 102 99 97 91 89 82 80 72 70 46 43 42 39 35 33 32 30 16 14 10 7 0 53 1 53 19 15
CALL[ ]	/* CallFunction */";
};
width = 570;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(79,-19,o),
(95,-10,o),
(102,5,cs),
(507,768,ls),
(512,777,o),
(521,796,o),
(521,807,cs),
(521,815,o),
(520,831,o),
(496,831,cs),
(464,831,o),
(452,815,o),
(432,774,cs),
(393,694,o),
(385,677,o),
(358,621,cs),
(339,582,o),
(307,525,o),
(252,423,cs),
(220,364,o),
(201,331,o),
(189,311,cs),
(179,294,o),
(169,278,o),
(163,267,cs),
(122,194,o),
(108,166,o),
(34,18,cs),
(33,16,o),
(32,13,o),
(32,9,cs),
(32,-6,o),
(48,-19,o),
(60,-19,cs)
);
},
{
closed = 1;
nodes = (
(441,-8,o),
(518,43,o),
(518,106,cs),
(518,150,o),
(478,174,o),
(441,174,cs),
(438,174,o),
(436,174,o),
(434,174,cs),
(431,173,o),
(429,173,o),
(427,173,cs),
(424,172,o),
(422,172,o),
(421,172,c),
(450,185,o),
(514,217,o),
(514,281,cs),
(514,328,o),
(457,333,o),
(433,333,cs),
(368,333,o),
(332,273,o),
(332,246,cs),
(332,235,o),
(342,228,o),
(349,228,cs),
(368,228,o),
(375,241,o),
(378,250,c),
(390,279,o),
(409,297,o),
(426,297,cs),
(446,297,o),
(456,291,o),
(456,278,cs),
(456,222,o),
(401,200,o),
(364,173,cs),
(363,172,o),
(360,169,o),
(356,166,cs),
(352,162,o),
(350,157,o),
(350,152,cs),
(350,142,o),
(352,136,o),
(356,134,cs),
(360,131,o),
(363,130,o),
(364,130,cs),
(367,130,o),
(373,132,o),
(382,135,cs),
(391,138,o),
(401,139,o),
(412,139,cs),
(439,139,o),
(460,129,o),
(460,102,cs),
(460,54,o),
(409,33,o),
(377,33,cs),
(358,33,o),
(362,55,o),
(341,55,cs),
(326,55,o),
(320,39,o),
(320,24,cs),
(320,3,o),
(346,-8,o),
(377,-8,cs)
);
},
{
closed = 1;
nodes = (
(181,500,ls),
(190,500,o),
(205,502,o),
(205,522,cs),
(205,543,o),
(185,544,o),
(177,544,cs),
(157,544,l),
(157,544,l),
(158,610,o),
(159,661,o),
(160,698,cs),
(161,735,o),
(161,762,o),
(162,779,cs),
(163,800,o),
(163,812,o),
(163,815,cs),
(163,820,o),
(162,824,o),
(161,825,cs),
(159,826,o),
(157,827,o),
(155,827,cs),
(150,827,o),
(123,823,o),
(74,823,cs),
(63,823,o),
(48,815,o),
(48,802,cs),
(48,782,o),
(63,782,o),
(74,782,cs),
(77,782,o),
(82,782,o),
(88,783,cs),
(94,783,o),
(98,783,o),
(100,783,cs),
(109,783,o),
(109,772,o),
(109,769,cs),
(109,730,o),
(107,732,o),
(107,683,cs),
(106,650,o),
(104,625,o),
(104,608,cs),
(103,594,o),
(102,576,o),
(102,561,cs),
(102,544,o),
(95,542,o),
(74,542,cs),
(70,542,o),
(49,538,o),
(49,522,cs),
(49,502,o),
(69,500,o),
(79,500,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 9 8 11 8 9 11 104 13 12 2 11 17 8 11 17 102 18 1 17 15 8 17 15 102 0 15 16 8 15 16 102 2 19 2 0 0 1 10 0 1 92 0 10 0 8 9 10 8 91 0 3 3 4 83 6 5 2 4 4 12 67 0 16 16 14 83 0 14 14 24 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 9 8 11 8 9 11 104 13 12 2 11 17 8 11 17 102 18 1 17 15 8 17 15 102 0 15 16 8 15 16 102 2 19 2 0 0 1 10 0 1 92 0 10 0 8 9 10 8 91 0 3 3 4 83 6 5 2 4 4 12 67 0 16 16 7 83 14 1 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 9 8 11 8 9 11 104 13 12 2 11 17 8 11 17 102 18 1 17 15 8 17 15 102 0 15 16 8 15 16 102 2 19 2 0 0 1 10 0 1 92 0 10 0 8 9 10 8 91 0 3 3 4 83 6 5 2 4 4 12 67 0 16 16 14 83 0 14 14 24 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 84 values pushed */
0 9 8 11 8 9 11 104 13 12 2 11 17 8 11 17 102 0 17 18 8 17 18 102 0 18 15 8 18 15 102 0 15 16 8 15 16 102 2 19 2 0 0 1 10 0 1 92 0 10 0 8 9 10 8 91 0 3 3 4 83 6 5 2 4 4 12 67 0 16 16 14 83 0 14 14 24 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 88 values pushed */
0 9 8 11 8 9 11 104 13 12 2 11 17 8 11 17 102 0 17 18 8 17 18 102 0 18 15 8 18 15 102 0 15 16 8 15 16 102 2 19 2 0 0 1 10 0 1 92 0 10 0 8 9 10 8 91 0 6 6 20 67 0 3 3 4 83 5 1 4 4 12 67 0 16 16 14 83 0 14 14 24 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 88 values pushed */
0 6 4 6 106 0 9 8 11 8 9 11 104 13 12 2 11 17 8 11 17 102 0 17 18 8 17 18 102 0 18 15 8 18 15 102 0 15 16 8 15 16 102 2 19 2 0 0 1 10 0 1 92 0 10 0 8 9 10 8 91 0 3 3 4 83 5 1 4 4 14 67 0 16 16 14 83 0 14 14 24 67 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 44 values pushed */
2 1 158 156 155 153 147 145 142 140 136 134 128 126 125 124 123 122 113 111 105 103 99 97 87 85 77 75 49 45 44 42 38 33 19 17 11 8 1 56 2 56 20 26
CALL[ ]	/* CallFunction */";
};
width = 562;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(66,-19,o),
(70,-14,o),
(79,5,cs),
(484,768,ls),
(489,779,o),
(498,796,o),
(498,807,cs),
(498,815,o),
(495,821,o),
(483,821,cs),
(459,821,o),
(441,780,o),
(439,774,c),
(402,698,o),
(377,645,o),
(364,621,cs),
(345,583,o),
(313,522,o),
(259,423,cs),
(230,370,o),
(209,332,o),
(198,310,cs),
(189,294,o),
(179,277,o),
(173,266,cs),
(153,230,o),
(108,142,o),
(41,18,c),
(38,11,o),
(36,1,o),
(36,-7,cs),
(36,-15,o),
(41,-19,o),
(50,-19,cs)
);
},
{
closed = 1;
nodes = (
(443,-9,o),
(508,53,o),
(508,105,cs),
(508,149,o),
(460,171,o),
(428,171,cs),
(425,171,o),
(423,171,o),
(421,171,cs),
(418,170,o),
(416,170,o),
(414,170,cs),
(411,169,o),
(409,169,o),
(408,169,c),
(419,180,o),
(504,213,o),
(504,280,cs),
(504,326,o),
(464,332,o),
(443,332,cs),
(378,332,o),
(342,272,o),
(342,245,cs),
(342,235,o),
(346,230,o),
(353,230,cs),
(361,230,o),
(365,240,o),
(368,249,cs),
(380,284,o),
(400,306,o),
(436,306,cs),
(460,306,o),
(466,296,o),
(466,277,cs),
(466,221,o),
(411,199,o),
(374,172,cs),
(373,171,o),
(370,168,o),
(366,165,cs),
(362,161,o),
(360,156,o),
(360,151,cs),
(360,140,o),
(371,139,o),
(374,139,cs),
(377,139,o),
(383,141,o),
(392,144,cs),
(401,147,o),
(411,148,o),
(422,148,cs),
(449,148,o),
(470,136,o),
(470,101,cs),
(470,47,o),
(418,17,o),
(387,17,cs),
(360,17,o),
(357,39,o),
(342,39,cs),
(331,39,o),
(330,30,o),
(330,23,cs),
(330,0,o),
(358,-9,o),
(381,-9,cs)
);
},
{
closed = 1;
nodes = (
(161,500,ls),
(166,500,o),
(175,501,o),
(175,512,cs),
(175,524,o),
(164,524,o),
(157,524,cs),
(127,524,l),
(128,595,o),
(129,651,o),
(130,690,cs),
(131,729,o),
(131,757,o),
(132,776,cs),
(133,798,o),
(133,811,o),
(133,815,cs),
(133,820,o),
(132,824,o),
(131,825,cs),
(129,826,o),
(127,827,o),
(125,827,cs),
(121,827,o),
(98,823,o),
(54,823,cs),
(47,823,o),
(38,819,o),
(38,812,cs),
(38,801,o),
(47,802,o),
(54,802,cs),
(59,802,o),
(65,802,o),
(74,803,cs),
(82,803,o),
(87,803,o),
(90,803,cs),
(99,803,o),
(99,794,o),
(99,789,cs),
(99,777,o),
(99,761,o),
(99,751,cs),
(98,737,o),
(97,718,o),
(97,683,cs),
(95,612,o),
(92,574,o),
(92,541,cs),
(92,523,o),
(65,522,o),
(54,522,cs),
(50,522,o),
(39,520,o),
(39,512,cs),
(39,500,o),
(52,500,o),
(59,500,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 79 values pushed */
0 9 8 11 8 9 11 104 0 18 17 15 17 18 15 104 0 15 16 17 15 16 102 4 19 2 2 0 3 10 2 3 91 0 10 0 8 9 10 8 91 13 12 2 11 0 17 18 11 17 91 0 5 5 0 83 7 6 2 0 0 12 67 0 16 16 14 83 0 14 14 24 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 83 values pushed */
0 9 8 11 8 9 11 104 0 18 17 15 17 18 15 104 0 15 16 17 15 16 102 4 19 2 2 0 3 10 2 3 91 0 10 0 8 9 10 8 91 13 12 2 11 0 17 18 11 17 91 6 1 0 0 14 67 0 5 5 7 83 0 7 7 14 67 0 16 16 14 83 0 14 14 24 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 44 values pushed */
37 36 159 157 156 154 148 146 143 141 137 135 127 125 124 123 122 121 112 110 105 103 99 97 82 78 77 75 71 66 50 48 44 41 36 89 37 89 32 30 22 20 20 15
CALL[ ]	/* CallFunction */";
};
width = 550;
}
);
note = onethird;
unicode = 8531;
},
{
glyphname = twothirds;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(90,-19,o),
(113,-7,o),
(120,5,cs),
(525,768,l),
(530,776,o),
(539,796,o),
(539,807,cs),
(539,818,o),
(534,837,o),
(507,837,cs),
(474,837,o),
(459,833,o),
(430,774,cs),
(403,721,o),
(375,663,o),
(348,607,cs),
(329,568,o),
(299,515,o),
(249,423,cs),
(199,329,o),
(126,198,o),
(31,18,c),
(30,17,o),
(29,15,o),
(29,14,cs),
(29,13,o),
(29,12,o),
(29,11,cs),
(29,-9,o),
(56,-19,o),
(69,-19,cs)
);
},
{
closed = 1;
nodes = (
(446,-9,o),
(529,37,o),
(529,105,cs),
(529,149,o),
(494,174,o),
(454,174,cs),
(447,174,o),
(443,173,o),
(438,172,c),
(437,175,l),
(437,175,l),
(472,188,o),
(525,211,o),
(525,268,cs),
(525,324,o),
(475,332,o),
(439,332,cs),
(372,332,o),
(329,275,o),
(329,245,cs),
(329,233,o),
(338,225,o),
(350,225,cs),
(375,225,o),
(385,240,o),
(389,249,cs),
(397,268,o),
(412,290,o),
(433,290,cs),
(444,290,o),
(453,283,o),
(453,270,cs),
(453,225,o),
(398,198,o),
(361,172,cs),
(360,171,o),
(357,168,o),
(353,165,cs),
(349,161,o),
(347,156,o),
(347,151,cs),
(347,140,o),
(349,133,o),
(352,129,cs),
(355,125,o),
(358,123,o),
(361,123,cs),
(366,123,o),
(373,125,o),
(381,128,cs),
(388,131,o),
(398,132,o),
(409,132,cs),
(436,132,o),
(457,124,o),
(457,101,cs),
(457,59,o),
(407,41,o),
(374,41,cs),
(360,41,o),
(370,63,o),
(345,63,cs),
(326,63,o),
(317,46,o),
(317,29,cs),
(317,4,o),
(337,-9,o),
(378,-9,cs)
);
},
{
closed = 1;
nodes = (
(65,496,o),
(73,498,o),
(77,501,cs),
(80,504,o),
(83,506,o),
(84,507,c),
(102,506,o),
(120,506,o),
(137,505,cs),
(168,504,o),
(203,503,o),
(230,503,cs),
(237,503,o),
(241,509,o),
(242,512,c),
(240,510,o),
(266,548,o),
(266,562,cs),
(266,570,o),
(259,579,o),
(244,579,cs),
(231,579,o),
(222,576,o),
(218,571,cs),
(213,565,o),
(210,561,o),
(209,560,cs),
(208,559,o),
(204,559,o),
(196,559,cs),
(156,561,l),
(191,601,o),
(256,681,o),
(256,754,cs),
(256,799,o),
(227,836,o),
(152,836,cs),
(76,836,o),
(41,780,o),
(41,750,cs),
(41,731,o),
(49,713,o),
(81,713,cs),
(98,713,o),
(116,718,o),
(116,739,cs),
(116,746,o),
(114,751,o),
(111,752,cs),
(107,753,o),
(105,756,o),
(105,759,cs),
(105,766,o),
(125,781,o),
(148,781,cs),
(168,781,o),
(184,770,o),
(184,755,cs),
(184,678,o),
(104,567,o),
(42,519,cs),
(37,515,o),
(34,512,o),
(34,509,cs),
(34,507,o),
(35,504,o),
(37,501,cs),
(39,498,o),
(44,496,o),
(52,496,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
44 1 3 8 166 1 9 16 96 1 13 9 3 66 33 1 8 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 84 values pushed */
0 6 5 2 5 6 2 104 0 2 8 8 2 94 0 16 15 9 15 16 9 104 0 9 13 15 9 13 102 14 1 13 11 15 13 11 102 0 12 11 1 11 12 96 0 8 4 1 3 17 8 3 92 0 17 0 15 16 17 15 91 0 5 5 0 83 7 1 0 0 20 67 0 11 11 1 83 10 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 88 values pushed */
0 6 5 2 5 6 2 104 0 2 8 8 2 94 0 16 15 9 15 16 9 104 0 9 13 15 9 13 102 14 1 13 11 15 13 11 102 0 12 11 10 11 12 96 0 8 4 1 3 17 8 3 92 0 17 0 15 16 17 15 91 0 5 5 0 83 7 1 0 0 20 67 0 11 11 10 83 0 10 10 24 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 101 values pushed */
0 6 5 2 5 6 2 104 0 2 8 8 2 94 0 4 3 17 3 4 17 104 0 16 15 9 15 16 9 104 0 9 13 15 9 13 102 0 13 14 15 13 14 102 0 14 11 15 14 11 102 0 12 11 10 11 12 96 0 8 0 3 4 8 3 92 0 17 0 15 16 17 15 91 0 5 5 0 83 7 1 0 0 20 67 0 11 11 10 83 0 10 10 24 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 99 values pushed */
0 6 5 2 5 6 2 104 0 2 8 8 2 94 0 4 3 17 3 4 17 104 0 16 15 9 15 16 9 104 0 9 13 15 9 13 102 0 13 14 15 13 14 102 0 14 11 15 14 11 102 0 12 11 10 11 12 96 7 1 0 0 5 6 0 5 91 0 8 0 3 4 8 3 92 0 17 0 15 16 17 15 91 0 11 11 10 83 0 10 10 24 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
157 155 149 147 143 141 129 127 126 124 118 116 113 111 108 106 100 98 95 93 86 84 78 76 69 67 56 54 52 46 37 35 28 26 18 16 18 15
CALL[ ]	/* CallFunction */";
};
width = 571;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(87,-19,o),
(103,-10,o),
(110,5,cs),
(515,768,ls),
(520,777,o),
(529,796,o),
(529,807,cs),
(529,815,o),
(528,831,o),
(504,831,cs),
(472,831,o),
(460,815,o),
(440,774,cs),
(401,694,o),
(393,677,o),
(366,621,cs),
(347,582,o),
(315,525,o),
(260,423,cs),
(228,364,o),
(209,331,o),
(197,311,cs),
(187,294,o),
(177,278,o),
(171,267,cs),
(130,194,o),
(116,166,o),
(42,18,cs),
(41,16,o),
(40,13,o),
(40,9,cs),
(40,-6,o),
(56,-19,o),
(68,-19,cs)
);
},
{
closed = 1;
nodes = (
(451,-8,o),
(528,43,o),
(528,106,cs),
(528,150,o),
(488,174,o),
(451,174,cs),
(448,174,o),
(446,174,o),
(444,174,cs),
(441,173,o),
(439,173,o),
(437,173,cs),
(434,172,o),
(432,172,o),
(431,172,c),
(460,185,o),
(524,217,o),
(524,281,cs),
(524,328,o),
(467,333,o),
(443,333,cs),
(378,333,o),
(342,273,o),
(342,246,cs),
(342,235,o),
(352,228,o),
(359,228,cs),
(378,228,o),
(385,241,o),
(388,250,c),
(400,279,o),
(419,297,o),
(436,297,cs),
(456,297,o),
(466,291,o),
(466,278,cs),
(466,222,o),
(411,200,o),
(374,173,cs),
(373,172,o),
(370,169,o),
(366,166,cs),
(362,162,o),
(360,157,o),
(360,152,cs),
(360,142,o),
(362,136,o),
(366,134,cs),
(370,131,o),
(373,130,o),
(374,130,cs),
(377,130,o),
(383,132,o),
(392,135,cs),
(401,138,o),
(411,139,o),
(422,139,cs),
(449,139,o),
(470,129,o),
(470,102,cs),
(470,54,o),
(419,33,o),
(387,33,cs),
(368,33,o),
(372,55,o),
(351,55,cs),
(336,55,o),
(330,39,o),
(330,24,cs),
(330,3,o),
(356,-8,o),
(387,-8,cs)
);
},
{
closed = 1;
nodes = (
(60,498,o),
(67,499,o),
(70,502,cs),
(73,504,o),
(76,506,o),
(77,507,c),
(94,506,o),
(111,506,o),
(128,505,cs),
(157,504,o),
(191,503,o),
(216,503,cs),
(219,503,o),
(222,504,o),
(224,507,cs),
(225,509,o),
(227,511,o),
(228,512,c),
(233,521,o),
(238,529,o),
(243,538,cs),
(248,547,o),
(251,554,o),
(251,559,cs),
(251,566,o),
(246,573,o),
(233,573,cs),
(224,573,o),
(211,568,o),
(203,553,cs),
(200,549,o),
(199,547,o),
(199,547,c),
(198,546,l),
(129,549,l),
(169,589,o),
(242,676,o),
(242,754,cs),
(242,799,o),
(213,836,o),
(148,836,cs),
(76,836,o),
(41,776,o),
(41,750,cs),
(41,731,o),
(45,716,o),
(76,716,cs),
(87,716,o),
(102,723,o),
(102,744,cs),
(102,749,o),
(100,753,o),
(97,755,cs),
(93,756,o),
(91,759,o),
(91,762,cs),
(91,765,o),
(96,771,o),
(105,779,cs),
(114,787,o),
(127,791,o),
(144,791,cs),
(171,791,o),
(184,774,o),
(184,755,cs),
(184,678,o),
(104,567,o),
(42,519,cs),
(37,515,o),
(34,512,o),
(34,509,cs),
(34,507,o),
(35,505,o),
(37,502,cs),
(38,499,o),
(43,498,o),
(50,498,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
61 1 6 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 91 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 10 9 12 9 10 12 104 14 13 2 12 18 9 12 18 102 19 1 18 16 9 18 16 102 0 16 17 9 16 17 102 0 6 2 1 1 11 6 1 91 0 11 0 9 10 11 9 91 0 3 3 5 83 7 1 5 5 20 67 0 17 17 15 83 0 15 15 24 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 87 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 10 9 12 9 10 12 104 14 13 2 12 18 9 12 18 102 19 1 18 16 9 18 16 102 0 16 17 9 16 17 102 0 6 2 1 1 11 6 1 91 0 11 0 9 10 11 9 91 0 3 3 5 83 7 1 5 5 20 67 0 17 17 8 83 15 1 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 91 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 10 9 12 9 10 12 104 14 13 2 12 18 9 12 18 102 19 1 18 16 9 18 16 102 0 16 17 9 16 17 102 0 6 2 1 1 11 6 1 91 0 11 0 9 10 11 9 91 0 3 3 5 83 7 1 5 5 20 67 0 17 17 15 83 0 15 15 24 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 97 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 10 9 12 9 10 12 104 14 13 2 12 18 9 12 18 102 0 18 19 9 18 19 102 0 19 16 9 19 16 102 0 16 17 9 16 17 102 0 6 2 1 1 11 6 1 91 0 11 0 9 10 11 9 91 0 3 3 5 83 7 1 5 5 20 67 0 17 17 15 83 0 15 15 24 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 104 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 2 1 11 1 2 11 104 0 10 9 12 9 10 12 104 14 13 2 12 18 9 12 18 102 0 18 19 9 18 19 102 0 19 16 9 19 16 102 0 16 17 9 16 17 102 0 6 0 1 2 6 1 91 0 11 0 9 10 11 9 91 0 3 3 5 83 7 1 5 5 20 67 0 17 17 15 83 0 15 15 24 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 109 values pushed */
0 7 5 3 5 7 3 104 0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 2 1 11 1 2 11 104 0 10 9 12 9 10 12 104 14 13 2 12 18 9 12 18 102 0 18 19 9 18 19 102 0 19 16 9 19 16 102 0 16 17 9 16 17 102 0 5 0 3 4 5 3 91 0 6 0 1 2 6 1 91 0 11 0 9 10 11 9 91 0 17 17 15 83 0 15 15 24 67 0 8 8 21 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
164 162 161 159 153 151 148 146 142 140 134 132 131 130 129 128 119 117 111 109 105 103 93 91 83 81 23 38 39 43 34 103 35 20 33
CALL[ ]	/* CallFunction */";
};
width = 570;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(82,-19,o),
(86,-14,o),
(95,5,cs),
(500,768,ls),
(505,779,o),
(514,796,o),
(514,807,cs),
(514,815,o),
(511,821,o),
(499,821,cs),
(475,821,o),
(457,780,o),
(455,774,c),
(418,698,o),
(393,645,o),
(380,621,cs),
(361,583,o),
(329,522,o),
(275,423,cs),
(246,370,o),
(225,332,o),
(214,310,cs),
(205,294,o),
(195,277,o),
(189,266,cs),
(169,230,o),
(124,142,o),
(57,18,c),
(54,11,o),
(52,1,o),
(52,-7,cs),
(52,-15,o),
(57,-19,o),
(66,-19,cs)
);
},
{
closed = 1;
nodes = (
(462,-9,o),
(527,53,o),
(527,105,cs),
(527,149,o),
(479,171,o),
(447,171,cs),
(444,171,o),
(442,171,o),
(440,171,cs),
(437,170,o),
(435,170,o),
(433,170,cs),
(430,169,o),
(428,169,o),
(427,169,c),
(438,180,o),
(523,213,o),
(523,280,cs),
(523,326,o),
(483,332,o),
(462,332,cs),
(397,332,o),
(361,272,o),
(361,245,cs),
(361,235,o),
(365,230,o),
(372,230,cs),
(380,230,o),
(384,240,o),
(387,249,cs),
(399,284,o),
(419,306,o),
(455,306,cs),
(479,306,o),
(485,296,o),
(485,277,cs),
(485,221,o),
(430,199,o),
(393,172,cs),
(392,171,o),
(389,168,o),
(385,165,cs),
(381,161,o),
(379,156,o),
(379,151,cs),
(379,140,o),
(390,139,o),
(393,139,cs),
(396,139,o),
(402,141,o),
(411,144,cs),
(420,147,o),
(430,148,o),
(441,148,cs),
(468,148,o),
(489,136,o),
(489,101,cs),
(489,47,o),
(437,17,o),
(406,17,cs),
(379,17,o),
(376,39,o),
(361,39,cs),
(350,39,o),
(349,30,o),
(349,23,cs),
(349,0,o),
(377,-9,o),
(400,-9,cs)
);
},
{
closed = 1;
nodes = (
(53,501,o),
(58,502,o),
(61,503,cs),
(63,504,o),
(65,506,o),
(66,507,c),
(83,506,o),
(99,506,o),
(115,505,cs),
(142,504,o),
(174,503,o),
(195,503,cs),
(198,503,o),
(201,504,o),
(203,507,cs),
(204,509,o),
(206,511,o),
(207,512,c),
(227,550,o),
(229,548,o),
(229,554,cs),
(229,555,o),
(228,557,o),
(227,560,cs),
(226,562,o),
(222,563,o),
(217,563,cs),
(208,563,o),
(205,557,o),
(202,553,cs),
(195,541,o),
(189,534,o),
(186,531,cs),
(183,528,o),
(180,526,o),
(179,526,cs),
(90,529,l),
(139,572,o),
(221,672,o),
(221,754,cs),
(221,799,o),
(193,836,o),
(141,836,cs),
(78,836,o),
(40,778,o),
(40,750,cs),
(40,731,o),
(47,721,o),
(61,721,cs),
(62,721,o),
(66,722,o),
(72,725,cs),
(78,727,o),
(81,733,o),
(81,744,cs),
(81,749,o),
(79,753,o),
(76,755,cs),
(72,756,o),
(70,759,o),
(70,762,cs),
(70,775,o),
(92,808,o),
(137,808,cs),
(172,808,o),
(183,786,o),
(183,755,cs),
(183,678,o),
(103,567,o),
(41,519,cs),
(36,515,o),
(33,512,o),
(33,509,cs),
(33,504,o),
(37,501,o),
(46,501,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 96 values pushed */
0 6 5 2 5 6 2 104 0 2 8 5 2 8 102 0 10 9 12 9 10 12 104 0 19 18 16 18 19 16 104 0 16 17 18 16 17 102 0 8 4 1 3 11 8 3 91 0 11 0 9 10 11 9 91 14 13 2 12 0 18 19 12 18 91 0 0 0 12 67 0 5 5 7 83 0 7 7 20 67 0 17 17 15 83 0 15 15 24 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 94 values pushed */
0 6 5 2 5 6 2 104 0 2 8 5 2 8 102 0 10 9 12 9 10 12 104 0 19 18 16 18 19 16 104 0 16 17 18 16 17 102 0 7 0 5 6 7 5 91 0 8 4 1 3 11 8 3 91 0 11 0 9 10 11 9 91 14 13 2 12 0 18 19 12 18 91 0 0 0 14 67 0 17 17 15 83 0 15 15 24 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
169 167 166 164 158 156 153 151 147 145 137 135 134 133 132 131 122 120 115 113 109 107 98 96 89 87 82 80 71 69 59 57 55 49 40 38 32 30 22 20 20 15
CALL[ ]	/* CallFunction */";
};
width = 569;
}
);
note = twothirds;
unicode = 8532;
},
{
glyphname = onequarter;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(90,-19,o),
(113,-7,o),
(120,5,cs),
(525,768,l),
(530,776,o),
(539,796,o),
(539,807,cs),
(539,818,o),
(534,837,o),
(507,837,cs),
(474,837,o),
(459,833,o),
(430,774,cs),
(403,721,o),
(375,663,o),
(348,607,cs),
(329,568,o),
(299,515,o),
(249,423,cs),
(199,329,o),
(126,198,o),
(31,18,c),
(30,17,o),
(29,15,o),
(29,14,cs),
(29,13,o),
(29,12,o),
(29,11,cs),
(29,-9,o),
(56,-19,o),
(69,-19,cs)
);
},
{
closed = 1;
nodes = (
(495,0,ls),
(522,0,o),
(531,4,o),
(531,23,cs),
(531,44,o),
(514,48,o),
(503,48,cs),
(500,48,o),
(498,49,o),
(498,50,cs),
(498,51,o),
(498,53,o),
(499,56,cs),
(499,59,o),
(499,62,o),
(500,66,c),
(510,66,l),
(510,66,l),
(531,66,o),
(537,83,o),
(537,94,cs),
(537,113,o),
(528,122,o),
(509,122,cs),
(504,122,l),
(508,168,o),
(517,228,o),
(517,304,cs),
(517,327,o),
(499,337,o),
(480,337,cs),
(464,337,o),
(448,328,o),
(441,319,cs),
(407,276,o),
(410,280,o),
(383,243,cs),
(366,220,o),
(330,172,o),
(289,117,cs),
(280,106,o),
(275,98,o),
(272,93,cs),
(269,88,o),
(268,82,o),
(268,77,cs),
(268,71,o),
(271,67,o),
(276,66,cs),
(281,65,o),
(290,64,o),
(301,64,cs),
(307,64,o),
(317,64,o),
(332,64,cs),
(346,64,o),
(360,64,o),
(375,65,cs),
(386,66,o),
(395,66,o),
(404,66,cs),
(412,66,o),
(421,66,o),
(432,66,c),
(431,55,ls),
(431,51,o),
(427,49,o),
(420,48,c),
(418,47,o),
(413,47,o),
(406,47,cs),
(398,46,o),
(391,46,o),
(384,45,cs),
(371,44,o),
(356,40,o),
(356,25,cs),
(356,5,o),
(374,0,o),
(386,0,cs)
);
},
{
closed = 1;
nodes = (
(367,120,o),
(365,121,o),
(365,124,cs),
(365,125,o),
(366,127,o),
(367,128,cs),
(368,129,o),
(369,131,o),
(370,132,cs),
(445,240,l),
(436,123,l),
(421,122,o),
(407,121,o),
(394,121,cs),
(381,120,o),
(373,120,o),
(371,120,cs)
);
},
{
closed = 1;
nodes = (
(193,500,ls),
(204,500,o),
(224,503,o),
(224,528,cs),
(224,550,o),
(197,556,o),
(189,556,cs),
(176,556,l),
(176,556,l),
(177,619,o),
(178,668,o),
(179,703,cs),
(180,738,o),
(180,763,o),
(181,780,cs),
(182,799,o),
(182,811,o),
(182,815,cs),
(182,820,o),
(181,824,o),
(180,825,cs),
(178,826,o),
(176,827,o),
(174,827,cs),
(139,827,o),
(94,823,o),
(86,823,cs),
(71,823,o),
(53,813,o),
(53,796,cs),
(53,772,o),
(69,770,o),
(86,770,cs),
(88,770,o),
(91,770,o),
(96,771,cs),
(100,771,o),
(103,771,o),
(105,771,cs),
(114,771,o),
(114,760,o),
(114,757,cs),
(114,723,o),
(112,727,o),
(112,683,cs),
(110,626,o),
(107,593,o),
(107,573,cs),
(106,557,o),
(105,554,o),
(86,554,cs),
(73,554,o),
(54,549,o),
(54,528,cs),
(54,504,o),
(76,500,o),
(91,500,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
18 1 0 3 152 1 14 13 110 1 9 12 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 13 1 14 1 13 14 104 2 17 2 0 0 1 13 0 1 92 19 16 2 14 18 15 2 12 9 14 12 91 4 1 3 3 5 83 7 6 2 5 5 12 67 11 1 9 9 10 84 0 10 10 13 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 13 1 14 1 13 14 104 2 17 2 0 0 1 13 0 1 92 19 16 2 14 18 15 2 12 9 14 12 92 0 7 7 20 67 4 1 3 3 5 83 6 1 5 5 12 67 11 1 9 9 10 84 0 10 10 13 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
0 7 5 7 106 0 13 1 14 1 13 14 104 2 17 2 0 0 1 13 0 1 92 19 16 2 14 18 15 2 12 9 14 12 92 4 1 3 3 5 83 6 1 5 5 14 67 11 1 9 9 10 84 0 10 10 13 67 0 8 8 21 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 48 values pushed */
150 148 87 87 1 0 148 157 150 157 87 147 87 146 143 141 134 132 118 111 107 106 100 97 93 91 82 80 72 70 46 43 42 39 35 33 32 30 16 14 10 7 0 53 1 53 20 15
CALL[ ]	/* CallFunction */";
};
width = 573;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(79,-19,o),
(95,-10,o),
(102,5,cs),
(507,768,ls),
(512,777,o),
(521,796,o),
(521,807,cs),
(521,815,o),
(520,831,o),
(496,831,cs),
(464,831,o),
(452,815,o),
(432,774,cs),
(393,694,o),
(385,677,o),
(358,621,cs),
(339,582,o),
(307,525,o),
(252,423,cs),
(220,364,o),
(201,331,o),
(189,311,cs),
(179,294,o),
(169,278,o),
(163,267,cs),
(122,194,o),
(108,166,o),
(34,18,cs),
(33,16,o),
(32,13,o),
(32,9,cs),
(32,-6,o),
(48,-19,o),
(60,-19,cs)
);
},
{
closed = 1;
nodes = (
(496,1,ls),
(511,1,o),
(525,1,o),
(525,20,cs),
(525,40,o),
(504,40,o),
(496,40,cs),
(492,40,o),
(487,42,o),
(487,50,cs),
(487,53,o),
(488,68,o),
(491,79,c),
(507,79,l),
(507,79,l),
(526,79,o),
(531,94,o),
(531,101,cs),
(531,116,o),
(522,123,o),
(504,123,cs),
(491,123,l),
(492,144,o),
(504,301,o),
(504,309,cs),
(504,334,o),
(479,335,o),
(474,335,cs),
(461,335,o),
(445,324,o),
(442,320,cs),
(397,264,o),
(356,208,o),
(290,118,cs),
(284,110,o),
(280,104,o),
(279,100,cs),
(277,96,o),
(276,92,o),
(276,89,cs),
(276,80,o),
(285,76,o),
(302,76,cs),
(314,76,o),
(347,77,o),
(376,78,cs),
(387,79,o),
(397,79,o),
(407,79,cs),
(417,79,o),
(427,79,o),
(438,79,c),
(434,55,ls),
(431,44,o),
(425,43,o),
(414,40,cs),
(412,39,o),
(408,39,o),
(403,39,cs),
(397,38,o),
(391,38,o),
(385,37,cs),
(374,37,o),
(364,31,o),
(364,20,cs),
(364,5,o),
(378,1,o),
(387,1,cs)
);
},
{
closed = 1;
nodes = (
(354,121,o),
(352,122,o),
(352,125,cs),
(352,126,o),
(353,128,o),
(354,129,cs),
(355,130,o),
(356,132,o),
(357,133,cs),
(447,256,l),
(437,124,l),
(419,123,o),
(402,122,o),
(386,122,cs),
(369,121,o),
(360,121,o),
(358,121,cs)
);
},
{
closed = 1;
nodes = (
(180,500,ls),
(189,500,o),
(204,502,o),
(204,522,cs),
(204,543,o),
(184,544,o),
(176,544,cs),
(156,544,l),
(156,544,l),
(157,610,o),
(158,661,o),
(159,698,cs),
(160,735,o),
(160,762,o),
(161,779,cs),
(162,800,o),
(162,812,o),
(162,815,cs),
(162,820,o),
(161,824,o),
(160,825,cs),
(158,826,o),
(156,827,o),
(154,827,cs),
(149,827,o),
(122,823,o),
(73,823,cs),
(62,823,o),
(47,815,o),
(47,802,cs),
(47,782,o),
(62,782,o),
(73,782,cs),
(76,782,o),
(81,782,o),
(87,783,cs),
(93,783,o),
(97,783,o),
(99,783,cs),
(108,783,o),
(108,772,o),
(108,769,cs),
(108,730,o),
(106,732,o),
(106,683,cs),
(105,650,o),
(103,625,o),
(103,608,cs),
(102,594,o),
(101,576,o),
(101,561,cs),
(101,544,o),
(94,542,o),
(73,542,cs),
(69,542,o),
(48,538,o),
(48,522,cs),
(48,502,o),
(68,500,o),
(78,500,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
157 1 14 13 1 66 113 1 8 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 13 1 14 1 13 14 104 2 17 2 0 0 1 13 0 1 92 19 16 2 14 18 15 2 12 8 14 12 91 0 3 3 4 83 6 5 2 4 4 12 67 11 10 2 8 8 9 84 0 9 9 13 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 13 1 14 1 13 14 104 2 17 2 0 0 1 13 0 1 92 19 16 2 14 18 15 2 12 8 14 12 92 0 6 6 20 67 0 3 3 4 83 5 1 4 4 12 67 11 10 2 8 8 9 84 0 9 9 13 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
0 6 4 6 106 0 13 1 14 1 13 14 104 2 17 2 0 0 1 13 0 1 92 19 16 2 14 18 15 2 12 8 14 12 92 0 3 3 4 83 5 1 4 4 14 67 11 10 2 8 8 9 84 0 9 9 13 67 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 48 values pushed */
155 153 91 91 2 1 153 162 155 162 91 152 91 151 148 146 137 135 124 117 112 111 110 109 105 102 98 96 87 85 77 75 49 45 44 42 38 33 19 17 11 8 1 56 2 56 20 26
CALL[ ]	/* CallFunction */";
};
width = 566;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(67,-19,o),
(71,-14,o),
(80,5,cs),
(485,768,ls),
(490,779,o),
(499,796,o),
(499,807,cs),
(499,815,o),
(496,821,o),
(484,821,cs),
(460,821,o),
(442,780,o),
(440,774,c),
(403,698,o),
(378,645,o),
(365,621,cs),
(346,583,o),
(314,522,o),
(260,423,cs),
(231,370,o),
(210,332,o),
(199,310,cs),
(190,294,o),
(180,277,o),
(174,266,cs),
(154,230,o),
(109,142,o),
(42,18,c),
(39,11,o),
(37,1,o),
(37,-7,cs),
(37,-15,o),
(42,-19,o),
(51,-19,cs)
);
},
{
closed = 1;
nodes = (
(498,0,ls),
(509,0,o),
(517,0,o),
(517,12,cs),
(517,24,o),
(503,24,o),
(498,24,cs),
(486,24,o),
(469,23,o),
(469,34,cs),
(469,41,o),
(470,73,o),
(473,98,c),
(509,98,ls),
(520,98,o),
(523,107,o),
(523,110,cs),
(523,118,o),
(517,122,o),
(506,122,cs),
(473,122,l),
(476,201,o),
(486,292,o),
(486,308,cs),
(486,329,o),
(470,329,o),
(466,329,cs),
(457,329,o),
(447,322,o),
(444,319,cs),
(399,263,o),
(358,207,o),
(292,117,cs),
(288,112,o),
(288,109,o),
(288,106,cs),
(288,98,o),
(293,94,o),
(304,94,cs),
(310,94,o),
(320,94,o),
(335,95,cs),
(349,96,o),
(363,96,o),
(378,97,cs),
(389,98,o),
(399,98,o),
(409,98,cs),
(419,98,o),
(429,98,o),
(440,98,c),
(436,39,ls),
(436,28,o),
(428,25,o),
(416,24,c),
(414,23,o),
(410,23,o),
(405,23,cs),
(399,22,o),
(393,22,o),
(387,21,cs),
(382,21,o),
(376,16,o),
(376,9,cs),
(376,2,o),
(384,0,o),
(389,0,cs)
);
},
{
closed = 1;
nodes = (
(336,120,o),
(334,121,o),
(334,124,cs),
(334,125,o),
(335,127,o),
(336,128,cs),
(337,129,o),
(338,131,o),
(339,132,cs),
(451,280,l),
(439,123,l),
(416,122,o),
(394,121,o),
(374,121,cs),
(354,120,o),
(343,120,o),
(340,120,cs)
);
},
{
closed = 1;
nodes = (
(162,500,ls),
(167,500,o),
(176,501,o),
(176,512,cs),
(176,524,o),
(165,524,o),
(158,524,cs),
(128,524,l),
(129,595,o),
(130,651,o),
(131,690,cs),
(132,729,o),
(132,757,o),
(133,776,cs),
(134,798,o),
(134,811,o),
(134,815,cs),
(134,820,o),
(133,824,o),
(132,825,cs),
(130,826,o),
(128,827,o),
(126,827,cs),
(122,827,o),
(99,823,o),
(55,823,cs),
(48,823,o),
(39,819,o),
(39,812,cs),
(39,801,o),
(48,802,o),
(55,802,cs),
(60,802,o),
(66,802,o),
(75,803,cs),
(83,803,o),
(88,803,o),
(91,803,cs),
(100,803,o),
(100,794,o),
(100,789,cs),
(100,777,o),
(100,761,o),
(100,751,cs),
(99,737,o),
(98,718,o),
(98,683,cs),
(96,612,o),
(93,574,o),
(93,541,cs),
(93,523,o),
(66,522,o),
(55,522,cs),
(51,522,o),
(40,520,o),
(40,512,cs),
(40,500,o),
(53,500,o),
(60,500,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
154 1 14 13 1 66 112 1 8 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 13 3 14 3 13 14 104 11 10 2 8 12 9 14 8 96 4 17 2 2 0 3 13 2 3 91 19 16 2 14 18 15 2 12 8 14 12 92 0 5 5 0 83 7 6 2 0 0 12 67 0 9 9 13 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 13 3 14 3 13 14 104 11 10 2 8 12 9 12 8 9 104 4 17 2 2 0 3 13 2 3 91 19 16 2 14 18 15 2 12 8 14 12 92 0 5 5 0 83 7 6 2 0 0 12 67 0 9 9 13 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
0 13 3 14 3 13 14 104 11 10 2 8 12 9 12 8 9 104 4 17 2 2 0 3 13 2 3 91 19 16 2 14 18 15 2 12 8 14 12 92 6 1 0 0 14 67 0 5 5 7 83 0 7 7 14 67 0 9 9 13 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 48 values pushed */
153 150 90 90 37 36 150 159 153 159 90 149 90 148 145 143 136 134 123 116 111 110 109 108 104 101 97 95 82 78 77 75 71 66 50 48 44 41 36 89 37 89 32 30 22 20 20 15
CALL[ ]	/* CallFunction */";
};
width = 556;
}
);
note = onequarter;
unicode = 188;
},
{
glyphname = threequarters;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(87,-19,o),
(110,-7,o),
(117,5,cs),
(522,768,l),
(527,776,o),
(536,796,o),
(536,807,cs),
(536,818,o),
(531,837,o),
(504,837,cs),
(471,837,o),
(456,833,o),
(427,774,cs),
(400,721,o),
(372,663,o),
(345,607,cs),
(326,568,o),
(296,515,o),
(246,423,cs),
(196,329,o),
(123,198,o),
(28,18,c),
(27,17,o),
(26,15,o),
(26,14,cs),
(26,13,o),
(26,12,o),
(26,11,cs),
(26,-9,o),
(53,-19,o),
(66,-19,cs)
);
},
{
closed = 1;
nodes = (
(489,0,ls),
(516,0,o),
(525,4,o),
(525,23,cs),
(525,44,o),
(508,48,o),
(497,48,cs),
(494,48,o),
(492,49,o),
(492,50,cs),
(492,51,o),
(492,53,o),
(493,56,cs),
(493,59,o),
(493,62,o),
(494,66,c),
(504,66,l),
(504,66,l),
(525,66,o),
(531,83,o),
(531,94,cs),
(531,113,o),
(522,122,o),
(503,122,cs),
(498,122,l),
(502,168,o),
(511,228,o),
(511,304,cs),
(511,327,o),
(493,337,o),
(474,337,cs),
(458,337,o),
(442,328,o),
(435,319,cs),
(401,276,o),
(404,280,o),
(377,243,cs),
(360,220,o),
(324,172,o),
(283,117,cs),
(274,106,o),
(269,98,o),
(266,93,cs),
(263,88,o),
(262,82,o),
(262,77,cs),
(262,71,o),
(265,67,o),
(270,66,cs),
(275,65,o),
(284,64,o),
(295,64,cs),
(301,64,o),
(311,64,o),
(326,64,cs),
(340,64,o),
(354,64,o),
(369,65,cs),
(380,66,o),
(389,66,o),
(398,66,cs),
(406,66,o),
(415,66,o),
(426,66,c),
(425,55,ls),
(425,51,o),
(421,49,o),
(414,48,c),
(412,47,o),
(407,47,o),
(400,47,cs),
(392,46,o),
(385,46,o),
(378,45,cs),
(365,44,o),
(350,40,o),
(350,25,cs),
(350,5,o),
(368,0,o),
(380,0,cs)
);
},
{
closed = 1;
nodes = (
(361,120,o),
(359,121,o),
(359,124,cs),
(359,125,o),
(360,127,o),
(361,128,cs),
(362,129,o),
(363,131,o),
(364,132,cs),
(439,240,l),
(430,123,l),
(415,122,o),
(401,121,o),
(388,121,cs),
(375,120,o),
(367,120,o),
(365,120,cs)
);
},
{
closed = 1;
nodes = (
(162,495,o),
(245,541,o),
(245,609,cs),
(245,653,o),
(210,678,o),
(170,678,cs),
(163,678,o),
(159,677,o),
(154,676,c),
(153,679,l),
(153,679,l),
(188,692,o),
(241,715,o),
(241,772,cs),
(241,828,o),
(191,836,o),
(155,836,cs),
(88,836,o),
(45,779,o),
(45,749,cs),
(45,737,o),
(54,729,o),
(66,729,cs),
(91,729,o),
(101,744,o),
(105,753,cs),
(113,772,o),
(128,794,o),
(149,794,cs),
(160,794,o),
(169,787,o),
(169,774,cs),
(169,729,o),
(114,702,o),
(77,676,cs),
(76,675,o),
(73,672,o),
(69,669,cs),
(65,665,o),
(63,660,o),
(63,655,cs),
(63,644,o),
(65,637,o),
(68,633,cs),
(71,629,o),
(74,627,o),
(77,627,cs),
(82,627,o),
(89,629,o),
(97,632,cs),
(104,635,o),
(114,636,o),
(125,636,cs),
(152,636,o),
(173,628,o),
(173,605,cs),
(173,563,o),
(123,545,o),
(90,545,cs),
(76,545,o),
(86,567,o),
(61,567,cs),
(42,567,o),
(33,550,o),
(33,533,cs),
(33,508,o),
(53,495,o),
(94,495,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
174 1 10 17 104 1 14 10 98 1 7 6 56 1 2 5 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 86 values pushed */
0 17 16 10 16 17 10 104 0 10 14 16 10 14 102 15 1 14 12 16 14 12 102 0 13 12 11 12 13 96 0 6 11 7 11 6 7 104 0 12 0 11 6 12 11 91 20 9 2 7 19 8 2 5 2 7 5 92 0 16 16 0 83 18 1 0 0 20 67 4 1 2 2 3 84 0 3 3 13 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 92 values pushed */
0 17 16 10 16 17 10 104 0 10 14 16 10 14 102 0 14 15 16 14 15 102 0 15 12 16 15 12 102 0 13 12 11 12 13 96 0 6 11 7 11 6 7 104 0 12 0 11 6 12 11 91 20 9 2 7 19 8 2 5 2 7 5 92 0 16 16 0 83 18 1 0 0 20 67 4 1 2 2 3 84 0 3 3 13 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 90 values pushed */
0 17 16 10 16 17 10 104 0 10 14 16 10 14 102 0 14 15 16 14 15 102 0 15 12 16 15 12 102 0 13 12 11 12 13 96 0 6 11 7 11 6 7 104 18 1 0 0 16 17 0 16 91 0 12 0 11 6 12 11 91 20 9 2 7 19 8 2 5 2 7 5 92 4 1 2 2 3 84 0 3 3 13 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 48 values pushed */
96 94 33 33 165 163 157 155 151 149 137 135 134 132 126 124 121 119 116 114 108 106 94 103 96 103 33 93 33 92 89 87 80 78 64 57 53 52 46 43 39 37 28 26 18 16 21 15
CALL[ ]	/* CallFunction */";
};
width = 568;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(82,-19,o),
(98,-10,o),
(105,5,cs),
(510,768,ls),
(515,777,o),
(524,796,o),
(524,807,cs),
(524,815,o),
(523,831,o),
(499,831,cs),
(467,831,o),
(455,815,o),
(435,774,cs),
(396,694,o),
(388,677,o),
(361,621,cs),
(342,582,o),
(310,525,o),
(255,423,cs),
(223,364,o),
(204,331,o),
(192,311,cs),
(182,294,o),
(172,278,o),
(166,267,cs),
(125,194,o),
(111,166,o),
(37,18,cs),
(36,16,o),
(35,13,o),
(35,9,cs),
(35,-6,o),
(51,-19,o),
(63,-19,cs)
);
},
{
closed = 1;
nodes = (
(495,1,ls),
(510,1,o),
(524,1,o),
(524,20,cs),
(524,40,o),
(503,40,o),
(495,40,cs),
(491,40,o),
(486,42,o),
(486,50,cs),
(486,53,o),
(487,68,o),
(490,79,c),
(506,79,l),
(506,79,l),
(525,79,o),
(530,94,o),
(530,101,cs),
(530,116,o),
(521,123,o),
(503,123,cs),
(490,123,l),
(491,144,o),
(503,301,o),
(503,309,cs),
(503,334,o),
(478,335,o),
(473,335,cs),
(460,335,o),
(444,324,o),
(441,320,cs),
(396,264,o),
(355,208,o),
(289,118,cs),
(283,110,o),
(279,104,o),
(278,100,cs),
(276,96,o),
(275,92,o),
(275,89,cs),
(275,80,o),
(284,76,o),
(301,76,cs),
(313,76,o),
(346,77,o),
(375,78,cs),
(386,79,o),
(396,79,o),
(406,79,cs),
(416,79,o),
(426,79,o),
(437,79,c),
(433,55,ls),
(430,44,o),
(424,43,o),
(413,40,cs),
(411,39,o),
(407,39,o),
(402,39,cs),
(396,38,o),
(390,38,o),
(384,37,cs),
(373,37,o),
(363,31,o),
(363,20,cs),
(363,5,o),
(377,1,o),
(386,1,cs)
);
},
{
closed = 1;
nodes = (
(353,121,o),
(351,122,o),
(351,125,cs),
(351,126,o),
(352,128,o),
(353,129,cs),
(354,130,o),
(355,132,o),
(356,133,cs),
(446,256,l),
(436,124,l),
(418,123,o),
(401,122,o),
(385,122,cs),
(368,121,o),
(359,121,o),
(357,121,cs)
);
},
{
closed = 1;
nodes = (
(156,495,o),
(233,546,o),
(233,609,cs),
(233,653,o),
(193,677,o),
(156,677,cs),
(153,677,o),
(151,677,o),
(149,677,cs),
(146,676,o),
(144,676,o),
(142,676,cs),
(139,675,o),
(137,675,o),
(136,675,c),
(165,688,o),
(229,720,o),
(229,784,cs),
(229,831,o),
(172,836,o),
(148,836,cs),
(83,836,o),
(47,776,o),
(47,749,cs),
(47,738,o),
(57,731,o),
(64,731,cs),
(83,731,o),
(90,744,o),
(93,753,c),
(105,782,o),
(124,800,o),
(141,800,cs),
(161,800,o),
(171,794,o),
(171,781,cs),
(171,725,o),
(116,703,o),
(79,676,cs),
(78,675,o),
(75,672,o),
(71,669,cs),
(67,665,o),
(65,660,o),
(65,655,cs),
(65,645,o),
(67,639,o),
(71,637,cs),
(75,634,o),
(78,633,o),
(79,633,cs),
(82,633,o),
(88,635,o),
(97,638,cs),
(106,641,o),
(116,642,o),
(127,642,cs),
(154,642,o),
(175,632,o),
(175,605,cs),
(175,557,o),
(124,536,o),
(92,536,cs),
(73,536,o),
(77,558,o),
(56,558,cs),
(41,558,o),
(35,542,o),
(35,527,cs),
(35,506,o),
(61,495,o),
(92,495,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
173 1 19 18 1 66 129 1 13 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 87 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 10 1 9 7 0 9 7 102 0 18 6 19 6 18 19 104 0 8 0 6 18 8 6 91 23 21 2 19 22 20 2 17 13 19 17 92 0 0 0 2 83 11 1 2 2 20 67 16 15 2 13 13 14 84 0 14 14 13 67 0 7 7 12 83 0 12 12 21 12 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 93 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 0 9 10 0 9 10 102 0 10 7 0 10 7 102 0 18 6 19 6 18 19 104 0 8 0 6 18 8 6 91 23 21 2 19 22 20 2 17 13 19 17 92 0 0 0 2 83 11 1 2 2 20 67 16 15 2 13 13 14 84 0 14 14 13 67 0 7 7 12 83 0 12 12 21 12 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 98 values pushed */
0 11 2 0 2 11 0 104 0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 0 9 10 0 9 10 102 0 10 7 0 10 7 102 0 18 6 19 6 18 19 104 0 2 0 0 1 2 0 91 0 8 0 6 18 8 6 91 23 21 2 19 22 20 2 17 13 19 17 92 16 15 2 13 13 14 84 0 14 14 13 67 0 7 7 12 83 0 12 12 21 12 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 45 values pushed */
171 169 107 107 169 178 171 178 107 168 107 167 164 162 153 151 140 133 128 127 126 125 121 118 114 112 103 101 93 91 68 66 65 63 35 36 38 33 17 25 38 36 39 24 35
CALL[ ]	/* CallFunction */";
};
width = 565;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(76,-19,o),
(80,-14,o),
(89,5,cs),
(494,768,ls),
(499,779,o),
(508,796,o),
(508,807,cs),
(508,815,o),
(505,821,o),
(493,821,cs),
(469,821,o),
(451,780,o),
(449,774,c),
(412,698,o),
(387,645,o),
(374,621,cs),
(355,583,o),
(323,522,o),
(269,423,cs),
(240,370,o),
(219,332,o),
(208,310,cs),
(199,294,o),
(189,277,o),
(183,266,cs),
(163,230,o),
(118,142,o),
(51,18,c),
(48,11,o),
(46,1,o),
(46,-7,cs),
(46,-15,o),
(51,-19,o),
(60,-19,cs)
);
},
{
closed = 1;
nodes = (
(503,0,ls),
(514,0,o),
(522,0,o),
(522,12,cs),
(522,24,o),
(508,24,o),
(503,24,cs),
(491,24,o),
(474,23,o),
(474,34,cs),
(474,41,o),
(475,73,o),
(478,98,c),
(514,98,ls),
(525,98,o),
(528,107,o),
(528,110,cs),
(528,118,o),
(522,122,o),
(511,122,cs),
(478,122,l),
(481,201,o),
(491,292,o),
(491,308,cs),
(491,329,o),
(475,329,o),
(471,329,cs),
(462,329,o),
(452,322,o),
(449,319,cs),
(404,263,o),
(363,207,o),
(297,117,cs),
(293,112,o),
(293,109,o),
(293,106,cs),
(293,98,o),
(298,94,o),
(309,94,cs),
(315,94,o),
(325,94,o),
(340,95,cs),
(354,96,o),
(368,96,o),
(383,97,cs),
(394,98,o),
(404,98,o),
(414,98,cs),
(424,98,o),
(434,98,o),
(445,98,c),
(441,39,ls),
(441,28,o),
(433,25,o),
(421,24,c),
(419,23,o),
(415,23,o),
(410,23,cs),
(404,22,o),
(398,22,o),
(392,21,cs),
(387,21,o),
(381,16,o),
(381,9,cs),
(381,2,o),
(389,0,o),
(394,0,cs)
);
},
{
closed = 1;
nodes = (
(341,120,o),
(339,121,o),
(339,124,cs),
(339,125,o),
(340,127,o),
(341,128,cs),
(342,129,o),
(343,131,o),
(344,132,cs),
(456,280,l),
(444,123,l),
(421,122,o),
(399,121,o),
(379,121,cs),
(359,120,o),
(348,120,o),
(345,120,cs)
);
},
{
closed = 1;
nodes = (
(146,495,o),
(211,557,o),
(211,609,cs),
(211,653,o),
(163,675,o),
(131,675,cs),
(128,675,o),
(126,675,o),
(124,675,cs),
(121,674,o),
(119,674,o),
(117,674,cs),
(114,673,o),
(112,673,o),
(111,673,c),
(122,684,o),
(207,717,o),
(207,784,cs),
(207,830,o),
(167,836,o),
(146,836,cs),
(81,836,o),
(45,776,o),
(45,749,cs),
(45,739,o),
(49,734,o),
(56,734,cs),
(64,734,o),
(68,744,o),
(71,753,cs),
(83,788,o),
(103,810,o),
(139,810,cs),
(163,810,o),
(169,800,o),
(169,781,cs),
(169,725,o),
(114,703,o),
(77,676,cs),
(76,675,o),
(73,672,o),
(69,669,cs),
(65,665,o),
(63,660,o),
(63,655,cs),
(63,644,o),
(74,643,o),
(77,643,cs),
(80,643,o),
(86,645,o),
(95,648,cs),
(104,651,o),
(114,652,o),
(125,652,cs),
(152,652,o),
(173,640,o),
(173,605,cs),
(173,551,o),
(121,521,o),
(90,521,cs),
(63,521,o),
(60,543,o),
(45,543,cs),
(34,543,o),
(33,534,o),
(33,527,cs),
(33,504,o),
(61,495,o),
(84,495,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
174 1 19 18 1 66 132 1 13 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 94 values pushed */
0 3 2 5 2 3 5 104 0 12 11 9 11 12 9 104 0 18 8 19 8 18 19 104 16 15 2 13 17 14 19 13 96 7 6 2 5 0 11 12 5 11 91 0 10 0 8 18 10 8 91 23 21 2 19 22 20 2 17 13 19 17 92 0 0 0 12 67 0 2 2 4 83 0 4 4 20 67 0 14 14 13 67 0 9 9 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 95 values pushed */
0 3 2 5 2 3 5 104 0 12 11 9 11 12 9 104 0 18 8 19 8 18 19 104 16 15 2 13 17 14 17 13 14 104 7 6 2 5 0 11 12 5 11 91 0 10 0 8 18 10 8 91 23 21 2 19 22 20 2 17 13 19 17 92 0 0 0 12 67 0 2 2 4 83 0 4 4 20 67 0 14 14 13 67 0 9 9 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 93 values pushed */
0 3 2 5 2 3 5 104 0 12 11 9 11 12 9 104 0 18 8 19 8 18 19 104 16 15 2 13 17 14 17 13 14 104 0 4 0 2 3 4 2 91 7 6 2 5 0 11 12 5 11 91 0 10 0 8 18 10 8 91 23 21 2 19 22 20 2 17 13 19 17 92 0 0 0 14 67 0 14 14 13 67 0 9 9 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 54 values pushed */
173 170 110 110 170 179 173 179 110 169 110 168 165 163 156 154 143 136 131 130 129 128 124 121 117 115 105 103 102 100 94 92 89 87 83 81 73 71 70 69 68 67 58 56 51 49 45 43 32 30 22 20 24 15
CALL[ ]	/* CallFunction */";
};
width = 561;
}
);
note = threequarters;
unicode = 190;
},
{
glyphname = oneeighth;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(90,-19,o),
(113,-7,o),
(120,5,cs),
(525,768,ls),
(530,779,o),
(539,800,o),
(539,807,cs),
(539,818,o),
(534,837,o),
(507,837,cs),
(465,837,o),
(456,826,o),
(430,774,cs),
(383,678,o),
(356,621,o),
(330,572,cs),
(307,529,o),
(276,474,o),
(249,423,cs),
(219,368,o),
(108,180,o),
(31,18,cs),
(30,17,o),
(30,14,o),
(30,11,cs),
(30,-8,o),
(54,-19,o),
(69,-19,cs)
);
},
{
closed = 1;
nodes = (
(511,-12,o),
(547,30,o),
(547,75,cs),
(547,118,o),
(524,153,o),
(475,161,c),
(502,164,o),
(542,190,o),
(542,245,cs),
(542,290,o),
(500,327,o),
(429,327,cs),
(357,327,o),
(324,286,o),
(324,241,cs),
(324,201,o),
(356,163,o),
(382,161,c),
(349,156,o),
(314,129,o),
(314,78,cs),
(314,18,o),
(364,-12,o),
(436,-12,cs)
);
},
{
closed = 1;
nodes = (
(410,42,o),
(385,51,o),
(385,83,cs),
(385,115,o),
(413,125,o),
(431,125,cs),
(461,125,o),
(476,110,o),
(476,79,cs),
(476,62,o),
(465,42,o),
(433,42,cs)
);
},
{
closed = 1;
nodes = (
(420,198,o),
(394,202,o),
(394,233,cs),
(394,260,o),
(414,269,o),
(433,269,cs),
(449,269,o),
(471,264,o),
(471,229,cs),
(471,220,o),
(463,198,o),
(432,198,cs)
);
},
{
closed = 1;
nodes = (
(193,500,ls),
(205,500,o),
(224,503,o),
(224,528,cs),
(224,552,o),
(200,556,o),
(189,556,cs),
(176,556,l),
(176,556,l),
(177,619,o),
(178,668,o),
(179,703,cs),
(180,738,o),
(180,763,o),
(181,780,cs),
(182,799,o),
(182,811,o),
(182,815,cs),
(182,820,o),
(181,824,o),
(180,825,cs),
(178,826,o),
(176,827,o),
(174,827,cs),
(127,827,o),
(82,823,o),
(86,823,c),
(71,820,o),
(53,813,o),
(53,796,cs),
(53,773,o),
(70,770,o),
(86,770,cs),
(88,770,o),
(91,770,o),
(96,771,cs),
(101,771,o),
(104,771,o),
(105,771,cs),
(112,771,o),
(114,764,o),
(114,757,cs),
(114,723,o),
(112,727,o),
(112,683,cs),
(111,653,o),
(109,631,o),
(109,615,cs),
(108,602,o),
(107,587,o),
(107,573,cs),
(107,556,o),
(105,554,o),
(86,554,cs),
(75,554,o),
(54,549,o),
(54,528,cs),
(54,504,o),
(76,500,o),
(91,500,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
105 89 2 12 13 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
6 1 5 0 2 0 5 2 104 4 15 2 2 0 3 9 2 3 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 8 7 2 0 0 20 67 0 11 11 1 83 10 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
6 1 5 7 2 7 5 2 104 4 15 2 2 0 3 9 2 3 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 0 0 0 20 67 8 1 7 7 12 67 0 11 11 1 83 10 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
6 1 5 7 2 7 5 2 104 4 15 2 2 0 3 9 2 3 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 0 0 0 20 67 8 1 7 7 12 67 0 11 11 10 83 0 10 10 24 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 0 7 0 106 6 1 5 7 2 7 5 2 104 4 15 2 2 0 3 9 2 3 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 8 1 7 7 14 67 0 11 11 10 83 0 10 10 24 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
33 32 139 137 133 131 123 121 118 116 112 110 98 96 78 74 73 72 67 65 64 62 48 46 42 39 32 85 33 85 42 46 16 17
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(80,-19,o),
(96,-10,o),
(103,5,cs),
(508,768,ls),
(513,777,o),
(522,796,o),
(522,807,cs),
(522,815,o),
(521,831,o),
(497,831,cs),
(465,831,o),
(453,815,o),
(433,774,cs),
(394,694,o),
(386,677,o),
(359,621,cs),
(340,582,o),
(308,525,o),
(253,423,cs),
(221,364,o),
(202,331,o),
(190,311,cs),
(180,294,o),
(170,278,o),
(164,267,cs),
(123,194,o),
(109,166,o),
(35,18,cs),
(34,16,o),
(33,13,o),
(33,9,cs),
(33,-6,o),
(49,-19,o),
(61,-19,cs)
);
},
{
closed = 1;
nodes = (
(502,-11,o),
(541,31,o),
(541,76,cs),
(541,119,o),
(512,154,o),
(469,162,c),
(491,164,o),
(536,198,o),
(536,246,cs),
(536,283,o),
(499,328,o),
(433,328,cs),
(366,328,o),
(332,287,o),
(332,242,cs),
(332,201,o),
(364,167,o),
(390,162,c),
(361,154,o),
(322,125,o),
(322,72,cs),
(322,16,o),
(373,-11,o),
(434,-11,cs)
);
},
{
closed = 1;
nodes = (
(403,32,o),
(379,48,o),
(379,79,cs),
(379,116,o),
(409,132,o),
(432,132,cs),
(465,132,o),
(484,108,o),
(484,79,cs),
(484,54,o),
(464,32,o),
(432,32,cs)
);
},
{
closed = 1;
nodes = (
(418,193,o),
(388,202,o),
(388,236,cs),
(388,267,o),
(410,282,o),
(435,282,cs),
(456,282,o),
(479,271,o),
(479,236,cs),
(479,216,o),
(462,193,o),
(433,193,cs)
);
},
{
closed = 1;
nodes = (
(180,500,ls),
(189,500,o),
(204,502,o),
(204,522,cs),
(204,543,o),
(184,544,o),
(176,544,cs),
(156,544,l),
(156,544,l),
(157,610,o),
(158,661,o),
(159,698,cs),
(160,735,o),
(160,762,o),
(161,779,cs),
(162,800,o),
(162,812,o),
(162,815,cs),
(162,820,o),
(161,824,o),
(160,825,cs),
(158,826,o),
(156,827,o),
(154,827,cs),
(149,827,o),
(122,823,o),
(73,823,cs),
(62,823,o),
(47,815,o),
(47,802,cs),
(47,782,o),
(62,782,o),
(73,782,cs),
(76,782,o),
(81,782,o),
(87,783,cs),
(93,783,o),
(97,783,o),
(99,783,cs),
(108,783,o),
(108,772,o),
(108,769,cs),
(108,730,o),
(106,732,o),
(106,683,cs),
(105,650,o),
(103,625,o),
(103,608,cs),
(102,594,o),
(101,576,o),
(101,561,cs),
(101,544,o),
(94,542,o),
(73,542,cs),
(69,542,o),
(48,538,o),
(48,522,cs),
(48,502,o),
(68,500,o),
(78,500,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
114 96 2 11 12 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
2 14 2 0 0 1 8 0 1 92 0 8 0 13 12 8 13 91 0 12 0 11 10 12 11 91 0 3 3 4 83 6 5 2 4 4 12 67 0 10 10 7 83 9 1 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
2 14 2 0 0 1 8 0 1 92 0 8 0 13 12 8 13 91 0 12 0 11 10 12 11 91 0 6 6 20 67 0 3 3 4 83 5 1 4 4 12 67 0 10 10 9 84 0 9 9 24 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 6 4 6 106 2 14 2 0 0 1 8 0 1 92 0 8 0 13 12 8 13 91 0 12 0 11 10 12 11 91 0 3 3 4 83 5 1 4 4 14 67 0 10 10 9 84 0 9 9 24 67 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
2 1 147 145 141 139 133 131 127 125 121 119 105 103 87 85 77 75 49 45 44 42 38 33 19 17 11 8 1 56 2 56 15 26
CALL[ ]	/* CallFunction */";
};
width = 578;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(66,-19,o),
(70,-14,o),
(79,5,cs),
(484,768,ls),
(489,779,o),
(498,796,o),
(498,807,cs),
(498,815,o),
(495,821,o),
(483,821,cs),
(459,821,o),
(441,780,o),
(439,774,c),
(402,698,o),
(377,645,o),
(364,621,cs),
(345,583,o),
(313,522,o),
(259,423,cs),
(230,370,o),
(209,332,o),
(198,310,cs),
(189,294,o),
(179,277,o),
(173,266,cs),
(153,230,o),
(108,142,o),
(41,18,c),
(38,11,o),
(36,1,o),
(36,-7,cs),
(36,-15,o),
(41,-19,o),
(50,-19,cs)
);
},
{
closed = 1;
nodes = (
(484,-12,o),
(532,29,o),
(532,75,cs),
(532,117,o),
(493,153,o),
(460,161,c),
(486,170,o),
(527,198,o),
(527,245,cs),
(527,283,o),
(498,327,o),
(439,327,cs),
(382,327,o),
(343,286,o),
(343,241,cs),
(343,202,o),
(373,172,o),
(401,161,c),
(377,150,o),
(333,124,o),
(333,71,cs),
(333,14,o),
(387,-12,o),
(431,-12,cs)
);
},
{
closed = 1;
nodes = (
(393,12,o),
(370,43,o),
(370,76,cs),
(370,116,o),
(404,141,o),
(433,141,cs),
(462,141,o),
(495,117,o),
(495,77,cs),
(495,37,o),
(463,12,o),
(430,12,cs)
);
},
{
closed = 1;
nodes = (
(409,182,o),
(379,200,o),
(379,239,cs),
(379,268,o),
(395,301,o),
(438,301,cs),
(482,301,o),
(490,266,o),
(490,245,cs),
(490,206,o),
(462,182,o),
(434,182,cs)
);
},
{
closed = 1;
nodes = (
(161,500,ls),
(166,500,o),
(175,501,o),
(175,512,cs),
(175,524,o),
(164,524,o),
(157,524,cs),
(127,524,l),
(128,595,o),
(129,651,o),
(130,690,cs),
(131,729,o),
(131,757,o),
(132,776,cs),
(133,798,o),
(133,811,o),
(133,815,cs),
(133,820,o),
(132,824,o),
(131,825,cs),
(129,826,o),
(127,827,o),
(125,827,cs),
(121,827,o),
(98,823,o),
(54,823,cs),
(47,823,o),
(38,819,o),
(38,812,cs),
(38,801,o),
(47,802,o),
(54,802,cs),
(59,802,o),
(65,802,o),
(74,803,cs),
(82,803,o),
(87,803,o),
(90,803,cs),
(99,803,o),
(99,794,o),
(99,789,cs),
(99,777,o),
(99,761,o),
(99,751,cs),
(98,737,o),
(97,718,o),
(97,683,cs),
(95,612,o),
(92,574,o),
(92,541,cs),
(92,523,o),
(65,522,o),
(54,522,cs),
(50,522,o),
(39,520,o),
(39,512,cs),
(39,500,o),
(52,500,o),
(59,500,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
111 95 2 11 12 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
4 14 2 2 0 3 8 2 3 91 0 8 0 13 12 8 13 91 0 12 0 11 10 12 11 91 0 5 5 0 83 7 6 2 0 0 12 67 0 10 10 9 83 0 9 9 21 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
4 14 2 2 0 3 8 2 3 91 0 8 0 13 12 8 13 91 0 12 0 11 10 12 11 91 0 5 5 0 83 7 6 2 0 0 12 67 0 10 10 9 83 0 9 9 24 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
4 14 2 2 0 3 8 2 3 91 0 8 0 13 12 8 13 91 0 12 0 11 10 12 11 91 6 1 0 0 14 67 0 5 5 7 83 0 7 7 14 67 0 10 10 9 83 0 9 9 24 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
37 36 150 148 142 140 136 134 130 128 122 120 102 100 82 78 77 75 71 66 50 48 44 41 36 89 37 89 32 30 22 20 15 15
CALL[ ]	/* CallFunction */";
};
width = 568;
}
);
note = oneeighth;
unicode = 8539;
},
{
glyphname = threeeighths;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(87,-19,o),
(110,-7,o),
(117,5,cs),
(522,768,l),
(527,776,o),
(536,796,o),
(536,807,cs),
(536,818,o),
(531,837,o),
(504,837,cs),
(471,837,o),
(456,833,o),
(427,774,cs),
(400,721,o),
(372,663,o),
(345,607,cs),
(326,568,o),
(296,515,o),
(246,423,cs),
(196,329,o),
(123,198,o),
(28,18,c),
(27,17,o),
(26,15,o),
(26,14,cs),
(26,13,o),
(26,12,o),
(26,11,cs),
(26,-9,o),
(53,-19,o),
(66,-19,cs)
);
},
{
closed = 1;
nodes = (
(504,-12,o),
(540,30,o),
(540,75,cs),
(540,118,o),
(517,153,o),
(468,161,c),
(495,164,o),
(535,190,o),
(535,245,cs),
(535,290,o),
(493,327,o),
(422,327,cs),
(350,327,o),
(317,286,o),
(317,241,cs),
(317,201,o),
(349,163,o),
(375,161,c),
(342,156,o),
(307,129,o),
(307,78,cs),
(307,18,o),
(357,-12,o),
(429,-12,cs)
);
},
{
closed = 1;
nodes = (
(403,42,o),
(378,51,o),
(378,83,cs),
(378,115,o),
(406,125,o),
(424,125,cs),
(454,125,o),
(469,110,o),
(469,79,cs),
(469,62,o),
(458,42,o),
(426,42,cs)
);
},
{
closed = 1;
nodes = (
(413,198,o),
(387,202,o),
(387,233,cs),
(387,260,o),
(407,269,o),
(426,269,cs),
(442,269,o),
(464,264,o),
(464,229,cs),
(464,220,o),
(456,198,o),
(425,198,cs)
);
},
{
closed = 1;
nodes = (
(162,495,o),
(245,541,o),
(245,609,cs),
(245,653,o),
(210,678,o),
(170,678,cs),
(163,678,o),
(159,677,o),
(154,676,c),
(153,679,l),
(153,679,l),
(188,692,o),
(241,715,o),
(241,772,cs),
(241,828,o),
(191,836,o),
(155,836,cs),
(88,836,o),
(45,779,o),
(45,749,cs),
(45,737,o),
(54,729,o),
(66,729,cs),
(91,729,o),
(101,744,o),
(105,753,cs),
(113,772,o),
(128,794,o),
(149,794,cs),
(160,794,o),
(169,787,o),
(169,774,cs),
(169,729,o),
(114,702,o),
(77,676,cs),
(76,675,o),
(73,672,o),
(69,669,cs),
(65,665,o),
(63,660,o),
(63,655,cs),
(63,644,o),
(65,637,o),
(68,633,cs),
(71,629,o),
(74,627,o),
(77,627,cs),
(82,627,o),
(89,629,o),
(97,632,cs),
(104,635,o),
(114,636,o),
(125,636,cs),
(152,636,o),
(173,628,o),
(173,605,cs),
(173,563,o),
(123,545,o),
(90,545,cs),
(76,545,o),
(86,567,o),
(61,567,cs),
(42,567,o),
(33,550,o),
(33,533,cs),
(33,508,o),
(53,495,o),
(94,495,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
158 1 8 15 88 1 12 8 52 36 2 5 6 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 15 14 8 14 15 8 104 0 8 12 14 8 12 102 13 1 12 10 14 12 10 102 0 11 10 9 10 11 96 0 10 0 9 2 10 9 91 0 2 0 7 6 2 7 91 0 6 0 5 4 6 5 91 0 14 14 0 83 16 1 0 0 20 67 0 4 4 1 83 3 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 83 values pushed */
0 15 14 8 14 15 8 104 0 8 12 14 8 12 102 0 12 13 14 12 13 102 0 13 10 14 13 10 102 0 11 10 9 10 11 96 0 10 0 9 2 10 9 91 0 2 0 7 6 2 7 91 0 6 0 5 4 6 5 91 0 14 14 0 83 16 1 0 0 20 67 0 4 4 1 83 3 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 87 values pushed */
0 15 14 8 14 15 8 104 0 8 12 14 8 12 102 0 12 13 14 12 13 102 0 13 10 14 13 10 102 0 11 10 9 10 11 96 0 10 0 9 2 10 9 91 0 2 0 7 6 2 7 91 0 6 0 5 4 6 5 91 0 14 14 0 83 16 1 0 0 20 67 0 4 4 3 83 0 3 3 24 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 85 values pushed */
0 15 14 8 14 15 8 104 0 8 12 14 8 12 102 0 12 13 14 12 13 102 0 13 10 14 13 10 102 0 11 10 9 10 11 96 16 1 0 0 14 15 0 14 91 0 10 0 9 2 10 9 91 0 2 0 7 6 2 7 91 0 6 0 5 4 6 5 91 0 4 4 3 83 0 3 3 24 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
149 147 141 139 135 133 121 119 118 116 110 108 105 103 100 98 92 90 86 84 80 78 70 68 65 63 59 57 45 43 28 26 18 16 17 15
CALL[ ]	/* CallFunction */";
};
width = 576;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(82,-19,o),
(98,-10,o),
(105,5,cs),
(510,768,ls),
(515,777,o),
(524,796,o),
(524,807,cs),
(524,815,o),
(523,831,o),
(499,831,cs),
(467,831,o),
(455,815,o),
(435,774,cs),
(396,694,o),
(388,677,o),
(361,621,cs),
(342,582,o),
(310,525,o),
(255,423,cs),
(223,364,o),
(204,331,o),
(192,311,cs),
(182,294,o),
(172,278,o),
(166,267,cs),
(125,194,o),
(111,166,o),
(37,18,cs),
(36,16,o),
(35,13,o),
(35,9,cs),
(35,-6,o),
(51,-19,o),
(63,-19,cs)
);
},
{
closed = 1;
nodes = (
(499,-11,o),
(538,31,o),
(538,76,cs),
(538,119,o),
(509,154,o),
(466,162,c),
(488,164,o),
(533,198,o),
(533,246,cs),
(533,283,o),
(496,328,o),
(430,328,cs),
(363,328,o),
(329,287,o),
(329,242,cs),
(329,201,o),
(361,167,o),
(387,162,c),
(358,154,o),
(319,125,o),
(319,72,cs),
(319,16,o),
(370,-11,o),
(431,-11,cs)
);
},
{
closed = 1;
nodes = (
(400,32,o),
(376,48,o),
(376,79,cs),
(376,116,o),
(406,132,o),
(429,132,cs),
(462,132,o),
(481,108,o),
(481,79,cs),
(481,54,o),
(461,32,o),
(429,32,cs)
);
},
{
closed = 1;
nodes = (
(415,193,o),
(385,202,o),
(385,236,cs),
(385,267,o),
(407,282,o),
(432,282,cs),
(453,282,o),
(476,271,o),
(476,236,cs),
(476,216,o),
(459,193,o),
(430,193,cs)
);
},
{
closed = 1;
nodes = (
(156,495,o),
(233,546,o),
(233,609,cs),
(233,653,o),
(193,677,o),
(156,677,cs),
(153,677,o),
(151,677,o),
(149,677,cs),
(146,676,o),
(144,676,o),
(142,676,cs),
(139,675,o),
(137,675,o),
(136,675,c),
(165,688,o),
(229,720,o),
(229,784,cs),
(229,831,o),
(172,836,o),
(148,836,cs),
(83,836,o),
(47,776,o),
(47,749,cs),
(47,738,o),
(57,731,o),
(64,731,cs),
(83,731,o),
(90,744,o),
(93,753,c),
(105,782,o),
(124,800,o),
(141,800,cs),
(161,800,o),
(171,794,o),
(171,781,cs),
(171,725,o),
(116,703,o),
(79,676,cs),
(78,675,o),
(75,672,o),
(71,669,cs),
(67,665,o),
(65,660,o),
(65,655,cs),
(65,645,o),
(67,639,o),
(71,637,cs),
(75,634,o),
(78,633,o),
(79,633,cs),
(82,633,o),
(88,635,o),
(97,638,cs),
(106,641,o),
(116,642,o),
(127,642,cs),
(154,642,o),
(175,632,o),
(175,605,cs),
(175,557,o),
(124,536,o),
(92,536,cs),
(73,536,o),
(77,558,o),
(56,558,cs),
(41,558,o),
(35,542,o),
(35,527,cs),
(35,506,o),
(61,495,o),
(92,495,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
130 112 2 16 17 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 83 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 10 1 9 7 0 9 7 102 0 8 0 6 13 8 6 91 0 13 0 18 17 13 18 91 0 17 0 16 15 17 16 91 0 0 0 2 83 11 1 2 2 20 67 0 7 7 12 83 14 1 12 12 21 67 0 15 15 12 84 14 1 12 12 21 12 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 89 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 0 9 10 0 9 10 102 0 10 7 0 10 7 102 0 8 0 6 13 8 6 91 0 13 0 18 17 13 18 91 0 17 0 16 15 17 16 91 0 0 0 2 83 11 1 2 2 20 67 0 7 7 12 83 14 1 12 12 21 67 0 15 15 12 84 14 1 12 12 21 12 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 87 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 0 9 10 0 9 10 102 0 10 7 0 10 7 102 0 8 0 6 13 8 6 91 0 13 0 18 17 13 18 91 0 17 0 16 15 17 16 91 0 0 0 2 83 11 1 2 2 20 67 0 15 15 14 84 0 14 14 24 67 0 7 7 12 83 0 12 12 21 12 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 92 values pushed */
0 11 2 0 2 11 0 104 0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 0 9 10 0 9 10 102 0 10 7 0 10 7 102 0 2 0 0 1 2 0 91 0 8 0 6 13 8 6 91 0 13 0 18 17 13 18 91 0 17 0 16 15 17 16 91 0 15 15 14 84 0 14 14 24 67 0 7 7 12 83 0 12 12 21 12 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
163 161 157 155 149 147 143 141 137 135 121 119 103 101 93 91 68 66 65 63 35 36 38 33 17 25 38 36 39 19 35
CALL[ ]	/* CallFunction */";
};
width = 575;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(76,-19,o),
(80,-14,o),
(89,5,cs),
(494,768,ls),
(499,779,o),
(508,796,o),
(508,807,cs),
(508,815,o),
(505,821,o),
(493,821,cs),
(469,821,o),
(451,780,o),
(449,774,c),
(412,698,o),
(387,645,o),
(374,621,cs),
(355,583,o),
(323,522,o),
(269,423,cs),
(240,370,o),
(219,332,o),
(208,310,cs),
(199,294,o),
(189,277,o),
(183,266,cs),
(163,230,o),
(118,142,o),
(51,18,c),
(48,11,o),
(46,1,o),
(46,-7,cs),
(46,-15,o),
(51,-19,o),
(60,-19,cs)
);
},
{
closed = 1;
nodes = (
(488,-12,o),
(536,29,o),
(536,75,cs),
(536,117,o),
(497,153,o),
(464,161,c),
(490,170,o),
(531,198,o),
(531,245,cs),
(531,283,o),
(502,327,o),
(443,327,cs),
(386,327,o),
(347,286,o),
(347,241,cs),
(347,202,o),
(377,172,o),
(405,161,c),
(381,150,o),
(337,124,o),
(337,71,cs),
(337,14,o),
(391,-12,o),
(435,-12,cs)
);
},
{
closed = 1;
nodes = (
(397,12,o),
(374,43,o),
(374,76,cs),
(374,116,o),
(408,141,o),
(437,141,cs),
(466,141,o),
(499,117,o),
(499,77,cs),
(499,37,o),
(467,12,o),
(434,12,cs)
);
},
{
closed = 1;
nodes = (
(413,182,o),
(383,200,o),
(383,239,cs),
(383,268,o),
(399,301,o),
(442,301,cs),
(486,301,o),
(494,266,o),
(494,245,cs),
(494,206,o),
(466,182,o),
(438,182,cs)
);
},
{
closed = 1;
nodes = (
(146,495,o),
(211,557,o),
(211,609,cs),
(211,653,o),
(163,675,o),
(131,675,cs),
(128,675,o),
(126,675,o),
(124,675,cs),
(121,674,o),
(119,674,o),
(117,674,cs),
(114,673,o),
(112,673,o),
(111,673,c),
(122,684,o),
(207,717,o),
(207,784,cs),
(207,830,o),
(167,836,o),
(146,836,cs),
(81,836,o),
(45,776,o),
(45,749,cs),
(45,739,o),
(49,734,o),
(56,734,cs),
(64,734,o),
(68,744,o),
(71,753,cs),
(83,788,o),
(103,810,o),
(139,810,cs),
(163,810,o),
(169,800,o),
(169,781,cs),
(169,725,o),
(114,703,o),
(77,676,cs),
(76,675,o),
(73,672,o),
(69,669,cs),
(65,665,o),
(63,660,o),
(63,655,cs),
(63,644,o),
(74,643,o),
(77,643,cs),
(80,643,o),
(86,645,o),
(95,648,cs),
(104,651,o),
(114,652,o),
(125,652,cs),
(152,652,o),
(173,640,o),
(173,605,cs),
(173,551,o),
(121,521,o),
(90,521,cs),
(63,521,o),
(60,543,o),
(45,543,cs),
(34,543,o),
(33,534,o),
(33,527,cs),
(33,504,o),
(61,495,o),
(84,495,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
131 115 2 16 17 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 86 values pushed */
0 3 2 5 2 3 5 104 0 12 11 9 11 12 9 104 7 6 2 5 0 11 12 5 11 91 0 10 0 8 13 10 8 91 0 13 0 18 17 13 18 91 0 17 0 16 15 17 16 91 0 0 0 12 67 0 2 2 4 83 0 4 4 20 67 0 15 15 14 83 0 14 14 21 67 0 9 9 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 86 values pushed */
0 3 2 5 2 3 5 104 0 12 11 9 11 12 9 104 7 6 2 5 0 11 12 5 11 91 0 10 0 8 13 10 8 91 0 13 0 18 17 13 18 91 0 17 0 16 15 17 16 91 0 0 0 12 67 0 2 2 4 83 0 4 4 20 67 0 15 15 14 83 0 14 14 24 67 0 9 9 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 84 values pushed */
0 3 2 5 2 3 5 104 0 12 11 9 11 12 9 104 0 4 0 2 3 4 2 91 7 6 2 5 0 11 12 5 11 91 0 10 0 8 13 10 8 91 0 13 0 18 17 13 18 91 0 17 0 16 15 17 16 91 0 0 0 14 67 0 15 15 14 83 0 14 14 24 67 0 9 9 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
170 168 162 160 156 154 150 148 142 140 122 120 105 103 102 100 94 92 89 87 83 81 73 71 70 69 68 67 58 56 51 49 45 43 32 30 22 20 19 15
CALL[ ]	/* CallFunction */";
};
width = 574;
}
);
note = threeeighths;
unicode = 8540;
},
{
glyphname = fiveeighths;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(98,-19,o),
(115,-7,o),
(122,5,cs),
(527,768,l),
(532,776,o),
(541,796,o),
(541,807,cs),
(541,818,o),
(536,837,o),
(509,837,cs),
(468,837,o),
(462,833,o),
(432,774,cs),
(389,687,o),
(358,624,o),
(333,576,cs),
(302,516,o),
(288,490,o),
(251,423,cs),
(231,385,o),
(209,349,o),
(183,302,cs),
(147,236,o),
(110,169,o),
(43,39,cs),
(39,31,o),
(34,21,o),
(34,12,cs),
(34,-3,o),
(48,-19,o),
(71,-19,cs)
);
},
{
closed = 1;
nodes = (
(507,-12,o),
(543,30,o),
(543,75,cs),
(543,118,o),
(520,153,o),
(471,161,c),
(496,164,o),
(538,198,o),
(538,245,cs),
(538,284,o),
(492,327,o),
(425,327,cs),
(353,327,o),
(320,286,o),
(320,241,cs),
(320,201,o),
(352,163,o),
(378,161,c),
(345,156,o),
(310,122,o),
(310,71,cs),
(310,15,o),
(360,-12,o),
(432,-12,cs)
);
},
{
closed = 1;
nodes = (
(401,42,o),
(381,55,o),
(381,79,cs),
(381,114,o),
(406,125,o),
(423,125,cs),
(458,125,o),
(472,107,o),
(472,79,cs),
(472,63,o),
(459,42,o),
(428,42,cs)
);
},
{
closed = 1;
nodes = (
(409,198,o),
(390,208,o),
(390,233,cs),
(390,260,o),
(410,269,o),
(429,269,cs),
(446,269,o),
(467,262,o),
(467,229,cs),
(467,220,o),
(459,198,o),
(428,198,cs)
);
},
{
closed = 1;
nodes = (
(185,487,o),
(266,542,o),
(266,608,cs),
(266,668,o),
(232,703,o),
(172,703,cs),
(157,703,o),
(125,692,o),
(117,679,c),
(128,735,l),
(141,735,o),
(196,754,o),
(206,760,cs),
(228,772,o),
(258,802,o),
(258,821,cs),
(258,825,o),
(256,829,o),
(253,833,cs),
(250,836,o),
(242,838,o),
(231,838,cs),
(216,838,o),
(207,830,o),
(204,827,cs),
(172,797,o),
(82,805,o),
(71,783,cs),
(70,781,o),
(62,735,o),
(53,655,cs),
(52,648,o),
(50,639,o),
(50,635,cs),
(50,616,o),
(54,606,o),
(61,606,cs),
(98,606,o),
(105,645,o),
(148,645,cs),
(187,645,o),
(194,620,o),
(194,606,cs),
(194,569,o),
(173,529,o),
(119,529,cs),
(103,529,o),
(95,539,o),
(95,551,cs),
(95,569,o),
(105,557,o),
(105,575,cs),
(105,586,o),
(96,592,o),
(77,592,cs),
(62,592,o),
(36,574,o),
(36,542,cs),
(36,518,o),
(54,487,o),
(103,487,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
106 1 3 0 52 1 8 4 132 114 2 13 14 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 3 0 4 0 3 4 104 0 4 8 0 4 8 102 0 8 9 0 8 9 102 0 9 6 0 9 6 102 0 6 7 7 6 94 0 7 0 5 10 7 5 92 0 10 0 15 14 10 15 91 0 14 0 13 12 14 13 91 2 1 0 0 20 67 0 12 12 1 83 11 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 3 0 4 0 3 4 104 0 4 8 0 4 8 102 0 8 9 0 8 9 102 0 9 6 0 9 6 102 0 6 7 0 6 7 102 0 7 0 5 10 7 5 92 0 10 0 15 14 10 15 91 0 14 0 13 12 14 13 91 2 1 0 0 20 67 0 12 12 1 83 11 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
0 3 0 4 0 3 4 104 0 4 8 0 4 8 102 0 8 9 0 8 9 102 0 9 6 0 9 6 102 0 6 7 0 6 7 102 0 7 0 5 10 7 5 92 0 10 0 15 14 10 15 91 0 14 0 13 12 14 13 91 2 1 0 0 20 67 0 12 12 11 83 0 11 11 24 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 71 values pushed */
2 1 0 3 0 106 0 3 4 3 106 0 4 8 4 106 0 8 9 8 106 0 9 6 9 106 0 6 7 6 106 0 7 0 5 10 7 5 92 0 10 0 15 14 10 15 91 0 14 0 13 12 14 13 91 0 12 12 11 83 0 11 11 24 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
165 163 157 155 151 149 145 143 139 137 123 121 97 95 92 90 82 80 72 70 66 64 58 56 51 50 39 37 30 28 20 18 16 15
CALL[ ]	/* CallFunction */";
};
width = 580;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(87,-19,o),
(103,-10,o),
(110,5,cs),
(515,768,ls),
(520,777,o),
(529,796,o),
(529,807,cs),
(529,815,o),
(528,831,o),
(504,831,cs),
(472,831,o),
(460,815,o),
(440,774,cs),
(401,694,o),
(393,677,o),
(366,621,cs),
(347,582,o),
(315,525,o),
(260,423,cs),
(228,364,o),
(209,331,o),
(197,311,cs),
(187,294,o),
(177,278,o),
(171,267,cs),
(130,194,o),
(116,166,o),
(42,18,cs),
(41,16,o),
(40,13,o),
(40,9,cs),
(40,-6,o),
(56,-19,o),
(68,-19,cs)
);
},
{
closed = 1;
nodes = (
(503,-11,o),
(542,31,o),
(542,76,cs),
(542,119,o),
(513,154,o),
(470,162,c),
(492,164,o),
(537,198,o),
(537,246,cs),
(537,283,o),
(500,328,o),
(434,328,cs),
(367,328,o),
(333,287,o),
(333,242,cs),
(333,201,o),
(365,167,o),
(391,162,c),
(362,154,o),
(323,125,o),
(323,72,cs),
(323,16,o),
(374,-11,o),
(435,-11,cs)
);
},
{
closed = 1;
nodes = (
(404,32,o),
(380,48,o),
(380,79,cs),
(380,116,o),
(410,132,o),
(433,132,cs),
(466,132,o),
(485,108,o),
(485,79,cs),
(485,54,o),
(465,32,o),
(433,32,cs)
);
},
{
closed = 1;
nodes = (
(419,193,o),
(389,202,o),
(389,236,cs),
(389,267,o),
(411,282,o),
(436,282,cs),
(457,282,o),
(480,271,o),
(480,236,cs),
(480,216,o),
(463,193,o),
(434,193,cs)
);
},
{
closed = 1;
nodes = (
(180,487,o),
(251,543,o),
(251,608,cs),
(251,664,o),
(217,697,o),
(161,697,cs),
(140,697,o),
(115,686,o),
(102,673,c),
(115,747,l),
(134,751,o),
(189,764,o),
(204,773,cs),
(223,782,o),
(243,806,o),
(243,821,cs),
(243,824,o),
(242,827,o),
(240,831,cs),
(238,834,o),
(232,836,o),
(223,836,cs),
(212,836,o),
(206,830,o),
(203,827,cs),
(171,797,o),
(81,805,o),
(70,783,cs),
(68,778,o),
(62,736,o),
(51,655,cs),
(50,648,o),
(49,639,o),
(49,635,cs),
(49,620,o),
(53,612,o),
(60,612,cs),
(88,612,o),
(104,651,o),
(147,651,cs),
(184,651,o),
(193,620,o),
(193,606,cs),
(193,565,o),
(166,523,o),
(104,523,cs),
(91,523,o),
(80,530,o),
(80,545,cs),
(80,561,o),
(94,552,o),
(94,569,cs),
(94,580,o),
(86,586,o),
(69,586,cs),
(56,586,o),
(35,570,o),
(35,542,cs),
(35,518,o),
(53,487,o),
(102,487,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
68 1 1 0 16 1 5 1 130 112 2 12 13 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
68 1 1 7 16 1 5 1 130 112 2 12 13 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 6 5 3 5 6 3 104 0 3 4 4 3 94 0 1 0 5 6 1 5 91 0 4 0 2 9 4 2 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 7 1 0 0 20 67 0 11 11 8 84 10 1 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 6 5 3 5 6 3 104 0 3 4 5 3 4 102 0 1 0 5 6 1 5 91 0 4 0 2 9 4 2 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 7 1 0 0 20 67 0 11 11 8 84 10 1 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
0 6 5 3 5 6 3 104 0 3 4 5 3 4 102 0 1 0 5 6 1 5 91 0 4 0 2 9 4 2 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 7 1 0 0 20 67 0 11 11 10 84 0 10 10 24 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 0 7 0 106 0 7 1 7 106 0 6 5 3 5 6 3 104 0 3 4 5 3 4 102 0 1 0 5 6 1 5 91 0 4 0 2 9 4 2 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 0 11 11 10 84 0 10 10 24 67 0 8 8 21 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
163 161 157 155 149 147 143 141 137 135 121 119 103 101 93 91 35 40 40 36 38 45 35 15 33
CALL[ ]	/* CallFunction */";
};
width = 579;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(80,-19,o),
(84,-14,o),
(93,5,cs),
(498,768,ls),
(503,779,o),
(512,796,o),
(512,807,cs),
(512,815,o),
(509,821,o),
(497,821,cs),
(473,821,o),
(455,780,o),
(453,774,c),
(416,698,o),
(391,645,o),
(378,621,cs),
(359,583,o),
(327,522,o),
(273,423,cs),
(244,370,o),
(223,332,o),
(212,310,cs),
(203,294,o),
(193,277,o),
(187,266,cs),
(167,230,o),
(122,142,o),
(55,18,c),
(52,11,o),
(50,1,o),
(50,-7,cs),
(50,-15,o),
(55,-19,o),
(64,-19,cs)
);
},
{
closed = 1;
nodes = (
(492,-12,o),
(540,29,o),
(540,75,cs),
(540,117,o),
(501,153,o),
(468,161,c),
(494,170,o),
(535,198,o),
(535,245,cs),
(535,283,o),
(506,327,o),
(447,327,cs),
(390,327,o),
(351,286,o),
(351,241,cs),
(351,202,o),
(381,172,o),
(409,161,c),
(385,150,o),
(341,124,o),
(341,71,cs),
(341,14,o),
(395,-12,o),
(439,-12,cs)
);
},
{
closed = 1;
nodes = (
(401,12,o),
(378,43,o),
(378,76,cs),
(378,116,o),
(412,141,o),
(441,141,cs),
(470,141,o),
(503,117,o),
(503,77,cs),
(503,37,o),
(471,12,o),
(438,12,cs)
);
},
{
closed = 1;
nodes = (
(417,182,o),
(387,200,o),
(387,239,cs),
(387,268,o),
(403,301,o),
(446,301,cs),
(490,301,o),
(498,266,o),
(498,245,cs),
(498,206,o),
(470,182,o),
(442,182,cs)
);
},
{
closed = 1;
nodes = (
(165,487,o),
(229,541,o),
(229,608,cs),
(229,659,o),
(194,687,o),
(146,687,cs),
(115,687,o),
(99,676,o),
(80,663,c),
(97,767,l),
(110,771,o),
(182,783,o),
(202,793,cs),
(211,798,o),
(221,813,o),
(221,821,cs),
(221,826,o),
(218,833,o),
(211,833,cs),
(208,833,o),
(205,831,o),
(201,827,cs),
(169,797,o),
(79,805,o),
(68,783,cs),
(66,778,o),
(60,736,o),
(49,655,cs),
(48,648,o),
(47,639,o),
(47,635,cs),
(47,626,o),
(51,622,o),
(58,622,cs),
(74,622,o),
(103,661,o),
(145,661,cs),
(188,661,o),
(191,621,o),
(191,606,cs),
(191,560,o),
(164,513,o),
(102,513,cs),
(78,513,o),
(58,520,o),
(58,535,cs),
(58,549,o),
(78,543,o),
(78,559,cs),
(78,570,o),
(71,576,o),
(58,576,cs),
(45,576,o),
(33,565,o),
(33,542,cs),
(33,518,o),
(51,487,o),
(100,487,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
102 1 3 0 50 1 7 3 128 112 2 12 13 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 8 7 5 7 8 5 104 0 5 6 6 5 94 0 3 0 7 8 3 7 91 0 6 0 4 9 6 4 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 0 2 2 20 67 0 0 0 12 67 0 11 11 10 83 0 10 10 21 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 8 7 5 7 8 5 104 0 5 6 6 5 94 0 3 0 7 8 3 7 91 0 6 0 4 9 6 4 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 0 2 2 20 67 0 0 0 12 67 0 11 11 10 83 0 10 10 24 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 8 7 5 7 8 5 104 0 5 6 7 5 6 102 0 3 0 7 8 3 7 91 0 6 0 4 9 6 4 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 0 2 2 20 67 0 0 0 12 67 0 11 11 10 83 0 10 10 24 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 2 0 2 106 0 8 7 5 7 8 5 104 0 5 6 7 5 6 102 0 3 0 7 8 3 7 91 0 6 0 4 9 6 4 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 0 0 0 14 67 0 11 11 10 83 0 10 10 24 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
167 165 159 157 153 151 147 145 139 137 119 117 93 91 88 86 78 76 68 66 62 60 54 52 39 37 32 30 22 20 15 15
CALL[ ]	/* CallFunction */";
};
width = 578;
}
);
note = fiveeighths;
unicode = 8541;
},
{
glyphname = seveneighths;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(87,-19,o),
(110,-7,o),
(117,5,cs),
(522,768,l),
(527,776,o),
(536,796,o),
(536,807,cs),
(536,818,o),
(531,837,o),
(504,837,cs),
(471,837,o),
(456,833,o),
(427,774,cs),
(400,721,o),
(372,663,o),
(345,607,cs),
(326,568,o),
(296,515,o),
(246,423,cs),
(196,329,o),
(123,198,o),
(28,18,c),
(27,17,o),
(26,15,o),
(26,14,cs),
(26,13,o),
(26,12,o),
(26,11,cs),
(26,-9,o),
(53,-19,o),
(66,-19,cs)
);
},
{
closed = 1;
nodes = (
(504,-12,o),
(540,30,o),
(540,75,cs),
(540,118,o),
(517,153,o),
(468,161,c),
(495,164,o),
(535,190,o),
(535,245,cs),
(535,290,o),
(493,327,o),
(422,327,cs),
(350,327,o),
(317,286,o),
(317,241,cs),
(317,201,o),
(349,163,o),
(375,161,c),
(342,156,o),
(307,129,o),
(307,78,cs),
(307,18,o),
(357,-12,o),
(429,-12,cs)
);
},
{
closed = 1;
nodes = (
(403,42,o),
(378,51,o),
(378,83,cs),
(378,115,o),
(406,125,o),
(424,125,cs),
(454,125,o),
(469,110,o),
(469,79,cs),
(469,62,o),
(458,42,o),
(426,42,cs)
);
},
{
closed = 1;
nodes = (
(413,198,o),
(387,202,o),
(387,233,cs),
(387,260,o),
(407,269,o),
(426,269,cs),
(442,269,o),
(464,264,o),
(464,229,cs),
(464,220,o),
(456,198,o),
(425,198,cs)
);
},
{
closed = 1;
nodes = (
(142,485,o),
(153,490,o),
(160,501,c),
(307,782,ls),
(315,797,o),
(320,807,o),
(322,812,cs),
(324,816,o),
(325,819,o),
(325,822,cs),
(325,823,o),
(324,825,o),
(322,826,cs),
(320,827,o),
(315,827,o),
(308,827,cs),
(284,827,o),
(156,823,o),
(134,823,cs),
(119,823,o),
(106,812,o),
(106,793,cs),
(106,778,o),
(116,766,o),
(131,766,cs),
(157,766,o),
(187,768,o),
(211,768,cs),
(215,768,o),
(217,766,o),
(217,763,cs),
(217,758,o),
(197,715,o),
(156,635,cs),
(115,554,o),
(95,511,o),
(95,506,cs),
(95,495,o),
(109,485,o),
(125,485,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
89 73 2 8 9 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 2 0 5 0 2 5 104 0 5 0 10 9 5 10 91 0 9 0 8 7 9 8 91 0 0 0 1 83 3 1 1 1 12 67 0 7 7 4 83 6 1 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 2 0 5 0 2 5 104 0 5 0 10 9 5 10 91 0 9 0 8 7 9 8 91 0 3 3 20 67 0 0 0 1 83 0 1 1 12 67 0 7 7 4 83 6 1 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 2 0 5 0 2 5 104 0 5 0 10 9 5 10 91 0 9 0 8 7 9 8 91 0 3 3 20 67 0 0 0 1 83 0 1 1 12 67 0 7 7 6 83 0 6 6 24 67 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 3 1 3 106 0 2 0 5 0 2 5 104 0 5 0 10 9 5 10 91 0 9 0 8 7 9 8 91 0 0 0 1 83 0 1 1 14 67 0 7 7 6 83 0 6 6 24 67 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
123 121 117 115 107 105 102 100 96 94 82 80 65 63 55 53 39 116 120 11 18
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(76,-19,o),
(92,-10,o),
(99,5,cs),
(504,768,ls),
(509,777,o),
(518,796,o),
(518,807,cs),
(518,815,o),
(517,831,o),
(493,831,cs),
(461,831,o),
(449,815,o),
(429,774,cs),
(390,694,o),
(382,677,o),
(355,621,cs),
(336,582,o),
(304,525,o),
(249,423,cs),
(217,364,o),
(198,331,o),
(186,311,cs),
(176,294,o),
(166,278,o),
(160,267,cs),
(119,194,o),
(105,166,o),
(31,18,cs),
(30,16,o),
(29,13,o),
(29,9,cs),
(29,-6,o),
(45,-19,o),
(57,-19,cs)
);
},
{
closed = 1;
nodes = (
(493,-12,o),
(532,30,o),
(532,75,cs),
(532,118,o),
(503,153,o),
(460,161,c),
(482,163,o),
(527,197,o),
(527,245,cs),
(527,282,o),
(490,327,o),
(424,327,cs),
(357,327,o),
(323,286,o),
(323,241,cs),
(323,200,o),
(355,166,o),
(381,161,c),
(352,153,o),
(313,124,o),
(313,71,cs),
(313,15,o),
(364,-12,o),
(425,-12,cs)
);
},
{
closed = 1;
nodes = (
(394,31,o),
(370,47,o),
(370,78,cs),
(370,115,o),
(400,131,o),
(423,131,cs),
(456,131,o),
(475,107,o),
(475,78,cs),
(475,53,o),
(455,31,o),
(423,31,cs)
);
},
{
closed = 1;
nodes = (
(409,192,o),
(379,201,o),
(379,235,cs),
(379,266,o),
(401,281,o),
(426,281,cs),
(447,281,o),
(470,270,o),
(470,235,cs),
(470,215,o),
(453,192,o),
(424,192,cs)
);
},
{
closed = 1;
nodes = (
(110,491,o),
(116,494,o),
(119,501,cs),
(281,806,l),
(283,809,o),
(284,811,o),
(284,814,cs),
(284,823,o),
(278,827,o),
(267,827,cs),
(244,827,o),
(128,823,o),
(110,823,cs),
(95,823,o),
(91,816,o),
(91,809,cs),
(91,808,o),
(92,806,o),
(94,803,cs),
(95,800,o),
(100,798,o),
(107,798,cs),
(132,798,o),
(154,798,o),
(172,799,cs),
(189,800,o),
(210,800,o),
(233,800,cs),
(237,800,o),
(239,798,o),
(239,795,cs),
(239,787,o),
(213,741,o),
(164,649,cs),
(114,557,o),
(88,513,o),
(88,506,cs),
(88,496,o),
(92,491,o),
(101,491,cs)
);
},
{
closed = 1;
nodes = (
(123,487,o),
(133,492,o),
(138,501,cs),
(291,791,ls),
(296,800,o),
(300,807,o),
(301,810,cs),
(302,813,o),
(303,816,o),
(303,819,cs),
(303,824,o),
(297,827,o),
(286,827,cs),
(260,827,o),
(146,823,o),
(119,823,cs),
(104,823,o),
(95,814,o),
(95,799,cs),
(95,788,o),
(101,778,o),
(116,778,cs),
(149,778,o),
(186,780,o),
(215,780,cs),
(219,780,o),
(221,778,o),
(221,775,cs),
(221,767,o),
(192,713,o),
(154,640,cs),
(116,567,o),
(87,512,o),
(87,506,cs),
(87,495,o),
(98,487,o),
(110,487,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
125 107 2 11 12 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 3 0 2 0 3 96 5 1 2 8 0 2 8 102 0 8 0 13 12 8 13 91 0 12 0 11 10 12 11 91 0 0 0 1 83 6 4 2 1 1 12 67 0 10 10 7 84 9 1 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 3 0 2 0 3 96 5 1 2 8 0 2 8 102 0 8 0 13 12 8 13 91 0 12 0 11 10 12 11 91 0 0 0 1 83 6 4 2 1 1 12 67 0 10 10 9 84 0 9 9 24 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 3 0 2 0 3 96 5 1 2 8 0 2 8 102 0 8 0 13 12 8 13 91 0 12 0 11 10 12 11 91 0 6 6 20 67 0 0 0 1 83 4 1 1 1 12 67 0 10 10 9 84 0 9 9 24 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 6 1 6 106 0 3 0 2 0 3 96 5 1 2 8 0 2 8 102 0 8 0 13 12 8 13 91 0 12 0 11 10 12 11 91 0 0 0 1 83 4 1 1 1 14 67 0 10 10 9 84 0 9 9 24 67 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
158 156 152 150 144 142 138 136 132 130 116 114 98 96 88 86 38 116 121 37 116 88 14 21
CALL[ ]	/* CallFunction */";
};
width = 576;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(60,-19,o),
(64,-14,o),
(73,5,cs),
(478,768,ls),
(483,779,o),
(492,796,o),
(492,807,cs),
(492,815,o),
(489,821,o),
(477,821,cs),
(453,821,o),
(435,780,o),
(433,774,c),
(396,698,o),
(371,645,o),
(358,621,cs),
(339,583,o),
(307,522,o),
(253,423,cs),
(224,370,o),
(203,332,o),
(192,310,cs),
(183,294,o),
(173,277,o),
(167,266,cs),
(147,230,o),
(102,142,o),
(35,18,c),
(32,11,o),
(30,1,o),
(30,-7,cs),
(30,-15,o),
(35,-19,o),
(44,-19,cs)
);
},
{
closed = 1;
nodes = (
(472,-12,o),
(520,29,o),
(520,75,cs),
(520,117,o),
(481,153,o),
(448,161,c),
(474,170,o),
(515,198,o),
(515,245,cs),
(515,283,o),
(486,327,o),
(427,327,cs),
(370,327,o),
(331,286,o),
(331,241,cs),
(331,202,o),
(361,172,o),
(389,161,c),
(365,150,o),
(321,124,o),
(321,71,cs),
(321,14,o),
(375,-12,o),
(419,-12,cs)
);
},
{
closed = 1;
nodes = (
(381,12,o),
(358,43,o),
(358,76,cs),
(358,116,o),
(392,141,o),
(421,141,cs),
(450,141,o),
(483,117,o),
(483,77,cs),
(483,37,o),
(451,12,o),
(418,12,cs)
);
},
{
closed = 1;
nodes = (
(397,182,o),
(367,200,o),
(367,239,cs),
(367,268,o),
(383,301,o),
(426,301,cs),
(470,301,o),
(478,266,o),
(478,245,cs),
(478,206,o),
(450,182,o),
(422,182,cs)
);
},
{
closed = 1;
nodes = (
(98,491,o),
(104,494,o),
(107,501,cs),
(269,806,l),
(271,809,o),
(272,811,o),
(272,814,cs),
(272,823,o),
(266,827,o),
(255,827,cs),
(232,827,o),
(116,823,o),
(98,823,cs),
(83,823,o),
(79,816,o),
(79,809,cs),
(79,808,o),
(80,806,o),
(82,803,cs),
(83,800,o),
(88,798,o),
(95,798,cs),
(120,798,o),
(142,798,o),
(160,799,cs),
(177,800,o),
(198,800,o),
(221,800,cs),
(225,800,o),
(227,798,o),
(227,795,cs),
(227,787,o),
(201,741,o),
(152,649,cs),
(102,557,o),
(76,513,o),
(76,506,cs),
(76,496,o),
(80,491,o),
(89,491,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
57 41 2 5 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 10 8 2 8 10 2 104 0 2 0 7 6 2 7 91 0 6 0 5 4 6 5 91 0 8 8 0 83 9 1 0 0 12 67 0 4 4 3 83 0 3 3 21 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 10 8 2 8 10 2 104 0 2 0 7 6 2 7 91 0 6 0 5 4 6 5 91 0 8 8 0 83 9 1 0 0 12 67 0 4 4 3 83 0 3 3 24 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 10 8 2 8 10 2 104 0 2 0 7 6 2 7 91 0 6 0 5 4 6 5 91 0 8 8 0 83 9 1 0 0 14 67 0 4 4 3 83 0 3 3 24 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
129 127 122 115 111 106 96 94 88 86 82 80 76 74 68 66 48 46 32 30 22 20 11 15
CALL[ ]	/* CallFunction */";
};
width = 563;
}
);
note = seveneighths;
unicode = 8542;
},
{
glyphname = zeroinferior;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(203,-18,o),
(256,27,o),
(256,149,cs),
(256,223,o),
(239,324,o),
(140,324,cs),
(53,324,o),
(30,230,o),
(30,135,cs),
(30,18,o),
(79,-18,o),
(143,-18,cs)
);
},
{
closed = 1;
nodes = (
(110,39,o),
(101,96,o),
(101,143,cs),
(101,203,o),
(110,267,o),
(146,267,cs),
(178,267,o),
(184,193,o),
(184,150,cs),
(184,107,o),
(181,77,o),
(174,62,cs),
(167,47,o),
(156,39,o),
(141,39,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68 40 40 38 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 282;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(189,-14,o),
(243,34,o),
(243,153,cs),
(243,227,o),
(224,328,o),
(137,328,cs),
(55,328,o),
(31,229,o),
(31,139,cs),
(31,25,o),
(79,-14,o),
(135,-14,cs)
);
},
{
closed = 1;
nodes = (
(99,31,o),
(88,94,o),
(88,147,cs),
(88,212,o),
(103,283,o),
(140,283,cs),
(177,283,o),
(185,203,o),
(185,154,cs),
(185,55,o),
(160,31,o),
(133,31,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68 40 40 40 37 4 30
CALL[ ]	/* CallFunction */";
};
width = 272;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(170,-10,o),
(225,39,o),
(225,157,cs),
(225,231,o),
(204,332,o),
(133,332,cs),
(61,332,o),
(33,229,o),
(33,143,cs),
(33,34,o),
(79,-10,o),
(124,-10,cs)
);
},
{
closed = 1;
nodes = (
(86,15,o),
(70,90,o),
(70,151,cs),
(70,224,o),
(93,307,o),
(133,307,cs),
(175,307,o),
(187,218,o),
(187,158,cs),
(187,58,o),
(155,15,o),
(123,15,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 24 3 68 40 40 40 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 258;
}
);
note = zeroinferior;
unicode = 8320;
},
{
glyphname = oneinferior;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(161,0,ls),
(173,0,o),
(192,3,o),
(192,28,cs),
(192,51,o),
(176,56,o),
(157,56,cs),
(144,56,l),
(144,56,l),
(145,119,o),
(146,168,o),
(147,203,cs),
(148,238,o),
(148,263,o),
(149,280,cs),
(150,299,o),
(150,311,o),
(150,315,cs),
(150,320,o),
(149,324,o),
(148,325,cs),
(146,326,o),
(144,327,o),
(142,327,cs),
(137,327,o),
(107,323,o),
(54,323,cs),
(39,323,o),
(21,313,o),
(21,296,cs),
(21,275,o),
(31,270,o),
(54,270,cs),
(56,270,o),
(59,270,o),
(64,271,cs),
(69,271,o),
(72,271,o),
(73,271,cs),
(79,271,o),
(82,266,o),
(82,257,cs),
(82,223,o),
(80,227,o),
(80,183,cs),
(79,153,o),
(77,131,o),
(77,115,cs),
(76,102,o),
(75,87,o),
(75,73,cs),
(75,57,o),
(70,54,o),
(54,54,cs),
(39,54,o),
(22,47,o),
(22,28,cs),
(22,5,o),
(43,0,o),
(59,0,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
0 5 4 1 3 0 5 3 91 2 6 2 0 0 1 83 0 1 1 13 1 68 1 0 43 36 32 30 29 27 14 12 8 5 0 50 1 50 7 15
CALL[ ]	/* CallFunction */";
};
width = 210;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(154,1,ls),
(163,1,o),
(178,3,o),
(178,23,cs),
(178,44,o),
(158,45,o),
(150,45,cs),
(130,45,l),
(130,45,l),
(131,111,o),
(132,162,o),
(133,199,cs),
(134,236,o),
(134,263,o),
(135,280,cs),
(136,301,o),
(136,313,o),
(136,316,cs),
(136,321,o),
(135,325,o),
(134,326,cs),
(132,327,o),
(130,328,o),
(128,328,cs),
(123,328,o),
(96,324,o),
(47,324,cs),
(36,324,o),
(21,316,o),
(21,303,cs),
(21,283,o),
(36,283,o),
(47,283,cs),
(50,283,o),
(55,283,o),
(61,284,cs),
(67,284,o),
(71,284,o),
(73,284,cs),
(82,284,o),
(82,273,o),
(82,270,cs),
(82,231,o),
(80,233,o),
(80,184,cs),
(79,151,o),
(77,126,o),
(77,109,cs),
(76,95,o),
(75,77,o),
(75,62,cs),
(75,45,o),
(68,43,o),
(47,43,cs),
(43,43,o),
(22,39,o),
(22,23,cs),
(22,3,o),
(42,1,o),
(52,1,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
5 1 4 0 3 0 4 3 91 2 6 2 0 0 1 84 0 1 1 13 1 68 2 1 49 45 44 42 38 33 19 17 11 8 1 56 2 56 7 26
CALL[ ]	/* CallFunction */";
};
width = 197;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(144,0,ls),
(153,0,o),
(158,1,o),
(158,12,cs),
(158,24,o),
(147,24,o),
(140,24,cs),
(110,24,l),
(111,95,o),
(112,151,o),
(113,190,cs),
(114,229,o),
(114,257,o),
(115,276,cs),
(116,298,o),
(116,311,o),
(116,315,cs),
(116,320,o),
(115,324,o),
(114,325,cs),
(112,326,o),
(110,327,o),
(108,327,cs),
(104,327,o),
(81,323,o),
(37,323,cs),
(30,323,o),
(21,319,o),
(21,312,cs),
(21,301,o),
(30,302,o),
(37,302,cs),
(42,302,o),
(48,302,o),
(57,303,cs),
(65,303,o),
(70,303,o),
(73,303,cs),
(82,303,o),
(82,294,o),
(82,289,cs),
(82,277,o),
(82,261,o),
(82,251,cs),
(81,237,o),
(80,218,o),
(80,183,cs),
(79,145,o),
(77,116,o),
(77,96,cs),
(76,79,o),
(75,59,o),
(75,41,cs),
(75,24,o),
(65,22,o),
(37,22,cs),
(33,22,o),
(22,20,o),
(22,12,cs),
(22,0,o),
(35,0,o),
(42,0,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
5 1 4 0 3 0 4 3 91 2 6 2 0 0 1 83 0 1 1 13 1 68 1 0 44 40 39 37 33 28 14 12 8 5 0 51 1 51 7 15
CALL[ ]	/* CallFunction */";
};
width = 178;
}
);
note = oneinferior;
unicode = 8321;
},
{
glyphname = twoinferior;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,-5,o),
(54,-3,o),
(58,0,cs),
(61,3,o),
(64,5,o),
(65,6,c),
(83,5,o),
(101,5,o),
(118,4,cs),
(149,3,o),
(184,2,o),
(211,2,cs),
(218,2,o),
(222,8,o),
(223,11,c),
(221,9,o),
(247,47,o),
(247,61,cs),
(247,69,o),
(240,78,o),
(225,78,cs),
(212,78,o),
(203,75,o),
(199,70,cs),
(194,64,o),
(191,60,o),
(190,59,cs),
(189,58,o),
(185,58,o),
(177,58,cs),
(137,60,l),
(172,100,o),
(237,180,o),
(237,253,cs),
(237,298,o),
(208,335,o),
(133,335,cs),
(57,335,o),
(22,279,o),
(22,249,cs),
(22,230,o),
(30,212,o),
(62,212,cs),
(79,212,o),
(97,217,o),
(97,238,cs),
(97,245,o),
(95,250,o),
(92,251,cs),
(88,252,o),
(86,255,o),
(86,258,cs),
(86,265,o),
(106,280,o),
(129,280,cs),
(149,280,o),
(165,269,o),
(165,254,cs),
(165,177,o),
(85,66,o),
(23,18,cs),
(18,14,o),
(15,11,o),
(15,8,cs),
(15,6,o),
(16,3,o),
(18,0,cs),
(20,-3,o),
(25,-5,o),
(33,-5,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
11 1 1 6 1 66 0 1 6 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 4 3 0 3 4 0 104 0 0 6 6 0 94 0 5 0 3 4 5 3 91 0 6 6 1 84 2 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 4 3 0 3 4 0 104 0 0 6 6 0 94 0 5 0 3 4 5 3 91 0 6 6 1 84 0 1 1 13 67 0 2 2 16 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
39 38 39 43 34 105 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 269;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(44,-2,o),
(51,-1,o),
(54,2,cs),
(57,4,o),
(60,6,o),
(61,7,c),
(78,6,o),
(95,6,o),
(112,5,cs),
(141,4,o),
(175,3,o),
(200,3,cs),
(203,3,o),
(206,4,o),
(208,7,cs),
(209,9,o),
(211,11,o),
(212,12,c),
(217,21,o),
(222,29,o),
(227,38,cs),
(232,47,o),
(235,54,o),
(235,59,cs),
(235,66,o),
(230,73,o),
(217,73,cs),
(208,73,o),
(195,68,o),
(187,53,cs),
(184,49,o),
(183,47,o),
(183,47,c),
(182,46,l),
(113,49,l),
(153,89,o),
(226,176,o),
(226,254,cs),
(226,299,o),
(197,336,o),
(132,336,cs),
(60,336,o),
(25,276,o),
(25,250,cs),
(25,231,o),
(29,216,o),
(60,216,cs),
(71,216,o),
(86,223,o),
(86,244,cs),
(86,249,o),
(84,253,o),
(81,255,cs),
(77,256,o),
(75,259,o),
(75,262,cs),
(75,265,o),
(80,271,o),
(89,279,cs),
(98,287,o),
(111,291,o),
(128,291,cs),
(155,291,o),
(168,274,o),
(168,255,cs),
(168,178,o),
(88,67,o),
(26,19,cs),
(21,15,o),
(18,12,o),
(18,9,cs),
(18,7,o),
(19,5,o),
(21,2,cs),
(22,-1,o),
(27,-2,o),
(34,-2,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
61 1 6 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 5 0 3 4 5 3 91 0 6 6 1 83 2 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 5 0 3 4 5 3 91 0 6 6 1 83 0 1 1 13 67 0 2 2 16 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
23 38 39 43 34 103 35 7 33
CALL[ ]	/* CallFunction */";
};
width = 260;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(42,0,o),
(47,1,o),
(50,2,cs),
(52,3,o),
(54,5,o),
(55,6,c),
(72,5,o),
(88,5,o),
(104,4,cs),
(131,3,o),
(163,2,o),
(184,2,cs),
(187,2,o),
(190,3,o),
(192,6,cs),
(193,8,o),
(195,10,o),
(196,11,c),
(216,49,o),
(218,47,o),
(218,53,cs),
(218,54,o),
(217,56,o),
(216,59,cs),
(215,61,o),
(211,62,o),
(206,62,cs),
(197,62,o),
(194,56,o),
(191,52,cs),
(184,40,o),
(178,33,o),
(175,30,cs),
(172,27,o),
(169,25,o),
(168,25,cs),
(79,28,l),
(128,71,o),
(210,171,o),
(210,253,cs),
(210,298,o),
(182,335,o),
(130,335,cs),
(67,335,o),
(29,277,o),
(29,249,cs),
(29,230,o),
(36,220,o),
(50,220,cs),
(51,220,o),
(55,221,o),
(61,224,cs),
(67,226,o),
(70,232,o),
(70,243,cs),
(70,248,o),
(68,252,o),
(65,254,cs),
(61,255,o),
(59,258,o),
(59,261,cs),
(59,274,o),
(81,307,o),
(126,307,cs),
(161,307,o),
(172,285,o),
(172,254,cs),
(172,177,o),
(92,66,o),
(30,18,cs),
(25,14,o),
(22,11,o),
(22,8,cs),
(22,3,o),
(26,0,o),
(35,0,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 5 0 3 4 5 3 91 0 6 6 1 83 2 1 1 1 13 1 68 39 37 41 42 34 105 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 247;
}
);
note = twoinferior;
unicode = 8322;
},
{
glyphname = threeinferior;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(145,-9,o),
(228,37,o),
(228,105,cs),
(228,149,o),
(193,174,o),
(153,174,cs),
(146,174,o),
(142,173,o),
(137,172,c),
(136,175,l),
(136,175,l),
(171,188,o),
(224,211,o),
(224,268,cs),
(224,324,o),
(174,332,o),
(138,332,cs),
(71,332,o),
(28,275,o),
(28,245,cs),
(28,233,o),
(37,225,o),
(49,225,cs),
(74,225,o),
(84,240,o),
(88,249,cs),
(96,268,o),
(111,290,o),
(132,290,cs),
(143,290,o),
(152,283,o),
(152,270,cs),
(152,225,o),
(97,198,o),
(60,172,cs),
(59,171,o),
(56,168,o),
(52,165,cs),
(48,161,o),
(46,156,o),
(46,151,cs),
(46,140,o),
(48,133,o),
(51,129,cs),
(54,125,o),
(57,123,o),
(60,123,cs),
(65,123,o),
(72,125,o),
(80,128,cs),
(87,131,o),
(97,132,o),
(108,132,cs),
(135,132,o),
(156,124,o),
(156,101,cs),
(156,59,o),
(106,41,o),
(73,41,cs),
(59,41,o),
(69,63,o),
(44,63,cs),
(25,63,o),
(16,46,o),
(16,29,cs),
(16,4,o),
(36,-9,o),
(77,-9,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
70 1 0 7 0 1 4 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 7 6 0 6 7 0 104 0 0 4 6 0 4 102 5 1 4 2 6 4 2 102 0 3 2 1 2 3 96 0 8 0 6 7 8 6 91 0 2 2 1 83 0 1 1 24 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 7 6 0 6 7 0 104 0 0 4 6 0 4 102 0 4 5 6 4 5 102 0 5 2 6 5 2 102 0 3 2 1 2 3 96 0 8 0 6 7 8 6 91 0 2 2 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 36 44 33 38 35 35 38 34 9 24
CALL[ ]	/* CallFunction */";
};
width = 253;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(140,-8,o),
(217,43,o),
(217,106,cs),
(217,150,o),
(177,174,o),
(140,174,cs),
(137,174,o),
(135,174,o),
(133,174,cs),
(130,173,o),
(128,173,o),
(126,173,cs),
(123,172,o),
(121,172,o),
(120,172,c),
(149,185,o),
(213,217,o),
(213,281,cs),
(213,328,o),
(156,333,o),
(132,333,cs),
(67,333,o),
(31,273,o),
(31,246,cs),
(31,235,o),
(41,228,o),
(48,228,cs),
(67,228,o),
(74,241,o),
(77,250,c),
(89,279,o),
(108,297,o),
(125,297,cs),
(145,297,o),
(155,291,o),
(155,278,cs),
(155,222,o),
(100,200,o),
(63,173,cs),
(62,172,o),
(59,169,o),
(55,166,cs),
(51,162,o),
(49,157,o),
(49,152,cs),
(49,142,o),
(51,136,o),
(55,134,cs),
(59,131,o),
(62,130,o),
(63,130,cs),
(66,130,o),
(72,132,o),
(81,135,cs),
(90,138,o),
(100,139,o),
(111,139,cs),
(138,139,o),
(159,129,o),
(159,102,cs),
(159,54,o),
(108,33,o),
(76,33,cs),
(57,33,o),
(61,55,o),
(40,55,cs),
(25,55,o),
(19,39,o),
(19,24,cs),
(19,3,o),
(45,-8,o),
(76,-8,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 10 1 9 7 0 9 7 102 0 7 8 0 7 8 102 0 2 0 0 1 2 0 91 0 8 8 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 0 9 10 0 9 10 102 0 10 7 0 10 7 102 0 7 8 0 7 8 102 0 2 0 0 1 2 0 91 0 8 8 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
68 66 65 63 35 36 38 33 17 25 38 36 39 11 35
CALL[ ]	/* CallFunction */";
};
width = 245;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(136,-9,o),
(201,53,o),
(201,105,cs),
(201,149,o),
(153,171,o),
(121,171,cs),
(118,171,o),
(116,171,o),
(114,171,cs),
(111,170,o),
(109,170,o),
(107,170,cs),
(104,169,o),
(102,169,o),
(101,169,c),
(112,180,o),
(197,213,o),
(197,280,cs),
(197,326,o),
(157,332,o),
(136,332,cs),
(71,332,o),
(35,272,o),
(35,245,cs),
(35,235,o),
(39,230,o),
(46,230,cs),
(54,230,o),
(58,240,o),
(61,249,cs),
(73,284,o),
(93,306,o),
(129,306,cs),
(153,306,o),
(159,296,o),
(159,277,cs),
(159,221,o),
(104,199,o),
(67,172,cs),
(66,171,o),
(63,168,o),
(59,165,cs),
(55,161,o),
(53,156,o),
(53,151,cs),
(53,140,o),
(64,139,o),
(67,139,cs),
(70,139,o),
(76,141,o),
(85,144,cs),
(94,147,o),
(104,148,o),
(115,148,cs),
(142,148,o),
(163,136,o),
(163,101,cs),
(163,47,o),
(111,17,o),
(80,17,cs),
(53,17,o),
(50,39,o),
(35,39,cs),
(24,39,o),
(23,30,o),
(23,23,cs),
(23,0,o),
(51,-9,o),
(74,-9,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
0 1 0 3 0 1 3 104 0 10 9 7 9 10 7 104 0 7 8 9 7 8 102 0 2 0 0 1 2 0 91 5 4 2 3 0 9 10 3 9 91 0 8 8 6 83 0 6 6 24 6 68 69 67 66 64 35 36 40 33 17 25 37 36 39 11 24
CALL[ ]	/* CallFunction */";
};
width = 233;
}
);
note = threeinferior;
unicode = 8323;
},
{
glyphname = fourinferior;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(228,0,ls),
(255,0,o),
(264,4,o),
(264,23,cs),
(264,44,o),
(247,48,o),
(236,48,cs),
(233,48,o),
(231,49,o),
(231,50,cs),
(231,51,o),
(231,53,o),
(232,56,cs),
(232,59,o),
(232,62,o),
(233,66,c),
(243,66,l),
(243,66,l),
(264,66,o),
(270,83,o),
(270,94,cs),
(270,113,o),
(261,122,o),
(242,122,cs),
(237,122,l),
(241,168,o),
(250,228,o),
(250,304,cs),
(250,327,o),
(232,337,o),
(213,337,cs),
(197,337,o),
(181,328,o),
(174,319,cs),
(140,276,o),
(143,280,o),
(116,243,cs),
(99,220,o),
(63,172,o),
(22,117,cs),
(13,106,o),
(8,98,o),
(5,93,cs),
(2,88,o),
(1,82,o),
(1,77,cs),
(1,71,o),
(4,67,o),
(9,66,cs),
(14,65,o),
(23,64,o),
(34,64,cs),
(40,64,o),
(50,64,o),
(65,64,cs),
(79,64,o),
(93,64,o),
(108,65,cs),
(119,66,o),
(128,66,o),
(137,66,cs),
(145,66,o),
(154,66,o),
(165,66,c),
(164,55,ls),
(164,51,o),
(160,49,o),
(153,48,c),
(151,47,o),
(146,47,o),
(139,47,cs),
(131,46,o),
(124,46,o),
(117,45,cs),
(104,44,o),
(89,40,o),
(89,25,cs),
(89,5,o),
(107,0,o),
(119,0,cs)
);
},
{
closed = 1;
nodes = (
(100,120,o),
(98,121,o),
(98,124,cs),
(98,125,o),
(99,127,o),
(100,128,cs),
(101,129,o),
(102,131,o),
(103,132,cs),
(178,240,l),
(169,123,l),
(154,122,o),
(140,121,o),
(127,121,cs),
(114,120,o),
(106,120,o),
(104,120,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
65 1 5 4 23 1 0 3 2 66 0 4 5 4 106 9 7 2 5 8 6 2 3 0 5 3 91 2 1 0 0 1 84 0 1 1 13 1 68 63 61 0 0 61 70 63 70 0 60 0 59 39 46 116 22 52 36 10 21
CALL[ ]	/* CallFunction */";
};
width = 294;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(224,1,ls),
(239,1,o),
(253,1,o),
(253,20,cs),
(253,40,o),
(232,40,o),
(224,40,cs),
(220,40,o),
(215,42,o),
(215,50,cs),
(215,53,o),
(216,68,o),
(219,79,c),
(235,79,l),
(235,79,l),
(254,79,o),
(259,94,o),
(259,101,cs),
(259,116,o),
(250,123,o),
(232,123,cs),
(219,123,l),
(220,144,o),
(232,301,o),
(232,309,cs),
(232,334,o),
(207,335,o),
(202,335,cs),
(189,335,o),
(173,324,o),
(170,320,cs),
(125,264,o),
(84,208,o),
(18,118,cs),
(12,110,o),
(8,104,o),
(7,100,cs),
(5,96,o),
(4,92,o),
(4,89,cs),
(4,80,o),
(13,76,o),
(30,76,cs),
(42,76,o),
(75,77,o),
(104,78,cs),
(115,79,o),
(125,79,o),
(135,79,cs),
(145,79,o),
(155,79,o),
(166,79,c),
(162,55,ls),
(159,44,o),
(153,43,o),
(142,40,cs),
(140,39,o),
(136,39,o),
(131,39,cs),
(125,38,o),
(119,38,o),
(113,37,cs),
(102,37,o),
(92,31,o),
(92,20,cs),
(92,5,o),
(106,1,o),
(115,1,cs)
);
},
{
closed = 1;
nodes = (
(82,121,o),
(80,122,o),
(80,125,cs),
(80,126,o),
(81,128,o),
(82,129,cs),
(83,130,o),
(84,132,o),
(85,133,cs),
(175,256,l),
(165,124,l),
(147,123,o),
(130,122,o),
(114,122,cs),
(97,121,o),
(88,121,o),
(86,121,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
67 1 6 5 1 66 23 1 0 1 65 0 5 6 5 106 10 8 2 6 9 7 2 4 0 6 4 91 3 2 2 0 0 1 84 0 1 1 13 1 68 65 63 1 1 63 72 65 72 1 62 1 61 41 43 117 17 20 52 38 11 33
CALL[ ]	/* CallFunction */";
};
width = 283;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(218,0,ls),
(229,0,o),
(237,0,o),
(237,12,cs),
(237,24,o),
(223,24,o),
(218,24,cs),
(206,24,o),
(189,23,o),
(189,34,cs),
(189,41,o),
(190,73,o),
(193,98,c),
(229,98,ls),
(240,98,o),
(243,107,o),
(243,110,cs),
(243,118,o),
(237,122,o),
(226,122,cs),
(193,122,l),
(196,201,o),
(206,292,o),
(206,308,cs),
(206,329,o),
(190,329,o),
(186,329,cs),
(177,329,o),
(167,322,o),
(164,319,cs),
(119,263,o),
(78,207,o),
(12,117,cs),
(8,112,o),
(8,109,o),
(8,106,cs),
(8,98,o),
(13,94,o),
(24,94,cs),
(30,94,o),
(40,94,o),
(55,95,cs),
(69,96,o),
(83,96,o),
(98,97,cs),
(109,98,o),
(119,98,o),
(129,98,cs),
(139,98,o),
(149,98,o),
(160,98,c),
(156,39,ls),
(156,28,o),
(148,25,o),
(136,24,c),
(134,23,o),
(130,23,o),
(125,23,cs),
(119,22,o),
(113,22,o),
(107,21,cs),
(102,21,o),
(96,16,o),
(96,9,cs),
(96,2,o),
(104,0,o),
(109,0,cs)
);
},
{
closed = 1;
nodes = (
(56,120,o),
(54,121,o),
(54,124,cs),
(54,125,o),
(55,127,o),
(56,128,cs),
(57,129,o),
(58,131,o),
(59,132,cs),
(171,280,l),
(159,123,l),
(136,122,o),
(114,121,o),
(94,121,cs),
(74,120,o),
(63,120,o),
(60,120,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
64 1 6 5 1 66 22 1 0 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 5 6 5 106 3 2 2 0 4 1 6 0 96 10 8 2 6 9 7 2 4 0 6 4 91 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 5 6 5 106 3 2 2 0 4 1 4 0 1 104 10 8 2 6 9 7 2 4 0 6 4 91 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
63 60 0 0 60 69 63 69 0 59 0 58 39 43 117 17 20 52 37 11 22
CALL[ ]	/* CallFunction */";
};
width = 267;
}
);
note = fourinferior;
unicode = 8324;
},
{
glyphname = fiveinferior;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(168,-12,o),
(250,43,o),
(250,109,cs),
(250,169,o),
(215,204,o),
(155,204,cs),
(139,204,o),
(109,193,o),
(101,180,c),
(111,236,l),
(126,236,o),
(177,255,o),
(190,261,cs),
(212,273,o),
(242,303,o),
(242,322,cs),
(242,325,o),
(241,328,o),
(238,333,cs),
(235,337,o),
(228,339,o),
(215,339,cs),
(200,339,o),
(191,331,o),
(188,328,cs),
(156,298,o),
(66,306,o),
(55,284,cs),
(53,280,o),
(45,238,o),
(36,156,cs),
(35,149,o),
(34,140,o),
(34,136,cs),
(34,117,o),
(38,107,o),
(45,107,cs),
(81,107,o),
(88,146,o),
(132,146,cs),
(168,146,o),
(178,126,o),
(178,107,cs),
(178,71,o),
(150,30,o),
(110,30,cs),
(86,30,o),
(79,41,o),
(79,52,cs),
(79,67,o),
(88,60,o),
(88,76,cs),
(88,87,o),
(79,93,o),
(60,93,cs),
(47,93,o),
(20,75,o),
(20,43,cs),
(20,28,o),
(27,-12,o),
(99,-12,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 1 0 17 1 6 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 1 0 106 0 1 2 1 106 0 7 6 4 6 7 4 104 0 4 5 5 4 94 0 2 0 6 7 2 6 91 0 5 5 3 84 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 1 0 106 0 1 2 1 106 0 7 6 4 6 7 4 104 0 4 5 5 4 94 0 2 0 6 7 2 6 91 0 5 5 3 84 0 3 3 24 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 0 1 0 106 0 1 2 1 106 0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 2 0 6 7 2 6 91 0 5 5 3 84 0 3 3 24 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
35 38 40 38 38 37 27 34 8 23
CALL[ ]	/* CallFunction */";
};
width = 272;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(166,-11,o),
(237,45,o),
(237,110,cs),
(237,166,o),
(203,199,o),
(147,199,cs),
(126,199,o),
(101,188,o),
(88,175,c),
(101,249,l),
(120,253,o),
(175,266,o),
(190,275,cs),
(209,284,o),
(229,308,o),
(229,323,cs),
(229,326,o),
(228,329,o),
(226,333,cs),
(224,336,o),
(218,338,o),
(209,338,cs),
(198,338,o),
(192,332,o),
(189,329,cs),
(157,299,o),
(67,307,o),
(56,285,cs),
(54,280,o),
(48,238,o),
(37,157,cs),
(36,150,o),
(35,141,o),
(35,137,cs),
(35,122,o),
(39,114,o),
(46,114,cs),
(74,114,o),
(90,153,o),
(133,153,cs),
(170,153,o),
(179,122,o),
(179,108,cs),
(179,67,o),
(152,25,o),
(90,25,cs),
(77,25,o),
(66,32,o),
(66,47,cs),
(66,63,o),
(80,54,o),
(80,71,cs),
(80,82,o),
(72,88,o),
(55,88,cs),
(42,88,o),
(21,72,o),
(21,44,cs),
(21,20,o),
(39,-11,o),
(88,-11,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
68 1 1 0 16 1 5 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 1 0 106 0 6 5 3 5 6 3 104 0 3 4 4 3 94 0 1 0 5 6 1 5 91 0 4 4 2 84 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 0 1 0 106 0 6 5 3 5 6 3 104 0 3 4 5 3 4 102 0 1 0 5 6 1 5 91 0 4 4 2 84 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
35 40 40 36 38 45 35 7 33
CALL[ ]	/* CallFunction */";
};
width = 261;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(155,-12,o),
(219,42,o),
(219,109,cs),
(219,160,o),
(184,188,o),
(136,188,cs),
(105,188,o),
(89,177,o),
(70,164,c),
(87,268,l),
(100,272,o),
(172,284,o),
(192,294,cs),
(201,299,o),
(211,314,o),
(211,322,cs),
(211,327,o),
(208,334,o),
(201,334,cs),
(198,334,o),
(195,332,o),
(191,328,cs),
(159,298,o),
(69,306,o),
(58,284,cs),
(56,279,o),
(50,237,o),
(39,156,cs),
(38,149,o),
(37,140,o),
(37,136,cs),
(37,127,o),
(41,123,o),
(48,123,cs),
(64,123,o),
(93,162,o),
(135,162,cs),
(178,162,o),
(181,122,o),
(181,107,cs),
(181,61,o),
(154,14,o),
(92,14,cs),
(68,14,o),
(48,21,o),
(48,36,cs),
(48,50,o),
(68,44,o),
(68,60,cs),
(68,71,o),
(61,77,o),
(48,77,cs),
(35,77,o),
(23,66,o),
(23,43,cs),
(23,19,o),
(41,-12,o),
(90,-12,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
66 1 1 0 14 1 5 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 1 0 106 0 6 5 3 5 6 3 104 0 3 4 4 3 94 0 1 0 5 6 1 5 91 0 4 4 2 84 0 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 1 0 106 0 6 5 3 5 6 3 104 0 3 4 4 3 94 0 1 0 5 6 1 5 91 0 4 4 2 84 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 0 1 0 106 0 6 5 3 5 6 3 104 0 3 4 5 3 4 102 0 1 0 5 6 1 5 91 0 4 4 2 84 0 2 2 24 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
35 40 40 36 38 45 33 7 22
CALL[ ]	/* CallFunction */";
};
width = 245;
}
);
note = fiveinferior;
unicode = 8325;
},
{
glyphname = sixinferior;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(199,-12,o),
(247,21,o),
(247,77,cs),
(247,125,o),
(212,162,o),
(152,162,cs),
(129,162,o),
(112,155,o),
(101,148,cs),
(94,144,o),
(89,140,o),
(84,135,c),
(84,181,o),
(158,270,o),
(185,292,cs),
(193,299,o),
(194,304,o),
(194,308,cs),
(194,323,o),
(171,327,o),
(160,327,cs),
(153,327,o),
(144,324,o),
(135,317,cs),
(91,284,o),
(21,185,o),
(21,101,cs),
(21,18,o),
(80,-12,o),
(142,-12,cs)
);
},
{
closed = 1;
nodes = (
(122,38,o),
(95,48,o),
(95,82,cs),
(95,101,o),
(103,126,o),
(135,126,cs),
(162,126,o),
(175,104,o),
(175,81,cs),
(175,49,o),
(149,38,o),
(136,38,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 2 0 2 106 5 1 3 4 1 4 3 1 104 0 0 0 4 3 0 4 91 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 2 0 2 106 5 1 3 4 1 4 3 1 104 0 0 0 4 3 0 4 91 0 1 1 24 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
37 36 45 43 36 51 37 51 42 38 41 6 18
CALL[ ]	/* CallFunction */";
};
width = 255;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(176,-11,o),
(236,23,o),
(236,80,cs),
(236,125,o),
(198,163,o),
(141,163,cs),
(99,163,o),
(73,138,o),
(73,128,cs),
(73,178,o),
(146,270,o),
(174,293,cs),
(183,300,o),
(188,306,o),
(188,311,cs),
(188,324,o),
(169,328,o),
(162,328,cs),
(155,328,o),
(147,325,o),
(138,318,cs),
(94,288,o),
(24,185,o),
(24,98,cs),
(24,21,o),
(77,-11,o),
(125,-11,cs)
);
},
{
closed = 1;
nodes = (
(110,29,o),
(84,42,o),
(84,77,cs),
(84,97,o),
(94,131,o),
(131,131,cs),
(160,131,o),
(178,109,o),
(178,80,cs),
(178,41,o),
(147,29,o),
(129,29,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 2 0 2 106 0 0 0 4 3 0 4 91 5 1 3 3 1 83 0 1 1 24 1 68 37 36 45 43 36 51 37 51 42 38 42 6 29
CALL[ ]	/* CallFunction */";
};
width = 249;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(175,-12,o),
(221,25,o),
(221,82,cs),
(221,122,o),
(198,162,o),
(137,162,cs),
(75,162,o),
(61,125,o),
(58,116,c),
(61,179,o),
(127,263,o),
(159,292,cs),
(165,297,o),
(170,301,o),
(174,303,cs),
(177,305,o),
(179,308,o),
(179,313,cs),
(179,325,o),
(168,327,o),
(165,327,cs),
(164,327,o),
(161,326,o),
(157,325,cs),
(153,323,o),
(148,320,o),
(143,317,cs),
(98,284,o),
(29,191,o),
(29,91,cs),
(29,16,o),
(67,-12,o),
(118,-12,cs)
);
},
{
closed = 1;
nodes = (
(92,12,o),
(69,30,o),
(69,66,cs),
(69,93,o),
(82,137,o),
(126,137,cs),
(157,137,o),
(183,115,o),
(183,76,cs),
(183,31,o),
(149,12,o),
(119,12,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 106 0 0 0 4 3 0 4 91 5 1 3 3 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 106 0 0 0 4 3 0 4 91 5 1 3 3 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
36 35 44 42 35 50 36 50 41 38 41 6 18
CALL[ ]	/* CallFunction */";
};
width = 240;
}
);
note = sixinferior;
unicode = 8326;
},
{
glyphname = seveninferior;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(60,-11,o),
(71,-6,o),
(78,5,c),
(225,286,ls),
(233,301,o),
(238,311,o),
(240,316,cs),
(242,320,o),
(243,323,o),
(243,326,cs),
(243,327,o),
(242,329,o),
(240,330,cs),
(238,331,o),
(233,331,o),
(226,331,cs),
(202,331,o),
(74,327,o),
(52,327,cs),
(37,327,o),
(24,316,o),
(24,297,cs),
(24,282,o),
(34,270,o),
(49,270,cs),
(75,270,o),
(105,272,o),
(129,272,cs),
(133,272,o),
(135,270,o),
(135,267,cs),
(135,262,o),
(115,219,o),
(74,139,cs),
(33,58,o),
(13,15,o),
(13,10,cs),
(13,-1,o),
(27,-11,o),
(43,-11,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
0 1 0 0 2 1 0 91 0 2 2 24 2 68 39 116 120 3 18
CALL[ ]	/* CallFunction */";
};
width = 237;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(53,-8,o),
(63,-3,o),
(68,6,cs),
(221,296,ls),
(226,305,o),
(230,312,o),
(231,315,cs),
(232,318,o),
(233,321,o),
(233,324,cs),
(233,329,o),
(227,332,o),
(216,332,cs),
(190,332,o),
(76,328,o),
(49,328,cs),
(34,328,o),
(25,319,o),
(25,304,cs),
(25,293,o),
(31,283,o),
(46,283,cs),
(79,283,o),
(116,285,o),
(145,285,cs),
(149,285,o),
(151,283,o),
(151,280,cs),
(151,272,o),
(122,218,o),
(84,145,cs),
(46,72,o),
(17,17,o),
(17,11,cs),
(17,0,o),
(28,-8,o),
(40,-8,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
0 1 0 0 2 1 0 91 0 2 2 24 2 68 38 116 121 3 29
CALL[ ]	/* CallFunction */";
};
width = 229;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(43,-5,o),
(49,-2,o),
(52,5,cs),
(214,310,l),
(216,313,o),
(217,315,o),
(217,318,cs),
(217,327,o),
(211,331,o),
(200,331,cs),
(177,331,o),
(61,327,o),
(43,327,cs),
(28,327,o),
(24,320,o),
(24,313,cs),
(24,312,o),
(25,310,o),
(27,307,cs),
(28,304,o),
(33,302,o),
(40,302,cs),
(65,302,o),
(87,302,o),
(105,303,cs),
(122,304,o),
(143,304,o),
(166,304,cs),
(170,304,o),
(172,302,o),
(172,299,cs),
(172,291,o),
(146,245,o),
(97,153,cs),
(47,61,o),
(21,17,o),
(21,10,cs),
(21,0,o),
(25,-5,o),
(34,-5,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
0 1 0 0 2 1 0 91 0 2 2 16 2 68 37 116 88 3 18
CALL[ ]	/* CallFunction */";
};
width = 218;
}
);
note = seveninferior;
unicode = 8327;
},
{
glyphname = eightinferior;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(216,-12,o),
(257,26,o),
(257,75,cs),
(257,118,o),
(234,153,o),
(185,161,c),
(212,164,o),
(252,193,o),
(252,245,cs),
(252,285,o),
(212,327,o),
(144,327,cs),
(71,327,o),
(34,286,o),
(34,241,cs),
(34,198,o),
(64,165,o),
(92,161,c),
(59,156,o),
(24,122,o),
(24,71,cs),
(24,15,o),
(68,-12,o),
(140,-12,cs)
);
},
{
closed = 1;
nodes = (
(118,42,o),
(95,51,o),
(95,79,cs),
(95,115,o),
(123,125,o),
(141,125,cs),
(177,125,o),
(186,102,o),
(186,79,cs),
(186,63,o),
(173,42,o),
(141,42,cs)
);
},
{
closed = 1;
nodes = (
(127,198,o),
(104,205,o),
(104,233,cs),
(104,264,o),
(127,269,o),
(143,269,cs),
(159,269,o),
(181,264,o),
(181,229,cs),
(181,216,o),
(169,198,o),
(142,198,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
19 3 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 2 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 2 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 38 36 36 46 40 6 21
CALL[ ]	/* CallFunction */";
};
width = 282;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(207,-11,o),
(246,31,o),
(246,76,cs),
(246,119,o),
(217,154,o),
(174,162,c),
(196,164,o),
(241,198,o),
(241,246,cs),
(241,283,o),
(204,328,o),
(138,328,cs),
(71,328,o),
(37,287,o),
(37,242,cs),
(37,201,o),
(69,167,o),
(95,162,c),
(66,154,o),
(27,125,o),
(27,72,cs),
(27,16,o),
(78,-11,o),
(139,-11,cs)
);
},
{
closed = 1;
nodes = (
(108,32,o),
(84,48,o),
(84,79,cs),
(84,116,o),
(114,132,o),
(137,132,cs),
(170,132,o),
(189,108,o),
(189,79,cs),
(189,54,o),
(169,32,o),
(137,32,cs)
);
},
{
closed = 1;
nodes = (
(123,193,o),
(93,202,o),
(93,236,cs),
(93,267,o),
(115,282,o),
(140,282,cs),
(161,282,o),
(184,271,o),
(184,236,cs),
(184,216,o),
(167,193,o),
(138,193,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
24 6 2 3 4 1 66 0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 2 1 83 0 1 1 24 1 68 36 38 36 36 46 45 6 32
CALL[ ]	/* CallFunction */";
};
width = 274;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(182,-12,o),
(230,29,o),
(230,75,cs),
(230,117,o),
(191,153,o),
(158,161,c),
(184,170,o),
(225,198,o),
(225,245,cs),
(225,283,o),
(196,327,o),
(137,327,cs),
(80,327,o),
(41,286,o),
(41,241,cs),
(41,202,o),
(71,172,o),
(99,161,c),
(75,150,o),
(31,124,o),
(31,71,cs),
(31,14,o),
(85,-12,o),
(129,-12,cs)
);
},
{
closed = 1;
nodes = (
(91,12,o),
(68,43,o),
(68,76,cs),
(68,116,o),
(102,141,o),
(131,141,cs),
(160,141,o),
(193,117,o),
(193,77,cs),
(193,37,o),
(161,12,o),
(128,12,cs)
);
},
{
closed = 1;
nodes = (
(107,182,o),
(77,200,o),
(77,239,cs),
(77,268,o),
(93,301,o),
(136,301,cs),
(180,301,o),
(188,266,o),
(188,245,cs),
(188,206,o),
(160,182,o),
(132,182,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
21 5 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 2 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 2 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
60 58 52 50 46 44 40 38 32 30 42 6 16
CALL[ ]	/* CallFunction */";
};
width = 262;
}
);
note = eightinferior;
unicode = 8328;
},
{
glyphname = nineinferior;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,-15,o),
(111,-12,o),
(122,-5,cs),
(165,27,o),
(234,116,o),
(234,221,cs),
(234,290,o),
(196,327,o),
(128,327,cs),
(70,327,o),
(15,303,o),
(15,232,cs),
(15,179,o),
(49,134,o),
(109,134,cs),
(156,134,o),
(173,172,o),
(176,180,c),
(172,137,o),
(132,83,o),
(75,28,cs),
(63,16,o),
(62,13,o),
(62,4,cs),
(62,-9,o),
(78,-15,o),
(94,-15,cs)
);
},
{
closed = 1;
nodes = (
(92,191,o),
(80,211,o),
(80,234,cs),
(80,269,o),
(104,277,o),
(120,277,cs),
(149,277,o),
(166,266,o),
(166,233,cs),
(166,214,o),
(155,191,o),
(124,191,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
3 1 0 4 1 66 0 1 5 1 3 4 1 3 91 0 4 0 0 2 4 0 91 0 2 2 21 2 68 34 33 40 38 33 44 34 44 41 38 39 6 18
CALL[ ]	/* CallFunction */";
};
width = 256;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(94,-13,o),
(103,-10,o),
(112,-3,cs),
(155,27,o),
(225,124,o),
(225,223,cs),
(225,295,o),
(192,328,o),
(132,328,cs),
(73,328,o),
(17,297,o),
(17,231,cs),
(17,183,o),
(46,140,o),
(107,140,cs),
(143,140,o),
(170,155,o),
(177,187,c),
(177,138,o),
(114,57,o),
(78,27,cs),
(75,24,o),
(71,20,o),
(68,17,cs),
(64,13,o),
(62,9,o),
(62,4,cs),
(62,-7,o),
(76,-13,o),
(87,-13,cs)
);
},
{
closed = 1;
nodes = (
(87,184,o),
(70,206,o),
(70,235,cs),
(70,274,o),
(97,288,o),
(121,288,cs),
(145,288,o),
(170,278,o),
(170,238,cs),
(170,211,o),
(155,184,o),
(119,184,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
6 1 4 3 1 66 0 1 5 1 3 4 1 3 91 0 4 0 0 2 4 0 91 0 2 2 21 2 68 34 33 40 38 33 44 34 44 40 38 40 6 29
CALL[ ]	/* CallFunction */";
};
width = 250;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(77,-12,o),
(80,-11,o),
(84,-9,cs),
(88,-8,o),
(93,-5,o),
(98,-2,cs),
(143,28,o),
(212,127,o),
(212,224,cs),
(212,299,o),
(174,327,o),
(123,327,cs),
(66,327,o),
(20,285,o),
(20,228,cs),
(20,188,o),
(43,148,o),
(104,148,cs),
(160,148,o),
(173,178,o),
(178,193,c),
(175,130,o),
(111,50,o),
(82,23,cs),
(76,18,o),
(71,14,o),
(68,12,cs),
(64,10,o),
(62,7,o),
(62,2,cs),
(62,-10,o),
(73,-12,o),
(76,-12,cs)
);
},
{
closed = 1;
nodes = (
(80,171,o),
(55,195,o),
(55,234,cs),
(55,279,o),
(94,304,o),
(122,304,cs),
(149,304,o),
(175,285,o),
(175,249,cs),
(175,220,o),
(154,171,o),
(111,171,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 4 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 5 1 3 4 1 3 91 0 4 0 0 2 4 0 91 0 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 1 5 1 3 4 1 3 91 0 4 0 0 2 4 0 91 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
36 35 44 42 35 50 36 50 41 38 41 6 18
CALL[ ]	/* CallFunction */";
};
width = 241;
}
);
note = nineinferior;
unicode = 8329;
},
{
glyphname = zerosuperior;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(201,495,o),
(254,540,o),
(254,662,cs),
(254,736,o),
(237,837,o),
(138,837,cs),
(51,837,o),
(28,743,o),
(28,648,cs),
(28,531,o),
(77,495,o),
(141,495,cs)
);
},
{
closed = 1;
nodes = (
(108,552,o),
(99,609,o),
(99,656,cs),
(99,716,o),
(108,780,o),
(144,780,cs),
(176,780,o),
(182,706,o),
(182,663,cs),
(182,620,o),
(179,590,o),
(172,575,cs),
(165,560,o),
(154,552,o),
(139,552,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 3 0 3 87 0 1 1 2 83 0 2 2 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 1 0 2 1 91 0 0 3 3 0 79 0 0 0 3 83 0 3 0 3 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
40 40 38 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 279;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(189,495,o),
(243,543,o),
(243,662,cs),
(243,736,o),
(224,837,o),
(137,837,cs),
(55,837,o),
(31,738,o),
(31,648,cs),
(31,534,o),
(79,495,o),
(135,495,cs)
);
},
{
closed = 1;
nodes = (
(99,540,o),
(88,603,o),
(88,656,cs),
(88,721,o),
(103,792,o),
(140,792,cs),
(177,792,o),
(185,712,o),
(185,663,cs),
(185,564,o),
(160,540,o),
(133,540,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 3 0 3 87 0 1 1 2 83 0 2 2 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 1 0 2 1 91 0 0 3 3 0 79 0 0 0 3 83 0 3 0 3 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
40 40 40 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 271;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(172,495,o),
(227,544,o),
(227,662,cs),
(227,736,o),
(206,837,o),
(135,837,cs),
(63,837,o),
(35,734,o),
(35,648,cs),
(35,539,o),
(81,495,o),
(126,495,cs)
);
},
{
closed = 1;
nodes = (
(88,520,o),
(72,595,o),
(72,656,cs),
(72,729,o),
(95,812,o),
(135,812,cs),
(177,812,o),
(189,723,o),
(189,663,cs),
(189,563,o),
(157,520,o),
(125,520,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 3 0 3 87 0 1 1 2 83 0 2 2 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 1 0 2 1 91 0 0 3 3 0 79 0 0 0 3 83 0 3 0 3 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
40 40 40 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 260;
}
);
note = zerosuperior;
unicode = 8304;
},
{
glyphname = onesuperior;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(161,500,ls),
(173,500,o),
(192,503,o),
(192,528,cs),
(192,551,o),
(176,556,o),
(157,556,cs),
(144,556,l),
(144,556,l),
(145,619,o),
(146,668,o),
(147,703,cs),
(148,738,o),
(148,763,o),
(149,780,cs),
(150,799,o),
(150,811,o),
(150,815,cs),
(150,820,o),
(149,824,o),
(148,825,cs),
(146,826,o),
(144,827,o),
(142,827,cs),
(137,827,o),
(107,823,o),
(54,823,cs),
(39,823,o),
(21,813,o),
(21,796,cs),
(21,775,o),
(31,770,o),
(54,770,cs),
(56,770,o),
(59,770,o),
(64,771,cs),
(69,771,o),
(72,771,o),
(73,771,cs),
(79,771,o),
(82,766,o),
(82,757,cs),
(82,723,o),
(80,727,o),
(80,683,cs),
(79,653,o),
(77,631,o),
(77,615,cs),
(76,602,o),
(75,587,o),
(75,573,cs),
(75,557,o),
(70,554,o),
(54,554,cs),
(39,554,o),
(22,547,o),
(22,528,cs),
(22,505,o),
(43,500,o),
(59,500,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
2 6 2 0 0 1 0 1 87 4 1 3 3 5 83 0 5 5 12 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
2 6 2 0 0 1 0 1 87 4 1 3 3 5 83 0 5 5 14 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
1 0 43 36 32 30 29 27 14 12 8 5 0 50 1 50 7 15
CALL[ ]	/* CallFunction */";
};
width = 210;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(154,500,ls),
(163,500,o),
(178,502,o),
(178,522,cs),
(178,543,o),
(158,544,o),
(150,544,cs),
(130,544,l),
(130,544,l),
(131,610,o),
(132,661,o),
(133,698,cs),
(134,735,o),
(134,762,o),
(135,779,cs),
(136,800,o),
(136,812,o),
(136,815,cs),
(136,820,o),
(135,824,o),
(134,825,cs),
(132,826,o),
(130,827,o),
(128,827,cs),
(123,827,o),
(96,823,o),
(47,823,cs),
(36,823,o),
(21,815,o),
(21,802,cs),
(21,782,o),
(36,782,o),
(47,782,cs),
(50,782,o),
(55,782,o),
(61,783,cs),
(67,783,o),
(71,783,o),
(73,783,cs),
(82,783,o),
(82,772,o),
(82,769,cs),
(82,730,o),
(80,732,o),
(80,683,cs),
(79,650,o),
(77,625,o),
(77,608,cs),
(76,594,o),
(75,576,o),
(75,561,cs),
(75,544,o),
(68,542,o),
(47,542,cs),
(43,542,o),
(22,538,o),
(22,522,cs),
(22,502,o),
(42,500,o),
(52,500,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
2 6 2 0 0 1 0 1 88 0 3 3 4 83 5 1 4 4 12 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
2 6 2 0 0 1 0 1 88 0 3 3 4 83 5 1 4 4 14 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
1 0 48 44 43 41 37 32 18 16 10 7 0 55 1 55 7 15
CALL[ ]	/* CallFunction */";
};
width = 197;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(144,500,ls),
(153,500,o),
(158,501,o),
(158,512,cs),
(158,524,o),
(147,524,o),
(140,524,cs),
(110,524,l),
(111,595,o),
(112,651,o),
(113,690,cs),
(114,729,o),
(114,757,o),
(115,776,cs),
(116,798,o),
(116,811,o),
(116,815,cs),
(116,820,o),
(115,824,o),
(114,825,cs),
(112,826,o),
(110,827,o),
(108,827,cs),
(104,827,o),
(81,823,o),
(37,823,cs),
(30,823,o),
(21,819,o),
(21,812,cs),
(21,801,o),
(30,802,o),
(37,802,cs),
(42,802,o),
(48,802,o),
(57,803,cs),
(65,803,o),
(70,803,o),
(73,803,cs),
(82,803,o),
(82,794,o),
(82,789,cs),
(82,777,o),
(82,761,o),
(82,751,cs),
(81,737,o),
(80,718,o),
(80,683,cs),
(79,645,o),
(77,616,o),
(77,596,cs),
(76,579,o),
(75,559,o),
(75,541,cs),
(75,524,o),
(65,522,o),
(37,522,cs),
(33,522,o),
(22,520,o),
(22,512,cs),
(22,500,o),
(35,500,o),
(42,500,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
2 6 2 0 0 1 0 1 87 0 3 3 4 83 5 1 4 4 12 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
2 6 2 0 0 1 0 1 87 0 3 3 4 83 5 1 4 4 14 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
1 0 44 40 39 37 33 28 14 12 8 5 0 51 1 51 7 15
CALL[ ]	/* CallFunction */";
};
width = 179;
}
);
note = onesuperior;
unicode = 185;
},
{
glyphname = twosuperior;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,496,o),
(54,498,o),
(58,501,cs),
(61,504,o),
(64,506,o),
(65,507,c),
(83,506,o),
(101,506,o),
(118,505,cs),
(149,504,o),
(184,503,o),
(211,503,cs),
(218,503,o),
(222,509,o),
(223,512,c),
(221,510,o),
(247,548,o),
(247,562,cs),
(247,570,o),
(240,579,o),
(225,579,cs),
(212,579,o),
(203,576,o),
(199,571,cs),
(194,565,o),
(191,561,o),
(190,560,cs),
(189,559,o),
(185,559,o),
(177,559,cs),
(137,561,l),
(172,601,o),
(237,681,o),
(237,754,cs),
(237,799,o),
(208,836,o),
(133,836,cs),
(57,836,o),
(22,780,o),
(22,750,cs),
(22,731,o),
(30,713,o),
(62,713,cs),
(79,713,o),
(97,718,o),
(97,739,cs),
(97,746,o),
(95,751,o),
(92,752,cs),
(88,753,o),
(86,756,o),
(86,759,cs),
(86,766,o),
(106,781,o),
(129,781,cs),
(149,781,o),
(165,770,o),
(165,755,cs),
(165,678,o),
(85,567,o),
(23,519,cs),
(18,515,o),
(15,512,o),
(15,509,cs),
(15,507,o),
(16,504,o),
(18,501,cs),
(20,498,o),
(25,496,o),
(33,496,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
11 1 1 6 1 66 0 1 6 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 3 0 3 4 0 104 0 0 6 6 0 94 0 6 2 1 1 6 1 88 0 3 3 5 83 0 5 5 20 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 4 3 0 3 4 0 104 0 0 6 6 0 94 0 2 1 2 107 0 6 0 1 2 6 1 92 0 3 3 5 83 0 5 5 20 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 4 3 0 3 4 0 104 0 0 6 6 0 94 0 2 1 2 107 0 5 0 3 4 5 3 91 0 6 1 1 6 79 0 6 6 1 84 0 1 6 1 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
39 38 39 43 34 105 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 269;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(44,498,o),
(51,499,o),
(54,502,cs),
(57,504,o),
(60,506,o),
(61,507,c),
(78,506,o),
(95,506,o),
(112,505,cs),
(141,504,o),
(175,503,o),
(200,503,cs),
(203,503,o),
(206,504,o),
(208,507,cs),
(209,509,o),
(211,511,o),
(212,512,c),
(217,521,o),
(222,529,o),
(227,538,cs),
(232,547,o),
(235,554,o),
(235,559,cs),
(235,566,o),
(230,573,o),
(217,573,cs),
(208,573,o),
(195,568,o),
(187,553,cs),
(184,549,o),
(183,547,o),
(183,547,c),
(182,546,l),
(113,549,l),
(153,589,o),
(226,676,o),
(226,754,cs),
(226,799,o),
(197,836,o),
(132,836,cs),
(60,836,o),
(25,776,o),
(25,750,cs),
(25,731,o),
(29,716,o),
(60,716,cs),
(71,716,o),
(86,723,o),
(86,744,cs),
(86,749,o),
(84,753,o),
(81,755,cs),
(77,756,o),
(75,759,o),
(75,762,cs),
(75,765,o),
(80,771,o),
(89,779,cs),
(98,787,o),
(111,791,o),
(128,791,cs),
(155,791,o),
(168,774,o),
(168,755,cs),
(168,678,o),
(88,567,o),
(26,519,cs),
(21,515,o),
(18,512,o),
(18,509,cs),
(18,507,o),
(19,505,o),
(21,502,cs),
(22,499,o),
(27,498,o),
(34,498,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
60 1 6 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 6 2 1 1 6 1 87 0 3 3 5 83 0 5 5 20 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 2 1 2 107 0 6 0 1 2 6 1 91 0 3 3 5 83 0 5 5 20 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 2 1 2 107 0 5 0 3 4 5 3 91 0 6 1 1 6 77 0 6 6 1 83 0 1 6 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
23 38 39 43 34 103 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 260;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(42,501,o),
(47,502,o),
(50,503,cs),
(52,504,o),
(54,506,o),
(55,507,c),
(72,506,o),
(88,506,o),
(104,505,cs),
(131,504,o),
(163,503,o),
(184,503,cs),
(187,503,o),
(190,504,o),
(192,507,cs),
(193,509,o),
(195,511,o),
(196,512,c),
(216,550,o),
(218,548,o),
(218,554,cs),
(218,555,o),
(217,557,o),
(216,560,cs),
(215,562,o),
(211,563,o),
(206,563,cs),
(197,563,o),
(194,557,o),
(191,553,cs),
(184,541,o),
(178,534,o),
(175,531,cs),
(172,528,o),
(169,526,o),
(168,526,cs),
(79,529,l),
(128,572,o),
(210,672,o),
(210,754,cs),
(210,799,o),
(182,836,o),
(130,836,cs),
(67,836,o),
(29,778,o),
(29,750,cs),
(29,731,o),
(36,721,o),
(50,721,cs),
(51,721,o),
(55,722,o),
(61,725,cs),
(67,727,o),
(70,733,o),
(70,744,cs),
(70,749,o),
(68,753,o),
(65,755,cs),
(61,756,o),
(59,759,o),
(59,762,cs),
(59,775,o),
(81,808,o),
(126,808,cs),
(161,808,o),
(172,786,o),
(172,755,cs),
(172,678,o),
(92,567,o),
(30,519,cs),
(25,515,o),
(22,512,o),
(22,509,cs),
(22,504,o),
(26,501,o),
(35,501,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 6 2 1 1 6 1 87 0 3 3 5 83 0 5 5 20 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 5 0 3 4 5 3 91 0 6 1 1 6 79 0 6 6 1 83 2 1 1 6 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
39 37 41 42 34 105 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 247;
}
);
note = twosuperior;
unicode = 178;
},
{
glyphname = threesuperior;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(145,495,o),
(228,541,o),
(228,609,cs),
(228,653,o),
(193,678,o),
(153,678,cs),
(146,678,o),
(142,677,o),
(137,676,c),
(136,679,l),
(136,679,l),
(171,692,o),
(224,715,o),
(224,772,cs),
(224,828,o),
(174,836,o),
(138,836,cs),
(71,836,o),
(28,779,o),
(28,749,cs),
(28,737,o),
(37,729,o),
(49,729,cs),
(74,729,o),
(84,744,o),
(88,753,cs),
(96,772,o),
(111,794,o),
(132,794,cs),
(143,794,o),
(152,787,o),
(152,774,cs),
(152,729,o),
(97,702,o),
(60,676,cs),
(59,675,o),
(56,672,o),
(52,669,cs),
(48,665,o),
(46,660,o),
(46,655,cs),
(46,644,o),
(48,637,o),
(51,633,cs),
(54,629,o),
(57,627,o),
(60,627,cs),
(65,627,o),
(72,629,o),
(80,632,cs),
(87,635,o),
(97,636,o),
(108,636,cs),
(135,636,o),
(156,628,o),
(156,605,cs),
(156,563,o),
(106,545,o),
(73,545,cs),
(59,545,o),
(69,567,o),
(44,567,cs),
(25,567,o),
(16,550,o),
(16,533,cs),
(16,508,o),
(36,495,o),
(77,495,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
70 1 0 7 0 1 4 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 7 6 0 6 7 0 104 0 0 4 6 0 4 102 5 1 4 2 6 4 2 102 0 3 2 1 2 3 96 0 2 0 1 2 1 87 0 6 6 8 83 0 8 8 20 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 7 6 0 6 7 0 104 0 0 4 6 0 4 102 0 4 5 6 4 5 102 0 5 2 6 5 2 102 0 3 2 1 2 3 96 0 2 0 1 2 1 87 0 6 6 8 83 0 8 8 20 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 7 6 0 6 7 0 104 0 0 4 6 0 4 102 0 4 5 6 4 5 102 0 5 2 6 5 2 102 0 3 2 1 2 3 96 0 8 0 6 7 8 6 91 0 2 3 1 2 79 0 2 2 1 83 0 1 2 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 36 44 33 38 35 35 38 34 9 24
CALL[ ]	/* CallFunction */";
};
width = 253;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(140,495,o),
(217,546,o),
(217,609,cs),
(217,653,o),
(177,677,o),
(140,677,cs),
(137,677,o),
(135,677,o),
(133,677,cs),
(130,676,o),
(128,676,o),
(126,676,cs),
(123,675,o),
(121,675,o),
(120,675,c),
(149,688,o),
(213,720,o),
(213,784,cs),
(213,831,o),
(156,836,o),
(132,836,cs),
(67,836,o),
(31,776,o),
(31,749,cs),
(31,738,o),
(41,731,o),
(48,731,cs),
(67,731,o),
(74,744,o),
(77,753,c),
(89,782,o),
(108,800,o),
(125,800,cs),
(145,800,o),
(155,794,o),
(155,781,cs),
(155,725,o),
(100,703,o),
(63,676,cs),
(62,675,o),
(59,672,o),
(55,669,cs),
(51,665,o),
(49,660,o),
(49,655,cs),
(49,645,o),
(51,639,o),
(55,637,cs),
(59,634,o),
(62,633,o),
(63,633,cs),
(66,633,o),
(72,635,o),
(81,638,cs),
(90,641,o),
(100,642,o),
(111,642,cs),
(138,642,o),
(159,632,o),
(159,605,cs),
(159,557,o),
(108,536,o),
(76,536,cs),
(57,536,o),
(61,558,o),
(40,558,cs),
(25,558,o),
(19,542,o),
(19,527,cs),
(19,506,o),
(45,495,o),
(76,495,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 10 1 9 7 0 9 7 102 0 7 8 0 7 8 102 0 8 0 6 8 6 87 0 0 0 2 83 0 2 2 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 0 9 10 0 9 10 102 0 10 7 0 10 7 102 0 7 8 0 7 8 102 0 8 0 6 8 6 87 0 0 0 2 83 0 2 2 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 0 9 10 0 9 10 102 0 10 7 0 10 7 102 0 7 8 0 7 8 102 0 2 0 0 1 2 0 91 0 8 6 6 8 79 0 8 8 6 83 0 6 8 6 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
67 65 64 62 35 36 38 33 17 25 38 36 38 11 24
CALL[ ]	/* CallFunction */";
};
width = 245;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(136,495,o),
(201,557,o),
(201,609,cs),
(201,653,o),
(153,675,o),
(121,675,cs),
(118,675,o),
(116,675,o),
(114,675,cs),
(111,674,o),
(109,674,o),
(107,674,cs),
(104,673,o),
(102,673,o),
(101,673,c),
(112,684,o),
(197,717,o),
(197,784,cs),
(197,830,o),
(157,836,o),
(136,836,cs),
(71,836,o),
(35,776,o),
(35,749,cs),
(35,739,o),
(39,734,o),
(46,734,cs),
(54,734,o),
(58,744,o),
(61,753,cs),
(73,788,o),
(93,810,o),
(129,810,cs),
(153,810,o),
(159,800,o),
(159,781,cs),
(159,725,o),
(104,703,o),
(67,676,cs),
(66,675,o),
(63,672,o),
(59,669,cs),
(55,665,o),
(53,660,o),
(53,655,cs),
(53,644,o),
(64,643,o),
(67,643,cs),
(70,643,o),
(76,645,o),
(85,648,cs),
(94,651,o),
(104,652,o),
(115,652,cs),
(142,652,o),
(163,640,o),
(163,605,cs),
(163,551,o),
(111,521,o),
(80,521,cs),
(53,521,o),
(50,543,o),
(35,543,cs),
(24,543,o),
(23,534,o),
(23,527,cs),
(23,504,o),
(51,495,o),
(74,495,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 3 0 1 3 104 0 10 9 7 9 10 7 104 0 7 8 9 7 8 102 5 4 2 3 0 9 10 3 9 91 0 8 0 6 8 6 87 0 0 0 2 83 0 2 2 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 1 0 3 0 1 3 104 0 10 9 7 9 10 7 104 0 7 8 9 7 8 102 0 2 0 0 1 2 0 91 5 4 2 3 0 9 10 3 9 91 0 8 6 6 8 79 0 8 8 6 83 0 6 8 6 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
69 67 66 64 35 36 40 33 17 25 37 36 39 11 24
CALL[ ]	/* CallFunction */";
};
width = 233;
}
);
note = threesuperior;
unicode = 179;
},
{
glyphname = foursuperior;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(228,503,ls),
(255,503,o),
(264,507,o),
(264,526,cs),
(264,547,o),
(247,551,o),
(236,551,cs),
(233,551,o),
(231,552,o),
(231,553,cs),
(231,554,o),
(231,556,o),
(232,559,cs),
(232,562,o),
(232,565,o),
(233,569,c),
(243,569,l),
(243,569,l),
(264,569,o),
(270,586,o),
(270,597,cs),
(270,616,o),
(261,625,o),
(242,625,cs),
(237,625,l),
(241,671,o),
(250,731,o),
(250,807,cs),
(250,830,o),
(232,840,o),
(213,840,cs),
(197,840,o),
(181,831,o),
(174,822,cs),
(140,779,o),
(143,783,o),
(116,746,cs),
(99,723,o),
(63,675,o),
(22,620,cs),
(13,609,o),
(8,601,o),
(5,596,cs),
(2,591,o),
(1,585,o),
(1,580,cs),
(1,574,o),
(4,570,o),
(9,569,cs),
(14,568,o),
(23,567,o),
(34,567,cs),
(40,567,o),
(50,567,o),
(65,567,cs),
(79,567,o),
(93,567,o),
(108,568,cs),
(119,569,o),
(128,569,o),
(137,569,cs),
(145,569,o),
(154,569,o),
(165,569,c),
(164,558,ls),
(164,554,o),
(160,552,o),
(153,551,c),
(151,550,o),
(146,550,o),
(139,550,cs),
(131,549,o),
(124,549,o),
(117,548,cs),
(104,547,o),
(89,543,o),
(89,528,cs),
(89,508,o),
(107,503,o),
(119,503,cs)
);
},
{
closed = 1;
nodes = (
(100,623,o),
(98,624,o),
(98,627,cs),
(98,628,o),
(99,630,o),
(100,631,cs),
(101,632,o),
(102,634,o),
(103,635,cs),
(178,743,l),
(169,626,l),
(154,625,o),
(140,624,o),
(127,624,cs),
(114,623,o),
(106,623,o),
(104,623,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
65 1 5 4 23 1 0 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
9 7 2 5 8 6 2 3 0 5 3 91 2 1 0 0 1 0 1 88 0 4 4 20 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 4 5 4 106 9 7 2 5 8 6 2 3 0 5 3 91 2 1 0 1 1 0 79 2 1 0 0 1 84 0 1 0 1 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
63 61 0 0 61 70 63 70 0 60 0 59 39 46 116 22 52 36 10 21
CALL[ ]	/* CallFunction */";
};
width = 295;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(224,503,ls),
(239,503,o),
(253,503,o),
(253,522,cs),
(253,542,o),
(232,542,o),
(224,542,cs),
(220,542,o),
(215,544,o),
(215,552,cs),
(215,555,o),
(216,570,o),
(219,581,c),
(235,581,l),
(235,581,l),
(254,581,o),
(259,596,o),
(259,603,cs),
(259,618,o),
(250,625,o),
(232,625,cs),
(219,625,l),
(220,646,o),
(232,803,o),
(232,811,cs),
(232,836,o),
(207,837,o),
(202,837,cs),
(189,837,o),
(173,826,o),
(170,822,cs),
(125,766,o),
(84,710,o),
(18,620,cs),
(12,612,o),
(8,606,o),
(7,602,cs),
(5,598,o),
(4,594,o),
(4,591,cs),
(4,582,o),
(13,578,o),
(30,578,cs),
(42,578,o),
(75,579,o),
(104,580,cs),
(115,581,o),
(125,581,o),
(135,581,cs),
(145,581,o),
(155,581,o),
(166,581,c),
(162,557,ls),
(159,546,o),
(153,545,o),
(142,542,cs),
(140,541,o),
(136,541,o),
(131,541,cs),
(125,540,o),
(119,540,o),
(113,539,cs),
(102,539,o),
(92,533,o),
(92,522,cs),
(92,507,o),
(106,503,o),
(115,503,cs)
);
},
{
closed = 1;
nodes = (
(82,623,o),
(80,624,o),
(80,627,cs),
(80,628,o),
(81,630,o),
(82,631,cs),
(83,632,o),
(84,634,o),
(85,635,cs),
(175,758,l),
(165,626,l),
(147,625,o),
(130,624,o),
(114,624,cs),
(97,623,o),
(88,623,o),
(86,623,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
66 1 6 5 1 66 22 1 0 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
10 8 2 6 9 7 2 4 0 6 4 91 3 2 2 0 0 1 0 1 88 0 5 5 20 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 5 6 5 106 10 8 2 6 9 7 2 4 0 6 4 91 3 2 2 0 1 1 0 79 3 2 2 0 0 1 84 0 1 0 1 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
64 62 0 0 62 71 64 71 0 61 0 60 41 43 117 17 20 52 37 11 22
CALL[ ]	/* CallFunction */";
};
width = 283;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(218,503,ls),
(229,503,o),
(237,503,o),
(237,515,cs),
(237,527,o),
(223,527,o),
(218,527,cs),
(206,527,o),
(189,526,o),
(189,537,cs),
(189,544,o),
(190,576,o),
(193,601,c),
(229,601,ls),
(240,601,o),
(243,610,o),
(243,613,cs),
(243,621,o),
(237,625,o),
(226,625,cs),
(193,625,l),
(196,704,o),
(206,795,o),
(206,811,cs),
(206,832,o),
(190,832,o),
(186,832,cs),
(177,832,o),
(167,825,o),
(164,822,cs),
(119,766,o),
(78,710,o),
(12,620,cs),
(8,615,o),
(8,612,o),
(8,609,cs),
(8,601,o),
(13,597,o),
(24,597,cs),
(30,597,o),
(40,597,o),
(55,598,cs),
(69,599,o),
(83,599,o),
(98,600,cs),
(109,601,o),
(119,601,o),
(129,601,cs),
(139,601,o),
(149,601,o),
(160,601,c),
(156,542,ls),
(156,531,o),
(148,528,o),
(136,527,c),
(134,526,o),
(130,526,o),
(125,526,cs),
(119,525,o),
(113,525,o),
(107,524,cs),
(102,524,o),
(96,519,o),
(96,512,cs),
(96,505,o),
(104,503,o),
(109,503,cs)
);
},
{
closed = 1;
nodes = (
(56,623,o),
(54,624,o),
(54,627,cs),
(54,628,o),
(55,630,o),
(56,631,cs),
(57,632,o),
(58,634,o),
(59,635,cs),
(171,783,l),
(159,626,l),
(136,625,o),
(114,624,o),
(94,624,cs),
(74,623,o),
(63,623,o),
(60,623,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
64 1 6 5 1 66 22 1 0 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
3 2 2 0 4 1 6 0 96 0 1 4 1 93 10 8 2 6 9 7 2 4 0 6 4 91 0 5 5 20 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
3 2 2 0 4 1 4 0 1 104 0 1 4 1 93 10 8 2 6 9 7 2 4 0 6 4 91 0 5 5 20 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
3 2 2 0 4 1 4 0 1 104 0 1 1 105 10 8 2 6 9 7 2 4 0 6 4 91 0 5 5 20 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 5 6 5 106 3 2 2 0 4 1 4 0 1 104 0 1 1 105 10 8 2 6 4 4 6 79 10 8 2 6 6 4 83 9 7 2 4 6 4 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
63 60 0 0 60 69 63 69 0 59 0 58 39 43 117 17 20 52 37 11 22
CALL[ ]	/* CallFunction */";
};
width = 266;
}
);
note = foursuperior;
unicode = 8308;
},
{
glyphname = fivesuperior;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(168,487,o),
(250,542,o),
(250,608,cs),
(250,668,o),
(215,703,o),
(155,703,cs),
(139,703,o),
(109,692,o),
(101,679,c),
(111,735,l),
(126,735,o),
(177,754,o),
(190,760,cs),
(212,772,o),
(242,802,o),
(242,821,cs),
(242,824,o),
(241,827,o),
(238,832,cs),
(235,836,o),
(228,838,o),
(215,838,cs),
(200,838,o),
(191,830,o),
(188,827,cs),
(156,797,o),
(66,805,o),
(55,783,cs),
(53,779,o),
(45,737,o),
(36,655,cs),
(35,648,o),
(34,639,o),
(34,635,cs),
(34,616,o),
(38,606,o),
(45,606,cs),
(81,606,o),
(88,645,o),
(132,645,cs),
(168,645,o),
(178,625,o),
(178,606,cs),
(178,570,o),
(150,529,o),
(110,529,cs),
(86,529,o),
(79,540,o),
(79,551,cs),
(79,566,o),
(88,559,o),
(88,575,cs),
(88,586,o),
(79,592,o),
(60,592,cs),
(47,592,o),
(20,574,o),
(20,542,cs),
(20,527,o),
(27,487,o),
(99,487,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 1 0 17 1 6 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 2 0 1 2 104 0 7 6 4 6 7 4 104 0 4 5 5 4 94 0 2 0 6 7 2 6 91 0 5 0 3 5 3 88 0 0 0 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 2 0 1 2 104 0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 2 0 6 7 2 6 91 0 5 0 3 5 3 88 0 0 0 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 0 1 0 106 0 1 2 1 106 0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 2 0 6 7 2 6 91 0 5 3 3 5 79 0 5 5 3 84 0 3 5 3 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
35 38 40 38 38 37 27 34 8 23
CALL[ ]	/* CallFunction */";
};
width = 272;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(166,487,o),
(237,543,o),
(237,608,cs),
(237,664,o),
(203,697,o),
(147,697,cs),
(126,697,o),
(101,686,o),
(88,673,c),
(101,747,l),
(120,751,o),
(175,764,o),
(190,773,cs),
(209,782,o),
(229,806,o),
(229,821,cs),
(229,824,o),
(228,827,o),
(226,831,cs),
(224,834,o),
(218,836,o),
(209,836,cs),
(198,836,o),
(192,830,o),
(189,827,cs),
(157,797,o),
(67,805,o),
(56,783,cs),
(54,778,o),
(48,736,o),
(37,655,cs),
(36,648,o),
(35,639,o),
(35,635,cs),
(35,620,o),
(39,612,o),
(46,612,cs),
(74,612,o),
(90,651,o),
(133,651,cs),
(170,651,o),
(179,620,o),
(179,606,cs),
(179,565,o),
(152,523,o),
(90,523,cs),
(77,523,o),
(66,530,o),
(66,545,cs),
(66,561,o),
(80,552,o),
(80,569,cs),
(80,580,o),
(72,586,o),
(55,586,cs),
(42,586,o),
(21,570,o),
(21,542,cs),
(21,518,o),
(39,487,o),
(88,487,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
67 1 1 0 15 1 5 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 6 5 3 5 6 3 104 0 3 4 4 3 94 0 1 0 5 6 1 5 91 0 4 0 2 4 2 88 0 0 0 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 6 5 3 5 6 3 104 0 3 4 5 3 4 102 0 1 0 5 6 1 5 91 0 4 0 2 4 2 88 0 0 0 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 0 1 0 106 0 6 5 3 5 6 3 104 0 3 4 5 3 4 102 0 1 0 5 6 1 5 91 0 4 2 2 4 79 0 4 4 2 84 0 2 4 2 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
35 40 40 36 38 45 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 261;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(155,487,o),
(219,541,o),
(219,608,cs),
(219,659,o),
(184,687,o),
(136,687,cs),
(105,687,o),
(89,676,o),
(70,663,c),
(87,767,l),
(100,771,o),
(172,783,o),
(192,793,cs),
(201,798,o),
(211,813,o),
(211,821,cs),
(211,826,o),
(208,833,o),
(201,833,cs),
(198,833,o),
(195,831,o),
(191,827,cs),
(159,797,o),
(69,805,o),
(58,783,cs),
(56,778,o),
(50,736,o),
(39,655,cs),
(38,648,o),
(37,639,o),
(37,635,cs),
(37,626,o),
(41,622,o),
(48,622,cs),
(64,622,o),
(93,661,o),
(135,661,cs),
(178,661,o),
(181,621,o),
(181,606,cs),
(181,560,o),
(154,513,o),
(92,513,cs),
(68,513,o),
(48,520,o),
(48,535,cs),
(48,549,o),
(68,543,o),
(68,559,cs),
(68,570,o),
(61,576,o),
(48,576,cs),
(35,576,o),
(23,565,o),
(23,542,cs),
(23,518,o),
(41,487,o),
(90,487,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
66 1 1 0 14 1 5 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 6 5 3 5 6 3 104 0 3 4 4 3 94 0 1 0 5 6 1 5 91 0 4 0 2 4 2 88 0 0 0 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 6 5 3 5 6 3 104 0 3 4 5 3 4 102 0 1 0 5 6 1 5 91 0 4 0 2 4 2 88 0 0 0 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 0 1 0 106 0 6 5 3 5 6 3 104 0 3 4 5 3 4 102 0 1 0 5 6 1 5 91 0 4 2 2 4 79 0 4 4 2 84 0 2 4 2 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
35 40 40 36 38 45 33 7 22
CALL[ ]	/* CallFunction */";
};
width = 245;
}
);
note = fivesuperior;
unicode = 8309;
},
{
glyphname = sixsuperior;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(199,494,o),
(247,527,o),
(247,583,cs),
(247,631,o),
(212,668,o),
(152,668,cs),
(129,668,o),
(112,661,o),
(101,654,cs),
(94,650,o),
(89,646,o),
(84,641,c),
(84,687,o),
(158,776,o),
(185,798,cs),
(193,805,o),
(194,810,o),
(194,814,cs),
(194,829,o),
(171,833,o),
(160,833,cs),
(153,833,o),
(144,830,o),
(135,823,cs),
(91,790,o),
(21,691,o),
(21,607,cs),
(21,524,o),
(80,494,o),
(142,494,cs)
);
},
{
closed = 1;
nodes = (
(122,544,o),
(95,554,o),
(95,588,cs),
(95,607,o),
(103,632,o),
(135,632,cs),
(162,632,o),
(175,610,o),
(175,587,cs),
(175,555,o),
(149,544,o),
(136,544,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
5 1 3 4 1 4 3 1 104 0 1 4 1 93 0 0 0 4 3 0 4 91 0 2 2 20 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
5 1 3 4 1 4 3 1 104 0 1 1 105 0 0 0 4 3 0 4 91 0 2 2 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 0 2 106 5 1 3 4 1 4 3 1 104 0 1 1 105 0 0 4 4 0 79 0 0 0 4 83 0 4 0 4 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
37 36 45 43 36 51 37 51 42 38 41 6 18
CALL[ ]	/* CallFunction */";
};
width = 255;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(176,494,o),
(236,528,o),
(236,585,cs),
(236,630,o),
(198,668,o),
(141,668,cs),
(99,668,o),
(73,643,o),
(73,633,cs),
(73,683,o),
(146,775,o),
(174,798,cs),
(183,805,o),
(188,811,o),
(188,816,cs),
(188,829,o),
(169,833,o),
(162,833,cs),
(155,833,o),
(147,830,o),
(138,823,cs),
(94,793,o),
(24,690,o),
(24,603,cs),
(24,526,o),
(77,494,o),
(125,494,cs)
);
},
{
closed = 1;
nodes = (
(110,534,o),
(84,547,o),
(84,582,cs),
(84,602,o),
(94,636,o),
(131,636,cs),
(160,636,o),
(178,614,o),
(178,585,cs),
(178,546,o),
(147,534,o),
(129,534,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 0 0 4 3 0 4 91 5 1 3 0 1 3 1 87 0 2 2 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 0 2 106 0 0 0 4 3 0 4 91 5 1 3 1 1 3 79 5 1 3 3 1 83 0 1 3 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
36 35 44 42 35 50 36 50 42 38 41 6 18
CALL[ ]	/* CallFunction */";
};
width = 249;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(175,494,o),
(221,531,o),
(221,588,cs),
(221,628,o),
(198,668,o),
(137,668,cs),
(75,668,o),
(61,631,o),
(58,622,c),
(61,685,o),
(127,769,o),
(159,798,cs),
(165,803,o),
(170,807,o),
(174,809,cs),
(177,811,o),
(179,814,o),
(179,819,cs),
(179,831,o),
(168,833,o),
(165,833,cs),
(164,833,o),
(161,832,o),
(157,831,cs),
(153,829,o),
(148,826,o),
(143,823,cs),
(98,790,o),
(29,697,o),
(29,597,cs),
(29,522,o),
(67,494,o),
(118,494,cs)
);
},
{
closed = 1;
nodes = (
(92,518,o),
(69,536,o),
(69,572,cs),
(69,599,o),
(82,643,o),
(126,643,cs),
(157,643,o),
(183,621,o),
(183,582,cs),
(183,537,o),
(149,518,o),
(119,518,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 0 0 4 3 0 4 91 5 1 3 0 1 3 1 87 0 2 2 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 0 2 106 0 0 0 4 3 0 4 91 5 1 3 1 1 3 79 5 1 3 3 1 83 0 1 3 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
36 35 44 42 35 50 36 50 41 38 41 6 18
CALL[ ]	/* CallFunction */";
};
width = 240;
}
);
note = sixsuperior;
unicode = 8310;
},
{
glyphname = sevensuperior;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(61,485,o),
(72,490,o),
(79,501,c),
(226,782,ls),
(234,797,o),
(239,807,o),
(241,812,cs),
(243,816,o),
(244,819,o),
(244,822,cs),
(244,823,o),
(243,825,o),
(241,826,cs),
(239,827,o),
(234,827,o),
(227,827,cs),
(203,827,o),
(75,823,o),
(53,823,cs),
(38,823,o),
(25,812,o),
(25,793,cs),
(25,778,o),
(35,766,o),
(50,766,cs),
(76,766,o),
(106,768,o),
(130,768,cs),
(134,768,o),
(136,766,o),
(136,763,cs),
(136,758,o),
(116,715,o),
(75,635,cs),
(34,554,o),
(14,511,o),
(14,506,cs),
(14,495,o),
(28,485,o),
(44,485,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
0 2 0 2 107 0 0 0 1 83 0 1 1 12 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 2 0 2 107 0 0 0 1 83 0 1 1 14 0 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
39 116 120 3 18
CALL[ ]	/* CallFunction */";
};
width = 238;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(53,487,o),
(63,492,o),
(68,501,cs),
(221,791,ls),
(226,800,o),
(230,807,o),
(231,810,cs),
(232,813,o),
(233,816,o),
(233,819,cs),
(233,824,o),
(227,827,o),
(216,827,cs),
(190,827,o),
(76,823,o),
(49,823,cs),
(34,823,o),
(25,814,o),
(25,799,cs),
(25,788,o),
(31,778,o),
(46,778,cs),
(79,778,o),
(116,780,o),
(145,780,cs),
(149,780,o),
(151,778,o),
(151,775,cs),
(151,767,o),
(122,713,o),
(84,640,cs),
(46,567,o),
(17,512,o),
(17,506,cs),
(17,495,o),
(28,487,o),
(40,487,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
0 2 0 2 107 0 0 0 1 83 0 1 1 12 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 2 0 2 107 0 0 0 1 83 0 1 1 14 0 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
38 116 120 3 18
CALL[ ]	/* CallFunction */";
};
width = 231;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(44,491,o),
(50,494,o),
(53,501,cs),
(215,806,l),
(217,809,o),
(218,811,o),
(218,814,cs),
(218,823,o),
(212,827,o),
(201,827,cs),
(178,827,o),
(62,823,o),
(44,823,cs),
(29,823,o),
(25,816,o),
(25,809,cs),
(25,808,o),
(26,806,o),
(28,803,cs),
(29,800,o),
(34,798,o),
(41,798,cs),
(66,798,o),
(88,798,o),
(106,799,cs),
(123,800,o),
(144,800,o),
(167,800,cs),
(171,800,o),
(173,798,o),
(173,795,cs),
(173,787,o),
(147,741,o),
(98,649,cs),
(48,557,o),
(22,513,o),
(22,506,cs),
(22,496,o),
(26,491,o),
(35,491,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
0 2 0 2 107 0 0 0 1 83 0 1 1 12 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 2 0 2 107 0 0 0 1 83 0 1 1 14 0 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
37 116 88 3 18
CALL[ ]	/* CallFunction */";
};
width = 221;
}
);
note = sevensuperior;
unicode = 8311;
},
{
glyphname = eightsuperior;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(216,496,o),
(257,534,o),
(257,583,cs),
(257,626,o),
(234,661,o),
(185,669,c),
(212,672,o),
(252,701,o),
(252,753,cs),
(252,793,o),
(212,835,o),
(144,835,cs),
(71,835,o),
(34,794,o),
(34,749,cs),
(34,706,o),
(64,673,o),
(92,669,c),
(59,664,o),
(24,630,o),
(24,579,cs),
(24,523,o),
(68,496,o),
(140,496,cs)
);
},
{
closed = 1;
nodes = (
(118,550,o),
(95,559,o),
(95,587,cs),
(95,623,o),
(123,633,o),
(141,633,cs),
(177,633,o),
(186,610,o),
(186,587,cs),
(186,571,o),
(173,550,o),
(141,550,cs)
);
},
{
closed = 1;
nodes = (
(127,706,o),
(104,713,o),
(104,741,cs),
(104,772,o),
(127,777,o),
(143,777,cs),
(159,777,o),
(181,772,o),
(181,737,cs),
(181,724,o),
(169,706,o),
(142,706,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
19 3 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 3 2 4 3 91 0 2 0 1 2 1 87 0 5 5 0 83 0 0 0 20 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 1 1 2 79 0 2 2 1 83 0 1 2 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 38 36 36 46 40 6 21
CALL[ ]	/* CallFunction */";
};
width = 282;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(207,496,o),
(246,538,o),
(246,583,cs),
(246,626,o),
(217,661,o),
(174,669,c),
(196,671,o),
(241,705,o),
(241,753,cs),
(241,790,o),
(204,835,o),
(138,835,cs),
(71,835,o),
(37,794,o),
(37,749,cs),
(37,708,o),
(69,674,o),
(95,669,c),
(66,661,o),
(27,632,o),
(27,579,cs),
(27,523,o),
(78,496,o),
(139,496,cs)
);
},
{
closed = 1;
nodes = (
(108,539,o),
(84,555,o),
(84,586,cs),
(84,623,o),
(114,639,o),
(137,639,cs),
(170,639,o),
(189,615,o),
(189,586,cs),
(189,561,o),
(169,539,o),
(137,539,cs)
);
},
{
closed = 1;
nodes = (
(123,700,o),
(93,709,o),
(93,743,cs),
(93,774,o),
(115,789,o),
(140,789,cs),
(161,789,o),
(184,778,o),
(184,743,cs),
(184,723,o),
(167,700,o),
(138,700,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
23 5 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 3 2 4 3 91 0 2 0 1 2 1 87 0 5 5 0 83 0 0 0 20 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 1 1 2 79 0 2 2 1 83 0 1 2 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 38 36 36 46 44 6 21
CALL[ ]	/* CallFunction */";
};
width = 274;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(182,496,o),
(230,537,o),
(230,583,cs),
(230,625,o),
(191,661,o),
(158,669,c),
(184,678,o),
(225,706,o),
(225,753,cs),
(225,791,o),
(196,835,o),
(137,835,cs),
(80,835,o),
(41,794,o),
(41,749,cs),
(41,710,o),
(71,680,o),
(99,669,c),
(75,658,o),
(31,632,o),
(31,579,cs),
(31,522,o),
(85,496,o),
(129,496,cs)
);
},
{
closed = 1;
nodes = (
(91,520,o),
(68,551,o),
(68,584,cs),
(68,624,o),
(102,649,o),
(131,649,cs),
(160,649,o),
(193,625,o),
(193,585,cs),
(193,545,o),
(161,520,o),
(128,520,cs)
);
},
{
closed = 1;
nodes = (
(107,690,o),
(77,708,o),
(77,747,cs),
(77,776,o),
(93,809,o),
(136,809,cs),
(180,809,o),
(188,774,o),
(188,753,cs),
(188,714,o),
(160,690,o),
(132,690,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
21 5 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 3 2 4 3 91 0 2 0 1 2 1 87 0 5 5 0 83 0 0 0 20 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 1 1 2 79 0 2 2 1 83 0 1 2 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
60 58 52 50 46 44 40 38 32 30 42 6 16
CALL[ ]	/* CallFunction */";
};
width = 262;
}
);
note = eightsuperior;
unicode = 8312;
},
{
glyphname = ninesuperior;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,492,o),
(111,495,o),
(122,502,cs),
(165,534,o),
(234,623,o),
(234,728,cs),
(234,797,o),
(196,834,o),
(128,834,cs),
(70,834,o),
(15,810,o),
(15,739,cs),
(15,686,o),
(49,641,o),
(109,641,cs),
(156,641,o),
(173,679,o),
(176,687,c),
(172,644,o),
(132,590,o),
(75,535,cs),
(63,523,o),
(62,520,o),
(62,511,cs),
(62,498,o),
(78,492,o),
(94,492,cs)
);
},
{
closed = 1;
nodes = (
(92,698,o),
(80,718,o),
(80,741,cs),
(80,776,o),
(104,784,o),
(120,784,cs),
(149,784,o),
(166,773,o),
(166,740,cs),
(166,721,o),
(155,698,o),
(124,698,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
3 1 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 107 0 4 0 0 2 4 0 91 5 1 3 3 1 83 0 1 1 20 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 2 0 2 107 0 1 5 1 3 4 1 3 91 0 4 0 0 4 79 0 4 4 0 83 0 0 4 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
34 33 40 38 33 44 34 44 41 38 39 6 18
CALL[ ]	/* CallFunction */";
};
width = 257;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(94,494,o),
(103,497,o),
(112,504,cs),
(155,534,o),
(225,631,o),
(225,730,cs),
(225,802,o),
(192,835,o),
(132,835,cs),
(73,835,o),
(17,804,o),
(17,738,cs),
(17,690,o),
(46,647,o),
(107,647,cs),
(143,647,o),
(170,662,o),
(177,694,c),
(177,645,o),
(114,564,o),
(78,534,cs),
(75,531,o),
(71,527,o),
(68,524,cs),
(64,520,o),
(62,516,o),
(62,511,cs),
(62,500,o),
(76,494,o),
(87,494,cs)
);
},
{
closed = 1;
nodes = (
(87,691,o),
(70,713,o),
(70,742,cs),
(70,781,o),
(97,795,o),
(121,795,cs),
(145,795,o),
(170,785,o),
(170,745,cs),
(170,718,o),
(155,691,o),
(119,691,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 4 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 107 0 4 0 0 2 4 0 91 5 1 3 3 1 83 0 1 1 20 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 2 0 2 107 0 1 5 1 3 4 1 3 91 0 4 0 0 4 79 0 4 4 0 83 0 0 4 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
33 32 39 37 32 43 33 43 40 38 39 6 18
CALL[ ]	/* CallFunction */";
};
width = 250;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(76,497,o),
(79,498,o),
(83,500,cs),
(87,501,o),
(92,504,o),
(97,507,cs),
(142,537,o),
(211,636,o),
(211,733,cs),
(211,808,o),
(173,836,o),
(122,836,cs),
(65,836,o),
(19,794,o),
(19,737,cs),
(19,697,o),
(42,657,o),
(103,657,cs),
(159,657,o),
(172,687,o),
(177,702,c),
(174,639,o),
(110,559,o),
(81,532,cs),
(75,527,o),
(70,523,o),
(67,521,cs),
(63,519,o),
(61,516,o),
(61,511,cs),
(61,499,o),
(72,497,o),
(75,497,cs)
);
},
{
closed = 1;
nodes = (
(79,680,o),
(54,704,o),
(54,743,cs),
(54,788,o),
(93,813,o),
(121,813,cs),
(148,813,o),
(174,794,o),
(174,758,cs),
(174,729,o),
(153,680,o),
(110,680,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 4 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 107 0 4 0 0 2 4 0 91 5 1 3 3 1 83 0 1 1 20 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 2 0 2 107 0 1 5 1 3 4 1 3 91 0 4 0 0 4 79 0 4 4 0 83 0 0 4 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
36 35 44 42 35 50 36 50 41 38 41 6 18
CALL[ ]	/* CallFunction */";
};
width = 240;
}
);
note = ninesuperior;
unicode = 8313;
},
{
glyphname = space;
kernLeft = space;
kernRight = space;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
width = 212;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
width = 218;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
width = 226;
}
);
note = space;
unicode = 32;
},
{
glyphname = nbspace;
lastChange = "2024-06-13 14:48:41 +0000";
layers = (
{
layerId = m01;
width = 212;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
width = 218;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
width = 226;
}
);
metricWidth = space;
note = uni00A0;
unicode = 160;
},
{
glyphname = .notdef;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(609,2,ls),
(615,2,o),
(620,4,o),
(623,9,cs),
(626,14,o),
(628,23,o),
(628,37,cs),
(628,295,o),
(628,541,o),
(631,780,cs),
(631,796,o),
(627,814,o),
(610,815,cs),
(525,819,o),
(296,818,o),
(304,818,cs),
(314,818,o),
(174,819,o),
(113,815,cs),
(98,814,o),
(91,803,o),
(91,780,cs),
(91,560,o),
(93,262,o),
(93,37,cs),
(93,23,o),
(95,14,o),
(98,9,cs),
(101,4,o),
(106,2,o),
(112,2,cs)
);
},
{
closed = 1;
nodes = (
(177,72,o),
(173,75,o),
(173,90,cs),
(173,708,ls),
(173,735,o),
(178,741,o),
(201,741,cs),
(519,741,ls),
(542,741,o),
(548,730,o),
(548,714,cs),
(548,93,ls),
(548,79,o),
(542,72,o),
(529,72,cs),
(192,72,l),
(192,72,l)
);
},
{
closed = 1;
nodes = (
(266,126,o),
(278,136,o),
(295,155,cs),
(312,174,o),
(338,202,o),
(374,240,c),
(414,196,o),
(433,153,o),
(448,153,cs),
(461,153,o),
(489,189,o),
(489,204,cs),
(489,208,o),
(484,217,o),
(473,232,cs),
(462,247,o),
(443,269,o),
(416,300,c),
(440,334,o),
(460,362,o),
(487,394,cs),
(491,399,o),
(493,404,o),
(493,409,cs),
(493,418,o),
(463,450,o),
(456,450,cs),
(451,450,o),
(444,447,o),
(436,440,cs),
(428,433,o),
(416,418,o),
(401,397,cs),
(371,355,l),
(350,383,o),
(334,404,o),
(323,419,cs),
(312,433,o),
(305,442,o),
(302,445,cs),
(291,458,o),
(281,470,o),
(274,481,cs),
(267,491,o),
(259,496,o),
(251,496,cs),
(240,496,o),
(214,455,o),
(214,452,cs),
(214,443,o),
(256,391,o),
(328,296,c),
(310,272,o),
(303,267,o),
(251,203,cs),
(246,196,o),
(240,189,o),
(234,183,cs),
(228,177,o),
(225,171,o),
(225,165,cs),
(225,157,o),
(251,126,o),
(260,126,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
82 59 37 32 25 10 3 40
CALL[ ]	/* CallFunction */";
};
width = 670;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(588,2,ls),
(594,2,o),
(599,4,o),
(602,9,cs),
(605,14,o),
(607,23,o),
(607,37,cs),
(607,295,o),
(607,541,o),
(610,780,cs),
(610,796,o),
(606,814,o),
(589,815,cs),
(510,819,o),
(295,818,o),
(304,818,cs),
(314,818,o),
(174,819,o),
(113,815,cs),
(93,814,o),
(90,796,o),
(90,780,cs),
(93,541,o),
(93,295,o),
(93,37,cs),
(93,23,o),
(95,14,o),
(98,9,cs),
(101,4,o),
(106,2,o),
(112,2,cs)
);
},
{
closed = 1;
nodes = (
(156,54,o),
(152,57,o),
(152,72,cs),
(152,726,ls),
(152,753,o),
(152,759,o),
(180,759,cs),
(519,759,ls),
(542,759,o),
(548,751,o),
(548,732,cs),
(548,75,ls),
(548,61,o),
(542,54,o),
(529,54,cs),
(171,54,l),
(171,54,l)
);
},
{
closed = 1;
nodes = (
(265,135,o),
(306,194,o),
(358,249,c),
(386,219,o),
(406,196,o),
(417,179,cs),
(428,162,o),
(436,153,o),
(441,153,cs),
(454,153,o),
(474,180,o),
(474,194,cs),
(474,198,o),
(467,209,o),
(453,227,cs),
(439,244,o),
(419,268,o),
(392,299,c),
(420,338,o),
(439,364,o),
(471,403,cs),
(475,408,o),
(477,413,o),
(477,418,cs),
(477,429,o),
(456,450,o),
(449,450,cs),
(442,450,o),
(434,446,o),
(426,438,cs),
(418,429,o),
(407,416,o),
(394,397,cs),
(356,345,l),
(335,373,o),
(319,394,o),
(308,409,cs),
(297,423,o),
(290,432,o),
(287,435,cs),
(276,448,o),
(267,460,o),
(260,471,cs),
(252,481,o),
(244,486,o),
(236,486,cs),
(228,486,o),
(207,460,o),
(207,452,cs),
(207,443,o),
(249,391,o),
(321,296,c),
(303,272,o),
(296,267,o),
(244,203,cs),
(239,196,o),
(233,189,o),
(227,183,cs),
(221,177,o),
(218,171,o),
(218,165,cs),
(218,156,o),
(235,135,o),
(244,135,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
81 60 38 33 26 10 3 40
CALL[ ]	/* CallFunction */";
};
width = 670;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(558,2,ls),
(564,2,o),
(569,4,o),
(572,9,cs),
(575,14,o),
(577,23,o),
(577,37,cs),
(577,295,o),
(577,541,o),
(580,780,cs),
(580,796,o),
(576,814,o),
(559,815,cs),
(490,819,o),
(293,818,o),
(304,818,cs),
(314,818,o),
(174,819,o),
(113,815,cs),
(93,814,o),
(90,796,o),
(90,780,cs),
(93,541,o),
(93,295,o),
(93,37,cs),
(93,23,o),
(95,14,o),
(98,9,cs),
(101,4,o),
(106,2,o),
(112,2,cs)
);
},
{
closed = 1;
nodes = (
(141,24,l),
(141,24,l),
(126,24,o),
(122,27,o),
(122,42,cs),
(122,756,ls),
(122,783,o),
(127,789,o),
(150,789,cs),
(519,789,ls),
(542,789,o),
(548,785,o),
(548,762,cs),
(548,45,ls),
(548,31,o),
(542,24,o),
(529,24,cs),
(141,24,l),
(141,24,l)
);
},
{
closed = 1;
nodes = (
(253,150,o),
(312,247,o),
(335,264,c),
(363,233,o),
(384,206,o),
(400,186,cs),
(413,169,o),
(425,153,o),
(431,153,cs),
(446,153,o),
(453,161,o),
(453,177,cs),
(453,186,o),
(404,245,o),
(358,297,c),
(372,316,o),
(387,337,o),
(402,358,cs),
(417,379,o),
(432,399,o),
(448,418,cs),
(452,423,o),
(454,428,o),
(454,433,cs),
(454,444,o),
(446,450,o),
(439,450,cs),
(432,450,o),
(424,446,o),
(416,438,cs),
(408,429,o),
(397,416,o),
(384,397,cs),
(335,328,l),
(314,356,o),
(298,377,o),
(287,392,cs),
(276,406,o),
(269,415,o),
(266,418,cs),
(246,445,o),
(231,469,o),
(215,469,cs),
(207,469,o),
(197,460,o),
(197,452,cs),
(197,443,o),
(239,391,o),
(311,296,c),
(293,272,o),
(286,267,o),
(234,203,cs),
(229,196,o),
(223,189,o),
(217,183,cs),
(211,177,o),
(208,171,o),
(208,165,cs),
(208,155,o),
(212,150,o),
(221,150,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
77 59 38 33 26 10 3 40
CALL[ ]	/* CallFunction */";
};
width = 670;
}
);
note = .notdef;
},
{
glyphname = period;
kernLeft = comma;
kernRight = comma;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(155,-28,o),
(178,3,o),
(178,36,cs),
(178,65,o),
(157,98,o),
(110,98,cs),
(56,98,o),
(40,58,o),
(40,34,cs),
(40,6,o),
(59,-28,o),
(108,-28,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
36 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 218;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(142,-19,o),
(163,8,o),
(163,36,cs),
(163,61,o),
(145,89,o),
(105,89,cs),
(62,89,o),
(46,58,o),
(46,34,cs),
(46,10,o),
(62,-19,o),
(103,-19,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
0 0 0 1 83 0 1 1 21 1 68 36 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 209;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(125,-4,o),
(141,16,o),
(141,36,cs),
(141,55,o),
(129,74,o),
(98,74,cs),
(66,74,o),
(54,51,o),
(54,34,cs),
(54,17,o),
(65,-4,o),
(96,-4,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
0 0 0 1 83 0 1 1 16 1 68 36 34 2 17
CALL[ ]	/* CallFunction */";
};
width = 196;
}
);
note = period;
unicode = 46;
},
{
glyphname = comma;
kernLeft = comma;
kernRight = comma;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(107,-106,o),
(170,-64,o),
(170,13,cs),
(170,70,o),
(134,94,o),
(102,94,cs),
(58,94,o),
(42,64,o),
(42,36,cs),
(42,5,o),
(78,3,o),
(78,-14,cs),
(78,-34,o),
(76,-49,o),
(71,-58,cs),
(66,-68,o),
(63,-76,o),
(63,-83,cs),
(63,-106,o),
(82,-106,o),
(89,-106,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 38 34 2 17
CALL[ ]	/* CallFunction */";
};
width = 213;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(114,-91,o),
(155,-41,o),
(155,13,cs),
(155,66,o),
(125,85,o),
(98,85,cs),
(61,85,o),
(46,60,o),
(46,36,cs),
(46,4,o),
(82,5,o),
(82,-12,cs),
(82,-29,o),
(80,-42,o),
(76,-50,cs),
(71,-59,o),
(69,-66,o),
(69,-72,cs),
(69,-89,o),
(83,-91,o),
(90,-91,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 38 34 2 17
CALL[ ]	/* CallFunction */";
};
width = 202;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(118,-66,o),
(134,-16,o),
(134,13,cs),
(134,58,o),
(112,70,o),
(92,70,cs),
(65,70,o),
(52,53,o),
(52,36,cs),
(52,4,o),
(88,9,o),
(88,-8,cs),
(88,-15,o),
(86,-23,o),
(83,-32,cs),
(79,-42,o),
(77,-49,o),
(77,-54,cs),
(77,-61,o),
(84,-66,o),
(91,-66,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 38 34 2 17
CALL[ ]	/* CallFunction */";
};
width = 187;
}
);
note = comma;
unicode = 44;
},
{
glyphname = colon;
kernLeft = colon;
kernRight = colon;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(170,277,o),
(193,308,o),
(193,341,cs),
(193,370,o),
(172,403,o),
(125,403,cs),
(77,403,o),
(55,367,o),
(55,339,cs),
(55,310,o),
(74,277,o),
(123,277,cs)
);
},
{
closed = 1;
nodes = (
(170,-27,o),
(193,4,o),
(193,37,cs),
(193,66,o),
(172,99,o),
(125,99,cs),
(71,99,o),
(55,59,o),
(55,35,cs),
(55,7,o),
(74,-27,o),
(123,-27,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 2 0 3 0 2 3 91 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 3 0 2 3 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
36 38 36 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 248;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(154,285,o),
(175,312,o),
(175,340,cs),
(175,365,o),
(157,393,o),
(117,393,cs),
(74,393,o),
(58,362,o),
(58,338,cs),
(58,314,o),
(74,285,o),
(115,285,cs)
);
},
{
closed = 1;
nodes = (
(154,-18,o),
(175,9,o),
(175,37,cs),
(175,62,o),
(157,90,o),
(117,90,cs),
(74,90,o),
(58,59,o),
(58,35,cs),
(58,11,o),
(74,-18,o),
(115,-18,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
0 2 0 3 0 2 3 91 0 0 0 1 83 0 1 1 21 1 68 36 38 36 37 4 30
CALL[ ]	/* CallFunction */";
};
width = 233;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(133,299,o),
(149,319,o),
(149,339,cs),
(149,358,o),
(137,377,o),
(106,377,cs),
(74,377,o),
(62,354,o),
(62,337,cs),
(62,320,o),
(73,299,o),
(104,299,cs)
);
},
{
closed = 1;
nodes = (
(133,-3,o),
(149,17,o),
(149,37,cs),
(149,56,o),
(137,75,o),
(106,75,cs),
(74,75,o),
(62,52,o),
(62,35,cs),
(62,18,o),
(73,-3,o),
(104,-3,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
0 2 0 3 0 2 3 91 0 0 0 1 83 0 1 1 16 1 68 36 36 36 34 4 19
CALL[ ]	/* CallFunction */";
};
width = 211;
}
);
note = colon;
unicode = 58;
},
{
glyphname = semicolon;
kernLeft = colon;
kernRight = colon;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(124,-106,o),
(187,-64,o),
(187,13,cs),
(187,70,o),
(151,94,o),
(119,94,cs),
(75,94,o),
(59,64,o),
(59,36,cs),
(59,5,o),
(95,3,o),
(95,-14,cs),
(95,-34,o),
(93,-49,o),
(88,-58,cs),
(83,-68,o),
(80,-76,o),
(80,-83,cs),
(80,-106,o),
(99,-106,o),
(106,-106,cs)
);
},
{
closed = 1;
nodes = (
(168,277,o),
(192,308,o),
(192,341,cs),
(192,370,o),
(170,403,o),
(123,403,cs),
(74,403,o),
(54,367,o),
(54,339,cs),
(54,310,o),
(72,277,o),
(121,277,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 0 0 1 2 0 1 91 0 2 3 3 2 79 0 2 2 3 83 0 3 2 3 71 38 36 36 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 246;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(128,-91,o),
(169,-41,o),
(169,13,cs),
(169,66,o),
(139,85,o),
(112,85,cs),
(75,85,o),
(60,60,o),
(60,36,cs),
(60,4,o),
(96,5,o),
(96,-12,cs),
(96,-29,o),
(94,-42,o),
(90,-50,cs),
(85,-59,o),
(83,-66,o),
(83,-72,cs),
(83,-89,o),
(97,-91,o),
(104,-91,cs)
);
},
{
closed = 1;
nodes = (
(151,285,o),
(172,312,o),
(172,340,cs),
(172,365,o),
(154,393,o),
(114,393,cs),
(71,393,o),
(55,362,o),
(55,338,cs),
(55,314,o),
(71,285,o),
(112,285,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 2 0 3 0 2 3 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 36 46 38 34 4 19
CALL[ ]	/* CallFunction */";
};
width = 228;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(128,-66,o),
(144,-16,o),
(144,13,cs),
(144,58,o),
(122,70,o),
(102,70,cs),
(75,70,o),
(62,53,o),
(62,36,cs),
(62,4,o),
(98,5,o),
(98,-12,cs),
(98,-19,o),
(96,-26,o),
(93,-34,cs),
(89,-43,o),
(87,-49,o),
(87,-54,cs),
(87,-61,o),
(94,-66,o),
(101,-66,cs)
);
},
{
closed = 1;
nodes = (
(128,299,o),
(144,319,o),
(144,339,cs),
(144,358,o),
(132,377,o),
(101,377,cs),
(69,377,o),
(57,354,o),
(57,337,cs),
(57,320,o),
(68,299,o),
(99,299,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 0 0 1 2 0 1 91 0 2 3 3 2 79 0 2 2 3 83 0 3 2 3 71 38 36 36 34 4 19
CALL[ ]	/* CallFunction */";
};
width = 203;
}
);
note = semicolon;
unicode = 59;
},
{
glyphname = ellipsis;
kernLeft = comma;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(503,-28,o),
(526,3,o),
(526,36,cs),
(526,65,o),
(505,98,o),
(458,98,cs),
(404,98,o),
(388,58,o),
(388,34,cs),
(388,6,o),
(407,-28,o),
(456,-28,cs)
);
},
{
closed = 1;
nodes = (
(155,-28,o),
(178,3,o),
(178,36,cs),
(178,65,o),
(157,98,o),
(110,98,cs),
(56,98,o),
(40,58,o),
(40,34,cs),
(40,6,o),
(59,-28,o),
(108,-28,cs)
);
},
{
closed = 1;
nodes = (
(332,-28,o),
(356,3,o),
(356,36,cs),
(356,65,o),
(334,98,o),
(287,98,cs),
(234,98,o),
(218,59,o),
(218,34,cs),
(218,6,o),
(237,-28,o),
(285,-28,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
4 2 2 0 0 1 83 5 3 2 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
4 2 2 0 1 1 0 79 4 2 2 0 0 1 83 5 3 2 1 0 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 38 36 38 36 36 6 21
CALL[ ]	/* CallFunction */";
};
width = 566;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(490,-19,o),
(511,8,o),
(511,36,cs),
(511,61,o),
(493,89,o),
(453,89,cs),
(410,89,o),
(394,58,o),
(394,34,cs),
(394,10,o),
(410,-19,o),
(451,-19,cs)
);
},
{
closed = 1;
nodes = (
(142,-19,o),
(163,8,o),
(163,36,cs),
(163,61,o),
(145,89,o),
(105,89,cs),
(62,89,o),
(46,58,o),
(46,34,cs),
(46,10,o),
(62,-19,o),
(103,-19,cs)
);
},
{
closed = 1;
nodes = (
(318,-19,o),
(339,8,o),
(339,36,cs),
(339,61,o),
(321,89,o),
(281,89,cs),
(238,89,o),
(222,58,o),
(222,34,cs),
(222,10,o),
(238,-19,o),
(279,-19,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
4 2 2 0 0 1 83 5 3 2 1 1 21 1 68 36 38 36 38 36 37 6 32
CALL[ ]	/* CallFunction */";
};
width = 557;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(473,-4,o),
(489,16,o),
(489,36,cs),
(489,55,o),
(477,74,o),
(446,74,cs),
(414,74,o),
(402,51,o),
(402,34,cs),
(402,17,o),
(413,-4,o),
(444,-4,cs)
);
},
{
closed = 1;
nodes = (
(125,-4,o),
(141,16,o),
(141,36,cs),
(141,55,o),
(129,74,o),
(98,74,cs),
(66,74,o),
(54,51,o),
(54,34,cs),
(54,17,o),
(65,-4,o),
(96,-4,cs)
);
},
{
closed = 1;
nodes = (
(299,-4,o),
(315,16,o),
(315,36,cs),
(315,55,o),
(303,74,o),
(272,74,cs),
(240,74,o),
(228,51,o),
(228,34,cs),
(228,17,o),
(239,-4,o),
(270,-4,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
4 2 2 0 0 1 83 5 3 2 1 1 16 1 68 36 36 36 36 36 34 6 21
CALL[ ]	/* CallFunction */";
};
width = 544;
}
);
note = ellipsis;
unicode = 8230;
},
{
glyphname = exclam;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(170,101,o),
(176,116,o),
(176,172,cs),
(176,795,ls),
(176,840,o),
(143,842,o),
(129,842,cs),
(110,842,o),
(85,834,o),
(85,795,cs),
(85,740,o),
(86,629,o),
(88,450,cs),
(89,311,o),
(91,135,o),
(94,127,c),
(94,120,o),
(109,101,o),
(134,101,cs)
);
},
{
closed = 1;
nodes = (
(184,-66,o),
(211,-35,o),
(211,2,cs),
(211,29,o),
(191,66,o),
(136,66,cs),
(75,66,o),
(62,19,o),
(62,-1,cs),
(62,-35,o),
(86,-66,o),
(134,-66,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 3 0 2 3 2 87 0 1 1 0 83 0 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 0 0 1 3 0 1 91 0 3 2 2 3 79 0 3 3 2 83 0 2 3 2 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
40 40 38 59 4 19
CALL[ ]	/* CallFunction */";
};
width = 265;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(152,101,o),
(156,125,o),
(156,172,cs),
(156,795,ls),
(156,834,o),
(135,836,o),
(120,836,cs),
(103,836,o),
(86,830,o),
(86,795,cs),
(86,729,o),
(86,610,o),
(88,420,cs),
(89,260,o),
(91,144,o),
(96,127,cs),
(100,104,o),
(110,101,o),
(125,101,cs)
);
},
{
closed = 1;
nodes = (
(165,-46,o),
(186,-19,o),
(186,9,cs),
(186,34,o),
(168,62,o),
(128,62,cs),
(85,62,o),
(69,31,o),
(69,7,cs),
(69,-17,o),
(85,-46,o),
(126,-46,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 2 0 3 2 3 87 0 1 1 0 83 0 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 0 0 1 2 0 1 91 0 2 3 3 2 79 0 2 2 3 83 0 3 2 3 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
36 38 39 41 4 19
CALL[ ]	/* CallFunction */";
};
width = 247;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(119,101,o),
(124,107,o),
(126,119,cs),
(127,131,o),
(128,149,o),
(128,172,cs),
(128,795,ls),
(128,810,o),
(126,819,o),
(122,822,cs),
(118,825,o),
(113,826,o),
(107,826,cs),
(91,826,o),
(88,822,o),
(88,795,cs),
(88,729,o),
(90,586,o),
(92,420,cs),
(94,237,o),
(96,139,o),
(98,127,cs),
(99,116,o),
(101,109,o),
(104,106,cs),
(106,103,o),
(109,101,o),
(112,101,cs)
);
},
{
closed = 1;
nodes = (
(130,-13,o),
(150,-3,o),
(150,20,cs),
(150,40,o),
(136,56,o),
(117,56,cs),
(98,56,o),
(79,46,o),
(79,21,cs),
(79,-3,o),
(97,-13,o),
(114,-13,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 3 0 1 3 104 0 0 0 12 67 0 3 3 2 84 0 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 3 0 1 3 104 0 0 0 14 67 0 3 3 2 84 0 2 2 21 2 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
36 36 37 41 4 19
CALL[ ]	/* CallFunction */";
};
width = 222;
}
);
note = exclam;
unicode = 33;
},
{
glyphname = exclamdown;
kernRight = exclamdown;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(140,-219,o),
(173,-217,o),
(173,-172,cs),
(173,451,ls),
(173,507,o),
(167,522,o),
(131,522,cs),
(106,522,o),
(91,504,o),
(91,496,c),
(88,488,o),
(86,312,o),
(85,173,cs),
(83,-6,o),
(82,-117,o),
(82,-172,cs),
(82,-211,o),
(107,-219,o),
(126,-219,cs)
);
},
{
closed = 1;
nodes = (
(187,558,o),
(210,592,o),
(210,622,cs),
(210,654,o),
(186,690,o),
(133,690,cs),
(78,690,o),
(60,652,o),
(60,625,cs),
(60,605,o),
(73,558,o),
(134,558,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 3 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 1 0 0 2 1 0 91 0 2 2 3 83 0 3 3 17 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 0 2 1 0 91 0 2 3 3 2 79 0 2 2 3 83 0 3 2 3 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
54 40 40 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 262;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(134,-213,o),
(155,-211,o),
(155,-172,cs),
(155,451,ls),
(155,498,o),
(151,522,o),
(124,522,cs),
(109,522,o),
(99,519,o),
(95,496,c),
(89,483,o),
(88,363,o),
(87,203,cs),
(85,13,o),
(85,-106,o),
(85,-172,cs),
(85,-207,o),
(102,-213,o),
(119,-213,cs)
);
},
{
closed = 1;
nodes = (
(167,571,o),
(185,599,o),
(185,624,cs),
(185,652,o),
(164,679,o),
(125,679,cs),
(84,679,o),
(68,650,o),
(68,626,cs),
(68,602,o),
(84,571,o),
(127,571,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 2 0 3 0 2 3 91 0 0 0 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 3 0 2 3 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
36 43 39 34 4 19
CALL[ ]	/* CallFunction */";
};
width = 245;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(113,-203,o),
(118,-202,o),
(123,-199,cs),
(127,-196,o),
(129,-187,o),
(129,-172,cs),
(129,451,ls),
(129,474,o),
(128,492,o),
(126,504,cs),
(124,516,o),
(119,522,o),
(112,522,cs),
(109,522,o),
(106,521,o),
(103,518,cs),
(100,515,o),
(98,507,o),
(97,496,cs),
(95,484,o),
(93,386,o),
(91,203,cs),
(89,37,o),
(87,-106,o),
(87,-172,cs),
(87,-199,o),
(91,-203,o),
(107,-203,cs)
);
},
{
closed = 1;
nodes = (
(136,592,o),
(150,608,o),
(150,628,cs),
(150,651,o),
(130,661,o),
(114,661,cs),
(97,661,o),
(79,651,o),
(79,627,cs),
(79,602,o),
(98,592,o),
(117,592,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 3 0 2 0 3 2 91 0 0 0 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 3 0 2 0 3 2 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
36 43 37 34 4 19
CALL[ ]	/* CallFunction */";
};
width = 221;
}
);
note = exclamdown;
unicode = 161;
},
{
glyphname = question;
kernLeft = question;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(242,58,o),
(255,77,o),
(255,97,cs),
(255,108,o),
(253,121,o),
(250,135,cs),
(246,148,o),
(244,161,o),
(244,174,cs),
(244,232,o),
(313,258,o),
(383,303,cs),
(448,345,o),
(573,450,o),
(573,592,cs),
(573,777,o),
(408,831,o),
(288,831,cs),
(140,831,o),
(33,754,o),
(33,603,cs),
(33,529,o),
(63,431,o),
(149,431,cs),
(192,431,o),
(218,463,o),
(218,503,cs),
(218,520,o),
(209,536,o),
(188,536,cs),
(159,536,o),
(171,513,o),
(153,513,cs),
(144,513,o),
(136,520,o),
(129,533,cs),
(122,546,o),
(118,566,o),
(118,593,cs),
(118,679,o),
(148,752,o),
(285,752,cs),
(384,752,o),
(477,705,o),
(477,594,cs),
(477,493,o),
(420,420,o),
(369,380,cs),
(318,341,o),
(282,328,o),
(233,290,cs),
(192,258,o),
(161,217,o),
(161,152,cs),
(161,135,o),
(162,111,o),
(165,96,cs),
(168,81,o),
(180,58,o),
(211,58,cs)
);
},
{
closed = 1;
nodes = (
(266,-105,o),
(290,-70,o),
(290,-38,cs),
(290,-9,o),
(269,28,o),
(215,28,cs),
(159,28,o),
(140,-14,o),
(140,-40,cs),
(140,-63,o),
(152,-105,o),
(213,-105,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 4 0 0 2 4 0 91 0 5 0 2 6 5 2 91 0 6 0 7 6 7 87 0 3 3 1 83 0 1 1 20 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 1 0 3 5 1 3 91 0 4 0 0 2 4 0 91 0 5 0 2 6 5 2 91 0 6 7 7 6 79 0 6 6 7 83 0 7 6 7 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
85 83 77 75 69 67 64 62 56 54 35 33 40 34 8 17
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(223,64,o),
(233,77,o),
(233,97,cs),
(233,108,o),
(231,121,o),
(228,135,cs),
(224,148,o),
(222,161,o),
(222,174,cs),
(222,239,o),
(311,274,o),
(375,315,cs),
(448,362,o),
(551,456,o),
(551,592,cs),
(551,775,o),
(394,831,o),
(279,831,cs),
(145,831,o),
(32,755,o),
(32,603,cs),
(32,529,o),
(60,456,o),
(132,456,cs),
(168,456,o),
(193,482,o),
(193,503,cs),
(193,512,o),
(185,536,o),
(164,536,cs),
(143,536,o),
(147,513,o),
(131,513,cs),
(122,513,o),
(114,520,o),
(107,533,cs),
(100,546,o),
(96,566,o),
(96,593,cs),
(96,686,o),
(169,770,o),
(275,770,cs),
(373,770,o),
(476,719,o),
(476,594,cs),
(476,493,o),
(419,420,o),
(368,380,cs),
(317,341,o),
(281,328,o),
(232,290,cs),
(191,258,o),
(160,217,o),
(160,152,cs),
(160,135,o),
(161,111,o),
(164,96,cs),
(167,81,o),
(176,64,o),
(200,64,cs)
);
},
{
closed = 1;
nodes = (
(244,-89,o),
(265,-62,o),
(265,-34,cs),
(265,-9,o),
(247,19,o),
(207,19,cs),
(164,19,o),
(148,-12,o),
(148,-36,cs),
(148,-60,o),
(164,-89,o),
(205,-89,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 5 3 4 4 5 96 0 2 0 6 0 2 6 104 0 4 0 0 2 4 0 92 0 6 0 7 6 7 87 0 3 3 1 83 0 1 1 20 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 5 3 4 4 5 96 0 2 0 6 0 2 6 104 0 1 0 3 5 1 3 91 0 4 0 0 2 4 0 92 0 6 7 7 6 79 0 6 6 7 83 0 7 6 7 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
83 81 77 75 69 67 64 62 56 54 35 33 40 34 8 17
CALL[ ]	/* CallFunction */";
};
width = 578;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(193,74,o),
(202,77,o),
(202,97,cs),
(202,108,o),
(200,121,o),
(197,135,cs),
(193,148,o),
(191,161,o),
(191,174,cs),
(191,247,o),
(289,287,o),
(364,335,cs),
(435,380,o),
(520,455,o),
(520,592,cs),
(520,777,o),
(363,831,o),
(266,831,cs),
(148,831,o),
(31,752,o),
(31,603,cs),
(31,531,o),
(58,466,o),
(112,466,cs),
(139,466,o),
(158,482,o),
(158,503,cs),
(158,512,o),
(154,536,o),
(133,536,cs),
(112,536,o),
(117,513,o),
(100,513,cs),
(91,513,o),
(83,520,o),
(76,533,cs),
(69,546,o),
(65,566,o),
(65,593,cs),
(65,701,o),
(135,800,o),
(261,800,cs),
(362,800,o),
(475,736,o),
(475,594,cs),
(475,493,o),
(418,420,o),
(367,380,cs),
(316,341,o),
(280,328,o),
(231,290,cs),
(190,258,o),
(159,217,o),
(159,152,cs),
(159,135,o),
(160,111,o),
(163,96,cs),
(165,81,o),
(172,74,o),
(185,74,cs)
);
},
{
closed = 1;
nodes = (
(213,-62,o),
(229,-48,o),
(229,-28,cs),
(229,-8,o),
(214,4,o),
(195,4,cs),
(176,4,o),
(160,-8,o),
(160,-29,cs),
(160,-52,o),
(178,-62,o),
(194,-62,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 7 5 6 6 7 96 0 4 2 0 2 4 0 104 0 6 0 2 4 6 2 92 0 0 0 1 0 1 87 0 5 5 3 83 0 3 3 20 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 7 5 6 6 7 96 0 4 2 0 2 4 0 104 0 3 0 5 7 3 5 91 0 6 0 2 4 6 2 92 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
80 78 75 73 67 65 47 45 40 36 36 34 8 19
CALL[ ]	/* CallFunction */";
};
width = 548;
}
);
note = question;
unicode = 63;
},
{
glyphname = questiondown;
kernRight = questiondown;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(466,-202,o),
(573,-125,o),
(573,26,cs),
(573,98,o),
(544,198,o),
(456,198,cs),
(413,198,o),
(388,166,o),
(388,126,cs),
(388,110,o),
(399,93,o),
(420,93,cs),
(444,93,o),
(437,116,o),
(453,116,cs),
(462,116,o),
(471,109,o),
(478,96,cs),
(485,83,o),
(488,63,o),
(488,36,cs),
(488,-51,o),
(455,-123,o),
(321,-123,cs),
(222,-123,o),
(129,-76,o),
(129,35,cs),
(129,136,o),
(186,209,o),
(237,249,cs),
(288,288,o),
(324,301,o),
(373,339,cs),
(414,371,o),
(445,412,o),
(445,477,cs),
(445,494,o),
(444,518,o),
(441,533,cs),
(438,548,o),
(426,571,o),
(395,571,cs),
(363,571,o),
(351,552,o),
(351,532,cs),
(351,521,o),
(353,508,o),
(357,495,cs),
(360,481,o),
(362,468,o),
(362,455,cs),
(362,397,o),
(293,371,o),
(223,326,cs),
(150,281,o),
(33,171,o),
(33,37,cs),
(33,-148,o),
(198,-202,o),
(317,-202,cs)
);
},
{
closed = 1;
nodes = (
(448,601,o),
(466,642,o),
(466,669,cs),
(466,695,o),
(450,734,o),
(393,734,cs),
(340,734,o),
(315,699,o),
(315,667,cs),
(315,638,o),
(335,601,o),
(390,601,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 7 0 6 2 7 6 91 0 0 0 4 5 0 4 91 0 2 0 5 3 2 5 91 0 3 3 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 7 0 6 2 7 6 91 0 0 0 4 5 0 4 91 0 2 0 5 3 2 5 91 0 3 1 1 3 79 0 3 3 1 83 0 1 3 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
85 83 77 75 69 67 64 62 56 54 35 33 40 34 8 17
CALL[ ]	/* CallFunction */";
};
width = 593;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(432,-202,o),
(545,-126,o),
(545,26,cs),
(545,100,o),
(517,173,o),
(445,173,cs),
(409,173,o),
(384,147,o),
(384,126,cs),
(384,117,o),
(392,93,o),
(413,93,cs),
(434,93,o),
(430,116,o),
(446,116,cs),
(455,116,o),
(464,109,o),
(471,96,cs),
(478,83,o),
(481,63,o),
(481,36,cs),
(481,-57,o),
(408,-141,o),
(302,-141,cs),
(204,-141,o),
(101,-90,o),
(101,35,cs),
(101,136,o),
(158,209,o),
(209,249,cs),
(260,288,o),
(296,301,o),
(345,339,cs),
(386,371,o),
(417,412,o),
(417,477,cs),
(417,494,o),
(416,518,o),
(413,533,cs),
(410,548,o),
(401,565,o),
(377,565,cs),
(354,565,o),
(344,552,o),
(344,532,cs),
(344,521,o),
(346,508,o),
(350,495,cs),
(353,481,o),
(355,468,o),
(355,455,cs),
(355,390,o),
(267,356,o),
(202,314,cs),
(130,270,o),
(26,172,o),
(26,37,cs),
(26,-146,o),
(183,-202,o),
(298,-202,cs)
);
},
{
closed = 1;
nodes = (
(393,612,o),
(414,639,o),
(414,667,cs),
(414,692,o),
(396,720,o),
(356,720,cs),
(313,720,o),
(297,689,o),
(297,665,cs),
(297,641,o),
(313,612,o),
(354,612,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 7 0 7 2 0 104 0 5 4 3 4 5 96 0 6 0 7 2 6 7 91 0 0 0 4 5 0 4 91 0 3 3 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 2 7 0 7 2 0 104 0 5 4 3 4 5 96 0 6 0 7 2 6 7 91 0 0 0 4 5 0 4 91 0 3 1 1 3 79 0 3 3 1 83 0 1 3 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
83 81 77 75 69 67 64 62 56 54 35 33 40 34 8 17
CALL[ ]	/* CallFunction */";
};
width = 575;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(386,-202,o),
(517,-129,o),
(517,31,cs),
(517,107,o),
(487,163,o),
(439,163,cs),
(423,163,o),
(391,157,o),
(391,125,cs),
(391,106,o),
(401,93,o),
(416,93,cs),
(435,93,o),
(432,116,o),
(449,116,cs),
(458,116,o),
(467,109,o),
(474,95,cs),
(481,81,o),
(484,61,o),
(484,35,cs),
(484,-78,o),
(410,-171,o),
(287,-171,cs),
(187,-171,o),
(71,-108,o),
(71,35,cs),
(71,142,o),
(134,216,o),
(238,285,cs),
(326,343,o),
(394,361,o),
(394,489,cs),
(394,539,o),
(385,555,o),
(368,555,cs),
(359,555,o),
(351,551,o),
(351,534,cs),
(351,523,o),
(353,511,o),
(357,496,cs),
(360,481,o),
(362,467,o),
(362,454,cs),
(362,380,o),
(277,343,o),
(203,298,cs),
(138,257,o),
(27,173,o),
(27,33,cs),
(27,-142,o),
(197,-202,o),
(286,-202,cs)
);
},
{
closed = 1;
nodes = (
(374,625,o),
(393,637,o),
(393,658,cs),
(393,678,o),
(376,691,o),
(359,691,cs),
(339,691,o),
(324,676,o),
(324,657,cs),
(324,637,o),
(344,625,o),
(359,625,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 4 0 2 0 4 2 104 0 7 6 5 6 7 5 104 0 1 0 0 4 1 0 91 0 2 0 6 7 2 6 91 0 5 5 3 83 0 3 3 17 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 4 0 2 0 4 2 104 0 7 6 5 6 7 5 104 0 1 0 0 4 1 0 91 0 2 0 6 7 2 6 91 0 5 3 3 5 79 0 5 5 3 83 0 3 5 3 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
78 76 73 71 65 63 47 45 38 38 36 34 8 19
CALL[ ]	/* CallFunction */";
};
width = 549;
}
);
note = questiondown;
unicode = 191;
},
{
glyphname = periodcentered;
lastChange = "2024-06-14 09:27:42 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(135,295,o),
(158,326,o),
(158,359,cs),
(158,388,o),
(137,421,o),
(90,421,cs),
(36,421,o),
(20,381,o),
(20,357,cs),
(20,329,o),
(39,295,o),
(88,295,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 0 83 0 0 0 15 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
36 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 178;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(143,304,o),
(164,331,o),
(164,359,cs),
(164,384,o),
(146,412,o),
(106,412,cs),
(63,412,o),
(47,381,o),
(47,357,cs),
(47,333,o),
(63,304,o),
(104,304,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 0 83 0 0 0 15 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
36 37 2 28
CALL[ ]	/* CallFunction */";
};
width = 211;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(128,319,o),
(144,339,o),
(144,359,cs),
(144,378,o),
(132,397,o),
(101,397,cs),
(69,397,o),
(57,374,o),
(57,357,cs),
(57,340,o),
(68,319,o),
(99,319,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 36 35 2 28
CALL[ ]	/* CallFunction */";
};
width = 200;
}
);
note = periodcentered;
unicode = 183;
},
{
glyphname = bullet;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(203,258,o),
(254,293,o),
(254,360,cs),
(254,413,o),
(222,459,o),
(161,459,cs),
(102,459,o),
(63,417,o),
(63,358,cs),
(63,298,o),
(105,258,o),
(156,258,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 1 83 0 1 1 23 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
36 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 316;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(191,267,o),
(237,300,o),
(237,360,cs),
(237,408,o),
(210,450,o),
(155,450,cs),
(103,450,o),
(67,411,o),
(67,358,cs),
(67,303,o),
(105,267,o),
(150,267,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 1 83 0 1 1 15 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
36 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 303;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(174,282,o),
(213,308,o),
(213,360,cs),
(213,400,o),
(190,435,o),
(146,435,cs),
(103,435,o),
(73,402,o),
(73,358,cs),
(73,313,o),
(104,282,o),
(141,282,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 1 83 0 1 1 15 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
36 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 285;
}
);
note = bullet;
unicode = 8226;
},
{
glyphname = asterisk;
kernLeft = asterisk;
kernRight = asterisk;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(144,542,o),
(193,629,o),
(196,636,c),
(192,640,o),
(262,542,o),
(288,542,cs),
(303,542,o),
(318,548,o),
(318,568,cs),
(318,614,o),
(245,642,o),
(238,656,c),
(254,656,o),
(273,655,o),
(342,655,cs),
(357,655,o),
(371,667,o),
(371,687,cs),
(371,702,o),
(357,715,o),
(341,715,cs),
(314,715,o),
(267,714,o),
(240,710,c),
(240,730,o),
(303,772,o),
(303,801,cs),
(303,816,o),
(296,832,o),
(273,832,cs),
(249,832,o),
(226,777,o),
(197,731,c),
(148,803,o),
(139,832,o),
(115,832,cs),
(96,832,o),
(85,821,o),
(85,801,cs),
(85,782,o),
(114,756,o),
(158,710,c),
(115,714,o),
(98,714,o),
(66,714,cs),
(38,714,o),
(24,696,o),
(24,683,cs),
(24,659,o),
(50,655,o),
(66,655,cs),
(81,655,o),
(95,655,o),
(109,655,cs),
(122,655,o),
(139,655,o),
(158,656,c),
(132,640,o),
(85,594,o),
(85,570,cs),
(85,551,o),
(96,542,o),
(118,542,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
72 1 1 0 59 8 2 2 1 35 1 3 2 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
4 1 3 2 2 3 95 6 1 1 5 1 2 3 1 2 92 7 8 2 0 0 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
4 1 3 2 3 107 6 1 1 5 1 2 3 1 2 92 7 8 2 0 0 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
7 8 2 0 1 0 106 4 1 3 2 3 107 6 1 1 2 2 1 79 6 1 1 1 2 84 5 1 2 1 2 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
1 0 68 66 58 55 51 47 41 39 31 29 22 16 12 9 0 76 1 76 9 15
CALL[ ]	/* CallFunction */";
};
width = 394;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(138,570,o),
(181,658,o),
(181,658,c),
(199,640,o),
(238,570,o),
(261,570,cs),
(274,570,o),
(287,576,o),
(287,593,cs),
(287,645,o),
(236,633,o),
(215,675,c),
(212,675,o),
(261,671,o),
(308,671,cs),
(320,671,o),
(333,679,o),
(333,695,cs),
(333,710,o),
(322,723,o),
(307,723,cs),
(288,723,o),
(241,721,o),
(217,718,c),
(217,718,o),
(274,772,o),
(274,800,cs),
(274,813,o),
(268,828,o),
(248,828,cs),
(227,828,o),
(202,770,o),
(182,734,c),
(149,784,o),
(133,828,o),
(110,828,cs),
(94,828,o),
(84,823,o),
(84,800,cs),
(84,791,o),
(90,781,o),
(101,770,cs),
(112,759,o),
(129,741,o),
(150,718,c),
(115,722,o),
(95,722,o),
(67,722,cs),
(43,722,o),
(31,708,o),
(31,695,cs),
(31,675,o),
(52,671,o),
(67,671,cs),
(92,671,o),
(119,672,o),
(150,675,c),
(136,662,o),
(84,622,o),
(84,595,cs),
(84,578,o),
(93,570,o),
(112,570,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
72 1 1 0 61 49 8 3 2 1 37 1 4 2 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
5 1 4 2 2 4 95 7 1 1 6 3 2 2 4 1 2 92 8 9 2 0 0 12 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 4 2 4 107 7 1 1 6 3 2 2 4 1 2 92 8 9 2 0 0 12 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
8 9 2 0 1 0 106 5 1 4 2 4 107 7 1 1 2 2 1 79 7 1 1 1 2 84 6 3 2 2 1 2 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
1 0 68 66 60 57 53 50 43 41 33 31 24 23 22 18 14 10 0 76 1 76 10 15
CALL[ ]	/* CallFunction */";
};
width = 364;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(125,617,o),
(146,676,o),
(159,695,c),
(153,699,o),
(201,617,o),
(222,617,cs),
(233,617,o),
(243,622,o),
(243,635,cs),
(243,663,o),
(186,698,o),
(182,706,c),
(181,706,o),
(232,697,o),
(260,697,cs),
(269,697,o),
(279,704,o),
(279,715,cs),
(279,730,o),
(270,736,o),
(259,736,cs),
(228,736,o),
(211,731,o),
(184,731,c),
(184,739,o),
(233,780,o),
(233,799,cs),
(233,810,o),
(228,821,o),
(213,821,cs),
(196,821,o),
(175,770,o),
(160,739,c),
(132,778,o),
(122,821,o),
(103,821,cs),
(90,821,o),
(82,816,o),
(82,799,cs),
(82,792,o),
(88,782,o),
(101,771,cs),
(113,760,o),
(126,746,o),
(139,731,c),
(128,732,o),
(116,733,o),
(104,734,cs),
(92,735,o),
(80,736,o),
(69,736,cs),
(50,736,o),
(41,729,o),
(41,715,cs),
(41,700,o),
(58,697,o),
(69,697,cs),
(78,697,o),
(90,698,o),
(104,701,cs),
(118,703,o),
(130,705,o),
(139,706,c),
(133,699,o),
(82,656,o),
(82,637,cs),
(82,624,o),
(89,617,o),
(104,617,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
71 1 1 0 37 1 5 3 2 66 49 1 4 1 65
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
71 1 8 0 37 1 5 3 2 66 49 1 4 1 65
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 4 1 3 1 4 3 104 9 8 2 3 1 7 1 3 5 1 3 91 6 1 5 5 0 83 10 11 2 0 0 12 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 1 3 1 4 3 104 0 8 1 3 8 79 9 2 2 1 7 1 3 5 1 3 91 6 1 5 5 0 83 10 11 2 0 0 14 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 67 65 60 59 58 56 53 51 43 41 33 31 24 23 20 18 14 11 9 8 0 75 1 75 12 15
CALL[ ]	/* CallFunction */";
};
width = 321;
}
);
note = asterisk;
unicode = 42;
},
{
glyphname = numbersign;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(160,6,o),
(168,23,o),
(173,42,cs),
(176,53,o),
(185,74,o),
(198,107,cs),
(211,139,o),
(226,177,o),
(245,220,c),
(273,220,o),
(299,220,o),
(323,221,cs),
(346,221,o),
(364,221,o),
(375,221,cs),
(379,221,l),
(330,104,o),
(308,46,o),
(308,37,c),
(311,17,o),
(326,6,o),
(343,6,cs),
(379,6,o),
(392,22,o),
(399,42,cs),
(406,59,o),
(428,119,o),
(472,220,c),
(522,220,o),
(574,219,o),
(627,219,cs),
(643,219,o),
(659,240,o),
(659,259,cs),
(658,276,o),
(643,300,o),
(624,300,cs),
(505,300,l),
(551,408,l),
(678,408,ls),
(698,408,o),
(712,437,o),
(712,451,cs),
(712,470,o),
(697,489,o),
(682,489,cs),
(675,489,o),
(663,489,o),
(646,489,cs),
(629,488,o),
(608,488,o),
(585,488,c),
(628,589,o),
(649,647,o),
(649,650,cs),
(649,663,o),
(640,676,o),
(627,676,cs),
(575,676,o),
(570,648,o),
(544,602,c),
(543,601,o),
(538,590,o),
(529,569,cs),
(520,548,o),
(508,520,o),
(493,486,c),
(357,486,l),
(376,531,o),
(392,568,o),
(405,599,cs),
(417,630,o),
(423,647,o),
(423,650,cs),
(423,663,o),
(414,676,o),
(401,676,cs),
(357,676,o),
(344,662,o),
(318,602,c),
(317,601,o),
(313,590,o),
(304,569,cs),
(295,548,o),
(283,520,o),
(268,486,c),
(178,486,o),
(151,488,o),
(114,488,cs),
(99,488,o),
(83,467,o),
(83,448,cs),
(83,425,o),
(103,407,o),
(118,407,cs),
(233,407,l),
(187,299,l),
(65,299,ls),
(40,299,o),
(31,268,o),
(31,256,cs),
(31,234,o),
(53,218,o),
(60,218,cs),
(153,218,l),
(153,218,l),
(104,101,o),
(82,48,o),
(82,37,c),
(85,17,o),
(100,6,o),
(117,6,cs)
);
},
{
closed = 1;
nodes = (
(324,407,l),
(324,407,l),
(459,407,l),
(413,300,l),
(390,300,o),
(368,300,o),
(346,300,cs),
(323,299,o),
(301,299,o),
(278,299,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
72 1 0 1 111 91 2 11 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
6 1 4 3 4 106 14 9 2 1 12 10 16 3 0 11 1 0 91 15 8 2 2 2 3 83 7 5 2 3 3 23 67 13 1 11 11 13 11 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
6 1 4 3 4 106 7 5 2 3 15 8 2 2 1 3 2 92 14 9 2 1 12 10 16 3 0 11 1 0 91 13 1 11 11 13 11 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
1 0 122 121 120 117 109 107 100 96 89 87 80 74 70 68 67 65 59 55 48 46 39 38 33 31 24 18 14 12 11 9 0 116 1 116 17 15
CALL[ ]	/* CallFunction */";
};
width = 739;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(145,12,o),
(149,27,o),
(156,42,c),
(159,53,o),
(168,76,o),
(182,110,cs),
(195,144,o),
(212,184,o),
(231,229,c),
(260,229,o),
(287,229,o),
(312,230,cs),
(337,230,o),
(355,230,o),
(367,230,cs),
(387,230,l),
(350,142,o),
(311,50,o),
(311,37,c),
(314,18,o),
(326,12,o),
(339,12,cs),
(371,12,o),
(375,27,o),
(382,42,c),
(385,53,o),
(394,76,o),
(408,110,cs),
(421,144,o),
(438,184,o),
(457,229,c),
(505,229,o),
(559,228,o),
(619,228,cs),
(630,228,o),
(644,244,o),
(644,259,cs),
(643,272,o),
(625,291,o),
(616,291,cs),
(483,291,l),
(537,417,l),
(670,417,ls),
(685,417,o),
(697,440,o),
(697,451,cs),
(697,466,o),
(679,480,o),
(674,480,cs),
(667,480,o),
(653,480,o),
(633,480,cs),
(612,479,o),
(589,479,o),
(563,479,c),
(610,588,o),
(631,645,o),
(631,650,cs),
(631,661,o),
(623,670,o),
(612,670,cs),
(573,670,o),
(569,648,o),
(546,602,c),
(492,478,l),
(468,477,o),
(446,477,o),
(426,477,cs),
(405,477,o),
(390,477,o),
(379,477,cs),
(336,477,l),
(371,558,o),
(405,642,o),
(405,650,cs),
(405,661,o),
(397,670,o),
(386,670,cs),
(347,670,o),
(343,648,o),
(320,602,c),
(266,477,l),
(173,477,o),
(144,479,o),
(106,479,cs),
(95,479,o),
(82,463,o),
(82,448,cs),
(82,431,o),
(101,416,o),
(110,416,cs),
(240,416,l),
(186,290,l),
(57,290,ls),
(42,290,o),
(30,267,o),
(30,256,cs),
(30,237,o),
(47,227,o),
(52,227,cs),
(58,227,o),
(71,227,o),
(91,227,cs),
(111,227,o),
(134,227,o),
(160,228,c),
(125,144,o),
(85,48,o),
(85,37,c),
(88,18,o),
(100,12,o),
(113,12,cs)
);
},
{
closed = 1;
nodes = (
(266,311,o),
(275,332,o),
(284,353,cs),
(293,374,o),
(301,395,o),
(310,416,c),
(466,416,l),
(466,416,l),
(412,291,l),
(387,291,o),
(361,291,o),
(335,291,cs),
(308,290,o),
(282,290,o),
(257,290,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
67 1 0 1 102 84 2 11 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
6 1 4 3 4 106 14 9 2 1 12 10 16 3 0 11 1 0 91 17 15 8 3 2 2 3 83 7 5 2 3 3 23 67 13 1 11 11 13 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
6 1 4 3 4 106 7 5 2 3 17 15 8 3 2 1 3 2 92 14 9 2 1 12 10 16 3 0 11 1 0 91 13 1 11 11 13 11 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
6 1 4 3 4 106 13 1 11 0 11 107 7 5 2 3 17 15 8 3 2 1 3 2 92 14 9 2 1 0 0 1 79 14 9 2 1 1 0 83 12 10 16 3 0 1 0 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
110 110 1 0 110 117 110 117 116 113 100 98 93 89 82 80 75 69 65 63 62 60 56 52 45 43 38 34 27 25 20 14 10 8 7 5 0 109 1 107 18 15
CALL[ ]	/* CallFunction */";
};
width = 725;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(123,22,o),
(127,31,o),
(130,42,cs),
(138,67,o),
(178,164,o),
(211,244,c),
(242,244,o),
(270,244,o),
(297,245,cs),
(324,245,o),
(343,245,o),
(356,245,cs),
(397,245,l),
(357,149,o),
(315,50,o),
(315,37,c),
(317,27,o),
(323,22,o),
(334,22,cs),
(349,22,o),
(353,31,o),
(356,42,cs),
(370,85,o),
(388,127,o),
(437,244,c),
(487,244,o),
(544,243,o),
(608,243,cs),
(619,243,o),
(623,252,o),
(623,259,c),
(622,266,o),
(614,276,o),
(605,276,cs),
(451,276,l),
(517,432,l),
(659,432,ls),
(674,432,o),
(676,444,o),
(676,451,cs),
(676,458,o),
(668,465,o),
(663,465,cs),
(647,465,o),
(591,464,o),
(530,463,c),
(566,546,o),
(605,644,o),
(605,650,cs),
(605,657,o),
(600,660,o),
(591,660,cs),
(582,660,o),
(575,655,o),
(570,646,cs),
(565,636,o),
(559,621,o),
(550,602,cs),
(490,463,l),
(465,462,o),
(441,462,o),
(419,462,cs),
(396,462,o),
(379,462,o),
(368,462,cs),
(304,462,l),
(340,545,o),
(379,644,o),
(379,650,cs),
(379,657,o),
(374,660,o),
(365,660,cs),
(340,660,o),
(340,641,o),
(324,602,cs),
(323,601,o),
(317,587,o),
(306,561,cs),
(295,535,o),
(281,502,o),
(264,462,c),
(169,462,o),
(133,464,o),
(95,464,cs),
(84,464,o),
(81,455,o),
(81,448,cs),
(81,439,o),
(90,431,o),
(99,431,cs),
(250,431,l),
(184,275,l),
(46,275,ls),
(31,275,o),
(29,263,o),
(29,256,cs),
(29,247,o),
(36,242,o),
(41,242,cs),
(48,242,o),
(64,242,o),
(88,243,cs),
(112,243,o),
(139,243,o),
(170,243,c),
(114,112,o),
(89,46,o),
(89,37,c),
(91,27,o),
(97,22,o),
(108,22,cs)
);
},
{
closed = 1;
nodes = (
(291,431,l),
(322,431,o),
(353,431,o),
(384,432,cs),
(415,432,o),
(446,432,o),
(477,432,c),
(466,407,o),
(455,381,o),
(444,355,cs),
(433,329,o),
(421,303,o),
(410,276,c),
(379,276,o),
(348,276,o),
(317,276,cs),
(285,275,o),
(254,275,o),
(224,275,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
65 1 0 1 102 83 2 11 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
6 1 4 3 4 106 14 9 2 1 12 10 16 3 0 11 1 0 91 15 8 2 2 2 3 83 7 5 2 3 3 23 67 13 1 11 11 13 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
6 1 4 3 4 106 7 5 2 3 15 8 2 2 1 3 2 92 14 9 2 1 12 10 16 3 0 11 1 0 91 13 1 11 11 13 11 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
6 1 4 3 4 106 13 1 11 0 11 107 7 5 2 3 15 8 2 2 1 3 2 92 14 9 2 1 0 0 1 79 14 9 2 1 1 0 83 12 10 16 3 0 1 0 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
1 0 119 116 113 110 101 99 92 88 82 80 73 67 63 61 60 58 54 50 44 42 39 35 29 27 20 14 10 8 7 5 0 109 1 107 17 15
CALL[ ]	/* CallFunction */";
};
width = 705;
}
);
note = numbersign;
unicode = 35;
},
{
glyphname = slash;
kernLeft = slash;
kernRight = slash;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(85,-19,o),
(102,-10,o),
(109,5,cs),
(514,768,l),
(519,776,o),
(528,796,o),
(528,807,cs),
(528,823,o),
(511,838,o),
(483,838,cs),
(454,838,o),
(448,829,o),
(419,774,cs),
(392,721,o),
(364,663,o),
(337,607,cs),
(322,576,o),
(279,498,o),
(238,423,cs),
(179,314,o),
(134,233,o),
(107,183,cs),
(83,138,o),
(52,83,o),
(23,24,cs),
(22,21,o),
(21,17,o),
(21,14,cs),
(21,-7,o),
(43,-19,o),
(58,-19,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 20 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
0 0 1 0 106 0 1 1 21 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
30 28 20 18 2 15
CALL[ ]	/* CallFunction */";
};
width = 548;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(68,-19,o),
(84,-10,o),
(91,5,cs),
(496,768,ls),
(501,777,o),
(510,796,o),
(510,807,cs),
(510,815,o),
(509,831,o),
(485,831,cs),
(453,831,o),
(441,815,o),
(421,774,cs),
(382,694,o),
(374,677,o),
(347,621,cs),
(328,582,o),
(296,525,o),
(241,423,cs),
(209,364,o),
(190,331,o),
(178,311,cs),
(168,294,o),
(158,278,o),
(152,267,cs),
(111,194,o),
(97,166,o),
(23,18,cs),
(22,16,o),
(21,13,o),
(21,9,cs),
(21,-6,o),
(37,-19,o),
(49,-19,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 20 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
0 0 1 0 106 0 1 1 21 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
30 28 20 18 2 15
CALL[ ]	/* CallFunction */";
};
width = 530;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(52,-19,o),
(56,-14,o),
(65,5,cs),
(470,768,ls),
(475,779,o),
(484,796,o),
(484,807,cs),
(484,815,o),
(481,821,o),
(469,821,cs),
(445,821,o),
(427,780,o),
(425,774,c),
(388,698,o),
(363,645,o),
(350,621,cs),
(331,583,o),
(299,522,o),
(245,423,cs),
(216,370,o),
(195,332,o),
(184,310,cs),
(175,294,o),
(165,277,o),
(159,266,cs),
(139,230,o),
(94,142,o),
(27,18,c),
(24,11,o),
(22,1,o),
(22,-7,cs),
(22,-15,o),
(27,-19,o),
(36,-19,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 12 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 14 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
32 30 22 20 2 15
CALL[ ]	/* CallFunction */";
};
width = 505;
}
);
note = slash;
unicode = 47;
},
{
glyphname = backslash;
kernLeft = backslash;
kernRight = backslash;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(505,-19,o),
(527,-7,o),
(527,14,cs),
(527,17,o),
(526,21,o),
(525,24,cs),
(497,78,o),
(466,135,o),
(441,183,cs),
(414,233,o),
(369,314,o),
(310,423,cs),
(269,498,o),
(226,576,o),
(212,607,cs),
(184,663,o),
(156,721,o),
(129,774,cs),
(102,825,o),
(95,838,o),
(65,838,cs),
(37,838,o),
(20,823,o),
(20,807,cs),
(20,796,o),
(29,776,o),
(34,768,c),
(439,5,ls),
(446,-10,o),
(463,-19,o),
(490,-19,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 20 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
0 1 0 1 106 0 0 0 21 0 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
40 37 2 17
CALL[ ]	/* CallFunction */";
};
width = 548;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(493,-19,o),
(509,-6,o),
(509,9,cs),
(509,13,o),
(508,16,o),
(507,18,cs),
(433,166,o),
(419,194,o),
(379,267,cs),
(372,278,o),
(362,294,o),
(352,311,cs),
(340,331,o),
(321,364,o),
(289,423,cs),
(234,525,o),
(202,582,o),
(184,621,cs),
(156,677,o),
(148,694,o),
(109,774,cs),
(89,815,o),
(77,831,o),
(45,831,cs),
(21,831,o),
(20,815,o),
(20,807,cs),
(20,796,o),
(29,777,o),
(34,768,cs),
(439,5,ls),
(446,-10,o),
(462,-19,o),
(481,-19,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 20 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
0 0 1 0 106 0 1 1 21 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
31 29 21 19 2 26
CALL[ ]	/* CallFunction */";
};
width = 530;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(478,-19,o),
(483,-15,o),
(483,-7,cs),
(483,1,o),
(481,11,o),
(478,18,c),
(411,142,o),
(366,230,o),
(347,266,cs),
(340,277,o),
(330,294,o),
(322,310,cs),
(310,332,o),
(289,370,o),
(260,423,cs),
(206,522,o),
(174,583,o),
(155,621,cs),
(142,645,o),
(117,698,o),
(80,774,c),
(78,780,o),
(60,821,o),
(36,821,cs),
(24,821,o),
(21,815,o),
(21,807,cs),
(21,796,o),
(30,779,o),
(35,768,cs),
(440,5,ls),
(449,-14,o),
(453,-19,o),
(469,-19,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 12 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 14 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
33 31 23 21 2 26
CALL[ ]	/* CallFunction */";
};
width = 505;
}
);
note = backslash;
unicode = 92;
},
{
glyphname = periodcentered.loclCAT;
lastChange = "2024-06-14 09:27:27 +0000";
layers = (
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
width = 600;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
width = 600;
},
{
layerId = m01;
shapes = (
{
pos = (-40,0);
ref = periodcentered;
}
);
width = 138;
}
);
},
{
glyphname = periodcentered.loclCAT.case;
lastChange = "2024-06-14 08:47:33 +0000";
layers = (
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
width = 600;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
width = 600;
},
{
layerId = m01;
shapes = (
{
pos = (0,110);
ref = periodcentered;
}
);
width = 178;
}
);
},
{
glyphname = hyphen;
kernLeft = emdash;
kernRight = emdash;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(155,229,o),
(243,230,o),
(311,230,cs),
(340,230,o),
(347,257,o),
(347,272,cs),
(347,292,o),
(332,309,o),
(319,309,cs),
(303,309,o),
(285,309,o),
(264,308,cs),
(243,307,o),
(219,306,o),
(191,306,cs),
(153,306,o),
(115,308,o),
(90,308,cs),
(67,308,o),
(57,288,o),
(57,269,cs),
(57,250,o),
(71,229,o),
(90,229,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 14 7 0 26 1 18 3 15
CALL[ ]	/* CallFunction */";
};
width = 402;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(150,238,o),
(238,239,o),
(306,239,cs),
(329,239,o),
(335,261,o),
(335,272,cs),
(335,287,o),
(325,300,o),
(314,300,cs),
(298,300,o),
(280,300,o),
(259,299,cs),
(238,298,o),
(214,297,o),
(186,297,cs),
(148,297,o),
(110,299,o),
(85,299,cs),
(66,299,o),
(59,284,o),
(59,269,cs),
(59,254,o),
(70,238,o),
(85,238,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 12 5 0 24 1 16 3 15
CALL[ ]	/* CallFunction */";
};
width = 393;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(143,253,o),
(231,254,o),
(299,254,cs),
(314,254,o),
(318,265,o),
(318,272,cs),
(318,279,o),
(312,285,o),
(307,285,cs),
(291,285,o),
(273,285,o),
(252,284,cs),
(231,283,o),
(207,282,o),
(179,282,cs),
(141,282,o),
(103,284,o),
(78,284,cs),
(67,284,o),
(62,276,o),
(62,269,cs),
(62,262,o),
(69,253,o),
(78,253,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 12 5 0 24 1 16 3 15
CALL[ ]	/* CallFunction */";
};
width = 380;
}
);
note = hyphen;
unicode = 45;
},
{
glyphname = endash;
kernLeft = emdash;
kernRight = emdash;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(187,229,o),
(310,230,o),
(406,230,cs),
(440,230,o),
(450,256,o),
(450,272,cs),
(450,292,o),
(433,309,o),
(418,309,cs),
(395,309,o),
(369,309,o),
(340,308,cs),
(311,307,o),
(277,306,o),
(238,306,cs),
(186,306,o),
(132,308,o),
(96,308,cs),
(69,308,o),
(57,288,o),
(57,269,cs),
(57,250,o),
(75,229,o),
(96,229,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 14 7 0 26 1 18 3 15
CALL[ ]	/* CallFunction */";
};
width = 505;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(182,238,o),
(305,239,o),
(401,239,cs),
(430,239,o),
(438,261,o),
(438,272,cs),
(438,287,o),
(425,300,o),
(413,300,cs),
(390,300,o),
(364,300,o),
(335,299,cs),
(306,298,o),
(272,297,o),
(233,297,cs),
(181,297,o),
(127,299,o),
(91,299,cs),
(68,299,o),
(59,284,o),
(59,269,cs),
(59,254,o),
(74,238,o),
(91,238,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 12 5 0 24 1 16 3 15
CALL[ ]	/* CallFunction */";
};
width = 496;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(175,253,o),
(298,254,o),
(394,254,cs),
(405,254,o),
(412,256,o),
(416,261,cs),
(419,265,o),
(421,269,o),
(421,272,cs),
(421,279,o),
(413,285,o),
(406,285,cs),
(383,285,o),
(357,285,o),
(328,284,cs),
(299,283,o),
(265,282,o),
(226,282,cs),
(174,282,o),
(120,284,o),
(84,284,cs),
(69,284,o),
(62,276,o),
(62,269,cs),
(62,262,o),
(72,253,o),
(84,253,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 12 5 0 24 1 16 3 15
CALL[ ]	/* CallFunction */";
};
width = 483;
}
);
note = endash;
unicode = 8211;
},
{
glyphname = emdash;
kernLeft = emdash;
kernRight = emdash;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(100,229,o),
(118,229,o),
(146,229,cs),
(174,229,o),
(207,229,o),
(245,229,cs),
(283,229,o),
(324,229,o),
(367,230,cs),
(410,230,o),
(451,230,o),
(490,230,cs),
(529,230,o),
(562,230,o),
(591,230,cs),
(620,230,o),
(638,230,o),
(647,230,cs),
(674,230,o),
(683,257,o),
(683,272,cs),
(683,292,o),
(668,309,o),
(655,309,cs),
(652,309,o),
(518,306,o),
(372,306,cs),
(336,306,o),
(287,307,o),
(227,307,cs),
(166,307,o),
(121,308,o),
(92,308,cs),
(69,308,o),
(59,288,o),
(59,269,cs),
(59,250,o),
(72,229,o),
(92,229,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 16 7 0 32 1 20 3 15
CALL[ ]	/* CallFunction */";
};
width = 740;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(94,238,o),
(112,238,o),
(140,238,cs),
(168,238,o),
(201,238,o),
(239,238,cs),
(277,238,o),
(318,238,o),
(361,239,cs),
(404,239,o),
(445,239,o),
(484,239,cs),
(523,239,o),
(556,239,o),
(585,239,cs),
(614,239,o),
(632,239,o),
(641,239,cs),
(664,239,o),
(670,261,o),
(670,272,cs),
(670,287,o),
(660,300,o),
(649,300,cs),
(646,300,o),
(512,297,o),
(366,297,cs),
(330,297,o),
(281,298,o),
(221,298,cs),
(160,298,o),
(115,299,o),
(86,299,cs),
(67,299,o),
(60,284,o),
(60,269,cs),
(60,254,o),
(71,238,o),
(86,238,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 14 5 0 30 1 18 3 15
CALL[ ]	/* CallFunction */";
};
width = 729;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(86,253,o),
(104,253,o),
(132,253,cs),
(160,253,o),
(193,253,o),
(231,253,cs),
(269,253,o),
(310,253,o),
(353,254,cs),
(396,254,o),
(437,254,o),
(476,254,cs),
(515,254,o),
(548,254,o),
(577,254,cs),
(606,254,o),
(624,254,o),
(633,254,cs),
(648,254,o),
(652,265,o),
(652,272,cs),
(652,279,o),
(646,285,o),
(641,285,cs),
(638,285,o),
(504,282,o),
(358,282,cs),
(322,282,o),
(273,283,o),
(213,283,cs),
(152,283,o),
(107,284,o),
(78,284,cs),
(67,284,o),
(62,276,o),
(62,269,cs),
(62,262,o),
(69,253,o),
(78,253,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 14 5 0 30 1 18 3 15
CALL[ ]	/* CallFunction */";
};
width = 714;
}
);
note = emdash;
unicode = 8212;
},
{
glyphname = underscore;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(67,-96,o),
(190,-95,o),
(286,-95,cs),
(320,-95,o),
(330,-69,o),
(330,-53,cs),
(330,-33,o),
(313,-16,o),
(298,-16,cs),
(275,-16,o),
(249,-16,o),
(220,-17,cs),
(191,-18,o),
(157,-19,o),
(118,-19,cs),
(66,-19,o),
(12,-17,o),
(-24,-17,cs),
(-51,-17,o),
(-63,-37,o),
(-63,-56,cs),
(-63,-75,o),
(-45,-96,o),
(-24,-96,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 14 7 0 26 1 18 3 15
CALL[ ]	/* CallFunction */";
};
width = 270;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(111,-87,o),
(234,-86,o),
(330,-86,cs),
(359,-86,o),
(367,-64,o),
(367,-53,cs),
(367,-38,o),
(354,-25,o),
(342,-25,cs),
(319,-25,o),
(293,-25,o),
(264,-26,cs),
(235,-27,o),
(201,-28,o),
(162,-28,cs),
(110,-28,o),
(56,-26,o),
(20,-26,cs),
(-3,-26,o),
(-12,-41,o),
(-12,-56,cs),
(-12,-71,o),
(3,-87,o),
(20,-87,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 12 5 0 24 1 16 3 15
CALL[ ]	/* CallFunction */";
};
width = 357;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(174,-72,o),
(297,-71,o),
(393,-71,cs),
(404,-71,o),
(411,-69,o),
(415,-64,cs),
(418,-60,o),
(420,-56,o),
(420,-53,cs),
(420,-46,o),
(412,-40,o),
(405,-40,cs),
(382,-40,o),
(356,-40,o),
(327,-41,cs),
(298,-42,o),
(264,-43,o),
(225,-43,cs),
(173,-43,o),
(119,-41,o),
(83,-41,cs),
(68,-41,o),
(61,-49,o),
(61,-56,cs),
(61,-63,o),
(71,-72,o),
(83,-72,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 12 5 0 24 1 16 3 15
CALL[ ]	/* CallFunction */";
};
width = 481;
}
);
note = underscore;
unicode = 95;
},
{
glyphname = parenleft;
kernRight = parenleft;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(229,-35,o),
(238,-13,o),
(238,0,cs),
(238,27,o),
(210,78,o),
(187,139,cs),
(161,207,o),
(135,296,o),
(135,411,cs),
(135,523,o),
(167,612,o),
(199,680,cs),
(227,741,o),
(262,791,o),
(262,819,cs),
(262,831,o),
(253,854,o),
(221,854,cs),
(204,854,o),
(175,825,o),
(175,825,c),
(150,786,o),
(127,744,o),
(107,699,cs),
(72,622,o),
(39,518,o),
(39,409,cs),
(39,298,o),
(60,205,o),
(84,135,cs),
(106,70,o),
(132,21,o),
(144,6,cs),
(155,-9,o),
(167,-35,o),
(198,-35,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 20 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 0 83 0 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
46 46 2 17
CALL[ ]	/* CallFunction */";
};
width = 284;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(212,-29,o),
(220,-13,o),
(220,0,cs),
(220,27,o),
(192,73,o),
(169,132,cs),
(143,197,o),
(117,288,o),
(117,411,cs),
(117,531,o),
(149,620,o),
(181,685,cs),
(209,744,o),
(244,791,o),
(244,819,cs),
(244,831,o),
(238,848,o),
(214,848,cs),
(200,848,o),
(178,825,o),
(178,825,c),
(153,786,o),
(130,744,o),
(110,699,cs),
(75,622,o),
(42,518,o),
(42,409,cs),
(42,300,o),
(64,206,o),
(89,136,cs),
(110,73,o),
(136,24,o),
(147,6,cs),
(156,-9,o),
(168,-29,o),
(191,-29,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 20 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 0 1 107 0 0 0 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 9 values pushed */
0 0 1 0 106 0 1 1 97
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
46 46 2 17
CALL[ ]	/* CallFunction */";
};
width = 267;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(188,-19,o),
(195,-13,o),
(195,0,cs),
(195,26,o),
(167,65,o),
(144,121,cs),
(118,183,o),
(92,272,o),
(92,411,cs),
(92,540,o),
(125,636,o),
(156,693,cs),
(186,751,o),
(219,795,o),
(219,819,cs),
(219,831,o),
(216,838,o),
(204,838,cs),
(197,838,o),
(191,836,o),
(188,831,cs),
(185,826,o),
(183,824,o),
(183,825,c),
(158,786,o),
(135,744,o),
(115,699,cs),
(80,622,o),
(47,518,o),
(47,409,cs),
(47,300,o),
(71,207,o),
(96,137,cs),
(124,55,o),
(138,44,o),
(152,6,cs),
(157,-9,o),
(170,-19,o),
(181,-19,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
10 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 20 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
0 0 1 0 106 0 1 1 21 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
32 30 44 2 16
CALL[ ]	/* CallFunction */";
};
width = 243;
}
);
note = parenleft;
unicode = 40;
},
{
glyphname = parenright;
kernLeft = parenright;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(80,-35,o),
(109,-6,o),
(109,-6,c),
(134,33,o),
(157,75,o),
(177,120,cs),
(212,197,o),
(245,299,o),
(245,410,cs),
(245,519,o),
(224,615,o),
(200,685,cs),
(178,749,o),
(151,798,o),
(140,813,cs),
(129,828,o),
(117,854,o),
(86,854,cs),
(55,854,o),
(46,832,o),
(46,819,cs),
(46,792,o),
(74,741,o),
(98,680,cs),
(124,612,o),
(149,521,o),
(149,408,cs),
(149,296,o),
(117,207,o),
(86,140,cs),
(57,78,o),
(22,28,o),
(22,0,cs),
(22,-12,o),
(31,-35,o),
(63,-35,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 20 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 1 83 0 1 1 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
46 46 2 17
CALL[ ]	/* CallFunction */";
};
width = 284;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(67,-29,o),
(89,-6,o),
(89,-6,c),
(114,33,o),
(137,75,o),
(157,120,cs),
(192,197,o),
(225,301,o),
(225,410,cs),
(225,519,o),
(203,614,o),
(179,684,cs),
(157,746,o),
(131,795,o),
(120,813,cs),
(111,828,o),
(99,848,o),
(76,848,cs),
(55,848,o),
(47,832,o),
(47,819,cs),
(47,792,o),
(75,746,o),
(99,687,cs),
(125,622,o),
(150,531,o),
(150,408,cs),
(150,288,o),
(118,199,o),
(87,134,cs),
(58,75,o),
(23,28,o),
(23,0,cs),
(23,-12,o),
(29,-29,o),
(53,-29,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 20 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 1 0 107 0 1 1 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 9 values pushed */
0 1 0 1 106 0 0 0 97
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
46 47 2 28
CALL[ ]	/* CallFunction */";
};
width = 267;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(46,-19,o),
(52,-17,o),
(55,-12,cs),
(58,-7,o),
(60,-5,o),
(60,-6,c),
(85,33,o),
(108,75,o),
(128,120,cs),
(163,197,o),
(196,301,o),
(196,410,cs),
(196,519,o),
(172,613,o),
(148,683,cs),
(119,764,o),
(105,775,o),
(91,813,cs),
(86,828,o),
(73,838,o),
(62,838,cs),
(55,838,o),
(48,832,o),
(48,819,cs),
(48,793,o),
(76,754,o),
(100,699,cs),
(126,637,o),
(151,547,o),
(151,408,cs),
(151,279,o),
(118,183,o),
(88,126,cs),
(57,68,o),
(24,24,o),
(24,0,cs),
(24,-12,o),
(27,-19,o),
(39,-19,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
11 1 0 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 20 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
0 1 0 1 106 0 0 0 21 0 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
33 31 45 2 27
CALL[ ]	/* CallFunction */";
};
width = 243;
}
);
note = parenright;
unicode = 41;
},
{
glyphname = braceleft;
kernRight = braceleft;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(245,-58,ls),
(307,-58,o),
(338,-49,o),
(338,-31,cs),
(338,1,o),
(285,5,o),
(257,5,cs),
(216,5,o),
(211,14,o),
(211,59,cs),
(211,201,l),
(211,201,l),
(210,233,o),
(205,262,o),
(197,287,cs),
(183,331,o),
(152,374,o),
(99,374,cs),
(153,374,o),
(184,427,o),
(197,476,cs),
(205,506,o),
(210,540,o),
(211,579,cs),
(211,749,ls),
(211,761,o),
(216,773,o),
(264,778,cs),
(305,783,l),
(313,783,o),
(340,789,o),
(340,810,cs),
(340,836,o),
(317,838,o),
(304,838,cs),
(284,838,o),
(248,835,o),
(197,835,cs),
(133,835,o),
(117,773,o),
(117,747,cs),
(117,708,o),
(117,675,o),
(118,648,cs),
(118,620,o),
(118,597,o),
(118,580,cs),
(118,432,o),
(74,400,o),
(37,400,cs),
(12,400,o),
(-5,393,o),
(-5,374,cs),
(-5,357,o),
(7,348,o),
(31,348,cs),
(56,348,o),
(120,329,o),
(120,200,cs),
(120,32,ls),
(120,-45,o),
(144,-58,o),
(188,-58,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 5 4 3 4 5 3 104 0 6 3 7 3 6 7 104 0 7 2 3 7 2 102 0 3 0 2 0 3 2 91 0 0 0 1 0 1 88 0 4 4 20 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 4 5 4 106 0 5 3 5 106 0 6 3 7 3 6 7 104 0 7 2 3 7 2 102 0 3 0 2 0 3 2 91 0 0 1 1 0 79 0 0 0 1 84 0 1 0 1 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
16 29 24 123 35 41 53 34 8 23
CALL[ ]	/* CallFunction */";
};
width = 349;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(237,-58,ls),
(256,-58,o),
(323,-58,o),
(323,-36,cs),
(323,-8,o),
(265,-7,o),
(249,-7,cs),
(200,-7,o),
(193,-6,o),
(193,47,cs),
(193,201,l),
(193,201,l),
(192,233,o),
(187,262,o),
(179,287,cs),
(165,331,o),
(134,374,o),
(81,374,cs),
(135,374,o),
(166,427,o),
(179,476,cs),
(187,506,o),
(192,540,o),
(193,579,cs),
(193,753,ls),
(193,760,o),
(203,786,o),
(246,788,cs),
(297,794,ls),
(312,797,o),
(325,801,o),
(325,816,cs),
(325,836,o),
(307,838,o),
(296,838,cs),
(278,838,o),
(246,835,o),
(200,835,cs),
(122,835,o),
(120,763,o),
(120,747,cs),
(120,708,o),
(120,675,o),
(121,648,cs),
(121,620,o),
(121,597,o),
(121,580,cs),
(121,432,o),
(77,400,o),
(40,400,cs),
(15,400,o),
(-2,393,o),
(-2,374,cs),
(-2,357,o),
(10,348,o),
(34,348,cs),
(59,348,o),
(123,329,o),
(123,200,cs),
(123,32,ls),
(123,-45,o),
(147,-58,o),
(191,-58,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 6 3 7 3 6 7 104 0 7 2 3 7 2 102 0 3 0 2 0 3 2 91 0 0 0 1 0 1 87 0 5 5 4 83 0 4 4 20 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 6 3 7 3 6 7 104 0 7 2 3 7 2 102 0 4 0 5 3 4 5 91 0 3 0 2 0 3 2 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
16 27 22 123 35 41 70 52 8 23
CALL[ ]	/* CallFunction */";
};
width = 334;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(226,-58,ls),
(275,-58,o),
(302,-52,o),
(302,-43,cs),
(302,-31,o),
(255,-27,o),
(238,-27,cs),
(179,-27,o),
(167,-26,o),
(167,27,cs),
(167,201,ls),
(166,233,o),
(161,262,o),
(153,287,cs),
(139,331,o),
(108,374,o),
(55,374,cs),
(109,374,o),
(140,427,o),
(153,476,cs),
(161,506,o),
(166,540,o),
(167,579,cs),
(167,753,ls),
(167,768,o),
(172,803,o),
(220,808,cs),
(286,814,ls),
(293,815,o),
(298,817,o),
(301,820,cs),
(303,823,o),
(304,825,o),
(304,826,cs),
(304,837,o),
(296,838,o),
(285,838,cs),
(268,838,o),
(241,835,o),
(204,835,cs),
(126,835,o),
(124,763,o),
(124,747,cs),
(124,708,o),
(124,675,o),
(125,648,cs),
(125,620,o),
(125,597,o),
(125,580,cs),
(125,432,o),
(81,400,o),
(44,400,cs),
(19,400,o),
(2,393,o),
(2,374,cs),
(2,357,o),
(14,348,o),
(38,348,cs),
(63,348,o),
(127,329,o),
(127,200,cs),
(127,32,ls),
(127,-45,o),
(151,-58,o),
(195,-58,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 5 3 6 3 5 6 104 0 6 2 3 6 2 102 0 3 0 2 0 3 2 91 0 0 0 1 0 1 88 0 4 4 20 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 4 3 4 106 0 5 3 6 3 5 6 104 0 6 2 3 6 2 102 0 3 0 2 0 3 2 91 0 0 1 1 0 79 0 0 0 1 84 0 1 0 1 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
71 70 70 69 123 35 41 70 52 7 20
CALL[ ]	/* CallFunction */";
};
width = 313;
}
);
note = braceleft;
unicode = 123;
},
{
glyphname = braceright;
kernLeft = braceright;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(65,-58,o),
(101,-55,o),
(152,-55,cs),
(221,-55,o),
(232,3,o),
(232,33,cs),
(232,72,o),
(232,105,o),
(232,133,cs),
(231,160,o),
(231,183,o),
(231,200,cs),
(231,348,o),
(275,380,o),
(312,380,cs),
(337,380,o),
(354,387,o),
(354,406,cs),
(354,423,o),
(342,432,o),
(318,432,cs),
(293,432,o),
(229,451,o),
(229,580,cs),
(229,748,ls),
(229,825,o),
(205,838,o),
(161,838,cs),
(104,838,ls),
(42,838,o),
(11,829,o),
(11,811,cs),
(11,779,o),
(64,775,o),
(92,775,cs),
(133,775,o),
(138,766,o),
(138,721,cs),
(138,579,l),
(138,579,l),
(139,546,o),
(144,517,o),
(152,492,cs),
(165,450,o),
(193,406,o),
(250,406,cs),
(193,406,o),
(165,352,o),
(152,303,cs),
(144,273,o),
(139,239,o),
(138,201,cs),
(138,31,ls),
(138,15,o),
(128,7,o),
(85,2,cs),
(44,-3,ls),
(35,-4,o),
(9,-9,o),
(9,-30,cs),
(9,-56,o),
(32,-58,o),
(45,-58,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 6 2 5 2 6 5 104 0 5 3 2 5 3 102 0 4 3 4 107 0 0 0 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 15 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 6 2 5 2 6 5 104 0 5 3 2 5 3 102 0 4 3 4 107 0 2 0 3 4 2 3 91 0 0 0 1 83 0 1 1 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 6 2 5 2 6 5 104 0 5 3 2 5 3 102 0 4 3 4 107 0 1 0 0 2 1 0 91 0 2 6 3 2 79 0 2 2 3 83 0 3 2 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
68 67 67 66 123 35 41 53 34 7 20
CALL[ ]	/* CallFunction */";
};
width = 349;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(56,-58,o),
(88,-55,o),
(134,-55,cs),
(212,-55,o),
(214,17,o),
(214,33,cs),
(214,72,o),
(214,105,o),
(214,133,cs),
(213,160,o),
(213,183,o),
(213,200,cs),
(213,348,o),
(257,380,o),
(294,380,cs),
(319,380,o),
(336,387,o),
(336,406,cs),
(336,423,o),
(324,432,o),
(300,432,cs),
(275,432,o),
(211,451,o),
(211,580,cs),
(211,748,ls),
(211,825,o),
(187,838,o),
(143,838,cs),
(97,838,ls),
(78,838,o),
(11,838,o),
(11,816,cs),
(11,788,o),
(69,787,o),
(85,787,cs),
(134,787,o),
(141,786,o),
(141,733,cs),
(141,579,l),
(141,579,l),
(142,547,o),
(147,518,o),
(155,493,cs),
(169,449,o),
(200,406,o),
(253,406,cs),
(199,406,o),
(168,353,o),
(155,304,cs),
(147,274,o),
(142,240,o),
(141,201,cs),
(141,27,ls),
(141,20,o),
(131,-6,o),
(88,-8,cs),
(37,-14,ls),
(22,-17,o),
(9,-21,o),
(9,-36,cs),
(9,-56,o),
(27,-58,o),
(38,-58,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 7 2 6 2 7 6 104 0 6 3 2 6 3 102 0 5 0 4 5 4 87 0 0 0 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 15 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 7 2 6 2 7 6 104 0 6 3 2 6 3 102 0 2 0 3 5 2 3 91 0 5 0 4 5 4 87 0 0 0 1 83 0 1 1 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 7 2 6 2 7 6 104 0 6 3 2 6 3 102 0 1 0 0 2 1 0 91 0 2 0 3 5 2 3 91 0 5 4 4 5 79 0 5 5 4 83 0 4 5 4 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
16 27 22 123 35 41 70 53 8 34
CALL[ ]	/* CallFunction */";
};
width = 334;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(45,-58,o),
(72,-55,o),
(109,-55,cs),
(187,-55,o),
(189,17,o),
(189,33,cs),
(189,72,o),
(189,105,o),
(189,133,cs),
(188,160,o),
(188,183,o),
(188,200,cs),
(188,348,o),
(232,380,o),
(269,380,cs),
(294,380,o),
(311,387,o),
(311,406,cs),
(311,423,o),
(299,432,o),
(275,432,cs),
(250,432,o),
(186,451,o),
(186,580,cs),
(186,748,ls),
(186,825,o),
(162,838,o),
(118,838,cs),
(87,838,ls),
(38,838,o),
(11,832,o),
(11,823,cs),
(11,811,o),
(58,807,o),
(75,807,cs),
(134,807,o),
(146,806,o),
(146,753,cs),
(146,579,ls),
(147,547,o),
(152,518,o),
(160,493,cs),
(174,449,o),
(205,406,o),
(258,406,cs),
(204,406,o),
(173,353,o),
(160,304,cs),
(152,274,o),
(147,240,o),
(146,201,cs),
(146,27,ls),
(146,12,o),
(141,-23,o),
(93,-28,cs),
(27,-34,ls),
(20,-35,o),
(15,-36,o),
(13,-39,cs),
(10,-42,o),
(9,-45,o),
(9,-46,cs),
(9,-57,o),
(17,-58,o),
(28,-58,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 6 2 5 2 6 5 104 0 5 3 2 5 3 102 0 4 3 4 107 0 0 0 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 15 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 6 2 5 2 6 5 104 0 5 3 2 5 3 102 0 4 3 4 107 0 2 0 3 4 2 3 91 0 0 0 1 83 0 1 1 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 6 2 5 2 6 5 104 0 5 3 2 5 3 102 0 4 3 4 107 0 1 0 0 2 1 0 91 0 2 6 3 2 79 0 2 2 3 83 0 3 2 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
72 71 71 70 123 35 41 70 53 7 31
CALL[ ]	/* CallFunction */";
};
width = 313;
}
);
note = braceright;
unicode = 125;
},
{
glyphname = bracketleft;
kernRight = bracketleft;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(230,-58,ls),
(274,-58,o),
(323,-54,o),
(323,-27,cs),
(323,-15,o),
(317,-7,o),
(304,-2,cs),
(291,3,o),
(270,5,o),
(242,5,cs),
(221,5,o),
(204,6,o),
(193,7,cs),
(182,8,o),
(176,13,o),
(176,22,cs),
(176,744,ls),
(176,753,o),
(180,773,o),
(197,774,cs),
(290,782,ls),
(310,785,o),
(325,787,o),
(325,810,cs),
(325,833,o),
(304,838,o),
(289,838,cs),
(290,838,o),
(187,839,o),
(103,835,cs),
(92,834,o),
(82,816,o),
(82,800,cs),
(84,708,o),
(84,640,o),
(86,583,cs),
(87,527,o),
(86,452,o),
(86,366,cs),
(86,279,o),
(85,149,o),
(85,-23,cs),
(85,-37,o),
(87,-46,o),
(90,-51,cs),
(93,-56,o),
(98,-58,o),
(104,-58,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
0 1 0 2 1 2 88 0 0 0 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 0 106 0 1 2 2 1 79 0 1 1 2 84 0 2 1 2 72
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
69 44 96 3 18
CALL[ ]	/* CallFunction */";
};
width = 334;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(222,-58,ls),
(251,-58,o),
(308,-58,o),
(308,-33,cs),
(308,-13,o),
(264,-7,o),
(234,-7,cs),
(209,-7,o),
(191,-6,o),
(178,-5,cs),
(165,-4,o),
(158,1,o),
(158,10,cs),
(158,756,ls),
(158,765,o),
(160,785,o),
(179,786,cs),
(282,794,ls),
(297,795,o),
(310,797,o),
(310,816,cs),
(310,836,o),
(292,838,o),
(281,838,cs),
(284,838,o),
(185,839,o),
(106,835,cs),
(95,834,o),
(85,816,o),
(85,800,cs),
(87,708,o),
(87,640,o),
(89,583,cs),
(90,527,o),
(89,452,o),
(89,366,cs),
(89,355,o),
(89,340,o),
(89,320,cs),
(89,299,o),
(89,276,o),
(89,251,cs),
(89,226,o),
(89,199,o),
(89,172,cs),
(89,144,o),
(89,117,o),
(89,92,cs),
(89,67,o),
(89,44,o),
(89,24,cs),
(88,3,o),
(88,-12,o),
(88,-23,cs),
(88,-37,o),
(90,-46,o),
(93,-51,cs),
(96,-56,o),
(101,-58,o),
(107,-58,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
0 1 0 2 1 2 88 0 0 0 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 0 106 0 1 2 2 1 79 0 1 1 2 84 0 2 1 2 72
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
71 44 96 3 18
CALL[ ]	/* CallFunction */";
};
width = 319;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(211,-58,ls),
(260,-58,o),
(287,-52,o),
(287,-43,cs),
(287,-31,o),
(240,-27,o),
(223,-27,cs),
(193,-27,o),
(170,-26,o),
(155,-25,cs),
(140,-24,o),
(132,-19,o),
(132,-10,cs),
(132,776,ls),
(132,785,o),
(134,805,o),
(153,806,cs),
(271,814,ls),
(278,815,o),
(283,817,o),
(286,820,cs),
(288,823,o),
(289,825,o),
(289,826,cs),
(289,837,o),
(281,838,o),
(270,838,cs),
(271,838,o),
(181,838,o),
(110,835,cs),
(98,834,o),
(89,816,o),
(89,800,cs),
(91,708,o),
(91,640,o),
(93,583,cs),
(94,527,o),
(93,452,o),
(93,366,cs),
(93,355,o),
(93,340,o),
(93,320,cs),
(93,299,o),
(93,276,o),
(93,251,cs),
(93,226,o),
(93,199,o),
(93,172,cs),
(93,144,o),
(93,117,o),
(93,92,cs),
(93,67,o),
(93,44,o),
(93,24,cs),
(92,3,o),
(92,-12,o),
(92,-23,cs),
(92,-37,o),
(94,-46,o),
(97,-51,cs),
(100,-56,o),
(105,-58,o),
(111,-58,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 2 0 3 2 3 87 0 1 1 0 83 0 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 0 0 1 2 0 1 89 0 2 3 3 2 79 0 2 2 3 83 0 3 2 3 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
70 54 21 96 4 19
CALL[ ]	/* CallFunction */";
};
width = 298;
}
);
note = bracketleft;
unicode = 91;
},
{
glyphname = bracketright;
kernLeft = bracketright;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(230,-58,ls),
(236,-58,o),
(241,-56,o),
(244,-51,cs),
(247,-46,o),
(249,-37,o),
(249,-23,cs),
(249,48,o),
(248,137,o),
(248,366,cs),
(248,401,o),
(248,431,o),
(248,456,cs),
(248,481,o),
(248,504,o),
(248,525,cs),
(248,579,o),
(250,651,o),
(251,710,cs),
(251,735,o),
(251,765,o),
(252,800,cs),
(252,816,o),
(242,834,o),
(231,835,cs),
(183,837,o),
(120,838,o),
(45,838,cs),
(30,838,o),
(9,833,o),
(9,810,cs),
(9,787,o),
(24,785,o),
(44,782,cs),
(137,774,ls),
(154,773,o),
(158,753,o),
(158,744,cs),
(158,22,ls),
(158,13,o),
(152,8,o),
(141,7,cs),
(130,6,o),
(113,5,o),
(92,5,cs),
(64,5,o),
(44,3,o),
(31,-2,cs),
(18,-7,o),
(11,-15,o),
(11,-27,cs),
(11,-54,o),
(60,-58,o),
(104,-58,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
0 1 0 0 1 0 88 3 1 2 2 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
3 1 2 1 2 106 0 1 0 0 1 79 0 1 1 0 84 0 0 1 0 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 45 0 40 28 26 21 17 4 15
CALL[ ]	/* CallFunction */";
};
width = 334;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(212,-58,ls),
(218,-58,o),
(223,-56,o),
(226,-51,cs),
(229,-46,o),
(231,-37,o),
(231,-23,cs),
(231,-12,o),
(231,3,o),
(231,24,cs),
(230,44,o),
(230,67,o),
(230,92,cs),
(230,117,o),
(230,144,o),
(230,172,cs),
(230,199,o),
(230,226,o),
(230,251,cs),
(230,276,o),
(230,299,o),
(230,320,cs),
(230,340,o),
(230,355,o),
(230,366,cs),
(230,401,o),
(230,431,o),
(230,456,cs),
(230,481,o),
(230,504,o),
(230,525,cs),
(230,579,o),
(232,651,o),
(233,710,cs),
(233,735,o),
(233,765,o),
(234,800,cs),
(234,816,o),
(224,834,o),
(213,835,cs),
(167,837,o),
(108,838,o),
(38,838,cs),
(27,838,o),
(9,836,o),
(9,816,cs),
(9,797,o),
(22,795,o),
(37,794,cs),
(140,786,ls),
(159,785,o),
(161,765,o),
(161,756,cs),
(161,10,ls),
(161,1,o),
(155,-4,o),
(142,-5,cs),
(129,-6,o),
(110,-7,o),
(85,-7,cs),
(55,-7,o),
(11,-13,o),
(11,-33,cs),
(11,-58,o),
(68,-58,o),
(97,-58,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
0 1 0 0 1 0 88 3 1 2 2 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
3 1 2 1 2 106 0 1 0 0 1 79 0 1 1 0 84 0 0 1 0 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 49 0 44 32 30 23 19 4 15
CALL[ ]	/* CallFunction */";
};
width = 319;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(187,-58,ls),
(193,-58,o),
(198,-56,o),
(201,-51,cs),
(204,-46,o),
(206,-37,o),
(206,-23,cs),
(206,-12,o),
(206,3,o),
(206,24,cs),
(205,44,o),
(205,67,o),
(205,92,cs),
(205,117,o),
(205,144,o),
(205,172,cs),
(205,199,o),
(205,226,o),
(205,251,cs),
(205,276,o),
(205,299,o),
(205,320,cs),
(205,340,o),
(205,355,o),
(205,366,cs),
(205,401,o),
(205,431,o),
(205,456,cs),
(205,481,o),
(205,504,o),
(205,525,cs),
(205,579,o),
(207,651,o),
(208,710,cs),
(208,735,o),
(208,765,o),
(209,800,cs),
(209,816,o),
(200,834,o),
(188,835,cs),
(146,837,o),
(92,838,o),
(28,838,cs),
(17,838,o),
(9,837,o),
(9,826,cs),
(9,825,o),
(10,823,o),
(13,820,cs),
(15,817,o),
(20,815,o),
(27,814,cs),
(145,806,ls),
(164,805,o),
(166,785,o),
(166,776,cs),
(166,-10,ls),
(166,-19,o),
(158,-24,o),
(143,-25,cs),
(128,-26,o),
(105,-27,o),
(75,-27,cs),
(77,-27,o),
(11,-28,o),
(11,-43,cs),
(11,-52,o),
(38,-58,o),
(87,-58,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 1 0 0 1 0 87 0 2 2 3 83 4 1 3 3 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
4 1 3 0 2 1 3 2 89 0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 49 0 44 39 38 32 29 23 19 5 15
CALL[ ]	/* CallFunction */";
};
width = 298;
}
);
note = bracketright;
unicode = 93;
},
{
glyphname = quotesinglbase;
kernLeft = comma;
kernRight = comma;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(126,-94,o),
(153,28,o),
(153,58,cs),
(153,91,o),
(132,113,o),
(101,113,cs),
(74,113,o),
(54,95,o),
(54,71,cs),
(54,40,o),
(86,33,o),
(86,14,cs),
(86,-2,o),
(61,-69,o),
(61,-76,cs),
(61,-85,o),
(76,-94,o),
(83,-94,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 38 34 2 17
CALL[ ]	/* CallFunction */";
};
width = 188;
},
{
background = {
shapes = (
{
closed = 1;
nodes = (
(101,-86,o),
(115,-36,o),
(120,-6,q),
(112,-23,o),
(94,-48,o),
(83,-48,qs),
(78,-48,o),
(67,-39,o),
(67,-33,qs),
(67,-29,o),
(73,-10,o),
(80,12,o),
(86,33,o),
(86,39,qs),
(86,44,o),
(78,52,o),
(68,62,o),
(60,74,o),
(60,83,qs),
(60,97,o),
(80,117,o),
(96,117,qs),
(104,117,o),
(112,114,q),
(102,122,o),
(88,122,qs),
(74,122,o),
(59,103,o),
(52,79,o),
(51,55,o),
(51,50,qs),
(51,43,o),
(53,-1,o),
(61,-49,o),
(76,-86,o),
(89,-86,qs)
);
},
{
closed = 1;
nodes = (
(128,16,o),
(138,62,o),
(138,73,qs),
(138,104,o),
(112,114,q),
(123,105,o),
(126,76,o),
(126,65,qs),
(126,62,o),
(123,20,o),
(120,-6,q)
);
}
);
};
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(111,-65,o),
(138,31,o),
(138,68,cs),
(138,98,o),
(119,117,o),
(92,117,cs),
(68,117,o),
(52,100,o),
(52,79,cs),
(52,54,o),
(81,44,o),
(81,31,cs),
(81,13,o),
(60,-37,o),
(60,-49,cs),
(60,-58,o),
(69,-65,o),
(77,-65,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
46 40 24 3 4 2 1 1 66 4 1 0 0 1 2 0 1 91 0 2 3 3 2 79 0 2 2 3 83 0 3 2 3 71 2 1 28 26 22 20 6 4 1 36 2 36 5 26
CALL[ ]	/* CallFunction */";
};
width = 186;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(107,-48,o),
(131,39,o),
(131,73,cs),
(131,100,o),
(114,117,o),
(89,117,cs),
(68,117,o),
(53,102,o),
(53,83,cs),
(53,60,o),
(79,51,o),
(79,39,cs),
(79,23,o),
(60,-22,o),
(60,-33,cs),
(60,-41,o),
(69,-48,o),
(76,-48,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 38 35 2 28
CALL[ ]	/* CallFunction */";
};
width = 183;
}
);
note = quotesinglbase;
unicode = 8218;
},
{
glyphname = quotedblbase;
kernLeft = comma;
kernRight = comma;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(252,-94,o),
(279,28,o),
(279,58,cs),
(279,91,o),
(258,113,o),
(227,113,cs),
(200,113,o),
(180,95,o),
(180,71,cs),
(180,40,o),
(212,33,o),
(212,14,cs),
(212,-2,o),
(187,-69,o),
(187,-76,cs),
(187,-85,o),
(202,-94,o),
(209,-94,cs)
);
},
{
closed = 1;
nodes = (
(126,-94,o),
(153,28,o),
(153,58,cs),
(153,91,o),
(132,113,o),
(101,113,cs),
(74,113,o),
(54,95,o),
(54,71,cs),
(54,40,o),
(86,33,o),
(86,14,cs),
(86,-2,o),
(61,-69,o),
(61,-76,cs),
(61,-85,o),
(76,-94,o),
(83,-94,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 3 1 1 0 1 71 38 46 38 34 4 19
CALL[ ]	/* CallFunction */";
};
width = 314;
},
{
background = {
shapes = (
{
closed = 1;
nodes = (
(59,103,o),
(52,79,o),
(51,55,o),
(51,50,qs),
(51,43,o),
(53,-1,o),
(61,-49,o),
(76,-86,o),
(89,-86,qs),
(101,-86,o),
(115,-36,o),
(120,-6,q),
(112,-23,o),
(94,-48,o),
(83,-48,qs),
(78,-48,o),
(67,-39,o),
(67,-33,qs),
(67,-29,o),
(73,-10,o),
(80,12,o),
(86,33,o),
(86,39,qs),
(86,44,o),
(78,52,o),
(68,62,o),
(60,74,o),
(60,83,qs),
(60,97,o),
(80,117,o),
(96,117,qs),
(104,117,o),
(112,114,q),
(102,122,o),
(88,122,qs),
(74,122,o)
);
},
{
closed = 1;
nodes = (
(112,114,q),
(123,105,o),
(126,76,o),
(126,65,qs),
(126,62,o),
(123,20,o),
(120,-6,q),
(128,16,o),
(138,62,o),
(138,73,qs),
(138,104,o)
);
},
{
closed = 1;
nodes = (
(185,103,o),
(178,79,o),
(177,55,o),
(177,50,qs),
(177,43,o),
(179,-1,o),
(187,-49,o),
(202,-86,o),
(215,-86,qs),
(227,-86,o),
(241,-36,o),
(246,-6,q),
(238,-23,o),
(220,-48,o),
(209,-48,qs),
(204,-48,o),
(193,-39,o),
(193,-33,qs),
(193,-29,o),
(199,-10,o),
(206,12,o),
(212,33,o),
(212,39,qs),
(212,44,o),
(204,52,o),
(194,62,o),
(186,74,o),
(186,83,qs),
(186,97,o),
(206,117,o),
(222,117,qs),
(230,117,o),
(238,114,q),
(228,122,o),
(214,122,qs),
(200,122,o)
);
},
{
closed = 1;
nodes = (
(238,114,q),
(249,105,o),
(252,76,o),
(252,65,qs),
(252,62,o),
(249,20,o),
(246,-6,q),
(254,16,o),
(264,62,o),
(264,73,qs),
(264,104,o)
);
}
);
};
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(231,-70,o),
(258,26,o),
(258,63,cs),
(258,93,o),
(239,112,o),
(212,112,cs),
(188,112,o),
(172,95,o),
(172,74,cs),
(172,49,o),
(201,39,o),
(201,26,cs),
(201,8,o),
(180,-42,o),
(180,-54,cs),
(180,-63,o),
(189,-70,o),
(197,-70,cs)
);
},
{
closed = 1;
nodes = (
(111,-70,o),
(138,26,o),
(138,63,cs),
(138,93,o),
(119,112,o),
(92,112,cs),
(68,112,o),
(52,95,o),
(52,74,cs),
(52,49,o),
(81,39,o),
(81,26,cs),
(81,8,o),
(60,-42,o),
(60,-54,cs),
(60,-63,o),
(69,-70,o),
(77,-70,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
93 87 71 50 46 40 24 3 8 2 1 1 66 9 4 8 3 0 5 1 1 2 0 1 91 6 1 2 3 3 2 79 6 1 2 2 3 83 7 1 3 2 3 71 49 48 2 1 75 73 69 67 53 51 48 83 49 83 28 26 22 20 6 4 1 36 2 36 10 26
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(233,-48,o),
(257,39,o),
(257,73,cs),
(257,100,o),
(240,117,o),
(215,117,cs),
(194,117,o),
(179,102,o),
(179,83,cs),
(179,60,o),
(205,51,o),
(205,39,cs),
(205,23,o),
(186,-22,o),
(186,-33,cs),
(186,-41,o),
(195,-48,o),
(202,-48,cs)
);
},
{
closed = 1;
nodes = (
(107,-48,o),
(131,39,o),
(131,73,cs),
(131,100,o),
(114,117,o),
(89,117,cs),
(68,117,o),
(53,102,o),
(53,83,cs),
(53,60,o),
(79,51,o),
(79,39,cs),
(79,23,o),
(60,-22,o),
(60,-33,cs),
(60,-41,o),
(69,-48,o),
(76,-48,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 3 1 1 0 1 71 38 46 38 35 4 30
CALL[ ]	/* CallFunction */";
};
width = 309;
}
);
note = quotedblbase;
unicode = 8222;
},
{
glyphname = quotedblleft;
kernLeft = quotedblleft;
kernRight = quotedblleft;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(226,718,o),
(246,736,o),
(246,760,cs),
(246,791,o),
(214,798,o),
(214,817,cs),
(214,831,o),
(239,902,o),
(239,907,cs),
(239,916,o),
(224,925,o),
(217,925,cs),
(171,925,o),
(147,803,o),
(147,773,cs),
(147,740,o),
(168,718,o),
(199,718,cs)
);
},
{
closed = 1;
nodes = (
(100,718,o),
(120,736,o),
(120,760,cs),
(120,791,o),
(88,798,o),
(88,817,cs),
(88,831,o),
(113,902,o),
(113,907,cs),
(113,916,o),
(98,925,o),
(91,925,cs),
(45,925,o),
(21,803,o),
(21,773,cs),
(21,740,o),
(42,718,o),
(73,718,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
3 1 1 0 0 1 79 3 1 1 1 0 83 2 1 0 1 0 71 38 46 38 34 4 19
CALL[ ]	/* CallFunction */";
};
width = 285;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(235,720,o),
(251,737,o),
(251,758,cs),
(251,783,o),
(222,793,o),
(222,806,cs),
(222,824,o),
(243,874,o),
(243,886,cs),
(243,895,o),
(234,902,o),
(226,902,cs),
(192,902,o),
(165,806,o),
(165,769,cs),
(165,739,o),
(184,720,o),
(211,720,cs)
);
},
{
closed = 1;
nodes = (
(115,720,o),
(131,737,o),
(131,758,cs),
(131,783,o),
(102,793,o),
(102,806,cs),
(102,824,o),
(123,874,o),
(123,886,cs),
(123,895,o),
(114,902,o),
(106,902,cs),
(72,902,o),
(45,806,o),
(45,769,cs),
(45,739,o),
(64,720,o),
(91,720,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
93 87 71 50 46 40 24 3 8 1 2 1 66 7 1 3 6 1 2 1 3 2 91 5 1 1 0 0 1 79 5 1 1 1 0 83 9 4 8 3 0 1 0 71 49 48 2 1 75 73 69 67 53 51 48 83 49 83 28 26 22 20 6 4 1 36 2 36 10 26
CALL[ ]	/* CallFunction */";
};
width = 282;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(227,715,o),
(242,730,o),
(242,749,cs),
(242,772,o),
(216,781,o),
(216,793,cs),
(216,809,o),
(235,854,o),
(235,865,cs),
(235,873,o),
(226,880,o),
(219,880,cs),
(188,880,o),
(164,793,o),
(164,759,cs),
(164,732,o),
(181,715,o),
(206,715,cs)
);
},
{
closed = 1;
nodes = (
(101,715,o),
(116,730,o),
(116,749,cs),
(116,772,o),
(90,781,o),
(90,793,cs),
(90,809,o),
(109,854,o),
(109,865,cs),
(109,873,o),
(100,880,o),
(93,880,cs),
(62,880,o),
(38,793,o),
(38,759,cs),
(38,732,o),
(55,715,o),
(80,715,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
3 1 1 0 0 1 79 3 1 1 1 0 83 2 1 0 1 0 71 38 46 38 35 4 30
CALL[ ]	/* CallFunction */";
};
width = 278;
}
);
note = quotedblleft;
unicode = 8220;
},
{
glyphname = quotedblright;
kernLeft = quoteright;
kernRight = quoteright;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(241,640,o),
(268,762,o),
(268,792,cs),
(268,825,o),
(247,847,o),
(216,847,cs),
(189,847,o),
(169,829,o),
(169,805,cs),
(169,774,o),
(201,767,o),
(201,748,cs),
(201,732,o),
(176,665,o),
(176,658,cs),
(176,649,o),
(191,640,o),
(198,640,cs)
);
},
{
closed = 1;
nodes = (
(115,640,o),
(142,762,o),
(142,792,cs),
(142,825,o),
(121,847,o),
(90,847,cs),
(63,847,o),
(43,829,o),
(43,805,cs),
(43,774,o),
(75,767,o),
(75,748,cs),
(75,732,o),
(50,665,o),
(50,658,cs),
(50,649,o),
(65,640,o),
(72,640,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
3 1 1 1 0 83 2 1 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 3 1 1 0 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
38 46 38 34 4 19
CALL[ ]	/* CallFunction */";
};
width = 287;
},
{
background = {
shapes = (
{
closed = 1;
nodes = (
(47,836,o),
(40,812,o),
(39,788,o),
(39,783,qs),
(39,776,o),
(41,732,o),
(49,684,o),
(64,647,o),
(77,647,qs),
(89,647,o),
(103,697,o),
(108,727,q),
(100,710,o),
(82,685,o),
(71,685,qs),
(66,685,o),
(55,694,o),
(55,700,qs),
(55,704,o),
(61,723,o),
(68,745,o),
(74,766,o),
(74,772,qs),
(74,777,o),
(66,785,o),
(56,795,o),
(48,807,o),
(48,816,qs),
(48,830,o),
(68,850,o),
(84,850,qs),
(92,850,o),
(100,847,q),
(90,855,o),
(76,855,qs),
(62,855,o)
);
},
{
closed = 1;
nodes = (
(100,847,q),
(111,838,o),
(114,809,o),
(114,798,qs),
(114,795,o),
(111,753,o),
(108,727,q),
(116,749,o),
(126,795,o),
(126,806,qs),
(126,837,o)
);
},
{
closed = 1;
nodes = (
(173,836,o),
(166,812,o),
(165,788,o),
(165,783,qs),
(165,776,o),
(167,732,o),
(175,684,o),
(190,647,o),
(203,647,qs),
(215,647,o),
(229,697,o),
(234,727,q),
(226,710,o),
(208,685,o),
(197,685,qs),
(192,685,o),
(181,694,o),
(181,700,qs),
(181,704,o),
(187,723,o),
(194,745,o),
(200,766,o),
(200,772,qs),
(200,777,o),
(192,785,o),
(182,795,o),
(174,807,o),
(174,816,qs),
(174,830,o),
(194,850,o),
(210,850,qs),
(218,850,o),
(226,847,q),
(216,855,o),
(202,855,qs),
(188,855,o)
);
},
{
closed = 1;
nodes = (
(226,847,q),
(237,838,o),
(240,809,o),
(240,798,qs),
(240,795,o),
(237,753,o),
(234,727,q),
(242,749,o),
(252,795,o),
(252,806,qs),
(252,837,o)
);
}
);
};
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(224,666,o),
(251,762,o),
(251,799,cs),
(251,829,o),
(232,848,o),
(205,848,cs),
(181,848,o),
(165,831,o),
(165,810,cs),
(165,785,o),
(194,775,o),
(194,762,cs),
(194,744,o),
(173,694,o),
(173,682,cs),
(173,673,o),
(182,666,o),
(190,666,cs)
);
},
{
closed = 1;
nodes = (
(104,666,o),
(131,762,o),
(131,799,cs),
(131,829,o),
(112,848,o),
(85,848,cs),
(61,848,o),
(45,831,o),
(45,810,cs),
(45,785,o),
(74,775,o),
(74,762,cs),
(74,744,o),
(53,694,o),
(53,682,cs),
(53,673,o),
(62,666,o),
(70,666,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
93 87 71 50 46 40 24 3 8 2 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
6 1 2 7 1 3 2 3 87 5 1 1 1 0 83 9 4 8 3 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
9 4 8 3 0 5 1 1 2 0 1 91 6 1 2 3 3 2 79 6 1 2 2 3 83 7 1 3 2 3 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
49 48 2 1 75 73 69 67 53 51 48 83 49 83 28 26 22 20 6 4 1 36 2 36 10 26
CALL[ ]	/* CallFunction */";
};
width = 283;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(220,685,o),
(244,772,o),
(244,806,cs),
(244,833,o),
(227,850,o),
(202,850,cs),
(181,850,o),
(166,835,o),
(166,816,cs),
(166,793,o),
(192,784,o),
(192,772,cs),
(192,756,o),
(173,711,o),
(173,700,cs),
(173,692,o),
(182,685,o),
(189,685,cs)
);
},
{
closed = 1;
nodes = (
(94,685,o),
(118,772,o),
(118,806,cs),
(118,833,o),
(101,850,o),
(76,850,cs),
(55,850,o),
(40,835,o),
(40,816,cs),
(40,793,o),
(66,784,o),
(66,772,cs),
(66,756,o),
(47,711,o),
(47,700,cs),
(47,692,o),
(56,685,o),
(63,685,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
3 1 1 1 0 83 2 1 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 3 1 1 0 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
38 46 38 35 4 30
CALL[ ]	/* CallFunction */";
};
width = 278;
}
);
note = quotedblright;
unicode = 8221;
},
{
glyphname = quoteleft;
kernLeft = quotedblleft;
kernRight = quotedblleft;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(100,718,o),
(120,736,o),
(120,760,cs),
(120,791,o),
(88,798,o),
(88,817,cs),
(88,831,o),
(113,902,o),
(113,907,cs),
(113,916,o),
(98,925,o),
(91,925,cs),
(45,925,o),
(21,803,o),
(21,773,cs),
(21,740,o),
(42,718,o),
(73,718,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71 38 34 2 17
CALL[ ]	/* CallFunction */";
};
width = 159;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(104,720,o),
(120,737,o),
(120,758,cs),
(120,783,o),
(91,793,o),
(91,806,cs),
(91,824,o),
(112,874,o),
(112,886,cs),
(112,895,o),
(103,902,o),
(95,902,cs),
(61,902,o),
(34,806,o),
(34,769,cs),
(34,739,o),
(53,720,o),
(80,720,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
46 40 24 3 4 1 2 1 66 0 3 0 2 1 3 2 91 0 1 0 0 1 79 0 1 1 0 83 4 1 0 1 0 71 2 1 28 26 22 20 6 4 1 36 2 36 5 26
CALL[ ]	/* CallFunction */";
};
width = 156;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(101,715,o),
(116,730,o),
(116,749,cs),
(116,772,o),
(90,781,o),
(90,793,cs),
(90,809,o),
(109,854,o),
(109,865,cs),
(109,873,o),
(100,880,o),
(93,880,cs),
(62,880,o),
(38,793,o),
(38,759,cs),
(38,732,o),
(55,715,o),
(80,715,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71 38 35 2 28
CALL[ ]	/* CallFunction */";
};
width = 152;
}
);
note = quoteleft;
unicode = 8216;
},
{
glyphname = quoteright;
kernLeft = quoteright;
kernRight = quoteright;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(115,640,o),
(142,762,o),
(142,792,cs),
(142,825,o),
(121,847,o),
(90,847,cs),
(63,847,o),
(43,829,o),
(43,805,cs),
(43,774,o),
(75,767,o),
(75,748,cs),
(75,732,o),
(50,665,o),
(50,658,cs),
(50,649,o),
(65,640,o),
(72,640,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 0 83 0 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
38 34 2 17
CALL[ ]	/* CallFunction */";
};
width = 161;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(97,666,o),
(124,762,o),
(124,799,cs),
(124,829,o),
(105,848,o),
(78,848,cs),
(54,848,o),
(38,831,o),
(38,810,cs),
(38,785,o),
(67,775,o),
(67,762,cs),
(67,744,o),
(46,694,o),
(46,682,cs),
(46,673,o),
(55,666,o),
(63,666,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
45 39 23 2 4 2 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 2 0 3 2 3 87 0 1 1 0 83 4 1 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
4 1 0 0 1 2 0 1 91 0 2 3 3 2 79 0 2 2 3 83 0 3 2 3 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
1 0 27 25 21 19 5 3 0 35 1 35 5 15
CALL[ ]	/* CallFunction */";
};
width = 157;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(94,685,o),
(118,772,o),
(118,806,cs),
(118,833,o),
(101,850,o),
(76,850,cs),
(55,850,o),
(40,835,o),
(40,816,cs),
(40,793,o),
(66,784,o),
(66,772,cs),
(66,756,o),
(47,711,o),
(47,700,cs),
(47,692,o),
(56,685,o),
(63,685,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 0 83 0 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
38 34 2 17
CALL[ ]	/* CallFunction */";
};
width = 152;
}
);
note = quoteright;
unicode = 8217;
},
{
glyphname = guillemetleft;
kernLeft = guillemotleft;
kernRight = guillemotleft;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(339,219,o),
(348,221,o),
(353,226,cs),
(358,231,o),
(360,236,o),
(360,241,cs),
(360,261,o),
(327,292,o),
(275,378,c),
(303,424,o),
(360,497,o),
(360,516,cs),
(360,521,o),
(358,526,o),
(353,531,cs),
(348,536,o),
(339,538,o),
(324,538,cs),
(312,538,o),
(277,510,o),
(242,469,cs),
(209,432,o),
(181,394,o),
(181,378,cs),
(181,365,o),
(205,331,o),
(242,289,cs),
(278,247,o),
(311,219,o),
(324,219,cs)
);
},
{
closed = 1;
nodes = (
(196,219,o),
(205,221,o),
(210,226,cs),
(215,231,o),
(217,236,o),
(217,241,cs),
(217,261,o),
(184,292,o),
(132,378,c),
(160,424,o),
(217,497,o),
(217,516,cs),
(217,521,o),
(215,526,o),
(210,531,cs),
(205,536,o),
(196,538,o),
(181,538,cs),
(169,538,o),
(134,510,o),
(99,469,cs),
(66,432,o),
(38,394,o),
(38,378,cs),
(38,365,o),
(62,331,o),
(99,289,cs),
(135,247,o),
(168,219,o),
(181,219,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
35 5 2 0 1 1 66 3 1 1 0 0 1 79 3 1 1 1 0 83 2 1 0 1 0 71 44 46 44 44 4 19
CALL[ ]	/* CallFunction */";
};
width = 432;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(327,224,o),
(334,226,o),
(337,230,cs),
(340,234,o),
(342,238,o),
(342,241,cs),
(342,261,o),
(309,292,o),
(257,378,c),
(285,424,o),
(342,497,o),
(342,516,cs),
(342,519,o),
(340,523,o),
(337,527,cs),
(334,531,o),
(327,533,o),
(316,533,cs),
(289,533,o),
(184,407,o),
(184,378,cs),
(184,352,o),
(290,224,o),
(316,224,cs)
);
},
{
closed = 1;
nodes = (
(184,224,o),
(191,226,o),
(194,230,cs),
(197,234,o),
(199,238,o),
(199,241,cs),
(199,261,o),
(166,292,o),
(114,378,c),
(142,424,o),
(199,497,o),
(199,516,cs),
(199,519,o),
(197,523,o),
(194,527,cs),
(191,531,o),
(184,533,o),
(173,533,cs),
(146,533,o),
(41,407,o),
(41,378,cs),
(41,352,o),
(147,224,o),
(173,224,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
32 6 2 0 1 1 66 3 1 1 0 0 1 79 3 1 1 1 0 83 2 1 0 1 0 71 40 46 40 45 4 30
CALL[ ]	/* CallFunction */";
};
width = 406;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(312,232,o),
(316,235,o),
(316,241,cs),
(316,261,o),
(283,292,o),
(231,378,c),
(259,424,o),
(316,497,o),
(316,516,cs),
(316,522,o),
(312,525,o),
(305,525,cs),
(294,525,o),
(267,500,o),
(238,462,cs),
(208,425,o),
(188,391,o),
(188,378,cs),
(188,351,o),
(281,232,o),
(305,232,cs)
);
},
{
closed = 1;
nodes = (
(169,232,o),
(173,235,o),
(173,241,cs),
(173,261,o),
(140,292,o),
(88,378,c),
(116,424,o),
(173,497,o),
(173,516,cs),
(173,522,o),
(169,525,o),
(162,525,cs),
(151,525,o),
(124,500,o),
(95,462,cs),
(65,425,o),
(45,391,o),
(45,378,cs),
(45,351,o),
(138,232,o),
(162,232,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
32 6 2 0 1 1 66 3 1 1 0 0 1 79 3 1 1 1 0 83 2 1 0 1 0 71 42 44 42 44 4 30
CALL[ ]	/* CallFunction */";
};
width = 369;
}
);
note = guillemotleft;
unicode = 171;
},
{
glyphname = guillemetright;
kernLeft = guillemotright;
kernRight = guillemotright;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(264,219,o),
(297,247,o),
(334,289,cs),
(370,331,o),
(394,365,o),
(394,378,cs),
(394,394,o),
(366,432,o),
(334,469,cs),
(298,510,o),
(263,538,o),
(251,538,cs),
(236,538,o),
(227,535,o),
(222,530,cs),
(217,524,o),
(215,519,o),
(215,516,cs),
(215,497,o),
(272,424,o),
(300,378,c),
(248,292,o),
(215,261,o),
(215,241,cs),
(215,238,o),
(217,233,o),
(222,228,cs),
(227,222,o),
(236,219,o),
(251,219,cs)
);
},
{
closed = 1;
nodes = (
(121,219,o),
(154,247,o),
(191,289,cs),
(227,331,o),
(251,365,o),
(251,378,cs),
(251,394,o),
(223,432,o),
(191,469,cs),
(155,510,o),
(120,538,o),
(108,538,cs),
(93,538,o),
(84,535,o),
(79,530,cs),
(74,524,o),
(72,519,o),
(72,516,cs),
(72,497,o),
(129,424,o),
(157,378,c),
(105,292,o),
(72,261,o),
(72,241,cs),
(72,238,o),
(74,233,o),
(79,228,cs),
(84,222,o),
(93,219,o),
(108,219,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
55 25 2 1 0 1 66 2 1 0 1 1 0 79 2 1 0 0 1 83 3 1 1 0 1 71 44 46 44 34 4 19
CALL[ ]	/* CallFunction */";
};
width = 432;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(259,224,o),
(365,352,o),
(365,378,cs),
(365,407,o),
(260,533,o),
(233,533,cs),
(222,533,o),
(215,531,o),
(212,527,cs),
(209,523,o),
(207,519,o),
(207,516,cs),
(207,497,o),
(264,424,o),
(292,378,c),
(240,292,o),
(207,261,o),
(207,241,cs),
(207,238,o),
(209,234,o),
(212,230,cs),
(215,226,o),
(222,224,o),
(233,224,cs)
);
},
{
closed = 1;
nodes = (
(116,224,o),
(222,352,o),
(222,378,cs),
(222,407,o),
(117,533,o),
(90,533,cs),
(79,533,o),
(72,531,o),
(69,527,cs),
(66,523,o),
(64,519,o),
(64,516,cs),
(64,497,o),
(121,424,o),
(149,378,c),
(97,292,o),
(64,261,o),
(64,241,cs),
(64,238,o),
(66,234,o),
(69,230,cs),
(72,226,o),
(79,224,o),
(90,224,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
47 21 2 1 0 1 66 2 1 0 1 1 0 79 2 1 0 0 1 83 3 1 1 0 1 71 40 46 40 34 4 19
CALL[ ]	/* CallFunction */";
};
width = 406;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(231,232,o),
(324,351,o),
(324,378,cs),
(324,391,o),
(304,425,o),
(275,462,cs),
(245,500,o),
(218,525,o),
(207,525,cs),
(200,525,o),
(196,522,o),
(196,516,cs),
(196,497,o),
(253,424,o),
(281,378,c),
(229,292,o),
(196,261,o),
(196,241,cs),
(196,235,o),
(200,232,o),
(207,232,cs)
);
},
{
closed = 1;
nodes = (
(88,232,o),
(181,351,o),
(181,378,cs),
(181,391,o),
(161,425,o),
(132,462,cs),
(102,500,o),
(75,525,o),
(64,525,cs),
(57,525,o),
(53,522,o),
(53,516,cs),
(53,497,o),
(110,424,o),
(138,378,c),
(86,292,o),
(53,261,o),
(53,241,cs),
(53,235,o),
(57,232,o),
(64,232,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
47 21 2 1 0 1 66 2 1 0 1 1 0 79 2 1 0 0 1 83 3 1 1 0 1 71 42 44 42 33 4 19
CALL[ ]	/* CallFunction */";
};
width = 369;
}
);
note = guillemotright;
unicode = 187;
},
{
glyphname = guilsinglleft;
kernLeft = guillemotleft;
kernRight = guillemotleft;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(196,219,o),
(205,221,o),
(210,226,cs),
(215,231,o),
(217,236,o),
(217,241,cs),
(217,261,o),
(184,292,o),
(132,378,c),
(160,424,o),
(217,497,o),
(217,516,cs),
(217,521,o),
(215,526,o),
(210,531,cs),
(205,536,o),
(196,538,o),
(181,538,cs),
(169,538,o),
(134,510,o),
(99,469,cs),
(66,432,o),
(38,394,o),
(38,378,cs),
(38,365,o),
(62,331,o),
(99,289,cs),
(135,247,o),
(168,219,o),
(181,219,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
5 1 0 1 1 66 0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71 44 44 2 17
CALL[ ]	/* CallFunction */";
};
width = 289;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(184,224,o),
(191,226,o),
(194,230,cs),
(197,234,o),
(199,238,o),
(199,241,cs),
(199,261,o),
(166,292,o),
(114,378,c),
(142,424,o),
(199,497,o),
(199,516,cs),
(199,519,o),
(197,523,o),
(194,527,cs),
(191,531,o),
(184,533,o),
(173,533,cs),
(146,533,o),
(41,407,o),
(41,378,cs),
(41,352,o),
(147,224,o),
(173,224,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
5 1 0 1 1 66 0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71 40 44 2 17
CALL[ ]	/* CallFunction */";
};
width = 263;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(169,232,o),
(173,235,o),
(173,241,cs),
(173,261,o),
(140,292,o),
(88,378,c),
(116,424,o),
(173,497,o),
(173,516,cs),
(173,522,o),
(169,525,o),
(162,525,cs),
(151,525,o),
(124,500,o),
(95,462,cs),
(65,425,o),
(45,391,o),
(45,378,cs),
(45,351,o),
(138,232,o),
(162,232,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
5 1 0 1 1 66 0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71 42 43 2 17
CALL[ ]	/* CallFunction */";
};
width = 226;
}
);
note = guilsinglleft;
unicode = 8249;
},
{
glyphname = guilsinglright;
kernLeft = guillemotright;
kernRight = guillemotright;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(121,219,o),
(154,247,o),
(191,289,cs),
(227,331,o),
(251,365,o),
(251,378,cs),
(251,394,o),
(223,432,o),
(191,469,cs),
(155,510,o),
(120,538,o),
(108,538,cs),
(93,538,o),
(84,536,o),
(79,531,cs),
(74,526,o),
(72,521,o),
(72,516,cs),
(72,497,o),
(129,424,o),
(157,378,c),
(105,292,o),
(72,261,o),
(72,241,cs),
(72,236,o),
(74,231,o),
(79,226,cs),
(84,221,o),
(93,219,o),
(108,219,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
25 1 1 0 1 66 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 44 34 2 17
CALL[ ]	/* CallFunction */";
};
width = 289;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(116,224,o),
(222,352,o),
(222,378,cs),
(222,407,o),
(117,533,o),
(90,533,cs),
(79,533,o),
(72,531,o),
(69,527,cs),
(66,523,o),
(64,519,o),
(64,516,cs),
(64,497,o),
(121,424,o),
(149,378,c),
(97,292,o),
(64,261,o),
(64,241,cs),
(64,238,o),
(66,234,o),
(69,230,cs),
(72,226,o),
(79,224,o),
(90,224,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
6 1 0 1 1 66 0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71 40 45 2 28
CALL[ ]	/* CallFunction */";
};
width = 263;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(88,232,o),
(181,351,o),
(181,378,cs),
(181,391,o),
(161,425,o),
(132,462,cs),
(102,500,o),
(75,525,o),
(64,525,cs),
(57,525,o),
(53,522,o),
(53,516,cs),
(53,497,o),
(110,424,o),
(138,378,c),
(86,292,o),
(53,261,o),
(53,241,cs),
(53,235,o),
(57,232,o),
(64,232,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
6 1 0 1 1 66 0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71 42 44 2 28
CALL[ ]	/* CallFunction */";
};
width = 226;
}
);
note = guilsinglright;
unicode = 8250;
},
{
glyphname = quotedbl;
kernLeft = quotedbl;
kernRight = quotedbl;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(243,641,o),
(259,757,o),
(259,798,cs),
(259,822,o),
(254,858,o),
(211,858,cs),
(168,858,o),
(163,805,o),
(163,783,cs),
(163,726,o),
(176,641,o),
(212,641,cs)
);
},
{
closed = 1;
nodes = (
(114,641,o),
(130,757,o),
(130,798,cs),
(130,822,o),
(125,858,o),
(82,858,cs),
(39,858,o),
(34,805,o),
(34,783,cs),
(34,726,o),
(47,641,o),
(83,641,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
3 1 1 1 0 83 5 2 4 3 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
5 2 4 3 0 1 1 0 79 5 2 4 3 0 0 1 83 3 1 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
21 20 1 0 31 29 20 39 21 39 11 9 0 19 1 19 6 15
CALL[ ]	/* CallFunction */";
};
width = 292;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(219,647,o),
(230,677,o),
(236,719,cs),
(242,765,o),
(243,789,o),
(243,798,cs),
(243,817,o),
(244,855,o),
(205,855,cs),
(168,855,o),
(168,798,o),
(168,783,cs),
(168,752,o),
(173,647,o),
(206,647,cs)
);
},
{
closed = 1;
nodes = (
(90,647,o),
(101,677,o),
(107,719,cs),
(113,765,o),
(114,789,o),
(114,798,cs),
(114,817,o),
(115,855,o),
(76,855,cs),
(39,855,o),
(39,798,o),
(39,783,cs),
(39,752,o),
(44,647,o),
(77,647,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
3 1 1 1 0 83 5 2 4 3 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
5 2 4 3 0 1 1 0 79 5 2 4 3 0 0 1 83 3 1 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
24 23 2 1 36 34 23 44 24 44 14 12 1 22 2 22 6 26
CALL[ ]	/* CallFunction */";
};
width = 281;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(218,657,o),
(220,817,o),
(220,798,cs),
(220,813,o),
(221,850,o),
(197,850,cs),
(177,850,o),
(175,803,o),
(175,783,cs),
(175,766,o),
(176,657,o),
(198,657,cs)
);
},
{
closed = 1;
nodes = (
(89,657,o),
(91,817,o),
(91,798,cs),
(91,813,o),
(92,850,o),
(68,850,cs),
(48,850,o),
(46,803,o),
(46,783,cs),
(46,766,o),
(47,657,o),
(69,657,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
3 1 1 1 0 83 5 2 4 3 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
5 2 4 3 0 1 1 0 79 5 2 4 3 0 0 1 83 3 1 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
22 21 2 1 32 30 21 40 22 40 12 10 1 20 2 20 6 26
CALL[ ]	/* CallFunction */";
};
width = 265;
}
);
note = quotedbl;
unicode = 34;
},
{
glyphname = quotesingle;
kernLeft = quotedbl;
kernRight = quotedbl;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(114,641,o),
(130,757,o),
(130,798,cs),
(130,822,o),
(125,858,o),
(82,858,cs),
(39,858,o),
(34,805,o),
(34,783,cs),
(34,726,o),
(47,641,o),
(83,641,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 1 1 0 83 2 1 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
1 0 11 9 0 19 1 19 3 15
CALL[ ]	/* CallFunction */";
};
width = 163;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(90,647,o),
(101,677,o),
(107,719,cs),
(113,765,o),
(114,789,o),
(114,798,cs),
(114,817,o),
(115,855,o),
(76,855,cs),
(39,855,o),
(39,798,o),
(39,783,cs),
(39,752,o),
(44,647,o),
(77,647,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 1 1 0 83 2 1 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
1 0 13 11 0 21 1 21 3 15
CALL[ ]	/* CallFunction */";
};
width = 152;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(89,657,o),
(91,817,o),
(91,798,cs),
(91,813,o),
(92,850,o),
(68,850,cs),
(48,850,o),
(46,803,o),
(46,783,cs),
(46,766,o),
(47,657,o),
(69,657,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 1 1 0 83 2 1 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
1 0 11 9 0 19 1 19 3 15
CALL[ ]	/* CallFunction */";
};
width = 136;
}
);
note = quotesingle;
unicode = 39;
},
{
glyphname = florin;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(293,-204,o),
(338,-128,o),
(352,56,cs),
(375,400,l),
(375,400,l),
(375,403,o),
(376,406,o),
(379,408,cs),
(381,410,o),
(386,411,o),
(394,411,cs),
(409,411,o),
(433,409,o),
(460,409,cs),
(481,409,o),
(506,420,o),
(506,447,cs),
(506,484,o),
(478,487,o),
(463,487,cs),
(385,487,ls),
(382,487,o),
(380,489,o),
(380,492,cs),
(379,495,o),
(379,503,o),
(379,516,cs),
(379,531,o),
(382,588,o),
(407,647,cs),
(431,703,o),
(477,751,o),
(554,751,cs),
(573,751,o),
(596,749,o),
(596,726,cs),
(596,711,o),
(586,699,o),
(563,692,cs),
(555,689,o),
(547,684,o),
(547,664,cs),
(547,649,o),
(563,630,o),
(595,630,cs),
(632,630,o),
(671,664,o),
(671,722,cs),
(671,762,o),
(645,825,o),
(550,825,cs),
(432,825,o),
(368,759,o),
(336,697,cs),
(297,620,o),
(292,553,o),
(287,505,cs),
(286,488,o),
(283,487,o),
(271,487,cs),
(258,487,ls),
(235,487,o),
(209,478,o),
(209,451,cs),
(209,419,o),
(231,411,o),
(254,411,cs),
(270,411,ls),
(275,411,o),
(279,409,o),
(280,405,cs),
(281,401,o),
(281,394,o),
(281,385,cs),
(281,260,o),
(272,158,o),
(260,45,cs),
(244,-99,o),
(217,-127,o),
(162,-127,cs),
(118,-127,o),
(94,-99,o),
(94,-87,cs),
(94,-56,o),
(154,-70,o),
(154,-38,cs),
(154,-14,o),
(144,5,o),
(95,5,cs),
(40,5,o),
(24,-27,o),
(24,-66,cs),
(24,-169,o),
(117,-204,o),
(166,-204,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 1 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 6 7 4 7 6 96 0 1 3 2 3 1 2 104 0 7 7 5 83 0 5 5 12 67 9 1 3 3 4 83 8 1 4 4 23 67 0 2 2 0 83 0 0 0 17 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 6 7 4 7 6 4 104 0 1 3 2 3 1 2 104 0 7 7 5 83 0 5 5 12 67 9 1 3 3 4 83 8 1 4 4 23 67 0 2 2 0 83 0 0 0 17 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 6 7 4 7 6 4 104 0 1 3 2 3 1 2 104 8 1 4 9 1 3 1 4 3 91 0 2 0 0 2 0 87 0 7 7 5 83 0 5 5 12 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 6 7 4 7 6 4 104 0 1 3 2 3 1 2 104 8 1 4 9 1 3 1 4 3 91 0 2 0 0 2 0 87 0 7 7 5 83 0 5 5 14 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
104 97 56 42 40 40 52 57 43 38 36 10 24
CALL[ ]	/* CallFunction */";
};
width = 692;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(211,-203,o),
(254,-185,o),
(283,-144,cs),
(312,-103,o),
(329,-39,o),
(336,56,cs),
(359,409,l),
(359,409,l),
(359,412,o),
(360,415,o),
(363,417,cs),
(365,419,o),
(370,420,o),
(378,420,cs),
(393,420,o),
(417,418,o),
(444,418,cs),
(459,418,o),
(483,424,o),
(483,447,cs),
(483,474,o),
(462,478,o),
(447,478,cs),
(369,478,ls),
(364,478,o),
(362,481,o),
(362,488,cs),
(362,530,o),
(366,592,o),
(391,657,cs),
(414,721,o),
(462,769,o),
(538,769,cs),
(573,769,o),
(594,756,o),
(594,735,cs),
(594,720,o),
(587,714,o),
(568,706,cs),
(559,702,o),
(552,695,o),
(552,678,cs),
(552,661,o),
(566,644,o),
(593,644,cs),
(624,644,o),
(655,673,o),
(655,722,cs),
(655,762,o),
(629,825,o),
(534,825,cs),
(428,825,o),
(367,765,o),
(337,697,cs),
(303,619,o),
(294,547,o),
(290,491,c),
(289,484,o),
(287,478,o),
(276,478,cs),
(242,478,ls),
(219,478,o),
(200,472,o),
(200,452,cs),
(200,429,o),
(215,420,o),
(238,420,cs),
(275,420,ls),
(280,420,o),
(284,418,o),
(285,414,cs),
(286,410,o),
(286,403,o),
(286,394,cs),
(286,271,o),
(278,158,o),
(265,45,cs),
(246,-116,o),
(215,-145,o),
(164,-145,cs),
(94,-145,o),
(78,-115,o),
(78,-100,cs),
(78,-68,o),
(136,-90,o),
(136,-52,cs),
(136,-32,o),
(121,-14,o),
(89,-14,cs),
(53,-14,o),
(23,-38,o),
(23,-83,cs),
(23,-168,o),
(100,-203,o),
(155,-203,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 6 7 4 7 6 4 104 0 1 3 2 3 1 2 104 0 7 7 5 83 0 5 5 12 67 9 1 3 3 4 83 8 1 4 4 23 67 0 2 2 0 83 0 0 0 17 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 6 7 4 7 6 4 104 0 1 3 2 3 1 2 104 8 1 4 9 1 3 1 4 3 91 0 7 7 5 83 0 5 5 12 67 0 2 2 0 83 0 0 0 17 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 6 7 4 7 6 4 104 0 1 3 2 3 1 2 104 8 1 4 9 1 3 1 4 3 91 0 2 0 0 2 0 87 0 7 7 5 83 0 5 5 12 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 6 7 4 7 6 4 104 0 1 3 2 3 1 2 104 8 1 4 9 1 3 1 4 3 91 0 2 0 0 2 0 87 0 7 7 5 83 0 5 5 14 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
97 90 55 42 38 40 52 57 43 38 36 10 24
CALL[ ]	/* CallFunction */";
};
width = 676;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(183,-202,o),
(223,-189,o),
(255,-150,cs),
(286,-111,o),
(306,-47,o),
(313,56,cs),
(336,424,ls),
(336,427,o),
(337,430,o),
(340,432,cs),
(342,434,o),
(347,435,o),
(355,435,cs),
(370,435,o),
(394,433,o),
(421,433,cs),
(436,433,o),
(450,436,o),
(450,447,cs),
(450,458,o),
(437,463,o),
(424,463,cs),
(346,463,ls),
(343,463,o),
(341,465,o),
(340,468,cs),
(339,471,o),
(339,478,o),
(339,488,cs),
(339,534,o),
(343,603,o),
(368,676,cs),
(391,746,o),
(438,799,o),
(515,799,cs),
(568,799,o),
(591,772,o),
(591,750,cs),
(591,741,o),
(587,737,o),
(575,729,cs),
(564,721,o),
(559,714,o),
(559,701,cs),
(559,681,o),
(571,667,o),
(590,667,cs),
(614,667,o),
(632,690,o),
(632,722,cs),
(632,762,o),
(606,825,o),
(511,825,cs),
(423,825,o),
(368,772,o),
(339,697,cs),
(309,621,o),
(301,544,o),
(297,491,cs),
(296,476,o),
(294,463,o),
(283,463,cs),
(219,463,ls),
(208,463,o),
(200,463,o),
(195,462,cs),
(190,461,o),
(187,458,o),
(187,453,cs),
(187,449,o),
(189,445,o),
(193,441,cs),
(196,437,o),
(204,435,o),
(215,435,cs),
(282,435,ls),
(287,435,o),
(291,433,o),
(292,429,cs),
(293,425,o),
(293,418,o),
(293,409,cs),
(293,283,o),
(286,162,o),
(272,45,cs),
(261,-48,o),
(247,-103,o),
(227,-135,cs),
(207,-167,o),
(180,-175,o),
(141,-175,cs),
(73,-175,o),
(55,-139,o),
(55,-130,cs),
(55,-98,o),
(111,-121,o),
(111,-75,cs),
(111,-45,o),
(89,-45,o),
(81,-45,cs),
(71,-45,o),
(22,-57,o),
(22,-112,cs),
(22,-168,o),
(72,-202,o),
(139,-202,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 6 7 4 7 6 4 104 0 1 3 2 3 1 2 104 0 7 7 5 83 0 5 5 12 67 9 1 3 3 4 83 8 1 4 4 23 67 0 2 2 0 83 0 0 0 17 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 6 7 4 7 6 4 104 0 1 3 2 3 1 2 104 8 1 4 9 1 3 1 4 3 91 0 7 7 5 83 0 5 5 12 67 0 2 2 0 83 0 0 0 17 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 6 7 4 7 6 4 104 0 1 3 2 3 1 2 104 8 1 4 9 1 3 1 4 3 91 0 2 0 0 2 0 87 0 7 7 5 83 0 5 5 12 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 6 7 4 7 6 4 104 0 1 3 2 3 1 2 104 8 1 4 9 1 3 1 4 3 91 0 2 0 0 2 0 87 0 7 7 5 83 0 5 5 14 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
101 94 56 44 38 40 52 56 45 38 36 10 24
CALL[ ]	/* CallFunction */";
};
width = 653;
}
);
note = florin;
unicode = 402;
},
{
glyphname = at;
kernLeft = at;
kernRight = at;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(345,-84,o),
(368,-77,o),
(368,-48,cs),
(368,-19,o),
(353,-4,o),
(322,-4,cs),
(211,-4,o),
(127,93,o),
(127,227,cs),
(127,364,o),
(215,459,o),
(345,459,cs),
(505,459,o),
(581,359,o),
(581,236,cs),
(581,166,o),
(545,133,o),
(530,133,cs),
(523,133,o),
(517,135,o),
(513,139,cs),
(508,142,o),
(505,154,o),
(504,174,cs),
(503,185,o),
(503,196,o),
(503,206,cs),
(503,216,o),
(503,226,o),
(503,237,cs),
(503,262,o),
(503,285,o),
(504,306,cs),
(505,327,o),
(505,350,o),
(505,376,cs),
(505,391,o),
(491,411,o),
(463,411,cs),
(439,411,o),
(419,399,o),
(419,380,cs),
(419,376,o),
(419,373,o),
(420,371,cs),
(420,369,o),
(420,365,o),
(421,360,c),
(400,392,o),
(363,399,o),
(335,399,cs),
(242,399,o),
(168,321,o),
(168,215,cs),
(168,122,o),
(231,49,o),
(321,49,cs),
(370,49,o),
(404,70,o),
(425,97,c),
(433,77,o),
(451,54,o),
(496,54,cs),
(585,54,o),
(665,103,o),
(665,237,cs),
(665,397,o),
(553,541,o),
(344,541,cs),
(169,541,o),
(40,410,o),
(40,227,cs),
(40,45,o),
(170,-84,o),
(321,-84,cs)
);
},
{
closed = 1;
nodes = (
(286,127,o),
(261,157,o),
(261,216,cs),
(261,281,o),
(294,321,o),
(333,321,cs),
(392,321,o),
(419,282,o),
(419,231,cs),
(419,223,l),
(419,223,l),
(419,191,o),
(396,127,o),
(326,127,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
59 1 9 6 43 1 4 8 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
59 1 9 6 43 1 4 10 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 3 0 0 6 3 0 91 7 1 6 0 9 8 6 9 91 10 1 8 5 1 4 1 8 4 92 0 1 2 2 1 79 0 1 1 2 83 0 2 1 2 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 7 0 6 0 7 6 104 0 3 0 0 7 3 0 91 0 6 0 9 8 6 9 91 10 1 8 5 1 4 1 8 4 92 0 1 2 2 1 79 0 1 1 2 83 0 2 1 2 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 7 0 6 0 7 6 104 0 3 0 0 7 3 0 91 0 6 0 9 8 6 9 91 0 8 10 4 8 79 0 10 5 1 4 1 10 4 91 0 1 2 2 1 79 0 1 1 2 83 0 2 1 2 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 7 0 6 0 7 6 104 0 3 0 0 7 3 0 91 0 6 0 9 8 6 9 91 0 8 0 4 5 8 4 92 0 10 0 5 1 10 5 91 0 1 2 2 1 79 0 1 1 2 83 0 2 1 2 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
92 90 86 84 42 39 40 36 40 40 35 40 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 704;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(348,-84,o),
(364,-76,o),
(364,-55,cs),
(364,-34,o),
(353,-22,o),
(325,-22,cs),
(206,-22,o),
(109,77,o),
(109,227,cs),
(109,374,o),
(204,477,o),
(346,477,cs),
(508,477,o),
(584,367,o),
(584,236,cs),
(584,156,o),
(551,115,o),
(520,115,cs),
(496,115,o),
(486,121,o),
(486,156,cs),
(486,170,o),
(486,184,o),
(485,197,cs),
(484,210,o),
(484,224,o),
(484,237,cs),
(484,262,o),
(485,286,o),
(486,309,cs),
(487,332,o),
(487,356,o),
(487,382,cs),
(487,395,o),
(475,411,o),
(455,411,cs),
(438,411,o),
(422,400,o),
(422,384,cs),
(422,376,o),
(423,371,o),
(424,360,c),
(403,392,o),
(366,399,o),
(338,399,cs),
(245,399,o),
(171,321,o),
(171,215,cs),
(171,122,o),
(234,49,o),
(324,49,cs),
(373,49,o),
(407,70,o),
(428,97,c),
(436,77,o),
(454,54,o),
(499,54,cs),
(575,54,o),
(647,100,o),
(647,237,cs),
(647,401,o),
(539,541,o),
(347,541,cs),
(172,541,o),
(43,410,o),
(43,227,cs),
(43,45,o),
(173,-84,o),
(324,-84,cs)
);
},
{
closed = 1;
nodes = (
(276,109,o),
(243,147,o),
(243,216,cs),
(243,292,o),
(285,339,o),
(336,339,cs),
(395,339,o),
(422,302,o),
(422,243,cs),
(422,205,l),
(422,205,l),
(422,172,o),
(400,109,o),
(329,109,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
60 1 9 6 44 1 4 8 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
60 1 9 6 44 1 4 10 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 7 0 6 0 7 6 104 0 3 0 0 7 3 0 91 0 6 0 9 8 6 9 91 10 1 8 5 1 4 1 8 4 92 0 1 2 2 1 79 0 1 1 2 83 0 2 1 2 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 7 0 6 0 7 6 104 0 3 0 0 7 3 0 91 0 6 0 9 8 6 9 91 0 8 10 4 8 79 0 10 5 1 4 1 10 4 91 0 1 2 2 1 79 0 1 1 2 83 0 2 1 2 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 7 0 6 0 7 6 104 0 3 0 0 7 3 0 91 0 6 0 9 8 6 9 91 0 8 0 4 5 8 4 92 0 10 0 5 1 10 5 91 0 1 2 2 1 79 0 1 1 2 83 0 2 1 2 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
93 91 87 85 42 39 40 36 40 40 36 40 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 688;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(340,-84,o),
(348,-82,o),
(352,-78,cs),
(356,-75,o),
(358,-71,o),
(358,-67,cs),
(358,-63,o),
(356,-59,o),
(353,-56,cs),
(350,-53,o),
(342,-52,o),
(329,-52,cs),
(190,-52,o),
(83,60,o),
(83,227,cs),
(83,393,o),
(190,507,o),
(348,507,cs),
(509,507,o),
(588,384,o),
(588,236,cs),
(588,125,o),
(551,85,o),
(506,85,cs),
(483,85,o),
(473,94,o),
(466,105,cs),
(463,111,o),
(461,118,o),
(460,126,cs),
(459,163,o),
(458,200,o),
(458,237,cs),
(458,288,o),
(459,340,o),
(461,392,cs),
(461,403,o),
(452,411,o),
(444,411,cs),
(436,411,o),
(426,402,o),
(426,391,cs),
(426,383,o),
(427,371,o),
(428,360,c),
(407,392,o),
(370,399,o),
(342,399,cs),
(249,399,o),
(175,321,o),
(175,215,cs),
(175,122,o),
(238,49,o),
(328,49,cs),
(377,49,o),
(411,70,o),
(432,97,c),
(440,77,o),
(458,54,o),
(503,54,cs),
(564,54,o),
(621,100,o),
(621,237,cs),
(621,400,o),
(524,541,o),
(351,541,cs),
(176,541,o),
(47,410,o),
(47,227,cs),
(47,45,o),
(177,-84,o),
(328,-84,cs)
);
},
{
closed = 1;
nodes = (
(261,79,o),
(217,128,o),
(217,216,cs),
(217,309,o),
(270,369,o),
(340,369,cs),
(399,369,o),
(426,332,o),
(426,273,cs),
(426,175,ls),
(426,142,o),
(404,79,o),
(333,79,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
74 60 44 3 8 9 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 7 0 6 0 7 6 104 0 3 0 0 7 3 0 91 0 6 0 9 8 6 9 91 0 8 10 4 8 79 0 10 5 1 4 1 10 4 91 0 1 2 2 1 79 0 1 1 2 83 0 2 1 2 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 7 0 6 0 7 6 104 0 3 0 0 7 3 0 91 0 6 0 9 8 6 9 91 0 8 0 4 5 8 4 91 0 10 0 5 1 10 5 91 0 1 2 2 1 79 0 1 1 2 83 0 2 1 2 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
96 94 88 86 43 39 40 36 40 40 36 40 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 665;
}
);
note = at;
unicode = 64;
},
{
glyphname = ampersand;
kernLeft = ampersand;
kernRight = ampersand;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(731,-19,o),
(786,-20,o),
(786,13,cs),
(786,24,o),
(779,32,o),
(766,37,cs),
(753,41,o),
(727,44,o),
(689,45,cs),
(667,46,o),
(648,47,o),
(633,48,cs),
(617,48,o),
(606,49,o),
(601,50,cs),
(596,51,o),
(587,59,o),
(576,72,cs),
(565,85,o),
(547,108,o),
(524,140,c),
(551,192,o),
(586,254,o),
(586,347,cs),
(586,447,o),
(534,460,o),
(488,460,cs),
(423,460,o),
(406,420,o),
(406,393,cs),
(406,357,o),
(426,341,o),
(446,341,cs),
(461,341,o),
(477,351,o),
(477,370,cs),
(477,389,o),
(481,398,o),
(490,398,cs),
(495,398,o),
(500,394,o),
(505,386,cs),
(510,377,o),
(512,361,o),
(512,338,cs),
(512,285,o),
(497,244,o),
(476,200,c),
(448,241,o),
(419,283,o),
(388,326,cs),
(357,369,o),
(331,413,o),
(308,460,c),
(369,518,o),
(456,604,o),
(456,715,cs),
(456,813,o),
(387,838,o),
(321,838,cs),
(220,838,o),
(133,779,o),
(133,675,cs),
(133,612,o),
(164,541,o),
(201,469,c),
(156,447,o),
(26,335,o),
(26,188,cs),
(26,33,o),
(171,-9,o),
(272,-9,cs),
(345,-9,o),
(406,12,o),
(475,79,c),
(515,30,o),
(549,-19,o),
(583,-19,cs)
);
},
{
closed = 1;
nodes = (
(222,70,o),
(122,85,o),
(122,196,cs),
(122,285,o),
(180,344,o),
(238,402,c),
(305,286,o),
(354,204,o),
(415,130,c),
(391,106,o),
(349,70,o),
(273,70,cs)
);
},
{
closed = 1;
nodes = (
(243,586,o),
(229,630,o),
(229,673,cs),
(229,728,o),
(250,759,o),
(305,759,cs),
(353,759,o),
(361,733,o),
(361,701,cs),
(361,631,o),
(277,556,o),
(262,538,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
113 50 2 1 8 82 1 6 1 97 71 37 18 4 7 0 3 66 68 1 1 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
9 1 0 6 7 6 0 7 104 0 8 8 5 83 0 5 5 20 67 0 6 6 1 83 0 1 1 23 67 0 7 7 3 83 4 1 3 3 21 67 0 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
9 1 0 6 7 6 0 7 104 0 1 0 6 0 1 6 91 0 8 8 5 83 0 5 5 20 67 0 7 7 3 83 4 1 3 3 21 67 0 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
9 1 0 6 7 6 0 7 104 0 1 0 6 0 1 6 91 0 8 8 5 83 0 5 5 20 67 0 7 7 4 83 0 4 4 24 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
9 1 0 6 7 6 0 7 104 0 5 0 8 1 5 8 91 0 1 0 6 0 1 6 91 0 7 7 4 83 0 4 4 24 67 0 2 2 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
1 0 108 106 93 91 78 76 59 57 41 39 33 30 25 22 9 7 0 81 1 81 10 15
CALL[ ]	/* CallFunction */";
};
width = 759;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(707,-19,o),
(763,-20,o),
(763,8,cs),
(763,19,o),
(757,26,o),
(744,29,cs),
(731,31,o),
(712,32,o),
(687,33,cs),
(638,33,o),
(611,32,o),
(599,37,cs),
(590,40,o),
(578,50,o),
(564,67,cs),
(550,84,o),
(531,108,o),
(508,140,c),
(539,196,o),
(570,262,o),
(570,342,cs),
(570,434,o),
(527,459,o),
(481,459,cs),
(429,459,o),
(405,427,o),
(405,392,cs),
(405,375,o),
(411,349,o),
(446,349,cs),
(496,349,o),
(465,402,o),
(489,402,cs),
(494,402,o),
(500,398,o),
(505,390,cs),
(510,381,o),
(513,363,o),
(513,336,cs),
(513,280,o),
(495,230,o),
(471,186,c),
(409,274,o),
(334,369,o),
(292,460,c),
(354,522,o),
(440,603,o),
(440,714,cs),
(440,809,o),
(374,838,o),
(310,838,cs),
(218,838,o),
(138,778,o),
(138,676,cs),
(138,612,o),
(169,541,o),
(206,469,c),
(142,419,o),
(31,326,o),
(31,186,cs),
(31,35,o),
(163,-9,o),
(259,-9,cs),
(343,-9,o),
(408,25,o),
(469,90,c),
(509,40,o),
(555,-19,o),
(588,-19,cs)
);
},
{
closed = 1;
nodes = (
(205,52,o),
(106,69,o),
(106,193,cs),
(106,284,o),
(160,342,o),
(237,414,c),
(313,281,o),
(361,208,o),
(425,131,c),
(399,100,o),
(351,52,o),
(260,52,cs)
);
},
{
closed = 1;
nodes = (
(231,577,o),
(213,627,o),
(213,674,cs),
(213,738,o),
(244,777,o),
(300,777,cs),
(352,777,o),
(366,740,o),
(366,704,cs),
(366,624,o),
(294,565,o),
(256,521,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
111 66 48 3 1 8 82 1 6 1 97 71 35 14 4 7 0 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
9 1 0 6 7 6 0 96 0 8 8 5 83 0 5 5 20 67 0 6 6 1 83 0 1 1 23 67 0 7 7 3 83 4 1 3 3 21 67 0 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
9 1 0 6 7 6 0 96 0 1 0 6 0 1 6 91 0 8 8 5 83 0 5 5 20 67 0 7 7 3 83 4 1 3 3 21 67 0 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
9 1 0 6 7 6 0 7 104 0 1 0 6 0 1 6 91 0 8 8 5 83 0 5 5 20 67 0 7 7 3 83 4 1 3 3 21 67 0 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
9 1 0 6 7 6 0 7 104 0 1 0 6 0 1 6 91 0 8 8 5 83 0 5 5 20 67 0 7 7 4 83 0 4 4 24 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
9 1 0 6 7 6 0 7 104 0 5 0 8 1 5 8 91 0 1 0 6 0 1 6 91 0 7 7 4 83 0 4 4 24 67 0 2 2 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
1 0 106 104 93 91 78 76 57 55 39 37 31 28 23 19 7 5 0 81 1 81 10 15
CALL[ ]	/* CallFunction */";
};
width = 738;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(642,-19,o),
(677,-18,o),
(698,-16,cs),
(719,-15,o),
(730,-9,o),
(730,0,cs),
(730,7,o),
(726,11,o),
(719,12,cs),
(711,13,o),
(699,13,o),
(684,13,cs),
(629,13,o),
(600,14,o),
(596,16,cs),
(576,26,o),
(519,87,o),
(485,140,c),
(516,196,o),
(547,269,o),
(547,333,cs),
(547,417,o),
(517,457,o),
(474,457,cs),
(454,457,o),
(403,439,o),
(403,391,cs),
(403,379,o),
(414,359,o),
(434,359,cs),
(453,359,o),
(470,372,o),
(470,391,cs),
(470,404,o),
(472,413,o),
(475,417,cs),
(478,420,o),
(481,422,o),
(485,422,cs),
(492,422,o),
(498,416,o),
(505,403,cs),
(511,390,o),
(514,366,o),
(514,332,cs),
(514,273,o),
(492,207,o),
(464,163,c),
(418,229,o),
(309,368,o),
(269,460,c),
(329,517,o),
(417,606,o),
(417,713,cs),
(417,804,o),
(354,838,o),
(295,838,cs),
(216,838,o),
(145,777,o),
(145,677,cs),
(145,610,o),
(176,541,o),
(213,469,c),
(161,404,o),
(38,327,o),
(38,182,cs),
(38,38,o),
(151,-9,o),
(240,-9,cs),
(336,-9,o),
(409,45,o),
(461,108,c),
(502,57,o),
(561,-19,o),
(595,-19,cs)
);
},
{
closed = 1;
nodes = (
(181,22,o),
(83,42,o),
(83,188,cs),
(83,285,o),
(129,336,o),
(235,434,c),
(311,298,o),
(376,209,o),
(440,132,c),
(410,86,o),
(345,22,o),
(241,22,cs)
);
},
{
closed = 1;
nodes = (
(214,560,o),
(190,620,o),
(190,676,cs),
(190,753,o),
(236,807,o),
(293,807,cs),
(351,807,o),
(373,750,o),
(373,709,cs),
(373,604,o),
(301,550,o),
(247,493,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
113 65 47 3 1 8 82 1 6 1 97 70 32 14 4 7 0 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
9 1 0 6 7 6 0 7 104 0 8 8 5 83 0 5 5 20 67 0 6 6 1 83 0 1 1 23 67 0 7 7 4 83 0 4 4 24 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
9 1 0 6 7 6 0 7 104 0 1 0 6 0 1 6 91 0 8 8 5 83 0 5 5 20 67 0 7 7 4 83 0 4 4 24 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
9 1 0 6 7 6 0 7 104 0 5 0 8 1 5 8 91 0 1 0 6 0 1 6 91 0 7 7 4 83 0 4 4 24 67 0 2 2 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
1 0 106 104 93 91 77 75 56 54 38 36 28 26 22 20 9 7 0 81 1 81 10 15
CALL[ ]	/* CallFunction */";
};
width = 708;
}
);
note = ampersand;
unicode = 38;
},
{
glyphname = paragraph;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(373,0,o),
(383,21,o),
(383,52,cs),
(383,153,o),
(381,275,o),
(381,388,cs),
(381,514,o),
(383,645,o),
(383,755,c),
(381,755,o),
(424,756,o),
(439,751,c),
(439,36,ls),
(439,23,o),
(451,0,o),
(480,0,cs),
(520,0,o),
(525,37,o),
(525,62,cs),
(525,199,o),
(524,296,o),
(524,437,cs),
(524,494,o),
(525,547,o),
(527,596,cs),
(529,645,o),
(530,685,o),
(530,717,cs),
(530,738,o),
(531,757,o),
(574,757,cs),
(593,757,ls),
(616,757,o),
(630,765,o),
(630,788,cs),
(630,808,o),
(618,818,o),
(593,818,cs),
(512,818,o),
(453,821,o),
(368,821,cs),
(175,821,o),
(51,754,o),
(51,589,cs),
(51,426,o),
(159,367,o),
(296,356,c),
(296,294,o),
(296,240,o),
(296,196,cs),
(295,150,o),
(295,99,o),
(295,42,cs),
(295,15,o),
(313,0,o),
(336,0,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
57 16 2 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
4 1 2 2 1 83 0 1 1 12 67 3 1 0 0 13 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
4 1 2 2 1 83 0 1 1 14 67 3 1 0 0 13 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
62 59 54 52 38 35 32 25 39 5 16
CALL[ ]	/* CallFunction */";
};
width = 683;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(377,0,o),
(391,16,o),
(391,47,cs),
(391,149,o),
(389,274,o),
(389,388,cs),
(389,517,o),
(391,653,o),
(391,767,c),
(408,767,o),
(419,764,o),
(432,760,c),
(432,32,ls),
(432,19,o),
(445,0,o),
(468,0,cs),
(502,0,o),
(505,33,o),
(505,58,cs),
(505,197,o),
(504,293,o),
(504,437,cs),
(504,497,o),
(505,552,o),
(507,603,cs),
(509,654,o),
(510,696,o),
(510,729,cs),
(510,750,o),
(516,769,o),
(559,769,cs),
(593,769,ls),
(615,769,o),
(626,777,o),
(626,794,cs),
(626,809,o),
(617,818,o),
(593,818,cs),
(497,818,o),
(461,821,o),
(348,821,cs),
(168,821,o),
(27,760,o),
(27,595,cs),
(27,434,o),
(180,367,o),
(317,356,c),
(317,294,o),
(317,240,o),
(317,194,cs),
(316,147,o),
(316,95,o),
(316,37,cs),
(316,16,o),
(329,0,o),
(348,0,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
56 15 2 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
4 1 2 2 1 83 0 1 1 12 67 3 1 0 0 13 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
4 1 2 2 1 83 0 1 1 14 67 3 1 0 0 13 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
59 58 53 51 37 34 31 24 38 5 16
CALL[ ]	/* CallFunction */";
};
width = 658;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(350,0,o),
(362,8,o),
(362,39,cs),
(362,143,o),
(360,270,o),
(360,388,cs),
(360,525,o),
(362,668,o),
(362,787,c),
(391,787,o),
(410,784,o),
(433,780,c),
(433,26,ls),
(433,13,o),
(444,0,o),
(457,0,cs),
(476,0,o),
(476,27,o),
(476,52,cs),
(476,193,o),
(475,291,o),
(475,437,cs),
(475,501,o),
(476,560,o),
(478,615,cs),
(480,669,o),
(481,714,o),
(481,749,cs),
(481,770,o),
(487,789,o),
(530,789,cs),
(564,789,ls),
(575,789,o),
(583,791,o),
(587,794,cs),
(590,797,o),
(592,801,o),
(592,804,cs),
(592,807,o),
(590,811,o),
(587,814,cs),
(584,817,o),
(576,818,o),
(564,818,cs),
(468,818,o),
(432,821,o),
(319,821,cs),
(154,821,o),
(28,759,o),
(28,595,cs),
(28,434,o),
(181,367,o),
(318,356,c),
(318,292,o),
(318,237,o),
(318,189,cs),
(317,141,o),
(317,87,o),
(317,29,cs),
(317,8,o),
(326,0,o),
(337,0,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
56 16 2 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
4 1 2 2 1 83 0 1 1 12 67 3 1 0 0 13 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
4 1 2 2 1 83 0 1 1 14 67 3 1 0 0 13 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
59 58 53 51 39 36 32 25 39 5 16
CALL[ ]	/* CallFunction */";
};
width = 623;
}
);
note = paragraph;
unicode = 182;
},
{
glyphname = section;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(140,-33,o),
(152,-21,o),
(153,34,c),
(180,-19,o),
(239,-27,o),
(292,-27,cs),
(366,-27,o),
(458,-11,o),
(458,101,cs),
(458,157,o),
(434,186,o),
(383,209,c),
(430,232,o),
(465,263,o),
(465,326,cs),
(465,421,o),
(387,438,o),
(268,468,cs),
(212,481,o),
(175,503,o),
(175,546,cs),
(175,588,o),
(204,609,o),
(262,609,cs),
(327,609,o),
(351,576,o),
(367,551,cs),
(370,546,o),
(374,524,o),
(374,521,cs),
(374,510,o),
(392,495,o),
(412,495,cs),
(428,495,o),
(449,503,o),
(452,522,cs),
(453,529,o),
(460,622,o),
(460,665,cs),
(460,705,o),
(439,718,o),
(418,718,cs),
(394,718,o),
(373,708,o),
(373,679,cs),
(373,675,o),
(374,648,o),
(375,631,c),
(354,661,o),
(326,688,o),
(256,688,cs),
(174,688,o),
(93,656,o),
(93,545,cs),
(93,494,o),
(116,446,o),
(175,431,c),
(142,409,o),
(86,378,o),
(86,320,cs),
(86,202,o),
(190,179,o),
(278,160,cs),
(359,141,o),
(373,131,o),
(373,100,cs),
(373,54,o),
(314,46,o),
(284,46,cs),
(210,46,o),
(165,90,o),
(156,118,cs),
(153,125,o),
(151,139,o),
(151,152,cs),
(151,175,o),
(132,188,o),
(105,188,cs),
(72,188,o),
(68,171,o),
(68,148,cs),
(68,133,o),
(69,117,o),
(70,101,cs),
(71,85,o),
(71,70,o),
(71,57,cs),
(71,47,o),
(70,26,o),
(70,-5,cs),
(70,-26,o),
(94,-33,o),
(109,-33,cs)
);
},
{
closed = 1;
nodes = (
(227,251,o),
(168,278,o),
(168,318,cs),
(168,358,o),
(200,377,o),
(265,384,c),
(333,373,o),
(374,354,o),
(374,315,cs),
(374,276,o),
(344,251,o),
(291,246,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
18 1 3 0 126 120 59 5 4 6 2 72 1 4 7 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 0 0 3 2 0 3 91 0 1 0 2 6 1 2 91 0 6 6 4 83 5 1 4 4 21 67 0 7 7 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 0 0 3 2 0 3 91 0 1 0 2 6 1 2 91 0 6 7 4 6 79 0 7 4 4 7 79 0 7 7 4 83 5 1 4 7 4 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 0 0 3 2 0 3 91 0 1 0 2 6 1 2 91 0 6 7 5 6 79 0 7 0 4 5 7 4 91 0 6 6 5 83 0 5 6 5 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
101 99 90 88 76 74 68 66 41 41 41 44 8 19
CALL[ ]	/* CallFunction */";
};
width = 512;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(123,-23,o),
(133,-8,o),
(133,12,cs),
(133,16,o),
(133,20,o),
(133,25,cs),
(133,30,o),
(133,35,o),
(132,40,c),
(156,-6,o),
(217,-17,o),
(265,-17,cs),
(329,-17,o),
(430,2,o),
(430,106,cs),
(430,167,o),
(395,196,o),
(340,217,c),
(388,230,o),
(434,260,o),
(434,331,cs),
(434,420,o),
(358,441,o),
(260,467,cs),
(202,482,o),
(149,499,o),
(149,554,cs),
(149,598,o),
(181,628,o),
(244,628,cs),
(307,628,o),
(337,599,o),
(353,568,cs),
(358,560,o),
(365,527,o),
(365,516,c),
(368,507,o),
(375,491,o),
(392,491,cs),
(404,491,o),
(423,498,o),
(424,517,cs),
(424,530,o),
(429,579,o),
(429,664,cs),
(429,699,o),
(412,707,o),
(397,707,cs),
(385,707,o),
(365,701,o),
(365,670,cs),
(365,663,o),
(366,641,o),
(367,624,c),
(348,656,o),
(318,689,o),
(241,689,cs),
(161,689,o),
(83,651,o),
(83,552,cs),
(83,495,o),
(107,463,o),
(142,442,c),
(105,421,o),
(79,384,o),
(79,327,cs),
(79,225,o),
(162,199,o),
(234,182,cs),
(313,162,o),
(362,147,o),
(362,102,cs),
(362,56,o),
(309,40,o),
(262,40,cs),
(200,40,o),
(154,71,o),
(138,107,cs),
(135,114,o),
(133,120,o),
(133,126,cs),
(132,131,o),
(131,139,o),
(130,148,cs),
(127,172,o),
(122,188,o),
(95,188,cs),
(70,188,o),
(68,174,o),
(68,153,cs),
(68,138,o),
(69,123,o),
(70,106,cs),
(71,89,o),
(72,74,o),
(72,61,cs),
(72,52,o),
(72,41,o),
(71,28,cs),
(70,15,o),
(70,6,o),
(70,3,cs),
(70,-16,o),
(87,-23,o),
(103,-23,cs)
);
},
{
closed = 1;
nodes = (
(195,259,o),
(145,286,o),
(145,329,cs),
(145,373,o),
(177,396,o),
(240,403,c),
(278,400,o),
(363,377,o),
(363,327,cs),
(363,284,o),
(290,256,o),
(239,256,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
36 30 16 3 2 3 3 1 9 2 62 1 6 8 3 66 75 1 7 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 9 2 8 2 9 8 104 0 8 6 2 8 6 102 0 0 0 3 2 0 3 91 0 1 0 2 9 1 2 91 0 6 6 4 83 5 1 4 4 21 67 0 7 7 4 84 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 9 2 8 2 9 8 104 0 8 6 2 8 6 102 0 0 0 3 2 0 3 91 0 1 0 2 9 1 2 91 0 7 7 4 84 0 4 4 21 67 0 6 6 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
134 133 125 123 107 105 96 94 82 80 71 69 41 41 41 42 10 19
CALL[ ]	/* CallFunction */";
};
width = 488;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(88,-7,o),
(93,-3,o),
(96,6,cs),
(99,14,o),
(101,29,o),
(102,50,c),
(124,17,o),
(183,0,o),
(227,0,cs),
(279,0,o),
(390,26,o),
(390,114,cs),
(390,182,o),
(339,212,o),
(279,231,c),
(332,242,o),
(390,275,o),
(390,339,cs),
(390,423,o),
(316,445,o),
(249,466,cs),
(185,486,o),
(112,490,o),
(112,567,cs),
(112,615,o),
(153,660,o),
(219,660,cs),
(271,660,o),
(312,639,o),
(333,594,cs),
(341,577,o),
(346,560,o),
(348,542,cs),
(350,524,o),
(352,512,o),
(353,507,cs),
(354,500,o),
(357,484,o),
(370,484,cs),
(381,484,o),
(384,497,o),
(384,508,cs),
(384,515,o),
(384,533,o),
(385,561,cs),
(385,588,o),
(385,622,o),
(385,662,cs),
(385,677,o),
(379,688,o),
(367,688,cs),
(362,688,o),
(358,686,o),
(356,681,cs),
(354,676,o),
(353,667,o),
(353,655,cs),
(353,643,o),
(354,630,o),
(355,613,c),
(346,642,o),
(302,690,o),
(220,690,cs),
(145,690,o),
(69,641,o),
(69,564,cs),
(69,497,o),
(112,466,o),
(149,450,c),
(102,430,o),
(69,391,o),
(69,339,cs),
(69,260,o),
(129,230,o),
(171,218,cs),
(234,201,o),
(347,186,o),
(347,106,cs),
(347,59,o),
(298,30,o),
(230,30,cs),
(179,30,o),
(134,45,o),
(113,88,cs),
(105,104,o),
(103,120,o),
(99,141,cs),
(96,154,o),
(94,163,o),
(92,168,cs),
(90,173,o),
(86,175,o),
(81,175,cs),
(70,175,o),
(68,167,o),
(68,148,cs),
(68,134,o),
(69,120,o),
(71,107,cs),
(72,93,o),
(73,80,o),
(73,67,cs),
(73,58,o),
(73,49,o),
(72,40,cs),
(71,31,o),
(70,23,o),
(70,16,cs),
(70,1,o),
(74,-7,o),
(82,-7,cs)
);
},
{
closed = 1;
nodes = (
(177,255,o),
(112,279,o),
(112,342,cs),
(112,386,o),
(145,427,o),
(204,434,c),
(261,419,o),
(347,399,o),
(347,331,cs),
(347,284,o),
(298,255,o),
(230,255,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
54 1 5 6 126 39 2 8 5 98 1 1 8 0 1 2 1 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 8 5 1 5 8 1 104 0 6 5 3 6 79 4 1 3 0 5 8 3 5 91 0 2 2 7 84 0 7 7 13 67 0 1 1 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 8 5 1 5 8 1 104 0 6 5 3 6 79 4 1 3 0 5 8 3 5 91 0 2 2 7 84 0 7 7 13 67 0 1 1 0 83 0 0 0 16 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 8 5 1 5 8 1 104 0 6 5 3 6 79 4 1 3 0 5 8 3 5 91 0 2 2 7 84 0 7 7 13 67 0 1 1 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
119 117 109 107 79 77 70 68 61 59 50 48 39 41 34 9 18
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = section;
unicode = 167;
},
{
glyphname = copyright;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(476,-67,o),
(665,37,o),
(665,250,cs),
(665,418,o),
(550,558,o),
(353,558,cs),
(165,558,o),
(40,426,o),
(40,244,cs),
(40,58,o),
(169,-67,o),
(330,-67,cs)
);
},
{
closed = 1;
nodes = (
(199,-5,o),
(109,95,o),
(109,244,cs),
(109,390,o),
(195,494,o),
(351,494,cs),
(509,494,o),
(599,385,o),
(599,253,cs),
(599,78,o),
(450,-5,o),
(330,-5,cs)
);
},
{
closed = 1;
nodes = (
(411,79,o),
(458,107,o),
(479,146,cs),
(483,154,o),
(484,162,o),
(484,166,cs),
(484,177,o),
(476,187,o),
(461,187,cs),
(446,187,o),
(437,176,o),
(428,165,cs),
(409,145,o),
(387,130,o),
(343,130,cs),
(275,130,o),
(248,168,o),
(248,232,cs),
(248,297,o),
(278,346,o),
(345,346,cs),
(395,346,o),
(406,314,o),
(414,286,cs),
(417,277,o),
(423,265,o),
(442,265,cs),
(463,265,o),
(469,276,o),
(469,300,cs),
(469,305,o),
(468,333,o),
(468,384,cs),
(468,399,o),
(464,414,o),
(443,414,cs),
(422,414,o),
(416,400,o),
(416,385,cs),
(416,380,o),
(417,369,o),
(418,361,c),
(397,392,o),
(367,396,o),
(340,396,cs),
(243,396,o),
(185,315,o),
(185,232,cs),
(185,145,o),
(249,79,o),
(343,79,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
40 1 6 10 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 8 5 7 5 8 7 104 0 1 0 2 4 1 2 91 0 10 0 6 5 10 6 91 0 7 0 9 3 7 9 91 0 3 0 0 3 0 87 0 5 5 4 83 0 4 4 15 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 8 5 7 5 8 7 104 0 1 0 2 4 1 2 91 0 10 0 6 5 10 6 91 0 4 0 5 8 4 5 91 0 7 0 9 3 7 9 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
99 97 89 87 36 36 38 41 41 40 40 40 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 706;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(476,-67,o),
(647,40,o),
(647,251,cs),
(647,420,o),
(538,558,o),
(352,558,cs),
(168,558,o),
(43,424,o),
(43,244,cs),
(43,58,o),
(173,-67,o),
(329,-67,cs)
);
},
{
closed = 1;
nodes = (
(203,-5,o),
(109,95,o),
(109,244,cs),
(109,391,o),
(201,494,o),
(350,494,cs),
(503,494,o),
(584,385,o),
(584,252,cs),
(584,80,o),
(450,-5,o),
(331,-5,cs)
);
},
{
closed = 1;
nodes = (
(407,65,o),
(455,98,o),
(486,142,cs),
(489,147,o),
(491,153,o),
(491,159,cs),
(491,171,o),
(484,182,o),
(465,182,cs),
(449,182,o),
(443,174,o),
(432,161,cs),
(404,128,o),
(368,124,o),
(347,124,cs),
(286,124,o),
(243,160,o),
(243,236,cs),
(243,308,o),
(281,355,o),
(349,355,cs),
(396,355,o),
(413,324,o),
(422,289,cs),
(425,277,o),
(433,269,o),
(452,269,cs),
(465,269,o),
(474,272,o),
(479,277,cs),
(484,282,o),
(486,287,o),
(486,290,cs),
(486,296,o),
(487,338,o),
(487,417,cs),
(487,428,o),
(476,439,o),
(453,439,cs),
(432,439,o),
(422,427,o),
(422,416,cs),
(422,403,o),
(423,387,o),
(424,376,c),
(403,408,o),
(366,415,o),
(338,415,cs),
(245,415,o),
(171,337,o),
(171,231,cs),
(171,139,o),
(228,65,o),
(335,65,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
40 1 6 10 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 8 5 7 5 8 7 104 0 1 0 2 4 1 2 91 0 7 0 9 3 7 9 91 0 3 0 0 3 0 87 0 6 6 10 83 0 10 10 15 67 0 5 5 4 83 0 4 4 15 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 8 5 7 5 8 7 104 0 1 0 2 4 1 2 91 0 10 0 6 5 10 6 91 0 4 0 5 8 4 5 91 0 7 0 9 3 7 9 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
96 94 86 84 38 36 36 41 41 40 40 40 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 691;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(469,-67,o),
(621,40,o),
(621,253,cs),
(621,416,o),
(528,558,o),
(351,558,cs),
(176,558,o),
(47,427,o),
(47,244,cs),
(47,60,o),
(176,-67,o),
(328,-67,cs)
);
},
{
closed = 1;
nodes = (
(195,-35,o),
(83,74,o),
(83,244,cs),
(83,410,o),
(190,524,o),
(348,524,cs),
(512,524,o),
(588,399,o),
(588,252,cs),
(588,60,o),
(457,-35,o),
(329,-35,cs)
);
},
{
closed = 1;
nodes = (
(386,65,o),
(430,91,o),
(460,142,cs),
(465,150,o),
(467,156,o),
(467,161,cs),
(467,168,o),
(465,175,o),
(453,175,cs),
(445,175,o),
(441,169,o),
(436,161,cs),
(407,112,o),
(380,95,o),
(333,95,cs),
(261,95,o),
(217,144,o),
(217,232,cs),
(217,325,o),
(270,385,o),
(340,385,cs),
(399,385,o),
(426,348,o),
(426,289,cs),
(426,278,o),
(436,274,o),
(444,274,cs),
(451,274,o),
(460,282,o),
(460,290,cs),
(460,308,o),
(461,350,o),
(461,417,cs),
(461,428,o),
(452,436,o),
(444,436,cs),
(436,436,o),
(426,427,o),
(426,416,cs),
(426,403,o),
(427,387,o),
(428,376,c),
(407,408,o),
(370,415,o),
(342,415,cs),
(249,415,o),
(175,337,o),
(175,231,cs),
(175,138,o),
(238,65,o),
(328,65,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
40 1 5 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 8 5 7 5 8 7 104 0 1 0 2 4 1 2 91 0 7 0 9 3 7 9 91 0 3 0 0 3 0 87 0 6 6 10 83 0 10 10 15 67 0 5 5 4 83 0 4 4 15 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 8 5 7 5 8 7 104 0 1 0 2 4 1 2 91 0 10 0 6 5 10 6 91 0 4 0 5 8 4 5 91 0 7 0 9 3 7 9 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
95 93 85 83 36 38 36 41 41 40 40 40 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 670;
}
);
note = copyright;
unicode = 169;
},
{
glyphname = registered;
kernLeft = registered;
kernRight = registered;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(476,-67,o),
(665,37,o),
(665,250,cs),
(665,418,o),
(550,558,o),
(353,558,cs),
(165,558,o),
(40,426,o),
(40,244,cs),
(40,58,o),
(169,-67,o),
(330,-67,cs)
);
},
{
closed = 1;
nodes = (
(199,-5,o),
(109,95,o),
(109,244,cs),
(109,390,o),
(195,494,o),
(351,494,cs),
(509,494,o),
(599,385,o),
(599,253,cs),
(599,78,o),
(450,-5,o),
(330,-5,cs)
);
},
{
closed = 1;
nodes = (
(479,73,o),
(496,74,o),
(496,95,cs),
(496,108,o),
(486,115,o),
(467,115,cs),
(435,115,l),
(426,125,o),
(417,136,o),
(407,149,cs),
(397,161,o),
(387,173,o),
(378,184,cs),
(367,197,o),
(357,210,o),
(346,223,c),
(413,232,o),
(466,268,o),
(466,335,cs),
(466,424,o),
(356,433,o),
(293,433,cs),
(259,433,o),
(211,429,o),
(211,410,cs),
(211,384,o),
(248,402,o),
(254,374,c),
(255,355,o),
(255,336,o),
(255,318,cs),
(255,300,o),
(255,280,o),
(255,259,cs),
(255,142,ls),
(255,122,o),
(211,135,o),
(211,109,cs),
(211,96,o),
(214,92,o),
(238,92,cs),
(312,92,ls),
(328,92,o),
(338,94,o),
(343,97,cs),
(347,100,o),
(349,105,o),
(349,110,cs),
(349,131,o),
(340,133,o),
(324,133,cs),
(307,133,l),
(307,201,l),
(409,73,l),
(409,73,l)
);
},
{
closed = 1;
nodes = (
(308,382,l),
(317,383,o),
(330,385,o),
(341,385,cs),
(377,385,o),
(412,370,o),
(412,333,cs),
(412,276,o),
(366,267,o),
(308,267,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
33 6 2 1 0 51 12 2 2 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 0 4 1 9 0 96 0 1 2 2 1 94 0 8 0 9 4 8 9 91 0 2 0 3 6 2 3 92 0 5 0 6 10 5 6 91 0 10 0 7 10 7 87 0 4 4 15 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 0 4 1 9 0 96 0 1 2 4 1 2 102 0 8 0 9 4 8 9 91 0 2 0 3 6 2 3 92 0 5 0 6 10 5 6 91 0 10 0 7 10 7 87 0 4 4 15 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 0 4 1 4 0 1 104 0 1 2 4 1 2 102 0 8 0 9 4 8 9 91 0 2 0 3 6 2 3 92 0 5 0 6 10 5 6 91 0 10 0 7 10 7 87 0 4 4 15 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 4 9 0 9 4 0 104 0 0 1 9 0 1 102 0 1 2 9 1 2 102 0 8 0 9 4 8 9 91 0 2 0 3 6 2 3 92 0 5 0 6 10 5 6 91 0 10 7 7 10 79 0 10 10 7 83 0 7 10 7 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
101 99 91 89 81 79 71 69 64 62 58 56 44 41 52 37 19 34 11 19
CALL[ ]	/* CallFunction */";
};
width = 707;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(495,-67,o),
(647,40,o),
(647,253,cs),
(647,434,o),
(546,558,o),
(364,558,cs),
(163,558,o),
(43,425,o),
(43,244,cs),
(43,60,o),
(187,-67,o),
(354,-67,cs)
);
},
{
closed = 1;
nodes = (
(218,-5,o),
(109,94,o),
(109,244,cs),
(109,392,o),
(198,494,o),
(355,494,cs),
(495,494,o),
(584,387,o),
(584,252,cs),
(584,81,o),
(467,-5,o),
(353,-5,cs)
);
},
{
closed = 1;
nodes = (
(496,55,o),
(512,59,o),
(512,76,cs),
(512,89,o),
(505,98,o),
(485,98,cs),
(464,98,l),
(455,108,o),
(446,120,o),
(436,133,cs),
(425,146,o),
(415,159,o),
(406,171,cs),
(395,185,o),
(384,199,o),
(373,214,c),
(406,217,o),
(467,244,o),
(467,331,cs),
(467,410,o),
(391,435,o),
(337,435,cs),
(295,435,o),
(249,433,o),
(212,433,cs),
(199,433,o),
(189,427,o),
(189,412,cs),
(189,397,o),
(202,391,o),
(213,391,cs),
(217,391,o),
(220,390,o),
(221,389,cs),
(222,387,o),
(223,381,o),
(223,372,cs),
(223,351,o),
(224,331,o),
(225,314,cs),
(226,296,o),
(226,276,o),
(226,255,cs),
(226,234,o),
(226,214,o),
(225,195,cs),
(224,176,o),
(224,157,o),
(224,136,cs),
(224,117,o),
(221,116,o),
(209,116,cs),
(202,116,o),
(197,108,o),
(197,95,cs),
(197,84,o),
(203,74,o),
(216,74,cs),
(225,74,o),
(237,74,o),
(250,75,cs),
(263,75,o),
(274,75,o),
(283,75,cs),
(291,75,o),
(298,75,o),
(305,75,cs),
(311,74,o),
(318,74,o),
(327,74,cs),
(334,74,o),
(341,83,o),
(341,95,cs),
(341,110,o),
(331,117,o),
(324,117,cs),
(293,117,l),
(293,214,l),
(297,214,l),
(297,214,l),
(345,150,o),
(405,55,o),
(419,55,cs)
);
},
{
closed = 1;
nodes = (
(307,273,o),
(304,273,o),
(300,274,cs),
(296,274,o),
(294,274,o),
(293,274,c),
(293,372,l),
(296,372,o),
(298,372,o),
(301,373,cs),
(308,374,o),
(314,375,o),
(321,375,cs),
(352,375,o),
(397,366,o),
(397,325,cs),
(397,282,o),
(364,273,o),
(308,273,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
93 1 11 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 7 8 12 12 7 96 15 1 14 12 11 12 14 11 104 16 1 11 4 12 11 4 102 0 1 0 2 8 1 2 91 6 1 4 0 5 10 4 5 92 0 9 0 10 3 9 10 91 0 3 0 0 3 0 87 13 1 12 12 8 84 0 8 8 15 12 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
0 7 8 12 12 7 96 15 1 14 12 11 12 14 11 104 16 1 11 4 12 11 4 102 0 1 0 2 8 1 2 91 0 8 13 1 12 14 8 12 91 6 1 4 0 5 10 4 5 92 0 9 0 10 3 9 10 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
40 40 127 125 124 123 122 121 119 117 40 112 40 112 108 105 100 98 116 42 36 132 37 40 40 40 36 17 24
CALL[ ]	/* CallFunction */";
};
width = 692;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(469,-67,o),
(621,40,o),
(621,253,cs),
(621,416,o),
(528,558,o),
(351,558,cs),
(176,558,o),
(47,427,o),
(47,244,cs),
(47,60,o),
(176,-67,o),
(328,-67,cs)
);
},
{
closed = 1;
nodes = (
(195,-35,o),
(83,74,o),
(83,244,cs),
(83,410,o),
(190,524,o),
(348,524,cs),
(512,524,o),
(588,399,o),
(588,252,cs),
(588,60,o),
(457,-35,o),
(329,-35,cs)
);
},
{
closed = 1;
nodes = (
(450,55,o),
(480,56,o),
(480,67,cs),
(480,70,o),
(478,72,o),
(475,75,cs),
(472,77,o),
(466,78,o),
(459,78,cs),
(437,78,l),
(413,105,o),
(384,142,o),
(361,173,cs),
(348,191,o),
(334,210,o),
(321,229,c),
(373,229,o),
(441,257,o),
(441,335,cs),
(441,409,o),
(363,435,o),
(311,435,cs),
(271,435,o),
(229,433,o),
(196,433,cs),
(185,433,o),
(183,428,o),
(183,423,cs),
(183,415,o),
(188,411,o),
(197,411,cs),
(221,411,o),
(227,411,o),
(227,392,cs),
(227,367,o),
(228,345,o),
(229,324,cs),
(230,303,o),
(230,280,o),
(230,255,cs),
(230,230,o),
(230,207,o),
(229,185,cs),
(228,163,o),
(228,140,o),
(228,116,cs),
(228,97,o),
(218,96,o),
(193,96,cs),
(185,96,o),
(181,89,o),
(181,85,cs),
(181,78,o),
(187,74,o),
(199,74,cs),
(207,74,o),
(217,74,o),
(228,75,cs),
(239,75,o),
(249,75,o),
(257,75,cs),
(265,75,o),
(273,75,o),
(281,75,cs),
(289,74,o),
(297,74,o),
(306,74,cs),
(313,74,o),
(314,81,o),
(314,84,cs),
(314,91,o),
(310,97,o),
(303,97,cs),
(267,97,l),
(267,229,l),
(276,229,l),
(297,202,o),
(322,165,o),
(354,120,cs),
(375,90,o),
(399,55,o),
(408,55,cs)
);
},
{
closed = 1;
nodes = (
(281,258,o),
(278,258,o),
(274,259,cs),
(270,259,o),
(268,259,o),
(267,259,c),
(267,402,l),
(270,402,o),
(272,402,o),
(275,403,cs),
(282,404,o),
(288,405,o),
(295,405,cs),
(334,405,o),
(401,394,o),
(401,332,cs),
(401,279,o),
(340,258,o),
(282,258,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
14 1 13 7 15 7 13 96 16 1 15 9 7 15 9 102 17 12 2 9 4 7 9 4 102 0 1 0 2 8 1 2 91 6 1 4 0 5 11 4 5 92 0 10 0 11 3 10 11 91 0 3 0 0 3 0 87 0 7 7 8 83 0 8 8 15 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
14 1 13 7 15 7 13 96 16 1 15 9 7 15 9 102 17 12 2 9 4 7 9 4 102 0 1 0 2 8 1 2 91 0 8 0 7 13 8 7 91 6 1 4 0 5 11 4 5 92 0 10 0 11 3 10 11 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
40 40 125 123 122 121 120 119 117 115 40 110 40 110 106 103 98 96 91 90 115 42 35 132 37 40 40 40 36 18 24
CALL[ ]	/* CallFunction */";
};
width = 670;
}
);
note = registered;
unicode = 174;
},
{
glyphname = trademark;
kernLeft = trademark;
kernRight = trademark;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(536,487,o),
(558,492,o),
(562,509,cs),
(565,524,o),
(572,549,o),
(581,584,cs),
(590,618,o),
(600,662,o),
(612,717,c),
(612,559,ls),
(612,544,o),
(608,542,o),
(595,542,cs),
(586,542,o),
(581,531,o),
(581,518,cs),
(581,497,o),
(591,489,o),
(600,489,cs),
(607,489,o),
(614,489,o),
(623,490,cs),
(632,490,o),
(640,490,o),
(647,490,cs),
(654,490,o),
(663,490,o),
(673,490,cs),
(683,489,o),
(692,489,o),
(699,489,cs),
(706,489,o),
(717,495,o),
(717,514,cs),
(717,533,o),
(705,542,o),
(692,542,cs),
(679,542,l),
(679,565,o),
(677,606,o),
(677,651,cs),
(677,673,o),
(677,691,o),
(678,706,cs),
(678,721,o),
(678,732,o),
(678,741,cs),
(678,752,o),
(679,759,o),
(690,760,cs),
(695,761,o),
(699,761,o),
(703,761,cs),
(706,761,o),
(711,762,o),
(716,763,cs),
(724,764,o),
(730,776,o),
(730,792,cs),
(730,815,o),
(723,821,o),
(704,821,cs),
(632,821,ls),
(613,821,o),
(592,819,o),
(587,804,cs),
(570,752,o),
(540,608,o),
(524,552,c),
(496,650,o),
(465,767,o),
(455,806,cs),
(453,813,o),
(451,818,o),
(449,819,cs),
(447,820,o),
(444,821,o),
(441,821,cs),
(345,821,ls),
(341,821,o),
(326,819,o),
(326,800,cs),
(326,775,o),
(358,786,o),
(358,758,cs),
(358,707,o),
(359,705,o),
(359,652,cs),
(359,637,o),
(359,623,o),
(359,612,cs),
(359,600,o),
(358,587,o),
(357,574,cs),
(356,558,o),
(353,557,o),
(342,557,cs),
(330,557,o),
(328,541,o),
(328,530,cs),
(328,518,o),
(334,504,o),
(345,504,cs),
(352,504,o),
(360,504,o),
(371,505,cs),
(381,505,o),
(390,505,o),
(397,505,cs),
(404,505,o),
(411,505,o),
(418,505,cs),
(425,504,o),
(431,504,o),
(437,504,cs),
(448,504,o),
(453,513,o),
(453,532,cs),
(453,544,o),
(451,557,o),
(436,557,cs),
(424,557,l),
(424,733,l),
(430,706,o),
(466,571,o),
(486,508,cs),
(493,489,o),
(516,487,o),
(524,487,cs)
);
},
{
closed = 1;
nodes = (
(138,504,o),
(148,504,o),
(159,505,cs),
(170,505,o),
(180,505,o),
(187,505,cs),
(194,505,o),
(201,505,o),
(206,505,cs),
(211,504,o),
(217,504,o),
(224,504,cs),
(227,504,o),
(230,505,o),
(233,508,cs),
(236,511,o),
(237,518,o),
(237,529,cs),
(237,548,o),
(232,557,o),
(221,557,cs),
(209,557,l),
(209,762,l),
(241,762,ls),
(256,762,o),
(256,756,o),
(256,749,cs),
(256,733,ls),
(256,722,o),
(270,717,o),
(286,717,cs),
(301,717,o),
(317,724,o),
(317,739,cs),
(317,743,o),
(317,748,o),
(317,755,cs),
(316,762,o),
(316,767,o),
(316,772,cs),
(316,776,o),
(316,781,o),
(317,788,cs),
(317,795,o),
(317,800,o),
(317,804,cs),
(317,819,o),
(293,821,o),
(280,821,cs),
(263,821,o),
(246,821,o),
(229,821,cs),
(212,820,o),
(195,820,o),
(178,820,cs),
(161,820,o),
(143,820,o),
(125,821,cs),
(107,821,o),
(89,821,o),
(72,821,cs),
(59,821,o),
(40,819,o),
(40,804,cs),
(40,800,o),
(40,795,o),
(41,788,cs),
(41,781,o),
(41,776,o),
(41,772,cs),
(41,767,o),
(41,762,o),
(41,755,cs),
(40,748,o),
(40,743,o),
(40,739,cs),
(40,726,o),
(52,719,o),
(67,719,cs),
(86,719,o),
(100,726,o),
(100,739,cs),
(100,752,ls),
(100,757,o),
(103,762,o),
(115,762,cs),
(144,762,l),
(144,762,l),
(144,711,o),
(145,710,o),
(145,659,cs),
(145,643,o),
(145,629,o),
(145,616,cs),
(144,603,o),
(144,589,o),
(144,574,cs),
(144,559,o),
(137,557,o),
(128,557,cs),
(116,557,o),
(115,541,o),
(115,530,cs),
(115,525,o),
(120,504,o),
(131,504,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
164 118 51 18 2 40
CALL[ ]	/* CallFunction */";
};
width = 770;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(526,489,o),
(544,493,o),
(549,509,cs),
(554,525,o),
(563,553,o),
(574,592,cs),
(585,631,o),
(598,678,o),
(613,733,c),
(613,547,ls),
(613,531,o),
(605,530,o),
(589,530,cs),
(578,530,o),
(576,520,o),
(576,511,cs),
(576,496,o),
(583,489,o),
(594,489,cs),
(601,489,o),
(608,489,o),
(617,490,cs),
(626,490,o),
(634,490,o),
(641,490,cs),
(648,490,o),
(657,490,o),
(667,490,cs),
(677,489,o),
(686,489,o),
(693,489,cs),
(700,489,o),
(707,496,o),
(707,508,cs),
(707,523,o),
(700,530,o),
(686,530,cs),
(666,530,l),
(666,553,o),
(664,599,o),
(664,651,cs),
(664,676,o),
(664,697,o),
(665,714,cs),
(665,731,o),
(665,744,o),
(665,753,cs),
(665,762,o),
(665,769,o),
(677,772,cs),
(683,773,o),
(689,773,o),
(694,773,cs),
(699,773,o),
(704,774,o),
(710,775,cs),
(718,776,o),
(723,787,o),
(723,798,cs),
(723,813,o),
(716,821,o),
(702,821,cs),
(636,821,ls),
(617,821,o),
(596,819,o),
(591,804,cs),
(573,750,o),
(562,685,o),
(518,546,c),
(497,622,o),
(458,738,o),
(439,806,cs),
(437,813,o),
(435,818,o),
(433,819,cs),
(431,820,o),
(428,821,o),
(425,821,cs),
(339,821,ls),
(335,821,o),
(320,819,o),
(320,803,cs),
(320,780,o),
(359,792,o),
(359,768,cs),
(359,746,o),
(359,727,o),
(360,711,cs),
(360,695,o),
(360,675,o),
(360,652,cs),
(360,635,o),
(360,619,o),
(360,606,cs),
(360,592,o),
(359,577,o),
(358,562,cs),
(357,546,o),
(351,545,o),
(336,545,cs),
(324,545,o),
(322,532,o),
(322,524,cs),
(322,519,o),
(328,504,o),
(339,504,cs),
(346,504,o),
(354,504,o),
(365,505,cs),
(375,505,o),
(384,505,o),
(391,505,cs),
(398,505,o),
(406,505,o),
(413,505,cs),
(420,504,o),
(427,504,o),
(434,504,cs),
(442,504,o),
(447,513,o),
(447,525,cs),
(447,534,o),
(445,545,o),
(430,545,cs),
(411,545,l),
(411,749,l),
(412,747,o),
(457,590,o),
(487,508,cs),
(494,491,o),
(511,489,o),
(518,489,cs)
);
},
{
closed = 1;
nodes = (
(142,504,o),
(152,504,o),
(163,505,cs),
(174,505,o),
(184,505,o),
(191,505,cs),
(198,505,o),
(206,505,o),
(213,505,cs),
(220,504,o),
(227,504,o),
(234,504,cs),
(241,504,o),
(241,520,o),
(241,523,cs),
(241,538,o),
(236,545,o),
(225,545,cs),
(206,545,l),
(206,774,l),
(252,774,ls),
(267,774,o),
(267,770,o),
(267,755,cs),
(267,743,ls),
(267,727,o),
(278,719,o),
(290,719,cs),
(301,719,o),
(314,724,o),
(314,739,cs),
(314,743,o),
(314,748,o),
(314,755,cs),
(313,762,o),
(313,767,o),
(313,772,cs),
(313,776,o),
(313,781,o),
(314,788,cs),
(314,795,o),
(314,800,o),
(314,804,cs),
(314,819,o),
(297,821,o),
(284,821,cs),
(267,821,o),
(250,821,o),
(233,821,cs),
(216,820,o),
(199,820,o),
(182,820,cs),
(165,820,o),
(147,820,o),
(129,821,cs),
(111,821,o),
(93,821,o),
(76,821,cs),
(63,821,o),
(51,819,o),
(51,804,cs),
(51,800,o),
(51,795,o),
(52,788,cs),
(52,781,o),
(52,776,o),
(52,772,cs),
(52,767,o),
(52,762,o),
(52,755,cs),
(51,748,o),
(51,743,o),
(51,739,cs),
(51,724,o),
(62,720,o),
(73,720,cs),
(88,720,o),
(97,726,o),
(97,743,cs),
(97,755,ls),
(97,770,o),
(97,774,o),
(112,774,cs),
(155,774,l),
(155,774,l),
(155,751,o),
(155,732,o),
(156,717,cs),
(156,701,o),
(156,682,o),
(156,659,cs),
(156,640,o),
(156,624,o),
(156,610,cs),
(155,595,o),
(155,579,o),
(155,562,cs),
(155,546,o),
(155,545,o),
(132,545,cs),
(120,545,o),
(119,532,o),
(119,524,cs),
(119,519,o),
(124,504,o),
(135,504,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
160 93 51 18 2 40
CALL[ ]	/* CallFunction */";
};
width = 761;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(593,489,o),
(600,489,o),
(609,490,cs),
(618,490,o),
(626,490,o),
(633,490,cs),
(640,490,o),
(649,490,o),
(659,490,cs),
(669,489,o),
(678,489,o),
(685,489,cs),
(692,489,o),
(693,495,o),
(693,498,cs),
(693,503,o),
(691,510,o),
(678,510,cs),
(648,510,l),
(648,538,o),
(646,591,o),
(646,651,cs),
(646,681,o),
(646,706,o),
(647,726,cs),
(647,746,o),
(647,762,o),
(647,773,cs),
(647,782,o),
(648,789,o),
(659,792,c),
(667,793,o),
(674,793,o),
(681,793,cs),
(687,793,o),
(694,794,o),
(702,795,cs),
(710,796,o),
(713,805,o),
(713,808,cs),
(713,817,o),
(708,821,o),
(699,821,cs),
(642,821,ls),
(623,821,o),
(602,819,o),
(597,804,cs),
(577,748,o),
(532,597,o),
(510,536,c),
(491,597,o),
(433,754,o),
(416,806,cs),
(414,813,o),
(412,818,o),
(410,819,cs),
(408,820,o),
(405,821,o),
(402,821,cs),
(331,821,ls),
(327,821,o),
(312,821,o),
(312,808,cs),
(312,787,o),
(361,804,o),
(361,785,cs),
(361,763,o),
(361,741,o),
(362,720,cs),
(362,698,o),
(362,675,o),
(362,652,cs),
(362,631,o),
(362,613,o),
(362,596,cs),
(362,579,o),
(361,561,o),
(360,542,cs),
(359,526,o),
(351,525,o),
(328,525,cs),
(322,525,o),
(318,524,o),
(317,521,cs),
(315,518,o),
(314,515,o),
(314,514,cs),
(314,507,o),
(320,504,o),
(331,504,cs),
(338,504,o),
(346,504,o),
(357,505,cs),
(367,505,o),
(376,505,o),
(383,505,cs),
(390,505,o),
(398,505,o),
(407,505,cs),
(415,504,o),
(423,504,o),
(430,504,cs),
(437,504,o),
(438,510,o),
(438,513,cs),
(438,518,o),
(437,525,o),
(422,525,cs),
(393,525,l),
(393,776,l),
(411,726,o),
(462,576,o),
(489,508,cs),
(492,501,o),
(496,496,o),
(501,495,cs),
(505,494,o),
(508,493,o),
(509,493,cs),
(513,493,o),
(524,496,o),
(531,509,cs),
(547,541,o),
(575,650,o),
(615,760,c),
(615,527,ls),
(615,511,o),
(603,510,o),
(580,510,cs),
(569,510,o),
(569,502,o),
(569,499,cs),
(569,492,o),
(575,489,o),
(586,489,cs)
);
},
{
closed = 1;
nodes = (
(134,504,o),
(144,504,o),
(155,505,cs),
(166,505,o),
(176,505,o),
(183,505,cs),
(190,505,o),
(198,505,o),
(205,505,cs),
(212,504,o),
(219,504,o),
(226,504,cs),
(233,504,o),
(233,510,o),
(233,513,cs),
(233,518,o),
(229,525,o),
(217,525,cs),
(188,525,l),
(188,794,l),
(254,794,ls),
(269,794,o),
(269,790,o),
(269,775,cs),
(269,743,ls),
(269,727,o),
(275,722,o),
(282,722,cs),
(286,722,o),
(296,724,o),
(296,739,cs),
(296,743,o),
(296,748,o),
(296,755,cs),
(295,762,o),
(295,767,o),
(295,772,cs),
(295,776,o),
(295,781,o),
(296,788,cs),
(296,795,o),
(296,800,o),
(296,804,cs),
(296,819,o),
(289,821,o),
(276,821,cs),
(259,821,o),
(242,821,o),
(225,821,cs),
(208,820,o),
(191,820,o),
(174,820,cs),
(157,820,o),
(139,820,o),
(121,821,cs),
(103,821,o),
(85,821,o),
(68,821,cs),
(55,821,o),
(53,819,o),
(53,804,cs),
(53,800,o),
(53,795,o),
(54,788,cs),
(54,781,o),
(54,776,o),
(54,772,cs),
(54,767,o),
(54,762,o),
(54,755,cs),
(53,748,o),
(53,743,o),
(53,739,cs),
(53,724,o),
(63,722,o),
(67,722,cs),
(70,722,o),
(73,724,o),
(76,727,cs),
(78,730,o),
(79,735,o),
(79,743,cs),
(79,775,ls),
(79,790,o),
(79,794,o),
(94,794,cs),
(157,794,l),
(157,771,o),
(157,749,o),
(158,727,cs),
(158,704,o),
(158,682,o),
(158,659,cs),
(158,636,o),
(158,617,o),
(158,600,cs),
(157,583,o),
(157,563,o),
(157,542,cs),
(157,526,o),
(147,525,o),
(124,525,cs),
(118,525,o),
(114,524,o),
(113,521,cs),
(112,518,o),
(111,515,o),
(111,514,cs),
(111,507,o),
(116,504,o),
(127,504,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
161 94 52 18 2 40
CALL[ ]	/* CallFunction */";
};
width = 748;
}
);
note = trademark;
unicode = 8482;
},
{
glyphname = degree;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(173,669,o),
(226,694,o),
(226,754,cs),
(226,798,o),
(200,837,o),
(129,837,cs),
(58,837,o),
(30,800,o),
(30,752,cs),
(30,693,o),
(70,669,o),
(121,669,cs)
);
},
{
closed = 1;
nodes = (
(109,722,o),
(101,735,o),
(101,752,cs),
(101,769,o),
(112,782,o),
(127,782,cs),
(146,782,o),
(155,768,o),
(155,753,cs),
(155,734,o),
(148,722,o),
(128,722,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 3 0 0 3 0 87 4 1 2 2 1 83 0 1 1 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 4 1 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
15 14 21 19 14 25 15 25 36 36 5 17
CALL[ ]	/* CallFunction */";
};
width = 253;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(166,669,o),
(215,695,o),
(215,754,cs),
(215,798,o),
(190,837,o),
(126,837,cs),
(63,837,o),
(33,800,o),
(33,752,cs),
(33,696,o),
(71,669,o),
(119,669,cs)
);
},
{
closed = 1;
nodes = (
(101,710,o),
(90,728,o),
(90,752,cs),
(90,776,o),
(102,794,o),
(125,794,cs),
(148,794,o),
(158,774,o),
(158,753,cs),
(158,726,o),
(148,710,o),
(124,710,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 3 0 0 3 0 87 4 1 2 2 1 83 0 1 1 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 4 1 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
15 14 21 19 14 25 15 25 36 36 5 17
CALL[ ]	/* CallFunction */";
};
width = 246;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(156,669,o),
(199,697,o),
(199,754,cs),
(199,798,o),
(173,837,o),
(122,837,cs),
(71,837,o),
(37,800,o),
(37,752,cs),
(37,701,o),
(73,669,o),
(116,669,cs)
);
},
{
closed = 1;
nodes = (
(88,690,o),
(74,716,o),
(74,752,cs),
(74,787,o),
(86,814,o),
(119,814,cs),
(152,814,o),
(162,784,o),
(162,753,cs),
(162,714,o),
(145,690,o),
(116,690,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 3 0 0 3 0 87 4 1 2 2 1 83 0 1 1 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 4 1 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
15 14 21 19 14 25 15 25 36 36 5 17
CALL[ ]	/* CallFunction */";
};
width = 236;
}
);
note = degree;
unicode = 176;
},
{
glyphname = bar;
kernRight = bar;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(163,-161,o),
(173,-155,o),
(173,-128,cs),
(173,34,o),
(172,158,o),
(172,342,cs),
(172,492,o),
(174,653,o),
(174,802,cs),
(174,824,o),
(161,856,o),
(129,856,cs),
(115,856,o),
(83,848,o),
(83,818,cs),
(83,653,o),
(84,531,o),
(84,348,cs),
(84,182,o),
(83,59,o),
(83,-131,cs),
(83,-150,o),
(103,-161,o),
(128,-161,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 1 83 0 1 1 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
32 30 44 2 16
CALL[ ]	/* CallFunction */";
};
width = 257;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(144,-155,o),
(156,-149,o),
(156,-128,cs),
(153,24,o),
(154,193,o),
(154,342,cs),
(154,492,o),
(156,653,o),
(156,802,cs),
(156,822,o),
(147,850,o),
(122,850,cs),
(111,850,o),
(86,844,o),
(86,818,cs),
(86,654,o),
(87,502,o),
(87,348,cs),
(87,182,o),
(86,59,o),
(86,-131,cs),
(86,-146,o),
(102,-155,o),
(121,-155,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 1 83 0 1 1 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
32 30 44 2 16
CALL[ ]	/* CallFunction */";
};
width = 242;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(124,-145,o),
(131,-139,o),
(131,-128,cs),
(128,24,o),
(129,193,o),
(129,342,cs),
(129,492,o),
(131,653,o),
(131,802,cs),
(131,818,o),
(127,840,o),
(112,840,cs),
(105,840,o),
(91,837,o),
(91,818,cs),
(91,654,o),
(92,502,o),
(92,348,cs),
(92,182,o),
(91,59,o),
(91,-131,cs),
(91,-139,o),
(100,-145,o),
(111,-145,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 1 83 0 1 1 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
46 43 2 17
CALL[ ]	/* CallFunction */";
};
width = 221;
}
);
note = bar;
unicode = 124;
},
{
glyphname = brokenbar;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(154,380,o),
(174,387,o),
(174,404,cs),
(174,438,o),
(174,472,o),
(173,506,cs),
(172,540,o),
(172,574,o),
(172,608,cs),
(172,641,o),
(172,676,o),
(173,712,cs),
(174,748,o),
(174,783,o),
(174,817,cs),
(174,830,o),
(159,856,o),
(128,856,cs),
(114,856,o),
(83,839,o),
(83,823,cs),
(83,788,o),
(83,753,o),
(84,717,cs),
(84,680,o),
(84,645,o),
(84,610,cs),
(84,576,o),
(84,541,o),
(84,505,cs),
(83,469,o),
(83,434,o),
(83,400,cs),
(83,385,o),
(103,380,o),
(127,380,cs)
);
},
{
closed = 1;
nodes = (
(154,-162,o),
(172,-155,o),
(172,-123,cs),
(172,-89,o),
(172,-55,o),
(171,-20,cs),
(170,14,o),
(170,48,o),
(170,82,cs),
(170,115,o),
(170,150,o),
(171,187,cs),
(172,223,o),
(172,258,o),
(172,292,cs),
(172,296,o),
(169,301,o),
(162,306,cs),
(155,311,o),
(144,314,o),
(128,314,cs),
(116,314,o),
(83,311,o),
(83,295,cs),
(83,260,o),
(83,225,o),
(84,190,cs),
(84,154,o),
(84,119,o),
(84,84,cs),
(84,50,o),
(84,15,o),
(84,-20,cs),
(83,-56,o),
(83,-91,o),
(83,-125,cs),
(83,-152,o),
(103,-162,o),
(127,-162,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 3 0 2 3 2 87 0 0 0 1 83 0 1 1 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 0 3 1 0 91 0 3 2 2 3 79 0 3 3 2 83 0 2 3 2 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
44 42 44 40 4 19
CALL[ ]	/* CallFunction */";
};
width = 255;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(141,380,o),
(156,387,o),
(156,404,cs),
(156,438,o),
(156,472,o),
(155,506,cs),
(154,540,o),
(154,574,o),
(154,608,cs),
(154,641,o),
(154,676,o),
(155,712,cs),
(156,748,o),
(156,783,o),
(156,817,cs),
(156,828,o),
(144,850,o),
(121,850,cs),
(110,850,o),
(86,836,o),
(86,823,cs),
(87,788,o),
(87,753,o),
(87,717,cs),
(87,680,o),
(87,645,o),
(87,610,cs),
(87,576,o),
(87,541,o),
(87,505,cs),
(86,469,o),
(86,434,o),
(86,400,cs),
(86,385,o),
(101,380,o),
(120,380,cs)
);
},
{
closed = 1;
nodes = (
(141,-156,o),
(154,-150,o),
(154,-123,cs),
(154,-89,o),
(154,-55,o),
(153,-20,cs),
(152,14,o),
(152,48,o),
(152,82,cs),
(152,115,o),
(152,150,o),
(153,187,cs),
(154,223,o),
(154,258,o),
(154,292,cs),
(154,300,o),
(145,314,o),
(121,314,cs),
(110,314,o),
(86,310,o),
(86,295,cs),
(86,260,o),
(86,225,o),
(87,190,cs),
(87,154,o),
(87,119,o),
(87,84,cs),
(87,50,o),
(87,15,o),
(87,-20,cs),
(86,-56,o),
(86,-91,o),
(86,-125,cs),
(86,-148,o),
(101,-156,o),
(120,-156,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 3 0 2 3 2 87 0 0 0 1 83 0 1 1 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 0 3 1 0 91 0 3 2 2 3 79 0 3 3 2 83 0 2 3 2 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
42 42 44 40 4 19
CALL[ ]	/* CallFunction */";
};
width = 241;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(122,380,o),
(131,387,o),
(131,404,cs),
(131,438,o),
(131,472,o),
(130,506,cs),
(129,540,o),
(129,574,o),
(129,608,cs),
(129,641,o),
(129,676,o),
(130,712,cs),
(131,748,o),
(131,783,o),
(131,817,cs),
(131,825,o),
(124,840,o),
(111,840,cs),
(104,840,o),
(91,831,o),
(91,823,cs),
(92,788,o),
(92,753,o),
(92,717,cs),
(92,680,o),
(92,645,o),
(92,610,cs),
(92,576,o),
(92,541,o),
(92,505,cs),
(91,469,o),
(91,434,o),
(91,400,cs),
(91,385,o),
(99,380,o),
(110,380,cs)
);
},
{
closed = 1;
nodes = (
(122,-146,o),
(129,-142,o),
(129,-123,cs),
(129,-89,o),
(129,-55,o),
(128,-20,cs),
(127,14,o),
(127,48,o),
(127,82,cs),
(127,115,o),
(127,150,o),
(128,187,cs),
(129,223,o),
(129,258,o),
(129,292,cs),
(129,300,o),
(124,314,o),
(111,314,cs),
(104,314,o),
(91,310,o),
(91,295,cs),
(91,260,o),
(91,225,o),
(92,190,cs),
(92,154,o),
(92,119,o),
(92,84,cs),
(92,50,o),
(92,15,o),
(92,-20,cs),
(91,-56,o),
(91,-91,o),
(91,-125,cs),
(91,-140,o),
(99,-146,o),
(110,-146,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 3 0 2 3 2 87 0 0 0 1 83 0 1 1 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 0 3 1 0 91 0 3 2 2 3 79 0 3 3 2 83 0 2 3 2 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
42 42 42 40 4 19
CALL[ ]	/* CallFunction */";
};
width = 221;
}
);
note = brokenbar;
unicode = 166;
},
{
glyphname = dagger;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(194,-9,o),
(219,-1,o),
(219,22,cs),
(219,164,o),
(218,248,o),
(218,390,c),
(284,390,ls),
(299,390,o),
(320,401,o),
(320,432,cs),
(320,457,o),
(297,469,o),
(292,469,cs),
(282,469,o),
(271,469,o),
(259,468,cs),
(247,467,o),
(233,466,o),
(218,466,c),
(218,563,o),
(220,690,o),
(220,792,cs),
(220,809,o),
(207,841,o),
(176,841,cs),
(147,841,o),
(129,827,o),
(129,808,cs),
(129,673,o),
(130,596,o),
(130,466,c),
(118,466,o),
(105,466,o),
(92,467,cs),
(78,468,o),
(68,468,o),
(63,468,cs),
(52,468,o),
(30,452,o),
(30,429,cs),
(30,402,o),
(54,389,o),
(63,389,cs),
(130,389,l),
(130,247,o),
(129,159,o),
(129,19,cs),
(129,11,o),
(150,-9,o),
(175,-9,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 5 5 20 67 3 1 1 1 0 83 6 4 7 3 0 0 23 67 0 2 2 24 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
6 4 7 3 0 3 1 1 2 0 1 91 0 5 5 20 67 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
6 4 7 3 0 3 1 1 2 0 1 91 0 5 5 2 83 0 2 2 24 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
1 0 52 51 42 40 33 29 25 23 16 14 7 5 0 53 1 53 8 15
CALL[ ]	/* CallFunction */";
};
width = 350;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(194,-14,o),
(206,-1,o),
(206,12,cs),
(203,143,o),
(204,265,o),
(204,399,c),
(280,399,ls),
(295,399,o),
(309,411,o),
(309,432,cs),
(309,451,o),
(293,460,o),
(288,460,cs),
(277,460,o),
(264,460,o),
(251,459,cs),
(237,458,o),
(221,457,o),
(204,457,c),
(204,554,o),
(206,698,o),
(206,802,cs),
(206,818,o),
(197,847,o),
(172,847,cs),
(153,847,o),
(136,837,o),
(136,818,cs),
(136,678,o),
(137,594,o),
(137,457,c),
(123,457,o),
(108,457,o),
(93,458,cs),
(78,459,o),
(66,459,o),
(59,459,cs),
(48,459,o),
(33,446,o),
(33,429,cs),
(33,410,o),
(50,398,o),
(59,398,cs),
(137,398,l),
(137,249,o),
(136,158,o),
(136,9,cs),
(136,1,o),
(152,-14,o),
(171,-14,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 5 5 20 67 3 1 1 1 0 83 6 4 7 3 0 0 23 67 0 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
6 4 7 3 0 3 1 1 2 0 1 91 0 5 5 20 67 0 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
6 4 7 3 0 3 1 1 2 0 1 91 0 5 5 2 83 0 2 2 21 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
1 0 50 49 42 40 33 29 25 23 16 14 7 5 0 51 1 51 8 15
CALL[ ]	/* CallFunction */";
};
width = 342;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(179,-5,o),
(186,1,o),
(186,12,cs),
(183,153,o),
(184,262,o),
(184,414,c),
(275,414,ls),
(290,414,o),
(294,425,o),
(294,432,cs),
(294,439,o),
(288,445,o),
(283,445,cs),
(270,445,o),
(255,445,o),
(239,444,cs),
(222,443,o),
(204,442,o),
(184,442,c),
(184,542,o),
(186,693,o),
(186,802,cs),
(186,818,o),
(182,840,o),
(167,840,cs),
(160,840,o),
(146,837,o),
(146,818,cs),
(146,672,o),
(147,584,o),
(147,442,c),
(130,442,o),
(113,442,o),
(95,443,cs),
(76,444,o),
(63,444,o),
(54,444,cs),
(43,444,o),
(38,436,o),
(38,429,cs),
(38,422,o),
(45,413,o),
(54,413,cs),
(147,413,l),
(147,259,o),
(146,161,o),
(146,9,cs),
(146,1,o),
(155,-5,o),
(166,-5,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 5 5 20 67 3 1 1 1 0 83 4 6 2 0 0 15 67 0 2 2 16 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
4 6 2 0 3 1 1 2 0 1 91 0 5 5 20 67 0 2 2 16 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
4 6 2 0 3 1 1 2 0 1 91 0 5 5 2 83 0 2 2 16 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
1 0 41 39 32 28 24 22 15 13 7 5 0 50 1 48 7 15
CALL[ ]	/* CallFunction */";
};
width = 331;
}
);
note = dagger;
unicode = 8224;
},
{
glyphname = daggerdbl;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(193,-11,o),
(219,-2,o),
(219,22,cs),
(219,130,o),
(218,177,o),
(218,278,c),
(231,278,o),
(243,278,o),
(255,279,cs),
(266,279,o),
(276,279,o),
(284,279,cs),
(309,279,o),
(320,306,o),
(320,321,cs),
(320,344,o),
(304,358,o),
(292,358,cs),
(282,358,o),
(271,358,o),
(259,357,cs),
(247,356,o),
(233,355,o),
(218,355,c),
(218,446,l),
(231,446,o),
(243,446,o),
(255,447,cs),
(266,447,o),
(276,447,o),
(284,447,cs),
(307,447,o),
(320,474,o),
(320,489,cs),
(320,509,o),
(307,526,o),
(292,526,cs),
(282,526,o),
(271,526,o),
(259,525,cs),
(247,524,o),
(233,523,o),
(218,523,c),
(218,600,o),
(220,698,o),
(220,782,cs),
(220,799,o),
(208,836,o),
(176,836,cs),
(145,836,o),
(129,817,o),
(129,798,cs),
(129,684,o),
(130,628,o),
(130,523,c),
(118,523,o),
(105,523,o),
(92,524,cs),
(78,525,o),
(68,525,o),
(63,525,cs),
(44,525,o),
(30,505,o),
(30,486,cs),
(30,467,o),
(44,446,o),
(63,446,cs),
(130,446,l),
(130,355,l),
(118,355,o),
(105,355,o),
(92,356,cs),
(78,357,o),
(68,357,o),
(63,357,cs),
(43,357,o),
(30,337,o),
(30,318,cs),
(30,299,o),
(43,278,o),
(63,278,cs),
(130,278,l),
(130,175,o),
(129,126,o),
(129,19,cs),
(129,6,o),
(148,-11,o),
(173,-11,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
9 8 2 6 10 1 5 0 6 5 91 11 4 12 3 0 3 1 1 2 0 1 91 0 7 7 20 67 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
9 8 2 6 10 1 5 0 6 5 91 11 4 12 3 0 3 1 1 2 0 1 91 0 7 7 2 83 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 78 77 76 72 68 66 65 64 55 53 46 42 38 36 35 31 27 25 18 16 9 5 0 79 1 79 13 15
CALL[ ]	/* CallFunction */";
};
width = 349;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(194,-25,o),
(206,-11,o),
(206,2,cs),
(205,52,o),
(204,100,o),
(204,147,cs),
(204,193,o),
(204,240,o),
(204,287,c),
(219,287,o),
(233,287,o),
(246,288,cs),
(259,288,o),
(271,288,o),
(280,288,cs),
(295,288,o),
(309,310,o),
(309,321,cs),
(309,336,o),
(293,349,o),
(288,349,cs),
(277,349,o),
(264,349,o),
(251,348,cs),
(237,347,o),
(221,346,o),
(204,346,c),
(204,455,l),
(219,455,o),
(233,455,o),
(246,456,cs),
(259,456,o),
(271,456,o),
(280,456,cs),
(295,456,o),
(309,478,o),
(309,489,cs),
(309,504,o),
(293,517,o),
(288,517,cs),
(277,517,o),
(264,517,o),
(251,516,cs),
(237,515,o),
(221,514,o),
(204,514,c),
(204,563,o),
(204,610,o),
(205,655,cs),
(206,700,o),
(206,749,o),
(206,802,cs),
(206,818,o),
(195,850,o),
(172,850,cs),
(152,850,o),
(136,837,o),
(136,818,cs),
(137,762,o),
(137,710,o),
(137,662,cs),
(137,614,o),
(137,565,o),
(137,514,c),
(123,514,o),
(108,514,o),
(93,515,cs),
(78,516,o),
(66,516,o),
(59,516,cs),
(48,516,o),
(33,501,o),
(33,486,cs),
(33,471,o),
(50,455,o),
(59,455,cs),
(137,455,l),
(137,346,l),
(123,346,o),
(108,346,o),
(93,347,cs),
(78,348,o),
(66,348,o),
(59,348,cs),
(48,348,o),
(33,333,o),
(33,318,cs),
(33,303,o),
(50,287,o),
(59,287,cs),
(137,287,l),
(136,239,o),
(136,192,o),
(136,145,cs),
(136,98,o),
(136,50,o),
(136,-1,cs),
(136,-9,o),
(152,-25,o),
(171,-25,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
9 8 2 6 10 1 5 0 6 5 91 11 4 12 3 0 3 1 1 2 0 1 91 0 7 7 20 67 0 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
9 8 2 6 10 1 5 0 6 5 91 11 4 12 3 0 3 1 1 2 0 1 91 0 7 7 2 83 0 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 7 6 2 7 79 9 8 2 6 10 1 5 0 6 5 91 11 4 12 3 0 3 1 1 2 0 1 91 0 7 7 2 83 0 2 7 2 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 70 69 68 64 60 58 57 56 49 47 42 38 34 32 31 27 23 21 16 14 9 5 0 71 1 71 13 15
CALL[ ]	/* CallFunction */";
};
width = 342;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(179,-15,o),
(186,-9,o),
(186,2,cs),
(185,55,o),
(184,105,o),
(184,154,cs),
(184,203,o),
(184,252,o),
(184,302,c),
(201,302,o),
(218,302,o),
(234,303,cs),
(250,303,o),
(264,303,o),
(275,303,cs),
(290,303,o),
(294,314,o),
(294,321,cs),
(294,328,o),
(288,334,o),
(283,334,cs),
(270,334,o),
(255,334,o),
(239,333,cs),
(222,332,o),
(204,331,o),
(184,331,c),
(184,470,l),
(201,470,o),
(218,470,o),
(234,471,cs),
(250,471,o),
(264,471,o),
(275,471,cs),
(290,471,o),
(294,482,o),
(294,489,cs),
(294,496,o),
(288,502,o),
(283,502,cs),
(270,502,o),
(255,502,o),
(239,501,cs),
(222,500,o),
(204,499,o),
(184,499,c),
(184,580,o),
(186,712,o),
(186,802,cs),
(186,818,o),
(182,840,o),
(167,840,cs),
(160,840,o),
(146,837,o),
(146,818,cs),
(147,759,o),
(147,705,o),
(147,655,cs),
(147,604,o),
(147,552,o),
(147,499,c),
(130,499,o),
(113,499,o),
(95,500,cs),
(76,501,o),
(63,501,o),
(54,501,cs),
(43,501,o),
(38,493,o),
(38,486,cs),
(38,479,o),
(45,470,o),
(54,470,cs),
(147,470,l),
(147,331,l),
(130,331,o),
(113,331,o),
(95,332,cs),
(76,333,o),
(63,333,o),
(54,333,cs),
(43,333,o),
(38,325,o),
(38,318,cs),
(38,311,o),
(45,302,o),
(54,302,cs),
(147,302,l),
(146,251,o),
(146,202,o),
(146,153,cs),
(146,104,o),
(146,52,o),
(146,-1,cs),
(146,-9,o),
(155,-15,o),
(166,-15,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
8 1 6 9 1 5 0 6 5 91 4 10 2 0 3 1 1 2 0 1 91 0 7 7 20 67 0 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
8 1 6 9 1 5 0 6 5 91 4 10 2 0 3 1 1 2 0 1 91 0 7 7 2 83 0 2 2 21 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 67 63 59 55 48 46 41 37 33 31 30 26 22 20 15 13 9 5 0 70 1 68 11 15
CALL[ ]	/* CallFunction */";
};
width = 332;
}
);
note = daggerdbl;
unicode = 8225;
},
{
glyphname = cent;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(304,17,o),
(317,39,o),
(317,55,cs),
(317,65,o),
(317,78,o),
(317,90,cs),
(317,104,o),
(318,126,o),
(318,155,c),
(369,164,o),
(407,190,o),
(464,250,cs),
(471,257,o),
(472,266,o),
(472,277,cs),
(472,296,o),
(460,310,o),
(440,310,cs),
(425,310,o),
(416,306,o),
(397,287,cs),
(366,258,o),
(338,242,o),
(309,231,c),
(309,564,l),
(322,563,o),
(330,561,o),
(335,558,cs),
(339,555,o),
(341,550,o),
(341,544,cs),
(341,527,o),
(318,525,o),
(318,495,cs),
(318,469,o),
(331,441,o),
(377,441,cs),
(442,441,o),
(464,492,o),
(464,525,cs),
(464,582,o),
(402,628,o),
(316,639,c),
(317,660,o),
(317,681,o),
(317,703,cs),
(317,724,o),
(317,747,o),
(317,770,cs),
(317,791,o),
(304,824,o),
(272,824,cs),
(251,824,o),
(224,812,o),
(224,786,cs),
(224,759,o),
(224,733,o),
(225,709,cs),
(225,684,o),
(225,660,o),
(225,637,c),
(105,616,o),
(31,512,o),
(31,386,cs),
(31,267,o),
(87,173,o),
(224,154,c),
(224,54,ls),
(224,35,o),
(243,17,o),
(271,17,cs)
);
},
{
closed = 1;
nodes = (
(152,252,o),
(133,307,o),
(133,383,cs),
(133,467,o),
(157,529,o),
(225,556,c),
(225,447,o),
(225,368,o),
(225,321,cs),
(225,285,o),
(224,255,o),
(224,233,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
85 53 30 14 4 2 1 80 69 54 4 4 0 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 1 1 12 67 4 1 0 0 13 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 1 3 1 2 3 104 0 3 0 1 3 0 102 4 1 0 0 1 83 0 1 1 12 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 2 1 3 1 2 3 104 0 3 0 1 3 0 102 4 1 0 0 1 83 0 1 1 14 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
1 0 61 59 41 39 23 21 0 76 1 76 5 15
CALL[ ]	/* CallFunction */";
};
width = 504;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(290,22,o),
(300,38,o),
(300,59,cs),
(300,158,l),
(363,169,o),
(408,204,o),
(451,257,c),
(458,264,o),
(460,274,o),
(460,282,cs),
(460,297,o),
(451,307,o),
(436,307,cs),
(425,307,o),
(418,304,o),
(405,289,cs),
(374,254,o),
(341,227,o),
(298,218,c),
(298,327,o),
(298,410,o),
(298,466,cs),
(298,510,o),
(299,549,o),
(299,584,c),
(320,583,o),
(334,579,o),
(342,572,cs),
(350,565,o),
(354,559,o),
(354,552,cs),
(354,533,o),
(326,533,o),
(326,502,cs),
(326,479,o),
(339,455,o),
(376,455,cs),
(424,455,o),
(445,494,o),
(445,528,cs),
(445,588,o),
(380,633,o),
(299,641,c),
(300,661,o),
(300,682,o),
(300,703,cs),
(300,724,o),
(300,746,o),
(300,769,cs),
(300,789,o),
(291,817,o),
(266,817,cs),
(255,817,o),
(230,811,o),
(230,785,cs),
(230,758,o),
(230,733,o),
(231,710,cs),
(231,686,o),
(231,662,o),
(231,639,c),
(112,620,o),
(34,513,o),
(34,387,cs),
(34,266,o),
(104,167,o),
(230,156,c),
(230,56,ls),
(230,41,o),
(244,22,o),
(265,22,cs)
);
},
{
closed = 1;
nodes = (
(149,232,o),
(115,294,o),
(115,386,cs),
(115,483,o),
(154,555,o),
(231,578,c),
(231,456,o),
(231,368,o),
(231,315,cs),
(231,277,o),
(230,245,o),
(230,217,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
44 30 2 4 2 78 1 3 4 73 70 20 12 4 1 0 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 2 3 2 4 3 104 0 3 0 2 3 0 102 0 0 1 2 0 1 102 0 2 2 14 67 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 4 2 3 2 4 3 104 0 3 0 2 3 0 102 0 0 1 2 0 1 102 0 1 1 2 83 0 2 2 14 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
65 64 55 53 39 37 43 34 5 17
CALL[ ]	/* CallFunction */";
};
width = 492;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(270,31,o),
(276,38,o),
(276,65,cs),
(276,85,o),
(276,103,o),
(276,119,cs),
(276,134,o),
(276,149,o),
(275,163,c),
(318,171,o),
(359,193,o),
(394,224,cs),
(408,235,o),
(421,250,o),
(433,268,cs),
(440,278,o),
(443,286,o),
(443,291,cs),
(443,298,o),
(439,302,o),
(431,302,cs),
(426,302,o),
(421,299,o),
(417,293,cs),
(401,272,o),
(389,257,o),
(382,250,cs),
(349,215,o),
(316,196,o),
(275,191,c),
(275,264,o),
(272,298,o),
(272,382,cs),
(272,426,o),
(272,467,o),
(273,504,cs),
(274,541,o),
(274,579,o),
(275,617,c),
(324,614,o),
(372,593,o),
(372,566,cs),
(372,544,o),
(338,545,o),
(338,514,cs),
(338,493,o),
(352,478,o),
(375,478,cs),
(400,478,o),
(418,501,o),
(418,533,cs),
(418,596,o),
(356,641,o),
(275,644,c),
(276,663,o),
(276,683,o),
(276,704,cs),
(276,724,o),
(276,745,o),
(276,768,cs),
(276,784,o),
(273,806,o),
(258,806,cs),
(251,806,o),
(238,803,o),
(238,784,cs),
(238,758,o),
(238,733,o),
(239,710,cs),
(239,687,o),
(239,664,o),
(239,642,c),
(122,626,o),
(39,518,o),
(39,389,cs),
(39,262,o),
(124,163,o),
(238,160,c),
(238,59,ls),
(238,40,o),
(244,31,o),
(257,31,cs)
);
},
{
closed = 1;
nodes = (
(145,197,o),
(90,274,o),
(90,391,cs),
(90,508,o),
(147,598,o),
(239,614,c),
(239,388,ls),
(239,328,o),
(238,245,o),
(238,190,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
67 1 2 0 85 1 1 2 79 48 32 3 5 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 2 3 2 1 3 104 0 3 5 2 3 5 102 0 5 4 2 5 4 102 0 0 0 2 1 0 2 91 0 4 4 6 83 0 6 6 14 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 1 2 3 2 1 3 104 0 3 5 2 3 5 102 0 5 4 2 5 4 102 0 6 0 4 6 79 0 0 0 2 1 0 2 91 0 6 6 4 83 0 4 6 4 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
46 18 45 46 27 38 19 7 22
CALL[ ]	/* CallFunction */";
};
width = 475;
}
);
note = cent;
unicode = 162;
},
{
glyphname = currency;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(122,173,o),
(155,216,o),
(163,229,c),
(198,206,o),
(238,197,o),
(279,197,cs),
(315,197,o),
(366,209,o),
(409,241,c),
(419,213,o),
(459,173,o),
(484,173,cs),
(503,173,o),
(518,193,o),
(518,212,cs),
(518,220,o),
(495,245,o),
(452,288,c),
(467,313,o),
(476,344,o),
(476,383,cs),
(476,416,o),
(470,445,o),
(459,471,c),
(498,510,o),
(518,536,o),
(518,541,cs),
(518,560,o),
(511,580,o),
(484,580,cs),
(466,580,o),
(431,544,o),
(416,522,c),
(383,548,o),
(342,561,o),
(293,561,cs),
(242,561,o),
(199,550,o),
(163,526,c),
(162,529,o),
(125,580,o),
(97,580,cs),
(74,580,o),
(64,561,o),
(64,544,cs),
(64,530,o),
(104,489,o),
(118,475,c),
(104,450,o),
(97,418,o),
(97,380,cs),
(97,337,o),
(106,303,o),
(119,278,c),
(101,262,o),
(64,224,o),
(64,210,cs),
(64,186,o),
(72,173,o),
(97,173,cs)
);
},
{
closed = 1;
nodes = (
(249,275,o),
(190,305,o),
(190,379,cs),
(190,446,o),
(239,484,o),
(279,484,cs),
(347,484,o),
(383,445,o),
(383,382,cs),
(383,305,o),
(331,275,o),
(282,275,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
39 34 2 7 3 57 52 21 16 4 6 7 70 3 2 0 6 3 66 4 1 2 3 1 2 79 0 3 0 7 6 3 7 91 9 1 6 8 1 0 1 6 0 91 4 1 2 2 1 83 5 1 1 2 1 71 74 73 1 0 82 80 73 90 74 90 66 64 45 43 38 36 30 28 9 7 0 72 1 72 10 15
CALL[ ]	/* CallFunction */";
};
width = 583;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(106,175,o),
(117,184,o),
(136,207,cs),
(137,209,o),
(140,212,o),
(143,215,cs),
(146,218,o),
(152,224,o),
(159,232,c),
(191,208,o),
(230,197,o),
(270,197,cs),
(305,197,o),
(353,210,o),
(392,242,c),
(403,230,o),
(410,222,o),
(414,217,cs),
(417,212,o),
(421,209,o),
(424,207,c),
(441,184,o),
(454,175,o),
(467,175,cs),
(482,175,o),
(495,190,o),
(495,205,cs),
(495,219,o),
(448,263,o),
(428,283,c),
(445,310,o),
(456,342,o),
(456,383,cs),
(456,418,o),
(449,449,o),
(434,476,c),
(454,494,o),
(495,536,o),
(495,549,cs),
(495,564,o),
(486,579,o),
(467,579,cs),
(454,579,o),
(443,570,o),
(424,547,cs),
(423,545,o),
(420,542,o),
(417,539,cs),
(413,535,o),
(407,529,o),
(399,520,c),
(368,547,o),
(329,561,o),
(283,561,cs),
(234,561,o),
(193,548,o),
(159,522,c),
(152,530,o),
(146,536,o),
(143,539,cs),
(140,542,o),
(137,545,o),
(136,547,cs),
(117,570,o),
(106,579,o),
(93,579,cs),
(74,579,o),
(65,564,o),
(65,549,cs),
(65,534,o),
(100,501,o),
(122,479,c),
(105,452,o),
(96,418,o),
(96,379,cs),
(96,336,o),
(106,301,o),
(122,274,c),
(102,256,o),
(65,217,o),
(65,205,cs),
(65,190,o),
(74,175,o),
(93,175,cs)
);
},
{
closed = 1;
nodes = (
(226,257,o),
(169,297,o),
(169,379,cs),
(169,463,o),
(226,502,o),
(273,502,cs),
(341,502,o),
(383,455,o),
(383,382,cs),
(383,293,o),
(320,257,o),
(272,257,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
74 2 2 6 0 60 55 21 16 4 7 6 41 35 2 3 7 3 66 5 1 1 0 2 1 79 8 1 0 9 1 6 7 0 6 91 0 7 0 3 2 7 3 91 5 1 1 1 2 83 4 1 2 1 2 71 77 76 1 0 87 85 76 93 77 93 69 67 48 46 39 37 30 28 9 7 0 75 1 75 10 15
CALL[ ]	/* CallFunction */";
};
width = 560;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(93,178,o),
(115,198,o),
(153,237,c),
(182,210,o),
(216,197,o),
(257,197,cs),
(292,197,o),
(333,212,o),
(368,244,c),
(414,198,o),
(430,178,o),
(443,178,cs),
(450,178,o),
(462,182,o),
(462,193,cs),
(462,212,o),
(419,249,o),
(394,274,c),
(414,302,o),
(427,339,o),
(427,383,cs),
(427,421,o),
(418,455,o),
(399,485,c),
(420,506,o),
(462,541,o),
(462,562,cs),
(462,573,o),
(450,577,o),
(443,577,cs),
(431,577,o),
(412,556,o),
(375,517,c),
(348,544,o),
(312,561,o),
(269,561,cs),
(226,561,o),
(185,544,o),
(154,516,c),
(135,535,o),
(120,550,o),
(109,561,cs),
(98,572,o),
(90,577,o),
(87,577,cs),
(76,577,o),
(66,569,o),
(66,558,cs),
(66,553,o),
(72,544,o),
(84,531,cs),
(96,518,o),
(111,502,o),
(128,485,c),
(107,456,o),
(95,419,o),
(95,378,cs),
(95,335,o),
(105,298,o),
(126,268,c),
(109,251,o),
(95,237,o),
(84,224,cs),
(72,211,o),
(66,202,o),
(66,197,cs),
(66,186,o),
(76,178,o),
(87,178,cs)
);
},
{
closed = 1;
nodes = (
(198,227,o),
(139,274,o),
(139,379,cs),
(139,478,o),
(201,532,o),
(265,532,cs),
(333,532,o),
(383,474,o),
(383,382,cs),
(383,276,o),
(310,227,o),
(258,227,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
62 49 43 34 29 21 16 3 8 7 6 1 66 5 1 3 4 0 3 79 0 4 8 1 6 7 4 6 91 0 7 0 1 0 7 1 91 5 1 3 3 0 83 2 1 0 3 0 71 65 64 75 73 64 81 65 81 38 36 47 34 38 42 9 21
CALL[ ]	/* CallFunction */";
};
width = 527;
}
);
note = currency;
unicode = 164;
},
{
glyphname = dollar;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(335,-83,o),
(350,-75,o),
(350,-50,cs),
(350,-45,o),
(350,-39,o),
(350,-34,cs),
(349,-29,o),
(349,-23,o),
(349,-18,c),
(451,-10,o),
(566,34,o),
(566,140,cs),
(566,247,o),
(448,313,o),
(348,355,c),
(348,447,o),
(350,552,o),
(350,708,c),
(408,690,o),
(491,606,o),
(502,503,c),
(502,474,o),
(514,444,o),
(545,444,cs),
(574,444,o),
(593,459,o),
(593,478,cs),
(593,499,o),
(593,520,o),
(592,541,cs),
(591,562,o),
(591,583,o),
(591,604,cs),
(591,628,o),
(592,653,o),
(593,678,cs),
(594,703,o),
(595,727,o),
(595,750,cs),
(595,757,o),
(596,789,o),
(550,789,cs),
(511,789,o),
(505,764,o),
(505,748,cs),
(505,743,o),
(506,731,o),
(507,713,cs),
(508,694,o),
(510,664,o),
(513,623,c),
(478,722,o),
(425,773,o),
(350,786,c),
(350,804,ls),
(350,830,o),
(337,858,o),
(305,858,cs),
(284,858,o),
(259,847,o),
(259,820,cs),
(259,786,l),
(158,770,o),
(50,705,o),
(50,569,cs),
(50,408,o),
(123,368,o),
(260,298,c),
(260,255,o),
(260,215,o),
(260,177,cs),
(259,138,o),
(259,99,o),
(259,59,c),
(178,72,o),
(134,122,o),
(134,175,cs),
(134,209,o),
(129,250,o),
(87,250,cs),
(49,250,o),
(42,221,o),
(42,200,cs),
(42,168,o),
(44,135,o),
(44,103,cs),
(44,72,o),
(40,20,o),
(40,2,cs),
(40,-10,o),
(57,-37,o),
(86,-37,cs),
(118,-37,o),
(130,-11,o),
(130,5,cs),
(128,41,ls),
(127,52,o),
(127,64,o),
(127,77,c),
(152,14,o),
(203,-9,o),
(259,-18,c),
(259,-53,ls),
(259,-70,o),
(280,-83,o),
(304,-83,cs)
);
},
{
closed = 1;
nodes = (
(348,106,o),
(348,145,o),
(348,177,cs),
(348,209,o),
(348,237,o),
(348,261,c),
(410,231,o),
(474,193,o),
(474,140,cs),
(474,103,o),
(420,71,o),
(347,60,c)
);
},
{
closed = 1;
nodes = (
(162,430,o),
(142,476,o),
(142,560,cs),
(142,643,o),
(197,686,o),
(259,705,c),
(259,559,o),
(260,454,o),
(260,390,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
128 97 92 69 66 54 6 5 4 141 123 102 44 4 2 5 133 112 41 7 4 5 1 2 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 4 0 5 2 4 5 91 0 2 2 1 83 0 1 1 21 67 6 1 0 0 3 83 0 3 3 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 4 0 5 2 4 5 91 0 2 0 1 0 2 1 91 6 1 0 0 3 83 0 3 3 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 3 4 0 3 79 0 4 0 5 2 4 5 91 0 2 0 1 0 2 1 91 0 3 3 0 83 6 1 0 3 0 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
1 0 90 88 76 74 61 59 32 30 14 12 0 117 1 117 7 15
CALL[ ]	/* CallFunction */";
};
width = 632;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(330,-76,o),
(342,-70,o),
(342,-49,cs),
(342,-44,o),
(342,-38,o),
(342,-33,cs),
(341,-28,o),
(341,-22,o),
(341,-17,c),
(437,-9,o),
(555,34,o),
(555,142,cs),
(555,240,o),
(436,302,o),
(340,342,c),
(340,462,o),
(341,599,o),
(342,726,c),
(418,710,o),
(497,622,o),
(505,508,c),
(505,479,o),
(512,449,o),
(539,449,cs),
(563,449,o),
(575,464,o),
(575,483,cs),
(575,504,o),
(575,524,o),
(574,543,cs),
(573,562,o),
(573,582,o),
(573,603,cs),
(573,627,o),
(574,652,o),
(575,677,cs),
(576,702,o),
(577,726,o),
(577,749,cs),
(577,757,o),
(570,782,o),
(542,782,cs),
(514,782,o),
(508,763,o),
(508,747,cs),
(508,746,o),
(509,736,o),
(510,716,cs),
(511,695,o),
(513,664,o),
(516,622,c),
(480,725,o),
(422,775,o),
(342,786,c),
(342,803,l),
(342,803,l),
(342,823,o),
(333,851,o),
(308,851,cs),
(297,851,o),
(272,845,o),
(272,819,cs),
(272,786,l),
(162,773,o),
(53,705,o),
(53,571,cs),
(53,401,o),
(154,352,o),
(242,311,cs),
(273,296,l),
(273,252,o),
(273,209,o),
(273,168,cs),
(272,127,o),
(272,85,o),
(272,42,c),
(169,53,o),
(116,117,o),
(116,177,cs),
(116,208,o),
(112,246,o),
(79,246,cs),
(50,246,o),
(45,221,o),
(45,202,cs),
(45,170,o),
(47,137,o),
(47,105,cs),
(47,74,o),
(43,22,o),
(43,4,cs),
(43,-5,o),
(55,-29,o),
(78,-29,cs),
(102,-29,o),
(112,-10,o),
(112,6,cs),
(110,44,ls),
(109,55,o),
(109,68,o),
(109,82,c),
(140,17,o),
(207,-10,o),
(272,-17,c),
(272,-52,ls),
(272,-67,o),
(288,-76,o),
(307,-76,cs)
);
},
{
closed = 1;
nodes = (
(340,268,l),
(413,237,o),
(484,197,o),
(484,142,cs),
(484,89,o),
(416,51,o),
(340,43,c)
);
},
{
closed = 1;
nodes = (
(266,373,o),
(259,375,o),
(254,378,cs),
(190,407,o),
(124,439,o),
(124,562,cs),
(124,654,o),
(187,709,o),
(272,724,c),
(273,665,o),
(273,605,o),
(273,545,cs),
(273,484,o),
(273,426,o),
(273,370,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
103 0 2 0 5 124 31 3 3 1 0 132 121 92 34 4 4 1 133 89 57 54 44 5 3 4 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 0 0 1 4 0 1 91 0 4 4 3 83 0 3 3 21 67 0 2 2 5 83 0 5 5 20 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 1 4 0 1 91 0 4 0 3 2 4 3 91 0 2 2 5 83 0 5 5 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 0 2 5 79 0 0 0 1 4 0 1 91 0 4 0 3 2 4 3 91 0 5 5 2 83 0 2 5 2 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
110 108 80 78 64 62 51 49 44 40 6 17
CALL[ ]	/* CallFunction */";
};
width = 619;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(324,-65,o),
(331,-59,o),
(331,-48,cs),
(331,-43,o),
(331,-37,o),
(331,-31,cs),
(330,-26,o),
(330,-20,o),
(330,-15,c),
(417,-10,o),
(539,36,o),
(539,145,cs),
(539,232,o),
(419,284,o),
(329,321,c),
(329,412,o),
(329,492,o),
(329,562,cs),
(329,631,o),
(330,693,o),
(331,756,c),
(430,748,o),
(509,642,o),
(509,517,cs),
(509,488,o),
(511,458,o),
(530,458,cs),
(547,458,o),
(549,473,o),
(549,492,cs),
(549,513,o),
(549,532,o),
(548,547,cs),
(547,562,o),
(547,581,o),
(547,602,cs),
(547,626,o),
(548,651,o),
(549,676,cs),
(550,701,o),
(551,725,o),
(551,748,cs),
(551,757,o),
(544,771,o),
(531,771,cs),
(518,771,o),
(512,763,o),
(512,746,cs),
(512,745,o),
(513,735,o),
(514,715,cs),
(515,694,o),
(517,663,o),
(520,621,c),
(481,729,o),
(419,781,o),
(331,786,c),
(331,802,ls),
(331,818,o),
(327,840,o),
(312,840,cs),
(305,840,o),
(291,837,o),
(291,818,cs),
(291,786,l),
(170,778,o),
(57,705,o),
(57,574,cs),
(57,384,o),
(195,329,o),
(292,293,c),
(292,246,o),
(292,200,o),
(292,154,cs),
(291,107,o),
(291,61,o),
(291,14,c),
(160,22,o),
(90,100,o),
(90,180,cs),
(90,209,o),
(87,239,o),
(68,239,cs),
(51,239,o),
(49,224,o),
(49,205,cs),
(49,173,o),
(51,140,o),
(51,108,cs),
(51,77,o),
(47,25,o),
(47,7,cs),
(47,-2,o),
(54,-16,o),
(67,-16,cs),
(80,-16,o),
(86,-8,o),
(86,9,c),
(85,13,o),
(85,17,o),
(85,22,cs),
(85,26,o),
(85,30,o),
(85,35,cs),
(84,40,o),
(84,45,o),
(84,50,cs),
(83,62,o),
(83,76,o),
(83,91,c),
(119,22,o),
(212,-12,o),
(291,-15,c),
(291,-51,ls),
(291,-59,o),
(300,-65,o),
(311,-65,cs)
);
},
{
closed = 1;
nodes = (
(329,59,o),
(329,103,o),
(329,147,cs),
(329,191,o),
(329,235,o),
(329,279,c),
(412,244,o),
(498,207,o),
(498,145,cs),
(498,69,o),
(418,20,o),
(330,15,c)
);
},
{
closed = 1;
nodes = (
(202,372,o),
(98,421,o),
(98,565,cs),
(98,670,o),
(173,744,o),
(291,755,c),
(291,635,o),
(292,475,o),
(292,336,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
116 82 57 3 7 6 126 111 87 36 4 1 7 0 1 2 1 7 1 0 2 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
5 1 3 4 6 4 3 6 104 0 6 0 7 1 6 7 91 0 1 1 0 83 10 8 2 0 0 21 67 11 1 2 2 0 84 10 8 2 0 0 21 67 0 9 9 4 83 0 4 4 20 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
5 1 3 4 6 4 3 6 104 0 6 0 7 1 6 7 91 0 4 0 9 4 9 87 0 1 1 0 83 10 8 2 0 0 21 67 11 1 2 2 0 84 10 8 2 0 0 21 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
130 129 107 106 103 101 97 96 42 38 19 35 28 22 46 40 12 23
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = dollar;
unicode = 36;
},
{
glyphname = euro;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(497,-14,o),
(559,11,o),
(596,45,cs),
(632,79,o),
(645,123,o),
(645,166,cs),
(645,185,o),
(642,211,o),
(607,211,cs),
(564,211,o),
(571,173,o),
(562,149,cs),
(539,82,o),
(476,66,o),
(395,66,cs),
(306,66,o),
(231,141,o),
(218,245,c),
(239,245,o),
(259,245,o),
(280,246,cs),
(300,246,o),
(315,246,o),
(326,246,cs),
(353,246,o),
(362,269,o),
(362,289,cs),
(362,308,o),
(349,327,o),
(334,327,cs),
(323,327,o),
(308,327,o),
(291,326,cs),
(273,325,o),
(255,324,o),
(237,324,cs),
(214,324,l),
(210,349,o),
(209,376,o),
(209,404,cs),
(209,411,l),
(231,411,o),
(253,411,o),
(276,412,cs),
(298,412,o),
(315,412,o),
(326,412,cs),
(353,412,o),
(362,438,o),
(362,455,cs),
(362,474,o),
(349,493,o),
(334,493,cs),
(323,493,o),
(308,493,o),
(291,492,cs),
(273,491,o),
(255,490,o),
(237,490,cs),
(211,490,l),
(211,592,o),
(262,759,o),
(414,759,cs),
(523,759,o),
(557,700,o),
(557,620,cs),
(557,577,o),
(563,545,o),
(607,545,cs),
(635,545,o),
(648,575,o),
(648,595,cs),
(648,779,o),
(535,838,o),
(411,838,cs),
(324,838,o),
(258,806,o),
(210,747,cs),
(162,687,o),
(131,600,o),
(115,491,c),
(104,491,o),
(95,491,o),
(86,492,cs),
(77,492,o),
(70,492,o),
(65,492,cs),
(42,492,o),
(32,471,o),
(32,452,cs),
(32,435,o),
(46,411,o),
(65,411,cs),
(113,411,l),
(113,405,ls),
(113,374,o),
(115,349,o),
(118,325,c),
(107,325,o),
(96,325,o),
(87,326,cs),
(78,326,o),
(70,326,o),
(65,326,cs),
(42,326,o),
(32,305,o),
(32,286,cs),
(32,269,o),
(46,245,o),
(65,245,cs),
(126,245,l),
(151,82,o),
(253,-14,o),
(398,-14,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 6 7 4 7 6 4 104 0 13 1 12 1 13 12 104 10 1 2 11 1 1 13 2 1 91 0 7 7 5 83 0 5 5 20 67 9 1 3 3 4 83 8 1 4 4 23 67 0 12 12 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 6 7 4 7 6 4 104 0 13 1 12 1 13 12 104 8 1 4 9 1 3 2 4 3 91 10 1 2 11 1 1 13 2 1 91 0 7 7 5 83 0 5 5 20 67 0 12 12 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 6 7 4 7 6 4 104 0 13 1 12 1 13 12 104 0 5 0 7 6 5 7 91 8 1 4 9 1 3 2 4 3 91 10 1 2 11 1 1 13 2 1 91 0 12 12 0 83 0 0 0 21 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
110 108 100 98 94 90 84 79 75 71 84 40 40 36 68 36 68 34 36 14 24
CALL[ ]	/* CallFunction */";
};
width = 682;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(564,-14,o),
(617,81,o),
(617,166,cs),
(617,185,o),
(614,205,o),
(589,205,cs),
(559,205,o),
(559,169,o),
(556,149,c),
(532,69,o),
(468,48,o),
(384,48,cs),
(275,48,o),
(206,137,o),
(190,254,c),
(215,254,o),
(239,254,o),
(264,255,cs),
(288,255,o),
(306,255,o),
(319,255,cs),
(342,255,o),
(348,278,o),
(348,289,cs),
(348,304,o),
(338,318,o),
(327,318,cs),
(314,318,o),
(296,318,o),
(275,317,cs),
(253,316,o),
(231,315,o),
(209,315,cs),
(186,315,l),
(182,343,o),
(181,373,o),
(181,404,cs),
(181,420,l),
(207,420,o),
(233,420,o),
(260,421,cs),
(286,421,o),
(306,421,o),
(319,421,cs),
(342,421,o),
(348,444,o),
(348,455,cs),
(348,470,o),
(338,484,o),
(327,484,cs),
(314,484,o),
(296,484,o),
(275,483,cs),
(253,482,o),
(231,481,o),
(209,481,cs),
(183,481,l),
(188,613,o),
(249,777,o),
(398,777,cs),
(506,777,o),
(550,711,o),
(550,620,cs),
(550,579,o),
(555,551,o),
(588,551,cs),
(612,551,o),
(620,576,o),
(620,595,cs),
(620,780,o),
(510,838,o),
(396,838,cs),
(313,838,o),
(247,803,o),
(199,741,cs),
(151,679,o),
(121,590,o),
(108,482,c),
(97,482,o),
(88,482,o),
(79,483,cs),
(70,483,o),
(63,483,o),
(58,483,cs),
(39,483,o),
(32,467,o),
(32,452,cs),
(32,439,o),
(43,420,o),
(58,420,cs),
(106,420,l),
(106,405,ls),
(106,372,o),
(108,343,o),
(111,316,c),
(100,316,o),
(89,316,o),
(80,317,cs),
(71,317,o),
(63,317,o),
(58,317,cs),
(39,317,o),
(32,301,o),
(32,286,cs),
(32,273,o),
(43,254,o),
(58,254,cs),
(118,254,l),
(145,76,o),
(249,-14,o),
(383,-14,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 6 7 4 7 6 4 104 0 13 1 12 1 13 12 104 10 1 2 11 1 1 13 2 1 91 0 7 7 5 83 0 5 5 20 67 9 1 3 3 4 83 8 1 4 4 23 67 0 12 12 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 6 7 4 7 6 4 104 0 13 1 12 1 13 12 104 8 1 4 9 1 3 2 4 3 91 10 1 2 11 1 1 13 2 1 91 0 7 7 5 83 0 5 5 20 67 0 12 12 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 6 7 4 7 6 4 104 0 13 1 12 1 13 12 104 0 5 0 7 6 5 7 91 8 1 4 9 1 3 2 4 3 91 10 1 2 11 1 1 13 2 1 91 0 12 12 0 83 0 0 0 21 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
108 106 98 96 92 88 84 79 75 71 84 40 38 36 68 36 68 36 36 14 24
CALL[ ]	/* CallFunction */";
};
width = 657;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(515,-14,o),
(577,78,o),
(577,166,cs),
(577,185,o),
(572,195,o),
(563,195,cs),
(549,195,o),
(549,165,o),
(546,149,cs),
(522,43,o),
(456,18,o),
(369,18,cs),
(237,18,o),
(172,120,o),
(150,269,c),
(215,269,o),
(263,270,o),
(309,270,cs),
(324,270,o),
(328,282,o),
(328,289,cs),
(328,296,o),
(322,303,o),
(317,303,cs),
(301,303,o),
(279,303,o),
(252,302,cs),
(225,301,o),
(197,300,o),
(169,300,cs),
(146,300,l),
(142,333,o),
(141,368,o),
(141,404,cs),
(141,435,l),
(210,435,o),
(266,436,o),
(309,436,cs),
(324,436,o),
(328,448,o),
(328,455,cs),
(328,462,o),
(322,469,o),
(317,469,cs),
(301,469,o),
(279,469,o),
(252,468,cs),
(225,467,o),
(197,466,o),
(169,466,cs),
(143,466,l),
(156,651,o),
(235,807,o),
(375,807,cs),
(483,807,o),
(540,729,o),
(540,620,cs),
(540,591,o),
(542,561,o),
(561,561,cs),
(578,561,o),
(580,576,o),
(580,595,cs),
(580,777,o),
(476,838,o),
(374,838,cs),
(297,838,o),
(232,799,o),
(185,732,cs),
(137,665,o),
(106,572,o),
(98,467,c),
(87,467,o),
(78,467,o),
(69,468,cs),
(60,468,o),
(53,468,o),
(48,468,cs),
(37,468,o),
(32,459,o),
(32,452,cs),
(32,445,o),
(39,435,o),
(48,435,cs),
(96,435,l),
(96,405,ls),
(96,366,o),
(98,333,o),
(101,301,c),
(90,301,o),
(79,301,o),
(70,302,cs),
(61,302,o),
(53,302,o),
(48,302,cs),
(37,302,o),
(32,293,o),
(32,286,cs),
(32,279,o),
(39,269,o),
(48,269,cs),
(106,269,l),
(122,169,o),
(155,99,o),
(200,53,cs),
(244,7,o),
(301,-14,o),
(361,-14,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 6 7 4 7 6 4 104 0 13 1 12 1 13 12 104 10 1 2 11 1 1 13 2 1 91 0 7 7 5 83 0 5 5 20 67 9 1 3 3 4 83 8 1 4 4 23 67 0 12 12 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 6 7 4 7 6 4 104 0 13 1 12 1 13 12 104 8 1 4 9 1 3 2 4 3 91 10 1 2 11 1 1 13 2 1 91 0 7 7 5 83 0 5 5 20 67 0 12 12 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 6 7 4 7 6 4 104 0 13 1 12 1 13 12 104 0 5 0 7 6 5 7 91 8 1 4 9 1 3 2 4 3 91 10 1 2 11 1 1 13 2 1 91 0 12 12 0 83 0 0 0 21 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
110 108 100 98 94 88 84 79 75 69 84 38 38 36 68 36 68 36 36 14 24
CALL[ ]	/* CallFunction */";
};
width = 621;
}
);
note = Euro;
unicode = 8364;
},
{
glyphname = sterling;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(569,0,ls),
(584,0,o),
(602,2,o),
(603,29,cs),
(604,64,o),
(606,96,o),
(609,123,cs),
(612,150,o),
(613,175,o),
(613,200,cs),
(613,215,o),
(604,236,o),
(576,236,cs),
(541,236,o),
(537,201,o),
(534,170,cs),
(534,155,o),
(526,131,o),
(526,115,c),
(522,88,o),
(507,84,o),
(486,84,cs),
(221,84,l),
(221,84,o),
(235,98,o),
(244,118,cs),
(255,141,o),
(266,175,o),
(266,226,cs),
(266,363,l),
(286,363,o),
(305,363,o),
(322,364,cs),
(339,364,o),
(352,364,o),
(363,364,cs),
(378,364,o),
(399,377,o),
(399,404,cs),
(399,418,o),
(395,428,o),
(387,435,cs),
(379,442,o),
(374,445,o),
(371,445,cs),
(359,445,o),
(344,445,o),
(325,444,cs),
(306,443,o),
(287,443,o),
(266,442,c),
(266,577,l),
(266,577,l),
(266,686,o),
(297,760,o),
(358,760,cs),
(423,760,o),
(466,678,o),
(466,653,cs),
(466,635,o),
(470,602,o),
(507,602,cs),
(541,602,o),
(546,623,o),
(546,639,cs),
(546,652,o),
(546,664,o),
(545,677,cs),
(544,690,o),
(544,702,o),
(544,715,cs),
(544,730,o),
(545,743,o),
(546,756,cs),
(547,768,o),
(547,781,o),
(547,796,cs),
(547,804,o),
(539,831,o),
(505,831,cs),
(492,831,o),
(483,828,o),
(478,823,cs),
(473,817,o),
(470,812,o),
(470,808,cs),
(470,800,o),
(471,781,o),
(473,756,c),
(459,793,o),
(423,838,o),
(357,838,cs),
(224,838,o),
(172,730,o),
(172,577,cs),
(172,558,o),
(173,537,o),
(174,516,cs),
(175,495,o),
(176,470,o),
(176,442,c),
(145,443,o),
(114,444,o),
(102,444,cs),
(89,444,o),
(69,436,o),
(69,404,cs),
(69,371,o),
(91,363,o),
(102,363,cs),
(175,363,l),
(174,331,o),
(174,306,o),
(173,287,cs),
(172,268,o),
(172,252,o),
(172,241,cs),
(172,107,o),
(131,76,o),
(80,76,cs),
(57,76,o),
(29,63,o),
(29,32,cs),
(29,17,o),
(46,0,o),
(69,0,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
83 1 10 11 27 22 2 2 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 3 1 2 1 3 2 104 0 11 11 8 83 9 1 8 8 20 67 0 10 10 8 83 9 1 8 8 20 67 6 1 1 1 0 83 7 1 0 0 15 67 5 1 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 3 1 2 1 3 2 104 7 1 0 6 1 1 3 0 1 91 0 11 11 8 83 9 1 8 8 20 67 0 10 10 8 83 9 1 8 8 20 67 5 1 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 3 1 2 1 3 2 104 0 5 2 4 2 5 96 7 1 0 6 1 1 3 0 1 91 0 11 11 8 83 9 1 8 8 20 67 0 10 10 8 83 9 1 8 8 20 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 3 1 2 1 3 2 104 0 5 2 4 2 5 96 7 1 0 6 1 1 3 0 1 91 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 20 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 3 1 2 1 3 2 104 0 5 2 4 2 5 96 0 8 0 11 10 8 11 91 0 9 0 10 0 9 10 91 7 1 0 6 1 1 3 0 1 91 0 2 2 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
118 116 108 106 92 90 39 72 39 36 55 43 38 68 64 12 24
CALL[ ]	/* CallFunction */";
};
width = 651;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(551,0,ls),
(574,0,o),
(584,6,o),
(584,29,cs),
(587,64,o),
(589,96,o),
(592,123,cs),
(594,150,o),
(595,175,o),
(595,200,cs),
(595,215,o),
(583,230,o),
(564,230,cs),
(532,230,o),
(528,201,o),
(528,170,cs),
(528,157,o),
(522,104,o),
(520,97,c),
(517,74,o),
(503,66,o),
(480,66,cs),
(194,66,l),
(202,75,o),
(209,86,o),
(216,99,cs),
(227,122,o),
(239,157,o),
(239,208,cs),
(239,373,l),
(317,373,ls),
(332,373,o),
(346,386,o),
(346,405,cs),
(346,425,o),
(330,436,o),
(325,436,cs),
(315,436,o),
(303,436,o),
(288,435,cs),
(273,434,o),
(256,434,o),
(239,433,c),
(239,577,l),
(239,577,l),
(239,691,o),
(272,778,o),
(352,778,cs),
(423,778,o),
(460,700,o),
(460,653,cs),
(460,637,o),
(466,608,o),
(494,608,cs),
(519,608,o),
(524,627,o),
(524,639,cs),
(524,652,o),
(524,664,o),
(523,677,cs),
(522,690,o),
(522,702,o),
(522,715,cs),
(522,730,o),
(523,745,o),
(524,762,cs),
(525,779,o),
(525,794,o),
(525,809,cs),
(525,812,o),
(523,816,o),
(519,821,cs),
(515,826,o),
(505,828,o),
(490,828,cs),
(471,828,o),
(464,817,o),
(464,808,c),
(464,808,o),
(465,786,o),
(467,756,c),
(453,793,o),
(417,838,o),
(351,838,cs),
(218,838,o),
(166,730,o),
(166,577,cs),
(166,557,o),
(167,536,o),
(168,513,cs),
(169,490,o),
(170,463,o),
(170,433,c),
(128,433,o),
(84,435,o),
(56,435,cs),
(45,435,o),
(30,428,o),
(30,404,cs),
(30,380,o),
(47,372,o),
(56,372,cs),
(170,372,l),
(169,332,o),
(169,300,o),
(168,277,cs),
(167,254,o),
(166,236,o),
(166,223,cs),
(166,89,o),
(125,58,o),
(74,58,cs),
(51,58,o),
(30,47,o),
(30,24,cs),
(30,12,o),
(40,0,o),
(63,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
82 1 11 8 77 1 10 11 34 1 4 2 3 66
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
82 1 11 9 77 1 10 11 34 1 4 2 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
82 1 11 9 77 1 10 11 34 1 4 5 3 66
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 3 1 2 1 3 2 104 0 11 11 8 83 9 1 8 8 20 67 0 10 10 8 83 9 1 8 8 20 67 6 1 1 1 0 83 7 1 0 0 15 67 5 1 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 3 1 2 1 3 2 104 7 1 0 6 1 1 3 0 1 91 0 11 11 8 83 9 1 8 8 20 67 0 10 10 8 83 9 1 8 8 20 67 5 1 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 3 1 2 1 3 2 104 7 1 0 6 1 1 3 0 1 91 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 12 67 5 1 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 3 1 2 1 3 2 104 0 5 2 4 2 5 96 7 1 0 6 1 1 3 0 1 91 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 12 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 3 1 2 1 3 2 104 0 5 2 4 2 5 96 0 8 0 11 10 8 11 91 0 9 0 10 0 9 10 91 7 1 0 6 1 1 3 0 1 91 0 2 2 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
108 106 98 96 86 84 39 100 39 36 55 41 38 36 64 12 24
CALL[ ]	/* CallFunction */";
};
width = 626;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(513,0,ls),
(533,0,o),
(543,6,o),
(546,29,cs),
(549,64,o),
(551,96,o),
(554,123,cs),
(556,150,o),
(557,175,o),
(557,200,cs),
(557,215,o),
(545,220,o),
(538,220,cs),
(530,220,o),
(525,216,o),
(523,207,cs),
(521,198,o),
(520,185,o),
(520,170,cs),
(520,144,o),
(513,72,o),
(512,67,cs),
(509,44,o),
(495,36,o),
(472,36,cs),
(156,36,l),
(164,45,o),
(171,56,o),
(178,69,cs),
(189,92,o),
(201,127,o),
(201,178,cs),
(201,387,l),
(223,387,o),
(244,387,o),
(263,388,cs),
(282,388,o),
(298,388,o),
(309,388,cs),
(324,388,o),
(328,400,o),
(328,407,cs),
(328,414,o),
(322,421,o),
(317,421,cs),
(304,421,o),
(287,421,o),
(266,420,cs),
(245,419,o),
(224,419,o),
(201,418,c),
(201,577,ls),
(201,712,o),
(240,808,o),
(344,808,cs),
(422,808,o),
(452,744,o),
(452,653,cs),
(452,636,o),
(458,618,o),
(469,618,cs),
(480,618,o),
(486,627,o),
(486,639,cs),
(486,652,o),
(486,664,o),
(485,677,cs),
(484,690,o),
(484,702,o),
(484,715,cs),
(484,730,o),
(485,745,o),
(486,762,cs),
(487,779,o),
(487,794,o),
(487,809,cs),
(487,816,o),
(484,823,o),
(472,823,cs),
(461,823,o),
(456,818,o),
(456,808,c),
(456,808,o),
(457,786,o),
(459,756,c),
(445,793,o),
(409,838,o),
(343,838,cs),
(210,838,o),
(158,730,o),
(158,577,cs),
(158,555,o),
(159,531,o),
(160,506,cs),
(161,480,o),
(162,451,o),
(162,418,c),
(120,418,o),
(76,420,o),
(48,420,cs),
(37,420,o),
(32,411,o),
(32,404,cs),
(32,397,o),
(39,387,o),
(48,387,cs),
(162,387,l),
(161,334,o),
(161,292,o),
(160,262,cs),
(159,231,o),
(158,208,o),
(158,193,cs),
(158,59,o),
(117,28,o),
(66,28,cs),
(43,28,o),
(31,22,o),
(31,11,cs),
(31,8,o),
(32,5,o),
(35,3,cs),
(37,1,o),
(44,0,o),
(55,0,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
78 1 10 11 1 66 83 1 11 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 3 1 2 1 3 2 104 0 5 2 4 2 5 96 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 12 67 6 1 1 1 0 83 7 1 0 0 15 67 0 2 2 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 3 1 2 1 3 2 104 0 5 2 4 2 5 96 7 1 0 6 1 1 3 0 1 91 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 12 67 0 2 2 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 3 1 2 1 3 2 104 0 5 2 4 2 5 96 0 8 0 11 10 8 11 91 7 1 0 6 1 1 3 0 1 91 0 10 10 9 83 0 9 9 14 67 0 2 2 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
106 104 98 96 86 84 39 100 39 35 55 41 38 68 64 12 24
CALL[ ]	/* CallFunction */";
};
width = 590;
}
);
note = sterling;
unicode = 163;
},
{
glyphname = yen;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(507,0,ls),
(530,0,o),
(545,4,o),
(545,31,cs),
(545,58,o),
(519,63,o),
(494,63,cs),
(428,63,l),
(428,88,o),
(428,116,o),
(428,146,cs),
(427,175,o),
(427,203,o),
(427,230,c),
(517,230,ls),
(546,230,o),
(553,257,o),
(553,272,cs),
(553,292,o),
(540,309,o),
(525,309,cs),
(514,309,o),
(499,309,o),
(482,308,cs),
(464,307,o),
(445,307,o),
(425,306,c),
(425,334,l),
(435,357,l),
(452,357,o),
(467,357,o),
(482,358,cs),
(496,358,o),
(508,358,o),
(517,358,cs),
(546,358,o),
(553,385,o),
(553,400,cs),
(553,420,o),
(540,437,o),
(525,437,cs),
(518,437,o),
(511,437,o),
(502,437,cs),
(493,436,o),
(483,436,o),
(473,436,c),
(492,474,o),
(512,513,o),
(533,554,cs),
(554,595,o),
(575,635,o),
(595,674,cs),
(610,701,o),
(617,705,o),
(644,712,cs),
(652,714,o),
(716,718,o),
(730,718,cs),
(743,718,o),
(767,722,o),
(767,745,cs),
(767,772,o),
(751,775,o),
(727,775,cs),
(487,775,ls),
(454,775,o),
(445,767,o),
(445,744,cs),
(445,721,o),
(460,714,o),
(487,714,cs),
(495,714,o),
(507,713,o),
(507,698,cs),
(507,664,o),
(426,509,o),
(387,440,c),
(363,489,o),
(353,512,o),
(311,601,cs),
(275,677,o),
(257,720,o),
(257,731,cs),
(257,762,o),
(329,742,o),
(329,783,cs),
(329,799,o),
(314,813,o),
(290,813,cs),
(62,813,ls),
(39,813,o),
(16,804,o),
(16,783,cs),
(16,760,o),
(41,752,o),
(65,749,cs),
(98,746,o),
(122,741,o),
(135,736,cs),
(148,731,o),
(157,723,o),
(162,712,cs),
(227,590,o),
(243,554,o),
(297,435,c),
(288,435,o),
(279,435,o),
(272,436,cs),
(265,436,o),
(259,436,o),
(256,436,cs),
(233,436,o),
(223,416,o),
(223,397,cs),
(223,378,o),
(237,357,o),
(256,357,cs),
(333,357,l),
(334,352,o),
(335,345,o),
(336,338,cs),
(336,330,o),
(336,319,o),
(337,306,c),
(304,307,o),
(269,308,o),
(256,308,cs),
(233,308,o),
(223,288,o),
(223,269,cs),
(223,250,o),
(237,229,o),
(256,229,cs),
(337,229,l),
(337,109,ls),
(337,76,o),
(312,67,o),
(277,63,cs),
(240,59,o),
(229,49,o),
(229,30,cs),
(229,3,o),
(246,0,o),
(283,0,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
7 1 4 0 54 1 6 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 1 3 2 2 0 4 1 0 91 11 1 6 10 1 7 8 6 7 91 0 14 14 14 67 12 1 5 5 4 83 13 1 4 4 15 67 0 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 1 3 2 2 0 4 1 0 91 13 1 4 12 1 5 6 4 5 92 11 1 6 10 1 7 8 6 7 91 0 14 14 14 67 0 8 8 9 83 0 9 9 13 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
127 124 111 107 103 101 98 94 90 88 79 76 35 38 66 70 72 17 36 52 46 15 24
CALL[ ]	/* CallFunction */";
};
width = 791;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(510,0,ls),
(523,0,o),
(535,5,o),
(535,28,cs),
(535,48,o),
(515,51,o),
(500,51,cs),
(414,51,l),
(414,107,o),
(413,178,o),
(412,235,cs),
(411,268,o),
(411,301,o),
(411,334,c),
(451,425,o),
(532,581,o),
(589,687,cs),
(601,710,o),
(609,722,o),
(638,725,cs),
(637,725,o),
(687,731,o),
(726,731,cs),
(739,731,o),
(756,736,o),
(756,752,cs),
(756,776,o),
(735,776,o),
(723,776,cs),
(481,776,ls),
(450,776,o),
(442,767,o),
(442,751,cs),
(442,732,o),
(460,727,o),
(481,727,cs),
(498,727,o),
(522,727,o),
(522,711,cs),
(522,693,o),
(491,635,o),
(461,576,cs),
(428,512,o),
(395,454,o),
(385,423,c),
(372,453,o),
(339,519,o),
(301,598,cs),
(259,684,o),
(237,732,o),
(237,743,cs),
(237,776,o),
(319,753,o),
(319,789,cs),
(319,804,o),
(307,813,o),
(283,813,cs),
(55,813,ls),
(32,813,o),
(20,805,o),
(20,789,cs),
(20,770,o),
(37,767,o),
(56,767,cs),
(101,767,o),
(146,759,o),
(158,735,cs),
(191,664,o),
(222,606,o),
(248,554,cs),
(272,505,o),
(302,445,o),
(342,355,c),
(342,94,ls),
(342,50,o),
(308,48,o),
(288,48,cs),
(262,48,o),
(249,41,o),
(249,26,cs),
(249,5,o),
(271,0,o),
(300,0,cs)
);
},
{
closed = 1;
nodes = (
(327,238,o),
(434,239,o),
(513,239,cs),
(536,239,o),
(542,261,o),
(542,272,cs),
(542,287,o),
(532,300,o),
(521,300,cs),
(505,300,o),
(483,300,o),
(456,299,cs),
(429,298,o),
(401,297,o),
(373,297,cs),
(331,297,o),
(282,299,o),
(252,299,cs),
(233,299,o),
(226,284,o),
(226,269,cs),
(226,254,o),
(237,238,o),
(252,238,cs)
);
},
{
closed = 1;
nodes = (
(367,366,l),
(355,425,l),
(355,425,l),
(315,425,o),
(276,427,o),
(252,427,cs),
(233,427,o),
(226,412,o),
(226,397,cs),
(226,382,o),
(237,366,o),
(252,366,cs)
);
},
{
closed = 1;
nodes = (
(419,366,o),
(442,366,o),
(463,367,cs),
(484,367,o),
(501,367,o),
(513,367,cs),
(536,367,o),
(542,389,o),
(542,400,cs),
(542,415,o),
(532,428,o),
(521,428,cs),
(508,428,o),
(492,428,o),
(472,427,cs),
(452,426,o),
(431,426,o),
(409,425,c),
(396,366,l),
(396,366,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
58 1 2 3 118 94 2 0 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 7 9 8 2 6 3 7 6 91 15 1 0 0 1 10 0 1 91 0 13 13 14 83 0 14 14 14 67 5 1 2 2 3 83 4 1 3 3 15 67 12 1 10 10 11 83 0 11 11 13 11 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 7 9 8 2 6 3 7 6 91 4 1 3 5 1 2 0 3 2 91 15 1 0 0 1 10 0 1 91 0 13 13 14 83 0 14 14 14 67 12 1 10 10 11 83 0 11 11 13 11 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
1 0 135 132 129 127 114 111 108 105 101 99 86 85 82 80 76 73 69 67 50 46 42 38 37 31 27 25 12 5 0 24 1 16 16 15
CALL[ ]	/* CallFunction */";
};
width = 780;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(500,0,ls),
(513,0,o),
(520,4,o),
(520,13,cs),
(520,24,o),
(505,31,o),
(490,31,cs),
(394,31,l),
(394,132,o),
(392,161,o),
(392,253,c),
(415,253,o),
(437,253,o),
(458,254,cs),
(479,254,o),
(495,254,o),
(507,254,cs),
(522,254,o),
(526,265,o),
(526,272,cs),
(526,279,o),
(520,285,o),
(515,285,cs),
(502,285,o),
(484,285,o),
(461,284,cs),
(438,283,o),
(415,282,o),
(392,282,c),
(391,289,o),
(391,296,o),
(391,303,cs),
(391,310,o),
(391,315,o),
(391,320,cs),
(391,334,l),
(412,381,l),
(431,381,o),
(450,381,o),
(467,382,cs),
(484,382,o),
(497,382,o),
(507,382,cs),
(522,382,o),
(526,393,o),
(526,400,cs),
(526,407,o),
(520,413,o),
(515,413,cs),
(504,413,o),
(491,413,o),
(476,412,cs),
(461,411,o),
(444,411,o),
(427,410,c),
(478,515,o),
(535,624,o),
(580,708,cs),
(592,731,o),
(600,743,o),
(629,746,cs),
(628,746,o),
(681,752,o),
(720,752,cs),
(733,752,o),
(740,756,o),
(740,763,cs),
(740,774,o),
(729,777,o),
(717,777,cs),
(472,777,ls),
(459,777,o),
(450,775,o),
(445,772,cs),
(440,769,o),
(438,765,o),
(438,762,cs),
(438,747,o),
(459,748,o),
(472,748,cs),
(492,748,o),
(543,751,o),
(543,732,cs),
(543,714,o),
(512,653,o),
(470,573,cs),
(422,483,o),
(386,418,o),
(377,395,c),
(364,429,o),
(324,508,o),
(283,594,cs),
(240,684,o),
(208,752,o),
(208,763,cs),
(208,795,o),
(304,774,o),
(304,799,cs),
(304,804,o),
(302,808,o),
(298,810,cs),
(293,812,o),
(285,813,o),
(273,813,cs),
(55,813,ls),
(32,813,o),
(20,808,o),
(20,799,cs),
(20,787,o),
(37,787,o),
(56,787,cs),
(120,787,o),
(144,780,o),
(159,755,cs),
(200,680,o),
(225,631,o),
(249,582,cs),
(271,537,o),
(298,475,o),
(327,410,c),
(311,410,o),
(295,410,o),
(280,411,cs),
(264,412,o),
(253,412,o),
(246,412,cs),
(235,412,o),
(230,404,o),
(230,397,cs),
(230,390,o),
(237,381,o),
(246,381,cs),
(340,381,l),
(352,355,l),
(352,282,l),
(312,282,o),
(271,284,o),
(246,284,cs),
(235,284,o),
(230,276,o),
(230,269,cs),
(230,262,o),
(237,253,o),
(246,253,cs),
(352,253,l),
(352,74,ls),
(352,30,o),
(312,28,o),
(279,28,cs),
(267,28,o),
(250,25,o),
(250,13,cs),
(250,2,o),
(272,0,o),
(291,0,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 107 values pushed */
86 1 7 8 136 46 2 0 7 2 66 0 13 15 14 2 12 8 13 12 91 16 1 8 17 1 7 0 8 7 91 6 18 2 0 5 1 1 2 0 1 91 11 1 9 9 10 83 0 10 10 14 67 4 1 2 2 3 83 0 3 3 13 3 68 1 0 135 131 127 123 115 114 111 109 106 103 99 96 77 76 72 69 66 64 57 53 49 47 45 39 35 33 29 26 22 19 16 14 9 5 0 142 1 140 19 15
CALL[ ]	/* CallFunction */";
};
width = 765;
}
);
note = yen;
unicode = 165;
},
{
glyphname = bulletoperator;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(155,295,o),
(178,326,o),
(178,359,cs),
(178,388,o),
(157,421,o),
(110,421,cs),
(56,421,o),
(40,381,o),
(40,357,cs),
(40,329,o),
(59,295,o),
(108,295,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
10 4 1 40
CALL[ ]	/* CallFunction */";
};
width = 219;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(143,304,o),
(164,331,o),
(164,359,cs),
(164,384,o),
(146,412,o),
(106,412,cs),
(63,412,o),
(47,381,o),
(47,357,cs),
(47,333,o),
(63,304,o),
(104,304,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
11 5 1 41
CALL[ ]	/* CallFunction */";
};
width = 211;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(128,319,o),
(144,339,o),
(144,359,cs),
(144,378,o),
(132,397,o),
(101,397,cs),
(69,397,o),
(57,374,o),
(57,357,cs),
(57,340,o),
(68,319,o),
(99,319,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
9 3 1 41
CALL[ ]	/* CallFunction */";
};
width = 200;
}
);
note = uni2219;
unicode = 8729;
},
{
glyphname = divisionslash;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(64,6,o),
(78,26,o),
(86,43,cs),
(103,84,o),
(150,163,o),
(255,365,cs),
(352,550,o),
(402,642,o),
(402,650,cs),
(402,663,o),
(394,676,o),
(381,676,cs),
(340,676,o),
(331,660,o),
(291,602,c),
(291,600,o),
(240,508,o),
(143,326,cs),
(76,202,o),
(-5,48,o),
(-5,37,cs),
(-5,14,o),
(6,6,o),
(21,6,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
19 4 1 40
CALL[ ]	/* CallFunction */";
};
width = 402;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(51,12,o),
(60,27,o),
(69,42,c),
(83,75,o),
(134,172,o),
(237,365,cs),
(334,548,o),
(384,643,o),
(384,650,cs),
(384,661,o),
(377,670,o),
(366,670,cs),
(329,670,o),
(323,650,o),
(294,602,c),
(294,600,o),
(243,508,o),
(146,326,cs),
(48,142,o),
(-2,46,o),
(-2,37,cs),
(-2,20,o),
(5,12,o),
(20,12,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
19 4 1 40
CALL[ ]	/* CallFunction */";
};
width = 387;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(34,22,o),
(39,31,o),
(43,42,cs),
(57,75,o),
(108,172,o),
(211,365,cs),
(308,548,o),
(358,643,o),
(358,650,cs),
(358,657,o),
(354,660,o),
(345,660,cs),
(321,660,o),
(316,640,o),
(298,602,c),
(298,600,o),
(247,508,o),
(150,326,cs),
(52,142,o),
(2,46,o),
(2,37,cs),
(2,27,o),
(8,22,o),
(19,22,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
18 4 1 40
CALL[ ]	/* CallFunction */";
};
width = 365;
}
);
note = uni2215;
unicode = 8725;
},
{
glyphname = plus;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(230,244,o),
(240,263,o),
(240,276,cs),
(240,370,l),
(327,370,ls),
(346,370,o),
(363,380,o),
(363,412,cs),
(363,429,o),
(360,441,o),
(354,446,cs),
(347,451,o),
(341,454,o),
(335,454,cs),
(324,454,o),
(310,453,o),
(294,452,cs),
(278,450,o),
(260,449,o),
(240,449,c),
(240,467,o),
(240,484,o),
(241,501,cs),
(241,517,o),
(241,530,o),
(241,541,cs),
(241,556,o),
(230,576,o),
(195,576,cs),
(168,576,o),
(153,556,o),
(153,541,cs),
(153,530,o),
(154,517,o),
(155,502,cs),
(156,487,o),
(156,469,o),
(156,449,c),
(62,449,ls),
(51,449,o),
(29,441,o),
(29,408,cs),
(29,378,o),
(51,367,o),
(62,367,cs),
(71,367,o),
(83,367,o),
(100,368,cs),
(117,369,o),
(135,369,o),
(154,370,c),
(153,339,o),
(151,295,o),
(151,276,cs),
(151,265,o),
(159,244,o),
(194,244,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 0 0 4 0 4 87 5 1 3 3 1 83 6 2 2 1 1 15 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 0 1 4 0 79 6 2 2 1 5 1 3 4 1 3 91 0 0 0 4 83 0 4 0 4 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 1 1 2 96 0 0 2 4 0 79 6 1 1 5 1 3 4 1 3 92 0 0 0 4 83 0 4 0 4 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 69 35 36 33 21 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 393;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(212,250,o),
(223,267,o),
(223,276,cs),
(223,379,l),
(321,379,ls),
(336,379,o),
(350,390,o),
(350,413,cs),
(350,437,o),
(338,445,o),
(329,445,cs),
(316,445,o),
(300,444,o),
(283,443,cs),
(265,441,o),
(245,440,o),
(223,440,c),
(223,460,o),
(223,479,o),
(224,497,cs),
(224,515,o),
(224,530,o),
(224,541,cs),
(224,556,o),
(212,570,o),
(189,570,cs),
(170,570,o),
(157,556,o),
(157,541,cs),
(157,530,o),
(158,516,o),
(159,499,cs),
(160,482,o),
(160,462,o),
(160,440,c),
(56,440,ls),
(45,440,o),
(30,431,o),
(30,408,cs),
(30,385,o),
(47,376,o),
(56,376,cs),
(65,376,o),
(79,376,o),
(98,377,cs),
(117,378,o),
(137,378,o),
(158,379,c),
(157,344,o),
(155,297,o),
(155,276,cs),
(155,265,o),
(165,250,o),
(188,250,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 0 0 4 0 4 87 5 1 3 3 1 83 6 2 2 1 1 15 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 0 1 4 0 79 6 2 2 1 5 1 3 4 1 3 91 0 0 0 4 83 0 4 0 4 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 1 1 2 96 0 0 2 4 0 79 6 1 1 5 1 3 4 1 3 92 0 0 0 4 83 0 4 0 4 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
36 69 35 36 33 21 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 380;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(186,260,o),
(198,267,o),
(199,276,c),
(199,394,l),
(312,394,l),
(327,397,o),
(331,408,o),
(331,415,cs),
(331,422,o),
(325,430,o),
(320,430,cs),
(305,429,o),
(287,428,o),
(267,427,cs),
(247,426,o),
(224,425,o),
(199,425,c),
(199,448,o),
(199,470,o),
(200,491,cs),
(200,511,o),
(200,528,o),
(200,541,cs),
(200,556,o),
(187,560,o),
(180,560,cs),
(173,560,o),
(163,556,o),
(163,541,cs),
(163,528,o),
(164,511,o),
(165,492,cs),
(166,473,o),
(166,450,o),
(166,425,c),
(47,425,ls),
(36,425,o),
(31,415,o),
(31,408,cs),
(31,401,o),
(38,391,o),
(47,391,cs),
(58,391,o),
(75,391,o),
(96,392,cs),
(117,393,o),
(139,393,o),
(164,394,c),
(164,353,o),
(161,316,o),
(161,276,cs),
(161,265,o),
(172,260,o),
(179,260,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 3 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 0 0 3 0 3 87 4 1 2 2 1 83 5 1 1 1 15 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 0 1 3 0 79 5 1 1 4 1 2 3 1 2 91 0 0 0 3 83 0 3 0 3 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 71 35 21 69 34 6 21
CALL[ ]	/* CallFunction */";
};
width = 362;
}
);
note = plus;
unicode = 43;
},
{
glyphname = minus;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(138,367,o),
(286,372,o),
(348,372,cs),
(363,372,o),
(384,384,o),
(384,415,cs),
(384,432,o),
(380,442,o),
(372,447,cs),
(364,452,o),
(359,454,o),
(356,454,cs),
(340,454,o),
(321,453,o),
(299,452,cs),
(277,450,o),
(252,449,o),
(224,449,cs),
(83,449,ls),
(72,449,o),
(50,441,o),
(50,408,cs),
(50,378,o),
(72,367,o),
(83,367,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
10 0 1 40
CALL[ ]	/* CallFunction */";
};
width = 436;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(102,376,o),
(213,381,o),
(342,381,cs),
(357,381,o),
(371,394,o),
(371,415,cs),
(371,427,o),
(368,435,o),
(363,439,cs),
(357,443,o),
(353,445,o),
(350,445,cs),
(334,444,o),
(315,443,o),
(293,442,cs),
(271,441,o),
(246,440,o),
(218,440,cs),
(77,440,ls),
(66,440,o),
(51,431,o),
(51,408,cs),
(51,385,o),
(68,376,o),
(77,376,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
10 0 1 40
CALL[ ]	/* CallFunction */";
};
width = 420;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(93,391,o),
(204,396,o),
(333,396,cs),
(348,396,o),
(352,408,o),
(352,415,cs),
(352,422,o),
(346,430,o),
(341,430,cs),
(325,429,o),
(306,428,o),
(284,427,cs),
(262,426,o),
(237,425,o),
(209,425,cs),
(68,425,ls),
(57,425,o),
(52,415,o),
(52,408,cs),
(52,401,o),
(59,391,o),
(68,391,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
10 0 1 40
CALL[ ]	/* CallFunction */";
};
width = 397;
}
);
note = minus;
unicode = 8722;
},
{
glyphname = multiply;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(318,245,o),
(325,261,o),
(325,281,cs),
(325,306,o),
(257,347,o),
(220,409,c),
(248,448,o),
(277,488,o),
(308,527,cs),
(313,534,o),
(316,541,o),
(316,548,cs),
(316,562,o),
(294,567,o),
(285,567,cs),
(270,567,o),
(250,566,o),
(227,533,cs),
(178,464,l),
(152,498,o),
(132,522,o),
(128,530,cs),
(113,553,o),
(98,567,o),
(86,567,cs),
(63,567,o),
(48,552,o),
(48,533,cs),
(48,512,o),
(90,481,o),
(135,414,c),
(130,407,o),
(122,397,o),
(111,383,cs),
(100,369,o),
(89,354,o),
(77,339,cs),
(72,332,o),
(66,324,o),
(60,317,cs),
(54,310,o),
(51,303,o),
(51,298,cs),
(51,268,o),
(74,262,o),
(83,262,cs),
(114,262,o),
(158,334,o),
(178,358,c),
(199,327,o),
(253,245,o),
(289,245,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
54 40 24 8 4 1 2 1 66 3 1 2 0 1 0 2 1 91 3 1 2 2 0 83 0 0 2 0 71 45 43 33 31 40 34 4 17
CALL[ ]	/* CallFunction */";
};
width = 370;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(314,252,o),
(321,265,o),
(321,281,cs),
(321,306,o),
(253,347,o),
(216,409,c),
(230,428,o),
(245,449,o),
(260,470,cs),
(275,491,o),
(290,511,o),
(306,530,cs),
(310,535,o),
(312,540,o),
(312,545,cs),
(312,561,o),
(295,565,o),
(288,565,cs),
(281,565,o),
(273,563,o),
(264,559,cs),
(255,554,o),
(244,543,o),
(231,524,cs),
(182,455,l),
(148,500,o),
(127,524,o),
(124,530,c),
(107,555,o),
(97,565,o),
(82,565,cs),
(63,565,o),
(53,552,o),
(53,533,cs),
(53,519,o),
(90,486,o),
(147,412,c),
(142,406,o),
(133,395,o),
(130,391,cs),
(124,384,o),
(108,364,o),
(81,330,cs),
(76,323,o),
(70,316,o),
(64,310,cs),
(58,304,o),
(55,297,o),
(55,290,cs),
(55,267,o),
(70,262,o),
(79,262,cs),
(112,262,o),
(155,338,o),
(182,365,c),
(203,334,o),
(257,252,o),
(293,252,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 9 values pushed */
52 40 24 8 4 0 2 1 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 9 values pushed */
52 40 24 8 4 1 2 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
3 1 2 0 0 2 79 3 1 2 2 0 83 1 1 0 2 0 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
3 1 2 0 1 0 2 1 91 3 1 2 2 0 83 0 0 2 0 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
45 43 33 31 40 34 4 17
CALL[ ]	/* CallFunction */";
};
width = 371;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(106,262,o),
(165,359,o),
(188,376,c),
(209,345,o),
(263,263,o),
(299,263,cs),
(310,263,o),
(316,270,o),
(316,281,cs),
(316,306,o),
(248,347,o),
(211,409,c),
(225,428,o),
(240,449,o),
(255,470,cs),
(270,491,o),
(285,511,o),
(301,530,cs),
(305,535,o),
(307,540,o),
(307,545,cs),
(307,556,o),
(299,562,o),
(292,562,cs),
(285,562,o),
(277,558,o),
(269,550,cs),
(261,541,o),
(250,528,o),
(237,509,cs),
(188,440,l),
(167,468,o),
(151,489,o),
(140,504,cs),
(129,518,o),
(122,527,o),
(119,530,cs),
(99,557,o),
(93,561,o),
(77,561,cs),
(69,561,o),
(59,552,o),
(59,544,cs),
(59,534,o),
(110,478,o),
(164,408,c),
(146,384,o),
(139,379,o),
(87,315,cs),
(82,308,o),
(76,301,o),
(70,295,cs),
(64,289,o),
(61,283,o),
(61,277,cs),
(61,267,o),
(65,262,o),
(74,262,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
49 37 23 8 4 0 2 1 66 3 1 2 0 0 2 79 3 1 2 2 0 83 1 1 0 2 0 71 42 40 32 30 40 34 4 17
CALL[ ]	/* CallFunction */";
};
width = 372;
}
);
note = multiply;
unicode = 215;
},
{
glyphname = divide;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(113,367,o),
(261,372,o),
(323,372,cs),
(338,372,o),
(359,384,o),
(359,415,cs),
(359,432,o),
(355,442,o),
(347,447,cs),
(339,452,o),
(334,454,o),
(331,454,cs),
(315,454,o),
(296,453,o),
(274,452,cs),
(252,450,o),
(227,449,o),
(199,449,cs),
(58,449,ls),
(47,449,o),
(25,441,o),
(25,408,cs),
(25,378,o),
(47,367,o),
(58,367,cs)
);
},
{
closed = 1;
nodes = (
(236,169,o),
(259,201,o),
(259,233,cs),
(259,264,o),
(238,295,o),
(191,295,cs),
(137,295,o),
(121,255,o),
(121,231,cs),
(121,203,o),
(140,169,o),
(189,169,cs)
);
},
{
closed = 1;
nodes = (
(236,519,o),
(259,551,o),
(259,583,cs),
(259,614,o),
(238,645,o),
(191,645,cs),
(137,645,o),
(121,605,o),
(121,581,cs),
(121,553,o),
(140,519,o),
(189,519,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 2 0 3 4 2 3 91 0 0 0 1 0 1 87 0 5 5 4 83 6 7 2 4 4 15 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 0 3 4 2 3 91 6 7 2 4 0 5 0 4 5 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
7 1 4 3 6 6 4 96 0 2 0 3 4 2 3 91 0 6 0 5 0 6 5 92 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
29 28 49 46 40 33 28 50 29 50 36 38 36 36 8 19
CALL[ ]	/* CallFunction */";
};
width = 382;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(85,376,o),
(196,381,o),
(325,381,cs),
(340,381,o),
(354,394,o),
(354,415,cs),
(354,427,o),
(351,435,o),
(346,439,cs),
(340,443,o),
(336,445,o),
(333,445,cs),
(317,444,o),
(298,443,o),
(276,442,cs),
(254,441,o),
(229,440,o),
(201,440,cs),
(60,440,ls),
(49,440,o),
(34,431,o),
(34,408,cs),
(34,385,o),
(51,376,o),
(60,376,cs)
);
},
{
closed = 1;
nodes = (
(231,188,o),
(252,215,o),
(252,243,cs),
(252,268,o),
(234,296,o),
(194,296,cs),
(151,296,o),
(135,265,o),
(135,241,cs),
(135,217,o),
(151,188,o),
(192,188,cs)
);
},
{
closed = 1;
nodes = (
(231,520,o),
(252,547,o),
(252,575,cs),
(252,600,o),
(234,628,o),
(194,628,cs),
(151,628,o),
(135,597,o),
(135,573,cs),
(135,549,o),
(151,520,o),
(192,520,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 0 3 4 2 3 91 0 0 0 1 0 1 87 0 5 5 4 83 6 1 4 4 15 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 3 4 2 3 91 6 1 4 0 5 0 4 5 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
30 29 41 34 29 49 30 45 36 38 36 37 7 30
CALL[ ]	/* CallFunction */";
};
width = 385;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(86,391,o),
(197,396,o),
(326,396,cs),
(341,396,o),
(345,408,o),
(345,415,cs),
(345,422,o),
(339,430,o),
(334,430,cs),
(318,429,o),
(299,428,o),
(277,427,cs),
(255,426,o),
(230,425,o),
(202,425,cs),
(61,425,ls),
(50,425,o),
(45,415,o),
(45,408,cs),
(45,401,o),
(52,391,o),
(61,391,cs)
);
},
{
closed = 1;
nodes = (
(226,219,o),
(242,239,o),
(242,259,cs),
(242,278,o),
(230,297,o),
(199,297,cs),
(167,297,o),
(155,274,o),
(155,257,cs),
(155,240,o),
(166,219,o),
(197,219,cs)
);
},
{
closed = 1;
nodes = (
(226,521,o),
(242,541,o),
(242,561,cs),
(242,580,o),
(230,599,o),
(199,599,cs),
(167,599,o),
(155,576,o),
(155,559,cs),
(155,542,o),
(166,521,o),
(197,521,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 0 3 4 2 3 91 0 0 0 1 0 1 87 0 5 5 4 83 6 1 4 4 15 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 3 4 2 3 91 6 1 4 0 5 0 4 5 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
25 24 36 29 24 44 25 40 36 36 36 34 7 19
CALL[ ]	/* CallFunction */";
};
width = 389;
}
);
note = divide;
unicode = 247;
},
{
glyphname = equal;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(151,413,o),
(239,414,o),
(307,414,cs),
(336,414,o),
(343,441,o),
(343,456,cs),
(343,476,o),
(328,493,o),
(315,493,cs),
(299,493,o),
(281,493,o),
(260,492,cs),
(239,491,o),
(215,490,o),
(187,490,cs),
(149,490,o),
(111,492,o),
(86,492,cs),
(63,492,o),
(53,472,o),
(53,453,cs),
(53,434,o),
(67,413,o),
(86,413,cs)
);
},
{
closed = 1;
nodes = (
(151,245,o),
(239,246,o),
(307,246,cs),
(336,246,o),
(343,273,o),
(343,288,cs),
(343,308,o),
(328,325,o),
(315,325,cs),
(299,325,o),
(281,325,o),
(260,324,cs),
(239,323,o),
(215,322,o),
(187,322,cs),
(149,322,o),
(111,324,o),
(86,324,cs),
(63,324,o),
(53,304,o),
(53,285,cs),
(53,266,o),
(67,245,o),
(86,245,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
4 1 0 0 1 0 1 87 0 3 3 2 83 5 1 2 2 23 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
5 1 2 0 3 0 2 3 91 4 1 0 1 1 0 79 4 1 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
28 27 1 0 41 34 27 53 28 45 14 7 0 26 1 18 6 15
CALL[ ]	/* CallFunction */";
};
width = 394;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(146,422,o),
(234,423,o),
(302,423,cs),
(325,423,o),
(331,445,o),
(331,456,cs),
(331,471,o),
(321,484,o),
(310,484,cs),
(294,484,o),
(276,484,o),
(255,483,cs),
(234,482,o),
(210,481,o),
(182,481,cs),
(144,481,o),
(106,483,o),
(81,483,cs),
(62,483,o),
(55,468,o),
(55,453,cs),
(55,438,o),
(66,422,o),
(81,422,cs)
);
},
{
closed = 1;
nodes = (
(146,254,o),
(234,255,o),
(302,255,cs),
(325,255,o),
(331,277,o),
(331,288,cs),
(331,303,o),
(321,316,o),
(310,316,cs),
(294,316,o),
(276,316,o),
(255,315,cs),
(234,314,o),
(210,313,o),
(182,313,cs),
(144,313,o),
(106,315,o),
(81,315,cs),
(62,315,o),
(55,300,o),
(55,285,cs),
(55,270,o),
(66,254,o),
(81,254,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
4 1 0 0 1 0 1 87 0 3 3 2 83 5 1 2 2 23 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
5 1 2 0 3 0 2 3 91 4 1 0 1 1 0 79 4 1 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
26 25 1 0 37 30 25 49 26 41 12 5 0 24 1 16 6 15
CALL[ ]	/* CallFunction */";
};
width = 385;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(139,437,o),
(227,438,o),
(295,438,cs),
(310,438,o),
(314,449,o),
(314,456,cs),
(314,463,o),
(308,469,o),
(303,469,cs),
(287,469,o),
(269,469,o),
(248,468,cs),
(227,467,o),
(203,466,o),
(175,466,cs),
(137,466,o),
(99,468,o),
(74,468,cs),
(63,468,o),
(58,460,o),
(58,453,cs),
(58,446,o),
(65,437,o),
(74,437,cs)
);
},
{
closed = 1;
nodes = (
(139,269,o),
(227,270,o),
(295,270,cs),
(310,270,o),
(314,281,o),
(314,288,cs),
(314,295,o),
(308,301,o),
(303,301,cs),
(287,301,o),
(269,301,o),
(248,300,cs),
(227,299,o),
(203,298,o),
(175,298,cs),
(137,298,o),
(99,300,o),
(74,300,cs),
(63,300,o),
(58,292,o),
(58,285,cs),
(58,278,o),
(65,269,o),
(74,269,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
4 1 0 0 1 0 1 87 0 3 3 2 83 5 1 2 2 23 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
5 1 2 0 3 0 2 3 91 4 1 0 1 1 0 79 4 1 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
26 25 1 0 37 30 25 49 26 41 12 5 0 24 1 16 6 15
CALL[ ]	/* CallFunction */";
};
width = 372;
}
);
note = equal;
unicode = 61;
},
{
glyphname = greater;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(72,252,o),
(117,273,o),
(173,306,cs),
(227,337,o),
(265,365,o),
(265,378,cs),
(265,390,o),
(235,417,o),
(173,453,cs),
(118,484,o),
(72,505,o),
(57,505,cs),
(50,505,o),
(46,502,o),
(46,496,cs),
(46,473,o),
(127,418,o),
(151,378,c),
(135,351,o),
(109,326,o),
(87,306,cs),
(67,287,o),
(46,270,o),
(46,261,cs),
(46,255,o),
(50,252,o),
(57,252,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
23 1 1 0 1 66 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 44 33 2 17
CALL[ ]	/* CallFunction */";
};
width = 299;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(91,252,o),
(247,352,o),
(247,378,cs),
(247,389,o),
(219,417,o),
(165,453,cs),
(116,484,o),
(73,505,o),
(60,505,cs),
(53,505,o),
(49,502,o),
(49,496,cs),
(49,473,o),
(130,418,o),
(154,378,c),
(138,351,o),
(112,326,o),
(90,306,cs),
(70,287,o),
(49,270,o),
(49,261,cs),
(49,255,o),
(53,252,o),
(60,252,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
21 1 1 0 1 66 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 42 33 2 17
CALL[ ]	/* CallFunction */";
};
width = 285;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(89,252,o),
(222,351,o),
(222,378,cs),
(222,406,o),
(90,505,o),
(65,505,cs),
(58,505,o),
(54,502,o),
(54,496,cs),
(54,473,o),
(135,418,o),
(159,378,c),
(143,351,o),
(117,326,o),
(95,306,cs),
(75,287,o),
(54,270,o),
(54,261,cs),
(54,255,o),
(58,252,o),
(65,252,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
19 1 1 0 1 66 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 40 33 2 17
CALL[ ]	/* CallFunction */";
};
width = 265;
}
);
note = greater;
unicode = 62;
},
{
glyphname = less;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(250,252,o),
(254,255,o),
(254,261,cs),
(254,270,o),
(233,287,o),
(214,306,cs),
(192,326,o),
(165,351,o),
(149,378,c),
(173,418,o),
(254,473,o),
(254,496,cs),
(254,502,o),
(250,505,o),
(243,505,cs),
(230,505,o),
(180,484,o),
(127,453,cs),
(65,416,o),
(35,390,o),
(35,378,cs),
(35,365,o),
(73,337,o),
(127,306,cs),
(182,272,o),
(228,252,o),
(243,252,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
5 1 0 1 1 66 0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71 44 43 2 17
CALL[ ]	/* CallFunction */";
};
width = 299;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(232,252,o),
(236,255,o),
(236,261,cs),
(236,270,o),
(215,287,o),
(196,306,cs),
(174,326,o),
(147,351,o),
(131,378,c),
(155,418,o),
(236,473,o),
(236,496,cs),
(236,502,o),
(232,505,o),
(225,505,cs),
(212,505,o),
(169,484,o),
(121,453,cs),
(66,417,o),
(38,389,o),
(38,378,cs),
(38,352,o),
(194,252,o),
(225,252,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
5 1 0 1 1 66 0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71 42 43 2 17
CALL[ ]	/* CallFunction */";
};
width = 285;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(207,252,o),
(211,255,o),
(211,261,cs),
(211,270,o),
(190,287,o),
(171,306,cs),
(149,326,o),
(122,351,o),
(106,378,c),
(130,418,o),
(211,473,o),
(211,496,cs),
(211,502,o),
(207,505,o),
(200,505,cs),
(175,505,o),
(43,406,o),
(43,378,cs),
(43,351,o),
(176,252,o),
(200,252,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
5 1 0 1 1 66 0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71 40 43 2 17
CALL[ ]	/* CallFunction */";
};
width = 265;
}
);
note = less;
unicode = 60;
},
{
glyphname = plusminus;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(253,250,o),
(265,253,o),
(272,259,cs),
(279,265,o),
(282,271,o),
(282,276,cs),
(282,370,l),
(369,370,ls),
(388,370,o),
(405,383,o),
(405,415,cs),
(405,432,o),
(401,442,o),
(393,447,cs),
(385,452,o),
(380,454,o),
(377,454,cs),
(366,454,o),
(352,453,o),
(336,452,cs),
(320,450,o),
(302,449,o),
(282,449,c),
(282,467,o),
(282,484,o),
(283,501,cs),
(283,517,o),
(283,530,o),
(283,541,cs),
(283,556,o),
(265,568,o),
(237,568,cs),
(212,568,o),
(195,556,o),
(195,541,cs),
(195,530,o),
(196,517,o),
(197,502,cs),
(198,487,o),
(198,469,o),
(198,449,c),
(104,449,ls),
(93,449,o),
(71,441,o),
(71,408,cs),
(71,375,o),
(93,367,o),
(104,367,cs),
(113,367,o),
(125,367,o),
(142,368,cs),
(159,369,o),
(177,369,o),
(196,370,c),
(195,339,o),
(193,295,o),
(193,276,cs),
(193,265,o),
(209,250,o),
(236,250,cs)
);
},
{
closed = 1;
nodes = (
(159,147,o),
(307,152,o),
(369,152,cs),
(384,152,o),
(405,164,o),
(405,195,cs),
(405,212,o),
(401,222,o),
(393,227,cs),
(385,232,o),
(380,234,o),
(377,234,cs),
(361,234,o),
(342,233,o),
(320,232,cs),
(298,230,o),
(273,229,o),
(245,229,cs),
(104,229,ls),
(93,229,o),
(71,221,o),
(71,188,cs),
(71,158,o),
(93,147,o),
(104,147,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 0 4 7 0 4 91 9 10 2 7 0 8 7 8 87 5 1 3 3 1 83 6 2 2 1 1 15 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
6 2 2 1 5 1 3 4 1 3 91 0 0 0 4 7 0 4 91 9 10 2 7 8 8 7 79 9 10 2 7 7 8 83 0 8 7 8 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 2 0 1 1 2 96 10 1 7 4 9 9 7 96 6 1 1 5 1 3 4 1 3 92 0 0 0 4 7 0 4 91 0 9 8 8 9 79 0 9 9 8 84 0 8 9 8 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
45 44 65 62 56 49 44 66 45 66 38 69 35 36 33 21 34 11 22
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(241,254,o),
(250,267,o),
(253,276,c),
(253,379,l),
(351,379,ls),
(366,379,o),
(380,392,o),
(380,415,cs),
(380,427,o),
(377,435,o),
(372,439,cs),
(366,443,o),
(362,445,o),
(359,445,cs),
(346,444,o),
(330,443,o),
(313,442,cs),
(295,441,o),
(275,440,o),
(253,440,c),
(253,460,o),
(253,479,o),
(254,497,cs),
(254,515,o),
(254,530,o),
(254,541,cs),
(254,556,o),
(238,565,o),
(219,565,cs),
(200,565,o),
(187,556,o),
(187,541,cs),
(187,530,o),
(188,516,o),
(189,499,cs),
(190,482,o),
(190,462,o),
(190,440,c),
(86,440,ls),
(75,440,o),
(60,431,o),
(60,408,cs),
(60,384,o),
(77,376,o),
(86,376,cs),
(95,376,o),
(109,376,o),
(128,377,cs),
(147,378,o),
(167,378,o),
(188,379,c),
(187,344,o),
(185,297,o),
(185,276,cs),
(185,265,o),
(199,254,o),
(218,254,cs)
);
},
{
closed = 1;
nodes = (
(111,156,o),
(222,161,o),
(351,161,cs),
(366,161,o),
(380,174,o),
(380,195,cs),
(380,207,o),
(377,215,o),
(372,219,cs),
(366,223,o),
(362,225,o),
(359,225,cs),
(343,224,o),
(324,223,o),
(302,222,cs),
(280,221,o),
(255,220,o),
(227,220,cs),
(86,220,ls),
(75,220,o),
(60,211,o),
(60,188,cs),
(60,165,o),
(77,156,o),
(86,156,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 4 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 0 0 4 7 0 4 91 9 1 7 0 8 7 8 87 5 1 3 3 1 83 6 2 2 1 1 15 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
6 2 2 1 5 1 3 4 1 3 91 0 0 0 4 7 0 4 91 9 1 7 8 8 7 79 9 1 7 7 8 83 0 8 7 8 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
43 42 54 47 42 62 43 58 36 69 35 36 33 21 34 10 22
CALL[ ]	/* CallFunction */";
};
width = 441;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(199,260,o),
(211,267,o),
(212,276,c),
(212,394,l),
(325,394,l),
(340,397,o),
(344,408,o),
(344,415,cs),
(344,422,o),
(338,430,o),
(333,430,cs),
(318,429,o),
(300,428,o),
(280,427,cs),
(260,426,o),
(237,425,o),
(212,425,c),
(212,448,o),
(212,470,o),
(213,491,cs),
(213,511,o),
(213,528,o),
(213,541,cs),
(213,556,o),
(200,560,o),
(193,560,cs),
(186,560,o),
(176,556,o),
(176,541,cs),
(176,528,o),
(177,511,o),
(178,492,cs),
(179,473,o),
(179,450,o),
(179,425,c),
(60,425,ls),
(49,425,o),
(44,415,o),
(44,408,cs),
(44,401,o),
(51,391,o),
(60,391,cs),
(71,391,o),
(88,391,o),
(109,392,cs),
(130,393,o),
(152,393,o),
(177,394,c),
(177,353,o),
(174,316,o),
(174,276,cs),
(174,265,o),
(185,260,o),
(192,260,cs)
);
},
{
closed = 1;
nodes = (
(85,171,o),
(196,176,o),
(325,176,cs),
(340,176,o),
(344,188,o),
(344,195,cs),
(344,202,o),
(338,210,o),
(333,210,cs),
(317,209,o),
(298,208,o),
(276,207,cs),
(254,206,o),
(229,205,o),
(201,205,cs),
(60,205,ls),
(49,205,o),
(44,195,o),
(44,188,cs),
(44,181,o),
(51,171,o),
(60,171,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 3 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 0 0 3 6 0 3 91 8 1 6 0 7 6 7 87 4 1 2 2 1 83 5 1 1 1 15 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
5 1 1 4 1 2 3 1 2 91 0 0 0 3 6 0 3 91 8 1 6 7 7 6 79 8 1 6 6 7 83 0 7 6 7 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
45 44 56 49 44 64 45 60 36 71 35 21 69 34 9 21
CALL[ ]	/* CallFunction */";
};
width = 390;
}
);
note = plusminus;
unicode = 177;
},
{
glyphname = asciitilde;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(87,498,o),
(111,523,o),
(150,523,cs),
(189,523,o),
(231,499,o),
(287,499,cs),
(320,499,o),
(398,517,o),
(398,574,cs),
(398,595,o),
(383,609,o),
(376,609,cs),
(371,609,o),
(361,605,o),
(346,596,cs),
(327,585,o),
(305,579,o),
(286,579,cs),
(247,579,o),
(185,607,o),
(149,607,cs),
(124,607,o),
(102,601,o),
(81,589,cs),
(62,578,o),
(47,563,o),
(47,534,cs),
(47,514,o),
(54,498,o),
(66,498,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 4 3 1 79 2 1 0 0 4 3 0 4 91 0 1 1 3 83 5 1 3 1 3 71 35 35 38 35 35 36 6 21
CALL[ ]	/* CallFunction */";
};
width = 441;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(74,507,o),
(101,532,o),
(141,532,cs),
(180,532,o),
(222,508,o),
(278,508,cs),
(334,508,o),
(367,530,o),
(380,553,cs),
(383,559,o),
(385,565,o),
(385,572,cs),
(385,588,o),
(374,600,o),
(367,600,cs),
(364,600,o),
(360,599,o),
(357,598,cs),
(353,596,o),
(346,592,o),
(337,587,cs),
(314,576,o),
(294,570,o),
(277,570,cs),
(238,570,o),
(176,598,o),
(140,598,cs),
(115,598,o),
(93,592,o),
(72,580,cs),
(62,574,o),
(55,569,o),
(51,564,cs),
(47,559,o),
(44,555,o),
(43,552,cs),
(41,547,o),
(40,541,o),
(40,535,cs),
(40,520,o),
(46,507,o),
(57,507,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 4 3 1 79 2 1 0 0 4 3 0 4 91 0 1 1 3 83 5 1 3 1 3 71 35 35 38 35 35 37 6 32
CALL[ ]	/* CallFunction */";
};
width = 423;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(60,522,o),
(87,547,o),
(128,547,cs),
(167,547,o),
(209,523,o),
(265,523,cs),
(318,523,o),
(367,543,o),
(367,568,cs),
(367,577,o),
(361,585,o),
(354,585,cs),
(351,585,o),
(347,584,o),
(344,583,cs),
(340,581,o),
(333,577,o),
(324,572,cs),
(301,561,o),
(281,555,o),
(264,555,cs),
(225,555,o),
(163,583,o),
(127,583,cs),
(102,583,o),
(80,577,o),
(59,565,cs),
(40,554,o),
(30,544,o),
(30,537,cs),
(30,530,o),
(37,522,o),
(44,522,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 4 3 1 79 2 1 0 0 4 3 0 4 91 0 1 1 3 83 5 1 3 1 3 71 35 35 38 35 35 36 6 32
CALL[ ]	/* CallFunction */";
};
width = 398;
}
);
note = asciitilde;
unicode = 126;
},
{
glyphname = logicalnot;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(321,145,o),
(331,153,o),
(338,162,cs),
(341,167,o),
(343,173,o),
(344,180,cs),
(344,252,ls),
(344,301,o),
(318,311,o),
(290,311,cs),
(292,311,o),
(238,308,o),
(189,308,cs),
(167,308,o),
(80,310,o),
(80,310,c),
(60,310,o),
(43,302,o),
(43,269,cs),
(43,246,o),
(60,227,o),
(79,227,cs),
(215,227,ls),
(234,227,o),
(246,226,o),
(250,224,cs),
(254,222,o),
(256,219,o),
(256,215,cs),
(256,183,ls),
(256,166,o),
(260,145,o),
(300,145,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 1 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
16
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 1 2 2 1 95 4 3 2 0 2 2 0 79 4 3 2 0 0 2 83 0 2 0 2 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 2 1 107 4 3 2 0 2 2 0 79 4 3 2 0 0 2 83 0 2 0 2 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 32 0 32 53 39 161 5 18
CALL[ ]	/* CallFunction */";
};
width = 401;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(315,151,o),
(323,158,o),
(328,165,cs),
(331,169,o),
(332,174,o),
(333,180,c),
(333,252,ls),
(333,300,o),
(306,302,o),
(289,302,cs),
(291,302,o),
(237,299,o),
(188,299,cs),
(166,299,o),
(79,301,o),
(79,301,c),
(64,301,o),
(49,297,o),
(49,269,cs),
(49,250,o),
(63,236,o),
(78,236,cs),
(225,236,ls),
(244,236,o),
(256,234,o),
(260,231,cs),
(264,227,o),
(266,222,o),
(266,215,cs),
(266,183,ls),
(266,172,o),
(266,151,o),
(299,151,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
16 1 1 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 1 2 2 1 95 4 3 2 0 2 2 0 79 4 3 2 0 0 2 83 0 2 0 2 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 2 1 107 4 3 2 0 2 2 0 79 4 3 2 0 0 2 83 0 2 0 2 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 36 0 36 55 41 161 5 18
CALL[ ]	/* CallFunction */";
};
width = 390;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(305,161,o),
(311,164,o),
(314,170,cs),
(315,173,o),
(316,176,o),
(317,180,c),
(317,252,ls),
(317,287,o),
(299,287,o),
(288,287,cs),
(290,287,o),
(236,284,o),
(187,284,cs),
(165,284,o),
(78,286,o),
(78,286,c),
(69,286,o),
(58,284,o),
(58,269,cs),
(58,258,o),
(68,251,o),
(77,251,cs),
(239,251,ls),
(278,251,o),
(280,238,o),
(280,215,cs),
(280,183,ls),
(280,176,o),
(279,161,o),
(298,161,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 1 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 1 2 2 1 95 4 3 2 0 2 2 0 79 4 3 2 0 0 2 83 0 2 0 2 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 2 1 107 4 3 2 0 2 2 0 79 4 3 2 0 0 2 83 0 2 0 2 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 31 0 31 53 38 161 5 18
CALL[ ]	/* CallFunction */";
};
width = 375;
}
);
note = logicalnot;
unicode = 172;
},
{
glyphname = asciicircum;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(50,510,o),
(108,546,o),
(157,572,c),
(229,534,o),
(266,510,o),
(277,510,cs),
(286,510,o),
(290,520,o),
(290,531,cs),
(290,572,o),
(181,664,o),
(157,664,cs),
(146,664,o),
(111,639,o),
(84,614,cs),
(53,585,o),
(25,549,o),
(25,524,cs),
(25,517,o),
(30,510,o),
(38,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
5 1 0 2 1 66 0 2 0 2 106 1 3 2 0 0 97 1 0 19 17 11 9 0 25 1 25 4 15
CALL[ ]	/* CallFunction */";
};
width = 315;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(53,510,o),
(84,538,o),
(157,581,c),
(170,573,o),
(264,510,o),
(277,510,cs),
(285,510,o),
(288,518,o),
(288,527,cs),
(288,562,o),
(182,655,o),
(157,655,cs),
(135,655,o),
(27,564,o),
(27,523,cs),
(27,514,o),
(31,510,o),
(38,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
6 1 0 2 1 66 0 2 0 2 106 1 3 2 0 0 97 2 1 19 17 12 10 1 25 2 25 4 26
CALL[ ]	/* CallFunction */";
};
width = 315;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(52,510,o),
(104,559,o),
(157,596,c),
(233,542,o),
(262,510,o),
(277,510,cs),
(282,510,o),
(285,514,o),
(285,521,cs),
(285,546,o),
(182,640,o),
(157,640,cs),
(134,640,o),
(30,546,o),
(30,521,cs),
(30,514,o),
(33,510,o),
(38,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
6 1 0 2 1 66 0 2 0 2 106 1 3 2 0 0 97 2 1 19 17 12 10 1 24 2 24 4 26
CALL[ ]	/* CallFunction */";
};
width = 315;
}
);
note = asciicircum;
unicode = 94;
},
{
glyphname = micro;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(236,-217,o),
(244,-194,o),
(244,-174,cs),
(244,-142,o),
(244,-110,o),
(243,-77,cs),
(242,-45,o),
(241,-11,o),
(240,26,c),
(249,-9,o),
(284,-20,o),
(319,-20,cs),
(412,-20,o),
(457,37,o),
(476,81,c),
(477,42,o),
(478,15,o),
(481,0,cs),
(484,-15,o),
(489,-22,o),
(496,-22,cs),
(552,-22,o),
(592,-18,o),
(615,-11,cs),
(638,-4,o),
(649,6,o),
(649,20,cs),
(649,38,o),
(620,42,o),
(609,42,cs),
(606,42,o),
(603,42,o),
(598,42,cs),
(593,41,o),
(590,41,o),
(589,41,cs),
(570,41,o),
(568,43,o),
(568,62,cs),
(568,64,o),
(568,72,o),
(568,86,cs),
(567,100,o),
(567,123,o),
(567,156,cs),
(567,266,o),
(570,346,o),
(570,383,cs),
(570,431,o),
(552,432,o),
(476,432,cs),
(408,432,o),
(334,428,o),
(334,395,cs),
(334,374,o),
(364,368,o),
(385,368,cs),
(451,368,ls),
(478,368,o),
(478,352,o),
(478,327,cs),
(475,172,l),
(475,172,l),
(475,107,o),
(407,58,o),
(341,58,cs),
(283,58,o),
(242,124,o),
(242,206,cs),
(242,267,o),
(243,316,o),
(244,351,cs),
(245,386,o),
(246,412,o),
(246,427,cs),
(246,468,o),
(240,472,o),
(212,472,cs),
(83,472,o),
(18,458,o),
(18,431,cs),
(18,416,o),
(29,408,o),
(52,408,cs),
(119,408,ls),
(150,408,o),
(151,401,o),
(151,370,cs),
(151,322,o),
(152,277,o),
(153,234,cs),
(154,191,o),
(154,152,o),
(154,115,cs),
(154,-1,o),
(153,-93,o),
(150,-177,cs),
(150,-194,o),
(161,-217,o),
(200,-217,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
42 1 9 0 50 1 4 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
3 1 2 9 4 9 2 4 104 0 7 7 8 83 0 8 8 23 67 0 0 0 1 83 0 1 1 15 67 0 9 9 4 83 5 1 4 4 21 67 0 6 6 17 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
3 1 2 9 4 9 2 4 104 0 6 4 6 107 0 8 0 7 0 8 7 91 0 1 0 0 9 1 0 91 0 9 9 4 83 5 1 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
85 83 34 58 39 38 38 33 45 69 50 10 24
CALL[ ]	/* CallFunction */";
};
width = 671;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(212,-211,o),
(219,-194,o),
(219,-174,cs),
(219,-142,o),
(219,-109,o),
(218,-74,cs),
(217,-40,o),
(216,-5,o),
(215,32,c),
(231,-3,o),
(269,-20,o),
(313,-20,cs),
(408,-20,o),
(454,39,o),
(472,81,c),
(473,42,o),
(474,15,o),
(477,0,cs),
(480,-15,o),
(485,-22,o),
(492,-22,cs),
(535,-22,o),
(638,-22,o),
(638,9,cs),
(638,28,o),
(613,30,o),
(601,30,cs),
(593,30,o),
(587,30,o),
(582,30,cs),
(577,29,o),
(573,29,o),
(571,29,cs),
(548,29,o),
(543,29,o),
(543,50,cs),
(543,53,o),
(543,62,o),
(543,78,cs),
(542,93,o),
(542,119,o),
(542,156,cs),
(542,266,o),
(545,346,o),
(545,383,cs),
(545,430,o),
(530,432,o),
(472,432,cs),
(418,432,o),
(337,429,o),
(337,401,cs),
(337,385,o),
(360,380,o),
(381,380,cs),
(447,380,ls),
(474,380,o),
(474,366,o),
(474,339,cs),
(471,172,l),
(471,172,l),
(471,97,o),
(399,40,o),
(325,40,cs),
(247,40,o),
(217,122,o),
(217,206,cs),
(217,267,o),
(218,316,o),
(219,351,cs),
(220,386,o),
(221,412,o),
(221,427,cs),
(221,468,o),
(215,472,o),
(187,472,cs),
(155,472,o),
(21,472,o),
(21,439,cs),
(21,428,o),
(36,420,o),
(48,420,cs),
(115,420,ls),
(146,420,o),
(147,413,o),
(147,382,cs),
(148,331,o),
(148,284,o),
(149,240,cs),
(150,195,o),
(150,154,o),
(150,115,cs),
(150,-1,o),
(149,-93,o),
(146,-177,cs),
(146,-194,o),
(158,-211,o),
(185,-211,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
42 1 8 0 50 1 2 8 2 66
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 7 values pushed */
50 42 2 2 0 1 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
42 1 8 0 50 1 2 8 2 66
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 8 3 8 2 3 104 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 0 8 8 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 1 2 2 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 7 0 6 0 7 6 91 0 1 0 0 2 1 0 91 8 1 2 2 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 8 3 8 2 3 104 0 7 0 6 0 7 6 91 0 1 0 0 8 1 0 91 0 8 8 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 2 8 3 8 2 3 104 0 5 3 5 107 0 7 0 6 0 7 6 91 0 1 0 0 8 1 0 91 0 8 8 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
41 53 58 39 38 53 94 53 50 9 24
CALL[ ]	/* CallFunction */";
};
width = 660;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(176,-201,o),
(183,-194,o),
(183,-174,cs),
(183,-142,o),
(183,-107,o),
(182,-69,cs),
(181,-32,o),
(180,5,o),
(179,42,c),
(206,7,o),
(246,-20,o),
(305,-20,cs),
(399,-20,o),
(447,37,o),
(466,81,c),
(467,42,o),
(468,15,o),
(471,0,cs),
(474,-15,o),
(479,-22,o),
(486,-22,cs),
(511,-22,o),
(622,-23,o),
(622,-1,cs),
(622,7,o),
(607,10,o),
(595,10,cs),
(579,10,o),
(566,10,o),
(556,10,cs),
(546,9,o),
(539,9,o),
(535,9,cs),
(512,9,o),
(507,17,o),
(507,30,cs),
(507,33,o),
(507,44,o),
(507,63,cs),
(506,81,o),
(506,112,o),
(506,156,cs),
(506,266,o),
(509,346,o),
(509,383,cs),
(509,428,o),
(502,432,o),
(466,432,cs),
(384,432,o),
(341,424,o),
(341,411,cs),
(341,404,o),
(352,400,o),
(375,400,cs),
(441,400,ls),
(464,400,o),
(468,395,o),
(468,359,cs),
(465,172,ls),
(465,84,o),
(391,10,o),
(302,10,cs),
(198,10,o),
(181,109,o),
(181,206,cs),
(181,267,o),
(182,316,o),
(183,351,cs),
(184,386,o),
(185,412,o),
(185,427,cs),
(185,468,o),
(179,472,o),
(151,472,cs),
(70,472,o),
(25,464,o),
(25,452,cs),
(25,448,o),
(30,440,o),
(42,440,cs),
(109,440,ls),
(140,440,o),
(141,433,o),
(141,402,cs),
(142,347,o),
(142,296,o),
(143,249,cs),
(144,202,o),
(144,157,o),
(144,115,cs),
(144,-1,o),
(143,-93,o),
(140,-177,cs),
(140,-194,o),
(152,-201,o),
(163,-201,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
49 41 2 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 1 2 2 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 7 0 6 1 7 6 91 0 1 0 0 2 1 0 91 8 1 2 2 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 5 3 5 107 0 7 0 6 1 7 6 91 0 1 0 0 2 1 0 91 8 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
41 53 58 39 38 53 94 52 50 9 24
CALL[ ]	/* CallFunction */";
};
width = 644;
}
);
note = mu;
unicode = 181;
},
{
glyphname = percent;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(219,14,o),
(235,33,o),
(239,42,cs),
(248,62,o),
(311,185,o),
(408,364,cs),
(491,518,o),
(555,644,o),
(555,650,cs),
(555,653,o),
(553,657,o),
(550,662,cs),
(547,667,o),
(537,670,o),
(520,670,cs),
(489,670,o),
(461,604,o),
(432,584,cs),
(417,573,o),
(401,571,o),
(385,571,cs),
(317,571,o),
(290,593,o),
(267,617,cs),
(244,639,o),
(216,662,o),
(150,662,cs),
(89,662,o),
(28,603,o),
(28,513,cs),
(28,421,o),
(90,372,o),
(153,372,cs),
(233,372,o),
(283,438,o),
(291,499,cs),
(292,507,o),
(293,512,o),
(293,519,c),
(306,511,o),
(337,504,o),
(360,504,cs),
(373,504,o),
(389,504,o),
(400,507,c),
(400,504,o),
(330,376,o),
(277,277,cs),
(223,176,o),
(155,47,o),
(155,37,cs),
(155,26,o),
(167,14,o),
(191,14,cs)
);
},
{
closed = 1;
nodes = (
(542,-19,o),
(588,37,o),
(588,125,cs),
(588,206,o),
(552,266,o),
(463,266,cs),
(388,266,o),
(329,207,o),
(329,122,cs),
(329,51,o),
(373,-19,o),
(458,-19,cs)
);
},
{
closed = 1;
nodes = (
(413,52,o),
(402,90,o),
(402,124,cs),
(402,172,o),
(425,195,o),
(462,195,cs),
(486,195,o),
(512,179,o),
(512,128,cs),
(512,92,o),
(496,52,o),
(456,52,cs)
);
},
{
closed = 1;
nodes = (
(125,443,o),
(102,474,o),
(102,513,cs),
(102,568,o),
(131,591,o),
(154,591,cs),
(185,591,o),
(219,572,o),
(219,521,cs),
(219,473,o),
(198,443,o),
(157,443,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
51 45 2 4 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 6 0 9 8 6 9 91 0 5 5 10 83 0 10 10 15 67 0 3 3 13 67 0 8 8 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 0 6 0 9 8 6 9 91 0 3 3 13 67 0 8 8 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 2 0 2 106 0 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 0 6 0 9 8 6 9 91 0 3 3 13 67 0 8 8 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 2 0 2 106 0 3 8 7 8 3 7 104 0 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 0 6 0 9 8 6 9 91 0 8 8 7 84 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
108 106 102 100 96 94 40 38 40 41 60 43 38 37 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 632;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(216,17,o),
(225,31,o),
(232,42,c),
(246,75,o),
(297,172,o),
(400,365,cs),
(497,548,o),
(547,643,o),
(547,650,cs),
(547,653,o),
(546,656,o),
(543,660,cs),
(540,664,o),
(532,666,o),
(521,666,cs),
(493,666,o),
(474,608,o),
(442,584,cs),
(426,573,o),
(405,571,o),
(386,571,cs),
(318,571,o),
(282,591,o),
(255,617,cs),
(229,640,o),
(205,662,o),
(151,662,cs),
(90,662,o),
(29,603,o),
(29,513,cs),
(29,416,o),
(95,372,o),
(149,372,cs),
(217,372,o),
(276,436,o),
(276,526,cs),
(276,527,o),
(276,529,o),
(276,532,cs),
(275,534,o),
(275,536,o),
(275,537,c),
(310,524,o),
(340,520,o),
(384,520,cs),
(399,520,o),
(405,520,o),
(420,523,c),
(420,521,o),
(376,442,o),
(292,286,cs),
(209,131,o),
(165,44,o),
(165,37,cs),
(165,26,o),
(174,17,o),
(193,17,cs)
);
},
{
closed = 1;
nodes = (
(543,-19,o),
(589,37,o),
(589,125,cs),
(589,203,o),
(554,266,o),
(472,266,cs),
(400,266,o),
(347,206,o),
(347,122,cs),
(347,50,o),
(391,-19,o),
(467,-19,cs)
);
},
{
closed = 1;
nodes = (
(411,37,o),
(403,96,o),
(403,124,cs),
(403,183,o),
(433,210,o),
(470,210,cs),
(498,210,o),
(530,189,o),
(530,128,cs),
(530,87,o),
(512,37,o),
(465,37,cs)
);
},
{
closed = 1;
nodes = (
(107,428,o),
(85,466,o),
(85,513,cs),
(85,584,o),
(126,606,o),
(152,606,cs),
(184,606,o),
(220,582,o),
(220,521,cs),
(220,462,o),
(189,428,o),
(146,428,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
53 47 2 4 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 6 0 9 8 6 9 91 0 5 5 10 83 0 10 10 15 67 0 3 3 13 67 0 8 8 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 0 6 0 9 8 6 9 91 0 3 3 13 67 0 8 8 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 3 8 7 8 3 7 104 2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 0 6 0 9 8 6 9 91 0 8 8 7 84 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
110 108 104 102 98 96 40 38 40 41 45 45 38 37 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 633;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(211,22,o),
(216,31,o),
(220,42,cs),
(234,75,o),
(285,172,o),
(388,365,cs),
(485,548,o),
(535,643,o),
(535,650,cs),
(535,657,o),
(531,660,o),
(522,660,cs),
(496,660,o),
(486,603,o),
(456,584,cs),
(437,571,o),
(411,571,o),
(387,571,cs),
(227,571,o),
(227,662,o),
(152,662,cs),
(91,662,o),
(30,603,o),
(30,513,cs),
(30,422,o),
(93,372,o),
(144,372,cs),
(204,372,o),
(252,439,o),
(252,526,cs),
(252,539,o),
(252,562,o),
(241,582,c),
(284,554,o),
(330,545,o),
(385,545,cs),
(402,545,o),
(430,547,o),
(449,550,c),
(449,548,o),
(404,464,o),
(314,300,cs),
(224,136,o),
(179,44,o),
(179,37,cs),
(179,27,o),
(185,22,o),
(196,22,cs)
);
},
{
closed = 1;
nodes = (
(543,-19,o),
(590,37,o),
(590,125,cs),
(590,204,o),
(552,266,o),
(485,266,cs),
(420,266,o),
(373,207,o),
(373,122,cs),
(373,49,o),
(412,-19,o),
(480,-19,cs)
);
},
{
closed = 1;
nodes = (
(420,12,o),
(404,83,o),
(404,124,cs),
(404,199,o),
(444,235,o),
(481,235,cs),
(518,235,o),
(556,203,o),
(556,128,cs),
(556,74,o),
(533,12,o),
(478,12,cs)
);
},
{
closed = 1;
nodes = (
(94,403,o),
(61,451,o),
(61,513,cs),
(61,597,o),
(110,631,o),
(149,631,cs),
(186,631,o),
(221,598,o),
(221,521,cs),
(221,446,o),
(186,403,o),
(141,403,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
49 1 1 11 43 1 4 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 0 6 0 9 3 6 9 91 0 3 3 13 67 0 8 8 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 3 9 8 9 3 8 104 2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 0 6 0 9 3 6 9 91 0 8 8 7 84 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
110 108 102 100 94 92 40 38 38 41 44 44 38 35 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 634;
}
);
note = percent;
unicode = 37;
},
{
glyphname = perthousand;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(224,14,o),
(240,33,o),
(244,42,cs),
(253,62,o),
(316,185,o),
(413,364,cs),
(496,518,o),
(560,644,o),
(560,650,cs),
(560,653,o),
(558,657,o),
(555,662,cs),
(552,667,o),
(542,670,o),
(525,670,cs),
(494,670,o),
(466,604,o),
(437,584,cs),
(422,573,o),
(406,571,o),
(390,571,cs),
(322,571,o),
(295,593,o),
(272,617,cs),
(249,639,o),
(221,662,o),
(155,662,cs),
(94,662,o),
(33,603,o),
(33,513,cs),
(33,421,o),
(95,372,o),
(158,372,cs),
(238,372,o),
(288,438,o),
(296,499,cs),
(297,507,o),
(298,512,o),
(298,519,c),
(311,511,o),
(342,504,o),
(365,504,cs),
(378,504,o),
(394,504,o),
(405,507,c),
(405,504,o),
(335,376,o),
(282,277,cs),
(228,176,o),
(160,47,o),
(160,37,cs),
(160,26,o),
(172,14,o),
(196,14,cs)
);
},
{
closed = 1;
nodes = (
(547,-19,o),
(593,37,o),
(593,125,cs),
(593,206,o),
(557,266,o),
(468,266,cs),
(393,266,o),
(334,207,o),
(334,122,cs),
(334,51,o),
(378,-19,o),
(463,-19,cs)
);
},
{
closed = 1;
nodes = (
(418,52,o),
(407,90,o),
(407,124,cs),
(407,172,o),
(430,195,o),
(467,195,cs),
(491,195,o),
(517,179,o),
(517,128,cs),
(517,92,o),
(501,52,o),
(461,52,cs)
);
},
{
closed = 1;
nodes = (
(130,443,o),
(107,474,o),
(107,513,cs),
(107,568,o),
(136,591,o),
(159,591,cs),
(190,591,o),
(224,572,o),
(224,521,cs),
(224,473,o),
(203,443,o),
(162,443,cs)
);
},
{
closed = 1;
nodes = (
(856,-19,o),
(902,37,o),
(902,125,cs),
(902,206,o),
(866,266,o),
(777,266,cs),
(702,266,o),
(643,207,o),
(643,122,cs),
(643,51,o),
(687,-19,o),
(772,-19,cs)
);
},
{
closed = 1;
nodes = (
(727,52,o),
(716,90,o),
(716,124,cs),
(716,172,o),
(739,195,o),
(776,195,cs),
(800,195,o),
(826,179,o),
(826,128,cs),
(826,92,o),
(810,52,o),
(770,52,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
51 45 2 4 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 12 1 6 15 1 9 8 6 9 91 0 5 5 10 83 0 10 10 15 67 0 3 3 13 67 14 1 8 8 7 84 13 1 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 12 1 6 15 1 9 8 6 9 91 0 3 3 13 67 14 1 8 8 7 84 13 1 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 2 0 2 106 0 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 12 1 6 15 1 9 8 6 9 91 0 3 3 13 67 14 1 8 8 7 84 13 1 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 2 0 2 106 0 3 8 7 8 3 7 104 0 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 12 1 6 15 1 9 8 6 9 91 14 1 8 8 7 84 13 1 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
144 142 136 134 126 124 118 116 108 106 102 100 96 94 40 38 40 41 60 43 38 37 36 16 24
CALL[ ]	/* CallFunction */";
};
width = 928;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(220,17,o),
(229,31,o),
(236,42,c),
(250,75,o),
(301,172,o),
(404,365,cs),
(501,548,o),
(551,643,o),
(551,650,cs),
(551,653,o),
(550,656,o),
(547,660,cs),
(544,664,o),
(536,666,o),
(525,666,cs),
(497,666,o),
(478,608,o),
(446,584,cs),
(430,573,o),
(409,571,o),
(390,571,cs),
(322,571,o),
(286,591,o),
(259,617,cs),
(233,640,o),
(209,662,o),
(155,662,cs),
(94,662,o),
(33,603,o),
(33,513,cs),
(33,416,o),
(99,372,o),
(153,372,cs),
(221,372,o),
(280,436,o),
(280,526,cs),
(280,527,o),
(280,529,o),
(280,532,cs),
(279,534,o),
(279,536,o),
(279,537,c),
(314,524,o),
(344,520,o),
(388,520,cs),
(403,520,o),
(409,520,o),
(424,523,c),
(424,521,o),
(380,442,o),
(296,286,cs),
(213,131,o),
(169,44,o),
(169,37,cs),
(169,26,o),
(178,17,o),
(197,17,cs)
);
},
{
closed = 1;
nodes = (
(547,-19,o),
(593,37,o),
(593,125,cs),
(593,203,o),
(558,266,o),
(476,266,cs),
(404,266,o),
(351,206,o),
(351,122,cs),
(351,50,o),
(395,-19,o),
(471,-19,cs)
);
},
{
closed = 1;
nodes = (
(415,37,o),
(407,96,o),
(407,124,cs),
(407,183,o),
(437,210,o),
(474,210,cs),
(502,210,o),
(534,189,o),
(534,128,cs),
(534,87,o),
(516,37,o),
(469,37,cs)
);
},
{
closed = 1;
nodes = (
(111,428,o),
(89,466,o),
(89,513,cs),
(89,584,o),
(130,606,o),
(156,606,cs),
(188,606,o),
(224,582,o),
(224,521,cs),
(224,462,o),
(193,428,o),
(150,428,cs)
);
},
{
closed = 1;
nodes = (
(854,-19,o),
(900,37,o),
(900,125,cs),
(900,203,o),
(865,266,o),
(783,266,cs),
(711,266,o),
(658,206,o),
(658,122,cs),
(658,50,o),
(702,-19,o),
(778,-19,cs)
);
},
{
closed = 1;
nodes = (
(722,37,o),
(714,96,o),
(714,124,cs),
(714,183,o),
(744,210,o),
(781,210,cs),
(809,210,o),
(841,189,o),
(841,128,cs),
(841,87,o),
(823,37,o),
(776,37,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
53 47 2 4 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 12 1 6 15 1 9 8 6 9 91 0 5 5 10 83 0 10 10 15 67 0 3 3 13 67 14 1 8 8 7 84 13 1 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 12 1 6 15 1 9 8 6 9 91 0 3 3 13 67 14 1 8 8 7 84 13 1 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 3 8 7 8 3 7 104 2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 12 1 6 15 1 9 8 6 9 91 14 1 8 8 7 84 13 1 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
146 144 138 136 128 126 120 118 110 108 104 102 98 96 40 38 40 41 45 45 38 37 36 16 24
CALL[ ]	/* CallFunction */";
};
width = 927;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(214,22,o),
(219,31,o),
(223,42,cs),
(237,75,o),
(288,172,o),
(391,365,cs),
(488,548,o),
(538,643,o),
(538,650,cs),
(538,657,o),
(534,660,o),
(525,660,cs),
(499,660,o),
(489,603,o),
(459,584,cs),
(440,571,o),
(414,571,o),
(390,571,cs),
(230,571,o),
(230,662,o),
(155,662,cs),
(94,662,o),
(33,603,o),
(33,513,cs),
(33,422,o),
(96,372,o),
(147,372,cs),
(207,372,o),
(255,439,o),
(255,526,cs),
(255,539,o),
(255,562,o),
(244,582,c),
(287,554,o),
(333,545,o),
(388,545,cs),
(405,545,o),
(433,547,o),
(452,550,c),
(452,548,o),
(407,464,o),
(317,300,cs),
(227,136,o),
(182,44,o),
(182,37,cs),
(182,27,o),
(188,22,o),
(199,22,cs)
);
},
{
closed = 1;
nodes = (
(546,-19,o),
(593,37,o),
(593,125,cs),
(593,204,o),
(555,266,o),
(488,266,cs),
(423,266,o),
(376,207,o),
(376,122,cs),
(376,49,o),
(415,-19,o),
(483,-19,cs)
);
},
{
closed = 1;
nodes = (
(423,12,o),
(407,83,o),
(407,124,cs),
(407,199,o),
(447,235,o),
(484,235,cs),
(521,235,o),
(559,203,o),
(559,128,cs),
(559,74,o),
(536,12,o),
(481,12,cs)
);
},
{
closed = 1;
nodes = (
(97,403,o),
(64,451,o),
(64,513,cs),
(64,597,o),
(113,631,o),
(152,631,cs),
(189,631,o),
(224,598,o),
(224,521,cs),
(224,446,o),
(189,403,o),
(144,403,cs)
);
},
{
closed = 1;
nodes = (
(850,-19,o),
(897,40,o),
(897,125,cs),
(897,198,o),
(858,266,o),
(790,266,cs),
(727,266,o),
(680,210,o),
(680,122,cs),
(680,43,o),
(717,-19,o),
(785,-19,cs)
);
},
{
closed = 1;
nodes = (
(752,12,o),
(714,44,o),
(714,119,cs),
(714,173,o),
(737,235,o),
(792,235,cs),
(850,235,o),
(866,164,o),
(866,123,cs),
(866,48,o),
(826,12,o),
(789,12,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
49 1 1 11 43 1 4 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 13 1 6 14 1 9 3 6 9 91 0 3 3 13 67 15 1 8 8 7 84 12 1 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 3 9 8 9 3 8 104 2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 13 1 6 14 1 9 3 6 9 91 15 1 8 8 7 84 12 1 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
146 144 136 134 126 124 118 116 110 108 102 100 94 92 40 38 38 41 44 44 38 35 36 16 24
CALL[ ]	/* CallFunction */";
};
width = 925;
}
);
note = perthousand;
unicode = 8240;
},
{
glyphname = dieresiscomb;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(301,486,o),
(338,501,o),
(338,556,cs),
(338,592,o),
(310,617,o),
(278,617,cs),
(231,617,o),
(212,576,o),
(212,552,cs),
(212,513,o),
(238,486,o),
(271,486,cs)
);
},
{
closed = 1;
nodes = (
(94,509,o),
(131,524,o),
(131,579,cs),
(131,615,o),
(103,640,o),
(71,640,cs),
(24,640,o),
(5,599,o),
(5,575,cs),
(5,536,o),
(31,509,o),
(64,509,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 2 1 3 2 79 0 0 0 1 3 0 1 91 0 2 2 3 83 0 3 2 3 71 38 38 38 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 342;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(296,495,o),
(327,508,o),
(327,556,cs),
(327,587,o),
(305,608,o),
(278,608,cs),
(240,608,o),
(222,573,o),
(222,552,cs),
(222,519,o),
(244,495,o),
(271,495,cs)
);
},
{
closed = 1;
nodes = (
(89,518,o),
(120,531,o),
(120,579,cs),
(120,610,o),
(98,631,o),
(71,631,cs),
(33,631,o),
(15,596,o),
(15,575,cs),
(15,542,o),
(37,518,o),
(64,518,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 2 1 3 2 79 0 0 0 1 3 0 1 91 0 2 2 3 83 0 3 2 3 71 36 38 36 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 342;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(290,510,o),
(312,520,o),
(312,556,cs),
(312,579,o),
(297,593,o),
(278,593,cs),
(250,593,o),
(237,566,o),
(237,552,cs),
(237,528,o),
(252,510,o),
(271,510,cs)
);
},
{
closed = 1;
nodes = (
(83,533,o),
(105,543,o),
(105,579,cs),
(105,602,o),
(90,616,o),
(71,616,cs),
(43,616,o),
(30,589,o),
(30,575,cs),
(30,551,o),
(45,533,o),
(64,533,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 2 1 3 2 79 0 0 0 1 3 0 1 91 0 2 2 3 83 0 3 2 3 71 36 38 36 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 342;
}
);
note = dieresis;
unicode = 776;
},
{
glyphname = dotaccentcomb;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(94,514,o),
(131,529,o),
(131,584,cs),
(131,620,o),
(103,645,o),
(71,645,cs),
(23,645,o),
(5,607,o),
(5,580,cs),
(5,537,o),
(31,514,o),
(64,514,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 38 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 135;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(89,523,o),
(120,536,o),
(120,584,cs),
(120,615,o),
(98,636,o),
(71,636,cs),
(29,636,o),
(15,600,o),
(15,580,cs),
(15,544,o),
(37,523,o),
(64,523,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 36 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 135;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(83,538,o),
(105,548,o),
(105,584,cs),
(105,607,o),
(90,621,o),
(71,621,cs),
(43,621,o),
(30,594,o),
(30,580,cs),
(30,556,o),
(45,538,o),
(64,538,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 36 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 135;
}
);
note = dotaccent;
unicode = 775;
},
{
glyphname = gravecomb;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(144,499,o),
(153,509,o),
(153,524,cs),
(153,532,o),
(147,566,o),
(129,613,cs),
(113,653,o),
(90,690,o),
(61,690,cs),
(36,690,o),
(1,676,o),
(1,658,cs),
(1,634,o),
(78,499,o),
(129,499,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
0 0 1 0 106 0 1 1 97 40 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 154;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(139,503,o),
(145,510,o),
(145,523,cs),
(145,548,o),
(94,676,o),
(65,684,cs),
(62,685,o),
(59,686,o),
(57,686,cs),
(55,686,o),
(53,686,o),
(50,686,cs),
(29,686,o),
(10,675,o),
(10,656,cs),
(10,625,o),
(84,521,o),
(118,505,cs),
(122,504,o),
(125,503,o),
(128,503,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
0 0 1 0 106 0 1 1 97 39 50 2 17
CALL[ ]	/* CallFunction */";
};
width = 154;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(131,510,o),
(134,514,o),
(134,521,cs),
(134,532,o),
(120,569,o),
(100,610,cs),
(76,657,o),
(57,680,o),
(47,680,cs),
(31,680,o),
(23,671,o),
(23,653,cs),
(23,644,o),
(41,610,o),
(67,574,cs),
(97,531,o),
(117,510,o),
(126,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
0 0 1 0 106 0 1 1 97 39 33 2 17
CALL[ ]	/* CallFunction */";
};
width = 154;
}
);
note = grave;
unicode = 768;
},
{
glyphname = acutecomb;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(75,499,o),
(157,616,o),
(157,658,cs),
(157,676,o),
(122,690,o),
(97,690,cs),
(46,690,o),
(5,549,o),
(5,524,cs),
(5,509,o),
(15,499,o),
(28,499,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
0 1 0 1 106 0 0 0 97 38 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 154;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(31,503,o),
(34,504,o),
(38,505,cs),
(72,521,o),
(146,625,o),
(146,656,cs),
(146,675,o),
(127,686,o),
(106,686,cs),
(103,686,o),
(101,686,o),
(99,686,cs),
(97,686,o),
(94,685,o),
(91,684,cs),
(62,676,o),
(11,548,o),
(11,523,cs),
(11,510,o),
(17,503,o),
(28,503,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
0 1 0 1 106 0 0 0 97 55 38 2 17
CALL[ ]	/* CallFunction */";
};
width = 154;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(37,510,o),
(57,531,o),
(87,574,cs),
(113,610,o),
(131,644,o),
(131,653,cs),
(131,671,o),
(123,680,o),
(107,680,cs),
(97,680,o),
(78,657,o),
(55,610,cs),
(34,569,o),
(20,532,o),
(20,521,cs),
(20,514,o),
(23,510,o),
(28,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
0 1 0 1 106 0 0 0 97 39 38 2 17
CALL[ ]	/* CallFunction */";
};
width = 154;
}
);
note = acute;
unicode = 769;
},
{
glyphname = hungarumlautcomb;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(227,499,o),
(309,616,o),
(309,658,cs),
(309,676,o),
(274,690,o),
(249,690,cs),
(198,690,o),
(157,549,o),
(157,524,cs),
(157,509,o),
(167,499,o),
(180,499,cs)
);
},
{
closed = 1;
nodes = (
(75,499,o),
(157,616,o),
(157,658,cs),
(157,676,o),
(122,690,o),
(97,690,cs),
(46,690,o),
(5,549,o),
(5,524,cs),
(5,509,o),
(15,499,o),
(28,499,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
3 1 1 0 1 106 2 1 0 0 97 38 40 38 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 303;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(183,503,o),
(186,504,o),
(190,505,cs),
(224,521,o),
(298,625,o),
(298,656,cs),
(298,675,o),
(279,686,o),
(258,686,cs),
(255,686,o),
(253,686,o),
(251,686,cs),
(249,686,o),
(246,685,o),
(243,684,cs),
(214,676,o),
(163,548,o),
(163,523,cs),
(163,510,o),
(169,503,o),
(180,503,cs)
);
},
{
closed = 1;
nodes = (
(31,503,o),
(34,504,o),
(38,505,cs),
(72,521,o),
(146,625,o),
(146,656,cs),
(146,675,o),
(127,686,o),
(106,686,cs),
(103,686,o),
(101,686,o),
(99,686,cs),
(97,686,o),
(94,685,o),
(91,684,cs),
(62,676,o),
(11,548,o),
(11,523,cs),
(11,510,o),
(17,503,o),
(28,503,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
3 1 1 0 1 106 2 1 0 0 97 55 40 55 39 4 30
CALL[ ]	/* CallFunction */";
};
width = 303;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(189,510,o),
(209,531,o),
(239,574,cs),
(265,610,o),
(283,644,o),
(283,653,cs),
(283,671,o),
(275,680,o),
(259,680,cs),
(249,680,o),
(230,657,o),
(207,610,cs),
(186,569,o),
(172,532,o),
(172,521,cs),
(172,514,o),
(175,510,o),
(180,510,cs)
);
},
{
closed = 1;
nodes = (
(37,510,o),
(57,531,o),
(87,574,cs),
(113,610,o),
(131,644,o),
(131,653,cs),
(131,671,o),
(123,680,o),
(107,680,cs),
(97,680,o),
(78,657,o),
(55,610,cs),
(34,569,o),
(20,532,o),
(20,521,cs),
(20,514,o),
(23,510,o),
(28,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
3 1 1 0 1 106 2 1 0 0 97 39 39 39 39 4 30
CALL[ ]	/* CallFunction */";
};
width = 303;
}
);
note = hungarumlaut;
unicode = 779;
},
{
glyphname = caroncomb.alt;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
anchors = (
{
name = _topright;
pos = (81,972);
}
);
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(159,715,o),
(179,782,o),
(179,806,cs),
(179,833,o),
(162,850,o),
(137,850,cs),
(116,850,o),
(101,835,o),
(101,816,cs),
(101,793,o),
(127,784,o),
(127,772,cs),
(127,765,o),
(124,757,o),
(118,750,cs),
(111,742,o),
(108,735,o),
(108,730,cs),
(108,722,o),
(117,715,o),
(124,715,cs)
);
}
);
width = 300;
},
{
anchors = (
{
name = _topright;
pos = (91,972);
}
);
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(179,674,o),
(220,724,o),
(220,778,cs),
(220,831,o),
(190,850,o),
(163,850,cs),
(126,850,o),
(111,825,o),
(111,801,cs),
(111,769,o),
(147,770,o),
(147,753,cs),
(147,736,o),
(145,723,o),
(141,715,cs),
(136,706,o),
(134,699,o),
(134,693,cs),
(134,676,o),
(148,674,o),
(155,674,cs)
);
}
);
width = 300;
},
{
anchors = (
{
name = _topright;
pos = (62,972);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(147,649,o),
(210,691,o),
(210,768,cs),
(210,825,o),
(174,849,o),
(142,849,cs),
(98,849,o),
(82,819,o),
(82,791,cs),
(82,760,o),
(118,758,o),
(118,741,cs),
(118,721,o),
(116,706,o),
(111,697,cs),
(106,687,o),
(103,679,o),
(103,672,cs),
(103,649,o),
(122,649,o),
(129,649,cs)
);
}
);
width = 300;
}
);
},
{
glyphname = circumflexcomb;
lastChange = "2024-06-14 09:04:20 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (158,436);
},
{
name = top;
pos = (158,664);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(50,510,o),
(108,546,o),
(157,572,c),
(229,534,o),
(266,510,o),
(277,510,cs),
(286,510,o),
(290,520,o),
(290,531,cs),
(290,572,o),
(181,664,o),
(157,664,cs),
(146,664,o),
(111,639,o),
(84,614,cs),
(53,585,o),
(25,549,o),
(25,524,cs),
(25,517,o),
(30,510,o),
(38,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
5 1 0 2 1 66 0 2 0 2 106 1 3 2 0 0 97 1 0 19 17 11 9 0 25 1 25 4 15
CALL[ ]	/* CallFunction */";
};
width = 315;
},
{
anchors = (
{
name = _top;
pos = (158,436);
},
{
name = top;
pos = (158,655);
}
);
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(53,510,o),
(84,538,o),
(157,581,c),
(170,573,o),
(264,510,o),
(277,510,cs),
(285,510,o),
(288,518,o),
(288,527,cs),
(288,562,o),
(182,655,o),
(157,655,cs),
(135,655,o),
(27,564,o),
(27,523,cs),
(27,514,o),
(31,510,o),
(38,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
5 1 0 2 1 66 0 2 0 2 106 1 3 2 0 0 97 1 0 18 16 11 9 0 24 1 24 4 15
CALL[ ]	/* CallFunction */";
};
width = 315;
},
{
anchors = (
{
name = _top;
pos = (158,436);
},
{
name = top;
pos = (158,640);
}
);
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(52,510,o),
(104,559,o),
(157,596,c),
(233,542,o),
(262,510,o),
(277,510,cs),
(282,510,o),
(285,514,o),
(285,521,cs),
(285,546,o),
(182,640,o),
(157,640,cs),
(134,640,o),
(30,546,o),
(30,521,cs),
(30,514,o),
(33,510,o),
(38,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
5 1 0 2 1 66 0 2 0 2 106 1 3 2 0 0 97 1 0 18 16 11 9 0 23 1 23 4 15
CALL[ ]	/* CallFunction */";
};
width = 315;
}
);
note = circumflex;
unicode = 770;
},
{
glyphname = caroncomb;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(181,486,o),
(290,578,o),
(290,619,cs),
(290,630,o),
(286,640,o),
(277,640,cs),
(266,640,o),
(229,616,o),
(157,578,c),
(108,604,o),
(50,640,o),
(38,640,cs),
(30,640,o),
(25,633,o),
(25,626,cs),
(25,599,o),
(53,565,o),
(84,537,cs),
(111,511,o),
(146,486,o),
(157,486,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
21 1 1 0 1 66 2 3 2 0 1 0 106 0 1 1 97 1 0 17 15 9 7 0 25 1 25 4 15
CALL[ ]	/* CallFunction */";
};
width = 315;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(182,495,o),
(288,588,o),
(288,623,cs),
(288,632,o),
(285,640,o),
(277,640,cs),
(263,640,o),
(229,611,o),
(157,569,c),
(84,612,o),
(53,640,o),
(38,640,cs),
(31,640,o),
(27,636,o),
(27,627,cs),
(27,586,o),
(135,495,o),
(157,495,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
6 1 2 0 1 66 1 3 2 0 2 0 106 0 2 2 97 2 1 19 17 12 10 1 25 2 25 4 26
CALL[ ]	/* CallFunction */";
};
width = 315;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(182,510,o),
(285,604,o),
(285,629,cs),
(285,636,o),
(282,640,o),
(277,640,cs),
(262,640,o),
(233,608,o),
(157,554,c),
(121,580,o),
(51,640,o),
(38,640,cs),
(33,640,o),
(30,636,o),
(30,629,cs),
(30,604,o),
(134,510,o),
(157,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
6 1 2 0 1 66 1 3 2 0 2 0 106 0 2 2 97 2 1 19 17 12 10 1 24 2 24 4 26
CALL[ ]	/* CallFunction */";
};
width = 315;
}
);
note = caron;
unicode = 780;
},
{
glyphname = brevecomb;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(165,510,o),
(234,537,o),
(234,589,cs),
(234,616,o),
(216,619,o),
(196,619,cs),
(179,619,o),
(164,605,o),
(164,590,cs),
(164,585,o),
(160,580,o),
(151,575,cs),
(142,570,o),
(127,567,o),
(108,567,cs),
(78,567,o),
(49,575,o),
(49,590,cs),
(49,613,o),
(36,619,o),
(13,619,cs),
(-10,619,o),
(-19,606,o),
(-19,589,cs),
(-19,546,o),
(26,510,o),
(113,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 1 2 1 106 0 2 0 0 2 79 0 2 2 0 83 0 0 2 0 71 36 38 36 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 249;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(168,510,o),
(234,537,o),
(234,589,cs),
(234,616,o),
(217,617,o),
(204,617,cs),
(189,617,o),
(178,605,o),
(178,590,cs),
(178,573,o),
(153,555,o),
(114,555,cs),
(84,555,o),
(49,564,o),
(49,590,cs),
(49,610,o),
(40,617,o),
(21,617,cs),
(4,617,o),
(-5,608,o),
(-5,589,cs),
(-5,548,o),
(41,510,o),
(117,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 1 2 1 106 0 2 0 0 2 79 0 2 2 0 83 0 0 2 0 71 36 38 35 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 249;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(176,510,o),
(234,541,o),
(234,589,cs),
(234,610,o),
(226,613,o),
(215,613,cs),
(204,613,o),
(198,605,o),
(198,590,cs),
(198,563,o),
(159,535,o),
(123,535,cs),
(84,535,o),
(49,549,o),
(49,590,cs),
(49,606,o),
(47,613,o),
(32,613,cs),
(21,613,o),
(15,605,o),
(15,589,cs),
(15,548,o),
(65,510,o),
(123,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 1 2 1 106 0 2 0 0 2 79 0 2 2 0 83 0 0 2 0 71 37 36 37 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 249;
}
);
note = breve;
unicode = 774;
},
{
glyphname = ringcomb;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(114,510,o),
(147,533,o),
(147,581,cs),
(147,626,o),
(121,649,o),
(69,649,cs),
(28,649,o),
(-6,630,o),
(-6,579,cs),
(-6,532,o),
(29,510,o),
(74,510,cs)
);
},
{
closed = 1;
nodes = (
(65,553,o),
(50,556,o),
(50,579,cs),
(50,590,o),
(53,598,o),
(58,602,cs),
(63,605,o),
(67,607,o),
(70,607,cs),
(81,607,o),
(92,599,o),
(92,580,cs),
(92,559,o),
(82,553,o),
(74,553,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
4 1 2 1 3 0 2 96 0 3 0 1 3 94 0 1 2 0 1 80 0 1 1 0 83 0 0 1 0 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
4 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 1 2 0 1 80 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
12 11 18 16 11 22 12 22 36 34 5 17
CALL[ ]	/* CallFunction */";
};
width = 167;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(113,510,o),
(147,533,o),
(147,581,cs),
(147,624,o),
(123,649,o),
(76,649,cs),
(36,649,o),
(5,619,o),
(5,579,cs),
(5,538,o),
(37,510,o),
(77,510,cs)
);
},
{
closed = 1;
nodes = (
(69,544,o),
(50,550,o),
(50,579,cs),
(50,607,o),
(65,615,o),
(76,615,cs),
(89,615,o),
(102,605,o),
(102,580,cs),
(102,565,o),
(99,555,o),
(92,551,cs),
(85,546,o),
(80,544,o),
(77,544,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
4 1 2 1 3 0 2 96 0 3 0 1 3 94 0 1 2 0 1 80 0 1 1 0 83 0 0 1 0 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
4 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 1 2 0 1 80 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
13 12 19 17 12 23 13 23 36 34 5 17
CALL[ ]	/* CallFunction */";
};
width = 167;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(113,510,o),
(147,533,o),
(147,581,cs),
(147,617,o),
(126,649,o),
(86,649,cs),
(47,649,o),
(20,619,o),
(20,579,cs),
(20,538,o),
(47,510,o),
(82,510,cs)
);
},
{
closed = 1;
nodes = (
(59,529,o),
(50,550,o),
(50,579,cs),
(50,607,o),
(59,629,o),
(84,629,cs),
(111,629,o),
(117,605,o),
(117,580,cs),
(117,549,o),
(105,529,o),
(82,529,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 1 4 1 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71 13 12 19 17 12 23 13 23 36 34 5 17
CALL[ ]	/* CallFunction */";
};
width = 167;
}
);
note = ring;
unicode = 778;
},
{
glyphname = tildecomb;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(49,498,o),
(73,523,o),
(112,523,cs),
(151,523,o),
(193,499,o),
(249,499,cs),
(282,499,o),
(360,517,o),
(360,574,cs),
(360,595,o),
(345,609,o),
(338,609,cs),
(333,609,o),
(323,605,o),
(308,596,cs),
(289,585,o),
(267,579,o),
(248,579,cs),
(209,579,o),
(147,607,o),
(111,607,cs),
(86,607,o),
(64,601,o),
(43,589,cs),
(24,578,o),
(9,563,o),
(9,534,cs),
(9,514,o),
(16,498,o),
(28,498,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 4 3 1 79 2 1 0 0 4 3 0 4 91 0 1 1 3 83 5 1 3 1 3 71 35 35 38 35 35 36 6 21
CALL[ ]	/* CallFunction */";
};
width = 369;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(45,507,o),
(72,532,o),
(112,532,cs),
(151,532,o),
(193,508,o),
(249,508,cs),
(305,508,o),
(338,530,o),
(351,553,cs),
(354,559,o),
(356,565,o),
(356,572,cs),
(356,588,o),
(345,600,o),
(338,600,cs),
(335,600,o),
(331,599,o),
(328,598,cs),
(324,596,o),
(317,592,o),
(308,587,cs),
(285,576,o),
(265,570,o),
(248,570,cs),
(209,570,o),
(147,598,o),
(111,598,cs),
(86,598,o),
(64,592,o),
(43,580,cs),
(33,574,o),
(26,569,o),
(22,564,cs),
(18,559,o),
(15,555,o),
(14,552,cs),
(12,547,o),
(11,541,o),
(11,535,cs),
(11,520,o),
(17,507,o),
(28,507,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 4 3 1 79 2 1 0 0 4 3 0 4 91 0 1 1 3 83 5 1 3 1 3 71 35 35 38 35 35 36 6 21
CALL[ ]	/* CallFunction */";
};
width = 369;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(44,522,o),
(71,547,o),
(112,547,cs),
(151,547,o),
(193,523,o),
(249,523,cs),
(302,523,o),
(351,543,o),
(351,568,cs),
(351,577,o),
(345,585,o),
(338,585,cs),
(335,585,o),
(331,584,o),
(328,583,cs),
(324,581,o),
(317,577,o),
(308,572,cs),
(285,561,o),
(265,555,o),
(248,555,cs),
(209,555,o),
(147,583,o),
(111,583,cs),
(86,583,o),
(64,577,o),
(43,565,cs),
(24,554,o),
(14,544,o),
(14,537,cs),
(14,530,o),
(21,522,o),
(28,522,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 4 3 1 79 2 1 0 0 4 3 0 4 91 0 1 1 3 83 5 1 3 1 3 71 35 35 38 35 35 35 6 21
CALL[ ]	/* CallFunction */";
};
width = 369;
}
);
note = tilde;
unicode = 771;
},
{
glyphname = macroncomb;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,486,o),
(203,487,o),
(277,487,cs),
(306,487,o),
(313,514,o),
(313,529,cs),
(313,549,o),
(300,566,o),
(285,566,cs),
(269,566,o),
(251,566,o),
(230,565,cs),
(209,564,o),
(185,563,o),
(157,563,cs),
(115,563,o),
(66,565,o),
(36,565,cs),
(13,565,o),
(3,545,o),
(3,526,cs),
(3,507,o),
(17,486,o),
(36,486,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 14 7 0 26 1 18 3 15
CALL[ ]	/* CallFunction */";
};
width = 316;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(106,495,o),
(203,496,o),
(277,496,cs),
(300,496,o),
(306,518,o),
(306,529,cs),
(306,544,o),
(296,557,o),
(285,557,cs),
(269,557,o),
(251,557,o),
(230,556,cs),
(209,555,o),
(185,554,o),
(157,554,cs),
(115,554,o),
(66,556,o),
(36,556,cs),
(17,556,o),
(10,541,o),
(10,526,cs),
(10,511,o),
(21,495,o),
(36,495,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 12 5 0 24 1 16 3 15
CALL[ ]	/* CallFunction */";
};
width = 316;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(106,510,o),
(203,511,o),
(277,511,cs),
(292,511,o),
(296,522,o),
(296,529,cs),
(296,536,o),
(290,542,o),
(285,542,cs),
(269,542,o),
(251,542,o),
(230,541,cs),
(209,540,o),
(185,539,o),
(157,539,cs),
(115,539,o),
(66,541,o),
(36,541,cs),
(25,541,o),
(20,533,o),
(20,526,cs),
(20,519,o),
(27,510,o),
(36,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 12 5 0 24 1 16 3 15
CALL[ ]	/* CallFunction */";
};
width = 316;
}
);
note = macron;
unicode = 772;
},
{
glyphname = commaaccentcomb;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(159,-185,o),
(179,-118,o),
(179,-94,cs),
(179,-67,o),
(162,-50,o),
(137,-50,cs),
(116,-50,o),
(101,-65,o),
(101,-84,cs),
(101,-107,o),
(127,-116,o),
(127,-128,cs),
(127,-135,o),
(124,-143,o),
(118,-150,cs),
(111,-158,o),
(108,-165,o),
(108,-170,cs),
(108,-178,o),
(117,-185,o),
(124,-185,cs)
);
}
);
width = 300;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(179,-226,o),
(220,-176,o),
(220,-122,cs),
(220,-69,o),
(190,-50,o),
(163,-50,cs),
(126,-50,o),
(111,-75,o),
(111,-99,cs),
(111,-131,o),
(147,-130,o),
(147,-147,cs),
(147,-164,o),
(145,-177,o),
(141,-185,cs),
(136,-194,o),
(134,-201,o),
(134,-207,cs),
(134,-224,o),
(148,-226,o),
(155,-226,cs)
);
}
);
width = 300;
},
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(147,-251,o),
(210,-209,o),
(210,-132,cs),
(210,-75,o),
(174,-51,o),
(142,-51,cs),
(98,-51,o),
(82,-81,o),
(82,-109,cs),
(82,-140,o),
(118,-142,o),
(118,-159,cs),
(118,-179,o),
(116,-194,o),
(111,-203,cs),
(106,-213,o),
(103,-221,o),
(103,-228,cs),
(103,-251,o),
(122,-251,o),
(129,-251,cs)
);
}
);
width = 300;
}
);
unicode = 806;
},
{
glyphname = cedillacomb;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(149,-181,o),
(208,-155,o),
(208,-103,cs),
(208,-64,o),
(175,-40,o),
(131,-40,cs),
(103,-40,o),
(83,-50,o),
(51,-69,c),
(64,3,l),
(45,7,l),
(-16,7,l),
(-16,7,l),
(-17,1,o),
(-19,-10,o),
(-20,-26,cs),
(-22,-42,o),
(-25,-57,o),
(-28,-71,cs),
(-29,-76,o),
(-31,-84,o),
(-31,-88,cs),
(-31,-103,o),
(-24,-121,o),
(7,-121,cs),
(49,-121,o),
(63,-93,o),
(97,-93,cs),
(108,-93,o),
(120,-98,o),
(120,-109,cs),
(120,-117,o),
(117,-123,o),
(111,-126,cs),
(105,-129,o),
(93,-131,o),
(75,-131,cs),
(2,-131,o),
(0,-151,o),
(0,-159,cs),
(0,-168,o),
(6,-173,o),
(19,-176,cs),
(31,-179,o),
(51,-181,o),
(79,-181,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
1 1 0 5 2 1 3 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 5 3 5 0 3 104 0 3 4 5 3 4 102 6 1 5 0 4 2 5 4 91 0 2 2 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 0 5 3 5 0 3 104 0 3 4 5 3 4 102 6 1 5 0 4 2 5 4 91 0 2 1 1 2 79 0 2 2 1 83 0 1 2 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 41 0 41 35 36 38 38 36 7 20
CALL[ ]	/* CallFunction */";
};
width = 228;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(149,-181,o),
(208,-155,o),
(208,-103,cs),
(208,-64,o),
(175,-40,o),
(131,-40,cs),
(103,-40,o),
(83,-50,o),
(51,-69,c),
(64,3,l),
(45,7,l),
(5,7,l),
(5,7,l),
(4,1,o),
(2,-10,o),
(1,-26,cs),
(-1,-42,o),
(-4,-57,o),
(-7,-71,cs),
(-8,-76,o),
(-10,-84,o),
(-10,-88,cs),
(-10,-99,o),
(-4,-113,o),
(19,-113,cs),
(50,-113,o),
(74,-85,o),
(110,-85,cs),
(119,-85,o),
(141,-90,o),
(141,-109,cs),
(141,-136,o),
(118,-139,o),
(75,-139,cs),
(48,-139,o),
(32,-141,o),
(25,-146,cs),
(18,-151,o),
(14,-156,o),
(14,-161,cs),
(14,-170,o),
(20,-175,o),
(31,-177,cs),
(42,-180,o),
(58,-181,o),
(79,-181,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
1 1 0 5 2 1 3 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 0 0 3 4 0 3 91 6 1 5 0 4 2 5 4 91 0 2 2 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 0 3 4 0 3 91 6 1 5 0 4 2 5 4 91 0 2 1 1 2 79 0 2 2 1 83 0 1 2 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 39 0 39 35 36 36 38 36 7 20
CALL[ ]	/* CallFunction */";
};
width = 228;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(149,-181,o),
(208,-155,o),
(208,-103,cs),
(208,-64,o),
(175,-40,o),
(131,-40,cs),
(103,-40,o),
(83,-50,o),
(51,-69,c),
(64,3,l),
(45,7,l),
(35,7,l),
(34,1,o),
(32,-10,o),
(31,-26,cs),
(29,-42,o),
(26,-57,o),
(23,-71,cs),
(22,-76,o),
(20,-84,o),
(20,-88,cs),
(20,-93,o),
(25,-100,o),
(36,-100,cs),
(58,-100,o),
(92,-72,o),
(128,-72,cs),
(157,-72,o),
(171,-90,o),
(171,-109,cs),
(171,-140,o),
(136,-152,o),
(75,-152,cs),
(62,-152,o),
(52,-152,o),
(45,-153,cs),
(38,-154,o),
(34,-158,o),
(34,-164,cs),
(34,-169,o),
(37,-173,o),
(43,-176,cs),
(48,-179,o),
(60,-181,o),
(79,-181,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
1 1 0 5 2 1 3 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 0 0 3 4 0 3 91 6 1 5 0 4 2 5 4 91 0 2 2 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 0 3 4 0 3 91 6 1 5 0 4 2 5 4 91 0 2 1 1 2 79 0 2 2 1 83 0 1 2 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 39 0 39 35 36 36 38 36 7 20
CALL[ ]	/* CallFunction */";
};
width = 228;
}
);
note = cedilla;
unicode = 807;
},
{
glyphname = ogonekcomb;
lastChange = "2024-06-14 08:59:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(162,-149,o),
(193,-120,o),
(193,-96,cs),
(193,-84,o),
(181,-72,o),
(168,-72,cs),
(148,-72,o),
(149,-96,o),
(108,-96,cs),
(93,-96,o),
(79,-90,o),
(79,-75,cs),
(79,-46,o),
(101,5,o),
(137,13,c),
(77,13,l),
(56,4,o),
(0,-27,o),
(0,-74,cs),
(0,-126,o),
(60,-149,o),
(110,-149,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 3 2 1 94 0 3 2 3 106 0 2 0 0 2 79 0 2 2 0 84 4 1 0 2 0 72
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 1 3 1 106 0 3 2 3 106 0 2 0 0 2 79 0 2 2 0 84 4 1 0 2 0 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
1 0 25 23 20 18 11 10 0 31 1 31 5 15
CALL[ ]	/* CallFunction */";
};
width = 227;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(163,-149,o),
(193,-108,o),
(193,-98,cs),
(193,-87,o),
(187,-76,o),
(172,-76,cs),
(168,-76,o),
(164,-78,o),
(159,-82,cs),
(154,-87,o),
(148,-92,o),
(143,-97,cs),
(137,-103,o),
(126,-106,o),
(109,-106,cs),
(93,-106,o),
(78,-91,o),
(78,-75,cs),
(78,-56,o),
(92,-2,o),
(137,13,c),
(87,14,l),
(87,14,l),
(73,7,o),
(61,0,o),
(50,-9,cs),
(31,-24,o),
(14,-45,o),
(14,-76,cs),
(14,-119,o),
(56,-149,o),
(115,-149,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
4 1 3 1 0 3 94 0 1 0 1 106 0 0 2 2 0 79 0 0 0 2 84 0 2 0 2 72
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
4 1 3 1 3 106 0 1 0 1 106 0 0 2 2 0 79 0 0 0 2 84 0 2 0 2 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 29 0 29 38 35 39 5 18
CALL[ ]	/* CallFunction */";
};
width = 227;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(163,-149,o),
(193,-108,o),
(193,-98,cs),
(193,-90,o),
(191,-82,o),
(179,-82,cs),
(160,-82,o),
(154,-122,o),
(117,-122,cs),
(86,-122,o),
(78,-92,o),
(78,-75,cs),
(78,-56,o),
(92,-2,o),
(137,13,c),
(102,14,l),
(89,7,o),
(78,0,o),
(68,-9,cs),
(51,-24,o),
(34,-45,o),
(34,-76,cs),
(34,-119,o),
(68,-149,o),
(115,-149,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
4 1 3 1 0 3 94 0 1 0 1 106 0 0 2 2 0 79 0 0 0 2 84 0 2 0 2 72
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
4 1 3 1 3 106 0 1 0 1 106 0 0 2 2 0 79 0 0 0 2 84 0 2 0 2 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 31 0 31 38 35 41 5 18
CALL[ ]	/* CallFunction */";
};
width = 227;
}
);
note = ogonek;
unicode = 808;
},
{
glyphname = dieresis;
lastChange = "2024-06-13 14:37:32 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = dieresiscomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 2 1 3 2 79 0 0 0 1 3 0 1 91 0 2 2 3 83 0 3 2 3 71 38 38 38 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 342;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
ref = dieresiscomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 2 1 3 2 79 0 0 0 1 3 0 1 91 0 2 2 3 83 0 3 2 3 71 36 38 36 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 342;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
ref = dieresiscomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 2 1 3 2 79 0 0 0 1 3 0 1 91 0 2 2 3 83 0 3 2 3 71 36 38 36 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 342;
}
);
note = dieresis;
unicode = 168;
},
{
glyphname = dotaccent;
lastChange = "2024-06-13 14:37:32 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = dotaccentcomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 38 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 135;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
ref = dotaccentcomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 36 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 135;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
ref = dotaccentcomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 36 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 135;
}
);
note = dotaccent;
unicode = 729;
},
{
glyphname = grave;
lastChange = "2024-06-13 14:37:32 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = gravecomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
0 0 1 0 106 0 1 1 97 40 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 154;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
ref = gravecomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
0 0 1 0 106 0 1 1 97 39 50 2 17
CALL[ ]	/* CallFunction */";
};
width = 154;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
ref = gravecomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
0 0 1 0 106 0 1 1 97 39 33 2 17
CALL[ ]	/* CallFunction */";
};
width = 154;
}
);
note = grave;
unicode = 96;
},
{
glyphname = acute;
lastChange = "2024-06-13 14:37:32 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = acutecomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
0 1 0 1 106 0 0 0 97 38 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 154;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
ref = acutecomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
0 1 0 1 106 0 0 0 97 55 38 2 17
CALL[ ]	/* CallFunction */";
};
width = 154;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
ref = acutecomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
0 1 0 1 106 0 0 0 97 39 38 2 17
CALL[ ]	/* CallFunction */";
};
width = 154;
}
);
note = acute;
unicode = 180;
},
{
glyphname = hungarumlaut;
lastChange = "2024-06-13 14:37:32 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = hungarumlautcomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
3 1 1 0 1 106 2 1 0 0 97 38 40 38 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 303;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
ref = hungarumlautcomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
3 1 1 0 1 106 2 1 0 0 97 55 40 55 39 4 30
CALL[ ]	/* CallFunction */";
};
width = 303;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
ref = hungarumlautcomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
3 1 1 0 1 106 2 1 0 0 97 39 39 39 39 4 30
CALL[ ]	/* CallFunction */";
};
width = 303;
}
);
note = hungarumlaut;
unicode = 733;
},
{
glyphname = circumflex;
lastChange = "2024-06-13 14:37:32 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = circumflexcomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
5 1 0 2 1 66 0 2 0 2 106 1 3 2 0 0 97 1 0 19 17 11 9 0 25 1 25 4 15
CALL[ ]	/* CallFunction */";
};
width = 315;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
ref = circumflexcomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
5 1 0 2 1 66 0 2 0 2 106 1 3 2 0 0 97 1 0 18 16 11 9 0 24 1 24 4 15
CALL[ ]	/* CallFunction */";
};
width = 315;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
ref = circumflexcomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
5 1 0 2 1 66 0 2 0 2 106 1 3 2 0 0 97 1 0 18 16 11 9 0 23 1 23 4 15
CALL[ ]	/* CallFunction */";
};
width = 315;
}
);
note = circumflex;
unicode = 710;
},
{
glyphname = caron;
lastChange = "2024-06-13 14:37:32 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = caroncomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
21 1 1 0 1 66 2 3 2 0 1 0 106 0 1 1 97 1 0 17 15 9 7 0 25 1 25 4 15
CALL[ ]	/* CallFunction */";
};
width = 315;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
ref = caroncomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
6 1 2 0 1 66 1 3 2 0 2 0 106 0 2 2 97 2 1 19 17 12 10 1 25 2 25 4 26
CALL[ ]	/* CallFunction */";
};
width = 315;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
ref = caroncomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
6 1 2 0 1 66 1 3 2 0 2 0 106 0 2 2 97 2 1 19 17 12 10 1 24 2 24 4 26
CALL[ ]	/* CallFunction */";
};
width = 315;
}
);
note = caron;
unicode = 711;
},
{
glyphname = breve;
lastChange = "2024-06-13 14:37:32 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = brevecomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 1 2 1 106 0 2 0 0 2 79 0 2 2 0 83 0 0 2 0 71 36 38 36 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 249;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
ref = brevecomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 1 2 1 106 0 2 0 0 2 79 0 2 2 0 83 0 0 2 0 71 36 38 35 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 249;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
ref = brevecomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 1 2 1 106 0 2 0 0 2 79 0 2 2 0 83 0 0 2 0 71 37 36 37 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 249;
}
);
note = breve;
unicode = 728;
},
{
glyphname = ring;
lastChange = "2024-06-13 14:37:32 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = ringcomb;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
4 1 2 1 3 0 2 96 0 3 0 1 3 94 0 1 2 0 1 80 0 1 1 0 83 0 0 1 0 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
4 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 1 2 0 1 80 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
12 11 18 16 11 22 12 22 36 34 5 17
CALL[ ]	/* CallFunction */";
};
width = 167;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
ref = ringcomb;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
4 1 2 1 3 0 2 96 0 3 0 1 3 94 0 1 2 0 1 80 0 1 1 0 83 0 0 1 0 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
4 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 1 2 0 1 80 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
13 12 19 17 12 23 13 23 36 34 5 17
CALL[ ]	/* CallFunction */";
};
width = 167;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
ref = ringcomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 1 4 1 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71 13 12 19 17 12 23 13 23 36 34 5 17
CALL[ ]	/* CallFunction */";
};
width = 167;
}
);
note = ring;
unicode = 730;
},
{
glyphname = tilde;
lastChange = "2024-06-13 14:37:32 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = tildecomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 4 3 1 79 2 1 0 0 4 3 0 4 91 0 1 1 3 83 5 1 3 1 3 71 35 35 38 35 35 36 6 21
CALL[ ]	/* CallFunction */";
};
width = 369;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
ref = tildecomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 4 3 1 79 2 1 0 0 4 3 0 4 91 0 1 1 3 83 5 1 3 1 3 71 35 35 38 35 35 36 6 21
CALL[ ]	/* CallFunction */";
};
width = 369;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
ref = tildecomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 4 3 1 79 2 1 0 0 4 3 0 4 91 0 1 1 3 83 5 1 3 1 3 71 35 35 38 35 35 35 6 21
CALL[ ]	/* CallFunction */";
};
width = 369;
}
);
note = tilde;
unicode = 732;
},
{
glyphname = macron;
lastChange = "2024-06-13 14:37:32 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = macroncomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 14 7 0 26 1 18 3 15
CALL[ ]	/* CallFunction */";
};
width = 316;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
ref = macroncomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 12 5 0 24 1 16 3 15
CALL[ ]	/* CallFunction */";
};
width = 316;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
ref = macroncomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 12 5 0 24 1 16 3 15
CALL[ ]	/* CallFunction */";
};
width = 316;
}
);
note = macron;
unicode = 175;
},
{
glyphname = cedilla;
lastChange = "2024-06-13 14:37:32 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = cedillacomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
1 1 0 5 2 1 3 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 5 3 5 0 3 104 0 3 4 5 3 4 102 6 1 5 0 4 2 5 4 91 0 2 2 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 0 5 3 5 0 3 104 0 3 4 5 3 4 102 6 1 5 0 4 2 5 4 91 0 2 1 1 2 79 0 2 2 1 83 0 1 2 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 41 0 41 35 36 38 38 36 7 20
CALL[ ]	/* CallFunction */";
};
width = 228;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
ref = cedillacomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
1 1 0 5 2 1 3 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 0 0 3 4 0 3 91 6 1 5 0 4 2 5 4 91 0 2 2 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 0 3 4 0 3 91 6 1 5 0 4 2 5 4 91 0 2 1 1 2 79 0 2 2 1 83 0 1 2 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 39 0 39 35 36 36 38 36 7 20
CALL[ ]	/* CallFunction */";
};
width = 228;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
ref = cedillacomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
1 1 0 5 2 1 3 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 0 0 3 4 0 3 91 6 1 5 0 4 2 5 4 91 0 2 2 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 0 3 4 0 3 91 6 1 5 0 4 2 5 4 91 0 2 1 1 2 79 0 2 2 1 83 0 1 2 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 39 0 39 35 36 36 38 36 7 20
CALL[ ]	/* CallFunction */";
};
width = 228;
}
);
note = cedilla;
unicode = 184;
},
{
glyphname = ogonek;
lastChange = "2024-06-13 14:37:32 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = ogonekcomb;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 3 2 1 94 0 3 2 3 106 0 2 0 0 2 79 0 2 2 0 84 4 1 0 2 0 72
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 1 3 1 106 0 3 2 3 106 0 2 0 0 2 79 0 2 2 0 84 4 1 0 2 0 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
1 0 25 23 20 18 11 10 0 31 1 31 5 15
CALL[ ]	/* CallFunction */";
};
width = 227;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
ref = ogonekcomb;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
4 1 3 1 0 3 94 0 1 0 1 106 0 0 2 2 0 79 0 0 0 2 84 0 2 0 2 72
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
4 1 3 1 3 106 0 1 0 1 106 0 0 2 2 0 79 0 0 0 2 84 0 2 0 2 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 29 0 29 38 35 39 5 18
CALL[ ]	/* CallFunction */";
};
width = 227;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
ref = ogonekcomb;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
4 1 3 1 0 3 94 0 1 0 1 106 0 0 2 2 0 79 0 0 0 2 84 0 2 0 2 72
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
4 1 3 1 3 106 0 1 0 1 106 0 0 2 2 0 79 0 0 0 2 84 0 2 0 2 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 31 0 31 38 35 41 5 18
CALL[ ]	/* CallFunction */";
};
width = 227;
}
);
note = ogonek;
unicode = 731;
},
{
glyphname = apostrophemod;
kernLeft = apostrophe;
kernRight = apostrophe;
lastChange = "2024-06-14 09:40:32 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(79,462,o),
(101,542,o),
(101,601,cs),
(101,637,o),
(93,671,o),
(52,671,cs),
(10,671,o),
(5,626,o),
(5,600,cs),
(5,556,o),
(10,522,o),
(20,498,cs),
(30,474,o),
(41,462,o),
(53,462,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 1 1 0 83 2 1 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
1 0 11 9 0 17 1 17 3 15
CALL[ ]	/* CallFunction */";
};
width = 106;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(92,478,o),
(99,605,o),
(99,620,cs),
(99,644,o),
(98,681,o),
(61,681,cs),
(25,681,o),
(24,631,o),
(24,614,cs),
(24,583,o),
(29,478,o),
(62,478,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 1 1 0 83 2 1 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
1 0 11 9 0 19 1 19 3 15
CALL[ ]	/* CallFunction */";
};
width = 123;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(68,498,o),
(70,658,o),
(70,639,cs),
(70,654,o),
(71,691,o),
(47,691,cs),
(27,691,o),
(25,644,o),
(25,624,cs),
(25,607,o),
(26,498,o),
(48,498,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 1 1 0 83 2 1 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
1 0 11 9 0 19 1 19 3 15
CALL[ ]	/* CallFunction */";
};
width = 95;
}
);
note = apostrophe;
unicode = 700;
}
);
instances = (
{
axesValues = (
400
);
instanceInterpolations = {
"E59D8378-1062-4241-9A8F-EEB295F00E05" = 1;
};
name = Regular;
},
{
axesValues = (
700
);
instanceInterpolations = {
"62092E79-60F6-4D0B-8A38-B9DDC6B60A9E" = 1;
};
isBold = 1;
name = Bold;
weightClass = 700;
},
{
axesValues = (
800
);
instanceInterpolations = {
m01 = 1;
};
name = ExtraBold;
weightClass = 800;
}
);
kerningLTR = {
"E59D8378-1062-4241-9A8F-EEB295F00E05" = {
"@MMK_L_AE" = {
"@MMK_R_b" = 22;
"@MMK_R_p" = -5;
"@MMK_R_u" = -5;
"@MMK_R_v" = -15;
"@MMK_R_w" = -17;
"@MMK_R_y" = -11;
};
"@MMK_L_Aacute" = {
"@MMK_R_C" = -24;
"@MMK_R_T" = -37;
"@MMK_R_U" = -38;
"@MMK_R_V" = -93;
"@MMK_R_W" = -100;
"@MMK_R_Y" = -85;
"@MMK_R_a" = -9;
"@MMK_R_a.salt" = -10;
"@MMK_R_asterisk" = -21;
"@MMK_R_backslash" = -53;
"@MMK_R_braceright" = 61;
"@MMK_R_bracketright" = 60;
"@MMK_R_c" = -27;
"@MMK_R_c.salt" = -28;
"@MMK_R_d" = -25;
"@MMK_R_g" = 17;
"@MMK_R_parenright" = 7;
"@MMK_R_q" = -14;
"@MMK_R_quotedbl" = -24;
"@MMK_R_quotedblleft" = -26;
"@MMK_R_quotedblright" = -24;
"@MMK_R_space" = -28;
"@MMK_R_t" = -24;
"@MMK_R_trademark" = -20;
"@MMK_R_u" = -32;
"@MMK_R_v" = -50;
"@MMK_R_w" = -63;
"@MMK_R_y" = -21;
};
"@MMK_L_B" = {
"@MMK_R_AE" = -26;
"@MMK_R_Aacute" = -9;
"@MMK_R_B" = -14;
"@MMK_R_U" = -16;
"@MMK_R_W" = -15;
"@MMK_R_Y" = -17;
"@MMK_R_dotlessi" = -7;
"@MMK_R_dotlessj" = -8;
"@MMK_R_eng" = -7;
"@MMK_R_f" = -10;
"@MMK_R_f_f" = -11;
"@MMK_R_g" = -8;
"@MMK_R_l" = -6;
"@MMK_R_r" = -7;
"@MMK_R_u" = -6;
"@MMK_R_w" = -20;
"@MMK_R_y" = -17;
};
"@MMK_L_C" = {
"@MMK_R_AE" = -19;
"@MMK_R_b" = 51;
"@MMK_R_g" = -14;
"@MMK_R_y" = -12;
"@MMK_R_z" = -6;
};
"@MMK_L_D" = {
"@MMK_R_AE" = -54;
"@MMK_R_Aacute" = -32;
"@MMK_R_B" = -17;
"@MMK_R_J" = -8;
"@MMK_R_M" = -16;
"@MMK_R_U" = -19;
"@MMK_R_V" = -21;
"@MMK_R_W" = -21;
"@MMK_R_X" = -35;
"@MMK_R_Y" = -38;
"@MMK_R_Z" = -6;
"@MMK_R_a" = -9;
"@MMK_R_a.salt" = -5;
"@MMK_R_backslash" = -13;
"@MMK_R_braceright" = -23;
"@MMK_R_bracketright" = -24;
"@MMK_R_c" = -6;
"@MMK_R_c.salt" = -6;
"@MMK_R_comma" = -23;
"@MMK_R_d" = -6;
"@MMK_R_g" = -17;
"@MMK_R_germandbls" = -12;
"@MMK_R_l" = -12;
"@MMK_R_one" = -19;
"@MMK_R_parenright" = -16;
"@MMK_R_q" = -8;
"@MMK_R_s" = -8;
"@MMK_R_s.salt" = -5;
"@MMK_R_seven" = -20;
"@MMK_R_slash" = -22;
};
"@MMK_L_Eng" = {
"@MMK_R_AE" = -14;
"@MMK_R_C" = -11;
"@MMK_R_J" = -17;
"@MMK_R_S" = -11;
"@MMK_R_a" = -29;
"@MMK_R_a.salt" = -30;
"@MMK_R_ampersand" = -17;
"@MMK_R_b" = 91;
"@MMK_R_c" = -26;
"@MMK_R_c.salt" = -25;
"@MMK_R_comma" = -12;
"@MMK_R_d" = -23;
"@MMK_R_dotlessi" = -14;
"@MMK_R_dotlessj" = -13;
"@MMK_R_emdash" = -12;
"@MMK_R_eng" = -13;
"@MMK_R_f" = -16;
"@MMK_R_f_f" = -20;
"@MMK_R_g" = -34;
"@MMK_R_germandbls" = 42;
"@MMK_R_l" = 37;
"@MMK_R_m" = -14;
"@MMK_R_p" = -15;
"@MMK_R_q" = -24;
"@MMK_R_r" = -13;
"@MMK_R_registered" = -23;
"@MMK_R_s" = -24;
"@MMK_R_s.salt" = -19;
"@MMK_R_slash" = -17;
"@MMK_R_t" = -12;
"@MMK_R_u" = -13;
"@MMK_R_v" = -19;
"@MMK_R_w" = -22;
"@MMK_R_x" = -11;
"@MMK_R_y" = -20;
"@MMK_R_z" = -30;
};
"@MMK_L_F" = {
"@MMK_R_AE" = -70;
"@MMK_R_Aacute" = -67;
"@MMK_R_J" = -53;
"@MMK_R_W" = 33;
"@MMK_R_Y" = 25;
"@MMK_R_a" = -54;
"@MMK_R_b" = 93;
"@MMK_R_c" = -47;
"@MMK_R_comma" = -39;
"@MMK_R_d" = -46;
"@MMK_R_dotlessi" = -16;
"@MMK_R_emdash" = -11;
"@MMK_R_eng" = -27;
"@MMK_R_f" = -18;
"@MMK_R_f_f" = -15;
"@MMK_R_g" = -69;
"@MMK_R_germandbls" = 43;
"@MMK_R_l" = 41;
"@MMK_R_r" = -25;
"@MMK_R_s" = -50;
"@MMK_R_u" = -26;
"@MMK_R_w" = -29;
"@MMK_R_y" = -34;
"@MMK_R_z" = -37;
};
"@MMK_L_G" = {
"@MMK_R_b" = 40;
"@MMK_R_g" = -9;
"@MMK_R_y" = -14;
};
"@MMK_L_H" = {
"@MMK_R_C" = -15;
"@MMK_R_J" = -10;
"@MMK_R_a" = -15;
"@MMK_R_a.salt" = -16;
"@MMK_R_ampersand" = -15;
"@MMK_R_b" = 76;
"@MMK_R_braceright" = 10;
"@MMK_R_bracketright" = 9;
"@MMK_R_c" = -29;
"@MMK_R_c.salt" = -29;
"@MMK_R_d" = -26;
"@MMK_R_dotlessi" = -7;
"@MMK_R_dotlessj" = -13;
"@MMK_R_emdash" = -16;
"@MMK_R_eng" = -11;
"@MMK_R_g" = -5;
"@MMK_R_germandbls" = 27;
"@MMK_R_guillemotleft" = -11;
"@MMK_R_l" = 25;
"@MMK_R_m" = -6;
"@MMK_R_p" = -15;
"@MMK_R_q" = -26;
"@MMK_R_r" = -6;
"@MMK_R_registered" = -19;
"@MMK_R_s.salt" = -15;
"@MMK_R_t" = -15;
"@MMK_R_u" = -20;
"@MMK_R_v" = -27;
"@MMK_R_w" = -32;
"@MMK_R_y" = -24;
"@MMK_R_z" = -6;
};
"@MMK_L_I" = {
"@MMK_R_AE" = 32;
"@MMK_R_C" = -12;
"@MMK_R_b" = 71;
"@MMK_R_c" = -23;
"@MMK_R_c.salt" = -23;
"@MMK_R_d" = -21;
"@MMK_R_dotlessj" = -12;
"@MMK_R_emdash" = -13;
"@MMK_R_g" = -23;
"@MMK_R_germandbls" = 23;
"@MMK_R_l" = 20;
"@MMK_R_p" = -14;
"@MMK_R_q" = -21;
"@MMK_R_t" = -12;
"@MMK_R_u" = -12;
"@MMK_R_v" = -20;
"@MMK_R_w" = -22;
"@MMK_R_y" = -22;
};
"@MMK_L_IJ" = {
"@MMK_R_AE" = -38;
"@MMK_R_Aacute" = -23;
"@MMK_R_C" = -12;
"@MMK_R_J" = -21;
"@MMK_R_S" = -13;
"@MMK_R_a" = -33;
"@MMK_R_a.salt" = -31;
"@MMK_R_ampersand" = -17;
"@MMK_R_at" = -21;
"@MMK_R_b" = 91;
"@MMK_R_braceright" = 15;
"@MMK_R_bracketright" = 14;
"@MMK_R_c" = -29;
"@MMK_R_c.salt" = -28;
"@MMK_R_comma" = -21;
"@MMK_R_d" = -26;
"@MMK_R_dotlessi" = -12;
"@MMK_R_dotlessj" = -12;
"@MMK_R_emdash" = -10;
"@MMK_R_eng" = -12;
"@MMK_R_f" = -17;
"@MMK_R_g" = -33;
"@MMK_R_germandbls" = 41;
"@MMK_R_l" = 41;
"@MMK_R_m" = -13;
"@MMK_R_p" = -14;
"@MMK_R_q" = -27;
"@MMK_R_r" = -12;
"@MMK_R_registered" = -21;
"@MMK_R_s" = -27;
"@MMK_R_s.salt" = -22;
"@MMK_R_six" = -17;
"@MMK_R_slash" = -28;
"@MMK_R_t" = -12;
"@MMK_R_three" = -12;
"@MMK_R_u" = -12;
"@MMK_R_v" = -18;
"@MMK_R_w" = -21;
"@MMK_R_x" = -11;
"@MMK_R_y" = -21;
"@MMK_R_z" = -33;
};
"@MMK_L_K" = {
"@MMK_R_C" = -46;
"@MMK_R_a" = -12;
"@MMK_R_a.salt" = -13;
"@MMK_R_asterisk" = 15;
"@MMK_R_b" = 105;
"@MMK_R_backslash" = 22;
"@MMK_R_braceright" = 20;
"@MMK_R_bracketright" = 20;
"@MMK_R_c" = -54;
"@MMK_R_c.salt" = -56;
"@MMK_R_d" = -50;
"@MMK_R_dotlessj" = -30;
"@MMK_R_emdash" = -48;
"@MMK_R_eng" = -13;
"@MMK_R_g" = -6;
"@MMK_R_germandbls" = 52;
"@MMK_R_guillemotleft" = -49;
"@MMK_R_guillemotright" = -38;
"@MMK_R_l" = 43;
"@MMK_R_p" = -37;
"@MMK_R_parenright" = 6;
"@MMK_R_q" = -43;
"@MMK_R_quotedblright" = 13;
"@MMK_R_slash" = 10;
"@MMK_R_t" = -54;
"@MMK_R_trademark" = 24;
"@MMK_R_u" = -81;
"@MMK_R_v" = -155;
"@MMK_R_w" = -172;
"@MMK_R_y" = -98;
};
"@MMK_L_K.salt" = {
"@MMK_R_AE" = 9;
"@MMK_R_C" = -25;
"@MMK_R_b" = 89;
"@MMK_R_c" = -24;
"@MMK_R_d" = -23;
"@MMK_R_dotlessj" = -40;
"@MMK_R_emdash" = -27;
"@MMK_R_g" = -20;
"@MMK_R_germandbls" = 44;
"@MMK_R_guillemotleft" = -27;
"@MMK_R_guillemotright" = -18;
"@MMK_R_l" = 32;
"@MMK_R_quotedblright" = 5;
"@MMK_R_s" = -5;
"@MMK_R_t" = -28;
"@MMK_R_u" = -51;
"@MMK_R_w" = -83;
"@MMK_R_y" = -65;
};
"@MMK_L_L" = {
"@MMK_R_AE" = 6;
"@MMK_R_Aacute" = 16;
"@MMK_R_T" = -57;
"@MMK_R_U" = -25;
"@MMK_R_V" = -49;
"@MMK_R_W" = -51;
"@MMK_R_Y" = -58;
"@MMK_R_asterisk" = -40;
"@MMK_R_backslash" = -52;
"@MMK_R_dotlessj" = -13;
"@MMK_R_f_f" = -6;
"@MMK_R_p" = -16;
"@MMK_R_question" = -24;
"@MMK_R_quotedbl" = -35;
"@MMK_R_quotedblleft" = -33;
"@MMK_R_quotedblright" = -34;
"@MMK_R_space" = -23;
"@MMK_R_trademark" = -34;
"@MMK_R_u" = -11;
"@MMK_R_v" = -39;
"@MMK_R_w" = -36;
"@MMK_R_y" = -38;
};
"@MMK_L_M" = {
"@MMK_R_C" = -19;
"@MMK_R_J" = -16;
"@MMK_R_a" = -24;
"@MMK_R_c" = -41;
"@MMK_R_d" = -39;
"@MMK_R_dotlessi" = -11;
"@MMK_R_dotlessj" = -25;
"@MMK_R_emdash" = -19;
"@MMK_R_eng" = -12;
"@MMK_R_f" = -7;
"@MMK_R_g" = -28;
"@MMK_R_guillemotleft" = -14;
"@MMK_R_r" = -11;
"@MMK_R_s" = -11;
"@MMK_R_t" = -34;
"@MMK_R_u" = -40;
"@MMK_R_w" = -52;
"@MMK_R_y" = -35;
"@MMK_R_z" = -12;
};
"@MMK_L_O" = {
"@MMK_R_AE" = -28;
"@MMK_R_Aacute" = -12;
"@MMK_R_B" = -11;
"@MMK_R_M" = -11;
"@MMK_R_U" = -14;
"@MMK_R_V" = -17;
"@MMK_R_W" = -15;
"@MMK_R_X" = -28;
"@MMK_R_Y" = -17;
"@MMK_R_a" = -6;
"@MMK_R_apostrophe" = -17;
"@MMK_R_braceright" = -19;
"@MMK_R_bracketright" = -21;
"@MMK_R_comma" = -16;
"@MMK_R_g" = -9;
"@MMK_R_germandbls" = -6;
"@MMK_R_l" = -6;
"@MMK_R_one" = -14;
"@MMK_R_parenright" = -12;
"@MMK_R_q" = -5;
"@MMK_R_s" = -6;
"@MMK_R_seven" = -14;
"@MMK_R_slash" = -15;
};
"@MMK_L_P" = {
"@MMK_R_AE" = -80;
"@MMK_R_Aacute" = -73;
"@MMK_R_B" = -5;
"@MMK_R_J" = -62;
"@MMK_R_a" = -51;
"@MMK_R_b" = 16;
"@MMK_R_c" = -58;
"@MMK_R_comma" = -51;
"@MMK_R_d" = -55;
"@MMK_R_emdash" = -37;
"@MMK_R_g" = -72;
"@MMK_R_s" = -49;
"@MMK_R_y" = -13;
"@MMK_R_z" = -41;
};
"@MMK_L_R" = {
"@MMK_R_C" = -6;
"@MMK_R_J" = -5;
"@MMK_R_U" = -19;
"@MMK_R_V" = -29;
"@MMK_R_W" = -31;
"@MMK_R_Y" = -38;
"@MMK_R_ampersand" = -12;
"@MMK_R_braceright" = 34;
"@MMK_R_bracketright" = 34;
"@MMK_R_c" = -35;
"@MMK_R_c.salt" = -38;
"@MMK_R_d" = -33;
"@MMK_R_dotlessj" = -5;
"@MMK_R_emdash" = -51;
"@MMK_R_p" = -12;
"@MMK_R_parenright" = 21;
"@MMK_R_q" = -25;
"@MMK_R_slash" = 24;
"@MMK_R_space" = -26;
"@MMK_R_t" = -14;
"@MMK_R_u" = -17;
"@MMK_R_v" = -37;
"@MMK_R_w" = -42;
"@MMK_R_y" = -29;
};
"@MMK_L_R.salt" = {
"@MMK_R_AE" = 33;
"@MMK_R_C" = -15;
"@MMK_R_U" = -25;
"@MMK_R_W" = -25;
"@MMK_R_Y" = -19;
"@MMK_R_c" = -24;
"@MMK_R_d" = -24;
"@MMK_R_dotlessj" = 81;
"@MMK_R_emdash" = -24;
"@MMK_R_guillemotleft" = -13;
"@MMK_R_t" = -12;
"@MMK_R_u" = -14;
"@MMK_R_w" = -28;
"@MMK_R_y" = -28;
};
"@MMK_L_S" = {
"@MMK_R_AE" = -10;
"@MMK_R_W" = 7;
"@MMK_R_b" = 65;
"@MMK_R_c" = -5;
"@MMK_R_c.salt" = -5;
"@MMK_R_g" = -25;
"@MMK_R_germandbls" = 16;
"@MMK_R_l" = 15;
"@MMK_R_m" = -6;
"@MMK_R_p" = -7;
"@MMK_R_s.salt" = -5;
"@MMK_R_v" = -7;
"@MMK_R_w" = -7;
"@MMK_R_y" = -20;
"@MMK_R_z" = -11;
};
"@MMK_L_T" = {
"@MMK_R_AE" = -74;
"@MMK_R_Aacute" = -42;
"@MMK_R_J" = -60;
"@MMK_R_V" = 25;
"@MMK_R_W" = 29;
"@MMK_R_Y" = 21;
"@MMK_R_a" = -111;
"@MMK_R_a.salt" = -87;
"@MMK_R_ampersand" = -19;
"@MMK_R_asterisk" = 8;
"@MMK_R_b" = 87;
"@MMK_R_braceright" = 7;
"@MMK_R_bracketright" = 10;
"@MMK_R_c" = -132;
"@MMK_R_c.salt" = -132;
"@MMK_R_colon" = -21;
"@MMK_R_comma" = -20;
"@MMK_R_d" = -101;
"@MMK_R_dotlessi" = -34;
"@MMK_R_dotlessj" = -33;
"@MMK_R_emdash" = -51;
"@MMK_R_eng" = -79;
"@MMK_R_f" = -31;
"@MMK_R_f_f" = -31;
"@MMK_R_g" = -139;
"@MMK_R_germandbls" = 38;
"@MMK_R_guillemotleft" = -19;
"@MMK_R_l" = 37;
"@MMK_R_m" = -79;
"@MMK_R_p" = -81;
"@MMK_R_q" = -128;
"@MMK_R_r" = -76;
"@MMK_R_registered" = -45;
"@MMK_R_s" = -102;
"@MMK_R_s.salt" = -106;
"@MMK_R_slash" = -29;
"@MMK_R_space" = -26;
"@MMK_R_t" = -26;
"@MMK_R_u" = -73;
"@MMK_R_v" = -84;
"@MMK_R_w" = -82;
"@MMK_R_x" = -87;
"@MMK_R_y" = -91;
"@MMK_R_z" = -92;
};
"@MMK_L_Thorn" = {
"@MMK_R_AE" = -80;
"@MMK_R_Aacute" = -46;
"@MMK_R_B" = -24;
"@MMK_R_J" = -30;
"@MMK_R_U" = -21;
"@MMK_R_W" = -33;
"@MMK_R_Y" = -63;
"@MMK_R_Z" = -10;
"@MMK_R_a" = -5;
"@MMK_R_c" = -5;
"@MMK_R_comma" = -35;
"@MMK_R_g" = -12;
"@MMK_R_germandbls" = -8;
"@MMK_R_l" = -8;
"@MMK_R_quotedbl" = -14;
"@MMK_R_quotedblleft" = -30;
"@MMK_R_quotedblright" = -21;
};
"@MMK_L_U" = {
"@MMK_R_AE" = -55;
"@MMK_R_Aacute" = -34;
"@MMK_R_B" = -5;
"@MMK_R_C" = -10;
"@MMK_R_J" = -21;
"@MMK_R_S" = -7;
"@MMK_R_U" = -7;
"@MMK_R_a" = -34;
"@MMK_R_a.salt" = -32;
"@MMK_R_ampersand" = -15;
"@MMK_R_asterisk" = 30;
"@MMK_R_b" = -13;
"@MMK_R_c" = -29;
"@MMK_R_c.salt" = -29;
"@MMK_R_comma" = -23;
"@MMK_R_d" = -29;
"@MMK_R_dotlessi" = -13;
"@MMK_R_dotlessj" = -12;
"@MMK_R_eng" = -12;
"@MMK_R_f" = -18;
"@MMK_R_g" = -35;
"@MMK_R_germandbls" = -19;
"@MMK_R_l" = -18;
"@MMK_R_m" = -13;
"@MMK_R_p" = -14;
"@MMK_R_q" = -30;
"@MMK_R_r" = -13;
"@MMK_R_registered" = -20;
"@MMK_R_s" = -30;
"@MMK_R_s.salt" = -25;
"@MMK_R_slash" = -30;
"@MMK_R_t" = -12;
"@MMK_R_u" = -12;
"@MMK_R_v" = -18;
"@MMK_R_w" = -21;
"@MMK_R_x" = -12;
"@MMK_R_y" = -21;
"@MMK_R_z" = -34;
};
"@MMK_L_V" = {
"@MMK_R_AE" = -108;
"@MMK_R_Aacute" = -66;
"@MMK_R_C" = -7;
"@MMK_R_J" = -51;
"@MMK_R_T" = 34;
"@MMK_R_a" = -115;
"@MMK_R_c" = -115;
"@MMK_R_colon" = -20;
"@MMK_R_comma" = -45;
"@MMK_R_d" = -114;
"@MMK_R_dotlessi" = -67;
"@MMK_R_dotlessj" = -68;
"@MMK_R_emdash" = -27;
"@MMK_R_eng" = -66;
"@MMK_R_f" = -43;
"@MMK_R_f_f" = -58;
"@MMK_R_g" = -137;
"@MMK_R_germandbls" = -15;
"@MMK_R_guillemotleft" = -13;
"@MMK_R_l" = -14;
"@MMK_R_quotedbl" = 28;
"@MMK_R_quotedblleft" = 36;
"@MMK_R_quotedblright" = 25;
"@MMK_R_r" = -65;
"@MMK_R_s" = -114;
"@MMK_R_t" = -59;
"@MMK_R_u" = -63;
"@MMK_R_w" = -75;
"@MMK_R_y" = -74;
"@MMK_R_z" = -100;
};
"@MMK_L_W" = {
"@MMK_R_AE" = -103;
"@MMK_R_Aacute" = -60;
"@MMK_R_C" = -9;
"@MMK_R_J" = -52;
"@MMK_R_T" = 27;
"@MMK_R_a" = -114;
"@MMK_R_a.salt" = -97;
"@MMK_R_asterisk" = 62;
"@MMK_R_backslash" = 28;
"@MMK_R_braceright" = 8;
"@MMK_R_bracketright" = 11;
"@MMK_R_c" = -115;
"@MMK_R_c.salt" = -115;
"@MMK_R_colon" = -20;
"@MMK_R_comma" = -45;
"@MMK_R_d" = -114;
"@MMK_R_dotlessi" = -68;
"@MMK_R_dotlessj" = -69;
"@MMK_R_emdash" = -28;
"@MMK_R_eng" = -68;
"@MMK_R_f" = -44;
"@MMK_R_f_f" = -56;
"@MMK_R_g" = -136;
"@MMK_R_germandbls" = -15;
"@MMK_R_guillemotleft" = -14;
"@MMK_R_l" = -15;
"@MMK_R_m" = -68;
"@MMK_R_p" = -72;
"@MMK_R_q" = -118;
"@MMK_R_question" = 6;
"@MMK_R_quotedbl" = 21;
"@MMK_R_quotedblleft" = 27;
"@MMK_R_quotedblright" = 8;
"@MMK_R_r" = -67;
"@MMK_R_registered" = -50;
"@MMK_R_s" = -114;
"@MMK_R_s.salt" = -109;
"@MMK_R_slash" = -55;
"@MMK_R_space" = -26;
"@MMK_R_t" = -61;
"@MMK_R_trademark" = 50;
"@MMK_R_u" = -65;
"@MMK_R_v" = -74;
"@MMK_R_w" = -77;
"@MMK_R_x" = -77;
"@MMK_R_y" = -76;
"@MMK_R_z" = -100;
};
"@MMK_L_X" = {
"@MMK_R_C" = -31;
"@MMK_R_b" = 98;
"@MMK_R_c" = -28;
"@MMK_R_d" = -24;
"@MMK_R_emdash" = -28;
"@MMK_R_g" = 6;
"@MMK_R_germandbls" = 42;
"@MMK_R_guillemotleft" = -28;
"@MMK_R_guillemotright" = -15;
"@MMK_R_l" = 44;
"@MMK_R_t" = -33;
"@MMK_R_u" = -54;
"@MMK_R_w" = -114;
"@MMK_R_y" = -41;
};
"@MMK_L_Y" = {
"@MMK_R_AE" = -88;
"@MMK_R_Aacute" = -63;
"@MMK_R_C" = -12;
"@MMK_R_J" = -59;
"@MMK_R_T" = 34;
"@MMK_R_a" = -137;
"@MMK_R_a.salt" = -119;
"@MMK_R_asterisk" = 58;
"@MMK_R_b" = 7;
"@MMK_R_backslash" = 40;
"@MMK_R_braceright" = 24;
"@MMK_R_bracketright" = 24;
"@MMK_R_c" = -162;
"@MMK_R_c.salt" = -163;
"@MMK_R_colon" = -16;
"@MMK_R_comma" = -15;
"@MMK_R_d" = -88;
"@MMK_R_dotlessi" = -91;
"@MMK_R_dotlessj" = -88;
"@MMK_R_emdash" = -44;
"@MMK_R_eng" = -92;
"@MMK_R_f" = -50;
"@MMK_R_g" = -157;
"@MMK_R_guillemotleft" = -29;
"@MMK_R_guillemotright" = -18;
"@MMK_R_m" = -102;
"@MMK_R_p" = -102;
"@MMK_R_parenright" = 17;
"@MMK_R_q" = -158;
"@MMK_R_question" = 11;
"@MMK_R_quotedbl" = 28;
"@MMK_R_quotedblleft" = 36;
"@MMK_R_quotedblright" = 10;
"@MMK_R_r" = -92;
"@MMK_R_registered" = -56;
"@MMK_R_s" = -118;
"@MMK_R_s.salt" = -131;
"@MMK_R_slash" = -27;
"@MMK_R_space" = -27;
"@MMK_R_t" = -88;
"@MMK_R_trademark" = 56;
"@MMK_R_u" = -97;
"@MMK_R_v" = -97;
"@MMK_R_w" = -103;
"@MMK_R_x" = -95;
"@MMK_R_y" = -100;
"@MMK_R_z" = -112;
};
"@MMK_L_Z" = {
"@MMK_R_b" = 54;
"@MMK_R_dotlessj" = -5;
"@MMK_R_f_f" = -5;
"@MMK_R_germandbls" = 11;
"@MMK_R_p" = -10;
"@MMK_R_u" = -6;
"@MMK_R_v" = -18;
"@MMK_R_w" = -21;
"@MMK_R_y" = -16;
};
"@MMK_L_a" = {
"@MMK_R_T" = -80;
"@MMK_R_U" = -11;
"@MMK_R_Y" = -104;
"@MMK_R_backslash" = -39;
"@MMK_R_parenright" = 16;
"@MMK_R_slash" = 23;
"@MMK_R_v" = -13;
"@MMK_R_w" = -17;
};
"@MMK_L_a.salt" = {
"@MMK_R_w" = -36;
"@MMK_R_y" = -6;
};
"@MMK_L_ae" = {
"@MMK_R_B" = -20;
"@MMK_R_M" = -22;
"@MMK_R_T" = -120;
"@MMK_R_U" = -34;
"@MMK_R_V" = -114;
"@MMK_R_W" = -122;
"@MMK_R_X" = -7;
"@MMK_R_Y" = -146;
"@MMK_R_Z" = -7;
"@MMK_R_backslash" = -57;
"@MMK_R_braceright" = -20;
"@MMK_R_bracketright" = -17;
"@MMK_R_question" = -17;
"@MMK_R_trademark" = -16;
"@MMK_R_w" = -10;
"@MMK_R_x" = -22;
};
"@MMK_L_ampersand" = {
"@MMK_R_AE" = 91;
"@MMK_R_Aacute" = 101;
"@MMK_R_B" = 21;
"@MMK_R_C" = -22;
"@MMK_R_J" = 12;
"@MMK_R_S" = 6;
"@MMK_R_T" = -35;
"@MMK_R_U" = -38;
"@MMK_R_W" = -56;
"@MMK_R_Y" = -36;
"@MMK_R_Z" = 32;
"@MMK_R_dotlessi" = 26;
"@MMK_R_eng" = 18;
"@MMK_R_germandbls" = 51;
"@MMK_R_l" = 50;
"@MMK_R_quotedbl" = -41;
"@MMK_R_r" = 21;
"@MMK_R_s" = 8;
"@MMK_R_w" = -27;
"@MMK_R_y" = -14;
"@MMK_R_z" = 24;
};
"@MMK_L_apostrophe" = {
"@MMK_R_c" = -22;
"@MMK_R_g" = -47;
};
"@MMK_L_asterisk" = {
"@MMK_R_AE" = -69;
"@MMK_R_Aacute" = -27;
"@MMK_R_J" = -32;
"@MMK_R_T" = 8;
"@MMK_R_W" = 18;
"@MMK_R_Y" = 9;
"@MMK_R_b" = 48;
"@MMK_R_c" = -10;
"@MMK_R_d" = -24;
"@MMK_R_g" = -29;
};
"@MMK_L_at" = {
"@MMK_R_B" = -16;
"@MMK_R_quotedbl" = -12;
};
"@MMK_L_b" = {
"@MMK_R_AE" = -7;
"@MMK_R_B" = -21;
"@MMK_R_M" = -23;
"@MMK_R_T" = -131;
"@MMK_R_U" = -31;
"@MMK_R_V" = -121;
"@MMK_R_W" = -130;
"@MMK_R_X" = -11;
"@MMK_R_Y" = -155;
"@MMK_R_Z" = -14;
"@MMK_R_asterisk" = -46;
"@MMK_R_backslash" = -60;
"@MMK_R_braceright" = -25;
"@MMK_R_bracketright" = -23;
"@MMK_R_f_f" = -6;
"@MMK_R_question" = -23;
"@MMK_R_quotedbl" = -48;
"@MMK_R_quotedblleft" = -48;
"@MMK_R_quotedblright" = -48;
"@MMK_R_trademark" = -30;
"@MMK_R_v" = -13;
"@MMK_R_w" = -20;
"@MMK_R_x" = -33;
};
"@MMK_L_backslash" = {
"@MMK_R_AE" = 49;
"@MMK_R_Aacute" = 58;
"@MMK_R_C" = -15;
"@MMK_R_T" = -34;
"@MMK_R_U" = -32;
"@MMK_R_W" = -62;
"@MMK_R_Y" = -36;
"@MMK_R_germandbls" = 14;
"@MMK_R_l" = 12;
"@MMK_R_quotedbl" = -54;
"@MMK_R_w" = -29;
"@MMK_R_y" = -14;
};
"@MMK_L_bar" = {
"@MMK_R_b" = 17;
"@MMK_R_dotlessj" = 61;
};
"@MMK_L_braceleft" = {
"@MMK_R_AE" = 19;
"@MMK_R_Aacute" = 27;
"@MMK_R_B" = 12;
"@MMK_R_C" = -20;
"@MMK_R_J" = -12;
"@MMK_R_T" = 8;
"@MMK_R_U" = 15;
"@MMK_R_W" = 47;
"@MMK_R_Y" = 36;
"@MMK_R_a" = -12;
"@MMK_R_b" = 76;
"@MMK_R_c" = -22;
"@MMK_R_d" = -21;
"@MMK_R_germandbls" = 30;
"@MMK_R_l" = 30;
"@MMK_R_u" = -14;
"@MMK_R_w" = -25;
};
"@MMK_L_bracketleft" = {
"@MMK_R_AE" = 19;
"@MMK_R_Aacute" = 27;
"@MMK_R_B" = 11;
"@MMK_R_C" = -21;
"@MMK_R_J" = -13;
"@MMK_R_T" = 10;
"@MMK_R_U" = 13;
"@MMK_R_W" = 47;
"@MMK_R_Y" = 36;
"@MMK_R_a" = -12;
"@MMK_R_b" = 76;
"@MMK_R_c" = -23;
"@MMK_R_d" = -21;
"@MMK_R_germandbls" = 30;
"@MMK_R_l" = 30;
"@MMK_R_u" = -14;
"@MMK_R_w" = -24;
};
"@MMK_L_c" = {
"@MMK_R_B" = -13;
"@MMK_R_T" = -82;
"@MMK_R_U" = -30;
"@MMK_R_Y" = -118;
"@MMK_R_backslash" = -34;
"@MMK_R_braceright" = -14;
};
"@MMK_L_c_h" = {
"@MMK_R_B" = -11;
"@MMK_R_C" = -8;
"@MMK_R_T" = -133;
"@MMK_R_U" = -51;
"@MMK_R_Y" = -157;
"@MMK_R_asterisk" = -39;
"@MMK_R_backslash" = -62;
"@MMK_R_braceright" = 35;
"@MMK_R_bracketright" = 31;
"@MMK_R_question" = -17;
"@MMK_R_quotedbl" = -40;
"@MMK_R_quotedblleft" = -41;
"@MMK_R_quotedblright" = -41;
"@MMK_R_t" = -6;
"@MMK_R_trademark" = -32;
"@MMK_R_u" = -19;
"@MMK_R_v" = -40;
"@MMK_R_w" = -42;
};
"@MMK_L_c_k" = {
"@MMK_R_a" = -20;
"@MMK_R_a.salt" = -11;
"@MMK_R_ampersand" = -19;
"@MMK_R_asterisk" = -43;
"@MMK_R_b" = -5;
"@MMK_R_backslash" = -55;
"@MMK_R_braceright" = 20;
"@MMK_R_bracketright" = 18;
"@MMK_R_c" = -39;
"@MMK_R_c.salt" = -37;
"@MMK_R_d" = -29;
"@MMK_R_emdash" = -60;
"@MMK_R_guillemotright" = -13;
"@MMK_R_q" = -41;
"@MMK_R_question" = -18;
"@MMK_R_quotedbl" = -46;
"@MMK_R_quotedblleft" = -47;
"@MMK_R_quotedblright" = -47;
"@MMK_R_registered" = -12;
"@MMK_R_s.salt" = -6;
"@MMK_R_trademark" = -25;
"@MMK_R_w" = -6;
};
"@MMK_L_c_p" = {
"@MMK_R_AE" = -11;
"@MMK_R_B" = -23;
"@MMK_R_M" = -24;
"@MMK_R_T" = -132;
"@MMK_R_U" = -33;
"@MMK_R_V" = -120;
"@MMK_R_W" = -128;
"@MMK_R_X" = -14;
"@MMK_R_Y" = -157;
"@MMK_R_Z" = -17;
"@MMK_R_apostrophe" = -19;
"@MMK_R_backslash" = -59;
"@MMK_R_braceright" = -25;
"@MMK_R_bracketright" = -23;
"@MMK_R_question" = -21;
"@MMK_R_trademark" = -18;
"@MMK_R_v" = -10;
"@MMK_R_w" = -17;
"@MMK_R_x" = -36;
};
"@MMK_L_c_t" = {
"@MMK_R_Aacute" = 7;
"@MMK_R_B" = -6;
"@MMK_R_T" = -94;
"@MMK_R_U" = -25;
"@MMK_R_Y" = -115;
"@MMK_R_asterisk" = -22;
"@MMK_R_backslash" = -40;
"@MMK_R_braceright" = -17;
"@MMK_R_quotedbl" = -19;
"@MMK_R_quotedblleft" = -15;
"@MMK_R_quotedblright" = -17;
"@MMK_R_trademark" = -12;
};
"@MMK_L_colon" = {
"@MMK_R_AE" = 9;
"@MMK_R_Aacute" = 18;
"@MMK_R_T" = -25;
"@MMK_R_V" = -22;
"@MMK_R_W" = -24;
"@MMK_R_Y" = -21;
"@MMK_R_v" = -11;
"@MMK_R_w" = -12;
};
"@MMK_L_comma" = {
"@MMK_R_AE" = 15;
"@MMK_R_Aacute" = 24;
"@MMK_R_C" = -15;
"@MMK_R_T" = -24;
"@MMK_R_U" = -23;
"@MMK_R_V" = -45;
"@MMK_R_W" = -48;
"@MMK_R_Y" = -21;
"@MMK_R_dotlessj" = -10;
"@MMK_R_nine" = -18;
"@MMK_R_p" = -16;
"@MMK_R_quotedbl" = -81;
"@MMK_R_quotedblleft" = -76;
"@MMK_R_quotedblright" = -78;
"@MMK_R_u" = -13;
"@MMK_R_v" = -50;
"@MMK_R_w" = -52;
"@MMK_R_y" = -26;
};
"@MMK_L_d" = {
"@MMK_R_T" = -17;
"@MMK_R_U" = -28;
"@MMK_R_Y" = -19;
"@MMK_R_braceright" = 29;
"@MMK_R_bracketright" = 29;
"@MMK_R_parenright" = 31;
"@MMK_R_slash" = 36;
};
"@MMK_L_dotlessi" = {
"@MMK_R_C" = -6;
"@MMK_R_T" = -27;
"@MMK_R_U" = -41;
"@MMK_R_Y" = -103;
"@MMK_R_backslash" = -28;
"@MMK_R_parenright" = 11;
"@MMK_R_slash" = 13;
"@MMK_R_v" = -7;
"@MMK_R_w" = -13;
};
"@MMK_L_dotlessj" = {
"@MMK_R_B" = -14;
"@MMK_R_M" = -16;
"@MMK_R_T" = -25;
"@MMK_R_U" = -23;
"@MMK_R_V" = -73;
"@MMK_R_W" = -76;
"@MMK_R_Y" = -100;
"@MMK_R_Z" = -5;
"@MMK_R_backslash" = -19;
"@MMK_R_dotlessj" = 62;
};
"@MMK_L_emdash" = {
"@MMK_R_AE" = -29;
"@MMK_R_Aacute" = -18;
"@MMK_R_B" = -13;
"@MMK_R_M" = -14;
"@MMK_R_T" = -50;
"@MMK_R_U" = -12;
"@MMK_R_V" = -31;
"@MMK_R_W" = -33;
"@MMK_R_X" = -25;
"@MMK_R_Y" = -45;
"@MMK_R_Z" = -14;
"@MMK_R_dotlessi" = -10;
"@MMK_R_dotlessj" = -10;
"@MMK_R_eng" = -13;
"@MMK_R_p" = -16;
"@MMK_R_r" = -11;
"@MMK_R_v" = -21;
"@MMK_R_w" = -21;
"@MMK_R_x" = -27;
"@MMK_R_y" = -22;
};
"@MMK_L_eth" = {
"@MMK_R_B" = -18;
"@MMK_R_T" = -26;
};
"@MMK_L_exclamdown" = {
"@MMK_R_U" = -19;
"@MMK_R_W" = -28;
"@MMK_R_Y" = -32;
"@MMK_R_dotlessj" = 58;
};
"@MMK_L_f" = {
"@MMK_R_B" = 91;
"@MMK_R_C" = 45;
"@MMK_R_T" = 150;
"@MMK_R_U" = 89;
"@MMK_R_Y" = 162;
"@MMK_R_c" = -7;
"@MMK_R_c.salt" = -6;
"@MMK_R_emdash" = -17;
"@MMK_R_quotedbl" = 119;
"@MMK_R_quotedblleft" = 124;
"@MMK_R_quotedblright" = 121;
};
"@MMK_L_f_f_i" = {
"@MMK_R_w" = -6;
};
"@MMK_L_g" = {
"@MMK_R_C" = -9;
"@MMK_R_T" = -46;
"@MMK_R_U" = -23;
"@MMK_R_Y" = -85;
"@MMK_R_a" = -8;
"@MMK_R_a.salt" = -8;
"@MMK_R_backslash" = -16;
"@MMK_R_braceright" = 73;
"@MMK_R_bracketright" = 69;
"@MMK_R_parenright" = 31;
"@MMK_R_slash" = 33;
"@MMK_R_v" = -6;
};
"@MMK_L_germandbls" = {
"@MMK_R_B" = -7;
"@MMK_R_C" = -13;
"@MMK_R_T" = -73;
"@MMK_R_dotlessj" = -18;
"@MMK_R_f_f" = -10;
"@MMK_R_guillemotleft" = -21;
"@MMK_R_u" = -12;
"@MMK_R_w" = -64;
"@MMK_R_y" = -58;
};
"@MMK_L_guillemotleft" = {
"@MMK_R_AE" = -31;
"@MMK_R_Aacute" = -11;
"@MMK_R_X" = -14;
"@MMK_R_Y" = -21;
};
"@MMK_L_guillemotright" = {
"@MMK_R_AE" = -40;
"@MMK_R_Aacute" = -18;
"@MMK_R_M" = -10;
"@MMK_R_T" = -18;
"@MMK_R_V" = -15;
"@MMK_R_W" = -16;
"@MMK_R_X" = -27;
"@MMK_R_Y" = -32;
};
"@MMK_L_k" = {
"@MMK_R_T" = -79;
"@MMK_R_U" = -25;
"@MMK_R_Y" = -102;
"@MMK_R_c" = -21;
"@MMK_R_d" = -19;
"@MMK_R_emdash" = -19;
"@MMK_R_quotedbl" = -28;
"@MMK_R_quotedblleft" = -28;
"@MMK_R_quotedblright" = -28;
};
"@MMK_L_l" = {
"@MMK_R_T" = -9;
"@MMK_R_U" = -15;
"@MMK_R_Y" = -5;
"@MMK_R_parenright" = 8;
"@MMK_R_slash" = 11;
};
"@MMK_L_m" = {
"@MMK_R_C" = -6;
"@MMK_R_T" = -107;
"@MMK_R_U" = -43;
"@MMK_R_Y" = -131;
"@MMK_R_u" = -8;
"@MMK_R_w" = -41;
"@MMK_R_y" = -5;
};
"@MMK_L_n" = {
"@MMK_R_C" = -7;
"@MMK_R_T" = -110;
"@MMK_R_U" = -45;
"@MMK_R_Y" = -134;
"@MMK_R_backslash" = -60;
"@MMK_R_braceright" = 21;
"@MMK_R_bracketright" = 21;
"@MMK_R_parenright" = 16;
"@MMK_R_question" = -15;
"@MMK_R_slash" = 21;
"@MMK_R_trademark" = -10;
"@MMK_R_u" = -9;
"@MMK_R_v" = -32;
"@MMK_R_w" = -41;
"@MMK_R_y" = -5;
};
"@MMK_L_nine" = {
"@MMK_R_B" = -13;
"@MMK_R_comma" = -36;
};
"@MMK_L_parenleft" = {
"@MMK_R_AE" = 22;
"@MMK_R_Aacute" = 32;
"@MMK_R_C" = -14;
"@MMK_R_W" = 47;
"@MMK_R_Y" = 35;
"@MMK_R_b" = 79;
"@MMK_R_c" = -16;
"@MMK_R_d" = -16;
"@MMK_R_g" = -14;
"@MMK_R_germandbls" = 28;
"@MMK_R_l" = 31;
"@MMK_R_w" = -17;
"@MMK_R_y" = -15;
};
"@MMK_L_q" = {
"@MMK_R_B" = -11;
"@MMK_R_T" = -90;
"@MMK_R_U" = -14;
"@MMK_R_Y" = -121;
};
"@MMK_L_questiondown" = {
"@MMK_R_AE" = 41;
"@MMK_R_Aacute" = 51;
"@MMK_R_C" = -12;
"@MMK_R_T" = -18;
"@MMK_R_U" = -28;
"@MMK_R_W" = -50;
"@MMK_R_Y" = -37;
"@MMK_R_dotlessj" = 82;
"@MMK_R_w" = -16;
};
"@MMK_L_quotedbl" = {
"@MMK_R_AE" = -67;
"@MMK_R_Aacute" = -30;
"@MMK_R_J" = -25;
"@MMK_R_V" = 21;
"@MMK_R_W" = 26;
"@MMK_R_Y" = 17;
"@MMK_R_at" = -15;
"@MMK_R_b" = 62;
"@MMK_R_comma" = -81;
"@MMK_R_d" = -20;
"@MMK_R_four" = -37;
"@MMK_R_g" = -27;
"@MMK_R_germandbls" = 12;
"@MMK_R_l" = 11;
"@MMK_R_registered" = -15;
"@MMK_R_six" = -14;
"@MMK_R_slash" = -54;
"@MMK_R_space" = -30;
};
"@MMK_L_quotedblleft" = {
"@MMK_R_AE" = -67;
"@MMK_R_Aacute" = -31;
"@MMK_R_J" = -24;
"@MMK_R_V" = 7;
"@MMK_R_W" = 12;
"@MMK_R_X" = 9;
"@MMK_R_b" = 45;
"@MMK_R_comma" = -75;
"@MMK_R_d" = -19;
"@MMK_R_g" = -23;
};
"@MMK_L_quotedblright" = {
"@MMK_R_AE" = -67;
"@MMK_R_Aacute" = -32;
"@MMK_R_J" = -23;
"@MMK_R_V" = 32;
"@MMK_R_W" = 38;
"@MMK_R_Y" = 28;
"@MMK_R_b" = 72;
"@MMK_R_comma" = -81;
"@MMK_R_d" = -19;
"@MMK_R_g" = -29;
"@MMK_R_germandbls" = 22;
"@MMK_R_l" = 22;
};
"@MMK_L_r" = {
"@MMK_R_B" = -23;
"@MMK_R_T" = -121;
"@MMK_R_U" = -32;
"@MMK_R_Y" = -143;
"@MMK_R_backslash" = -47;
"@MMK_R_braceright" = -23;
"@MMK_R_bracketright" = -21;
"@MMK_R_comma" = -10;
};
"@MMK_L_registered" = {
"@MMK_R_B" = -16;
"@MMK_R_T" = -44;
"@MMK_R_U" = -24;
"@MMK_R_W" = -53;
"@MMK_R_Y" = -60;
"@MMK_R_quotedbl" = -12;
};
"@MMK_L_s" = {
"@MMK_R_B" = -13;
"@MMK_R_T" = -80;
"@MMK_R_U" = -35;
"@MMK_R_Y" = -127;
"@MMK_R_backslash" = -44;
"@MMK_R_braceright" = -15;
"@MMK_R_bracketright" = -12;
};
"@MMK_L_seven" = {
"@MMK_R_B" = 26;
"@MMK_R_C" = -14;
"@MMK_R_comma" = -67;
};
"@MMK_L_slash" = {
"@MMK_R_AE" = -85;
"@MMK_R_Aacute" = -58;
"@MMK_R_C" = -15;
"@MMK_R_J" = -48;
"@MMK_R_W" = 53;
"@MMK_R_Y" = 42;
"@MMK_R_a" = -59;
"@MMK_R_b" = 86;
"@MMK_R_c" = -60;
"@MMK_R_d" = -49;
"@MMK_R_dotlessi" = -21;
"@MMK_R_dotlessj" = -15;
"@MMK_R_eng" = -26;
"@MMK_R_g" = -61;
"@MMK_R_germandbls" = 36;
"@MMK_R_l" = 36;
"@MMK_R_r" = -26;
"@MMK_R_s" = -59;
"@MMK_R_t" = -15;
"@MMK_R_u" = -18;
"@MMK_R_w" = -24;
"@MMK_R_y" = -28;
"@MMK_R_z" = -52;
};
"@MMK_L_space" = {
"@MMK_R_AE" = -40;
"@MMK_R_Aacute" = -34;
"@MMK_R_J" = -30;
"@MMK_R_T" = -26;
"@MMK_R_W" = -32;
"@MMK_R_Y" = -30;
"@MMK_R_quotedbl" = -30;
"@MMK_R_w" = -23;
"@MMK_R_y" = -19;
};
"@MMK_L_t_t" = {
"@MMK_R_c" = -8;
};
"@MMK_L_t_z" = {
"@MMK_R_Aacute" = 9;
"@MMK_R_B" = -8;
"@MMK_R_T" = -102;
"@MMK_R_U" = -36;
"@MMK_R_Y" = -128;
"@MMK_R_backslash" = -51;
"@MMK_R_braceright" = -19;
"@MMK_R_question" = -13;
};
"@MMK_L_three" = {
"@MMK_R_comma" = -12;
};
"@MMK_L_trademark" = {
"@MMK_R_AE" = -61;
"@MMK_R_Aacute" = -21;
"@MMK_R_B" = 11;
"@MMK_R_J" = -30;
"@MMK_R_T" = 13;
"@MMK_R_U" = 20;
"@MMK_R_W" = 73;
"@MMK_R_Y" = 60;
"@MMK_R_b" = 92;
"@MMK_R_c" = -12;
"@MMK_R_d" = -14;
"@MMK_R_g" = -15;
"@MMK_R_germandbls" = 54;
"@MMK_R_l" = 54;
"@MMK_R_r" = 6;
"@MMK_R_t" = 10;
"@MMK_R_u" = 22;
"@MMK_R_w" = 15;
"@MMK_R_y" = 5;
};
"@MMK_L_u" = {
"@MMK_R_C" = -10;
"@MMK_R_T" = -108;
"@MMK_R_U" = -49;
"@MMK_R_Y" = -131;
"@MMK_R_backslash" = -58;
"@MMK_R_bracketright" = 8;
"@MMK_R_parenright" = 15;
"@MMK_R_question" = -15;
"@MMK_R_slash" = 19;
"@MMK_R_v" = -9;
"@MMK_R_w" = -24;
};
"@MMK_L_v" = {
"@MMK_R_Aacute" = -50;
"@MMK_R_B" = -22;
"@MMK_R_T" = -89;
"@MMK_R_U" = -20;
"@MMK_R_Y" = -131;
"@MMK_R_comma" = -49;
"@MMK_R_emdash" = -14;
"@MMK_R_g" = -8;
"@MMK_R_germandbls" = -6;
"@MMK_R_l" = -6;
};
"@MMK_L_w" = {
"@MMK_R_Aacute" = -55;
"@MMK_R_B" = -22;
"@MMK_R_T" = -88;
"@MMK_R_U" = -20;
"@MMK_R_Y" = -136;
"@MMK_R_backslash" = -35;
"@MMK_R_braceright" = -33;
"@MMK_R_bracketright" = -26;
"@MMK_R_comma" = -48;
"@MMK_R_emdash" = -10;
"@MMK_R_germandbls" = -6;
"@MMK_R_parenright" = -18;
"@MMK_R_slash" = -23;
"@MMK_R_space" = -20;
};
"@MMK_L_x" = {
"@MMK_R_T" = -94;
"@MMK_R_U" = -34;
"@MMK_R_Y" = -116;
"@MMK_R_c" = -43;
"@MMK_R_d" = -36;
"@MMK_R_emdash" = -26;
"@MMK_R_g" = -14;
"@MMK_R_u" = -5;
"@MMK_R_w" = -24;
};
"@MMK_L_y" = {
"@MMK_R_Aacute" = -46;
"@MMK_R_B" = -25;
"@MMK_R_T" = -91;
"@MMK_R_U" = -22;
"@MMK_R_Y" = -134;
"@MMK_R_backslash" = -37;
"@MMK_R_braceright" = -32;
"@MMK_R_bracketright" = -25;
"@MMK_R_comma" = -50;
"@MMK_R_emdash" = -16;
"@MMK_R_g" = -5;
"@MMK_R_germandbls" = -8;
"@MMK_R_l" = -7;
"@MMK_R_parenright" = -18;
"@MMK_R_q" = -6;
"@MMK_R_slash" = -23;
"@MMK_R_space" = -18;
};
"@MMK_L_zero" = {
"@MMK_R_B" = -12;
"@MMK_R_comma" = -12;
};
A = {
apostrophemod = -55;
four = -13;
schwa = -13;
seven = 19;
zero = -14;
};
Aogonek = {
j = 122;
};
Aringacute = {
space = -39;
};
B = {
M = -12;
V = -17;
X = -44;
apostrophemod = -13;
braceright = -17;
bracketright = -18;
m = -7;
p = -13;
v = -18;
x = -17;
};
C = {
four = 6;
itilde = 9;
k = 14;
k.salt = 14;
kcommaaccent = 14;
};
Cacute = {
k = 14;
k.salt = 14;
};
Ccaron = {
k = 14;
k.salt = 14;
};
Ccedilla = {
k = 14;
k.salt = 14;
};
Ccircumflex = {
k = 14;
k.salt = 14;
};
Cdotaccent = {
k = 14;
k.salt = 14;
};
D = {
apostrophemod = -19;
itilde = 15;
};
Eng = {
germandbls = -21;
k = 54;
k.salt = 54;
};
F = {
V = 28;
a.salt = -36;
ampersand = -13;
asterisk = 15;
at = -23;
braceright = 9;
bracketright = 9;
c.salt = -47;
four = -12;
germandbls = -25;
idieresis = 2;
idotless = -31;
iogonek = -31;
k = 55;
k.salt = 55;
kcommaaccent = 55;
lslash = 19;
m = -33;
p = -22;
q = -51;
registered = -21;
s.salt = -41;
schwa = -41;
slash = -43;
space = -25;
v = -25;
x = -30;
};
H = {
at = -18;
four = -19;
germandbls = 1;
k = 39;
k.salt = 39;
kcommaaccent = 39;
lslash = 3;
schwa = -22;
seven = 10;
six = -18;
zero = -14;
};
Hbar = {
germandbls = 1;
k = 39;
k.salt = 39;
};
Hcircumflex = {
germandbls = 1;
k = 39;
k.salt = 39;
};
I = {
f_f_h = -10;
four = -16;
germandbls = 1;
hcircumflex = 15;
k.salt = 30;
kcommaaccent = 30;
lslash = 1;
schwa = -11;
seven = 5;
};
IJ = {
germandbls = -28;
};
Iacute = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Ibreve = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Icircumflex = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Idieresis = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Idotaccent = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Igrave = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Imacron = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Iogonek = {
f_f_h = -10;
germandbls = 1;
j = 61;
k.salt = 30;
};
Itilde = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
J = {
f_f_h = -16;
germandbls = -28;
hcircumflex = 19;
lslash = 20;
schwa = -23;
};
Jcircumflex = {
f_f_h = -16;
germandbls = -28;
};
K = {
four = -39;
germandbls = 1;
hcircumflex = 66;
k = 75;
k.salt = 68;
kcommaaccent = 68;
lslash = 30;
one = 30;
schwa = -52;
seven = 23;
six = -14;
thorn = 77;
two = 18;
};
K.salt = {
a.salt = -5;
asterisk = 6;
backslash = 9;
braceright = 5;
bracketright = 7;
c.salt = -24;
four = -27;
germandbls = 1;
hcircumflex = 50;
k = 59;
k.salt = 59;
kcommaaccent = 59;
lslash = 19;
one = 18;
p = -50;
q = -23;
registered = -15;
s.salt = -7;
schwa = -20;
seven = 11;
six = -13;
trademark = 8;
v = -72;
};
Kcommaaccent = {
germandbls = 1;
k = 75;
k.salt = 68;
thorn = 77;
};
L = {
apostrophemod = -61;
four = 18;
nine = -32;
};
M = {
a.salt = -24;
ampersand = -15;
asterisk = 31;
at = -22;
backslash = 11;
braceright = 6;
bracketright = 7;
c.salt = -41;
four = -25;
hcircumflex = 58;
m = -11;
one = 17;
p = -31;
q = -39;
registered = -25;
s.salt = -22;
schwa = -29;
seven = 16;
six = -21;
trademark = 16;
v = -48;
x = -11;
};
N = {
at = -23;
four = -15;
germandbls = -21;
k = 54;
k.salt = 54;
kcommaaccent = 54;
lslash = 20;
one = 9;
schwa = -28;
six = -19;
zero = -12;
};
Nacute = {
germandbls = -21;
k = 54;
k.salt = 54;
};
Ncaron = {
germandbls = -21;
k = 54;
k.salt = 54;
};
Ncommaaccent = {
germandbls = -21;
k = 54;
k.salt = 54;
};
Ndotaccent = {
germandbls = -21;
k = 54;
k.salt = 54;
};
Ntilde = {
germandbls = -21;
k = 54;
k.salt = 54;
};
O = {
itilde = 11;
};
P = {
X = -48;
a.salt = -24;
ampersand = -18;
asterisk = 11;
at = -26;
c.salt = -57;
four = -21;
germandbls = -15;
hbar = 22;
hcircumflex = 9;
icircumflex = 13;
idotless = -9;
iogonek = -9;
itilde = 46;
k = 6;
k.salt = 7;
kcommaaccent = 7;
m = -41;
nine = 7;
q = -67;
registered = -22;
s.salt = -43;
schwa = -44;
slash = -51;
space = -25;
x = -8;
};
Q = {
itilde = 11;
};
R = {
apostrophemod = -12;
four = -29;
one = 19;
schwa = -29;
seven = 37;
two = 25;
};
R.salt = {
V = -26;
apostrophemod = -19;
backslash = -17;
c.salt = -24;
four = -23;
p = -15;
q = -23;
registered = -12;
schwa = -13;
seven = 10;
v = -29;
};
S = {
germandbls = 1;
itilde = 22;
k = 27;
k.salt = 27;
kcommaaccent = 27;
lslash = 1;
};
Sacute = {
germandbls = 1;
k = 27;
k.salt = 27;
lslash = 1;
};
Scaron = {
germandbls = 1;
k = 27;
k.salt = 27;
kcommaaccent = 27;
};
Scedilla = {
germandbls = 1;
k = 27;
k.salt = 27;
};
Scircumflex = {
germandbls = 1;
k = 27;
k.salt = 27;
};
Scommaaccent = {
germandbls = 1;
k = 27;
k.salt = 27;
};
T = {
abreve = -101;
acircumflex = -86;
adieresis = -69;
at = -47;
atilde = -88;
ccaron = -114;
ccircumflex = -122;
ecaron = -113;
ecircumflex = -117;
edieresis = -99;
etilde = -80;
four = -44;
gbreve = -113;
gcircumflex = -113;
gdotaccent = -133;
germandbls = -27;
icircumflex = -9;
idieresis = -4;
idotless = -77;
iogonek = -77;
itilde = 7;
jcircumflex = -19;
k = 49;
k.salt = 49;
kcommaaccent = 49;
lslash = 15;
ocircumflex = -126;
odieresis = -116;
otilde = -111;
rcaron = -47;
scaron = -68;
schwa = -115;
scircumflex = -87;
six = -20;
utilde = -59;
zcaron = -78;
};
Tbar = {
germandbls = -27;
k = 49;
k.salt = 49;
};
Tcaron = {
germandbls = -27;
k = 49;
k.salt = 49;
};
Tcedilla = {
abreve = -101;
acircumflex = -86;
germandbls = -27;
icircumflex = -9;
k = 49;
k.salt = 49;
};
Tcommaaccent = {
abreve = -101;
acircumflex = -86;
germandbls = -27;
icircumflex = -9;
k = 49;
k.salt = 49;
};
Thorn = {
M = -25;
V = -31;
X = -77;
backslash = -19;
braceright = -25;
bracketright = -25;
c.salt = -5;
one = -21;
parenright = -19;
q = -7;
seven = -29;
slash = -28;
u = 7;
};
U = {
at = -21;
f_f_h = -17;
germandbls = -31;
schwa = -23;
six = -15;
};
Uacute = {
f_f_h = -17;
germandbls = -31;
};
Ubreve = {
f_f_h = -17;
germandbls = -31;
};
Ucircumflex = {
f_f_h = -17;
germandbls = -31;
};
Udieresis = {
f_f_h = -17;
germandbls = -31;
};
Ugrave = {
f_f_h = -17;
germandbls = -31;
};
Uhungarumlaut = {
f_f_h = -17;
germandbls = -31;
};
Umacron = {
f_f_h = -17;
germandbls = -31;
};
Uogonek = {
f_f_h = -17;
germandbls = -31;
};
Uring = {
f_f_h = -17;
germandbls = -31;
};
Utilde = {
f_f_h = -17;
germandbls = -31;
};
V = {
a.salt = -96;
asterisk = 63;
at = -51;
backslash = 36;
braceright = 17;
bracketright = 19;
c.salt = -115;
eth = -108;
four = -35;
germandbls = -29;
hcircumflex = -3;
m = -67;
nine = 19;
one = 31;
p = -71;
parenright = 12;
q = -119;
question = 18;
registered = -49;
s.salt = -109;
schwa = -96;
seven = 29;
six = -23;
slash = -56;
space = -26;
trademark = 55;
two = 6;
v = -72;
x = -76;
};
W = {
at = -51;
four = -36;
germandbls = -29;
nine = 22;
one = 23;
schwa = -96;
seven = 21;
six = -24;
two = 5;
};
Wacute = {
germandbls = -29;
};
Wcircumflex = {
germandbls = -29;
};
Wdieresis = {
germandbls = -29;
};
Wgrave = {
germandbls = -29;
};
X = {
backslash = 7;
braceright = 40;
bracketright = 40;
c.salt = -32;
four = -26;
germandbls = 1;
hcircumflex = 1;
lslash = 27;
one = 31;
p = -8;
parenright = 35;
q = -17;
schwa = -25;
seven = 49;
slash = 36;
three = 16;
trademark = 9;
two = 34;
v = -94;
};
Y = {
aringacute = -115;
at = -55;
eth = -138;
f_f_h = -70;
four = -50;
germandbls = -31;
hcircumflex = 93;
idotless = -100;
iogonek = -100;
nine = 16;
one = 35;
schwa = -131;
seven = 36;
six = -28;
};
Yacute = {
eth = -138;
f_f_h = -70;
germandbls = -31;
};
Ycircumflex = {
eth = -138;
f_f_h = -70;
germandbls = -31;
};
Ydieresis = {
eth = -138;
f_f_h = -70;
germandbls = -31;
};
Ygrave = {
eth = -138;
germandbls = -31;
};
Ytilde = {
eth = -138;
germandbls = -31;
};
Z = {
germandbls = 1;
k = 17;
k.salt = 19;
kcommaaccent = 19;
lslash = 7;
};
Zacute = {
germandbls = 1;
k = 17;
k.salt = 19;
};
Zcaron = {
germandbls = 1;
k = 17;
k.salt = 19;
};
Zdotaccent = {
germandbls = 1;
k = 17;
k.salt = 19;
lslash = 7;
};
a = {
AE = 57;
J = 25;
V = -120;
W = -132;
Z = 5;
lslash = 28;
};
a.salt = {
apostrophemod = -15;
backslash = -60;
lslash = 9;
question = -16;
slash = 5;
trademark = -12;
v = -25;
};
ampersand = {
B = 33;
D = 32;
Dcaron = 32;
Dcroat = 32;
E = 32;
Eacute = 32;
Ebreve = 32;
Ecaron = 32;
Ecircumflex = 32;
Edieresis = 32;
Edotaccent = 32;
Egrave = 32;
Emacron = 32;
Eogonek = 32;
Eth = 32;
Etilde = 32;
F = 32;
K.salt = 33;
L = 34;
Lacute = 34;
Lcaron = 33;
Lcommaaccent = 34;
Lslash = 36;
M = 19;
P = 32;
R = 31;
R.salt = 33;
Racute = 31;
Rcaron = 31;
Rcommaaccent = 31;
Thorn = 32;
V = -55;
X = 59;
f = 39;
k = 59;
k.salt = 59;
kcommaaccent = 59;
lslash = 32;
m = 21;
quoteright = -41;
v = -24;
x = 24;
};
aogonek = {
g = 34;
g.salt = 34;
j = 196;
lslash = 27;
parenright = 23;
thorn = 11;
};
apostrophemod = {
a = -16;
c.salt = -22;
d = -37;
f = -11;
q = -19;
s = -15;
s.salt = -15;
};
asterisk = {
Lcaron = 14;
V = 13;
c.salt = -10;
hcircumflex = 26;
k = 9;
k.salt = 9;
kcommaaccent = 9;
};
at = {
M = -18;
T = -48;
U = -24;
V = -52;
W = -54;
Y = -61;
};
b = {
apostrophemod = -62;
};
backslash = {
V = -59;
X = 20;
lslash = 1;
nine = -23;
quoteright = -56;
v = -26;
};
braceleft = {
Lcaron = 1;
V = 44;
X = 8;
braceleft = -12;
c.salt = -22;
four = -21;
germandbls = 8;
hcircumflex = 21;
lslash = 15;
one = 9;
p = -12;
parenleft = -17;
q = -19;
s.salt = -12;
seven = 8;
six = -21;
v = -23;
zero = -17;
};
braceright = {
braceright = -12;
};
bracketleft = {
Lcaron = 1;
V = 44;
X = 10;
c.salt = -23;
eight = -13;
four = -25;
germandbls = 8;
hcircumflex = 21;
lslash = 15;
one = 9;
parenleft = -18;
q = -20;
s.salt = -12;
seven = 9;
six = -23;
v = -22;
zero = -18;
};
c = {
M = -16;
V = -93;
W = -95;
};
c.salt = {
apostrophemod = -11;
backslash = -49;
braceright = -15;
};
ccedilla = {
j = 80;
};
comma = {
j = 32;
jcircumflex = 32;
};
d = {
AE = 31;
V = -9;
W = -12;
lslash = 21;
};
dcaron = {
asterisk = 34;
backslash = 52;
braceright = 57;
bracketright = 59;
quotedbl = 25;
quotedblleft = 27;
quotedblright = 31;
quoteleft = 27;
quoteright = 31;
quotesingle = 25;
trademark = 48;
};
degree = {
four = -41;
six = -17;
};
e = {
apostrophemod = -17;
};
eight = {
U = -12;
};
eng = {
backslash = -59;
question = -19;
trademark = -13;
v = -12;
w = -16;
};
eth = {
AE = -9;
M = -20;
U = -29;
V = -70;
W = -71;
X = -12;
Y = -76;
Z = -16;
backslash = -12;
braceright = -13;
bracketright = -12;
x = -12;
};
exclamdown = {
V = -27;
};
f = {
AE = 46;
F = 85;
M = 117;
R = 85;
S = 69;
Thorn = 85;
V = 126;
W = 163;
X = 140;
Z = 113;
ampersand = 23;
apostrophemod = 27;
asterisk = 157;
backslash = 123;
bar = 78;
braceright = 96;
bracketright = 96;
exclam = 80;
lslash = 10;
parenright = 88;
question = 118;
space = 44;
trademark = 144;
};
f_f = {
lslash = 10;
napostrophe = 191;
};
f_f_i = {
napostrophe = 8;
};
f_f_j = {
b = 15;
napostrophe = 38;
thorn = 16;
};
f_i = {
napostrophe = 8;
};
f_j = {
b = 16;
napostrophe = 38;
thorn = 16;
};
five = {
AE = -17;
V = 17;
W = 20;
four = 13;
};
four = {
A = 36;
AE = 25;
U = -13;
four = 21;
fraction = 10;
};
fraction = {
four = -22;
nine = 8;
one = -21;
seven = -25;
six = -13;
two = 6;
};
g = {
AE = 34;
Eth = -8;
J = 7;
S = 21;
V = -77;
W = -79;
comma = 6;
icircumflex = 28;
itilde = 46;
jcircumflex = 21;
lslash = 18;
quotedblbase = 17;
quotesinglbase = 17;
};
g.salt = {
eng = 16;
f = 22;
f_b = 28;
f_f = 35;
f_f_b = 35;
f_f_h = 35;
f_f_i = 35;
f_f_j = 35;
f_f_k = 35;
f_f_l = 35;
f_h = 28;
f_i = 28;
f_j = 29;
f_k = 28;
f_l = 28;
f_t = 28;
imacron = 7;
lslash = 17;
n = 16;
nacute = 16;
ncaron = 16;
ncommaaccent = 16;
ndotaccent = 16;
ntilde = 16;
p = 16;
quotedblbase = 15;
quotesinglbase = 15;
r = 18;
racute = 18;
rcaron = 18;
rcommaaccent = 18;
t = 27;
t_t = 27;
tbar = 21;
tcaron = 27;
tcedilla = 27;
tcommaaccent = 27;
u = 43;
uacute = 43;
ubreve = 43;
ucircumflex = 43;
udieresis = 43;
ugrave = 43;
uhungarumlaut = 43;
umacron = 43;
uogonek = 43;
uring = 43;
utilde = 43;
v = 38;
w = 41;
wacute = 41;
wcircumflex = 41;
wdieresis = 41;
wgrave = 41;
};
gbreve = {
comma = 6;
quotedblbase = 17;
quotesinglbase = 17;
};
gcircumflex = {
comma = 6;
quotedblbase = 17;
quotesinglbase = 17;
};
gcommaaccent = {
comma = 6;
quotedblbase = 17;
quotesinglbase = 17;
};
gdotaccent = {
comma = 6;
quotedblbase = 17;
quotesinglbase = 17;
};
germandbls = {
M = -10;
U = -48;
V = -87;
W = -88;
Y = -92;
backslash = -30;
braceright = -16;
p = -30;
question = -20;
space = -18;
v = -59;
x = -24;
};
h = {
M = -12;
V = -152;
W = -164;
Z = -7;
apostrophemod = -53;
};
hyphen = {
nine = -12;
one = -12;
seven = -13;
};
i = {
AE = 56;
V = -100;
W = -104;
lslash = 19;
};
idieresis = {
question = 14;
};
imacron = {
question = 16;
};
iogonek = {
j = 111;
};
itilde = {
question = 22;
};
jcircumflex = {
question = 13;
};
k = {
AE = 28;
V = -78;
W = -87;
apostrophemod = -46;
asterisk = -25;
backslash = -31;
c.salt = -21;
q = -20;
schwa = -11;
};
k.salt = {
apostrophemod = -61;
schwa = -18;
};
l = {
AE = 53;
V = -16;
lslash = 16;
periodcentered = -50;
};
lcaron = {
asterisk = 32;
b = 145;
backslash = 49;
braceright = 54;
bracketright = 57;
h = 94;
k = 105;
k.salt = 105;
l = 95;
l_l = 95;
parenright = 20;
quotedbl = 22;
quotedblleft = 25;
quotedblright = 29;
quoteleft = 25;
quoteright = 29;
quotesingle = 22;
thorn = 146;
trademark = 46;
};
lslash = {
f = 23;
f_b = 20;
f_f = 15;
f_f_b = 15;
f_f_h = 15;
f_f_i = 15;
f_f_j = 15;
f_f_k = 15;
f_f_l = 15;
f_h = 20;
f_i = 20;
f_j = 21;
f_k = 20;
f_l = 20;
f_t = 20;
germandbls = 40;
guillemetright = 13;
guilsinglright = 13;
h = 40;
i = 8;
ij = 8;
j = 6;
k = 40;
k.salt = 40;
l = 38;
l_l = 38;
lslash = 17;
n = 14;
p = 11;
question = 22;
r = 14;
t = 16;
t_t = 16;
t_z = 7;
u = 26;
v = 15;
w = 24;
x = 13;
};
m = {
AE = 30;
V = -143;
W = -154;
backslash = -60;
braceright = 10;
bracketright = 11;
lslash = 20;
parenright = 16;
question = -15;
slash = 20;
v = -32;
};
minus = {
seven = -17;
};
n = {
V = -145;
W = -157;
apostrophemod = -11;
};
nine = {
A = -33;
AE = -56;
J = -24;
U = -13;
braceright = -16;
bracketright = -17;
fraction = -30;
one = -12;
seven = -15;
slash = -36;
};
numbersign = {
one = -20;
seven = -26;
};
o = {
f_f_h = -6;
};
oacute = {
f_f_h = -6;
};
obreve = {
f_f_h = -6;
};
ocircumflex = {
f_f_h = -6;
};
odieresis = {
f_f_h = -6;
};
ograve = {
f_f_h = -6;
};
ohungarumlaut = {
f_f_h = -6;
};
omacron = {
f_f_h = -6;
};
one = {
A = 55;
AE = 45;
U = -15;
X = 17;
cent = -15;
fraction = 18;
};
oslash = {
f_f_h = -6;
};
otilde = {
f_f_h = -6;
};
p = {
f_f = -6;
f_f_b = -6;
f_f_h = -6;
f_f_i = -6;
f_f_j = -6;
f_f_k = -6;
f_f_l = -6;
};
parenleft = {
V = 42;
X = 7;
c.salt = -16;
four = -15;
germandbls = 1;
k = 37;
k.salt = 38;
kcommaaccent = 38;
lslash = 13;
q = -15;
six = -12;
v = -15;
};
parenright = {
braceright = -16;
bracketright = -17;
};
periodcentered = {
L = -11;
l = -50;
one = -12;
seven = -17;
};
plus = {
seven = -18;
};
q = {
M = -12;
V = -76;
W = -84;
Z = -12;
backslash = -32;
j = 105;
jcircumflex = 99;
};
questiondown = {
V = -49;
X = 13;
v = -14;
};
quotedbl = {
germandbls = 1;
hcircumflex = 29;
k = 23;
k.salt = 23;
kcommaaccent = 23;
lslash = 1;
};
quotedblleft = {
hcircumflex = 35;
k = 20;
k.salt = 22;
kcommaaccent = 22;
};
quotedblright = {
germandbls = 1;
hcircumflex = 32;
k = 33;
k.salt = 33;
kcommaaccent = 33;
lslash = 1;
};
quoteleft = {
hcircumflex = 35;
k = 20;
k.salt = 22;
kcommaaccent = 22;
};
quoteright = {
at = -16;
germandbls = 1;
hcircumflex = 32;
k = 33;
k.salt = 33;
kcommaaccent = 33;
lslash = 1;
registered = -15;
slash = -58;
space = -30;
};
quotesingle = {
germandbls = 1;
hcircumflex = 30;
k = 23;
k.salt = 23;
kcommaaccent = 23;
lslash = 1;
};
r = {
J = -6;
M = -24;
S = -9;
V = -94;
W = -101;
X = -15;
Z = -23;
};
registered = {
M = -17;
V = -51;
};
s = {
M = -16;
V = -95;
W = -101;
};
s.salt = {
backslash = -43;
braceright = -22;
bracketright = -17;
};
semicolon = {
j = 26;
jcircumflex = 26;
};
seven = {
A = -57;
AE = -84;
J = -48;
M = 32;
N = 33;
T = 34;
U = 35;
V = 82;
W = 87;
X = 44;
Y = 80;
backslash = 27;
braceright = 26;
bracketright = 27;
cent = -26;
degree = 5;
four = -45;
fraction = -70;
hyphen = -39;
minus = -15;
numbersign = -41;
one = 29;
periodcentered = -21;
plus = -12;
seven = 22;
six = -31;
slash = -72;
};
six = {
A = 6;
J = 14;
T = -28;
U = -14;
backslash = -21;
bracketright = -13;
four = 23;
nine = -19;
};
slash = {
V = 48;
X = 11;
a.salt = -48;
c.salt = -60;
f = -14;
four = -46;
germandbls = 1;
hcircumflex = 29;
k = 46;
k.salt = 46;
kcommaaccent = 46;
lslash = 15;
m = -33;
p = -24;
q = -61;
s.salt = -56;
six = -33;
slash = -200;
v = -24;
x = -27;
};
space = {
Aringacute = -42;
V = -32;
lslash = -22;
quoteright = -30;
v = -22;
};
t = {
M = -8;
V = -89;
W = -91;
apostrophemod = -35;
};
t_t = {
c.salt = -7;
q = -5;
};
tcaron = {
j = 6;
n = 9;
ncaron = 9;
p = 15;
r = 14;
t = 13;
t_t = 13;
tcaron = 13;
u = 13;
uacute = 13;
uring = 13;
v = 13;
w = 9;
};
three = {
AE = -26;
};
trademark = {
Eng = 17;
Lcaron = 26;
M = 33;
N = 18;
Nacute = 18;
Ncaron = 18;
Ncommaaccent = 18;
Ndotaccent = 18;
Ntilde = 18;
V = 68;
X = 40;
c.salt = -12;
germandbls = 1;
hcircumflex = 47;
icircumflex = 13;
itilde = 28;
jcircumflex = 7;
k.salt = 62;
kcommaaccent = 62;
lslash = 37;
p = 9;
v = 16;
};
two = {
A = 14;
AE = 7;
J = 11;
U = -13;
};
u = {
AE = 41;
V = -142;
W = -152;
lslash = 22;
};
uogonek = {
j = 129;
};
v = {
AE = -74;
J = -43;
M = -25;
S = -9;
V = -82;
W = -84;
X = -82;
Z = -36;
backslash = -33;
braceright = -32;
bracketright = -25;
parenright = -17;
q = -9;
slash = -24;
space = -20;
};
w = {
AE = -69;
J = -33;
M = -26;
S = -10;
V = -86;
W = -88;
X = -85;
Z = -36;
};
x = {
V = -91;
W = -100;
backslash = -42;
braceright = 7;
bracketright = 5;
c.salt = -42;
parenright = 5;
q = -41;
schwa = -9;
slash = 5;
v = -15;
};
y = {
AE = -67;
J = -49;
M = -28;
S = -15;
V = -86;
W = -94;
X = -75;
Z = -44;
};
z = {
M = -11;
V = -105;
W = -113;
};
zero = {
AE = -22;
M = -12;
U = -14;
braceright = -17;
bracketright = -18;
slash = -12;
};
};
"62092E79-60F6-4D0B-8A38-B9DDC6B60A9E" = {
"@MMK_L_AE" = {
"@MMK_R_b" = 11;
"@MMK_R_dotlessj" = -5;
"@MMK_R_four" = 11;
"@MMK_R_u" = -6;
"@MMK_R_v" = -22;
"@MMK_R_w" = -26;
"@MMK_R_y" = -12;
};
"@MMK_L_Aacute" = {
"@MMK_R_AE" = 11;
"@MMK_R_C" = -19;
"@MMK_R_S" = 10;
"@MMK_R_T" = -41;
"@MMK_R_U" = -34;
"@MMK_R_V" = -75;
"@MMK_R_W" = -89;
"@MMK_R_Y" = -53;
"@MMK_R_asterisk" = -19;
"@MMK_R_backslash" = -52;
"@MMK_R_braceright" = 79;
"@MMK_R_bracketright" = 77;
"@MMK_R_c" = -5;
"@MMK_R_c.salt" = -5;
"@MMK_R_colon" = 13;
"@MMK_R_comma" = 23;
"@MMK_R_d" = -5;
"@MMK_R_dotlessj" = 114;
"@MMK_R_exclam" = 19;
"@MMK_R_g" = 34;
"@MMK_R_parenright" = 52;
"@MMK_R_quotedbl" = -23;
"@MMK_R_quotedblleft" = -25;
"@MMK_R_quotedblright" = -23;
"@MMK_R_s" = 7;
"@MMK_R_slash" = 46;
"@MMK_R_space" = -29;
"@MMK_R_t" = -17;
"@MMK_R_trademark" = -20;
"@MMK_R_u" = -32;
"@MMK_R_v" = -51;
"@MMK_R_w" = -60;
};
"@MMK_L_B" = {
"@MMK_R_AE" = -19;
"@MMK_R_Aacute" = -8;
"@MMK_R_B" = -13;
"@MMK_R_U" = -12;
"@MMK_R_W" = -19;
"@MMK_R_Y" = -19;
"@MMK_R_dotlessj" = -10;
"@MMK_R_g" = -7;
"@MMK_R_u" = -8;
"@MMK_R_w" = -28;
"@MMK_R_y" = -16;
};
"@MMK_L_C" = {
"@MMK_R_AE" = -16;
"@MMK_R_Aacute" = -6;
"@MMK_R_b" = 41;
"@MMK_R_g" = -14;
"@MMK_R_h" = 25;
"@MMK_R_l" = 7;
"@MMK_R_v" = -9;
"@MMK_R_w" = -9;
"@MMK_R_y" = -21;
"@MMK_R_z" = -7;
};
"@MMK_L_D" = {
"@MMK_R_AE" = -54;
"@MMK_R_Aacute" = -24;
"@MMK_R_B" = -15;
"@MMK_R_M" = -11;
"@MMK_R_U" = -14;
"@MMK_R_V" = -23;
"@MMK_R_W" = -18;
"@MMK_R_X" = -23;
"@MMK_R_Y" = -26;
"@MMK_R_Z" = -6;
"@MMK_R_a" = -10;
"@MMK_R_a.salt" = -5;
"@MMK_R_backslash" = -14;
"@MMK_R_braceright" = -21;
"@MMK_R_bracketright" = -22;
"@MMK_R_c" = -6;
"@MMK_R_c.salt" = -6;
"@MMK_R_comma" = -21;
"@MMK_R_d" = -6;
"@MMK_R_g" = -16;
"@MMK_R_germandbls" = -6;
"@MMK_R_l" = -11;
"@MMK_R_one" = -18;
"@MMK_R_parenright" = -17;
"@MMK_R_q" = -7;
"@MMK_R_s" = -8;
"@MMK_R_s.salt" = -5;
"@MMK_R_seven" = -19;
"@MMK_R_slash" = -20;
"@MMK_R_z" = -5;
};
"@MMK_L_Eng" = {
"@MMK_R_AE" = -23;
"@MMK_R_Aacute" = -14;
"@MMK_R_C" = -13;
"@MMK_R_J" = -23;
"@MMK_R_S" = -14;
"@MMK_R_a" = -34;
"@MMK_R_a.salt" = -33;
"@MMK_R_ampersand" = -19;
"@MMK_R_b" = 78;
"@MMK_R_braceright" = 14;
"@MMK_R_bracketright" = 16;
"@MMK_R_c" = -31;
"@MMK_R_c.salt" = -30;
"@MMK_R_colon" = -10;
"@MMK_R_comma" = -14;
"@MMK_R_d" = -27;
"@MMK_R_dotlessi" = -29;
"@MMK_R_dotlessj" = -28;
"@MMK_R_emdash" = -13;
"@MMK_R_eng" = -25;
"@MMK_R_f" = -26;
"@MMK_R_f_f" = -21;
"@MMK_R_g" = -43;
"@MMK_R_germandbls" = -22;
"@MMK_R_h" = 62;
"@MMK_R_l" = 44;
"@MMK_R_m" = -29;
"@MMK_R_p" = -24;
"@MMK_R_q" = -28;
"@MMK_R_r" = -26;
"@MMK_R_registered" = -27;
"@MMK_R_s" = -24;
"@MMK_R_s.salt" = -23;
"@MMK_R_slash" = -21;
"@MMK_R_t" = -25;
"@MMK_R_u" = -26;
"@MMK_R_v" = -44;
"@MMK_R_w" = -49;
"@MMK_R_x" = -17;
"@MMK_R_y" = -29;
"@MMK_R_z" = -34;
};
"@MMK_L_F" = {
"@MMK_R_AE" = -67;
"@MMK_R_Aacute" = -59;
"@MMK_R_J" = -24;
"@MMK_R_W" = 30;
"@MMK_R_Y" = 30;
"@MMK_R_a" = -54;
"@MMK_R_b" = 81;
"@MMK_R_c" = -46;
"@MMK_R_comma" = -32;
"@MMK_R_d" = -45;
"@MMK_R_dotlessi" = -16;
"@MMK_R_dotlessj" = -8;
"@MMK_R_eng" = -22;
"@MMK_R_f" = -13;
"@MMK_R_g" = -66;
"@MMK_R_h" = 66;
"@MMK_R_l" = 48;
"@MMK_R_r" = -20;
"@MMK_R_s" = -50;
"@MMK_R_t" = -5;
"@MMK_R_u" = -8;
"@MMK_R_w" = -26;
"@MMK_R_y" = -24;
"@MMK_R_z" = -39;
};
"@MMK_L_G" = {
"@MMK_R_b" = 30;
"@MMK_R_g" = -7;
"@MMK_R_h" = 14;
"@MMK_R_v" = -12;
"@MMK_R_w" = -11;
"@MMK_R_y" = -16;
};
"@MMK_L_H" = {
"@MMK_R_C" = -16;
"@MMK_R_J" = -5;
"@MMK_R_a" = -13;
"@MMK_R_a.salt" = -14;
"@MMK_R_ampersand" = -14;
"@MMK_R_b" = 62;
"@MMK_R_braceright" = 12;
"@MMK_R_bracketright" = 10;
"@MMK_R_c" = -29;
"@MMK_R_c.salt" = -29;
"@MMK_R_d" = -24;
"@MMK_R_dotlessj" = 77;
"@MMK_R_emdash" = -14;
"@MMK_R_eng" = -11;
"@MMK_R_f_f" = 24;
"@MMK_R_guillemotleft" = -10;
"@MMK_R_guillemotright" = -10;
"@MMK_R_h" = 46;
"@MMK_R_l" = 29;
"@MMK_R_p" = -12;
"@MMK_R_q" = -24;
"@MMK_R_registered" = -20;
"@MMK_R_s.salt" = -9;
"@MMK_R_t" = -22;
"@MMK_R_u" = -26;
"@MMK_R_v" = -49;
"@MMK_R_w" = -55;
"@MMK_R_y" = -29;
};
"@MMK_L_I" = {
"@MMK_R_AE" = 31;
"@MMK_R_C" = -12;
"@MMK_R_b" = 53;
"@MMK_R_c" = -22;
"@MMK_R_c.salt" = -23;
"@MMK_R_d" = -20;
"@MMK_R_dotlessj" = -15;
"@MMK_R_emdash" = -12;
"@MMK_R_g" = -15;
"@MMK_R_h" = 36;
"@MMK_R_l" = 19;
"@MMK_R_p" = -12;
"@MMK_R_q" = -20;
"@MMK_R_registered" = -12;
"@MMK_R_t" = -12;
"@MMK_R_u" = -13;
"@MMK_R_v" = -33;
"@MMK_R_w" = -39;
"@MMK_R_y" = -28;
};
"@MMK_L_IJ" = {
"@MMK_R_AE" = -29;
"@MMK_R_Aacute" = -19;
"@MMK_R_C" = -8;
"@MMK_R_J" = -14;
"@MMK_R_S" = -10;
"@MMK_R_a" = -26;
"@MMK_R_a.salt" = -24;
"@MMK_R_ampersand" = -13;
"@MMK_R_at" = -16;
"@MMK_R_b" = 64;
"@MMK_R_braceright" = 5;
"@MMK_R_c" = -24;
"@MMK_R_c.salt" = -22;
"@MMK_R_comma" = -17;
"@MMK_R_d" = -21;
"@MMK_R_dotlessi" = -8;
"@MMK_R_dotlessj" = -8;
"@MMK_R_eng" = -6;
"@MMK_R_f" = -12;
"@MMK_R_g" = -26;
"@MMK_R_germandbls" = -11;
"@MMK_R_h" = 47;
"@MMK_R_l" = 30;
"@MMK_R_m" = -8;
"@MMK_R_p" = -6;
"@MMK_R_q" = -22;
"@MMK_R_r" = -6;
"@MMK_R_registered" = -16;
"@MMK_R_s" = -17;
"@MMK_R_s.salt" = -16;
"@MMK_R_six" = -13;
"@MMK_R_slash" = -23;
"@MMK_R_t" = -6;
"@MMK_R_u" = -6;
"@MMK_R_v" = -20;
"@MMK_R_w" = -23;
"@MMK_R_y" = -20;
"@MMK_R_z" = -25;
};
"@MMK_L_K" = {
"@MMK_R_AE" = 35;
"@MMK_R_C" = -54;
"@MMK_R_T" = 6;
"@MMK_R_a" = -5;
"@MMK_R_a.salt" = -6;
"@MMK_R_asterisk" = 36;
"@MMK_R_b" = 97;
"@MMK_R_backslash" = 22;
"@MMK_R_braceright" = 24;
"@MMK_R_bracketright" = 28;
"@MMK_R_c" = -41;
"@MMK_R_c.salt" = -43;
"@MMK_R_d" = -37;
"@MMK_R_dotlessj" = -40;
"@MMK_R_emdash" = -43;
"@MMK_R_g" = -12;
"@MMK_R_guillemotleft" = -51;
"@MMK_R_guillemotright" = -38;
"@MMK_R_h" = 73;
"@MMK_R_l" = 58;
"@MMK_R_p" = -26;
"@MMK_R_parenright" = 10;
"@MMK_R_q" = -36;
"@MMK_R_quotedblleft" = 10;
"@MMK_R_slash" = 12;
"@MMK_R_t" = -52;
"@MMK_R_trademark" = 27;
"@MMK_R_u" = -80;
"@MMK_R_v" = -145;
"@MMK_R_w" = -158;
"@MMK_R_y" = -82;
};
"@MMK_L_K.salt" = {
"@MMK_R_AE" = 13;
"@MMK_R_C" = -23;
"@MMK_R_a" = -5;
"@MMK_R_c" = -24;
"@MMK_R_d" = -23;
"@MMK_R_dotlessj" = 26;
"@MMK_R_emdash" = -25;
"@MMK_R_g" = -19;
"@MMK_R_guillemotleft" = -25;
"@MMK_R_guillemotright" = -22;
"@MMK_R_h" = 68;
"@MMK_R_l" = 46;
"@MMK_R_s" = -6;
"@MMK_R_t" = -38;
"@MMK_R_u" = -54;
"@MMK_R_w" = -81;
"@MMK_R_y" = -56;
};
"@MMK_L_L" = {
"@MMK_R_AE" = 10;
"@MMK_R_Aacute" = 7;
"@MMK_R_T" = -57;
"@MMK_R_U" = -19;
"@MMK_R_V" = -47;
"@MMK_R_W" = -49;
"@MMK_R_Y" = -55;
"@MMK_R_asterisk" = -41;
"@MMK_R_backslash" = -52;
"@MMK_R_dotlessj" = -21;
"@MMK_R_p" = -12;
"@MMK_R_question" = -25;
"@MMK_R_quotedbl" = -34;
"@MMK_R_quotedblleft" = -32;
"@MMK_R_quotedblright" = -34;
"@MMK_R_space" = -22;
"@MMK_R_t" = -11;
"@MMK_R_trademark" = -33;
"@MMK_R_u" = -12;
"@MMK_R_v" = -33;
"@MMK_R_w" = -35;
"@MMK_R_y" = -31;
};
"@MMK_L_M" = {
"@MMK_R_AE" = 9;
"@MMK_R_C" = -21;
"@MMK_R_J" = -9;
"@MMK_R_a" = -23;
"@MMK_R_b" = 78;
"@MMK_R_c" = -46;
"@MMK_R_d" = -43;
"@MMK_R_dotlessi" = -6;
"@MMK_R_dotlessj" = 39;
"@MMK_R_emdash" = -21;
"@MMK_R_eng" = -12;
"@MMK_R_f_f" = 11;
"@MMK_R_g" = -28;
"@MMK_R_guillemotleft" = -15;
"@MMK_R_guillemotright" = -15;
"@MMK_R_h" = 45;
"@MMK_R_l" = 39;
"@MMK_R_r" = -11;
"@MMK_R_s" = -11;
"@MMK_R_t" = -44;
"@MMK_R_u" = -50;
"@MMK_R_w" = -76;
"@MMK_R_y" = -43;
"@MMK_R_z" = -8;
};
"@MMK_L_O" = {
"@MMK_R_AE" = -24;
"@MMK_R_Aacute" = -14;
"@MMK_R_B" = -9;
"@MMK_R_M" = -6;
"@MMK_R_U" = -10;
"@MMK_R_V" = -23;
"@MMK_R_W" = -19;
"@MMK_R_X" = -16;
"@MMK_R_Y" = -18;
"@MMK_R_a" = -7;
"@MMK_R_apostrophe" = -16;
"@MMK_R_braceright" = -18;
"@MMK_R_bracketright" = -19;
"@MMK_R_comma" = -15;
"@MMK_R_g" = -11;
"@MMK_R_one" = -13;
"@MMK_R_parenright" = -13;
"@MMK_R_q" = -5;
"@MMK_R_s" = -6;
"@MMK_R_seven" = -13;
"@MMK_R_slash" = -14;
};
"@MMK_L_P" = {
"@MMK_R_AE" = -74;
"@MMK_R_Aacute" = -69;
"@MMK_R_B" = -5;
"@MMK_R_J" = -70;
"@MMK_R_a" = -45;
"@MMK_R_b" = 20;
"@MMK_R_c" = -54;
"@MMK_R_comma" = -46;
"@MMK_R_d" = -51;
"@MMK_R_emdash" = -29;
"@MMK_R_g" = -68;
"@MMK_R_h" = 14;
"@MMK_R_l" = 8;
"@MMK_R_s" = -47;
"@MMK_R_y" = -20;
"@MMK_R_z" = -40;
};
"@MMK_L_R" = {
"@MMK_R_AE" = 32;
"@MMK_R_C" = -10;
"@MMK_R_U" = -17;
"@MMK_R_V" = -30;
"@MMK_R_W" = -32;
"@MMK_R_Y" = -33;
"@MMK_R_Z" = 5;
"@MMK_R_backslash" = -12;
"@MMK_R_braceright" = 41;
"@MMK_R_bracketright" = 40;
"@MMK_R_c" = -22;
"@MMK_R_c.salt" = -22;
"@MMK_R_comma" = 5;
"@MMK_R_d" = -20;
"@MMK_R_dotlessj" = 60;
"@MMK_R_emdash" = -46;
"@MMK_R_f_f" = 22;
"@MMK_R_g" = 13;
"@MMK_R_parenright" = 28;
"@MMK_R_q" = -21;
"@MMK_R_slash" = 30;
"@MMK_R_space" = -27;
"@MMK_R_t" = -15;
"@MMK_R_u" = -18;
"@MMK_R_v" = -42;
"@MMK_R_w" = -48;
"@MMK_R_y" = -37;
};
"@MMK_L_R.salt" = {
"@MMK_R_AE" = 35;
"@MMK_R_C" = -16;
"@MMK_R_T" = -5;
"@MMK_R_U" = -23;
"@MMK_R_W" = -20;
"@MMK_R_Y" = -18;
"@MMK_R_c" = -24;
"@MMK_R_d" = -23;
"@MMK_R_dotlessj" = 89;
"@MMK_R_emdash" = -20;
"@MMK_R_f_f" = 21;
"@MMK_R_guillemotleft" = -11;
"@MMK_R_t" = -13;
"@MMK_R_u" = -18;
"@MMK_R_w" = -48;
"@MMK_R_y" = -33;
};
"@MMK_L_S" = {
"@MMK_R_AE" = -8;
"@MMK_R_a" = -5;
"@MMK_R_b" = 55;
"@MMK_R_c" = -10;
"@MMK_R_c.salt" = -10;
"@MMK_R_d" = -9;
"@MMK_R_dotlessj" = -7;
"@MMK_R_g" = -27;
"@MMK_R_h" = 38;
"@MMK_R_l" = 22;
"@MMK_R_m" = -7;
"@MMK_R_p" = -6;
"@MMK_R_q" = -9;
"@MMK_R_s" = -9;
"@MMK_R_s.salt" = -9;
"@MMK_R_v" = -18;
"@MMK_R_w" = -19;
"@MMK_R_y" = -29;
"@MMK_R_z" = -15;
};
"@MMK_L_T" = {
"@MMK_R_AE" = -74;
"@MMK_R_Aacute" = -47;
"@MMK_R_J" = -50;
"@MMK_R_V" = 16;
"@MMK_R_W" = 24;
"@MMK_R_Y" = 22;
"@MMK_R_a" = -104;
"@MMK_R_a.salt" = -79;
"@MMK_R_ampersand" = -21;
"@MMK_R_asterisk" = 21;
"@MMK_R_b" = 75;
"@MMK_R_c" = -124;
"@MMK_R_c.salt" = -123;
"@MMK_R_colon" = -23;
"@MMK_R_comma" = -21;
"@MMK_R_d" = -95;
"@MMK_R_dotlessi" = -31;
"@MMK_R_dotlessj" = -37;
"@MMK_R_emdash" = -50;
"@MMK_R_eng" = -77;
"@MMK_R_f" = -26;
"@MMK_R_f_f" = -21;
"@MMK_R_g" = -122;
"@MMK_R_germandbls" = -16;
"@MMK_R_guillemotleft" = -14;
"@MMK_R_h" = 59;
"@MMK_R_l" = 41;
"@MMK_R_m" = -82;
"@MMK_R_p" = -75;
"@MMK_R_q" = -120;
"@MMK_R_r" = -72;
"@MMK_R_registered" = -45;
"@MMK_R_s" = -98;
"@MMK_R_s.salt" = -101;
"@MMK_R_slash" = -31;
"@MMK_R_space" = -27;
"@MMK_R_t" = -28;
"@MMK_R_u" = -76;
"@MMK_R_v" = -93;
"@MMK_R_w" = -94;
"@MMK_R_x" = -74;
"@MMK_R_y" = -85;
"@MMK_R_z" = -94;
};
"@MMK_L_Thorn" = {
"@MMK_R_AE" = -78;
"@MMK_R_Aacute" = -38;
"@MMK_R_B" = -22;
"@MMK_R_J" = -14;
"@MMK_R_U" = -13;
"@MMK_R_W" = -30;
"@MMK_R_Y" = -56;
"@MMK_R_Z" = -10;
"@MMK_R_a" = -6;
"@MMK_R_c" = -5;
"@MMK_R_comma" = -31;
"@MMK_R_g" = -10;
"@MMK_R_l" = -6;
"@MMK_R_quotedbl" = -14;
"@MMK_R_quotedblleft" = -30;
"@MMK_R_quotedblright" = -14;
"@MMK_R_t" = 6;
};
"@MMK_L_U" = {
"@MMK_R_AE" = -49;
"@MMK_R_Aacute" = -33;
"@MMK_R_C" = -10;
"@MMK_R_J" = -23;
"@MMK_R_S" = -7;
"@MMK_R_a" = -38;
"@MMK_R_a.salt" = -36;
"@MMK_R_ampersand" = -15;
"@MMK_R_asterisk" = 39;
"@MMK_R_b" = 5;
"@MMK_R_c" = -35;
"@MMK_R_c.salt" = -34;
"@MMK_R_comma" = -23;
"@MMK_R_d" = -32;
"@MMK_R_dotlessi" = -22;
"@MMK_R_dotlessj" = -15;
"@MMK_R_emdash" = -10;
"@MMK_R_eng" = -15;
"@MMK_R_f" = -20;
"@MMK_R_g" = -39;
"@MMK_R_germandbls" = -25;
"@MMK_R_h" = -12;
"@MMK_R_l" = -13;
"@MMK_R_m" = -22;
"@MMK_R_p" = -12;
"@MMK_R_q" = -34;
"@MMK_R_r" = -17;
"@MMK_R_registered" = -23;
"@MMK_R_s" = -29;
"@MMK_R_s.salt" = -27;
"@MMK_R_slash" = -31;
"@MMK_R_t" = -12;
"@MMK_R_trademark" = 9;
"@MMK_R_u" = -13;
"@MMK_R_v" = -27;
"@MMK_R_w" = -30;
"@MMK_R_x" = -10;
"@MMK_R_y" = -29;
"@MMK_R_z" = -37;
};
"@MMK_L_V" = {
"@MMK_R_AE" = -95;
"@MMK_R_Aacute" = -49;
"@MMK_R_J" = -56;
"@MMK_R_T" = 51;
"@MMK_R_Z" = 13;
"@MMK_R_a" = -109;
"@MMK_R_c" = -108;
"@MMK_R_colon" = -19;
"@MMK_R_comma" = -43;
"@MMK_R_d" = -63;
"@MMK_R_dotlessi" = -58;
"@MMK_R_dotlessj" = -66;
"@MMK_R_emdash" = -24;
"@MMK_R_eng" = -57;
"@MMK_R_f" = -18;
"@MMK_R_f_f" = -17;
"@MMK_R_g" = -128;
"@MMK_R_quotedbl" = 48;
"@MMK_R_quotedblleft" = 53;
"@MMK_R_quotedblright" = 48;
"@MMK_R_r" = -54;
"@MMK_R_s" = -109;
"@MMK_R_t" = -55;
"@MMK_R_u" = -60;
"@MMK_R_w" = -76;
"@MMK_R_y" = -68;
"@MMK_R_z" = -97;
};
"@MMK_L_W" = {
"@MMK_R_AE" = -94;
"@MMK_R_Aacute" = -53;
"@MMK_R_J" = -59;
"@MMK_R_T" = 41;
"@MMK_R_a" = -112;
"@MMK_R_a.salt" = -95;
"@MMK_R_asterisk" = 75;
"@MMK_R_b" = 9;
"@MMK_R_backslash" = 36;
"@MMK_R_braceright" = 22;
"@MMK_R_bracketright" = 26;
"@MMK_R_c" = -112;
"@MMK_R_c.salt" = -111;
"@MMK_R_colon" = -21;
"@MMK_R_comma" = -43;
"@MMK_R_d" = -83;
"@MMK_R_dotlessi" = -62;
"@MMK_R_dotlessj" = -69;
"@MMK_R_emdash" = -25;
"@MMK_R_eng" = -61;
"@MMK_R_f" = -20;
"@MMK_R_f_f" = -18;
"@MMK_R_g" = -131;
"@MMK_R_germandbls" = -10;
"@MMK_R_m" = -70;
"@MMK_R_p" = -61;
"@MMK_R_parenright" = 5;
"@MMK_R_q" = -115;
"@MMK_R_question" = 26;
"@MMK_R_quotedbl" = 38;
"@MMK_R_quotedblleft" = 43;
"@MMK_R_quotedblright" = 38;
"@MMK_R_r" = -59;
"@MMK_R_registered" = -48;
"@MMK_R_s" = -111;
"@MMK_R_s.salt" = -106;
"@MMK_R_slash" = -52;
"@MMK_R_space" = -27;
"@MMK_R_t" = -58;
"@MMK_R_trademark" = 64;
"@MMK_R_u" = -63;
"@MMK_R_v" = -77;
"@MMK_R_w" = -79;
"@MMK_R_x" = -59;
"@MMK_R_y" = -68;
"@MMK_R_z" = -100;
};
"@MMK_L_X" = {
"@MMK_R_AE" = 43;
"@MMK_R_C" = -32;
"@MMK_R_Z" = 10;
"@MMK_R_b" = 80;
"@MMK_R_c" = -16;
"@MMK_R_comma" = 11;
"@MMK_R_d" = -12;
"@MMK_R_dotlessj" = -9;
"@MMK_R_emdash" = -25;
"@MMK_R_f_f" = 24;
"@MMK_R_g" = 15;
"@MMK_R_guillemotleft" = -26;
"@MMK_R_guillemotright" = -18;
"@MMK_R_h" = 63;
"@MMK_R_l" = 47;
"@MMK_R_t" = -29;
"@MMK_R_u" = -56;
"@MMK_R_w" = -115;
"@MMK_R_y" = -37;
"@MMK_R_z" = 8;
};
"@MMK_L_Y" = {
"@MMK_R_AE" = -81;
"@MMK_R_Aacute" = -55;
"@MMK_R_C" = -7;
"@MMK_R_J" = -52;
"@MMK_R_T" = 42;
"@MMK_R_a" = -127;
"@MMK_R_a.salt" = -110;
"@MMK_R_asterisk" = 64;
"@MMK_R_b" = 113;
"@MMK_R_backslash" = 42;
"@MMK_R_braceright" = 33;
"@MMK_R_bracketright" = 35;
"@MMK_R_c" = -147;
"@MMK_R_c.salt" = -148;
"@MMK_R_colon" = -16;
"@MMK_R_comma" = -14;
"@MMK_R_d" = -72;
"@MMK_R_dotlessi" = -83;
"@MMK_R_dotlessj" = -88;
"@MMK_R_emdash" = -43;
"@MMK_R_eng" = -92;
"@MMK_R_f" = -32;
"@MMK_R_g" = -137;
"@MMK_R_germandbls" = -17;
"@MMK_R_guillemotleft" = -23;
"@MMK_R_guillemotright" = -18;
"@MMK_R_h" = 89;
"@MMK_R_l" = 51;
"@MMK_R_m" = -100;
"@MMK_R_p" = -98;
"@MMK_R_parenright" = 21;
"@MMK_R_q" = -143;
"@MMK_R_question" = 15;
"@MMK_R_quotedbl" = 38;
"@MMK_R_quotedblleft" = 44;
"@MMK_R_quotedblright" = 38;
"@MMK_R_r" = -91;
"@MMK_R_registered" = -55;
"@MMK_R_s" = -117;
"@MMK_R_s.salt" = -123;
"@MMK_R_slash" = -27;
"@MMK_R_space" = -27;
"@MMK_R_t" = -89;
"@MMK_R_trademark" = 62;
"@MMK_R_u" = -94;
"@MMK_R_v" = -114;
"@MMK_R_w" = -116;
"@MMK_R_x" = -78;
"@MMK_R_y" = -90;
"@MMK_R_z" = -110;
};
"@MMK_L_Z" = {
"@MMK_R_b" = 38;
"@MMK_R_dotlessj" = -8;
"@MMK_R_h" = 25;
"@MMK_R_l" = 14;
"@MMK_R_u" = -10;
"@MMK_R_v" = -25;
"@MMK_R_w" = -28;
"@MMK_R_y" = -15;
};
"@MMK_L_a" = {
"@MMK_R_Aacute" = 7;
"@MMK_R_T" = -74;
"@MMK_R_Y" = -100;
"@MMK_R_ampersand" = 9;
"@MMK_R_backslash" = -42;
"@MMK_R_braceright" = 7;
"@MMK_R_bracketright" = 5;
"@MMK_R_parenright" = 19;
"@MMK_R_slash" = 21;
"@MMK_R_v" = -11;
"@MMK_R_w" = -19;
};
"@MMK_L_a.salt" = {
"@MMK_R_w" = -40;
"@MMK_R_y" = -8;
};
"@MMK_L_ae" = {
"@MMK_R_B" = -19;
"@MMK_R_M" = -18;
"@MMK_R_T" = -116;
"@MMK_R_U" = -25;
"@MMK_R_V" = -108;
"@MMK_R_W" = -120;
"@MMK_R_Y" = -139;
"@MMK_R_Z" = -8;
"@MMK_R_asterisk" = -10;
"@MMK_R_backslash" = -58;
"@MMK_R_question" = -19;
"@MMK_R_trademark" = -19;
"@MMK_R_v" = -8;
"@MMK_R_w" = -13;
"@MMK_R_y" = -5;
};
"@MMK_L_ampersand" = {
"@MMK_R_AE" = 97;
"@MMK_R_Aacute" = 93;
"@MMK_R_B" = 14;
"@MMK_R_C" = -21;
"@MMK_R_J" = 20;
"@MMK_R_S" = 14;
"@MMK_R_T" = -37;
"@MMK_R_U" = -31;
"@MMK_R_W" = -59;
"@MMK_R_Y" = -37;
"@MMK_R_Z" = 38;
"@MMK_R_a" = 12;
"@MMK_R_dotlessi" = 29;
"@MMK_R_eng" = 20;
"@MMK_R_h" = 55;
"@MMK_R_l" = 54;
"@MMK_R_quotedbl" = -44;
"@MMK_R_r" = 24;
"@MMK_R_s" = 14;
"@MMK_R_w" = -30;
"@MMK_R_y" = -13;
"@MMK_R_z" = 29;
};
"@MMK_L_apostrophe" = {
"@MMK_R_c" = -23;
"@MMK_R_g" = -49;
};
"@MMK_L_asterisk" = {
"@MMK_R_AE" = -69;
"@MMK_R_Aacute" = -25;
"@MMK_R_J" = -30;
"@MMK_R_T" = 21;
"@MMK_R_W" = 7;
"@MMK_R_b" = 28;
"@MMK_R_c" = -13;
"@MMK_R_d" = -22;
"@MMK_R_g" = -33;
"@MMK_R_h" = 11;
};
"@MMK_L_at" = {
"@MMK_R_B" = -17;
"@MMK_R_quotedbl" = -16;
};
"@MMK_L_b" = {
"@MMK_R_B" = -19;
"@MMK_R_M" = -16;
"@MMK_R_T" = -128;
"@MMK_R_U" = -25;
"@MMK_R_V" = -113;
"@MMK_R_W" = -126;
"@MMK_R_X" = -9;
"@MMK_R_Y" = -149;
"@MMK_R_Z" = -15;
"@MMK_R_asterisk" = -43;
"@MMK_R_backslash" = -61;
"@MMK_R_braceright" = -14;
"@MMK_R_bracketright" = -15;
"@MMK_R_parenright" = -13;
"@MMK_R_question" = -24;
"@MMK_R_quotedbl" = -48;
"@MMK_R_quotedblleft" = -48;
"@MMK_R_quotedblright" = -48;
"@MMK_R_trademark" = -32;
"@MMK_R_v" = -15;
"@MMK_R_w" = -21;
"@MMK_R_x" = -16;
};
"@MMK_L_backslash" = {
"@MMK_R_AE" = 52;
"@MMK_R_Aacute" = 48;
"@MMK_R_C" = -14;
"@MMK_R_T" = -36;
"@MMK_R_U" = -25;
"@MMK_R_W" = -61;
"@MMK_R_Y" = -37;
"@MMK_R_h" = 9;
"@MMK_R_l" = 16;
"@MMK_R_quotedbl" = -53;
"@MMK_R_w" = -32;
"@MMK_R_y" = -14;
};
"@MMK_L_bar" = {
"@MMK_R_b" = 5;
"@MMK_R_dotlessj" = 55;
};
"@MMK_L_braceleft" = {
"@MMK_R_AE" = 28;
"@MMK_R_Aacute" = 29;
"@MMK_R_C" = -18;
"@MMK_R_T" = 5;
"@MMK_R_U" = 13;
"@MMK_R_W" = 51;
"@MMK_R_Y" = 43;
"@MMK_R_b" = 70;
"@MMK_R_c" = -15;
"@MMK_R_d" = -13;
"@MMK_R_dotlessj" = 91;
"@MMK_R_h" = 46;
"@MMK_R_l" = 37;
"@MMK_R_u" = -14;
"@MMK_R_w" = -32;
"@MMK_R_y" = -16;
};
"@MMK_L_bracketleft" = {
"@MMK_R_AE" = 29;
"@MMK_R_Aacute" = 29;
"@MMK_R_C" = -19;
"@MMK_R_T" = 5;
"@MMK_R_W" = 51;
"@MMK_R_Y" = 44;
"@MMK_R_b" = 72;
"@MMK_R_c" = -14;
"@MMK_R_d" = -13;
"@MMK_R_dotlessj" = 90;
"@MMK_R_h" = 47;
"@MMK_R_l" = 38;
"@MMK_R_u" = -13;
"@MMK_R_w" = -31;
"@MMK_R_y" = -15;
};
"@MMK_L_c" = {
"@MMK_R_B" = -16;
"@MMK_R_T" = -85;
"@MMK_R_U" = -19;
"@MMK_R_Y" = -115;
"@MMK_R_backslash" = -36;
};
"@MMK_L_c.salt" = {
"@MMK_R_w" = -8;
};
"@MMK_L_c_h" = {
"@MMK_R_C" = -13;
"@MMK_R_T" = -115;
"@MMK_R_U" = -48;
"@MMK_R_Y" = -142;
"@MMK_R_asterisk" = -42;
"@MMK_R_backslash" = -65;
"@MMK_R_braceright" = 35;
"@MMK_R_bracketright" = 34;
"@MMK_R_c" = -6;
"@MMK_R_c.salt" = -6;
"@MMK_R_parenright" = 19;
"@MMK_R_q" = -5;
"@MMK_R_question" = -13;
"@MMK_R_quotedbl" = -43;
"@MMK_R_quotedblleft" = -43;
"@MMK_R_quotedblright" = -43;
"@MMK_R_slash" = 15;
"@MMK_R_t" = -15;
"@MMK_R_trademark" = -37;
"@MMK_R_u" = -29;
"@MMK_R_v" = -48;
"@MMK_R_w" = -52;
"@MMK_R_y" = -5;
};
"@MMK_L_c_k" = {
"@MMK_R_T" = -81;
"@MMK_R_U" = -14;
"@MMK_R_Y" = -100;
"@MMK_R_c" = -22;
"@MMK_R_c.salt" = -22;
"@MMK_R_d" = -20;
"@MMK_R_emdash" = -22;
"@MMK_R_q" = -21;
"@MMK_R_quotedbl" = -29;
"@MMK_R_quotedblleft" = -31;
"@MMK_R_quotedblright" = -29;
"@MMK_R_y" = 14;
};
"@MMK_L_c_p" = {
"@MMK_R_B" = -19;
"@MMK_R_T" = -127;
"@MMK_R_U" = -25;
"@MMK_R_Y" = -149;
"@MMK_R_v" = -8;
"@MMK_R_w" = -13;
"@MMK_R_x" = -9;
"@MMK_R_y" = -5;
};
"@MMK_L_c_t" = {
"@MMK_R_Aacute" = 5;
"@MMK_R_B" = -8;
"@MMK_R_T" = -89;
"@MMK_R_U" = -22;
"@MMK_R_Y" = -108;
"@MMK_R_asterisk" = -18;
"@MMK_R_backslash" = -39;
"@MMK_R_quotedbl" = -16;
"@MMK_R_quotedblleft" = -12;
"@MMK_R_quotedblright" = -16;
"@MMK_R_u" = 6;
};
"@MMK_L_colon" = {
"@MMK_R_AE" = 8;
"@MMK_R_T" = -27;
"@MMK_R_V" = -21;
"@MMK_R_W" = -24;
"@MMK_R_Y" = -22;
};
"@MMK_L_comma" = {
"@MMK_R_AE" = 20;
"@MMK_R_Aacute" = 16;
"@MMK_R_C" = -13;
"@MMK_R_T" = -25;
"@MMK_R_U" = -18;
"@MMK_R_V" = -43;
"@MMK_R_W" = -47;
"@MMK_R_Y" = -21;
"@MMK_R_dotlessj" = -17;
"@MMK_R_nine" = -17;
"@MMK_R_quotedbl" = -83;
"@MMK_R_quotedblleft" = -77;
"@MMK_R_quotedblright" = -83;
"@MMK_R_u" = -16;
"@MMK_R_v" = -50;
"@MMK_R_w" = -52;
"@MMK_R_y" = -18;
};
"@MMK_L_d" = {
"@MMK_R_U" = -13;
"@MMK_R_Y" = -13;
"@MMK_R_braceright" = 34;
"@MMK_R_bracketright" = 32;
"@MMK_R_comma" = 9;
"@MMK_R_parenright" = 31;
"@MMK_R_slash" = 33;
"@MMK_R_w" = -7;
"@MMK_R_z" = 8;
};
"@MMK_L_dotlessi" = {
"@MMK_R_T" = -25;
"@MMK_R_U" = -23;
"@MMK_R_Y" = -96;
"@MMK_R_backslash" = -26;
"@MMK_R_braceright" = 7;
"@MMK_R_bracketright" = 7;
"@MMK_R_parenright" = 8;
"@MMK_R_slash" = 17;
"@MMK_R_v" = -15;
"@MMK_R_w" = -19;
};
"@MMK_L_dotlessj" = {
"@MMK_R_B" = -13;
"@MMK_R_M" = -10;
"@MMK_R_T" = -10;
"@MMK_R_U" = -18;
"@MMK_R_V" = -66;
"@MMK_R_W" = -69;
"@MMK_R_Y" = -91;
"@MMK_R_Z" = -5;
"@MMK_R_backslash" = -19;
"@MMK_R_dotlessj" = 56;
};
"@MMK_L_emdash" = {
"@MMK_R_AE" = -30;
"@MMK_R_B" = -11;
"@MMK_R_M" = -10;
"@MMK_R_T" = -48;
"@MMK_R_V" = -25;
"@MMK_R_W" = -29;
"@MMK_R_X" = -15;
"@MMK_R_Y" = -43;
"@MMK_R_Z" = -12;
"@MMK_R_dotlessj" = -19;
"@MMK_R_eng" = -11;
"@MMK_R_v" = -22;
"@MMK_R_w" = -23;
"@MMK_R_y" = -27;
};
"@MMK_L_eth" = {
"@MMK_R_B" = -14;
"@MMK_R_T" = -24;
};
"@MMK_L_exclamdown" = {
"@MMK_R_U" = -13;
"@MMK_R_W" = -24;
"@MMK_R_Y" = -28;
"@MMK_R_dotlessj" = 51;
};
"@MMK_L_f" = {
"@MMK_R_B" = 93;
"@MMK_R_C" = 48;
"@MMK_R_T" = 143;
"@MMK_R_U" = 101;
"@MMK_R_Y" = 144;
"@MMK_R_emdash" = -26;
"@MMK_R_quotedbl" = 116;
"@MMK_R_quotedblleft" = 119;
"@MMK_R_quotedblright" = 116;
};
"@MMK_L_f_f_i" = {
"@MMK_R_a" = -5;
"@MMK_R_c" = -9;
"@MMK_R_c.salt" = -9;
"@MMK_R_d" = -7;
"@MMK_R_q" = -7;
"@MMK_R_v" = -13;
"@MMK_R_w" = -18;
};
"@MMK_L_f_f_l" = {
"@MMK_R_T" = -9;
"@MMK_R_U" = -12;
"@MMK_R_Y" = -5;
"@MMK_R_braceright" = 7;
"@MMK_R_bracketright" = 6;
"@MMK_R_parenright" = 7;
"@MMK_R_slash" = 15;
"@MMK_R_v" = -8;
"@MMK_R_w" = -11;
};
"@MMK_L_f_l" = {
"@MMK_R_c" = -6;
"@MMK_R_w" = -19;
};
"@MMK_L_g" = {
"@MMK_R_C" = -9;
"@MMK_R_T" = -47;
"@MMK_R_U" = -24;
"@MMK_R_Y" = -82;
"@MMK_R_a" = -7;
"@MMK_R_a.salt" = -8;
"@MMK_R_backslash" = -27;
"@MMK_R_braceright" = 67;
"@MMK_R_bracketright" = 65;
"@MMK_R_comma" = 9;
"@MMK_R_parenright" = 36;
"@MMK_R_slash" = 31;
"@MMK_R_v" = -19;
"@MMK_R_w" = -19;
"@MMK_R_y" = -7;
"@MMK_R_z" = 5;
};
"@MMK_L_g.salt" = {
"@MMK_R_c" = -11;
"@MMK_R_d" = -7;
"@MMK_R_emdash" = -11;
"@MMK_R_f_f" = 9;
"@MMK_R_t" = 14;
"@MMK_R_u" = 19;
};
"@MMK_L_germandbls" = {
"@MMK_R_B" = -7;
"@MMK_R_C" = -13;
"@MMK_R_T" = -72;
"@MMK_R_dotlessj" = -33;
"@MMK_R_t" = -10;
"@MMK_R_u" = -17;
"@MMK_R_w" = -65;
"@MMK_R_y" = -54;
};
"@MMK_L_guillemotleft" = {
"@MMK_R_AE" = -33;
"@MMK_R_Y" = -20;
};
"@MMK_L_guillemotright" = {
"@MMK_R_AE" = -38;
"@MMK_R_T" = -14;
"@MMK_R_W" = -11;
"@MMK_R_X" = -16;
"@MMK_R_Y" = -25;
"@MMK_R_Z" = -11;
"@MMK_R_dotlessj" = 5;
"@MMK_R_quotedbl" = -21;
"@MMK_R_quotedblright" = -21;
};
"@MMK_L_k.salt" = {
"@MMK_R_a" = -9;
"@MMK_R_a.salt" = -7;
"@MMK_R_asterisk" = -41;
"@MMK_R_backslash" = -61;
"@MMK_R_braceright" = 21;
"@MMK_R_bracketright" = 20;
"@MMK_R_c" = -29;
"@MMK_R_c.salt" = -29;
"@MMK_R_d" = -25;
"@MMK_R_emdash" = -58;
"@MMK_R_parenright" = 8;
"@MMK_R_q" = -27;
"@MMK_R_question" = -19;
"@MMK_R_quotedbl" = -50;
"@MMK_R_quotedblleft" = -51;
"@MMK_R_quotedblright" = -50;
"@MMK_R_trademark" = -31;
"@MMK_R_v" = -6;
"@MMK_R_w" = -11;
};
"@MMK_L_l_l" = {
"@MMK_R_w" = -10;
};
"@MMK_L_ldot" = {
"@MMK_R_f_f" = 15;
};
"@MMK_L_m" = {
"@MMK_R_C" = -8;
"@MMK_R_T" = -102;
"@MMK_R_U" = -33;
"@MMK_R_Y" = -128;
"@MMK_R_u" = -12;
"@MMK_R_w" = -45;
"@MMK_R_y" = -5;
};
"@MMK_L_n" = {
"@MMK_R_C" = -9;
"@MMK_R_T" = -104;
"@MMK_R_U" = -37;
"@MMK_R_Y" = -130;
"@MMK_R_backslash" = -63;
"@MMK_R_braceright" = 28;
"@MMK_R_bracketright" = 27;
"@MMK_R_parenright" = 21;
"@MMK_R_question" = -13;
"@MMK_R_slash" = 24;
"@MMK_R_trademark" = -13;
"@MMK_R_u" = -16;
"@MMK_R_v" = -42;
"@MMK_R_w" = -46;
"@MMK_R_y" = -6;
};
"@MMK_L_nine" = {
"@MMK_R_B" = -12;
"@MMK_R_comma" = -34;
};
"@MMK_L_o" = {
"@MMK_R_B" = -21;
"@MMK_R_T" = -131;
"@MMK_R_U" = -26;
"@MMK_R_Y" = -151;
"@MMK_R_asterisk" = -12;
"@MMK_R_backslash" = -60;
"@MMK_R_braceright" = -14;
"@MMK_R_bracketright" = -15;
"@MMK_R_parenright" = -12;
"@MMK_R_question" = -22;
"@MMK_R_trademark" = -21;
"@MMK_R_v" = -17;
"@MMK_R_w" = -23;
"@MMK_R_x" = -17;
};
"@MMK_L_parenleft" = {
"@MMK_R_AE" = 22;
"@MMK_R_Aacute" = 18;
"@MMK_R_C" = -15;
"@MMK_R_W" = 37;
"@MMK_R_Y" = 32;
"@MMK_R_b" = 62;
"@MMK_R_c" = -17;
"@MMK_R_d" = -16;
"@MMK_R_g" = -13;
"@MMK_R_h" = 44;
"@MMK_R_l" = 28;
"@MMK_R_w" = -26;
"@MMK_R_y" = -23;
};
"@MMK_L_q" = {
"@MMK_R_B" = -8;
"@MMK_R_T" = -95;
"@MMK_R_U" = -11;
"@MMK_R_Y" = -118;
"@MMK_R_dotlessj" = 107;
"@MMK_R_y" = 26;
};
"@MMK_L_questiondown" = {
"@MMK_R_AE" = 44;
"@MMK_R_Aacute" = 40;
"@MMK_R_C" = -13;
"@MMK_R_T" = -21;
"@MMK_R_U" = -23;
"@MMK_R_W" = -46;
"@MMK_R_Y" = -32;
"@MMK_R_dotlessj" = 82;
"@MMK_R_l" = 6;
"@MMK_R_w" = -24;
};
"@MMK_L_quotedbl" = {
"@MMK_R_AE" = -67;
"@MMK_R_Aacute" = -29;
"@MMK_R_J" = -22;
"@MMK_R_V" = 17;
"@MMK_R_W" = 25;
"@MMK_R_Y" = 22;
"@MMK_R_at" = -18;
"@MMK_R_b" = 53;
"@MMK_R_comma" = -83;
"@MMK_R_d" = -18;
"@MMK_R_four" = -37;
"@MMK_R_g" = -30;
"@MMK_R_guillemotleft" = -22;
"@MMK_R_h" = 36;
"@MMK_R_l" = 19;
"@MMK_R_registered" = -18;
"@MMK_R_six" = -15;
"@MMK_R_slash" = -53;
"@MMK_R_space" = -30;
};
"@MMK_L_quotedblleft" = {
"@MMK_R_AE" = -66;
"@MMK_R_Aacute" = -31;
"@MMK_R_J" = -20;
"@MMK_R_V" = 19;
"@MMK_R_W" = 27;
"@MMK_R_Y" = 25;
"@MMK_R_b" = 55;
"@MMK_R_comma" = -77;
"@MMK_R_d" = -17;
"@MMK_R_g" = -24;
"@MMK_R_h" = 39;
"@MMK_R_l" = 22;
};
"@MMK_L_quotedblright" = {
"@MMK_R_AE" = -67;
"@MMK_R_Aacute" = -29;
"@MMK_R_J" = -22;
"@MMK_R_V" = 23;
"@MMK_R_W" = 31;
"@MMK_R_Y" = 28;
"@MMK_R_b" = 58;
"@MMK_R_c.salt" = -10;
"@MMK_R_comma" = -84;
"@MMK_R_d" = -18;
"@MMK_R_g" = -31;
"@MMK_R_guillemotleft" = -23;
"@MMK_R_h" = 41;
"@MMK_R_l" = 25;
};
"@MMK_L_r" = {
"@MMK_R_B" = -21;
"@MMK_R_T" = -128;
"@MMK_R_U" = -22;
"@MMK_R_Y" = -143;
"@MMK_R_backslash" = -49;
"@MMK_R_braceright" = -17;
"@MMK_R_bracketright" = -18;
"@MMK_R_comma" = -14;
"@MMK_R_parenright" = -15;
"@MMK_R_question" = -14;
};
"@MMK_L_registered" = {
"@MMK_R_B" = -15;
"@MMK_R_T" = -43;
"@MMK_R_U" = -19;
"@MMK_R_W" = -51;
"@MMK_R_Y" = -59;
"@MMK_R_quotedbl" = -14;
};
"@MMK_L_s" = {
"@MMK_R_B" = -14;
"@MMK_R_T" = -83;
"@MMK_R_U" = -25;
"@MMK_R_Y" = -122;
"@MMK_R_backslash" = -46;
};
"@MMK_L_seven" = {
"@MMK_R_B" = 26;
"@MMK_R_C" = -14;
"@MMK_R_comma" = -66;
"@MMK_R_quotedbl" = 12;
};
"@MMK_L_slash" = {
"@MMK_R_AE" = -84;
"@MMK_R_Aacute" = -58;
"@MMK_R_C" = -15;
"@MMK_R_J" = -44;
"@MMK_R_W" = 43;
"@MMK_R_Y" = 39;
"@MMK_R_a" = -60;
"@MMK_R_b" = 69;
"@MMK_R_c" = -61;
"@MMK_R_d" = -48;
"@MMK_R_dotlessi" = -22;
"@MMK_R_dotlessj" = -20;
"@MMK_R_eng" = -28;
"@MMK_R_g" = -61;
"@MMK_R_h" = 52;
"@MMK_R_l" = 35;
"@MMK_R_r" = -29;
"@MMK_R_s" = -60;
"@MMK_R_t" = -17;
"@MMK_R_u" = -20;
"@MMK_R_w" = -34;
"@MMK_R_y" = -37;
"@MMK_R_z" = -55;
};
"@MMK_L_space" = {
"@MMK_R_AE" = -39;
"@MMK_R_Aacute" = -28;
"@MMK_R_J" = -28;
"@MMK_R_T" = -27;
"@MMK_R_W" = -31;
"@MMK_R_Y" = -30;
"@MMK_R_quotedbl" = -30;
"@MMK_R_w" = -23;
"@MMK_R_y" = -21;
};
"@MMK_L_t_t" = {
"@MMK_R_c" = -7;
"@MMK_R_dotlessj" = 6;
};
"@MMK_L_t_z" = {
"@MMK_R_B" = -11;
"@MMK_R_T" = -100;
"@MMK_R_U" = -26;
"@MMK_R_Y" = -123;
"@MMK_R_backslash" = -52;
"@MMK_R_question" = -15;
};
"@MMK_L_trademark" = {
"@MMK_R_AE" = -62;
"@MMK_R_Aacute" = -21;
"@MMK_R_J" = -25;
"@MMK_R_T" = 14;
"@MMK_R_U" = 13;
"@MMK_R_W" = 60;
"@MMK_R_Y" = 58;
"@MMK_R_b" = 82;
"@MMK_R_c" = -12;
"@MMK_R_d" = -14;
"@MMK_R_g" = -15;
"@MMK_R_h" = 65;
"@MMK_R_l" = 49;
"@MMK_R_t" = 5;
"@MMK_R_u" = 13;
};
"@MMK_L_u" = {
"@MMK_R_T" = -94;
"@MMK_R_U" = -23;
"@MMK_R_Y" = -120;
"@MMK_R_backslash" = -55;
"@MMK_R_braceright" = 14;
"@MMK_R_bracketright" = 13;
"@MMK_R_parenright" = 13;
"@MMK_R_slash" = 19;
"@MMK_R_v" = -13;
"@MMK_R_w" = -18;
};
"@MMK_L_v" = {
"@MMK_R_Aacute" = -40;
"@MMK_R_B" = -24;
"@MMK_R_T" = -83;
"@MMK_R_U" = -19;
"@MMK_R_Y" = -110;
"@MMK_R_comma" = -49;
"@MMK_R_dotlessi" = 13;
"@MMK_R_dotlessj" = 24;
"@MMK_R_emdash" = -16;
"@MMK_R_eng" = 15;
"@MMK_R_f_f" = 8;
"@MMK_R_guillemotleft" = 10;
"@MMK_R_r" = 13;
"@MMK_R_t" = 18;
"@MMK_R_u" = 7;
"@MMK_R_y" = 39;
};
"@MMK_L_w" = {
"@MMK_R_Aacute" = -42;
"@MMK_R_B" = -24;
"@MMK_R_T" = -87;
"@MMK_R_U" = -16;
"@MMK_R_Y" = -116;
"@MMK_R_backslash" = -33;
"@MMK_R_braceright" = -32;
"@MMK_R_bracketright" = -26;
"@MMK_R_comma" = -48;
"@MMK_R_dotlessi" = 8;
"@MMK_R_dotlessj" = 12;
"@MMK_R_emdash" = -11;
"@MMK_R_eng" = 7;
"@MMK_R_guillemotleft" = 6;
"@MMK_R_m" = 8;
"@MMK_R_p" = 9;
"@MMK_R_parenright" = -22;
"@MMK_R_r" = 6;
"@MMK_R_slash" = -24;
"@MMK_R_space" = -20;
"@MMK_R_t" = 8;
"@MMK_R_x" = 10;
"@MMK_R_y" = 43;
};
"@MMK_L_x" = {
"@MMK_R_Aacute" = 16;
"@MMK_R_B" = -6;
"@MMK_R_T" = -102;
"@MMK_R_U" = -29;
"@MMK_R_Y" = -120;
"@MMK_R_c" = -5;
"@MMK_R_emdash" = -12;
};
"@MMK_L_y" = {
"@MMK_R_Aacute" = -45;
"@MMK_R_B" = -39;
"@MMK_R_T" = -113;
"@MMK_R_U" = -25;
"@MMK_R_Y" = -145;
"@MMK_R_backslash" = -45;
"@MMK_R_braceright" = -33;
"@MMK_R_bracketright" = -30;
"@MMK_R_comma" = -49;
"@MMK_R_emdash" = -12;
"@MMK_R_g" = -6;
"@MMK_R_l" = -14;
"@MMK_R_parenright" = -25;
"@MMK_R_q" = -6;
"@MMK_R_slash" = -24;
"@MMK_R_space" = -20;
"@MMK_R_y" = 16;
};
"@MMK_L_zero" = {
"@MMK_R_B" = -12;
};
A = {
Iogonek = 13;
apostrophemod = -53;
comma = 3;
f_f_h = 55;
five = 7;
iogonek = 6;
one = 39;
semicolon = 1;
seven = 70;
thorn = 24;
three = 28;
two = 51;
};
Aacute = {
Iogonek = 13;
comma = 3;
f_f_h = 55;
semicolon = 1;
thorn = 24;
};
Abreve = {
Iogonek = 13;
comma = 3;
f_f_h = 55;
semicolon = 1;
thorn = 24;
};
Acircumflex = {
Iogonek = 13;
comma = 3;
f_f_h = 55;
semicolon = 1;
thorn = 24;
};
Adieresis = {
Iogonek = 13;
comma = 3;
f_f_h = 55;
semicolon = 1;
thorn = 24;
};
Agrave = {
Iogonek = 13;
comma = 3;
f_f_h = 55;
semicolon = 1;
thorn = 24;
};
Amacron = {
Iogonek = 13;
comma = 3;
f_f_h = 55;
semicolon = 1;
thorn = 24;
};
Aogonek = {
Iogonek = 13;
comma = 3;
f_f_h = 55;
semicolon = 1;
thorn = 24;
};
Aring = {
Iogonek = 13;
comma = 3;
f_f_h = 55;
semicolon = 1;
thorn = 24;
};
Aringacute = {
Iogonek = 10;
comma = 1;
semicolon = 1;
space = -38;
thorn = 22;
};
Atilde = {
Iogonek = 13;
comma = 3;
f_f_h = 55;
semicolon = 1;
thorn = 24;
};
B = {
M = -10;
V = -23;
X = -31;
apostrophemod = -12;
braceright = -13;
bracketright = -15;
four = 9;
p = -6;
v = -25;
};
C = {
four = 16;
k = 15;
k.salt = 13;
kcommaaccent = 13;
lslash = 1;
};
Cacute = {
k = 15;
k.salt = 13;
};
Ccaron = {
k = 15;
k.salt = 13;
};
Ccedilla = {
k = 15;
k.salt = 13;
};
Ccircumflex = {
k = 15;
k.salt = 13;
};
Cdotaccent = {
k = 15;
k.salt = 13;
};
D = {
apostrophemod = -18;
};
Eng = {
k = 52;
k.salt = 50;
};
F = {
V = 22;
a.salt = -36;
ampersand = -12;
asterisk = 30;
at = -22;
braceright = 15;
bracketright = 10;
c.salt = -46;
four = -12;
germandbls = -12;
icircumflex = -6;
idieresis = 4;
k = 56;
k.salt = 54;
kcommaaccent = 54;
lslash = 40;
m = -24;
nine = 9;
p = -16;
q = -49;
registered = -21;
s.salt = -40;
schwa = -34;
slash = -38;
space = -25;
t_z = -12;
trademark = 9;
v = -26;
x = -20;
};
G = {
k = 5;
k.salt = 2;
kcommaaccent = 2;
};
Gbreve = {
k = 5;
k.salt = 2;
};
Gcircumflex = {
k = 5;
k.salt = 2;
};
Gcommaaccent = {
k = 5;
k.salt = 2;
};
Gdotaccent = {
k = 5;
k.salt = 2;
};
H = {
at = -17;
f_f_b = 37;
f_f_h = 13;
four = -21;
k = 36;
k.salt = 34;
kcommaaccent = 34;
lslash = 20;
one = 5;
schwa = -23;
seven = 24;
six = -18;
two = 14;
zero = -14;
};
Hbar = {
f_f_b = 34;
f_f_h = 11;
k = 33;
k.salt = 31;
};
Hcircumflex = {
f_f_b = 37;
f_f_h = 13;
k = 36;
k.salt = 34;
};
I = {
f_f_h = -8;
four = -16;
k = 27;
k.salt = 26;
kcommaaccent = 26;
lslash = 11;
schwa = -11;
seven = 9;
};
IJ = {
k = 35;
k.salt = 34;
};
Iacute = {
f_f_h = -8;
k = 27;
k.salt = 26;
};
Ibreve = {
f_f_h = -8;
k = 27;
k.salt = 26;
};
Icircumflex = {
f_f_h = -8;
k = 27;
k.salt = 26;
};
Idieresis = {
f_f_h = -8;
k = 27;
k.salt = 26;
};
Idotaccent = {
f_f_h = -8;
k = 27;
k.salt = 26;
};
Igrave = {
f_f_h = -8;
k = 27;
k.salt = 26;
};
Imacron = {
f_f_h = -8;
k = 27;
k.salt = 26;
};
Iogonek = {
f_f_h = -8;
j = 46;
k = 27;
k.salt = 26;
};
Itilde = {
f_f_h = -8;
k = 27;
k.salt = 26;
};
J = {
f_f_h = -6;
k = 34;
k.salt = 33;
kcommaaccent = 33;
lslash = 22;
schwa = -18;
};
Jcircumflex = {
f_f_h = -6;
k = 34;
k.salt = 33;
};
K = {
four = -34;
lslash = 50;
one = 23;
schwa = -44;
seven = 33;
three = 11;
two = 19;
};
K.salt = {
a.salt = -6;
asterisk = 26;
at = -12;
b = 73;
backslash = 11;
braceright = 13;
bracketright = 16;
c.salt = -24;
f_f_b = 8;
four = -27;
k = 60;
k.salt = 57;
kcommaaccent = 57;
lslash = 39;
one = 7;
p = -34;
q = -23;
registered = -17;
s.salt = -8;
schwa = -21;
six = -12;
thorn = 85;
trademark = 14;
v = -75;
};
L = {
apostrophemod = -57;
four = 23;
lslash = 13;
nine = -33;
};
Ldot = {
t_t = -6;
t_z = -6;
};
M = {
a.salt = -23;
ampersand = -14;
asterisk = 32;
at = -22;
backslash = 10;
braceright = 10;
bracketright = 14;
c.salt = -46;
f_f_b = 18;
f_f_h = 2;
four = -28;
k = 56;
k.salt = 54;
kcommaaccent = 54;
lslash = 33;
m = -9;
one = 22;
p = -30;
q = -42;
registered = -26;
s.salt = -19;
schwa = -28;
six = -21;
trademark = 18;
v = -72;
};
N = {
at = -27;
four = -19;
k = 53;
k.salt = 50;
kcommaaccent = 50;
lslash = 36;
schwa = -41;
six = -22;
zero = -15;
};
Nacute = {
k = 53;
k.salt = 50;
};
Ncaron = {
k = 53;
k.salt = 50;
};
Ncommaaccent = {
k = 53;
k.salt = 50;
};
Ndotaccent = {
k = 53;
k.salt = 50;
};
Ntilde = {
k = 53;
k.salt = 50;
};
P = {
X = -38;
a.salt = -21;
ampersand = -17;
asterisk = 32;
at = -24;
c.salt = -53;
four = -19;
hbar = 25;
icircumflex = 12;
idieresis = 13;
imacron = 15;
itilde = 30;
m = -37;
nine = 15;
q = -62;
registered = -20;
s.salt = -39;
schwa = -41;
slash = -48;
space = -25;
};
R = {
apostrophemod = -12;
f_f_b = 35;
f_f_h = 14;
f_f_i = 28;
four = -28;
lslash = 29;
one = 29;
schwa = -15;
seven = 50;
three = 19;
two = 37;
};
R.salt = {
V = -25;
apostrophemod = -18;
backslash = -18;
braceright = 7;
bracketright = 5;
c.salt = -24;
f_f_b = 34;
f_f_h = 7;
four = -23;
lslash = 11;
p = -12;
q = -23;
registered = -14;
schwa = -14;
seven = 20;
t_z = -23;
three = 8;
two = 8;
v = -47;
};
Racute = {
f_f_b = 35;
f_f_h = 14;
f_f_i = 28;
};
Rcaron = {
f_f_b = 35;
f_f_h = 14;
f_f_i = 28;
};
Rcommaaccent = {
f_f_b = 35;
f_f_h = 14;
f_f_i = 28;
};
S = {
itilde = 6;
k = 28;
k.salt = 26;
kcommaaccent = 26;
lslash = 13;
schwa = -7;
};
Sacute = {
k = 28;
k.salt = 26;
lslash = 13;
};
Scaron = {
k = 28;
k.salt = 26;
kcommaaccent = 26;
};
Scedilla = {
k = 28;
k.salt = 26;
};
Scircumflex = {
k = 28;
k.salt = 26;
};
Scommaaccent = {
k = 28;
k.salt = 26;
};
T = {
abreve = -95;
acircumflex = -81;
adieresis = -63;
amacron = -82;
at = -47;
atilde = -61;
ecaron = -109;
ecircumflex = -110;
edieresis = -85;
emacron = -107;
etilde = -73;
four = -44;
gbreve = -114;
gcircumflex = -110;
icircumflex = -5;
idieresis = 6;
idotless = -79;
imacron = 7;
iogonek = -78;
itilde = 13;
jcircumflex = -17;
k = 48;
k.salt = 47;
kcommaaccent = 47;
lslash = 33;
nine = 8;
odieresis = -96;
ohungarumlaut = -116;
otilde = -77;
rcaron = -52;
scaron = -62;
schwa = -109;
scircumflex = -72;
six = -20;
};
Tbar = {
k = 48;
k.salt = 47;
};
Tcaron = {
k = 48;
k.salt = 47;
};
Tcedilla = {
abreve = -96;
acircumflex = -82;
icircumflex = -6;
k = 47;
k.salt = 46;
};
Tcommaaccent = {
abreve = -96;
acircumflex = -82;
icircumflex = -6;
k = 47;
k.salt = 46;
};
Thorn = {
M = -19;
V = -27;
X = -69;
backslash = -20;
braceright = -24;
bracketright = -24;
c.salt = -5;
f_f_h = 6;
j = 7;
one = -21;
p = 9;
parenright = -20;
q = -7;
seven = -28;
slash = -27;
u = 10;
};
U = {
at = -23;
f_f_h = -12;
four = -12;
k = 26;
k.salt = 26;
kcommaaccent = 26;
one = 9;
schwa = -30;
six = -17;
thorn = 41;
};
Uacute = {
f_f_h = -12;
k = 26;
k.salt = 26;
thorn = 41;
};
Ubreve = {
f_f_h = -12;
k = 26;
k.salt = 26;
thorn = 41;
};
Ucircumflex = {
f_f_h = -12;
k = 26;
k.salt = 26;
thorn = 41;
};
Udieresis = {
f_f_h = -12;
k = 26;
k.salt = 26;
thorn = 41;
};
Ugrave = {
f_f_h = -12;
k = 26;
k.salt = 26;
thorn = 41;
};
Uhungarumlaut = {
f_f_h = -12;
k = 26;
k.salt = 26;
thorn = 41;
};
Umacron = {
f_f_h = -12;
k = 26;
k.salt = 26;
kcommaaccent = 26;
thorn = 41;
};
Uogonek = {
f_f_h = -12;
k = 26;
k.salt = 26;
thorn = 41;
};
Uring = {
f_f_h = -12;
k = 26;
k.salt = 26;
thorn = 41;
};
Utilde = {
f_f_h = -12;
k = 26;
k.salt = 26;
thorn = 41;
};
V = {
a.salt = -91;
aringacute = -89;
asterisk = 77;
at = -48;
b = 28;
backslash = 46;
braceright = 32;
bracketright = 35;
c.salt = -108;
eight = 12;
eth = -102;
five = 5;
four = -32;
germandbls = -10;
idotless = -64;
iogonek = -64;
k = 90;
k.salt = 92;
kcommaaccent = 92;
m = -66;
nine = 38;
one = 45;
p = -58;
parenright = 24;
q = -112;
question = 29;
registered = -47;
s.salt = -102;
schwa = -91;
seven = 45;
six = -17;
slash = -51;
space = -27;
thorn = 76;
three = 14;
trademark = 73;
two = 22;
v = -74;
x = -56;
};
W = {
aringacute = -98;
at = -50;
eight = 7;
eth = -99;
four = -33;
idotless = -68;
iogonek = -68;
k = 11;
k.salt = 7;
kcommaaccent = 10;
nine = 33;
one = 37;
schwa = -94;
seven = 37;
six = -19;
thorn = 30;
three = 11;
two = 19;
};
Wacute = {
eth = -99;
k = 12;
k.salt = 7;
thorn = 30;
};
Wcircumflex = {
eth = -99;
k = 12;
k.salt = 7;
thorn = 30;
};
Wdieresis = {
eth = -99;
k = 12;
k.salt = 7;
thorn = 30;
};
Wgrave = {
eth = -99;
k = 12;
k.salt = 7;
thorn = 30;
};
X = {
backslash = 5;
braceright = 48;
bracketright = 47;
c.salt = -18;
f_f_b = 50;
f_f_h = 16;
f_f_i = 31;
four = -23;
k = 48;
k.salt = 48;
kcommaaccent = 48;
lslash = 39;
one = 37;
parenright = 38;
q = -11;
quotedblbase = 3;
quotesinglbase = 3;
schwa = -16;
seven = 59;
slash = 38;
three = 26;
trademark = 8;
two = 45;
v = -101;
};
Y = {
aringacute = -106;
at = -53;
eth = -104;
f_f_h = -40;
four = -47;
idotless = -99;
iogonek = -98;
k = 68;
k.salt = 82;
kcommaaccent = 82;
nine = 28;
one = 45;
schwa = -123;
seven = 39;
six = -24;
t_z = -95;
thorn = 125;
three = 6;
two = 13;
};
Yacute = {
eth = -104;
f_f_h = -40;
k = 68;
k.salt = 82;
t_z = -95;
thorn = 125;
};
Ycircumflex = {
eth = -104;
f_f_h = -40;
k = 68;
k.salt = 82;
t_z = -95;
thorn = 125;
};
Ydieresis = {
eth = -104;
f_f_h = -40;
k = 68;
k.salt = 82;
t_z = -95;
thorn = 125;
};
Ygrave = {
eth = -104;
k = 68;
k.salt = 82;
thorn = 125;
};
Ytilde = {
eth = -104;
k = 68;
k.salt = 82;
thorn = 125;
};
Z = {
four = 8;
k = 15;
k.salt = 14;
kcommaaccent = 14;
lslash = 7;
};
Zacute = {
k = 15;
k.salt = 14;
};
Zcaron = {
k = 15;
k.salt = 14;
};
Zdotaccent = {
k = 15;
k.salt = 14;
lslash = 7;
};
a = {
AE = 62;
J = 20;
V = -111;
W = -126;
X = 5;
Z = 8;
lslash = 41;
};
a.salt = {
apostrophemod = -15;
backslash = -61;
lslash = 25;
parenright = 7;
question = -16;
slash = 9;
trademark = -13;
v = -33;
};
ampersand = {
H = 1;
Hbar = 1;
Hcircumflex = 1;
K = 3;
K.salt = 26;
Kcommaaccent = 3;
L = 29;
Lacute = 29;
Lcaron = 29;
Lcommaaccent = 29;
Lslash = 22;
V = -56;
X = 72;
a.salt = 6;
f = 42;
germandbls = 58;
lslash = 47;
m = 24;
quoteright = -44;
s.salt = 9;
v = -27;
x = 37;
};
aogonek = {
g = 42;
g.salt = 42;
j = 187;
lslash = 41;
p = 20;
thorn = 16;
};
apostrophemod = {
a = -16;
a.salt = -10;
c.salt = -23;
d = -33;
j = -11;
q = -20;
s = -16;
s.salt = -15;
};
asterisk = {
X = 23;
c.salt = -13;
k = 17;
q = -10;
};
at = {
M = -16;
T = -50;
U = -19;
V = -49;
W = -54;
Y = -61;
Z = -14;
quoteright = -16;
};
b = {
apostrophemod = -61;
};
backslash = {
V = -57;
X = 26;
germandbls = 13;
lslash = 10;
nine = -23;
quoteright = -53;
seven = 10;
v = -29;
};
braceleft = {
V = 43;
X = 19;
c.salt = -15;
four = -21;
k = 38;
k.salt = 37;
kcommaaccent = 37;
lslash = 31;
one = 10;
parenleft = -14;
q = -12;
seven = 18;
six = -18;
two = 5;
v = -30;
zero = -15;
};
bracketleft = {
V = 43;
X = 20;
c.salt = -14;
four = -23;
germandbls = 7;
k = 39;
k.salt = 38;
kcommaaccent = 38;
lslash = 32;
one = 7;
parenleft = -15;
q = -12;
seven = 17;
six = -19;
v = -28;
zero = -16;
};
c = {
M = -14;
V = -91;
W = -93;
};
c.salt = {
apostrophemod = -12;
backslash = -52;
question = -13;
trademark = -11;
};
c_k = {
y = 1;
yacute = 1;
ycircumflex = 1;
ydieresis = 1;
};
ccedilla = {
j = 73;
};
comma = {
j = 49;
jcircumflex = 49;
};
d = {
AE = 62;
V = -10;
W = -7;
Z = 12;
lslash = 42;
quotedblbase = 1;
quotesinglbase = 1;
};
dcaron = {
asterisk = 75;
backslash = 80;
bar = 15;
braceright = 86;
bracketright = 88;
exclam = 15;
parenright = 50;
question = 28;
quotedbl = 62;
quotedblbase = 1;
quotedblleft = 67;
quotedblright = 62;
quoteleft = 67;
quoteright = 62;
quotesinglbase = 1;
quotesingle = 62;
trademark = 79;
};
dcroat = {
question = 11;
quotedblbase = 1;
quotesinglbase = 1;
};
degree = {
four = -41;
six = -17;
};
e = {
apostrophemod = -19;
};
eng = {
backslash = -60;
question = -19;
trademark = -15;
v = -19;
w = -23;
};
eth = {
M = -11;
U = -22;
V = -66;
W = -59;
X = -6;
Y = -53;
Z = -16;
};
exclamdown = {
V = -22;
};
f = {
AE = 45;
D = 87;
E = 84;
Eth = 85;
Etilde = 84;
F = 84;
H = 85;
K = 85;
M = 99;
N = 86;
P = 85;
R = 84;
S = 70;
Thorn = 85;
V = 149;
W = 135;
X = 122;
Z = 107;
ampersand = 20;
apostrophemod = 30;
asterisk = 156;
backslash = 113;
bar = 72;
braceright = 100;
bracketright = 103;
exclam = 73;
icircumflex = 26;
igrave = 57;
jcircumflex = 23;
lslash = 23;
parenright = 73;
question = 113;
slash = 10;
space = 34;
trademark = 135;
};
f_f = {
icircumflex = 26;
igrave = 57;
jcircumflex = 23;
lslash = 23;
napostrophe = 196;
};
f_f_i = {
napostrophe = 6;
};
f_f_j = {
b = 15;
h = 6;
hbar = 6;
hcircumflex = 6;
napostrophe = 44;
thorn = 19;
};
f_f_k = {
y = 1;
yacute = 1;
ycircumflex = 1;
ydieresis = 1;
};
f_f_l = {
napostrophe = 8;
};
f_i = {
napostrophe = 6;
};
f_j = {
b = 16;
h = 6;
hbar = 6;
hcircumflex = 6;
napostrophe = 44;
thorn = 18;
};
f_k = {
y = 1;
yacute = 1;
ycircumflex = 1;
ydieresis = 1;
};
f_l = {
c.salt = -6;
q = -6;
v = -15;
};
f_t = {
napostrophe = 20;
};
five = {
AE = -14;
four = 25;
};
four = {
A = 13;
AE = 18;
four = 16;
};
fraction = {
four = -22;
nine = 15;
one = -18;
seven = -20;
six = -13;
};
g = {
AE = 45;
Eth = -7;
V = -75;
W = -78;
Z = 9;
apostrophemod = -12;
f_b = 18;
f_f_b = 14;
f_f_i = 15;
f_f_j = 11;
f_f_k = 11;
f_h = 20;
f_i = 19;
f_j = 18;
f_k = 20;
f_l = 17;
f_t = 18;
icircumflex = 10;
idieresis = 11;
itilde = 18;
lslash = 34;
quotedblbase = 15;
quotesinglbase = 15;
};
g.salt = {
backslash = -34;
braceright = 36;
bracketright = 33;
c.salt = -10;
lslash = 17;
parenright = 13;
q = -9;
slash = 9;
t_z = 1;
v = 5;
};
gbreve = {
f_b = 18;
f_f_b = 14;
f_f_i = 15;
f_f_j = 11;
f_f_k = 11;
f_h = 20;
f_i = 19;
f_j = 18;
f_k = 20;
f_l = 17;
f_t = 18;
idieresis = 11;
quotedblbase = 15;
quotesinglbase = 15;
};
gcircumflex = {
f_b = 18;
f_f_b = 14;
f_f_i = 15;
f_f_j = 11;
f_f_k = 11;
f_h = 20;
f_i = 19;
f_j = 18;
f_k = 20;
f_l = 17;
f_t = 18;
quotedblbase = 15;
quotesinglbase = 15;
};
gcommaaccent = {
f_b = 18;
f_f_b = 14;
f_f_i = 15;
f_f_j = 11;
f_f_k = 11;
f_h = 20;
f_i = 19;
f_j = 18;
f_k = 20;
f_l = 17;
f_t = 18;
imacron = 12;
quotedblbase = 15;
quotesinglbase = 15;
};
gdotaccent = {
f_b = 18;
f_f_b = 14;
f_f_i = 15;
f_f_j = 11;
f_f_k = 11;
f_h = 20;
f_i = 19;
f_j = 18;
f_k = 20;
f_l = 17;
f_t = 18;
quotedblbase = 15;
quotesinglbase = 15;
};
germandbls = {
AE = 7;
M = -12;
U = -33;
V = -89;
W = -91;
Y = -90;
backslash = -31;
p = -13;
question = -20;
space = -18;
v = -62;
};
h = {
AE = 16;
V = -150;
W = -168;
apostrophemod = -54;
};
i = {
AE = 57;
V = -88;
W = -95;
lslash = 33;
};
idieresis = {
question = 18;
};
idotless = {
parenright = 17;
};
iogonek = {
j = 97;
};
itilde = {
question = 30;
};
j = {
apostrophemod = -10;
};
k = {
AE = 31;
V = -76;
W = -83;
apostrophemod = -46;
asterisk = -19;
backslash = -32;
lslash = 7;
schwa = -7;
};
k.salt = {
apostrophemod = -63;
schwa = -14;
};
l = {
AE = 55;
V = -13;
W = -16;
lslash = 30;
periodcentered = -53;
};
l_l = {
napostrophe = 6;
v = -7;
};
lcaron = {
asterisk = 65;
b = 151;
backslash = 70;
braceright = 75;
bracketright = 77;
h = 135;
k = 125;
k.salt = 123;
l = 117;
l_l = 117;
parenright = 40;
question = 19;
quotedbl = 51;
quotedblleft = 57;
quotedblright = 51;
quoteleft = 57;
quoteright = 51;
quotesingle = 51;
thorn = 151;
trademark = 68;
};
ldot = {
f_b = 7;
f_h = 8;
f_i = 8;
f_j = 7;
f_k = 8;
f_l = 9;
f_t = 7;
t_t = 20;
t_z = 22;
};
lslash = {
a.salt = 14;
f = 34;
f_b = 38;
f_f = 58;
f_f_b = 63;
f_f_h = 62;
f_f_i = 65;
f_f_j = 65;
f_f_k = 65;
f_f_l = 58;
f_h = 41;
f_i = 39;
f_j = 38;
f_k = 55;
f_l = 37;
f_t = 52;
germandbls = 39;
guillemetright = 13;
guilsinglright = 13;
h = 36;
i = 13;
ij = 13;
j = 18;
k = 38;
k.salt = 36;
l = 39;
l_l = 39;
lslash = 31;
m = 6;
n = 23;
p = 23;
question = 32;
r = 24;
t = 41;
t_t = 41;
t_z = 12;
u = 51;
v = 28;
w = 33;
x = 26;
y = 12;
z = 7;
zacute = 7;
zdotaccent = 7;
};
m = {
AE = 60;
V = -138;
W = -155;
apostrophemod = -12;
backslash = -63;
braceright = 18;
bracketright = 18;
lslash = 35;
parenright = 19;
question = -14;
slash = 23;
trademark = -11;
v = -41;
};
minus = {
seven = -17;
};
n = {
AE = 54;
V = -141;
W = -158;
apostrophemod = -14;
lslash = 33;
};
nine = {
A = -33;
AE = -53;
J = -19;
braceright = -13;
bracketright = -13;
fraction = -31;
parenright = -12;
seven = -14;
slash = -34;
};
numbersign = {
one = -19;
seven = -22;
};
o = {
AE = -7;
M = -20;
V = -113;
W = -125;
X = -10;
Z = -18;
apostrophemod = -21;
};
one = {
A = 39;
AE = 43;
U = -13;
X = 18;
cent = -15;
fraction = 9;
seven = 8;
};
p = {
AE = -5;
M = -16;
V = -110;
W = -121;
X = -10;
Z = -17;
apostrophemod = -17;
backslash = -59;
braceright = -14;
bracketright = -14;
question = -21;
trademark = -16;
};
parenleft = {
V = 30;
X = 6;
c.salt = -17;
four = -16;
k = 34;
k.salt = 33;
kcommaaccent = 33;
lslash = 20;
q = -16;
six = -13;
v = -24;
};
parenright = {
braceright = -13;
bracketright = -14;
};
periodcentered = {
L = -10;
l = -53;
one = -12;
seven = -14;
};
plus = {
seven = -17;
};
q = {
M = -6;
V = -68;
W = -79;
Z = -9;
backslash = -35;
lslash = 7;
thorn = 20;
};
questiondown = {
V = -44;
X = 18;
germandbls = 6;
lslash = 1;
v = -21;
};
quotedbl = {
k = 26;
k.salt = 23;
kcommaaccent = 23;
lslash = 10;
};
quotedblbase = {
A = 8;
AE = 11;
AEacute = 11;
Aacute = 8;
Abreve = 8;
Acircumflex = 8;
Adieresis = 8;
Agrave = 8;
Amacron = 8;
Aogonek = 8;
Aring = 8;
Aringacute = 5;
Atilde = 8;
j = 45;
jcircumflex = 45;
};
quotedblleft = {
k = 29;
k.salt = 27;
kcommaaccent = 27;
lslash = 14;
};
quotedblright = {
k = 30;
k.salt = 28;
kcommaaccent = 28;
lslash = 17;
};
quoteleft = {
k = 29;
k.salt = 27;
kcommaaccent = 27;
lslash = 14;
};
quoteright = {
at = -19;
k = 30;
k.salt = 28;
kcommaaccent = 28;
lslash = 17;
registered = -18;
slash = -54;
space = -30;
};
quotesinglbase = {
A = 8;
AE = 11;
AEacute = 11;
Aacute = 8;
Abreve = 8;
Acircumflex = 8;
Adieresis = 8;
Agrave = 8;
Amacron = 8;
Aogonek = 8;
Aring = 8;
Aringacute = 5;
Atilde = 8;
j = 45;
jcircumflex = 45;
};
quotesingle = {
k = 27;
k.salt = 24;
kcommaaccent = 24;
lslash = 10;
};
r = {
AE = -7;
M = -22;
S = -8;
V = -89;
W = -100;
X = -16;
Z = -24;
};
registered = {
M = -15;
V = -47;
quoteright = -14;
};
s = {
M = -16;
V = -89;
W = -99;
Z = -5;
};
s.salt = {
backslash = -45;
};
semicolon = {
j = 38;
jcircumflex = 38;
};
seven = {
A = -57;
AE = -83;
B = 12;
D = 11;
E = 12;
Eth = 10;
F = 12;
H = 14;
J = -44;
K = 15;
K.salt = 14;
L = 17;
M = 20;
N = 19;
P = 11;
R = 11;
R.salt = 10;
T = 40;
Thorn = 11;
U = 37;
V = 76;
W = 84;
X = 45;
Y = 82;
backslash = 32;
braceright = 36;
bracketright = 38;
cent = -26;
degree = 13;
four = -45;
fraction = -70;
hyphen = -36;
minus = -14;
numbersign = -41;
one = 32;
periodcentered = -20;
seven = 16;
six = -31;
slash = -71;
};
six = {
A = 15;
AE = 15;
J = 24;
T = -30;
V = -15;
W = -13;
Y = -14;
backslash = -23;
four = 30;
nine = -20;
};
slash = {
V = 36;
a.salt = -49;
c.salt = -61;
f = -13;
four = -47;
k = 39;
k.salt = 38;
kcommaaccent = 38;
lslash = 27;
m = -36;
p = -25;
q = -62;
s.salt = -57;
six = -34;
slash = -203;
v = -33;
x = -22;
};
space = {
Aringacute = -39;
V = -31;
quoteright = -30;
v = -23;
};
t = {
AE = 5;
M = -11;
V = -84;
W = -86;
apostrophemod = -31;
};
t_t = {
c.salt = -6;
q = -5;
};
tcaron = {
f_f = 16;
f_f_b = 13;
f_f_h = 20;
f_f_i = 16;
f_f_j = 17;
f_f_k = 17;
f_f_l = 16;
f_k = 7;
i = 8;
iacute = 8;
ij = 8;
j = 17;
m = 8;
n = 11;
ncaron = 11;
p = 20;
r = 13;
t = 19;
t_t = 19;
t_z = 16;
tcaron = 19;
u = 23;
uacute = 23;
uring = 23;
v = 8;
x = 12;
y = 13;
yacute = 13;
};
three = {
AE = -24;
Y = 17;
four = 8;
};
trademark = {
M = 15;
V = 51;
X = 38;
c.salt = -13;
icircumflex = 12;
idieresis = 13;
imacron = 17;
itilde = 23;
k = 59;
k.salt = 58;
kcommaaccent = 58;
lslash = 41;
p = 7;
q = -10;
};
two = {
A = 12;
AE = 14;
J = 17;
};
u = {
AE = 58;
V = -124;
W = -138;
lslash = 33;
};
uogonek = {
j = 122;
};
v = {
AE = -67;
J = -23;
M = -21;
S = -11;
V = -71;
W = -74;
X = -50;
Z = -37;
backslash = -34;
braceright = -33;
bracketright = -27;
f_f_b = 1;
f_f_i = 1;
m = 13;
p = 24;
parenright = -22;
slash = -26;
space = -21;
v = 7;
x = 18;
};
w = {
AE = -72;
J = -21;
M = -20;
S = -11;
V = -76;
W = -78;
X = -54;
Z = -38;
};
x = {
AE = 19;
M = -10;
V = -97;
W = -105;
backslash = -54;
c.salt = -5;
lslash = 6;
q = -6;
question = -15;
};
y = {
AE = -70;
J = -22;
M = -36;
S = -25;
V = -91;
W = -93;
X = -60;
Z = -52;
lslash = -7;
};
z = {
M = -16;
V = -98;
W = -109;
};
zero = {
AE = -20;
braceright = -15;
bracketright = -16;
};
};
m01 = {
"@MMK_L_AE" = {
"@MMK_R_b" = 22;
"@MMK_R_p" = -5;
"@MMK_R_u" = -5;
"@MMK_R_v" = -15;
"@MMK_R_w" = -17;
"@MMK_R_y" = -11;
};
"@MMK_L_Aacute" = {
"@MMK_R_C" = -24;
"@MMK_R_T" = -37;
"@MMK_R_U" = -38;
"@MMK_R_V" = -93;
"@MMK_R_W" = -100;
"@MMK_R_Y" = -85;
"@MMK_R_a" = -9;
"@MMK_R_a.salt" = -10;
"@MMK_R_asterisk" = -21;
"@MMK_R_backslash" = -53;
"@MMK_R_braceright" = 61;
"@MMK_R_bracketright" = 60;
"@MMK_R_c" = -27;
"@MMK_R_c.salt" = -28;
"@MMK_R_d" = -25;
"@MMK_R_g" = 17;
"@MMK_R_parenright" = 7;
"@MMK_R_q" = -14;
"@MMK_R_quotedbl" = -24;
"@MMK_R_quotedblleft" = -26;
"@MMK_R_quoteright" = -24;
"@MMK_R_space" = -28;
"@MMK_R_t" = -24;
"@MMK_R_trademark" = -20;
"@MMK_R_u" = -32;
"@MMK_R_v" = -50;
"@MMK_R_w" = -63;
"@MMK_R_y" = -21;
};
"@MMK_L_B" = {
"@MMK_R_AE" = -26;
"@MMK_R_Aacute" = -9;
"@MMK_R_B" = -14;
"@MMK_R_U" = -16;
"@MMK_R_W" = -15;
"@MMK_R_Y" = -17;
"@MMK_R_dotlessi" = -7;
"@MMK_R_dotlessj" = -8;
"@MMK_R_eng" = -7;
"@MMK_R_f" = -10;
"@MMK_R_f_f" = -11;
"@MMK_R_g" = -8;
"@MMK_R_l" = -6;
"@MMK_R_r" = -7;
"@MMK_R_u" = -6;
"@MMK_R_w" = -20;
"@MMK_R_y" = -17;
};
"@MMK_L_C" = {
"@MMK_R_AE" = -19;
"@MMK_R_b" = 51;
"@MMK_R_g" = -14;
"@MMK_R_y" = -12;
"@MMK_R_z" = -6;
};
"@MMK_L_D" = {
"@MMK_R_AE" = -54;
"@MMK_R_Aacute" = -32;
"@MMK_R_B" = -17;
"@MMK_R_J" = -8;
"@MMK_R_M" = -16;
"@MMK_R_U" = -19;
"@MMK_R_V" = -21;
"@MMK_R_W" = -21;
"@MMK_R_X" = -35;
"@MMK_R_Y" = -38;
"@MMK_R_Z" = -6;
"@MMK_R_a" = -9;
"@MMK_R_a.salt" = -5;
"@MMK_R_backslash" = -13;
"@MMK_R_braceright" = -23;
"@MMK_R_bracketright" = -24;
"@MMK_R_c" = -6;
"@MMK_R_c.salt" = -6;
"@MMK_R_comma" = -23;
"@MMK_R_d" = -6;
"@MMK_R_g" = -17;
"@MMK_R_germandbls" = -12;
"@MMK_R_l" = -12;
"@MMK_R_one" = -19;
"@MMK_R_parenright" = -16;
"@MMK_R_q" = -8;
"@MMK_R_s" = -8;
"@MMK_R_s.salt" = -5;
"@MMK_R_seven" = -20;
"@MMK_R_slash" = -22;
};
"@MMK_L_Eng" = {
"@MMK_R_AE" = -14;
"@MMK_R_C" = -11;
"@MMK_R_J" = -17;
"@MMK_R_S" = -11;
"@MMK_R_a" = -29;
"@MMK_R_a.salt" = -30;
"@MMK_R_ampersand" = -17;
"@MMK_R_b" = 91;
"@MMK_R_c" = -26;
"@MMK_R_c.salt" = -25;
"@MMK_R_comma" = -12;
"@MMK_R_d" = -23;
"@MMK_R_dotlessi" = -14;
"@MMK_R_dotlessj" = -13;
"@MMK_R_emdash" = -12;
"@MMK_R_eng" = -13;
"@MMK_R_f" = -16;
"@MMK_R_f_f" = -20;
"@MMK_R_g" = -34;
"@MMK_R_germandbls" = 42;
"@MMK_R_l" = 37;
"@MMK_R_m" = -14;
"@MMK_R_p" = -15;
"@MMK_R_q" = -24;
"@MMK_R_r" = -13;
"@MMK_R_registered" = -23;
"@MMK_R_s" = -24;
"@MMK_R_s.salt" = -19;
"@MMK_R_slash" = -17;
"@MMK_R_t" = -12;
"@MMK_R_u" = -13;
"@MMK_R_v" = -19;
"@MMK_R_w" = -22;
"@MMK_R_x" = -11;
"@MMK_R_y" = -20;
"@MMK_R_z" = -30;
};
"@MMK_L_F" = {
"@MMK_R_AE" = -70;
"@MMK_R_Aacute" = -67;
"@MMK_R_J" = -53;
"@MMK_R_W" = 33;
"@MMK_R_Y" = 25;
"@MMK_R_a" = -54;
"@MMK_R_b" = 93;
"@MMK_R_c" = -47;
"@MMK_R_comma" = -39;
"@MMK_R_d" = -46;
"@MMK_R_dotlessi" = -16;
"@MMK_R_emdash" = -11;
"@MMK_R_eng" = -27;
"@MMK_R_f" = -18;
"@MMK_R_f_f" = -15;
"@MMK_R_g" = -69;
"@MMK_R_germandbls" = 43;
"@MMK_R_l" = 41;
"@MMK_R_r" = -25;
"@MMK_R_s" = -50;
"@MMK_R_u" = -26;
"@MMK_R_w" = -29;
"@MMK_R_y" = -34;
"@MMK_R_z" = -37;
};
"@MMK_L_G" = {
"@MMK_R_b" = 40;
"@MMK_R_g" = -9;
"@MMK_R_y" = -14;
};
"@MMK_L_H" = {
"@MMK_R_C" = -15;
"@MMK_R_J" = -10;
"@MMK_R_a" = -15;
"@MMK_R_a.salt" = -16;
"@MMK_R_ampersand" = -15;
"@MMK_R_b" = 76;
"@MMK_R_braceright" = 10;
"@MMK_R_bracketright" = 9;
"@MMK_R_c" = -29;
"@MMK_R_c.salt" = -29;
"@MMK_R_d" = -26;
"@MMK_R_dotlessi" = -7;
"@MMK_R_dotlessj" = -13;
"@MMK_R_emdash" = -16;
"@MMK_R_eng" = -11;
"@MMK_R_g" = -5;
"@MMK_R_germandbls" = 27;
"@MMK_R_guillemotleft" = -11;
"@MMK_R_l" = 25;
"@MMK_R_m" = -6;
"@MMK_R_p" = -15;
"@MMK_R_q" = -26;
"@MMK_R_r" = -6;
"@MMK_R_registered" = -19;
"@MMK_R_s.salt" = -15;
"@MMK_R_t" = -15;
"@MMK_R_u" = -20;
"@MMK_R_v" = -27;
"@MMK_R_w" = -32;
"@MMK_R_y" = -24;
"@MMK_R_z" = -6;
};
"@MMK_L_I" = {
"@MMK_R_AE" = 32;
"@MMK_R_C" = -12;
"@MMK_R_b" = 71;
"@MMK_R_c" = -23;
"@MMK_R_c.salt" = -23;
"@MMK_R_d" = -21;
"@MMK_R_dotlessj" = -12;
"@MMK_R_emdash" = -13;
"@MMK_R_g" = -23;
"@MMK_R_germandbls" = 23;
"@MMK_R_l" = 20;
"@MMK_R_p" = -14;
"@MMK_R_q" = -21;
"@MMK_R_t" = -12;
"@MMK_R_u" = -12;
"@MMK_R_v" = -20;
"@MMK_R_w" = -22;
"@MMK_R_y" = -22;
};
"@MMK_L_IJ" = {
"@MMK_R_AE" = -38;
"@MMK_R_Aacute" = -23;
"@MMK_R_C" = -12;
"@MMK_R_J" = -21;
"@MMK_R_S" = -13;
"@MMK_R_a" = -33;
"@MMK_R_a.salt" = -31;
"@MMK_R_ampersand" = -17;
"@MMK_R_at" = -21;
"@MMK_R_b" = 91;
"@MMK_R_braceright" = 15;
"@MMK_R_bracketright" = 14;
"@MMK_R_c" = -29;
"@MMK_R_c.salt" = -28;
"@MMK_R_comma" = -21;
"@MMK_R_d" = -26;
"@MMK_R_dotlessi" = -12;
"@MMK_R_dotlessj" = -12;
"@MMK_R_emdash" = -10;
"@MMK_R_eng" = -12;
"@MMK_R_f" = -17;
"@MMK_R_g" = -33;
"@MMK_R_germandbls" = 41;
"@MMK_R_l" = 41;
"@MMK_R_m" = -13;
"@MMK_R_p" = -14;
"@MMK_R_q" = -27;
"@MMK_R_r" = -12;
"@MMK_R_registered" = -21;
"@MMK_R_s" = -27;
"@MMK_R_s.salt" = -22;
"@MMK_R_six" = -17;
"@MMK_R_slash" = -28;
"@MMK_R_t" = -12;
"@MMK_R_three" = -12;
"@MMK_R_u" = -12;
"@MMK_R_v" = -18;
"@MMK_R_w" = -21;
"@MMK_R_x" = -11;
"@MMK_R_y" = -21;
"@MMK_R_z" = -33;
};
"@MMK_L_K" = {
"@MMK_R_C" = -46;
"@MMK_R_a" = -12;
"@MMK_R_a.salt" = -13;
"@MMK_R_asterisk" = 15;
"@MMK_R_b" = 105;
"@MMK_R_backslash" = 22;
"@MMK_R_braceright" = 20;
"@MMK_R_bracketright" = 20;
"@MMK_R_c" = -54;
"@MMK_R_c.salt" = -56;
"@MMK_R_d" = -50;
"@MMK_R_dotlessj" = -30;
"@MMK_R_emdash" = -48;
"@MMK_R_eng" = -13;
"@MMK_R_g" = -6;
"@MMK_R_germandbls" = 52;
"@MMK_R_guillemotleft" = -49;
"@MMK_R_guillemotright" = -38;
"@MMK_R_l" = 43;
"@MMK_R_p" = -37;
"@MMK_R_parenright" = 6;
"@MMK_R_q" = -43;
"@MMK_R_quoteright" = 13;
"@MMK_R_slash" = 10;
"@MMK_R_t" = -54;
"@MMK_R_trademark" = 24;
"@MMK_R_u" = -81;
"@MMK_R_v" = -155;
"@MMK_R_w" = -172;
"@MMK_R_y" = -98;
};
"@MMK_L_K.salt" = {
"@MMK_R_AE" = 9;
"@MMK_R_C" = -25;
"@MMK_R_b" = 89;
"@MMK_R_c" = -24;
"@MMK_R_d" = -23;
"@MMK_R_dotlessj" = -40;
"@MMK_R_emdash" = -27;
"@MMK_R_g" = -20;
"@MMK_R_germandbls" = 44;
"@MMK_R_guillemotleft" = -27;
"@MMK_R_guillemotright" = -18;
"@MMK_R_l" = 32;
"@MMK_R_quoteright" = 5;
"@MMK_R_s" = -5;
"@MMK_R_t" = -28;
"@MMK_R_u" = -51;
"@MMK_R_w" = -83;
"@MMK_R_y" = -65;
};
"@MMK_L_L" = {
"@MMK_R_AE" = 6;
"@MMK_R_Aacute" = 16;
"@MMK_R_T" = -57;
"@MMK_R_U" = -25;
"@MMK_R_V" = -49;
"@MMK_R_W" = -51;
"@MMK_R_Y" = -58;
"@MMK_R_asterisk" = -40;
"@MMK_R_backslash" = -52;
"@MMK_R_dotlessj" = -13;
"@MMK_R_f_f" = -6;
"@MMK_R_p" = -16;
"@MMK_R_question" = -24;
"@MMK_R_quotedbl" = -35;
"@MMK_R_quotedblleft" = -33;
"@MMK_R_quoteright" = -34;
"@MMK_R_space" = -23;
"@MMK_R_trademark" = -34;
"@MMK_R_u" = -11;
"@MMK_R_v" = -39;
"@MMK_R_w" = -36;
"@MMK_R_y" = -38;
periodcentered.loclCAT.case = -220;
};
"@MMK_L_M" = {
"@MMK_R_C" = -19;
"@MMK_R_J" = -16;
"@MMK_R_a" = -24;
"@MMK_R_c" = -41;
"@MMK_R_d" = -39;
"@MMK_R_dotlessi" = -11;
"@MMK_R_dotlessj" = -25;
"@MMK_R_emdash" = -19;
"@MMK_R_eng" = -12;
"@MMK_R_f" = -7;
"@MMK_R_g" = -28;
"@MMK_R_guillemotleft" = -14;
"@MMK_R_r" = -11;
"@MMK_R_s" = -11;
"@MMK_R_t" = -34;
"@MMK_R_u" = -40;
"@MMK_R_w" = -52;
"@MMK_R_y" = -35;
"@MMK_R_z" = -12;
};
"@MMK_L_O" = {
"@MMK_R_AE" = -28;
"@MMK_R_Aacute" = -12;
"@MMK_R_B" = -11;
"@MMK_R_M" = -11;
"@MMK_R_U" = -14;
"@MMK_R_V" = -17;
"@MMK_R_W" = -15;
"@MMK_R_X" = -28;
"@MMK_R_Y" = -17;
"@MMK_R_a" = -6;
"@MMK_R_apostrophe" = -17;
"@MMK_R_braceright" = -19;
"@MMK_R_bracketright" = -21;
"@MMK_R_comma" = -16;
"@MMK_R_g" = -9;
"@MMK_R_germandbls" = -6;
"@MMK_R_l" = -6;
"@MMK_R_one" = -14;
"@MMK_R_parenright" = -12;
"@MMK_R_q" = -5;
"@MMK_R_s" = -6;
"@MMK_R_seven" = -14;
"@MMK_R_slash" = -15;
};
"@MMK_L_P" = {
"@MMK_R_AE" = -80;
"@MMK_R_Aacute" = -73;
"@MMK_R_B" = -5;
"@MMK_R_J" = -62;
"@MMK_R_a" = -51;
"@MMK_R_b" = 16;
"@MMK_R_c" = -58;
"@MMK_R_comma" = -51;
"@MMK_R_d" = -55;
"@MMK_R_emdash" = -37;
"@MMK_R_g" = -72;
"@MMK_R_s" = -49;
"@MMK_R_y" = -13;
"@MMK_R_z" = -41;
};
"@MMK_L_R" = {
"@MMK_R_C" = -6;
"@MMK_R_J" = -5;
"@MMK_R_U" = -19;
"@MMK_R_V" = -29;
"@MMK_R_W" = -31;
"@MMK_R_Y" = -38;
"@MMK_R_ampersand" = -12;
"@MMK_R_braceright" = 34;
"@MMK_R_bracketright" = 34;
"@MMK_R_c" = -35;
"@MMK_R_c.salt" = -38;
"@MMK_R_d" = -33;
"@MMK_R_dotlessj" = -5;
"@MMK_R_emdash" = -51;
"@MMK_R_p" = -12;
"@MMK_R_parenright" = 21;
"@MMK_R_q" = -25;
"@MMK_R_slash" = 24;
"@MMK_R_space" = -26;
"@MMK_R_t" = -14;
"@MMK_R_u" = -17;
"@MMK_R_v" = -37;
"@MMK_R_w" = -42;
"@MMK_R_y" = -29;
};
"@MMK_L_R.salt" = {
"@MMK_R_AE" = 33;
"@MMK_R_C" = -15;
"@MMK_R_U" = -25;
"@MMK_R_W" = -25;
"@MMK_R_Y" = -19;
"@MMK_R_c" = -24;
"@MMK_R_d" = -24;
"@MMK_R_dotlessj" = 81;
"@MMK_R_emdash" = -24;
"@MMK_R_guillemotleft" = -13;
"@MMK_R_t" = -12;
"@MMK_R_u" = -14;
"@MMK_R_w" = -28;
"@MMK_R_y" = -28;
};
"@MMK_L_S" = {
"@MMK_R_AE" = -10;
"@MMK_R_W" = 7;
"@MMK_R_b" = 65;
"@MMK_R_c" = -5;
"@MMK_R_c.salt" = -5;
"@MMK_R_g" = -25;
"@MMK_R_germandbls" = 16;
"@MMK_R_l" = 15;
"@MMK_R_m" = -6;
"@MMK_R_p" = -7;
"@MMK_R_s.salt" = -5;
"@MMK_R_v" = -7;
"@MMK_R_w" = -7;
"@MMK_R_y" = -20;
"@MMK_R_z" = -11;
};
"@MMK_L_T" = {
"@MMK_R_AE" = -74;
"@MMK_R_Aacute" = -42;
"@MMK_R_J" = -60;
"@MMK_R_V" = 25;
"@MMK_R_W" = 29;
"@MMK_R_Y" = 21;
"@MMK_R_a" = -111;
"@MMK_R_a.salt" = -87;
"@MMK_R_ampersand" = -19;
"@MMK_R_asterisk" = 8;
"@MMK_R_b" = 87;
"@MMK_R_braceright" = 7;
"@MMK_R_bracketright" = 10;
"@MMK_R_c" = -132;
"@MMK_R_c.salt" = -132;
"@MMK_R_colon" = -21;
"@MMK_R_comma" = -20;
"@MMK_R_d" = -101;
"@MMK_R_dotlessi" = -34;
"@MMK_R_dotlessj" = -33;
"@MMK_R_emdash" = -51;
"@MMK_R_eng" = -79;
"@MMK_R_f" = -31;
"@MMK_R_f_f" = -31;
"@MMK_R_g" = -139;
"@MMK_R_germandbls" = 38;
"@MMK_R_guillemotleft" = -19;
"@MMK_R_l" = 37;
"@MMK_R_m" = -79;
"@MMK_R_p" = -81;
"@MMK_R_q" = -128;
"@MMK_R_r" = -76;
"@MMK_R_registered" = -45;
"@MMK_R_s" = -102;
"@MMK_R_s.salt" = -106;
"@MMK_R_slash" = -29;
"@MMK_R_space" = -26;
"@MMK_R_t" = -26;
"@MMK_R_u" = -73;
"@MMK_R_v" = -84;
"@MMK_R_w" = -82;
"@MMK_R_x" = -87;
"@MMK_R_y" = -91;
"@MMK_R_z" = -92;
};
"@MMK_L_Thorn" = {
"@MMK_R_AE" = -80;
"@MMK_R_Aacute" = -46;
"@MMK_R_B" = -24;
"@MMK_R_J" = -30;
"@MMK_R_U" = -21;
"@MMK_R_W" = -33;
"@MMK_R_Y" = -63;
"@MMK_R_Z" = -10;
"@MMK_R_a" = -5;
"@MMK_R_c" = -5;
"@MMK_R_comma" = -35;
"@MMK_R_g" = -12;
"@MMK_R_germandbls" = -8;
"@MMK_R_l" = -8;
"@MMK_R_quotedbl" = -14;
"@MMK_R_quotedblleft" = -30;
"@MMK_R_quoteright" = -21;
};
"@MMK_L_U" = {
"@MMK_R_AE" = -55;
"@MMK_R_Aacute" = -34;
"@MMK_R_B" = -5;
"@MMK_R_C" = -10;
"@MMK_R_J" = -21;
"@MMK_R_S" = -7;
"@MMK_R_U" = -7;
"@MMK_R_a" = -34;
"@MMK_R_a.salt" = -32;
"@MMK_R_ampersand" = -15;
"@MMK_R_asterisk" = 30;
"@MMK_R_b" = -13;
"@MMK_R_c" = -29;
"@MMK_R_c.salt" = -29;
"@MMK_R_comma" = -23;
"@MMK_R_d" = -29;
"@MMK_R_dotlessi" = -13;
"@MMK_R_dotlessj" = -12;
"@MMK_R_eng" = -12;
"@MMK_R_f" = -18;
"@MMK_R_g" = -35;
"@MMK_R_germandbls" = -19;
"@MMK_R_l" = -18;
"@MMK_R_m" = -13;
"@MMK_R_p" = -14;
"@MMK_R_q" = -30;
"@MMK_R_r" = -13;
"@MMK_R_registered" = -20;
"@MMK_R_s" = -30;
"@MMK_R_s.salt" = -25;
"@MMK_R_slash" = -30;
"@MMK_R_t" = -12;
"@MMK_R_u" = -12;
"@MMK_R_v" = -18;
"@MMK_R_w" = -21;
"@MMK_R_x" = -12;
"@MMK_R_y" = -21;
"@MMK_R_z" = -34;
};
"@MMK_L_V" = {
"@MMK_R_AE" = -108;
"@MMK_R_Aacute" = -66;
"@MMK_R_C" = -7;
"@MMK_R_J" = -51;
"@MMK_R_T" = 34;
"@MMK_R_a" = -115;
"@MMK_R_c" = -115;
"@MMK_R_colon" = -20;
"@MMK_R_comma" = -45;
"@MMK_R_d" = -114;
"@MMK_R_dotlessi" = -67;
"@MMK_R_dotlessj" = -68;
"@MMK_R_emdash" = -27;
"@MMK_R_eng" = -66;
"@MMK_R_f" = -43;
"@MMK_R_f_f" = -58;
"@MMK_R_g" = -137;
"@MMK_R_germandbls" = -15;
"@MMK_R_guillemotleft" = -13;
"@MMK_R_l" = -14;
"@MMK_R_quotedbl" = 28;
"@MMK_R_quotedblleft" = 36;
"@MMK_R_quoteright" = 25;
"@MMK_R_r" = -65;
"@MMK_R_s" = -114;
"@MMK_R_t" = -59;
"@MMK_R_u" = -63;
"@MMK_R_w" = -75;
"@MMK_R_y" = -74;
"@MMK_R_z" = -100;
};
"@MMK_L_W" = {
"@MMK_R_AE" = -103;
"@MMK_R_Aacute" = -60;
"@MMK_R_C" = -9;
"@MMK_R_J" = -52;
"@MMK_R_T" = 27;
"@MMK_R_a" = -114;
"@MMK_R_a.salt" = -97;
"@MMK_R_asterisk" = 62;
"@MMK_R_backslash" = 28;
"@MMK_R_braceright" = 8;
"@MMK_R_bracketright" = 11;
"@MMK_R_c" = -115;
"@MMK_R_c.salt" = -115;
"@MMK_R_colon" = -20;
"@MMK_R_comma" = -45;
"@MMK_R_d" = -114;
"@MMK_R_dotlessi" = -68;
"@MMK_R_dotlessj" = -69;
"@MMK_R_emdash" = -28;
"@MMK_R_eng" = -68;
"@MMK_R_f" = -44;
"@MMK_R_f_f" = -56;
"@MMK_R_g" = -136;
"@MMK_R_germandbls" = -15;
"@MMK_R_guillemotleft" = -14;
"@MMK_R_l" = -15;
"@MMK_R_m" = -68;
"@MMK_R_p" = -72;
"@MMK_R_q" = -118;
"@MMK_R_question" = 6;
"@MMK_R_quotedbl" = 21;
"@MMK_R_quotedblleft" = 27;
"@MMK_R_quoteright" = 8;
"@MMK_R_r" = -67;
"@MMK_R_registered" = -50;
"@MMK_R_s" = -114;
"@MMK_R_s.salt" = -109;
"@MMK_R_slash" = -55;
"@MMK_R_space" = -26;
"@MMK_R_t" = -61;
"@MMK_R_trademark" = 50;
"@MMK_R_u" = -65;
"@MMK_R_v" = -74;
"@MMK_R_w" = -77;
"@MMK_R_x" = -77;
"@MMK_R_y" = -76;
"@MMK_R_z" = -100;
};
"@MMK_L_X" = {
"@MMK_R_C" = -31;
"@MMK_R_b" = 98;
"@MMK_R_c" = -28;
"@MMK_R_d" = -24;
"@MMK_R_emdash" = -28;
"@MMK_R_g" = 6;
"@MMK_R_germandbls" = 42;
"@MMK_R_guillemotleft" = -28;
"@MMK_R_guillemotright" = -15;
"@MMK_R_l" = 44;
"@MMK_R_t" = -33;
"@MMK_R_u" = -54;
"@MMK_R_w" = -114;
"@MMK_R_y" = -41;
};
"@MMK_L_Y" = {
"@MMK_R_AE" = -88;
"@MMK_R_Aacute" = -63;
"@MMK_R_C" = -12;
"@MMK_R_J" = -59;
"@MMK_R_T" = 34;
"@MMK_R_a" = -137;
"@MMK_R_a.salt" = -119;
"@MMK_R_asterisk" = 58;
"@MMK_R_b" = 7;
"@MMK_R_backslash" = 40;
"@MMK_R_braceright" = 24;
"@MMK_R_bracketright" = 24;
"@MMK_R_c" = -162;
"@MMK_R_c.salt" = -163;
"@MMK_R_colon" = -16;
"@MMK_R_comma" = -15;
"@MMK_R_d" = -88;
"@MMK_R_dotlessi" = -91;
"@MMK_R_dotlessj" = -88;
"@MMK_R_emdash" = -44;
"@MMK_R_eng" = -92;
"@MMK_R_f" = -50;
"@MMK_R_g" = -157;
"@MMK_R_guillemotleft" = -29;
"@MMK_R_guillemotright" = -18;
"@MMK_R_m" = -102;
"@MMK_R_p" = -102;
"@MMK_R_parenright" = 17;
"@MMK_R_q" = -158;
"@MMK_R_question" = 11;
"@MMK_R_quotedbl" = 28;
"@MMK_R_quotedblleft" = 36;
"@MMK_R_quoteright" = 10;
"@MMK_R_r" = -92;
"@MMK_R_registered" = -56;
"@MMK_R_s" = -118;
"@MMK_R_s.salt" = -131;
"@MMK_R_slash" = -27;
"@MMK_R_space" = -27;
"@MMK_R_t" = -88;
"@MMK_R_trademark" = 56;
"@MMK_R_u" = -97;
"@MMK_R_v" = -97;
"@MMK_R_w" = -103;
"@MMK_R_x" = -95;
"@MMK_R_y" = -100;
"@MMK_R_z" = -112;
};
"@MMK_L_Z" = {
"@MMK_R_b" = 54;
"@MMK_R_dotlessj" = -5;
"@MMK_R_f_f" = -5;
"@MMK_R_germandbls" = 11;
"@MMK_R_p" = -10;
"@MMK_R_u" = -6;
"@MMK_R_v" = -18;
"@MMK_R_w" = -21;
"@MMK_R_y" = -16;
};
"@MMK_L_a" = {
"@MMK_R_T" = -80;
"@MMK_R_U" = -11;
"@MMK_R_Y" = -104;
"@MMK_R_backslash" = -39;
"@MMK_R_parenright" = 16;
"@MMK_R_slash" = 23;
"@MMK_R_v" = -13;
"@MMK_R_w" = -17;
};
"@MMK_L_a.salt" = {
"@MMK_R_w" = -36;
"@MMK_R_y" = -6;
};
"@MMK_L_ae" = {
"@MMK_R_B" = -20;
"@MMK_R_M" = -22;
"@MMK_R_T" = -120;
"@MMK_R_U" = -34;
"@MMK_R_V" = -114;
"@MMK_R_W" = -122;
"@MMK_R_X" = -7;
"@MMK_R_Y" = -146;
"@MMK_R_Z" = -7;
"@MMK_R_backslash" = -57;
"@MMK_R_braceright" = -20;
"@MMK_R_bracketright" = -17;
"@MMK_R_question" = -17;
"@MMK_R_trademark" = -16;
"@MMK_R_w" = -10;
"@MMK_R_x" = -22;
};
"@MMK_L_ampersand" = {
"@MMK_R_AE" = 91;
"@MMK_R_Aacute" = 101;
"@MMK_R_B" = 21;
"@MMK_R_C" = -22;
"@MMK_R_J" = 12;
"@MMK_R_S" = 6;
"@MMK_R_T" = -35;
"@MMK_R_U" = -38;
"@MMK_R_W" = -56;
"@MMK_R_Y" = -36;
"@MMK_R_Z" = 32;
"@MMK_R_dotlessi" = 26;
"@MMK_R_eng" = 18;
"@MMK_R_germandbls" = 51;
"@MMK_R_l" = 50;
"@MMK_R_quotedbl" = -41;
"@MMK_R_r" = 21;
"@MMK_R_s" = 8;
"@MMK_R_w" = -27;
"@MMK_R_y" = -14;
"@MMK_R_z" = 24;
};
"@MMK_L_apostrophe" = {
"@MMK_R_c" = -22;
"@MMK_R_g" = -47;
};
"@MMK_L_asterisk" = {
"@MMK_R_AE" = -69;
"@MMK_R_Aacute" = -27;
"@MMK_R_J" = -32;
"@MMK_R_T" = 8;
"@MMK_R_W" = 18;
"@MMK_R_Y" = 9;
"@MMK_R_b" = 48;
"@MMK_R_c" = -10;
"@MMK_R_d" = -24;
"@MMK_R_g" = -29;
};
"@MMK_L_at" = {
"@MMK_R_B" = -16;
"@MMK_R_quotedbl" = -12;
};
"@MMK_L_b" = {
"@MMK_R_AE" = -7;
"@MMK_R_B" = -21;
"@MMK_R_M" = -23;
"@MMK_R_T" = -131;
"@MMK_R_U" = -31;
"@MMK_R_V" = -121;
"@MMK_R_W" = -130;
"@MMK_R_X" = -11;
"@MMK_R_Y" = -155;
"@MMK_R_Z" = -14;
"@MMK_R_asterisk" = -46;
"@MMK_R_backslash" = -60;
"@MMK_R_braceright" = -25;
"@MMK_R_bracketright" = -23;
"@MMK_R_f_f" = -6;
"@MMK_R_question" = -23;
"@MMK_R_quotedbl" = -48;
"@MMK_R_quotedblleft" = -48;
"@MMK_R_quoteright" = -48;
"@MMK_R_trademark" = -30;
"@MMK_R_v" = -13;
"@MMK_R_w" = -20;
"@MMK_R_x" = -33;
};
"@MMK_L_backslash" = {
"@MMK_R_AE" = 49;
"@MMK_R_Aacute" = 58;
"@MMK_R_C" = -15;
"@MMK_R_T" = -34;
"@MMK_R_U" = -32;
"@MMK_R_W" = -62;
"@MMK_R_Y" = -36;
"@MMK_R_germandbls" = 14;
"@MMK_R_l" = 12;
"@MMK_R_quotedbl" = -54;
"@MMK_R_w" = -29;
"@MMK_R_y" = -14;
};
"@MMK_L_bar" = {
"@MMK_R_b" = 17;
"@MMK_R_dotlessj" = 61;
};
"@MMK_L_braceleft" = {
"@MMK_R_AE" = 19;
"@MMK_R_Aacute" = 27;
"@MMK_R_B" = 12;
"@MMK_R_C" = -20;
"@MMK_R_J" = -12;
"@MMK_R_T" = 8;
"@MMK_R_U" = 15;
"@MMK_R_W" = 47;
"@MMK_R_Y" = 36;
"@MMK_R_a" = -12;
"@MMK_R_b" = 76;
"@MMK_R_c" = -22;
"@MMK_R_d" = -21;
"@MMK_R_germandbls" = 30;
"@MMK_R_l" = 30;
"@MMK_R_u" = -14;
"@MMK_R_w" = -25;
};
"@MMK_L_bracketleft" = {
"@MMK_R_AE" = 19;
"@MMK_R_Aacute" = 27;
"@MMK_R_B" = 11;
"@MMK_R_C" = -21;
"@MMK_R_J" = -13;
"@MMK_R_T" = 10;
"@MMK_R_U" = 13;
"@MMK_R_W" = 47;
"@MMK_R_Y" = 36;
"@MMK_R_a" = -12;
"@MMK_R_b" = 76;
"@MMK_R_c" = -23;
"@MMK_R_d" = -21;
"@MMK_R_germandbls" = 30;
"@MMK_R_l" = 30;
"@MMK_R_u" = -14;
"@MMK_R_w" = -24;
};
"@MMK_L_c" = {
"@MMK_R_B" = -13;
"@MMK_R_T" = -82;
"@MMK_R_U" = -30;
"@MMK_R_Y" = -118;
"@MMK_R_backslash" = -34;
"@MMK_R_braceright" = -14;
};
"@MMK_L_c_h" = {
"@MMK_R_B" = -11;
"@MMK_R_C" = -8;
"@MMK_R_T" = -133;
"@MMK_R_U" = -51;
"@MMK_R_Y" = -157;
"@MMK_R_asterisk" = -39;
"@MMK_R_backslash" = -62;
"@MMK_R_braceright" = 35;
"@MMK_R_bracketright" = 31;
"@MMK_R_question" = -17;
"@MMK_R_quotedbl" = -40;
"@MMK_R_quotedblleft" = -41;
"@MMK_R_quoteright" = -41;
"@MMK_R_t" = -6;
"@MMK_R_trademark" = -32;
"@MMK_R_u" = -19;
"@MMK_R_v" = -40;
"@MMK_R_w" = -42;
};
"@MMK_L_c_k" = {
"@MMK_R_a" = -20;
"@MMK_R_a.salt" = -11;
"@MMK_R_ampersand" = -19;
"@MMK_R_asterisk" = -43;
"@MMK_R_b" = -5;
"@MMK_R_backslash" = -55;
"@MMK_R_braceright" = 20;
"@MMK_R_bracketright" = 18;
"@MMK_R_c" = -39;
"@MMK_R_c.salt" = -37;
"@MMK_R_d" = -29;
"@MMK_R_emdash" = -60;
"@MMK_R_guillemotright" = -13;
"@MMK_R_q" = -41;
"@MMK_R_question" = -18;
"@MMK_R_quotedbl" = -46;
"@MMK_R_quotedblleft" = -47;
"@MMK_R_quoteright" = -47;
"@MMK_R_registered" = -12;
"@MMK_R_s.salt" = -6;
"@MMK_R_trademark" = -25;
"@MMK_R_w" = -6;
};
"@MMK_L_c_p" = {
"@MMK_R_AE" = -11;
"@MMK_R_B" = -23;
"@MMK_R_M" = -24;
"@MMK_R_T" = -132;
"@MMK_R_U" = -33;
"@MMK_R_V" = -120;
"@MMK_R_W" = -128;
"@MMK_R_X" = -14;
"@MMK_R_Y" = -157;
"@MMK_R_Z" = -17;
"@MMK_R_apostrophe" = -19;
"@MMK_R_backslash" = -59;
"@MMK_R_braceright" = -25;
"@MMK_R_bracketright" = -23;
"@MMK_R_question" = -21;
"@MMK_R_trademark" = -18;
"@MMK_R_v" = -10;
"@MMK_R_w" = -17;
"@MMK_R_x" = -36;
};
"@MMK_L_c_t" = {
"@MMK_R_Aacute" = 7;
"@MMK_R_B" = -6;
"@MMK_R_T" = -94;
"@MMK_R_U" = -25;
"@MMK_R_Y" = -115;
"@MMK_R_asterisk" = -22;
"@MMK_R_backslash" = -40;
"@MMK_R_braceright" = -17;
"@MMK_R_quotedbl" = -19;
"@MMK_R_quotedblleft" = -15;
"@MMK_R_quoteright" = -17;
"@MMK_R_trademark" = -12;
};
"@MMK_L_colon" = {
"@MMK_R_AE" = 9;
"@MMK_R_Aacute" = 18;
"@MMK_R_T" = -25;
"@MMK_R_V" = -22;
"@MMK_R_W" = -24;
"@MMK_R_Y" = -21;
"@MMK_R_v" = -11;
"@MMK_R_w" = -12;
};
"@MMK_L_comma" = {
"@MMK_R_AE" = 15;
"@MMK_R_Aacute" = 24;
"@MMK_R_C" = -15;
"@MMK_R_T" = -24;
"@MMK_R_U" = -23;
"@MMK_R_V" = -45;
"@MMK_R_W" = -48;
"@MMK_R_Y" = -21;
"@MMK_R_dotlessj" = -10;
"@MMK_R_nine" = -18;
"@MMK_R_p" = -16;
"@MMK_R_quotedbl" = -81;
"@MMK_R_quotedblleft" = -76;
"@MMK_R_quoteright" = -78;
"@MMK_R_u" = -13;
"@MMK_R_v" = -50;
"@MMK_R_w" = -52;
"@MMK_R_y" = -26;
};
"@MMK_L_d" = {
"@MMK_R_T" = -17;
"@MMK_R_U" = -28;
"@MMK_R_Y" = -19;
"@MMK_R_braceright" = 29;
"@MMK_R_bracketright" = 29;
"@MMK_R_parenright" = 31;
"@MMK_R_slash" = 36;
};
"@MMK_L_dotlessi" = {
"@MMK_R_C" = -6;
"@MMK_R_T" = -27;
"@MMK_R_U" = -41;
"@MMK_R_Y" = -103;
"@MMK_R_backslash" = -28;
"@MMK_R_parenright" = 11;
"@MMK_R_slash" = 13;
"@MMK_R_v" = -7;
"@MMK_R_w" = -13;
};
"@MMK_L_dotlessj" = {
"@MMK_R_B" = -14;
"@MMK_R_M" = -16;
"@MMK_R_T" = -25;
"@MMK_R_U" = -23;
"@MMK_R_V" = -73;
"@MMK_R_W" = -76;
"@MMK_R_Y" = -100;
"@MMK_R_Z" = -5;
"@MMK_R_backslash" = -19;
"@MMK_R_dotlessj" = 62;
};
"@MMK_L_emdash" = {
"@MMK_R_AE" = -29;
"@MMK_R_Aacute" = -18;
"@MMK_R_B" = -13;
"@MMK_R_M" = -14;
"@MMK_R_T" = -50;
"@MMK_R_U" = -12;
"@MMK_R_V" = -31;
"@MMK_R_W" = -33;
"@MMK_R_X" = -25;
"@MMK_R_Y" = -45;
"@MMK_R_Z" = -14;
"@MMK_R_dotlessi" = -10;
"@MMK_R_dotlessj" = -10;
"@MMK_R_eng" = -13;
"@MMK_R_p" = -16;
"@MMK_R_r" = -11;
"@MMK_R_v" = -21;
"@MMK_R_w" = -21;
"@MMK_R_x" = -27;
"@MMK_R_y" = -22;
};
"@MMK_L_eth" = {
"@MMK_R_B" = -18;
"@MMK_R_T" = -26;
};
"@MMK_L_exclamdown" = {
"@MMK_R_U" = -19;
"@MMK_R_W" = -28;
"@MMK_R_Y" = -32;
"@MMK_R_dotlessj" = 58;
};
"@MMK_L_f" = {
"@MMK_R_B" = 91;
"@MMK_R_C" = 45;
"@MMK_R_T" = 150;
"@MMK_R_U" = 89;
"@MMK_R_Y" = 162;
"@MMK_R_c" = -7;
"@MMK_R_c.salt" = -6;
"@MMK_R_emdash" = -17;
"@MMK_R_quotedbl" = 119;
"@MMK_R_quotedblleft" = 124;
"@MMK_R_quoteright" = 121;
};
"@MMK_L_f_f_i" = {
"@MMK_R_w" = -6;
};
"@MMK_L_g" = {
"@MMK_R_C" = -9;
"@MMK_R_T" = -46;
"@MMK_R_U" = -23;
"@MMK_R_Y" = -85;
"@MMK_R_a" = -8;
"@MMK_R_a.salt" = -8;
"@MMK_R_backslash" = -16;
"@MMK_R_braceright" = 73;
"@MMK_R_bracketright" = 69;
"@MMK_R_parenright" = 31;
"@MMK_R_slash" = 33;
"@MMK_R_v" = -6;
};
"@MMK_L_germandbls" = {
"@MMK_R_B" = -7;
"@MMK_R_C" = -13;
"@MMK_R_T" = -73;
"@MMK_R_dotlessj" = -18;
"@MMK_R_f_f" = -10;
"@MMK_R_guillemotleft" = -21;
"@MMK_R_u" = -12;
"@MMK_R_w" = -64;
"@MMK_R_y" = -58;
};
"@MMK_L_guillemotleft" = {
"@MMK_R_AE" = -31;
"@MMK_R_Aacute" = -11;
"@MMK_R_X" = -14;
"@MMK_R_Y" = -21;
};
"@MMK_L_guillemotright" = {
"@MMK_R_AE" = -40;
"@MMK_R_Aacute" = -18;
"@MMK_R_M" = -10;
"@MMK_R_T" = -18;
"@MMK_R_V" = -15;
"@MMK_R_W" = -16;
"@MMK_R_X" = -27;
"@MMK_R_Y" = -32;
};
"@MMK_L_k" = {
"@MMK_R_T" = -79;
"@MMK_R_U" = -25;
"@MMK_R_Y" = -102;
"@MMK_R_c" = -21;
"@MMK_R_d" = -19;
"@MMK_R_emdash" = -19;
"@MMK_R_quotedbl" = -28;
"@MMK_R_quotedblleft" = -28;
"@MMK_R_quoteright" = -28;
};
"@MMK_L_l" = {
"@MMK_R_T" = -9;
"@MMK_R_U" = -15;
"@MMK_R_Y" = -5;
"@MMK_R_parenright" = 8;
"@MMK_R_slash" = 11;
};
"@MMK_L_m" = {
"@MMK_R_C" = -6;
"@MMK_R_T" = -107;
"@MMK_R_U" = -43;
"@MMK_R_Y" = -131;
"@MMK_R_u" = -8;
"@MMK_R_w" = -41;
"@MMK_R_y" = -5;
};
"@MMK_L_n" = {
"@MMK_R_C" = -7;
"@MMK_R_T" = -110;
"@MMK_R_U" = -45;
"@MMK_R_Y" = -134;
"@MMK_R_backslash" = -60;
"@MMK_R_braceright" = 21;
"@MMK_R_bracketright" = 21;
"@MMK_R_parenright" = 16;
"@MMK_R_question" = -15;
"@MMK_R_slash" = 21;
"@MMK_R_trademark" = -10;
"@MMK_R_u" = -9;
"@MMK_R_v" = -32;
"@MMK_R_w" = -41;
"@MMK_R_y" = -5;
};
"@MMK_L_nine" = {
"@MMK_R_B" = -13;
"@MMK_R_comma" = -36;
};
"@MMK_L_parenleft" = {
"@MMK_R_AE" = 22;
"@MMK_R_Aacute" = 32;
"@MMK_R_C" = -14;
"@MMK_R_W" = 47;
"@MMK_R_Y" = 35;
"@MMK_R_b" = 79;
"@MMK_R_c" = -16;
"@MMK_R_d" = -16;
"@MMK_R_g" = -14;
"@MMK_R_germandbls" = 28;
"@MMK_R_l" = 31;
"@MMK_R_w" = -17;
"@MMK_R_y" = -15;
};
"@MMK_L_q" = {
"@MMK_R_B" = -11;
"@MMK_R_T" = -90;
"@MMK_R_U" = -14;
"@MMK_R_Y" = -121;
};
"@MMK_L_questiondown" = {
"@MMK_R_AE" = 41;
"@MMK_R_Aacute" = 51;
"@MMK_R_C" = -12;
"@MMK_R_T" = -18;
"@MMK_R_U" = -28;
"@MMK_R_W" = -50;
"@MMK_R_Y" = -37;
"@MMK_R_dotlessj" = 82;
"@MMK_R_w" = -16;
};
"@MMK_L_quotedbl" = {
"@MMK_R_AE" = -67;
"@MMK_R_Aacute" = -30;
"@MMK_R_J" = -25;
"@MMK_R_V" = 21;
"@MMK_R_W" = 26;
"@MMK_R_Y" = 17;
"@MMK_R_at" = -15;
"@MMK_R_b" = 62;
"@MMK_R_comma" = -81;
"@MMK_R_d" = -20;
"@MMK_R_four" = -37;
"@MMK_R_g" = -27;
"@MMK_R_germandbls" = 12;
"@MMK_R_l" = 11;
"@MMK_R_registered" = -15;
"@MMK_R_six" = -14;
"@MMK_R_slash" = -54;
"@MMK_R_space" = -30;
};
"@MMK_L_quotedblleft" = {
"@MMK_R_AE" = -67;
"@MMK_R_Aacute" = -31;
"@MMK_R_J" = -24;
"@MMK_R_V" = 7;
"@MMK_R_W" = 12;
"@MMK_R_X" = 9;
"@MMK_R_b" = 45;
"@MMK_R_comma" = -75;
"@MMK_R_d" = -19;
"@MMK_R_g" = -23;
};
"@MMK_L_quoteright" = {
"@MMK_R_AE" = -67;
"@MMK_R_Aacute" = -32;
"@MMK_R_J" = -23;
"@MMK_R_V" = 32;
"@MMK_R_W" = 38;
"@MMK_R_Y" = 28;
"@MMK_R_b" = 72;
"@MMK_R_comma" = -81;
"@MMK_R_d" = -19;
"@MMK_R_g" = -29;
"@MMK_R_germandbls" = 22;
"@MMK_R_l" = 22;
};
"@MMK_L_r" = {
"@MMK_R_B" = -23;
"@MMK_R_T" = -121;
"@MMK_R_U" = -32;
"@MMK_R_Y" = -143;
"@MMK_R_backslash" = -47;
"@MMK_R_braceright" = -23;
"@MMK_R_bracketright" = -21;
"@MMK_R_comma" = -10;
};
"@MMK_L_registered" = {
"@MMK_R_B" = -16;
"@MMK_R_T" = -44;
"@MMK_R_U" = -24;
"@MMK_R_W" = -53;
"@MMK_R_Y" = -60;
"@MMK_R_quotedbl" = -12;
};
"@MMK_L_s" = {
"@MMK_R_B" = -13;
"@MMK_R_T" = -80;
"@MMK_R_U" = -35;
"@MMK_R_Y" = -127;
"@MMK_R_backslash" = -44;
"@MMK_R_braceright" = -15;
"@MMK_R_bracketright" = -12;
};
"@MMK_L_seven" = {
"@MMK_R_B" = 26;
"@MMK_R_C" = -14;
"@MMK_R_comma" = -67;
};
"@MMK_L_slash" = {
"@MMK_R_AE" = -85;
"@MMK_R_Aacute" = -58;
"@MMK_R_C" = -15;
"@MMK_R_J" = -48;
"@MMK_R_W" = 53;
"@MMK_R_Y" = 42;
"@MMK_R_a" = -59;
"@MMK_R_b" = 86;
"@MMK_R_c" = -60;
"@MMK_R_d" = -49;
"@MMK_R_dotlessi" = -21;
"@MMK_R_dotlessj" = -15;
"@MMK_R_eng" = -26;
"@MMK_R_g" = -61;
"@MMK_R_germandbls" = 36;
"@MMK_R_l" = 36;
"@MMK_R_r" = -26;
"@MMK_R_s" = -59;
"@MMK_R_t" = -15;
"@MMK_R_u" = -18;
"@MMK_R_w" = -24;
"@MMK_R_y" = -28;
"@MMK_R_z" = -52;
};
"@MMK_L_space" = {
"@MMK_R_AE" = -40;
"@MMK_R_Aacute" = -34;
"@MMK_R_J" = -30;
"@MMK_R_T" = -26;
"@MMK_R_W" = -32;
"@MMK_R_Y" = -30;
"@MMK_R_quotedbl" = -30;
"@MMK_R_w" = -23;
"@MMK_R_y" = -19;
};
"@MMK_L_t_t" = {
"@MMK_R_c" = -8;
};
"@MMK_L_t_z" = {
"@MMK_R_Aacute" = 9;
"@MMK_R_B" = -8;
"@MMK_R_T" = -102;
"@MMK_R_U" = -36;
"@MMK_R_Y" = -128;
"@MMK_R_backslash" = -51;
"@MMK_R_braceright" = -19;
"@MMK_R_question" = -13;
};
"@MMK_L_three" = {
"@MMK_R_comma" = -12;
};
"@MMK_L_trademark" = {
"@MMK_R_AE" = -61;
"@MMK_R_Aacute" = -21;
"@MMK_R_B" = 11;
"@MMK_R_J" = -30;
"@MMK_R_T" = 13;
"@MMK_R_U" = 20;
"@MMK_R_W" = 73;
"@MMK_R_Y" = 60;
"@MMK_R_b" = 92;
"@MMK_R_c" = -12;
"@MMK_R_d" = -14;
"@MMK_R_g" = -15;
"@MMK_R_germandbls" = 54;
"@MMK_R_l" = 54;
"@MMK_R_r" = 6;
"@MMK_R_t" = 10;
"@MMK_R_u" = 22;
"@MMK_R_w" = 15;
"@MMK_R_y" = 5;
};
"@MMK_L_u" = {
"@MMK_R_C" = -10;
"@MMK_R_T" = -108;
"@MMK_R_U" = -49;
"@MMK_R_Y" = -131;
"@MMK_R_backslash" = -58;
"@MMK_R_bracketright" = 8;
"@MMK_R_parenright" = 15;
"@MMK_R_question" = -15;
"@MMK_R_slash" = 19;
"@MMK_R_v" = -9;
"@MMK_R_w" = -24;
};
"@MMK_L_v" = {
"@MMK_R_Aacute" = -50;
"@MMK_R_B" = -22;
"@MMK_R_T" = -89;
"@MMK_R_U" = -20;
"@MMK_R_Y" = -131;
"@MMK_R_comma" = -49;
"@MMK_R_emdash" = -14;
"@MMK_R_g" = -8;
"@MMK_R_germandbls" = -6;
"@MMK_R_l" = -6;
};
"@MMK_L_w" = {
"@MMK_R_Aacute" = -55;
"@MMK_R_B" = -22;
"@MMK_R_T" = -88;
"@MMK_R_U" = -20;
"@MMK_R_Y" = -136;
"@MMK_R_backslash" = -35;
"@MMK_R_braceright" = -33;
"@MMK_R_bracketright" = -26;
"@MMK_R_comma" = -48;
"@MMK_R_emdash" = -10;
"@MMK_R_germandbls" = -6;
"@MMK_R_parenright" = -18;
"@MMK_R_slash" = -23;
"@MMK_R_space" = -20;
};
"@MMK_L_x" = {
"@MMK_R_T" = -94;
"@MMK_R_U" = -34;
"@MMK_R_Y" = -116;
"@MMK_R_c" = -43;
"@MMK_R_d" = -36;
"@MMK_R_emdash" = -26;
"@MMK_R_g" = -14;
"@MMK_R_u" = -5;
"@MMK_R_w" = -24;
};
"@MMK_L_y" = {
"@MMK_R_Aacute" = -46;
"@MMK_R_B" = -25;
"@MMK_R_T" = -91;
"@MMK_R_U" = -22;
"@MMK_R_Y" = -134;
"@MMK_R_backslash" = -37;
"@MMK_R_braceright" = -32;
"@MMK_R_bracketright" = -25;
"@MMK_R_comma" = -50;
"@MMK_R_emdash" = -16;
"@MMK_R_g" = -5;
"@MMK_R_germandbls" = -8;
"@MMK_R_l" = -7;
"@MMK_R_parenright" = -18;
"@MMK_R_q" = -6;
"@MMK_R_slash" = -23;
"@MMK_R_space" = -18;
};
"@MMK_L_zero" = {
"@MMK_R_B" = -12;
"@MMK_R_comma" = -12;
};
A = {
apostrophemod = -55;
four = -13;
schwa = -13;
seven = 19;
zero = -14;
};
Aogonek = {
j = 122;
};
Aringacute = {
space = -39;
};
B = {
M = -12;
V = -17;
X = -44;
apostrophemod = -13;
braceright = -17;
bracketright = -18;
m = -7;
p = -13;
v = -18;
x = -17;
};
C = {
four = 6;
itilde = 9;
k = 14;
k.salt = 14;
kcommaaccent = 14;
};
Cacute = {
k = 14;
k.salt = 14;
};
Ccaron = {
k = 14;
k.salt = 14;
};
Ccedilla = {
k = 14;
k.salt = 14;
};
Ccircumflex = {
k = 14;
k.salt = 14;
};
Cdotaccent = {
k = 14;
k.salt = 14;
};
D = {
apostrophemod = -19;
itilde = 15;
};
Eng = {
germandbls = -21;
k = 54;
k.salt = 54;
};
F = {
V = 28;
a.salt = -36;
ampersand = -13;
asterisk = 15;
at = -23;
braceright = 9;
bracketright = 9;
c.salt = -47;
four = -12;
germandbls = -25;
idieresis = 2;
idotless = -31;
iogonek = -31;
k = 55;
k.salt = 55;
kcommaaccent = 55;
lslash = 19;
m = -33;
p = -22;
q = -51;
registered = -21;
s.salt = -41;
schwa = -41;
slash = -43;
space = -25;
v = -25;
x = -30;
};
H = {
at = -18;
four = -19;
germandbls = 1;
k = 39;
k.salt = 39;
kcommaaccent = 39;
lslash = 3;
schwa = -22;
seven = 10;
six = -18;
zero = -14;
};
Hbar = {
germandbls = 1;
k = 39;
k.salt = 39;
};
Hcircumflex = {
germandbls = 1;
k = 39;
k.salt = 39;
};
I = {
f_f_h = -10;
four = -16;
germandbls = 1;
hcircumflex = 15;
k.salt = 30;
kcommaaccent = 30;
lslash = 1;
schwa = -11;
seven = 5;
};
IJ = {
germandbls = -28;
};
Iacute = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Ibreve = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Icircumflex = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Idieresis = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Idotaccent = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Igrave = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Imacron = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Iogonek = {
f_f_h = -10;
germandbls = 1;
j = 61;
k.salt = 30;
};
Itilde = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
J = {
f_f_h = -16;
germandbls = -28;
hcircumflex = 19;
lslash = 20;
schwa = -23;
};
Jcircumflex = {
f_f_h = -16;
germandbls = -28;
};
K = {
four = -39;
germandbls = 1;
hcircumflex = 66;
k = 75;
k.salt = 68;
kcommaaccent = 68;
lslash = 30;
one = 30;
schwa = -52;
seven = 23;
six = -14;
thorn = 77;
two = 18;
};
K.salt = {
a.salt = -5;
asterisk = 6;
backslash = 9;
braceright = 5;
bracketright = 7;
c.salt = -24;
four = -27;
germandbls = 1;
hcircumflex = 50;
k = 59;
k.salt = 59;
kcommaaccent = 59;
lslash = 19;
one = 18;
p = -50;
q = -23;
registered = -15;
s.salt = -7;
schwa = -20;
seven = 11;
six = -13;
trademark = 8;
v = -72;
};
Kcommaaccent = {
germandbls = 1;
k = 75;
k.salt = 68;
thorn = 77;
};
L = {
apostrophemod = -61;
four = 18;
nine = -32;
};
M = {
a.salt = -24;
ampersand = -15;
asterisk = 31;
at = -22;
backslash = 11;
braceright = 6;
bracketright = 7;
c.salt = -41;
four = -25;
hcircumflex = 58;
m = -11;
one = 17;
p = -31;
q = -39;
registered = -25;
s.salt = -22;
schwa = -29;
seven = 16;
six = -21;
trademark = 16;
v = -48;
x = -11;
};
N = {
at = -23;
four = -15;
germandbls = -21;
k = 54;
k.salt = 54;
kcommaaccent = 54;
lslash = 20;
one = 9;
schwa = -28;
six = -19;
zero = -12;
};
Nacute = {
germandbls = -21;
k = 54;
k.salt = 54;
};
Ncaron = {
germandbls = -21;
k = 54;
k.salt = 54;
};
Ncommaaccent = {
germandbls = -21;
k = 54;
k.salt = 54;
};
Ndotaccent = {
germandbls = -21;
k = 54;
k.salt = 54;
};
Ntilde = {
germandbls = -21;
k = 54;
k.salt = 54;
};
O = {
itilde = 11;
};
P = {
X = -48;
a.salt = -24;
ampersand = -18;
asterisk = 11;
at = -26;
c.salt = -57;
four = -21;
germandbls = -15;
hbar = 22;
hcircumflex = 9;
icircumflex = 13;
idotless = -9;
iogonek = -9;
itilde = 46;
k = 6;
k.salt = 7;
kcommaaccent = 7;
m = -41;
nine = 7;
q = -67;
registered = -22;
s.salt = -43;
schwa = -44;
slash = -51;
space = -25;
x = -8;
};
Q = {
itilde = 11;
};
R = {
apostrophemod = -12;
four = -29;
one = 19;
schwa = -29;
seven = 37;
two = 25;
};
R.salt = {
V = -26;
apostrophemod = -19;
backslash = -17;
c.salt = -24;
four = -23;
p = -15;
q = -23;
registered = -12;
schwa = -13;
seven = 10;
v = -29;
};
S = {
germandbls = 1;
itilde = 22;
k = 27;
k.salt = 27;
kcommaaccent = 27;
lslash = 1;
};
Sacute = {
germandbls = 1;
k = 27;
k.salt = 27;
lslash = 1;
};
Scaron = {
germandbls = 1;
k = 27;
k.salt = 27;
kcommaaccent = 27;
};
Scedilla = {
germandbls = 1;
k = 27;
k.salt = 27;
};
Scircumflex = {
germandbls = 1;
k = 27;
k.salt = 27;
};
Scommaaccent = {
germandbls = 1;
k = 27;
k.salt = 27;
};
T = {
abreve = -101;
acircumflex = -86;
adieresis = -69;
at = -47;
atilde = -88;
ccaron = -114;
ccircumflex = -122;
ecaron = -113;
ecircumflex = -117;
edieresis = -99;
etilde = -80;
four = -44;
gbreve = -113;
gcircumflex = -113;
gdotaccent = -133;
germandbls = -27;
icircumflex = -9;
idieresis = -4;
idotless = -77;
iogonek = -77;
itilde = 7;
jcircumflex = -19;
k = 49;
k.salt = 49;
kcommaaccent = 49;
lslash = 15;
ocircumflex = -126;
odieresis = -116;
otilde = -111;
rcaron = -47;
scaron = -68;
schwa = -115;
scircumflex = -87;
six = -20;
utilde = -59;
zcaron = -78;
};
Tbar = {
germandbls = -27;
k = 49;
k.salt = 49;
};
Tcaron = {
germandbls = -27;
k = 49;
k.salt = 49;
};
Tcedilla = {
abreve = -101;
acircumflex = -86;
germandbls = -27;
icircumflex = -9;
k = 49;
k.salt = 49;
};
Tcommaaccent = {
abreve = -101;
acircumflex = -86;
germandbls = -27;
icircumflex = -9;
k = 49;
k.salt = 49;
};
Thorn = {
M = -25;
V = -31;
X = -77;
backslash = -19;
braceright = -25;
bracketright = -25;
c.salt = -5;
one = -21;
parenright = -19;
q = -7;
seven = -29;
slash = -28;
u = 7;
};
U = {
at = -21;
f_f_h = -17;
germandbls = -31;
schwa = -23;
six = -15;
};
Uacute = {
f_f_h = -17;
germandbls = -31;
};
Ubreve = {
f_f_h = -17;
germandbls = -31;
};
Ucircumflex = {
f_f_h = -17;
germandbls = -31;
};
Udieresis = {
f_f_h = -17;
germandbls = -31;
};
Ugrave = {
f_f_h = -17;
germandbls = -31;
};
Uhungarumlaut = {
f_f_h = -17;
germandbls = -31;
};
Umacron = {
f_f_h = -17;
germandbls = -31;
};
Uogonek = {
f_f_h = -17;
germandbls = -31;
};
Uring = {
f_f_h = -17;
germandbls = -31;
};
Utilde = {
f_f_h = -17;
germandbls = -31;
};
V = {
a.salt = -96;
asterisk = 63;
at = -51;
backslash = 36;
braceright = 17;
bracketright = 19;
c.salt = -115;
eth = -108;
four = -35;
germandbls = -29;
hcircumflex = -3;
m = -67;
nine = 19;
one = 31;
p = -71;
parenright = 12;
q = -119;
question = 18;
registered = -49;
s.salt = -109;
schwa = -96;
seven = 29;
six = -23;
slash = -56;
space = -26;
trademark = 55;
two = 6;
v = -72;
x = -76;
};
W = {
at = -51;
four = -36;
germandbls = -29;
nine = 22;
one = 23;
schwa = -96;
seven = 21;
six = -24;
two = 5;
};
Wacute = {
germandbls = -29;
};
Wcircumflex = {
germandbls = -29;
};
Wdieresis = {
germandbls = -29;
};
Wgrave = {
germandbls = -29;
};
X = {
backslash = 7;
braceright = 40;
bracketright = 40;
c.salt = -32;
four = -26;
germandbls = 1;
hcircumflex = 1;
lslash = 27;
one = 31;
p = -8;
parenright = 35;
q = -17;
schwa = -25;
seven = 49;
slash = 36;
three = 16;
trademark = 9;
two = 34;
v = -94;
};
Y = {
aringacute = -115;
at = -55;
eth = -138;
f_f_h = -70;
four = -50;
germandbls = -31;
hcircumflex = 93;
idotless = -100;
iogonek = -100;
nine = 16;
one = 35;
schwa = -131;
seven = 36;
six = -28;
};
Yacute = {
eth = -138;
f_f_h = -70;
germandbls = -31;
};
Ycircumflex = {
eth = -138;
f_f_h = -70;
germandbls = -31;
};
Ydieresis = {
eth = -138;
f_f_h = -70;
germandbls = -31;
};
Ygrave = {
eth = -138;
germandbls = -31;
};
Ytilde = {
eth = -138;
germandbls = -31;
};
Z = {
germandbls = 1;
k = 17;
k.salt = 19;
kcommaaccent = 19;
lslash = 7;
};
Zacute = {
germandbls = 1;
k = 17;
k.salt = 19;
};
Zcaron = {
germandbls = 1;
k = 17;
k.salt = 19;
};
Zdotaccent = {
germandbls = 1;
k = 17;
k.salt = 19;
lslash = 7;
};
a = {
AE = 57;
J = 25;
V = -120;
W = -132;
Z = 5;
lslash = 28;
};
a.salt = {
apostrophemod = -15;
backslash = -60;
lslash = 9;
question = -16;
slash = 5;
trademark = -12;
v = -25;
};
ampersand = {
B = 33;
D = 32;
Dcaron = 32;
Dcroat = 32;
E = 32;
Eacute = 32;
Ebreve = 32;
Ecaron = 32;
Ecircumflex = 32;
Edieresis = 32;
Edotaccent = 32;
Egrave = 32;
Emacron = 32;
Eogonek = 32;
Eth = 32;
Etilde = 32;
F = 32;
K.salt = 33;
L = 34;
Lacute = 34;
Lcaron = 33;
Lcommaaccent = 34;
Lslash = 36;
M = 19;
P = 32;
R = 31;
R.salt = 33;
Racute = 31;
Rcaron = 31;
Rcommaaccent = 31;
Thorn = 32;
V = -55;
X = 59;
f = 39;
k = 59;
k.salt = 59;
kcommaaccent = 59;
lslash = 32;
m = 21;
quoteright = -41;
v = -24;
x = 24;
};
aogonek = {
g = 34;
g.salt = 34;
j = 196;
lslash = 27;
parenright = 23;
thorn = 11;
};
apostrophemod = {
a = -16;
c.salt = -22;
d = -37;
f = -11;
q = -19;
s = -15;
s.salt = -15;
};
asterisk = {
Lcaron = 14;
V = 13;
c.salt = -10;
hcircumflex = 26;
k = 9;
k.salt = 9;
kcommaaccent = 9;
};
at = {
M = -18;
T = -48;
U = -24;
V = -52;
W = -54;
Y = -61;
};
b = {
apostrophemod = -62;
};
backslash = {
V = -59;
X = 20;
lslash = 1;
nine = -23;
quoteright = -56;
v = -26;
};
braceleft = {
Lcaron = 1;
V = 44;
X = 8;
braceleft = -12;
c.salt = -22;
four = -21;
germandbls = 8;
hcircumflex = 21;
lslash = 15;
one = 9;
p = -12;
parenleft = -17;
q = -19;
s.salt = -12;
seven = 8;
six = -21;
v = -23;
zero = -17;
};
braceright = {
braceright = -12;
};
bracketleft = {
Lcaron = 1;
V = 44;
X = 10;
c.salt = -23;
eight = -13;
four = -25;
germandbls = 8;
hcircumflex = 21;
lslash = 15;
one = 9;
parenleft = -18;
q = -20;
s.salt = -12;
seven = 9;
six = -23;
v = -22;
zero = -18;
};
c = {
M = -16;
V = -93;
W = -95;
};
c.salt = {
apostrophemod = -11;
backslash = -49;
braceright = -15;
};
ccedilla = {
j = 80;
};
comma = {
j = 32;
jcircumflex = 32;
};
d = {
AE = 31;
V = -9;
W = -12;
lslash = 21;
};
dcaron = {
asterisk = 34;
backslash = 52;
braceright = 57;
bracketright = 59;
quotedbl = 25;
quotedblleft = 27;
quotedblright = 31;
quoteleft = 27;
quoteright = 31;
quotesingle = 25;
trademark = 48;
};
degree = {
four = -41;
six = -17;
};
e = {
apostrophemod = -17;
};
eight = {
U = -12;
};
eng = {
backslash = -59;
question = -19;
trademark = -13;
v = -12;
w = -16;
};
eth = {
AE = -9;
M = -20;
U = -29;
V = -70;
W = -71;
X = -12;
Y = -76;
Z = -16;
backslash = -12;
braceright = -13;
bracketright = -12;
x = -12;
};
exclamdown = {
V = -27;
};
f = {
AE = 46;
F = 85;
M = 117;
R = 85;
S = 69;
Thorn = 85;
V = 126;
W = 163;
X = 140;
Z = 113;
ampersand = 23;
apostrophemod = 27;
asterisk = 157;
backslash = 123;
bar = 78;
braceright = 96;
bracketright = 96;
exclam = 80;
lslash = 10;
parenright = 88;
question = 118;
space = 44;
trademark = 144;
};
f_f = {
lslash = 10;
napostrophe = 191;
};
f_f_i = {
napostrophe = 8;
};
f_f_j = {
b = 15;
napostrophe = 38;
thorn = 16;
};
f_i = {
napostrophe = 8;
};
f_j = {
b = 16;
napostrophe = 38;
thorn = 16;
};
five = {
AE = -17;
V = 17;
W = 20;
four = 13;
};
four = {
A = 36;
AE = 25;
U = -13;
four = 21;
fraction = 10;
};
fraction = {
four = -22;
nine = 8;
one = -21;
seven = -25;
six = -13;
two = 6;
};
g = {
AE = 34;
Eth = -8;
J = 7;
S = 21;
V = -77;
W = -79;
comma = 6;
icircumflex = 28;
itilde = 46;
jcircumflex = 21;
lslash = 18;
quotedblbase = 17;
quotesinglbase = 17;
};
g.salt = {
eng = 16;
f = 22;
f_b = 28;
f_f = 35;
f_f_b = 35;
f_f_h = 35;
f_f_i = 35;
f_f_j = 35;
f_f_k = 35;
f_f_l = 35;
f_h = 28;
f_i = 28;
f_j = 29;
f_k = 28;
f_l = 28;
f_t = 28;
imacron = 7;
lslash = 17;
n = 16;
nacute = 16;
ncaron = 16;
ncommaaccent = 16;
ndotaccent = 16;
ntilde = 16;
p = 16;
quotedblbase = 15;
quotesinglbase = 15;
r = 18;
racute = 18;
rcaron = 18;
rcommaaccent = 18;
t = 27;
t_t = 27;
tbar = 21;
tcaron = 27;
tcedilla = 27;
tcommaaccent = 27;
u = 43;
uacute = 43;
ubreve = 43;
ucircumflex = 43;
udieresis = 43;
ugrave = 43;
uhungarumlaut = 43;
umacron = 43;
uogonek = 43;
uring = 43;
utilde = 43;
v = 38;
w = 41;
wacute = 41;
wcircumflex = 41;
wdieresis = 41;
wgrave = 41;
};
gbreve = {
comma = 6;
quotedblbase = 17;
quotesinglbase = 17;
};
gcircumflex = {
comma = 6;
quotedblbase = 17;
quotesinglbase = 17;
};
gcommaaccent = {
comma = 6;
quotedblbase = 17;
quotesinglbase = 17;
};
gdotaccent = {
comma = 6;
quotedblbase = 17;
quotesinglbase = 17;
};
germandbls = {
M = -10;
U = -48;
V = -87;
W = -88;
Y = -92;
backslash = -30;
braceright = -16;
p = -30;
question = -20;
space = -18;
v = -59;
x = -24;
};
h = {
M = -12;
V = -152;
W = -164;
Z = -7;
apostrophemod = -53;
};
hyphen = {
nine = -12;
one = -12;
seven = -13;
};
i = {
AE = 56;
V = -100;
W = -104;
lslash = 19;
};
idieresis = {
question = 14;
};
imacron = {
question = 16;
};
iogonek = {
j = 111;
};
itilde = {
question = 22;
};
jcircumflex = {
question = 13;
};
k = {
AE = 28;
V = -78;
W = -87;
apostrophemod = -46;
asterisk = -25;
backslash = -31;
c.salt = -21;
q = -20;
schwa = -11;
};
k.salt = {
apostrophemod = -61;
schwa = -18;
};
l = {
AE = 53;
V = -16;
lslash = 16;
};
lcaron = {
asterisk = 32;
b = 145;
backslash = 49;
braceright = 54;
bracketright = 57;
h = 94;
k = 105;
k.salt = 105;
l = 95;
l_l = 95;
parenright = 20;
quotedbl = 22;
quotedblleft = 25;
quotedblright = 29;
quoteleft = 25;
quoteright = 29;
quotesingle = 22;
thorn = 146;
trademark = 46;
};
lslash = {
f = 23;
f_b = 20;
f_f = 15;
f_f_b = 15;
f_f_h = 15;
f_f_i = 15;
f_f_j = 15;
f_f_k = 15;
f_f_l = 15;
f_h = 20;
f_i = 20;
f_j = 21;
f_k = 20;
f_l = 20;
f_t = 20;
germandbls = 40;
guillemetright = 13;
guilsinglright = 13;
h = 40;
i = 8;
ij = 8;
j = 6;
k = 40;
k.salt = 40;
l = 38;
l_l = 38;
lslash = 17;
n = 14;
p = 11;
question = 22;
r = 14;
t = 16;
t_t = 16;
t_z = 7;
u = 26;
v = 15;
w = 24;
x = 13;
};
m = {
AE = 30;
V = -143;
W = -154;
backslash = -60;
braceright = 10;
bracketright = 11;
lslash = 20;
parenright = 16;
question = -15;
slash = 20;
v = -32;
};
minus = {
seven = -17;
};
n = {
V = -145;
W = -157;
apostrophemod = -11;
};
nine = {
A = -33;
AE = -56;
J = -24;
U = -13;
braceright = -16;
bracketright = -17;
fraction = -30;
one = -12;
seven = -15;
slash = -36;
};
numbersign = {
one = -20;
seven = -26;
};
o = {
f_f_h = -6;
};
oacute = {
f_f_h = -6;
};
obreve = {
f_f_h = -6;
};
ocircumflex = {
f_f_h = -6;
};
odieresis = {
f_f_h = -6;
};
ograve = {
f_f_h = -6;
};
ohungarumlaut = {
f_f_h = -6;
};
omacron = {
f_f_h = -6;
};
one = {
A = 55;
AE = 45;
U = -15;
X = 17;
cent = -15;
fraction = 18;
};
oslash = {
f_f_h = -6;
};
otilde = {
f_f_h = -6;
};
p = {
f_f = -6;
f_f_b = -6;
f_f_h = -6;
f_f_i = -6;
f_f_j = -6;
f_f_k = -6;
f_f_l = -6;
};
parenleft = {
V = 42;
X = 7;
c.salt = -16;
four = -15;
germandbls = 1;
k = 37;
k.salt = 38;
kcommaaccent = 38;
lslash = 13;
q = -15;
six = -12;
v = -15;
};
parenright = {
braceright = -16;
bracketright = -17;
};
periodcentered = {
L = -11;
l = -50;
one = -12;
seven = -17;
};
plus = {
seven = -18;
};
q = {
M = -12;
V = -76;
W = -84;
Z = -12;
backslash = -32;
j = 105;
jcircumflex = 99;
};
questiondown = {
V = -49;
X = 13;
v = -14;
};
quotedbl = {
germandbls = 1;
hcircumflex = 29;
k = 23;
k.salt = 23;
kcommaaccent = 23;
lslash = 1;
};
quotedblleft = {
hcircumflex = 35;
k = 20;
k.salt = 22;
kcommaaccent = 22;
};
quotedblright = {
germandbls = 1;
hcircumflex = 32;
k = 33;
k.salt = 33;
kcommaaccent = 33;
lslash = 1;
};
quoteleft = {
hcircumflex = 35;
k = 20;
k.salt = 22;
kcommaaccent = 22;
};
quoteright = {
at = -16;
germandbls = 1;
hcircumflex = 32;
k = 33;
k.salt = 33;
kcommaaccent = 33;
lslash = 1;
registered = -15;
slash = -58;
space = -30;
};
quotesingle = {
germandbls = 1;
hcircumflex = 30;
k = 23;
k.salt = 23;
kcommaaccent = 23;
lslash = 1;
};
r = {
J = -6;
M = -24;
S = -9;
V = -94;
W = -101;
X = -15;
Z = -23;
};
registered = {
M = -17;
V = -51;
};
s = {
M = -16;
V = -95;
W = -101;
};
s.salt = {
backslash = -43;
braceright = -22;
bracketright = -17;
};
semicolon = {
j = 26;
jcircumflex = 26;
};
seven = {
A = -57;
AE = -84;
J = -48;
M = 32;
N = 33;
T = 34;
U = 35;
V = 82;
W = 87;
X = 44;
Y = 80;
backslash = 27;
braceright = 26;
bracketright = 27;
cent = -26;
degree = 5;
four = -45;
fraction = -70;
hyphen = -39;
minus = -15;
numbersign = -41;
one = 29;
periodcentered = -21;
plus = -12;
seven = 22;
six = -31;
slash = -72;
};
six = {
A = 6;
J = 14;
T = -28;
U = -14;
backslash = -21;
bracketright = -13;
four = 23;
nine = -19;
};
slash = {
V = 48;
X = 11;
a.salt = -48;
c.salt = -60;
f = -14;
four = -46;
germandbls = 1;
hcircumflex = 29;
k = 46;
k.salt = 46;
kcommaaccent = 46;
lslash = 15;
m = -33;
p = -24;
q = -61;
s.salt = -56;
six = -33;
slash = -200;
v = -24;
x = -27;
};
space = {
Aringacute = -42;
V = -32;
lslash = -22;
quoteright = -30;
v = -22;
};
t = {
M = -8;
V = -89;
W = -91;
apostrophemod = -35;
};
t_t = {
c.salt = -7;
q = -5;
};
tcaron = {
j = 6;
n = 9;
ncaron = 9;
p = 15;
r = 14;
t = 13;
t_t = 13;
tcaron = 13;
u = 13;
uacute = 13;
uring = 13;
v = 13;
w = 9;
};
three = {
AE = -26;
};
trademark = {
Eng = 17;
Lcaron = 26;
M = 33;
N = 18;
Nacute = 18;
Ncaron = 18;
Ncommaaccent = 18;
Ndotaccent = 18;
Ntilde = 18;
V = 68;
X = 40;
c.salt = -12;
germandbls = 1;
hcircumflex = 47;
icircumflex = 13;
itilde = 28;
jcircumflex = 7;
k.salt = 62;
kcommaaccent = 62;
lslash = 37;
p = 9;
v = 16;
};
two = {
A = 14;
AE = 7;
J = 11;
U = -13;
};
u = {
AE = 41;
V = -142;
W = -152;
lslash = 22;
};
uogonek = {
j = 129;
};
v = {
AE = -74;
J = -43;
M = -25;
S = -9;
V = -82;
W = -84;
X = -82;
Z = -36;
backslash = -33;
braceright = -32;
bracketright = -25;
parenright = -17;
q = -9;
slash = -24;
space = -20;
};
w = {
AE = -69;
J = -33;
M = -26;
S = -10;
V = -86;
W = -88;
X = -85;
Z = -36;
};
x = {
V = -91;
W = -100;
backslash = -42;
braceright = 7;
bracketright = 5;
c.salt = -42;
parenright = 5;
q = -41;
schwa = -9;
slash = 5;
v = -15;
};
y = {
AE = -67;
J = -49;
M = -28;
S = -15;
V = -86;
W = -94;
X = -75;
Z = -44;
};
z = {
M = -11;
V = -105;
W = -113;
};
zero = {
AE = -22;
M = -12;
U = -14;
braceright = -17;
bracketright = -18;
slash = -12;
};
};
};
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
}
);
properties = (
{
key = copyrights;
values = (
{
language = ENG;
value = "Copyright 2012 The Life Savers Project Authors (https://github.com/googlefonts/life-savers)";
}
);
},
{
key = designers;
values = (
{
language = ENG;
value = "Pablo Impallari, Rodrigo Fuenzalida, Brenda Gallo";
}
);
},
{
key = designerURL;
value = www.impallari.com;
},
{
key = licenses;
values = (
{
language = ENG;
value = "This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: https://openfontlicense.org";
}
);
},
{
key = licenseURL;
value = "https://openfontlicense.org";
},
{
key = manufacturers;
values = (
{
language = ENG;
value = "Pablo Impallari, Rodrigo Fuenzalida, Brenda Gallo";
}
);
},
{
key = manufacturerURL;
value = www.impallari.com;
},
{
key = trademarks;
values = (
{
language = ENG;
value = "Life Savers is a trademark of Pablo Impallari.";
}
);
}
);
unitsPerEm = 1000;
versionMajor = 3;
versionMinor = 100;
}
