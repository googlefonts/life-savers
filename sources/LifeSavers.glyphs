{
.appVersion = "3309";
.formatVersion = 3;
axes = (
{
name = Weight;
tag = wght;
}
);
customParameters = (
{
name = panose;
value = (
3,
5,
9,
2,
4,
3,
2,
0,
0,
4
);
},
{
name = fsType;
value = (
);
},
{
name = "Use Typo Metrics";
value = 1;
},
{
name = "Enforce Compatibility Check";
value = 0;
}
);
date = "2013-08-22 21:28:00 +0000";
familyName = "Life Savers";
featurePrefixes = (
{
automatic = 1;
code = "languagesystem DFLT dflt;

languagesystem latn dflt;
languagesystem latn CAT;
";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature locl;
feature subs;
feature sinf;
feature sups;
feature frac;
feature ordn;
feature salt;
feature ss01;
";
tag = aalt;
},
{
automatic = 1;
code = "script latn;
language CAT;
lookup locl_latn_0 {
	sub  l' periodcentered' l by ldot;
	sub  L' periodcentered' L by Ldot;
} locl_latn_0;
";
tag = locl;
},
{
automatic = 1;
code = "sub zero by zeroinferior;
sub one by oneinferior;
sub two by twoinferior;
sub three by threeinferior;
sub four by fourinferior;
sub five by fiveinferior;
sub six by sixinferior;
sub seven by seveninferior;
sub eight by eightinferior;
sub nine by nineinferior;
";
tag = subs;
},
{
automatic = 1;
code = "sub zero by zeroinferior;
sub one by oneinferior;
sub two by twoinferior;
sub three by threeinferior;
sub four by fourinferior;
sub five by fiveinferior;
sub six by sixinferior;
sub seven by seveninferior;
sub eight by eightinferior;
sub nine by nineinferior;
";
tag = sinf;
},
{
automatic = 1;
code = "sub zero by zerosuperior;
sub one by onesuperior;
sub two by twosuperior;
sub three by threesuperior;
sub four by foursuperior;
sub five by fivesuperior;
sub six by sixsuperior;
sub seven by sevensuperior;
sub eight by eightsuperior;
sub nine by ninesuperior;
";
tag = sups;
},
{
automatic = 1;
code = "sub one slash eight by oneeighth;
sub one slash four by onequarter;
sub three slash eight by threeeighths;
sub one slash two by onehalf;
sub five slash eight by fiveeighths;
sub three slash four by threequarters;
sub seven slash eight by seveneighths;
sub one slash three by onethird;
sub two slash three by twothirds;
";
tag = frac;
},
{
automatic = 1;
code = "sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;
sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;
";
tag = ordn;
},
{
automatic = 1;
code = "lookupflag IgnoreMarks;
sub f f b by f_f_b;
sub f f h by f_f_h;
sub f f j by f_f_j;
sub f f k by f_f_k;
sub c h by c_h;
sub c k by c_k;
sub c p by c_p;
sub c t by c_t;
sub f b by f_b;
sub f h by f_h;
sub f j by f_j;
sub f k by f_k;
sub f t by f_t;
sub l l by l_l;
sub s p by s_p;
sub s t by s_t;
sub t t by t_t;
sub t z by t_z;
";
tag = dlig;
},
{
code = "lookupflag IgnoreMarks;
sub f f i by f_f_i;
sub f f l by f_f_l;
sub f f by f_f;
sub f i by fi;
sub f l by fl;
";
tag = liga;
},
{
code = "script latn;
language dflt;
lookup SUB_2 {
	sub K by K.salt;
	sub R by R.salt;
	sub a by a.salt;
	sub c by c.salt;
	sub g by g.salt;
	sub k by k.salt;
	sub s by s.salt;
} SUB_2;
";
tag = salt;
},
{
code = "script latn;
language dflt;
lookup SUB_3 {
	sub K by K.salt;
	sub R by R.salt;
	sub a by a.salt;
	sub c by c.salt;
	sub g by g.salt;
	sub k by k.salt;
	sub s by s.salt;
} SUB_3;
";
labels = (
{
language = dflt;
value = "";
}
);
tag = ss01;
}
);
fontMaster = (
{
axesValues = (
400
);
customParameters = (
{
name = typoAscender;
value = 972;
},
{
name = typoDescender;
value = -250;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 972;
},
{
name = winDescent;
value = 250;
},
{
name = hheaAscender;
value = 972;
},
{
name = hheaDescender;
value = -250;
},
{
name = strikeoutPosition;
value = 250;
},
{
name = strikeoutSize;
value = 50;
},
{
name = "prep Table Assembly";
value = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
200
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 1
INSTCTRL[ ]	/* SetInstrExecControl */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
2048 2048
MUL[ ]	/* Multiply */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
3
SWAP[ ]	/* SwapTopStack */
WCVTF[ ]	/* WriteCVTInFUnits */
PUSHB[ ]	/* 1 value pushed */
23
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
14
LTEQ[ ]	/* LessThenOrEqual */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
6
GTEQ[ ]	/* GreaterThanOrEqual */
AND[ ]	/* LogicalAnd */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
52
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
40
EIF[ ]	/* EndIf */
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
2
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 3 values pushed */
11 1 6
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 3 values pushed */
12 6 6
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 3 values pushed */
20 6 6
LOOPCALL[ ]	/* LoopAndCallFunction */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 40 9
RCVT[ ]	/* ReadCVT */
GT[ ]	/* GreaterThan */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 3 values pushed */
12 8 7
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
6 1
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 2 values pushed */
36 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
GETINFO[ ]	/* GetInfo */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
6 3
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 2 values pushed */
38 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1024
GETINFO[ ]	/* GetInfo */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
6 1
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
511
SCANCTRL[ ]	/* ScanConversionControl */
PUSHB[ ]	/* 1 value pushed */
4
SCANTYPE[ ]	/* ScanType */
PUSHB[ ]	/* 2 values pushed */
5 0
WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */
0
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192
LT[ ]	/* LessThan */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
AND[ ]	/* LogicalAnd */
PUSHB[ ]	/* 1 value pushed */
4
RCVT[ ]	/* ReadCVT */
OR[ ]	/* LogicalOr */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
ROLL[ ]	/* RollTopThreeStack */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
80
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
56
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
56
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
11
RCVT[ ]	/* ReadCVT */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
40
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
11
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
48
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
48
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
10
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
54
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
54
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
2
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
3
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 2 values pushed */
5 98
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
11 1 2
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
48 5
CINDEX[ ]	/* CopyXToTopStack */
ROLL[ ]	/* RollTopThreeStack */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
ADD[ ]	/* Add */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
SUB[ ]	/* Subtract */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
EIF[ ]	/* EndIf */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
4
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 3 values pushed */
0 2 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
5
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
6
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 2 values pushed */
8 4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
0
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
48
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 5
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
9
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
9
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
9
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
10
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHW[ ]	/* 1 value pushed */
1024
MUL[ ]	/* Multiply */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
11
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
11
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
7 1
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
DEPTH[ ]	/* GetDepthStack */
PUSHB[ ]	/* 1 value pushed */
13
NEG[ ]	/* Negate */
SWAP[ ]	/* SwapTopStack */
JROT[ ]	/* JumpRelativeOnTrue */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
12
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
MPPEM[ ]	/* MeasurePixelPerEm */
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
7 1
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
DEPTH[ ]	/* GetDepthStack */
PUSHB[ ]	/* 1 value pushed */
19
NEG[ ]	/* Negate */
SWAP[ ]	/* SwapTopStack */
JROT[ ]	/* JumpRelativeOnTrue */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
13
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 12
RS[ ]	/* ReadStore */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
12 12
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
9 2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
10 2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
9
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
9
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
9
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
0 0
SZP0[ ]	/* SetZonePointer0 */
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
0
MIAP[0]	/* MoveIndirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
1 1 1
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
14
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
12
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 6 values pushed */
13 13 1 0 11 0
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
13 5
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
109
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
15
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
16
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
17
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
18
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
3 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
19
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
4 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
20
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
21
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
6 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
22
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
7 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
23
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
24
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
9 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
25
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
12
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 6 values pushed */
13 13 1 0 11 0
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
13 5
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
109
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
26
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
27
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
28
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
29
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
3 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
30
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
4 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
31
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
6 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
33
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
7 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
34
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
35
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
9 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
36
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
37
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
13
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
36
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
38
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
37
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
37
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
39
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
40
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
39
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 1 value pushed */
1
SZP2[ ]	/* SetZonePointer2 */
IUP[0]	/* InterpolateUntPts */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
41
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
39
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 1 value pushed */
1
SZP2[ ]	/* SetZonePointer2 */
IUP[0]	/* InterpolateUntPts */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
42
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
SHC[1]	/* ShiftContourByLastPt */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
43
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 5 values pushed */
0 0 0 0 0
WCVTP[ ]	/* WriteCVTInPixels */
MIAP[0]	/* MoveIndirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
42 1
SZP2[ ]	/* SetZonePointer2 */
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
44
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
45
FDEF[ ]	/* FunctionDefinition */
MDAP[0]	/* MoveDirectAbsPt */
SLOOP[ ]	/* SetLoopVariable */
ALIGNRP[ ]	/* AlignRelativePt */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
46
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 0
SZPS[ ]	/* SetZonePointerS */
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
IF[ ]	/* If */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
46 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
NEG[ ]	/* Negate */
ROLL[ ]	/* RollTopThreeStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
2 32 3 32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
2 38 3 26
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
0
EQ[ ]	/* Equal */
IF[ ]	/* If */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
IF[ ]	/* If */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
32
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
54
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
55
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
56
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
57
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
58
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
CALL[ ]	/* CallFunction */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
38
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
59
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
60
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 4
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
2 32 3 32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
2 38 3 26
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
61
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
62
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
CALL[ ]	/* CallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
38
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
63
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
44
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
64
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
44
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
65
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 1
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
PUSHB[ ]	/* 1 value pushed */
45
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
66
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
67
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
RCVT[ ]	/* ReadCVT */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
68
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
69
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
70
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
71
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
72
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
73
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
74
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
75
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
76
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
77
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
78
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
79
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
80
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
81
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
82
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
83
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
84
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
85
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
86
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
87
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
88
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
89
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
90
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
91
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
92
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
93
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
94
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
95
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
96
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
97
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
98
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
99
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
100
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
101
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
102
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
103
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
104
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
105
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
106
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
107
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
108
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
109
FDEF[ ]	/* FunctionDefinition */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
8
NEG[ ]	/* Negate */
PUSHB[ ]	/* 1 value pushed */
3
DEPTH[ ]	/* GetDepthStack */
LT[ ]	/* LessThan */
JROT[ ]	/* JumpRelativeOnTrue */
PUSHB[ ]	/* 1 value pushed */
1
SZP2[ ]	/* SetZonePointer2 */
IUP[0]	/* InterpolateUntPts */
ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    44,
    30,
    44,
    30,
    821,
    0,
    817,
    436,
    \"-2\",
    \"-202\",
    972,
    \"-250\",
    838,
    \"-14\",
    817,
    475,
    \"-11\",
    \"-221\",
    972,
    \"-250\"
)";
}
);
id = "E59D8378-1062-4241-9A8F-EEB295F00E05";
metricValues = (
{
pos = 972;
},
{
pos = 821;
},
{
pos = 436;
},
{
},
{
pos = -250;
},
{
}
);
name = Regular;
},
{
axesValues = (
700
);
customParameters = (
{
name = typoAscender;
value = 972;
},
{
name = typoDescender;
value = -250;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 972;
},
{
name = winDescent;
value = 250;
},
{
name = hheaAscender;
value = 972;
},
{
name = hheaDescender;
value = -250;
},
{
name = strikeoutPosition;
value = 250;
},
{
name = strikeoutSize;
value = 50;
},
{
name = "prep Table Assembly";
value = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
200
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 1
INSTCTRL[ ]	/* SetInstrExecControl */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
2048 2048
MUL[ ]	/* Multiply */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
3
SWAP[ ]	/* SwapTopStack */
WCVTF[ ]	/* WriteCVTInFUnits */
PUSHB[ ]	/* 1 value pushed */
23
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
14
LTEQ[ ]	/* LessThenOrEqual */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
6
GTEQ[ ]	/* GreaterThanOrEqual */
AND[ ]	/* LogicalAnd */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
52
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
40
EIF[ ]	/* EndIf */
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
2
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 3 values pushed */
11 1 6
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 3 values pushed */
12 6 6
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 3 values pushed */
20 6 6
LOOPCALL[ ]	/* LoopAndCallFunction */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 40 9
RCVT[ ]	/* ReadCVT */
GT[ ]	/* GreaterThan */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 3 values pushed */
12 8 7
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
6 1
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 2 values pushed */
36 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
GETINFO[ ]	/* GetInfo */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
6 3
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 2 values pushed */
38 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1024
GETINFO[ ]	/* GetInfo */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
6 1
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
511
SCANCTRL[ ]	/* ScanConversionControl */
PUSHB[ ]	/* 1 value pushed */
4
SCANTYPE[ ]	/* ScanType */
PUSHB[ ]	/* 2 values pushed */
5 0
WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */
0
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192
LT[ ]	/* LessThan */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
AND[ ]	/* LogicalAnd */
PUSHB[ ]	/* 1 value pushed */
4
RCVT[ ]	/* ReadCVT */
OR[ ]	/* LogicalOr */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
ROLL[ ]	/* RollTopThreeStack */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
80
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
56
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
56
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
11
RCVT[ ]	/* ReadCVT */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
40
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
11
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
48
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
48
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
10
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
54
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
54
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
2
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
3
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 2 values pushed */
5 98
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
11 1 2
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
48 5
CINDEX[ ]	/* CopyXToTopStack */
ROLL[ ]	/* RollTopThreeStack */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
ADD[ ]	/* Add */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
SUB[ ]	/* Subtract */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
EIF[ ]	/* EndIf */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
4
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 3 values pushed */
0 2 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
5
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
6
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 2 values pushed */
8 4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
0
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
48
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 5
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
9
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
9
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
9
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
10
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHW[ ]	/* 1 value pushed */
1024
MUL[ ]	/* Multiply */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
11
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
11
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
7 1
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
DEPTH[ ]	/* GetDepthStack */
PUSHB[ ]	/* 1 value pushed */
13
NEG[ ]	/* Negate */
SWAP[ ]	/* SwapTopStack */
JROT[ ]	/* JumpRelativeOnTrue */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
12
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
MPPEM[ ]	/* MeasurePixelPerEm */
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
7 1
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
DEPTH[ ]	/* GetDepthStack */
PUSHB[ ]	/* 1 value pushed */
19
NEG[ ]	/* Negate */
SWAP[ ]	/* SwapTopStack */
JROT[ ]	/* JumpRelativeOnTrue */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
13
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 12
RS[ ]	/* ReadStore */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
12 12
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
9 2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
10 2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
9
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
9
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
9
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
0 0
SZP0[ ]	/* SetZonePointer0 */
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
0
MIAP[0]	/* MoveIndirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
1 1 1
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
14
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
12
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 6 values pushed */
13 13 1 0 11 0
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
13 5
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
109
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
15
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
16
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
17
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
18
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
3 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
19
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
4 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
20
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
21
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
6 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
22
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
7 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
23
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
24
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
9 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
25
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
12
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 6 values pushed */
13 13 1 0 11 0
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
13 5
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
109
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
26
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
27
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
28
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
29
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
3 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
30
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
4 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
31
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
6 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
33
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
7 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
34
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
35
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
9 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
36
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
37
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
13
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
36
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
38
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
37
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
37
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
39
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
40
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
39
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 1 value pushed */
1
SZP2[ ]	/* SetZonePointer2 */
IUP[0]	/* InterpolateUntPts */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
41
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
39
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 1 value pushed */
1
SZP2[ ]	/* SetZonePointer2 */
IUP[0]	/* InterpolateUntPts */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
42
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
SHC[1]	/* ShiftContourByLastPt */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
43
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 5 values pushed */
0 0 0 0 0
WCVTP[ ]	/* WriteCVTInPixels */
MIAP[0]	/* MoveIndirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
42 1
SZP2[ ]	/* SetZonePointer2 */
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
44
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
45
FDEF[ ]	/* FunctionDefinition */
MDAP[0]	/* MoveDirectAbsPt */
SLOOP[ ]	/* SetLoopVariable */
ALIGNRP[ ]	/* AlignRelativePt */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
46
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 0
SZPS[ ]	/* SetZonePointerS */
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
IF[ ]	/* If */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
46 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
NEG[ ]	/* Negate */
ROLL[ ]	/* RollTopThreeStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
2 32 3 32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
2 38 3 26
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
0
EQ[ ]	/* Equal */
IF[ ]	/* If */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
IF[ ]	/* If */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
32
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
54
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
55
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
56
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
57
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
58
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
CALL[ ]	/* CallFunction */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
38
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
59
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
60
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 4
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
2 32 3 32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
2 38 3 26
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
61
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
62
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
CALL[ ]	/* CallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
38
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
63
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
44
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
64
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
44
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
65
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 1
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
PUSHB[ ]	/* 1 value pushed */
45
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
66
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
67
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
RCVT[ ]	/* ReadCVT */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
68
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
69
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
70
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
71
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
72
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
73
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
74
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
75
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
76
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
77
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
78
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
79
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
80
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
81
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
82
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
83
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
84
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
85
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
86
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
87
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
88
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
89
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
90
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
91
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
92
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
93
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
94
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
95
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
96
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
97
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
98
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
99
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
100
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
101
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
102
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
103
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
104
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
105
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
106
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
107
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
108
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
109
FDEF[ ]	/* FunctionDefinition */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
8
NEG[ ]	/* Negate */
PUSHB[ ]	/* 1 value pushed */
3
DEPTH[ ]	/* GetDepthStack */
LT[ ]	/* LessThan */
JROT[ ]	/* JumpRelativeOnTrue */
PUSHB[ ]	/* 1 value pushed */
1
SZP2[ ]	/* SetZonePointer2 */
IUP[0]	/* InterpolateUntPts */
ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    74,
    60,
    74,
    60,
    821,
    0,
    817,
    436,
    \"-2\",
    \"-202\",
    972,
    \"-250\",
    838,
    \"-14\",
    817,
    475,
    \"-11\",
    \"-233\",
    972,
    \"-250\"
)";
}
);
iconName = Bold;
id = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
metricValues = (
{
pos = 972;
},
{
pos = 821;
},
{
pos = 436;
},
{
},
{
pos = -250;
},
{
}
);
name = Bold;
},
{
axesValues = (
800
);
customParameters = (
{
name = typoAscender;
value = 972;
},
{
name = typoDescender;
value = -250;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 972;
},
{
name = winDescent;
value = 250;
},
{
name = hheaAscender;
value = 972;
},
{
name = hheaDescender;
value = -250;
},
{
name = strikeoutPosition;
value = 250;
},
{
name = strikeoutSize;
value = 50;
},
{
name = "prep Table Assembly";
value = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
200
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 1
INSTCTRL[ ]	/* SetInstrExecControl */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
2048 2048
MUL[ ]	/* Multiply */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
3
SWAP[ ]	/* SwapTopStack */
WCVTF[ ]	/* WriteCVTInFUnits */
PUSHB[ ]	/* 1 value pushed */
23
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
14
LTEQ[ ]	/* LessThenOrEqual */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
6
GTEQ[ ]	/* GreaterThanOrEqual */
AND[ ]	/* LogicalAnd */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
52
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
40
EIF[ ]	/* EndIf */
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
2
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 3 values pushed */
11 1 6
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 3 values pushed */
12 6 6
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 3 values pushed */
20 6 6
LOOPCALL[ ]	/* LoopAndCallFunction */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 40 9
RCVT[ ]	/* ReadCVT */
GT[ ]	/* GreaterThan */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 3 values pushed */
12 8 7
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
6 1
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 2 values pushed */
36 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
GETINFO[ ]	/* GetInfo */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
6 3
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 2 values pushed */
38 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1024
GETINFO[ ]	/* GetInfo */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
6 1
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
511
SCANCTRL[ ]	/* ScanConversionControl */
PUSHB[ ]	/* 1 value pushed */
4
SCANTYPE[ ]	/* ScanType */
PUSHB[ ]	/* 2 values pushed */
5 0
WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */
0
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192
LT[ ]	/* LessThan */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
AND[ ]	/* LogicalAnd */
PUSHB[ ]	/* 1 value pushed */
4
RCVT[ ]	/* ReadCVT */
OR[ ]	/* LogicalOr */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
ROLL[ ]	/* RollTopThreeStack */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
80
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
56
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
56
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
11
RCVT[ ]	/* ReadCVT */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
40
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
11
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
48
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
48
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
10
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
54
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
54
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
2
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
3
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 2 values pushed */
5 98
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
11 1 2
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
48 5
CINDEX[ ]	/* CopyXToTopStack */
ROLL[ ]	/* RollTopThreeStack */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
ADD[ ]	/* Add */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
SUB[ ]	/* Subtract */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
EIF[ ]	/* EndIf */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
4
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 3 values pushed */
0 2 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
5
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
6
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 2 values pushed */
8 4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
0
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
48
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 5
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
9
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
9
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
9
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
10
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHW[ ]	/* 1 value pushed */
1024
MUL[ ]	/* Multiply */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
11
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
11
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
7 1
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
DEPTH[ ]	/* GetDepthStack */
PUSHB[ ]	/* 1 value pushed */
13
NEG[ ]	/* Negate */
SWAP[ ]	/* SwapTopStack */
JROT[ ]	/* JumpRelativeOnTrue */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
12
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
MPPEM[ ]	/* MeasurePixelPerEm */
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
7 1
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
DEPTH[ ]	/* GetDepthStack */
PUSHB[ ]	/* 1 value pushed */
19
NEG[ ]	/* Negate */
SWAP[ ]	/* SwapTopStack */
JROT[ ]	/* JumpRelativeOnTrue */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
13
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 12
RS[ ]	/* ReadStore */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
12 12
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
9 2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
10 2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
9
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
9
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
9
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
0 0
SZP0[ ]	/* SetZonePointer0 */
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
0
MIAP[0]	/* MoveIndirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
1 1 1
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
14
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
12
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 6 values pushed */
13 13 1 0 11 0
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
13 5
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
109
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
15
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
16
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
17
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
18
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
3 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
19
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
4 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
20
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
21
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
6 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
22
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
7 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
23
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
24
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
9 14
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
25
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
12
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 6 values pushed */
13 13 1 0 11 0
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
13 5
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
109
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
26
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
27
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
28
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
29
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
3 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
30
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
4 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
31
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
6 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
33
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
7 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
34
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
35
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
9 25
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
36
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
37
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
13
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
36
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
38
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
37
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
37
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
39
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
40
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
39
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 1 value pushed */
1
SZP2[ ]	/* SetZonePointer2 */
IUP[0]	/* InterpolateUntPts */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
41
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
0 5
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
39
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 1 value pushed */
1
SZP2[ ]	/* SetZonePointer2 */
IUP[0]	/* InterpolateUntPts */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
42
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
SHC[1]	/* ShiftContourByLastPt */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
43
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 5 values pushed */
0 0 0 0 0
WCVTP[ ]	/* WriteCVTInPixels */
MIAP[0]	/* MoveIndirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
42 1
SZP2[ ]	/* SetZonePointer2 */
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
44
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
45
FDEF[ ]	/* FunctionDefinition */
MDAP[0]	/* MoveDirectAbsPt */
SLOOP[ ]	/* SetLoopVariable */
ALIGNRP[ ]	/* AlignRelativePt */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
46
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 0
SZPS[ ]	/* SetZonePointerS */
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
IF[ ]	/* If */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
46 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
NEG[ ]	/* Negate */
ROLL[ ]	/* RollTopThreeStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
2 32 3 32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
2 38 3 26
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
0
EQ[ ]	/* Equal */
IF[ ]	/* If */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
IF[ ]	/* If */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
32
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
54
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
55
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
56
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
57
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
58
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
CALL[ ]	/* CallFunction */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
38
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
59
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
60
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 4
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
2 32 3 32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
2 38 3 26
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
3
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
128
DIV[ ]	/* Divide */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
61
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
62
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
CALL[ ]	/* CallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
4
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
38
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
63
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
44
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
64
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
44
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
65
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 1
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
PUSHB[ ]	/* 1 value pushed */
45
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
66
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
67
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
RCVT[ ]	/* ReadCVT */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
68
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
69
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
70
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
71
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
72
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 60
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
73
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
74
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
75
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
76
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 61
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
77
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
78
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
79
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
80
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 57
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
81
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
82
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
83
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
84
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 59
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
85
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
86
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
87
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
88
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 62
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
89
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
90
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
91
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
92
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 58
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
93
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
94
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
95
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
96
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
50
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
97
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
98
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
99
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
100
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
101
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
102
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
103
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
104
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
105
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
38 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
106
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
54
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
107
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
55
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
108
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
56
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
109
FDEF[ ]	/* FunctionDefinition */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
8
NEG[ ]	/* Negate */
PUSHB[ ]	/* 1 value pushed */
3
DEPTH[ ]	/* GetDepthStack */
LT[ ]	/* LessThan */
JROT[ ]	/* JumpRelativeOnTrue */
PUSHB[ ]	/* 1 value pushed */
1
SZP2[ ]	/* SetZonePointer2 */
IUP[0]	/* InterpolateUntPts */
ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    95,
    78,
    95,
    78,
    821,
    0,
    817,
    436,
    \"-2\",
    \"-202\",
    972,
    \"-250\",
    838,
    \"-14\",
    817,
    475,
    \"-11\",
    \"-240\",
    972,
    \"-250\"
)";
}
);
id = m01;
metricValues = (
{
pos = 972;
},
{
pos = 821;
},
{
pos = 436;
},
{
},
{
pos = -250;
},
{
}
);
name = ExtraBold;
}
);
glyphs = (
{
glyphname = A;
kernLeft = Aacute;
kernRight = Aacute;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(402,823.667,o),
(387,838,o),
(359,838,cs),
(324.333,838,o),
(314.333,822.667,o),
(305,792,cs),
(284.502,726.405,o),
(251.09,598.326,o),
(213,460,cs),
(175.492,323.786,o),
(134.319,181.005,o),
(107,101,cs),
(97.667,74.333,o),
(82,65.667,o),
(58,63,cs),
(54.446,63,o),
(35.539,57,o),
(1,57,cs),
(-12.333,57,o),
(-28,47.333,o),
(-28,30,cs),
(-28,11.333,o),
(-17,0,o),
(-5,0,cs),
(273,0,ls),
(299.667,0,o),
(307,14.333,o),
(307,29,cs),
(307,53,o),
(295.333,61,o),
(274,61,cs),
(250.667,61,o),
(232.833,62.333,o),
(220.5,65,cs),
(208.167,67.667,o),
(202,71.667,o),
(202,77,cs),
(202,98.202,o),
(218.883,167.573,o),
(238,214,c),
(470,214,l),
(467.773,222.165,o),
(517,58.814,o),
(517,35,cs),
(517,-16.343,o),
(464,4.508,o),
(464,-33,cs),
(464,-43.667,o),
(471,-55,o),
(495,-55,cs),
(742,-55,ls),
(764.667,-55,o),
(777,-49,o),
(777,-25,cs),
(777,-2.333,o),
(751.667,3,o),
(733,3,cs),
(648.169,3,o),
(619.061,7.727,o),
(613,35,cs),
(410,793,l),
(410,793,l)
);
},
{
closed = 1;
nodes = (
(385.454,565.914,o),
(421.464,413.633,o),
(453,298,c),
(420.39,298,o),
(415.185,296,o),
(358,296,cs),
(304.25,296,o),
(314.344,298,o),
(262,298,c),
(284.238,378.864,o),
(315.184,510.424,o),
(362,691,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
69 1 8 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 7 8 7 106 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 6 5 2 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
168 44 19 36 52 39 28 52 51 9 24
CALL[ ]	/* CallFunction */";
};
width = 710;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(384,830,o),
(372.333,837,o),
(353,837,cs),
(329,837,o),
(319.667,826.667,o),
(317,816,cs),
(293.137,737.253,o),
(267.659,639.167,o),
(219.5,466.5,cs),
(174.121,303.799,o),
(138.041,173.116,o),
(108,89,cs),
(100,65,o),
(87,53.667,o),
(59,51,cs),
(59.845,51,o),
(15.196,45,o),
(-12,45,cs),
(-25.333,45,o),
(-37,37.333,o),
(-37,24,cs),
(-37,9.333,o),
(-26,0,o),
(-14,0,cs),
(253,0,ls),
(279.667,0,o),
(287,12,o),
(287,24,cs),
(287,44,o),
(271.333,49,o),
(258,49,cs),
(223.943,49,o),
(182,48.548,o),
(182,65,cs),
(182,92.498,o),
(208.252,175.15,o),
(225,223,c),
(473,223,l),
(477.089,206.644,o),
(489.528,168.266,o),
(503,115.5,cs),
(517.884,57.204,o),
(526,23.825,o),
(526,15,cs),
(526,-32.87,o),
(455,-13.632,o),
(455,-39,cs),
(455,-44.333,o),
(457.167,-48.333,o),
(461.5,-51,cs),
(465.833,-53.667,o),
(474,-55,o),
(486,-55,cs),
(719,-55,ls),
(741.667,-55,o),
(754,-49.667,o),
(754,-31,cs),
(754,-12.333,o),
(731.667,-9,o),
(713,-9,cs),
(649,-9,o),
(608,-7.667,o),
(600,23,cs),
(388,816,l),
(388,816,l)
);
},
{
closed = 1;
nodes = (
(381.348,597.479,o),
(430.777,393.353,o),
(458,289,c),
(442.667,288.333,o),
(426.833,288,o),
(410.5,288,cs),
(394.167,288,o),
(378.333,288,o),
(363,288,cs),
(342.333,288,o),
(322.5,288,o),
(303.5,288,cs),
(284.5,288,o),
(264.667,288.333,o),
(244,289,c),
(254.823,332.292,o),
(278.404,424.346,o),
(303.5,516,cs),
(330.088,613.105,o),
(346.703,679.672,o),
(356,715,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
70 1 8 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 7 8 7 106 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 6 5 2 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
105 44 19 36 52 56 30 52 34 9 24
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(686,-55,ls),
(709.333,-55,o),
(721,-50.333,o),
(721,-41,cs),
(721,-29,o),
(703.667,-29,o),
(685,-29,cs),
(653,-29,o),
(628.667,-27,o),
(612,-23,cs),
(595.333,-19,o),
(585.333,-10.333,o),
(582,3,cs),
(365,816,ls),
(361,830.667,o),
(351.667,835,o),
(345,835,cs),
(334.333,835,o),
(326.667,826.667,o),
(324,816,cs),
(309.578,766.966,o),
(264.676,604.466,o),
(224.5,456.5,cs),
(181.443,297.923,o),
(145.981,172.147,o),
(110,69,cs),
(100.667,45,o),
(90.333,33.667,o),
(61,31,cs),
(62.152,31,o),
(9.218,25,o),
(-30,25,cs),
(-43.333,25,o),
(-50,21.333,o),
(-50,14,cs),
(-50,3.333,o),
(-39,0,o),
(-27,0,cs),
(225,0,ls),
(238.333,0,o),
(247.333,1.667,o),
(252,5,cs),
(256.667,8.333,o),
(259,11.667,o),
(259,15,cs),
(259,29.667,o),
(238.333,29,o),
(225,29,cs),
(204.985,29,o),
(154,26.126,o),
(154,45,cs),
(154,74.195,o),
(186.968,172.749,o),
(206,238,c),
(477,238,l),
(481.265,218.806,o),
(496.406,169.833,o),
(511,112.5,cs),
(528.276,44.631,o),
(538,5.656,o),
(538,-5,cs),
(538,-37.488,o),
(442,-16.276,o),
(442,-41,cs),
(442,-46.333,o),
(444.167,-50,o),
(448.5,-52,cs),
(452.833,-54,o),
(461,-55,o),
(473,-55,cs)
);
},
{
closed = 1;
nodes = (
(298.667,272,o),
(259.333,272.667,o),
(218,274,c),
(233.077,338.616,o),
(254.142,418.105,o),
(284,529.5,cs),
(313.705,640.323,o),
(333.8,709,o),
(343,755,c),
(373.763,642.203,o),
(431.478,410.882,o),
(465,274,c),
(423.667,272.667,o),
(381.333,272,o),
(340,272,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
69 1 9 8 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 9 0 3 4 9 3 90 2 1 0 0 1 0 1 87 0 8 8 20 67 7 6 2 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 8 9 8 106 0 9 0 3 4 9 3 90 2 1 0 0 1 0 1 87 7 6 2 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
82 76 44 18 51 52 56 25 20 51 34 10 24
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = A;
unicode = 65;
},
{
glyphname = Aacute;
kernLeft = Aacute;
kernRight = Aacute;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(449,953.333,o),
(434.667,972,o),
(408,972,cs),
(370.323,972,o),
(294,899.498,o),
(294,872,cs),
(294,856,o),
(309,841,o),
(329,841,cs),
(362.423,841,o),
(449,896.957,o),
(449,936,cs)
);
},
{
closed = 1;
nodes = (
(402,823.667,o),
(387,838,o),
(359,838,cs),
(324.333,838,o),
(314.333,822.667,o),
(305,792,cs),
(284.502,726.405,o),
(251.09,598.326,o),
(213,460,cs),
(175.492,323.786,o),
(134.319,181.005,o),
(107,101,cs),
(97.667,74.333,o),
(82,65.667,o),
(58,63,cs),
(54.446,63,o),
(35.539,57,o),
(1,57,cs),
(-12.333,57,o),
(-28,47.333,o),
(-28,30,cs),
(-28,11.333,o),
(-17,0,o),
(-5,0,cs),
(273,0,ls),
(299.667,0,o),
(307,14.333,o),
(307,29,cs),
(307,53,o),
(295.333,61,o),
(274,61,cs),
(250.667,61,o),
(232.833,62.333,o),
(220.5,65,cs),
(208.167,67.667,o),
(202,71.667,o),
(202,77,cs),
(202,98.202,o),
(218.883,167.573,o),
(238,214,c),
(470,214,l),
(467.773,222.165,o),
(517,58.814,o),
(517,35,cs),
(517,-16.343,o),
(464,4.508,o),
(464,-33,cs),
(464,-43.667,o),
(471,-55,o),
(495,-55,cs),
(742,-55,ls),
(764.667,-55,o),
(777,-49,o),
(777,-25,cs),
(777,-2.333,o),
(751.667,3,o),
(733,3,cs),
(648.169,3,o),
(619.061,7.727,o),
(613,35,cs),
(410,793,l),
(410,793,l)
);
},
{
closed = 1;
nodes = (
(385.454,565.914,o),
(421.464,413.633,o),
(453,298,c),
(420.39,298,o),
(415.185,296,o),
(358,296,cs),
(304.25,296,o),
(314.344,298,o),
(262,298,c),
(284.238,378.864,o),
(315.184,510.424,o),
(362,691,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
85 1 10 9 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 1 106 0 0 9 0 106 0 10 0 4 5 10 4 90 0 2 0 3 2 3 87 0 9 9 20 67 8 7 2 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 1 106 0 0 9 0 106 0 9 10 9 106 0 10 0 4 5 10 4 90 0 2 0 3 2 3 87 8 7 2 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
100 90 82 80 19 36 52 39 28 52 53 38 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 710;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(429,959.667,o),
(417,972,o),
(397,972,cs),
(367.753,972,o),
(291,903.873,o),
(291,877,cs),
(291,863.667,o),
(300.333,854,o),
(315,854,cs),
(341.12,854,o),
(429,908.21,o),
(429,941,cs)
);
},
{
closed = 1;
nodes = (
(384,830,o),
(372.333,837,o),
(353,837,cs),
(329,837,o),
(319.667,826.667,o),
(317,816,cs),
(293.137,737.253,o),
(267.659,639.167,o),
(219.5,466.5,cs),
(174.121,303.799,o),
(138.041,173.116,o),
(108,89,cs),
(100,65,o),
(87,53.667,o),
(59,51,cs),
(59.845,51,o),
(15.196,45,o),
(-12,45,cs),
(-25.333,45,o),
(-37,37.333,o),
(-37,24,cs),
(-37,9.333,o),
(-26,0,o),
(-14,0,cs),
(253,0,ls),
(279.667,0,o),
(287,12,o),
(287,24,cs),
(287,44,o),
(271.333,49,o),
(258,49,cs),
(223.943,49,o),
(182,48.548,o),
(182,65,cs),
(182,92.498,o),
(208.252,175.15,o),
(225,223,c),
(473,223,l),
(477.089,206.644,o),
(489.528,168.266,o),
(503,115.5,cs),
(517.884,57.204,o),
(526,23.825,o),
(526,15,cs),
(526,-32.87,o),
(455,-13.632,o),
(455,-39,cs),
(455,-44.333,o),
(457.167,-48.333,o),
(461.5,-51,cs),
(465.833,-53.667,o),
(474,-55,o),
(486,-55,cs),
(719,-55,ls),
(741.667,-55,o),
(754,-49.667,o),
(754,-31,cs),
(754,-12.333,o),
(731.667,-9,o),
(713,-9,cs),
(649,-9,o),
(608,-7.667,o),
(600,23,cs),
(388,816,l),
(388,816,l)
);
},
{
closed = 1;
nodes = (
(381.348,597.479,o),
(430.777,393.353,o),
(458,289,c),
(442.667,288.333,o),
(426.833,288,o),
(410.5,288,cs),
(394.167,288,o),
(378.333,288,o),
(363,288,cs),
(342.333,288,o),
(322.5,288,o),
(303.5,288,cs),
(284.5,288,o),
(264.667,288.333,o),
(244,289,c),
(254.823,332.292,o),
(278.404,424.346,o),
(303.5,516,cs),
(330.088,613.105,o),
(346.703,679.672,o),
(356,715,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
86 1 10 9 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 1 106 0 0 9 0 106 0 10 0 4 5 10 4 90 0 2 0 3 2 3 87 0 9 9 20 67 8 7 2 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 1 106 0 0 9 0 106 0 9 10 9 106 0 10 0 4 5 10 4 90 0 2 0 3 2 3 87 8 7 2 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
99 93 84 82 19 36 52 56 30 52 36 38 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(686,-55,ls),
(709.333,-55,o),
(721,-50.333,o),
(721,-41,cs),
(721,-29,o),
(703.667,-29,o),
(685,-29,cs),
(653,-29,o),
(628.667,-27,o),
(612,-23,cs),
(595.333,-19,o),
(585.333,-10.333,o),
(582,3,cs),
(365,816,ls),
(361,830.667,o),
(351.667,835,o),
(345,835,cs),
(334.333,835,o),
(326.667,826.667,o),
(324,816,cs),
(309.578,766.966,o),
(264.676,604.466,o),
(224.5,456.5,cs),
(181.443,297.923,o),
(145.981,172.147,o),
(110,69,cs),
(100.667,45,o),
(90.333,33.667,o),
(61,31,cs),
(62.152,31,o),
(9.218,25,o),
(-30,25,cs),
(-43.333,25,o),
(-50,21.333,o),
(-50,14,cs),
(-50,3.333,o),
(-39,0,o),
(-27,0,cs),
(225,0,ls),
(238.333,0,o),
(247.333,1.667,o),
(252,5,cs),
(256.667,8.333,o),
(259,11.667,o),
(259,15,cs),
(259,29.667,o),
(238.333,29,o),
(225,29,cs),
(204.985,29,o),
(154,26.126,o),
(154,45,cs),
(154,74.195,o),
(186.968,172.749,o),
(206,238,c),
(477,238,l),
(481.265,218.806,o),
(496.406,169.833,o),
(511,112.5,cs),
(528.276,44.631,o),
(538,5.656,o),
(538,-5,cs),
(538,-37.488,o),
(442,-16.276,o),
(442,-41,cs),
(442,-46.333,o),
(444.167,-50,o),
(448.5,-52,cs),
(452.833,-54,o),
(461,-55,o),
(473,-55,cs)
);
},
{
closed = 1;
nodes = (
(298.667,272,o),
(259.333,272.667,o),
(218,274,c),
(233.077,338.616,o),
(254.142,418.105,o),
(284,529.5,cs),
(313.705,640.323,o),
(333.8,709,o),
(343,755,c),
(373.763,642.203,o),
(431.478,410.882,o),
(465,274,c),
(423.667,272.667,o),
(381.333,272,o),
(340,272,cs)
);
},
{
closed = 1;
nodes = (
(311.311,875,o),
(401,928.367,o),
(401,950,cs),
(401,968.667,o),
(392.667,972,o),
(382,972,cs),
(362.012,972,o),
(287,910.697,o),
(287,886,cs),
(287,878.667,o),
(289.667,875,o),
(295,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
84 1 11 10 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 0 10 0 106 0 11 0 5 6 11 5 90 4 1 2 0 3 2 3 87 0 10 10 20 67 9 8 2 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 0 10 0 106 0 10 11 10 106 0 11 0 5 6 11 5 90 4 1 2 0 3 2 3 87 9 8 2 6 6 7 83 0 7 7 13 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
97 91 81 79 67 66 51 52 56 25 20 51 36 37 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = Aacute;
unicode = 193;
},
{
glyphname = Abreve;
kernLeft = Aacute;
kernRight = Aacute;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(402,823.667,o),
(387,838,o),
(359,838,cs),
(324.333,838,o),
(314.333,822.667,o),
(305,792,cs),
(284.502,726.405,o),
(251.09,598.326,o),
(213,460,cs),
(175.492,323.786,o),
(134.319,181.005,o),
(107,101,cs),
(97.667,74.333,o),
(82,65.667,o),
(58,63,cs),
(54.446,63,o),
(35.539,57,o),
(1,57,cs),
(-12.333,57,o),
(-28,47.333,o),
(-28,30,cs),
(-28,11.333,o),
(-17,0,o),
(-5,0,cs),
(273,0,ls),
(299.667,0,o),
(307,14.333,o),
(307,29,cs),
(307,53,o),
(295.333,61,o),
(274,61,cs),
(250.667,61,o),
(232.833,62.333,o),
(220.5,65,cs),
(208.167,67.667,o),
(202,71.667,o),
(202,77,cs),
(202,98.202,o),
(218.883,167.573,o),
(238,214,c),
(470,214,l),
(467.773,222.165,o),
(517,58.814,o),
(517,35,cs),
(517,-16.343,o),
(464,4.508,o),
(464,-33,cs),
(464,-43.667,o),
(471,-55,o),
(495,-55,cs),
(742,-55,ls),
(764.667,-55,o),
(777,-49,o),
(777,-25,cs),
(777,-2.333,o),
(751.667,3,o),
(733,3,cs),
(648.169,3,o),
(619.061,7.727,o),
(613,35,cs),
(410,793,l),
(410,793,l)
);
},
{
closed = 1;
nodes = (
(385.454,565.914,o),
(421.464,413.633,o),
(453,298,c),
(420.39,298,o),
(415.185,296,o),
(358,296,cs),
(304.25,296,o),
(314.344,298,o),
(262,298,c),
(284.238,378.864,o),
(315.184,510.424,o),
(362,691,c)
);
},
{
closed = 1;
nodes = (
(495,967.667,o),
(477,971,o),
(457,971,cs),
(439.667,971,o),
(425,956.667,o),
(425,942,cs),
(425,936.667,o),
(420.5,931.5,o),
(411.5,926.5,cs),
(402.5,921.5,o),
(388.333,919,o),
(369,919,cs),
(338.535,919,o),
(310,926.638,o),
(310,942,cs),
(310,964.667,o),
(296.667,971,o),
(274,971,cs),
(251.333,971,o),
(242,958.333,o),
(242,941,cs),
(242,898.333,o),
(287.333,862,o),
(374,862,cs),
(425.962,862,o),
(495,888.821,o),
(495,941,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
69 1 8 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
12 1 10 11 10 106 0 11 0 9 7 11 9 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
12 1 10 11 10 106 0 7 9 8 9 7 8 104 0 11 0 9 7 11 9 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 6 5 2 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
115 113 109 107 101 99 95 93 168 44 19 36 52 39 28 52 51 13 24
CALL[ ]	/* CallFunction */";
};
width = 710;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(384,830,o),
(372.333,837,o),
(353,837,cs),
(329,837,o),
(319.667,826.667,o),
(317,816,cs),
(293.137,737.253,o),
(267.659,639.167,o),
(219.5,466.5,cs),
(174.121,303.799,o),
(138.041,173.116,o),
(108,89,cs),
(100,65,o),
(87,53.667,o),
(59,51,cs),
(59.845,51,o),
(15.196,45,o),
(-12,45,cs),
(-25.333,45,o),
(-37,37.333,o),
(-37,24,cs),
(-37,9.333,o),
(-26,0,o),
(-14,0,cs),
(253,0,ls),
(279.667,0,o),
(287,12,o),
(287,24,cs),
(287,44,o),
(271.333,49,o),
(258,49,cs),
(223.943,49,o),
(182,48.548,o),
(182,65,cs),
(182,92.498,o),
(208.252,175.15,o),
(225,223,c),
(473,223,l),
(477.089,206.644,o),
(489.528,168.266,o),
(503,115.5,cs),
(517.884,57.204,o),
(526,23.825,o),
(526,15,cs),
(526,-32.87,o),
(455,-13.632,o),
(455,-39,cs),
(455,-44.333,o),
(457.167,-48.333,o),
(461.5,-51,cs),
(465.833,-53.667,o),
(474,-55,o),
(486,-55,cs),
(719,-55,ls),
(741.667,-55,o),
(754,-49.667,o),
(754,-31,cs),
(754,-12.333,o),
(731.667,-9,o),
(713,-9,cs),
(649,-9,o),
(608,-7.667,o),
(600,23,cs),
(388,816,l),
(388,816,l)
);
},
{
closed = 1;
nodes = (
(381.348,597.479,o),
(430.777,393.353,o),
(458,289,c),
(442.667,288.333,o),
(426.833,288,o),
(410.5,288,cs),
(394.167,288,o),
(378.333,288,o),
(363,288,cs),
(342.333,288,o),
(322.5,288,o),
(303.5,288,cs),
(284.5,288,o),
(264.667,288.333,o),
(244,289,c),
(254.823,332.292,o),
(278.404,424.346,o),
(303.5,516,cs),
(330.088,613.105,o),
(346.703,679.672,o),
(356,715,c)
);
},
{
closed = 1;
nodes = (
(480,971,o),
(463,972,o),
(450,972,cs),
(435,972,o),
(424,960,o),
(424,945,cs),
(424,928,o),
(399,910,o),
(360,910,cs),
(330,910,o),
(295,919,o),
(295,945,cs),
(295,965,o),
(286,972,o),
(267,972,cs),
(250,972,o),
(241,963,o),
(241,944,cs),
(241,903,o),
(287,865,o),
(363,865,cs),
(414,865,o),
(480,892,o),
(480,944,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
71 1 8 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
12 1 10 11 10 106 0 11 0 9 7 11 9 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
12 1 10 11 10 106 0 7 9 8 9 7 8 104 0 11 0 9 7 11 9 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 6 5 2 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
114 112 108 106 100 98 95 93 105 44 19 36 52 56 30 52 35 13 35
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(686,-55,ls),
(709.333,-55,o),
(721,-50.333,o),
(721,-41,cs),
(721,-29,o),
(703.667,-29,o),
(685,-29,cs),
(653,-29,o),
(628.667,-27,o),
(612,-23,cs),
(595.333,-19,o),
(585.333,-10.333,o),
(582,3,cs),
(365,816,ls),
(361,830.667,o),
(351.667,835,o),
(345,835,cs),
(334.333,835,o),
(326.667,826.667,o),
(324,816,cs),
(309.578,766.966,o),
(264.676,604.466,o),
(224.5,456.5,cs),
(181.443,297.923,o),
(145.981,172.147,o),
(110,69,cs),
(100.667,45,o),
(90.333,33.667,o),
(61,31,cs),
(62.152,31,o),
(9.218,25,o),
(-30,25,cs),
(-43.333,25,o),
(-50,21.333,o),
(-50,14,cs),
(-50,3.333,o),
(-39,0,o),
(-27,0,cs),
(225,0,ls),
(238.333,0,o),
(247.333,1.667,o),
(252,5,cs),
(256.667,8.333,o),
(259,11.667,o),
(259,15,cs),
(259,29.667,o),
(238.333,29,o),
(225,29,cs),
(204.985,29,o),
(154,26.126,o),
(154,45,cs),
(154,74.195,o),
(186.968,172.749,o),
(206,238,c),
(477,238,l),
(481.265,218.806,o),
(496.406,169.833,o),
(511,112.5,cs),
(528.276,44.631,o),
(538,5.656,o),
(538,-5,cs),
(538,-37.488,o),
(442,-16.276,o),
(442,-41,cs),
(442,-46.333,o),
(444.167,-50,o),
(448.5,-52,cs),
(452.833,-54,o),
(461,-55,o),
(473,-55,cs)
);
},
{
closed = 1;
nodes = (
(298.667,272,o),
(259.333,272.667,o),
(218,274,c),
(233.077,338.616,o),
(254.142,418.105,o),
(284,529.5,cs),
(313.705,640.323,o),
(333.8,709,o),
(343,755,c),
(373.763,642.203,o),
(431.478,410.882,o),
(465,274,c),
(423.667,272.667,o),
(381.333,272,o),
(340,272,cs)
);
},
{
closed = 1;
nodes = (
(400.017,875,o),
(458,899.402,o),
(458,948,cs),
(458,969.333,o),
(449.667,972,o),
(439,972,cs),
(427.667,972,o),
(422,964.333,o),
(422,949,cs),
(422,922.229,o),
(383.336,900,o),
(347,900,cs),
(304.691,900,o),
(273,909.669,o),
(273,949,cs),
(273,965,o),
(270.667,972,o),
(256,972,cs),
(244.667,972,o),
(239,964,o),
(239,948,cs),
(239,908,o),
(287,875,o),
(347,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
97 1 13 12 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
3 1 1 2 1 106 0 2 0 0 12 2 0 91 0 13 0 7 8 13 7 90 6 1 4 0 5 4 5 87 0 12 12 20 67 11 10 2 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
3 1 1 2 1 106 0 12 0 13 0 12 13 104 0 2 0 0 12 2 0 91 0 13 0 7 8 13 7 90 6 1 4 0 5 4 5 87 11 10 2 8 8 9 83 0 9 9 13 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
110 104 94 92 80 79 77 74 71 68 56 25 20 51 36 37 38 35 36 14 24
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = Abreve;
unicode = 258;
},
{
glyphname = Acircumflex;
kernLeft = Aacute;
kernRight = Aacute;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(498.667,832,o),
(501,842.667,o),
(501,852,cs),
(501,894.309,o),
(393.018,972,o),
(368,972,cs),
(357.004,972,o),
(322.131,950.323,o),
(295,928.5,cs),
(264.333,903.833,o),
(236,871.333,o),
(236,846,cs),
(236,839.333,o),
(239.667,832,o),
(249,832,cs),
(256.333,832,o),
(271.333,836.333,o),
(294,845,cs),
(316.667,853.667,o),
(341.333,865.333,o),
(368,880,c),
(394.667,865.333,o),
(419.5,853.667,o),
(442.5,845,cs),
(465.5,836.333,o),
(480.667,832,o),
(488,832,cs)
);
},
{
closed = 1;
nodes = (
(402,823.667,o),
(387,838,o),
(359,838,cs),
(324.333,838,o),
(314.333,822.667,o),
(305,792,cs),
(284.502,726.405,o),
(251.09,598.326,o),
(213,460,cs),
(175.492,323.786,o),
(134.319,181.005,o),
(107,101,cs),
(97.667,74.333,o),
(82,65.667,o),
(58,63,cs),
(54.446,63,o),
(35.539,57,o),
(1,57,cs),
(-12.333,57,o),
(-28,47.333,o),
(-28,30,cs),
(-28,11.333,o),
(-17,0,o),
(-5,0,cs),
(273,0,ls),
(299.667,0,o),
(307,14.333,o),
(307,29,cs),
(307,53,o),
(295.333,61,o),
(274,61,cs),
(250.667,61,o),
(232.833,62.333,o),
(220.5,65,cs),
(208.167,67.667,o),
(202,71.667,o),
(202,77,cs),
(202,98.202,o),
(218.883,167.573,o),
(238,214,c),
(470,214,l),
(467.773,222.165,o),
(517,58.814,o),
(517,35,cs),
(517,-16.343,o),
(464,4.508,o),
(464,-33,cs),
(464,-43.667,o),
(471,-55,o),
(495,-55,cs),
(742,-55,ls),
(764.667,-55,o),
(777,-49,o),
(777,-25,cs),
(777,-2.333,o),
(751.667,3,o),
(733,3,cs),
(648.169,3,o),
(619.061,7.727,o),
(613,35,cs),
(410,793,l),
(410,793,l)
);
},
{
closed = 1;
nodes = (
(385.454,565.914,o),
(421.464,413.633,o),
(453,298,c),
(420.39,298,o),
(415.185,296,o),
(358,296,cs),
(304.25,296,o),
(314.344,298,o),
(262,298,c),
(284.238,378.864,o),
(315.184,510.424,o),
(362,691,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
3 1 10 2 91 1 11 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 2 10 2 106 1 12 2 0 10 11 10 0 11 104 0 11 0 5 6 11 5 90 0 3 0 4 3 4 87 0 10 10 20 67 9 8 2 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 2 10 2 106 0 10 0 10 106 1 12 2 0 11 0 106 0 11 0 5 6 11 5 90 0 3 0 4 3 4 87 9 8 2 6 6 7 83 0 7 7 13 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 106 96 88 86 74 73 70 68 64 61 57 55 48 47 35 32 28 25 15 13 7 5 0 21 1 21 13 15
CALL[ ]	/* CallFunction */";
};
width = 710;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(486,848,o),
(489,855.667,o),
(489,865,cs),
(489,899.091,o),
(384.266,972,o),
(358,972,cs),
(335.488,972,o),
(228,901.1,o),
(228,861,cs),
(228,852.333,o),
(231.667,848,o),
(239,848,cs),
(255.596,848,o),
(319.191,875.171,o),
(358,898,c),
(420.496,861.237,o),
(469.286,848,o),
(478,848,cs)
);
},
{
closed = 1;
nodes = (
(384,830,o),
(372.333,837,o),
(353,837,cs),
(329,837,o),
(319.667,826.667,o),
(317,816,cs),
(293.137,737.253,o),
(267.659,639.167,o),
(219.5,466.5,cs),
(174.121,303.799,o),
(138.041,173.116,o),
(108,89,cs),
(100,65,o),
(87,53.667,o),
(59,51,cs),
(59.845,51,o),
(15.196,45,o),
(-12,45,cs),
(-25.333,45,o),
(-37,37.333,o),
(-37,24,cs),
(-37,9.333,o),
(-26,0,o),
(-14,0,cs),
(253,0,ls),
(279.667,0,o),
(287,12,o),
(287,24,cs),
(287,44,o),
(271.333,49,o),
(258,49,cs),
(223.943,49,o),
(182,48.548,o),
(182,65,cs),
(182,92.498,o),
(208.252,175.15,o),
(225,223,c),
(473,223,l),
(477.089,206.644,o),
(489.528,168.266,o),
(503,115.5,cs),
(517.884,57.204,o),
(526,23.825,o),
(526,15,cs),
(526,-32.87,o),
(455,-13.632,o),
(455,-39,cs),
(455,-44.333,o),
(457.167,-48.333,o),
(461.5,-51,cs),
(465.833,-53.667,o),
(474,-55,o),
(486,-55,cs),
(719,-55,ls),
(741.667,-55,o),
(754,-49.667,o),
(754,-31,cs),
(754,-12.333,o),
(731.667,-9,o),
(713,-9,cs),
(649,-9,o),
(608,-7.667,o),
(600,23,cs),
(388,816,l),
(388,816,l)
);
},
{
closed = 1;
nodes = (
(381.348,597.479,o),
(430.777,393.353,o),
(458,289,c),
(442.667,288.333,o),
(426.833,288,o),
(410.5,288,cs),
(394.167,288,o),
(378.333,288,o),
(363,288,cs),
(342.333,288,o),
(322.5,288,o),
(303.5,288,cs),
(284.5,288,o),
(264.667,288.333,o),
(244,289,c),
(254.823,332.292,o),
(278.404,424.346,o),
(303.5,516,cs),
(330.088,613.105,o),
(346.703,679.672,o),
(356,715,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
5 1 0 2 95 1 11 10 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 0 2 106 1 12 2 0 10 0 106 0 11 0 5 6 11 5 90 0 3 0 4 3 4 87 0 10 10 20 67 9 8 2 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 2 0 2 106 1 12 2 0 10 0 106 0 10 11 10 106 0 11 0 5 6 11 5 90 0 3 0 4 3 4 87 9 8 2 6 6 7 83 0 7 7 13 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 108 102 93 91 79 78 75 73 69 66 62 59 51 50 36 33 29 27 18 16 11 9 0 24 1 24 13 15
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(686,-55,ls),
(709.333,-55,o),
(721,-50.333,o),
(721,-41,cs),
(721,-29,o),
(703.667,-29,o),
(685,-29,cs),
(653,-29,o),
(628.667,-27,o),
(612,-23,cs),
(595.333,-19,o),
(585.333,-10.333,o),
(582,3,cs),
(365,816,ls),
(361,830.667,o),
(351.667,835,o),
(345,835,cs),
(334.333,835,o),
(326.667,826.667,o),
(324,816,cs),
(309.578,766.966,o),
(264.676,604.466,o),
(224.5,456.5,cs),
(181.443,297.923,o),
(145.981,172.147,o),
(110,69,cs),
(100.667,45,o),
(90.333,33.667,o),
(61,31,cs),
(62.152,31,o),
(9.218,25,o),
(-30,25,cs),
(-43.333,25,o),
(-50,21.333,o),
(-50,14,cs),
(-50,3.333,o),
(-39,0,o),
(-27,0,cs),
(225,0,ls),
(238.333,0,o),
(247.333,1.667,o),
(252,5,cs),
(256.667,8.333,o),
(259,11.667,o),
(259,15,cs),
(259,29.667,o),
(238.333,29,o),
(225,29,cs),
(204.985,29,o),
(154,26.126,o),
(154,45,cs),
(154,74.195,o),
(186.968,172.749,o),
(206,238,c),
(477,238,l),
(481.265,218.806,o),
(496.406,169.833,o),
(511,112.5,cs),
(528.276,44.631,o),
(538,5.656,o),
(538,-5,cs),
(538,-37.488,o),
(442,-16.276,o),
(442,-41,cs),
(442,-46.333,o),
(444.167,-50,o),
(448.5,-52,cs),
(452.833,-54,o),
(461,-55,o),
(473,-55,cs)
);
},
{
closed = 1;
nodes = (
(298.667,272,o),
(259.333,272.667,o),
(218,274,c),
(233.077,338.616,o),
(254.142,418.105,o),
(284,529.5,cs),
(313.705,640.323,o),
(333.8,709,o),
(343,755,c),
(373.763,642.203,o),
(431.478,410.882,o),
(465,274,c),
(423.667,272.667,o),
(381.333,272,o),
(340,272,cs)
);
},
{
closed = 1;
nodes = (
(241.501,875,o),
(313.211,908.207,o),
(344,928,c),
(398.215,890.467,o),
(465.669,875,o),
(464,875,cs),
(469.333,875,o),
(472,878.667,o),
(472,886,cs),
(472,910.708,o),
(369.596,972,o),
(344,972,cs),
(320.629,972,o),
(217,910.79,o),
(217,886,cs),
(217,878.667,o),
(219.667,875,o),
(225,875,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
5 1 0 2 93 1 12 11 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 2 0 2 106 1 13 2 0 11 0 106 0 12 0 6 7 12 6 90 5 1 3 0 4 3 4 87 0 11 11 20 67 10 9 2 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 2 0 2 106 1 13 2 0 11 0 106 0 11 12 11 106 0 12 0 6 7 12 6 90 5 1 3 0 4 3 4 87 10 9 2 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
1 0 106 100 90 88 76 75 73 70 67 64 60 57 49 48 39 38 34 31 28 26 18 16 11 9 0 23 1 23 14 15
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = Acircumflex;
unicode = 194;
},
{
glyphname = Adieresis;
kernLeft = Aacute;
kernRight = Aacute;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,868.333,o),
(222.667,841,o),
(256,841,cs),
(285.675,841,o),
(323,855.646,o),
(323,911,cs),
(323,947,o),
(295,972,o),
(263,972,cs),
(216.034,972,o),
(197,930.847,o),
(197,907,cs)
);
},
{
closed = 1;
nodes = (
(404,857.333,o),
(429.667,830,o),
(463,830,cs),
(492.675,830,o),
(530,844.646,o),
(530,900,cs),
(530,937.333,o),
(502,961,o),
(470,961,cs),
(423.034,961,o),
(404,919.847,o),
(404,896,cs)
);
},
{
closed = 1;
nodes = (
(402,823.667,o),
(387,838,o),
(359,838,cs),
(324.333,838,o),
(314.333,822.667,o),
(305,792,cs),
(284.502,726.405,o),
(251.09,598.326,o),
(213,460,cs),
(175.492,323.786,o),
(134.319,181.005,o),
(107,101,cs),
(97.667,74.333,o),
(82,65.667,o),
(58,63,cs),
(54.446,63,o),
(35.539,57,o),
(1,57,cs),
(-12.333,57,o),
(-28,47.333,o),
(-28,30,cs),
(-28,11.333,o),
(-17,0,o),
(-5,0,cs),
(273,0,ls),
(299.667,0,o),
(307,14.333,o),
(307,29,cs),
(307,53,o),
(295.333,61,o),
(274,61,cs),
(250.667,61,o),
(232.833,62.333,o),
(220.5,65,cs),
(208.167,67.667,o),
(202,71.667,o),
(202,77,cs),
(202,98.202,o),
(218.883,167.573,o),
(238,214,c),
(470,214,l),
(467.773,222.165,o),
(517,58.814,o),
(517,35,cs),
(517,-16.343,o),
(464,4.508,o),
(464,-33,cs),
(464,-43.667,o),
(471,-55,o),
(495,-55,cs),
(742,-55,ls),
(764.667,-55,o),
(777,-49,o),
(777,-25,cs),
(777,-2.333,o),
(751.667,3,o),
(733,3,cs),
(648.169,3,o),
(619.061,7.727,o),
(613,35,cs),
(410,793,l),
(410,793,l)
);
},
{
closed = 1;
nodes = (
(385.454,565.914,o),
(421.464,413.633,o),
(453,298,c),
(420.39,298,o),
(415.185,296,o),
(358,296,cs),
(304.25,296,o),
(314.344,298,o),
(262,298,c),
(284.238,378.864,o),
(315.184,510.424,o),
(362,691,c)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
101 1 12 11 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
101 1 12 3 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
2 1 0 3 1 1 11 0 1 91 0 12 0 6 7 12 6 90 0 4 0 5 4 5 87 0 11 11 20 67 10 9 2 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 0 0 1 11 0 1 91 0 2 0 3 12 2 3 91 0 12 0 6 7 12 6 90 0 4 0 5 4 5 87 0 11 11 20 67 10 9 2 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 11 1 3 1 11 3 104 0 0 0 1 11 0 1 91 0 2 0 3 12 2 3 91 0 12 0 6 7 12 6 90 0 4 0 5 4 5 87 10 9 2 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
116 106 98 96 84 83 80 78 52 39 28 52 53 38 38 38 36 13 24
CALL[ ]	/* CallFunction */";
};
width = 710;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(200,882.667,o),
(222.333,859,o),
(249,859,cs),
(274.333,859,o),
(305,872,o),
(305,920,cs),
(305,950.667,o),
(282.667,972,o),
(256,972,cs),
(217.685,972,o),
(200,936.643,o),
(200,916,cs)
);
},
{
closed = 1;
nodes = (
(407,870.667,o),
(429.333,847,o),
(456,847,cs),
(481.333,847,o),
(512,860,o),
(512,908,cs),
(512,938.667,o),
(489.667,960,o),
(463,960,cs),
(424.685,960,o),
(407,924.643,o),
(407,904,cs)
);
},
{
closed = 1;
nodes = (
(384,830,o),
(372.333,837,o),
(353,837,cs),
(329,837,o),
(319.667,826.667,o),
(317,816,cs),
(293.137,737.253,o),
(267.659,639.167,o),
(219.5,466.5,cs),
(174.121,303.799,o),
(138.041,173.116,o),
(108,89,cs),
(100,65,o),
(87,53.667,o),
(59,51,cs),
(59.845,51,o),
(15.196,45,o),
(-12,45,cs),
(-25.333,45,o),
(-37,37.333,o),
(-37,24,cs),
(-37,9.333,o),
(-26,0,o),
(-14,0,cs),
(253,0,ls),
(279.667,0,o),
(287,12,o),
(287,24,cs),
(287,44,o),
(271.333,49,o),
(258,49,cs),
(223.943,49,o),
(182,48.548,o),
(182,65,cs),
(182,92.498,o),
(208.252,175.15,o),
(225,223,c),
(473,223,l),
(477.089,206.644,o),
(489.528,168.266,o),
(503,115.5,cs),
(517.884,57.204,o),
(526,23.825,o),
(526,15,cs),
(526,-32.87,o),
(455,-13.632,o),
(455,-39,cs),
(455,-44.333,o),
(457.167,-48.333,o),
(461.5,-51,cs),
(465.833,-53.667,o),
(474,-55,o),
(486,-55,cs),
(719,-55,ls),
(741.667,-55,o),
(754,-49.667,o),
(754,-31,cs),
(754,-12.333,o),
(731.667,-9,o),
(713,-9,cs),
(649,-9,o),
(608,-7.667,o),
(600,23,cs),
(388,816,l),
(388,816,l)
);
},
{
closed = 1;
nodes = (
(381.348,597.479,o),
(430.777,393.353,o),
(458,289,c),
(442.667,288.333,o),
(426.833,288,o),
(410.5,288,cs),
(394.167,288,o),
(378.333,288,o),
(363,288,cs),
(342.333,288,o),
(322.5,288,o),
(303.5,288,cs),
(284.5,288,o),
(264.667,288.333,o),
(244,289,c),
(254.823,332.292,o),
(278.404,424.346,o),
(303.5,516,cs),
(330.088,613.105,o),
(346.703,679.672,o),
(356,715,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
98 1 12 11 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 11 2 3 91 0 12 0 6 7 12 6 90 0 4 0 5 4 5 87 0 11 11 20 67 10 9 2 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 11 3 12 3 11 12 104 0 0 0 1 3 0 1 91 0 2 0 3 11 2 3 91 0 12 0 6 7 12 6 90 0 4 0 5 4 5 87 10 9 2 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
111 105 96 94 82 81 78 76 52 56 30 52 36 36 38 36 36 13 24
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(686,-55,ls),
(709.333,-55,o),
(721,-50.333,o),
(721,-41,cs),
(721,-29,o),
(703.667,-29,o),
(685,-29,cs),
(653,-29,o),
(628.667,-27,o),
(612,-23,cs),
(595.333,-19,o),
(585.333,-10.333,o),
(582,3,cs),
(365,816,ls),
(361,830.667,o),
(351.667,835,o),
(345,835,cs),
(334.333,835,o),
(326.667,826.667,o),
(324,816,cs),
(309.578,766.966,o),
(264.676,604.466,o),
(224.5,456.5,cs),
(181.443,297.923,o),
(145.981,172.147,o),
(110,69,cs),
(100.667,45,o),
(90.333,33.667,o),
(61,31,cs),
(62.152,31,o),
(9.218,25,o),
(-30,25,cs),
(-43.333,25,o),
(-50,21.333,o),
(-50,14,cs),
(-50,3.333,o),
(-39,0,o),
(-27,0,cs),
(225,0,ls),
(238.333,0,o),
(247.333,1.667,o),
(252,5,cs),
(256.667,8.333,o),
(259,11.667,o),
(259,15,cs),
(259,29.667,o),
(238.333,29,o),
(225,29,cs),
(204.985,29,o),
(154,26.126,o),
(154,45,cs),
(154,74.195,o),
(186.968,172.749,o),
(206,238,c),
(477,238,l),
(481.265,218.806,o),
(496.406,169.833,o),
(511,112.5,cs),
(528.276,44.631,o),
(538,5.656,o),
(538,-5,cs),
(538,-37.488,o),
(442,-16.276,o),
(442,-41,cs),
(442,-46.333,o),
(444.167,-50,o),
(448.5,-52,cs),
(452.833,-54,o),
(461,-55,o),
(473,-55,cs)
);
},
{
closed = 1;
nodes = (
(298.667,272,o),
(259.333,272.667,o),
(218,274,c),
(233.077,338.616,o),
(254.142,418.105,o),
(284,529.5,cs),
(313.705,640.323,o),
(333.8,709,o),
(343,755,c),
(373.763,642.203,o),
(431.478,410.882,o),
(465,274,c),
(423.667,272.667,o),
(381.333,272,o),
(340,272,cs)
);
},
{
closed = 1;
nodes = (
(257.667,889,o),
(280,899,o),
(280,935,cs),
(280,957.667,o),
(264.667,972,o),
(246,972,cs),
(218.258,972,o),
(205,944.895,o),
(205,931,cs),
(205,907,o),
(220.333,889,o),
(239,889,cs)
);
},
{
closed = 1;
nodes = (
(464.667,875,o),
(487,885,o),
(487,921,cs),
(487,943.667,o),
(471.667,958,o),
(453,958,cs),
(425.258,958,o),
(412,930.895,o),
(412,917,cs),
(412,893,o),
(427.333,875,o),
(446,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
97 1 13 12 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 12 2 3 91 0 13 0 7 8 13 7 90 6 1 4 0 5 4 5 87 0 12 12 20 67 11 10 2 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 12 3 13 3 12 13 104 0 0 0 1 3 0 1 91 0 2 0 3 12 2 3 91 0 13 0 7 8 13 7 90 6 1 4 0 5 4 5 87 11 10 2 8 8 9 83 0 9 9 13 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
110 104 94 92 80 79 77 74 71 68 56 25 20 51 36 36 38 36 36 14 24
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = Adieresis;
unicode = 196;
},
{
glyphname = Agrave;
kernLeft = Aacute;
kernRight = Aacute;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(293,896.665,o),
(379.564,841,o),
(413,841,cs),
(433,841,o),
(448,856,o),
(448,872,cs),
(448,897.591,o),
(374.088,972,o),
(334,972,cs),
(307.333,972,o),
(293,953.333,o),
(293,936,cs)
);
},
{
closed = 1;
nodes = (
(402,823.667,o),
(387,838,o),
(359,838,cs),
(324.333,838,o),
(314.333,822.667,o),
(305,792,cs),
(284.502,726.405,o),
(251.09,598.326,o),
(213,460,cs),
(175.492,323.786,o),
(134.319,181.005,o),
(107,101,cs),
(97.667,74.333,o),
(82,65.667,o),
(58,63,cs),
(54.446,63,o),
(35.539,57,o),
(1,57,cs),
(-12.333,57,o),
(-28,47.333,o),
(-28,30,cs),
(-28,11.333,o),
(-17,0,o),
(-5,0,cs),
(273,0,ls),
(299.667,0,o),
(307,14.333,o),
(307,29,cs),
(307,53,o),
(295.333,61,o),
(274,61,cs),
(250.667,61,o),
(232.833,62.333,o),
(220.5,65,cs),
(208.167,67.667,o),
(202,71.667,o),
(202,77,cs),
(202,98.202,o),
(218.883,167.573,o),
(238,214,c),
(470,214,l),
(467.773,222.165,o),
(517,58.814,o),
(517,35,cs),
(517,-16.343,o),
(464,4.508,o),
(464,-33,cs),
(464,-43.667,o),
(471,-55,o),
(495,-55,cs),
(742,-55,ls),
(764.667,-55,o),
(777,-49,o),
(777,-25,cs),
(777,-2.333,o),
(751.667,3,o),
(733,3,cs),
(648.169,3,o),
(619.061,7.727,o),
(613,35,cs),
(410,793,l),
(410,793,l)
);
},
{
closed = 1;
nodes = (
(385.454,565.914,o),
(421.464,413.633,o),
(453,298,c),
(420.39,298,o),
(415.185,296,o),
(358,296,cs),
(304.25,296,o),
(314.344,298,o),
(262,298,c),
(284.238,378.864,o),
(315.184,510.424,o),
(362,691,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
85 1 10 9 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 1 0 106 0 1 9 1 106 0 10 0 4 5 10 4 90 0 2 0 3 2 3 87 0 9 9 20 67 8 7 2 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 0 1 0 106 0 1 9 1 106 0 9 10 9 106 0 10 0 4 5 10 4 90 0 2 0 3 2 3 87 8 7 2 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
100 90 82 80 19 36 52 39 28 52 55 38 34 11 24
CALL[ ]	/* CallFunction */";
};
width = 710;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(291,909.521,o),
(376.059,854,o),
(405,854,cs),
(419.667,854,o),
(429,863.667,o),
(429,877,cs),
(429,903.873,o),
(352.247,972,o),
(323,972,cs),
(303,972,o),
(291,959.667,o),
(291,941,cs)
);
},
{
closed = 1;
nodes = (
(384,830,o),
(372.333,837,o),
(353,837,cs),
(329,837,o),
(319.667,826.667,o),
(317,816,cs),
(293.137,737.253,o),
(267.659,639.167,o),
(219.5,466.5,cs),
(174.121,303.799,o),
(138.041,173.116,o),
(108,89,cs),
(100,65,o),
(87,53.667,o),
(59,51,cs),
(59.845,51,o),
(15.196,45,o),
(-12,45,cs),
(-25.333,45,o),
(-37,37.333,o),
(-37,24,cs),
(-37,9.333,o),
(-26,0,o),
(-14,0,cs),
(253,0,ls),
(279.667,0,o),
(287,12,o),
(287,24,cs),
(287,44,o),
(271.333,49,o),
(258,49,cs),
(223.943,49,o),
(182,48.548,o),
(182,65,cs),
(182,92.498,o),
(208.252,175.15,o),
(225,223,c),
(473,223,l),
(477.089,206.644,o),
(489.528,168.266,o),
(503,115.5,cs),
(517.884,57.204,o),
(526,23.825,o),
(526,15,cs),
(526,-32.87,o),
(455,-13.632,o),
(455,-39,cs),
(455,-44.333,o),
(457.167,-48.333,o),
(461.5,-51,cs),
(465.833,-53.667,o),
(474,-55,o),
(486,-55,cs),
(719,-55,ls),
(741.667,-55,o),
(754,-49.667,o),
(754,-31,cs),
(754,-12.333,o),
(731.667,-9,o),
(713,-9,cs),
(649,-9,o),
(608,-7.667,o),
(600,23,cs),
(388,816,l),
(388,816,l)
);
},
{
closed = 1;
nodes = (
(381.348,597.479,o),
(430.777,393.353,o),
(458,289,c),
(442.667,288.333,o),
(426.833,288,o),
(410.5,288,cs),
(394.167,288,o),
(378.333,288,o),
(363,288,cs),
(342.333,288,o),
(322.5,288,o),
(303.5,288,cs),
(284.5,288,o),
(264.667,288.333,o),
(244,289,c),
(254.823,332.292,o),
(278.404,424.346,o),
(303.5,516,cs),
(330.088,613.105,o),
(346.703,679.672,o),
(356,715,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
86 1 10 9 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 1 0 106 0 1 9 1 106 0 10 0 4 5 10 4 90 0 2 0 3 2 3 87 0 9 9 20 67 8 7 2 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 0 1 0 106 0 1 9 1 106 0 9 10 9 106 0 10 0 4 5 10 4 90 0 2 0 3 2 3 87 8 7 2 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
99 93 84 82 19 36 52 56 30 52 38 38 34 11 24
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(686,-55,ls),
(709.333,-55,o),
(721,-50.333,o),
(721,-41,cs),
(721,-29,o),
(703.667,-29,o),
(685,-29,cs),
(653,-29,o),
(628.667,-27,o),
(612,-23,cs),
(595.333,-19,o),
(585.333,-10.333,o),
(582,3,cs),
(365,816,ls),
(361,830.667,o),
(351.667,835,o),
(345,835,cs),
(334.333,835,o),
(326.667,826.667,o),
(324,816,cs),
(309.578,766.966,o),
(264.676,604.466,o),
(224.5,456.5,cs),
(181.443,297.923,o),
(145.981,172.147,o),
(110,69,cs),
(100.667,45,o),
(90.333,33.667,o),
(61,31,cs),
(62.152,31,o),
(9.218,25,o),
(-30,25,cs),
(-43.333,25,o),
(-50,21.333,o),
(-50,14,cs),
(-50,3.333,o),
(-39,0,o),
(-27,0,cs),
(225,0,ls),
(238.333,0,o),
(247.333,1.667,o),
(252,5,cs),
(256.667,8.333,o),
(259,11.667,o),
(259,15,cs),
(259,29.667,o),
(238.333,29,o),
(225,29,cs),
(204.985,29,o),
(154,26.126,o),
(154,45,cs),
(154,74.195,o),
(186.968,172.749,o),
(206,238,c),
(477,238,l),
(481.265,218.806,o),
(496.406,169.833,o),
(511,112.5,cs),
(528.276,44.631,o),
(538,5.656,o),
(538,-5,cs),
(538,-37.488,o),
(442,-16.276,o),
(442,-41,cs),
(442,-46.333,o),
(444.167,-50,o),
(448.5,-52,cs),
(452.833,-54,o),
(461,-55,o),
(473,-55,cs)
);
},
{
closed = 1;
nodes = (
(298.667,272,o),
(259.333,272.667,o),
(218,274,c),
(233.077,338.616,o),
(254.142,418.105,o),
(284,529.5,cs),
(313.705,640.323,o),
(333.8,709,o),
(343,755,c),
(373.763,642.203,o),
(431.478,410.882,o),
(465,274,c),
(423.667,272.667,o),
(381.333,272,o),
(340,272,cs)
);
},
{
closed = 1;
nodes = (
(399.333,875,o),
(402,878.667,o),
(402,886,cs),
(402,910.697,o),
(326.988,972,o),
(307,972,cs),
(296.333,972,o),
(288,968.667,o),
(288,950,cs),
(288,928.367,o),
(377.689,875,o),
(394,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
84 1 11 10 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 0 1 0 106 0 1 10 1 106 0 11 0 5 6 11 5 90 4 1 2 0 3 2 3 87 0 10 10 20 67 9 8 2 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 0 1 0 106 0 1 10 1 106 0 10 11 10 106 0 11 0 5 6 11 5 90 4 1 2 0 3 2 3 87 9 8 2 6 6 7 83 0 7 7 13 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
97 91 81 79 67 66 51 52 56 25 20 51 38 37 34 12 24
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = Agrave;
unicode = 192;
},
{
glyphname = Amacron;
kernLeft = Aacute;
kernRight = Aacute;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(402,823.667,o),
(387,838,o),
(359,838,cs),
(324.333,838,o),
(314.333,822.667,o),
(305,792,cs),
(284.502,726.405,o),
(251.09,598.326,o),
(213,460,cs),
(175.492,323.786,o),
(134.319,181.005,o),
(107,101,cs),
(97.667,74.333,o),
(82,65.667,o),
(58,63,cs),
(54.446,63,o),
(35.539,57,o),
(1,57,cs),
(-12.333,57,o),
(-28,47.333,o),
(-28,30,cs),
(-28,11.333,o),
(-17,0,o),
(-5,0,cs),
(273,0,ls),
(299.667,0,o),
(307,14.333,o),
(307,29,cs),
(307,53,o),
(295.333,61,o),
(274,61,cs),
(250.667,61,o),
(232.833,62.333,o),
(220.5,65,cs),
(208.167,67.667,o),
(202,71.667,o),
(202,77,cs),
(202,98.202,o),
(218.883,167.573,o),
(238,214,c),
(470,214,l),
(467.773,222.165,o),
(517,58.814,o),
(517,35,cs),
(517,-16.343,o),
(464,4.508,o),
(464,-33,cs),
(464,-43.667,o),
(471,-55,o),
(495,-55,cs),
(742,-55,ls),
(764.667,-55,o),
(777,-49,o),
(777,-25,cs),
(777,-2.333,o),
(751.667,3,o),
(733,3,cs),
(648.169,3,o),
(619.061,7.727,o),
(613,35,cs),
(410,793,l),
(410,793,l)
);
},
{
closed = 1;
nodes = (
(385.454,565.914,o),
(421.464,413.633,o),
(453,298,c),
(420.39,298,o),
(415.185,296,o),
(358,296,cs),
(304.25,296,o),
(314.344,298,o),
(262,298,c),
(284.238,378.864,o),
(315.184,510.424,o),
(362,691,c)
);
},
{
closed = 1;
nodes = (
(491,960,o),
(472.667,959.5,o),
(452,958.5,cs),
(431.333,957.5,o),
(407,957,o),
(379,957,cs),
(336.698,957,o),
(288.437,959,o),
(258,959,cs),
(235.333,959,o),
(225,938.667,o),
(225,920,cs),
(225,901.333,o),
(239.333,880,o),
(258,880,cs),
(328.305,880,o),
(425.446,881,o),
(499,881,cs),
(527.782,881,o),
(535,907.801,o),
(535,923,cs),
(535,943,o),
(521.667,960,o),
(507,960,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
69 1 8 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
11 1 9 0 10 7 9 10 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 7 10 8 10 7 8 104 11 1 9 0 10 7 9 10 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 6 5 2 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
90 89 103 96 89 115 90 107 168 44 19 36 52 39 28 52 51 12 24
CALL[ ]	/* CallFunction */";
};
width = 710;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(384,830,o),
(372.333,837,o),
(353,837,cs),
(329,837,o),
(319.667,826.667,o),
(317,816,cs),
(293.137,737.253,o),
(267.659,639.167,o),
(219.5,466.5,cs),
(174.121,303.799,o),
(138.041,173.116,o),
(108,89,cs),
(100,65,o),
(87,53.667,o),
(59,51,cs),
(59.845,51,o),
(15.196,45,o),
(-12,45,cs),
(-25.333,45,o),
(-37,37.333,o),
(-37,24,cs),
(-37,9.333,o),
(-26,0,o),
(-14,0,cs),
(253,0,ls),
(279.667,0,o),
(287,12,o),
(287,24,cs),
(287,44,o),
(271.333,49,o),
(258,49,cs),
(223.943,49,o),
(182,48.548,o),
(182,65,cs),
(182,92.498,o),
(208.252,175.15,o),
(225,223,c),
(473,223,l),
(477.089,206.644,o),
(489.528,168.266,o),
(503,115.5,cs),
(517.884,57.204,o),
(526,23.825,o),
(526,15,cs),
(526,-32.87,o),
(455,-13.632,o),
(455,-39,cs),
(455,-44.333,o),
(457.167,-48.333,o),
(461.5,-51,cs),
(465.833,-53.667,o),
(474,-55,o),
(486,-55,cs),
(719,-55,ls),
(741.667,-55,o),
(754,-49.667,o),
(754,-31,cs),
(754,-12.333,o),
(731.667,-9,o),
(713,-9,cs),
(649,-9,o),
(608,-7.667,o),
(600,23,cs),
(388,816,l),
(388,816,l)
);
},
{
closed = 1;
nodes = (
(381.348,597.479,o),
(430.777,393.353,o),
(458,289,c),
(442.667,288.333,o),
(426.833,288,o),
(410.5,288,cs),
(394.167,288,o),
(378.333,288,o),
(363,288,cs),
(342.333,288,o),
(322.5,288,o),
(303.5,288,cs),
(284.5,288,o),
(264.667,288.333,o),
(244,289,c),
(254.823,332.292,o),
(278.404,424.346,o),
(303.5,516,cs),
(330.088,613.105,o),
(346.703,679.672,o),
(356,715,c)
);
},
{
closed = 1;
nodes = (
(482,939,o),
(464,939,o),
(443,938,cs),
(422,937,o),
(398,936,o),
(370,936,cs),
(328,936,o),
(279,938,o),
(249,938,cs),
(230,938,o),
(223,923,o),
(223,908,cs),
(223,893,o),
(234,877,o),
(249,877,cs),
(319,877,o),
(416,878,o),
(490,878,cs),
(513,878,o),
(519,900,o),
(519,911,cs),
(519,926,o),
(509,939,o),
(498,939,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
71 1 8 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
11 1 9 0 10 7 9 10 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 7 10 8 10 7 8 104 11 1 9 0 10 7 9 10 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 6 5 2 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
90 89 101 94 89 113 90 105 105 44 19 36 52 56 30 52 35 12 35
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(686,-55,ls),
(709.333,-55,o),
(721,-50.333,o),
(721,-41,cs),
(721,-29,o),
(703.667,-29,o),
(685,-29,cs),
(653,-29,o),
(628.667,-27,o),
(612,-23,cs),
(595.333,-19,o),
(585.333,-10.333,o),
(582,3,cs),
(365,816,ls),
(361,830.667,o),
(351.667,835,o),
(345,835,cs),
(334.333,835,o),
(326.667,826.667,o),
(324,816,cs),
(309.578,766.966,o),
(264.676,604.466,o),
(224.5,456.5,cs),
(181.443,297.923,o),
(145.981,172.147,o),
(110,69,cs),
(100.667,45,o),
(90.333,33.667,o),
(61,31,cs),
(62.152,31,o),
(9.218,25,o),
(-30,25,cs),
(-43.333,25,o),
(-50,21.333,o),
(-50,14,cs),
(-50,3.333,o),
(-39,0,o),
(-27,0,cs),
(225,0,ls),
(238.333,0,o),
(247.333,1.667,o),
(252,5,cs),
(256.667,8.333,o),
(259,11.667,o),
(259,15,cs),
(259,29.667,o),
(238.333,29,o),
(225,29,cs),
(204.985,29,o),
(154,26.126,o),
(154,45,cs),
(154,74.195,o),
(186.968,172.749,o),
(206,238,c),
(477,238,l),
(481.265,218.806,o),
(496.406,169.833,o),
(511,112.5,cs),
(528.276,44.631,o),
(538,5.656,o),
(538,-5,cs),
(538,-37.488,o),
(442,-16.276,o),
(442,-41,cs),
(442,-46.333,o),
(444.167,-50,o),
(448.5,-52,cs),
(452.833,-54,o),
(461,-55,o),
(473,-55,cs)
);
},
{
closed = 1;
nodes = (
(298.667,272,o),
(259.333,272.667,o),
(218,274,c),
(233.077,338.616,o),
(254.142,418.105,o),
(284,529.5,cs),
(313.705,640.323,o),
(333.8,709,o),
(343,755,c),
(373.763,642.203,o),
(431.478,410.882,o),
(465,274,c),
(423.667,272.667,o),
(381.333,272,o),
(340,272,cs)
);
},
{
closed = 1;
nodes = (
(306.305,875,o),
(403.446,876,o),
(477,876,cs),
(491.667,876,o),
(496,887.333,o),
(496,894,cs),
(496,900.667,o),
(490.333,907,o),
(485,907,cs),
(469,907,o),
(450.667,906.5,o),
(430,905.5,cs),
(409.333,904.5,o),
(385,904,o),
(357,904,cs),
(314.698,904,o),
(266.437,906,o),
(236,906,cs),
(225.333,906,o),
(220,897.667,o),
(220,891,cs),
(220,884.333,o),
(226.667,875,o),
(236,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
69 1 9 8 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
12 1 10 0 11 8 10 11 91 0 9 0 3 4 9 3 90 2 1 0 0 1 0 1 87 0 8 8 20 67 7 6 2 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 8 11 9 11 8 9 104 12 1 10 0 11 8 10 11 91 0 9 0 3 4 9 3 90 2 1 0 0 1 0 1 87 7 6 2 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
88 87 99 92 87 111 88 103 82 76 44 18 51 52 56 25 20 51 34 13 24
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = Amacron;
unicode = 256;
},
{
glyphname = Aogonek;
kernLeft = Aacute;
kernRight = Aacute;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(674.345,-212,o),
(705,-182.646,o),
(705,-159,cs),
(705,-147,o),
(693.333,-135,o),
(680,-135,cs),
(660.449,-135,o),
(661.136,-159,o),
(620,-159,cs),
(605.333,-159,o),
(591,-152.667,o),
(591,-138,cs),
(591,-111.333,o),
(606.667,-69.667,o),
(636,-55,c),
(742,-55,ls),
(764.667,-55,o),
(777,-49,o),
(777,-25,cs),
(777,-2.333,o),
(751.667,3,o),
(733,3,cs),
(648.169,3,o),
(619.061,7.727,o),
(613,35,cs),
(410,793,ls),
(402,823.667,o),
(387,838,o),
(359,838,cs),
(324.333,838,o),
(314.333,822.667,o),
(305,792,cs),
(284.502,726.405,o),
(251.09,598.326,o),
(213,460,cs),
(175.492,323.786,o),
(134.319,181.005,o),
(107,101,cs),
(97.667,74.333,o),
(82,65.667,o),
(58,63,cs),
(54.446,63,o),
(35.539,57,o),
(1,57,cs),
(-12.333,57,o),
(-28,47.333,o),
(-28,30,cs),
(-28,11.333,o),
(-17,0,o),
(-5,0,cs),
(273,0,ls),
(299.667,0,o),
(307,14.333,o),
(307,29,cs),
(307,53,o),
(295.333,61,o),
(274,61,cs),
(250.667,61,o),
(232.833,62.333,o),
(220.5,65,cs),
(208.167,67.667,o),
(202,71.667,o),
(202,77,cs),
(202,98.202,o),
(218.883,167.573,o),
(238,214,c),
(470,214,l),
(467.773,222.165,o),
(517,58.814,o),
(517,35,cs),
(517,-16.343,o),
(464,4.508,o),
(464,-33,cs),
(464,-43.667,o),
(471,-55,o),
(495,-55,cs),
(579,-55,l),
(553.769,-69.017,o),
(512,-93.558,o),
(512,-137,cs),
(512,-188.579,o),
(572.091,-212,o),
(622,-212,cs)
);
},
{
closed = 1;
nodes = (
(385.454,565.914,o),
(421.464,413.633,o),
(453,298,c),
(420.39,298,o),
(415.185,296,o),
(358,296,cs),
(304.25,296,o),
(314.344,298,o),
(262,298,c),
(284.238,378.864,o),
(315.184,510.424,o),
(362,691,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
99 1 12 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 11 1 10 1 11 10 104 0 12 0 2 3 12 2 90 0 8 9 1 1 11 8 1 91 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 67 0 10 10 0 83 13 1 0 0 17 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 11 1 10 1 11 10 104 0 12 0 2 3 12 2 90 0 8 9 1 1 11 8 1 91 0 10 13 1 0 10 0 87 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 7 12 7 106 0 11 1 10 1 11 10 104 0 12 0 2 3 12 2 90 0 8 9 1 1 11 8 1 91 0 10 13 1 0 10 0 87 6 5 2 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
1 0 114 104 92 90 87 85 80 78 74 71 65 63 51 50 47 45 41 38 34 32 25 24 12 10 0 98 1 98 14 15
CALL[ ]	/* CallFunction */";
};
width = 710;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(384,830,o),
(372.333,837,o),
(353,837,cs),
(329,837,o),
(319.667,826.667,o),
(317,816,cs),
(293.137,737.253,o),
(267.659,639.167,o),
(219.5,466.5,cs),
(174.121,303.799,o),
(138.041,173.116,o),
(108,89,cs),
(100,65,o),
(87,53.667,o),
(59,51,cs),
(59.845,51,o),
(15.196,45,o),
(-12,45,cs),
(-25.333,45,o),
(-37,37.333,o),
(-37,24,cs),
(-37,9.333,o),
(-26,0,o),
(-14,0,cs),
(253,0,ls),
(279.667,0,o),
(287,12,o),
(287,24,cs),
(287,44,o),
(271.333,49,o),
(258,49,cs),
(223.943,49,o),
(182,48.548,o),
(182,65,cs),
(182,92.498,o),
(208.252,175.15,o),
(225,223,c),
(473,223,l),
(477.089,206.644,o),
(489.528,168.266,o),
(503,115.5,cs),
(517.884,57.204,o),
(526,23.825,o),
(526,15,cs),
(526,-32.87,o),
(455,-13.632,o),
(455,-39,cs),
(455,-44.333,o),
(457.167,-48.333,o),
(461.5,-51,cs),
(465.833,-53.667,o),
(474,-55,o),
(486,-55,cs),
(719,-55,ls),
(741.667,-55,o),
(754,-49.667,o),
(754,-31,cs),
(754,-12.333,o),
(731.667,-9,o),
(713,-9,cs),
(649,-9,o),
(608,-7.667,o),
(600,23,cs),
(388,816,l),
(388,816,l)
);
},
{
closed = 1;
nodes = (
(381.348,597.479,o),
(430.777,393.353,o),
(458,289,c),
(442.667,288.333,o),
(426.833,288,o),
(410.5,288,cs),
(394.167,288,o),
(378.333,288,o),
(363,288,cs),
(342.333,288,o),
(322.5,288,o),
(303.5,288,cs),
(284.5,288,o),
(264.667,288.333,o),
(244,289,c),
(254.823,332.292,o),
(278.404,424.346,o),
(303.5,516,cs),
(330.088,613.105,o),
(346.703,679.672,o),
(356,715,c)
);
},
{
closed = 1;
nodes = (
(561,-45,o),
(549,-52,o),
(538,-61,cs),
(519,-76,o),
(502,-97,o),
(502,-128,cs),
(502,-171,o),
(544,-201,o),
(603,-201,cs),
(651,-201,o),
(681,-160,o),
(681,-150,cs),
(681,-139,o),
(675,-128,o),
(660,-128,cs),
(656,-128,o),
(652,-130,o),
(647,-134,cs),
(642,-139,o),
(636,-144,o),
(631,-149,cs),
(625,-155,o),
(614,-158,o),
(597,-158,cs),
(581,-158,o),
(566,-143,o),
(566,-127,cs),
(566,-108,o),
(580,-54,o),
(625,-39,c),
(575,-38,l),
(575,-38,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
71 1 8 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 0 4 12 12 0 96 0 10 1 9 1 10 9 104 0 8 0 2 3 8 2 90 13 1 12 0 1 10 12 1 92 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 67 0 9 9 11 83 0 11 11 17 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 0 4 12 12 0 96 0 10 1 9 1 10 9 104 0 8 0 2 3 8 2 90 13 1 12 0 1 10 12 1 92 0 9 0 11 9 11 87 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 0 4 12 4 0 12 104 0 10 1 9 1 10 9 104 0 8 0 2 3 8 2 90 13 1 12 0 1 10 12 1 92 0 9 0 11 9 11 87 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 7 8 7 106 0 0 4 12 4 0 12 104 0 10 1 9 1 10 9 104 0 8 0 2 3 8 2 90 13 1 12 0 1 10 12 1 92 0 9 0 11 9 11 87 6 5 2 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
89 89 89 118 89 118 111 109 103 101 98 96 105 44 19 36 52 56 30 52 35 14 35
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(628.13,-202,o),
(658,-160.791,o),
(658,-151,cs),
(658,-143,o),
(656,-135,o),
(644,-135,cs),
(624.96,-135,o),
(618.683,-175,o),
(582,-175,cs),
(551.028,-175,o),
(543,-145.466,o),
(543,-128,cs),
(543,-110.446,o),
(551.43,-77.113,o),
(576,-55,c),
(686,-55,ls),
(709.333,-55,o),
(721,-50.333,o),
(721,-41,cs),
(721,-29,o),
(703.667,-29,o),
(685,-29,cs),
(653,-29,o),
(628.667,-27,o),
(612,-23,cs),
(595.333,-19,o),
(585.333,-10.333,o),
(582,3,cs),
(365,816,ls),
(361,830.667,o),
(351.667,835,o),
(345,835,cs),
(334.333,835,o),
(326.667,826.667,o),
(324,816,cs),
(309.578,766.966,o),
(264.676,604.466,o),
(224.5,456.5,cs),
(181.443,297.923,o),
(145.981,172.147,o),
(110,69,cs),
(100.667,45,o),
(90.333,33.667,o),
(61,31,cs),
(62.152,31,o),
(9.218,25,o),
(-30,25,cs),
(-43.333,25,o),
(-50,21.333,o),
(-50,14,cs),
(-50,3.333,o),
(-39,0,o),
(-27,0,cs),
(225,0,ls),
(238.333,0,o),
(247.333,1.667,o),
(252,5,cs),
(256.667,8.333,o),
(259,11.667,o),
(259,15,cs),
(259,29.667,o),
(238.333,29,o),
(225,29,cs),
(204.985,29,o),
(154,26.126,o),
(154,45,cs),
(154,74.195,o),
(186.968,172.749,o),
(206,238,c),
(477,238,l),
(481.265,218.806,o),
(496.406,169.833,o),
(511,112.5,cs),
(528.276,44.631,o),
(538,5.656,o),
(538,-5,cs),
(538,-37.488,o),
(442,-16.276,o),
(442,-41,cs),
(442,-46.333,o),
(444.167,-50,o),
(448.5,-52,cs),
(452.833,-54,o),
(461,-55,o),
(473,-55,cs),
(540,-55,l),
(521.333,-69.667,o),
(499,-94.333,o),
(499,-129,cs),
(499,-171.667,o),
(533.333,-202,o),
(580,-202,cs)
);
},
{
closed = 1;
nodes = (
(298.667,272,o),
(259.333,272.667,o),
(218,274,c),
(233.077,338.616,o),
(254.142,418.105,o),
(284,529.5,cs),
(313.705,640.323,o),
(333.8,709,o),
(343,755,c),
(373.763,642.203,o),
(431.478,410.882,o),
(465,274,c),
(423.667,272.667,o),
(381.333,272,o),
(340,272,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
99 1 13 12 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 3 1 2 1 3 2 104 0 13 0 7 8 13 7 90 6 1 0 5 1 1 3 0 1 91 0 12 12 20 67 11 10 2 8 8 9 83 0 9 9 13 67 0 2 2 4 83 0 4 4 17 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 3 1 2 1 3 2 104 0 13 0 7 8 13 7 90 6 1 0 5 1 1 3 0 1 91 0 2 0 4 2 4 87 0 12 12 20 67 11 10 2 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 12 13 12 106 0 3 1 2 1 3 2 104 0 13 0 7 8 13 7 90 6 1 0 5 1 1 3 0 1 91 0 2 0 4 2 4 87 11 10 2 8 8 9 83 0 9 9 13 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
112 106 96 94 82 81 79 76 73 70 56 25 20 37 38 35 41 35 34 14 24
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = Aogonek;
unicode = 260;
},
{
glyphname = Aring;
kernLeft = Aacute;
kernRight = Aacute;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(449,950.333,o),
(423,972,o),
(371,972,cs),
(329.667,972,o),
(297,943.667,o),
(297,905,cs),
(297,866.333,o),
(330.667,840,o),
(376,840,cs),
(416,840,o),
(449,861.667,o),
(449,907,cs)
);
},
{
closed = 1;
nodes = (
(379.667,930,o),
(394,927.333,o),
(394,906,cs),
(394,886,o),
(382.667,882,o),
(376,882,cs),
(366.667,882,o),
(352,886.333,o),
(352,905,cs),
(352,927.667,o),
(367.667,930,o),
(373,930,cs)
);
},
{
closed = 1;
nodes = (
(402,823.667,o),
(387,838,o),
(359,838,cs),
(324.333,838,o),
(314.333,822.667,o),
(305,792,cs),
(284.502,726.405,o),
(251.09,598.326,o),
(213,460,cs),
(175.492,323.786,o),
(134.319,181.005,o),
(107,101,cs),
(97.667,74.333,o),
(82,65.667,o),
(58,63,cs),
(54.446,63,o),
(35.539,57,o),
(1,57,cs),
(-12.333,57,o),
(-28,47.333,o),
(-28,30,cs),
(-28,11.333,o),
(-17,0,o),
(-5,0,cs),
(273,0,ls),
(299.667,0,o),
(307,14.333,o),
(307,29,cs),
(307,53,o),
(295.333,61,o),
(274,61,cs),
(250.667,61,o),
(232.833,62.333,o),
(220.5,65,cs),
(208.167,67.667,o),
(202,71.667,o),
(202,77,cs),
(202,98.202,o),
(218.883,167.573,o),
(238,214,c),
(470,214,l),
(467.773,222.165,o),
(517,58.814,o),
(517,35,cs),
(517,-16.343,o),
(464,4.508,o),
(464,-33,cs),
(464,-43.667,o),
(471,-55,o),
(495,-55,cs),
(742,-55,ls),
(764.667,-55,o),
(777,-49,o),
(777,-25,cs),
(777,-2.333,o),
(751.667,3,o),
(733,3,cs),
(648.169,3,o),
(619.061,7.727,o),
(613,35,cs),
(410,793,l),
(410,793,l)
);
},
{
closed = 1;
nodes = (
(385.454,565.914,o),
(421.464,413.633,o),
(453,298,c),
(420.39,298,o),
(415.185,296,o),
(358,296,cs),
(304.25,296,o),
(314.344,298,o),
(262,298,c),
(284.238,378.864,o),
(315.184,510.424,o),
(362,691,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
92 1 12 11 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
13 1 2 1 3 0 2 96 0 3 0 1 3 94 0 1 0 0 11 1 0 91 0 12 0 6 7 12 6 90 0 4 0 5 4 5 87 0 11 11 20 67 10 9 2 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
13 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 1 0 0 11 1 0 91 0 12 0 6 7 12 6 90 0 4 0 5 4 5 87 0 11 11 20 67 10 9 2 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
13 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 11 0 12 0 11 12 104 0 1 0 0 11 1 0 91 0 12 0 6 7 12 6 90 0 4 0 5 4 5 87 10 9 2 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
12 11 107 97 89 87 75 74 71 69 65 62 58 56 49 48 36 33 29 26 18 16 11 22 12 22 36 34 14 17
CALL[ ]	/* CallFunction */";
};
width = 710;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(433,952.667,o),
(409.333,972,o),
(362,972,cs),
(322,972,o),
(291,946.667,o),
(291,912,cs),
(291,877.333,o),
(323,853,o),
(363,853,cs),
(399,853,o),
(433,872.667,o),
(433,914,cs)
);
},
{
closed = 1;
nodes = (
(375.333,938,o),
(388,931.667,o),
(388,913,cs),
(388,891.667,o),
(369.667,887,o),
(363,887,cs),
(355,887,o),
(336,892,o),
(336,912,cs),
(336,932,o),
(351.333,938,o),
(362,938,cs)
);
},
{
closed = 1;
nodes = (
(384,830,o),
(372.333,837,o),
(353,837,cs),
(329,837,o),
(319.667,826.667,o),
(317,816,cs),
(293.137,737.253,o),
(267.659,639.167,o),
(219.5,466.5,cs),
(174.121,303.799,o),
(138.041,173.116,o),
(108,89,cs),
(100,65,o),
(87,53.667,o),
(59,51,cs),
(59.845,51,o),
(15.196,45,o),
(-12,45,cs),
(-25.333,45,o),
(-37,37.333,o),
(-37,24,cs),
(-37,9.333,o),
(-26,0,o),
(-14,0,cs),
(253,0,ls),
(279.667,0,o),
(287,12,o),
(287,24,cs),
(287,44,o),
(271.333,49,o),
(258,49,cs),
(223.943,49,o),
(182,48.548,o),
(182,65,cs),
(182,92.498,o),
(208.252,175.15,o),
(225,223,c),
(473,223,l),
(477.089,206.644,o),
(489.528,168.266,o),
(503,115.5,cs),
(517.884,57.204,o),
(526,23.825,o),
(526,15,cs),
(526,-32.87,o),
(455,-13.632,o),
(455,-39,cs),
(455,-44.333,o),
(457.167,-48.333,o),
(461.5,-51,cs),
(465.833,-53.667,o),
(474,-55,o),
(486,-55,cs),
(719,-55,ls),
(741.667,-55,o),
(754,-49.667,o),
(754,-31,cs),
(754,-12.333,o),
(731.667,-9,o),
(713,-9,cs),
(649,-9,o),
(608,-7.667,o),
(600,23,cs),
(388,816,l),
(388,816,l)
);
},
{
closed = 1;
nodes = (
(381.348,597.479,o),
(430.777,393.353,o),
(458,289,c),
(442.667,288.333,o),
(426.833,288,o),
(410.5,288,cs),
(394.167,288,o),
(378.333,288,o),
(363,288,cs),
(342.333,288,o),
(322.5,288,o),
(303.5,288,cs),
(284.5,288,o),
(264.667,288.333,o),
(244,289,c),
(254.823,332.292,o),
(278.404,424.346,o),
(303.5,516,cs),
(330.088,613.105,o),
(346.703,679.672,o),
(356,715,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
93 1 12 11 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
13 1 2 1 3 0 2 96 0 3 0 1 3 94 0 1 0 0 11 1 0 91 0 12 0 6 7 12 6 90 0 4 0 5 4 5 87 0 11 11 20 67 10 9 2 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
13 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 1 0 0 11 1 0 91 0 12 0 6 7 12 6 90 0 4 0 5 4 5 87 0 11 11 20 67 10 9 2 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
13 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 11 0 12 0 11 12 104 0 1 0 0 11 1 0 91 0 12 0 6 7 12 6 90 0 4 0 5 4 5 87 10 9 2 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
12 11 106 100 91 89 77 76 73 71 67 64 60 57 49 48 34 31 27 25 18 16 11 22 12 22 36 34 14 17
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(686,-55,ls),
(709.333,-55,o),
(721,-50.333,o),
(721,-41,cs),
(721,-29,o),
(703.667,-29,o),
(685,-29,cs),
(653,-29,o),
(628.667,-27,o),
(612,-23,cs),
(595.333,-19,o),
(585.333,-10.333,o),
(582,3,cs),
(365,816,ls),
(361,830.667,o),
(351.667,835,o),
(345,835,cs),
(334.333,835,o),
(326.667,826.667,o),
(324,816,cs),
(309.578,766.966,o),
(264.676,604.466,o),
(224.5,456.5,cs),
(181.443,297.923,o),
(145.981,172.147,o),
(110,69,cs),
(100.667,45,o),
(90.333,33.667,o),
(61,31,cs),
(62.152,31,o),
(9.218,25,o),
(-30,25,cs),
(-43.333,25,o),
(-50,21.333,o),
(-50,14,cs),
(-50,3.333,o),
(-39,0,o),
(-27,0,cs),
(225,0,ls),
(238.333,0,o),
(247.333,1.667,o),
(252,5,cs),
(256.667,8.333,o),
(259,11.667,o),
(259,15,cs),
(259,29.667,o),
(238.333,29,o),
(225,29,cs),
(204.985,29,o),
(154,26.126,o),
(154,45,cs),
(154,74.195,o),
(186.968,172.749,o),
(206,238,c),
(477,238,l),
(481.265,218.806,o),
(496.406,169.833,o),
(511,112.5,cs),
(528.276,44.631,o),
(538,5.656,o),
(538,-5,cs),
(538,-37.488,o),
(442,-16.276,o),
(442,-41,cs),
(442,-46.333,o),
(444.167,-50,o),
(448.5,-52,cs),
(452.833,-54,o),
(461,-55,o),
(473,-55,cs)
);
},
{
closed = 1;
nodes = (
(298.667,272,o),
(259.333,272.667,o),
(218,274,c),
(233.077,338.616,o),
(254.142,418.105,o),
(284,529.5,cs),
(313.705,640.323,o),
(333.8,709,o),
(343,755,c),
(373.763,642.203,o),
(431.478,410.882,o),
(465,274,c),
(423.667,272.667,o),
(381.333,272,o),
(340,272,cs)
);
},
{
closed = 1;
nodes = (
(375.333,875,o),
(410,890.961,o),
(410,925,cs),
(410,950.333,o),
(389,972,o),
(349,972,cs),
(310.333,972,o),
(283,951,o),
(283,923,cs),
(283,895,o),
(310.333,875,o),
(345,875,cs)
);
},
{
closed = 1;
nodes = (
(322.333,895,o),
(313,908.333,o),
(313,923,cs),
(313,935,o),
(321.667,951,o),
(347,951,cs),
(373.667,951,o),
(380,936,o),
(380,924,cs),
(380,904.667,o),
(368.333,895,o),
(345,895,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
94 1 13 12 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 14 1 2 3 1 2 91 0 3 0 0 12 3 0 91 0 13 0 7 8 13 7 90 6 1 4 0 5 4 5 87 0 12 12 20 67 11 10 2 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 12 0 13 0 12 13 104 0 1 14 1 2 3 1 2 91 0 3 0 0 12 3 0 91 0 13 0 7 8 13 7 90 6 1 4 0 5 4 5 87 11 10 2 8 8 9 83 0 9 9 13 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
15 14 107 101 91 89 77 76 74 71 68 65 61 58 50 49 40 39 35 32 29 27 21 19 14 24 15 24 36 36 15 17
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = Aring;
unicode = 197;
},
{
glyphname = Aringacute;
kernLeft = Aacute;
kernRight = Aacute;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(434,824.667,o),
(421.667,844.333,o),
(397,853,c),
(433.33,871.165,o),
(479,906.024,o),
(479,936,cs),
(479,953.333,o),
(464.667,972,o),
(438,972,cs),
(400.323,972,o),
(324,899.498,o),
(324,872,cs),
(324,865.333,o),
(326,859.667,o),
(330,855,c),
(302,844.333,o),
(282,821.333,o),
(282,792,cs),
(282,762.667,o),
(300.333,742.667,o),
(327,732,c),
(321,728.667,o),
(317.333,723.667,o),
(316,717,c),
(294.307,651.92,o),
(260.024,542.501,o),
(221,424.5,cs),
(172.391,277.517,o),
(138.059,174.385,o),
(110,101,cs),
(99.333,74.333,o),
(86.333,65.667,o),
(61,63,cs),
(57.446,63,o),
(38.53,57,o),
(4,57,cs),
(-9.333,57,o),
(-24,47.333,o),
(-24,30,cs),
(-24,11.333,o),
(-13,0,o),
(-1,0,cs),
(23.667,0,o),
(48,0.667,o),
(72,2,cs),
(96,3.333,o),
(120.333,4,o),
(145,4,cs),
(167,4,o),
(189,3.333,o),
(211,2,cs),
(233,0.667,o),
(254.667,0,o),
(276,0,cs),
(302.667,0,o),
(310,14.333,o),
(310,29,cs),
(310,53,o),
(298.333,61,o),
(285,61,cs),
(253,61,o),
(231.833,63,o),
(221.5,67,cs),
(211.167,71,o),
(206,74.333,o),
(206,77,cs),
(206,74.663,o),
(221.734,135.641,o),
(254,214,c),
(464,214,l),
(468.842,200.686,o),
(521,52.452,o),
(521,27,cs),
(521,-32.955,o),
(468,-7.156,o),
(468,-38,cs),
(468,-48.667,o),
(475,-58,o),
(499,-58,cs),
(521.667,-58,o),
(543.5,-57.167,o),
(564.5,-55.5,cs),
(585.5,-53.833,o),
(608.667,-53,o),
(634,-53,cs),
(649.333,-53,o),
(667.833,-53.333,o),
(689.5,-54,cs),
(711.167,-54.667,o),
(730,-55,o),
(746,-55,cs),
(768.667,-55,o),
(781,-49,o),
(781,-25,cs),
(781,-2.333,o),
(754.667,3,o),
(736,3,cs),
(700.667,3,o),
(673,4.833,o),
(653,8.5,cs),
(633,12.167,o),
(620.667,21,o),
(616,35,cs),
(408,717,ls),
(406,723,o),
(401.667,728,o),
(395,732,c),
(417.667,742.667,o),
(434,763.333,o),
(434,794,cs)
);
},
{
closed = 1;
nodes = (
(374.122,570.047,o),
(413.521,385.045,o),
(447,298,c),
(437.667,297.333,o),
(425.667,297,o),
(411,297,cs),
(396.333,297,o),
(384.333,297,o),
(375,297,cs),
(357,297,o),
(340.833,297,o),
(326.5,297,cs),
(312.167,297,o),
(296,297.333,o),
(278,298,c),
(285.637,326.638,o),
(304.096,384.846,o),
(324.5,452.5,cs),
(344.886,520.097,o),
(361.354,572.885,o),
(369,592,c)
);
},
{
closed = 1;
nodes = (
(367.333,818,o),
(382,814.333,o),
(382,793,cs),
(382,771.667,o),
(367.667,767,o),
(361,767,cs),
(354.333,767,o),
(335,770.667,o),
(335,792,cs),
(335,814.667,o),
(351.333,818,o),
(358,818,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
99 84 2 10 8 114 101 78 3 4 9 11 2 66 0 8 10 8 106 12 1 10 11 10 106 0 11 9 11 106 0 9 0 3 4 9 3 90 0 0 2 1 1 0 1 87 7 6 2 4 4 5 83 0 5 5 13 5 68 120 119 126 124 119 130 120 130 113 108 92 90 19 36 132 39 28 33 84 40 13 23
CALL[ ]	/* CallFunction */";
};
width = 716;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(387,730,o),
(375.333,737,o),
(356,737,cs),
(332,737,o),
(322.667,726.667,o),
(320,716,c),
(298,654.399,o),
(268.648,559.446,o),
(222.5,416.5,cs),
(177.329,276.579,o),
(140.988,162.971,o),
(111,89,cs),
(103,65,o),
(90,53.667,o),
(62,51,cs),
(62.845,51,o),
(18.196,45,o),
(-9,45,cs),
(-22.333,45,o),
(-34,37.333,o),
(-34,24,cs),
(-34,9.333,o),
(-23,0,o),
(-11,0,cs),
(256,0,ls),
(282.667,0,o),
(290,12,o),
(290,24,cs),
(290,44,o),
(274.333,49,o),
(261,49,cs),
(226.943,49,o),
(185,48.548,o),
(185,65,c),
(187.978,88.825,o),
(219.318,176.296,o),
(238,223,c),
(466,223,l),
(470.178,211.858,o),
(484.233,169.605,o),
(501.5,115.5,cs),
(520.041,57.406,o),
(529,23.837,o),
(529,15,cs),
(529,-32.87,o),
(458,-13.632,o),
(458,-39,cs),
(458,-44.333,o),
(460.167,-48.333,o),
(464.5,-51,cs),
(468.833,-53.667,o),
(477,-55,o),
(489,-55,cs),
(722,-55,ls),
(744.667,-55,o),
(757,-49.667,o),
(757,-31,cs),
(757,-12.333,o),
(734.667,-9,o),
(716,-9,cs),
(652,-9,o),
(612.333,-7.667,o),
(603,23,cs),
(391,716,l),
(391,716,l)
);
},
{
closed = 1;
nodes = (
(386.222,508.834,o),
(421.839,379.134,o),
(451,289,c),
(437,288.333,o),
(422.833,288,o),
(408.5,288,cs),
(394.167,288,o),
(380,288,o),
(366,288,cs),
(346.667,288,o),
(328.5,288,o),
(311.5,288,cs),
(294.5,288,o),
(276.333,288.333,o),
(257,289,c),
(279.208,375.057,o),
(340.048,548.667,o),
(359,615,c)
);
},
{
closed = 1;
nodes = (
(452,957.667,o),
(442,969.333,o),
(422,972,c),
(389.5,972,o),
(317.639,908.392,o),
(315,882,cs),
(315,870,o),
(318,860.333,o),
(330,859,c),
(308.667,848.333,o),
(296,829.667,o),
(296,807,cs),
(296,772.333,o),
(328,748,o),
(368,748,cs),
(404,748,o),
(438,767.667,o),
(438,809,cs),
(438,847.667,o),
(414.333,867,o),
(367,867,cs),
(363,867,l),
(399.197,882.513,o),
(452,912.717,o),
(452,939,cs)
);
},
{
closed = 1;
nodes = (
(380.333,833,o),
(393,826.667,o),
(393,808,cs),
(393,786.667,o),
(374.667,782,o),
(368,782,cs),
(360,782,o),
(341,787,o),
(341,807,cs),
(341,827,o),
(356.333,833,o),
(367,833,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
106 1 9 11 103 1 12 9 70 1 8 7 31 1 3 2 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 11 9 11 106 14 1 12 9 13 10 12 96 0 13 10 9 13 94 0 7 10 8 10 7 8 104 0 9 0 10 7 9 10 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 11 9 11 106 14 1 12 9 13 9 12 13 104 0 13 10 9 13 10 102 0 7 10 8 10 7 8 104 0 9 0 10 7 9 10 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 87 6 5 2 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
115 114 121 119 114 125 115 125 111 110 98 96 93 91 103 44 19 36 52 56 30 52 34 15 24
CALL[ ]	/* CallFunction */";
};
width = 703;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(492.333,-55,o),
(509.833,-54.667,o),
(527.5,-54,cs),
(545.167,-53.333,o),
(563,-53,o),
(581,-53,cs),
(598.333,-53,o),
(616.167,-53.333,o),
(634.5,-54,cs),
(652.833,-54.667,o),
(670.667,-55,o),
(688,-55,cs),
(711.333,-55,o),
(723,-50.333,o),
(723,-41,cs),
(723,-29,o),
(705.667,-29,o),
(687,-29,cs),
(655,-29,o),
(630.833,-27,o),
(614.5,-23,cs),
(598.167,-19,o),
(588,-10.333,o),
(584,3,cs),
(367,714,ls),
(363,728.667,o),
(353.667,733,o),
(347,733,cs),
(336.333,733,o),
(328.667,724.667,o),
(326,714,cs),
(303.365,637.042,o),
(273.528,548.877,o),
(226.5,405.5,cs),
(175.455,249.876,o),
(147.556,170.926,o),
(112,69,cs),
(102.667,45,o),
(92.333,33.667,o),
(63,31,cs),
(64.152,31,o),
(11.218,25,o),
(-28,25,cs),
(-41.333,25,o),
(-48,21.333,o),
(-48,14,cs),
(-48,3.333,o),
(-37,0,o),
(-25,0,cs),
(17.667,1.333,o),
(58.333,2,o),
(101,2,cs),
(122.333,2,o),
(143.333,1.667,o),
(164,1,cs),
(184.667,0.333,o),
(205.667,0,o),
(227,0,cs),
(240.333,0,o),
(249.333,1.667,o),
(254,5,cs),
(258.667,8.333,o),
(261,11.667,o),
(261,15,cs),
(261,29.667,o),
(240.333,29,o),
(227,29,cs),
(206.985,29,o),
(156,26.126,o),
(156,45,cs),
(156,74.529,o),
(198.06,179.92,o),
(215,238,c),
(469,238,l),
(471.616,226.228,o),
(486.058,181.872,o),
(507.5,112.5,cs),
(528.892,43.292,o),
(540,7.081,o),
(540,-5,cs),
(540,-37.488,o),
(444,-16.276,o),
(444,-41,cs),
(444,-46.333,o),
(446.167,-50,o),
(450.5,-52,cs),
(454.833,-54,o),
(463,-55,o),
(475,-55,cs)
);
},
{
closed = 1;
nodes = (
(300.667,272,o),
(268.333,272.667,o),
(227,274,c),
(253.831,397.423,o),
(327.201,561.041,o),
(345,653,c),
(383.232,512.818,o),
(425.599,402.221,o),
(457,274,c),
(415.667,272.667,o),
(383.333,272,o),
(342,272,cs)
);
},
{
closed = 1;
nodes = (
(377.333,759,o),
(412,774.961,o),
(412,809,cs),
(412,834.333,o),
(391,856,o),
(351,856,cs),
(312.333,856,o),
(285,835,o),
(285,807,cs),
(285,779,o),
(312.333,759,o),
(347,759,cs)
);
},
{
closed = 1;
nodes = (
(324.333,782,o),
(319,792.333,o),
(319,807,cs),
(319,819,o),
(323.667,833,o),
(349,833,cs),
(375.667,833,o),
(377,820,o),
(377,808,cs),
(377,789.333,o),
(369.667,782,o),
(347,782,cs)
);
},
{
closed = 1;
nodes = (
(323.311,875,o),
(413,928.367,o),
(413,950,cs),
(413,968.667,o),
(404.667,972,o),
(394,972,cs),
(374.012,972,o),
(299,910.697,o),
(299,886,cs),
(299,878.667,o),
(301.667,875,o),
(307,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
79 1 9 8 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 15 14 15 106 0 14 11 14 106 0 8 10 9 10 8 9 104 0 13 0 10 8 13 10 91 0 9 0 3 4 9 3 90 2 1 0 0 1 0 1 87 16 1 12 12 11 83 0 11 11 20 67 7 6 2 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
0 15 14 15 106 0 14 11 14 106 0 8 10 9 10 8 9 104 0 11 16 1 12 13 11 12 91 0 13 0 10 8 13 10 91 0 9 0 3 4 9 3 90 2 1 0 0 1 0 1 87 7 6 2 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
110 109 134 132 127 125 116 114 109 120 110 120 107 105 101 99 90 84 44 18 51 132 56 25 20 131 34 17 24
CALL[ ]	/* CallFunction */";
};
width = 685;
}
);
note = Aringacute;
unicode = 506;
},
{
glyphname = Atilde;
kernLeft = Aacute;
kernRight = Aacute;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(402,823.667,o),
(387,838,o),
(359,838,cs),
(324.333,838,o),
(314.333,822.667,o),
(305,792,cs),
(284.502,726.405,o),
(251.09,598.326,o),
(213,460,cs),
(175.492,323.786,o),
(134.319,181.005,o),
(107,101,cs),
(97.667,74.333,o),
(82,65.667,o),
(58,63,cs),
(54.446,63,o),
(35.539,57,o),
(1,57,cs),
(-12.333,57,o),
(-28,47.333,o),
(-28,30,cs),
(-28,11.333,o),
(-17,0,o),
(-5,0,cs),
(273,0,ls),
(299.667,0,o),
(307,14.333,o),
(307,29,cs),
(307,53,o),
(295.333,61,o),
(274,61,cs),
(250.667,61,o),
(232.833,62.333,o),
(220.5,65,cs),
(208.167,67.667,o),
(202,71.667,o),
(202,77,cs),
(202,98.202,o),
(218.883,167.573,o),
(238,214,c),
(470,214,l),
(467.773,222.165,o),
(517,58.814,o),
(517,35,cs),
(517,-16.343,o),
(464,4.508,o),
(464,-33,cs),
(464,-43.667,o),
(471,-55,o),
(495,-55,cs),
(742,-55,ls),
(764.667,-55,o),
(777,-49,o),
(777,-25,cs),
(777,-2.333,o),
(751.667,3,o),
(733,3,cs),
(648.169,3,o),
(619.061,7.727,o),
(613,35,cs),
(410,793,l),
(410,793,l)
);
},
{
closed = 1;
nodes = (
(385.454,565.914,o),
(421.464,413.633,o),
(453,298,c),
(420.39,298,o),
(415.185,296,o),
(358,296,cs),
(304.25,296,o),
(314.344,298,o),
(262,298,c),
(284.238,378.864,o),
(315.184,510.424,o),
(362,691,c)
);
},
{
closed = 1;
nodes = (
(180,877,o),
(187,861,o),
(199,861,cs),
(219.593,861,o),
(243.709,886,o),
(283,886,cs),
(321.662,886,o),
(364.294,862,o),
(420,862,cs),
(452.676,862,o),
(531,879.584,o),
(531,937,cs),
(531,958.333,o),
(515.667,972,o),
(509,972,cs),
(504.333,972,o),
(494.333,967.667,o),
(479,959,cs),
(460.333,948.333,o),
(437.667,942,o),
(419,942,cs),
(379.599,942,o),
(318.495,970,o),
(282,970,cs),
(257.333,970,o),
(234.667,964,o),
(214,952,cs),
(195.333,941.333,o),
(180,926.333,o),
(180,897,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
69 1 8 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
11 1 9 0 13 12 9 13 91 0 10 14 1 12 7 10 12 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 88 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 7 12 8 12 7 8 104 11 1 9 0 13 12 9 13 91 0 10 14 1 12 7 10 12 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 88 6 5 2 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
123 121 118 116 113 111 105 103 100 98 95 93 168 44 19 36 52 39 28 52 51 15 24
CALL[ ]	/* CallFunction */";
};
width = 710;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(384,830,o),
(372.333,837,o),
(353,837,cs),
(329,837,o),
(319.667,826.667,o),
(317,816,cs),
(293.137,737.253,o),
(267.659,639.167,o),
(219.5,466.5,cs),
(174.121,303.799,o),
(138.041,173.116,o),
(108,89,cs),
(100,65,o),
(87,53.667,o),
(59,51,cs),
(59.845,51,o),
(15.196,45,o),
(-12,45,cs),
(-25.333,45,o),
(-37,37.333,o),
(-37,24,cs),
(-37,9.333,o),
(-26,0,o),
(-14,0,cs),
(253,0,ls),
(279.667,0,o),
(287,12,o),
(287,24,cs),
(287,44,o),
(271.333,49,o),
(258,49,cs),
(223.943,49,o),
(182,48.548,o),
(182,65,cs),
(182,92.498,o),
(208.252,175.15,o),
(225,223,c),
(473,223,l),
(477.089,206.644,o),
(489.528,168.266,o),
(503,115.5,cs),
(517.884,57.204,o),
(526,23.825,o),
(526,15,cs),
(526,-32.87,o),
(455,-13.632,o),
(455,-39,cs),
(455,-44.333,o),
(457.167,-48.333,o),
(461.5,-51,cs),
(465.833,-53.667,o),
(474,-55,o),
(486,-55,cs),
(719,-55,ls),
(741.667,-55,o),
(754,-49.667,o),
(754,-31,cs),
(754,-12.333,o),
(731.667,-9,o),
(713,-9,cs),
(649,-9,o),
(608,-7.667,o),
(600,23,cs),
(388,816,l),
(388,816,l)
);
},
{
closed = 1;
nodes = (
(381.348,597.479,o),
(430.777,393.353,o),
(458,289,c),
(442.667,288.333,o),
(426.833,288,o),
(410.5,288,cs),
(394.167,288,o),
(378.333,288,o),
(363,288,cs),
(342.333,288,o),
(322.5,288,o),
(303.5,288,cs),
(284.5,288,o),
(264.667,288.333,o),
(244,289,c),
(254.823,332.292,o),
(278.404,424.346,o),
(303.5,516,cs),
(330.088,613.105,o),
(346.703,679.672,o),
(356,715,c)
);
},
{
closed = 1;
nodes = (
(195,919,o),
(194,913,o),
(194,907,cs),
(194,892,o),
(200,879,o),
(211,879,cs),
(228,879,o),
(255,904,o),
(295,904,cs),
(334,904,o),
(376,880,o),
(432,880,cs),
(488,880,o),
(521,902,o),
(534,925,cs),
(537,931,o),
(539,937,o),
(539,944,cs),
(539,960,o),
(528,972,o),
(521,972,cs),
(518,972,o),
(514,971,o),
(511,970,cs),
(507,968,o),
(500,964,o),
(491,959,cs),
(468,948,o),
(448,942,o),
(431,942,cs),
(392,942,o),
(330,970,o),
(294,970,cs),
(269,970,o),
(247,964,o),
(226,952,cs),
(216,946,o),
(209,941,o),
(205,936,cs),
(201,931,o),
(198,927,o),
(197,924,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
71 1 8 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
11 1 9 0 13 12 9 13 91 0 10 14 1 12 7 10 12 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 88 0 7 7 20 67 6 5 2 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 7 12 8 12 7 8 104 11 1 9 0 13 12 9 13 91 0 10 14 1 12 7 10 12 91 0 8 0 2 3 8 2 90 0 0 0 1 0 1 88 6 5 2 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
123 121 118 116 113 111 105 103 100 98 95 93 105 44 19 36 52 56 30 52 35 15 35
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(686,-55,ls),
(709.333,-55,o),
(721,-50.333,o),
(721,-41,cs),
(721,-29,o),
(703.667,-29,o),
(685,-29,cs),
(653,-29,o),
(628.667,-27,o),
(612,-23,cs),
(595.333,-19,o),
(585.333,-10.333,o),
(582,3,cs),
(365,816,ls),
(361,830.667,o),
(351.667,835,o),
(345,835,cs),
(334.333,835,o),
(326.667,826.667,o),
(324,816,cs),
(309.578,766.966,o),
(264.676,604.466,o),
(224.5,456.5,cs),
(181.443,297.923,o),
(145.981,172.147,o),
(110,69,cs),
(100.667,45,o),
(90.333,33.667,o),
(61,31,cs),
(62.152,31,o),
(9.218,25,o),
(-30,25,cs),
(-43.333,25,o),
(-50,21.333,o),
(-50,14,cs),
(-50,3.333,o),
(-39,0,o),
(-27,0,cs),
(225,0,ls),
(238.333,0,o),
(247.333,1.667,o),
(252,5,cs),
(256.667,8.333,o),
(259,11.667,o),
(259,15,cs),
(259,29.667,o),
(238.333,29,o),
(225,29,cs),
(204.985,29,o),
(154,26.126,o),
(154,45,cs),
(154,74.195,o),
(186.968,172.749,o),
(206,238,c),
(477,238,l),
(481.265,218.806,o),
(496.406,169.833,o),
(511,112.5,cs),
(528.276,44.631,o),
(538,5.656,o),
(538,-5,cs),
(538,-37.488,o),
(442,-16.276,o),
(442,-41,cs),
(442,-46.333,o),
(444.167,-50,o),
(448.5,-52,cs),
(452.833,-54,o),
(461,-55,o),
(473,-55,cs)
);
},
{
closed = 1;
nodes = (
(298.667,272,o),
(259.333,272.667,o),
(218,274,c),
(233.077,338.616,o),
(254.142,418.105,o),
(284,529.5,cs),
(313.705,640.323,o),
(333.8,709,o),
(343,755,c),
(373.763,642.203,o),
(431.478,410.882,o),
(465,274,c),
(423.667,272.667,o),
(381.333,272,o),
(340,272,cs)
);
},
{
closed = 1;
nodes = (
(208.791,888,o),
(235.735,913,o),
(277,913,cs),
(315.662,913,o),
(358.294,889,o),
(414,889,cs),
(466.947,889,o),
(516,908.797,o),
(516,934,cs),
(516,943.333,o),
(509.667,951,o),
(503,951,cs),
(499.667,951,o),
(496.167,950.167,o),
(492.5,948.5,cs),
(488.833,946.833,o),
(482.333,943.333,o),
(473,938,cs),
(450.333,926.667,o),
(430.333,921,o),
(413,921,cs),
(373.599,921,o),
(312.495,949,o),
(276,949,cs),
(251.333,949,o),
(228.667,943,o),
(208,931,cs),
(188.667,919.667,o),
(179,910.333,o),
(179,903,cs),
(179,896.333,o),
(186.333,888,o),
(193,888,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
69 1 9 8 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
12 1 10 0 14 13 10 14 91 0 11 15 1 13 8 11 13 91 0 9 0 3 4 9 3 90 2 1 0 0 1 0 1 88 0 8 8 20 67 7 6 2 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 8 13 9 13 8 9 104 12 1 10 0 14 13 10 14 91 0 11 15 1 13 8 11 13 91 0 9 0 3 4 9 3 90 2 1 0 0 1 0 1 88 7 6 2 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
120 118 115 113 110 108 102 100 97 95 92 90 82 76 44 18 51 52 56 25 20 51 34 16 24
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = Atilde;
unicode = 195;
},
{
glyphname = AE;
kernLeft = AE;
kernRight = AE;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(967.333,326,o),
(957.333,299.667,o),
(956,273,cs),
(950.926,181.662,o),
(943,130.962,o),
(943,121,cs),
(940.388,87.044,o),
(921.049,84,o),
(900,84,cs),
(622,84,l),
(622,377,l),
(643.333,378.333,o),
(663.667,379,o),
(685,379,cs),
(704.333,379,o),
(720,378.833,o),
(732,378.5,cs),
(744,378.167,o),
(754.667,378,o),
(764,378,cs),
(803.024,378,o),
(812,337.569,o),
(812,309,cs),
(812,291.667,o),
(825,270,o),
(853,270,cs),
(885,270,o),
(895,288.333,o),
(895,307,cs),
(895,325.667,o),
(894.667,344.333,o),
(894,363,cs),
(893.333,381.667,o),
(893,400.667,o),
(893,420,cs),
(893,439.333,o),
(893.333,458.167,o),
(894,476.5,cs),
(894.667,494.833,o),
(895,513.667,o),
(895,533,cs),
(895,547.667,o),
(884.667,570,o),
(854,570,cs),
(831.333,570,o),
(810,564.667,o),
(810,530,cs),
(810,509.333,o),
(808.833,493.167,o),
(806.5,481.5,cs),
(804.167,469.833,o),
(799.667,464,o),
(793,464,cs),
(794.48,464,o),
(733.73,461,o),
(685,461,cs),
(673.667,461,o),
(663,461.333,o),
(653,462,cs),
(643,462.667,o),
(632.667,463.333,o),
(622,464,c),
(622,737,l),
(874,737,ls),
(898,737,o),
(911,731.667,o),
(911,709,cs),
(911,645,ls),
(911,626.842,o),
(913.134,599,o),
(955,599,cs),
(988.333,599,o),
(999,625.667,o),
(999,651,cs),
(999,785,ls),
(999,813,o),
(989.667,821,o),
(971,821,cs),
(911.42,821,o),
(862.099,820,o),
(823,820,cs),
(782.98,820,o),
(739.664,819,o),
(693,819,cs),
(640.771,819,o),
(550.591,821,o),
(452,821,cs),
(431.478,821,o),
(394,821.241,o),
(394,785,cs),
(394,762.954,o),
(417.684,757,o),
(434,757,cs),
(448.667,757,o),
(468.333,757.667,o),
(483,751,c),
(442.792,674.605,o),
(391.107,565.582,o),
(324.5,428,cs),
(264.393,303.844,o),
(200.342,174.68,o),
(155,101,cs),
(140.333,77,o),
(127.333,65.667,o),
(98,63,cs),
(99.387,63,o),
(45.274,57,o),
(-3,57,cs),
(-24.333,57,o),
(-42,48.333,o),
(-42,27,cs),
(-42,7,o),
(-27.667,0,o),
(-5,0,cs),
(16.333,0,o),
(38.667,0.333,o),
(62,1,cs),
(85.333,1.667,o),
(107.667,2,o),
(129,2,cs),
(150.333,2,o),
(170.167,1.667,o),
(188.5,1,cs),
(206.833,0.333,o),
(226.667,0,o),
(248,0,cs),
(274.667,0,o),
(293,4.333,o),
(293,31,cs),
(293,51,o),
(283.333,58.667,o),
(270,60,cs),
(262,60.667,o),
(255.333,61.5,o),
(250,62.5,cs),
(244.667,63.5,o),
(242,65.333,o),
(242,68,cs),
(242,72.601,o),
(266.631,126.173,o),
(321,214,c),
(529,214,l),
(529,195.333,o),
(528.833,177.5,o),
(528.5,160.5,cs),
(528.167,143.5,o),
(528,122,o),
(528,96,cs),
(528,82,o),
(522.333,72.5,o),
(511,67.5,cs),
(499.667,62.5,o),
(478.333,60,o),
(447,60,cs),
(420.333,60,o),
(408,54.667,o),
(408,32,cs),
(408,8,o),
(434,0,o),
(454,0,cs),
(494.667,0,o),
(535.167,0.333,o),
(575.5,1,cs),
(615.833,1.667,o),
(656.333,2,o),
(697,2,cs),
(746.333,2,o),
(794.333,1.667,o),
(841,1,cs),
(887.667,0.333,o),
(935.667,0,o),
(985,0,cs),
(1014.333,0,o),
(1024.333,10.333,o),
(1027,33,cs),
(1040.03,130.727,o),
(1043,248.339,o),
(1043,277,cs),
(1043,295.65,o),
(1036.166,326,o),
(1002,326,cs)
);
},
{
closed = 1;
nodes = (
(389,296,o),
(363.667,296.667,o),
(341,298,c),
(384.911,416.012,o),
(493.647,583.979,o),
(524,664,c),
(524,660,ls),
(524,572.387,o),
(530,534.882,o),
(530,425,cs),
(530,396.333,o),
(530,371.833,o),
(530,351.5,cs),
(530,331.167,o),
(529.667,313,o),
(529,297,c),
(509.667,296.333,o),
(490.333,296,o),
(471,296,cs),
(451.667,296,o),
(432.333,296,o),
(413,296,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
73 1 10 7 181 1 9 10 161 1 15 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 85 values pushed */
0 7 8 10 10 7 96 0 9 10 12 10 9 96 17 1 0 14 16 14 0 16 104 0 12 0 13 3 12 13 91 18 1 16 0 3 15 16 3 89 0 10 10 8 84 0 8 8 12 67 0 14 14 11 83 0 11 11 23 67 0 15 15 1 84 4 1 1 1 13 67 6 5 2 2 2 1 83 4 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 86 values pushed */
0 7 8 10 10 7 96 0 9 10 12 10 9 12 104 17 1 0 14 16 14 0 16 104 0 12 0 13 3 12 13 91 18 1 16 0 3 15 16 3 89 0 10 10 8 84 0 8 8 12 67 0 14 14 11 83 0 11 11 23 67 0 15 15 1 84 4 1 1 1 13 67 6 5 2 2 2 1 83 4 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 84 values pushed */
0 7 8 10 10 7 96 0 9 10 12 10 9 12 104 17 1 0 14 16 14 0 16 104 0 11 0 14 0 11 14 91 0 12 0 13 3 12 13 91 18 1 16 0 3 15 16 3 89 0 10 10 8 84 0 8 8 12 67 0 15 15 1 84 4 1 1 1 13 67 6 5 2 2 2 1 83 4 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 84 values pushed */
0 7 8 10 10 7 96 0 9 10 12 10 9 12 104 17 1 0 14 16 14 0 16 104 0 11 0 14 0 11 14 91 0 12 0 13 3 12 13 91 18 1 16 0 3 15 16 3 89 0 10 10 8 84 0 8 8 14 67 0 15 15 1 84 4 1 1 1 13 67 6 5 2 2 2 1 83 4 1 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 44 values pushed */
172 169 1 0 169 188 172 186 157 155 154 147 141 139 129 127 123 114 113 111 104 102 97 84 77 74 63 62 61 57 53 45 32 31 26 24 20 12 0 168 1 168 19 15
CALL[ ]	/* CallFunction */";
};
width = 1076;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(963,320,o),
(954.333,299.667,o),
(953,273,cs),
(949.401,208.223,o),
(945.639,170.668,o),
(940,103,cs),
(937.388,69.044,o),
(918.049,66,o),
(897,66,cs),
(598,66,l),
(598,386,l),
(626,387.333,o),
(654,388,o),
(682,388,cs),
(701.333,388,o),
(717,387.833,o),
(729,387.5,cs),
(741,387.167,o),
(751.667,387,o),
(761,387,cs),
(800.323,387,o),
(809,339.717,o),
(809,309,cs),
(809,291.667,o),
(820,274,o),
(840,274,cs),
(861.333,274,o),
(871,287,o),
(871,307,cs),
(871,325.667,o),
(870.667,344.333,o),
(870,363,cs),
(869.333,381.667,o),
(869,400.667,o),
(869,420,cs),
(869,439.333,o),
(869.333,458.167,o),
(870,476.5,cs),
(870.667,494.833,o),
(871,513.667,o),
(871,533,cs),
(871,547.667,o),
(863.667,566,o),
(841,566,cs),
(821,566,o),
(807,558,o),
(807,530,cs),
(807,512.406,o),
(806.241,455,o),
(790,455,cs),
(791.48,455,o),
(730.73,452,o),
(682,452,cs),
(667.333,452,o),
(653.167,452.333,o),
(639.5,453,cs),
(625.833,453.667,o),
(612,454.333,o),
(598,455,c),
(598,755,l),
(871,755,ls),
(885.861,755,o),
(908,754.133,o),
(908,727,cs),
(908,645,ls),
(908,625.306,o),
(911.45,601,o),
(942,601,cs),
(968.667,601,o),
(975,625.667,o),
(975,651,cs),
(975,785,ls),
(975,813,o),
(965.667,821,o),
(947,821,cs),
(891.866,821,o),
(846.212,820,o),
(810,820,cs),
(772.545,820,o),
(732.565,819,o),
(690,819,cs),
(637.771,819,o),
(547.591,821,o),
(449,821,cs),
(422.971,821,o),
(398,817.395,o),
(398,792,cs),
(398,770.667,o),
(422,769,o),
(438,769,cs),
(452.667,769,o),
(472.333,769.667,o),
(487,763,c),
(449.224,691.226,o),
(383.569,557.048,o),
(321,428,cs),
(261.202,304.667,o),
(187.352,159.587,o),
(145,89,cs),
(130.333,65,o),
(117.333,53.667,o),
(88,51,cs),
(89.144,51,o),
(30.97,45,o),
(-9,45,cs),
(-27.667,45,o),
(-41,38,o),
(-41,22,cs),
(-41,6,o),
(-29.667,0,o),
(-11,0,cs),
(10.333,0,o),
(32,0.333,o),
(54,1,cs),
(76,1.667,o),
(97.667,2,o),
(119,2,cs),
(140.333,2,o),
(160.833,1.667,o),
(180.5,1,cs),
(200.167,0.333,o),
(220.667,0,o),
(242,0,cs),
(268.667,0,o),
(284,6.333,o),
(284,25,cs),
(284,46.333,o),
(261.333,49,o),
(248,49,cs),
(240,49.667,o),
(232.833,50.167,o),
(226.5,50.5,cs),
(220.167,50.833,o),
(217,55.667,o),
(217,65,cs),
(217,76.25,o),
(245.376,132.251,o),
(299,223,c),
(526,223,l),
(526,201,o),
(525.833,180,o),
(525.5,160,cs),
(525.167,140,o),
(525,114.667,o),
(525,84,cs),
(525,70,o),
(519.333,60.5,o),
(508,55.5,cs),
(496.667,50.5,o),
(475.333,48,o),
(444,48,cs),
(417.333,48,o),
(405,44,o),
(405,24,cs),
(405,5.333,o),
(431,0,o),
(451,0,cs),
(532.333,1.333,o),
(612.667,2,o),
(694,2,cs),
(740,2,o),
(784.5,1.667,o),
(827.5,1,cs),
(870.5,0.333,o),
(915,0,o),
(961,0,cs),
(989,0,o),
(1000.333,6.333,o),
(1003,33,cs),
(1016.225,165.246,o),
(1019,265.924,o),
(1019,277,cs),
(1019,291.71,o),
(1018.4,320,o),
(991,320,cs)
);
},
{
closed = 1;
nodes = (
(394,287,o),
(378.667,287.333,o),
(364,288,cs),
(349.333,288.667,o),
(334.333,289,o),
(319,289,c),
(343.475,348.148,o),
(379.092,419.712,o),
(425.5,508,cs),
(463.598,580.478,o),
(507.604,664.51,o),
(521,698,c),
(521,694,ls),
(521,655.107,o),
(522.821,613.927,o),
(524,581.5,cs),
(525.333,544.833,o),
(527,499.667,o),
(527,425,cs),
(527,394.333,o),
(527,368.167,o),
(527,346.5,cs),
(527,324.833,o),
(526.667,305.333,o),
(526,288,c),
(506.667,287.333,o),
(487.333,287,o),
(468,287,cs),
(448.667,287,o),
(429.333,287,o),
(410,287,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
73 1 12 9 183 1 11 12 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 88 values pushed */
0 9 10 12 12 9 96 0 11 12 14 12 11 14 104 19 1 0 16 18 16 0 18 104 0 14 0 15 3 14 15 91 20 1 18 0 3 17 18 3 89 0 12 12 10 84 0 10 10 12 67 0 16 16 13 83 0 13 13 15 67 0 17 17 1 84 6 1 1 1 13 67 8 7 5 4 4 2 2 1 83 6 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 86 values pushed */
0 9 10 12 12 9 96 0 11 12 14 12 11 14 104 19 1 0 16 18 16 0 18 104 0 13 0 16 0 13 16 91 0 14 0 15 3 14 15 91 20 1 18 0 3 17 18 3 89 0 12 12 10 84 0 10 10 12 67 0 17 17 1 84 6 1 1 1 13 67 8 7 5 4 4 2 2 1 83 6 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 86 values pushed */
0 9 10 12 12 9 96 0 11 12 14 12 11 14 104 19 1 0 16 18 16 0 18 104 0 13 0 16 0 13 16 91 0 14 0 15 3 14 15 91 20 1 18 0 3 17 18 3 89 0 12 12 10 84 0 10 10 14 67 0 17 17 1 84 6 1 1 1 13 67 8 7 5 4 4 2 2 1 83 6 1 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 48 values pushed */
174 171 1 0 171 192 174 190 159 157 156 149 143 141 131 129 123 114 113 111 102 100 95 82 77 74 63 62 61 57 53 45 41 40 39 38 32 31 26 24 20 12 0 170 1 170 21 15
CALL[ ]	/* CallFunction */";
};
width = 1054;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(22.667,1.333,o),
(62.333,2,o),
(105,2,cs),
(126.333,2,o),
(147.833,1.667,o),
(169.5,1,cs),
(191.167,0.333,o),
(212.667,0,o),
(234,0,cs),
(247.333,0,o),
(256.833,1.667,o),
(262.5,5,cs),
(268.167,8.333,o),
(271,11.667,o),
(271,15,cs),
(271,29.667,o),
(253.333,29,o),
(240,29,cs),
(220.813,29,o),
(173,26.052,o),
(173,45,cs),
(173,63.635,o),
(228.299,158.598,o),
(268,238,c),
(522,238,l),
(522,167.366,o),
(521,132.177,o),
(521,64,cs),
(521,50,o),
(515.333,40.5,o),
(504,35.5,cs),
(492.667,30.5,o),
(471.333,28,o),
(440,28,cs),
(426.667,28,o),
(416.833,27,o),
(410.5,25,cs),
(404.167,23,o),
(401,18.333,o),
(401,11,cs),
(401,0.333,o),
(427,0,o),
(447,0,cs),
(528.333,1.333,o),
(608.667,2,o),
(690,2,cs),
(730.667,2,o),
(770.167,1.667,o),
(808.5,1,cs),
(846.833,0.333,o),
(886.333,0,o),
(927,0,cs),
(953.667,0,o),
(966.333,-0.333,o),
(969,33,cs),
(979.644,139.44,o),
(985,285.132,o),
(985,277,cs),
(985,293,o),
(984.667,310,o),
(966,310,cs),
(962.667,310,o),
(959.167,307.167,o),
(955.5,301.5,cs),
(951.833,295.833,o),
(949.667,286.333,o),
(949,273,cs),
(943.922,166.353,o),
(938.061,99.79,o),
(936,73,cs),
(933.388,39.044,o),
(914.049,36,o),
(893,36,cs),
(564,36,l),
(564,401,l),
(602.667,402.333,o),
(639.333,403,o),
(678,403,cs),
(697.333,403,o),
(713,402.833,o),
(725,402.5,cs),
(737,402.167,o),
(747.667,402,o),
(757,402,cs),
(796.501,402,o),
(805,345.97,o),
(805,309,cs),
(805,291.667,o),
(812.667,280,o),
(822,280,cs),
(824.667,280,o),
(827.833,281.667,o),
(831.5,285,cs),
(835.167,288.333,o),
(837,295.667,o),
(837,307,cs),
(837,325.667,o),
(836.667,344.333,o),
(836,363,cs),
(835.333,381.667,o),
(835,400.667,o),
(835,420,cs),
(835,439.333,o),
(835.333,458.167,o),
(836,476.5,cs),
(836.667,494.833,o),
(837,513.667,o),
(837,533,cs),
(837,547.667,o),
(836,560,o),
(820,560,cs),
(806.277,560,o),
(803,541.121,o),
(803,530,cs),
(803,471.034,o),
(797.262,440,o),
(786,440,cs),
(787.48,440,o),
(726.73,437,o),
(678,437,cs),
(658.667,437,o),
(639.667,437.333,o),
(621,438,cs),
(602.333,438.667,o),
(583.333,439.333,o),
(564,440,c),
(564,785,l),
(867,785,ls),
(880.333,785,o),
(904,782.333,o),
(904,757,cs),
(904,645,ls),
(904,626.333,o),
(904,605,o),
(924,605,cs),
(938.667,605,o),
(941,625.667,o),
(941,651,cs),
(941,785,ls),
(941,813,o),
(931.667,821,o),
(913,821,cs),
(833.449,821,o),
(749.039,819,o),
(686,819,cs),
(633.771,819,o),
(543.591,821,o),
(445,821,cs),
(425,821,o),
(404,818.667,o),
(404,804,cs),
(404,789.333,o),
(421.333,789,o),
(444,789,cs),
(458.667,789,o),
(478.333,789.667,o),
(493,783,c),
(454.391,707.712,o),
(392.375,580.327,o),
(317,428.5,cs),
(242.387,278.208,o),
(175.383,148.118,o),
(131,69,cs),
(116.333,45,o),
(103.333,33.667,o),
(74,31,cs),
(75.299,31,o),
(21.635,25,o),
(-18,25,cs),
(-32.667,25,o),
(-40,21.333,o),
(-40,14,cs),
(-40,4.667,o),
(-33.333,0,o),
(-20,0,cs)
);
},
{
closed = 1;
nodes = (
(384.667,272,o),
(364.667,272.333,o),
(346,273,cs),
(327.333,273.667,o),
(308,274,o),
(288,274,c),
(314.319,334.735,o),
(362.256,431.447,o),
(409,529,cs),
(458.358,632.009,o),
(499.772,715.716,o),
(517,754,c),
(517,750,ls),
(517,632.98,o),
(523,567.873,o),
(523,425,cs),
(523,391,o),
(523,362,o),
(523,338,cs),
(523,314,o),
(522.667,292.333,o),
(522,273,c),
(502.667,272.333,o),
(483.333,272,o),
(464,272,cs),
(444.667,272,o),
(425.333,272,o),
(406,272,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
179 73 2 10 8 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 81 values pushed */
0 10 8 13 8 10 13 104 18 1 0 15 14 15 0 14 104 0 13 0 14 17 13 14 91 19 1 17 0 3 16 17 3 89 11 1 8 8 9 83 0 9 9 12 67 0 15 15 12 83 0 12 12 15 67 0 16 16 1 83 5 1 1 1 13 67 7 6 4 3 2 2 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 79 values pushed */
0 10 8 13 8 10 13 104 18 1 0 15 14 15 0 14 104 0 12 0 15 0 12 15 91 0 13 0 14 17 13 14 91 19 1 17 0 3 16 17 3 89 11 1 8 8 9 83 0 9 9 12 67 0 16 16 1 83 5 1 1 1 13 67 7 6 4 3 2 2 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 79 values pushed */
0 10 8 13 8 10 13 104 18 1 0 15 14 15 0 14 104 0 12 0 15 0 12 15 91 0 13 0 14 17 13 14 91 19 1 17 0 3 16 17 3 89 11 1 8 8 9 83 0 9 9 14 67 0 16 16 1 83 5 1 1 1 13 67 7 6 4 3 2 2 1 83 5 1 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 46 values pushed */
170 167 1 0 167 188 170 186 155 153 152 145 139 137 127 125 117 108 107 105 100 98 93 81 77 74 63 62 60 57 55 47 43 40 32 31 24 22 18 10 0 166 1 166 20 15
CALL[ ]	/* CallFunction */";
};
width = 1023;
}
);
note = AE;
unicode = 198;
},
{
glyphname = AEacute;
kernLeft = AE;
kernRight = AE;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(671,953.333,o),
(656.667,972,o),
(630,972,cs),
(592.314,972,o),
(516,898.458,o),
(516,871,cs),
(516,856.333,o),
(530.667,841,o),
(552,841,cs),
(585.368,841,o),
(671,897.284,o),
(671,936,cs)
);
},
{
closed = 1;
nodes = (
(967.333,326,o),
(957.333,299.667,o),
(956,273,cs),
(950.926,181.662,o),
(943,130.962,o),
(943,121,cs),
(940.388,87.044,o),
(921.049,84,o),
(900,84,cs),
(622,84,l),
(622,377,l),
(643.333,378.333,o),
(663.667,379,o),
(685,379,cs),
(704.333,379,o),
(720,378.833,o),
(732,378.5,cs),
(744,378.167,o),
(754.667,378,o),
(764,378,cs),
(803.024,378,o),
(812,337.569,o),
(812,309,cs),
(812,291.667,o),
(825,270,o),
(853,270,cs),
(885,270,o),
(895,288.333,o),
(895,307,cs),
(895,325.667,o),
(894.667,344.333,o),
(894,363,cs),
(893.333,381.667,o),
(893,400.667,o),
(893,420,cs),
(893,439.333,o),
(893.333,458.167,o),
(894,476.5,cs),
(894.667,494.833,o),
(895,513.667,o),
(895,533,cs),
(895,547.667,o),
(884.667,570,o),
(854,570,cs),
(831.333,570,o),
(810,564.667,o),
(810,530,cs),
(810,509.333,o),
(808.833,493.167,o),
(806.5,481.5,cs),
(804.167,469.833,o),
(799.667,464,o),
(793,464,cs),
(794.48,464,o),
(733.73,461,o),
(685,461,cs),
(673.667,461,o),
(663,461.333,o),
(653,462,cs),
(643,462.667,o),
(632.667,463.333,o),
(622,464,c),
(622,737,l),
(874,737,ls),
(898,737,o),
(911,731.667,o),
(911,709,cs),
(911,645,ls),
(911,626.842,o),
(913.134,599,o),
(955,599,cs),
(988.333,599,o),
(999,625.667,o),
(999,651,cs),
(999,785,ls),
(999,813,o),
(989.667,821,o),
(971,821,cs),
(911.42,821,o),
(862.099,820,o),
(823,820,cs),
(782.98,820,o),
(739.664,819,o),
(693,819,cs),
(640.771,819,o),
(550.591,821,o),
(452,821,cs),
(431.478,821,o),
(394,821.241,o),
(394,785,cs),
(394,762.954,o),
(417.684,757,o),
(434,757,cs),
(448.667,757,o),
(468.333,757.667,o),
(483,751,c),
(442.792,674.605,o),
(391.107,565.582,o),
(324.5,428,cs),
(264.393,303.844,o),
(200.342,174.68,o),
(155,101,cs),
(140.333,77,o),
(127.333,65.667,o),
(98,63,cs),
(99.387,63,o),
(45.274,57,o),
(-3,57,cs),
(-24.333,57,o),
(-42,48.333,o),
(-42,27,cs),
(-42,7,o),
(-27.667,0,o),
(-5,0,cs),
(16.333,0,o),
(38.667,0.333,o),
(62,1,cs),
(85.333,1.667,o),
(107.667,2,o),
(129,2,cs),
(150.333,2,o),
(170.167,1.667,o),
(188.5,1,cs),
(206.833,0.333,o),
(226.667,0,o),
(248,0,cs),
(274.667,0,o),
(293,4.333,o),
(293,31,cs),
(293,51,o),
(283.333,58.667,o),
(270,60,cs),
(262,60.667,o),
(255.333,61.5,o),
(250,62.5,cs),
(244.667,63.5,o),
(242,65.333,o),
(242,68,cs),
(242,72.601,o),
(266.631,126.173,o),
(321,214,c),
(529,214,l),
(529,195.333,o),
(528.833,177.5,o),
(528.5,160.5,cs),
(528.167,143.5,o),
(528,122,o),
(528,96,cs),
(528,82,o),
(522.333,72.5,o),
(511,67.5,cs),
(499.667,62.5,o),
(478.333,60,o),
(447,60,cs),
(420.333,60,o),
(408,54.667,o),
(408,32,cs),
(408,8,o),
(434,0,o),
(454,0,cs),
(494.667,0,o),
(535.167,0.333,o),
(575.5,1,cs),
(615.833,1.667,o),
(656.333,2,o),
(697,2,cs),
(746.333,2,o),
(794.333,1.667,o),
(841,1,cs),
(887.667,0.333,o),
(935.667,0,o),
(985,0,cs),
(1014.333,0,o),
(1024.333,10.333,o),
(1027,33,cs),
(1040.03,130.727,o),
(1043,248.339,o),
(1043,277,cs),
(1043,295.65,o),
(1036.166,326,o),
(1002,326,cs)
);
},
{
closed = 1;
nodes = (
(389,296,o),
(363.667,296.667,o),
(341,298,c),
(384.911,416.012,o),
(493.647,583.979,o),
(524,664,c),
(524,660,ls),
(524,572.387,o),
(530,534.882,o),
(530,425,cs),
(530,396.333,o),
(530,371.833,o),
(530,351.5,cs),
(530,331.167,o),
(529.667,313,o),
(529,297,c),
(509.667,296.333,o),
(490.333,296,o),
(471,296,cs),
(451.667,296,o),
(432.333,296,o),
(413,296,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
89 1 12 9 197 1 11 12 177 1 17 5 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 95 values pushed */
0 1 0 1 106 0 0 10 0 106 0 9 10 12 12 9 96 0 11 12 14 12 11 96 19 1 2 16 18 16 2 18 104 0 14 0 15 5 14 15 91 20 1 18 0 5 17 18 5 89 0 12 12 10 84 0 10 10 12 67 0 16 16 13 83 0 13 13 23 67 0 17 17 3 84 6 1 3 3 13 67 8 7 2 4 4 3 83 6 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 96 values pushed */
0 1 0 1 106 0 0 10 0 106 0 9 10 12 12 9 96 0 11 12 14 12 11 14 104 19 1 2 16 18 16 2 18 104 0 14 0 15 5 14 15 91 20 1 18 0 5 17 18 5 89 0 12 12 10 84 0 10 10 12 67 0 16 16 13 83 0 13 13 23 67 0 17 17 3 84 6 1 3 3 13 67 8 7 2 4 4 3 83 6 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 94 values pushed */
0 1 0 1 106 0 0 10 0 106 0 9 10 12 12 9 96 0 11 12 14 12 11 14 104 19 1 2 16 18 16 2 18 104 0 13 0 16 2 13 16 91 0 14 0 15 5 14 15 91 20 1 18 0 5 17 18 5 89 0 12 12 10 84 0 10 10 12 67 0 17 17 3 84 6 1 3 3 13 67 8 7 2 4 4 3 83 6 1 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 94 values pushed */
0 1 0 1 106 0 0 10 0 106 0 9 10 12 12 9 96 0 11 12 14 12 11 14 104 19 1 2 16 18 16 2 18 104 0 13 0 16 2 13 16 91 0 14 0 15 5 14 15 91 20 1 18 0 5 17 18 5 89 0 12 12 10 84 0 10 10 14 67 0 17 17 3 84 6 1 3 3 13 67 8 7 2 4 4 3 83 6 1 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 46 values pushed */
188 185 17 16 185 204 188 202 173 171 170 163 157 155 145 143 139 130 129 127 120 118 113 100 93 90 79 78 77 73 69 61 48 47 42 40 36 28 16 184 17 184 38 36 21 17
CALL[ ]	/* CallFunction */";
};
width = 1076;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(660,959.667,o),
(648,972,o),
(628,972,cs),
(598.753,972,o),
(522,903.873,o),
(522,877,cs),
(522,863.667,o),
(531.333,854,o),
(546,854,cs),
(572.12,854,o),
(660,908.21,o),
(660,941,cs)
);
},
{
closed = 1;
nodes = (
(963,320,o),
(954.333,299.667,o),
(953,273,cs),
(949.401,208.223,o),
(945.639,170.668,o),
(940,103,cs),
(937.388,69.044,o),
(918.049,66,o),
(897,66,cs),
(598,66,l),
(598,386,l),
(626,387.333,o),
(654,388,o),
(682,388,cs),
(701.333,388,o),
(717,387.833,o),
(729,387.5,cs),
(741,387.167,o),
(751.667,387,o),
(761,387,cs),
(800.323,387,o),
(809,339.717,o),
(809,309,cs),
(809,291.667,o),
(820,274,o),
(840,274,cs),
(861.333,274,o),
(871,287,o),
(871,307,cs),
(871,325.667,o),
(870.667,344.333,o),
(870,363,cs),
(869.333,381.667,o),
(869,400.667,o),
(869,420,cs),
(869,439.333,o),
(869.333,458.167,o),
(870,476.5,cs),
(870.667,494.833,o),
(871,513.667,o),
(871,533,cs),
(871,547.667,o),
(863.667,566,o),
(841,566,cs),
(821,566,o),
(807,558,o),
(807,530,cs),
(807,512.406,o),
(806.241,455,o),
(790,455,cs),
(791.48,455,o),
(730.73,452,o),
(682,452,cs),
(667.333,452,o),
(653.167,452.333,o),
(639.5,453,cs),
(625.833,453.667,o),
(612,454.333,o),
(598,455,c),
(598,755,l),
(871,755,ls),
(885.861,755,o),
(908,754.133,o),
(908,727,cs),
(908,645,ls),
(908,625.306,o),
(911.45,601,o),
(942,601,cs),
(968.667,601,o),
(975,625.667,o),
(975,651,cs),
(975,785,ls),
(975,813,o),
(965.667,821,o),
(947,821,cs),
(891.866,821,o),
(846.212,820,o),
(810,820,cs),
(772.545,820,o),
(732.565,819,o),
(690,819,cs),
(637.771,819,o),
(547.591,821,o),
(449,821,cs),
(422.971,821,o),
(398,817.395,o),
(398,792,cs),
(398,770.667,o),
(422,769,o),
(438,769,cs),
(452.667,769,o),
(472.333,769.667,o),
(487,763,c),
(449.224,691.226,o),
(383.569,557.048,o),
(321,428,cs),
(261.202,304.667,o),
(187.352,159.587,o),
(145,89,cs),
(130.333,65,o),
(117.333,53.667,o),
(88,51,cs),
(89.144,51,o),
(30.97,45,o),
(-9,45,cs),
(-27.667,45,o),
(-41,38,o),
(-41,22,cs),
(-41,6,o),
(-29.667,0,o),
(-11,0,cs),
(10.333,0,o),
(32,0.333,o),
(54,1,cs),
(76,1.667,o),
(97.667,2,o),
(119,2,cs),
(140.333,2,o),
(160.833,1.667,o),
(180.5,1,cs),
(200.167,0.333,o),
(220.667,0,o),
(242,0,cs),
(268.667,0,o),
(284,6.333,o),
(284,25,cs),
(284,46.333,o),
(261.333,49,o),
(248,49,cs),
(240,49.667,o),
(232.833,50.167,o),
(226.5,50.5,cs),
(220.167,50.833,o),
(217,55.667,o),
(217,65,cs),
(217,76.25,o),
(245.376,132.251,o),
(299,223,c),
(526,223,l),
(526,201,o),
(525.833,180,o),
(525.5,160,cs),
(525.167,140,o),
(525,114.667,o),
(525,84,cs),
(525,70,o),
(519.333,60.5,o),
(508,55.5,cs),
(496.667,50.5,o),
(475.333,48,o),
(444,48,cs),
(417.333,48,o),
(405,44,o),
(405,24,cs),
(405,5.333,o),
(431,0,o),
(451,0,cs),
(532.333,1.333,o),
(612.667,2,o),
(694,2,cs),
(740,2,o),
(784.5,1.667,o),
(827.5,1,cs),
(870.5,0.333,o),
(915,0,o),
(961,0,cs),
(989,0,o),
(1000.333,6.333,o),
(1003,33,cs),
(1016.225,165.246,o),
(1019,265.924,o),
(1019,277,cs),
(1019,291.71,o),
(1018.4,320,o),
(991,320,cs)
);
},
{
closed = 1;
nodes = (
(394,287,o),
(378.667,287.333,o),
(364,288,cs),
(349.333,288.667,o),
(334.333,289,o),
(319,289,c),
(343.475,348.148,o),
(379.092,419.712,o),
(425.5,508,cs),
(463.598,580.478,o),
(507.604,664.51,o),
(521,698,c),
(521,694,ls),
(521,655.107,o),
(522.821,613.927,o),
(524,581.5,cs),
(525.333,544.833,o),
(527,499.667,o),
(527,425,cs),
(527,394.333,o),
(527,368.167,o),
(527,346.5,cs),
(527,324.833,o),
(526.667,305.333,o),
(526,288,c),
(506.667,287.333,o),
(487.333,287,o),
(468,287,cs),
(448.667,287,o),
(429.333,287,o),
(410,287,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
89 1 14 11 199 1 13 14 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 98 values pushed */
0 1 0 1 106 0 0 12 0 106 0 11 12 14 14 11 96 0 13 14 16 14 13 16 104 21 1 2 18 20 18 2 20 104 0 16 0 17 5 16 17 91 22 1 20 0 5 19 20 5 89 0 14 14 12 84 0 12 12 12 67 0 18 18 15 83 0 15 15 15 67 0 19 19 3 84 8 1 3 3 13 67 10 9 7 6 4 4 4 3 83 8 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 96 values pushed */
0 1 0 1 106 0 0 12 0 106 0 11 12 14 14 11 96 0 13 14 16 14 13 16 104 21 1 2 18 20 18 2 20 104 0 15 0 18 2 15 18 91 0 16 0 17 5 16 17 91 22 1 20 0 5 19 20 5 89 0 14 14 12 84 0 12 12 12 67 0 19 19 3 84 8 1 3 3 13 67 10 9 7 6 4 4 4 3 83 8 1 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 96 values pushed */
0 1 0 1 106 0 0 12 0 106 0 11 12 14 14 11 96 0 13 14 16 14 13 16 104 21 1 2 18 20 18 2 20 104 0 15 0 18 2 15 18 91 0 16 0 17 5 16 17 91 22 1 20 0 5 19 20 5 89 0 14 14 12 84 0 12 12 14 67 0 19 19 3 84 8 1 3 3 13 67 10 9 7 6 4 4 4 3 83 8 1 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 50 values pushed */
190 187 17 16 187 208 190 206 175 173 172 165 159 157 147 145 139 130 129 127 118 116 111 98 93 90 79 78 77 73 69 61 57 56 55 54 48 47 42 40 36 28 16 186 17 186 38 36 23 17
CALL[ ]	/* CallFunction */";
};
width = 1054;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(22.667,1.333,o),
(62.333,2,o),
(105,2,cs),
(126.333,2,o),
(147.833,1.667,o),
(169.5,1,cs),
(191.167,0.333,o),
(212.667,0,o),
(234,0,cs),
(247.333,0,o),
(256.833,1.667,o),
(262.5,5,cs),
(268.167,8.333,o),
(271,11.667,o),
(271,15,cs),
(271,29.667,o),
(253.333,29,o),
(240,29,cs),
(220.813,29,o),
(173,26.052,o),
(173,45,cs),
(173,63.635,o),
(228.299,158.598,o),
(268,238,c),
(522,238,l),
(522,167.366,o),
(521,132.177,o),
(521,64,cs),
(521,50,o),
(515.333,40.5,o),
(504,35.5,cs),
(492.667,30.5,o),
(471.333,28,o),
(440,28,cs),
(426.667,28,o),
(416.833,27,o),
(410.5,25,cs),
(404.167,23,o),
(401,18.333,o),
(401,11,cs),
(401,0.333,o),
(427,0,o),
(447,0,cs),
(528.333,1.333,o),
(608.667,2,o),
(690,2,cs),
(730.667,2,o),
(770.167,1.667,o),
(808.5,1,cs),
(846.833,0.333,o),
(886.333,0,o),
(927,0,cs),
(953.667,0,o),
(966.333,-0.333,o),
(969,33,cs),
(979.644,139.44,o),
(985,285.132,o),
(985,277,cs),
(985,293,o),
(984.667,310,o),
(966,310,cs),
(962.667,310,o),
(959.167,307.167,o),
(955.5,301.5,cs),
(951.833,295.833,o),
(949.667,286.333,o),
(949,273,cs),
(943.922,166.353,o),
(938.061,99.79,o),
(936,73,cs),
(933.388,39.044,o),
(914.049,36,o),
(893,36,cs),
(564,36,l),
(564,401,l),
(602.667,402.333,o),
(639.333,403,o),
(678,403,cs),
(697.333,403,o),
(713,402.833,o),
(725,402.5,cs),
(737,402.167,o),
(747.667,402,o),
(757,402,cs),
(796.501,402,o),
(805,345.97,o),
(805,309,cs),
(805,291.667,o),
(812.667,280,o),
(822,280,cs),
(824.667,280,o),
(827.833,281.667,o),
(831.5,285,cs),
(835.167,288.333,o),
(837,295.667,o),
(837,307,cs),
(837,325.667,o),
(836.667,344.333,o),
(836,363,cs),
(835.333,381.667,o),
(835,400.667,o),
(835,420,cs),
(835,439.333,o),
(835.333,458.167,o),
(836,476.5,cs),
(836.667,494.833,o),
(837,513.667,o),
(837,533,cs),
(837,547.667,o),
(836,560,o),
(820,560,cs),
(806.277,560,o),
(803,541.121,o),
(803,530,cs),
(803,471.034,o),
(797.262,440,o),
(786,440,cs),
(787.48,440,o),
(726.73,437,o),
(678,437,cs),
(658.667,437,o),
(639.667,437.333,o),
(621,438,cs),
(602.333,438.667,o),
(583.333,439.333,o),
(564,440,c),
(564,785,l),
(867,785,ls),
(880.333,785,o),
(904,782.333,o),
(904,757,cs),
(904,645,ls),
(904,626.333,o),
(904,605,o),
(924,605,cs),
(938.667,605,o),
(941,625.667,o),
(941,651,cs),
(941,785,ls),
(941,813,o),
(931.667,821,o),
(913,821,cs),
(833.449,821,o),
(749.039,819,o),
(686,819,cs),
(633.771,819,o),
(543.591,821,o),
(445,821,cs),
(425,821,o),
(404,818.667,o),
(404,804,cs),
(404,789.333,o),
(421.333,789,o),
(444,789,cs),
(458.667,789,o),
(478.333,789.667,o),
(493,783,c),
(454.391,707.712,o),
(392.375,580.327,o),
(317,428.5,cs),
(242.387,278.208,o),
(175.383,148.118,o),
(131,69,cs),
(116.333,45,o),
(103.333,33.667,o),
(74,31,cs),
(75.299,31,o),
(21.635,25,o),
(-18,25,cs),
(-32.667,25,o),
(-40,21.333,o),
(-40,14,cs),
(-40,4.667,o),
(-33.333,0,o),
(-20,0,cs)
);
},
{
closed = 1;
nodes = (
(384.667,272,o),
(364.667,272.333,o),
(346,273,cs),
(327.333,273.667,o),
(308,274,o),
(288,274,c),
(314.319,334.735,o),
(362.256,431.447,o),
(409,529,cs),
(458.358,632.009,o),
(499.772,715.716,o),
(517,754,c),
(517,750,ls),
(517,632.98,o),
(523,567.873,o),
(523,425,cs),
(523,391,o),
(523,362,o),
(523,338,cs),
(523,314,o),
(522.667,292.333,o),
(522,273,c),
(502.667,272.333,o),
(483.333,272,o),
(464,272,cs),
(444.667,272,o),
(425.333,272,o),
(406,272,cs)
);
},
{
closed = 1;
nodes = (
(556.198,876,o),
(644,928.619,o),
(644,950,cs),
(644,968.667,o),
(635.667,972,o),
(625,972,cs),
(605.338,972,o),
(530,910.981,o),
(530,887,cs),
(530,879.667,o),
(532.667,876,o),
(538,876,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
194 88 2 12 10 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 91 values pushed */
0 1 0 1 106 0 0 11 0 106 0 12 10 15 10 12 15 104 20 1 2 17 16 17 2 16 104 0 15 0 16 19 15 16 91 21 1 19 0 5 18 19 5 89 13 1 10 10 11 83 0 11 11 12 67 0 17 17 14 83 0 14 14 15 67 0 18 18 3 83 7 1 3 3 13 67 9 8 6 3 4 4 3 83 7 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 89 values pushed */
0 1 0 1 106 0 0 11 0 106 0 12 10 15 10 12 15 104 20 1 2 17 16 17 2 16 104 0 14 0 17 2 14 17 91 0 15 0 16 19 15 16 91 21 1 19 0 5 18 19 5 89 13 1 10 10 11 83 0 11 11 12 67 0 18 18 3 83 7 1 3 3 13 67 9 8 6 3 4 4 3 83 7 1 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 89 values pushed */
0 1 0 1 106 0 0 11 0 106 0 12 10 15 10 12 15 104 20 1 2 17 16 17 2 16 104 0 14 0 17 2 14 17 91 0 15 0 16 19 15 16 91 21 1 19 0 5 18 19 5 89 13 1 10 10 11 83 0 11 11 14 67 0 18 18 3 83 7 1 3 3 13 67 9 8 6 3 4 4 3 83 7 1 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 48 values pushed */
185 182 16 15 182 203 185 201 170 168 167 160 154 152 142 140 132 123 122 120 115 113 108 96 92 89 78 77 75 72 70 62 58 55 47 46 39 37 33 25 15 181 16 181 37 36 22 17
CALL[ ]	/* CallFunction */";
};
width = 1023;
}
);
note = AEacute;
unicode = 508;
},
{
glyphname = B;
kernLeft = B;
kernRight = B;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(55.667,76,o),
(46,57.667,o),
(46,35,cs),
(46,12.333,o),
(59.333,0,o),
(94,0,cs),
(308,0,ls),
(500,0,o),
(676,57.333,o),
(676,220,cs),
(676,325.333,o),
(602.667,399.667,o),
(488,421,c),
(578.667,445,o),
(634,518.667,o),
(634,612,cs),
(634,752.377,o),
(503.506,821,o),
(367,821,cs),
(365.706,821,o),
(229.323,818,o),
(79,818,cs),
(57.667,818,o),
(40,801.333,o),
(40,780,cs),
(40,754.667,o),
(49.333,738,o),
(80,738,cs),
(118.667,738,o),
(127.333,731.667,o),
(130,701,cs),
(133.681,608.979,o),
(138,453.069,o),
(138,313,cs),
(138,287.667,o),
(137.833,256.5,o),
(137.5,219.5,cs),
(137.167,182.5,o),
(137,142.667,o),
(137,100,cs),
(137,80.092,o),
(105.021,76,o),
(81,76,cs)
);
},
{
closed = 1;
nodes = (
(443.058,371,o),
(581,354.35,o),
(581,222,cs),
(581,167.333,o),
(550.833,132.5,o),
(491.5,110.5,cs),
(432.167,88.5,o),
(345,80,o),
(229,80,c),
(229,368,l),
(242.333,368.667,o),
(254,369.333,o),
(264,370,cs),
(274,370.667,o),
(288.667,371,o),
(308,371,cs)
);
},
{
closed = 1;
nodes = (
(423.662,741,o),
(541,712.691,o),
(541,605,cs),
(541,486.714,o),
(433.198,453,o),
(299,453,cs),
(277,453,o),
(261.167,453.167,o),
(251.5,453.5,cs),
(241.833,453.833,o),
(234.333,454.667,o),
(229,456,c),
(229,737,l),
(234.333,737.667,o),
(243.333,738.5,o),
(256,739.5,cs),
(268.667,740.5,o),
(286.667,741,o),
(310,741,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
68 67 13 3 7 1 35 1 4 7 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
10 6 2 1 1 2 83 0 2 2 12 67 9 1 4 4 7 83 0 7 7 15 67 5 8 2 0 0 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 7 9 1 4 0 7 4 91 10 6 2 1 1 2 83 0 2 2 12 67 5 8 2 0 0 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 7 9 1 4 0 7 4 91 10 6 2 1 1 2 83 0 2 2 14 67 5 8 2 0 0 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
65 64 53 50 1 0 72 69 64 80 65 80 55 54 50 63 53 63 45 42 28 21 17 15 0 49 1 49 11 15
CALL[ ]	/* CallFunction */";
};
width = 705;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(49.667,48,o),
(38,43.667,o),
(38,25,cs),
(38,6.333,o),
(55.667,0,o),
(89,0,cs),
(289,0,ls),
(481,0,o),
(657,57.333,o),
(657,220,cs),
(657,325.333,o),
(583.667,399.667,o),
(469,421,c),
(559.667,445,o),
(615,518.667,o),
(615,612,cs),
(615,752.377,o),
(484.506,821,o),
(348,821,cs),
(349.072,821,o),
(215.022,818,o),
(67,818,cs),
(52.333,818,o),
(41,808.667,o),
(41,794,cs),
(41,777.333,o),
(49.667,769,o),
(67,769,cs),
(111,769,o),
(130.667,769,o),
(132,733,cs),
(134.53,667.23,o),
(140,472.947,o),
(140,313,cs),
(140,285.667,o),
(139.833,250,o),
(139.5,206,cs),
(139.167,162,o),
(139,117.333,o),
(139,72,cs),
(139,49.215,o),
(93.309,48,o),
(67,48,cs)
);
},
{
closed = 1;
nodes = (
(432.34,380,o),
(583,361.642,o),
(583,222,cs),
(583,148.634,o),
(534.193,105.593,o),
(458,85,cs),
(385.696,65.458,o),
(296.749,62,o),
(210,62,c),
(210,377,l),
(231.8,377,o),
(259.363,380,o),
(289,380,cs)
);
},
{
closed = 1;
nodes = (
(415.165,757,o),
(543,726.988,o),
(543,605,cs),
(543,450.678,o),
(367.857,444,o),
(280,444,cs),
(258,444,o),
(240.833,444.167,o),
(228.5,444.5,cs),
(216.167,444.833,o),
(210,445.667,o),
(210,447,cs),
(210,753,l),
(216.667,753.667,o),
(224.333,754.333,o),
(233,755,cs),
(247.667,756.333,o),
(268.333,757,o),
(291,757,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
72 1 8 7 34 1 4 8 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 2 7 7 1 96 9 1 0 6 3 6 0 96 11 1 7 7 2 84 0 2 2 12 67 5 10 2 4 4 8 83 0 8 8 15 67 0 6 6 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 2 7 7 1 96 9 1 0 6 3 6 0 96 0 8 5 10 2 4 6 8 4 91 11 1 7 7 2 84 0 2 2 12 67 0 6 6 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 2 7 7 1 96 9 1 0 6 3 6 0 96 0 8 5 10 2 4 6 8 4 91 11 1 7 7 2 84 0 2 2 14 67 0 6 6 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
69 67 52 49 2 0 77 74 67 85 69 85 57 55 54 53 49 66 52 66 44 41 27 20 17 15 0 48 2 48 12 15
CALL[ ]	/* CallFunction */";
};
width = 689;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(262,0,ls),
(454,0,o),
(630,57.333,o),
(630,220,cs),
(630,325.333,o),
(556.667,399.667,o),
(442,421,c),
(532.667,445,o),
(588,518.667,o),
(588,612,cs),
(588,752.377,o),
(457.506,821,o),
(321,821,cs),
(322.066,821,o),
(191.35,818,o),
(50,818,cs),
(35.333,818,o),
(24,814.667,o),
(24,804,cs),
(24,796,o),
(31.333,789,o),
(50,789,cs),
(107.333,789,o),
(133.667,787.667,o),
(135,753,cs),
(137.739,679.039,o),
(143,484.04,o),
(143,313,cs),
(143,283,o),
(142.833,244.333,o),
(142.5,197,cs),
(142.167,149.667,o),
(142,101.333,o),
(142,52,cs),
(142,28.761,o),
(85.341,28,o),
(50,28,cs),
(32.667,28,o),
(21,22.667,o),
(21,12,cs),
(21,6,o),
(25.667,2.5,o),
(35,1.5,cs),
(44.333,0.5,o),
(56.667,0,o),
(72,0,cs)
);
},
{
closed = 1;
nodes = (
(183,392,l),
(204.8,392,o),
(232.363,395,o),
(262,395,cs),
(420.577,395,o),
(586,374.792,o),
(586,222,cs),
(586,134.396,o),
(532.065,84.833,o),
(451,59.5,cs),
(371.727,34.727,o),
(277.564,32,o),
(183,32,c)
);
},
{
closed = 1;
nodes = (
(231,429,o),
(213.833,429.167,o),
(201.5,429.5,cs),
(189.167,429.833,o),
(183,430.667,o),
(183,432,cs),
(183,783,l),
(189.667,783.667,o),
(197.333,784.333,o),
(206,785,cs),
(220.667,786.333,o),
(241.333,787,o),
(264,787,cs),
(403.167,787,o),
(546,750.67,o),
(546,605,cs),
(546,518.514,o),
(494.451,473.586,o),
(435.5,453,cs),
(372.255,430.914,o),
(301.049,429,o),
(253,429,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
73 1 8 1 35 1 4 8 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
11 7 2 1 1 2 83 0 2 2 12 67 5 10 2 4 4 8 83 0 8 8 15 67 6 9 2 0 0 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 8 5 10 2 4 0 8 4 91 11 7 2 1 1 2 83 0 2 2 12 67 6 9 2 0 0 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
9 1 0 6 3 6 0 96 0 8 5 10 2 4 6 8 4 91 11 7 2 1 1 2 83 0 2 2 14 67 0 6 6 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
70 68 53 50 2 0 79 75 68 88 70 88 58 56 55 54 50 67 53 67 45 42 28 21 17 15 0 49 2 49 12 15
CALL[ ]	/* CallFunction */";
};
width = 666;
}
);
note = B;
unicode = 66;
},
{
glyphname = C;
kernLeft = C;
kernRight = C;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(628,242.667,o),
(616,253,o),
(592,253,cs),
(566.667,253,o),
(558,244.333,o),
(546,207,cs),
(511.83,104.49,o),
(453.139,66,o),
(337,66,cs),
(267.667,66,o),
(215.5,104.667,o),
(181.5,166,cs),
(147.5,227.333,o),
(130,312,o),
(130,404,cs),
(130,584.788,o),
(215.962,759,o),
(343,759,cs),
(472.134,759,o),
(519.355,637.72,o),
(522,524,cs),
(523.333,473.333,o),
(538,465,o),
(570,465,cs),
(603.333,465,o),
(613,481,o),
(613,513,cs),
(613,534.333,o),
(612.667,554.5,o),
(612,573.5,cs),
(611.333,592.5,o),
(611,612.667,o),
(611,634,cs),
(611,658,o),
(611.667,683.667,o),
(613,711,cs),
(614.333,738.333,o),
(615,763.667,o),
(615,787,cs),
(615,802.882,o),
(610.309,829,o),
(570,829,cs),
(538,829,o),
(532,811.667,o),
(532,793,cs),
(532,791.667,o),
(532.167,785.667,o),
(532.5,775,cs),
(532.833,764.333,o),
(534,741.667,o),
(536,707,c),
(513.207,766.831,o),
(450.112,838,o),
(342,838,cs),
(174.23,838,o),
(34,648.519,o),
(34,405,cs),
(34,103.938,o),
(185.838,-14,o),
(329,-14,cs),
(437,-14,o),
(512.167,23.833,o),
(559.5,72.5,cs),
(606.833,121.167,o),
(628,179.333,o),
(628,222,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 6 3 5 3 6 5 104 0 4 4 1 83 2 1 1 1 20 67 0 3 3 1 83 2 1 1 1 20 67 0 5 5 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 6 3 5 3 6 5 104 0 4 4 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 12 67 0 5 5 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 6 3 5 3 6 5 104 0 1 0 4 3 1 4 91 0 2 0 3 6 2 3 91 0 5 5 0 83 0 0 0 21 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 40 38 44 41 40 36 7 22
CALL[ ]	/* CallFunction */";
};
width = 661;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(610,239,o),
(600.333,249,o),
(581,249,cs),
(557,249,o),
(554.333,229.667,o),
(549,203,cs),
(532.918,114.549,o),
(454.789,48,o),
(340,48,cs),
(188.119,48,o),
(112,205.847,o),
(112,404,cs),
(112,599.762,o),
(208.445,777,o),
(346,777,cs),
(476.991,777,o),
(525,658.755,o),
(525,527,cs),
(525,477.667,o),
(537,468,o),
(561,468,cs),
(590.333,468,o),
(595,490,o),
(595,502,cs),
(595,523.333,o),
(594.667,545.333,o),
(594,568,cs),
(593.333,590.667,o),
(593,612.667,o),
(593,634,cs),
(593,658,o),
(593.667,684.167,o),
(595,712.5,cs),
(596.333,740.833,o),
(597,766.667,o),
(597,790,cs),
(597,801.348,o),
(592.534,823,o),
(561,823,cs),
(537,823,o),
(528,804,o),
(528,788,c),
(528,788,o),
(529.838,751.014,o),
(533,702,c),
(510.42,761.273,o),
(453.72,838,o),
(345,838,cs),
(177.23,838,o),
(37,648.519,o),
(37,405,cs),
(37,103.938,o),
(188.838,-14,o),
(332,-14,cs),
(432,-14,o),
(502,23,o),
(546,71,cs),
(590,119,o),
(610,176.333,o),
(610,219,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
25 1 4 2 20 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 6 3 5 3 6 5 104 0 4 4 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 12 67 0 5 5 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 6 3 5 3 6 5 104 0 1 0 4 3 1 4 91 0 3 3 2 83 0 2 2 14 67 0 5 5 0 83 0 0 0 21 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 40 38 44 43 40 36 7 22
CALL[ ]	/* CallFunction */";
};
width = 646;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(511.384,-14,o),
(584,126.287,o),
(584,214,cs),
(584,233.333,o),
(579.333,243,o),
(570,243,cs),
(556.445,243,o),
(555.648,212.886,o),
(553,197,cs),
(529.47,95.035,o),
(463.662,18,o),
(344,18,cs),
(170.674,18,o),
(86,191.986,o),
(86,404,cs),
(86,615.248,o),
(195.156,807,o),
(350,807,cs),
(481.215,807,o),
(529,677.106,o),
(529,532,cs),
(529,502.667,o),
(531.333,473,o),
(550,473,cs),
(567.333,473,o),
(569,488.333,o),
(569,507,cs),
(569,528.333,o),
(568.667,549.5,o),
(568,570.5,cs),
(567.333,591.5,o),
(567,612.667,o),
(567,634,cs),
(567,658,o),
(567.667,684.167,o),
(569,712.5,cs),
(570.333,740.833,o),
(571,766.667,o),
(571,790,cs),
(571,799.333,o),
(564.333,813,o),
(551,813,cs),
(538.333,813,o),
(532,804.667,o),
(532,788,c),
(532,788,o),
(533.838,751.014,o),
(537,702,c),
(514.42,761.273,o),
(457.72,838,o),
(349,838,cs),
(181.23,838,o),
(41,648.519,o),
(41,405,cs),
(41,103.938,o),
(192.838,-14,o),
(336,-14,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
25 20 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 6 3 5 3 6 5 104 0 4 4 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 14 67 0 5 5 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 6 3 5 3 6 5 104 0 1 0 4 3 1 4 91 0 3 3 2 83 0 2 2 14 67 0 5 5 0 83 0 0 0 21 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
40 40 38 42 42 40 36 7 22
CALL[ ]	/* CallFunction */";
};
width = 625;
}
);
note = C;
unicode = 67;
},
{
glyphname = Cacute;
kernLeft = C;
kernRight = C;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(436,953.667,o),
(421.667,972,o),
(395,972,cs),
(357.314,972,o),
(281,898.458,o),
(281,871,cs),
(281,855,o),
(295.667,840,o),
(317,840,cs),
(351.448,840,o),
(436,897.455,o),
(436,935,cs)
);
},
{
closed = 1;
nodes = (
(628,242.667,o),
(616,253,o),
(592,253,cs),
(566.667,253,o),
(558,244.333,o),
(546,207,cs),
(511.83,104.49,o),
(453.139,66,o),
(337,66,cs),
(267.667,66,o),
(215.5,104.667,o),
(181.5,166,cs),
(147.5,227.333,o),
(130,312,o),
(130,404,cs),
(130,584.788,o),
(215.962,759,o),
(343,759,cs),
(472.134,759,o),
(519.355,637.72,o),
(522,524,cs),
(523.333,473.333,o),
(538,465,o),
(570,465,cs),
(603.333,465,o),
(613,481,o),
(613,513,cs),
(613,534.333,o),
(612.667,554.5,o),
(612,573.5,cs),
(611.333,592.5,o),
(611,612.667,o),
(611,634,cs),
(611,658,o),
(611.667,683.667,o),
(613,711,cs),
(614.333,738.333,o),
(615,763.667,o),
(615,787,cs),
(615,802.882,o),
(610.309,829,o),
(570,829,cs),
(538,829,o),
(532,811.667,o),
(532,793,cs),
(532,791.667,o),
(532.167,785.667,o),
(532.5,775,cs),
(532.833,764.333,o),
(534,741.667,o),
(536,707,c),
(513.207,766.831,o),
(450.112,838,o),
(342,838,cs),
(174.23,838,o),
(34,648.519,o),
(34,405,cs),
(34,103.938,o),
(185.838,-14,o),
(329,-14,cs),
(437,-14,o),
(512.167,23.833,o),
(559.5,72.5,cs),
(606.833,121.167,o),
(628,179.333,o),
(628,222,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
36 1 5 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 1 0 3 1 94 0 0 3 0 106 0 8 5 7 5 8 7 104 0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 7 7 2 83 0 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 1 106 0 0 3 0 106 0 8 5 7 5 8 7 104 0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 7 7 2 83 0 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 3 0 106 0 8 5 7 5 8 7 104 0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 12 67 0 7 7 2 83 0 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 0 0 3 0 106 0 8 5 7 5 8 7 104 0 3 0 6 5 3 6 92 0 4 0 5 8 4 5 91 0 7 7 2 83 0 2 2 21 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 40 38 44 41 40 38 38 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 661;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(441,959.667,o),
(429,972,o),
(409,972,cs),
(379.753,972,o),
(303,903.873,o),
(303,877,cs),
(303,863.667,o),
(312.333,854,o),
(327,854,cs),
(353.12,854,o),
(441,908.21,o),
(441,941,cs)
);
},
{
closed = 1;
nodes = (
(610,239,o),
(600.333,249,o),
(581,249,cs),
(557,249,o),
(554.333,229.667,o),
(549,203,cs),
(532.918,114.549,o),
(454.789,48,o),
(340,48,cs),
(188.119,48,o),
(112,205.847,o),
(112,404,cs),
(112,599.762,o),
(208.445,777,o),
(346,777,cs),
(476.991,777,o),
(525,658.755,o),
(525,527,cs),
(525,477.667,o),
(537,468,o),
(561,468,cs),
(590.333,468,o),
(595,490,o),
(595,502,cs),
(595,523.333,o),
(594.667,545.333,o),
(594,568,cs),
(593.333,590.667,o),
(593,612.667,o),
(593,634,cs),
(593,658,o),
(593.667,684.167,o),
(595,712.5,cs),
(596.333,740.833,o),
(597,766.667,o),
(597,790,cs),
(597,801.348,o),
(592.534,823,o),
(561,823,cs),
(537,823,o),
(528,804,o),
(528,788,c),
(528,788,o),
(529.838,751.014,o),
(533,702,c),
(510.42,761.273,o),
(453.72,838,o),
(345,838,cs),
(177.23,838,o),
(37,648.519,o),
(37,405,cs),
(37,103.938,o),
(188.838,-14,o),
(332,-14,cs),
(432,-14,o),
(502,23,o),
(546,71,cs),
(590,119,o),
(610,176.333,o),
(610,219,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
41 1 6 4 36 1 5 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 3 0 106 0 8 5 7 5 8 7 104 0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 12 67 0 7 7 2 84 0 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 106 0 0 3 0 106 0 8 5 7 5 8 7 104 0 3 0 6 5 3 6 91 0 5 5 4 83 0 4 4 14 67 0 7 7 2 84 0 2 2 21 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 40 38 44 43 40 38 38 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 646;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(511.384,-14,o),
(584,126.287,o),
(584,214,cs),
(584,233.333,o),
(579.333,243,o),
(570,243,cs),
(556.445,243,o),
(555.648,212.886,o),
(553,197,cs),
(529.47,95.035,o),
(463.662,18,o),
(344,18,cs),
(170.674,18,o),
(86,191.986,o),
(86,404,cs),
(86,615.248,o),
(195.156,807,o),
(350,807,cs),
(481.215,807,o),
(529,677.106,o),
(529,532,cs),
(529,502.667,o),
(531.333,473,o),
(550,473,cs),
(567.333,473,o),
(569,488.333,o),
(569,507,cs),
(569,528.333,o),
(568.667,549.5,o),
(568,570.5,cs),
(567.333,591.5,o),
(567,612.667,o),
(567,634,cs),
(567,658,o),
(567.667,684.167,o),
(569,712.5,cs),
(570.333,740.833,o),
(571,766.667,o),
(571,790,cs),
(571,799.333,o),
(564.333,813,o),
(551,813,cs),
(538.333,813,o),
(532,804.667,o),
(532,788,c),
(532,788,o),
(533.838,751.014,o),
(537,702,c),
(514.42,761.273,o),
(457.72,838,o),
(349,838,cs),
(181.23,838,o),
(41,648.519,o),
(41,405,cs),
(41,103.938,o),
(192.838,-14,o),
(336,-14,cs)
);
},
{
closed = 1;
nodes = (
(317.198,875,o),
(405,927.619,o),
(405,949,cs),
(405,967.667,o),
(396.667,971,o),
(386,971,cs),
(366.338,971,o),
(291,909.981,o),
(291,886,cs),
(291,878.667,o),
(293.667,875,o),
(299,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
40 35 2 5 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 3 1 94 0 0 3 0 106 0 8 5 7 5 8 7 104 0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 14 67 0 7 7 2 83 0 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 3 0 106 0 8 5 7 5 8 7 104 0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 14 67 0 7 7 2 83 0 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 106 0 0 3 0 106 0 8 5 7 5 8 7 104 0 3 0 6 5 3 6 92 0 5 5 4 83 0 4 4 14 67 0 7 7 2 83 0 2 2 21 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
40 40 38 42 42 40 38 37 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 625;
}
);
note = Cacute;
unicode = 262;
},
{
glyphname = Ccaron;
kernLeft = C;
kernRight = C;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(628,242.667,o),
(616,253,o),
(592,253,cs),
(566.667,253,o),
(558,244.333,o),
(546,207,cs),
(511.83,104.49,o),
(453.139,66,o),
(337,66,cs),
(267.667,66,o),
(215.5,104.667,o),
(181.5,166,cs),
(147.5,227.333,o),
(130,312,o),
(130,404,cs),
(130,584.788,o),
(215.962,759,o),
(343,759,cs),
(472.134,759,o),
(519.355,637.72,o),
(522,524,cs),
(523.333,473.333,o),
(538,465,o),
(570,465,cs),
(603.333,465,o),
(613,481,o),
(613,513,cs),
(613,534.333,o),
(612.667,554.5,o),
(612,573.5,cs),
(611.333,592.5,o),
(611,612.667,o),
(611,634,cs),
(611,658,o),
(611.667,683.667,o),
(613,711,cs),
(614.333,738.333,o),
(615,763.667,o),
(615,787,cs),
(615,802.882,o),
(610.309,829,o),
(570,829,cs),
(538,829,o),
(532,811.667,o),
(532,793,cs),
(532,791.667,o),
(532.167,785.667,o),
(532.5,775,cs),
(532.833,764.333,o),
(534,741.667,o),
(536,707,c),
(516,761.287,o),
(459.083,826.546,o),
(365,837,c),
(404.501,855.434,o),
(478,917.129,o),
(478,951,cs),
(478,960.333,o),
(475.667,972,o),
(465,972,cs),
(459.41,972,o),
(403.555,959.889,o),
(345,922,c),
(309.53,948.011,o),
(243.857,972,o),
(226,972,cs),
(218,972,o),
(213,964.667,o),
(213,958,cs),
(213,916.259,o),
(289.681,855.159,o),
(326,837,c),
(246,831.667,o),
(172.167,782.333,o),
(119.5,705,cs),
(66.833,627.667,o),
(34,522.333,o),
(34,405,cs),
(34,103.938,o),
(185.838,-14,o),
(329,-14,cs),
(437,-14,o),
(512.167,23.833,o),
(559.5,72.5,cs),
(606.833,121.167,o),
(628,179.333,o),
(628,222,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
41 28 2 1 2 46 1 5 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
3 1 2 1 2 106 0 8 5 7 5 8 7 104 0 6 6 1 83 4 1 1 1 20 67 0 5 5 1 83 4 1 1 1 20 67 0 7 7 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
3 1 2 1 2 106 0 8 5 7 5 8 7 104 0 6 6 1 83 0 1 1 20 67 0 5 5 4 83 0 4 4 12 67 0 7 7 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
3 1 2 1 2 106 0 8 5 7 5 8 7 104 0 1 0 6 5 1 6 91 0 4 0 5 8 4 5 91 0 7 7 0 83 0 0 0 21 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
93 91 85 83 75 73 67 65 53 51 40 39 24 36 9 19
CALL[ ]	/* CallFunction */";
};
width = 661;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(452.663,972,o),
(404.994,958.643,o),
(341,921,c),
(301.008,944.525,o),
(239.679,972,o),
(222,972,cs),
(214.667,972,o),
(211,967.667,o),
(211,959,cs),
(211,917.54,o),
(319.04,847,o),
(341,847,cs),
(366.107,847,o),
(472,919.046,o),
(472,955,cs),
(472,964.333,o),
(469,972,o),
(461,972,cs)
);
},
{
closed = 1;
nodes = (
(610,239,o),
(600.333,249,o),
(581,249,cs),
(557,249,o),
(554.333,229.667,o),
(549,203,cs),
(532.918,114.549,o),
(454.789,48,o),
(340,48,cs),
(188.119,48,o),
(112,205.847,o),
(112,404,cs),
(112,599.762,o),
(208.445,777,o),
(346,777,cs),
(476.991,777,o),
(525,658.755,o),
(525,527,cs),
(525,477.667,o),
(537,468,o),
(561,468,cs),
(590.333,468,o),
(595,490,o),
(595,502,cs),
(595,523.333,o),
(594.667,545.333,o),
(594,568,cs),
(593.333,590.667,o),
(593,612.667,o),
(593,634,cs),
(593,658,o),
(593.667,684.167,o),
(595,712.5,cs),
(596.333,740.833,o),
(597,766.667,o),
(597,790,cs),
(597,801.348,o),
(592.534,823,o),
(561,823,cs),
(537,823,o),
(528,804,o),
(528,788,c),
(528,788,o),
(529.838,751.014,o),
(533,702,c),
(510.42,761.273,o),
(453.72,838,o),
(345,838,cs),
(177.23,838,o),
(37,648.519,o),
(37,405,cs),
(37,103.938,o),
(188.838,-14,o),
(332,-14,cs),
(432,-14,o),
(502,23,o),
(546,71,cs),
(590,119,o),
(610,176.333,o),
(610,219,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
20 1 1 0 50 1 7 5 45 1 6 7 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
2 10 2 0 1 0 106 0 1 4 1 106 0 9 6 8 6 9 8 104 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 12 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
2 10 2 0 1 0 106 0 1 4 1 106 0 9 6 8 6 9 8 104 0 4 0 7 6 4 7 91 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 94 92 86 84 76 74 68 66 54 52 41 39 31 29 16 14 9 7 0 24 1 24 11 15
CALL[ ]	/* CallFunction */";
};
width = 646;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(511.384,-14,o),
(584,126.287,o),
(584,214,cs),
(584,233.333,o),
(579.333,243,o),
(570,243,cs),
(556.445,243,o),
(555.648,212.886,o),
(553,197,cs),
(529.47,95.035,o),
(463.662,18,o),
(344,18,cs),
(170.674,18,o),
(86,191.986,o),
(86,404,cs),
(86,615.248,o),
(195.156,807,o),
(350,807,cs),
(481.215,807,o),
(529,677.106,o),
(529,532,cs),
(529,502.667,o),
(531.333,473,o),
(550,473,cs),
(567.333,473,o),
(569,488.333,o),
(569,507,cs),
(569,528.333,o),
(568.667,549.5,o),
(568,570.5,cs),
(567.333,591.5,o),
(567,612.667,o),
(567,634,cs),
(567,658,o),
(567.667,684.167,o),
(569,712.5,cs),
(570.333,740.833,o),
(571,766.667,o),
(571,790,cs),
(571,799.333,o),
(564.333,813,o),
(551,813,cs),
(538.333,813,o),
(532,804.667,o),
(532,788,c),
(532,788,o),
(533.838,751.014,o),
(537,702,c),
(514.42,761.273,o),
(457.72,838,o),
(349,838,cs),
(181.23,838,o),
(41,648.519,o),
(41,405,cs),
(41,103.938,o),
(192.838,-14,o),
(336,-14,cs)
);
},
{
closed = 1;
nodes = (
(367.706,876,o),
(473,935.626,o),
(473,961,cs),
(473,968.333,o),
(470.333,972,o),
(465,972,cs),
(458.254,972,o),
(409.504,954.149,o),
(345,920,c),
(296.14,940.94,o),
(237.185,972,o),
(226,972,cs),
(220.667,972,o),
(218,968.333,o),
(218,961,cs),
(218,937.359,o),
(321.08,876,o),
(345,876,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
19 1 1 0 49 44 2 6 7 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
2 10 2 0 1 0 106 0 1 4 1 106 0 9 6 8 6 9 8 104 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
2 10 2 0 1 0 106 0 1 4 1 106 0 9 6 8 6 9 8 104 0 4 0 7 6 4 7 91 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 92 90 82 80 72 70 64 62 52 50 40 38 30 28 15 13 8 6 0 23 1 23 11 15
CALL[ ]	/* CallFunction */";
};
width = 625;
}
);
note = Ccaron;
unicode = 268;
},
{
glyphname = Ccedilla;
kernLeft = C;
kernRight = C;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(628,242.667,o),
(616,253,o),
(592,253,cs),
(566.667,253,o),
(558,244.333,o),
(546,207,cs),
(511.83,104.49,o),
(453.139,66,o),
(337,66,cs),
(267.667,66,o),
(215.5,104.667,o),
(181.5,166,cs),
(147.5,227.333,o),
(130,312,o),
(130,404,cs),
(130,584.788,o),
(215.962,759,o),
(343,759,cs),
(472.134,759,o),
(519.355,637.72,o),
(522,524,cs),
(523.333,473.333,o),
(538,465,o),
(570,465,cs),
(603.333,465,o),
(613,481,o),
(613,513,cs),
(613,534.333,o),
(612.667,554.5,o),
(612,573.5,cs),
(611.333,592.5,o),
(611,612.667,o),
(611,634,cs),
(611,658,o),
(611.667,683.667,o),
(613,711,cs),
(614.333,738.333,o),
(615,763.667,o),
(615,787,cs),
(615,802.882,o),
(610.309,829,o),
(570,829,cs),
(538,829,o),
(532,811.667,o),
(532,793,cs),
(532,791.667,o),
(532.167,785.667,o),
(532.5,775,cs),
(532.833,764.333,o),
(534,741.667,o),
(536,707,c),
(513.207,766.831,o),
(450.112,838,o),
(342,838,cs),
(174.23,838,o),
(34,648.519,o),
(34,405,cs),
(34,128.952,o),
(160.78,7.511,o),
(293,-11,c),
(291.667,-19.667,o),
(290.333,-30.5,o),
(289,-43.5,cs),
(287.667,-56.5,o),
(285.667,-68.667,o),
(283,-80,cs),
(281.667,-85.333,o),
(280,-93,o),
(280,-97,cs),
(280,-111.667,o),
(287.333,-130,o),
(318,-130,cs),
(359.636,-130,o),
(373.572,-102,o),
(408,-102,cs),
(418.667,-102,o),
(431,-107.333,o),
(431,-118,cs),
(431,-126,o),
(428,-131.667,o),
(422,-135,cs),
(416,-138.333,o),
(404,-140,o),
(386,-140,cs),
(312.546,-140,o),
(311,-159.71,o),
(311,-168,cs),
(311,-176.667,o),
(317.167,-182.5,o),
(329.5,-185.5,cs),
(341.833,-188.5,o),
(362,-190,o),
(390,-190,cs),
(459.658,-190,o),
(519,-163.591,o),
(519,-112,cs),
(519,-73.333,o),
(486,-49,o),
(442,-49,cs),
(414,-49,o),
(394,-59.333,o),
(362,-78,c),
(374,-11,l),
(464.667,-1.667,o),
(528.833,37.5,o),
(569.5,83.5,cs),
(610.167,129.5,o),
(628,183.333,o),
(628,222,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
60 1 7 8 45 1 0 9 6 1 3 0 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 10 7 9 7 10 9 104 0 0 9 3 9 0 3 104 0 3 4 9 3 4 102 0 9 0 4 2 9 4 91 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 67 0 2 2 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 10 7 9 7 10 9 104 0 0 9 3 9 0 3 104 0 3 4 9 3 4 102 0 9 0 4 2 9 4 91 0 2 0 1 2 1 87 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 10 7 9 7 10 9 104 0 0 9 3 9 0 3 104 0 3 4 9 3 4 102 0 9 0 4 2 9 4 91 0 2 0 1 2 1 87 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 10 7 9 7 10 9 104 0 0 9 3 9 0 3 104 0 3 4 9 3 4 102 0 5 0 8 7 5 8 91 0 6 0 7 10 6 7 91 0 9 0 4 2 9 4 91 0 2 1 1 2 79 0 2 2 1 83 0 1 2 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
107 105 99 97 89 87 81 79 67 65 56 54 35 36 38 38 40 11 20
CALL[ ]	/* CallFunction */";
};
width = 661;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(610,239,o),
(600.333,249,o),
(581,249,cs),
(557,249,o),
(554.333,229.667,o),
(549,203,cs),
(532.918,114.549,o),
(454.789,48,o),
(340,48,cs),
(188.119,48,o),
(112,205.847,o),
(112,404,cs),
(112,599.762,o),
(208.445,777,o),
(346,777,cs),
(476.991,777,o),
(525,658.755,o),
(525,527,cs),
(525,477.667,o),
(537,468,o),
(561,468,cs),
(590.333,468,o),
(595,490,o),
(595,502,cs),
(595,523.333,o),
(594.667,545.333,o),
(594,568,cs),
(593.333,590.667,o),
(593,612.667,o),
(593,634,cs),
(593,658,o),
(593.667,684.167,o),
(595,712.5,cs),
(596.333,740.833,o),
(597,766.667,o),
(597,790,cs),
(597,801.348,o),
(592.534,823,o),
(561,823,cs),
(537,823,o),
(528,804,o),
(528,788,c),
(528,788,o),
(529.838,751.014,o),
(533,702,c),
(510.42,761.273,o),
(453.72,838,o),
(345,838,cs),
(177.23,838,o),
(37,648.519,o),
(37,405,cs),
(37,103.938,o),
(188.838,-14,o),
(332,-14,cs),
(432,-14,o),
(502,23,o),
(546,71,cs),
(590,119,o),
(610,176.333,o),
(610,219,cs)
);
},
{
closed = 1;
nodes = (
(320,1,o),
(318,-10,o),
(317,-26,cs),
(315,-42,o),
(312,-57,o),
(309,-71,cs),
(308,-76,o),
(306,-84,o),
(306,-88,cs),
(306,-99,o),
(312,-113,o),
(335,-113,cs),
(366,-113,o),
(390,-85,o),
(426,-85,cs),
(435,-85,o),
(457,-90,o),
(457,-109,cs),
(457,-136,o),
(434,-139,o),
(391,-139,cs),
(364,-139,o),
(348,-141,o),
(341,-146,cs),
(334,-151,o),
(330,-156,o),
(330,-161,cs),
(330,-170,o),
(336,-175,o),
(347,-177,cs),
(358,-180,o),
(374,-181,o),
(395,-181,cs),
(465,-181,o),
(524,-155,o),
(524,-103,cs),
(524,-64,o),
(491,-40,o),
(447,-40,cs),
(419,-40,o),
(399,-50,o),
(367,-69,c),
(380,3,l),
(361,7,l),
(321,7,l),
(321,7,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
26 1 4 2 21 1 3 4 72 1 0 12 73 1 10 7 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 6 3 5 3 6 5 104 13 1 12 5 0 5 12 96 0 11 10 9 0 11 96 0 7 0 10 11 7 10 91 0 4 4 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 12 67 0 5 5 0 83 0 0 0 21 67 0 9 9 8 83 0 8 8 17 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 6 3 5 3 6 5 104 13 1 12 5 0 5 12 96 0 11 10 9 10 11 9 104 0 7 0 10 11 7 10 91 0 4 4 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 12 67 0 5 5 0 83 0 0 0 21 67 0 9 9 8 83 0 8 8 17 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 6 3 5 3 6 5 104 13 1 12 5 0 5 12 96 0 11 10 9 10 11 9 104 0 7 0 10 11 7 10 91 0 9 0 8 9 8 87 0 4 4 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 12 67 0 5 5 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
0 6 3 5 3 6 5 104 13 1 12 5 0 5 12 0 104 0 11 10 9 10 11 9 104 0 7 0 10 11 7 10 91 0 9 0 8 9 8 87 0 4 4 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 12 67 0 5 5 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 69 values pushed */
0 6 3 5 3 6 5 104 13 1 12 5 0 5 12 0 104 0 11 10 9 10 11 9 104 0 1 0 4 3 1 4 91 0 7 0 10 11 7 10 91 0 9 0 8 9 8 87 0 3 3 2 83 0 2 2 14 67 0 5 5 0 83 0 0 0 21 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
71 71 71 110 71 110 102 100 97 95 91 89 38 37 38 40 38 44 43 40 37 14 35
CALL[ ]	/* CallFunction */";
};
width = 646;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(435.658,-206,o),
(495,-179.591,o),
(495,-128,cs),
(495,-89.333,o),
(462,-65,o),
(418,-65,cs),
(390,-65,o),
(370,-75.333,o),
(338,-94,c),
(353,-13,l),
(518.909,-4.972,o),
(584,134.321,o),
(584,214,cs),
(584,233.333,o),
(579.333,243,o),
(570,243,cs),
(556.445,243,o),
(555.648,212.886,o),
(553,197,cs),
(529.47,95.035,o),
(463.662,18,o),
(344,18,cs),
(170.674,18,o),
(86,191.986,o),
(86,404,cs),
(86,615.248,o),
(195.156,807,o),
(350,807,cs),
(481.215,807,o),
(529,677.106,o),
(529,532,cs),
(529,502.667,o),
(531.333,473,o),
(550,473,cs),
(567.333,473,o),
(569,488.333,o),
(569,507,cs),
(569,528.333,o),
(568.667,549.5,o),
(568,570.5,cs),
(567.333,591.5,o),
(567,612.667,o),
(567,634,cs),
(567,658,o),
(567.667,684.167,o),
(569,712.5,cs),
(570.333,740.833,o),
(571,766.667,o),
(571,790,cs),
(571,799.333,o),
(564.333,813,o),
(551,813,cs),
(538.333,813,o),
(532,804.667,o),
(532,788,c),
(532,788,o),
(533.838,751.014,o),
(537,702,c),
(514.42,761.273,o),
(457.72,838,o),
(349,838,cs),
(181.23,838,o),
(41,648.519,o),
(41,405,cs),
(41,259.667,o),
(76.833,155.833,o),
(129.5,88.5,cs),
(182.167,21.167,o),
(253.333,-11.333,o),
(324,-14,c),
(321.333,-36.667,o),
(314,-74.667,o),
(310,-96,cs),
(308.667,-101.333,o),
(307,-109,o),
(307,-113,cs),
(307,-118.333,o),
(312.333,-125,o),
(323,-125,cs),
(345.431,-125,o),
(378.636,-97,o),
(415,-97,cs),
(444.333,-97,o),
(458,-115.333,o),
(458,-134,cs),
(458,-164.667,o),
(423.333,-177,o),
(362,-177,cs),
(348.667,-177,o),
(338.5,-177.5,o),
(331.5,-178.5,cs),
(324.5,-179.5,o),
(321,-183,o),
(321,-189,cs),
(321,-193.667,o),
(323.833,-197.667,o),
(329.5,-201,cs),
(335.167,-204.333,o),
(347.333,-206,o),
(366,-206,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
63 58 2 9 10 6 1 4 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 12 9 11 9 12 11 104 0 5 4 3 0 5 96 0 1 0 4 5 1 4 91 0 10 10 7 83 0 7 7 20 67 0 9 9 8 83 0 8 8 14 67 0 11 11 0 83 6 1 0 0 21 67 0 3 3 2 83 0 2 2 17 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 12 9 11 9 12 11 104 0 5 4 3 4 5 3 104 0 1 0 4 5 1 4 91 0 10 10 7 83 0 7 7 20 67 0 9 9 8 83 0 8 8 14 67 0 11 11 0 83 6 1 0 0 24 67 0 3 3 2 83 0 2 2 17 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 12 9 11 9 12 11 104 0 5 4 3 4 5 3 104 0 1 0 4 5 1 4 91 0 3 0 2 3 2 87 0 10 10 7 83 0 7 7 20 67 0 9 9 8 83 0 8 8 14 67 0 11 11 0 83 6 1 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 12 9 11 9 12 11 104 0 5 4 3 4 5 3 104 0 7 0 10 9 7 10 91 0 1 0 4 5 1 4 91 0 3 0 2 3 2 87 0 9 9 8 83 0 8 8 14 67 0 11 11 0 83 6 1 0 0 24 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
106 104 96 94 86 84 78 76 42 40 24 35 36 36 38 35 20 13 24
CALL[ ]	/* CallFunction */";
};
width = 625;
}
);
note = Ccedilla;
unicode = 199;
},
{
glyphname = Ccircumflex;
kernLeft = C;
kernRight = C;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(467.667,830,o),
(470,841.667,o),
(470,851,cs),
(470,891.866,o),
(360.605,972,o),
(337,972,cs),
(325.856,972,o),
(291.177,950.45,o),
(264,928,cs),
(233.333,902.667,o),
(205,870.667,o),
(205,844,cs),
(205,837.333,o),
(208.667,830,o),
(218,830,cs),
(225.333,830,o),
(240.333,834.667,o),
(263,844,cs),
(285.667,853.333,o),
(310.333,865.333,o),
(337,880,c),
(363.667,865.333,o),
(388.5,853.333,o),
(411.5,844,cs),
(434.5,834.667,o),
(449.667,830,o),
(457,830,cs)
);
},
{
closed = 1;
nodes = (
(628,242.667,o),
(616,253,o),
(592,253,cs),
(566.667,253,o),
(558,244.333,o),
(546,207,cs),
(511.83,104.49,o),
(453.139,66,o),
(337,66,cs),
(267.667,66,o),
(215.5,104.667,o),
(181.5,166,cs),
(147.5,227.333,o),
(130,312,o),
(130,404,cs),
(130,584.788,o),
(215.962,759,o),
(343,759,cs),
(472.134,759,o),
(519.355,637.72,o),
(522,524,cs),
(523.333,473.333,o),
(538,465,o),
(570,465,cs),
(603.333,465,o),
(613,481,o),
(613,513,cs),
(613,534.333,o),
(612.667,554.5,o),
(612,573.5,cs),
(611.333,592.5,o),
(611,612.667,o),
(611,634,cs),
(611,658,o),
(611.667,683.667,o),
(613,711,cs),
(614.333,738.333,o),
(615,763.667,o),
(615,787,cs),
(615,802.882,o),
(610.309,829,o),
(570,829,cs),
(538,829,o),
(532,811.667,o),
(532,793,cs),
(532,791.667,o),
(532.167,785.667,o),
(532.5,775,cs),
(532.833,764.333,o),
(534,741.667,o),
(536,707,c),
(513.207,766.831,o),
(450.112,838,o),
(342,838,cs),
(174.23,838,o),
(34,648.519,o),
(34,405,cs),
(34,103.938,o),
(185.838,-14,o),
(329,-14,cs),
(437,-14,o),
(512.167,23.833,o),
(559.5,72.5,cs),
(606.833,121.167,o),
(628,179.333,o),
(628,222,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
3 1 4 2 42 1 6 7 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 2 4 4 2 94 1 10 2 0 4 7 4 0 7 104 0 9 6 8 6 9 8 104 0 7 7 4 83 5 1 4 4 20 67 0 6 6 4 83 5 1 4 4 20 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 2 4 2 106 1 10 2 0 4 7 4 0 7 104 0 9 6 8 6 9 8 104 0 7 7 4 83 5 1 4 4 20 67 0 6 6 4 83 5 1 4 4 20 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 2 4 2 106 1 10 2 0 4 5 4 0 5 104 0 9 6 8 6 9 8 104 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 12 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 2 4 2 106 1 10 2 0 4 5 4 0 5 104 0 9 6 8 6 9 8 104 0 4 0 7 6 4 7 92 0 5 0 6 9 5 6 91 0 8 8 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 89 87 81 79 71 69 63 61 49 47 38 36 28 26 15 13 7 5 0 21 1 21 11 15
CALL[ ]	/* CallFunction */";
};
width = 661;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(469,847,o),
(472,854.667,o),
(472,864,cs),
(472,900.28,o),
(364.728,972,o),
(341,972,cs),
(319.04,972,o),
(211,901.46,o),
(211,860,cs),
(211,851.333,o),
(214.667,847,o),
(222,847,cs),
(239.679,847,o),
(301.008,874.475,o),
(341,898,c),
(404.994,860.357,o),
(452.663,847,o),
(461,847,cs)
);
},
{
closed = 1;
nodes = (
(610,239,o),
(600.333,249,o),
(581,249,cs),
(557,249,o),
(554.333,229.667,o),
(549,203,cs),
(532.918,114.549,o),
(454.789,48,o),
(340,48,cs),
(188.119,48,o),
(112,205.847,o),
(112,404,cs),
(112,599.762,o),
(208.445,777,o),
(346,777,cs),
(476.991,777,o),
(525,658.755,o),
(525,527,cs),
(525,477.667,o),
(537,468,o),
(561,468,cs),
(590.333,468,o),
(595,490,o),
(595,502,cs),
(595,523.333,o),
(594.667,545.333,o),
(594,568,cs),
(593.333,590.667,o),
(593,612.667,o),
(593,634,cs),
(593,658,o),
(593.667,684.167,o),
(595,712.5,cs),
(596.333,740.833,o),
(597,766.667,o),
(597,790,cs),
(597,801.348,o),
(592.534,823,o),
(561,823,cs),
(537,823,o),
(528,804,o),
(528,788,c),
(528,788,o),
(529.838,751.014,o),
(533,702,c),
(510.42,761.273,o),
(453.72,838,o),
(345,838,cs),
(177.23,838,o),
(37,648.519,o),
(37,405,cs),
(37,103.938,o),
(188.838,-14,o),
(332,-14,cs),
(432,-14,o),
(502,23,o),
(546,71,cs),
(590,119,o),
(610,176.333,o),
(610,219,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
5 1 0 2 50 1 7 5 45 1 6 7 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 0 4 2 94 1 10 2 0 4 0 106 0 9 6 8 6 9 8 104 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 12 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 2 0 2 106 1 10 2 0 4 0 106 0 9 6 8 6 9 8 104 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 12 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 2 0 2 106 1 10 2 0 4 0 106 0 9 6 8 6 9 8 104 0 4 0 7 6 4 7 92 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 94 92 86 84 76 74 68 66 54 52 41 39 31 29 18 16 11 9 0 24 1 24 11 15
CALL[ ]	/* CallFunction */";
};
width = 646;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(511.384,-14,o),
(584,126.287,o),
(584,214,cs),
(584,233.333,o),
(579.333,243,o),
(570,243,cs),
(556.445,243,o),
(555.648,212.886,o),
(553,197,cs),
(529.47,95.035,o),
(463.662,18,o),
(344,18,cs),
(170.674,18,o),
(86,191.986,o),
(86,404,cs),
(86,615.248,o),
(195.156,807,o),
(350,807,cs),
(481.215,807,o),
(529,677.106,o),
(529,532,cs),
(529,502.667,o),
(531.333,473,o),
(550,473,cs),
(567.333,473,o),
(569,488.333,o),
(569,507,cs),
(569,528.333,o),
(568.667,549.5,o),
(568,570.5,cs),
(567.333,591.5,o),
(567,612.667,o),
(567,634,cs),
(567,658,o),
(567.667,684.167,o),
(569,712.5,cs),
(570.333,740.833,o),
(571,766.667,o),
(571,790,cs),
(571,799.333,o),
(564.333,813,o),
(551,813,cs),
(538.333,813,o),
(532,804.667,o),
(532,788,c),
(532,788,o),
(533.838,751.014,o),
(537,702,c),
(514.42,761.273,o),
(457.72,838,o),
(349,838,cs),
(181.23,838,o),
(41,648.519,o),
(41,405,cs),
(41,103.938,o),
(192.838,-14,o),
(336,-14,cs)
);
},
{
closed = 1;
nodes = (
(244.501,875,o),
(316.211,908.207,o),
(347,928,c),
(401.215,890.467,o),
(468.669,875,o),
(467,875,cs),
(472.333,875,o),
(475,878.667,o),
(475,886,cs),
(475,910.708,o),
(372.596,972,o),
(347,972,cs),
(323.629,972,o),
(220,910.79,o),
(220,886,cs),
(220,878.667,o),
(222.667,875,o),
(228,875,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
5 1 0 2 49 44 2 6 7 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 0 4 2 94 1 10 2 0 4 0 106 0 9 6 8 6 9 8 104 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 2 0 2 106 1 10 2 0 4 0 106 0 9 6 8 6 9 8 104 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 2 0 2 106 1 10 2 0 4 0 106 0 9 6 8 6 9 8 104 0 4 0 7 6 4 7 92 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 92 90 82 80 72 70 64 62 52 50 40 38 30 28 18 16 11 9 0 23 1 23 11 15
CALL[ ]	/* CallFunction */";
};
width = 625;
}
);
note = Ccircumflex;
unicode = 264;
},
{
glyphname = Cdotaccent;
kernLeft = C;
kernRight = C;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(628,242.667,o),
(616,253,o),
(592,253,cs),
(566.667,253,o),
(558,244.333,o),
(546,207,cs),
(511.83,104.49,o),
(453.139,66,o),
(337,66,cs),
(267.667,66,o),
(215.5,104.667,o),
(181.5,166,cs),
(147.5,227.333,o),
(130,312,o),
(130,404,cs),
(130,584.788,o),
(215.962,759,o),
(343,759,cs),
(472.134,759,o),
(519.355,637.72,o),
(522,524,cs),
(523.333,473.333,o),
(538,465,o),
(570,465,cs),
(603.333,465,o),
(613,481,o),
(613,513,cs),
(613,534.333,o),
(612.667,554.5,o),
(612,573.5,cs),
(611.333,592.5,o),
(611,612.667,o),
(611,634,cs),
(611,658,o),
(611.667,683.667,o),
(613,711,cs),
(614.333,738.333,o),
(615,763.667,o),
(615,787,cs),
(615,802.882,o),
(610.309,829,o),
(570,829,cs),
(538,829,o),
(532,811.667,o),
(532,793,cs),
(532,791.667,o),
(532.167,785.667,o),
(532.5,775,cs),
(532.833,764.333,o),
(534,741.667,o),
(536,707,c),
(513.207,766.831,o),
(450.112,838,o),
(342,838,cs),
(174.23,838,o),
(34,648.519,o),
(34,405,cs),
(34,103.938,o),
(185.838,-14,o),
(329,-14,cs),
(437,-14,o),
(512.167,23.833,o),
(559.5,72.5,cs),
(606.833,121.167,o),
(628,179.333,o),
(628,222,cs)
);
},
{
closed = 1;
nodes = (
(284,863.333,o),
(309.667,840,o),
(343,840,cs),
(372.675,840,o),
(410,854.646,o),
(410,910,cs),
(410,946,o),
(382,971,o),
(350,971,cs),
(302.488,971,o),
(284,933.161,o),
(284,906,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 6 3 5 3 6 5 104 0 7 0 8 1 7 8 91 0 4 4 1 83 2 1 1 1 20 67 0 3 3 1 83 2 1 1 1 20 67 0 5 5 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 6 3 5 3 6 5 104 0 7 0 8 1 7 8 91 0 4 4 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 12 67 0 5 5 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 6 3 5 3 6 5 104 0 7 0 8 1 7 8 91 0 1 0 4 3 1 4 91 0 2 0 3 6 2 3 91 0 5 5 0 83 0 0 0 21 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 37 38 40 38 44 41 40 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 661;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(610,239,o),
(600.333,249,o),
(581,249,cs),
(557,249,o),
(554.333,229.667,o),
(549,203,cs),
(532.918,114.549,o),
(454.789,48,o),
(340,48,cs),
(188.119,48,o),
(112,205.847,o),
(112,404,cs),
(112,599.762,o),
(208.445,777,o),
(346,777,cs),
(476.991,777,o),
(525,658.755,o),
(525,527,cs),
(525,477.667,o),
(537,468,o),
(561,468,cs),
(590.333,468,o),
(595,490,o),
(595,502,cs),
(595,523.333,o),
(594.667,545.333,o),
(594,568,cs),
(593.333,590.667,o),
(593,612.667,o),
(593,634,cs),
(593,658,o),
(593.667,684.167,o),
(595,712.5,cs),
(596.333,740.833,o),
(597,766.667,o),
(597,790,cs),
(597,801.348,o),
(592.534,823,o),
(561,823,cs),
(537,823,o),
(528,804,o),
(528,788,c),
(528,788,o),
(529.838,751.014,o),
(533,702,c),
(510.42,761.273,o),
(453.72,838,o),
(345,838,cs),
(177.23,838,o),
(37,648.519,o),
(37,405,cs),
(37,103.938,o),
(188.838,-14,o),
(332,-14,cs),
(432,-14,o),
(502,23,o),
(546,71,cs),
(590,119,o),
(610,176.333,o),
(610,219,cs)
);
},
{
closed = 1;
nodes = (
(296,880,o),
(318,859,o),
(345,859,cs),
(370,859,o),
(401,872,o),
(401,920,cs),
(401,951,o),
(379,972,o),
(352,972,cs),
(310,972,o),
(296,936,o),
(296,916,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
26 1 4 2 21 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 6 3 5 3 6 5 104 0 7 0 8 1 7 8 91 0 4 4 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 12 67 0 5 5 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 6 3 5 3 6 5 104 0 7 0 8 1 7 8 91 0 1 0 4 3 1 4 91 0 3 3 2 83 0 2 2 14 67 0 5 5 0 83 0 0 0 21 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 37 38 40 38 44 43 40 37 9 35
CALL[ ]	/* CallFunction */";
};
width = 646;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(511.384,-14,o),
(584,126.287,o),
(584,214,cs),
(584,233.333,o),
(579.333,243,o),
(570,243,cs),
(556.445,243,o),
(555.648,212.886,o),
(553,197,cs),
(529.47,95.035,o),
(463.662,18,o),
(344,18,cs),
(170.674,18,o),
(86,191.986,o),
(86,404,cs),
(86,615.248,o),
(195.156,807,o),
(350,807,cs),
(481.215,807,o),
(529,677.106,o),
(529,532,cs),
(529,502.667,o),
(531.333,473,o),
(550,473,cs),
(567.333,473,o),
(569,488.333,o),
(569,507,cs),
(569,528.333,o),
(568.667,549.5,o),
(568,570.5,cs),
(567.333,591.5,o),
(567,612.667,o),
(567,634,cs),
(567,658,o),
(567.667,684.167,o),
(569,712.5,cs),
(570.333,740.833,o),
(571,766.667,o),
(571,790,cs),
(571,799.333,o),
(564.333,813,o),
(551,813,cs),
(538.333,813,o),
(532,804.667,o),
(532,788,c),
(532,788,o),
(533.838,751.014,o),
(537,702,c),
(514.42,761.273,o),
(457.72,838,o),
(349,838,cs),
(181.23,838,o),
(41,648.519,o),
(41,405,cs),
(41,103.938,o),
(192.838,-14,o),
(336,-14,cs)
);
},
{
closed = 1;
nodes = (
(366.667,889,o),
(389,899,o),
(389,935,cs),
(389,957.667,o),
(373.667,972,o),
(355,972,cs),
(327.258,972,o),
(314,944.895,o),
(314,931,cs),
(314,907,o),
(329.333,889,o),
(348,889,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
25 20 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 6 3 5 3 6 5 104 0 7 0 8 1 7 8 91 0 4 4 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 14 67 0 5 5 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 6 3 5 3 6 5 104 0 7 0 8 1 7 8 91 0 1 0 4 3 1 4 91 0 3 3 2 83 0 2 2 14 67 0 5 5 0 83 0 0 0 21 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 37 40 40 38 42 42 40 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 625;
}
);
note = Cdotaccent;
unicode = 266;
},
{
glyphname = D;
kernLeft = B;
kernRight = D;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(41,750.667,o),
(53.333,738,o),
(78,738,cs),
(107.333,738,o),
(132,730.667,o),
(132,696,cs),
(132,633.779,o),
(139,488.095,o),
(139,437,cs),
(139,364.21,o),
(139.224,303.213,o),
(138.5,254,cs),
(137.755,203.336,o),
(138,151.007,o),
(138,97,cs),
(138,89,o),
(133.5,83.333,o),
(124.5,80,cs),
(115.5,76.667,o),
(101.667,74.333,o),
(83,73,cs),
(56.333,70.333,o),
(41,61.667,o),
(41,31,cs),
(41,10.333,o),
(53.333,0,o),
(78,0,cs),
(289,0,ls),
(551.878,0,o),
(682,199.666,o),
(682,439,cs),
(682,580.333,o),
(628.667,676,o),
(554,736,cs),
(479.333,796,o),
(383,821,o),
(299,821,cs),
(217.667,821,o),
(142.667,820.667,o),
(76,818,cs),
(53.333,816.667,o),
(41,800,o),
(41,776,cs)
);
},
{
closed = 1;
nodes = (
(498.848,738,o),
(586,600.881,o),
(586,439,cs),
(586,235.22,o),
(498.602,82,o),
(293,82,cs),
(251.781,82,o),
(231,83.753,o),
(231,92,cs),
(231,734,l),
(241,734.667,o),
(251.333,735.5,o),
(262,736.5,cs),
(272.667,737.5,o),
(283,738,o),
(293,738,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
4 6 3 3 2 2 0 83 0 0 0 12 67 0 5 5 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
4 6 3 3 2 2 0 83 0 0 0 14 67 0 5 5 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
41 40 50 47 43 42 40 58 41 58 39 37 56 82 7 17
CALL[ ]	/* CallFunction */";
};
width = 715;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(48.333,816.667,o),
(42,804.667,o),
(42,794,cs),
(42,780.667,o),
(49,769,o),
(65,769,cs),
(102.805,769,o),
(133,766.267,o),
(133,727,cs),
(133,668.696,o),
(140,487.082,o),
(140,437,cs),
(140,360.854,o),
(140.217,295.523,o),
(139.5,241,cs),
(138.759,184.671,o),
(139,128.341,o),
(139,72,cs),
(139,48.278,o),
(94.208,48,o),
(70,48,cs),
(47.333,48,o),
(39,41.333,o),
(39,24,cs),
(39,6.667,o),
(52.333,0,o),
(75,0,cs),
(269,0,ls),
(531.878,0,o),
(662,199.666,o),
(662,439,cs),
(662,580.333,o),
(608.667,676,o),
(534,736,cs),
(459.333,796,o),
(363,821,o),
(279,821,cs),
(197.667,821,o),
(129.667,820.667,o),
(63,818,cs)
);
},
{
closed = 1;
nodes = (
(490.403,756,o),
(587,613.33,o),
(587,439,cs),
(587,222.99,o),
(490.859,64,o),
(273,64,cs),
(231.781,64,o),
(211,65.753,o),
(211,74,cs),
(211,752,l),
(221,752.667,o),
(231.333,753.5,o),
(242,754.5,cs),
(252.667,755.5,o),
(263,756,o),
(273,756,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 3 0 4 4 3 96 0 2 6 1 6 2 96 5 7 2 4 4 0 84 0 0 0 12 67 0 6 6 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 0 4 4 3 96 0 2 6 1 6 2 96 5 7 2 4 4 0 84 0 0 0 14 67 0 6 6 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
47 46 56 53 49 48 46 64 47 64 41 39 52 56 64 8 18
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(241,0,ls),
(503.878,0,o),
(634,199.666,o),
(634,439,cs),
(634,580.333,o),
(580.667,676,o),
(506,736,cs),
(431.333,796,o),
(335,821,o),
(251,821,cs),
(169.667,821,o),
(111.667,820.667,o),
(45,818,cs),
(31,817.333,o),
(24,813,o),
(24,805,cs),
(24,798.333,o),
(29.667,789,o),
(47,789,cs),
(103.125,789,o),
(135,786.513,o),
(135,747,cs),
(135,676.462,o),
(142,505.895,o),
(142,437,cs),
(142,356.408,o),
(142.218,287.41,o),
(141.5,230,cs),
(140.758,170.67,o),
(141,111.341,o),
(141,52,cs),
(141,28.179,o),
(86.958,28,o),
(52,28,cs),
(40.667,28,o),
(32.667,26.5,o),
(28,23.5,cs),
(23.333,20.5,o),
(21,16.667,o),
(21,12,cs),
(21,6.667,o),
(24.167,3.333,o),
(30.5,2,cs),
(36.833,0.667,o),
(45.667,0,o),
(57,0,cs)
);
},
{
closed = 1;
nodes = (
(203.781,34,o),
(183,35.753,o),
(183,44,cs),
(183,782,l),
(193,782.667,o),
(203.333,783.5,o),
(214,784.5,cs),
(224.667,785.5,o),
(235,786,o),
(245,786,cs),
(484.403,786,o),
(589,630.397,o),
(589,439,cs),
(589,208.827,o),
(484.653,34,o),
(245,34,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 5 3 6 3 5 96 0 2 6 1 6 2 96 8 4 2 3 3 0 83 7 1 0 0 12 67 0 6 6 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 5 3 6 3 5 96 0 2 6 1 6 2 96 8 4 2 3 3 0 83 7 1 0 0 14 67 0 6 6 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
46 45 4 0 55 52 48 47 45 63 46 63 41 38 22 19 15 12 0 44 4 44 9 15
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = D;
unicode = 68;
},
{
glyphname = Dcaron;
kernLeft = B;
kernRight = D;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(426.325,972,o),
(363.763,951.893,o),
(323,922,c),
(285.937,949.179,o),
(223.248,972,o),
(204,972,cs),
(194.667,972,o),
(191,964.667,o),
(191,958,cs),
(191,931.333,o),
(219.333,900.5,o),
(250,874.5,cs),
(277.066,851.553,o),
(311.906,830,o),
(323,830,cs),
(346.27,830,o),
(456,908.718,o),
(456,951,cs),
(456,960.333,o),
(453.667,972,o),
(443,972,cs)
);
},
{
closed = 1;
nodes = (
(41,750.667,o),
(53.333,738,o),
(78,738,cs),
(107.333,738,o),
(132,730.667,o),
(132,696,cs),
(132,633.779,o),
(139,488.095,o),
(139,437,cs),
(139,364.21,o),
(139.224,303.213,o),
(138.5,254,cs),
(137.755,203.336,o),
(138,151.007,o),
(138,97,cs),
(138,89,o),
(133.5,83.333,o),
(124.5,80,cs),
(115.5,76.667,o),
(101.667,74.333,o),
(83,73,cs),
(56.333,70.333,o),
(41,61.667,o),
(41,31,cs),
(41,10.333,o),
(53.333,0,o),
(78,0,cs),
(289,0,ls),
(551.878,0,o),
(682,199.666,o),
(682,439,cs),
(682,580.333,o),
(628.667,676,o),
(554,736,cs),
(479.333,796,o),
(383,821,o),
(299,821,cs),
(217.667,821,o),
(142.667,820.667,o),
(76,818,cs),
(53.333,816.667,o),
(41,800,o),
(41,776,cs)
);
},
{
closed = 1;
nodes = (
(498.848,738,o),
(586,600.881,o),
(586,439,cs),
(586,235.22,o),
(498.602,82,o),
(293,82,cs),
(251.781,82,o),
(231,83.753,o),
(231,92,cs),
(231,734,l),
(241,734.667,o),
(251.333,735.5,o),
(262,736.5,cs),
(272.667,737.5,o),
(283,738,o),
(293,738,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
2 9 2 0 1 0 106 0 1 3 1 106 7 10 6 3 5 5 3 83 0 3 3 12 67 0 8 8 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
2 9 2 0 1 0 106 0 1 3 1 106 7 10 6 3 5 5 3 83 0 3 3 14 67 0 8 8 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
67 66 1 0 76 73 69 68 66 84 67 84 65 63 44 41 33 28 17 15 9 7 0 25 1 25 11 15
CALL[ ]	/* CallFunction */";
};
width = 715;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(414.663,972,o),
(366.994,958.643,o),
(303,921,c),
(263.008,944.525,o),
(201.679,972,o),
(184,972,cs),
(176.667,972,o),
(173,967.667,o),
(173,959,cs),
(173,917.54,o),
(281.04,847,o),
(303,847,cs),
(328.107,847,o),
(434,919.046,o),
(434,955,cs),
(434,964.333,o),
(431,972,o),
(423,972,cs)
);
},
{
closed = 1;
nodes = (
(48.333,816.667,o),
(42,804.667,o),
(42,794,cs),
(42,780.667,o),
(49,769,o),
(65,769,cs),
(102.805,769,o),
(133,766.267,o),
(133,727,cs),
(133,668.696,o),
(140,487.082,o),
(140,437,cs),
(140,360.854,o),
(140.217,295.523,o),
(139.5,241,cs),
(138.759,184.671,o),
(139,128.341,o),
(139,72,cs),
(139,48.278,o),
(94.208,48,o),
(70,48,cs),
(47.333,48,o),
(39,41.333,o),
(39,24,cs),
(39,6.667,o),
(52.333,0,o),
(75,0,cs),
(269,0,ls),
(531.878,0,o),
(662,199.666,o),
(662,439,cs),
(662,580.333,o),
(608.667,676,o),
(534,736,cs),
(459.333,796,o),
(363,821,o),
(279,821,cs),
(197.667,821,o),
(129.667,820.667,o),
(63,818,cs)
);
},
{
closed = 1;
nodes = (
(490.403,756,o),
(587,613.33,o),
(587,439,cs),
(587,222.99,o),
(490.859,64,o),
(273,64,cs),
(231.781,64,o),
(211,65.753,o),
(211,74,cs),
(211,752,l),
(221,752.667,o),
(231.333,753.5,o),
(242,754.5,cs),
(252.667,755.5,o),
(263,756,o),
(273,756,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
2 10 2 0 1 0 106 0 1 3 1 106 0 6 3 7 7 6 96 0 5 9 4 9 5 96 8 11 2 7 7 3 84 0 3 3 12 67 0 9 9 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
2 10 2 0 1 0 106 0 1 3 1 106 0 6 3 7 7 6 96 0 5 9 4 9 5 96 8 11 2 7 7 3 84 0 3 3 14 67 0 9 9 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
72 71 1 0 81 78 74 73 71 89 72 89 66 64 47 44 40 37 29 25 16 14 9 7 0 24 1 24 12 15
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(241,0,ls),
(503.878,0,o),
(634,199.666,o),
(634,439,cs),
(634,580.333,o),
(580.667,676,o),
(506,736,cs),
(431.333,796,o),
(335,821,o),
(251,821,cs),
(169.667,821,o),
(111.667,820.667,o),
(45,818,cs),
(31,817.333,o),
(24,813,o),
(24,805,cs),
(24,798.333,o),
(29.667,789,o),
(47,789,cs),
(103.125,789,o),
(135,786.513,o),
(135,747,cs),
(135,676.462,o),
(142,505.895,o),
(142,437,cs),
(142,356.408,o),
(142.218,287.41,o),
(141.5,230,cs),
(140.758,170.67,o),
(141,111.341,o),
(141,52,cs),
(141,28.179,o),
(86.958,28,o),
(52,28,cs),
(40.667,28,o),
(32.667,26.5,o),
(28,23.5,cs),
(23.333,20.5,o),
(21,16.667,o),
(21,12,cs),
(21,6.667,o),
(24.167,3.333,o),
(30.5,2,cs),
(36.833,0.667,o),
(45.667,0,o),
(57,0,cs)
);
},
{
closed = 1;
nodes = (
(203.781,34,o),
(183,35.753,o),
(183,44,cs),
(183,782,l),
(193,782.667,o),
(203.333,783.5,o),
(214,784.5,cs),
(224.667,785.5,o),
(235,786,o),
(245,786,cs),
(484.403,786,o),
(589,630.397,o),
(589,439,cs),
(589,208.827,o),
(484.653,34,o),
(245,34,cs)
);
},
{
closed = 1;
nodes = (
(300.596,875,o),
(403,936.292,o),
(403,961,cs),
(403,968.333,o),
(400.333,972,o),
(395,972,cs),
(383.436,972,o),
(326.362,941.012,o),
(275,919,c),
(220.598,942.315,o),
(167.911,972,o),
(156,972,cs),
(150.667,972,o),
(148,968.333,o),
(148,961,cs),
(148,936.21,o),
(251.629,875,o),
(275,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
19 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
2 10 2 0 1 0 106 0 1 3 1 106 0 8 6 9 6 8 96 0 5 9 4 9 5 96 12 7 2 6 6 3 83 11 1 3 3 12 67 0 9 9 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
2 10 2 0 1 0 106 0 1 3 1 106 0 8 6 9 6 8 96 0 5 9 4 9 5 96 12 7 2 6 6 3 83 11 1 3 3 14 67 0 9 9 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
70 69 28 24 1 0 79 76 72 71 69 87 70 87 65 62 46 43 39 36 24 68 28 68 15 13 8 6 0 23 1 23 13 15
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = Dcaron;
unicode = 270;
},
{
glyphname = Dcroat;
kernLeft = B;
kernRight = D;
lastChange = "2024-06-13 14:31:52 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(292,0,ls),
(555,0,o),
(685,200,o),
(685,439,cs),
(685,580,o),
(632,676,o),
(557,736,cs),
(482,796,o),
(386,821,o),
(302,821,cs),
(221,821,o),
(146,821,o),
(79,818,cs),
(56,817,o),
(44,800,o),
(44,776,cs),
(44,751,o),
(56,738,o),
(81,738,cs),
(110,738,o),
(135,731,o),
(135,696,cs),
(135,652,o),
(142,570,o),
(142,451,c),
(116,452,l),
(98,452,ls),
(75,452,o),
(65,426,o),
(65,409,cs),
(65,394,o),
(80,365,o),
(98,365,cs),
(142,365,l),
(141,97,ls),
(141,89,o),
(137,83,o),
(128,80,cs),
(119,77,o),
(105,74,o),
(86,73,cs),
(59,70,o),
(44,62,o),
(44,31,cs),
(44,10,o),
(56,0,o),
(81,0,cs)
);
},
{
closed = 1;
nodes = (
(255,82,o),
(234,84,o),
(234,92,cs),
(234,365,l),
(294,366,l),
(339,366,ls),
(367,366,o),
(375,398,o),
(375,412,cs),
(375,429,o),
(362,453,o),
(347,453,cs),
(297,452,l),
(234,450,l),
(234,734,l),
(265,737,l),
(296,738,ls),
(502,738,o),
(589,601,o),
(589,439,cs),
(589,235,o),
(502,82,o),
(296,82,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
6 10 5 3 4 4 0 83 0 0 0 12 67 8 1 2 2 3 83 7 1 3 3 15 67 0 9 9 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
7 1 3 8 1 2 9 3 2 91 6 10 5 3 4 4 0 83 0 0 0 12 67 0 9 9 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
7 1 3 8 1 2 9 3 2 91 6 10 5 3 4 4 0 83 0 0 0 14 67 0 9 9 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
53 52 77 74 70 66 60 56 55 54 52 85 53 85 39 70 44 56 82 11 20
CALL[ ]	/* CallFunction */";
};
width = 718;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(271,0,ls),
(534,0,o),
(664,200,o),
(664,439,cs),
(664,580,o),
(611,676,o),
(536,736,cs),
(461,796,o),
(365,821,o),
(281,821,cs),
(200,821,o),
(132,821,o),
(65,818,cs),
(50,817,o),
(44,805,o),
(44,794,cs),
(44,781,o),
(51,769,o),
(67,769,cs),
(105,769,o),
(135,766,o),
(135,727,cs),
(135,670,o),
(142,498,o),
(142,442,c),
(77,443,ls),
(58,443,o),
(51,422,o),
(51,409,cs),
(51,397,o),
(62,374,o),
(77,374,cs),
(142,374,l),
(142,241,l),
(141,72,ls),
(141,48,o),
(96,48,o),
(72,48,cs),
(49,48,o),
(41,41,o),
(41,24,cs),
(41,7,o),
(54,0,o),
(77,0,cs)
);
},
{
closed = 1;
nodes = (
(234,64,o),
(213,66,o),
(213,74,cs),
(213,375,l),
(318,375,ls),
(339,375,o),
(347,400,o),
(347,412,cs),
(347,425,o),
(337,444,o),
(326,444,cs),
(271,443,l),
(213,441,l),
(213,752,l),
(244,755,l),
(275,756,ls),
(492,756,o),
(589,613,o),
(589,439,cs),
(589,223,o),
(493,64,o),
(275,64,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 5 2 6 6 5 96 0 4 8 3 8 4 96 7 10 2 6 6 2 84 0 2 2 12 67 0 1 1 0 83 9 1 0 0 15 67 0 8 8 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 5 2 6 6 5 96 0 4 8 3 8 4 96 9 1 0 0 1 8 0 1 91 7 10 2 6 6 2 84 0 2 2 12 67 0 8 8 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 5 2 6 6 5 96 0 4 8 3 8 4 96 9 1 0 0 1 8 0 1 91 7 10 2 6 6 2 84 0 2 2 14 67 0 8 8 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
74 73 1 0 83 80 76 75 73 91 74 91 68 66 49 46 42 39 31 27 14 7 0 26 1 18 11 15
CALL[ ]	/* CallFunction */";
};
width = 700;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(241,0,ls),
(504,0,o),
(634,200,o),
(634,439,cs),
(634,580,o),
(581,676,o),
(506,736,cs),
(431,796,o),
(335,821,o),
(251,821,cs),
(170,821,o),
(112,821,o),
(45,818,cs),
(31,817,o),
(24,813,o),
(24,805,cs),
(24,798,o),
(30,789,o),
(47,789,cs),
(103,789,o),
(135,787,o),
(135,747,cs),
(135,676,o),
(142,506,o),
(142,437,cs),
(142,426,l),
(87,427,l),
(47,428,ls),
(36,428,o),
(31,416,o),
(31,409,cs),
(31,402,o),
(38,389,o),
(47,389,cs),
(142,389,l),
(141,52,ls),
(141,28,o),
(87,28,o),
(52,28,cs),
(41,28,o),
(33,27,o),
(28,24,cs),
(23,21,o),
(21,17,o),
(21,12,cs),
(21,7,o),
(24,3,o),
(31,2,cs),
(37,1,o),
(46,0,o),
(57,0,cs)
);
},
{
closed = 1;
nodes = (
(204,34,o),
(183,36,o),
(183,44,cs),
(183,389,l),
(243,390,l),
(288,390,ls),
(303,390,o),
(307,405,o),
(307,412,cs),
(307,419,o),
(301,429,o),
(296,429,cs),
(246,428,l),
(183,426,l),
(183,782,l),
(214,785,l),
(245,786,ls),
(484,786,o),
(589,630,o),
(589,439,cs),
(589,209,o),
(485,34,o),
(245,34,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 7 5 4 5 7 96 0 2 10 1 10 2 96 12 6 2 5 5 0 83 11 1 0 0 12 67 9 1 3 3 4 83 8 1 4 4 15 67 0 10 10 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 7 5 4 5 7 96 0 2 10 1 10 2 96 8 1 4 9 1 3 10 4 3 91 12 6 2 5 5 0 83 11 1 0 0 12 67 0 10 10 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 7 5 4 5 7 96 0 2 10 1 10 2 96 8 1 4 9 1 3 10 4 3 91 12 6 2 5 5 0 83 11 1 0 0 14 67 0 10 10 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
57 56 4 0 79 76 72 68 64 60 59 58 56 87 57 87 52 49 40 36 32 30 22 19 15 12 0 55 4 55 13 15
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = Dcroat;
unicode = 272;
},
{
glyphname = Eth;
kernLeft = B;
kernRight = D;
lastChange = "2024-06-13 14:32:02 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(292,0,ls),
(555,0,o),
(685,200,o),
(685,439,cs),
(685,580,o),
(632,676,o),
(557,736,cs),
(482,796,o),
(386,821,o),
(302,821,cs),
(221,821,o),
(146,821,o),
(79,818,cs),
(56,817,o),
(44,800,o),
(44,776,cs),
(44,751,o),
(56,738,o),
(81,738,cs),
(110,738,o),
(135,731,o),
(135,696,cs),
(135,652,o),
(142,570,o),
(142,451,c),
(116,452,l),
(98,452,ls),
(75,452,o),
(65,426,o),
(65,409,cs),
(65,394,o),
(80,365,o),
(98,365,cs),
(142,365,l),
(141,97,ls),
(141,89,o),
(137,83,o),
(128,80,cs),
(119,77,o),
(105,74,o),
(86,73,cs),
(59,70,o),
(44,62,o),
(44,31,cs),
(44,10,o),
(56,0,o),
(81,0,cs)
);
},
{
closed = 1;
nodes = (
(255,82,o),
(234,84,o),
(234,92,cs),
(234,365,l),
(294,366,l),
(339,366,ls),
(367,366,o),
(375,398,o),
(375,412,cs),
(375,429,o),
(362,453,o),
(347,453,cs),
(297,452,l),
(234,450,l),
(234,734,l),
(265,737,l),
(296,738,ls),
(502,738,o),
(589,601,o),
(589,439,cs),
(589,235,o),
(502,82,o),
(296,82,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
6 10 5 3 4 4 0 83 0 0 0 12 67 8 1 2 2 3 83 7 1 3 3 15 67 0 9 9 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
7 1 3 8 1 2 9 3 2 91 6 10 5 3 4 4 0 83 0 0 0 12 67 0 9 9 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
7 1 3 8 1 2 9 3 2 91 6 10 5 3 4 4 0 83 0 0 0 14 67 0 9 9 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
53 52 77 74 70 66 60 56 55 54 52 85 53 85 39 70 44 56 82 11 20
CALL[ ]	/* CallFunction */";
};
width = 718;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(271,0,ls),
(534,0,o),
(664,200,o),
(664,439,cs),
(664,580,o),
(611,676,o),
(536,736,cs),
(461,796,o),
(365,821,o),
(281,821,cs),
(200,821,o),
(132,821,o),
(65,818,cs),
(50,817,o),
(44,805,o),
(44,794,cs),
(44,781,o),
(51,769,o),
(67,769,cs),
(105,769,o),
(135,766,o),
(135,727,cs),
(135,670,o),
(142,498,o),
(142,442,c),
(77,443,ls),
(58,443,o),
(51,422,o),
(51,409,cs),
(51,397,o),
(62,374,o),
(77,374,cs),
(142,374,l),
(142,241,l),
(141,72,ls),
(141,48,o),
(96,48,o),
(72,48,cs),
(49,48,o),
(41,41,o),
(41,24,cs),
(41,7,o),
(54,0,o),
(77,0,cs)
);
},
{
closed = 1;
nodes = (
(234,64,o),
(213,66,o),
(213,74,cs),
(213,375,l),
(318,375,ls),
(339,375,o),
(347,400,o),
(347,412,cs),
(347,425,o),
(337,444,o),
(326,444,cs),
(271,443,l),
(213,441,l),
(213,752,l),
(244,755,l),
(275,756,ls),
(492,756,o),
(589,613,o),
(589,439,cs),
(589,223,o),
(493,64,o),
(275,64,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 5 2 6 6 5 96 0 4 8 3 8 4 96 7 10 2 6 6 2 84 0 2 2 12 67 0 1 1 0 83 9 1 0 0 15 67 0 8 8 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 5 2 6 6 5 96 0 4 8 3 8 4 96 9 1 0 0 1 8 0 1 91 7 10 2 6 6 2 84 0 2 2 12 67 0 8 8 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 5 2 6 6 5 96 0 4 8 3 8 4 96 9 1 0 0 1 8 0 1 91 7 10 2 6 6 2 84 0 2 2 14 67 0 8 8 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
74 73 1 0 83 80 76 75 73 91 74 91 68 66 49 46 42 39 31 27 14 7 0 26 1 18 11 15
CALL[ ]	/* CallFunction */";
};
width = 700;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(241,0,ls),
(504,0,o),
(634,200,o),
(634,439,cs),
(634,580,o),
(581,676,o),
(506,736,cs),
(431,796,o),
(335,821,o),
(251,821,cs),
(170,821,o),
(112,821,o),
(45,818,cs),
(31,817,o),
(24,813,o),
(24,805,cs),
(24,798,o),
(30,789,o),
(47,789,cs),
(103,789,o),
(135,787,o),
(135,747,cs),
(135,676,o),
(142,506,o),
(142,437,cs),
(142,426,l),
(87,427,l),
(47,428,ls),
(36,428,o),
(31,416,o),
(31,409,cs),
(31,402,o),
(38,389,o),
(47,389,cs),
(142,389,l),
(141,52,ls),
(141,28,o),
(87,28,o),
(52,28,cs),
(41,28,o),
(33,27,o),
(28,24,cs),
(23,21,o),
(21,17,o),
(21,12,cs),
(21,7,o),
(24,3,o),
(31,2,cs),
(37,1,o),
(46,0,o),
(57,0,cs)
);
},
{
closed = 1;
nodes = (
(204,34,o),
(183,36,o),
(183,44,cs),
(183,389,l),
(243,390,l),
(288,390,ls),
(303,390,o),
(307,405,o),
(307,412,cs),
(307,419,o),
(301,429,o),
(296,429,cs),
(246,428,l),
(183,426,l),
(183,782,l),
(214,785,l),
(245,786,ls),
(484,786,o),
(589,630,o),
(589,439,cs),
(589,209,o),
(485,34,o),
(245,34,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 7 5 4 5 7 96 0 2 10 1 10 2 96 12 6 2 5 5 0 83 11 1 0 0 12 67 9 1 3 3 4 83 8 1 4 4 15 67 0 10 10 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 7 5 4 5 7 96 0 2 10 1 10 2 96 8 1 4 9 1 3 10 4 3 91 12 6 2 5 5 0 83 11 1 0 0 12 67 0 10 10 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 7 5 4 5 7 96 0 2 10 1 10 2 96 8 1 4 9 1 3 10 4 3 91 12 6 2 5 5 0 83 11 1 0 0 14 67 0 10 10 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
57 56 4 0 79 76 72 68 64 60 59 58 56 87 57 87 52 49 40 36 32 30 22 19 15 12 0 55 4 55 13 15
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = Eth;
unicode = 208;
},
{
glyphname = E;
kernLeft = B;
kernRight = AE;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(589,318,o),
(565.333,310.333,o),
(564,281,cs),
(559.317,201.39,o),
(555.143,183.141,o),
(551,121,cs),
(548.388,87.044,o),
(529.049,84,o),
(508,84,cs),
(230,84,l),
(230,377,l),
(279.731,377,o),
(266.898,379,o),
(318,379,cs),
(331.333,379,o),
(342.333,378.833,o),
(351,378.5,cs),
(359.667,378.167,o),
(366.667,378,o),
(372,378,cs),
(407.168,378,o),
(420,337.774,o),
(420,310,cs),
(420,292.667,o),
(426.333,275,o),
(461,275,cs),
(489,275,o),
(503,286,o),
(503,308,cs),
(503,323.333,o),
(502.667,341,o),
(502,361,cs),
(501.333,381,o),
(501,400.667,o),
(501,420,cs),
(501,439.333,o),
(501.333,457.833,o),
(502,475.5,cs),
(502.667,493.167,o),
(503,511.667,o),
(503,531,cs),
(503,563,o),
(482.667,570,o),
(460,570,cs),
(432,570,o),
(418,553,o),
(418,533,cs),
(418,512.353,o),
(416.681,464,o),
(401,464,cs),
(402.208,464,o),
(355.001,461,o),
(318,461,cs),
(283.754,461,o),
(264.584,461.53,o),
(230,464,c),
(230,737,l),
(482,737,ls),
(504.667,737,o),
(519,733,o),
(519,709,cs),
(519,637,ls),
(519,618.333,o),
(531.333,597,o),
(566,597,cs),
(595.333,597,o),
(607,607,o),
(607,643,cs),
(607,785,ls),
(607,813,o),
(597.667,821,o),
(579,821,cs),
(499.449,821,o),
(415.039,819,o),
(352,819,cs),
(296.166,819,o),
(199.784,821,o),
(94,821,cs),
(51.333,821,o),
(37,815.667,o),
(37,781,cs),
(37,758.333,o),
(59.667,747,o),
(93,747,cs),
(121,747,o),
(132,746.667,o),
(132,708,cs),
(132,605.687,o),
(138,543.101,o),
(138,425,cs),
(138,348.925,o),
(137,287.269,o),
(137,246.5,cs),
(137,204.532,o),
(136,158.173,o),
(136,109,cs),
(136,86.333,o),
(127.667,75.667,o),
(89,73,cs),
(61,71.667,o),
(38,62.333,o),
(38,33,cs),
(38,10.333,o),
(51.333,0,o),
(86,0,cs),
(163.885,0,o),
(257.939,2,o),
(356,2,cs),
(396.667,2,o),
(436.167,1.667,o),
(474.5,1,cs),
(512.833,0.333,o),
(552.333,0,o),
(593,0,cs),
(626.333,0,o),
(632.333,5,o),
(635,33,cs),
(648.126,164.265,o),
(651,274.421,o),
(651,285,cs),
(651,307.667,o),
(631.667,318,o),
(613,318,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
75 1 7 8 127 1 2 9 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
75 1 7 8 127 1 11 9 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 5 3 8 3 5 8 104 12 1 0 10 9 10 0 9 104 0 8 0 9 2 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 10 10 7 83 0 7 7 23 67 11 1 2 2 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 5 3 8 3 5 8 104 12 1 0 10 9 10 0 9 104 0 7 0 10 0 7 10 91 0 8 0 9 2 8 9 91 6 1 3 3 4 83 0 4 4 12 67 11 1 2 2 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 5 3 8 3 5 8 104 12 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 12 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 68 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 12 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 14 67 0 11 11 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 123 121 120 111 105 103 94 92 86 76 74 72 67 65 60 48 44 42 26 24 20 10 0 134 1 134 13 15
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(584.667,315,o),
(567.333,306,o),
(566,278,cs),
(560.867,185.6,o),
(555.166,128.988,o),
(553,103,cs),
(550.388,69.044,o),
(531.049,66,o),
(510,66,cs),
(211,66,l),
(211,386,l),
(249.667,387.333,o),
(271.333,388,o),
(310,388,cs),
(325.333,388,o),
(338,387.833,o),
(348,387.5,cs),
(358,387.167,o),
(366.667,387,o),
(374,387,cs),
(413.224,387,o),
(422,334.438,o),
(422,306,cs),
(422,288.667,o),
(427.667,277,o),
(453,277,cs),
(470.333,277,o),
(484,281.333,o),
(484,304,cs),
(484,322.667,o),
(483.667,341.833,o),
(483,361.5,cs),
(482.333,381.167,o),
(482,400.667,o),
(482,420,cs),
(482,439.333,o),
(482.333,458.5,o),
(483,477.5,cs),
(483.667,496.5,o),
(484,515.667,o),
(484,535,cs),
(484,557.667,o),
(470.667,566,o),
(452,566,cs),
(428,566,o),
(420,546.667,o),
(420,532,cs),
(420,510.355,o),
(418.839,455,o),
(403,455,cs),
(404.428,455,o),
(353.48,452,o),
(310,452,cs),
(290.667,452,o),
(274,452.333,o),
(260,453,cs),
(246,453.667,o),
(229.667,454.333,o),
(211,455,c),
(211,755,l),
(484,755,ls),
(498.861,755,o),
(521,754.133,o),
(521,727,cs),
(521,640,ls),
(521,621.333,o),
(527.667,600,o),
(557,600,cs),
(579.667,600,o),
(588,614,o),
(588,646,cs),
(588,785,ls),
(588,813,o),
(578.667,821,o),
(560,821,cs),
(480.449,821,o),
(396.039,819,o),
(333,819,cs),
(278.904,819,o),
(184.97,821,o),
(82,821,cs),
(62,821,o),
(41,818,o),
(41,794,cs),
(41,776.667,o),
(58.333,769,o),
(81,769,cs),
(95.58,769,o),
(134,769.432,o),
(134,730,cs),
(134,618.008,o),
(140,561.059,o),
(140,425,cs),
(140,344.921,o),
(139,278.739,o),
(139,233,cs),
(139,185.69,o),
(138,135.649,o),
(138,84,cs),
(138,56,o),
(115.667,48,o),
(77,48,cs),
(50.333,48,o),
(38,42.333,o),
(38,21,cs),
(38,2.333,o),
(61.333,0,o),
(84,0,cs),
(124.667,0,o),
(166.833,0.333,o),
(210.5,1,cs),
(254.167,1.667,o),
(296.333,2,o),
(337,2,cs),
(377.667,2,o),
(417.167,1.667,o),
(455.5,1,cs),
(493.833,0.333,o),
(533.333,0,o),
(574,0,cs),
(600.667,0,o),
(613.333,-0.333,o),
(616,33,cs),
(626.877,141.766,o),
(632,292.348,o),
(632,282,cs),
(632,302,o),
(620.667,315,o),
(602,315,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 12 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 10 10 7 83 0 7 7 15 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 12 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 68 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 12 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 14 67 0 11 11 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 122 120 119 112 106 104 94 92 86 77 76 74 67 65 60 48 44 41 24 22 18 10 0 133 1 133 13 15
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(148.333,1.333,o),
(228.667,2,o),
(310,2,cs),
(350.667,2,o),
(390.167,1.667,o),
(428.5,1,cs),
(466.833,0.333,o),
(506.333,0,o),
(547,0,cs),
(573.667,0,o),
(586.333,-0.333,o),
(589,33,cs),
(599.644,139.44,o),
(605,285.132,o),
(605,277,cs),
(605,293,o),
(604.667,310,o),
(586,310,cs),
(582.667,310,o),
(579.167,307.167,o),
(575.5,301.5,cs),
(571.833,295.833,o),
(569.667,286.333,o),
(569,273,cs),
(563.922,166.353,o),
(558.061,99.79,o),
(556,73,cs),
(553.388,39.044,o),
(534.049,36,o),
(513,36,cs),
(184,36,l),
(184,401,l),
(222.667,402.333,o),
(259.333,403,o),
(298,403,cs),
(317.333,403,o),
(333,402.833,o),
(345,402.5,cs),
(357,402.167,o),
(367.667,402,o),
(377,402,cs),
(416.501,402,o),
(425,345.97,o),
(425,309,cs),
(425,291.667,o),
(432.667,280,o),
(442,280,cs),
(444.667,280,o),
(447.833,281.667,o),
(451.5,285,cs),
(455.167,288.333,o),
(457,295.667,o),
(457,307,cs),
(457,325.667,o),
(456.667,344.333,o),
(456,363,cs),
(455.333,381.667,o),
(455,400.667,o),
(455,420,cs),
(455,439.333,o),
(455.333,458.167,o),
(456,476.5,cs),
(456.667,494.833,o),
(457,513.667,o),
(457,533,cs),
(457,547.667,o),
(456,560,o),
(440,560,cs),
(426.277,560,o),
(423,541.121,o),
(423,530,cs),
(423,471.034,o),
(417.262,440,o),
(406,440,cs),
(407.48,440,o),
(346.73,437,o),
(298,437,cs),
(278.667,437,o),
(259.667,437.333,o),
(241,438,cs),
(222.333,438.667,o),
(203.333,439.333,o),
(184,440,c),
(184,785,l),
(487,785,ls),
(500.333,785,o),
(524,782.333,o),
(524,757,cs),
(524,645,ls),
(524,626.333,o),
(524,605,o),
(544,605,cs),
(558.667,605,o),
(561,625.667,o),
(561,651,cs),
(561,785,ls),
(561,813,o),
(551.667,821,o),
(533,821,cs),
(453.449,821,o),
(369.039,819,o),
(306,819,cs),
(253.771,819,o),
(163.591,821,o),
(65,821,cs),
(45,821,o),
(24,818.667,o),
(24,804,cs),
(24,789.333,o),
(41.333,789,o),
(64,789,cs),
(92.603,789,o),
(137,788.308,o),
(137,750,cs),
(137,632.98,o),
(143,567.873,o),
(143,425,cs),
(143,339.646,o),
(142,269.59,o),
(142,222,cs),
(142,173.136,o),
(141,119.911,o),
(141,64,cs),
(141,50,o),
(135.333,40.5,o),
(124,35.5,cs),
(112.667,30.5,o),
(91.333,28,o),
(60,28,cs),
(46.667,28,o),
(36.833,27,o),
(30.5,25,cs),
(24.167,23,o),
(21,18.333,o),
(21,11,cs),
(21,0.333,o),
(47,0,o),
(67,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 5 3 8 3 5 8 104 12 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 10 10 7 83 0 7 7 15 67 0 11 11 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 5 3 8 3 5 8 104 12 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 11 11 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 5 3 8 3 5 8 104 12 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 14 67 0 11 11 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 122 120 119 112 106 104 94 92 84 75 74 72 67 65 60 48 44 41 24 22 18 10 0 133 1 133 13 15
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = E;
unicode = 69;
},
{
glyphname = Eacute;
kernLeft = B;
kernRight = AE;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(462,953.333,o),
(447.667,972,o),
(421,972,cs),
(383.323,972,o),
(307,899.498,o),
(307,872,cs),
(307,856,o),
(322,841,o),
(342,841,cs),
(375.436,841,o),
(462,896.665,o),
(462,936,cs)
);
},
{
closed = 1;
nodes = (
(589,318,o),
(565.333,310.333,o),
(564,281,cs),
(559.317,201.39,o),
(555.143,183.141,o),
(551,121,cs),
(548.388,87.044,o),
(529.049,84,o),
(508,84,cs),
(230,84,l),
(230,377,l),
(279.731,377,o),
(266.898,379,o),
(318,379,cs),
(331.333,379,o),
(342.333,378.833,o),
(351,378.5,cs),
(359.667,378.167,o),
(366.667,378,o),
(372,378,cs),
(407.168,378,o),
(420,337.774,o),
(420,310,cs),
(420,292.667,o),
(426.333,275,o),
(461,275,cs),
(489,275,o),
(503,286,o),
(503,308,cs),
(503,323.333,o),
(502.667,341,o),
(502,361,cs),
(501.333,381,o),
(501,400.667,o),
(501,420,cs),
(501,439.333,o),
(501.333,457.833,o),
(502,475.5,cs),
(502.667,493.167,o),
(503,511.667,o),
(503,531,cs),
(503,563,o),
(482.667,570,o),
(460,570,cs),
(432,570,o),
(418,553,o),
(418,533,cs),
(418,512.353,o),
(416.681,464,o),
(401,464,cs),
(402.208,464,o),
(355.001,461,o),
(318,461,cs),
(283.754,461,o),
(264.584,461.53,o),
(230,464,c),
(230,737,l),
(482,737,ls),
(504.667,737,o),
(519,733,o),
(519,709,cs),
(519,637,ls),
(519,618.333,o),
(531.333,597,o),
(566,597,cs),
(595.333,597,o),
(607,607,o),
(607,643,cs),
(607,785,ls),
(607,813,o),
(597.667,821,o),
(579,821,cs),
(499.449,821,o),
(415.039,819,o),
(352,819,cs),
(296.166,819,o),
(199.784,821,o),
(94,821,cs),
(51.333,821,o),
(37,815.667,o),
(37,781,cs),
(37,758.333,o),
(59.667,747,o),
(93,747,cs),
(121,747,o),
(132,746.667,o),
(132,708,cs),
(132,605.687,o),
(138,543.101,o),
(138,425,cs),
(138,348.925,o),
(137,287.269,o),
(137,246.5,cs),
(137,204.532,o),
(136,158.173,o),
(136,109,cs),
(136,86.333,o),
(127.667,75.667,o),
(89,73,cs),
(61,71.667,o),
(38,62.333,o),
(38,33,cs),
(38,10.333,o),
(51.333,0,o),
(86,0,cs),
(163.885,0,o),
(257.939,2,o),
(356,2,cs),
(396.667,2,o),
(436.167,1.667,o),
(474.5,1,cs),
(512.833,0.333,o),
(552.333,0,o),
(593,0,cs),
(626.333,0,o),
(632.333,5,o),
(635,33,cs),
(648.126,164.265,o),
(651,274.421,o),
(651,285,cs),
(651,307.667,o),
(631.667,318,o),
(613,318,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
91 1 9 10 143 1 4 11 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
91 1 9 10 143 1 13 11 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 1 0 1 106 0 0 6 0 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 10 0 11 4 10 11 91 8 1 5 5 6 83 0 6 6 12 67 0 12 12 9 83 0 9 9 23 67 13 1 4 4 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 1 0 1 106 0 0 6 0 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 9 0 12 2 9 12 91 0 10 0 11 4 10 11 91 8 1 5 5 6 83 0 6 6 12 67 13 1 4 4 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 1 0 1 106 0 0 6 0 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 8 1 5 5 6 83 0 6 6 12 67 0 13 13 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 6 8 8 5 96 0 7 8 10 8 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 0 8 8 6 84 0 6 6 12 67 0 13 13 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 6 8 8 5 96 0 7 8 10 8 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 0 8 8 6 84 0 6 6 14 67 0 13 13 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
17 16 139 137 136 127 121 119 110 108 102 92 90 88 83 81 76 64 60 58 42 40 36 26 16 150 17 150 38 36 15 17
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(429,959.667,o),
(417,972,o),
(397,972,cs),
(367.753,972,o),
(291,903.873,o),
(291,877,cs),
(291,863.667,o),
(300.333,854,o),
(315,854,cs),
(341.12,854,o),
(429,908.21,o),
(429,941,cs)
);
},
{
closed = 1;
nodes = (
(584.667,315,o),
(567.333,306,o),
(566,278,cs),
(560.867,185.6,o),
(555.166,128.988,o),
(553,103,cs),
(550.388,69.044,o),
(531.049,66,o),
(510,66,cs),
(211,66,l),
(211,386,l),
(249.667,387.333,o),
(271.333,388,o),
(310,388,cs),
(325.333,388,o),
(338,387.833,o),
(348,387.5,cs),
(358,387.167,o),
(366.667,387,o),
(374,387,cs),
(413.224,387,o),
(422,334.438,o),
(422,306,cs),
(422,288.667,o),
(427.667,277,o),
(453,277,cs),
(470.333,277,o),
(484,281.333,o),
(484,304,cs),
(484,322.667,o),
(483.667,341.833,o),
(483,361.5,cs),
(482.333,381.167,o),
(482,400.667,o),
(482,420,cs),
(482,439.333,o),
(482.333,458.5,o),
(483,477.5,cs),
(483.667,496.5,o),
(484,515.667,o),
(484,535,cs),
(484,557.667,o),
(470.667,566,o),
(452,566,cs),
(428,566,o),
(420,546.667,o),
(420,532,cs),
(420,510.355,o),
(418.839,455,o),
(403,455,cs),
(404.428,455,o),
(353.48,452,o),
(310,452,cs),
(290.667,452,o),
(274,452.333,o),
(260,453,cs),
(246,453.667,o),
(229.667,454.333,o),
(211,455,c),
(211,755,l),
(484,755,ls),
(498.861,755,o),
(521,754.133,o),
(521,727,cs),
(521,640,ls),
(521,621.333,o),
(527.667,600,o),
(557,600,cs),
(579.667,600,o),
(588,614,o),
(588,646,cs),
(588,785,ls),
(588,813,o),
(578.667,821,o),
(560,821,cs),
(480.449,821,o),
(396.039,819,o),
(333,819,cs),
(278.904,819,o),
(184.97,821,o),
(82,821,cs),
(62,821,o),
(41,818,o),
(41,794,cs),
(41,776.667,o),
(58.333,769,o),
(81,769,cs),
(95.58,769,o),
(134,769.432,o),
(134,730,cs),
(134,618.008,o),
(140,561.059,o),
(140,425,cs),
(140,344.921,o),
(139,278.739,o),
(139,233,cs),
(139,185.69,o),
(138,135.649,o),
(138,84,cs),
(138,56,o),
(115.667,48,o),
(77,48,cs),
(50.333,48,o),
(38,42.333,o),
(38,21,cs),
(38,2.333,o),
(61.333,0,o),
(84,0,cs),
(124.667,0,o),
(166.833,0.333,o),
(210.5,1,cs),
(254.167,1.667,o),
(296.333,2,o),
(337,2,cs),
(377.667,2,o),
(417.167,1.667,o),
(455.5,1,cs),
(493.833,0.333,o),
(533.333,0,o),
(574,0,cs),
(600.667,0,o),
(613.333,-0.333,o),
(616,33,cs),
(626.877,141.766,o),
(632,292.348,o),
(632,282,cs),
(632,302,o),
(620.667,315,o),
(602,315,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 6 8 8 5 96 0 7 8 10 8 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 10 0 11 13 10 11 91 0 8 8 6 84 0 6 6 12 67 0 12 12 9 83 0 9 9 15 67 0 13 13 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 6 8 8 5 96 0 7 8 10 8 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 0 8 8 6 84 0 6 6 12 67 0 13 13 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 6 8 8 5 96 0 7 8 10 8 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 0 8 8 6 84 0 6 6 14 67 0 13 13 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
17 16 138 136 135 128 122 120 110 108 102 93 92 90 83 81 76 64 60 57 40 38 34 26 16 149 17 149 38 36 15 17
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(148.333,1.333,o),
(228.667,2,o),
(310,2,cs),
(350.667,2,o),
(390.167,1.667,o),
(428.5,1,cs),
(466.833,0.333,o),
(506.333,0,o),
(547,0,cs),
(573.667,0,o),
(586.333,-0.333,o),
(589,33,cs),
(599.644,139.44,o),
(605,285.132,o),
(605,277,cs),
(605,293,o),
(604.667,310,o),
(586,310,cs),
(582.667,310,o),
(579.167,307.167,o),
(575.5,301.5,cs),
(571.833,295.833,o),
(569.667,286.333,o),
(569,273,cs),
(563.922,166.353,o),
(558.061,99.79,o),
(556,73,cs),
(553.388,39.044,o),
(534.049,36,o),
(513,36,cs),
(184,36,l),
(184,401,l),
(222.667,402.333,o),
(259.333,403,o),
(298,403,cs),
(317.333,403,o),
(333,402.833,o),
(345,402.5,cs),
(357,402.167,o),
(367.667,402,o),
(377,402,cs),
(416.501,402,o),
(425,345.97,o),
(425,309,cs),
(425,291.667,o),
(432.667,280,o),
(442,280,cs),
(444.667,280,o),
(447.833,281.667,o),
(451.5,285,cs),
(455.167,288.333,o),
(457,295.667,o),
(457,307,cs),
(457,325.667,o),
(456.667,344.333,o),
(456,363,cs),
(455.333,381.667,o),
(455,400.667,o),
(455,420,cs),
(455,439.333,o),
(455.333,458.167,o),
(456,476.5,cs),
(456.667,494.833,o),
(457,513.667,o),
(457,533,cs),
(457,547.667,o),
(456,560,o),
(440,560,cs),
(426.277,560,o),
(423,541.121,o),
(423,530,cs),
(423,471.034,o),
(417.262,440,o),
(406,440,cs),
(407.48,440,o),
(346.73,437,o),
(298,437,cs),
(278.667,437,o),
(259.667,437.333,o),
(241,438,cs),
(222.333,438.667,o),
(203.333,439.333,o),
(184,440,c),
(184,785,l),
(487,785,ls),
(500.333,785,o),
(524,782.333,o),
(524,757,cs),
(524,645,ls),
(524,626.333,o),
(524,605,o),
(544,605,cs),
(558.667,605,o),
(561,625.667,o),
(561,651,cs),
(561,785,ls),
(561,813,o),
(551.667,821,o),
(533,821,cs),
(453.449,821,o),
(369.039,819,o),
(306,819,cs),
(253.771,819,o),
(163.591,821,o),
(65,821,cs),
(45,821,o),
(24,818.667,o),
(24,804,cs),
(24,789.333,o),
(41.333,789,o),
(64,789,cs),
(92.603,789,o),
(137,788.308,o),
(137,750,cs),
(137,632.98,o),
(143,567.873,o),
(143,425,cs),
(143,339.646,o),
(142,269.59,o),
(142,222,cs),
(142,173.136,o),
(141,119.911,o),
(141,64,cs),
(141,50,o),
(135.333,40.5,o),
(124,35.5,cs),
(112.667,30.5,o),
(91.333,28,o),
(60,28,cs),
(46.667,28,o),
(36.833,27,o),
(30.5,25,cs),
(24.167,23,o),
(21,18.333,o),
(21,11,cs),
(21,0.333,o),
(47,0,o),
(67,0,cs)
);
},
{
closed = 1;
nodes = (
(292.311,875,o),
(382,928.367,o),
(382,950,cs),
(382,968.667,o),
(373.667,972,o),
(363,972,cs),
(343.012,972,o),
(268,910.697,o),
(268,886,cs),
(268,878.667,o),
(270.667,875,o),
(276,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 1 0 1 106 0 0 6 0 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 10 0 11 13 10 11 91 8 1 5 5 6 83 0 6 6 12 67 0 12 12 9 83 0 9 9 15 67 0 13 13 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 1 0 1 106 0 0 6 0 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 8 1 5 5 6 83 0 6 6 12 67 0 13 13 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 72 values pushed */
0 1 0 1 106 0 0 6 0 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 8 1 5 5 6 83 0 6 6 14 67 0 13 13 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
16 15 137 135 134 127 121 119 109 107 99 90 89 87 82 80 75 63 59 56 39 37 33 25 15 148 16 148 37 36 15 17
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = Eacute;
unicode = 201;
},
{
glyphname = Ebreve;
kernLeft = B;
kernRight = AE;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(589,318,o),
(565.333,310.333,o),
(564,281,cs),
(559.317,201.39,o),
(555.143,183.141,o),
(551,121,cs),
(548.388,87.044,o),
(529.049,84,o),
(508,84,cs),
(230,84,l),
(230,377,l),
(279.731,377,o),
(266.898,379,o),
(318,379,cs),
(331.333,379,o),
(342.333,378.833,o),
(351,378.5,cs),
(359.667,378.167,o),
(366.667,378,o),
(372,378,cs),
(407.168,378,o),
(420,337.774,o),
(420,310,cs),
(420,292.667,o),
(426.333,275,o),
(461,275,cs),
(489,275,o),
(503,286,o),
(503,308,cs),
(503,323.333,o),
(502.667,341,o),
(502,361,cs),
(501.333,381,o),
(501,400.667,o),
(501,420,cs),
(501,439.333,o),
(501.333,457.833,o),
(502,475.5,cs),
(502.667,493.167,o),
(503,511.667,o),
(503,531,cs),
(503,563,o),
(482.667,570,o),
(460,570,cs),
(432,570,o),
(418,553,o),
(418,533,cs),
(418,512.353,o),
(416.681,464,o),
(401,464,cs),
(402.208,464,o),
(355.001,461,o),
(318,461,cs),
(283.754,461,o),
(264.584,461.53,o),
(230,464,c),
(230,737,l),
(482,737,ls),
(504.667,737,o),
(519,733,o),
(519,709,cs),
(519,637,ls),
(519,618.333,o),
(531.333,597,o),
(566,597,cs),
(595.333,597,o),
(607,607,o),
(607,643,cs),
(607,785,ls),
(607,813,o),
(597.667,821,o),
(579,821,cs),
(499.449,821,o),
(415.039,819,o),
(352,819,cs),
(296.166,819,o),
(199.784,821,o),
(94,821,cs),
(51.333,821,o),
(37,815.667,o),
(37,781,cs),
(37,758.333,o),
(59.667,747,o),
(93,747,cs),
(121,747,o),
(132,746.667,o),
(132,708,cs),
(132,605.687,o),
(138,543.101,o),
(138,425,cs),
(138,348.925,o),
(137,287.269,o),
(137,246.5,cs),
(137,204.532,o),
(136,158.173,o),
(136,109,cs),
(136,86.333,o),
(127.667,75.667,o),
(89,73,cs),
(61,71.667,o),
(38,62.333,o),
(38,33,cs),
(38,10.333,o),
(51.333,0,o),
(86,0,cs),
(163.885,0,o),
(257.939,2,o),
(356,2,cs),
(396.667,2,o),
(436.167,1.667,o),
(474.5,1,cs),
(512.833,0.333,o),
(552.333,0,o),
(593,0,cs),
(626.333,0,o),
(632.333,5,o),
(635,33,cs),
(648.126,164.265,o),
(651,274.421,o),
(651,285,cs),
(651,307.667,o),
(631.667,318,o),
(613,318,cs)
);
},
{
closed = 1;
nodes = (
(500,967.667,o),
(482,971,o),
(462,971,cs),
(444.667,971,o),
(430,956.667,o),
(430,942,cs),
(430,936.667,o),
(425.5,931.5,o),
(416.5,926.5,cs),
(407.5,921.5,o),
(393.333,919,o),
(374,919,cs),
(343.535,919,o),
(315,926.638,o),
(315,942,cs),
(315,964.667,o),
(301.667,971,o),
(279,971,cs),
(256.333,971,o),
(247,958.333,o),
(247,941,cs),
(247,898.333,o),
(292.333,862,o),
(379,862,cs),
(430.962,862,o),
(500,888.821,o),
(500,941,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
75 1 7 8 127 1 2 9 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
75 1 7 8 127 1 11 9 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
15 1 13 14 13 106 0 5 3 8 3 5 8 104 16 1 0 10 9 10 0 9 104 0 14 0 12 4 14 12 91 0 8 0 9 2 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 10 10 7 83 0 7 7 23 67 11 1 2 2 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
15 1 13 14 13 106 0 5 3 8 3 5 8 104 16 1 0 10 9 10 0 9 104 0 14 0 12 4 14 12 91 0 7 0 10 0 7 10 91 0 8 0 9 2 8 9 91 6 1 3 3 4 83 0 4 4 12 67 11 1 2 2 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
15 1 13 14 13 106 0 5 3 8 3 5 8 104 16 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 14 0 12 4 14 12 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
15 1 13 14 13 106 0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 16 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 14 0 12 4 14 12 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 82 values pushed */
15 1 13 14 13 106 0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 16 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 14 0 12 4 14 12 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 14 67 0 11 11 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
1 0 161 159 155 153 147 145 141 139 123 121 120 111 105 103 94 92 86 76 74 72 67 65 60 48 44 42 26 24 20 10 0 134 1 134 17 15
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(584.667,315,o),
(567.333,306,o),
(566,278,cs),
(560.867,185.6,o),
(555.166,128.988,o),
(553,103,cs),
(550.388,69.044,o),
(531.049,66,o),
(510,66,cs),
(211,66,l),
(211,386,l),
(249.667,387.333,o),
(271.333,388,o),
(310,388,cs),
(325.333,388,o),
(338,387.833,o),
(348,387.5,cs),
(358,387.167,o),
(366.667,387,o),
(374,387,cs),
(413.224,387,o),
(422,334.438,o),
(422,306,cs),
(422,288.667,o),
(427.667,277,o),
(453,277,cs),
(470.333,277,o),
(484,281.333,o),
(484,304,cs),
(484,322.667,o),
(483.667,341.833,o),
(483,361.5,cs),
(482.333,381.167,o),
(482,400.667,o),
(482,420,cs),
(482,439.333,o),
(482.333,458.5,o),
(483,477.5,cs),
(483.667,496.5,o),
(484,515.667,o),
(484,535,cs),
(484,557.667,o),
(470.667,566,o),
(452,566,cs),
(428,566,o),
(420,546.667,o),
(420,532,cs),
(420,510.355,o),
(418.839,455,o),
(403,455,cs),
(404.428,455,o),
(353.48,452,o),
(310,452,cs),
(290.667,452,o),
(274,452.333,o),
(260,453,cs),
(246,453.667,o),
(229.667,454.333,o),
(211,455,c),
(211,755,l),
(484,755,ls),
(498.861,755,o),
(521,754.133,o),
(521,727,cs),
(521,640,ls),
(521,621.333,o),
(527.667,600,o),
(557,600,cs),
(579.667,600,o),
(588,614,o),
(588,646,cs),
(588,785,ls),
(588,813,o),
(578.667,821,o),
(560,821,cs),
(480.449,821,o),
(396.039,819,o),
(333,819,cs),
(278.904,819,o),
(184.97,821,o),
(82,821,cs),
(62,821,o),
(41,818,o),
(41,794,cs),
(41,776.667,o),
(58.333,769,o),
(81,769,cs),
(95.58,769,o),
(134,769.432,o),
(134,730,cs),
(134,618.008,o),
(140,561.059,o),
(140,425,cs),
(140,344.921,o),
(139,278.739,o),
(139,233,cs),
(139,185.69,o),
(138,135.649,o),
(138,84,cs),
(138,56,o),
(115.667,48,o),
(77,48,cs),
(50.333,48,o),
(38,42.333,o),
(38,21,cs),
(38,2.333,o),
(61.333,0,o),
(84,0,cs),
(124.667,0,o),
(166.833,0.333,o),
(210.5,1,cs),
(254.167,1.667,o),
(296.333,2,o),
(337,2,cs),
(377.667,2,o),
(417.167,1.667,o),
(455.5,1,cs),
(493.833,0.333,o),
(533.333,0,o),
(574,0,cs),
(600.667,0,o),
(613.333,-0.333,o),
(616,33,cs),
(626.877,141.766,o),
(632,292.348,o),
(632,282,cs),
(632,302,o),
(620.667,315,o),
(602,315,cs)
);
},
{
closed = 1;
nodes = (
(475,971,o),
(458,972,o),
(445,972,cs),
(430,972,o),
(419,960,o),
(419,945,cs),
(419,928,o),
(394,910,o),
(355,910,cs),
(325,910,o),
(290,919,o),
(290,945,cs),
(290,965,o),
(281,972,o),
(262,972,cs),
(245,972,o),
(236,963,o),
(236,944,cs),
(236,903,o),
(282,865,o),
(358,865,cs),
(409,865,o),
(475,892,o),
(475,944,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 84 values pushed */
15 1 13 14 13 106 0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 16 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 14 0 12 4 14 12 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 10 10 7 83 0 7 7 15 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
15 1 13 14 13 106 0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 16 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 14 0 12 4 14 12 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 82 values pushed */
15 1 13 14 13 106 0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 16 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 14 0 12 4 14 12 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 14 67 0 11 11 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
2 1 160 158 154 152 146 144 141 139 123 121 120 113 107 105 95 93 87 78 77 75 68 66 61 49 45 42 25 23 19 11 1 134 2 134 17 26
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(148.333,1.333,o),
(228.667,2,o),
(310,2,cs),
(350.667,2,o),
(390.167,1.667,o),
(428.5,1,cs),
(466.833,0.333,o),
(506.333,0,o),
(547,0,cs),
(573.667,0,o),
(586.333,-0.333,o),
(589,33,cs),
(599.644,139.44,o),
(605,285.132,o),
(605,277,cs),
(605,293,o),
(604.667,310,o),
(586,310,cs),
(582.667,310,o),
(579.167,307.167,o),
(575.5,301.5,cs),
(571.833,295.833,o),
(569.667,286.333,o),
(569,273,cs),
(563.922,166.353,o),
(558.061,99.79,o),
(556,73,cs),
(553.388,39.044,o),
(534.049,36,o),
(513,36,cs),
(184,36,l),
(184,401,l),
(222.667,402.333,o),
(259.333,403,o),
(298,403,cs),
(317.333,403,o),
(333,402.833,o),
(345,402.5,cs),
(357,402.167,o),
(367.667,402,o),
(377,402,cs),
(416.501,402,o),
(425,345.97,o),
(425,309,cs),
(425,291.667,o),
(432.667,280,o),
(442,280,cs),
(444.667,280,o),
(447.833,281.667,o),
(451.5,285,cs),
(455.167,288.333,o),
(457,295.667,o),
(457,307,cs),
(457,325.667,o),
(456.667,344.333,o),
(456,363,cs),
(455.333,381.667,o),
(455,400.667,o),
(455,420,cs),
(455,439.333,o),
(455.333,458.167,o),
(456,476.5,cs),
(456.667,494.833,o),
(457,513.667,o),
(457,533,cs),
(457,547.667,o),
(456,560,o),
(440,560,cs),
(426.277,560,o),
(423,541.121,o),
(423,530,cs),
(423,471.034,o),
(417.262,440,o),
(406,440,cs),
(407.48,440,o),
(346.73,437,o),
(298,437,cs),
(278.667,437,o),
(259.667,437.333,o),
(241,438,cs),
(222.333,438.667,o),
(203.333,439.333,o),
(184,440,c),
(184,785,l),
(487,785,ls),
(500.333,785,o),
(524,782.333,o),
(524,757,cs),
(524,645,ls),
(524,626.333,o),
(524,605,o),
(544,605,cs),
(558.667,605,o),
(561,625.667,o),
(561,651,cs),
(561,785,ls),
(561,813,o),
(551.667,821,o),
(533,821,cs),
(453.449,821,o),
(369.039,819,o),
(306,819,cs),
(253.771,819,o),
(163.591,821,o),
(65,821,cs),
(45,821,o),
(24,818.667,o),
(24,804,cs),
(24,789.333,o),
(41.333,789,o),
(64,789,cs),
(92.603,789,o),
(137,788.308,o),
(137,750,cs),
(137,632.98,o),
(143,567.873,o),
(143,425,cs),
(143,339.646,o),
(142,269.59,o),
(142,222,cs),
(142,173.136,o),
(141,119.911,o),
(141,64,cs),
(141,50,o),
(135.333,40.5,o),
(124,35.5,cs),
(112.667,30.5,o),
(91.333,28,o),
(60,28,cs),
(46.667,28,o),
(36.833,27,o),
(30.5,25,cs),
(24.167,23,o),
(21,18.333,o),
(21,11,cs),
(21,0.333,o),
(47,0,o),
(67,0,cs)
);
},
{
closed = 1;
nodes = (
(381.017,875,o),
(439,899.402,o),
(439,948,cs),
(439,969.333,o),
(430.667,972,o),
(420,972,cs),
(408.667,972,o),
(403,964.333,o),
(403,949,cs),
(403,922.229,o),
(364.336,900,o),
(328,900,cs),
(285.691,900,o),
(254,909.669,o),
(254,949,cs),
(254,965,o),
(251.667,972,o),
(237,972,cs),
(225.667,972,o),
(220,964,o),
(220,948,cs),
(220,908,o),
(268,875,o),
(328,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
3 1 1 2 1 106 0 9 7 12 7 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 2 0 0 8 2 0 91 0 12 0 13 15 12 13 91 10 1 7 7 8 83 0 8 8 12 67 0 14 14 11 83 0 11 11 15 67 0 15 15 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
3 1 1 2 1 106 0 9 7 12 7 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 2 0 0 8 2 0 91 0 11 0 14 4 11 14 91 0 12 0 13 15 12 13 91 10 1 7 7 8 83 0 8 8 12 67 0 15 15 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 76 values pushed */
3 1 1 2 1 106 0 9 7 12 7 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 2 0 0 8 2 0 91 0 11 0 14 4 11 14 91 0 12 0 13 15 12 13 91 10 1 7 7 8 83 0 8 8 14 67 0 15 15 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
29 28 150 148 147 140 134 132 122 120 112 103 102 100 95 93 88 76 72 69 52 50 46 38 28 161 29 161 37 38 35 36 17 19
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = Ebreve;
unicode = 276;
},
{
glyphname = Ecaron;
kernLeft = B;
kernRight = AE;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(467.5,972,o),
(402.252,948.585,o),
(366,922,c),
(330.53,948.011,o),
(264.857,972,o),
(247,972,cs),
(239,972,o),
(234,964.667,o),
(234,958,cs),
(234,931.333,o),
(262.333,900.5,o),
(293,874.5,cs),
(320.066,851.553,o),
(354.906,830,o),
(366,830,cs),
(390.926,830,o),
(499,909.34,o),
(499,951,cs),
(499,960.333,o),
(496.667,972,o),
(486,972,cs)
);
},
{
closed = 1;
nodes = (
(589,318,o),
(565.333,310.333,o),
(564,281,cs),
(559.317,201.39,o),
(555.143,183.141,o),
(551,121,cs),
(548.388,87.044,o),
(529.049,84,o),
(508,84,cs),
(230,84,l),
(230,377,l),
(279.731,377,o),
(266.898,379,o),
(318,379,cs),
(331.333,379,o),
(342.333,378.833,o),
(351,378.5,cs),
(359.667,378.167,o),
(366.667,378,o),
(372,378,cs),
(407.168,378,o),
(420,337.774,o),
(420,310,cs),
(420,292.667,o),
(426.333,275,o),
(461,275,cs),
(489,275,o),
(503,286,o),
(503,308,cs),
(503,323.333,o),
(502.667,341,o),
(502,361,cs),
(501.333,381,o),
(501,400.667,o),
(501,420,cs),
(501,439.333,o),
(501.333,457.833,o),
(502,475.5,cs),
(502.667,493.167,o),
(503,511.667,o),
(503,531,cs),
(503,563,o),
(482.667,570,o),
(460,570,cs),
(432,570,o),
(418,553,o),
(418,533,cs),
(418,512.353,o),
(416.681,464,o),
(401,464,cs),
(402.208,464,o),
(355.001,461,o),
(318,461,cs),
(283.754,461,o),
(264.584,461.53,o),
(230,464,c),
(230,737,l),
(482,737,ls),
(504.667,737,o),
(519,733,o),
(519,709,cs),
(519,637,ls),
(519,618.333,o),
(531.333,597,o),
(566,597,cs),
(595.333,597,o),
(607,607,o),
(607,643,cs),
(607,785,ls),
(607,813,o),
(597.667,821,o),
(579,821,cs),
(499.449,821,o),
(415.039,819,o),
(352,819,cs),
(296.166,819,o),
(199.784,821,o),
(94,821,cs),
(51.333,821,o),
(37,815.667,o),
(37,781,cs),
(37,758.333,o),
(59.667,747,o),
(93,747,cs),
(121,747,o),
(132,746.667,o),
(132,708,cs),
(132,605.687,o),
(138,543.101,o),
(138,425,cs),
(138,348.925,o),
(137,287.269,o),
(137,246.5,cs),
(137,204.532,o),
(136,158.173,o),
(136,109,cs),
(136,86.333,o),
(127.667,75.667,o),
(89,73,cs),
(61,71.667,o),
(38,62.333,o),
(38,33,cs),
(38,10.333,o),
(51.333,0,o),
(86,0,cs),
(163.885,0,o),
(257.939,2,o),
(356,2,cs),
(396.667,2,o),
(436.167,1.667,o),
(474.5,1,cs),
(512.833,0.333,o),
(552.333,0,o),
(593,0,cs),
(626.333,0,o),
(632.333,5,o),
(635,33,cs),
(648.126,164.265,o),
(651,274.421,o),
(651,285,cs),
(651,307.667,o),
(631.667,318,o),
(613,318,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
21 1 1 0 101 1 10 11 153 1 5 12 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
21 1 1 0 101 1 10 11 153 1 14 12 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
2 15 2 0 1 0 106 0 1 7 1 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 11 0 12 5 11 12 91 9 1 6 6 7 83 0 7 7 12 67 0 13 13 10 83 0 10 10 23 67 14 1 5 5 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
2 15 2 0 1 0 106 0 1 7 1 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 10 0 13 3 10 13 91 0 11 0 12 5 11 12 91 9 1 6 6 7 83 0 7 7 12 67 14 1 5 5 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
2 15 2 0 1 0 106 0 1 7 1 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 9 1 6 6 7 83 0 7 7 12 67 0 14 14 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
2 15 2 0 1 0 106 0 1 7 1 106 0 6 7 9 9 6 96 0 8 9 11 9 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 0 9 9 7 84 0 7 7 12 67 0 14 14 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 80 values pushed */
2 15 2 0 1 0 106 0 1 7 1 106 0 6 7 9 9 6 96 0 8 9 11 9 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 0 9 9 7 84 0 7 7 14 67 0 14 14 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
27 26 1 0 149 147 146 137 131 129 120 118 112 102 100 98 93 91 86 74 70 68 52 50 46 36 26 160 27 160 17 15 9 7 0 25 1 25 17 15
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(459.663,972,o),
(411.994,958.643,o),
(348,921,c),
(308.008,944.525,o),
(246.679,972,o),
(229,972,cs),
(221.667,972,o),
(218,967.667,o),
(218,959,cs),
(218,917.54,o),
(326.04,847,o),
(348,847,cs),
(373.107,847,o),
(479,919.046,o),
(479,955,cs),
(479,964.333,o),
(476,972,o),
(468,972,cs)
);
},
{
closed = 1;
nodes = (
(584.667,315,o),
(567.333,306,o),
(566,278,cs),
(560.867,185.6,o),
(555.166,128.988,o),
(553,103,cs),
(550.388,69.044,o),
(531.049,66,o),
(510,66,cs),
(211,66,l),
(211,386,l),
(249.667,387.333,o),
(271.333,388,o),
(310,388,cs),
(325.333,388,o),
(338,387.833,o),
(348,387.5,cs),
(358,387.167,o),
(366.667,387,o),
(374,387,cs),
(413.224,387,o),
(422,334.438,o),
(422,306,cs),
(422,288.667,o),
(427.667,277,o),
(453,277,cs),
(470.333,277,o),
(484,281.333,o),
(484,304,cs),
(484,322.667,o),
(483.667,341.833,o),
(483,361.5,cs),
(482.333,381.167,o),
(482,400.667,o),
(482,420,cs),
(482,439.333,o),
(482.333,458.5,o),
(483,477.5,cs),
(483.667,496.5,o),
(484,515.667,o),
(484,535,cs),
(484,557.667,o),
(470.667,566,o),
(452,566,cs),
(428,566,o),
(420,546.667,o),
(420,532,cs),
(420,510.355,o),
(418.839,455,o),
(403,455,cs),
(404.428,455,o),
(353.48,452,o),
(310,452,cs),
(290.667,452,o),
(274,452.333,o),
(260,453,cs),
(246,453.667,o),
(229.667,454.333,o),
(211,455,c),
(211,755,l),
(484,755,ls),
(498.861,755,o),
(521,754.133,o),
(521,727,cs),
(521,640,ls),
(521,621.333,o),
(527.667,600,o),
(557,600,cs),
(579.667,600,o),
(588,614,o),
(588,646,cs),
(588,785,ls),
(588,813,o),
(578.667,821,o),
(560,821,cs),
(480.449,821,o),
(396.039,819,o),
(333,819,cs),
(278.904,819,o),
(184.97,821,o),
(82,821,cs),
(62,821,o),
(41,818,o),
(41,794,cs),
(41,776.667,o),
(58.333,769,o),
(81,769,cs),
(95.58,769,o),
(134,769.432,o),
(134,730,cs),
(134,618.008,o),
(140,561.059,o),
(140,425,cs),
(140,344.921,o),
(139,278.739,o),
(139,233,cs),
(139,185.69,o),
(138,135.649,o),
(138,84,cs),
(138,56,o),
(115.667,48,o),
(77,48,cs),
(50.333,48,o),
(38,42.333,o),
(38,21,cs),
(38,2.333,o),
(61.333,0,o),
(84,0,cs),
(124.667,0,o),
(166.833,0.333,o),
(210.5,1,cs),
(254.167,1.667,o),
(296.333,2,o),
(337,2,cs),
(377.667,2,o),
(417.167,1.667,o),
(455.5,1,cs),
(493.833,0.333,o),
(533.333,0,o),
(574,0,cs),
(600.667,0,o),
(613.333,-0.333,o),
(616,33,cs),
(626.877,141.766,o),
(632,292.348,o),
(632,282,cs),
(632,302,o),
(620.667,315,o),
(602,315,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
2 15 2 0 1 0 106 0 1 7 1 106 0 6 7 9 9 6 96 0 8 9 11 9 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 11 0 12 14 11 12 91 0 9 9 7 84 0 7 7 12 67 0 13 13 10 83 0 10 10 15 67 0 14 14 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
2 15 2 0 1 0 106 0 1 7 1 106 0 6 7 9 9 6 96 0 8 9 11 9 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 0 9 9 7 84 0 7 7 12 67 0 14 14 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 80 values pushed */
2 15 2 0 1 0 106 0 1 7 1 106 0 6 7 9 9 6 96 0 8 9 11 9 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 0 9 9 7 84 0 7 7 14 67 0 14 14 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
26 25 1 0 147 145 144 137 131 129 119 117 111 102 101 99 92 90 85 73 69 66 49 47 43 35 25 158 26 158 16 14 9 7 0 24 1 24 17 15
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(148.333,1.333,o),
(228.667,2,o),
(310,2,cs),
(350.667,2,o),
(390.167,1.667,o),
(428.5,1,cs),
(466.833,0.333,o),
(506.333,0,o),
(547,0,cs),
(573.667,0,o),
(586.333,-0.333,o),
(589,33,cs),
(599.644,139.44,o),
(605,285.132,o),
(605,277,cs),
(605,293,o),
(604.667,310,o),
(586,310,cs),
(582.667,310,o),
(579.167,307.167,o),
(575.5,301.5,cs),
(571.833,295.833,o),
(569.667,286.333,o),
(569,273,cs),
(563.922,166.353,o),
(558.061,99.79,o),
(556,73,cs),
(553.388,39.044,o),
(534.049,36,o),
(513,36,cs),
(184,36,l),
(184,401,l),
(222.667,402.333,o),
(259.333,403,o),
(298,403,cs),
(317.333,403,o),
(333,402.833,o),
(345,402.5,cs),
(357,402.167,o),
(367.667,402,o),
(377,402,cs),
(416.501,402,o),
(425,345.97,o),
(425,309,cs),
(425,291.667,o),
(432.667,280,o),
(442,280,cs),
(444.667,280,o),
(447.833,281.667,o),
(451.5,285,cs),
(455.167,288.333,o),
(457,295.667,o),
(457,307,cs),
(457,325.667,o),
(456.667,344.333,o),
(456,363,cs),
(455.333,381.667,o),
(455,400.667,o),
(455,420,cs),
(455,439.333,o),
(455.333,458.167,o),
(456,476.5,cs),
(456.667,494.833,o),
(457,513.667,o),
(457,533,cs),
(457,547.667,o),
(456,560,o),
(440,560,cs),
(426.277,560,o),
(423,541.121,o),
(423,530,cs),
(423,471.034,o),
(417.262,440,o),
(406,440,cs),
(407.48,440,o),
(346.73,437,o),
(298,437,cs),
(278.667,437,o),
(259.667,437.333,o),
(241,438,cs),
(222.333,438.667,o),
(203.333,439.333,o),
(184,440,c),
(184,785,l),
(487,785,ls),
(500.333,785,o),
(524,782.333,o),
(524,757,cs),
(524,645,ls),
(524,626.333,o),
(524,605,o),
(544,605,cs),
(558.667,605,o),
(561,625.667,o),
(561,651,cs),
(561,785,ls),
(561,813,o),
(551.667,821,o),
(533,821,cs),
(453.449,821,o),
(369.039,819,o),
(306,819,cs),
(253.771,819,o),
(163.591,821,o),
(65,821,cs),
(45,821,o),
(24,818.667,o),
(24,804,cs),
(24,789.333,o),
(41.333,789,o),
(64,789,cs),
(92.603,789,o),
(137,788.308,o),
(137,750,cs),
(137,632.98,o),
(143,567.873,o),
(143,425,cs),
(143,339.646,o),
(142,269.59,o),
(142,222,cs),
(142,173.136,o),
(141,119.911,o),
(141,64,cs),
(141,50,o),
(135.333,40.5,o),
(124,35.5,cs),
(112.667,30.5,o),
(91.333,28,o),
(60,28,cs),
(46.667,28,o),
(36.833,27,o),
(30.5,25,cs),
(24.167,23,o),
(21,18.333,o),
(21,11,cs),
(21,0.333,o),
(47,0,o),
(67,0,cs)
);
},
{
closed = 1;
nodes = (
(344.706,876,o),
(450,935.626,o),
(450,961,cs),
(450,968.333,o),
(447.333,972,o),
(442,972,cs),
(430.31,972,o),
(392.562,950.241,o),
(322,920,c),
(273.14,940.94,o),
(214.185,972,o),
(203,972,cs),
(197.667,972,o),
(195,968.333,o),
(195,961,cs),
(195,937.359,o),
(298.08,876,o),
(322,876,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
19 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
2 15 2 0 1 0 106 0 1 7 1 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 11 0 12 14 11 12 91 9 1 6 6 7 83 0 7 7 12 67 0 13 13 10 83 0 10 10 15 67 0 14 14 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
2 15 2 0 1 0 106 0 1 7 1 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 9 1 6 6 7 83 0 7 7 12 67 0 14 14 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
2 15 2 0 1 0 106 0 1 7 1 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 9 1 6 6 7 83 0 7 7 14 67 0 14 14 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
25 24 1 0 146 144 143 136 130 128 118 116 108 99 98 96 91 89 84 72 68 65 48 46 42 34 24 157 25 157 15 13 8 6 0 23 1 23 17 15
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = Ecaron;
unicode = 282;
},
{
glyphname = Ecircumflex;
kernLeft = B;
kernRight = AE;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(494.667,830,o),
(497,841.667,o),
(497,851,cs),
(497,891.866,o),
(387.605,972,o),
(364,972,cs),
(352.856,972,o),
(318.177,950.45,o),
(291,928,cs),
(260.333,902.667,o),
(232,870.667,o),
(232,844,cs),
(232,837.333,o),
(237,830,o),
(245,830,cs),
(261.72,830,o),
(322.662,853.252,o),
(364,880,c),
(422.555,842.111,o),
(478.41,830,o),
(484,830,cs)
);
},
{
closed = 1;
nodes = (
(589,318,o),
(565.333,310.333,o),
(564,281,cs),
(559.317,201.39,o),
(555.143,183.141,o),
(551,121,cs),
(548.388,87.044,o),
(529.049,84,o),
(508,84,cs),
(230,84,l),
(230,377,l),
(279.731,377,o),
(266.898,379,o),
(318,379,cs),
(331.333,379,o),
(342.333,378.833,o),
(351,378.5,cs),
(359.667,378.167,o),
(366.667,378,o),
(372,378,cs),
(407.168,378,o),
(420,337.774,o),
(420,310,cs),
(420,292.667,o),
(426.333,275,o),
(461,275,cs),
(489,275,o),
(503,286,o),
(503,308,cs),
(503,323.333,o),
(502.667,341,o),
(502,361,cs),
(501.333,381,o),
(501,400.667,o),
(501,420,cs),
(501,439.333,o),
(501.333,457.833,o),
(502,475.5,cs),
(502.667,493.167,o),
(503,511.667,o),
(503,531,cs),
(503,563,o),
(482.667,570,o),
(460,570,cs),
(432,570,o),
(418,553,o),
(418,533,cs),
(418,512.353,o),
(416.681,464,o),
(401,464,cs),
(402.208,464,o),
(355.001,461,o),
(318,461,cs),
(283.754,461,o),
(264.584,461.53,o),
(230,464,c),
(230,737,l),
(482,737,ls),
(504.667,737,o),
(519,733,o),
(519,709,cs),
(519,637,ls),
(519,618.333,o),
(531.333,597,o),
(566,597,cs),
(595.333,597,o),
(607,607,o),
(607,643,cs),
(607,785,ls),
(607,813,o),
(597.667,821,o),
(579,821,cs),
(499.449,821,o),
(415.039,819,o),
(352,819,cs),
(296.166,819,o),
(199.784,821,o),
(94,821,cs),
(51.333,821,o),
(37,815.667,o),
(37,781,cs),
(37,758.333,o),
(59.667,747,o),
(93,747,cs),
(121,747,o),
(132,746.667,o),
(132,708,cs),
(132,605.687,o),
(138,543.101,o),
(138,425,cs),
(138,348.925,o),
(137,287.269,o),
(137,246.5,cs),
(137,204.532,o),
(136,158.173,o),
(136,109,cs),
(136,86.333,o),
(127.667,75.667,o),
(89,73,cs),
(61,71.667,o),
(38,62.333,o),
(38,33,cs),
(38,10.333,o),
(51.333,0,o),
(86,0,cs),
(163.885,0,o),
(257.939,2,o),
(356,2,cs),
(396.667,2,o),
(436.167,1.667,o),
(474.5,1,cs),
(512.833,0.333,o),
(552.333,0,o),
(593,0,cs),
(626.333,0,o),
(632.333,5,o),
(635,33,cs),
(648.126,164.265,o),
(651,274.421,o),
(651,285,cs),
(651,307.667,o),
(631.667,318,o),
(613,318,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
5 1 0 2 101 1 10 11 153 1 5 12 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
5 1 0 2 101 1 10 11 153 1 14 12 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 2 0 2 106 1 15 2 0 7 0 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 11 0 12 5 11 12 91 9 1 6 6 7 83 0 7 7 12 67 0 13 13 10 83 0 10 10 23 67 14 1 5 5 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 2 0 2 106 1 15 2 0 7 0 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 10 0 13 3 10 13 91 0 11 0 12 5 11 12 91 9 1 6 6 7 83 0 7 7 12 67 14 1 5 5 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 2 0 2 106 1 15 2 0 7 0 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 9 1 6 6 7 83 0 7 7 12 67 0 14 14 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 2 0 2 106 1 15 2 0 7 0 106 0 6 7 9 9 6 96 0 8 9 11 9 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 0 9 9 7 84 0 7 7 12 67 0 14 14 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 80 values pushed */
0 2 0 2 106 1 15 2 0 7 0 106 0 6 7 9 9 6 96 0 8 9 11 9 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 0 9 9 7 84 0 7 7 14 67 0 14 14 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
27 26 1 0 149 147 146 137 131 129 120 118 112 102 100 98 93 91 86 74 70 68 52 50 46 36 26 160 27 160 19 17 11 9 0 25 1 25 17 15
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(476,847,o),
(479,854.667,o),
(479,864,cs),
(479,900.28,o),
(371.728,972,o),
(348,972,cs),
(326.04,972,o),
(218,901.46,o),
(218,860,cs),
(218,851.333,o),
(221.667,847,o),
(229,847,cs),
(246.679,847,o),
(308.008,874.475,o),
(348,898,c),
(411.994,860.357,o),
(459.663,847,o),
(468,847,cs)
);
},
{
closed = 1;
nodes = (
(584.667,315,o),
(567.333,306,o),
(566,278,cs),
(560.867,185.6,o),
(555.166,128.988,o),
(553,103,cs),
(550.388,69.044,o),
(531.049,66,o),
(510,66,cs),
(211,66,l),
(211,386,l),
(249.667,387.333,o),
(271.333,388,o),
(310,388,cs),
(325.333,388,o),
(338,387.833,o),
(348,387.5,cs),
(358,387.167,o),
(366.667,387,o),
(374,387,cs),
(413.224,387,o),
(422,334.438,o),
(422,306,cs),
(422,288.667,o),
(427.667,277,o),
(453,277,cs),
(470.333,277,o),
(484,281.333,o),
(484,304,cs),
(484,322.667,o),
(483.667,341.833,o),
(483,361.5,cs),
(482.333,381.167,o),
(482,400.667,o),
(482,420,cs),
(482,439.333,o),
(482.333,458.5,o),
(483,477.5,cs),
(483.667,496.5,o),
(484,515.667,o),
(484,535,cs),
(484,557.667,o),
(470.667,566,o),
(452,566,cs),
(428,566,o),
(420,546.667,o),
(420,532,cs),
(420,510.355,o),
(418.839,455,o),
(403,455,cs),
(404.428,455,o),
(353.48,452,o),
(310,452,cs),
(290.667,452,o),
(274,452.333,o),
(260,453,cs),
(246,453.667,o),
(229.667,454.333,o),
(211,455,c),
(211,755,l),
(484,755,ls),
(498.861,755,o),
(521,754.133,o),
(521,727,cs),
(521,640,ls),
(521,621.333,o),
(527.667,600,o),
(557,600,cs),
(579.667,600,o),
(588,614,o),
(588,646,cs),
(588,785,ls),
(588,813,o),
(578.667,821,o),
(560,821,cs),
(480.449,821,o),
(396.039,819,o),
(333,819,cs),
(278.904,819,o),
(184.97,821,o),
(82,821,cs),
(62,821,o),
(41,818,o),
(41,794,cs),
(41,776.667,o),
(58.333,769,o),
(81,769,cs),
(95.58,769,o),
(134,769.432,o),
(134,730,cs),
(134,618.008,o),
(140,561.059,o),
(140,425,cs),
(140,344.921,o),
(139,278.739,o),
(139,233,cs),
(139,185.69,o),
(138,135.649,o),
(138,84,cs),
(138,56,o),
(115.667,48,o),
(77,48,cs),
(50.333,48,o),
(38,42.333,o),
(38,21,cs),
(38,2.333,o),
(61.333,0,o),
(84,0,cs),
(124.667,0,o),
(166.833,0.333,o),
(210.5,1,cs),
(254.167,1.667,o),
(296.333,2,o),
(337,2,cs),
(377.667,2,o),
(417.167,1.667,o),
(455.5,1,cs),
(493.833,0.333,o),
(533.333,0,o),
(574,0,cs),
(600.667,0,o),
(613.333,-0.333,o),
(616,33,cs),
(626.877,141.766,o),
(632,292.348,o),
(632,282,cs),
(632,302,o),
(620.667,315,o),
(602,315,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
0 2 0 2 106 1 15 2 0 7 0 106 0 6 7 9 9 6 96 0 8 9 11 9 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 11 0 12 14 11 12 91 0 9 9 7 84 0 7 7 12 67 0 13 13 10 83 0 10 10 15 67 0 14 14 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 2 0 2 106 1 15 2 0 7 0 106 0 6 7 9 9 6 96 0 8 9 11 9 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 0 9 9 7 84 0 7 7 12 67 0 14 14 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 80 values pushed */
0 2 0 2 106 1 15 2 0 7 0 106 0 6 7 9 9 6 96 0 8 9 11 9 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 0 9 9 7 84 0 7 7 14 67 0 14 14 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
26 25 1 0 147 145 144 137 131 129 119 117 111 102 101 99 92 90 85 73 69 66 49 47 43 35 25 158 26 158 18 16 11 9 0 24 1 24 17 15
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(148.333,1.333,o),
(228.667,2,o),
(310,2,cs),
(350.667,2,o),
(390.167,1.667,o),
(428.5,1,cs),
(466.833,0.333,o),
(506.333,0,o),
(547,0,cs),
(573.667,0,o),
(586.333,-0.333,o),
(589,33,cs),
(599.644,139.44,o),
(605,285.132,o),
(605,277,cs),
(605,293,o),
(604.667,310,o),
(586,310,cs),
(582.667,310,o),
(579.167,307.167,o),
(575.5,301.5,cs),
(571.833,295.833,o),
(569.667,286.333,o),
(569,273,cs),
(563.922,166.353,o),
(558.061,99.79,o),
(556,73,cs),
(553.388,39.044,o),
(534.049,36,o),
(513,36,cs),
(184,36,l),
(184,401,l),
(222.667,402.333,o),
(259.333,403,o),
(298,403,cs),
(317.333,403,o),
(333,402.833,o),
(345,402.5,cs),
(357,402.167,o),
(367.667,402,o),
(377,402,cs),
(416.501,402,o),
(425,345.97,o),
(425,309,cs),
(425,291.667,o),
(432.667,280,o),
(442,280,cs),
(444.667,280,o),
(447.833,281.667,o),
(451.5,285,cs),
(455.167,288.333,o),
(457,295.667,o),
(457,307,cs),
(457,325.667,o),
(456.667,344.333,o),
(456,363,cs),
(455.333,381.667,o),
(455,400.667,o),
(455,420,cs),
(455,439.333,o),
(455.333,458.167,o),
(456,476.5,cs),
(456.667,494.833,o),
(457,513.667,o),
(457,533,cs),
(457,547.667,o),
(456,560,o),
(440,560,cs),
(426.277,560,o),
(423,541.121,o),
(423,530,cs),
(423,471.034,o),
(417.262,440,o),
(406,440,cs),
(407.48,440,o),
(346.73,437,o),
(298,437,cs),
(278.667,437,o),
(259.667,437.333,o),
(241,438,cs),
(222.333,438.667,o),
(203.333,439.333,o),
(184,440,c),
(184,785,l),
(487,785,ls),
(500.333,785,o),
(524,782.333,o),
(524,757,cs),
(524,645,ls),
(524,626.333,o),
(524,605,o),
(544,605,cs),
(558.667,605,o),
(561,625.667,o),
(561,651,cs),
(561,785,ls),
(561,813,o),
(551.667,821,o),
(533,821,cs),
(453.449,821,o),
(369.039,819,o),
(306,819,cs),
(253.771,819,o),
(163.591,821,o),
(65,821,cs),
(45,821,o),
(24,818.667,o),
(24,804,cs),
(24,789.333,o),
(41.333,789,o),
(64,789,cs),
(92.603,789,o),
(137,788.308,o),
(137,750,cs),
(137,632.98,o),
(143,567.873,o),
(143,425,cs),
(143,339.646,o),
(142,269.59,o),
(142,222,cs),
(142,173.136,o),
(141,119.911,o),
(141,64,cs),
(141,50,o),
(135.333,40.5,o),
(124,35.5,cs),
(112.667,30.5,o),
(91.333,28,o),
(60,28,cs),
(46.667,28,o),
(36.833,27,o),
(30.5,25,cs),
(24.167,23,o),
(21,18.333,o),
(21,11,cs),
(21,0.333,o),
(47,0,o),
(67,0,cs)
);
},
{
closed = 1;
nodes = (
(213.158,875,o),
(261.069,894.154,o),
(325,928,c),
(389.308,893.955,o),
(437.037,875,o),
(445,875,cs),
(450.333,875,o),
(453,878.667,o),
(453,886,cs),
(453,910.708,o),
(350.596,972,o),
(325,972,cs),
(301.629,972,o),
(198,910.79,o),
(198,886,cs),
(198,878.667,o),
(200.667,875,o),
(206,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
0 2 0 2 106 1 15 2 0 7 0 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 11 0 12 14 11 12 91 9 1 6 6 7 83 0 7 7 12 67 0 13 13 10 83 0 10 10 15 67 0 14 14 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 2 0 2 106 1 15 2 0 7 0 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 9 1 6 6 7 83 0 7 7 12 67 0 14 14 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
0 2 0 2 106 1 15 2 0 7 0 106 0 8 6 11 6 8 11 104 16 1 3 13 12 13 3 12 104 0 5 14 4 14 5 96 0 10 0 13 3 10 13 91 0 11 0 12 14 11 12 91 9 1 6 6 7 83 0 7 7 14 67 0 14 14 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
25 24 1 0 146 144 143 136 130 128 118 116 108 99 98 96 91 89 84 72 68 65 48 46 42 34 24 157 25 157 18 16 11 9 0 23 1 23 17 15
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = Ecircumflex;
unicode = 202;
},
{
glyphname = Edieresis;
kernLeft = B;
kernRight = AE;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(189,868.333,o),
(215.667,841,o),
(249,841,cs),
(280.371,841,o),
(315,855.733,o),
(315,911,cs),
(315,947,o),
(288,972,o),
(256,972,cs),
(208.823,972,o),
(189,930.29,o),
(189,907,cs)
);
},
{
closed = 1;
nodes = (
(396,857.333,o),
(422.667,830,o),
(456,830,cs),
(487.371,830,o),
(522,844.733,o),
(522,900,cs),
(522,937.333,o),
(495,961,o),
(463,961,cs),
(415.823,961,o),
(396,919.29,o),
(396,896,cs)
);
},
{
closed = 1;
nodes = (
(589,318,o),
(565.333,310.333,o),
(564,281,cs),
(559.317,201.39,o),
(555.143,183.141,o),
(551,121,cs),
(548.388,87.044,o),
(529.049,84,o),
(508,84,cs),
(230,84,l),
(230,377,l),
(279.731,377,o),
(266.898,379,o),
(318,379,cs),
(331.333,379,o),
(342.333,378.833,o),
(351,378.5,cs),
(359.667,378.167,o),
(366.667,378,o),
(372,378,cs),
(407.168,378,o),
(420,337.774,o),
(420,310,cs),
(420,292.667,o),
(426.333,275,o),
(461,275,cs),
(489,275,o),
(503,286,o),
(503,308,cs),
(503,323.333,o),
(502.667,341,o),
(502,361,cs),
(501.333,381,o),
(501,400.667,o),
(501,420,cs),
(501,439.333,o),
(501.333,457.833,o),
(502,475.5,cs),
(502.667,493.167,o),
(503,511.667,o),
(503,531,cs),
(503,563,o),
(482.667,570,o),
(460,570,cs),
(432,570,o),
(418,553,o),
(418,533,cs),
(418,512.353,o),
(416.681,464,o),
(401,464,cs),
(402.208,464,o),
(355.001,461,o),
(318,461,cs),
(283.754,461,o),
(264.584,461.53,o),
(230,464,c),
(230,737,l),
(482,737,ls),
(504.667,737,o),
(519,733,o),
(519,709,cs),
(519,637,ls),
(519,618.333,o),
(531.333,597,o),
(566,597,cs),
(595.333,597,o),
(607,607,o),
(607,643,cs),
(607,785,ls),
(607,813,o),
(597.667,821,o),
(579,821,cs),
(499.449,821,o),
(415.039,819,o),
(352,819,cs),
(296.166,819,o),
(199.784,821,o),
(94,821,cs),
(51.333,821,o),
(37,815.667,o),
(37,781,cs),
(37,758.333,o),
(59.667,747,o),
(93,747,cs),
(121,747,o),
(132,746.667,o),
(132,708,cs),
(132,605.687,o),
(138,543.101,o),
(138,425,cs),
(138,348.925,o),
(137,287.269,o),
(137,246.5,cs),
(137,204.532,o),
(136,158.173,o),
(136,109,cs),
(136,86.333,o),
(127.667,75.667,o),
(89,73,cs),
(61,71.667,o),
(38,62.333,o),
(38,33,cs),
(38,10.333,o),
(51.333,0,o),
(86,0,cs),
(163.885,0,o),
(257.939,2,o),
(356,2,cs),
(396.667,2,o),
(436.167,1.667,o),
(474.5,1,cs),
(512.833,0.333,o),
(552.333,0,o),
(593,0,cs),
(626.333,0,o),
(632.333,5,o),
(635,33,cs),
(648.126,164.265,o),
(651,274.421,o),
(651,285,cs),
(651,307.667,o),
(631.667,318,o),
(613,318,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
107 1 11 12 159 1 6 13 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
107 1 11 12 159 1 15 13 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 9 7 12 7 9 12 104 16 1 4 14 13 14 4 13 104 2 1 0 3 1 1 8 0 1 91 0 12 0 13 6 12 13 91 10 1 7 7 8 83 0 8 8 12 67 0 14 14 11 83 0 11 11 23 67 15 1 6 6 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 9 7 12 7 9 12 104 16 1 4 14 13 14 4 13 104 2 1 0 3 1 1 8 0 1 91 0 11 0 14 4 11 14 91 0 12 0 13 6 12 13 91 10 1 7 7 8 83 0 8 8 12 67 15 1 6 6 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 9 7 12 7 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 0 11 0 14 4 11 14 91 0 12 0 13 15 12 13 91 10 1 7 7 8 83 0 8 8 12 67 0 15 15 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 84 values pushed */
0 7 8 10 10 7 96 0 9 10 12 10 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 0 11 0 14 4 11 14 91 0 12 0 13 15 12 13 91 0 10 10 8 84 0 8 8 12 67 0 15 15 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 84 values pushed */
0 7 8 10 10 7 96 0 9 10 12 10 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 0 11 0 14 4 11 14 91 0 12 0 13 15 12 13 91 0 10 10 8 84 0 8 8 14 67 0 15 15 5 84 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
33 32 155 153 152 143 137 135 126 124 118 108 106 104 99 97 92 80 76 74 58 56 52 42 32 166 33 166 38 38 38 36 17 19
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(188,882.667,o),
(210.333,859,o),
(237,859,cs),
(262.333,859,o),
(293,872,o),
(293,920,cs),
(293,950.667,o),
(270.667,972,o),
(244,972,cs),
(205.685,972,o),
(188,936.643,o),
(188,916,cs)
);
},
{
closed = 1;
nodes = (
(395,870.667,o),
(417.333,847,o),
(444,847,cs),
(469.333,847,o),
(500,860,o),
(500,908,cs),
(500,938.667,o),
(477.667,960,o),
(451,960,cs),
(412.685,960,o),
(395,924.643,o),
(395,904,cs)
);
},
{
closed = 1;
nodes = (
(584.667,315,o),
(567.333,306,o),
(566,278,cs),
(560.867,185.6,o),
(555.166,128.988,o),
(553,103,cs),
(550.388,69.044,o),
(531.049,66,o),
(510,66,cs),
(211,66,l),
(211,386,l),
(249.667,387.333,o),
(271.333,388,o),
(310,388,cs),
(325.333,388,o),
(338,387.833,o),
(348,387.5,cs),
(358,387.167,o),
(366.667,387,o),
(374,387,cs),
(413.224,387,o),
(422,334.438,o),
(422,306,cs),
(422,288.667,o),
(427.667,277,o),
(453,277,cs),
(470.333,277,o),
(484,281.333,o),
(484,304,cs),
(484,322.667,o),
(483.667,341.833,o),
(483,361.5,cs),
(482.333,381.167,o),
(482,400.667,o),
(482,420,cs),
(482,439.333,o),
(482.333,458.5,o),
(483,477.5,cs),
(483.667,496.5,o),
(484,515.667,o),
(484,535,cs),
(484,557.667,o),
(470.667,566,o),
(452,566,cs),
(428,566,o),
(420,546.667,o),
(420,532,cs),
(420,510.355,o),
(418.839,455,o),
(403,455,cs),
(404.428,455,o),
(353.48,452,o),
(310,452,cs),
(290.667,452,o),
(274,452.333,o),
(260,453,cs),
(246,453.667,o),
(229.667,454.333,o),
(211,455,c),
(211,755,l),
(484,755,ls),
(498.861,755,o),
(521,754.133,o),
(521,727,cs),
(521,640,ls),
(521,621.333,o),
(527.667,600,o),
(557,600,cs),
(579.667,600,o),
(588,614,o),
(588,646,cs),
(588,785,ls),
(588,813,o),
(578.667,821,o),
(560,821,cs),
(480.449,821,o),
(396.039,819,o),
(333,819,cs),
(278.904,819,o),
(184.97,821,o),
(82,821,cs),
(62,821,o),
(41,818,o),
(41,794,cs),
(41,776.667,o),
(58.333,769,o),
(81,769,cs),
(95.58,769,o),
(134,769.432,o),
(134,730,cs),
(134,618.008,o),
(140,561.059,o),
(140,425,cs),
(140,344.921,o),
(139,278.739,o),
(139,233,cs),
(139,185.69,o),
(138,135.649,o),
(138,84,cs),
(138,56,o),
(115.667,48,o),
(77,48,cs),
(50.333,48,o),
(38,42.333,o),
(38,21,cs),
(38,2.333,o),
(61.333,0,o),
(84,0,cs),
(124.667,0,o),
(166.833,0.333,o),
(210.5,1,cs),
(254.167,1.667,o),
(296.333,2,o),
(337,2,cs),
(377.667,2,o),
(417.167,1.667,o),
(455.5,1,cs),
(493.833,0.333,o),
(533.333,0,o),
(574,0,cs),
(600.667,0,o),
(613.333,-0.333,o),
(616,33,cs),
(626.877,141.766,o),
(632,292.348,o),
(632,282,cs),
(632,302,o),
(620.667,315,o),
(602,315,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 86 values pushed */
0 7 8 10 10 7 96 0 9 10 12 10 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 0 12 0 13 15 12 13 91 0 10 10 8 84 0 8 8 12 67 0 14 14 11 83 0 11 11 15 67 0 15 15 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 84 values pushed */
0 7 8 10 10 7 96 0 9 10 12 10 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 0 11 0 14 4 11 14 91 0 12 0 13 15 12 13 91 0 10 10 8 84 0 8 8 12 67 0 15 15 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 84 values pushed */
0 7 8 10 10 7 96 0 9 10 12 10 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 0 11 0 14 4 11 14 91 0 12 0 13 15 12 13 91 0 10 10 8 84 0 8 8 14 67 0 15 15 5 84 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
29 28 150 148 147 140 134 132 122 120 114 105 104 102 95 93 88 76 72 69 52 50 46 38 28 161 29 161 36 38 36 36 17 19
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(148.333,1.333,o),
(228.667,2,o),
(310,2,cs),
(350.667,2,o),
(390.167,1.667,o),
(428.5,1,cs),
(466.833,0.333,o),
(506.333,0,o),
(547,0,cs),
(573.667,0,o),
(586.333,-0.333,o),
(589,33,cs),
(599.644,139.44,o),
(605,285.132,o),
(605,277,cs),
(605,293,o),
(604.667,310,o),
(586,310,cs),
(582.667,310,o),
(579.167,307.167,o),
(575.5,301.5,cs),
(571.833,295.833,o),
(569.667,286.333,o),
(569,273,cs),
(563.922,166.353,o),
(558.061,99.79,o),
(556,73,cs),
(553.388,39.044,o),
(534.049,36,o),
(513,36,cs),
(184,36,l),
(184,401,l),
(222.667,402.333,o),
(259.333,403,o),
(298,403,cs),
(317.333,403,o),
(333,402.833,o),
(345,402.5,cs),
(357,402.167,o),
(367.667,402,o),
(377,402,cs),
(416.501,402,o),
(425,345.97,o),
(425,309,cs),
(425,291.667,o),
(432.667,280,o),
(442,280,cs),
(444.667,280,o),
(447.833,281.667,o),
(451.5,285,cs),
(455.167,288.333,o),
(457,295.667,o),
(457,307,cs),
(457,325.667,o),
(456.667,344.333,o),
(456,363,cs),
(455.333,381.667,o),
(455,400.667,o),
(455,420,cs),
(455,439.333,o),
(455.333,458.167,o),
(456,476.5,cs),
(456.667,494.833,o),
(457,513.667,o),
(457,533,cs),
(457,547.667,o),
(456,560,o),
(440,560,cs),
(426.277,560,o),
(423,541.121,o),
(423,530,cs),
(423,471.034,o),
(417.262,440,o),
(406,440,cs),
(407.48,440,o),
(346.73,437,o),
(298,437,cs),
(278.667,437,o),
(259.667,437.333,o),
(241,438,cs),
(222.333,438.667,o),
(203.333,439.333,o),
(184,440,c),
(184,785,l),
(487,785,ls),
(500.333,785,o),
(524,782.333,o),
(524,757,cs),
(524,645,ls),
(524,626.333,o),
(524,605,o),
(544,605,cs),
(558.667,605,o),
(561,625.667,o),
(561,651,cs),
(561,785,ls),
(561,813,o),
(551.667,821,o),
(533,821,cs),
(453.449,821,o),
(369.039,819,o),
(306,819,cs),
(253.771,819,o),
(163.591,821,o),
(65,821,cs),
(45,821,o),
(24,818.667,o),
(24,804,cs),
(24,789.333,o),
(41.333,789,o),
(64,789,cs),
(92.603,789,o),
(137,788.308,o),
(137,750,cs),
(137,632.98,o),
(143,567.873,o),
(143,425,cs),
(143,339.646,o),
(142,269.59,o),
(142,222,cs),
(142,173.136,o),
(141,119.911,o),
(141,64,cs),
(141,50,o),
(135.333,40.5,o),
(124,35.5,cs),
(112.667,30.5,o),
(91.333,28,o),
(60,28,cs),
(46.667,28,o),
(36.833,27,o),
(30.5,25,cs),
(24.167,23,o),
(21,18.333,o),
(21,11,cs),
(21,0.333,o),
(47,0,o),
(67,0,cs)
);
},
{
closed = 1;
nodes = (
(238.667,889,o),
(261,899,o),
(261,935,cs),
(261,957.667,o),
(245.667,972,o),
(227,972,cs),
(199.258,972,o),
(186,944.895,o),
(186,931,cs),
(186,907,o),
(201.333,889,o),
(220,889,cs)
);
},
{
closed = 1;
nodes = (
(445.667,875,o),
(468,885,o),
(468,921,cs),
(468,943.667,o),
(452.667,958,o),
(434,958,cs),
(406.258,958,o),
(393,930.895,o),
(393,917,cs),
(393,893,o),
(408.333,875,o),
(427,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 9 7 12 7 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 0 12 0 13 15 12 13 91 10 1 7 7 8 83 0 8 8 12 67 0 14 14 11 83 0 11 11 15 67 0 15 15 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 9 7 12 7 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 0 11 0 14 4 11 14 91 0 12 0 13 15 12 13 91 10 1 7 7 8 83 0 8 8 12 67 0 15 15 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
0 9 7 12 7 9 12 104 16 1 4 14 13 14 4 13 104 0 6 15 5 15 6 96 0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 0 11 0 14 4 11 14 91 0 12 0 13 15 12 13 91 10 1 7 7 8 83 0 8 8 14 67 0 15 15 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
29 28 150 148 147 140 134 132 122 120 112 103 102 100 95 93 88 76 72 69 52 50 46 38 28 161 29 161 36 38 36 36 17 19
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = Edieresis;
unicode = 203;
},
{
glyphname = Edotaccent;
kernLeft = B;
kernRight = AE;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(589,318,o),
(565.333,310.333,o),
(564,281,cs),
(559.317,201.39,o),
(555.143,183.141,o),
(551,121,cs),
(548.388,87.044,o),
(529.049,84,o),
(508,84,cs),
(230,84,l),
(230,377,l),
(279.731,377,o),
(266.898,379,o),
(318,379,cs),
(331.333,379,o),
(342.333,378.833,o),
(351,378.5,cs),
(359.667,378.167,o),
(366.667,378,o),
(372,378,cs),
(407.168,378,o),
(420,337.774,o),
(420,310,cs),
(420,292.667,o),
(426.333,275,o),
(461,275,cs),
(489,275,o),
(503,286,o),
(503,308,cs),
(503,323.333,o),
(502.667,341,o),
(502,361,cs),
(501.333,381,o),
(501,400.667,o),
(501,420,cs),
(501,439.333,o),
(501.333,457.833,o),
(502,475.5,cs),
(502.667,493.167,o),
(503,511.667,o),
(503,531,cs),
(503,563,o),
(482.667,570,o),
(460,570,cs),
(432,570,o),
(418,553,o),
(418,533,cs),
(418,512.353,o),
(416.681,464,o),
(401,464,cs),
(402.208,464,o),
(355.001,461,o),
(318,461,cs),
(283.754,461,o),
(264.584,461.53,o),
(230,464,c),
(230,737,l),
(482,737,ls),
(504.667,737,o),
(519,733,o),
(519,709,cs),
(519,637,ls),
(519,618.333,o),
(531.333,597,o),
(566,597,cs),
(595.333,597,o),
(607,607,o),
(607,643,cs),
(607,785,ls),
(607,813,o),
(597.667,821,o),
(579,821,cs),
(499.449,821,o),
(415.039,819,o),
(352,819,cs),
(296.166,819,o),
(199.784,821,o),
(94,821,cs),
(51.333,821,o),
(37,815.667,o),
(37,781,cs),
(37,758.333,o),
(59.667,747,o),
(93,747,cs),
(121,747,o),
(132,746.667,o),
(132,708,cs),
(132,605.687,o),
(138,543.101,o),
(138,425,cs),
(138,348.925,o),
(137,287.269,o),
(137,246.5,cs),
(137,204.532,o),
(136,158.173,o),
(136,109,cs),
(136,86.333,o),
(127.667,75.667,o),
(89,73,cs),
(61,71.667,o),
(38,62.333,o),
(38,33,cs),
(38,10.333,o),
(51.333,0,o),
(86,0,cs),
(163.885,0,o),
(257.939,2,o),
(356,2,cs),
(396.667,2,o),
(436.167,1.667,o),
(474.5,1,cs),
(512.833,0.333,o),
(552.333,0,o),
(593,0,cs),
(626.333,0,o),
(632.333,5,o),
(635,33,cs),
(648.126,164.265,o),
(651,274.421,o),
(651,285,cs),
(651,307.667,o),
(631.667,318,o),
(613,318,cs)
);
},
{
closed = 1;
nodes = (
(288,863.333,o),
(313.667,840,o),
(347,840,cs),
(376.675,840,o),
(414,854.646,o),
(414,910,cs),
(414,946,o),
(386,971,o),
(354,971,cs),
(306.488,971,o),
(288,933.161,o),
(288,906,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
75 1 7 8 127 1 2 9 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
75 1 7 8 127 1 11 9 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 0 12 0 13 4 12 13 91 0 8 0 9 2 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 10 10 7 83 0 7 7 23 67 11 1 2 2 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 0 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 2 8 9 91 6 1 3 3 4 83 0 4 4 12 67 11 1 2 2 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 76 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 14 67 0 11 11 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
1 0 149 147 141 139 123 121 120 111 105 103 94 92 86 76 74 72 67 65 60 48 44 42 26 24 20 10 0 134 1 134 15 15
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(584.667,315,o),
(567.333,306,o),
(566,278,cs),
(560.867,185.6,o),
(555.166,128.988,o),
(553,103,cs),
(550.388,69.044,o),
(531.049,66,o),
(510,66,cs),
(211,66,l),
(211,386,l),
(249.667,387.333,o),
(271.333,388,o),
(310,388,cs),
(325.333,388,o),
(338,387.833,o),
(348,387.5,cs),
(358,387.167,o),
(366.667,387,o),
(374,387,cs),
(413.224,387,o),
(422,334.438,o),
(422,306,cs),
(422,288.667,o),
(427.667,277,o),
(453,277,cs),
(470.333,277,o),
(484,281.333,o),
(484,304,cs),
(484,322.667,o),
(483.667,341.833,o),
(483,361.5,cs),
(482.333,381.167,o),
(482,400.667,o),
(482,420,cs),
(482,439.333,o),
(482.333,458.5,o),
(483,477.5,cs),
(483.667,496.5,o),
(484,515.667,o),
(484,535,cs),
(484,557.667,o),
(470.667,566,o),
(452,566,cs),
(428,566,o),
(420,546.667,o),
(420,532,cs),
(420,510.355,o),
(418.839,455,o),
(403,455,cs),
(404.428,455,o),
(353.48,452,o),
(310,452,cs),
(290.667,452,o),
(274,452.333,o),
(260,453,cs),
(246,453.667,o),
(229.667,454.333,o),
(211,455,c),
(211,755,l),
(484,755,ls),
(498.861,755,o),
(521,754.133,o),
(521,727,cs),
(521,640,ls),
(521,621.333,o),
(527.667,600,o),
(557,600,cs),
(579.667,600,o),
(588,614,o),
(588,646,cs),
(588,785,ls),
(588,813,o),
(578.667,821,o),
(560,821,cs),
(480.449,821,o),
(396.039,819,o),
(333,819,cs),
(278.904,819,o),
(184.97,821,o),
(82,821,cs),
(62,821,o),
(41,818,o),
(41,794,cs),
(41,776.667,o),
(58.333,769,o),
(81,769,cs),
(95.58,769,o),
(134,769.432,o),
(134,730,cs),
(134,618.008,o),
(140,561.059,o),
(140,425,cs),
(140,344.921,o),
(139,278.739,o),
(139,233,cs),
(139,185.69,o),
(138,135.649,o),
(138,84,cs),
(138,56,o),
(115.667,48,o),
(77,48,cs),
(50.333,48,o),
(38,42.333,o),
(38,21,cs),
(38,2.333,o),
(61.333,0,o),
(84,0,cs),
(124.667,0,o),
(166.833,0.333,o),
(210.5,1,cs),
(254.167,1.667,o),
(296.333,2,o),
(337,2,cs),
(377.667,2,o),
(417.167,1.667,o),
(455.5,1,cs),
(493.833,0.333,o),
(533.333,0,o),
(574,0,cs),
(600.667,0,o),
(613.333,-0.333,o),
(616,33,cs),
(626.877,141.766,o),
(632,292.348,o),
(632,282,cs),
(632,302,o),
(620.667,315,o),
(602,315,cs)
);
},
{
closed = 1;
nodes = (
(289,880,o),
(311,859,o),
(338,859,cs),
(363,859,o),
(394,872,o),
(394,920,cs),
(394,951,o),
(372,972,o),
(345,972,cs),
(303,972,o),
(289,936,o),
(289,916,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 12 0 13 4 12 13 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 10 10 7 83 0 7 7 15 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 76 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 14 67 0 11 11 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
2 1 147 145 141 139 123 121 120 113 107 105 95 93 87 78 77 75 68 66 61 49 45 42 25 23 19 11 1 134 2 134 15 26
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(148.333,1.333,o),
(228.667,2,o),
(310,2,cs),
(350.667,2,o),
(390.167,1.667,o),
(428.5,1,cs),
(466.833,0.333,o),
(506.333,0,o),
(547,0,cs),
(573.667,0,o),
(586.333,-0.333,o),
(589,33,cs),
(599.644,139.44,o),
(605,285.132,o),
(605,277,cs),
(605,293,o),
(604.667,310,o),
(586,310,cs),
(582.667,310,o),
(579.167,307.167,o),
(575.5,301.5,cs),
(571.833,295.833,o),
(569.667,286.333,o),
(569,273,cs),
(563.922,166.353,o),
(558.061,99.79,o),
(556,73,cs),
(553.388,39.044,o),
(534.049,36,o),
(513,36,cs),
(184,36,l),
(184,401,l),
(222.667,402.333,o),
(259.333,403,o),
(298,403,cs),
(317.333,403,o),
(333,402.833,o),
(345,402.5,cs),
(357,402.167,o),
(367.667,402,o),
(377,402,cs),
(416.501,402,o),
(425,345.97,o),
(425,309,cs),
(425,291.667,o),
(432.667,280,o),
(442,280,cs),
(444.667,280,o),
(447.833,281.667,o),
(451.5,285,cs),
(455.167,288.333,o),
(457,295.667,o),
(457,307,cs),
(457,325.667,o),
(456.667,344.333,o),
(456,363,cs),
(455.333,381.667,o),
(455,400.667,o),
(455,420,cs),
(455,439.333,o),
(455.333,458.167,o),
(456,476.5,cs),
(456.667,494.833,o),
(457,513.667,o),
(457,533,cs),
(457,547.667,o),
(456,560,o),
(440,560,cs),
(426.277,560,o),
(423,541.121,o),
(423,530,cs),
(423,471.034,o),
(417.262,440,o),
(406,440,cs),
(407.48,440,o),
(346.73,437,o),
(298,437,cs),
(278.667,437,o),
(259.667,437.333,o),
(241,438,cs),
(222.333,438.667,o),
(203.333,439.333,o),
(184,440,c),
(184,785,l),
(487,785,ls),
(500.333,785,o),
(524,782.333,o),
(524,757,cs),
(524,645,ls),
(524,626.333,o),
(524,605,o),
(544,605,cs),
(558.667,605,o),
(561,625.667,o),
(561,651,cs),
(561,785,ls),
(561,813,o),
(551.667,821,o),
(533,821,cs),
(453.449,821,o),
(369.039,819,o),
(306,819,cs),
(253.771,819,o),
(163.591,821,o),
(65,821,cs),
(45,821,o),
(24,818.667,o),
(24,804,cs),
(24,789.333,o),
(41.333,789,o),
(64,789,cs),
(92.603,789,o),
(137,788.308,o),
(137,750,cs),
(137,632.98,o),
(143,567.873,o),
(143,425,cs),
(143,339.646,o),
(142,269.59,o),
(142,222,cs),
(142,173.136,o),
(141,119.911,o),
(141,64,cs),
(141,50,o),
(135.333,40.5,o),
(124,35.5,cs),
(112.667,30.5,o),
(91.333,28,o),
(60,28,cs),
(46.667,28,o),
(36.833,27,o),
(30.5,25,cs),
(24.167,23,o),
(21,18.333,o),
(21,11,cs),
(21,0.333,o),
(47,0,o),
(67,0,cs)
);
},
{
closed = 1;
nodes = (
(343.667,889,o),
(366,899,o),
(366,935,cs),
(366,957.667,o),
(350.667,972,o),
(332,972,cs),
(304.258,972,o),
(291,944.895,o),
(291,931,cs),
(291,907,o),
(306.333,889,o),
(325,889,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 12 0 13 4 12 13 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 10 10 7 83 0 7 7 15 67 0 11 11 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 11 11 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 70 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 0 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 14 67 0 11 11 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
1 0 146 144 140 138 122 120 119 112 106 104 94 92 84 75 74 72 67 65 60 48 44 41 24 22 18 10 0 133 1 133 15 15
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = Edotaccent;
unicode = 278;
},
{
glyphname = Egrave;
kernLeft = B;
kernRight = AE;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(279,896.957,o),
(365.577,841,o),
(399,841,cs),
(419,841,o),
(434,856,o),
(434,872,cs),
(434,897.591,o),
(360.088,972,o),
(320,972,cs),
(293.333,972,o),
(279,953.333,o),
(279,936,cs)
);
},
{
closed = 1;
nodes = (
(589,318,o),
(565.333,310.333,o),
(564,281,cs),
(559.317,201.39,o),
(555.143,183.141,o),
(551,121,cs),
(548.388,87.044,o),
(529.049,84,o),
(508,84,cs),
(230,84,l),
(230,377,l),
(279.731,377,o),
(266.898,379,o),
(318,379,cs),
(331.333,379,o),
(342.333,378.833,o),
(351,378.5,cs),
(359.667,378.167,o),
(366.667,378,o),
(372,378,cs),
(407.168,378,o),
(420,337.774,o),
(420,310,cs),
(420,292.667,o),
(426.333,275,o),
(461,275,cs),
(489,275,o),
(503,286,o),
(503,308,cs),
(503,323.333,o),
(502.667,341,o),
(502,361,cs),
(501.333,381,o),
(501,400.667,o),
(501,420,cs),
(501,439.333,o),
(501.333,457.833,o),
(502,475.5,cs),
(502.667,493.167,o),
(503,511.667,o),
(503,531,cs),
(503,563,o),
(482.667,570,o),
(460,570,cs),
(432,570,o),
(418,553,o),
(418,533,cs),
(418,512.353,o),
(416.681,464,o),
(401,464,cs),
(402.208,464,o),
(355.001,461,o),
(318,461,cs),
(283.754,461,o),
(264.584,461.53,o),
(230,464,c),
(230,737,l),
(482,737,ls),
(504.667,737,o),
(519,733,o),
(519,709,cs),
(519,637,ls),
(519,618.333,o),
(531.333,597,o),
(566,597,cs),
(595.333,597,o),
(607,607,o),
(607,643,cs),
(607,785,ls),
(607,813,o),
(597.667,821,o),
(579,821,cs),
(499.449,821,o),
(415.039,819,o),
(352,819,cs),
(296.166,819,o),
(199.784,821,o),
(94,821,cs),
(51.333,821,o),
(37,815.667,o),
(37,781,cs),
(37,758.333,o),
(59.667,747,o),
(93,747,cs),
(121,747,o),
(132,746.667,o),
(132,708,cs),
(132,605.687,o),
(138,543.101,o),
(138,425,cs),
(138,348.925,o),
(137,287.269,o),
(137,246.5,cs),
(137,204.532,o),
(136,158.173,o),
(136,109,cs),
(136,86.333,o),
(127.667,75.667,o),
(89,73,cs),
(61,71.667,o),
(38,62.333,o),
(38,33,cs),
(38,10.333,o),
(51.333,0,o),
(86,0,cs),
(163.885,0,o),
(257.939,2,o),
(356,2,cs),
(396.667,2,o),
(436.167,1.667,o),
(474.5,1,cs),
(512.833,0.333,o),
(552.333,0,o),
(593,0,cs),
(626.333,0,o),
(632.333,5,o),
(635,33,cs),
(648.126,164.265,o),
(651,274.421,o),
(651,285,cs),
(651,307.667,o),
(631.667,318,o),
(613,318,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
91 1 9 10 143 1 4 11 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
91 1 9 10 143 1 13 11 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 0 1 0 106 0 1 6 1 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 10 0 11 4 10 11 91 8 1 5 5 6 83 0 6 6 12 67 0 12 12 9 83 0 9 9 23 67 13 1 4 4 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 0 1 0 106 0 1 6 1 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 9 0 12 2 9 12 91 0 10 0 11 4 10 11 91 8 1 5 5 6 83 0 6 6 12 67 13 1 4 4 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 0 1 0 106 0 1 6 1 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 8 1 5 5 6 83 0 6 6 12 67 0 13 13 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 0 1 0 106 0 1 6 1 106 0 5 6 8 8 5 96 0 7 8 10 8 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 0 8 8 6 84 0 6 6 12 67 0 13 13 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
0 0 1 0 106 0 1 6 1 106 0 5 6 8 8 5 96 0 7 8 10 8 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 0 8 8 6 84 0 6 6 14 67 0 13 13 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
17 16 139 137 136 127 121 119 110 108 102 92 90 88 83 81 76 64 60 58 42 40 36 26 16 150 17 150 38 34 15 17
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(275,909.521,o),
(360.059,854,o),
(389,854,cs),
(403.667,854,o),
(413,863.667,o),
(413,877,cs),
(413,903.873,o),
(336.247,972,o),
(307,972,cs),
(287,972,o),
(275,959.667,o),
(275,941,cs)
);
},
{
closed = 1;
nodes = (
(584.667,315,o),
(567.333,306,o),
(566,278,cs),
(560.867,185.6,o),
(555.166,128.988,o),
(553,103,cs),
(550.388,69.044,o),
(531.049,66,o),
(510,66,cs),
(211,66,l),
(211,386,l),
(249.667,387.333,o),
(271.333,388,o),
(310,388,cs),
(325.333,388,o),
(338,387.833,o),
(348,387.5,cs),
(358,387.167,o),
(366.667,387,o),
(374,387,cs),
(413.224,387,o),
(422,334.438,o),
(422,306,cs),
(422,288.667,o),
(427.667,277,o),
(453,277,cs),
(470.333,277,o),
(484,281.333,o),
(484,304,cs),
(484,322.667,o),
(483.667,341.833,o),
(483,361.5,cs),
(482.333,381.167,o),
(482,400.667,o),
(482,420,cs),
(482,439.333,o),
(482.333,458.5,o),
(483,477.5,cs),
(483.667,496.5,o),
(484,515.667,o),
(484,535,cs),
(484,557.667,o),
(470.667,566,o),
(452,566,cs),
(428,566,o),
(420,546.667,o),
(420,532,cs),
(420,510.355,o),
(418.839,455,o),
(403,455,cs),
(404.428,455,o),
(353.48,452,o),
(310,452,cs),
(290.667,452,o),
(274,452.333,o),
(260,453,cs),
(246,453.667,o),
(229.667,454.333,o),
(211,455,c),
(211,755,l),
(484,755,ls),
(498.861,755,o),
(521,754.133,o),
(521,727,cs),
(521,640,ls),
(521,621.333,o),
(527.667,600,o),
(557,600,cs),
(579.667,600,o),
(588,614,o),
(588,646,cs),
(588,785,ls),
(588,813,o),
(578.667,821,o),
(560,821,cs),
(480.449,821,o),
(396.039,819,o),
(333,819,cs),
(278.904,819,o),
(184.97,821,o),
(82,821,cs),
(62,821,o),
(41,818,o),
(41,794,cs),
(41,776.667,o),
(58.333,769,o),
(81,769,cs),
(95.58,769,o),
(134,769.432,o),
(134,730,cs),
(134,618.008,o),
(140,561.059,o),
(140,425,cs),
(140,344.921,o),
(139,278.739,o),
(139,233,cs),
(139,185.69,o),
(138,135.649,o),
(138,84,cs),
(138,56,o),
(115.667,48,o),
(77,48,cs),
(50.333,48,o),
(38,42.333,o),
(38,21,cs),
(38,2.333,o),
(61.333,0,o),
(84,0,cs),
(124.667,0,o),
(166.833,0.333,o),
(210.5,1,cs),
(254.167,1.667,o),
(296.333,2,o),
(337,2,cs),
(377.667,2,o),
(417.167,1.667,o),
(455.5,1,cs),
(493.833,0.333,o),
(533.333,0,o),
(574,0,cs),
(600.667,0,o),
(613.333,-0.333,o),
(616,33,cs),
(626.877,141.766,o),
(632,292.348,o),
(632,282,cs),
(632,302,o),
(620.667,315,o),
(602,315,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 0 1 0 106 0 1 6 1 106 0 5 6 8 8 5 96 0 7 8 10 8 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 10 0 11 13 10 11 91 0 8 8 6 84 0 6 6 12 67 0 12 12 9 83 0 9 9 15 67 0 13 13 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 0 1 0 106 0 1 6 1 106 0 5 6 8 8 5 96 0 7 8 10 8 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 0 8 8 6 84 0 6 6 12 67 0 13 13 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
0 0 1 0 106 0 1 6 1 106 0 5 6 8 8 5 96 0 7 8 10 8 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 0 8 8 6 84 0 6 6 14 67 0 13 13 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
17 16 138 136 135 128 122 120 110 108 102 93 92 90 83 81 76 64 60 57 40 38 34 26 16 149 17 149 38 34 15 17
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(148.333,1.333,o),
(228.667,2,o),
(310,2,cs),
(350.667,2,o),
(390.167,1.667,o),
(428.5,1,cs),
(466.833,0.333,o),
(506.333,0,o),
(547,0,cs),
(573.667,0,o),
(586.333,-0.333,o),
(589,33,cs),
(599.644,139.44,o),
(605,285.132,o),
(605,277,cs),
(605,293,o),
(604.667,310,o),
(586,310,cs),
(582.667,310,o),
(579.167,307.167,o),
(575.5,301.5,cs),
(571.833,295.833,o),
(569.667,286.333,o),
(569,273,cs),
(563.922,166.353,o),
(558.061,99.79,o),
(556,73,cs),
(553.388,39.044,o),
(534.049,36,o),
(513,36,cs),
(184,36,l),
(184,401,l),
(222.667,402.333,o),
(259.333,403,o),
(298,403,cs),
(317.333,403,o),
(333,402.833,o),
(345,402.5,cs),
(357,402.167,o),
(367.667,402,o),
(377,402,cs),
(416.501,402,o),
(425,345.97,o),
(425,309,cs),
(425,291.667,o),
(432.667,280,o),
(442,280,cs),
(444.667,280,o),
(447.833,281.667,o),
(451.5,285,cs),
(455.167,288.333,o),
(457,295.667,o),
(457,307,cs),
(457,325.667,o),
(456.667,344.333,o),
(456,363,cs),
(455.333,381.667,o),
(455,400.667,o),
(455,420,cs),
(455,439.333,o),
(455.333,458.167,o),
(456,476.5,cs),
(456.667,494.833,o),
(457,513.667,o),
(457,533,cs),
(457,547.667,o),
(456,560,o),
(440,560,cs),
(426.277,560,o),
(423,541.121,o),
(423,530,cs),
(423,471.034,o),
(417.262,440,o),
(406,440,cs),
(407.48,440,o),
(346.73,437,o),
(298,437,cs),
(278.667,437,o),
(259.667,437.333,o),
(241,438,cs),
(222.333,438.667,o),
(203.333,439.333,o),
(184,440,c),
(184,785,l),
(487,785,ls),
(500.333,785,o),
(524,782.333,o),
(524,757,cs),
(524,645,ls),
(524,626.333,o),
(524,605,o),
(544,605,cs),
(558.667,605,o),
(561,625.667,o),
(561,651,cs),
(561,785,ls),
(561,813,o),
(551.667,821,o),
(533,821,cs),
(453.449,821,o),
(369.039,819,o),
(306,819,cs),
(253.771,819,o),
(163.591,821,o),
(65,821,cs),
(45,821,o),
(24,818.667,o),
(24,804,cs),
(24,789.333,o),
(41.333,789,o),
(64,789,cs),
(92.603,789,o),
(137,788.308,o),
(137,750,cs),
(137,632.98,o),
(143,567.873,o),
(143,425,cs),
(143,339.646,o),
(142,269.59,o),
(142,222,cs),
(142,173.136,o),
(141,119.911,o),
(141,64,cs),
(141,50,o),
(135.333,40.5,o),
(124,35.5,cs),
(112.667,30.5,o),
(91.333,28,o),
(60,28,cs),
(46.667,28,o),
(36.833,27,o),
(30.5,25,cs),
(24.167,23,o),
(21,18.333,o),
(21,11,cs),
(21,0.333,o),
(47,0,o),
(67,0,cs)
);
},
{
closed = 1;
nodes = (
(380.333,875,o),
(383,878.667,o),
(383,886,cs),
(383,910.697,o),
(307.988,972,o),
(288,972,cs),
(277.333,972,o),
(269,968.667,o),
(269,950,cs),
(269,928.367,o),
(358.689,875,o),
(375,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 0 1 0 106 0 1 6 1 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 10 0 11 13 10 11 91 8 1 5 5 6 83 0 6 6 12 67 0 12 12 9 83 0 9 9 15 67 0 13 13 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 0 1 0 106 0 1 6 1 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 8 1 5 5 6 83 0 6 6 12 67 0 13 13 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 72 values pushed */
0 0 1 0 106 0 1 6 1 106 0 7 5 10 5 7 10 104 14 1 2 12 11 12 2 11 104 0 4 13 3 13 4 96 0 9 0 12 2 9 12 91 0 10 0 11 13 10 11 91 8 1 5 5 6 83 0 6 6 14 67 0 13 13 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
16 15 137 135 134 127 121 119 109 107 99 90 89 87 82 80 75 63 59 56 39 37 33 25 15 148 16 148 37 34 15 17
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = Egrave;
unicode = 200;
},
{
glyphname = Emacron;
kernLeft = B;
kernRight = AE;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(589,318,o),
(565.333,310.333,o),
(564,281,cs),
(559.317,201.39,o),
(555.143,183.141,o),
(551,121,cs),
(548.388,87.044,o),
(529.049,84,o),
(508,84,cs),
(230,84,l),
(230,377,l),
(279.731,377,o),
(266.898,379,o),
(318,379,cs),
(331.333,379,o),
(342.333,378.833,o),
(351,378.5,cs),
(359.667,378.167,o),
(366.667,378,o),
(372,378,cs),
(407.168,378,o),
(420,337.774,o),
(420,310,cs),
(420,292.667,o),
(426.333,275,o),
(461,275,cs),
(489,275,o),
(503,286,o),
(503,308,cs),
(503,323.333,o),
(502.667,341,o),
(502,361,cs),
(501.333,381,o),
(501,400.667,o),
(501,420,cs),
(501,439.333,o),
(501.333,457.833,o),
(502,475.5,cs),
(502.667,493.167,o),
(503,511.667,o),
(503,531,cs),
(503,563,o),
(482.667,570,o),
(460,570,cs),
(432,570,o),
(418,553,o),
(418,533,cs),
(418,512.353,o),
(416.681,464,o),
(401,464,cs),
(402.208,464,o),
(355.001,461,o),
(318,461,cs),
(283.754,461,o),
(264.584,461.53,o),
(230,464,c),
(230,737,l),
(482,737,ls),
(504.667,737,o),
(519,733,o),
(519,709,cs),
(519,637,ls),
(519,618.333,o),
(531.333,597,o),
(566,597,cs),
(595.333,597,o),
(607,607,o),
(607,643,cs),
(607,785,ls),
(607,813,o),
(597.667,821,o),
(579,821,cs),
(499.449,821,o),
(415.039,819,o),
(352,819,cs),
(296.166,819,o),
(199.784,821,o),
(94,821,cs),
(51.333,821,o),
(37,815.667,o),
(37,781,cs),
(37,758.333,o),
(59.667,747,o),
(93,747,cs),
(121,747,o),
(132,746.667,o),
(132,708,cs),
(132,605.687,o),
(138,543.101,o),
(138,425,cs),
(138,348.925,o),
(137,287.269,o),
(137,246.5,cs),
(137,204.532,o),
(136,158.173,o),
(136,109,cs),
(136,86.333,o),
(127.667,75.667,o),
(89,73,cs),
(61,71.667,o),
(38,62.333,o),
(38,33,cs),
(38,10.333,o),
(51.333,0,o),
(86,0,cs),
(163.885,0,o),
(257.939,2,o),
(356,2,cs),
(396.667,2,o),
(436.167,1.667,o),
(474.5,1,cs),
(512.833,0.333,o),
(552.333,0,o),
(593,0,cs),
(626.333,0,o),
(632.333,5,o),
(635,33,cs),
(648.126,164.265,o),
(651,274.421,o),
(651,285,cs),
(651,307.667,o),
(631.667,318,o),
(613,318,cs)
);
},
{
closed = 1;
nodes = (
(493,965,o),
(474.667,964.5,o),
(454,963.5,cs),
(433.333,962.5,o),
(409,962,o),
(381,962,cs),
(338.698,962,o),
(290.437,964,o),
(260,964,cs),
(237.333,964,o),
(227,943.667,o),
(227,925,cs),
(227,906.333,o),
(241.333,885,o),
(260,885,cs),
(330.305,885,o),
(427.446,886,o),
(501,886,cs),
(529.782,886,o),
(537,912.801,o),
(537,928,cs),
(537,948,o),
(523.667,965,o),
(509,965,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
75 1 7 8 127 1 2 9 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
75 1 7 8 127 1 11 9 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 15 1 12 0 13 4 12 13 91 0 8 0 9 2 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 10 10 7 83 0 7 7 23 67 11 1 2 2 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 15 1 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 2 8 9 91 6 1 3 3 4 83 0 4 4 12 67 11 1 2 2 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 15 1 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 15 1 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 77 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 15 1 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 14 67 0 11 11 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
136 135 1 0 149 142 135 161 136 153 123 121 120 111 105 103 94 92 86 76 74 72 67 65 60 48 44 42 26 24 20 10 0 134 1 134 16 15
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(584.667,315,o),
(567.333,306,o),
(566,278,cs),
(560.867,185.6,o),
(555.166,128.988,o),
(553,103,cs),
(550.388,69.044,o),
(531.049,66,o),
(510,66,cs),
(211,66,l),
(211,386,l),
(249.667,387.333,o),
(271.333,388,o),
(310,388,cs),
(325.333,388,o),
(338,387.833,o),
(348,387.5,cs),
(358,387.167,o),
(366.667,387,o),
(374,387,cs),
(413.224,387,o),
(422,334.438,o),
(422,306,cs),
(422,288.667,o),
(427.667,277,o),
(453,277,cs),
(470.333,277,o),
(484,281.333,o),
(484,304,cs),
(484,322.667,o),
(483.667,341.833,o),
(483,361.5,cs),
(482.333,381.167,o),
(482,400.667,o),
(482,420,cs),
(482,439.333,o),
(482.333,458.5,o),
(483,477.5,cs),
(483.667,496.5,o),
(484,515.667,o),
(484,535,cs),
(484,557.667,o),
(470.667,566,o),
(452,566,cs),
(428,566,o),
(420,546.667,o),
(420,532,cs),
(420,510.355,o),
(418.839,455,o),
(403,455,cs),
(404.428,455,o),
(353.48,452,o),
(310,452,cs),
(290.667,452,o),
(274,452.333,o),
(260,453,cs),
(246,453.667,o),
(229.667,454.333,o),
(211,455,c),
(211,755,l),
(484,755,ls),
(498.861,755,o),
(521,754.133,o),
(521,727,cs),
(521,640,ls),
(521,621.333,o),
(527.667,600,o),
(557,600,cs),
(579.667,600,o),
(588,614,o),
(588,646,cs),
(588,785,ls),
(588,813,o),
(578.667,821,o),
(560,821,cs),
(480.449,821,o),
(396.039,819,o),
(333,819,cs),
(278.904,819,o),
(184.97,821,o),
(82,821,cs),
(62,821,o),
(41,818,o),
(41,794,cs),
(41,776.667,o),
(58.333,769,o),
(81,769,cs),
(95.58,769,o),
(134,769.432,o),
(134,730,cs),
(134,618.008,o),
(140,561.059,o),
(140,425,cs),
(140,344.921,o),
(139,278.739,o),
(139,233,cs),
(139,185.69,o),
(138,135.649,o),
(138,84,cs),
(138,56,o),
(115.667,48,o),
(77,48,cs),
(50.333,48,o),
(38,42.333,o),
(38,21,cs),
(38,2.333,o),
(61.333,0,o),
(84,0,cs),
(124.667,0,o),
(166.833,0.333,o),
(210.5,1,cs),
(254.167,1.667,o),
(296.333,2,o),
(337,2,cs),
(377.667,2,o),
(417.167,1.667,o),
(455.5,1,cs),
(493.833,0.333,o),
(533.333,0,o),
(574,0,cs),
(600.667,0,o),
(613.333,-0.333,o),
(616,33,cs),
(626.877,141.766,o),
(632,292.348,o),
(632,282,cs),
(632,302,o),
(620.667,315,o),
(602,315,cs)
);
},
{
closed = 1;
nodes = (
(475,942,o),
(457,942,o),
(436,941,cs),
(415,940,o),
(391,939,o),
(363,939,cs),
(321,939,o),
(272,941,o),
(242,941,cs),
(223,941,o),
(216,926,o),
(216,911,cs),
(216,896,o),
(227,880,o),
(242,880,cs),
(312,880,o),
(409,881,o),
(483,881,cs),
(506,881,o),
(512,903,o),
(512,914,cs),
(512,929,o),
(502,942,o),
(491,942,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 79 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 15 1 12 0 13 4 12 13 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 10 10 7 83 0 7 7 15 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 15 1 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 77 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 15 1 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 14 67 0 11 11 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
136 135 2 1 147 140 135 159 136 151 123 121 120 113 107 105 95 93 87 78 77 75 68 66 61 49 45 42 25 23 19 11 1 134 2 134 16 26
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(148.333,1.333,o),
(228.667,2,o),
(310,2,cs),
(350.667,2,o),
(390.167,1.667,o),
(428.5,1,cs),
(466.833,0.333,o),
(506.333,0,o),
(547,0,cs),
(573.667,0,o),
(586.333,-0.333,o),
(589,33,cs),
(599.644,139.44,o),
(605,285.132,o),
(605,277,cs),
(605,293,o),
(604.667,310,o),
(586,310,cs),
(582.667,310,o),
(579.167,307.167,o),
(575.5,301.5,cs),
(571.833,295.833,o),
(569.667,286.333,o),
(569,273,cs),
(563.922,166.353,o),
(558.061,99.79,o),
(556,73,cs),
(553.388,39.044,o),
(534.049,36,o),
(513,36,cs),
(184,36,l),
(184,401,l),
(222.667,402.333,o),
(259.333,403,o),
(298,403,cs),
(317.333,403,o),
(333,402.833,o),
(345,402.5,cs),
(357,402.167,o),
(367.667,402,o),
(377,402,cs),
(416.501,402,o),
(425,345.97,o),
(425,309,cs),
(425,291.667,o),
(432.667,280,o),
(442,280,cs),
(444.667,280,o),
(447.833,281.667,o),
(451.5,285,cs),
(455.167,288.333,o),
(457,295.667,o),
(457,307,cs),
(457,325.667,o),
(456.667,344.333,o),
(456,363,cs),
(455.333,381.667,o),
(455,400.667,o),
(455,420,cs),
(455,439.333,o),
(455.333,458.167,o),
(456,476.5,cs),
(456.667,494.833,o),
(457,513.667,o),
(457,533,cs),
(457,547.667,o),
(456,560,o),
(440,560,cs),
(426.277,560,o),
(423,541.121,o),
(423,530,cs),
(423,471.034,o),
(417.262,440,o),
(406,440,cs),
(407.48,440,o),
(346.73,437,o),
(298,437,cs),
(278.667,437,o),
(259.667,437.333,o),
(241,438,cs),
(222.333,438.667,o),
(203.333,439.333,o),
(184,440,c),
(184,785,l),
(487,785,ls),
(500.333,785,o),
(524,782.333,o),
(524,757,cs),
(524,645,ls),
(524,626.333,o),
(524,605,o),
(544,605,cs),
(558.667,605,o),
(561,625.667,o),
(561,651,cs),
(561,785,ls),
(561,813,o),
(551.667,821,o),
(533,821,cs),
(453.449,821,o),
(369.039,819,o),
(306,819,cs),
(253.771,819,o),
(163.591,821,o),
(65,821,cs),
(45,821,o),
(24,818.667,o),
(24,804,cs),
(24,789.333,o),
(41.333,789,o),
(64,789,cs),
(92.603,789,o),
(137,788.308,o),
(137,750,cs),
(137,632.98,o),
(143,567.873,o),
(143,425,cs),
(143,339.646,o),
(142,269.59,o),
(142,222,cs),
(142,173.136,o),
(141,119.911,o),
(141,64,cs),
(141,50,o),
(135.333,40.5,o),
(124,35.5,cs),
(112.667,30.5,o),
(91.333,28,o),
(60,28,cs),
(46.667,28,o),
(36.833,27,o),
(30.5,25,cs),
(24.167,23,o),
(21,18.333,o),
(21,11,cs),
(21,0.333,o),
(47,0,o),
(67,0,cs)
);
},
{
closed = 1;
nodes = (
(287.305,875,o),
(384.446,876,o),
(458,876,cs),
(472.667,876,o),
(477,887.333,o),
(477,894,cs),
(477,900.667,o),
(471.333,907,o),
(466,907,cs),
(450,907,o),
(431.667,906.5,o),
(411,905.5,cs),
(390.333,904.5,o),
(366,904,o),
(338,904,cs),
(295.698,904,o),
(247.437,906,o),
(217,906,cs),
(206.333,906,o),
(201,897.667,o),
(201,891,cs),
(201,884.333,o),
(207.667,875,o),
(217,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 15 1 12 0 13 4 12 13 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 10 10 7 83 0 7 7 15 67 0 11 11 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 15 1 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 11 11 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 71 values pushed */
0 5 3 8 3 5 8 104 14 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 15 1 12 0 13 4 12 13 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 14 67 0 11 11 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
135 134 1 0 146 139 134 158 135 150 122 120 119 112 106 104 94 92 84 75 74 72 67 65 60 48 44 41 24 22 18 10 0 133 1 133 16 15
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = Emacron;
unicode = 274;
},
{
glyphname = Eogonek;
kernLeft = B;
kernRight = AE;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(589,318,o),
(565.333,310.333,o),
(564,281,cs),
(559.317,201.39,o),
(555.143,183.141,o),
(551,121,cs),
(548.388,87.044,o),
(529.049,84,o),
(508,84,cs),
(230,84,l),
(230,377,l),
(279.731,377,o),
(266.898,379,o),
(318,379,cs),
(331.333,379,o),
(342.333,378.833,o),
(351,378.5,cs),
(359.667,378.167,o),
(366.667,378,o),
(372,378,cs),
(407.168,378,o),
(420,337.774,o),
(420,310,cs),
(420,292.667,o),
(426.333,275,o),
(461,275,cs),
(489,275,o),
(503,286,o),
(503,308,cs),
(503,323.333,o),
(502.667,341,o),
(502,361,cs),
(501.333,381,o),
(501,400.667,o),
(501,420,cs),
(501,439.333,o),
(501.333,457.833,o),
(502,475.5,cs),
(502.667,493.167,o),
(503,511.667,o),
(503,531,cs),
(503,563,o),
(482.667,570,o),
(460,570,cs),
(432,570,o),
(418,553,o),
(418,533,cs),
(418,512.353,o),
(416.681,464,o),
(401,464,cs),
(402.208,464,o),
(355.001,461,o),
(318,461,cs),
(283.754,461,o),
(264.584,461.53,o),
(230,464,c),
(230,737,l),
(482,737,ls),
(504.667,737,o),
(519,733,o),
(519,709,cs),
(519,637,ls),
(519,618.333,o),
(531.333,597,o),
(566,597,cs),
(595.333,597,o),
(607,607,o),
(607,643,cs),
(607,785,ls),
(607,813,o),
(597.667,821,o),
(579,821,cs),
(499.449,821,o),
(415.039,819,o),
(352,819,cs),
(296.166,819,o),
(199.784,821,o),
(94,821,cs),
(51.333,821,o),
(37,815.667,o),
(37,781,cs),
(37,758.333,o),
(59.667,747,o),
(93,747,cs),
(121,747,o),
(132,746.667,o),
(132,708,cs),
(132,605.687,o),
(138,543.101,o),
(138,425,cs),
(138,348.925,o),
(137,287.269,o),
(137,246.5,cs),
(137,204.532,o),
(136,158.173,o),
(136,109,cs),
(136,86.333,o),
(127.667,75.667,o),
(89,73,cs),
(61,71.667,o),
(38,62.333,o),
(38,33,cs),
(38,10.333,o),
(51.333,0,o),
(86,0,cs),
(163.885,0,o),
(257.939,2,o),
(356,2,cs),
(405.333,2,o),
(452.333,1.333,o),
(499,0,c),
(474.682,-13.51,o),
(435,-37.045,o),
(435,-80,cs),
(435,-131.579,o),
(495.091,-155,o),
(545,-155,cs),
(597.345,-155,o),
(628,-125.646,o),
(628,-102,cs),
(628,-90,o),
(616.333,-78,o),
(603,-78,cs),
(583.449,-78,o),
(584.136,-102,o),
(543,-102,cs),
(528.333,-102,o),
(514,-95.667,o),
(514,-81,cs),
(514,-54.333,o),
(528.333,-17.333,o),
(555,0,c),
(593,0,ls),
(626.333,0,o),
(632.333,5,o),
(635,33,cs),
(648.126,164.265,o),
(651,274.421,o),
(651,285,cs),
(651,307.667,o),
(631.667,318,o),
(613,318,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
105 1 11 12 157 1 6 13 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
105 1 11 12 157 1 15 13 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 9 7 12 7 9 12 104 0 3 1 2 1 3 2 104 0 12 0 13 6 12 13 91 0 2 0 4 2 4 87 10 1 7 7 8 83 0 8 8 12 67 0 14 14 11 83 0 11 11 23 67 16 1 0 0 1 83 5 1 1 1 13 67 15 1 6 6 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 9 7 12 7 9 12 104 0 3 1 2 1 3 2 104 0 11 0 14 0 11 14 91 0 12 0 13 6 12 13 91 0 2 0 4 2 4 87 10 1 7 7 8 83 0 8 8 12 67 16 1 0 0 1 83 5 1 1 1 13 67 15 1 6 6 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 81 values pushed */
0 9 7 12 7 9 12 104 0 6 15 1 15 6 96 0 3 1 2 1 3 2 104 0 11 0 14 0 11 14 91 0 12 0 13 15 12 13 91 0 2 0 4 2 4 87 10 1 7 7 8 83 0 8 8 12 67 16 1 0 0 1 83 5 1 1 1 13 67 0 15 15 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 87 values pushed */
0 7 8 10 10 7 96 0 9 10 12 10 9 12 104 0 6 15 1 15 6 96 0 3 1 2 1 3 2 104 0 11 0 14 0 11 14 91 0 12 0 13 15 12 13 91 0 2 0 4 2 4 87 0 10 10 8 84 0 8 8 12 67 16 1 0 0 1 83 5 1 1 1 13 67 0 15 15 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 87 values pushed */
0 7 8 10 10 7 96 0 9 10 12 10 9 12 104 0 6 15 1 15 6 96 0 3 1 2 1 3 2 104 0 11 0 14 0 11 14 91 0 12 0 13 15 12 13 91 0 2 0 4 2 4 87 0 10 10 8 84 0 8 8 14 67 16 1 0 0 1 83 5 1 1 1 13 67 0 15 15 1 83 5 1 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
1 0 153 151 150 141 135 133 124 122 116 106 104 102 97 95 90 78 74 72 56 54 50 41 32 30 24 22 19 17 12 10 0 164 1 164 17 15
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(584.667,315,o),
(567.333,306,o),
(566,278,cs),
(560.867,185.6,o),
(555.166,128.988,o),
(553,103,cs),
(550.388,69.044,o),
(531.049,66,o),
(510,66,cs),
(211,66,l),
(211,386,l),
(249.667,387.333,o),
(271.333,388,o),
(310,388,cs),
(325.333,388,o),
(338,387.833,o),
(348,387.5,cs),
(358,387.167,o),
(366.667,387,o),
(374,387,cs),
(413.224,387,o),
(422,334.438,o),
(422,306,cs),
(422,288.667,o),
(427.667,277,o),
(453,277,cs),
(470.333,277,o),
(484,281.333,o),
(484,304,cs),
(484,322.667,o),
(483.667,341.833,o),
(483,361.5,cs),
(482.333,381.167,o),
(482,400.667,o),
(482,420,cs),
(482,439.333,o),
(482.333,458.5,o),
(483,477.5,cs),
(483.667,496.5,o),
(484,515.667,o),
(484,535,cs),
(484,557.667,o),
(470.667,566,o),
(452,566,cs),
(428,566,o),
(420,546.667,o),
(420,532,cs),
(420,510.355,o),
(418.839,455,o),
(403,455,cs),
(404.428,455,o),
(353.48,452,o),
(310,452,cs),
(290.667,452,o),
(274,452.333,o),
(260,453,cs),
(246,453.667,o),
(229.667,454.333,o),
(211,455,c),
(211,755,l),
(484,755,ls),
(498.861,755,o),
(521,754.133,o),
(521,727,cs),
(521,640,ls),
(521,621.333,o),
(527.667,600,o),
(557,600,cs),
(579.667,600,o),
(588,614,o),
(588,646,cs),
(588,785,ls),
(588,813,o),
(578.667,821,o),
(560,821,cs),
(480.449,821,o),
(396.039,819,o),
(333,819,cs),
(278.904,819,o),
(184.97,821,o),
(82,821,cs),
(62,821,o),
(41,818,o),
(41,794,cs),
(41,776.667,o),
(58.333,769,o),
(81,769,cs),
(95.58,769,o),
(134,769.432,o),
(134,730,cs),
(134,618.008,o),
(140,561.059,o),
(140,425,cs),
(140,344.921,o),
(139,278.739,o),
(139,233,cs),
(139,185.69,o),
(138,135.649,o),
(138,84,cs),
(138,56,o),
(115.667,48,o),
(77,48,cs),
(50.333,48,o),
(38,42.333,o),
(38,21,cs),
(38,2.333,o),
(61.333,0,o),
(84,0,cs),
(124.667,0,o),
(166.833,0.333,o),
(210.5,1,cs),
(254.167,1.667,o),
(296.333,2,o),
(337,2,cs),
(377.667,2,o),
(417.167,1.667,o),
(455.5,1,cs),
(493.833,0.333,o),
(533.333,0,o),
(574,0,cs),
(600.667,0,o),
(613.333,-0.333,o),
(616,33,cs),
(626.877,141.766,o),
(632,292.348,o),
(632,282,cs),
(632,302,o),
(620.667,315,o),
(602,315,cs)
);
},
{
closed = 1;
nodes = (
(314,7,o),
(302,0,o),
(291,-9,cs),
(272,-24,o),
(255,-45,o),
(255,-76,cs),
(255,-119,o),
(297,-149,o),
(356,-149,cs),
(404,-149,o),
(434,-108,o),
(434,-98,cs),
(434,-87,o),
(428,-76,o),
(413,-76,cs),
(409,-76,o),
(405,-78,o),
(400,-82,cs),
(395,-87,o),
(389,-92,o),
(384,-97,cs),
(378,-103,o),
(367,-106,o),
(350,-106,cs),
(334,-106,o),
(319,-91,o),
(319,-75,cs),
(319,-56,o),
(333,-2,o),
(378,13,c),
(328,14,l),
(328,14,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 92 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 16 1 0 10 9 10 0 9 104 0 11 9 2 15 11 96 0 2 15 15 2 94 0 13 1 12 1 13 12 104 0 8 0 9 11 8 9 91 0 12 0 14 12 14 87 0 6 6 4 84 0 4 4 12 67 0 10 10 7 83 0 7 7 15 67 17 1 15 15 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 90 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 16 1 0 10 9 10 0 9 104 0 11 9 2 15 11 96 0 2 15 15 2 94 0 13 1 12 1 13 12 104 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 12 0 14 12 14 87 0 6 6 4 84 0 4 4 12 67 17 1 15 15 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 91 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 16 1 0 10 9 10 0 9 104 0 11 9 2 9 11 2 104 0 2 15 15 2 94 0 13 1 12 1 13 12 104 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 12 0 14 12 14 87 0 6 6 4 84 0 4 4 12 67 17 1 15 15 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 92 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 16 1 0 10 9 10 0 9 104 0 11 9 2 9 11 2 104 0 2 15 9 2 15 102 0 13 1 12 1 13 12 104 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 12 0 14 12 14 87 0 6 6 4 84 0 4 4 12 67 17 1 15 15 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 92 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 16 1 0 10 9 10 0 9 104 0 11 9 2 9 11 2 104 0 2 15 9 2 15 102 0 13 1 12 1 13 12 104 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 12 0 14 12 14 87 0 6 6 4 84 0 4 4 14 67 17 1 15 15 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
135 135 2 1 135 164 135 164 157 155 149 147 144 142 123 121 120 113 107 105 95 93 87 78 77 75 68 66 61 49 45 42 25 23 19 11 1 134 2 134 18 26
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(377.13,-149,o),
(407,-107.791,o),
(407,-98,cs),
(407,-90,o),
(405,-82,o),
(393,-82,cs),
(373.96,-82,o),
(367.683,-122,o),
(331,-122,cs),
(300.028,-122,o),
(292,-92.466,o),
(292,-75,cs),
(292,-60.333,o),
(299.333,-21.667,o),
(330,1,c),
(366.667,0.333,o),
(402.5,0,o),
(437.5,0,cs),
(472.5,0,o),
(509,0,o),
(547,0,cs),
(573.667,0,o),
(586.333,-0.333,o),
(589,33,cs),
(599.644,139.44,o),
(605,285.132,o),
(605,277,cs),
(605,293,o),
(604.667,310,o),
(586,310,cs),
(582.667,310,o),
(579.167,307.167,o),
(575.5,301.5,cs),
(571.833,295.833,o),
(569.667,286.333,o),
(569,273,cs),
(563.922,166.353,o),
(558.061,99.79,o),
(556,73,cs),
(553.388,39.044,o),
(534.049,36,o),
(513,36,cs),
(184,36,l),
(184,401,l),
(222.667,402.333,o),
(259.333,403,o),
(298,403,cs),
(317.333,403,o),
(333,402.833,o),
(345,402.5,cs),
(357,402.167,o),
(367.667,402,o),
(377,402,cs),
(416.501,402,o),
(425,345.97,o),
(425,309,cs),
(425,291.667,o),
(432.667,280,o),
(442,280,cs),
(444.667,280,o),
(447.833,281.667,o),
(451.5,285,cs),
(455.167,288.333,o),
(457,295.667,o),
(457,307,cs),
(457,325.667,o),
(456.667,344.333,o),
(456,363,cs),
(455.333,381.667,o),
(455,400.667,o),
(455,420,cs),
(455,439.333,o),
(455.333,458.167,o),
(456,476.5,cs),
(456.667,494.833,o),
(457,513.667,o),
(457,533,cs),
(457,547.667,o),
(456,560,o),
(440,560,cs),
(426.277,560,o),
(423,541.121,o),
(423,530,cs),
(423,471.034,o),
(417.262,440,o),
(406,440,cs),
(407.48,440,o),
(346.73,437,o),
(298,437,cs),
(278.667,437,o),
(259.667,437.333,o),
(241,438,cs),
(222.333,438.667,o),
(203.333,439.333,o),
(184,440,c),
(184,785,l),
(487,785,ls),
(500.333,785,o),
(524,782.333,o),
(524,757,cs),
(524,645,ls),
(524,626.333,o),
(524,605,o),
(544,605,cs),
(558.667,605,o),
(561,625.667,o),
(561,651,cs),
(561,785,ls),
(561,813,o),
(551.667,821,o),
(533,821,cs),
(453.449,821,o),
(369.039,819,o),
(306,819,cs),
(253.771,819,o),
(163.591,821,o),
(65,821,cs),
(45,821,o),
(24,818.667,o),
(24,804,cs),
(24,789.333,o),
(41.333,789,o),
(64,789,cs),
(92.603,789,o),
(137,788.308,o),
(137,750,cs),
(137,632.98,o),
(143,567.873,o),
(143,425,cs),
(143,339.646,o),
(142,269.59,o),
(142,222,cs),
(142,173.136,o),
(141,119.911,o),
(141,64,cs),
(141,50,o),
(135.333,40.5,o),
(124,35.5,cs),
(112.667,30.5,o),
(91.333,28,o),
(60,28,cs),
(46.667,28,o),
(36.833,27,o),
(30.5,25,cs),
(24.167,23,o),
(21,18.333,o),
(21,11,cs),
(21,0.333,o),
(47,0,o),
(67,0,cs),
(143,1.333,o),
(219,2,o),
(295,2,c),
(275,-12.667,o),
(248,-37.333,o),
(248,-76,cs),
(248,-118.667,o),
(282.333,-149,o),
(329,-149,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 81 values pushed */
0 9 7 12 7 9 12 104 16 1 0 14 13 14 0 13 104 0 6 15 1 15 6 1 104 0 3 1 2 1 3 2 104 0 12 0 13 15 12 13 91 0 2 0 4 2 4 87 10 1 7 7 8 83 0 8 8 12 67 0 14 14 11 83 0 11 11 15 67 0 15 15 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 79 values pushed */
0 9 7 12 7 9 12 104 16 1 0 14 13 14 0 13 104 0 6 15 1 15 6 1 104 0 3 1 2 1 3 2 104 0 11 0 14 0 11 14 91 0 12 0 13 15 12 13 91 0 2 0 4 2 4 87 10 1 7 7 8 83 0 8 8 12 67 0 15 15 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 79 values pushed */
0 9 7 12 7 9 12 104 16 1 0 14 13 14 0 13 104 0 6 15 1 15 6 1 104 0 3 1 2 1 3 2 104 0 11 0 14 0 11 14 91 0 12 0 13 15 12 13 91 0 2 0 4 2 4 87 10 1 7 7 8 83 0 8 8 14 67 0 15 15 1 83 5 1 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
1 0 149 147 146 139 133 131 121 119 111 102 101 99 94 92 87 75 71 68 51 49 45 41 36 34 28 26 23 21 14 10 0 160 1 160 17 15
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = Eogonek;
unicode = 280;
},
{
glyphname = Etilde;
kernLeft = B;
kernRight = AE;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(589,318,o),
(565.333,310.333,o),
(564,281,cs),
(559.317,201.39,o),
(555.143,183.141,o),
(551,121,cs),
(548.388,87.044,o),
(529.049,84,o),
(508,84,cs),
(230,84,l),
(230,377,l),
(279.731,377,o),
(266.898,379,o),
(318,379,cs),
(331.333,379,o),
(342.333,378.833,o),
(351,378.5,cs),
(359.667,378.167,o),
(366.667,378,o),
(372,378,cs),
(407.168,378,o),
(420,337.774,o),
(420,310,cs),
(420,292.667,o),
(426.333,275,o),
(461,275,cs),
(489,275,o),
(503,286,o),
(503,308,cs),
(503,323.333,o),
(502.667,341,o),
(502,361,cs),
(501.333,381,o),
(501,400.667,o),
(501,420,cs),
(501,439.333,o),
(501.333,457.833,o),
(502,475.5,cs),
(502.667,493.167,o),
(503,511.667,o),
(503,531,cs),
(503,563,o),
(482.667,570,o),
(460,570,cs),
(432,570,o),
(418,553,o),
(418,533,cs),
(418,512.353,o),
(416.681,464,o),
(401,464,cs),
(402.208,464,o),
(355.001,461,o),
(318,461,cs),
(283.754,461,o),
(264.584,461.53,o),
(230,464,c),
(230,737,l),
(482,737,ls),
(504.667,737,o),
(519,733,o),
(519,709,cs),
(519,637,ls),
(519,618.333,o),
(531.333,597,o),
(566,597,cs),
(595.333,597,o),
(607,607,o),
(607,643,cs),
(607,785,ls),
(607,813,o),
(597.667,821,o),
(579,821,cs),
(499.449,821,o),
(415.039,819,o),
(352,819,cs),
(296.166,819,o),
(199.784,821,o),
(94,821,cs),
(51.333,821,o),
(37,815.667,o),
(37,781,cs),
(37,758.333,o),
(59.667,747,o),
(93,747,cs),
(121,747,o),
(132,746.667,o),
(132,708,cs),
(132,605.687,o),
(138,543.101,o),
(138,425,cs),
(138,348.925,o),
(137,287.269,o),
(137,246.5,cs),
(137,204.532,o),
(136,158.173,o),
(136,109,cs),
(136,86.333,o),
(127.667,75.667,o),
(89,73,cs),
(61,71.667,o),
(38,62.333,o),
(38,33,cs),
(38,10.333,o),
(51.333,0,o),
(86,0,cs),
(163.885,0,o),
(257.939,2,o),
(356,2,cs),
(396.667,2,o),
(436.167,1.667,o),
(474.5,1,cs),
(512.833,0.333,o),
(552.333,0,o),
(593,0,cs),
(626.333,0,o),
(632.333,5,o),
(635,33,cs),
(648.126,164.265,o),
(651,274.421,o),
(651,285,cs),
(651,307.667,o),
(631.667,318,o),
(613,318,cs)
);
},
{
closed = 1;
nodes = (
(178,858,o),
(185,842,o),
(197,842,cs),
(217.593,842,o),
(241.709,867,o),
(281,867,cs),
(319.662,867,o),
(362.294,843,o),
(418,843,cs),
(450.676,843,o),
(529,860.584,o),
(529,918,cs),
(529,939.333,o),
(513.667,953,o),
(507,953,cs),
(502.333,953,o),
(492.333,948.667,o),
(477,940,cs),
(458.333,929.333,o),
(435.667,923,o),
(417,923,cs),
(377.599,923,o),
(316.495,951,o),
(280,951,cs),
(255.333,951,o),
(232.667,945,o),
(212,933,cs),
(193.333,922.333,o),
(178,907.333,o),
(178,878,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
75 1 7 8 127 1 2 9 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
75 1 7 8 127 1 11 9 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
0 5 3 8 3 5 8 104 18 1 0 10 9 10 0 9 104 14 1 12 0 16 15 12 16 91 0 13 17 1 15 4 13 15 91 0 8 0 9 2 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 10 10 7 83 0 7 7 23 67 11 1 2 2 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 5 3 8 3 5 8 104 18 1 0 10 9 10 0 9 104 14 1 12 0 16 15 12 16 91 0 13 17 1 15 4 13 15 91 0 7 0 10 0 7 10 91 0 8 0 9 2 8 9 91 6 1 3 3 4 83 0 4 4 12 67 11 1 2 2 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 5 3 8 3 5 8 104 18 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 14 1 12 0 16 15 12 16 91 0 13 17 1 15 4 13 15 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 86 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 18 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 14 1 12 0 16 15 12 16 91 0 13 17 1 15 4 13 15 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 86 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 18 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 14 1 12 0 16 15 12 16 91 0 13 17 1 15 4 13 15 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 14 67 0 11 11 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
1 0 169 167 164 162 159 157 151 149 146 144 141 139 123 121 120 111 105 103 94 92 86 76 74 72 67 65 60 48 44 42 26 24 20 10 0 134 1 134 19 15
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(584.667,315,o),
(567.333,306,o),
(566,278,cs),
(560.867,185.6,o),
(555.166,128.988,o),
(553,103,cs),
(550.388,69.044,o),
(531.049,66,o),
(510,66,cs),
(211,66,l),
(211,386,l),
(249.667,387.333,o),
(271.333,388,o),
(310,388,cs),
(325.333,388,o),
(338,387.833,o),
(348,387.5,cs),
(358,387.167,o),
(366.667,387,o),
(374,387,cs),
(413.224,387,o),
(422,334.438,o),
(422,306,cs),
(422,288.667,o),
(427.667,277,o),
(453,277,cs),
(470.333,277,o),
(484,281.333,o),
(484,304,cs),
(484,322.667,o),
(483.667,341.833,o),
(483,361.5,cs),
(482.333,381.167,o),
(482,400.667,o),
(482,420,cs),
(482,439.333,o),
(482.333,458.5,o),
(483,477.5,cs),
(483.667,496.5,o),
(484,515.667,o),
(484,535,cs),
(484,557.667,o),
(470.667,566,o),
(452,566,cs),
(428,566,o),
(420,546.667,o),
(420,532,cs),
(420,510.355,o),
(418.839,455,o),
(403,455,cs),
(404.428,455,o),
(353.48,452,o),
(310,452,cs),
(290.667,452,o),
(274,452.333,o),
(260,453,cs),
(246,453.667,o),
(229.667,454.333,o),
(211,455,c),
(211,755,l),
(484,755,ls),
(498.861,755,o),
(521,754.133,o),
(521,727,cs),
(521,640,ls),
(521,621.333,o),
(527.667,600,o),
(557,600,cs),
(579.667,600,o),
(588,614,o),
(588,646,cs),
(588,785,ls),
(588,813,o),
(578.667,821,o),
(560,821,cs),
(480.449,821,o),
(396.039,819,o),
(333,819,cs),
(278.904,819,o),
(184.97,821,o),
(82,821,cs),
(62,821,o),
(41,818,o),
(41,794,cs),
(41,776.667,o),
(58.333,769,o),
(81,769,cs),
(95.58,769,o),
(134,769.432,o),
(134,730,cs),
(134,618.008,o),
(140,561.059,o),
(140,425,cs),
(140,344.921,o),
(139,278.739,o),
(139,233,cs),
(139,185.69,o),
(138,135.649,o),
(138,84,cs),
(138,56,o),
(115.667,48,o),
(77,48,cs),
(50.333,48,o),
(38,42.333,o),
(38,21,cs),
(38,2.333,o),
(61.333,0,o),
(84,0,cs),
(124.667,0,o),
(166.833,0.333,o),
(210.5,1,cs),
(254.167,1.667,o),
(296.333,2,o),
(337,2,cs),
(377.667,2,o),
(417.167,1.667,o),
(455.5,1,cs),
(493.833,0.333,o),
(533.333,0,o),
(574,0,cs),
(600.667,0,o),
(613.333,-0.333,o),
(616,33,cs),
(626.877,141.766,o),
(632,292.348,o),
(632,282,cs),
(632,302,o),
(620.667,315,o),
(602,315,cs)
);
},
{
closed = 1;
nodes = (
(166,900,o),
(165,894,o),
(165,888,cs),
(165,873,o),
(171,860,o),
(182,860,cs),
(199,860,o),
(226,885,o),
(266,885,cs),
(305,885,o),
(347,861,o),
(403,861,cs),
(459,861,o),
(492,883,o),
(505,906,cs),
(508,912,o),
(510,918,o),
(510,925,cs),
(510,941,o),
(499,953,o),
(492,953,cs),
(489,953,o),
(485,952,o),
(482,951,cs),
(478,949,o),
(471,945,o),
(462,940,cs),
(439,929,o),
(419,923,o),
(402,923,cs),
(363,923,o),
(301,951,o),
(265,951,cs),
(240,951,o),
(218,945,o),
(197,933,cs),
(187,927,o),
(180,922,o),
(176,917,cs),
(172,912,o),
(169,908,o),
(168,905,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 88 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 18 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 14 1 12 0 16 15 12 16 91 0 13 17 1 15 4 13 15 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 10 10 7 83 0 7 7 15 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 86 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 18 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 14 1 12 0 16 15 12 16 91 0 13 17 1 15 4 13 15 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 12 67 0 11 11 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 86 values pushed */
0 3 4 6 6 3 96 0 5 6 8 6 5 8 104 18 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 14 1 12 0 16 15 12 16 91 0 13 17 1 15 4 13 15 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 0 6 6 4 84 0 4 4 14 67 0 11 11 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
2 1 169 167 164 162 159 157 151 149 146 144 141 139 123 121 120 113 107 105 95 93 87 78 77 75 68 66 61 49 45 42 25 23 19 11 1 134 2 134 19 26
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(148.333,1.333,o),
(228.667,2,o),
(310,2,cs),
(350.667,2,o),
(390.167,1.667,o),
(428.5,1,cs),
(466.833,0.333,o),
(506.333,0,o),
(547,0,cs),
(573.667,0,o),
(586.333,-0.333,o),
(589,33,cs),
(599.644,139.44,o),
(605,285.132,o),
(605,277,cs),
(605,293,o),
(604.667,310,o),
(586,310,cs),
(582.667,310,o),
(579.167,307.167,o),
(575.5,301.5,cs),
(571.833,295.833,o),
(569.667,286.333,o),
(569,273,cs),
(563.922,166.353,o),
(558.061,99.79,o),
(556,73,cs),
(553.388,39.044,o),
(534.049,36,o),
(513,36,cs),
(184,36,l),
(184,401,l),
(222.667,402.333,o),
(259.333,403,o),
(298,403,cs),
(317.333,403,o),
(333,402.833,o),
(345,402.5,cs),
(357,402.167,o),
(367.667,402,o),
(377,402,cs),
(416.501,402,o),
(425,345.97,o),
(425,309,cs),
(425,291.667,o),
(432.667,280,o),
(442,280,cs),
(444.667,280,o),
(447.833,281.667,o),
(451.5,285,cs),
(455.167,288.333,o),
(457,295.667,o),
(457,307,cs),
(457,325.667,o),
(456.667,344.333,o),
(456,363,cs),
(455.333,381.667,o),
(455,400.667,o),
(455,420,cs),
(455,439.333,o),
(455.333,458.167,o),
(456,476.5,cs),
(456.667,494.833,o),
(457,513.667,o),
(457,533,cs),
(457,547.667,o),
(456,560,o),
(440,560,cs),
(426.277,560,o),
(423,541.121,o),
(423,530,cs),
(423,471.034,o),
(417.262,440,o),
(406,440,cs),
(407.48,440,o),
(346.73,437,o),
(298,437,cs),
(278.667,437,o),
(259.667,437.333,o),
(241,438,cs),
(222.333,438.667,o),
(203.333,439.333,o),
(184,440,c),
(184,785,l),
(487,785,ls),
(500.333,785,o),
(524,782.333,o),
(524,757,cs),
(524,645,ls),
(524,626.333,o),
(524,605,o),
(544,605,cs),
(558.667,605,o),
(561,625.667,o),
(561,651,cs),
(561,785,ls),
(561,813,o),
(551.667,821,o),
(533,821,cs),
(453.449,821,o),
(369.039,819,o),
(306,819,cs),
(253.771,819,o),
(163.591,821,o),
(65,821,cs),
(45,821,o),
(24,818.667,o),
(24,804,cs),
(24,789.333,o),
(41.333,789,o),
(64,789,cs),
(92.603,789,o),
(137,788.308,o),
(137,750,cs),
(137,632.98,o),
(143,567.873,o),
(143,425,cs),
(143,339.646,o),
(142,269.59,o),
(142,222,cs),
(142,173.136,o),
(141,119.911,o),
(141,64,cs),
(141,50,o),
(135.333,40.5,o),
(124,35.5,cs),
(112.667,30.5,o),
(91.333,28,o),
(60,28,cs),
(46.667,28,o),
(36.833,27,o),
(30.5,25,cs),
(24.167,23,o),
(21,18.333,o),
(21,11,cs),
(21,0.333,o),
(47,0,o),
(67,0,cs)
);
},
{
closed = 1;
nodes = (
(175.791,888,o),
(202.735,913,o),
(244,913,cs),
(282.662,913,o),
(325.294,889,o),
(381,889,cs),
(433.947,889,o),
(483,908.797,o),
(483,934,cs),
(483,943.333,o),
(476.667,951,o),
(470,951,cs),
(466.667,951,o),
(463.167,950.167,o),
(459.5,948.5,cs),
(455.833,946.833,o),
(449.333,943.333,o),
(440,938,cs),
(417.333,926.667,o),
(397.333,921,o),
(380,921,cs),
(340.599,921,o),
(279.495,949,o),
(243,949,cs),
(218.333,949,o),
(195.667,943,o),
(175,931,cs),
(155.667,919.667,o),
(146,910.333,o),
(146,903,cs),
(146,896.333,o),
(153.333,888,o),
(160,888,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
0 5 3 8 3 5 8 104 18 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 14 1 12 0 16 15 12 16 91 0 13 17 1 15 4 13 15 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 10 10 7 83 0 7 7 15 67 0 11 11 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 5 3 8 3 5 8 104 18 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 14 1 12 0 16 15 12 16 91 0 13 17 1 15 4 13 15 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 12 67 0 11 11 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 80 values pushed */
0 5 3 8 3 5 8 104 18 1 0 10 9 10 0 9 104 0 2 11 1 11 2 96 14 1 12 0 16 15 12 16 91 0 13 17 1 15 4 13 15 91 0 7 0 10 0 7 10 91 0 8 0 9 11 8 9 91 6 1 3 3 4 83 0 4 4 14 67 0 11 11 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
1 0 167 165 162 160 157 155 149 147 144 142 139 137 122 120 119 112 106 104 94 92 84 75 74 72 67 65 60 48 44 41 24 22 18 10 0 133 1 133 19 15
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = Etilde;
unicode = 7868;
},
{
glyphname = Schwa;
kernRight = O;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(510.985,207.552,o),
(466.88,70,o),
(324,70,cs),
(220.933,70,o),
(141,195.644,o),
(141,270,cs),
(141,290,o),
(145,303,o),
(165,303,cs),
(532,310,l),
(532,310,l)
);
},
{
closed = 1;
nodes = (
(464.875,392,o),
(359.487,390,o),
(286,390,cs),
(248.667,390,o),
(212.5,390,o),
(177.5,390,cs),
(142.5,390,o),
(113.333,389.333,o),
(90,388,cs),
(55.333,386.667,o),
(41,339.333,o),
(41,290,cs),
(41,191.893,o),
(112.985,-11,o),
(311,-11,cs),
(505.776,-11,o),
(641,169.673,o),
(641,425,cs),
(641,659.818,o),
(540.817,837,o),
(315,837,cs),
(157.031,837,o),
(27,715.872,o),
(27,559,cs),
(27,540.333,o),
(44,512,o),
(76,512,cs),
(110.667,512,o),
(125,540.333,o),
(125,559,cs),
(125,661.681,o),
(230.437,756,o),
(318,756,cs),
(456.479,756,o),
(545,583.949,o),
(545,439,cs),
(545,425.667,o),
(543.333,408,o),
(542,392,c)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 2 6 2 3 6 104 8 1 6 7 1 0 1 6 0 91 0 2 2 4 83 0 4 4 20 67 0 1 1 5 83 0 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 2 6 2 3 6 104 0 4 0 2 3 4 2 91 8 1 6 7 1 0 1 6 0 91 0 1 1 5 83 0 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
14 14 1 0 14 63 14 55 49 47 39 37 31 29 23 21 9 7 0 13 1 13 9 15
CALL[ ]	/* CallFunction */";
};
width = 677;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(514.063,203.845,o),
(452.769,52,o),
(313,52,cs),
(196.169,52,o),
(121,195.982,o),
(121,279,cs),
(121,299,o),
(125,312,o),
(145,312,cs),
(535,319,l),
(535,319,l)
);
},
{
closed = 1;
nodes = (
(465.875,383,o),
(360.487,381,o),
(287,381,cs),
(249.667,381,o),
(213.5,381,o),
(178.5,381,cs),
(143.5,381,o),
(114.333,380.333,o),
(91,379,cs),
(56.333,377.667,o),
(42,334,o),
(42,290,cs),
(42,247.903,o),
(56.42,173.492,o),
(101,104.5,cs),
(143.627,38.53,o),
(212.066,-11,o),
(304,-11,cs),
(486.007,-11,o),
(621,169.072,o),
(621,425,cs),
(621,658.765,o),
(521.147,837,o),
(308,837,cs),
(162.99,837,o),
(28,717.727,o),
(28,559,cs),
(28,540.333,o),
(40.667,518,o),
(66,518,cs),
(92.667,518,o),
(105,540.333,o),
(105,559,cs),
(105,670.946,o),
(212.228,774,o),
(311,774,cs),
(461.35,774,o),
(546,590.915,o),
(546,439,cs),
(546,423,o),
(544.333,401.667,o),
(543,383,c)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 2 6 2 3 6 104 8 1 6 7 1 0 1 6 0 91 0 2 2 4 83 0 4 4 20 67 0 1 1 5 83 0 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 2 6 2 3 6 104 0 4 0 2 3 4 2 91 8 1 6 7 1 0 1 6 0 91 0 1 1 5 83 0 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
14 14 1 0 14 65 14 57 49 47 39 37 31 29 23 21 9 7 0 13 1 13 9 15
CALL[ ]	/* CallFunction */";
};
width = 659;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(376.667,-11,o),
(450.5,33.833,o),
(504.5,110.5,cs),
(558.5,187.167,o),
(592,297,o),
(592,425,cs),
(592,659.818,o),
(491.909,837,o),
(298,837,cs),
(171.647,837,o),
(29,719.585,o),
(29,559,cs),
(29,538.333,o),
(36.667,528,o),
(52,528,cs),
(66.667,528,o),
(76,540.333,o),
(76,559,cs),
(76,687.355,o),
(188.25,804,o),
(301,804,cs),
(467.558,804,o),
(547,603.203,o),
(547,439,cs),
(547,417.667,o),
(545.333,392,o),
(544,368,c),
(466.875,368,o),
(361.487,366,o),
(288,366,cs),
(250.667,366,o),
(214.5,366,o),
(179.5,366,cs),
(144.5,366,o),
(115.333,365.333,o),
(92,364,cs),
(57.333,362.667,o),
(43,326,o),
(43,290,cs),
(43,242.421,o),
(61.543,170.243,o),
(102,104.5,cs),
(142.316,38.987,o),
(209.401,-11,o),
(294,-11,cs)
);
},
{
closed = 1;
nodes = (
(160.08,22,o),
(92,195.346,o),
(92,294,cs),
(92,314,o),
(97.333,327,o),
(116,327,cs),
(539,334,l),
(517.532,197.139,o),
(438.185,22,o),
(298,22,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 2 6 2 3 6 104 8 1 6 7 1 0 1 6 0 91 0 2 2 4 83 0 4 4 20 67 0 1 1 5 83 0 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 2 6 2 3 6 104 0 4 0 2 3 4 2 91 8 1 6 7 1 0 1 6 0 91 0 1 1 5 83 0 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
14 14 1 0 14 64 14 56 48 46 38 36 31 29 23 21 9 7 0 13 1 13 9 15
CALL[ ]	/* CallFunction */";
};
width = 634;
}
);
note = Schwa;
unicode = 399;
},
{
glyphname = F;
kernLeft = B;
kernRight = F;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(133.667,80.333,o),
(112.667,72.667,o),
(78,70,cs),
(55.333,67.333,o),
(40,57.667,o),
(40,31,cs),
(40,8.333,o),
(53.667,0,o),
(83,0,cs),
(359,0,ls),
(379.687,0,o),
(406,5.77,o),
(406,41,cs),
(406,71.667,o),
(381,78,o),
(353,78,cs),
(232,78,l),
(232,75.741,o),
(229,138.847,o),
(229,205,cs),
(229,253.491,o),
(230,313.64,o),
(230,377,c),
(263.933,379.424,o),
(285.43,380,o),
(319,380,cs),
(337.667,380,o),
(359.333,378.667,o),
(378,376,cs),
(387.333,374.667,o),
(396.333,369.333,o),
(405,360,cs),
(413.667,350.667,o),
(418.667,332.333,o),
(420,305,cs),
(421.333,279.667,o),
(439.333,266,o),
(462,266,cs),
(488.667,266,o),
(503,276,o),
(503,304,cs),
(503,320,o),
(502.667,338.333,o),
(502,359,cs),
(501.333,379.667,o),
(501,398.333,o),
(501,415,cs),
(501,431.667,o),
(501.333,449,o),
(502,467,cs),
(502.667,485,o),
(503,502.333,o),
(503,519,cs),
(503,547,o),
(498,566,o),
(462,566,cs),
(423.333,566,o),
(418,543.667,o),
(418,513,cs),
(418,501.309,o),
(417.707,464,o),
(404,464,cs),
(390.244,464,o),
(355.794,462,o),
(316,462,cs),
(277.61,462,o),
(269.068,461.395,o),
(230,464,c),
(230,737,l),
(480,737,ls),
(506.667,737,o),
(519,732,o),
(519,696,cs),
(519,655,ls),
(519,627.732,o),
(528.896,597,o),
(561,597,cs),
(595.667,597,o),
(607,613.667,o),
(607,655,cs),
(607,773,ls),
(607,807.667,o),
(601,821,o),
(573,821,cs),
(537.667,821,o),
(502.667,820.667,o),
(468,820,cs),
(433.333,819.333,o),
(398.333,819,o),
(363,819,cs),
(320.333,819,o),
(273.833,819.333,o),
(223.5,820,cs),
(173.167,820.667,o),
(126.667,821,o),
(84,821,cs),
(50.667,821,o),
(36,813.667,o),
(36,787,cs),
(36,761.667,o),
(50.333,752.333,o),
(77,751,cs),
(115.667,749.667,o),
(130.333,734.667,o),
(133,708,cs),
(138.388,632.565,o),
(140,574.738,o),
(140,489,cs),
(140,359.667,o),
(137.667,248.333,o),
(135,119,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
85 1 6 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 2 0 5 0 2 5 104 0 5 0 6 8 5 6 91 3 1 0 0 1 83 0 1 1 12 67 0 7 7 4 83 0 4 4 23 67 0 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 0 1 3 3 0 96 0 2 3 5 3 2 5 104 0 5 0 6 8 5 6 91 0 3 3 1 84 0 1 1 12 67 0 7 7 4 83 0 4 4 23 67 0 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 0 1 3 3 0 96 0 2 3 5 3 2 5 104 0 4 0 7 6 4 7 91 0 5 0 6 8 5 6 91 0 3 3 1 84 0 1 1 12 67 0 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 0 1 3 3 0 96 0 2 3 5 3 2 5 104 0 4 0 7 6 4 7 91 0 5 0 6 8 5 6 91 0 3 3 1 84 0 1 1 14 67 0 8 8 9 83 0 9 9 13 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
106 103 43 102 42 38 177 39 37 132 42 10 24
CALL[ ]	/* CallFunction */";
};
width = 611;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(137,50.353,o),
(101.614,48,o),
(66,48,cs),
(48.667,48,o),
(38,44.333,o),
(38,23,cs),
(38,0.333,o),
(63.667,0,o),
(81,0,cs),
(346,0,ls),
(360.667,0,o),
(376,4.667,o),
(376,26,cs),
(376,59.171,o),
(357.71,60,o),
(340,60,cs),
(213,60,l),
(213,57.322,o),
(210,127.231,o),
(210,205,cs),
(210,257.448,o),
(211,320.108,o),
(211,386,c),
(249.667,388.667,o),
(272.333,389,o),
(311,389,cs),
(333.667,389,o),
(355.333,388.333,o),
(378,387,cs),
(397.47,387,o),
(422,358.099,o),
(422,299,cs),
(422,280.333,o),
(435.333,271,o),
(454,271,cs),
(474,271,o),
(484,281,o),
(484,309,cs),
(484,325,o),
(483.667,342.5,o),
(483,361.5,cs),
(482.333,380.5,o),
(482,398.333,o),
(482,415,cs),
(482,431.667,o),
(482.333,448.667,o),
(483,466,cs),
(483.667,483.333,o),
(484,500.333,o),
(484,517,cs),
(484,538.333,o),
(483.333,564,o),
(454,564,cs),
(420.533,564,o),
(420,545.981,o),
(420,517,cs),
(420,518.155,o),
(421.469,455,o),
(406,455,cs),
(391.04,455,o),
(352.52,453,o),
(308,453,cs),
(289.333,453,o),
(273.333,453,o),
(260,453,cs),
(246.667,453,o),
(230.333,453.667,o),
(211,455,c),
(211,755,l),
(482,755,ls),
(508.667,755,o),
(521,751.333,o),
(521,714,cs),
(521,647,ls),
(521,623,o),
(526,600,o),
(554,600,cs),
(580.667,600,o),
(588,613.667,o),
(588,647,cs),
(588,773,ls),
(588,807.667,o),
(582,821,o),
(554,821,cs),
(518.667,821,o),
(483.667,820.667,o),
(449,820,cs),
(414.333,819.333,o),
(379.333,819,o),
(344,819,cs),
(301.333,819,o),
(257.167,819.333,o),
(211.5,820,cs),
(165.833,820.667,o),
(121.667,821,o),
(79,821,cs),
(49.667,821,o),
(41,810.667,o),
(41,796,cs),
(41,785.333,o),
(47,771,o),
(63,771,cs),
(111,771,o),
(135,758,o),
(135,732,cs),
(135,642.624,o),
(141,585.384,o),
(141,489,cs),
(141,355.667,o),
(139.667,225.333,o),
(137,92,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 0 1 3 3 0 96 0 2 3 5 3 2 5 104 0 10 8 9 8 10 96 0 5 0 6 8 5 6 91 0 3 3 1 84 0 1 1 12 67 0 7 7 4 83 0 4 4 15 67 0 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 0 1 3 3 0 96 0 2 3 5 3 2 5 104 0 10 8 9 8 10 96 0 4 0 7 6 4 7 91 0 5 0 6 8 5 6 91 0 3 3 1 84 0 1 1 12 67 0 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
0 0 1 3 3 0 96 0 2 3 5 3 2 5 104 0 10 8 9 8 10 96 0 4 0 7 6 4 7 91 0 5 0 6 8 5 6 91 0 3 3 1 84 0 1 1 14 67 0 8 8 9 83 0 9 9 13 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
109 107 103 100 42 118 42 40 145 37 37 132 41 11 24
CALL[ ]	/* CallFunction */";
};
width = 595;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(309,0,ls),
(322.333,0,o),
(329,3.667,o),
(329,11,cs),
(329,24.333,o),
(317.667,30,o),
(303,30,cs),
(186,30,l),
(186,26.775,o),
(183,111.889,o),
(183,205,cs),
(183,267.403,o),
(184,338.597,o),
(184,401,c),
(222,403,o),
(260.333,404,o),
(299,404,cs),
(325.667,404,o),
(354.333,403.333,o),
(381,402,cs),
(401.691,402,o),
(425,375.746,o),
(425,307,cs),
(426.333,288.333,o),
(432,279,o),
(442,279,cs),
(448,279,o),
(452,281.833,o),
(454,287.5,cs),
(456,293.167,o),
(457,303,o),
(457,317,cs),
(457,333,o),
(456.667,349.167,o),
(456,365.5,cs),
(455.333,381.833,o),
(455,398.333,o),
(455,415,cs),
(455,431.667,o),
(455.333,448,o),
(456,464,cs),
(456.667,480,o),
(457,496.333,o),
(457,513,cs),
(457,534.333,o),
(456.667,560,o),
(442,560,cs),
(423.333,560,o),
(423,539.667,o),
(423,513,cs),
(423,464.902,o),
(418.194,440,o),
(409,440,cs),
(391.64,440,o),
(347.206,438,o),
(296,438,cs),
(277.333,438,o),
(258.833,438,o),
(240.5,438,cs),
(222.167,438,o),
(203.333,438.667,o),
(184,440,c),
(184,785,l),
(485,785,ls),
(511.667,785,o),
(524,782.667,o),
(524,744,cs),
(524,651,ls),
(524,627,o),
(525.333,605,o),
(544,605,cs),
(560.135,605,o),
(561,636.199,o),
(561,651,cs),
(561,773,ls),
(561,807.667,o),
(555,821,o),
(527,821,cs),
(491.667,821,o),
(456.667,820.667,o),
(422,820,cs),
(387.333,819.333,o),
(352.333,819,o),
(317,819,cs),
(274.333,819,o),
(231.833,819.333,o),
(189.5,820,cs),
(147.167,820.667,o),
(104.667,821,o),
(62,821,cs),
(43.333,821,o),
(24,820.667,o),
(24,806,cs),
(24,802.667,o),
(25.333,799.333,o),
(28,796,cs),
(30.667,792.667,o),
(36.667,791,o),
(46,791,cs),
(82,791,o),
(106.333,787.833,o),
(119,781.5,cs),
(131.667,775.167,o),
(138,765.333,o),
(138,752,cs),
(138,651.648,o),
(144,592.486,o),
(144,489,cs),
(144,349,o),
(142.667,212,o),
(140,72,cs),
(138.667,30.667,o),
(106.333,28,o),
(49,28,cs),
(30.333,28,o),
(21,23,o),
(21,13,cs),
(21,-0.333,o),
(46.667,0,o),
(64,0,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
71 1 6 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 0 1 3 3 0 96 0 2 3 5 3 2 5 104 0 5 0 6 8 5 6 91 0 3 3 1 84 0 1 1 12 67 0 7 7 4 83 0 4 4 15 67 10 1 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 0 1 3 3 0 96 0 2 3 5 3 2 5 104 0 4 0 7 6 4 7 91 0 5 0 6 8 5 6 91 0 3 3 1 84 0 1 1 12 67 10 1 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 0 1 3 3 0 96 0 2 3 5 3 2 5 104 0 4 0 7 6 4 7 91 0 5 0 6 8 5 6 91 0 3 3 1 84 0 1 1 14 67 10 1 8 8 9 83 0 9 9 13 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
104 102 99 96 42 101 42 38 145 37 39 132 42 11 24
CALL[ ]	/* CallFunction */";
};
width = 572;
}
);
note = F;
unicode = 70;
},
{
glyphname = G;
kernLeft = C;
kernRight = G;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(527.667,245,o),
(534,242.333,o),
(534,225,cs),
(534,160.928,o),
(443.683,67,o),
(344,67,cs),
(188.431,67,o),
(130,238.188,o),
(130,404,cs),
(130,501.333,o),
(153.5,589.833,o),
(191.5,654.5,cs),
(229.5,719.167,o),
(280.667,759,o),
(338,759,cs),
(470.491,759,o),
(522,658.44,o),
(522,521,cs),
(522,481,o),
(545.333,468,o),
(568,468,cs),
(598.667,468,o),
(613,492,o),
(613,524,cs),
(613,541.333,o),
(612.667,562,o),
(612,586,cs),
(611.333,610,o),
(611,630.667,o),
(611,648,cs),
(611,702.872,o),
(615,732.232,o),
(615,787,cs),
(615,803,o),
(602.667,826,o),
(568,826,cs),
(540,826,o),
(530,813.667,o),
(530,795,cs),
(535,709,l),
(497.312,805.913,o),
(419.617,838,o),
(347,838,cs),
(255,838,o),
(175.667,787.833,o),
(121,708.5,cs),
(66.333,629.167,o),
(34,520,o),
(34,404,cs),
(34,91.705,o),
(193.865,-14,o),
(334,-14,cs),
(413.888,-14,o),
(499.613,16.649,o),
(543,98,c),
(543,92.667,o),
(542.667,83.667,o),
(542,71,cs),
(541.333,58.333,o),
(541,45.333,o),
(541,32,cs),
(541,2.667,o),
(558,-4,o),
(582,-4,cs),
(604.667,-4,o),
(623,10.667,o),
(623,36,cs),
(623,49.333,o),
(622.667,65.667,o),
(622,85,cs),
(621.333,104.333,o),
(621,130.667,o),
(621,164,cs),
(621,188,o),
(621.333,209.333,o),
(622,228,cs),
(622.667,246.667,o),
(623,261.667,o),
(623,273,cs),
(623,315.667,o),
(584.667,330,o),
(542,330,cs),
(456.986,330,o),
(434.914,322,o),
(348,322,cs),
(321.333,322,o),
(297,310.333,o),
(297,273,cs),
(297,255.667,o),
(314,238,o),
(342,238,cs),
(413.681,238,o),
(442.676,245,o),
(509,245,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
54 1 7 8 34 1 9 0 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
54 1 7 8 34 1 9 1 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 2 1 10 2 0 9 2 0 91 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 67 0 9 9 3 83 4 1 3 3 16 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 1 10 2 0 9 2 0 91 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 9 9 3 83 4 1 3 3 16 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 2 1 10 2 0 9 2 0 91 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 16 67 0 9 9 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 9 0 1 96 0 5 0 8 7 5 8 91 0 2 10 1 0 1 2 0 91 0 7 7 6 83 0 6 6 14 67 0 3 3 16 67 0 9 9 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
2 0 91 89 81 79 73 71 59 57 50 48 40 38 29 27 17 10 6 3 0 97 2 97 11 15
CALL[ ]	/* CallFunction */";
};
width = 671;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(537.333,254,o),
(537,247.667,o),
(537,225,cs),
(537,130.232,o),
(445.347,49,o),
(345,49,cs),
(174.836,49,o),
(112,228.806,o),
(112,404,cs),
(112,506.667,o),
(137.5,600.167,o),
(179.5,667.5,cs),
(221.5,734.833,o),
(278.333,777,o),
(341,777,cs),
(474.333,777,o),
(525,663.667,o),
(525,517,cs),
(525,485,o),
(538.333,464,o),
(561,464,cs),
(586.333,464,o),
(595,485.333,o),
(595,520,cs),
(595,537.333,o),
(594.667,558.667,o),
(594,584,cs),
(593.333,609.333,o),
(593,630.667,o),
(593,648,cs),
(593,703.409,o),
(597,735.88,o),
(597,788,cs),
(597,804,o),
(584,821,o),
(560,821,cs),
(540,821,o),
(528,806.333,o),
(528,789,cs),
(533,702,l),
(495.667,799.333,o),
(422,838,o),
(350,838,cs),
(258,838,o),
(178.667,787.833,o),
(124,708.5,cs),
(69.333,629.167,o),
(37,520,o),
(37,404,cs),
(37,91.104,o),
(195.265,-14,o),
(336,-14,cs),
(414.177,-14,o),
(497.14,17.549,o),
(544,103,c),
(544,97.667,o),
(543.667,88.333,o),
(543,75,cs),
(542.333,61.667,o),
(542,48.667,o),
(542,36,cs),
(542,13.333,o),
(555.333,2,o),
(574,2,cs),
(590,2,o),
(605,13.667,o),
(605,35,cs),
(605,48.333,o),
(604.667,65.167,o),
(604,85.5,cs),
(603.333,105.833,o),
(603,132,o),
(603,164,cs),
(603,188,o),
(603.333,209.333,o),
(604,228,cs),
(604.667,246.667,o),
(605,261.667,o),
(605,273,cs),
(605,307.667,o),
(577,321,o),
(545,321,cs),
(509,320.333,o),
(471.167,318.333,o),
(431.5,315,cs),
(391.833,311.667,o),
(351.333,310,o),
(310,310,cs),
(288.667,310,o),
(259,301.667,o),
(259,275,cs),
(259,260.333,o),
(273,247,o),
(301,247,cs),
(337,247,o),
(372.833,248.167,o),
(408.5,250.5,cs),
(444.167,252.833,o),
(478.667,254,o),
(512,254,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
48 1 7 8 30 1 9 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
2 1 1 10 1 0 9 1 0 91 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 7 1 1 2 96 0 1 10 1 0 9 1 0 92 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 2 7 1 1 2 96 0 5 0 8 7 5 8 91 0 1 10 1 0 9 1 0 92 0 7 7 6 83 0 6 6 14 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
4 0 85 83 75 73 67 65 53 51 46 44 36 34 25 23 13 11 10 8 0 91 4 91 11 15
CALL[ ]	/* CallFunction */";
};
width = 656;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(415.864,-14,o),
(503.674,19.563,o),
(548,103,c),
(548,98.333,o),
(547.667,88.5,o),
(547,73.5,cs),
(546.333,58.5,o),
(546,45.333,o),
(546,34,cs),
(546,19.333,o),
(551.667,12,o),
(563,12,cs),
(569.667,12,o),
(579,18.333,o),
(579,33,cs),
(579,45,o),
(578.667,62.333,o),
(578,85,cs),
(577.333,107.667,o),
(577,134,o),
(577,164,cs),
(577,188,o),
(577.333,209.333,o),
(578,228,cs),
(578.667,246.667,o),
(579,261.667,o),
(579,273,cs),
(579,297,o),
(565,306,o),
(549,306,cs),
(513,304.667,o),
(476.833,303,o),
(440.5,301,cs),
(404.167,299,o),
(365.333,297,o),
(324,295,cs),
(301.333,293.667,o),
(273,291.333,o),
(273,278,cs),
(273,274,o),
(275.833,270.333,o),
(281.5,267,cs),
(287.167,263.667,o),
(297,262,o),
(311,262,cs),
(347,262,o),
(381.833,263.167,o),
(415.5,265.5,cs),
(449.167,267.833,o),
(482.667,269,o),
(516,269,cs),
(541.333,269,o),
(541,259.667,o),
(541,225,cs),
(541,82.439,o),
(447.573,19,o),
(347,19,cs),
(156.185,19,o),
(86,212.225,o),
(86,404,cs),
(86,514.667,o),
(115.167,615.833,o),
(162.5,688.5,cs),
(209.833,761.167,o),
(274.333,807,o),
(345,807,cs),
(478.333,807,o),
(529,692.333,o),
(529,527,cs),
(529,502.481,o),
(531.08,474,o),
(551,474,cs),
(560.333,474,o),
(565.667,478.667,o),
(567,488,cs),
(568.333,497.333,o),
(569,511.333,o),
(569,530,cs),
(569,547.333,o),
(568.667,567,o),
(568,589,cs),
(567.333,611,o),
(567,630.667,o),
(567,648,cs),
(567,674.667,o),
(567.667,698.167,o),
(569,718.5,cs),
(570.333,738.833,o),
(571,762.667,o),
(571,790,cs),
(571,806,o),
(559.667,813,o),
(549,813,cs),
(539.667,813,o),
(532,804.333,o),
(532,791,cs),
(537,702,l),
(499.667,799.333,o),
(426,838,o),
(354,838,cs),
(262,838,o),
(182.667,787.833,o),
(128,708.5,cs),
(73.333,629.167,o),
(41,520,o),
(41,404,cs),
(41,249.333,o),
(79.833,144.5,o),
(136.5,78.5,cs),
(193.167,12.5,o),
(268.333,-14,o),
(339,-14,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
47 1 6 7 29 1 8 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 9 1 0 8 1 0 91 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 14 67 0 2 2 13 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 2 8 3 8 2 3 104 0 1 9 1 0 8 1 0 91 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 2 8 3 8 2 3 104 0 4 0 7 6 4 7 91 0 1 9 1 0 8 1 0 91 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
4 0 84 82 74 72 64 62 52 50 45 43 35 33 25 23 13 8 0 90 4 90 10 15
CALL[ ]	/* CallFunction */";
};
width = 635;
}
);
note = G;
unicode = 71;
},
{
glyphname = Gbreve;
kernLeft = C;
kernRight = G;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(527.667,245,o),
(534,242.333,o),
(534,225,cs),
(534,160.928,o),
(443.683,67,o),
(344,67,cs),
(188.431,67,o),
(130,238.188,o),
(130,404,cs),
(130,501.333,o),
(153.5,589.833,o),
(191.5,654.5,cs),
(229.5,719.167,o),
(280.667,759,o),
(338,759,cs),
(470.491,759,o),
(522,658.44,o),
(522,521,cs),
(522,481,o),
(545.333,468,o),
(568,468,cs),
(598.667,468,o),
(613,492,o),
(613,524,cs),
(613,541.333,o),
(612.667,562,o),
(612,586,cs),
(611.333,610,o),
(611,630.667,o),
(611,648,cs),
(611,702.872,o),
(615,732.232,o),
(615,787,cs),
(615,803,o),
(602.667,826,o),
(568,826,cs),
(540,826,o),
(530,813.667,o),
(530,795,cs),
(535,709,l),
(497.312,805.913,o),
(419.617,838,o),
(347,838,cs),
(255,838,o),
(175.667,787.833,o),
(121,708.5,cs),
(66.333,629.167,o),
(34,520,o),
(34,404,cs),
(34,91.705,o),
(193.865,-14,o),
(334,-14,cs),
(413.888,-14,o),
(499.613,16.649,o),
(543,98,c),
(543,92.667,o),
(542.667,83.667,o),
(542,71,cs),
(541.333,58.333,o),
(541,45.333,o),
(541,32,cs),
(541,2.667,o),
(558,-4,o),
(582,-4,cs),
(604.667,-4,o),
(623,10.667,o),
(623,36,cs),
(623,49.333,o),
(622.667,65.667,o),
(622,85,cs),
(621.333,104.333,o),
(621,130.667,o),
(621,164,cs),
(621,188,o),
(621.333,209.333,o),
(622,228,cs),
(622.667,246.667,o),
(623,261.667,o),
(623,273,cs),
(623,315.667,o),
(584.667,330,o),
(542,330,cs),
(456.986,330,o),
(434.914,322,o),
(348,322,cs),
(321.333,322,o),
(297,310.333,o),
(297,273,cs),
(297,255.667,o),
(314,238,o),
(342,238,cs),
(413.681,238,o),
(442.676,245,o),
(509,245,cs)
);
},
{
closed = 1;
nodes = (
(482,967.667,o),
(464,971,o),
(444,971,cs),
(426.667,971,o),
(412,956.667,o),
(412,942,cs),
(412,936.667,o),
(407.5,931.5,o),
(398.5,926.5,cs),
(389.5,921.5,o),
(375.333,919,o),
(356,919,cs),
(325.535,919,o),
(297,926.638,o),
(297,942,cs),
(297,964.667,o),
(283.667,971,o),
(261,971,cs),
(238.333,971,o),
(229,958.333,o),
(229,941,cs),
(229,898.333,o),
(274.333,862,o),
(361,862,cs),
(412.962,862,o),
(482,888.821,o),
(482,941,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
54 1 7 8 34 1 9 0 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
54 1 7 8 34 1 9 1 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
13 1 11 12 11 106 0 12 0 10 5 12 10 91 0 2 1 14 2 0 9 2 0 92 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 67 0 9 9 3 83 4 1 3 3 16 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
13 1 11 12 11 106 0 12 0 10 5 12 10 91 0 2 1 14 2 0 9 2 0 92 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 9 9 3 83 4 1 3 3 16 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
13 1 11 12 11 106 0 12 0 10 5 12 10 91 0 2 1 14 2 0 9 2 0 92 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 16 67 0 9 9 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
13 1 11 12 11 106 0 1 0 9 0 1 96 0 12 0 10 5 12 10 91 0 5 0 8 7 5 8 91 0 2 14 1 0 1 2 0 92 0 7 7 6 83 0 6 6 14 67 0 3 3 16 67 0 9 9 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
2 0 124 122 118 116 110 108 104 102 91 89 81 79 73 71 59 57 50 48 40 38 29 27 17 10 6 3 0 97 2 97 15 15
CALL[ ]	/* CallFunction */";
};
width = 671;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(537.333,254,o),
(537,247.667,o),
(537,225,cs),
(537,130.232,o),
(445.347,49,o),
(345,49,cs),
(174.836,49,o),
(112,228.806,o),
(112,404,cs),
(112,506.667,o),
(137.5,600.167,o),
(179.5,667.5,cs),
(221.5,734.833,o),
(278.333,777,o),
(341,777,cs),
(474.333,777,o),
(525,663.667,o),
(525,517,cs),
(525,485,o),
(538.333,464,o),
(561,464,cs),
(586.333,464,o),
(595,485.333,o),
(595,520,cs),
(595,537.333,o),
(594.667,558.667,o),
(594,584,cs),
(593.333,609.333,o),
(593,630.667,o),
(593,648,cs),
(593,703.409,o),
(597,735.88,o),
(597,788,cs),
(597,804,o),
(584,821,o),
(560,821,cs),
(540,821,o),
(528,806.333,o),
(528,789,cs),
(533,702,l),
(495.667,799.333,o),
(422,838,o),
(350,838,cs),
(258,838,o),
(178.667,787.833,o),
(124,708.5,cs),
(69.333,629.167,o),
(37,520,o),
(37,404,cs),
(37,91.104,o),
(195.265,-14,o),
(336,-14,cs),
(414.177,-14,o),
(497.14,17.549,o),
(544,103,c),
(544,97.667,o),
(543.667,88.333,o),
(543,75,cs),
(542.333,61.667,o),
(542,48.667,o),
(542,36,cs),
(542,13.333,o),
(555.333,2,o),
(574,2,cs),
(590,2,o),
(605,13.667,o),
(605,35,cs),
(605,48.333,o),
(604.667,65.167,o),
(604,85.5,cs),
(603.333,105.833,o),
(603,132,o),
(603,164,cs),
(603,188,o),
(603.333,209.333,o),
(604,228,cs),
(604.667,246.667,o),
(605,261.667,o),
(605,273,cs),
(605,307.667,o),
(577,321,o),
(545,321,cs),
(509,320.333,o),
(471.167,318.333,o),
(431.5,315,cs),
(391.833,311.667,o),
(351.333,310,o),
(310,310,cs),
(288.667,310,o),
(259,301.667,o),
(259,275,cs),
(259,260.333,o),
(273,247,o),
(301,247,cs),
(337,247,o),
(372.833,248.167,o),
(408.5,250.5,cs),
(444.167,252.833,o),
(478.667,254,o),
(512,254,cs)
);
},
{
closed = 1;
nodes = (
(472,971,o),
(455,972,o),
(442,972,cs),
(427,972,o),
(416,960,o),
(416,945,cs),
(416,928,o),
(391,910,o),
(352,910,cs),
(322,910,o),
(287,919,o),
(287,945,cs),
(287,965,o),
(278,972,o),
(259,972,cs),
(242,972,o),
(233,963,o),
(233,944,cs),
(233,903,o),
(279,865,o),
(355,865,cs),
(406,865,o),
(472,892,o),
(472,944,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
49 1 7 8 31 1 9 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
13 1 11 12 11 106 0 12 0 10 5 12 10 91 2 1 1 14 1 0 9 1 0 92 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
13 1 11 12 11 106 0 2 7 1 1 2 96 0 12 0 10 5 12 10 91 0 1 14 1 0 9 1 0 92 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
13 1 11 12 11 106 0 2 7 1 1 2 96 0 12 0 10 5 12 10 91 0 5 0 8 7 5 8 91 0 1 14 1 0 9 1 0 92 0 7 7 6 83 0 6 6 14 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
5 1 118 116 112 110 104 102 99 97 86 84 76 74 68 66 54 52 47 45 37 35 26 24 14 12 11 9 1 92 5 92 15 26
CALL[ ]	/* CallFunction */";
};
width = 656;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(415.864,-14,o),
(503.674,19.563,o),
(548,103,c),
(548,98.333,o),
(547.667,88.5,o),
(547,73.5,cs),
(546.333,58.5,o),
(546,45.333,o),
(546,34,cs),
(546,19.333,o),
(551.667,12,o),
(563,12,cs),
(569.667,12,o),
(579,18.333,o),
(579,33,cs),
(579,45,o),
(578.667,62.333,o),
(578,85,cs),
(577.333,107.667,o),
(577,134,o),
(577,164,cs),
(577,188,o),
(577.333,209.333,o),
(578,228,cs),
(578.667,246.667,o),
(579,261.667,o),
(579,273,cs),
(579,297,o),
(565,306,o),
(549,306,cs),
(513,304.667,o),
(476.833,303,o),
(440.5,301,cs),
(404.167,299,o),
(365.333,297,o),
(324,295,cs),
(301.333,293.667,o),
(273,291.333,o),
(273,278,cs),
(273,274,o),
(275.833,270.333,o),
(281.5,267,cs),
(287.167,263.667,o),
(297,262,o),
(311,262,cs),
(347,262,o),
(381.833,263.167,o),
(415.5,265.5,cs),
(449.167,267.833,o),
(482.667,269,o),
(516,269,cs),
(541.333,269,o),
(541,259.667,o),
(541,225,cs),
(541,82.439,o),
(447.573,19,o),
(347,19,cs),
(156.185,19,o),
(86,212.225,o),
(86,404,cs),
(86,514.667,o),
(115.167,615.833,o),
(162.5,688.5,cs),
(209.833,761.167,o),
(274.333,807,o),
(345,807,cs),
(478.333,807,o),
(529,692.333,o),
(529,527,cs),
(529,502.481,o),
(531.08,474,o),
(551,474,cs),
(560.333,474,o),
(565.667,478.667,o),
(567,488,cs),
(568.333,497.333,o),
(569,511.333,o),
(569,530,cs),
(569,547.333,o),
(568.667,567,o),
(568,589,cs),
(567.333,611,o),
(567,630.667,o),
(567,648,cs),
(567,674.667,o),
(567.667,698.167,o),
(569,718.5,cs),
(570.333,738.833,o),
(571,762.667,o),
(571,790,cs),
(571,806,o),
(559.667,813,o),
(549,813,cs),
(539.667,813,o),
(532,804.333,o),
(532,791,cs),
(537,702,l),
(499.667,799.333,o),
(426,838,o),
(354,838,cs),
(262,838,o),
(182.667,787.833,o),
(128,708.5,cs),
(73.333,629.167,o),
(41,520,o),
(41,404,cs),
(41,249.333,o),
(79.833,144.5,o),
(136.5,78.5,cs),
(193.167,12.5,o),
(268.333,-14,o),
(339,-14,cs)
);
},
{
closed = 1;
nodes = (
(402.017,875,o),
(460,899.402,o),
(460,948,cs),
(460,969.333,o),
(451.667,972,o),
(441,972,cs),
(429.667,972,o),
(424,964.333,o),
(424,949,cs),
(424,922.229,o),
(385.336,900,o),
(349,900,cs),
(306.691,900,o),
(275,909.669,o),
(275,949,cs),
(275,965,o),
(272.667,972,o),
(258,972,cs),
(246.667,972,o),
(241,964,o),
(241,948,cs),
(241,908,o),
(289,875,o),
(349,875,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
75 1 10 11 57 1 12 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
3 1 1 2 1 106 0 2 0 0 8 2 0 91 0 5 13 1 4 12 5 4 92 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 14 67 0 6 6 13 67 0 12 12 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
3 1 1 2 1 106 0 6 12 7 12 6 7 104 0 2 0 0 8 2 0 91 0 5 13 1 4 12 5 4 92 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 14 67 0 12 12 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
3 1 1 2 1 106 0 6 12 7 12 6 7 104 0 2 0 0 8 2 0 91 0 8 0 11 10 8 11 91 0 5 13 1 4 12 5 4 92 0 10 10 9 83 0 9 9 14 67 0 12 12 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
32 28 112 110 102 100 92 90 80 78 73 71 63 61 53 51 41 36 28 118 32 118 37 38 35 36 14 19
CALL[ ]	/* CallFunction */";
};
width = 635;
}
);
note = Gbreve;
unicode = 286;
},
{
glyphname = Gcircumflex;
kernLeft = C;
kernRight = G;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(474.667,830,o),
(477,841.667,o),
(477,851,cs),
(477,891.942,o),
(368.536,972,o),
(344,972,cs),
(332.856,972,o),
(298.177,950.45,o),
(271,928,cs),
(240.333,902.667,o),
(212,870.667,o),
(212,844,cs),
(212,837.333,o),
(217,830,o),
(225,830,cs),
(242.857,830,o),
(308.53,853.989,o),
(344,880,c),
(380.252,853.415,o),
(445.5,830,o),
(464,830,cs)
);
},
{
closed = 1;
nodes = (
(527.667,245,o),
(534,242.333,o),
(534,225,cs),
(534,160.928,o),
(443.683,67,o),
(344,67,cs),
(188.431,67,o),
(130,238.188,o),
(130,404,cs),
(130,501.333,o),
(153.5,589.833,o),
(191.5,654.5,cs),
(229.5,719.167,o),
(280.667,759,o),
(338,759,cs),
(470.491,759,o),
(522,658.44,o),
(522,521,cs),
(522,481,o),
(545.333,468,o),
(568,468,cs),
(598.667,468,o),
(613,492,o),
(613,524,cs),
(613,541.333,o),
(612.667,562,o),
(612,586,cs),
(611.333,610,o),
(611,630.667,o),
(611,648,cs),
(611,702.872,o),
(615,732.232,o),
(615,787,cs),
(615,803,o),
(602.667,826,o),
(568,826,cs),
(540,826,o),
(530,813.667,o),
(530,795,cs),
(535,709,l),
(497.312,805.913,o),
(419.617,838,o),
(347,838,cs),
(255,838,o),
(175.667,787.833,o),
(121,708.5,cs),
(66.333,629.167,o),
(34,520,o),
(34,404,cs),
(34,91.705,o),
(193.865,-14,o),
(334,-14,cs),
(413.888,-14,o),
(499.613,16.649,o),
(543,98,c),
(543,92.667,o),
(542.667,83.667,o),
(542,71,cs),
(541.333,58.333,o),
(541,45.333,o),
(541,32,cs),
(541,2.667,o),
(558,-4,o),
(582,-4,cs),
(604.667,-4,o),
(623,10.667,o),
(623,36,cs),
(623,49.333,o),
(622.667,65.667,o),
(622,85,cs),
(621.333,104.333,o),
(621,130.667,o),
(621,164,cs),
(621,188,o),
(621.333,209.333,o),
(622,228,cs),
(622.667,246.667,o),
(623,261.667,o),
(623,273,cs),
(623,315.667,o),
(584.667,330,o),
(542,330,cs),
(456.986,330,o),
(434.914,322,o),
(348,322,cs),
(321.333,322,o),
(297,310.333,o),
(297,273,cs),
(297,255.667,o),
(314,238,o),
(342,238,cs),
(413.681,238,o),
(442.676,245,o),
(509,245,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
5 1 8 2 80 1 10 11 60 1 12 3 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
5 1 8 2 80 1 10 11 60 1 12 4 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 2 8 8 2 94 1 13 2 0 8 11 8 0 11 104 0 5 4 14 2 3 12 5 3 91 0 11 11 8 83 9 1 8 8 20 67 0 10 10 8 83 9 1 8 8 20 67 0 12 12 6 83 7 1 6 6 16 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 2 8 2 106 1 13 2 0 8 11 8 0 11 104 0 5 4 14 2 3 12 5 3 91 0 11 11 8 83 9 1 8 8 20 67 0 10 10 8 83 9 1 8 8 20 67 0 12 12 6 83 7 1 6 6 16 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 2 8 2 106 1 13 2 0 8 9 8 0 9 104 0 5 4 14 2 3 12 5 3 91 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 12 67 0 12 12 6 83 7 1 6 6 16 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 2 8 2 106 1 13 2 0 8 9 8 0 9 104 0 5 4 14 2 3 12 5 3 91 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 12 67 0 6 6 16 67 0 12 12 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 2 8 2 106 1 13 2 0 8 9 8 0 9 104 0 4 3 12 3 4 96 0 8 0 11 10 8 11 92 0 5 14 1 3 4 5 3 91 0 10 10 9 83 0 9 9 14 67 0 6 6 16 67 0 12 12 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
28 26 1 0 117 115 107 105 99 97 85 83 76 74 66 64 55 53 43 36 32 29 26 123 28 123 19 17 11 9 0 25 1 25 15 15
CALL[ ]	/* CallFunction */";
};
width = 671;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(473,847,o),
(476,854.667,o),
(476,864,cs),
(476,900.28,o),
(368.728,972,o),
(345,972,cs),
(323.04,972,o),
(215,901.46,o),
(215,860,cs),
(215,851.333,o),
(218.667,847,o),
(226,847,cs),
(243.679,847,o),
(305.008,874.475,o),
(345,898,c),
(408.994,860.357,o),
(456.663,847,o),
(465,847,cs)
);
},
{
closed = 1;
nodes = (
(537.333,254,o),
(537,247.667,o),
(537,225,cs),
(537,130.232,o),
(445.347,49,o),
(345,49,cs),
(174.836,49,o),
(112,228.806,o),
(112,404,cs),
(112,506.667,o),
(137.5,600.167,o),
(179.5,667.5,cs),
(221.5,734.833,o),
(278.333,777,o),
(341,777,cs),
(474.333,777,o),
(525,663.667,o),
(525,517,cs),
(525,485,o),
(538.333,464,o),
(561,464,cs),
(586.333,464,o),
(595,485.333,o),
(595,520,cs),
(595,537.333,o),
(594.667,558.667,o),
(594,584,cs),
(593.333,609.333,o),
(593,630.667,o),
(593,648,cs),
(593,703.409,o),
(597,735.88,o),
(597,788,cs),
(597,804,o),
(584,821,o),
(560,821,cs),
(540,821,o),
(528,806.333,o),
(528,789,cs),
(533,702,l),
(495.667,799.333,o),
(422,838,o),
(350,838,cs),
(258,838,o),
(178.667,787.833,o),
(124,708.5,cs),
(69.333,629.167,o),
(37,520,o),
(37,404,cs),
(37,91.104,o),
(195.265,-14,o),
(336,-14,cs),
(414.177,-14,o),
(497.14,17.549,o),
(544,103,c),
(544,97.667,o),
(543.667,88.333,o),
(543,75,cs),
(542.333,61.667,o),
(542,48.667,o),
(542,36,cs),
(542,13.333,o),
(555.333,2,o),
(574,2,cs),
(590,2,o),
(605,13.667,o),
(605,35,cs),
(605,48.333,o),
(604.667,65.167,o),
(604,85.5,cs),
(603.333,105.833,o),
(603,132,o),
(603,164,cs),
(603,188,o),
(603.333,209.333,o),
(604,228,cs),
(604.667,246.667,o),
(605,261.667,o),
(605,273,cs),
(605,307.667,o),
(577,321,o),
(545,321,cs),
(509,320.333,o),
(471.167,318.333,o),
(431.5,315,cs),
(391.833,311.667,o),
(351.333,310,o),
(310,310,cs),
(288.667,310,o),
(259,301.667,o),
(259,275,cs),
(259,260.333,o),
(273,247,o),
(301,247,cs),
(337,247,o),
(372.833,248.167,o),
(408.5,250.5,cs),
(444.167,252.833,o),
(478.667,254,o),
(512,254,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
5 1 0 2 73 1 10 11 55 1 12 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 2 0 8 2 94 1 13 2 0 8 0 106 5 1 4 14 1 3 12 4 3 91 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 12 67 0 6 6 13 67 0 12 12 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 2 0 2 106 1 13 2 0 8 0 106 5 1 4 14 1 3 12 4 3 91 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 12 67 0 6 6 13 67 0 12 12 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 2 0 2 106 1 13 2 0 8 0 106 0 5 10 4 4 5 96 0 4 14 1 3 12 4 3 92 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 12 67 0 6 6 13 67 0 12 12 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 2 0 2 106 1 13 2 0 8 0 106 0 5 10 4 4 5 96 0 8 0 11 10 8 11 92 0 4 14 1 3 12 4 3 92 0 10 10 9 83 0 9 9 14 67 0 6 6 13 67 0 12 12 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
29 25 1 0 110 108 100 98 92 90 78 76 71 69 61 59 50 48 38 36 35 33 25 116 29 116 18 16 11 9 0 24 1 24 15 15
CALL[ ]	/* CallFunction */";
};
width = 656;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(415.864,-14,o),
(503.674,19.563,o),
(548,103,c),
(548,98.333,o),
(547.667,88.5,o),
(547,73.5,cs),
(546.333,58.5,o),
(546,45.333,o),
(546,34,cs),
(546,19.333,o),
(551.667,12,o),
(563,12,cs),
(569.667,12,o),
(579,18.333,o),
(579,33,cs),
(579,45,o),
(578.667,62.333,o),
(578,85,cs),
(577.333,107.667,o),
(577,134,o),
(577,164,cs),
(577,188,o),
(577.333,209.333,o),
(578,228,cs),
(578.667,246.667,o),
(579,261.667,o),
(579,273,cs),
(579,297,o),
(565,306,o),
(549,306,cs),
(513,304.667,o),
(476.833,303,o),
(440.5,301,cs),
(404.167,299,o),
(365.333,297,o),
(324,295,cs),
(301.333,293.667,o),
(273,291.333,o),
(273,278,cs),
(273,274,o),
(275.833,270.333,o),
(281.5,267,cs),
(287.167,263.667,o),
(297,262,o),
(311,262,cs),
(347,262,o),
(381.833,263.167,o),
(415.5,265.5,cs),
(449.167,267.833,o),
(482.667,269,o),
(516,269,cs),
(541.333,269,o),
(541,259.667,o),
(541,225,cs),
(541,82.439,o),
(447.573,19,o),
(347,19,cs),
(156.185,19,o),
(86,212.225,o),
(86,404,cs),
(86,514.667,o),
(115.167,615.833,o),
(162.5,688.5,cs),
(209.833,761.167,o),
(274.333,807,o),
(345,807,cs),
(478.333,807,o),
(529,692.333,o),
(529,527,cs),
(529,502.481,o),
(531.08,474,o),
(551,474,cs),
(560.333,474,o),
(565.667,478.667,o),
(567,488,cs),
(568.333,497.333,o),
(569,511.333,o),
(569,530,cs),
(569,547.333,o),
(568.667,567,o),
(568,589,cs),
(567.333,611,o),
(567,630.667,o),
(567,648,cs),
(567,674.667,o),
(567.667,698.167,o),
(569,718.5,cs),
(570.333,738.833,o),
(571,762.667,o),
(571,790,cs),
(571,806,o),
(559.667,813,o),
(549,813,cs),
(539.667,813,o),
(532,804.333,o),
(532,791,cs),
(537,702,l),
(499.667,799.333,o),
(426,838,o),
(354,838,cs),
(262,838,o),
(182.667,787.833,o),
(128,708.5,cs),
(73.333,629.167,o),
(41,520,o),
(41,404,cs),
(41,249.333,o),
(79.833,144.5,o),
(136.5,78.5,cs),
(193.167,12.5,o),
(268.333,-14,o),
(339,-14,cs)
);
},
{
closed = 1;
nodes = (
(238.911,875,o),
(291.598,904.685,o),
(346,928,c),
(397.362,905.988,o),
(454.436,875,o),
(466,875,cs),
(471.333,875,o),
(474,878.667,o),
(474,886,cs),
(474,910.708,o),
(371.596,972,o),
(346,972,cs),
(322.629,972,o),
(219,910.79,o),
(219,886,cs),
(219,878.667,o),
(221.667,875,o),
(227,875,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
5 1 0 2 71 1 9 10 53 1 11 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 2 0 7 2 94 1 12 2 0 7 0 106 0 4 13 1 3 11 4 3 91 0 10 10 7 83 0 7 7 20 67 0 9 9 8 83 0 8 8 14 67 0 5 5 13 67 0 11 11 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 2 0 2 106 1 12 2 0 7 0 106 0 4 13 1 3 11 4 3 91 0 10 10 7 83 0 7 7 20 67 0 9 9 8 83 0 8 8 14 67 0 5 5 13 67 0 11 11 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 2 0 2 106 1 12 2 0 7 0 106 0 5 11 6 11 5 6 104 0 4 13 1 3 11 4 3 91 0 10 10 7 83 0 7 7 20 67 0 9 9 8 83 0 8 8 14 67 0 11 11 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 2 0 2 106 1 12 2 0 7 0 106 0 5 11 6 11 5 6 104 0 7 0 10 9 7 10 92 0 4 13 1 3 11 4 3 91 0 9 9 8 83 0 8 8 14 67 0 11 11 6 83 0 6 6 21 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
28 24 1 0 108 106 98 96 88 86 76 74 69 67 59 57 49 47 37 32 24 114 28 114 18 16 11 9 0 23 1 23 14 15
CALL[ ]	/* CallFunction */";
};
width = 635;
}
);
note = Gcircumflex;
unicode = 284;
},
{
glyphname = Gcommaaccent;
kernLeft = C;
kernRight = G;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(300,-137.971,o),
(336,-139.557,o),
(336,-157,cs),
(336,-177,o),
(333.5,-191.833,o),
(328.5,-201.5,cs),
(323.5,-211.167,o),
(321,-219.333,o),
(321,-226,cs),
(321,-248.667,o),
(340.333,-249,o),
(347,-249,cs),
(365.413,-249,o),
(428,-206.536,o),
(428,-130,cs),
(428,-72.667,o),
(392,-49,o),
(360,-49,cs),
(316,-49,o),
(300,-79,o),
(300,-107,cs)
);
},
{
closed = 1;
nodes = (
(529.667,245,o),
(536,242.333,o),
(536,225,cs),
(536,160.928,o),
(445.683,67,o),
(346,67,cs),
(190.431,67,o),
(132,238.188,o),
(132,404,cs),
(132,501.333,o),
(155.5,589.833,o),
(193.5,654.5,cs),
(231.5,719.167,o),
(282.667,759,o),
(340,759,cs),
(472.491,759,o),
(524,658.44,o),
(524,521,cs),
(524,481,o),
(547.333,468,o),
(570,468,cs),
(600.667,468,o),
(615,492,o),
(615,524,cs),
(615,541.333,o),
(614.667,562,o),
(614,586,cs),
(613.333,610,o),
(613,630.667,o),
(613,648,cs),
(613,702.872,o),
(617,732.232,o),
(617,787,cs),
(617,803,o),
(604.667,826,o),
(570,826,cs),
(542,826,o),
(532,813.667,o),
(532,795,cs),
(537,709,l),
(499.312,805.913,o),
(421.617,838,o),
(349,838,cs),
(257,838,o),
(177.667,787.833,o),
(123,708.5,cs),
(68.333,629.167,o),
(36,520,o),
(36,404,cs),
(36,91.705,o),
(195.865,-14,o),
(336,-14,cs),
(415.888,-14,o),
(501.613,16.649,o),
(545,98,c),
(545,92.667,o),
(544.667,83.667,o),
(544,71,cs),
(543.333,58.333,o),
(543,45.333,o),
(543,32,cs),
(543,2.667,o),
(560,-4,o),
(584,-4,cs),
(606.667,-4,o),
(625,10.667,o),
(625,36,cs),
(625,49.333,o),
(624.667,65.667,o),
(624,85,cs),
(623.333,104.333,o),
(623,130.667,o),
(623,164,cs),
(623,188,o),
(623.333,209.333,o),
(624,228,cs),
(624.667,246.667,o),
(625,261.667,o),
(625,273,cs),
(625,315.667,o),
(586.667,330,o),
(544,330,cs),
(458.986,330,o),
(436.914,322,o),
(350,322,cs),
(323.333,322,o),
(299,310.333,o),
(299,273,cs),
(299,255.667,o),
(316,238,o),
(344,238,cs),
(415.681,238,o),
(444.676,245,o),
(511,245,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
76 1 9 10 56 1 11 2 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
76 1 9 10 56 1 11 3 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 4 3 12 2 2 11 4 2 91 0 10 10 7 83 8 1 7 7 20 67 0 9 9 7 83 8 1 7 7 20 67 0 11 11 5 83 6 1 5 5 16 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 4 3 12 2 2 11 4 2 91 0 0 0 1 0 1 87 0 10 10 7 83 0 7 7 20 67 0 9 9 8 83 0 8 8 12 67 0 11 11 5 83 6 1 5 5 16 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 4 3 12 2 2 11 4 2 91 0 0 0 1 0 1 87 0 10 10 7 83 0 7 7 20 67 0 9 9 8 83 0 8 8 12 67 0 5 5 16 67 0 11 11 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 3 2 11 2 3 96 0 7 0 10 9 7 10 91 0 4 12 1 2 3 4 2 91 0 0 0 1 0 1 87 0 9 9 8 83 0 8 8 14 67 0 5 5 16 67 0 11 11 6 83 0 6 6 21 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
24 22 113 111 103 101 95 93 81 79 72 70 62 60 51 49 39 32 28 25 22 119 24 119 38 34 13 17
CALL[ ]	/* CallFunction */";
};
width = 672;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(538,254,o),
(538,248,o),
(538,225,cs),
(538,130,o),
(446,49,o),
(346,49,cs),
(176,49,o),
(113,229,o),
(113,404,cs),
(113,507,o),
(139,600,o),
(181,668,cs),
(223,735,o),
(279,777,o),
(342,777,cs),
(475,777,o),
(526,664,o),
(526,517,cs),
(526,485,o),
(539,464,o),
(562,464,cs),
(587,464,o),
(596,485,o),
(596,520,cs),
(596,537,o),
(596,559,o),
(595,584,cs),
(594,609,o),
(594,631,o),
(594,648,cs),
(594,703,o),
(598,736,o),
(598,788,cs),
(598,804,o),
(585,821,o),
(561,821,cs),
(541,821,o),
(529,806,o),
(529,789,cs),
(534,702,l),
(497,799,o),
(423,838,o),
(351,838,cs),
(259,838,o),
(180,788,o),
(125,709,cs),
(70,629,o),
(38,520,o),
(38,404,cs),
(38,91,o),
(196,-14,o),
(337,-14,cs),
(415,-14,o),
(498,18,o),
(545,103,c),
(545,98,o),
(545,88,o),
(544,75,cs),
(543,62,o),
(543,49,o),
(543,36,cs),
(543,13,o),
(556,2,o),
(575,2,cs),
(591,2,o),
(606,14,o),
(606,35,cs),
(606,48,o),
(606,65,o),
(605,86,cs),
(604,106,o),
(604,132,o),
(604,164,cs),
(604,188,o),
(604,209,o),
(605,228,cs),
(606,247,o),
(606,262,o),
(606,273,cs),
(606,308,o),
(578,321,o),
(546,321,cs),
(510,320,o),
(472,318,o),
(433,315,cs),
(393,312,o),
(352,310,o),
(311,310,cs),
(290,310,o),
(260,302,o),
(260,275,cs),
(260,260,o),
(274,247,o),
(302,247,cs),
(338,247,o),
(374,248,o),
(410,251,cs),
(445,253,o),
(480,254,o),
(513,254,cs)
);
},
{
closed = 1;
nodes = (
(302,-135,o),
(338,-134,o),
(338,-151,cs),
(338,-168,o),
(336,-181,o),
(332,-189,cs),
(327,-198,o),
(325,-205,o),
(325,-211,cs),
(325,-228,o),
(339,-230,o),
(346,-230,cs),
(370,-230,o),
(411,-180,o),
(411,-126,cs),
(411,-73,o),
(381,-54,o),
(354,-54,cs),
(317,-54,o),
(302,-79,o),
(302,-103,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
49 1 7 8 31 1 9 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
2 1 1 12 1 0 9 1 0 91 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 67 0 10 10 11 83 0 11 11 25 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 2 7 1 1 2 96 0 1 12 1 0 9 1 0 92 0 10 0 11 10 11 87 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 2 7 1 1 2 96 0 5 0 8 7 5 8 91 0 1 12 1 0 9 1 0 92 0 10 0 11 10 11 87 0 7 7 6 83 0 6 6 14 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
5 1 105 103 97 95 86 84 76 74 68 66 54 52 47 45 37 35 26 24 14 12 11 9 1 92 5 92 13 26
CALL[ ]	/* CallFunction */";
};
width = 657;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(416.864,-14,o),
(504.674,19.563,o),
(549,103,c),
(549,98.333,o),
(548.667,88.5,o),
(548,73.5,cs),
(547.333,58.5,o),
(547,45.333,o),
(547,34,cs),
(547,19.333,o),
(552.667,12,o),
(564,12,cs),
(570.667,12,o),
(580,18.333,o),
(580,33,cs),
(580,45,o),
(579.667,62.333,o),
(579,85,cs),
(578.333,107.667,o),
(578,134,o),
(578,164,cs),
(578,188,o),
(578.333,209.333,o),
(579,228,cs),
(579.667,246.667,o),
(580,261.667,o),
(580,273,cs),
(580,297,o),
(566,306,o),
(550,306,cs),
(514,304.667,o),
(477.833,303,o),
(441.5,301,cs),
(405.167,299,o),
(366.333,297,o),
(325,295,cs),
(302.333,293.667,o),
(274,291.333,o),
(274,278,cs),
(274,274,o),
(276.833,270.333,o),
(282.5,267,cs),
(288.167,263.667,o),
(298,262,o),
(312,262,cs),
(348,262,o),
(382.833,263.167,o),
(416.5,265.5,cs),
(450.167,267.833,o),
(483.667,269,o),
(517,269,cs),
(542.333,269,o),
(542,259.667,o),
(542,225,cs),
(542,82.439,o),
(448.573,19,o),
(348,19,cs),
(157.185,19,o),
(87,212.225,o),
(87,404,cs),
(87,514.667,o),
(116.167,615.833,o),
(163.5,688.5,cs),
(210.833,761.167,o),
(275.333,807,o),
(346,807,cs),
(479.333,807,o),
(530,692.333,o),
(530,527,cs),
(530,502.481,o),
(532.08,474,o),
(552,474,cs),
(561.333,474,o),
(566.667,478.667,o),
(568,488,cs),
(569.333,497.333,o),
(570,511.333,o),
(570,530,cs),
(570,547.333,o),
(569.667,567,o),
(569,589,cs),
(568.333,611,o),
(568,630.667,o),
(568,648,cs),
(568,674.667,o),
(568.667,698.167,o),
(570,718.5,cs),
(571.333,738.833,o),
(572,762.667,o),
(572,790,cs),
(572,806,o),
(560.667,813,o),
(550,813,cs),
(540.667,813,o),
(533,804.333,o),
(533,791,cs),
(538,702,l),
(500.667,799.333,o),
(427,838,o),
(355,838,cs),
(263,838,o),
(183.667,787.833,o),
(129,708.5,cs),
(74.333,629.167,o),
(42,520,o),
(42,404,cs),
(42,249.333,o),
(80.833,144.5,o),
(137.5,78.5,cs),
(194.167,12.5,o),
(269.333,-14,o),
(340,-14,cs)
);
},
{
closed = 1;
nodes = (
(370.943,-202,o),
(387,-152.312,o),
(387,-123,cs),
(387,-77.667,o),
(365,-66,o),
(345,-66,cs),
(318.333,-66,o),
(305,-82.667,o),
(305,-100,cs),
(305,-132.202,o),
(341,-126.69,o),
(341,-144,cs),
(341,-150.667,o),
(339.167,-158.833,o),
(335.5,-168.5,cs),
(331.833,-178.167,o),
(330,-185.333,o),
(330,-190,cs),
(330,-196.667,o),
(337.333,-202,o),
(344,-202,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
47 1 6 7 29 1 8 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 1 11 1 0 8 1 0 91 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 14 67 0 2 2 13 67 0 8 8 3 83 0 3 3 21 67 0 9 9 10 83 0 10 10 17 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 1 11 1 0 8 1 0 91 0 9 0 10 9 10 87 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 14 67 0 2 2 13 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 2 8 3 8 2 3 104 0 1 11 1 0 8 1 0 91 0 9 0 10 9 10 87 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 2 8 3 8 2 3 104 0 4 0 7 6 4 7 91 0 1 11 1 0 8 1 0 91 0 9 0 10 9 10 87 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
4 0 103 101 95 93 84 82 74 72 64 62 52 50 45 43 35 33 25 23 13 8 0 90 4 90 12 15
CALL[ ]	/* CallFunction */";
};
width = 636;
}
);
note = Gcommaaccent;
unicode = 290;
},
{
glyphname = Gdotaccent;
kernLeft = C;
kernRight = G;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(527.667,245,o),
(534,242.333,o),
(534,225,cs),
(534,160.928,o),
(443.683,67,o),
(344,67,cs),
(188.431,67,o),
(130,238.188,o),
(130,404,cs),
(130,501.333,o),
(153.5,589.833,o),
(191.5,654.5,cs),
(229.5,719.167,o),
(280.667,759,o),
(338,759,cs),
(470.491,759,o),
(522,658.44,o),
(522,521,cs),
(522,481,o),
(545.333,468,o),
(568,468,cs),
(598.667,468,o),
(613,492,o),
(613,524,cs),
(613,541.333,o),
(612.667,562,o),
(612,586,cs),
(611.333,610,o),
(611,630.667,o),
(611,648,cs),
(611,702.872,o),
(615,732.232,o),
(615,787,cs),
(615,803,o),
(602.667,826,o),
(568,826,cs),
(540,826,o),
(530,813.667,o),
(530,795,cs),
(535,709,l),
(497.312,805.913,o),
(419.617,838,o),
(347,838,cs),
(255,838,o),
(175.667,787.833,o),
(121,708.5,cs),
(66.333,629.167,o),
(34,520,o),
(34,404,cs),
(34,91.705,o),
(193.865,-14,o),
(334,-14,cs),
(413.888,-14,o),
(499.613,16.649,o),
(543,98,c),
(543,92.667,o),
(542.667,83.667,o),
(542,71,cs),
(541.333,58.333,o),
(541,45.333,o),
(541,32,cs),
(541,2.667,o),
(558,-4,o),
(582,-4,cs),
(604.667,-4,o),
(623,10.667,o),
(623,36,cs),
(623,49.333,o),
(622.667,65.667,o),
(622,85,cs),
(621.333,104.333,o),
(621,130.667,o),
(621,164,cs),
(621,188,o),
(621.333,209.333,o),
(622,228,cs),
(622.667,246.667,o),
(623,261.667,o),
(623,273,cs),
(623,315.667,o),
(584.667,330,o),
(542,330,cs),
(456.986,330,o),
(434.914,322,o),
(348,322,cs),
(321.333,322,o),
(297,310.333,o),
(297,273,cs),
(297,255.667,o),
(314,238,o),
(342,238,cs),
(413.681,238,o),
(442.676,245,o),
(509,245,cs)
);
},
{
closed = 1;
nodes = (
(305,863.333,o),
(330.667,840,o),
(364,840,cs),
(393.675,840,o),
(431,854.646,o),
(431,910,cs),
(431,946,o),
(403,971,o),
(371,971,cs),
(323.488,971,o),
(305,933.161,o),
(305,906,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
54 1 7 8 34 1 9 0 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
54 1 7 8 34 1 9 1 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 10 0 11 5 10 11 91 0 2 1 12 2 0 9 2 0 91 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 67 0 9 9 3 83 4 1 3 3 16 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 10 0 11 5 10 11 91 0 2 1 12 2 0 9 2 0 91 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 9 9 3 83 4 1 3 3 16 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 10 0 11 5 10 11 91 0 2 1 12 2 0 9 2 0 91 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 16 67 0 9 9 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 1 0 9 0 1 96 0 10 0 11 5 10 11 91 0 5 0 8 7 5 8 91 0 2 12 1 0 1 2 0 91 0 7 7 6 83 0 6 6 14 67 0 3 3 16 67 0 9 9 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
2 0 112 110 104 102 91 89 81 79 73 71 59 57 50 48 40 38 29 27 17 10 6 3 0 97 2 97 13 15
CALL[ ]	/* CallFunction */";
};
width = 671;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(537.333,254,o),
(537,247.667,o),
(537,225,cs),
(537,130.232,o),
(445.347,49,o),
(345,49,cs),
(174.836,49,o),
(112,228.806,o),
(112,404,cs),
(112,506.667,o),
(137.5,600.167,o),
(179.5,667.5,cs),
(221.5,734.833,o),
(278.333,777,o),
(341,777,cs),
(474.333,777,o),
(525,663.667,o),
(525,517,cs),
(525,485,o),
(538.333,464,o),
(561,464,cs),
(586.333,464,o),
(595,485.333,o),
(595,520,cs),
(595,537.333,o),
(594.667,558.667,o),
(594,584,cs),
(593.333,609.333,o),
(593,630.667,o),
(593,648,cs),
(593,703.409,o),
(597,735.88,o),
(597,788,cs),
(597,804,o),
(584,821,o),
(560,821,cs),
(540,821,o),
(528,806.333,o),
(528,789,cs),
(533,702,l),
(495.667,799.333,o),
(422,838,o),
(350,838,cs),
(258,838,o),
(178.667,787.833,o),
(124,708.5,cs),
(69.333,629.167,o),
(37,520,o),
(37,404,cs),
(37,91.104,o),
(195.265,-14,o),
(336,-14,cs),
(414.177,-14,o),
(497.14,17.549,o),
(544,103,c),
(544,97.667,o),
(543.667,88.333,o),
(543,75,cs),
(542.333,61.667,o),
(542,48.667,o),
(542,36,cs),
(542,13.333,o),
(555.333,2,o),
(574,2,cs),
(590,2,o),
(605,13.667,o),
(605,35,cs),
(605,48.333,o),
(604.667,65.167,o),
(604,85.5,cs),
(603.333,105.833,o),
(603,132,o),
(603,164,cs),
(603,188,o),
(603.333,209.333,o),
(604,228,cs),
(604.667,246.667,o),
(605,261.667,o),
(605,273,cs),
(605,307.667,o),
(577,321,o),
(545,321,cs),
(509,320.333,o),
(471.167,318.333,o),
(431.5,315,cs),
(391.833,311.667,o),
(351.333,310,o),
(310,310,cs),
(288.667,310,o),
(259,301.667,o),
(259,275,cs),
(259,260.333,o),
(273,247,o),
(301,247,cs),
(337,247,o),
(372.833,248.167,o),
(408.5,250.5,cs),
(444.167,252.833,o),
(478.667,254,o),
(512,254,cs)
);
},
{
closed = 1;
nodes = (
(308,880,o),
(330,859,o),
(357,859,cs),
(382,859,o),
(413,872,o),
(413,920,cs),
(413,951,o),
(391,972,o),
(364,972,cs),
(322,972,o),
(308,936,o),
(308,916,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
49 1 7 8 31 1 9 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 10 0 11 5 10 11 91 2 1 1 12 1 0 9 1 0 91 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 2 7 1 1 2 96 0 10 0 11 5 10 11 91 0 1 12 1 0 9 1 0 92 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 2 7 1 1 2 96 0 10 0 11 5 10 11 91 0 5 0 8 7 5 8 91 0 1 12 1 0 9 1 0 92 0 7 7 6 83 0 6 6 14 67 0 3 3 13 67 0 9 9 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
5 1 105 103 99 97 86 84 76 74 68 66 54 52 47 45 37 35 26 24 14 12 11 9 1 92 5 92 13 26
CALL[ ]	/* CallFunction */";
};
width = 656;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(415.864,-14,o),
(503.674,19.563,o),
(548,103,c),
(548,98.333,o),
(547.667,88.5,o),
(547,73.5,cs),
(546.333,58.5,o),
(546,45.333,o),
(546,34,cs),
(546,19.333,o),
(551.667,12,o),
(563,12,cs),
(569.667,12,o),
(579,18.333,o),
(579,33,cs),
(579,45,o),
(578.667,62.333,o),
(578,85,cs),
(577.333,107.667,o),
(577,134,o),
(577,164,cs),
(577,188,o),
(577.333,209.333,o),
(578,228,cs),
(578.667,246.667,o),
(579,261.667,o),
(579,273,cs),
(579,297,o),
(565,306,o),
(549,306,cs),
(513,304.667,o),
(476.833,303,o),
(440.5,301,cs),
(404.167,299,o),
(365.333,297,o),
(324,295,cs),
(301.333,293.667,o),
(273,291.333,o),
(273,278,cs),
(273,274,o),
(275.833,270.333,o),
(281.5,267,cs),
(287.167,263.667,o),
(297,262,o),
(311,262,cs),
(347,262,o),
(381.833,263.167,o),
(415.5,265.5,cs),
(449.167,267.833,o),
(482.667,269,o),
(516,269,cs),
(541.333,269,o),
(541,259.667,o),
(541,225,cs),
(541,82.439,o),
(447.573,19,o),
(347,19,cs),
(156.185,19,o),
(86,212.225,o),
(86,404,cs),
(86,514.667,o),
(115.167,615.833,o),
(162.5,688.5,cs),
(209.833,761.167,o),
(274.333,807,o),
(345,807,cs),
(478.333,807,o),
(529,692.333,o),
(529,527,cs),
(529,502.481,o),
(531.08,474,o),
(551,474,cs),
(560.333,474,o),
(565.667,478.667,o),
(567,488,cs),
(568.333,497.333,o),
(569,511.333,o),
(569,530,cs),
(569,547.333,o),
(568.667,567,o),
(568,589,cs),
(567.333,611,o),
(567,630.667,o),
(567,648,cs),
(567,674.667,o),
(567.667,698.167,o),
(569,718.5,cs),
(570.333,738.833,o),
(571,762.667,o),
(571,790,cs),
(571,806,o),
(559.667,813,o),
(549,813,cs),
(539.667,813,o),
(532,804.333,o),
(532,791,cs),
(537,702,l),
(499.667,799.333,o),
(426,838,o),
(354,838,cs),
(262,838,o),
(182.667,787.833,o),
(128,708.5,cs),
(73.333,629.167,o),
(41,520,o),
(41,404,cs),
(41,249.333,o),
(79.833,144.5,o),
(136.5,78.5,cs),
(193.167,12.5,o),
(268.333,-14,o),
(339,-14,cs)
);
},
{
closed = 1;
nodes = (
(364.667,889,o),
(387,899,o),
(387,935,cs),
(387,957.667,o),
(371.667,972,o),
(353,972,cs),
(325.258,972,o),
(312,944.895,o),
(312,931,cs),
(312,907,o),
(327.333,889,o),
(346,889,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
47 1 6 7 29 1 8 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 9 0 10 4 9 10 91 0 1 11 1 0 8 1 0 91 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 14 67 0 2 2 13 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 2 8 3 8 2 3 104 0 9 0 10 4 9 10 91 0 1 11 1 0 8 1 0 91 0 7 7 4 83 0 4 4 20 67 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 2 8 3 8 2 3 104 0 9 0 10 4 9 10 91 0 4 0 7 6 4 7 91 0 1 11 1 0 8 1 0 91 0 6 6 5 83 0 5 5 14 67 0 8 8 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
4 0 103 101 97 95 84 82 74 72 64 62 52 50 45 43 35 33 25 23 13 8 0 90 4 90 12 15
CALL[ ]	/* CallFunction */";
};
width = 635;
}
);
note = Gdotaccent;
unicode = 288;
},
{
glyphname = H;
kernLeft = B;
kernRight = H;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(677,730.909,o),
(681.674,745,o),
(758,745,cs),
(771.436,745,o),
(803,746.975,o),
(803,776,cs),
(803,802.667,o),
(786.667,807,o),
(744,807,cs),
(555,807,ls),
(527,807,o),
(505,799,o),
(505,775,cs),
(505,753,o),
(518.333,740.667,o),
(545,738,cs),
(567.667,735.333,o),
(581,728,o),
(581,712,cs),
(581,463,l),
(587.424,463,o),
(538.783,461,o),
(435,461,cs),
(401,461,o),
(367,461,o),
(333,461,cs),
(299,461,o),
(265,461.333,o),
(231,462,c),
(231,717,ls),
(231,747.667,o),
(245.667,757,o),
(295,757,cs),
(320.539,757,o),
(347,767.206,o),
(347,790,cs),
(347,814,o),
(330.667,821,o),
(288,821,cs),
(89,821,ls),
(71.667,821,o),
(50,813.333,o),
(50,788,cs),
(50,764,o),
(63,752,o),
(89,752,cs),
(123.667,752,o),
(135,743.667,o),
(135,721,cs),
(135,668.333,o),
(135.667,615,o),
(137,561,cs),
(138.333,507,o),
(139,453.667,o),
(139,401,cs),
(139,295.882,o),
(135,210.954,o),
(135,114,cs),
(135,75.333,o),
(117.333,68,o),
(96,68,cs),
(65.333,68,o),
(53,49,o),
(53,29,cs),
(53,5,o),
(81.333,0,o),
(108,0,cs),
(337,0,ls),
(350.333,0,o),
(365,4.333,o),
(365,35,cs),
(365,49.667,o),
(352.333,63,o),
(327,63,cs),
(231,63,l),
(231,377,l),
(299,378.333,o),
(367,379,o),
(435,379,cs),
(447.667,379,o),
(462.667,378.833,o),
(480,378.5,cs),
(497.333,378.167,o),
(513.667,378,o),
(529,378,cs),
(547,377.333,o),
(565.333,377,o),
(584,377,c),
(584,62,ls),
(584,42.667,o),
(580.833,30.167,o),
(574.5,24.5,cs),
(568.167,18.833,o),
(561.333,16,o),
(554,16,cs),
(526,16,o),
(504,3.333,o),
(504,-22,cs),
(504,-47.333,o),
(520,-55,o),
(556,-55,cs),
(791,-55,ls),
(804.333,-55,o),
(819,-50,o),
(819,-26,cs),
(819,4.667,o),
(795.667,8,o),
(781,8,cs),
(685,8,l),
(685,51.195,o),
(675,222.677,o),
(675,401,cs),
(675,498.007,o),
(677,622.602,o),
(677,705,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 11 7 10 7 11 10 104 2 1 0 0 1 0 1 87 13 9 2 7 7 8 83 12 1 8 8 12 67 0 3 3 10 83 0 10 10 23 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 11 7 10 7 11 10 104 2 1 0 0 1 0 1 87 13 9 2 7 7 8 83 0 8 8 12 67 13 9 2 7 7 12 83 0 12 12 14 67 0 3 3 10 83 0 10 10 23 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 11 7 10 7 11 10 104 0 10 0 3 4 10 3 89 2 1 0 0 1 0 1 87 13 9 2 7 7 8 83 0 8 8 12 67 13 9 2 7 7 12 83 0 12 12 14 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 11 7 10 7 11 10 104 0 2 4 0 0 2 96 0 10 0 3 4 10 3 89 0 0 0 1 0 1 88 13 9 2 7 7 8 83 0 8 8 12 67 13 9 2 7 7 12 83 0 12 12 14 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 11 13 10 13 11 10 104 0 2 4 0 0 2 96 0 10 0 3 4 10 3 89 0 0 0 1 0 1 88 9 1 7 7 8 83 0 8 8 12 67 0 13 13 12 83 0 12 12 14 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 7 9 13 9 7 96 0 11 13 10 13 11 10 104 0 6 3 4 4 6 96 0 2 4 0 0 2 96 0 10 0 3 6 10 3 89 0 0 0 1 0 1 88 0 9 9 8 83 0 8 8 14 67 0 13 13 12 83 0 12 12 14 67 0 4 4 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 7 9 13 9 7 96 0 11 13 10 13 11 10 104 0 6 3 4 4 6 96 0 2 4 0 0 2 96 0 12 0 13 11 12 13 91 0 10 0 3 6 10 3 89 0 0 0 1 0 1 88 0 9 9 8 83 0 8 8 14 67 0 4 4 5 84 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
110 108 102 99 91 90 90 83 80 78 51 44 36 52 33 131 36 52 42 14 24
CALL[ ]	/* CallFunction */";
};
width = 829;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(657,756.008,o),
(719.348,757,o),
(738,757,cs),
(754,757,o),
(780,759.333,o),
(780,782,cs),
(780,792,o),
(776,798.667,o),
(768,802,cs),
(760,805.333,o),
(745.333,807,o),
(724,807,cs),
(532,807,ls),
(520,807,o),
(495,802,o),
(495,782,cs),
(495,763.333,o),
(517.333,757,o),
(532,757,cs),
(551.329,757,o),
(582,757.148,o),
(582,734,cs),
(582,454,l),
(589.639,454,o),
(533.996,452,o),
(415,452,cs),
(381,452,o),
(347,452,o),
(313,452,cs),
(279,452,o),
(245,452.667,o),
(211,454,c),
(211,746,ls),
(211,769.999,o),
(264.404,771,o),
(282,771,cs),
(298,771,o),
(324,774.667,o),
(324,796,cs),
(324,805.333,o),
(320,811.833,o),
(312,815.5,cs),
(304,819.167,o),
(289.333,821,o),
(268,821,cs),
(76,821,ls),
(64,821,o),
(39,820,o),
(39,796,cs),
(39,776,o),
(61.333,771,o),
(76,771,cs),
(98.185,771,o),
(136,770.482,o),
(136,748,cs),
(136,693.333,o),
(136.667,635.5,o),
(138,574.5,cs),
(139.333,513.5,o),
(140,455.667,o),
(140,401,cs),
(140,346.333,o),
(139.333,294.333,o),
(138,245,cs),
(136.667,195.667,o),
(136,145.333,o),
(136,94,cs),
(136,48.253,o),
(104.41,48,o),
(83,48,cs),
(71,48,o),
(54,45.667,o),
(54,27,cs),
(54,4.333,o),
(76.333,0,o),
(95,0,cs),
(317,0,ls),
(330.333,0,o),
(342,4.333,o),
(342,27,cs),
(342,40.333,o),
(332.333,51,o),
(307,51,cs),
(211,51,l),
(211,386,l),
(279,387.333,o),
(347,388,o),
(415,388,cs),
(429.667,388,o),
(446.833,387.833,o),
(466.5,387.5,cs),
(486.167,387.167,o),
(504.667,387,o),
(522,387,cs),
(542.667,386.333,o),
(563.667,386,o),
(585,386,c),
(585,39,ls),
(585,-7.892,o),
(558.154,-7,o),
(541,-7,cs),
(529,-7,o),
(512,-12,o),
(512,-32,cs),
(512,-53.333,o),
(534.333,-55,o),
(553,-55,cs),
(771,-55,ls),
(784.333,-55,o),
(796,-50.667,o),
(796,-32,cs),
(796,-9.333,o),
(775.667,-4,o),
(761,-4,cs),
(665,-4,l),
(665,39.746,o),
(655,217.057,o),
(655,401,cs),
(655,505.47,o),
(657,642.044,o),
(657,732,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 11 12 10 12 11 10 104 2 1 0 0 1 0 1 87 9 1 7 7 8 83 0 8 8 12 67 14 1 12 12 13 83 0 13 13 14 67 0 3 3 10 83 0 10 10 15 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 11 12 10 12 11 10 104 0 10 0 3 4 10 3 89 2 1 0 0 1 0 1 87 9 1 7 7 8 83 0 8 8 12 67 14 1 12 12 13 83 0 13 13 14 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 11 12 10 12 11 10 104 0 10 0 3 4 10 3 89 2 1 0 0 1 0 1 87 9 1 7 7 8 83 0 8 8 14 67 14 1 12 12 13 83 0 13 13 14 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 11 12 10 12 11 10 104 0 13 14 1 12 11 13 12 91 0 10 0 3 4 10 3 89 2 1 0 0 1 0 1 87 9 1 7 7 8 83 0 8 8 14 67 6 1 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
117 114 110 107 103 100 96 95 95 88 84 81 52 60 52 52 33 132 52 52 42 15 24
CALL[ ]	/* CallFunction */";
};
width = 807;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(743,-55,ls),
(756.333,-55,o),
(763,-50.667,o),
(763,-42,cs),
(763,-31.333,o),
(747.667,-24,o),
(733,-24,cs),
(637,-24,l),
(637,-9.939,o),
(634.945,40.88,o),
(632,128.5,cs),
(629.333,207.833,o),
(627,306.333,o),
(627,401,cs),
(627,455.978,o),
(628,517.145,o),
(628,584.5,cs),
(628,652.34,o),
(629,708.174,o),
(629,752,cs),
(629,776.008,o),
(691.348,777,o),
(710,777,cs),
(726,777,o),
(747,777.333,o),
(747,792,cs),
(747,797.333,o),
(743.833,801.167,o),
(737.5,803.5,cs),
(731.167,805.833,o),
(717.333,807,o),
(696,807,cs),
(514,807,ls),
(502,807,o),
(477,806.667,o),
(477,792,cs),
(477,778.667,o),
(499.333,777,o),
(514,777,cs),
(541.294,777,o),
(584,777.173,o),
(584,754,cs),
(584,439,l),
(593.025,439,o),
(527.378,437,o),
(387,437,cs),
(353,437,o),
(319,437,o),
(285,437,cs),
(251,437,o),
(217,437.667,o),
(183,439,c),
(183,766,ls),
(183,789.999,o),
(236.404,791,o),
(254,791,cs),
(270,791,o),
(291,791.333,o),
(291,806,cs),
(291,811.333,o),
(287.833,815.167,o),
(281.5,817.5,cs),
(275.167,819.833,o),
(261.333,821,o),
(240,821,cs),
(58,821,ls),
(46,821,o),
(21,820.667,o),
(21,806,cs),
(21,792.667,o),
(43.333,791,o),
(58,791,cs),
(88.112,791,o),
(138,790.669,o),
(138,768,cs),
(138,709.333,o),
(138.667,648.167,o),
(140,584.5,cs),
(141.333,520.833,o),
(142,459.667,o),
(142,401,cs),
(142,342.333,o),
(141.333,286.833,o),
(140,234.5,cs),
(138.667,182.167,o),
(138,128.667,o),
(138,74,cs),
(138,30.297,o),
(98.22,28,o),
(65,28,cs),
(53,28,o),
(36,25,o),
(36,13,cs),
(36,2.333,o),
(58.333,0,o),
(77,0,cs),
(289,0,ls),
(302.333,0,o),
(309,4.333,o),
(309,13,cs),
(309,18.333,o),
(307.167,22.667,o),
(303.5,26,cs),
(299.833,29.333,o),
(291.667,31,o),
(279,31,cs),
(183,31,l),
(183,401,l),
(251,402.333,o),
(319,403,o),
(387,403,cs),
(404.333,403,o),
(424.167,402.833,o),
(446.5,402.5,cs),
(468.833,402.167,o),
(490.667,402,o),
(512,402,cs),
(536,401.333,o),
(561,401,o),
(587,401,c),
(587,19,ls),
(587,-28.694,o),
(548.753,-27,o),
(523,-27,cs),
(511,-27,o),
(494,-30,o),
(494,-42,cs),
(494,-52.667,o),
(516.333,-55,o),
(535,-55,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 11 12 10 12 11 10 104 2 1 0 0 1 0 1 87 9 1 7 7 8 83 0 8 8 12 67 14 1 12 12 13 83 0 13 13 14 67 0 3 3 10 83 0 10 10 15 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 11 12 10 12 11 10 104 0 10 0 3 4 10 3 89 2 1 0 0 1 0 1 87 9 1 7 7 8 83 0 8 8 12 67 14 1 12 12 13 83 0 13 13 14 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 11 12 10 12 11 10 104 0 10 0 3 4 10 3 89 2 1 0 0 1 0 1 87 9 1 7 7 8 83 0 8 8 14 67 14 1 12 12 13 83 0 13 13 14 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 11 12 10 12 11 10 104 0 13 14 1 12 11 13 12 91 0 10 0 3 4 10 3 89 2 1 0 0 1 0 1 87 9 1 7 7 8 83 0 8 8 14 67 6 1 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
117 114 110 107 103 100 96 95 95 88 84 81 52 60 52 51 33 132 52 51 44 15 24
CALL[ ]	/* CallFunction */";
};
width = 775;
}
);
note = H;
unicode = 72;
},
{
glyphname = Hbar;
kernLeft = B;
kernRight = H;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(680,730.909,o),
(684.674,745,o),
(761,745,cs),
(774.436,745,o),
(806,746.975,o),
(806,776,cs),
(806,802.667,o),
(789.667,807,o),
(747,807,cs),
(558,807,ls),
(530,807,o),
(508,799,o),
(508,775,cs),
(508,753,o),
(521.333,740.667,o),
(548,738,cs),
(570.667,735.333,o),
(584,728,o),
(584,712,cs),
(584,634,l),
(552.667,634,o),
(522.5,633.833,o),
(493.5,633.5,cs),
(464.5,633.167,o),
(443.333,633,o),
(430,633,cs),
(411.71,633,o),
(346.377,634,o),
(234,634,c),
(234,717,ls),
(234,747.667,o),
(248.667,757,o),
(298,757,cs),
(323.539,757,o),
(350,767.206,o),
(350,790,cs),
(350,814,o),
(333.667,821,o),
(291,821,cs),
(92,821,ls),
(74.667,821,o),
(53,813.333,o),
(53,788,cs),
(53,764,o),
(66,752,o),
(92,752,cs),
(126.667,752,o),
(138,743.667,o),
(138,721,cs),
(138,635,l),
(114,635,ls),
(91.333,635,o),
(73,614,o),
(73,594,cs),
(73,575.333,o),
(95.333,552,o),
(114,552,cs),
(140,552,l),
(141.333,501.333,o),
(142,450.333,o),
(142,401,cs),
(142,295.882,o),
(138,210.954,o),
(138,114,cs),
(138,75.333,o),
(120.333,68,o),
(99,68,cs),
(68.333,68,o),
(56,49,o),
(56,29,cs),
(56,5,o),
(84.333,0,o),
(111,0,cs),
(340,0,ls),
(353.333,0,o),
(368,4.333,o),
(368,35,cs),
(368,49.667,o),
(355.333,63,o),
(330,63,cs),
(234,63,l),
(234,377,l),
(302,378.333,o),
(370,379,o),
(438,379,cs),
(450.667,379,o),
(465.667,378.833,o),
(483,378.5,cs),
(500.333,378.167,o),
(516.667,378,o),
(532,378,cs),
(550,377.333,o),
(568.333,377,o),
(587,377,c),
(587,62,ls),
(587,42.667,o),
(583.833,30.167,o),
(577.5,24.5,cs),
(571.167,18.833,o),
(564.333,16,o),
(557,16,cs),
(529,16,o),
(507,3.333,o),
(507,-22,cs),
(507,-47.333,o),
(523,-55,o),
(559,-55,cs),
(794,-55,ls),
(807.333,-55,o),
(822,-50,o),
(822,-26,cs),
(822,4.667,o),
(798.667,8,o),
(784,8,cs),
(688,8,l),
(688,51.195,o),
(678,222.677,o),
(678,401,cs),
(678,553,l),
(719,553,ls),
(745.863,553,o),
(759,582.021,o),
(759,597,cs),
(759,618.333,o),
(740.333,636,o),
(727,636,cs),
(680,636,l),
(680,705,l),
(680,705,l)
);
},
{
closed = 1;
nodes = (
(590.424,463,o),
(541.783,461,o),
(438,461,cs),
(404,461,o),
(370,461,o),
(336,461,cs),
(302,461,o),
(268,461.333,o),
(234,462,c),
(234,552,l),
(347.847,552,o),
(450.251,553,o),
(584,553,c),
(584,463,l),
(584,463,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 19 1 18 1 19 18 104 14 10 2 0 17 9 2 1 19 0 1 91 4 1 2 0 3 2 3 87 16 13 2 11 11 12 83 15 1 12 12 12 67 0 5 5 18 83 0 18 18 23 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 19 1 18 1 19 18 104 14 10 2 0 17 9 2 1 19 0 1 91 4 1 2 0 3 2 3 87 16 13 2 11 11 12 83 0 12 12 12 67 16 13 2 11 11 15 83 0 15 15 14 67 0 5 5 18 83 0 18 18 23 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 19 1 18 1 19 18 104 14 10 2 0 17 9 2 1 19 0 1 91 0 18 0 5 6 18 5 89 4 1 2 0 3 2 3 87 16 13 2 11 11 12 83 0 12 12 12 67 16 13 2 11 11 15 83 0 15 15 14 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 19 1 18 1 19 18 104 0 4 6 2 2 4 96 14 10 2 0 17 9 2 1 19 0 1 91 0 18 0 5 6 18 5 89 0 2 0 3 2 3 88 16 13 2 11 11 12 83 0 12 12 12 67 16 13 2 11 11 15 83 0 15 15 14 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 19 1 18 1 19 18 104 0 4 6 2 2 4 96 14 10 2 0 17 9 2 1 19 0 1 91 0 18 0 5 6 18 5 89 0 2 0 3 2 3 88 13 1 11 11 12 83 0 12 12 12 67 0 16 16 15 83 0 15 15 14 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 87 values pushed */
0 11 13 16 13 11 96 0 19 1 18 1 19 18 104 0 8 5 6 6 8 96 0 4 6 2 2 4 96 14 10 2 0 17 9 2 1 19 0 1 91 0 18 0 5 8 18 5 89 0 2 0 3 2 3 88 0 13 13 12 83 0 12 12 14 67 0 16 16 15 83 0 15 15 14 67 0 6 6 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 85 values pushed */
0 11 13 16 13 11 96 0 19 1 18 1 19 18 104 0 8 5 6 6 8 96 0 4 6 2 2 4 96 0 15 0 16 0 15 16 91 14 10 2 0 17 9 2 1 19 0 1 91 0 18 0 5 8 18 5 89 0 2 0 3 2 3 88 0 13 13 12 83 0 12 12 14 67 0 6 6 7 84 0 7 7 13 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
144 143 143 136 135 130 125 123 117 114 106 98 95 93 87 84 81 79 76 74 70 68 36 52 33 131 36 52 38 38 32 20 24
CALL[ ]	/* CallFunction */";
};
width = 838;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(694.528,625,o),
(650.432,624.73,o),
(570.5,623.5,cs),
(489.277,622.25,o),
(439.982,622,o),
(413,622,cs),
(376.814,622,o),
(324.146,623,o),
(255,623,cs),
(186.705,623,o),
(138.037,624,o),
(109,624,cs),
(90.333,624,o),
(83,606.667,o),
(83,592,cs),
(83,577.333,o),
(94.333,559,o),
(109,559,cs),
(117,559,o),
(135.833,559,o),
(165.5,559,cs),
(195.167,559,o),
(230.5,559,o),
(271.5,559,cs),
(312.5,559,o),
(356.333,559.167,o),
(403,559.5,cs),
(449.667,559.833,o),
(493.667,560,o),
(535,560,cs),
(576.333,560,o),
(612.333,560,o),
(643,560,cs),
(673.667,560,o),
(693.333,560,o),
(702,560,cs),
(724.667,560,o),
(731,584.333,o),
(731,595,cs),
(731,611,o),
(720.667,625,o),
(710,625,cs)
);
},
{
closed = 1;
nodes = (
(659,756.008,o),
(721.348,757,o),
(740,757,cs),
(756,757,o),
(782,759.333,o),
(782,782,cs),
(782,792,o),
(778,798.667,o),
(770,802,cs),
(762,805.333,o),
(747.333,807,o),
(726,807,cs),
(534,807,ls),
(522,807,o),
(497,802,o),
(497,782,cs),
(497,763.333,o),
(519.333,757,o),
(534,757,cs),
(553.329,757,o),
(584,757.148,o),
(584,734,cs),
(584,454,l),
(591.639,454,o),
(535.996,452,o),
(417,452,cs),
(383,452,o),
(349,452,o),
(315,452,cs),
(281,452,o),
(247,452.667,o),
(213,454,c),
(213,746,ls),
(213,769.999,o),
(266.404,771,o),
(284,771,cs),
(300,771,o),
(326,774.667,o),
(326,796,cs),
(326,805.333,o),
(322,811.833,o),
(314,815.5,cs),
(306,819.167,o),
(291.333,821,o),
(270,821,cs),
(78,821,ls),
(66,821,o),
(41,820,o),
(41,796,cs),
(41,776,o),
(63.333,771,o),
(78,771,cs),
(100.185,771,o),
(138,770.482,o),
(138,748,cs),
(138,693.333,o),
(138.667,635.5,o),
(140,574.5,cs),
(141.333,513.5,o),
(142,455.667,o),
(142,401,cs),
(142,346.333,o),
(141.333,294.333,o),
(140,245,cs),
(138.667,195.667,o),
(138,145.333,o),
(138,94,cs),
(138,48.253,o),
(106.41,48,o),
(85,48,cs),
(73,48,o),
(56,45.667,o),
(56,27,cs),
(56,4.333,o),
(78.333,0,o),
(97,0,cs),
(319,0,ls),
(332.333,0,o),
(344,4.333,o),
(344,27,cs),
(344,40.333,o),
(334.333,51,o),
(309,51,cs),
(213,51,l),
(213,386,l),
(281,387.333,o),
(349,388,o),
(417,388,cs),
(431.667,388,o),
(448.833,387.833,o),
(468.5,387.5,cs),
(488.167,387.167,o),
(506.667,387,o),
(524,387,cs),
(544.667,386.333,o),
(565.667,386,o),
(587,386,c),
(587,39,ls),
(587,-7.892,o),
(560.154,-7,o),
(543,-7,cs),
(531,-7,o),
(514,-12,o),
(514,-32,cs),
(514,-53.333,o),
(536.333,-55,o),
(555,-55,cs),
(773,-55,ls),
(786.333,-55,o),
(798,-50.667,o),
(798,-32,cs),
(798,-9.333,o),
(777.667,-4,o),
(763,-4,cs),
(667,-4,l),
(667,39.746,o),
(657,217.057,o),
(657,401,cs),
(657,505.47,o),
(659,642.044,o),
(659,732,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
0 13 1 12 1 13 12 104 17 1 0 0 1 13 0 1 91 4 1 2 0 3 2 3 87 11 1 9 9 10 83 0 10 10 12 67 16 1 14 14 15 83 0 15 15 14 67 0 5 5 12 83 0 12 12 15 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 13 1 12 1 13 12 104 17 1 0 0 1 13 0 1 91 0 12 0 5 6 12 5 89 4 1 2 0 3 2 3 87 11 1 9 9 10 83 0 10 10 12 67 16 1 14 14 15 83 0 15 15 14 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 13 1 12 1 13 12 104 17 1 0 0 1 13 0 1 91 0 12 0 5 6 12 5 89 4 1 2 0 3 2 3 87 11 1 9 9 10 83 0 10 10 14 67 16 1 14 14 15 83 0 15 15 14 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 13 1 12 1 13 12 104 0 15 16 1 14 0 15 14 91 17 1 0 0 1 13 0 1 91 0 12 0 5 6 12 5 89 4 1 2 0 3 2 3 87 11 1 9 9 10 83 0 10 10 14 67 8 1 6 6 7 83 0 7 7 13 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
1 0 150 147 143 140 136 133 129 128 128 121 117 114 110 107 103 100 88 85 81 78 74 72 71 63 59 56 52 49 45 43 14 5 0 32 1 18 18 15
CALL[ ]	/* CallFunction */";
};
width = 812;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(743,-55,ls),
(756.333,-55,o),
(763,-50.667,o),
(763,-42,cs),
(763,-31.333,o),
(747.667,-24,o),
(733,-24,cs),
(637,-24,l),
(637,-9.939,o),
(634.945,40.88,o),
(632,128.5,cs),
(629.333,207.833,o),
(627,306.333,o),
(627,401,cs),
(627,571,l),
(678,571,ls),
(692.667,571,o),
(697,584.333,o),
(697,591,cs),
(697,599,o),
(691.333,606,o),
(686,606,cs),
(681.333,606,o),
(673.833,606,o),
(663.5,606,cs),
(653.167,606,o),
(641.333,605.667,o),
(628,605,c),
(628,637,o),
(628.167,666.333,o),
(628.5,693,cs),
(628.833,719.667,o),
(629,739.333,o),
(629,752,cs),
(629,776.008,o),
(691.348,777,o),
(710,777,cs),
(726,777,o),
(747,777.333,o),
(747,792,cs),
(747,797.333,o),
(743.833,801.167,o),
(737.5,803.5,cs),
(731.167,805.833,o),
(717.333,807,o),
(696,807,cs),
(514,807,ls),
(502,807,o),
(477,806.667,o),
(477,792,cs),
(477,778.667,o),
(499.333,777,o),
(514,777,cs),
(541.294,777,o),
(584,777.173,o),
(584,754,cs),
(584,605,l),
(485.151,605,o),
(439.865,603,o),
(389,603,cs),
(358.233,603,o),
(276.865,604,o),
(183,604,c),
(183,766,ls),
(183,789.999,o),
(236.404,791,o),
(254,791,cs),
(270,791,o),
(291,791.333,o),
(291,806,cs),
(291,811.333,o),
(287.833,815.167,o),
(281.5,817.5,cs),
(275.167,819.833,o),
(261.333,821,o),
(240,821,cs),
(58,821,ls),
(46,821,o),
(21,820.667,o),
(21,806,cs),
(21,792.667,o),
(43.333,791,o),
(58,791,cs),
(88.112,791,o),
(138,790.669,o),
(138,768,cs),
(138,742,o),
(138,715.333,o),
(138,688,cs),
(138,660.667,o),
(138.333,633,o),
(139,605,c),
(85,605,ls),
(74.333,605,o),
(69,596,o),
(69,588,cs),
(69,580,o),
(75.667,570,o),
(85,570,cs),
(140,570,l),
(141.333,511.333,o),
(142,454.333,o),
(142,401,cs),
(142,342.333,o),
(141.333,286.833,o),
(140,234.5,cs),
(138.667,182.167,o),
(138,128.667,o),
(138,74,cs),
(138,30.297,o),
(98.22,28,o),
(65,28,cs),
(53,28,o),
(36,25,o),
(36,13,cs),
(36,2.333,o),
(58.333,0,o),
(77,0,cs),
(289,0,ls),
(302.333,0,o),
(309,4.333,o),
(309,13,cs),
(309,18.333,o),
(307.167,22.667,o),
(303.5,26,cs),
(299.833,29.333,o),
(291.667,31,o),
(279,31,cs),
(183,31,l),
(183,401,l),
(251,402.333,o),
(319,403,o),
(387,403,cs),
(404.333,403,o),
(424.167,402.833,o),
(446.5,402.5,cs),
(468.833,402.167,o),
(490.667,402,o),
(512,402,cs),
(536,401.333,o),
(561,401,o),
(587,401,c),
(587,19,ls),
(587,-28.694,o),
(548.753,-27,o),
(523,-27,cs),
(511,-27,o),
(494,-30,o),
(494,-42,cs),
(494,-52.667,o),
(516.333,-55,o),
(535,-55,cs)
);
},
{
closed = 1;
nodes = (
(353,437,o),
(319,437,o),
(285,437,cs),
(251,437,o),
(217,437.667,o),
(183,439,c),
(183,570,l),
(316.462,570,o),
(448.254,571,o),
(584,571,c),
(584,439,l),
(593.025,439,o),
(527.378,437,o),
(387,437,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 19 1 18 1 19 18 104 14 10 21 3 0 20 9 2 1 19 0 1 91 4 1 2 0 3 2 3 87 13 1 11 11 12 83 0 12 12 12 67 17 1 15 15 16 83 0 16 16 14 67 0 5 5 18 83 22 1 18 18 15 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 19 1 18 1 19 18 104 14 10 21 3 0 20 9 2 1 19 0 1 91 22 1 18 0 5 6 18 5 89 4 1 2 0 3 2 3 87 13 1 11 11 12 83 0 12 12 12 67 17 1 15 15 16 83 0 16 16 14 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 19 1 18 1 19 18 104 14 10 21 3 0 20 9 2 1 19 0 1 91 22 1 18 0 5 6 18 5 89 4 1 2 0 3 2 3 87 13 1 11 11 12 83 0 12 12 14 67 17 1 15 15 16 83 0 16 16 14 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 70 values pushed */
0 19 1 18 1 19 18 104 0 16 17 1 15 0 16 15 91 14 10 21 3 0 20 9 2 1 19 0 1 91 22 1 18 0 5 6 18 5 89 4 1 2 0 3 2 3 87 13 1 11 11 12 83 0 12 12 14 67 8 1 6 6 7 83 0 7 7 13 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 52 values pushed */
144 140 1 0 151 146 145 144 140 154 144 152 131 128 124 121 117 114 110 100 96 93 89 86 82 79 73 71 67 65 56 53 49 46 43 41 40 32 28 25 21 18 15 13 7 5 0 139 1 137 23 15
CALL[ ]	/* CallFunction */";
};
width = 775;
}
);
note = Hbar;
unicode = 294;
},
{
glyphname = Hcircumflex;
kernLeft = B;
kernRight = H;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(561.667,830,o),
(564,840.667,o),
(564,850,cs),
(564,891.398,o),
(455.749,972,o),
(431,972,cs),
(419.818,972,o),
(385.187,950.474,o),
(357.5,927.5,cs),
(326.167,901.5,o),
(298,869.333,o),
(298,844,cs),
(298,834.667,o),
(302.667,830,o),
(312,830,cs),
(328.991,830,o),
(390.967,854.096,o),
(431,880,c),
(489.555,842.111,o),
(545.41,830,o),
(551,830,cs)
);
},
{
closed = 1;
nodes = (
(677,730.909,o),
(681.674,745,o),
(758,745,cs),
(771.436,745,o),
(803,746.975,o),
(803,776,cs),
(803,802.667,o),
(786.667,807,o),
(744,807,cs),
(555,807,ls),
(527,807,o),
(505,799,o),
(505,775,cs),
(505,753,o),
(518.333,740.667,o),
(545,738,cs),
(567.667,735.333,o),
(581,728,o),
(581,712,cs),
(581,463,l),
(587.424,463,o),
(538.783,461,o),
(435,461,cs),
(401,461,o),
(367,461,o),
(333,461,cs),
(299,461,o),
(265,461.333,o),
(231,462,c),
(231,717,ls),
(231,747.667,o),
(245.667,757,o),
(295,757,cs),
(320.539,757,o),
(347,767.206,o),
(347,790,cs),
(347,814,o),
(330.667,821,o),
(288,821,cs),
(89,821,ls),
(71.667,821,o),
(50,813.333,o),
(50,788,cs),
(50,764,o),
(63,752,o),
(89,752,cs),
(123.667,752,o),
(135,743.667,o),
(135,721,cs),
(135,668.333,o),
(135.667,615,o),
(137,561,cs),
(138.333,507,o),
(139,453.667,o),
(139,401,cs),
(139,295.882,o),
(135,210.954,o),
(135,114,cs),
(135,75.333,o),
(117.333,68,o),
(96,68,cs),
(65.333,68,o),
(53,49,o),
(53,29,cs),
(53,5,o),
(81.333,0,o),
(108,0,cs),
(337,0,ls),
(350.333,0,o),
(365,4.333,o),
(365,35,cs),
(365,49.667,o),
(352.333,63,o),
(327,63,cs),
(231,63,l),
(231,377,l),
(299,378.333,o),
(367,379,o),
(435,379,cs),
(447.667,379,o),
(462.667,378.833,o),
(480,378.5,cs),
(497.333,378.167,o),
(513.667,378,o),
(529,378,cs),
(547,377.333,o),
(565.333,377,o),
(584,377,c),
(584,62,ls),
(584,42.667,o),
(580.833,30.167,o),
(574.5,24.5,cs),
(568.167,18.833,o),
(561.333,16,o),
(554,16,cs),
(526,16,o),
(504,3.333,o),
(504,-22,cs),
(504,-47.333,o),
(520,-55,o),
(556,-55,cs),
(791,-55,ls),
(804.333,-55,o),
(819,-50,o),
(819,-26,cs),
(819,4.667,o),
(795.667,8,o),
(781,8,cs),
(685,8,l),
(685,51.195,o),
(675,222.677,o),
(675,401,cs),
(675,498.007,o),
(677,622.602,o),
(677,705,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 2 0 2 106 1 17 2 0 11 0 106 0 14 10 13 10 14 13 104 5 1 3 0 4 3 4 87 16 12 2 10 10 11 83 15 1 11 11 12 67 0 6 6 13 83 0 13 13 23 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 2 0 2 106 1 17 2 0 11 0 106 0 14 10 13 10 14 13 104 5 1 3 0 4 3 4 87 16 12 2 10 10 11 83 0 11 11 12 67 16 12 2 10 10 15 83 0 15 15 14 67 0 6 6 13 83 0 13 13 23 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 2 0 2 106 1 17 2 0 11 0 106 0 14 10 13 10 14 13 104 0 13 0 6 7 13 6 90 5 1 3 0 4 3 4 87 16 12 2 10 10 11 83 0 11 11 12 67 16 12 2 10 10 15 83 0 15 15 14 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 2 0 2 106 1 17 2 0 11 0 106 0 14 10 13 10 14 13 104 0 5 7 3 3 5 96 0 13 0 6 7 13 6 90 0 3 0 4 3 4 88 16 12 2 10 10 11 83 0 11 11 12 67 16 12 2 10 10 15 83 0 15 15 14 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 2 0 2 106 1 17 2 0 11 0 106 0 14 16 13 16 14 13 104 0 5 7 3 3 5 96 0 13 0 6 7 13 6 90 0 3 0 4 3 4 88 12 1 10 10 11 83 0 11 11 12 67 0 16 16 15 83 0 15 15 14 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 87 values pushed */
0 2 0 2 106 1 17 2 0 11 0 106 0 10 12 16 12 10 96 0 14 16 13 16 14 13 104 0 9 6 7 7 9 96 0 5 7 3 3 5 96 0 13 0 6 9 13 6 90 0 3 0 4 3 4 88 0 12 12 11 83 0 11 11 14 67 0 16 16 15 83 0 15 15 14 67 0 7 7 8 84 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 85 values pushed */
0 2 0 2 106 1 17 2 0 11 0 106 0 10 12 16 12 10 96 0 14 16 13 16 14 13 104 0 9 6 7 7 9 96 0 5 7 3 3 5 96 0 15 0 16 14 15 16 91 0 13 0 6 9 13 6 90 0 3 0 4 3 4 88 0 12 12 11 83 0 11 11 14 67 0 7 7 8 84 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
1 0 135 133 127 124 116 115 115 108 105 103 97 94 91 89 77 75 71 68 64 62 61 53 50 48 44 41 37 35 18 16 11 9 0 24 1 24 18 15
CALL[ ]	/* CallFunction */";
};
width = 829;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(541,847,o),
(544,854.667,o),
(544,864,cs),
(544,900.28,o),
(436.728,972,o),
(413,972,cs),
(391.04,972,o),
(283,901.46,o),
(283,860,cs),
(283,851.333,o),
(286.667,847,o),
(294,847,cs),
(311.679,847,o),
(373.008,874.475,o),
(413,898,c),
(476.994,860.357,o),
(524.663,847,o),
(533,847,cs)
);
},
{
closed = 1;
nodes = (
(657,756.008,o),
(719.348,757,o),
(738,757,cs),
(754,757,o),
(780,759.333,o),
(780,782,cs),
(780,792,o),
(776,798.667,o),
(768,802,cs),
(760,805.333,o),
(745.333,807,o),
(724,807,cs),
(532,807,ls),
(520,807,o),
(495,802,o),
(495,782,cs),
(495,763.333,o),
(517.333,757,o),
(532,757,cs),
(551.329,757,o),
(582,757.148,o),
(582,734,cs),
(582,454,l),
(589.639,454,o),
(533.996,452,o),
(415,452,cs),
(381,452,o),
(347,452,o),
(313,452,cs),
(279,452,o),
(245,452.667,o),
(211,454,c),
(211,746,ls),
(211,769.999,o),
(264.404,771,o),
(282,771,cs),
(298,771,o),
(324,774.667,o),
(324,796,cs),
(324,805.333,o),
(320,811.833,o),
(312,815.5,cs),
(304,819.167,o),
(289.333,821,o),
(268,821,cs),
(76,821,ls),
(64,821,o),
(39,820,o),
(39,796,cs),
(39,776,o),
(61.333,771,o),
(76,771,cs),
(98.185,771,o),
(136,770.482,o),
(136,748,cs),
(136,693.333,o),
(136.667,635.5,o),
(138,574.5,cs),
(139.333,513.5,o),
(140,455.667,o),
(140,401,cs),
(140,346.333,o),
(139.333,294.333,o),
(138,245,cs),
(136.667,195.667,o),
(136,145.333,o),
(136,94,cs),
(136,48.253,o),
(104.41,48,o),
(83,48,cs),
(71,48,o),
(54,45.667,o),
(54,27,cs),
(54,4.333,o),
(76.333,0,o),
(95,0,cs),
(317,0,ls),
(330.333,0,o),
(342,4.333,o),
(342,27,cs),
(342,40.333,o),
(332.333,51,o),
(307,51,cs),
(211,51,l),
(211,386,l),
(279,387.333,o),
(347,388,o),
(415,388,cs),
(429.667,388,o),
(446.833,387.833,o),
(466.5,387.5,cs),
(486.167,387.167,o),
(504.667,387,o),
(522,387,cs),
(542.667,386.333,o),
(563.667,386,o),
(585,386,c),
(585,39,ls),
(585,-7.892,o),
(558.154,-7,o),
(541,-7,cs),
(529,-7,o),
(512,-12,o),
(512,-32,cs),
(512,-53.333,o),
(534.333,-55,o),
(553,-55,cs),
(771,-55,ls),
(784.333,-55,o),
(796,-50.667,o),
(796,-32,cs),
(796,-9.333,o),
(775.667,-4,o),
(761,-4,cs),
(665,-4,l),
(665,39.746,o),
(655,217.057,o),
(655,401,cs),
(655,505.47,o),
(657,642.044,o),
(657,732,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 2 0 2 106 1 18 2 0 11 0 106 0 14 15 13 15 14 13 104 5 1 3 0 4 3 4 87 12 1 10 10 11 83 0 11 11 12 67 17 1 15 15 16 83 0 16 16 14 67 0 6 6 13 83 0 13 13 15 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 2 0 2 106 1 18 2 0 11 0 106 0 14 15 13 15 14 13 104 0 13 0 6 7 13 6 90 5 1 3 0 4 3 4 87 12 1 10 10 11 83 0 11 11 12 67 17 1 15 15 16 83 0 16 16 14 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 2 0 2 106 1 18 2 0 11 0 106 0 14 15 13 15 14 13 104 0 13 0 6 7 13 6 90 5 1 3 0 4 3 4 87 12 1 10 10 11 83 0 11 11 14 67 17 1 15 15 16 83 0 16 16 14 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 68 values pushed */
0 2 0 2 106 1 18 2 0 11 0 106 0 14 15 13 15 14 13 104 0 16 17 1 15 14 16 15 91 0 13 0 6 7 13 6 90 5 1 3 0 4 3 4 87 12 1 10 10 11 83 0 11 11 14 67 9 1 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
1 0 142 139 135 132 128 125 121 120 120 113 109 106 102 99 95 92 80 77 73 70 66 64 63 55 51 48 44 41 37 35 18 16 11 9 0 24 1 24 19 15
CALL[ ]	/* CallFunction */";
};
width = 807;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(743,-55,ls),
(756.333,-55,o),
(763,-50.667,o),
(763,-42,cs),
(763,-31.333,o),
(747.667,-24,o),
(733,-24,cs),
(637,-24,l),
(637,-9.939,o),
(634.945,40.88,o),
(632,128.5,cs),
(629.333,207.833,o),
(627,306.333,o),
(627,401,cs),
(627,455.978,o),
(628,517.145,o),
(628,584.5,cs),
(628,652.34,o),
(629,708.174,o),
(629,752,cs),
(629,776.008,o),
(691.348,777,o),
(710,777,cs),
(726,777,o),
(747,777.333,o),
(747,792,cs),
(747,797.333,o),
(743.833,801.167,o),
(737.5,803.5,cs),
(731.167,805.833,o),
(717.333,807,o),
(696,807,cs),
(514,807,ls),
(502,807,o),
(477,806.667,o),
(477,792,cs),
(477,778.667,o),
(499.333,777,o),
(514,777,cs),
(541.294,777,o),
(584,777.173,o),
(584,754,cs),
(584,439,l),
(593.025,439,o),
(527.378,437,o),
(387,437,cs),
(353,437,o),
(319,437,o),
(285,437,cs),
(251,437,o),
(217,437.667,o),
(183,439,c),
(183,766,ls),
(183,789.999,o),
(236.404,791,o),
(254,791,cs),
(270,791,o),
(291,791.333,o),
(291,806,cs),
(291,811.333,o),
(287.833,815.167,o),
(281.5,817.5,cs),
(275.167,819.833,o),
(261.333,821,o),
(240,821,cs),
(58,821,ls),
(46,821,o),
(21,820.667,o),
(21,806,cs),
(21,792.667,o),
(43.333,791,o),
(58,791,cs),
(88.112,791,o),
(138,790.669,o),
(138,768,cs),
(138,709.333,o),
(138.667,648.167,o),
(140,584.5,cs),
(141.333,520.833,o),
(142,459.667,o),
(142,401,cs),
(142,342.333,o),
(141.333,286.833,o),
(140,234.5,cs),
(138.667,182.167,o),
(138,128.667,o),
(138,74,cs),
(138,30.297,o),
(98.22,28,o),
(65,28,cs),
(53,28,o),
(36,25,o),
(36,13,cs),
(36,2.333,o),
(58.333,0,o),
(77,0,cs),
(289,0,ls),
(302.333,0,o),
(309,4.333,o),
(309,13,cs),
(309,18.333,o),
(307.167,22.667,o),
(303.5,26,cs),
(299.833,29.333,o),
(291.667,31,o),
(279,31,cs),
(183,31,l),
(183,401,l),
(251,402.333,o),
(319,403,o),
(387,403,cs),
(404.333,403,o),
(424.167,402.833,o),
(446.5,402.5,cs),
(468.833,402.167,o),
(490.667,402,o),
(512,402,cs),
(536,401.333,o),
(561,401,o),
(587,401,c),
(587,19,ls),
(587,-28.694,o),
(548.753,-27,o),
(523,-27,cs),
(511,-27,o),
(494,-30,o),
(494,-42,cs),
(494,-52.667,o),
(516.333,-55,o),
(535,-55,cs)
);
},
{
closed = 1;
nodes = (
(281.695,876,o),
(351.068,908.448,o),
(388,928,c),
(452.504,893.851,o),
(501.254,876,o),
(508,876,cs),
(513.333,876,o),
(516,879.667,o),
(516,887,cs),
(516,912.374,o),
(410.706,972,o),
(388,972,cs),
(364.08,972,o),
(261,910.641,o),
(261,887,cs),
(261,879.667,o),
(263.667,876,o),
(269,876,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 2 0 2 106 1 18 2 0 11 0 106 0 14 15 13 15 14 13 104 5 1 3 0 4 3 4 87 12 1 10 10 11 83 0 11 11 12 67 17 1 15 15 16 83 0 16 16 14 67 0 6 6 13 83 0 13 13 15 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 2 0 2 106 1 18 2 0 11 0 106 0 14 15 13 15 14 13 104 0 13 0 6 7 13 6 90 5 1 3 0 4 3 4 87 12 1 10 10 11 83 0 11 11 12 67 17 1 15 15 16 83 0 16 16 14 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 2 0 2 106 1 18 2 0 11 0 106 0 14 15 13 15 14 13 104 0 13 0 6 7 13 6 90 5 1 3 0 4 3 4 87 12 1 10 10 11 83 0 11 11 14 67 17 1 15 15 16 83 0 16 16 14 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 68 values pushed */
0 2 0 2 106 1 18 2 0 11 0 106 0 14 15 13 15 14 13 104 0 16 17 1 15 14 16 15 91 0 13 0 6 7 13 6 90 5 1 3 0 4 3 4 87 12 1 10 10 11 83 0 11 11 14 67 9 1 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
1 0 141 138 134 131 127 124 120 119 119 112 108 105 101 98 94 91 79 76 72 69 66 64 63 55 51 48 44 41 38 36 18 16 11 9 0 23 1 23 19 15
CALL[ ]	/* CallFunction */";
};
width = 775;
}
);
note = Hcircumflex;
unicode = 292;
},
{
glyphname = I;
kernLeft = B;
kernRight = I;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(236,744.333,o),
(261,749,o),
(289,753,cs),
(326.333,758.333,o),
(335,770,o),
(335,790,cs),
(335,811.333,o),
(326.667,821,o),
(284,821,cs),
(78,821,ls),
(55.333,821,o),
(31,817,o),
(31,789,cs),
(31,762.333,o),
(43.333,754.667,o),
(78,752,cs),
(102.667,750.667,o),
(119.167,747.333,o),
(127.5,742,cs),
(135.833,736.667,o),
(140,728.333,o),
(140,717,cs),
(140,663.667,o),
(140.667,611,o),
(142,559,cs),
(143.333,507,o),
(144,454.333,o),
(144,401,cs),
(144,348.333,o),
(143.333,299.5,o),
(142,254.5,cs),
(140.667,209.5,o),
(140,162.333,o),
(140,113,cs),
(140,75.667,o),
(123,68,o),
(75,64,cs),
(59,62.667,o),
(43,51.667,o),
(43,29,cs),
(43,3.667,o),
(55.667,0,o),
(77,0,cs),
(305,0,ls),
(337,0,o),
(353,9.667,o),
(353,29,cs),
(353,51.667,o),
(344.333,65,o),
(319,65,cs),
(234,65,l),
(236,719,l),
(236,719,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 2 2 3 83 0 3 3 12 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 2 2 3 83 0 3 3 14 67 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
33 30 25 24 51 32 4 17
CALL[ ]	/* CallFunction */";
};
width = 374;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(214,769.602,o),
(264.168,771,o),
(280,771,cs),
(296,771,o),
(317,777.333,o),
(317,796,cs),
(317,804.667,o),
(313.833,811,o),
(307.5,815,cs),
(301.167,819,o),
(287.333,821,o),
(266,821,cs),
(64,821,ls),
(52,821,o),
(27,818.667,o),
(27,796,cs),
(27,774.946,o),
(50.708,771,o),
(64,771,cs),
(87.736,771,o),
(139,770.843,o),
(139,748,cs),
(139,692.667,o),
(139.667,634.833,o),
(141,574.5,cs),
(142.333,514.167,o),
(143,456.333,o),
(143,401,cs),
(143,346.333,o),
(142.333,294.333,o),
(141,245,cs),
(139.667,195.667,o),
(139,145.333,o),
(139,94,cs),
(139,48.763,o),
(95.368,48,o),
(71,48,cs),
(59,48,o),
(42,41.667,o),
(42,23,cs),
(42,3,o),
(63,0,o),
(83,0,cs),
(315,0,ls),
(332.333,0,o),
(335,15,o),
(335,23,cs),
(335,41.667,o),
(319.667,51,o),
(305,51,cs),
(214,51,l),
(214,746,l),
(214,746,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
5 1 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
5 1 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
52 54 60 52 52 32 6 21
CALL[ ]	/* CallFunction */";
};
width = 354;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(289,0,ls),
(302.333,0,o),
(309,4.333,o),
(309,13,cs),
(309,23.667,o),
(293.667,31,o),
(279,31,cs),
(183,31,l),
(183,766,ls),
(183,789.999,o),
(236.404,791,o),
(254,791,cs),
(270,791,o),
(291,791.333,o),
(291,806,cs),
(291,811.333,o),
(287.833,815.167,o),
(281.5,817.5,cs),
(275.167,819.833,o),
(261.333,821,o),
(240,821,cs),
(58,821,ls),
(46,821,o),
(21,820.667,o),
(21,806,cs),
(21,792.667,o),
(43.333,791,o),
(58,791,cs),
(88.112,791,o),
(138,790.669,o),
(138,768,cs),
(138,709.333,o),
(138.667,648.167,o),
(140,584.5,cs),
(141.333,520.833,o),
(142,459.667,o),
(142,401,cs),
(142,342.333,o),
(141.333,286.833,o),
(140,234.5,cs),
(138.667,182.167,o),
(138,128.667,o),
(138,74,cs),
(138,30.297,o),
(98.22,28,o),
(65,28,cs),
(53,28,o),
(36,25,o),
(36,13,cs),
(36,2.333,o),
(58.333,0,o),
(77,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
5 1 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
5 1 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
52 52 60 52 51 32 6 21
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
note = I;
unicode = 73;
},
{
glyphname = IJ;
kernLeft = B;
kernRight = IJ;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(236,744.333,o),
(261,749,o),
(289,753,cs),
(326.333,758.333,o),
(335,770,o),
(335,790,cs),
(335,811.333,o),
(326.667,821,o),
(284,821,cs),
(78,821,ls),
(55.333,821,o),
(31,817,o),
(31,789,cs),
(31,762.333,o),
(43.333,754.667,o),
(78,752,cs),
(102.667,750.667,o),
(119.167,747.333,o),
(127.5,742,cs),
(135.833,736.667,o),
(140,728.333,o),
(140,717,cs),
(140,663.667,o),
(140.667,611,o),
(142,559,cs),
(143.333,507,o),
(144,454.333,o),
(144,401,cs),
(144,348.333,o),
(143.333,299.5,o),
(142,254.5,cs),
(140.667,209.5,o),
(140,162.333,o),
(140,113,cs),
(140,75.667,o),
(123,68,o),
(75,64,cs),
(59,62.667,o),
(43,51.667,o),
(43,29,cs),
(43,3.667,o),
(55.667,0,o),
(77,0,cs),
(305,0,ls),
(337,0,o),
(353,9.667,o),
(353,29,cs),
(353,51.667,o),
(344.333,65,o),
(319,65,cs),
(234,65,l),
(236,719,l),
(236,719,l)
);
},
{
closed = 1;
nodes = (
(446,155,o),
(453.333,175.667,o),
(460,181,c),
(470,172.333,o),
(481.667,168,o),
(495,168,cs),
(523,168,o),
(544,188.667,o),
(544,222,cs),
(544,260.925,o),
(512.645,280,o),
(479,280,cs),
(421.878,280,o),
(376,223.782,o),
(376,145,cs),
(376,49,o),
(440.667,-14,o),
(566,-14,cs),
(720.667,-14,o),
(810,83,o),
(810,279,cs),
(810,723,ls),
(810,732.333,o),
(814.5,739.5,o),
(823.5,744.5,cs),
(832.5,749.5,o),
(848.333,752,o),
(871,752,cs),
(895,752,o),
(914,763.333,o),
(914,786,cs),
(914,807.333,o),
(904.667,821,o),
(862,821,cs),
(625,821,ls),
(602.333,821,o),
(588,812.333,o),
(588,787,cs),
(588,764.333,o),
(603.667,753,o),
(635,753,cs),
(656.455,753,o),
(714,754.183,o),
(714,730,cs),
(714,722.753,o),
(717,562.706,o),
(717,371,cs),
(717,208.73,o),
(712.736,53,o),
(557,53,cs),
(485,53,o),
(446,87,o),
(446,135,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
97 1 10 9 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 9 0 10 0 9 10 91 7 5 2 2 2 3 83 6 1 3 3 12 67 4 1 0 0 1 83 8 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 9 0 10 0 9 10 91 7 5 2 2 2 3 83 6 1 3 3 12 67 4 1 0 0 1 83 0 1 1 13 67 4 1 0 0 8 83 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 9 0 10 0 9 10 91 7 5 2 2 2 3 83 6 1 3 3 12 67 0 0 0 1 83 0 1 1 13 67 0 4 4 8 83 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 9 0 10 0 9 10 91 7 5 2 2 2 3 83 6 1 3 3 14 67 0 0 0 1 83 0 1 1 13 67 0 4 4 8 83 0 8 8 21 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
96 94 88 86 80 78 73 71 67 64 61 58 46 44 33 30 25 24 51 32 11 17
CALL[ ]	/* CallFunction */";
};
width = 919;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(214,769.602,o),
(264.168,771,o),
(280,771,cs),
(296,771,o),
(317,777.333,o),
(317,796,cs),
(317,804.667,o),
(313.833,811,o),
(307.5,815,cs),
(301.167,819,o),
(287.333,821,o),
(266,821,cs),
(64,821,ls),
(52,821,o),
(27,818.667,o),
(27,796,cs),
(27,774.946,o),
(50.708,771,o),
(64,771,cs),
(87.736,771,o),
(139,770.843,o),
(139,748,cs),
(139,692.667,o),
(139.667,634.833,o),
(141,574.5,cs),
(142.333,514.167,o),
(143,456.333,o),
(143,401,cs),
(143,346.333,o),
(142.333,294.333,o),
(141,245,cs),
(139.667,195.667,o),
(139,145.333,o),
(139,94,cs),
(139,48.763,o),
(95.368,48,o),
(71,48,cs),
(59,48,o),
(42,41.667,o),
(42,23,cs),
(42,3,o),
(63,0,o),
(83,0,cs),
(315,0,ls),
(332.333,0,o),
(335,15,o),
(335,23,cs),
(335,41.667,o),
(319.667,51,o),
(305,51,cs),
(214,51,l),
(214,746,l),
(214,746,l)
);
},
{
closed = 1;
nodes = (
(411,155,o),
(417,175,o),
(428,182,c),
(437,174,o),
(448,170,o),
(461,170,cs),
(486,170,o),
(497,192,o),
(497,216,cs),
(497,251,o),
(464,264,o),
(443,264,cs),
(388,264,o),
(350,213,o),
(350,137,cs),
(350,50,o),
(424,-14,o),
(521,-14,cs),
(688,-14,o),
(763,83,o),
(763,279,cs),
(763,746,ls),
(763,770,o),
(802,771,o),
(814,771,cs),
(830,771,o),
(851,777,o),
(851,796,cs),
(851,805,o),
(848,811,o),
(842,815,cs),
(835,819,o),
(821,821,o),
(800,821,cs),
(603,821,ls),
(591,821,o),
(566,819,o),
(566,796,cs),
(566,777,o),
(588,771,o),
(603,771,cs),
(618,771,o),
(688,773,o),
(688,748,cs),
(688,747,o),
(691,583,o),
(691,379,cs),
(691,203,o),
(686,50,o),
(526,50,cs),
(472,50,o),
(411,79,o),
(411,135,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
112 1 12 11 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 11 0 12 0 11 12 91 9 7 5 3 3 3 4 83 8 1 4 4 12 67 6 2 2 0 0 1 83 0 1 1 13 67 6 2 2 0 0 10 83 0 10 10 21 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 11 0 12 0 11 12 91 9 7 5 3 3 3 4 83 8 1 4 4 14 67 6 2 2 0 0 1 83 0 1 1 13 67 6 2 2 0 0 10 83 0 10 10 21 10 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
111 109 103 101 95 93 87 84 52 60 40 52 54 60 52 52 33 13 35
CALL[ ]	/* CallFunction */";
};
width = 877;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(289,0,ls),
(302.333,0,o),
(309,4.333,o),
(309,13,cs),
(309,23.667,o),
(293.667,31,o),
(279,31,cs),
(183,31,l),
(183,766,ls),
(183,789.999,o),
(236.404,791,o),
(254,791,cs),
(270,791,o),
(291,791.333,o),
(291,806,cs),
(291,811.333,o),
(287.833,815.167,o),
(281.5,817.5,cs),
(275.167,819.833,o),
(261.333,821,o),
(240,821,cs),
(58,821,ls),
(46,821,o),
(21,820.667,o),
(21,806,cs),
(21,792.667,o),
(43.333,791,o),
(58,791,cs),
(88.112,791,o),
(138,790.669,o),
(138,768,cs),
(138,709.333,o),
(138.667,648.167,o),
(140,584.5,cs),
(141.333,520.833,o),
(142,459.667,o),
(142,401,cs),
(142,342.333,o),
(141.333,286.833,o),
(140,234.5,cs),
(138.667,182.167,o),
(138,128.667,o),
(138,74,cs),
(138,30.297,o),
(98.22,28,o),
(65,28,cs),
(53,28,o),
(36,25,o),
(36,13,cs),
(36,2.333,o),
(58.333,0,o),
(77,0,cs)
);
},
{
closed = 1;
nodes = (
(628,-14,o),
(696,83,o),
(696,279,cs),
(696,766,ls),
(696,790,o),
(749,791,o),
(767,791,cs),
(783,791,o),
(804,791,o),
(804,806,cs),
(804,811,o),
(801,815,o),
(795,818,cs),
(788,820,o),
(774,821,o),
(753,821,cs),
(571,821,ls),
(559,821,o),
(534,821,o),
(534,806,cs),
(534,793,o),
(556,791,o),
(571,791,cs),
(601,791,o),
(651,791,o),
(651,768,cs),
(651,750,o),
(651,710,o),
(653,619,cs),
(654,541,o),
(654,467,o),
(654,379,cs),
(654,284,o),
(654,195,o),
(633,129,cs),
(612,63,o),
(569,20,o),
(484,20,cs),
(410,20,o),
(344,59,o),
(344,131,cs),
(344,151,o),
(348,175,o),
(365,182,c),
(372,174,o),
(381,167,o),
(392,167,cs),
(408,167,o),
(429,177,o),
(429,204,cs),
(429,227,o),
(406,237,o),
(393,237,cs),
(322,237,o),
(313,160,o),
(313,137,cs),
(313,48,o),
(385,-14,o),
(479,-14,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
112 1 12 11 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 11 0 12 0 11 12 91 9 7 5 3 3 3 4 83 8 1 4 4 12 67 2 1 0 0 1 83 0 1 1 13 67 0 6 6 10 83 0 10 10 21 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 11 0 12 0 11 12 91 9 7 5 3 3 3 4 83 8 1 4 4 14 67 2 1 0 0 1 83 0 1 1 13 67 0 6 6 10 83 0 10 10 21 10 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
110 108 104 102 94 92 86 83 52 62 40 52 52 60 52 51 33 13 35
CALL[ ]	/* CallFunction */";
};
width = 817;
}
);
note = IJ;
unicode = 306;
},
{
glyphname = Iacute;
kernLeft = B;
kernRight = I;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(260,953.333,o),
(245.667,972,o),
(219,972,cs),
(181.323,972,o),
(105,899.498,o),
(105,872,cs),
(105,856,o),
(120,841,o),
(140,841,cs),
(173.423,841,o),
(260,896.957,o),
(260,936,cs)
);
},
{
closed = 1;
nodes = (
(236,744.333,o),
(261,749,o),
(289,753,cs),
(326.333,758.333,o),
(335,770,o),
(335,790,cs),
(335,811.333,o),
(326.667,821,o),
(284,821,cs),
(78,821,ls),
(55.333,821,o),
(31,817,o),
(31,789,cs),
(31,762.333,o),
(43.333,754.667,o),
(78,752,cs),
(102.667,750.667,o),
(119.167,747.333,o),
(127.5,742,cs),
(135.833,736.667,o),
(140,728.333,o),
(140,717,cs),
(140,663.667,o),
(140.667,611,o),
(142,559,cs),
(143.333,507,o),
(144,454.333,o),
(144,401,cs),
(144,348.333,o),
(143.333,299.5,o),
(142,254.5,cs),
(140.667,209.5,o),
(140,162.333,o),
(140,113,cs),
(140,75.667,o),
(123,68,o),
(75,64,cs),
(59,62.667,o),
(43,51.667,o),
(43,29,cs),
(43,3.667,o),
(55.667,0,o),
(77,0,cs),
(305,0,ls),
(337,0,o),
(353,9.667,o),
(353,29,cs),
(353,51.667,o),
(344.333,65,o),
(319,65,cs),
(234,65,l),
(236,719,l),
(236,719,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 1 0 1 106 0 0 5 0 106 0 4 4 5 83 0 5 5 12 67 0 2 2 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 1 0 1 106 0 0 5 0 106 0 4 4 5 83 0 5 5 14 67 0 2 2 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
49 46 41 40 51 34 38 36 6 19
CALL[ ]	/* CallFunction */";
};
width = 374;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(240,959.667,o),
(228,972,o),
(208,972,cs),
(178.753,972,o),
(102,903.873,o),
(102,877,cs),
(102,863.667,o),
(111.333,854,o),
(126,854,cs),
(152.12,854,o),
(240,908.21,o),
(240,941,cs)
);
},
{
closed = 1;
nodes = (
(214,769.602,o),
(264.168,771,o),
(280,771,cs),
(296,771,o),
(317,777.333,o),
(317,796,cs),
(317,804.667,o),
(313.833,811,o),
(307.5,815,cs),
(301.167,819,o),
(287.333,821,o),
(266,821,cs),
(64,821,ls),
(52,821,o),
(27,818.667,o),
(27,796,cs),
(27,774.946,o),
(50.708,771,o),
(64,771,cs),
(87.736,771,o),
(139,770.843,o),
(139,748,cs),
(139,692.667,o),
(139.667,634.833,o),
(141,574.5,cs),
(142.333,514.167,o),
(143,456.333,o),
(143,401,cs),
(143,346.333,o),
(142.333,294.333,o),
(141,245,cs),
(139.667,195.667,o),
(139,145.333,o),
(139,94,cs),
(139,48.763,o),
(95.368,48,o),
(71,48,cs),
(59,48,o),
(42,41.667,o),
(42,23,cs),
(42,3,o),
(63,0,o),
(83,0,cs),
(315,0,ls),
(332.333,0,o),
(335,15,o),
(335,23,cs),
(335,41.667,o),
(319.667,51,o),
(305,51,cs),
(214,51,l),
(214,746,l),
(214,746,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 1 0 1 106 0 0 6 0 106 7 1 5 5 6 83 0 6 6 12 67 4 1 2 2 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 0 1 106 0 0 6 0 106 7 1 5 5 6 83 0 6 6 14 67 4 1 2 2 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
52 54 60 52 52 34 38 36 8 23
CALL[ ]	/* CallFunction */";
};
width = 354;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(289,0,ls),
(302.333,0,o),
(309,4.333,o),
(309,13,cs),
(309,23.667,o),
(293.667,31,o),
(279,31,cs),
(183,31,l),
(183,766,ls),
(183,789.999,o),
(236.404,791,o),
(254,791,cs),
(270,791,o),
(291,791.333,o),
(291,806,cs),
(291,811.333,o),
(287.833,815.167,o),
(281.5,817.5,cs),
(275.167,819.833,o),
(261.333,821,o),
(240,821,cs),
(58,821,ls),
(46,821,o),
(21,820.667,o),
(21,806,cs),
(21,792.667,o),
(43.333,791,o),
(58,791,cs),
(88.112,791,o),
(138,790.669,o),
(138,768,cs),
(138,709.333,o),
(138.667,648.167,o),
(140,584.5,cs),
(141.333,520.833,o),
(142,459.667,o),
(142,401,cs),
(142,342.333,o),
(141.333,286.833,o),
(140,234.5,cs),
(138.667,182.167,o),
(138,128.667,o),
(138,74,cs),
(138,30.297,o),
(98.22,28,o),
(65,28,cs),
(53,28,o),
(36,25,o),
(36,13,cs),
(36,2.333,o),
(58.333,0,o),
(77,0,cs)
);
},
{
closed = 1;
nodes = (
(122.311,875,o),
(212,928.367,o),
(212,950,cs),
(212,968.667,o),
(203.667,972,o),
(193,972,cs),
(173.012,972,o),
(98,910.697,o),
(98,886,cs),
(98,878.667,o),
(100.667,875,o),
(106,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 1 0 1 106 0 0 6 0 106 7 1 5 5 6 83 0 6 6 12 67 4 1 2 2 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 0 1 106 0 0 6 0 106 7 1 5 5 6 83 0 6 6 14 67 4 1 2 2 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
52 52 60 52 51 34 37 36 8 23
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
note = Iacute;
unicode = 205;
},
{
glyphname = Ibreve;
kernLeft = B;
kernRight = I;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(236,744.333,o),
(261,749,o),
(289,753,cs),
(326.333,758.333,o),
(335,770,o),
(335,790,cs),
(335,811.333,o),
(326.667,821,o),
(284,821,cs),
(78,821,ls),
(55.333,821,o),
(31,817,o),
(31,789,cs),
(31,762.333,o),
(43.333,754.667,o),
(78,752,cs),
(102.667,750.667,o),
(119.167,747.333,o),
(127.5,742,cs),
(135.833,736.667,o),
(140,728.333,o),
(140,717,cs),
(140,663.667,o),
(140.667,611,o),
(142,559,cs),
(143.333,507,o),
(144,454.333,o),
(144,401,cs),
(144,348.333,o),
(143.333,299.5,o),
(142,254.5,cs),
(140.667,209.5,o),
(140,162.333,o),
(140,113,cs),
(140,75.667,o),
(123,68,o),
(75,64,cs),
(59,62.667,o),
(43,51.667,o),
(43,29,cs),
(43,3.667,o),
(55.667,0,o),
(77,0,cs),
(305,0,ls),
(337,0,o),
(353,9.667,o),
(353,29,cs),
(353,51.667,o),
(344.333,65,o),
(319,65,cs),
(234,65,l),
(236,719,l),
(236,719,l)
);
},
{
closed = 1;
nodes = (
(310,967.667,o),
(292,971,o),
(272,971,cs),
(254.667,971,o),
(240,956.667,o),
(240,942,cs),
(240,936.667,o),
(235.5,931.5,o),
(226.5,926.5,cs),
(217.5,921.5,o),
(203.333,919,o),
(184,919,cs),
(153.535,919,o),
(125,926.638,o),
(125,942,cs),
(125,964.667,o),
(111.667,971,o),
(89,971,cs),
(66.333,971,o),
(57,958.333,o),
(57,941,cs),
(57,898.333,o),
(102.333,862,o),
(189,862,cs),
(240.962,862,o),
(310,888.821,o),
(310,941,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
7 1 5 6 5 106 0 6 0 4 3 6 4 91 0 2 2 3 83 0 3 3 12 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
7 1 5 6 5 106 0 6 0 4 3 6 4 91 0 2 2 3 83 0 3 3 14 67 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
68 66 62 60 54 52 48 46 33 30 25 24 51 32 8 17
CALL[ ]	/* CallFunction */";
};
width = 374;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(214,769.602,o),
(264.168,771,o),
(280,771,cs),
(296,771,o),
(317,777.333,o),
(317,796,cs),
(317,804.667,o),
(313.833,811,o),
(307.5,815,cs),
(301.167,819,o),
(287.333,821,o),
(266,821,cs),
(64,821,ls),
(52,821,o),
(27,818.667,o),
(27,796,cs),
(27,774.946,o),
(50.708,771,o),
(64,771,cs),
(87.736,771,o),
(139,770.843,o),
(139,748,cs),
(139,692.667,o),
(139.667,634.833,o),
(141,574.5,cs),
(142.333,514.167,o),
(143,456.333,o),
(143,401,cs),
(143,346.333,o),
(142.333,294.333,o),
(141,245,cs),
(139.667,195.667,o),
(139,145.333,o),
(139,94,cs),
(139,48.763,o),
(95.368,48,o),
(71,48,cs),
(59,48,o),
(42,41.667,o),
(42,23,cs),
(42,3,o),
(63,0,o),
(83,0,cs),
(315,0,ls),
(332.333,0,o),
(335,15,o),
(335,23,cs),
(335,41.667,o),
(319.667,51,o),
(305,51,cs),
(214,51,l),
(214,746,l),
(214,746,l)
);
},
{
closed = 1;
nodes = (
(294,971,o),
(277,972,o),
(264,972,cs),
(249,972,o),
(238,960,o),
(238,945,cs),
(238,928,o),
(213,910,o),
(174,910,cs),
(144,910,o),
(109,919,o),
(109,945,cs),
(109,965,o),
(100,972,o),
(81,972,cs),
(64,972,o),
(55,963,o),
(55,944,cs),
(55,903,o),
(101,865,o),
(177,865,cs),
(228,865,o),
(294,892,o),
(294,944,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
9 1 7 8 7 106 0 8 0 6 4 8 6 91 5 1 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
9 1 7 8 7 106 0 8 0 6 4 8 6 91 5 1 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
77 75 38 35 40 52 54 60 52 52 33 10 35
CALL[ ]	/* CallFunction */";
};
width = 354;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(289,0,ls),
(302.333,0,o),
(309,4.333,o),
(309,13,cs),
(309,23.667,o),
(293.667,31,o),
(279,31,cs),
(183,31,l),
(183,766,ls),
(183,789.999,o),
(236.404,791,o),
(254,791,cs),
(270,791,o),
(291,791.333,o),
(291,806,cs),
(291,811.333,o),
(287.833,815.167,o),
(281.5,817.5,cs),
(275.167,819.833,o),
(261.333,821,o),
(240,821,cs),
(58,821,ls),
(46,821,o),
(21,820.667,o),
(21,806,cs),
(21,792.667,o),
(43.333,791,o),
(58,791,cs),
(88.112,791,o),
(138,790.669,o),
(138,768,cs),
(138,709.333,o),
(138.667,648.167,o),
(140,584.5,cs),
(141.333,520.833,o),
(142,459.667,o),
(142,401,cs),
(142,342.333,o),
(141.333,286.833,o),
(140,234.5,cs),
(138.667,182.167,o),
(138,128.667,o),
(138,74,cs),
(138,30.297,o),
(98.22,28,o),
(65,28,cs),
(53,28,o),
(36,25,o),
(36,13,cs),
(36,2.333,o),
(58.333,0,o),
(77,0,cs)
);
},
{
closed = 1;
nodes = (
(211.017,875,o),
(269,899.402,o),
(269,948,cs),
(269,969.333,o),
(260.667,972,o),
(250,972,cs),
(238.667,972,o),
(233,964.333,o),
(233,949,cs),
(233,922.229,o),
(194.336,900,o),
(158,900,cs),
(115.691,900,o),
(84,909.669,o),
(84,949,cs),
(84,965,o),
(81.667,972,o),
(67,972,cs),
(55.667,972,o),
(50,964,o),
(50,948,cs),
(50,908,o),
(98,875,o),
(158,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
3 1 1 2 1 106 0 2 0 0 8 2 0 91 9 1 7 7 8 83 0 8 8 12 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
3 1 1 2 1 106 0 2 0 0 8 2 0 91 9 1 7 7 8 83 0 8 8 14 67 6 1 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
72 69 52 60 52 51 34 37 38 35 36 10 24
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
note = Ibreve;
unicode = 300;
},
{
glyphname = Icircumflex;
kernLeft = B;
kernRight = I;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(312.667,830,o),
(315,841.667,o),
(315,851,cs),
(315,891.942,o),
(206.536,972,o),
(182,972,cs),
(170.856,972,o),
(136.177,950.45,o),
(109,928,cs),
(78.333,902.667,o),
(50,870.667,o),
(50,844,cs),
(50,837.333,o),
(55,830,o),
(63,830,cs),
(79.72,830,o),
(140.662,853.252,o),
(182,880,c),
(240.555,842.111,o),
(296.41,830,o),
(302,830,cs)
);
},
{
closed = 1;
nodes = (
(236,744.333,o),
(261,749,o),
(289,753,cs),
(326.333,758.333,o),
(335,770,o),
(335,790,cs),
(335,811.333,o),
(326.667,821,o),
(284,821,cs),
(78,821,ls),
(55.333,821,o),
(31,817,o),
(31,789,cs),
(31,762.333,o),
(43.333,754.667,o),
(78,752,cs),
(102.667,750.667,o),
(119.167,747.333,o),
(127.5,742,cs),
(135.833,736.667,o),
(140,728.333,o),
(140,717,cs),
(140,663.667,o),
(140.667,611,o),
(142,559,cs),
(143.333,507,o),
(144,454.333,o),
(144,401,cs),
(144,348.333,o),
(143.333,299.5,o),
(142,254.5,cs),
(140.667,209.5,o),
(140,162.333,o),
(140,113,cs),
(140,75.667,o),
(123,68,o),
(75,64,cs),
(59,62.667,o),
(43,51.667,o),
(43,29,cs),
(43,3.667,o),
(55.667,0,o),
(77,0,cs),
(305,0,ls),
(337,0,o),
(353,9.667,o),
(353,29,cs),
(353,51.667,o),
(344.333,65,o),
(319,65,cs),
(234,65,l),
(236,719,l),
(236,719,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 2 106 1 7 2 0 6 0 106 0 5 5 6 83 0 6 6 12 67 0 3 3 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 2 106 1 7 2 0 6 0 106 0 5 5 6 83 0 6 6 14 67 0 3 3 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
1 0 59 56 51 50 34 31 28 26 19 17 11 9 0 25 1 25 8 15
CALL[ ]	/* CallFunction */";
};
width = 374;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(299,847,o),
(302,854.667,o),
(302,864,cs),
(302,900.28,o),
(194.728,972,o),
(171,972,cs),
(149.04,972,o),
(41,901.46,o),
(41,860,cs),
(41,851.333,o),
(44.667,847,o),
(52,847,cs),
(69.679,847,o),
(131.008,874.475,o),
(171,898,c),
(234.994,860.357,o),
(282.663,847,o),
(291,847,cs)
);
},
{
closed = 1;
nodes = (
(214,769.602,o),
(264.168,771,o),
(280,771,cs),
(296,771,o),
(317,777.333,o),
(317,796,cs),
(317,804.667,o),
(313.833,811,o),
(307.5,815,cs),
(301.167,819,o),
(287.333,821,o),
(266,821,cs),
(64,821,ls),
(52,821,o),
(27,818.667,o),
(27,796,cs),
(27,774.946,o),
(50.708,771,o),
(64,771,cs),
(87.736,771,o),
(139,770.843,o),
(139,748,cs),
(139,692.667,o),
(139.667,634.833,o),
(141,574.5,cs),
(142.333,514.167,o),
(143,456.333,o),
(143,401,cs),
(143,346.333,o),
(142.333,294.333,o),
(141,245,cs),
(139.667,195.667,o),
(139,145.333,o),
(139,94,cs),
(139,48.763,o),
(95.368,48,o),
(71,48,cs),
(59,48,o),
(42,41.667,o),
(42,23,cs),
(42,3,o),
(63,0,o),
(83,0,cs),
(315,0,ls),
(332.333,0,o),
(335,15,o),
(335,23,cs),
(335,41.667,o),
(319.667,51,o),
(305,51,cs),
(214,51,l),
(214,746,l),
(214,746,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 2 0 2 106 1 9 2 0 7 0 106 8 1 6 6 7 83 0 7 7 12 67 5 1 3 3 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 0 2 106 1 9 2 0 7 0 106 8 1 6 6 7 83 0 7 7 14 67 5 1 3 3 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
1 0 72 69 65 62 56 53 41 38 34 31 27 25 18 16 11 9 0 24 1 24 10 15
CALL[ ]	/* CallFunction */";
};
width = 354;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(289,0,ls),
(302.333,0,o),
(309,4.333,o),
(309,13,cs),
(309,23.667,o),
(293.667,31,o),
(279,31,cs),
(183,31,l),
(183,766,ls),
(183,789.999,o),
(236.404,791,o),
(254,791,cs),
(270,791,o),
(291,791.333,o),
(291,806,cs),
(291,811.333,o),
(287.833,815.167,o),
(281.5,817.5,cs),
(275.167,819.833,o),
(261.333,821,o),
(240,821,cs),
(58,821,ls),
(46,821,o),
(21,820.667,o),
(21,806,cs),
(21,792.667,o),
(43.333,791,o),
(58,791,cs),
(88.112,791,o),
(138,790.669,o),
(138,768,cs),
(138,709.333,o),
(138.667,648.167,o),
(140,584.5,cs),
(141.333,520.833,o),
(142,459.667,o),
(142,401,cs),
(142,342.333,o),
(141.333,286.833,o),
(140,234.5,cs),
(138.667,182.167,o),
(138,128.667,o),
(138,74,cs),
(138,30.297,o),
(98.22,28,o),
(65,28,cs),
(53,28,o),
(36,25,o),
(36,13,cs),
(36,2.333,o),
(58.333,0,o),
(77,0,cs)
);
},
{
closed = 1;
nodes = (
(43.158,875,o),
(91.069,894.154,o),
(155,928,c),
(219.308,893.955,o),
(267.037,875,o),
(275,875,cs),
(280.333,875,o),
(283,878.667,o),
(283,886,cs),
(283,910.708,o),
(180.596,972,o),
(155,972,cs),
(131.629,972,o),
(28,910.79,o),
(28,886,cs),
(28,878.667,o),
(30.667,875,o),
(36,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 2 0 2 106 1 9 2 0 7 0 106 8 1 6 6 7 83 0 7 7 12 67 5 1 3 3 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 0 2 106 1 9 2 0 7 0 106 8 1 6 6 7 83 0 7 7 14 67 5 1 3 3 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
1 0 68 65 61 58 54 51 39 36 32 29 26 24 18 16 11 9 0 23 1 23 10 15
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
note = Icircumflex;
unicode = 206;
},
{
glyphname = Idieresis;
kernLeft = B;
kernRight = I;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(18,868.333,o),
(45,841,o),
(77,841,cs),
(106.675,841,o),
(144,855.646,o),
(144,911,cs),
(144,947,o),
(116,972,o),
(84,972,cs),
(37.034,972,o),
(18,930.847,o),
(18,907,cs)
);
},
{
closed = 1;
nodes = (
(225,857.333,o),
(252,830,o),
(284,830,cs),
(313.675,830,o),
(351,844.646,o),
(351,900,cs),
(351,937.333,o),
(323,961,o),
(291,961,cs),
(244.034,961,o),
(225,919.847,o),
(225,896,cs)
);
},
{
closed = 1;
nodes = (
(236,744.333,o),
(261,749,o),
(289,753,cs),
(326.333,758.333,o),
(335,770,o),
(335,790,cs),
(335,811.333,o),
(326.667,821,o),
(284,821,cs),
(78,821,ls),
(55.333,821,o),
(31,817,o),
(31,789,cs),
(31,762.333,o),
(43.333,754.667,o),
(78,752,cs),
(102.667,750.667,o),
(119.167,747.333,o),
(127.5,742,cs),
(135.833,736.667,o),
(140,728.333,o),
(140,717,cs),
(140,663.667,o),
(140.667,611,o),
(142,559,cs),
(143.333,507,o),
(144,454.333,o),
(144,401,cs),
(144,348.333,o),
(143.333,299.5,o),
(142,254.5,cs),
(140.667,209.5,o),
(140,162.333,o),
(140,113,cs),
(140,75.667,o),
(123,68,o),
(75,64,cs),
(59,62.667,o),
(43,51.667,o),
(43,29,cs),
(43,3.667,o),
(55.667,0,o),
(77,0,cs),
(305,0,ls),
(337,0,o),
(353,9.667,o),
(353,29,cs),
(353,51.667,o),
(344.333,65,o),
(319,65,cs),
(234,65,l),
(236,719,l),
(236,719,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
2 1 0 3 1 1 7 0 1 91 0 6 6 7 83 0 7 7 12 67 0 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 7 2 3 91 0 6 6 7 83 0 7 7 12 67 0 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 7 2 3 91 0 6 6 7 83 0 7 7 14 67 0 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
65 62 57 56 51 34 38 38 38 36 8 21
CALL[ ]	/* CallFunction */";
};
width = 374;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(17,882.667,o),
(39.333,859,o),
(66,859,cs),
(91.333,859,o),
(122,872,o),
(122,920,cs),
(122,950.667,o),
(99.667,972,o),
(73,972,cs),
(34.685,972,o),
(17,936.643,o),
(17,916,cs)
);
},
{
closed = 1;
nodes = (
(224,870.667,o),
(246.333,847,o),
(273,847,cs),
(298.333,847,o),
(329,860,o),
(329,908,cs),
(329,938.667,o),
(306.667,960,o),
(280,960,cs),
(241.685,960,o),
(224,924.643,o),
(224,904,cs)
);
},
{
closed = 1;
nodes = (
(214,769.602,o),
(264.168,771,o),
(280,771,cs),
(296,771,o),
(317,777.333,o),
(317,796,cs),
(317,804.667,o),
(313.833,811,o),
(307.5,815,cs),
(301.167,819,o),
(287.333,821,o),
(266,821,cs),
(64,821,ls),
(52,821,o),
(27,818.667,o),
(27,796,cs),
(27,774.946,o),
(50.708,771,o),
(64,771,cs),
(87.736,771,o),
(139,770.843,o),
(139,748,cs),
(139,692.667,o),
(139.667,634.833,o),
(141,574.5,cs),
(142.333,514.167,o),
(143,456.333,o),
(143,401,cs),
(143,346.333,o),
(142.333,294.333,o),
(141,245,cs),
(139.667,195.667,o),
(139,145.333,o),
(139,94,cs),
(139,48.763,o),
(95.368,48,o),
(71,48,cs),
(59,48,o),
(42,41.667,o),
(42,23,cs),
(42,3,o),
(63,0,o),
(83,0,cs),
(315,0,ls),
(332.333,0,o),
(335,15,o),
(335,23,cs),
(335,41.667,o),
(319.667,51,o),
(305,51,cs),
(214,51,l),
(214,746,l),
(214,746,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 9 1 7 7 8 83 0 8 8 12 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 9 1 7 7 8 83 0 8 8 14 67 6 1 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
75 72 54 60 52 52 34 36 38 36 36 10 24
CALL[ ]	/* CallFunction */";
};
width = 354;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(289,0,ls),
(302.333,0,o),
(309,4.333,o),
(309,13,cs),
(309,23.667,o),
(293.667,31,o),
(279,31,cs),
(183,31,l),
(183,766,ls),
(183,789.999,o),
(236.404,791,o),
(254,791,cs),
(270,791,o),
(291,791.333,o),
(291,806,cs),
(291,811.333,o),
(287.833,815.167,o),
(281.5,817.5,cs),
(275.167,819.833,o),
(261.333,821,o),
(240,821,cs),
(58,821,ls),
(46,821,o),
(21,820.667,o),
(21,806,cs),
(21,792.667,o),
(43.333,791,o),
(58,791,cs),
(88.112,791,o),
(138,790.669,o),
(138,768,cs),
(138,709.333,o),
(138.667,648.167,o),
(140,584.5,cs),
(141.333,520.833,o),
(142,459.667,o),
(142,401,cs),
(142,342.333,o),
(141.333,286.833,o),
(140,234.5,cs),
(138.667,182.167,o),
(138,128.667,o),
(138,74,cs),
(138,30.297,o),
(98.22,28,o),
(65,28,cs),
(53,28,o),
(36,25,o),
(36,13,cs),
(36,2.333,o),
(58.333,0,o),
(77,0,cs)
);
},
{
closed = 1;
nodes = (
(68.667,889,o),
(91,899,o),
(91,935,cs),
(91,957.667,o),
(75.667,972,o),
(57,972,cs),
(29.258,972,o),
(16,944.895,o),
(16,931,cs),
(16,907,o),
(31.333,889,o),
(50,889,cs)
);
},
{
closed = 1;
nodes = (
(275.667,875,o),
(298,885,o),
(298,921,cs),
(298,943.667,o),
(282.667,958,o),
(264,958,cs),
(236.258,958,o),
(223,930.895,o),
(223,917,cs),
(223,893,o),
(238.333,875,o),
(257,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 9 1 7 7 8 83 0 8 8 12 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 8 2 3 91 9 1 7 7 8 83 0 8 8 14 67 6 1 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
72 69 52 60 52 51 34 36 38 36 36 10 24
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
note = Idieresis;
unicode = 207;
},
{
glyphname = Idotaccent;
kernLeft = B;
kernRight = I;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(236,744.333,o),
(261,749,o),
(289,753,cs),
(326.333,758.333,o),
(335,770,o),
(335,790,cs),
(335,811.333,o),
(326.667,821,o),
(284,821,cs),
(78,821,ls),
(55.333,821,o),
(31,817,o),
(31,789,cs),
(31,762.333,o),
(43.333,754.667,o),
(78,752,cs),
(102.667,750.667,o),
(119.167,747.333,o),
(127.5,742,cs),
(135.833,736.667,o),
(140,728.333,o),
(140,717,cs),
(140,663.667,o),
(140.667,611,o),
(142,559,cs),
(143.333,507,o),
(144,454.333,o),
(144,401,cs),
(144,348.333,o),
(143.333,299.5,o),
(142,254.5,cs),
(140.667,209.5,o),
(140,162.333,o),
(140,113,cs),
(140,75.667,o),
(123,68,o),
(75,64,cs),
(59,62.667,o),
(43,51.667,o),
(43,29,cs),
(43,3.667,o),
(55.667,0,o),
(77,0,cs),
(305,0,ls),
(337,0,o),
(353,9.667,o),
(353,29,cs),
(353,51.667,o),
(344.333,65,o),
(319,65,cs),
(234,65,l),
(236,719,l),
(236,719,l)
);
},
{
closed = 1;
nodes = (
(124,863.333,o),
(149.667,840,o),
(183,840,cs),
(212.675,840,o),
(250,854.646,o),
(250,910,cs),
(250,946,o),
(222,971,o),
(190,971,cs),
(142.488,971,o),
(124,933.161,o),
(124,906,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 0 5 3 4 5 91 0 2 2 3 83 0 3 3 12 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 4 0 5 3 4 5 91 0 2 2 3 83 0 3 3 14 67 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
56 54 48 46 33 30 25 24 51 32 6 17
CALL[ ]	/* CallFunction */";
};
width = 374;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(214,769.602,o),
(264.168,771,o),
(280,771,cs),
(296,771,o),
(317,777.333,o),
(317,796,cs),
(317,804.667,o),
(313.833,811,o),
(307.5,815,cs),
(301.167,819,o),
(287.333,821,o),
(266,821,cs),
(64,821,ls),
(52,821,o),
(27,818.667,o),
(27,796,cs),
(27,774.946,o),
(50.708,771,o),
(64,771,cs),
(87.736,771,o),
(139,770.843,o),
(139,748,cs),
(139,692.667,o),
(139.667,634.833,o),
(141,574.5,cs),
(142.333,514.167,o),
(143,456.333,o),
(143,401,cs),
(143,346.333,o),
(142.333,294.333,o),
(141,245,cs),
(139.667,195.667,o),
(139,145.333,o),
(139,94,cs),
(139,48.763,o),
(95.368,48,o),
(71,48,cs),
(59,48,o),
(42,41.667,o),
(42,23,cs),
(42,3,o),
(63,0,o),
(83,0,cs),
(315,0,ls),
(332.333,0,o),
(335,15,o),
(335,23,cs),
(335,41.667,o),
(319.667,51,o),
(305,51,cs),
(214,51,l),
(214,746,l),
(214,746,l)
);
},
{
closed = 1;
nodes = (
(122,880,o),
(144,859,o),
(171,859,cs),
(196,859,o),
(227,872,o),
(227,920,cs),
(227,951,o),
(205,972,o),
(178,972,cs),
(136,972,o),
(122,936,o),
(122,916,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 6 0 7 4 6 7 91 5 1 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 6 0 7 4 6 7 91 5 1 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
36 40 52 54 60 52 52 33 8 34
CALL[ ]	/* CallFunction */";
};
width = 354;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(289,0,ls),
(302.333,0,o),
(309,4.333,o),
(309,13,cs),
(309,23.667,o),
(293.667,31,o),
(279,31,cs),
(183,31,l),
(183,766,ls),
(183,789.999,o),
(236.404,791,o),
(254,791,cs),
(270,791,o),
(291,791.333,o),
(291,806,cs),
(291,811.333,o),
(287.833,815.167,o),
(281.5,817.5,cs),
(275.167,819.833,o),
(261.333,821,o),
(240,821,cs),
(58,821,ls),
(46,821,o),
(21,820.667,o),
(21,806,cs),
(21,792.667,o),
(43.333,791,o),
(58,791,cs),
(88.112,791,o),
(138,790.669,o),
(138,768,cs),
(138,709.333,o),
(138.667,648.167,o),
(140,584.5,cs),
(141.333,520.833,o),
(142,459.667,o),
(142,401,cs),
(142,342.333,o),
(141.333,286.833,o),
(140,234.5,cs),
(138.667,182.167,o),
(138,128.667,o),
(138,74,cs),
(138,30.297,o),
(98.22,28,o),
(65,28,cs),
(53,28,o),
(36,25,o),
(36,13,cs),
(36,2.333,o),
(58.333,0,o),
(77,0,cs)
);
},
{
closed = 1;
nodes = (
(173.667,889,o),
(196,899,o),
(196,935,cs),
(196,957.667,o),
(180.667,972,o),
(162,972,cs),
(134.258,972,o),
(121,944.895,o),
(121,931,cs),
(121,907,o),
(136.333,889,o),
(155,889,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 6 0 7 4 6 7 91 5 1 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 6 0 7 4 6 7 91 5 1 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
36 40 52 52 60 52 51 32 8 23
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
note = Idotaccent;
unicode = 304;
},
{
glyphname = Igrave;
kernLeft = B;
kernRight = I;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(64,897.455,o),
(148.552,840,o),
(183,840,cs),
(204.333,840,o),
(219,855,o),
(219,871,cs),
(219,898.458,o),
(142.686,972,o),
(105,972,cs),
(78.333,972,o),
(64,953.667,o),
(64,935,cs)
);
},
{
closed = 1;
nodes = (
(236,744.333,o),
(261,749,o),
(289,753,cs),
(326.333,758.333,o),
(335,770,o),
(335,790,cs),
(335,811.333,o),
(326.667,821,o),
(284,821,cs),
(78,821,ls),
(55.333,821,o),
(31,817,o),
(31,789,cs),
(31,762.333,o),
(43.333,754.667,o),
(78,752,cs),
(102.667,750.667,o),
(119.167,747.333,o),
(127.5,742,cs),
(135.833,736.667,o),
(140,728.333,o),
(140,717,cs),
(140,663.667,o),
(140.667,611,o),
(142,559,cs),
(143.333,507,o),
(144,454.333,o),
(144,401,cs),
(144,348.333,o),
(143.333,299.5,o),
(142,254.5,cs),
(140.667,209.5,o),
(140,162.333,o),
(140,113,cs),
(140,75.667,o),
(123,68,o),
(75,64,cs),
(59,62.667,o),
(43,51.667,o),
(43,29,cs),
(43,3.667,o),
(55.667,0,o),
(77,0,cs),
(305,0,ls),
(337,0,o),
(353,9.667,o),
(353,29,cs),
(353,51.667,o),
(344.333,65,o),
(319,65,cs),
(234,65,l),
(236,719,l),
(236,719,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 1 0 106 0 1 5 1 106 0 4 4 5 83 0 5 5 12 67 0 2 2 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 1 0 106 0 1 5 1 106 0 4 4 5 83 0 5 5 14 67 0 2 2 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
49 46 41 40 51 36 38 34 6 19
CALL[ ]	/* CallFunction */";
};
width = 374;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(103,909.521,o),
(188.059,854,o),
(217,854,cs),
(231.667,854,o),
(241,863.667,o),
(241,877,cs),
(241,903.873,o),
(164.247,972,o),
(135,972,cs),
(115,972,o),
(103,959.667,o),
(103,941,cs)
);
},
{
closed = 1;
nodes = (
(214,769.602,o),
(264.168,771,o),
(280,771,cs),
(296,771,o),
(317,777.333,o),
(317,796,cs),
(317,804.667,o),
(313.833,811,o),
(307.5,815,cs),
(301.167,819,o),
(287.333,821,o),
(266,821,cs),
(64,821,ls),
(52,821,o),
(27,818.667,o),
(27,796,cs),
(27,774.946,o),
(50.708,771,o),
(64,771,cs),
(87.736,771,o),
(139,770.843,o),
(139,748,cs),
(139,692.667,o),
(139.667,634.833,o),
(141,574.5,cs),
(142.333,514.167,o),
(143,456.333,o),
(143,401,cs),
(143,346.333,o),
(142.333,294.333,o),
(141,245,cs),
(139.667,195.667,o),
(139,145.333,o),
(139,94,cs),
(139,48.763,o),
(95.368,48,o),
(71,48,cs),
(59,48,o),
(42,41.667,o),
(42,23,cs),
(42,3,o),
(63,0,o),
(83,0,cs),
(315,0,ls),
(332.333,0,o),
(335,15,o),
(335,23,cs),
(335,41.667,o),
(319.667,51,o),
(305,51,cs),
(214,51,l),
(214,746,l),
(214,746,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 0 1 0 106 0 1 6 1 106 7 1 5 5 6 83 0 6 6 12 67 4 1 2 2 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 1 0 106 0 1 6 1 106 7 1 5 5 6 83 0 6 6 14 67 4 1 2 2 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
52 54 60 52 52 36 38 34 8 23
CALL[ ]	/* CallFunction */";
};
width = 354;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(289,0,ls),
(302.333,0,o),
(309,4.333,o),
(309,13,cs),
(309,23.667,o),
(293.667,31,o),
(279,31,cs),
(183,31,l),
(183,766,ls),
(183,789.999,o),
(236.404,791,o),
(254,791,cs),
(270,791,o),
(291,791.333,o),
(291,806,cs),
(291,811.333,o),
(287.833,815.167,o),
(281.5,817.5,cs),
(275.167,819.833,o),
(261.333,821,o),
(240,821,cs),
(58,821,ls),
(46,821,o),
(21,820.667,o),
(21,806,cs),
(21,792.667,o),
(43.333,791,o),
(58,791,cs),
(88.112,791,o),
(138,790.669,o),
(138,768,cs),
(138,709.333,o),
(138.667,648.167,o),
(140,584.5,cs),
(141.333,520.833,o),
(142,459.667,o),
(142,401,cs),
(142,342.333,o),
(141.333,286.833,o),
(140,234.5,cs),
(138.667,182.167,o),
(138,128.667,o),
(138,74,cs),
(138,30.297,o),
(98.22,28,o),
(65,28,cs),
(53,28,o),
(36,25,o),
(36,13,cs),
(36,2.333,o),
(58.333,0,o),
(77,0,cs)
);
},
{
closed = 1;
nodes = (
(210.333,875,o),
(213,878.667,o),
(213,886,cs),
(213,909.981,o),
(137.662,971,o),
(118,971,cs),
(107.333,971,o),
(99,967.667,o),
(99,949,cs),
(99,927.619,o),
(186.802,875,o),
(205,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 0 1 0 106 0 1 6 1 106 7 1 5 5 6 83 0 6 6 12 67 4 1 2 2 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 1 0 106 0 1 6 1 106 7 1 5 5 6 83 0 6 6 14 67 4 1 2 2 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
52 52 60 52 51 36 37 34 8 23
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
note = Igrave;
unicode = 204;
},
{
glyphname = Imacron;
kernLeft = B;
kernRight = I;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(236,744.333,o),
(261,749,o),
(289,753,cs),
(326.333,758.333,o),
(335,770,o),
(335,790,cs),
(335,811.333,o),
(326.667,821,o),
(284,821,cs),
(78,821,ls),
(55.333,821,o),
(31,817,o),
(31,789,cs),
(31,762.333,o),
(43.333,754.667,o),
(78,752,cs),
(102.667,750.667,o),
(119.167,747.333,o),
(127.5,742,cs),
(135.833,736.667,o),
(140,728.333,o),
(140,717,cs),
(140,663.667,o),
(140.667,611,o),
(142,559,cs),
(143.333,507,o),
(144,454.333,o),
(144,401,cs),
(144,348.333,o),
(143.333,299.5,o),
(142,254.5,cs),
(140.667,209.5,o),
(140,162.333,o),
(140,113,cs),
(140,75.667,o),
(123,68,o),
(75,64,cs),
(59,62.667,o),
(43,51.667,o),
(43,29,cs),
(43,3.667,o),
(55.667,0,o),
(77,0,cs),
(305,0,ls),
(337,0,o),
(353,9.667,o),
(353,29,cs),
(353,51.667,o),
(344.333,65,o),
(319,65,cs),
(234,65,l),
(236,719,l),
(236,719,l)
);
},
{
closed = 1;
nodes = (
(306,965,o),
(287.667,964.5,o),
(267,963.5,cs),
(246.333,962.5,o),
(222,962,o),
(194,962,cs),
(151.698,962,o),
(103.437,964,o),
(73,964,cs),
(50.333,964,o),
(40,943.667,o),
(40,925,cs),
(40,906.333,o),
(54.333,885,o),
(73,885,cs),
(143.305,885,o),
(240.446,886,o),
(314,886,cs),
(342.782,886,o),
(350,912.801,o),
(350,928,cs),
(350,948,o),
(336.667,965,o),
(322,965,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
6 1 4 0 5 3 4 5 91 0 2 2 3 83 0 3 3 12 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
6 1 4 0 5 3 4 5 91 0 2 2 3 83 0 3 3 14 67 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
43 42 56 49 42 68 43 60 33 30 25 24 51 32 7 17
CALL[ ]	/* CallFunction */";
};
width = 374;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(214,769.602,o),
(264.168,771,o),
(280,771,cs),
(296,771,o),
(317,777.333,o),
(317,796,cs),
(317,804.667,o),
(313.833,811,o),
(307.5,815,cs),
(301.167,819,o),
(287.333,821,o),
(266,821,cs),
(64,821,ls),
(52,821,o),
(27,818.667,o),
(27,796,cs),
(27,774.946,o),
(50.708,771,o),
(64,771,cs),
(87.736,771,o),
(139,770.843,o),
(139,748,cs),
(139,692.667,o),
(139.667,634.833,o),
(141,574.5,cs),
(142.333,514.167,o),
(143,456.333,o),
(143,401,cs),
(143,346.333,o),
(142.333,294.333,o),
(141,245,cs),
(139.667,195.667,o),
(139,145.333,o),
(139,94,cs),
(139,48.763,o),
(95.368,48,o),
(71,48,cs),
(59,48,o),
(42,41.667,o),
(42,23,cs),
(42,3,o),
(63,0,o),
(83,0,cs),
(315,0,ls),
(332.333,0,o),
(335,15,o),
(335,23,cs),
(335,41.667,o),
(319.667,51,o),
(305,51,cs),
(214,51,l),
(214,746,l),
(214,746,l)
);
},
{
closed = 1;
nodes = (
(295,942,o),
(277,942,o),
(256,941,cs),
(235,940,o),
(211,939,o),
(183,939,cs),
(141,939,o),
(92,941,o),
(62,941,cs),
(43,941,o),
(36,926,o),
(36,911,cs),
(36,896,o),
(47,880,o),
(62,880,cs),
(132,880,o),
(229,881,o),
(303,881,cs),
(326,881,o),
(332,903,o),
(332,914,cs),
(332,929,o),
(322,942,o),
(311,942,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
8 1 6 0 7 4 6 7 91 5 1 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
8 1 6 0 7 4 6 7 91 5 1 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
53 52 64 57 52 76 53 68 52 54 60 52 52 33 9 32
CALL[ ]	/* CallFunction */";
};
width = 354;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(289,0,ls),
(302.333,0,o),
(309,4.333,o),
(309,13,cs),
(309,23.667,o),
(293.667,31,o),
(279,31,cs),
(183,31,l),
(183,766,ls),
(183,789.999,o),
(236.404,791,o),
(254,791,cs),
(270,791,o),
(291,791.333,o),
(291,806,cs),
(291,811.333,o),
(287.833,815.167,o),
(281.5,817.5,cs),
(275.167,819.833,o),
(261.333,821,o),
(240,821,cs),
(58,821,ls),
(46,821,o),
(21,820.667,o),
(21,806,cs),
(21,792.667,o),
(43.333,791,o),
(58,791,cs),
(88.112,791,o),
(138,790.669,o),
(138,768,cs),
(138,709.333,o),
(138.667,648.167,o),
(140,584.5,cs),
(141.333,520.833,o),
(142,459.667,o),
(142,401,cs),
(142,342.333,o),
(141.333,286.833,o),
(140,234.5,cs),
(138.667,182.167,o),
(138,128.667,o),
(138,74,cs),
(138,30.297,o),
(98.22,28,o),
(65,28,cs),
(53,28,o),
(36,25,o),
(36,13,cs),
(36,2.333,o),
(58.333,0,o),
(77,0,cs)
);
},
{
closed = 1;
nodes = (
(117.305,875,o),
(214.446,876,o),
(288,876,cs),
(302.667,876,o),
(307,887.333,o),
(307,894,cs),
(307,900.667,o),
(301.333,907,o),
(296,907,cs),
(280,907,o),
(261.667,906.5,o),
(241,905.5,cs),
(220.333,904.5,o),
(196,904,o),
(168,904,cs),
(125.698,904,o),
(77.437,906,o),
(47,906,cs),
(36.333,906,o),
(31,897.667,o),
(31,891,cs),
(31,884.333,o),
(37.667,875,o),
(47,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
8 1 6 0 7 4 6 7 91 5 1 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
8 1 6 0 7 4 6 7 91 5 1 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
49 48 60 53 48 72 49 64 52 52 60 52 51 32 9 21
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
note = Imacron;
unicode = 298;
},
{
glyphname = Iogonek;
kernLeft = B;
kernRight = I;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(251.345,-157,o),
(282,-127.646,o),
(282,-104,cs),
(282,-92,o),
(270.333,-80,o),
(257,-80,cs),
(237.449,-80,o),
(238.136,-104,o),
(197,-104,cs),
(182.333,-104,o),
(168,-97.667,o),
(168,-83,cs),
(168,-56.333,o),
(183.667,-14.667,o),
(213,0,c),
(305,0,ls),
(337,0,o),
(353,9.667,o),
(353,29,cs),
(353,51.667,o),
(344.333,65,o),
(319,65,cs),
(234,65,l),
(234,82.333,o),
(234.167,109,o),
(234.5,145,cs),
(234.833,181,o),
(235,221.667,o),
(235,267,cs),
(235,312.333,o),
(235.167,359.5,o),
(235.5,408.5,cs),
(235.833,457.5,o),
(236,503.333,o),
(236,546,cs),
(236,588.667,o),
(236,625.667,o),
(236,657,cs),
(236,688.333,o),
(236,709,o),
(236,719,cs),
(236,744.333,o),
(261,749,o),
(289,753,cs),
(326.333,758.333,o),
(335,770,o),
(335,790,cs),
(335,811.333,o),
(326.667,821,o),
(284,821,cs),
(78,821,ls),
(55.333,821,o),
(31,817,o),
(31,789,cs),
(31,762.333,o),
(43.333,754.667,o),
(78,752,cs),
(102.667,750.667,o),
(119.167,747.333,o),
(127.5,742,cs),
(135.833,736.667,o),
(140,728.333,o),
(140,717,cs),
(140,663.667,o),
(140.667,611,o),
(142,559,cs),
(143.333,507,o),
(144,454.333,o),
(144,401,cs),
(144,348.333,o),
(143.333,299.5,o),
(142,254.5,cs),
(140.667,209.5,o),
(140,162.333,o),
(140,113,cs),
(140,75.667,o),
(123,68,o),
(75,64,cs),
(59,62.667,o),
(43,51.667,o),
(43,29,cs),
(43,3.667,o),
(55.667,0,o),
(77,0,cs),
(156,0,l),
(130.769,-14.017,o),
(89,-38.558,o),
(89,-82,cs),
(89,-133.579,o),
(149.091,-157,o),
(199,-157,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 7 1 6 1 7 6 104 0 6 8 1 0 6 0 87 0 2 2 3 83 0 3 3 12 67 0 4 4 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 7 1 6 1 7 6 104 0 6 8 1 0 6 0 87 0 2 2 3 83 0 3 3 14 67 0 4 4 1 83 5 1 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
1 0 71 69 66 64 59 57 54 52 37 34 29 28 12 10 0 77 1 77 9 15
CALL[ ]	/* CallFunction */";
};
width = 374;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(214,769.602,o),
(264.168,771,o),
(280,771,cs),
(296,771,o),
(317,777.333,o),
(317,796,cs),
(317,804.667,o),
(313.833,811,o),
(307.5,815,cs),
(301.167,819,o),
(287.333,821,o),
(266,821,cs),
(64,821,ls),
(52,821,o),
(27,818.667,o),
(27,796,cs),
(27,774.946,o),
(50.708,771,o),
(64,771,cs),
(87.736,771,o),
(139,770.843,o),
(139,748,cs),
(139,692.667,o),
(139.667,634.833,o),
(141,574.5,cs),
(142.333,514.167,o),
(143,456.333,o),
(143,401,cs),
(143,346.333,o),
(142.333,294.333,o),
(141,245,cs),
(139.667,195.667,o),
(139,145.333,o),
(139,94,cs),
(139,48.763,o),
(95.368,48,o),
(71,48,cs),
(59,48,o),
(42,41.667,o),
(42,23,cs),
(42,3,o),
(63,0,o),
(83,0,cs),
(315,0,ls),
(332.333,0,o),
(335,15,o),
(335,23,cs),
(335,41.667,o),
(319.667,51,o),
(305,51,cs),
(214,51,l),
(214,746,l),
(214,746,l)
);
},
{
closed = 1;
nodes = (
(142,7,o),
(130,0,o),
(119,-9,cs),
(100,-24,o),
(83,-45,o),
(83,-76,cs),
(83,-119,o),
(125,-149,o),
(184,-149,cs),
(232,-149,o),
(262,-108,o),
(262,-98,cs),
(262,-87,o),
(256,-76,o),
(241,-76,cs),
(237,-76,o),
(233,-78,o),
(228,-82,cs),
(223,-87,o),
(217,-92,o),
(212,-97,cs),
(206,-103,o),
(195,-106,o),
(178,-106,cs),
(162,-106,o),
(147,-91,o),
(147,-75,cs),
(147,-56,o),
(161,-2,o),
(206,13,c),
(156,14,l),
(156,14,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
2 1 0 3 9 9 0 96 0 7 1 6 1 7 6 104 0 6 0 8 6 8 87 5 1 3 3 4 83 0 4 4 12 67 10 1 9 9 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
2 1 0 3 9 3 0 9 104 0 7 1 6 1 7 6 104 0 6 0 8 6 8 87 5 1 3 3 4 83 0 4 4 12 67 10 1 9 9 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
2 1 0 3 9 3 0 9 104 0 7 1 6 1 7 6 104 0 6 0 8 6 8 87 5 1 3 3 4 83 0 4 4 14 67 10 1 9 9 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
52 52 52 81 52 81 38 35 43 52 54 60 52 52 33 11 35
CALL[ ]	/* CallFunction */";
};
width = 354;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(209.13,-149,o),
(239,-107.791,o),
(239,-98,cs),
(239,-90,o),
(237,-82,o),
(225,-82,cs),
(205.96,-82,o),
(199.683,-122,o),
(163,-122,cs),
(132.028,-122,o),
(124,-92.466,o),
(124,-75,cs),
(124,-58.669,o),
(129.704,-23.969,o),
(159,0,c),
(289,0,ls),
(302.333,0,o),
(309,4.333,o),
(309,13,cs),
(309,23.667,o),
(293.667,31,o),
(279,31,cs),
(183,31,l),
(183,766,ls),
(183,789.999,o),
(236.404,791,o),
(254,791,cs),
(270,791,o),
(291,791.333,o),
(291,806,cs),
(291,811.333,o),
(287.833,815.167,o),
(281.5,817.5,cs),
(275.167,819.833,o),
(261.333,821,o),
(240,821,cs),
(58,821,ls),
(46,821,o),
(21,820.667,o),
(21,806,cs),
(21,792.667,o),
(43.333,791,o),
(58,791,cs),
(88.112,791,o),
(138,790.669,o),
(138,768,cs),
(138,709.333,o),
(138.667,648.167,o),
(140,584.5,cs),
(141.333,520.833,o),
(142,459.667,o),
(142,401,cs),
(142,342.333,o),
(141.333,286.833,o),
(140,234.5,cs),
(138.667,182.167,o),
(138,128.667,o),
(138,74,cs),
(138,30.297,o),
(98.22,28,o),
(65,28,cs),
(53,28,o),
(36,25,o),
(36,13,cs),
(36,2.333,o),
(58.333,0,o),
(77,0,cs),
(124,0,l),
(105.333,-14.667,o),
(80,-38.667,o),
(80,-76,cs),
(80,-118.667,o),
(114.333,-149,o),
(161,-149,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 1 2 1 3 2 104 0 2 0 4 2 4 87 9 1 7 7 8 83 0 8 8 12 67 6 1 0 0 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 3 1 2 1 3 2 104 0 2 0 4 2 4 87 9 1 7 7 8 83 0 8 8 14 67 6 1 0 0 1 83 5 1 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
74 71 52 60 52 37 38 35 41 35 32 10 24
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
note = Iogonek;
unicode = 302;
},
{
glyphname = Itilde;
kernLeft = B;
kernRight = I;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(236,744.333,o),
(261,749,o),
(289,753,cs),
(326.333,758.333,o),
(335,770,o),
(335,790,cs),
(335,811.333,o),
(326.667,821,o),
(284,821,cs),
(78,821,ls),
(55.333,821,o),
(31,817,o),
(31,789,cs),
(31,762.333,o),
(43.333,754.667,o),
(78,752,cs),
(102.667,750.667,o),
(119.167,747.333,o),
(127.5,742,cs),
(135.833,736.667,o),
(140,728.333,o),
(140,717,cs),
(140,663.667,o),
(140.667,611,o),
(142,559,cs),
(143.333,507,o),
(144,454.333,o),
(144,401,cs),
(144,348.333,o),
(143.333,299.5,o),
(142,254.5,cs),
(140.667,209.5,o),
(140,162.333,o),
(140,113,cs),
(140,75.667,o),
(123,68,o),
(75,64,cs),
(59,62.667,o),
(43,51.667,o),
(43,29,cs),
(43,3.667,o),
(55.667,0,o),
(77,0,cs),
(305,0,ls),
(337,0,o),
(353,9.667,o),
(353,29,cs),
(353,51.667,o),
(344.333,65,o),
(319,65,cs),
(234,65,l),
(236,719,l),
(236,719,l)
);
},
{
closed = 1;
nodes = (
(14,875,o),
(21,859,o),
(33,859,cs),
(53.593,859,o),
(77.709,884,o),
(117,884,cs),
(155.662,884,o),
(198.294,860,o),
(254,860,cs),
(286.676,860,o),
(365,877.584,o),
(365,935,cs),
(365,956.333,o),
(349.667,970,o),
(343,970,cs),
(338.333,970,o),
(328.333,965.667,o),
(313,957,cs),
(294.333,946.333,o),
(271.667,940,o),
(253,940,cs),
(213.599,940,o),
(152.495,968,o),
(116,968,cs),
(91.333,968,o),
(68.667,962,o),
(48,950,cs),
(29.333,939.333,o),
(14,924.333,o),
(14,895,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 3 5 7 91 0 2 2 3 83 0 3 3 12 67 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 3 5 7 91 0 2 2 3 83 0 3 3 14 67 0 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
76 74 71 69 66 64 58 56 53 51 48 46 33 30 25 24 51 32 10 17
CALL[ ]	/* CallFunction */";
};
width = 374;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(214,769.602,o),
(264.168,771,o),
(280,771,cs),
(296,771,o),
(317,777.333,o),
(317,796,cs),
(317,804.667,o),
(313.833,811,o),
(307.5,815,cs),
(301.167,819,o),
(287.333,821,o),
(266,821,cs),
(64,821,ls),
(52,821,o),
(27,818.667,o),
(27,796,cs),
(27,774.946,o),
(50.708,771,o),
(64,771,cs),
(87.736,771,o),
(139,770.843,o),
(139,748,cs),
(139,692.667,o),
(139.667,634.833,o),
(141,574.5,cs),
(142.333,514.167,o),
(143,456.333,o),
(143,401,cs),
(143,346.333,o),
(142.333,294.333,o),
(141,245,cs),
(139.667,195.667,o),
(139,145.333,o),
(139,94,cs),
(139,48.763,o),
(95.368,48,o),
(71,48,cs),
(59,48,o),
(42,41.667,o),
(42,23,cs),
(42,3,o),
(63,0,o),
(83,0,cs),
(315,0,ls),
(332.333,0,o),
(335,15,o),
(335,23,cs),
(335,41.667,o),
(319.667,51,o),
(305,51,cs),
(214,51,l),
(214,746,l),
(214,746,l)
);
},
{
closed = 1;
nodes = (
(7,910,o),
(6,904,o),
(6,898,cs),
(6,883,o),
(12,870,o),
(23,870,cs),
(40,870,o),
(67,895,o),
(107,895,cs),
(146,895,o),
(188,871,o),
(244,871,cs),
(300,871,o),
(333,893,o),
(346,916,cs),
(349,922,o),
(351,928,o),
(351,935,cs),
(351,951,o),
(340,963,o),
(333,963,cs),
(330,963,o),
(326,962,o),
(323,961,cs),
(319,959,o),
(312,955,o),
(303,950,cs),
(280,939,o),
(260,933,o),
(243,933,cs),
(204,933,o),
(142,961,o),
(106,961,cs),
(81,961,o),
(59,955,o),
(38,943,cs),
(28,937,o),
(21,932,o),
(17,927,cs),
(13,922,o),
(10,918,o),
(9,915,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
8 1 6 0 10 9 6 10 91 0 7 11 1 9 4 7 9 91 5 1 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
8 1 6 0 10 9 6 10 91 0 7 11 1 9 4 7 9 91 5 1 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
86 84 81 79 76 74 35 35 40 52 54 60 52 52 33 12 35
CALL[ ]	/* CallFunction */";
};
width = 354;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(289,0,ls),
(302.333,0,o),
(309,4.333,o),
(309,13,cs),
(309,23.667,o),
(293.667,31,o),
(279,31,cs),
(183,31,l),
(183,766,ls),
(183,789.999,o),
(236.404,791,o),
(254,791,cs),
(270,791,o),
(291,791.333,o),
(291,806,cs),
(291,811.333,o),
(287.833,815.167,o),
(281.5,817.5,cs),
(275.167,819.833,o),
(261.333,821,o),
(240,821,cs),
(58,821,ls),
(46,821,o),
(21,820.667,o),
(21,806,cs),
(21,792.667,o),
(43.333,791,o),
(58,791,cs),
(88.112,791,o),
(138,790.669,o),
(138,768,cs),
(138,709.333,o),
(138.667,648.167,o),
(140,584.5,cs),
(141.333,520.833,o),
(142,459.667,o),
(142,401,cs),
(142,342.333,o),
(141.333,286.833,o),
(140,234.5,cs),
(138.667,182.167,o),
(138,128.667,o),
(138,74,cs),
(138,30.297,o),
(98.22,28,o),
(65,28,cs),
(53,28,o),
(36,25,o),
(36,13,cs),
(36,2.333,o),
(58.333,0,o),
(77,0,cs)
);
},
{
closed = 1;
nodes = (
(21.791,888,o),
(48.735,913,o),
(90,913,cs),
(128.662,913,o),
(171.294,889,o),
(227,889,cs),
(279.947,889,o),
(329,908.797,o),
(329,934,cs),
(329,943.333,o),
(322.667,951,o),
(316,951,cs),
(312.667,951,o),
(309.167,950.167,o),
(305.5,948.5,cs),
(301.833,946.833,o),
(295.333,943.333,o),
(286,938,cs),
(263.333,926.667,o),
(243.333,921,o),
(226,921,cs),
(186.599,921,o),
(125.495,949,o),
(89,949,cs),
(64.333,949,o),
(41.667,943,o),
(21,931,cs),
(1.667,919.667,o),
(-8,910.333,o),
(-8,903,cs),
(-8,896.333,o),
(-0.667,888,o),
(6,888,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
8 1 6 0 10 9 6 10 91 0 7 11 1 9 4 7 9 91 5 1 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
8 1 6 0 10 9 6 10 91 0 7 11 1 9 4 7 9 91 5 1 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
81 79 76 74 71 69 35 35 39 52 52 60 52 51 32 12 24
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
note = Itilde;
unicode = 296;
},
{
glyphname = J;
kernLeft = J;
kernRight = IJ;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(65,155,o),
(72.333,175.667,o),
(79,181,c),
(89,172.333,o),
(100.667,168,o),
(114,168,cs),
(142,168,o),
(163,188.667,o),
(163,222,cs),
(163,260.925,o),
(131.645,280,o),
(98,280,cs),
(40.878,280,o),
(-5,223.782,o),
(-5,145,cs),
(-5,49,o),
(59.667,-14,o),
(185,-14,cs),
(339.667,-14,o),
(429,83,o),
(429,279,cs),
(429,723,ls),
(429,732.333,o),
(433.5,739.5,o),
(442.5,744.5,cs),
(451.5,749.5,o),
(467.333,752,o),
(490,752,cs),
(514,752,o),
(533,763.333,o),
(533,786,cs),
(533,807.333,o),
(523.667,821,o),
(481,821,cs),
(244,821,ls),
(221.333,821,o),
(207,812.333,o),
(207,787,cs),
(207,764.333,o),
(222.667,753,o),
(254,753,cs),
(275.455,753,o),
(333,754.183,o),
(333,730,cs),
(333,722.753,o),
(336,562.706,o),
(336,371,cs),
(336,208.73,o),
(331.736,53,o),
(176,53,cs),
(104,53,o),
(65,87,o),
(65,135,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
55 1 6 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 3 1 1 1 2 83 0 2 2 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 3 1 1 1 2 83 0 2 2 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 38 37 36 51 60 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 538;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(57,155,o),
(63.333,175.333,o),
(74,182,c),
(82.667,174,o),
(93.667,170,o),
(107,170,cs),
(132.333,170,o),
(143,192,o),
(143,216,cs),
(143,251.008,o),
(109.803,264,o),
(89,264,cs),
(34.333,264,o),
(-4,213,o),
(-4,137,cs),
(-4,50.374,o),
(70.044,-14,o),
(167,-14,cs),
(333.667,-14,o),
(409,83,o),
(409,279,cs),
(409,746,ls),
(409,769.857,o),
(448.411,771,o),
(460,771,cs),
(476,771,o),
(497,777.333,o),
(497,796,cs),
(497,804.667,o),
(493.833,811,o),
(487.5,815,cs),
(481.167,819,o),
(467.333,821,o),
(446,821,cs),
(249,821,ls),
(237,821,o),
(212,818.667,o),
(212,796,cs),
(212,777.333,o),
(234.333,771,o),
(249,771,cs),
(264.073,771,o),
(334,773.014,o),
(334,748,cs),
(334,746.608,o),
(337,583.222,o),
(337,379,cs),
(337,202.965,o),
(332.051,50,o),
(172,50,cs),
(117.922,50,o),
(57,79.439,o),
(57,135,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
60 1 6 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 3 1 1 1 2 83 0 2 2 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 3 1 1 1 2 83 0 2 2 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 38 38 52 52 60 36 7 22
CALL[ ]	/* CallFunction */";
};
width = 523;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(313.333,-14,o),
(381,83,o),
(381,279,cs),
(381,766,ls),
(381,789.999,o),
(434.404,791,o),
(452,791,cs),
(468,791,o),
(489,791.333,o),
(489,806,cs),
(489,811.333,o),
(485.833,815.167,o),
(479.5,817.5,cs),
(473.167,819.833,o),
(459.333,821,o),
(438,821,cs),
(256,821,ls),
(244,821,o),
(219,820.667,o),
(219,806,cs),
(219,792.667,o),
(241.333,791,o),
(256,791,cs),
(286.112,791,o),
(336,790.669,o),
(336,768,cs),
(336,750.132,o),
(336.302,710.07,o),
(337.5,619,cs),
(338.521,541.423,o),
(339,467.143,o),
(339,379,cs),
(339,284.333,o),
(339.333,194.5,o),
(318,128.5,cs),
(296.667,62.5,o),
(254.333,20,o),
(169,20,cs),
(94.907,20,o),
(29,59.426,o),
(29,131,cs),
(29,151,o),
(32.667,175.333,o),
(50,182,c),
(56.667,174,o),
(66.333,167,o),
(77,167,cs),
(93,167,o),
(114,177.333,o),
(114,204,cs),
(114,226.667,o),
(91.333,237,o),
(78,237,cs),
(7.298,237,o),
(-2,159.965,o),
(-2,137,cs),
(-2,48.379,o),
(69.668,-14,o),
(164,-14,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
63 1 6 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 3 1 1 1 2 83 0 2 2 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 3 1 1 1 2 83 0 2 2 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
36 40 38 52 52 62 36 7 22
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = J;
unicode = 74;
},
{
glyphname = Jcircumflex;
kernLeft = J;
kernRight = IJ;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(487.667,830,o),
(490,841.667,o),
(490,851,cs),
(490,891.866,o),
(380.605,972,o),
(357,972,cs),
(345.856,972,o),
(311.177,950.45,o),
(284,928,cs),
(253.333,902.667,o),
(225,870.667,o),
(225,844,cs),
(225,837.333,o),
(228.667,830,o),
(238,830,cs),
(254.701,830,o),
(318.213,853.903,o),
(357,879,c),
(402.839,849.34,o),
(463.712,830,o),
(477,830,cs)
);
},
{
closed = 1;
nodes = (
(65,155,o),
(72.333,175.667,o),
(79,181,c),
(89,172.333,o),
(100.667,168,o),
(114,168,cs),
(142,168,o),
(163,188.667,o),
(163,222,cs),
(163,260.925,o),
(131.645,280,o),
(98,280,cs),
(40.878,280,o),
(-5,223.782,o),
(-5,145,cs),
(-5,49,o),
(59.667,-14,o),
(185,-14,cs),
(339.667,-14,o),
(429,83,o),
(429,279,cs),
(429,723,ls),
(429,732.333,o),
(433.5,739.5,o),
(442.5,744.5,cs),
(451.5,749.5,o),
(467.333,752,o),
(490,752,cs),
(514,752,o),
(533,763.333,o),
(533,786,cs),
(533,807.333,o),
(523.667,821,o),
(481,821,cs),
(244,821,ls),
(221.333,821,o),
(207,812.333,o),
(207,787,cs),
(207,764.333,o),
(222.667,753,o),
(254,753,cs),
(275.455,753,o),
(333,754.183,o),
(333,730,cs),
(333,722.753,o),
(336,562.706,o),
(336,371,cs),
(336,208.73,o),
(331.736,53,o),
(176,53,cs),
(104,53,o),
(65,87,o),
(65,135,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
5 1 0 2 81 1 9 8 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 0 2 106 1 10 2 0 5 0 106 0 8 0 9 3 8 9 91 6 1 4 4 5 83 0 5 5 12 67 0 3 3 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 2 0 2 106 1 10 2 0 5 0 106 0 8 0 9 3 8 9 91 6 1 4 4 5 83 0 5 5 14 67 0 3 3 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 80 78 72 70 64 62 57 55 51 48 45 42 30 28 19 17 11 9 0 25 1 25 11 15
CALL[ ]	/* CallFunction */";
};
width = 538;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(486,847,o),
(489,854.667,o),
(489,864,cs),
(489,900.28,o),
(381.728,972,o),
(358,972,cs),
(336.04,972,o),
(228,901.46,o),
(228,860,cs),
(228,851.333,o),
(231.667,847,o),
(239,847,cs),
(256.679,847,o),
(318.008,874.475,o),
(358,898,c),
(421.994,860.357,o),
(469.663,847,o),
(478,847,cs)
);
},
{
closed = 1;
nodes = (
(57,155,o),
(63.333,175.333,o),
(74,182,c),
(82.667,174,o),
(93.667,170,o),
(107,170,cs),
(132.333,170,o),
(143,192,o),
(143,216,cs),
(143,251.008,o),
(109.803,264,o),
(89,264,cs),
(34.333,264,o),
(-4,213,o),
(-4,137,cs),
(-4,50.374,o),
(70.044,-14,o),
(167,-14,cs),
(333.667,-14,o),
(409,83,o),
(409,279,cs),
(409,746,ls),
(409,769.857,o),
(448.411,771,o),
(460,771,cs),
(476,771,o),
(497,777.333,o),
(497,796,cs),
(497,804.667,o),
(493.833,811,o),
(487.5,815,cs),
(481.167,819,o),
(467.333,821,o),
(446,821,cs),
(249,821,ls),
(237,821,o),
(212,818.667,o),
(212,796,cs),
(212,777.333,o),
(234.333,771,o),
(249,771,cs),
(264.073,771,o),
(334,773.014,o),
(334,748,cs),
(334,746.608,o),
(337,583.222,o),
(337,379,cs),
(337,202.965,o),
(332.051,50,o),
(172,50,cs),
(117.922,50,o),
(57,79.439,o),
(57,135,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
5 1 0 2 85 1 9 8 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 0 2 106 1 10 2 0 5 0 106 0 8 0 9 3 8 9 91 6 1 4 4 5 83 0 5 5 12 67 0 3 3 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 2 0 2 106 1 10 2 0 5 0 106 0 8 0 9 3 8 9 91 6 1 4 4 5 83 0 5 5 14 67 0 3 3 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 84 82 76 74 68 66 60 57 53 50 46 43 31 29 18 16 11 9 0 24 1 24 11 15
CALL[ ]	/* CallFunction */";
};
width = 523;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(313.333,-14,o),
(381,83,o),
(381,279,cs),
(381,766,ls),
(381,789.999,o),
(434.404,791,o),
(452,791,cs),
(468,791,o),
(489,791.333,o),
(489,806,cs),
(489,811.333,o),
(485.833,815.167,o),
(479.5,817.5,cs),
(473.167,819.833,o),
(459.333,821,o),
(438,821,cs),
(256,821,ls),
(244,821,o),
(219,820.667,o),
(219,806,cs),
(219,792.667,o),
(241.333,791,o),
(256,791,cs),
(286.112,791,o),
(336,790.669,o),
(336,768,cs),
(336,750.132,o),
(336.302,710.07,o),
(337.5,619,cs),
(338.521,541.423,o),
(339,467.143,o),
(339,379,cs),
(339,284.333,o),
(339.333,194.5,o),
(318,128.5,cs),
(296.667,62.5,o),
(254.333,20,o),
(169,20,cs),
(94.907,20,o),
(29,59.426,o),
(29,131,cs),
(29,151,o),
(32.667,175.333,o),
(50,182,c),
(56.667,174,o),
(66.333,167,o),
(77,167,cs),
(93,167,o),
(114,177.333,o),
(114,204,cs),
(114,226.667,o),
(91.333,237,o),
(78,237,cs),
(7.298,237,o),
(-2,159.965,o),
(-2,137,cs),
(-2,48.379,o),
(69.668,-14,o),
(164,-14,cs)
);
},
{
closed = 1;
nodes = (
(255.765,875,o),
(323.053,909.44,o),
(360,929,c),
(428.101,892.946,o),
(469.815,875,o),
(480,875,cs),
(485.333,875,o),
(488,878.667,o),
(488,886,cs),
(488,910.708,o),
(385.596,972,o),
(360,972,cs),
(336.629,972,o),
(233,910.79,o),
(233,886,cs),
(233,878.667,o),
(235.667,875,o),
(241,875,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
5 1 0 2 87 1 9 8 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 0 2 106 1 10 2 0 5 0 106 0 8 0 9 3 8 9 91 6 1 4 4 5 83 0 5 5 12 67 0 3 3 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 2 0 2 106 1 10 2 0 5 0 106 0 8 0 9 3 8 9 91 6 1 4 4 5 83 0 5 5 14 67 0 3 3 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 85 83 79 77 69 67 61 58 54 51 47 44 30 28 18 16 11 9 0 23 1 23 11 15
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = Jcircumflex;
unicode = 308;
},
{
glyphname = K;
kernLeft = B;
kernRight = K;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(229,754.703,o),
(273.217,759,o),
(300,759,cs),
(316,760.333,o),
(339,768.667,o),
(339,794,cs),
(339,805.333,o),
(335.5,812.667,o),
(328.5,816,cs),
(321.5,819.333,o),
(307.333,821,o),
(286,821,cs),
(94,821,ls),
(71.333,821,o),
(50,816.667,o),
(50,790,cs),
(50,767.333,o),
(60.667,758.667,o),
(94,756,cs),
(116.667,754.667,o),
(133,746.333,o),
(133,729,cs),
(133,675.667,o),
(133.667,621,o),
(135,565,cs),
(136.333,509,o),
(137,454.333,o),
(137,401,cs),
(137,298.514,o),
(133,213.425,o),
(133,119,cs),
(133,80.333,o),
(119,69.667,o),
(95,67,cs),
(68.333,64.333,o),
(49,55.667,o),
(49,33,cs),
(49,7.667,o),
(61.333,0,o),
(108,0,cs),
(316,0,ls),
(329.333,0,o),
(344,9.667,o),
(344,35,cs),
(344,56.333,o),
(328.333,62,o),
(303,62,cs),
(229,62,l),
(229,335,l),
(235,343,l),
(284.567,280.089,o),
(345.689,195.556,o),
(415.5,104,cs),
(478.716,21.093,o),
(528.794,-36,o),
(545,-36,cs),
(713.305,-36,o),
(761,-39.969,o),
(761,1,cs),
(761,29,o),
(729.667,37,o),
(687,37,cs),
(659,37,o),
(633.833,37.667,o),
(611.5,39,cs),
(589.167,40.333,o),
(575.333,43.667,o),
(570,49,cs),
(524.64,99.4,o),
(449.685,192.977,o),
(396,262,cs),
(362.667,304.667,o),
(328.667,349,o),
(294,395,c),
(347.333,453.667,o),
(398.167,510,o),
(446.5,564,cs),
(494.833,618,o),
(542.667,667.667,o),
(590,713,cs),
(610,731.667,o),
(644,735.333,o),
(700,738,cs),
(713.333,738,o),
(731,747,o),
(731,767,cs),
(731,787,o),
(716,797,o),
(704,797,cs),
(461,797,ls),
(434.333,797,o),
(427,781.333,o),
(427,764,cs),
(427,744,o),
(446.667,737.333,o),
(460,736,cs),
(478.667,734.667,o),
(483,733.333,o),
(483,720,cs),
(483,713.391,o),
(450.63,671.389,o),
(384,600,cs),
(319.793,531.207,o),
(267.229,475.217,o),
(229,439,c),
(229,731,l),
(229,731,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
55 54 29 0 4 4 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
8 1 6 6 7 83 0 7 7 12 67 0 1 1 0 83 0 0 0 14 67 0 4 4 5 83 0 5 5 13 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 1 4 0 1 91 0 2 0 3 2 3 87 8 1 6 6 7 83 0 7 7 12 67 0 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 1 4 0 1 91 0 2 0 3 2 3 87 8 1 6 6 7 83 0 7 7 14 67 0 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
98 97 92 89 84 83 52 40 53 61 36 63 9 21
CALL[ ]	/* CallFunction */";
};
width = 765;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(210,769.999,o),
(263.404,771,o),
(281,771,cs),
(294.229,771,o),
(323,773.695,o),
(323,796,cs),
(323,806,o),
(319,812.667,o),
(311,816,cs),
(303,819.333,o),
(288.333,821,o),
(267,821,cs),
(79,821,ls),
(59.433,821,o),
(38,817.216,o),
(38,796,cs),
(38,777.333,o),
(64.333,771,o),
(79,771,cs),
(94.463,771,o),
(135,771.121,o),
(135,748,cs),
(135,692.667,o),
(135.667,634.833,o),
(137,574.5,cs),
(138.333,514.167,o),
(139,456.333,o),
(139,401,cs),
(139,346.333,o),
(138.333,294.333,o),
(137,245,cs),
(135.667,195.667,o),
(135,145.333,o),
(135,94,cs),
(135,47.509,o),
(101.959,48,o),
(87,48,cs),
(75,48,o),
(53,45.667,o),
(53,23,cs),
(53,0.375,o),
(78.972,0,o),
(99,0,cs),
(316,0,ls),
(329.333,0,o),
(341,8.333,o),
(341,27,cs),
(341,44.333,o),
(320.667,50,o),
(306,50,cs),
(210,50,l),
(210,335,l),
(228,353,l),
(271.582,297.684,o),
(333.924,211.052,o),
(413,108.5,cs),
(478.871,23.074,o),
(529.005,-36,o),
(547,-36,cs),
(673.498,-36,o),
(749,-33.88,o),
(749,-2,cs),
(749,15.333,o),
(716.667,16,o),
(686,16,cs),
(658,16,o),
(632.5,16.667,o),
(609.5,18,cs),
(586.5,19.333,o),
(572.333,22.667,o),
(567,28,cs),
(516.532,83.781,o),
(439.617,179.368,o),
(383,254,cs),
(347.667,300,o),
(311.667,347,o),
(275,395,c),
(405.866,535.681,o),
(480.679,612.993,o),
(600,729,cs),
(622.69,748.854,o),
(690.831,747.324,o),
(739,750,cs),
(752.333,750,o),
(759,761.667,o),
(759,771,cs),
(759,787,o),
(748,795,o),
(736,795,cs),
(468,795,ls),
(441.333,795,o),
(434,783.333,o),
(434,770,cs),
(434,751.333,o),
(454.667,746,o),
(468,746,cs),
(476.667,745.333,o),
(484.167,744.833,o),
(490.5,744.5,cs),
(496.833,744.167,o),
(500,739.333,o),
(500,730,cs),
(500,721.111,o),
(451.861,667.495,o),
(385,597.5,cs),
(315.938,525.201,o),
(254.953,463.705,o),
(210,421,c),
(210,746,l),
(210,746,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
59 58 33 0 4 6 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
11 1 9 9 10 83 0 10 10 12 67 3 1 2 0 0 2 83 0 2 2 14 67 8 1 6 6 7 83 0 7 7 13 67 0 4 4 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 2 3 1 2 0 6 2 0 91 11 1 9 9 10 83 0 10 10 12 67 8 1 6 6 7 83 0 7 7 13 67 0 4 4 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 2 3 1 2 0 6 2 0 91 0 4 0 5 4 5 87 11 1 9 9 10 83 0 10 10 12 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
1 1 0 3 6 3 0 96 0 2 0 3 0 2 3 91 0 4 0 5 4 5 87 11 1 9 9 10 83 0 10 10 14 67 8 1 6 6 7 83 0 7 7 13 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
111 108 102 99 93 90 78 75 70 66 62 60 52 49 44 41 52 52 17 24 12 19
CALL[ ]	/* CallFunction */";
};
width = 747;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(635.571,-36,o),
(722,-36.634,o),
(722,-17,cs),
(722,-10.333,o),
(718.167,-6.5,o),
(710.5,-5.5,cs),
(702.833,-4.5,o),
(691.333,-4,o),
(676,-4,cs),
(648,-4,o),
(622.5,-3.333,o),
(599.5,-2,cs),
(576.5,-0.667,o),
(562.333,2.667,o),
(557,8,cs),
(503.582,63.962,o),
(420.7,170.179,o),
(362,246,cs),
(324.667,294,o),
(286.667,343.667,o),
(248,395,c),
(382.718,539.821,o),
(477.309,636.523,o),
(593,749,cs),
(616.105,769.217,o),
(668.778,767.599,o),
(712,770,cs),
(725.333,770,o),
(732,773.667,o),
(732,781,cs),
(732,791.667,o),
(721,795,o),
(709,795,cs),
(452,795,ls),
(438.667,795,o),
(429.667,793.333,o),
(425,790,cs),
(420.333,786.667,o),
(418,783.333,o),
(418,780,cs),
(418,765.333,o),
(438.667,766,o),
(452,766,cs),
(472.015,766,o),
(523,768.874,o),
(523,750,cs),
(523,741.052,o),
(477.56,688.674,o),
(386,593.5,cs),
(302.325,506.522,o),
(224.7,428.909,o),
(183,391,c),
(183,766,ls),
(183,789.999,o),
(236.404,791,o),
(254,791,cs),
(270,791,o),
(291,791.333,o),
(291,806,cs),
(291,811.333,o),
(287.833,815.167,o),
(281.5,817.5,cs),
(275.167,819.833,o),
(261.333,821,o),
(240,821,cs),
(58,821,ls),
(46,821,o),
(21,820.667,o),
(21,806,cs),
(21,792.667,o),
(43.333,791,o),
(58,791,cs),
(88.112,791,o),
(138,790.669,o),
(138,768,cs),
(138,709.333,o),
(138.667,648.167,o),
(140,584.5,cs),
(141.333,520.833,o),
(142,459.667,o),
(142,401,cs),
(142,342.333,o),
(141.333,286.833,o),
(140,234.5,cs),
(138.667,182.167,o),
(138,128.667,o),
(138,74,cs),
(138,30.297,o),
(98.22,28,o),
(65,28,cs),
(53,28,o),
(36,25,o),
(36,13,cs),
(36,2.333,o),
(58.333,0,o),
(77,0,cs),
(289,0,ls),
(302.333,0,o),
(309,4.333,o),
(309,13,cs),
(309,23.667,o),
(293.667,30,o),
(279,30,cs),
(183,30,l),
(183,335,l),
(218,370,l),
(266.182,308.846,o),
(331.459,218.836,o),
(409.5,117.5,cs),
(479.716,26.324,o),
(532.389,-36,o),
(550,-36,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
60 59 34 0 4 5 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
10 1 8 8 9 83 0 9 9 12 67 2 1 0 0 1 83 0 1 1 14 67 7 1 5 5 6 83 0 6 6 13 67 0 3 3 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 2 1 0 5 1 0 91 10 1 8 8 9 83 0 9 9 12 67 7 1 5 5 6 83 0 6 6 13 67 0 3 3 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 1 2 1 0 5 1 0 91 0 3 0 4 3 4 87 10 1 8 8 9 83 0 9 9 12 67 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 1 2 1 0 5 1 0 91 0 3 0 4 3 4 87 10 1 8 8 9 83 0 9 9 14 67 7 1 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
105 102 98 95 91 88 76 73 69 66 63 61 53 49 45 42 51 52 58 11 18
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = K;
unicode = 75;
},
{
glyphname = Kcommaaccent;
kernLeft = B;
kernRight = K;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(229,754.703,o),
(273.217,759,o),
(300,759,cs),
(316,760.333,o),
(339,768.667,o),
(339,794,cs),
(339,805.333,o),
(335.5,812.667,o),
(328.5,816,cs),
(321.5,819.333,o),
(307.333,821,o),
(286,821,cs),
(94,821,ls),
(71.333,821,o),
(50,816.667,o),
(50,790,cs),
(50,767.333,o),
(60.667,758.667,o),
(94,756,cs),
(116.667,754.667,o),
(133,746.333,o),
(133,729,cs),
(133,675.667,o),
(133.667,621,o),
(135,565,cs),
(136.333,509,o),
(137,454.333,o),
(137,401,cs),
(137,298.514,o),
(133,213.425,o),
(133,119,cs),
(133,80.333,o),
(119,69.667,o),
(95,67,cs),
(68.333,64.333,o),
(49,55.667,o),
(49,33,cs),
(49,7.667,o),
(61.333,0,o),
(108,0,cs),
(316,0,ls),
(329.333,0,o),
(344,9.667,o),
(344,35,cs),
(344,56.333,o),
(328.333,62,o),
(303,62,cs),
(229,62,l),
(229,335,l),
(235,343,l),
(284.567,280.089,o),
(345.689,195.556,o),
(415.5,104,cs),
(478.716,21.093,o),
(528.794,-36,o),
(545,-36,cs),
(713.305,-36,o),
(761,-39.969,o),
(761,1,cs),
(761,29,o),
(729.667,37,o),
(687,37,cs),
(659,37,o),
(633.833,37.667,o),
(611.5,39,cs),
(589.167,40.333,o),
(575.333,43.667,o),
(570,49,cs),
(524.64,99.4,o),
(449.685,192.977,o),
(396,262,cs),
(362.667,304.667,o),
(328.667,349,o),
(294,395,c),
(347.333,453.667,o),
(398.167,510,o),
(446.5,564,cs),
(494.833,618,o),
(542.667,667.667,o),
(590,713,cs),
(610,731.667,o),
(644,735.333,o),
(700,738,cs),
(713.333,738,o),
(731,747,o),
(731,767,cs),
(731,787,o),
(716,797,o),
(704,797,cs),
(461,797,ls),
(434.333,797,o),
(427,781.333,o),
(427,764,cs),
(427,744,o),
(446.667,737.333,o),
(460,736,cs),
(478.667,734.667,o),
(483,733.333,o),
(483,720,cs),
(483,713.391,o),
(450.63,671.389,o),
(384,600,cs),
(319.793,531.207,o),
(267.229,475.217,o),
(229,439,c),
(229,731,l),
(229,731,l)
);
},
{
closed = 1;
nodes = (
(326,-122.971,o),
(362,-124.557,o),
(362,-142,cs),
(362,-162,o),
(359.5,-176.833,o),
(354.5,-186.5,cs),
(349.5,-196.167,o),
(347,-204.333,o),
(347,-211,cs),
(347,-233.667,o),
(366.333,-234,o),
(373,-234,cs),
(391.413,-234,o),
(454,-191.536,o),
(454,-115,cs),
(454,-57.667,o),
(418,-34,o),
(386,-34,cs),
(342,-34,o),
(326,-64,o),
(326,-92,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
55 54 29 0 4 4 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
8 1 6 6 7 83 0 7 7 12 67 0 1 1 0 83 0 0 0 14 67 0 4 4 5 83 0 5 5 13 67 0 2 2 3 83 0 3 3 21 67 0 9 9 10 83 0 10 10 25 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 9 0 10 9 10 87 8 1 6 6 7 83 0 7 7 12 67 0 1 1 0 83 0 0 0 14 67 0 4 4 5 83 0 5 5 13 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 1 4 0 1 91 0 2 0 3 10 2 3 91 0 9 0 10 9 10 87 8 1 6 6 7 83 0 7 7 12 67 0 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 1 4 0 1 91 0 2 0 3 10 2 3 91 0 9 0 10 9 10 87 8 1 6 6 7 83 0 7 7 14 67 0 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
115 113 107 105 98 97 92 89 84 83 52 40 53 61 36 63 11 21
CALL[ ]	/* CallFunction */";
};
width = 765;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(210,769.999,o),
(263.404,771,o),
(281,771,cs),
(294.229,771,o),
(323,773.695,o),
(323,796,cs),
(323,806,o),
(319,812.667,o),
(311,816,cs),
(303,819.333,o),
(288.333,821,o),
(267,821,cs),
(79,821,ls),
(59.433,821,o),
(38,817.216,o),
(38,796,cs),
(38,777.333,o),
(64.333,771,o),
(79,771,cs),
(94.463,771,o),
(135,771.121,o),
(135,748,cs),
(135,692.667,o),
(135.667,634.833,o),
(137,574.5,cs),
(138.333,514.167,o),
(139,456.333,o),
(139,401,cs),
(139,346.333,o),
(138.333,294.333,o),
(137,245,cs),
(135.667,195.667,o),
(135,145.333,o),
(135,94,cs),
(135,47.509,o),
(101.959,48,o),
(87,48,cs),
(75,48,o),
(53,45.667,o),
(53,23,cs),
(53,0.375,o),
(78.972,0,o),
(99,0,cs),
(316,0,ls),
(329.333,0,o),
(341,8.333,o),
(341,27,cs),
(341,44.333,o),
(320.667,50,o),
(306,50,cs),
(210,50,l),
(210,335,l),
(228,353,l),
(271.582,297.684,o),
(333.924,211.052,o),
(413,108.5,cs),
(478.871,23.074,o),
(529.005,-36,o),
(547,-36,cs),
(673.498,-36,o),
(749,-33.88,o),
(749,-2,cs),
(749,15.333,o),
(716.667,16,o),
(686,16,cs),
(658,16,o),
(632.5,16.667,o),
(609.5,18,cs),
(586.5,19.333,o),
(572.333,22.667,o),
(567,28,cs),
(516.532,83.781,o),
(439.617,179.368,o),
(383,254,cs),
(347.667,300,o),
(311.667,347,o),
(275,395,c),
(405.866,535.681,o),
(480.679,612.993,o),
(600,729,cs),
(622.69,748.854,o),
(690.831,747.324,o),
(739,750,cs),
(752.333,750,o),
(759,761.667,o),
(759,771,cs),
(759,787,o),
(748,795,o),
(736,795,cs),
(468,795,ls),
(441.333,795,o),
(434,783.333,o),
(434,770,cs),
(434,751.333,o),
(454.667,746,o),
(468,746,cs),
(476.667,745.333,o),
(484.167,744.833,o),
(490.5,744.5,cs),
(496.833,744.167,o),
(500,739.333,o),
(500,730,cs),
(500,721.111,o),
(451.861,667.495,o),
(385,597.5,cs),
(315.938,525.201,o),
(254.953,463.705,o),
(210,421,c),
(210,746,l),
(210,746,l)
);
},
{
closed = 1;
nodes = (
(326,-126,o),
(362,-125,o),
(362,-142,cs),
(362,-159,o),
(360,-172,o),
(356,-180,cs),
(351,-189,o),
(349,-196,o),
(349,-202,cs),
(349,-219,o),
(363,-221,o),
(370,-221,cs),
(394,-221,o),
(435,-171,o),
(435,-117,cs),
(435,-64,o),
(405,-45,o),
(378,-45,cs),
(341,-45,o),
(326,-70,o),
(326,-94,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
60 59 34 1 4 6 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
11 1 9 9 10 83 0 10 10 12 67 3 1 2 0 0 2 83 0 2 2 14 67 8 1 6 6 7 83 0 7 7 13 67 0 4 4 5 83 0 5 5 21 67 0 12 12 13 83 0 13 13 25 13 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 2 3 1 2 0 6 2 0 91 11 1 9 9 10 83 0 10 10 12 67 8 1 6 6 7 83 0 7 7 13 67 0 4 4 5 83 0 5 5 21 67 0 12 12 13 83 0 13 13 25 13 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 2 3 1 2 0 6 2 0 91 0 4 0 5 12 4 5 91 0 12 0 13 12 13 87 11 1 9 9 10 83 0 10 10 12 67 8 1 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
1 1 0 3 6 3 0 96 0 2 0 3 0 2 3 91 0 4 0 5 12 4 5 91 0 12 0 13 12 13 87 11 1 9 9 10 83 0 10 10 14 67 8 1 6 6 7 83 0 7 7 13 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
128 126 120 118 112 109 103 100 94 91 79 76 71 67 63 61 53 50 45 42 52 52 17 25 14 30
CALL[ ]	/* CallFunction */";
};
width = 747;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(635.571,-36,o),
(722,-36.634,o),
(722,-17,cs),
(722,-10.333,o),
(718.167,-6.5,o),
(710.5,-5.5,cs),
(702.833,-4.5,o),
(691.333,-4,o),
(676,-4,cs),
(648,-4,o),
(622.5,-3.333,o),
(599.5,-2,cs),
(576.5,-0.667,o),
(562.333,2.667,o),
(557,8,cs),
(503.582,63.962,o),
(420.7,170.179,o),
(362,246,cs),
(324.667,294,o),
(286.667,343.667,o),
(248,395,c),
(382.718,539.821,o),
(477.309,636.523,o),
(593,749,cs),
(616.105,769.217,o),
(668.778,767.599,o),
(712,770,cs),
(725.333,770,o),
(732,773.667,o),
(732,781,cs),
(732,791.667,o),
(721,795,o),
(709,795,cs),
(452,795,ls),
(438.667,795,o),
(429.667,793.333,o),
(425,790,cs),
(420.333,786.667,o),
(418,783.333,o),
(418,780,cs),
(418,765.333,o),
(438.667,766,o),
(452,766,cs),
(472.015,766,o),
(523,768.874,o),
(523,750,cs),
(523,741.052,o),
(477.56,688.674,o),
(386,593.5,cs),
(302.325,506.522,o),
(224.7,428.909,o),
(183,391,c),
(183,766,ls),
(183,789.999,o),
(236.404,791,o),
(254,791,cs),
(270,791,o),
(291,791.333,o),
(291,806,cs),
(291,811.333,o),
(287.833,815.167,o),
(281.5,817.5,cs),
(275.167,819.833,o),
(261.333,821,o),
(240,821,cs),
(58,821,ls),
(46,821,o),
(21,820.667,o),
(21,806,cs),
(21,792.667,o),
(43.333,791,o),
(58,791,cs),
(88.112,791,o),
(138,790.669,o),
(138,768,cs),
(138,709.333,o),
(138.667,648.167,o),
(140,584.5,cs),
(141.333,520.833,o),
(142,459.667,o),
(142,401,cs),
(142,342.333,o),
(141.333,286.833,o),
(140,234.5,cs),
(138.667,182.167,o),
(138,128.667,o),
(138,74,cs),
(138,30.297,o),
(98.22,28,o),
(65,28,cs),
(53,28,o),
(36,25,o),
(36,13,cs),
(36,2.333,o),
(58.333,0,o),
(77,0,cs),
(289,0,ls),
(302.333,0,o),
(309,4.333,o),
(309,13,cs),
(309,23.667,o),
(293.667,30,o),
(279,30,cs),
(183,30,l),
(183,335,l),
(218,370,l),
(266.182,308.846,o),
(331.459,218.836,o),
(409.5,117.5,cs),
(479.716,26.324,o),
(532.389,-36,o),
(550,-36,cs)
);
},
{
closed = 1;
nodes = (
(391.943,-202,o),
(408,-152.312,o),
(408,-123,cs),
(408,-77.667,o),
(386,-66,o),
(366,-66,cs),
(339.333,-66,o),
(326,-82.667,o),
(326,-100,cs),
(326,-132.202,o),
(362,-126.69,o),
(362,-144,cs),
(362,-150.667,o),
(360.167,-158.833,o),
(356.5,-168.5,cs),
(352.833,-178.167,o),
(351,-185.333,o),
(351,-190,cs),
(351,-196.667,o),
(358.333,-202,o),
(365,-202,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
60 59 34 0 4 5 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
10 1 8 8 9 83 0 9 9 12 67 2 1 0 0 1 83 0 1 1 14 67 7 1 5 5 6 83 0 6 6 13 67 0 3 3 4 83 0 4 4 21 67 0 11 11 12 83 0 12 12 17 12 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 1 2 1 0 5 1 0 91 10 1 8 8 9 83 0 9 9 12 67 7 1 5 5 6 83 0 6 6 13 67 0 3 3 4 83 0 4 4 21 67 0 11 11 12 83 0 12 12 17 12 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 2 1 0 5 1 0 91 0 3 0 4 11 3 4 91 10 1 8 8 9 83 0 9 9 12 67 7 1 5 5 6 83 0 6 6 13 67 0 11 11 12 83 0 12 12 17 12 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 2 1 0 5 1 0 91 0 3 0 4 11 3 4 91 0 11 0 12 11 12 87 10 1 8 8 9 83 0 9 9 12 67 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 2 1 0 5 1 0 91 0 3 0 4 11 3 4 91 0 11 0 12 11 12 87 10 1 8 8 9 83 0 9 9 14 67 7 1 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
121 119 113 111 105 102 98 95 91 88 76 73 69 66 63 61 53 49 45 42 51 52 58 13 18
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = Kcommaaccent;
unicode = 310;
},
{
glyphname = L;
kernLeft = B;
kernRight = L;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(34.333,71.667,o),
(12,66,o),
(12,34,cs),
(12,24.667,o),
(15.333,16.667,o),
(22,10,cs),
(28.667,3.333,o),
(43.333,0,o),
(66,0,cs),
(505,0,ls),
(525,0,o),
(535.333,6.333,o),
(538,29,cs),
(548.033,167.457,o),
(553,249.128,o),
(553,274,cs),
(553,301.333,o),
(540.333,315,o),
(515,315,cs),
(476.333,315,o),
(472,295.667,o),
(472,265,cs),
(472,295.151,o),
(464.553,137.214,o),
(459,115,cs),
(453.667,92.333,o),
(437.667,84,o),
(419,84,cs),
(229,84,l),
(229,720,ls),
(229,732.667,o),
(233.167,742.333,o),
(241.5,749,cs),
(249.833,755.667,o),
(268,759,o),
(296,759,cs),
(312,759,o),
(334,764.667,o),
(334,790,cs),
(334,812.667,o),
(325.667,821,o),
(283,821,cs),
(63,821,ls),
(40.333,821,o),
(21,814,o),
(21,786,cs),
(21,756.667,o),
(37.667,750.333,o),
(63,749,cs),
(90.806,749,o),
(131,737.822,o),
(131,712,cs),
(131,620.357,o),
(137,543.579,o),
(137,416,cs),
(137,296.77,o),
(135,183.561,o),
(135,126,cs),
(135,95.333,o),
(110.333,81,o),
(77,77,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 4 0 3 0 4 3 104 2 1 0 0 1 83 0 1 1 12 67 0 3 3 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 2 4 2 0 96 0 4 3 2 4 3 102 0 2 2 1 83 0 1 1 12 67 0 3 3 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 2 4 2 0 96 0 4 3 2 4 3 102 0 2 2 1 83 0 1 1 14 67 0 3 3 5 84 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
59 56 48 46 37 35 32 30 26 23 19 17 6 15
CALL[ ]	/* CallFunction */";
};
width = 581;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(44.333,48,o),
(32,44,o),
(32,24,cs),
(32,17.333,o),
(33.333,0,o),
(56,0,cs),
(494,0,ls),
(514,0,o),
(524.333,6.333,o),
(527,29,c),
(525.637,11.275,o),
(543,233.659,o),
(543,284,cs),
(543,302.667,o),
(527.667,309,o),
(509,309,cs),
(479.667,309,o),
(476,289.667,o),
(476,259,cs),
(476,281.484,o),
(467.831,121.155,o),
(463,97,cs),
(459,74.333,o),
(443,66,o),
(423,66,cs),
(212,66,l),
(212,746,ls),
(212,770.148,o),
(271.794,771,o),
(289,771,cs),
(305,771,o),
(326,774.667,o),
(326,796,cs),
(326,805.333,o),
(322.833,811.833,o),
(316.5,815.5,cs),
(310.167,819.167,o),
(296.333,821,o),
(275,821,cs),
(73,821,ls),
(61,821,o),
(36,818.667,o),
(36,796,cs),
(36,773.333,o),
(58.333,771,o),
(73,771,cs),
(93.885,771,o),
(135,767.595,o),
(135,734,cs),
(135,693.273,o),
(136.841,651.817,o),
(138,609.5,cs),
(139.333,560.833,o),
(141,500,o),
(141,416,cs),
(141,283.744,o),
(139,148.593,o),
(139,78,cs),
(139,49.821,o),
(100.856,48,o),
(67,48,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 5 1 4 1 5 4 104 7 1 0 4 6 4 0 96 3 1 1 1 2 83 0 2 2 12 67 0 4 4 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 5 1 4 1 5 4 104 7 1 0 4 6 4 0 96 3 1 1 1 2 83 0 2 2 14 67 0 4 4 6 84 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
2 0 64 61 52 50 41 39 35 32 28 25 21 19 0 68 2 68 8 15
CALL[ ]	/* CallFunction */";
};
width = 565;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(470,0,ls),
(490,0,o),
(500.333,6.333,o),
(503,29,cs),
(507.062,81.812,o),
(519,243.053,o),
(519,279,cs),
(519,293.667,o),
(506.667,299,o),
(500,299,cs),
(492,299,o),
(487,294.5,o),
(485,285.5,cs),
(483,276.5,o),
(482,264.333,o),
(482,249,cs),
(482,269.785,o),
(474.364,99.185,o),
(469,67,cs),
(466.333,44.333,o),
(451.667,36,o),
(429,36,cs),
(188,36,l),
(188,766,ls),
(188,790.072,o),
(238.938,791,o),
(255,791,cs),
(271,791,o),
(292,791.333,o),
(292,806,cs),
(292,811.333,o),
(288.833,815.167,o),
(282.5,817.5,cs),
(276.167,819.833,o),
(262.333,821,o),
(241,821,cs),
(59,821,ls),
(47,821,o),
(22,820.667,o),
(22,806,cs),
(22,792.667,o),
(44.333,791,o),
(59,791,cs),
(84.169,791,o),
(141,788.04,o),
(141,754,cs),
(141,712.212,o),
(142.814,668.249,o),
(144,622,cs),
(145.333,570,o),
(147,505.333,o),
(147,416,cs),
(147,276.52,o),
(145,132.592,o),
(145,58,cs),
(145,28.268,o),
(92.764,28,o),
(53,28,cs),
(29.667,28,o),
(18,22.333,o),
(18,11,cs),
(18,7.667,o),
(19.167,5,o),
(21.5,3,cs),
(23.833,1,o),
(30.667,0,o),
(42,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 5 1 4 1 5 4 104 7 1 0 4 6 4 0 96 3 1 1 1 2 83 0 2 2 12 67 0 4 4 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 5 1 4 1 5 4 104 7 1 0 4 6 4 0 96 3 1 1 1 2 83 0 2 2 14 67 0 4 4 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
2 0 64 61 52 50 41 39 35 32 28 25 21 18 0 67 2 67 8 15
CALL[ ]	/* CallFunction */";
};
width = 542;
}
);
note = L;
unicode = 76;
},
{
glyphname = Lacute;
kernLeft = B;
kernRight = L;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(298,953.667,o),
(283.667,972,o),
(257,972,cs),
(219.395,972,o),
(144,898.577,o),
(144,871,cs),
(144,855,o),
(157.667,840,o),
(179,840,cs),
(213.448,840,o),
(298,897.455,o),
(298,935,cs)
);
},
{
closed = 1;
nodes = (
(34.333,71.667,o),
(12,66,o),
(12,34,cs),
(12,24.667,o),
(15.333,16.667,o),
(22,10,cs),
(28.667,3.333,o),
(43.333,0,o),
(66,0,cs),
(505,0,ls),
(525,0,o),
(535.333,6.333,o),
(538,29,cs),
(548.033,167.457,o),
(553,249.128,o),
(553,274,cs),
(553,301.333,o),
(540.333,315,o),
(515,315,cs),
(476.333,315,o),
(472,295.667,o),
(472,265,cs),
(472,295.151,o),
(464.553,137.214,o),
(459,115,cs),
(453.667,92.333,o),
(437.667,84,o),
(419,84,cs),
(229,84,l),
(229,720,ls),
(229,732.667,o),
(233.167,742.333,o),
(241.5,749,cs),
(249.833,755.667,o),
(268,759,o),
(296,759,cs),
(312,759,o),
(334,764.667,o),
(334,790,cs),
(334,812.667,o),
(325.667,821,o),
(283,821,cs),
(63,821,ls),
(40.333,821,o),
(21,814,o),
(21,786,cs),
(21,756.667,o),
(37.667,750.333,o),
(63,749,cs),
(90.806,749,o),
(131,737.822,o),
(131,712,cs),
(131,620.357,o),
(137,543.579,o),
(137,416,cs),
(137,296.77,o),
(135,183.561,o),
(135,126,cs),
(135,95.333,o),
(110.333,81,o),
(77,77,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 1 0 1 106 0 0 3 0 106 0 6 2 5 2 6 5 104 4 1 2 2 3 83 0 3 3 12 67 0 5 5 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 0 0 3 0 106 0 2 4 6 4 2 96 0 6 5 4 6 5 102 0 4 4 3 83 0 3 3 12 67 0 5 5 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 0 0 3 0 106 0 2 4 6 4 2 96 0 6 5 4 6 5 102 0 4 4 3 83 0 3 3 14 67 0 5 5 7 84 0 7 7 13 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
75 72 64 62 53 51 48 46 42 39 35 33 38 36 8 17
CALL[ ]	/* CallFunction */";
};
width = 581;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(248,959.667,o),
(236,972,o),
(216,972,cs),
(186.753,972,o),
(110,903.873,o),
(110,877,cs),
(110,863.667,o),
(119.333,854,o),
(134,854,cs),
(160.12,854,o),
(248,908.21,o),
(248,941,cs)
);
},
{
closed = 1;
nodes = (
(44.333,48,o),
(32,44,o),
(32,24,cs),
(32,17.333,o),
(33.333,0,o),
(56,0,cs),
(494,0,ls),
(514,0,o),
(524.333,6.333,o),
(527,29,c),
(525.637,11.275,o),
(543,233.659,o),
(543,284,cs),
(543,302.667,o),
(527.667,309,o),
(509,309,cs),
(479.667,309,o),
(476,289.667,o),
(476,259,cs),
(476,281.484,o),
(467.831,121.155,o),
(463,97,cs),
(459,74.333,o),
(443,66,o),
(423,66,cs),
(212,66,l),
(212,746,ls),
(212,770.148,o),
(271.794,771,o),
(289,771,cs),
(305,771,o),
(326,774.667,o),
(326,796,cs),
(326,805.333,o),
(322.833,811.833,o),
(316.5,815.5,cs),
(310.167,819.167,o),
(296.333,821,o),
(275,821,cs),
(73,821,ls),
(61,821,o),
(36,818.667,o),
(36,796,cs),
(36,773.333,o),
(58.333,771,o),
(73,771,cs),
(93.885,771,o),
(135,767.595,o),
(135,734,cs),
(135,693.273,o),
(136.841,651.817,o),
(138,609.5,cs),
(139.333,560.833,o),
(141,500,o),
(141,416,cs),
(141,283.744,o),
(139,148.593,o),
(139,78,cs),
(139,49.821,o),
(100.856,48,o),
(67,48,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 1 0 1 106 0 0 4 0 106 0 7 3 6 3 7 6 104 9 1 2 6 8 6 2 96 5 1 3 3 4 83 0 4 4 12 67 0 6 6 8 84 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 0 1 106 0 0 4 0 106 0 7 3 6 3 7 6 104 9 1 2 6 8 6 2 96 5 1 3 3 4 83 0 4 4 14 67 0 6 6 8 84 0 8 8 13 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
18 16 80 77 68 66 57 55 51 48 44 41 37 35 16 84 18 84 38 36 10 17
CALL[ ]	/* CallFunction */";
};
width = 565;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(470,0,ls),
(490,0,o),
(500.333,6.333,o),
(503,29,cs),
(507.062,81.812,o),
(519,243.053,o),
(519,279,cs),
(519,293.667,o),
(506.667,299,o),
(500,299,cs),
(492,299,o),
(487,294.5,o),
(485,285.5,cs),
(483,276.5,o),
(482,264.333,o),
(482,249,cs),
(482,269.785,o),
(474.364,99.185,o),
(469,67,cs),
(466.333,44.333,o),
(451.667,36,o),
(429,36,cs),
(188,36,l),
(188,766,ls),
(188,790.072,o),
(238.938,791,o),
(255,791,cs),
(271,791,o),
(292,791.333,o),
(292,806,cs),
(292,811.333,o),
(288.833,815.167,o),
(282.5,817.5,cs),
(276.167,819.833,o),
(262.333,821,o),
(241,821,cs),
(59,821,ls),
(47,821,o),
(22,820.667,o),
(22,806,cs),
(22,792.667,o),
(44.333,791,o),
(59,791,cs),
(84.169,791,o),
(141,788.04,o),
(141,754,cs),
(141,712.212,o),
(142.814,668.249,o),
(144,622,cs),
(145.333,570,o),
(147,505.333,o),
(147,416,cs),
(147,276.52,o),
(145,132.592,o),
(145,58,cs),
(145,28.268,o),
(92.764,28,o),
(53,28,cs),
(29.667,28,o),
(18,22.333,o),
(18,11,cs),
(18,7.667,o),
(19.167,5,o),
(21.5,3,cs),
(23.833,1,o),
(30.667,0,o),
(42,0,cs)
);
},
{
closed = 1;
nodes = (
(131.198,875,o),
(219,927.619,o),
(219,949,cs),
(219,967.667,o),
(210.667,971,o),
(200,971,cs),
(180.338,971,o),
(105,909.981,o),
(105,886,cs),
(105,878.667,o),
(107.667,875,o),
(113,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 1 0 1 106 0 0 4 0 106 0 7 3 6 3 7 6 104 9 1 2 6 8 6 2 96 5 1 3 3 4 83 0 4 4 12 67 0 6 6 8 84 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 0 1 106 0 0 4 0 106 0 7 3 6 3 7 6 104 9 1 2 6 8 6 2 96 5 1 3 3 4 83 0 4 4 14 67 0 6 6 8 84 0 8 8 13 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
17 15 79 76 67 65 56 54 50 47 43 40 36 33 15 82 17 82 37 36 10 17
CALL[ ]	/* CallFunction */";
};
width = 542;
}
);
note = Lacute;
unicode = 313;
},
{
glyphname = Lcaron;
kernLeft = B;
kernRight = L;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(302.325,972,o),
(239.763,951.893,o),
(199,922,c),
(161.937,949.179,o),
(99.248,972,o),
(80,972,cs),
(72,972,o),
(67,964.667,o),
(67,958,cs),
(67,931.333,o),
(95.167,900.5,o),
(126.5,874.5,cs),
(153.862,851.795,o),
(189.041,830,o),
(199,830,cs),
(223.081,830,o),
(333,908.502,o),
(333,951,cs),
(333,960.333,o),
(329.667,972,o),
(319,972,cs)
);
},
{
closed = 1;
nodes = (
(34.333,71.667,o),
(12,66,o),
(12,34,cs),
(12,24.667,o),
(15.333,16.667,o),
(22,10,cs),
(28.667,3.333,o),
(43.333,0,o),
(66,0,cs),
(505,0,ls),
(525,0,o),
(535.333,6.333,o),
(538,29,cs),
(548.033,167.457,o),
(553,249.128,o),
(553,274,cs),
(553,301.333,o),
(540.333,315,o),
(515,315,cs),
(476.333,315,o),
(472,295.667,o),
(472,265,cs),
(472,295.151,o),
(464.553,137.214,o),
(459,115,cs),
(453.667,92.333,o),
(437.667,84,o),
(419,84,cs),
(229,84,l),
(229,720,ls),
(229,732.667,o),
(233.167,742.333,o),
(241.5,749,cs),
(249.833,755.667,o),
(268,759,o),
(296,759,cs),
(312,759,o),
(334,764.667,o),
(334,790,cs),
(334,812.667,o),
(325.667,821,o),
(283,821,cs),
(63,821,ls),
(40.333,821,o),
(21,814,o),
(21,786,cs),
(21,756.667,o),
(37.667,750.333,o),
(63,749,cs),
(90.806,749,o),
(131,737.822,o),
(131,712,cs),
(131,620.357,o),
(137,543.579,o),
(137,416,cs),
(137,296.77,o),
(135,183.561,o),
(135,126,cs),
(135,95.333,o),
(110.333,81,o),
(77,77,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
2 9 2 0 1 0 106 0 1 4 1 106 0 7 3 6 3 7 6 104 5 1 3 3 4 83 0 4 4 12 67 0 6 6 8 84 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
2 9 2 0 1 0 106 0 1 4 1 106 0 3 5 7 5 3 96 0 7 6 5 7 6 102 0 5 5 4 83 0 4 4 12 67 0 6 6 8 84 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
2 9 2 0 1 0 106 0 1 4 1 106 0 3 5 7 5 3 96 0 7 6 5 7 6 102 0 5 5 4 83 0 4 4 14 67 0 6 6 8 84 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
1 0 85 82 74 72 63 61 58 56 52 49 45 43 17 15 9 7 0 25 1 25 10 15
CALL[ ]	/* CallFunction */";
};
width = 580;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(295.663,972,o),
(247.994,958.643,o),
(184,921,c),
(144.008,944.525,o),
(82.679,972,o),
(65,972,cs),
(57.667,972,o),
(54,967.667,o),
(54,959,cs),
(54,917.54,o),
(162.04,847,o),
(184,847,cs),
(209.107,847,o),
(315,919.046,o),
(315,955,cs),
(315,964.333,o),
(312,972,o),
(304,972,cs)
);
},
{
closed = 1;
nodes = (
(44.333,48,o),
(32,44,o),
(32,24,cs),
(32,17.333,o),
(33.333,0,o),
(56,0,cs),
(494,0,ls),
(514,0,o),
(524.333,6.333,o),
(527,29,c),
(525.637,11.275,o),
(543,233.659,o),
(543,284,cs),
(543,302.667,o),
(527.667,309,o),
(509,309,cs),
(479.667,309,o),
(476,289.667,o),
(476,259,cs),
(476,281.484,o),
(467.831,121.155,o),
(463,97,cs),
(459,74.333,o),
(443,66,o),
(423,66,cs),
(212,66,l),
(212,746,ls),
(212,770.148,o),
(271.794,771,o),
(289,771,cs),
(305,771,o),
(326,774.667,o),
(326,796,cs),
(326,805.333,o),
(322.833,811.833,o),
(316.5,815.5,cs),
(310.167,819.167,o),
(296.333,821,o),
(275,821,cs),
(73,821,ls),
(61,821,o),
(36,818.667,o),
(36,796,cs),
(36,773.333,o),
(58.333,771,o),
(73,771,cs),
(93.885,771,o),
(135,767.595,o),
(135,734,cs),
(135,693.273,o),
(136.841,651.817,o),
(138,609.5,cs),
(139.333,560.833,o),
(141,500,o),
(141,416,cs),
(141,283.744,o),
(139,148.593,o),
(139,78,cs),
(139,49.821,o),
(100.856,48,o),
(67,48,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
2 10 2 0 1 0 106 0 1 5 1 106 0 8 4 7 4 8 7 104 11 1 3 7 9 7 3 96 6 1 4 4 5 83 0 5 5 12 67 0 7 7 9 84 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
2 10 2 0 1 0 106 0 1 5 1 106 0 8 4 7 4 8 7 104 11 1 3 7 9 7 3 96 6 1 4 4 5 83 0 5 5 14 67 0 7 7 9 84 0 9 9 13 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
27 25 1 0 89 86 77 75 66 64 60 57 53 50 46 44 25 93 27 93 16 14 9 7 0 24 1 24 12 15
CALL[ ]	/* CallFunction */";
};
width = 565;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(471,0,ls),
(491,0,o),
(501.333,6.333,o),
(504,29,cs),
(508.062,81.812,o),
(520,243.053,o),
(520,279,cs),
(520,293.667,o),
(507.667,299,o),
(501,299,cs),
(493,299,o),
(488,294.5,o),
(486,285.5,cs),
(484,276.5,o),
(483,264.333,o),
(483,249,cs),
(483,269.785,o),
(475.364,99.185,o),
(470,67,cs),
(467.333,44.333,o),
(452.667,36,o),
(430,36,cs),
(189,36,l),
(189,736,ls),
(189,760.072,o),
(239.938,761,o),
(256,761,cs),
(272,761,o),
(293,761.333,o),
(293,776,cs),
(293,781.333,o),
(289.833,785.167,o),
(283.5,787.5,cs),
(277.167,789.833,o),
(263.333,791,o),
(242,791,cs),
(60,791,ls),
(48,791,o),
(23,790.667,o),
(23,776,cs),
(23,762.667,o),
(45.333,761,o),
(60,761,cs),
(85.169,761,o),
(142,758.04,o),
(142,724,cs),
(142,688.435,o),
(143.831,645.657,o),
(145,606.5,cs),
(146.333,561.833,o),
(148,505.333,o),
(148,416,cs),
(148,276.52,o),
(146,132.592,o),
(146,58,cs),
(146,28.268,o),
(93.764,28,o),
(54,28,cs),
(30.667,28,o),
(19,22.333,o),
(19,11,cs),
(19,7.667,o),
(20.167,5,o),
(22.5,3,cs),
(24.833,1,o),
(31.667,0,o),
(43,0,cs)
);
},
{
closed = 1;
nodes = (
(187.596,875,o),
(290,936.292,o),
(290,961,cs),
(290,968.333,o),
(287.333,972,o),
(282,972,cs),
(270.436,972,o),
(213.362,941.012,o),
(162,919,c),
(107.598,942.315,o),
(54.911,972,o),
(43,972,cs),
(37.667,972,o),
(35,968.333,o),
(35,961,cs),
(35,936.21,o),
(138.629,875,o),
(162,875,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
87 1 8 7 1 66 9 11 2 7 8 7 106 0 8 2 8 106 0 5 1 4 1 5 4 104 10 1 0 4 6 4 0 96 0 2 3 1 1 5 2 1 91 0 4 4 6 84 0 6 6 13 6 68 69 68 2 0 83 81 76 74 68 91 69 91 64 61 52 50 41 39 35 32 28 25 21 18 0 67 2 67 12 15
CALL[ ]	/* CallFunction */";
};
width = 543;
}
);
note = Lcaron;
unicode = 317;
},
{
glyphname = Lcommaaccent;
kernLeft = B;
kernRight = L;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(249,-138.971,o),
(285,-140.557,o),
(285,-158,cs),
(285,-178,o),
(282.5,-192.833,o),
(277.5,-202.5,cs),
(272.5,-212.167,o),
(270,-220.333,o),
(270,-227,cs),
(270,-249.667,o),
(289.333,-250,o),
(296,-250,cs),
(314.413,-250,o),
(377,-207.536,o),
(377,-131,cs),
(377,-73.667,o),
(341,-50,o),
(309,-50,cs),
(265,-50,o),
(249,-80,o),
(249,-108,cs)
);
},
{
closed = 1;
nodes = (
(34.333,71.667,o),
(12,66,o),
(12,34,cs),
(12,24.667,o),
(15.333,16.667,o),
(22,10,cs),
(28.667,3.333,o),
(43.333,0,o),
(66,0,cs),
(505,0,ls),
(525,0,o),
(535.333,6.333,o),
(538,29,cs),
(548.033,167.457,o),
(553,249.128,o),
(553,274,cs),
(553,301.333,o),
(540.333,315,o),
(515,315,cs),
(476.333,315,o),
(472,295.667,o),
(472,265,cs),
(472,295.151,o),
(464.553,137.214,o),
(459,115,cs),
(453.667,92.333,o),
(437.667,84,o),
(419,84,cs),
(229,84,l),
(229,720,ls),
(229,732.667,o),
(233.167,742.333,o),
(241.5,749,cs),
(249.833,755.667,o),
(268,759,o),
(296,759,cs),
(312,759,o),
(334,764.667,o),
(334,790,cs),
(334,812.667,o),
(325.667,821,o),
(283,821,cs),
(63,821,ls),
(40.333,821,o),
(21,814,o),
(21,786,cs),
(21,756.667,o),
(37.667,750.333,o),
(63,749,cs),
(90.806,749,o),
(131,737.822,o),
(131,712,cs),
(131,620.357,o),
(137,543.579,o),
(137,416,cs),
(137,296.77,o),
(135,183.561,o),
(135,126,cs),
(135,95.333,o),
(110.333,81,o),
(77,77,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 6 2 5 2 6 5 104 4 1 2 2 3 83 0 3 3 12 67 0 5 5 7 84 0 7 7 13 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 6 2 5 2 6 5 104 0 0 0 1 0 1 87 4 1 2 2 3 83 0 3 3 12 67 0 5 5 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 4 6 4 2 96 0 6 5 4 6 5 102 0 0 0 1 0 1 87 0 4 4 3 83 0 3 3 12 67 0 5 5 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 2 4 6 4 2 96 0 6 5 4 6 5 102 0 0 0 1 0 1 87 0 4 4 3 83 0 3 3 14 67 0 5 5 7 84 0 7 7 13 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
81 78 70 68 59 57 54 52 48 45 41 39 38 34 8 17
CALL[ ]	/* CallFunction */";
};
width = 581;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(44.333,48,o),
(32,44,o),
(32,24,cs),
(32,17.333,o),
(33.333,0,o),
(56,0,cs),
(494,0,ls),
(514,0,o),
(524.333,6.333,o),
(527,29,c),
(525.637,11.275,o),
(543,233.659,o),
(543,284,cs),
(543,302.667,o),
(527.667,309,o),
(509,309,cs),
(479.667,309,o),
(476,289.667,o),
(476,259,cs),
(476,281.484,o),
(467.831,121.155,o),
(463,97,cs),
(459,74.333,o),
(443,66,o),
(423,66,cs),
(212,66,l),
(212,746,ls),
(212,770.148,o),
(271.794,771,o),
(289,771,cs),
(305,771,o),
(326,774.667,o),
(326,796,cs),
(326,805.333,o),
(322.833,811.833,o),
(316.5,815.5,cs),
(310.167,819.167,o),
(296.333,821,o),
(275,821,cs),
(73,821,ls),
(61,821,o),
(36,818.667,o),
(36,796,cs),
(36,773.333,o),
(58.333,771,o),
(73,771,cs),
(93.885,771,o),
(135,767.595,o),
(135,734,cs),
(135,693.273,o),
(136.841,651.817,o),
(138,609.5,cs),
(139.333,560.833,o),
(141,500,o),
(141,416,cs),
(141,283.744,o),
(139,148.593,o),
(139,78,cs),
(139,49.821,o),
(100.856,48,o),
(67,48,cs)
);
},
{
closed = 1;
nodes = (
(251,-137,o),
(287,-136,o),
(287,-153,cs),
(287,-170,o),
(285,-183,o),
(281,-191,cs),
(276,-200,o),
(274,-207,o),
(274,-213,cs),
(274,-230,o),
(288,-232,o),
(295,-232,cs),
(319,-232,o),
(360,-182,o),
(360,-128,cs),
(360,-75,o),
(330,-56,o),
(303,-56,cs),
(266,-56,o),
(251,-81,o),
(251,-105,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 5 1 4 1 5 4 104 9 1 0 4 6 4 0 96 3 1 1 1 2 83 0 2 2 12 67 0 4 4 6 84 0 6 6 13 67 0 7 7 8 83 0 8 8 25 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 5 1 4 1 5 4 104 9 1 0 4 6 4 0 96 0 7 0 8 7 8 87 3 1 1 1 2 83 0 2 2 12 67 0 4 4 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 5 1 4 1 5 4 104 9 1 0 4 6 4 0 96 0 7 0 8 7 8 87 3 1 1 1 2 83 0 2 2 14 67 0 4 4 6 84 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
3 1 82 80 74 72 65 62 53 51 42 40 36 33 29 26 22 20 1 69 3 69 10 26
CALL[ ]	/* CallFunction */";
};
width = 565;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(470,0,ls),
(490,0,o),
(500.333,6.333,o),
(503,29,cs),
(507.062,81.812,o),
(519,243.053,o),
(519,279,cs),
(519,293.667,o),
(506.667,299,o),
(500,299,cs),
(492,299,o),
(487,294.5,o),
(485,285.5,cs),
(483,276.5,o),
(482,264.333,o),
(482,249,cs),
(482,269.785,o),
(474.364,99.185,o),
(469,67,cs),
(466.333,44.333,o),
(451.667,36,o),
(429,36,cs),
(188,36,l),
(188,766,ls),
(188,790.072,o),
(238.938,791,o),
(255,791,cs),
(271,791,o),
(292,791.333,o),
(292,806,cs),
(292,811.333,o),
(288.833,815.167,o),
(282.5,817.5,cs),
(276.167,819.833,o),
(262.333,821,o),
(241,821,cs),
(59,821,ls),
(47,821,o),
(22,820.667,o),
(22,806,cs),
(22,792.667,o),
(44.333,791,o),
(59,791,cs),
(84.169,791,o),
(141,788.04,o),
(141,754,cs),
(141,712.212,o),
(142.814,668.249,o),
(144,622,cs),
(145.333,570,o),
(147,505.333,o),
(147,416,cs),
(147,276.52,o),
(145,132.592,o),
(145,58,cs),
(145,28.268,o),
(92.764,28,o),
(53,28,cs),
(29.667,28,o),
(18,22.333,o),
(18,11,cs),
(18,7.667,o),
(19.167,5,o),
(21.5,3,cs),
(23.833,1,o),
(30.667,0,o),
(42,0,cs)
);
},
{
closed = 1;
nodes = (
(318.943,-204,o),
(335,-154.312,o),
(335,-125,cs),
(335,-79.667,o),
(313,-68,o),
(293,-68,cs),
(266.333,-68,o),
(253,-84.667,o),
(253,-102,cs),
(253,-134.202,o),
(289,-128.69,o),
(289,-146,cs),
(289,-152.667,o),
(287.167,-160.833,o),
(283.5,-170.5,cs),
(279.833,-180.167,o),
(278,-187.333,o),
(278,-192,cs),
(278,-198.667,o),
(285.333,-204,o),
(292,-204,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 7 3 6 3 7 6 104 9 1 2 6 8 6 2 96 5 1 3 3 4 83 0 4 4 12 67 0 6 6 8 83 0 8 8 13 67 0 0 0 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 7 3 6 3 7 6 104 9 1 2 6 8 6 2 96 0 0 0 1 0 1 87 5 1 3 3 4 83 0 4 4 12 67 0 6 6 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 7 3 6 3 7 6 104 9 1 2 6 8 6 2 96 0 0 0 1 0 1 87 5 1 3 3 4 83 0 4 4 14 67 0 6 6 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
24 22 86 83 74 72 63 61 57 54 50 47 43 40 22 89 24 89 38 34 10 17
CALL[ ]	/* CallFunction */";
};
width = 542;
}
);
note = Lcommaaccent;
unicode = 315;
},
{
glyphname = Ldot;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(34.333,71.667,o),
(12,66,o),
(12,34,cs),
(12,24.667,o),
(15.333,16.667,o),
(22,10,cs),
(28.667,3.333,o),
(43.333,0,o),
(66,0,cs),
(505,0,ls),
(525,0,o),
(535.333,6.333,o),
(538,29,cs),
(548.033,167.457,o),
(553,249.128,o),
(553,274,cs),
(553,301.333,o),
(540.333,315,o),
(515,315,cs),
(476.333,315,o),
(472,295.667,o),
(472,265,cs),
(472,295.151,o),
(464.553,137.214,o),
(459,115,cs),
(453.667,92.333,o),
(437.667,84,o),
(419,84,cs),
(229,84,l),
(229,720,ls),
(229,732.667,o),
(233.167,742.333,o),
(241.5,749,cs),
(249.833,755.667,o),
(268,759,o),
(296,759,cs),
(312,759,o),
(334,764.667,o),
(334,790,cs),
(334,812.667,o),
(325.667,821,o),
(283,821,cs),
(63,821,ls),
(40.333,821,o),
(21,814,o),
(21,786,cs),
(21,756.667,o),
(37.667,750.333,o),
(63,749,cs),
(90.806,749,o),
(131,737.822,o),
(131,712,cs),
(131,620.357,o),
(137,543.579,o),
(137,416,cs),
(137,296.77,o),
(135,183.561,o),
(135,126,cs),
(135,95.333,o),
(110.333,81,o),
(77,77,cs)
);
},
{
closed = 1;
nodes = (
(301,318.333,o),
(326.667,295,o),
(360,295,cs),
(389.675,295,o),
(427,309.646,o),
(427,365,cs),
(427,401,o),
(399,426,o),
(367,426,cs),
(319.488,426,o),
(301,388.161,o),
(301,361,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 4 6 7 6 4 7 104 2 1 0 0 1 83 0 1 1 12 67 0 7 7 6 83 0 6 6 15 67 0 3 3 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 4 6 7 6 4 7 104 0 6 0 7 3 6 7 91 2 1 0 0 1 83 0 1 1 12 67 0 3 3 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 0 2 6 2 0 96 0 4 6 7 6 4 7 104 0 6 0 7 3 6 7 91 0 2 2 1 83 0 1 1 12 67 0 3 3 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 0 2 6 2 0 96 0 4 6 7 6 4 7 104 0 6 0 7 3 6 7 91 0 2 2 1 83 0 1 1 14 67 0 3 3 5 84 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
78 76 70 68 59 56 48 46 37 35 32 30 26 23 19 17 8 15
CALL[ ]	/* CallFunction */";
};
width = 577;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(44.333,48,o),
(32,44,o),
(32,24,cs),
(32,17.333,o),
(33.333,0,o),
(56,0,cs),
(494,0,ls),
(514,0,o),
(524.333,6.333,o),
(527,29,c),
(525.637,11.275,o),
(543,233.659,o),
(543,284,cs),
(543,302.667,o),
(527.667,309,o),
(509,309,cs),
(479.667,309,o),
(476,289.667,o),
(476,259,cs),
(476,281.484,o),
(467.831,121.155,o),
(463,97,cs),
(459,74.333,o),
(443,66,o),
(423,66,cs),
(212,66,l),
(212,746,ls),
(212,770.148,o),
(271.794,771,o),
(289,771,cs),
(305,771,o),
(326,774.667,o),
(326,796,cs),
(326,805.333,o),
(322.833,811.833,o),
(316.5,815.5,cs),
(310.167,819.167,o),
(296.333,821,o),
(275,821,cs),
(73,821,ls),
(61,821,o),
(36,818.667,o),
(36,796,cs),
(36,773.333,o),
(58.333,771,o),
(73,771,cs),
(93.885,771,o),
(135,767.595,o),
(135,734,cs),
(135,693.273,o),
(136.841,651.817,o),
(138,609.5,cs),
(139.333,560.833,o),
(141,500,o),
(141,416,cs),
(141,283.744,o),
(139,148.593,o),
(139,78,cs),
(139,49.821,o),
(100.856,48,o),
(67,48,cs)
);
},
{
closed = 1;
nodes = (
(300,325,o),
(322,304,o),
(349,304,cs),
(374,304,o),
(405,317,o),
(405,365,cs),
(405,396,o),
(383,417,o),
(356,417,cs),
(314,417,o),
(300,381,o),
(300,361,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 5 7 8 7 5 8 104 9 1 0 4 6 4 0 96 3 1 1 1 2 83 0 2 2 12 67 0 8 8 7 83 0 7 7 15 67 0 4 4 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 5 7 8 7 5 8 104 9 1 0 4 6 4 0 96 0 7 0 8 4 7 8 91 3 1 1 1 2 83 0 2 2 12 67 0 4 4 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 5 7 8 7 5 8 104 9 1 0 4 6 4 0 96 0 7 0 8 4 7 8 91 3 1 1 1 2 83 0 2 2 14 67 0 4 4 6 84 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
3 1 82 80 76 74 65 62 53 51 42 40 36 33 29 26 22 20 1 69 3 69 10 26
CALL[ ]	/* CallFunction */";
};
width = 562;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(470,0,ls),
(490,0,o),
(500.333,6.333,o),
(503,29,cs),
(507.062,81.812,o),
(519,243.053,o),
(519,279,cs),
(519,293.667,o),
(506.667,299,o),
(500,299,cs),
(492,299,o),
(487,294.5,o),
(485,285.5,cs),
(483,276.5,o),
(482,264.333,o),
(482,249,cs),
(482,269.785,o),
(474.364,99.185,o),
(469,67,cs),
(466.333,44.333,o),
(451.667,36,o),
(429,36,cs),
(188,36,l),
(188,766,ls),
(188,790.072,o),
(238.938,791,o),
(255,791,cs),
(271,791,o),
(292,791.333,o),
(292,806,cs),
(292,811.333,o),
(288.833,815.167,o),
(282.5,817.5,cs),
(276.167,819.833,o),
(262.333,821,o),
(241,821,cs),
(59,821,ls),
(47,821,o),
(22,820.667,o),
(22,806,cs),
(22,792.667,o),
(44.333,791,o),
(59,791,cs),
(84.169,791,o),
(141,788.04,o),
(141,754,cs),
(141,712.212,o),
(142.814,668.249,o),
(144,622,cs),
(145.333,570,o),
(147,505.333,o),
(147,416,cs),
(147,276.52,o),
(145,132.592,o),
(145,58,cs),
(145,28.268,o),
(92.764,28,o),
(53,28,cs),
(29.667,28,o),
(18,22.333,o),
(18,11,cs),
(18,7.667,o),
(19.167,5,o),
(21.5,3,cs),
(23.833,1,o),
(30.667,0,o),
(42,0,cs)
);
},
{
closed = 1;
nodes = (
(364.333,319,o),
(380,339,o),
(380,359,cs),
(380,377.667,o),
(367.667,397,o),
(337,397,cs),
(305,397,o),
(293,374.333,o),
(293,357,cs),
(293,339.667,o),
(304.333,319,o),
(335,319,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 7 1 6 1 7 6 104 9 1 2 6 8 6 2 96 0 0 0 1 7 0 1 91 5 1 3 3 4 83 0 4 4 12 67 0 6 6 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 7 1 6 1 7 6 104 9 1 2 6 8 6 2 96 0 0 0 1 7 0 1 91 5 1 3 3 4 83 0 4 4 14 67 0 6 6 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
14 12 76 73 64 62 53 51 47 44 40 37 33 30 12 79 14 79 36 34 10 17
CALL[ ]	/* CallFunction */";
};
width = 541;
}
);
note = Ldot;
unicode = 319;
},
{
glyphname = Lslash;
kernLeft = B;
kernRight = L;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(38.333,71.667,o),
(16,66,o),
(16,34,cs),
(16,24.667,o),
(19.333,16.667,o),
(26,10,cs),
(32.667,3.333,o),
(47.333,0,o),
(70,0,cs),
(509,0,ls),
(529,0,o),
(539.333,6.333,o),
(542,29,cs),
(552.033,167.457,o),
(557,249.128,o),
(557,274,cs),
(557,301.333,o),
(544.333,315,o),
(519,315,cs),
(480.333,315,o),
(476,295.667,o),
(476,265,cs),
(476,295.151,o),
(468.553,137.214,o),
(463,115,cs),
(457.667,92.333,o),
(441.667,84,o),
(423,84,cs),
(233,84,l),
(233,387,l),
(357,434,ls),
(379.667,442,o),
(386,460.333,o),
(386,475,cs),
(386,497.667,o),
(368.333,518,o),
(347,518,cs),
(341,518,o),
(327.333,514.333,o),
(306,507,cs),
(284.667,499.667,o),
(260.333,491,o),
(233,481,c),
(233,720,ls),
(233,732.667,o),
(237.167,742.333,o),
(245.5,749,cs),
(253.833,755.667,o),
(272,759,o),
(300,759,cs),
(316,759,o),
(338,764.667,o),
(338,790,cs),
(338,812.667,o),
(329.667,821,o),
(287,821,cs),
(67,821,ls),
(44.333,821,o),
(25,814,o),
(25,786,cs),
(25,756.667,o),
(41.667,750.333,o),
(67,749,cs),
(94.806,749,o),
(135,737.822,o),
(135,712,cs),
(135,629.008,o),
(141,547.182,o),
(141,446,c),
(67,419,ls),
(47,412.333,o),
(41,395.667,o),
(41,381,cs),
(41,363.667,o),
(57.333,339,o),
(84,339,cs),
(87.333,339,o),
(94.167,340.333,o),
(104.5,343,cs),
(114.833,345.667,o),
(127,349.667,o),
(141,355,c),
(141,233.329,o),
(139,175.338,o),
(139,126,cs),
(139,95.333,o),
(114.333,81,o),
(81,77,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
55 45 18 8 4 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 4 1 0 1 4 0 104 0 0 6 1 0 6 102 0 6 5 1 6 5 102 3 1 1 1 2 83 0 2 2 12 67 0 5 5 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 3 4 3 1 96 0 4 0 3 4 0 102 0 0 6 3 0 6 102 0 6 5 3 6 5 102 0 3 3 2 83 0 2 2 12 67 0 5 5 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 1 3 4 3 1 96 0 4 0 3 4 0 102 0 0 6 3 0 6 102 0 6 5 3 6 5 102 0 3 3 2 83 0 2 2 14 67 0 5 5 7 84 0 7 7 13 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
56 41 39 37 36 52 47 42 8 23
CALL[ ]	/* CallFunction */";
};
width = 586;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(300.055,442,o),
(260.061,439,o),
(198,439,cs),
(174,439,o),
(149.5,439.333,o),
(124.5,440,cs),
(99.5,440.667,o),
(80.333,441,o),
(67,441,cs),
(44.333,441,o),
(35,422.333,o),
(35,409,cs),
(35,395.667,o),
(49.667,376,o),
(67,376,cs),
(149.869,376,o),
(257.207,377,o),
(346,377,cs),
(375.333,377,o),
(383,401.333,o),
(383,412,cs),
(383,426.667,o),
(370,442,o),
(358,442,cs)
);
},
{
closed = 1;
nodes = (
(46.333,48,o),
(34,44,o),
(34,24,cs),
(34,17.333,o),
(35.333,0,o),
(58,0,cs),
(496,0,ls),
(516,0,o),
(526.333,6.333,o),
(529,29,c),
(527.637,11.275,o),
(545,233.659,o),
(545,284,cs),
(545,302.667,o),
(529.667,309,o),
(511,309,cs),
(481.667,309,o),
(478,289.667,o),
(478,259,cs),
(478,281.484,o),
(469.831,121.155,o),
(465,97,cs),
(461,74.333,o),
(445,66,o),
(425,66,cs),
(214,66,l),
(214,746,ls),
(214,770.148,o),
(273.794,771,o),
(291,771,cs),
(307,771,o),
(328,774.667,o),
(328,796,cs),
(328,805.333,o),
(324.833,811.833,o),
(318.5,815.5,cs),
(312.167,819.167,o),
(298.333,821,o),
(277,821,cs),
(75,821,ls),
(63,821,o),
(38,818.667,o),
(38,796,cs),
(38,773.333,o),
(60.333,771,o),
(75,771,cs),
(95.885,771,o),
(137,767.595,o),
(137,734,cs),
(137,693.273,o),
(138.841,651.817,o),
(140,609.5,cs),
(141.333,560.833,o),
(143,500,o),
(143,416,cs),
(143,283.744,o),
(141,148.593,o),
(141,78,cs),
(141,49.821,o),
(102.856,48,o),
(69,48,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 7 1 6 1 7 6 104 10 1 2 6 8 6 2 96 5 1 3 3 4 83 0 4 4 12 67 0 1 1 0 83 9 1 0 0 15 67 0 6 6 8 84 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 1 6 1 7 6 104 10 1 2 6 8 6 2 96 9 1 0 0 1 7 0 1 91 5 1 3 3 4 83 0 4 4 12 67 0 6 6 8 84 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 7 1 6 1 7 6 104 10 1 2 6 8 6 2 96 9 1 0 0 1 7 0 1 91 5 1 3 3 4 83 0 4 4 14 67 0 6 6 8 84 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
27 25 1 0 89 86 77 75 66 64 60 57 53 50 46 44 25 93 27 93 12 5 0 24 1 16 11 15
CALL[ ]	/* CallFunction */";
};
width = 567;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(468,0,ls),
(488,0,o),
(498.333,6.333,o),
(501,29,cs),
(505.062,81.812,o),
(517,243.053,o),
(517,279,cs),
(517,293.667,o),
(504.667,299,o),
(498,299,cs),
(490,299,o),
(485,294.5,o),
(483,285.5,cs),
(481,276.5,o),
(480,264.333,o),
(480,249,cs),
(480,269.785,o),
(472.364,99.185,o),
(467,67,cs),
(464.333,44.333,o),
(449.667,36,o),
(427,36,cs),
(186,36,l),
(186,391,l),
(210.667,391,o),
(234.667,391.167,o),
(258,391.5,cs),
(281.333,391.833,o),
(301.667,392,o),
(319,392,cs),
(340.333,392,o),
(346,405.333,o),
(346,412,cs),
(346,418.667,o),
(337.667,427,o),
(331,427,cs),
(309.667,427,o),
(288.5,426.5,o),
(267.5,425.5,cs),
(246.5,424.5,o),
(219.333,424,o),
(186,424,c),
(186,766,ls),
(186,790.072,o),
(236.938,791,o),
(253,791,cs),
(269,791,o),
(290,791.333,o),
(290,806,cs),
(290,811.333,o),
(286.833,815.167,o),
(280.5,817.5,cs),
(274.167,819.833,o),
(260.333,821,o),
(239,821,cs),
(57,821,ls),
(45,821,o),
(20,820.667,o),
(20,806,cs),
(20,792.667,o),
(42.333,791,o),
(57,791,cs),
(82.169,791,o),
(139,788.04,o),
(139,754,cs),
(139,712.156,o),
(140.819,668.862,o),
(142,624,cs),
(143.333,573.333,o),
(145,510.667,o),
(145,424,c),
(124.333,424,o),
(104.5,424.333,o),
(85.5,425,cs),
(66.5,425.667,o),
(51.333,426,o),
(40,426,cs),
(25.333,426,o),
(18,415.667,o),
(18,409,cs),
(18,402.333,o),
(28,391,o),
(40,391,cs),
(145,391,l),
(145,257.387,o),
(143,125.702,o),
(143,58,cs),
(143,28.268,o),
(90.764,28,o),
(51,28,cs),
(27.667,28,o),
(16,22.333,o),
(16,11,cs),
(16,7.667,o),
(17.167,5,o),
(19.5,3,cs),
(21.833,1,o),
(28.667,0,o),
(40,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 9 1 8 1 9 8 104 11 1 0 8 10 8 0 96 5 1 3 3 4 83 0 4 4 12 67 7 1 1 1 2 83 6 1 2 2 15 67 0 8 8 10 83 0 10 10 13 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 9 1 8 1 9 8 104 11 1 0 8 10 8 0 96 6 1 2 7 1 1 9 2 1 91 5 1 3 3 4 83 0 4 4 12 67 0 8 8 10 83 0 10 10 13 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 9 1 8 1 9 8 104 11 1 0 8 10 8 0 96 6 1 2 7 1 1 9 2 1 91 5 1 3 3 4 83 0 4 4 14 67 0 8 8 10 83 0 10 10 13 10 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
2 0 87 84 75 73 64 62 61 57 53 49 45 42 38 35 31 28 20 16 12 10 0 90 2 90 12 15
CALL[ ]	/* CallFunction */";
};
width = 540;
}
);
note = Lslash;
unicode = 321;
},
{
glyphname = M;
kernLeft = M;
kernRight = M;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1016.333,709.667,o),
(1032,728,o),
(1032,752,cs),
(1032,777.333,o),
(1010.667,781,o),
(980,781,cs),
(840,781,ls),
(758.454,781,o),
(749.69,779.071,o),
(736,738,cs),
(714.767,670.44,o),
(677.155,558.315,o),
(632,425,cs),
(586.812,291.587,o),
(547.059,177.393,o),
(522,108,c),
(491.3,177.074,o),
(439.282,299.533,o),
(381,442,cs),
(327.223,573.454,o),
(278.273,695.182,o),
(258,756,cs),
(246,792,o),
(231.333,801,o),
(214,801,cs),
(116,801,ls),
(76,801,o),
(48,798.667,o),
(32,794,cs),
(16,789.333,o),
(8,779.667,o),
(8,765,cs),
(8,734.427,o),
(38.755,727.386,o),
(70.5,724.5,cs),
(101.596,721.673,o),
(133,717.023,o),
(133,686,cs),
(133,634,o),
(133.5,584.167,o),
(134.5,536.5,cs),
(135.5,488.833,o),
(136,437.667,o),
(136,383,cs),
(136,316.333,o),
(135.5,274.333,o),
(133.5,237,cs),
(131.721,203.8,o),
(129.154,162.251,o),
(128,123,cs),
(125.333,81.667,o),
(117,66.667,o),
(93,64,cs),
(53,58.667,o),
(24,54.667,o),
(24,28,cs),
(24,5.333,o),
(34,0,o),
(58,0,cs),
(311,0,ls),
(341.667,0,o),
(351,14.333,o),
(351,29,cs),
(351,59.667,o),
(327.667,63,o),
(301,63,cs),
(228,63,l),
(228,607,l),
(247.988,547.036,o),
(292.569,438.452,o),
(338.5,329,cs),
(380.363,229.241,o),
(437.168,89.29,o),
(458,30,cs),
(466.691,8.273,o),
(479.49,-28,o),
(515,-28,cs),
(545.667,-28,o),
(565,-19.333,o),
(577,18,cs),
(592.533,66.325,o),
(680.037,289.08,o),
(778,580,c),
(778,84,ls),
(778,38.667,o),
(763,30,o),
(735,26,cs),
(699,20.667,o),
(677,13,o),
(677,-7,cs),
(677,-34.778,o),
(683.267,-41,o),
(728,-41,cs),
(969,-41,ls),
(1002.333,-41,o),
(1009,-25.667,o),
(1009,-7,cs),
(1009,15.667,o),
(995,22,o),
(959,22,cs),
(875,22,l),
(875,91.919,o),
(870,227.904,o),
(870,380,cs),
(870,526.248,o),
(874,577.977,o),
(874,652,cs),
(874,677.333,o),
(878.333,696.333,o),
(905,699,cs),
(919.667,701.667,o),
(933.5,703.333,o),
(946.5,704,cs),
(959.5,704.667,o),
(973,705.667,o),
(987,707,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
103 56 36 3 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 7 0 0 4 7 0 91 0 1 3 1 2 1 2 87 0 6 6 14 67 0 4 4 5 84 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 7 0 0 4 7 0 91 0 1 0 2 1 2 87 0 6 6 14 67 0 4 4 5 84 0 5 5 13 67 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 6 7 6 106 0 7 0 0 4 7 0 91 0 1 0 2 1 2 87 0 4 4 5 84 0 5 5 13 67 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 6 7 6 106 0 3 5 2 5 3 2 104 0 7 0 0 4 7 0 91 0 1 0 2 1 2 87 0 4 4 5 84 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
117 113 94 91 66 63 59 57 45 43 52 46 17 8 18
CALL[ ]	/* CallFunction */";
};
width = 1057;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(1008,735.667,o),
(1016.833,737.667,o),
(1024.5,739,cs),
(1032.167,740.333,o),
(1036,746.667,o),
(1036,758,cs),
(1036,780.667,o),
(1012.333,781,o),
(991,781,cs),
(843,781,ls),
(774.837,781,o),
(776.576,778.152,o),
(757,739,c),
(731.969,669.684,o),
(688.502,550.048,o),
(639,408,cs),
(593.103,276.297,o),
(540.792,134.236,o),
(518,74,c),
(493.762,148.734,o),
(437.025,286.711,o),
(379.5,428,cs),
(314.474,587.713,o),
(270.27,696.765,o),
(251,761,cs),
(240.333,797,o),
(232.667,801,o),
(214,801,cs),
(89,801,ls),
(50.333,801,o),
(31,797.667,o),
(31,775,cs),
(31,731.437,o),
(137,772.537,o),
(137,712,cs),
(137,658,o),
(137.5,604,o),
(138.5,550,cs),
(139.5,496,o),
(140,440.333,o),
(140,383,cs),
(140,283,o),
(137.667,184.667,o),
(131,94,c),
(131,47.509,o),
(97.959,48,o),
(83,48,cs),
(71,48,o),
(54,45.667,o),
(54,23,cs),
(54,3,o),
(76.333,0,o),
(95,0,cs),
(321,0,ls),
(334.333,0,o),
(341,11,o),
(341,23,cs),
(341,45.667,o),
(325.667,51,o),
(311,51,cs),
(211,51,l),
(211,650,l),
(232.161,590.363,o),
(278.722,478.981,o),
(335.5,344,cs),
(396.041,200.073,o),
(438.037,97.329,o),
(468,16,cs),
(472.921,3.698,o),
(486.362,-28,o),
(515,-28,cs),
(533.667,-28,o),
(547,-16.333,o),
(555,7,cs),
(567.9,45.699,o),
(598.15,126.025,o),
(643,249,cs),
(683.286,359.462,o),
(730.278,486.892,o),
(782,632,c),
(782,53,ls),
(782,8.271,o),
(760.503,7,o),
(743,7,cs),
(731,7,o),
(714,5,o),
(714,-15,cs),
(714,-37.667,o),
(736.333,-41,o),
(755,-41,cs),
(980,-41,ls),
(993.333,-41,o),
(1000,-32.333,o),
(1000,-15,cs),
(1000,5,o),
(984.667,10,o),
(970,10,cs),
(858,10,l),
(858,62.578,o),
(853,243.352,o),
(853,380,cs),
(853,454,o),
(853.667,515,o),
(855,563,cs),
(856.333,611,o),
(857,649.333,o),
(857,678,cs),
(857,699.333,o),
(858.667,722.333,o),
(888,725,cs),
(908.667,727,o),
(927,728.333,o),
(943,729,cs),
(959,729.667,o),
(977.333,731,o),
(998,733,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
97 72 52 33 4 5 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 9 0 0 5 9 0 91 3 1 1 0 2 1 2 87 0 8 8 14 67 7 1 5 5 6 84 0 6 6 13 67 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 8 9 8 106 0 9 0 0 5 9 0 91 3 1 1 0 2 1 2 87 7 1 5 5 6 84 0 6 6 13 67 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 8 9 8 106 0 4 6 2 6 4 2 104 0 9 0 0 5 9 0 91 3 1 1 0 2 1 2 87 7 1 5 5 6 84 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
111 108 88 85 52 52 44 43 36 51 44 17 10 23
CALL[ ]	/* CallFunction */";
};
width = 1033;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(946,-41,ls),
(959.333,-41,o),
(966,-36.667,o),
(966,-28,cs),
(966,-17.333,o),
(950.667,-10,o),
(936,-10,cs),
(834,-10,l),
(834,44.357,o),
(829,233.605,o),
(829,380,cs),
(829,458.667,o),
(829.667,523.667,o),
(831,575,cs),
(832.333,626.333,o),
(833,667.333,o),
(833,698,cs),
(833,719.333,o),
(834.667,742.333,o),
(864,745,cs),
(884.667,747,o),
(903,748.333,o),
(919,749,cs),
(935,749.667,o),
(953.333,751,o),
(974,753,cs),
(992.667,755,o),
(1002,760,o),
(1002,768,cs),
(1002,781.333,o),
(988.333,781,o),
(967,781,cs),
(831,781,ls),
(784.168,781,o),
(788.235,776.057,o),
(775,739,cs),
(748.73,662.211,o),
(695.56,533.43,o),
(641,394,cs),
(586.278,254.155,o),
(532.262,123.731,o),
(504,45,c),
(479.721,123.908,o),
(417.808,267.287,o),
(354.5,414,cs),
(293.838,554.582,o),
(231.896,702.422,o),
(213,761,cs),
(202.333,797,o),
(194.667,801,o),
(176,801,cs),
(65,801,ls),
(47.219,801,o),
(17,798.799,o),
(17,781,cs),
(17,751.056,o),
(143,785.466,o),
(143,738,cs),
(143,680.667,o),
(143.5,622.333,o),
(144.5,563,cs),
(145.5,503.667,o),
(146,443.667,o),
(146,383,cs),
(146,275,o),
(143.667,170,o),
(137,74,c),
(137,28.169,o),
(96.437,28,o),
(69,28,cs),
(57,28,o),
(40,25,o),
(40,13,cs),
(40,2.333,o),
(62.333,0,o),
(81,0,cs),
(293,0,ls),
(306.333,0,o),
(313,4.333,o),
(313,13,cs),
(313,23.667,o),
(297.667,31,o),
(283,31,cs),
(187,31,l),
(187,704,l),
(211.775,637.933,o),
(269.348,505.862,o),
(330.5,360.5,cs),
(404.205,185.299,o),
(446.123,88.672,o),
(482,-7,cs),
(486.667,-21,o),
(493,-28,o),
(501,-28,cs),
(511.667,-28,o),
(519.333,-17.333,o),
(522,-12,cs),
(538.495,22.64,o),
(586.58,140.236,o),
(630,251.5,cs),
(684.308,390.664,o),
(723.086,493.704,o),
(788,662,c),
(788,33,ls),
(788,-14.694,o),
(749.753,-13,o),
(724,-13,cs),
(712,-13,o),
(695,-16,o),
(695,-28,cs),
(695,-38.667,o),
(717.333,-41,o),
(736,-41,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
98 52 33 3 5 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 10 0 0 5 10 0 91 3 1 1 0 2 1 2 87 0 8 8 9 83 0 9 9 14 67 7 1 5 5 6 83 0 6 6 13 67 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 9 0 8 0 9 8 91 0 10 0 0 5 10 0 91 3 1 1 0 2 1 2 87 7 1 5 5 6 83 0 6 6 13 67 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 4 1 2 1 4 2 104 0 9 0 8 0 9 8 91 0 10 0 0 5 10 0 91 3 1 1 0 2 1 2 87 7 1 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
112 109 89 85 27 52 51 41 45 52 51 44 17 11 24
CALL[ ]	/* CallFunction */";
};
width = 999;
}
);
note = M;
unicode = 77;
},
{
glyphname = N;
kernLeft = B;
kernRight = Eng;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(610.667,-1.667,o),
(632.667,-11,o),
(654,-11,cs),
(688.667,-11,o),
(703,15,o),
(703,47,cs),
(703,149.555,o),
(701,268.514,o),
(701,368,cs),
(701,514.859,o),
(705,574.017,o),
(705,712,cs),
(705,722.667,o),
(710.833,729.833,o),
(722.5,733.5,cs),
(734.167,737.167,o),
(756.667,740.667,o),
(790,744,cs),
(815.333,746.667,o),
(829,752,o),
(829,776,cs),
(829,786.667,o),
(825.333,794,o),
(818,798,cs),
(810.667,802,o),
(796.333,804,o),
(775,804,cs),
(548,804,ls),
(516,804,o),
(497,795.333,o),
(497,774,cs),
(497,747.333,o),
(516.333,740.667,o),
(539,738,cs),
(567.667,735.333,o),
(586.667,732,o),
(596,728,cs),
(605.333,724,o),
(610,716.333,o),
(610,705,cs),
(610,179,l),
(596.687,215.136,o),
(538.222,325.179,o),
(460,467.5,cs),
(381.306,610.68,o),
(316.539,729.63,o),
(288,781,cs),
(278.667,797.667,o),
(271.667,808.5,o),
(267,813.5,cs),
(262.333,818.5,o),
(256,821,o),
(248,821,cs),
(118,821,ls),
(52.08,821,o),
(26,814.784,o),
(26,791,cs),
(26,736.481,o),
(138,761.736,o),
(138,726,cs),
(138,674,o),
(138.5,618.5,o),
(139.5,559.5,cs),
(140.5,500.5,o),
(141,443.333,o),
(141,388,cs),
(141,340,o),
(140,294,o),
(138,250,cs),
(136,206,o),
(135,162.333,o),
(135,119,cs),
(135,80.333,o),
(120.667,72,o),
(94,68,cs),
(48.667,61.333,o),
(29,57.333,o),
(29,32,cs),
(29,5.333,o),
(50,0,o),
(70,0,cs),
(335,0,ls),
(351,0,o),
(365,9.333,o),
(365,32,cs),
(365,57.333,o),
(340.333,63,o),
(315,63,cs),
(233,63,l),
(233,655,l),
(596,25,l),
(596,25,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
45 0 2 0 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 2 2 12 67 0 3 3 14 67 0 0 0 1 84 4 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 2 2 12 67 0 3 3 14 67 0 0 0 1 84 0 1 1 13 67 0 4 4 24 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 2 2 12 67 0 0 0 1 84 0 1 1 13 67 0 3 3 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 2 2 14 67 0 0 0 1 84 0 1 1 13 67 0 3 3 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
79 77 57 54 36 33 52 33 5 17
CALL[ ]	/* CallFunction */";
};
width = 849;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(613.667,-6,o),
(629.333,-11,o),
(648,-11,cs),
(669.333,-11,o),
(683,2.333,o),
(683,21,cs),
(683,129.897,o),
(681,262.244,o),
(681,368,cs),
(681,479.666,o),
(682.949,616.199,o),
(685,729,cs),
(685,752.855,o),
(756.51,754,o),
(776,754,cs),
(792,754,o),
(813,758.333,o),
(813,781,cs),
(813,789.667,o),
(809.833,795.667,o),
(803.5,799,cs),
(797.167,802.333,o),
(783.333,804,o),
(762,804,cs),
(556,804,ls),
(531.333,804,o),
(519,796.333,o),
(519,781,cs),
(519,758.333,o),
(541.333,754,o),
(556,754,cs),
(578.926,754,o),
(611,752.569,o),
(611,731,cs),
(611,132,l),
(593.871,170.065,o),
(533.247,287.816,o),
(451.5,441.5,cs),
(378.098,579.496,o),
(308.949,706.096,o),
(269,781,cs),
(259.667,797.667,o),
(252.667,808.5,o),
(248,813.5,cs),
(243.333,818.5,o),
(237,821,o),
(229,821,cs),
(91,821,ls),
(52.333,821,o),
(33,815.333,o),
(33,804,cs),
(33,750.888,o),
(139,778.93,o),
(139,738,cs),
(139,684,o),
(139.5,626.5,o),
(140.5,565.5,cs),
(141.5,504.5,o),
(142,445.333,o),
(142,388,cs),
(142,338,o),
(140.833,287.833,o),
(138.5,237.5,cs),
(136.167,187.167,o),
(134.333,139.333,o),
(133,94,cs),
(130.411,49.986,o),
(103.607,48,o),
(85,48,cs),
(73,48,o),
(56,42.333,o),
(56,25,cs),
(56,3.667,o),
(78.333,0,o),
(97,0,cs),
(323,0,ls),
(336.333,0,o),
(343,8.333,o),
(343,25,cs),
(343,45,o),
(327.667,51,o),
(313,51,cs),
(213,51,l),
(213,708,l),
(607,6,l),
(607,6,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
43 0 2 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 7 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 5 6 1 4 0 5 4 91 0 3 3 12 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 5 6 1 4 0 5 4 91 0 3 3 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
47 52 51 61 63 52 51 33 8 23
CALL[ ]	/* CallFunction */";
};
width = 824;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(640.667,-11,o),
(655,-8.667,o),
(655,6,cs),
(655,100.076,o),
(653,180.328,o),
(653,368,cs),
(653,488.688,o),
(654.943,629.697,o),
(657,749,cs),
(657,773.008,o),
(719.348,774,o),
(738,774,cs),
(754,774,o),
(775,774.333,o),
(775,789,cs),
(775,794.333,o),
(771.833,798.167,o),
(765.5,800.5,cs),
(759.167,802.833,o),
(745.333,804,o),
(724,804,cs),
(533,804,ls),
(521,804,o),
(496,803.667,o),
(496,789,cs),
(496,775.667,o),
(518.333,774,o),
(533,774,cs),
(563.112,774,o),
(613,773.669,o),
(613,751,cs),
(613,80,l),
(575.164,150.942,o),
(511.154,258.64,o),
(421.5,414.5,cs),
(379.001,488.383,o),
(248.586,708.961,o),
(211,781,cs),
(201.667,797.667,o),
(194.667,808.5,o),
(190,813.5,cs),
(185.333,818.5,o),
(179,821,o),
(171,821,cs),
(63,821,ls),
(51.587,821,o),
(15,819.788,o),
(15,809,cs),
(15,778.543,o),
(141,806.053,o),
(141,758,cs),
(141,700.667,o),
(141.5,639.833,o),
(142.5,575.5,cs),
(143.5,511.167,o),
(144,448.667,o),
(144,388,cs),
(144,280,o),
(141.667,170,o),
(135,74,c),
(135,28.169,o),
(94.437,28,o),
(67,28,cs),
(55,28,o),
(38,25,o),
(38,13,cs),
(38,2.333,o),
(60.333,0,o),
(79,0,cs),
(291,0,ls),
(304.333,0,o),
(311,4.333,o),
(311,13,cs),
(311,23.667,o),
(295.667,31,o),
(281,31,cs),
(185,31,l),
(185,738,l),
(610,6,ls),
(618,-7.333,o),
(624.667,-11,o),
(634,-11,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
48 0 2 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 5 6 1 4 0 5 4 91 0 3 3 12 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 5 6 1 4 0 5 4 91 0 3 3 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
86 84 69 66 62 59 55 52 37 33 52 51 33 8 18
CALL[ ]	/* CallFunction */";
};
width = 788;
}
);
note = N;
unicode = 78;
},
{
glyphname = Nacute;
kernLeft = B;
kernRight = Eng;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(517,953.333,o),
(502.667,972,o),
(476,972,cs),
(437.785,972,o),
(369,899.008,o),
(369,872,cs),
(369,856,o),
(384,841,o),
(404,841,cs),
(440.578,841,o),
(517,897.207,o),
(517,936,cs)
);
},
{
closed = 1;
nodes = (
(610.667,-1.667,o),
(632.667,-11,o),
(654,-11,cs),
(688.667,-11,o),
(703,15,o),
(703,47,cs),
(703,149.555,o),
(701,268.514,o),
(701,368,cs),
(701,514.859,o),
(705,574.017,o),
(705,712,cs),
(705,722.667,o),
(710.833,729.833,o),
(722.5,733.5,cs),
(734.167,737.167,o),
(756.667,740.667,o),
(790,744,cs),
(815.333,746.667,o),
(829,752,o),
(829,776,cs),
(829,786.667,o),
(825.333,794,o),
(818,798,cs),
(810.667,802,o),
(796.333,804,o),
(775,804,cs),
(548,804,ls),
(516,804,o),
(497,795.333,o),
(497,774,cs),
(497,747.333,o),
(516.333,740.667,o),
(539,738,cs),
(567.667,735.333,o),
(586.667,732,o),
(596,728,cs),
(605.333,724,o),
(610,716.333,o),
(610,705,cs),
(610,179,l),
(596.687,215.136,o),
(538.222,325.179,o),
(460,467.5,cs),
(381.306,610.68,o),
(316.539,729.63,o),
(288,781,cs),
(278.667,797.667,o),
(271.667,808.5,o),
(267,813.5,cs),
(262.333,818.5,o),
(256,821,o),
(248,821,cs),
(118,821,ls),
(52.08,821,o),
(26,814.784,o),
(26,791,cs),
(26,736.481,o),
(138,761.736,o),
(138,726,cs),
(138,674,o),
(138.5,618.5,o),
(139.5,559.5,cs),
(140.5,500.5,o),
(141,443.333,o),
(141,388,cs),
(141,340,o),
(140,294,o),
(138,250,cs),
(136,206,o),
(135,162.333,o),
(135,119,cs),
(135,80.333,o),
(120.667,72,o),
(94,68,cs),
(48.667,61.333,o),
(29,57.333,o),
(29,32,cs),
(29,5.333,o),
(50,0,o),
(70,0,cs),
(335,0,ls),
(351,0,o),
(365,9.333,o),
(365,32,cs),
(365,57.333,o),
(340.333,63,o),
(315,63,cs),
(233,63,l),
(233,655,l),
(596,25,l),
(596,25,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
61 16 2 2 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 1 106 0 0 4 0 106 0 4 4 12 67 0 5 5 14 67 0 2 2 3 84 6 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 0 1 106 0 0 4 0 106 0 4 4 12 67 0 5 5 14 67 0 2 2 3 84 0 3 3 13 67 0 6 6 24 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 0 1 106 0 0 4 0 106 0 4 4 12 67 0 2 2 3 84 0 3 3 13 67 0 5 5 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 1 0 1 106 0 0 4 0 106 0 4 4 14 67 0 2 2 3 84 0 3 3 13 67 0 5 5 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
95 93 73 70 52 49 52 35 38 36 7 19
CALL[ ]	/* CallFunction */";
};
width = 849;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(491,959.667,o),
(479,972,o),
(459,972,cs),
(429.753,972,o),
(353,903.873,o),
(353,877,cs),
(353,863.667,o),
(362.333,854,o),
(377,854,cs),
(403.12,854,o),
(491,908.21,o),
(491,941,cs)
);
},
{
closed = 1;
nodes = (
(613.667,-6,o),
(629.333,-11,o),
(648,-11,cs),
(669.333,-11,o),
(683,2.333,o),
(683,21,cs),
(683,129.897,o),
(681,262.244,o),
(681,368,cs),
(681,479.666,o),
(682.949,616.199,o),
(685,729,cs),
(685,752.855,o),
(756.51,754,o),
(776,754,cs),
(792,754,o),
(813,758.333,o),
(813,781,cs),
(813,789.667,o),
(809.833,795.667,o),
(803.5,799,cs),
(797.167,802.333,o),
(783.333,804,o),
(762,804,cs),
(556,804,ls),
(531.333,804,o),
(519,796.333,o),
(519,781,cs),
(519,758.333,o),
(541.333,754,o),
(556,754,cs),
(578.926,754,o),
(611,752.569,o),
(611,731,cs),
(611,132,l),
(593.871,170.065,o),
(533.247,287.816,o),
(451.5,441.5,cs),
(378.098,579.496,o),
(308.949,706.096,o),
(269,781,cs),
(259.667,797.667,o),
(252.667,808.5,o),
(248,813.5,cs),
(243.333,818.5,o),
(237,821,o),
(229,821,cs),
(91,821,ls),
(52.333,821,o),
(33,815.333,o),
(33,804,cs),
(33,750.888,o),
(139,778.93,o),
(139,738,cs),
(139,684,o),
(139.5,626.5,o),
(140.5,565.5,cs),
(141.5,504.5,o),
(142,445.333,o),
(142,388,cs),
(142,338,o),
(140.833,287.833,o),
(138.5,237.5,cs),
(136.167,187.167,o),
(134.333,139.333,o),
(133,94,cs),
(130.411,49.986,o),
(103.607,48,o),
(85,48,cs),
(73,48,o),
(56,42.333,o),
(56,25,cs),
(56,3.667,o),
(78.333,0,o),
(97,0,cs),
(323,0,ls),
(336.333,0,o),
(343,8.333,o),
(343,25,cs),
(343,45,o),
(327.667,51,o),
(313,51,cs),
(213,51,l),
(213,708,l),
(607,6,l),
(607,6,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
59 16 2 2 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 1 106 0 0 5 0 106 0 5 5 12 67 8 1 6 6 7 83 0 7 7 14 67 4 1 2 2 3 84 0 3 3 13 67 0 9 9 24 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 1 0 1 106 0 0 5 0 106 0 5 5 12 67 8 1 6 6 7 83 0 7 7 14 67 4 1 2 2 3 84 9 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 1 106 0 0 5 0 106 0 5 5 12 67 8 1 6 6 7 83 0 7 7 14 67 4 1 2 2 3 84 0 3 3 13 67 0 9 9 24 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 5 0 106 0 7 8 1 6 2 7 6 91 0 5 5 12 67 4 1 2 2 3 84 0 3 3 13 67 0 9 9 24 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 5 0 106 0 7 8 1 6 2 7 6 91 0 5 5 14 67 4 1 2 2 3 84 0 3 3 13 67 0 9 9 24 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
96 94 52 51 61 63 52 51 35 38 36 10 24
CALL[ ]	/* CallFunction */";
};
width = 824;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(640.667,-11,o),
(655,-8.667,o),
(655,6,cs),
(655,100.076,o),
(653,180.328,o),
(653,368,cs),
(653,488.688,o),
(654.943,629.697,o),
(657,749,cs),
(657,773.008,o),
(719.348,774,o),
(738,774,cs),
(754,774,o),
(775,774.333,o),
(775,789,cs),
(775,794.333,o),
(771.833,798.167,o),
(765.5,800.5,cs),
(759.167,802.833,o),
(745.333,804,o),
(724,804,cs),
(533,804,ls),
(521,804,o),
(496,803.667,o),
(496,789,cs),
(496,775.667,o),
(518.333,774,o),
(533,774,cs),
(563.112,774,o),
(613,773.669,o),
(613,751,cs),
(613,80,l),
(575.164,150.942,o),
(511.154,258.64,o),
(421.5,414.5,cs),
(379.001,488.383,o),
(248.586,708.961,o),
(211,781,cs),
(201.667,797.667,o),
(194.667,808.5,o),
(190,813.5,cs),
(185.333,818.5,o),
(179,821,o),
(171,821,cs),
(63,821,ls),
(51.587,821,o),
(15,819.788,o),
(15,809,cs),
(15,778.543,o),
(141,806.053,o),
(141,758,cs),
(141,700.667,o),
(141.5,639.833,o),
(142.5,575.5,cs),
(143.5,511.167,o),
(144,448.667,o),
(144,388,cs),
(144,280,o),
(141.667,170,o),
(135,74,c),
(135,28.169,o),
(94.437,28,o),
(67,28,cs),
(55,28,o),
(38,25,o),
(38,13,cs),
(38,2.333,o),
(60.333,0,o),
(79,0,cs),
(291,0,ls),
(304.333,0,o),
(311,4.333,o),
(311,13,cs),
(311,23.667,o),
(295.667,31,o),
(281,31,cs),
(185,31,l),
(185,738,l),
(610,6,ls),
(618,-7.333,o),
(624.667,-11,o),
(634,-11,cs)
);
},
{
closed = 1;
nodes = (
(356.382,875,o),
(454,929.523,o),
(454,950,cs),
(454,968.667,o),
(445.667,972,o),
(435,972,cs),
(415.504,972,o),
(330,911.234,o),
(330,886,cs),
(330,878.667,o),
(332.667,875,o),
(338,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
63 15 2 2 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 1 106 0 0 5 0 106 0 5 5 12 67 8 1 6 6 7 83 0 7 7 14 67 4 1 2 2 3 84 0 3 3 13 67 0 9 9 24 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 5 0 106 0 7 8 1 6 2 7 6 91 0 5 5 12 67 4 1 2 2 3 84 0 3 3 13 67 0 9 9 24 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 5 0 106 0 7 8 1 6 2 7 6 91 0 5 5 14 67 4 1 2 2 3 84 0 3 3 13 67 0 9 9 24 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
101 99 84 81 77 74 70 67 52 48 52 51 35 37 36 10 20
CALL[ ]	/* CallFunction */";
};
width = 788;
}
);
note = Nacute;
unicode = 323;
},
{
glyphname = Ncaron;
kernLeft = B;
kernRight = Eng;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(546.41,972,o),
(490.555,959.889,o),
(432,922,c),
(391.967,947.904,o),
(329.991,972,o),
(313,972,cs),
(303.667,972,o),
(300,964.667,o),
(300,958,cs),
(300,931.333,o),
(328.333,900.5,o),
(359,874.5,cs),
(386.066,851.553,o),
(420.906,830,o),
(432,830,cs),
(455.27,830,o),
(565,908.718,o),
(565,951,cs),
(565,960.333,o),
(562.667,972,o),
(552,972,cs)
);
},
{
closed = 1;
nodes = (
(610.667,-1.667,o),
(632.667,-11,o),
(654,-11,cs),
(688.667,-11,o),
(703,15,o),
(703,47,cs),
(703,149.555,o),
(701,268.514,o),
(701,368,cs),
(701,514.859,o),
(705,574.017,o),
(705,712,cs),
(705,722.667,o),
(710.833,729.833,o),
(722.5,733.5,cs),
(734.167,737.167,o),
(756.667,740.667,o),
(790,744,cs),
(815.333,746.667,o),
(829,752,o),
(829,776,cs),
(829,786.667,o),
(825.333,794,o),
(818,798,cs),
(810.667,802,o),
(796.333,804,o),
(775,804,cs),
(548,804,ls),
(516,804,o),
(497,795.333,o),
(497,774,cs),
(497,747.333,o),
(516.333,740.667,o),
(539,738,cs),
(567.667,735.333,o),
(586.667,732,o),
(596,728,cs),
(605.333,724,o),
(610,716.333,o),
(610,705,cs),
(610,179,l),
(596.687,215.136,o),
(538.222,325.179,o),
(460,467.5,cs),
(381.306,610.68,o),
(316.539,729.63,o),
(288,781,cs),
(278.667,797.667,o),
(271.667,808.5,o),
(267,813.5,cs),
(262.333,818.5,o),
(256,821,o),
(248,821,cs),
(118,821,ls),
(52.08,821,o),
(26,814.784,o),
(26,791,cs),
(26,736.481,o),
(138,761.736,o),
(138,726,cs),
(138,674,o),
(138.5,618.5,o),
(139.5,559.5,cs),
(140.5,500.5,o),
(141,443.333,o),
(141,388,cs),
(141,340,o),
(140,294,o),
(138,250,cs),
(136,206,o),
(135,162.333,o),
(135,119,cs),
(135,80.333,o),
(120.667,72,o),
(94,68,cs),
(48.667,61.333,o),
(29,57.333,o),
(29,32,cs),
(29,5.333,o),
(50,0,o),
(70,0,cs),
(335,0,ls),
(351,0,o),
(365,9.333,o),
(365,32,cs),
(365,57.333,o),
(340.333,63,o),
(315,63,cs),
(233,63,l),
(233,655,l),
(596,25,l),
(596,25,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
21 1 1 0 71 26 2 3 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
2 8 2 0 1 0 106 0 1 5 1 106 0 5 5 12 67 0 6 6 14 67 0 3 3 4 84 7 1 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
2 8 2 0 1 0 106 0 1 5 1 106 0 5 5 12 67 0 6 6 14 67 0 3 3 4 84 0 4 4 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
2 8 2 0 1 0 106 0 1 5 1 106 0 5 5 12 67 0 3 3 4 84 0 4 4 13 67 0 6 6 7 83 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
2 8 2 0 1 0 106 0 1 5 1 106 0 5 5 14 67 0 3 3 4 84 0 4 4 13 67 0 6 6 7 83 0 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
1 0 105 103 83 80 62 59 36 33 29 27 17 15 9 7 0 25 1 25 9 15
CALL[ ]	/* CallFunction */";
};
width = 849;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(523.663,972,o),
(475.994,958.643,o),
(412,921,c),
(372.008,944.525,o),
(310.679,972,o),
(293,972,cs),
(285.667,972,o),
(282,967.667,o),
(282,959,cs),
(282,917.54,o),
(390.04,847,o),
(412,847,cs),
(437.107,847,o),
(543,919.046,o),
(543,955,cs),
(543,964.333,o),
(540,972,o),
(532,972,cs)
);
},
{
closed = 1;
nodes = (
(613.667,-6,o),
(629.333,-11,o),
(648,-11,cs),
(669.333,-11,o),
(683,2.333,o),
(683,21,cs),
(683,129.897,o),
(681,262.244,o),
(681,368,cs),
(681,479.666,o),
(682.949,616.199,o),
(685,729,cs),
(685,752.855,o),
(756.51,754,o),
(776,754,cs),
(792,754,o),
(813,758.333,o),
(813,781,cs),
(813,789.667,o),
(809.833,795.667,o),
(803.5,799,cs),
(797.167,802.333,o),
(783.333,804,o),
(762,804,cs),
(556,804,ls),
(531.333,804,o),
(519,796.333,o),
(519,781,cs),
(519,758.333,o),
(541.333,754,o),
(556,754,cs),
(578.926,754,o),
(611,752.569,o),
(611,731,cs),
(611,132,l),
(593.871,170.065,o),
(533.247,287.816,o),
(451.5,441.5,cs),
(378.098,579.496,o),
(308.949,706.096,o),
(269,781,cs),
(259.667,797.667,o),
(252.667,808.5,o),
(248,813.5,cs),
(243.333,818.5,o),
(237,821,o),
(229,821,cs),
(91,821,ls),
(52.333,821,o),
(33,815.333,o),
(33,804,cs),
(33,750.888,o),
(139,778.93,o),
(139,738,cs),
(139,684,o),
(139.5,626.5,o),
(140.5,565.5,cs),
(141.5,504.5,o),
(142,445.333,o),
(142,388,cs),
(142,338,o),
(140.833,287.833,o),
(138.5,237.5,cs),
(136.167,187.167,o),
(134.333,139.333,o),
(133,94,cs),
(130.411,49.986,o),
(103.607,48,o),
(85,48,cs),
(73,48,o),
(56,42.333,o),
(56,25,cs),
(56,3.667,o),
(78.333,0,o),
(97,0,cs),
(323,0,ls),
(336.333,0,o),
(343,8.333,o),
(343,25,cs),
(343,45,o),
(327.667,51,o),
(313,51,cs),
(213,51,l),
(213,708,l),
(607,6,l),
(607,6,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
20 1 1 0 68 25 2 3 7 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 6 6 12 67 9 1 7 7 8 83 0 8 8 14 67 5 1 3 3 4 84 0 4 4 13 67 0 10 10 24 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 6 6 12 67 9 1 7 7 8 83 0 8 8 14 67 5 1 3 3 4 84 10 1 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 6 6 12 67 9 1 7 7 8 83 0 8 8 14 67 5 1 3 3 4 84 0 4 4 13 67 0 10 10 24 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 8 9 1 7 3 8 7 91 0 6 6 12 67 5 1 3 3 4 84 0 4 4 13 67 0 10 10 24 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 8 9 1 7 3 8 7 91 0 6 6 14 67 5 1 3 3 4 84 0 4 4 13 67 0 10 10 24 10 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 105 103 88 85 81 78 75 72 59 56 41 38 34 31 28 26 16 14 9 7 0 24 1 24 12 15
CALL[ ]	/* CallFunction */";
};
width = 824;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(640.667,-11,o),
(655,-8.667,o),
(655,6,cs),
(655,100.076,o),
(653,180.328,o),
(653,368,cs),
(653,488.688,o),
(654.943,629.697,o),
(657,749,cs),
(657,773.008,o),
(719.348,774,o),
(738,774,cs),
(754,774,o),
(775,774.333,o),
(775,789,cs),
(775,794.333,o),
(771.833,798.167,o),
(765.5,800.5,cs),
(759.167,802.833,o),
(745.333,804,o),
(724,804,cs),
(533,804,ls),
(521,804,o),
(496,803.667,o),
(496,789,cs),
(496,775.667,o),
(518.333,774,o),
(533,774,cs),
(563.112,774,o),
(613,773.669,o),
(613,751,cs),
(613,80,l),
(575.164,150.942,o),
(511.154,258.64,o),
(421.5,414.5,cs),
(379.001,488.383,o),
(248.586,708.961,o),
(211,781,cs),
(201.667,797.667,o),
(194.667,808.5,o),
(190,813.5,cs),
(185.333,818.5,o),
(179,821,o),
(171,821,cs),
(63,821,ls),
(51.587,821,o),
(15,819.788,o),
(15,809,cs),
(15,778.543,o),
(141,806.053,o),
(141,758,cs),
(141,700.667,o),
(141.5,639.833,o),
(142.5,575.5,cs),
(143.5,511.167,o),
(144,448.667,o),
(144,388,cs),
(144,280,o),
(141.667,170,o),
(135,74,c),
(135,28.169,o),
(94.437,28,o),
(67,28,cs),
(55,28,o),
(38,25,o),
(38,13,cs),
(38,2.333,o),
(60.333,0,o),
(79,0,cs),
(291,0,ls),
(304.333,0,o),
(311,4.333,o),
(311,13,cs),
(311,23.667,o),
(295.667,31,o),
(281,31,cs),
(185,31,l),
(185,738,l),
(610,6,ls),
(618,-7.333,o),
(624.667,-11,o),
(634,-11,cs)
);
},
{
closed = 1;
nodes = (
(406.706,876,o),
(512,935.626,o),
(512,961,cs),
(512,968.333,o),
(509.333,972,o),
(504,972,cs),
(497.254,972,o),
(448.504,954.149,o),
(384,920,c),
(347.068,939.552,o),
(277.695,972,o),
(265,972,cs),
(259.667,972,o),
(257,968.333,o),
(257,961,cs),
(257,937.359,o),
(360.08,876,o),
(384,876,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
19 1 1 0 72 24 2 3 7 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 6 6 12 67 9 1 7 7 8 83 0 8 8 14 67 5 1 3 3 4 84 0 4 4 13 67 0 10 10 24 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 8 9 1 7 3 8 7 91 0 6 6 12 67 5 1 3 3 4 84 0 4 4 13 67 0 10 10 24 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 8 9 1 7 3 8 7 91 0 6 6 14 67 5 1 3 3 4 84 0 4 4 13 67 0 10 10 24 10 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 110 108 93 90 86 83 79 76 61 57 40 37 33 30 27 25 15 13 8 6 0 23 1 23 12 15
CALL[ ]	/* CallFunction */";
};
width = 788;
}
);
note = Ncaron;
unicode = 327;
},
{
glyphname = Ncommaaccent;
kernLeft = B;
kernRight = Eng;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(385,-135.971,o),
(421,-137.557,o),
(421,-155,cs),
(421,-175,o),
(418.5,-189.833,o),
(413.5,-199.5,cs),
(408.5,-209.167,o),
(406,-217.333,o),
(406,-224,cs),
(406,-246.667,o),
(425.333,-247,o),
(432,-247,cs),
(450.413,-247,o),
(513,-204.536,o),
(513,-128,cs),
(513,-70.667,o),
(477,-47,o),
(445,-47,cs),
(401,-47,o),
(385,-77,o),
(385,-105,cs)
);
},
{
closed = 1;
nodes = (
(610.667,-1.667,o),
(632.667,-11,o),
(654,-11,cs),
(688.667,-11,o),
(703,15,o),
(703,47,cs),
(703,149.555,o),
(701,268.514,o),
(701,368,cs),
(701,514.859,o),
(705,574.017,o),
(705,712,cs),
(705,722.667,o),
(710.833,729.833,o),
(722.5,733.5,cs),
(734.167,737.167,o),
(756.667,740.667,o),
(790,744,cs),
(815.333,746.667,o),
(829,752,o),
(829,776,cs),
(829,786.667,o),
(825.333,794,o),
(818,798,cs),
(810.667,802,o),
(796.333,804,o),
(775,804,cs),
(548,804,ls),
(516,804,o),
(497,795.333,o),
(497,774,cs),
(497,747.333,o),
(516.333,740.667,o),
(539,738,cs),
(567.667,735.333,o),
(586.667,732,o),
(596,728,cs),
(605.333,724,o),
(610,716.333,o),
(610,705,cs),
(610,179,l),
(596.687,215.136,o),
(538.222,325.179,o),
(460,467.5,cs),
(381.306,610.68,o),
(316.539,729.63,o),
(288,781,cs),
(278.667,797.667,o),
(271.667,808.5,o),
(267,813.5,cs),
(262.333,818.5,o),
(256,821,o),
(248,821,cs),
(118,821,ls),
(52.08,821,o),
(26,814.784,o),
(26,791,cs),
(26,736.481,o),
(138,761.736,o),
(138,726,cs),
(138,674,o),
(138.5,618.5,o),
(139.5,559.5,cs),
(140.5,500.5,o),
(141,443.333,o),
(141,388,cs),
(141,340,o),
(140,294,o),
(138,250,cs),
(136,206,o),
(135,162.333,o),
(135,119,cs),
(135,80.333,o),
(120.667,72,o),
(94,68,cs),
(48.667,61.333,o),
(29,57.333,o),
(29,32,cs),
(29,5.333,o),
(50,0,o),
(70,0,cs),
(335,0,ls),
(351,0,o),
(365,9.333,o),
(365,32,cs),
(365,57.333,o),
(340.333,63,o),
(315,63,cs),
(233,63,l),
(233,655,l),
(596,25,l),
(596,25,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
67 22 2 2 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 4 4 12 67 0 5 5 14 67 0 2 2 3 84 6 1 3 3 13 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 0 0 1 0 1 87 0 4 4 12 67 0 5 5 14 67 0 2 2 3 84 6 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 0 0 1 0 1 87 0 4 4 12 67 0 5 5 14 67 0 2 2 3 84 0 3 3 13 67 0 6 6 24 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 0 0 1 0 1 87 0 4 4 12 67 0 2 2 3 84 0 3 3 13 67 0 5 5 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 0 1 0 1 87 0 4 4 14 67 0 2 2 3 84 0 3 3 13 67 0 5 5 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
101 99 79 76 58 55 52 43 38 34 7 19
CALL[ ]	/* CallFunction */";
};
width = 849;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(613.667,-6,o),
(629.333,-11,o),
(648,-11,cs),
(669.333,-11,o),
(683,2.333,o),
(683,21,cs),
(683,129.897,o),
(681,262.244,o),
(681,368,cs),
(681,479.666,o),
(682.949,616.199,o),
(685,729,cs),
(685,752.855,o),
(756.51,754,o),
(776,754,cs),
(792,754,o),
(813,758.333,o),
(813,781,cs),
(813,789.667,o),
(809.833,795.667,o),
(803.5,799,cs),
(797.167,802.333,o),
(783.333,804,o),
(762,804,cs),
(556,804,ls),
(531.333,804,o),
(519,796.333,o),
(519,781,cs),
(519,758.333,o),
(541.333,754,o),
(556,754,cs),
(578.926,754,o),
(611,752.569,o),
(611,731,cs),
(611,132,l),
(593.871,170.065,o),
(533.247,287.816,o),
(451.5,441.5,cs),
(378.098,579.496,o),
(308.949,706.096,o),
(269,781,cs),
(259.667,797.667,o),
(252.667,808.5,o),
(248,813.5,cs),
(243.333,818.5,o),
(237,821,o),
(229,821,cs),
(91,821,ls),
(52.333,821,o),
(33,815.333,o),
(33,804,cs),
(33,750.888,o),
(139,778.93,o),
(139,738,cs),
(139,684,o),
(139.5,626.5,o),
(140.5,565.5,cs),
(141.5,504.5,o),
(142,445.333,o),
(142,388,cs),
(142,338,o),
(140.833,287.833,o),
(138.5,237.5,cs),
(136.167,187.167,o),
(134.333,139.333,o),
(133,94,cs),
(130.411,49.986,o),
(103.607,48,o),
(85,48,cs),
(73,48,o),
(56,42.333,o),
(56,25,cs),
(56,3.667,o),
(78.333,0,o),
(97,0,cs),
(323,0,ls),
(336.333,0,o),
(343,8.333,o),
(343,25,cs),
(343,45,o),
(327.667,51,o),
(313,51,cs),
(213,51,l),
(213,708,l),
(607,6,l),
(607,6,l)
);
},
{
closed = 1;
nodes = (
(384,-134,o),
(420,-133,o),
(420,-150,cs),
(420,-167,o),
(418,-180,o),
(414,-188,cs),
(409,-197,o),
(407,-204,o),
(407,-210,cs),
(407,-227,o),
(421,-229,o),
(428,-229,cs),
(452,-229,o),
(493,-179,o),
(493,-125,cs),
(493,-72,o),
(463,-53,o),
(436,-53,cs),
(399,-53,o),
(384,-78,o),
(384,-102,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
44 1 2 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 7 1 1 1 13 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 8 0 9 8 9 87 0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 5 6 1 4 0 5 4 91 0 8 0 9 8 9 87 0 3 3 12 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 5 6 1 4 0 5 4 91 0 8 0 9 8 9 87 0 3 3 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
96 94 37 47 52 51 61 63 52 51 34 10 35
CALL[ ]	/* CallFunction */";
};
width = 824;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(640.667,-11,o),
(655,-8.667,o),
(655,6,cs),
(655,100.076,o),
(653,180.328,o),
(653,368,cs),
(653,488.688,o),
(654.943,629.697,o),
(657,749,cs),
(657,773.008,o),
(719.348,774,o),
(738,774,cs),
(754,774,o),
(775,774.333,o),
(775,789,cs),
(775,794.333,o),
(771.833,798.167,o),
(765.5,800.5,cs),
(759.167,802.833,o),
(745.333,804,o),
(724,804,cs),
(533,804,ls),
(521,804,o),
(496,803.667,o),
(496,789,cs),
(496,775.667,o),
(518.333,774,o),
(533,774,cs),
(563.112,774,o),
(613,773.669,o),
(613,751,cs),
(613,80,l),
(575.164,150.942,o),
(511.154,258.64,o),
(421.5,414.5,cs),
(379.001,488.383,o),
(248.586,708.961,o),
(211,781,cs),
(201.667,797.667,o),
(194.667,808.5,o),
(190,813.5,cs),
(185.333,818.5,o),
(179,821,o),
(171,821,cs),
(63,821,ls),
(51.587,821,o),
(15,819.788,o),
(15,809,cs),
(15,778.543,o),
(141,806.053,o),
(141,758,cs),
(141,700.667,o),
(141.5,639.833,o),
(142.5,575.5,cs),
(143.5,511.167,o),
(144,448.667,o),
(144,388,cs),
(144,280,o),
(141.667,170,o),
(135,74,c),
(135,28.169,o),
(94.437,28,o),
(67,28,cs),
(55,28,o),
(38,25,o),
(38,13,cs),
(38,2.333,o),
(60.333,0,o),
(79,0,cs),
(291,0,ls),
(304.333,0,o),
(311,4.333,o),
(311,13,cs),
(311,23.667,o),
(295.667,31,o),
(281,31,cs),
(185,31,l),
(185,738,l),
(610,6,ls),
(618,-7.333,o),
(624.667,-11,o),
(634,-11,cs)
);
},
{
closed = 1;
nodes = (
(448.943,-203,o),
(465,-153.312,o),
(465,-124,cs),
(465,-78.667,o),
(443,-67,o),
(423,-67,cs),
(396.333,-67,o),
(383,-83.667,o),
(383,-101,cs),
(383,-133.202,o),
(419,-127.69,o),
(419,-145,cs),
(419,-151.667,o),
(417.167,-159.833,o),
(413.5,-169.5,cs),
(409.833,-179.167,o),
(408,-186.333,o),
(408,-191,cs),
(408,-197.667,o),
(415.333,-203,o),
(422,-203,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
48 0 2 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 67 0 8 8 9 83 0 9 9 17 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 5 6 1 4 0 5 4 91 0 3 3 12 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 67 0 8 8 9 83 0 9 9 17 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 5 6 1 4 0 5 4 91 0 8 0 9 8 9 87 0 3 3 12 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 5 6 1 4 0 5 4 91 0 8 0 9 8 9 87 0 3 3 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
101 99 93 91 86 84 69 66 62 59 55 52 37 33 52 51 33 10 18
CALL[ ]	/* CallFunction */";
};
width = 788;
}
);
note = Ncommaaccent;
unicode = 325;
},
{
glyphname = Ndotaccent;
kernLeft = B;
kernRight = Eng;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(375,863.333,o),
(400.667,840,o),
(434,840,cs),
(463.675,840,o),
(501,854.646,o),
(501,910,cs),
(501,946,o),
(473,971,o),
(441,971,cs),
(393.488,971,o),
(375,933.161,o),
(375,906,cs)
);
},
{
closed = 1;
nodes = (
(610.667,-1.667,o),
(632.667,-11,o),
(654,-11,cs),
(688.667,-11,o),
(703,15,o),
(703,47,cs),
(703,149.555,o),
(701,268.514,o),
(701,368,cs),
(701,514.859,o),
(705,574.017,o),
(705,712,cs),
(705,722.667,o),
(710.833,729.833,o),
(722.5,733.5,cs),
(734.167,737.167,o),
(756.667,740.667,o),
(790,744,cs),
(815.333,746.667,o),
(829,752,o),
(829,776,cs),
(829,786.667,o),
(825.333,794,o),
(818,798,cs),
(810.667,802,o),
(796.333,804,o),
(775,804,cs),
(548,804,ls),
(516,804,o),
(497,795.333,o),
(497,774,cs),
(497,747.333,o),
(516.333,740.667,o),
(539,738,cs),
(567.667,735.333,o),
(586.667,732,o),
(596,728,cs),
(605.333,724,o),
(610,716.333,o),
(610,705,cs),
(610,179,l),
(596.687,215.136,o),
(538.222,325.179,o),
(460,467.5,cs),
(381.306,610.68,o),
(316.539,729.63,o),
(288,781,cs),
(278.667,797.667,o),
(271.667,808.5,o),
(267,813.5,cs),
(262.333,818.5,o),
(256,821,o),
(248,821,cs),
(118,821,ls),
(52.08,821,o),
(26,814.784,o),
(26,791,cs),
(26,736.481,o),
(138,761.736,o),
(138,726,cs),
(138,674,o),
(138.5,618.5,o),
(139.5,559.5,cs),
(140.5,500.5,o),
(141,443.333,o),
(141,388,cs),
(141,340,o),
(140,294,o),
(138,250,cs),
(136,206,o),
(135,162.333,o),
(135,119,cs),
(135,80.333,o),
(120.667,72,o),
(94,68,cs),
(48.667,61.333,o),
(29,57.333,o),
(29,32,cs),
(29,5.333,o),
(50,0,o),
(70,0,cs),
(335,0,ls),
(351,0,o),
(365,9.333,o),
(365,32,cs),
(365,57.333,o),
(340.333,63,o),
(315,63,cs),
(233,63,l),
(233,655,l),
(596,25,l),
(596,25,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
61 16 2 2 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 0 0 1 4 0 1 91 0 4 4 12 67 0 5 5 14 67 0 2 2 3 84 6 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 0 0 1 4 0 1 91 0 4 4 12 67 0 5 5 14 67 0 2 2 3 84 0 3 3 13 67 0 6 6 24 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 0 0 1 4 0 1 91 0 4 4 12 67 0 2 2 3 84 0 3 3 13 67 0 5 5 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 0 0 1 4 0 1 91 0 4 4 14 67 0 2 2 3 84 0 3 3 13 67 0 5 5 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
95 93 73 70 52 49 52 35 38 36 7 19
CALL[ ]	/* CallFunction */";
};
width = 849;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(613.667,-6,o),
(629.333,-11,o),
(648,-11,cs),
(669.333,-11,o),
(683,2.333,o),
(683,21,cs),
(683,129.897,o),
(681,262.244,o),
(681,368,cs),
(681,479.666,o),
(682.949,616.199,o),
(685,729,cs),
(685,752.855,o),
(756.51,754,o),
(776,754,cs),
(792,754,o),
(813,758.333,o),
(813,781,cs),
(813,789.667,o),
(809.833,795.667,o),
(803.5,799,cs),
(797.167,802.333,o),
(783.333,804,o),
(762,804,cs),
(556,804,ls),
(531.333,804,o),
(519,796.333,o),
(519,781,cs),
(519,758.333,o),
(541.333,754,o),
(556,754,cs),
(578.926,754,o),
(611,752.569,o),
(611,731,cs),
(611,132,l),
(593.871,170.065,o),
(533.247,287.816,o),
(451.5,441.5,cs),
(378.098,579.496,o),
(308.949,706.096,o),
(269,781,cs),
(259.667,797.667,o),
(252.667,808.5,o),
(248,813.5,cs),
(243.333,818.5,o),
(237,821,o),
(229,821,cs),
(91,821,ls),
(52.333,821,o),
(33,815.333,o),
(33,804,cs),
(33,750.888,o),
(139,778.93,o),
(139,738,cs),
(139,684,o),
(139.5,626.5,o),
(140.5,565.5,cs),
(141.5,504.5,o),
(142,445.333,o),
(142,388,cs),
(142,338,o),
(140.833,287.833,o),
(138.5,237.5,cs),
(136.167,187.167,o),
(134.333,139.333,o),
(133,94,cs),
(130.411,49.986,o),
(103.607,48,o),
(85,48,cs),
(73,48,o),
(56,42.333,o),
(56,25,cs),
(56,3.667,o),
(78.333,0,o),
(97,0,cs),
(323,0,ls),
(336.333,0,o),
(343,8.333,o),
(343,25,cs),
(343,45,o),
(327.667,51,o),
(313,51,cs),
(213,51,l),
(213,708,l),
(607,6,l),
(607,6,l)
);
},
{
closed = 1;
nodes = (
(366,880,o),
(388,859,o),
(415,859,cs),
(440,859,o),
(471,872,o),
(471,920,cs),
(471,951,o),
(449,972,o),
(422,972,cs),
(380,972,o),
(366,936,o),
(366,916,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
44 1 2 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 8 0 9 3 8 9 91 0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 8 0 9 3 8 9 91 0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 7 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 8 0 9 3 8 9 91 0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 8 0 9 3 8 9 91 0 5 6 1 4 0 5 4 91 0 3 3 12 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 8 0 9 3 8 9 91 0 5 6 1 4 0 5 4 91 0 3 3 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
96 94 39 47 52 51 61 63 52 51 34 10 35
CALL[ ]	/* CallFunction */";
};
width = 824;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(640.667,-11,o),
(655,-8.667,o),
(655,6,cs),
(655,100.076,o),
(653,180.328,o),
(653,368,cs),
(653,488.688,o),
(654.943,629.697,o),
(657,749,cs),
(657,773.008,o),
(719.348,774,o),
(738,774,cs),
(754,774,o),
(775,774.333,o),
(775,789,cs),
(775,794.333,o),
(771.833,798.167,o),
(765.5,800.5,cs),
(759.167,802.833,o),
(745.333,804,o),
(724,804,cs),
(533,804,ls),
(521,804,o),
(496,803.667,o),
(496,789,cs),
(496,775.667,o),
(518.333,774,o),
(533,774,cs),
(563.112,774,o),
(613,773.669,o),
(613,751,cs),
(613,80,l),
(575.164,150.942,o),
(511.154,258.64,o),
(421.5,414.5,cs),
(379.001,488.383,o),
(248.586,708.961,o),
(211,781,cs),
(201.667,797.667,o),
(194.667,808.5,o),
(190,813.5,cs),
(185.333,818.5,o),
(179,821,o),
(171,821,cs),
(63,821,ls),
(51.587,821,o),
(15,819.788,o),
(15,809,cs),
(15,778.543,o),
(141,806.053,o),
(141,758,cs),
(141,700.667,o),
(141.5,639.833,o),
(142.5,575.5,cs),
(143.5,511.167,o),
(144,448.667,o),
(144,388,cs),
(144,280,o),
(141.667,170,o),
(135,74,c),
(135,28.169,o),
(94.437,28,o),
(67,28,cs),
(55,28,o),
(38,25,o),
(38,13,cs),
(38,2.333,o),
(60.333,0,o),
(79,0,cs),
(291,0,ls),
(304.333,0,o),
(311,4.333,o),
(311,13,cs),
(311,23.667,o),
(295.667,31,o),
(281,31,cs),
(185,31,l),
(185,738,l),
(610,6,ls),
(618,-7.333,o),
(624.667,-11,o),
(634,-11,cs)
);
},
{
closed = 1;
nodes = (
(405.667,889,o),
(428,899,o),
(428,935,cs),
(428,957.667,o),
(412.667,972,o),
(394,972,cs),
(366.258,972,o),
(353,944.895,o),
(353,931,cs),
(353,907,o),
(368.333,889,o),
(387,889,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
48 0 2 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 8 0 9 3 8 9 91 0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 8 0 9 3 8 9 91 0 5 6 1 4 0 5 4 91 0 3 3 12 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 8 0 9 3 8 9 91 0 5 6 1 4 0 5 4 91 0 3 3 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
101 99 95 93 86 84 69 66 62 59 55 52 37 33 52 51 33 10 18
CALL[ ]	/* CallFunction */";
};
width = 788;
}
);
note = Ndotaccent;
unicode = 7748;
},
{
glyphname = Ntilde;
kernLeft = B;
kernRight = Eng;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(610.667,-1.667,o),
(632.667,-11,o),
(654,-11,cs),
(688.667,-11,o),
(703,15,o),
(703,47,cs),
(703,149.555,o),
(701,268.514,o),
(701,368,cs),
(701,514.859,o),
(705,574.017,o),
(705,712,cs),
(705,722.667,o),
(710.833,729.833,o),
(722.5,733.5,cs),
(734.167,737.167,o),
(756.667,740.667,o),
(790,744,cs),
(815.333,746.667,o),
(829,752,o),
(829,776,cs),
(829,786.667,o),
(825.333,794,o),
(818,798,cs),
(810.667,802,o),
(796.333,804,o),
(775,804,cs),
(548,804,ls),
(516,804,o),
(497,795.333,o),
(497,774,cs),
(497,747.333,o),
(516.333,740.667,o),
(539,738,cs),
(567.667,735.333,o),
(586.667,732,o),
(596,728,cs),
(605.333,724,o),
(610,716.333,o),
(610,705,cs),
(610,179,l),
(596.687,215.136,o),
(538.222,325.179,o),
(460,467.5,cs),
(381.306,610.68,o),
(316.539,729.63,o),
(288,781,cs),
(278.667,797.667,o),
(271.667,808.5,o),
(267,813.5,cs),
(262.333,818.5,o),
(256,821,o),
(248,821,cs),
(118,821,ls),
(52.08,821,o),
(26,814.784,o),
(26,791,cs),
(26,736.481,o),
(138,761.736,o),
(138,726,cs),
(138,674,o),
(138.5,618.5,o),
(139.5,559.5,cs),
(140.5,500.5,o),
(141,443.333,o),
(141,388,cs),
(141,340,o),
(140,294,o),
(138,250,cs),
(136,206,o),
(135,162.333,o),
(135,119,cs),
(135,80.333,o),
(120.667,72,o),
(94,68,cs),
(48.667,61.333,o),
(29,57.333,o),
(29,32,cs),
(29,5.333,o),
(50,0,o),
(70,0,cs),
(335,0,ls),
(351,0,o),
(365,9.333,o),
(365,32,cs),
(365,57.333,o),
(340.333,63,o),
(315,63,cs),
(233,63,l),
(233,655,l),
(596,25,l),
(596,25,l)
);
},
{
closed = 1;
nodes = (
(239,877,o),
(246,861,o),
(258,861,cs),
(278.593,861,o),
(302.709,886,o),
(342,886,cs),
(380.662,886,o),
(423.294,862,o),
(479,862,cs),
(511.676,862,o),
(590,879.584,o),
(590,937,cs),
(590,958.333,o),
(574.667,972,o),
(568,972,cs),
(563.333,972,o),
(553.333,967.667,o),
(538,959,cs),
(519.333,948.333,o),
(496.667,942,o),
(478,942,cs),
(438.599,942,o),
(377.495,970,o),
(341,970,cs),
(316.333,970,o),
(293.667,964,o),
(273,952,cs),
(254.333,941.333,o),
(239,926.333,o),
(239,897,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
45 0 2 0 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
7 1 5 0 9 8 5 9 91 0 6 10 1 8 2 6 8 91 0 2 2 12 67 0 3 3 14 67 0 0 0 1 84 4 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
7 1 5 0 9 8 5 9 91 0 6 10 1 8 2 6 8 91 0 2 2 12 67 0 3 3 14 67 0 0 0 1 84 0 1 1 13 67 0 4 4 24 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
7 1 5 0 9 8 5 9 91 0 6 10 1 8 2 6 8 91 0 2 2 12 67 0 0 0 1 84 0 1 1 13 67 0 3 3 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
7 1 5 0 9 8 5 9 91 0 6 10 1 8 2 6 8 91 0 2 2 14 67 0 0 0 1 84 0 1 1 13 67 0 3 3 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
116 114 111 109 106 104 98 96 93 91 88 86 79 77 57 54 36 33 52 33 11 17
CALL[ ]	/* CallFunction */";
};
width = 849;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(613.667,-6,o),
(629.333,-11,o),
(648,-11,cs),
(669.333,-11,o),
(683,2.333,o),
(683,21,cs),
(683,129.897,o),
(681,262.244,o),
(681,368,cs),
(681,479.666,o),
(682.949,616.199,o),
(685,729,cs),
(685,752.855,o),
(756.51,754,o),
(776,754,cs),
(792,754,o),
(813,758.333,o),
(813,781,cs),
(813,789.667,o),
(809.833,795.667,o),
(803.5,799,cs),
(797.167,802.333,o),
(783.333,804,o),
(762,804,cs),
(556,804,ls),
(531.333,804,o),
(519,796.333,o),
(519,781,cs),
(519,758.333,o),
(541.333,754,o),
(556,754,cs),
(578.926,754,o),
(611,752.569,o),
(611,731,cs),
(611,132,l),
(593.871,170.065,o),
(533.247,287.816,o),
(451.5,441.5,cs),
(378.098,579.496,o),
(308.949,706.096,o),
(269,781,cs),
(259.667,797.667,o),
(252.667,808.5,o),
(248,813.5,cs),
(243.333,818.5,o),
(237,821,o),
(229,821,cs),
(91,821,ls),
(52.333,821,o),
(33,815.333,o),
(33,804,cs),
(33,750.888,o),
(139,778.93,o),
(139,738,cs),
(139,684,o),
(139.5,626.5,o),
(140.5,565.5,cs),
(141.5,504.5,o),
(142,445.333,o),
(142,388,cs),
(142,338,o),
(140.833,287.833,o),
(138.5,237.5,cs),
(136.167,187.167,o),
(134.333,139.333,o),
(133,94,cs),
(130.411,49.986,o),
(103.607,48,o),
(85,48,cs),
(73,48,o),
(56,42.333,o),
(56,25,cs),
(56,3.667,o),
(78.333,0,o),
(97,0,cs),
(323,0,ls),
(336.333,0,o),
(343,8.333,o),
(343,25,cs),
(343,45,o),
(327.667,51,o),
(313,51,cs),
(213,51,l),
(213,708,l),
(607,6,l),
(607,6,l)
);
},
{
closed = 1;
nodes = (
(251,919,o),
(250,913,o),
(250,907,cs),
(250,892,o),
(256,879,o),
(267,879,cs),
(284,879,o),
(311,904,o),
(351,904,cs),
(390,904,o),
(432,880,o),
(488,880,cs),
(544,880,o),
(577,902,o),
(590,925,cs),
(593,931,o),
(595,937,o),
(595,944,cs),
(595,960,o),
(584,972,o),
(577,972,cs),
(574,972,o),
(570,971,o),
(567,970,cs),
(563,968,o),
(556,964,o),
(547,959,cs),
(524,948,o),
(504,942,o),
(487,942,cs),
(448,942,o),
(386,970,o),
(350,970,cs),
(325,970,o),
(303,964,o),
(282,952,cs),
(272,946,o),
(265,941,o),
(261,936,cs),
(257,931,o),
(254,927,o),
(253,924,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
44 1 2 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 3 9 11 91 0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 3 9 11 91 0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 7 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 3 9 11 91 0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 3 9 11 91 0 5 6 1 4 0 5 4 91 0 3 3 12 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 3 9 11 91 0 5 6 1 4 0 5 4 91 0 3 3 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
118 116 113 111 108 106 100 98 95 93 39 47 52 51 61 63 52 51 34 14 35
CALL[ ]	/* CallFunction */";
};
width = 824;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(640.667,-11,o),
(655,-8.667,o),
(655,6,cs),
(655,100.076,o),
(653,180.328,o),
(653,368,cs),
(653,488.688,o),
(654.943,629.697,o),
(657,749,cs),
(657,773.008,o),
(719.348,774,o),
(738,774,cs),
(754,774,o),
(775,774.333,o),
(775,789,cs),
(775,794.333,o),
(771.833,798.167,o),
(765.5,800.5,cs),
(759.167,802.833,o),
(745.333,804,o),
(724,804,cs),
(533,804,ls),
(521,804,o),
(496,803.667,o),
(496,789,cs),
(496,775.667,o),
(518.333,774,o),
(533,774,cs),
(563.112,774,o),
(613,773.669,o),
(613,751,cs),
(613,80,l),
(575.164,150.942,o),
(511.154,258.64,o),
(421.5,414.5,cs),
(379.001,488.383,o),
(248.586,708.961,o),
(211,781,cs),
(201.667,797.667,o),
(194.667,808.5,o),
(190,813.5,cs),
(185.333,818.5,o),
(179,821,o),
(171,821,cs),
(63,821,ls),
(51.587,821,o),
(15,819.788,o),
(15,809,cs),
(15,778.543,o),
(141,806.053,o),
(141,758,cs),
(141,700.667,o),
(141.5,639.833,o),
(142.5,575.5,cs),
(143.5,511.167,o),
(144,448.667,o),
(144,388,cs),
(144,280,o),
(141.667,170,o),
(135,74,c),
(135,28.169,o),
(94.437,28,o),
(67,28,cs),
(55,28,o),
(38,25,o),
(38,13,cs),
(38,2.333,o),
(60.333,0,o),
(79,0,cs),
(291,0,ls),
(304.333,0,o),
(311,4.333,o),
(311,13,cs),
(311,23.667,o),
(295.667,31,o),
(281,31,cs),
(185,31,l),
(185,738,l),
(610,6,ls),
(618,-7.333,o),
(624.667,-11,o),
(634,-11,cs)
);
},
{
closed = 1;
nodes = (
(251.791,888,o),
(278.735,913,o),
(320,913,cs),
(358.662,913,o),
(401.294,889,o),
(457,889,cs),
(509.947,889,o),
(559,908.797,o),
(559,934,cs),
(559,943.333,o),
(552.667,951,o),
(546,951,cs),
(542.667,951,o),
(539.167,950.167,o),
(535.5,948.5,cs),
(531.833,946.833,o),
(525.333,943.333,o),
(516,938,cs),
(493.333,926.667,o),
(473.333,921,o),
(456,921,cs),
(416.599,921,o),
(355.495,949,o),
(319,949,cs),
(294.333,949,o),
(271.667,943,o),
(251,931,cs),
(231.667,919.667,o),
(222,910.333,o),
(222,903,cs),
(222,896.333,o),
(229.333,888,o),
(236,888,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
48 0 2 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 3 9 11 91 0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 3 9 11 91 0 5 6 1 4 0 5 4 92 0 3 3 12 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 3 9 11 91 0 5 6 1 4 0 5 4 92 0 3 3 14 67 2 1 0 0 1 84 0 1 1 13 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
122 120 117 115 112 110 104 102 99 97 94 92 86 84 69 66 62 59 55 52 37 33 52 51 33 14 18
CALL[ ]	/* CallFunction */";
};
width = 788;
}
);
note = Ntilde;
unicode = 209;
},
{
glyphname = Eng;
kernLeft = B;
kernRight = Eng;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(645,-250,o),
(703,-170.667,o),
(703,-20,cs),
(703,73.049,o),
(701,162.706,o),
(701,232,cs),
(701,261.375,o),
(702.339,331.198,o),
(703.5,441.5,cs),
(704.442,531,o),
(706,621.833,o),
(706,714,cs),
(706,737.846,o),
(751.412,742,o),
(803,742,cs),
(819,742,o),
(840,749.333,o),
(840,776,cs),
(840,786.667,o),
(836.833,794,o),
(830.5,798,cs),
(824.167,802,o),
(810.333,804,o),
(789,804,cs),
(572,804,ls),
(547.333,804,o),
(535,794.667,o),
(535,776,cs),
(535,749.333,o),
(553.333,742,o),
(572,742,cs),
(602.667,742,o),
(610,734.333,o),
(610,709,cs),
(610,163,l),
(591.382,215.13,o),
(520.563,354.874,o),
(454.5,487,cs),
(388.17,619.661,o),
(313.579,763.263,o),
(308,780,cs),
(301.333,798.667,o),
(294.833,810.167,o),
(288.5,814.5,cs),
(282.167,818.833,o),
(276,821,o),
(270,821,cs),
(111,821,ls),
(83.667,821,o),
(66,818.5,o),
(58,813.5,cs),
(50,808.5,o),
(46,801.333,o),
(46,792,cs),
(46,765.333,o),
(70.333,754,o),
(85,754,cs),
(108.333,754,o),
(123,753.333,o),
(129,752,cs),
(135,750.667,o),
(138,749.333,o),
(138,748,cs),
(138,668,o),
(138.833,611.5,o),
(139.5,561.5,cs),
(140.111,515.683,o),
(141,461.654,o),
(141,410,cs),
(141,337.056,o),
(131.219,192.114,o),
(126,106,cs),
(123.507,68.608,o),
(108.549,60,o),
(96,60,cs),
(82.667,60,o),
(69,50.667,o),
(69,32,cs),
(69,5.333,o),
(92.667,0,o),
(110,0,cs),
(349,0,ls),
(362.333,0,o),
(379,8,o),
(379,32,cs),
(379,58.667,o),
(361.667,63,o),
(339,63,cs),
(233,63,l),
(233,690,l),
(313,526,o),
(372.333,411.5,o),
(419,325.5,cs),
(442.333,282.5,o),
(462.833,245.833,o),
(480.5,215.5,cs),
(513.139,159.459,o),
(543.708,109.967,o),
(570.5,66,cs),
(583.5,44.667,o),
(597.333,21.333,o),
(612,-4,c),
(612,-114.667,o),
(578,-167,o),
(522,-167,cs),
(487.333,-167,o),
(457,-147,o),
(457,-115,cs),
(457,-105.667,o),
(457.333,-91.667,o),
(472,-85,c),
(478.667,-93,o),
(494,-105,o),
(514,-105,cs),
(539.333,-105,o),
(556,-88,o),
(556,-56,cs),
(556,-20.07,o),
(522.987,-8,o),
(498,-8,cs),
(413.671,-8,o),
(380,-59.351,o),
(380,-116,cs),
(380,-200.991,o),
(452.348,-250,o),
(537,-250,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
89 37 2 4 7 30 1 1 5 21 1 2 1 3 66
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
89 37 2 4 11 30 1 1 5 21 1 2 1 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
89 37 2 4 9 30 1 1 5 21 1 2 1 3 66
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 1 0 2 3 1 2 91 11 9 2 7 7 8 83 0 8 8 12 67 11 9 2 7 7 10 83 0 10 10 14 67 6 1 4 4 5 83 0 5 5 13 67 0 3 3 0 83 12 1 0 0 25 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 1 0 2 3 1 2 91 9 1 7 7 8 83 0 8 8 12 67 0 11 11 10 84 0 10 10 14 67 6 1 4 4 5 83 0 5 5 13 67 0 3 3 0 83 12 1 0 0 25 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 2 3 1 2 91 0 3 12 1 0 3 0 87 0 7 7 8 83 0 8 8 12 67 11 1 9 9 10 83 0 10 10 14 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 10 11 1 9 4 10 9 91 0 1 0 2 3 1 2 91 0 3 12 1 0 3 0 87 0 7 7 8 83 0 8 8 12 67 6 1 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 10 11 1 9 4 10 9 91 0 1 0 2 3 1 2 91 0 3 12 1 0 3 0 87 0 7 7 8 83 0 8 8 14 67 6 1 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 107 104 100 97 94 92 78 75 71 69 53 51 47 44 40 38 28 26 19 17 11 9 0 124 1 124 13 15
CALL[ ]	/* CallFunction */";
};
width = 849;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(398.682,377.898,o),
(510.838,177.558,o),
(560,90.5,cs),
(593.851,30.556,o),
(611,0.1,o),
(611,0,cs),
(605.675,-127.799,o),
(582.362,-173,o),
(514,-173,cs),
(484.08,-173,o),
(435,-159.298,o),
(435,-113,cs),
(435,-109.223,o),
(436.085,-83.958,o),
(452,-76,c),
(458.667,-84,o),
(472,-92,o),
(488,-92,cs),
(509.333,-92,o),
(528,-79.333,o),
(528,-50,cs),
(528,-19.333,o),
(502,-7,o),
(478,-7,cs),
(409.333,-7,o),
(375,-59.27,o),
(375,-115,cs),
(375,-200.29,o),
(452.927,-239,o),
(527,-239,cs),
(639,-239,o),
(683,-155,o),
(683,33,cs),
(683,141.028,o),
(681,267.155,o),
(681,368,cs),
(681,479.666,o),
(682.949,616.199,o),
(685,729,cs),
(685,752.855,o),
(756.51,754,o),
(776,754,cs),
(792,754,o),
(813,758.333,o),
(813,781,cs),
(813,789.667,o),
(809.833,795.667,o),
(803.5,799,cs),
(797.167,802.333,o),
(783.333,804,o),
(762,804,cs),
(556,804,ls),
(531.333,804,o),
(519,796.333,o),
(519,781,cs),
(519,758.333,o),
(541.333,754,o),
(556,754,cs),
(578.926,754,o),
(611,752.569,o),
(611,731,cs),
(611,132,l),
(593.871,170.065,o),
(533.247,287.816,o),
(451.5,441.5,cs),
(378.098,579.496,o),
(308.949,706.096,o),
(269,781,cs),
(259.667,797.667,o),
(252.667,808.5,o),
(248,813.5,cs),
(243.333,818.5,o),
(237,821,o),
(229,821,cs),
(91,821,ls),
(52.333,821,o),
(33,815.333,o),
(33,804,cs),
(33,750.888,o),
(139,778.93,o),
(139,738,cs),
(139,684,o),
(139.5,626.5,o),
(140.5,565.5,cs),
(141.5,504.5,o),
(142,445.333,o),
(142,388,cs),
(142,338,o),
(140.833,287.833,o),
(138.5,237.5,cs),
(136.167,187.167,o),
(134.333,139.333,o),
(133,94,cs),
(130.411,49.986,o),
(103.607,48,o),
(85,48,cs),
(73,48,o),
(56,42.333,o),
(56,25,cs),
(56,3.667,o),
(78.333,0,o),
(97,0,cs),
(323,0,ls),
(336.333,0,o),
(343,8.333,o),
(343,25,cs),
(343,45,o),
(327.667,51,o),
(313,51,cs),
(213,51,l),
(213,708,l),
(213,708,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
119 42 2 0 4 97 1 9 8 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 8 0 9 10 8 9 91 0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 67 0 10 10 7 83 0 7 7 25 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 8 0 9 10 8 9 91 0 10 0 7 10 7 87 0 3 3 12 67 6 1 4 4 5 83 0 5 5 14 67 2 1 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 5 6 1 4 0 5 4 91 0 8 0 9 10 8 9 91 0 10 0 7 10 7 87 0 3 3 12 67 2 1 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 5 6 1 4 0 5 4 91 0 8 0 9 10 8 9 91 0 10 0 7 10 7 87 0 3 3 14 67 2 1 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
108 106 95 93 40 47 52 51 61 63 52 51 32 11 24
CALL[ ]	/* CallFunction */";
};
width = 824;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(560,-219,o),
(599,-196.5,o),
(623,-142.5,cs),
(647,-88.5,o),
(655,-3.333,o),
(655,122,cs),
(655,155.434,o),
(654,200.755,o),
(654,258,cs),
(654,329.54,o),
(653,441.536,o),
(653,594,cs),
(653,604.652,o),
(653.299,660.554,o),
(655,749,cs),
(655,772.974,o),
(716.864,774,o),
(737,774,cs),
(754.333,774,o),
(775,774.333,o),
(775,789,cs),
(775,794.333,o),
(771.833,798.167,o),
(765.5,800.5,cs),
(759.167,802.833,o),
(745.333,804,o),
(724,804,cs),
(533,804,ls),
(521,804,o),
(496,803.667,o),
(496,789,cs),
(496,775.667,o),
(518.333,774,o),
(533,774,cs),
(563.112,774,o),
(613,773.669,o),
(613,751,cs),
(613,80,l),
(588.639,124.663,o),
(528.878,227.122,o),
(448.5,367,cs),
(363.584,514.777,o),
(283.006,656.449,o),
(211,781,cs),
(201.667,798.333,o),
(194.667,809.333,o),
(190,814,cs),
(185.333,818.667,o),
(179,821,o),
(171,821,cs),
(63,821,ls),
(44.333,821,o),
(31.667,819.833,o),
(25,817.5,cs),
(18.333,815.167,o),
(15,811,o),
(15,805,cs),
(15,797.667,o),
(19.333,793,o),
(28,791,cs),
(36.667,789,o),
(54,788,o),
(80,788,cs),
(110.667,788,o),
(141,773,o),
(141,721,cs),
(141,711.909,o),
(141.334,661.914,o),
(142.5,571,cs),
(143.596,485.525,o),
(144,415.396,o),
(144,351,cs),
(144,286.96,o),
(144.206,234.129,o),
(143.5,192.5,cs),
(142.91,157.708,o),
(143,114.328,o),
(143,74,cs),
(143,30,o),
(113.667,28,o),
(67,28,cs),
(53.667,28,o),
(38,24.667,o),
(38,14,cs),
(38,2,o),
(59,0,o),
(79,0,cs),
(271,0,ls),
(284.333,0,o),
(291,4.333,o),
(291,13,cs),
(291,23.667,o),
(275.667,31,o),
(261,31,cs),
(185,31,l),
(185,738,l),
(610,6,l),
(606,-71.333,o),
(599.167,-118,o),
(582.5,-146,cs),
(565.833,-174,o),
(538.333,-183,o),
(493,-183,cs),
(464.724,-183,o),
(403,-179.889,o),
(403,-110,cs),
(403,-91.333,o),
(406.667,-67.667,o),
(424,-61,c),
(430.667,-69,o),
(440.333,-76,o),
(451,-76,cs),
(467,-76,o),
(488,-64,o),
(488,-40,cs),
(488,-18.667,o),
(471,-6,o),
(447,-6,cs),
(398.88,-6,o),
(368,-56.838,o),
(368,-114,cs),
(368,-198.727,o),
(436.137,-219,o),
(496,-219,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
60 11 2 1 6 10 1 2 1 118 1 11 10 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 10 0 11 0 10 11 91 0 4 4 5 83 0 5 5 12 67 8 1 6 6 7 83 0 7 7 14 67 3 1 1 1 2 83 0 2 2 13 67 0 0 0 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 7 8 1 6 1 7 6 91 0 10 0 11 0 10 11 91 0 4 4 5 83 0 5 5 12 67 3 1 1 1 2 83 0 2 2 13 67 0 0 0 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 7 8 1 6 1 7 6 91 0 10 0 11 0 10 11 91 0 0 0 9 0 9 87 0 4 4 5 83 0 5 5 12 67 3 1 1 1 2 83 0 2 2 13 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 7 8 1 6 1 7 6 91 0 10 0 11 0 10 11 91 0 0 0 9 0 9 87 0 4 4 5 83 0 5 5 14 67 3 1 1 1 2 83 0 2 2 13 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
116 114 110 108 100 98 81 78 74 71 67 64 51 48 44 42 36 51 38 36 12 19
CALL[ ]	/* CallFunction */";
};
width = 788;
}
);
note = Eng;
unicode = 330;
},
{
glyphname = O;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(130,587.629,o),
(215.554,762,o),
(379,762,cs),
(516.537,762,o),
(593,607.084,o),
(593,410,cs),
(593,180.667,o),
(506.333,63,o),
(357,63,cs),
(291.667,63,o),
(235.167,95.333,o),
(194.5,154,cs),
(153.833,212.667,o),
(130,297.333,o),
(130,400,cs)
);
},
{
closed = 1;
nodes = (
(34,257.333,o),
(68.5,152,o),
(126.5,84,cs),
(184.5,16,o),
(264.333,-16,o),
(355,-16,cs),
(498.998,-16,o),
(689,82.663,o),
(689,408,cs),
(689,641.602,o),
(587.519,838,o),
(375,838,cs),
(258.283,838,o),
(169.604,782.661,o),
(114.5,697.5,cs),
(60.931,614.711,o),
(34,514.521,o),
(34,404,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
40 42 38 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(112,578.722,o),
(200.506,777,o),
(373,777,cs),
(442.333,777,o),
(497.333,736.667,o),
(536,670,cs),
(574.667,603.333,o),
(596,511.333,o),
(596,410,cs),
(596,290,o),
(571.667,199,o),
(529,139,cs),
(486.333,79,o),
(424.333,48,o),
(351,48,cs),
(209.03,48,o),
(112,183.97,o),
(112,400,cs)
);
},
{
closed = 1;
nodes = (
(37,257.333,o),
(72.667,152,o),
(130,84,cs),
(187.333,16,o),
(265,-16,o),
(349,-16,cs),
(406.601,-16,o),
(488.884,1.884,o),
(560.5,73.5,cs),
(603.833,116.833,o),
(637.167,178.833,o),
(656.5,263.5,cs),
(666.167,305.833,o),
(671,354,o),
(671,408,cs),
(671,642.196,o),
(566.827,838,o),
(367,838,cs),
(257.161,838,o),
(171.042,782.566,o),
(117,697.5,cs),
(64.904,615.497,o),
(37,510.28,o),
(37,404,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
42 42 40 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 709;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(401.333,-16,o),
(477.833,8.667,o),
(538.5,74,cs),
(599.167,139.333,o),
(645,245.333,o),
(645,408,cs),
(645,524,o),
(618.333,631.333,o),
(569,710,cs),
(519.667,788.667,o),
(446.667,838,o),
(356,838,cs),
(255.818,838,o),
(174.489,782.482,o),
(121.5,697.5,cs),
(70.201,615.229,o),
(41,513.932,o),
(41,404,cs),
(41,113.183,o),
(189.978,-16,o),
(340,-16,cs)
);
},
{
closed = 1;
nodes = (
(186.741,18,o),
(86,163.386,o),
(86,400,cs),
(86,592.013,o),
(173.824,807,o),
(362,807,cs),
(501.104,807,o),
(600,628.505,o),
(600,410,cs),
(600,279.333,o),
(572.5,182.5,o),
(526.5,116.5,cs),
(480.5,50.5,o),
(415.333,18,o),
(342,18,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
40 42 40 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = O;
unicode = 79;
},
{
glyphname = Oacute;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(442,953.333,o),
(427.667,972,o),
(401,972,cs),
(362.545,972,o),
(288,898.769,o),
(288,872,cs),
(288,856,o),
(301.667,841,o),
(323,841,cs),
(356.368,841,o),
(442,897.284,o),
(442,936,cs)
);
},
{
closed = 1;
nodes = (
(130,587.629,o),
(215.554,762,o),
(379,762,cs),
(516.537,762,o),
(593,607.084,o),
(593,410,cs),
(593,180.667,o),
(506.333,63,o),
(357,63,cs),
(291.667,63,o),
(235.167,95.333,o),
(194.5,154,cs),
(153.833,212.667,o),
(130,297.333,o),
(130,400,cs)
);
},
{
closed = 1;
nodes = (
(34,257.333,o),
(68.5,152,o),
(126.5,84,cs),
(184.5,16,o),
(264.333,-16,o),
(355,-16,cs),
(498.998,-16,o),
(689,82.663,o),
(689,408,cs),
(689,641.602,o),
(587.519,838,o),
(375,838,cs),
(258.283,838,o),
(169.604,782.661,o),
(114.5,697.5,cs),
(60.931,614.711,o),
(34,514.521,o),
(34,404,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 4 1 94 0 0 4 0 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 1 0 1 106 0 0 4 0 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 1 0 1 106 0 0 4 0 106 0 4 0 3 2 4 3 92 0 2 2 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
40 42 38 38 38 36 6 21
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(429,959.667,o),
(417,972,o),
(397,972,cs),
(367.753,972,o),
(291,903.873,o),
(291,877,cs),
(291,863.667,o),
(300.333,854,o),
(315,854,cs),
(341.12,854,o),
(429,908.21,o),
(429,941,cs)
);
},
{
closed = 1;
nodes = (
(112,578.722,o),
(200.506,777,o),
(373,777,cs),
(442.333,777,o),
(497.333,736.667,o),
(536,670,cs),
(574.667,603.333,o),
(596,511.333,o),
(596,410,cs),
(596,290,o),
(571.667,199,o),
(529,139,cs),
(486.333,79,o),
(424.333,48,o),
(351,48,cs),
(209.03,48,o),
(112,183.97,o),
(112,400,cs)
);
},
{
closed = 1;
nodes = (
(37,257.333,o),
(72.667,152,o),
(130,84,cs),
(187.333,16,o),
(265,-16,o),
(349,-16,cs),
(406.601,-16,o),
(488.884,1.884,o),
(560.5,73.5,cs),
(603.833,116.833,o),
(637.167,178.833,o),
(656.5,263.5,cs),
(666.167,305.833,o),
(671,354,o),
(671,408,cs),
(671,642.196,o),
(566.827,838,o),
(367,838,cs),
(257.161,838,o),
(171.042,782.566,o),
(117,697.5,cs),
(64.904,615.497,o),
(37,510.28,o),
(37,404,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 4 1 94 0 0 4 0 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 1 0 1 106 0 0 4 0 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 1 0 1 106 0 0 4 0 106 0 4 0 3 2 4 3 92 0 2 2 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
42 42 40 38 38 36 6 21
CALL[ ]	/* CallFunction */";
};
width = 709;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(401.333,-16,o),
(477.833,8.667,o),
(538.5,74,cs),
(599.167,139.333,o),
(645,245.333,o),
(645,408,cs),
(645,524,o),
(618.333,631.333,o),
(569,710,cs),
(519.667,788.667,o),
(446.667,838,o),
(356,838,cs),
(255.818,838,o),
(174.489,782.482,o),
(121.5,697.5,cs),
(70.201,615.229,o),
(41,513.932,o),
(41,404,cs),
(41,113.183,o),
(189.978,-16,o),
(340,-16,cs)
);
},
{
closed = 1;
nodes = (
(186.741,18,o),
(86,163.386,o),
(86,400,cs),
(86,592.013,o),
(173.824,807,o),
(362,807,cs),
(501.104,807,o),
(600,628.505,o),
(600,410,cs),
(600,279.333,o),
(572.5,182.5,o),
(526.5,116.5,cs),
(480.5,50.5,o),
(415.333,18,o),
(342,18,cs)
);
},
{
closed = 1;
nodes = (
(320.311,875,o),
(410,928.367,o),
(410,950,cs),
(410,968.667,o),
(401.667,972,o),
(391,972,cs),
(371.012,972,o),
(296,910.697,o),
(296,886,cs),
(296,878.667,o),
(298.667,875,o),
(304,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 4 1 94 0 0 4 0 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 1 0 1 106 0 0 4 0 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 1 0 1 106 0 0 4 0 106 0 4 0 3 2 4 3 92 0 2 2 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
40 42 40 38 37 36 6 21
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = Oacute;
unicode = 211;
},
{
glyphname = Obreve;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(130,587.629,o),
(215.554,762,o),
(379,762,cs),
(516.537,762,o),
(593,607.084,o),
(593,410,cs),
(593,180.667,o),
(506.333,63,o),
(357,63,cs),
(291.667,63,o),
(235.167,95.333,o),
(194.5,154,cs),
(153.833,212.667,o),
(130,297.333,o),
(130,400,cs)
);
},
{
closed = 1;
nodes = (
(34,257.333,o),
(68.5,152,o),
(126.5,84,cs),
(184.5,16,o),
(264.333,-16,o),
(355,-16,cs),
(498.998,-16,o),
(689,82.663,o),
(689,408,cs),
(689,641.602,o),
(587.519,838,o),
(375,838,cs),
(258.283,838,o),
(169.604,782.661,o),
(114.5,697.5,cs),
(60.931,614.711,o),
(34,514.521,o),
(34,404,cs)
);
},
{
closed = 1;
nodes = (
(484,967.667,o),
(466,971,o),
(446,971,cs),
(428.667,971,o),
(414,956.667,o),
(414,942,cs),
(414,936.667,o),
(409.5,931.5,o),
(400.5,926.5,cs),
(391.5,921.5,o),
(377.333,919,o),
(358,919,cs),
(327.535,919,o),
(299,926.638,o),
(299,942,cs),
(299,964.667,o),
(285.667,971,o),
(263,971,cs),
(240.333,971,o),
(231,958.333,o),
(231,941,cs),
(231,898.333,o),
(276.333,862,o),
(363,862,cs),
(414.962,862,o),
(484,888.821,o),
(484,941,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
7 1 5 6 5 106 0 6 0 4 2 6 4 91 0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
7 1 5 6 5 106 0 6 0 4 2 6 4 91 0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
36 38 36 40 40 42 38 36 8 23
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(112,578.722,o),
(200.506,777,o),
(373,777,cs),
(442.333,777,o),
(497.333,736.667,o),
(536,670,cs),
(574.667,603.333,o),
(596,511.333,o),
(596,410,cs),
(596,290,o),
(571.667,199,o),
(529,139,cs),
(486.333,79,o),
(424.333,48,o),
(351,48,cs),
(209.03,48,o),
(112,183.97,o),
(112,400,cs)
);
},
{
closed = 1;
nodes = (
(37,257.333,o),
(72.667,152,o),
(130,84,cs),
(187.333,16,o),
(265,-16,o),
(349,-16,cs),
(406.601,-16,o),
(488.884,1.884,o),
(560.5,73.5,cs),
(603.833,116.833,o),
(637.167,178.833,o),
(656.5,263.5,cs),
(666.167,305.833,o),
(671,354,o),
(671,408,cs),
(671,642.196,o),
(566.827,838,o),
(367,838,cs),
(257.161,838,o),
(171.042,782.566,o),
(117,697.5,cs),
(64.904,615.497,o),
(37,510.28,o),
(37,404,cs)
);
},
{
closed = 1;
nodes = (
(478,971,o),
(461,972,o),
(448,972,cs),
(433,972,o),
(422,960,o),
(422,945,cs),
(422,928,o),
(397,910,o),
(358,910,cs),
(328,910,o),
(293,919,o),
(293,945,cs),
(293,965,o),
(284,972,o),
(265,972,cs),
(248,972,o),
(239,963,o),
(239,944,cs),
(239,903,o),
(285,865,o),
(361,865,cs),
(412,865,o),
(478,892,o),
(478,944,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
7 1 5 6 5 106 0 6 0 4 2 6 4 91 0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
7 1 5 6 5 106 0 6 0 4 2 6 4 91 0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
36 38 35 40 42 42 40 37 8 34
CALL[ ]	/* CallFunction */";
};
width = 709;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(401.333,-16,o),
(477.833,8.667,o),
(538.5,74,cs),
(599.167,139.333,o),
(645,245.333,o),
(645,408,cs),
(645,524,o),
(618.333,631.333,o),
(569,710,cs),
(519.667,788.667,o),
(446.667,838,o),
(356,838,cs),
(255.818,838,o),
(174.489,782.482,o),
(121.5,697.5,cs),
(70.201,615.229,o),
(41,513.932,o),
(41,404,cs),
(41,113.183,o),
(189.978,-16,o),
(340,-16,cs)
);
},
{
closed = 1;
nodes = (
(186.741,18,o),
(86,163.386,o),
(86,400,cs),
(86,592.013,o),
(173.824,807,o),
(362,807,cs),
(501.104,807,o),
(600,628.505,o),
(600,410,cs),
(600,279.333,o),
(572.5,182.5,o),
(526.5,116.5,cs),
(480.5,50.5,o),
(415.333,18,o),
(342,18,cs)
);
},
{
closed = 1;
nodes = (
(409.017,875,o),
(467,899.402,o),
(467,948,cs),
(467,969.333,o),
(458.667,972,o),
(448,972,cs),
(436.667,972,o),
(431,964.333,o),
(431,949,cs),
(431,922.229,o),
(392.336,900,o),
(356,900,cs),
(313.691,900,o),
(282,909.669,o),
(282,949,cs),
(282,965,o),
(279.667,972,o),
(265,972,cs),
(253.667,972,o),
(248,964,o),
(248,948,cs),
(248,908,o),
(296,875,o),
(356,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
3 1 1 2 1 106 0 2 0 0 6 2 0 91 0 5 5 6 83 0 6 6 20 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
3 1 1 2 1 106 0 2 0 0 6 2 0 91 0 6 0 5 4 6 5 91 0 4 4 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
40 42 40 38 37 38 35 36 8 23
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = Obreve;
unicode = 334;
},
{
glyphname = Ocircumflex;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(483.667,830,o),
(486,841.667,o),
(486,851,cs),
(486,891.866,o),
(376.605,972,o),
(353,972,cs),
(341.856,972,o),
(307.177,950.45,o),
(280,928,cs),
(249.333,902.667,o),
(221,870.667,o),
(221,844,cs),
(221,837.333,o),
(226,830,o),
(234,830,cs),
(250.72,830,o),
(311.662,853.252,o),
(353,880,c),
(411.555,842.111,o),
(467.41,830,o),
(473,830,cs)
);
},
{
closed = 1;
nodes = (
(130,587.629,o),
(215.554,762,o),
(379,762,cs),
(516.537,762,o),
(593,607.084,o),
(593,410,cs),
(593,180.667,o),
(506.333,63,o),
(357,63,cs),
(291.667,63,o),
(235.167,95.333,o),
(194.5,154,cs),
(153.833,212.667,o),
(130,297.333,o),
(130,400,cs)
);
},
{
closed = 1;
nodes = (
(34,257.333,o),
(68.5,152,o),
(126.5,84,cs),
(184.5,16,o),
(264.333,-16,o),
(355,-16,cs),
(498.998,-16,o),
(689,82.663,o),
(689,408,cs),
(689,641.602,o),
(587.519,838,o),
(375,838,cs),
(258.283,838,o),
(169.604,782.661,o),
(114.5,697.5,cs),
(60.931,614.711,o),
(34,514.521,o),
(34,404,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 5 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 2 5 5 2 94 1 7 2 0 5 4 5 0 4 104 0 4 4 5 83 0 5 5 20 67 0 3 3 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 5 2 106 1 7 2 0 5 4 5 0 4 104 0 4 4 5 83 0 5 5 20 67 0 3 3 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 5 2 106 1 7 2 0 5 4 5 0 4 104 0 5 0 4 3 5 4 92 0 3 3 6 83 0 6 6 21 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
1 0 62 60 52 50 40 38 32 30 19 17 11 9 0 25 1 25 8 15
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(481,847,o),
(484,854.667,o),
(484,864,cs),
(484,900.28,o),
(376.728,972,o),
(353,972,cs),
(331.04,972,o),
(223,901.46,o),
(223,860,cs),
(223,851.333,o),
(226.667,847,o),
(234,847,cs),
(251.679,847,o),
(313.008,874.475,o),
(353,898,c),
(416.994,860.357,o),
(464.663,847,o),
(473,847,cs)
);
},
{
closed = 1;
nodes = (
(112,578.722,o),
(200.506,777,o),
(373,777,cs),
(442.333,777,o),
(497.333,736.667,o),
(536,670,cs),
(574.667,603.333,o),
(596,511.333,o),
(596,410,cs),
(596,290,o),
(571.667,199,o),
(529,139,cs),
(486.333,79,o),
(424.333,48,o),
(351,48,cs),
(209.03,48,o),
(112,183.97,o),
(112,400,cs)
);
},
{
closed = 1;
nodes = (
(37,257.333,o),
(72.667,152,o),
(130,84,cs),
(187.333,16,o),
(265,-16,o),
(349,-16,cs),
(406.601,-16,o),
(488.884,1.884,o),
(560.5,73.5,cs),
(603.833,116.833,o),
(637.167,178.833,o),
(656.5,263.5,cs),
(666.167,305.833,o),
(671,354,o),
(671,408,cs),
(671,642.196,o),
(566.827,838,o),
(367,838,cs),
(257.161,838,o),
(171.042,782.566,o),
(117,697.5,cs),
(64.904,615.497,o),
(37,510.28,o),
(37,404,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 0 5 2 94 1 7 2 0 5 0 106 0 4 4 5 83 0 5 5 20 67 0 3 3 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 2 106 1 7 2 0 5 0 106 0 4 4 5 83 0 5 5 20 67 0 3 3 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 0 2 106 1 7 2 0 5 0 106 0 5 0 4 3 5 4 92 0 3 3 6 83 0 6 6 21 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
1 0 65 63 53 51 41 39 31 29 18 16 11 9 0 24 1 24 8 15
CALL[ ]	/* CallFunction */";
};
width = 709;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(401.333,-16,o),
(477.833,8.667,o),
(538.5,74,cs),
(599.167,139.333,o),
(645,245.333,o),
(645,408,cs),
(645,524,o),
(618.333,631.333,o),
(569,710,cs),
(519.667,788.667,o),
(446.667,838,o),
(356,838,cs),
(255.818,838,o),
(174.489,782.482,o),
(121.5,697.5,cs),
(70.201,615.229,o),
(41,513.932,o),
(41,404,cs),
(41,113.183,o),
(189.978,-16,o),
(340,-16,cs)
);
},
{
closed = 1;
nodes = (
(186.741,18,o),
(86,163.386,o),
(86,400,cs),
(86,592.013,o),
(173.824,807,o),
(362,807,cs),
(501.104,807,o),
(600,628.505,o),
(600,410,cs),
(600,279.333,o),
(572.5,182.5,o),
(526.5,116.5,cs),
(480.5,50.5,o),
(415.333,18,o),
(342,18,cs)
);
},
{
closed = 1;
nodes = (
(241.158,875,o),
(289.069,894.154,o),
(353,928,c),
(417.308,893.955,o),
(465.037,875,o),
(473,875,cs),
(478.333,875,o),
(481,878.667,o),
(481,886,cs),
(481,910.708,o),
(378.596,972,o),
(353,972,cs),
(329.629,972,o),
(226,910.79,o),
(226,886,cs),
(226,878.667,o),
(228.667,875,o),
(234,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 0 5 2 94 1 7 2 0 5 0 106 0 4 4 5 83 0 5 5 20 67 0 3 3 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 2 106 1 7 2 0 5 0 106 0 4 4 5 83 0 5 5 20 67 0 3 3 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 0 2 106 1 7 2 0 5 0 106 0 5 0 4 3 5 4 92 0 3 3 6 83 0 6 6 21 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
1 0 62 60 52 50 40 38 30 28 18 16 11 9 0 23 1 23 8 15
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = Ocircumflex;
unicode = 212;
},
{
glyphname = Odieresis;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(202,868.333,o),
(228.667,841,o),
(262,841,cs),
(293.371,841,o),
(328,855.733,o),
(328,911,cs),
(328,947,o),
(299.667,972,o),
(269,972,cs),
(221.823,972,o),
(202,930.29,o),
(202,907,cs)
);
},
{
closed = 1;
nodes = (
(409,857.333,o),
(435.667,830,o),
(469,830,cs),
(500.371,830,o),
(535,844.733,o),
(535,900,cs),
(535,937.333,o),
(506.667,961,o),
(476,961,cs),
(428.823,961,o),
(409,919.29,o),
(409,896,cs)
);
},
{
closed = 1;
nodes = (
(130,587.629,o),
(215.554,762,o),
(379,762,cs),
(516.537,762,o),
(593,607.084,o),
(593,410,cs),
(593,180.667,o),
(506.333,63,o),
(357,63,cs),
(291.667,63,o),
(235.167,95.333,o),
(194.5,154,cs),
(153.833,212.667,o),
(130,297.333,o),
(130,400,cs)
);
},
{
closed = 1;
nodes = (
(34,257.333,o),
(68.5,152,o),
(126.5,84,cs),
(184.5,16,o),
(264.333,-16,o),
(355,-16,cs),
(498.998,-16,o),
(689,82.663,o),
(689,408,cs),
(689,641.602,o),
(587.519,838,o),
(375,838,cs),
(258.283,838,o),
(169.604,782.661,o),
(114.5,697.5,cs),
(60.931,614.711,o),
(34,514.521,o),
(34,404,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
2 1 0 3 1 1 6 0 1 91 0 5 5 6 83 0 6 6 20 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 1 6 0 1 91 0 2 0 3 5 2 3 91 0 5 5 6 83 0 6 6 20 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 0 1 6 0 1 91 0 2 0 3 5 2 3 91 0 6 0 5 4 6 5 91 0 4 4 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
40 42 38 38 38 38 38 36 8 23
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(207,882.667,o),
(229.333,859,o),
(256,859,cs),
(281.333,859,o),
(312,872,o),
(312,920,cs),
(312,950.667,o),
(289.667,972,o),
(263,972,cs),
(224.685,972,o),
(207,936.643,o),
(207,916,cs)
);
},
{
closed = 1;
nodes = (
(414,870.667,o),
(436.333,847,o),
(463,847,cs),
(488.333,847,o),
(519,860,o),
(519,908,cs),
(519,938.667,o),
(496.667,960,o),
(470,960,cs),
(431.685,960,o),
(414,924.643,o),
(414,904,cs)
);
},
{
closed = 1;
nodes = (
(112,578.722,o),
(200.506,777,o),
(373,777,cs),
(442.333,777,o),
(497.333,736.667,o),
(536,670,cs),
(574.667,603.333,o),
(596,511.333,o),
(596,410,cs),
(596,290,o),
(571.667,199,o),
(529,139,cs),
(486.333,79,o),
(424.333,48,o),
(351,48,cs),
(209.03,48,o),
(112,183.97,o),
(112,400,cs)
);
},
{
closed = 1;
nodes = (
(37,257.333,o),
(72.667,152,o),
(130,84,cs),
(187.333,16,o),
(265,-16,o),
(349,-16,cs),
(406.601,-16,o),
(488.884,1.884,o),
(560.5,73.5,cs),
(603.833,116.833,o),
(637.167,178.833,o),
(656.5,263.5,cs),
(666.167,305.833,o),
(671,354,o),
(671,408,cs),
(671,642.196,o),
(566.827,838,o),
(367,838,cs),
(257.161,838,o),
(171.042,782.566,o),
(117,697.5,cs),
(64.904,615.497,o),
(37,510.28,o),
(37,404,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 6 2 3 91 0 5 5 6 83 0 6 6 20 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 6 2 3 91 0 6 0 5 4 6 5 91 0 4 4 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
42 42 40 38 36 38 36 36 8 23
CALL[ ]	/* CallFunction */";
};
width = 709;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(401.333,-16,o),
(477.833,8.667,o),
(538.5,74,cs),
(599.167,139.333,o),
(645,245.333,o),
(645,408,cs),
(645,524,o),
(618.333,631.333,o),
(569,710,cs),
(519.667,788.667,o),
(446.667,838,o),
(356,838,cs),
(255.818,838,o),
(174.489,782.482,o),
(121.5,697.5,cs),
(70.201,615.229,o),
(41,513.932,o),
(41,404,cs),
(41,113.183,o),
(189.978,-16,o),
(340,-16,cs)
);
},
{
closed = 1;
nodes = (
(186.741,18,o),
(86,163.386,o),
(86,400,cs),
(86,592.013,o),
(173.824,807,o),
(362,807,cs),
(501.104,807,o),
(600,628.505,o),
(600,410,cs),
(600,279.333,o),
(572.5,182.5,o),
(526.5,116.5,cs),
(480.5,50.5,o),
(415.333,18,o),
(342,18,cs)
);
},
{
closed = 1;
nodes = (
(266.667,889,o),
(289,899,o),
(289,935,cs),
(289,957.667,o),
(273.667,972,o),
(255,972,cs),
(227.258,972,o),
(214,944.895,o),
(214,931,cs),
(214,907,o),
(229.333,889,o),
(248,889,cs)
);
},
{
closed = 1;
nodes = (
(473.667,875,o),
(496,885,o),
(496,921,cs),
(496,943.667,o),
(480.667,958,o),
(462,958,cs),
(434.258,958,o),
(421,930.895,o),
(421,917,cs),
(421,893,o),
(436.333,875,o),
(455,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 6 2 3 91 0 5 5 6 83 0 6 6 20 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 6 2 3 91 0 6 0 5 4 6 5 91 0 4 4 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
40 42 40 38 36 38 36 36 8 23
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = Odieresis;
unicode = 214;
},
{
glyphname = Ograve;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(290,896.957,o),
(376.577,841,o),
(410,841,cs),
(430,841,o),
(445,856,o),
(445,872,cs),
(445,897.591,o),
(371.088,972,o),
(331,972,cs),
(304.333,972,o),
(290,953.333,o),
(290,936,cs)
);
},
{
closed = 1;
nodes = (
(130,587.629,o),
(215.554,762,o),
(379,762,cs),
(516.537,762,o),
(593,607.084,o),
(593,410,cs),
(593,180.667,o),
(506.333,63,o),
(357,63,cs),
(291.667,63,o),
(235.167,95.333,o),
(194.5,154,cs),
(153.833,212.667,o),
(130,297.333,o),
(130,400,cs)
);
},
{
closed = 1;
nodes = (
(34,257.333,o),
(68.5,152,o),
(126.5,84,cs),
(184.5,16,o),
(264.333,-16,o),
(355,-16,cs),
(498.998,-16,o),
(689,82.663,o),
(689,408,cs),
(689,641.602,o),
(587.519,838,o),
(375,838,cs),
(258.283,838,o),
(169.604,782.661,o),
(114.5,697.5,cs),
(60.931,614.711,o),
(34,514.521,o),
(34,404,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 1 4 0 94 0 1 4 1 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 1 0 106 0 1 4 1 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 0 1 0 106 0 1 4 1 106 0 4 0 3 2 4 3 92 0 2 2 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
40 42 38 40 38 34 6 21
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(293,909.521,o),
(378.059,854,o),
(407,854,cs),
(421.667,854,o),
(431,863.667,o),
(431,877,cs),
(431,903.873,o),
(354.247,972,o),
(325,972,cs),
(305,972,o),
(293,959.667,o),
(293,941,cs)
);
},
{
closed = 1;
nodes = (
(112,578.722,o),
(200.506,777,o),
(373,777,cs),
(442.333,777,o),
(497.333,736.667,o),
(536,670,cs),
(574.667,603.333,o),
(596,511.333,o),
(596,410,cs),
(596,290,o),
(571.667,199,o),
(529,139,cs),
(486.333,79,o),
(424.333,48,o),
(351,48,cs),
(209.03,48,o),
(112,183.97,o),
(112,400,cs)
);
},
{
closed = 1;
nodes = (
(37,257.333,o),
(72.667,152,o),
(130,84,cs),
(187.333,16,o),
(265,-16,o),
(349,-16,cs),
(406.601,-16,o),
(488.884,1.884,o),
(560.5,73.5,cs),
(603.833,116.833,o),
(637.167,178.833,o),
(656.5,263.5,cs),
(666.167,305.833,o),
(671,354,o),
(671,408,cs),
(671,642.196,o),
(566.827,838,o),
(367,838,cs),
(257.161,838,o),
(171.042,782.566,o),
(117,697.5,cs),
(64.904,615.497,o),
(37,510.28,o),
(37,404,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 1 4 0 94 0 1 4 1 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 1 0 106 0 1 4 1 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 0 1 0 106 0 1 4 1 106 0 4 0 3 2 4 3 92 0 2 2 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
42 42 40 40 38 34 6 21
CALL[ ]	/* CallFunction */";
};
width = 709;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(401.333,-16,o),
(477.833,8.667,o),
(538.5,74,cs),
(599.167,139.333,o),
(645,245.333,o),
(645,408,cs),
(645,524,o),
(618.333,631.333,o),
(569,710,cs),
(519.667,788.667,o),
(446.667,838,o),
(356,838,cs),
(255.818,838,o),
(174.489,782.482,o),
(121.5,697.5,cs),
(70.201,615.229,o),
(41,513.932,o),
(41,404,cs),
(41,113.183,o),
(189.978,-16,o),
(340,-16,cs)
);
},
{
closed = 1;
nodes = (
(186.741,18,o),
(86,163.386,o),
(86,400,cs),
(86,592.013,o),
(173.824,807,o),
(362,807,cs),
(501.104,807,o),
(600,628.505,o),
(600,410,cs),
(600,279.333,o),
(572.5,182.5,o),
(526.5,116.5,cs),
(480.5,50.5,o),
(415.333,18,o),
(342,18,cs)
);
},
{
closed = 1;
nodes = (
(408.333,875,o),
(411,878.667,o),
(411,886,cs),
(411,910.697,o),
(335.988,972,o),
(316,972,cs),
(305.333,972,o),
(297,968.667,o),
(297,950,cs),
(297,928.367,o),
(386.689,875,o),
(403,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 1 4 0 94 0 1 4 1 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 1 0 106 0 1 4 1 106 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 0 1 0 106 0 1 4 1 106 0 4 0 3 2 4 3 92 0 2 2 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
40 42 40 40 37 34 6 21
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = Ograve;
unicode = 210;
},
{
glyphname = Ohungarumlaut;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(368,953.333,o),
(353.667,972,o),
(327,972,cs),
(289.323,972,o),
(213,899.498,o),
(213,872,cs),
(213,856,o),
(227.667,841,o),
(249,841,cs),
(282.368,841,o),
(368,897.284,o),
(368,936,cs)
);
},
{
closed = 1;
nodes = (
(532,953.333,o),
(517.667,972,o),
(491,972,cs),
(452.545,972,o),
(378,898.769,o),
(378,872,cs),
(378,856,o),
(391.667,841,o),
(413,841,cs),
(446.368,841,o),
(532,897.284,o),
(532,936,cs)
);
},
{
closed = 1;
nodes = (
(130,587.629,o),
(215.554,762,o),
(379,762,cs),
(516.537,762,o),
(593,607.084,o),
(593,410,cs),
(593,180.667,o),
(506.333,63,o),
(357,63,cs),
(291.667,63,o),
(235.167,95.333,o),
(194.5,154,cs),
(153.833,212.667,o),
(130,297.333,o),
(130,400,cs)
);
},
{
closed = 1;
nodes = (
(34,257.333,o),
(68.5,152,o),
(126.5,84,cs),
(184.5,16,o),
(264.333,-16,o),
(355,-16,cs),
(498.998,-16,o),
(689,82.663,o),
(689,408,cs),
(689,641.602,o),
(587.519,838,o),
(375,838,cs),
(258.283,838,o),
(169.604,782.661,o),
(114.5,697.5,cs),
(60.931,614.711,o),
(34,514.521,o),
(34,404,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
3 1 1 0 6 1 94 2 1 0 6 0 106 0 5 5 6 83 0 6 6 20 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
3 1 1 0 1 106 2 1 0 6 0 106 0 5 5 6 83 0 6 6 20 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
3 1 1 0 1 106 2 1 0 6 0 106 0 6 0 5 4 6 5 92 0 4 4 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
40 42 38 38 38 38 38 36 8 23
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(359,959.667,o),
(347,972,o),
(327,972,cs),
(297.753,972,o),
(221,903.873,o),
(221,877,cs),
(221,863.667,o),
(230.333,854,o),
(245,854,cs),
(271.12,854,o),
(359,908.21,o),
(359,941,cs)
);
},
{
closed = 1;
nodes = (
(519,959.667,o),
(507,972,o),
(487,972,cs),
(457.753,972,o),
(381,903.873,o),
(381,877,cs),
(381,863.667,o),
(390.333,854,o),
(405,854,cs),
(431.12,854,o),
(519,908.21,o),
(519,941,cs)
);
},
{
closed = 1;
nodes = (
(112,578.722,o),
(200.506,777,o),
(373,777,cs),
(442.333,777,o),
(497.333,736.667,o),
(536,670,cs),
(574.667,603.333,o),
(596,511.333,o),
(596,410,cs),
(596,290,o),
(571.667,199,o),
(529,139,cs),
(486.333,79,o),
(424.333,48,o),
(351,48,cs),
(209.03,48,o),
(112,183.97,o),
(112,400,cs)
);
},
{
closed = 1;
nodes = (
(37,257.333,o),
(72.667,152,o),
(130,84,cs),
(187.333,16,o),
(265,-16,o),
(349,-16,cs),
(406.601,-16,o),
(488.884,1.884,o),
(560.5,73.5,cs),
(603.833,116.833,o),
(637.167,178.833,o),
(656.5,263.5,cs),
(666.167,305.833,o),
(671,354,o),
(671,408,cs),
(671,642.196,o),
(566.827,838,o),
(367,838,cs),
(257.161,838,o),
(171.042,782.566,o),
(117,697.5,cs),
(64.904,615.497,o),
(37,510.28,o),
(37,404,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
3 1 1 0 6 1 94 2 1 0 6 0 106 0 5 5 6 83 0 6 6 20 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
3 1 1 0 1 106 2 1 0 6 0 106 0 5 5 6 83 0 6 6 20 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
3 1 1 0 1 106 2 1 0 6 0 106 0 6 0 5 4 6 5 92 0 4 4 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
42 42 40 38 38 38 38 36 8 23
CALL[ ]	/* CallFunction */";
};
width = 709;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(401.333,-16,o),
(477.833,8.667,o),
(538.5,74,cs),
(599.167,139.333,o),
(645,245.333,o),
(645,408,cs),
(645,524,o),
(618.333,631.333,o),
(569,710,cs),
(519.667,788.667,o),
(446.667,838,o),
(356,838,cs),
(255.818,838,o),
(174.489,782.482,o),
(121.5,697.5,cs),
(70.201,615.229,o),
(41,513.932,o),
(41,404,cs),
(41,113.183,o),
(189.978,-16,o),
(340,-16,cs)
);
},
{
closed = 1;
nodes = (
(186.741,18,o),
(86,163.386,o),
(86,400,cs),
(86,592.013,o),
(173.824,807,o),
(362,807,cs),
(501.104,807,o),
(600,628.505,o),
(600,410,cs),
(600,279.333,o),
(572.5,182.5,o),
(526.5,116.5,cs),
(480.5,50.5,o),
(415.333,18,o),
(342,18,cs)
);
},
{
closed = 1;
nodes = (
(256.311,875,o),
(346,928.367,o),
(346,950,cs),
(346,968.667,o),
(337.667,972,o),
(327,972,cs),
(307.012,972,o),
(232,910.697,o),
(232,886,cs),
(232,878.667,o),
(234.667,875,o),
(240,875,cs)
);
},
{
closed = 1;
nodes = (
(410.311,875,o),
(500,928.367,o),
(500,950,cs),
(500,968.667,o),
(491.667,972,o),
(481,972,cs),
(461.012,972,o),
(386,910.697,o),
(386,886,cs),
(386,878.667,o),
(388.667,875,o),
(394,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
3 1 1 0 6 1 94 2 1 0 6 0 106 0 5 5 6 83 0 6 6 20 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
3 1 1 0 1 106 2 1 0 6 0 106 0 5 5 6 83 0 6 6 20 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
3 1 1 0 1 106 2 1 0 6 0 106 0 6 0 5 4 6 5 92 0 4 4 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
40 42 40 38 37 38 37 36 8 23
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = Ohungarumlaut;
unicode = 336;
},
{
glyphname = Omacron;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(476,965,o),
(457.667,964.5,o),
(437,963.5,cs),
(416.333,962.5,o),
(392,962,o),
(364,962,cs),
(321.698,962,o),
(273.437,964,o),
(243,964,cs),
(220.333,964,o),
(210,943.667,o),
(210,925,cs),
(210,906.333,o),
(224.333,885,o),
(243,885,cs),
(313.305,885,o),
(410.446,886,o),
(484,886,cs),
(512.782,886,o),
(520,912.801,o),
(520,928,cs),
(520,948,o),
(506.667,965,o),
(492,965,cs)
);
},
{
closed = 1;
nodes = (
(130,587.629,o),
(215.554,762,o),
(379,762,cs),
(516.537,762,o),
(593,607.084,o),
(593,410,cs),
(593,180.667,o),
(506.333,63,o),
(357,63,cs),
(291.667,63,o),
(235.167,95.333,o),
(194.5,154,cs),
(153.833,212.667,o),
(130,297.333,o),
(130,400,cs)
);
},
{
closed = 1;
nodes = (
(34,257.333,o),
(68.5,152,o),
(126.5,84,cs),
(184.5,16,o),
(264.333,-16,o),
(355,-16,cs),
(498.998,-16,o),
(689,82.663,o),
(689,408,cs),
(689,641.602,o),
(587.519,838,o),
(375,838,cs),
(258.283,838,o),
(169.604,782.661,o),
(114.5,697.5,cs),
(60.931,614.711,o),
(34,514.521,o),
(34,404,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
6 1 0 0 1 4 0 1 91 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
6 1 0 0 1 4 0 1 91 0 4 0 3 2 4 3 91 0 2 2 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
1 0 63 61 53 51 41 39 33 31 14 7 0 26 1 18 7 15
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(112,578.722,o),
(200.506,777,o),
(373,777,cs),
(442.333,777,o),
(497.333,736.667,o),
(536,670,cs),
(574.667,603.333,o),
(596,511.333,o),
(596,410,cs),
(596,290,o),
(571.667,199,o),
(529,139,cs),
(486.333,79,o),
(424.333,48,o),
(351,48,cs),
(209.03,48,o),
(112,183.97,o),
(112,400,cs)
);
},
{
closed = 1;
nodes = (
(37,257.333,o),
(72.667,152,o),
(130,84,cs),
(187.333,16,o),
(265,-16,o),
(349,-16,cs),
(406.601,-16,o),
(488.884,1.884,o),
(560.5,73.5,cs),
(603.833,116.833,o),
(637.167,178.833,o),
(656.5,263.5,cs),
(666.167,305.833,o),
(671,354,o),
(671,408,cs),
(671,642.196,o),
(566.827,838,o),
(367,838,cs),
(257.161,838,o),
(171.042,782.566,o),
(117,697.5,cs),
(64.904,615.497,o),
(37,510.28,o),
(37,404,cs)
);
},
{
closed = 1;
nodes = (
(477,947,o),
(459,947,o),
(438,946,cs),
(417,945,o),
(393,944,o),
(365,944,cs),
(323,944,o),
(274,946,o),
(244,946,cs),
(225,946,o),
(218,931,o),
(218,916,cs),
(218,901,o),
(229,885,o),
(244,885,cs),
(314,885,o),
(411,886,o),
(485,886,cs),
(508,886,o),
(514,908,o),
(514,919,cs),
(514,934,o),
(504,947,o),
(493,947,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
6 1 4 0 5 2 4 5 91 0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
6 1 4 0 5 2 4 5 91 0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
46 45 57 50 45 69 46 61 42 42 40 37 7 30
CALL[ ]	/* CallFunction */";
};
width = 709;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(401.333,-16,o),
(477.833,8.667,o),
(538.5,74,cs),
(599.167,139.333,o),
(645,245.333,o),
(645,408,cs),
(645,524,o),
(618.333,631.333,o),
(569,710,cs),
(519.667,788.667,o),
(446.667,838,o),
(356,838,cs),
(255.818,838,o),
(174.489,782.482,o),
(121.5,697.5,cs),
(70.201,615.229,o),
(41,513.932,o),
(41,404,cs),
(41,113.183,o),
(189.978,-16,o),
(340,-16,cs)
);
},
{
closed = 1;
nodes = (
(186.741,18,o),
(86,163.386,o),
(86,400,cs),
(86,592.013,o),
(173.824,807,o),
(362,807,cs),
(501.104,807,o),
(600,628.505,o),
(600,410,cs),
(600,279.333,o),
(572.5,182.5,o),
(526.5,116.5,cs),
(480.5,50.5,o),
(415.333,18,o),
(342,18,cs)
);
},
{
closed = 1;
nodes = (
(315.305,875,o),
(412.446,876,o),
(486,876,cs),
(500.667,876,o),
(505,887.333,o),
(505,894,cs),
(505,900.667,o),
(499.333,907,o),
(494,907,cs),
(478,907,o),
(459.667,906.5,o),
(439,905.5,cs),
(418.333,904.5,o),
(394,904,o),
(366,904,cs),
(323.698,904,o),
(275.437,906,o),
(245,906,cs),
(234.333,906,o),
(229,897.667,o),
(229,891,cs),
(229,884.333,o),
(235.667,875,o),
(245,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
6 1 4 0 5 2 4 5 91 0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
6 1 4 0 5 2 4 5 91 0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
43 42 54 47 42 66 43 58 40 42 40 36 7 19
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = Omacron;
unicode = 332;
},
{
glyphname = Oogonek;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(32,125.154,o),
(157.659,-1.747,o),
(322,-15,c),
(292.584,-31.342,o),
(261,-57.867,o),
(261,-94,cs),
(261,-145.579,o),
(321.091,-169,o),
(371,-169,cs),
(423.345,-169,o),
(454,-139.646,o),
(454,-116,cs),
(454,-104,o),
(442.333,-92,o),
(429,-92,cs),
(409.449,-92,o),
(410.136,-116,o),
(369,-116,cs),
(354.333,-116,o),
(340,-109.667,o),
(340,-95,cs),
(340,-68.333,o),
(353.333,-32.333,o),
(380,-15,c),
(516.648,-4.489,o),
(687,102.096,o),
(687,408,cs),
(687,641.602,o),
(585.519,838,o),
(373,838,cs),
(256.283,838,o),
(167.604,782.661,o),
(112.5,697.5,cs),
(58.931,614.711,o),
(32,514.521,o),
(32,404,cs)
);
},
{
closed = 1;
nodes = (
(128,587.629,o),
(213.554,762,o),
(377,762,cs),
(514.537,762,o),
(591,607.084,o),
(591,410,cs),
(591,180.667,o),
(504.333,63,o),
(355,63,cs),
(289.667,63,o),
(233.167,95.333,o),
(192.5,154,cs),
(151.833,212.667,o),
(128,297.333,o),
(128,400,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
46 1 2 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 5 2 5 4 2 104 0 2 1 5 2 1 102 0 1 0 3 1 3 88 0 5 5 0 83 0 0 0 20 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 5 2 5 4 2 104 0 2 1 5 2 1 102 0 0 0 5 4 0 5 91 0 1 3 3 1 79 0 1 1 3 84 0 3 1 3 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
65 63 57 55 38 35 46 38 6 19
CALL[ ]	/* CallFunction */";
};
width = 722;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(112,578.722,o),
(200.506,777,o),
(373,777,cs),
(442.333,777,o),
(497.333,736.667,o),
(536,670,cs),
(574.667,603.333,o),
(596,511.333,o),
(596,410,cs),
(596,290,o),
(571.667,199,o),
(529,139,cs),
(486.333,79,o),
(424.333,48,o),
(351,48,cs),
(209.03,48,o),
(112,183.97,o),
(112,400,cs)
);
},
{
closed = 1;
nodes = (
(37,257.333,o),
(72.667,152,o),
(130,84,cs),
(187.333,16,o),
(265,-16,o),
(349,-16,cs),
(406.601,-16,o),
(488.884,1.884,o),
(560.5,73.5,cs),
(603.833,116.833,o),
(637.167,178.833,o),
(656.5,263.5,cs),
(666.167,305.833,o),
(671,354,o),
(671,408,cs),
(671,642.196,o),
(566.827,838,o),
(367,838,cs),
(257.161,838,o),
(171.042,782.566,o),
(117,697.5,cs),
(64.904,615.497,o),
(37,510.28,o),
(37,404,cs)
);
},
{
closed = 1;
nodes = (
(323,-12,o),
(311,-19,o),
(300,-28,cs),
(281,-43,o),
(264,-64,o),
(264,-95,cs),
(264,-138,o),
(306,-168,o),
(365,-168,cs),
(413,-168,o),
(443,-127,o),
(443,-117,cs),
(443,-106,o),
(437,-95,o),
(422,-95,cs),
(418,-95,o),
(414,-97,o),
(409,-101,cs),
(404,-106,o),
(398,-111,o),
(393,-116,cs),
(387,-122,o),
(376,-125,o),
(359,-125,cs),
(343,-125,o),
(328,-110,o),
(328,-94,cs),
(328,-75,o),
(342,-21,o),
(387,-6,c),
(337,-5,l),
(337,-5,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 0 1 7 7 0 96 0 5 3 4 3 5 4 104 0 4 0 6 4 6 87 0 1 1 2 83 0 2 2 20 67 8 1 7 7 3 84 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 1 7 1 0 7 104 0 5 3 4 3 5 4 104 0 4 0 6 4 6 87 0 1 1 2 83 0 2 2 20 67 8 1 7 7 3 84 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 0 1 7 1 0 7 104 0 5 3 4 3 5 4 104 0 2 0 1 0 2 1 91 0 4 0 6 4 6 87 8 1 7 7 3 84 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
45 45 45 74 45 74 38 35 43 42 42 40 37 9 33
CALL[ ]	/* CallFunction */";
};
width = 707;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(398.13,-169,o),
(428,-127.791,o),
(428,-118,cs),
(428,-110,o),
(426,-102,o),
(414,-102,cs),
(394.96,-102,o),
(388.683,-142,o),
(352,-142,cs),
(321.028,-142,o),
(313,-112.466,o),
(313,-95,cs),
(313,-80.842,o),
(318.883,-36.61,o),
(354,-15,c),
(415.333,-11,o),
(487.667,16.667,o),
(545,82,cs),
(602.333,147.333,o),
(644,252,o),
(644,408,cs),
(644,524,o),
(617.333,631.333,o),
(568,710,cs),
(518.667,788.667,o),
(445.667,838,o),
(355,838,cs),
(254.818,838,o),
(173.489,782.482,o),
(120.5,697.5,cs),
(69.201,615.229,o),
(40,513.932,o),
(40,404,cs),
(40,262.667,o),
(75,161.167,o),
(127,92.5,cs),
(179,23.833,o),
(249.333,-9.667,o),
(320,-15,c),
(300,-28.333,o),
(269,-54.667,o),
(269,-96,cs),
(269,-138.667,o),
(303.333,-169,o),
(350,-169,cs)
);
},
{
closed = 1;
nodes = (
(185.741,18,o),
(85,163.386,o),
(85,400,cs),
(85,592.013,o),
(172.824,807,o),
(361,807,cs),
(500.104,807,o),
(599,628.505,o),
(599,410,cs),
(599,279.333,o),
(571.5,182.5,o),
(525.5,116.5,cs),
(479.5,50.5,o),
(414.333,18,o),
(341,18,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
46 1 3 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 3 1 2 1 3 2 104 0 2 0 4 2 4 87 0 6 6 0 83 0 0 0 20 67 0 5 5 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 3 1 2 1 3 2 104 0 0 0 6 5 0 6 91 0 2 0 4 2 4 87 0 5 5 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
40 46 38 35 41 24 38 7 22
CALL[ ]	/* CallFunction */";
};
width = 685;
}
);
note = Oogonek;
unicode = 490;
},
{
glyphname = Oslash;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(109.667,21.333,o),
(109,16.667,o),
(109,14,cs),
(109,-7.333,o),
(131.333,-19,o),
(146,-19,cs),
(172.667,-19,o),
(190.333,-9.667,o),
(197,5,cs),
(205,19,l),
(249.667,-4.333,o),
(299.667,-16,o),
(355,-16,cs),
(498.998,-16,o),
(689,82.663,o),
(689,408,cs),
(689,541.333,o),
(656,661,o),
(588,741,c),
(602,768,l),
(607.333,776,o),
(616,796.333,o),
(616,807,cs),
(616,823,o),
(599,838,o),
(571,838,cs),
(548.333,838,o),
(537.333,830.667,o),
(520,800,c),
(478.667,824,o),
(431,838,o),
(375,838,cs),
(258.283,838,o),
(169.604,782.661,o),
(114.5,697.5,cs),
(60.931,614.711,o),
(34,514.521,o),
(34,404,cs),
(34,248,o),
(72,141,o),
(136,73,c),
(111,24,l),
(111,24,l)
);
},
{
closed = 1;
nodes = (
(130,587.629,o),
(215.554,762,o),
(379,762,cs),
(419,762,o),
(452.667,747.667,o),
(482,725,c),
(454.371,669.741,o),
(436.158,629.778,o),
(418.5,595.5,cs),
(400.532,560.621,o),
(371.392,506.801,o),
(326,423,cs),
(186,166,l),
(151.333,224.667,o),
(130,304,o),
(130,400,cs)
);
},
{
closed = 1;
nodes = (
(593,180.667,o),
(506.333,63,o),
(357,63,cs),
(315.667,63,o),
(279,75,o),
(247,99,c),
(541,653,l),
(575.667,589,o),
(593,504.667,o),
(593,410,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
13 1 4 0 67 66 55 47 23 0 6 5 4 33 1 2 5 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 4 4 0 83 1 1 0 0 20 67 0 5 5 2 83 3 1 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
1 1 0 0 4 5 0 4 91 0 5 5 2 83 3 1 2 2 21 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
70 68 59 57 36 45 36 41 6 19
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(112,578.722,o),
(200.506,777,o),
(373,777,cs),
(442.333,777,o),
(497.333,736.667,o),
(536,670,cs),
(574.667,603.333,o),
(596,511.333,o),
(596,410,cs),
(596,290,o),
(571.667,199,o),
(529,139,cs),
(486.333,79,o),
(424.333,48,o),
(351,48,cs),
(209.03,48,o),
(112,183.97,o),
(112,400,cs)
);
},
{
closed = 1;
nodes = (
(37,257.333,o),
(72.667,152,o),
(130,84,cs),
(187.333,16,o),
(265,-16,o),
(349,-16,cs),
(406.601,-16,o),
(488.884,1.884,o),
(560.5,73.5,cs),
(603.833,116.833,o),
(637.167,178.833,o),
(656.5,263.5,cs),
(666.167,305.833,o),
(671,354,o),
(671,408,cs),
(671,642.196,o),
(566.827,838,o),
(367,838,cs),
(257.161,838,o),
(171.042,782.566,o),
(117,697.5,cs),
(64.904,615.497,o),
(37,510.28,o),
(37,404,cs)
);
},
{
closed = 1;
nodes = (
(111,16,o),
(110,13,o),
(110,9,cs),
(110,-6,o),
(126,-19,o),
(138,-19,cs),
(157,-19,o),
(173,-10,o),
(180,5,cs),
(585,768,ls),
(590,777,o),
(599,796,o),
(599,807,cs),
(599,815,o),
(598,831,o),
(574,831,cs),
(542,831,o),
(530,815,o),
(510,774,cs),
(471,694,o),
(463,677,o),
(436,621,cs),
(417,582,o),
(385,525,o),
(330,423,cs),
(298,364,o),
(279,331,o),
(267,311,cs),
(257,294,o),
(247,278,o),
(241,267,cs),
(200,194,o),
(186,166,o),
(112,18,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 2 83 4 1 2 2 20 67 0 0 0 3 83 5 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 4 4 20 67 0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 5 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 4 2 1 2 4 1 104 0 2 0 1 0 2 1 91 0 0 0 3 83 5 1 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
75 73 65 63 42 42 40 37 6 30
CALL[ ]	/* CallFunction */";
};
width = 709;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(142,-19,o),
(145.667,-13.667,o),
(155,5,cs),
(175,43,l),
(224.333,3,o),
(281.333,-16,o),
(340,-16,cs),
(401.333,-16,o),
(477.833,8.667,o),
(538.5,74,cs),
(599.167,139.333,o),
(645,245.333,o),
(645,408,cs),
(645,541.333,o),
(610,661,o),
(546,741,c),
(560,768,ls),
(565.333,778.667,o),
(574,796.333,o),
(574,807,cs),
(574,815,o),
(571,821,o),
(559,821,cs),
(538.999,821,o),
(521.047,792.141,o),
(515,774,c),
(471,814,o),
(418.667,838,o),
(356,838,cs),
(255.818,838,o),
(174.489,782.482,o),
(121.5,697.5,cs),
(70.201,615.229,o),
(41,513.932,o),
(41,404,cs),
(41,246.667,o),
(82.333,139,o),
(145,71,c),
(117,18,l),
(114.333,11.333,o),
(112,1,o),
(112,-7,cs),
(112,-15,o),
(116.667,-19,o),
(126,-19,cs)
);
},
{
closed = 1;
nodes = (
(113.333,176,o),
(86,274.667,o),
(86,400,cs),
(86,592.013,o),
(173.824,807,o),
(362,807,cs),
(412.667,807,o),
(459.333,781.667,o),
(498,739,c),
(476.562,694.784,o),
(455.736,652.471,o),
(435.5,612,cs),
(413.534,568.068,o),
(391.313,525.916,o),
(335,423,cs),
(302.272,362.058,o),
(278.794,320.919,o),
(266.5,298.5,cs),
(260.833,288.167,o),
(256.167,279.833,o),
(252.5,273.5,cs),
(239.608,251.232,o),
(210.236,195.998,o),
(164,108,c)
);
},
{
closed = 1;
nodes = (
(284.667,18,o),
(235,37.333,o),
(193,76,c),
(525,703,l),
(571.667,629.667,o),
(600,527.333,o),
(600,410,cs),
(600,279.333,o),
(572.5,182.5,o),
(526.5,116.5,cs),
(480.5,50.5,o),
(415.333,18,o),
(342,18,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
75 74 63 49 36 25 13 0 8 5 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 1 1 12 67 0 4 4 0 83 0 0 0 20 67 0 5 5 2 83 3 1 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 4 5 0 4 91 0 1 1 14 67 0 5 5 2 83 3 1 2 2 21 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
78 76 67 65 37 45 38 41 6 19
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = Oslash;
unicode = 216;
},
{
glyphname = Oslashacute;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(109.667,21.333,o),
(109,16.667,o),
(109,14,cs),
(109,-7.333,o),
(131.333,-19,o),
(146,-19,cs),
(172.667,-19,o),
(190.333,-9.667,o),
(197,5,cs),
(205,19,l),
(249.667,-4.333,o),
(299.667,-16,o),
(355,-16,cs),
(498.998,-16,o),
(689,82.663,o),
(689,408,cs),
(689,541.333,o),
(656,661,o),
(588,741,c),
(602,768,l),
(607.333,776,o),
(616,796.333,o),
(616,807,cs),
(616,823,o),
(599,838,o),
(571,838,cs),
(548.333,838,o),
(537.333,830.667,o),
(520,800,c),
(478.667,824,o),
(431,838,o),
(375,838,cs),
(258.283,838,o),
(169.604,782.661,o),
(114.5,697.5,cs),
(60.931,614.711,o),
(34,514.521,o),
(34,404,cs),
(34,248,o),
(72,141,o),
(136,73,c),
(111,24,l),
(111,24,l)
);
},
{
closed = 1;
nodes = (
(130,587.629,o),
(215.554,762,o),
(379,762,cs),
(419,762,o),
(452.667,747.667,o),
(482,725,c),
(454.371,669.741,o),
(436.158,629.778,o),
(418.5,595.5,cs),
(400.532,560.621,o),
(371.392,506.801,o),
(326,423,cs),
(186,166,l),
(151.333,224.667,o),
(130,304,o),
(130,400,cs)
);
},
{
closed = 1;
nodes = (
(593,180.667,o),
(506.333,63,o),
(357,63,cs),
(315.667,63,o),
(279,75,o),
(247,99,c),
(541,653,l),
(575.667,589,o),
(593,504.667,o),
(593,410,cs)
);
},
{
closed = 1;
nodes = (
(462,953.333,o),
(447.667,972,o),
(421,972,cs),
(383.395,972,o),
(308,898.577,o),
(308,871,cs),
(308,856.333,o),
(321.667,841,o),
(343,841,cs),
(376.368,841,o),
(462,897.284,o),
(462,936,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
13 1 4 0 67 66 55 47 23 0 6 5 4 33 1 2 5 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 7 6 7 106 0 6 0 6 106 0 4 4 0 83 1 1 0 0 20 67 0 5 5 2 83 3 1 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 7 6 7 106 0 6 0 6 106 1 1 0 0 4 5 0 4 91 0 5 5 2 83 3 1 2 2 21 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
86 84 78 76 70 68 59 57 36 45 36 41 8 19
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(449,959.667,o),
(437,972,o),
(417,972,cs),
(387.753,972,o),
(311,903.873,o),
(311,877,cs),
(311,863.667,o),
(320.333,854,o),
(335,854,cs),
(361.12,854,o),
(449,908.21,o),
(449,941,cs)
);
},
{
closed = 1;
nodes = (
(112,578.722,o),
(200.506,777,o),
(373,777,cs),
(442.333,777,o),
(497.333,736.667,o),
(536,670,cs),
(574.667,603.333,o),
(596,511.333,o),
(596,410,cs),
(596,290,o),
(571.667,199,o),
(529,139,cs),
(486.333,79,o),
(424.333,48,o),
(351,48,cs),
(209.03,48,o),
(112,183.97,o),
(112,400,cs)
);
},
{
closed = 1;
nodes = (
(37,257.333,o),
(72.667,152,o),
(130,84,cs),
(187.333,16,o),
(265,-16,o),
(349,-16,cs),
(406.601,-16,o),
(488.884,1.884,o),
(560.5,73.5,cs),
(603.833,116.833,o),
(637.167,178.833,o),
(656.5,263.5,cs),
(666.167,305.833,o),
(671,354,o),
(671,408,cs),
(671,642.196,o),
(566.827,838,o),
(367,838,cs),
(257.161,838,o),
(171.042,782.566,o),
(117,697.5,cs),
(64.904,615.497,o),
(37,510.28,o),
(37,404,cs)
);
},
{
closed = 1;
nodes = (
(110.667,16,o),
(110,13,o),
(110,9,cs),
(110,-5.667,o),
(126,-19,o),
(138,-19,cs),
(156.667,-19,o),
(173.333,-9.667,o),
(180,5,cs),
(585,768,ls),
(590.333,777.333,o),
(599,796.333,o),
(599,807,cs),
(599,815,o),
(598,831,o),
(574,831,cs),
(542,831,o),
(530,815.333,o),
(510,774,cs),
(470.775,693.682,o),
(463.126,677.376,o),
(435.5,620.5,cs),
(416.582,581.552,o),
(385.258,524.604,o),
(330,423,cs),
(298,364.333,o),
(279,331.167,o),
(267,310.5,cs),
(257.491,294.124,o),
(246.78,278.417,o),
(240.5,267,cs),
(200.301,193.911,o),
(186.143,166.286,o),
(112,18,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 1 0 4 1 94 0 0 4 0 106 0 3 3 4 83 6 1 4 4 20 67 0 2 2 5 83 7 1 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 1 0 1 106 0 0 4 0 106 0 3 3 4 83 6 1 4 4 20 67 0 2 2 5 83 7 1 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 1 0 1 106 0 0 4 0 106 0 6 6 20 67 0 3 3 4 83 0 4 4 20 67 0 2 2 5 83 7 1 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 1 0 1 106 0 0 4 0 106 0 6 4 3 4 6 3 104 0 4 0 3 2 4 3 92 0 2 2 5 83 7 1 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
90 88 80 78 42 42 40 38 38 36 8 21
CALL[ ]	/* CallFunction */";
};
width = 709;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(142,-19,o),
(145.667,-13.667,o),
(155,5,cs),
(175,43,l),
(224.333,3,o),
(281.333,-16,o),
(340,-16,cs),
(401.333,-16,o),
(477.833,8.667,o),
(538.5,74,cs),
(599.167,139.333,o),
(645,245.333,o),
(645,408,cs),
(645,541.333,o),
(610,661,o),
(546,741,c),
(560,768,ls),
(565.333,778.667,o),
(574,796.333,o),
(574,807,cs),
(574,815,o),
(571,821,o),
(559,821,cs),
(538.999,821,o),
(521.047,792.141,o),
(515,774,c),
(471,814,o),
(418.667,838,o),
(356,838,cs),
(255.818,838,o),
(174.489,782.482,o),
(121.5,697.5,cs),
(70.201,615.229,o),
(41,513.932,o),
(41,404,cs),
(41,246.667,o),
(82.333,139,o),
(145,71,c),
(117,18,l),
(114.333,11.333,o),
(112,1,o),
(112,-7,cs),
(112,-15,o),
(116.667,-19,o),
(126,-19,cs)
);
},
{
closed = 1;
nodes = (
(113.333,176,o),
(86,274.667,o),
(86,400,cs),
(86,592.013,o),
(173.824,807,o),
(362,807,cs),
(412.667,807,o),
(459.333,781.667,o),
(498,739,c),
(476.562,694.784,o),
(455.736,652.471,o),
(435.5,612,cs),
(413.534,568.068,o),
(391.313,525.916,o),
(335,423,cs),
(302.272,362.058,o),
(278.794,320.919,o),
(266.5,298.5,cs),
(260.833,288.167,o),
(256.167,279.833,o),
(252.5,273.5,cs),
(239.608,251.232,o),
(210.236,195.998,o),
(164,108,c)
);
},
{
closed = 1;
nodes = (
(284.667,18,o),
(235,37.333,o),
(193,76,c),
(525,703,l),
(571.667,629.667,o),
(600,527.333,o),
(600,410,cs),
(600,279.333,o),
(572.5,182.5,o),
(526.5,116.5,cs),
(480.5,50.5,o),
(415.333,18,o),
(342,18,cs)
);
},
{
closed = 1;
nodes = (
(342.198,876,o),
(430,928.619,o),
(430,950,cs),
(430,968.667,o),
(421.667,972,o),
(411,972,cs),
(391.338,972,o),
(316,910.981,o),
(316,887,cs),
(316,879.667,o),
(318.667,876,o),
(324,876,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
75 74 63 49 36 25 13 0 8 5 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 7 6 7 106 0 6 0 6 106 0 1 1 12 67 0 4 4 0 83 0 0 0 20 67 0 5 5 2 83 3 1 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 7 6 7 106 0 6 0 6 106 0 0 0 4 5 0 4 91 0 1 1 14 67 0 5 5 2 83 3 1 2 2 21 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
95 93 88 86 78 76 67 65 37 45 38 41 8 19
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = Oslashacute;
unicode = 510;
},
{
glyphname = Otilde;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(130,587.629,o),
(215.554,762,o),
(379,762,cs),
(516.537,762,o),
(593,607.084,o),
(593,410,cs),
(593,180.667,o),
(506.333,63,o),
(357,63,cs),
(291.667,63,o),
(235.167,95.333,o),
(194.5,154,cs),
(153.833,212.667,o),
(130,297.333,o),
(130,400,cs)
);
},
{
closed = 1;
nodes = (
(34,257.333,o),
(68.5,152,o),
(126.5,84,cs),
(184.5,16,o),
(264.333,-16,o),
(355,-16,cs),
(498.998,-16,o),
(689,82.663,o),
(689,408,cs),
(689,641.602,o),
(587.519,838,o),
(375,838,cs),
(258.283,838,o),
(169.604,782.661,o),
(114.5,697.5,cs),
(60.931,614.711,o),
(34,514.521,o),
(34,404,cs)
);
},
{
closed = 1;
nodes = (
(198,877,o),
(205,861,o),
(217,861,cs),
(237.593,861,o),
(261.709,886,o),
(301,886,cs),
(339.662,886,o),
(382.294,862,o),
(438,862,cs),
(470.676,862,o),
(549,879.584,o),
(549,937,cs),
(549,958.333,o),
(533.667,972,o),
(527,972,cs),
(522.333,972,o),
(512.333,967.667,o),
(497,959,cs),
(478.333,948.333,o),
(455.667,942,o),
(437,942,cs),
(397.599,942,o),
(336.495,970,o),
(300,970,cs),
(275.333,970,o),
(252.667,964,o),
(232,952,cs),
(213.333,941.333,o),
(198,926.333,o),
(198,897,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 2 5 7 91 0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 2 5 7 91 0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
74 72 35 38 35 35 40 40 42 38 36 10 24
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(112,578.722,o),
(200.506,777,o),
(373,777,cs),
(442.333,777,o),
(497.333,736.667,o),
(536,670,cs),
(574.667,603.333,o),
(596,511.333,o),
(596,410,cs),
(596,290,o),
(571.667,199,o),
(529,139,cs),
(486.333,79,o),
(424.333,48,o),
(351,48,cs),
(209.03,48,o),
(112,183.97,o),
(112,400,cs)
);
},
{
closed = 1;
nodes = (
(37,257.333,o),
(72.667,152,o),
(130,84,cs),
(187.333,16,o),
(265,-16,o),
(349,-16,cs),
(406.601,-16,o),
(488.884,1.884,o),
(560.5,73.5,cs),
(603.833,116.833,o),
(637.167,178.833,o),
(656.5,263.5,cs),
(666.167,305.833,o),
(671,354,o),
(671,408,cs),
(671,642.196,o),
(566.827,838,o),
(367,838,cs),
(257.161,838,o),
(171.042,782.566,o),
(117,697.5,cs),
(64.904,615.497,o),
(37,510.28,o),
(37,404,cs)
);
},
{
closed = 1;
nodes = (
(173,919,o),
(172,913,o),
(172,907,cs),
(172,892,o),
(178,879,o),
(189,879,cs),
(206,879,o),
(233,904,o),
(273,904,cs),
(312,904,o),
(354,880,o),
(410,880,cs),
(466,880,o),
(499,902,o),
(512,925,cs),
(515,931,o),
(517,937,o),
(517,944,cs),
(517,960,o),
(506,972,o),
(499,972,cs),
(496,972,o),
(492,971,o),
(489,970,cs),
(485,968,o),
(478,964,o),
(469,959,cs),
(446,948,o),
(426,942,o),
(409,942,cs),
(370,942,o),
(308,970,o),
(272,970,cs),
(247,970,o),
(225,964,o),
(204,952,cs),
(194,946,o),
(187,941,o),
(183,936,cs),
(179,931,o),
(176,927,o),
(175,924,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 2 5 7 91 0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 2 5 7 91 0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
79 77 35 38 35 35 40 42 42 40 37 10 35
CALL[ ]	/* CallFunction */";
};
width = 709;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(401.333,-16,o),
(477.833,8.667,o),
(538.5,74,cs),
(599.167,139.333,o),
(645,245.333,o),
(645,408,cs),
(645,524,o),
(618.333,631.333,o),
(569,710,cs),
(519.667,788.667,o),
(446.667,838,o),
(356,838,cs),
(255.818,838,o),
(174.489,782.482,o),
(121.5,697.5,cs),
(70.201,615.229,o),
(41,513.932,o),
(41,404,cs),
(41,113.183,o),
(189.978,-16,o),
(340,-16,cs)
);
},
{
closed = 1;
nodes = (
(186.741,18,o),
(86,163.386,o),
(86,400,cs),
(86,592.013,o),
(173.824,807,o),
(362,807,cs),
(501.104,807,o),
(600,628.505,o),
(600,410,cs),
(600,279.333,o),
(572.5,182.5,o),
(526.5,116.5,cs),
(480.5,50.5,o),
(415.333,18,o),
(342,18,cs)
);
},
{
closed = 1;
nodes = (
(205.791,888,o),
(232.735,913,o),
(274,913,cs),
(312.662,913,o),
(355.294,889,o),
(411,889,cs),
(463.947,889,o),
(513,908.797,o),
(513,934,cs),
(513,943.333,o),
(506.667,951,o),
(500,951,cs),
(496.667,951,o),
(493.167,950.167,o),
(489.5,948.5,cs),
(485.833,946.833,o),
(479.333,943.333,o),
(470,938,cs),
(447.333,926.667,o),
(427.333,921,o),
(410,921,cs),
(370.599,921,o),
(309.495,949,o),
(273,949,cs),
(248.333,949,o),
(225.667,943,o),
(205,931,cs),
(185.667,919.667,o),
(176,910.333,o),
(176,903,cs),
(176,896.333,o),
(183.333,888,o),
(190,888,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 2 5 7 91 0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 2 5 7 91 0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
75 73 35 38 35 35 39 40 42 40 36 10 24
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = Otilde;
unicode = 213;
},
{
glyphname = OE;
kernLeft = C;
kernRight = AE;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(34,257.333,o),
(68.833,152,o),
(125.5,84,cs),
(182.167,16,o),
(259.667,-16,o),
(345,-16,cs),
(506.812,-16,o),
(556.166,57.054,o),
(596,150,c),
(596,64,ls),
(596,10.667,o),
(596.667,0,o),
(654,0,cs),
(670.667,0,o),
(690.333,0.333,o),
(713,1,cs),
(735.667,1.667,o),
(767.333,2,o),
(808,2,cs),
(886.27,2,o),
(974.73,0,o),
(1053,0,cs),
(1082.333,0,o),
(1092.333,6.333,o),
(1095,33,cs),
(1108.225,165.246,o),
(1111,265.924,o),
(1111,277,cs),
(1111,296.652,o),
(1107.251,321,o),
(1072,321,cs),
(1037.333,321,o),
(1025.333,299.667,o),
(1024,273,cs),
(1018.926,181.662,o),
(1011,130.962,o),
(1011,121,cs),
(1008.388,87.044,o),
(989.049,84,o),
(968,84,cs),
(690,84,l),
(690,377,l),
(711.333,378.333,o),
(731.667,379,o),
(753,379,cs),
(772.333,379,o),
(788,378.833,o),
(800,378.5,cs),
(812,378.167,o),
(822.667,378,o),
(832,378,cs),
(871.024,378,o),
(880,337.569,o),
(880,309,cs),
(880,291.667,o),
(886.333,275,o),
(921,275,cs),
(941,275,o),
(963,284.333,o),
(963,307,cs),
(963,325.667,o),
(962.667,344.333,o),
(962,363,cs),
(961.333,381.667,o),
(961,400.667,o),
(961,420,cs),
(961,439.333,o),
(961.333,457.167,o),
(962,473.5,cs),
(962.667,489.833,o),
(963,507.667,o),
(963,527,cs),
(963,548.333,o),
(950.333,563,o),
(921,563,cs),
(886.333,563,o),
(878,540.667,o),
(878,530,cs),
(878,509.399,o),
(876.828,464,o),
(861,464,cs),
(862.48,464,o),
(801.73,461,o),
(753,461,cs),
(741.667,461,o),
(731,461.333,o),
(721,462,cs),
(711,462.667,o),
(700.667,463.333,o),
(690,464,c),
(690,737,l),
(942,737,ls),
(964.667,737,o),
(979,727.667,o),
(979,677,cs),
(979,645,ls),
(979,610.333,o),
(988.333,595,o),
(1023,595,cs),
(1057.667,595,o),
(1067,609.667,o),
(1067,651,cs),
(1067,785,ls),
(1067,813,o),
(1057.667,821,o),
(1039,821,cs),
(979.42,821,o),
(930.099,820,o),
(891,820,cs),
(850.98,820,o),
(807.664,819,o),
(761,819,cs),
(735.667,819,o),
(713.833,819.333,o),
(695.5,820,cs),
(677.167,820.667,o),
(657.333,821,o),
(636,821,cs),
(591.473,821,o),
(592,785.142,o),
(592,750,cs),
(592,705.927,o),
(593,716.741,o),
(593,669,c),
(587.687,719.476,o),
(536.057,838,o),
(359,838,cs),
(250.325,838,o),
(167.234,782.869,o),
(113,697.5,cs),
(60.239,614.45,o),
(34,511.282,o),
(34,404,cs)
);
},
{
closed = 1;
nodes = (
(130,572.25,o),
(201.045,759,o),
(355,759,cs),
(494.414,759,o),
(593,596.596,o),
(593,410,cs),
(593,295.333,o),
(565.5,210.5,o),
(519.5,152.5,cs),
(473.5,94.5,o),
(408.333,66,o),
(335,66,cs),
(272.333,66,o),
(222,97.5,o),
(186,155.5,cs),
(150,213.5,o),
(130,297.333,o),
(130,400,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
12 1 2 3 130 95 2 8 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 2 3 5 3 2 96 0 9 7 6 7 9 6 104 0 5 0 6 8 5 6 91 0 13 13 0 83 0 0 0 20 67 0 3 3 1 83 0 1 1 12 67 0 7 7 4 83 0 4 4 23 67 0 8 8 10 84 0 10 10 13 67 0 12 12 11 83 0 11 11 21 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 2 3 5 3 2 5 104 0 9 7 6 7 9 6 104 0 5 0 6 8 5 6 91 0 13 13 0 83 0 0 0 20 67 0 3 3 1 83 0 1 1 12 67 0 7 7 4 83 0 4 4 23 67 0 8 8 10 84 0 10 10 13 67 0 12 12 11 83 0 11 11 21 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 2 3 5 3 2 5 104 0 9 7 6 7 9 6 104 0 4 0 7 9 4 7 91 0 5 0 6 8 5 6 91 0 13 13 0 83 0 0 0 20 67 0 3 3 1 83 0 1 1 12 67 0 8 8 10 84 0 10 10 13 67 0 12 12 11 83 0 11 11 21 11 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 71 values pushed */
0 2 3 5 3 2 5 104 0 9 7 6 7 9 6 104 0 0 0 13 3 0 13 91 0 4 0 7 9 4 7 91 0 5 0 6 8 5 6 91 0 3 3 1 83 0 1 1 14 67 0 8 8 10 84 0 10 10 13 67 0 12 12 11 83 0 11 11 21 11 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
156 154 146 144 136 134 125 115 104 102 33 118 42 38 145 37 37 173 38 14 24
CALL[ ]	/* CallFunction */";
};
width = 1144;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(37,257.333,o),
(73,152,o),
(129,84,cs),
(185,16,o),
(261.667,-16,o),
(343,-16,cs),
(472.333,-16,o),
(549.667,45.667,o),
(599,159,c),
(599,64,ls),
(599,10.667,o),
(599.667,0,o),
(657,0,cs),
(673.667,0,o),
(693.333,0.333,o),
(716,1,cs),
(738.667,1.667,o),
(770.333,2,o),
(811,2,cs),
(881.547,2,o),
(964.453,0,o),
(1035,0,cs),
(1063,0,o),
(1074.333,3.667,o),
(1077,33,cs),
(1085.918,122.183,o),
(1093,257.17,o),
(1093,277,cs),
(1093,293,o),
(1091.333,317,o),
(1062,317,cs),
(1039.333,317,o),
(1028.333,299.667,o),
(1027,273,cs),
(1023.401,208.223,o),
(1019.639,170.668,o),
(1014,103,cs),
(1011.388,69.044,o),
(992.049,66,o),
(971,66,cs),
(672,66,l),
(672,386,l),
(700,387.333,o),
(728,388,o),
(756,388,cs),
(775.333,388,o),
(791,387.833,o),
(803,387.5,cs),
(815,387.167,o),
(825.667,387,o),
(835,387,cs),
(874.323,387,o),
(883,339.717,o),
(883,309,cs),
(883,291.667,o),
(890,277,o),
(914,277,cs),
(928.667,277,o),
(945,284.333,o),
(945,307,cs),
(945,325.667,o),
(944.667,344.333,o),
(944,363,cs),
(943.333,381.667,o),
(943,400.667,o),
(943,420,cs),
(943,439.333,o),
(943.333,458.167,o),
(944,476.5,cs),
(944.667,494.833,o),
(945,513.667,o),
(945,533,cs),
(945,547.667,o),
(937,562,o),
(913,562,cs),
(886.434,562,o),
(881,542.254,o),
(881,530,cs),
(881,512.406,o),
(880.241,455,o),
(864,455,cs),
(865.48,455,o),
(804.73,452,o),
(756,452,cs),
(741.333,452,o),
(727.167,452.333,o),
(713.5,453,cs),
(699.833,453.667,o),
(686,454.333,o),
(672,455,c),
(672,755,l),
(945,755,ls),
(960.089,755,o),
(982,751.904,o),
(982,707,cs),
(982,645,ls),
(982,617,o),
(986.667,599,o),
(1016,599,cs),
(1042.667,599,o),
(1049,616.333,o),
(1049,651,cs),
(1049,785,ls),
(1049,813,o),
(1039.667,821,o),
(1021,821,cs),
(965.866,821,o),
(920.212,820,o),
(884,820,cs),
(846.545,820,o),
(806.565,819,o),
(764,819,cs),
(738.667,819,o),
(716.833,819.333,o),
(698.5,820,cs),
(680.167,820.667,o),
(660.333,821,o),
(639,821,cs),
(594.473,821,o),
(595,785.142,o),
(595,750,cs),
(595,732.667,o),
(595,718,o),
(595,706,cs),
(595,694,o),
(595.333,679,o),
(596,661,c),
(574.748,735.384,o),
(506.874,838,o),
(358,838,cs),
(252.229,838,o),
(169.78,782.949,o),
(116.5,697.5,cs),
(66.044,616.581,o),
(37,512.319,o),
(37,404,cs)
);
},
{
closed = 1;
nodes = (
(112,579.346,o),
(191.168,777,o),
(358,777,cs),
(496.239,777,o),
(596,610.41,o),
(596,410,cs),
(596,290,o),
(568.5,199,o),
(522.5,139,cs),
(476.5,79,o),
(411.333,48,o),
(338,48,cs),
(270,48,o),
(212.833,81.833,o),
(173.5,142.5,cs),
(134.167,203.167,o),
(112,292,o),
(112,400,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 2 3 130 1 8 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 2 3 5 3 2 5 104 0 9 7 6 7 9 6 104 0 5 0 6 8 5 6 91 0 13 13 0 83 0 0 0 20 67 0 3 3 1 83 0 1 1 12 67 0 7 7 4 83 0 4 4 15 67 0 8 8 10 84 0 10 10 13 67 0 12 12 11 83 0 11 11 21 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 2 3 5 3 2 5 104 0 9 7 6 7 9 6 104 0 4 0 7 9 4 7 91 0 5 0 6 8 5 6 91 0 13 13 0 83 0 0 0 20 67 0 3 3 1 83 0 1 1 12 67 0 8 8 10 84 0 10 10 13 67 0 12 12 11 83 0 11 11 21 11 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 71 values pushed */
0 2 3 5 3 2 5 104 0 9 7 6 7 9 6 104 0 0 0 13 3 0 13 91 0 4 0 7 9 4 7 91 0 5 0 6 8 5 6 91 0 3 3 1 83 0 1 1 14 67 0 8 8 10 84 0 10 10 13 67 0 12 12 11 83 0 11 11 21 11 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
154 152 144 142 134 132 125 115 106 104 33 118 42 40 145 39 37 171 38 14 24
CALL[ ]	/* CallFunction */";
};
width = 1128;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(429.982,-16,o),
(542.743,35.146,o),
(603,174,c),
(603,64,ls),
(603,10.667,o),
(603.667,0,o),
(661,0,cs),
(677.667,0,o),
(697.333,0.333,o),
(720,1,cs),
(742.667,1.667,o),
(774.333,2,o),
(815,2,cs),
(876.48,2,o),
(947.52,0,o),
(1009,0,cs),
(1035.667,0,o),
(1048.333,-0.333,o),
(1051,33,cs),
(1061.644,139.44,o),
(1067,285.132,o),
(1067,277,cs),
(1067,293,o),
(1066.667,310,o),
(1048,310,cs),
(1044.667,310,o),
(1041.167,307.167,o),
(1037.5,301.5,cs),
(1033.833,295.833,o),
(1031.667,286.333,o),
(1031,273,cs),
(1025.922,166.353,o),
(1020.061,99.79,o),
(1018,73,cs),
(1015.388,39.044,o),
(996.049,36,o),
(975,36,cs),
(646,36,l),
(646,401,l),
(684.667,402.333,o),
(721.333,403,o),
(760,403,cs),
(779.333,403,o),
(795,402.833,o),
(807,402.5,cs),
(819,402.167,o),
(829.667,402,o),
(839,402,cs),
(878.501,402,o),
(887,345.97,o),
(887,309,cs),
(887,291.667,o),
(894.667,280,o),
(904,280,cs),
(906.667,280,o),
(909.833,281.667,o),
(913.5,285,cs),
(917.167,288.333,o),
(919,295.667,o),
(919,307,cs),
(919,325.667,o),
(918.667,344.333,o),
(918,363,cs),
(917.333,381.667,o),
(917,400.667,o),
(917,420,cs),
(917,439.333,o),
(917.333,458.167,o),
(918,476.5,cs),
(918.667,494.833,o),
(919,513.667,o),
(919,533,cs),
(919,547.667,o),
(918,560,o),
(902,560,cs),
(888.277,560,o),
(885,541.121,o),
(885,530,cs),
(885,471.034,o),
(879.262,440,o),
(868,440,cs),
(869.48,440,o),
(808.73,437,o),
(760,437,cs),
(740.667,437,o),
(721.667,437.333,o),
(703,438,cs),
(684.333,438.667,o),
(665.333,439.333,o),
(646,440,c),
(646,785,l),
(949,785,ls),
(962.333,785,o),
(986,782.333,o),
(986,757,cs),
(986,645,ls),
(986,626.333,o),
(986,605,o),
(1006,605,cs),
(1020.667,605,o),
(1023,625.667,o),
(1023,651,cs),
(1023,785,ls),
(1023,813,o),
(1013.667,821,o),
(995,821,cs),
(915.449,821,o),
(831.039,819,o),
(768,819,cs),
(742.667,819,o),
(720.833,819.333,o),
(702.5,820,cs),
(684.167,820.667,o),
(664.333,821,o),
(643,821,cs),
(598.473,821,o),
(599,785.142,o),
(599,750,cs),
(599,732.667,o),
(599,715.667,o),
(599,699,cs),
(599,682.333,o),
(599.333,665,o),
(600,647,c),
(553.333,761.667,o),
(469.333,838,o),
(356,838,cs),
(255.818,838,o),
(174.489,782.482,o),
(121.5,697.5,cs),
(70.201,615.229,o),
(41,513.932,o),
(41,404,cs),
(41,113.183,o),
(189.978,-16,o),
(340,-16,cs)
);
},
{
closed = 1;
nodes = (
(186.741,18,o),
(86,163.386,o),
(86,400,cs),
(86,592.013,o),
(173.824,807,o),
(362,807,cs),
(501.104,807,o),
(600,628.505,o),
(600,410,cs),
(600,279.333,o),
(572.5,182.5,o),
(526.5,116.5,cs),
(480.5,50.5,o),
(415.333,18,o),
(342,18,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
10 1 2 3 126 1 8 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 2 3 5 3 2 5 104 0 9 7 6 7 9 6 104 0 5 0 6 8 5 6 91 0 13 13 0 83 0 0 0 20 67 0 3 3 1 83 0 1 1 12 67 0 7 7 4 83 0 4 4 15 67 0 8 8 10 83 0 10 10 13 67 0 12 12 11 83 0 11 11 21 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 2 3 5 3 2 5 104 0 9 7 6 7 9 6 104 0 4 0 7 9 4 7 91 0 5 0 6 8 5 6 91 0 13 13 0 83 0 0 0 20 67 0 3 3 1 83 0 1 1 12 67 0 8 8 10 83 0 10 10 13 67 0 12 12 11 83 0 11 11 21 11 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 71 values pushed */
0 2 3 5 3 2 5 104 0 9 7 6 7 9 6 104 0 0 0 13 3 0 13 91 0 4 0 7 9 4 7 91 0 5 0 6 8 5 6 91 0 3 3 1 83 0 1 1 14 67 0 8 8 10 83 0 10 10 13 67 0 12 12 11 83 0 11 11 21 11 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
152 150 142 140 132 130 121 111 102 100 33 118 42 40 145 37 37 169 38 14 24
CALL[ ]	/* CallFunction */";
};
width = 1105;
}
);
note = OE;
unicode = 338;
},
{
glyphname = P;
kernLeft = B;
kernRight = P;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(54.667,58,o),
(39.167,54.667,o),
(31.5,50,cs),
(23.833,45.333,o),
(20,38.667,o),
(20,30,cs),
(20,4.667,o),
(38.333,0,o),
(81,0,cs),
(334,0,ls),
(371.333,0,o),
(379,13.333,o),
(379,32,cs),
(379,54.667,o),
(365.333,63,o),
(336,63,cs),
(231,63,l),
(231,332,l),
(260.333,330.667,o),
(279,330,o),
(299,330,cs),
(446.113,330,o),
(636,396.691,o),
(636,595,cs),
(636,759.127,o),
(510.012,821,o),
(345,821,cs),
(246.466,821,o),
(155.509,818,o),
(63,818,cs),
(37.667,818,o),
(25,807.667,o),
(25,787,cs),
(25,768.333,o),
(33.333,756.333,o),
(48,755,cs),
(100,751,ls),
(125.333,748.333,o),
(130.667,734.667,o),
(132,712,cs),
(134.667,648,o),
(138,551.667,o),
(138,437,cs),
(138,310.522,o),
(137,227.898,o),
(137,106,cs),
(137,74,o),
(114,62.667,o),
(78,60,cs)
);
},
{
closed = 1;
nodes = (
(377.493,741,o),
(540,736.355,o),
(540,592,cs),
(540,483.035,o),
(444.308,412,o),
(302,412,cs),
(280.667,412,o),
(252.333,412.667,o),
(231,414,c),
(231,734,l),
(253.667,738,o),
(277.667,741,o),
(303,741,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
56 1 5 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
6 1 4 4 0 83 0 0 0 12 67 0 1 1 5 83 0 5 5 15 67 0 2 2 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 1 2 5 1 91 6 1 4 4 0 83 0 0 0 12 67 0 2 2 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 1 2 5 1 91 6 1 4 4 0 83 0 0 0 14 67 0 2 2 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
54 53 61 57 53 69 54 69 48 45 41 39 38 34 26 19 7 15
CALL[ ]	/* CallFunction */";
};
width = 642;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(61.667,48,o),
(49.833,45.167,o),
(45.5,39.5,cs),
(41.167,33.833,o),
(39,28.333,o),
(39,23,cs),
(39,3,o),
(66.667,0,o),
(100,0,cs),
(316,0,ls),
(350.667,0,o),
(361,7.667,o),
(361,25,cs),
(361,42.333,o),
(346.667,51,o),
(318,51,cs),
(211,51,l),
(211,341,l),
(219,340.333,o),
(227,340,o),
(235,340,cs),
(242.333,339.333,o),
(249.667,339,o),
(257,339,cs),
(264.333,339,o),
(271,339,o),
(277,339,cs),
(426.332,339,o),
(616,402.998,o),
(616,595,cs),
(616,759.127,o),
(490.012,821,o),
(325,821,cs),
(211.196,821,o),
(165.165,818,o),
(70,818,cs),
(46,818,o),
(42,803.333,o),
(42,794,cs),
(42,779.333,o),
(47.333,769,o),
(70,769,cs),
(84,769,ls),
(126.667,769,o),
(133,749,o),
(133,729,cs),
(133,695.667,o),
(134,653.667,o),
(136,603,cs),
(138,552.333,o),
(139,497,o),
(139,437,cs),
(139,307.47,o),
(138,219.274,o),
(138,92,cs),
(138,66.667,o),
(127.667,48,o),
(81,48,cs)
);
},
{
closed = 1;
nodes = (
(367.928,757,o),
(541,750.441,o),
(541,592,cs),
(541,508.358,o),
(492.312,456.125,o),
(432,432,cs),
(372.32,408.128,o),
(307.121,403,o),
(276,403,cs),
(267.333,403,o),
(259.167,403,o),
(251.5,403,cs),
(243.833,403,o),
(237,403.333,o),
(231,404,cs),
(223.667,404,o),
(217,404.333,o),
(211,405,c),
(211,750,l),
(233.667,754,o),
(257.667,757,o),
(283,757,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
59 58 2 8 7 41 1 3 8 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
11 1 7 1 8 1 7 96 9 1 8 4 1 3 0 8 3 91 0 1 1 2 83 0 2 2 12 67 5 10 2 0 0 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
11 1 7 1 8 1 7 96 9 1 8 4 1 3 0 8 3 91 0 1 1 2 83 0 2 2 14 67 5 10 2 0 0 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
56 55 1 0 65 62 61 60 55 75 56 75 50 47 44 42 40 39 38 35 27 20 16 13 0 54 1 54 12 15
CALL[ ]	/* CallFunction */";
};
width = 624;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(278,0,ls),
(294,0,o),
(305.5,0.5,o),
(312.5,1.5,cs),
(319.5,2.5,o),
(323,6.333,o),
(323,13,cs),
(323,25,o),
(308.667,31,o),
(280,31,cs),
(183,31,l),
(183,356,l),
(191,355.333,o),
(199,355,o),
(207,355,cs),
(214.333,354.333,o),
(221.667,354,o),
(229,354,cs),
(236.333,354,o),
(243,354,o),
(249,354,cs),
(397.204,354,o),
(588,413.172,o),
(588,595,cs),
(588,759.127,o),
(462.012,821,o),
(297,821,cs),
(184.448,821,o),
(147.714,818,o),
(52,818,cs),
(40,818,o),
(32.333,816.5,o),
(29,813.5,cs),
(25.667,810.5,o),
(24,807.333,o),
(24,804,cs),
(24,800.667,o),
(25.833,797.333,o),
(29.5,794,cs),
(33.167,790.667,o),
(40.667,789,o),
(52,789,cs),
(86,789,ls),
(128.667,789,o),
(135,770.333,o),
(135,749,cs),
(135,713.667,o),
(136,668.833,o),
(138,614.5,cs),
(140,560.167,o),
(141,501,o),
(141,437,cs),
(141,368.742,o),
(141.216,307.411,o),
(140.5,253,cs),
(139.778,198.141,o),
(140,137.81,o),
(140,72,cs),
(140,59.537,o),
(141.32,28,o),
(63,28,cs),
(43.667,28,o),
(31.833,26.167,o),
(27.5,22.5,cs),
(23.167,18.833,o),
(21,15.333,o),
(21,12,cs),
(21,-0.271,o),
(60.706,0,o),
(82,0,cs)
);
},
{
closed = 1;
nodes = (
(239.333,388,o),
(231.167,388,o),
(223.5,388,cs),
(215.833,388,o),
(209,388.333,o),
(203,389,cs),
(195.667,389,o),
(189,389.333,o),
(183,390,c),
(183,780,l),
(205.667,784,o),
(229.667,787,o),
(255,787,cs),
(301.077,787,o),
(372.178,785.632,o),
(433.5,760.5,cs),
(490.661,737.073,o),
(543,688.173,o),
(543,592,cs),
(543,503.12,o),
(490.611,445.819,o),
(421.5,419,cs),
(351.478,391.827,o),
(284.533,388,o),
(248,388,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
63 62 2 8 1 43 1 3 8 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
9 1 8 4 1 3 0 8 3 91 11 7 2 1 1 2 83 0 2 2 12 67 5 10 2 0 0 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
9 1 8 4 1 3 0 8 3 91 11 7 2 1 1 2 83 0 2 2 14 67 5 10 2 0 0 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
60 59 1 0 70 66 65 64 59 81 60 80 53 49 46 44 42 41 40 37 29 22 18 15 0 58 1 58 12 15
CALL[ ]	/* CallFunction */";
};
width = 599;
}
);
note = P;
unicode = 80;
},
{
glyphname = Thorn;
kernLeft = B;
kernRight = Thorn;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(71.667,60,o),
(52,50.333,o),
(52,31,cs),
(52,3.834,o),
(66.95,0,o),
(130,0,cs),
(326,0,ls),
(368.667,0,o),
(388,6.667,o),
(388,32,cs),
(388,57.333,o),
(357.333,63,o),
(328,63,cs),
(231,63,l),
(231,184,l),
(239,183.333,o),
(247,183,o),
(255,183,cs),
(262.333,182.333,o),
(269.667,182,o),
(277,182,cs),
(284.333,182,o),
(291,182,o),
(297,182,cs),
(445.204,182,o),
(636,241.172,o),
(636,423,cs),
(636,587.127,o),
(510.012,649,o),
(345,649,cs),
(320.333,649,o),
(299,649,o),
(281,649,cs),
(263,649,o),
(246,648.667,o),
(230,648,c),
(230,720,ls),
(230,750.667,o),
(245.333,759,o),
(296,759,cs),
(330.667,759,o),
(355,766.667,o),
(355,792,cs),
(355,818.667,o),
(324.667,821,o),
(298,821,cs),
(244.06,821,o),
(163.105,819,o),
(100,819,cs),
(76,819,o),
(55,808.667,o),
(55,786,cs),
(55,768.667,o),
(68.333,758,o),
(87,758,cs),
(103,758,ls),
(127,758,o),
(132,736.667,o),
(132,718,cs),
(132,682.716,o),
(138,534.745,o),
(138,395,cs),
(138,370.333,o),
(138,349.333,o),
(138,332,cs),
(138,314.667,o),
(138,299.333,o),
(138,286,cs),
(138,272.667,o),
(137.833,260,o),
(137.5,248,cs),
(137.167,236,o),
(137,223.333,o),
(137,210,cs),
(137,196.667,o),
(137,181.667,o),
(137,165,cs),
(137,148.333,o),
(137,128,o),
(137,104,cs),
(137,78.667,o),
(132.333,60,o),
(111,60,cs)
);
},
{
closed = 1;
nodes = (
(378.203,567,o),
(540,562.79,o),
(540,420,cs),
(540,351.835,o),
(497.084,308.94,o),
(439.5,288,cs),
(381.619,266.952,o),
(325.994,264,o),
(296,264,cs),
(287.333,264,o),
(279.167,264,o),
(271.5,264,cs),
(263.833,264,o),
(257,264.333,o),
(251,265,cs),
(243.667,265,o),
(237,265.333,o),
(231,266,c),
(231,560,l),
(253.667,564,o),
(277.667,567,o),
(303,567,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
78 77 2 10 9 58 1 5 10 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 4 13 1 9 10 4 9 91 11 1 10 6 1 5 0 10 5 91 3 1 1 1 2 83 0 2 2 12 67 7 12 2 0 0 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 4 13 1 9 10 4 9 91 11 1 10 6 1 5 0 10 5 91 3 1 1 1 2 83 0 2 2 14 67 7 12 2 0 0 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
75 74 1 0 85 81 80 79 74 94 75 94 68 65 61 59 57 56 55 52 44 40 37 35 31 24 20 17 0 73 1 73 14 15
CALL[ ]	/* CallFunction */";
};
width = 650;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(71.667,48,o),
(58.167,45.833,o),
(50.5,41.5,cs),
(42.833,37.167,o),
(39,31.333,o),
(39,24,cs),
(39,14.667,o),
(44.5,8.333,o),
(55.5,5,cs),
(66.5,1.667,o),
(84.667,0,o),
(110,0,cs),
(306,0,ls),
(338,0,o),
(361,-0.333,o),
(361,25,cs),
(361,45,o),
(337.333,51,o),
(308,51,cs),
(211,51,l),
(211,184,l),
(219,183.333,o),
(227,183,o),
(235,183,cs),
(242.333,182.333,o),
(249.667,182,o),
(257,182,cs),
(264.333,182,o),
(271,182,o),
(277,182,cs),
(425.204,182,o),
(616,241.172,o),
(616,423,cs),
(616,587.127,o),
(490.012,649,o),
(325,649,cs),
(300.333,649,o),
(279,649,o),
(261,649,cs),
(243,649,o),
(226,648.667,o),
(210,648,c),
(210,740,ls),
(210,770.887,o),
(252.815,771,o),
(276,771,cs),
(294.227,771,o),
(328,771.636,o),
(328,797,cs),
(328,819.001,o),
(299.17,821,o),
(278,821,cs),
(224.06,821,o),
(143.105,819,o),
(80,819,cs),
(54.667,819,o),
(42,810.333,o),
(42,793,cs),
(42,779.667,o),
(50.667,770,o),
(80,770,cs),
(84,770,ls),
(126.667,770,o),
(133,750,o),
(133,730,cs),
(133,692.513,o),
(139,540.537,o),
(139,395,cs),
(139,369.667,o),
(139,348,o),
(139,330,cs),
(139,312,o),
(139,295.833,o),
(139,281.5,cs),
(139,267.167,o),
(138.833,254,o),
(138.5,242,cs),
(138.167,230,o),
(138,217,o),
(138,203,cs),
(138,189,o),
(138,173.167,o),
(138,155.5,cs),
(138,137.833,o),
(138,116.667,o),
(138,92,cs),
(138,79.328,o),
(139.522,48,o),
(91,48,cs)
);
},
{
closed = 1;
nodes = (
(367.928,585,o),
(541,578.441,o),
(541,420,cs),
(541,344.568,o),
(493.494,296.073,o),
(432,272.5,cs),
(369.055,248.371,o),
(309.711,246,o),
(276,246,cs),
(267.333,246,o),
(259.167,246,o),
(251.5,246,cs),
(243.833,246,o),
(237,246.333,o),
(231,247,cs),
(223.667,247,o),
(217,247.333,o),
(211,248,c),
(211,578,l),
(233.667,582,o),
(257.667,585,o),
(283,585,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
84 83 2 10 9 65 1 5 10 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 4 13 1 9 10 4 9 91 11 1 10 6 1 5 0 10 5 91 3 1 1 1 2 83 0 2 2 12 67 7 12 2 0 0 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 4 13 1 9 10 4 9 91 11 1 10 6 1 5 0 10 5 91 3 1 1 1 2 83 0 2 2 14 67 7 12 2 0 0 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
81 80 1 0 91 87 86 85 80 100 81 100 75 72 68 66 64 63 62 59 51 47 43 39 33 25 22 19 0 79 1 79 14 15
CALL[ ]	/* CallFunction */";
};
width = 633;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(278,0,ls),
(294,0,o),
(305.5,0.5,o),
(312.5,1.5,cs),
(319.5,2.5,o),
(323,6.333,o),
(323,13,cs),
(323,25,o),
(308.667,31,o),
(280,31,cs),
(183,31,l),
(183,184,l),
(191,183.333,o),
(199,183,o),
(207,183,cs),
(214.333,182.333,o),
(221.667,182,o),
(229,182,cs),
(236.333,182,o),
(243,182,o),
(249,182,cs),
(397.204,182,o),
(588,241.172,o),
(588,423,cs),
(588,587.127,o),
(462.012,649,o),
(297,649,cs),
(272.333,649,o),
(251,649,o),
(233,649,cs),
(215,649,o),
(198,648.667,o),
(182,648,c),
(182,760,ls),
(182,790.887,o),
(224.815,791,o),
(248,791,cs),
(266.667,791,o),
(290,791.333,o),
(290,806,cs),
(290,821.312,o),
(261.586,821,o),
(250,821,cs),
(196.06,821,o),
(115.105,819,o),
(52,819,cs),
(40,819,o),
(32.333,817.5,o),
(29,814.5,cs),
(25.667,811.5,o),
(24,808.333,o),
(24,805,cs),
(24,801.667,o),
(25.833,798.333,o),
(29.5,795,cs),
(33.167,791.667,o),
(40.667,790,o),
(52,790,cs),
(86,790,ls),
(128.667,790,o),
(135,771.333,o),
(135,750,cs),
(135,710.749,o),
(141,552.096,o),
(141,395,cs),
(141,367.667,o),
(141,344.5,o),
(141,325.5,cs),
(141,306.5,o),
(141,289.5,o),
(141,274.5,cs),
(141,259.5,o),
(140.833,245.333,o),
(140.5,232,cs),
(140.167,218.667,o),
(140,204.667,o),
(140,190,cs),
(140,175.333,o),
(140,158.667,o),
(140,140,cs),
(140,121.333,o),
(140,98.667,o),
(140,72,cs),
(140,59.537,o),
(141.32,28,o),
(63,28,cs),
(43.667,28,o),
(31.833,26.167,o),
(27.5,22.5,cs),
(23.167,18.833,o),
(21,15.333,o),
(21,12,cs),
(21,-0.271,o),
(60.706,0,o),
(82,0,cs)
);
},
{
closed = 1;
nodes = (
(239.333,216,o),
(231.167,216,o),
(223.5,216,cs),
(215.833,216,o),
(209,216.333,o),
(203,217,cs),
(195.667,217,o),
(189,217.333,o),
(183,218,c),
(183,608,l),
(205.667,612,o),
(229.667,615,o),
(255,615,cs),
(301.077,615,o),
(372.178,613.632,o),
(433.5,588.5,cs),
(490.661,565.073,o),
(543,516.173,o),
(543,420,cs),
(543,331.12,o),
(490.611,273.819,o),
(421.5,247,cs),
(351.478,219.827,o),
(284.533,216,o),
(248,216,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
84 83 2 10 9 64 1 5 10 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 4 13 1 9 10 4 9 91 11 1 10 6 1 5 0 10 5 91 3 1 1 1 2 83 0 2 2 12 67 7 12 2 0 0 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 4 13 1 9 10 4 9 91 11 1 10 6 1 5 0 10 5 91 3 1 1 1 2 83 0 2 2 14 67 7 12 2 0 0 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
81 80 1 0 91 87 86 85 80 102 81 101 74 70 67 65 63 62 61 58 50 46 42 39 34 26 22 19 0 79 1 79 14 15
CALL[ ]	/* CallFunction */";
};
width = 609;
}
);
note = Thorn;
unicode = 222;
},
{
glyphname = Q;
kernLeft = C;
kernRight = O;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(34,273.333,o),
(61.167,176,o),
(108.5,108,cs),
(155.833,40,o),
(221,1,o),
(297,-11,c),
(251.249,-23.709,o),
(197,-51.976,o),
(197,-87,cs),
(197,-105.667,o),
(220.333,-109,o),
(243,-109,cs),
(268.77,-109,o),
(306.59,-85,o),
(353,-85,cs),
(394.75,-85,o),
(440.544,-128,o),
(495,-128,cs),
(546.345,-128,o),
(614,-97.942,o),
(614,-67,cs),
(614,-48.333,o),
(604,-35,o),
(580,-35,cs),
(560.667,-35,o),
(542.5,-37.167,o),
(525.5,-41.5,cs),
(508.5,-45.833,o),
(498,-48,o),
(494,-48,cs),
(480.667,-48,o),
(465.5,-44,o),
(448.5,-36,cs),
(431.5,-28,o),
(414.667,-20.333,o),
(398,-13,c),
(466,-3.667,o),
(539.167,27.5,o),
(594.5,93.5,cs),
(649.833,159.5,o),
(689,260,o),
(689,408,cs),
(689,642.187,o),
(580.127,838,o),
(367,838,cs),
(251.01,838,o),
(163.599,782.659,o),
(110.5,697.5,cs),
(58.695,614.416,o),
(34,511.255,o),
(34,404,cs)
);
},
{
closed = 1;
nodes = (
(130,588.838,o),
(207.158,762,o),
(371,762,cs),
(508.541,762,o),
(593,605.276,o),
(593,410,cs),
(593,180.667,o),
(506.333,63,o),
(357,63,cs),
(291.667,63,o),
(235.167,95.333,o),
(194.5,154,cs),
(153.833,212.667,o),
(130,297.333,o),
(130,400,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 7 values pushed */
49 17 2 1 6 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 7 values pushed */
49 17 2 2 6 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 5 4 3 4 5 3 104 0 6 0 4 5 6 4 91 2 1 1 0 3 1 3 87 0 7 7 0 83 0 0 0 20 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 6 1 6 2 1 104 0 5 4 3 4 5 3 104 0 6 0 4 5 6 4 91 0 1 0 3 1 3 87 0 7 7 0 83 0 0 0 20 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 2 6 1 6 2 1 104 0 5 4 3 4 5 3 104 0 0 0 7 6 0 7 91 0 1 4 3 1 79 0 6 0 4 5 6 4 91 0 1 1 3 83 0 3 1 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
68 66 60 58 35 35 38 33 43 38 8 21
CALL[ ]	/* CallFunction */";
};
width = 723;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(188,-94.667,o),
(205,-98,o),
(221,-98,cs),
(243.967,-98,o),
(283.907,-71,o),
(337,-71,cs),
(378.75,-71,o),
(424.544,-114,o),
(479,-114,cs),
(528.702,-114,o),
(591,-88.75,o),
(591,-62,cs),
(591,-47.333,o),
(584.333,-36,o),
(567,-36,cs),
(553,-36,o),
(537.833,-38.667,o),
(521.5,-44,cs),
(505.167,-49.333,o),
(490.667,-52,o),
(478,-52,cs),
(462.667,-52,o),
(445.833,-47.333,o),
(427.5,-38,cs),
(409.167,-28.667,o),
(391.333,-20.667,o),
(374,-14,c),
(439.333,-6,o),
(514.667,24.5,o),
(572,90.5,cs),
(629.333,156.5,o),
(671,258.667,o),
(671,408,cs),
(671,641.732,o),
(556.085,838,o),
(356,838,cs),
(252.005,838,o),
(171.961,782.438,o),
(118,697.5,cs),
(65.941,615.555,o),
(37,513.517,o),
(37,404,cs),
(37,140.669,o),
(155.176,12.969,o),
(291,-11,c),
(247.704,-23.027,o),
(188,-45.957,o),
(188,-80,cs)
);
},
{
closed = 1;
nodes = (
(112,576.966,o),
(191.939,777,o),
(360,777,cs),
(429.333,777,o),
(487.5,736.667,o),
(529.5,670,cs),
(571.5,603.333,o),
(596,511.333,o),
(596,410,cs),
(596,290,o),
(570.333,199,o),
(525,139,cs),
(479.667,79,o),
(416.333,48,o),
(343,48,cs),
(206.38,48,o),
(112,183.97,o),
(112,400,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
27 5 2 2 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 6 1 6 2 1 104 0 5 4 3 4 5 3 104 0 6 0 4 5 6 4 91 0 1 0 3 1 3 87 0 7 7 0 83 0 0 0 20 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 2 6 1 6 2 1 104 0 5 4 3 4 5 3 104 0 0 0 7 6 0 7 91 0 1 4 3 1 79 0 6 0 4 5 6 4 91 0 1 1 3 83 0 3 1 3 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
70 68 60 58 52 50 47 45 42 40 34 32 31 29 18 16 8 15
CALL[ ]	/* CallFunction */";
};
width = 708;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(532.806,-90,o),
(585,-73.493,o),
(585,-53,cs),
(585,-42.333,o),
(581.667,-37,o),
(575,-37,cs),
(568.333,-37,o),
(558,-40.333,o),
(542,-47,cs),
(520.667,-55,o),
(500.667,-58,o),
(482,-58,cs),
(446.466,-58,o),
(399.373,-25.678,o),
(362,-15,c),
(417.557,-9.444,o),
(488.338,14.505,o),
(549,86,cs),
(586.333,130,o),
(615.833,191,o),
(632.5,271,cs),
(640.833,311,o),
(645,356.667,o),
(645,408,cs),
(645,524,o),
(618.333,631.333,o),
(569,710,cs),
(519.667,788.667,o),
(446.667,838,o),
(356,838,cs),
(255.818,838,o),
(174.489,782.482,o),
(121.5,697.5,cs),
(70.201,615.229,o),
(41,513.932,o),
(41,404,cs),
(41,266.667,o),
(73.5,166,o),
(123.5,98,cs),
(173.5,30,o),
(239.667,-6,o),
(309,-14,c),
(287,-18,o),
(266.333,-24.667,o),
(247,-34,cs),
(217.667,-47.333,o),
(203,-58.667,o),
(203,-68,cs),
(203,-74.667,o),
(210.333,-80,o),
(217,-80,cs),
(239.096,-80,o),
(289.77,-47,o),
(341,-47,cs),
(382.75,-47,o),
(428.544,-90,o),
(483,-90,cs)
);
},
{
closed = 1;
nodes = (
(186.741,18,o),
(86,163.386,o),
(86,400,cs),
(86,592.013,o),
(173.824,807,o),
(362,807,cs),
(501.104,807,o),
(600,628.505,o),
(600,410,cs),
(600,279.333,o),
(572.5,182.5,o),
(526.5,116.5,cs),
(480.5,50.5,o),
(415.333,18,o),
(342,18,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
28 4 2 2 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 6 4 6 2 4 104 0 5 1 3 1 5 3 104 0 6 0 4 1 6 4 91 0 1 0 3 1 3 87 0 7 7 0 83 0 0 0 20 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 2 6 4 6 2 4 104 0 5 1 3 1 5 3 104 0 0 0 7 6 0 7 91 0 6 0 4 1 6 4 91 0 1 5 3 1 79 0 1 1 3 83 0 3 1 3 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
40 38 35 35 37 36 47 47 8 23
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = Q;
unicode = 81;
},
{
glyphname = R;
kernLeft = B;
kernRight = R;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(540,441.837,o),
(385.732,411,o),
(274,411,cs),
(260.667,411,o),
(244.333,411.333,o),
(231,414,c),
(231,732,l),
(245.667,734.667,o),
(275,739,o),
(303,739,cs),
(376.741,739,o),
(540,714.443,o),
(540,588,cs)
);
},
{
closed = 1;
nodes = (
(414.069,66.255,o),
(490.304,-44,o),
(510,-44,cs),
(663.33,-44,o),
(711,-47.713,o),
(711,-8,cs),
(711,14.667,o),
(695.667,22,o),
(661,22,cs),
(553,22,l),
(511.985,67.841,o),
(451.415,153.377,o),
(411,214,cs),
(385,251.333,o),
(359.667,290,o),
(335,330,c),
(496.822,348.879,o),
(636,429.937,o),
(636,594,cs),
(636,759.687,o),
(463.52,821,o),
(339,821,cs),
(217.226,821,o),
(169.799,818,o),
(64,818,cs),
(34.667,818,o),
(25,799.667,o),
(25,785,cs),
(25,765,o),
(40.667,753,o),
(72,749,cs),
(109.333,743.667,o),
(130.333,733,o),
(133,685,cs),
(136.017,564.326,o),
(139,528.665,o),
(139,412,cs),
(139,361.333,o),
(138.667,310.667,o),
(138,260,cs),
(137.333,209.333,o),
(137,159,o),
(137,109,cs),
(137,71.595,o),
(114.705,64.856,o),
(89,62,cs),
(63.667,58.667,o),
(46.667,54.667,o),
(38,50,cs),
(29.333,45.333,o),
(25,39,o),
(25,31,cs),
(25,9.667,o),
(30.333,0,o),
(69,0,cs),
(280,0,ls),
(334.97,0,o),
(347,13.993,o),
(347,33,cs),
(347,59.667,o),
(321.333,63,o),
(296,63,cs),
(226,63,l),
(226,325,l),
(236,325,l),
(348,163,l),
(348,163,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
9 8 2 1 0 71 1 2 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 2 0 1 2 104 0 2 3 0 2 3 102 0 6 0 7 6 7 87 0 0 0 5 83 0 5 5 12 67 0 3 3 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 2 0 1 2 104 0 2 3 0 2 3 102 0 6 0 7 6 7 87 0 0 0 5 83 0 5 5 14 67 0 3 3 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
88 85 80 78 62 55 54 33 20 52 36 8 20
CALL[ ]	/* CallFunction */";
};
width = 715;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(541,433.656,o),
(374.024,403,o),
(253,403,cs),
(251.281,403,o),
(237.37,405,o),
(211,405,c),
(211,750,l),
(217.667,750.667,o),
(225,751.667,o),
(233,753,cs),
(246.333,755.667,o),
(264.333,757,o),
(283,757,cs),
(321.017,757,o),
(383.24,751.11,o),
(440.5,727,cs),
(498.162,702.721,o),
(541,656.122,o),
(541,588,cs)
);
},
{
closed = 1;
nodes = (
(271.913,273.111,o),
(331.079,182.94,o),
(390.5,98.5,cs),
(449.957,14.009,o),
(495.244,-44,o),
(512,-44,cs),
(633.28,-44,o),
(714,-43.96,o),
(714,-18,cs),
(714,3.333,o),
(698.667,6,o),
(668,6,cs),
(545,6,l),
(497,60.667,o),
(436.667,141.333,o),
(390,212,cs),
(362.667,252.667,o),
(335.333,294.667,o),
(308,338,c),
(466.094,351.175,o),
(616,422.101,o),
(616,594,cs),
(616,759.687,o),
(443.52,821,o),
(319,821,cs),
(195.08,821,o),
(175.992,818,o),
(71,818,cs),
(57.667,818,o),
(42,813.667,o),
(42,799,cs),
(42,779.667,o),
(52.667,770,o),
(74,770,cs),
(107.333,770,o),
(134,765.667,o),
(134,735,cs),
(134,680.333,o),
(135,626.5,o),
(137,573.5,cs),
(139,520.5,o),
(140,466.667,o),
(140,412,cs),
(140,359.333,o),
(139.667,306.667,o),
(139,254,cs),
(138.333,201.333,o),
(138,149,o),
(138,97,cs),
(138,55.083,o),
(111.813,48,o),
(91,48,cs),
(69,48,o),
(54.833,46.167,o),
(48.5,42.5,cs),
(42.167,38.833,o),
(39,33.667,o),
(39,27,cs),
(39,19.667,o),
(41.333,13.333,o),
(46,8,cs),
(50.667,2.667,o),
(62.667,0,o),
(82,0,cs),
(269,0,ls),
(298.333,0,o),
(317.167,2.333,o),
(325.5,7,cs),
(333.833,11.667,o),
(338,17.667,o),
(338,25,cs),
(338,47.667,o),
(316.333,51,o),
(291,51,cs),
(211,51,l),
(211,338,l),
(211.667,337.333,o),
(212.667,337,o),
(214,337,cs),
(222,337,l),
(222,337,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
12 1 1 0 74 25 2 4 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 0 8 1 8 0 96 3 2 2 1 4 8 1 4 102 12 1 4 5 8 4 5 102 0 10 0 11 10 11 87 0 8 8 9 83 0 9 9 12 67 7 1 5 5 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 0 8 1 8 0 96 3 2 2 1 4 8 1 4 102 12 1 4 5 8 4 5 102 0 10 0 11 10 11 87 0 8 8 9 83 0 9 9 14 67 7 1 5 5 6 84 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
24 23 89 86 81 79 65 58 55 53 41 39 35 32 28 26 23 95 24 95 33 17 21 38 13 19
CALL[ ]	/* CallFunction */";
};
width = 691;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(605.907,-44,o),
(676,-50.02,o),
(676,-28,cs),
(676,-21.333,o),
(672.167,-17.333,o),
(664.5,-16,cs),
(656.833,-14.667,o),
(645.333,-14,o),
(630,-14,cs),
(534,-14,l),
(485.274,37.046,o),
(407.182,143.511,o),
(361,214,cs),
(330.333,259.333,o),
(300,305.333,o),
(270,352,c),
(429.842,352,o),
(588,415.056,o),
(588,594,cs),
(588,759.687,o),
(415.52,821,o),
(291,821,cs),
(168.137,821,o),
(158.53,818,o),
(53,818,cs),
(46.778,818,o),
(24,818.568,o),
(24,805,cs),
(24,789,o),
(45.333,789,o),
(56,789,cs),
(109.367,789,o),
(136,789.64,o),
(136,747,cs),
(136,690.333,o),
(137,634.5,o),
(139,579.5,cs),
(141,524.5,o),
(142,468.667,o),
(142,412,cs),
(142,355.333,o),
(141.667,299.333,o),
(141,244,cs),
(140.333,188.667,o),
(140,133,o),
(140,77,cs),
(140,34.341,o),
(108.014,28,o),
(73,28,cs),
(51,28,o),
(36.833,26.667,o),
(30.5,24,cs),
(24.167,21.333,o),
(21,18,o),
(21,14,cs),
(21,10.667,o),
(23.333,7.5,o),
(28,4.5,cs),
(32.667,1.5,o),
(44.667,0,o),
(64,0,cs),
(236,0,ls),
(283.822,0,o),
(303,-2.589,o),
(303,12,cs),
(303,28,o),
(283.333,31,o),
(258,31,cs),
(183,31,l),
(183,353,l),
(185,352.333,o),
(187.333,352,o),
(190,352,cs),
(213,352,l),
(261.715,290.169,o),
(332.429,185.931,o),
(389,104,cs),
(449.797,15.95,o),
(497.178,-44,o),
(514,-44,cs)
);
},
{
closed = 1;
nodes = (
(223.281,388,o),
(209.37,390,o),
(183,390,c),
(183,780,l),
(189.667,780.667,o),
(197,781.667,o),
(205,783,cs),
(218.333,785.667,o),
(236.333,787,o),
(255,787,cs),
(297.253,787,o),
(367.482,780.008,o),
(430.5,752,cs),
(495.449,723.134,o),
(543,669.419,o),
(543,588,cs),
(543,421.821,o),
(355.767,388,o),
(225,388,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 1 0 25 1 4 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
3 2 2 1 10 13 2 4 5 1 4 91 0 11 0 12 11 12 87 8 1 0 0 9 83 0 9 9 12 67 7 1 5 5 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
3 2 2 1 10 13 2 4 5 1 4 91 0 11 0 12 11 12 87 8 1 0 0 9 83 0 9 9 14 67 7 1 5 5 6 84 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
24 23 98 95 90 88 81 80 72 64 59 56 43 41 37 33 28 26 23 104 24 104 33 17 21 38 14 19
CALL[ ]	/* CallFunction */";
};
width = 657;
}
);
note = R;
unicode = 82;
},
{
glyphname = Racute;
kernLeft = B;
kernRight = R;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(406,953.333,o),
(390.667,972,o),
(364,972,cs),
(325.545,972,o),
(251,898.769,o),
(251,872,cs),
(251,856,o),
(266,841,o),
(286,841,cs),
(319.423,841,o),
(406,896.957,o),
(406,936,cs)
);
},
{
closed = 1;
nodes = (
(630,441.837,o),
(475.732,411,o),
(364,411,cs),
(350.667,411,o),
(334.333,411.333,o),
(321,414,c),
(321,732,l),
(335.667,734.667,o),
(365,739,o),
(393,739,cs),
(466.741,739,o),
(630,714.443,o),
(630,588,cs)
);
},
{
closed = 1;
nodes = (
(504.069,66.255,o),
(580.304,-44,o),
(600,-44,cs),
(753.33,-44,o),
(801,-47.713,o),
(801,-8,cs),
(801,14.667,o),
(785.667,22,o),
(751,22,cs),
(643,22,l),
(601.985,67.841,o),
(541.415,153.377,o),
(501,214,cs),
(475,251.333,o),
(449.667,290,o),
(425,330,c),
(586.822,348.879,o),
(726,429.937,o),
(726,594,cs),
(726,759.687,o),
(553.52,821,o),
(429,821,cs),
(307.226,821,o),
(259.799,818,o),
(154,818,cs),
(124.667,818,o),
(115,799.667,o),
(115,785,cs),
(115,765,o),
(130.667,753,o),
(162,749,cs),
(199.333,743.667,o),
(220.333,733,o),
(223,685,cs),
(226.017,564.326,o),
(229,528.665,o),
(229,412,cs),
(229,361.333,o),
(228.667,310.667,o),
(228,260,cs),
(227.333,209.333,o),
(227,159,o),
(227,109,cs),
(227,71.595,o),
(204.705,64.856,o),
(179,62,cs),
(153.667,58.667,o),
(136.667,54.667,o),
(128,50,cs),
(119.333,45.333,o),
(115,39,o),
(115,31,cs),
(115,9.667,o),
(120.333,0,o),
(159,0,cs),
(370,0,ls),
(424.97,0,o),
(437,13.993,o),
(437,33,cs),
(437,59.667,o),
(411.333,63,o),
(386,63,cs),
(316,63,l),
(316,325,l),
(326,325,l),
(438,163,l),
(438,163,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
25 24 2 3 2 87 1 4 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 1 0 1 106 0 0 7 0 106 0 3 2 4 2 3 4 104 0 4 5 2 4 5 102 0 8 0 9 8 9 87 0 2 2 7 83 0 7 7 12 67 0 5 5 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 1 0 1 106 0 0 7 0 106 0 3 2 4 2 3 4 104 0 4 5 2 4 5 102 0 8 0 9 8 9 87 0 2 2 7 83 0 7 7 14 67 0 5 5 6 84 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
104 101 96 94 78 71 54 33 20 52 38 38 36 10 22
CALL[ ]	/* CallFunction */";
};
width = 715;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(381,959.667,o),
(369,972,o),
(349,972,cs),
(319.753,972,o),
(243,903.873,o),
(243,877,cs),
(243,863.667,o),
(252.333,854,o),
(267,854,cs),
(293.12,854,o),
(381,908.21,o),
(381,941,cs)
);
},
{
closed = 1;
nodes = (
(541,433.656,o),
(374.024,403,o),
(253,403,cs),
(251.281,403,o),
(237.37,405,o),
(211,405,c),
(211,750,l),
(217.667,750.667,o),
(225,751.667,o),
(233,753,cs),
(246.333,755.667,o),
(264.333,757,o),
(283,757,cs),
(321.017,757,o),
(383.24,751.11,o),
(440.5,727,cs),
(498.162,702.721,o),
(541,656.122,o),
(541,588,cs)
);
},
{
closed = 1;
nodes = (
(271.913,273.111,o),
(331.079,182.94,o),
(390.5,98.5,cs),
(449.957,14.009,o),
(495.244,-44,o),
(512,-44,cs),
(633.28,-44,o),
(714,-43.96,o),
(714,-18,cs),
(714,3.333,o),
(698.667,6,o),
(668,6,cs),
(545,6,l),
(497,60.667,o),
(436.667,141.333,o),
(390,212,cs),
(362.667,252.667,o),
(335.333,294.667,o),
(308,338,c),
(466.094,351.175,o),
(616,422.101,o),
(616,594,cs),
(616,759.687,o),
(443.52,821,o),
(319,821,cs),
(195.08,821,o),
(175.992,818,o),
(71,818,cs),
(57.667,818,o),
(42,813.667,o),
(42,799,cs),
(42,779.667,o),
(52.667,770,o),
(74,770,cs),
(107.333,770,o),
(134,765.667,o),
(134,735,cs),
(134,680.333,o),
(135,626.5,o),
(137,573.5,cs),
(139,520.5,o),
(140,466.667,o),
(140,412,cs),
(140,359.333,o),
(139.667,306.667,o),
(139,254,cs),
(138.333,201.333,o),
(138,149,o),
(138,97,cs),
(138,55.083,o),
(111.813,48,o),
(91,48,cs),
(69,48,o),
(54.833,46.167,o),
(48.5,42.5,cs),
(42.167,38.833,o),
(39,33.667,o),
(39,27,cs),
(39,19.667,o),
(41.333,13.333,o),
(46,8,cs),
(50.667,2.667,o),
(62.667,0,o),
(82,0,cs),
(269,0,ls),
(298.333,0,o),
(317.167,2.333,o),
(325.5,7,cs),
(333.833,11.667,o),
(338,17.667,o),
(338,25,cs),
(338,47.667,o),
(316.333,51,o),
(291,51,cs),
(211,51,l),
(211,338,l),
(211.667,337.333,o),
(212.667,337,o),
(214,337,cs),
(222,337,l),
(222,337,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
28 1 3 2 90 41 2 6 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 1 0 1 106 0 0 11 0 106 0 2 10 3 10 2 96 5 4 2 3 6 10 3 6 102 14 1 6 7 10 6 7 102 0 12 0 13 12 13 87 0 10 10 11 83 0 11 11 12 67 9 1 7 7 8 84 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 1 0 1 106 0 0 11 0 106 0 2 10 3 10 2 96 5 4 2 3 6 10 3 6 102 14 1 6 7 10 6 7 102 0 12 0 13 12 13 87 0 10 10 11 83 0 11 11 14 67 9 1 7 7 8 84 0 8 8 13 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
40 39 105 102 97 95 81 74 71 69 57 55 51 48 44 42 39 111 40 111 33 17 21 40 38 36 15 21
CALL[ ]	/* CallFunction */";
};
width = 691;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(605.907,-44,o),
(676,-50.02,o),
(676,-28,cs),
(676,-21.333,o),
(672.167,-17.333,o),
(664.5,-16,cs),
(656.833,-14.667,o),
(645.333,-14,o),
(630,-14,cs),
(534,-14,l),
(485.274,37.046,o),
(407.182,143.511,o),
(361,214,cs),
(330.333,259.333,o),
(300,305.333,o),
(270,352,c),
(429.842,352,o),
(588,415.056,o),
(588,594,cs),
(588,759.687,o),
(415.52,821,o),
(291,821,cs),
(168.137,821,o),
(158.53,818,o),
(53,818,cs),
(46.778,818,o),
(24,818.568,o),
(24,805,cs),
(24,789,o),
(45.333,789,o),
(56,789,cs),
(109.367,789,o),
(136,789.64,o),
(136,747,cs),
(136,690.333,o),
(137,634.5,o),
(139,579.5,cs),
(141,524.5,o),
(142,468.667,o),
(142,412,cs),
(142,355.333,o),
(141.667,299.333,o),
(141,244,cs),
(140.333,188.667,o),
(140,133,o),
(140,77,cs),
(140,34.341,o),
(108.014,28,o),
(73,28,cs),
(51,28,o),
(36.833,26.667,o),
(30.5,24,cs),
(24.167,21.333,o),
(21,18,o),
(21,14,cs),
(21,10.667,o),
(23.333,7.5,o),
(28,4.5,cs),
(32.667,1.5,o),
(44.667,0,o),
(64,0,cs),
(236,0,ls),
(283.822,0,o),
(303,-2.589,o),
(303,12,cs),
(303,28,o),
(283.333,31,o),
(258,31,cs),
(183,31,l),
(183,353,l),
(185,352.333,o),
(187.333,352,o),
(190,352,cs),
(213,352,l),
(261.715,290.169,o),
(332.429,185.931,o),
(389,104,cs),
(449.797,15.95,o),
(497.178,-44,o),
(514,-44,cs)
);
},
{
closed = 1;
nodes = (
(223.281,388,o),
(209.37,390,o),
(183,390,c),
(183,780,l),
(189.667,780.667,o),
(197,781.667,o),
(205,783,cs),
(218.333,785.667,o),
(236.333,787,o),
(255,787,cs),
(297.253,787,o),
(367.482,780.008,o),
(430.5,752,cs),
(495.449,723.134,o),
(543,669.419,o),
(543,588,cs),
(543,421.821,o),
(355.767,388,o),
(225,388,cs)
);
},
{
closed = 1;
nodes = (
(256.311,875,o),
(346,928.367,o),
(346,950,cs),
(346,968.667,o),
(337.667,972,o),
(327,972,cs),
(307.012,972,o),
(232,910.697,o),
(232,886,cs),
(232,878.667,o),
(234.667,875,o),
(240,875,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
27 1 3 2 40 1 6 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 1 0 1 106 0 0 11 0 106 5 4 2 3 12 15 2 6 7 3 6 91 0 13 0 14 13 14 87 10 1 2 2 11 83 0 11 11 12 67 9 1 7 7 8 84 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 1 0 1 106 0 0 11 0 106 5 4 2 3 12 15 2 6 7 3 6 91 0 13 0 14 13 14 87 10 1 2 2 11 83 0 11 11 14 67 9 1 7 7 8 84 0 8 8 13 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
39 38 113 110 105 103 96 95 87 79 74 71 58 56 52 48 43 41 38 119 39 119 33 17 21 40 37 36 16 21
CALL[ ]	/* CallFunction */";
};
width = 657;
}
);
note = Racute;
unicode = 340;
},
{
glyphname = Rcaron;
kernLeft = B;
kernRight = R;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(457.41,972,o),
(401.555,959.889,o),
(343,922,c),
(302.967,947.904,o),
(240.991,972,o),
(224,972,cs),
(216,972,o),
(211,964.667,o),
(211,958,cs),
(211,931.333,o),
(239.333,900.5,o),
(270,874.5,cs),
(297.066,851.553,o),
(331.906,830,o),
(343,830,cs),
(367.926,830,o),
(476,909.34,o),
(476,951,cs),
(476,960.333,o),
(473.667,972,o),
(463,972,cs)
);
},
{
closed = 1;
nodes = (
(630,441.837,o),
(475.732,411,o),
(364,411,cs),
(350.667,411,o),
(334.333,411.333,o),
(321,414,c),
(321,732,l),
(335.667,734.667,o),
(365,739,o),
(393,739,cs),
(466.741,739,o),
(630,714.443,o),
(630,588,cs)
);
},
{
closed = 1;
nodes = (
(504.069,66.255,o),
(580.304,-44,o),
(600,-44,cs),
(753.33,-44,o),
(801,-47.713,o),
(801,-8,cs),
(801,14.667,o),
(785.667,22,o),
(751,22,cs),
(643,22,l),
(601.985,67.841,o),
(541.415,153.377,o),
(501,214,cs),
(475,251.333,o),
(449.667,290,o),
(425,330,c),
(586.822,348.879,o),
(726,429.937,o),
(726,594,cs),
(726,759.687,o),
(553.52,821,o),
(429,821,cs),
(307.226,821,o),
(259.799,818,o),
(154,818,cs),
(124.667,818,o),
(115,799.667,o),
(115,785,cs),
(115,765,o),
(130.667,753,o),
(162,749,cs),
(199.333,743.667,o),
(220.333,733,o),
(223,685,cs),
(226.017,564.326,o),
(229,528.665,o),
(229,412,cs),
(229,361.333,o),
(228.667,310.667,o),
(228,260,cs),
(227.333,209.333,o),
(227,159,o),
(227,109,cs),
(227,71.595,o),
(204.705,64.856,o),
(179,62,cs),
(153.667,58.667,o),
(136.667,54.667,o),
(128,50,cs),
(119.333,45.333,o),
(115,39,o),
(115,31,cs),
(115,9.667,o),
(120.333,0,o),
(159,0,cs),
(370,0,ls),
(424.97,0,o),
(437,13.993,o),
(437,33,cs),
(437,59.667,o),
(411.333,63,o),
(386,63,cs),
(316,63,l),
(316,325,l),
(326,325,l),
(438,163,l),
(438,163,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
21 1 1 0 35 34 2 4 3 97 1 5 4 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
2 11 2 0 1 0 106 0 1 8 1 106 0 4 3 5 3 4 5 104 0 5 6 3 5 6 102 0 9 0 10 9 10 87 0 3 3 8 83 0 8 8 12 67 0 6 6 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
2 11 2 0 1 0 106 0 1 8 1 106 0 4 3 5 3 4 5 104 0 5 6 3 5 6 102 0 9 0 10 9 10 87 0 3 3 8 83 0 8 8 14 67 0 6 6 7 84 0 7 7 13 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 114 111 106 104 88 81 56 53 47 45 44 43 39 36 32 30 17 15 9 7 0 25 1 25 12 15
CALL[ ]	/* CallFunction */";
};
width = 715;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(436.663,972,o),
(388.994,958.643,o),
(325,921,c),
(285.008,944.525,o),
(223.679,972,o),
(206,972,cs),
(198.667,972,o),
(195,967.667,o),
(195,959,cs),
(195,917.54,o),
(303.04,847,o),
(325,847,cs),
(350.107,847,o),
(456,919.046,o),
(456,955,cs),
(456,964.333,o),
(453,972,o),
(445,972,cs)
);
},
{
closed = 1;
nodes = (
(541,433.656,o),
(374.024,403,o),
(253,403,cs),
(251.281,403,o),
(237.37,405,o),
(211,405,c),
(211,750,l),
(217.667,750.667,o),
(225,751.667,o),
(233,753,cs),
(246.333,755.667,o),
(264.333,757,o),
(283,757,cs),
(321.017,757,o),
(383.24,751.11,o),
(440.5,727,cs),
(498.162,702.721,o),
(541,656.122,o),
(541,588,cs)
);
},
{
closed = 1;
nodes = (
(271.913,273.111,o),
(331.079,182.94,o),
(390.5,98.5,cs),
(449.957,14.009,o),
(495.244,-44,o),
(512,-44,cs),
(633.28,-44,o),
(714,-43.96,o),
(714,-18,cs),
(714,3.333,o),
(698.667,6,o),
(668,6,cs),
(545,6,l),
(497,60.667,o),
(436.667,141.333,o),
(390,212,cs),
(362.667,252.667,o),
(335.333,294.667,o),
(308,338,c),
(466.094,351.175,o),
(616,422.101,o),
(616,594,cs),
(616,759.687,o),
(443.52,821,o),
(319,821,cs),
(195.08,821,o),
(175.992,818,o),
(71,818,cs),
(57.667,818,o),
(42,813.667,o),
(42,799,cs),
(42,779.667,o),
(52.667,770,o),
(74,770,cs),
(107.333,770,o),
(134,765.667,o),
(134,735,cs),
(134,680.333,o),
(135,626.5,o),
(137,573.5,cs),
(139,520.5,o),
(140,466.667,o),
(140,412,cs),
(140,359.333,o),
(139.667,306.667,o),
(139,254,cs),
(138.333,201.333,o),
(138,149,o),
(138,97,cs),
(138,55.083,o),
(111.813,48,o),
(91,48,cs),
(69,48,o),
(54.833,46.167,o),
(48.5,42.5,cs),
(42.167,38.833,o),
(39,33.667,o),
(39,27,cs),
(39,19.667,o),
(41.333,13.333,o),
(46,8,cs),
(50.667,2.667,o),
(62.667,0,o),
(82,0,cs),
(269,0,ls),
(298.333,0,o),
(317.167,2.333,o),
(325.5,7,cs),
(333.833,11.667,o),
(338,17.667,o),
(338,25,cs),
(338,47.667,o),
(316.333,51,o),
(291,51,cs),
(211,51,l),
(211,338,l),
(211.667,337.333,o),
(212.667,337,o),
(214,337,cs),
(222,337,l),
(222,337,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
20 1 1 0 37 1 4 3 99 50 2 7 4 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
2 15 2 0 1 0 106 0 1 12 1 106 0 3 11 4 11 3 96 6 5 2 4 7 11 4 7 102 16 1 7 8 11 7 8 102 0 13 0 14 13 14 87 0 11 11 12 83 0 12 12 12 67 10 1 8 8 9 84 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
2 15 2 0 1 0 106 0 1 12 1 106 0 3 11 4 11 3 96 6 5 2 4 7 11 4 7 102 16 1 7 8 11 7 8 102 0 13 0 14 13 14 87 0 11 11 12 83 0 12 12 14 67 10 1 8 8 9 84 0 9 9 13 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
49 48 1 0 114 111 106 104 90 83 80 78 66 64 60 57 53 51 48 120 49 120 44 42 41 40 39 38 33 31 16 14 9 7 0 24 1 24 17 15
CALL[ ]	/* CallFunction */";
};
width = 691;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(605.907,-44,o),
(676,-50.02,o),
(676,-28,cs),
(676,-21.333,o),
(672.167,-17.333,o),
(664.5,-16,cs),
(656.833,-14.667,o),
(645.333,-14,o),
(630,-14,cs),
(534,-14,l),
(485.274,37.046,o),
(407.182,143.511,o),
(361,214,cs),
(330.333,259.333,o),
(300,305.333,o),
(270,352,c),
(429.842,352,o),
(588,415.056,o),
(588,594,cs),
(588,759.687,o),
(415.52,821,o),
(291,821,cs),
(168.137,821,o),
(158.53,818,o),
(53,818,cs),
(46.778,818,o),
(24,818.568,o),
(24,805,cs),
(24,789,o),
(45.333,789,o),
(56,789,cs),
(109.367,789,o),
(136,789.64,o),
(136,747,cs),
(136,690.333,o),
(137,634.5,o),
(139,579.5,cs),
(141,524.5,o),
(142,468.667,o),
(142,412,cs),
(142,355.333,o),
(141.667,299.333,o),
(141,244,cs),
(140.333,188.667,o),
(140,133,o),
(140,77,cs),
(140,34.341,o),
(108.014,28,o),
(73,28,cs),
(51,28,o),
(36.833,26.667,o),
(30.5,24,cs),
(24.167,21.333,o),
(21,18,o),
(21,14,cs),
(21,10.667,o),
(23.333,7.5,o),
(28,4.5,cs),
(32.667,1.5,o),
(44.667,0,o),
(64,0,cs),
(236,0,ls),
(283.822,0,o),
(303,-2.589,o),
(303,12,cs),
(303,28,o),
(283.333,31,o),
(258,31,cs),
(183,31,l),
(183,353,l),
(185,352.333,o),
(187.333,352,o),
(190,352,cs),
(213,352,l),
(261.715,290.169,o),
(332.429,185.931,o),
(389,104,cs),
(449.797,15.95,o),
(497.178,-44,o),
(514,-44,cs)
);
},
{
closed = 1;
nodes = (
(223.281,388,o),
(209.37,390,o),
(183,390,c),
(183,780,l),
(189.667,780.667,o),
(197,781.667,o),
(205,783,cs),
(218.333,785.667,o),
(236.333,787,o),
(255,787,cs),
(297.253,787,o),
(367.482,780.008,o),
(430.5,752,cs),
(495.449,723.134,o),
(543,669.419,o),
(543,588,cs),
(543,421.821,o),
(355.767,388,o),
(225,388,cs)
);
},
{
closed = 1;
nodes = (
(321.706,876,o),
(427,935.626,o),
(427,961,cs),
(427,968.333,o),
(424.333,972,o),
(419,972,cs),
(412.254,972,o),
(363.504,954.149,o),
(299,920,c),
(262.068,939.552,o),
(192.695,972,o),
(180,972,cs),
(174.667,972,o),
(172,968.333,o),
(172,961,cs),
(172,937.359,o),
(275.08,876,o),
(299,876,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
19 1 1 0 36 1 4 3 49 1 7 4 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
2 16 2 0 1 0 106 0 1 12 1 106 6 5 2 4 13 17 2 7 8 4 7 91 0 14 0 15 14 15 87 11 1 3 3 12 83 0 12 12 12 67 10 1 8 8 9 84 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
2 16 2 0 1 0 106 0 1 12 1 106 6 5 2 4 13 17 2 7 8 4 7 91 0 14 0 15 14 15 87 11 1 3 3 12 83 0 12 12 14 67 10 1 8 8 9 84 0 9 9 13 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
48 47 1 0 122 119 114 112 105 104 96 88 83 80 67 65 61 57 52 50 47 128 48 128 43 41 40 39 38 37 32 30 15 13 8 6 0 23 1 23 18 15
CALL[ ]	/* CallFunction */";
};
width = 657;
}
);
note = Rcaron;
unicode = 344;
},
{
glyphname = Rcommaaccent;
kernLeft = B;
kernRight = R;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(630,441.837,o),
(475.732,411,o),
(364,411,cs),
(350.667,411,o),
(334.333,411.333,o),
(321,414,c),
(321,732,l),
(335.667,734.667,o),
(365,739,o),
(393,739,cs),
(466.741,739,o),
(630,714.443,o),
(630,588,cs)
);
},
{
closed = 1;
nodes = (
(504.069,66.255,o),
(580.304,-44,o),
(600,-44,cs),
(753.33,-44,o),
(801,-47.713,o),
(801,-8,cs),
(801,14.667,o),
(785.667,22,o),
(751,22,cs),
(643,22,l),
(601.985,67.841,o),
(541.415,153.377,o),
(501,214,cs),
(475,251.333,o),
(449.667,290,o),
(425,330,c),
(586.822,348.879,o),
(726,429.937,o),
(726,594,cs),
(726,759.687,o),
(553.52,821,o),
(429,821,cs),
(307.226,821,o),
(259.799,818,o),
(154,818,cs),
(124.667,818,o),
(115,799.667,o),
(115,785,cs),
(115,765,o),
(130.667,753,o),
(162,749,cs),
(199.333,743.667,o),
(220.333,733,o),
(223,685,cs),
(226.017,564.326,o),
(229,528.665,o),
(229,412,cs),
(229,361.333,o),
(228.667,310.667,o),
(228,260,cs),
(227.333,209.333,o),
(227,159,o),
(227,109,cs),
(227,71.595,o),
(204.705,64.856,o),
(179,62,cs),
(153.667,58.667,o),
(136.667,54.667,o),
(128,50,cs),
(119.333,45.333,o),
(115,39,o),
(115,31,cs),
(115,9.667,o),
(120.333,0,o),
(159,0,cs),
(370,0,ls),
(424.97,0,o),
(437,13.993,o),
(437,33,cs),
(437,59.667,o),
(411.333,63,o),
(386,63,cs),
(316,63,l),
(316,325,l),
(326,325,l),
(438,163,l),
(438,163,l)
);
},
{
closed = 1;
nodes = (
(302,-132.971,o),
(338,-134.557,o),
(338,-152,cs),
(338,-172,o),
(335.5,-186.833,o),
(330.5,-196.5,cs),
(325.5,-206.167,o),
(323,-214.333,o),
(323,-221,cs),
(323,-243.667,o),
(342.333,-244,o),
(349,-244,cs),
(367.413,-244,o),
(430,-201.536,o),
(430,-125,cs),
(430,-67.667,o),
(394,-44,o),
(362,-44,cs),
(318,-44,o),
(302,-74,o),
(302,-102,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
9 8 2 1 0 71 1 2 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 1 0 2 0 1 2 104 0 2 3 0 2 3 102 0 6 0 7 8 6 7 91 0 0 0 5 83 0 5 5 12 67 0 3 3 4 84 0 4 4 13 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 2 0 1 2 104 0 2 3 0 2 3 102 0 6 0 7 8 6 7 91 0 8 0 9 8 9 87 0 0 0 5 83 0 5 5 12 67 0 3 3 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 2 0 1 2 104 0 2 3 0 2 3 102 0 6 0 7 8 6 7 91 0 8 0 9 8 9 87 0 0 0 5 83 0 5 5 14 67 0 3 3 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
105 103 97 95 88 85 80 78 62 55 54 33 20 52 36 10 20
CALL[ ]	/* CallFunction */";
};
width = 715;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(541,433.656,o),
(374.024,403,o),
(253,403,cs),
(251.281,403,o),
(237.37,405,o),
(211,405,c),
(211,750,l),
(217.667,750.667,o),
(225,751.667,o),
(233,753,cs),
(246.333,755.667,o),
(264.333,757,o),
(283,757,cs),
(321.017,757,o),
(383.24,751.11,o),
(440.5,727,cs),
(498.162,702.721,o),
(541,656.122,o),
(541,588,cs)
);
},
{
closed = 1;
nodes = (
(271.913,273.111,o),
(331.079,182.94,o),
(390.5,98.5,cs),
(449.957,14.009,o),
(495.244,-44,o),
(512,-44,cs),
(633.28,-44,o),
(714,-43.96,o),
(714,-18,cs),
(714,3.333,o),
(698.667,6,o),
(668,6,cs),
(545,6,l),
(497,60.667,o),
(436.667,141.333,o),
(390,212,cs),
(362.667,252.667,o),
(335.333,294.667,o),
(308,338,c),
(466.094,351.175,o),
(616,422.101,o),
(616,594,cs),
(616,759.687,o),
(443.52,821,o),
(319,821,cs),
(195.08,821,o),
(175.992,818,o),
(71,818,cs),
(57.667,818,o),
(42,813.667,o),
(42,799,cs),
(42,779.667,o),
(52.667,770,o),
(74,770,cs),
(107.333,770,o),
(134,765.667,o),
(134,735,cs),
(134,680.333,o),
(135,626.5,o),
(137,573.5,cs),
(139,520.5,o),
(140,466.667,o),
(140,412,cs),
(140,359.333,o),
(139.667,306.667,o),
(139,254,cs),
(138.333,201.333,o),
(138,149,o),
(138,97,cs),
(138,55.083,o),
(111.813,48,o),
(91,48,cs),
(69,48,o),
(54.833,46.167,o),
(48.5,42.5,cs),
(42.167,38.833,o),
(39,33.667,o),
(39,27,cs),
(39,19.667,o),
(41.333,13.333,o),
(46,8,cs),
(50.667,2.667,o),
(62.667,0,o),
(82,0,cs),
(269,0,ls),
(298.333,0,o),
(317.167,2.333,o),
(325.5,7,cs),
(333.833,11.667,o),
(338,17.667,o),
(338,25,cs),
(338,47.667,o),
(316.333,51,o),
(291,51,cs),
(211,51,l),
(211,338,l),
(211.667,337.333,o),
(212.667,337,o),
(214,337,cs),
(222,337,l),
(222,337,l)
);
},
{
closed = 1;
nodes = (
(301,-132,o),
(337,-131,o),
(337,-148,cs),
(337,-165,o),
(335,-178,o),
(331,-186,cs),
(326,-195,o),
(324,-202,o),
(324,-208,cs),
(324,-225,o),
(338,-227,o),
(345,-227,cs),
(369,-227,o),
(410,-177,o),
(410,-123,cs),
(410,-70,o),
(380,-51,o),
(353,-51,cs),
(316,-51,o),
(301,-76,o),
(301,-100,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
13 1 1 0 75 26 2 4 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 0 8 1 8 0 96 3 2 2 1 4 8 1 4 102 14 1 4 5 8 4 5 102 0 10 0 11 12 10 11 91 0 8 8 9 83 0 9 9 12 67 7 1 5 5 6 84 0 6 6 13 67 0 12 12 13 83 0 13 13 25 13 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 0 8 1 8 0 96 3 2 2 1 4 8 1 4 102 14 1 4 5 8 4 5 102 0 10 0 11 12 10 11 91 0 12 0 13 12 13 87 0 8 8 9 83 0 9 9 12 67 7 1 5 5 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 0 8 1 8 0 96 3 2 2 1 4 8 1 4 102 14 1 4 5 8 4 5 102 0 10 0 11 12 10 11 91 0 12 0 13 12 13 87 0 8 8 9 83 0 9 9 14 67 7 1 5 5 6 84 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
25 24 109 107 101 99 90 87 82 80 66 59 56 54 42 40 36 33 29 27 24 96 25 96 33 17 21 39 15 30
CALL[ ]	/* CallFunction */";
};
width = 691;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(605.907,-44,o),
(676,-50.02,o),
(676,-28,cs),
(676,-21.333,o),
(672.167,-17.333,o),
(664.5,-16,cs),
(656.833,-14.667,o),
(645.333,-14,o),
(630,-14,cs),
(534,-14,l),
(485.274,37.046,o),
(407.182,143.511,o),
(361,214,cs),
(330.333,259.333,o),
(300,305.333,o),
(270,352,c),
(429.842,352,o),
(588,415.056,o),
(588,594,cs),
(588,759.687,o),
(415.52,821,o),
(291,821,cs),
(168.137,821,o),
(158.53,818,o),
(53,818,cs),
(46.778,818,o),
(24,818.568,o),
(24,805,cs),
(24,789,o),
(45.333,789,o),
(56,789,cs),
(109.367,789,o),
(136,789.64,o),
(136,747,cs),
(136,690.333,o),
(137,634.5,o),
(139,579.5,cs),
(141,524.5,o),
(142,468.667,o),
(142,412,cs),
(142,355.333,o),
(141.667,299.333,o),
(141,244,cs),
(140.333,188.667,o),
(140,133,o),
(140,77,cs),
(140,34.341,o),
(108.014,28,o),
(73,28,cs),
(51,28,o),
(36.833,26.667,o),
(30.5,24,cs),
(24.167,21.333,o),
(21,18,o),
(21,14,cs),
(21,10.667,o),
(23.333,7.5,o),
(28,4.5,cs),
(32.667,1.5,o),
(44.667,0,o),
(64,0,cs),
(236,0,ls),
(283.822,0,o),
(303,-2.589,o),
(303,12,cs),
(303,28,o),
(283.333,31,o),
(258,31,cs),
(183,31,l),
(183,353,l),
(185,352.333,o),
(187.333,352,o),
(190,352,cs),
(213,352,l),
(261.715,290.169,o),
(332.429,185.931,o),
(389,104,cs),
(449.797,15.95,o),
(497.178,-44,o),
(514,-44,cs)
);
},
{
closed = 1;
nodes = (
(365.943,-202,o),
(382,-152.312,o),
(382,-123,cs),
(382,-77.667,o),
(360,-66,o),
(340,-66,cs),
(313.333,-66,o),
(300,-82.667,o),
(300,-100,cs),
(300,-132.202,o),
(336,-126.69,o),
(336,-144,cs),
(336,-150.667,o),
(334.167,-158.833,o),
(330.5,-168.5,cs),
(326.833,-178.167,o),
(325,-185.333,o),
(325,-190,cs),
(325,-196.667,o),
(332.333,-202,o),
(339,-202,cs)
);
},
{
closed = 1;
nodes = (
(223.281,388,o),
(209.37,390,o),
(183,390,c),
(183,780,l),
(189.667,780.667,o),
(197,781.667,o),
(205,783,cs),
(218.333,785.667,o),
(236.333,787,o),
(255,787,cs),
(297.253,787,o),
(367.482,780.008,o),
(430.5,752,cs),
(495.449,723.134,o),
(543,669.419,o),
(543,588,cs),
(543,421.821,o),
(355.767,388,o),
(225,388,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 1 0 25 1 4 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
3 2 2 1 10 15 2 4 5 1 4 91 0 11 0 12 13 11 12 91 8 1 0 0 9 83 0 9 9 12 67 7 1 5 5 6 84 0 6 6 13 67 0 13 13 14 83 0 14 14 17 14 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
3 2 2 1 10 15 2 4 5 1 4 91 0 11 0 12 13 11 12 91 0 13 0 14 13 14 87 8 1 0 0 9 83 0 9 9 12 67 7 1 5 5 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
3 2 2 1 10 15 2 4 5 1 4 91 0 11 0 12 13 11 12 91 0 13 0 14 13 14 87 8 1 0 0 9 83 0 9 9 14 67 7 1 5 5 6 84 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
24 23 117 115 109 107 98 95 90 88 81 80 72 64 59 56 43 41 37 33 28 26 23 104 24 104 33 17 21 38 16 19
CALL[ ]	/* CallFunction */";
};
width = 657;
}
);
note = Rcommaaccent;
unicode = 342;
},
{
glyphname = S;
kernLeft = S;
kernRight = S;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(175,10.333,o),
(254,-16,o),
(338,-16,cs),
(443.837,-16,o),
(555,34.349,o),
(555,149,cs),
(555,226.378,o),
(502.863,283.581,o),
(437,322.5,cs),
(369.035,362.661,o),
(303.779,381.849,o),
(259,402,cs),
(202.342,426.282,o),
(146,470.699,o),
(146,567,cs),
(146,688.046,o),
(232.883,759,o),
(316,759,cs),
(407.391,759,o),
(460.583,670.793,o),
(471,551,cs),
(473.666,524.34,o),
(475.666,492,o),
(517,492,cs),
(543.667,492,o),
(557,503.333,o),
(557,526,cs),
(557,546.667,o),
(556.667,567.833,o),
(556,589.5,cs),
(555.333,611.167,o),
(555,631,o),
(555,649,cs),
(555,674.333,o),
(555.667,700.167,o),
(557,726.5,cs),
(558.333,752.833,o),
(559,774.333,o),
(559,791,cs),
(559,808.593,o),
(555.874,837,o),
(518,837,cs),
(482.115,837,o),
(474,815.277,o),
(474,796,cs),
(474,787.881,o),
(478.532,747.551,o),
(481,713,c),
(446.333,805,o),
(400.667,837,o),
(322,837,cs),
(176.951,837,o),
(55,727.218,o),
(55,562,cs),
(55,410.698,o),
(154.922,353.703,o),
(240,314,cs),
(340.597,268.492,o),
(463,229.694,o),
(463,154,cs),
(463,104.667,o),
(413,62,o),
(329,62,cs),
(227.261,62,o),
(149.197,133.051,o),
(135,187,cs),
(129.75,210.624,o),
(127.959,271,o),
(84,271,cs),
(45.488,271,o),
(44,219.799,o),
(44,196,cs),
(44,186,o),
(44.333,173,o),
(45,157,cs),
(45.667,141,o),
(46,126.333,o),
(46,113,cs),
(46,66.928,o),
(42,35.633,o),
(42,9,cs),
(42,-9.667,o),
(52.333,-32,o),
(83,-32,cs),
(111,-32,o),
(127,-13.667,o),
(127,9,cs),
(127,15.667,o),
(126.833,24,o),
(126.5,34,cs),
(126.167,44,o),
(125,61,o),
(123,85,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
53 1 5 6 0 1 2 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 1 0 0 1 0 87 0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 2 2 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 6 5 3 6 79 4 1 3 0 5 1 3 5 91 0 1 0 0 1 0 87 0 2 2 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
109 107 87 85 77 75 64 62 51 49 40 46 37 8 18
CALL[ ]	/* CallFunction */";
};
width = 628;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(143.949,9.268,o),
(233.745,-16,o),
(308,-16,cs),
(411.533,-16,o),
(556,25.867,o),
(556,145,cs),
(556,209.637,o),
(505.454,260.246,o),
(439,297.5,cs),
(357.939,342.943,o),
(315.163,353.653,o),
(255,381,cs),
(191.164,410.258,o),
(125,442.447,o),
(125,565,cs),
(125,667.937,o),
(208.556,777,o),
(320,777,cs),
(404.117,777,o),
(495.628,681.467,o),
(506,557,c),
(506,527.667,o),
(513.333,498,o),
(540,498,cs),
(564,498,o),
(576,513.333,o),
(576,532,cs),
(576,553.333,o),
(575.667,573.333,o),
(575,592,cs),
(574.333,610.667,o),
(574,630.667,o),
(574,652,cs),
(574,676,o),
(574.667,700.5,o),
(576,725.5,cs),
(577.333,750.5,o),
(578,774.667,o),
(578,798,cs),
(578,805.789,o),
(570.917,831,o),
(543,831,cs),
(515,831,o),
(509,812,o),
(509,796,cs),
(509,795.333,o),
(509.667,784.833,o),
(511,764.5,cs),
(512.333,744.167,o),
(514.333,713,o),
(517,671,c),
(477,787,o),
(409.333,837,o),
(312,837,cs),
(192.587,837,o),
(54,724.006,o),
(54,574,cs),
(54,403.612,o),
(155.185,355.163,o),
(243,314,cs),
(313.119,279.942,o),
(485,228.603,o),
(485,145,cs),
(485,82.056,o),
(393.803,44,o),
(305,44,cs),
(189.802,44,o),
(117,108.457,o),
(117,180,cs),
(117,210.841,o),
(113.133,249,o),
(80,249,cs),
(50.667,249,o),
(46,223.667,o),
(46,205,cs),
(46,172.997,o),
(48,140.003,o),
(48,108,cs),
(48,76.5,o),
(44,25.337,o),
(44,7,cs),
(44,-2.333,o),
(56.333,-26,o),
(79,-26,cs),
(103,-26,o),
(113,-7,o),
(113,9,cs),
(111,47,ls),
(110.333,58.333,o),
(110,71,o),
(110,85,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
78 55 2 5 6 0 1 2 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 20 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 1 0 0 1 0 87 0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 20 67 0 2 2 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 0 0 1 0 87 0 2 2 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
106 104 84 82 76 74 62 60 53 51 40 46 37 8 18
CALL[ ]	/* CallFunction */";
};
width = 613;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(80.667,-16,o),
(87,-7.667,o),
(87,9,c),
(86.333,13,o),
(86,17.333,o),
(86,22,cs),
(86,26,o),
(85.833,30.333,o),
(85.5,35,cs),
(85.167,39.667,o),
(85,44.667,o),
(85,50,cs),
(84.333,62,o),
(84,75.667,o),
(84,91,c),
(126.894,13.255,o),
(226.613,-16,o),
(312,-16,cs),
(398.006,-16,o),
(540,25.668,o),
(540,145,cs),
(540,201,o),
(490.167,242.667,o),
(429.5,276,cs),
(362.87,312.61,o),
(308.406,327.944,o),
(259,351,cs),
(179.788,387.965,o),
(99,430.813,o),
(99,565,cs),
(99,688.337,o),
(195.518,807,o),
(320,807,cs),
(428.604,807,o),
(499.268,711.877,o),
(510,567,c),
(510,537.667,o),
(512.333,508,o),
(531,508,cs),
(548.333,508,o),
(550,523.333,o),
(550,542,cs),
(550,563.333,o),
(549.667,581.667,o),
(549,597,cs),
(548.333,612.333,o),
(548,630.667,o),
(548,652,cs),
(548,676,o),
(548.667,700.5,o),
(550,725.5,cs),
(551.333,750.5,o),
(552,774.667,o),
(552,798,cs),
(552,807.333,o),
(545.333,821,o),
(532,821,cs),
(519.333,821,o),
(513,812.667,o),
(513,796,cs),
(513,795.333,o),
(513.667,784.833,o),
(515,764.5,cs),
(516.333,744.167,o),
(518.333,713,o),
(521,671,c),
(481,787,o),
(413.333,837,o),
(316,837,cs),
(196.587,837,o),
(58,724.006,o),
(58,574,cs),
(58,411.577,o),
(156.719,356.319,o),
(247,314,cs),
(319.186,279.912,o),
(499,229.891,o),
(499,145,cs),
(499,62.65,o),
(403.657,14,o),
(309,14,cs),
(171.965,14,o),
(91,94.858,o),
(91,180,cs),
(91,209.333,o),
(87.667,239,o),
(69,239,cs),
(51.667,239,o),
(50,223.667,o),
(50,205,cs),
(50,172.997,o),
(52,140.003,o),
(52,108,cs),
(52,76.5,o),
(48,25.337,o),
(48,7,cs),
(48,-2.333,o),
(54.667,-16,o),
(68,-16,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
76 56 2 5 6 0 1 2 1 7 1 0 2 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 12 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 3 0 6 5 3 6 91 0 5 5 4 83 0 4 4 14 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
102 100 82 80 74 72 62 60 54 52 38 46 40 8 18
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = S;
unicode = 83;
},
{
glyphname = Sacute;
kernLeft = S;
kernRight = S;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(404,953.333,o),
(389.667,972,o),
(363,972,cs),
(325.323,972,o),
(249,899.498,o),
(249,872,cs),
(249,856,o),
(264,841,o),
(284,841,cs),
(317.423,841,o),
(404,896.957,o),
(404,936,cs)
);
},
{
closed = 1;
nodes = (
(175,10.333,o),
(254,-16,o),
(338,-16,cs),
(443.837,-16,o),
(555,34.349,o),
(555,149,cs),
(555,226.378,o),
(502.863,283.581,o),
(437,322.5,cs),
(369.035,362.661,o),
(303.779,381.849,o),
(259,402,cs),
(202.342,426.282,o),
(146,470.699,o),
(146,567,cs),
(146,688.046,o),
(232.883,759,o),
(316,759,cs),
(407.391,759,o),
(460.583,670.793,o),
(471,551,cs),
(473.666,524.34,o),
(475.666,492,o),
(517,492,cs),
(543.667,492,o),
(557,503.333,o),
(557,526,cs),
(557,546.667,o),
(556.667,567.833,o),
(556,589.5,cs),
(555.333,611.167,o),
(555,631,o),
(555,649,cs),
(555,674.333,o),
(555.667,700.167,o),
(557,726.5,cs),
(558.333,752.833,o),
(559,774.333,o),
(559,791,cs),
(559,808.593,o),
(555.874,837,o),
(518,837,cs),
(482.115,837,o),
(474,815.277,o),
(474,796,cs),
(474,787.881,o),
(478.532,747.551,o),
(481,713,c),
(446.333,805,o),
(400.667,837,o),
(322,837,cs),
(176.951,837,o),
(55,727.218,o),
(55,562,cs),
(55,410.698,o),
(154.922,353.703,o),
(240,314,cs),
(340.597,268.492,o),
(463,229.694,o),
(463,154,cs),
(463,104.667,o),
(413,62,o),
(329,62,cs),
(227.261,62,o),
(149.197,133.051,o),
(135,187,cs),
(129.75,210.624,o),
(127.959,271,o),
(84,271,cs),
(45.488,271,o),
(44,219.799,o),
(44,196,cs),
(44,186,o),
(44.333,173,o),
(45,157,cs),
(45.667,141,o),
(46,126.333,o),
(46,113,cs),
(46,66.928,o),
(42,35.633,o),
(42,9,cs),
(42,-9.667,o),
(52.333,-32,o),
(83,-32,cs),
(111,-32,o),
(127,-13.667,o),
(127,9,cs),
(127,15.667,o),
(126.833,24,o),
(126.5,34,cs),
(126.167,44,o),
(125,61,o),
(123,85,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
69 1 7 8 16 1 4 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 1 0 1 106 0 0 5 0 106 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 67 0 4 4 9 84 0 9 9 21 67 0 3 3 2 83 0 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 1 106 0 0 5 0 106 0 3 0 2 3 2 87 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 67 0 4 4 9 84 0 9 9 21 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 1 106 0 0 5 0 106 0 8 7 5 8 79 6 1 5 0 7 3 5 7 91 0 3 0 2 3 2 87 0 4 4 9 84 0 9 9 21 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
125 123 103 101 93 91 80 78 67 65 40 46 39 38 36 10 20
CALL[ ]	/* CallFunction */";
};
width = 628;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(391,959.667,o),
(379,972,o),
(359,972,cs),
(329.753,972,o),
(253,903.873,o),
(253,877,cs),
(253,863.667,o),
(262.333,854,o),
(277,854,cs),
(303.12,854,o),
(391,908.21,o),
(391,941,cs)
);
},
{
closed = 1;
nodes = (
(143.949,9.268,o),
(233.745,-16,o),
(308,-16,cs),
(411.533,-16,o),
(556,25.867,o),
(556,145,cs),
(556,209.637,o),
(505.454,260.246,o),
(439,297.5,cs),
(357.939,342.943,o),
(315.163,353.653,o),
(255,381,cs),
(191.164,410.258,o),
(125,442.447,o),
(125,565,cs),
(125,667.937,o),
(208.556,777,o),
(320,777,cs),
(404.117,777,o),
(495.628,681.467,o),
(506,557,c),
(506,527.667,o),
(513.333,498,o),
(540,498,cs),
(564,498,o),
(576,513.333,o),
(576,532,cs),
(576,553.333,o),
(575.667,573.333,o),
(575,592,cs),
(574.333,610.667,o),
(574,630.667,o),
(574,652,cs),
(574,676,o),
(574.667,700.5,o),
(576,725.5,cs),
(577.333,750.5,o),
(578,774.667,o),
(578,798,cs),
(578,805.789,o),
(570.917,831,o),
(543,831,cs),
(515,831,o),
(509,812,o),
(509,796,cs),
(509,795.333,o),
(509.667,784.833,o),
(511,764.5,cs),
(512.333,744.167,o),
(514.333,713,o),
(517,671,c),
(477,787,o),
(409.333,837,o),
(312,837,cs),
(192.587,837,o),
(54,724.006,o),
(54,574,cs),
(54,403.612,o),
(155.185,355.163,o),
(243,314,cs),
(313.119,279.942,o),
(485,228.603,o),
(485,145,cs),
(485,82.056,o),
(393.803,44,o),
(305,44,cs),
(189.802,44,o),
(117,108.457,o),
(117,180,cs),
(117,210.841,o),
(113.133,249,o),
(80,249,cs),
(50.667,249,o),
(46,223.667,o),
(46,205,cs),
(46,172.997,o),
(48,140.003,o),
(48,108,cs),
(48,76.5,o),
(44,25.337,o),
(44,7,cs),
(44,-2.333,o),
(56.333,-26,o),
(79,-26,cs),
(103,-26,o),
(113,-7,o),
(113,9,cs),
(111,47,ls),
(110.333,58.333,o),
(110,71,o),
(110,85,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
94 71 2 7 8 16 1 4 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 1 0 5 1 94 0 0 5 0 106 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 67 0 3 3 2 83 9 1 2 2 21 67 0 4 4 2 83 9 1 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 1 0 1 106 0 0 5 0 106 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 67 0 3 3 2 83 9 1 2 2 21 67 0 4 4 2 83 9 1 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 1 0 1 106 0 0 5 0 106 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 67 0 4 4 9 83 0 9 9 21 67 0 3 3 2 83 0 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 1 106 0 0 5 0 106 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 20 67 0 4 4 9 83 0 9 9 21 67 0 3 3 2 83 0 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 1 0 1 106 0 0 5 0 106 0 3 0 2 3 2 87 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 20 67 0 4 4 9 83 0 9 9 21 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 0 5 0 106 0 5 0 8 7 5 8 92 0 6 0 7 3 6 7 91 0 3 0 2 3 2 87 0 4 4 9 83 0 9 9 21 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
122 120 100 98 92 90 78 76 69 67 40 46 39 38 36 10 20
CALL[ ]	/* CallFunction */";
};
width = 613;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(80.667,-16,o),
(87,-7.667,o),
(87,9,c),
(86.333,13,o),
(86,17.333,o),
(86,22,cs),
(86,26,o),
(85.833,30.333,o),
(85.5,35,cs),
(85.167,39.667,o),
(85,44.667,o),
(85,50,cs),
(84.333,62,o),
(84,75.667,o),
(84,91,c),
(126.894,13.255,o),
(226.613,-16,o),
(312,-16,cs),
(398.006,-16,o),
(540,25.668,o),
(540,145,cs),
(540,201,o),
(490.167,242.667,o),
(429.5,276,cs),
(362.87,312.61,o),
(308.406,327.944,o),
(259,351,cs),
(179.788,387.965,o),
(99,430.813,o),
(99,565,cs),
(99,688.337,o),
(195.518,807,o),
(320,807,cs),
(428.604,807,o),
(499.268,711.877,o),
(510,567,c),
(510,537.667,o),
(512.333,508,o),
(531,508,cs),
(548.333,508,o),
(550,523.333,o),
(550,542,cs),
(550,563.333,o),
(549.667,581.667,o),
(549,597,cs),
(548.333,612.333,o),
(548,630.667,o),
(548,652,cs),
(548,676,o),
(548.667,700.5,o),
(550,725.5,cs),
(551.333,750.5,o),
(552,774.667,o),
(552,798,cs),
(552,807.333,o),
(545.333,821,o),
(532,821,cs),
(519.333,821,o),
(513,812.667,o),
(513,796,cs),
(513,795.333,o),
(513.667,784.833,o),
(515,764.5,cs),
(516.333,744.167,o),
(518.333,713,o),
(521,671,c),
(481,787,o),
(413.333,837,o),
(316,837,cs),
(196.587,837,o),
(58,724.006,o),
(58,574,cs),
(58,411.577,o),
(156.719,356.319,o),
(247,314,cs),
(319.186,279.912,o),
(499,229.891,o),
(499,145,cs),
(499,62.65,o),
(403.657,14,o),
(309,14,cs),
(171.965,14,o),
(91,94.858,o),
(91,180,cs),
(91,209.333,o),
(87.667,239,o),
(69,239,cs),
(51.667,239,o),
(50,223.667,o),
(50,205,cs),
(50,172.997,o),
(52,140.003,o),
(52,108,cs),
(52,76.5,o),
(48,25.337,o),
(48,7,cs),
(48,-2.333,o),
(54.667,-16,o),
(68,-16,cs)
);
},
{
closed = 1;
nodes = (
(283.311,875,o),
(373,928.367,o),
(373,950,cs),
(373,968.667,o),
(364.667,972,o),
(354,972,cs),
(334.012,972,o),
(259,910.697,o),
(259,886,cs),
(259,878.667,o),
(261.667,875,o),
(267,875,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
91 71 2 7 8 15 1 4 3 22 1 2 4 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 1 0 5 1 94 0 0 5 0 106 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 2 83 9 1 2 2 21 67 0 4 4 2 83 9 1 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 1 0 1 106 0 0 5 0 106 0 8 8 5 83 0 5 5 20 67 0 7 7 6 83 0 6 6 12 67 0 3 3 2 83 9 1 2 2 21 67 0 4 4 2 83 9 1 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 1 106 0 0 5 0 106 0 5 0 8 7 5 8 92 0 7 7 6 83 0 6 6 14 67 0 3 3 2 83 9 1 2 2 21 67 0 4 4 2 83 9 1 2 2 21 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
117 115 97 95 89 87 77 75 69 67 38 46 42 37 36 10 20
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = Sacute;
unicode = 346;
},
{
glyphname = Scaron;
kernLeft = S;
kernRight = S;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(175,10.333,o),
(254,-16,o),
(338,-16,cs),
(443.837,-16,o),
(555,34.349,o),
(555,149,cs),
(555,226.378,o),
(502.863,283.581,o),
(437,322.5,cs),
(369.035,362.661,o),
(303.779,381.849,o),
(259,402,cs),
(202.342,426.282,o),
(146,470.699,o),
(146,567,cs),
(146,688.046,o),
(232.883,759,o),
(316,759,cs),
(407.391,759,o),
(460.583,670.793,o),
(471,551,cs),
(473.666,524.34,o),
(475.666,492,o),
(517,492,cs),
(543.667,492,o),
(557,503.333,o),
(557,526,cs),
(557,546.667,o),
(556.667,567.833,o),
(556,589.5,cs),
(555.333,611.167,o),
(555,631,o),
(555,649,cs),
(555,674.333,o),
(555.667,700.167,o),
(557,726.5,cs),
(558.333,752.833,o),
(559,774.333,o),
(559,791,cs),
(559,808.593,o),
(555.874,837,o),
(518,837,cs),
(482.115,837,o),
(474,815.277,o),
(474,796,cs),
(474,787.881,o),
(478.532,747.551,o),
(481,713,c),
(447.667,801,o),
(404.333,834.333,o),
(331,837,c),
(370.501,855.434,o),
(444,917.129,o),
(444,951,cs),
(444,960.333,o),
(441.667,972,o),
(431,972,cs),
(425.41,972,o),
(369.555,959.889,o),
(311,922,c),
(270.967,947.904,o),
(208.991,972,o),
(192,972,cs),
(184,972,o),
(179,964.667,o),
(179,958,cs),
(179,911.532,o),
(261.881,852.059,o),
(296,835,c),
(164.525,821.584,o),
(55,718.285,o),
(55,562,cs),
(55,410.698,o),
(154.922,353.703,o),
(240,314,cs),
(340.597,268.492,o),
(463,229.694,o),
(463,154,cs),
(463,104.667,o),
(413,62,o),
(329,62,cs),
(227.261,62,o),
(149.197,133.051,o),
(135,187,cs),
(129.75,210.624,o),
(127.959,271,o),
(84,271,cs),
(45.488,271,o),
(44,219.799,o),
(44,196,cs),
(44,186,o),
(44.333,173,o),
(45,157,cs),
(45.667,141,o),
(46,126.333,o),
(46,113,cs),
(46,66.928,o),
(42,35.633,o),
(42,9,cs),
(42,-9.667,o),
(52.333,-32,o),
(83,-32,cs),
(111,-32,o),
(127,-13.667,o),
(127,9,cs),
(127,15.667,o),
(126.833,24,o),
(126.5,34,cs),
(126.167,44,o),
(125,61,o),
(123,85,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
63 1 5 3 50 1 8 5 79 1 7 8 0 1 2 1 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
4 1 3 5 3 106 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 67 0 2 2 9 83 0 9 9 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
4 1 3 5 3 106 0 1 0 0 1 0 87 0 8 8 5 83 6 1 5 5 20 67 0 7 7 5 83 6 1 5 5 20 67 0 2 2 9 83 0 9 9 21 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
4 1 3 5 3 106 0 8 7 5 8 79 6 1 5 0 7 1 5 7 91 0 1 0 0 1 0 87 0 2 2 9 83 0 9 9 21 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
135 133 113 111 103 101 90 88 77 76 69 67 59 57 40 46 37 10 18
CALL[ ]	/* CallFunction */";
};
width = 628;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(423.663,972,o),
(375.994,958.643,o),
(312,921,c),
(272.008,944.525,o),
(210.679,972,o),
(193,972,cs),
(185.667,972,o),
(182,967.667,o),
(182,959,cs),
(182,917.54,o),
(290.04,847,o),
(312,847,cs),
(337.107,847,o),
(443,919.046,o),
(443,955,cs),
(443,964.333,o),
(440,972,o),
(432,972,cs)
);
},
{
closed = 1;
nodes = (
(143.949,9.268,o),
(233.745,-16,o),
(308,-16,cs),
(411.533,-16,o),
(556,25.867,o),
(556,145,cs),
(556,209.637,o),
(505.454,260.246,o),
(439,297.5,cs),
(357.939,342.943,o),
(315.163,353.653,o),
(255,381,cs),
(191.164,410.258,o),
(125,442.447,o),
(125,565,cs),
(125,667.937,o),
(208.556,777,o),
(320,777,cs),
(404.117,777,o),
(495.628,681.467,o),
(506,557,c),
(506,527.667,o),
(513.333,498,o),
(540,498,cs),
(564,498,o),
(576,513.333,o),
(576,532,cs),
(576,553.333,o),
(575.667,573.333,o),
(575,592,cs),
(574.333,610.667,o),
(574,630.667,o),
(574,652,cs),
(574,676,o),
(574.667,700.5,o),
(576,725.5,cs),
(577.333,750.5,o),
(578,774.667,o),
(578,798,cs),
(578,805.789,o),
(570.917,831,o),
(543,831,cs),
(515,831,o),
(509,812,o),
(509,796,cs),
(509,795.333,o),
(509.667,784.833,o),
(511,764.5,cs),
(512.333,744.167,o),
(514.333,713,o),
(517,671,c),
(477,787,o),
(409.333,837,o),
(312,837,cs),
(192.587,837,o),
(54,724.006,o),
(54,574,cs),
(54,403.612,o),
(155.185,355.163,o),
(243,314,cs),
(313.119,279.942,o),
(485,228.603,o),
(485,145,cs),
(485,82.056,o),
(393.803,44,o),
(305,44,cs),
(189.802,44,o),
(117,108.457,o),
(117,180,cs),
(117,210.841,o),
(113.133,249,o),
(80,249,cs),
(50.667,249,o),
(46,223.667,o),
(46,205,cs),
(46,172.997,o),
(48,140.003,o),
(48,108,cs),
(48,76.5,o),
(44,25.337,o),
(44,7,cs),
(44,-2.333,o),
(56.333,-26,o),
(79,-26,cs),
(103,-26,o),
(113,-7,o),
(113,9,cs),
(111,47,ls),
(110.333,58.333,o),
(110,71,o),
(110,85,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
20 1 1 0 103 80 2 8 9 25 1 5 4 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 9 9 6 83 7 1 6 6 20 67 0 8 8 6 83 7 1 6 6 20 67 0 4 4 3 83 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 9 9 6 83 7 1 6 6 20 67 0 8 8 6 83 7 1 6 6 20 67 0 5 5 10 83 0 10 10 21 67 0 4 4 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 9 9 6 83 0 6 6 20 67 0 8 8 7 83 0 7 7 20 67 0 5 5 10 83 0 10 10 21 67 0 4 4 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 4 0 3 4 3 87 0 9 9 6 83 0 6 6 20 67 0 8 8 7 83 0 7 7 20 67 0 5 5 10 83 0 10 10 21 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 6 0 9 8 6 9 91 0 7 0 8 4 7 8 91 0 4 0 3 4 3 87 0 5 5 10 83 0 10 10 21 10 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 131 129 109 107 101 99 87 85 78 76 58 56 48 46 32 30 16 14 9 7 0 24 1 24 12 15
CALL[ ]	/* CallFunction */";
};
width = 613;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(80.667,-16,o),
(87,-7.667,o),
(87,9,c),
(86.333,13,o),
(86,17.333,o),
(86,22,cs),
(86,26,o),
(85.833,30.333,o),
(85.5,35,cs),
(85.167,39.667,o),
(85,44.667,o),
(85,50,cs),
(84.333,62,o),
(84,75.667,o),
(84,91,c),
(126.894,13.255,o),
(226.613,-16,o),
(312,-16,cs),
(398.006,-16,o),
(540,25.668,o),
(540,145,cs),
(540,201,o),
(490.167,242.667,o),
(429.5,276,cs),
(362.87,312.61,o),
(308.406,327.944,o),
(259,351,cs),
(179.788,387.965,o),
(99,430.813,o),
(99,565,cs),
(99,688.337,o),
(195.518,807,o),
(320,807,cs),
(428.604,807,o),
(499.268,711.877,o),
(510,567,c),
(510,537.667,o),
(512.333,508,o),
(531,508,cs),
(548.333,508,o),
(550,523.333,o),
(550,542,cs),
(550,563.333,o),
(549.667,581.667,o),
(549,597,cs),
(548.333,612.333,o),
(548,630.667,o),
(548,652,cs),
(548,676,o),
(548.667,700.5,o),
(550,725.5,cs),
(551.333,750.5,o),
(552,774.667,o),
(552,798,cs),
(552,807.333,o),
(545.333,821,o),
(532,821,cs),
(519.333,821,o),
(513,812.667,o),
(513,796,cs),
(513,795.333,o),
(513.667,784.833,o),
(515,764.5,cs),
(516.333,744.167,o),
(518.333,713,o),
(521,671,c),
(481,787,o),
(413.333,837,o),
(316,837,cs),
(196.587,837,o),
(58,724.006,o),
(58,574,cs),
(58,411.577,o),
(156.719,356.319,o),
(247,314,cs),
(319.186,279.912,o),
(499,229.891,o),
(499,145,cs),
(499,62.65,o),
(403.657,14,o),
(309,14,cs),
(171.965,14,o),
(91,94.858,o),
(91,180,cs),
(91,209.333,o),
(87.667,239,o),
(69,239,cs),
(51.667,239,o),
(50,223.667,o),
(50,205,cs),
(50,172.997,o),
(52,140.003,o),
(52,108,cs),
(52,76.5,o),
(48,25.337,o),
(48,7,cs),
(48,-2.333,o),
(54.667,-16,o),
(68,-16,cs)
);
},
{
closed = 1;
nodes = (
(335.706,876,o),
(441,935.626,o),
(441,961,cs),
(441,968.333,o),
(438.333,972,o),
(433,972,cs),
(426.254,972,o),
(377.504,954.149,o),
(313,920,c),
(276.068,939.552,o),
(206.695,972,o),
(194,972,cs),
(188.667,972,o),
(186,968.333,o),
(186,961,cs),
(186,937.359,o),
(289.08,876,o),
(313,876,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
19 1 1 0 100 80 2 8 9 24 1 5 4 31 1 3 5 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 9 9 6 83 0 6 6 20 67 0 8 8 7 83 0 7 7 12 67 0 4 4 3 83 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
2 11 2 0 1 0 106 0 1 6 1 106 0 6 0 9 8 6 9 91 0 8 8 7 83 0 7 7 14 67 0 4 4 3 83 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 126 124 106 104 98 96 86 84 78 76 58 56 50 48 34 32 15 13 8 6 0 23 1 23 12 15
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = Scaron;
unicode = 352;
},
{
glyphname = Scedilla;
kernLeft = S;
kernRight = S;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(175,10.333,o),
(254,-16,o),
(338,-16,cs),
(443.837,-16,o),
(555,34.349,o),
(555,149,cs),
(555,226.378,o),
(502.863,283.581,o),
(437,322.5,cs),
(369.035,362.661,o),
(303.779,381.849,o),
(259,402,cs),
(202.342,426.282,o),
(146,470.699,o),
(146,567,cs),
(146,688.046,o),
(232.883,759,o),
(316,759,cs),
(407.391,759,o),
(460.583,670.793,o),
(471,551,cs),
(473.666,524.34,o),
(475.666,492,o),
(517,492,cs),
(543.667,492,o),
(557,503.333,o),
(557,526,cs),
(557,546.667,o),
(556.667,567.833,o),
(556,589.5,cs),
(555.333,611.167,o),
(555,631,o),
(555,649,cs),
(555,674.333,o),
(555.667,700.167,o),
(557,726.5,cs),
(558.333,752.833,o),
(559,774.333,o),
(559,791,cs),
(559,808.593,o),
(555.874,837,o),
(518,837,cs),
(482.115,837,o),
(474,815.277,o),
(474,796,cs),
(474,787.881,o),
(478.532,747.551,o),
(481,713,c),
(446.333,805,o),
(400.667,837,o),
(322,837,cs),
(176.951,837,o),
(55,727.218,o),
(55,562,cs),
(55,410.698,o),
(154.922,353.703,o),
(240,314,cs),
(340.597,268.492,o),
(463,229.694,o),
(463,154,cs),
(463,104.667,o),
(413,62,o),
(329,62,cs),
(227.261,62,o),
(149.197,133.051,o),
(135,187,cs),
(129.75,210.624,o),
(127.959,271,o),
(84,271,cs),
(45.488,271,o),
(44,219.799,o),
(44,196,cs),
(44,186,o),
(44.333,173,o),
(45,157,cs),
(45.667,141,o),
(46,126.333,o),
(46,113,cs),
(46,66.928,o),
(42,35.633,o),
(42,9,cs),
(42,-9.667,o),
(52.333,-32,o),
(83,-32,cs),
(111,-32,o),
(127,-13.667,o),
(127,9,cs),
(127,15.667,o),
(126.833,24,o),
(126.5,34,cs),
(126.167,44,o),
(125,61,o),
(123,85,c)
);
},
{
closed = 1;
nodes = (
(263,-138.971,o),
(299,-140.557,o),
(299,-158,cs),
(299,-178,o),
(296.5,-192.833,o),
(291.5,-202.5,cs),
(286.5,-212.167,o),
(284,-220.333,o),
(284,-227,cs),
(284,-249.667,o),
(303.333,-250,o),
(310,-250,cs),
(328.413,-250,o),
(391,-207.536,o),
(391,-131,cs),
(391,-73.667,o),
(355,-50,o),
(323,-50,cs),
(279,-50,o),
(263,-80,o),
(263,-108,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
53 1 5 6 0 1 2 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 8 0 9 8 9 87 0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 1 0 0 8 1 0 91 0 8 0 9 8 9 87 0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 2 2 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 6 5 3 6 79 4 1 3 0 5 1 3 5 91 0 1 0 0 8 1 0 91 0 8 0 9 8 9 87 0 2 2 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
123 121 115 113 109 107 87 85 77 75 64 62 51 49 40 46 37 10 18
CALL[ ]	/* CallFunction */";
};
width = 628;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(143.949,9.268,o),
(233.745,-16,o),
(308,-16,cs),
(411.533,-16,o),
(556,25.867,o),
(556,145,cs),
(556,209.637,o),
(505.454,260.246,o),
(439,297.5,cs),
(357.939,342.943,o),
(315.163,353.653,o),
(255,381,cs),
(191.164,410.258,o),
(125,442.447,o),
(125,565,cs),
(125,667.937,o),
(208.556,777,o),
(320,777,cs),
(404.117,777,o),
(495.628,681.467,o),
(506,557,c),
(506,527.667,o),
(513.333,498,o),
(540,498,cs),
(564,498,o),
(576,513.333,o),
(576,532,cs),
(576,553.333,o),
(575.667,573.333,o),
(575,592,cs),
(574.333,610.667,o),
(574,630.667,o),
(574,652,cs),
(574,676,o),
(574.667,700.5,o),
(576,725.5,cs),
(577.333,750.5,o),
(578,774.667,o),
(578,798,cs),
(578,805.789,o),
(570.917,831,o),
(543,831,cs),
(515,831,o),
(509,812,o),
(509,796,cs),
(509,795.333,o),
(509.667,784.833,o),
(511,764.5,cs),
(512.333,744.167,o),
(514.333,713,o),
(517,671,c),
(477,787,o),
(409.333,837,o),
(312,837,cs),
(192.587,837,o),
(54,724.006,o),
(54,574,cs),
(54,403.612,o),
(155.185,355.163,o),
(243,314,cs),
(313.119,279.942,o),
(485,228.603,o),
(485,145,cs),
(485,82.056,o),
(393.803,44,o),
(305,44,cs),
(189.802,44,o),
(117,108.457,o),
(117,180,cs),
(117,210.841,o),
(113.133,249,o),
(80,249,cs),
(50.667,249,o),
(46,223.667,o),
(46,205,cs),
(46,172.997,o),
(48,140.003,o),
(48,108,cs),
(48,76.5,o),
(44,25.337,o),
(44,7,cs),
(44,-2.333,o),
(56.333,-26,o),
(79,-26,cs),
(103,-26,o),
(113,-7,o),
(113,9,cs),
(111,47,ls),
(110.333,58.333,o),
(110,71,o),
(110,85,c)
);
},
{
closed = 1;
nodes = (
(246,-137,o),
(282,-136,o),
(282,-153,cs),
(282,-170,o),
(280,-183,o),
(276,-191,cs),
(271,-200,o),
(269,-207,o),
(269,-213,cs),
(269,-230,o),
(283,-232,o),
(290,-232,cs),
(314,-232,o),
(355,-182,o),
(355,-128,cs),
(355,-75,o),
(325,-56,o),
(298,-56,cs),
(261,-56,o),
(246,-81,o),
(246,-105,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
79 56 2 5 6 1 1 2 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 8 0 9 8 9 87 0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 8 0 9 8 9 87 0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 20 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 0 8 1 0 91 0 8 0 9 8 9 87 0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 20 67 0 2 2 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 0 0 8 1 0 91 0 8 0 9 8 9 87 0 2 2 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
123 121 115 113 107 105 85 83 77 75 63 61 54 52 40 46 38 10 29
CALL[ ]	/* CallFunction */";
};
width = 613;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(80.667,-16,o),
(87,-7.667,o),
(87,9,c),
(86.333,13,o),
(86,17.333,o),
(86,22,cs),
(86,26,o),
(85.833,30.333,o),
(85.5,35,cs),
(85.167,39.667,o),
(85,44.667,o),
(85,50,cs),
(84.333,62,o),
(84,75.667,o),
(84,91,c),
(126.894,13.255,o),
(226.613,-16,o),
(312,-16,cs),
(398.006,-16,o),
(540,25.668,o),
(540,145,cs),
(540,201,o),
(490.167,242.667,o),
(429.5,276,cs),
(362.87,312.61,o),
(308.406,327.944,o),
(259,351,cs),
(179.788,387.965,o),
(99,430.813,o),
(99,565,cs),
(99,688.337,o),
(195.518,807,o),
(320,807,cs),
(428.604,807,o),
(499.268,711.877,o),
(510,567,c),
(510,537.667,o),
(512.333,508,o),
(531,508,cs),
(548.333,508,o),
(550,523.333,o),
(550,542,cs),
(550,563.333,o),
(549.667,581.667,o),
(549,597,cs),
(548.333,612.333,o),
(548,630.667,o),
(548,652,cs),
(548,676,o),
(548.667,700.5,o),
(550,725.5,cs),
(551.333,750.5,o),
(552,774.667,o),
(552,798,cs),
(552,807.333,o),
(545.333,821,o),
(532,821,cs),
(519.333,821,o),
(513,812.667,o),
(513,796,cs),
(513,795.333,o),
(513.667,784.833,o),
(515,764.5,cs),
(516.333,744.167,o),
(518.333,713,o),
(521,671,c),
(481,787,o),
(413.333,837,o),
(316,837,cs),
(196.587,837,o),
(58,724.006,o),
(58,574,cs),
(58,411.577,o),
(156.719,356.319,o),
(247,314,cs),
(319.186,279.912,o),
(499,229.891,o),
(499,145,cs),
(499,62.65,o),
(403.657,14,o),
(309,14,cs),
(171.965,14,o),
(91,94.858,o),
(91,180,cs),
(91,209.333,o),
(87.667,239,o),
(69,239,cs),
(51.667,239,o),
(50,223.667,o),
(50,205,cs),
(50,172.997,o),
(52,140.003,o),
(52,108,cs),
(52,76.5,o),
(48,25.337,o),
(48,7,cs),
(48,-2.333,o),
(54.667,-16,o),
(68,-16,cs)
);
},
{
closed = 1;
nodes = (
(329.943,-204,o),
(346,-154.312,o),
(346,-125,cs),
(346,-79.667,o),
(324,-68,o),
(304,-68,cs),
(277.333,-68,o),
(264,-84.667,o),
(264,-102,cs),
(264,-134.202,o),
(300,-128.69,o),
(300,-146,cs),
(300,-152.667,o),
(298.167,-160.833,o),
(294.5,-170.5,cs),
(290.833,-180.167,o),
(289,-187.333,o),
(289,-192,cs),
(289,-198.667,o),
(296.333,-204,o),
(303,-204,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
76 56 2 5 6 0 1 2 1 7 1 0 2 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 12 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 67 0 8 8 9 83 0 9 9 17 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 8 0 9 8 9 87 0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 12 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 3 0 6 5 3 6 91 0 8 0 9 8 9 87 0 5 5 4 83 0 4 4 14 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
118 116 110 108 102 100 82 80 74 72 62 60 54 52 38 46 40 10 18
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = uni015E;
unicode = 350;
},
{
glyphname = Scircumflex;
kernLeft = S;
kernRight = S;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(439.667,830,o),
(442,841.667,o),
(442,851,cs),
(442,891.942,o),
(333.536,972,o),
(309,972,cs),
(297.856,972,o),
(263.177,950.45,o),
(236,928,cs),
(205.333,902.667,o),
(177,870.667,o),
(177,844,cs),
(177,837.333,o),
(182,830,o),
(190,830,cs),
(206.72,830,o),
(267.662,853.252,o),
(309,880,c),
(367.555,842.111,o),
(423.41,830,o),
(429,830,cs)
);
},
{
closed = 1;
nodes = (
(175,10.333,o),
(254,-16,o),
(338,-16,cs),
(443.837,-16,o),
(555,34.349,o),
(555,149,cs),
(555,226.378,o),
(502.863,283.581,o),
(437,322.5,cs),
(369.035,362.661,o),
(303.779,381.849,o),
(259,402,cs),
(202.342,426.282,o),
(146,470.699,o),
(146,567,cs),
(146,688.046,o),
(232.883,759,o),
(316,759,cs),
(407.391,759,o),
(460.583,670.793,o),
(471,551,cs),
(473.666,524.34,o),
(475.666,492,o),
(517,492,cs),
(543.667,492,o),
(557,503.333,o),
(557,526,cs),
(557,546.667,o),
(556.667,567.833,o),
(556,589.5,cs),
(555.333,611.167,o),
(555,631,o),
(555,649,cs),
(555,674.333,o),
(555.667,700.167,o),
(557,726.5,cs),
(558.333,752.833,o),
(559,774.333,o),
(559,791,cs),
(559,808.593,o),
(555.874,837,o),
(518,837,cs),
(482.115,837,o),
(474,815.277,o),
(474,796,cs),
(474,787.881,o),
(478.532,747.551,o),
(481,713,c),
(446.333,805,o),
(400.667,837,o),
(322,837,cs),
(176.951,837,o),
(55,727.218,o),
(55,562,cs),
(55,410.698,o),
(154.922,353.703,o),
(240,314,cs),
(340.597,268.492,o),
(463,229.694,o),
(463,154,cs),
(463,104.667,o),
(413,62,o),
(329,62,cs),
(227.261,62,o),
(149.197,133.051,o),
(135,187,cs),
(129.75,210.624,o),
(127.959,271,o),
(84,271,cs),
(45.488,271,o),
(44,219.799,o),
(44,196,cs),
(44,186,o),
(44.333,173,o),
(45,157,cs),
(45.667,141,o),
(46,126.333,o),
(46,113,cs),
(46,66.928,o),
(42,35.633,o),
(42,9,cs),
(42,-9.667,o),
(52.333,-32,o),
(83,-32,cs),
(111,-32,o),
(127,-13.667,o),
(127,9,cs),
(127,15.667,o),
(126.833,24,o),
(126.5,34,cs),
(126.167,44,o),
(125,61,o),
(123,85,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
5 1 6 2 79 1 8 9 26 1 5 4 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 2 6 6 2 94 1 11 2 0 6 9 6 0 9 104 0 9 9 6 83 7 1 6 6 20 67 0 8 8 6 83 7 1 6 6 20 67 0 5 5 10 83 0 10 10 21 67 0 4 4 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 2 6 2 106 1 11 2 0 6 9 6 0 9 104 0 9 9 6 83 7 1 6 6 20 67 0 8 8 6 83 7 1 6 6 20 67 0 5 5 10 83 0 10 10 21 67 0 4 4 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 2 6 2 106 1 11 2 0 6 9 6 0 9 104 0 4 0 3 4 3 87 0 9 9 6 83 7 1 6 6 20 67 0 8 8 6 83 7 1 6 6 20 67 0 5 5 10 83 0 10 10 21 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 2 6 2 106 1 11 2 0 6 9 6 0 9 104 0 9 8 6 9 80 7 1 6 0 8 4 6 8 92 0 4 0 3 4 3 87 0 5 5 10 83 0 10 10 21 10 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 135 133 113 111 103 101 90 88 77 75 59 57 49 47 33 31 19 17 11 9 0 25 1 25 12 15
CALL[ ]	/* CallFunction */";
};
width = 628;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(440,847,o),
(443,854.667,o),
(443,864,cs),
(443,900.28,o),
(335.728,972,o),
(312,972,cs),
(290.04,972,o),
(182,901.46,o),
(182,860,cs),
(182,851.333,o),
(185.667,847,o),
(193,847,cs),
(210.679,847,o),
(272.008,874.475,o),
(312,898,c),
(375.994,860.357,o),
(423.663,847,o),
(432,847,cs)
);
},
{
closed = 1;
nodes = (
(143.949,9.268,o),
(233.745,-16,o),
(308,-16,cs),
(411.533,-16,o),
(556,25.867,o),
(556,145,cs),
(556,209.637,o),
(505.454,260.246,o),
(439,297.5,cs),
(357.939,342.943,o),
(315.163,353.653,o),
(255,381,cs),
(191.164,410.258,o),
(125,442.447,o),
(125,565,cs),
(125,667.937,o),
(208.556,777,o),
(320,777,cs),
(404.117,777,o),
(495.628,681.467,o),
(506,557,c),
(506,527.667,o),
(513.333,498,o),
(540,498,cs),
(564,498,o),
(576,513.333,o),
(576,532,cs),
(576,553.333,o),
(575.667,573.333,o),
(575,592,cs),
(574.333,610.667,o),
(574,630.667,o),
(574,652,cs),
(574,676,o),
(574.667,700.5,o),
(576,725.5,cs),
(577.333,750.5,o),
(578,774.667,o),
(578,798,cs),
(578,805.789,o),
(570.917,831,o),
(543,831,cs),
(515,831,o),
(509,812,o),
(509,796,cs),
(509,795.333,o),
(509.667,784.833,o),
(511,764.5,cs),
(512.333,744.167,o),
(514.333,713,o),
(517,671,c),
(477,787,o),
(409.333,837,o),
(312,837,cs),
(192.587,837,o),
(54,724.006,o),
(54,574,cs),
(54,403.612,o),
(155.185,355.163,o),
(243,314,cs),
(313.119,279.942,o),
(485,228.603,o),
(485,145,cs),
(485,82.056,o),
(393.803,44,o),
(305,44,cs),
(189.802,44,o),
(117,108.457,o),
(117,180,cs),
(117,210.841,o),
(113.133,249,o),
(80,249,cs),
(50.667,249,o),
(46,223.667,o),
(46,205,cs),
(46,172.997,o),
(48,140.003,o),
(48,108,cs),
(48,76.5,o),
(44,25.337,o),
(44,7,cs),
(44,-2.333,o),
(56.333,-26,o),
(79,-26,cs),
(103,-26,o),
(113,-7,o),
(113,9,cs),
(111,47,ls),
(110.333,58.333,o),
(110,71,o),
(110,85,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
5 1 0 2 103 80 2 8 9 25 1 5 4 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 2 0 6 2 94 1 11 2 0 6 0 106 0 9 9 6 83 7 1 6 6 20 67 0 8 8 6 83 7 1 6 6 20 67 0 4 4 3 83 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 2 0 2 106 1 11 2 0 6 0 106 0 9 9 6 83 7 1 6 6 20 67 0 8 8 6 83 7 1 6 6 20 67 0 4 4 3 83 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 2 0 2 106 1 11 2 0 6 0 106 0 9 9 6 83 7 1 6 6 20 67 0 8 8 6 83 7 1 6 6 20 67 0 5 5 10 83 0 10 10 21 67 0 4 4 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 2 0 2 106 1 11 2 0 6 0 106 0 9 9 6 83 0 6 6 20 67 0 8 8 7 83 0 7 7 20 67 0 5 5 10 83 0 10 10 21 67 0 4 4 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 2 0 2 106 1 11 2 0 6 0 106 0 4 0 3 4 3 87 0 9 9 6 83 0 6 6 20 67 0 8 8 7 83 0 7 7 20 67 0 5 5 10 83 0 10 10 21 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 2 0 2 106 1 11 2 0 6 0 106 0 6 0 9 8 6 9 92 0 7 0 8 4 7 8 91 0 4 0 3 4 3 87 0 5 5 10 83 0 10 10 21 10 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 131 129 109 107 101 99 87 85 78 76 58 56 48 46 32 30 18 16 11 9 0 24 1 24 12 15
CALL[ ]	/* CallFunction */";
};
width = 613;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(80.667,-16,o),
(87,-7.667,o),
(87,9,c),
(86.333,13,o),
(86,17.333,o),
(86,22,cs),
(86,26,o),
(85.833,30.333,o),
(85.5,35,cs),
(85.167,39.667,o),
(85,44.667,o),
(85,50,cs),
(84.333,62,o),
(84,75.667,o),
(84,91,c),
(126.894,13.255,o),
(226.613,-16,o),
(312,-16,cs),
(398.006,-16,o),
(540,25.668,o),
(540,145,cs),
(540,201,o),
(490.167,242.667,o),
(429.5,276,cs),
(362.87,312.61,o),
(308.406,327.944,o),
(259,351,cs),
(179.788,387.965,o),
(99,430.813,o),
(99,565,cs),
(99,688.337,o),
(195.518,807,o),
(320,807,cs),
(428.604,807,o),
(499.268,711.877,o),
(510,567,c),
(510,537.667,o),
(512.333,508,o),
(531,508,cs),
(548.333,508,o),
(550,523.333,o),
(550,542,cs),
(550,563.333,o),
(549.667,581.667,o),
(549,597,cs),
(548.333,612.333,o),
(548,630.667,o),
(548,652,cs),
(548,676,o),
(548.667,700.5,o),
(550,725.5,cs),
(551.333,750.5,o),
(552,774.667,o),
(552,798,cs),
(552,807.333,o),
(545.333,821,o),
(532,821,cs),
(519.333,821,o),
(513,812.667,o),
(513,796,cs),
(513,795.333,o),
(513.667,784.833,o),
(515,764.5,cs),
(516.333,744.167,o),
(518.333,713,o),
(521,671,c),
(481,787,o),
(413.333,837,o),
(316,837,cs),
(196.587,837,o),
(58,724.006,o),
(58,574,cs),
(58,411.577,o),
(156.719,356.319,o),
(247,314,cs),
(319.186,279.912,o),
(499,229.891,o),
(499,145,cs),
(499,62.65,o),
(403.657,14,o),
(309,14,cs),
(171.965,14,o),
(91,94.858,o),
(91,180,cs),
(91,209.333,o),
(87.667,239,o),
(69,239,cs),
(51.667,239,o),
(50,223.667,o),
(50,205,cs),
(50,172.997,o),
(52,140.003,o),
(52,108,cs),
(52,76.5,o),
(48,25.337,o),
(48,7,cs),
(48,-2.333,o),
(54.667,-16,o),
(68,-16,cs)
);
},
{
closed = 1;
nodes = (
(204.158,875,o),
(252.069,894.154,o),
(316,928,c),
(380.308,893.955,o),
(428.037,875,o),
(436,875,cs),
(441.333,875,o),
(444,878.667,o),
(444,886,cs),
(444,910.708,o),
(341.596,972,o),
(316,972,cs),
(292.629,972,o),
(189,910.79,o),
(189,886,cs),
(189,878.667,o),
(191.667,875,o),
(197,875,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
5 1 0 2 100 80 2 8 9 24 1 5 4 31 1 3 5 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 2 0 6 2 94 1 11 2 0 6 0 106 0 9 9 6 83 0 6 6 20 67 0 8 8 7 83 0 7 7 12 67 0 4 4 3 83 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 2 0 2 106 1 11 2 0 6 0 106 0 9 9 6 83 0 6 6 20 67 0 8 8 7 83 0 7 7 12 67 0 4 4 3 83 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 2 0 2 106 1 11 2 0 6 0 106 0 6 0 9 8 6 9 92 0 8 8 7 83 0 7 7 14 67 0 4 4 3 83 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 126 124 106 104 98 96 86 84 78 76 58 56 50 48 34 32 18 16 11 9 0 23 1 23 12 15
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = Scircumflex;
unicode = 348;
},
{
glyphname = Scommaaccent;
kernLeft = S;
kernRight = S;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(175,10.333,o),
(254,-16,o),
(338,-16,cs),
(443.837,-16,o),
(555,34.349,o),
(555,149,cs),
(555,226.378,o),
(502.863,283.581,o),
(437,322.5,cs),
(369.035,362.661,o),
(303.779,381.849,o),
(259,402,cs),
(202.342,426.282,o),
(146,470.699,o),
(146,567,cs),
(146,688.046,o),
(232.883,759,o),
(316,759,cs),
(407.391,759,o),
(460.583,670.793,o),
(471,551,cs),
(473.666,524.34,o),
(475.666,492,o),
(517,492,cs),
(543.667,492,o),
(557,503.333,o),
(557,526,cs),
(557,546.667,o),
(556.667,567.833,o),
(556,589.5,cs),
(555.333,611.167,o),
(555,631,o),
(555,649,cs),
(555,674.333,o),
(555.667,700.167,o),
(557,726.5,cs),
(558.333,752.833,o),
(559,774.333,o),
(559,791,cs),
(559,808.593,o),
(555.874,837,o),
(518,837,cs),
(482.115,837,o),
(474,815.277,o),
(474,796,cs),
(474,787.881,o),
(478.532,747.551,o),
(481,713,c),
(446.333,805,o),
(400.667,837,o),
(322,837,cs),
(176.951,837,o),
(55,727.218,o),
(55,562,cs),
(55,410.698,o),
(154.922,353.703,o),
(240,314,cs),
(340.597,268.492,o),
(463,229.694,o),
(463,154,cs),
(463,104.667,o),
(413,62,o),
(329,62,cs),
(227.261,62,o),
(149.197,133.051,o),
(135,187,cs),
(129.75,210.624,o),
(127.959,271,o),
(84,271,cs),
(45.488,271,o),
(44,219.799,o),
(44,196,cs),
(44,186,o),
(44.333,173,o),
(45,157,cs),
(45.667,141,o),
(46,126.333,o),
(46,113,cs),
(46,66.928,o),
(42,35.633,o),
(42,9,cs),
(42,-9.667,o),
(52.333,-32,o),
(83,-32,cs),
(111,-32,o),
(127,-13.667,o),
(127,9,cs),
(127,15.667,o),
(126.833,24,o),
(126.5,34,cs),
(126.167,44,o),
(125,61,o),
(123,85,c)
);
},
{
closed = 1;
nodes = (
(263,-138.971,o),
(299,-140.557,o),
(299,-158,cs),
(299,-178,o),
(296.5,-192.833,o),
(291.5,-202.5,cs),
(286.5,-212.167,o),
(284,-220.333,o),
(284,-227,cs),
(284,-249.667,o),
(303.333,-250,o),
(310,-250,cs),
(328.413,-250,o),
(391,-207.536,o),
(391,-131,cs),
(391,-73.667,o),
(355,-50,o),
(323,-50,cs),
(279,-50,o),
(263,-80,o),
(263,-108,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
53 1 5 6 0 1 2 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 8 0 9 8 9 87 0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 1 0 0 8 1 0 91 0 8 0 9 8 9 87 0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 2 2 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 6 5 3 6 79 4 1 3 0 5 1 3 5 91 0 1 0 0 8 1 0 91 0 8 0 9 8 9 87 0 2 2 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
123 121 115 113 109 107 87 85 77 75 64 62 51 49 40 46 37 10 18
CALL[ ]	/* CallFunction */";
};
width = 628;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(143.949,9.268,o),
(233.745,-16,o),
(308,-16,cs),
(411.533,-16,o),
(556,25.867,o),
(556,145,cs),
(556,209.637,o),
(505.454,260.246,o),
(439,297.5,cs),
(357.939,342.943,o),
(315.163,353.653,o),
(255,381,cs),
(191.164,410.258,o),
(125,442.447,o),
(125,565,cs),
(125,667.937,o),
(208.556,777,o),
(320,777,cs),
(404.117,777,o),
(495.628,681.467,o),
(506,557,c),
(506,527.667,o),
(513.333,498,o),
(540,498,cs),
(564,498,o),
(576,513.333,o),
(576,532,cs),
(576,553.333,o),
(575.667,573.333,o),
(575,592,cs),
(574.333,610.667,o),
(574,630.667,o),
(574,652,cs),
(574,676,o),
(574.667,700.5,o),
(576,725.5,cs),
(577.333,750.5,o),
(578,774.667,o),
(578,798,cs),
(578,805.789,o),
(570.917,831,o),
(543,831,cs),
(515,831,o),
(509,812,o),
(509,796,cs),
(509,795.333,o),
(509.667,784.833,o),
(511,764.5,cs),
(512.333,744.167,o),
(514.333,713,o),
(517,671,c),
(477,787,o),
(409.333,837,o),
(312,837,cs),
(192.587,837,o),
(54,724.006,o),
(54,574,cs),
(54,403.612,o),
(155.185,355.163,o),
(243,314,cs),
(313.119,279.942,o),
(485,228.603,o),
(485,145,cs),
(485,82.056,o),
(393.803,44,o),
(305,44,cs),
(189.802,44,o),
(117,108.457,o),
(117,180,cs),
(117,210.841,o),
(113.133,249,o),
(80,249,cs),
(50.667,249,o),
(46,223.667,o),
(46,205,cs),
(46,172.997,o),
(48,140.003,o),
(48,108,cs),
(48,76.5,o),
(44,25.337,o),
(44,7,cs),
(44,-2.333,o),
(56.333,-26,o),
(79,-26,cs),
(103,-26,o),
(113,-7,o),
(113,9,cs),
(111,47,ls),
(110.333,58.333,o),
(110,71,o),
(110,85,c)
);
},
{
closed = 1;
nodes = (
(245,-135,o),
(281,-134,o),
(281,-151,cs),
(281,-168,o),
(279,-181,o),
(275,-189,cs),
(270,-198,o),
(268,-205,o),
(268,-211,cs),
(268,-228,o),
(282,-230,o),
(289,-230,cs),
(313,-230,o),
(354,-180,o),
(354,-126,cs),
(354,-73,o),
(324,-54,o),
(297,-54,cs),
(260,-54,o),
(245,-79,o),
(245,-103,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
79 56 2 5 6 1 1 2 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 8 0 9 8 9 87 0 6 6 3 83 4 1 3 3 20 67 0 5 5 3 83 4 1 3 3 20 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 8 0 9 8 9 87 0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 20 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 0 8 1 0 91 0 8 0 9 8 9 87 0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 20 67 0 2 2 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 0 0 8 1 0 91 0 8 0 9 8 9 87 0 2 2 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
123 121 115 113 107 105 85 83 77 75 63 61 54 52 40 46 38 10 29
CALL[ ]	/* CallFunction */";
};
width = 613;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(80.667,-16,o),
(87,-7.667,o),
(87,9,c),
(86.333,13,o),
(86,17.333,o),
(86,22,cs),
(86,26,o),
(85.833,30.333,o),
(85.5,35,cs),
(85.167,39.667,o),
(85,44.667,o),
(85,50,cs),
(84.333,62,o),
(84,75.667,o),
(84,91,c),
(126.894,13.255,o),
(226.613,-16,o),
(312,-16,cs),
(398.006,-16,o),
(540,25.668,o),
(540,145,cs),
(540,201,o),
(490.167,242.667,o),
(429.5,276,cs),
(362.87,312.61,o),
(308.406,327.944,o),
(259,351,cs),
(179.788,387.965,o),
(99,430.813,o),
(99,565,cs),
(99,688.337,o),
(195.518,807,o),
(320,807,cs),
(428.604,807,o),
(499.268,711.877,o),
(510,567,c),
(510,537.667,o),
(512.333,508,o),
(531,508,cs),
(548.333,508,o),
(550,523.333,o),
(550,542,cs),
(550,563.333,o),
(549.667,581.667,o),
(549,597,cs),
(548.333,612.333,o),
(548,630.667,o),
(548,652,cs),
(548,676,o),
(548.667,700.5,o),
(550,725.5,cs),
(551.333,750.5,o),
(552,774.667,o),
(552,798,cs),
(552,807.333,o),
(545.333,821,o),
(532,821,cs),
(519.333,821,o),
(513,812.667,o),
(513,796,cs),
(513,795.333,o),
(513.667,784.833,o),
(515,764.5,cs),
(516.333,744.167,o),
(518.333,713,o),
(521,671,c),
(481,787,o),
(413.333,837,o),
(316,837,cs),
(196.587,837,o),
(58,724.006,o),
(58,574,cs),
(58,411.577,o),
(156.719,356.319,o),
(247,314,cs),
(319.186,279.912,o),
(499,229.891,o),
(499,145,cs),
(499,62.65,o),
(403.657,14,o),
(309,14,cs),
(171.965,14,o),
(91,94.858,o),
(91,180,cs),
(91,209.333,o),
(87.667,239,o),
(69,239,cs),
(51.667,239,o),
(50,223.667,o),
(50,205,cs),
(50,172.997,o),
(52,140.003,o),
(52,108,cs),
(52,76.5,o),
(48,25.337,o),
(48,7,cs),
(48,-2.333,o),
(54.667,-16,o),
(68,-16,cs)
);
},
{
closed = 1;
nodes = (
(329.943,-204,o),
(346,-154.312,o),
(346,-125,cs),
(346,-79.667,o),
(324,-68,o),
(304,-68,cs),
(277.333,-68,o),
(264,-84.667,o),
(264,-102,cs),
(264,-134.202,o),
(300,-128.69,o),
(300,-146,cs),
(300,-152.667,o),
(298.167,-160.833,o),
(294.5,-170.5,cs),
(290.833,-180.167,o),
(289,-187.333,o),
(289,-192,cs),
(289,-198.667,o),
(296.333,-204,o),
(303,-204,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
76 56 2 5 6 0 1 2 1 7 1 0 2 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 12 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 67 0 8 8 9 83 0 9 9 17 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 8 0 9 8 9 87 0 6 6 3 83 0 3 3 20 67 0 5 5 4 83 0 4 4 12 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 3 0 6 5 3 6 91 0 8 0 9 8 9 87 0 5 5 4 83 0 4 4 14 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
118 116 110 108 102 100 82 80 74 72 62 60 54 52 38 46 40 10 18
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = uni0218;
unicode = 536;
},
{
glyphname = T;
kernLeft = T;
kernRight = T;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(275,635.663,o),
(279,502.337,o),
(279,401,cs),
(279,295.386,o),
(275,217.53,o),
(275,120,cs),
(275,77.424,o),
(243.535,72.657,o),
(209,70,cs),
(178.333,67.333,o),
(163,52.667,o),
(163,26,cs),
(163,3.333,o),
(186.333,0,o),
(205,0,cs),
(465,0,ls),
(482.333,0,o),
(492,17.333,o),
(492,32,cs),
(492,59.425,o),
(467.36,67,o),
(450,67,cs),
(371,67,l),
(371,737,l),
(515,737,ls),
(549.667,737,o),
(552,728,o),
(552,688,cs),
(552,614,ls),
(552,571.333,o),
(562.667,559,o),
(600,559,cs),
(618.667,559,o),
(640,563,o),
(640,603,cs),
(640,625.156,o),
(639,657.84,o),
(639,693,cs),
(639,703.667,o),
(639.167,717.667,o),
(639.5,735,cs),
(639.833,752.333,o),
(640,766.667,o),
(640,778,cs),
(640,816.667,o),
(634,821,o),
(602,821,cs),
(552.667,821,o),
(506.667,820.667,o),
(464,820,cs),
(421.333,819.333,o),
(375.333,819,o),
(326,819,cs),
(248.123,819,o),
(128.877,821,o),
(51,821,cs),
(20.333,821,o),
(13,816.667,o),
(13,778,cs),
(13,766.667,o),
(13.167,752.333,o),
(13.5,735,cs),
(13.833,717.667,o),
(14,703.667,o),
(14,693,cs),
(14,653.859,o),
(13,653.965,o),
(13,603,cs),
(13,564.333,o),
(37.333,559,o),
(56,559,cs),
(84,559,o),
(101,571.333,o),
(101,614,cs),
(101,688,ls),
(101,726.667,o),
(103.333,737,o),
(138,737,cs),
(275,737,l),
(275,737,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
3 1 1 0 5 0 1 5 104 4 7 2 0 0 2 83 0 2 2 12 67 0 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
3 1 1 0 5 0 1 5 104 4 7 2 0 0 2 83 0 2 2 14 67 0 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
1 0 63 60 54 52 51 49 44 42 30 20 8 6 0 82 1 82 8 15
CALL[ ]	/* CallFunction */";
};
width = 653;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(276,651.476,o),
(280,504.524,o),
(280,401,cs),
(280,346.333,o),
(279.333,294.333,o),
(278,245,cs),
(276.667,195.667,o),
(276,145.333,o),
(276,94,cs),
(276,48.763,o),
(232.368,48,o),
(208,48,cs),
(196,48,o),
(179,45.667,o),
(179,23,cs),
(179,1.667,o),
(201.333,0,o),
(220,0,cs),
(452,0,ls),
(465.333,0,o),
(472,12,o),
(472,24,cs),
(472,46.667,o),
(456.667,51,o),
(442,51,cs),
(351,51,l),
(351,755,l),
(516,755,ls),
(550.667,755,o),
(553,744.667,o),
(553,706,cs),
(553,610,ls),
(553,567.333,o),
(556.333,555,o),
(587,555,cs),
(605.667,555,o),
(620,559,o),
(620,599,cs),
(620,622.663,o),
(619,656.499,o),
(619,693,cs),
(619,703.667,o),
(619.167,717.667,o),
(619.5,735,cs),
(619.833,752.333,o),
(620,766.667,o),
(620,778,cs),
(620,816.667,o),
(614,821,o),
(582,821,cs),
(534.667,821,o),
(490.5,820.667,o),
(449.5,820,cs),
(408.5,819.333,o),
(364.333,819,o),
(317,819,cs),
(269.667,819,o),
(225.5,819.333,o),
(184.5,820,cs),
(143.5,820.667,o),
(99.333,821,o),
(52,821,cs),
(21.333,821,o),
(14,816.667,o),
(14,778,cs),
(14,766.667,o),
(14.167,752.333,o),
(14.5,735,cs),
(14.833,717.667,o),
(15,703.667,o),
(15,693,cs),
(15,659.263,o),
(14,644.555,o),
(14,599,cs),
(14,559,o),
(29.667,555,o),
(47,555,cs),
(72.333,555,o),
(81,567.333,o),
(81,610,cs),
(81,706,ls),
(81,744.667,o),
(83.333,755,o),
(118,755,cs),
(276,755,l),
(276,755,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
3 1 1 0 5 0 1 5 104 4 8 2 0 0 2 83 0 2 2 12 67 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
3 1 1 0 5 0 1 5 104 4 8 2 0 0 2 83 0 2 2 14 67 7 1 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
1 0 66 63 59 56 52 50 49 47 42 40 28 20 8 6 0 77 1 77 9 15
CALL[ ]	/* CallFunction */";
};
width = 635;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(429,0,ls),
(442.333,0,o),
(449,4.333,o),
(449,13,cs),
(449,23.667,o),
(433.667,31,o),
(419,31,cs),
(323,31,l),
(323,785,l),
(518,785,ls),
(552.667,785,o),
(555,774.667,o),
(555,736,cs),
(555,620,ls),
(555,598.667,o),
(556,584.167,o),
(558,576.5,cs),
(560,568.833,o),
(565.333,565,o),
(574,565,cs),
(579.333,565,o),
(583.667,567.333,o),
(587,572,cs),
(590.333,576.667,o),
(592,589,o),
(592,609,cs),
(592,619.667,o),
(591.833,633.5,o),
(591.5,650.5,cs),
(591.167,667.5,o),
(591,681.667,o),
(591,693,cs),
(591,703.667,o),
(591.167,717.667,o),
(591.5,735,cs),
(591.833,752.333,o),
(592,766.667,o),
(592,778,cs),
(592,816.667,o),
(586,821,o),
(554,821,cs),
(481.696,821,o),
(376.304,819,o),
(304,819,cs),
(231.696,819,o),
(126.304,821,o),
(54,821,cs),
(22,821,o),
(16,816.667,o),
(16,778,cs),
(16,766.667,o),
(16.167,752.333,o),
(16.5,735,cs),
(16.833,717.667,o),
(17,703.667,o),
(17,693,cs),
(17,681.667,o),
(16.833,667.5,o),
(16.5,650.5,cs),
(16.167,633.5,o),
(16,619.667,o),
(16,609,cs),
(16,589,o),
(17.667,576.667,o),
(21,572,cs),
(24.333,567.333,o),
(28.667,565,o),
(34,565,cs),
(42.667,565,o),
(48,568.833,o),
(50,576.5,cs),
(52,584.167,o),
(53,598.667,o),
(53,620,cs),
(53,736,ls),
(53,774.667,o),
(55.333,785,o),
(90,785,cs),
(278,785,l),
(278,672.982,o),
(282,516.771,o),
(282,401,cs),
(282,342.333,o),
(281.333,286.833,o),
(280,234.5,cs),
(278.667,182.167,o),
(278,128.667,o),
(278,74,cs),
(278,30.297,o),
(238.22,28,o),
(205,28,cs),
(193,28,o),
(176,25,o),
(176,13,cs),
(176,2.333,o),
(198.333,0,o),
(217,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
3 1 1 0 5 0 1 5 104 4 8 2 0 0 2 83 0 2 2 12 67 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
3 1 1 0 5 0 1 5 104 4 8 2 0 0 2 83 0 2 2 14 67 7 1 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
1 0 65 62 58 55 52 50 49 47 42 40 30 18 8 6 0 76 1 76 9 15
CALL[ ]	/* CallFunction */";
};
width = 609;
}
);
note = T;
unicode = 84;
},
{
glyphname = Tbar;
kernLeft = T;
kernRight = T;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(275,658.333,o),
(276.667,563.667,o),
(278,477,c),
(244.667,478.333,o),
(208,479,o),
(196,479,cs),
(173.333,479,o),
(163,453.333,o),
(163,436,cs),
(163,418.667,o),
(177.333,393,o),
(196,393,cs),
(279,393,l),
(279,290.071,o),
(275,214.859,o),
(275,120,cs),
(275,77.424,o),
(243.535,72.657,o),
(209,70,cs),
(178.333,67.333,o),
(163,52.667,o),
(163,26,cs),
(163,3.333,o),
(186.333,0,o),
(205,0,cs),
(465,0,ls),
(482.333,0,o),
(492,17.333,o),
(492,32,cs),
(492,59.425,o),
(467.36,67,o),
(450,67,cs),
(371,67,l),
(371,394,l),
(457,394,ls),
(485.933,394,o),
(493,426.067,o),
(493,439,cs),
(493,456.333,o),
(479.667,480,o),
(465,480,cs),
(453.667,480,o),
(439.833,479.667,o),
(423.5,479,cs),
(407.167,478.333,o),
(389.667,477.667,o),
(371,477,c),
(371,737,l),
(515,737,ls),
(549.667,737,o),
(552,728,o),
(552,688,cs),
(552,614,ls),
(552,571.333,o),
(562.667,559,o),
(600,559,cs),
(618.667,559,o),
(640,563,o),
(640,603,cs),
(640,625.156,o),
(639,657.84,o),
(639,693,cs),
(639,703.667,o),
(639.167,717.667,o),
(639.5,735,cs),
(639.833,752.333,o),
(640,766.667,o),
(640,778,cs),
(640,816.667,o),
(634,821,o),
(602,821,cs),
(552.667,821,o),
(506.667,820.667,o),
(464,820,cs),
(421.333,819.333,o),
(375.333,819,o),
(326,819,cs),
(248.123,819,o),
(128.877,821,o),
(51,821,cs),
(20.333,821,o),
(13,816.667,o),
(13,778,cs),
(13,766.667,o),
(13.167,752.333,o),
(13.5,735,cs),
(13.833,717.667,o),
(14,703.667,o),
(14,693,cs),
(14,653.859,o),
(13,653.965,o),
(13,603,cs),
(13,564.333,o),
(37.333,559,o),
(56,559,cs),
(84,559,o),
(101,571.333,o),
(101,614,cs),
(101,688,ls),
(101,726.667,o),
(103.333,737,o),
(138,737,cs),
(275,737,l),
(275,737,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
3 1 1 0 5 0 1 5 104 4 11 2 0 0 2 83 0 2 2 12 67 9 1 6 6 5 83 10 1 5 5 23 67 0 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
3 1 1 0 5 0 1 5 104 10 1 5 9 1 6 7 5 6 91 4 11 2 0 0 2 83 0 2 2 12 67 0 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
3 1 1 0 5 0 1 5 104 10 1 5 9 1 6 7 5 6 91 4 11 2 0 0 2 83 0 2 2 14 67 0 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 100 96 92 90 76 73 67 65 64 62 56 52 51 49 44 42 30 20 8 6 0 103 1 103 12 15
CALL[ ]	/* CallFunction */";
};
width = 653;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(440,471,o),
(420,470.5,o),
(396,469.5,cs),
(372,468.5,o),
(346,468,o),
(318,468,cs),
(273.598,468,o),
(220.379,470,o),
(187,470,cs),
(168.333,470,o),
(161,449.333,o),
(161,436,cs),
(161,422.667,o),
(172.333,402,o),
(187,402,cs),
(262.258,402,o),
(369.082,403,o),
(448,403,cs),
(469.664,403,o),
(477,425.556,o),
(477,439,cs),
(477,452.333,o),
(466.667,471,o),
(456,471,cs)
);
},
{
closed = 1;
nodes = (
(276,651.476,o),
(280,504.524,o),
(280,401,cs),
(280,346.333,o),
(279.333,294.333,o),
(278,245,cs),
(276.667,195.667,o),
(276,145.333,o),
(276,94,cs),
(276,48.763,o),
(232.368,48,o),
(208,48,cs),
(196,48,o),
(179,45.667,o),
(179,23,cs),
(179,1.667,o),
(201.333,0,o),
(220,0,cs),
(452,0,ls),
(465.333,0,o),
(472,12,o),
(472,24,cs),
(472,46.667,o),
(456.667,51,o),
(442,51,cs),
(351,51,l),
(351,755,l),
(516,755,ls),
(550.667,755,o),
(553,744.667,o),
(553,706,cs),
(553,610,ls),
(553,567.333,o),
(556.333,555,o),
(587,555,cs),
(605.667,555,o),
(620,559,o),
(620,599,cs),
(620,622.663,o),
(619,656.499,o),
(619,693,cs),
(619,703.667,o),
(619.167,717.667,o),
(619.5,735,cs),
(619.833,752.333,o),
(620,766.667,o),
(620,778,cs),
(620,816.667,o),
(614,821,o),
(582,821,cs),
(534.667,821,o),
(490.5,820.667,o),
(449.5,820,cs),
(408.5,819.333,o),
(364.333,819,o),
(317,819,cs),
(269.667,819,o),
(225.5,819.333,o),
(184.5,820,cs),
(143.5,820.667,o),
(99.333,821,o),
(52,821,cs),
(21.333,821,o),
(14,816.667,o),
(14,778,cs),
(14,766.667,o),
(14.167,752.333,o),
(14.5,735,cs),
(14.833,717.667,o),
(15,703.667,o),
(15,693,cs),
(15,659.263,o),
(14,644.555,o),
(14,599,cs),
(14,559,o),
(29.667,555,o),
(47,555,cs),
(72.333,555,o),
(81,567.333,o),
(81,610,cs),
(81,706,ls),
(81,744.667,o),
(83.333,755,o),
(118,755,cs),
(276,755,l),
(276,755,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
5 1 3 2 0 2 3 0 104 6 11 2 2 2 4 83 0 4 4 12 67 0 1 1 0 83 10 1 0 0 23 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
5 1 3 2 0 2 3 0 104 10 1 0 0 1 7 0 1 91 6 11 2 2 2 4 83 0 4 4 12 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
5 1 3 2 0 2 3 0 104 10 1 0 0 1 7 0 1 91 6 11 2 2 2 4 83 0 4 4 14 67 9 1 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
28 27 1 0 93 90 86 83 79 77 76 74 69 67 55 47 35 33 27 104 28 104 14 7 0 26 1 18 12 15
CALL[ ]	/* CallFunction */";
};
width = 635;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(429,0,ls),
(442.333,0,o),
(449,4.333,o),
(449,13,cs),
(449,23.667,o),
(433.667,31,o),
(419,31,cs),
(323,31,l),
(323,417,l),
(345.667,417,o),
(367.167,417.167,o),
(387.5,417.5,cs),
(407.833,417.833,o),
(423.667,418,o),
(435,418,cs),
(449.667,418,o),
(454,432.333,o),
(454,439,cs),
(454,445.667,o),
(448.333,456,o),
(443,456,cs),
(428.333,456,o),
(410.667,455.5,o),
(390,454.5,cs),
(369.333,453.5,o),
(347,453,o),
(323,453,c),
(323,785,l),
(518,785,ls),
(552.667,785,o),
(555,774.667,o),
(555,736,cs),
(555,620,ls),
(555,598.667,o),
(556,584.167,o),
(558,576.5,cs),
(560,568.833,o),
(565.333,565,o),
(574,565,cs),
(579.333,565,o),
(583.667,567.333,o),
(587,572,cs),
(590.333,576.667,o),
(592,589,o),
(592,609,cs),
(592,619.667,o),
(591.833,633.5,o),
(591.5,650.5,cs),
(591.167,667.5,o),
(591,681.667,o),
(591,693,cs),
(591,703.667,o),
(591.167,717.667,o),
(591.5,735,cs),
(591.833,752.333,o),
(592,766.667,o),
(592,778,cs),
(592,816.667,o),
(586,821,o),
(554,821,cs),
(481.696,821,o),
(376.304,819,o),
(304,819,cs),
(231.696,819,o),
(126.304,821,o),
(54,821,cs),
(22,821,o),
(16,816.667,o),
(16,778,cs),
(16,766.667,o),
(16.167,752.333,o),
(16.5,735,cs),
(16.833,717.667,o),
(17,703.667,o),
(17,693,cs),
(17,681.667,o),
(16.833,667.5,o),
(16.5,650.5,cs),
(16.167,633.5,o),
(16,619.667,o),
(16,609,cs),
(16,589,o),
(17.667,576.667,o),
(21,572,cs),
(24.333,567.333,o),
(28.667,565,o),
(34,565,cs),
(42.667,565,o),
(48,568.833,o),
(50,576.5,cs),
(52,584.167,o),
(53,598.667,o),
(53,620,cs),
(53,736,ls),
(53,774.667,o),
(55.333,785,o),
(90,785,cs),
(278,785,l),
(278,670.372,o),
(282,600.142,o),
(282,453,c),
(241.576,453,o),
(199.555,455,o),
(174,455,cs),
(163.333,455,o),
(158,442.667,o),
(158,436,cs),
(158,429.333,o),
(164.667,417,o),
(174,417,cs),
(282,417,l),
(282,401,ls),
(282,342.333,o),
(281.333,286.833,o),
(280,234.5,cs),
(278.667,182.167,o),
(278,128.667,o),
(278,74,cs),
(278,30.297,o),
(238.22,28,o),
(205,28,cs),
(193,28,o),
(176,25,o),
(176,13,cs),
(176,2.333,o),
(198.333,0,o),
(217,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
3 1 1 0 5 0 1 5 104 4 12 2 0 0 2 83 0 2 2 12 67 10 1 6 6 5 83 11 1 5 5 15 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
3 1 1 0 5 0 1 5 104 11 1 5 10 1 6 7 5 6 91 4 12 2 0 0 2 83 0 2 2 12 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
3 1 1 0 5 0 1 5 104 11 1 5 10 1 6 7 5 6 91 4 12 2 0 0 2 83 0 2 2 14 67 9 1 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 97 91 87 85 78 75 71 68 65 63 62 58 54 50 49 47 42 40 30 18 8 6 0 102 1 102 13 15
CALL[ ]	/* CallFunction */";
};
width = 609;
}
);
note = Tbar;
unicode = 358;
},
{
glyphname = Tcaron;
kernLeft = T;
kernRight = T;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(423.267,972,o),
(365.117,952.487,o),
(318,922,c),
(277.546,948.176,o),
(217.472,972,o),
(199,972,cs),
(189.667,972,o),
(186,964.667,o),
(186,958,cs),
(186,931.333,o),
(214.333,900.5,o),
(245,874.5,cs),
(272.066,851.553,o),
(306.906,830,o),
(318,830,cs),
(341.27,830,o),
(451,908.718,o),
(451,951,cs),
(451,960.333,o),
(448.667,972,o),
(438,972,cs)
);
},
{
closed = 1;
nodes = (
(275,635.663,o),
(279,502.337,o),
(279,401,cs),
(279,295.386,o),
(275,217.53,o),
(275,120,cs),
(275,77.424,o),
(243.535,72.657,o),
(209,70,cs),
(178.333,67.333,o),
(163,52.667,o),
(163,26,cs),
(163,3.333,o),
(186.333,0,o),
(205,0,cs),
(465,0,ls),
(482.333,0,o),
(492,17.333,o),
(492,32,cs),
(492,59.425,o),
(467.36,67,o),
(450,67,cs),
(371,67,l),
(371,737,l),
(515,737,ls),
(549.667,737,o),
(552,728,o),
(552,688,cs),
(552,614,ls),
(552,571.333,o),
(562.667,559,o),
(600,559,cs),
(618.667,559,o),
(640,563,o),
(640,603,cs),
(640,625.156,o),
(639,657.84,o),
(639,693,cs),
(639,703.667,o),
(639.167,717.667,o),
(639.5,735,cs),
(639.833,752.333,o),
(640,766.667,o),
(640,778,cs),
(640,816.667,o),
(634,821,o),
(602,821,cs),
(552.667,821,o),
(506.667,820.667,o),
(464,820,cs),
(421.333,819.333,o),
(375.333,819,o),
(326,819,cs),
(248.123,819,o),
(128.877,821,o),
(51,821,cs),
(20.333,821,o),
(13,816.667,o),
(13,778,cs),
(13,766.667,o),
(13.167,752.333,o),
(13.5,735,cs),
(13.833,717.667,o),
(14,703.667,o),
(14,693,cs),
(14,653.859,o),
(13,653.965,o),
(13,603,cs),
(13,564.333,o),
(37.333,559,o),
(56,559,cs),
(84,559,o),
(101,571.333,o),
(101,614,cs),
(101,688,ls),
(101,726.667,o),
(103.333,737,o),
(138,737,cs),
(275,737,l),
(275,737,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
2 10 2 0 1 0 106 0 1 5 1 106 6 1 4 3 8 3 4 8 104 7 11 2 3 3 5 83 0 5 5 12 67 0 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
2 10 2 0 1 0 106 0 1 5 1 106 6 1 4 3 8 3 4 8 104 7 11 2 3 3 5 83 0 5 5 14 67 0 8 8 9 83 0 9 9 13 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
27 26 1 0 89 86 80 78 77 75 70 68 56 46 34 32 26 108 27 108 17 15 9 7 0 25 1 25 12 15
CALL[ ]	/* CallFunction */";
};
width = 653;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(421.663,972,o),
(373.994,958.643,o),
(310,921,c),
(270.008,944.525,o),
(208.679,972,o),
(191,972,cs),
(183.667,972,o),
(180,967.667,o),
(180,959,cs),
(180,917.54,o),
(288.04,847,o),
(310,847,cs),
(335.107,847,o),
(441,919.046,o),
(441,955,cs),
(441,964.333,o),
(438,972,o),
(430,972,cs)
);
},
{
closed = 1;
nodes = (
(276,651.476,o),
(280,504.524,o),
(280,401,cs),
(280,346.333,o),
(279.333,294.333,o),
(278,245,cs),
(276.667,195.667,o),
(276,145.333,o),
(276,94,cs),
(276,48.763,o),
(232.368,48,o),
(208,48,cs),
(196,48,o),
(179,45.667,o),
(179,23,cs),
(179,1.667,o),
(201.333,0,o),
(220,0,cs),
(452,0,ls),
(465.333,0,o),
(472,12,o),
(472,24,cs),
(472,46.667,o),
(456.667,51,o),
(442,51,cs),
(351,51,l),
(351,755,l),
(516,755,ls),
(550.667,755,o),
(553,744.667,o),
(553,706,cs),
(553,610,ls),
(553,567.333,o),
(556.333,555,o),
(587,555,cs),
(605.667,555,o),
(620,559,o),
(620,599,cs),
(620,622.663,o),
(619,656.499,o),
(619,693,cs),
(619,703.667,o),
(619.167,717.667,o),
(619.5,735,cs),
(619.833,752.333,o),
(620,766.667,o),
(620,778,cs),
(620,816.667,o),
(614,821,o),
(582,821,cs),
(534.667,821,o),
(490.5,820.667,o),
(449.5,820,cs),
(408.5,819.333,o),
(364.333,819,o),
(317,819,cs),
(269.667,819,o),
(225.5,819.333,o),
(184.5,820,cs),
(143.5,820.667,o),
(99.333,821,o),
(52,821,cs),
(21.333,821,o),
(14,816.667,o),
(14,778,cs),
(14,766.667,o),
(14.167,752.333,o),
(14.5,735,cs),
(14.833,717.667,o),
(15,703.667,o),
(15,693,cs),
(15,659.263,o),
(14,644.555,o),
(14,599,cs),
(14,559,o),
(29.667,555,o),
(47,555,cs),
(72.333,555,o),
(81,567.333,o),
(81,610,cs),
(81,706,ls),
(81,744.667,o),
(83.333,755,o),
(118,755,cs),
(276,755,l),
(276,755,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
2 11 2 0 1 0 106 0 1 5 1 106 6 1 4 3 8 3 4 8 104 7 12 2 3 3 5 83 0 5 5 12 67 10 1 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
2 11 2 0 1 0 106 0 1 5 1 106 6 1 4 3 8 3 4 8 104 7 12 2 3 3 5 83 0 5 5 14 67 10 1 8 8 9 83 0 9 9 13 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
26 25 1 0 91 88 84 81 77 75 74 72 67 65 53 45 33 31 25 102 26 102 16 14 9 7 0 24 1 24 13 15
CALL[ ]	/* CallFunction */";
};
width = 635;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(429,0,ls),
(442.333,0,o),
(449,4.333,o),
(449,13,cs),
(449,23.667,o),
(433.667,31,o),
(419,31,cs),
(323,31,l),
(323,785,l),
(518,785,ls),
(552.667,785,o),
(555,774.667,o),
(555,736,cs),
(555,620,ls),
(555,598.667,o),
(556,584.167,o),
(558,576.5,cs),
(560,568.833,o),
(565.333,565,o),
(574,565,cs),
(579.333,565,o),
(583.667,567.333,o),
(587,572,cs),
(590.333,576.667,o),
(592,589,o),
(592,609,cs),
(592,619.667,o),
(591.833,633.5,o),
(591.5,650.5,cs),
(591.167,667.5,o),
(591,681.667,o),
(591,693,cs),
(591,703.667,o),
(591.167,717.667,o),
(591.5,735,cs),
(591.833,752.333,o),
(592,766.667,o),
(592,778,cs),
(592,816.667,o),
(586,821,o),
(554,821,cs),
(481.696,821,o),
(376.304,819,o),
(304,819,cs),
(231.696,819,o),
(126.304,821,o),
(54,821,cs),
(22,821,o),
(16,816.667,o),
(16,778,cs),
(16,766.667,o),
(16.167,752.333,o),
(16.5,735,cs),
(16.833,717.667,o),
(17,703.667,o),
(17,693,cs),
(17,681.667,o),
(16.833,667.5,o),
(16.5,650.5,cs),
(16.167,633.5,o),
(16,619.667,o),
(16,609,cs),
(16,589,o),
(17.667,576.667,o),
(21,572,cs),
(24.333,567.333,o),
(28.667,565,o),
(34,565,cs),
(42.667,565,o),
(48,568.833,o),
(50,576.5,cs),
(52,584.167,o),
(53,598.667,o),
(53,620,cs),
(53,736,ls),
(53,774.667,o),
(55.333,785,o),
(90,785,cs),
(278,785,l),
(278,672.982,o),
(282,516.771,o),
(282,401,cs),
(282,342.333,o),
(281.333,286.833,o),
(280,234.5,cs),
(278.667,182.167,o),
(278,128.667,o),
(278,74,cs),
(278,30.297,o),
(238.22,28,o),
(205,28,cs),
(193,28,o),
(176,25,o),
(176,13,cs),
(176,2.333,o),
(198.333,0,o),
(217,0,cs)
);
},
{
closed = 1;
nodes = (
(324.596,875,o),
(427,936.292,o),
(427,961,cs),
(427,968.333,o),
(424.333,972,o),
(419,972,cs),
(411.037,972,o),
(363.308,953.045,o),
(299,919,c),
(235.069,952.846,o),
(187.158,972,o),
(180,972,cs),
(174.667,972,o),
(172,968.333,o),
(172,961,cs),
(172,936.21,o),
(275.629,875,o),
(299,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
19 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
2 11 2 0 1 0 106 0 1 5 1 106 6 1 4 3 8 3 4 8 104 7 12 2 3 3 5 83 0 5 5 12 67 10 1 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
2 11 2 0 1 0 106 0 1 5 1 106 6 1 4 3 8 3 4 8 104 7 12 2 3 3 5 83 0 5 5 14 67 10 1 8 8 9 83 0 9 9 13 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
25 24 1 0 89 86 82 79 76 74 73 71 66 64 54 42 32 30 24 100 25 100 15 13 8 6 0 23 1 23 13 15
CALL[ ]	/* CallFunction */";
};
width = 609;
}
);
note = Tcaron;
unicode = 356;
},
{
glyphname = Tcedilla;
kernLeft = T;
kernRight = T;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(257,-133.971,o),
(293,-135.557,o),
(293,-153,cs),
(293,-173,o),
(290.5,-187.833,o),
(285.5,-197.5,cs),
(280.5,-207.167,o),
(278,-215.333,o),
(278,-222,cs),
(278,-244.667,o),
(297.333,-245,o),
(304,-245,cs),
(322.413,-245,o),
(385,-202.536,o),
(385,-126,cs),
(385,-68.667,o),
(349,-45,o),
(317,-45,cs),
(273,-45,o),
(257,-75,o),
(257,-103,cs)
);
},
{
closed = 1;
nodes = (
(277,635.663,o),
(281,502.337,o),
(281,401,cs),
(281,295.386,o),
(277,217.53,o),
(277,120,cs),
(277,77.424,o),
(245.535,72.657,o),
(211,70,cs),
(180.333,67.333,o),
(165,52.667,o),
(165,26,cs),
(165,3.333,o),
(188.333,0,o),
(207,0,cs),
(467,0,ls),
(484.333,0,o),
(494,17.333,o),
(494,32,cs),
(494,59.425,o),
(469.36,67,o),
(452,67,cs),
(373,67,l),
(373,737,l),
(517,737,ls),
(551.667,737,o),
(554,728,o),
(554,688,cs),
(554,614,ls),
(554,571.333,o),
(564.667,559,o),
(602,559,cs),
(620.667,559,o),
(642,563,o),
(642,603,cs),
(642,625.156,o),
(641,657.84,o),
(641,693,cs),
(641,703.667,o),
(641.167,717.667,o),
(641.5,735,cs),
(641.833,752.333,o),
(642,766.667,o),
(642,778,cs),
(642,816.667,o),
(636,821,o),
(604,821,cs),
(554.667,821,o),
(508.667,820.667,o),
(466,820,cs),
(423.333,819.333,o),
(377.333,819,o),
(328,819,cs),
(250.123,819,o),
(130.877,821,o),
(53,821,cs),
(22.333,821,o),
(15,816.667,o),
(15,778,cs),
(15,766.667,o),
(15.167,752.333,o),
(15.5,735,cs),
(15.833,717.667,o),
(16,703.667,o),
(16,693,cs),
(16,653.859,o),
(15,653.965,o),
(15,603,cs),
(15,564.333,o),
(39.333,559,o),
(58,559,cs),
(86,559,o),
(103,571.333,o),
(103,614,cs),
(103,688,ls),
(103,726.667,o),
(105.333,737,o),
(140,737,cs),
(277,737,l),
(277,737,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
5 1 3 2 7 2 3 7 104 6 9 2 2 2 4 83 0 4 4 12 67 0 7 7 8 83 0 8 8 13 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
5 1 3 2 7 2 3 7 104 0 0 0 1 0 1 87 6 9 2 2 2 4 83 0 4 4 12 67 0 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
5 1 3 2 7 2 3 7 104 0 0 0 1 0 1 87 6 9 2 2 2 4 83 0 4 4 14 67 0 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
23 22 85 82 76 74 73 71 66 64 52 42 30 28 22 104 23 104 38 34 10 17
CALL[ ]	/* CallFunction */";
};
width = 657;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(277,651,o),
(281,505,o),
(281,401,cs),
(281,346,o),
(280,294,o),
(279,245,cs),
(278,196,o),
(277,145,o),
(277,94,cs),
(277,49,o),
(233,48,o),
(209,48,cs),
(197,48,o),
(180,46,o),
(180,23,cs),
(180,2,o),
(202,0,o),
(221,0,cs),
(453,0,ls),
(466,0,o),
(473,12,o),
(473,24,cs),
(473,47,o),
(458,51,o),
(443,51,cs),
(352,51,l),
(352,755,l),
(517,755,ls),
(552,755,o),
(554,745,o),
(554,706,cs),
(554,610,ls),
(554,567,o),
(557,555,o),
(588,555,cs),
(607,555,o),
(621,559,o),
(621,599,cs),
(621,623,o),
(620,656,o),
(620,693,cs),
(620,704,o),
(620,718,o),
(621,735,cs),
(621,752,o),
(621,767,o),
(621,778,cs),
(621,817,o),
(615,821,o),
(583,821,cs),
(536,821,o),
(492,821,o),
(451,820,cs),
(410,819,o),
(365,819,o),
(318,819,cs),
(271,819,o),
(227,819,o),
(186,820,cs),
(145,821,o),
(100,821,o),
(53,821,cs),
(22,821,o),
(15,817,o),
(15,778,cs),
(15,767,o),
(15,752,o),
(16,735,cs),
(16,718,o),
(16,704,o),
(16,693,cs),
(16,659,o),
(15,645,o),
(15,599,cs),
(15,559,o),
(31,555,o),
(48,555,cs),
(73,555,o),
(82,567,o),
(82,610,cs),
(82,706,ls),
(82,745,o),
(84,755,o),
(119,755,cs),
(277,755,l),
(277,755,l)
);
},
{
closed = 1;
nodes = (
(256,-133,o),
(292,-132,o),
(292,-149,cs),
(292,-166,o),
(290,-179,o),
(286,-187,cs),
(281,-196,o),
(279,-203,o),
(279,-209,cs),
(279,-226,o),
(293,-228,o),
(300,-228,cs),
(324,-228,o),
(365,-178,o),
(365,-124,cs),
(365,-71,o),
(335,-52,o),
(308,-52,cs),
(271,-52,o),
(256,-77,o),
(256,-101,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
3 1 1 0 5 0 1 5 104 4 10 2 0 0 2 83 0 2 2 12 67 7 1 5 5 6 83 0 6 6 13 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
3 1 1 0 5 0 1 5 104 0 8 0 9 8 9 87 4 10 2 0 0 2 83 0 2 2 12 67 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
3 1 1 0 5 0 1 5 104 0 8 0 9 8 9 87 4 10 2 0 0 2 83 0 2 2 14 67 7 1 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
2 1 91 89 83 81 67 64 60 57 53 51 50 48 43 41 29 21 9 7 1 78 2 78 11 26
CALL[ ]	/* CallFunction */";
};
width = 637;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(429,0,ls),
(442.333,0,o),
(449,4.333,o),
(449,13,cs),
(449,23.667,o),
(433.667,31,o),
(419,31,cs),
(323,31,l),
(323,785,l),
(518,785,ls),
(552.667,785,o),
(555,774.667,o),
(555,736,cs),
(555,620,ls),
(555,598.667,o),
(556,584.167,o),
(558,576.5,cs),
(560,568.833,o),
(565.333,565,o),
(574,565,cs),
(579.333,565,o),
(583.667,567.333,o),
(587,572,cs),
(590.333,576.667,o),
(592,589,o),
(592,609,cs),
(592,619.667,o),
(591.833,633.5,o),
(591.5,650.5,cs),
(591.167,667.5,o),
(591,681.667,o),
(591,693,cs),
(591,703.667,o),
(591.167,717.667,o),
(591.5,735,cs),
(591.833,752.333,o),
(592,766.667,o),
(592,778,cs),
(592,816.667,o),
(586,821,o),
(554,821,cs),
(481.696,821,o),
(376.304,819,o),
(304,819,cs),
(231.696,819,o),
(126.304,821,o),
(54,821,cs),
(22,821,o),
(16,816.667,o),
(16,778,cs),
(16,766.667,o),
(16.167,752.333,o),
(16.5,735,cs),
(16.833,717.667,o),
(17,703.667,o),
(17,693,cs),
(17,681.667,o),
(16.833,667.5,o),
(16.5,650.5,cs),
(16.167,633.5,o),
(16,619.667,o),
(16,609,cs),
(16,589,o),
(17.667,576.667,o),
(21,572,cs),
(24.333,567.333,o),
(28.667,565,o),
(34,565,cs),
(42.667,565,o),
(48,568.833,o),
(50,576.5,cs),
(52,584.167,o),
(53,598.667,o),
(53,620,cs),
(53,736,ls),
(53,774.667,o),
(55.333,785,o),
(90,785,cs),
(278,785,l),
(278,672.982,o),
(282,516.771,o),
(282,401,cs),
(282,342.333,o),
(281.333,286.833,o),
(280,234.5,cs),
(278.667,182.167,o),
(278,128.667,o),
(278,74,cs),
(278,30.297,o),
(238.22,28,o),
(205,28,cs),
(193,28,o),
(176,25,o),
(176,13,cs),
(176,2.333,o),
(198.333,0,o),
(217,0,cs)
);
},
{
closed = 1;
nodes = (
(320.943,-203,o),
(337,-153.312,o),
(337,-124,cs),
(337,-78.667,o),
(315,-67,o),
(295,-67,cs),
(268.333,-67,o),
(255,-83.667,o),
(255,-101,cs),
(255,-133.202,o),
(291,-127.69,o),
(291,-145,cs),
(291,-151.667,o),
(289.167,-159.833,o),
(285.5,-169.5,cs),
(281.833,-179.167,o),
(280,-186.333,o),
(280,-191,cs),
(280,-197.667,o),
(287.333,-203,o),
(294,-203,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
5 1 3 2 7 2 3 7 104 6 10 2 2 2 4 83 0 4 4 12 67 9 1 7 7 8 83 0 8 8 13 67 0 0 0 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
5 1 3 2 7 2 3 7 104 0 0 0 1 0 1 87 6 10 2 2 2 4 83 0 4 4 12 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
5 1 3 2 7 2 3 7 104 0 0 0 1 0 1 87 6 10 2 2 2 4 83 0 4 4 14 67 9 1 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
23 22 87 84 80 77 74 72 71 69 64 62 52 40 30 28 22 98 23 98 38 34 11 17
CALL[ ]	/* CallFunction */";
};
width = 609;
}
);
note = uni0162;
unicode = 354;
},
{
glyphname = Tcommaaccent;
kernLeft = T;
kernRight = T;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(257,-130.971,o),
(293,-132.557,o),
(293,-150,cs),
(293,-170,o),
(290.5,-184.833,o),
(285.5,-194.5,cs),
(280.5,-204.167,o),
(278,-212.333,o),
(278,-219,cs),
(278,-241.667,o),
(297.333,-242,o),
(304,-242,cs),
(322.413,-242,o),
(385,-199.536,o),
(385,-123,cs),
(385,-65.667,o),
(349,-42,o),
(317,-42,cs),
(273,-42,o),
(257,-72,o),
(257,-100,cs)
);
},
{
closed = 1;
nodes = (
(277,635.663,o),
(281,502.337,o),
(281,401,cs),
(281,295.386,o),
(277,217.53,o),
(277,120,cs),
(277,77.424,o),
(245.535,72.657,o),
(211,70,cs),
(180.333,67.333,o),
(165,52.667,o),
(165,26,cs),
(165,3.333,o),
(188.333,0,o),
(207,0,cs),
(467,0,ls),
(484.333,0,o),
(494,17.333,o),
(494,32,cs),
(494,59.425,o),
(469.36,67,o),
(452,67,cs),
(373,67,l),
(373,737,l),
(517,737,ls),
(551.667,737,o),
(554,728,o),
(554,688,cs),
(554,614,ls),
(554,571.333,o),
(564.667,559,o),
(602,559,cs),
(620.667,559,o),
(642,563,o),
(642,603,cs),
(642,625.156,o),
(641,657.84,o),
(641,693,cs),
(641,703.667,o),
(641.167,717.667,o),
(641.5,735,cs),
(641.833,752.333,o),
(642,766.667,o),
(642,778,cs),
(642,816.667,o),
(636,821,o),
(604,821,cs),
(554.667,821,o),
(508.667,820.667,o),
(466,820,cs),
(423.333,819.333,o),
(377.333,819,o),
(328,819,cs),
(250.123,819,o),
(130.877,821,o),
(53,821,cs),
(22.333,821,o),
(15,816.667,o),
(15,778,cs),
(15,766.667,o),
(15.167,752.333,o),
(15.5,735,cs),
(15.833,717.667,o),
(16,703.667,o),
(16,693,cs),
(16,653.859,o),
(15,653.965,o),
(15,603,cs),
(15,564.333,o),
(39.333,559,o),
(58,559,cs),
(86,559,o),
(103,571.333,o),
(103,614,cs),
(103,688,ls),
(103,726.667,o),
(105.333,737,o),
(140,737,cs),
(277,737,l),
(277,737,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
5 1 3 2 7 2 3 7 104 6 9 2 2 2 4 83 0 4 4 12 67 0 7 7 8 83 0 8 8 13 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
5 1 3 2 7 2 3 7 104 0 0 0 1 0 1 87 6 9 2 2 2 4 83 0 4 4 12 67 0 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
5 1 3 2 7 2 3 7 104 0 0 0 1 0 1 87 6 9 2 2 2 4 83 0 4 4 14 67 0 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
23 22 85 82 76 74 73 71 66 64 52 42 30 28 22 104 23 104 38 34 10 17
CALL[ ]	/* CallFunction */";
};
width = 657;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(277,651,o),
(281,505,o),
(281,401,cs),
(281,346,o),
(280,294,o),
(279,245,cs),
(278,196,o),
(277,145,o),
(277,94,cs),
(277,49,o),
(233,48,o),
(209,48,cs),
(197,48,o),
(180,46,o),
(180,23,cs),
(180,2,o),
(202,0,o),
(221,0,cs),
(453,0,ls),
(466,0,o),
(473,12,o),
(473,24,cs),
(473,47,o),
(458,51,o),
(443,51,cs),
(352,51,l),
(352,755,l),
(517,755,ls),
(552,755,o),
(554,745,o),
(554,706,cs),
(554,610,ls),
(554,567,o),
(557,555,o),
(588,555,cs),
(607,555,o),
(621,559,o),
(621,599,cs),
(621,623,o),
(620,656,o),
(620,693,cs),
(620,704,o),
(620,718,o),
(621,735,cs),
(621,752,o),
(621,767,o),
(621,778,cs),
(621,817,o),
(615,821,o),
(583,821,cs),
(536,821,o),
(492,821,o),
(451,820,cs),
(410,819,o),
(365,819,o),
(318,819,cs),
(271,819,o),
(227,819,o),
(186,820,cs),
(145,821,o),
(100,821,o),
(53,821,cs),
(22,821,o),
(15,817,o),
(15,778,cs),
(15,767,o),
(15,752,o),
(16,735,cs),
(16,718,o),
(16,704,o),
(16,693,cs),
(16,659,o),
(15,645,o),
(15,599,cs),
(15,559,o),
(31,555,o),
(48,555,cs),
(73,555,o),
(82,567,o),
(82,610,cs),
(82,706,ls),
(82,745,o),
(84,755,o),
(119,755,cs),
(277,755,l),
(277,755,l)
);
},
{
closed = 1;
nodes = (
(256,-131,o),
(292,-130,o),
(292,-147,cs),
(292,-164,o),
(290,-177,o),
(286,-185,cs),
(281,-194,o),
(279,-201,o),
(279,-207,cs),
(279,-224,o),
(293,-226,o),
(300,-226,cs),
(324,-226,o),
(365,-176,o),
(365,-122,cs),
(365,-69,o),
(335,-50,o),
(308,-50,cs),
(271,-50,o),
(256,-75,o),
(256,-99,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
3 1 1 0 5 0 1 5 104 4 10 2 0 0 2 83 0 2 2 12 67 7 1 5 5 6 83 0 6 6 13 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
3 1 1 0 5 0 1 5 104 0 8 0 9 8 9 87 4 10 2 0 0 2 83 0 2 2 12 67 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
3 1 1 0 5 0 1 5 104 0 8 0 9 8 9 87 4 10 2 0 0 2 83 0 2 2 14 67 7 1 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
2 1 91 89 83 81 67 64 60 57 53 51 50 48 43 41 29 21 9 7 1 78 2 78 11 26
CALL[ ]	/* CallFunction */";
};
width = 637;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(429,0,ls),
(442.333,0,o),
(449,4.333,o),
(449,13,cs),
(449,23.667,o),
(433.667,31,o),
(419,31,cs),
(323,31,l),
(323,785,l),
(518,785,ls),
(552.667,785,o),
(555,774.667,o),
(555,736,cs),
(555,620,ls),
(555,598.667,o),
(556,584.167,o),
(558,576.5,cs),
(560,568.833,o),
(565.333,565,o),
(574,565,cs),
(579.333,565,o),
(583.667,567.333,o),
(587,572,cs),
(590.333,576.667,o),
(592,589,o),
(592,609,cs),
(592,619.667,o),
(591.833,633.5,o),
(591.5,650.5,cs),
(591.167,667.5,o),
(591,681.667,o),
(591,693,cs),
(591,703.667,o),
(591.167,717.667,o),
(591.5,735,cs),
(591.833,752.333,o),
(592,766.667,o),
(592,778,cs),
(592,816.667,o),
(586,821,o),
(554,821,cs),
(481.696,821,o),
(376.304,819,o),
(304,819,cs),
(231.696,819,o),
(126.304,821,o),
(54,821,cs),
(22,821,o),
(16,816.667,o),
(16,778,cs),
(16,766.667,o),
(16.167,752.333,o),
(16.5,735,cs),
(16.833,717.667,o),
(17,703.667,o),
(17,693,cs),
(17,681.667,o),
(16.833,667.5,o),
(16.5,650.5,cs),
(16.167,633.5,o),
(16,619.667,o),
(16,609,cs),
(16,589,o),
(17.667,576.667,o),
(21,572,cs),
(24.333,567.333,o),
(28.667,565,o),
(34,565,cs),
(42.667,565,o),
(48,568.833,o),
(50,576.5,cs),
(52,584.167,o),
(53,598.667,o),
(53,620,cs),
(53,736,ls),
(53,774.667,o),
(55.333,785,o),
(90,785,cs),
(278,785,l),
(278,672.982,o),
(282,516.771,o),
(282,401,cs),
(282,342.333,o),
(281.333,286.833,o),
(280,234.5,cs),
(278.667,182.167,o),
(278,128.667,o),
(278,74,cs),
(278,30.297,o),
(238.22,28,o),
(205,28,cs),
(193,28,o),
(176,25,o),
(176,13,cs),
(176,2.333,o),
(198.333,0,o),
(217,0,cs)
);
},
{
closed = 1;
nodes = (
(320.943,-203,o),
(337,-153.312,o),
(337,-124,cs),
(337,-78.667,o),
(315,-67,o),
(295,-67,cs),
(268.333,-67,o),
(255,-83.667,o),
(255,-101,cs),
(255,-133.202,o),
(291,-127.69,o),
(291,-145,cs),
(291,-151.667,o),
(289.167,-159.833,o),
(285.5,-169.5,cs),
(281.833,-179.167,o),
(280,-186.333,o),
(280,-191,cs),
(280,-197.667,o),
(287.333,-203,o),
(294,-203,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
5 1 3 2 7 2 3 7 104 6 10 2 2 2 4 83 0 4 4 12 67 9 1 7 7 8 83 0 8 8 13 67 0 0 0 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
5 1 3 2 7 2 3 7 104 0 0 0 1 0 1 87 6 10 2 2 2 4 83 0 4 4 12 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
5 1 3 2 7 2 3 7 104 0 0 0 1 0 1 87 6 10 2 2 2 4 83 0 4 4 14 67 9 1 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
23 22 87 84 80 77 74 72 71 69 64 62 52 40 30 28 22 98 23 98 38 34 11 17
CALL[ ]	/* CallFunction */";
};
width = 609;
}
);
note = uni021A;
unicode = 538;
},
{
glyphname = U;
kernLeft = U;
kernRight = U;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(194,753.911,o),
(234.148,754,o),
(277,754,cs),
(303.667,754,o),
(314,767.333,o),
(314,790,cs),
(314,812.667,o),
(300.667,821,o),
(258,821,cs),
(39,821,ls),
(27,821,o),
(2,815.333,o),
(2,790,cs),
(2,762,o),
(21.667,759,o),
(39,759,cs),
(59,759,o),
(74.5,757.667,o),
(85.5,755,cs),
(96.5,752.333,o),
(102,745.333,o),
(102,734,cs),
(102,688.667,o),
(102.333,644,o),
(103,600,cs),
(103.667,556,o),
(104,511.667,o),
(104,467,cs),
(104,444.333,o),
(103.833,421.833,o),
(103.5,399.5,cs),
(103.167,377.167,o),
(103,355.333,o),
(103,334,cs),
(103,257.435,o),
(104.574,172.38,o),
(123,125,cs),
(159,30.333,o),
(237,-14,o),
(393,-14,cs),
(550.111,-14,o),
(658,75.913,o),
(658,272,cs),
(658,308.667,o),
(657.667,345.333,o),
(657,382,cs),
(656.333,418.667,o),
(656,455.333,o),
(656,492,cs),
(656,523.333,o),
(656.333,552.833,o),
(657,580.5,cs),
(657.667,608.167,o),
(658,638,o),
(658,670,cs),
(658,682.667,o),
(664.5,690.833,o),
(677.5,694.5,cs),
(690.5,698.167,o),
(708.667,700,o),
(732,700,cs),
(748,700,o),
(769,709.333,o),
(769,736,cs),
(769,758.667,o),
(760.667,767,o),
(718,767,cs),
(515,767,ls),
(485.667,767,o),
(468,756,o),
(468,736,cs),
(468,712,o),
(476.333,700,o),
(515,696,cs),
(555,692,o),
(567,685.667,o),
(567,663,cs),
(567,272,ls),
(567,169.217,o),
(521.163,66,o),
(394,66,cs),
(200.635,66,o),
(194,189.897,o),
(194,323,cs),
(194,729,l),
(194,729,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 0 2 0 1 2 91 6 1 4 4 5 83 0 5 5 12 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 4 1 6 6 4 96 0 1 0 2 0 1 2 91 0 6 6 5 84 0 5 5 12 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 4 1 6 6 4 96 0 1 0 2 0 1 2 91 0 6 6 5 84 0 5 5 14 67 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
52 52 47 44 36 61 36 7 22
CALL[ ]	/* CallFunction */";
};
width = 784;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(184,770.148,o),
(247.066,771,o),
(264,771,cs),
(280,771,o),
(301,777.333,o),
(301,796,cs),
(301,805.333,o),
(297.833,811.833,o),
(291.5,815.5,cs),
(285.167,819.167,o),
(271.333,821,o),
(250,821,cs),
(53,821,ls),
(41,821,o),
(16,817.333,o),
(16,796,cs),
(16,772,o),
(38.333,771,o),
(53,771,cs),
(65.253,771,o),
(113,772.181,o),
(113,748,cs),
(113,700.667,o),
(113.333,653.667,o),
(114,607,cs),
(114.667,560.333,o),
(115,513.667,o),
(115,467,cs),
(115,444.333,o),
(114.833,421.833,o),
(114.5,399.5,cs),
(114.167,377.167,o),
(114,355.333,o),
(114,334,cs),
(114,260.667,o),
(114,193,o),
(134,125,cs),
(161,30.499,o),
(260.519,-14,o),
(382,-14,cs),
(539.7,-14,o),
(648,75.28,o),
(648,272,cs),
(648,308.667,o),
(647.667,345.333,o),
(647,382,cs),
(646.333,418.667,o),
(646,455.333,o),
(646,492,cs),
(646,525.333,o),
(646.333,558.5,o),
(647,591.5,cs),
(647.667,624.5,o),
(648,658,o),
(648,692,cs),
(648,716.36,o),
(709.043,717,o),
(728,717,cs),
(744,717,o),
(765,719.333,o),
(765,742,cs),
(765,751.333,o),
(761.833,757.833,o),
(755.5,761.5,cs),
(749.167,765.167,o),
(735.333,767,o),
(714,767,cs),
(518,767,ls),
(493.333,767,o),
(481,758.667,o),
(481,742,cs),
(481,722,o),
(503.333,717,o),
(518,717,cs),
(530.253,717,o),
(578,718.181,o),
(578,694,cs),
(578,272,ls),
(578,160.529,o),
(526.506,48,o),
(383,48,cs),
(190.737,48,o),
(184,178.245,o),
(184,323,cs),
(184,746,l),
(184,746,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
78 75 71 68 64 61 45 52 51 56 36 8 20
CALL[ ]	/* CallFunction */";
};
width = 772;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(525.95,-14,o),
(634,76.249,o),
(634,272,cs),
(634,308.667,o),
(633.667,345.333,o),
(633,382,cs),
(632.333,418.667,o),
(632,455.333,o),
(632,492,cs),
(632,528.667,o),
(632.333,565.167,o),
(633,601.5,cs),
(633.667,637.833,o),
(634,674.667,o),
(634,712,cs),
(634,732.754,o),
(687.094,737,o),
(704,737,cs),
(720,737,o),
(741,737.333,o),
(741,752,cs),
(741,757.333,o),
(737.833,761.167,o),
(731.5,763.5,cs),
(725.167,765.833,o),
(711.333,767,o),
(690,767,cs),
(508,767,ls),
(496,767,o),
(471,766.667,o),
(471,752,cs),
(471,738.667,o),
(493.333,737,o),
(508,737,cs),
(535.329,737,o),
(594,737.173,o),
(594,714,cs),
(594,272,ls),
(594,146.304,o),
(534.813,18,o),
(368,18,cs),
(172.86,18,o),
(170,165.232,o),
(170,323,cs),
(170,766,ls),
(170,789.81,o),
(226.087,791,o),
(245,791,cs),
(261,791,o),
(282,791.333,o),
(282,806,cs),
(282,811.333,o),
(278.833,815.167,o),
(272.5,817.5,cs),
(266.167,819.833,o),
(252.333,821,o),
(231,821,cs),
(49,821,ls),
(37,821,o),
(12,820.667,o),
(12,806,cs),
(12,792.667,o),
(34.333,791,o),
(49,791,cs),
(79.112,791,o),
(129,790.669,o),
(129,768,cs),
(129,717.333,o),
(129.333,667,o),
(130,617,cs),
(130.667,567,o),
(131,517,o),
(131,467,cs),
(131,444.333,o),
(130.833,421.833,o),
(130.5,399.5,cs),
(130.167,377.167,o),
(130,355.333,o),
(130,334,cs),
(130,260.667,o),
(132.667,193,o),
(150,125,cs),
(174.245,30.713,o),
(259.815,-14,o),
(367,-14,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
79 76 72 69 65 62 45 52 52 56 36 8 20
CALL[ ]	/* CallFunction */";
};
width = 755;
}
);
note = U;
unicode = 85;
},
{
glyphname = Uacute;
kernLeft = U;
kernRight = U;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(486,953.333,o),
(471.667,972,o),
(445,972,cs),
(407.323,972,o),
(331,899.498,o),
(331,872,cs),
(331,856,o),
(346,841,o),
(366,841,cs),
(399.423,841,o),
(486,896.957,o),
(486,936,cs)
);
},
{
closed = 1;
nodes = (
(194,753.911,o),
(234.148,754,o),
(277,754,cs),
(303.667,754,o),
(314,767.333,o),
(314,790,cs),
(314,812.667,o),
(300.667,821,o),
(258,821,cs),
(39,821,ls),
(27,821,o),
(2,815.333,o),
(2,790,cs),
(2,762,o),
(21.667,759,o),
(39,759,cs),
(59,759,o),
(74.5,757.667,o),
(85.5,755,cs),
(96.5,752.333,o),
(102,745.333,o),
(102,734,cs),
(102,688.667,o),
(102.333,644,o),
(103,600,cs),
(103.667,556,o),
(104,511.667,o),
(104,467,cs),
(104,444.333,o),
(103.833,421.833,o),
(103.5,399.5,cs),
(103.167,377.167,o),
(103,355.333,o),
(103,334,cs),
(103,257.435,o),
(104.574,172.38,o),
(123,125,cs),
(159,30.333,o),
(237,-14,o),
(393,-14,cs),
(550.111,-14,o),
(658,75.913,o),
(658,272,cs),
(658,308.667,o),
(657.667,345.333,o),
(657,382,cs),
(656.333,418.667,o),
(656,455.333,o),
(656,492,cs),
(656,523.333,o),
(656.333,552.833,o),
(657,580.5,cs),
(657.667,608.167,o),
(658,638,o),
(658,670,cs),
(658,682.667,o),
(664.5,690.833,o),
(677.5,694.5,cs),
(690.5,698.167,o),
(708.667,700,o),
(732,700,cs),
(748,700,o),
(769,709.333,o),
(769,736,cs),
(769,758.667,o),
(760.667,767,o),
(718,767,cs),
(515,767,ls),
(485.667,767,o),
(468,756,o),
(468,736,cs),
(468,712,o),
(476.333,700,o),
(515,696,cs),
(555,692,o),
(567,685.667,o),
(567,663,cs),
(567,272,ls),
(567,169.217,o),
(521.163,66,o),
(394,66,cs),
(200.635,66,o),
(194,189.897,o),
(194,323,cs),
(194,729,l),
(194,729,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 1 0 1 106 0 0 7 0 106 0 3 0 4 2 3 4 91 8 1 6 6 7 83 0 7 7 12 67 0 2 2 5 84 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 1 106 0 0 7 0 106 0 6 3 8 8 6 96 0 3 0 4 2 3 4 91 0 8 8 7 84 0 7 7 12 67 0 2 2 5 84 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 1 106 0 0 7 0 106 0 6 3 8 8 6 96 0 3 0 4 2 3 4 91 0 8 8 7 84 0 7 7 14 67 0 2 2 5 84 0 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
52 52 47 44 36 61 38 38 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 784;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(466,959.667,o),
(454,972,o),
(434,972,cs),
(404.753,972,o),
(328,903.873,o),
(328,877,cs),
(328,863.667,o),
(337.333,854,o),
(352,854,cs),
(378.12,854,o),
(466,908.21,o),
(466,941,cs)
);
},
{
closed = 1;
nodes = (
(184,770.148,o),
(247.066,771,o),
(264,771,cs),
(280,771,o),
(301,777.333,o),
(301,796,cs),
(301,805.333,o),
(297.833,811.833,o),
(291.5,815.5,cs),
(285.167,819.167,o),
(271.333,821,o),
(250,821,cs),
(53,821,ls),
(41,821,o),
(16,817.333,o),
(16,796,cs),
(16,772,o),
(38.333,771,o),
(53,771,cs),
(65.253,771,o),
(113,772.181,o),
(113,748,cs),
(113,700.667,o),
(113.333,653.667,o),
(114,607,cs),
(114.667,560.333,o),
(115,513.667,o),
(115,467,cs),
(115,444.333,o),
(114.833,421.833,o),
(114.5,399.5,cs),
(114.167,377.167,o),
(114,355.333,o),
(114,334,cs),
(114,260.667,o),
(114,193,o),
(134,125,cs),
(161,30.499,o),
(260.519,-14,o),
(382,-14,cs),
(539.7,-14,o),
(648,75.28,o),
(648,272,cs),
(648,308.667,o),
(647.667,345.333,o),
(647,382,cs),
(646.333,418.667,o),
(646,455.333,o),
(646,492,cs),
(646,525.333,o),
(646.333,558.5,o),
(647,591.5,cs),
(647.667,624.5,o),
(648,658,o),
(648,692,cs),
(648,716.36,o),
(709.043,717,o),
(728,717,cs),
(744,717,o),
(765,719.333,o),
(765,742,cs),
(765,751.333,o),
(761.833,757.833,o),
(755.5,761.5,cs),
(749.167,765.167,o),
(735.333,767,o),
(714,767,cs),
(518,767,ls),
(493.333,767,o),
(481,758.667,o),
(481,742,cs),
(481,722,o),
(503.333,717,o),
(518,717,cs),
(530.253,717,o),
(578,718.181,o),
(578,694,cs),
(578,272,ls),
(578,160.529,o),
(526.506,48,o),
(383,48,cs),
(190.737,48,o),
(184,178.245,o),
(184,323,cs),
(184,746,l),
(184,746,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 8 0 106 0 4 5 1 3 2 4 3 91 9 1 7 7 8 83 0 8 8 12 67 0 2 2 6 84 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 8 0 106 0 4 5 1 3 2 4 3 91 9 1 7 7 8 83 0 8 8 14 67 0 2 2 6 84 0 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
94 91 87 84 80 77 45 52 51 56 38 38 36 10 22
CALL[ ]	/* CallFunction */";
};
width = 772;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(525.95,-14,o),
(634,76.249,o),
(634,272,cs),
(634,308.667,o),
(633.667,345.333,o),
(633,382,cs),
(632.333,418.667,o),
(632,455.333,o),
(632,492,cs),
(632,528.667,o),
(632.333,565.167,o),
(633,601.5,cs),
(633.667,637.833,o),
(634,674.667,o),
(634,712,cs),
(634,732.754,o),
(687.094,737,o),
(704,737,cs),
(720,737,o),
(741,737.333,o),
(741,752,cs),
(741,757.333,o),
(737.833,761.167,o),
(731.5,763.5,cs),
(725.167,765.833,o),
(711.333,767,o),
(690,767,cs),
(508,767,ls),
(496,767,o),
(471,766.667,o),
(471,752,cs),
(471,738.667,o),
(493.333,737,o),
(508,737,cs),
(535.329,737,o),
(594,737.173,o),
(594,714,cs),
(594,272,ls),
(594,146.304,o),
(534.813,18,o),
(368,18,cs),
(172.86,18,o),
(170,165.232,o),
(170,323,cs),
(170,766,ls),
(170,789.81,o),
(226.087,791,o),
(245,791,cs),
(261,791,o),
(282,791.333,o),
(282,806,cs),
(282,811.333,o),
(278.833,815.167,o),
(272.5,817.5,cs),
(266.167,819.833,o),
(252.333,821,o),
(231,821,cs),
(49,821,ls),
(37,821,o),
(12,820.667,o),
(12,806,cs),
(12,792.667,o),
(34.333,791,o),
(49,791,cs),
(79.112,791,o),
(129,790.669,o),
(129,768,cs),
(129,717.333,o),
(129.333,667,o),
(130,617,cs),
(130.667,567,o),
(131,517,o),
(131,467,cs),
(131,444.333,o),
(130.833,421.833,o),
(130.5,399.5,cs),
(130.167,377.167,o),
(130,355.333,o),
(130,334,cs),
(130,260.667,o),
(132.667,193,o),
(150,125,cs),
(174.245,30.713,o),
(259.815,-14,o),
(367,-14,cs)
);
},
{
closed = 1;
nodes = (
(348.311,875,o),
(438,928.367,o),
(438,950,cs),
(438,968.667,o),
(429.667,972,o),
(419,972,cs),
(399.012,972,o),
(324,910.697,o),
(324,886,cs),
(324,878.667,o),
(326.667,875,o),
(332,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 8 0 106 0 4 5 1 3 2 4 3 91 9 1 7 7 8 83 0 8 8 12 67 0 2 2 6 84 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 8 0 106 0 4 5 1 3 2 4 3 91 9 1 7 7 8 83 0 8 8 14 67 0 2 2 6 84 0 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
94 91 87 84 80 77 45 52 52 56 38 37 36 10 22
CALL[ ]	/* CallFunction */";
};
width = 755;
}
);
note = Uacute;
unicode = 218;
},
{
glyphname = Ubreve;
kernLeft = U;
kernRight = U;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(194,753.911,o),
(234.148,754,o),
(277,754,cs),
(303.667,754,o),
(314,767.333,o),
(314,790,cs),
(314,812.667,o),
(300.667,821,o),
(258,821,cs),
(39,821,ls),
(27,821,o),
(2,815.333,o),
(2,790,cs),
(2,762,o),
(21.667,759,o),
(39,759,cs),
(59,759,o),
(74.5,757.667,o),
(85.5,755,cs),
(96.5,752.333,o),
(102,745.333,o),
(102,734,cs),
(102,688.667,o),
(102.333,644,o),
(103,600,cs),
(103.667,556,o),
(104,511.667,o),
(104,467,cs),
(104,444.333,o),
(103.833,421.833,o),
(103.5,399.5,cs),
(103.167,377.167,o),
(103,355.333,o),
(103,334,cs),
(103,257.435,o),
(104.574,172.38,o),
(123,125,cs),
(159,30.333,o),
(237,-14,o),
(393,-14,cs),
(550.111,-14,o),
(658,75.913,o),
(658,272,cs),
(658,308.667,o),
(657.667,345.333,o),
(657,382,cs),
(656.333,418.667,o),
(656,455.333,o),
(656,492,cs),
(656,523.333,o),
(656.333,552.833,o),
(657,580.5,cs),
(657.667,608.167,o),
(658,638,o),
(658,670,cs),
(658,682.667,o),
(664.5,690.833,o),
(677.5,694.5,cs),
(690.5,698.167,o),
(708.667,700,o),
(732,700,cs),
(748,700,o),
(769,709.333,o),
(769,736,cs),
(769,758.667,o),
(760.667,767,o),
(718,767,cs),
(515,767,ls),
(485.667,767,o),
(468,756,o),
(468,736,cs),
(468,712,o),
(476.333,700,o),
(515,696,cs),
(555,692,o),
(567,685.667,o),
(567,663,cs),
(567,272,ls),
(567,169.217,o),
(521.163,66,o),
(394,66,cs),
(200.635,66,o),
(194,189.897,o),
(194,323,cs),
(194,729,l),
(194,729,l)
);
},
{
closed = 1;
nodes = (
(536,967.667,o),
(518,971,o),
(498,971,cs),
(480.667,971,o),
(466,956.667,o),
(466,942,cs),
(466,936.667,o),
(461.5,931.5,o),
(452.5,926.5,cs),
(443.5,921.5,o),
(429.333,919,o),
(410,919,cs),
(379.535,919,o),
(351,926.638,o),
(351,942,cs),
(351,964.667,o),
(337.667,971,o),
(315,971,cs),
(292.333,971,o),
(283,958.333,o),
(283,941,cs),
(283,898.333,o),
(328.333,862,o),
(415,862,cs),
(466.962,862,o),
(536,888.821,o),
(536,941,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
10 1 8 9 8 106 0 9 0 7 5 9 7 91 0 1 0 2 0 1 2 91 6 1 4 4 5 83 0 5 5 12 67 0 0 0 3 84 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
10 1 8 9 8 106 0 4 1 6 6 4 96 0 9 0 7 5 9 7 91 0 1 0 2 0 1 2 91 0 6 6 5 84 0 5 5 12 67 0 0 0 3 84 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
10 1 8 9 8 106 0 4 1 6 6 4 96 0 9 0 7 5 9 7 91 0 1 0 2 0 1 2 91 0 6 6 5 84 0 5 5 14 67 0 0 0 3 84 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
103 101 97 95 36 40 52 52 47 44 36 61 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 784;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(184,770.148,o),
(247.066,771,o),
(264,771,cs),
(280,771,o),
(301,777.333,o),
(301,796,cs),
(301,805.333,o),
(297.833,811.833,o),
(291.5,815.5,cs),
(285.167,819.167,o),
(271.333,821,o),
(250,821,cs),
(53,821,ls),
(41,821,o),
(16,817.333,o),
(16,796,cs),
(16,772,o),
(38.333,771,o),
(53,771,cs),
(65.253,771,o),
(113,772.181,o),
(113,748,cs),
(113,700.667,o),
(113.333,653.667,o),
(114,607,cs),
(114.667,560.333,o),
(115,513.667,o),
(115,467,cs),
(115,444.333,o),
(114.833,421.833,o),
(114.5,399.5,cs),
(114.167,377.167,o),
(114,355.333,o),
(114,334,cs),
(114,260.667,o),
(114,193,o),
(134,125,cs),
(161,30.499,o),
(260.519,-14,o),
(382,-14,cs),
(539.7,-14,o),
(648,75.28,o),
(648,272,cs),
(648,308.667,o),
(647.667,345.333,o),
(647,382,cs),
(646.333,418.667,o),
(646,455.333,o),
(646,492,cs),
(646,525.333,o),
(646.333,558.5,o),
(647,591.5,cs),
(647.667,624.5,o),
(648,658,o),
(648,692,cs),
(648,716.36,o),
(709.043,717,o),
(728,717,cs),
(744,717,o),
(765,719.333,o),
(765,742,cs),
(765,751.333,o),
(761.833,757.833,o),
(755.5,761.5,cs),
(749.167,765.167,o),
(735.333,767,o),
(714,767,cs),
(518,767,ls),
(493.333,767,o),
(481,758.667,o),
(481,742,cs),
(481,722,o),
(503.333,717,o),
(518,717,cs),
(530.253,717,o),
(578,718.181,o),
(578,694,cs),
(578,272,ls),
(578,160.529,o),
(526.506,48,o),
(383,48,cs),
(190.737,48,o),
(184,178.245,o),
(184,323,cs),
(184,746,l),
(184,746,l)
);
},
{
closed = 1;
nodes = (
(519,971,o),
(502,972,o),
(489,972,cs),
(474,972,o),
(463,960,o),
(463,945,cs),
(463,928,o),
(438,910,o),
(399,910,cs),
(369,910,o),
(334,919,o),
(334,945,cs),
(334,965,o),
(325,972,o),
(306,972,cs),
(289,972,o),
(280,963,o),
(280,944,cs),
(280,903,o),
(326,865,o),
(402,865,cs),
(453,865,o),
(519,892,o),
(519,944,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
11 1 9 10 9 106 0 10 0 8 6 10 8 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
11 1 9 10 9 106 0 10 0 8 6 10 8 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
108 106 102 100 94 92 89 87 79 76 72 69 65 62 45 52 51 56 37 12 31
CALL[ ]	/* CallFunction */";
};
width = 772;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(525.95,-14,o),
(634,76.249,o),
(634,272,cs),
(634,308.667,o),
(633.667,345.333,o),
(633,382,cs),
(632.333,418.667,o),
(632,455.333,o),
(632,492,cs),
(632,528.667,o),
(632.333,565.167,o),
(633,601.5,cs),
(633.667,637.833,o),
(634,674.667,o),
(634,712,cs),
(634,732.754,o),
(687.094,737,o),
(704,737,cs),
(720,737,o),
(741,737.333,o),
(741,752,cs),
(741,757.333,o),
(737.833,761.167,o),
(731.5,763.5,cs),
(725.167,765.833,o),
(711.333,767,o),
(690,767,cs),
(508,767,ls),
(496,767,o),
(471,766.667,o),
(471,752,cs),
(471,738.667,o),
(493.333,737,o),
(508,737,cs),
(535.329,737,o),
(594,737.173,o),
(594,714,cs),
(594,272,ls),
(594,146.304,o),
(534.813,18,o),
(368,18,cs),
(172.86,18,o),
(170,165.232,o),
(170,323,cs),
(170,766,ls),
(170,789.81,o),
(226.087,791,o),
(245,791,cs),
(261,791,o),
(282,791.333,o),
(282,806,cs),
(282,811.333,o),
(278.833,815.167,o),
(272.5,817.5,cs),
(266.167,819.833,o),
(252.333,821,o),
(231,821,cs),
(49,821,ls),
(37,821,o),
(12,820.667,o),
(12,806,cs),
(12,792.667,o),
(34.333,791,o),
(49,791,cs),
(79.112,791,o),
(129,790.669,o),
(129,768,cs),
(129,717.333,o),
(129.333,667,o),
(130,617,cs),
(130.667,567,o),
(131,517,o),
(131,467,cs),
(131,444.333,o),
(130.833,421.833,o),
(130.5,399.5,cs),
(130.167,377.167,o),
(130,355.333,o),
(130,334,cs),
(130,260.667,o),
(132.667,193,o),
(150,125,cs),
(174.245,30.713,o),
(259.815,-14,o),
(367,-14,cs)
);
},
{
closed = 1;
nodes = (
(437.017,875,o),
(495,899.402,o),
(495,948,cs),
(495,969.333,o),
(486.667,972,o),
(476,972,cs),
(464.667,972,o),
(459,964.333,o),
(459,949,cs),
(459,922.229,o),
(420.336,900,o),
(384,900,cs),
(341.691,900,o),
(310,909.669,o),
(310,949,cs),
(310,965,o),
(307.667,972,o),
(293,972,cs),
(281.667,972,o),
(276,964,o),
(276,948,cs),
(276,908,o),
(324,875,o),
(384,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
3 1 1 2 1 106 0 2 0 0 10 2 0 91 0 6 7 1 5 4 6 5 91 11 1 9 9 10 83 0 10 10 12 67 0 4 4 8 83 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
3 1 1 2 1 106 0 2 0 0 10 2 0 91 0 6 7 1 5 4 6 5 91 11 1 9 9 10 83 0 10 10 14 67 0 4 4 8 83 0 8 8 21 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
107 104 100 97 93 90 45 52 52 56 38 37 38 35 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 755;
}
);
note = Ubreve;
unicode = 364;
},
{
glyphname = Ucircumflex;
kernLeft = U;
kernRight = U;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(530.667,830,o),
(533,841.667,o),
(533,851,cs),
(533,891.866,o),
(423.605,972,o),
(400,972,cs),
(388.856,972,o),
(354.177,950.45,o),
(327,928,cs),
(296.333,902.667,o),
(268,870.667,o),
(268,844,cs),
(268,837.333,o),
(271.667,830,o),
(281,830,cs),
(297.991,830,o),
(359.967,854.096,o),
(400,880,c),
(458.555,842.111,o),
(514.41,830,o),
(520,830,cs)
);
},
{
closed = 1;
nodes = (
(194,753.911,o),
(234.148,754,o),
(277,754,cs),
(303.667,754,o),
(314,767.333,o),
(314,790,cs),
(314,812.667,o),
(300.667,821,o),
(258,821,cs),
(39,821,ls),
(27,821,o),
(2,815.333,o),
(2,790,cs),
(2,762,o),
(21.667,759,o),
(39,759,cs),
(59,759,o),
(74.5,757.667,o),
(85.5,755,cs),
(96.5,752.333,o),
(102,745.333,o),
(102,734,cs),
(102,688.667,o),
(102.333,644,o),
(103,600,cs),
(103.667,556,o),
(104,511.667,o),
(104,467,cs),
(104,444.333,o),
(103.833,421.833,o),
(103.5,399.5,cs),
(103.167,377.167,o),
(103,355.333,o),
(103,334,cs),
(103,257.435,o),
(104.574,172.38,o),
(123,125,cs),
(159,30.333,o),
(237,-14,o),
(393,-14,cs),
(550.111,-14,o),
(658,75.913,o),
(658,272,cs),
(658,308.667,o),
(657.667,345.333,o),
(657,382,cs),
(656.333,418.667,o),
(656,455.333,o),
(656,492,cs),
(656,523.333,o),
(656.333,552.833,o),
(657,580.5,cs),
(657.667,608.167,o),
(658,638,o),
(658,670,cs),
(658,682.667,o),
(664.5,690.833,o),
(677.5,694.5,cs),
(690.5,698.167,o),
(708.667,700,o),
(732,700,cs),
(748,700,o),
(769,709.333,o),
(769,736,cs),
(769,758.667,o),
(760.667,767,o),
(718,767,cs),
(515,767,ls),
(485.667,767,o),
(468,756,o),
(468,736,cs),
(468,712,o),
(476.333,700,o),
(515,696,cs),
(555,692,o),
(567,685.667,o),
(567,663,cs),
(567,272,ls),
(567,169.217,o),
(521.163,66,o),
(394,66,cs),
(200.635,66,o),
(194,189.897,o),
(194,323,cs),
(194,729,l),
(194,729,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 0 2 106 1 10 2 0 8 0 106 0 4 0 5 3 4 5 91 9 1 7 7 8 83 0 8 8 12 67 0 3 3 6 84 0 6 6 21 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 2 0 2 106 1 10 2 0 8 0 106 0 7 4 9 9 7 96 0 4 0 5 3 4 5 91 0 9 9 8 84 0 8 8 12 67 0 3 3 6 84 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 2 0 2 106 1 10 2 0 8 0 106 0 7 4 9 9 7 96 0 4 0 5 3 4 5 91 0 9 9 8 84 0 8 8 14 67 0 3 3 6 84 0 6 6 21 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 99 96 92 89 85 83 68 66 54 52 48 45 32 30 19 17 11 9 0 25 1 25 11 15
CALL[ ]	/* CallFunction */";
};
width = 784;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(520,847,o),
(523,854.667,o),
(523,864,cs),
(523,900.28,o),
(415.728,972,o),
(392,972,cs),
(370.04,972,o),
(262,901.46,o),
(262,860,cs),
(262,851.333,o),
(265.667,847,o),
(273,847,cs),
(290.679,847,o),
(352.008,874.475,o),
(392,898,c),
(455.994,860.357,o),
(503.663,847,o),
(512,847,cs)
);
},
{
closed = 1;
nodes = (
(184,770.148,o),
(247.066,771,o),
(264,771,cs),
(280,771,o),
(301,777.333,o),
(301,796,cs),
(301,805.333,o),
(297.833,811.833,o),
(291.5,815.5,cs),
(285.167,819.167,o),
(271.333,821,o),
(250,821,cs),
(53,821,ls),
(41,821,o),
(16,817.333,o),
(16,796,cs),
(16,772,o),
(38.333,771,o),
(53,771,cs),
(65.253,771,o),
(113,772.181,o),
(113,748,cs),
(113,700.667,o),
(113.333,653.667,o),
(114,607,cs),
(114.667,560.333,o),
(115,513.667,o),
(115,467,cs),
(115,444.333,o),
(114.833,421.833,o),
(114.5,399.5,cs),
(114.167,377.167,o),
(114,355.333,o),
(114,334,cs),
(114,260.667,o),
(114,193,o),
(134,125,cs),
(161,30.499,o),
(260.519,-14,o),
(382,-14,cs),
(539.7,-14,o),
(648,75.28,o),
(648,272,cs),
(648,308.667,o),
(647.667,345.333,o),
(647,382,cs),
(646.333,418.667,o),
(646,455.333,o),
(646,492,cs),
(646,525.333,o),
(646.333,558.5,o),
(647,591.5,cs),
(647.667,624.5,o),
(648,658,o),
(648,692,cs),
(648,716.36,o),
(709.043,717,o),
(728,717,cs),
(744,717,o),
(765,719.333,o),
(765,742,cs),
(765,751.333,o),
(761.833,757.833,o),
(755.5,761.5,cs),
(749.167,765.167,o),
(735.333,767,o),
(714,767,cs),
(518,767,ls),
(493.333,767,o),
(481,758.667,o),
(481,742,cs),
(481,722,o),
(503.333,717,o),
(518,717,cs),
(530.253,717,o),
(578,718.181,o),
(578,694,cs),
(578,272,ls),
(578,160.529,o),
(526.506,48,o),
(383,48,cs),
(190.737,48,o),
(184,178.245,o),
(184,323,cs),
(184,746,l),
(184,746,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 2 0 2 106 1 11 2 0 9 0 106 0 5 6 1 4 3 5 4 91 10 1 8 8 9 83 0 9 9 12 67 0 3 3 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 2 0 2 106 1 11 2 0 9 0 106 0 5 6 1 4 3 5 4 91 10 1 8 8 9 83 0 9 9 14 67 0 3 3 7 84 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 103 100 96 93 89 86 70 68 55 52 48 45 42 39 31 29 18 16 11 9 0 24 1 24 12 15
CALL[ ]	/* CallFunction */";
};
width = 772;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(525.95,-14,o),
(634,76.249,o),
(634,272,cs),
(634,308.667,o),
(633.667,345.333,o),
(633,382,cs),
(632.333,418.667,o),
(632,455.333,o),
(632,492,cs),
(632,528.667,o),
(632.333,565.167,o),
(633,601.5,cs),
(633.667,637.833,o),
(634,674.667,o),
(634,712,cs),
(634,732.754,o),
(687.094,737,o),
(704,737,cs),
(720,737,o),
(741,737.333,o),
(741,752,cs),
(741,757.333,o),
(737.833,761.167,o),
(731.5,763.5,cs),
(725.167,765.833,o),
(711.333,767,o),
(690,767,cs),
(508,767,ls),
(496,767,o),
(471,766.667,o),
(471,752,cs),
(471,738.667,o),
(493.333,737,o),
(508,737,cs),
(535.329,737,o),
(594,737.173,o),
(594,714,cs),
(594,272,ls),
(594,146.304,o),
(534.813,18,o),
(368,18,cs),
(172.86,18,o),
(170,165.232,o),
(170,323,cs),
(170,766,ls),
(170,789.81,o),
(226.087,791,o),
(245,791,cs),
(261,791,o),
(282,791.333,o),
(282,806,cs),
(282,811.333,o),
(278.833,815.167,o),
(272.5,817.5,cs),
(266.167,819.833,o),
(252.333,821,o),
(231,821,cs),
(49,821,ls),
(37,821,o),
(12,820.667,o),
(12,806,cs),
(12,792.667,o),
(34.333,791,o),
(49,791,cs),
(79.112,791,o),
(129,790.669,o),
(129,768,cs),
(129,717.333,o),
(129.333,667,o),
(130,617,cs),
(130.667,567,o),
(131,517,o),
(131,467,cs),
(131,444.333,o),
(130.833,421.833,o),
(130.5,399.5,cs),
(130.167,377.167,o),
(130,355.333,o),
(130,334,cs),
(130,260.667,o),
(132.667,193,o),
(150,125,cs),
(174.245,30.713,o),
(259.815,-14,o),
(367,-14,cs)
);
},
{
closed = 1;
nodes = (
(269.158,875,o),
(317.069,894.154,o),
(381,928,c),
(445.308,893.955,o),
(493.037,875,o),
(501,875,cs),
(506.333,875,o),
(509,878.667,o),
(509,886,cs),
(509,910.708,o),
(406.596,972,o),
(381,972,cs),
(357.629,972,o),
(254,910.79,o),
(254,886,cs),
(254,878.667,o),
(256.667,875,o),
(262,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 2 0 2 106 1 11 2 0 9 0 106 0 5 6 1 4 3 5 4 91 10 1 8 8 9 83 0 9 9 12 67 0 3 3 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 2 0 2 106 1 11 2 0 9 0 106 0 5 6 1 4 3 5 4 91 10 1 8 8 9 83 0 9 9 14 67 0 3 3 7 84 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 103 100 96 93 89 86 70 68 55 52 48 45 41 38 30 28 18 16 11 9 0 23 1 23 12 15
CALL[ ]	/* CallFunction */";
};
width = 755;
}
);
note = Ucircumflex;
unicode = 219;
},
{
glyphname = Udieresis;
kernLeft = U;
kernRight = U;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(239,868.333,o),
(266,841,o),
(298,841,cs),
(327.675,841,o),
(365,855.646,o),
(365,911,cs),
(365,947,o),
(337,972,o),
(305,972,cs),
(258.034,972,o),
(239,930.847,o),
(239,907,cs)
);
},
{
closed = 1;
nodes = (
(446,857.333,o),
(473,830,o),
(505,830,cs),
(534.675,830,o),
(572,844.646,o),
(572,900,cs),
(572,937.333,o),
(544,961,o),
(512,961,cs),
(465.034,961,o),
(446,919.847,o),
(446,896,cs)
);
},
{
closed = 1;
nodes = (
(194,753.911,o),
(234.148,754,o),
(277,754,cs),
(303.667,754,o),
(314,767.333,o),
(314,790,cs),
(314,812.667,o),
(300.667,821,o),
(258,821,cs),
(39,821,ls),
(27,821,o),
(2,815.333,o),
(2,790,cs),
(2,762,o),
(21.667,759,o),
(39,759,cs),
(59,759,o),
(74.5,757.667,o),
(85.5,755,cs),
(96.5,752.333,o),
(102,745.333,o),
(102,734,cs),
(102,688.667,o),
(102.333,644,o),
(103,600,cs),
(103.667,556,o),
(104,511.667,o),
(104,467,cs),
(104,444.333,o),
(103.833,421.833,o),
(103.5,399.5,cs),
(103.167,377.167,o),
(103,355.333,o),
(103,334,cs),
(103,257.435,o),
(104.574,172.38,o),
(123,125,cs),
(159,30.333,o),
(237,-14,o),
(393,-14,cs),
(550.111,-14,o),
(658,75.913,o),
(658,272,cs),
(658,308.667,o),
(657.667,345.333,o),
(657,382,cs),
(656.333,418.667,o),
(656,455.333,o),
(656,492,cs),
(656,523.333,o),
(656.333,552.833,o),
(657,580.5,cs),
(657.667,608.167,o),
(658,638,o),
(658,670,cs),
(658,682.667,o),
(664.5,690.833,o),
(677.5,694.5,cs),
(690.5,698.167,o),
(708.667,700,o),
(732,700,cs),
(748,700,o),
(769,709.333,o),
(769,736,cs),
(769,758.667,o),
(760.667,767,o),
(718,767,cs),
(515,767,ls),
(485.667,767,o),
(468,756,o),
(468,736,cs),
(468,712,o),
(476.333,700,o),
(515,696,cs),
(555,692,o),
(567,685.667,o),
(567,663,cs),
(567,272,ls),
(567,169.217,o),
(521.163,66,o),
(394,66,cs),
(200.635,66,o),
(194,189.897,o),
(194,323,cs),
(194,729,l),
(194,729,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
2 1 0 3 1 1 9 0 1 91 0 5 0 6 4 5 6 91 10 1 8 8 9 83 0 9 9 12 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 9 2 3 91 0 5 0 6 4 5 6 91 10 1 8 8 9 83 0 9 9 12 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 8 5 10 10 8 96 0 0 0 1 3 0 1 91 0 2 0 3 9 2 3 91 0 5 0 6 4 5 6 91 0 10 10 9 84 0 9 9 12 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 8 5 10 10 8 96 0 0 0 1 3 0 1 91 0 2 0 3 9 2 3 91 0 5 0 6 4 5 6 91 0 10 10 9 84 0 9 9 14 67 0 4 4 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
105 102 98 95 47 44 36 61 38 38 38 38 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 784;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(240,882.667,o),
(262.333,859,o),
(289,859,cs),
(314.333,859,o),
(345,872,o),
(345,920,cs),
(345,950.667,o),
(322.667,972,o),
(296,972,cs),
(257.685,972,o),
(240,936.643,o),
(240,916,cs)
);
},
{
closed = 1;
nodes = (
(447,870.667,o),
(469.333,847,o),
(496,847,cs),
(521.333,847,o),
(552,860,o),
(552,908,cs),
(552,938.667,o),
(529.667,960,o),
(503,960,cs),
(464.685,960,o),
(447,924.643,o),
(447,904,cs)
);
},
{
closed = 1;
nodes = (
(184,770.148,o),
(247.066,771,o),
(264,771,cs),
(280,771,o),
(301,777.333,o),
(301,796,cs),
(301,805.333,o),
(297.833,811.833,o),
(291.5,815.5,cs),
(285.167,819.167,o),
(271.333,821,o),
(250,821,cs),
(53,821,ls),
(41,821,o),
(16,817.333,o),
(16,796,cs),
(16,772,o),
(38.333,771,o),
(53,771,cs),
(65.253,771,o),
(113,772.181,o),
(113,748,cs),
(113,700.667,o),
(113.333,653.667,o),
(114,607,cs),
(114.667,560.333,o),
(115,513.667,o),
(115,467,cs),
(115,444.333,o),
(114.833,421.833,o),
(114.5,399.5,cs),
(114.167,377.167,o),
(114,355.333,o),
(114,334,cs),
(114,260.667,o),
(114,193,o),
(134,125,cs),
(161,30.499,o),
(260.519,-14,o),
(382,-14,cs),
(539.7,-14,o),
(648,75.28,o),
(648,272,cs),
(648,308.667,o),
(647.667,345.333,o),
(647,382,cs),
(646.333,418.667,o),
(646,455.333,o),
(646,492,cs),
(646,525.333,o),
(646.333,558.5,o),
(647,591.5,cs),
(647.667,624.5,o),
(648,658,o),
(648,692,cs),
(648,716.36,o),
(709.043,717,o),
(728,717,cs),
(744,717,o),
(765,719.333,o),
(765,742,cs),
(765,751.333,o),
(761.833,757.833,o),
(755.5,761.5,cs),
(749.167,765.167,o),
(735.333,767,o),
(714,767,cs),
(518,767,ls),
(493.333,767,o),
(481,758.667,o),
(481,742,cs),
(481,722,o),
(503.333,717,o),
(518,717,cs),
(530.253,717,o),
(578,718.181,o),
(578,694,cs),
(578,272,ls),
(578,160.529,o),
(526.506,48,o),
(383,48,cs),
(190.737,48,o),
(184,178.245,o),
(184,323,cs),
(184,746,l),
(184,746,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 10 2 3 91 0 6 7 1 5 4 6 5 91 11 1 9 9 10 83 0 10 10 12 67 0 4 4 8 83 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 10 2 3 91 0 6 7 1 5 4 6 5 91 11 1 9 9 10 83 0 10 10 14 67 0 4 4 8 83 0 8 8 21 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
106 103 99 96 92 89 45 52 51 56 38 36 38 36 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 772;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(525.95,-14,o),
(634,76.249,o),
(634,272,cs),
(634,308.667,o),
(633.667,345.333,o),
(633,382,cs),
(632.333,418.667,o),
(632,455.333,o),
(632,492,cs),
(632,528.667,o),
(632.333,565.167,o),
(633,601.5,cs),
(633.667,637.833,o),
(634,674.667,o),
(634,712,cs),
(634,732.754,o),
(687.094,737,o),
(704,737,cs),
(720,737,o),
(741,737.333,o),
(741,752,cs),
(741,757.333,o),
(737.833,761.167,o),
(731.5,763.5,cs),
(725.167,765.833,o),
(711.333,767,o),
(690,767,cs),
(508,767,ls),
(496,767,o),
(471,766.667,o),
(471,752,cs),
(471,738.667,o),
(493.333,737,o),
(508,737,cs),
(535.329,737,o),
(594,737.173,o),
(594,714,cs),
(594,272,ls),
(594,146.304,o),
(534.813,18,o),
(368,18,cs),
(172.86,18,o),
(170,165.232,o),
(170,323,cs),
(170,766,ls),
(170,789.81,o),
(226.087,791,o),
(245,791,cs),
(261,791,o),
(282,791.333,o),
(282,806,cs),
(282,811.333,o),
(278.833,815.167,o),
(272.5,817.5,cs),
(266.167,819.833,o),
(252.333,821,o),
(231,821,cs),
(49,821,ls),
(37,821,o),
(12,820.667,o),
(12,806,cs),
(12,792.667,o),
(34.333,791,o),
(49,791,cs),
(79.112,791,o),
(129,790.669,o),
(129,768,cs),
(129,717.333,o),
(129.333,667,o),
(130,617,cs),
(130.667,567,o),
(131,517,o),
(131,467,cs),
(131,444.333,o),
(130.833,421.833,o),
(130.5,399.5,cs),
(130.167,377.167,o),
(130,355.333,o),
(130,334,cs),
(130,260.667,o),
(132.667,193,o),
(150,125,cs),
(174.245,30.713,o),
(259.815,-14,o),
(367,-14,cs)
);
},
{
closed = 1;
nodes = (
(294.667,889,o),
(317,899,o),
(317,935,cs),
(317,957.667,o),
(301.667,972,o),
(283,972,cs),
(255.258,972,o),
(242,944.895,o),
(242,931,cs),
(242,907,o),
(257.333,889,o),
(276,889,cs)
);
},
{
closed = 1;
nodes = (
(501.667,875,o),
(524,885,o),
(524,921,cs),
(524,943.667,o),
(508.667,958,o),
(490,958,cs),
(462.258,958,o),
(449,930.895,o),
(449,917,cs),
(449,893,o),
(464.333,875,o),
(483,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 10 2 3 91 0 6 7 1 5 4 6 5 91 11 1 9 9 10 83 0 10 10 12 67 0 4 4 8 83 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 10 2 3 91 0 6 7 1 5 4 6 5 91 11 1 9 9 10 83 0 10 10 14 67 0 4 4 8 83 0 8 8 21 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
107 104 100 97 93 90 45 52 52 56 38 36 38 36 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 755;
}
);
note = Udieresis;
unicode = 220;
},
{
glyphname = Ugrave;
kernLeft = U;
kernRight = U;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(325,894.818,o),
(413.395,861,o),
(445,861,cs),
(465,861,o),
(480,876.333,o),
(480,891,cs),
(480,919.036,o),
(405.755,972,o),
(366,972,cs),
(339.333,972,o),
(325,953.333,o),
(325,936,cs)
);
},
{
closed = 1;
nodes = (
(194,753.911,o),
(234.148,754,o),
(277,754,cs),
(303.667,754,o),
(314,767.333,o),
(314,790,cs),
(314,812.667,o),
(300.667,821,o),
(258,821,cs),
(39,821,ls),
(27,821,o),
(2,815.333,o),
(2,790,cs),
(2,762,o),
(21.667,759,o),
(39,759,cs),
(59,759,o),
(74.5,757.667,o),
(85.5,755,cs),
(96.5,752.333,o),
(102,745.333,o),
(102,734,cs),
(102,688.667,o),
(102.333,644,o),
(103,600,cs),
(103.667,556,o),
(104,511.667,o),
(104,467,cs),
(104,444.333,o),
(103.833,421.833,o),
(103.5,399.5,cs),
(103.167,377.167,o),
(103,355.333,o),
(103,334,cs),
(103,257.435,o),
(104.574,172.38,o),
(123,125,cs),
(159,30.333,o),
(237,-14,o),
(393,-14,cs),
(550.111,-14,o),
(658,75.913,o),
(658,272,cs),
(658,308.667,o),
(657.667,345.333,o),
(657,382,cs),
(656.333,418.667,o),
(656,455.333,o),
(656,492,cs),
(656,523.333,o),
(656.333,552.833,o),
(657,580.5,cs),
(657.667,608.167,o),
(658,638,o),
(658,670,cs),
(658,682.667,o),
(664.5,690.833,o),
(677.5,694.5,cs),
(690.5,698.167,o),
(708.667,700,o),
(732,700,cs),
(748,700,o),
(769,709.333,o),
(769,736,cs),
(769,758.667,o),
(760.667,767,o),
(718,767,cs),
(515,767,ls),
(485.667,767,o),
(468,756,o),
(468,736,cs),
(468,712,o),
(476.333,700,o),
(515,696,cs),
(555,692,o),
(567,685.667,o),
(567,663,cs),
(567,272,ls),
(567,169.217,o),
(521.163,66,o),
(394,66,cs),
(200.635,66,o),
(194,189.897,o),
(194,323,cs),
(194,729,l),
(194,729,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 0 1 0 106 0 1 7 1 106 0 3 0 4 2 3 4 91 8 1 6 6 7 83 0 7 7 12 67 0 2 2 5 84 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 0 1 0 106 0 1 7 1 106 0 6 3 8 8 6 96 0 3 0 4 2 3 4 91 0 8 8 7 84 0 7 7 12 67 0 2 2 5 84 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 0 1 0 106 0 1 7 1 106 0 6 3 8 8 6 96 0 3 0 4 2 3 4 91 0 8 8 7 84 0 7 7 14 67 0 2 2 5 84 0 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
52 52 47 44 36 61 40 38 34 9 24
CALL[ ]	/* CallFunction */";
};
width = 784;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(325,909.521,o),
(410.059,854,o),
(439,854,cs),
(453.667,854,o),
(463,863.667,o),
(463,877,cs),
(463,903.873,o),
(386.247,972,o),
(357,972,cs),
(337,972,o),
(325,959.667,o),
(325,941,cs)
);
},
{
closed = 1;
nodes = (
(184,770.148,o),
(247.066,771,o),
(264,771,cs),
(280,771,o),
(301,777.333,o),
(301,796,cs),
(301,805.333,o),
(297.833,811.833,o),
(291.5,815.5,cs),
(285.167,819.167,o),
(271.333,821,o),
(250,821,cs),
(53,821,ls),
(41,821,o),
(16,817.333,o),
(16,796,cs),
(16,772,o),
(38.333,771,o),
(53,771,cs),
(65.253,771,o),
(113,772.181,o),
(113,748,cs),
(113,700.667,o),
(113.333,653.667,o),
(114,607,cs),
(114.667,560.333,o),
(115,513.667,o),
(115,467,cs),
(115,444.333,o),
(114.833,421.833,o),
(114.5,399.5,cs),
(114.167,377.167,o),
(114,355.333,o),
(114,334,cs),
(114,260.667,o),
(114,193,o),
(134,125,cs),
(161,30.499,o),
(260.519,-14,o),
(382,-14,cs),
(539.7,-14,o),
(648,75.28,o),
(648,272,cs),
(648,308.667,o),
(647.667,345.333,o),
(647,382,cs),
(646.333,418.667,o),
(646,455.333,o),
(646,492,cs),
(646,525.333,o),
(646.333,558.5,o),
(647,591.5,cs),
(647.667,624.5,o),
(648,658,o),
(648,692,cs),
(648,716.36,o),
(709.043,717,o),
(728,717,cs),
(744,717,o),
(765,719.333,o),
(765,742,cs),
(765,751.333,o),
(761.833,757.833,o),
(755.5,761.5,cs),
(749.167,765.167,o),
(735.333,767,o),
(714,767,cs),
(518,767,ls),
(493.333,767,o),
(481,758.667,o),
(481,742,cs),
(481,722,o),
(503.333,717,o),
(518,717,cs),
(530.253,717,o),
(578,718.181,o),
(578,694,cs),
(578,272,ls),
(578,160.529,o),
(526.506,48,o),
(383,48,cs),
(190.737,48,o),
(184,178.245,o),
(184,323,cs),
(184,746,l),
(184,746,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 0 1 0 106 0 1 8 1 106 0 4 5 1 3 2 4 3 91 9 1 7 7 8 83 0 8 8 12 67 0 2 2 6 84 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 0 1 0 106 0 1 8 1 106 0 4 5 1 3 2 4 3 91 9 1 7 7 8 83 0 8 8 14 67 0 2 2 6 84 0 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
94 91 87 84 80 77 45 52 51 56 40 38 34 10 22
CALL[ ]	/* CallFunction */";
};
width = 772;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(525.95,-14,o),
(634,76.249,o),
(634,272,cs),
(634,308.667,o),
(633.667,345.333,o),
(633,382,cs),
(632.333,418.667,o),
(632,455.333,o),
(632,492,cs),
(632,528.667,o),
(632.333,565.167,o),
(633,601.5,cs),
(633.667,637.833,o),
(634,674.667,o),
(634,712,cs),
(634,732.754,o),
(687.094,737,o),
(704,737,cs),
(720,737,o),
(741,737.333,o),
(741,752,cs),
(741,757.333,o),
(737.833,761.167,o),
(731.5,763.5,cs),
(725.167,765.833,o),
(711.333,767,o),
(690,767,cs),
(508,767,ls),
(496,767,o),
(471,766.667,o),
(471,752,cs),
(471,738.667,o),
(493.333,737,o),
(508,737,cs),
(535.329,737,o),
(594,737.173,o),
(594,714,cs),
(594,272,ls),
(594,146.304,o),
(534.813,18,o),
(368,18,cs),
(172.86,18,o),
(170,165.232,o),
(170,323,cs),
(170,766,ls),
(170,789.81,o),
(226.087,791,o),
(245,791,cs),
(261,791,o),
(282,791.333,o),
(282,806,cs),
(282,811.333,o),
(278.833,815.167,o),
(272.5,817.5,cs),
(266.167,819.833,o),
(252.333,821,o),
(231,821,cs),
(49,821,ls),
(37,821,o),
(12,820.667,o),
(12,806,cs),
(12,792.667,o),
(34.333,791,o),
(49,791,cs),
(79.112,791,o),
(129,790.669,o),
(129,768,cs),
(129,717.333,o),
(129.333,667,o),
(130,617,cs),
(130.667,567,o),
(131,517,o),
(131,467,cs),
(131,444.333,o),
(130.833,421.833,o),
(130.5,399.5,cs),
(130.167,377.167,o),
(130,355.333,o),
(130,334,cs),
(130,260.667,o),
(132.667,193,o),
(150,125,cs),
(174.245,30.713,o),
(259.815,-14,o),
(367,-14,cs)
);
},
{
closed = 1;
nodes = (
(436.333,842,o),
(439,845.667,o),
(439,853,cs),
(439,877.882,o),
(364.178,972,o),
(344,972,cs),
(333.333,972,o),
(325,968.667,o),
(325,950,cs),
(325,929.027,o),
(412.203,842,o),
(431,842,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 8 9 8 106 0 9 6 9 106 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 84 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 8 9 8 106 0 9 6 9 106 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 14 67 0 0 0 4 84 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
94 92 87 85 79 76 72 69 65 62 45 52 52 56 36 10 20
CALL[ ]	/* CallFunction */";
};
width = 755;
}
);
note = Ugrave;
unicode = 217;
},
{
glyphname = Uhungarumlaut;
kernLeft = U;
kernRight = U;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(395,953.333,o),
(380.667,972,o),
(354,972,cs),
(316.323,972,o),
(240,899.498,o),
(240,872,cs),
(240,856,o),
(255,841,o),
(275,841,cs),
(308.423,841,o),
(395,896.957,o),
(395,936,cs)
);
},
{
closed = 1;
nodes = (
(578,953.333,o),
(562.667,972,o),
(536,972,cs),
(497.545,972,o),
(423,898.769,o),
(423,872,cs),
(423,856,o),
(438,841,o),
(458,841,cs),
(491.423,841,o),
(578,896.957,o),
(578,936,cs)
);
},
{
closed = 1;
nodes = (
(194,753.911,o),
(234.148,754,o),
(277,754,cs),
(303.667,754,o),
(314,767.333,o),
(314,790,cs),
(314,812.667,o),
(300.667,821,o),
(258,821,cs),
(39,821,ls),
(27,821,o),
(2,815.333,o),
(2,790,cs),
(2,762,o),
(21.667,759,o),
(39,759,cs),
(59,759,o),
(74.5,757.667,o),
(85.5,755,cs),
(96.5,752.333,o),
(102,745.333,o),
(102,734,cs),
(102,688.667,o),
(102.333,644,o),
(103,600,cs),
(103.667,556,o),
(104,511.667,o),
(104,467,cs),
(104,444.333,o),
(103.833,421.833,o),
(103.5,399.5,cs),
(103.167,377.167,o),
(103,355.333,o),
(103,334,cs),
(103,257.435,o),
(104.574,172.38,o),
(123,125,cs),
(159,30.333,o),
(237,-14,o),
(393,-14,cs),
(550.111,-14,o),
(658,75.913,o),
(658,272,cs),
(658,308.667,o),
(657.667,345.333,o),
(657,382,cs),
(656.333,418.667,o),
(656,455.333,o),
(656,492,cs),
(656,523.333,o),
(656.333,552.833,o),
(657,580.5,cs),
(657.667,608.167,o),
(658,638,o),
(658,670,cs),
(658,682.667,o),
(664.5,690.833,o),
(677.5,694.5,cs),
(690.5,698.167,o),
(708.667,700,o),
(732,700,cs),
(748,700,o),
(769,709.333,o),
(769,736,cs),
(769,758.667,o),
(760.667,767,o),
(718,767,cs),
(515,767,ls),
(485.667,767,o),
(468,756,o),
(468,736,cs),
(468,712,o),
(476.333,700,o),
(515,696,cs),
(555,692,o),
(567,685.667,o),
(567,663,cs),
(567,272,ls),
(567,169.217,o),
(521.163,66,o),
(394,66,cs),
(200.635,66,o),
(194,189.897,o),
(194,323,cs),
(194,729,l),
(194,729,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
3 1 1 0 1 106 2 1 0 9 0 106 0 5 0 6 4 5 6 91 10 1 8 8 9 83 0 9 9 12 67 0 4 4 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
3 1 1 0 1 106 2 1 0 9 0 106 0 8 5 10 10 8 96 0 5 0 6 4 5 6 91 0 10 10 9 84 0 9 9 12 67 0 4 4 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
3 1 1 0 1 106 2 1 0 9 0 106 0 8 5 10 10 8 96 0 5 0 6 4 5 6 91 0 10 10 9 84 0 9 9 14 67 0 4 4 7 84 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
105 102 98 95 47 44 36 61 38 38 38 38 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 784;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(382,959.667,o),
(370,972,o),
(350,972,cs),
(320.753,972,o),
(244,903.873,o),
(244,877,cs),
(244,863.667,o),
(253.333,854,o),
(268,854,cs),
(294.12,854,o),
(382,908.21,o),
(382,941,cs)
);
},
{
closed = 1;
nodes = (
(553,959.667,o),
(541,972,o),
(521,972,cs),
(491.753,972,o),
(415,903.873,o),
(415,877,cs),
(415,863.667,o),
(424.333,854,o),
(439,854,cs),
(465.12,854,o),
(553,908.21,o),
(553,941,cs)
);
},
{
closed = 1;
nodes = (
(184,770.148,o),
(247.066,771,o),
(264,771,cs),
(280,771,o),
(301,777.333,o),
(301,796,cs),
(301,805.333,o),
(297.833,811.833,o),
(291.5,815.5,cs),
(285.167,819.167,o),
(271.333,821,o),
(250,821,cs),
(53,821,ls),
(41,821,o),
(16,817.333,o),
(16,796,cs),
(16,772,o),
(38.333,771,o),
(53,771,cs),
(65.253,771,o),
(113,772.181,o),
(113,748,cs),
(113,700.667,o),
(113.333,653.667,o),
(114,607,cs),
(114.667,560.333,o),
(115,513.667,o),
(115,467,cs),
(115,444.333,o),
(114.833,421.833,o),
(114.5,399.5,cs),
(114.167,377.167,o),
(114,355.333,o),
(114,334,cs),
(114,260.667,o),
(114,193,o),
(134,125,cs),
(161,30.499,o),
(260.519,-14,o),
(382,-14,cs),
(539.7,-14,o),
(648,75.28,o),
(648,272,cs),
(648,308.667,o),
(647.667,345.333,o),
(647,382,cs),
(646.333,418.667,o),
(646,455.333,o),
(646,492,cs),
(646,525.333,o),
(646.333,558.5,o),
(647,591.5,cs),
(647.667,624.5,o),
(648,658,o),
(648,692,cs),
(648,716.36,o),
(709.043,717,o),
(728,717,cs),
(744,717,o),
(765,719.333,o),
(765,742,cs),
(765,751.333,o),
(761.833,757.833,o),
(755.5,761.5,cs),
(749.167,765.167,o),
(735.333,767,o),
(714,767,cs),
(518,767,ls),
(493.333,767,o),
(481,758.667,o),
(481,742,cs),
(481,722,o),
(503.333,717,o),
(518,717,cs),
(530.253,717,o),
(578,718.181,o),
(578,694,cs),
(578,272,ls),
(578,160.529,o),
(526.506,48,o),
(383,48,cs),
(190.737,48,o),
(184,178.245,o),
(184,323,cs),
(184,746,l),
(184,746,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
3 1 1 0 1 106 2 1 0 10 0 106 0 6 7 1 5 4 6 5 92 11 1 9 9 10 83 0 10 10 12 67 0 4 4 8 84 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
3 1 1 0 1 106 2 1 0 10 0 106 0 6 7 1 5 4 6 5 92 11 1 9 9 10 83 0 10 10 14 67 0 4 4 8 84 0 8 8 21 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
110 107 103 100 96 93 45 52 51 56 38 38 38 38 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 772;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(525.95,-14,o),
(634,76.249,o),
(634,272,cs),
(634,308.667,o),
(633.667,345.333,o),
(633,382,cs),
(632.333,418.667,o),
(632,455.333,o),
(632,492,cs),
(632,528.667,o),
(632.333,565.167,o),
(633,601.5,cs),
(633.667,637.833,o),
(634,674.667,o),
(634,712,cs),
(634,732.754,o),
(687.094,737,o),
(704,737,cs),
(720,737,o),
(741,737.333,o),
(741,752,cs),
(741,757.333,o),
(737.833,761.167,o),
(731.5,763.5,cs),
(725.167,765.833,o),
(711.333,767,o),
(690,767,cs),
(508,767,ls),
(496,767,o),
(471,766.667,o),
(471,752,cs),
(471,738.667,o),
(493.333,737,o),
(508,737,cs),
(535.329,737,o),
(594,737.173,o),
(594,714,cs),
(594,272,ls),
(594,146.304,o),
(534.813,18,o),
(368,18,cs),
(172.86,18,o),
(170,165.232,o),
(170,323,cs),
(170,766,ls),
(170,789.81,o),
(226.087,791,o),
(245,791,cs),
(261,791,o),
(282,791.333,o),
(282,806,cs),
(282,811.333,o),
(278.833,815.167,o),
(272.5,817.5,cs),
(266.167,819.833,o),
(252.333,821,o),
(231,821,cs),
(49,821,ls),
(37,821,o),
(12,820.667,o),
(12,806,cs),
(12,792.667,o),
(34.333,791,o),
(49,791,cs),
(79.112,791,o),
(129,790.669,o),
(129,768,cs),
(129,717.333,o),
(129.333,667,o),
(130,617,cs),
(130.667,567,o),
(131,517,o),
(131,467,cs),
(131,444.333,o),
(130.833,421.833,o),
(130.5,399.5,cs),
(130.167,377.167,o),
(130,355.333,o),
(130,334,cs),
(130,260.667,o),
(132.667,193,o),
(150,125,cs),
(174.245,30.713,o),
(259.815,-14,o),
(367,-14,cs)
);
},
{
closed = 1;
nodes = (
(274.311,875,o),
(364,928.367,o),
(364,950,cs),
(364,968.667,o),
(355.667,972,o),
(345,972,cs),
(325.012,972,o),
(250,910.697,o),
(250,886,cs),
(250,878.667,o),
(252.667,875,o),
(258,875,cs)
);
},
{
closed = 1;
nodes = (
(428.311,875,o),
(518,928.367,o),
(518,950,cs),
(518,968.667,o),
(509.667,972,o),
(499,972,cs),
(479.012,972,o),
(404,910.697,o),
(404,886,cs),
(404,878.667,o),
(406.667,875,o),
(412,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
3 1 1 0 1 106 2 1 0 10 0 106 0 6 7 1 5 4 6 5 92 11 1 9 9 10 83 0 10 10 12 67 0 4 4 8 84 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
3 1 1 0 1 106 2 1 0 10 0 106 0 6 7 1 5 4 6 5 92 11 1 9 9 10 83 0 10 10 14 67 0 4 4 8 84 0 8 8 21 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
109 106 102 99 95 92 45 52 52 56 38 37 38 37 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 755;
}
);
note = Uhungarumlaut;
unicode = 368;
},
{
glyphname = Umacron;
kernLeft = U;
kernRight = U;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(194,753.911,o),
(234.148,754,o),
(277,754,cs),
(303.667,754,o),
(314,767.333,o),
(314,790,cs),
(314,812.667,o),
(300.667,821,o),
(258,821,cs),
(39,821,ls),
(27,821,o),
(2,815.333,o),
(2,790,cs),
(2,762,o),
(21.667,759,o),
(39,759,cs),
(59,759,o),
(74.5,757.667,o),
(85.5,755,cs),
(96.5,752.333,o),
(102,745.333,o),
(102,734,cs),
(102,688.667,o),
(102.333,644,o),
(103,600,cs),
(103.667,556,o),
(104,511.667,o),
(104,467,cs),
(104,444.333,o),
(103.833,421.833,o),
(103.5,399.5,cs),
(103.167,377.167,o),
(103,355.333,o),
(103,334,cs),
(103,257.435,o),
(104.574,172.38,o),
(123,125,cs),
(159,30.333,o),
(237,-14,o),
(393,-14,cs),
(550.111,-14,o),
(658,75.913,o),
(658,272,cs),
(658,308.667,o),
(657.667,345.333,o),
(657,382,cs),
(656.333,418.667,o),
(656,455.333,o),
(656,492,cs),
(656,523.333,o),
(656.333,552.833,o),
(657,580.5,cs),
(657.667,608.167,o),
(658,638,o),
(658,670,cs),
(658,682.667,o),
(664.5,690.833,o),
(677.5,694.5,cs),
(690.5,698.167,o),
(708.667,700,o),
(732,700,cs),
(748,700,o),
(769,709.333,o),
(769,736,cs),
(769,758.667,o),
(760.667,767,o),
(718,767,cs),
(515,767,ls),
(485.667,767,o),
(468,756,o),
(468,736,cs),
(468,712,o),
(476.333,700,o),
(515,696,cs),
(555,692,o),
(567,685.667,o),
(567,663,cs),
(567,272,ls),
(567,169.217,o),
(521.163,66,o),
(394,66,cs),
(200.635,66,o),
(194,189.897,o),
(194,323,cs),
(194,729,l),
(194,729,l)
);
},
{
closed = 1;
nodes = (
(532,965,o),
(513.667,964.5,o),
(493,963.5,cs),
(472.333,962.5,o),
(448,962,o),
(420,962,cs),
(377.698,962,o),
(329.437,964,o),
(299,964,cs),
(276.333,964,o),
(266,943.667,o),
(266,925,cs),
(266,906.333,o),
(280.333,885,o),
(299,885,cs),
(369.305,885,o),
(466.446,886,o),
(540,886,cs),
(568.782,886,o),
(576,912.801,o),
(576,928,cs),
(576,948,o),
(562.667,965,o),
(548,965,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
9 1 7 0 8 5 7 8 91 0 1 0 2 0 1 2 91 6 1 4 4 5 83 0 5 5 12 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 4 1 6 6 4 96 9 1 7 0 8 5 7 8 91 0 1 0 2 0 1 2 91 0 6 6 5 84 0 5 5 12 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 4 1 6 6 4 96 9 1 7 0 8 5 7 8 91 0 1 0 2 0 1 2 91 0 6 6 5 84 0 5 5 14 67 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
78 77 91 84 77 103 78 95 52 52 47 44 36 61 36 10 22
CALL[ ]	/* CallFunction */";
};
width = 784;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(184,770.148,o),
(247.066,771,o),
(264,771,cs),
(280,771,o),
(301,777.333,o),
(301,796,cs),
(301,805.333,o),
(297.833,811.833,o),
(291.5,815.5,cs),
(285.167,819.167,o),
(271.333,821,o),
(250,821,cs),
(53,821,ls),
(41,821,o),
(16,817.333,o),
(16,796,cs),
(16,772,o),
(38.333,771,o),
(53,771,cs),
(65.253,771,o),
(113,772.181,o),
(113,748,cs),
(113,700.667,o),
(113.333,653.667,o),
(114,607,cs),
(114.667,560.333,o),
(115,513.667,o),
(115,467,cs),
(115,444.333,o),
(114.833,421.833,o),
(114.5,399.5,cs),
(114.167,377.167,o),
(114,355.333,o),
(114,334,cs),
(114,260.667,o),
(114,193,o),
(134,125,cs),
(161,30.499,o),
(260.519,-14,o),
(382,-14,cs),
(539.7,-14,o),
(648,75.28,o),
(648,272,cs),
(648,308.667,o),
(647.667,345.333,o),
(647,382,cs),
(646.333,418.667,o),
(646,455.333,o),
(646,492,cs),
(646,525.333,o),
(646.333,558.5,o),
(647,591.5,cs),
(647.667,624.5,o),
(648,658,o),
(648,692,cs),
(648,716.36,o),
(709.043,717,o),
(728,717,cs),
(744,717,o),
(765,719.333,o),
(765,742,cs),
(765,751.333,o),
(761.833,757.833,o),
(755.5,761.5,cs),
(749.167,765.167,o),
(735.333,767,o),
(714,767,cs),
(518,767,ls),
(493.333,767,o),
(481,758.667,o),
(481,742,cs),
(481,722,o),
(503.333,717,o),
(518,717,cs),
(530.253,717,o),
(578,718.181,o),
(578,694,cs),
(578,272,ls),
(578,160.529,o),
(526.506,48,o),
(383,48,cs),
(190.737,48,o),
(184,178.245,o),
(184,323,cs),
(184,746,l),
(184,746,l)
);
},
{
closed = 1;
nodes = (
(521,942,o),
(503,942,o),
(482,941,cs),
(461,940,o),
(437,939,o),
(409,939,cs),
(367,939,o),
(318,941,o),
(288,941,cs),
(269,941,o),
(262,926,o),
(262,911,cs),
(262,896,o),
(273,880,o),
(288,880,cs),
(358,880,o),
(455,881,o),
(529,881,cs),
(552,881,o),
(558,903,o),
(558,914,cs),
(558,929,o),
(548,942,o),
(537,942,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
10 1 8 0 9 6 8 9 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
10 1 8 0 9 6 8 9 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
84 83 95 88 83 107 84 99 79 76 72 69 65 62 45 52 51 56 37 11 31
CALL[ ]	/* CallFunction */";
};
width = 772;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(525.95,-14,o),
(634,76.249,o),
(634,272,cs),
(634,308.667,o),
(633.667,345.333,o),
(633,382,cs),
(632.333,418.667,o),
(632,455.333,o),
(632,492,cs),
(632,528.667,o),
(632.333,565.167,o),
(633,601.5,cs),
(633.667,637.833,o),
(634,674.667,o),
(634,712,cs),
(634,732.754,o),
(687.094,737,o),
(704,737,cs),
(720,737,o),
(741,737.333,o),
(741,752,cs),
(741,757.333,o),
(737.833,761.167,o),
(731.5,763.5,cs),
(725.167,765.833,o),
(711.333,767,o),
(690,767,cs),
(508,767,ls),
(496,767,o),
(471,766.667,o),
(471,752,cs),
(471,738.667,o),
(493.333,737,o),
(508,737,cs),
(535.329,737,o),
(594,737.173,o),
(594,714,cs),
(594,272,ls),
(594,146.304,o),
(534.813,18,o),
(368,18,cs),
(172.86,18,o),
(170,165.232,o),
(170,323,cs),
(170,766,ls),
(170,789.81,o),
(226.087,791,o),
(245,791,cs),
(261,791,o),
(282,791.333,o),
(282,806,cs),
(282,811.333,o),
(278.833,815.167,o),
(272.5,817.5,cs),
(266.167,819.833,o),
(252.333,821,o),
(231,821,cs),
(49,821,ls),
(37,821,o),
(12,820.667,o),
(12,806,cs),
(12,792.667,o),
(34.333,791,o),
(49,791,cs),
(79.112,791,o),
(129,790.669,o),
(129,768,cs),
(129,717.333,o),
(129.333,667,o),
(130,617,cs),
(130.667,567,o),
(131,517,o),
(131,467,cs),
(131,444.333,o),
(130.833,421.833,o),
(130.5,399.5,cs),
(130.167,377.167,o),
(130,355.333,o),
(130,334,cs),
(130,260.667,o),
(132.667,193,o),
(150,125,cs),
(174.245,30.713,o),
(259.815,-14,o),
(367,-14,cs)
);
},
{
closed = 1;
nodes = (
(343.305,875,o),
(440.446,876,o),
(514,876,cs),
(528.667,876,o),
(533,887.333,o),
(533,894,cs),
(533,900.667,o),
(527.333,907,o),
(522,907,cs),
(506,907,o),
(487.667,906.5,o),
(467,905.5,cs),
(446.333,904.5,o),
(422,904,o),
(394,904,cs),
(351.698,904,o),
(303.437,906,o),
(273,906,cs),
(262.333,906,o),
(257,897.667,o),
(257,891,cs),
(257,884.333,o),
(263.667,875,o),
(273,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
10 1 8 0 9 6 8 9 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
10 1 8 0 9 6 8 9 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
84 83 95 88 83 107 84 99 79 76 72 69 65 62 45 52 52 56 36 11 20
CALL[ ]	/* CallFunction */";
};
width = 755;
}
);
note = Umacron;
unicode = 362;
},
{
glyphname = Uogonek;
kernLeft = U;
kernRight = U;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(459.345,-170,o),
(490,-140.646,o),
(490,-117,cs),
(490,-105,o),
(478.333,-93,o),
(465,-93,cs),
(445.449,-93,o),
(446.136,-117,o),
(405,-117,cs),
(390.333,-117,o),
(376,-110.667,o),
(376,-96,cs),
(376,-69.333,o),
(392,-29,o),
(420,-13,c),
(564.102,-4.994,o),
(660,88.278,o),
(660,272,cs),
(660,308.667,o),
(659.667,345.333,o),
(659,382,cs),
(658.333,418.667,o),
(658,455.333,o),
(658,492,cs),
(658,523.333,o),
(658.333,552.833,o),
(659,580.5,cs),
(659.667,608.167,o),
(660,638,o),
(660,670,cs),
(660,682.667,o),
(666.5,690.833,o),
(679.5,694.5,cs),
(692.5,698.167,o),
(710.667,700,o),
(734,700,cs),
(750,700,o),
(771,709.333,o),
(771,736,cs),
(771,758.667,o),
(762.667,767,o),
(720,767,cs),
(517,767,ls),
(487.667,767,o),
(470,756,o),
(470,736,cs),
(470,712,o),
(478.333,700,o),
(517,696,cs),
(557,692,o),
(569,685.667,o),
(569,663,cs),
(569,272,ls),
(569,169.217,o),
(523.163,66,o),
(396,66,cs),
(202.635,66,o),
(196,189.897,o),
(196,323,cs),
(196,729,ls),
(196,753.911,o),
(236.148,754,o),
(279,754,cs),
(305.667,754,o),
(316,767.333,o),
(316,790,cs),
(316,812.667,o),
(302.667,821,o),
(260,821,cs),
(41,821,ls),
(29,821,o),
(4,815.333,o),
(4,790,cs),
(4,762,o),
(23.667,759,o),
(41,759,cs),
(61,759,o),
(76.5,757.667,o),
(87.5,755,cs),
(98.5,752.333,o),
(104,745.333,o),
(104,734,cs),
(104,688.667,o),
(104.333,644,o),
(105,600,cs),
(105.667,556,o),
(106,511.667,o),
(106,467,cs),
(106,444.333,o),
(105.833,421.833,o),
(105.5,399.5,cs),
(105.167,377.167,o),
(105,355.333,o),
(105,334,cs),
(105,257.435,o),
(106.574,172.38,o),
(125,125,cs),
(158.333,35.667,o),
(228.333,-7.667,o),
(363,-13,c),
(338.355,-26.692,o),
(297,-53.053,o),
(297,-95,cs),
(297,-146.579,o),
(357.091,-170,o),
(407,-170,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 10 1 9 1 10 9 104 0 6 0 7 5 6 7 91 0 9 11 1 0 9 0 87 4 1 2 2 3 83 0 3 3 12 67 0 5 5 1 83 8 1 1 1 24 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 2 6 4 4 2 96 0 10 1 9 1 10 9 104 0 6 0 7 5 6 7 91 0 9 11 1 0 9 0 87 0 4 4 3 84 0 3 3 12 67 0 5 5 1 83 8 1 1 1 24 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 2 6 4 4 2 96 0 10 1 9 1 10 9 104 0 6 0 7 5 6 7 91 0 9 11 1 0 9 0 87 0 4 4 3 84 0 3 3 14 67 0 5 5 1 83 8 1 1 1 24 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 99 97 94 92 87 86 74 72 68 65 52 50 42 39 35 32 28 26 11 10 0 105 1 105 12 15
CALL[ ]	/* CallFunction */";
};
width = 786;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(185,770,o),
(248,771,o),
(265,771,cs),
(281,771,o),
(302,777,o),
(302,796,cs),
(302,805,o),
(299,812,o),
(293,816,cs),
(286,819,o),
(272,821,o),
(251,821,cs),
(54,821,ls),
(42,821,o),
(17,817,o),
(17,796,cs),
(17,772,o),
(39,771,o),
(54,771,cs),
(66,771,o),
(114,772,o),
(114,748,cs),
(114,701,o),
(114,654,o),
(115,607,cs),
(116,560,o),
(116,514,o),
(116,467,cs),
(116,444,o),
(116,422,o),
(116,400,cs),
(115,377,o),
(115,355,o),
(115,334,cs),
(115,261,o),
(115,193,o),
(135,125,cs),
(162,30,o),
(262,-14,o),
(383,-14,cs),
(541,-14,o),
(649,75,o),
(649,272,cs),
(649,309,o),
(649,345,o),
(648,382,cs),
(647,419,o),
(647,455,o),
(647,492,cs),
(647,525,o),
(647,559,o),
(648,592,cs),
(649,625,o),
(649,658,o),
(649,692,cs),
(649,716,o),
(710,717,o),
(729,717,cs),
(745,717,o),
(766,719,o),
(766,742,cs),
(766,751,o),
(763,758,o),
(757,762,cs),
(750,765,o),
(736,767,o),
(715,767,cs),
(519,767,ls),
(494,767,o),
(482,759,o),
(482,742,cs),
(482,722,o),
(504,717,o),
(519,717,cs),
(531,717,o),
(579,718,o),
(579,694,cs),
(579,272,ls),
(579,161,o),
(528,48,o),
(384,48,cs),
(192,48,o),
(185,178,o),
(185,323,cs),
(185,746,l),
(185,746,l)
);
},
{
closed = 1;
nodes = (
(348,7,o),
(336,0,o),
(325,-9,cs),
(306,-24,o),
(289,-45,o),
(289,-76,cs),
(289,-119,o),
(331,-149,o),
(390,-149,cs),
(438,-149,o),
(468,-108,o),
(468,-98,cs),
(468,-87,o),
(462,-76,o),
(447,-76,cs),
(443,-76,o),
(439,-78,o),
(434,-82,cs),
(429,-87,o),
(423,-92,o),
(418,-97,cs),
(412,-103,o),
(401,-106,o),
(384,-106,cs),
(368,-106,o),
(353,-91,o),
(353,-75,cs),
(353,-56,o),
(367,-2,o),
(412,13,c),
(362,14,l),
(362,14,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 0 1 11 11 0 96 0 9 4 8 4 9 8 104 0 2 3 1 1 0 2 1 91 0 8 0 10 8 10 87 7 1 5 5 6 83 0 6 6 12 67 12 1 11 11 4 84 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 0 1 11 1 0 11 104 0 9 4 8 4 9 8 104 0 2 3 1 1 0 2 1 91 0 8 0 10 8 10 87 7 1 5 5 6 83 0 6 6 12 67 12 1 11 11 4 84 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 0 1 11 1 0 11 104 0 9 4 8 4 9 8 104 0 2 3 1 1 0 2 1 91 0 8 0 10 8 10 87 7 1 5 5 6 83 0 6 6 14 67 12 1 11 11 4 84 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
83 83 83 112 83 112 105 103 97 95 92 90 79 76 72 69 65 62 45 52 51 56 37 13 31
CALL[ ]	/* CallFunction */";
};
width = 773;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(428.13,-172,o),
(458,-130.791,o),
(458,-121,cs),
(458,-113,o),
(456,-105,o),
(444,-105,cs),
(424.96,-105,o),
(418.683,-145,o),
(382,-145,cs),
(351.028,-145,o),
(343,-115.466,o),
(343,-98,cs),
(343,-79.065,o),
(354.142,-30.875,o),
(395,-13,c),
(533.784,-2.526,o),
(634,81.973,o),
(634,272,cs),
(634,308.667,o),
(633.667,345.333,o),
(633,382,cs),
(632.333,418.667,o),
(632,455.333,o),
(632,492,cs),
(632,528.667,o),
(632.333,565.167,o),
(633,601.5,cs),
(633.667,637.833,o),
(634,674.667,o),
(634,712,cs),
(634,732.754,o),
(687.094,737,o),
(704,737,cs),
(720,737,o),
(741,737.333,o),
(741,752,cs),
(741,757.333,o),
(737.833,761.167,o),
(731.5,763.5,cs),
(725.167,765.833,o),
(711.333,767,o),
(690,767,cs),
(508,767,ls),
(496,767,o),
(471,766.667,o),
(471,752,cs),
(471,738.667,o),
(493.333,737,o),
(508,737,cs),
(535.329,737,o),
(594,737.173,o),
(594,714,cs),
(594,272,ls),
(594,146.304,o),
(534.813,18,o),
(368,18,cs),
(172.86,18,o),
(170,165.232,o),
(170,323,cs),
(170,766,ls),
(170,789.81,o),
(226.087,791,o),
(245,791,cs),
(261,791,o),
(282,791.333,o),
(282,806,cs),
(282,811.333,o),
(278.833,815.167,o),
(272.5,817.5,cs),
(266.167,819.833,o),
(252.333,821,o),
(231,821,cs),
(49,821,ls),
(37,821,o),
(12,820.667,o),
(12,806,cs),
(12,792.667,o),
(34.333,791,o),
(49,791,cs),
(79.112,791,o),
(129,790.669,o),
(129,768,cs),
(129,717.333,o),
(129.333,667,o),
(130,617,cs),
(130.667,567,o),
(131,517,o),
(131,467,cs),
(131,444.333,o),
(130.833,421.833,o),
(130.5,399.5,cs),
(130.167,377.167,o),
(130,355.333,o),
(130,334,cs),
(130,260.667,o),
(132.667,193,o),
(150,125,cs),
(174.125,33.859,o),
(254.973,-11.315,o),
(357,-14,c),
(336.121,-25.931,o),
(299,-55.37,o),
(299,-99,cs),
(299,-141.667,o),
(333.333,-172,o),
(380,-172,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 5 7 4 7 5 4 104 0 2 3 1 1 0 2 1 91 0 4 0 6 4 6 87 10 1 8 8 9 83 0 9 9 12 67 0 0 0 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 5 7 4 7 5 4 104 0 2 3 1 1 0 2 1 91 0 4 0 6 4 6 87 10 1 8 8 9 83 0 9 9 14 67 0 0 0 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
110 107 103 100 96 93 77 76 69 67 61 59 56 54 52 52 56 36 11 19
CALL[ ]	/* CallFunction */";
};
width = 755;
}
);
note = Uogonek;
unicode = 370;
},
{
glyphname = Uring;
kernLeft = U;
kernRight = U;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(484,949.333,o),
(458,972,o),
(406,972,cs),
(364.667,972,o),
(331,952.667,o),
(331,902,cs),
(331,855.333,o),
(365.667,833,o),
(411,833,cs),
(451,833,o),
(484,856,o),
(484,904,cs)
);
},
{
closed = 1;
nodes = (
(417.667,930,o),
(429,921.667,o),
(429,903,cs),
(429,881.667,o),
(419,876,o),
(411,876,cs),
(401.667,876,o),
(387,879.333,o),
(387,902,cs),
(387,913.333,o),
(389.5,920.833,o),
(394.5,924.5,cs),
(399.5,928.167,o),
(403.667,930,o),
(407,930,cs)
);
},
{
closed = 1;
nodes = (
(194,753.911,o),
(234.148,754,o),
(277,754,cs),
(303.667,754,o),
(314,767.333,o),
(314,790,cs),
(314,812.667,o),
(300.667,821,o),
(258,821,cs),
(39,821,ls),
(27,821,o),
(2,815.333,o),
(2,790,cs),
(2,762,o),
(21.667,759,o),
(39,759,cs),
(59,759,o),
(74.5,757.667,o),
(85.5,755,cs),
(96.5,752.333,o),
(102,745.333,o),
(102,734,cs),
(102,688.667,o),
(102.333,644,o),
(103,600,cs),
(103.667,556,o),
(104,511.667,o),
(104,467,cs),
(104,444.333,o),
(103.833,421.833,o),
(103.5,399.5,cs),
(103.167,377.167,o),
(103,355.333,o),
(103,334,cs),
(103,257.435,o),
(104.574,172.38,o),
(123,125,cs),
(159,30.333,o),
(237,-14,o),
(393,-14,cs),
(550.111,-14,o),
(658,75.913,o),
(658,272,cs),
(658,308.667,o),
(657.667,345.333,o),
(657,382,cs),
(656.333,418.667,o),
(656,455.333,o),
(656,492,cs),
(656,523.333,o),
(656.333,552.833,o),
(657,580.5,cs),
(657.667,608.167,o),
(658,638,o),
(658,670,cs),
(658,682.667,o),
(664.5,690.833,o),
(677.5,694.5,cs),
(690.5,698.167,o),
(708.667,700,o),
(732,700,cs),
(748,700,o),
(769,709.333,o),
(769,736,cs),
(769,758.667,o),
(760.667,767,o),
(718,767,cs),
(515,767,ls),
(485.667,767,o),
(468,756,o),
(468,736,cs),
(468,712,o),
(476.333,700,o),
(515,696,cs),
(555,692,o),
(567,685.667,o),
(567,663,cs),
(567,272,ls),
(567,169.217,o),
(521.163,66,o),
(394,66,cs),
(200.635,66,o),
(194,189.897,o),
(194,323,cs),
(194,729,l),
(194,729,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
11 1 2 1 3 0 2 96 0 3 0 1 3 94 0 1 0 0 9 1 0 91 0 5 0 6 4 5 6 91 10 1 8 8 9 83 0 9 9 12 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
11 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 1 0 0 9 1 0 91 0 5 0 6 4 5 6 91 10 1 8 8 9 83 0 9 9 12 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
11 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 8 5 10 10 8 96 0 1 0 0 9 1 0 91 0 5 0 6 4 5 6 91 0 10 10 9 84 0 9 9 12 67 0 4 4 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
11 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 8 5 10 10 8 96 0 1 0 0 9 1 0 91 0 5 0 6 4 5 6 91 0 10 10 9 84 0 9 9 14 67 0 4 4 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
12 11 96 93 89 86 82 80 65 63 51 49 45 42 29 27 18 16 11 22 12 22 36 34 12 17
CALL[ ]	/* CallFunction */";
};
width = 784;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(184,770.148,o),
(247.066,771,o),
(264,771,cs),
(280,771,o),
(301,777.333,o),
(301,796,cs),
(301,805.333,o),
(297.833,811.833,o),
(291.5,815.5,cs),
(285.167,819.167,o),
(271.333,821,o),
(250,821,cs),
(53,821,ls),
(41,821,o),
(16,817.333,o),
(16,796,cs),
(16,772,o),
(38.333,771,o),
(53,771,cs),
(65.253,771,o),
(113,772.181,o),
(113,748,cs),
(113,700.667,o),
(113.333,653.667,o),
(114,607,cs),
(114.667,560.333,o),
(115,513.667,o),
(115,467,cs),
(115,444.333,o),
(114.833,421.833,o),
(114.5,399.5,cs),
(114.167,377.167,o),
(114,355.333,o),
(114,334,cs),
(114,260.667,o),
(114,193,o),
(134,125,cs),
(161,30.499,o),
(260.519,-14,o),
(382,-14,cs),
(539.7,-14,o),
(648,75.28,o),
(648,272,cs),
(648,308.667,o),
(647.667,345.333,o),
(647,382,cs),
(646.333,418.667,o),
(646,455.333,o),
(646,492,cs),
(646,525.333,o),
(646.333,558.5,o),
(647,591.5,cs),
(647.667,624.5,o),
(648,658,o),
(648,692,cs),
(648,716.36,o),
(709.043,717,o),
(728,717,cs),
(744,717,o),
(765,719.333,o),
(765,742,cs),
(765,751.333,o),
(761.833,757.833,o),
(755.5,761.5,cs),
(749.167,765.167,o),
(735.333,767,o),
(714,767,cs),
(518,767,ls),
(493.333,767,o),
(481,758.667,o),
(481,742,cs),
(481,722,o),
(503.333,717,o),
(518,717,cs),
(530.253,717,o),
(578,718.181,o),
(578,694,cs),
(578,272,ls),
(578,160.529,o),
(526.506,48,o),
(383,48,cs),
(190.737,48,o),
(184,178.245,o),
(184,323,cs),
(184,746,l),
(184,746,l)
);
},
{
closed = 1;
nodes = (
(469,947,o),
(445,972,o),
(398,972,cs),
(358,972,o),
(327,942,o),
(327,902,cs),
(327,861,o),
(359,833,o),
(399,833,cs),
(435,833,o),
(469,856,o),
(469,904,cs)
);
},
{
closed = 1;
nodes = (
(411,938,o),
(424,928,o),
(424,903,cs),
(424,888,o),
(421,878,o),
(414,874,cs),
(407,869,o),
(402,867,o),
(399,867,cs),
(391,867,o),
(372,873,o),
(372,902,cs),
(372,930,o),
(387,938,o),
(398,938,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
12 1 10 9 11 8 10 96 0 11 8 9 11 94 0 9 0 8 6 9 8 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
12 1 10 9 11 9 10 11 104 0 11 8 9 11 8 102 0 9 0 8 6 9 8 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
12 1 10 9 11 9 10 11 104 0 11 8 9 11 8 102 0 9 0 8 6 9 8 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
96 95 102 100 95 106 96 106 93 91 87 85 79 76 72 69 65 62 45 52 51 56 37 13 31
CALL[ ]	/* CallFunction */";
};
width = 772;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(525.95,-14,o),
(634,76.249,o),
(634,272,cs),
(634,308.667,o),
(633.667,345.333,o),
(633,382,cs),
(632.333,418.667,o),
(632,455.333,o),
(632,492,cs),
(632,528.667,o),
(632.333,565.167,o),
(633,601.5,cs),
(633.667,637.833,o),
(634,674.667,o),
(634,712,cs),
(634,732.754,o),
(687.094,737,o),
(704,737,cs),
(720,737,o),
(741,737.333,o),
(741,752,cs),
(741,757.333,o),
(737.833,761.167,o),
(731.5,763.5,cs),
(725.167,765.833,o),
(711.333,767,o),
(690,767,cs),
(508,767,ls),
(496,767,o),
(471,766.667,o),
(471,752,cs),
(471,738.667,o),
(493.333,737,o),
(508,737,cs),
(535.329,737,o),
(594,737.173,o),
(594,714,cs),
(594,272,ls),
(594,146.304,o),
(534.813,18,o),
(368,18,cs),
(172.86,18,o),
(170,165.232,o),
(170,323,cs),
(170,766,ls),
(170,789.81,o),
(226.087,791,o),
(245,791,cs),
(261,791,o),
(282,791.333,o),
(282,806,cs),
(282,811.333,o),
(278.833,815.167,o),
(272.5,817.5,cs),
(266.167,819.833,o),
(252.333,821,o),
(231,821,cs),
(49,821,ls),
(37,821,o),
(12,820.667,o),
(12,806,cs),
(12,792.667,o),
(34.333,791,o),
(49,791,cs),
(79.112,791,o),
(129,790.669,o),
(129,768,cs),
(129,717.333,o),
(129.333,667,o),
(130,617,cs),
(130.667,567,o),
(131,517,o),
(131,467,cs),
(131,444.333,o),
(130.833,421.833,o),
(130.5,399.5,cs),
(130.167,377.167,o),
(130,355.333,o),
(130,334,cs),
(130,260.667,o),
(132.667,193,o),
(150,125,cs),
(174.245,30.713,o),
(259.815,-14,o),
(367,-14,cs)
);
},
{
closed = 1;
nodes = (
(412.667,833,o),
(447,856,o),
(447,904,cs),
(447,940,o),
(426,972,o),
(386,972,cs),
(347.333,972,o),
(320,942,o),
(320,902,cs),
(320,860.667,o),
(347.333,833,o),
(382,833,cs)
);
},
{
closed = 1;
nodes = (
(359.333,852,o),
(350,872.667,o),
(350,902,cs),
(350,930,o),
(358.667,952,o),
(384,952,cs),
(410.667,952,o),
(417,928.333,o),
(417,903,cs),
(417,872.333,o),
(404.667,852,o),
(382,852,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 9 12 1 10 11 9 10 91 0 2 3 1 1 0 2 1 91 0 8 8 11 83 0 11 11 20 67 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 9 12 1 10 11 9 10 91 0 11 0 8 6 11 8 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 9 12 1 10 11 9 10 91 0 11 0 8 6 11 8 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
96 95 102 100 95 106 96 106 93 91 87 85 79 76 72 69 65 62 45 52 52 56 36 13 20
CALL[ ]	/* CallFunction */";
};
width = 755;
}
);
note = Uring;
unicode = 366;
},
{
glyphname = Utilde;
kernLeft = U;
kernRight = U;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(194,753.911,o),
(234.148,754,o),
(277,754,cs),
(303.667,754,o),
(314,767.333,o),
(314,790,cs),
(314,812.667,o),
(300.667,821,o),
(258,821,cs),
(39,821,ls),
(27,821,o),
(2,815.333,o),
(2,790,cs),
(2,762,o),
(21.667,759,o),
(39,759,cs),
(59,759,o),
(74.5,757.667,o),
(85.5,755,cs),
(96.5,752.333,o),
(102,745.333,o),
(102,734,cs),
(102,688.667,o),
(102.333,644,o),
(103,600,cs),
(103.667,556,o),
(104,511.667,o),
(104,467,cs),
(104,444.333,o),
(103.833,421.833,o),
(103.5,399.5,cs),
(103.167,377.167,o),
(103,355.333,o),
(103,334,cs),
(103,257.435,o),
(104.574,172.38,o),
(123,125,cs),
(159,30.333,o),
(237,-14,o),
(393,-14,cs),
(550.111,-14,o),
(658,75.913,o),
(658,272,cs),
(658,308.667,o),
(657.667,345.333,o),
(657,382,cs),
(656.333,418.667,o),
(656,455.333,o),
(656,492,cs),
(656,523.333,o),
(656.333,552.833,o),
(657,580.5,cs),
(657.667,608.167,o),
(658,638,o),
(658,670,cs),
(658,682.667,o),
(664.5,690.833,o),
(677.5,694.5,cs),
(690.5,698.167,o),
(708.667,700,o),
(732,700,cs),
(748,700,o),
(769,709.333,o),
(769,736,cs),
(769,758.667,o),
(760.667,767,o),
(718,767,cs),
(515,767,ls),
(485.667,767,o),
(468,756,o),
(468,736,cs),
(468,712,o),
(476.333,700,o),
(515,696,cs),
(555,692,o),
(567,685.667,o),
(567,663,cs),
(567,272,ls),
(567,169.217,o),
(521.163,66,o),
(394,66,cs),
(200.635,66,o),
(194,189.897,o),
(194,323,cs),
(194,729,l),
(194,729,l)
);
},
{
closed = 1;
nodes = (
(243,877,o),
(250,861,o),
(262,861,cs),
(282.593,861,o),
(306.709,886,o),
(346,886,cs),
(384.662,886,o),
(427.294,862,o),
(483,862,cs),
(515.676,862,o),
(594,879.584,o),
(594,937,cs),
(594,958.333,o),
(578.667,972,o),
(572,972,cs),
(567.333,972,o),
(557.333,967.667,o),
(542,959,cs),
(523.333,948.333,o),
(500.667,942,o),
(482,942,cs),
(442.599,942,o),
(381.495,970,o),
(345,970,cs),
(320.333,970,o),
(297.667,964,o),
(277,952,cs),
(258.333,941.333,o),
(243,926.333,o),
(243,897,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
9 1 7 0 11 10 7 11 91 0 8 12 1 10 5 8 10 91 0 1 0 2 0 1 2 91 6 1 4 4 5 83 0 5 5 12 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 4 1 6 6 4 96 9 1 7 0 11 10 7 11 91 0 8 12 1 10 5 8 10 91 0 1 0 2 0 1 2 91 0 6 6 5 84 0 5 5 12 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 4 1 6 6 4 96 9 1 7 0 11 10 7 11 91 0 8 12 1 10 5 8 10 91 0 1 0 2 0 1 2 91 0 6 6 5 84 0 5 5 14 67 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
111 109 106 104 101 99 93 91 35 40 52 52 47 44 36 61 36 13 24
CALL[ ]	/* CallFunction */";
};
width = 784;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(184,770.148,o),
(247.066,771,o),
(264,771,cs),
(280,771,o),
(301,777.333,o),
(301,796,cs),
(301,805.333,o),
(297.833,811.833,o),
(291.5,815.5,cs),
(285.167,819.167,o),
(271.333,821,o),
(250,821,cs),
(53,821,ls),
(41,821,o),
(16,817.333,o),
(16,796,cs),
(16,772,o),
(38.333,771,o),
(53,771,cs),
(65.253,771,o),
(113,772.181,o),
(113,748,cs),
(113,700.667,o),
(113.333,653.667,o),
(114,607,cs),
(114.667,560.333,o),
(115,513.667,o),
(115,467,cs),
(115,444.333,o),
(114.833,421.833,o),
(114.5,399.5,cs),
(114.167,377.167,o),
(114,355.333,o),
(114,334,cs),
(114,260.667,o),
(114,193,o),
(134,125,cs),
(161,30.499,o),
(260.519,-14,o),
(382,-14,cs),
(539.7,-14,o),
(648,75.28,o),
(648,272,cs),
(648,308.667,o),
(647.667,345.333,o),
(647,382,cs),
(646.333,418.667,o),
(646,455.333,o),
(646,492,cs),
(646,525.333,o),
(646.333,558.5,o),
(647,591.5,cs),
(647.667,624.5,o),
(648,658,o),
(648,692,cs),
(648,716.36,o),
(709.043,717,o),
(728,717,cs),
(744,717,o),
(765,719.333,o),
(765,742,cs),
(765,751.333,o),
(761.833,757.833,o),
(755.5,761.5,cs),
(749.167,765.167,o),
(735.333,767,o),
(714,767,cs),
(518,767,ls),
(493.333,767,o),
(481,758.667,o),
(481,742,cs),
(481,722,o),
(503.333,717,o),
(518,717,cs),
(530.253,717,o),
(578,718.181,o),
(578,694,cs),
(578,272,ls),
(578,160.529,o),
(526.506,48,o),
(383,48,cs),
(190.737,48,o),
(184,178.245,o),
(184,323,cs),
(184,746,l),
(184,746,l)
);
},
{
closed = 1;
nodes = (
(227,919,o),
(226,913,o),
(226,907,cs),
(226,892,o),
(232,879,o),
(243,879,cs),
(260,879,o),
(287,904,o),
(327,904,cs),
(366,904,o),
(408,880,o),
(464,880,cs),
(520,880,o),
(553,902,o),
(566,925,cs),
(569,931,o),
(571,937,o),
(571,944,cs),
(571,960,o),
(560,972,o),
(553,972,cs),
(550,972,o),
(546,971,o),
(543,970,cs),
(539,968,o),
(532,964,o),
(523,959,cs),
(500,948,o),
(480,942,o),
(463,942,cs),
(424,942,o),
(362,970,o),
(326,970,cs),
(301,970,o),
(279,964,o),
(258,952,cs),
(248,946,o),
(241,941,o),
(237,936,cs),
(233,931,o),
(230,927,o),
(229,924,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 6 9 11 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 6 9 11 91 0 2 3 1 1 0 2 1 91 7 1 5 5 6 83 0 6 6 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
117 115 112 110 107 105 99 97 94 92 89 87 79 76 72 69 65 62 45 52 51 56 37 14 31
CALL[ ]	/* CallFunction */";
};
width = 772;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(525.95,-14,o),
(634,76.249,o),
(634,272,cs),
(634,308.667,o),
(633.667,345.333,o),
(633,382,cs),
(632.333,418.667,o),
(632,455.333,o),
(632,492,cs),
(632,528.667,o),
(632.333,565.167,o),
(633,601.5,cs),
(633.667,637.833,o),
(634,674.667,o),
(634,712,cs),
(634,732.754,o),
(687.094,737,o),
(704,737,cs),
(720,737,o),
(741,737.333,o),
(741,752,cs),
(741,757.333,o),
(737.833,761.167,o),
(731.5,763.5,cs),
(725.167,765.833,o),
(711.333,767,o),
(690,767,cs),
(508,767,ls),
(496,767,o),
(471,766.667,o),
(471,752,cs),
(471,738.667,o),
(493.333,737,o),
(508,737,cs),
(535.329,737,o),
(594,737.173,o),
(594,714,cs),
(594,272,ls),
(594,146.304,o),
(534.813,18,o),
(368,18,cs),
(172.86,18,o),
(170,165.232,o),
(170,323,cs),
(170,766,ls),
(170,789.81,o),
(226.087,791,o),
(245,791,cs),
(261,791,o),
(282,791.333,o),
(282,806,cs),
(282,811.333,o),
(278.833,815.167,o),
(272.5,817.5,cs),
(266.167,819.833,o),
(252.333,821,o),
(231,821,cs),
(49,821,ls),
(37,821,o),
(12,820.667,o),
(12,806,cs),
(12,792.667,o),
(34.333,791,o),
(49,791,cs),
(79.112,791,o),
(129,790.669,o),
(129,768,cs),
(129,717.333,o),
(129.333,667,o),
(130,617,cs),
(130.667,567,o),
(131,517,o),
(131,467,cs),
(131,444.333,o),
(130.833,421.833,o),
(130.5,399.5,cs),
(130.167,377.167,o),
(130,355.333,o),
(130,334,cs),
(130,260.667,o),
(132.667,193,o),
(150,125,cs),
(174.245,30.713,o),
(259.815,-14,o),
(367,-14,cs)
);
},
{
closed = 1;
nodes = (
(245.791,888,o),
(272.735,913,o),
(314,913,cs),
(352.662,913,o),
(395.294,889,o),
(451,889,cs),
(503.947,889,o),
(553,908.797,o),
(553,934,cs),
(553,943.333,o),
(546.667,951,o),
(540,951,cs),
(536.667,951,o),
(533.167,950.167,o),
(529.5,948.5,cs),
(525.833,946.833,o),
(519.333,943.333,o),
(510,938,cs),
(487.333,926.667,o),
(467.333,921,o),
(450,921,cs),
(410.599,921,o),
(349.495,949,o),
(313,949,cs),
(288.333,949,o),
(265.667,943,o),
(245,931,cs),
(225.667,919.667,o),
(216,910.333,o),
(216,903,cs),
(216,896.333,o),
(223.333,888,o),
(230,888,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 6 9 11 91 0 2 3 1 1 0 2 1 92 7 1 5 5 6 83 0 6 6 12 67 0 0 0 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 6 9 11 91 0 2 3 1 1 0 2 1 92 7 1 5 5 6 83 0 6 6 14 67 0 0 0 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
116 114 111 109 106 104 98 96 93 91 88 86 79 76 72 69 65 62 45 52 52 56 36 14 20
CALL[ ]	/* CallFunction */";
};
width = 755;
}
);
note = Utilde;
unicode = 360;
},
{
glyphname = V;
kernLeft = V;
kernRight = V;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(344,150.319,o),
(304.618,267.321,o),
(265.5,413,cs),
(230.2,544.462,o),
(189,709.706,o),
(189,731,cs),
(189,767.466,o),
(285,740.871,o),
(285,794,cs),
(285,816.667,o),
(273.667,821,o),
(247,821,cs),
(39,821,ls),
(3,821,o),
(-15,814.333,o),
(-15,793,cs),
(-15,766.519,o),
(19.251,759,o),
(40,759,cs),
(70.667,757.667,o),
(87,751.667,o),
(95,725,cs),
(299,-9,ls),
(303,-25,o),
(318.333,-38,o),
(345,-38,cs),
(377,-38,o),
(388.333,-19.667,o),
(391,-9,cs),
(415.316,73.675,o),
(434.671,142.648,o),
(484,314,cs),
(524.695,455.361,o),
(564.079,582.092,o),
(593,665,cs),
(602.333,689,o),
(612.667,700.333,o),
(642,703,cs),
(641.123,703,o),
(691.042,709,o),
(721,709,cs),
(738.333,710.333,o),
(758,713.333,o),
(758,736,cs),
(758,762.667,o),
(748.667,766,o),
(718,766,cs),
(455,766,ls),
(420.333,766,o),
(403,754.333,o),
(403,731,cs),
(403,707,o),
(415.333,696.333,o),
(450,695,cs),
(469.333,694.333,o),
(482.5,693.167,o),
(489.5,691.5,cs),
(496.5,689.833,o),
(500,685.667,o),
(500,679,cs),
(500,653.026,o),
(474.202,561,o),
(422.5,384.5,cs),
(372.299,213.123,o),
(344,127.28,o),
(344,125,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 4 107 0 1 3 2 2 0 4 1 0 91 0 5 5 6 83 0 6 6 12 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 1 3 2 2 0 4 1 0 91 0 5 5 6 83 0 6 6 12 67 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 2 5 0 0 2 96 0 1 3 1 0 4 1 0 91 0 5 5 6 83 0 6 6 12 67 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 2 5 0 0 2 96 0 4 0 4 107 0 1 3 1 0 4 1 0 91 0 5 5 6 83 0 6 6 12 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
3 1 2 5 0 0 2 96 0 4 0 4 107 0 1 0 0 4 1 0 91 0 5 5 6 83 0 6 6 12 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 2 5 3 0 2 96 0 3 0 0 3 94 0 4 0 4 107 0 1 0 0 4 1 0 91 0 5 5 6 83 0 6 6 12 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 2 5 3 0 2 96 0 3 0 0 3 94 0 4 0 4 107 0 1 0 0 4 1 0 91 0 5 5 6 83 0 6 6 14 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
54 37 44 19 21 51 43 7 22
CALL[ ]	/* CallFunction */";
};
width = 691;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(314.333,213,o),
(285.333,316,o),
(260,408,cs),
(220.49,553.693,o),
(174,725.532,o),
(174,751,cs),
(174,786.522,o),
(270,760.231,o),
(270,801,cs),
(270,815.667,o),
(263,821,o),
(239,821,cs),
(22,821,ls),
(-0.667,821,o),
(-23,819.667,o),
(-23,801,cs),
(-23,778.333,o),
(4.333,775,o),
(23,775,cs),
(68.333,775,o),
(90.667,769.667,o),
(96,743,c),
(308,-9,ls),
(313.333,-26.333,o),
(329,-34,o),
(345,-34,cs),
(366.333,-34,o),
(376.333,-19.667,o),
(379,-9,cs),
(397.596,54.226,o),
(429.315,164.091,o),
(474.5,320.5,cs),
(513.857,456.737,o),
(554.145,591.39,o),
(586,677,cs),
(595.333,701,o),
(605.667,712.333,o),
(635,715,cs),
(633.998,715,o),
(679.99,721,o),
(714,721,cs),
(727.333,721,o),
(744,723.333,o),
(744,742,cs),
(744,762,o),
(733.667,766,o),
(711,766,cs),
(468,766,ls),
(441.333,766,o),
(429,759.667,o),
(429,741,cs),
(429,719.029,o),
(455.248,717,o),
(468,717,cs),
(476.667,716.333,o),
(485.667,715.667,o),
(495,715,cs),
(504.333,714.333,o),
(509,709.667,o),
(509,701,cs),
(509,677.946,o),
(481.105,571.178,o),
(428,380,cs),
(404,295.333,o),
(377,201.667,o),
(347,99,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 1 3 2 2 0 4 1 0 91 0 5 5 6 83 0 6 6 12 67 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 4 107 0 1 3 2 2 0 4 1 0 91 0 5 5 6 83 0 6 6 12 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 4 107 0 1 3 2 2 0 4 1 0 91 0 5 5 6 83 0 6 6 14 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
52 37 44 19 36 54 26 7 22
CALL[ ]	/* CallFunction */";
};
width = 687;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(351.667,-28,o),
(359.333,-19.667,o),
(362,-9,cs),
(380.521,53.972,o),
(413.75,166.951,o),
(461.5,330,cs),
(502.988,471.665,o),
(544.138,611.372,o),
(576,697,cs),
(585.333,721,o),
(595.667,732.333,o),
(625,735,cs),
(623.998,735,o),
(669.99,741,o),
(704,741,cs),
(717.333,741,o),
(724,744.667,o),
(724,752,cs),
(724,762.667,o),
(713,766,o),
(701,766,cs),
(458,766,ls),
(444.667,766,o),
(435.667,764.333,o),
(431,761,cs),
(426.333,757.667,o),
(424,754.333,o),
(424,751,cs),
(424,736.333,o),
(444.667,737,o),
(458,737,cs),
(478.015,737,o),
(529,739.874,o),
(529,721,cs),
(529,694.642,o),
(497.406,583.729,o),
(436,367,cs),
(408.667,272.333,o),
(377.667,167.333,o),
(343,52,c),
(307,178.667,o),
(275,293,o),
(247,395,cs),
(184.174,621.873,o),
(152,753.177,o),
(152,771,cs),
(152,803.488,o),
(248,782.276,o),
(248,807,cs),
(248,812.333,o),
(245.833,816,o),
(241.5,818,cs),
(237.167,820,o),
(229,821,o),
(217,821,cs),
(0,821,ls),
(-23.333,821,o),
(-35,816.333,o),
(-35,807,cs),
(-35,795,o),
(-17.667,795,o),
(1,795,cs),
(33,795,o),
(57.333,793,o),
(74,789,cs),
(90.667,785,o),
(100.667,776.333,o),
(104,763,cs),
(321,-9,ls),
(325,-23.667,o),
(334.333,-28,o),
(341,-28,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 1 3 2 2 0 4 1 0 91 7 1 5 5 6 83 0 6 6 12 67 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 4 0 4 107 0 1 3 2 2 0 4 1 0 91 7 1 5 5 6 83 0 6 6 12 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 4 0 4 107 0 1 3 2 2 0 4 1 0 91 7 1 5 5 6 83 0 6 6 14 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
20 51 37 44 19 35 52 58 8 23
CALL[ ]	/* CallFunction */";
};
width = 682;
}
);
note = V;
unicode = 86;
},
{
glyphname = W;
kernLeft = W;
kernRight = W;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(926,638.595,o),
(899.029,547.868,o),
(862,415,cs),
(827.325,290.578,o),
(791.327,166.796,o),
(779,99,c),
(730.734,285.167,o),
(682.113,440.857,o),
(626,690,cs),
(614,743.333,o),
(601.667,753,o),
(571,753,cs),
(532.333,753,o),
(522.333,720.667,o),
(513,690,cs),
(502.209,657.627,o),
(457.231,488.572,o),
(429,378,cs),
(409.667,304.667,o),
(389,225.333,o),
(367,140,c),
(331.344,263.748,o),
(293.164,387.648,o),
(253.5,512,cs),
(217.209,625.777,o),
(191,719.392,o),
(191,736,cs),
(191,767.991,o),
(296,742.728,o),
(296,794,cs),
(296,808.667,o),
(287,821,o),
(263,821,cs),
(14,821,ls),
(-11.333,821,o),
(-29,813,o),
(-29,793,cs),
(-29,770.333,o),
(-18.333,761,o),
(23,757,cs),
(73.667,751.667,o),
(92.333,743.667,o),
(99,721,cs),
(141.154,589.429,o),
(178.623,464.609,o),
(214.5,347.5,cs),
(248.686,235.912,o),
(283.358,121.689,o),
(317,13,cs),
(322.333,-3,o),
(332.333,-17,o),
(363,-17,cs),
(397.667,-17,o),
(407.333,-5.333,o),
(414,16,cs),
(448.667,141.333,o),
(487.333,278.333,o),
(518,385,cs),
(535.333,447,o),
(552.667,507.333,o),
(570,566,c),
(570,557.248,o),
(590.187,484.908,o),
(623,363.5,cs),
(652.128,255.726,o),
(686.122,125.279,o),
(719,-15,cs),
(727,-48.333,o),
(754.333,-54,o),
(777,-54,cs),
(810.333,-54,o),
(823.333,-39.667,o),
(830,-17,cs),
(914.683,295.267,o),
(952.077,422.309,o),
(1011,658,cs),
(1016.333,680.667,o),
(1032.667,693.333,o),
(1060,696,cs),
(1058.96,696,o),
(1117.953,702,o),
(1151,702,cs),
(1164.333,702,o),
(1188,706.333,o),
(1188,729,cs),
(1188,755.667,o),
(1170.667,759,o),
(1148,759,cs),
(893,759,ls),
(850.333,759,o),
(838,750,o),
(838,726,cs),
(838,700.667,o),
(850.333,692.667,o),
(893,690,cs),
(914.333,688.667,o),
(926,683.667,o),
(926,661,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
100 82 41 3 6 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 5 6 5 107 8 1 1 4 3 2 3 0 6 1 0 91 0 7 7 12 67 0 6 6 21 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 1 0 0 2 96 0 5 6 5 107 8 1 1 4 3 2 0 6 1 0 91 0 7 7 12 67 0 6 6 21 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
3 1 2 1 0 0 2 96 0 5 6 5 107 8 1 1 4 1 0 6 1 0 91 0 7 7 12 67 0 6 6 21 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 8 1 2 1 8 2 104 3 1 2 4 0 2 94 0 4 0 0 4 94 0 5 6 5 107 0 1 0 0 6 1 0 91 0 7 7 12 67 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 8 1 2 1 8 2 104 3 1 2 4 0 2 94 0 4 0 0 4 94 0 5 6 5 107 0 1 0 0 6 1 0 91 0 7 7 14 67 0 6 6 21 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
93 91 68 65 50 48 41 17 17 36 52 34 9 21
CALL[ ]	/* CallFunction */";
};
width = 1131;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(936,661.408,o),
(906.051,551.786,o),
(866,409.5,cs),
(823.053,256.926,o),
(787.013,134.06,o),
(773,68,c),
(754.071,141.013,o),
(729.827,225.54,o),
(703.5,322.5,cs),
(676.167,423.167,o),
(644.333,542,o),
(611,690,cs),
(601.667,728.667,o),
(594,747,o),
(566,747,cs),
(535.333,747,o),
(527,718,o),
(519,690,cs),
(503.23,637.432,o),
(466.082,503.772,o),
(429,364,cs),
(407.667,287.333,o),
(385,204.333,o),
(361,115,c),
(328.338,228.356,o),
(284.421,368.331,o),
(241.5,507,cs),
(196.721,651.671,o),
(173,732.316,o),
(173,751,cs),
(173,782.186,o),
(274,758.808,o),
(274,800,cs),
(274,813.333,o),
(267,821,o),
(243,821,cs),
(6,821,ls),
(-16.667,821,o),
(-31,815.667,o),
(-31,797,cs),
(-31,779.667,o),
(-11.667,775,o),
(7,775,cs),
(51,775,o),
(87.333,769.667,o),
(94,743,c),
(178.177,497.684,o),
(250.537,246.493,o),
(323,13,cs),
(329.667,-5.667,o),
(345.333,-12,o),
(364,-12,cs),
(382.667,-12,o),
(396.333,5.333,o),
(399,16,cs),
(423.215,100.752,o),
(457.303,220.38,o),
(501,375,cs),
(521.667,445.667,o),
(543,519,o),
(565,595,c),
(566.866,583.806,o),
(586.008,511.345,o),
(622,377.5,cs),
(653.073,261.949,o),
(689.099,128.605,o),
(725,-15,cs),
(733,-45.667,o),
(754.333,-51,o),
(773,-51,cs),
(791.667,-51,o),
(808.333,-43.667,o),
(815,-17,cs),
(856.468,134.447,o),
(891.43,261.577,o),
(919.5,364.5,cs),
(948.666,471.443,o),
(970.44,553.73,o),
(1000,670,cs),
(1005.333,692.667,o),
(1021.667,705.333,o),
(1049,708,cs),
(1047.848,708,o),
(1100.782,714,o),
(1140,714,cs),
(1153.333,714,o),
(1170,719,o),
(1170,735,cs),
(1170,759,o),
(1149,759,o),
(1137,759,cs),
(882,759,ls),
(855.333,759,o),
(848,750,o),
(848,734,cs),
(848,715.333,o),
(868.667,710,o),
(882,710,cs),
(899.21,710,o),
(936,710.672,o),
(936,681,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
106 88 45 3 5 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 8 1 0 1 8 0 104 0 4 5 4 107 0 1 3 2 2 0 5 1 0 91 0 6 6 7 83 0 7 7 12 67 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 8 1 0 1 8 0 104 0 4 5 4 107 0 1 3 2 2 0 5 1 0 91 0 6 6 7 83 0 7 7 12 67 0 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 8 1 2 1 8 2 104 0 2 0 0 2 94 0 4 5 4 107 0 1 3 1 0 5 1 0 91 0 6 6 7 83 0 7 7 14 67 0 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
99 97 74 71 67 65 56 54 43 19 36 52 51 9 20
CALL[ ]	/* CallFunction */";
};
width = 1122;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(769.667,-47,o),
(774.833,-45.333,o),
(780.5,-42,cs),
(786.167,-38.667,o),
(790.667,-30.333,o),
(794,-17,cs),
(840.829,154.027,o),
(877.437,287.705,o),
(901.5,374,cs),
(925.813,461.191,o),
(959.943,595.377,o),
(984,690,cs),
(989.333,712.667,o),
(1005.667,725.333,o),
(1033,728,cs),
(1031.848,728,o),
(1084.782,734,o),
(1124,734,cs),
(1137.333,734,o),
(1144,737.667,o),
(1144,745,cs),
(1144,755.667,o),
(1133,759,o),
(1121,759,cs),
(866,759,ls),
(852.667,759,o),
(843.667,757.333,o),
(839,754,cs),
(834.333,750.667,o),
(832,747.333,o),
(832,744,cs),
(832,729.333,o),
(852.667,730,o),
(866,730,cs),
(896.914,730,o),
(950,729.908,o),
(950,701,cs),
(950,687.55,o),
(922.459,574.108,o),
(871,394,cs),
(816.094,201.828,o),
(781.507,75.952,o),
(765,17,c),
(746.463,88.501,o),
(720.237,180.916,o),
(689,295,cs),
(658.333,407,o),
(623.333,539.333,o),
(590,690,c),
(587.185,698.445,o),
(580.472,737,o),
(559,737,cs),
(540.333,737,o),
(536,714,o),
(528,690,cs),
(513.967,640.886,o),
(482.053,523.917,o),
(429,340,cs),
(405.667,258,o),
(380,169,o),
(352,73,c),
(325.035,166.585,o),
(269.279,349.871,o),
(224,496,cs),
(172.819,661.174,o),
(147,752.795,o),
(147,771,cs),
(147,803.488,o),
(243,782.276,o),
(243,807,cs),
(243,812.333,o),
(240.833,816,o),
(236.5,818,cs),
(232.167,820,o),
(224,821,o),
(212,821,cs),
(-5,821,ls),
(-28.333,821,o),
(-40,816.333,o),
(-40,807,cs),
(-40,795,o),
(-22.667,795,o),
(-4,795,cs),
(28,795,o),
(51.833,793,o),
(67.5,789,cs),
(83.167,785,o),
(93.333,776.333,o),
(98,763,cs),
(184.464,511.02,o),
(250.521,274.294,o),
(332,13,cs),
(337.333,-3,o),
(347,-9,o),
(355,-9,cs),
(369.667,-9,o),
(375.333,5.333,o),
(378,16,cs),
(408.191,121.669,o),
(445.75,261.5,o),
(487,399,cs),
(509,477,o),
(532.667,558.333,o),
(558,643,c),
(559.719,632.688,o),
(580.673,550.567,o),
(620.5,401.5,cs),
(654.257,275.152,o),
(692.635,132.077,o),
(734,-15,cs),
(742,-41.667,o),
(754.333,-47,o),
(765,-47,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
106 86 44 3 5 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 9 1 0 1 9 0 104 0 4 5 4 107 0 1 3 2 2 0 5 1 0 91 8 1 6 6 7 83 0 7 7 12 67 0 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 9 1 2 1 9 2 104 0 2 0 0 2 94 0 4 5 4 107 0 1 3 1 0 5 1 0 91 8 1 6 6 7 83 0 7 7 14 67 0 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
97 95 77 76 72 69 66 64 55 53 43 19 35 52 51 10 20
CALL[ ]	/* CallFunction */";
};
width = 1109;
}
);
note = W;
unicode = 87;
},
{
glyphname = Wacute;
kernLeft = W;
kernRight = W;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(647,953.333,o),
(632.667,972,o),
(606,972,cs),
(567.545,972,o),
(493,898.769,o),
(493,872,cs),
(493,856,o),
(506.667,841,o),
(528,841,cs),
(561.368,841,o),
(647,897.284,o),
(647,936,cs)
);
},
{
closed = 1;
nodes = (
(926,638.595,o),
(899.029,547.868,o),
(862,415,cs),
(827.325,290.578,o),
(791.327,166.796,o),
(779,99,c),
(730.734,285.167,o),
(682.113,440.857,o),
(626,690,cs),
(614,743.333,o),
(601.667,753,o),
(571,753,cs),
(532.333,753,o),
(522.333,720.667,o),
(513,690,cs),
(502.209,657.627,o),
(457.231,488.572,o),
(429,378,cs),
(409.667,304.667,o),
(389,225.333,o),
(367,140,c),
(331.344,263.748,o),
(293.164,387.648,o),
(253.5,512,cs),
(217.209,625.777,o),
(191,719.392,o),
(191,736,cs),
(191,767.991,o),
(296,742.728,o),
(296,794,cs),
(296,808.667,o),
(287,821,o),
(263,821,cs),
(14,821,ls),
(-11.333,821,o),
(-29,813,o),
(-29,793,cs),
(-29,770.333,o),
(-18.333,761,o),
(23,757,cs),
(73.667,751.667,o),
(92.333,743.667,o),
(99,721,cs),
(141.154,589.429,o),
(178.623,464.609,o),
(214.5,347.5,cs),
(248.686,235.912,o),
(283.358,121.689,o),
(317,13,cs),
(322.333,-3,o),
(332.333,-17,o),
(363,-17,cs),
(397.667,-17,o),
(407.333,-5.333,o),
(414,16,cs),
(448.667,141.333,o),
(487.333,278.333,o),
(518,385,cs),
(535.333,447,o),
(552.667,507.333,o),
(570,566,c),
(570,557.248,o),
(590.187,484.908,o),
(623,363.5,cs),
(652.128,255.726,o),
(686.122,125.279,o),
(719,-15,cs),
(727,-48.333,o),
(754.333,-54,o),
(777,-54,cs),
(810.333,-54,o),
(823.333,-39.667,o),
(830,-17,cs),
(914.683,295.267,o),
(952.077,422.309,o),
(1011,658,cs),
(1016.333,680.667,o),
(1032.667,693.333,o),
(1060,696,cs),
(1058.96,696,o),
(1117.953,702,o),
(1151,702,cs),
(1164.333,702,o),
(1188,706.333,o),
(1188,729,cs),
(1188,755.667,o),
(1170.667,759,o),
(1148,759,cs),
(893,759,ls),
(850.333,759,o),
(838,750,o),
(838,726,cs),
(838,700.667,o),
(850.333,692.667,o),
(893,690,cs),
(914.333,688.667,o),
(926,683.667,o),
(926,661,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
116 98 57 3 8 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 1 0 1 106 0 0 9 0 106 0 7 8 7 107 10 1 3 6 5 4 3 2 8 3 2 91 0 9 9 12 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 0 9 0 106 0 4 3 2 2 4 96 0 7 8 7 107 10 1 3 6 5 2 2 8 3 2 91 0 9 9 12 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 0 9 0 106 5 1 4 3 2 2 4 96 0 7 8 7 107 10 1 3 6 1 2 8 3 2 91 0 9 9 12 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 1 0 1 106 0 0 9 0 106 0 10 3 4 3 10 4 104 5 1 4 6 2 4 94 0 6 2 2 6 94 0 7 8 7 107 0 3 0 2 8 3 2 91 0 9 9 12 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 1 0 1 106 0 0 9 0 106 0 10 3 4 3 10 4 104 5 1 4 6 2 4 94 0 6 2 2 6 94 0 7 8 7 107 0 3 0 2 8 3 2 91 0 9 9 14 67 0 8 8 21 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
109 107 84 81 66 64 41 17 17 36 52 36 38 36 11 23
CALL[ ]	/* CallFunction */";
};
width = 1131;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(634,959.667,o),
(622,972,o),
(602,972,cs),
(572.753,972,o),
(496,903.873,o),
(496,877,cs),
(496,863.667,o),
(505.333,854,o),
(520,854,cs),
(546.12,854,o),
(634,908.21,o),
(634,941,cs)
);
},
{
closed = 1;
nodes = (
(936,661.408,o),
(906.051,551.786,o),
(866,409.5,cs),
(823.053,256.926,o),
(787.013,134.06,o),
(773,68,c),
(754.071,141.013,o),
(729.827,225.54,o),
(703.5,322.5,cs),
(676.167,423.167,o),
(644.333,542,o),
(611,690,cs),
(601.667,728.667,o),
(594,747,o),
(566,747,cs),
(535.333,747,o),
(527,718,o),
(519,690,cs),
(503.23,637.432,o),
(466.082,503.772,o),
(429,364,cs),
(407.667,287.333,o),
(385,204.333,o),
(361,115,c),
(328.338,228.356,o),
(284.421,368.331,o),
(241.5,507,cs),
(196.721,651.671,o),
(173,732.316,o),
(173,751,cs),
(173,782.186,o),
(274,758.808,o),
(274,800,cs),
(274,813.333,o),
(267,821,o),
(243,821,cs),
(6,821,ls),
(-16.667,821,o),
(-31,815.667,o),
(-31,797,cs),
(-31,779.667,o),
(-11.667,775,o),
(7,775,cs),
(51,775,o),
(87.333,769.667,o),
(94,743,c),
(178.177,497.684,o),
(250.537,246.493,o),
(323,13,cs),
(329.667,-5.667,o),
(345.333,-12,o),
(364,-12,cs),
(382.667,-12,o),
(396.333,5.333,o),
(399,16,cs),
(423.215,100.752,o),
(457.303,220.38,o),
(501,375,cs),
(521.667,445.667,o),
(543,519,o),
(565,595,c),
(566.866,583.806,o),
(586.008,511.345,o),
(622,377.5,cs),
(653.073,261.949,o),
(689.099,128.605,o),
(725,-15,cs),
(733,-45.667,o),
(754.333,-51,o),
(773,-51,cs),
(791.667,-51,o),
(808.333,-43.667,o),
(815,-17,cs),
(856.468,134.447,o),
(891.43,261.577,o),
(919.5,364.5,cs),
(948.666,471.443,o),
(970.44,553.73,o),
(1000,670,cs),
(1005.333,692.667,o),
(1021.667,705.333,o),
(1049,708,cs),
(1047.848,708,o),
(1100.782,714,o),
(1140,714,cs),
(1153.333,714,o),
(1170,719,o),
(1170,735,cs),
(1170,759,o),
(1149,759,o),
(1137,759,cs),
(882,759,ls),
(855.333,759,o),
(848,750,o),
(848,734,cs),
(848,715.333,o),
(868.667,710,o),
(882,710,cs),
(899.21,710,o),
(936,710.672,o),
(936,681,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
122 104 61 3 7 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 9 0 106 0 10 3 2 3 10 2 104 0 6 7 6 107 0 3 5 4 2 2 7 3 2 91 0 8 8 9 83 0 9 9 12 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 9 0 106 0 10 3 2 3 10 2 104 0 6 7 6 107 0 3 5 4 2 2 7 3 2 91 0 8 8 9 83 0 9 9 12 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 1 0 1 106 0 0 9 0 106 0 10 3 4 3 10 4 104 0 4 2 2 4 94 0 6 7 6 107 0 3 5 1 2 7 3 2 91 0 8 8 9 83 0 9 9 14 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
115 113 90 87 83 81 72 70 43 19 36 52 53 38 36 11 22
CALL[ ]	/* CallFunction */";
};
width = 1122;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(769.667,-47,o),
(774.833,-45.333,o),
(780.5,-42,cs),
(786.167,-38.667,o),
(790.667,-30.333,o),
(794,-17,cs),
(840.829,154.027,o),
(877.437,287.705,o),
(901.5,374,cs),
(925.813,461.191,o),
(959.943,595.377,o),
(984,690,cs),
(989.333,712.667,o),
(1005.667,725.333,o),
(1033,728,cs),
(1031.848,728,o),
(1084.782,734,o),
(1124,734,cs),
(1137.333,734,o),
(1144,737.667,o),
(1144,745,cs),
(1144,755.667,o),
(1133,759,o),
(1121,759,cs),
(866,759,ls),
(852.667,759,o),
(843.667,757.333,o),
(839,754,cs),
(834.333,750.667,o),
(832,747.333,o),
(832,744,cs),
(832,729.333,o),
(852.667,730,o),
(866,730,cs),
(896.914,730,o),
(950,729.908,o),
(950,701,cs),
(950,687.55,o),
(922.459,574.108,o),
(871,394,cs),
(816.094,201.828,o),
(781.507,75.952,o),
(765,17,c),
(746.463,88.501,o),
(720.237,180.916,o),
(689,295,cs),
(658.333,407,o),
(623.333,539.333,o),
(590,690,c),
(587.185,698.445,o),
(580.472,737,o),
(559,737,cs),
(540.333,737,o),
(536,714,o),
(528,690,cs),
(513.967,640.886,o),
(482.053,523.917,o),
(429,340,cs),
(405.667,258,o),
(380,169,o),
(352,73,c),
(325.035,166.585,o),
(269.279,349.871,o),
(224,496,cs),
(172.819,661.174,o),
(147,752.795,o),
(147,771,cs),
(147,803.488,o),
(243,782.276,o),
(243,807,cs),
(243,812.333,o),
(240.833,816,o),
(236.5,818,cs),
(232.167,820,o),
(224,821,o),
(212,821,cs),
(-5,821,ls),
(-28.333,821,o),
(-40,816.333,o),
(-40,807,cs),
(-40,795,o),
(-22.667,795,o),
(-4,795,cs),
(28,795,o),
(51.833,793,o),
(67.5,789,cs),
(83.167,785,o),
(93.333,776.333,o),
(98,763,cs),
(184.464,511.02,o),
(250.521,274.294,o),
(332,13,cs),
(337.333,-3,o),
(347,-9,o),
(355,-9,cs),
(369.667,-9,o),
(375.333,5.333,o),
(378,16,cs),
(408.191,121.669,o),
(445.75,261.5,o),
(487,399,cs),
(509,477,o),
(532.667,558.333,o),
(558,643,c),
(559.719,632.688,o),
(580.673,550.567,o),
(620.5,401.5,cs),
(654.257,275.152,o),
(692.635,132.077,o),
(734,-15,cs),
(742,-41.667,o),
(754.333,-47,o),
(765,-47,cs)
);
},
{
closed = 1;
nodes = (
(525.311,875,o),
(615,928.367,o),
(615,950,cs),
(615,968.667,o),
(606.667,972,o),
(596,972,cs),
(576.012,972,o),
(501,910.697,o),
(501,886,cs),
(501,878.667,o),
(503.667,875,o),
(509,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
121 101 59 3 7 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 1 106 0 0 9 0 106 0 11 3 2 3 11 2 104 0 6 7 6 107 0 3 5 4 2 2 7 3 2 91 10 1 8 8 9 83 0 9 9 12 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 1 0 1 106 0 0 9 0 106 0 11 3 4 3 11 4 104 0 4 2 2 4 94 0 6 7 6 107 0 3 5 1 2 7 3 2 91 10 1 8 8 9 83 0 9 9 14 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
112 110 92 91 87 84 81 79 70 68 43 19 35 52 53 37 36 12 22
CALL[ ]	/* CallFunction */";
};
width = 1109;
}
);
note = Wacute;
unicode = 7810;
},
{
glyphname = Wcircumflex;
kernLeft = W;
kernRight = W;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(715.667,830,o),
(718,841.667,o),
(718,851,cs),
(718,891.942,o),
(609.536,972,o),
(585,972,cs),
(573.856,972,o),
(539.177,950.45,o),
(512,928,cs),
(481.333,902.667,o),
(453,870.667,o),
(453,844,cs),
(453,837.333,o),
(458,830,o),
(466,830,cs),
(482.72,830,o),
(543.662,853.252,o),
(585,880,c),
(643.555,842.111,o),
(699.41,830,o),
(705,830,cs)
);
},
{
closed = 1;
nodes = (
(926,638.595,o),
(899.029,547.868,o),
(862,415,cs),
(827.325,290.578,o),
(791.327,166.796,o),
(779,99,c),
(730.734,285.167,o),
(682.113,440.857,o),
(626,690,cs),
(614,743.333,o),
(601.667,753,o),
(571,753,cs),
(532.333,753,o),
(522.333,720.667,o),
(513,690,cs),
(502.209,657.627,o),
(457.231,488.572,o),
(429,378,cs),
(409.667,304.667,o),
(389,225.333,o),
(367,140,c),
(331.344,263.748,o),
(293.164,387.648,o),
(253.5,512,cs),
(217.209,625.777,o),
(191,719.392,o),
(191,736,cs),
(191,767.991,o),
(296,742.728,o),
(296,794,cs),
(296,808.667,o),
(287,821,o),
(263,821,cs),
(14,821,ls),
(-11.333,821,o),
(-29,813,o),
(-29,793,cs),
(-29,770.333,o),
(-18.333,761,o),
(23,757,cs),
(73.667,751.667,o),
(92.333,743.667,o),
(99,721,cs),
(141.154,589.429,o),
(178.623,464.609,o),
(214.5,347.5,cs),
(248.686,235.912,o),
(283.358,121.689,o),
(317,13,cs),
(322.333,-3,o),
(332.333,-17,o),
(363,-17,cs),
(397.667,-17,o),
(407.333,-5.333,o),
(414,16,cs),
(448.667,141.333,o),
(487.333,278.333,o),
(518,385,cs),
(535.333,447,o),
(552.667,507.333,o),
(570,566,c),
(570,557.248,o),
(590.187,484.908,o),
(623,363.5,cs),
(652.128,255.726,o),
(686.122,125.279,o),
(719,-15,cs),
(727,-48.333,o),
(754.333,-54,o),
(777,-54,cs),
(810.333,-54,o),
(823.333,-39.667,o),
(830,-17,cs),
(914.683,295.267,o),
(952.077,422.309,o),
(1011,658,cs),
(1016.333,680.667,o),
(1032.667,693.333,o),
(1060,696,cs),
(1058.96,696,o),
(1117.953,702,o),
(1151,702,cs),
(1164.333,702,o),
(1188,706.333,o),
(1188,729,cs),
(1188,755.667,o),
(1170.667,759,o),
(1148,759,cs),
(893,759,ls),
(850.333,759,o),
(838,750,o),
(838,726,cs),
(838,700.667,o),
(850.333,692.667,o),
(893,690,cs),
(914.333,688.667,o),
(926,683.667,o),
(926,661,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
5 1 0 2 126 108 67 3 9 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 2 0 2 106 1 12 2 0 10 0 106 0 8 9 8 107 11 1 4 7 6 5 3 3 9 4 3 91 0 10 10 12 67 0 9 9 21 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 2 0 2 106 1 12 2 0 10 0 106 0 5 4 3 3 5 96 0 8 9 8 107 11 1 4 7 6 2 3 9 4 3 91 0 10 10 12 67 0 9 9 21 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 2 0 2 106 1 12 2 0 10 0 106 6 1 5 4 3 3 5 96 0 8 9 8 107 11 1 4 7 1 3 9 4 3 91 0 10 10 12 67 0 9 9 21 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 2 0 2 106 1 12 2 0 10 0 106 0 11 4 5 4 11 5 104 6 1 5 7 3 5 94 0 7 3 3 7 94 0 8 9 8 107 0 4 0 3 9 4 3 91 0 10 10 12 67 0 9 9 21 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 2 0 2 106 1 12 2 0 10 0 106 0 11 4 5 4 11 5 104 6 1 5 7 3 5 94 0 7 3 3 7 94 0 8 9 8 107 0 4 0 3 9 4 3 91 0 10 10 14 67 0 9 9 21 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 119 117 94 91 76 74 58 56 47 46 45 44 43 41 37 34 30 28 19 17 11 9 0 25 1 25 13 15
CALL[ ]	/* CallFunction */";
};
width = 1131;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(702,847,o),
(705,854.667,o),
(705,864,cs),
(705,900.28,o),
(597.728,972,o),
(574,972,cs),
(552.04,972,o),
(444,901.46,o),
(444,860,cs),
(444,851.333,o),
(447.667,847,o),
(455,847,cs),
(472.679,847,o),
(534.008,874.475,o),
(574,898,c),
(637.994,860.357,o),
(685.663,847,o),
(694,847,cs)
);
},
{
closed = 1;
nodes = (
(936,661.408,o),
(906.051,551.786,o),
(866,409.5,cs),
(823.053,256.926,o),
(787.013,134.06,o),
(773,68,c),
(754.071,141.013,o),
(729.827,225.54,o),
(703.5,322.5,cs),
(676.167,423.167,o),
(644.333,542,o),
(611,690,cs),
(601.667,728.667,o),
(594,747,o),
(566,747,cs),
(535.333,747,o),
(527,718,o),
(519,690,cs),
(503.23,637.432,o),
(466.082,503.772,o),
(429,364,cs),
(407.667,287.333,o),
(385,204.333,o),
(361,115,c),
(328.338,228.356,o),
(284.421,368.331,o),
(241.5,507,cs),
(196.721,651.671,o),
(173,732.316,o),
(173,751,cs),
(173,782.186,o),
(274,758.808,o),
(274,800,cs),
(274,813.333,o),
(267,821,o),
(243,821,cs),
(6,821,ls),
(-16.667,821,o),
(-31,815.667,o),
(-31,797,cs),
(-31,779.667,o),
(-11.667,775,o),
(7,775,cs),
(51,775,o),
(87.333,769.667,o),
(94,743,c),
(178.177,497.684,o),
(250.537,246.493,o),
(323,13,cs),
(329.667,-5.667,o),
(345.333,-12,o),
(364,-12,cs),
(382.667,-12,o),
(396.333,5.333,o),
(399,16,cs),
(423.215,100.752,o),
(457.303,220.38,o),
(501,375,cs),
(521.667,445.667,o),
(543,519,o),
(565,595,c),
(566.866,583.806,o),
(586.008,511.345,o),
(622,377.5,cs),
(653.073,261.949,o),
(689.099,128.605,o),
(725,-15,cs),
(733,-45.667,o),
(754.333,-51,o),
(773,-51,cs),
(791.667,-51,o),
(808.333,-43.667,o),
(815,-17,cs),
(856.468,134.447,o),
(891.43,261.577,o),
(919.5,364.5,cs),
(948.666,471.443,o),
(970.44,553.73,o),
(1000,670,cs),
(1005.333,692.667,o),
(1021.667,705.333,o),
(1049,708,cs),
(1047.848,708,o),
(1100.782,714,o),
(1140,714,cs),
(1153.333,714,o),
(1170,719,o),
(1170,735,cs),
(1170,759,o),
(1149,759,o),
(1137,759,cs),
(882,759,ls),
(855.333,759,o),
(848,750,o),
(848,734,cs),
(848,715.333,o),
(868.667,710,o),
(882,710,cs),
(899.21,710,o),
(936,710.672,o),
(936,681,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
5 1 0 2 131 113 70 3 8 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 2 0 2 106 1 12 2 0 10 0 106 0 11 4 3 4 11 3 104 0 7 8 7 107 0 4 6 5 2 3 8 4 3 91 0 9 9 10 83 0 10 10 12 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 2 0 2 106 1 12 2 0 10 0 106 0 11 4 3 4 11 3 104 0 7 8 7 107 0 4 6 5 2 3 8 4 3 91 0 9 9 10 83 0 10 10 12 67 0 8 8 24 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 2 0 2 106 1 12 2 0 10 0 106 0 11 4 5 4 11 5 104 0 5 3 3 5 94 0 7 8 7 107 0 4 6 1 3 8 4 3 91 0 9 9 10 83 0 10 10 14 67 0 8 8 24 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 124 122 99 96 92 90 81 79 61 59 48 47 44 42 38 35 31 28 18 16 11 9 0 24 1 24 13 15
CALL[ ]	/* CallFunction */";
};
width = 1122;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(769.667,-47,o),
(774.833,-45.333,o),
(780.5,-42,cs),
(786.167,-38.667,o),
(790.667,-30.333,o),
(794,-17,cs),
(840.829,154.027,o),
(877.437,287.705,o),
(901.5,374,cs),
(925.813,461.191,o),
(959.943,595.377,o),
(984,690,cs),
(989.333,712.667,o),
(1005.667,725.333,o),
(1033,728,cs),
(1031.848,728,o),
(1084.782,734,o),
(1124,734,cs),
(1137.333,734,o),
(1144,737.667,o),
(1144,745,cs),
(1144,755.667,o),
(1133,759,o),
(1121,759,cs),
(866,759,ls),
(852.667,759,o),
(843.667,757.333,o),
(839,754,cs),
(834.333,750.667,o),
(832,747.333,o),
(832,744,cs),
(832,729.333,o),
(852.667,730,o),
(866,730,cs),
(896.914,730,o),
(950,729.908,o),
(950,701,cs),
(950,687.55,o),
(922.459,574.108,o),
(871,394,cs),
(816.094,201.828,o),
(781.507,75.952,o),
(765,17,c),
(746.463,88.501,o),
(720.237,180.916,o),
(689,295,cs),
(658.333,407,o),
(623.333,539.333,o),
(590,690,c),
(587.185,698.445,o),
(580.472,737,o),
(559,737,cs),
(540.333,737,o),
(536,714,o),
(528,690,cs),
(513.967,640.886,o),
(482.053,523.917,o),
(429,340,cs),
(405.667,258,o),
(380,169,o),
(352,73,c),
(325.035,166.585,o),
(269.279,349.871,o),
(224,496,cs),
(172.819,661.174,o),
(147,752.795,o),
(147,771,cs),
(147,803.488,o),
(243,782.276,o),
(243,807,cs),
(243,812.333,o),
(240.833,816,o),
(236.5,818,cs),
(232.167,820,o),
(224,821,o),
(212,821,cs),
(-5,821,ls),
(-28.333,821,o),
(-40,816.333,o),
(-40,807,cs),
(-40,795,o),
(-22.667,795,o),
(-4,795,cs),
(28,795,o),
(51.833,793,o),
(67.5,789,cs),
(83.167,785,o),
(93.333,776.333,o),
(98,763,cs),
(184.464,511.02,o),
(250.521,274.294,o),
(332,13,cs),
(337.333,-3,o),
(347,-9,o),
(355,-9,cs),
(369.667,-9,o),
(375.333,5.333,o),
(378,16,cs),
(408.191,121.669,o),
(445.75,261.5,o),
(487,399,cs),
(509,477,o),
(532.667,558.333,o),
(558,643,c),
(559.719,632.688,o),
(580.673,550.567,o),
(620.5,401.5,cs),
(654.257,275.152,o),
(692.635,132.077,o),
(734,-15,cs),
(742,-41.667,o),
(754.333,-47,o),
(765,-47,cs)
);
},
{
closed = 1;
nodes = (
(446.158,875,o),
(494.069,894.154,o),
(558,928,c),
(622.308,893.955,o),
(670.037,875,o),
(678,875,cs),
(683.333,875,o),
(686,878.667,o),
(686,886,cs),
(686,910.708,o),
(583.596,972,o),
(558,972,cs),
(534.629,972,o),
(431,910.79,o),
(431,886,cs),
(431,878.667,o),
(433.667,875,o),
(439,875,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
5 1 0 2 130 110 68 3 8 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 0 2 106 1 13 2 0 10 0 106 0 12 4 3 4 12 3 104 0 7 8 7 107 0 4 6 5 2 3 8 4 3 91 11 1 9 9 10 83 0 10 10 12 67 0 8 8 24 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 2 0 2 106 1 13 2 0 10 0 106 0 12 4 5 4 12 5 104 0 5 3 3 5 94 0 7 8 7 107 0 4 6 1 3 8 4 3 91 11 1 9 9 10 83 0 10 10 14 67 0 8 8 24 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
1 0 121 119 101 100 96 93 90 88 79 77 59 57 46 45 42 40 37 34 30 27 18 16 11 9 0 23 1 23 14 15
CALL[ ]	/* CallFunction */";
};
width = 1109;
}
);
note = Wcircumflex;
unicode = 372;
},
{
glyphname = Wdieresis;
kernLeft = W;
kernRight = W;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(429,868.333,o),
(455.667,841,o),
(489,841,cs),
(520.371,841,o),
(555,855.733,o),
(555,911,cs),
(555,947,o),
(526.667,972,o),
(496,972,cs),
(448.823,972,o),
(429,930.29,o),
(429,907,cs)
);
},
{
closed = 1;
nodes = (
(636,857.333,o),
(662.667,830,o),
(696,830,cs),
(727.371,830,o),
(762,844.733,o),
(762,900,cs),
(762,937.333,o),
(733.667,961,o),
(703,961,cs),
(655.823,961,o),
(636,919.29,o),
(636,896,cs)
);
},
{
closed = 1;
nodes = (
(926,638.595,o),
(899.029,547.868,o),
(862,415,cs),
(827.325,290.578,o),
(791.327,166.796,o),
(779,99,c),
(730.734,285.167,o),
(682.113,440.857,o),
(626,690,cs),
(614,743.333,o),
(601.667,753,o),
(571,753,cs),
(532.333,753,o),
(522.333,720.667,o),
(513,690,cs),
(502.209,657.627,o),
(457.231,488.572,o),
(429,378,cs),
(409.667,304.667,o),
(389,225.333,o),
(367,140,c),
(331.344,263.748,o),
(293.164,387.648,o),
(253.5,512,cs),
(217.209,625.777,o),
(191,719.392,o),
(191,736,cs),
(191,767.991,o),
(296,742.728,o),
(296,794,cs),
(296,808.667,o),
(287,821,o),
(263,821,cs),
(14,821,ls),
(-11.333,821,o),
(-29,813,o),
(-29,793,cs),
(-29,770.333,o),
(-18.333,761,o),
(23,757,cs),
(73.667,751.667,o),
(92.333,743.667,o),
(99,721,cs),
(141.154,589.429,o),
(178.623,464.609,o),
(214.5,347.5,cs),
(248.686,235.912,o),
(283.358,121.689,o),
(317,13,cs),
(322.333,-3,o),
(332.333,-17,o),
(363,-17,cs),
(397.667,-17,o),
(407.333,-5.333,o),
(414,16,cs),
(448.667,141.333,o),
(487.333,278.333,o),
(518,385,cs),
(535.333,447,o),
(552.667,507.333,o),
(570,566,c),
(570,557.248,o),
(590.187,484.908,o),
(623,363.5,cs),
(652.128,255.726,o),
(686.122,125.279,o),
(719,-15,cs),
(727,-48.333,o),
(754.333,-54,o),
(777,-54,cs),
(810.333,-54,o),
(823.333,-39.667,o),
(830,-17,cs),
(914.683,295.267,o),
(952.077,422.309,o),
(1011,658,cs),
(1016.333,680.667,o),
(1032.667,693.333,o),
(1060,696,cs),
(1058.96,696,o),
(1117.953,702,o),
(1151,702,cs),
(1164.333,702,o),
(1188,706.333,o),
(1188,729,cs),
(1188,755.667,o),
(1170.667,759,o),
(1148,759,cs),
(893,759,ls),
(850.333,759,o),
(838,750,o),
(838,726,cs),
(838,700.667,o),
(850.333,692.667,o),
(893,690,cs),
(914.333,688.667,o),
(926,683.667,o),
(926,661,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
132 114 73 3 10 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 9 10 9 107 2 1 0 3 1 1 11 0 1 91 12 1 5 8 7 6 3 4 10 5 4 91 0 11 11 12 67 0 10 10 21 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 6 5 4 4 6 96 0 9 10 9 107 2 1 0 3 1 1 11 0 1 91 12 1 5 8 7 2 4 10 5 4 91 0 11 11 12 67 0 10 10 21 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 6 5 4 4 6 96 0 9 10 9 107 0 0 0 1 3 0 1 91 0 2 0 3 11 2 3 91 12 1 5 8 7 2 4 10 5 4 91 0 11 11 12 67 0 10 10 21 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
7 1 6 5 4 4 6 96 0 9 10 9 107 0 0 0 1 3 0 1 91 0 2 0 3 11 2 3 91 12 1 5 8 1 4 10 5 4 91 0 11 11 12 67 0 10 10 21 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 12 5 6 5 12 6 104 7 1 6 8 4 6 94 0 8 4 4 8 94 0 9 10 9 107 0 0 0 1 3 0 1 91 0 2 0 3 11 2 3 91 0 5 0 4 10 5 4 91 0 11 11 12 67 0 10 10 21 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 12 5 6 5 12 6 104 7 1 6 8 4 6 94 0 8 4 4 8 94 0 9 10 9 107 0 0 0 1 3 0 1 91 0 2 0 3 11 2 3 91 0 5 0 4 10 5 4 91 0 11 11 14 67 0 10 10 21 10 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
125 123 100 97 82 80 64 62 17 17 36 52 36 38 38 38 36 13 24
CALL[ ]	/* CallFunction */";
};
width = 1131;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(425,882.667,o),
(447.333,859,o),
(474,859,cs),
(499.333,859,o),
(530,872,o),
(530,920,cs),
(530,950.667,o),
(507.667,972,o),
(481,972,cs),
(442.685,972,o),
(425,936.643,o),
(425,916,cs)
);
},
{
closed = 1;
nodes = (
(632,870.667,o),
(654.333,847,o),
(681,847,cs),
(706.333,847,o),
(737,860,o),
(737,908,cs),
(737,938.667,o),
(714.667,960,o),
(688,960,cs),
(649.685,960,o),
(632,924.643,o),
(632,904,cs)
);
},
{
closed = 1;
nodes = (
(936,661.408,o),
(906.051,551.786,o),
(866,409.5,cs),
(823.053,256.926,o),
(787.013,134.06,o),
(773,68,c),
(754.071,141.013,o),
(729.827,225.54,o),
(703.5,322.5,cs),
(676.167,423.167,o),
(644.333,542,o),
(611,690,cs),
(601.667,728.667,o),
(594,747,o),
(566,747,cs),
(535.333,747,o),
(527,718,o),
(519,690,cs),
(503.23,637.432,o),
(466.082,503.772,o),
(429,364,cs),
(407.667,287.333,o),
(385,204.333,o),
(361,115,c),
(328.338,228.356,o),
(284.421,368.331,o),
(241.5,507,cs),
(196.721,651.671,o),
(173,732.316,o),
(173,751,cs),
(173,782.186,o),
(274,758.808,o),
(274,800,cs),
(274,813.333,o),
(267,821,o),
(243,821,cs),
(6,821,ls),
(-16.667,821,o),
(-31,815.667,o),
(-31,797,cs),
(-31,779.667,o),
(-11.667,775,o),
(7,775,cs),
(51,775,o),
(87.333,769.667,o),
(94,743,c),
(178.177,497.684,o),
(250.537,246.493,o),
(323,13,cs),
(329.667,-5.667,o),
(345.333,-12,o),
(364,-12,cs),
(382.667,-12,o),
(396.333,5.333,o),
(399,16,cs),
(423.215,100.752,o),
(457.303,220.38,o),
(501,375,cs),
(521.667,445.667,o),
(543,519,o),
(565,595,c),
(566.866,583.806,o),
(586.008,511.345,o),
(622,377.5,cs),
(653.073,261.949,o),
(689.099,128.605,o),
(725,-15,cs),
(733,-45.667,o),
(754.333,-51,o),
(773,-51,cs),
(791.667,-51,o),
(808.333,-43.667,o),
(815,-17,cs),
(856.468,134.447,o),
(891.43,261.577,o),
(919.5,364.5,cs),
(948.666,471.443,o),
(970.44,553.73,o),
(1000,670,cs),
(1005.333,692.667,o),
(1021.667,705.333,o),
(1049,708,cs),
(1047.848,708,o),
(1100.782,714,o),
(1140,714,cs),
(1153.333,714,o),
(1170,719,o),
(1170,735,cs),
(1170,759,o),
(1149,759,o),
(1137,759,cs),
(882,759,ls),
(855.333,759,o),
(848,750,o),
(848,734,cs),
(848,715.333,o),
(868.667,710,o),
(882,710,cs),
(899.21,710,o),
(936,710.672,o),
(936,681,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
134 116 73 3 9 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 12 5 4 5 12 4 104 0 8 9 8 107 0 0 0 1 3 0 1 91 0 2 0 3 11 2 3 91 0 5 7 6 2 4 9 5 4 91 0 10 10 11 83 0 11 11 12 67 0 9 9 21 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 12 5 4 5 12 4 104 0 8 9 8 107 0 0 0 1 3 0 1 91 0 2 0 3 11 2 3 91 0 5 7 6 2 4 9 5 4 91 0 10 10 11 83 0 11 11 12 67 0 9 9 24 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 12 5 6 5 12 6 104 0 6 4 4 6 94 0 8 9 8 107 0 0 0 1 3 0 1 91 0 2 0 3 11 2 3 91 0 5 7 1 4 9 5 4 91 0 10 10 11 83 0 11 11 14 67 0 9 9 24 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
127 125 102 99 95 93 84 82 43 19 36 52 53 36 38 36 36 13 24
CALL[ ]	/* CallFunction */";
};
width = 1122;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(769.667,-47,o),
(774.833,-45.333,o),
(780.5,-42,cs),
(786.167,-38.667,o),
(790.667,-30.333,o),
(794,-17,cs),
(840.829,154.027,o),
(877.437,287.705,o),
(901.5,374,cs),
(925.813,461.191,o),
(959.943,595.377,o),
(984,690,cs),
(989.333,712.667,o),
(1005.667,725.333,o),
(1033,728,cs),
(1031.848,728,o),
(1084.782,734,o),
(1124,734,cs),
(1137.333,734,o),
(1144,737.667,o),
(1144,745,cs),
(1144,755.667,o),
(1133,759,o),
(1121,759,cs),
(866,759,ls),
(852.667,759,o),
(843.667,757.333,o),
(839,754,cs),
(834.333,750.667,o),
(832,747.333,o),
(832,744,cs),
(832,729.333,o),
(852.667,730,o),
(866,730,cs),
(896.914,730,o),
(950,729.908,o),
(950,701,cs),
(950,687.55,o),
(922.459,574.108,o),
(871,394,cs),
(816.094,201.828,o),
(781.507,75.952,o),
(765,17,c),
(746.463,88.501,o),
(720.237,180.916,o),
(689,295,cs),
(658.333,407,o),
(623.333,539.333,o),
(590,690,c),
(587.185,698.445,o),
(580.472,737,o),
(559,737,cs),
(540.333,737,o),
(536,714,o),
(528,690,cs),
(513.967,640.886,o),
(482.053,523.917,o),
(429,340,cs),
(405.667,258,o),
(380,169,o),
(352,73,c),
(325.035,166.585,o),
(269.279,349.871,o),
(224,496,cs),
(172.819,661.174,o),
(147,752.795,o),
(147,771,cs),
(147,803.488,o),
(243,782.276,o),
(243,807,cs),
(243,812.333,o),
(240.833,816,o),
(236.5,818,cs),
(232.167,820,o),
(224,821,o),
(212,821,cs),
(-5,821,ls),
(-28.333,821,o),
(-40,816.333,o),
(-40,807,cs),
(-40,795,o),
(-22.667,795,o),
(-4,795,cs),
(28,795,o),
(51.833,793,o),
(67.5,789,cs),
(83.167,785,o),
(93.333,776.333,o),
(98,763,cs),
(184.464,511.02,o),
(250.521,274.294,o),
(332,13,cs),
(337.333,-3,o),
(347,-9,o),
(355,-9,cs),
(369.667,-9,o),
(375.333,5.333,o),
(378,16,cs),
(408.191,121.669,o),
(445.75,261.5,o),
(487,399,cs),
(509,477,o),
(532.667,558.333,o),
(558,643,c),
(559.719,632.688,o),
(580.673,550.567,o),
(620.5,401.5,cs),
(654.257,275.152,o),
(692.635,132.077,o),
(734,-15,cs),
(742,-41.667,o),
(754.333,-47,o),
(765,-47,cs)
);
},
{
closed = 1;
nodes = (
(471.667,889,o),
(494,899,o),
(494,935,cs),
(494,957.667,o),
(478.667,972,o),
(460,972,cs),
(432.258,972,o),
(419,944.895,o),
(419,931,cs),
(419,907,o),
(434.333,889,o),
(453,889,cs)
);
},
{
closed = 1;
nodes = (
(678.667,875,o),
(701,885,o),
(701,921,cs),
(701,943.667,o),
(685.667,958,o),
(667,958,cs),
(639.258,958,o),
(626,930.895,o),
(626,917,cs),
(626,893,o),
(641.333,875,o),
(660,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
134 114 72 3 9 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 13 5 4 5 13 4 104 0 8 9 8 107 0 0 0 1 3 0 1 91 0 2 0 3 11 2 3 91 0 5 7 6 2 4 9 5 4 91 12 1 10 10 11 83 0 11 11 12 67 0 9 9 24 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 13 5 6 5 13 6 104 0 6 4 4 6 94 0 8 9 8 107 0 0 0 1 3 0 1 91 0 2 0 3 11 2 3 91 0 5 7 1 4 9 5 4 91 12 1 10 10 11 83 0 11 11 14 67 0 9 9 24 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
125 123 105 104 100 97 94 92 83 81 43 19 35 52 53 36 38 36 36 14 24
CALL[ ]	/* CallFunction */";
};
width = 1109;
}
);
note = Wdieresis;
unicode = 7812;
},
{
glyphname = Wgrave;
kernLeft = W;
kernRight = W;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(519,896.665,o),
(605.564,841,o),
(639,841,cs),
(659,841,o),
(674,856,o),
(674,872,cs),
(674,897.591,o),
(600.088,972,o),
(560,972,cs),
(533.333,972,o),
(519,953.333,o),
(519,936,cs)
);
},
{
closed = 1;
nodes = (
(926,638.595,o),
(899.029,547.868,o),
(862,415,cs),
(827.325,290.578,o),
(791.327,166.796,o),
(779,99,c),
(730.734,285.167,o),
(682.113,440.857,o),
(626,690,cs),
(614,743.333,o),
(601.667,753,o),
(571,753,cs),
(532.333,753,o),
(522.333,720.667,o),
(513,690,cs),
(502.209,657.627,o),
(457.231,488.572,o),
(429,378,cs),
(409.667,304.667,o),
(389,225.333,o),
(367,140,c),
(331.344,263.748,o),
(293.164,387.648,o),
(253.5,512,cs),
(217.209,625.777,o),
(191,719.392,o),
(191,736,cs),
(191,767.991,o),
(296,742.728,o),
(296,794,cs),
(296,808.667,o),
(287,821,o),
(263,821,cs),
(14,821,ls),
(-11.333,821,o),
(-29,813,o),
(-29,793,cs),
(-29,770.333,o),
(-18.333,761,o),
(23,757,cs),
(73.667,751.667,o),
(92.333,743.667,o),
(99,721,cs),
(141.154,589.429,o),
(178.623,464.609,o),
(214.5,347.5,cs),
(248.686,235.912,o),
(283.358,121.689,o),
(317,13,cs),
(322.333,-3,o),
(332.333,-17,o),
(363,-17,cs),
(397.667,-17,o),
(407.333,-5.333,o),
(414,16,cs),
(448.667,141.333,o),
(487.333,278.333,o),
(518,385,cs),
(535.333,447,o),
(552.667,507.333,o),
(570,566,c),
(570,557.248,o),
(590.187,484.908,o),
(623,363.5,cs),
(652.128,255.726,o),
(686.122,125.279,o),
(719,-15,cs),
(727,-48.333,o),
(754.333,-54,o),
(777,-54,cs),
(810.333,-54,o),
(823.333,-39.667,o),
(830,-17,cs),
(914.683,295.267,o),
(952.077,422.309,o),
(1011,658,cs),
(1016.333,680.667,o),
(1032.667,693.333,o),
(1060,696,cs),
(1058.96,696,o),
(1117.953,702,o),
(1151,702,cs),
(1164.333,702,o),
(1188,706.333,o),
(1188,729,cs),
(1188,755.667,o),
(1170.667,759,o),
(1148,759,cs),
(893,759,ls),
(850.333,759,o),
(838,750,o),
(838,726,cs),
(838,700.667,o),
(850.333,692.667,o),
(893,690,cs),
(914.333,688.667,o),
(926,683.667,o),
(926,661,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
116 98 57 3 8 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 1 0 106 0 1 9 1 106 0 7 8 7 107 10 1 3 6 5 4 3 2 8 3 2 91 0 9 9 12 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 0 1 0 106 0 1 9 1 106 0 4 3 2 2 4 96 0 7 8 7 107 10 1 3 6 5 2 2 8 3 2 91 0 9 9 12 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 0 1 0 106 0 1 9 1 106 5 1 4 3 2 2 4 96 0 7 8 7 107 10 1 3 6 1 2 8 3 2 91 0 9 9 12 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 0 1 0 106 0 1 9 1 106 0 10 3 4 3 10 4 104 5 1 4 6 2 4 94 0 6 2 2 6 94 0 7 8 7 107 0 3 0 2 8 3 2 91 0 9 9 12 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 0 1 0 106 0 1 9 1 106 0 10 3 4 3 10 4 104 5 1 4 6 2 4 94 0 6 2 2 6 94 0 7 8 7 107 0 3 0 2 8 3 2 91 0 9 9 14 67 0 8 8 21 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
109 107 84 81 66 64 41 17 17 36 52 38 38 34 11 23
CALL[ ]	/* CallFunction */";
};
width = 1131;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(512,909.521,o),
(597.059,854,o),
(626,854,cs),
(640.667,854,o),
(650,863.667,o),
(650,877,cs),
(650,903.873,o),
(573.247,972,o),
(544,972,cs),
(524,972,o),
(512,959.667,o),
(512,941,cs)
);
},
{
closed = 1;
nodes = (
(936,661.408,o),
(906.051,551.786,o),
(866,409.5,cs),
(823.053,256.926,o),
(787.013,134.06,o),
(773,68,c),
(754.071,141.013,o),
(729.827,225.54,o),
(703.5,322.5,cs),
(676.167,423.167,o),
(644.333,542,o),
(611,690,cs),
(601.667,728.667,o),
(594,747,o),
(566,747,cs),
(535.333,747,o),
(527,718,o),
(519,690,cs),
(503.23,637.432,o),
(466.082,503.772,o),
(429,364,cs),
(407.667,287.333,o),
(385,204.333,o),
(361,115,c),
(328.338,228.356,o),
(284.421,368.331,o),
(241.5,507,cs),
(196.721,651.671,o),
(173,732.316,o),
(173,751,cs),
(173,782.186,o),
(274,758.808,o),
(274,800,cs),
(274,813.333,o),
(267,821,o),
(243,821,cs),
(6,821,ls),
(-16.667,821,o),
(-31,815.667,o),
(-31,797,cs),
(-31,779.667,o),
(-11.667,775,o),
(7,775,cs),
(51,775,o),
(87.333,769.667,o),
(94,743,c),
(178.177,497.684,o),
(250.537,246.493,o),
(323,13,cs),
(329.667,-5.667,o),
(345.333,-12,o),
(364,-12,cs),
(382.667,-12,o),
(396.333,5.333,o),
(399,16,cs),
(423.215,100.752,o),
(457.303,220.38,o),
(501,375,cs),
(521.667,445.667,o),
(543,519,o),
(565,595,c),
(566.866,583.806,o),
(586.008,511.345,o),
(622,377.5,cs),
(653.073,261.949,o),
(689.099,128.605,o),
(725,-15,cs),
(733,-45.667,o),
(754.333,-51,o),
(773,-51,cs),
(791.667,-51,o),
(808.333,-43.667,o),
(815,-17,cs),
(856.468,134.447,o),
(891.43,261.577,o),
(919.5,364.5,cs),
(948.666,471.443,o),
(970.44,553.73,o),
(1000,670,cs),
(1005.333,692.667,o),
(1021.667,705.333,o),
(1049,708,cs),
(1047.848,708,o),
(1100.782,714,o),
(1140,714,cs),
(1153.333,714,o),
(1170,719,o),
(1170,735,cs),
(1170,759,o),
(1149,759,o),
(1137,759,cs),
(882,759,ls),
(855.333,759,o),
(848,750,o),
(848,734,cs),
(848,715.333,o),
(868.667,710,o),
(882,710,cs),
(899.21,710,o),
(936,710.672,o),
(936,681,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
122 104 61 3 7 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 0 1 0 106 0 1 9 1 106 0 10 3 2 3 10 2 104 0 6 7 6 107 0 3 5 4 2 2 7 3 2 91 0 8 8 9 83 0 9 9 12 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 0 1 0 106 0 1 9 1 106 0 10 3 2 3 10 2 104 0 6 7 6 107 0 3 5 4 2 2 7 3 2 91 0 8 8 9 83 0 9 9 12 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 0 1 0 106 0 1 9 1 106 0 10 3 4 3 10 4 104 0 4 2 2 4 94 0 6 7 6 107 0 3 5 1 2 7 3 2 91 0 8 8 9 83 0 9 9 14 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
115 113 90 87 83 81 72 70 43 19 36 52 55 38 34 11 22
CALL[ ]	/* CallFunction */";
};
width = 1122;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(769.667,-47,o),
(774.833,-45.333,o),
(780.5,-42,cs),
(786.167,-38.667,o),
(790.667,-30.333,o),
(794,-17,cs),
(840.829,154.027,o),
(877.437,287.705,o),
(901.5,374,cs),
(925.813,461.191,o),
(959.943,595.377,o),
(984,690,cs),
(989.333,712.667,o),
(1005.667,725.333,o),
(1033,728,cs),
(1031.848,728,o),
(1084.782,734,o),
(1124,734,cs),
(1137.333,734,o),
(1144,737.667,o),
(1144,745,cs),
(1144,755.667,o),
(1133,759,o),
(1121,759,cs),
(866,759,ls),
(852.667,759,o),
(843.667,757.333,o),
(839,754,cs),
(834.333,750.667,o),
(832,747.333,o),
(832,744,cs),
(832,729.333,o),
(852.667,730,o),
(866,730,cs),
(896.914,730,o),
(950,729.908,o),
(950,701,cs),
(950,687.55,o),
(922.459,574.108,o),
(871,394,cs),
(816.094,201.828,o),
(781.507,75.952,o),
(765,17,c),
(746.463,88.501,o),
(720.237,180.916,o),
(689,295,cs),
(658.333,407,o),
(623.333,539.333,o),
(590,690,c),
(587.185,698.445,o),
(580.472,737,o),
(559,737,cs),
(540.333,737,o),
(536,714,o),
(528,690,cs),
(513.967,640.886,o),
(482.053,523.917,o),
(429,340,cs),
(405.667,258,o),
(380,169,o),
(352,73,c),
(325.035,166.585,o),
(269.279,349.871,o),
(224,496,cs),
(172.819,661.174,o),
(147,752.795,o),
(147,771,cs),
(147,803.488,o),
(243,782.276,o),
(243,807,cs),
(243,812.333,o),
(240.833,816,o),
(236.5,818,cs),
(232.167,820,o),
(224,821,o),
(212,821,cs),
(-5,821,ls),
(-28.333,821,o),
(-40,816.333,o),
(-40,807,cs),
(-40,795,o),
(-22.667,795,o),
(-4,795,cs),
(28,795,o),
(51.833,793,o),
(67.5,789,cs),
(83.167,785,o),
(93.333,776.333,o),
(98,763,cs),
(184.464,511.02,o),
(250.521,274.294,o),
(332,13,cs),
(337.333,-3,o),
(347,-9,o),
(355,-9,cs),
(369.667,-9,o),
(375.333,5.333,o),
(378,16,cs),
(408.191,121.669,o),
(445.75,261.5,o),
(487,399,cs),
(509,477,o),
(532.667,558.333,o),
(558,643,c),
(559.719,632.688,o),
(580.673,550.567,o),
(620.5,401.5,cs),
(654.257,275.152,o),
(692.635,132.077,o),
(734,-15,cs),
(742,-41.667,o),
(754.333,-47,o),
(765,-47,cs)
);
},
{
closed = 1;
nodes = (
(613.333,875,o),
(616,878.667,o),
(616,886,cs),
(616,910.697,o),
(540.988,972,o),
(521,972,cs),
(510.333,972,o),
(502,968.667,o),
(502,950,cs),
(502,928.367,o),
(591.689,875,o),
(608,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
121 101 59 3 7 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 0 1 0 106 0 1 9 1 106 0 11 3 2 3 11 2 104 0 6 7 6 107 0 3 5 4 2 2 7 3 2 91 10 1 8 8 9 83 0 9 9 12 67 0 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 0 1 0 106 0 1 9 1 106 0 11 3 4 3 11 4 104 0 4 2 2 4 94 0 6 7 6 107 0 3 5 1 2 7 3 2 91 10 1 8 8 9 83 0 9 9 14 67 0 7 7 24 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
112 110 92 91 87 84 81 79 70 68 43 19 35 52 55 37 34 12 22
CALL[ ]	/* CallFunction */";
};
width = 1109;
}
);
note = Wgrave;
unicode = 7808;
},
{
glyphname = X;
kernLeft = X;
kernRight = X;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(211,749.077,o),
(282,729.207,o),
(282,772,cs),
(282,790.667,o),
(275,799,o),
(251,799,cs),
(52,799,ls),
(21.333,799,o),
(1,790.667,o),
(1,772,cs),
(1,746.667,o),
(15.333,740.667,o),
(50,738,cs),
(80.667,735.333,o),
(108.333,730.333,o),
(119,709,cs),
(273,412,l),
(122,104,ls),
(108.667,77.333,o),
(95,73.667,o),
(71,67,cs),
(61.844,64.711,o),
(34.02,57,o),
(18,57,c),
(0.667,54.333,o),
(-21,48,o),
(-21,24,cs),
(-21,4,o),
(-7.667,0,o),
(11,0,cs),
(247,0,ls),
(273.667,0,o),
(283,7,o),
(283,27,cs),
(283,49.667,o),
(270.667,55.333,o),
(248,58,cs),
(236,59.333,o),
(225.667,61,o),
(217,63,cs),
(208.333,65,o),
(204,68.667,o),
(204,74,cs),
(204,85.369,o),
(228.526,139.244,o),
(260.5,206.5,cs),
(294.028,277.024,o),
(317,322.145,o),
(317,324,c),
(343,274,o),
(366.667,228.333,o),
(388,187,cs),
(434.945,93.109,o),
(459,44.005,o),
(459,34,cs),
(459,17.048,o),
(395,32.554,o),
(395,-10,cs),
(395,-23.333,o),
(402,-37,o),
(426,-37,cs),
(678,-37,ls),
(706,-37,o),
(722,-31.333,o),
(722,-10,cs),
(722,12.667,o),
(706.667,24,o),
(676,24,cs),
(602.667,24,o),
(560.667,31,o),
(546,59,cs),
(359,414,l),
(519,720,ls),
(531,742.667,o),
(538.667,755.333,o),
(568,758,cs),
(573.333,758.667,o),
(583.5,759,o),
(598.5,759,cs),
(613.5,759,o),
(628,760.667,o),
(642,764,cs),
(656.667,766.667,o),
(679,775.333,o),
(679,794,cs),
(679,815.333,o),
(669.667,821,o),
(639,821,cs),
(408,821,ls),
(372,821,o),
(361,815.667,o),
(361,793,cs),
(361,773,o),
(376.333,765.667,o),
(399,763,cs),
(423.667,759,o),
(436,750.333,o),
(436,737,cs),
(436,715.197,o),
(356.745,590.97,o),
(315,504,c),
(295.667,540.667,o),
(278.333,574.333,o),
(263,605,cs),
(229.067,669.473,o),
(211,716.624,o),
(211,722,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
91 59 34 7 4 5 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 5 1 2 1 5 2 104 0 6 6 14 67 0 1 1 0 83 0 0 0 12 67 0 4 4 13 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 5 1 2 1 5 2 104 0 2 0 3 2 3 87 0 6 6 14 67 0 1 1 0 83 0 0 0 12 67 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 5 1 2 1 5 2 104 0 2 0 3 2 3 87 0 1 1 0 83 0 0 0 12 67 0 6 6 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 5 1 2 1 5 2 104 0 2 0 3 2 3 87 0 1 1 0 83 0 0 0 14 67 0 6 6 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
103 100 83 82 77 74 45 42 39 37 29 28 22 19 7 15
CALL[ ]	/* CallFunction */";
};
width = 689;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(203,760.121,o),
(295,740.187,o),
(295,777,cs),
(295,794.333,o),
(288,799,o),
(264,799,cs),
(41,799,ls),
(17.667,799,o),
(6,791.667,o),
(6,777,cs),
(6,757,o),
(23.333,753,o),
(42,753,cs),
(88.667,753,o),
(118.667,745,o),
(132,721,cs),
(289,414,l),
(129,89,l),
(115.667,66.333,o),
(108,53.667,o),
(80,51,cs),
(80.86,51,o),
(41.477,45,o),
(14,45,cs),
(0.667,45,o),
(-16,38.667,o),
(-16,24,cs),
(-16,5.333,o),
(5,0,o),
(17,0,cs),
(261,0,ls),
(287.667,0,o),
(295,9,o),
(295,25,cs),
(295,43.667,o),
(279.667,47.667,o),
(261,49,cs),
(230.595,51.764,o),
(196,46.535,o),
(196,65,cs),
(196,71.958,o),
(217.966,119.566,o),
(260.5,208.5,cs),
(298.325,287.589,o),
(325,338.278,o),
(325,341,c),
(355,285,o),
(381.667,234.333,o),
(405,189,cs),
(413.071,173.397,o),
(486,35.408,o),
(486,22,cs),
(486,5.251,o),
(419,19.19,o),
(419,-15,cs),
(419,-31,o),
(426,-37,o),
(450,-37,cs),
(677,-37,ls),
(699.667,-37,o),
(717,-32.333,o),
(717,-15,cs),
(717,3.667,o),
(701.333,9,o),
(676,9,cs),
(612,9,o),
(567.667,14.333,o),
(553,41,cs),
(358,414,l),
(525,732,ls),
(537,754.667,o),
(544.667,767.333,o),
(574,770,cs),
(579.333,770.667,o),
(589.333,771.333,o),
(604,772,cs),
(618.667,772.667,o),
(633,774,o),
(647,776,cs),
(661.667,778.667,o),
(677,784.333,o),
(677,799,cs),
(677,817.667,o),
(662.667,821,o),
(644,821,cs),
(421,821,ls),
(394.333,821,o),
(387,814,o),
(387,798,cs),
(387,779.333,o),
(402.333,772,o),
(421,772,cs),
(435.667,772,o),
(445.5,771.333,o),
(450.5,770,cs),
(455.5,768.667,o),
(458,764,o),
(458,756,cs),
(458,748.582,o),
(434.133,696.184,o),
(402.5,637,cs),
(368.711,573.782,o),
(337.263,515.315,o),
(324,485,c),
(300.667,527.667,o),
(280.333,566.667,o),
(263,602,cs),
(223.519,680.962,o),
(203,724.691,o),
(203,734,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
97 63 37 7 4 5 9 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
2 1 0 0 1 83 0 1 1 12 67 0 9 9 10 83 0 10 10 14 67 8 7 2 5 5 6 83 0 6 6 13 67 0 3 3 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 0 4 3 4 87 2 1 0 0 1 83 0 1 1 12 67 0 9 9 10 83 0 10 10 14 67 8 7 2 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 10 0 9 5 10 9 91 0 3 0 4 3 4 87 2 1 0 0 1 83 0 1 1 12 67 8 7 2 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 7 5 3 5 7 96 0 10 0 9 5 10 9 91 0 3 0 4 3 4 87 2 1 0 0 1 83 0 1 1 14 67 8 1 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
108 105 102 100 93 92 89 87 83 80 74 73 49 46 42 40 32 31 25 22 18 16 11 15
CALL[ ]	/* CallFunction */";
};
width = 685;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(675,-37,ls),
(698.333,-37,o),
(710,-32.333,o),
(710,-23,cs),
(710,-11,o),
(692.667,-11,o),
(674,-11,cs),
(610,-11,o),
(574.333,-4.333,o),
(561,21,cs),
(356,414,l),
(534,752,ls),
(546,774.667,o),
(553.667,787.333,o),
(583,790,cs),
(593.667,791.333,o),
(626,794.667,o),
(654,796,cs),
(667.333,796,o),
(674,799.667,o),
(674,807,cs),
(674,817.667,o),
(663,821,o),
(651,821,cs),
(426,821,ls),
(412.667,821,o),
(403.667,819.333,o),
(399,816,cs),
(394.333,812.667,o),
(392,809.333,o),
(392,806,cs),
(392,791.333,o),
(412.667,792,o),
(426,792,cs),
(451.333,792,o),
(469.5,791.333,o),
(480.5,790,cs),
(491.5,788.667,o),
(497,784,o),
(497,776,cs),
(497,767.941,o),
(473.619,718.435,o),
(428,632,cs),
(387.87,555.965,o),
(347.524,478.054,o),
(337,454,c),
(309.667,506,o),
(285.333,553.333,o),
(264,596,cs),
(230.722,660.179,o),
(192,743.956,o),
(192,754,cs),
(192,780.527,o),
(288,760.069,o),
(288,785,cs),
(288,790.333,o),
(285.833,794,o),
(281.5,796,cs),
(277.167,798,o),
(269,799,o),
(257,799,cs),
(40,799,ls),
(16.667,799,o),
(5,794.333,o),
(5,785,cs),
(5,773,o),
(22.333,773,o),
(41,773,cs),
(105,773,o),
(137.667,767.667,o),
(151,741,cs),
(316,412,l),
(148,69,ls),
(136,46.333,o),
(128.333,33.667,o),
(99,31,cs),
(100.152,31,o),
(47.218,25,o),
(8,25,cs),
(-5.333,25,o),
(-12,21.333,o),
(-12,14,cs),
(-12,3.333,o),
(-1,0,o),
(11,0,cs),
(256,0,ls),
(269.333,0,o),
(278.333,1.667,o),
(283,5,cs),
(287.667,8.333,o),
(290,11.667,o),
(290,15,cs),
(290,29.667,o),
(269.333,29,o),
(256,29,cs),
(235.985,29,o),
(185,26.126,o),
(185,45,cs),
(185,50.309,o),
(217.216,123.243,o),
(261,213,cs),
(308.072,309.499,o),
(337,369.667,o),
(337,370,c),
(371.667,304.667,o),
(402.667,246,o),
(430,194,cs),
(464.958,129.909,o),
(524,12.502,o),
(524,2,cs),
(524,-14.614,o),
(427,0.621,o),
(427,-23,cs),
(427,-28.333,o),
(429.167,-32,o),
(433.5,-34,cs),
(437.833,-36,o),
(446,-37,o),
(458,-37,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
94 61 36 7 4 6 10 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
2 1 0 0 1 83 0 1 1 12 67 12 1 10 10 11 83 0 11 11 14 67 9 8 2 6 6 7 83 0 7 7 13 67 5 1 3 3 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
5 1 3 0 4 3 4 87 2 1 0 0 1 83 0 1 1 12 67 12 1 10 10 11 83 0 11 11 14 67 9 8 2 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 11 12 1 10 6 11 10 91 5 1 3 0 4 3 4 87 2 1 0 0 1 83 0 1 1 12 67 9 8 2 6 6 7 83 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 11 12 1 10 6 11 10 91 5 1 3 0 4 3 4 87 2 1 0 0 1 83 0 1 1 14 67 9 8 2 6 6 7 83 0 7 7 13 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
110 109 105 102 99 97 90 89 87 84 81 78 74 71 52 51 47 44 41 39 30 28 25 22 18 16 13 15
CALL[ ]	/* CallFunction */";
};
width = 679;
}
);
note = X;
unicode = 88;
},
{
glyphname = Y;
kernLeft = Y;
kernRight = Y;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(209,761.824,o),
(281,742.223,o),
(281,783,cs),
(281,799,o),
(266,813,o),
(242,813,cs),
(14,813,ls),
(-8.667,813,o),
(-32,804.333,o),
(-32,783,cs),
(-32,760.333,o),
(-7,751.667,o),
(17,749,cs),
(50.333,745.667,o),
(73.5,741.333,o),
(86.5,736,cs),
(99.5,730.667,o),
(108.667,722.667,o),
(114,712,cs),
(152.667,640,o),
(176.167,594.5,o),
(199.5,544.5,cs),
(220.438,499.633,o),
(252.759,427.013,o),
(289,350,c),
(289,109,ls),
(289,75.667,o),
(263.667,67,o),
(229,63,cs),
(191.667,59,o),
(181,48.667,o),
(181,30,cs),
(181,3.333,o),
(197.667,0,o),
(235,0,cs),
(459,0,ls),
(481.667,0,o),
(497,4.333,o),
(497,31,cs),
(497,57.667,o),
(471.333,63,o),
(446,63,cs),
(380,63,l),
(380,117.667,o),
(379.333,184.333,o),
(378,239,cs),
(377.333,271,o),
(377,302.667,o),
(377,334,c),
(415.449,421.151,o),
(487.181,559.563,o),
(547,674,cs),
(561.667,700.667,o),
(569.333,705.333,o),
(596,712,cs),
(604.444,714.111,o),
(667.723,718,o),
(682,718,cs),
(695.333,718,o),
(719,722.333,o),
(719,745,cs),
(719,771.667,o),
(703,775,o),
(679,775,cs),
(439,775,ls),
(405.667,775,o),
(397,766.667,o),
(397,744,cs),
(397,721.333,o),
(412.333,714,o),
(439,714,cs),
(447,714,o),
(459,712.667,o),
(459,698,cs),
(459,663.589,o),
(377.888,509.443,o),
(339,440,c),
(314.747,488.506,o),
(304.946,512.413,o),
(263,600.5,cs),
(226.758,676.608,o),
(209,720.224,o),
(209,731,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
64 41 7 3 4 0 1 66 0 1 3 2 2 0 4 1 0 91 0 6 6 14 67 0 4 4 5 84 0 5 5 13 5 68 80 77 52 47 17 36 52 46 7 21
CALL[ ]	/* CallFunction */";
};
width = 668;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(188,775.993,o),
(270,753.006,o),
(270,789,cs),
(270,803.667,o),
(258,813,o),
(234,813,cs),
(6,813,ls),
(-17.333,813,o),
(-29,805,o),
(-29,789,cs),
(-29,770.333,o),
(-11.667,767,o),
(7,767,cs),
(52.333,767,o),
(97,759,o),
(109,735,cs),
(141.937,664.185,o),
(173.115,605.771,o),
(199,554,cs),
(223.443,505.114,o),
(252.752,444.643,o),
(293,355,c),
(293,94,ls),
(293,49.566,o),
(259.498,48,o),
(239,48,cs),
(213,48,o),
(200,40.667,o),
(200,26,cs),
(200,4.667,o),
(221.667,0,o),
(251,0,cs),
(461,0,ls),
(474.333,0,o),
(486,5.333,o),
(486,28,cs),
(486,48,o),
(465.667,51,o),
(451,51,cs),
(365,51,l),
(365,107,o),
(364.333,177.667,o),
(363,235,cs),
(362.333,268.333,o),
(362,301.333,o),
(362,334,c),
(402.278,425.296,o),
(482.939,580.66,o),
(540,687,cs),
(552,709.667,o),
(559.667,722.333,o),
(589,725,cs),
(587.761,725,o),
(638.27,731,o),
(677,731,cs),
(690.333,731,o),
(707,736,o),
(707,752,cs),
(707,776,o),
(686,776,o),
(674,776,cs),
(432,776,ls),
(401.333,776,o),
(393,767,o),
(393,751,cs),
(393,732.333,o),
(410.667,727,o),
(432,727,cs),
(449.333,727,o),
(473,727,o),
(473,711,cs),
(473,693.41,o),
(442.386,634.873,o),
(412,576,cs),
(379.111,512.277,o),
(346.303,453.91,o),
(336,423,c),
(322.682,453.442,o),
(289.994,518.813,o),
(251.5,598,cs),
(209.626,684.14,o),
(188,732.248,o),
(188,743,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
67 43 7 3 4 0 1 66 0 1 3 2 2 0 4 1 0 91 0 7 7 8 83 0 8 8 14 67 6 1 4 4 5 83 0 5 5 13 5 68 84 81 78 76 63 60 57 54 50 48 35 34 31 29 25 22 18 16 9 15
CALL[ ]	/* CallFunction */";
};
width = 660;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(450,0,ls),
(463.333,0,o),
(470,4.333,o),
(470,13,cs),
(470,23.667,o),
(454.667,31,o),
(440,31,cs),
(344,31,l),
(344,91,o),
(343.333,166.667,o),
(342,228,cs),
(341.333,264,o),
(341,299.333,o),
(341,334,c),
(384.355,432.271,o),
(477.329,609.84,o),
(530,708,cs),
(542,730.667,o),
(549.667,743.333,o),
(579,746,cs),
(577.848,746,o),
(630.782,752,o),
(670,752,cs),
(683.333,752,o),
(690,755.667,o),
(690,763,cs),
(690,773.667,o),
(679,777,o),
(667,777,cs),
(422,777,ls),
(408.667,777,o),
(399.667,775.333,o),
(395,772,cs),
(390.333,768.667,o),
(388,765.333,o),
(388,762,cs),
(388,747.333,o),
(408.667,748,o),
(422,748,cs),
(442.015,748,o),
(493,750.874,o),
(493,732,cs),
(493,714.16,o),
(461.777,653.217,o),
(419.5,573,cs),
(371.841,482.57,o),
(336.364,418.41,o),
(327,395,c),
(314.239,429.028,o),
(274.013,507.872,o),
(233,594,cs),
(190.285,683.701,o),
(158,752.121,o),
(158,763,cs),
(158,795.488,o),
(254,774.276,o),
(254,799,cs),
(254,804.333,o),
(251.833,808,o),
(247.5,810,cs),
(243.167,812,o),
(235,813,o),
(223,813,cs),
(5,813,ls),
(-18.333,813,o),
(-30,808.333,o),
(-30,799,cs),
(-30,787,o),
(-12.667,787,o),
(6,787,cs),
(70,787,o),
(94.333,780.333,o),
(109,755,cs),
(154.333,671,o),
(181.5,620.667,o),
(207.5,566,cs),
(230.877,516.848,o),
(264.43,438.109,o),
(302,355,c),
(302,74,ls),
(302,30.297,o),
(262.22,28,o),
(229,28,cs),
(217,28,o),
(200,25,o),
(200,13,cs),
(200,2.333,o),
(222.333,0,o),
(241,0,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
68 44 7 3 4 0 1 66 0 1 3 2 2 0 4 1 0 91 9 1 7 7 8 83 0 8 8 14 67 6 1 4 4 5 83 0 5 5 13 5 68 88 87 83 80 77 75 64 61 57 54 51 49 36 35 32 30 27 24 20 17 10 15
CALL[ ]	/* CallFunction */";
};
width = 648;
}
);
note = Y;
unicode = 89;
},
{
glyphname = Yacute;
kernLeft = Y;
kernRight = Y;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(472,953.667,o),
(457.667,972,o),
(431,972,cs),
(393.395,972,o),
(318,898.577,o),
(318,871,cs),
(318,855,o),
(333,840,o),
(353,840,cs),
(387.448,840,o),
(472,897.455,o),
(472,935,cs)
);
},
{
closed = 1;
nodes = (
(209,761.824,o),
(281,742.223,o),
(281,783,cs),
(281,799,o),
(266,813,o),
(242,813,cs),
(14,813,ls),
(-8.667,813,o),
(-32,804.333,o),
(-32,783,cs),
(-32,760.333,o),
(-7,751.667,o),
(17,749,cs),
(50.333,745.667,o),
(73.5,741.333,o),
(86.5,736,cs),
(99.5,730.667,o),
(108.667,722.667,o),
(114,712,cs),
(152.667,640,o),
(176.167,594.5,o),
(199.5,544.5,cs),
(220.438,499.633,o),
(252.759,427.013,o),
(289,350,c),
(289,109,ls),
(289,75.667,o),
(263.667,67,o),
(229,63,cs),
(191.667,59,o),
(181,48.667,o),
(181,30,cs),
(181,3.333,o),
(197.667,0,o),
(235,0,cs),
(459,0,ls),
(481.667,0,o),
(497,4.333,o),
(497,31,cs),
(497,57.667,o),
(471.333,63,o),
(446,63,cs),
(380,63,l),
(380,117.667,o),
(379.333,184.333,o),
(378,239,cs),
(377.333,271,o),
(377,302.667,o),
(377,334,c),
(415.449,421.151,o),
(487.181,559.563,o),
(547,674,cs),
(561.667,700.667,o),
(569.333,705.333,o),
(596,712,cs),
(604.444,714.111,o),
(667.723,718,o),
(682,718,cs),
(695.333,718,o),
(719,722.333,o),
(719,745,cs),
(719,771.667,o),
(703,775,o),
(679,775,cs),
(439,775,ls),
(405.667,775,o),
(397,766.667,o),
(397,744,cs),
(397,721.333,o),
(412.333,714,o),
(439,714,cs),
(447,714,o),
(459,712.667,o),
(459,698,cs),
(459,663.589,o),
(377.888,509.443,o),
(339,440,c),
(314.747,488.506,o),
(304.946,512.413,o),
(263,600.5,cs),
(226.758,676.608,o),
(209,720.224,o),
(209,731,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
80 57 23 3 6 2 1 66 0 1 0 1 106 0 0 8 0 106 0 3 5 4 2 2 6 3 2 92 0 8 8 14 67 0 6 6 7 84 0 7 7 13 7 68 96 93 71 68 64 62 47 46 45 43 39 36 32 30 38 36 9 17
CALL[ ]	/* CallFunction */";
};
width = 668;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(407,959.667,o),
(395,972,o),
(375,972,cs),
(345.753,972,o),
(269,903.873,o),
(269,877,cs),
(269,863.667,o),
(278.333,854,o),
(293,854,cs),
(319.12,854,o),
(407,908.21,o),
(407,941,cs)
);
},
{
closed = 1;
nodes = (
(188,775.993,o),
(270,753.006,o),
(270,789,cs),
(270,803.667,o),
(258,813,o),
(234,813,cs),
(6,813,ls),
(-17.333,813,o),
(-29,805,o),
(-29,789,cs),
(-29,770.333,o),
(-11.667,767,o),
(7,767,cs),
(52.333,767,o),
(97,759,o),
(109,735,cs),
(141.937,664.185,o),
(173.115,605.771,o),
(199,554,cs),
(223.443,505.114,o),
(252.752,444.643,o),
(293,355,c),
(293,94,ls),
(293,49.566,o),
(259.498,48,o),
(239,48,cs),
(213,48,o),
(200,40.667,o),
(200,26,cs),
(200,4.667,o),
(221.667,0,o),
(251,0,cs),
(461,0,ls),
(474.333,0,o),
(486,5.333,o),
(486,28,cs),
(486,48,o),
(465.667,51,o),
(451,51,cs),
(365,51,l),
(365,107,o),
(364.333,177.667,o),
(363,235,cs),
(362.333,268.333,o),
(362,301.333,o),
(362,334,c),
(402.278,425.296,o),
(482.939,580.66,o),
(540,687,cs),
(552,709.667,o),
(559.667,722.333,o),
(589,725,cs),
(587.761,725,o),
(638.27,731,o),
(677,731,cs),
(690.333,731,o),
(707,736,o),
(707,752,cs),
(707,776,o),
(686,776,o),
(674,776,cs),
(432,776,ls),
(401.333,776,o),
(393,767,o),
(393,751,cs),
(393,732.333,o),
(410.667,727,o),
(432,727,cs),
(449.333,727,o),
(473,727,o),
(473,711,cs),
(473,693.41,o),
(442.386,634.873,o),
(412,576,cs),
(379.111,512.277,o),
(346.303,453.91,o),
(336,423,c),
(322.682,453.442,o),
(289.994,518.813,o),
(251.5,598,cs),
(209.626,684.14,o),
(188,732.248,o),
(188,743,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
83 59 23 3 6 2 1 66 0 1 0 1 106 0 0 10 0 106 0 3 5 4 2 2 6 3 2 91 0 9 9 10 83 0 10 10 14 67 8 1 6 6 7 84 0 7 7 13 7 68 100 97 94 92 79 76 73 70 66 64 51 50 47 45 41 38 34 32 38 36 11 17
CALL[ ]	/* CallFunction */";
};
width = 660;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(450,0,ls),
(463.333,0,o),
(470,4.333,o),
(470,13,cs),
(470,23.667,o),
(454.667,31,o),
(440,31,cs),
(344,31,l),
(344,91,o),
(343.333,166.667,o),
(342,228,cs),
(341.333,264,o),
(341,299.333,o),
(341,334,c),
(384.355,432.271,o),
(477.329,609.84,o),
(530,708,cs),
(542,730.667,o),
(549.667,743.333,o),
(579,746,cs),
(577.848,746,o),
(630.782,752,o),
(670,752,cs),
(683.333,752,o),
(690,755.667,o),
(690,763,cs),
(690,773.667,o),
(679,777,o),
(667,777,cs),
(422,777,ls),
(408.667,777,o),
(399.667,775.333,o),
(395,772,cs),
(390.333,768.667,o),
(388,765.333,o),
(388,762,cs),
(388,747.333,o),
(408.667,748,o),
(422,748,cs),
(442.015,748,o),
(493,750.874,o),
(493,732,cs),
(493,714.16,o),
(461.777,653.217,o),
(419.5,573,cs),
(371.841,482.57,o),
(336.364,418.41,o),
(327,395,c),
(314.239,429.028,o),
(274.013,507.872,o),
(233,594,cs),
(190.285,683.701,o),
(158,752.121,o),
(158,763,cs),
(158,795.488,o),
(254,774.276,o),
(254,799,cs),
(254,804.333,o),
(251.833,808,o),
(247.5,810,cs),
(243.167,812,o),
(235,813,o),
(223,813,cs),
(5,813,ls),
(-18.333,813,o),
(-30,808.333,o),
(-30,799,cs),
(-30,787,o),
(-12.667,787,o),
(6,787,cs),
(70,787,o),
(94.333,780.333,o),
(109,755,cs),
(154.333,671,o),
(181.5,620.667,o),
(207.5,566,cs),
(230.877,516.848,o),
(264.43,438.109,o),
(302,355,c),
(302,74,ls),
(302,30.297,o),
(262.22,28,o),
(229,28,cs),
(217,28,o),
(200,25,o),
(200,13,cs),
(200,2.333,o),
(222.333,0,o),
(241,0,cs)
);
},
{
closed = 1;
nodes = (
(297.198,875,o),
(385,927.619,o),
(385,949,cs),
(385,967.667,o),
(376.667,971,o),
(366,971,cs),
(346.338,971,o),
(271,909.981,o),
(271,886,cs),
(271,878.667,o),
(273.667,875,o),
(279,875,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
83 59 22 3 6 2 1 66 0 1 0 1 106 0 0 10 0 106 0 3 5 4 2 2 6 3 2 91 11 1 9 9 10 83 0 10 10 14 67 8 1 6 6 7 84 0 7 7 13 7 68 103 102 98 95 92 90 79 76 72 69 66 64 51 50 47 45 42 39 35 32 37 36 12 17
CALL[ ]	/* CallFunction */";
};
width = 648;
}
);
note = Yacute;
unicode = 221;
},
{
glyphname = Ycircumflex;
kernLeft = Y;
kernRight = Y;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(489.667,830,o),
(492,841.667,o),
(492,851,cs),
(492,891.866,o),
(382.605,972,o),
(359,972,cs),
(347.856,972,o),
(313.177,950.45,o),
(286,928,cs),
(255.333,902.667,o),
(227,870.667,o),
(227,844,cs),
(227,837.333,o),
(230.667,830,o),
(240,830,cs),
(256.991,830,o),
(318.967,854.096,o),
(359,880,c),
(417.555,842.111,o),
(473.41,830,o),
(479,830,cs)
);
},
{
closed = 1;
nodes = (
(209,761.824,o),
(281,742.223,o),
(281,783,cs),
(281,799,o),
(266,813,o),
(242,813,cs),
(14,813,ls),
(-8.667,813,o),
(-32,804.333,o),
(-32,783,cs),
(-32,760.333,o),
(-7,751.667,o),
(17,749,cs),
(50.333,745.667,o),
(73.5,741.333,o),
(86.5,736,cs),
(99.5,730.667,o),
(108.667,722.667,o),
(114,712,cs),
(152.667,640,o),
(176.167,594.5,o),
(199.5,544.5,cs),
(220.438,499.633,o),
(252.759,427.013,o),
(289,350,c),
(289,109,ls),
(289,75.667,o),
(263.667,67,o),
(229,63,cs),
(191.667,59,o),
(181,48.667,o),
(181,30,cs),
(181,3.333,o),
(197.667,0,o),
(235,0,cs),
(459,0,ls),
(481.667,0,o),
(497,4.333,o),
(497,31,cs),
(497,57.667,o),
(471.333,63,o),
(446,63,cs),
(380,63,l),
(380,117.667,o),
(379.333,184.333,o),
(378,239,cs),
(377.333,271,o),
(377,302.667,o),
(377,334,c),
(415.449,421.151,o),
(487.181,559.563,o),
(547,674,cs),
(561.667,700.667,o),
(569.333,705.333,o),
(596,712,cs),
(604.444,714.111,o),
(667.723,718,o),
(682,718,cs),
(695.333,718,o),
(719,722.333,o),
(719,745,cs),
(719,771.667,o),
(703,775,o),
(679,775,cs),
(439,775,ls),
(405.667,775,o),
(397,766.667,o),
(397,744,cs),
(397,721.333,o),
(412.333,714,o),
(439,714,cs),
(447,714,o),
(459,712.667,o),
(459,698,cs),
(459,663.589,o),
(377.888,509.443,o),
(339,440,c),
(314.747,488.506,o),
(304.946,512.413,o),
(263,600.5,cs),
(226.758,676.608,o),
(209,720.224,o),
(209,731,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
5 1 0 2 90 67 33 3 7 3 2 66 0 2 0 2 106 1 10 2 0 9 0 106 0 4 6 5 2 3 7 4 3 91 0 9 9 14 67 0 7 7 8 84 0 8 8 13 8 68 1 0 106 103 81 78 74 72 57 56 55 53 49 46 42 40 19 17 11 9 0 25 1 25 11 15
CALL[ ]	/* CallFunction */";
};
width = 668;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(474,847,o),
(477,854.667,o),
(477,864,cs),
(477,900.28,o),
(369.728,972,o),
(346,972,cs),
(324.04,972,o),
(216,901.46,o),
(216,860,cs),
(216,851.333,o),
(219.667,847,o),
(227,847,cs),
(244.679,847,o),
(306.008,874.475,o),
(346,898,c),
(409.994,860.357,o),
(457.663,847,o),
(466,847,cs)
);
},
{
closed = 1;
nodes = (
(188,775.993,o),
(270,753.006,o),
(270,789,cs),
(270,803.667,o),
(258,813,o),
(234,813,cs),
(6,813,ls),
(-17.333,813,o),
(-29,805,o),
(-29,789,cs),
(-29,770.333,o),
(-11.667,767,o),
(7,767,cs),
(52.333,767,o),
(97,759,o),
(109,735,cs),
(141.937,664.185,o),
(173.115,605.771,o),
(199,554,cs),
(223.443,505.114,o),
(252.752,444.643,o),
(293,355,c),
(293,94,ls),
(293,49.566,o),
(259.498,48,o),
(239,48,cs),
(213,48,o),
(200,40.667,o),
(200,26,cs),
(200,4.667,o),
(221.667,0,o),
(251,0,cs),
(461,0,ls),
(474.333,0,o),
(486,5.333,o),
(486,28,cs),
(486,48,o),
(465.667,51,o),
(451,51,cs),
(365,51,l),
(365,107,o),
(364.333,177.667,o),
(363,235,cs),
(362.333,268.333,o),
(362,301.333,o),
(362,334,c),
(402.278,425.296,o),
(482.939,580.66,o),
(540,687,cs),
(552,709.667,o),
(559.667,722.333,o),
(589,725,cs),
(587.761,725,o),
(638.27,731,o),
(677,731,cs),
(690.333,731,o),
(707,736,o),
(707,752,cs),
(707,776,o),
(686,776,o),
(674,776,cs),
(432,776,ls),
(401.333,776,o),
(393,767,o),
(393,751,cs),
(393,732.333,o),
(410.667,727,o),
(432,727,cs),
(449.333,727,o),
(473,727,o),
(473,711,cs),
(473,693.41,o),
(442.386,634.873,o),
(412,576,cs),
(379.111,512.277,o),
(346.303,453.91,o),
(336,423,c),
(322.682,453.442,o),
(289.994,518.813,o),
(251.5,598,cs),
(209.626,684.14,o),
(188,732.248,o),
(188,743,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
5 1 0 2 92 68 32 3 7 3 2 66 0 2 0 2 106 1 12 2 0 11 0 106 0 4 6 5 2 3 7 4 3 91 0 10 10 11 83 0 11 11 14 67 9 1 7 7 8 84 0 8 8 13 8 68 1 0 109 106 103 101 88 85 82 79 75 73 60 59 56 54 50 47 43 41 18 16 11 9 0 24 1 24 13 15
CALL[ ]	/* CallFunction */";
};
width = 660;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(450,0,ls),
(463.333,0,o),
(470,4.333,o),
(470,13,cs),
(470,23.667,o),
(454.667,31,o),
(440,31,cs),
(344,31,l),
(344,91,o),
(343.333,166.667,o),
(342,228,cs),
(341.333,264,o),
(341,299.333,o),
(341,334,c),
(384.355,432.271,o),
(477.329,609.84,o),
(530,708,cs),
(542,730.667,o),
(549.667,743.333,o),
(579,746,cs),
(577.848,746,o),
(630.782,752,o),
(670,752,cs),
(683.333,752,o),
(690,755.667,o),
(690,763,cs),
(690,773.667,o),
(679,777,o),
(667,777,cs),
(422,777,ls),
(408.667,777,o),
(399.667,775.333,o),
(395,772,cs),
(390.333,768.667,o),
(388,765.333,o),
(388,762,cs),
(388,747.333,o),
(408.667,748,o),
(422,748,cs),
(442.015,748,o),
(493,750.874,o),
(493,732,cs),
(493,714.16,o),
(461.777,653.217,o),
(419.5,573,cs),
(371.841,482.57,o),
(336.364,418.41,o),
(327,395,c),
(314.239,429.028,o),
(274.013,507.872,o),
(233,594,cs),
(190.285,683.701,o),
(158,752.121,o),
(158,763,cs),
(158,795.488,o),
(254,774.276,o),
(254,799,cs),
(254,804.333,o),
(251.833,808,o),
(247.5,810,cs),
(243.167,812,o),
(235,813,o),
(223,813,cs),
(5,813,ls),
(-18.333,813,o),
(-30,808.333,o),
(-30,799,cs),
(-30,787,o),
(-12.667,787,o),
(6,787,cs),
(70,787,o),
(94.333,780.333,o),
(109,755,cs),
(154.333,671,o),
(181.5,620.667,o),
(207.5,566,cs),
(230.877,516.848,o),
(264.43,438.109,o),
(302,355,c),
(302,74,ls),
(302,30.297,o),
(262.22,28,o),
(229,28,cs),
(217,28,o),
(200,25,o),
(200,13,cs),
(200,2.333,o),
(222.333,0,o),
(241,0,cs)
);
},
{
closed = 1;
nodes = (
(216.158,875,o),
(264.069,894.154,o),
(328,928,c),
(392.308,893.955,o),
(440.037,875,o),
(448,875,cs),
(453.333,875,o),
(456,878.667,o),
(456,886,cs),
(456,910.708,o),
(353.596,972,o),
(328,972,cs),
(304.629,972,o),
(201,910.79,o),
(201,886,cs),
(201,878.667,o),
(203.667,875,o),
(209,875,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 89 values pushed */
5 1 0 2 92 68 31 3 7 3 2 66 0 2 0 2 106 1 13 2 0 11 0 106 0 4 6 5 2 3 7 4 3 91 12 1 10 10 11 83 0 11 11 14 67 9 1 7 7 8 84 0 8 8 13 8 68 1 0 112 111 107 104 101 99 88 85 81 78 75 73 60 59 56 54 51 48 44 41 18 16 11 9 0 23 1 23 14 15
CALL[ ]	/* CallFunction */";
};
width = 648;
}
);
note = Ycircumflex;
unicode = 374;
},
{
glyphname = Ydieresis;
kernLeft = Y;
kernRight = Y;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(175,868.333,o),
(201.667,841,o),
(235,841,cs),
(266.371,841,o),
(301,855.733,o),
(301,911,cs),
(301,947,o),
(274,972,o),
(242,972,cs),
(194.823,972,o),
(175,930.29,o),
(175,907,cs)
);
},
{
closed = 1;
nodes = (
(382,857.333,o),
(408.667,830,o),
(442,830,cs),
(473.371,830,o),
(508,844.733,o),
(508,900,cs),
(508,937.333,o),
(481,961,o),
(449,961,cs),
(401.823,961,o),
(382,919.29,o),
(382,896,cs)
);
},
{
closed = 1;
nodes = (
(209,761.824,o),
(281,742.223,o),
(281,783,cs),
(281,799,o),
(266,813,o),
(242,813,cs),
(14,813,ls),
(-8.667,813,o),
(-32,804.333,o),
(-32,783,cs),
(-32,760.333,o),
(-7,751.667,o),
(17,749,cs),
(50.333,745.667,o),
(73.5,741.333,o),
(86.5,736,cs),
(99.5,730.667,o),
(108.667,722.667,o),
(114,712,cs),
(152.667,640,o),
(176.167,594.5,o),
(199.5,544.5,cs),
(220.438,499.633,o),
(252.759,427.013,o),
(289,350,c),
(289,109,ls),
(289,75.667,o),
(263.667,67,o),
(229,63,cs),
(191.667,59,o),
(181,48.667,o),
(181,30,cs),
(181,3.333,o),
(197.667,0,o),
(235,0,cs),
(459,0,ls),
(481.667,0,o),
(497,4.333,o),
(497,31,cs),
(497,57.667,o),
(471.333,63,o),
(446,63,cs),
(380,63,l),
(380,117.667,o),
(379.333,184.333,o),
(378,239,cs),
(377.333,271,o),
(377,302.667,o),
(377,334,c),
(415.449,421.151,o),
(487.181,559.563,o),
(547,674,cs),
(561.667,700.667,o),
(569.333,705.333,o),
(596,712,cs),
(604.444,714.111,o),
(667.723,718,o),
(682,718,cs),
(695.333,718,o),
(719,722.333,o),
(719,745,cs),
(719,771.667,o),
(703,775,o),
(679,775,cs),
(439,775,ls),
(405.667,775,o),
(397,766.667,o),
(397,744,cs),
(397,721.333,o),
(412.333,714,o),
(439,714,cs),
(447,714,o),
(459,712.667,o),
(459,698,cs),
(459,663.589,o),
(377.888,509.443,o),
(339,440,c),
(314.747,488.506,o),
(304.946,512.413,o),
(263,600.5,cs),
(226.758,676.608,o),
(209,720.224,o),
(209,731,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
96 73 39 3 8 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
2 1 0 3 1 1 10 0 1 91 0 5 7 6 2 4 8 5 4 91 0 10 10 14 67 0 8 8 9 84 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 10 2 3 91 0 5 7 6 2 4 8 5 4 91 0 10 10 14 67 0 8 8 9 84 0 9 9 13 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
112 109 87 84 80 78 63 62 61 59 55 52 48 46 38 38 38 36 11 19
CALL[ ]	/* CallFunction */";
};
width = 668;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(181,882.667,o),
(203.333,859,o),
(230,859,cs),
(255.333,859,o),
(286,872,o),
(286,920,cs),
(286,950.667,o),
(263.667,972,o),
(237,972,cs),
(198.685,972,o),
(181,936.643,o),
(181,916,cs)
);
},
{
closed = 1;
nodes = (
(388,870.667,o),
(410.333,847,o),
(437,847,cs),
(462.333,847,o),
(493,860,o),
(493,908,cs),
(493,938.667,o),
(470.667,960,o),
(444,960,cs),
(405.685,960,o),
(388,924.643,o),
(388,904,cs)
);
},
{
closed = 1;
nodes = (
(188,775.993,o),
(270,753.006,o),
(270,789,cs),
(270,803.667,o),
(258,813,o),
(234,813,cs),
(6,813,ls),
(-17.333,813,o),
(-29,805,o),
(-29,789,cs),
(-29,770.333,o),
(-11.667,767,o),
(7,767,cs),
(52.333,767,o),
(97,759,o),
(109,735,cs),
(141.937,664.185,o),
(173.115,605.771,o),
(199,554,cs),
(223.443,505.114,o),
(252.752,444.643,o),
(293,355,c),
(293,94,ls),
(293,49.566,o),
(259.498,48,o),
(239,48,cs),
(213,48,o),
(200,40.667,o),
(200,26,cs),
(200,4.667,o),
(221.667,0,o),
(251,0,cs),
(461,0,ls),
(474.333,0,o),
(486,5.333,o),
(486,28,cs),
(486,48,o),
(465.667,51,o),
(451,51,cs),
(365,51,l),
(365,107,o),
(364.333,177.667,o),
(363,235,cs),
(362.333,268.333,o),
(362,301.333,o),
(362,334,c),
(402.278,425.296,o),
(482.939,580.66,o),
(540,687,cs),
(552,709.667,o),
(559.667,722.333,o),
(589,725,cs),
(587.761,725,o),
(638.27,731,o),
(677,731,cs),
(690.333,731,o),
(707,736,o),
(707,752,cs),
(707,776,o),
(686,776,o),
(674,776,cs),
(432,776,ls),
(401.333,776,o),
(393,767,o),
(393,751,cs),
(393,732.333,o),
(410.667,727,o),
(432,727,cs),
(449.333,727,o),
(473,727,o),
(473,711,cs),
(473,693.41,o),
(442.386,634.873,o),
(412,576,cs),
(379.111,512.277,o),
(346.303,453.91,o),
(336,423,c),
(322.682,453.442,o),
(289.994,518.813,o),
(251.5,598,cs),
(209.626,684.14,o),
(188,732.248,o),
(188,743,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
95 71 35 3 8 4 1 66 0 0 0 1 3 0 1 91 0 2 0 3 12 2 3 91 0 5 7 6 2 4 8 5 4 91 0 11 11 12 83 0 12 12 14 67 10 1 8 8 9 83 0 9 9 13 9 68 112 109 106 104 91 88 85 82 78 76 63 62 59 57 53 50 46 44 36 38 36 36 13 19
CALL[ ]	/* CallFunction */";
};
width = 660;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(450,0,ls),
(463.333,0,o),
(470,4.333,o),
(470,13,cs),
(470,23.667,o),
(454.667,31,o),
(440,31,cs),
(344,31,l),
(344,91,o),
(343.333,166.667,o),
(342,228,cs),
(341.333,264,o),
(341,299.333,o),
(341,334,c),
(384.355,432.271,o),
(477.329,609.84,o),
(530,708,cs),
(542,730.667,o),
(549.667,743.333,o),
(579,746,cs),
(577.848,746,o),
(630.782,752,o),
(670,752,cs),
(683.333,752,o),
(690,755.667,o),
(690,763,cs),
(690,773.667,o),
(679,777,o),
(667,777,cs),
(422,777,ls),
(408.667,777,o),
(399.667,775.333,o),
(395,772,cs),
(390.333,768.667,o),
(388,765.333,o),
(388,762,cs),
(388,747.333,o),
(408.667,748,o),
(422,748,cs),
(442.015,748,o),
(493,750.874,o),
(493,732,cs),
(493,714.16,o),
(461.777,653.217,o),
(419.5,573,cs),
(371.841,482.57,o),
(336.364,418.41,o),
(327,395,c),
(314.239,429.028,o),
(274.013,507.872,o),
(233,594,cs),
(190.285,683.701,o),
(158,752.121,o),
(158,763,cs),
(158,795.488,o),
(254,774.276,o),
(254,799,cs),
(254,804.333,o),
(251.833,808,o),
(247.5,810,cs),
(243.167,812,o),
(235,813,o),
(223,813,cs),
(5,813,ls),
(-18.333,813,o),
(-30,808.333,o),
(-30,799,cs),
(-30,787,o),
(-12.667,787,o),
(6,787,cs),
(70,787,o),
(94.333,780.333,o),
(109,755,cs),
(154.333,671,o),
(181.5,620.667,o),
(207.5,566,cs),
(230.877,516.848,o),
(264.43,438.109,o),
(302,355,c),
(302,74,ls),
(302,30.297,o),
(262.22,28,o),
(229,28,cs),
(217,28,o),
(200,25,o),
(200,13,cs),
(200,2.333,o),
(222.333,0,o),
(241,0,cs)
);
},
{
closed = 1;
nodes = (
(241.667,889,o),
(264,899,o),
(264,935,cs),
(264,957.667,o),
(248.667,972,o),
(230,972,cs),
(202.258,972,o),
(189,944.895,o),
(189,931,cs),
(189,907,o),
(204.333,889,o),
(223,889,cs)
);
},
{
closed = 1;
nodes = (
(448.667,875,o),
(471,885,o),
(471,921,cs),
(471,943.667,o),
(455.667,958,o),
(437,958,cs),
(409.258,958,o),
(396,930.895,o),
(396,917,cs),
(396,893,o),
(411.333,875,o),
(430,875,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
96 72 35 3 8 4 1 66 0 0 0 1 3 0 1 91 0 2 0 3 12 2 3 91 0 5 7 6 2 4 8 5 4 91 13 1 11 11 12 83 0 12 12 14 67 10 1 8 8 9 83 0 9 9 13 9 68 116 115 111 108 105 103 92 89 85 82 79 77 64 63 60 58 55 52 48 45 36 38 36 36 14 19
CALL[ ]	/* CallFunction */";
};
width = 648;
}
);
note = Ydieresis;
unicode = 376;
},
{
glyphname = Ygrave;
kernLeft = Y;
kernRight = Y;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(267,896.665,o),
(353.564,841,o),
(387,841,cs),
(407,841,o),
(422,856,o),
(422,872,cs),
(422,897.591,o),
(348.088,972,o),
(308,972,cs),
(281.333,972,o),
(267,953.333,o),
(267,936,cs)
);
},
{
closed = 1;
nodes = (
(209,761.824,o),
(281,742.223,o),
(281,783,cs),
(281,799,o),
(266,813,o),
(242,813,cs),
(14,813,ls),
(-8.667,813,o),
(-32,804.333,o),
(-32,783,cs),
(-32,760.333,o),
(-7,751.667,o),
(17,749,cs),
(50.333,745.667,o),
(73.5,741.333,o),
(86.5,736,cs),
(99.5,730.667,o),
(108.667,722.667,o),
(114,712,cs),
(152.667,640,o),
(176.167,594.5,o),
(199.5,544.5,cs),
(220.438,499.633,o),
(252.759,427.013,o),
(289,350,c),
(289,109,ls),
(289,75.667,o),
(263.667,67,o),
(229,63,cs),
(191.667,59,o),
(181,48.667,o),
(181,30,cs),
(181,3.333,o),
(197.667,0,o),
(235,0,cs),
(459,0,ls),
(481.667,0,o),
(497,4.333,o),
(497,31,cs),
(497,57.667,o),
(471.333,63,o),
(446,63,cs),
(380,63,l),
(380,117.667,o),
(379.333,184.333,o),
(378,239,cs),
(377.333,271,o),
(377,302.667,o),
(377,334,c),
(415.449,421.151,o),
(487.181,559.563,o),
(547,674,cs),
(561.667,700.667,o),
(569.333,705.333,o),
(596,712,cs),
(604.444,714.111,o),
(667.723,718,o),
(682,718,cs),
(695.333,718,o),
(719,722.333,o),
(719,745,cs),
(719,771.667,o),
(703,775,o),
(679,775,cs),
(439,775,ls),
(405.667,775,o),
(397,766.667,o),
(397,744,cs),
(397,721.333,o),
(412.333,714,o),
(439,714,cs),
(447,714,o),
(459,712.667,o),
(459,698,cs),
(459,663.589,o),
(377.888,509.443,o),
(339,440,c),
(314.747,488.506,o),
(304.946,512.413,o),
(263,600.5,cs),
(226.758,676.608,o),
(209,720.224,o),
(209,731,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
80 57 23 3 6 2 1 66 0 0 1 0 106 0 1 8 1 106 0 3 5 4 2 2 6 3 2 91 0 8 8 14 67 0 6 6 7 84 0 7 7 13 7 68 96 93 71 68 64 62 47 46 45 43 39 36 32 30 38 34 9 17
CALL[ ]	/* CallFunction */";
};
width = 668;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(269,909.521,o),
(354.059,854,o),
(383,854,cs),
(397.667,854,o),
(407,863.667,o),
(407,877,cs),
(407,903.873,o),
(330.247,972,o),
(301,972,cs),
(281,972,o),
(269,959.667,o),
(269,941,cs)
);
},
{
closed = 1;
nodes = (
(188,775.993,o),
(270,753.006,o),
(270,789,cs),
(270,803.667,o),
(258,813,o),
(234,813,cs),
(6,813,ls),
(-17.333,813,o),
(-29,805,o),
(-29,789,cs),
(-29,770.333,o),
(-11.667,767,o),
(7,767,cs),
(52.333,767,o),
(97,759,o),
(109,735,cs),
(141.937,664.185,o),
(173.115,605.771,o),
(199,554,cs),
(223.443,505.114,o),
(252.752,444.643,o),
(293,355,c),
(293,94,ls),
(293,49.566,o),
(259.498,48,o),
(239,48,cs),
(213,48,o),
(200,40.667,o),
(200,26,cs),
(200,4.667,o),
(221.667,0,o),
(251,0,cs),
(461,0,ls),
(474.333,0,o),
(486,5.333,o),
(486,28,cs),
(486,48,o),
(465.667,51,o),
(451,51,cs),
(365,51,l),
(365,107,o),
(364.333,177.667,o),
(363,235,cs),
(362.333,268.333,o),
(362,301.333,o),
(362,334,c),
(402.278,425.296,o),
(482.939,580.66,o),
(540,687,cs),
(552,709.667,o),
(559.667,722.333,o),
(589,725,cs),
(587.761,725,o),
(638.27,731,o),
(677,731,cs),
(690.333,731,o),
(707,736,o),
(707,752,cs),
(707,776,o),
(686,776,o),
(674,776,cs),
(432,776,ls),
(401.333,776,o),
(393,767,o),
(393,751,cs),
(393,732.333,o),
(410.667,727,o),
(432,727,cs),
(449.333,727,o),
(473,727,o),
(473,711,cs),
(473,693.41,o),
(442.386,634.873,o),
(412,576,cs),
(379.111,512.277,o),
(346.303,453.91,o),
(336,423,c),
(322.682,453.442,o),
(289.994,518.813,o),
(251.5,598,cs),
(209.626,684.14,o),
(188,732.248,o),
(188,743,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
83 59 23 3 6 2 1 66 0 0 1 0 106 0 1 10 1 106 0 3 5 4 2 2 6 3 2 91 0 9 9 10 83 0 10 10 14 67 8 1 6 6 7 84 0 7 7 13 7 68 100 97 94 92 79 76 73 70 66 64 51 50 47 45 41 38 34 32 38 34 11 17
CALL[ ]	/* CallFunction */";
};
width = 660;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(450,0,ls),
(463.333,0,o),
(470,4.333,o),
(470,13,cs),
(470,23.667,o),
(454.667,31,o),
(440,31,cs),
(344,31,l),
(344,91,o),
(343.333,166.667,o),
(342,228,cs),
(341.333,264,o),
(341,299.333,o),
(341,334,c),
(384.355,432.271,o),
(477.329,609.84,o),
(530,708,cs),
(542,730.667,o),
(549.667,743.333,o),
(579,746,cs),
(577.848,746,o),
(630.782,752,o),
(670,752,cs),
(683.333,752,o),
(690,755.667,o),
(690,763,cs),
(690,773.667,o),
(679,777,o),
(667,777,cs),
(422,777,ls),
(408.667,777,o),
(399.667,775.333,o),
(395,772,cs),
(390.333,768.667,o),
(388,765.333,o),
(388,762,cs),
(388,747.333,o),
(408.667,748,o),
(422,748,cs),
(442.015,748,o),
(493,750.874,o),
(493,732,cs),
(493,714.16,o),
(461.777,653.217,o),
(419.5,573,cs),
(371.841,482.57,o),
(336.364,418.41,o),
(327,395,c),
(314.239,429.028,o),
(274.013,507.872,o),
(233,594,cs),
(190.285,683.701,o),
(158,752.121,o),
(158,763,cs),
(158,795.488,o),
(254,774.276,o),
(254,799,cs),
(254,804.333,o),
(251.833,808,o),
(247.5,810,cs),
(243.167,812,o),
(235,813,o),
(223,813,cs),
(5,813,ls),
(-18.333,813,o),
(-30,808.333,o),
(-30,799,cs),
(-30,787,o),
(-12.667,787,o),
(6,787,cs),
(70,787,o),
(94.333,780.333,o),
(109,755,cs),
(154.333,671,o),
(181.5,620.667,o),
(207.5,566,cs),
(230.877,516.848,o),
(264.43,438.109,o),
(302,355,c),
(302,74,ls),
(302,30.297,o),
(262.22,28,o),
(229,28,cs),
(217,28,o),
(200,25,o),
(200,13,cs),
(200,2.333,o),
(222.333,0,o),
(241,0,cs)
);
},
{
closed = 1;
nodes = (
(383.333,875,o),
(386,878.667,o),
(386,886,cs),
(386,910.697,o),
(310.988,972,o),
(291,972,cs),
(280.333,972,o),
(272,968.667,o),
(272,950,cs),
(272,928.367,o),
(361.689,875,o),
(378,875,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
83 59 22 3 6 2 1 66 0 0 1 0 106 0 1 10 1 106 0 3 5 4 2 2 6 3 2 91 11 1 9 9 10 83 0 10 10 14 67 8 1 6 6 7 84 0 7 7 13 7 68 103 102 98 95 92 90 79 76 72 69 66 64 51 50 47 45 42 39 35 32 37 34 12 17
CALL[ ]	/* CallFunction */";
};
width = 648;
}
);
note = Ygrave;
unicode = 7922;
},
{
glyphname = Ytilde;
kernLeft = Y;
kernRight = Y;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(209,761.824,o),
(281,742.223,o),
(281,783,cs),
(281,799,o),
(266,813,o),
(242,813,cs),
(14,813,ls),
(-8.667,813,o),
(-32,804.333,o),
(-32,783,cs),
(-32,760.333,o),
(-7,751.667,o),
(17,749,cs),
(50.333,745.667,o),
(73.5,741.333,o),
(86.5,736,cs),
(99.5,730.667,o),
(108.667,722.667,o),
(114,712,cs),
(152.667,640,o),
(176.167,594.5,o),
(199.5,544.5,cs),
(220.438,499.633,o),
(252.759,427.013,o),
(289,350,c),
(289,109,ls),
(289,75.667,o),
(263.667,67,o),
(229,63,cs),
(191.667,59,o),
(181,48.667,o),
(181,30,cs),
(181,3.333,o),
(197.667,0,o),
(235,0,cs),
(459,0,ls),
(481.667,0,o),
(497,4.333,o),
(497,31,cs),
(497,57.667,o),
(471.333,63,o),
(446,63,cs),
(380,63,l),
(380,117.667,o),
(379.333,184.333,o),
(378,239,cs),
(377.333,271,o),
(377,302.667,o),
(377,334,c),
(415.449,421.151,o),
(487.181,559.563,o),
(547,674,cs),
(561.667,700.667,o),
(569.333,705.333,o),
(596,712,cs),
(604.444,714.111,o),
(667.723,718,o),
(682,718,cs),
(695.333,718,o),
(719,722.333,o),
(719,745,cs),
(719,771.667,o),
(703,775,o),
(679,775,cs),
(439,775,ls),
(405.667,775,o),
(397,766.667,o),
(397,744,cs),
(397,721.333,o),
(412.333,714,o),
(439,714,cs),
(447,714,o),
(459,712.667,o),
(459,698,cs),
(459,663.589,o),
(377.888,509.443,o),
(339,440,c),
(314.747,488.506,o),
(304.946,512.413,o),
(263,600.5,cs),
(226.758,676.608,o),
(209,720.224,o),
(209,731,cs)
);
},
{
closed = 1;
nodes = (
(175,877,o),
(182,861,o),
(194,861,cs),
(214.593,861,o),
(238.709,886,o),
(278,886,cs),
(316.662,886,o),
(359.294,862,o),
(415,862,cs),
(447.676,862,o),
(526,879.584,o),
(526,937,cs),
(526,958.333,o),
(510.667,972,o),
(504,972,cs),
(499.333,972,o),
(489.333,967.667,o),
(474,959,cs),
(455.333,948.333,o),
(432.667,942,o),
(414,942,cs),
(374.599,942,o),
(313.495,970,o),
(277,970,cs),
(252.333,970,o),
(229.667,964,o),
(209,952,cs),
(190.333,941.333,o),
(175,926.333,o),
(175,897,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
64 41 7 3 4 0 1 66 9 1 7 0 11 10 7 11 91 0 8 12 1 10 6 8 10 91 0 1 3 2 2 0 4 1 0 91 0 6 6 14 67 0 4 4 5 84 0 5 5 13 5 68 121 119 116 114 111 109 103 101 98 96 93 91 80 77 52 47 17 36 52 46 13 21
CALL[ ]	/* CallFunction */";
};
width = 668;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(188,775.993,o),
(270,753.006,o),
(270,789,cs),
(270,803.667,o),
(258,813,o),
(234,813,cs),
(6,813,ls),
(-17.333,813,o),
(-29,805,o),
(-29,789,cs),
(-29,770.333,o),
(-11.667,767,o),
(7,767,cs),
(52.333,767,o),
(97,759,o),
(109,735,cs),
(141.937,664.185,o),
(173.115,605.771,o),
(199,554,cs),
(223.443,505.114,o),
(252.752,444.643,o),
(293,355,c),
(293,94,ls),
(293,49.566,o),
(259.498,48,o),
(239,48,cs),
(213,48,o),
(200,40.667,o),
(200,26,cs),
(200,4.667,o),
(221.667,0,o),
(251,0,cs),
(461,0,ls),
(474.333,0,o),
(486,5.333,o),
(486,28,cs),
(486,48,o),
(465.667,51,o),
(451,51,cs),
(365,51,l),
(365,107,o),
(364.333,177.667,o),
(363,235,cs),
(362.333,268.333,o),
(362,301.333,o),
(362,334,c),
(402.278,425.296,o),
(482.939,580.66,o),
(540,687,cs),
(552,709.667,o),
(559.667,722.333,o),
(589,725,cs),
(587.761,725,o),
(638.27,731,o),
(677,731,cs),
(690.333,731,o),
(707,736,o),
(707,752,cs),
(707,776,o),
(686,776,o),
(674,776,cs),
(432,776,ls),
(401.333,776,o),
(393,767,o),
(393,751,cs),
(393,732.333,o),
(410.667,727,o),
(432,727,cs),
(449.333,727,o),
(473,727,o),
(473,711,cs),
(473,693.41,o),
(442.386,634.873,o),
(412,576,cs),
(379.111,512.277,o),
(346.303,453.91,o),
(336,423,c),
(322.682,453.442,o),
(289.994,518.813,o),
(251.5,598,cs),
(209.626,684.14,o),
(188,732.248,o),
(188,743,cs)
);
},
{
closed = 1;
nodes = (
(164,919,o),
(163,913,o),
(163,907,cs),
(163,892,o),
(169,879,o),
(180,879,cs),
(197,879,o),
(224,904,o),
(264,904,cs),
(303,904,o),
(345,880,o),
(401,880,cs),
(457,880,o),
(490,902,o),
(503,925,cs),
(506,931,o),
(508,937,o),
(508,944,cs),
(508,960,o),
(497,972,o),
(490,972,cs),
(487,972,o),
(483,971,o),
(480,970,cs),
(476,968,o),
(469,964,o),
(460,959,cs),
(437,948,o),
(417,942,o),
(400,942,cs),
(361,942,o),
(299,970,o),
(263,970,cs),
(238,970,o),
(216,964,o),
(195,952,cs),
(185,946,o),
(178,941,o),
(174,936,cs),
(170,931,o),
(167,927,o),
(166,924,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 90 values pushed */
68 44 8 3 4 0 1 66 11 1 9 0 13 12 9 13 91 0 10 14 1 12 8 10 12 91 0 1 3 2 2 0 4 1 0 91 0 7 7 8 83 0 8 8 14 67 6 1 4 4 5 83 0 5 5 13 5 68 126 124 121 119 116 114 108 106 103 101 98 96 85 82 79 77 64 61 58 55 51 49 36 35 32 30 26 23 19 17 15 26
CALL[ ]	/* CallFunction */";
};
width = 660;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(450,0,ls),
(463.333,0,o),
(470,4.333,o),
(470,13,cs),
(470,23.667,o),
(454.667,31,o),
(440,31,cs),
(344,31,l),
(344,91,o),
(343.333,166.667,o),
(342,228,cs),
(341.333,264,o),
(341,299.333,o),
(341,334,c),
(384.355,432.271,o),
(477.329,609.84,o),
(530,708,cs),
(542,730.667,o),
(549.667,743.333,o),
(579,746,cs),
(577.848,746,o),
(630.782,752,o),
(670,752,cs),
(683.333,752,o),
(690,755.667,o),
(690,763,cs),
(690,773.667,o),
(679,777,o),
(667,777,cs),
(422,777,ls),
(408.667,777,o),
(399.667,775.333,o),
(395,772,cs),
(390.333,768.667,o),
(388,765.333,o),
(388,762,cs),
(388,747.333,o),
(408.667,748,o),
(422,748,cs),
(442.015,748,o),
(493,750.874,o),
(493,732,cs),
(493,714.16,o),
(461.777,653.217,o),
(419.5,573,cs),
(371.841,482.57,o),
(336.364,418.41,o),
(327,395,c),
(314.239,429.028,o),
(274.013,507.872,o),
(233,594,cs),
(190.285,683.701,o),
(158,752.121,o),
(158,763,cs),
(158,795.488,o),
(254,774.276,o),
(254,799,cs),
(254,804.333,o),
(251.833,808,o),
(247.5,810,cs),
(243.167,812,o),
(235,813,o),
(223,813,cs),
(5,813,ls),
(-18.333,813,o),
(-30,808.333,o),
(-30,799,cs),
(-30,787,o),
(-12.667,787,o),
(6,787,cs),
(70,787,o),
(94.333,780.333,o),
(109,755,cs),
(154.333,671,o),
(181.5,620.667,o),
(207.5,566,cs),
(230.877,516.848,o),
(264.43,438.109,o),
(302,355,c),
(302,74,ls),
(302,30.297,o),
(262.22,28,o),
(229,28,cs),
(217,28,o),
(200,25,o),
(200,13,cs),
(200,2.333,o),
(222.333,0,o),
(241,0,cs)
);
},
{
closed = 1;
nodes = (
(189.791,888,o),
(216.735,913,o),
(258,913,cs),
(296.662,913,o),
(339.294,889,o),
(395,889,cs),
(447.947,889,o),
(497,908.797,o),
(497,934,cs),
(497,943.333,o),
(490.667,951,o),
(484,951,cs),
(480.667,951,o),
(477.167,950.167,o),
(473.5,948.5,cs),
(469.833,946.833,o),
(463.333,943.333,o),
(454,938,cs),
(431.333,926.667,o),
(411.333,921,o),
(394,921,cs),
(354.599,921,o),
(293.495,949,o),
(257,949,cs),
(232.333,949,o),
(209.667,943,o),
(189,931,cs),
(169.667,919.667,o),
(160,910.333,o),
(160,903,cs),
(160,896.333,o),
(167.333,888,o),
(174,888,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 93 values pushed */
68 44 7 3 4 0 1 66 12 1 10 0 14 13 10 14 91 0 11 15 1 13 8 11 13 91 0 1 3 2 2 0 4 1 0 91 9 1 7 7 8 83 0 8 8 14 67 6 1 4 4 5 83 0 5 5 13 5 68 123 121 118 116 113 111 105 103 100 98 95 93 88 87 83 80 77 75 64 61 57 54 51 49 36 35 32 30 27 24 20 17 16 15
CALL[ ]	/* CallFunction */";
};
width = 648;
}
);
note = Ytilde;
unicode = 7928;
},
{
glyphname = Z;
kernLeft = Z;
kernRight = Z;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(621,295.667,o),
(613,317,o),
(581,317,cs),
(542.414,317,o),
(539,287.167,o),
(539,268,cs),
(539,245.707,o),
(533.459,150.441,o),
(529,117,cs),
(526.333,91.667,o),
(511.667,83,o),
(469,83,cs),
(187,83,ls),
(179,83,o),
(173.667,83.667,o),
(171,85,cs),
(168.333,86.333,o),
(167,89,o),
(167,93,cs),
(167,97.379,o),
(221.125,182.029,o),
(330.5,351.5,cs),
(428.589,503.484,o),
(511.106,632.099,o),
(577,738,c),
(577.465,739.396,o),
(611,794.49,o),
(611,807,cs),
(611,819,o),
(603.667,821,o),
(589,821,cs),
(518.123,821,o),
(438.969,819,o),
(357,819,cs),
(323,819,o),
(289.167,819.333,o),
(255.5,820,cs),
(221.833,820.667,o),
(188,821,o),
(154,821,cs),
(61.229,821,o),
(49,814.062,o),
(49,780,cs),
(49,764.667,o),
(49.167,749.667,o),
(49.5,735,cs),
(49.833,720.333,o),
(50,705.333,o),
(50,690,cs),
(50,674.667,o),
(49.833,660.833,o),
(49.5,648.5,cs),
(49.167,636.167,o),
(49,622.333,o),
(49,607,cs),
(49,586.312,o),
(58.168,555,o),
(95,555,cs),
(125.667,555,o),
(132,576.667,o),
(132,626,cs),
(132,650.673,o),
(133,665.854,o),
(133,694,cs),
(133,726,o),
(136.333,737,o),
(175,737,cs),
(419,737,ls),
(458.442,737,o),
(467,736.835,o),
(467,721,cs),
(467,709.718,o),
(400.269,602.522,o),
(266.5,401,cs),
(142.235,213.796,o),
(42.595,67.564,o),
(38,61,cs),
(30.667,49.667,o),
(25.667,41.167,o),
(23,35.5,cs),
(20.333,29.833,o),
(19,24.333,o),
(19,19,cs),
(19,11,o),
(22.5,5.833,o),
(29.5,3.5,cs),
(36.5,1.167,o),
(50.667,0,o),
(72,0,cs),
(161.98,0,o),
(253.02,1,o),
(343,1,cs),
(381.667,1,o),
(420.333,0.833,o),
(459,0.5,cs),
(497.667,0.167,o),
(536.333,0,o),
(575,0,cs),
(604.333,0,o),
(611,5.667,o),
(611,31,cs),
(611,66.202,o),
(613.036,78.018,o),
(616,162.5,cs),
(618.026,220.237,o),
(621,257.034,o),
(621,273,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 1 1 3 83 0 3 3 12 67 0 4 4 0 84 0 0 0 13 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 1 1 3 83 0 3 3 14 67 0 4 4 0 84 0 0 0 13 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
107 105 94 91 75 65 51 49 40 36 169 6 16
CALL[ ]	/* CallFunction */";
};
width = 659;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(605,303.667,o),
(595.333,319,o),
(574,319,cs),
(546,319,o),
(539,296,o),
(539,276,cs),
(539,247.05,o),
(529.832,131.574,o),
(526,99,cs),
(520.866,65.628,o),
(500.904,65,o),
(466,65,cs),
(154,65,ls),
(146,65,o),
(140.667,65.667,o),
(138,67,cs),
(135.333,68.333,o),
(134,71,o),
(134,75,cs),
(134,81.972,o),
(227.655,222.949,o),
(304.5,341,cs),
(383.327,462.096,o),
(470.701,592.502,o),
(558,738,c),
(554.743,728.229,o),
(594,782.234,o),
(594,802,cs),
(594,820.667,o),
(568.667,821,o),
(542,821,cs),
(508,821,o),
(474,820.667,o),
(440,820,cs),
(406,819.333,o),
(372,819,o),
(338,819,cs),
(304,819,o),
(270.167,819.333,o),
(236.5,820,cs),
(202.833,820.667,o),
(169,821,o),
(135,821,cs),
(65.238,821,o),
(51,820.413,o),
(51,780,cs),
(51,764.667,o),
(51.167,749.667,o),
(51.5,735,cs),
(51.833,720.333,o),
(52,705.333,o),
(52,690,cs),
(52,674.667,o),
(51.833,659.833,o),
(51.5,645.5,cs),
(51.167,631.167,o),
(51,616.333,o),
(51,601,cs),
(51,581,o),
(56.333,555,o),
(87,555,cs),
(98.333,555,o),
(106.333,559.667,o),
(111,569,cs),
(115.667,578.333,o),
(118,595.333,o),
(118,620,cs),
(118,661.623,o),
(119,662.86,o),
(119,712,cs),
(119,744,o),
(122.333,755,o),
(161,755,cs),
(423,755,ls),
(463.148,755,o),
(471,754.958,o),
(471,739,cs),
(471,727.971,o),
(403.23,612.404,o),
(270.5,409,cs),
(194.116,291.944,o),
(115.332,179.378,o),
(40,61,cs),
(23.51,35.087,o),
(19,35.713,o),
(19,19,cs),
(19,11,o),
(25.167,5.833,o),
(37.5,3.5,cs),
(49.833,1.167,o),
(68.333,0,o),
(93,0,cs),
(131.667,0,o),
(170.167,0.167,o),
(208.5,0.5,cs),
(246.833,0.833,o),
(285.333,1,o),
(324,1,cs),
(362.667,1,o),
(401.333,0.833,o),
(440,0.5,cs),
(478.667,0.167,o),
(517.333,0,o),
(556,0,cs),
(582.667,0,o),
(592,0.333,o),
(592,31,cs),
(592,46.002,o),
(595.096,99.548,o),
(598.5,166.5,cs),
(602.293,241.094,o),
(605,279.231,o),
(605,281,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 1 1 3 83 0 3 3 12 67 0 4 4 0 84 0 0 0 13 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 1 1 3 83 0 3 3 14 67 0 4 4 0 84 0 0 0 13 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
105 103 93 89 71 62 51 49 40 36 137 6 16
CALL[ ]	/* CallFunction */";
};
width = 642;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(104.667,0,o),
(143.167,0.167,o),
(181.5,0.5,cs),
(219.833,0.833,o),
(258.333,1,o),
(297,1,cs),
(335.667,1,o),
(374.333,0.833,o),
(413,0.5,cs),
(451.667,0.167,o),
(490.333,0,o),
(529,0,cs),
(555.667,0,o),
(565,0.333,o),
(565,31,cs),
(565,46.002,o),
(568.096,99.548,o),
(571.5,166.5,cs),
(575.293,241.094,o),
(578,279.231,o),
(578,281,cs),
(578,292.333,o),
(576,299.833,o),
(572,303.5,cs),
(568,307.167,o),
(564.333,309,o),
(561,309,cs),
(550.333,309,o),
(542,296,o),
(542,276,cs),
(542,241.927,o),
(532.9,108.002,o),
(529,69,cs),
(526.476,36.192,o),
(504.249,35,o),
(469,35,cs),
(107,35,ls),
(99,35,o),
(93.667,35.667,o),
(91,37,cs),
(88.333,38.333,o),
(87,41,o),
(87,45,cs),
(87,50.714,o),
(185.046,197.124,o),
(267.5,322.5,cs),
(365.755,471.901,o),
(475.072,642.124,o),
(531,738,c),
(527.743,728.229,o),
(567,782.234,o),
(567,802,cs),
(567,820.667,o),
(541.667,821,o),
(515,821,cs),
(481,821,o),
(447,820.667,o),
(413,820,cs),
(379,819.333,o),
(345,819,o),
(311,819,cs),
(277,819,o),
(243.167,819.333,o),
(209.5,820,cs),
(175.833,820.667,o),
(142,821,o),
(108,821,cs),
(60.971,821,o),
(54,820.224,o),
(54,780,cs),
(54,764.667,o),
(54.167,749.667,o),
(54.5,735,cs),
(54.833,720.333,o),
(55,705.333,o),
(55,690,cs),
(55,674.667,o),
(54.833,659.833,o),
(54.5,645.5,cs),
(54.167,631.167,o),
(54,616.333,o),
(54,601,cs),
(54,581,o),
(57.333,565,o),
(72,565,cs),
(79.333,565,o),
(84.333,568,o),
(87,574,cs),
(89.667,580,o),
(91,595.333,o),
(91,620,cs),
(91,659.08,o),
(92,708.447,o),
(92,742,cs),
(92,774,o),
(95.333,785,o),
(134,785,cs),
(454,785,ls),
(494.148,785,o),
(502,784.958,o),
(502,769,cs),
(502,753.207,o),
(431.114,642.928,o),
(287,425,cs),
(232.333,342.333,o),
(176.167,258.667,o),
(131.5,192,cs),
(82.107,118.279,o),
(51.948,75.061,o),
(43,61,cs),
(26.51,35.087,o),
(22,35.713,o),
(22,19,cs),
(22,11,o),
(25.667,5.833,o),
(33,3.5,cs),
(40.333,1.167,o),
(51.333,0,o),
(66,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 1 1 3 83 0 3 3 12 67 0 4 4 0 83 0 0 0 13 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 1 1 3 83 0 3 3 14 67 0 4 4 0 83 0 0 0 13 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
105 103 93 89 71 62 51 49 40 36 137 6 16
CALL[ ]	/* CallFunction */";
};
width = 618;
}
);
note = Z;
unicode = 90;
},
{
glyphname = Zacute;
kernLeft = Z;
kernRight = Z;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(428,953.333,o),
(413.667,972,o),
(387,972,cs),
(349.323,972,o),
(273,899.498,o),
(273,872,cs),
(273,856,o),
(288,841,o),
(308,841,cs),
(341.436,841,o),
(428,896.665,o),
(428,936,cs)
);
},
{
closed = 1;
nodes = (
(621,295.667,o),
(613,317,o),
(581,317,cs),
(542.414,317,o),
(539,287.167,o),
(539,268,cs),
(539,245.707,o),
(533.459,150.441,o),
(529,117,cs),
(526.333,91.667,o),
(511.667,83,o),
(469,83,cs),
(187,83,ls),
(179,83,o),
(173.667,83.667,o),
(171,85,cs),
(168.333,86.333,o),
(167,89,o),
(167,93,cs),
(167,97.379,o),
(221.125,182.029,o),
(330.5,351.5,cs),
(428.589,503.484,o),
(511.106,632.099,o),
(577,738,c),
(577.465,739.396,o),
(611,794.49,o),
(611,807,cs),
(611,819,o),
(603.667,821,o),
(589,821,cs),
(518.123,821,o),
(438.969,819,o),
(357,819,cs),
(323,819,o),
(289.167,819.333,o),
(255.5,820,cs),
(221.833,820.667,o),
(188,821,o),
(154,821,cs),
(61.229,821,o),
(49,814.062,o),
(49,780,cs),
(49,764.667,o),
(49.167,749.667,o),
(49.5,735,cs),
(49.833,720.333,o),
(50,705.333,o),
(50,690,cs),
(50,674.667,o),
(49.833,660.833,o),
(49.5,648.5,cs),
(49.167,636.167,o),
(49,622.333,o),
(49,607,cs),
(49,586.312,o),
(58.168,555,o),
(95,555,cs),
(125.667,555,o),
(132,576.667,o),
(132,626,cs),
(132,650.673,o),
(133,665.854,o),
(133,694,cs),
(133,726,o),
(136.333,737,o),
(175,737,cs),
(419,737,ls),
(458.442,737,o),
(467,736.835,o),
(467,721,cs),
(467,709.718,o),
(400.269,602.522,o),
(266.5,401,cs),
(142.235,213.796,o),
(42.595,67.564,o),
(38,61,cs),
(30.667,49.667,o),
(25.667,41.167,o),
(23,35.5,cs),
(20.333,29.833,o),
(19,24.333,o),
(19,19,cs),
(19,11,o),
(22.5,5.833,o),
(29.5,3.5,cs),
(36.5,1.167,o),
(50.667,0,o),
(72,0,cs),
(161.98,0,o),
(253.02,1,o),
(343,1,cs),
(381.667,1,o),
(420.333,0.833,o),
(459,0.5,cs),
(497.667,0.167,o),
(536.333,0,o),
(575,0,cs),
(604.333,0,o),
(611,5.667,o),
(611,31,cs),
(611,66.202,o),
(613.036,78.018,o),
(616,162.5,cs),
(618.026,220.237,o),
(621,257.034,o),
(621,273,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 1 106 0 0 5 0 106 0 4 3 7 3 4 7 104 0 7 6 3 7 6 102 0 3 3 5 83 0 5 5 12 67 0 6 6 2 84 0 2 2 13 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 1 106 0 0 5 0 106 0 4 3 7 3 4 7 104 0 7 6 3 7 6 102 0 3 3 5 83 0 5 5 14 67 0 6 6 2 84 0 2 2 13 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
123 121 110 107 91 81 67 65 56 52 171 38 36 8 18
CALL[ ]	/* CallFunction */";
};
width = 659;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(400,959.667,o),
(388,972,o),
(368,972,cs),
(338.753,972,o),
(262,903.873,o),
(262,877,cs),
(262,863.667,o),
(271.333,854,o),
(286,854,cs),
(312.12,854,o),
(400,908.21,o),
(400,941,cs)
);
},
{
closed = 1;
nodes = (
(605,303.667,o),
(595.333,319,o),
(574,319,cs),
(546,319,o),
(539,296,o),
(539,276,cs),
(539,247.05,o),
(529.832,131.574,o),
(526,99,cs),
(520.866,65.628,o),
(500.904,65,o),
(466,65,cs),
(154,65,ls),
(146,65,o),
(140.667,65.667,o),
(138,67,cs),
(135.333,68.333,o),
(134,71,o),
(134,75,cs),
(134,81.972,o),
(227.655,222.949,o),
(304.5,341,cs),
(383.327,462.096,o),
(470.701,592.502,o),
(558,738,c),
(554.743,728.229,o),
(594,782.234,o),
(594,802,cs),
(594,820.667,o),
(568.667,821,o),
(542,821,cs),
(508,821,o),
(474,820.667,o),
(440,820,cs),
(406,819.333,o),
(372,819,o),
(338,819,cs),
(304,819,o),
(270.167,819.333,o),
(236.5,820,cs),
(202.833,820.667,o),
(169,821,o),
(135,821,cs),
(65.238,821,o),
(51,820.413,o),
(51,780,cs),
(51,764.667,o),
(51.167,749.667,o),
(51.5,735,cs),
(51.833,720.333,o),
(52,705.333,o),
(52,690,cs),
(52,674.667,o),
(51.833,659.833,o),
(51.5,645.5,cs),
(51.167,631.167,o),
(51,616.333,o),
(51,601,cs),
(51,581,o),
(56.333,555,o),
(87,555,cs),
(98.333,555,o),
(106.333,559.667,o),
(111,569,cs),
(115.667,578.333,o),
(118,595.333,o),
(118,620,cs),
(118,661.623,o),
(119,662.86,o),
(119,712,cs),
(119,744,o),
(122.333,755,o),
(161,755,cs),
(423,755,ls),
(463.148,755,o),
(471,754.958,o),
(471,739,cs),
(471,727.971,o),
(403.23,612.404,o),
(270.5,409,cs),
(194.116,291.944,o),
(115.332,179.378,o),
(40,61,cs),
(23.51,35.087,o),
(19,35.713,o),
(19,19,cs),
(19,11,o),
(25.167,5.833,o),
(37.5,3.5,cs),
(49.833,1.167,o),
(68.333,0,o),
(93,0,cs),
(131.667,0,o),
(170.167,0.167,o),
(208.5,0.5,cs),
(246.833,0.833,o),
(285.333,1,o),
(324,1,cs),
(362.667,1,o),
(401.333,0.833,o),
(440,0.5,cs),
(478.667,0.167,o),
(517.333,0,o),
(556,0,cs),
(582.667,0,o),
(592,0.333,o),
(592,31,cs),
(592,46.002,o),
(595.096,99.548,o),
(598.5,166.5,cs),
(602.293,241.094,o),
(605,279.231,o),
(605,281,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 1 106 0 0 5 0 106 0 4 3 7 3 4 7 104 0 7 6 3 7 6 102 0 3 3 5 83 0 5 5 12 67 0 6 6 2 84 0 2 2 13 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 1 106 0 0 5 0 106 0 4 3 7 3 4 7 104 0 7 6 3 7 6 102 0 3 3 5 83 0 5 5 14 67 0 6 6 2 84 0 2 2 13 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
121 119 109 105 87 78 67 65 56 52 139 38 36 8 18
CALL[ ]	/* CallFunction */";
};
width = 642;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(104.667,0,o),
(143.167,0.167,o),
(181.5,0.5,cs),
(219.833,0.833,o),
(258.333,1,o),
(297,1,cs),
(335.667,1,o),
(374.333,0.833,o),
(413,0.5,cs),
(451.667,0.167,o),
(490.333,0,o),
(529,0,cs),
(555.667,0,o),
(565,0.333,o),
(565,31,cs),
(565,46.002,o),
(568.096,99.548,o),
(571.5,166.5,cs),
(575.293,241.094,o),
(578,279.231,o),
(578,281,cs),
(578,292.333,o),
(576,299.833,o),
(572,303.5,cs),
(568,307.167,o),
(564.333,309,o),
(561,309,cs),
(550.333,309,o),
(542,296,o),
(542,276,cs),
(542,241.927,o),
(532.9,108.002,o),
(529,69,cs),
(526.476,36.192,o),
(504.249,35,o),
(469,35,cs),
(107,35,ls),
(99,35,o),
(93.667,35.667,o),
(91,37,cs),
(88.333,38.333,o),
(87,41,o),
(87,45,cs),
(87,50.714,o),
(185.046,197.124,o),
(267.5,322.5,cs),
(365.755,471.901,o),
(475.072,642.124,o),
(531,738,c),
(527.743,728.229,o),
(567,782.234,o),
(567,802,cs),
(567,820.667,o),
(541.667,821,o),
(515,821,cs),
(481,821,o),
(447,820.667,o),
(413,820,cs),
(379,819.333,o),
(345,819,o),
(311,819,cs),
(277,819,o),
(243.167,819.333,o),
(209.5,820,cs),
(175.833,820.667,o),
(142,821,o),
(108,821,cs),
(60.971,821,o),
(54,820.224,o),
(54,780,cs),
(54,764.667,o),
(54.167,749.667,o),
(54.5,735,cs),
(54.833,720.333,o),
(55,705.333,o),
(55,690,cs),
(55,674.667,o),
(54.833,659.833,o),
(54.5,645.5,cs),
(54.167,631.167,o),
(54,616.333,o),
(54,601,cs),
(54,581,o),
(57.333,565,o),
(72,565,cs),
(79.333,565,o),
(84.333,568,o),
(87,574,cs),
(89.667,580,o),
(91,595.333,o),
(91,620,cs),
(91,659.08,o),
(92,708.447,o),
(92,742,cs),
(92,774,o),
(95.333,785,o),
(134,785,cs),
(454,785,ls),
(494.148,785,o),
(502,784.958,o),
(502,769,cs),
(502,753.207,o),
(431.114,642.928,o),
(287,425,cs),
(232.333,342.333,o),
(176.167,258.667,o),
(131.5,192,cs),
(82.107,118.279,o),
(51.948,75.061,o),
(43,61,cs),
(26.51,35.087,o),
(22,35.713,o),
(22,19,cs),
(22,11,o),
(25.667,5.833,o),
(33,3.5,cs),
(40.333,1.167,o),
(51.333,0,o),
(66,0,cs)
);
},
{
closed = 1;
nodes = (
(270.311,875,o),
(360,928.367,o),
(360,950,cs),
(360,968.667,o),
(351.667,972,o),
(341,972,cs),
(321.012,972,o),
(246,910.697,o),
(246,886,cs),
(246,878.667,o),
(248.667,875,o),
(254,875,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 1 106 0 0 5 0 106 0 4 3 7 3 4 7 104 0 7 6 3 7 6 102 0 3 3 5 83 0 5 5 12 67 0 6 6 2 83 0 2 2 13 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 1 106 0 0 5 0 106 0 4 3 7 3 4 7 104 0 7 6 3 7 6 102 0 3 3 5 83 0 5 5 14 67 0 6 6 2 83 0 2 2 13 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
120 118 108 104 86 77 66 64 55 51 139 37 36 8 18
CALL[ ]	/* CallFunction */";
};
width = 618;
}
);
note = Zacute;
unicode = 377;
},
{
glyphname = Zcaron;
kernLeft = Z;
kernRight = Z;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(455.41,972,o),
(399.555,959.889,o),
(341,922,c),
(300.967,947.904,o),
(238.991,972,o),
(222,972,cs),
(212.667,972,o),
(209,964.667,o),
(209,958,cs),
(209,931.333,o),
(237.333,900.5,o),
(268,874.5,cs),
(295.066,851.553,o),
(329.906,830,o),
(341,830,cs),
(364.27,830,o),
(474,908.718,o),
(474,951,cs),
(474,960.333,o),
(471.667,972,o),
(461,972,cs)
);
},
{
closed = 1;
nodes = (
(621,295.667,o),
(613,317,o),
(581,317,cs),
(542.414,317,o),
(539,287.167,o),
(539,268,cs),
(539,245.707,o),
(533.459,150.441,o),
(529,117,cs),
(526.333,91.667,o),
(511.667,83,o),
(469,83,cs),
(187,83,ls),
(179,83,o),
(173.667,83.667,o),
(171,85,cs),
(168.333,86.333,o),
(167,89,o),
(167,93,cs),
(167,97.379,o),
(221.125,182.029,o),
(330.5,351.5,cs),
(428.589,503.484,o),
(511.106,632.099,o),
(577,738,c),
(577.465,739.396,o),
(611,794.49,o),
(611,807,cs),
(611,819,o),
(603.667,821,o),
(589,821,cs),
(518.123,821,o),
(438.969,819,o),
(357,819,cs),
(323,819,o),
(289.167,819.333,o),
(255.5,820,cs),
(221.833,820.667,o),
(188,821,o),
(154,821,cs),
(61.229,821,o),
(49,814.062,o),
(49,780,cs),
(49,764.667,o),
(49.167,749.667,o),
(49.5,735,cs),
(49.833,720.333,o),
(50,705.333,o),
(50,690,cs),
(50,674.667,o),
(49.833,660.833,o),
(49.5,648.5,cs),
(49.167,636.167,o),
(49,622.333,o),
(49,607,cs),
(49,586.312,o),
(58.168,555,o),
(95,555,cs),
(125.667,555,o),
(132,576.667,o),
(132,626,cs),
(132,650.673,o),
(133,665.854,o),
(133,694,cs),
(133,726,o),
(136.333,737,o),
(175,737,cs),
(419,737,ls),
(458.442,737,o),
(467,736.835,o),
(467,721,cs),
(467,709.718,o),
(400.269,602.522,o),
(266.5,401,cs),
(142.235,213.796,o),
(42.595,67.564,o),
(38,61,cs),
(30.667,49.667,o),
(25.667,41.167,o),
(23,35.5,cs),
(20.333,29.833,o),
(19,24.333,o),
(19,19,cs),
(19,11,o),
(22.5,5.833,o),
(29.5,3.5,cs),
(36.5,1.167,o),
(50.667,0,o),
(72,0,cs),
(161.98,0,o),
(253.02,1,o),
(343,1,cs),
(381.667,1,o),
(420.333,0.833,o),
(459,0.5,cs),
(497.667,0.167,o),
(536.333,0,o),
(575,0,cs),
(604.333,0,o),
(611,5.667,o),
(611,31,cs),
(611,66.202,o),
(613.036,78.018,o),
(616,162.5,cs),
(618.026,220.237,o),
(621,257.034,o),
(621,273,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
2 9 2 0 1 0 106 0 1 6 1 106 0 5 4 8 4 5 8 104 0 8 7 4 8 7 102 0 4 4 6 83 0 6 6 12 67 0 7 7 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
2 9 2 0 1 0 106 0 1 6 1 106 0 5 4 8 4 5 8 104 0 8 7 4 8 7 102 0 4 4 6 83 0 6 6 14 67 0 7 7 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
1 0 133 131 120 117 101 91 77 75 66 62 45 35 17 15 9 7 0 25 1 25 10 15
CALL[ ]	/* CallFunction */";
};
width = 659;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(435.663,972,o),
(387.994,958.643,o),
(324,921,c),
(284.008,944.525,o),
(222.679,972,o),
(205,972,cs),
(197.667,972,o),
(194,967.667,o),
(194,959,cs),
(194,917.54,o),
(302.04,847,o),
(324,847,cs),
(349.107,847,o),
(455,919.046,o),
(455,955,cs),
(455,964.333,o),
(452,972,o),
(444,972,cs)
);
},
{
closed = 1;
nodes = (
(605,303.667,o),
(595.333,319,o),
(574,319,cs),
(546,319,o),
(539,296,o),
(539,276,cs),
(539,247.05,o),
(529.832,131.574,o),
(526,99,cs),
(520.866,65.628,o),
(500.904,65,o),
(466,65,cs),
(154,65,ls),
(146,65,o),
(140.667,65.667,o),
(138,67,cs),
(135.333,68.333,o),
(134,71,o),
(134,75,cs),
(134,81.972,o),
(227.655,222.949,o),
(304.5,341,cs),
(383.327,462.096,o),
(470.701,592.502,o),
(558,738,c),
(554.743,728.229,o),
(594,782.234,o),
(594,802,cs),
(594,820.667,o),
(568.667,821,o),
(542,821,cs),
(508,821,o),
(474,820.667,o),
(440,820,cs),
(406,819.333,o),
(372,819,o),
(338,819,cs),
(304,819,o),
(270.167,819.333,o),
(236.5,820,cs),
(202.833,820.667,o),
(169,821,o),
(135,821,cs),
(65.238,821,o),
(51,820.413,o),
(51,780,cs),
(51,764.667,o),
(51.167,749.667,o),
(51.5,735,cs),
(51.833,720.333,o),
(52,705.333,o),
(52,690,cs),
(52,674.667,o),
(51.833,659.833,o),
(51.5,645.5,cs),
(51.167,631.167,o),
(51,616.333,o),
(51,601,cs),
(51,581,o),
(56.333,555,o),
(87,555,cs),
(98.333,555,o),
(106.333,559.667,o),
(111,569,cs),
(115.667,578.333,o),
(118,595.333,o),
(118,620,cs),
(118,661.623,o),
(119,662.86,o),
(119,712,cs),
(119,744,o),
(122.333,755,o),
(161,755,cs),
(423,755,ls),
(463.148,755,o),
(471,754.958,o),
(471,739,cs),
(471,727.971,o),
(403.23,612.404,o),
(270.5,409,cs),
(194.116,291.944,o),
(115.332,179.378,o),
(40,61,cs),
(23.51,35.087,o),
(19,35.713,o),
(19,19,cs),
(19,11,o),
(25.167,5.833,o),
(37.5,3.5,cs),
(49.833,1.167,o),
(68.333,0,o),
(93,0,cs),
(131.667,0,o),
(170.167,0.167,o),
(208.5,0.5,cs),
(246.833,0.833,o),
(285.333,1,o),
(324,1,cs),
(362.667,1,o),
(401.333,0.833,o),
(440,0.5,cs),
(478.667,0.167,o),
(517.333,0,o),
(556,0,cs),
(582.667,0,o),
(592,0.333,o),
(592,31,cs),
(592,46.002,o),
(595.096,99.548,o),
(598.5,166.5,cs),
(602.293,241.094,o),
(605,279.231,o),
(605,281,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
2 9 2 0 1 0 106 0 1 6 1 106 0 5 4 8 4 5 8 104 0 8 7 4 8 7 102 0 4 4 6 83 0 6 6 12 67 0 7 7 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
2 9 2 0 1 0 106 0 1 6 1 106 0 5 4 8 4 5 8 104 0 8 7 4 8 7 102 0 4 4 6 83 0 6 6 14 67 0 7 7 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
1 0 130 128 118 114 96 87 76 74 65 61 42 34 16 14 9 7 0 24 1 24 10 15
CALL[ ]	/* CallFunction */";
};
width = 642;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(104.667,0,o),
(143.167,0.167,o),
(181.5,0.5,cs),
(219.833,0.833,o),
(258.333,1,o),
(297,1,cs),
(335.667,1,o),
(374.333,0.833,o),
(413,0.5,cs),
(451.667,0.167,o),
(490.333,0,o),
(529,0,cs),
(555.667,0,o),
(565,0.333,o),
(565,31,cs),
(565,46.002,o),
(568.096,99.548,o),
(571.5,166.5,cs),
(575.293,241.094,o),
(578,279.231,o),
(578,281,cs),
(578,292.333,o),
(576,299.833,o),
(572,303.5,cs),
(568,307.167,o),
(564.333,309,o),
(561,309,cs),
(550.333,309,o),
(542,296,o),
(542,276,cs),
(542,241.927,o),
(532.9,108.002,o),
(529,69,cs),
(526.476,36.192,o),
(504.249,35,o),
(469,35,cs),
(107,35,ls),
(99,35,o),
(93.667,35.667,o),
(91,37,cs),
(88.333,38.333,o),
(87,41,o),
(87,45,cs),
(87,50.714,o),
(185.046,197.124,o),
(267.5,322.5,cs),
(365.755,471.901,o),
(475.072,642.124,o),
(531,738,c),
(527.743,728.229,o),
(567,782.234,o),
(567,802,cs),
(567,820.667,o),
(541.667,821,o),
(515,821,cs),
(481,821,o),
(447,820.667,o),
(413,820,cs),
(379,819.333,o),
(345,819,o),
(311,819,cs),
(277,819,o),
(243.167,819.333,o),
(209.5,820,cs),
(175.833,820.667,o),
(142,821,o),
(108,821,cs),
(60.971,821,o),
(54,820.224,o),
(54,780,cs),
(54,764.667,o),
(54.167,749.667,o),
(54.5,735,cs),
(54.833,720.333,o),
(55,705.333,o),
(55,690,cs),
(55,674.667,o),
(54.833,659.833,o),
(54.5,645.5,cs),
(54.167,631.167,o),
(54,616.333,o),
(54,601,cs),
(54,581,o),
(57.333,565,o),
(72,565,cs),
(79.333,565,o),
(84.333,568,o),
(87,574,cs),
(89.667,580,o),
(91,595.333,o),
(91,620,cs),
(91,659.08,o),
(92,708.447,o),
(92,742,cs),
(92,774,o),
(95.333,785,o),
(134,785,cs),
(454,785,ls),
(494.148,785,o),
(502,784.958,o),
(502,769,cs),
(502,753.207,o),
(431.114,642.928,o),
(287,425,cs),
(232.333,342.333,o),
(176.167,258.667,o),
(131.5,192,cs),
(82.107,118.279,o),
(51.948,75.061,o),
(43,61,cs),
(26.51,35.087,o),
(22,35.713,o),
(22,19,cs),
(22,11,o),
(25.667,5.833,o),
(33,3.5,cs),
(40.333,1.167,o),
(51.333,0,o),
(66,0,cs)
);
},
{
closed = 1;
nodes = (
(322.706,876,o),
(428,935.626,o),
(428,961,cs),
(428,968.333,o),
(425.333,972,o),
(420,972,cs),
(413.254,972,o),
(364.504,954.149,o),
(300,920,c),
(263.068,939.552,o),
(193.695,972,o),
(181,972,cs),
(175.667,972,o),
(173,968.333,o),
(173,961,cs),
(173,937.359,o),
(276.08,876,o),
(300,876,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
19 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
2 9 2 0 1 0 106 0 1 6 1 106 0 5 4 8 4 5 8 104 0 8 7 4 8 7 102 0 4 4 6 83 0 6 6 12 67 0 7 7 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
2 9 2 0 1 0 106 0 1 6 1 106 0 5 4 8 4 5 8 104 0 8 7 4 8 7 102 0 4 4 6 83 0 6 6 14 67 0 7 7 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
1 0 129 127 117 113 95 86 75 73 64 60 41 33 15 13 8 6 0 23 1 23 10 15
CALL[ ]	/* CallFunction */";
};
width = 618;
}
);
note = Zcaron;
unicode = 381;
},
{
glyphname = Zdotaccent;
kernLeft = Z;
kernRight = Z;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(621,295.667,o),
(613,317,o),
(581,317,cs),
(542.414,317,o),
(539,287.167,o),
(539,268,cs),
(539,245.707,o),
(533.459,150.441,o),
(529,117,cs),
(526.333,91.667,o),
(511.667,83,o),
(469,83,cs),
(187,83,ls),
(179,83,o),
(173.667,83.667,o),
(171,85,cs),
(168.333,86.333,o),
(167,89,o),
(167,93,cs),
(167,97.379,o),
(221.125,182.029,o),
(330.5,351.5,cs),
(428.589,503.484,o),
(511.106,632.099,o),
(577,738,c),
(577.465,739.396,o),
(611,794.49,o),
(611,807,cs),
(611,819,o),
(603.667,821,o),
(589,821,cs),
(518.123,821,o),
(438.969,819,o),
(357,819,cs),
(323,819,o),
(289.167,819.333,o),
(255.5,820,cs),
(221.833,820.667,o),
(188,821,o),
(154,821,cs),
(61.229,821,o),
(49,814.062,o),
(49,780,cs),
(49,764.667,o),
(49.167,749.667,o),
(49.5,735,cs),
(49.833,720.333,o),
(50,705.333,o),
(50,690,cs),
(50,674.667,o),
(49.833,660.833,o),
(49.5,648.5,cs),
(49.167,636.167,o),
(49,622.333,o),
(49,607,cs),
(49,586.312,o),
(58.168,555,o),
(95,555,cs),
(125.667,555,o),
(132,576.667,o),
(132,626,cs),
(132,650.673,o),
(133,665.854,o),
(133,694,cs),
(133,726,o),
(136.333,737,o),
(175,737,cs),
(419,737,ls),
(458.442,737,o),
(467,736.835,o),
(467,721,cs),
(467,709.718,o),
(400.269,602.522,o),
(266.5,401,cs),
(142.235,213.796,o),
(42.595,67.564,o),
(38,61,cs),
(30.667,49.667,o),
(25.667,41.167,o),
(23,35.5,cs),
(20.333,29.833,o),
(19,24.333,o),
(19,19,cs),
(19,11,o),
(22.5,5.833,o),
(29.5,3.5,cs),
(36.5,1.167,o),
(50.667,0,o),
(72,0,cs),
(161.98,0,o),
(253.02,1,o),
(343,1,cs),
(381.667,1,o),
(420.333,0.833,o),
(459,0.5,cs),
(497.667,0.167,o),
(536.333,0,o),
(575,0,cs),
(604.333,0,o),
(611,5.667,o),
(611,31,cs),
(611,66.202,o),
(613.036,78.018,o),
(616,162.5,cs),
(618.026,220.237,o),
(621,257.034,o),
(621,273,cs)
);
},
{
closed = 1;
nodes = (
(292,863.333,o),
(317.667,840,o),
(351,840,cs),
(380.675,840,o),
(418,854.646,o),
(418,910,cs),
(418,946,o),
(390,971,o),
(358,971,cs),
(310.488,971,o),
(292,933.161,o),
(292,906,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 6 0 7 3 6 7 91 0 1 1 3 83 0 3 3 12 67 0 4 4 0 84 0 0 0 13 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 6 0 7 3 6 7 91 0 1 1 3 83 0 3 3 14 67 0 4 4 0 84 0 0 0 13 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
123 121 115 113 107 105 94 91 75 65 51 49 40 36 169 8 16
CALL[ ]	/* CallFunction */";
};
width = 659;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(605,303.667,o),
(595.333,319,o),
(574,319,cs),
(546,319,o),
(539,296,o),
(539,276,cs),
(539,247.05,o),
(529.832,131.574,o),
(526,99,cs),
(520.866,65.628,o),
(500.904,65,o),
(466,65,cs),
(154,65,ls),
(146,65,o),
(140.667,65.667,o),
(138,67,cs),
(135.333,68.333,o),
(134,71,o),
(134,75,cs),
(134,81.972,o),
(227.655,222.949,o),
(304.5,341,cs),
(383.327,462.096,o),
(470.701,592.502,o),
(558,738,c),
(554.743,728.229,o),
(594,782.234,o),
(594,802,cs),
(594,820.667,o),
(568.667,821,o),
(542,821,cs),
(508,821,o),
(474,820.667,o),
(440,820,cs),
(406,819.333,o),
(372,819,o),
(338,819,cs),
(304,819,o),
(270.167,819.333,o),
(236.5,820,cs),
(202.833,820.667,o),
(169,821,o),
(135,821,cs),
(65.238,821,o),
(51,820.413,o),
(51,780,cs),
(51,764.667,o),
(51.167,749.667,o),
(51.5,735,cs),
(51.833,720.333,o),
(52,705.333,o),
(52,690,cs),
(52,674.667,o),
(51.833,659.833,o),
(51.5,645.5,cs),
(51.167,631.167,o),
(51,616.333,o),
(51,601,cs),
(51,581,o),
(56.333,555,o),
(87,555,cs),
(98.333,555,o),
(106.333,559.667,o),
(111,569,cs),
(115.667,578.333,o),
(118,595.333,o),
(118,620,cs),
(118,661.623,o),
(119,662.86,o),
(119,712,cs),
(119,744,o),
(122.333,755,o),
(161,755,cs),
(423,755,ls),
(463.148,755,o),
(471,754.958,o),
(471,739,cs),
(471,727.971,o),
(403.23,612.404,o),
(270.5,409,cs),
(194.116,291.944,o),
(115.332,179.378,o),
(40,61,cs),
(23.51,35.087,o),
(19,35.713,o),
(19,19,cs),
(19,11,o),
(25.167,5.833,o),
(37.5,3.5,cs),
(49.833,1.167,o),
(68.333,0,o),
(93,0,cs),
(131.667,0,o),
(170.167,0.167,o),
(208.5,0.5,cs),
(246.833,0.833,o),
(285.333,1,o),
(324,1,cs),
(362.667,1,o),
(401.333,0.833,o),
(440,0.5,cs),
(478.667,0.167,o),
(517.333,0,o),
(556,0,cs),
(582.667,0,o),
(592,0.333,o),
(592,31,cs),
(592,46.002,o),
(595.096,99.548,o),
(598.5,166.5,cs),
(602.293,241.094,o),
(605,279.231,o),
(605,281,cs)
);
},
{
closed = 1;
nodes = (
(282,880,o),
(304,859,o),
(331,859,cs),
(356,859,o),
(387,872,o),
(387,920,cs),
(387,951,o),
(365,972,o),
(338,972,cs),
(296,972,o),
(282,936,o),
(282,916,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 6 0 7 3 6 7 91 0 1 1 3 83 0 3 3 12 67 0 4 4 0 84 0 0 0 13 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 6 0 7 3 6 7 91 0 1 1 3 83 0 3 3 14 67 0 4 4 0 84 0 0 0 13 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
120 118 114 112 106 104 94 90 72 63 52 50 41 37 138 8 27
CALL[ ]	/* CallFunction */";
};
width = 642;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(104.667,0,o),
(143.167,0.167,o),
(181.5,0.5,cs),
(219.833,0.833,o),
(258.333,1,o),
(297,1,cs),
(335.667,1,o),
(374.333,0.833,o),
(413,0.5,cs),
(451.667,0.167,o),
(490.333,0,o),
(529,0,cs),
(555.667,0,o),
(565,0.333,o),
(565,31,cs),
(565,46.002,o),
(568.096,99.548,o),
(571.5,166.5,cs),
(575.293,241.094,o),
(578,279.231,o),
(578,281,cs),
(578,292.333,o),
(576,299.833,o),
(572,303.5,cs),
(568,307.167,o),
(564.333,309,o),
(561,309,cs),
(550.333,309,o),
(542,296,o),
(542,276,cs),
(542,241.927,o),
(532.9,108.002,o),
(529,69,cs),
(526.476,36.192,o),
(504.249,35,o),
(469,35,cs),
(107,35,ls),
(99,35,o),
(93.667,35.667,o),
(91,37,cs),
(88.333,38.333,o),
(87,41,o),
(87,45,cs),
(87,50.714,o),
(185.046,197.124,o),
(267.5,322.5,cs),
(365.755,471.901,o),
(475.072,642.124,o),
(531,738,c),
(527.743,728.229,o),
(567,782.234,o),
(567,802,cs),
(567,820.667,o),
(541.667,821,o),
(515,821,cs),
(481,821,o),
(447,820.667,o),
(413,820,cs),
(379,819.333,o),
(345,819,o),
(311,819,cs),
(277,819,o),
(243.167,819.333,o),
(209.5,820,cs),
(175.833,820.667,o),
(142,821,o),
(108,821,cs),
(60.971,821,o),
(54,820.224,o),
(54,780,cs),
(54,764.667,o),
(54.167,749.667,o),
(54.5,735,cs),
(54.833,720.333,o),
(55,705.333,o),
(55,690,cs),
(55,674.667,o),
(54.833,659.833,o),
(54.5,645.5,cs),
(54.167,631.167,o),
(54,616.333,o),
(54,601,cs),
(54,581,o),
(57.333,565,o),
(72,565,cs),
(79.333,565,o),
(84.333,568,o),
(87,574,cs),
(89.667,580,o),
(91,595.333,o),
(91,620,cs),
(91,659.08,o),
(92,708.447,o),
(92,742,cs),
(92,774,o),
(95.333,785,o),
(134,785,cs),
(454,785,ls),
(494.148,785,o),
(502,784.958,o),
(502,769,cs),
(502,753.207,o),
(431.114,642.928,o),
(287,425,cs),
(232.333,342.333,o),
(176.167,258.667,o),
(131.5,192,cs),
(82.107,118.279,o),
(51.948,75.061,o),
(43,61,cs),
(26.51,35.087,o),
(22,35.713,o),
(22,19,cs),
(22,11,o),
(25.667,5.833,o),
(33,3.5,cs),
(40.333,1.167,o),
(51.333,0,o),
(66,0,cs)
);
},
{
closed = 1;
nodes = (
(321.667,889,o),
(344,899,o),
(344,935,cs),
(344,957.667,o),
(328.667,972,o),
(310,972,cs),
(282.258,972,o),
(269,944.895,o),
(269,931,cs),
(269,907,o),
(284.333,889,o),
(303,889,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 6 0 7 3 6 7 91 0 1 1 3 83 0 3 3 12 67 0 4 4 0 83 0 0 0 13 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 2 1 5 1 2 5 104 0 5 4 1 5 4 102 0 6 0 7 3 6 7 91 0 1 1 3 83 0 3 3 14 67 0 4 4 0 83 0 0 0 13 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
119 117 113 111 105 103 93 89 71 62 51 49 40 36 137 8 16
CALL[ ]	/* CallFunction */";
};
width = 618;
}
);
note = Zdotaccent;
unicode = 379;
},
{
glyphname = K.salt;
kernLeft = B;
kernRight = K.salt;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(229,753.333,o),
(263,759,o),
(307,759,cs),
(323,759,o),
(344,766,o),
(344,790,cs),
(344,797.333,o),
(340.833,804.333,o),
(334.5,811,cs),
(328.167,817.667,o),
(314.333,821,o),
(293,821,cs),
(87,821,ls),
(75,821,o),
(50,816.667,o),
(50,790,cs),
(50,760.667,o),
(72.667,759,o),
(98,759,cs),
(128.511,759,o),
(134,741.255,o),
(134,666,cs),
(134,644.328,o),
(134.216,602.232,o),
(135.5,526.5,cs),
(136.744,453.111,o),
(137,413.482,o),
(137,404,cs),
(137,376.051,o),
(135.081,224.162,o),
(132,104,cs),
(130.667,66.667,o),
(124,60,o),
(92,60,cs),
(54.667,60,o),
(47,51.667,o),
(47,29,cs),
(47,6.333,o),
(76.333,0,o),
(107,0,cs),
(124.333,0,o),
(142.333,0.333,o),
(161,1,cs),
(179.667,1.667,o),
(197.667,2,o),
(215,2,cs),
(252.369,2,o),
(290.962,0,o),
(318,0,cs),
(342,0,o),
(363,4.333,o),
(363,27,cs),
(363,55,o),
(345.333,62,o),
(320,62,cs),
(229,62,l),
(229,335,l),
(261,369,l),
(439.605,361.12,o),
(500.674,297.711,o),
(509,220,cs),
(522.917,111.444,o),
(496.27,-47,o),
(658,-47,cs),
(698.333,-47,o),
(747,-27.376,o),
(747,50,cs),
(747,64.93,o),
(741.032,93,o),
(707,93,cs),
(672.333,93,o),
(661,72.667,o),
(661,54,cs),
(661,39.333,o),
(659,31,o),
(643,31,cs),
(600.522,31,o),
(606.945,162.122,o),
(600,220,cs),
(595.462,254.038,o),
(589.512,300.945,o),
(550.5,350.5,cs),
(511.829,399.623,o),
(436.19,436,o),
(327,436,c),
(453.667,565.333,o),
(538.333,650.333,o),
(609,717,cs),
(629.501,734.572,o),
(725.294,735.378,o),
(762,738,cs),
(776.667,739.333,o),
(782,751.333,o),
(782,766,cs),
(782,787.333,o),
(771,795,o),
(759,795,cs),
(485,795,ls),
(458.333,795,o),
(451,776,o),
(451,764,cs),
(451,749.333,o),
(457,734,o),
(477,734,cs),
(481,734,o),
(488,732.667,o),
(488,722,cs),
(488,708.184,o),
(446.708,662.256,o),
(388,602.5,cs),
(351.329,565.174,o),
(268.891,482.88,o),
(229,439,c),
(229,728,l),
(229,728,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
117 58 1 40
CALL[ ]	/* CallFunction */";
};
width = 780;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(211,769.81,o),
(267.087,771,o),
(286,771,cs),
(302,771,o),
(323,776,o),
(323,796,cs),
(323,801.333,o),
(319.833,806.833,o),
(313.5,812.5,cs),
(307.167,818.167,o),
(293.333,821,o),
(272,821,cs),
(76,821,ls),
(64,821,o),
(39,817.333,o),
(39,796,cs),
(39,773.333,o),
(61.667,771,o),
(87,771,cs),
(131.761,771,o),
(137,763.577,o),
(137,678,cs),
(137,645.199,o),
(140,553.872,o),
(140,404,cs),
(140,385.024,o),
(139.725,280.997,o),
(135,92,cs),
(135,50.277,o),
(113.561,48,o),
(74,48,cs),
(44.667,48,o),
(36,41.667,o),
(36,23,cs),
(36,4.333,o),
(63.667,0,o),
(89,0,cs),
(106.333,0,o),
(124.333,0.333,o),
(143,1,cs),
(161.667,1.667,o),
(179.667,2,o),
(197,2,cs),
(234.369,2,o),
(272.962,0,o),
(300,0,cs),
(325.333,0,o),
(338,7,o),
(338,21,cs),
(338,47.667,o),
(316.667,50,o),
(302,50,cs),
(211,50,l),
(211,335,l),
(257,382,l),
(357,378,o),
(418.667,356.5,o),
(456,326.5,cs),
(493.333,296.5,o),
(508,257.333,o),
(512,220,cs),
(517.894,168.918,o),
(515.202,106.156,o),
(528,47.5,cs),
(539.745,-6.332,o),
(574.063,-47,o),
(647,-47,cs),
(683.464,-47,o),
(729,-29.7,o),
(729,50,cs),
(729,63.194,o),
(724.491,88,o),
(698,88,cs),
(671.333,88,o),
(664,67.333,o),
(664,54,cs),
(662.667,27.333,o),
(659,13,o),
(635,13,cs),
(580.977,13,o),
(588.821,158.609,o),
(582,220,cs),
(577.616,255.072,o),
(571.864,300.497,o),
(532.5,350.5,cs),
(493.941,399.48,o),
(419.739,434.154,o),
(309,436,c),
(437,566.667,o),
(528.333,658.333,o),
(603,729,cs),
(619,743.667,o),
(675.333,747.333,o),
(742,750,cs),
(756.667,751.333,o),
(762,765.333,o),
(762,772,cs),
(762,781.333,o),
(751,795,o),
(739,795,cs),
(472,795,ls),
(458.667,795,o),
(449.667,791.667,o),
(445,785,cs),
(440.333,778.333,o),
(438,773.333,o),
(438,770,cs),
(438,755.333,o),
(450.667,746,o),
(472,746,cs),
(482.667,746,o),
(503,746,o),
(503,734,cs),
(503,719.647,o),
(432.141,643.141,o),
(388.5,599.5,cs),
(332.99,543.99,o),
(266.61,476.61,o),
(211,421,c),
(211,746,l),
(211,746,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
116 56 1 40
CALL[ ]	/* CallFunction */";
};
width = 763;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(657.464,-47,o),
(703,-29.7,o),
(703,50,cs),
(703,62,o),
(702.333,79,o),
(685,79,cs),
(670.333,79,o),
(669.333,67.333,o),
(668,54,cs),
(664.667,6.667,o),
(649.667,-17,o),
(623,-17,cs),
(550.59,-17,o),
(562.021,157.788,o),
(556,220,cs),
(551.616,255.072,o),
(545.864,300.497,o),
(506.5,350.5,cs),
(467.941,399.48,o),
(393.739,434.154,o),
(283,436,c),
(412.333,568,o),
(520.333,678.333,o),
(595,749,cs),
(603,756.333,o),
(616.5,761.333,o),
(635.5,764,cs),
(654.5,766.667,o),
(680.667,768.667,o),
(714,770,cs),
(727.333,770.667,o),
(734,774.667,o),
(734,782,cs),
(734,791.333,o),
(723,795,o),
(711,795,cs),
(454,795,ls),
(440.667,795,o),
(431.667,793.333,o),
(427,790,cs),
(422.333,786.667,o),
(420,783.333,o),
(420,780,cs),
(420,765.333,o),
(443.333,766,o),
(454,766,cs),
(474.493,766,o),
(525,765.294,o),
(525,754,cs),
(525,740.569,o),
(468.72,677.945,o),
(389.5,594.5,cs),
(313.259,514.193,o),
(220.838,423.722,o),
(185,391,c),
(185,766,ls),
(185,789.999,o),
(238.404,791,o),
(256,791,cs),
(272,791,o),
(293,791.333,o),
(293,806,cs),
(293,811.333,o),
(289.833,815.167,o),
(283.5,817.5,cs),
(277.167,819.833,o),
(263.333,821,o),
(242,821,cs),
(60,821,ls),
(48,821,o),
(23,820.667,o),
(23,806,cs),
(23,799.333,o),
(27.833,795.167,o),
(37.5,793.5,cs),
(47.167,791.833,o),
(58.333,791,o),
(71,791,cs),
(146.087,791,o),
(141,782.909,o),
(141,698,cs),
(141,672.408,o),
(141.251,624.412,o),
(142.5,542,cs),
(143.745,459.833,o),
(144,415.438,o),
(144,404,cs),
(144,385.179,o),
(143.709,274.488,o),
(139,72,cs),
(139,30.494,o),
(109.272,28,o),
(48,28,cs),
(29.333,28,o),
(20,23,o),
(20,13,cs),
(20,-0.333,o),
(45.667,0,o),
(63,0,cs),
(80.333,0,o),
(98.333,0.333,o),
(117,1,cs),
(135.667,1.667,o),
(153.667,2,o),
(171,2,cs),
(208.369,2,o),
(246.962,0,o),
(274,0,cs),
(286,0,o),
(293.667,0.833,o),
(297,2.5,cs),
(300.333,4.167,o),
(302,7,o),
(302,11,cs),
(302,24.333,o),
(290.667,30,o),
(276,30,cs),
(185,30,l),
(185,335,l),
(251,403,l),
(364.333,399,o),
(427.667,372.833,o),
(465,337.5,cs),
(502.333,302.167,o),
(512,257.333,o),
(516,220,cs),
(521.655,170.992,o),
(517.929,108.393,o),
(529,47.5,cs),
(539.165,-8.409,o),
(564.607,-47,o),
(621,-47,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
116 54 1 40
CALL[ ]	/* CallFunction */";
};
width = 739;
}
);
note = K.salt;
},
{
glyphname = R.salt;
kernLeft = B;
kernRight = R.salt;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(637,774.71,o),
(473.828,821,o),
(305,821,cs),
(287.765,821,o),
(189.414,818,o),
(131,818,cs),
(93.667,818,o),
(56,813.333,o),
(56,788,cs),
(56,758.385,o),
(90.679,751,o),
(105,751,cs),
(126.333,751,o),
(132.667,743.667,o),
(134,709,cs),
(134.303,697.493,o),
(140,513.107,o),
(140,412,cs),
(140,404.88,o),
(138.722,358.558,o),
(137.5,273,cs),
(136.244,185.054,o),
(135,128.731,o),
(135,104,cs),
(133.667,65.333,o),
(125.667,60,o),
(95,60,cs),
(72.333,60,o),
(50,53,o),
(50,29,cs),
(50,5.6,o),
(87,0,o),
(110,0,cs),
(127.333,0,o),
(145.333,0.333,o),
(164,1,cs),
(182.667,1.667,o),
(200.667,2,o),
(218,2,cs),
(255.369,2,o),
(293.962,0,o),
(321,0,cs),
(345,0,o),
(357,13.333,o),
(357,32,cs),
(357,54.667,o),
(337.667,62,o),
(323,62,cs),
(232,62,l),
(232,349,l),
(332,349,o),
(388.833,326,o),
(421.5,294,cs),
(454.167,262,o),
(462.333,223,o),
(465,191,cs),
(467.005,140.868,o),
(462.623,73.508,o),
(478.5,10,cs),
(490.546,-38.183,o),
(526.367,-96,o),
(625,-96,cs),
(663.577,-96,o),
(708,-72.811,o),
(708,2,cs),
(708,20.667,o),
(701,46,o),
(673,46,cs),
(646.546,46,o),
(640,20.682,o),
(640,11,cs),
(638.667,0.333,o),
(629,-18,o),
(613,-18,cs),
(555.67,-18,o),
(569.442,106.577,o),
(561,191,cs),
(547.905,324.564,o),
(483.788,357.091,o),
(421,384,c),
(541.637,405.447,o),
(637,468.98,o),
(637,602,cs)
);
},
{
closed = 1;
nodes = (
(541,452.088,o),
(381.011,432,o),
(274,432,cs),
(272.281,432,o),
(258.37,434,o),
(232,434,c),
(232,732,l),
(253,735,ls),
(267.667,737.667,o),
(287,739,o),
(311,739,cs),
(386.894,739,o),
(541,718.684,o),
(541,597,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
117 107 97 30 2 40
CALL[ ]	/* CallFunction */";
};
width = 718;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(617,774.71,o),
(453.828,821,o),
(285,821,cs),
(267.765,821,o),
(169.414,818,o),
(111,818,cs),
(76.333,818,o),
(43,816.667,o),
(43,794,cs),
(43,771.278,o),
(75.904,765,o),
(85,765,cs),
(121,765,o),
(133.667,763,o),
(135,723,cs),
(135.373,708.446,o),
(141,519.392,o),
(141,412,cs),
(141,402.971,o),
(139.696,354.817,o),
(138.5,267.5,cs),
(137.267,177.46,o),
(136,118.97,o),
(136,92,cs),
(136,50.096,o),
(113.632,48,o),
(75,48,cs),
(57.667,48,o),
(37,44.333,o),
(37,23,cs),
(37,0.61,o),
(76.953,0,o),
(90,0,cs),
(107.333,0,o),
(125.333,0.333,o),
(144,1,cs),
(162.667,1.667,o),
(180.667,2,o),
(198,2,cs),
(235.369,2,o),
(273.962,0,o),
(301,0,cs),
(325,0,o),
(334,9.333,o),
(334,24,cs),
(334,42.667,o),
(317.667,50,o),
(303,50,cs),
(212,50,l),
(212,358,l),
(424.64,358,o),
(460.635,263.426,o),
(466,191,cs),
(470.319,134.858,o),
(464.769,76.989,o),
(479.5,9,cs),
(492.958,-53.116,o),
(529.833,-96,o),
(605,-96,cs),
(646.209,-96,o),
(688,-76.466,o),
(688,2,cs),
(688,11.402,o),
(687.2,40,o),
(660,40,cs),
(637.333,40,o),
(634,17.667,o),
(634,11,cs),
(632.667,-6.333,o),
(623,-36,o),
(599,-36,cs),
(531.199,-36,o),
(547.179,131.274,o),
(541,191,cs),
(530.557,324.147,o),
(458.822,359.219,o),
(401,384,c),
(521.637,405.447,o),
(617,468.98,o),
(617,602,cs)
);
},
{
closed = 1;
nodes = (
(542,445.18,o),
(373.139,423,o),
(254,423,cs),
(252.281,423,o),
(238.37,425,o),
(212,425,c),
(212,750,l),
(233,753,ls),
(247.667,755.667,o),
(267,757,o),
(291,757,cs),
(325.41,757,o),
(387.14,752.638,o),
(442.5,731.5,cs),
(498.909,709.962,o),
(542,665.239,o),
(542,597,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
121 111 99 30 2 40
CALL[ ]	/* CallFunction */";
};
width = 700;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(618.209,-96,o),
(660,-76.466,o),
(660,2,cs),
(660,14,o),
(659.333,30,o),
(642,30,cs),
(627.333,30,o),
(626,17.667,o),
(626,11,cs),
(623.521,-16.266,o),
(620.555,-66,o),
(579,-66,cs),
(542.596,-66,o),
(524.404,-24.445,o),
(519.5,29.5,cs),
(513.714,93.149,o),
(516.498,152.518,o),
(513,191,cs),
(502.557,324.147,o),
(430.822,359.219,o),
(373,384,c),
(493.637,405.447,o),
(589,468.98,o),
(589,602,cs),
(589,774.71,o),
(425.828,821,o),
(257,821,cs),
(239.765,821,o),
(141.414,818,o),
(83,818,cs),
(65.667,818,o),
(51.667,817.333,o),
(41,816,cs),
(30.333,814.667,o),
(25,810.667,o),
(25,804,cs),
(25,789.333,o),
(47.667,789,o),
(57,789,cs),
(115.34,789,o),
(137,786.102,o),
(137,747,cs),
(137.306,734.16,o),
(143,529.906,o),
(143,412,cs),
(143,403.035,o),
(141.713,351.879,o),
(140.5,258.5,cs),
(139.257,162.76,o),
(138,100.603,o),
(138,72,cs),
(138,30.42,o),
(104.766,28,o),
(47,28,cs),
(28.333,28,o),
(19,23,o),
(19,13,cs),
(19,-0.333,o),
(44.667,0,o),
(62,0,cs),
(79.333,0,o),
(97.333,0.333,o),
(116,1,cs),
(134.667,1.667,o),
(152.667,2,o),
(170,2,cs),
(207.369,2,o),
(245.962,0,o),
(273,0,cs),
(285,0,o),
(292.667,0.833,o),
(296,2.5,cs),
(299.333,4.167,o),
(301,7,o),
(301,11,cs),
(301,24.333,o),
(289.667,30,o),
(275,30,cs),
(184,30,l),
(184,373,l),
(424.002,373,o),
(460,268.331,o),
(468,191,cs),
(473.94,139.522,o),
(469.413,72.521,o),
(480,9,cs),
(490.307,-52.84,o),
(517.136,-96,o),
(577,-96,cs)
);
},
{
closed = 1;
nodes = (
(224.281,408,o),
(210.37,410,o),
(184,410,c),
(184,780,l),
(205,783,ls),
(219.667,785.667,o),
(239,787,o),
(263,787,cs),
(305.098,787,o),
(366.476,782.921,o),
(432,756.5,cs),
(492.637,732.049,o),
(544,682.292,o),
(544,597,cs),
(544,518.285,o),
(499.624,467.66,o),
(434,441,cs),
(366.926,413.751,o),
(291.762,408,o),
(226,408,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
120 110 98 32 2 40
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = R.salt;
},
{
glyphname = a;
kernLeft = a;
kernRight = a;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(291.667,228.333,o),
(252,238,o),
(204,238,cs),
(90.667,238,o),
(24,182,o),
(24,106,cs),
(24,34,o),
(83.667,-11,o),
(177,-11,cs),
(239.667,-11,o),
(292.333,9.333,o),
(335,48,c),
(348.333,1.333,o),
(379.333,-11,o),
(414,-11,cs),
(462,-11,o),
(498,14.333,o),
(498,69,cs),
(498,99.667,o),
(486,108,o),
(466,108,cs),
(439.333,108,o),
(438.333,93.667,o),
(437,79,cs),
(437,72.333,o),
(434.667,67,o),
(428,67,cs),
(423.333,67,o),
(420.667,70.333,o),
(420,77,cs),
(419.333,83.667,o),
(419,99.333,o),
(419,124,cs),
(419,162.781,o),
(423,229.761,o),
(423,269,cs),
(423,394.333,o),
(365.333,465,o),
(236,465,cs),
(125.007,465,o),
(49,410.046,o),
(49,335,cs),
(49,302.796,o),
(62.404,265,o),
(108,265,cs),
(130.667,265,o),
(157,273.667,o),
(157,303,cs),
(157,318.333,o),
(150.333,329,o),
(137,335,cs),
(134.333,336.333,o),
(126,338.333,o),
(126,349,cs),
(126,375.332,o),
(177.562,397,o),
(228,397,cs),
(308.966,397,o),
(333,344.573,o),
(333,261,cs),
(333,203,l),
(333,203,l)
);
},
{
closed = 1;
nodes = (
(116,143.333,o),
(143.333,176,o),
(218,176,cs),
(284.667,176,o),
(329,150,o),
(329,122,cs),
(329,93.079,o),
(288.915,57,o),
(206,57,cs),
(143.333,57,o),
(116,75.333,o),
(116,110,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 3 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 8 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
79 77 37 36 36 36 36 41 40 43 36 10 24
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(290,227.667,o),
(243.333,243,o),
(192,243,cs),
(91.257,243,o),
(25,183.868,o),
(25,107,cs),
(25,35,o),
(84.667,-11,o),
(178,-11,cs),
(240.667,-11,o),
(291.333,9.333,o),
(334,48,c),
(346,5.333,o),
(377,-11,o),
(413,-11,cs),
(453.198,-11,o),
(490,10.502,o),
(490,65,cs),
(490,82.333,o),
(486.333,98,o),
(469,98,cs),
(450.333,98,o),
(443.333,84,o),
(442,76,cs),
(439.333,58.667,o),
(436.667,49,o),
(422,49,cs),
(412.667,49,o),
(406.667,53.667,o),
(404,63,cs),
(401.333,72.333,o),
(400,92.333,o),
(400,123,cs),
(400,175.168,o),
(403,263.532,o),
(403,267,cs),
(403,397,o),
(344,462,o),
(226,462,cs),
(120.667,462,o),
(55,411,o),
(55,339,cs),
(55,304.333,o),
(70.667,269,o),
(112,269,cs),
(138.667,269,o),
(156,282.333,o),
(156,305,cs),
(156,326.333,o),
(140.333,334.667,o),
(131,336,cs),
(117.667,338.667,o),
(111,340.333,o),
(111,351,cs),
(111,385.189,o),
(179.151,402,o),
(218,402,cs),
(298,402,o),
(333,349,o),
(333,261,cs),
(333,257.667,o),
(332.833,252.5,o),
(332.5,245.5,cs),
(332.167,238.5,o),
(332,231.333,o),
(332,224,cs),
(332,197,l),
(332,197,l)
);
},
{
closed = 1;
nodes = (
(96,151.941,o),
(149.763,183,o),
(217,183,cs),
(279.159,183,o),
(332,155.557,o),
(332,118,cs),
(332,78.985,o),
(271.753,49,o),
(201,49,cs),
(143.667,49,o),
(96,68,o),
(96,108,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
66 1 9 7 53 1 5 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
81 79 36 38 36 38 36 40 36 44 37 10 24
CALL[ ]	/* CallFunction */";
};
width = 468;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(241.667,-11,o),
(292.333,9.333,o),
(335,48,c),
(347,5.333,o),
(378,-11,o),
(414,-11,cs),
(452.667,-11,o),
(481,7.667,o),
(481,65,cs),
(481,79.667,o),
(478.667,88,o),
(468,88,cs),
(462,88,o),
(458.667,84,o),
(458,76,cs),
(455.4,47.399,o),
(453.434,19,o),
(415,19,cs),
(379.663,19,o),
(371,44.439,o),
(371,122,cs),
(371,173.257,o),
(374,262.289,o),
(374,268,cs),
(374,400,o),
(325.333,457,o),
(220,457,cs),
(127.897,457,o),
(56,411.543,o),
(56,339,cs),
(56,304.333,o),
(73.333,276,o),
(104,276,cs),
(126.667,276,o),
(140,291,o),
(140,311,cs),
(140,332.333,o),
(125.667,335.333,o),
(115,338,cs),
(104.333,340.667,o),
(95,342,o),
(95,358,cs),
(95,401.021,o),
(151.734,427,o),
(212,427,cs),
(300,427,o),
(334,368,o),
(334,264,cs),
(334,259.333,o),
(333.833,252.833,o),
(333.5,244.5,cs),
(333.167,236.167,o),
(333,227.667,o),
(333,219,cs),
(333,187,l),
(291.667,219,o),
(244.667,233,o),
(194,233,cs),
(93.633,233,o),
(26,179.745,o),
(26,106,cs),
(26,35.333,o),
(85.667,-11,o),
(179,-11,cs)
);
},
{
closed = 1;
nodes = (
(114.667,19,o),
(67,52.667,o),
(67,106,cs),
(67,164.782,o),
(124.411,203,o),
(199,203,cs),
(271.953,203,o),
(333,166.942,o),
(333,117,cs),
(333,63.726,o),
(261.784,19,o),
(184,19,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 4 9 57 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
86 84 37 38 36 36 37 43 38 44 37 10 24
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = a;
unicode = 97;
},
{
glyphname = aacute;
kernLeft = a;
kernRight = a;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(239.667,-11,o),
(292.333,9.333,o),
(335,48,c),
(348.333,1.333,o),
(379.333,-11,o),
(414,-11,cs),
(462,-11,o),
(498,14.333,o),
(498,69,cs),
(498,99.667,o),
(486,108,o),
(466,108,cs),
(439.333,108,o),
(438.333,93.667,o),
(437,79,cs),
(437,72.333,o),
(434.667,67,o),
(428,67,cs),
(423.333,67,o),
(420.667,70.333,o),
(420,77,cs),
(419.333,83.667,o),
(419,99.333,o),
(419,124,cs),
(419,162.781,o),
(423,229.761,o),
(423,269,cs),
(423,394.333,o),
(365.333,465,o),
(236,465,cs),
(125.007,465,o),
(49,410.046,o),
(49,335,cs),
(49,302.796,o),
(62.404,265,o),
(108,265,cs),
(130.667,265,o),
(157,273.667,o),
(157,303,cs),
(157,318.333,o),
(150.333,329,o),
(137,335,cs),
(134.333,336.333,o),
(126,338.333,o),
(126,349,cs),
(126,375.332,o),
(177.562,397,o),
(228,397,cs),
(308.966,397,o),
(333,344.573,o),
(333,261,cs),
(333,203,l),
(291.667,228.333,o),
(252,238,o),
(204,238,cs),
(90.667,238,o),
(24,182,o),
(24,106,cs),
(24,34,o),
(83.667,-11,o),
(177,-11,cs)
);
},
{
closed = 1;
nodes = (
(143.333,57,o),
(116,75.333,o),
(116,110,cs),
(116,143.333,o),
(143.333,176,o),
(218,176,cs),
(284.667,176,o),
(329,150,o),
(329,122,cs),
(329,93.079,o),
(288.915,57,o),
(206,57,cs)
);
},
{
closed = 1;
nodes = (
(217.099,486,o),
(252.389,508.679,o),
(291,543,cs),
(325.627,573.78,o),
(355,608.341,o),
(355,626,cs),
(355,651.333,o),
(327.667,672.667,o),
(285,674,cs),
(259.667,674,o),
(229,635.167,o),
(205,594.5,cs),
(184.511,559.783,o),
(163,512.988,o),
(163,508,cs),
(163,493.333,o),
(185.333,486,o),
(200,486,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
84 1 11 9 60 1 5 6 72 1 7 5 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
84 1 11 9 60 1 5 6 72 1 7 10 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 1 0 1 106 0 0 4 0 106 0 3 2 9 2 3 9 104 0 6 11 5 5 6 96 0 9 0 11 6 9 11 91 0 2 2 4 83 0 4 4 23 67 10 1 5 5 7 84 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 1 0 1 106 0 0 4 0 106 0 3 2 9 2 3 9 104 0 6 11 5 5 6 96 0 4 0 2 3 4 2 91 0 9 0 11 6 9 11 91 10 1 5 5 7 84 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 1 0 1 106 0 0 4 0 106 0 3 2 9 2 3 9 104 0 6 11 5 5 6 96 0 4 0 2 3 4 2 91 0 9 0 11 6 9 11 91 0 5 5 7 84 8 1 7 7 24 67 0 10 10 7 83 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 1 0 1 106 0 0 4 0 106 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 4 0 2 3 4 2 91 0 9 0 11 6 9 11 91 0 5 5 7 84 8 1 7 7 24 67 0 10 10 7 83 8 1 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
97 95 89 87 82 80 36 36 36 41 40 43 38 38 38 12 24
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(240.667,-11,o),
(291.333,9.333,o),
(334,48,c),
(346,5.333,o),
(377,-11,o),
(413,-11,cs),
(453.198,-11,o),
(490,10.502,o),
(490,65,cs),
(490,82.333,o),
(486.333,98,o),
(469,98,cs),
(450.333,98,o),
(443.333,84,o),
(442,76,cs),
(439.333,58.667,o),
(436.667,49,o),
(422,49,cs),
(412.667,49,o),
(406.667,53.667,o),
(404,63,cs),
(401.333,72.333,o),
(400,92.333,o),
(400,123,cs),
(400,175.168,o),
(403,263.532,o),
(403,267,cs),
(403,397,o),
(344,462,o),
(226,462,cs),
(120.667,462,o),
(55,411,o),
(55,339,cs),
(55,304.333,o),
(70.667,269,o),
(112,269,cs),
(138.667,269,o),
(156,282.333,o),
(156,305,cs),
(156,326.333,o),
(140.333,334.667,o),
(131,336,cs),
(117.667,338.667,o),
(111,340.333,o),
(111,351,cs),
(111,385.189,o),
(179.151,402,o),
(218,402,cs),
(298,402,o),
(333,349,o),
(333,261,cs),
(333,257.667,o),
(332.833,252.5,o),
(332.5,245.5,cs),
(332.167,238.5,o),
(332,231.333,o),
(332,224,cs),
(332,197,l),
(290,227.667,o),
(243.333,243,o),
(192,243,cs),
(91.257,243,o),
(25,183.868,o),
(25,107,cs),
(25,35,o),
(84.667,-11,o),
(178,-11,cs)
);
},
{
closed = 1;
nodes = (
(143.667,49,o),
(96,68,o),
(96,108,cs),
(96,151.941,o),
(149.763,183,o),
(217,183,cs),
(279.159,183,o),
(332,155.557,o),
(332,118,cs),
(332,78.985,o),
(271.753,49,o),
(201,49,cs)
);
},
{
closed = 1;
nodes = (
(214.68,495,o),
(320,594.002,o),
(320,623,cs),
(320,645.667,o),
(301.667,661,o),
(271,661,cs),
(252.565,661,o),
(224.366,626.522,o),
(201,590.5,cs),
(175.182,550.697,o),
(160,517.174,o),
(160,513,cs),
(160,499.667,o),
(174.333,495,o),
(185,495,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
84 1 11 9 71 1 7 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 1 0 1 106 0 0 4 0 106 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 9 0 11 6 9 11 91 0 2 2 4 83 0 4 4 23 67 10 1 5 5 7 83 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 1 0 1 106 0 0 4 0 106 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 4 0 2 3 4 2 92 0 9 0 11 6 9 11 91 10 1 5 5 7 83 8 1 7 7 24 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
99 97 89 87 83 81 36 38 36 40 36 44 39 40 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 468;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(241.667,-11,o),
(292.333,9.333,o),
(335,48,c),
(347,5.333,o),
(378,-11,o),
(414,-11,cs),
(452.667,-11,o),
(481,7.667,o),
(481,65,cs),
(481,79.667,o),
(478.667,88,o),
(468,88,cs),
(462,88,o),
(458.667,84,o),
(458,76,cs),
(455.4,47.399,o),
(453.434,19,o),
(415,19,cs),
(379.663,19,o),
(371,44.439,o),
(371,122,cs),
(371,173.257,o),
(374,262.289,o),
(374,268,cs),
(374,400,o),
(325.333,457,o),
(220,457,cs),
(127.897,457,o),
(56,411.543,o),
(56,339,cs),
(56,304.333,o),
(73.333,276,o),
(104,276,cs),
(126.667,276,o),
(140,291,o),
(140,311,cs),
(140,332.333,o),
(125.667,335.333,o),
(115,338,cs),
(104.333,340.667,o),
(95,342,o),
(95,358,cs),
(95,401.021,o),
(151.734,427,o),
(212,427,cs),
(300,427,o),
(334,368,o),
(334,264,cs),
(334,259.333,o),
(333.833,252.833,o),
(333.5,244.5,cs),
(333.167,236.167,o),
(333,227.667,o),
(333,219,cs),
(333,187,l),
(291.667,219,o),
(244.667,233,o),
(194,233,cs),
(93.633,233,o),
(26,179.745,o),
(26,106,cs),
(26,35.333,o),
(85.667,-11,o),
(179,-11,cs)
);
},
{
closed = 1;
nodes = (
(114.667,19,o),
(67,52.667,o),
(67,106,cs),
(67,164.782,o),
(124.411,203,o),
(199,203,cs),
(271.953,203,o),
(333,166.942,o),
(333,117,cs),
(333,63.726,o),
(261.784,19,o),
(184,19,cs)
);
},
{
closed = 1;
nodes = (
(182.797,510,o),
(270,597.027,o),
(270,618,cs),
(270,636.667,o),
(261.667,640,o),
(251,640,cs),
(230.822,640,o),
(156,545.882,o),
(156,521,cs),
(156,513.667,o),
(158.667,510,o),
(164,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 4 9 57 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 11 10 11 106 0 10 2 10 106 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 11 10 11 106 0 10 2 10 106 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 2 0 0 1 2 0 92 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
103 101 96 94 86 84 37 38 36 36 37 43 38 44 37 12 24
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = aacute;
unicode = 225;
},
{
glyphname = abreve;
kernLeft = a;
kernRight = a;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(291.667,228.333,o),
(252,238,o),
(204,238,cs),
(90.667,238,o),
(24,182,o),
(24,106,cs),
(24,34,o),
(83.667,-11,o),
(177,-11,cs),
(239.667,-11,o),
(292.333,9.333,o),
(335,48,c),
(348.333,1.333,o),
(379.333,-11,o),
(414,-11,cs),
(462,-11,o),
(498,14.333,o),
(498,69,cs),
(498,99.667,o),
(486,108,o),
(466,108,cs),
(439.333,108,o),
(438.333,93.667,o),
(437,79,cs),
(437,72.333,o),
(434.667,67,o),
(428,67,cs),
(423.333,67,o),
(420.667,70.333,o),
(420,77,cs),
(419.333,83.667,o),
(419,99.333,o),
(419,124,cs),
(419,162.781,o),
(423,229.761,o),
(423,269,cs),
(423,394.333,o),
(365.333,465,o),
(236,465,cs),
(125.007,465,o),
(49,410.046,o),
(49,335,cs),
(49,302.796,o),
(62.404,265,o),
(108,265,cs),
(130.667,265,o),
(157,273.667,o),
(157,303,cs),
(157,318.333,o),
(150.333,329,o),
(137,335,cs),
(134.333,336.333,o),
(126,338.333,o),
(126,349,cs),
(126,375.332,o),
(177.562,397,o),
(228,397,cs),
(308.966,397,o),
(333,344.573,o),
(333,261,cs),
(333,203,l),
(333,203,l)
);
},
{
closed = 1;
nodes = (
(116,143.333,o),
(143.333,176,o),
(218,176,cs),
(284.667,176,o),
(329,150,o),
(329,122,cs),
(329,93.079,o),
(288.915,57,o),
(206,57,cs),
(143.333,57,o),
(116,75.333,o),
(116,110,cs)
);
},
{
closed = 1;
nodes = (
(359,615.667,o),
(341,619,o),
(321,619,cs),
(303.667,619,o),
(289,604.667,o),
(289,590,cs),
(289,584.667,o),
(284.5,579.5,o),
(275.5,574.5,cs),
(266.5,569.5,o),
(252.333,567,o),
(233,567,cs),
(202.535,567,o),
(174,574.638,o),
(174,590,cs),
(174,612.667,o),
(160.667,619,o),
(138,619,cs),
(115.333,619,o),
(106,606.333,o),
(106,589,cs),
(106,546.333,o),
(151.333,510,o),
(238,510,cs),
(289.962,510,o),
(359,536.821,o),
(359,589,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 3 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 8 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
13 1 11 12 11 106 0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 12 0 10 2 12 10 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
13 1 11 12 11 106 0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 12 0 10 2 12 10 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
13 1 11 12 11 106 0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 12 0 10 2 12 10 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 69 values pushed */
13 1 11 12 11 106 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 12 0 10 2 12 10 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 84 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
107 105 101 99 93 91 87 85 79 77 37 36 36 36 36 41 40 43 36 14 24
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(290,227.667,o),
(243.333,243,o),
(192,243,cs),
(91.257,243,o),
(25,183.868,o),
(25,107,cs),
(25,35,o),
(84.667,-11,o),
(178,-11,cs),
(240.667,-11,o),
(291.333,9.333,o),
(334,48,c),
(346,5.333,o),
(377,-11,o),
(413,-11,cs),
(453.198,-11,o),
(490,10.502,o),
(490,65,cs),
(490,82.333,o),
(486.333,98,o),
(469,98,cs),
(450.333,98,o),
(443.333,84,o),
(442,76,cs),
(439.333,58.667,o),
(436.667,49,o),
(422,49,cs),
(412.667,49,o),
(406.667,53.667,o),
(404,63,cs),
(401.333,72.333,o),
(400,92.333,o),
(400,123,cs),
(400,175.168,o),
(403,263.532,o),
(403,267,cs),
(403,397,o),
(344,462,o),
(226,462,cs),
(120.667,462,o),
(55,411,o),
(55,339,cs),
(55,304.333,o),
(70.667,269,o),
(112,269,cs),
(138.667,269,o),
(156,282.333,o),
(156,305,cs),
(156,326.333,o),
(140.333,334.667,o),
(131,336,cs),
(117.667,338.667,o),
(111,340.333,o),
(111,351,cs),
(111,385.189,o),
(179.151,402,o),
(218,402,cs),
(298,402,o),
(333,349,o),
(333,261,cs),
(333,257.667,o),
(332.833,252.5,o),
(332.5,245.5,cs),
(332.167,238.5,o),
(332,231.333,o),
(332,224,cs),
(332,197,l),
(332,197,l)
);
},
{
closed = 1;
nodes = (
(96,151.941,o),
(149.763,183,o),
(217,183,cs),
(279.159,183,o),
(332,155.557,o),
(332,118,cs),
(332,78.985,o),
(271.753,49,o),
(201,49,cs),
(143.667,49,o),
(96,68,o),
(96,108,cs)
);
},
{
closed = 1;
nodes = (
(346,616,o),
(329,617,o),
(316,617,cs),
(301,617,o),
(290,605,o),
(290,590,cs),
(290,573,o),
(265,555,o),
(226,555,cs),
(196,555,o),
(161,564,o),
(161,590,cs),
(161,610,o),
(152,617,o),
(133,617,cs),
(116,617,o),
(107,608,o),
(107,589,cs),
(107,548,o),
(153,510,o),
(229,510,cs),
(280,510,o),
(346,537,o),
(346,589,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
67 1 9 7 54 1 5 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 4 9 3 9 4 3 104 0 12 0 10 2 12 10 91 13 1 11 0 1 7 11 1 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 4 9 3 9 4 3 104 0 12 0 10 2 12 10 91 0 2 0 0 1 2 0 91 13 1 11 0 1 7 11 1 91 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
111 109 105 103 97 95 92 90 82 80 36 38 36 38 36 40 36 44 38 14 35
CALL[ ]	/* CallFunction */";
};
width = 468;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(241.667,-11,o),
(292.333,9.333,o),
(335,48,c),
(347,5.333,o),
(378,-11,o),
(414,-11,cs),
(452.667,-11,o),
(481,7.667,o),
(481,65,cs),
(481,79.667,o),
(478.667,88,o),
(468,88,cs),
(462,88,o),
(458.667,84,o),
(458,76,cs),
(455.4,47.399,o),
(453.434,19,o),
(415,19,cs),
(379.663,19,o),
(371,44.439,o),
(371,122,cs),
(371,173.257,o),
(374,262.289,o),
(374,268,cs),
(374,400,o),
(325.333,457,o),
(220,457,cs),
(127.897,457,o),
(56,411.543,o),
(56,339,cs),
(56,304.333,o),
(73.333,276,o),
(104,276,cs),
(126.667,276,o),
(140,291,o),
(140,311,cs),
(140,332.333,o),
(125.667,335.333,o),
(115,338,cs),
(104.333,340.667,o),
(95,342,o),
(95,358,cs),
(95,401.021,o),
(151.734,427,o),
(212,427,cs),
(300,427,o),
(334,368,o),
(334,264,cs),
(334,259.333,o),
(333.833,252.833,o),
(333.5,244.5,cs),
(333.167,236.167,o),
(333,227.667,o),
(333,219,cs),
(333,187,l),
(291.667,219,o),
(244.667,233,o),
(194,233,cs),
(93.633,233,o),
(26,179.745,o),
(26,106,cs),
(26,35.333,o),
(85.667,-11,o),
(179,-11,cs)
);
},
{
closed = 1;
nodes = (
(114.667,19,o),
(67,52.667,o),
(67,106,cs),
(67,164.782,o),
(124.411,203,o),
(199,203,cs),
(271.953,203,o),
(333,166.942,o),
(333,117,cs),
(333,63.726,o),
(261.784,19,o),
(184,19,cs)
);
},
{
closed = 1;
nodes = (
(269.372,510,o),
(327,540.865,o),
(327,589,cs),
(327,610.333,o),
(318.667,613,o),
(308,613,cs),
(296.667,613,o),
(291,605.333,o),
(291,590,cs),
(291,562.695,o),
(251.603,535,o),
(216,535,cs),
(177.333,535,o),
(142,548.667,o),
(142,590,cs),
(142,606,o),
(139.667,613,o),
(125,613,cs),
(113.667,613,o),
(108,605,o),
(108,589,cs),
(108,547.83,o),
(158.193,510,o),
(216,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 4 9 57 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 4 9 3 9 4 3 104 0 12 0 10 2 12 10 91 13 1 11 0 1 7 11 1 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 4 9 3 9 4 3 104 0 12 0 10 2 12 10 91 0 2 0 0 1 2 0 91 13 1 11 0 1 7 11 1 91 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
116 114 109 107 103 101 96 94 86 84 37 38 36 36 37 43 38 44 37 14 24
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = abreve;
unicode = 259;
},
{
glyphname = acircumflex;
kernLeft = a;
kernRight = a;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(291.667,228.333,o),
(252,238,o),
(204,238,cs),
(90.667,238,o),
(24,182,o),
(24,106,cs),
(24,34,o),
(83.667,-11,o),
(177,-11,cs),
(239.667,-11,o),
(292.333,9.333,o),
(335,48,c),
(348.333,1.333,o),
(379.333,-11,o),
(414,-11,cs),
(462,-11,o),
(498,14.333,o),
(498,69,cs),
(498,99.667,o),
(486,108,o),
(466,108,cs),
(439.333,108,o),
(438.333,93.667,o),
(437,79,cs),
(437,72.333,o),
(434.667,67,o),
(428,67,cs),
(423.333,67,o),
(420.667,70.333,o),
(420,77,cs),
(419.333,83.667,o),
(419,99.333,o),
(419,124,cs),
(419,162.781,o),
(423,229.761,o),
(423,269,cs),
(423,394.333,o),
(365.333,465,o),
(236,465,cs),
(125.007,465,o),
(49,410.046,o),
(49,335,cs),
(49,302.796,o),
(62.404,265,o),
(108,265,cs),
(130.667,265,o),
(157,273.667,o),
(157,303,cs),
(157,318.333,o),
(150.333,329,o),
(137,335,cs),
(134.333,336.333,o),
(126,338.333,o),
(126,349,cs),
(126,375.332,o),
(177.562,397,o),
(228,397,cs),
(308.966,397,o),
(333,344.573,o),
(333,261,cs),
(333,203,l),
(333,203,l)
);
},
{
closed = 1;
nodes = (
(116,143.333,o),
(143.333,176,o),
(218,176,cs),
(284.667,176,o),
(329,150,o),
(329,122,cs),
(329,93.079,o),
(288.915,57,o),
(206,57,cs),
(143.333,57,o),
(116,75.333,o),
(116,110,cs)
);
},
{
closed = 1;
nodes = (
(359.333,510,o),
(363,520.333,o),
(363,531,cs),
(363,571.963,o),
(253.877,664,o),
(230,664,cs),
(219,664,o),
(183.897,638.643,o),
(157,613.5,cs),
(126.333,584.833,o),
(98,549.333,o),
(98,524,cs),
(98,517.333,o),
(103,510,o),
(111,510,cs),
(123.064,510,o),
(180.718,545.91,o),
(230,572,c),
(301.614,534.087,o),
(338.803,510,o),
(350,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
86 1 10 12 66 1 9 7 42 1 3 4 54 1 5 3 4 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
86 1 10 12 66 1 9 7 42 1 3 4 54 1 5 8 4 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 12 10 12 106 11 13 2 10 2 10 106 0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 12 10 12 106 11 13 2 10 2 10 106 0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 2 0 0 1 2 0 92 0 7 0 9 4 7 9 91 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 12 10 12 106 11 13 2 10 2 10 106 0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 2 0 0 1 2 0 92 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
0 12 10 12 106 11 13 2 10 2 10 106 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 2 0 0 1 2 0 92 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
82 81 100 98 92 90 81 106 82 106 79 77 37 36 36 36 36 41 40 43 36 14 24
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(290,227.667,o),
(243.333,243,o),
(192,243,cs),
(91.257,243,o),
(25,183.868,o),
(25,107,cs),
(25,35,o),
(84.667,-11,o),
(178,-11,cs),
(240.667,-11,o),
(291.333,9.333,o),
(334,48,c),
(346,5.333,o),
(377,-11,o),
(413,-11,cs),
(453.198,-11,o),
(490,10.502,o),
(490,65,cs),
(490,82.333,o),
(486.333,98,o),
(469,98,cs),
(450.333,98,o),
(443.333,84,o),
(442,76,cs),
(439.333,58.667,o),
(436.667,49,o),
(422,49,cs),
(412.667,49,o),
(406.667,53.667,o),
(404,63,cs),
(401.333,72.333,o),
(400,92.333,o),
(400,123,cs),
(400,175.168,o),
(403,263.532,o),
(403,267,cs),
(403,397,o),
(344,462,o),
(226,462,cs),
(120.667,462,o),
(55,411,o),
(55,339,cs),
(55,304.333,o),
(70.667,269,o),
(112,269,cs),
(138.667,269,o),
(156,282.333,o),
(156,305,cs),
(156,326.333,o),
(140.333,334.667,o),
(131,336,cs),
(117.667,338.667,o),
(111,340.333,o),
(111,351,cs),
(111,385.189,o),
(179.151,402,o),
(218,402,cs),
(298,402,o),
(333,349,o),
(333,261,cs),
(333,257.667,o),
(332.833,252.5,o),
(332.5,245.5,cs),
(332.167,238.5,o),
(332,231.333,o),
(332,224,cs),
(332,197,l),
(332,197,l)
);
},
{
closed = 1;
nodes = (
(96,151.941,o),
(149.763,183,o),
(217,183,cs),
(279.159,183,o),
(332,155.557,o),
(332,118,cs),
(332,78.985,o),
(271.753,49,o),
(201,49,cs),
(143.667,49,o),
(96,68,o),
(96,108,cs)
);
},
{
closed = 1;
nodes = (
(351,510,o),
(354,518,o),
(354,527,cs),
(354,562,o),
(248,655,o),
(223,655,cs),
(201,655,o),
(93,564,o),
(93,523,cs),
(93,514,o),
(97,510,o),
(104,510,cs),
(119,510,o),
(150,538,o),
(223,581,c),
(236,573,o),
(330,510,o),
(343,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
91 1 10 12 67 1 9 7 54 1 5 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 12 10 12 106 11 13 2 10 2 10 106 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 12 10 12 106 11 13 2 10 2 10 106 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 2 0 0 1 2 0 92 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
87 86 104 102 97 95 86 110 87 110 82 80 36 38 36 38 36 40 36 44 38 14 35
CALL[ ]	/* CallFunction */";
};
width = 468;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(241.667,-11,o),
(292.333,9.333,o),
(335,48,c),
(347,5.333,o),
(378,-11,o),
(414,-11,cs),
(452.667,-11,o),
(481,7.667,o),
(481,65,cs),
(481,79.667,o),
(478.667,88,o),
(468,88,cs),
(462,88,o),
(458.667,84,o),
(458,76,cs),
(455.4,47.399,o),
(453.434,19,o),
(415,19,cs),
(379.663,19,o),
(371,44.439,o),
(371,122,cs),
(371,173.257,o),
(374,262.289,o),
(374,268,cs),
(374,400,o),
(325.333,457,o),
(220,457,cs),
(127.897,457,o),
(56,411.543,o),
(56,339,cs),
(56,304.333,o),
(73.333,276,o),
(104,276,cs),
(126.667,276,o),
(140,291,o),
(140,311,cs),
(140,332.333,o),
(125.667,335.333,o),
(115,338,cs),
(104.333,340.667,o),
(95,342,o),
(95,358,cs),
(95,401.021,o),
(151.734,427,o),
(212,427,cs),
(300,427,o),
(334,368,o),
(334,264,cs),
(334,259.333,o),
(333.833,252.833,o),
(333.5,244.5,cs),
(333.167,236.167,o),
(333,227.667,o),
(333,219,cs),
(333,187,l),
(291.667,219,o),
(244.667,233,o),
(194,233,cs),
(93.633,233,o),
(26,179.745,o),
(26,106,cs),
(26,35.333,o),
(85.667,-11,o),
(179,-11,cs)
);
},
{
closed = 1;
nodes = (
(114.667,19,o),
(67,52.667,o),
(67,106,cs),
(67,164.782,o),
(124.411,203,o),
(199,203,cs),
(271.953,203,o),
(333,166.942,o),
(333,117,cs),
(333,63.726,o),
(261.784,19,o),
(184,19,cs)
);
},
{
closed = 1;
nodes = (
(108.084,510,o),
(160.433,558.894,o),
(213,596,c),
(289.411,542.063,o),
(318.302,510,o),
(333,510,cs),
(338.333,510,o),
(341,513.667,o),
(341,521,cs),
(341,546.329,o),
(237.852,640,o),
(213,640,cs),
(189.626,640,o),
(86,545.933,o),
(86,521,cs),
(86,513.667,o),
(88.667,510,o),
(94,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
95 1 10 12 71 1 4 9 57 1 3 4 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 12 10 12 106 11 13 2 10 2 10 106 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 12 10 12 106 11 13 2 10 2 10 106 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 2 0 0 1 2 0 92 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
91 90 108 106 101 99 90 113 91 113 86 84 37 38 36 36 37 43 38 44 37 14 24
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = acircumflex;
unicode = 226;
},
{
glyphname = adieresis;
kernLeft = a;
kernRight = a;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(291.667,228.333,o),
(252,238,o),
(204,238,cs),
(90.667,238,o),
(24,182,o),
(24,106,cs),
(24,34,o),
(83.667,-11,o),
(177,-11,cs),
(239.667,-11,o),
(292.333,9.333,o),
(335,48,c),
(348.333,1.333,o),
(379.333,-11,o),
(414,-11,cs),
(462,-11,o),
(498,14.333,o),
(498,69,cs),
(498,99.667,o),
(486,108,o),
(466,108,cs),
(439.333,108,o),
(438.333,93.667,o),
(437,79,cs),
(437,72.333,o),
(434.667,67,o),
(428,67,cs),
(423.333,67,o),
(420.667,70.333,o),
(420,77,cs),
(419.333,83.667,o),
(419,99.333,o),
(419,124,cs),
(419,162.781,o),
(423,229.761,o),
(423,269,cs),
(423,394.333,o),
(365.333,465,o),
(236,465,cs),
(125.007,465,o),
(49,410.046,o),
(49,335,cs),
(49,302.796,o),
(62.404,265,o),
(108,265,cs),
(130.667,265,o),
(157,273.667,o),
(157,303,cs),
(157,318.333,o),
(150.333,329,o),
(137,335,cs),
(134.333,336.333,o),
(126,338.333,o),
(126,349,cs),
(126,375.332,o),
(177.562,397,o),
(228,397,cs),
(308.966,397,o),
(333,344.573,o),
(333,261,cs),
(333,203,l),
(333,203,l)
);
},
{
closed = 1;
nodes = (
(116,143.333,o),
(143.333,176,o),
(218,176,cs),
(284.667,176,o),
(329,150,o),
(329,122,cs),
(329,93.079,o),
(288.915,57,o),
(206,57,cs),
(143.333,57,o),
(116,75.333,o),
(116,110,cs)
);
},
{
closed = 1;
nodes = (
(73,536.333,o),
(98.667,509,o),
(132,509,cs),
(161.675,509,o),
(199,523.646,o),
(199,579,cs),
(199,615,o),
(171,640,o),
(139,640,cs),
(92.034,640,o),
(73,598.847,o),
(73,575,cs)
);
},
{
closed = 1;
nodes = (
(280,513.333,o),
(305.667,486,o),
(339,486,cs),
(368.675,486,o),
(406,500.646,o),
(406,556,cs),
(406,592,o),
(378,617,o),
(346,617,cs),
(299.034,617,o),
(280,575.847,o),
(280,552,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 3 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 8 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 10 0 11 13 10 11 91 0 12 0 13 2 12 13 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 10 0 11 13 10 11 91 0 12 0 13 2 12 13 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 10 0 11 13 10 11 91 0 12 0 13 2 12 13 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 71 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 10 0 11 13 10 11 91 0 12 0 13 2 12 13 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
111 109 103 101 95 93 87 85 79 77 37 36 36 36 36 41 40 43 36 14 24
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(290,227.667,o),
(243.333,243,o),
(192,243,cs),
(91.257,243,o),
(25,183.868,o),
(25,107,cs),
(25,35,o),
(84.667,-11,o),
(178,-11,cs),
(240.667,-11,o),
(291.333,9.333,o),
(334,48,c),
(346,5.333,o),
(377,-11,o),
(413,-11,cs),
(453.198,-11,o),
(490,10.502,o),
(490,65,cs),
(490,82.333,o),
(486.333,98,o),
(469,98,cs),
(450.333,98,o),
(443.333,84,o),
(442,76,cs),
(439.333,58.667,o),
(436.667,49,o),
(422,49,cs),
(412.667,49,o),
(406.667,53.667,o),
(404,63,cs),
(401.333,72.333,o),
(400,92.333,o),
(400,123,cs),
(400,175.168,o),
(403,263.532,o),
(403,267,cs),
(403,397,o),
(344,462,o),
(226,462,cs),
(120.667,462,o),
(55,411,o),
(55,339,cs),
(55,304.333,o),
(70.667,269,o),
(112,269,cs),
(138.667,269,o),
(156,282.333,o),
(156,305,cs),
(156,326.333,o),
(140.333,334.667,o),
(131,336,cs),
(117.667,338.667,o),
(111,340.333,o),
(111,351,cs),
(111,385.189,o),
(179.151,402,o),
(218,402,cs),
(298,402,o),
(333,349,o),
(333,261,cs),
(333,257.667,o),
(332.833,252.5,o),
(332.5,245.5,cs),
(332.167,238.5,o),
(332,231.333,o),
(332,224,cs),
(332,197,l),
(332,197,l)
);
},
{
closed = 1;
nodes = (
(96,151.941,o),
(149.763,183,o),
(217,183,cs),
(279.159,183,o),
(332,155.557,o),
(332,118,cs),
(332,78.985,o),
(271.753,49,o),
(201,49,cs),
(143.667,49,o),
(96,68,o),
(96,108,cs)
);
},
{
closed = 1;
nodes = (
(73,542,o),
(95,518,o),
(122,518,cs),
(147,518,o),
(178,531,o),
(178,579,cs),
(178,610,o),
(156,631,o),
(129,631,cs),
(91,631,o),
(73,596,o),
(73,575,cs)
);
},
{
closed = 1;
nodes = (
(280,519,o),
(302,495,o),
(329,495,cs),
(354,495,o),
(385,508,o),
(385,556,cs),
(385,587,o),
(363,608,o),
(336,608,cs),
(298,608,o),
(280,573,o),
(280,552,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
67 1 9 7 54 1 5 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 10 0 11 13 10 11 91 0 12 0 13 2 12 13 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 10 0 11 13 10 11 91 0 12 0 13 2 12 13 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
112 110 106 104 98 96 92 90 82 80 36 38 36 38 36 40 36 44 38 14 35
CALL[ ]	/* CallFunction */";
};
width = 468;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(241.667,-11,o),
(292.333,9.333,o),
(335,48,c),
(347,5.333,o),
(378,-11,o),
(414,-11,cs),
(452.667,-11,o),
(481,7.667,o),
(481,65,cs),
(481,79.667,o),
(478.667,88,o),
(468,88,cs),
(462,88,o),
(458.667,84,o),
(458,76,cs),
(455.4,47.399,o),
(453.434,19,o),
(415,19,cs),
(379.663,19,o),
(371,44.439,o),
(371,122,cs),
(371,173.257,o),
(374,262.289,o),
(374,268,cs),
(374,400,o),
(325.333,457,o),
(220,457,cs),
(127.897,457,o),
(56,411.543,o),
(56,339,cs),
(56,304.333,o),
(73.333,276,o),
(104,276,cs),
(126.667,276,o),
(140,291,o),
(140,311,cs),
(140,332.333,o),
(125.667,335.333,o),
(115,338,cs),
(104.333,340.667,o),
(95,342,o),
(95,358,cs),
(95,401.021,o),
(151.734,427,o),
(212,427,cs),
(300,427,o),
(334,368,o),
(334,264,cs),
(334,259.333,o),
(333.833,252.833,o),
(333.5,244.5,cs),
(333.167,236.167,o),
(333,227.667,o),
(333,219,cs),
(333,187,l),
(291.667,219,o),
(244.667,233,o),
(194,233,cs),
(93.633,233,o),
(26,179.745,o),
(26,106,cs),
(26,35.333,o),
(85.667,-11,o),
(179,-11,cs)
);
},
{
closed = 1;
nodes = (
(114.667,19,o),
(67,52.667,o),
(67,106,cs),
(67,164.782,o),
(124.411,203,o),
(199,203,cs),
(271.953,203,o),
(333,166.942,o),
(333,117,cs),
(333,63.726,o),
(261.784,19,o),
(184,19,cs)
);
},
{
closed = 1;
nodes = (
(126.667,533,o),
(149,543,o),
(149,579,cs),
(149,601.667,o),
(133.667,616,o),
(115,616,cs),
(87.258,616,o),
(74,588.895,o),
(74,575,cs),
(74,551,o),
(89.333,533,o),
(108,533,cs)
);
},
{
closed = 1;
nodes = (
(333.667,510,o),
(356,520,o),
(356,556,cs),
(356,578.667,o),
(340.667,593,o),
(322,593,cs),
(294.258,593,o),
(281,565.895,o),
(281,552,cs),
(281,528,o),
(296.333,510,o),
(315,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 4 9 57 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 10 0 11 13 10 11 91 0 12 0 13 2 12 13 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 10 0 11 13 10 11 91 0 12 0 13 2 12 13 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
116 114 110 108 102 100 96 94 86 84 37 38 36 36 37 43 38 44 37 14 24
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = adieresis;
unicode = 228;
},
{
glyphname = agrave;
kernLeft = a;
kernRight = a;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(160,592.193,o),
(277.363,486,o),
(315,486,cs),
(329.667,486,o),
(352,493.333,o),
(352,508,cs),
(352,512.988,o),
(330.489,559.783,o),
(310,594.5,cs),
(286,635.167,o),
(255.333,674,o),
(230,674,cs),
(187.333,672.667,o),
(160,651.333,o),
(160,626,cs)
);
},
{
closed = 1;
nodes = (
(291.667,228.333,o),
(252,238,o),
(204,238,cs),
(90.667,238,o),
(24,182,o),
(24,106,cs),
(24,34,o),
(83.667,-11,o),
(177,-11,cs),
(239.667,-11,o),
(292.333,9.333,o),
(335,48,c),
(348.333,1.333,o),
(379.333,-11,o),
(414,-11,cs),
(462,-11,o),
(498,14.333,o),
(498,69,cs),
(498,99.667,o),
(486,108,o),
(466,108,cs),
(439.333,108,o),
(438.333,93.667,o),
(437,79,cs),
(437,72.333,o),
(434.667,67,o),
(428,67,cs),
(423.333,67,o),
(420.667,70.333,o),
(420,77,cs),
(419.333,83.667,o),
(419,99.333,o),
(419,124,cs),
(419,162.781,o),
(423,229.761,o),
(423,269,cs),
(423,394.333,o),
(365.333,465,o),
(236,465,cs),
(125.007,465,o),
(49,410.046,o),
(49,335,cs),
(49,302.796,o),
(62.404,265,o),
(108,265,cs),
(130.667,265,o),
(157,273.667,o),
(157,303,cs),
(157,318.333,o),
(150.333,329,o),
(137,335,cs),
(134.333,336.333,o),
(126,338.333,o),
(126,349,cs),
(126,375.332,o),
(177.562,397,o),
(228,397,cs),
(308.966,397,o),
(333,344.573,o),
(333,261,cs),
(333,203,l),
(333,203,l)
);
},
{
closed = 1;
nodes = (
(116,143.333,o),
(143.333,176,o),
(218,176,cs),
(284.667,176,o),
(329,150,o),
(329,122,cs),
(329,93.079,o),
(288.915,57,o),
(206,57,cs),
(143.333,57,o),
(116,75.333,o),
(116,110,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
82 1 11 9 58 1 5 6 70 1 7 5 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
82 1 11 9 58 1 5 6 70 1 7 10 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 0 1 0 106 0 1 4 1 106 0 3 2 9 2 3 9 104 0 6 11 5 5 6 96 0 9 0 11 6 9 11 91 0 2 2 4 83 0 4 4 23 67 10 1 5 5 7 84 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 0 1 0 106 0 1 4 1 106 0 3 2 9 2 3 9 104 0 6 11 5 5 6 96 0 4 0 2 3 4 2 92 0 9 0 11 6 9 11 91 10 1 5 5 7 84 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 0 1 0 106 0 1 4 1 106 0 3 2 9 2 3 9 104 0 6 11 5 5 6 96 0 4 0 2 3 4 2 92 0 9 0 11 6 9 11 91 0 5 5 7 84 8 1 7 7 24 67 0 10 10 7 83 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 0 1 0 106 0 1 4 1 106 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 4 0 2 3 4 2 92 0 9 0 11 6 9 11 91 0 5 5 7 84 8 1 7 7 24 67 0 10 10 7 83 8 1 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
95 93 87 85 80 78 36 36 36 41 40 43 40 38 34 12 24
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(160,594.002,o),
(265.32,495,o),
(295,495,cs),
(305.667,495,o),
(320,499.667,o),
(320,513,cs),
(320,518.525,o),
(304.921,547.997,o),
(278.5,590.5,cs),
(256.1,626.535,o),
(226.529,661,o),
(209,661,cs),
(178.333,661,o),
(160,645.667,o),
(160,623,cs)
);
},
{
closed = 1;
nodes = (
(290,227.667,o),
(243.333,243,o),
(192,243,cs),
(91.257,243,o),
(25,183.868,o),
(25,107,cs),
(25,35,o),
(84.667,-11,o),
(178,-11,cs),
(240.667,-11,o),
(291.333,9.333,o),
(334,48,c),
(346,5.333,o),
(377,-11,o),
(413,-11,cs),
(453.198,-11,o),
(490,10.502,o),
(490,65,cs),
(490,82.333,o),
(486.333,98,o),
(469,98,cs),
(450.333,98,o),
(443.333,84,o),
(442,76,cs),
(439.333,58.667,o),
(436.667,49,o),
(422,49,cs),
(412.667,49,o),
(406.667,53.667,o),
(404,63,cs),
(401.333,72.333,o),
(400,92.333,o),
(400,123,cs),
(400,175.168,o),
(403,263.532,o),
(403,267,cs),
(403,397,o),
(344,462,o),
(226,462,cs),
(120.667,462,o),
(55,411,o),
(55,339,cs),
(55,304.333,o),
(70.667,269,o),
(112,269,cs),
(138.667,269,o),
(156,282.333,o),
(156,305,cs),
(156,326.333,o),
(140.333,334.667,o),
(131,336,cs),
(117.667,338.667,o),
(111,340.333,o),
(111,351,cs),
(111,385.189,o),
(179.151,402,o),
(218,402,cs),
(298,402,o),
(333,349,o),
(333,261,cs),
(333,257.667,o),
(332.833,252.5,o),
(332.5,245.5,cs),
(332.167,238.5,o),
(332,231.333,o),
(332,224,cs),
(332,197,l),
(332,197,l)
);
},
{
closed = 1;
nodes = (
(96,151.941,o),
(149.763,183,o),
(217,183,cs),
(279.159,183,o),
(332,155.557,o),
(332,118,cs),
(332,78.985,o),
(271.753,49,o),
(201,49,cs),
(143.667,49,o),
(96,68,o),
(96,108,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
84 1 11 9 71 1 7 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 0 1 0 106 0 1 4 1 106 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 9 0 11 6 9 11 91 0 2 2 4 83 0 4 4 23 67 10 1 5 5 7 83 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 0 1 0 106 0 1 4 1 106 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 4 0 2 3 4 2 92 0 9 0 11 6 9 11 91 10 1 5 5 7 83 8 1 7 7 24 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
99 97 89 87 83 81 36 38 36 40 36 44 41 40 34 12 24
CALL[ ]	/* CallFunction */";
};
width = 468;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(241.667,-11,o),
(292.333,9.333,o),
(335,48,c),
(347,5.333,o),
(378,-11,o),
(414,-11,cs),
(452.667,-11,o),
(481,7.667,o),
(481,65,cs),
(481,79.667,o),
(478.667,88,o),
(468,88,cs),
(462,88,o),
(458.667,84,o),
(458,76,cs),
(455.4,47.399,o),
(453.434,19,o),
(415,19,cs),
(379.663,19,o),
(371,44.439,o),
(371,122,cs),
(371,173.257,o),
(374,262.289,o),
(374,268,cs),
(374,400,o),
(325.333,457,o),
(220,457,cs),
(127.897,457,o),
(56,411.543,o),
(56,339,cs),
(56,304.333,o),
(73.333,276,o),
(104,276,cs),
(126.667,276,o),
(140,291,o),
(140,311,cs),
(140,332.333,o),
(125.667,335.333,o),
(115,338,cs),
(104.333,340.667,o),
(95,342,o),
(95,358,cs),
(95,401.021,o),
(151.734,427,o),
(212,427,cs),
(300,427,o),
(334,368,o),
(334,264,cs),
(334,259.333,o),
(333.833,252.833,o),
(333.5,244.5,cs),
(333.167,236.167,o),
(333,227.667,o),
(333,219,cs),
(333,187,l),
(291.667,219,o),
(244.667,233,o),
(194,233,cs),
(93.633,233,o),
(26,179.745,o),
(26,106,cs),
(26,35.333,o),
(85.667,-11,o),
(179,-11,cs)
);
},
{
closed = 1;
nodes = (
(114.667,19,o),
(67,52.667,o),
(67,106,cs),
(67,164.782,o),
(124.411,203,o),
(199,203,cs),
(271.953,203,o),
(333,166.942,o),
(333,117,cs),
(333,63.726,o),
(261.784,19,o),
(184,19,cs)
);
},
{
closed = 1;
nodes = (
(268.333,510,o),
(271,513.667,o),
(271,521,cs),
(271,545.882,o),
(196.178,640,o),
(176,640,cs),
(165.333,640,o),
(157,636.667,o),
(157,618,cs),
(157,597.027,o),
(244.203,510,o),
(263,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 4 9 57 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 10 11 10 106 0 11 2 11 106 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 7 0 9 4 7 9 92 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 10 11 10 106 0 11 2 11 106 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 92 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
101 99 94 92 86 84 37 38 36 36 37 43 38 44 37 12 24
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = agrave;
unicode = 224;
},
{
glyphname = amacron;
kernLeft = a;
kernRight = a;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(291.667,228.333,o),
(252,238,o),
(204,238,cs),
(90.667,238,o),
(24,182,o),
(24,106,cs),
(24,34,o),
(83.667,-11,o),
(177,-11,cs),
(239.667,-11,o),
(292.333,9.333,o),
(335,48,c),
(348.333,1.333,o),
(379.333,-11,o),
(414,-11,cs),
(462,-11,o),
(498,14.333,o),
(498,69,cs),
(498,99.667,o),
(486,108,o),
(466,108,cs),
(439.333,108,o),
(438.333,93.667,o),
(437,79,cs),
(437,72.333,o),
(434.667,67,o),
(428,67,cs),
(423.333,67,o),
(420.667,70.333,o),
(420,77,cs),
(419.333,83.667,o),
(419,99.333,o),
(419,124,cs),
(419,162.781,o),
(423,229.761,o),
(423,269,cs),
(423,394.333,o),
(365.333,465,o),
(236,465,cs),
(125.007,465,o),
(49,410.046,o),
(49,335,cs),
(49,302.796,o),
(62.404,265,o),
(108,265,cs),
(130.667,265,o),
(157,273.667,o),
(157,303,cs),
(157,318.333,o),
(150.333,329,o),
(137,335,cs),
(134.333,336.333,o),
(126,338.333,o),
(126,349,cs),
(126,375.332,o),
(177.562,397,o),
(228,397,cs),
(308.966,397,o),
(333,344.573,o),
(333,261,cs),
(333,203,l),
(333,203,l)
);
},
{
closed = 1;
nodes = (
(116,143.333,o),
(143.333,176,o),
(218,176,cs),
(284.667,176,o),
(329,150,o),
(329,122,cs),
(329,93.079,o),
(288.915,57,o),
(206,57,cs),
(143.333,57,o),
(116,75.333,o),
(116,110,cs)
);
},
{
closed = 1;
nodes = (
(353,619,o),
(334.667,618.5,o),
(314,617.5,cs),
(293.333,616.5,o),
(269,616,o),
(241,616,cs),
(198.698,616,o),
(150.437,618,o),
(120,618,cs),
(97.333,618,o),
(87,597.667,o),
(87,579,cs),
(87,560.333,o),
(101.333,539,o),
(120,539,cs),
(190.305,539,o),
(287.446,540,o),
(361,540,cs),
(389.782,540,o),
(397,566.801,o),
(397,582,cs),
(397,602,o),
(383.667,619,o),
(369,619,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 3 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 8 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 12 1 10 0 11 2 10 11 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 12 1 10 0 11 2 10 11 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 12 1 10 0 11 2 10 11 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 12 1 10 0 11 2 10 11 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
82 81 95 88 81 107 82 99 79 77 37 36 36 36 36 41 40 43 36 13 24
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(290,227.667,o),
(243.333,243,o),
(192,243,cs),
(91.257,243,o),
(25,183.868,o),
(25,107,cs),
(25,35,o),
(84.667,-11,o),
(178,-11,cs),
(240.667,-11,o),
(291.333,9.333,o),
(334,48,c),
(346,5.333,o),
(377,-11,o),
(413,-11,cs),
(453.198,-11,o),
(490,10.502,o),
(490,65,cs),
(490,82.333,o),
(486.333,98,o),
(469,98,cs),
(450.333,98,o),
(443.333,84,o),
(442,76,cs),
(439.333,58.667,o),
(436.667,49,o),
(422,49,cs),
(412.667,49,o),
(406.667,53.667,o),
(404,63,cs),
(401.333,72.333,o),
(400,92.333,o),
(400,123,cs),
(400,175.168,o),
(403,263.532,o),
(403,267,cs),
(403,397,o),
(344,462,o),
(226,462,cs),
(120.667,462,o),
(55,411,o),
(55,339,cs),
(55,304.333,o),
(70.667,269,o),
(112,269,cs),
(138.667,269,o),
(156,282.333,o),
(156,305,cs),
(156,326.333,o),
(140.333,334.667,o),
(131,336,cs),
(117.667,338.667,o),
(111,340.333,o),
(111,351,cs),
(111,385.189,o),
(179.151,402,o),
(218,402,cs),
(298,402,o),
(333,349,o),
(333,261,cs),
(333,257.667,o),
(332.833,252.5,o),
(332.5,245.5,cs),
(332.167,238.5,o),
(332,231.333,o),
(332,224,cs),
(332,197,l),
(332,197,l)
);
},
{
closed = 1;
nodes = (
(96,151.941,o),
(149.763,183,o),
(217,183,cs),
(279.159,183,o),
(332,155.557,o),
(332,118,cs),
(332,78.985,o),
(271.753,49,o),
(201,49,cs),
(143.667,49,o),
(96,68,o),
(96,108,cs)
);
},
{
closed = 1;
nodes = (
(347,588,o),
(329,588,o),
(308,587,cs),
(287,586,o),
(263,585,o),
(235,585,cs),
(193,585,o),
(144,587,o),
(114,587,cs),
(95,587,o),
(88,572,o),
(88,557,cs),
(88,542,o),
(99,526,o),
(114,526,cs),
(184,526,o),
(281,527,o),
(355,527,cs),
(378,527,o),
(384,549,o),
(384,560,cs),
(384,575,o),
(374,588,o),
(363,588,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
67 1 9 7 54 1 5 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 12 1 10 0 11 2 10 11 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 12 1 10 0 11 2 10 11 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
87 86 98 91 86 110 87 102 82 80 36 38 36 38 36 40 36 44 38 13 35
CALL[ ]	/* CallFunction */";
};
width = 468;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(241.667,-11,o),
(292.333,9.333,o),
(335,48,c),
(347,5.333,o),
(378,-11,o),
(414,-11,cs),
(452.667,-11,o),
(481,7.667,o),
(481,65,cs),
(481,79.667,o),
(478.667,88,o),
(468,88,cs),
(462,88,o),
(458.667,84,o),
(458,76,cs),
(455.4,47.399,o),
(453.434,19,o),
(415,19,cs),
(379.663,19,o),
(371,44.439,o),
(371,122,cs),
(371,173.257,o),
(374,262.289,o),
(374,268,cs),
(374,400,o),
(325.333,457,o),
(220,457,cs),
(127.897,457,o),
(56,411.543,o),
(56,339,cs),
(56,304.333,o),
(73.333,276,o),
(104,276,cs),
(126.667,276,o),
(140,291,o),
(140,311,cs),
(140,332.333,o),
(125.667,335.333,o),
(115,338,cs),
(104.333,340.667,o),
(95,342,o),
(95,358,cs),
(95,401.021,o),
(151.734,427,o),
(212,427,cs),
(300,427,o),
(334,368,o),
(334,264,cs),
(334,259.333,o),
(333.833,252.833,o),
(333.5,244.5,cs),
(333.167,236.167,o),
(333,227.667,o),
(333,219,cs),
(333,187,l),
(291.667,219,o),
(244.667,233,o),
(194,233,cs),
(93.633,233,o),
(26,179.745,o),
(26,106,cs),
(26,35.333,o),
(85.667,-11,o),
(179,-11,cs)
);
},
{
closed = 1;
nodes = (
(114.667,19,o),
(67,52.667,o),
(67,106,cs),
(67,164.782,o),
(124.411,203,o),
(199,203,cs),
(271.953,203,o),
(333,166.942,o),
(333,117,cs),
(333,63.726,o),
(261.784,19,o),
(184,19,cs)
);
},
{
closed = 1;
nodes = (
(175.305,510,o),
(272.446,511,o),
(346,511,cs),
(360.667,511,o),
(365,522.333,o),
(365,529,cs),
(365,535.667,o),
(359.333,542,o),
(354,542,cs),
(338,542,o),
(319.667,541.5,o),
(299,540.5,cs),
(278.333,539.5,o),
(254,539,o),
(226,539,cs),
(183.698,539,o),
(135.437,541,o),
(105,541,cs),
(94.333,541,o),
(89,532.667,o),
(89,526,cs),
(89,519.333,o),
(95.667,510,o),
(105,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 4 9 57 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 12 1 10 0 11 2 10 11 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 12 1 10 0 11 2 10 11 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
91 90 102 95 90 114 91 106 86 84 37 38 36 36 37 43 38 44 37 13 24
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = amacron;
unicode = 257;
},
{
glyphname = aogonek;
kernLeft = a;
kernRight = a;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(481.345,-162,o),
(512,-132.646,o),
(512,-109,cs),
(512,-97,o),
(500.333,-85,o),
(487,-85,cs),
(467.449,-85,o),
(468.136,-109,o),
(427,-109,cs),
(412.333,-109,o),
(398,-102.667,o),
(398,-88,cs),
(398,-62.667,o),
(411.667,-26.333,o),
(437,-9,c),
(473,-1,o),
(498,23.667,o),
(498,69,cs),
(498,99.667,o),
(486,108,o),
(466,108,cs),
(439.333,108,o),
(438.333,93.667,o),
(437,79,cs),
(437,72.333,o),
(434.667,67,o),
(428,67,cs),
(423.333,67,o),
(420.667,70.333,o),
(420,77,cs),
(419.333,83.667,o),
(419,99.333,o),
(419,124,cs),
(419,162.781,o),
(423,229.761,o),
(423,269,cs),
(423,394.333,o),
(365.333,465,o),
(236,465,cs),
(125.007,465,o),
(49,410.046,o),
(49,335,cs),
(49,302.796,o),
(62.404,265,o),
(108,265,cs),
(130.667,265,o),
(157,273.667,o),
(157,303,cs),
(157,318.333,o),
(150.333,329,o),
(137,335,cs),
(134.333,336.333,o),
(126,338.333,o),
(126,349,cs),
(126,375.332,o),
(177.562,397,o),
(228,397,cs),
(308.966,397,o),
(333,344.573,o),
(333,261,cs),
(333,203,l),
(291.667,228.333,o),
(252,238,o),
(204,238,cs),
(90.667,238,o),
(24,182,o),
(24,106,cs),
(24,34,o),
(83.667,-11,o),
(177,-11,cs),
(239.667,-11,o),
(292.333,9.333,o),
(335,48,c),
(344.333,16,o),
(361.667,0.667,o),
(383,-6,c),
(357.922,-19.932,o),
(319,-45.271,o),
(319,-87,cs),
(319,-138.579,o),
(379.091,-162,o),
(429,-162,cs)
);
},
{
closed = 1;
nodes = (
(116,143.333,o),
(143.333,176,o),
(218,176,cs),
(284.667,176,o),
(329,150,o),
(329,122,cs),
(329,93.079,o),
(288.915,57,o),
(206,57,cs),
(143.333,57,o),
(116,75.333,o),
(116,110,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
25 1 11 2 68 1 6 7 13 10 2 1 6 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
25 1 11 2 68 1 6 7 13 10 2 1 10 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 4 3 2 3 4 2 104 0 7 11 6 11 7 6 104 0 9 1 8 1 9 8 104 0 2 0 11 7 2 11 91 0 8 12 1 0 8 0 88 0 3 3 5 83 0 5 5 23 67 10 1 6 6 1 83 0 1 1 24 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 4 3 2 3 4 2 104 0 7 11 6 11 7 6 104 0 9 1 8 1 9 8 104 0 5 0 3 4 5 3 91 0 2 0 11 7 2 11 91 0 8 12 1 0 8 0 88 10 1 6 6 1 83 0 1 1 24 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
0 4 3 2 3 4 2 104 0 7 11 6 11 7 6 104 0 6 10 11 6 10 102 0 9 1 8 1 9 8 104 0 5 0 3 4 5 3 91 0 2 0 11 7 2 11 91 0 8 12 1 0 8 0 88 0 10 10 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 108 106 100 98 89 87 84 82 72 70 66 64 55 53 45 43 32 30 23 21 17 15 0 95 1 95 13 15
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(290,227.667,o),
(243.333,243,o),
(192,243,cs),
(91.257,243,o),
(25,183.868,o),
(25,107,cs),
(25,35,o),
(84.667,-11,o),
(178,-11,cs),
(240.667,-11,o),
(291.333,9.333,o),
(334,48,c),
(346,5.333,o),
(377,-11,o),
(413,-11,cs),
(453.198,-11,o),
(490,10.502,o),
(490,65,cs),
(490,82.333,o),
(486.333,98,o),
(469,98,cs),
(450.333,98,o),
(443.333,84,o),
(442,76,cs),
(439.333,58.667,o),
(436.667,49,o),
(422,49,cs),
(412.667,49,o),
(406.667,53.667,o),
(404,63,cs),
(401.333,72.333,o),
(400,92.333,o),
(400,123,cs),
(400,175.168,o),
(403,263.532,o),
(403,267,cs),
(403,397,o),
(344,462,o),
(226,462,cs),
(120.667,462,o),
(55,411,o),
(55,339,cs),
(55,304.333,o),
(70.667,269,o),
(112,269,cs),
(138.667,269,o),
(156,282.333,o),
(156,305,cs),
(156,326.333,o),
(140.333,334.667,o),
(131,336,cs),
(117.667,338.667,o),
(111,340.333,o),
(111,351,cs),
(111,385.189,o),
(179.151,402,o),
(218,402,cs),
(298,402,o),
(333,349,o),
(333,261,cs),
(333,257.667,o),
(332.833,252.5,o),
(332.5,245.5,cs),
(332.167,238.5,o),
(332,231.333,o),
(332,224,cs),
(332,197,l),
(332,197,l)
);
},
{
closed = 1;
nodes = (
(96,151.941,o),
(149.763,183,o),
(217,183,cs),
(279.159,183,o),
(332,155.557,o),
(332,118,cs),
(332,78.985,o),
(271.753,49,o),
(201,49,cs),
(143.667,49,o),
(96,68,o),
(96,108,cs)
);
},
{
closed = 1;
nodes = (
(398,-7,o),
(386,-14,o),
(375,-23,cs),
(356,-38,o),
(339,-59,o),
(339,-90,cs),
(339,-133,o),
(381,-163,o),
(440,-163,cs),
(488,-163,o),
(518,-122,o),
(518,-112,cs),
(518,-101,o),
(512,-90,o),
(497,-90,cs),
(493,-90,o),
(489,-92,o),
(484,-96,cs),
(479,-101,o),
(473,-106,o),
(468,-111,cs),
(462,-117,o),
(451,-120,o),
(434,-120,cs),
(418,-120,o),
(403,-105,o),
(403,-89,cs),
(403,-70,o),
(417,-16,o),
(462,-1,c),
(412,0,l),
(412,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
67 1 9 7 54 1 13 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 11 5 10 5 11 10 104 0 7 0 9 4 7 9 91 0 10 0 12 10 12 88 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 67 14 1 13 13 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 72 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 11 5 10 5 11 10 104 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 10 0 12 10 12 88 8 1 3 3 5 83 6 1 5 5 24 67 14 1 13 13 5 84 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
86 86 86 115 86 115 108 106 100 98 95 93 82 80 36 38 36 38 36 40 36 44 38 15 35
CALL[ ]	/* CallFunction */";
};
width = 468;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(473.13,-164,o),
(503,-122.791,o),
(503,-113,cs),
(503,-105,o),
(501,-97,o),
(489,-97,cs),
(469.96,-97,o),
(463.683,-137,o),
(427,-137,cs),
(396.028,-137,o),
(388,-107.466,o),
(388,-90,cs),
(388,-71.577,o),
(398.831,-28.796,o),
(431,-9,c),
(461.667,-3.667,o),
(481,17,o),
(481,65,cs),
(481,79.667,o),
(478.667,88,o),
(468,88,cs),
(462,88,o),
(458.667,84,o),
(458,76,cs),
(455.4,47.399,o),
(453.434,19,o),
(415,19,cs),
(379.663,19,o),
(371,44.439,o),
(371,122,cs),
(371,173.257,o),
(374,262.289,o),
(374,268,cs),
(374,400,o),
(325.333,457,o),
(220,457,cs),
(127.897,457,o),
(56,411.543,o),
(56,339,cs),
(56,304.333,o),
(73.333,276,o),
(104,276,cs),
(126.667,276,o),
(140,291,o),
(140,311,cs),
(140,332.333,o),
(125.667,335.333,o),
(115,338,cs),
(104.333,340.667,o),
(95,342,o),
(95,358,cs),
(95,401.021,o),
(151.734,427,o),
(212,427,cs),
(300,427,o),
(334,368,o),
(334,264,cs),
(334,259.333,o),
(333.833,252.833,o),
(333.5,244.5,cs),
(333.167,236.167,o),
(333,227.667,o),
(333,219,cs),
(333,187,l),
(291.667,219,o),
(244.667,233,o),
(194,233,cs),
(93.633,233,o),
(26,179.745,o),
(26,106,cs),
(26,35.333,o),
(85.667,-11,o),
(179,-11,cs),
(241.667,-11,o),
(292.333,9.333,o),
(335,48,c),
(345.667,12,o),
(368,-5,o),
(396,-9,c),
(375.403,-21.873,o),
(344,-50.053,o),
(344,-91,cs),
(344,-133.667,o),
(378.333,-164,o),
(425,-164,cs)
);
},
{
closed = 1;
nodes = (
(114.667,19,o),
(67,52.667,o),
(67,106,cs),
(67,164.782,o),
(124.411,203,o),
(199,203,cs),
(271.953,203,o),
(333,166.942,o),
(333,117,cs),
(333,63.726,o),
(261.784,19,o),
(184,19,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
102 1 4 11 88 1 3 4 85 1 8 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 1 0 9 0 1 9 104 0 4 11 3 11 4 3 104 0 6 8 5 8 6 5 104 0 9 0 11 4 9 11 91 0 5 0 7 5 7 88 0 0 0 2 83 0 2 2 23 67 10 1 3 3 8 83 0 8 8 24 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
0 1 0 9 0 1 9 104 0 4 11 3 11 4 3 104 0 6 8 5 8 6 5 104 0 2 0 0 1 2 0 91 0 9 0 11 4 9 11 91 0 5 0 7 5 7 88 10 1 3 3 8 83 0 8 8 24 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
117 115 107 105 100 98 44 38 35 46 37 43 38 44 37 12 24
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = aogonek;
unicode = 261;
},
{
glyphname = aring;
kernLeft = a;
kernRight = a;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(291.667,228.333,o),
(252,238,o),
(204,238,cs),
(90.667,238,o),
(24,182,o),
(24,106,cs),
(24,34,o),
(83.667,-11,o),
(177,-11,cs),
(239.667,-11,o),
(292.333,9.333,o),
(335,48,c),
(348.333,1.333,o),
(379.333,-11,o),
(414,-11,cs),
(462,-11,o),
(498,14.333,o),
(498,69,cs),
(498,99.667,o),
(486,108,o),
(466,108,cs),
(439.333,108,o),
(438.333,93.667,o),
(437,79,cs),
(437,72.333,o),
(434.667,67,o),
(428,67,cs),
(423.333,67,o),
(420.667,70.333,o),
(420,77,cs),
(419.333,83.667,o),
(419,99.333,o),
(419,124,cs),
(419,162.781,o),
(423,229.761,o),
(423,269,cs),
(423,394.333,o),
(365.333,465,o),
(236,465,cs),
(125.007,465,o),
(49,410.046,o),
(49,335,cs),
(49,302.796,o),
(62.404,265,o),
(108,265,cs),
(130.667,265,o),
(157,273.667,o),
(157,303,cs),
(157,318.333,o),
(150.333,329,o),
(137,335,cs),
(134.333,336.333,o),
(126,338.333,o),
(126,349,cs),
(126,375.332,o),
(177.562,397,o),
(228,397,cs),
(308.966,397,o),
(333,344.573,o),
(333,261,cs),
(333,203,l),
(333,203,l)
);
},
{
closed = 1;
nodes = (
(116,143.333,o),
(143.333,176,o),
(218,176,cs),
(284.667,176,o),
(329,150,o),
(329,122,cs),
(329,93.079,o),
(288.915,57,o),
(206,57,cs),
(143.333,57,o),
(116,75.333,o),
(116,110,cs)
);
},
{
closed = 1;
nodes = (
(318,626.333,o),
(292,649,o),
(240,649,cs),
(198.667,649,o),
(165,629.667,o),
(165,579,cs),
(165,532.333,o),
(199.667,510,o),
(245,510,cs),
(285,510,o),
(318,533,o),
(318,581,cs)
);
},
{
closed = 1;
nodes = (
(251.667,607,o),
(263,598.667,o),
(263,580,cs),
(263,558.667,o),
(253,553,o),
(245,553,cs),
(235.667,553,o),
(221,556.333,o),
(221,579,cs),
(221,590.333,o),
(223.5,597.833,o),
(228.5,601.5,cs),
(233.5,605.167,o),
(237.667,607,o),
(241,607,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 3 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 8 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
14 1 12 11 13 10 12 96 0 13 10 11 13 94 0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 11 0 10 2 11 10 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
14 1 12 11 13 11 12 13 104 0 13 10 11 13 10 102 0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 11 0 10 2 11 10 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
14 1 12 11 13 11 12 13 104 0 13 10 11 13 10 102 0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 11 0 10 2 11 10 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
14 1 12 11 13 11 12 13 104 0 13 10 11 13 10 102 0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 0 11 0 10 2 11 10 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 79 values pushed */
14 1 12 11 13 11 12 13 104 0 13 10 11 13 10 102 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 11 0 10 2 11 10 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
93 92 99 97 92 103 93 103 91 89 85 83 79 77 37 36 36 36 36 41 40 43 36 15 24
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(290,227.667,o),
(243.333,243,o),
(192,243,cs),
(91.257,243,o),
(25,183.868,o),
(25,107,cs),
(25,35,o),
(84.667,-11,o),
(178,-11,cs),
(240.667,-11,o),
(291.333,9.333,o),
(334,48,c),
(346,5.333,o),
(377,-11,o),
(413,-11,cs),
(453.198,-11,o),
(490,10.502,o),
(490,65,cs),
(490,82.333,o),
(486.333,98,o),
(469,98,cs),
(450.333,98,o),
(443.333,84,o),
(442,76,cs),
(439.333,58.667,o),
(436.667,49,o),
(422,49,cs),
(412.667,49,o),
(406.667,53.667,o),
(404,63,cs),
(401.333,72.333,o),
(400,92.333,o),
(400,123,cs),
(400,175.168,o),
(403,263.532,o),
(403,267,cs),
(403,397,o),
(344,462,o),
(226,462,cs),
(120.667,462,o),
(55,411,o),
(55,339,cs),
(55,304.333,o),
(70.667,269,o),
(112,269,cs),
(138.667,269,o),
(156,282.333,o),
(156,305,cs),
(156,326.333,o),
(140.333,334.667,o),
(131,336,cs),
(117.667,338.667,o),
(111,340.333,o),
(111,351,cs),
(111,385.189,o),
(179.151,402,o),
(218,402,cs),
(298,402,o),
(333,349,o),
(333,261,cs),
(333,257.667,o),
(332.833,252.5,o),
(332.5,245.5,cs),
(332.167,238.5,o),
(332,231.333,o),
(332,224,cs),
(332,197,l),
(332,197,l)
);
},
{
closed = 1;
nodes = (
(96,151.941,o),
(149.763,183,o),
(217,183,cs),
(279.159,183,o),
(332,155.557,o),
(332,118,cs),
(332,78.985,o),
(271.753,49,o),
(201,49,cs),
(143.667,49,o),
(96,68,o),
(96,108,cs)
);
},
{
closed = 1;
nodes = (
(302,624,o),
(278,649,o),
(231,649,cs),
(191,649,o),
(160,619,o),
(160,579,cs),
(160,538,o),
(192,510,o),
(232,510,cs),
(268,510,o),
(302,533,o),
(302,581,cs)
);
},
{
closed = 1;
nodes = (
(244,615,o),
(257,605,o),
(257,580,cs),
(257,565,o),
(254,555,o),
(247,551,cs),
(240,546,o),
(235,544,o),
(232,544,cs),
(224,544,o),
(205,550,o),
(205,579,cs),
(205,607,o),
(220,615,o),
(231,615,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
67 1 9 7 54 1 5 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
14 1 12 11 13 10 12 96 0 13 10 11 13 94 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 11 0 10 2 11 10 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
14 1 12 11 13 11 12 13 104 0 13 10 11 13 10 102 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 11 0 10 2 11 10 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 69 values pushed */
14 1 12 11 13 11 12 13 104 0 13 10 11 13 10 102 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 11 0 10 2 11 10 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
99 98 105 103 98 109 99 109 96 94 90 88 82 80 36 38 36 38 36 40 36 44 38 15 35
CALL[ ]	/* CallFunction */";
};
width = 468;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(241.667,-11,o),
(292.333,9.333,o),
(335,48,c),
(347,5.333,o),
(378,-11,o),
(414,-11,cs),
(452.667,-11,o),
(481,7.667,o),
(481,65,cs),
(481,79.667,o),
(478.667,88,o),
(468,88,cs),
(462,88,o),
(458.667,84,o),
(458,76,cs),
(455.4,47.399,o),
(453.434,19,o),
(415,19,cs),
(379.663,19,o),
(371,44.439,o),
(371,122,cs),
(371,173.257,o),
(374,262.289,o),
(374,268,cs),
(374,400,o),
(325.333,457,o),
(220,457,cs),
(127.897,457,o),
(56,411.543,o),
(56,339,cs),
(56,304.333,o),
(73.333,276,o),
(104,276,cs),
(126.667,276,o),
(140,291,o),
(140,311,cs),
(140,332.333,o),
(125.667,335.333,o),
(115,338,cs),
(104.333,340.667,o),
(95,342,o),
(95,358,cs),
(95,401.021,o),
(151.734,427,o),
(212,427,cs),
(300,427,o),
(334,368,o),
(334,264,cs),
(334,259.333,o),
(333.833,252.833,o),
(333.5,244.5,cs),
(333.167,236.167,o),
(333,227.667,o),
(333,219,cs),
(333,187,l),
(291.667,219,o),
(244.667,233,o),
(194,233,cs),
(93.633,233,o),
(26,179.745,o),
(26,106,cs),
(26,35.333,o),
(85.667,-11,o),
(179,-11,cs)
);
},
{
closed = 1;
nodes = (
(114.667,19,o),
(67,52.667,o),
(67,106,cs),
(67,164.782,o),
(124.411,203,o),
(199,203,cs),
(271.953,203,o),
(333,166.942,o),
(333,117,cs),
(333,63.726,o),
(261.784,19,o),
(184,19,cs)
);
},
{
closed = 1;
nodes = (
(244.667,510,o),
(279,533,o),
(279,581,cs),
(279,617,o),
(258,649,o),
(218,649,cs),
(179.333,649,o),
(152,619,o),
(152,579,cs),
(152,537.667,o),
(179.333,510,o),
(214,510,cs)
);
},
{
closed = 1;
nodes = (
(191.333,529,o),
(182,549.667,o),
(182,579,cs),
(182,607,o),
(190.667,629,o),
(216,629,cs),
(242.667,629,o),
(249,605.333,o),
(249,580,cs),
(249,549.333,o),
(236.667,529,o),
(214,529,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 4 9 57 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 11 14 1 12 13 11 12 91 0 13 0 10 2 13 10 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 11 14 1 12 13 11 12 91 0 13 0 10 2 13 10 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
103 102 109 107 102 113 103 113 100 98 94 92 86 84 37 38 36 36 37 43 38 44 37 15 24
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = aring;
unicode = 229;
},
{
glyphname = aringacute;
kernLeft = a;
kernRight = a;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(336,804.667,o),
(327,826,o),
(283,826,cs),
(257.667,826,o),
(229.333,794,o),
(208,762,cs),
(188.966,733.449,o),
(171,697.383,o),
(171,694,cs),
(171,679.333,o),
(193.333,672,o),
(208,672,cs),
(240.642,672,o),
(336,742.213,o),
(336,778,cs)
);
},
{
closed = 1;
nodes = (
(291.667,228.333,o),
(252,238,o),
(204,238,cs),
(90.667,238,o),
(24,182,o),
(24,106,cs),
(24,34,o),
(83.667,-11,o),
(177,-11,cs),
(239.667,-11,o),
(292.333,9.333,o),
(335,48,c),
(348.333,1.333,o),
(379.333,-11,o),
(414,-11,cs),
(462,-11,o),
(498,14.333,o),
(498,69,cs),
(498,99.667,o),
(486,108,o),
(466,108,cs),
(439.333,108,o),
(438.333,93.667,o),
(437,79,cs),
(437,72.333,o),
(434.667,67,o),
(428,67,cs),
(423.333,67,o),
(420.667,70.333,o),
(420,77,cs),
(419.333,83.667,o),
(419,99.333,o),
(419,124,cs),
(419,162.781,o),
(423,229.761,o),
(423,269,cs),
(423,394.333,o),
(365.333,465,o),
(236,465,cs),
(125.007,465,o),
(49,410.046,o),
(49,335,cs),
(49,302.796,o),
(62.404,265,o),
(108,265,cs),
(130.667,265,o),
(157,273.667,o),
(157,303,cs),
(157,318.333,o),
(150.333,329,o),
(137,335,cs),
(134.333,336.333,o),
(126,338.333,o),
(126,349,cs),
(126,375.332,o),
(177.562,397,o),
(228,397,cs),
(308.966,397,o),
(333,344.573,o),
(333,261,cs),
(333,203,l),
(333,203,l)
);
},
{
closed = 1;
nodes = (
(116,143.333,o),
(143.333,176,o),
(218,176,cs),
(284.667,176,o),
(329,150,o),
(329,122,cs),
(329,93.079,o),
(288.915,57,o),
(206,57,cs),
(143.333,57,o),
(116,75.333,o),
(116,110,cs)
);
},
{
closed = 1;
nodes = (
(318,626.333,o),
(292,649,o),
(240,649,cs),
(198.667,649,o),
(165,629.667,o),
(165,579,cs),
(165,532.333,o),
(199.667,510,o),
(245,510,cs),
(285,510,o),
(318,533,o),
(318,581,cs)
);
},
{
closed = 1;
nodes = (
(251.667,607,o),
(263,598.667,o),
(263,580,cs),
(263,558.667,o),
(253,553,o),
(245,553,cs),
(235.667,553,o),
(221,556.333,o),
(221,579,cs),
(221,590.333,o),
(223.5,597.833,o),
(228.5,601.5,cs),
(233.5,605.167,o),
(237.667,607,o),
(241,607,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
82 1 11 9 58 1 5 6 70 1 7 5 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
82 1 11 9 58 1 5 6 70 1 7 10 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 81 values pushed */
0 0 1 13 1 0 13 104 16 1 14 13 15 12 14 96 0 15 12 13 15 94 0 3 2 9 2 3 9 104 0 6 11 5 5 6 96 0 13 0 12 4 13 12 92 0 9 0 11 6 9 11 91 0 1 1 12 67 0 2 2 4 83 0 4 4 23 67 10 1 5 5 7 84 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 83 values pushed */
0 0 1 13 1 0 13 104 16 1 14 13 15 13 14 15 104 0 15 12 13 15 12 102 0 3 2 9 2 3 9 104 0 6 11 5 5 6 96 0 13 0 12 4 13 12 92 0 9 0 11 6 9 11 91 0 1 1 12 67 0 2 2 4 83 0 4 4 23 67 10 1 5 5 7 84 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 81 values pushed */
0 0 1 13 1 0 13 104 16 1 14 13 15 13 14 15 104 0 15 12 13 15 12 102 0 3 2 9 2 3 9 104 0 6 11 5 5 6 96 0 13 0 12 4 13 12 92 0 4 0 2 3 4 2 91 0 9 0 11 6 9 11 91 0 1 1 12 67 10 1 5 5 7 84 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 91 values pushed */
0 0 1 13 1 0 13 104 16 1 14 13 15 13 14 15 104 0 15 12 13 15 12 102 0 3 2 9 2 3 9 104 0 6 11 5 5 6 96 0 13 0 12 4 13 12 92 0 4 0 2 3 4 2 91 0 9 0 11 6 9 11 91 0 1 1 12 67 0 5 5 7 84 8 1 7 7 24 67 0 10 10 7 83 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 92 values pushed */
0 0 1 13 1 0 13 104 16 1 14 13 15 13 14 15 104 0 15 12 13 15 12 102 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 13 0 12 4 13 12 92 0 4 0 2 3 4 2 91 0 9 0 11 6 9 11 91 0 1 1 12 67 0 5 5 7 84 8 1 7 7 24 67 0 10 10 7 83 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 92 values pushed */
0 0 1 13 1 0 13 104 16 1 14 13 15 13 14 15 104 0 15 12 13 15 12 102 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 13 0 12 4 13 12 92 0 4 0 2 3 4 2 91 0 9 0 11 6 9 11 91 0 1 1 14 67 0 5 5 7 84 8 1 7 7 24 67 0 10 10 7 83 8 1 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
109 108 115 113 108 119 109 119 107 105 101 99 95 93 87 85 80 78 36 36 36 41 40 43 38 38 36 17 24
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(316,805.667,o),
(307.667,821,o),
(277,821,cs),
(258.333,821,o),
(231.333,791.667,o),
(210,761,cs),
(191.279,734.088,o),
(172,699.419,o),
(172,694,cs),
(172,680.667,o),
(186.333,676,o),
(197,676,cs),
(225.915,676,o),
(316,753.249,o),
(316,783,cs)
);
},
{
closed = 1;
nodes = (
(290,227.667,o),
(243.333,243,o),
(192,243,cs),
(91.257,243,o),
(25,183.868,o),
(25,107,cs),
(25,35,o),
(84.667,-11,o),
(178,-11,cs),
(240.667,-11,o),
(291.333,9.333,o),
(334,48,c),
(346,5.333,o),
(377,-11,o),
(413,-11,cs),
(453.198,-11,o),
(490,10.502,o),
(490,65,cs),
(490,82.333,o),
(486.333,98,o),
(469,98,cs),
(450.333,98,o),
(443.333,84,o),
(442,76,cs),
(439.333,58.667,o),
(436.667,49,o),
(422,49,cs),
(412.667,49,o),
(406.667,53.667,o),
(404,63,cs),
(401.333,72.333,o),
(400,92.333,o),
(400,123,cs),
(400,175.168,o),
(403,263.532,o),
(403,267,cs),
(403,397,o),
(344,462,o),
(226,462,cs),
(120.667,462,o),
(55,411,o),
(55,339,cs),
(55,304.333,o),
(70.667,269,o),
(112,269,cs),
(138.667,269,o),
(156,282.333,o),
(156,305,cs),
(156,326.333,o),
(140.333,334.667,o),
(131,336,cs),
(117.667,338.667,o),
(111,340.333,o),
(111,351,cs),
(111,385.189,o),
(179.151,402,o),
(218,402,cs),
(298,402,o),
(333,349,o),
(333,261,cs),
(333,257.667,o),
(332.833,252.5,o),
(332.5,245.5,cs),
(332.167,238.5,o),
(332,231.333,o),
(332,224,cs),
(332,197,l),
(332,197,l)
);
},
{
closed = 1;
nodes = (
(96,151.941,o),
(149.763,183,o),
(217,183,cs),
(279.159,183,o),
(332,155.557,o),
(332,118,cs),
(332,78.985,o),
(271.753,49,o),
(201,49,cs),
(143.667,49,o),
(96,68,o),
(96,108,cs)
);
},
{
closed = 1;
nodes = (
(302,623.667,o),
(277.667,649,o),
(231,649,cs),
(191,649,o),
(160,619,o),
(160,579,cs),
(160,537.667,o),
(192,510,o),
(232,510,cs),
(268,510,o),
(302,533,o),
(302,581,cs)
);
},
{
closed = 1;
nodes = (
(244.333,615,o),
(257,605.333,o),
(257,580,cs),
(257,564.667,o),
(253.667,554.833,o),
(247,550.5,cs),
(240.333,546.167,o),
(235.333,544,o),
(232,544,cs),
(224,544,o),
(205,549.667,o),
(205,579,cs),
(205,607,o),
(220.333,615,o),
(231,615,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
82 1 11 9 69 1 7 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
0 0 1 13 1 0 13 104 16 1 14 13 15 12 14 96 0 15 12 13 15 94 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 13 0 12 4 13 12 91 0 9 0 11 6 9 11 91 0 1 1 12 67 0 2 2 4 83 0 4 4 23 67 10 1 5 5 7 83 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 84 values pushed */
0 0 1 13 1 0 13 104 16 1 14 13 15 13 14 15 104 0 15 12 13 15 12 102 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 13 0 12 4 13 12 91 0 9 0 11 6 9 11 91 0 1 1 12 67 0 2 2 4 83 0 4 4 23 67 10 1 5 5 7 83 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
0 0 1 13 1 0 13 104 16 1 14 13 15 13 14 15 104 0 15 12 13 15 12 102 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 13 0 12 4 13 12 91 0 4 0 2 3 4 2 92 0 9 0 11 6 9 11 91 0 1 1 12 67 10 1 5 5 7 83 8 1 7 7 24 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 82 values pushed */
0 0 1 13 1 0 13 104 16 1 14 13 15 13 14 15 104 0 15 12 13 15 12 102 0 3 2 9 2 3 9 104 0 6 11 5 11 6 5 104 0 13 0 12 4 13 12 91 0 4 0 2 3 4 2 92 0 9 0 11 6 9 11 91 0 1 1 14 67 10 1 5 5 7 83 8 1 7 7 24 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
114 113 120 118 113 124 114 124 111 109 105 103 97 95 87 85 81 79 36 38 36 40 36 44 39 38 36 17 24
CALL[ ]	/* CallFunction */";
};
width = 468;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(241.667,-11,o),
(292.333,9.333,o),
(335,48,c),
(347,5.333,o),
(378,-11,o),
(414,-11,cs),
(452.667,-11,o),
(481,7.667,o),
(481,65,cs),
(481,79.667,o),
(478.667,88,o),
(468,88,cs),
(462,88,o),
(458.667,84,o),
(458,76,cs),
(455.4,47.399,o),
(453.434,19,o),
(415,19,cs),
(379.663,19,o),
(371,44.439,o),
(371,122,cs),
(371,173.257,o),
(374,262.289,o),
(374,268,cs),
(374,400,o),
(325.333,457,o),
(220,457,cs),
(127.897,457,o),
(56,411.543,o),
(56,339,cs),
(56,304.333,o),
(73.333,276,o),
(104,276,cs),
(126.667,276,o),
(140,291,o),
(140,311,cs),
(140,332.333,o),
(125.667,335.333,o),
(115,338,cs),
(104.333,340.667,o),
(95,342,o),
(95,358,cs),
(95,401.021,o),
(151.734,427,o),
(212,427,cs),
(300,427,o),
(334,368,o),
(334,264,cs),
(334,259.333,o),
(333.833,252.833,o),
(333.5,244.5,cs),
(333.167,236.167,o),
(333,227.667,o),
(333,219,cs),
(333,187,l),
(291.667,219,o),
(244.667,233,o),
(194,233,cs),
(93.633,233,o),
(26,179.745,o),
(26,106,cs),
(26,35.333,o),
(85.667,-11,o),
(179,-11,cs)
);
},
{
closed = 1;
nodes = (
(114.667,19,o),
(67,52.667,o),
(67,106,cs),
(67,164.782,o),
(124.411,203,o),
(199,203,cs),
(271.953,203,o),
(333,166.942,o),
(333,117,cs),
(333,63.726,o),
(261.784,19,o),
(184,19,cs)
);
},
{
closed = 1;
nodes = (
(244.667,510,o),
(279,533,o),
(279,581,cs),
(279,617,o),
(258,649,o),
(218,649,cs),
(179.333,649,o),
(152,619,o),
(152,579,cs),
(152,537.667,o),
(179.333,510,o),
(214,510,cs)
);
},
{
closed = 1;
nodes = (
(191.333,529,o),
(182,549.667,o),
(182,579,cs),
(182,607,o),
(190.667,629,o),
(216,629,cs),
(242.667,629,o),
(249,605.333,o),
(249,580,cs),
(249,549.333,o),
(236.667,529,o),
(214,529,cs)
);
},
{
closed = 1;
nodes = (
(199.797,683,o),
(287,770.027,o),
(287,791,cs),
(287,809.667,o),
(278.667,813,o),
(268,813,cs),
(247.822,813,o),
(173,718.882,o),
(173,694,cs),
(173,686.667,o),
(175.667,683,o),
(181,683,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 4 9 57 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 14 15 11 15 14 11 104 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 11 16 1 12 13 11 12 91 0 13 0 10 2 13 10 91 0 7 0 9 4 7 9 91 0 15 15 14 67 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 75 values pushed */
0 14 15 11 15 14 11 104 0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 0 11 16 1 12 13 11 12 91 0 13 0 10 2 13 10 91 0 2 0 0 1 2 0 92 0 7 0 9 4 7 9 91 0 15 15 14 67 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
103 102 127 125 120 118 109 107 102 113 103 113 100 98 94 92 86 84 37 38 36 36 37 43 38 44 37 17 24
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = aringacute;
unicode = 507;
},
{
glyphname = atilde;
kernLeft = a;
kernRight = a;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(291.667,228.333,o),
(252,238,o),
(204,238,cs),
(90.667,238,o),
(24,182,o),
(24,106,cs),
(24,34,o),
(83.667,-11,o),
(177,-11,cs),
(239.667,-11,o),
(292.333,9.333,o),
(335,48,c),
(348.333,1.333,o),
(379.333,-11,o),
(414,-11,cs),
(462,-11,o),
(498,14.333,o),
(498,69,cs),
(498,99.667,o),
(486,108,o),
(466,108,cs),
(439.333,108,o),
(438.333,93.667,o),
(437,79,cs),
(437,72.333,o),
(434.667,67,o),
(428,67,cs),
(423.333,67,o),
(420.667,70.333,o),
(420,77,cs),
(419.333,83.667,o),
(419,99.333,o),
(419,124,cs),
(419,162.781,o),
(423,229.761,o),
(423,269,cs),
(423,394.333,o),
(365.333,465,o),
(236,465,cs),
(125.007,465,o),
(49,410.046,o),
(49,335,cs),
(49,302.796,o),
(62.404,265,o),
(108,265,cs),
(130.667,265,o),
(157,273.667,o),
(157,303,cs),
(157,318.333,o),
(150.333,329,o),
(137,335,cs),
(134.333,336.333,o),
(126,338.333,o),
(126,349,cs),
(126,375.332,o),
(177.562,397,o),
(228,397,cs),
(308.966,397,o),
(333,344.573,o),
(333,261,cs),
(333,203,l),
(333,203,l)
);
},
{
closed = 1;
nodes = (
(116,143.333,o),
(143.333,176,o),
(218,176,cs),
(284.667,176,o),
(329,150,o),
(329,122,cs),
(329,93.079,o),
(288.915,57,o),
(206,57,cs),
(143.333,57,o),
(116,75.333,o),
(116,110,cs)
);
},
{
closed = 1;
nodes = (
(67,514,o),
(74,498,o),
(86,498,cs),
(106.593,498,o),
(130.709,523,o),
(170,523,cs),
(208.662,523,o),
(251.294,499,o),
(307,499,cs),
(339.676,499,o),
(418,516.584,o),
(418,574,cs),
(418,595.333,o),
(402.667,609,o),
(396,609,cs),
(391.333,609,o),
(381.333,604.667,o),
(366,596,cs),
(347.333,585.333,o),
(324.667,579,o),
(306,579,cs),
(266.599,579,o),
(205.495,607,o),
(169,607,cs),
(144.333,607,o),
(121.667,601,o),
(101,589,cs),
(82.333,578.333,o),
(67,563.333,o),
(67,534,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 3 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
66 1 9 7 42 1 3 4 54 1 5 8 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 12 1 10 0 14 13 10 14 91 0 11 15 1 13 2 11 13 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 12 1 10 0 14 13 10 14 91 0 11 15 1 13 2 11 13 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 84 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 3 4 96 12 1 10 0 14 13 10 14 91 0 11 15 1 13 2 11 13 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 12 1 10 0 14 13 10 14 91 0 11 15 1 13 2 11 13 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 0 3 3 5 84 6 1 5 5 24 67 0 8 8 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
115 113 110 108 105 103 97 95 92 90 87 85 79 77 37 36 36 36 36 41 40 43 36 16 24
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(64,547,o),
(63,541,o),
(63,535,cs),
(63,520,o),
(69,507,o),
(80,507,cs),
(97,507,o),
(124,532,o),
(164,532,cs),
(203,532,o),
(245,508,o),
(301,508,cs),
(357,508,o),
(390,530,o),
(403,553,cs),
(406,559,o),
(408,565,o),
(408,572,cs),
(408,588,o),
(397,600,o),
(390,600,cs),
(387,600,o),
(383,599,o),
(380,598,cs),
(376,596,o),
(369,592,o),
(360,587,cs),
(337,576,o),
(317,570,o),
(300,570,cs),
(261,570,o),
(199,598,o),
(163,598,cs),
(138,598,o),
(116,592,o),
(95,580,cs),
(85,574,o),
(78,569,o),
(74,564,cs),
(70,559,o),
(67,555,o),
(66,552,cs)
);
},
{
closed = 1;
nodes = (
(290,227.667,o),
(243.333,243,o),
(192,243,cs),
(91.257,243,o),
(25,183.868,o),
(25,107,cs),
(25,35,o),
(84.667,-11,o),
(178,-11,cs),
(240.667,-11,o),
(291.333,9.333,o),
(334,48,c),
(346,5.333,o),
(377,-11,o),
(413,-11,cs),
(453.198,-11,o),
(490,10.502,o),
(490,65,cs),
(490,82.333,o),
(486.333,98,o),
(469,98,cs),
(450.333,98,o),
(443.333,84,o),
(442,76,cs),
(439.333,58.667,o),
(436.667,49,o),
(422,49,cs),
(412.667,49,o),
(406.667,53.667,o),
(404,63,cs),
(401.333,72.333,o),
(400,92.333,o),
(400,123,cs),
(400,175.168,o),
(403,263.532,o),
(403,267,cs),
(403,397,o),
(344,462,o),
(226,462,cs),
(120.667,462,o),
(55,411,o),
(55,339,cs),
(55,304.333,o),
(70.667,269,o),
(112,269,cs),
(138.667,269,o),
(156,282.333,o),
(156,305,cs),
(156,326.333,o),
(140.333,334.667,o),
(131,336,cs),
(117.667,338.667,o),
(111,340.333,o),
(111,351,cs),
(111,385.189,o),
(179.151,402,o),
(218,402,cs),
(298,402,o),
(333,349,o),
(333,261,cs),
(333,257.667,o),
(332.833,252.5,o),
(332.5,245.5,cs),
(332.167,238.5,o),
(332,231.333,o),
(332,224,cs),
(332,197,l),
(332,197,l)
);
},
{
closed = 1;
nodes = (
(96,151.941,o),
(149.763,183,o),
(217,183,cs),
(279.159,183,o),
(332,155.557,o),
(332,118,cs),
(332,78.985,o),
(271.753,49,o),
(201,49,cs),
(143.667,49,o),
(96,68,o),
(96,108,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
105 1 15 13 92 1 11 9 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 7 6 13 6 7 13 104 0 10 15 9 15 10 9 104 2 1 0 0 4 3 0 4 91 0 1 5 1 3 8 1 3 91 0 13 0 15 10 13 15 91 0 6 6 8 83 0 8 8 23 67 14 1 9 9 11 84 12 1 11 11 24 11 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 7 6 13 6 7 13 104 0 10 15 9 15 10 9 104 2 1 0 0 4 3 0 4 91 0 1 5 1 3 8 1 3 91 0 8 0 6 7 8 6 91 0 13 0 15 10 13 15 91 14 1 9 9 11 84 12 1 11 11 24 11 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
120 118 110 108 104 102 96 94 90 88 82 80 76 74 36 44 41 35 35 38 35 35 37 16 35
CALL[ ]	/* CallFunction */";
};
width = 468;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(241.667,-11,o),
(292.333,9.333,o),
(335,48,c),
(347,5.333,o),
(378,-11,o),
(414,-11,cs),
(452.667,-11,o),
(481,7.667,o),
(481,65,cs),
(481,79.667,o),
(478.667,88,o),
(468,88,cs),
(462,88,o),
(458.667,84,o),
(458,76,cs),
(455.4,47.399,o),
(453.434,19,o),
(415,19,cs),
(379.663,19,o),
(371,44.439,o),
(371,122,cs),
(371,173.257,o),
(374,262.289,o),
(374,268,cs),
(374,400,o),
(325.333,457,o),
(220,457,cs),
(127.897,457,o),
(56,411.543,o),
(56,339,cs),
(56,304.333,o),
(73.333,276,o),
(104,276,cs),
(126.667,276,o),
(140,291,o),
(140,311,cs),
(140,332.333,o),
(125.667,335.333,o),
(115,338,cs),
(104.333,340.667,o),
(95,342,o),
(95,358,cs),
(95,401.021,o),
(151.734,427,o),
(212,427,cs),
(300,427,o),
(334,368,o),
(334,264,cs),
(334,259.333,o),
(333.833,252.833,o),
(333.5,244.5,cs),
(333.167,236.167,o),
(333,227.667,o),
(333,219,cs),
(333,187,l),
(291.667,219,o),
(244.667,233,o),
(194,233,cs),
(93.633,233,o),
(26,179.745,o),
(26,106,cs),
(26,35.333,o),
(85.667,-11,o),
(179,-11,cs)
);
},
{
closed = 1;
nodes = (
(114.667,19,o),
(67,52.667,o),
(67,106,cs),
(67,164.782,o),
(124.411,203,o),
(199,203,cs),
(271.953,203,o),
(333,166.942,o),
(333,117,cs),
(333,63.726,o),
(261.784,19,o),
(184,19,cs)
);
},
{
closed = 1;
nodes = (
(87.791,522,o),
(114.735,547,o),
(156,547,cs),
(194.662,547,o),
(237.294,523,o),
(293,523,cs),
(345.947,523,o),
(395,542.797,o),
(395,568,cs),
(395,577.333,o),
(388.667,585,o),
(382,585,cs),
(378.667,585,o),
(375.167,584.167,o),
(371.5,582.5,cs),
(367.833,580.833,o),
(361.333,577.333,o),
(352,572,cs),
(329.333,560.667,o),
(309.333,555,o),
(292,555,cs),
(252.599,555,o),
(191.495,583,o),
(155,583,cs),
(130.333,583,o),
(107.667,577,o),
(87,565,cs),
(67.667,553.667,o),
(58,544.333,o),
(58,537,cs),
(58,530.333,o),
(65.333,522,o),
(72,522,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 4 9 57 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 12 1 10 0 14 13 10 14 91 0 11 15 1 13 2 11 13 91 0 7 0 9 4 7 9 91 0 0 0 2 83 0 2 2 23 67 8 1 3 3 5 83 6 1 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 1 0 7 0 1 7 104 0 4 9 3 9 4 3 104 12 1 10 0 14 13 10 14 91 0 11 15 1 13 2 11 13 91 0 2 0 0 1 2 0 91 0 7 0 9 4 7 9 91 8 1 3 3 5 83 6 1 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
123 121 118 116 113 111 105 103 100 98 95 93 86 84 37 38 36 36 37 43 38 44 37 16 24
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = atilde;
unicode = 227;
},
{
glyphname = ae;
kernLeft = a;
kernRight = ae;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(465,235,o),
(493,235.167,o),
(515,235.5,cs),
(537,235.833,o),
(550.667,236,o),
(556,236,cs),
(616,236,o),
(660.5,236.833,o),
(689.5,238.5,cs),
(718.5,240.167,o),
(735.667,241.667,o),
(741,243,cs),
(755.8,245.96,o),
(778,252.247,o),
(778,283,cs),
(778,388.541,o),
(699.104,477,o),
(562,477,cs),
(451.947,477,o),
(401.034,416.944,o),
(387,358,c),
(365.03,426.658,o),
(296.836,457,o),
(220,457,cs),
(126.831,457,o),
(56,407.079,o),
(56,345,cs),
(56,303.667,o),
(87,276,o),
(131,276,cs),
(159,276,o),
(187,286,o),
(187,314,cs),
(187,330,o),
(180,340.667,o),
(166,346,cs),
(162.667,347.333,o),
(158.5,348.667,o),
(153.5,350,cs),
(148.5,351.333,o),
(146,355,o),
(146,361,cs),
(146,377.877,o),
(191.12,379,o),
(214,379,cs),
(277.633,379,o),
(334,338.927,o),
(334,261,cs),
(334,256.333,o),
(333.833,250.167,o),
(333.5,242.5,cs),
(333.167,234.833,o),
(333,221.667,o),
(333,203,c),
(293,239,o),
(246.667,257,o),
(194,257,cs),
(91.943,257,o),
(26,191.328,o),
(26,111,cs),
(26,33.667,o),
(83,-11,o),
(179,-11,cs),
(237.191,-11,o),
(327.383,6.614,o),
(392,82,c),
(419.368,39.428,o),
(448.432,-11,o),
(559,-11,cs),
(728.555,-11,o),
(792,90.166,o),
(792,158,cs),
(792,181.173,o),
(788.938,211,o),
(750,211,cs),
(716.549,211,o),
(710.616,185.463,o),
(707,171,cs),
(688.965,75.671,o),
(592.15,69,o),
(549,69,cs),
(457.192,69,o),
(429,132.127,o),
(429,194,cs),
(429,206,o),
(429.667,220.333,o),
(431,235,c)
);
},
{
closed = 1;
nodes = (
(118,149.667,o),
(148.333,179,o),
(223,179,cs),
(261.667,179,o),
(289.667,172.167,o),
(307,158.5,cs),
(324.333,144.833,o),
(333,131,o),
(333,117,cs),
(333,101.667,o),
(323.167,89.5,o),
(303.5,80.5,cs),
(283.833,71.5,o),
(257,67,o),
(223,67,cs),
(163,67,o),
(118,81.667,o),
(118,119,cs)
);
},
{
closed = 1;
nodes = (
(442.285,339.712,o),
(475.328,397,o),
(558,397,cs),
(625.014,397,o),
(682,348.61,o),
(682,329,cs),
(682,326.333,o),
(680.667,323.667,o),
(678,321,cs),
(675.333,318.333,o),
(668.333,317,o),
(657,317,cs),
(435,313,l),
(435,313,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
82 1 12 5 48 1 11 1 33 1 0 11 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 6 12 4 12 6 4 104 0 1 9 11 9 1 11 104 15 1 12 14 1 9 1 12 9 91 0 4 0 11 0 4 11 91 0 13 13 8 83 0 8 8 23 67 0 5 5 7 83 0 7 7 23 67 10 1 0 0 2 83 3 1 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 6 12 4 12 6 4 104 0 1 9 11 9 1 11 104 0 8 0 13 5 8 13 91 0 7 0 5 12 7 5 91 15 1 12 14 1 9 1 12 9 91 0 4 0 11 0 4 11 91 10 1 0 0 2 83 3 1 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
116 115 0 0 124 122 115 128 116 128 113 111 107 105 0 102 0 98 40 38 42 56 38 40 40 40 39 16 24
CALL[ ]	/* CallFunction */";
};
width = 815;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(465.003,244,o),
(463.455,245,o),
(512,245,cs),
(529.941,245,o),
(702.173,244.621,o),
(721,250,cs),
(742.333,255.333,o),
(757,264.333,o),
(757,291,cs),
(757,374.297,o),
(691.593,477,o),
(556,477,cs),
(457.972,477,o),
(401.582,423.553,o),
(377,358,c),
(357,426,o),
(296,457,o),
(220,457,cs),
(126.846,457,o),
(56,408.669,o),
(56,343,cs),
(56,304.333,o),
(81.333,276,o),
(120,276,cs),
(146.667,276,o),
(168,287.667,o),
(168,313,cs),
(168,331.667,o),
(157,340.333,o),
(145,343,cs),
(141.667,344.333,o),
(137.5,345.667,o),
(132.5,347,cs),
(127.5,348.333,o),
(125,352.667,o),
(125,360,cs),
(125,386.801,o),
(176.761,397,o),
(213,397,cs),
(287.667,397,o),
(334,350,o),
(334,262,cs),
(334,255.333,o),
(333.833,248,o),
(333.5,240,cs),
(333.167,232,o),
(333,217.667,o),
(333,197,c),
(293,231,o),
(246.667,248,o),
(194,248,cs),
(92.435,248,o),
(26,185.919,o),
(26,109,cs),
(26,34.333,o),
(84.333,-11,o),
(179,-11,cs),
(241.291,-11,o),
(319.254,8.796,o),
(382,82,c),
(410.993,37.192,o),
(450.379,-11,o),
(553,-11,cs),
(700.456,-11,o),
(771,89.95,o),
(771,169,cs),
(771,187.667,o),
(767,209,o),
(739,209,cs),
(712.087,209,o),
(707,187.813,o),
(707,177,c),
(696.394,84.202,o),
(612.549,51,o),
(546,51,cs),
(442.451,51,o),
(408,129.219,o),
(408,203,cs),
(408,215,o),
(408.667,229.333,o),
(410,244,c)
);
},
{
closed = 1;
nodes = (
(97,155.333,o),
(138.333,188,o),
(213,188,cs),
(289,188,o),
(333,153,o),
(333,117,cs),
(333,78.333,o),
(279,49,o),
(207,49,cs),
(143,49,o),
(97,71.333,o),
(97,114,cs)
);
},
{
closed = 1;
nodes = (
(424.666,349.331,o),
(462.662,415,o),
(552,415,cs),
(641.917,415,o),
(683,348.374,o),
(683,322,cs),
(683,315.333,o),
(680.333,308,o),
(667,308,cs),
(414,304,l),
(414,304,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
77 1 12 5 46 1 11 1 31 13 2 0 11 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 6 12 4 12 6 4 104 0 1 9 11 9 1 11 104 15 1 12 14 1 9 1 12 9 91 0 4 0 11 0 4 11 91 0 13 13 8 83 0 8 8 23 67 0 5 5 7 83 0 7 7 23 67 10 1 0 0 2 83 3 1 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 6 12 4 12 6 4 104 0 1 9 11 9 1 11 104 0 8 0 13 5 8 13 91 0 7 0 5 12 7 5 91 15 1 12 14 1 9 1 12 9 91 0 4 0 11 0 4 11 91 10 1 0 0 2 83 3 1 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
113 112 0 0 121 119 112 125 113 125 110 108 104 102 0 99 0 91 38 38 44 38 38 40 38 40 39 16 24
CALL[ ]	/* CallFunction */";
};
width = 795;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(237.667,-11,o),
(305.333,7.333,o),
(368,82,c),
(402.667,24.667,o),
(460,-11,o),
(544,-11,cs),
(655.238,-11,o),
(741,80.726,o),
(741,187,cs),
(741,199,o),
(735.333,205,o),
(724,205,cs),
(712.667,205,o),
(707,199,o),
(707,187,cs),
(707,100.906,o),
(650.468,21,o),
(542,21,cs),
(421.956,21,o),
(378,121.555,o),
(378,218,cs),
(378,230,o),
(378.667,244.333,o),
(380,259,c),
(432.605,259,o),
(502.073,260,o),
(551,260,cs),
(577.667,260,o),
(603.5,260,o),
(628.5,260,cs),
(653.5,260,o),
(674.667,260.333,o),
(692,261,cs),
(716,262.333,o),
(727,282.667,o),
(727,304,cs),
(727,359.427,o),
(672.596,477,o),
(547,477,cs),
(467,477,o),
(400.333,432.667,o),
(363,358,c),
(343,426,o),
(296,457,o),
(220,457,cs),
(127.897,457,o),
(56,411.543,o),
(56,339,cs),
(56,304.333,o),
(73.333,276,o),
(104,276,cs),
(126.667,276,o),
(140,291,o),
(140,311,cs),
(140,332.333,o),
(125.667,335.333,o),
(115,338,cs),
(104.333,340.667,o),
(95,342,o),
(95,358,cs),
(95,401.021,o),
(151.734,427,o),
(212,427,cs),
(300,427,o),
(334,368,o),
(334,264,cs),
(334,233.781,o),
(333,225.646,o),
(333,187,c),
(291.667,219,o),
(244.667,233,o),
(194,233,cs),
(93.633,233,o),
(26,179.745,o),
(26,106,cs),
(26,35.333,o),
(85.667,-11,o),
(179,-11,cs)
);
},
{
closed = 1;
nodes = (
(114.667,19,o),
(67,52.667,o),
(67,106,cs),
(67,164.782,o),
(124.411,203,o),
(199,203,cs),
(271.953,203,o),
(333,166.942,o),
(333,117,cs),
(333,63.726,o),
(261.784,19,o),
(184,19,cs)
);
},
{
closed = 1;
nodes = (
(397.337,363.686,o),
(445.119,445,o),
(544,445,cs),
(642.682,445,o),
(684,364.324,o),
(684,311,cs),
(684,299,o),
(678.333,293,o),
(667,293,cs),
(384,289,l),
(384,289,l),
(384,289,l),
(384,289,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
72 1 12 5 39 25 2 0 11 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 6 12 9 12 6 9 104 0 1 4 11 4 1 11 104 15 1 12 14 1 9 4 12 9 91 0 4 0 11 0 4 11 91 0 13 13 8 83 0 8 8 23 67 0 5 5 7 83 0 7 7 23 67 10 1 0 0 2 83 3 1 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 6 12 9 12 6 9 104 0 1 4 11 4 1 11 104 0 8 0 13 5 8 13 91 0 7 0 5 12 7 5 91 15 1 12 14 1 9 4 12 9 91 0 4 0 11 0 4 11 91 10 1 0 0 2 83 3 1 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
110 109 0 0 117 115 109 121 110 121 105 103 95 93 0 90 0 82 36 38 44 41 38 36 37 37 39 16 24
CALL[ ]	/* CallFunction */";
};
width = 767;
}
);
note = ae;
unicode = 230;
},
{
glyphname = aeacute;
kernLeft = a;
kernRight = ae;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(486,651.333,o),
(458.667,672.667,o),
(416,674,cs),
(390.667,674,o),
(360,635.167,o),
(336,594.5,cs),
(315.511,559.783,o),
(294,512.988,o),
(294,508,cs),
(294,493.333,o),
(316.333,486,o),
(331,486,cs),
(348.099,486,o),
(383.389,508.679,o),
(422,543,cs),
(456.627,573.78,o),
(486,608.341,o),
(486,626,cs)
);
},
{
closed = 1;
nodes = (
(465,235,o),
(493,235.167,o),
(515,235.5,cs),
(537,235.833,o),
(550.667,236,o),
(556,236,cs),
(616,236,o),
(660.5,236.833,o),
(689.5,238.5,cs),
(718.5,240.167,o),
(735.667,241.667,o),
(741,243,cs),
(755.8,245.96,o),
(778,252.247,o),
(778,283,cs),
(778,388.541,o),
(699.104,477,o),
(562,477,cs),
(451.947,477,o),
(401.034,416.944,o),
(387,358,c),
(365.03,426.658,o),
(296.836,457,o),
(220,457,cs),
(126.831,457,o),
(56,407.079,o),
(56,345,cs),
(56,303.667,o),
(87,276,o),
(131,276,cs),
(159,276,o),
(187,286,o),
(187,314,cs),
(187,330,o),
(180,340.667,o),
(166,346,cs),
(162.667,347.333,o),
(158.5,348.667,o),
(153.5,350,cs),
(148.5,351.333,o),
(146,355,o),
(146,361,cs),
(146,377.877,o),
(191.12,379,o),
(214,379,cs),
(277.633,379,o),
(334,338.927,o),
(334,261,cs),
(334,256.333,o),
(333.833,250.167,o),
(333.5,242.5,cs),
(333.167,234.833,o),
(333,221.667,o),
(333,203,c),
(293,239,o),
(246.667,257,o),
(194,257,cs),
(91.943,257,o),
(26,191.328,o),
(26,111,cs),
(26,33.667,o),
(83,-11,o),
(179,-11,cs),
(237.191,-11,o),
(327.383,6.614,o),
(392,82,c),
(419.368,39.428,o),
(448.432,-11,o),
(559,-11,cs),
(728.555,-11,o),
(792,90.166,o),
(792,158,cs),
(792,181.173,o),
(788.938,211,o),
(750,211,cs),
(716.549,211,o),
(710.616,185.463,o),
(707,171,cs),
(688.965,75.671,o),
(592.15,69,o),
(549,69,cs),
(457.192,69,o),
(429,132.127,o),
(429,194,cs),
(429,206,o),
(429.667,220.333,o),
(431,235,c)
);
},
{
closed = 1;
nodes = (
(118,149.667,o),
(148.333,179,o),
(223,179,cs),
(261.667,179,o),
(289.667,172.167,o),
(307,158.5,cs),
(324.333,144.833,o),
(333,131,o),
(333,117,cs),
(333,101.667,o),
(323.167,89.5,o),
(303.5,80.5,cs),
(283.833,71.5,o),
(257,67,o),
(223,67,cs),
(163,67,o),
(118,81.667,o),
(118,119,cs)
);
},
{
closed = 1;
nodes = (
(442.285,339.712,o),
(475.328,397,o),
(558,397,cs),
(625.014,397,o),
(682,348.61,o),
(682,329,cs),
(682,326.333,o),
(680.667,323.667,o),
(678,321,cs),
(675.333,318.333,o),
(668.333,317,o),
(657,317,cs),
(435,313,l),
(435,313,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
100 1 14 7 66 1 13 3 51 1 2 13 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 1 0 1 106 0 0 10 0 106 0 8 14 6 14 8 6 104 0 3 11 13 11 3 13 104 17 1 14 16 1 11 3 14 11 92 0 6 0 13 2 6 13 91 0 15 15 10 83 0 10 10 23 67 0 7 7 9 83 0 9 9 23 67 12 1 2 2 4 83 5 1 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 1 0 1 106 0 0 10 0 106 0 8 14 6 14 8 6 104 0 3 11 13 11 3 13 104 0 10 0 15 7 10 15 91 0 9 0 7 14 9 7 91 17 1 14 16 1 11 3 14 11 92 0 6 0 13 2 6 13 91 12 1 2 2 4 83 5 1 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
134 133 18 18 142 140 133 146 134 146 131 129 125 123 18 120 18 116 106 104 96 94 42 56 38 40 40 40 41 38 38 18 24
CALL[ ]	/* CallFunction */";
};
width = 815;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(458,645.667,o),
(439.667,661,o),
(409,661,cs),
(390.842,661,o),
(361.95,626.615,o),
(339.5,590.5,cs),
(313.079,547.997,o),
(298,518.525,o),
(298,513,cs),
(298,499.667,o),
(312.333,495,o),
(323,495,cs),
(352.68,495,o),
(458,594.002,o),
(458,623,cs)
);
},
{
closed = 1;
nodes = (
(465.003,244,o),
(463.455,245,o),
(512,245,cs),
(529.941,245,o),
(702.173,244.621,o),
(721,250,cs),
(742.333,255.333,o),
(757,264.333,o),
(757,291,cs),
(757,374.297,o),
(691.593,477,o),
(556,477,cs),
(457.972,477,o),
(401.582,423.553,o),
(377,358,c),
(357,426,o),
(296,457,o),
(220,457,cs),
(126.846,457,o),
(56,408.669,o),
(56,343,cs),
(56,304.333,o),
(81.333,276,o),
(120,276,cs),
(146.667,276,o),
(168,287.667,o),
(168,313,cs),
(168,331.667,o),
(157,340.333,o),
(145,343,cs),
(141.667,344.333,o),
(137.5,345.667,o),
(132.5,347,cs),
(127.5,348.333,o),
(125,352.667,o),
(125,360,cs),
(125,386.801,o),
(176.761,397,o),
(213,397,cs),
(287.667,397,o),
(334,350,o),
(334,262,cs),
(334,255.333,o),
(333.833,248,o),
(333.5,240,cs),
(333.167,232,o),
(333,217.667,o),
(333,197,c),
(293,231,o),
(246.667,248,o),
(194,248,cs),
(92.435,248,o),
(26,185.919,o),
(26,109,cs),
(26,34.333,o),
(84.333,-11,o),
(179,-11,cs),
(241.291,-11,o),
(319.254,8.796,o),
(382,82,c),
(410.993,37.192,o),
(450.379,-11,o),
(553,-11,cs),
(700.456,-11,o),
(771,89.95,o),
(771,169,cs),
(771,187.667,o),
(767,209,o),
(739,209,cs),
(712.087,209,o),
(707,187.813,o),
(707,177,c),
(696.394,84.202,o),
(612.549,51,o),
(546,51,cs),
(442.451,51,o),
(408,129.219,o),
(408,203,cs),
(408,215,o),
(408.667,229.333,o),
(410,244,c)
);
},
{
closed = 1;
nodes = (
(97,155.333,o),
(138.333,188,o),
(213,188,cs),
(289,188,o),
(333,153,o),
(333,117,cs),
(333,78.333,o),
(279,49,o),
(207,49,cs),
(143,49,o),
(97,71.333,o),
(97,114,cs)
);
},
{
closed = 1;
nodes = (
(424.666,349.331,o),
(462.662,415,o),
(552,415,cs),
(641.917,415,o),
(683,348.374,o),
(683,322,cs),
(683,315.333,o),
(680.333,308,o),
(667,308,cs),
(414,304,l),
(414,304,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
95 1 14 7 64 1 13 3 49 31 2 2 13 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 1 0 1 106 0 0 10 0 106 0 8 14 6 14 8 6 104 0 3 11 13 11 3 13 104 17 1 14 16 1 11 3 14 11 92 0 6 0 13 2 6 13 91 0 15 15 10 83 0 10 10 23 67 0 7 7 9 83 0 9 9 23 67 12 1 2 2 4 83 5 1 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 1 0 1 106 0 0 10 0 106 0 8 14 6 14 8 6 104 0 3 11 13 11 3 13 104 0 10 0 15 7 10 15 91 0 9 0 7 14 9 7 91 17 1 14 16 1 11 3 14 11 92 0 6 0 13 2 6 13 91 12 1 2 2 4 83 5 1 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
131 130 18 18 139 137 130 143 131 143 128 126 122 120 18 117 18 109 101 99 93 91 44 38 38 40 38 40 41 40 36 18 24
CALL[ ]	/* CallFunction */";
};
width = 795;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(237.667,-11,o),
(305.333,7.333,o),
(368,82,c),
(402.667,24.667,o),
(460,-11,o),
(544,-11,cs),
(655.238,-11,o),
(741,80.726,o),
(741,187,cs),
(741,199,o),
(735.333,205,o),
(724,205,cs),
(712.667,205,o),
(707,199,o),
(707,187,cs),
(707,100.906,o),
(650.468,21,o),
(542,21,cs),
(421.956,21,o),
(378,121.555,o),
(378,218,cs),
(378,230,o),
(378.667,244.333,o),
(380,259,c),
(432.605,259,o),
(502.073,260,o),
(551,260,cs),
(577.667,260,o),
(603.5,260,o),
(628.5,260,cs),
(653.5,260,o),
(674.667,260.333,o),
(692,261,cs),
(716,262.333,o),
(727,282.667,o),
(727,304,cs),
(727,359.427,o),
(672.596,477,o),
(547,477,cs),
(467,477,o),
(400.333,432.667,o),
(363,358,c),
(343,426,o),
(296,457,o),
(220,457,cs),
(127.897,457,o),
(56,411.543,o),
(56,339,cs),
(56,304.333,o),
(73.333,276,o),
(104,276,cs),
(126.667,276,o),
(140,291,o),
(140,311,cs),
(140,332.333,o),
(125.667,335.333,o),
(115,338,cs),
(104.333,340.667,o),
(95,342,o),
(95,358,cs),
(95,401.021,o),
(151.734,427,o),
(212,427,cs),
(300,427,o),
(334,368,o),
(334,264,cs),
(334,233.781,o),
(333,225.646,o),
(333,187,c),
(291.667,219,o),
(244.667,233,o),
(194,233,cs),
(93.633,233,o),
(26,179.745,o),
(26,106,cs),
(26,35.333,o),
(85.667,-11,o),
(179,-11,cs)
);
},
{
closed = 1;
nodes = (
(114.667,19,o),
(67,52.667,o),
(67,106,cs),
(67,164.782,o),
(124.411,203,o),
(199,203,cs),
(271.953,203,o),
(333,166.942,o),
(333,117,cs),
(333,63.726,o),
(261.784,19,o),
(184,19,cs)
);
},
{
closed = 1;
nodes = (
(397.337,363.686,o),
(445.119,445,o),
(544,445,cs),
(642.682,445,o),
(684,364.324,o),
(684,311,cs),
(684,299,o),
(678.333,293,o),
(667,293,cs),
(384,289,l),
(384,289,l),
(384,289,l),
(384,289,l)
);
},
{
closed = 1;
nodes = (
(330.797,510,o),
(418,597.027,o),
(418,618,cs),
(418,636.667,o),
(409.667,640,o),
(399,640,cs),
(378.822,640,o),
(304,545.882,o),
(304,521,cs),
(304,513.667,o),
(306.667,510,o),
(312,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
72 1 12 5 39 25 2 0 11 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 15 14 15 106 0 14 8 14 106 0 6 12 9 12 6 9 104 0 1 4 11 4 1 11 104 17 1 12 16 1 9 4 12 9 92 0 4 0 11 0 4 11 91 0 13 13 8 83 0 8 8 23 67 0 5 5 7 83 0 7 7 23 67 10 1 0 0 2 83 3 1 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 15 14 15 106 0 14 8 14 106 0 6 12 9 12 6 9 104 0 1 4 11 4 1 11 104 0 8 0 13 5 8 13 91 0 7 0 5 12 7 5 91 17 1 12 16 1 9 4 12 9 92 0 4 0 11 0 4 11 91 10 1 0 0 2 83 3 1 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
110 109 0 0 135 133 128 126 117 115 109 121 110 121 105 103 95 93 0 90 0 82 36 38 44 41 38 36 37 37 39 18 24
CALL[ ]	/* CallFunction */";
};
width = 767;
}
);
note = aeacute;
unicode = 509;
},
{
glyphname = b;
kernLeft = b;
kernRight = b;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(154,799.333,o),
(151.167,809.667,o),
(145.5,813,cs),
(139.833,816.333,o),
(134,818,o),
(128,818,cs),
(38,818,ls),
(-35.485,818,o),
(-53,806.987,o),
(-53,783,cs),
(-53,764.333,o),
(-29.667,755,o),
(-7,755,cs),
(17,755,ls),
(47,755,o),
(62,746,o),
(62,728,cs),
(62,683.296,o),
(63,603.735,o),
(63,498,cs),
(63,358.606,o),
(61.026,261.305,o),
(59,197.5,cs),
(57.037,135.66,o),
(54,82.902,o),
(54,24,cs),
(54,0,o),
(74.333,-12,o),
(97,-12,cs),
(143.304,-12,o),
(140.822,1.861,o),
(146,64,c),
(167.82,25.815,o),
(207.772,-9,o),
(283,-9,cs),
(381.638,-9,o),
(504,50.914,o),
(504,220,cs),
(504,323.713,o),
(459.367,458,o),
(329,458,cs),
(253,458,o),
(191.333,417.667,o),
(154,339,c),
(154,782,l),
(154,782,l)
);
},
{
closed = 1;
nodes = (
(160,246.287,o),
(181.72,376,o),
(305,376,cs),
(360.333,376,o),
(410,343.676,o),
(410,225,cs),
(410,108.235,o),
(336.456,70,o),
(280,70,cs),
(213.948,70,o),
(160,109.793,o),
(160,219,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 1 5 6 18 1 1 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 4 83 0 4 4 14 67 0 6 6 0 83 0 0 0 23 67 0 5 5 1 83 2 1 1 1 24 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 0 6 5 0 6 91 0 3 3 4 83 0 4 4 14 67 0 5 5 1 83 2 1 1 1 24 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
40 39 54 63 40 40 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 532;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(136,799.333,o),
(133.167,809.667,o),
(127.5,813,cs),
(121.833,816.333,o),
(116,818,o),
(110,818,cs),
(20,818,ls),
(-6,818,o),
(-26.5,815.5,o),
(-41.5,810.5,cs),
(-56.5,805.5,o),
(-64,798.333,o),
(-64,789,cs),
(-64,773,o),
(-40.667,767,o),
(-18,767,cs),
(20,767,ls),
(50,767,o),
(65,758,o),
(65,740,cs),
(65,691.99,o),
(66,606.882,o),
(66,498,cs),
(66,358.606,o),
(64.026,261.305,o),
(62,197.5,cs),
(60.037,135.66,o),
(57,82.902,o),
(57,24,cs),
(57,0,o),
(71.333,-12,o),
(90,-12,cs),
(123.972,-12,o),
(122.512,2.145,o),
(128,68,c),
(150.227,29.103,o),
(189.831,-9,o),
(265,-9,cs),
(363.638,-9,o),
(486,50.914,o),
(486,220,cs),
(486,323.713,o),
(441.367,458,o),
(311,458,cs),
(235,458,o),
(173.333,414,o),
(136,334,c),
(136,782,l),
(136,782,l)
);
},
{
closed = 1;
nodes = (
(139,255.085,o),
(186.467,397,o),
(294,397,cs),
(341.428,397,o),
(413,349.785,o),
(413,225,cs),
(413,91.374,o),
(325.792,52,o),
(263,52,cs),
(181.667,52,o),
(139,105,o),
(139,205,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
18 0 2 5 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 4 83 0 4 4 14 67 0 6 6 0 83 0 0 0 23 67 0 5 5 1 83 2 1 1 1 24 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 0 6 5 0 6 91 0 3 3 4 83 0 4 4 14 67 0 5 5 1 83 2 1 1 1 24 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
40 37 52 63 40 40 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 517;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(87.333,-12,o),
(92.333,-6.667,o),
(95,4,cs),
(97.667,14.667,o),
(100,36,o),
(102,68,c),
(124.227,29.103,o),
(163.831,-9,o),
(239,-9,cs),
(337.638,-9,o),
(460,50.914,o),
(460,220,cs),
(460,323.713,o),
(415.367,458,o),
(285,458,cs),
(209,458,o),
(147.333,414,o),
(110,334,c),
(110,782,ls),
(110,799.333,o),
(107.167,809.667,o),
(101.5,813,cs),
(95.833,816.333,o),
(90,818,o),
(84,818,cs),
(-6,818,ls),
(-2.923,818,o),
(-80,818.65,o),
(-80,799,cs),
(-80,793.667,o),
(-75.167,790.333,o),
(-65.5,789,cs),
(-55.833,787.667,o),
(-45.333,787,o),
(-34,787,cs),
(24,787,ls),
(53.333,787,o),
(69,780,o),
(69,760,cs),
(69,708.244,o),
(70,617.107,o),
(70,498,cs),
(70,358.606,o),
(68.026,261.305,o),
(66,197.5,cs),
(64.037,135.66,o),
(61,82.902,o),
(61,24,cs),
(61,0,o),
(67.333,-12,o),
(80,-12,cs)
);
},
{
closed = 1;
nodes = (
(132.57,22,o),
(109,104.078,o),
(109,182,cs),
(109,317.385,o),
(188.643,427,o),
(278,427,cs),
(337.796,427,o),
(417,372.296,o),
(417,225,cs),
(417,63.697,o),
(314.579,22,o),
(239,22,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
18 0 2 5 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 4 83 0 4 4 14 67 0 6 6 0 83 0 0 0 23 67 0 5 5 1 83 2 1 1 1 24 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 0 6 5 0 6 91 0 3 3 4 83 0 4 4 14 67 0 5 5 1 83 2 1 1 1 24 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
40 39 69 63 38 40 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 495;
}
);
note = b;
unicode = 98;
},
{
glyphname = c;
kernLeft = c;
kernRight = c;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(352.667,473.333,o),
(304,482,o),
(264,482,cs),
(119.616,482,o),
(26,360.71,o),
(26,231,cs),
(26,99.311,o),
(123.447,-6,o),
(269,-6,cs),
(384.171,-6,o),
(450.257,49.485,o),
(477,100,cs),
(483.667,110.667,o),
(485,123.333,o),
(485,130,cs),
(485,146,o),
(472.667,161,o),
(450,161,cs),
(427.333,161,o),
(413.667,145.333,o),
(399,128,cs),
(372.333,97.333,o),
(337,73,o),
(269,73,cs),
(166.333,73,o),
(124,134.333,o),
(124,229,cs),
(124,327.382,o),
(169.745,404,o),
(272,404,cs),
(356.037,404,o),
(367.217,352.134,o),
(377,313,cs),
(379.667,301,o),
(391.667,282,o),
(421,282,cs),
(451.667,282,o),
(461,296.333,o),
(461,335,cs),
(461,341.904,o),
(460,384.575,o),
(460,463,cs),
(460,485.667,o),
(454,511,o),
(422,511,cs),
(390,511,o),
(380,487.667,o),
(380,465,cs),
(380,457,o),
(380.667,442.667,o),
(382,428,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 2 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 1 3 1 4 3 104 0 0 0 1 4 0 1 91 0 2 2 6 83 0 6 6 23 67 0 3 3 5 83 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 4 1 3 1 4 3 104 0 6 0 2 1 6 2 91 0 0 0 1 4 0 1 91 0 3 3 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
40 41 36 38 38 41 37 7 22
CALL[ ]	/* CallFunction */";
};
width = 504;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(352.667,472,o),
(312.667,482,o),
(262,482,cs),
(127.407,482,o),
(29,368.624,o),
(29,225,cs),
(29,101.167,o),
(109.087,-6,o),
(253,-6,cs),
(342.333,-6,o),
(410.333,29.667,o),
(457,101,cs),
(463.667,111.667,o),
(467,117.333,o),
(467,128,cs),
(467,146.667,o),
(451.667,154,o),
(437,154,cs),
(427.667,154,o),
(416.333,149.333,o),
(403,128,cs),
(379,88,o),
(326.333,56,o),
(249,56,cs),
(158.333,56,o),
(106,121.667,o),
(106,227,cs),
(106,341.73,o),
(170.925,422,o),
(259,422,cs),
(348.333,422,o),
(380,378.333,o),
(380,309,cs),
(380,294.333,o),
(396.333,288,o),
(407,288,cs),
(427,288,o),
(443,299.333,o),
(443,310,cs),
(443,359.062,o),
(444,426.6,o),
(444,478,cs),
(444,498,o),
(433.667,511,o),
(411,511,cs),
(388.333,511,o),
(380,497.667,o),
(380,483,cs),
(380,464.333,o),
(380.667,442.667,o),
(382,428,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 2 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 1 3 1 4 3 104 0 0 0 1 4 0 1 91 0 2 2 6 83 0 6 6 23 67 0 3 3 5 83 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 4 1 3 1 4 3 104 0 6 0 2 1 6 2 91 0 0 0 1 4 0 1 91 0 3 3 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
40 38 36 38 36 41 37 7 22
CALL[ ]	/* CallFunction */";
};
width = 488;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(327.667,-6,o),
(389,29.667,o),
(431,101,cs),
(437.667,112.333,o),
(441,121.333,o),
(441,128,cs),
(441,136,o),
(434.667,143,o),
(428,143,cs),
(420.667,143,o),
(413.667,138,o),
(407,128,cs),
(365.667,58.667,o),
(318.333,26,o),
(253,26,cs),
(143.667,26,o),
(80,103,o),
(80,227,cs),
(80,358.083,o),
(155.688,452,o),
(263,452,cs),
(352.333,452,o),
(384,400.333,o),
(384,319,cs),
(384,303,o),
(390.333,298,o),
(401,298,cs),
(411.667,298,o),
(417,309.333,o),
(417,320,cs),
(417,346.538,o),
(418,401.205,o),
(418,484,cs),
(418,498.667,o),
(411.667,511,o),
(401,511,cs),
(390.333,511,o),
(384,497.667,o),
(384,483,cs),
(384,464.333,o),
(384.667,442.667,o),
(386,428,c),
(356.667,472,o),
(316.667,482,o),
(266,482,cs),
(131.407,482,o),
(33,368.624,o),
(33,225,cs),
(33,97.369,o),
(119.723,-6,o),
(247,-6,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 1 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 1 3 1 4 3 104 0 0 0 1 4 0 1 91 0 2 2 6 83 0 6 6 23 67 0 3 3 5 83 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 4 1 3 1 4 3 104 0 6 0 2 1 6 2 91 0 0 0 1 4 0 1 91 0 3 3 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
40 37 35 38 36 41 37 7 22
CALL[ ]	/* CallFunction */";
};
width = 465;
}
);
note = c;
unicode = 99;
},
{
glyphname = cacute;
kernLeft = c;
kernRight = c;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(400,667.333,o),
(372.667,688.667,o),
(330,690,cs),
(304.667,690,o),
(274,651.167,o),
(250,610.5,cs),
(229.511,575.783,o),
(208,528.988,o),
(208,524,cs),
(208,509.333,o),
(230.333,502,o),
(245,502,cs),
(262.099,502,o),
(297.389,524.679,o),
(336,559,cs),
(370.627,589.78,o),
(400,624.341,o),
(400,642,cs)
);
},
{
closed = 1;
nodes = (
(352.667,473.333,o),
(304,482,o),
(264,482,cs),
(119.616,482,o),
(26,360.71,o),
(26,231,cs),
(26,99.311,o),
(123.447,-6,o),
(269,-6,cs),
(384.171,-6,o),
(450.257,49.485,o),
(477,100,cs),
(483.667,110.667,o),
(485,123.333,o),
(485,130,cs),
(485,146,o),
(472.667,161,o),
(450,161,cs),
(427.333,161,o),
(413.667,145.333,o),
(399,128,cs),
(372.333,97.333,o),
(337,73,o),
(269,73,cs),
(166.333,73,o),
(124,134.333,o),
(124,229,cs),
(124,327.382,o),
(169.745,404,o),
(272,404,cs),
(356.037,404,o),
(367.217,352.134,o),
(377,313,cs),
(379.667,301,o),
(391.667,282,o),
(421,282,cs),
(451.667,282,o),
(461,296.333,o),
(461,335,cs),
(461,341.904,o),
(460,384.575,o),
(460,463,cs),
(460,485.667,o),
(454,511,o),
(422,511,cs),
(390,511,o),
(380,487.667,o),
(380,465,cs),
(380,457,o),
(380.667,442.667,o),
(382,428,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
18 1 4 8 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 2 1 106 0 0 2 8 2 0 8 104 0 6 3 5 3 6 5 104 0 2 0 3 6 2 3 91 0 4 4 8 83 0 8 8 23 67 0 5 5 7 84 0 7 7 16 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 2 1 106 0 0 2 8 2 0 8 104 0 6 3 5 3 6 5 104 0 8 0 4 3 8 4 91 0 2 0 3 6 2 3 91 0 5 5 7 84 0 7 7 16 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
40 41 36 38 38 41 39 38 38 9 24
CALL[ ]	/* CallFunction */";
};
width = 504;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(364,655.667,o),
(345.667,671,o),
(315,671,cs),
(296.842,671,o),
(267.95,636.615,o),
(245.5,600.5,cs),
(219.079,557.997,o),
(204,528.525,o),
(204,523,cs),
(204,509.667,o),
(218.333,505,o),
(229,505,cs),
(258.68,505,o),
(364,604.002,o),
(364,633,cs)
);
},
{
closed = 1;
nodes = (
(352.667,472,o),
(312.667,482,o),
(262,482,cs),
(127.407,482,o),
(29,368.624,o),
(29,225,cs),
(29,101.167,o),
(109.087,-6,o),
(253,-6,cs),
(342.333,-6,o),
(410.333,29.667,o),
(457,101,cs),
(463.667,111.667,o),
(467,117.333,o),
(467,128,cs),
(467,146.667,o),
(451.667,154,o),
(437,154,cs),
(427.667,154,o),
(416.333,149.333,o),
(403,128,cs),
(379,88,o),
(326.333,56,o),
(249,56,cs),
(158.333,56,o),
(106,121.667,o),
(106,227,cs),
(106,341.73,o),
(170.925,422,o),
(259,422,cs),
(348.333,422,o),
(380,378.333,o),
(380,309,cs),
(380,294.333,o),
(396.333,288,o),
(407,288,cs),
(427,288,o),
(443,299.333,o),
(443,310,cs),
(443,359.062,o),
(444,426.6,o),
(444,478,cs),
(444,498,o),
(433.667,511,o),
(411,511,cs),
(388.333,511,o),
(380,497.667,o),
(380,483,cs),
(380,464.333,o),
(380.667,442.667,o),
(382,428,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
18 1 4 8 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 2 1 106 0 0 2 8 2 0 8 104 0 6 3 5 3 6 5 104 0 2 0 3 6 2 3 91 0 4 4 8 83 0 8 8 23 67 0 5 5 7 83 0 7 7 16 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 2 1 106 0 0 2 8 2 0 8 104 0 6 3 5 3 6 5 104 0 8 0 4 3 8 4 92 0 2 0 3 6 2 3 91 0 5 5 7 83 0 7 7 16 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
40 38 36 38 36 41 39 40 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 488;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(327.667,-6,o),
(389,29.667,o),
(431,101,cs),
(437.667,112.333,o),
(441,121.333,o),
(441,128,cs),
(441,136,o),
(434.667,143,o),
(428,143,cs),
(420.667,143,o),
(413.667,138,o),
(407,128,cs),
(365.667,58.667,o),
(318.333,26,o),
(253,26,cs),
(143.667,26,o),
(80,103,o),
(80,227,cs),
(80,358.083,o),
(155.688,452,o),
(263,452,cs),
(352.333,452,o),
(384,400.333,o),
(384,319,cs),
(384,303,o),
(390.333,298,o),
(401,298,cs),
(411.667,298,o),
(417,309.333,o),
(417,320,cs),
(417,346.538,o),
(418,401.205,o),
(418,484,cs),
(418,498.667,o),
(411.667,511,o),
(401,511,cs),
(390.333,511,o),
(384,497.667,o),
(384,483,cs),
(384,464.333,o),
(384.667,442.667,o),
(386,428,c),
(356.667,472,o),
(316.667,482,o),
(266,482,cs),
(131.407,482,o),
(33,368.624,o),
(33,225,cs),
(33,97.369,o),
(119.723,-6,o),
(247,-6,cs)
);
},
{
closed = 1;
nodes = (
(225.797,510,o),
(313,597.027,o),
(313,618,cs),
(313,636.667,o),
(304.667,640,o),
(294,640,cs),
(273.822,640,o),
(199,545.882,o),
(199,521,cs),
(199,513.667,o),
(201.667,510,o),
(207,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
15 1 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 2 1 106 0 0 2 8 2 0 8 104 0 6 3 5 3 6 5 104 0 2 0 3 6 2 3 91 0 4 4 8 83 0 8 8 23 67 0 5 5 7 83 0 7 7 16 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 2 1 106 0 0 2 8 2 0 8 104 0 6 3 5 3 6 5 104 0 8 0 4 3 8 4 92 0 2 0 3 6 2 3 91 0 5 5 7 83 0 7 7 16 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
40 37 35 38 36 41 39 37 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 465;
}
);
note = cacute;
unicode = 263;
},
{
glyphname = ccaron;
kernLeft = c;
kernRight = c;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(390.803,640,o),
(353.614,615.913,o),
(282,578,c),
(232.718,604.09,o),
(175.064,640,o),
(163,640,cs),
(155,640,o),
(150,632.667,o),
(150,626,cs),
(150,599.333,o),
(178.333,565.167,o),
(209,536.5,cs),
(235.897,511.357,o),
(271,486,o),
(282,486,cs),
(305.877,486,o),
(415,578.037,o),
(415,619,cs),
(415,629.667,o),
(411.333,640,o),
(402,640,cs)
);
},
{
closed = 1;
nodes = (
(352.667,473.333,o),
(304,482,o),
(264,482,cs),
(119.616,482,o),
(26,360.71,o),
(26,231,cs),
(26,99.311,o),
(123.447,-6,o),
(269,-6,cs),
(384.171,-6,o),
(450.257,49.485,o),
(477,100,cs),
(483.667,110.667,o),
(485,123.333,o),
(485,130,cs),
(485,146,o),
(472.667,161,o),
(450,161,cs),
(427.333,161,o),
(413.667,145.333,o),
(399,128,cs),
(372.333,97.333,o),
(337,73,o),
(269,73,cs),
(166.333,73,o),
(124,134.333,o),
(124,229,cs),
(124,327.382,o),
(169.745,404,o),
(272,404,cs),
(356.037,404,o),
(367.217,352.134,o),
(377,313,cs),
(379.667,301,o),
(391.667,282,o),
(421,282,cs),
(451.667,282,o),
(461,296.333,o),
(461,335,cs),
(461,341.904,o),
(460,384.575,o),
(460,463,cs),
(460,485.667,o),
(454,511,o),
(422,511,cs),
(390,511,o),
(380,487.667,o),
(380,465,cs),
(380,457,o),
(380.667,442.667,o),
(382,428,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
21 1 3 0 26 1 5 9 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
2 10 2 0 3 3 0 94 0 1 3 9 3 1 9 104 0 7 4 6 4 7 6 104 0 3 0 4 7 3 4 92 0 5 5 9 83 0 9 9 23 67 0 6 6 8 83 0 8 8 16 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
2 10 2 0 3 0 106 0 1 3 9 3 1 9 104 0 7 4 6 4 7 6 104 0 3 0 4 7 3 4 92 0 5 5 9 83 0 9 9 23 67 0 6 6 8 83 0 8 8 16 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
2 10 2 0 3 0 106 0 1 3 9 3 1 9 104 0 7 4 6 4 7 6 104 0 9 0 5 4 9 5 91 0 3 0 4 7 3 4 92 0 6 6 8 83 0 8 8 16 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 87 85 77 75 66 64 60 58 52 50 44 42 33 31 17 15 9 7 0 25 1 25 11 15
CALL[ ]	/* CallFunction */";
};
width = 499;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(352.667,472,o),
(312.667,482,o),
(262,482,cs),
(127.407,482,o),
(29,368.624,o),
(29,225,cs),
(29,101.167,o),
(109.087,-6,o),
(253,-6,cs),
(342.333,-6,o),
(410.333,29.667,o),
(457,101,cs),
(463.667,111.667,o),
(467,117.333,o),
(467,128,cs),
(467,146.667,o),
(451.667,154,o),
(437,154,cs),
(427.667,154,o),
(416.333,149.333,o),
(403,128,cs),
(379,88,o),
(326.333,56,o),
(249,56,cs),
(158.333,56,o),
(106,121.667,o),
(106,227,cs),
(106,341.73,o),
(170.925,422,o),
(259,422,cs),
(348.333,422,o),
(380,378.333,o),
(380,309,cs),
(380,294.333,o),
(396.333,288,o),
(407,288,cs),
(427,288,o),
(443,299.333,o),
(443,310,cs),
(443,359.062,o),
(444,426.6,o),
(444,478,cs),
(444,498,o),
(433.667,511,o),
(411,511,cs),
(388.333,511,o),
(380,497.667,o),
(380,483,cs),
(380,464.333,o),
(380.667,442.667,o),
(382,428,c)
);
},
{
closed = 1;
nodes = (
(380,640,o),
(286,577,o),
(273,569,c),
(200,612,o),
(169,640,o),
(154,640,cs),
(147,640,o),
(143,636,o),
(143,627,cs),
(143,586,o),
(251,495,o),
(273,495,cs),
(298,495,o),
(404,588,o),
(404,623,cs),
(404,632,o),
(401,640,o),
(393,640,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
64 1 0 7 1 1 2 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
8 10 2 7 0 7 106 0 4 1 3 1 4 3 104 0 0 0 1 4 0 1 91 0 9 9 23 67 0 2 2 6 83 0 6 6 23 67 0 3 3 5 83 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
8 10 2 7 0 7 106 0 9 0 6 6 9 96 0 4 1 3 1 4 3 104 0 6 0 2 1 6 2 92 0 0 0 1 4 0 1 91 0 3 3 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
60 59 77 75 70 68 59 83 60 83 40 38 36 38 36 41 38 11 33
CALL[ ]	/* CallFunction */";
};
width = 488;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(340.333,-6,o),
(397.333,37.667,o),
(440,103,cs),
(446.667,113,o),
(450,120.667,o),
(450,126,cs),
(450,132.667,o),
(447,140,o),
(435,140,cs),
(425.667,140,o),
(421,134.667,o),
(417,128,cs),
(374.333,57.333,o),
(322.333,26,o),
(253,26,cs),
(143.667,26,o),
(78,103,o),
(78,227,cs),
(78,357.605,o),
(155.013,452,o),
(263,452,cs),
(359,452,o),
(394,400.333,o),
(394,319,cs),
(394,312.333,o),
(397.667,296,o),
(411,296,cs),
(421.667,296,o),
(425,309.333,o),
(425,320,cs),
(425,327.333,o),
(425.167,341.833,o),
(425.5,363.5,cs),
(425.833,385.167,o),
(426,416,o),
(426,456,cs),
(426,470.667,o),
(420,482,o),
(408,482,cs),
(397.333,482,o),
(394,469.667,o),
(394,455,cs),
(394,443,o),
(396.667,427,o),
(398,419,c),
(367.333,465.667,o),
(320.667,482,o),
(266,482,cs),
(131.407,482,o),
(33,368.624,o),
(33,225,cs),
(33,97.369,o),
(119.723,-6,o),
(247,-6,cs)
);
},
{
closed = 1;
nodes = (
(284.852,510,o),
(388,603.671,o),
(388,629,cs),
(388,636.333,o),
(385.333,640,o),
(380,640,cs),
(365.302,640,o),
(336.411,607.937,o),
(260,554,c),
(223.597,579.696,o),
(154.139,640,o),
(141,640,cs),
(135.667,640,o),
(133,636.333,o),
(133,629,cs),
(133,604.067,o),
(236.626,510,o),
(260,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
75 1 8 7 0 1 1 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
9 10 2 7 8 7 106 0 8 0 8 106 0 4 1 3 1 4 3 104 0 2 2 0 83 6 1 0 0 23 67 0 1 1 0 83 6 1 0 0 23 67 0 3 3 5 83 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
9 10 2 7 8 7 106 0 8 0 8 106 0 4 1 3 1 4 3 104 0 2 1 0 2 79 6 1 0 0 1 4 0 1 91 0 3 3 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
57 56 71 69 64 62 56 79 57 79 40 38 36 38 36 39 37 11 22
CALL[ ]	/* CallFunction */";
};
width = 473;
}
);
note = ccaron;
unicode = 269;
},
{
glyphname = ccedilla;
kernLeft = c;
kernRight = c;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(352.667,473.333,o),
(304,482,o),
(264,482,cs),
(119.616,482,o),
(26,360.71,o),
(26,231,cs),
(26,115.632,o),
(97.582,20.53,o),
(216,-1,c),
(214.667,-9.667,o),
(213.333,-20.667,o),
(212,-34,cs),
(210.667,-47.333,o),
(208.667,-59.667,o),
(206,-71,cs),
(204.667,-76.333,o),
(203,-84,o),
(203,-88,cs),
(203,-102.667,o),
(210.333,-121,o),
(241,-121,cs),
(282.636,-121,o),
(296.572,-93,o),
(331,-93,cs),
(341.667,-93,o),
(354,-98.333,o),
(354,-109,cs),
(354,-117,o),
(351,-122.667,o),
(345,-126,cs),
(339,-129.333,o),
(327,-131,o),
(309,-131,cs),
(235.546,-131,o),
(234,-150.71,o),
(234,-159,cs),
(234,-167.667,o),
(240.167,-173.5,o),
(252.5,-176.5,cs),
(264.833,-179.5,o),
(285,-181,o),
(313,-181,cs),
(382.658,-181,o),
(442,-154.591,o),
(442,-103,cs),
(442,-64.333,o),
(409,-40,o),
(365,-40,cs),
(337,-40,o),
(317,-50.333,o),
(285,-69,c),
(296,-5,l),
(394.776,2.598,o),
(454.479,54.957,o),
(477,100,c),
(483.667,110.667,o),
(485,123.333,o),
(485,130,cs),
(485,146,o),
(472.667,161,o),
(450,161,cs),
(427.333,161,o),
(413.667,145.333,o),
(399,128,cs),
(372.333,97.333,o),
(337,73,o),
(269,73,cs),
(166.333,73,o),
(124,134.333,o),
(124,229,cs),
(124,327.382,o),
(169.745,404,o),
(272,404,cs),
(356.037,404,o),
(367.217,352.134,o),
(377,313,cs),
(379.667,301,o),
(391.667,282,o),
(421,282,cs),
(451.667,282,o),
(461,296.333,o),
(461,335,cs),
(461,341.904,o),
(460,384.575,o),
(460,463,cs),
(460,485.667,o),
(454,511,o),
(422,511,cs),
(390,511,o),
(380,487.667,o),
(380,465,cs),
(380,457,o),
(380.667,442.667,o),
(382,428,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 1 2 10 90 1 5 3 51 1 8 5 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 4 1 3 1 4 3 104 0 5 3 8 3 5 8 104 0 8 9 9 8 94 0 0 0 1 4 0 1 91 0 3 0 9 7 3 9 91 0 2 2 10 83 0 10 10 23 67 0 7 7 6 83 0 6 6 17 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 4 1 3 1 4 3 104 0 5 3 8 3 5 8 104 0 8 9 9 8 94 0 10 0 2 1 10 2 91 0 0 0 1 4 0 1 91 0 3 0 9 7 3 9 91 0 7 6 6 7 79 0 7 7 6 83 0 6 7 6 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 4 1 3 1 4 3 104 0 5 3 8 3 5 8 104 0 8 9 3 8 9 102 0 10 0 2 1 10 2 91 0 0 0 1 4 0 1 91 0 3 0 9 7 3 9 91 0 7 6 6 7 79 0 7 7 6 83 0 6 7 6 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
101 99 82 80 36 38 38 45 36 38 38 41 37 11 24
CALL[ ]	/* CallFunction */";
};
width = 504;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(352.667,472,o),
(312.667,482,o),
(262,482,cs),
(127.407,482,o),
(29,368.624,o),
(29,225,cs),
(29,101.167,o),
(109.087,-6,o),
(253,-6,cs),
(342.333,-6,o),
(410.333,29.667,o),
(457,101,cs),
(463.667,111.667,o),
(467,117.333,o),
(467,128,cs),
(467,146.667,o),
(451.667,154,o),
(437,154,cs),
(427.667,154,o),
(416.333,149.333,o),
(403,128,cs),
(379,88,o),
(326.333,56,o),
(249,56,cs),
(158.333,56,o),
(106,121.667,o),
(106,227,cs),
(106,341.73,o),
(170.925,422,o),
(259,422,cs),
(348.333,422,o),
(380,378.333,o),
(380,309,cs),
(380,294.333,o),
(396.333,288,o),
(407,288,cs),
(427,288,o),
(443,299.333,o),
(443,310,cs),
(443,359.062,o),
(444,426.6,o),
(444,478,cs),
(444,498,o),
(433.667,511,o),
(411,511,cs),
(388.333,511,o),
(380,497.667,o),
(380,483,cs),
(380,464.333,o),
(380.667,442.667,o),
(382,428,c)
);
},
{
closed = 1;
nodes = (
(220,1,o),
(218,-10,o),
(217,-26,cs),
(215,-42,o),
(212,-57,o),
(209,-71,cs),
(208,-76,o),
(206,-84,o),
(206,-88,cs),
(206,-99,o),
(212,-113,o),
(235,-113,cs),
(266,-113,o),
(290,-85,o),
(326,-85,cs),
(335,-85,o),
(357,-90,o),
(357,-109,cs),
(357,-136,o),
(334,-139,o),
(291,-139,cs),
(264,-139,o),
(248,-141,o),
(241,-146,cs),
(234,-151,o),
(230,-156,o),
(230,-161,cs),
(230,-170,o),
(236,-175,o),
(247,-177,cs),
(258,-180,o),
(274,-181,o),
(295,-181,cs),
(365,-181,o),
(424,-155,o),
(424,-103,cs),
(424,-64,o),
(391,-40,o),
(347,-40,cs),
(319,-40,o),
(299,-50,o),
(267,-69,c),
(280,3,l),
(261,7,l),
(221,7,l),
(221,7,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
1 1 2 6 60 1 5 12 61 1 10 7 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
0 4 1 3 1 4 3 104 0 3 12 12 3 94 0 11 10 9 5 11 96 0 0 0 1 4 0 1 91 0 7 0 10 11 7 10 91 0 2 2 6 83 0 6 6 23 67 13 1 12 12 5 84 0 5 5 16 67 0 9 9 8 83 0 8 8 17 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 4 1 3 1 4 3 104 0 3 12 12 3 94 0 11 10 9 10 11 9 104 0 0 0 1 4 0 1 91 0 7 0 10 11 7 10 91 0 2 2 6 83 0 6 6 23 67 13 1 12 12 5 84 0 5 5 16 67 0 9 9 8 83 0 8 8 17 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 4 1 3 1 4 3 104 0 3 12 12 3 94 0 11 10 9 10 11 9 104 0 6 0 2 1 6 2 91 0 0 0 1 4 0 1 91 0 7 0 10 11 7 10 91 13 1 12 12 5 84 0 5 5 16 67 0 9 9 8 83 0 8 8 17 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 4 1 3 1 4 3 104 0 3 12 12 3 94 0 11 10 9 10 11 9 104 0 6 0 2 1 6 2 91 0 0 0 1 4 0 1 91 0 7 0 10 11 7 10 91 0 9 0 8 9 8 87 13 1 12 12 5 84 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
0 4 1 3 1 4 3 104 0 3 12 1 3 12 102 0 11 10 9 10 11 9 104 0 6 0 2 1 6 2 91 0 0 0 1 4 0 1 91 0 7 0 10 11 7 10 91 0 9 0 8 9 8 87 13 1 12 12 5 84 0 5 5 16 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
59 59 59 98 59 98 90 88 85 83 79 77 38 38 40 38 36 38 36 41 38 14 35
CALL[ ]	/* CallFunction */";
};
width = 488;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(338.658,-181,o),
(398,-154.591,o),
(398,-103,cs),
(398,-64.333,o),
(365,-40,o),
(321,-40,cs),
(293,-40,o),
(273,-50.333,o),
(241,-69,c),
(252,-6,l),
(331.333,-4,o),
(391,31.667,o),
(431,101,cs),
(437.667,112.333,o),
(441,121.333,o),
(441,128,cs),
(441,136,o),
(434.667,143,o),
(428,143,cs),
(420.667,143,o),
(413.667,138,o),
(407,128,cs),
(365.667,58.667,o),
(318.333,26,o),
(253,26,cs),
(143.667,26,o),
(80,103,o),
(80,227,cs),
(80,358.083,o),
(155.688,452,o),
(263,452,cs),
(352.333,452,o),
(384,400.333,o),
(384,319,cs),
(384,303,o),
(390.333,298,o),
(401,298,cs),
(411.667,298,o),
(417,309.333,o),
(417,320,cs),
(417,346.538,o),
(418,401.205,o),
(418,484,cs),
(418,498.667,o),
(411.667,511,o),
(401,511,cs),
(390.333,511,o),
(384,497.667,o),
(384,483,cs),
(384,464.333,o),
(384.667,442.667,o),
(386,428,c),
(356.667,472,o),
(316.667,482,o),
(266,482,cs),
(131.407,482,o),
(33,368.624,o),
(33,225,cs),
(33,107.838,o),
(107.661,5.729,o),
(223,-5,c),
(221.667,-13.667,o),
(220.167,-24,o),
(218.5,-36,cs),
(216.833,-48,o),
(215,-59.667,o),
(213,-71,cs),
(211.667,-76.333,o),
(210,-84,o),
(210,-88,cs),
(210,-93.333,o),
(215.333,-100,o),
(226,-100,cs),
(248.431,-100,o),
(281.636,-72,o),
(318,-72,cs),
(347.333,-72,o),
(361,-90.333,o),
(361,-109,cs),
(361,-139.667,o),
(326.333,-152,o),
(265,-152,cs),
(251.667,-152,o),
(241.5,-152.5,o),
(234.5,-153.5,cs),
(227.5,-154.5,o),
(224,-158,o),
(224,-164,cs),
(224,-168.667,o),
(226.833,-172.667,o),
(232.5,-176,cs),
(238.167,-179.333,o),
(250.333,-181,o),
(269,-181,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
0 1 1 2 44 1 9 6 2 66 81 1 5 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 4 1 3 1 4 3 104 0 10 9 8 5 10 96 0 0 0 1 4 0 1 91 0 6 0 9 10 6 9 91 0 2 2 11 83 0 11 11 23 67 0 3 3 5 83 0 5 5 16 67 0 8 8 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 4 1 3 1 4 3 104 0 10 9 8 9 10 8 104 0 0 0 1 4 0 1 91 0 6 0 9 10 6 9 91 0 2 2 11 83 0 11 11 23 67 0 3 3 5 83 0 5 5 16 67 0 8 8 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 4 1 3 1 4 3 104 0 10 9 8 9 10 8 104 0 11 0 2 1 11 2 91 0 0 0 1 4 0 1 91 0 6 0 9 10 6 9 91 0 3 3 5 83 0 5 5 16 67 0 8 8 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 4 1 3 1 4 3 104 0 10 9 8 9 10 8 104 0 11 0 2 1 11 2 91 0 0 0 1 4 0 1 91 0 6 0 9 10 6 9 91 0 8 0 7 8 7 87 0 3 3 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
92 90 73 71 68 66 36 38 35 21 35 38 36 41 37 12 24
CALL[ ]	/* CallFunction */";
};
width = 465;
}
);
note = ccedilla;
unicode = 231;
},
{
glyphname = ccircumflex;
kernLeft = c;
kernRight = c;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(402.333,510,o),
(406,520.333,o),
(406,531,cs),
(406,571.963,o),
(296.877,664,o),
(273,664,cs),
(262,664,o),
(226.897,638.643,o),
(200,613.5,cs),
(169.333,584.833,o),
(141,549.333,o),
(141,524,cs),
(141,517.333,o),
(146,510,o),
(154,510,cs),
(166.064,510,o),
(223.718,545.91,o),
(273,572,c),
(344.614,534.087,o),
(381.803,510,o),
(393,510,cs)
);
},
{
closed = 1;
nodes = (
(352.667,473.333,o),
(304,482,o),
(264,482,cs),
(119.616,482,o),
(26,360.71,o),
(26,231,cs),
(26,99.311,o),
(123.447,-6,o),
(269,-6,cs),
(384.171,-6,o),
(450.257,49.485,o),
(477,100,cs),
(483.667,110.667,o),
(485,123.333,o),
(485,130,cs),
(485,146,o),
(472.667,161,o),
(450,161,cs),
(427.333,161,o),
(413.667,145.333,o),
(399,128,cs),
(372.333,97.333,o),
(337,73,o),
(269,73,cs),
(166.333,73,o),
(124,134.333,o),
(124,229,cs),
(124,327.382,o),
(169.745,404,o),
(272,404,cs),
(356.037,404,o),
(367.217,352.134,o),
(377,313,cs),
(379.667,301,o),
(391.667,282,o),
(421,282,cs),
(451.667,282,o),
(461,296.333,o),
(461,335,cs),
(461,341.904,o),
(460,384.575,o),
(460,463,cs),
(460,485.667,o),
(454,511,o),
(422,511,cs),
(390,511,o),
(380,487.667,o),
(380,465,cs),
(380,457,o),
(380.667,442.667,o),
(382,428,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
5 1 3 2 26 1 5 9 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 3 2 106 1 10 2 0 3 9 3 0 9 104 0 7 4 6 4 7 6 104 0 3 0 4 7 3 4 91 0 5 5 9 83 0 9 9 23 67 0 6 6 8 83 0 8 8 16 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 2 3 2 106 1 10 2 0 3 9 3 0 9 104 0 7 4 6 4 7 6 104 0 9 0 5 4 9 5 92 0 3 0 4 7 3 4 91 0 6 6 8 83 0 8 8 16 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 87 85 77 75 66 64 60 58 52 50 44 42 33 31 19 17 11 9 0 25 1 25 11 15
CALL[ ]	/* CallFunction */";
};
width = 499;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(352.667,472,o),
(312.667,482,o),
(262,482,cs),
(127.407,482,o),
(29,368.624,o),
(29,225,cs),
(29,101.167,o),
(109.087,-6,o),
(253,-6,cs),
(342.333,-6,o),
(410.333,29.667,o),
(457,101,cs),
(463.667,111.667,o),
(467,117.333,o),
(467,128,cs),
(467,146.667,o),
(451.667,154,o),
(437,154,cs),
(427.667,154,o),
(416.333,149.333,o),
(403,128,cs),
(379,88,o),
(326.333,56,o),
(249,56,cs),
(158.333,56,o),
(106,121.667,o),
(106,227,cs),
(106,341.73,o),
(170.925,422,o),
(259,422,cs),
(348.333,422,o),
(380,378.333,o),
(380,309,cs),
(380,294.333,o),
(396.333,288,o),
(407,288,cs),
(427,288,o),
(443,299.333,o),
(443,310,cs),
(443,359.062,o),
(444,426.6,o),
(444,478,cs),
(444,498,o),
(433.667,511,o),
(411,511,cs),
(388.333,511,o),
(380,497.667,o),
(380,483,cs),
(380,464.333,o),
(380.667,442.667,o),
(382,428,c)
);
},
{
closed = 1;
nodes = (
(393,510,o),
(396,518,o),
(396,527,cs),
(396,562,o),
(290,655,o),
(265,655,cs),
(243,655,o),
(135,564,o),
(135,523,cs),
(135,514,o),
(139,510,o),
(146,510,cs),
(161,510,o),
(192,538,o),
(265,581,c),
(278,573,o),
(372,510,o),
(385,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
64 1 0 9 1 1 2 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 9 0 9 106 8 10 2 7 0 6 0 7 6 104 0 4 1 3 1 4 3 104 0 0 0 1 4 0 1 91 0 2 2 6 83 0 6 6 23 67 0 3 3 5 83 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 9 0 9 106 8 10 2 7 0 6 0 7 6 104 0 4 1 3 1 4 3 104 0 6 0 2 1 6 2 92 0 0 0 1 4 0 1 91 0 3 3 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
60 59 77 75 70 68 59 83 60 83 40 38 36 38 36 41 38 11 33
CALL[ ]	/* CallFunction */";
};
width = 488;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(340.333,-6,o),
(397.333,37.667,o),
(440,103,cs),
(446.667,113,o),
(450,120.667,o),
(450,126,cs),
(450,132.667,o),
(447,140,o),
(435,140,cs),
(425.667,140,o),
(421,134.667,o),
(417,128,cs),
(374.333,57.333,o),
(322.333,26,o),
(253,26,cs),
(143.667,26,o),
(78,103,o),
(78,227,cs),
(78,357.605,o),
(155.013,452,o),
(263,452,cs),
(359,452,o),
(394,400.333,o),
(394,319,cs),
(394,312.333,o),
(397.667,296,o),
(411,296,cs),
(421.667,296,o),
(425,309.333,o),
(425,320,cs),
(425,327.333,o),
(425.167,341.833,o),
(425.5,363.5,cs),
(425.833,385.167,o),
(426,416,o),
(426,456,cs),
(426,470.667,o),
(420,482,o),
(408,482,cs),
(397.333,482,o),
(394,469.667,o),
(394,455,cs),
(394,443,o),
(396.667,427,o),
(398,419,c),
(367.333,465.667,o),
(320.667,482,o),
(266,482,cs),
(131.407,482,o),
(33,368.624,o),
(33,225,cs),
(33,97.369,o),
(119.723,-6,o),
(247,-6,cs)
);
},
{
closed = 1;
nodes = (
(151.084,510,o),
(203.433,558.894,o),
(256,596,c),
(332.411,542.063,o),
(361.302,510,o),
(376,510,cs),
(381.333,510,o),
(384,513.667,o),
(384,521,cs),
(384,546.329,o),
(280.852,640,o),
(256,640,cs),
(232.626,640,o),
(129,545.933,o),
(129,521,cs),
(129,513.667,o),
(131.667,510,o),
(137,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
61 1 7 9 0 1 1 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 9 7 9 106 8 10 2 7 0 7 106 0 4 1 3 1 4 3 104 0 2 2 0 83 6 1 0 0 23 67 0 1 1 0 83 6 1 0 0 23 67 0 3 3 5 83 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 9 7 9 106 8 10 2 7 0 7 106 0 4 1 3 1 4 3 104 0 2 1 0 2 80 6 1 0 0 1 4 0 1 92 0 3 3 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
57 56 74 72 67 65 56 79 57 79 40 38 36 38 36 39 37 11 22
CALL[ ]	/* CallFunction */";
};
width = 473;
}
);
note = ccircumflex;
unicode = 265;
},
{
glyphname = cdotaccent;
kernLeft = c;
kernRight = c;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(352.667,473.333,o),
(304,482,o),
(264,482,cs),
(119.616,482,o),
(26,360.71,o),
(26,231,cs),
(26,99.311,o),
(123.447,-6,o),
(269,-6,cs),
(384.171,-6,o),
(450.257,49.485,o),
(477,100,cs),
(483.667,110.667,o),
(485,123.333,o),
(485,130,cs),
(485,146,o),
(472.667,161,o),
(450,161,cs),
(427.333,161,o),
(413.667,145.333,o),
(399,128,cs),
(372.333,97.333,o),
(337,73,o),
(269,73,cs),
(166.333,73,o),
(124,134.333,o),
(124,229,cs),
(124,327.382,o),
(169.745,404,o),
(272,404,cs),
(356.037,404,o),
(367.217,352.134,o),
(377,313,cs),
(379.667,301,o),
(391.667,282,o),
(421,282,cs),
(451.667,282,o),
(461,296.333,o),
(461,335,cs),
(461,341.904,o),
(460,384.575,o),
(460,463,cs),
(460,485.667,o),
(454,511,o),
(422,511,cs),
(390,511,o),
(380,487.667,o),
(380,465,cs),
(380,457,o),
(380.667,442.667,o),
(382,428,c)
);
},
{
closed = 1;
nodes = (
(217,537.333,o),
(242.667,514,o),
(276,514,cs),
(305.675,514,o),
(343,528.646,o),
(343,584,cs),
(343,620,o),
(315,645,o),
(283,645,cs),
(235.488,645,o),
(217,607.161,o),
(217,580,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 2 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 4 1 3 1 4 3 104 0 7 0 8 0 7 8 91 0 0 0 1 4 0 1 91 0 2 2 6 83 0 6 6 23 67 0 3 3 5 83 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 4 1 3 1 4 3 104 0 7 0 8 0 7 8 91 0 6 0 2 1 6 2 91 0 0 0 1 4 0 1 91 0 3 3 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 38 40 41 36 38 38 41 37 9 24
CALL[ ]	/* CallFunction */";
};
width = 504;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(352.667,472,o),
(312.667,482,o),
(262,482,cs),
(127.407,482,o),
(29,368.624,o),
(29,225,cs),
(29,101.167,o),
(109.087,-6,o),
(253,-6,cs),
(342.333,-6,o),
(410.333,29.667,o),
(457,101,cs),
(463.667,111.667,o),
(467,117.333,o),
(467,128,cs),
(467,146.667,o),
(451.667,154,o),
(437,154,cs),
(427.667,154,o),
(416.333,149.333,o),
(403,128,cs),
(379,88,o),
(326.333,56,o),
(249,56,cs),
(158.333,56,o),
(106,121.667,o),
(106,227,cs),
(106,341.73,o),
(170.925,422,o),
(259,422,cs),
(348.333,422,o),
(380,378.333,o),
(380,309,cs),
(380,294.333,o),
(396.333,288,o),
(407,288,cs),
(427,288,o),
(443,299.333,o),
(443,310,cs),
(443,359.062,o),
(444,426.6,o),
(444,478,cs),
(444,498,o),
(433.667,511,o),
(411,511,cs),
(388.333,511,o),
(380,497.667,o),
(380,483,cs),
(380,464.333,o),
(380.667,442.667,o),
(382,428,c)
);
},
{
closed = 1;
nodes = (
(219,544,o),
(241,523,o),
(268,523,cs),
(293,523,o),
(324,536,o),
(324,584,cs),
(324,615,o),
(302,636,o),
(275,636,cs),
(233,636,o),
(219,600,o),
(219,580,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
1 1 2 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 4 1 3 1 4 3 104 0 7 0 8 0 7 8 91 0 0 0 1 4 0 1 91 0 2 2 6 83 0 6 6 23 67 0 3 3 5 83 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 4 1 3 1 4 3 104 0 7 0 8 0 7 8 91 0 6 0 2 1 6 2 91 0 0 0 1 4 0 1 91 0 3 3 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 38 40 38 36 38 36 41 38 9 35
CALL[ ]	/* CallFunction */";
};
width = 488;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(327.667,-6,o),
(389,29.667,o),
(431,101,cs),
(437.667,112.333,o),
(441,121.333,o),
(441,128,cs),
(441,136,o),
(434.667,143,o),
(428,143,cs),
(420.667,143,o),
(413.667,138,o),
(407,128,cs),
(365.667,58.667,o),
(318.333,26,o),
(253,26,cs),
(143.667,26,o),
(80,103,o),
(80,227,cs),
(80,358.083,o),
(155.688,452,o),
(263,452,cs),
(352.333,452,o),
(384,400.333,o),
(384,319,cs),
(384,303,o),
(390.333,298,o),
(401,298,cs),
(411.667,298,o),
(417,309.333,o),
(417,320,cs),
(417,346.538,o),
(418,401.205,o),
(418,484,cs),
(418,498.667,o),
(411.667,511,o),
(401,511,cs),
(390.333,511,o),
(384,497.667,o),
(384,483,cs),
(384,464.333,o),
(384.667,442.667,o),
(386,428,c),
(356.667,472,o),
(316.667,482,o),
(266,482,cs),
(131.407,482,o),
(33,368.624,o),
(33,225,cs),
(33,97.369,o),
(119.723,-6,o),
(247,-6,cs)
);
},
{
closed = 1;
nodes = (
(274.667,538,o),
(297,548,o),
(297,584,cs),
(297,606.667,o),
(281.667,621,o),
(263,621,cs),
(235.258,621,o),
(222,593.895,o),
(222,580,cs),
(222,556,o),
(237.333,538,o),
(256,538,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 6 3 5 3 6 5 104 0 0 0 1 2 0 1 91 0 2 0 3 6 2 3 91 0 4 4 8 83 0 8 8 23 67 0 5 5 7 83 0 7 7 16 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 6 3 5 3 6 5 104 0 0 0 1 2 0 1 91 0 8 0 4 3 8 4 91 0 2 0 3 6 2 3 91 0 5 5 7 83 0 7 7 16 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
40 37 35 38 36 41 39 36 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 465;
}
);
note = cdotaccent;
unicode = 267;
},
{
glyphname = d;
kernLeft = d;
kernRight = d;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(481.333,107.333,o),
(481,137.833,o),
(481,167.5,cs),
(481,197.167,o),
(481,223.667,o),
(481,247,cs),
(481,274.333,o),
(480.667,300.333,o),
(480,325,cs),
(480,339.974,o),
(480.256,407.871,o),
(481.5,533.5,cs),
(482.766,661.394,o),
(483,736.958,o),
(483,771,cs),
(483,808.333,o),
(449,809,o),
(397,809,cs),
(266.413,809,o),
(225,803.279,o),
(225,760,cs),
(225,746.667,o),
(235.667,740,o),
(257,740,cs),
(278.296,740,o),
(309.349,742,o),
(343,742,cs),
(371,742,o),
(389,738.667,o),
(389,708,cs),
(389,416,l),
(367.469,442.913,o),
(321.719,477,o),
(241,477,cs),
(153.538,477,o),
(95.797,434.014,o),
(65,375.5,cs),
(33.475,315.603,o),
(27,254.169,o),
(27,218,cs),
(27,121.575,o),
(77.035,-9,o),
(218,-9,cs),
(291.075,-9,o),
(358.034,24.525,o),
(386,83,c),
(388,29,ls),
(389.333,-11,o),
(398.333,-23,o),
(425,-27,cs),
(439.887,-29.977,o),
(498.356,-30,o),
(533,-30,cs),
(555.667,-30,o),
(579,-18,o),
(579,10,cs),
(579,44.667,o),
(547,45.333,o),
(499,48,cs),
(495,48,o),
(491.167,49.333,o),
(487.5,52,cs),
(483.833,54.667,o),
(482,62.667,o),
(482,76,cs)
);
},
{
closed = 1;
nodes = (
(185.443,67,o),
(121,100.916,o),
(121,221,cs),
(121,319.046,o),
(165.096,397,o),
(263,397,cs),
(334.292,397,o),
(361.578,357.844,o),
(377,327,cs),
(389,299,o),
(391,269.667,o),
(391,247,cs),
(391,128.333,o),
(339,67,o),
(251,67,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
40 1 7 3 18 1 6 7 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 4 4 5 83 0 5 5 14 67 0 7 7 3 83 0 3 3 23 67 8 1 6 6 2 83 0 2 2 24 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 3 0 7 6 3 7 91 0 4 4 5 83 0 5 5 14 67 8 1 6 6 2 83 0 2 2 24 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 0 7 6 3 7 91 0 0 0 1 0 1 87 0 4 4 5 83 0 5 5 14 67 8 1 6 6 2 83 0 2 2 24 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
72 71 83 81 71 91 72 91 37 119 42 41 84 34 9 21
CALL[ ]	/* CallFunction */";
};
width = 554;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(463.667,131,o),
(462.833,191.5,o),
(462.5,238.5,cs),
(462.167,285.5,o),
(462,314.333,o),
(462,325,cs),
(462,344.588,o),
(462.26,410.986,o),
(463.5,535,cs),
(464.772,662.222,o),
(465,736.886,o),
(465,771,cs),
(465,808.333,o),
(438.667,809,o),
(388,809,cs),
(328.667,809,o),
(285,806.167,o),
(257,800.5,cs),
(229,794.833,o),
(215,783.333,o),
(215,766,cs),
(215,756.667,o),
(231.667,752,o),
(245,752,cs),
(270.333,752,o),
(290.333,752.333,o),
(305,753,cs),
(319.667,753.667,o),
(335.333,754,o),
(352,754,cs),
(374.667,754,o),
(392,751.333,o),
(392,726,cs),
(392,416,l),
(370.469,442.913,o),
(324.719,477,o),
(244,477,cs),
(156.538,477,o),
(98.797,434.014,o),
(68,375.5,cs),
(36.475,315.603,o),
(30,254.169,o),
(30,218,cs),
(30,122.002,o),
(79.998,-9,o),
(220,-9,cs),
(292,-9,o),
(358.333,23,o),
(389,83,c),
(391,29,ls),
(392.333,-4.333,o),
(400,-25.333,o),
(428,-28,cs),
(444.396,-28,o),
(483.115,-30,o),
(536,-30,cs),
(560,-30,o),
(575,-18,o),
(575,-2,cs),
(575,10.667,o),
(570,19.333,o),
(560,24,cs),
(550,28.667,o),
(530.667,31,o),
(502,31,cs),
(470,31,o),
(465,30.333,o),
(465,57,cs)
);
},
{
closed = 1;
nodes = (
(177.801,51,o),
(103,102.31,o),
(103,222,cs),
(103,323.758,o),
(159.407,418,o),
(258,418,cs),
(337.289,418,o),
(367.092,373.451,o),
(384,334,c),
(393.333,300.667,o),
(395,274.667,o),
(395,248,cs),
(395,183.829,o),
(353.809,51,o),
(250,51,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
38 18 2 7 8 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 5 5 6 83 0 6 6 14 67 0 8 8 4 83 0 4 4 23 67 9 1 7 7 3 83 0 3 3 24 67 0 0 0 1 83 2 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 0 8 7 4 8 91 0 5 5 6 83 0 6 6 14 67 9 1 7 7 3 83 0 3 3 24 67 0 0 0 1 83 2 1 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 4 0 8 7 4 8 91 0 0 2 1 1 0 1 87 0 5 5 6 83 0 6 6 14 67 9 1 7 7 3 83 0 3 3 24 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
65 64 78 76 64 86 65 86 36 87 42 38 17 68 34 10 22
CALL[ ]	/* CallFunction */";
};
width = 548;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(552,-30,o),
(559.833,-28.333,o),
(563.5,-25,cs),
(567.167,-21.667,o),
(569,-18.333,o),
(569,-15,cs),
(569,-8.333,o),
(564.833,-4.167,o),
(556.5,-2.5,cs),
(548.167,-0.833,o),
(531.333,0.333,o),
(506,1,cs),
(447.575,1,o),
(439,3.087,o),
(439,27,cs),
(437.667,108.333,o),
(436.833,175.5,o),
(436.5,228.5,cs),
(436.167,281.5,o),
(436,313.667,o),
(436,325,cs),
(436,344.588,o),
(436.26,410.986,o),
(437.5,535,cs),
(438.772,662.222,o),
(439,736.886,o),
(439,771,cs),
(439,808.333,o),
(422.667,809,o),
(392,809,cs),
(286.253,809,o),
(229,799.267,o),
(229,783,cs),
(229,772.698,o),
(248.34,772,o),
(257,772,cs),
(279.667,772,o),
(298,772.333,o),
(312,773,cs),
(326,773.667,o),
(340.667,774,o),
(356,774,cs),
(378.667,774,o),
(396,773.333,o),
(396,756,cs),
(396,416,l),
(374.469,442.913,o),
(328.719,477,o),
(248,477,cs),
(160.538,477,o),
(102.797,434.014,o),
(72,375.5,cs),
(40.475,315.603,o),
(34,254.169,o),
(34,218,cs),
(34,122.002,o),
(83.998,-9,o),
(224,-9,cs),
(296,-9,o),
(361,25.667,o),
(393,83,c),
(395,29,ls),
(396.333,-4.333,o),
(404,-25.333,o),
(432,-28,cs),
(448.396,-28,o),
(487.115,-30,o),
(540,-30,cs)
);
},
{
closed = 1;
nodes = (
(151.096,21,o),
(77,84.519,o),
(77,222,cs),
(77,334.768,o),
(126.751,449,o),
(256,449,cs),
(335.704,449,o),
(372.13,404.544,o),
(388,349,cs),
(397.333,315.667,o),
(399,274.667,o),
(399,248,cs),
(399,145.207,o),
(367.99,21,o),
(241,21,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
40 20 2 7 8 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 5 5 6 83 0 6 6 14 67 0 8 8 4 83 0 4 4 23 67 9 1 7 7 3 83 0 3 3 24 67 0 0 0 1 83 2 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 0 8 7 4 8 91 0 5 5 6 83 0 6 6 14 67 9 1 7 7 3 83 0 3 3 24 67 0 0 0 1 83 2 1 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 4 0 8 7 4 8 91 0 0 2 1 1 0 1 87 0 5 5 6 83 0 6 6 14 67 9 1 7 7 3 83 0 3 3 24 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
71 70 84 82 70 92 71 92 54 103 42 38 17 68 36 10 22
CALL[ ]	/* CallFunction */";
};
width = 539;
}
);
note = d;
unicode = 100;
},
{
glyphname = dcaron;
kernLeft = d;
kernRight = d;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(524,760.029,o),
(560,758.443,o),
(560,741,cs),
(560,721,o),
(557.5,706.167,o),
(552.5,696.5,cs),
(547.5,686.833,o),
(545,678.667,o),
(545,672,cs),
(545,649.333,o),
(564.333,649,o),
(571,649,cs),
(589.413,649,o),
(652,691.464,o),
(652,768,cs),
(652,825.333,o),
(616,849,o),
(584,849,cs),
(540,849,o),
(524,819,o),
(524,791,cs)
);
},
{
closed = 1;
nodes = (
(481.333,107.333,o),
(481,137.833,o),
(481,167.5,cs),
(481,197.167,o),
(481,223.667,o),
(481,247,cs),
(481,274.333,o),
(480.667,300.333,o),
(480,325,cs),
(480,339.974,o),
(480.256,407.871,o),
(481.5,533.5,cs),
(482.766,661.394,o),
(483,736.958,o),
(483,771,cs),
(483,808.333,o),
(449,809,o),
(397,809,cs),
(266.413,809,o),
(225,803.279,o),
(225,760,cs),
(225,746.667,o),
(235.667,740,o),
(257,740,cs),
(278.296,740,o),
(309.349,742,o),
(343,742,cs),
(371,742,o),
(389,738.667,o),
(389,708,cs),
(389,416,l),
(367.469,442.913,o),
(321.719,477,o),
(241,477,cs),
(153.538,477,o),
(95.797,434.014,o),
(65,375.5,cs),
(33.475,315.603,o),
(27,254.169,o),
(27,218,cs),
(27,121.575,o),
(77.035,-9,o),
(218,-9,cs),
(291.075,-9,o),
(358.034,24.525,o),
(386,83,c),
(388,29,ls),
(389.333,-11,o),
(398.333,-23,o),
(425,-27,cs),
(439.887,-29.977,o),
(498.356,-30,o),
(533,-30,cs),
(555.667,-30,o),
(579,-18,o),
(579,10,cs),
(579,44.667,o),
(547,45.333,o),
(499,48,cs),
(495,48,o),
(491.167,49.333,o),
(487.5,52,cs),
(483.833,54.667,o),
(482,62.667,o),
(482,76,cs)
);
},
{
closed = 1;
nodes = (
(185.443,67,o),
(121,100.916,o),
(121,221,cs),
(121,319.046,o),
(165.096,397,o),
(263,397,cs),
(334.292,397,o),
(361.578,357.844,o),
(377,327,cs),
(389,299,o),
(391,269.667,o),
(391,247,cs),
(391,128.333,o),
(339,67,o),
(251,67,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
62 1 9 5 40 1 8 9 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 6 6 7 83 0 7 7 14 67 0 1 1 0 83 0 0 0 20 67 0 9 9 5 83 0 5 5 23 67 10 1 8 8 4 83 0 4 4 24 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 5 0 9 8 5 9 91 0 6 6 7 83 0 7 7 14 67 0 1 1 0 83 0 0 0 20 67 10 1 8 8 4 83 0 4 4 24 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 5 0 9 8 5 9 91 0 2 0 3 2 3 87 0 6 6 7 83 0 7 7 14 67 0 1 1 0 83 0 0 0 20 67 10 1 8 8 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 1 5 0 1 91 0 5 0 9 8 5 9 91 0 2 0 3 2 3 87 0 6 6 7 83 0 7 7 14 67 10 1 8 8 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
94 93 105 103 93 113 94 113 37 119 42 41 84 44 38 34 11 23
CALL[ ]	/* CallFunction */";
};
width = 554;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(463.667,131,o),
(462.833,191.5,o),
(462.5,238.5,cs),
(462.167,285.5,o),
(462,314.333,o),
(462,325,cs),
(462,344.588,o),
(462.26,410.986,o),
(463.5,535,cs),
(464.772,662.222,o),
(465,736.886,o),
(465,771,cs),
(465,808.333,o),
(438.667,809,o),
(388,809,cs),
(328.667,809,o),
(285,806.167,o),
(257,800.5,cs),
(229,794.833,o),
(215,783.333,o),
(215,766,cs),
(215,756.667,o),
(231.667,752,o),
(245,752,cs),
(270.333,752,o),
(290.333,752.333,o),
(305,753,cs),
(319.667,753.667,o),
(335.333,754,o),
(352,754,cs),
(374.667,754,o),
(392,751.333,o),
(392,726,cs),
(392,416,l),
(370.469,442.913,o),
(324.719,477,o),
(244,477,cs),
(156.538,477,o),
(98.797,434.014,o),
(68,375.5,cs),
(36.475,315.603,o),
(30,254.169,o),
(30,218,cs),
(30,122.002,o),
(79.998,-9,o),
(220,-9,cs),
(292,-9,o),
(358.333,23,o),
(389,83,c),
(391,29,ls),
(392.333,-4.333,o),
(400,-25.333,o),
(428,-28,cs),
(444.396,-28,o),
(483.115,-30,o),
(536,-30,cs),
(560,-30,o),
(575,-18,o),
(575,-2,cs),
(575,10.667,o),
(570,19.333,o),
(560,24,cs),
(550,28.667,o),
(530.667,31,o),
(502,31,cs),
(470,31,o),
(465,30.333,o),
(465,57,cs)
);
},
{
closed = 1;
nodes = (
(177.801,51,o),
(103,102.31,o),
(103,222,cs),
(103,323.758,o),
(159.407,418,o),
(258,418,cs),
(337.289,418,o),
(367.092,373.451,o),
(384,334,c),
(393.333,300.667,o),
(395,274.667,o),
(395,248,cs),
(395,183.829,o),
(353.809,51,o),
(250,51,cs)
);
},
{
closed = 1;
nodes = (
(513,769,o),
(549,770,o),
(549,753,cs),
(549,736,o),
(547,723,o),
(543,715,cs),
(538,706,o),
(536,699,o),
(536,693,cs),
(536,676,o),
(550,674,o),
(557,674,cs),
(581,674,o),
(622,724,o),
(622,778,cs),
(622,831,o),
(592,850,o),
(565,850,cs),
(528,850,o),
(513,825,o),
(513,801,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
39 19 2 7 8 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 5 5 6 83 0 6 6 14 67 0 10 10 9 83 0 9 9 20 67 0 8 8 4 83 0 4 4 23 67 11 1 7 7 3 83 0 3 3 24 67 0 0 0 1 83 2 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 4 0 8 7 4 8 91 0 5 5 6 83 0 6 6 14 67 0 10 10 9 83 0 9 9 20 67 11 1 7 7 3 83 0 3 3 24 67 0 0 0 1 83 2 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 4 0 8 7 4 8 91 0 0 2 1 1 0 1 87 0 5 5 6 83 0 6 6 14 67 0 10 10 9 83 0 9 9 20 67 11 1 7 7 3 83 0 3 3 24 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 9 0 10 4 9 10 91 0 4 0 8 7 4 8 91 0 0 2 1 1 0 1 87 0 5 5 6 83 0 6 6 14 67 11 1 7 7 3 83 0 3 3 24 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
66 65 100 98 92 90 79 77 65 87 66 87 36 87 42 38 17 68 35 12 33
CALL[ ]	/* CallFunction */";
};
width = 548;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(552,-30,o),
(559.833,-28.333,o),
(563.5,-25,cs),
(567.167,-21.667,o),
(569,-18.333,o),
(569,-15,cs),
(569,-8.333,o),
(564.833,-4.167,o),
(556.5,-2.5,cs),
(548.167,-0.833,o),
(531.333,0.333,o),
(506,1,cs),
(447.575,1,o),
(439,3.087,o),
(439,27,cs),
(437.667,108.333,o),
(436.833,175.5,o),
(436.5,228.5,cs),
(436.167,281.5,o),
(436,313.667,o),
(436,325,cs),
(436,344.588,o),
(436.26,410.986,o),
(437.5,535,cs),
(438.772,662.222,o),
(439,736.886,o),
(439,771,cs),
(439,808.333,o),
(422.667,809,o),
(392,809,cs),
(286.253,809,o),
(229,799.267,o),
(229,783,cs),
(229,772.698,o),
(248.34,772,o),
(257,772,cs),
(279.667,772,o),
(298,772.333,o),
(312,773,cs),
(326,773.667,o),
(340.667,774,o),
(356,774,cs),
(378.667,774,o),
(396,773.333,o),
(396,756,cs),
(396,416,l),
(374.469,442.913,o),
(328.719,477,o),
(248,477,cs),
(160.538,477,o),
(102.797,434.014,o),
(72,375.5,cs),
(40.475,315.603,o),
(34,254.169,o),
(34,218,cs),
(34,122.002,o),
(83.998,-9,o),
(224,-9,cs),
(296,-9,o),
(361,25.667,o),
(393,83,c),
(395,29,ls),
(396.333,-4.333,o),
(404,-25.333,o),
(432,-28,cs),
(448.396,-28,o),
(487.115,-30,o),
(540,-30,cs)
);
},
{
closed = 1;
nodes = (
(151.096,21,o),
(77,84.519,o),
(77,222,cs),
(77,334.768,o),
(126.751,449,o),
(256,449,cs),
(335.704,449,o),
(372.13,404.544,o),
(388,349,cs),
(397.333,315.667,o),
(399,274.667,o),
(399,248,cs),
(399,145.207,o),
(367.99,21,o),
(241,21,cs)
);
},
{
closed = 1;
nodes = (
(562.684,715,o),
(583,781.634,o),
(583,806,cs),
(583,832.667,o),
(566.333,850,o),
(541,850,cs),
(519.667,850,o),
(505,834.667,o),
(505,816,cs),
(505,792.909,o),
(531,784.261,o),
(531,772,cs),
(531,764.667,o),
(527.833,757.167,o),
(521.5,749.5,cs),
(515.167,741.833,o),
(512,735.333,o),
(512,730,cs),
(512,722,o),
(521.333,715,o),
(528,715,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
62 42 2 9 10 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 7 7 8 83 0 8 8 14 67 0 1 1 0 83 0 0 0 20 67 0 10 10 6 83 0 6 6 23 67 11 1 9 9 5 83 0 5 5 24 67 0 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 6 0 10 9 6 10 91 0 7 7 8 83 0 8 8 14 67 0 1 1 0 83 0 0 0 20 67 11 1 9 9 5 83 0 5 5 24 67 0 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 6 0 10 9 6 10 91 0 2 4 1 3 2 3 87 0 7 7 8 83 0 8 8 14 67 0 1 1 0 83 0 0 0 20 67 11 1 9 9 5 83 0 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 0 0 1 6 0 1 91 0 6 0 10 9 6 10 91 0 2 4 1 3 2 3 87 0 7 7 8 83 0 8 8 14 67 11 1 9 9 5 83 0 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
93 92 106 104 92 114 93 114 54 103 42 38 17 68 46 38 34 12 24
CALL[ ]	/* CallFunction */";
};
width = 539;
}
);
note = dcaron;
unicode = 271;
},
{
glyphname = dcroat;
kernLeft = d;
kernRight = d;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(481.333,107.333,o),
(481,137.833,o),
(481,167.5,cs),
(481,197.167,o),
(481,223.667,o),
(481,247,cs),
(481,274.333,o),
(480.667,300.333,o),
(480,325,cs),
(480,372.092,o),
(482,436.135,o),
(482,565,c),
(540,565,ls),
(567.476,565,o),
(576,595.44,o),
(576,609,cs),
(576,627.667,o),
(561.333,648,o),
(548,648,cs),
(529.333,648,o),
(508.667,647.333,o),
(482,646,c),
(482.667,674,o),
(483,699,o),
(483,721,cs),
(483,743,o),
(483,759.667,o),
(483,771,cs),
(483,808.333,o),
(449,809,o),
(397,809,cs),
(266.413,809,o),
(225,803.279,o),
(225,760,cs),
(225,746.667,o),
(235.667,740,o),
(257,740,cs),
(278.296,740,o),
(309.349,742,o),
(343,742,cs),
(371,742,o),
(389,738.667,o),
(389,708,cs),
(389,645,l),
(352.794,645,o),
(316.894,647,o),
(296,647,cs),
(273.333,647,o),
(263,623.333,o),
(263,606,cs),
(263,588.667,o),
(276,564,o),
(296,564,cs),
(389,564,l),
(389,416,l),
(367.469,442.913,o),
(321.719,477,o),
(241,477,cs),
(153.538,477,o),
(95.797,434.014,o),
(65,375.5,cs),
(33.475,315.603,o),
(27,254.169,o),
(27,218,cs),
(27,121.575,o),
(77.035,-9,o),
(218,-9,cs),
(291.075,-9,o),
(358.034,24.525,o),
(386,83,c),
(388,29,ls),
(389.333,-11,o),
(398.333,-23,o),
(425,-27,cs),
(439.887,-29.977,o),
(498.356,-30,o),
(533,-30,cs),
(555.667,-30,o),
(579,-18,o),
(579,10,cs),
(579,44.667,o),
(547,45.333,o),
(499,48,cs),
(495,48,o),
(491.167,49.333,o),
(487.5,52,cs),
(483.833,54.667,o),
(482,62.667,o),
(482,76,cs)
);
},
{
closed = 1;
nodes = (
(185.443,67,o),
(121,100.916,o),
(121,221,cs),
(121,319.046,o),
(165.096,397,o),
(263,397,cs),
(334.292,397,o),
(361.578,357.844,o),
(377,327,cs),
(389,299,o),
(391,269.667,o),
(391,247,cs),
(391,128.333,o),
(339,67,o),
(251,67,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
40 1 11 3 18 1 10 11 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
8 1 5 9 1 4 3 5 4 91 0 6 6 7 83 0 7 7 14 67 0 11 11 3 83 0 3 3 23 67 12 1 10 10 2 83 0 2 2 24 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
8 1 5 9 1 4 3 5 4 91 0 3 0 11 10 3 11 91 0 6 6 7 83 0 7 7 14 67 12 1 10 10 2 83 0 2 2 24 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
8 1 5 9 1 4 3 5 4 91 0 3 0 11 10 3 11 91 0 0 0 1 0 1 87 0 6 6 7 83 0 7 7 14 67 12 1 10 10 2 83 0 2 2 24 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
98 97 109 107 97 117 98 117 87 85 69 37 115 100 37 42 41 84 34 13 24
CALL[ ]	/* CallFunction */";
};
width = 554;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(526,628,o),
(507.667,627.5,o),
(487,626.5,cs),
(466.333,625.5,o),
(442,625,o),
(414,625,cs),
(371.698,625,o),
(323.437,627,o),
(293,627,cs),
(274.333,627,o),
(267,608.333,o),
(267,595,cs),
(267,581.667,o),
(278.333,562,o),
(293,562,cs),
(363.305,562,o),
(460.446,563,o),
(534,563,cs),
(556.667,563,o),
(563,587.333,o),
(563,598,cs),
(563,612.667,o),
(552.667,628,o),
(542,628,cs)
);
},
{
closed = 1;
nodes = (
(463.667,131,o),
(462.833,191.5,o),
(462.5,238.5,cs),
(462.167,285.5,o),
(462,314.333,o),
(462,325,cs),
(462,344.588,o),
(462.26,410.986,o),
(463.5,535,cs),
(464.772,662.222,o),
(465,736.886,o),
(465,771,cs),
(465,808.333,o),
(438.667,809,o),
(388,809,cs),
(328.667,809,o),
(285,806.167,o),
(257,800.5,cs),
(229,794.833,o),
(215,783.333,o),
(215,766,cs),
(215,756.667,o),
(231.667,752,o),
(245,752,cs),
(270.333,752,o),
(290.333,752.333,o),
(305,753,cs),
(319.667,753.667,o),
(335.333,754,o),
(352,754,cs),
(374.667,754,o),
(392,751.333,o),
(392,726,cs),
(392,416,l),
(370.469,442.913,o),
(324.719,477,o),
(244,477,cs),
(156.538,477,o),
(98.797,434.014,o),
(68,375.5,cs),
(36.475,315.603,o),
(30,254.169,o),
(30,218,cs),
(30,122.002,o),
(79.998,-9,o),
(220,-9,cs),
(292,-9,o),
(358.333,23,o),
(389,83,c),
(391,29,ls),
(392.333,-4.333,o),
(400,-25.333,o),
(428,-28,cs),
(444.396,-28,o),
(483.115,-30,o),
(536,-30,cs),
(560,-30,o),
(575,-18,o),
(575,-2,cs),
(575,10.667,o),
(570,19.333,o),
(560,24,cs),
(550,28.667,o),
(530.667,31,o),
(502,31,cs),
(470,31,o),
(465,30.333,o),
(465,57,cs)
);
},
{
closed = 1;
nodes = (
(177.801,51,o),
(103,102.31,o),
(103,222,cs),
(103,323.758,o),
(159.407,418,o),
(258,418,cs),
(337.289,418,o),
(367.092,373.451,o),
(384,334,c),
(393.333,300.667,o),
(395,274.667,o),
(395,248,cs),
(395,183.829,o),
(353.809,51,o),
(250,51,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
63 43 2 9 10 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
11 1 0 0 1 6 0 1 91 0 7 7 8 83 0 8 8 14 67 0 10 10 6 83 0 6 6 23 67 12 1 9 9 5 83 0 5 5 24 67 0 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
11 1 0 0 1 6 0 1 91 0 6 0 10 9 6 10 91 0 7 7 8 83 0 8 8 14 67 12 1 9 9 5 83 0 5 5 24 67 0 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
11 1 0 0 1 6 0 1 91 0 6 0 10 9 6 10 91 0 2 4 1 3 2 3 87 0 7 7 8 83 0 8 8 14 67 12 1 9 9 5 83 0 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
90 89 1 0 103 101 89 111 90 111 77 75 71 66 59 57 47 45 39 38 37 33 29 27 12 5 0 24 1 16 13 15
CALL[ ]	/* CallFunction */";
};
width = 548;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(552,-30,o),
(559.833,-28.333,o),
(563.5,-25,cs),
(567.167,-21.667,o),
(569,-18.333,o),
(569,-15,cs),
(569,-8.333,o),
(564.833,-4.167,o),
(556.5,-2.5,cs),
(548.167,-0.833,o),
(531.333,0.333,o),
(506,1,cs),
(447.575,1,o),
(439,3.087,o),
(439,27,cs),
(437.667,108.333,o),
(436.833,175.5,o),
(436.5,228.5,cs),
(436.167,281.5,o),
(436,313.667,o),
(436,325,cs),
(436,378.02,o),
(438,444.724,o),
(438,577,c),
(455.333,577,o),
(471.833,577.167,o),
(487.5,577.5,cs),
(503.167,577.833,o),
(516,578,o),
(526,578,cs),
(540.667,578,o),
(545,591.333,o),
(545,598,cs),
(545,604.667,o),
(539.333,613,o),
(534,613,cs),
(520.667,613,o),
(506.167,612.667,o),
(490.5,612,cs),
(474.833,611.333,o),
(457.333,610.667,o),
(438,610,c),
(438.667,645.333,o),
(439,677.5,o),
(439,706.5,cs),
(439,735.5,o),
(439,757,o),
(439,771,cs),
(439,808.333,o),
(422.667,809,o),
(392,809,cs),
(286.253,809,o),
(229,799.267,o),
(229,783,cs),
(229,772.698,o),
(248.34,772,o),
(257,772,cs),
(279.667,772,o),
(298,772.333,o),
(312,773,cs),
(326,773.667,o),
(340.667,774,o),
(356,774,cs),
(378.667,774,o),
(396,773.333,o),
(396,756,cs),
(396,610,l),
(354.044,610,o),
(310.56,612,o),
(285,612,cs),
(274.333,612,o),
(269,601.667,o),
(269,595,cs),
(269,588.333,o),
(275.667,577,o),
(285,577,cs),
(396,577,l),
(396,416,l),
(374.469,442.913,o),
(328.719,477,o),
(248,477,cs),
(160.538,477,o),
(102.797,434.014,o),
(72,375.5,cs),
(40.475,315.603,o),
(34,254.169,o),
(34,218,cs),
(34,122.002,o),
(83.998,-9,o),
(224,-9,cs),
(296,-9,o),
(361,25.667,o),
(393,83,c),
(395,29,ls),
(396.333,-4.333,o),
(404,-25.333,o),
(432,-28,cs),
(448.396,-28,o),
(487.115,-30,o),
(540,-30,cs)
);
},
{
closed = 1;
nodes = (
(151.096,21,o),
(77,84.519,o),
(77,222,cs),
(77,334.768,o),
(126.751,449,o),
(256,449,cs),
(335.704,449,o),
(372.13,404.544,o),
(388,349,cs),
(397.333,315.667,o),
(399,274.667,o),
(399,248,cs),
(399,145.207,o),
(367.99,21,o),
(241,21,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
40 20 2 11 12 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
9 1 6 10 1 5 4 6 5 91 0 7 7 8 83 0 8 8 14 67 0 12 12 4 83 0 4 4 23 67 13 1 11 11 3 83 0 3 3 24 67 0 0 0 1 83 2 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
9 1 6 10 1 5 4 6 5 91 0 4 0 12 11 4 12 91 0 7 7 8 83 0 8 8 14 67 13 1 11 11 3 83 0 3 3 24 67 0 0 0 1 83 2 1 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
9 1 6 10 1 5 4 6 5 91 0 4 0 12 11 4 12 91 0 0 2 1 1 0 1 87 0 7 7 8 83 0 8 8 14 67 13 1 11 11 3 83 0 3 3 24 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
97 96 110 108 96 118 97 118 88 84 80 76 54 99 100 37 42 38 17 68 36 14 24
CALL[ ]	/* CallFunction */";
};
width = 539;
}
);
note = dcroat;
unicode = 273;
},
{
glyphname = eth;
kernLeft = c;
kernRight = eth;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(453.996,756,o),
(390.038,718.231,o),
(376,707,c),
(328.442,766.447,o),
(294.085,791.433,o),
(259,819,cs),
(248.333,828.333,o),
(228.333,833,o),
(211,833,cs),
(187,833,o),
(176,814.667,o),
(176,800,cs),
(176,796,o),
(176.333,787,o),
(183,783,cs),
(229.667,753.667,o),
(276.333,723,o),
(315,671,c),
(243,632,ls),
(224.333,621.333,o),
(215,615,o),
(215,603,cs),
(215,593.044,o),
(225.669,566,o),
(244,566,cs),
(238.627,566,o),
(303.093,586.396,o),
(349,617,c),
(377,569,o),
(399,520.5,o),
(415,482.5,cs),
(428.132,451.311,o),
(440.243,417.757,o),
(445,413,cs),
(398.333,454.333,o),
(332.667,468,o),
(274,468,cs),
(158,468,o),
(26,396.084,o),
(26,230,cs),
(26,113.993,o),
(87.23,-19,o),
(277,-19,cs),
(486.586,-19,o),
(544,126.506,o),
(544,220,cs),
(544,365.333,o),
(505,501,o),
(433,621,c),
(425.409,631.627,o),
(423.085,638.101,o),
(414,654,c),
(429.333,662.667,o),
(442.833,670.333,o),
(454.5,677,cs),
(466.167,683.667,o),
(476.333,689.333,o),
(485,694,cs),
(491.667,696.667,o),
(502,707.667,o),
(502,725,cs),
(502,739.667,o),
(494,756,o),
(470,756,cs)
);
},
{
closed = 1;
nodes = (
(195.848,60,o),
(122,102.49,o),
(122,224,cs),
(122,309.33,o),
(181.329,387,o),
(292,387,cs),
(366.498,387,o),
(449,346.507,o),
(449,219,cs),
(449,142.136,o),
(411.331,60,o),
(283,60,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
71 54 40 9 4 3 0 35 1 6 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
7 1 0 4 3 4 0 3 104 0 3 2 4 3 2 102 0 4 4 20 67 0 6 6 2 83 0 2 2 23 67 8 1 5 5 1 84 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
7 1 0 4 3 4 0 3 104 0 3 2 4 3 2 102 0 2 0 6 5 2 6 91 0 4 4 20 67 8 1 5 5 1 84 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 4 0 4 106 7 1 0 3 0 106 0 3 2 3 106 0 2 0 6 5 2 6 91 8 1 5 5 1 84 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
77 76 1 0 87 85 76 95 77 95 64 62 46 44 33 31 23 21 0 75 1 75 9 15
CALL[ ]	/* CallFunction */";
};
width = 578;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(442.395,747,o),
(383.381,709.921,o),
(361,695,c),
(315.136,755.347,o),
(275.177,792.146,o),
(241,819,cs),
(231.667,825.667,o),
(215.667,832,o),
(201,832,cs),
(185,832,o),
(172,819.667,o),
(172,805,cs),
(172,795.667,o),
(176.667,788.333,o),
(186,783,cs),
(230,755,o),
(275.333,717.667,o),
(314,667,c),
(239,627,ls),
(229.667,621.667,o),
(218,614,o),
(218,602,cs),
(218,590,o),
(229.667,573,o),
(243,573,cs),
(241.145,573,o),
(293.521,591.075,o),
(343,622,c),
(398.153,531.75,o),
(438.998,428.006,o),
(452,376,c),
(404.649,444.396,o),
(327.108,467,o),
(265,467,cs),
(146.807,467,o),
(29,386.12,o),
(29,230,cs),
(29,114.003,o),
(95.92,-19,o),
(276,-19,cs),
(489.424,-19,o),
(526,127.758,o),
(526,220,cs),
(526,361.333,o),
(479.667,497,o),
(417,609,cs),
(411.667,619,o),
(407.5,626.167,o),
(404.5,630.5,cs),
(401.5,634.833,o),
(397.333,641.667,o),
(392,651,c),
(407.333,659.667,o),
(421.5,667.833,o),
(434.5,675.5,cs),
(447.5,683.167,o),
(458.333,689.333,o),
(467,694,cs),
(473.667,698,o),
(482,707.667,o),
(482,721,cs),
(482,735.667,o),
(471,747,o),
(455,747,cs)
);
},
{
closed = 1;
nodes = (
(187.511,42,o),
(104,94.622,o),
(104,227,cs),
(104,321.77,o),
(166.361,405,o),
(278,405,cs),
(381.884,405,o),
(452,325.148,o),
(452,209,cs),
(452,141.1,o),
(417.687,42,o),
(275,42,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
68 52 40 9 4 3 0 35 1 5 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
7 1 0 4 3 4 0 3 104 0 3 2 4 3 2 102 0 4 4 20 67 0 6 6 2 83 0 2 2 23 67 8 1 5 5 1 84 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
7 1 0 4 3 4 0 3 104 0 3 2 4 3 2 102 0 2 0 6 5 2 6 91 0 4 4 20 67 8 1 5 5 1 84 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 4 0 4 106 7 1 0 3 0 106 0 3 2 3 106 0 2 0 6 5 2 6 91 8 1 5 5 1 84 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
74 73 1 0 84 82 73 92 74 92 61 59 46 44 31 29 21 19 0 72 1 72 9 15
CALL[ ]	/* CallFunction */";
};
width = 561;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(450.039,-19,o),
(500,128.019,o),
(500,220,cs),
(500,353.765,o),
(451.84,495.778,o),
(400,594,cs),
(394.667,604,o),
(389,613.667,o),
(383,623,cs),
(377,632.333,o),
(371.333,641.667,o),
(366,651,c),
(381.333,659.667,o),
(395.5,667.833,o),
(408.5,675.5,cs),
(421.5,683.167,o),
(432.333,689.333,o),
(441,694,cs),
(450.333,699.333,o),
(453,711,o),
(453,715,cs),
(453,729.667,o),
(438,732,o),
(434,732,cs),
(430,732,o),
(419.333,726.5,o),
(402,715.5,cs),
(384.667,704.5,o),
(366,692.667,o),
(346,680,c),
(299.333,746.667,o),
(252.333,788.333,o),
(215,819,cs),
(205.667,826.333,o),
(196.333,830,o),
(187,830,cs),
(181.667,830,o),
(167,828.667,o),
(167,814,cs),
(167,799.333,o),
(175.333,793.667,o),
(190,783,cs),
(232.667,755,o),
(274.333,710.667,o),
(313,660,c),
(234,619,ls),
(223.333,612.333,o),
(222,606.667,o),
(222,600,cs),
(222,586.667,o),
(234,584,o),
(242,584,cs),
(245.333,584,o),
(255.833,588.667,o),
(273.5,598,cs),
(291.167,607.333,o),
(311,618.333,o),
(333,631,c),
(397,535,o),
(444.667,419.333,o),
(462,314,c),
(411.53,433.535,o),
(318.352,466,o),
(252,466,cs),
(134.323,466,o),
(33,373.618,o),
(33,230,cs),
(33,115.043,o),
(107.537,-19,o),
(274,-19,cs)
);
},
{
closed = 1;
nodes = (
(186.287,12,o),
(78,75.068,o),
(78,235,cs),
(78,346.163,o),
(130.709,435,o),
(246,435,cs),
(397.215,435,o),
(456,284.788,o),
(456,196,cs),
(456,124.127,o),
(404.854,12,o),
(268,12,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
64 50 40 9 4 3 0 37 1 5 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
7 1 0 4 3 4 0 3 104 0 3 2 4 3 2 102 0 4 4 20 67 0 6 6 2 83 0 2 2 23 67 8 1 5 5 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
16
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
7 1 0 4 3 4 0 3 104 0 3 2 4 3 2 102 0 4 4 12 67 0 6 6 2 83 0 2 2 23 67 8 1 5 5 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
7 1 0 4 3 4 0 3 104 0 3 2 4 3 2 102 0 4 4 20 67 0 6 6 2 83 0 2 2 23 67 8 1 5 5 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
7 1 0 4 3 4 0 3 104 0 3 2 4 3 2 102 0 2 0 6 5 2 6 91 0 4 4 20 67 8 1 5 5 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 4 0 4 106 7 1 0 3 0 106 0 3 2 3 106 0 2 0 6 5 2 6 91 8 1 5 5 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
68 67 1 0 78 76 67 86 68 86 60 58 44 42 33 31 23 21 0 66 1 66 9 15
CALL[ ]	/* CallFunction */";
};
width = 537;
}
);
note = eth;
unicode = 240;
},
{
glyphname = e;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(134.484,347.387,o),
(180.875,403,o),
(262,403,cs),
(342.614,403,o),
(378,351.966,o),
(378,316,cs),
(378,300,o),
(372,292,o),
(360,292,cs),
(126,288,l),
(126,288,l)
);
},
{
closed = 1;
nodes = (
(126.333,229,o),
(132,229,o),
(142,229,cs),
(152,229,o),
(164.167,229,o),
(178.5,229,cs),
(192.833,229,o),
(208.333,229.167,o),
(225,229.5,cs),
(241.667,229.833,o),
(257.333,230,o),
(272,230,cs),
(286.667,230,o),
(299.333,230,o),
(310,230,cs),
(320.667,230,o),
(327.333,230,o),
(330,230,cs),
(405.052,230,o),
(430.634,231.648,o),
(447,241,cs),
(467,251.667,o),
(474,270.333,o),
(474,297,cs),
(474,355.149,o),
(427.052,478,o),
(264,478,cs),
(122.565,478,o),
(31,383.146,o),
(31,227,cs),
(31,72.378,o),
(122.731,-14,o),
(263,-14,cs),
(429.217,-14,o),
(470,101.188,o),
(470,143,cs),
(470,176.333,o),
(454.333,183,o),
(429,183,cs),
(406.333,183,o),
(392,167.333,o),
(384,146,cs),
(369.55,108.431,o),
(340.163,62,o),
(269,62,cs),
(149.495,62,o),
(124,147.183,o),
(124,218,cs),
(124,219.333,o),
(124,221.167,o),
(124,223.5,cs),
(124,225.833,o),
(124.333,227.667,o),
(125,229,c)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 6 2 6 3 2 104 7 1 0 8 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 6 2 6 3 2 104 0 5 0 1 0 5 1 91 7 1 0 8 1 6 3 0 6 91 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
13 13 1 0 13 66 13 58 48 46 38 36 30 28 22 20 8 6 0 12 1 12 9 15
CALL[ ]	/* CallFunction */";
};
width = 507;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(121.434,353.776,o),
(170.253,415,o),
(254,415,cs),
(337.446,415,o),
(381,353.503,o),
(381,311,cs),
(381,305.667,o),
(375.333,303,o),
(364,303,cs),
(111,299,l),
(111,299,l)
);
},
{
closed = 1;
nodes = (
(151.1,239,o),
(208.07,240,o),
(248,240,cs),
(280,240,o),
(310.167,240.167,o),
(338.5,240.5,cs),
(366.833,240.833,o),
(391.333,241,o),
(412,241,cs),
(438.667,241,o),
(454,273.333,o),
(454,304,cs),
(454,357.454,o),
(404.444,477,o),
(257,477,cs),
(121.842,477,o),
(30,383.553,o),
(30,226,cs),
(30,85.149,o),
(103.872,-13,o),
(242,-13,cs),
(409.041,-13,o),
(463,74.835,o),
(463,173,cs),
(463,193,o),
(449,205,o),
(433,205,cs),
(405,205,o),
(399,183.667,o),
(399,173,cs),
(399,125.923,o),
(363.841,51,o),
(258,51,cs),
(160.092,51,o),
(105,135.5,o),
(105,218,cs),
(105,224.667,o),
(105.667,232.333,o),
(107,239,c)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 6 2 6 3 2 104 7 1 0 8 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 6 2 6 3 2 104 0 5 0 1 0 5 1 91 7 1 0 8 1 6 3 0 6 91 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
13 13 1 0 13 62 13 54 48 46 38 36 30 28 22 20 8 6 0 12 1 12 9 15
CALL[ ]	/* CallFunction */";
};
width = 491;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356.238,-11,o),
(442,80.726,o),
(442,187,cs),
(442,199,o),
(436.333,205,o),
(425,205,cs),
(413.667,205,o),
(408,199,o),
(408,187,cs),
(408,100.906,o),
(351.468,21,o),
(243,21,cs),
(122.956,21,o),
(79,121.555,o),
(79,218,cs),
(79,230,o),
(79.667,244.333,o),
(81,259,c),
(133.605,259,o),
(203.073,260,o),
(252,260,cs),
(278.667,260,o),
(304.5,260,o),
(329.5,260,cs),
(354.5,260,o),
(375.667,260.333,o),
(393,261,cs),
(417,262.333,o),
(428,282.667,o),
(428,304,cs),
(428,359.427,o),
(373.596,477,o),
(248,477,cs),
(126.071,477,o),
(34,371.67,o),
(34,226,cs),
(34,96.9,o),
(100.019,-11,o),
(245,-11,cs)
);
},
{
closed = 1;
nodes = (
(98.337,363.686,o),
(146.119,445,o),
(245,445,cs),
(343.682,445,o),
(385,364.324,o),
(385,311,cs),
(385,299,o),
(379.333,293,o),
(368,293,cs),
(85,289,l),
(85,289,l),
(85,289,l),
(85,289,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 6 2 6 3 2 104 7 1 0 8 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 6 2 6 3 2 104 0 5 0 1 0 5 1 91 7 1 0 8 1 6 3 0 6 91 0 2 2 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
13 13 1 0 13 60 13 52 46 44 36 34 29 27 22 20 8 6 0 12 1 12 9 15
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = e;
unicode = 101;
},
{
glyphname = eacute;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(376,667.333,o),
(348.667,688.667,o),
(306,690,cs),
(280.667,690,o),
(250,651.167,o),
(226,610.5,cs),
(205.511,575.783,o),
(184,528.988,o),
(184,524,cs),
(184,509.333,o),
(206.333,502,o),
(221,502,cs),
(238.099,502,o),
(273.389,524.679,o),
(312,559,cs),
(346.627,589.78,o),
(376,624.341,o),
(376,642,cs)
);
},
{
closed = 1;
nodes = (
(134.484,347.387,o),
(180.875,403,o),
(262,403,cs),
(342.614,403,o),
(378,351.966,o),
(378,316,cs),
(378,300,o),
(372,292,o),
(360,292,cs),
(126,288,l),
(126,288,l)
);
},
{
closed = 1;
nodes = (
(126.333,229,o),
(132,229,o),
(142,229,cs),
(152,229,o),
(164.167,229,o),
(178.5,229,cs),
(192.833,229,o),
(208.333,229.167,o),
(225,229.5,cs),
(241.667,229.833,o),
(257.333,230,o),
(272,230,cs),
(286.667,230,o),
(299.333,230,o),
(310,230,cs),
(320.667,230,o),
(327.333,230,o),
(330,230,cs),
(405.052,230,o),
(430.634,231.648,o),
(447,241,cs),
(467,251.667,o),
(474,270.333,o),
(474,297,cs),
(474,355.149,o),
(427.052,478,o),
(264,478,cs),
(122.565,478,o),
(31,383.146,o),
(31,227,cs),
(31,72.378,o),
(122.731,-14,o),
(263,-14,cs),
(429.217,-14,o),
(470,101.188,o),
(470,143,cs),
(470,176.333,o),
(454.333,183,o),
(429,183,cs),
(406.333,183,o),
(392,167.333,o),
(384,146,cs),
(369.55,108.431,o),
(340.163,62,o),
(269,62,cs),
(149.495,62,o),
(124,147.183,o),
(124,218,cs),
(124,219.333,o),
(124,221.167,o),
(124,223.5,cs),
(124,225.833,o),
(124.333,227.667,o),
(125,229,c)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 7 0 106 0 5 8 4 8 5 4 104 9 1 2 10 1 8 5 2 8 92 0 3 3 7 83 0 7 7 23 67 0 4 4 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 106 0 0 7 0 106 0 5 8 4 8 5 4 104 0 7 0 3 2 7 3 91 9 1 2 10 1 8 5 2 8 92 0 4 4 6 83 0 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
31 31 19 18 31 84 31 76 66 64 56 54 48 46 40 38 26 24 18 30 19 30 38 38 11 17
CALL[ ]	/* CallFunction */";
};
width = 507;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(345,655.667,o),
(326.667,671,o),
(296,671,cs),
(277.565,671,o),
(249.366,636.522,o),
(226,600.5,cs),
(200.182,560.697,o),
(185,527.174,o),
(185,523,cs),
(185,509.667,o),
(199.333,505,o),
(210,505,cs),
(239.68,505,o),
(345,604.002,o),
(345,633,cs)
);
},
{
closed = 1;
nodes = (
(121.434,353.776,o),
(170.253,415,o),
(254,415,cs),
(337.446,415,o),
(381,353.503,o),
(381,311,cs),
(381,305.667,o),
(375.333,303,o),
(364,303,cs),
(111,299,l),
(111,299,l)
);
},
{
closed = 1;
nodes = (
(151.1,239,o),
(208.07,240,o),
(248,240,cs),
(280,240,o),
(310.167,240.167,o),
(338.5,240.5,cs),
(366.833,240.833,o),
(391.333,241,o),
(412,241,cs),
(438.667,241,o),
(454,273.333,o),
(454,304,cs),
(454,357.454,o),
(404.444,477,o),
(257,477,cs),
(121.842,477,o),
(30,383.553,o),
(30,226,cs),
(30,85.149,o),
(103.872,-13,o),
(242,-13,cs),
(409.041,-13,o),
(463,74.835,o),
(463,173,cs),
(463,193,o),
(449,205,o),
(433,205,cs),
(405,205,o),
(399,183.667,o),
(399,173,cs),
(399,125.923,o),
(363.841,51,o),
(258,51,cs),
(160.092,51,o),
(105,135.5,o),
(105,218,cs),
(105,224.667,o),
(105.667,232.333,o),
(107,239,c)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 7 0 106 0 5 8 4 8 5 4 104 9 1 2 10 1 8 5 2 8 92 0 3 3 7 83 0 7 7 23 67 0 4 4 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 106 0 0 7 0 106 0 5 8 4 8 5 4 104 0 7 0 3 2 7 3 91 9 1 2 10 1 8 5 2 8 92 0 4 4 6 83 0 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
31 31 19 18 31 80 31 72 66 64 56 54 48 46 40 38 26 24 18 30 19 30 40 36 11 17
CALL[ ]	/* CallFunction */";
};
width = 491;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356.238,-11,o),
(442,80.726,o),
(442,187,cs),
(442,199,o),
(436.333,205,o),
(425,205,cs),
(413.667,205,o),
(408,199,o),
(408,187,cs),
(408,100.906,o),
(351.468,21,o),
(243,21,cs),
(122.956,21,o),
(79,121.555,o),
(79,218,cs),
(79,230,o),
(79.667,244.333,o),
(81,259,c),
(133.605,259,o),
(203.073,260,o),
(252,260,cs),
(278.667,260,o),
(304.5,260,o),
(329.5,260,cs),
(354.5,260,o),
(375.667,260.333,o),
(393,261,cs),
(417,262.333,o),
(428,282.667,o),
(428,304,cs),
(428,359.427,o),
(373.596,477,o),
(248,477,cs),
(126.071,477,o),
(34,371.67,o),
(34,226,cs),
(34,96.9,o),
(100.019,-11,o),
(245,-11,cs)
);
},
{
closed = 1;
nodes = (
(98.337,363.686,o),
(146.119,445,o),
(245,445,cs),
(343.682,445,o),
(385,364.324,o),
(385,311,cs),
(385,299,o),
(379.333,293,o),
(368,293,cs),
(85,289,l),
(85,289,l),
(85,289,l),
(85,289,l)
);
},
{
closed = 1;
nodes = (
(213.797,510,o),
(301,597.027,o),
(301,618,cs),
(301,636.667,o),
(292.667,640,o),
(282,640,cs),
(261.822,640,o),
(187,545.882,o),
(187,521,cs),
(187,513.667,o),
(189.667,510,o),
(195,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 8 7 8 106 0 7 5 7 106 0 3 6 2 6 3 2 104 9 1 0 10 1 6 3 0 6 92 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 8 7 8 106 0 7 5 7 106 0 3 6 2 6 3 2 104 0 5 0 1 0 5 1 91 9 1 0 10 1 6 3 0 6 92 0 2 2 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
13 13 1 0 74 72 67 65 13 60 13 52 46 44 36 34 29 27 22 20 8 6 0 12 1 12 11 15
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = eacute;
unicode = 233;
},
{
glyphname = ebreve;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(134.484,347.387,o),
(180.875,403,o),
(262,403,cs),
(342.614,403,o),
(378,351.966,o),
(378,316,cs),
(378,300,o),
(372,292,o),
(360,292,cs),
(126,288,l),
(126,288,l)
);
},
{
closed = 1;
nodes = (
(126.333,229,o),
(132,229,o),
(142,229,cs),
(152,229,o),
(164.167,229,o),
(178.5,229,cs),
(192.833,229,o),
(208.333,229.167,o),
(225,229.5,cs),
(241.667,229.833,o),
(257.333,230,o),
(272,230,cs),
(286.667,230,o),
(299.333,230,o),
(310,230,cs),
(320.667,230,o),
(327.333,230,o),
(330,230,cs),
(405.052,230,o),
(430.634,231.648,o),
(447,241,cs),
(467,251.667,o),
(474,270.333,o),
(474,297,cs),
(474,355.149,o),
(427.052,478,o),
(264,478,cs),
(122.565,478,o),
(31,383.146,o),
(31,227,cs),
(31,72.378,o),
(122.731,-14,o),
(263,-14,cs),
(429.217,-14,o),
(470,101.188,o),
(470,143,cs),
(470,176.333,o),
(454.333,183,o),
(429,183,cs),
(406.333,183,o),
(392,167.333,o),
(384,146,cs),
(369.55,108.431,o),
(340.163,62,o),
(269,62,cs),
(149.495,62,o),
(124,147.183,o),
(124,218,cs),
(124,219.333,o),
(124,221.167,o),
(124,223.5,cs),
(124,225.833,o),
(124.333,227.667,o),
(125,229,c)
);
},
{
closed = 1;
nodes = (
(385,615.667,o),
(367,619,o),
(347,619,cs),
(329.667,619,o),
(315,604.667,o),
(315,590,cs),
(315,584.667,o),
(310.5,579.5,o),
(301.5,574.5,cs),
(292.5,569.5,o),
(278.333,567,o),
(259,567,cs),
(228.535,567,o),
(200,574.638,o),
(200,590,cs),
(200,612.667,o),
(186.667,619,o),
(164,619,cs),
(141.333,619,o),
(132,606.333,o),
(132,589,cs),
(132,546.333,o),
(177.333,510,o),
(264,510,cs),
(315.962,510,o),
(385,536.821,o),
(385,589,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
10 1 8 9 8 106 0 3 6 2 6 3 2 104 0 9 0 7 5 9 7 91 11 1 0 12 1 6 3 0 6 92 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
10 1 8 9 8 106 0 3 6 2 6 3 2 104 0 9 0 7 5 9 7 91 0 5 0 1 0 5 1 91 11 1 0 12 1 6 3 0 6 92 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
13 13 1 0 93 91 87 85 79 77 73 71 13 66 13 58 48 46 38 36 30 28 22 20 8 6 0 12 1 12 13 15
CALL[ ]	/* CallFunction */";
};
width = 507;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(121.434,353.776,o),
(170.253,415,o),
(254,415,cs),
(337.446,415,o),
(381,353.503,o),
(381,311,cs),
(381,305.667,o),
(375.333,303,o),
(364,303,cs),
(111,299,l),
(111,299,l)
);
},
{
closed = 1;
nodes = (
(151.1,239,o),
(208.07,240,o),
(248,240,cs),
(280,240,o),
(310.167,240.167,o),
(338.5,240.5,cs),
(366.833,240.833,o),
(391.333,241,o),
(412,241,cs),
(438.667,241,o),
(454,273.333,o),
(454,304,cs),
(454,357.454,o),
(404.444,477,o),
(257,477,cs),
(121.842,477,o),
(30,383.553,o),
(30,226,cs),
(30,85.149,o),
(103.872,-13,o),
(242,-13,cs),
(409.041,-13,o),
(463,74.835,o),
(463,173,cs),
(463,193,o),
(449,205,o),
(433,205,cs),
(405,205,o),
(399,183.667,o),
(399,173,cs),
(399,125.923,o),
(363.841,51,o),
(258,51,cs),
(160.092,51,o),
(105,135.5,o),
(105,218,cs),
(105,224.667,o),
(105.667,232.333,o),
(107,239,c)
);
},
{
closed = 1;
nodes = (
(374,616,o),
(357,617,o),
(344,617,cs),
(329,617,o),
(318,605,o),
(318,590,cs),
(318,573,o),
(293,555,o),
(254,555,cs),
(224,555,o),
(189,564,o),
(189,590,cs),
(189,610,o),
(180,617,o),
(161,617,cs),
(144,617,o),
(135,608,o),
(135,589,cs),
(135,548,o),
(181,510,o),
(257,510,cs),
(308,510,o),
(374,537,o),
(374,589,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
10 1 8 9 8 106 0 3 6 2 6 3 2 104 0 9 0 7 5 9 7 91 11 1 0 12 1 6 3 0 6 92 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
10 1 8 9 8 106 0 3 6 2 6 3 2 104 0 9 0 7 5 9 7 91 0 5 0 1 0 5 1 91 11 1 0 12 1 6 3 0 6 92 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
14 14 2 1 89 87 83 81 75 73 70 68 14 63 14 55 49 47 39 37 31 29 23 21 9 7 1 13 2 13 13 26
CALL[ ]	/* CallFunction */";
};
width = 491;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356.238,-11,o),
(442,80.726,o),
(442,187,cs),
(442,199,o),
(436.333,205,o),
(425,205,cs),
(413.667,205,o),
(408,199,o),
(408,187,cs),
(408,100.906,o),
(351.468,21,o),
(243,21,cs),
(122.956,21,o),
(79,121.555,o),
(79,218,cs),
(79,230,o),
(79.667,244.333,o),
(81,259,c),
(133.605,259,o),
(203.073,260,o),
(252,260,cs),
(278.667,260,o),
(304.5,260,o),
(329.5,260,cs),
(354.5,260,o),
(375.667,260.333,o),
(393,261,cs),
(417,262.333,o),
(428,282.667,o),
(428,304,cs),
(428,359.427,o),
(373.596,477,o),
(248,477,cs),
(126.071,477,o),
(34,371.67,o),
(34,226,cs),
(34,96.9,o),
(100.019,-11,o),
(245,-11,cs)
);
},
{
closed = 1;
nodes = (
(98.337,363.686,o),
(146.119,445,o),
(245,445,cs),
(343.682,445,o),
(385,364.324,o),
(385,311,cs),
(385,299,o),
(379.333,293,o),
(368,293,cs),
(85,289,l),
(85,289,l),
(85,289,l),
(85,289,l)
);
},
{
closed = 1;
nodes = (
(300.372,510,o),
(358,540.865,o),
(358,589,cs),
(358,610.333,o),
(349.667,613,o),
(339,613,cs),
(327.667,613,o),
(322,605.333,o),
(322,590,cs),
(322,562.695,o),
(282.603,535,o),
(247,535,cs),
(208.333,535,o),
(173,548.667,o),
(173,590,cs),
(173,606,o),
(170.667,613,o),
(156,613,cs),
(144.667,613,o),
(139,605,o),
(139,589,cs),
(139,547.83,o),
(189.193,510,o),
(247,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
10 1 8 9 8 106 0 3 6 2 6 3 2 104 0 9 0 7 5 9 7 91 11 1 0 12 1 6 3 0 6 92 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
10 1 8 9 8 106 0 3 6 2 6 3 2 104 0 9 0 7 5 9 7 91 0 5 0 1 0 5 1 91 11 1 0 12 1 6 3 0 6 92 0 2 2 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
13 13 1 0 87 85 80 78 74 72 67 65 13 60 13 52 46 44 36 34 29 27 22 20 8 6 0 12 1 12 13 15
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = ebreve;
unicode = 277;
},
{
glyphname = ecaron;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(363.803,640,o),
(326.614,615.913,o),
(255,578,c),
(205.718,604.09,o),
(148.064,640,o),
(136,640,cs),
(128,640,o),
(123,632.667,o),
(123,626,cs),
(123,599.333,o),
(151.333,565.167,o),
(182,536.5,cs),
(208.897,511.357,o),
(244,486,o),
(255,486,cs),
(278.877,486,o),
(388,578.037,o),
(388,619,cs),
(388,629.667,o),
(384.333,640,o),
(375,640,cs)
);
},
{
closed = 1;
nodes = (
(134.484,347.387,o),
(180.875,403,o),
(262,403,cs),
(342.614,403,o),
(378,351.966,o),
(378,316,cs),
(378,300,o),
(372,292,o),
(360,292,cs),
(126,288,l),
(126,288,l)
);
},
{
closed = 1;
nodes = (
(126.333,229,o),
(132,229,o),
(142,229,cs),
(152,229,o),
(164.167,229,o),
(178.5,229,cs),
(192.833,229,o),
(208.333,229.167,o),
(225,229.5,cs),
(241.667,229.833,o),
(257.333,230,o),
(272,230,cs),
(286.667,230,o),
(299.333,230,o),
(310,230,cs),
(320.667,230,o),
(327.333,230,o),
(330,230,cs),
(405.052,230,o),
(430.634,231.648,o),
(447,241,cs),
(467,251.667,o),
(474,270.333,o),
(474,297,cs),
(474,355.149,o),
(427.052,478,o),
(264,478,cs),
(122.565,478,o),
(31,383.146,o),
(31,227,cs),
(31,72.378,o),
(122.731,-14,o),
(263,-14,cs),
(429.217,-14,o),
(470,101.188,o),
(470,143,cs),
(470,176.333,o),
(454.333,183,o),
(429,183,cs),
(406.333,183,o),
(392,167.333,o),
(384,146,cs),
(369.55,108.431,o),
(340.163,62,o),
(269,62,cs),
(149.495,62,o),
(124,147.183,o),
(124,218,cs),
(124,219.333,o),
(124,221.167,o),
(124,223.5,cs),
(124,225.833,o),
(124.333,227.667,o),
(125,229,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
2 10 2 0 1 0 106 0 1 8 1 106 0 6 9 5 9 6 5 104 11 1 3 12 1 9 6 3 9 92 0 4 4 8 83 0 8 8 23 67 0 5 5 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
2 10 2 0 1 0 106 0 1 8 1 106 0 6 9 5 9 6 5 104 0 8 0 4 3 8 4 91 11 1 3 12 1 9 6 3 9 92 0 5 5 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
39 39 27 26 1 0 39 92 39 84 74 72 64 62 56 54 48 46 34 32 26 38 27 38 17 15 9 7 0 25 1 25 13 15
CALL[ ]	/* CallFunction */";
};
width = 507;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(121.434,353.776,o),
(170.253,415,o),
(254,415,cs),
(337.446,415,o),
(381,353.503,o),
(381,311,cs),
(381,305.667,o),
(375.333,303,o),
(364,303,cs),
(111,299,l),
(111,299,l)
);
},
{
closed = 1;
nodes = (
(151.1,239,o),
(208.07,240,o),
(248,240,cs),
(280,240,o),
(310.167,240.167,o),
(338.5,240.5,cs),
(366.833,240.833,o),
(391.333,241,o),
(412,241,cs),
(438.667,241,o),
(454,273.333,o),
(454,304,cs),
(454,357.454,o),
(404.444,477,o),
(257,477,cs),
(121.842,477,o),
(30,383.553,o),
(30,226,cs),
(30,85.149,o),
(103.872,-13,o),
(242,-13,cs),
(409.041,-13,o),
(463,74.835,o),
(463,173,cs),
(463,193,o),
(449,205,o),
(433,205,cs),
(405,205,o),
(399,183.667,o),
(399,173,cs),
(399,125.923,o),
(363.841,51,o),
(258,51,cs),
(160.092,51,o),
(105,135.5,o),
(105,218,cs),
(105,224.667,o),
(105.667,232.333,o),
(107,239,c)
);
},
{
closed = 1;
nodes = (
(357,640,o),
(263,577,o),
(250,569,c),
(177,612,o),
(146,640,o),
(131,640,cs),
(124,640,o),
(120,636,o),
(120,627,cs),
(120,586,o),
(228,495,o),
(250,495,cs),
(275,495,o),
(381,588,o),
(381,623,cs),
(381,632,o),
(378,640,o),
(370,640,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
69 1 9 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
8 12 2 7 9 7 106 0 3 6 2 6 3 2 104 10 1 0 11 1 6 3 0 6 91 0 9 9 23 67 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
8 12 2 7 9 7 106 0 9 5 5 9 94 0 3 6 2 6 3 2 104 0 5 0 1 0 5 1 92 10 1 0 11 1 6 3 0 6 91 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
65 64 14 14 2 1 82 80 75 73 64 88 65 88 14 63 14 55 49 47 39 37 31 29 23 21 9 7 1 13 2 13 13 26
CALL[ ]	/* CallFunction */";
};
width = 491;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356.238,-11,o),
(442,80.726,o),
(442,187,cs),
(442,199,o),
(436.333,205,o),
(425,205,cs),
(413.667,205,o),
(408,199,o),
(408,187,cs),
(408,100.906,o),
(351.468,21,o),
(243,21,cs),
(122.956,21,o),
(79,121.555,o),
(79,218,cs),
(79,230,o),
(79.667,244.333,o),
(81,259,c),
(133.605,259,o),
(203.073,260,o),
(252,260,cs),
(278.667,260,o),
(304.5,260,o),
(329.5,260,cs),
(354.5,260,o),
(375.667,260.333,o),
(393,261,cs),
(417,262.333,o),
(428,282.667,o),
(428,304,cs),
(428,359.427,o),
(373.596,477,o),
(248,477,cs),
(126.071,477,o),
(34,371.67,o),
(34,226,cs),
(34,96.9,o),
(100.019,-11,o),
(245,-11,cs)
);
},
{
closed = 1;
nodes = (
(98.337,363.686,o),
(146.119,445,o),
(245,445,cs),
(343.682,445,o),
(385,364.324,o),
(385,311,cs),
(385,299,o),
(379.333,293,o),
(368,293,cs),
(85,289,l),
(85,289,l),
(85,289,l),
(85,289,l)
);
},
{
closed = 1;
nodes = (
(267.852,510,o),
(371,603.671,o),
(371,629,cs),
(371,636.333,o),
(368.333,640,o),
(363,640,cs),
(348.302,640,o),
(319.411,607.937,o),
(243,554,c),
(206.597,579.696,o),
(137.139,640,o),
(124,640,cs),
(118.667,640,o),
(116,636.333,o),
(116,629,cs),
(116,604.067,o),
(219.626,510,o),
(243,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
80 1 8 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
9 12 2 7 8 7 106 0 8 5 8 106 0 3 6 2 6 3 2 104 10 1 0 11 1 6 3 0 6 92 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
9 12 2 7 8 7 106 0 8 5 8 106 0 3 6 2 6 3 2 104 0 5 0 1 0 5 1 91 10 1 0 11 1 6 3 0 6 92 0 2 2 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
62 61 13 13 1 0 76 74 69 67 61 84 62 84 13 60 13 52 46 44 36 34 29 27 22 20 8 6 0 12 1 12 13 15
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = ecaron;
unicode = 283;
},
{
glyphname = ecircumflex;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(382.333,510,o),
(386,520.333,o),
(386,531,cs),
(386,571.963,o),
(276.877,664,o),
(253,664,cs),
(242,664,o),
(206.897,638.643,o),
(180,613.5,cs),
(149.333,584.833,o),
(121,549.333,o),
(121,524,cs),
(121,517.333,o),
(126,510,o),
(134,510,cs),
(146.064,510,o),
(203.718,545.91,o),
(253,572,c),
(324.614,534.087,o),
(361.803,510,o),
(373,510,cs)
);
},
{
closed = 1;
nodes = (
(134.484,347.387,o),
(180.875,403,o),
(262,403,cs),
(342.614,403,o),
(378,351.966,o),
(378,316,cs),
(378,300,o),
(372,292,o),
(360,292,cs),
(126,288,l),
(126,288,l)
);
},
{
closed = 1;
nodes = (
(126.333,229,o),
(132,229,o),
(142,229,cs),
(152,229,o),
(164.167,229,o),
(178.5,229,cs),
(192.833,229,o),
(208.333,229.167,o),
(225,229.5,cs),
(241.667,229.833,o),
(257.333,230,o),
(272,230,cs),
(286.667,230,o),
(299.333,230,o),
(310,230,cs),
(320.667,230,o),
(327.333,230,o),
(330,230,cs),
(405.052,230,o),
(430.634,231.648,o),
(447,241,cs),
(467,251.667,o),
(474,270.333,o),
(474,297,cs),
(474,355.149,o),
(427.052,478,o),
(264,478,cs),
(122.565,478,o),
(31,383.146,o),
(31,227,cs),
(31,72.378,o),
(122.731,-14,o),
(263,-14,cs),
(429.217,-14,o),
(470,101.188,o),
(470,143,cs),
(470,176.333,o),
(454.333,183,o),
(429,183,cs),
(406.333,183,o),
(392,167.333,o),
(384,146,cs),
(369.55,108.431,o),
(340.163,62,o),
(269,62,cs),
(149.495,62,o),
(124,147.183,o),
(124,218,cs),
(124,219.333,o),
(124,221.167,o),
(124,223.5,cs),
(124,225.833,o),
(124.333,227.667,o),
(125,229,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 2 0 2 106 1 10 2 0 8 0 106 0 6 9 5 9 6 5 104 11 1 3 12 1 9 6 3 9 91 0 4 4 8 83 0 8 8 23 67 0 5 5 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 2 0 2 106 1 10 2 0 8 0 106 0 6 9 5 9 6 5 104 0 8 0 4 3 8 4 92 11 1 3 12 1 9 6 3 9 91 0 5 5 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
39 39 27 26 1 0 39 92 39 84 74 72 64 62 56 54 48 46 34 32 26 38 27 38 19 17 11 9 0 25 1 25 13 15
CALL[ ]	/* CallFunction */";
};
width = 507;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(121.434,353.776,o),
(170.253,415,o),
(254,415,cs),
(337.446,415,o),
(381,353.503,o),
(381,311,cs),
(381,305.667,o),
(375.333,303,o),
(364,303,cs),
(111,299,l),
(111,299,l)
);
},
{
closed = 1;
nodes = (
(151.1,239,o),
(208.07,240,o),
(248,240,cs),
(280,240,o),
(310.167,240.167,o),
(338.5,240.5,cs),
(366.833,240.833,o),
(391.333,241,o),
(412,241,cs),
(438.667,241,o),
(454,273.333,o),
(454,304,cs),
(454,357.454,o),
(404.444,477,o),
(257,477,cs),
(121.842,477,o),
(30,383.553,o),
(30,226,cs),
(30,85.149,o),
(103.872,-13,o),
(242,-13,cs),
(409.041,-13,o),
(463,74.835,o),
(463,173,cs),
(463,193,o),
(449,205,o),
(433,205,cs),
(405,205,o),
(399,183.667,o),
(399,173,cs),
(399,125.923,o),
(363.841,51,o),
(258,51,cs),
(160.092,51,o),
(105,135.5,o),
(105,218,cs),
(105,224.667,o),
(105.667,232.333,o),
(107,239,c)
);
},
{
closed = 1;
nodes = (
(377,510,o),
(380,518,o),
(380,527,cs),
(380,562,o),
(274,655,o),
(249,655,cs),
(227,655,o),
(119,564,o),
(119,523,cs),
(119,514,o),
(123,510,o),
(130,510,cs),
(145,510,o),
(176,538,o),
(249,581,c),
(262,573,o),
(356,510,o),
(369,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
69 1 7 9 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 9 7 9 106 8 12 2 7 5 7 106 0 3 6 2 6 3 2 104 10 1 0 11 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 9 7 9 106 8 12 2 7 5 7 106 0 3 6 2 6 3 2 104 0 5 0 1 0 5 1 92 10 1 0 11 1 6 3 0 6 91 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
65 64 14 14 2 1 82 80 75 73 64 88 65 88 14 63 14 55 49 47 39 37 31 29 23 21 9 7 1 13 2 13 13 26
CALL[ ]	/* CallFunction */";
};
width = 491;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356.238,-11,o),
(442,80.726,o),
(442,187,cs),
(442,199,o),
(436.333,205,o),
(425,205,cs),
(413.667,205,o),
(408,199,o),
(408,187,cs),
(408,100.906,o),
(351.468,21,o),
(243,21,cs),
(122.956,21,o),
(79,121.555,o),
(79,218,cs),
(79,230,o),
(79.667,244.333,o),
(81,259,c),
(133.605,259,o),
(203.073,260,o),
(252,260,cs),
(278.667,260,o),
(304.5,260,o),
(329.5,260,cs),
(354.5,260,o),
(375.667,260.333,o),
(393,261,cs),
(417,262.333,o),
(428,282.667,o),
(428,304,cs),
(428,359.427,o),
(373.596,477,o),
(248,477,cs),
(126.071,477,o),
(34,371.67,o),
(34,226,cs),
(34,96.9,o),
(100.019,-11,o),
(245,-11,cs)
);
},
{
closed = 1;
nodes = (
(98.337,363.686,o),
(146.119,445,o),
(245,445,cs),
(343.682,445,o),
(385,364.324,o),
(385,311,cs),
(385,299,o),
(379.333,293,o),
(368,293,cs),
(85,289,l),
(85,289,l),
(85,289,l),
(85,289,l)
);
},
{
closed = 1;
nodes = (
(139.084,510,o),
(191.433,558.894,o),
(244,596,c),
(320.411,542.063,o),
(349.302,510,o),
(364,510,cs),
(369.333,510,o),
(372,513.667,o),
(372,521,cs),
(372,546.329,o),
(268.852,640,o),
(244,640,cs),
(220.626,640,o),
(117,545.933,o),
(117,521,cs),
(117,513.667,o),
(119.667,510,o),
(125,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
66 1 7 9 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 9 7 9 106 8 12 2 7 5 7 106 0 3 6 2 6 3 2 104 10 1 0 11 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 9 7 9 106 8 12 2 7 5 7 106 0 3 6 2 6 3 2 104 0 5 0 1 0 5 1 92 10 1 0 11 1 6 3 0 6 91 0 2 2 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
62 61 13 13 1 0 79 77 72 70 61 84 62 84 13 60 13 52 46 44 36 34 29 27 22 20 8 6 0 12 1 12 13 15
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = ecircumflex;
unicode = 234;
},
{
glyphname = edieresis;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(90,551.333,o),
(115.667,524,o),
(149,524,cs),
(178.675,524,o),
(216,538.646,o),
(216,594,cs),
(216,630,o),
(188,655,o),
(156,655,cs),
(109.034,655,o),
(90,613.847,o),
(90,590,cs)
);
},
{
closed = 1;
nodes = (
(297,528.333,o),
(322.667,501,o),
(356,501,cs),
(385.675,501,o),
(423,515.646,o),
(423,571,cs),
(423,607,o),
(395,632,o),
(363,632,cs),
(316.034,632,o),
(297,590.847,o),
(297,567,cs)
);
},
{
closed = 1;
nodes = (
(134.484,347.387,o),
(180.875,403,o),
(262,403,cs),
(342.614,403,o),
(378,351.966,o),
(378,316,cs),
(378,300,o),
(372,292,o),
(360,292,cs),
(126,288,l),
(126,288,l)
);
},
{
closed = 1;
nodes = (
(126.333,229,o),
(132,229,o),
(142,229,cs),
(152,229,o),
(164.167,229,o),
(178.5,229,cs),
(192.833,229,o),
(208.333,229.167,o),
(225,229.5,cs),
(241.667,229.833,o),
(257.333,230,o),
(272,230,cs),
(286.667,230,o),
(299.333,230,o),
(310,230,cs),
(320.667,230,o),
(327.333,230,o),
(330,230,cs),
(405.052,230,o),
(430.634,231.648,o),
(447,241,cs),
(467,251.667,o),
(474,270.333,o),
(474,297,cs),
(474,355.149,o),
(427.052,478,o),
(264,478,cs),
(122.565,478,o),
(31,383.146,o),
(31,227,cs),
(31,72.378,o),
(122.731,-14,o),
(263,-14,cs),
(429.217,-14,o),
(470,101.188,o),
(470,143,cs),
(470,176.333,o),
(454.333,183,o),
(429,183,cs),
(406.333,183,o),
(392,167.333,o),
(384,146,cs),
(369.55,108.431,o),
(340.163,62,o),
(269,62,cs),
(149.495,62,o),
(124,147.183,o),
(124,218,cs),
(124,219.333,o),
(124,221.167,o),
(124,223.5,cs),
(124,225.833,o),
(124.333,227.667,o),
(125,229,c)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 7 10 6 10 7 6 104 0 0 0 1 3 0 1 91 0 2 0 3 9 2 3 91 11 1 4 12 1 10 7 4 10 91 0 5 5 9 83 0 9 9 23 67 0 6 6 8 83 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 7 10 6 10 7 6 104 0 0 0 1 3 0 1 91 0 2 0 3 9 2 3 91 0 9 0 5 4 9 5 91 11 1 4 12 1 10 7 4 10 91 0 6 6 8 83 0 8 8 21 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
45 45 33 32 45 98 45 90 80 78 70 68 62 60 54 52 40 38 32 44 33 44 38 38 38 36 13 19
CALL[ ]	/* CallFunction */";
};
width = 507;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(121.434,353.776,o),
(170.253,415,o),
(254,415,cs),
(337.446,415,o),
(381,353.503,o),
(381,311,cs),
(381,305.667,o),
(375.333,303,o),
(364,303,cs),
(111,299,l),
(111,299,l)
);
},
{
closed = 1;
nodes = (
(151.1,239,o),
(208.07,240,o),
(248,240,cs),
(280,240,o),
(310.167,240.167,o),
(338.5,240.5,cs),
(366.833,240.833,o),
(391.333,241,o),
(412,241,cs),
(438.667,241,o),
(454,273.333,o),
(454,304,cs),
(454,357.454,o),
(404.444,477,o),
(257,477,cs),
(121.842,477,o),
(30,383.553,o),
(30,226,cs),
(30,85.149,o),
(103.872,-13,o),
(242,-13,cs),
(409.041,-13,o),
(463,74.835,o),
(463,173,cs),
(463,193,o),
(449,205,o),
(433,205,cs),
(405,205,o),
(399,183.667,o),
(399,173,cs),
(399,125.923,o),
(363.841,51,o),
(258,51,cs),
(160.092,51,o),
(105,135.5,o),
(105,218,cs),
(105,224.667,o),
(105.667,232.333,o),
(107,239,c)
);
},
{
closed = 1;
nodes = (
(96,551,o),
(118,527,o),
(145,527,cs),
(170,527,o),
(201,540,o),
(201,588,cs),
(201,619,o),
(179,640,o),
(152,640,cs),
(114,640,o),
(96,605,o),
(96,584,cs)
);
},
{
closed = 1;
nodes = (
(303,528,o),
(325,504,o),
(352,504,cs),
(377,504,o),
(408,517,o),
(408,565,cs),
(408,596,o),
(386,617,o),
(359,617,cs),
(321,617,o),
(303,582,o),
(303,561,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 3 6 2 6 3 2 104 0 7 0 8 10 7 8 91 0 9 0 10 5 9 10 91 11 1 0 12 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 3 6 2 6 3 2 104 0 7 0 8 10 7 8 91 0 9 0 10 5 9 10 91 0 5 0 1 0 5 1 91 11 1 0 12 1 6 3 0 6 91 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
14 14 2 1 90 88 84 82 76 74 70 68 14 63 14 55 49 47 39 37 31 29 23 21 9 7 1 13 2 13 13 26
CALL[ ]	/* CallFunction */";
};
width = 491;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356.238,-11,o),
(442,80.726,o),
(442,187,cs),
(442,199,o),
(436.333,205,o),
(425,205,cs),
(413.667,205,o),
(408,199,o),
(408,187,cs),
(408,100.906,o),
(351.468,21,o),
(243,21,cs),
(122.956,21,o),
(79,121.555,o),
(79,218,cs),
(79,230,o),
(79.667,244.333,o),
(81,259,c),
(133.605,259,o),
(203.073,260,o),
(252,260,cs),
(278.667,260,o),
(304.5,260,o),
(329.5,260,cs),
(354.5,260,o),
(375.667,260.333,o),
(393,261,cs),
(417,262.333,o),
(428,282.667,o),
(428,304,cs),
(428,359.427,o),
(373.596,477,o),
(248,477,cs),
(126.071,477,o),
(34,371.67,o),
(34,226,cs),
(34,96.9,o),
(100.019,-11,o),
(245,-11,cs)
);
},
{
closed = 1;
nodes = (
(98.337,363.686,o),
(146.119,445,o),
(245,445,cs),
(343.682,445,o),
(385,364.324,o),
(385,311,cs),
(385,299,o),
(379.333,293,o),
(368,293,cs),
(85,289,l),
(85,289,l),
(85,289,l),
(85,289,l)
);
},
{
closed = 1;
nodes = (
(157.667,533,o),
(180,543,o),
(180,579,cs),
(180,601.667,o),
(164.667,616,o),
(146,616,cs),
(118.258,616,o),
(105,588.895,o),
(105,575,cs),
(105,551,o),
(120.333,533,o),
(139,533,cs)
);
},
{
closed = 1;
nodes = (
(364.667,510,o),
(387,520,o),
(387,556,cs),
(387,578.667,o),
(371.667,593,o),
(353,593,cs),
(325.258,593,o),
(312,565.895,o),
(312,552,cs),
(312,528,o),
(327.333,510,o),
(346,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 3 6 2 6 3 2 104 0 7 0 8 10 7 8 91 0 9 0 10 5 9 10 91 11 1 0 12 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 3 6 2 6 3 2 104 0 7 0 8 10 7 8 91 0 9 0 10 5 9 10 91 0 5 0 1 0 5 1 91 11 1 0 12 1 6 3 0 6 91 0 2 2 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
13 13 1 0 87 85 81 79 73 71 67 65 13 60 13 52 46 44 36 34 29 27 22 20 8 6 0 12 1 12 13 15
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = edieresis;
unicode = 235;
},
{
glyphname = edotaccent;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(134.484,347.387,o),
(180.875,403,o),
(262,403,cs),
(342.614,403,o),
(378,351.966,o),
(378,316,cs),
(378,300,o),
(372,292,o),
(360,292,cs),
(126,288,l),
(126,288,l)
);
},
{
closed = 1;
nodes = (
(126.333,229,o),
(132,229,o),
(142,229,cs),
(152,229,o),
(164.167,229,o),
(178.5,229,cs),
(192.833,229,o),
(208.333,229.167,o),
(225,229.5,cs),
(241.667,229.833,o),
(257.333,230,o),
(272,230,cs),
(286.667,230,o),
(299.333,230,o),
(310,230,cs),
(320.667,230,o),
(327.333,230,o),
(330,230,cs),
(405.052,230,o),
(430.634,231.648,o),
(447,241,cs),
(467,251.667,o),
(474,270.333,o),
(474,297,cs),
(474,355.149,o),
(427.052,478,o),
(264,478,cs),
(122.565,478,o),
(31,383.146,o),
(31,227,cs),
(31,72.378,o),
(122.731,-14,o),
(263,-14,cs),
(429.217,-14,o),
(470,101.188,o),
(470,143,cs),
(470,176.333,o),
(454.333,183,o),
(429,183,cs),
(406.333,183,o),
(392,167.333,o),
(384,146,cs),
(369.55,108.431,o),
(340.163,62,o),
(269,62,cs),
(149.495,62,o),
(124,147.183,o),
(124,218,cs),
(124,219.333,o),
(124,221.167,o),
(124,223.5,cs),
(124,225.833,o),
(124.333,227.667,o),
(125,229,c)
);
},
{
closed = 1;
nodes = (
(197,544.333,o),
(222.667,521,o),
(256,521,cs),
(285.675,521,o),
(323,535.646,o),
(323,591,cs),
(323,627,o),
(295,652,o),
(263,652,cs),
(215.488,652,o),
(197,614.161,o),
(197,587,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 6 2 6 3 2 104 0 7 0 8 5 7 8 91 9 1 0 10 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 6 2 6 3 2 104 0 7 0 8 5 7 8 91 0 5 0 1 0 5 1 91 9 1 0 10 1 6 3 0 6 91 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
13 13 1 0 81 79 73 71 13 66 13 58 48 46 38 36 30 28 22 20 8 6 0 12 1 12 11 15
CALL[ ]	/* CallFunction */";
};
width = 507;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(121.434,353.776,o),
(170.253,415,o),
(254,415,cs),
(337.446,415,o),
(381,353.503,o),
(381,311,cs),
(381,305.667,o),
(375.333,303,o),
(364,303,cs),
(111,299,l),
(111,299,l)
);
},
{
closed = 1;
nodes = (
(151.1,239,o),
(208.07,240,o),
(248,240,cs),
(280,240,o),
(310.167,240.167,o),
(338.5,240.5,cs),
(366.833,240.833,o),
(391.333,241,o),
(412,241,cs),
(438.667,241,o),
(454,273.333,o),
(454,304,cs),
(454,357.454,o),
(404.444,477,o),
(257,477,cs),
(121.842,477,o),
(30,383.553,o),
(30,226,cs),
(30,85.149,o),
(103.872,-13,o),
(242,-13,cs),
(409.041,-13,o),
(463,74.835,o),
(463,173,cs),
(463,193,o),
(449,205,o),
(433,205,cs),
(405,205,o),
(399,183.667,o),
(399,173,cs),
(399,125.923,o),
(363.841,51,o),
(258,51,cs),
(160.092,51,o),
(105,135.5,o),
(105,218,cs),
(105,224.667,o),
(105.667,232.333,o),
(107,239,c)
);
},
{
closed = 1;
nodes = (
(202,548,o),
(224,527,o),
(251,527,cs),
(276,527,o),
(307,540,o),
(307,588,cs),
(307,619,o),
(285,640,o),
(258,640,cs),
(216,640,o),
(202,604,o),
(202,584,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 6 2 6 3 2 104 0 7 0 8 5 7 8 91 9 1 0 10 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 6 2 6 3 2 104 0 7 0 8 5 7 8 91 0 5 0 1 0 5 1 91 9 1 0 10 1 6 3 0 6 91 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
14 14 2 1 76 74 70 68 14 63 14 55 49 47 39 37 31 29 23 21 9 7 1 13 2 13 11 26
CALL[ ]	/* CallFunction */";
};
width = 491;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356.238,-11,o),
(442,80.726,o),
(442,187,cs),
(442,199,o),
(436.333,205,o),
(425,205,cs),
(413.667,205,o),
(408,199,o),
(408,187,cs),
(408,100.906,o),
(351.468,21,o),
(243,21,cs),
(122.956,21,o),
(79,121.555,o),
(79,218,cs),
(79,230,o),
(79.667,244.333,o),
(81,259,c),
(133.605,259,o),
(203.073,260,o),
(252,260,cs),
(278.667,260,o),
(304.5,260,o),
(329.5,260,cs),
(354.5,260,o),
(375.667,260.333,o),
(393,261,cs),
(417,262.333,o),
(428,282.667,o),
(428,304,cs),
(428,359.427,o),
(373.596,477,o),
(248,477,cs),
(126.071,477,o),
(34,371.67,o),
(34,226,cs),
(34,96.9,o),
(100.019,-11,o),
(245,-11,cs)
);
},
{
closed = 1;
nodes = (
(98.337,363.686,o),
(146.119,445,o),
(245,445,cs),
(343.682,445,o),
(385,364.324,o),
(385,311,cs),
(385,299,o),
(379.333,293,o),
(368,293,cs),
(85,289,l),
(85,289,l),
(85,289,l),
(85,289,l)
);
},
{
closed = 1;
nodes = (
(262.667,538,o),
(285,548,o),
(285,584,cs),
(285,606.667,o),
(269.667,621,o),
(251,621,cs),
(223.258,621,o),
(210,593.895,o),
(210,580,cs),
(210,556,o),
(225.333,538,o),
(244,538,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 6 2 6 3 2 104 0 7 0 8 5 7 8 91 9 1 0 10 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 6 2 6 3 2 104 0 7 0 8 5 7 8 91 0 5 0 1 0 5 1 91 9 1 0 10 1 6 3 0 6 91 0 2 2 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
13 13 1 0 73 71 67 65 13 60 13 52 46 44 36 34 29 27 22 20 8 6 0 12 1 12 11 15
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = edotaccent;
unicode = 279;
},
{
glyphname = egrave;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(176,606.193,o),
(293.363,500,o),
(331,500,cs),
(345.667,500,o),
(368,507.333,o),
(368,522,cs),
(368,526.988,o),
(346.489,573.783,o),
(326,608.5,cs),
(302,649.167,o),
(271.333,688,o),
(246,688,cs),
(203.333,686.667,o),
(176,665.333,o),
(176,640,cs)
);
},
{
closed = 1;
nodes = (
(134.484,347.387,o),
(180.875,403,o),
(262,403,cs),
(342.614,403,o),
(378,351.966,o),
(378,316,cs),
(378,300,o),
(372,292,o),
(360,292,cs),
(126,288,l),
(126,288,l)
);
},
{
closed = 1;
nodes = (
(126.333,229,o),
(132,229,o),
(142,229,cs),
(152,229,o),
(164.167,229,o),
(178.5,229,cs),
(192.833,229,o),
(208.333,229.167,o),
(225,229.5,cs),
(241.667,229.833,o),
(257.333,230,o),
(272,230,cs),
(286.667,230,o),
(299.333,230,o),
(310,230,cs),
(320.667,230,o),
(327.333,230,o),
(330,230,cs),
(405.052,230,o),
(430.634,231.648,o),
(447,241,cs),
(467,251.667,o),
(474,270.333,o),
(474,297,cs),
(474,355.149,o),
(427.052,478,o),
(264,478,cs),
(122.565,478,o),
(31,383.146,o),
(31,227,cs),
(31,72.378,o),
(122.731,-14,o),
(263,-14,cs),
(429.217,-14,o),
(470,101.188,o),
(470,143,cs),
(470,176.333,o),
(454.333,183,o),
(429,183,cs),
(406.333,183,o),
(392,167.333,o),
(384,146,cs),
(369.55,108.431,o),
(340.163,62,o),
(269,62,cs),
(149.495,62,o),
(124,147.183,o),
(124,218,cs),
(124,219.333,o),
(124,221.167,o),
(124,223.5,cs),
(124,225.833,o),
(124.333,227.667,o),
(125,229,c)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 0 1 0 106 0 1 7 1 106 0 5 8 4 8 5 4 104 9 1 2 10 1 8 5 2 8 91 0 3 3 7 83 0 7 7 23 67 0 4 4 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 0 1 0 106 0 1 7 1 106 0 5 8 4 8 5 4 104 0 7 0 3 2 7 3 92 9 1 2 10 1 8 5 2 8 91 0 4 4 6 83 0 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
29 29 17 16 29 82 29 74 64 62 54 52 46 44 38 36 24 22 16 28 17 28 38 34 11 17
CALL[ ]	/* CallFunction */";
};
width = 507;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(181,603.002,o),
(286.32,504,o),
(316,504,cs),
(326.667,504,o),
(341,508.667,o),
(341,522,cs),
(341,527.525,o),
(325.921,556.997,o),
(299.5,599.5,cs),
(277.1,635.535,o),
(247.529,670,o),
(230,670,cs),
(199.333,670,o),
(181,654.667,o),
(181,632,cs)
);
},
{
closed = 1;
nodes = (
(121.434,353.776,o),
(170.253,415,o),
(254,415,cs),
(337.446,415,o),
(381,353.503,o),
(381,311,cs),
(381,305.667,o),
(375.333,303,o),
(364,303,cs),
(111,299,l),
(111,299,l)
);
},
{
closed = 1;
nodes = (
(151.1,239,o),
(208.07,240,o),
(248,240,cs),
(280,240,o),
(310.167,240.167,o),
(338.5,240.5,cs),
(366.833,240.833,o),
(391.333,241,o),
(412,241,cs),
(438.667,241,o),
(454,273.333,o),
(454,304,cs),
(454,357.454,o),
(404.444,477,o),
(257,477,cs),
(121.842,477,o),
(30,383.553,o),
(30,226,cs),
(30,85.149,o),
(103.872,-13,o),
(242,-13,cs),
(409.041,-13,o),
(463,74.835,o),
(463,173,cs),
(463,193,o),
(449,205,o),
(433,205,cs),
(405,205,o),
(399,183.667,o),
(399,173,cs),
(399,125.923,o),
(363.841,51,o),
(258,51,cs),
(160.092,51,o),
(105,135.5,o),
(105,218,cs),
(105,224.667,o),
(105.667,232.333,o),
(107,239,c)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 0 1 0 106 0 1 7 1 106 0 5 8 4 8 5 4 104 9 1 2 10 1 8 5 2 8 91 0 3 3 7 83 0 7 7 23 67 0 4 4 6 83 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 0 1 0 106 0 1 7 1 106 0 5 8 4 8 5 4 104 0 7 0 3 2 7 3 92 9 1 2 10 1 8 5 2 8 91 0 4 4 6 83 0 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
31 31 19 18 31 80 31 72 66 64 56 54 48 46 40 38 26 24 18 30 19 30 40 34 11 17
CALL[ ]	/* CallFunction */";
};
width = 491;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356.238,-11,o),
(442,80.726,o),
(442,187,cs),
(442,199,o),
(436.333,205,o),
(425,205,cs),
(413.667,205,o),
(408,199,o),
(408,187,cs),
(408,100.906,o),
(351.468,21,o),
(243,21,cs),
(122.956,21,o),
(79,121.555,o),
(79,218,cs),
(79,230,o),
(79.667,244.333,o),
(81,259,c),
(133.605,259,o),
(203.073,260,o),
(252,260,cs),
(278.667,260,o),
(304.5,260,o),
(329.5,260,cs),
(354.5,260,o),
(375.667,260.333,o),
(393,261,cs),
(417,262.333,o),
(428,282.667,o),
(428,304,cs),
(428,359.427,o),
(373.596,477,o),
(248,477,cs),
(126.071,477,o),
(34,371.67,o),
(34,226,cs),
(34,96.9,o),
(100.019,-11,o),
(245,-11,cs)
);
},
{
closed = 1;
nodes = (
(98.337,363.686,o),
(146.119,445,o),
(245,445,cs),
(343.682,445,o),
(385,364.324,o),
(385,311,cs),
(385,299,o),
(379.333,293,o),
(368,293,cs),
(85,289,l),
(85,289,l),
(85,289,l),
(85,289,l)
);
},
{
closed = 1;
nodes = (
(299.333,510,o),
(302,513.667,o),
(302,521,cs),
(302,545.882,o),
(227.178,640,o),
(207,640,cs),
(196.333,640,o),
(188,636.667,o),
(188,618,cs),
(188,597.027,o),
(275.203,510,o),
(294,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 7 8 7 106 0 8 5 8 106 0 3 6 2 6 3 2 104 9 1 0 10 1 6 3 0 6 92 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 7 8 7 106 0 8 5 8 106 0 3 6 2 6 3 2 104 0 5 0 1 0 5 1 91 9 1 0 10 1 6 3 0 6 92 0 2 2 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
13 13 1 0 72 70 65 63 13 60 13 52 46 44 36 34 29 27 22 20 8 6 0 12 1 12 11 15
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = egrave;
unicode = 232;
},
{
glyphname = emacron;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(134.484,347.387,o),
(180.875,403,o),
(262,403,cs),
(342.614,403,o),
(378,351.966,o),
(378,316,cs),
(378,300,o),
(372,292,o),
(360,292,cs),
(126,288,l),
(126,288,l)
);
},
{
closed = 1;
nodes = (
(126.333,229,o),
(132,229,o),
(142,229,cs),
(152,229,o),
(164.167,229,o),
(178.5,229,cs),
(192.833,229,o),
(208.333,229.167,o),
(225,229.5,cs),
(241.667,229.833,o),
(257.333,230,o),
(272,230,cs),
(286.667,230,o),
(299.333,230,o),
(310,230,cs),
(320.667,230,o),
(327.333,230,o),
(330,230,cs),
(405.052,230,o),
(430.634,231.648,o),
(447,241,cs),
(467,251.667,o),
(474,270.333,o),
(474,297,cs),
(474,355.149,o),
(427.052,478,o),
(264,478,cs),
(122.565,478,o),
(31,383.146,o),
(31,227,cs),
(31,72.378,o),
(122.731,-14,o),
(263,-14,cs),
(429.217,-14,o),
(470,101.188,o),
(470,143,cs),
(470,176.333,o),
(454.333,183,o),
(429,183,cs),
(406.333,183,o),
(392,167.333,o),
(384,146,cs),
(369.55,108.431,o),
(340.163,62,o),
(269,62,cs),
(149.495,62,o),
(124,147.183,o),
(124,218,cs),
(124,219.333,o),
(124,221.167,o),
(124,223.5,cs),
(124,225.833,o),
(124.333,227.667,o),
(125,229,c)
);
},
{
closed = 1;
nodes = (
(379,643,o),
(360.667,642.5,o),
(340,641.5,cs),
(319.333,640.5,o),
(295,640,o),
(267,640,cs),
(224.698,640,o),
(176.437,642,o),
(146,642,cs),
(123.333,642,o),
(113,621.667,o),
(113,603,cs),
(113,584.333,o),
(127.333,563,o),
(146,563,cs),
(216.305,563,o),
(313.446,564,o),
(387,564,cs),
(415.782,564,o),
(423,590.801,o),
(423,606,cs),
(423,626,o),
(409.667,643,o),
(395,643,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 3 6 2 6 3 2 104 11 1 7 0 8 5 7 8 91 9 1 0 10 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 3 6 2 6 3 2 104 11 1 7 0 8 5 7 8 91 0 5 0 1 0 5 1 91 9 1 0 10 1 6 3 0 6 91 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
68 67 13 13 1 0 81 74 67 93 68 85 13 66 13 58 48 46 38 36 30 28 22 20 8 6 0 12 1 12 12 15
CALL[ ]	/* CallFunction */";
};
width = 507;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(121.434,353.776,o),
(170.253,415,o),
(254,415,cs),
(337.446,415,o),
(381,353.503,o),
(381,311,cs),
(381,305.667,o),
(375.333,303,o),
(364,303,cs),
(111,299,l),
(111,299,l)
);
},
{
closed = 1;
nodes = (
(151.1,239,o),
(208.07,240,o),
(248,240,cs),
(280,240,o),
(310.167,240.167,o),
(338.5,240.5,cs),
(366.833,240.833,o),
(391.333,241,o),
(412,241,cs),
(438.667,241,o),
(454,273.333,o),
(454,304,cs),
(454,357.454,o),
(404.444,477,o),
(257,477,cs),
(121.842,477,o),
(30,383.553,o),
(30,226,cs),
(30,85.149,o),
(103.872,-13,o),
(242,-13,cs),
(409.041,-13,o),
(463,74.835,o),
(463,173,cs),
(463,193,o),
(449,205,o),
(433,205,cs),
(405,205,o),
(399,183.667,o),
(399,173,cs),
(399,125.923,o),
(363.841,51,o),
(258,51,cs),
(160.092,51,o),
(105,135.5,o),
(105,218,cs),
(105,224.667,o),
(105.667,232.333,o),
(107,239,c)
);
},
{
closed = 1;
nodes = (
(375,602,o),
(357,602,o),
(336,601,cs),
(315,600,o),
(291,599,o),
(263,599,cs),
(221,599,o),
(172,601,o),
(142,601,cs),
(123,601,o),
(116,586,o),
(116,571,cs),
(116,556,o),
(127,540,o),
(142,540,cs),
(212,540,o),
(309,541,o),
(383,541,cs),
(406,541,o),
(412,563,o),
(412,574,cs),
(412,589,o),
(402,602,o),
(391,602,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 3 6 2 6 3 2 104 11 1 7 0 8 5 7 8 91 9 1 0 10 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 3 6 2 6 3 2 104 11 1 7 0 8 5 7 8 91 0 5 0 1 0 5 1 91 9 1 0 10 1 6 3 0 6 91 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
65 64 14 14 2 1 76 69 64 88 65 80 14 63 14 55 49 47 39 37 31 29 23 21 9 7 1 13 2 13 12 26
CALL[ ]	/* CallFunction */";
};
width = 491;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356.238,-11,o),
(442,80.726,o),
(442,187,cs),
(442,199,o),
(436.333,205,o),
(425,205,cs),
(413.667,205,o),
(408,199,o),
(408,187,cs),
(408,100.906,o),
(351.468,21,o),
(243,21,cs),
(122.956,21,o),
(79,121.555,o),
(79,218,cs),
(79,230,o),
(79.667,244.333,o),
(81,259,c),
(133.605,259,o),
(203.073,260,o),
(252,260,cs),
(278.667,260,o),
(304.5,260,o),
(329.5,260,cs),
(354.5,260,o),
(375.667,260.333,o),
(393,261,cs),
(417,262.333,o),
(428,282.667,o),
(428,304,cs),
(428,359.427,o),
(373.596,477,o),
(248,477,cs),
(126.071,477,o),
(34,371.67,o),
(34,226,cs),
(34,96.9,o),
(100.019,-11,o),
(245,-11,cs)
);
},
{
closed = 1;
nodes = (
(98.337,363.686,o),
(146.119,445,o),
(245,445,cs),
(343.682,445,o),
(385,364.324,o),
(385,311,cs),
(385,299,o),
(379.333,293,o),
(368,293,cs),
(85,289,l),
(85,289,l),
(85,289,l),
(85,289,l)
);
},
{
closed = 1;
nodes = (
(206.305,510,o),
(303.446,511,o),
(377,511,cs),
(391.667,511,o),
(396,522.333,o),
(396,529,cs),
(396,535.667,o),
(390.333,542,o),
(385,542,cs),
(369,542,o),
(350.667,541.5,o),
(330,540.5,cs),
(309.333,539.5,o),
(285,539,o),
(257,539,cs),
(214.698,539,o),
(166.437,541,o),
(136,541,cs),
(125.333,541,o),
(120,532.667,o),
(120,526,cs),
(120,519.333,o),
(126.667,510,o),
(136,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 3 6 2 6 3 2 104 11 1 7 0 8 5 7 8 91 9 1 0 10 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 3 6 2 6 3 2 104 11 1 7 0 8 5 7 8 91 0 5 0 1 0 5 1 91 9 1 0 10 1 6 3 0 6 91 0 2 2 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
62 61 13 13 1 0 73 66 61 85 62 77 13 60 13 52 46 44 36 34 29 27 22 20 8 6 0 12 1 12 12 15
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = emacron;
unicode = 275;
},
{
glyphname = eogonek;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(126.333,229,o),
(132,229,o),
(142,229,cs),
(152,229,o),
(164.167,229,o),
(178.5,229,cs),
(192.833,229,o),
(208.333,229.167,o),
(225,229.5,cs),
(241.667,229.833,o),
(257.333,230,o),
(272,230,cs),
(286.667,230,o),
(299.333,230,o),
(310,230,cs),
(320.667,230,o),
(327.333,230,o),
(330,230,cs),
(405.052,230,o),
(430.634,231.648,o),
(447,241,cs),
(467,251.667,o),
(474,270.333,o),
(474,297,cs),
(474,355.149,o),
(427.052,478,o),
(264,478,cs),
(122.565,478,o),
(31,383.146,o),
(31,227,cs),
(31,77.667,o),
(115.667,-12.667,o),
(261,-14,c),
(238.333,-28.667,o),
(212,-52.667,o),
(212,-86,cs),
(212,-137.579,o),
(272.091,-161,o),
(322,-161,cs),
(374.345,-161,o),
(405,-131.646,o),
(405,-108,cs),
(405,-96,o),
(393.333,-84,o),
(380,-84,cs),
(360.449,-84,o),
(361.136,-108,o),
(320,-108,cs),
(305.333,-108,o),
(291,-101.667,o),
(291,-87,cs),
(291,-60.333,o),
(305.333,-23.333,o),
(332,-6,c),
(435.117,19.151,o),
(470,97.821,o),
(470,143,cs),
(470,176.333,o),
(454.333,183,o),
(429,183,cs),
(406.333,183,o),
(392,167.333,o),
(384,146,cs),
(369.55,108.431,o),
(340.163,62,o),
(269,62,cs),
(149.495,62,o),
(124,147.183,o),
(124,218,cs),
(124,219.333,o),
(124,221.167,o),
(124,223.5,cs),
(124,225.833,o),
(124.333,227.667,o),
(125,229,c)
);
},
{
closed = 1;
nodes = (
(134.484,347.387,o),
(180.875,403,o),
(262,403,cs),
(342.614,403,o),
(378,351.966,o),
(378,316,cs),
(378,300,o),
(372,292,o),
(360,292,cs),
(126,288,l),
(126,288,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 1 7 0 7 1 0 104 0 3 5 2 5 3 2 104 11 1 8 10 1 7 1 8 7 91 0 2 0 4 2 4 87 0 9 9 6 83 0 6 6 23 67 0 0 0 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 1 7 0 7 1 0 104 0 3 5 2 5 3 2 104 0 6 0 9 8 6 9 91 11 1 8 10 1 7 1 8 7 91 0 2 0 4 2 4 87 0 0 0 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
80 79 0 0 87 85 79 91 80 91 0 78 0 70 38 23 38 35 44 38 39 12 22
CALL[ ]	/* CallFunction */";
};
width = 507;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(121.434,353.776,o),
(170.253,415,o),
(254,415,cs),
(337.446,415,o),
(381,353.503,o),
(381,311,cs),
(381,305.667,o),
(375.333,303,o),
(364,303,cs),
(111,299,l),
(111,299,l)
);
},
{
closed = 1;
nodes = (
(151.1,239,o),
(208.07,240,o),
(248,240,cs),
(280,240,o),
(310.167,240.167,o),
(338.5,240.5,cs),
(366.833,240.833,o),
(391.333,241,o),
(412,241,cs),
(438.667,241,o),
(454,273.333,o),
(454,304,cs),
(454,357.454,o),
(404.444,477,o),
(257,477,cs),
(121.842,477,o),
(30,383.553,o),
(30,226,cs),
(30,85.149,o),
(103.872,-13,o),
(242,-13,cs),
(409.041,-13,o),
(463,74.835,o),
(463,173,cs),
(463,193,o),
(449,205,o),
(433,205,cs),
(405,205,o),
(399,183.667,o),
(399,173,cs),
(399,125.923,o),
(363.841,51,o),
(258,51,cs),
(160.092,51,o),
(105,135.5,o),
(105,218,cs),
(105,224.667,o),
(105.667,232.333,o),
(107,239,c)
);
},
{
closed = 1;
nodes = (
(228,-9,o),
(216,-16,o),
(205,-25,cs),
(186,-40,o),
(169,-61,o),
(169,-92,cs),
(169,-135,o),
(211,-165,o),
(270,-165,cs),
(318,-165,o),
(348,-124,o),
(348,-114,cs),
(348,-103,o),
(342,-92,o),
(327,-92,cs),
(323,-92,o),
(319,-94,o),
(314,-98,cs),
(309,-103,o),
(303,-108,o),
(298,-113,cs),
(292,-119,o),
(281,-122,o),
(264,-122,cs),
(248,-122,o),
(233,-107,o),
(233,-91,cs),
(233,-72,o),
(247,-18,o),
(292,-3,c),
(242,-2,l),
(242,-2,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 3 6 2 6 3 2 104 0 2 10 10 2 94 0 8 4 7 4 8 7 104 11 1 0 12 1 6 3 0 6 91 0 7 0 9 7 9 87 0 1 1 5 83 0 5 5 23 67 13 1 10 10 4 84 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 3 6 2 6 3 2 104 0 2 10 10 2 94 0 8 4 7 4 8 7 104 0 5 0 1 0 5 1 91 11 1 0 12 1 6 3 0 6 91 0 7 0 9 7 9 87 13 1 10 10 4 84 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 3 6 2 6 3 2 104 0 2 10 6 2 10 102 0 8 4 7 4 8 7 104 0 5 0 1 0 5 1 91 11 1 0 12 1 6 3 0 6 91 0 7 0 9 7 9 87 13 1 10 10 4 84 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
64 64 14 14 2 1 64 93 64 93 86 84 78 76 73 71 14 63 14 55 49 47 39 37 31 29 23 21 9 7 1 13 2 13 14 26
CALL[ ]	/* CallFunction */";
};
width = 491;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(301.13,-166,o),
(331,-124.791,o),
(331,-115,cs),
(331,-107,o),
(329,-99,o),
(317,-99,cs),
(297.96,-99,o),
(291.683,-139,o),
(255,-139,cs),
(224.028,-139,o),
(216,-109.466,o),
(216,-92,cs),
(216,-76.566,o),
(225.139,-29.921,o),
(260,-10,c),
(364.281,-1.978,o),
(442,87.394,o),
(442,187,cs),
(442,199,o),
(436.333,205,o),
(425,205,cs),
(413.667,205,o),
(408,199,o),
(408,187,cs),
(408,100.906,o),
(351.468,21,o),
(243,21,cs),
(122.956,21,o),
(79,121.555,o),
(79,218,cs),
(79,230,o),
(79.667,244.333,o),
(81,259,c),
(133.605,259,o),
(203.073,260,o),
(252,260,cs),
(278.667,260,o),
(304.5,260,o),
(329.5,260,cs),
(354.5,260,o),
(375.667,260.333,o),
(393,261,cs),
(417,262.333,o),
(428,282.667,o),
(428,304,cs),
(428,359.427,o),
(373.596,477,o),
(248,477,cs),
(126.071,477,o),
(34,371.67,o),
(34,226,cs),
(34,95.211,o),
(98.847,-2.053,o),
(226,-10,c),
(204.537,-23.414,o),
(172,-49.686,o),
(172,-93,cs),
(172,-135.667,o),
(206.333,-166,o),
(253,-166,cs)
);
},
{
closed = 1;
nodes = (
(98.337,363.686,o),
(146.119,445,o),
(245,445,cs),
(343.682,445,o),
(385,364.324,o),
(385,311,cs),
(385,299,o),
(379.333,293,o),
(368,293,cs),
(85,289,l),
(85,289,l),
(85,289,l),
(85,289,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 1 7 0 7 1 0 104 0 3 5 2 5 3 2 104 11 1 8 10 1 7 1 8 7 91 0 2 0 4 2 4 87 0 9 9 6 83 0 6 6 23 67 0 0 0 5 83 0 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 1 7 0 7 1 0 104 0 3 5 2 5 3 2 104 0 6 0 9 8 6 9 91 11 1 8 10 1 7 1 8 7 91 0 2 0 4 2 4 87 0 0 0 5 83 0 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
80 79 0 0 87 85 79 91 80 91 0 78 0 70 40 23 38 35 47 37 39 12 22
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = eogonek;
unicode = 281;
},
{
glyphname = etilde;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(134.484,347.387,o),
(180.875,403,o),
(262,403,cs),
(342.614,403,o),
(378,351.966,o),
(378,316,cs),
(378,300,o),
(372,292,o),
(360,292,cs),
(126,288,l),
(126,288,l)
);
},
{
closed = 1;
nodes = (
(126.333,229,o),
(132,229,o),
(142,229,cs),
(152,229,o),
(164.167,229,o),
(178.5,229,cs),
(192.833,229,o),
(208.333,229.167,o),
(225,229.5,cs),
(241.667,229.833,o),
(257.333,230,o),
(272,230,cs),
(286.667,230,o),
(299.333,230,o),
(310,230,cs),
(320.667,230,o),
(327.333,230,o),
(330,230,cs),
(405.052,230,o),
(430.634,231.648,o),
(447,241,cs),
(467,251.667,o),
(474,270.333,o),
(474,297,cs),
(474,355.149,o),
(427.052,478,o),
(264,478,cs),
(122.565,478,o),
(31,383.146,o),
(31,227,cs),
(31,72.378,o),
(122.731,-14,o),
(263,-14,cs),
(429.217,-14,o),
(470,101.188,o),
(470,143,cs),
(470,176.333,o),
(454.333,183,o),
(429,183,cs),
(406.333,183,o),
(392,167.333,o),
(384,146,cs),
(369.55,108.431,o),
(340.163,62,o),
(269,62,cs),
(149.495,62,o),
(124,147.183,o),
(124,218,cs),
(124,219.333,o),
(124,221.167,o),
(124,223.5,cs),
(124,225.833,o),
(124.333,227.667,o),
(125,229,c)
);
},
{
closed = 1;
nodes = (
(86,517,o),
(93,501,o),
(105,501,cs),
(125.593,501,o),
(149.709,526,o),
(189,526,cs),
(227.662,526,o),
(270.294,502,o),
(326,502,cs),
(358.676,502,o),
(437,519.584,o),
(437,577,cs),
(437,598.333,o),
(421.667,612,o),
(415,612,cs),
(410.333,612,o),
(400.333,607.667,o),
(385,599,cs),
(366.333,588.333,o),
(343.667,582,o),
(325,582,cs),
(285.599,582,o),
(224.495,610,o),
(188,610,cs),
(163.333,610,o),
(140.667,604,o),
(120,592,cs),
(101.333,581.333,o),
(86,566.333,o),
(86,537,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 3 6 2 6 3 2 104 9 1 7 0 11 10 7 11 91 0 8 12 1 10 5 8 10 91 13 1 0 14 1 6 3 0 6 91 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 3 6 2 6 3 2 104 9 1 7 0 11 10 7 11 91 0 8 12 1 10 5 8 10 91 0 5 0 1 0 5 1 91 13 1 0 14 1 6 3 0 6 91 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
13 13 1 0 101 99 96 94 91 89 83 81 78 76 73 71 13 66 13 58 48 46 38 36 30 28 22 20 8 6 0 12 1 12 15 15
CALL[ ]	/* CallFunction */";
};
width = 507;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(121.434,353.776,o),
(170.253,415,o),
(254,415,cs),
(337.446,415,o),
(381,353.503,o),
(381,311,cs),
(381,305.667,o),
(375.333,303,o),
(364,303,cs),
(111,299,l),
(111,299,l)
);
},
{
closed = 1;
nodes = (
(151.1,239,o),
(208.07,240,o),
(248,240,cs),
(280,240,o),
(310.167,240.167,o),
(338.5,240.5,cs),
(366.833,240.833,o),
(391.333,241,o),
(412,241,cs),
(438.667,241,o),
(454,273.333,o),
(454,304,cs),
(454,357.454,o),
(404.444,477,o),
(257,477,cs),
(121.842,477,o),
(30,383.553,o),
(30,226,cs),
(30,85.149,o),
(103.872,-13,o),
(242,-13,cs),
(409.041,-13,o),
(463,74.835,o),
(463,173,cs),
(463,193,o),
(449,205,o),
(433,205,cs),
(405,205,o),
(399,183.667,o),
(399,173,cs),
(399,125.923,o),
(363.841,51,o),
(258,51,cs),
(160.092,51,o),
(105,135.5,o),
(105,218,cs),
(105,224.667,o),
(105.667,232.333,o),
(107,239,c)
);
},
{
closed = 1;
nodes = (
(86,549,o),
(85,543,o),
(85,537,cs),
(85,522,o),
(91,509,o),
(102,509,cs),
(119,509,o),
(146,534,o),
(186,534,cs),
(225,534,o),
(267,510,o),
(323,510,cs),
(379,510,o),
(412,532,o),
(425,555,cs),
(428,561,o),
(430,567,o),
(430,574,cs),
(430,590,o),
(419,602,o),
(412,602,cs),
(409,602,o),
(405,601,o),
(402,600,cs),
(398,598,o),
(391,594,o),
(382,589,cs),
(359,578,o),
(339,572,o),
(322,572,cs),
(283,572,o),
(221,600,o),
(185,600,cs),
(160,600,o),
(138,594,o),
(117,582,cs),
(107,576,o),
(100,571,o),
(96,566,cs),
(92,561,o),
(89,557,o),
(88,554,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 3 6 2 6 3 2 104 9 1 7 0 11 10 7 11 91 0 8 12 1 10 5 8 10 91 13 1 0 14 1 6 3 0 6 92 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 3 6 2 6 3 2 104 9 1 7 0 11 10 7 11 91 0 8 12 1 10 5 8 10 91 0 5 0 1 0 5 1 91 13 1 0 14 1 6 3 0 6 92 0 2 2 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
14 14 2 1 98 96 93 91 88 86 80 78 75 73 70 68 14 63 14 55 49 47 39 37 31 29 23 21 9 7 1 13 2 13 15 26
CALL[ ]	/* CallFunction */";
};
width = 491;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356.238,-11,o),
(442,80.726,o),
(442,187,cs),
(442,199,o),
(436.333,205,o),
(425,205,cs),
(413.667,205,o),
(408,199,o),
(408,187,cs),
(408,100.906,o),
(351.468,21,o),
(243,21,cs),
(122.956,21,o),
(79,121.555,o),
(79,218,cs),
(79,230,o),
(79.667,244.333,o),
(81,259,c),
(133.605,259,o),
(203.073,260,o),
(252,260,cs),
(278.667,260,o),
(304.5,260,o),
(329.5,260,cs),
(354.5,260,o),
(375.667,260.333,o),
(393,261,cs),
(417,262.333,o),
(428,282.667,o),
(428,304,cs),
(428,359.427,o),
(373.596,477,o),
(248,477,cs),
(126.071,477,o),
(34,371.67,o),
(34,226,cs),
(34,96.9,o),
(100.019,-11,o),
(245,-11,cs)
);
},
{
closed = 1;
nodes = (
(98.337,363.686,o),
(146.119,445,o),
(245,445,cs),
(343.682,445,o),
(385,364.324,o),
(385,311,cs),
(385,299,o),
(379.333,293,o),
(368,293,cs),
(85,289,l),
(85,289,l),
(85,289,l),
(85,289,l)
);
},
{
closed = 1;
nodes = (
(336.863,510,o),
(414,525.886,o),
(414,560,cs),
(414,576,o),
(404.667,583,o),
(394,583,cs),
(374.812,583,o),
(340.573,546,o),
(317,546,cs),
(264.787,546,o),
(213.655,589,o),
(163,589,cs),
(136.042,589,o),
(83,565.962,o),
(83,544,cs),
(83,532,o),
(86,519,o),
(102,519,cs),
(120.699,519,o),
(146.374,554,o),
(168,554,cs),
(212.811,554,o),
(262.216,510,o),
(317,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
0 9 7 11 7 9 11 104 0 12 8 10 8 12 10 104 0 3 6 2 6 3 2 104 0 7 0 11 8 7 11 91 0 8 0 10 5 8 10 91 13 1 0 14 1 6 3 0 6 92 0 1 1 5 83 0 5 5 23 67 0 2 2 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 69 values pushed */
0 9 7 11 7 9 11 104 0 12 8 10 8 12 10 104 0 3 6 2 6 3 2 104 0 7 0 11 8 7 11 91 0 8 0 10 5 8 10 91 0 5 0 1 0 5 1 91 13 1 0 14 1 6 3 0 6 92 0 2 2 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
13 13 1 0 95 93 90 88 85 83 77 75 72 70 67 65 13 60 13 52 46 44 36 34 29 27 22 20 8 6 0 12 1 12 15 15
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = etilde;
unicode = 7869;
},
{
glyphname = schwa;
kernRight = c_p;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(348.882,107.331,o),
(295.797,69,o),
(238,69,cs),
(183.818,69,o),
(125,105.086,o),
(125,133,cs),
(125,143.667,o),
(130.667,149,o),
(142,149,cs),
(365,153,l),
(365,153,l)
);
},
{
closed = 1;
nodes = (
(285.583,231,o),
(220.809,230,o),
(119,230,cs),
(97,230,o),
(80.833,229.667,o),
(70.5,229,cs),
(60.167,228.333,o),
(53,225.667,o),
(49,221,cs),
(34.333,206.333,o),
(31,194.667,o),
(31,164,cs),
(31,110.409,o),
(67.71,-11,o),
(242,-11,cs),
(397.998,-11,o),
(476,90.415,o),
(476,240,cs),
(476,373.261,o),
(409.806,477,o),
(245,477,cs),
(98.365,477,o),
(23,400.93,o),
(23,337,cs),
(23,313,o),
(29,292,o),
(65,292,cs),
(98.333,292,o),
(105.333,312.667,o),
(108,326,cs),
(110.709,342.257,o),
(134.795,397,o),
(224,397,cs),
(334.469,397,o),
(380,335.7,o),
(380,272,cs),
(380,260,o),
(379.333,245.667,o),
(378,231,c)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 2 6 2 3 6 104 8 1 6 7 1 0 1 6 0 91 0 2 2 4 83 0 4 4 23 67 0 1 1 5 83 0 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 2 6 2 3 6 104 0 4 0 2 3 4 2 91 8 1 6 7 1 0 1 6 0 91 0 1 1 5 83 0 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
13 13 1 0 13 62 13 56 48 46 38 36 30 28 22 20 8 6 0 12 1 12 9 15
CALL[ ]	/* CallFunction */";
};
width = 503;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(354.97,105.895,o),
(304.129,51,o),
(230,51,cs),
(158.402,51,o),
(106,102.774,o),
(106,141,cs),
(106,152.333,o),
(111.667,158,o),
(123,158,cs),
(371,162,l),
(371,162,l)
);
},
{
closed = 1;
nodes = (
(336.364,222,o),
(254.738,221,o),
(157,221,cs),
(154.858,221,o),
(125.191,220,o),
(68,220,cs),
(44,218.667,o),
(33,189.667,o),
(33,163,cs),
(33,103.382,o),
(81.728,-11,o),
(231,-11,cs),
(372.064,-11,o),
(457,91.841,o),
(457,240,cs),
(457,372.488,o),
(390.518,477,o),
(234,477,cs),
(102.257,477,o),
(25,401.61,o),
(25,333,cs),
(25,314.333,o),
(30.333,298,o),
(57,298,cs),
(82.333,298,o),
(86.333,312.667,o),
(89,326,cs),
(100.368,377.154,o),
(127.395,415,o),
(215,415,cs),
(337.752,415,o),
(382,339.395,o),
(382,263,cs),
(382,251,o),
(381.333,236.667,o),
(380,222,c)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 2 6 2 3 6 104 8 1 6 7 1 0 1 6 0 91 0 2 2 4 83 0 4 4 23 67 0 1 1 5 83 0 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 2 6 2 3 6 104 0 4 0 2 3 4 2 91 8 1 6 7 1 0 1 6 0 91 0 1 1 5 83 0 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
13 13 1 0 13 64 13 54 48 46 38 36 30 28 22 20 8 6 0 12 1 12 9 15
CALL[ ]	/* CallFunction */";
};
width = 487;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(335.811,-11,o),
(430,91.636,o),
(430,240,cs),
(430,373.947,o),
(359.555,477,o),
(219,477,cs),
(122.734,477,o),
(28,415.427,o),
(28,326,cs),
(28,314,o),
(33.667,308,o),
(45,308,cs),
(56.333,308,o),
(62,314,o),
(62,326,cs),
(62,390.831,o),
(131.796,445,o),
(221,445,cs),
(339.095,445,o),
(385,343.269,o),
(385,248,cs),
(385,236,o),
(384.333,221.667,o),
(383,207,c),
(330.395,207,o),
(260.927,206,o),
(212,206,cs),
(185.333,206,o),
(159.5,206,o),
(134.5,206,cs),
(109.5,206,o),
(88.333,205.667,o),
(71,205,cs),
(47,203.667,o),
(36,183.333,o),
(36,162,cs),
(36,106.573,o),
(90.404,-11,o),
(216,-11,cs)
);
},
{
closed = 1;
nodes = (
(120.318,21,o),
(79,101.676,o),
(79,155,cs),
(79,167,o),
(84.667,173,o),
(96,173,cs),
(379,177,l),
(365.635,102.157,o),
(317.567,21,o),
(219,21,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 2 6 2 3 6 104 8 1 6 7 1 0 1 6 0 91 0 2 2 4 83 0 4 4 23 67 0 1 1 5 83 0 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 2 6 2 3 6 104 0 4 0 2 3 4 2 91 8 1 6 7 1 0 1 6 0 91 0 1 1 5 83 0 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
13 13 1 0 13 60 13 52 46 44 36 34 29 27 22 20 8 6 0 12 1 12 9 15
CALL[ ]	/* CallFunction */";
};
width = 464;
}
);
note = schwa;
unicode = 601;
},
{
glyphname = f;
kernLeft = f;
kernRight = f;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(78.333,74.333,o),
(75.333,74.667,o),
(58,72,c),
(43.753,72,o),
(9,64.124,o),
(9,33,cs),
(9,1.523,o),
(39.588,0,o),
(60,0,cs),
(60.157,0,o),
(121.957,3,o),
(164,3,cs),
(199.813,3,o),
(242.842,1,o),
(273,1,cs),
(311.667,1,o),
(333,7.667,o),
(333,41,cs),
(333,78.653,o),
(305.478,78,o),
(287,78,cs),
(178,78,l),
(178,392,ls),
(178,395.333,o),
(179,398,o),
(181,400,cs),
(183,402,o),
(188,403,o),
(196,403,cs),
(211.161,403,o),
(235.403,401,o),
(262,401,cs),
(276.493,401,o),
(308,402.258,o),
(308,441,cs),
(308,479.667,o),
(277.333,479,o),
(264,479,cs),
(186,479,ls),
(180.667,479,o),
(178,480.667,o),
(178,484,cs),
(178,525.045,o),
(177.586,583.329,o),
(195.5,645.5,cs),
(212.999,706.231,o),
(252.211,751,o),
(321,751,cs),
(334.333,751,o),
(345,749.5,o),
(353,746.5,cs),
(361,743.5,o),
(365,740,o),
(365,736,cs),
(365,729.333,o),
(356.667,722.667,o),
(350,716,cs),
(336.667,701.333,o),
(335,685,o),
(335,677,cs),
(335,650.333,o),
(358,627,o),
(390,627,cs),
(431.333,627,o),
(456,664.667,o),
(456,714,cs),
(456,762.508,o),
(430.216,825,o),
(320,825,cs),
(205.898,825,o),
(147.4,756.741,o),
(121,692.5,cs),
(89.372,615.539,o),
(86.088,539.028,o),
(84,491,cs),
(84,484.333,o),
(82.667,479,o),
(72,479,cs),
(59,479,ls),
(36.333,479,o),
(10,477.667,o),
(10,443,cs),
(10,409.667,o),
(33.333,403,o),
(56,403,cs),
(72,403,ls),
(77.333,403,o),
(80.833,402.667,o),
(82.5,402,cs),
(84.167,401.333,o),
(85,400,o),
(85,398,cs),
(85,276,o),
(87,215,o),
(87,215,c),
(87,182.186,o),
(84.311,126.105,o),
(81,93,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 7 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 3 4 1 4 3 1 104 0 4 4 2 83 0 2 2 12 67 6 1 0 0 1 83 5 1 1 1 23 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 3 4 1 4 3 1 104 5 1 1 6 1 0 7 1 0 91 0 4 4 2 83 0 2 2 12 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 3 4 1 4 3 1 104 0 9 7 8 7 9 96 5 1 1 6 1 0 7 1 0 91 0 4 4 2 83 0 2 2 14 67 0 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
109 108 213 51 134 71 42 38 40 52 60 10 24
CALL[ ]	/* CallFunction */";
};
width = 333;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(93.333,67.667,o),
(89.833,62.667,o),
(83.5,60,cs),
(77.167,57.333,o),
(66,55.333,o),
(50,54,cs),
(35.154,54,o),
(8,47.499,o),
(8,26,cs),
(8,0.861,o),
(33.613,0,o),
(52,0,cs),
(52.157,0,o),
(113.957,3,o),
(156,3,cs),
(191.123,3,o),
(234.061,1,o),
(266,1,cs),
(300.667,1,o),
(318,7.333,o),
(318,30,cs),
(318,58,o),
(299,60,o),
(279,60,cs),
(170,60,l),
(170,404,ls),
(170,407.333,o),
(171,410,o),
(173,412,cs),
(175,414,o),
(180,415,o),
(188,415,cs),
(203.161,415,o),
(227.403,413,o),
(254,413,cs),
(270.644,413,o),
(293,414.261,o),
(293,445,cs),
(293,470.333,o),
(269.333,473,o),
(256,473,cs),
(178,473,ls),
(172.667,473,o),
(170,476.667,o),
(170,484,cs),
(170,535.413,o),
(169.453,595.258,o),
(189,661.5,cs),
(207.619,724.599,o),
(249.786,769,o),
(323,769,cs),
(339.667,769,o),
(353,765.5,o),
(363,758.5,cs),
(373,751.5,o),
(378,746,o),
(378,742,cs),
(378,737.333,o),
(376.5,733.667,o),
(373.5,731,cs),
(370.5,728.333,o),
(367,725,o),
(363,721,cs),
(352.333,711.667,o),
(348,696.667,o),
(348,686,cs),
(348,664.667,o),
(364,642,o),
(396,642,cs),
(420,642,o),
(450,662,o),
(450,718,cs),
(450,756.669,o),
(421.378,825,o),
(323,825,cs),
(212.538,825,o),
(157.576,759.257,o),
(132.5,697,cs),
(102.028,621.344,o),
(99.024,543.623,o),
(97,491,cs),
(97,481.667,o),
(95.667,473,o),
(85,473,cs),
(51,473,ls),
(27,473,o),
(9,471.667,o),
(9,445,cs),
(9,422.333,o),
(25.333,415,o),
(48,415,cs),
(85,415,ls),
(90.333,415,o),
(93.833,414.5,o),
(95.5,413.5,cs),
(97.167,412.5,o),
(98,411,o),
(98,409,cs),
(98,377,o),
(98.333,345,o),
(99,313,cs),
(99.667,281,o),
(100,249,o),
(100,217,cs),
(100,169,o),
(98,121.667,o),
(94,75,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 3 4 1 4 3 1 104 0 4 4 2 83 0 2 2 12 67 6 1 0 0 1 83 5 1 1 1 23 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 3 4 1 4 3 1 104 5 1 1 6 1 0 7 1 0 91 0 4 4 2 83 0 2 2 12 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 3 4 1 4 3 1 104 0 9 7 8 7 9 96 5 1 1 6 1 0 7 1 0 91 0 4 4 2 83 0 2 2 12 67 0 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 3 4 1 4 3 1 104 0 9 7 8 7 9 96 5 1 1 6 1 0 7 1 0 91 0 4 4 2 83 0 2 2 14 67 0 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
100 99 212 35 118 55 42 38 40 52 55 10 24
CALL[ ]	/* CallFunction */";
};
width = 318;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(41.157,0,o),
(102.957,3,o),
(145,3,cs),
(180.123,3,o),
(223.061,1,o),
(255,1,cs),
(272.333,1,o),
(283.667,2.167,o),
(289,4.5,cs),
(294.333,6.833,o),
(297,10.333,o),
(297,15,cs),
(297,25,o),
(287.333,30,o),
(268,30,cs),
(159,30,l),
(159,424,ls),
(159,427.333,o),
(160,430,o),
(162,432,cs),
(164,434,o),
(169,435,o),
(177,435,cs),
(192.161,435,o),
(216.403,433,o),
(243,433,cs),
(257.667,433,o),
(272,436.333,o),
(272,447,cs),
(272,457.667,o),
(258.333,463,o),
(245,463,cs),
(167,463,ls),
(164.333,463,o),
(162.333,464.333,o),
(161,467,cs),
(159.667,469.667,o),
(159,475.333,o),
(159,484,cs),
(159,539.068,o),
(158.216,608.972,o),
(178.5,680.5,cs),
(198.123,749.696,o),
(240.098,799,o),
(317,799,cs),
(375.667,799,o),
(397,771.333,o),
(397,750,cs),
(397,740.667,o),
(392.667,737,o),
(382,729,cs),
(372,721.667,o),
(367,712.667,o),
(367,702,cs),
(367,679.333,o),
(381.333,667,o),
(400,667,cs),
(424,667,o),
(439,688.667,o),
(439,718,cs),
(439,756.669,o),
(410.378,825,o),
(312,825,cs),
(224.566,825,o),
(173.321,771.365,o),
(147.5,697,cs),
(121.639,622.521,o),
(117.94,541.436,o),
(116,491,cs),
(116,476.333,o),
(114.667,463,o),
(104,463,cs),
(40,463,ls),
(28,463,o),
(19.667,462.5,o),
(15,461.5,cs),
(10.333,460.5,o),
(8,457.333,o),
(8,452,cs),
(8,448,o),
(10,444.167,o),
(14,440.5,cs),
(18,436.833,o),
(25.667,435,o),
(37,435,cs),
(104,435,ls),
(114.667,435,o),
(117,427.667,o),
(117,409,cs),
(117,377,o),
(117.333,345,o),
(118,313,cs),
(118.667,281,o),
(119,249,o),
(119,217,cs),
(119,159,o),
(117,101.667,o),
(113,45,cs),
(112.333,37.667,o),
(106.5,32.833,o),
(95.5,30.5,cs),
(84.5,28.167,o),
(65.667,26,o),
(39,24,cs),
(24.333,22.667,o),
(7,21.667,o),
(7,11,cs),
(7,5.667,o),
(10.333,2.5,o),
(17,1.5,cs),
(23.667,0.5,o),
(31.667,0,o),
(41,0,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 7 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 4 1 4 3 1 104 0 4 4 2 83 0 2 2 12 67 6 1 0 0 1 83 5 1 1 1 23 67 0 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 4 1 4 3 1 104 5 1 1 6 1 0 7 1 0 91 0 4 4 2 83 0 2 2 12 67 0 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 3 4 1 4 3 1 104 5 1 1 6 1 0 7 1 0 91 0 4 4 2 83 0 2 2 14 67 0 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
195 35 116 56 41 38 40 52 55 9 24
CALL[ ]	/* CallFunction */";
};
width = 297;
}
);
note = f;
unicode = 102;
},
{
glyphname = g;
kernLeft = g;
kernRight = g;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(117.179,460,o),
(53,389.827,o),
(53,295,cs),
(53,243,o),
(73.333,193,o),
(116,165,c),
(74.667,146.333,o),
(54,127.667,o),
(54,89,cs),
(54,37,o),
(90,16.333,o),
(142,7,c),
(64.667,-7.667,o),
(29,-49,o),
(29,-109,cs),
(29,-203.795,o),
(123.796,-250,o),
(281,-250,cs),
(442.33,-250,o),
(569,-192.094,o),
(569,-76,cs),
(569,-4.536,o),
(520.775,35.116,o),
(456.5,54.5,cs),
(391.935,73.972,o),
(324.179,75,o),
(280,75,cs),
(233.333,75.667,o),
(199.5,78.167,o),
(178.5,82.5,cs),
(157.5,86.833,o),
(147,92.667,o),
(147,100,cs),
(147,110.667,o),
(171.667,131,o),
(197,139,c),
(211.667,136.333,o),
(217.667,136,o),
(231,136,cs),
(368.333,136,o),
(444,201,o),
(444,301,cs),
(444,354.333,o),
(421.333,401.667,o),
(372,431,c),
(405.531,450.56,o),
(445.064,449.355,o),
(462,455,cs),
(472.667,457.667,o),
(480,464.333,o),
(480,483,cs),
(480,516.333,o),
(457,528,o),
(433,528,cs),
(391.667,528,o),
(344.667,494.333,o),
(314,453,c),
(295.333,457,o),
(274,460,o),
(250,460,cs)
);
},
{
closed = 1;
nodes = (
(391.45,-3,o),
(475,-24.84,o),
(475,-91,cs),
(475,-150.17,o),
(397.646,-175,o),
(301,-175,cs),
(221.621,-175,o),
(120,-156.246,o),
(120,-100,cs),
(120,-43.189,o),
(221.207,-3,o),
(305,-3,cs)
);
},
{
closed = 1;
nodes = (
(319.333,386,o),
(350,347.667,o),
(350,301,cs),
(350,250.333,o),
(313,209,o),
(249,209,cs),
(186.267,209,o),
(147,252.211,o),
(147,296,cs),
(147,350.667,o),
(183.333,386,o),
(250,386,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
17 3 2 7 0 58 26 2 2 8 52 1 5 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 106 0 8 0 2 3 8 2 91 11 1 7 7 0 83 9 1 0 0 23 67 0 3 3 5 83 10 1 5 5 16 67 0 6 6 4 83 0 4 4 25 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 1 106 9 1 0 11 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 83 10 1 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
87 86 67 66 1 0 95 93 86 99 87 99 77 75 66 85 67 85 45 43 34 31 24 22 7 5 0 65 1 65 12 15
CALL[ ]	/* CallFunction */";
};
width = 515;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(127.199,460,o),
(58,386.98,o),
(58,294,cs),
(58,243.333,o),
(78.333,193,o),
(121,165,c),
(79.667,146.333,o),
(59,127.667,o),
(59,89,cs),
(59,37,o),
(95,16.333,o),
(147,7,c),
(69.667,-8.333,o),
(31,-44.667,o),
(31,-102,cs),
(31,-201.668,o),
(142.293,-250,o),
(273,-250,cs),
(355.667,-250,o),
(425.667,-233.833,o),
(475,-206.5,cs),
(524.333,-179.167,o),
(553,-139,o),
(553,-91,cs),
(553,45.696,o),
(400.657,57,o),
(285,57,cs),
(233,57.667,o),
(194.333,60.833,o),
(169,66.5,cs),
(143.667,72.167,o),
(131,81.667,o),
(131,95,cs),
(131,119,o),
(151.667,132.333,o),
(181,143,c),
(198.333,137.667,o),
(212.333,137,o),
(231,137,cs),
(358.967,137,o),
(428,209.652,o),
(428,301,cs),
(428,353,o),
(405.667,399.667,o),
(359,429,c),
(385.667,455.667,o),
(419.667,466.333,o),
(449,469,cs),
(463.667,471.667,o),
(473,483.333,o),
(473,498,cs),
(473,520.667,o),
(452.333,530,o),
(435,530,cs),
(396.02,530,o),
(348.989,492.985,o),
(316,449,c),
(292.667,456.333,o),
(267.333,460,o),
(240,460,cs)
);
},
{
closed = 1;
nodes = (
(315.359,-1,o),
(352.721,-1.924,o),
(397,-14,cs),
(442.329,-26.362,o),
(480,-52.398,o),
(480,-99,cs),
(480,-124.333,o),
(463.833,-145.667,o),
(431.5,-163,cs),
(399.167,-180.333,o),
(352,-189,o),
(290,-189,cs),
(203.631,-189,o),
(104,-162.648,o),
(104,-106,cs),
(104,-32.658,o),
(214.039,-1,o),
(299,-1,cs)
);
},
{
closed = 1;
nodes = (
(315,400,o),
(355,361,o),
(355,301,cs),
(355,238.333,o),
(312,197,o),
(240,197,cs),
(170.667,197,o),
(131,240,o),
(131,292,cs),
(131,356,o),
(175,400,o),
(247,400,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
16 2 2 7 0 56 27 2 2 8 50 1 5 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 106 0 8 0 2 3 8 2 91 11 1 7 7 0 83 9 1 0 0 23 67 0 3 3 5 83 10 1 5 5 16 67 0 6 6 4 83 0 4 4 25 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 9 1 0 11 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 3 3 5 83 10 1 5 5 16 67 0 6 6 4 83 0 4 4 25 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 1 106 9 1 0 11 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 83 10 1 5 5 16 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
85 84 65 64 1 0 91 89 84 95 85 95 75 73 64 83 65 82 44 42 34 32 25 23 8 6 0 63 1 63 12 15
CALL[ ]	/* CallFunction */";
};
width = 495;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(424.405,-250,o),
(530,-188.092,o),
(530,-91,cs),
(530,19.819,o),
(393.07,24.34,o),
(292,27,cs),
(174.843,29.493,o),
(108,31.986,o),
(108,95,cs),
(108,125.667,o),
(123.333,135.333,o),
(158,150,c),
(180.667,140.667,o),
(205.667,137,o),
(231,137,cs),
(341.825,137,o),
(405,218.289,o),
(405,301,cs),
(405,349,o),
(381,392.667,o),
(345,422,c),
(370.333,460.667,o),
(399,476.667,o),
(431,486,cs),
(449.667,492.667,o),
(464,501.333,o),
(464,512,cs),
(464,522.667,o),
(455.333,530,o),
(442,530,cs),
(400.753,530,o),
(345.759,486.423,o),
(318,441,c),
(294.667,453.667,o),
(271,460,o),
(247,460,cs),
(134.199,460,o),
(65,386.98,o),
(65,294,cs),
(65,243.333,o),
(85.333,193,o),
(128,165,c),
(86.667,146.333,o),
(66,127.667,o),
(66,89,cs),
(66,37,o),
(102,16.333,o),
(154,7,c),
(76.667,-8.333,o),
(38,-44.667,o),
(38,-102,cs),
(38,-201.668,o),
(149.293,-250,o),
(280,-250,cs)
);
},
{
closed = 1;
nodes = (
(184.27,-219,o),
(81,-182.744,o),
(81,-106,cs),
(81,-31.14,o),
(181.608,-1,o),
(297,-1,cs),
(331.839,-1,o),
(487,-5.76,o),
(487,-99,cs),
(487,-168.498,o),
(402.633,-219,o),
(285,-219,cs)
);
},
{
closed = 1;
nodes = (
(151.333,167,o),
(108,212,o),
(108,292,cs),
(108,376,o),
(157.667,430,o),
(239,430,cs),
(317.667,430,o),
(362,381,o),
(362,301,cs),
(362,217,o),
(311.333,167,o),
(230,167,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
2 1 7 0 16 1 8 7 58 27 2 2 8 52 1 5 3 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 11 1 7 7 0 83 9 1 0 0 23 67 0 3 3 5 83 10 1 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 1 106 9 1 0 11 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 83 10 1 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
87 86 67 66 1 0 93 91 86 97 87 97 77 75 66 85 67 84 46 44 36 33 25 23 8 6 0 65 1 65 12 15
CALL[ ]	/* CallFunction */";
};
width = 467;
}
);
note = g;
unicode = 103;
},
{
glyphname = gbreve;
kernLeft = g;
kernRight = g;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(117.179,460,o),
(53,389.827,o),
(53,295,cs),
(53,243,o),
(73.333,193,o),
(116,165,c),
(74.667,146.333,o),
(54,127.667,o),
(54,89,cs),
(54,37,o),
(90,16.333,o),
(142,7,c),
(64.667,-7.667,o),
(29,-49,o),
(29,-109,cs),
(29,-203.795,o),
(123.796,-250,o),
(281,-250,cs),
(442.33,-250,o),
(569,-192.094,o),
(569,-76,cs),
(569,-4.536,o),
(520.775,35.116,o),
(456.5,54.5,cs),
(391.935,73.972,o),
(324.179,75,o),
(280,75,cs),
(233.333,75.667,o),
(199.5,78.167,o),
(178.5,82.5,cs),
(157.5,86.833,o),
(147,92.667,o),
(147,100,cs),
(147,110.667,o),
(171.667,131,o),
(197,139,c),
(211.667,136.333,o),
(217.667,136,o),
(231,136,cs),
(368.333,136,o),
(444,201,o),
(444,301,cs),
(444,354.333,o),
(421.333,401.667,o),
(372,431,c),
(405.531,450.56,o),
(445.064,449.355,o),
(462,455,cs),
(472.667,457.667,o),
(480,464.333,o),
(480,483,cs),
(480,516.333,o),
(457,528,o),
(433,528,cs),
(391.667,528,o),
(344.667,494.333,o),
(314,453,c),
(295.333,457,o),
(274,460,o),
(250,460,cs)
);
},
{
closed = 1;
nodes = (
(391.45,-3,o),
(475,-24.84,o),
(475,-91,cs),
(475,-150.17,o),
(397.646,-175,o),
(301,-175,cs),
(221.621,-175,o),
(120,-156.246,o),
(120,-100,cs),
(120,-43.189,o),
(221.207,-3,o),
(305,-3,cs)
);
},
{
closed = 1;
nodes = (
(319.333,386,o),
(350,347.667,o),
(350,301,cs),
(350,250.333,o),
(313,209,o),
(249,209,cs),
(186.267,209,o),
(147,252.211,o),
(147,296,cs),
(147,350.667,o),
(183.333,386,o),
(250,386,cs)
);
},
{
closed = 1;
nodes = (
(381,615.667,o),
(363,619,o),
(343,619,cs),
(325.667,619,o),
(311,604.667,o),
(311,590,cs),
(311,584.667,o),
(306.5,579.5,o),
(297.5,574.5,cs),
(288.5,569.5,o),
(274.333,567,o),
(255,567,cs),
(224.535,567,o),
(196,574.638,o),
(196,590,cs),
(196,612.667,o),
(182.667,619,o),
(160,619,cs),
(137.333,619,o),
(128,606.333,o),
(128,589,cs),
(128,546.333,o),
(173.333,510,o),
(260,510,cs),
(311.962,510,o),
(381,536.821,o),
(381,589,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
17 3 2 7 0 58 26 2 2 8 52 1 5 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
12 1 10 11 10 106 0 1 11 9 11 1 9 104 0 11 0 9 0 11 9 91 0 8 0 2 3 8 2 91 15 1 7 7 0 83 13 1 0 0 23 67 0 3 3 5 84 14 1 5 5 16 67 0 6 6 4 83 0 4 4 25 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
12 1 10 11 10 106 0 1 11 9 11 1 9 104 0 11 0 9 0 11 9 91 13 1 0 15 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 84 14 1 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
87 86 67 66 1 0 126 124 120 118 112 110 106 104 95 93 86 99 87 99 77 75 66 85 67 85 45 43 34 31 24 22 7 5 0 65 1 65 16 15
CALL[ ]	/* CallFunction */";
};
width = 515;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(127.199,460,o),
(58,386.98,o),
(58,294,cs),
(58,243.333,o),
(78.333,193,o),
(121,165,c),
(79.667,146.333,o),
(59,127.667,o),
(59,89,cs),
(59,37,o),
(95,16.333,o),
(147,7,c),
(69.667,-8.333,o),
(31,-44.667,o),
(31,-102,cs),
(31,-201.668,o),
(142.293,-250,o),
(273,-250,cs),
(355.667,-250,o),
(425.667,-233.833,o),
(475,-206.5,cs),
(524.333,-179.167,o),
(553,-139,o),
(553,-91,cs),
(553,45.696,o),
(400.657,57,o),
(285,57,cs),
(233,57.667,o),
(194.333,60.833,o),
(169,66.5,cs),
(143.667,72.167,o),
(131,81.667,o),
(131,95,cs),
(131,119,o),
(151.667,132.333,o),
(181,143,c),
(198.333,137.667,o),
(212.333,137,o),
(231,137,cs),
(358.967,137,o),
(428,209.652,o),
(428,301,cs),
(428,353,o),
(405.667,399.667,o),
(359,429,c),
(385.667,455.667,o),
(419.667,466.333,o),
(449,469,cs),
(463.667,471.667,o),
(473,483.333,o),
(473,498,cs),
(473,520.667,o),
(452.333,530,o),
(435,530,cs),
(396.02,530,o),
(348.989,492.985,o),
(316,449,c),
(292.667,456.333,o),
(267.333,460,o),
(240,460,cs)
);
},
{
closed = 1;
nodes = (
(315.359,-1,o),
(352.721,-1.924,o),
(397,-14,cs),
(442.329,-26.362,o),
(480,-52.398,o),
(480,-99,cs),
(480,-124.333,o),
(463.833,-145.667,o),
(431.5,-163,cs),
(399.167,-180.333,o),
(352,-189,o),
(290,-189,cs),
(203.631,-189,o),
(104,-162.648,o),
(104,-106,cs),
(104,-32.658,o),
(214.039,-1,o),
(299,-1,cs)
);
},
{
closed = 1;
nodes = (
(315,400,o),
(355,361,o),
(355,301,cs),
(355,238.333,o),
(312,197,o),
(240,197,cs),
(170.667,197,o),
(131,240,o),
(131,292,cs),
(131,356,o),
(175,400,o),
(247,400,cs)
);
},
{
closed = 1;
nodes = (
(364,616,o),
(347,617,o),
(334,617,cs),
(319,617,o),
(308,605,o),
(308,590,cs),
(308,573,o),
(283,555,o),
(244,555,cs),
(214,555,o),
(179,564,o),
(179,590,cs),
(179,610,o),
(170,617,o),
(151,617,cs),
(134,617,o),
(125,608,o),
(125,589,cs),
(125,548,o),
(171,510,o),
(247,510,cs),
(298,510,o),
(364,537,o),
(364,589,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
17 3 2 7 0 57 28 2 2 8 51 1 5 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
12 1 10 11 10 106 0 1 11 9 11 1 9 104 0 11 0 9 0 11 9 91 0 8 0 2 3 8 2 91 15 1 7 7 0 83 13 1 0 0 23 67 0 3 3 5 84 14 1 5 5 16 67 0 6 6 4 83 0 4 4 25 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
12 1 10 11 10 106 0 1 11 9 11 1 9 104 0 11 0 9 0 11 9 91 13 1 0 15 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 3 3 5 84 14 1 5 5 16 67 0 6 6 4 83 0 4 4 25 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
12 1 10 11 10 106 0 1 11 9 11 1 9 104 0 11 0 9 0 11 9 91 13 1 0 15 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 84 14 1 5 5 16 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
86 85 66 65 2 1 122 120 116 114 108 106 103 101 92 90 85 96 86 96 76 74 65 84 66 83 45 43 35 33 26 24 9 7 1 64 2 64 16 26
CALL[ ]	/* CallFunction */";
};
width = 495;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(424.405,-250,o),
(530,-188.092,o),
(530,-91,cs),
(530,19.819,o),
(393.07,24.34,o),
(292,27,cs),
(174.843,29.493,o),
(108,31.986,o),
(108,95,cs),
(108,125.667,o),
(123.333,135.333,o),
(158,150,c),
(180.667,140.667,o),
(205.667,137,o),
(231,137,cs),
(341.825,137,o),
(405,218.289,o),
(405,301,cs),
(405,349,o),
(381,392.667,o),
(345,422,c),
(370.333,460.667,o),
(399,476.667,o),
(431,486,cs),
(449.667,492.667,o),
(464,501.333,o),
(464,512,cs),
(464,522.667,o),
(455.333,530,o),
(442,530,cs),
(400.753,530,o),
(345.759,486.423,o),
(318,441,c),
(294.667,453.667,o),
(271,460,o),
(247,460,cs),
(134.199,460,o),
(65,386.98,o),
(65,294,cs),
(65,243.333,o),
(85.333,193,o),
(128,165,c),
(86.667,146.333,o),
(66,127.667,o),
(66,89,cs),
(66,37,o),
(102,16.333,o),
(154,7,c),
(76.667,-8.333,o),
(38,-44.667,o),
(38,-102,cs),
(38,-201.668,o),
(149.293,-250,o),
(280,-250,cs)
);
},
{
closed = 1;
nodes = (
(184.27,-219,o),
(81,-182.744,o),
(81,-106,cs),
(81,-31.14,o),
(181.608,-1,o),
(297,-1,cs),
(331.839,-1,o),
(487,-5.76,o),
(487,-99,cs),
(487,-168.498,o),
(402.633,-219,o),
(285,-219,cs)
);
},
{
closed = 1;
nodes = (
(151.333,167,o),
(108,212,o),
(108,292,cs),
(108,376,o),
(157.667,430,o),
(239,430,cs),
(317.667,430,o),
(362,381,o),
(362,301,cs),
(362,217,o),
(311.333,167,o),
(230,167,cs)
);
},
{
closed = 1;
nodes = (
(282.372,510,o),
(340,540.865,o),
(340,589,cs),
(340,610.333,o),
(331.667,613,o),
(321,613,cs),
(309.667,613,o),
(304,605.333,o),
(304,590,cs),
(304,562.695,o),
(264.603,535,o),
(229,535,cs),
(190.333,535,o),
(155,548.667,o),
(155,590,cs),
(155,606,o),
(152.667,613,o),
(138,613,cs),
(126.667,613,o),
(121,605,o),
(121,589,cs),
(121,547.83,o),
(171.193,510,o),
(229,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
2 1 7 0 16 1 8 7 58 27 2 2 8 52 1 5 3 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
12 1 10 1 10 106 11 1 1 0 9 0 1 9 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 15 1 7 7 0 83 13 1 0 0 23 67 0 3 3 5 84 14 1 5 5 16 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
12 1 10 1 10 106 11 1 1 0 9 0 1 9 91 13 1 0 15 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 84 14 1 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
12 1 10 11 10 106 0 1 11 9 11 1 9 104 0 11 0 9 0 11 9 91 13 1 0 15 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 84 14 1 5 5 16 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
87 86 67 66 1 0 124 122 117 115 111 109 104 102 93 91 86 97 87 97 77 75 66 85 67 84 46 44 36 33 25 23 8 6 0 65 1 65 16 15
CALL[ ]	/* CallFunction */";
};
width = 467;
}
);
note = gbreve;
unicode = 287;
},
{
glyphname = gcircumflex;
kernLeft = g;
kernRight = g;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(355.667,514,o),
(359,521.667,o),
(359,531,cs),
(359,567.312,o),
(285.41,642,o),
(262,642,cs),
(248.396,642,o),
(129,558.721,o),
(129,502,cs),
(129,492.667,o),
(133.667,488,o),
(143,488,cs),
(156.557,488,o),
(189.816,511.785,o),
(262,550,c),
(285.333,538,o),
(304.167,529,o),
(318.5,523,cs),
(332.833,517,o),
(341.667,514,o),
(345,514,cs)
);
},
{
closed = 1;
nodes = (
(117.179,460,o),
(53,389.827,o),
(53,295,cs),
(53,243,o),
(73.333,193,o),
(116,165,c),
(74.667,146.333,o),
(54,127.667,o),
(54,89,cs),
(54,37,o),
(90,16.333,o),
(142,7,c),
(64.667,-7.667,o),
(29,-49,o),
(29,-109,cs),
(29,-203.795,o),
(123.796,-250,o),
(281,-250,cs),
(442.33,-250,o),
(569,-192.094,o),
(569,-76,cs),
(569,-4.536,o),
(520.775,35.116,o),
(456.5,54.5,cs),
(391.935,73.972,o),
(324.179,75,o),
(280,75,cs),
(233.333,75.667,o),
(199.5,78.167,o),
(178.5,82.5,cs),
(157.5,86.833,o),
(147,92.667,o),
(147,100,cs),
(147,110.667,o),
(171.667,131,o),
(197,139,c),
(211.667,136.333,o),
(217.667,136,o),
(231,136,cs),
(368.333,136,o),
(444,201,o),
(444,301,cs),
(444,354.333,o),
(421.333,401.667,o),
(372,431,c),
(405.531,450.56,o),
(445.064,449.355,o),
(462,455,cs),
(472.667,457.667,o),
(480,464.333,o),
(480,483,cs),
(480,516.333,o),
(457,528,o),
(433,528,cs),
(391.667,528,o),
(344.667,494.333,o),
(314,453,c),
(295.333,457,o),
(274,460,o),
(250,460,cs)
);
},
{
closed = 1;
nodes = (
(391.45,-3,o),
(475,-24.84,o),
(475,-91,cs),
(475,-150.17,o),
(397.646,-175,o),
(301,-175,cs),
(221.621,-175,o),
(120,-156.246,o),
(120,-100,cs),
(120,-43.189,o),
(221.207,-3,o),
(305,-3,cs)
);
},
{
closed = 1;
nodes = (
(319.333,386,o),
(350,347.667,o),
(350,301,cs),
(350,250.333,o),
(313,209,o),
(249,209,cs),
(186.267,209,o),
(147,252.211,o),
(147,296,cs),
(147,350.667,o),
(183.333,386,o),
(250,386,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
3 1 4 2 40 26 2 10 3 81 49 2 5 11 75 1 8 6 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 2 4 2 106 0 4 0 4 106 12 1 0 1 0 106 0 1 3 1 106 0 11 0 5 6 11 5 91 15 1 10 10 3 83 13 1 3 3 23 67 0 6 6 8 83 14 1 8 8 16 67 0 9 9 7 83 0 7 7 25 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 2 4 2 106 0 4 0 4 106 12 1 0 1 0 106 0 1 3 1 106 13 1 3 15 1 10 11 3 10 92 0 11 0 5 6 11 5 91 0 9 0 7 9 7 87 0 6 6 8 83 14 1 8 8 16 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
110 109 90 89 24 23 1 0 118 116 109 122 110 122 100 98 89 108 90 108 68 66 57 54 47 45 30 28 23 88 24 88 16 14 9 7 0 22 1 22 16 15
CALL[ ]	/* CallFunction */";
};
width = 515;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(344.333,522,o),
(348,527,o),
(348,537,cs),
(348,568.872,o),
(276.033,641,o),
(251,641,cs),
(228.925,641,o),
(121,549.906,o),
(121,509,cs),
(121,500.333,o),
(124.667,496,o),
(132,496,cs),
(146.506,496,o),
(178.117,524.127,o),
(251,567,c),
(274.333,553.667,o),
(292.667,542.833,o),
(306,534.5,cs),
(319.333,526.167,o),
(329.667,522,o),
(337,522,cs)
);
},
{
closed = 1;
nodes = (
(127.199,460,o),
(58,386.98,o),
(58,294,cs),
(58,243.333,o),
(78.333,193,o),
(121,165,c),
(79.667,146.333,o),
(59,127.667,o),
(59,89,cs),
(59,37,o),
(95,16.333,o),
(147,7,c),
(69.667,-8.333,o),
(31,-44.667,o),
(31,-102,cs),
(31,-201.668,o),
(142.293,-250,o),
(273,-250,cs),
(355.667,-250,o),
(425.667,-233.833,o),
(475,-206.5,cs),
(524.333,-179.167,o),
(553,-139,o),
(553,-91,cs),
(553,45.696,o),
(400.657,57,o),
(285,57,cs),
(233,57.667,o),
(194.333,60.833,o),
(169,66.5,cs),
(143.667,72.167,o),
(131,81.667,o),
(131,95,cs),
(131,119,o),
(151.667,132.333,o),
(181,143,c),
(198.333,137.667,o),
(212.333,137,o),
(231,137,cs),
(358.967,137,o),
(428,209.652,o),
(428,301,cs),
(428,353,o),
(405.667,399.667,o),
(359,429,c),
(385.667,455.667,o),
(419.667,466.333,o),
(449,469,cs),
(463.667,471.667,o),
(473,483.333,o),
(473,498,cs),
(473,520.667,o),
(452.333,530,o),
(435,530,cs),
(396.02,530,o),
(348.989,492.985,o),
(316,449,c),
(292.667,456.333,o),
(267.333,460,o),
(240,460,cs)
);
},
{
closed = 1;
nodes = (
(315.359,-1,o),
(352.721,-1.924,o),
(397,-14,cs),
(442.329,-26.362,o),
(480,-52.398,o),
(480,-99,cs),
(480,-124.333,o),
(463.833,-145.667,o),
(431.5,-163,cs),
(399.167,-180.333,o),
(352,-189,o),
(290,-189,cs),
(203.631,-189,o),
(104,-162.648,o),
(104,-106,cs),
(104,-32.658,o),
(214.039,-1,o),
(299,-1,cs)
);
},
{
closed = 1;
nodes = (
(315,400,o),
(355,361,o),
(355,301,cs),
(355,238.333,o),
(312,197,o),
(240,197,cs),
(170.667,197,o),
(131,240,o),
(131,292,cs),
(131,356,o),
(175,400,o),
(247,400,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
3 1 4 2 38 24 2 10 3 78 49 2 5 11 72 1 8 6 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 2 4 2 106 0 4 0 4 106 12 1 0 1 0 106 0 1 3 1 106 0 11 0 5 6 11 5 91 15 1 10 10 3 83 13 1 3 3 23 67 0 6 6 8 83 14 1 8 8 16 67 0 9 9 7 83 0 7 7 25 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 2 4 2 106 0 4 0 4 106 12 1 0 1 0 106 0 1 3 1 106 13 1 3 15 1 10 11 3 10 92 0 11 0 5 6 11 5 91 0 6 6 8 83 14 1 8 8 16 67 0 9 9 7 83 0 7 7 25 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 2 4 2 106 0 4 0 4 106 12 1 0 1 0 106 0 1 3 1 106 13 1 3 15 1 10 11 3 10 92 0 11 0 5 6 11 5 91 0 9 0 7 9 7 87 0 6 6 8 83 14 1 8 8 16 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
107 106 87 86 23 22 1 0 113 111 106 117 107 117 97 95 86 105 87 104 66 64 56 54 47 45 30 28 22 85 23 85 16 14 9 7 0 21 1 21 16 15
CALL[ ]	/* CallFunction */";
};
width = 495;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(424.405,-250,o),
(530,-188.092,o),
(530,-91,cs),
(530,19.819,o),
(393.07,24.34,o),
(292,27,cs),
(174.843,29.493,o),
(108,31.986,o),
(108,95,cs),
(108,125.667,o),
(123.333,135.333,o),
(158,150,c),
(180.667,140.667,o),
(205.667,137,o),
(231,137,cs),
(341.825,137,o),
(405,218.289,o),
(405,301,cs),
(405,349,o),
(381,392.667,o),
(345,422,c),
(370.333,460.667,o),
(399,476.667,o),
(431,486,cs),
(449.667,492.667,o),
(464,501.333,o),
(464,512,cs),
(464,522.667,o),
(455.333,530,o),
(442,530,cs),
(400.753,530,o),
(345.759,486.423,o),
(318,441,c),
(294.667,453.667,o),
(271,460,o),
(247,460,cs),
(134.199,460,o),
(65,386.98,o),
(65,294,cs),
(65,243.333,o),
(85.333,193,o),
(128,165,c),
(86.667,146.333,o),
(66,127.667,o),
(66,89,cs),
(66,37,o),
(102,16.333,o),
(154,7,c),
(76.667,-8.333,o),
(38,-44.667,o),
(38,-102,cs),
(38,-201.668,o),
(149.293,-250,o),
(280,-250,cs)
);
},
{
closed = 1;
nodes = (
(184.27,-219,o),
(81,-182.744,o),
(81,-106,cs),
(81,-31.14,o),
(181.608,-1,o),
(297,-1,cs),
(331.839,-1,o),
(487,-5.76,o),
(487,-99,cs),
(487,-168.498,o),
(402.633,-219,o),
(285,-219,cs)
);
},
{
closed = 1;
nodes = (
(151.333,167,o),
(108,212,o),
(108,292,cs),
(108,376,o),
(157.667,430,o),
(239,430,cs),
(317.667,430,o),
(362,381,o),
(362,301,cs),
(362,217,o),
(311.333,167,o),
(230,167,cs)
);
},
{
closed = 1;
nodes = (
(131.084,510,o),
(183.433,558.894,o),
(236,596,c),
(258.667,579.333,o),
(276.167,565.167,o),
(288.5,553.5,cs),
(300.833,541.833,o),
(313,536,o),
(325,536,cs),
(330.333,536,o),
(333,539.667,o),
(333,547,cs),
(333,572.769,o),
(260.335,640,o),
(236,640,cs),
(212.626,640,o),
(109,545.933,o),
(109,521,cs),
(109,513.667,o),
(111.667,510,o),
(117,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
101 1 9 11 2 1 7 0 16 1 8 7 58 27 2 2 8 52 1 5 3 5 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 11 9 11 106 15 1 9 1 9 106 0 1 10 1 106 0 10 0 10 106 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 14 1 7 7 0 83 12 1 0 0 23 67 0 3 3 5 83 13 1 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 11 9 11 106 15 1 9 1 9 106 0 1 10 1 106 0 10 0 10 106 12 1 0 14 1 7 8 0 7 92 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 83 13 1 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
99 98 87 86 67 66 1 0 114 112 107 105 98 119 99 119 93 91 86 97 87 97 77 75 66 85 67 84 46 44 36 33 25 23 8 6 0 65 1 65 16 15
CALL[ ]	/* CallFunction */";
};
width = 467;
}
);
note = gcircumflex;
unicode = 285;
},
{
glyphname = gcommaaccent;
kernLeft = g;
kernRight = g;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(203,598.029,o),
(239,596.443,o),
(239,579,cs),
(239,559,o),
(236.5,544.167,o),
(231.5,534.5,cs),
(226.5,524.833,o),
(224,516.667,o),
(224,510,cs),
(224,487.333,o),
(243.333,487,o),
(250,487,cs),
(268.413,487,o),
(331,529.464,o),
(331,606,cs),
(331,663.333,o),
(295,687,o),
(263,687,cs),
(219,687,o),
(203,657,o),
(203,629,cs)
);
},
{
closed = 1;
nodes = (
(117.179,460,o),
(53,389.827,o),
(53,295,cs),
(53,243,o),
(73.333,193,o),
(116,165,c),
(74.667,146.333,o),
(54,127.667,o),
(54,89,cs),
(54,37,o),
(90,16.333,o),
(142,7,c),
(64.667,-7.667,o),
(29,-49,o),
(29,-109,cs),
(29,-203.795,o),
(123.796,-250,o),
(281,-250,cs),
(442.33,-250,o),
(569,-192.094,o),
(569,-76,cs),
(569,-4.536,o),
(520.775,35.116,o),
(456.5,54.5,cs),
(391.935,73.972,o),
(324.179,75,o),
(280,75,cs),
(233.333,75.667,o),
(199.5,78.167,o),
(178.5,82.5,cs),
(157.5,86.833,o),
(147,92.667,o),
(147,100,cs),
(147,110.667,o),
(171.667,131,o),
(197,139,c),
(211.667,136.333,o),
(217.667,136,o),
(231,136,cs),
(368.333,136,o),
(444,201,o),
(444,301,cs),
(444,354.333,o),
(421.333,401.667,o),
(372,431,c),
(405.531,450.56,o),
(445.064,449.355,o),
(462,455,cs),
(472.667,457.667,o),
(480,464.333,o),
(480,483,cs),
(480,516.333,o),
(457,528,o),
(433,528,cs),
(391.667,528,o),
(344.667,494.333,o),
(314,453,c),
(295.333,457,o),
(274,460,o),
(250,460,cs)
);
},
{
closed = 1;
nodes = (
(391.45,-3,o),
(475,-24.84,o),
(475,-91,cs),
(475,-150.17,o),
(397.646,-175,o),
(301,-175,cs),
(221.621,-175,o),
(120,-156.246,o),
(120,-100,cs),
(120,-43.189,o),
(221.207,-3,o),
(305,-3,cs)
);
},
{
closed = 1;
nodes = (
(319.333,386,o),
(350,347.667,o),
(350,301,cs),
(350,250.333,o),
(313,209,o),
(249,209,cs),
(186.267,209,o),
(147,252.211,o),
(147,296,cs),
(147,350.667,o),
(183.333,386,o),
(250,386,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
39 25 2 9 2 80 48 2 4 10 74 1 7 5 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 0 3 0 106 0 3 1 3 106 0 1 2 1 106 0 10 0 4 5 10 4 91 13 1 9 9 2 83 11 1 2 2 23 67 0 5 5 7 83 12 1 7 7 16 67 0 8 8 6 83 0 6 6 25 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 0 3 0 106 0 3 1 3 106 0 1 2 1 106 11 1 2 13 1 9 10 2 9 92 0 10 0 4 5 10 4 91 0 8 0 6 8 6 87 0 5 5 7 83 12 1 7 7 16 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
109 108 89 88 23 22 117 115 108 121 109 121 99 97 88 107 89 107 67 65 56 53 46 44 29 27 22 87 23 87 38 34 14 17
CALL[ ]	/* CallFunction */";
};
width = 515;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(127.199,460,o),
(58,386.98,o),
(58,294,cs),
(58,243.333,o),
(78.333,193,o),
(121,165,c),
(79.667,146.333,o),
(59,127.667,o),
(59,89,cs),
(59,37,o),
(95,16.333,o),
(147,7,c),
(69.667,-8.333,o),
(31,-44.667,o),
(31,-102,cs),
(31,-201.668,o),
(142.293,-250,o),
(273,-250,cs),
(355.667,-250,o),
(425.667,-233.833,o),
(475,-206.5,cs),
(524.333,-179.167,o),
(553,-139,o),
(553,-91,cs),
(553,45.696,o),
(400.657,57,o),
(285,57,cs),
(233,57.667,o),
(194.333,60.833,o),
(169,66.5,cs),
(143.667,72.167,o),
(131,81.667,o),
(131,95,cs),
(131,119,o),
(151.667,132.333,o),
(181,143,c),
(198.333,137.667,o),
(212.333,137,o),
(231,137,cs),
(358.967,137,o),
(428,209.652,o),
(428,301,cs),
(428,353,o),
(405.667,399.667,o),
(359,429,c),
(385.667,455.667,o),
(419.667,466.333,o),
(449,469,cs),
(463.667,471.667,o),
(473,483.333,o),
(473,498,cs),
(473,520.667,o),
(452.333,530,o),
(435,530,cs),
(396.02,530,o),
(348.989,492.985,o),
(316,449,c),
(292.667,456.333,o),
(267.333,460,o),
(240,460,cs)
);
},
{
closed = 1;
nodes = (
(315.359,-1,o),
(352.721,-1.924,o),
(397,-14,cs),
(442.329,-26.362,o),
(480,-52.398,o),
(480,-99,cs),
(480,-124.333,o),
(463.833,-145.667,o),
(431.5,-163,cs),
(399.167,-180.333,o),
(352,-189,o),
(290,-189,cs),
(203.631,-189,o),
(104,-162.648,o),
(104,-106,cs),
(104,-32.658,o),
(214.039,-1,o),
(299,-1,cs)
);
},
{
closed = 1;
nodes = (
(315,400,o),
(355,361,o),
(355,301,cs),
(355,238.333,o),
(312,197,o),
(240,197,cs),
(170.667,197,o),
(131,240,o),
(131,292,cs),
(131,356,o),
(175,400,o),
(247,400,cs)
);
},
{
closed = 1;
nodes = (
(203,590,o),
(239,591,o),
(239,574,cs),
(239,557,o),
(237,544,o),
(233,536,cs),
(228,527,o),
(226,520,o),
(226,514,cs),
(226,497,o),
(240,495,o),
(247,495,cs),
(271,495,o),
(312,545,o),
(312,599,cs),
(312,652,o),
(282,671,o),
(255,671,cs),
(218,671,o),
(203,646,o),
(203,622,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
17 3 2 7 0 57 28 2 2 8 51 1 5 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 9 1 9 106 0 1 10 1 106 0 10 0 10 106 0 8 0 2 3 8 2 91 13 1 7 7 0 83 11 1 0 0 23 67 0 3 3 5 83 12 1 5 5 16 67 0 6 6 4 83 0 4 4 25 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 9 1 9 106 0 1 10 1 106 0 10 0 10 106 11 1 0 13 1 7 8 0 7 92 0 8 0 2 3 8 2 91 0 3 3 5 83 12 1 5 5 16 67 0 6 6 4 83 0 4 4 25 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 9 1 9 106 0 1 10 1 106 0 10 0 10 106 11 1 0 13 1 7 8 0 7 92 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 83 12 1 5 5 16 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
86 85 66 65 2 1 109 107 101 99 92 90 85 96 86 96 76 74 65 84 66 83 45 43 35 33 26 24 9 7 1 64 2 64 14 26
CALL[ ]	/* CallFunction */";
};
width = 495;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(424.405,-250,o),
(530,-188.092,o),
(530,-91,cs),
(530,19.819,o),
(393.07,24.34,o),
(292,27,cs),
(174.843,29.493,o),
(108,31.986,o),
(108,95,cs),
(108,125.667,o),
(123.333,135.333,o),
(158,150,c),
(180.667,140.667,o),
(205.667,137,o),
(231,137,cs),
(341.825,137,o),
(405,218.289,o),
(405,301,cs),
(405,349,o),
(381,392.667,o),
(345,422,c),
(370.333,460.667,o),
(399,476.667,o),
(431,486,cs),
(449.667,492.667,o),
(464,501.333,o),
(464,512,cs),
(464,522.667,o),
(455.333,530,o),
(442,530,cs),
(400.753,530,o),
(345.759,486.423,o),
(318,441,c),
(294.667,453.667,o),
(271,460,o),
(247,460,cs),
(134.199,460,o),
(65,386.98,o),
(65,294,cs),
(65,243.333,o),
(85.333,193,o),
(128,165,c),
(86.667,146.333,o),
(66,127.667,o),
(66,89,cs),
(66,37,o),
(102,16.333,o),
(154,7,c),
(76.667,-8.333,o),
(38,-44.667,o),
(38,-102,cs),
(38,-201.668,o),
(149.293,-250,o),
(280,-250,cs)
);
},
{
closed = 1;
nodes = (
(184.27,-219,o),
(81,-182.744,o),
(81,-106,cs),
(81,-31.14,o),
(181.608,-1,o),
(297,-1,cs),
(331.839,-1,o),
(487,-5.76,o),
(487,-99,cs),
(487,-168.498,o),
(402.633,-219,o),
(285,-219,cs)
);
},
{
closed = 1;
nodes = (
(151.333,167,o),
(108,212,o),
(108,292,cs),
(108,376,o),
(157.667,430,o),
(239,430,cs),
(317.667,430,o),
(362,381,o),
(362,301,cs),
(362,217,o),
(311.333,167,o),
(230,167,cs)
);
},
{
closed = 1;
nodes = (
(268.943,509,o),
(285,558.688,o),
(285,588,cs),
(285,633.333,o),
(263,645,o),
(243,645,cs),
(216.333,645,o),
(203,628.333,o),
(203,611,cs),
(203,578.798,o),
(239,584.31,o),
(239,567,cs),
(239,560.333,o),
(237.167,552.167,o),
(233.5,542.5,cs),
(229.833,532.833,o),
(228,525.667,o),
(228,521,cs),
(228,514.333,o),
(235.333,509,o),
(242,509,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
2 1 7 0 16 1 8 7 58 27 2 2 8 52 1 5 3 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 9 1 9 106 0 1 10 1 106 0 10 0 10 106 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 13 1 7 7 0 83 11 1 0 0 23 67 0 3 3 5 83 12 1 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 9 1 9 106 0 1 10 1 106 0 10 0 10 106 11 1 0 13 1 7 8 0 7 92 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 83 12 1 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
87 86 67 66 1 0 110 108 102 100 93 91 86 97 87 97 77 75 66 85 67 84 46 44 36 33 25 23 8 6 0 65 1 65 14 15
CALL[ ]	/* CallFunction */";
};
width = 467;
}
);
note = gcommaaccent;
unicode = 291;
},
{
glyphname = gdotaccent;
kernLeft = g;
kernRight = g;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(117.179,460,o),
(53,389.827,o),
(53,295,cs),
(53,243,o),
(73.333,193,o),
(116,165,c),
(74.667,146.333,o),
(54,127.667,o),
(54,89,cs),
(54,37,o),
(90,16.333,o),
(142,7,c),
(64.667,-7.667,o),
(29,-49,o),
(29,-109,cs),
(29,-203.795,o),
(123.796,-250,o),
(281,-250,cs),
(442.33,-250,o),
(569,-192.094,o),
(569,-76,cs),
(569,-4.536,o),
(520.775,35.116,o),
(456.5,54.5,cs),
(391.935,73.972,o),
(324.179,75,o),
(280,75,cs),
(233.333,75.667,o),
(199.5,78.167,o),
(178.5,82.5,cs),
(157.5,86.833,o),
(147,92.667,o),
(147,100,cs),
(147,110.667,o),
(171.667,131,o),
(197,139,c),
(211.667,136.333,o),
(217.667,136,o),
(231,136,cs),
(368.333,136,o),
(444,201,o),
(444,301,cs),
(444,354.333,o),
(421.333,401.667,o),
(372,431,c),
(405.531,450.56,o),
(445.064,449.355,o),
(462,455,cs),
(472.667,457.667,o),
(480,464.333,o),
(480,483,cs),
(480,516.333,o),
(457,528,o),
(433,528,cs),
(391.667,528,o),
(344.667,494.333,o),
(314,453,c),
(295.333,457,o),
(274,460,o),
(250,460,cs)
);
},
{
closed = 1;
nodes = (
(391.45,-3,o),
(475,-24.84,o),
(475,-91,cs),
(475,-150.17,o),
(397.646,-175,o),
(301,-175,cs),
(221.621,-175,o),
(120,-156.246,o),
(120,-100,cs),
(120,-43.189,o),
(221.207,-3,o),
(305,-3,cs)
);
},
{
closed = 1;
nodes = (
(319.333,386,o),
(350,347.667,o),
(350,301,cs),
(350,250.333,o),
(313,209,o),
(249,209,cs),
(186.267,209,o),
(147,252.211,o),
(147,296,cs),
(147,350.667,o),
(183.333,386,o),
(250,386,cs)
);
},
{
closed = 1;
nodes = (
(196,544.333,o),
(221.667,521,o),
(255,521,cs),
(284.675,521,o),
(322,535.646,o),
(322,591,cs),
(322,627,o),
(294,652,o),
(262,652,cs),
(214.488,652,o),
(196,614.161,o),
(196,587,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
17 3 2 7 0 58 26 2 2 8 52 1 5 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 1 9 10 9 1 10 104 0 9 0 10 0 9 10 91 0 8 0 2 3 8 2 91 13 1 7 7 0 83 11 1 0 0 23 67 0 3 3 5 83 12 1 5 5 16 67 0 6 6 4 83 0 4 4 25 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 1 9 10 9 1 10 104 0 9 0 10 0 9 10 91 11 1 0 13 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 83 12 1 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
87 86 67 66 1 0 114 112 106 104 95 93 86 99 87 99 77 75 66 85 67 85 45 43 34 31 24 22 7 5 0 65 1 65 14 15
CALL[ ]	/* CallFunction */";
};
width = 515;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(127.199,460,o),
(58,386.98,o),
(58,294,cs),
(58,243.333,o),
(78.333,193,o),
(121,165,c),
(79.667,146.333,o),
(59,127.667,o),
(59,89,cs),
(59,37,o),
(95,16.333,o),
(147,7,c),
(69.667,-8.333,o),
(31,-44.667,o),
(31,-102,cs),
(31,-201.668,o),
(142.293,-250,o),
(273,-250,cs),
(355.667,-250,o),
(425.667,-233.833,o),
(475,-206.5,cs),
(524.333,-179.167,o),
(553,-139,o),
(553,-91,cs),
(553,45.696,o),
(400.657,57,o),
(285,57,cs),
(233,57.667,o),
(194.333,60.833,o),
(169,66.5,cs),
(143.667,72.167,o),
(131,81.667,o),
(131,95,cs),
(131,119,o),
(151.667,132.333,o),
(181,143,c),
(198.333,137.667,o),
(212.333,137,o),
(231,137,cs),
(358.967,137,o),
(428,209.652,o),
(428,301,cs),
(428,353,o),
(405.667,399.667,o),
(359,429,c),
(385.667,455.667,o),
(419.667,466.333,o),
(449,469,cs),
(463.667,471.667,o),
(473,483.333,o),
(473,498,cs),
(473,520.667,o),
(452.333,530,o),
(435,530,cs),
(396.02,530,o),
(348.989,492.985,o),
(316,449,c),
(292.667,456.333,o),
(267.333,460,o),
(240,460,cs)
);
},
{
closed = 1;
nodes = (
(315.359,-1,o),
(352.721,-1.924,o),
(397,-14,cs),
(442.329,-26.362,o),
(480,-52.398,o),
(480,-99,cs),
(480,-124.333,o),
(463.833,-145.667,o),
(431.5,-163,cs),
(399.167,-180.333,o),
(352,-189,o),
(290,-189,cs),
(203.631,-189,o),
(104,-162.648,o),
(104,-106,cs),
(104,-32.658,o),
(214.039,-1,o),
(299,-1,cs)
);
},
{
closed = 1;
nodes = (
(315,400,o),
(355,361,o),
(355,301,cs),
(355,238.333,o),
(312,197,o),
(240,197,cs),
(170.667,197,o),
(131,240,o),
(131,292,cs),
(131,356,o),
(175,400,o),
(247,400,cs)
);
},
{
closed = 1;
nodes = (
(197,548,o),
(219,527,o),
(246,527,cs),
(271,527,o),
(302,540,o),
(302,588,cs),
(302,619,o),
(280,640,o),
(253,640,cs),
(211,640,o),
(197,604,o),
(197,584,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
17 3 2 7 0 57 28 2 2 8 51 1 5 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 1 9 10 9 1 10 104 0 9 0 10 0 9 10 91 0 8 0 2 3 8 2 91 13 1 7 7 0 83 11 1 0 0 23 67 0 3 3 5 83 12 1 5 5 16 67 0 6 6 4 83 0 4 4 25 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 1 9 10 9 1 10 104 0 9 0 10 0 9 10 91 11 1 0 13 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 3 3 5 83 12 1 5 5 16 67 0 6 6 4 83 0 4 4 25 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 1 9 10 9 1 10 104 0 9 0 10 0 9 10 91 11 1 0 13 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 83 12 1 5 5 16 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
86 85 66 65 2 1 109 107 103 101 92 90 85 96 86 96 76 74 65 84 66 83 45 43 35 33 26 24 9 7 1 64 2 64 14 26
CALL[ ]	/* CallFunction */";
};
width = 495;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(424.405,-250,o),
(530,-188.092,o),
(530,-91,cs),
(530,19.819,o),
(393.07,24.34,o),
(292,27,cs),
(174.843,29.493,o),
(108,31.986,o),
(108,95,cs),
(108,125.667,o),
(123.333,135.333,o),
(158,150,c),
(180.667,140.667,o),
(205.667,137,o),
(231,137,cs),
(341.825,137,o),
(405,218.289,o),
(405,301,cs),
(405,349,o),
(381,392.667,o),
(345,422,c),
(370.333,460.667,o),
(399,476.667,o),
(431,486,cs),
(449.667,492.667,o),
(464,501.333,o),
(464,512,cs),
(464,522.667,o),
(455.333,530,o),
(442,530,cs),
(400.753,530,o),
(345.759,486.423,o),
(318,441,c),
(294.667,453.667,o),
(271,460,o),
(247,460,cs),
(134.199,460,o),
(65,386.98,o),
(65,294,cs),
(65,243.333,o),
(85.333,193,o),
(128,165,c),
(86.667,146.333,o),
(66,127.667,o),
(66,89,cs),
(66,37,o),
(102,16.333,o),
(154,7,c),
(76.667,-8.333,o),
(38,-44.667,o),
(38,-102,cs),
(38,-201.668,o),
(149.293,-250,o),
(280,-250,cs)
);
},
{
closed = 1;
nodes = (
(184.27,-219,o),
(81,-182.744,o),
(81,-106,cs),
(81,-31.14,o),
(181.608,-1,o),
(297,-1,cs),
(331.839,-1,o),
(487,-5.76,o),
(487,-99,cs),
(487,-168.498,o),
(402.633,-219,o),
(285,-219,cs)
);
},
{
closed = 1;
nodes = (
(151.333,167,o),
(108,212,o),
(108,292,cs),
(108,376,o),
(157.667,430,o),
(239,430,cs),
(317.667,430,o),
(362,381,o),
(362,301,cs),
(362,217,o),
(311.333,167,o),
(230,167,cs)
);
},
{
closed = 1;
nodes = (
(251.667,538,o),
(274,548,o),
(274,584,cs),
(274,606.667,o),
(258.667,621,o),
(240,621,cs),
(212.258,621,o),
(199,593.895,o),
(199,580,cs),
(199,556,o),
(214.333,538,o),
(233,538,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
2 1 7 0 16 1 8 7 58 27 2 2 8 52 1 5 3 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 1 10 0 10 1 0 104 0 9 0 10 1 9 10 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 13 1 7 7 0 83 11 1 0 0 23 67 0 3 3 5 83 12 1 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 1 10 0 10 1 0 104 0 9 0 10 1 9 10 91 11 1 0 13 1 7 8 0 7 91 0 8 0 2 3 8 2 91 0 6 0 4 6 4 87 0 3 3 5 83 12 1 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
87 86 67 66 1 0 110 108 104 102 93 91 86 97 87 97 77 75 66 85 67 84 46 44 36 33 25 23 8 6 0 65 1 65 14 15
CALL[ ]	/* CallFunction */";
};
width = 467;
}
);
note = gdotaccent;
unicode = 289;
},
{
glyphname = h;
kernLeft = germandbls;
kernRight = c_h;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(98.912,0,o),
(94.924,1,o),
(150,1,cs),
(165.333,1,o),
(180.833,1.167,o),
(196.5,1.5,cs),
(212.167,1.833,o),
(223.333,2,o),
(230,2,cs),
(262,2,o),
(278,8,o),
(278,36,cs),
(278,68,o),
(264,77,o),
(228,77,cs),
(156,77,l),
(156,182,ls),
(156,264.339,o),
(227.883,343,o),
(307,343,cs),
(331,343,o),
(345,335.667,o),
(353,329,cs),
(373.402,311.512,o),
(377,282.173,o),
(377,211,cs),
(377,179.406,o),
(374.787,80.659,o),
(373,61,cs),
(370.003,25.034,o),
(368.909,20.364,o),
(343,10,cs),
(328.333,4.667,o),
(321,-8,o),
(321,-28,cs),
(321,-41.333,o),
(327.667,-49.833,o),
(341,-53.5,cs),
(354.333,-57.167,o),
(376.333,-59,o),
(407,-59,cs),
(422.333,-59,o),
(435,-58.833,o),
(445,-58.5,cs),
(455,-58.167,o),
(462.667,-58,o),
(468,-58,cs),
(477.333,-58,o),
(489.833,-57.667,o),
(505.5,-57,cs),
(521.167,-56.333,o),
(533.333,-56,o),
(542,-56,cs),
(563.333,-56,o),
(584,-45.667,o),
(584,-19,cs),
(584,14.333,o),
(556.333,19,o),
(527,19,cs),
(466,19,l),
(466,187,ls),
(466,233,o),
(464.167,270.333,o),
(460.5,299,cs),
(456.833,327.667,o),
(452.667,348,o),
(448,360,cs),
(425.333,416,o),
(387.333,430,o),
(326,430,cs),
(255.975,430,o),
(182.032,388.075,o),
(158,332,c),
(158,791,ls),
(158,819,o),
(147.667,823,o),
(101,823,cs),
(45.667,823,o),
(6.5,819.167,o),
(-16.5,811.5,cs),
(-39.5,803.833,o),
(-51,794.667,o),
(-51,784,cs),
(-51,757.333,o),
(-19,751,o),
(21,751,cs),
(52,751,ls),
(62.667,751,o),
(66,735.667,o),
(66,721,cs),
(66,691.797,o),
(66,657.797,o),
(66,619,cs),
(66,571,o),
(65.333,503.333,o),
(64,398,cs),
(63.333,328.667,o),
(62.667,272.667,o),
(62,230,cs),
(61.333,187.333,o),
(61,155.667,o),
(61,135,cs),
(61,111.667,o),
(58.833,95.667,o),
(54.5,87,cs),
(50.167,78.333,o),
(42.667,73.333,o),
(32,72,cs),
(13.333,69.333,o),
(-2,58.333,o),
(-2,37,cs),
(-2,3.667,o),
(22.333,0,o),
(61,0,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
31 1 7 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 4 0 5 4 5 87 0 1 1 2 83 0 2 2 12 67 0 6 6 3 83 0 3 3 15 67 0 7 7 0 83 8 1 0 0 13 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 3 0 6 7 3 6 91 0 4 0 5 4 5 87 0 1 1 2 83 0 2 2 12 67 0 7 7 0 83 8 1 0 0 13 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 0 6 7 3 6 91 0 4 0 5 4 5 87 0 1 1 2 83 0 2 2 14 67 0 7 7 0 83 8 1 0 0 13 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
1 0 87 85 80 78 57 49 45 43 37 35 28 26 22 19 0 99 1 91 9 15
CALL[ ]	/* CallFunction */";
};
width = 566;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(459,389.014,o),
(395.622,428,o),
(318,428,cs),
(251.333,428,o),
(182.333,392.667,o),
(153,330,c),
(153,789,l),
(150.333,815.667,o),
(145.667,821,o),
(111,821,cs),
(5.525,821,o),
(-48,812.318,o),
(-48,787,cs),
(-48,770.717,o),
(-7.689,770,o),
(17,770,cs),
(64,770,ls),
(75.333,770,o),
(81,759,o),
(81,737,cs),
(81,691.532,o),
(79.967,599.291,o),
(78.5,435,cs),
(76.734,237.24,o),
(76,129.247,o),
(76,111,cs),
(76,86.563,o),
(70.554,57,o),
(48,57,cs),
(32,57,ls),
(16,57,o),
(-5,51,o),
(-5,27,cs),
(-5,1.667,o),
(17.667,0,o),
(39,0,cs),
(41,0,o),
(47,0,o),
(57,0,cs),
(67,0,o),
(78.667,0,o),
(92,0,cs),
(105.333,0,o),
(119.667,0.167,o),
(135,0.5,cs),
(150.333,0.833,o),
(164.667,1,o),
(178,1,cs),
(191.333,1,o),
(202.5,1,o),
(211.5,1,cs),
(220.5,1,o),
(226,1,o),
(228,1,cs),
(254.667,1,o),
(267,5.333,o),
(267,28,cs),
(267,54.667,o),
(250.667,60,o),
(228,60,cs),
(148,60,l),
(148,186,ls),
(148,217.333,o),
(156.333,248.667,o),
(173,280,cs),
(199.667,329.333,o),
(243,368,o),
(299,368,cs),
(386.923,368,o),
(389,286.869,o),
(389,163,cs),
(389,176.242,o),
(389.355,103.1,o),
(386,36,cs),
(383.333,4,o),
(376.333,1,o),
(343,-3,c),
(331,-5.667,o),
(315,-13.333,o),
(315,-32,cs),
(315,-54.667,o),
(330.667,-60,o),
(348,-60,cs),
(355.02,-60,o),
(416.331,-58,o),
(532,-58,cs),
(552,-58,o),
(569,-53,o),
(569,-33,cs),
(569,-5.475,o),
(536.64,0,o),
(513,0,cs),
(459,0,l),
(459,233,l),
(459,233,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
90 1 6 7 91 1 3 2 23 1 4 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 0 0 1 0 1 87 0 6 6 7 83 0 7 7 12 67 0 2 2 8 83 0 8 8 15 67 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 8 0 2 3 8 2 91 0 0 0 1 0 1 87 0 6 6 7 83 0 7 7 12 67 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 8 0 2 3 8 2 91 0 0 0 1 0 1 87 0 6 6 7 83 0 7 7 14 67 5 1 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
95 93 88 86 79 75 61 58 54 45 41 39 34 32 118 32 9 17
CALL[ ]	/* CallFunction */";
};
width = 551;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(346.333,-61,o),
(359.5,-60.5,o),
(376.5,-59.5,cs),
(393.5,-58.5,o),
(409.333,-58,o),
(424,-58,cs),
(438,-58,o),
(454.5,-58.5,o),
(473.5,-59.5,cs),
(492.5,-60.5,o),
(507.333,-61,o),
(518,-61,cs),
(537.333,-61,o),
(547,-57.333,o),
(547,-50,cs),
(547,-36.667,o),
(519.667,-32,o),
(493,-32,cs),
(449,-32,l),
(449,176,ls),
(449,228,o),
(449,258.333,o),
(445,293,cs),
(439.752,340.235,o),
(419.936,428,o),
(309,428,cs),
(237,428,o),
(177.667,391,o),
(143,327,c),
(143,745,ls),
(143,799.667,o),
(139.667,818,o),
(101,818,cs),
(58.959,818,o),
(-30,812.045,o),
(-30,795,cs),
(-30,785.667,o),
(-7.667,785,o),
(11,785,cs),
(81,785,ls),
(95.667,785,o),
(103,774.333,o),
(103,753,cs),
(103,625.167,o),
(104,519.498,o),
(104,436,cs),
(104,309.52,o),
(98.749,110.485,o),
(97,72,cs),
(95.667,41.333,o),
(89.667,34.667,o),
(71,32,cs),
(45.667,29.333,o),
(26,26.667,o),
(12,24,cs),
(-2,21.333,o),
(-9,16.667,o),
(-9,10,cs),
(-9,5.333,o),
(-5.667,2.5,o),
(1,1.5,cs),
(7.667,0.5,o),
(15.667,0,o),
(25,0,cs),
(40.333,0,o),
(55.5,0.5,o),
(70.5,1.5,cs),
(85.5,2.5,o),
(100.667,3,o),
(116,3,cs),
(131.333,3,o),
(149.667,2.5,o),
(171,1.5,cs),
(192.333,0.5,o),
(212.667,0,o),
(232,0,cs),
(242.667,0,o),
(252,6,o),
(252,14,cs),
(252,26,o),
(231.333,32,o),
(210,32,cs),
(137,32,l),
(137,193,ls),
(137,301.03,o),
(197.682,399,o),
(299,399,cs),
(385.081,399,o),
(396.774,331.584,o),
(403,288,cs),
(408.837,235.471,o),
(409,126.213,o),
(409,120,cs),
(409,110.444,o),
(409.417,37.59,o),
(406,0,cs),
(403.333,-21.333,o),
(397.667,-28.333,o),
(371,-31,cs),
(345.205,-33.345,o),
(306,-36.506,o),
(306,-50,cs),
(306,-57.333,o),
(316.333,-61,o),
(337,-61,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
94 1 3 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 0 1 0 1 87 0 5 5 6 83 0 6 6 14 67 0 2 2 7 83 0 7 7 15 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 7 0 2 3 7 2 91 0 0 0 1 0 1 87 0 5 5 6 83 0 6 6 14 67 0 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
98 96 91 88 83 80 61 53 49 47 42 40 131 36 8 17
CALL[ ]	/* CallFunction */";
};
width = 529;
}
);
note = h;
unicode = 104;
},
{
glyphname = hbar;
kernLeft = germandbls;
kernRight = c_h;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(98.912,0,o),
(94.924,1,o),
(150,1,cs),
(165.333,1,o),
(180.833,1.167,o),
(196.5,1.5,cs),
(212.167,1.833,o),
(223.333,2,o),
(230,2,cs),
(262,2,o),
(278,8,o),
(278,36,cs),
(278,68,o),
(264,77,o),
(228,77,cs),
(156,77,l),
(156,182,ls),
(156,264.339,o),
(227.883,343,o),
(307,343,cs),
(331,343,o),
(345,335.667,o),
(353,329,cs),
(373.402,311.512,o),
(377,282.173,o),
(377,211,cs),
(377,179.406,o),
(374.787,80.659,o),
(373,61,cs),
(370.003,25.034,o),
(368.909,20.364,o),
(343,10,cs),
(328.333,4.667,o),
(321,-8,o),
(321,-28,cs),
(321,-41.333,o),
(327.667,-49.833,o),
(341,-53.5,cs),
(354.333,-57.167,o),
(376.333,-59,o),
(407,-59,cs),
(422.333,-59,o),
(435,-58.833,o),
(445,-58.5,cs),
(455,-58.167,o),
(462.667,-58,o),
(468,-58,cs),
(477.333,-58,o),
(489.833,-57.667,o),
(505.5,-57,cs),
(521.167,-56.333,o),
(533.333,-56,o),
(542,-56,cs),
(563.333,-56,o),
(584,-45.667,o),
(584,-19,cs),
(584,14.333,o),
(556.333,19,o),
(527,19,cs),
(466,19,l),
(466,187,ls),
(466,233,o),
(464.167,270.333,o),
(460.5,299,cs),
(456.833,327.667,o),
(452.667,348,o),
(448,360,cs),
(425.333,416,o),
(387.333,430,o),
(326,430,cs),
(255.975,430,o),
(182.032,388.075,o),
(158,332,c),
(158,522,l),
(179.333,522,o),
(199.5,522.167,o),
(218.5,522.5,cs),
(237.5,522.833,o),
(253,523,o),
(265,523,cs),
(293.782,523,o),
(301,549.801,o),
(301,565,cs),
(301,583.667,o),
(287.667,604,o),
(273,604,cs),
(257.667,604,o),
(240.667,603.5,o),
(222,602.5,cs),
(203.333,601.5,o),
(182,601,o),
(158,601,c),
(158,791,ls),
(158,819,o),
(147.667,823,o),
(101,823,cs),
(45.667,823,o),
(6.5,819.167,o),
(-16.5,811.5,cs),
(-39.5,803.833,o),
(-51,794.667,o),
(-51,784,cs),
(-51,757.333,o),
(-19,751,o),
(21,751,cs),
(52,751,ls),
(62.667,751,o),
(66,735.667,o),
(66,721,cs),
(66,602,l),
(56.667,602.667,o),
(48.167,603,o),
(40.5,603,cs),
(32.833,603,o),
(27.333,603,o),
(24,603,cs),
(1.333,603,o),
(-9,579.333,o),
(-9,562,cs),
(-9,543.333,o),
(5.333,522,o),
(24,522,cs),
(65,522,l),
(65,504.667,o),
(64.833,486,o),
(64.5,466,cs),
(64.167,446,o),
(64,423.333,o),
(64,398,cs),
(63.333,328.667,o),
(62.667,272.667,o),
(62,230,cs),
(61.333,187.333,o),
(61,155.667,o),
(61,135,cs),
(61,111.667,o),
(58.833,95.667,o),
(54.5,87,cs),
(50.167,78.333,o),
(42.667,73.333,o),
(32,72,cs),
(13.333,69.333,o),
(-2,58.333,o),
(-2,37,cs),
(-2,3.667,o),
(22.333,0,o),
(61,0,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
25 1 1 2 55 1 11 10 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
5 1 2 6 1 1 7 2 1 91 0 8 0 9 8 9 87 0 3 3 4 83 0 4 4 12 67 0 10 10 7 83 0 7 7 15 67 0 11 11 0 83 12 1 0 0 13 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
5 1 2 6 1 1 7 2 1 91 0 7 0 10 11 7 10 91 0 8 0 9 8 9 87 0 3 3 4 83 0 4 4 12 67 0 11 11 0 83 12 1 0 0 13 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
5 1 2 6 1 1 7 2 1 91 0 7 0 10 11 7 10 91 0 8 0 9 8 9 87 0 3 3 4 83 0 4 4 14 67 0 11 11 0 83 12 1 0 0 13 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 111 109 104 102 81 73 69 67 61 59 54 50 44 40 37 35 31 28 24 21 17 15 0 123 1 115 13 15
CALL[ ]	/* CallFunction */";
};
width = 566;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(250,595,o),
(231.667,594.5,o),
(211,593.5,cs),
(190.333,592.5,o),
(166,592,o),
(138,592,cs),
(95.698,592,o),
(47.437,594,o),
(17,594,cs),
(-1.667,594,o),
(-9,575.333,o),
(-9,562,cs),
(-9,547.333,o),
(2.333,531,o),
(17,531,cs),
(87.305,531,o),
(184.446,532,o),
(258,532,cs),
(280.667,532,o),
(287,554.333,o),
(287,565,cs),
(287,579.667,o),
(276.667,595,o),
(266,595,cs)
);
},
{
closed = 1;
nodes = (
(459,389.014,o),
(395.622,428,o),
(318,428,cs),
(251.333,428,o),
(182.333,392.667,o),
(153,330,c),
(153,789,l),
(150.333,815.667,o),
(145.667,821,o),
(111,821,cs),
(5.525,821,o),
(-48,812.318,o),
(-48,787,cs),
(-48,770.717,o),
(-7.689,770,o),
(17,770,cs),
(64,770,ls),
(75.333,770,o),
(81,759,o),
(81,737,cs),
(81,691.532,o),
(79.967,599.291,o),
(78.5,435,cs),
(76.734,237.24,o),
(76,129.247,o),
(76,111,cs),
(76,86.563,o),
(70.554,57,o),
(48,57,cs),
(32,57,ls),
(16,57,o),
(-5,51,o),
(-5,27,cs),
(-5,1.667,o),
(17.667,0,o),
(39,0,cs),
(41,0,o),
(47,0,o),
(57,0,cs),
(67,0,o),
(78.667,0,o),
(92,0,cs),
(105.333,0,o),
(119.667,0.167,o),
(135,0.5,cs),
(150.333,0.833,o),
(164.667,1,o),
(178,1,cs),
(191.333,1,o),
(202.5,1,o),
(211.5,1,cs),
(220.5,1,o),
(226,1,o),
(228,1,cs),
(254.667,1,o),
(267,5.333,o),
(267,28,cs),
(267,54.667,o),
(250.667,60,o),
(228,60,cs),
(148,60,l),
(148,186,ls),
(148,217.333,o),
(156.333,248.667,o),
(173,280,cs),
(199.667,329.333,o),
(243,368,o),
(299,368,cs),
(386.923,368,o),
(389,286.869,o),
(389,163,cs),
(389,176.242,o),
(389.355,103.1,o),
(386,36,cs),
(383.333,4,o),
(376.333,1,o),
(343,-3,c),
(331,-5.667,o),
(315,-13.333,o),
(315,-32,cs),
(315,-54.667,o),
(330.667,-60,o),
(348,-60,cs),
(355.02,-60,o),
(416.331,-58,o),
(532,-58,cs),
(552,-58,o),
(569,-53,o),
(569,-33,cs),
(569,-5.475,o),
(536.64,0,o),
(513,0,cs),
(459,0,l),
(459,233,l),
(459,233,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
115 1 8 9 116 1 5 4 48 1 6 5 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
11 1 0 0 1 10 0 1 91 0 2 0 3 2 3 87 0 8 8 9 83 0 9 9 12 67 0 4 4 10 83 0 10 10 15 67 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
11 1 0 0 1 10 0 1 91 0 10 0 4 5 10 4 91 0 2 0 3 2 3 87 0 8 8 9 83 0 9 9 12 67 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
11 1 0 0 1 10 0 1 91 0 10 0 4 5 10 4 91 0 2 0 3 2 3 87 0 8 8 9 83 0 9 9 14 67 7 1 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 120 118 113 111 104 100 86 83 79 70 66 64 59 57 40 33 27 25 12 5 0 24 1 16 12 15
CALL[ ]	/* CallFunction */";
};
width = 551;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(346.333,-61,o),
(359.5,-60.5,o),
(376.5,-59.5,cs),
(393.5,-58.5,o),
(409.333,-58,o),
(424,-58,cs),
(438,-58,o),
(454.5,-58.5,o),
(473.5,-59.5,cs),
(492.5,-60.5,o),
(507.333,-61,o),
(518,-61,cs),
(537.333,-61,o),
(547,-57.333,o),
(547,-50,cs),
(547,-36.667,o),
(519.667,-32,o),
(493,-32,cs),
(449,-32,l),
(449,176,ls),
(449,228,o),
(449,258.333,o),
(445,293,cs),
(439.752,340.235,o),
(419.936,428,o),
(309,428,cs),
(237,428,o),
(177.667,391,o),
(143,327,c),
(143,546,l),
(163.667,546,o),
(183.5,546.167,o),
(202.5,546.5,cs),
(221.5,546.833,o),
(236.667,547,o),
(248,547,cs),
(262.667,547,o),
(267,558.333,o),
(267,565,cs),
(267,571.667,o),
(261.333,580,o),
(256,580,cs),
(241.333,580,o),
(224.667,579.5,o),
(206,578.5,cs),
(187.333,577.5,o),
(166.333,577,o),
(143,577,c),
(143,745,ls),
(143,799.667,o),
(139.667,818,o),
(101,818,cs),
(58.959,818,o),
(-30,812.045,o),
(-30,795,cs),
(-30,785.667,o),
(-7.667,785,o),
(11,785,cs),
(81,785,ls),
(95.667,785,o),
(103,774.333,o),
(103,753,cs),
(103,577,l),
(66.692,577,o),
(30.125,579,o),
(7,579,cs),
(-3.667,579,o),
(-9,568.667,o),
(-9,562,cs),
(-9,555.333,o),
(-2.333,546,o),
(7,546,cs),
(103,546,l),
(103,524,o),
(103.167,503.5,o),
(103.5,484.5,cs),
(103.833,465.5,o),
(104,449.333,o),
(104,436,cs),
(104,309.52,o),
(98.749,110.485,o),
(97,72,cs),
(95.667,41.333,o),
(89.667,34.667,o),
(71,32,cs),
(45.667,29.333,o),
(26,26.667,o),
(12,24,cs),
(-2,21.333,o),
(-9,16.667,o),
(-9,10,cs),
(-9,5.333,o),
(-5.667,2.5,o),
(1,1.5,cs),
(7.667,0.5,o),
(15.667,0,o),
(25,0,cs),
(40.333,0,o),
(55.5,0.5,o),
(70.5,1.5,cs),
(85.5,2.5,o),
(100.667,3,o),
(116,3,cs),
(131.333,3,o),
(149.667,2.5,o),
(171,1.5,cs),
(192.333,0.5,o),
(212.667,0,o),
(232,0,cs),
(242.667,0,o),
(252,6,o),
(252,14,cs),
(252,26,o),
(231.333,32,o),
(210,32,cs),
(137,32,l),
(137,193,ls),
(137,301.03,o),
(197.682,399,o),
(299,399,cs),
(385.081,399,o),
(396.774,331.584,o),
(403,288,cs),
(408.837,235.471,o),
(409,126.213,o),
(409,120,cs),
(409,110.444,o),
(409.417,37.59,o),
(406,0,cs),
(403.333,-21.333,o),
(397.667,-28.333,o),
(371,-31,cs),
(345.205,-33.345,o),
(306,-36.506,o),
(306,-50,cs),
(306,-57.333,o),
(316.333,-61,o),
(337,-61,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
118 1 3 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
9 1 6 10 1 5 11 6 5 91 0 0 0 1 0 1 87 0 7 7 8 83 0 8 8 14 67 0 2 2 11 83 0 11 11 15 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
9 1 6 10 1 5 11 6 5 91 0 11 0 2 3 11 2 91 0 0 0 1 0 1 87 0 7 7 8 83 0 8 8 14 67 0 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
122 120 117 113 109 105 102 99 94 91 89 83 79 77 61 53 49 47 42 40 131 36 12 17
CALL[ ]	/* CallFunction */";
};
width = 529;
}
);
note = hbar;
unicode = 295;
},
{
glyphname = hcircumflex;
kernLeft = germandbls;
kernRight = c_h;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(221.333,817,o),
(225,827.333,o),
(225,838,cs),
(225,878.963,o),
(115.877,971,o),
(92,971,cs),
(81,971,o),
(45.897,945.643,o),
(19,920.5,cs),
(-11.667,891.833,o),
(-40,856.333,o),
(-40,831,cs),
(-40,824.333,o),
(-35,817,o),
(-27,817,cs),
(-14.936,817,o),
(42.718,852.91,o),
(92,879,c),
(163.614,841.087,o),
(200.803,817,o),
(212,817,cs)
);
},
{
closed = 1;
nodes = (
(98.912,0,o),
(94.924,1,o),
(150,1,cs),
(165.333,1,o),
(180.833,1.167,o),
(196.5,1.5,cs),
(212.167,1.833,o),
(223.333,2,o),
(230,2,cs),
(262,2,o),
(278,8,o),
(278,36,cs),
(278,68,o),
(264,77,o),
(228,77,cs),
(156,77,l),
(156,182,ls),
(156,264.339,o),
(227.883,343,o),
(307,343,cs),
(331,343,o),
(345,335.667,o),
(353,329,cs),
(373.402,311.512,o),
(377,282.173,o),
(377,211,cs),
(377,179.406,o),
(374.787,80.659,o),
(373,61,cs),
(370.003,25.034,o),
(368.909,20.364,o),
(343,10,cs),
(328.333,4.667,o),
(321,-8,o),
(321,-28,cs),
(321,-41.333,o),
(327.667,-49.833,o),
(341,-53.5,cs),
(354.333,-57.167,o),
(376.333,-59,o),
(407,-59,cs),
(422.333,-59,o),
(435,-58.833,o),
(445,-58.5,cs),
(455,-58.167,o),
(462.667,-58,o),
(468,-58,cs),
(477.333,-58,o),
(489.833,-57.667,o),
(505.5,-57,cs),
(521.167,-56.333,o),
(533.333,-56,o),
(542,-56,cs),
(563.333,-56,o),
(584,-45.667,o),
(584,-19,cs),
(584,14.333,o),
(556.333,19,o),
(527,19,cs),
(466,19,l),
(466,187,ls),
(466,233,o),
(464.167,270.333,o),
(460.5,299,cs),
(456.833,327.667,o),
(452.667,348,o),
(448,360,cs),
(425.333,416,o),
(387.333,430,o),
(326,430,cs),
(255.975,430,o),
(182.032,388.075,o),
(158,332,c),
(158,791,ls),
(158,819,o),
(147.667,823,o),
(101,823,cs),
(45.667,823,o),
(6.5,819.167,o),
(-16.5,811.5,cs),
(-39.5,803.833,o),
(-51,794.667,o),
(-51,784,cs),
(-51,757.333,o),
(-19,751,o),
(21,751,cs),
(52,751,ls),
(62.667,751,o),
(66,735.667,o),
(66,721,cs),
(66,691.797,o),
(66,657.797,o),
(66,619,cs),
(66,571,o),
(65.333,503.333,o),
(64,398,cs),
(63.333,328.667,o),
(62.667,272.667,o),
(62,230,cs),
(61.333,187.333,o),
(61,155.667,o),
(61,135,cs),
(61,111.667,o),
(58.833,95.667,o),
(54.5,87,cs),
(50.167,78.333,o),
(42.667,73.333,o),
(32,72,cs),
(13.333,69.333,o),
(-2,58.333,o),
(-2,37,cs),
(-2,3.667,o),
(22.333,0,o),
(61,0,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
5 1 5 2 57 1 10 9 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 2 5 2 106 1 11 2 0 5 4 5 0 4 104 0 7 0 8 7 8 87 0 4 4 5 83 0 5 5 12 67 0 9 9 6 83 0 6 6 15 67 0 10 10 3 84 12 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 5 2 106 1 11 2 0 5 4 5 0 4 104 0 6 0 9 10 6 9 91 0 7 0 8 7 8 87 0 4 4 5 83 0 5 5 12 67 0 10 10 3 84 12 1 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 2 5 2 106 1 11 2 0 5 4 5 0 4 104 0 6 0 9 10 6 9 91 0 7 0 8 7 8 87 0 4 4 5 83 0 5 5 14 67 0 10 10 3 84 12 1 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
27 26 1 0 113 111 106 104 83 75 71 69 63 61 54 52 48 45 26 125 27 117 19 17 11 9 0 25 1 25 13 15
CALL[ ]	/* CallFunction */";
};
width = 566;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(459,389.014,o),
(395.622,428,o),
(318,428,cs),
(251.333,428,o),
(182.333,392.667,o),
(153,330,c),
(153,789,l),
(150.333,815.667,o),
(145.667,821,o),
(111,821,cs),
(5.525,821,o),
(-48,812.318,o),
(-48,787,cs),
(-48,770.717,o),
(-7.689,770,o),
(17,770,cs),
(64,770,ls),
(75.333,770,o),
(81,759,o),
(81,737,cs),
(81,691.532,o),
(79.967,599.291,o),
(78.5,435,cs),
(76.734,237.24,o),
(76,129.247,o),
(76,111,cs),
(76,86.563,o),
(70.554,57,o),
(48,57,cs),
(32,57,ls),
(16,57,o),
(-5,51,o),
(-5,27,cs),
(-5,1.667,o),
(17.667,0,o),
(39,0,cs),
(41,0,o),
(47,0,o),
(57,0,cs),
(67,0,o),
(78.667,0,o),
(92,0,cs),
(105.333,0,o),
(119.667,0.167,o),
(135,0.5,cs),
(150.333,0.833,o),
(164.667,1,o),
(178,1,cs),
(191.333,1,o),
(202.5,1,o),
(211.5,1,cs),
(220.5,1,o),
(226,1,o),
(228,1,cs),
(254.667,1,o),
(267,5.333,o),
(267,28,cs),
(267,54.667,o),
(250.667,60,o),
(228,60,cs),
(148,60,l),
(148,186,ls),
(148,217.333,o),
(156.333,248.667,o),
(173,280,cs),
(199.667,329.333,o),
(243,368,o),
(299,368,cs),
(386.923,368,o),
(389,286.869,o),
(389,163,cs),
(389,176.242,o),
(389.355,103.1,o),
(386,36,cs),
(383.333,4,o),
(376.333,1,o),
(343,-3,c),
(331,-5.667,o),
(315,-13.333,o),
(315,-32,cs),
(315,-54.667,o),
(330.667,-60,o),
(348,-60,cs),
(355.02,-60,o),
(416.331,-58,o),
(532,-58,cs),
(552,-58,o),
(569,-53,o),
(569,-33,cs),
(569,-5.475,o),
(536.64,0,o),
(513,0,cs),
(459,0,l),
(459,233,l),
(459,233,l)
);
},
{
closed = 1;
nodes = (
(213,827,o),
(216,835,o),
(216,844,cs),
(216,879,o),
(110,972,o),
(85,972,cs),
(63,972,o),
(-45,881,o),
(-45,840,cs),
(-45,831,o),
(-41,827,o),
(-34,827,cs),
(-19,827,o),
(12,855,o),
(85,898,c),
(98,890,o),
(192,827,o),
(205,827,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
106 1 9 11 91 1 6 7 92 1 3 2 24 1 4 3 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 11 9 11 106 10 12 2 9 7 9 106 0 0 0 1 0 1 87 0 6 6 7 83 0 7 7 12 67 0 2 2 8 83 0 8 8 15 67 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 11 9 11 106 10 12 2 9 7 9 106 0 8 0 2 3 8 2 91 0 0 0 1 0 1 87 0 6 6 7 83 0 7 7 12 67 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 11 9 11 106 10 12 2 9 7 9 106 0 8 0 2 3 8 2 91 0 0 0 1 0 1 87 0 6 6 7 83 0 7 7 14 67 5 1 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
102 101 119 117 112 110 101 125 102 125 96 94 89 87 80 76 62 59 55 46 42 40 35 33 118 33 13 28
CALL[ ]	/* CallFunction */";
};
width = 551;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(346.333,-61,o),
(359.5,-60.5,o),
(376.5,-59.5,cs),
(393.5,-58.5,o),
(409.333,-58,o),
(424,-58,cs),
(438,-58,o),
(454.5,-58.5,o),
(473.5,-59.5,cs),
(492.5,-60.5,o),
(507.333,-61,o),
(518,-61,cs),
(537.333,-61,o),
(547,-57.333,o),
(547,-50,cs),
(547,-36.667,o),
(519.667,-32,o),
(493,-32,cs),
(449,-32,l),
(449,176,ls),
(449,228,o),
(449,258.333,o),
(445,293,cs),
(439.752,340.235,o),
(419.936,428,o),
(309,428,cs),
(237,428,o),
(177.667,391,o),
(143,327,c),
(143,726,ls),
(143,780.667,o),
(139.667,799,o),
(101,799,cs),
(58.959,799,o),
(-30,793.045,o),
(-30,776,cs),
(-30,766.667,o),
(-7.667,766,o),
(11,766,cs),
(81,766,ls),
(95.667,766,o),
(103,755.333,o),
(103,734,cs),
(103,602.021,o),
(104,513.452,o),
(104,436,cs),
(104,309.52,o),
(98.749,110.485,o),
(97,72,cs),
(95.667,41.333,o),
(89.667,34.667,o),
(71,32,cs),
(45.667,29.333,o),
(26,26.667,o),
(12,24,cs),
(-2,21.333,o),
(-9,16.667,o),
(-9,10,cs),
(-9,5.333,o),
(-5.667,2.5,o),
(1,1.5,cs),
(7.667,0.5,o),
(15.667,0,o),
(25,0,cs),
(40.333,0,o),
(55.5,0.5,o),
(70.5,1.5,cs),
(85.5,2.5,o),
(100.667,3,o),
(116,3,cs),
(131.333,3,o),
(149.667,2.5,o),
(171,1.5,cs),
(192.333,0.5,o),
(212.667,0,o),
(232,0,cs),
(242.667,0,o),
(252,6,o),
(252,14,cs),
(252,26,o),
(231.333,32,o),
(210,32,cs),
(137,32,l),
(137,193,ls),
(137,301.03,o),
(197.682,399,o),
(299,399,cs),
(385.081,399,o),
(396.774,331.584,o),
(403,288,cs),
(408.837,235.471,o),
(409,126.213,o),
(409,120,cs),
(409,110.444,o),
(409.417,37.59,o),
(406,0,cs),
(403.333,-21.333,o),
(397.667,-28.333,o),
(371,-31,cs),
(345.205,-33.345,o),
(306,-36.506,o),
(306,-50,cs),
(306,-57.333,o),
(316.333,-61,o),
(337,-61,cs)
);
},
{
closed = 1;
nodes = (
(-31.916,841,o),
(20.433,889.894,o),
(73,927,c),
(149.411,873.063,o),
(178.302,841,o),
(193,841,cs),
(198.333,841,o),
(201,844.667,o),
(201,852,cs),
(201,877.329,o),
(97.852,971,o),
(73,971,cs),
(49.626,971,o),
(-54,876.933,o),
(-54,852,cs),
(-54,844.667,o),
(-51.333,841,o),
(-46,841,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
107 1 8 10 94 1 3 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 10 8 10 106 9 11 2 8 6 8 106 0 0 0 1 0 1 87 0 5 5 6 83 0 6 6 14 67 0 2 2 7 83 0 7 7 15 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 10 8 10 106 9 11 2 8 6 8 106 0 7 0 2 3 7 2 91 0 0 0 1 0 1 87 0 5 5 6 83 0 6 6 14 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 10 8 10 106 9 11 2 8 6 8 106 0 6 0 5 7 6 5 92 0 7 0 2 3 7 2 91 0 0 0 1 0 1 87 0 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
103 102 120 118 113 111 102 125 103 125 98 96 91 88 83 80 61 53 49 47 42 40 131 36 12 17
CALL[ ]	/* CallFunction */";
};
width = 529;
}
);
note = hcircumflex;
unicode = 293;
},
{
glyphname = i;
kernLeft = dotlessi;
kernRight = dotlessi;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(211,422.333,o),
(204,436,o),
(184,436,cs),
(161.333,436,o),
(120.667,434.667,o),
(82,432,cs),
(52,430,o),
(31.167,426.667,o),
(19.5,422,cs),
(7.833,417.333,o),
(2,408.333,o),
(2,395,cs),
(2,376.333,o),
(10.333,362,o),
(33,362,cs),
(38.424,362,o),
(61.013,364,o),
(101,364,cs),
(115.667,364,o),
(118.667,349.667,o),
(120,331,cs),
(122.667,287,o),
(124,258.333,o),
(124,213,cs),
(124,196.371,o),
(125.613,156.742,o),
(120,95,cs),
(118.667,80.333,o),
(101.333,76.667,o),
(80,74,cs),
(45.333,71.333,o),
(24,61.333,o),
(24,36,cs),
(24,1.404,o),
(64.287,0,o),
(93,0,cs),
(282,0,ls),
(299.333,0,o),
(312,15.667,o),
(312,37,cs),
(312,67.667,o),
(293.333,76,o),
(264,76,cs),
(211,76,l),
(211,401,l),
(211,401,l)
);
},
{
closed = 1;
nodes = (
(92,540,o),
(118.333,509,o),
(153,509,cs),
(178.497,509,o),
(221,526.946,o),
(221,584,cs),
(221,625.333,o),
(193.333,650,o),
(160,650,cs),
(112.347,650,o),
(92,604.335,o),
(92,580,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
27 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 0 5 3 4 5 91 0 2 2 3 83 0 3 3 15 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 4 0 5 3 4 5 91 0 3 0 2 0 3 2 91 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
62 60 54 52 45 40 36 29 52 32 6 17
CALL[ ]	/* CallFunction */";
};
width = 306;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(197,422.333,o),
(195,436,o),
(179,436,cs),
(145.977,436,o),
(126.021,434.925,o),
(75,431,cs),
(28.769,425.561,o),
(2,428.702,o),
(2,397,cs),
(2,389,o),
(19.333,381,o),
(30,381,cs),
(46.607,381,o),
(75.834,386,o),
(108,386,cs),
(118.667,386,o),
(121.667,375,o),
(123,359,cs),
(125.667,308.333,o),
(127,263.667,o),
(127,213,cs),
(127,174.333,o),
(127,119.667,o),
(123,77,cs),
(121.667,69.667,o),
(118.333,64.833,o),
(113,62.5,cs),
(107.667,60.167,o),
(97.667,58,o),
(83,56,cs),
(47.69,50.956,o),
(24,51.259,o),
(24,27,cs),
(24,-2.438,o),
(72.788,0,o),
(93,0,cs),
(272,0,ls),
(288,0,o),
(302,10.667,o),
(302,28,cs),
(302,54.667,o),
(283.333,58,o),
(254,58,cs),
(197,58,l),
(197,401,l),
(197,401,l)
);
},
{
closed = 1;
nodes = (
(96,545.333,o),
(118,520,o),
(146,520,cs),
(170,520,o),
(203,536,o),
(203,584,cs),
(203,618.667,o),
(179.667,639,o),
(153,639,cs),
(112.626,639,o),
(96,599.164,o),
(96,580,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
27 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
27 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 6 0 7 5 6 7 91 4 3 2 2 2 5 83 0 5 5 15 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 6 0 7 5 6 7 91 0 5 4 3 2 2 0 5 2 91 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 4 2 0 2 4 0 104 0 6 0 7 5 6 7 91 0 5 3 1 2 4 5 2 91 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
64 62 58 56 49 44 36 34 33 32 31 29 68 32 8 17
CALL[ ]	/* CallFunction */";
};
width = 292;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(252,0,ls),
(266.667,0,o),
(282,1,o),
(282,13,cs),
(282,18.333,o),
(277.667,22.167,o),
(269,24.5,cs),
(260.333,26.833,o),
(248.667,28,o),
(234,28,cs),
(172,28,l),
(172,401,ls),
(172,422.333,o),
(170,436,o),
(154,436,cs),
(136.667,436,o),
(94.333,433.667,o),
(65,431,cs),
(41.667,429.667,o),
(25.333,427.667,o),
(16,425,cs),
(6.667,422.333,o),
(2,418,o),
(2,412,cs),
(2,401.333,o),
(19.333,401,o),
(30,401,cs),
(51.074,401,o),
(82.259,406,o),
(113,406,cs),
(123.667,406,o),
(126.667,399.667,o),
(128,389,cs),
(130.667,329,o),
(132,274.333,o),
(132,213,cs),
(132,165,o),
(132,97.667,o),
(128,47,cs),
(127.333,39.667,o),
(124.167,34.667,o),
(118.5,32,cs),
(112.833,29.333,o),
(102.667,27.333,o),
(88,26,cs),
(45.333,23.333,o),
(24,18.667,o),
(24,12,cs),
(24,6,o),
(31.5,2.5,o),
(46.5,1.5,cs),
(61.5,0.5,o),
(77,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(154.667,538,o),
(177,548,o),
(177,584,cs),
(177,606.667,o),
(161.667,621,o),
(143,621,cs),
(115.258,621,o),
(102,593.895,o),
(102,580,cs),
(102,556,o),
(117.333,538,o),
(136,538,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
23 1 0 3 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
23 1 0 5 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 8 0 9 6 8 9 91 5 4 2 3 3 6 83 7 1 6 6 15 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 8 0 9 6 8 9 91 7 1 6 5 4 2 3 0 6 3 91 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 5 3 0 3 5 96 0 8 0 9 6 8 9 91 7 1 6 4 1 3 5 6 3 91 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
56 54 39 49 20 33 17 43 18 68 33 10 35
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = i;
unicode = 105;
},
{
glyphname = idotless;
kernLeft = dotlessi;
kernRight = dotlessi;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(213,422.333,o),
(211,436,o),
(195,436,cs),
(172.333,436,o),
(118.667,435,o),
(80,431,cs),
(33.333,425.667,o),
(0,420.333,o),
(0,391,cs),
(0,370.393,o),
(35.742,369,o),
(45,369,cs),
(57.074,369,o),
(79.021,374,o),
(103,374,cs),
(113.667,374,o),
(118,361,o),
(118,357,cs),
(121.571,299.857,o),
(122,270.323,o),
(122,213,cs),
(122,174.333,o),
(122,120.333,o),
(118,79,cs),
(117.333,65.667,o),
(112.333,58.667,o),
(103,58,cs),
(80.333,56,o),
(61.167,53,o),
(45.5,49,cs),
(29.833,45,o),
(22,38,o),
(22,28,cs),
(22,1.222,o),
(70.988,0,o),
(108,0,cs),
(267,0,ls),
(280.499,0,o),
(314,4.1,o),
(314,29,cs),
(314,49.667,o),
(292.333,60,o),
(249,60,cs),
(213,60,l),
(213,401,l),
(213,401,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
19 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
19 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
4 3 2 2 5 0 5 2 0 104 0 5 5 15 67 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 5 2 5 106 4 3 2 2 0 2 106 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 5 2 5 106 3 1 2 4 2 106 0 4 0 4 106 0 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
47 44 37 34 33 32 31 29 69 32 6 17
CALL[ ]	/* CallFunction */";
};
width = 303;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(196,422.333,o),
(194,436,o),
(178,436,cs),
(156.97,436,o),
(113.095,434.007,o),
(74,431,cs),
(50.667,429,o),
(32.667,426.333,o),
(20,423,cs),
(7.333,419.667,o),
(1,411.667,o),
(1,399,cs),
(1,382.862,o),
(24.969,381,o),
(39,381,cs),
(38.683,381,o),
(94.137,386,o),
(107,386,cs),
(117.667,386,o),
(120.667,377,o),
(122,369,c),
(124.667,315.667,o),
(126,267.667,o),
(126,213,cs),
(126,170.333,o),
(126,112.333,o),
(122,67,cs),
(120.667,52.333,o),
(115.667,48.667,o),
(97,46,cs),
(75,42.667,o),
(57.167,39.5,o),
(43.5,36.5,cs),
(29.833,33.5,o),
(23,28.667,o),
(23,22,cs),
(23,0.281,o),
(73.61,0,o),
(102,0,cs),
(261,0,ls),
(275.667,0,o),
(301,3,o),
(301,23,cs),
(301,39.667,o),
(281.667,48,o),
(243,48,cs),
(196,48,l),
(196,401,l),
(196,401,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
24 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
24 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
4 3 2 2 2 5 83 0 5 5 15 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 5 4 3 2 2 0 5 2 91 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 4 2 0 2 4 0 104 0 5 3 1 2 4 5 2 91 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
46 41 33 31 30 29 28 26 67 32 6 17
CALL[ ]	/* CallFunction */";
};
width = 290;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(252,0,ls),
(266.667,0,o),
(282,1,o),
(282,13,cs),
(282,18.333,o),
(277.667,22.167,o),
(269,24.5,cs),
(260.333,26.833,o),
(248.667,28,o),
(234,28,cs),
(172,28,l),
(172,401,ls),
(172,422.333,o),
(170,436,o),
(154,436,cs),
(136.667,436,o),
(94.333,433.667,o),
(65,431,cs),
(41.667,429.667,o),
(25.333,427.667,o),
(16,425,cs),
(6.667,422.333,o),
(2,418,o),
(2,412,cs),
(2,401.333,o),
(19.333,401,o),
(30,401,cs),
(51.074,401,o),
(82.259,406,o),
(113,406,cs),
(123.667,406,o),
(126.667,399.667,o),
(128,389,cs),
(130.667,329,o),
(132,274.333,o),
(132,213,cs),
(132,165,o),
(132,97.667,o),
(128,47,cs),
(127.333,39.667,o),
(124.167,34.667,o),
(118.5,32,cs),
(112.833,29.333,o),
(102.667,27.333,o),
(88,26,cs),
(45.333,23.333,o),
(24,18.667,o),
(24,12,cs),
(24,6,o),
(31.5,2.5,o),
(46.5,1.5,cs),
(61.5,0.5,o),
(77,0,o),
(93,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
22 1 0 3 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
22 1 0 5 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 4 2 3 3 6 83 7 1 6 6 15 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
7 1 6 5 4 2 3 0 6 3 91 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 5 3 0 3 5 96 7 1 6 4 1 3 5 6 3 91 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
49 20 33 17 43 18 68 32 8 23
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = dotlessi;
unicode = 305;
},
{
glyphname = iacute;
kernLeft = dotlessi;
kernRight = dotlessi;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(215,424.333,o),
(209,436,o),
(197,436,cs),
(174.004,436,o),
(124.832,434.059,o),
(82,431,cs),
(17.397,426.031,o),
(2,417.287,o),
(2,388,cs),
(2,376,o),
(16.667,369,o),
(30,369,cs),
(45.496,369,o),
(73.821,374,o),
(105,374,cs),
(109.667,374,o),
(113,371.667,o),
(115,367,cs),
(117,362.333,o),
(118.667,353.667,o),
(120,341,cs),
(124,297,o),
(124,258.333,o),
(124,213,cs),
(124,202.36,o),
(125.084,150.926,o),
(120,95,c),
(117.333,81.667,o),
(100,76.667,o),
(80,74,cs),
(37.333,67.333,o),
(24,60,o),
(24,36,cs),
(24,1.404,o),
(64.287,0,o),
(93,0,cs),
(286,0,ls),
(303.333,0,o),
(316,17,o),
(316,37,cs),
(316,67.667,o),
(302.667,76,o),
(268,76,cs),
(215,76,l),
(215,401,l),
(215,401,l)
);
},
{
closed = 1;
nodes = (
(258,667.333,o),
(230.667,688.667,o),
(188,690,cs),
(162.667,690,o),
(132,651.167,o),
(108,610.5,cs),
(87.511,575.783,o),
(66,528.988,o),
(66,524,cs),
(66,509.333,o),
(88.333,502,o),
(103,502,cs),
(120.099,502,o),
(155.389,524.679,o),
(194,559,cs),
(228.627,589.78,o),
(258,624.341,o),
(258,642,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 7 6 7 106 0 6 5 6 106 4 3 2 2 2 5 83 0 5 5 15 67 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 7 6 7 106 0 6 5 6 106 0 5 4 3 2 2 0 5 2 91 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 7 6 7 106 0 6 5 6 106 0 4 2 0 2 4 0 104 0 5 3 1 2 4 5 2 91 0 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
67 65 59 57 49 44 36 34 33 32 31 29 52 32 8 17
CALL[ ]	/* CallFunction */";
};
width = 306;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(197,422.333,o),
(195,436,o),
(179,436,cs),
(145.977,436,o),
(126.021,434.925,o),
(75,431,cs),
(28.769,425.561,o),
(2,428.702,o),
(2,397,cs),
(2,389,o),
(19.333,381,o),
(30,381,cs),
(46.607,381,o),
(75.834,386,o),
(108,386,cs),
(118.667,386,o),
(121.667,375,o),
(123,359,cs),
(125.667,308.333,o),
(127,263.667,o),
(127,213,cs),
(127,174.333,o),
(127,119.667,o),
(123,77,cs),
(121.667,69.667,o),
(118.333,64.833,o),
(113,62.5,cs),
(107.667,60.167,o),
(97.667,58,o),
(83,56,cs),
(47.69,50.956,o),
(24,51.259,o),
(24,27,cs),
(24,-2.438,o),
(72.788,0,o),
(93,0,cs),
(272,0,ls),
(288,0,o),
(302,10.667,o),
(302,28,cs),
(302,54.667,o),
(283.333,58,o),
(254,58,cs),
(197,58,l),
(197,401,l),
(197,401,l)
);
},
{
closed = 1;
nodes = (
(236,655.667,o),
(217.667,671,o),
(187,671,cs),
(168.565,671,o),
(140.366,636.522,o),
(117,600.5,cs),
(91.182,560.697,o),
(76,527.174,o),
(76,523,cs),
(76,509.667,o),
(90.333,505,o),
(101,505,cs),
(130.68,505,o),
(236,604.002,o),
(236,633,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
27 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
27 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 7 6 7 106 0 6 5 6 106 4 3 2 2 2 5 83 0 5 5 15 67 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 7 6 7 106 0 6 5 6 106 0 5 4 3 2 2 0 5 2 91 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 7 6 7 106 0 6 5 6 106 0 4 2 0 2 4 0 104 0 5 3 1 2 4 5 2 91 0 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
68 66 58 56 49 44 36 34 33 32 31 29 68 32 8 17
CALL[ ]	/* CallFunction */";
};
width = 292;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(252,0,ls),
(266.667,0,o),
(282,1,o),
(282,13,cs),
(282,18.333,o),
(277.667,22.167,o),
(269,24.5,cs),
(260.333,26.833,o),
(248.667,28,o),
(234,28,cs),
(172,28,l),
(172,401,ls),
(172,422.333,o),
(170,436,o),
(154,436,cs),
(136.667,436,o),
(94.333,433.667,o),
(65,431,cs),
(41.667,429.667,o),
(25.333,427.667,o),
(16,425,cs),
(6.667,422.333,o),
(2,418,o),
(2,412,cs),
(2,401.333,o),
(19.333,401,o),
(30,401,cs),
(51.074,401,o),
(82.259,406,o),
(113,406,cs),
(123.667,406,o),
(126.667,399.667,o),
(128,389,cs),
(130.667,329,o),
(132,274.333,o),
(132,213,cs),
(132,165,o),
(132,97.667,o),
(128,47,cs),
(127.333,39.667,o),
(124.167,34.667,o),
(118.5,32,cs),
(112.833,29.333,o),
(102.667,27.333,o),
(88,26,cs),
(45.333,23.333,o),
(24,18.667,o),
(24,12,cs),
(24,6,o),
(31.5,2.5,o),
(46.5,1.5,cs),
(61.5,0.5,o),
(77,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(117.797,510,o),
(205,597.027,o),
(205,618,cs),
(205,636.667,o),
(196.667,640,o),
(186,640,cs),
(165.822,640,o),
(91,545.882,o),
(91,521,cs),
(91,513.667,o),
(93.667,510,o),
(99,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
22 1 0 3 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
22 1 0 5 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 9 8 9 106 0 8 6 8 106 5 4 2 3 3 6 83 7 1 6 6 15 67 2 1 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 9 8 9 106 0 8 6 8 106 7 1 6 5 4 2 3 0 6 3 91 2 1 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 9 8 9 106 0 8 6 8 106 0 5 3 0 3 5 96 7 1 6 4 1 3 5 6 3 91 2 1 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
56 54 39 49 20 33 17 43 18 68 32 10 24
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = iacute;
unicode = 237;
},
{
glyphname = ibreve;
kernLeft = dotlessi;
kernRight = dotlessi;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(215,422.333,o),
(213,436,o),
(197,436,cs),
(189.168,436,o),
(124.982,437.14,o),
(82,431,cs),
(36.656,425.665,o),
(2,429.624,o),
(2,388,cs),
(2,381.333,o),
(19.333,369,o),
(30,369,cs),
(45.496,369,o),
(73.821,374,o),
(105,374,cs),
(115.667,374,o),
(118.667,359.667,o),
(120,341,cs),
(122.667,297,o),
(124,258.333,o),
(124,213,cs),
(124,202.36,o),
(125.084,150.926,o),
(120,95,cs),
(118.667,86.333,o),
(114,81.167,o),
(106,79.5,cs),
(98,77.833,o),
(89.333,76,o),
(80,74,cs),
(48.347,66.695,o),
(24,69.762,o),
(24,36,cs),
(24,1.404,o),
(64.287,0,o),
(93,0,cs),
(286,0,ls),
(303.333,0,o),
(316,17,o),
(316,37,cs),
(316,74.333,o),
(297.333,76,o),
(268,76,cs),
(215,76,l),
(215,401,l),
(215,401,l)
);
},
{
closed = 1;
nodes = (
(296,615.667,o),
(278,619,o),
(258,619,cs),
(240.667,619,o),
(226,604.667,o),
(226,590,cs),
(226,584.667,o),
(221.5,579.5,o),
(212.5,574.5,cs),
(203.5,569.5,o),
(189.333,567,o),
(170,567,cs),
(139.535,567,o),
(111,574.638,o),
(111,590,cs),
(111,612.667,o),
(97.667,619,o),
(75,619,cs),
(52.333,619,o),
(43,606.333,o),
(43,589,cs),
(43,546.333,o),
(88.333,510,o),
(175,510,cs),
(226.962,510,o),
(296,536.821,o),
(296,589,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
29 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
29 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
10 1 8 9 8 106 0 9 0 7 5 9 7 91 4 3 2 2 2 5 83 6 1 5 5 15 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
10 1 8 9 8 106 0 9 0 7 5 9 7 91 6 1 5 4 3 2 2 0 5 2 92 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
10 1 8 9 8 106 0 9 0 7 6 9 7 91 0 6 5 2 6 79 0 5 4 3 2 2 0 5 2 92 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
10 1 8 9 8 106 0 4 2 0 2 4 0 104 0 9 0 7 6 9 7 91 0 6 5 2 6 79 0 5 3 1 2 4 5 2 92 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
80 78 74 72 66 64 60 58 51 46 44 43 38 36 35 34 33 31 52 32 11 17
CALL[ ]	/* CallFunction */";
};
width = 306;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(197,422.333,o),
(195,436,o),
(179,436,cs),
(145.977,436,o),
(126.021,434.925,o),
(75,431,cs),
(28.769,425.561,o),
(2,428.702,o),
(2,397,cs),
(2,389,o),
(19.333,381,o),
(30,381,cs),
(46.607,381,o),
(75.834,386,o),
(108,386,cs),
(118.667,386,o),
(121.667,375,o),
(123,359,cs),
(125.667,308.333,o),
(127,263.667,o),
(127,213,cs),
(127,174.333,o),
(127,119.667,o),
(123,77,cs),
(121.667,69.667,o),
(118.333,64.833,o),
(113,62.5,cs),
(107.667,60.167,o),
(97.667,58,o),
(83,56,cs),
(47.69,50.956,o),
(24,51.259,o),
(24,27,cs),
(24,-2.438,o),
(72.788,0,o),
(93,0,cs),
(272,0,ls),
(288,0,o),
(302,10.667,o),
(302,28,cs),
(302,54.667,o),
(283.333,58,o),
(254,58,cs),
(197,58,l),
(197,401,l),
(197,401,l)
);
},
{
closed = 1;
nodes = (
(282,615.667,o),
(265.333,617,o),
(252,617,cs),
(237.333,617,o),
(226,604.667,o),
(226,590,cs),
(226,572.667,o),
(200.667,555,o),
(162,555,cs),
(132.309,555,o),
(97,564.446,o),
(97,590,cs),
(97,610,o),
(87.667,617,o),
(69,617,cs),
(51.667,617,o),
(43,607.667,o),
(43,589,cs),
(43,547.667,o),
(89,510,o),
(165,510,cs),
(216.467,510,o),
(282,536.998,o),
(282,589,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
27 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
27 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
9 1 7 8 2 7 79 0 8 0 6 5 8 6 91 4 3 2 2 2 5 83 0 5 5 15 67 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
9 1 7 8 2 7 79 0 8 0 6 5 8 6 91 0 5 4 3 2 2 0 5 2 91 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 4 2 0 2 4 0 104 9 1 7 8 2 7 79 0 8 0 6 5 8 6 91 0 5 3 1 2 4 5 2 91 0 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
77 75 71 69 63 61 58 56 49 44 36 34 33 32 31 29 68 32 10 17
CALL[ ]	/* CallFunction */";
};
width = 292;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(252,0,ls),
(266.667,0,o),
(282,1,o),
(282,13,cs),
(282,18.333,o),
(277.667,22.167,o),
(269,24.5,cs),
(260.333,26.833,o),
(248.667,28,o),
(234,28,cs),
(172,28,l),
(172,401,ls),
(172,422.333,o),
(170,436,o),
(154,436,cs),
(136.667,436,o),
(94.333,433.667,o),
(65,431,cs),
(41.667,429.667,o),
(25.333,427.667,o),
(16,425,cs),
(6.667,422.333,o),
(2,418,o),
(2,412,cs),
(2,401.333,o),
(19.333,401,o),
(30,401,cs),
(51.074,401,o),
(82.259,406,o),
(113,406,cs),
(123.667,406,o),
(126.667,399.667,o),
(128,389,cs),
(130.667,329,o),
(132,274.333,o),
(132,213,cs),
(132,165,o),
(132,97.667,o),
(128,47,cs),
(127.333,39.667,o),
(124.167,34.667,o),
(118.5,32,cs),
(112.833,29.333,o),
(102.667,27.333,o),
(88,26,cs),
(45.333,23.333,o),
(24,18.667,o),
(24,12,cs),
(24,6,o),
(31.5,2.5,o),
(46.5,1.5,cs),
(61.5,0.5,o),
(77,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(204.372,510,o),
(262,540.865,o),
(262,589,cs),
(262,610.333,o),
(253.667,613,o),
(243,613,cs),
(231.667,613,o),
(226,605.333,o),
(226,590,cs),
(226,562.695,o),
(186.603,535,o),
(151,535,cs),
(112.333,535,o),
(77,548.667,o),
(77,590,cs),
(77,606,o),
(74.667,613,o),
(60,613,cs),
(48.667,613,o),
(43,605,o),
(43,589,cs),
(43,547.83,o),
(93.193,510,o),
(151,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
22 1 0 3 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
22 1 0 5 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
11 1 9 10 3 9 79 0 10 0 8 6 10 8 91 5 4 2 3 3 6 83 7 1 6 6 15 67 2 1 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
11 1 9 10 3 9 79 0 10 0 8 6 10 8 91 7 1 6 5 4 2 3 0 6 3 91 2 1 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 5 3 0 3 5 96 11 1 9 10 3 9 79 0 10 0 8 6 10 8 91 7 1 6 4 1 3 5 6 3 91 2 1 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
69 67 62 60 56 54 39 49 20 33 17 43 18 68 32 12 24
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = ibreve;
unicode = 301;
},
{
glyphname = icircumflex;
kernLeft = dotlessi;
kernRight = dotlessi;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(215,422.333,o),
(213,436,o),
(197,436,cs),
(189.168,436,o),
(124.982,437.14,o),
(82,431,cs),
(36.656,425.665,o),
(2,429.624,o),
(2,388,cs),
(2,381.333,o),
(19.333,369,o),
(30,369,cs),
(45.496,369,o),
(73.821,374,o),
(105,374,cs),
(115.667,374,o),
(118.667,359.667,o),
(120,341,cs),
(122.667,297,o),
(124,258.333,o),
(124,213,cs),
(124,202.36,o),
(125.084,150.926,o),
(120,95,cs),
(118.667,86.333,o),
(114,81.167,o),
(106,79.5,cs),
(98,77.833,o),
(89.333,76,o),
(80,74,cs),
(48.347,66.695,o),
(24,69.762,o),
(24,36,cs),
(24,1.404,o),
(64.287,0,o),
(93,0,cs),
(286,0,ls),
(303.333,0,o),
(316,17,o),
(316,37,cs),
(316,74.333,o),
(297.333,76,o),
(268,76,cs),
(215,76,l),
(215,401,l),
(215,401,l)
);
},
{
closed = 1;
nodes = (
(264.333,510,o),
(268,520.333,o),
(268,531,cs),
(268,571.963,o),
(158.877,664,o),
(135,664,cs),
(124,664,o),
(88.897,638.643,o),
(62,613.5,cs),
(31.333,584.833,o),
(3,549.333,o),
(3,524,cs),
(3,517.333,o),
(8,510,o),
(16,510,cs),
(28.064,510,o),
(85.718,545.91,o),
(135,572,c),
(206.614,534.087,o),
(243.803,510,o),
(255,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
59 1 7 9 29 1 0 2 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
59 1 7 9 29 1 0 4 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 9 7 9 106 8 10 2 7 5 7 106 4 3 2 2 2 5 83 6 1 5 5 15 67 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 9 7 9 106 8 10 2 7 5 7 106 6 1 5 4 3 2 2 0 5 2 91 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 9 7 9 106 8 10 2 7 6 7 106 0 6 5 2 6 79 0 5 4 3 2 2 0 5 2 91 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 9 7 9 106 8 10 2 7 6 7 106 0 4 2 0 2 4 0 104 0 6 5 2 6 79 0 5 3 1 2 4 5 2 91 0 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
55 54 73 71 65 63 54 79 55 79 51 46 44 43 38 36 35 34 33 31 52 32 11 17
CALL[ ]	/* CallFunction */";
};
width = 306;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(197,422.333,o),
(195,436,o),
(179,436,cs),
(145.977,436,o),
(126.021,434.925,o),
(75,431,cs),
(28.769,425.561,o),
(2,428.702,o),
(2,397,cs),
(2,389,o),
(19.333,381,o),
(30,381,cs),
(46.607,381,o),
(75.834,386,o),
(108,386,cs),
(118.667,386,o),
(121.667,375,o),
(123,359,cs),
(125.667,308.333,o),
(127,263.667,o),
(127,213,cs),
(127,174.333,o),
(127,119.667,o),
(123,77,cs),
(121.667,69.667,o),
(118.333,64.833,o),
(113,62.5,cs),
(107.667,60.167,o),
(97.667,58,o),
(83,56,cs),
(47.69,50.956,o),
(24,51.259,o),
(24,27,cs),
(24,-2.438,o),
(72.788,0,o),
(93,0,cs),
(272,0,ls),
(288,0,o),
(302,10.667,o),
(302,28,cs),
(302,54.667,o),
(283.333,58,o),
(254,58,cs),
(197,58,l),
(197,401,l),
(197,401,l)
);
},
{
closed = 1;
nodes = (
(256,510,o),
(259,517.667,o),
(259,527,cs),
(259,562.213,o),
(152.595,655,o),
(128,655,cs),
(105.925,655,o),
(-2,563.906,o),
(-2,523,cs),
(-2,514.333,o),
(1.667,510,o),
(9,510,cs),
(23.506,510,o),
(55.117,538.127,o),
(128,581,c),
(140.77,573.488,o),
(235.478,510,o),
(248,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
57 1 6 8 27 1 0 2 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
57 1 6 8 27 1 0 4 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 8 6 8 106 7 9 2 6 5 6 106 4 3 2 2 2 5 83 0 5 5 15 67 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 8 6 8 106 7 9 2 6 5 6 106 0 5 4 3 2 2 0 5 2 91 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 8 6 8 106 7 9 2 6 5 6 106 0 4 2 0 2 4 0 104 0 5 3 1 2 4 5 2 91 0 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
53 52 70 68 63 61 52 76 53 76 49 44 36 34 33 32 31 29 68 32 10 17
CALL[ ]	/* CallFunction */";
};
width = 292;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(252,0,ls),
(266.667,0,o),
(282,1,o),
(282,13,cs),
(282,18.333,o),
(277.667,22.167,o),
(269,24.5,cs),
(260.333,26.833,o),
(248.667,28,o),
(234,28,cs),
(172,28,l),
(172,401,ls),
(172,422.333,o),
(170,436,o),
(154,436,cs),
(136.667,436,o),
(94.333,433.667,o),
(65,431,cs),
(41.667,429.667,o),
(25.333,427.667,o),
(16,425,cs),
(6.667,422.333,o),
(2,418,o),
(2,412,cs),
(2,401.333,o),
(19.333,401,o),
(30,401,cs),
(51.074,401,o),
(82.259,406,o),
(113,406,cs),
(123.667,406,o),
(126.667,399.667,o),
(128,389,cs),
(130.667,329,o),
(132,274.333,o),
(132,213,cs),
(132,165,o),
(132,97.667,o),
(128,47,cs),
(127.333,39.667,o),
(124.167,34.667,o),
(118.5,32,cs),
(112.833,29.333,o),
(102.667,27.333,o),
(88,26,cs),
(45.333,23.333,o),
(24,18.667,o),
(24,12,cs),
(24,6,o),
(31.5,2.5,o),
(46.5,1.5,cs),
(61.5,0.5,o),
(77,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(13.084,510,o),
(65.433,558.894,o),
(118,596,c),
(194.411,542.063,o),
(223.302,510,o),
(238,510,cs),
(243.333,510,o),
(246,513.667,o),
(246,521,cs),
(246,546.329,o),
(142.852,640,o),
(118,640,cs),
(94.626,640,o),
(-9,545.933,o),
(-9,521,cs),
(-9,513.667,o),
(-6.333,510,o),
(-1,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
48 1 8 10 22 1 0 3 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
48 1 8 10 22 1 0 5 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 10 8 10 106 9 11 2 8 6 8 106 5 4 2 3 3 6 83 7 1 6 6 15 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 10 8 10 106 9 11 2 8 6 8 106 7 1 6 5 4 2 3 0 6 3 92 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 10 8 10 106 9 11 2 8 6 8 106 0 5 3 0 3 5 96 7 1 6 4 1 3 5 6 3 92 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
44 43 61 59 54 52 43 66 44 66 49 20 33 17 43 18 68 32 12 23
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = icircumflex;
unicode = 238;
},
{
glyphname = idieresis;
kernLeft = dotlessi;
kernRight = dotlessi;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(215,422.333,o),
(213,436,o),
(197,436,cs),
(189.168,436,o),
(124.982,437.14,o),
(82,431,cs),
(36.656,425.665,o),
(2,429.624,o),
(2,388,cs),
(2,381.333,o),
(19.333,369,o),
(30,369,cs),
(45.496,369,o),
(73.821,374,o),
(105,374,cs),
(115.667,374,o),
(118.667,359.667,o),
(120,341,cs),
(122.667,297,o),
(124,258.333,o),
(124,213,cs),
(124,202.36,o),
(125.084,150.926,o),
(120,95,cs),
(118.667,86.333,o),
(114,81.167,o),
(106,79.5,cs),
(98,77.833,o),
(89.333,76,o),
(80,74,cs),
(48.347,66.695,o),
(24,69.762,o),
(24,36,cs),
(24,1.404,o),
(64.287,0,o),
(93,0,cs),
(286,0,ls),
(303.333,0,o),
(316,17,o),
(316,37,cs),
(316,74.333,o),
(297.333,76,o),
(268,76,cs),
(215,76,l),
(215,401,l),
(215,401,l)
);
},
{
closed = 1;
nodes = (
(1,536.333,o),
(26.667,509,o),
(60,509,cs),
(89.675,509,o),
(127,523.646,o),
(127,579,cs),
(127,615,o),
(99,640,o),
(67,640,cs),
(20.034,640,o),
(1,598.847,o),
(1,575,cs)
);
},
{
closed = 1;
nodes = (
(208,513.333,o),
(233.667,486,o),
(267,486,cs),
(296.675,486,o),
(334,500.646,o),
(334,556,cs),
(334,592,o),
(306,617,o),
(274,617,cs),
(227.034,617,o),
(208,575.847,o),
(208,552,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
29 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
29 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 7 0 8 10 7 8 91 0 9 0 10 5 9 10 91 4 3 2 2 2 5 83 6 1 5 5 15 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 7 0 8 10 7 8 91 0 9 0 10 5 9 10 91 6 1 5 4 3 2 2 0 5 2 91 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 7 0 8 10 7 8 91 0 9 0 10 6 9 10 91 0 6 5 2 6 79 0 5 4 3 2 2 0 5 2 91 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 4 2 0 2 4 0 104 0 7 0 8 10 7 8 91 0 9 0 10 6 9 10 91 0 6 5 2 6 79 0 5 3 1 2 4 5 2 91 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
84 82 76 74 68 66 60 58 51 46 44 43 38 36 35 34 33 31 52 32 11 17
CALL[ ]	/* CallFunction */";
};
width = 306;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(197,422.333,o),
(195,436,o),
(179,436,cs),
(145.977,436,o),
(126.021,434.925,o),
(75,431,cs),
(28.769,425.561,o),
(2,428.702,o),
(2,397,cs),
(2,389,o),
(19.333,381,o),
(30,381,cs),
(46.607,381,o),
(75.834,386,o),
(108,386,cs),
(118.667,386,o),
(121.667,375,o),
(123,359,cs),
(125.667,308.333,o),
(127,263.667,o),
(127,213,cs),
(127,174.333,o),
(127,119.667,o),
(123,77,cs),
(121.667,69.667,o),
(118.333,64.833,o),
(113,62.5,cs),
(107.667,60.167,o),
(97.667,58,o),
(83,56,cs),
(47.69,50.956,o),
(24,51.259,o),
(24,27,cs),
(24,-2.438,o),
(72.788,0,o),
(93,0,cs),
(272,0,ls),
(288,0,o),
(302,10.667,o),
(302,28,cs),
(302,54.667,o),
(283.333,58,o),
(254,58,cs),
(197,58,l),
(197,401,l),
(197,401,l)
);
},
{
closed = 1;
nodes = (
(4,541.667,o),
(26.333,518,o),
(53,518,cs),
(78.333,518,o),
(109,531,o),
(109,579,cs),
(109,609.667,o),
(86.667,631,o),
(60,631,cs),
(21.685,631,o),
(4,595.643,o),
(4,575,cs)
);
},
{
closed = 1;
nodes = (
(211,518.667,o),
(233.333,495,o),
(260,495,cs),
(285.333,495,o),
(316,508,o),
(316,556,cs),
(316,586.667,o),
(293.667,608,o),
(267,608,cs),
(228.685,608,o),
(211,572.643,o),
(211,552,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
27 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
27 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 6 0 7 9 6 7 91 0 8 0 9 5 8 9 91 4 3 2 2 2 5 83 0 5 5 15 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 6 0 7 9 6 7 91 0 8 0 9 5 8 9 91 0 5 4 3 2 2 0 5 2 91 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 4 2 0 2 4 0 104 0 6 0 7 9 6 7 91 0 8 0 9 5 8 9 91 0 5 3 1 2 4 5 2 91 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
78 76 72 70 64 62 58 56 49 44 36 34 33 32 31 29 68 32 10 17
CALL[ ]	/* CallFunction */";
};
width = 292;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(252,0,ls),
(266.667,0,o),
(282,1,o),
(282,13,cs),
(282,18.333,o),
(277.667,22.167,o),
(269,24.5,cs),
(260.333,26.833,o),
(248.667,28,o),
(234,28,cs),
(172,28,l),
(172,401,ls),
(172,422.333,o),
(170,436,o),
(154,436,cs),
(136.667,436,o),
(94.333,433.667,o),
(65,431,cs),
(41.667,429.667,o),
(25.333,427.667,o),
(16,425,cs),
(6.667,422.333,o),
(2,418,o),
(2,412,cs),
(2,401.333,o),
(19.333,401,o),
(30,401,cs),
(51.074,401,o),
(82.259,406,o),
(113,406,cs),
(123.667,406,o),
(126.667,399.667,o),
(128,389,cs),
(130.667,329,o),
(132,274.333,o),
(132,213,cs),
(132,165,o),
(132,97.667,o),
(128,47,cs),
(127.333,39.667,o),
(124.167,34.667,o),
(118.5,32,cs),
(112.833,29.333,o),
(102.667,27.333,o),
(88,26,cs),
(45.333,23.333,o),
(24,18.667,o),
(24,12,cs),
(24,6,o),
(31.5,2.5,o),
(46.5,1.5,cs),
(61.5,0.5,o),
(77,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(61.667,533,o),
(84,543,o),
(84,579,cs),
(84,601.667,o),
(68.667,616,o),
(50,616,cs),
(22.258,616,o),
(9,588.895,o),
(9,575,cs),
(9,551,o),
(24.333,533,o),
(43,533,cs)
);
},
{
closed = 1;
nodes = (
(268.667,510,o),
(291,520,o),
(291,556,cs),
(291,578.667,o),
(275.667,593,o),
(257,593,cs),
(229.258,593,o),
(216,565.895,o),
(216,552,cs),
(216,528,o),
(231.333,510,o),
(250,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
22 1 0 3 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
22 1 0 5 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 8 0 9 11 8 9 91 0 10 0 11 6 10 11 91 5 4 2 3 3 6 83 7 1 6 6 15 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 8 0 9 11 8 9 91 0 10 0 11 6 10 11 91 7 1 6 5 4 2 3 0 6 3 91 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 5 3 0 3 5 96 0 8 0 9 11 8 9 91 0 10 0 11 6 10 11 91 7 1 6 4 1 3 5 6 3 91 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
69 67 63 61 55 53 39 49 20 33 17 43 18 68 32 12 24
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = idieresis;
unicode = 239;
},
{
glyphname = igrave;
kernLeft = dotlessi;
kernRight = dotlessi;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-16,606.193,o),
(101.363,500,o),
(139,500,cs),
(153.667,500,o),
(176,507.333,o),
(176,522,cs),
(176,526.988,o),
(154.489,573.783,o),
(134,608.5,cs),
(110,649.167,o),
(79.333,688,o),
(54,688,cs),
(11.333,686.667,o),
(-16,665.333,o),
(-16,640,cs)
);
},
{
closed = 1;
nodes = (
(215,424.333,o),
(209,436,o),
(197,436,cs),
(174.004,436,o),
(124.832,434.059,o),
(82,431,cs),
(17.397,426.031,o),
(2,417.287,o),
(2,388,cs),
(2,376,o),
(16.667,369,o),
(30,369,cs),
(45.496,369,o),
(73.821,374,o),
(105,374,cs),
(109.667,374,o),
(113,371.667,o),
(115,367,cs),
(117,362.333,o),
(118.667,353.667,o),
(120,341,cs),
(124,297,o),
(124,258.333,o),
(124,213,cs),
(124,202.36,o),
(125.084,150.926,o),
(120,95,c),
(117.333,81.667,o),
(100,76.667,o),
(80,74,cs),
(37.333,67.333,o),
(24,60,o),
(24,36,cs),
(24,1.404,o),
(64.287,0,o),
(93,0,cs),
(286,0,ls),
(303.333,0,o),
(316,17,o),
(316,37,cs),
(316,67.667,o),
(302.667,76,o),
(268,76,cs),
(215,76,l),
(215,401,l),
(215,401,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 1 0 7 0 1 7 104 0 0 1 4 0 79 6 5 2 4 4 7 83 0 7 7 15 67 0 2 2 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 1 0 7 0 1 7 104 0 0 1 4 0 79 0 7 6 5 2 4 2 7 4 91 0 2 2 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 7 0 1 7 104 0 6 4 2 4 6 96 0 0 1 4 0 79 0 7 5 1 4 6 7 4 91 0 2 2 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
65 60 52 50 49 48 47 45 52 36 38 34 8 19
CALL[ ]	/* CallFunction */";
};
width = 306;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(197,422.333,o),
(195,436,o),
(179,436,cs),
(145.977,436,o),
(126.021,434.925,o),
(75,431,cs),
(28.769,425.561,o),
(2,428.702,o),
(2,397,cs),
(2,389,o),
(19.333,381,o),
(30,381,cs),
(46.607,381,o),
(75.834,386,o),
(108,386,cs),
(118.667,386,o),
(121.667,375,o),
(123,359,cs),
(125.667,308.333,o),
(127,263.667,o),
(127,213,cs),
(127,174.333,o),
(127,119.667,o),
(123,77,cs),
(121.667,69.667,o),
(118.333,64.833,o),
(113,62.5,cs),
(107.667,60.167,o),
(97.667,58,o),
(83,56,cs),
(47.69,50.956,o),
(24,51.259,o),
(24,27,cs),
(24,-2.438,o),
(72.788,0,o),
(93,0,cs),
(272,0,ls),
(288,0,o),
(302,10.667,o),
(302,28,cs),
(302,54.667,o),
(283.333,58,o),
(254,58,cs),
(197,58,l),
(197,401,l),
(197,401,l)
);
},
{
closed = 1;
nodes = (
(68,603.002,o),
(173.32,504,o),
(203,504,cs),
(213.667,504,o),
(228,508.667,o),
(228,522,cs),
(228,526.174,o),
(212.818,559.697,o),
(187,599.5,cs),
(163.693,635.432,o),
(134.801,670,o),
(117,670,cs),
(86.333,670,o),
(68,654.667,o),
(68,632,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
27 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
27 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 6 7 6 106 0 7 5 7 106 4 3 2 2 2 5 83 0 5 5 15 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 6 7 6 106 0 7 5 7 106 0 5 4 3 2 2 0 5 2 92 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 6 7 6 106 0 7 5 7 106 0 4 2 0 2 4 0 104 0 5 3 1 2 4 5 2 92 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
66 64 56 54 49 44 36 34 33 32 31 29 68 32 8 17
CALL[ ]	/* CallFunction */";
};
width = 292;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(252,0,ls),
(266.667,0,o),
(282,1,o),
(282,13,cs),
(282,18.333,o),
(277.667,22.167,o),
(269,24.5,cs),
(260.333,26.833,o),
(248.667,28,o),
(234,28,cs),
(172,28,l),
(172,401,ls),
(172,422.333,o),
(170,436,o),
(154,436,cs),
(136.667,436,o),
(94.333,433.667,o),
(65,431,cs),
(41.667,429.667,o),
(25.333,427.667,o),
(16,425,cs),
(6.667,422.333,o),
(2,418,o),
(2,412,cs),
(2,401.333,o),
(19.333,401,o),
(30,401,cs),
(51.074,401,o),
(82.259,406,o),
(113,406,cs),
(123.667,406,o),
(126.667,399.667,o),
(128,389,cs),
(130.667,329,o),
(132,274.333,o),
(132,213,cs),
(132,165,o),
(132,97.667,o),
(128,47,cs),
(127.333,39.667,o),
(124.167,34.667,o),
(118.5,32,cs),
(112.833,29.333,o),
(102.667,27.333,o),
(88,26,cs),
(45.333,23.333,o),
(24,18.667,o),
(24,12,cs),
(24,6,o),
(31.5,2.5,o),
(46.5,1.5,cs),
(61.5,0.5,o),
(77,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(203.333,510,o),
(206,513.667,o),
(206,521,cs),
(206,545.882,o),
(131.178,640,o),
(111,640,cs),
(100.333,640,o),
(92,636.667,o),
(92,618,cs),
(92,597.027,o),
(179.203,510,o),
(198,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
22 1 0 3 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
22 1 0 5 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 8 9 8 106 0 9 6 9 106 5 4 2 3 3 6 83 7 1 6 6 15 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 8 9 8 106 0 9 6 9 106 7 1 6 5 4 2 3 0 6 3 92 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 8 9 8 106 0 9 6 9 106 0 5 3 0 3 5 96 7 1 6 4 1 3 5 6 3 92 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
54 52 37 49 20 33 17 43 18 68 32 10 24
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = igrave;
unicode = 236;
},
{
glyphname = imacron;
kernLeft = dotlessi;
kernRight = dotlessi;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(215,422.333,o),
(213,436,o),
(197,436,cs),
(189.168,436,o),
(124.982,437.14,o),
(82,431,cs),
(36.656,425.665,o),
(2,429.624,o),
(2,388,cs),
(2,381.333,o),
(19.333,369,o),
(30,369,cs),
(45.496,369,o),
(73.821,374,o),
(105,374,cs),
(115.667,374,o),
(118.667,359.667,o),
(120,341,cs),
(122.667,297,o),
(124,258.333,o),
(124,213,cs),
(124,202.36,o),
(125.084,150.926,o),
(120,95,cs),
(118.667,86.333,o),
(114,81.167,o),
(106,79.5,cs),
(98,77.833,o),
(89.333,76,o),
(80,74,cs),
(48.347,66.695,o),
(24,69.762,o),
(24,36,cs),
(24,1.404,o),
(64.287,0,o),
(93,0,cs),
(286,0,ls),
(303.333,0,o),
(316,17,o),
(316,37,cs),
(316,74.333,o),
(297.333,76,o),
(268,76,cs),
(215,76,l),
(215,401,l),
(215,401,l)
);
},
{
closed = 1;
nodes = (
(267,617,o),
(248.667,616.5,o),
(228,615.5,cs),
(207.333,614.5,o),
(183,614,o),
(155,614,cs),
(112.698,614,o),
(64.437,616,o),
(34,616,cs),
(11.333,616,o),
(1,595.667,o),
(1,577,cs),
(1,558.333,o),
(15.333,537,o),
(34,537,cs),
(104.305,537,o),
(201.446,538,o),
(275,538,cs),
(303.782,538,o),
(311,564.801,o),
(311,580,cs),
(311,600,o),
(297.667,617,o),
(283,617,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
29 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
29 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
9 1 7 0 8 5 7 8 91 4 3 2 2 2 5 83 6 1 5 5 15 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
9 1 7 0 8 5 7 8 91 6 1 5 4 3 2 2 0 5 2 91 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
9 1 7 0 8 6 7 8 91 0 6 5 2 6 79 0 5 4 3 2 2 0 5 2 91 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 4 2 0 2 4 0 104 9 1 7 0 8 6 7 8 91 0 6 5 2 6 79 0 5 3 1 2 4 5 2 91 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
55 54 68 61 54 80 55 72 51 46 44 43 38 36 35 34 33 31 52 32 10 17
CALL[ ]	/* CallFunction */";
};
width = 306;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(197,422.333,o),
(195,436,o),
(179,436,cs),
(145.977,436,o),
(126.021,434.925,o),
(75,431,cs),
(28.769,425.561,o),
(2,428.702,o),
(2,397,cs),
(2,389,o),
(19.333,381,o),
(30,381,cs),
(46.607,381,o),
(75.834,386,o),
(108,386,cs),
(118.667,386,o),
(121.667,375,o),
(123,359,cs),
(125.667,308.333,o),
(127,263.667,o),
(127,213,cs),
(127,174.333,o),
(127,119.667,o),
(123,77,cs),
(121.667,69.667,o),
(118.333,64.833,o),
(113,62.5,cs),
(107.667,60.167,o),
(97.667,58,o),
(83,56,cs),
(47.69,50.956,o),
(24,51.259,o),
(24,27,cs),
(24,-2.438,o),
(72.788,0,o),
(93,0,cs),
(272,0,ls),
(288,0,o),
(302,10.667,o),
(302,28,cs),
(302,54.667,o),
(283.333,58,o),
(254,58,cs),
(197,58,l),
(197,401,l),
(197,401,l)
);
},
{
closed = 1;
nodes = (
(259,587,o),
(240.667,586.5,o),
(220,585.5,cs),
(199.333,584.5,o),
(175,584,o),
(147,584,cs),
(104.698,584,o),
(56.437,586,o),
(26,586,cs),
(7.333,586,o),
(0,570.667,o),
(0,556,cs),
(0,541.333,o),
(11.333,525,o),
(26,525,cs),
(96.305,525,o),
(193.446,526,o),
(267,526,cs),
(289.667,526,o),
(296,548.333,o),
(296,559,cs),
(296,573.667,o),
(285.667,587,o),
(275,587,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
27 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
27 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
8 1 6 0 7 5 6 7 91 4 3 2 2 2 5 83 0 5 5 15 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
8 1 6 0 7 5 6 7 91 0 5 4 3 2 2 0 5 2 91 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 4 2 0 2 4 0 104 8 1 6 0 7 5 6 7 91 0 5 3 1 2 4 5 2 91 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
53 52 64 57 52 76 53 68 49 44 36 34 33 32 31 29 68 32 9 17
CALL[ ]	/* CallFunction */";
};
width = 292;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(252,0,ls),
(266.667,0,o),
(282,1,o),
(282,13,cs),
(282,18.333,o),
(277.667,22.167,o),
(269,24.5,cs),
(260.333,26.833,o),
(248.667,28,o),
(234,28,cs),
(172,28,l),
(172,401,ls),
(172,422.333,o),
(170,436,o),
(154,436,cs),
(136.667,436,o),
(94.333,433.667,o),
(65,431,cs),
(41.667,429.667,o),
(25.333,427.667,o),
(16,425,cs),
(6.667,422.333,o),
(2,418,o),
(2,412,cs),
(2,401.333,o),
(19.333,401,o),
(30,401,cs),
(51.074,401,o),
(82.259,406,o),
(113,406,cs),
(123.667,406,o),
(126.667,399.667,o),
(128,389,cs),
(130.667,329,o),
(132,274.333,o),
(132,213,cs),
(132,165,o),
(132,97.667,o),
(128,47,cs),
(127.333,39.667,o),
(124.167,34.667,o),
(118.5,32,cs),
(112.833,29.333,o),
(102.667,27.333,o),
(88,26,cs),
(45.333,23.333,o),
(24,18.667,o),
(24,12,cs),
(24,6,o),
(31.5,2.5,o),
(46.5,1.5,cs),
(61.5,0.5,o),
(77,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(85.305,510,o),
(182.446,511,o),
(256,511,cs),
(270.667,511,o),
(275,522.333,o),
(275,529,cs),
(275,535.667,o),
(269.333,542,o),
(264,542,cs),
(248,542,o),
(229.667,541.5,o),
(209,540.5,cs),
(188.333,539.5,o),
(164,539,o),
(136,539,cs),
(93.698,539,o),
(45.437,541,o),
(15,541,cs),
(4.333,541,o),
(-1,532.667,o),
(-1,526,cs),
(-1,519.333,o),
(5.667,510,o),
(15,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
22 1 0 3 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
22 1 0 5 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
10 1 8 0 9 6 8 9 91 5 4 2 3 3 6 83 7 1 6 6 15 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
10 1 8 0 9 6 8 9 91 7 1 6 5 4 2 3 0 6 3 91 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 5 3 0 3 5 0 104 10 1 8 0 9 6 8 9 91 7 1 6 4 1 3 5 6 3 91 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
44 43 55 48 43 67 44 59 49 20 33 17 43 18 68 32 11 23
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = imacron;
unicode = 299;
},
{
glyphname = iogonek;
kernLeft = dotlessi;
kernRight = dotlessi;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(236.345,-149,o),
(267,-119.646,o),
(267,-96,cs),
(267,-84,o),
(255.333,-72,o),
(242,-72,cs),
(222.449,-72,o),
(223.136,-96,o),
(182,-96,cs),
(167.333,-96,o),
(153,-89.667,o),
(153,-75,cs),
(153,-52.333,o),
(164.667,-18.667,o),
(186,0,c),
(282,0,ls),
(299.333,0,o),
(312,15.667,o),
(312,37,cs),
(312,67.667,o),
(293.333,76,o),
(264,76,cs),
(211,76,l),
(211,401,ls),
(211,422.333,o),
(204,436,o),
(184,436,cs),
(161.333,436,o),
(120.667,434.667,o),
(82,432,cs),
(52,430,o),
(31.167,426.667,o),
(19.5,422,cs),
(7.833,417.333,o),
(2,408.333,o),
(2,395,cs),
(2,376.333,o),
(10.333,362,o),
(33,362,cs),
(38.424,362,o),
(61.013,364,o),
(101,364,cs),
(115.667,364,o),
(118.667,349.667,o),
(120,331,cs),
(122.667,287,o),
(124,258.333,o),
(124,213,cs),
(124,196.371,o),
(125.613,156.742,o),
(120,95,cs),
(118.667,80.333,o),
(101.333,76.667,o),
(80,74,cs),
(45.333,71.333,o),
(24,61.333,o),
(24,36,cs),
(24,1.404,o),
(64.287,0,o),
(93,0,cs),
(127,0,l),
(103,-14.667,o),
(74,-39.333,o),
(74,-74,cs),
(74,-125.579,o),
(134.091,-149,o),
(184,-149,cs)
);
},
{
closed = 1;
nodes = (
(92,540,o),
(118.333,509,o),
(153,509,cs),
(178.497,509,o),
(221,526.946,o),
(221,584,cs),
(221,625.333,o),
(193.333,650,o),
(160,650,cs),
(112.347,650,o),
(92,604.335,o),
(92,580,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
28 1 4 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 7 1 6 1 7 6 104 0 8 0 9 3 8 9 91 0 6 10 1 0 6 0 87 0 2 2 3 83 0 3 3 15 67 0 4 4 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 7 1 6 1 7 6 104 0 8 0 9 3 8 9 91 0 3 0 2 4 3 2 91 0 6 10 1 0 6 0 87 0 4 4 1 83 5 1 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 90 88 82 80 69 67 64 62 57 55 51 49 46 41 37 30 10 8 0 75 1 75 11 15
CALL[ ]	/* CallFunction */";
};
width = 308;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(197,422.333,o),
(195,436,o),
(179,436,cs),
(145.977,436,o),
(126.021,434.925,o),
(75,431,cs),
(28.769,425.561,o),
(2,428.702,o),
(2,397,cs),
(2,389,o),
(19.333,381,o),
(30,381,cs),
(46.607,381,o),
(75.834,386,o),
(108,386,cs),
(118.667,386,o),
(121.667,375,o),
(123,359,cs),
(125.667,308.333,o),
(127,263.667,o),
(127,213,cs),
(127,174.333,o),
(127,119.667,o),
(123,77,cs),
(121.667,69.667,o),
(118.333,64.833,o),
(113,62.5,cs),
(107.667,60.167,o),
(97.667,58,o),
(83,56,cs),
(47.69,50.956,o),
(24,51.259,o),
(24,27,cs),
(24,-2.438,o),
(72.788,0,o),
(93,0,cs),
(272,0,ls),
(288,0,o),
(302,10.667,o),
(302,28,cs),
(302,54.667,o),
(283.333,58,o),
(254,58,cs),
(197,58,l),
(197,401,l),
(197,401,l)
);
},
{
closed = 1;
nodes = (
(134,-2.667,o),
(121.667,-10.333,o),
(111,-19,cs),
(92.333,-33.667,o),
(75,-55.333,o),
(75,-86,cs),
(75,-128.667,o),
(117.333,-159,o),
(176,-159,cs),
(224.13,-159,o),
(254,-117.791,o),
(254,-108,cs),
(254,-97.333,o),
(247.667,-86,o),
(233,-86,cs),
(229,-86,o),
(224.667,-88,o),
(220,-92,cs),
(214.667,-96.667,o),
(209.167,-101.833,o),
(203.5,-107.5,cs),
(197.833,-113.167,o),
(186.667,-116,o),
(170,-116,cs),
(154,-116,o),
(139,-101,o),
(139,-85,cs),
(139,-65.58,o),
(152.525,-12.158,o),
(198,3,c),
(148,4,l),
(148,4,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
27 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
27 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 0 2 9 9 0 96 0 7 1 6 1 7 6 104 0 6 0 8 6 8 87 4 3 2 2 2 5 83 0 5 5 15 67 10 1 9 9 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 0 2 9 9 0 96 0 7 1 6 1 7 6 104 0 5 4 3 2 2 0 5 2 91 0 6 0 8 6 8 87 10 1 9 9 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 2 9 2 0 9 104 0 7 1 6 1 7 6 104 0 5 4 3 2 2 0 5 2 91 0 6 0 8 6 8 87 10 1 9 9 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 4 2 0 2 4 0 104 0 0 9 2 0 9 102 0 7 1 6 1 7 6 104 0 5 3 1 2 4 5 2 91 0 6 0 8 6 8 87 10 1 9 9 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
52 52 52 81 52 81 74 72 66 64 61 59 49 44 36 34 33 32 31 29 68 32 11 17
CALL[ ]	/* CallFunction */";
};
width = 293;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(207.13,-159,o),
(237,-117.791,o),
(237,-108,cs),
(237,-100,o),
(235,-92,o),
(223,-92,cs),
(203.96,-92,o),
(197.683,-132,o),
(161,-132,cs),
(130.028,-132,o),
(122,-102.466,o),
(122,-85,cs),
(122,-66.065,o),
(133.142,-17.875,o),
(174,0,c),
(252,0,ls),
(266.667,0,o),
(282,1,o),
(282,13,cs),
(282,18.333,o),
(277.667,22.167,o),
(269,24.5,cs),
(260.333,26.833,o),
(248.667,28,o),
(234,28,cs),
(172,28,l),
(172,401,ls),
(172,422.333,o),
(170,436,o),
(154,436,cs),
(136.667,436,o),
(94.333,433.667,o),
(65,431,cs),
(41.667,429.667,o),
(25.333,427.667,o),
(16,425,cs),
(6.667,422.333,o),
(2,418,o),
(2,412,cs),
(2,401.333,o),
(19.333,401,o),
(30,401,cs),
(51.074,401,o),
(82.259,406,o),
(113,406,cs),
(123.667,406,o),
(126.667,399.667,o),
(128,389,cs),
(130.667,329,o),
(132,274.333,o),
(132,213,cs),
(132,165,o),
(132,97.667,o),
(128,47,cs),
(127.333,39.667,o),
(124.167,34.667,o),
(118.5,32,cs),
(112.833,29.333,o),
(102.667,27.333,o),
(88,26,cs),
(45.333,23.333,o),
(24,18.667,o),
(24,12,cs),
(24,6,o),
(31.5,2.5,o),
(46.5,1.5,cs),
(61.5,0.5,o),
(77,0,o),
(93,0,cs),
(138,0,l),
(120.049,-10.258,o),
(78,-37.409,o),
(78,-86,cs),
(78,-128.667,o),
(112.333,-159,o),
(159,-159,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
54 1 0 7 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
54 1 0 9 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 1 2 1 3 2 104 0 2 0 4 2 4 87 9 8 2 7 7 10 83 11 1 10 10 15 67 6 1 0 0 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 1 2 1 3 2 104 11 1 10 9 8 2 7 0 10 7 91 0 2 0 4 2 4 87 6 1 0 0 1 83 5 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 9 7 0 7 9 96 0 3 1 2 1 3 2 104 11 1 10 8 1 7 9 10 7 91 0 2 0 4 2 4 87 6 1 0 0 1 83 5 1 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
72 69 68 67 63 61 17 43 18 55 38 35 41 36 32 12 24
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = iogonek;
unicode = 303;
},
{
glyphname = itilde;
kernLeft = dotlessi;
kernRight = dotlessi;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(215,422.333,o),
(213,436,o),
(197,436,cs),
(189.168,436,o),
(124.982,437.14,o),
(82,431,cs),
(36.656,425.665,o),
(2,429.624,o),
(2,388,cs),
(2,381.333,o),
(19.333,369,o),
(30,369,cs),
(45.496,369,o),
(73.821,374,o),
(105,374,cs),
(115.667,374,o),
(118.667,359.667,o),
(120,341,cs),
(122.667,297,o),
(124,258.333,o),
(124,213,cs),
(124,202.36,o),
(125.084,150.926,o),
(120,95,cs),
(118.667,86.333,o),
(114,81.167,o),
(106,79.5,cs),
(98,77.833,o),
(89.333,76,o),
(80,74,cs),
(48.347,66.695,o),
(24,69.762,o),
(24,36,cs),
(24,1.404,o),
(64.287,0,o),
(93,0,cs),
(286,0,ls),
(303.333,0,o),
(316,17,o),
(316,37,cs),
(316,74.333,o),
(297.333,76,o),
(268,76,cs),
(215,76,l),
(215,401,l),
(215,401,l)
);
},
{
closed = 1;
nodes = (
(-3,514,o),
(4,498,o),
(16,498,cs),
(36.593,498,o),
(60.709,523,o),
(100,523,cs),
(138.662,523,o),
(181.294,499,o),
(237,499,cs),
(269.676,499,o),
(348,516.584,o),
(348,574,cs),
(348,595.333,o),
(332.667,609,o),
(326,609,cs),
(321.333,609,o),
(311.333,604.667,o),
(296,596,cs),
(277.333,585.333,o),
(254.667,579,o),
(236,579,cs),
(196.599,579,o),
(135.495,607,o),
(99,607,cs),
(74.333,607,o),
(51.667,601,o),
(31,589,cs),
(12.333,578.333,o),
(-3,563.333,o),
(-3,534,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
29 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
29 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
9 1 7 0 11 10 7 11 91 0 8 12 1 10 5 8 10 91 4 3 2 2 2 5 83 6 1 5 5 15 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
9 1 7 0 11 10 7 11 91 0 8 12 1 10 5 8 10 91 6 1 5 4 3 2 2 0 5 2 91 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
9 1 7 0 11 10 7 11 91 0 8 12 1 10 6 8 10 91 0 6 5 2 6 79 0 5 4 3 2 2 0 5 2 91 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 4 2 0 2 4 0 104 9 1 7 0 11 10 7 11 91 0 8 12 1 10 6 8 10 91 0 6 5 2 6 79 0 5 3 1 2 4 5 2 91 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
88 86 83 81 78 76 70 68 65 63 60 58 51 46 44 43 38 36 35 34 33 31 52 32 13 17
CALL[ ]	/* CallFunction */";
};
width = 306;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(197,422.333,o),
(195,436,o),
(179,436,cs),
(145.977,436,o),
(126.021,434.925,o),
(75,431,cs),
(28.769,425.561,o),
(2,428.702,o),
(2,397,cs),
(2,389,o),
(19.333,381,o),
(30,381,cs),
(46.607,381,o),
(75.834,386,o),
(108,386,cs),
(118.667,386,o),
(121.667,375,o),
(123,359,cs),
(125.667,308.333,o),
(127,263.667,o),
(127,213,cs),
(127,174.333,o),
(127,119.667,o),
(123,77,cs),
(121.667,69.667,o),
(118.333,64.833,o),
(113,62.5,cs),
(107.667,60.167,o),
(97.667,58,o),
(83,56,cs),
(47.69,50.956,o),
(24,51.259,o),
(24,27,cs),
(24,-2.438,o),
(72.788,0,o),
(93,0,cs),
(272,0,ls),
(288,0,o),
(302,10.667,o),
(302,28,cs),
(302,54.667,o),
(283.333,58,o),
(254,58,cs),
(197,58,l),
(197,401,l),
(197,401,l)
);
},
{
closed = 1;
nodes = (
(-17,546.667,o),
(-18,541,o),
(-18,535,cs),
(-18,520.333,o),
(-11.667,507,o),
(-1,507,cs),
(15.95,507,o),
(43.392,532,o),
(83,532,cs),
(121.662,532,o),
(164.294,508,o),
(220,508,cs),
(276,508,o),
(308.667,530.333,o),
(322,553,cs),
(325.333,559,o),
(327,565.333,o),
(327,572,cs),
(327,588,o),
(315.667,600,o),
(309,600,cs),
(305.667,600,o),
(302.167,599.167,o),
(298.5,597.5,cs),
(294.833,595.833,o),
(288.333,592.333,o),
(279,587,cs),
(256.333,575.667,o),
(236.333,570,o),
(219,570,cs),
(179.599,570,o),
(118.495,598,o),
(82,598,cs),
(57.333,598,o),
(34.667,592,o),
(14,580,cs),
(4,574,o),
(-3,568.667,o),
(-7,564,cs),
(-11,559.333,o),
(-13.667,555.333,o),
(-15,552,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
27 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
27 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
8 1 6 0 10 9 6 10 91 0 7 11 1 9 5 7 9 91 4 3 2 2 2 5 83 0 5 5 15 67 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
8 1 6 0 10 9 6 10 91 0 7 11 1 9 5 7 9 91 0 5 4 3 2 2 0 5 2 91 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 4 2 0 2 4 0 104 8 1 6 0 10 9 6 10 91 0 7 11 1 9 5 7 9 91 0 5 3 1 2 4 5 2 91 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
86 84 81 79 76 74 68 66 63 61 58 56 49 44 36 34 33 32 31 29 68 32 12 17
CALL[ ]	/* CallFunction */";
};
width = 292;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(252,0,ls),
(266.667,0,o),
(282,1,o),
(282,13,cs),
(282,18.333,o),
(277.667,22.167,o),
(269,24.5,cs),
(260.333,26.833,o),
(248.667,28,o),
(234,28,cs),
(172,28,l),
(172,401,ls),
(172,422.333,o),
(170,436,o),
(154,436,cs),
(136.667,436,o),
(94.333,433.667,o),
(65,431,cs),
(41.667,429.667,o),
(25.333,427.667,o),
(16,425,cs),
(6.667,422.333,o),
(2,418,o),
(2,412,cs),
(2,401.333,o),
(19.333,401,o),
(30,401,cs),
(51.074,401,o),
(82.259,406,o),
(113,406,cs),
(123.667,406,o),
(126.667,399.667,o),
(128,389,cs),
(130.667,329,o),
(132,274.333,o),
(132,213,cs),
(132,165,o),
(132,97.667,o),
(128,47,cs),
(127.333,39.667,o),
(124.167,34.667,o),
(118.5,32,cs),
(112.833,29.333,o),
(102.667,27.333,o),
(88,26,cs),
(45.333,23.333,o),
(24,18.667,o),
(24,12,cs),
(24,6,o),
(31.5,2.5,o),
(46.5,1.5,cs),
(61.5,0.5,o),
(77,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(-9.209,522,o),
(17.735,547,o),
(59,547,cs),
(97.662,547,o),
(140.294,523,o),
(196,523,cs),
(248.947,523,o),
(298,542.797,o),
(298,568,cs),
(298,577.333,o),
(291.667,585,o),
(285,585,cs),
(281.667,585,o),
(278.167,584.167,o),
(274.5,582.5,cs),
(270.833,580.833,o),
(264.333,577.333,o),
(255,572,cs),
(232.333,560.667,o),
(212.333,555,o),
(195,555,cs),
(155.599,555,o),
(94.495,583,o),
(58,583,cs),
(33.333,583,o),
(10.667,577,o),
(-10,565,cs),
(-29.333,553.667,o),
(-39,544.333,o),
(-39,537,cs),
(-39,530.333,o),
(-31.667,522,o),
(-25,522,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
22 1 0 3 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
22 1 0 5 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 6 9 11 91 5 4 2 3 3 6 83 7 1 6 6 15 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 6 9 11 91 7 1 6 5 4 2 3 0 6 3 91 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 3 0 3 5 0 104 10 1 8 0 12 11 8 12 91 0 9 13 1 11 6 9 11 91 7 1 6 4 1 3 5 6 3 91 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
76 74 71 69 66 64 58 56 53 51 38 49 20 33 17 43 18 68 32 14 24
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = itilde;
unicode = 297;
},
{
glyphname = ij;
kernLeft = dotlessi;
kernRight = dotlessj;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(213,422.333,o),
(206,436,o),
(186,436,cs),
(163.333,436,o),
(122.667,434.667,o),
(84,432,cs),
(54,430,o),
(33.167,426.667,o),
(21.5,422,cs),
(9.833,417.333,o),
(4,408.333,o),
(4,395,cs),
(4,376.333,o),
(12.333,362,o),
(35,362,cs),
(40.424,362,o),
(63.013,364,o),
(103,364,cs),
(117.667,364,o),
(120.667,349.667,o),
(122,331,cs),
(124.667,287,o),
(126,258.333,o),
(126,213,cs),
(126,196.371,o),
(127.613,156.742,o),
(122,95,cs),
(120.667,80.333,o),
(103.333,76.667,o),
(82,74,cs),
(47.333,71.333,o),
(26,61.333,o),
(26,36,cs),
(26,1.404,o),
(66.287,0,o),
(95,0,cs),
(284,0,ls),
(301.333,0,o),
(314,15.667,o),
(314,37,cs),
(314,67.667,o),
(295.333,76,o),
(266,76,cs),
(213,76,l),
(213,401,l),
(213,401,l)
);
},
{
closed = 1;
nodes = (
(94,540,o),
(120.333,509,o),
(155,509,cs),
(180.497,509,o),
(223,526.946,o),
(223,584,cs),
(223,625.333,o),
(195.333,650,o),
(162,650,cs),
(114.347,650,o),
(94,604.335,o),
(94,580,cs)
);
},
{
closed = 1;
nodes = (
(412,-42.333,o),
(388.333,-25,o),
(347,-25,cs),
(308.333,-25,o),
(274,-56,o),
(274,-120,cs),
(274,-172.914,o),
(313.705,-240,o),
(400,-240,cs),
(494.641,-240,o),
(580.647,-185.465,o),
(602,-44,cs),
(604.458,-21.881,o),
(608,30.101,o),
(608,61,cs),
(608,73.345,o),
(608.238,130.009,o),
(609.5,231,cs),
(610.772,332.758,o),
(611,389.755,o),
(611,402,cs),
(611,427.333,o),
(604.333,440,o),
(583,440,cs),
(388.35,440,o),
(363,429.442,o),
(363,399,cs),
(363,384.333,o),
(373,368,o),
(401,368,cs),
(498,368,ls),
(516.667,368,o),
(523,362,o),
(523,342,cs),
(523,278,ls),
(523,223.39,o),
(520.974,22.73,o),
(515,-40,cs),
(507.22,-102.24,o),
(477.133,-173,o),
(406,-173,cs),
(362.543,-173,o),
(354,-148.527,o),
(354,-140,cs),
(354,-130.667,o),
(359.333,-125.333,o),
(370,-124,cs),
(404.667,-121.333,o),
(412,-98.333,o),
(412,-73,cs)
);
},
{
closed = 1;
nodes = (
(481,537,o),
(510.333,509,o),
(541,509,cs),
(572.469,509,o),
(610,530.715,o),
(610,585,cs),
(610,623.667,o),
(582,650,o),
(550,650,cs),
(500.62,650,o),
(481,603.092,o),
(481,581,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
27 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 10 1 6 1 10 6 104 11 1 4 12 1 5 3 4 5 91 7 1 2 2 3 83 8 1 3 3 15 67 0 0 0 1 83 0 1 1 13 67 0 6 6 9 84 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 10 1 6 1 10 6 104 11 1 4 12 1 5 3 4 5 91 8 1 3 7 1 2 0 3 2 91 0 6 0 9 6 9 88 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 10 1 6 1 10 6 104 11 1 4 12 1 5 8 4 5 91 0 8 3 2 8 79 0 3 7 1 2 0 3 2 91 0 6 0 9 6 9 88 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 10 1 6 1 10 6 104 11 1 4 12 1 5 8 4 5 91 0 8 0 7 2 8 7 91 0 3 0 2 0 3 2 91 0 6 0 9 6 9 88 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
142 140 134 132 126 124 118 116 98 95 90 87 75 73 62 60 54 52 45 40 36 29 52 32 13 17
CALL[ ]	/* CallFunction */";
};
width = 578;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(197,422.333,o),
(195,436,o),
(179,436,cs),
(145.977,436,o),
(126.021,434.925,o),
(75,431,cs),
(28.769,425.561,o),
(2,428.702,o),
(2,397,cs),
(2,389,o),
(19.333,381,o),
(30,381,cs),
(46.607,381,o),
(75.834,386,o),
(108,386,cs),
(118.667,386,o),
(121.667,375,o),
(123,359,cs),
(125.667,308.333,o),
(127,263.667,o),
(127,213,cs),
(127,174.333,o),
(127,119.667,o),
(123,77,cs),
(121.667,69.667,o),
(118.333,64.833,o),
(113,62.5,cs),
(107.667,60.167,o),
(97.667,58,o),
(83,56,cs),
(47.69,50.956,o),
(24,51.259,o),
(24,27,cs),
(24,-2.438,o),
(72.788,0,o),
(93,0,cs),
(272,0,ls),
(288,0,o),
(302,10.667,o),
(302,28,cs),
(302,54.667,o),
(283.333,58,o),
(254,58,cs),
(197,58,l),
(197,401,l),
(197,401,l)
);
},
{
closed = 1;
nodes = (
(96,545.333,o),
(118,520,o),
(146,520,cs),
(170,520,o),
(203,536,o),
(203,584,cs),
(203,618.667,o),
(179.667,639,o),
(153,639,cs),
(112.626,639,o),
(96,599.164,o),
(96,580,cs)
);
},
{
closed = 1;
nodes = (
(296,-51,o),
(270.333,-38,o),
(245,-38,cs),
(211.667,-38,o),
(179,-65.333,o),
(179,-120,cs),
(179,-172.733,o),
(215.6,-233,o),
(303,-233,cs),
(386.093,-233,o),
(467.583,-186.071,o),
(486,-44,cs),
(488.361,-20.39,o),
(492,26.161,o),
(492,61,cs),
(492,73.345,o),
(492.238,130.009,o),
(493.5,231,cs),
(494.772,332.758,o),
(495,389.755,o),
(495,402,cs),
(495,427.333,o),
(493.333,440,o),
(472,440,cs),
(359.805,440,o),
(275,440.901,o),
(275,409,cs),
(275,395.667,o),
(287.667,389,o),
(313,389,cs),
(403,389,ls),
(420.333,389,o),
(428,389.333,o),
(428,368,cs),
(428,278,ls),
(428,320.913,o),
(429.767,44.652,o),
(420,-40,cs),
(409.333,-125.333,o),
(373,-171,o),
(305,-171,cs),
(279,-171,o),
(261.667,-167.5,o),
(253,-160.5,cs),
(244.333,-153.5,o),
(240,-147.667,o),
(240,-143,cs),
(240,-131.667,o),
(245.333,-125.333,o),
(256,-124,cs),
(282.667,-121.333,o),
(296,-105.667,o),
(296,-79,cs)
);
},
{
closed = 1;
nodes = (
(388,545.333,o),
(410,520,o),
(438,520,cs),
(462,520,o),
(495,536,o),
(495,584,cs),
(495,618.667,o),
(471.667,639,o),
(445,639,cs),
(404.626,639,o),
(388,599.164,o),
(388,580,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
28 1 0 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
28 1 0 4 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 12 1 8 1 12 8 104 13 1 6 14 1 7 5 6 7 91 9 4 3 3 2 2 5 83 10 1 5 5 15 67 0 0 0 1 83 0 1 1 13 67 0 8 8 11 83 0 11 11 25 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 12 1 8 1 12 8 104 13 1 6 14 1 7 5 6 7 91 10 1 5 9 4 3 3 2 0 5 2 91 0 0 0 1 83 0 1 1 13 67 0 8 8 11 83 0 11 11 25 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 12 1 8 1 12 8 104 13 1 6 14 1 7 5 6 7 91 10 1 5 9 4 3 3 2 0 5 2 91 0 8 0 11 8 11 87 0 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 4 2 0 2 4 0 104 0 12 1 8 1 12 8 104 13 1 6 14 1 7 10 6 7 91 0 10 5 2 10 79 0 5 9 3 2 2 4 5 2 91 0 8 0 11 8 11 87 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
138 136 132 130 124 122 116 114 96 93 89 86 76 74 65 63 59 57 50 45 37 35 34 33 32 30 68 33 15 28
CALL[ ]	/* CallFunction */";
};
width = 555;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(252,0,ls),
(266.667,0,o),
(282,1,o),
(282,13,cs),
(282,18.333,o),
(277.667,22.167,o),
(269,24.5,cs),
(260.333,26.833,o),
(248.667,28,o),
(234,28,cs),
(172,28,l),
(172,401,ls),
(172,422.333,o),
(170,436,o),
(154,436,cs),
(136.667,436,o),
(94.333,433.667,o),
(65,431,cs),
(41.667,429.667,o),
(25.333,427.667,o),
(16,425,cs),
(6.667,422.333,o),
(2,418,o),
(2,412,cs),
(2,401.333,o),
(19.333,401,o),
(30,401,cs),
(51.074,401,o),
(82.259,406,o),
(113,406,cs),
(123.667,406,o),
(126.667,399.667,o),
(128,389,cs),
(130.667,329,o),
(132,274.333,o),
(132,213,cs),
(132,165,o),
(132,97.667,o),
(128,47,cs),
(127.333,39.667,o),
(124.167,34.667,o),
(118.5,32,cs),
(112.833,29.333,o),
(102.667,27.333,o),
(88,26,cs),
(45.333,23.333,o),
(24,18.667,o),
(24,12,cs),
(24,6,o),
(31.5,2.5,o),
(46.5,1.5,cs),
(61.5,0.5,o),
(77,0,o),
(93,0,cs)
);
},
{
closed = 1;
nodes = (
(154.667,538,o),
(177,548,o),
(177,584,cs),
(177,606.667,o),
(161.667,621,o),
(143,621,cs),
(115.258,621,o),
(102,593.895,o),
(102,580,cs),
(102,556,o),
(117.333,538,o),
(136,538,cs)
);
},
{
closed = 1;
nodes = (
(367.967,-221,o),
(434.522,-183.298,o),
(450,-44,cs),
(452.361,-20.39,o),
(456,26.161,o),
(456,61,cs),
(456,73.345,o),
(456.238,130.009,o),
(457.5,231,cs),
(458.772,332.758,o),
(459,389.755,o),
(459,402,cs),
(459,427.333,o),
(457.333,440,o),
(436,440,cs),
(363.178,440,o),
(279,438.443,o),
(279,419,cs),
(279,412.333,o),
(291.667,409,o),
(317,409,cs),
(397,409,ls),
(414.333,409,o),
(422,404,o),
(422,388,cs),
(422,278,ls),
(422,222.508,o),
(419.65,33.453,o),
(414,-40,cs),
(403.483,-150.432,o),
(362.15,-189,o),
(292,-189,cs),
(240,-189,o),
(207,-168.333,o),
(207,-143,cs),
(207,-128.333,o),
(212.333,-125.333,o),
(223,-124,cs),
(240.333,-121.333,o),
(260,-117,o),
(260,-89,cs),
(260,-63.667,o),
(243.667,-59,o),
(229,-59,cs),
(202.333,-59,o),
(173,-81.333,o),
(173,-120,cs),
(173,-173.696,o),
(207.931,-221,o),
(294,-221,cs)
);
},
{
closed = 1;
nodes = (
(437.333,538,o),
(460,550,o),
(460,582,cs),
(460,608.667,o),
(443.667,621,o),
(425,621,cs),
(399.667,621,o),
(385,598,o),
(385,578,cs),
(385,560.667,o),
(396,538,o),
(420,538,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
23 1 0 3 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
23 1 0 5 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 14 1 10 1 14 10 104 15 1 8 16 1 9 12 8 9 91 11 5 4 3 3 3 12 83 0 12 12 15 67 11 5 4 3 3 3 6 83 7 1 6 6 15 67 2 1 0 0 1 83 0 1 1 13 67 0 10 10 13 83 0 13 13 25 13 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 14 1 10 1 14 10 104 15 1 8 16 1 9 12 8 9 91 0 12 6 3 12 79 7 1 6 11 5 4 3 3 0 6 3 91 2 1 0 0 1 83 0 1 1 13 67 0 10 10 13 83 0 13 13 25 13 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 14 1 10 1 14 10 104 15 1 8 16 1 9 12 8 9 91 0 12 6 3 12 79 7 1 6 11 5 4 3 3 0 6 3 91 0 10 0 13 10 13 87 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 5 3 0 3 5 96 0 14 1 10 1 14 10 104 15 1 8 16 1 9 12 8 9 91 0 12 6 3 12 79 7 1 6 11 4 2 3 5 6 3 91 0 10 0 13 10 13 87 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
130 128 124 122 118 116 110 108 90 87 83 80 68 66 56 54 39 49 20 33 17 43 18 68 33 17 35
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = ij;
unicode = 307;
},
{
glyphname = j;
kernLeft = dotlessj;
kernRight = dotlessj;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(33,-42.333,o),
(9.333,-25,o),
(-32,-25,cs),
(-70.667,-25,o),
(-105,-56,o),
(-105,-120,cs),
(-105,-172.914,o),
(-65.295,-240,o),
(21,-240,cs),
(115.641,-240,o),
(201.647,-185.465,o),
(223,-44,cs),
(225.458,-21.881,o),
(229,30.101,o),
(229,61,cs),
(229,73.345,o),
(229.238,130.009,o),
(230.5,231,cs),
(231.772,332.758,o),
(232,389.755,o),
(232,402,cs),
(232,427.333,o),
(225.333,440,o),
(204,440,cs),
(9.35,440,o),
(-16,429.442,o),
(-16,399,cs),
(-16,384.333,o),
(-6,368,o),
(22,368,cs),
(119,368,ls),
(137.667,368,o),
(144,362,o),
(144,342,cs),
(144,278,ls),
(144,223.39,o),
(141.974,22.73,o),
(136,-40,cs),
(128.22,-102.24,o),
(98.133,-173,o),
(27,-173,cs),
(-16.457,-173,o),
(-25,-148.527,o),
(-25,-140,cs),
(-25,-130.667,o),
(-19.667,-125.333,o),
(-9,-124,cs),
(25.667,-121.333,o),
(33,-98.333,o),
(33,-73,cs)
);
},
{
closed = 1;
nodes = (
(102,537,o),
(131.333,509,o),
(162,509,cs),
(193.469,509,o),
(231,530.715,o),
(231,585,cs),
(231,623.667,o),
(203,650,o),
(171,650,cs),
(121.62,650,o),
(102,603.092,o),
(102,581,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 1 0 1 4 0 104 0 5 0 6 2 5 6 91 0 1 1 2 83 0 2 2 15 67 0 0 0 3 84 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 4 1 0 1 4 0 104 0 5 0 6 2 5 6 91 0 2 0 1 4 2 1 91 0 0 3 3 0 79 0 0 0 3 84 0 3 0 3 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
78 76 70 68 62 60 54 52 53 60 41 7 18
CALL[ ]	/* CallFunction */";
};
width = 290;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(4,-51,o),
(-21.667,-38,o),
(-47,-38,cs),
(-80.333,-38,o),
(-113,-65.333,o),
(-113,-120,cs),
(-113,-172.733,o),
(-76.4,-233,o),
(11,-233,cs),
(94.093,-233,o),
(175.583,-186.071,o),
(194,-44,cs),
(196.361,-20.39,o),
(200,26.161,o),
(200,61,cs),
(200,73.345,o),
(200.238,130.009,o),
(201.5,231,cs),
(202.772,332.758,o),
(203,389.755,o),
(203,402,cs),
(203,427.333,o),
(201.333,440,o),
(180,440,cs),
(67.805,440,o),
(-17,440.901,o),
(-17,409,cs),
(-17,395.667,o),
(-4.333,389,o),
(21,389,cs),
(111,389,ls),
(128.333,389,o),
(136,389.333,o),
(136,368,cs),
(136,278,ls),
(136,320.913,o),
(137.767,44.652,o),
(128,-40,cs),
(117.333,-125.333,o),
(81,-171,o),
(13,-171,cs),
(-13,-171,o),
(-30.333,-167.5,o),
(-39,-160.5,cs),
(-47.667,-153.5,o),
(-52,-147.667,o),
(-52,-143,cs),
(-52,-131.667,o),
(-46.667,-125.333,o),
(-36,-124,cs),
(-9.333,-121.333,o),
(4,-105.667,o),
(4,-79,cs)
);
},
{
closed = 1;
nodes = (
(96,545.333,o),
(118,520,o),
(146,520,cs),
(170,520,o),
(203,536,o),
(203,584,cs),
(203,618.667,o),
(179.667,639,o),
(153,639,cs),
(112.626,639,o),
(96,599.164,o),
(96,580,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 1 0 1 4 0 104 0 5 0 6 2 5 6 91 0 1 1 2 83 0 2 2 15 67 0 0 0 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 4 1 0 1 4 0 104 0 5 0 6 2 5 6 91 0 2 0 1 4 2 1 91 0 0 0 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 4 1 0 1 4 0 104 0 5 0 6 2 5 6 91 0 2 0 1 4 2 1 91 0 0 3 3 0 79 0 0 0 3 83 0 3 0 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
71 69 65 63 57 55 49 47 52 58 39 7 18
CALL[ ]	/* CallFunction */";
};
width = 263;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(70.967,-221,o),
(137.522,-183.298,o),
(153,-44,cs),
(155.361,-20.39,o),
(159,26.161,o),
(159,61,cs),
(159,73.345,o),
(159.238,130.009,o),
(160.5,231,cs),
(161.772,332.758,o),
(162,389.755,o),
(162,402,cs),
(162,427.333,o),
(160.333,440,o),
(139,440,cs),
(66.178,440,o),
(-18,438.443,o),
(-18,419,cs),
(-18,412.333,o),
(-5.333,409,o),
(20,409,cs),
(100,409,ls),
(117.333,409,o),
(125,404,o),
(125,388,cs),
(125,278,ls),
(125,222.508,o),
(122.65,33.453,o),
(117,-40,cs),
(106.483,-150.432,o),
(65.15,-189,o),
(-5,-189,cs),
(-57,-189,o),
(-90,-168.333,o),
(-90,-143,cs),
(-90,-128.333,o),
(-84.667,-125.333,o),
(-74,-124,cs),
(-56.667,-121.333,o),
(-37,-117,o),
(-37,-89,cs),
(-37,-63.667,o),
(-53.333,-59,o),
(-68,-59,cs),
(-94.667,-59,o),
(-124,-81.333,o),
(-124,-120,cs),
(-124,-173.696,o),
(-89.069,-221,o),
(-3,-221,cs)
);
},
{
closed = 1;
nodes = (
(140.333,538,o),
(163,550,o),
(163,582,cs),
(163,608.667,o),
(146.667,621,o),
(128,621,cs),
(102.667,621,o),
(88,598,o),
(88,578,cs),
(88,560.667,o),
(99,538,o),
(123,538,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 1 0 1 4 0 104 0 5 0 6 2 5 6 91 0 1 1 2 83 0 2 2 15 67 0 0 0 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 4 1 0 1 4 0 104 0 5 0 6 2 5 6 91 0 2 0 1 4 2 1 91 0 0 0 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 4 1 0 1 4 0 104 0 5 0 6 2 5 6 91 0 2 0 1 4 2 1 91 0 0 3 3 0 79 0 0 0 3 83 0 3 0 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
72 70 66 64 60 58 52 50 52 60 40 7 18
CALL[ ]	/* CallFunction */";
};
width = 225;
}
);
note = j;
unicode = 106;
},
{
glyphname = jdotless;
kernLeft = dotlessj;
kernRight = dotlessj;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(33,-42.333,o),
(6,-25,o),
(-26,-25,cs),
(-65.497,-25,o),
(-105,-57.519,o),
(-105,-120,cs),
(-105,-172.914,o),
(-65.295,-240,o),
(21,-240,cs),
(115.641,-240,o),
(201.647,-185.465,o),
(223,-44,cs),
(225.458,-21.881,o),
(229,30.101,o),
(229,61,cs),
(229,73.345,o),
(229.238,130.009,o),
(230.5,231,cs),
(231.772,332.758,o),
(232,389.755,o),
(232,402,cs),
(232,428.667,o),
(227.667,440,o),
(209,440,cs),
(49.922,440,o),
(-16,441.477,o),
(-16,403,cs),
(-16,388.333,o),
(-4.667,377,o),
(22,377,cs),
(119,377,ls),
(137.667,377,o),
(144,373.333,o),
(144,356,cs),
(144,278,ls),
(144,308.093,o),
(145.77,44.67,o),
(136,-40,cs),
(128.168,-102.654,o),
(98.869,-160,o),
(26,-160,cs),
(4,-160,o),
(-10,-157.667,o),
(-16,-153,cs),
(-22,-148.333,o),
(-25,-144.333,o),
(-25,-141,cs),
(-25,-131,o),
(-19.667,-125.333,o),
(-9,-124,cs),
(25.667,-121.333,o),
(33,-98.333,o),
(33,-73,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 4 1 0 0 4 96 0 1 1 2 83 0 2 2 15 67 0 0 0 3 84 0 3 3 25 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 1 0 1 4 0 104 0 1 1 2 83 0 2 2 15 67 0 0 0 3 84 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 4 1 0 1 4 0 104 0 2 0 1 4 2 1 91 0 0 3 3 0 79 0 0 0 3 84 0 3 0 3 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
62 60 52 50 53 60 39 5 18
CALL[ ]	/* CallFunction */";
};
width = 290;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(4,-51,o),
(-21.667,-38,o),
(-47,-38,cs),
(-80.333,-38,o),
(-113,-65.333,o),
(-113,-120,cs),
(-113,-172.733,o),
(-76.4,-233,o),
(11,-233,cs),
(94.093,-233,o),
(175.583,-186.071,o),
(194,-44,cs),
(196.361,-20.39,o),
(200,26.161,o),
(200,61,cs),
(200,73.345,o),
(200.238,130.009,o),
(201.5,231,cs),
(202.772,332.758,o),
(203,389.755,o),
(203,402,cs),
(203,427.333,o),
(201.333,440,o),
(180,440,cs),
(67.805,440,o),
(-17,440.901,o),
(-17,409,cs),
(-17,395.667,o),
(-4.333,389,o),
(21,389,cs),
(111,389,ls),
(128.333,389,o),
(136,389.333,o),
(136,368,cs),
(136,278,ls),
(136,320.913,o),
(137.767,44.652,o),
(128,-40,cs),
(117.333,-125.333,o),
(81,-171,o),
(13,-171,cs),
(-13,-171,o),
(-30.333,-167.5,o),
(-39,-160.5,cs),
(-47.667,-153.5,o),
(-52,-147.667,o),
(-52,-143,cs),
(-52,-131.667,o),
(-46.667,-125.333,o),
(-36,-124,cs),
(-9.333,-121.333,o),
(4,-105.667,o),
(4,-79,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 1 0 1 4 0 104 0 1 1 2 83 0 2 2 15 67 0 0 0 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 4 1 0 1 4 0 104 0 2 0 1 4 2 1 91 0 0 0 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 4 1 0 1 4 0 104 0 2 0 1 4 2 1 91 0 0 3 3 0 79 0 0 0 3 83 0 3 0 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
57 55 49 47 52 58 39 5 18
CALL[ ]	/* CallFunction */";
};
width = 263;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(70.967,-221,o),
(137.522,-183.298,o),
(153,-44,cs),
(155.361,-20.39,o),
(159,26.161,o),
(159,61,cs),
(159,73.345,o),
(159.238,130.009,o),
(160.5,231,cs),
(161.772,332.758,o),
(162,389.755,o),
(162,402,cs),
(162,427.333,o),
(160.333,440,o),
(139,440,cs),
(66.178,440,o),
(-18,438.443,o),
(-18,419,cs),
(-18,412.333,o),
(-5.333,409,o),
(20,409,cs),
(100,409,ls),
(117.333,409,o),
(125,404,o),
(125,388,cs),
(125,278,ls),
(125,222.508,o),
(122.65,33.453,o),
(117,-40,cs),
(106.483,-150.432,o),
(65.15,-189,o),
(-5,-189,cs),
(-57,-189,o),
(-90,-168.333,o),
(-90,-143,cs),
(-90,-128.333,o),
(-84.667,-125.333,o),
(-74,-124,cs),
(-56.667,-121.333,o),
(-37,-117,o),
(-37,-89,cs),
(-37,-63.667,o),
(-53.333,-59,o),
(-68,-59,cs),
(-94.667,-59,o),
(-124,-81.333,o),
(-124,-120,cs),
(-124,-173.696,o),
(-89.069,-221,o),
(-3,-221,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 1 0 1 4 0 104 0 1 1 2 83 0 2 2 15 67 0 0 0 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 4 1 0 1 4 0 104 0 2 0 1 4 2 1 91 0 0 0 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 4 1 0 1 4 0 104 0 2 0 1 4 2 1 91 0 0 3 3 0 79 0 0 0 3 83 0 3 0 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
60 58 52 50 52 60 40 5 18
CALL[ ]	/* CallFunction */";
};
width = 225;
}
);
note = dotlessj;
unicode = 567;
},
{
glyphname = jcircumflex;
kernLeft = dotlessj;
kernRight = dotlessj;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(33,-42.333,o),
(9.333,-25,o),
(-32,-25,cs),
(-70.667,-25,o),
(-105,-56,o),
(-105,-120,cs),
(-105,-172.914,o),
(-65.295,-240,o),
(21,-240,cs),
(115.641,-240,o),
(201.647,-185.465,o),
(223,-44,cs),
(225.458,-21.881,o),
(229,30.101,o),
(229,61,cs),
(229,73.345,o),
(229.238,130.009,o),
(230.5,231,cs),
(231.772,332.758,o),
(232,389.755,o),
(232,402,cs),
(232,427.333,o),
(225.333,440,o),
(204,440,cs),
(9.35,440,o),
(-16,429.442,o),
(-16,399,cs),
(-16,384.333,o),
(-6,368,o),
(22,368,cs),
(119,368,ls),
(137.667,368,o),
(144,362,o),
(144,342,cs),
(144,278,ls),
(144,223.39,o),
(141.974,22.73,o),
(136,-40,cs),
(128.168,-102.654,o),
(98.869,-160,o),
(26,-160,cs),
(3.333,-160,o),
(-10.833,-157.5,o),
(-16.5,-152.5,cs),
(-22.167,-147.5,o),
(-25,-143.333,o),
(-25,-140,cs),
(-25,-130.667,o),
(-19.667,-125.333,o),
(-9,-124,cs),
(25.667,-121.333,o),
(33,-98.333,o),
(33,-73,cs)
);
},
{
closed = 1;
nodes = (
(272.333,510,o),
(276,520.333,o),
(276,531,cs),
(276,571.963,o),
(166.877,664,o),
(143,664,cs),
(132,664,o),
(96.897,638.643,o),
(70,613.5,cs),
(39.333,584.833,o),
(11,549.333,o),
(11,524,cs),
(11,517.333,o),
(16,510,o),
(24,510,cs),
(36.064,510,o),
(93.718,545.91,o),
(143,572,c),
(214.614,534.087,o),
(251.803,510,o),
(263,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
67 1 5 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 7 5 7 106 6 8 2 5 2 5 106 0 4 1 0 0 4 96 0 1 1 2 83 0 2 2 15 67 0 0 0 3 84 0 3 3 25 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 7 5 7 106 6 8 2 5 2 5 106 0 4 1 0 1 4 0 104 0 1 1 2 83 0 2 2 15 67 0 0 0 3 84 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 7 5 7 106 6 8 2 5 2 5 106 0 4 1 0 1 4 0 104 0 2 0 1 4 2 1 91 0 0 3 3 0 79 0 0 0 3 84 0 3 0 3 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
63 62 81 79 73 71 62 87 63 87 60 58 52 50 53 60 39 9 18
CALL[ ]	/* CallFunction */";
};
width = 290;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(4,-51,o),
(-21.667,-38,o),
(-47,-38,cs),
(-80.333,-38,o),
(-113,-65.333,o),
(-113,-120,cs),
(-113,-172.733,o),
(-76.4,-233,o),
(11,-233,cs),
(94.093,-233,o),
(175.583,-186.071,o),
(194,-44,cs),
(196.361,-20.39,o),
(200,26.161,o),
(200,61,cs),
(200,73.345,o),
(200.238,130.009,o),
(201.5,231,cs),
(202.772,332.758,o),
(203,389.755,o),
(203,402,cs),
(203,427.333,o),
(201.333,440,o),
(180,440,cs),
(67.805,440,o),
(-17,440.901,o),
(-17,409,cs),
(-17,395.667,o),
(-4.333,389,o),
(21,389,cs),
(111,389,ls),
(128.333,389,o),
(136,389.333,o),
(136,368,cs),
(136,278,ls),
(136,320.913,o),
(137.767,44.652,o),
(128,-40,cs),
(117.333,-125.333,o),
(81,-171,o),
(13,-171,cs),
(-13,-171,o),
(-30.333,-167.5,o),
(-39,-160.5,cs),
(-47.667,-153.5,o),
(-52,-147.667,o),
(-52,-143,cs),
(-52,-131.667,o),
(-46.667,-125.333,o),
(-36,-124,cs),
(-9.333,-121.333,o),
(4,-105.667,o),
(4,-79,cs)
);
},
{
closed = 1;
nodes = (
(264,510,o),
(267,517.667,o),
(267,527,cs),
(267,562.213,o),
(160.595,655,o),
(136,655,cs),
(113.925,655,o),
(6,563.906,o),
(6,523,cs),
(6,514.333,o),
(9.667,510,o),
(17,510,cs),
(31.506,510,o),
(63.117,538.127,o),
(136,581,c),
(148.77,573.488,o),
(243.478,510,o),
(256,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
64 1 5 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 7 5 7 106 6 8 2 5 2 5 106 0 4 1 0 1 4 0 104 0 1 1 2 83 0 2 2 15 67 0 0 0 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 7 5 7 106 6 8 2 5 2 5 106 0 4 1 0 1 4 0 104 0 2 0 1 4 2 1 91 0 0 0 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 7 5 7 106 6 8 2 5 2 5 106 0 4 1 0 1 4 0 104 0 2 0 1 4 2 1 91 0 0 3 3 0 79 0 0 0 3 83 0 3 0 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
60 59 77 75 70 68 59 83 60 83 57 55 49 47 52 58 39 9 18
CALL[ ]	/* CallFunction */";
};
width = 263;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(65.557,-217,o),
(128.111,-186.419,o),
(151,-44,cs),
(156.333,-13.333,o),
(159,15.333,o),
(159,46,cs),
(159,58.384,o),
(159.235,117.715,o),
(160.5,224,cs),
(161.743,328.438,o),
(162,387.768,o),
(162,402,cs),
(162,427.333,o),
(160.333,440,o),
(139,440,cs),
(66.178,440,o),
(-18,438.443,o),
(-18,419,cs),
(-18,412.333,o),
(-5.333,409,o),
(20,409,cs),
(100,409,ls),
(117.333,409,o),
(125,404,o),
(125,388,cs),
(125,278,ls),
(125,238.201,o),
(126.258,89.265,o),
(113,-40,cs),
(96.824,-185.583,o),
(47.514,-190,o),
(6,-190,cs),
(-67.579,-190,o),
(-90,-170.498,o),
(-90,-143,cs),
(-90,-128.333,o),
(-84.667,-125.333,o),
(-74,-124,cs),
(-56.667,-121.333,o),
(-37,-117,o),
(-37,-89,cs),
(-37,-63.667,o),
(-53.333,-59,o),
(-68,-59,cs),
(-94.667,-59,o),
(-124,-76,o),
(-124,-120,cs),
(-124,-172,o),
(-84.333,-217,o),
(1,-217,cs)
);
},
{
closed = 1;
nodes = (
(21.084,510,o),
(73.433,558.894,o),
(126,596,c),
(202.411,542.063,o),
(231.302,510,o),
(246,510,cs),
(251.333,510,o),
(254,513.667,o),
(254,521,cs),
(254,546.329,o),
(150.852,640,o),
(126,640,cs),
(102.626,640,o),
(-1,545.933,o),
(-1,521,cs),
(-1,513.667,o),
(1.667,510,o),
(7,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
65 1 5 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 7 5 7 106 6 8 2 5 2 5 106 0 4 1 0 0 4 96 0 1 1 2 83 0 2 2 15 67 0 0 0 3 84 0 3 3 25 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 7 5 7 106 6 8 2 5 2 5 106 0 4 1 0 1 4 0 104 0 1 1 2 83 0 2 2 15 67 0 0 0 3 84 0 3 3 25 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 7 5 7 106 6 8 2 5 2 5 106 0 4 1 0 1 4 0 104 0 2 0 1 4 2 1 91 0 0 0 3 84 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 7 5 7 106 6 8 2 5 2 5 106 0 4 1 0 1 4 0 104 0 2 0 1 4 2 1 91 0 0 3 3 0 79 0 0 0 3 84 0 3 0 3 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
61 60 78 76 71 69 60 83 61 83 58 56 52 50 52 60 42 9 18
CALL[ ]	/* CallFunction */";
};
width = 225;
}
);
note = jcircumflex;
unicode = 309;
},
{
glyphname = k;
kernLeft = germandbls;
kernRight = k;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(153,807.333,o),
(144.667,817,o),
(128,817,cs),
(8.972,817,o),
(-47,803.274,o),
(-47,775,cs),
(-47,752.597,o),
(-14.567,749,o),
(-2,749,cs),
(38,749,ls),
(52.667,749,o),
(60,741.333,o),
(60,726,cs),
(60,691.333,o),
(60.667,648.167,o),
(62,591.5,cs),
(63.333,534.833,o),
(64,463.333,o),
(64,370,cs),
(64,293.637,o),
(61.564,230.675,o),
(59,123,cs),
(59,109.667,o),
(58.333,97.667,o),
(57,87,cs),
(55.667,76.333,o),
(53.333,70.333,o),
(50,69,cs),
(11.333,58.333,o),
(-5,46.667,o),
(-5,28,cs),
(-5,0,o),
(22.333,-6,o),
(45,-6,cs),
(54.333,-6,o),
(66.167,-5.667,o),
(80.5,-5,cs),
(94.833,-4.333,o),
(107.333,-4,o),
(118,-4,cs),
(143.333,-4,o),
(161.5,-4.333,o),
(172.5,-5,cs),
(183.5,-5.667,o),
(193,-6,o),
(201,-6,cs),
(227,-6,o),
(240,5.333,o),
(240,28,cs),
(240,52,o),
(228,69,o),
(200,69,cs),
(153,69,l),
(153,185,l),
(182,211,l),
(243.989,211,o),
(283,201.662,o),
(283,116,cs),
(283,50,ls),
(283,-44.667,o),
(322.333,-80,o),
(389,-80,cs),
(445,-80,o),
(481,-40.333,o),
(481,9,cs),
(481,31.667,o),
(471.333,52,o),
(442,52,cs),
(415.333,52,o),
(402,38.667,o),
(402,12,cs),
(402,5.333,o),
(398.333,2,o),
(391,2,cs),
(380.338,2,o),
(369,5.33,o),
(369,68,cs),
(369,116,ls),
(369,233.716,o),
(333.757,272,o),
(246,272,c),
(345,366,ls),
(351.667,372.667,o),
(372.333,379.333,o),
(387,382,cs),
(454.124,391.258,o),
(483,395.648,o),
(483,419,cs),
(483,430.333,o),
(472.667,437.667,o),
(452,441,cs),
(431.333,444.333,o),
(395.667,446,o),
(345,446,cs),
(299.667,446,o),
(268,443.333,o),
(250,438,cs),
(232,432.667,o),
(223,423.333,o),
(223,410,cs),
(223,387.333,o),
(233.333,381,o),
(252,381,cs),
(262,381,ls),
(265.333,381,o),
(267,379.667,o),
(267,377,cs),
(267,373.667,o),
(256.5,363,o),
(235.5,345,cs),
(214.5,327,o),
(187,302,o),
(153,270,c),
(153,788,l),
(153,788,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 1 6 2 55 1 7 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 9 10 1 10 9 1 104 0 0 1 2 1 0 2 104 0 2 6 1 2 6 102 0 6 7 1 6 7 102 0 3 4 8 4 3 96 0 4 0 5 4 5 88 0 10 10 14 67 0 1 1 15 67 0 7 7 8 84 0 8 8 16 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 9 10 1 10 9 1 104 0 1 0 10 1 0 102 0 0 2 10 0 2 102 0 2 6 10 2 6 102 0 6 7 10 6 7 102 0 3 4 8 4 3 96 0 4 0 5 4 5 88 0 10 10 14 67 0 7 7 8 84 0 8 8 16 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
0 9 10 1 10 9 1 104 0 1 0 10 1 0 102 0 0 2 10 0 2 102 0 2 6 10 2 6 102 0 6 7 10 6 7 102 0 3 4 8 4 3 8 104 0 4 0 5 4 5 88 0 10 10 14 67 0 7 7 8 84 0 8 8 16 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
101 99 91 88 131 34 23 36 34 41 27 36 52 11 24
CALL[ ]	/* CallFunction */";
};
width = 497;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(144,807.333,o),
(135.667,817,o),
(119,817,cs),
(63.667,817,o),
(23.667,813.333,o),
(-1,806,cs),
(-25.667,798.667,o),
(-38,790.333,o),
(-38,781,cs),
(-38,765,o),
(-16,761,o),
(0,761,cs),
(50,761,ls),
(64.667,761,o),
(72,753.333,o),
(72,738,cs),
(72,702,o),
(72.667,658.833,o),
(74,599.5,cs),
(75.333,540.167,o),
(76,466,o),
(76,370,cs),
(76,294.549,o),
(74.57,248.949,o),
(73.5,219,cs),
(72.383,187.713,o),
(71,154.058,o),
(71,105,cs),
(71,85.667,o),
(70.167,72.5,o),
(68.5,65.5,cs),
(66.833,58.5,o),
(63,54.333,o),
(57,53,cs),
(33.667,47.667,o),
(17.167,43.167,o),
(7.5,39.5,cs),
(-2.167,35.833,o),
(-7,29.333,o),
(-7,20,cs),
(-7,-1.333,o),
(13.333,-6,o),
(36,-6,cs),
(45.333,-6,o),
(57.167,-5.667,o),
(71.5,-5,cs),
(85.833,-4.333,o),
(98.333,-4,o),
(109,-4,cs),
(134.333,-4,o),
(155.167,-4.333,o),
(171.5,-5,cs),
(187.833,-5.667,o),
(203.333,-6,o),
(218,-6,cs),
(234,-6,o),
(250,-2.333,o),
(250,15,cs),
(250,36.333,o),
(235.667,51,o),
(205,51,cs),
(144,51,l),
(144,185,l),
(186,220,l),
(266.652,220,o),
(290,198.995,o),
(290,116,cs),
(290,50,ls),
(290,-38,o),
(324,-71,o),
(380,-71,cs),
(430.667,-71,o),
(468,-35,o),
(468,9,cs),
(468,27.667,o),
(462.667,46,o),
(440,46,cs),
(418,46,o),
(407,34.667,o),
(407,12,cs),
(407,-2.667,o),
(397,-7,o),
(389,-7,cs),
(378.978,-7,o),
(360,-1.508,o),
(360,68,cs),
(360,116,ls),
(360,235.845,o),
(320.895,268,o),
(234,268,c),
(348,376,ls),
(355.333,383.333,o),
(365.667,387.667,o),
(379,389,cs),
(454.602,394.214,o),
(480,397.372,o),
(480,419,cs),
(480,425.667,o),
(468,431,o),
(444,435,cs),
(420,439,o),
(377.333,441,o),
(316,441,cs),
(291.333,441,o),
(271,438.667,o),
(255,434,cs),
(239,429.333,o),
(231,422,o),
(231,412,cs),
(231,397.333,o),
(246.667,394,o),
(252,394,cs),
(259,394,ls),
(261.667,394,o),
(267,393.667,o),
(267,387,cs),
(267,381.667,o),
(255.5,368.333,o),
(232.5,347,cs),
(209.5,325.667,o),
(180,298,o),
(144,264,c),
(144,788,l),
(144,788,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
0 1 7 3 56 1 5 7 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
0 1 7 3 56 1 8 7 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 3 0 7 0 3 7 104 0 7 5 0 7 5 102 0 4 0 6 4 6 88 0 10 10 11 83 0 11 11 14 67 2 1 0 0 1 83 0 1 1 15 67 8 1 5 5 9 83 0 9 9 16 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 3 0 7 0 3 7 104 0 7 5 0 7 5 102 0 1 2 1 0 3 1 0 91 0 4 0 6 4 6 88 0 10 10 11 83 0 11 11 14 67 8 1 5 5 9 83 0 9 9 16 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 3 0 7 0 3 7 104 0 7 8 0 7 8 102 0 5 8 9 8 5 9 104 0 1 2 1 0 3 1 0 91 0 4 0 6 4 6 88 0 10 10 11 83 0 11 11 14 67 0 8 8 9 83 0 9 9 16 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
101 99 95 92 71 63 34 23 36 35 41 19 22 36 53 12 24
CALL[ ]	/* CallFunction */";
};
width = 483;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(412.333,-56,o),
(445,-27,o),
(445,9,cs),
(445,27,o),
(440,36,o),
(430,36,cs),
(419.333,36,o),
(414,29.667,o),
(414,17,cs),
(414,-9.667,o),
(399.333,-22,o),
(378,-22,cs),
(352.689,-22,o),
(347,-3.899,o),
(347,68,cs),
(347,116,ls),
(347,232.11,o),
(298.397,257,o),
(209,257,c),
(345,386,ls),
(352.333,393.333,o),
(362.667,397.667,o),
(376,399,cs),
(431.857,403.297,o),
(457,405.782,o),
(457,419,cs),
(457,431.078,o),
(387.242,431,o),
(303,431,cs),
(253,431,o),
(228,426.333,o),
(228,417,cs),
(228,409,o),
(234.667,404.667,o),
(248,404,cs),
(282,402,ls),
(290,402,o),
(294,399.333,o),
(294,394,cs),
(294,384.857,o),
(240.996,328.719,o),
(131,234,c),
(131,788,ls),
(131,807.333,o),
(122.667,817,o),
(106,817,cs),
(8.492,817,o),
(-41,802.098,o),
(-41,791,cs),
(-41,787.667,o),
(-38.333,785.167,o),
(-33,783.5,cs),
(-27.667,781.833,o),
(-21,781,o),
(-13,781,cs),
(67,781,ls),
(81.667,781,o),
(89,773.333,o),
(89,758,cs),
(89,719.333,o),
(89.667,673.5,o),
(91,611.5,cs),
(92.333,549.5,o),
(93,471.333,o),
(93,370,cs),
(93,286.414,o),
(91.563,234.456,o),
(90.5,201.5,cs),
(89.38,166.785,o),
(88,130.045,o),
(88,75,cs),
(88,36.333,o),
(81.333,28.333,o),
(44,23,cs),
(20.667,19.667,o),
(5.833,16.833,o),
(-0.5,14.5,cs),
(-6.833,12.167,o),
(-10,9.333,o),
(-10,6,cs),
(-10,-2,o),
(1,-6,o),
(23,-6,cs),
(32.333,-6,o),
(44.167,-5.667,o),
(58.5,-5,cs),
(72.833,-4.333,o),
(85.333,-4,o),
(96,-4,cs),
(121.333,-4,o),
(142.167,-4.333,o),
(158.5,-5,cs),
(174.833,-5.667,o),
(190.333,-6,o),
(205,-6,cs),
(213,-6,o),
(219.833,-5,o),
(225.5,-3,cs),
(231.167,-1,o),
(234,1.667,o),
(234,5,cs),
(234,9,o),
(230.833,12.667,o),
(224.5,16,cs),
(218.167,19.333,o),
(207.333,21,o),
(192,21,cs),
(131,21,l),
(131,185,l),
(182,228,l),
(284.761,228,o),
(307,202.38,o),
(307,116,cs),
(307,50,ls),
(307,-27.333,o),
(328.333,-56,o),
(367,-56,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 1 6 2 56 1 4 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 4 6 7 6 4 7 104 0 2 0 6 4 2 6 91 0 3 0 5 3 5 87 0 9 9 10 83 0 10 10 14 67 0 0 0 1 83 0 1 1 15 67 0 7 7 8 83 0 8 8 16 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 4 6 7 6 4 7 104 0 1 0 0 2 1 0 91 0 2 0 6 4 2 6 91 0 3 0 5 3 5 87 0 9 9 10 83 0 10 10 14 67 0 7 7 8 83 0 8 8 16 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
102 100 94 91 132 34 23 35 35 41 27 50 54 11 24
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = k;
unicode = 107;
},
{
glyphname = kcommaaccent;
kernLeft = germandbls;
kernRight = c_k;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(187,-138.971,o),
(223,-140.557,o),
(223,-158,cs),
(223,-178,o),
(220.5,-192.833,o),
(215.5,-202.5,cs),
(210.5,-212.167,o),
(208,-220.333,o),
(208,-227,cs),
(208,-249.667,o),
(227.333,-250,o),
(234,-250,cs),
(252.413,-250,o),
(315,-207.536,o),
(315,-131,cs),
(315,-73.667,o),
(279,-50,o),
(247,-50,cs),
(203,-50,o),
(187,-80,o),
(187,-108,cs)
);
},
{
closed = 1;
nodes = (
(157,807.333,o),
(148.667,817,o),
(132,817,cs),
(50.929,817,o),
(-33,806.86,o),
(-33,775,cs),
(-33,752.333,o),
(-9.667,749,o),
(13,749,cs),
(42,749,ls),
(56.667,749,o),
(64,741.333,o),
(64,726,cs),
(64,691.333,o),
(64.667,648.167,o),
(66,591.5,cs),
(67.333,534.833,o),
(68,463.333,o),
(68,370,cs),
(68,268.599,o),
(63,163.435,o),
(63,107,cs),
(63,68.333,o),
(49.667,59,o),
(19,55,cs),
(15.667,54.333,o),
(11.333,52.333,o),
(6,49,cs),
(0.667,45.667,o),
(-2,37.333,o),
(-2,24,cs),
(-2,0,o),
(26.333,-6,o),
(49,-6,cs),
(58.333,-6,o),
(70.167,-5.667,o),
(84.5,-5,cs),
(98.833,-4.333,o),
(111.333,-4,o),
(122,-4,cs),
(147.333,-4,o),
(168.167,-4.333,o),
(184.5,-5,cs),
(200.833,-5.667,o),
(216.333,-6,o),
(231,-6,cs),
(247,-6,o),
(260,-3.667,o),
(260,23,cs),
(260,43,o),
(248.667,53,o),
(218,53,cs),
(157,53,l),
(157,185,l),
(176,205,l),
(189.291,178.417,o),
(218.805,121.33,o),
(255.5,53.5,cs),
(291.293,-12.663,o),
(321.516,-58,o),
(339,-58,cs),
(460.668,-58,o),
(555,-62.024,o),
(555,-28,cs),
(555,-2.178,o),
(506.501,0.375,o),
(475,3,cs),
(447,5.667,o),
(426.667,7.333,o),
(414,8,cs),
(401.333,8.667,o),
(391.333,9,o),
(384,9,cs),
(376.177,9,o),
(294.717,153.514,o),
(246,268,c),
(269.457,288.33,o),
(290.09,311.131,o),
(335,354,cs),
(342.333,361.333,o),
(352.667,365.667,o),
(366,367,cs),
(400.667,370.333,o),
(428.5,374.333,o),
(449.5,379,cs),
(470.5,383.667,o),
(481,391.667,o),
(481,403,cs),
(481,427,o),
(455.667,431,o),
(357,431,cs),
(253.273,431,o),
(200,430.794,o),
(200,396,cs),
(200,380,o),
(209.667,370,o),
(223,370,cs),
(231,370,ls),
(234.333,370,o),
(236,368.667,o),
(236,366,cs),
(236,355.388,o),
(201.827,328.695,o),
(157,282,c),
(157,788,l),
(157,788,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
79 78 53 22 4 6 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 3 6 3 2 6 104 0 4 0 5 1 4 5 92 0 8 8 9 83 0 9 9 14 67 0 3 3 15 67 0 6 6 7 83 0 7 7 16 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 3 8 2 8 3 2 104 0 2 6 8 2 6 102 0 4 0 5 1 4 5 92 0 0 0 1 0 1 87 0 8 8 9 83 0 9 9 14 67 0 6 6 7 83 0 7 7 16 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
124 121 116 113 94 86 82 80 72 69 60 57 40 36 31 28 38 34 10 17
CALL[ ]	/* CallFunction */";
};
width = 549;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(146,807.333,o),
(137.667,817,o),
(121,817,cs),
(17.421,817,o),
(-36,800.997,o),
(-36,781,cs),
(-36,762.333,o),
(-14,761,o),
(2,761,cs),
(52,761,ls),
(66.667,761,o),
(74,753.333,o),
(74,738,cs),
(74,702,o),
(74.667,658.833,o),
(76,599.5,cs),
(77.333,540.167,o),
(78,466,o),
(78,370,cs),
(78,291.525,o),
(76.575,244.686,o),
(75.5,213.5,cs),
(74.382,181.069,o),
(73,146.442,o),
(73,95,cs),
(73,56.333,o),
(62.333,49.667,o),
(29,43,cs),
(6.333,39,o),
(-5,39.667,o),
(-5,17,cs),
(-5,-1.667,o),
(15.333,-6,o),
(38,-6,cs),
(47.333,-6,o),
(59.167,-5.667,o),
(73.5,-5,cs),
(87.833,-4.333,o),
(100.333,-4,o),
(111,-4,cs),
(136.333,-4,o),
(157.167,-4.333,o),
(173.5,-5,cs),
(189.833,-5.667,o),
(205.333,-6,o),
(220,-6,cs),
(236,-6,o),
(249,-2.667,o),
(249,16,cs),
(249,32,o),
(237.667,41,o),
(207,41,cs),
(146,41,l),
(146,185,l),
(179,216,l),
(191.214,193.607,o),
(218.956,136.607,o),
(260,62.5,cs),
(304.684,-18.179,o),
(335.23,-59,o),
(349,-59,cs),
(416.333,-58.333,o),
(464.5,-56.833,o),
(493.5,-54.5,cs),
(522.5,-52.167,o),
(537,-45.333,o),
(537,-34,cs),
(537,-12.676,o),
(501.81,-9,o),
(471,-9,cs),
(443,-9,o),
(422.167,-8.5,o),
(408.5,-7.5,cs),
(394.833,-6.5,o),
(385.333,-3.333,o),
(380,2,cs),
(345.807,33.344,o),
(271.03,176.723,o),
(235,268,c),
(251.415,282.226,o),
(267.392,298.469,o),
(279.5,310,cs),
(294.752,324.526,o),
(314.83,342.928,o),
(339,366,cs),
(346.333,373.333,o),
(356.667,377.667,o),
(370,379,cs),
(404.667,382.333,o),
(430.167,385.667,o),
(446.5,389,cs),
(462.833,392.333,o),
(471,399,o),
(471,409,cs),
(471,419,o),
(463.5,425.167,o),
(448.5,427.5,cs),
(433.5,429.833,o),
(409.333,431,o),
(376,431,cs),
(297,431,ls),
(272.333,431,o),
(253.333,429.833,o),
(240,427.5,cs),
(226.667,425.167,o),
(220,418.333,o),
(220,407,cs),
(220,391,o),
(230.333,384,o),
(245,384,cs),
(249,384,ls),
(255,384,o),
(258,380.667,o),
(258,374,cs),
(258,368.667,o),
(249.167,358,o),
(231.5,342,cs),
(213.833,326,o),
(185.333,300,o),
(146,264,c),
(146,788,l),
(146,788,l)
);
},
{
closed = 1;
nodes = (
(201,-145,o),
(237,-144,o),
(237,-161,cs),
(237,-178,o),
(235,-191,o),
(231,-199,cs),
(226,-208,o),
(224,-215,o),
(224,-221,cs),
(224,-238,o),
(238,-240,o),
(245,-240,cs),
(269,-240,o),
(310,-190,o),
(310,-136,cs),
(310,-83,o),
(280,-64,o),
(253,-64,cs),
(216,-64,o),
(201,-89,o),
(201,-113,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
51 50 27 1 4 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 6 7 1 7 6 1 104 0 0 1 4 1 0 4 104 0 2 0 3 8 2 3 92 0 7 7 14 67 0 1 1 15 67 0 4 4 5 84 0 5 5 16 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 6 7 1 7 6 1 104 0 1 0 7 1 0 102 0 0 4 7 0 4 102 0 2 0 3 8 2 3 92 0 7 7 14 67 0 4 4 5 84 0 5 5 16 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 6 7 1 7 6 1 104 0 1 0 7 1 0 102 0 0 4 7 0 4 102 0 2 0 3 8 2 3 92 0 8 0 9 8 9 87 0 7 7 14 67 0 4 4 5 84 0 5 5 16 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
112 110 104 102 98 96 90 87 66 58 54 52 44 42 36 34 52 53 10 28
CALL[ ]	/* CallFunction */";
};
width = 533;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(411.333,-59,o),
(447.833,-58.333,o),
(473.5,-57,cs),
(499.167,-55.667,o),
(512,-51.333,o),
(512,-44,cs),
(512,-37.333,o),
(508.167,-33.167,o),
(500.5,-31.5,cs),
(492.833,-29.833,o),
(481.333,-29,o),
(466,-29,cs),
(438,-29,o),
(417.333,-28.5,o),
(404,-27.5,cs),
(390.667,-26.5,o),
(382,-23.333,o),
(378,-18,cs),
(307.679,67.704,o),
(231.779,232.662,o),
(220,268,c),
(254.118,297.569,o),
(293.054,336.415,o),
(345,386,cs),
(352.333,393.333,o),
(362.667,397.667,o),
(376,399,cs),
(431.857,403.297,o),
(457,405.782,o),
(457,419,cs),
(457,431.078,o),
(387.242,431,o),
(303,431,cs),
(253,431,o),
(228,426.333,o),
(228,417,cs),
(228,409,o),
(234.667,404.667,o),
(248,404,cs),
(282,402,ls),
(290,402,o),
(294,399.333,o),
(294,394,cs),
(294,384.857,o),
(240.996,328.719,o),
(131,234,c),
(131,788,ls),
(131,807.333,o),
(122.667,817,o),
(106,817,cs),
(8.492,817,o),
(-41,802.098,o),
(-41,791,cs),
(-41,787.667,o),
(-38.333,785.167,o),
(-33,783.5,cs),
(-27.667,781.833,o),
(-21,781,o),
(-13,781,cs),
(67,781,ls),
(81.667,781,o),
(89,773.333,o),
(89,758,cs),
(89,719.333,o),
(89.667,673.5,o),
(91,611.5,cs),
(92.333,549.5,o),
(93,471.333,o),
(93,370,cs),
(93,286.414,o),
(91.563,234.456,o),
(90.5,201.5,cs),
(89.38,166.785,o),
(88,130.045,o),
(88,75,cs),
(88,36.333,o),
(81.333,28.333,o),
(44,23,cs),
(20.667,19.667,o),
(5.833,16.833,o),
(-0.5,14.5,cs),
(-6.833,12.167,o),
(-10,9.333,o),
(-10,6,cs),
(-10,-2,o),
(1,-6,o),
(23,-6,cs),
(32.333,-6,o),
(44.167,-5.667,o),
(58.5,-5,cs),
(72.833,-4.333,o),
(85.333,-4,o),
(96,-4,cs),
(121.333,-4,o),
(142.167,-4.333,o),
(158.5,-5,cs),
(174.833,-5.667,o),
(190.333,-6,o),
(205,-6,cs),
(213,-6,o),
(219.833,-5,o),
(225.5,-3,cs),
(231.167,-1,o),
(234,1.667,o),
(234,5,cs),
(234,9,o),
(230.833,12.667,o),
(224.5,16,cs),
(218.167,19.333,o),
(207.333,21,o),
(192,21,cs),
(131,21,l),
(131,185,l),
(184,235,l),
(196.393,212.28,o),
(225.187,151.536,o),
(269.5,72,cs),
(312.468,-5.123,o),
(347.569,-59,o),
(364,-59,cs)
);
},
{
closed = 1;
nodes = (
(271.943,-204,o),
(288,-154.312,o),
(288,-125,cs),
(288,-79.667,o),
(266,-68,o),
(246,-68,cs),
(219.333,-68,o),
(206,-84.667,o),
(206,-102,cs),
(206,-134.202,o),
(242,-128.69,o),
(242,-146,cs),
(242,-152.667,o),
(240.167,-160.833,o),
(236.5,-170.5,cs),
(232.833,-180.167,o),
(231,-187.333,o),
(231,-192,cs),
(231,-198.667,o),
(238.333,-204,o),
(245,-204,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
51 50 29 0 4 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 2 0 3 8 2 3 91 0 6 6 7 83 0 7 7 14 67 0 0 0 1 83 0 1 1 15 67 0 4 4 5 83 0 5 5 16 67 0 8 8 9 83 0 9 9 17 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 0 4 1 0 91 0 2 0 3 8 2 3 91 0 6 6 7 83 0 7 7 14 67 0 4 4 5 83 0 5 5 16 67 0 8 8 9 83 0 9 9 17 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 0 4 1 0 91 0 2 0 3 8 2 3 91 0 8 0 9 8 9 87 0 6 6 7 83 0 7 7 14 67 0 4 4 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
111 109 103 101 97 95 89 86 66 58 54 52 44 41 38 36 50 54 10 17
CALL[ ]	/* CallFunction */";
};
width = 510;
}
);
note = kcommaaccent;
unicode = 311;
},
{
glyphname = kgreenlandic;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(184,447.333,o),
(175.667,457,o),
(159,457,cs),
(78.246,457,o),
(-5,444.086,o),
(-5,415,cs),
(-5,389.829,o),
(24.812,389,o),
(40,389,cs),
(69,389,ls),
(83.667,389,o),
(91,381.333,o),
(91,366,cs),
(91,306.418,o),
(92,297.575,o),
(92,238,cs),
(92,195.333,o),
(91.667,160.833,o),
(91,134.5,cs),
(90.333,108.167,o),
(90,88.333,o),
(90,75,cs),
(90,67.667,o),
(87,63.333,o),
(81,62,cs),
(75,60.667,o),
(63.333,58.333,o),
(46,55,cs),
(31.333,52.333,o),
(26,40.667,o),
(26,26,cs),
(26,2,o),
(49.333,-6,o),
(76,-6,cs),
(85.333,-6,o),
(97.167,-5.667,o),
(111.5,-5,cs),
(125.833,-4.333,o),
(138.333,-4,o),
(149,-4,cs),
(174.333,-4,o),
(195.167,-4.333,o),
(211.5,-5,cs),
(227.833,-5.667,o),
(243.333,-6,o),
(258,-6,cs),
(274,-6,o),
(287,2.333,o),
(287,21,cs),
(287,45,o),
(275.667,53,o),
(245,53,cs),
(184,53,l),
(184,185,l),
(203,205,l),
(217.748,177.962,o),
(246.559,117.124,o),
(280.5,57,cs),
(323.895,-19.871,o),
(351.763,-59,o),
(366,-59,cs),
(438.667,-59,o),
(491.667,-56.5,o),
(525,-51.5,cs),
(558.333,-46.5,o),
(575,-38.667,o),
(575,-28,cs),
(575,2.652,o),
(514.419,3,o),
(494,3,cs),
(466,3,o),
(445.167,3.5,o),
(431.5,4.5,cs),
(417.833,5.5,o),
(409.333,8.667,o),
(406,14,cs),
(336.684,120.449,o),
(280.22,246.34,o),
(273,268,c),
(296.457,288.33,o),
(317.09,311.131,o),
(362,354,cs),
(369.333,361.333,o),
(379.667,365.667,o),
(393,367,cs),
(437,370.333,o),
(467.833,374.833,o),
(485.5,380.5,cs),
(503.167,386.167,o),
(512,393.667,o),
(512,403,cs),
(512,429.839,o),
(451.951,431,o),
(320,431,cs),
(270.667,431,o),
(242,425,o),
(242,397,cs),
(242,383.667,o),
(247.667,377,o),
(259,377,cs),
(268,377,ls),
(271.333,377,o),
(273,376,o),
(273,374,cs),
(273,370.667,o),
(266.333,361.833,o),
(253,347.5,cs),
(239.667,333.167,o),
(216.667,311.333,o),
(184,282,c),
(184,428,l),
(184,428,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
50 49 26 0 4 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
6 1 0 1 4 1 0 4 104 0 2 0 3 2 3 88 0 7 7 23 67 0 1 1 15 67 0 4 4 5 84 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 7 1 7 106 0 1 6 1 106 0 6 0 6 106 0 0 4 0 106 0 2 0 3 2 3 88 0 4 4 5 84 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
95 93 86 82 65 57 53 51 43 41 35 33 51 52 8 17
CALL[ ]	/* CallFunction */";
};
width = 572;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(177,447.333,o),
(168.667,457,o),
(152,457,cs),
(74.31,457,o),
(-5,444.185,o),
(-5,421,cs),
(-5,402.333,o),
(17,401,o),
(33,401,cs),
(83,401,ls),
(97.667,401,o),
(105,393.333,o),
(105,378,cs),
(105,312.925,o),
(106,300.795,o),
(106,238,cs),
(106,195.333,o),
(105.667,160.833,o),
(105,134.5,cs),
(104.333,108.167,o),
(104,88.333,o),
(104,75,cs),
(104,52.333,o),
(96,49.667,o),
(60,43,cs),
(37.333,39,o),
(26,30,o),
(26,16,cs),
(26,-1.333,o),
(46.333,-6,o),
(69,-6,cs),
(78.333,-6,o),
(90.167,-5.667,o),
(104.5,-5,cs),
(118.833,-4.333,o),
(131.333,-4,o),
(142,-4,cs),
(167.333,-4,o),
(188.167,-4.333,o),
(204.5,-5,cs),
(220.833,-5.667,o),
(236.333,-6,o),
(251,-6,cs),
(267,-6,o),
(280,0.333,o),
(280,15,cs),
(280,33.667,o),
(268.667,41,o),
(238,41,cs),
(177,41,l),
(177,185,l),
(210,216,l),
(222.214,193.607,o),
(249.956,136.607,o),
(291,62.5,cs),
(318.62,12.631,o),
(361.071,-59,o),
(380,-59,cs),
(442.667,-59,o),
(489,-57.167,o),
(519,-53.5,cs),
(549,-49.833,o),
(564,-43.333,o),
(564,-34,cs),
(564,-11.082,o),
(532.388,-9,o),
(497,-9,cs),
(469,-9,o),
(448.167,-8.5,o),
(434.5,-7.5,cs),
(420.833,-6.5,o),
(412.333,-3.333,o),
(409,2,cs),
(331.278,110.255,o),
(276.965,235.105,o),
(266,268,c),
(282.415,282.226,o),
(298.392,298.469,o),
(310.5,310,cs),
(325.752,324.526,o),
(345.83,342.928,o),
(370,366,cs),
(377.333,373.333,o),
(387.667,377.667,o),
(401,379,cs),
(441,382.333,o),
(468.167,386.167,o),
(482.5,390.5,cs),
(496.833,394.833,o),
(504,401,o),
(504,409,cs),
(504,431.431,o),
(432.842,431,o),
(328,431,cs),
(303.333,431,o),
(284.333,429.167,o),
(271,425.5,cs),
(257.667,421.833,o),
(251,415.667,o),
(251,407,cs),
(251,396.333,o),
(255.333,384,o),
(274,384,cs),
(278,384,ls),
(285.333,384,o),
(289,380.667,o),
(289,374,cs),
(289,370,o),
(280.167,359.167,o),
(262.5,341.5,cs),
(244.833,323.833,o),
(216.333,298,o),
(177,264,c),
(177,428,l),
(177,428,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
51 50 27 0 4 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 6 1 0 1 6 0 104 0 0 4 1 0 4 102 0 2 0 3 2 3 88 0 7 7 23 67 0 1 1 15 67 0 4 4 5 84 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 7 1 7 106 0 1 6 1 106 0 6 0 6 106 0 0 4 0 106 0 2 0 3 2 3 88 0 4 4 5 84 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
93 91 85 82 66 58 54 52 44 42 37 34 52 52 8 17
CALL[ ]	/* CallFunction */";
};
width = 561;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(447.333,-59,o),
(483.833,-58.333,o),
(509.5,-57,cs),
(535.167,-55.667,o),
(548,-51.333,o),
(548,-44,cs),
(548,-37.333,o),
(544.167,-33.167,o),
(536.5,-31.5,cs),
(528.833,-29.833,o),
(517.333,-29,o),
(502,-29,cs),
(474,-29,o),
(453.333,-28.5,o),
(440,-27.5,cs),
(426.667,-26.5,o),
(418,-23.333,o),
(414,-18,cs),
(343.679,67.704,o),
(267.779,232.662,o),
(256,268,c),
(290.118,297.569,o),
(329.054,336.415,o),
(381,386,cs),
(388.333,393.333,o),
(398.667,397.667,o),
(412,399,cs),
(467.857,403.297,o),
(493,405.782,o),
(493,419,cs),
(493,431.078,o),
(423.242,431,o),
(339,431,cs),
(289,431,o),
(264,426.333,o),
(264,417,cs),
(264,409,o),
(270.667,404.667,o),
(284,404,cs),
(318,402,ls),
(326,402,o),
(330,399.333,o),
(330,394,cs),
(330,384.857,o),
(276.996,328.719,o),
(167,234,c),
(167,428,ls),
(167,447.333,o),
(158.667,457,o),
(142,457,cs),
(44.492,457,o),
(-5,442.098,o),
(-5,431,cs),
(-5,427.667,o),
(-2.333,425.167,o),
(3,423.5,cs),
(8.333,421.833,o),
(15,421,o),
(23,421,cs),
(103,421,ls),
(117.667,421,o),
(125,413.333,o),
(125,398,cs),
(125,326.347,o),
(126,307.252,o),
(126,238,cs),
(126,195.333,o),
(125.667,160.833,o),
(125,134.5,cs),
(124.333,108.167,o),
(124,88.333,o),
(124,75,cs),
(124,36.333,o),
(117.333,28.333,o),
(80,23,cs),
(56.667,19.667,o),
(41.833,16.833,o),
(35.5,14.5,cs),
(29.167,12.167,o),
(26,9.333,o),
(26,6,cs),
(26,-2,o),
(37,-6,o),
(59,-6,cs),
(68.333,-6,o),
(80.167,-5.667,o),
(94.5,-5,cs),
(108.833,-4.333,o),
(121.333,-4,o),
(132,-4,cs),
(157.333,-4,o),
(178.167,-4.333,o),
(194.5,-5,cs),
(210.833,-5.667,o),
(226.333,-6,o),
(241,-6,cs),
(249,-6,o),
(255.833,-5,o),
(261.5,-3,cs),
(267.167,-1,o),
(270,1.667,o),
(270,5,cs),
(270,9,o),
(266.833,12.667,o),
(260.5,16,cs),
(254.167,19.333,o),
(243.333,21,o),
(228,21,cs),
(167,21,l),
(167,185,l),
(220,235,l),
(232.349,212.36,o),
(262.575,151.993,o),
(306,72,cs),
(347.823,-5.043,o),
(384.003,-59,o),
(400,-59,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
51 50 29 0 4 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 2 0 3 2 3 87 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 0 4 4 5 83 0 5 5 16 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 7 0 6 0 7 6 91 0 1 0 0 4 1 0 91 0 2 0 3 2 3 87 0 4 4 5 83 0 5 5 16 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
93 91 85 82 66 58 54 52 44 41 38 36 50 54 8 17
CALL[ ]	/* CallFunction */";
};
width = 546;
}
);
note = kgreenlandic;
unicode = 312;
},
{
glyphname = l;
kernLeft = l;
kernRight = l;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(185,821,o),
(179.351,821,o),
(135,821,cs),
(-5.449,821,o),
(-29,808.057,o),
(-29,779,cs),
(-29,771,o),
(-25.5,765,o),
(-18.5,761,cs),
(-11.5,757,o),
(0.667,755,o),
(18,755,cs),
(61,755,ls),
(79.667,755,o),
(94,745.667,o),
(94,723,cs),
(94,683.416,o),
(93.929,643.082,o),
(94.5,602,cs),
(95.181,552.934,o),
(95,489.936,o),
(95,413,cs),
(95,337.421,o),
(95.354,274.928,o),
(94,225.5,cs),
(92.667,176.833,o),
(91.333,137.667,o),
(90,103,cs),
(88.667,84.333,o),
(73,72.333,o),
(53,71,cs),
(16,69,ls),
(2.667,67.667,o),
(-10,60.333,o),
(-10,39,cs),
(-10,17.667,o),
(6,0,o),
(42,0,cs),
(52.667,0,o),
(65.333,0.333,o),
(80,1,cs),
(94.667,1.667,o),
(111,2,o),
(129,2,cs),
(127.551,2,o),
(196.589,-1,o),
(233,-1,cs),
(266.333,-1,o),
(278,22,o),
(278,34,cs),
(278,55.333,o),
(267.667,75,o),
(221,75,cs),
(186,75,l),
(186,117.667,o),
(185.667,183.833,o),
(185,273.5,cs),
(184.333,363.167,o),
(184,480.667,o),
(184,626,cs),
(184,634.667,o),
(184.167,651,o),
(184.5,675,cs),
(184.833,699,o),
(185,727.667,o),
(185,761,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
31 1 0 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 3 4 0 4 3 0 104 0 4 4 12 67 2 1 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 3 4 0 4 3 0 104 0 2 0 1 0 2 96 0 4 4 14 67 0 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
38 62 37 164 38 5 20
CALL[ ]	/* CallFunction */";
};
width = 269;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(167,819.667,o),
(147.333,820,o),
(110,820,cs),
(77.017,820,o),
(-30,819.117,o),
(-30,791,cs),
(-30,775,o),
(-12,770,o),
(16,770,cs),
(78,770,ls),
(95.333,770,o),
(97,763.333,o),
(97,742,cs),
(97,701.726,o),
(96.902,658.558,o),
(97.5,612.5,cs),
(98.182,559.966,o),
(98,493.468,o),
(98,413,cs),
(98,332.983,o),
(98.35,266.656,o),
(97,214,cs),
(95.667,162,o),
(94.333,122.333,o),
(93,85,cs),
(91.667,66.333,o),
(76,56,o),
(46,54,cs),
(13,52,ls),
(6.333,52,o),
(-8,46,o),
(-8,26,cs),
(-8,20,o),
(-4.833,14.167,o),
(1.5,8.5,cs),
(7.833,2.833,o),
(19,0,o),
(35,0,cs),
(57.808,0,o),
(90.67,2,o),
(126,2,cs),
(161.729,2,o),
(200.067,-1,o),
(226,-1,cs),
(254,-1,o),
(264,14.333,o),
(264,25,cs),
(264,33,o),
(260.833,40.333,o),
(254.5,47,cs),
(248.167,53.667,o),
(234.667,57,o),
(214,57,cs),
(168,57,l),
(168,101.667,o),
(167.667,170,o),
(167,262,cs),
(166.333,354,o),
(166,475.333,o),
(166,626,cs),
(166,628.162,o),
(167,681.162,o),
(167,785,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 0 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
53 61 52 196 40 5 20
CALL[ ]	/* CallFunction */";
};
width = 256;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(226.667,-1,o),
(234,0,o),
(238,2,cs),
(242,4,o),
(244,6.667,o),
(244,10,cs),
(244,14,o),
(241.5,17.833,o),
(236.5,21.5,cs),
(231.5,25.167,o),
(220.667,27,o),
(204,27,cs),
(143,27,l),
(143,73.667,o),
(142.667,145.5,o),
(142,242.5,cs),
(141.333,339.5,o),
(141,467.333,o),
(141,626,cs),
(141,628.162,o),
(142,681.162,o),
(142,785,cs),
(142,819.667,o),
(126.667,820,o),
(100,820,cs),
(46.785,820,o),
(-30,815.896,o),
(-30,799,cs),
(-30,795.667,o),
(-26.833,793.333,o),
(-20.5,792,cs),
(-14.167,790.667,o),
(-5.333,790,o),
(6,790,cs),
(83,790,ls),
(100.333,790,o),
(102,783.333,o),
(102,762,cs),
(102,718.9,o),
(101.904,672.898,o),
(102.5,624,cs),
(103.18,568.236,o),
(103,497.904,o),
(103,413,cs),
(103,326.791,o),
(103.36,254.463,o),
(102,196,cs),
(100.667,138.667,o),
(99.333,95,o),
(98,55,cs),
(96.667,37,o),
(76,27,o),
(36,25,cs),
(13,24,ls),
(-1,23.333,o),
(-8,19,o),
(-8,11,cs),
(-8,7,o),
(-5.833,4.167,o),
(-1.5,2.5,cs),
(2.833,0.833,o),
(11.667,0,o),
(25,0,cs),
(47.808,0,o),
(80.67,2,o),
(116,2,cs),
(151.729,2,o),
(190.067,-1,o),
(216,-1,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
33 1 0 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
53 61 51 196 40 5 20
CALL[ ]	/* CallFunction */";
};
width = 237;
}
);
note = l;
unicode = 108;
},
{
glyphname = lacute;
kernLeft = l;
kernRight = l;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(204,943.257,o),
(193.519,972,o),
(154,972,cs),
(127.333,972,o),
(99.167,943.167,o),
(78.5,914.5,cs),
(60.429,889.434,o),
(44,856.962,o),
(44,852,cs),
(46.667,833.333,o),
(62.333,830,o),
(81,830,cs),
(127.996,830,o),
(204,882.26,o),
(204,931,cs)
);
},
{
closed = 1;
nodes = (
(220,821,o),
(214.351,821,o),
(170,821,cs),
(29.551,821,o),
(6,808.057,o),
(6,779,cs),
(6,771,o),
(9.5,765,o),
(16.5,761,cs),
(23.5,757,o),
(35.667,755,o),
(53,755,cs),
(96,755,ls),
(114.667,755,o),
(129,745.667,o),
(129,723,cs),
(129,683.416,o),
(128.929,643.082,o),
(129.5,602,cs),
(130.181,552.934,o),
(130,489.936,o),
(130,413,cs),
(130,337.421,o),
(130.354,274.928,o),
(129,225.5,cs),
(127.667,176.833,o),
(126.333,137.667,o),
(125,103,cs),
(123.667,84.333,o),
(108,72.333,o),
(88,71,cs),
(51,69,ls),
(37.667,67.667,o),
(25,60.333,o),
(25,39,cs),
(25,17.667,o),
(41,0,o),
(77,0,cs),
(87.667,0,o),
(100.333,0.333,o),
(115,1,cs),
(129.667,1.667,o),
(146,2,o),
(164,2,cs),
(162.551,2,o),
(231.589,-1,o),
(268,-1,cs),
(301.333,-1,o),
(313,22,o),
(313,34,cs),
(313,55.333,o),
(302.667,75,o),
(256,75,cs),
(221,75,l),
(221,117.667,o),
(220.667,183.833,o),
(220,273.5,cs),
(219.333,363.167,o),
(219,480.667,o),
(219,626,cs),
(219,634.667,o),
(219.167,651,o),
(219.5,675,cs),
(219.833,699,o),
(220,727.667,o),
(220,761,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
8 1 0 1 49 1 2 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 6 2 6 5 2 104 0 6 6 12 67 4 1 2 2 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 6 2 6 5 2 104 0 4 2 3 2 4 96 0 6 6 14 67 0 2 2 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 62 37 164 42 38 36 7 22
CALL[ ]	/* CallFunction */";
};
width = 269;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(192,954,o),
(181.667,972,o),
(155,972,cs),
(135,972,o),
(108.167,948.167,o),
(87.5,923.5,cs),
(69.358,901.846,o),
(51,873.191,o),
(51,865,cs),
(52.333,849,o),
(65.333,847,o),
(76,847,cs),
(112.116,847,o),
(192,900.895,o),
(192,938,cs)
);
},
{
closed = 1;
nodes = (
(167,819.667,o),
(147.333,820,o),
(110,820,cs),
(77.017,820,o),
(-30,819.117,o),
(-30,791,cs),
(-30,775,o),
(-12,770,o),
(16,770,cs),
(78,770,ls),
(95.333,770,o),
(97,763.333,o),
(97,742,cs),
(97,701.726,o),
(96.902,658.558,o),
(97.5,612.5,cs),
(98.182,559.966,o),
(98,493.468,o),
(98,413,cs),
(98,332.983,o),
(98.35,266.656,o),
(97,214,cs),
(95.667,162,o),
(94.333,122.333,o),
(93,85,cs),
(91.667,66.333,o),
(76,56,o),
(46,54,cs),
(13,52,ls),
(6.333,52,o),
(-8,46,o),
(-8,26,cs),
(-8,20,o),
(-4.833,14.167,o),
(1.5,8.5,cs),
(7.833,2.833,o),
(19,0,o),
(35,0,cs),
(57.808,0,o),
(90.67,2,o),
(126,2,cs),
(161.729,2,o),
(200.067,-1,o),
(226,-1,cs),
(254,-1,o),
(264,14.333,o),
(264,25,cs),
(264,33,o),
(260.833,40.333,o),
(254.5,47,cs),
(248.167,53.667,o),
(234.667,57,o),
(214,57,cs),
(168,57,l),
(168,101.667,o),
(167.667,170,o),
(167,262,cs),
(166.333,354,o),
(166,475.333,o),
(166,626,cs),
(166,628.162,o),
(167,681.162,o),
(167,785,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
8 1 0 1 50 1 2 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 5 6 83 0 6 6 12 67 4 1 2 2 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 5 6 83 0 6 6 14 67 4 1 2 2 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
53 61 52 196 42 38 36 7 22
CALL[ ]	/* CallFunction */";
};
width = 256;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(226.667,-1,o),
(234,0,o),
(238,2,cs),
(242,4,o),
(244,6.667,o),
(244,10,cs),
(244,14,o),
(241.5,17.833,o),
(236.5,21.5,cs),
(231.5,25.167,o),
(220.667,27,o),
(204,27,cs),
(143,27,l),
(143,73.667,o),
(142.667,145.5,o),
(142,242.5,cs),
(141.333,339.5,o),
(141,467.333,o),
(141,626,cs),
(141,628.162,o),
(142,681.162,o),
(142,785,cs),
(142,819.667,o),
(126.667,820,o),
(100,820,cs),
(46.785,820,o),
(-30,815.896,o),
(-30,799,cs),
(-30,795.667,o),
(-26.833,793.333,o),
(-20.5,792,cs),
(-14.167,790.667,o),
(-5.333,790,o),
(6,790,cs),
(83,790,ls),
(100.333,790,o),
(102,783.333,o),
(102,762,cs),
(102,718.9,o),
(101.904,672.898,o),
(102.5,624,cs),
(103.18,568.236,o),
(103,497.904,o),
(103,413,cs),
(103,326.791,o),
(103.36,254.463,o),
(102,196,cs),
(100.667,138.667,o),
(99.333,95,o),
(98,55,cs),
(96.667,37,o),
(76,27,o),
(36,25,cs),
(13,24,ls),
(-1,23.333,o),
(-8,19,o),
(-8,11,cs),
(-8,7,o),
(-5.833,4.167,o),
(-1.5,2.5,cs),
(2.833,0.833,o),
(11.667,0,o),
(25,0,cs),
(47.808,0,o),
(80.67,2,o),
(116,2,cs),
(151.729,2,o),
(190.067,-1,o),
(216,-1,cs)
);
},
{
closed = 1;
nodes = (
(85.311,875,o),
(175,928.367,o),
(175,950,cs),
(175,968.667,o),
(166.667,972,o),
(156,972,cs),
(136.012,972,o),
(61,910.697,o),
(61,886,cs),
(61,878.667,o),
(63.667,875,o),
(69,875,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
48 1 2 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 5 6 83 0 6 6 12 67 4 1 2 2 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 5 6 83 0 6 6 14 67 4 1 2 2 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
53 61 51 196 42 37 36 7 22
CALL[ ]	/* CallFunction */";
};
width = 237;
}
);
note = lacute;
unicode = 314;
},
{
glyphname = lcaron;
kernLeft = l;
kernRight = l;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(222,760.029,o),
(258,758.443,o),
(258,741,cs),
(258,721,o),
(255.5,706.167,o),
(250.5,696.5,cs),
(245.5,686.833,o),
(243,678.667,o),
(243,672,cs),
(243,649.333,o),
(262.333,649,o),
(269,649,cs),
(287.413,649,o),
(350,691.464,o),
(350,768,cs),
(350,825.333,o),
(314,849,o),
(282,849,cs),
(238,849,o),
(222,819,o),
(222,791,cs)
);
},
{
closed = 1;
nodes = (
(220,821,o),
(214.351,821,o),
(170,821,cs),
(29.551,821,o),
(6,808.057,o),
(6,779,cs),
(6,771,o),
(9.5,765,o),
(16.5,761,cs),
(23.5,757,o),
(35.667,755,o),
(53,755,cs),
(96,755,ls),
(114.667,755,o),
(129,745.667,o),
(129,723,cs),
(129,683.416,o),
(128.929,643.082,o),
(129.5,602,cs),
(130.181,552.934,o),
(130,489.936,o),
(130,413,cs),
(130,337.421,o),
(130.354,274.928,o),
(129,225.5,cs),
(127.667,176.833,o),
(126.333,137.667,o),
(125,103,cs),
(123.667,84.333,o),
(108,72.333,o),
(88,71,cs),
(51,69,ls),
(37.667,67.667,o),
(25,60.333,o),
(25,39,cs),
(25,17.667,o),
(41,0,o),
(77,0,cs),
(87.667,0,o),
(100.333,0.333,o),
(115,1,cs),
(129.667,1.667,o),
(146,2,o),
(164,2,cs),
(162.551,2,o),
(231.589,-1,o),
(268,-1,cs),
(301.333,-1,o),
(313,22,o),
(313,34,cs),
(313,55.333,o),
(302.667,75,o),
(256,75,cs),
(221,75,l),
(221,117.667,o),
(220.667,183.833,o),
(220,273.5,cs),
(219.333,363.167,o),
(219,480.667,o),
(219,626,cs),
(219,634.667,o),
(219.167,651,o),
(219.5,675,cs),
(219.833,699,o),
(220,727.667,o),
(220,761,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
53 1 2 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 5 6 1 6 5 1 104 0 6 6 12 67 0 1 1 0 83 0 0 0 20 67 4 1 2 2 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 5 6 1 6 5 1 104 0 4 2 3 2 4 96 0 0 0 1 2 0 1 91 0 6 6 14 67 0 2 2 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
76 74 68 65 51 49 44 34 30 28 38 34 7 17
CALL[ ]	/* CallFunction */";
};
width = 269;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(167,819.667,o),
(147.333,820,o),
(110,820,cs),
(77.017,820,o),
(-30,819.117,o),
(-30,791,cs),
(-30,775,o),
(-12,770,o),
(16,770,cs),
(78,770,ls),
(95.333,770,o),
(97,763.333,o),
(97,742,cs),
(97,701.726,o),
(96.902,658.558,o),
(97.5,612.5,cs),
(98.182,559.966,o),
(98,493.468,o),
(98,413,cs),
(98,332.983,o),
(98.35,266.656,o),
(97,214,cs),
(95.667,162,o),
(94.333,122.333,o),
(93,85,cs),
(91.667,66.333,o),
(76,56,o),
(46,54,cs),
(13,52,ls),
(6.333,52,o),
(-8,46,o),
(-8,26,cs),
(-8,20,o),
(-4.833,14.167,o),
(1.5,8.5,cs),
(7.833,2.833,o),
(19,0,o),
(35,0,cs),
(57.808,0,o),
(90.67,2,o),
(126,2,cs),
(161.729,2,o),
(200.067,-1,o),
(226,-1,cs),
(254,-1,o),
(264,14.333,o),
(264,25,cs),
(264,33,o),
(260.833,40.333,o),
(254.5,47,cs),
(248.167,53.667,o),
(234.667,57,o),
(214,57,cs),
(168,57,l),
(168,101.667,o),
(167.667,170,o),
(167,262,cs),
(166.333,354,o),
(166,475.333,o),
(166,626,cs),
(166,628.162,o),
(167,681.162,o),
(167,785,cs)
);
},
{
closed = 1;
nodes = (
(211,769,o),
(247,770,o),
(247,753,cs),
(247,736,o),
(245,723,o),
(241,715,cs),
(236,706,o),
(234,699,o),
(234,693,cs),
(234,676,o),
(248,674,o),
(255,674,cs),
(279,674,o),
(320,724,o),
(320,778,cs),
(320,831,o),
(290,850,o),
(263,850,cs),
(226,850,o),
(211,825,o),
(211,801,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
35 1 0 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 4 83 0 4 4 12 67 0 6 6 5 83 0 5 5 20 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 0 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 36 53 61 52 196 41 7 33
CALL[ ]	/* CallFunction */";
};
width = 256;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(226.667,-1,o),
(234,0,o),
(238,2,cs),
(242,4,o),
(244,6.667,o),
(244,10,cs),
(244,14,o),
(241.5,17.833,o),
(236.5,21.5,cs),
(231.5,25.167,o),
(220.667,27,o),
(204,27,cs),
(143,27,l),
(143,73.667,o),
(142.667,145.5,o),
(142,242.5,cs),
(141.333,339.5,o),
(141,467.333,o),
(141,626,cs),
(141,628.162,o),
(142,681.162,o),
(142,785,cs),
(142,819.667,o),
(126.667,820,o),
(100,820,cs),
(46.785,820,o),
(-30,815.896,o),
(-30,799,cs),
(-30,795.667,o),
(-26.833,793.333,o),
(-20.5,792,cs),
(-14.167,790.667,o),
(-5.333,790,o),
(6,790,cs),
(83,790,ls),
(100.333,790,o),
(102,783.333,o),
(102,762,cs),
(102,718.9,o),
(101.904,672.898,o),
(102.5,624,cs),
(103.18,568.236,o),
(103,497.904,o),
(103,413,cs),
(103,326.791,o),
(103.36,254.463,o),
(102,196,cs),
(100.667,138.667,o),
(99.333,95,o),
(98,55,cs),
(96.667,37,o),
(76,27,o),
(36,25,cs),
(13,24,ls),
(-1,23.333,o),
(-8,19,o),
(-8,11,cs),
(-8,7,o),
(-5.833,4.167,o),
(-1.5,2.5,cs),
(2.833,0.833,o),
(11.667,0,o),
(25,0,cs),
(47.808,0,o),
(80.67,2,o),
(116,2,cs),
(151.729,2,o),
(190.067,-1,o),
(216,-1,cs)
);
},
{
closed = 1;
nodes = (
(258.684,715,o),
(279,781.634,o),
(279,806,cs),
(279,832.667,o),
(262.333,850,o),
(237,850,cs),
(215.667,850,o),
(201,834.667,o),
(201,816,cs),
(201,792.909,o),
(227,784.261,o),
(227,772,cs),
(227,764.667,o),
(223.833,757.167,o),
(217.5,749.5,cs),
(211.167,741.833,o),
(208,735.333,o),
(208,730,cs),
(208,722,o),
(217.333,715,o),
(224,715,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
33 1 0 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 4 83 0 4 4 12 67 0 6 6 5 83 0 5 5 20 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 0 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 36 53 61 51 196 40 7 22
CALL[ ]	/* CallFunction */";
};
width = 237;
}
);
note = lcaron;
unicode = 318;
},
{
glyphname = lcommaaccent;
kernLeft = l;
kernRight = l;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(73,-137.971,o),
(109,-139.557,o),
(109,-157,cs),
(109,-177,o),
(106.5,-191.833,o),
(101.5,-201.5,cs),
(96.5,-211.167,o),
(94,-219.333,o),
(94,-226,cs),
(94,-248.667,o),
(113.333,-249,o),
(120,-249,cs),
(138.413,-249,o),
(201,-206.536,o),
(201,-130,cs),
(201,-72.667,o),
(165,-49,o),
(133,-49,cs),
(89,-49,o),
(73,-79,o),
(73,-107,cs)
);
},
{
closed = 1;
nodes = (
(220,821,o),
(214.351,821,o),
(170,821,cs),
(29.551,821,o),
(6,808.057,o),
(6,779,cs),
(6,771,o),
(9.5,765,o),
(16.5,761,cs),
(23.5,757,o),
(35.667,755,o),
(53,755,cs),
(96,755,ls),
(114.667,755,o),
(129,745.667,o),
(129,723,cs),
(129,683.416,o),
(128.929,643.082,o),
(129.5,602,cs),
(130.181,552.934,o),
(130,489.936,o),
(130,413,cs),
(130,337.421,o),
(130.354,274.928,o),
(129,225.5,cs),
(127.667,176.833,o),
(126.333,137.667,o),
(125,103,cs),
(123.667,84.333,o),
(108,72.333,o),
(88,71,cs),
(51,69,ls),
(37.667,67.667,o),
(25,60.333,o),
(25,39,cs),
(25,17.667,o),
(41,0,o),
(77,0,cs),
(87.667,0,o),
(100.333,0.333,o),
(115,1,cs),
(129.667,1.667,o),
(146,2,o),
(164,2,cs),
(162.551,2,o),
(231.589,-1,o),
(268,-1,cs),
(301.333,-1,o),
(313,22,o),
(313,34,cs),
(313,55.333,o),
(302.667,75,o),
(256,75,cs),
(221,75,l),
(221,117.667,o),
(220.667,183.833,o),
(220,273.5,cs),
(219.333,363.167,o),
(219,480.667,o),
(219,626,cs),
(219,634.667,o),
(219.167,651,o),
(219.5,675,cs),
(219.833,699,o),
(220,727.667,o),
(220,761,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
53 1 2 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 5 6 2 6 5 2 104 0 6 6 12 67 4 1 2 2 3 84 0 3 3 13 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 5 6 2 6 5 2 104 0 0 0 1 0 1 87 0 6 6 12 67 4 1 2 2 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 5 6 2 6 5 2 104 0 4 2 3 2 4 96 0 0 0 1 0 1 87 0 6 6 14 67 0 2 2 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
76 74 68 65 51 49 44 34 30 28 38 34 7 17
CALL[ ]	/* CallFunction */";
};
width = 271;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(167,819.667,o),
(147.333,820,o),
(110,820,cs),
(77.017,820,o),
(-30,819.117,o),
(-30,791,cs),
(-30,775,o),
(-12,770,o),
(16,770,cs),
(78,770,ls),
(95.333,770,o),
(97,763.333,o),
(97,742,cs),
(97,701.726,o),
(96.902,658.558,o),
(97.5,612.5,cs),
(98.182,559.966,o),
(98,493.468,o),
(98,413,cs),
(98,332.983,o),
(98.35,266.656,o),
(97,214,cs),
(95.667,162,o),
(94.333,122.333,o),
(93,85,cs),
(91.667,66.333,o),
(76,56,o),
(46,54,cs),
(13,52,ls),
(6.333,52,o),
(-8,46,o),
(-8,26,cs),
(-8,20,o),
(-4.833,14.167,o),
(1.5,8.5,cs),
(7.833,2.833,o),
(19,0,o),
(35,0,cs),
(57.808,0,o),
(90.67,2,o),
(126,2,cs),
(161.729,2,o),
(200.067,-1,o),
(226,-1,cs),
(254,-1,o),
(264,14.333,o),
(264,25,cs),
(264,33,o),
(260.833,40.333,o),
(254.5,47,cs),
(248.167,53.667,o),
(234.667,57,o),
(214,57,cs),
(168,57,l),
(168,101.667,o),
(167.667,170,o),
(167,262,cs),
(166.333,354,o),
(166,475.333,o),
(166,626,cs),
(166,628.162,o),
(167,681.162,o),
(167,785,cs)
);
},
{
closed = 1;
nodes = (
(76,-135,o),
(112,-134,o),
(112,-151,cs),
(112,-168,o),
(110,-181,o),
(106,-189,cs),
(101,-198,o),
(99,-205,o),
(99,-211,cs),
(99,-228,o),
(113,-230,o),
(120,-230,cs),
(144,-230,o),
(185,-180,o),
(185,-126,cs),
(185,-73,o),
(155,-54,o),
(128,-54,cs),
(91,-54,o),
(76,-79,o),
(76,-103,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
35 1 0 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 67 0 5 5 6 83 0 6 6 25 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 5 0 6 5 6 87 0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 5 0 6 5 6 87 0 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 36 53 61 52 196 41 7 33
CALL[ ]	/* CallFunction */";
};
width = 257;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(226.667,-1,o),
(234,0,o),
(238,2,cs),
(242,4,o),
(244,6.667,o),
(244,10,cs),
(244,14,o),
(241.5,17.833,o),
(236.5,21.5,cs),
(231.5,25.167,o),
(220.667,27,o),
(204,27,cs),
(143,27,l),
(143,73.667,o),
(142.667,145.5,o),
(142,242.5,cs),
(141.333,339.5,o),
(141,467.333,o),
(141,626,cs),
(141,628.162,o),
(142,681.162,o),
(142,785,cs),
(142,819.667,o),
(126.667,820,o),
(100,820,cs),
(46.785,820,o),
(-30,815.896,o),
(-30,799,cs),
(-30,795.667,o),
(-26.833,793.333,o),
(-20.5,792,cs),
(-14.167,790.667,o),
(-5.333,790,o),
(6,790,cs),
(83,790,ls),
(100.333,790,o),
(102,783.333,o),
(102,762,cs),
(102,718.9,o),
(101.904,672.898,o),
(102.5,624,cs),
(103.18,568.236,o),
(103,497.904,o),
(103,413,cs),
(103,326.791,o),
(103.36,254.463,o),
(102,196,cs),
(100.667,138.667,o),
(99.333,95,o),
(98,55,cs),
(96.667,37,o),
(76,27,o),
(36,25,cs),
(13,24,ls),
(-1,23.333,o),
(-8,19,o),
(-8,11,cs),
(-8,7,o),
(-5.833,4.167,o),
(-1.5,2.5,cs),
(2.833,0.833,o),
(11.667,0,o),
(25,0,cs),
(47.808,0,o),
(80.67,2,o),
(116,2,cs),
(151.729,2,o),
(190.067,-1,o),
(216,-1,cs)
);
},
{
closed = 1;
nodes = (
(145.943,-201,o),
(162,-151.312,o),
(162,-122,cs),
(162,-76.667,o),
(140,-65,o),
(120,-65,cs),
(93.333,-65,o),
(80,-81.667,o),
(80,-99,cs),
(80,-131.202,o),
(116,-125.69,o),
(116,-143,cs),
(116,-149.667,o),
(114.167,-157.833,o),
(110.5,-167.5,cs),
(106.833,-177.167,o),
(105,-184.333,o),
(105,-189,cs),
(105,-195.667,o),
(112.333,-201,o),
(119,-201,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
33 1 0 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 67 0 5 5 6 83 0 6 6 17 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 5 0 6 5 6 87 0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 5 0 6 5 6 87 0 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 36 53 61 51 196 40 7 22
CALL[ ]	/* CallFunction */";
};
width = 237;
}
);
note = lcommaaccent;
unicode = 316;
},
{
glyphname = ldot;
kernLeft = l;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(220,821,o),
(214.351,821,o),
(170,821,cs),
(29.551,821,o),
(6,808.057,o),
(6,779,cs),
(6,771,o),
(9.5,765,o),
(16.5,761,cs),
(23.5,757,o),
(35.667,755,o),
(53,755,cs),
(96,755,ls),
(114.667,755,o),
(129,745.667,o),
(129,723,cs),
(129,683.416,o),
(128.929,643.082,o),
(129.5,602,cs),
(130.181,552.934,o),
(130,489.936,o),
(130,413,cs),
(130,337.421,o),
(130.354,274.928,o),
(129,225.5,cs),
(127.667,176.833,o),
(126.333,137.667,o),
(125,103,cs),
(123.667,84.333,o),
(108,72.333,o),
(88,71,cs),
(51,69,ls),
(37.667,67.667,o),
(25,60.333,o),
(25,39,cs),
(25,17.667,o),
(41,0,o),
(77,0,cs),
(87.667,0,o),
(100.333,0.333,o),
(115,1,cs),
(129.667,1.667,o),
(146,2,o),
(164,2,cs),
(162.551,2,o),
(231.589,-1,o),
(268,-1,cs),
(301.333,-1,o),
(313,22,o),
(313,34,cs),
(313,55.333,o),
(302.667,75,o),
(256,75,cs),
(221,75,l),
(221,117.667,o),
(220.667,183.833,o),
(220,273.5,cs),
(219.333,363.167,o),
(219,480.667,o),
(219,626,cs),
(219,634.667,o),
(219.167,651,o),
(219.5,675,cs),
(219.833,699,o),
(220,727.667,o),
(220,761,cs)
);
},
{
closed = 1;
nodes = (
(231,356.333,o),
(256.667,333,o),
(290,333,cs),
(319.675,333,o),
(357,347.646,o),
(357,403,cs),
(357,439,o),
(329,464,o),
(297,464,cs),
(249.488,464,o),
(231,426.161,o),
(231,399,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
31 1 0 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 3 4 5 4 3 5 104 0 4 4 12 67 0 6 6 5 83 0 5 5 23 67 2 1 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 3 4 5 4 3 5 104 0 5 0 6 0 5 6 91 0 4 4 12 67 2 1 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 3 4 5 4 3 5 104 0 2 0 1 0 2 96 0 5 0 6 0 5 6 91 0 4 4 14 67 0 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 40 38 62 37 164 38 7 22
CALL[ ]	/* CallFunction */";
};
width = 330;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(167,819.667,o),
(147.333,820,o),
(110,820,cs),
(77.017,820,o),
(-30,819.117,o),
(-30,791,cs),
(-30,775,o),
(-12,770,o),
(16,770,cs),
(78,770,ls),
(95.333,770,o),
(97,763.333,o),
(97,742,cs),
(97,701.726,o),
(96.902,658.558,o),
(97.5,612.5,cs),
(98.182,559.966,o),
(98,493.468,o),
(98,413,cs),
(98,332.983,o),
(98.35,266.656,o),
(97,214,cs),
(95.667,162,o),
(94.333,122.333,o),
(93,85,cs),
(91.667,66.333,o),
(76,56,o),
(46,54,cs),
(13,52,ls),
(6.333,52,o),
(-8,46,o),
(-8,26,cs),
(-8,20,o),
(-4.833,14.167,o),
(1.5,8.5,cs),
(7.833,2.833,o),
(19,0,o),
(35,0,cs),
(57.808,0,o),
(90.67,2,o),
(126,2,cs),
(161.729,2,o),
(200.067,-1,o),
(226,-1,cs),
(254,-1,o),
(264,14.333,o),
(264,25,cs),
(264,33,o),
(260.833,40.333,o),
(254.5,47,cs),
(248.167,53.667,o),
(234.667,57,o),
(214,57,cs),
(168,57,l),
(168,101.667,o),
(167.667,170,o),
(167,262,cs),
(166.333,354,o),
(166,475.333,o),
(166,626,cs),
(166,628.162,o),
(167,681.162,o),
(167,785,cs)
);
},
{
closed = 1;
nodes = (
(227,359,o),
(249,338,o),
(276,338,cs),
(301,338,o),
(332,351,o),
(332,399,cs),
(332,430,o),
(310,451,o),
(283,451,cs),
(241,451,o),
(227,415,o),
(227,395,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
35 1 0 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 4 83 0 4 4 12 67 0 6 6 5 83 0 5 5 15 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 0 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
36 38 53 61 52 196 41 7 33
CALL[ ]	/* CallFunction */";
};
width = 317;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(226.667,-1,o),
(234,0,o),
(238,2,cs),
(242,4,o),
(244,6.667,o),
(244,10,cs),
(244,14,o),
(241.5,17.833,o),
(236.5,21.5,cs),
(231.5,25.167,o),
(220.667,27,o),
(204,27,cs),
(143,27,l),
(143,73.667,o),
(142.667,145.5,o),
(142,242.5,cs),
(141.333,339.5,o),
(141,467.333,o),
(141,626,cs),
(141,628.162,o),
(142,681.162,o),
(142,785,cs),
(142,819.667,o),
(126.667,820,o),
(100,820,cs),
(46.785,820,o),
(-30,815.896,o),
(-30,799,cs),
(-30,795.667,o),
(-26.833,793.333,o),
(-20.5,792,cs),
(-14.167,790.667,o),
(-5.333,790,o),
(6,790,cs),
(83,790,ls),
(100.333,790,o),
(102,783.333,o),
(102,762,cs),
(102,718.9,o),
(101.904,672.898,o),
(102.5,624,cs),
(103.18,568.236,o),
(103,497.904,o),
(103,413,cs),
(103,326.791,o),
(103.36,254.463,o),
(102,196,cs),
(100.667,138.667,o),
(99.333,95,o),
(98,55,cs),
(96.667,37,o),
(76,27,o),
(36,25,cs),
(13,24,ls),
(-1,23.333,o),
(-8,19,o),
(-8,11,cs),
(-8,7,o),
(-5.833,4.167,o),
(-1.5,2.5,cs),
(2.833,0.833,o),
(11.667,0,o),
(25,0,cs),
(47.808,0,o),
(80.67,2,o),
(116,2,cs),
(151.729,2,o),
(190.067,-1,o),
(216,-1,cs)
);
},
{
closed = 1;
nodes = (
(298.333,357,o),
(314,377,o),
(314,397,cs),
(314,415.667,o),
(301.667,435,o),
(271,435,cs),
(239,435,o),
(227,412.333,o),
(227,395,cs),
(227,377.667,o),
(238.333,357,o),
(269,357,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
33 1 0 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 4 83 0 4 4 12 67 0 6 6 5 83 0 5 5 15 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 5 0 6 0 5 6 91 0 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
36 36 53 61 51 196 40 7 22
CALL[ ]	/* CallFunction */";
};
width = 299;
}
);
note = ldot;
unicode = 320;
},
{
glyphname = lslash;
kernLeft = l;
kernRight = l;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(218,821,o),
(212.351,821,o),
(168,821,cs),
(27.551,821,o),
(4,808.057,o),
(4,779,cs),
(4,771,o),
(7.5,765,o),
(14.5,761,cs),
(21.5,757,o),
(33.667,755,o),
(51,755,cs),
(94,755,ls),
(112.667,755,o),
(127,745.667,o),
(127,723,cs),
(127,685.451,o),
(126.905,646.449,o),
(127.5,606,cs),
(128.183,559.583,o),
(128,500.584,o),
(128,429,c),
(81.333,395.667,o),
(38.333,365.667,o),
(17,351,cs),
(13,348.333,o),
(12,338,o),
(12,330,cs),
(12,306,o),
(29,289,o),
(53,289,cs),
(57,289,o),
(65.833,292.833,o),
(79.5,300.5,cs),
(93.167,308.167,o),
(109.333,317.667,o),
(128,329,c),
(126.667,225,o),
(125.667,159,o),
(123,103,cs),
(121.667,84.333,o),
(106,72.333,o),
(86,71,cs),
(49,69,ls),
(35.667,67.667,o),
(23,60.333,o),
(23,39,cs),
(23,17.667,o),
(39,0,o),
(75,0,cs),
(85.667,0,o),
(98.333,0.333,o),
(113,1,cs),
(127.667,1.667,o),
(144,2,o),
(162,2,cs),
(160.551,2,o),
(229.589,-1,o),
(266,-1,cs),
(299.333,-1,o),
(311,22,o),
(311,34,cs),
(311,55.333,o),
(300.667,75,o),
(254,75,cs),
(219,75,l),
(219,135,o),
(218.333,236.667,o),
(217,390,c),
(266.333,424.667,o),
(308.667,457.667,o),
(322,471,c),
(326,476.333,o),
(331,481.333,o),
(331,492,cs),
(331,507.979,o),
(325.016,538,o),
(289,538,cs),
(286.333,538,o),
(278,533.5,o),
(264,524.5,cs),
(250,515.5,o),
(234.333,504.667,o),
(217,492,c),
(217,626,ls),
(217,634.667,o),
(217.167,651,o),
(217.5,675,cs),
(217.833,699,o),
(218,727.667,o),
(218,761,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
61 49 18 4 4 4 0 46 1 1 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 5 6 0 6 5 0 104 0 0 4 6 0 4 102 0 4 1 6 4 1 102 0 6 6 12 67 3 1 1 1 2 84 0 2 2 13 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 5 6 0 6 5 0 104 0 0 4 6 0 4 102 0 4 1 6 4 1 102 0 3 1 2 1 3 96 0 6 6 14 67 0 1 1 2 84 0 2 2 13 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 63 39 37 164 45 38 7 22
CALL[ ]	/* CallFunction */";
};
width = 268;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(9.333,341,o),
(8,331.667,o),
(8,325,cs),
(8,306.333,o),
(20.667,295,o),
(38,295,cs),
(48.435,295,o),
(91.653,320.444,o),
(165.5,372.5,cs),
(232.861,419.984,o),
(277.915,453.203,o),
(307,477,cs),
(314.333,483,o),
(318,490.333,o),
(318,499,cs),
(318,513.667,o),
(313.333,532,o),
(288,532,cs),
(283.756,532,o),
(231.553,498.202,o),
(167.5,452,cs),
(100.534,403.697,o),
(40.543,361.991,o),
(16,345,cs)
);
},
{
closed = 1;
nodes = (
(175,819.667,o),
(155.333,820,o),
(118,820,cs),
(85.017,820,o),
(-22,819.117,o),
(-22,791,cs),
(-22,775,o),
(-4,770,o),
(24,770,cs),
(86,770,ls),
(103.333,770,o),
(105,763.333,o),
(105,742,cs),
(105,701.726,o),
(104.902,658.558,o),
(105.5,612.5,cs),
(106.182,559.966,o),
(106,493.468,o),
(106,413,cs),
(106,332.983,o),
(106.35,266.656,o),
(105,214,cs),
(103.667,162,o),
(102.333,122.333,o),
(101,85,cs),
(99.667,66.333,o),
(84,56,o),
(54,54,cs),
(21,52,ls),
(14.333,52,o),
(0,46,o),
(0,26,cs),
(0,20,o),
(3.167,14.167,o),
(9.5,8.5,cs),
(15.833,2.833,o),
(27,0,o),
(43,0,cs),
(65.808,0,o),
(98.67,2,o),
(134,2,cs),
(169.729,2,o),
(208.067,-1,o),
(234,-1,cs),
(262,-1,o),
(272,14.333,o),
(272,25,cs),
(272,33,o),
(268.833,40.333,o),
(262.5,47,cs),
(256.167,53.667,o),
(242.667,57,o),
(222,57,cs),
(176,57,l),
(176,101.667,o),
(175.667,170,o),
(175,262,cs),
(174.333,354,o),
(174,475.333,o),
(174,626,cs),
(174,628.162,o),
(175,681.162,o),
(175,785,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
59 1 2 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 5 1 5 0 1 104 0 1 2 5 1 2 102 0 5 5 6 83 0 6 6 12 67 4 1 2 2 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 0 5 1 5 0 1 104 0 1 2 5 1 2 102 0 5 5 6 83 0 6 6 14 67 4 1 2 2 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
53 61 52 196 45 42 38 7 22
CALL[ ]	/* CallFunction */";
};
width = 264;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(248.667,-1,o),
(256,0,o),
(260,2,cs),
(264,4,o),
(266,6.667,o),
(266,10,cs),
(266,14,o),
(263.5,17.833,o),
(258.5,21.5,cs),
(253.5,25.167,o),
(242.667,27,o),
(226,27,cs),
(165,27,l),
(165,61,o),
(164.667,108.5,o),
(164,169.5,cs),
(163.333,230.5,o),
(163,306.667,o),
(163,398,c),
(187.667,415.333,o),
(211,432.167,o),
(233,448.5,cs),
(255,464.833,o),
(272.667,477.667,o),
(286,487,cs),
(296.667,495,o),
(300,503.333,o),
(300,510,cs),
(300,518,o),
(295.667,522,o),
(287,522,cs),
(280.638,522,o),
(222.429,480.342,o),
(163,439,c),
(163,626,ls),
(163,628.162,o),
(164,681.162,o),
(164,785,cs),
(164,819.667,o),
(148.667,820,o),
(122,820,cs),
(68.785,820,o),
(-8,815.896,o),
(-8,799,cs),
(-8,795.667,o),
(-4.833,793.333,o),
(1.5,792,cs),
(7.833,790.667,o),
(16.667,790,o),
(28,790,cs),
(105,790,ls),
(122.333,790,o),
(124,783.333,o),
(124,762,cs),
(124,718.9,o),
(123.904,672.898,o),
(124.5,624,cs),
(125.18,568.236,o),
(125,497.904,o),
(125,413,c),
(15,335,ls),
(7,329.667,o),
(3,323.667,o),
(3,317,cs),
(3,309,o),
(7.667,305,o),
(17,305,cs),
(22.333,305,o),
(35.167,311.5,o),
(55.5,324.5,cs),
(75.833,337.5,o),
(99,353,o),
(125,371,c),
(125,232.749,o),
(122.634,126.111,o),
(120,55,cs),
(118.667,37,o),
(98,27,o),
(58,25,cs),
(35,24,ls),
(21,23.333,o),
(14,19,o),
(14,11,cs),
(14,7,o),
(16.167,4.167,o),
(20.5,2.5,cs),
(24.833,0.833,o),
(33.667,0,o),
(47,0,cs),
(69.808,0,o),
(102.67,2,o),
(138,2,cs),
(173.729,2,o),
(212.067,-1,o),
(238,-1,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
60 52 19 6 4 4 0 47 1 1 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 5 4 5 0 4 104 0 4 1 5 4 1 102 0 5 5 6 83 0 6 6 12 67 3 1 1 1 2 83 0 2 2 13 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 0 5 4 5 0 4 104 0 4 1 5 4 1 102 0 5 5 6 83 0 6 6 14 67 3 1 1 1 2 83 0 2 2 13 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
53 59 40 51 196 42 42 7 22
CALL[ ]	/* CallFunction */";
};
width = 258;
}
);
note = lslash;
unicode = 322;
},
{
glyphname = m;
kernLeft = m;
kernRight = m;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(740,395.333,o),
(683,444,o),
(607,444,cs),
(544.333,444,o),
(490.667,412.333,o),
(452,347,c),
(431.333,405,o),
(390.333,434,o),
(329,434,cs),
(263.667,434,o),
(210,399.667,o),
(186,341,c),
(183,406,ls),
(181.667,423.333,o),
(176.667,428,o),
(166,428,cs),
(114,428,o),
(73.667,425.167,o),
(45,419.5,cs),
(16.333,413.833,o),
(2,403.333,o),
(2,388,cs),
(2,377.333,o),
(6,369,o),
(14,363,cs),
(22,357,o),
(38.333,354,o),
(63,354,cs),
(76,354,ls),
(91.878,354,o),
(100,350.061,o),
(100,264,cs),
(100,196.187,o),
(91.37,117.482,o),
(89,108,cs),
(82.333,78.667,o),
(73.667,76.667,o),
(55,74,cs),
(35,71.333,o),
(26,57,o),
(26,41,cs),
(26,21,o),
(35.667,2,o),
(61,2,cs),
(161.386,2,o),
(233.958,1,o),
(252,1,cs),
(284,1,o),
(290,25,o),
(290,37,cs),
(290,58.333,o),
(276.667,77,o),
(234,77,cs),
(189,77,l),
(189,197,ls),
(189,303.003,o),
(245.569,356,o),
(320,356,cs),
(351.333,356,o),
(368,325.667,o),
(370,265,cs),
(370.667,249.667,o),
(371,235.667,o),
(371,223,cs),
(371,210.333,o),
(371,203.333,o),
(371,202,cs),
(371,182.667,o),
(371.5,164,o),
(372.5,146,cs),
(373.5,128,o),
(374,115.667,o),
(374,109,cs),
(374,98.333,o),
(373.333,92,o),
(352,88,cs),
(342,86,ls),
(332.667,83.333,o),
(320,74,o),
(320,50,cs),
(320,27.333,o),
(332.333,9,o),
(367,9,cs),
(379.477,9,o),
(432.478,10,o),
(526,10,cs),
(544.667,10,o),
(554,22.333,o),
(554,47,cs),
(554,61.667,o),
(547.667,83,o),
(517,83,cs),
(461,83,l),
(461,262,l),
(485,312.666,o),
(530.956,366,o),
(588,366,cs),
(607.333,366,o),
(622.667,354.833,o),
(634,332.5,cs),
(645.333,310.167,o),
(651,272.667,o),
(651,220,cs),
(651,165.333,o),
(646.667,107.667,o),
(644,89,cs),
(641.333,61,o),
(633,58,o),
(621,58,cs),
(615,58,ls),
(593.667,58,o),
(583,43.667,o),
(583,21,cs),
(583,-9.667,o),
(597,-21,o),
(653,-21,cs),
(707.815,-21,o),
(726.623,-19,o),
(815,-19,cs),
(841.667,-17.667,o),
(855,-1.333,o),
(855,16,cs),
(855,28.47,o),
(848.513,54,o),
(804,54,cs),
(740,54,l),
(740,282,l),
(740,282,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
112 1 3 10 118 113 35 3 4 3 2 66
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
112 1 3 10 118 113 35 3 4 9 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 12 values pushed */
112 1 3 10 118 113 35 3 4 6 2 66
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
9 6 2 3 3 10 83 11 1 10 10 15 67 9 6 2 3 3 12 83 0 12 12 15 67 7 1 4 4 5 84 8 1 5 5 13 67 2 1 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 9 3 4 3 9 4 104 11 1 10 3 3 10 79 0 12 6 1 3 9 12 3 91 7 1 4 4 5 84 8 1 5 5 13 67 2 1 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 12 0 3 6 12 3 91 11 1 10 9 1 6 4 10 6 91 7 1 4 4 5 84 8 1 5 5 13 67 2 1 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 12 0 3 6 12 3 91 11 1 10 9 1 6 4 10 6 91 7 1 4 4 5 84 0 5 5 13 67 7 1 4 4 8 84 0 8 8 13 67 2 1 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 10 11 3 11 10 3 104 0 12 0 3 6 12 3 91 0 11 9 1 6 4 11 6 91 0 4 4 5 83 0 5 5 13 67 0 7 7 8 84 0 8 8 13 67 2 1 0 0 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
122 120 117 115 110 108 104 101 84 77 73 71 66 64 115 37 39 52 118 32 13 21
CALL[ ]	/* CallFunction */";
};
width = 838;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(733,395.333,o),
(676,444,o),
(600,444,cs),
(537.333,444,o),
(483.667,412.333,o),
(445,347,c),
(424.333,405,o),
(383.333,434,o),
(322,434,cs),
(256.667,434,o),
(203,399.667,o),
(179,341,c),
(176,406,ls),
(174.667,423.333,o),
(169.667,428,o),
(159,428,cs),
(54.795,428,o),
(2,418.556,o),
(2,397,cs),
(2,382.333,o),
(26.333,375,o),
(75,375,cs),
(88,375,ls),
(108.147,375,o),
(114,346.798,o),
(114,264,cs),
(114,180,o),
(105.667,112.667,o),
(103,90,cs),
(97.671,55.364,o),
(89.429,56,o),
(55,56,cs),
(36.333,56,o),
(29,41.667,o),
(29,31,cs),
(29,17.667,o),
(37.333,2,o),
(56,2,cs),
(157.826,2,o),
(230.26,1,o),
(250,1,cs),
(274,1,o),
(281,13.333,o),
(281,24,cs),
(281,40,o),
(267.667,59,o),
(225,59,cs),
(182,59,l),
(182,215,ls),
(182,320.814,o),
(241.777,374,o),
(316,374,cs),
(362.667,374,o),
(381.333,337,o),
(384,265,cs),
(384.667,249.667,o),
(385,235.667,o),
(385,223,cs),
(385,210.333,o),
(385,203.333,o),
(385,202,cs),
(385,176.667,o),
(385.167,157.667,o),
(385.5,145,cs),
(385.833,132.333,o),
(386,120.333,o),
(386,109,cs),
(386,86.333,o),
(379.667,69.667,o),
(349,67,cs),
(339,66,ls),
(324.333,64.667,o),
(315,53,o),
(315,37,cs),
(315,14.333,o),
(328.667,9,o),
(362,9,cs),
(374.409,9,o),
(428.077,10,o),
(523,10,cs),
(535,10,o),
(545,18.667,o),
(545,36,cs),
(545,48,o),
(538.667,65,o),
(508,65,cs),
(454,65,l),
(454,280,l),
(477.168,331.484,o),
(523.763,384,o),
(588,384,cs),
(616,384,o),
(635.833,371.5,o),
(647.5,346.5,cs),
(659.167,321.5,o),
(665,279.333,o),
(665,220,cs),
(665,164.775,o),
(659.634,82.436,o),
(658,71,cs),
(655.333,43,o),
(648.333,41.333,o),
(635,40,cs),
(605,38,ls),
(586.333,36.667,o),
(577,27.333,o),
(577,10,cs),
(577,-1.333,o),
(581.5,-9.333,o),
(590.5,-14,cs),
(599.5,-18.667,o),
(618,-21,o),
(646,-21,cs),
(696.923,-21,o),
(717.797,-19,o),
(801,-19,cs),
(827.667,-17.667,o),
(841,-6.667,o),
(841,8,cs),
(841,13.333,o),
(838,19.333,o),
(832,26,cs),
(826,32.667,o),
(812,36,o),
(790,36,cs),
(733,36,l),
(733,282,l),
(733,282,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
114 1 3 11 120 115 34 3 4 3 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 12 values pushed */
114 1 3 11 120 115 34 3 4 6 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
10 6 2 3 3 13 83 0 13 13 15 67 10 6 2 3 3 11 83 12 1 11 11 15 67 9 7 2 4 4 5 83 8 1 5 5 13 67 2 1 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 13 11 3 13 79 12 1 11 10 6 2 3 4 11 3 91 9 7 2 4 4 5 83 8 1 5 5 13 67 2 1 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 13 0 3 6 13 3 91 12 1 11 10 1 6 4 11 6 91 9 7 2 4 4 5 83 8 1 5 5 13 67 2 1 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 9 4 0 4 9 96 0 13 0 3 6 13 3 91 12 1 11 10 1 6 4 11 6 91 7 1 4 4 5 83 8 1 5 5 13 67 2 1 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 9 4 0 4 9 96 0 12 11 6 12 79 0 13 0 3 6 13 3 91 0 11 10 1 6 4 11 6 91 7 1 4 4 5 83 0 5 5 13 67 7 1 4 4 8 83 0 8 8 13 67 2 1 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 12 11 6 12 79 0 13 0 3 6 13 3 91 0 11 10 1 6 4 11 6 91 0 4 4 5 83 0 5 5 13 67 9 1 7 7 8 83 0 8 8 13 67 2 1 0 0 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
124 122 119 117 112 109 105 102 92 89 85 78 74 72 67 65 116 37 42 20 116 32 14 21
CALL[ ]	/* CallFunction */";
};
width = 825;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(683.166,-21,o),
(705.106,-19,o),
(781,-19,cs),
(807.667,-18.333,o),
(821,-14,o),
(821,-6,cs),
(821,-2.667,o),
(818,0.167,o),
(812,2.5,cs),
(806,4.833,o),
(792,6,o),
(770,6,cs),
(723,6,l),
(723,282,ls),
(723,395.333,o),
(666,444,o),
(590,444,cs),
(527.333,444,o),
(473.667,412.333,o),
(435,347,c),
(414.333,405,o),
(373.333,434,o),
(312,434,cs),
(246.667,434,o),
(193,399.667,o),
(169,341,c),
(166,406,ls),
(164.667,423.333,o),
(159.667,428,o),
(149,428,cs),
(51.362,428,o),
(2,418.304,o),
(2,407,cs),
(2,399,o),
(26.333,395,o),
(75,395,cs),
(108,395,ls),
(129.691,395,o),
(134,354.278,o),
(134,264,cs),
(134,165.333,o),
(125.667,86.667,o),
(123,60,cs),
(117.591,19.43,o),
(115.187,31.234,o),
(55,26,cs),
(37.667,25.333,o),
(29,21.667,o),
(29,15,cs),
(29,8.333,o),
(38.333,2,o),
(49,2,cs),
(152.955,2,o),
(227.577,1,o),
(247,1,cs),
(261,1,o),
(268,4.667,o),
(268,12,cs),
(268,16,o),
(264,19.833,o),
(256,23.5,cs),
(248,27.167,o),
(233.333,29,o),
(212,29,cs),
(172,29,l),
(172,245,ls),
(172,344.914,o),
(233.296,404,o),
(311,404,cs),
(380.333,404,o),
(400,357,o),
(404,265,cs),
(404.667,249.667,o),
(405,235.667,o),
(405,223,cs),
(405,210.333,o),
(405,203.333,o),
(405,202,cs),
(405,151.333,o),
(404.333,131.667,o),
(403,109,cs),
(400.445,70.682,o),
(399.78,39.778,o),
(372,37,cs),
(337,33,ls),
(317.667,31,o),
(308,27,o),
(308,21,cs),
(308,13,o),
(323.667,9,o),
(355,9,cs),
(367.458,9,o),
(419.125,10,o),
(510,10,cs),
(522,10,o),
(532,16.333,o),
(532,23,cs),
(532,26.333,o),
(529.667,29.167,o),
(525,31.5,cs),
(520.333,33.833,o),
(510.333,35,o),
(495,35,cs),
(444,35,l),
(444,310,l),
(469.081,365.736,o),
(512.363,414,o),
(588,414,cs),
(669.127,414,o),
(685,355.341,o),
(685,220,cs),
(685,152.305,o),
(679.528,54.753,o),
(678,41,cs),
(675.333,13,o),
(668.333,11.333,o),
(655,10,cs),
(591,5,ls),
(575.667,3.667,o),
(568,-1,o),
(568,-9,cs),
(568,-13.667,o),
(572.333,-16.833,o),
(581,-18.5,cs),
(589.667,-20.167,o),
(608,-21,o),
(636,-21,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
113 1 5 2 119 114 35 3 3 10 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 2 2 13 83 0 13 13 15 67 0 5 5 12 83 0 12 12 15 67 0 10 10 11 83 0 11 11 15 67 0 3 3 4 83 0 4 4 13 67 9 8 2 6 6 7 83 0 7 7 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 13 0 2 5 13 2 91 0 12 0 5 10 12 5 91 0 11 0 10 3 11 10 91 0 3 3 4 83 0 4 4 13 67 9 8 2 6 6 7 83 0 7 7 13 67 0 0 0 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
123 121 118 116 111 108 104 101 91 90 89 88 85 78 75 73 68 66 49 42 38 36 31 29 115 32 14 17
CALL[ ]	/* CallFunction */";
};
width = 807;
}
);
note = m;
unicode = 109;
},
{
glyphname = n;
kernLeft = eng;
kernRight = n;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(527,427.114,o),
(430.224,455,o),
(377,455,cs),
(314.337,455,o),
(242.225,419.939,o),
(216,357,c),
(213,415,ls),
(211.667,445.667,o),
(205.333,451,o),
(164,451,cs),
(9.739,451,o),
(-7,437.725,o),
(-7,411,cs),
(-7,399,o),
(-0.833,390.833,o),
(11.5,386.5,cs),
(23.833,382.167,o),
(41.667,380,o),
(65,380,cs),
(105,380,ls),
(117,380,o),
(123,366.667,o),
(123,340,cs),
(123,282.264,o),
(118,193.873,o),
(118,143,cs),
(118,134.028,o),
(117.256,89,o),
(90,89,cs),
(79,89,ls),
(67.19,89,o),
(43,82.066,o),
(43,51,cs),
(43,16.058,o),
(76.084,14,o),
(95,14,cs),
(97.667,14,o),
(103.667,14,o),
(113,14,cs),
(122.333,14,o),
(133.5,14,o),
(146.5,14,cs),
(159.5,14,o),
(173.333,14.167,o),
(188,14.5,cs),
(202.667,14.833,o),
(216.5,15,o),
(229.5,15,cs),
(242.5,15,o),
(253.333,15,o),
(262,15,cs),
(270.667,15,o),
(276,15,o),
(278,15,cs),
(307.333,15,o),
(321,30.333,o),
(321,53,cs),
(321,87.667,o),
(302,92,o),
(278,92,cs),
(211,92,l),
(211,186,ls),
(211,227.439,o),
(231.842,282.684,o),
(232,283,cs),
(248.532,324.33,o),
(286.329,377,o),
(345,377,cs),
(422.098,377,o),
(436,274.318,o),
(436,143,cs),
(436,117.667,o),
(435.333,104.667,o),
(434,86,cs),
(432.667,60.667,o),
(429.667,48,o),
(411,44,cs),
(392.333,40,o),
(380,29.667,o),
(380,7,cs),
(380,-19.667,o),
(401.667,-31,o),
(419,-31,cs),
(440.821,-31,o),
(469.491,-30,o),
(505,-30,cs),
(540.618,-30,o),
(569.954,-29,o),
(593,-29,cs),
(621,-29,o),
(644,-18.667,o),
(644,8,cs),
(644,40.801,o),
(609.283,47,o),
(581,47,cs),
(527,47,l),
(527,260,l),
(527,260,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
94 1 3 2 25 1 0 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
8 1 7 6 1 2 3 7 2 91 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
8 1 7 6 1 2 3 7 2 91 0 0 0 1 0 1 87 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
8 1 7 6 1 2 3 7 2 91 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
39 38 58 56 148 42 47 150 32 9 24
CALL[ ]	/* CallFunction */";
};
width = 625;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(511,424.044,o),
(418.312,455,o),
(360,455,cs),
(293.333,455,o),
(229.333,419.667,o),
(200,357,c),
(197,419,ls),
(195.667,445.667,o),
(192.667,451,o),
(158,451,cs),
(27.965,451,o),
(-6,443.395,o),
(-6,417,cs),
(-6,400.717,o),
(34.311,400,o),
(59,400,cs),
(111,400,ls),
(122.333,400,o),
(128,389,o),
(128,367,cs),
(128,355.685,o),
(123,275.003,o),
(123,125,cs),
(123,100.563,o),
(117.554,71,o),
(95,71,cs),
(75,71,ls),
(59,71,o),
(38,65,o),
(38,41,cs),
(38,15.667,o),
(59.667,14,o),
(81,14,cs),
(89.742,14,o),
(150.077,15,o),
(262,15,cs),
(288.667,15,o),
(301,19.333,o),
(301,42,cs),
(301,68.667,o),
(284.667,74,o),
(262,74,cs),
(195,74,l),
(195,186,ls),
(195,226,o),
(202.333,269.333,o),
(217,300,cs),
(239.667,350.667,o),
(285,395,o),
(341,395,cs),
(428.531,395,o),
(441,283.816,o),
(441,163,cs),
(441,161.667,o),
(440.833,151.667,o),
(440.5,133,cs),
(440.167,114.333,o),
(439.333,91.667,o),
(438,65,cs),
(435.333,33,o),
(428.333,30,o),
(395,26,c),
(383,23.333,o),
(367,15.667,o),
(367,-3,cs),
(367,-25.667,o),
(382.667,-31,o),
(400,-31,cs),
(407.02,-31,o),
(468.331,-29,o),
(584,-29,cs),
(604,-29,o),
(621,-24,o),
(621,-4,cs),
(621,23.525,o),
(588.64,29,o),
(565,29,cs),
(511,29,l),
(511,260,l),
(511,260,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
84 1 3 2 23 1 0 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
8 1 7 6 1 2 3 7 2 91 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
8 1 7 6 1 2 3 7 2 91 0 0 0 1 0 1 87 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
8 1 7 6 1 2 3 7 2 91 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 8 7 2 8 79 0 7 6 1 2 3 7 2 91 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 7 0 6 2 7 6 91 0 8 0 2 3 8 2 91 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
37 54 74 52 116 38 47 118 32 9 24
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(398.066,-31,o),
(431.068,-30,o),
(472,-30,cs),
(512.932,-30,o),
(545.934,-29,o),
(571,-29,cs),
(580.333,-29,o),
(588,-26,o),
(588,-18,cs),
(588,-3.333,o),
(562,-1,o),
(542,-1,cs),
(488,-1,l),
(488,260,ls),
(488,412.163,o),
(406.195,455,o),
(336,455,cs),
(268,455,o),
(207.667,418.333,o),
(177,357,c),
(174,425,ls),
(172.667,447.667,o),
(166,451,o),
(150,451,cs),
(49.219,451,o),
(-4,443.718,o),
(-4,431,cs),
(-4,426.333,o),
(2.167,423.333,o),
(14.5,422,cs),
(26.833,420.667,o),
(39,420,o),
(51,420,cs),
(120,420,ls),
(132,420,o),
(135,411.333,o),
(135,398,cs),
(135,300.125,o),
(132.44,209.689,o),
(130,95,cs),
(129.333,73.667,o),
(127,60,o),
(123,54,cs),
(119,48,o),
(112,44.667,o),
(102,44,cs),
(57,41,ls),
(41,39.667,o),
(30,33.333,o),
(30,24,cs),
(30,20.667,o),
(32.333,18.167,o),
(37,16.5,cs),
(41.667,14.833,o),
(49.667,14,o),
(61,14,cs),
(63,14,o),
(68.667,14,o),
(78,14,cs),
(87.333,14,o),
(98.333,14,o),
(111,14,cs),
(123.667,14,o),
(137.167,14.167,o),
(151.5,14.5,cs),
(165.833,14.833,o),
(179.167,15,o),
(191.5,15,cs),
(203.833,15,o),
(214.333,15,o),
(223,15,cs),
(231.667,15,o),
(237,15,o),
(239,15,cs),
(261.667,15,o),
(273,19.667,o),
(273,29,cs),
(273,41,o),
(257.667,44,o),
(239,44,cs),
(172,44,l),
(172,186,ls),
(172,235.333,o),
(172.333,279.667,o),
(195,329,cs),
(225.667,393,o),
(281.333,425,o),
(336,425,cs),
(441.063,425,o),
(448,305.348,o),
(448,196,cs),
(448,153.333,o),
(446.667,90,o),
(444,30,cs),
(444,3.145,o),
(419.922,0.564,o),
(372,-4,cs),
(356.667,-5.333,o),
(349,-10.333,o),
(349,-19,cs),
(349,-27,o),
(357,-31,o),
(373,-31,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
82 1 3 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
82 1 3 6 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
8 1 7 6 1 2 3 7 2 91 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
8 1 7 6 1 2 3 7 2 91 0 0 0 1 0 1 87 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
8 1 7 6 1 2 3 7 2 91 5 1 3 0 4 0 3 4 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 8 0 2 6 8 2 91 0 7 0 6 3 7 6 91 5 1 3 0 4 0 3 4 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
37 53 57 37 147 38 47 148 32 9 24
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = n;
unicode = 110;
},
{
glyphname = nacute;
kernLeft = eng;
kernRight = n;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(477,665.333,o),
(449.667,686.667,o),
(407,688,cs),
(381.667,688,o),
(351,649.167,o),
(327,608.5,cs),
(306.511,573.783,o),
(285,526.988,o),
(285,522,cs),
(285,507.333,o),
(307.333,500,o),
(322,500,cs),
(339.099,500,o),
(374.389,522.679,o),
(413,557,cs),
(447.627,587.78,o),
(477,622.341,o),
(477,640,cs)
);
},
{
closed = 1;
nodes = (
(527,427.114,o),
(430.224,455,o),
(377,455,cs),
(314.337,455,o),
(242.225,419.939,o),
(216,357,c),
(213,415,ls),
(211.667,445.667,o),
(205.333,451,o),
(164,451,cs),
(9.739,451,o),
(-7,437.725,o),
(-7,411,cs),
(-7,399,o),
(-0.833,390.833,o),
(11.5,386.5,cs),
(23.833,382.167,o),
(41.667,380,o),
(65,380,cs),
(105,380,ls),
(117,380,o),
(123,366.667,o),
(123,340,cs),
(123,282.264,o),
(118,193.873,o),
(118,143,cs),
(118,134.028,o),
(117.256,89,o),
(90,89,cs),
(79,89,ls),
(67.19,89,o),
(43,82.066,o),
(43,51,cs),
(43,16.058,o),
(76.084,14,o),
(95,14,cs),
(97.667,14,o),
(103.667,14,o),
(113,14,cs),
(122.333,14,o),
(133.5,14,o),
(146.5,14,cs),
(159.5,14,o),
(173.333,14.167,o),
(188,14.5,cs),
(202.667,14.833,o),
(216.5,15,o),
(229.5,15,cs),
(242.5,15,o),
(253.333,15,o),
(262,15,cs),
(270.667,15,o),
(276,15,o),
(278,15,cs),
(307.333,15,o),
(321,30.333,o),
(321,53,cs),
(321,87.667,o),
(302,92,o),
(278,92,cs),
(211,92,l),
(211,186,ls),
(211,227.439,o),
(231.842,282.684,o),
(232,283,cs),
(248.532,324.33,o),
(286.329,377,o),
(345,377,cs),
(422.098,377,o),
(436,274.318,o),
(436,143,cs),
(436,117.667,o),
(435.333,104.667,o),
(434,86,cs),
(432.667,60.667,o),
(429.667,48,o),
(411,44,cs),
(392.333,40,o),
(380,29.667,o),
(380,7,cs),
(380,-19.667,o),
(401.667,-31,o),
(419,-31,cs),
(440.821,-31,o),
(469.491,-30,o),
(505,-30,cs),
(540.618,-30,o),
(569.954,-29,o),
(593,-29,cs),
(621,-29,o),
(644,-18.667,o),
(644,8,cs),
(644,40.801,o),
(609.283,47,o),
(581,47,cs),
(527,47,l),
(527,260,l),
(527,260,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
112 1 5 4 43 1 2 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 0 9 0 106 8 1 4 4 9 83 10 1 9 9 15 67 7 1 5 5 6 83 0 6 6 13 67 0 2 2 3 84 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 1 106 0 0 9 0 106 10 1 9 8 1 4 5 9 4 91 7 1 5 5 6 83 0 6 6 13 67 0 2 2 3 84 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 1 0 1 106 0 0 9 0 106 10 1 9 8 1 4 5 9 4 91 0 2 0 3 2 3 88 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 0 0 9 0 106 10 1 9 8 1 4 5 9 4 91 0 2 6 3 2 79 7 1 5 0 6 3 5 6 91 0 2 2 3 84 0 3 2 3 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
118 116 109 107 58 56 148 42 47 150 34 38 38 11 24
CALL[ ]	/* CallFunction */";
};
width = 625;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(441,654.667,o),
(422.667,670,o),
(392,670,cs),
(373.842,670,o),
(344.95,635.615,o),
(322.5,599.5,cs),
(296.079,556.997,o),
(281,527.525,o),
(281,522,cs),
(281,508.667,o),
(295.333,504,o),
(306,504,cs),
(335.68,504,o),
(441,603.002,o),
(441,632,cs)
);
},
{
closed = 1;
nodes = (
(511,424.044,o),
(418.312,455,o),
(360,455,cs),
(293.333,455,o),
(229.333,419.667,o),
(200,357,c),
(197,419,ls),
(195.667,445.667,o),
(192.667,451,o),
(158,451,cs),
(27.965,451,o),
(-6,443.395,o),
(-6,417,cs),
(-6,400.717,o),
(34.311,400,o),
(59,400,cs),
(111,400,ls),
(122.333,400,o),
(128,389,o),
(128,367,cs),
(128,355.685,o),
(123,275.003,o),
(123,125,cs),
(123,100.563,o),
(117.554,71,o),
(95,71,cs),
(75,71,ls),
(59,71,o),
(38,65,o),
(38,41,cs),
(38,15.667,o),
(59.667,14,o),
(81,14,cs),
(89.742,14,o),
(150.077,15,o),
(262,15,cs),
(288.667,15,o),
(301,19.333,o),
(301,42,cs),
(301,68.667,o),
(284.667,74,o),
(262,74,cs),
(195,74,l),
(195,186,ls),
(195,226,o),
(202.333,269.333,o),
(217,300,cs),
(239.667,350.667,o),
(285,395,o),
(341,395,cs),
(428.531,395,o),
(441,283.816,o),
(441,163,cs),
(441,161.667,o),
(440.833,151.667,o),
(440.5,133,cs),
(440.167,114.333,o),
(439.333,91.667,o),
(438,65,cs),
(435.333,33,o),
(428.333,30,o),
(395,26,c),
(383,23.333,o),
(367,15.667,o),
(367,-3,cs),
(367,-25.667,o),
(382.667,-31,o),
(400,-31,cs),
(407.02,-31,o),
(468.331,-29,o),
(584,-29,cs),
(604,-29,o),
(621,-24,o),
(621,-4,cs),
(621,23.525,o),
(588.64,29,o),
(565,29,cs),
(511,29,l),
(511,260,l),
(511,260,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
102 1 5 4 41 1 2 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 0 9 0 106 8 1 4 4 9 83 10 1 9 9 15 67 7 1 5 5 6 83 0 6 6 13 67 0 2 2 3 84 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 1 106 0 0 9 0 106 10 1 9 8 1 4 5 9 4 91 7 1 5 5 6 83 0 6 6 13 67 0 2 2 3 84 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 1 0 1 106 0 0 9 0 106 10 1 9 8 1 4 5 9 4 91 0 2 0 3 2 3 88 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 0 0 9 0 106 10 1 9 8 1 4 5 9 4 91 0 2 6 3 2 79 7 1 5 0 6 3 5 6 91 0 2 2 3 84 0 3 2 3 72
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 1 106 0 0 10 0 106 0 10 9 4 10 79 0 9 8 1 4 5 9 4 91 0 2 6 3 2 79 7 1 5 0 6 3 5 6 91 0 2 2 3 84 0 3 2 3 72
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 1 106 0 0 10 0 106 0 9 0 8 4 9 8 91 0 10 0 4 5 10 4 91 0 2 6 3 2 79 7 1 5 0 6 3 5 6 91 0 2 2 3 84 0 3 2 3 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
106 104 99 96 74 52 116 38 47 118 34 40 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(398.066,-31,o),
(431.068,-30,o),
(472,-30,cs),
(512.932,-30,o),
(545.934,-29,o),
(571,-29,cs),
(580.333,-29,o),
(588,-26,o),
(588,-18,cs),
(588,-3.333,o),
(562,-1,o),
(542,-1,cs),
(488,-1,l),
(488,260,ls),
(488,412.163,o),
(406.195,455,o),
(336,455,cs),
(268,455,o),
(207.667,418.333,o),
(177,357,c),
(174,425,ls),
(172.667,447.667,o),
(166,451,o),
(150,451,cs),
(49.219,451,o),
(-4,443.718,o),
(-4,431,cs),
(-4,426.333,o),
(2.167,423.333,o),
(14.5,422,cs),
(26.833,420.667,o),
(39,420,o),
(51,420,cs),
(120,420,ls),
(132,420,o),
(135,411.333,o),
(135,398,cs),
(135,300.125,o),
(132.44,209.689,o),
(130,95,cs),
(129.333,73.667,o),
(127,60,o),
(123,54,cs),
(119,48,o),
(112,44.667,o),
(102,44,cs),
(57,41,ls),
(41,39.667,o),
(30,33.333,o),
(30,24,cs),
(30,20.667,o),
(32.333,18.167,o),
(37,16.5,cs),
(41.667,14.833,o),
(49.667,14,o),
(61,14,cs),
(63,14,o),
(68.667,14,o),
(78,14,cs),
(87.333,14,o),
(98.333,14,o),
(111,14,cs),
(123.667,14,o),
(137.167,14.167,o),
(151.5,14.5,cs),
(165.833,14.833,o),
(179.167,15,o),
(191.5,15,cs),
(203.833,15,o),
(214.333,15,o),
(223,15,cs),
(231.667,15,o),
(237,15,o),
(239,15,cs),
(261.667,15,o),
(273,19.667,o),
(273,29,cs),
(273,41,o),
(257.667,44,o),
(239,44,cs),
(172,44,l),
(172,186,ls),
(172,235.333,o),
(172.333,279.667,o),
(195,329,cs),
(225.667,393,o),
(281.333,425,o),
(336,425,cs),
(441.063,425,o),
(448,305.348,o),
(448,196,cs),
(448,153.333,o),
(446.667,90,o),
(444,30,cs),
(444,3.145,o),
(419.922,0.564,o),
(372,-4,cs),
(356.667,-5.333,o),
(349,-10.333,o),
(349,-19,cs),
(349,-27,o),
(357,-31,o),
(373,-31,cs)
);
},
{
closed = 1;
nodes = (
(302.797,510,o),
(390,597.027,o),
(390,618,cs),
(390,636.667,o),
(381.667,640,o),
(371,640,cs),
(350.822,640,o),
(276,545.882,o),
(276,521,cs),
(276,513.667,o),
(278.667,510,o),
(284,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
82 1 3 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
82 1 3 6 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 10 9 10 106 0 9 7 9 106 6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 10 9 10 106 0 9 7 9 106 8 1 7 6 1 2 3 7 2 92 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 10 9 10 106 0 9 7 9 106 8 1 7 6 1 2 3 7 2 92 0 0 0 1 0 1 87 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 10 9 10 106 0 9 7 9 106 8 1 7 6 1 2 3 7 2 92 5 1 3 0 4 0 3 4 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 10 9 10 106 0 9 8 9 106 0 8 0 2 6 8 2 92 0 7 0 6 3 7 6 91 5 1 3 0 4 0 3 4 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
104 102 97 95 37 53 57 37 147 38 47 148 32 11 24
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = nacute;
unicode = 324;
},
{
glyphname = napostrophe;
kernLeft = eng;
kernRight = n;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-59.752,680,o),
(-65,635.453,o),
(-65,609,cs),
(-65,565,o),
(-60,531,o),
(-50,507,cs),
(-40,483,o),
(-29,471,o),
(-17,471,cs),
(8.589,471,o),
(31,550.571,o),
(31,610,cs),
(31,645.559,o),
(23.306,680,o),
(-18,680,cs)
);
},
{
closed = 1;
nodes = (
(527,427.114,o),
(430.224,455,o),
(377,455,cs),
(314.337,455,o),
(242.225,419.939,o),
(216,357,c),
(213,415,ls),
(211.667,445.667,o),
(205.333,451,o),
(164,451,cs),
(9.739,451,o),
(-7,437.725,o),
(-7,411,cs),
(-7,399,o),
(-0.833,390.833,o),
(11.5,386.5,cs),
(23.833,382.167,o),
(41.667,380,o),
(65,380,cs),
(105,380,ls),
(117,380,o),
(123,366.667,o),
(123,340,cs),
(123,282.264,o),
(118,193.873,o),
(118,143,cs),
(118,134.028,o),
(117.256,89,o),
(90,89,cs),
(79,89,ls),
(67.19,89,o),
(43,82.066,o),
(43,51,cs),
(43,16.058,o),
(76.084,14,o),
(95,14,cs),
(97.667,14,o),
(103.667,14,o),
(113,14,cs),
(122.333,14,o),
(133.5,14,o),
(146.5,14,cs),
(159.5,14,o),
(173.333,14.167,o),
(188,14.5,cs),
(202.667,14.833,o),
(216.5,15,o),
(229.5,15,cs),
(242.5,15,o),
(253.333,15,o),
(262,15,cs),
(270.667,15,o),
(276,15,o),
(278,15,cs),
(307.333,15,o),
(321,30.333,o),
(321,53,cs),
(321,87.667,o),
(302,92,o),
(278,92,cs),
(211,92,l),
(211,186,ls),
(211,227.439,o),
(231.842,282.684,o),
(232,283,cs),
(248.532,324.33,o),
(286.329,377,o),
(345,377,cs),
(422.098,377,o),
(436,274.318,o),
(436,143,cs),
(436,117.667,o),
(435.333,104.667,o),
(434,86,cs),
(432.667,60.667,o),
(429.667,48,o),
(411,44,cs),
(392.333,40,o),
(380,29.667,o),
(380,7,cs),
(380,-19.667,o),
(401.667,-31,o),
(419,-31,cs),
(440.821,-31,o),
(469.491,-30,o),
(505,-30,cs),
(540.618,-30,o),
(569.954,-29,o),
(593,-29,cs),
(621,-29,o),
(644,-18.667,o),
(644,8,cs),
(644,40.801,o),
(609.283,47,o),
(581,47,cs),
(527,47,l),
(527,260,l),
(527,260,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
112 1 5 4 43 1 2 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
11 1 0 0 1 9 0 1 91 8 1 4 4 9 83 10 1 9 9 15 67 7 1 5 5 6 83 0 6 6 13 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
11 1 0 0 1 9 0 1 91 10 1 9 8 1 4 5 9 4 91 7 1 5 5 6 83 0 6 6 13 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
11 1 0 0 1 9 0 1 91 10 1 9 8 1 4 5 9 4 91 0 2 0 3 2 3 87 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
11 1 0 0 1 9 0 1 91 10 1 9 8 1 4 5 9 4 91 0 2 6 3 2 79 7 1 5 0 6 3 5 6 91 0 2 2 3 83 0 3 2 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 118 116 109 107 101 98 88 85 77 68 64 62 52 50 35 26 20 18 11 9 0 17 1 17 12 15
CALL[ ]	/* CallFunction */";
};
width = 625;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(511,424.044,o),
(418.312,455,o),
(360,455,cs),
(293.333,455,o),
(229.333,419.667,o),
(200,357,c),
(197,419,ls),
(195.667,445.667,o),
(192.667,451,o),
(158,451,cs),
(27.965,451,o),
(-6,443.395,o),
(-6,417,cs),
(-6,400.717,o),
(34.311,400,o),
(59,400,cs),
(111,400,ls),
(122.333,400,o),
(128,389,o),
(128,367,cs),
(128,355.685,o),
(123,275.003,o),
(123,125,cs),
(123,100.563,o),
(117.554,71,o),
(95,71,cs),
(75,71,ls),
(59,71,o),
(38,65,o),
(38,41,cs),
(38,15.667,o),
(59.667,14,o),
(81,14,cs),
(89.742,14,o),
(150.077,15,o),
(262,15,cs),
(288.667,15,o),
(301,19.333,o),
(301,42,cs),
(301,68.667,o),
(284.667,74,o),
(262,74,cs),
(195,74,l),
(195,186,ls),
(195,226,o),
(202.333,269.333,o),
(217,300,cs),
(239.667,350.667,o),
(285,395,o),
(341,395,cs),
(428.531,395,o),
(441,283.816,o),
(441,163,cs),
(441,161.667,o),
(440.833,151.667,o),
(440.5,133,cs),
(440.167,114.333,o),
(439.333,91.667,o),
(438,65,cs),
(435.333,33,o),
(428.333,30,o),
(395,26,c),
(383,23.333,o),
(367,15.667,o),
(367,-3,cs),
(367,-25.667,o),
(382.667,-31,o),
(400,-31,cs),
(407.02,-31,o),
(468.331,-29,o),
(584,-29,cs),
(604,-29,o),
(621,-24,o),
(621,-4,cs),
(621,23.525,o),
(588.64,29,o),
(565,29,cs),
(511,29,l),
(511,260,l),
(511,260,l)
);
},
{
closed = 1;
nodes = (
(-62,682,o),
(-63,632,o),
(-63,615,cs),
(-63,584,o),
(-58,479,o),
(-25,479,cs),
(5,479,o),
(12,606,o),
(12,621,cs),
(12,645,o),
(11,682,o),
(-26,682,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
85 1 3 2 24 1 0 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
11 1 9 0 10 7 9 10 91 6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
11 1 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
11 1 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 0 0 0 1 0 1 87 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
11 1 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
11 1 9 0 10 8 9 10 91 0 8 7 2 8 79 0 7 6 1 2 3 7 2 91 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
11 1 9 0 10 8 9 10 91 0 7 0 6 2 7 6 91 0 8 0 2 3 8 2 91 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
95 94 105 103 94 113 95 113 37 54 74 52 116 38 47 118 33 12 35
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(398.066,-31,o),
(431.068,-30,o),
(472,-30,cs),
(512.932,-30,o),
(545.934,-29,o),
(571,-29,cs),
(580.333,-29,o),
(588,-26,o),
(588,-18,cs),
(588,-3.333,o),
(562,-1,o),
(542,-1,cs),
(488,-1,l),
(488,260,ls),
(488,412.163,o),
(406.195,455,o),
(336,455,cs),
(268,455,o),
(207.667,418.333,o),
(177,357,c),
(174,425,ls),
(172.667,447.667,o),
(166,451,o),
(150,451,cs),
(49.219,451,o),
(-4,443.718,o),
(-4,431,cs),
(-4,426.333,o),
(2.167,423.333,o),
(14.5,422,cs),
(26.833,420.667,o),
(39,420,o),
(51,420,cs),
(120,420,ls),
(132,420,o),
(135,411.333,o),
(135,398,cs),
(135,300.125,o),
(132.44,209.689,o),
(130,95,cs),
(129.333,73.667,o),
(127,60,o),
(123,54,cs),
(119,48,o),
(112,44.667,o),
(102,44,cs),
(57,41,ls),
(41,39.667,o),
(30,33.333,o),
(30,24,cs),
(30,20.667,o),
(32.333,18.167,o),
(37,16.5,cs),
(41.667,14.833,o),
(49.667,14,o),
(61,14,cs),
(63,14,o),
(68.667,14,o),
(78,14,cs),
(87.333,14,o),
(98.333,14,o),
(111,14,cs),
(123.667,14,o),
(137.167,14.167,o),
(151.5,14.5,cs),
(165.833,14.833,o),
(179.167,15,o),
(191.5,15,cs),
(203.833,15,o),
(214.333,15,o),
(223,15,cs),
(231.667,15,o),
(237,15,o),
(239,15,cs),
(261.667,15,o),
(273,19.667,o),
(273,29,cs),
(273,41,o),
(257.667,44,o),
(239,44,cs),
(172,44,l),
(172,186,ls),
(172,235.333,o),
(172.333,279.667,o),
(195,329,cs),
(225.667,393,o),
(281.333,425,o),
(336,425,cs),
(441.063,425,o),
(448,305.348,o),
(448,196,cs),
(448,153.333,o),
(446.667,90,o),
(444,30,cs),
(444,3.145,o),
(419.922,0.564,o),
(372,-4,cs),
(356.667,-5.333,o),
(349,-10.333,o),
(349,-19,cs),
(349,-27,o),
(357,-31,o),
(373,-31,cs)
);
},
{
closed = 1;
nodes = (
(-30.066,510,o),
(-25.643,536.859,o),
(-22.5,562,cs),
(-20.461,578.312,o),
(-18,606.152,o),
(-18,621,cs),
(-18,635.56,o),
(-16.771,673,o),
(-41,673,cs),
(-61.16,673,o),
(-63,625.968,o),
(-63,606,cs),
(-63,586.474,o),
(-60.874,510,o),
(-40,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
82 1 3 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
82 1 3 6 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
11 1 9 0 10 7 9 10 91 6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
11 1 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
11 1 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 0 0 0 1 0 1 87 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
11 1 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 5 1 3 0 4 0 3 4 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
11 1 9 0 10 8 9 10 91 0 8 0 2 6 8 2 91 0 7 0 6 3 7 6 91 5 1 3 0 4 0 3 4 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
92 91 102 100 91 110 92 110 37 53 57 37 147 38 47 148 32 12 24
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = napostrophe;
unicode = 329;
},
{
glyphname = ncaron;
kernLeft = eng;
kernRight = n;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(479.803,640,o),
(442.614,615.913,o),
(371,578,c),
(321.718,604.09,o),
(264.064,640,o),
(252,640,cs),
(244,640,o),
(239,632.667,o),
(239,626,cs),
(239,599.333,o),
(267.333,565.167,o),
(298,536.5,cs),
(324.897,511.357,o),
(360,486,o),
(371,486,cs),
(394.877,486,o),
(504,578.037,o),
(504,619,cs),
(504,629.667,o),
(500.333,640,o),
(491,640,cs)
);
},
{
closed = 1;
nodes = (
(527,427.114,o),
(430.224,455,o),
(377,455,cs),
(314.337,455,o),
(242.225,419.939,o),
(216,357,c),
(213,415,ls),
(211.667,445.667,o),
(205.333,451,o),
(164,451,cs),
(9.739,451,o),
(-7,437.725,o),
(-7,411,cs),
(-7,399,o),
(-0.833,390.833,o),
(11.5,386.5,cs),
(23.833,382.167,o),
(41.667,380,o),
(65,380,cs),
(105,380,ls),
(117,380,o),
(123,366.667,o),
(123,340,cs),
(123,282.264,o),
(118,193.873,o),
(118,143,cs),
(118,134.028,o),
(117.256,89,o),
(90,89,cs),
(79,89,ls),
(67.19,89,o),
(43,82.066,o),
(43,51,cs),
(43,16.058,o),
(76.084,14,o),
(95,14,cs),
(97.667,14,o),
(103.667,14,o),
(113,14,cs),
(122.333,14,o),
(133.5,14,o),
(146.5,14,cs),
(159.5,14,o),
(173.333,14.167,o),
(188,14.5,cs),
(202.667,14.833,o),
(216.5,15,o),
(229.5,15,cs),
(242.5,15,o),
(253.333,15,o),
(262,15,cs),
(270.667,15,o),
(276,15,o),
(278,15,cs),
(307.333,15,o),
(321,30.333,o),
(321,53,cs),
(321,87.667,o),
(302,92,o),
(278,92,cs),
(211,92,l),
(211,186,ls),
(211,227.439,o),
(231.842,282.684,o),
(232,283,cs),
(248.532,324.33,o),
(286.329,377,o),
(345,377,cs),
(422.098,377,o),
(436,274.318,o),
(436,143,cs),
(436,117.667,o),
(435.333,104.667,o),
(434,86,cs),
(432.667,60.667,o),
(429.667,48,o),
(411,44,cs),
(392.333,40,o),
(380,29.667,o),
(380,7,cs),
(380,-19.667,o),
(401.667,-31,o),
(419,-31,cs),
(440.821,-31,o),
(469.491,-30,o),
(505,-30,cs),
(540.618,-30,o),
(569.954,-29,o),
(593,-29,cs),
(621,-29,o),
(644,-18.667,o),
(644,8,cs),
(644,40.801,o),
(609.283,47,o),
(581,47,cs),
(527,47,l),
(527,260,l),
(527,260,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
21 1 1 0 120 1 6 5 51 1 3 6 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
2 12 2 0 1 0 106 0 1 10 1 106 9 1 5 5 10 83 11 1 10 10 15 67 8 1 6 6 7 84 0 7 7 13 67 0 3 3 4 84 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
2 12 2 0 1 0 106 0 1 10 1 106 11 1 10 9 1 5 6 10 5 91 8 1 6 6 7 84 0 7 7 13 67 0 3 3 4 84 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
2 12 2 0 1 0 106 0 1 10 1 106 11 1 10 9 1 5 6 10 5 91 0 3 0 4 3 4 88 8 1 6 6 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
2 12 2 0 1 0 106 0 1 10 1 106 11 1 10 9 1 5 6 10 5 91 0 3 7 4 3 79 8 1 6 0 7 4 6 7 92 0 3 3 4 84 0 4 3 4 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 126 124 117 115 109 106 96 93 85 76 72 70 60 58 43 34 28 26 17 15 9 7 0 25 1 25 13 15
CALL[ ]	/* CallFunction */";
};
width = 625;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(511,424.044,o),
(418.312,455,o),
(360,455,cs),
(293.333,455,o),
(229.333,419.667,o),
(200,357,c),
(197,419,ls),
(195.667,445.667,o),
(192.667,451,o),
(158,451,cs),
(27.965,451,o),
(-6,443.395,o),
(-6,417,cs),
(-6,400.717,o),
(34.311,400,o),
(59,400,cs),
(111,400,ls),
(122.333,400,o),
(128,389,o),
(128,367,cs),
(128,355.685,o),
(123,275.003,o),
(123,125,cs),
(123,100.563,o),
(117.554,71,o),
(95,71,cs),
(75,71,ls),
(59,71,o),
(38,65,o),
(38,41,cs),
(38,15.667,o),
(59.667,14,o),
(81,14,cs),
(89.742,14,o),
(150.077,15,o),
(262,15,cs),
(288.667,15,o),
(301,19.333,o),
(301,42,cs),
(301,68.667,o),
(284.667,74,o),
(262,74,cs),
(195,74,l),
(195,186,ls),
(195,226,o),
(202.333,269.333,o),
(217,300,cs),
(239.667,350.667,o),
(285,395,o),
(341,395,cs),
(428.531,395,o),
(441,283.816,o),
(441,163,cs),
(441,161.667,o),
(440.833,151.667,o),
(440.5,133,cs),
(440.167,114.333,o),
(439.333,91.667,o),
(438,65,cs),
(435.333,33,o),
(428.333,30,o),
(395,26,c),
(383,23.333,o),
(367,15.667,o),
(367,-3,cs),
(367,-25.667,o),
(382.667,-31,o),
(400,-31,cs),
(407.02,-31,o),
(468.331,-29,o),
(584,-29,cs),
(604,-29,o),
(621,-24,o),
(621,-4,cs),
(621,23.525,o),
(588.64,29,o),
(565,29,cs),
(511,29,l),
(511,260,l),
(511,260,l)
);
},
{
closed = 1;
nodes = (
(462,640,o),
(368,577,o),
(355,569,c),
(282,612,o),
(251,640,o),
(236,640,cs),
(229,640,o),
(225,636,o),
(225,627,cs),
(225,586,o),
(333,495,o),
(355,495,cs),
(380,495,o),
(486,588,o),
(486,623,cs),
(486,632,o),
(483,640,o),
(475,640,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
99 1 11 9 85 1 3 2 24 1 0 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
10 12 2 9 11 9 106 0 11 11 23 67 6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
10 12 2 9 11 9 106 0 11 7 7 11 94 8 1 7 6 1 2 3 7 2 92 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
10 12 2 9 11 9 106 0 11 7 11 106 8 1 7 6 1 2 3 7 2 92 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
10 12 2 9 11 9 106 0 11 7 11 106 8 1 7 6 1 2 3 7 2 92 0 0 0 1 0 1 87 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
10 12 2 9 11 9 106 0 11 7 11 106 8 1 7 6 1 2 3 7 2 92 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
10 12 2 9 11 9 106 0 11 8 11 106 0 8 7 2 8 79 0 7 6 1 2 3 7 2 91 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
10 12 2 9 11 9 106 0 11 8 11 106 0 7 0 6 2 7 6 91 0 8 0 2 3 8 2 92 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
95 94 112 110 105 103 94 118 95 118 37 54 74 52 116 38 47 118 33 13 35
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(398.066,-31,o),
(431.068,-30,o),
(472,-30,cs),
(512.932,-30,o),
(545.934,-29,o),
(571,-29,cs),
(580.333,-29,o),
(588,-26,o),
(588,-18,cs),
(588,-3.333,o),
(562,-1,o),
(542,-1,cs),
(488,-1,l),
(488,260,ls),
(488,412.163,o),
(406.195,455,o),
(336,455,cs),
(268,455,o),
(207.667,418.333,o),
(177,357,c),
(174,425,ls),
(172.667,447.667,o),
(166,451,o),
(150,451,cs),
(49.219,451,o),
(-4,443.718,o),
(-4,431,cs),
(-4,426.333,o),
(2.167,423.333,o),
(14.5,422,cs),
(26.833,420.667,o),
(39,420,o),
(51,420,cs),
(120,420,ls),
(132,420,o),
(135,411.333,o),
(135,398,cs),
(135,300.125,o),
(132.44,209.689,o),
(130,95,cs),
(129.333,73.667,o),
(127,60,o),
(123,54,cs),
(119,48,o),
(112,44.667,o),
(102,44,cs),
(57,41,ls),
(41,39.667,o),
(30,33.333,o),
(30,24,cs),
(30,20.667,o),
(32.333,18.167,o),
(37,16.5,cs),
(41.667,14.833,o),
(49.667,14,o),
(61,14,cs),
(63,14,o),
(68.667,14,o),
(78,14,cs),
(87.333,14,o),
(98.333,14,o),
(111,14,cs),
(123.667,14,o),
(137.167,14.167,o),
(151.5,14.5,cs),
(165.833,14.833,o),
(179.167,15,o),
(191.5,15,cs),
(203.833,15,o),
(214.333,15,o),
(223,15,cs),
(231.667,15,o),
(237,15,o),
(239,15,cs),
(261.667,15,o),
(273,19.667,o),
(273,29,cs),
(273,41,o),
(257.667,44,o),
(239,44,cs),
(172,44,l),
(172,186,ls),
(172,235.333,o),
(172.333,279.667,o),
(195,329,cs),
(225.667,393,o),
(281.333,425,o),
(336,425,cs),
(441.063,425,o),
(448,305.348,o),
(448,196,cs),
(448,153.333,o),
(446.667,90,o),
(444,30,cs),
(444,3.145,o),
(419.922,0.564,o),
(372,-4,cs),
(356.667,-5.333,o),
(349,-10.333,o),
(349,-19,cs),
(349,-27,o),
(357,-31,o),
(373,-31,cs)
);
},
{
closed = 1;
nodes = (
(356.852,510,o),
(460,603.671,o),
(460,629,cs),
(460,636.333,o),
(457.333,640,o),
(452,640,cs),
(437.302,640,o),
(408.411,607.937,o),
(332,554,c),
(295.597,579.696,o),
(226.139,640,o),
(213,640,cs),
(207.667,640,o),
(205,636.333,o),
(205,629,cs),
(205,604.067,o),
(308.626,510,o),
(332,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
110 1 10 9 82 1 3 2 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
110 1 10 9 82 1 3 6 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
11 12 2 9 10 9 106 0 10 7 10 106 6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 84 0 4 4 13 67 0 0 0 1 84 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
11 12 2 9 10 9 106 0 10 7 10 106 8 1 7 6 1 2 3 7 2 91 5 1 3 3 4 84 0 4 4 13 67 0 0 0 1 84 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
11 12 2 9 10 9 106 0 10 7 10 106 8 1 7 6 1 2 3 7 2 91 0 0 0 1 0 1 88 5 1 3 3 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
11 12 2 9 10 9 106 0 10 7 10 106 8 1 7 6 1 2 3 7 2 91 5 1 3 0 4 0 3 4 92 0 0 1 1 0 79 0 0 0 1 84 0 1 0 1 72
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
11 12 2 9 10 9 106 0 10 8 10 106 0 8 0 2 6 8 2 91 0 7 0 6 3 7 6 91 5 1 3 0 4 0 3 4 92 0 0 1 1 0 79 0 0 0 1 84 0 1 0 1 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
92 91 106 104 99 97 91 114 92 114 37 53 57 37 147 38 47 148 32 13 24
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = ncaron;
unicode = 328;
},
{
glyphname = ncommaaccent;
kernLeft = eng;
kernRight = n;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(282,-137.971,o),
(318,-139.557,o),
(318,-157,cs),
(318,-177,o),
(315.5,-191.833,o),
(310.5,-201.5,cs),
(305.5,-211.167,o),
(303,-219.333,o),
(303,-226,cs),
(303,-248.667,o),
(322.333,-249,o),
(329,-249,cs),
(347.413,-249,o),
(410,-206.536,o),
(410,-130,cs),
(410,-72.667,o),
(374,-49,o),
(342,-49,cs),
(298,-49,o),
(282,-79,o),
(282,-107,cs)
);
},
{
closed = 1;
nodes = (
(527,427.114,o),
(430.224,455,o),
(377,455,cs),
(314.337,455,o),
(242.225,419.939,o),
(216,357,c),
(213,415,ls),
(211.667,445.667,o),
(205.333,451,o),
(164,451,cs),
(9.739,451,o),
(-7,437.725,o),
(-7,411,cs),
(-7,399,o),
(-0.833,390.833,o),
(11.5,386.5,cs),
(23.833,382.167,o),
(41.667,380,o),
(65,380,cs),
(105,380,ls),
(117,380,o),
(123,366.667,o),
(123,340,cs),
(123,282.264,o),
(118,193.873,o),
(118,143,cs),
(118,134.028,o),
(117.256,89,o),
(90,89,cs),
(79,89,ls),
(67.19,89,o),
(43,82.066,o),
(43,51,cs),
(43,16.058,o),
(76.084,14,o),
(95,14,cs),
(97.667,14,o),
(103.667,14,o),
(113,14,cs),
(122.333,14,o),
(133.5,14,o),
(146.5,14,cs),
(159.5,14,o),
(173.333,14.167,o),
(188,14.5,cs),
(202.667,14.833,o),
(216.5,15,o),
(229.5,15,cs),
(242.5,15,o),
(253.333,15,o),
(262,15,cs),
(270.667,15,o),
(276,15,o),
(278,15,cs),
(307.333,15,o),
(321,30.333,o),
(321,53,cs),
(321,87.667,o),
(302,92,o),
(278,92,cs),
(211,92,l),
(211,186,ls),
(211,227.439,o),
(231.842,282.684,o),
(232,283,cs),
(248.532,324.33,o),
(286.329,377,o),
(345,377,cs),
(422.098,377,o),
(436,274.318,o),
(436,143,cs),
(436,117.667,o),
(435.333,104.667,o),
(434,86,cs),
(432.667,60.667,o),
(429.667,48,o),
(411,44,cs),
(392.333,40,o),
(380,29.667,o),
(380,7,cs),
(380,-19.667,o),
(401.667,-31,o),
(419,-31,cs),
(440.821,-31,o),
(469.491,-30,o),
(505,-30,cs),
(540.618,-30,o),
(569.954,-29,o),
(593,-29,cs),
(621,-29,o),
(644,-18.667,o),
(644,8,cs),
(644,40.801,o),
(609.283,47,o),
(581,47,cs),
(527,47,l),
(527,260,l),
(527,260,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
116 1 5 4 47 1 2 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
8 1 4 4 9 83 10 1 9 9 15 67 7 1 5 5 6 83 0 6 6 13 67 0 2 2 3 83 0 3 3 21 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
10 1 9 8 1 4 5 9 4 91 0 0 0 1 0 1 87 7 1 5 5 6 83 0 6 6 13 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
10 1 9 8 1 4 5 9 4 91 0 2 0 3 0 2 3 91 0 0 0 1 0 1 87 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
10 1 9 8 1 4 5 9 4 91 7 1 5 0 6 3 5 6 91 0 2 0 3 0 2 3 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
122 120 113 111 58 56 148 42 47 150 42 38 34 11 24
CALL[ ]	/* CallFunction */";
};
width = 625;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(511,424.044,o),
(418.312,455,o),
(360,455,cs),
(293.333,455,o),
(229.333,419.667,o),
(200,357,c),
(197,419,ls),
(195.667,445.667,o),
(192.667,451,o),
(158,451,cs),
(27.965,451,o),
(-6,443.395,o),
(-6,417,cs),
(-6,400.717,o),
(34.311,400,o),
(59,400,cs),
(111,400,ls),
(122.333,400,o),
(128,389,o),
(128,367,cs),
(128,355.685,o),
(123,275.003,o),
(123,125,cs),
(123,100.563,o),
(117.554,71,o),
(95,71,cs),
(75,71,ls),
(59,71,o),
(38,65,o),
(38,41,cs),
(38,15.667,o),
(59.667,14,o),
(81,14,cs),
(89.742,14,o),
(150.077,15,o),
(262,15,cs),
(288.667,15,o),
(301,19.333,o),
(301,42,cs),
(301,68.667,o),
(284.667,74,o),
(262,74,cs),
(195,74,l),
(195,186,ls),
(195,226,o),
(202.333,269.333,o),
(217,300,cs),
(239.667,350.667,o),
(285,395,o),
(341,395,cs),
(428.531,395,o),
(441,283.816,o),
(441,163,cs),
(441,161.667,o),
(440.833,151.667,o),
(440.5,133,cs),
(440.167,114.333,o),
(439.333,91.667,o),
(438,65,cs),
(435.333,33,o),
(428.333,30,o),
(395,26,c),
(383,23.333,o),
(367,15.667,o),
(367,-3,cs),
(367,-25.667,o),
(382.667,-31,o),
(400,-31,cs),
(407.02,-31,o),
(468.331,-29,o),
(584,-29,cs),
(604,-29,o),
(621,-24,o),
(621,-4,cs),
(621,23.525,o),
(588.64,29,o),
(565,29,cs),
(511,29,l),
(511,260,l),
(511,260,l)
);
},
{
closed = 1;
nodes = (
(276,-135,o),
(312,-134,o),
(312,-151,cs),
(312,-168,o),
(310,-181,o),
(306,-189,cs),
(301,-198,o),
(299,-205,o),
(299,-211,cs),
(299,-228,o),
(313,-230,o),
(320,-230,cs),
(344,-230,o),
(385,-180,o),
(385,-126,cs),
(385,-73,o),
(355,-54,o),
(328,-54,cs),
(291,-54,o),
(276,-79,o),
(276,-103,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
85 1 3 2 24 1 0 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 67 0 9 9 10 83 0 10 10 25 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
8 1 7 6 1 2 3 7 2 91 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 67 0 9 9 10 83 0 10 10 25 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
8 1 7 6 1 2 3 7 2 91 0 9 0 10 9 10 87 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
8 1 7 6 1 2 3 7 2 91 0 0 0 1 9 0 1 91 0 9 0 10 9 10 87 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
8 1 7 6 1 2 3 7 2 91 5 1 3 0 4 1 3 4 91 0 0 0 1 9 0 1 91 0 9 10 10 9 79 0 9 9 10 83 0 10 9 10 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 8 7 2 8 79 0 7 6 1 2 3 7 2 91 5 1 3 0 4 1 3 4 91 0 0 0 1 9 0 1 91 0 9 10 10 9 79 0 9 9 10 83 0 10 9 10 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 7 0 6 2 7 6 91 0 8 0 2 3 8 2 91 5 1 3 0 4 1 3 4 91 0 0 0 1 9 0 1 91 0 9 10 10 9 79 0 9 9 10 83 0 10 9 10 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
106 104 98 96 37 54 74 52 116 38 47 118 33 11 35
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(398.066,-31,o),
(431.068,-30,o),
(472,-30,cs),
(512.932,-30,o),
(545.934,-29,o),
(571,-29,cs),
(580.333,-29,o),
(588,-26,o),
(588,-18,cs),
(588,-3.333,o),
(562,-1,o),
(542,-1,cs),
(488,-1,l),
(488,260,ls),
(488,412.163,o),
(406.195,455,o),
(336,455,cs),
(268,455,o),
(207.667,418.333,o),
(177,357,c),
(174,425,ls),
(172.667,447.667,o),
(166,451,o),
(150,451,cs),
(49.219,451,o),
(-4,443.718,o),
(-4,431,cs),
(-4,426.333,o),
(2.167,423.333,o),
(14.5,422,cs),
(26.833,420.667,o),
(39,420,o),
(51,420,cs),
(120,420,ls),
(132,420,o),
(135,411.333,o),
(135,398,cs),
(135,300.125,o),
(132.44,209.689,o),
(130,95,cs),
(129.333,73.667,o),
(127,60,o),
(123,54,cs),
(119,48,o),
(112,44.667,o),
(102,44,cs),
(57,41,ls),
(41,39.667,o),
(30,33.333,o),
(30,24,cs),
(30,20.667,o),
(32.333,18.167,o),
(37,16.5,cs),
(41.667,14.833,o),
(49.667,14,o),
(61,14,cs),
(63,14,o),
(68.667,14,o),
(78,14,cs),
(87.333,14,o),
(98.333,14,o),
(111,14,cs),
(123.667,14,o),
(137.167,14.167,o),
(151.5,14.5,cs),
(165.833,14.833,o),
(179.167,15,o),
(191.5,15,cs),
(203.833,15,o),
(214.333,15,o),
(223,15,cs),
(231.667,15,o),
(237,15,o),
(239,15,cs),
(261.667,15,o),
(273,19.667,o),
(273,29,cs),
(273,41,o),
(257.667,44,o),
(239,44,cs),
(172,44,l),
(172,186,ls),
(172,235.333,o),
(172.333,279.667,o),
(195,329,cs),
(225.667,393,o),
(281.333,425,o),
(336,425,cs),
(441.063,425,o),
(448,305.348,o),
(448,196,cs),
(448,153.333,o),
(446.667,90,o),
(444,30,cs),
(444,3.145,o),
(419.922,0.564,o),
(372,-4,cs),
(356.667,-5.333,o),
(349,-10.333,o),
(349,-19,cs),
(349,-27,o),
(357,-31,o),
(373,-31,cs)
);
},
{
closed = 1;
nodes = (
(333.943,-203,o),
(350,-153.312,o),
(350,-124,cs),
(350,-78.667,o),
(328,-67,o),
(308,-67,cs),
(281.333,-67,o),
(268,-83.667,o),
(268,-101,cs),
(268,-133.202,o),
(304,-127.69,o),
(304,-145,cs),
(304,-151.667,o),
(302.167,-159.833,o),
(298.5,-169.5,cs),
(294.833,-179.167,o),
(293,-186.333,o),
(293,-191,cs),
(293,-197.667,o),
(300.333,-203,o),
(307,-203,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
82 1 3 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
82 1 3 6 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 67 0 9 9 10 83 0 10 10 17 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
8 1 7 6 1 2 3 7 2 91 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 67 0 9 9 10 83 0 10 10 17 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
8 1 7 6 1 2 3 7 2 91 0 0 0 1 9 0 1 91 5 1 3 3 4 83 0 4 4 13 67 0 9 9 10 83 0 10 10 17 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
8 1 7 6 1 2 3 7 2 91 5 1 3 0 4 0 3 4 91 0 0 0 1 9 0 1 91 0 9 9 10 83 0 10 10 17 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
8 1 7 6 1 2 3 7 2 91 5 1 3 0 4 0 3 4 91 0 0 0 1 9 0 1 91 0 9 10 10 9 79 0 9 9 10 83 0 10 9 10 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 8 0 2 6 8 2 91 0 7 0 6 3 7 6 91 5 1 3 0 4 0 3 4 91 0 0 0 1 9 0 1 91 0 9 10 10 9 79 0 9 9 10 83 0 10 9 10 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
103 101 95 93 37 53 57 37 147 38 47 148 32 11 24
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = ncommaaccent;
unicode = 326;
},
{
glyphname = ndotaccent;
kernLeft = eng;
kernRight = n;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(310,537.333,o),
(335.667,514,o),
(369,514,cs),
(398.675,514,o),
(436,528.646,o),
(436,584,cs),
(436,620,o),
(408,645,o),
(376,645,cs),
(328.488,645,o),
(310,607.161,o),
(310,580,cs)
);
},
{
closed = 1;
nodes = (
(527,427.114,o),
(430.224,455,o),
(377,455,cs),
(314.337,455,o),
(242.225,419.939,o),
(216,357,c),
(213,415,ls),
(211.667,445.667,o),
(205.333,451,o),
(164,451,cs),
(9.739,451,o),
(-7,437.725,o),
(-7,411,cs),
(-7,399,o),
(-0.833,390.833,o),
(11.5,386.5,cs),
(23.833,382.167,o),
(41.667,380,o),
(65,380,cs),
(105,380,ls),
(117,380,o),
(123,366.667,o),
(123,340,cs),
(123,282.264,o),
(118,193.873,o),
(118,143,cs),
(118,134.028,o),
(117.256,89,o),
(90,89,cs),
(79,89,ls),
(67.19,89,o),
(43,82.066,o),
(43,51,cs),
(43,16.058,o),
(76.084,14,o),
(95,14,cs),
(97.667,14,o),
(103.667,14,o),
(113,14,cs),
(122.333,14,o),
(133.5,14,o),
(146.5,14,cs),
(159.5,14,o),
(173.333,14.167,o),
(188,14.5,cs),
(202.667,14.833,o),
(216.5,15,o),
(229.5,15,cs),
(242.5,15,o),
(253.333,15,o),
(262,15,cs),
(270.667,15,o),
(276,15,o),
(278,15,cs),
(307.333,15,o),
(321,30.333,o),
(321,53,cs),
(321,87.667,o),
(302,92,o),
(278,92,cs),
(211,92,l),
(211,186,ls),
(211,227.439,o),
(231.842,282.684,o),
(232,283,cs),
(248.532,324.33,o),
(286.329,377,o),
(345,377,cs),
(422.098,377,o),
(436,274.318,o),
(436,143,cs),
(436,117.667,o),
(435.333,104.667,o),
(434,86,cs),
(432.667,60.667,o),
(429.667,48,o),
(411,44,cs),
(392.333,40,o),
(380,29.667,o),
(380,7,cs),
(380,-19.667,o),
(401.667,-31,o),
(419,-31,cs),
(440.821,-31,o),
(469.491,-30,o),
(505,-30,cs),
(540.618,-30,o),
(569.954,-29,o),
(593,-29,cs),
(621,-29,o),
(644,-18.667,o),
(644,8,cs),
(644,40.801,o),
(609.283,47,o),
(581,47,cs),
(527,47,l),
(527,260,l),
(527,260,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
110 1 5 4 41 1 2 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 0 0 1 9 0 1 91 8 1 4 4 9 83 10 1 9 9 15 67 7 1 5 5 6 83 0 6 6 13 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 0 0 1 9 0 1 91 10 1 9 8 1 4 5 9 4 91 7 1 5 5 6 83 0 6 6 13 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 1 9 0 1 91 10 1 9 8 1 4 5 9 4 91 0 2 0 3 2 3 87 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 0 0 1 9 0 1 91 10 1 9 8 1 4 5 9 4 91 0 2 6 3 2 79 7 1 5 0 6 3 5 6 91 0 2 2 3 83 0 3 2 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
116 114 107 105 58 56 148 42 47 150 34 38 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 625;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(511,424.044,o),
(418.312,455,o),
(360,455,cs),
(293.333,455,o),
(229.333,419.667,o),
(200,357,c),
(197,419,ls),
(195.667,445.667,o),
(192.667,451,o),
(158,451,cs),
(27.965,451,o),
(-6,443.395,o),
(-6,417,cs),
(-6,400.717,o),
(34.311,400,o),
(59,400,cs),
(111,400,ls),
(122.333,400,o),
(128,389,o),
(128,367,cs),
(128,355.685,o),
(123,275.003,o),
(123,125,cs),
(123,100.563,o),
(117.554,71,o),
(95,71,cs),
(75,71,ls),
(59,71,o),
(38,65,o),
(38,41,cs),
(38,15.667,o),
(59.667,14,o),
(81,14,cs),
(89.742,14,o),
(150.077,15,o),
(262,15,cs),
(288.667,15,o),
(301,19.333,o),
(301,42,cs),
(301,68.667,o),
(284.667,74,o),
(262,74,cs),
(195,74,l),
(195,186,ls),
(195,226,o),
(202.333,269.333,o),
(217,300,cs),
(239.667,350.667,o),
(285,395,o),
(341,395,cs),
(428.531,395,o),
(441,283.816,o),
(441,163,cs),
(441,161.667,o),
(440.833,151.667,o),
(440.5,133,cs),
(440.167,114.333,o),
(439.333,91.667,o),
(438,65,cs),
(435.333,33,o),
(428.333,30,o),
(395,26,c),
(383,23.333,o),
(367,15.667,o),
(367,-3,cs),
(367,-25.667,o),
(382.667,-31,o),
(400,-31,cs),
(407.02,-31,o),
(468.331,-29,o),
(584,-29,cs),
(604,-29,o),
(621,-24,o),
(621,-4,cs),
(621,23.525,o),
(588.64,29,o),
(565,29,cs),
(511,29,l),
(511,260,l),
(511,260,l)
);
},
{
closed = 1;
nodes = (
(305,544,o),
(327,523,o),
(354,523,cs),
(379,523,o),
(410,536,o),
(410,584,cs),
(410,615,o),
(388,636,o),
(361,636,cs),
(319,636,o),
(305,600,o),
(305,580,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
85 1 3 2 24 1 0 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 9 0 10 7 9 10 91 6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 0 0 0 1 0 1 87 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 9 0 10 8 9 10 91 0 8 7 2 8 79 0 7 6 1 2 3 7 2 91 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 9 0 10 8 9 10 91 0 7 0 6 2 7 6 91 0 8 0 2 3 8 2 91 0 0 4 1 0 79 5 1 3 0 4 1 3 4 91 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
106 104 100 98 37 54 74 52 116 38 47 118 33 11 35
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(398.066,-31,o),
(431.068,-30,o),
(472,-30,cs),
(512.932,-30,o),
(545.934,-29,o),
(571,-29,cs),
(580.333,-29,o),
(588,-26,o),
(588,-18,cs),
(588,-3.333,o),
(562,-1,o),
(542,-1,cs),
(488,-1,l),
(488,260,ls),
(488,412.163,o),
(406.195,455,o),
(336,455,cs),
(268,455,o),
(207.667,418.333,o),
(177,357,c),
(174,425,ls),
(172.667,447.667,o),
(166,451,o),
(150,451,cs),
(49.219,451,o),
(-4,443.718,o),
(-4,431,cs),
(-4,426.333,o),
(2.167,423.333,o),
(14.5,422,cs),
(26.833,420.667,o),
(39,420,o),
(51,420,cs),
(120,420,ls),
(132,420,o),
(135,411.333,o),
(135,398,cs),
(135,300.125,o),
(132.44,209.689,o),
(130,95,cs),
(129.333,73.667,o),
(127,60,o),
(123,54,cs),
(119,48,o),
(112,44.667,o),
(102,44,cs),
(57,41,ls),
(41,39.667,o),
(30,33.333,o),
(30,24,cs),
(30,20.667,o),
(32.333,18.167,o),
(37,16.5,cs),
(41.667,14.833,o),
(49.667,14,o),
(61,14,cs),
(63,14,o),
(68.667,14,o),
(78,14,cs),
(87.333,14,o),
(98.333,14,o),
(111,14,cs),
(123.667,14,o),
(137.167,14.167,o),
(151.5,14.5,cs),
(165.833,14.833,o),
(179.167,15,o),
(191.5,15,cs),
(203.833,15,o),
(214.333,15,o),
(223,15,cs),
(231.667,15,o),
(237,15,o),
(239,15,cs),
(261.667,15,o),
(273,19.667,o),
(273,29,cs),
(273,41,o),
(257.667,44,o),
(239,44,cs),
(172,44,l),
(172,186,ls),
(172,235.333,o),
(172.333,279.667,o),
(195,329,cs),
(225.667,393,o),
(281.333,425,o),
(336,425,cs),
(441.063,425,o),
(448,305.348,o),
(448,196,cs),
(448,153.333,o),
(446.667,90,o),
(444,30,cs),
(444,3.145,o),
(419.922,0.564,o),
(372,-4,cs),
(356.667,-5.333,o),
(349,-10.333,o),
(349,-19,cs),
(349,-27,o),
(357,-31,o),
(373,-31,cs)
);
},
{
closed = 1;
nodes = (
(351.667,538,o),
(374,548,o),
(374,584,cs),
(374,606.667,o),
(358.667,621,o),
(340,621,cs),
(312.258,621,o),
(299,593.895,o),
(299,580,cs),
(299,556,o),
(314.333,538,o),
(333,538,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
82 1 3 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
82 1 3 6 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 9 0 10 7 9 10 91 6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 0 0 0 1 0 1 87 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 9 0 10 7 9 10 91 8 1 7 6 1 2 3 7 2 91 5 1 3 0 4 0 3 4 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 9 0 10 8 9 10 91 0 8 0 2 6 8 2 91 0 7 0 6 3 7 6 91 5 1 3 0 4 0 3 4 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
103 101 97 95 37 53 57 37 147 38 47 148 32 11 24
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = ndotaccent;
unicode = 7749;
},
{
glyphname = ntilde;
kernLeft = eng;
kernRight = n;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(205,514,o),
(212,498,o),
(224,498,cs),
(244.593,498,o),
(268.709,523,o),
(308,523,cs),
(346.662,523,o),
(389.294,499,o),
(445,499,cs),
(477.676,499,o),
(556,516.584,o),
(556,574,cs),
(556,595.333,o),
(540.667,609,o),
(534,609,cs),
(529.333,609,o),
(519.333,604.667,o),
(504,596,cs),
(485.333,585.333,o),
(462.667,579,o),
(444,579,cs),
(404.599,579,o),
(343.495,607,o),
(307,607,cs),
(282.333,607,o),
(259.667,601,o),
(239,589,cs),
(220.333,578.333,o),
(205,563.333,o),
(205,534,cs)
);
},
{
closed = 1;
nodes = (
(527,427.114,o),
(430.224,455,o),
(377,455,cs),
(314.337,455,o),
(242.225,419.939,o),
(216,357,c),
(213,415,ls),
(211.667,445.667,o),
(205.333,451,o),
(164,451,cs),
(9.739,451,o),
(-7,437.725,o),
(-7,411,cs),
(-7,399,o),
(-0.833,390.833,o),
(11.5,386.5,cs),
(23.833,382.167,o),
(41.667,380,o),
(65,380,cs),
(105,380,ls),
(117,380,o),
(123,366.667,o),
(123,340,cs),
(123,282.264,o),
(118,193.873,o),
(118,143,cs),
(118,134.028,o),
(117.256,89,o),
(90,89,cs),
(79,89,ls),
(67.19,89,o),
(43,82.066,o),
(43,51,cs),
(43,16.058,o),
(76.084,14,o),
(95,14,cs),
(97.667,14,o),
(103.667,14,o),
(113,14,cs),
(122.333,14,o),
(133.5,14,o),
(146.5,14,cs),
(159.5,14,o),
(173.333,14.167,o),
(188,14.5,cs),
(202.667,14.833,o),
(216.5,15,o),
(229.5,15,cs),
(242.5,15,o),
(253.333,15,o),
(262,15,cs),
(270.667,15,o),
(276,15,o),
(278,15,cs),
(307.333,15,o),
(321,30.333,o),
(321,53,cs),
(321,87.667,o),
(302,92,o),
(278,92,cs),
(211,92,l),
(211,186,ls),
(211,227.439,o),
(231.842,282.684,o),
(232,283,cs),
(248.532,324.33,o),
(286.329,377,o),
(345,377,cs),
(422.098,377,o),
(436,274.318,o),
(436,143,cs),
(436,117.667,o),
(435.333,104.667,o),
(434,86,cs),
(432.667,60.667,o),
(429.667,48,o),
(411,44,cs),
(392.333,40,o),
(380,29.667,o),
(380,7,cs),
(380,-19.667,o),
(401.667,-31,o),
(419,-31,cs),
(440.821,-31,o),
(469.491,-30,o),
(505,-30,cs),
(540.618,-30,o),
(569.954,-29,o),
(593,-29,cs),
(621,-29,o),
(644,-18.667,o),
(644,8,cs),
(644,40.801,o),
(609.283,47,o),
(581,47,cs),
(527,47,l),
(527,260,l),
(527,260,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
130 1 9 8 61 1 6 9 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 13 1 3 91 12 1 8 8 13 83 14 1 13 13 15 67 11 1 9 9 10 83 0 10 10 13 67 0 6 6 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 13 1 3 91 14 1 13 12 1 8 9 13 8 91 11 1 9 9 10 83 0 10 10 13 67 0 6 6 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 13 1 3 91 14 1 13 12 1 8 9 13 8 91 0 6 0 7 6 7 88 11 1 9 9 10 83 0 10 10 13 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 13 1 3 91 14 1 13 12 1 8 9 13 8 91 0 6 10 7 6 79 11 1 9 0 10 7 9 10 91 0 6 6 7 84 0 7 6 7 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
136 134 127 125 119 116 106 103 95 86 82 80 47 150 34 35 35 38 35 35 36 15 24
CALL[ ]	/* CallFunction */";
};
width = 625;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(178,547,o),
(177,541,o),
(177,535,cs),
(177,520,o),
(183,507,o),
(194,507,cs),
(211,507,o),
(238,532,o),
(278,532,cs),
(317,532,o),
(359,508,o),
(415,508,cs),
(471,508,o),
(504,530,o),
(517,553,cs),
(520,559,o),
(522,565,o),
(522,572,cs),
(522,588,o),
(511,600,o),
(504,600,cs),
(501,600,o),
(497,599,o),
(494,598,cs),
(490,596,o),
(483,592,o),
(474,587,cs),
(451,576,o),
(431,570,o),
(414,570,cs),
(375,570,o),
(313,598,o),
(277,598,cs),
(252,598,o),
(230,592,o),
(209,580,cs),
(199,574,o),
(192,569,o),
(188,564,cs),
(184,559,o),
(181,555,o),
(180,552,cs)
);
},
{
closed = 1;
nodes = (
(511,424.044,o),
(418.312,455,o),
(360,455,cs),
(293.333,455,o),
(229.333,419.667,o),
(200,357,c),
(197,419,ls),
(195.667,445.667,o),
(192.667,451,o),
(158,451,cs),
(27.965,451,o),
(-6,443.395,o),
(-6,417,cs),
(-6,400.717,o),
(34.311,400,o),
(59,400,cs),
(111,400,ls),
(122.333,400,o),
(128,389,o),
(128,367,cs),
(128,355.685,o),
(123,275.003,o),
(123,125,cs),
(123,100.563,o),
(117.554,71,o),
(95,71,cs),
(75,71,ls),
(59,71,o),
(38,65,o),
(38,41,cs),
(38,15.667,o),
(59.667,14,o),
(81,14,cs),
(89.742,14,o),
(150.077,15,o),
(262,15,cs),
(288.667,15,o),
(301,19.333,o),
(301,42,cs),
(301,68.667,o),
(284.667,74,o),
(262,74,cs),
(195,74,l),
(195,186,ls),
(195,226,o),
(202.333,269.333,o),
(217,300,cs),
(239.667,350.667,o),
(285,395,o),
(341,395,cs),
(428.531,395,o),
(441,283.816,o),
(441,163,cs),
(441,161.667,o),
(440.833,151.667,o),
(440.5,133,cs),
(440.167,114.333,o),
(439.333,91.667,o),
(438,65,cs),
(435.333,33,o),
(428.333,30,o),
(395,26,c),
(383,23.333,o),
(367,15.667,o),
(367,-3,cs),
(367,-25.667,o),
(382.667,-31,o),
(400,-31,cs),
(407.02,-31,o),
(468.331,-29,o),
(584,-29,cs),
(604,-29,o),
(621,-24,o),
(621,-4,cs),
(621,23.525,o),
(588.64,29,o),
(565,29,cs),
(511,29,l),
(511,260,l),
(511,260,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
123 1 9 8 62 1 6 9 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 13 1 3 91 12 1 8 8 13 83 14 1 13 13 15 67 11 1 9 9 10 83 0 10 10 13 67 0 6 6 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 13 1 3 91 14 1 13 12 1 8 9 13 8 91 11 1 9 9 10 83 0 10 10 13 67 0 6 6 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 13 1 3 91 14 1 13 12 1 8 9 13 8 91 0 6 0 7 6 7 88 11 1 9 9 10 83 0 10 10 13 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 13 1 3 91 14 1 13 12 1 8 9 13 8 91 0 6 10 7 6 79 11 1 9 0 10 7 9 10 91 0 6 6 7 84 0 7 6 7 72
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 14 1 3 91 0 14 13 8 14 79 0 13 12 1 8 9 13 8 91 0 6 10 7 6 79 11 1 9 0 10 7 9 10 91 0 6 6 7 84 0 7 6 7 72
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 14 1 3 91 0 13 0 12 8 13 12 91 0 14 0 8 9 14 8 91 0 6 10 7 6 79 11 1 9 0 10 7 9 10 91 0 6 6 7 84 0 7 6 7 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
127 125 120 117 111 107 97 94 90 83 79 77 47 118 36 35 35 38 35 35 37 15 35
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(398.066,-31,o),
(431.068,-30,o),
(472,-30,cs),
(512.932,-30,o),
(545.934,-29,o),
(571,-29,cs),
(580.333,-29,o),
(588,-26,o),
(588,-18,cs),
(588,-3.333,o),
(562,-1,o),
(542,-1,cs),
(488,-1,l),
(488,260,ls),
(488,412.163,o),
(406.195,455,o),
(336,455,cs),
(268,455,o),
(207.667,418.333,o),
(177,357,c),
(174,425,ls),
(172.667,447.667,o),
(166,451,o),
(150,451,cs),
(49.219,451,o),
(-4,443.718,o),
(-4,431,cs),
(-4,426.333,o),
(2.167,423.333,o),
(14.5,422,cs),
(26.833,420.667,o),
(39,420,o),
(51,420,cs),
(120,420,ls),
(132,420,o),
(135,411.333,o),
(135,398,cs),
(135,300.125,o),
(132.44,209.689,o),
(130,95,cs),
(129.333,73.667,o),
(127,60,o),
(123,54,cs),
(119,48,o),
(112,44.667,o),
(102,44,cs),
(57,41,ls),
(41,39.667,o),
(30,33.333,o),
(30,24,cs),
(30,20.667,o),
(32.333,18.167,o),
(37,16.5,cs),
(41.667,14.833,o),
(49.667,14,o),
(61,14,cs),
(63,14,o),
(68.667,14,o),
(78,14,cs),
(87.333,14,o),
(98.333,14,o),
(111,14,cs),
(123.667,14,o),
(137.167,14.167,o),
(151.5,14.5,cs),
(165.833,14.833,o),
(179.167,15,o),
(191.5,15,cs),
(203.833,15,o),
(214.333,15,o),
(223,15,cs),
(231.667,15,o),
(237,15,o),
(239,15,cs),
(261.667,15,o),
(273,19.667,o),
(273,29,cs),
(273,41,o),
(257.667,44,o),
(239,44,cs),
(172,44,l),
(172,186,ls),
(172,235.333,o),
(172.333,279.667,o),
(195,329,cs),
(225.667,393,o),
(281.333,425,o),
(336,425,cs),
(441.063,425,o),
(448,305.348,o),
(448,196,cs),
(448,153.333,o),
(446.667,90,o),
(444,30,cs),
(444,3.145,o),
(419.922,0.564,o),
(372,-4,cs),
(356.667,-5.333,o),
(349,-10.333,o),
(349,-19,cs),
(349,-27,o),
(357,-31,o),
(373,-31,cs)
);
},
{
closed = 1;
nodes = (
(166.791,522,o),
(193.735,547,o),
(235,547,cs),
(273.662,547,o),
(316.294,523,o),
(372,523,cs),
(424.947,523,o),
(474,542.797,o),
(474,568,cs),
(474,577.333,o),
(467.667,585,o),
(461,585,cs),
(457.667,585,o),
(454.167,584.167,o),
(450.5,582.5,cs),
(446.833,580.833,o),
(440.333,577.333,o),
(431,572,cs),
(408.333,560.667,o),
(388.333,555,o),
(371,555,cs),
(331.599,555,o),
(270.495,583,o),
(234,583,cs),
(209.333,583,o),
(186.667,577,o),
(166,565,cs),
(146.667,553.667,o),
(137,544.333,o),
(137,537,cs),
(137,530.333,o),
(144.333,522,o),
(151,522,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
82 1 3 2 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
82 1 3 6 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
11 1 9 0 13 12 9 13 91 0 10 14 1 12 7 10 12 91 6 1 2 2 7 83 8 1 7 7 15 67 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 84 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
11 1 9 0 13 12 9 13 91 0 10 14 1 12 7 10 12 91 8 1 7 6 1 2 3 7 2 91 5 1 3 3 4 83 0 4 4 13 67 0 0 0 1 84 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
11 1 9 0 13 12 9 13 91 0 10 14 1 12 7 10 12 91 8 1 7 6 1 2 3 7 2 91 0 0 0 1 0 1 88 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
11 1 9 0 13 12 9 13 91 0 10 14 1 12 7 10 12 91 8 1 7 6 1 2 3 7 2 91 5 1 3 0 4 0 3 4 91 0 0 1 1 0 79 0 0 0 1 84 0 1 0 1 72
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
11 1 9 0 13 12 9 13 91 0 10 14 1 12 8 10 12 91 0 8 0 2 6 8 2 91 0 7 0 6 3 7 6 91 5 1 3 0 4 0 3 4 91 0 0 1 1 0 79 0 0 0 1 84 0 1 0 1 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
124 122 119 117 114 112 106 104 101 99 96 94 37 53 57 37 147 38 47 148 32 15 24
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = ntilde;
unicode = 241;
},
{
glyphname = eng;
kernLeft = eng;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(446.974,-250,o),
(527,-181.362,o),
(527,-29,cs),
(527,257,ls),
(527,418.643,o),
(436.647,455,o),
(377,455,cs),
(314.337,455,o),
(242.225,419.939,o),
(216,357,c),
(213,415,ls),
(210.348,446.824,o),
(204.135,451,o),
(164,451,cs),
(-0.176,451,o),
(-7,441.92,o),
(-7,416,cs),
(-7,404.667,o),
(-1.5,397.167,o),
(9.5,393.5,cs),
(20.5,389.833,o),
(39,388,o),
(65,388,cs),
(105,388,ls),
(119.667,388,o),
(123,374.667,o),
(123,348,cs),
(123,330.308,o),
(121.776,291.488,o),
(120.5,231.5,cs),
(119.282,174.274,o),
(118,144.792,o),
(118,143,cs),
(117.333,122.333,o),
(114.333,107.833,o),
(109,99.5,cs),
(103.667,91.167,o),
(97.333,87,o),
(90,87,cs),
(75,86,ls),
(57.667,86,o),
(44,77.667,o),
(44,51,cs),
(44,15.456,o),
(71.779,14,o),
(95,14,cs),
(97.667,14,o),
(103.333,14,o),
(112,14,cs),
(120.667,14,o),
(131.167,14,o),
(143.5,14,cs),
(155.833,14,o),
(168.667,14.167,o),
(182,14.5,cs),
(195.333,14.833,o),
(207.833,15,o),
(219.5,15,cs),
(231.167,15,o),
(241.167,15,o),
(249.5,15,cs),
(257.833,15,o),
(263,15,o),
(265,15,cs),
(293,15,o),
(321,19.333,o),
(321,50,cs),
(321,84.667,o),
(302,92,o),
(278,92,cs),
(211,92,l),
(211,186,ls),
(211,227.439,o),
(231.842,282.684,o),
(232,283,cs),
(248.532,324.33,o),
(286.329,377,o),
(345,377,cs),
(422.491,377,o),
(436,328.846,o),
(436,205,cs),
(436,-36,ls),
(436,-103.554,o),
(419.427,-176,o),
(352,-176,cs),
(330.667,-176,o),
(313,-164.333,o),
(313,-139,cs),
(313,-121.667,o),
(323,-108.333,o),
(343,-107,cs),
(393.667,-104.333,o),
(406,-83.667,o),
(406,-61,cs),
(406,-26.333,o),
(384.667,-10,o),
(354,-10,cs),
(260.515,-10,o),
(235,-73.52,o),
(235,-141,cs),
(235,-216.647,o),
(312.088,-250,o),
(361,-250,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
94 1 4 9 95 1 5 4 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
94 1 8 9 95 1 5 4 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 2 3 1 2 91 8 1 4 4 9 83 10 1 9 9 15 67 7 1 5 5 6 83 0 6 6 13 67 0 3 3 0 83 11 1 0 0 25 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
10 1 9 8 1 4 5 9 4 91 0 1 0 2 3 1 2 91 0 3 11 1 0 3 0 87 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 8 4 9 8 79 10 1 9 0 4 5 9 4 91 0 1 0 2 3 1 2 91 0 3 11 1 0 3 0 87 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 8 4 9 8 79 10 1 9 0 4 5 9 4 91 7 1 5 0 6 1 5 6 91 0 1 0 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 11 1 0 3 0 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 7 5 6 5 7 96 0 9 0 8 4 9 8 91 0 10 0 4 5 10 4 91 0 5 0 6 1 5 6 91 0 1 0 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 11 1 0 3 0 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 101 99 90 87 82 79 68 65 59 50 46 44 34 32 23 21 17 15 11 9 0 110 1 110 12 15
CALL[ ]	/* CallFunction */";
};
width = 581;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(511,424.044,o),
(418.312,455,o),
(360,455,cs),
(293.333,455,o),
(229.333,419.667,o),
(200,357,c),
(197,419,ls),
(195.667,445.667,o),
(192.667,451,o),
(158,451,cs),
(27.965,451,o),
(-6,443.395,o),
(-6,417,cs),
(-6,400.717,o),
(34.311,400,o),
(59,400,cs),
(111,400,ls),
(122.333,400,o),
(128,389,o),
(128,367,cs),
(128,355.685,o),
(123,275.003,o),
(123,125,cs),
(123,100.563,o),
(117.554,71,o),
(95,71,cs),
(75,71,ls),
(59,71,o),
(38,65,o),
(38,41,cs),
(38,15.667,o),
(59.667,14,o),
(81,14,cs),
(89.742,14,o),
(150.077,15,o),
(262,15,cs),
(288.667,15,o),
(301,19.333,o),
(301,42,cs),
(301,68.667,o),
(284.667,74,o),
(262,74,cs),
(195,74,l),
(195,186,ls),
(195,226,o),
(202.333,269.333,o),
(217,300,cs),
(239.667,350.667,o),
(285,395,o),
(341,395,cs),
(427.492,395,o),
(441,290.097,o),
(441,163,cs),
(441,1,ls),
(441,-122.99,o),
(423.612,-180,o),
(352,-180,cs),
(322.667,-180,o),
(298,-159.667,o),
(298,-133,cs),
(298,-123.667,o),
(299.333,-102.667,o),
(310,-96,c),
(316.667,-104,o),
(328.667,-112,o),
(346,-112,cs),
(367.333,-112,o),
(386,-99.333,o),
(386,-70,cs),
(386,-39.333,o),
(360,-27,o),
(336,-27,cs),
(272.373,-27,o),
(238,-78.914,o),
(238,-135,cs),
(238,-204.678,o),
(299.563,-239,o),
(355,-239,cs),
(459,-239,o),
(511,-150.333,o),
(511,-1,cs),
(511,260,l),
(511,260,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
92 1 5 4 22 1 2 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 2 3 1 2 91 8 1 4 4 9 83 10 1 9 9 15 67 7 1 5 5 6 83 0 6 6 13 67 0 3 3 0 83 0 0 0 25 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
10 1 9 8 1 4 5 9 4 91 0 1 0 2 3 1 2 91 7 1 5 5 6 83 0 6 6 13 67 0 3 3 0 83 0 0 0 25 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
10 1 9 8 1 4 5 9 4 91 0 1 0 2 3 1 2 91 0 3 0 0 3 0 87 7 1 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
10 1 9 8 1 4 5 9 4 91 7 1 5 0 6 1 5 6 91 0 1 0 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 10 9 4 10 79 0 9 8 1 4 5 9 4 91 7 1 5 0 6 1 5 6 91 0 1 0 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 9 0 8 4 9 8 91 0 10 0 4 5 10 4 91 7 1 5 0 6 1 5 6 91 0 1 0 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
96 94 89 86 74 52 116 38 41 39 36 40 34 11 24
CALL[ ]	/* CallFunction */";
};
width = 567;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(479.993,-217,o),
(488,-96.401,o),
(488,46,cs),
(488,58.667,o),
(487.667,75.333,o),
(487,96,cs),
(486.333,116.667,o),
(486,136.333,o),
(486,155,cs),
(486,173,o),
(486.333,191.167,o),
(487,209.5,cs),
(487.667,227.833,o),
(488,246.333,o),
(488,265,cs),
(488,414.892,o),
(407.287,455,o),
(336,455,cs),
(268,455,o),
(207.667,418.333,o),
(177,357,c),
(174,425,ls),
(172.667,447.667,o),
(166,451,o),
(150,451,cs),
(49.219,451,o),
(-4,443.718,o),
(-4,431,cs),
(-4,426.333,o),
(2.167,423.333,o),
(14.5,422,cs),
(26.833,420.667,o),
(39,420,o),
(51,420,cs),
(120,420,ls),
(132,420,o),
(135,411.333,o),
(135,398,cs),
(135,300.125,o),
(132.44,209.689,o),
(130,95,cs),
(129.333,73.667,o),
(127,60,o),
(123,54,cs),
(119,48,o),
(112,44.667,o),
(102,44,cs),
(57,41,ls),
(41,39.667,o),
(30,33.333,o),
(30,24,cs),
(30,20.667,o),
(32.333,18.167,o),
(37,16.5,cs),
(41.667,14.833,o),
(49.667,14,o),
(61,14,cs),
(63,14,o),
(68.667,14,o),
(78,14,cs),
(87.333,14,o),
(98.333,14,o),
(111,14,cs),
(123.667,14,o),
(137.167,14.167,o),
(151.5,14.5,cs),
(165.833,14.833,o),
(179.167,15,o),
(191.5,15,cs),
(203.833,15,o),
(214.333,15,o),
(223,15,cs),
(231.667,15,o),
(237,15,o),
(239,15,cs),
(261.667,15,o),
(273,19.667,o),
(273,29,cs),
(273,41,o),
(257.667,44,o),
(239,44,cs),
(172,44,l),
(172,186,ls),
(172,235.333,o),
(172.333,279.667,o),
(195,329,cs),
(225.667,393,o),
(281.333,425,o),
(336,425,cs),
(441.063,425,o),
(448,305.348,o),
(448,196,cs),
(448,63,ls),
(448,-170.534,o),
(416.276,-186,o),
(352,-186,cs),
(310.667,-186,o),
(276,-161.667,o),
(276,-139,cs),
(276,-124.333,o),
(281.333,-121.333,o),
(292,-120,cs),
(309.333,-117.333,o),
(329,-113,o),
(329,-85,cs),
(329,-59.667,o),
(312.667,-55,o),
(298,-55,cs),
(271.333,-55,o),
(242,-72,o),
(242,-116,cs),
(242,-177.333,o),
(275,-217,o),
(347,-217,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
71 1 2 1 1 66
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
71 1 2 5 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 9 3 0 0 9 96 5 1 1 1 6 83 7 1 6 6 15 67 4 1 2 2 3 83 0 3 3 13 67 0 0 0 8 84 0 8 8 25 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 9 3 0 3 9 0 104 5 1 1 1 6 83 7 1 6 6 15 67 4 1 2 2 3 83 0 3 3 13 67 0 0 0 8 84 0 8 8 25 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 9 3 0 3 9 0 104 7 1 6 5 1 1 2 6 1 91 4 1 2 2 3 83 0 3 3 13 67 0 0 0 8 84 0 8 8 25 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 9 3 0 3 9 0 104 7 1 6 5 1 1 2 6 1 91 4 1 2 0 3 9 2 3 91 0 0 0 8 84 0 8 8 25 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 9 3 0 3 9 0 104 7 1 6 5 1 1 2 6 1 91 4 1 2 0 3 9 2 3 91 0 0 8 8 0 79 0 0 0 8 84 0 8 0 8 72
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 9 3 0 3 9 0 104 0 7 0 1 5 7 1 91 0 6 0 5 2 6 5 91 4 1 2 0 3 9 2 3 91 0 0 8 8 0 79 0 0 0 8 84 0 8 0 8 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
97 95 46 37 53 57 37 147 38 41 40 10 24
CALL[ ]	/* CallFunction */";
};
width = 547;
}
);
note = eng;
unicode = 331;
},
{
glyphname = o;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(518,360.325,o),
(429.325,472,o),
(276,472,cs),
(117.972,472,o),
(26,367.665,o),
(26,230,cs),
(26,90.384,o),
(114.277,-11,o),
(267,-11,cs),
(386.884,-11,o),
(518,69.498,o),
(518,231,cs)
);
},
{
closed = 1;
nodes = (
(364.1,394,o),
(424,327.051,o),
(424,235,cs),
(424,121.918,o),
(335.9,68,o),
(269,68,cs),
(200.276,68,o),
(122,122.715,o),
(122,231,cs),
(122,331.899,o),
(192.397,394,o),
(278,394,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
4 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
0 1 4 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
21 20 31 29 20 39 21 39 40 36 5 17
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(500,360.638,o),
(418.296,472,o),
(271,472,cs),
(121.33,472,o),
(29,366.6,o),
(29,230,cs),
(29,88.212,o),
(123.583,-11,o),
(259,-11,cs),
(372.689,-11,o),
(500,70.492,o),
(500,233,cs)
);
},
{
closed = 1;
nodes = (
(362.443,412,o),
(427,339.88,o),
(427,235,cs),
(427,105.433,o),
(328.595,50,o),
(261,50,cs),
(191.457,50,o),
(104,107.283,o),
(104,231,cs),
(104,345.22,o),
(180.162,412,o),
(270,412,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
4 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
0 1 4 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
21 20 31 29 20 39 21 39 40 36 5 17
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356.349,-11,o),
(474,73.571,o),
(474,236,cs),
(474,363.247,o),
(402.201,472,o),
(264,472,cs),
(130.561,472,o),
(33,370.147,o),
(33,230,cs),
(33,93.164,o),
(126.605,-11,o),
(248,-11,cs)
);
},
{
closed = 1;
nodes = (
(172.347,20,o),
(78,89.962,o),
(78,231,cs),
(78,364.255,o),
(163.017,442,o),
(259,442,cs),
(361.068,442,o),
(431,355.341,o),
(431,235,cs),
(431,83.821,o),
(324.177,20,o),
(250,20,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
4 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
0 1 4 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
21 20 31 29 20 39 21 39 40 36 5 17
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = o;
unicode = 111;
},
{
glyphname = oacute;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(377,665.333,o),
(349.667,686.667,o),
(307,688,cs),
(281.667,688,o),
(251,649.167,o),
(227,608.5,cs),
(206.511,573.783,o),
(185,526.988,o),
(185,522,cs),
(185,507.333,o),
(207.333,500,o),
(222,500,cs),
(239.099,500,o),
(274.389,522.679,o),
(313,557,cs),
(347.627,587.78,o),
(377,622.341,o),
(377,640,cs)
);
},
{
closed = 1;
nodes = (
(518,360.325,o),
(429.325,472,o),
(276,472,cs),
(117.972,472,o),
(26,367.665,o),
(26,230,cs),
(26,90.384,o),
(114.277,-11,o),
(267,-11,cs),
(386.884,-11,o),
(518,69.498,o),
(518,231,cs)
);
},
{
closed = 1;
nodes = (
(364.1,394,o),
(424,327.051,o),
(424,235,cs),
(424,121.918,o),
(335.9,68,o),
(269,68,cs),
(200.276,68,o),
(122,122.715,o),
(122,231,cs),
(122,331.899,o),
(192.397,394,o),
(278,394,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 1 106 0 0 3 0 106 6 1 4 4 3 83 0 3 3 23 67 0 5 5 2 83 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 1 0 1 106 0 0 3 0 106 0 3 6 1 4 5 3 4 92 0 5 5 2 83 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
39 38 49 47 38 57 39 57 40 38 38 38 7 19
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(352,654.667,o),
(333.667,670,o),
(303,670,cs),
(284.565,670,o),
(256.366,635.522,o),
(233,599.5,cs),
(207.182,559.697,o),
(192,526.174,o),
(192,522,cs),
(192,508.667,o),
(206.333,504,o),
(217,504,cs),
(246.68,504,o),
(352,603.002,o),
(352,632,cs)
);
},
{
closed = 1;
nodes = (
(500,360.638,o),
(418.296,472,o),
(271,472,cs),
(121.33,472,o),
(29,366.6,o),
(29,230,cs),
(29,88.212,o),
(123.583,-11,o),
(259,-11,cs),
(372.689,-11,o),
(500,70.492,o),
(500,233,cs)
);
},
{
closed = 1;
nodes = (
(362.443,412,o),
(427,339.88,o),
(427,235,cs),
(427,105.433,o),
(328.595,50,o),
(261,50,cs),
(191.457,50,o),
(104,107.283,o),
(104,231,cs),
(104,345.22,o),
(180.162,412,o),
(270,412,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 1 106 0 0 3 0 106 6 1 4 4 3 83 0 3 3 23 67 0 5 5 2 83 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 1 0 1 106 0 0 3 0 106 0 3 6 1 4 5 3 4 92 0 5 5 2 83 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
39 38 49 47 38 57 39 57 40 38 40 36 7 19
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356.349,-11,o),
(474,73.571,o),
(474,236,cs),
(474,363.247,o),
(402.201,472,o),
(264,472,cs),
(130.561,472,o),
(33,370.147,o),
(33,230,cs),
(33,93.164,o),
(126.605,-11,o),
(248,-11,cs)
);
},
{
closed = 1;
nodes = (
(172.347,20,o),
(78,89.962,o),
(78,231,cs),
(78,364.255,o),
(163.017,442,o),
(259,442,cs),
(361.068,442,o),
(431,355.341,o),
(431,235,cs),
(431,83.821,o),
(324.177,20,o),
(250,20,cs)
);
},
{
closed = 1;
nodes = (
(229.797,510,o),
(317,597.027,o),
(317,618,cs),
(317,636.667,o),
(308.667,640,o),
(298,640,cs),
(277.822,640,o),
(203,545.882,o),
(203,521,cs),
(203,513.667,o),
(205.667,510,o),
(211,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 5 4 5 106 0 4 1 4 106 6 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 5 4 5 106 0 4 1 4 106 0 1 6 1 2 3 1 2 92 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
21 20 53 51 46 44 31 29 20 39 21 39 40 36 7 17
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = oacute;
unicode = 243;
},
{
glyphname = obreve;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(518,360.325,o),
(429.325,472,o),
(276,472,cs),
(117.972,472,o),
(26,367.665,o),
(26,230,cs),
(26,90.384,o),
(114.277,-11,o),
(267,-11,cs),
(386.884,-11,o),
(518,69.498,o),
(518,231,cs)
);
},
{
closed = 1;
nodes = (
(364.1,394,o),
(424,327.051,o),
(424,235,cs),
(424,121.918,o),
(335.9,68,o),
(269,68,cs),
(200.276,68,o),
(122,122.715,o),
(122,231,cs),
(122,331.899,o),
(192.397,394,o),
(278,394,cs)
);
},
{
closed = 1;
nodes = (
(391,615.667,o),
(373,619,o),
(353,619,cs),
(335.667,619,o),
(321,604.667,o),
(321,590,cs),
(321,584.667,o),
(316.5,579.5,o),
(307.5,574.5,cs),
(298.5,569.5,o),
(284.333,567,o),
(265,567,cs),
(234.535,567,o),
(206,574.638,o),
(206,590,cs),
(206,612.667,o),
(192.667,619,o),
(170,619,cs),
(147.333,619,o),
(138,606.333,o),
(138,589,cs),
(138,546.333,o),
(183.333,510,o),
(270,510,cs),
(321.962,510,o),
(391,536.821,o),
(391,589,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
7 1 5 6 5 106 0 6 0 4 1 6 4 91 8 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
7 1 5 6 5 106 0 6 0 4 1 6 4 91 0 1 8 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
21 20 66 64 60 58 52 50 46 44 31 29 20 39 21 39 40 36 9 17
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(500,360.638,o),
(418.296,472,o),
(271,472,cs),
(121.33,472,o),
(29,366.6,o),
(29,230,cs),
(29,88.212,o),
(123.583,-11,o),
(259,-11,cs),
(372.689,-11,o),
(500,70.492,o),
(500,233,cs)
);
},
{
closed = 1;
nodes = (
(362.443,412,o),
(427,339.88,o),
(427,235,cs),
(427,105.433,o),
(328.595,50,o),
(261,50,cs),
(191.457,50,o),
(104,107.283,o),
(104,231,cs),
(104,345.22,o),
(180.162,412,o),
(270,412,cs)
);
},
{
closed = 1;
nodes = (
(384,616,o),
(367,617,o),
(354,617,cs),
(339,617,o),
(328,605,o),
(328,590,cs),
(328,573,o),
(303,555,o),
(264,555,cs),
(234,555,o),
(199,564,o),
(199,590,cs),
(199,610,o),
(190,617,o),
(171,617,cs),
(154,617,o),
(145,608,o),
(145,589,cs),
(145,548,o),
(191,510,o),
(267,510,cs),
(318,510,o),
(384,537,o),
(384,589,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
7 1 5 6 5 106 0 6 0 4 1 6 4 91 8 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
7 1 5 6 5 106 0 6 0 4 1 6 4 91 0 1 8 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
22 21 66 64 60 58 52 50 47 45 32 30 21 40 22 40 40 37 9 28
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356.349,-11,o),
(474,73.571,o),
(474,236,cs),
(474,363.247,o),
(402.201,472,o),
(264,472,cs),
(130.561,472,o),
(33,370.147,o),
(33,230,cs),
(33,93.164,o),
(126.605,-11,o),
(248,-11,cs)
);
},
{
closed = 1;
nodes = (
(172.347,20,o),
(78,89.962,o),
(78,231,cs),
(78,364.255,o),
(163.017,442,o),
(259,442,cs),
(361.068,442,o),
(431,355.341,o),
(431,235,cs),
(431,83.821,o),
(324.177,20,o),
(250,20,cs)
);
},
{
closed = 1;
nodes = (
(316.372,510,o),
(374,540.865,o),
(374,589,cs),
(374,610.333,o),
(365.667,613,o),
(355,613,cs),
(343.667,613,o),
(338,605.333,o),
(338,590,cs),
(338,562.695,o),
(298.603,535,o),
(263,535,cs),
(224.333,535,o),
(189,548.667,o),
(189,590,cs),
(189,606,o),
(186.667,613,o),
(172,613,cs),
(160.667,613,o),
(155,605,o),
(155,589,cs),
(155,547.83,o),
(205.193,510,o),
(263,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
7 1 5 6 5 106 0 6 0 4 1 6 4 91 8 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
7 1 5 6 5 106 0 6 0 4 1 6 4 91 0 1 8 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
21 20 66 64 59 57 53 51 46 44 31 29 20 39 21 39 40 36 9 17
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = obreve;
unicode = 335;
},
{
glyphname = ocircumflex;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(387.333,484,o),
(391,494.333,o),
(391,505,cs),
(391,545.963,o),
(281.877,638,o),
(258,638,cs),
(247,638,o),
(211.897,612.643,o),
(185,587.5,cs),
(154.333,558.833,o),
(126,523.333,o),
(126,498,cs),
(126,491.333,o),
(131,484,o),
(139,484,cs),
(151.064,484,o),
(208.718,519.91,o),
(258,546,c),
(329.614,508.087,o),
(366.803,484,o),
(378,484,cs)
);
},
{
closed = 1;
nodes = (
(518,360.325,o),
(429.325,472,o),
(276,472,cs),
(117.972,472,o),
(26,367.665,o),
(26,230,cs),
(26,90.384,o),
(114.277,-11,o),
(267,-11,cs),
(386.884,-11,o),
(518,69.498,o),
(518,231,cs)
);
},
{
closed = 1;
nodes = (
(364.1,394,o),
(424,327.051,o),
(424,235,cs),
(424,121.918,o),
(335.9,68,o),
(269,68,cs),
(200.276,68,o),
(122,122.715,o),
(122,231,cs),
(122,331.899,o),
(192.397,394,o),
(278,394,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 0 2 106 1 7 2 0 4 0 106 8 1 5 5 4 83 0 4 4 23 67 0 6 6 3 83 0 3 3 24 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 2 0 2 106 1 7 2 0 4 0 106 0 4 8 1 5 6 4 5 92 0 6 6 3 83 0 3 3 24 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
47 46 1 0 57 55 46 65 47 65 42 40 32 30 19 17 11 9 0 25 1 25 9 15
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(500,360.638,o),
(418.296,472,o),
(271,472,cs),
(121.33,472,o),
(29,366.6,o),
(29,230,cs),
(29,88.212,o),
(123.583,-11,o),
(259,-11,cs),
(372.689,-11,o),
(500,70.492,o),
(500,233,cs)
);
},
{
closed = 1;
nodes = (
(362.443,412,o),
(427,339.88,o),
(427,235,cs),
(427,105.433,o),
(328.595,50,o),
(261,50,cs),
(191.457,50,o),
(104,107.283,o),
(104,231,cs),
(104,345.22,o),
(180.162,412,o),
(270,412,cs)
);
},
{
closed = 1;
nodes = (
(387,496,o),
(390,504,o),
(390,513,cs),
(390,548,o),
(284,641,o),
(259,641,cs),
(237,641,o),
(129,550,o),
(129,509,cs),
(129,500,o),
(133,496,o),
(140,496,cs),
(155,496,o),
(186,524,o),
(259,567,c),
(272,559,o),
(366,496,o),
(379,496,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
46 1 4 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 6 4 6 106 5 8 2 4 1 4 106 7 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 6 4 6 106 5 8 2 4 1 4 106 0 1 7 1 2 3 1 2 92 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
42 41 22 21 59 57 52 50 41 65 42 65 32 30 21 40 22 40 40 37 9 28
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356.349,-11,o),
(474,73.571,o),
(474,236,cs),
(474,363.247,o),
(402.201,472,o),
(264,472,cs),
(130.561,472,o),
(33,370.147,o),
(33,230,cs),
(33,93.164,o),
(126.605,-11,o),
(248,-11,cs)
);
},
{
closed = 1;
nodes = (
(172.347,20,o),
(78,89.962,o),
(78,231,cs),
(78,364.255,o),
(163.017,442,o),
(259,442,cs),
(361.068,442,o),
(431,355.341,o),
(431,235,cs),
(431,83.821,o),
(324.177,20,o),
(250,20,cs)
);
},
{
closed = 1;
nodes = (
(155.084,510,o),
(207.433,558.894,o),
(260,596,c),
(336.411,542.063,o),
(365.302,510,o),
(380,510,cs),
(385.333,510,o),
(388,513.667,o),
(388,521,cs),
(388,546.329,o),
(284.852,640,o),
(260,640,cs),
(236.626,640,o),
(133,545.933,o),
(133,521,cs),
(133,513.667,o),
(135.667,510,o),
(141,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
45 1 4 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 6 4 6 106 5 8 2 4 1 4 106 7 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 6 4 6 106 5 8 2 4 1 4 106 0 1 7 1 2 3 1 2 92 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
41 40 21 20 58 56 51 49 40 63 41 63 31 29 20 39 21 39 40 36 9 17
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = ocircumflex;
unicode = 244;
},
{
glyphname = odieresis;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(96,536.333,o),
(121.667,509,o),
(155,509,cs),
(184.675,509,o),
(222,523.646,o),
(222,579,cs),
(222,615,o),
(194,640,o),
(162,640,cs),
(115.034,640,o),
(96,598.847,o),
(96,575,cs)
);
},
{
closed = 1;
nodes = (
(303,513.333,o),
(328.667,486,o),
(362,486,cs),
(391.675,486,o),
(429,500.646,o),
(429,556,cs),
(429,592,o),
(401,617,o),
(369,617,cs),
(322.034,617,o),
(303,575.847,o),
(303,552,cs)
);
},
{
closed = 1;
nodes = (
(518,360.325,o),
(429.325,472,o),
(276,472,cs),
(117.972,472,o),
(26,367.665,o),
(26,230,cs),
(26,90.384,o),
(114.277,-11,o),
(267,-11,cs),
(386.884,-11,o),
(518,69.498,o),
(518,231,cs)
);
},
{
closed = 1;
nodes = (
(364.1,394,o),
(424,327.051,o),
(424,235,cs),
(424,121.918,o),
(335.9,68,o),
(269,68,cs),
(200.276,68,o),
(122,122.715,o),
(122,231,cs),
(122,331.899,o),
(192.397,394,o),
(278,394,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 5 2 3 91 8 1 6 6 5 83 0 5 5 23 67 0 7 7 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 5 2 3 91 0 5 8 1 6 7 5 6 91 0 7 7 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
53 52 63 61 52 71 53 71 40 38 38 38 38 36 9 21
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(500,360.638,o),
(418.296,472,o),
(271,472,cs),
(121.33,472,o),
(29,366.6,o),
(29,230,cs),
(29,88.212,o),
(123.583,-11,o),
(259,-11,cs),
(372.689,-11,o),
(500,70.492,o),
(500,233,cs)
);
},
{
closed = 1;
nodes = (
(362.443,412,o),
(427,339.88,o),
(427,235,cs),
(427,105.433,o),
(328.595,50,o),
(261,50,cs),
(191.457,50,o),
(104,107.283,o),
(104,231,cs),
(104,345.22,o),
(180.162,412,o),
(270,412,cs)
);
},
{
closed = 1;
nodes = (
(106,542,o),
(128,518,o),
(155,518,cs),
(180,518,o),
(211,531,o),
(211,579,cs),
(211,610,o),
(189,631,o),
(162,631,cs),
(124,631,o),
(106,596,o),
(106,575,cs)
);
},
{
closed = 1;
nodes = (
(313,519,o),
(335,495,o),
(362,495,cs),
(387,495,o),
(418,508,o),
(418,556,cs),
(418,587,o),
(396,608,o),
(369,608,cs),
(331,608,o),
(313,573,o),
(313,552,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 4 0 5 7 4 5 91 0 6 0 7 1 6 7 91 8 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 4 0 5 7 4 5 91 0 6 0 7 1 6 7 91 0 1 8 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
22 21 67 65 61 59 53 51 47 45 32 30 21 40 22 40 40 37 9 28
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356.349,-11,o),
(474,73.571,o),
(474,236,cs),
(474,363.247,o),
(402.201,472,o),
(264,472,cs),
(130.561,472,o),
(33,370.147,o),
(33,230,cs),
(33,93.164,o),
(126.605,-11,o),
(248,-11,cs)
);
},
{
closed = 1;
nodes = (
(172.347,20,o),
(78,89.962,o),
(78,231,cs),
(78,364.255,o),
(163.017,442,o),
(259,442,cs),
(361.068,442,o),
(431,355.341,o),
(431,235,cs),
(431,83.821,o),
(324.177,20,o),
(250,20,cs)
);
},
{
closed = 1;
nodes = (
(173.667,533,o),
(196,543,o),
(196,579,cs),
(196,601.667,o),
(180.667,616,o),
(162,616,cs),
(134.258,616,o),
(121,588.895,o),
(121,575,cs),
(121,551,o),
(136.333,533,o),
(155,533,cs)
);
},
{
closed = 1;
nodes = (
(380.667,510,o),
(403,520,o),
(403,556,cs),
(403,578.667,o),
(387.667,593,o),
(369,593,cs),
(341.258,593,o),
(328,565.895,o),
(328,552,cs),
(328,528,o),
(343.333,510,o),
(362,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 4 0 5 7 4 5 91 0 6 0 7 1 6 7 91 8 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 4 0 5 7 4 5 91 0 6 0 7 1 6 7 91 0 1 8 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
21 20 66 64 60 58 52 50 46 44 31 29 20 39 21 39 40 36 9 17
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = odieresis;
unicode = 246;
},
{
glyphname = ograve;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(183,606.193,o),
(300.363,500,o),
(338,500,cs),
(352.667,500,o),
(375,507.333,o),
(375,522,cs),
(375,526.988,o),
(353.489,573.783,o),
(333,608.5,cs),
(309,649.167,o),
(278.333,688,o),
(253,688,cs),
(210.333,686.667,o),
(183,665.333,o),
(183,640,cs)
);
},
{
closed = 1;
nodes = (
(518,360.325,o),
(429.325,472,o),
(276,472,cs),
(117.972,472,o),
(26,367.665,o),
(26,230,cs),
(26,90.384,o),
(114.277,-11,o),
(267,-11,cs),
(386.884,-11,o),
(518,69.498,o),
(518,231,cs)
);
},
{
closed = 1;
nodes = (
(364.1,394,o),
(424,327.051,o),
(424,235,cs),
(424,121.918,o),
(335.9,68,o),
(269,68,cs),
(200.276,68,o),
(122,122.715,o),
(122,231,cs),
(122,331.899,o),
(192.397,394,o),
(278,394,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 1 0 106 0 1 3 1 106 6 1 4 4 3 83 0 3 3 23 67 0 5 5 2 83 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 1 0 106 0 1 3 1 106 0 3 6 1 4 5 3 4 92 0 5 5 2 83 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
37 36 47 45 36 55 37 55 40 40 38 34 7 19
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(192,603.002,o),
(297.32,504,o),
(327,504,cs),
(337.667,504,o),
(352,508.667,o),
(352,522,cs),
(352,527.525,o),
(336.921,556.997,o),
(310.5,599.5,cs),
(288.1,635.535,o),
(258.529,670,o),
(241,670,cs),
(210.333,670,o),
(192,654.667,o),
(192,632,cs)
);
},
{
closed = 1;
nodes = (
(500,360.638,o),
(418.296,472,o),
(271,472,cs),
(121.33,472,o),
(29,366.6,o),
(29,230,cs),
(29,88.212,o),
(123.583,-11,o),
(259,-11,cs),
(372.689,-11,o),
(500,70.492,o),
(500,233,cs)
);
},
{
closed = 1;
nodes = (
(362.443,412,o),
(427,339.88,o),
(427,235,cs),
(427,105.433,o),
(328.595,50,o),
(261,50,cs),
(191.457,50,o),
(104,107.283,o),
(104,231,cs),
(104,345.22,o),
(180.162,412,o),
(270,412,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 1 0 106 0 1 3 1 106 6 1 4 4 3 83 0 3 3 23 67 0 5 5 2 83 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 1 0 106 0 1 3 1 106 0 3 6 1 4 5 3 4 92 0 5 5 2 83 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
39 38 49 47 38 57 39 57 40 40 40 34 7 19
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356.349,-11,o),
(474,73.571,o),
(474,236,cs),
(474,363.247,o),
(402.201,472,o),
(264,472,cs),
(130.561,472,o),
(33,370.147,o),
(33,230,cs),
(33,93.164,o),
(126.605,-11,o),
(248,-11,cs)
);
},
{
closed = 1;
nodes = (
(172.347,20,o),
(78,89.962,o),
(78,231,cs),
(78,364.255,o),
(163.017,442,o),
(259,442,cs),
(361.068,442,o),
(431,355.341,o),
(431,235,cs),
(431,83.821,o),
(324.177,20,o),
(250,20,cs)
);
},
{
closed = 1;
nodes = (
(315.333,510,o),
(318,513.667,o),
(318,521,cs),
(318,545.882,o),
(243.178,640,o),
(223,640,cs),
(212.333,640,o),
(204,636.667,o),
(204,618,cs),
(204,597.027,o),
(291.203,510,o),
(310,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 4 5 4 106 0 5 1 5 106 6 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 4 5 4 106 0 5 1 5 106 0 1 6 1 2 3 1 2 92 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
21 20 51 49 44 42 31 29 20 39 21 39 40 36 7 17
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = ograve;
unicode = 242;
},
{
glyphname = ohungarumlaut;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(307,665.333,o),
(279.667,686.667,o),
(237,688,cs),
(211.667,688,o),
(181,649.167,o),
(157,608.5,cs),
(136.511,573.783,o),
(115,526.988,o),
(115,522,cs),
(115,507.333,o),
(137.333,500,o),
(152,500,cs),
(169.099,500,o),
(204.389,522.679,o),
(243,557,cs),
(277.627,587.78,o),
(307,622.341,o),
(307,640,cs)
);
},
{
closed = 1;
nodes = (
(474,665.333,o),
(446.667,686.667,o),
(404,688,cs),
(378.667,688,o),
(348,649.167,o),
(324,608.5,cs),
(303.511,573.783,o),
(282,526.988,o),
(282,522,cs),
(282,507.333,o),
(304.333,500,o),
(319,500,cs),
(336.099,500,o),
(371.389,522.679,o),
(410,557,cs),
(444.627,587.78,o),
(474,622.341,o),
(474,640,cs)
);
},
{
closed = 1;
nodes = (
(518,360.325,o),
(429.325,472,o),
(276,472,cs),
(117.972,472,o),
(26,367.665,o),
(26,230,cs),
(26,90.384,o),
(114.277,-11,o),
(267,-11,cs),
(386.884,-11,o),
(518,69.498,o),
(518,231,cs)
);
},
{
closed = 1;
nodes = (
(364.1,394,o),
(424,327.051,o),
(424,235,cs),
(424,121.918,o),
(335.9,68,o),
(269,68,cs),
(200.276,68,o),
(122,122.715,o),
(122,231,cs),
(122,331.899,o),
(192.397,394,o),
(278,394,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
3 1 1 0 1 106 2 1 0 5 0 106 8 1 6 6 5 83 0 5 5 23 67 0 7 7 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
3 1 1 0 1 106 2 1 0 5 0 106 0 5 8 1 6 7 5 6 92 0 7 7 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
57 56 67 65 56 75 57 75 40 38 38 40 38 38 9 21
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(280,654.667,o),
(261.667,670,o),
(231,670,cs),
(212.565,670,o),
(184.366,635.522,o),
(161,599.5,cs),
(135.182,559.697,o),
(120,526.174,o),
(120,522,cs),
(120,508.667,o),
(134.333,504,o),
(145,504,cs),
(174.68,504,o),
(280,603.002,o),
(280,632,cs)
);
},
{
closed = 1;
nodes = (
(442,654.667,o),
(423.667,670,o),
(393,670,cs),
(374.565,670,o),
(346.366,635.522,o),
(323,599.5,cs),
(297.182,559.697,o),
(282,526.174,o),
(282,522,cs),
(282,508.667,o),
(296.333,504,o),
(307,504,cs),
(336.68,504,o),
(442,603.002,o),
(442,632,cs)
);
},
{
closed = 1;
nodes = (
(500,360.638,o),
(418.296,472,o),
(271,472,cs),
(121.33,472,o),
(29,366.6,o),
(29,230,cs),
(29,88.212,o),
(123.583,-11,o),
(259,-11,cs),
(372.689,-11,o),
(500,70.492,o),
(500,233,cs)
);
},
{
closed = 1;
nodes = (
(362.443,412,o),
(427,339.88,o),
(427,235,cs),
(427,105.433,o),
(328.595,50,o),
(261,50,cs),
(191.457,50,o),
(104,107.283,o),
(104,231,cs),
(104,345.22,o),
(180.162,412,o),
(270,412,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
3 1 1 0 1 106 2 1 0 5 0 106 8 1 6 6 5 83 0 5 5 23 67 0 7 7 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
3 1 1 0 1 106 2 1 0 5 0 106 0 5 8 1 6 7 5 6 92 0 7 7 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
57 56 67 65 56 75 57 75 40 38 40 38 40 36 9 21
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356.349,-11,o),
(474,73.571,o),
(474,236,cs),
(474,363.247,o),
(402.201,472,o),
(264,472,cs),
(130.561,472,o),
(33,370.147,o),
(33,230,cs),
(33,93.164,o),
(126.605,-11,o),
(248,-11,cs)
);
},
{
closed = 1;
nodes = (
(172.347,20,o),
(78,89.962,o),
(78,231,cs),
(78,364.255,o),
(163.017,442,o),
(259,442,cs),
(361.068,442,o),
(431,355.341,o),
(431,235,cs),
(431,83.821,o),
(324.177,20,o),
(250,20,cs)
);
},
{
closed = 1;
nodes = (
(155.797,510,o),
(243,597.027,o),
(243,618,cs),
(243,636.667,o),
(234.667,640,o),
(224,640,cs),
(203.822,640,o),
(129,545.882,o),
(129,521,cs),
(129,513.667,o),
(131.667,510,o),
(137,510,cs)
);
},
{
closed = 1;
nodes = (
(309.797,510,o),
(397,597.027,o),
(397,618,cs),
(397,636.667,o),
(388.667,640,o),
(378,640,cs),
(357.822,640,o),
(283,545.882,o),
(283,521,cs),
(283,513.667,o),
(285.667,510,o),
(291,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
7 1 5 4 5 106 6 1 4 1 4 106 8 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
7 1 5 4 5 106 6 1 4 1 4 106 0 1 8 1 2 3 1 2 92 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
21 20 68 66 61 59 53 51 46 44 31 29 20 39 21 39 40 36 9 17
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = ohungarumlaut;
unicode = 337;
},
{
glyphname = omacron;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(392,646,o),
(373.667,645.5,o),
(353,644.5,cs),
(332.333,643.5,o),
(308,643,o),
(280,643,cs),
(237.698,643,o),
(189.437,645,o),
(159,645,cs),
(136.333,645,o),
(126,624.667,o),
(126,606,cs),
(126,587.333,o),
(140.333,566,o),
(159,566,cs),
(229.305,566,o),
(326.446,567,o),
(400,567,cs),
(428.782,567,o),
(436,593.801,o),
(436,609,cs),
(436,629,o),
(422.667,646,o),
(408,646,cs)
);
},
{
closed = 1;
nodes = (
(518,360.325,o),
(429.325,472,o),
(276,472,cs),
(117.972,472,o),
(26,367.665,o),
(26,230,cs),
(26,90.384,o),
(114.277,-11,o),
(267,-11,cs),
(386.884,-11,o),
(518,69.498,o),
(518,231,cs)
);
},
{
closed = 1;
nodes = (
(364.1,394,o),
(424,327.051,o),
(424,235,cs),
(424,121.918,o),
(335.9,68,o),
(269,68,cs),
(200.276,68,o),
(122,122.715,o),
(122,231,cs),
(122,331.899,o),
(192.397,394,o),
(278,394,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
6 1 0 0 1 3 0 1 91 7 1 4 4 3 83 0 3 3 23 67 0 5 5 2 83 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
6 1 0 0 1 3 0 1 91 0 3 7 1 4 5 3 4 91 0 5 5 2 83 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
48 47 1 0 58 56 47 66 48 66 43 41 33 31 14 7 0 26 1 18 8 15
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(500,360.638,o),
(418.296,472,o),
(271,472,cs),
(121.33,472,o),
(29,366.6,o),
(29,230,cs),
(29,88.212,o),
(123.583,-11,o),
(259,-11,cs),
(372.689,-11,o),
(500,70.492,o),
(500,233,cs)
);
},
{
closed = 1;
nodes = (
(362.443,412,o),
(427,339.88,o),
(427,235,cs),
(427,105.433,o),
(328.595,50,o),
(261,50,cs),
(191.457,50,o),
(104,107.283,o),
(104,231,cs),
(104,345.22,o),
(180.162,412,o),
(270,412,cs)
);
},
{
closed = 1;
nodes = (
(389,604,o),
(371,604,o),
(350,603,cs),
(329,602,o),
(305,601,o),
(277,601,cs),
(235,601,o),
(186,603,o),
(156,603,cs),
(137,603,o),
(130,588,o),
(130,573,cs),
(130,558,o),
(141,542,o),
(156,542,cs),
(226,542,o),
(323,543,o),
(397,543,cs),
(420,543,o),
(426,565,o),
(426,576,cs),
(426,591,o),
(416,604,o),
(405,604,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
7 1 4 0 5 1 4 5 91 6 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
7 1 4 0 5 1 4 5 91 0 1 6 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
42 41 22 21 53 46 41 65 42 57 32 30 21 40 22 40 40 37 8 28
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356.349,-11,o),
(474,73.571,o),
(474,236,cs),
(474,363.247,o),
(402.201,472,o),
(264,472,cs),
(130.561,472,o),
(33,370.147,o),
(33,230,cs),
(33,93.164,o),
(126.605,-11,o),
(248,-11,cs)
);
},
{
closed = 1;
nodes = (
(172.347,20,o),
(78,89.962,o),
(78,231,cs),
(78,364.255,o),
(163.017,442,o),
(259,442,cs),
(361.068,442,o),
(431,355.341,o),
(431,235,cs),
(431,83.821,o),
(324.177,20,o),
(250,20,cs)
);
},
{
closed = 1;
nodes = (
(222.305,510,o),
(319.446,511,o),
(393,511,cs),
(407.667,511,o),
(412,522.333,o),
(412,529,cs),
(412,535.667,o),
(406.333,542,o),
(401,542,cs),
(385,542,o),
(366.667,541.5,o),
(346,540.5,cs),
(325.333,539.5,o),
(301,539,o),
(273,539,cs),
(230.698,539,o),
(182.437,541,o),
(152,541,cs),
(141.333,541,o),
(136,532.667,o),
(136,526,cs),
(136,519.333,o),
(142.667,510,o),
(152,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
7 1 4 0 5 1 4 5 91 6 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
7 1 4 0 5 1 4 5 91 0 1 6 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
41 40 21 20 52 45 40 64 41 56 31 29 20 39 21 39 40 36 8 17
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = omacron;
unicode = 333;
},
{
glyphname = oogonek;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(518,360.325,o),
(429.325,472,o),
(276,472,cs),
(117.972,472,o),
(26,367.665,o),
(26,230,cs),
(26,98.501,o),
(106.02,1.611,o),
(236,-9,c),
(212.264,-20.868,o),
(165,-48.827,o),
(165,-94,cs),
(165,-145.579,o),
(225.091,-169,o),
(275,-169,cs),
(327.345,-169,o),
(358,-139.646,o),
(358,-116,cs),
(358,-104,o),
(346.333,-92,o),
(333,-92,cs),
(313.449,-92,o),
(314.136,-116,o),
(273,-116,cs),
(258.333,-116,o),
(244,-109.667,o),
(244,-95,cs),
(244,-65.667,o),
(262,-23.667,o),
(294,-9,c),
(405.904,1.917,o),
(518,80.599,o),
(518,231,cs)
);
},
{
closed = 1;
nodes = (
(364.1,394,o),
(424,327.051,o),
(424,235,cs),
(424,121.918,o),
(335.9,68,o),
(269,68,cs),
(200.276,68,o),
(122,122.715,o),
(122,231,cs),
(122,331.899,o),
(192.397,394,o),
(278,394,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 1 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 5 4 1 4 5 1 104 0 1 0 4 1 0 102 0 0 0 2 0 2 88 6 1 4 4 3 83 0 3 3 23 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 5 4 1 4 5 1 104 0 1 0 4 1 0 102 0 3 6 1 4 5 3 4 91 0 0 2 2 0 79 0 0 0 2 84 0 2 0 2 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
50 49 60 58 49 68 50 68 45 43 38 35 42 7 18
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(500,360.638,o),
(418.296,472,o),
(271,472,cs),
(121.33,472,o),
(29,366.6,o),
(29,230,cs),
(29,88.212,o),
(123.583,-11,o),
(259,-11,cs),
(372.689,-11,o),
(500,70.492,o),
(500,233,cs)
);
},
{
closed = 1;
nodes = (
(362.443,412,o),
(427,339.88,o),
(427,235,cs),
(427,105.433,o),
(328.595,50,o),
(261,50,cs),
(191.457,50,o),
(104,107.283,o),
(104,231,cs),
(104,345.22,o),
(180.162,412,o),
(270,412,cs)
);
},
{
closed = 1;
nodes = (
(218,-12,o),
(206,-19,o),
(195,-28,cs),
(176,-43,o),
(159,-64,o),
(159,-95,cs),
(159,-138,o),
(201,-168,o),
(260,-168,cs),
(308,-168,o),
(338,-127,o),
(338,-117,cs),
(338,-106,o),
(332,-95,o),
(317,-95,cs),
(313,-95,o),
(309,-97,o),
(304,-101,cs),
(299,-106,o),
(293,-111,o),
(288,-116,cs),
(282,-122,o),
(271,-125,o),
(254,-125,cs),
(238,-125,o),
(223,-110,o),
(223,-94,cs),
(223,-75,o),
(237,-21,o),
(282,-6,c),
(232,-5,l),
(232,-5,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 3 2 7 7 3 96 0 5 0 4 0 5 4 104 0 4 0 6 4 6 87 8 1 2 2 1 83 0 1 1 23 67 9 1 7 7 0 84 0 0 0 24 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 3 2 7 7 3 96 0 5 0 4 0 5 4 104 0 1 8 1 2 3 1 2 91 0 4 0 6 4 6 87 9 1 7 7 0 84 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 3 2 7 2 3 7 104 0 5 0 4 0 5 4 104 0 1 8 1 2 3 1 2 91 0 4 0 6 4 6 87 9 1 7 7 0 84 0 0 0 24 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
41 41 22 21 41 70 41 70 63 61 55 53 50 48 32 30 21 40 22 40 40 37 10 28
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(301.13,-169,o),
(331,-127.791,o),
(331,-118,cs),
(331,-110,o),
(329,-102,o),
(317,-102,cs),
(297.96,-102,o),
(291.683,-142,o),
(255,-142,cs),
(224.028,-142,o),
(216,-112.466,o),
(216,-95,cs),
(216,-76.065,o),
(227.142,-27.875,o),
(268,-10,c),
(367.263,0.731,o),
(474,79.4,o),
(474,236,cs),
(474,363.247,o),
(402.201,472,o),
(264,472,cs),
(130.561,472,o),
(33,370.147,o),
(33,230,cs),
(33,95.721,o),
(121.269,-1.971,o),
(231,-10,c),
(211.46,-21.166,o),
(172,-49.36,o),
(172,-96,cs),
(172,-138.667,o),
(206.333,-169,o),
(253,-169,cs)
);
},
{
closed = 1;
nodes = (
(172.347,20,o),
(78,89.962,o),
(78,231,cs),
(78,364.255,o),
(163.017,442,o),
(259,442,cs),
(361.068,442,o),
(431,355.341,o),
(431,235,cs),
(431,83.821,o),
(324.177,20,o),
(250,20,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
36 1 1 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 5 4 1 4 5 1 104 0 1 0 4 1 0 102 0 0 0 2 0 2 88 6 1 4 4 3 83 0 3 3 23 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 5 4 1 4 5 1 104 0 1 0 4 1 0 102 0 3 6 1 4 5 3 4 91 0 0 2 2 0 79 0 0 0 2 84 0 2 0 2 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
52 51 62 60 51 70 52 70 47 45 38 35 46 7 18
CALL[ ]	/* CallFunction */";
};
width = 507;
}
);
note = oogonek;
unicode = 491;
},
{
glyphname = oslash;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(518,307,o),
(488.333,375.667,o),
(431,421,c),
(441.667,441,o),
(453,469,o),
(453,481,cs),
(453,493,o),
(445,517,o),
(405,517,cs),
(380.98,517,o),
(362.908,475.723,o),
(361,470,cs),
(356,460,l),
(332,468,o),
(305.333,472,o),
(276,472,cs),
(117.972,472,o),
(26,367.665,o),
(26,230,cs),
(26,140.667,o),
(61,69.333,o),
(125,28,c),
(100,-22,ls),
(97.333,-28.667,o),
(94,-36.667,o),
(94,-42,cs),
(94,-66.137,o),
(128.882,-67,o),
(142,-67,cs),
(159.333,-67,o),
(174.333,-64.333,o),
(189,-35,cs),
(205,-4,l),
(223.667,-8,o),
(244.333,-11,o),
(267,-11,cs),
(386.884,-11,o),
(518,69.498,o),
(518,231,cs)
);
},
{
closed = 1;
nodes = (
(292,394,o),
(305.667,392,o),
(319,388,c),
(293.667,338.667,o),
(268.167,291.333,o),
(242.5,246,cs),
(216.833,200.667,o),
(192,155.667,o),
(168,111,c),
(141.333,137.667,o),
(122,177.667,o),
(122,231,cs),
(122,331.899,o),
(192.397,394,o),
(278,394,cs)
);
},
{
closed = 1;
nodes = (
(424,121.918,o),
(335.9,68,o),
(269,68,cs),
(261,68,o),
(252,68.667,o),
(244,70,c),
(389,342,l),
(411.667,314,o),
(424,277.667,o),
(424,235,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
43 31 2 4 2 62 57 54 3 5 4 21 8 2 0 5 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 2 3 106 0 1 0 1 107 6 1 4 4 2 83 0 2 2 23 67 0 5 5 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 3 2 3 106 0 1 0 1 107 0 2 6 1 4 5 2 4 91 0 5 5 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
47 46 67 65 46 58 47 58 38 46 53 36 7 19
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(97,-30,o),
(95,-37.333,o),
(95,-44,cs),
(95,-61.333,o),
(117,-64,o),
(129,-64,cs),
(146.333,-64,o),
(163.667,-45.667,o),
(169,-35,cs),
(413,421,ls),
(417.162,429.324,o),
(440,471.766,o),
(440,489,cs),
(440,499.667,o),
(434,517,o),
(406,517,cs),
(381.98,517,o),
(363.908,475.723,o),
(362,470,c),
(263.985,271.088,o),
(188.563,153.125,o),
(101,-22,cs)
);
},
{
closed = 1;
nodes = (
(500,360.638,o),
(418.296,472,o),
(271,472,cs),
(121.33,472,o),
(29,366.6,o),
(29,230,cs),
(29,88.212,o),
(123.583,-11,o),
(259,-11,cs),
(372.689,-11,o),
(500,70.492,o),
(500,233,cs)
);
},
{
closed = 1;
nodes = (
(362.443,412,o),
(427,339.88,o),
(427,235,cs),
(427,105.433,o),
(328.595,50,o),
(261,50,cs),
(191.457,50,o),
(104,107.283,o),
(104,231,cs),
(104,345.22,o),
(180.162,412,o),
(270,412,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 3 0 106 0 1 2 1 107 6 1 4 4 3 83 0 3 3 23 67 0 5 5 2 83 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 3 0 106 0 1 2 1 107 0 3 6 1 4 5 3 4 91 0 5 5 2 83 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
48 47 58 56 47 66 48 66 40 40 42 41 7 19
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(127,-59,o),
(130.667,-53.667,o),
(140,-35,cs),
(163,8,l),
(190.333,-4.667,o),
(218.667,-11,o),
(248,-11,cs),
(356.349,-11,o),
(474,73.571,o),
(474,236,cs),
(474,316,o),
(446,388.333,o),
(390,431,c),
(408,464,ls),
(413.333,474.667,o),
(422,492.333,o),
(422,503,cs),
(422,511,o),
(419,517,o),
(407,517,cs),
(382.98,517,o),
(364.908,475.723,o),
(363,470,c),
(354,453,l),
(326.667,465.667,o),
(296.667,472,o),
(264,472,cs),
(130.561,472,o),
(33,370.147,o),
(33,230,cs),
(33,140.667,o),
(70.667,70.667,o),
(128,28,c),
(123.333,20,o),
(119,11.833,o),
(115,3.5,cs),
(111,-4.833,o),
(106.667,-13.333,o),
(102,-22,cs),
(99.333,-28.667,o),
(97,-39,o),
(97,-47,cs),
(97,-55,o),
(101.667,-59,o),
(111,-59,cs)
);
},
{
closed = 1;
nodes = (
(107.333,95.667,o),
(78,151,o),
(78,231,cs),
(78,364.255,o),
(163.017,442,o),
(259,442,cs),
(288.333,442,o),
(315.333,434.333,o),
(338,421,c),
(304.667,355.667,o),
(272.167,293.833,o),
(240.5,235.5,cs),
(208.833,177.167,o),
(177.333,119,o),
(146,61,c)
);
},
{
closed = 1;
nodes = (
(226.667,20,o),
(203,26,o),
(179,38,c),
(372,396,l),
(409.333,358.667,o),
(431,303,o),
(431,235,cs),
(431,83.821,o),
(324.177,20,o),
(250,20,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
29 1 4 2 63 62 56 53 42 19 6 5 4 7 1 0 5 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 2 3 106 0 1 0 1 107 6 1 4 4 2 83 0 2 2 23 67 0 5 5 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 3 2 3 106 0 1 0 1 107 0 2 6 1 4 5 2 4 91 0 5 5 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
46 45 66 64 45 58 46 58 38 46 36 36 7 19
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = oslash;
unicode = 248;
},
{
glyphname = oslashacute;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(364,665.333,o),
(336.667,686.667,o),
(294,688,cs),
(268.667,688,o),
(238,649.167,o),
(214,608.5,cs),
(193.511,573.783,o),
(172,526.988,o),
(172,522,cs),
(172,507.333,o),
(194.333,500,o),
(209,500,cs),
(226.099,500,o),
(261.389,522.679,o),
(300,557,cs),
(334.627,587.78,o),
(364,622.341,o),
(364,640,cs)
);
},
{
closed = 1;
nodes = (
(518,307,o),
(488.333,375.667,o),
(431,421,c),
(441.667,441,o),
(453,469,o),
(453,481,cs),
(453,493,o),
(445,517,o),
(405,517,cs),
(380.98,517,o),
(362.908,475.723,o),
(361,470,cs),
(356,460,l),
(332,468,o),
(305.333,472,o),
(276,472,cs),
(117.972,472,o),
(26,367.665,o),
(26,230,cs),
(26,140.667,o),
(61,69.333,o),
(125,28,c),
(100,-22,ls),
(97.333,-28.667,o),
(94,-36.667,o),
(94,-42,cs),
(94,-66.137,o),
(128.882,-67,o),
(142,-67,cs),
(159.333,-67,o),
(174.333,-64.333,o),
(189,-35,cs),
(205,-4,l),
(223.667,-8,o),
(244.333,-11,o),
(267,-11,cs),
(386.884,-11,o),
(518,69.498,o),
(518,231,cs)
);
},
{
closed = 1;
nodes = (
(292,394,o),
(305.667,392,o),
(319,388,c),
(293.667,338.667,o),
(268.167,291.333,o),
(242.5,246,cs),
(216.833,200.667,o),
(192,155.667,o),
(168,111,c),
(141.333,137.667,o),
(122,177.667,o),
(122,231,cs),
(122,331.899,o),
(192.397,394,o),
(278,394,cs)
);
},
{
closed = 1;
nodes = (
(424,121.918,o),
(335.9,68,o),
(269,68,cs),
(261,68,o),
(252,68.667,o),
(244,70,c),
(389,342,l),
(411.667,314,o),
(424,277.667,o),
(424,235,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
61 49 2 6 4 80 75 72 3 7 6 39 26 2 2 7 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 5 1 106 0 5 0 5 106 0 0 4 0 106 0 3 2 3 107 8 1 6 6 4 83 0 4 4 23 67 0 7 7 2 83 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 1 5 1 106 0 5 0 5 106 0 0 4 0 106 0 3 2 3 107 0 4 8 1 6 7 4 6 92 0 7 7 2 83 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
65 64 85 83 64 76 65 76 38 46 53 38 38 38 9 21
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(97,-30,o),
(95,-37.333,o),
(95,-44,cs),
(95,-61.333,o),
(117,-64,o),
(129,-64,cs),
(146.333,-64,o),
(163.667,-45.667,o),
(169,-35,cs),
(413,421,ls),
(417.162,429.324,o),
(440,471.766,o),
(440,489,cs),
(440,499.667,o),
(434,517,o),
(406,517,cs),
(381.98,517,o),
(363.908,475.723,o),
(362,470,c),
(263.985,271.088,o),
(188.563,153.125,o),
(101,-22,cs)
);
},
{
closed = 1;
nodes = (
(357,654.667,o),
(338.667,670,o),
(308,670,cs),
(289.565,670,o),
(261.366,635.522,o),
(238,599.5,cs),
(212.182,559.697,o),
(197,526.174,o),
(197,522,cs),
(197,508.667,o),
(211.333,504,o),
(222,504,cs),
(251.68,504,o),
(357,603.002,o),
(357,632,cs)
);
},
{
closed = 1;
nodes = (
(500,360.638,o),
(418.296,472,o),
(271,472,cs),
(121.33,472,o),
(29,366.6,o),
(29,230,cs),
(29,88.212,o),
(123.583,-11,o),
(259,-11,cs),
(372.689,-11,o),
(500,70.492,o),
(500,233,cs)
);
},
{
closed = 1;
nodes = (
(362.443,412,o),
(427,339.88,o),
(427,235,cs),
(427,105.433,o),
(328.595,50,o),
(261,50,cs),
(191.457,50,o),
(104,107.283,o),
(104,231,cs),
(104,345.22,o),
(180.162,412,o),
(270,412,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 3 0 3 106 0 0 2 0 106 0 2 5 2 106 0 1 4 1 107 8 1 6 6 5 83 0 5 5 23 67 0 7 7 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 3 0 3 106 0 0 2 0 106 0 2 5 2 106 0 1 4 1 107 0 5 8 1 6 7 5 6 92 0 7 7 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
66 65 76 74 65 84 66 84 40 38 40 40 42 41 9 21
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(127,-59,o),
(130.667,-53.667,o),
(140,-35,cs),
(163,8,l),
(190.333,-4.667,o),
(218.667,-11,o),
(248,-11,cs),
(356.349,-11,o),
(474,73.571,o),
(474,236,cs),
(474,316,o),
(446,388.333,o),
(390,431,c),
(408,464,ls),
(413.333,474.667,o),
(422,492.333,o),
(422,503,cs),
(422,511,o),
(419,517,o),
(407,517,cs),
(382.98,517,o),
(364.908,475.723,o),
(363,470,c),
(354,453,l),
(326.667,465.667,o),
(296.667,472,o),
(264,472,cs),
(130.561,472,o),
(33,370.147,o),
(33,230,cs),
(33,140.667,o),
(70.667,70.667,o),
(128,28,c),
(123.333,20,o),
(119,11.833,o),
(115,3.5,cs),
(111,-4.833,o),
(106.667,-13.333,o),
(102,-22,cs),
(99.333,-28.667,o),
(97,-39,o),
(97,-47,cs),
(97,-55,o),
(101.667,-59,o),
(111,-59,cs)
);
},
{
closed = 1;
nodes = (
(107.333,95.667,o),
(78,151,o),
(78,231,cs),
(78,364.255,o),
(163.017,442,o),
(259,442,cs),
(288.333,442,o),
(315.333,434.333,o),
(338,421,c),
(304.667,355.667,o),
(272.167,293.833,o),
(240.5,235.5,cs),
(208.833,177.167,o),
(177.333,119,o),
(146,61,c)
);
},
{
closed = 1;
nodes = (
(226.667,20,o),
(203,26,o),
(179,38,c),
(372,396,l),
(409.333,358.667,o),
(431,303,o),
(431,235,cs),
(431,83.821,o),
(324.177,20,o),
(250,20,cs)
);
},
{
closed = 1;
nodes = (
(260.797,510,o),
(348,597.027,o),
(348,618,cs),
(348,636.667,o),
(339.667,640,o),
(329,640,cs),
(308.822,640,o),
(234,545.882,o),
(234,521,cs),
(234,513.667,o),
(236.667,510,o),
(242,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
29 1 4 2 63 62 56 53 42 19 6 5 4 7 1 0 5 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 7 3 7 106 0 3 6 3 106 0 6 2 6 106 0 1 0 1 107 8 1 4 4 2 83 0 2 2 23 67 0 5 5 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 7 3 7 106 0 3 6 3 106 0 6 2 6 106 0 1 0 1 107 0 2 8 1 4 5 2 4 91 0 5 5 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
46 45 83 81 76 74 66 64 45 58 46 58 38 46 36 36 9 19
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = oslashacute;
unicode = 511;
},
{
glyphname = otilde;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(518,360.325,o),
(429.325,472,o),
(276,472,cs),
(117.972,472,o),
(26,367.665,o),
(26,230,cs),
(26,90.384,o),
(114.277,-11,o),
(267,-11,cs),
(386.884,-11,o),
(518,69.498,o),
(518,231,cs)
);
},
{
closed = 1;
nodes = (
(364.1,394,o),
(424,327.051,o),
(424,235,cs),
(424,121.918,o),
(335.9,68,o),
(269,68,cs),
(200.276,68,o),
(122,122.715,o),
(122,231,cs),
(122,331.899,o),
(192.397,394,o),
(278,394,cs)
);
},
{
closed = 1;
nodes = (
(82,514,o),
(89,498,o),
(101,498,cs),
(121.593,498,o),
(145.709,523,o),
(185,523,cs),
(223.662,523,o),
(266.294,499,o),
(322,499,cs),
(354.676,499,o),
(433,516.584,o),
(433,574,cs),
(433,595.333,o),
(417.667,609,o),
(411,609,cs),
(406.333,609,o),
(396.333,604.667,o),
(381,596,cs),
(362.333,585.333,o),
(339.667,579,o),
(321,579,cs),
(281.599,579,o),
(220.495,607,o),
(184,607,cs),
(159.333,607,o),
(136.667,601,o),
(116,589,cs),
(97.333,578.333,o),
(82,563.333,o),
(82,534,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 1 5 7 91 10 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 1 5 7 91 0 1 10 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
21 20 74 72 69 67 64 62 56 54 51 49 46 44 31 29 20 39 21 39 40 36 11 17
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(86,547,o),
(85,541,o),
(85,535,cs),
(85,520,o),
(91,507,o),
(102,507,cs),
(119,507,o),
(146,532,o),
(186,532,cs),
(225,532,o),
(267,508,o),
(323,508,cs),
(379,508,o),
(412,530,o),
(425,553,cs),
(428,559,o),
(430,565,o),
(430,572,cs),
(430,588,o),
(419,600,o),
(412,600,cs),
(409,600,o),
(405,599,o),
(402,598,cs),
(398,596,o),
(391,592,o),
(382,587,cs),
(359,576,o),
(339,570,o),
(322,570,cs),
(283,570,o),
(221,598,o),
(185,598,cs),
(160,598,o),
(138,592,o),
(117,580,cs),
(107,574,o),
(100,569,o),
(96,564,cs),
(92,559,o),
(89,555,o),
(88,552,cs)
);
},
{
closed = 1;
nodes = (
(500,360.638,o),
(418.296,472,o),
(271,472,cs),
(121.33,472,o),
(29,366.6,o),
(29,230,cs),
(29,88.212,o),
(123.583,-11,o),
(259,-11,cs),
(372.689,-11,o),
(500,70.492,o),
(500,233,cs)
);
},
{
closed = 1;
nodes = (
(362.443,412,o),
(427,339.88,o),
(427,235,cs),
(427,105.433,o),
(328.595,50,o),
(261,50,cs),
(191.457,50,o),
(104,107.283,o),
(104,231,cs),
(104,345.22,o),
(180.162,412,o),
(270,412,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 7 1 3 91 10 1 8 8 7 83 0 7 7 23 67 0 9 9 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 7 1 3 91 0 7 10 1 8 9 7 8 91 0 9 9 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
60 59 70 68 59 78 60 78 40 40 35 35 38 35 35 37 11 34
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(356.349,-11,o),
(474,73.571,o),
(474,236,cs),
(474,363.247,o),
(402.201,472,o),
(264,472,cs),
(130.561,472,o),
(33,370.147,o),
(33,230,cs),
(33,93.164,o),
(126.605,-11,o),
(248,-11,cs)
);
},
{
closed = 1;
nodes = (
(172.347,20,o),
(78,89.962,o),
(78,231,cs),
(78,364.255,o),
(163.017,442,o),
(259,442,cs),
(361.068,442,o),
(431,355.341,o),
(431,235,cs),
(431,83.821,o),
(324.177,20,o),
(250,20,cs)
);
},
{
closed = 1;
nodes = (
(118.791,522,o),
(145.735,547,o),
(187,547,cs),
(225.662,547,o),
(268.294,523,o),
(324,523,cs),
(376.947,523,o),
(426,542.797,o),
(426,568,cs),
(426,577.333,o),
(419.667,585,o),
(413,585,cs),
(409.667,585,o),
(406.167,584.167,o),
(402.5,582.5,cs),
(398.833,580.833,o),
(392.333,577.333,o),
(383,572,cs),
(360.333,560.667,o),
(340.333,555,o),
(323,555,cs),
(283.599,555,o),
(222.495,583,o),
(186,583,cs),
(161.333,583,o),
(138.667,577,o),
(118,565,cs),
(98.667,553.667,o),
(89,544.333,o),
(89,537,cs),
(89,530.333,o),
(96.333,522,o),
(103,522,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 1 5 7 91 10 1 2 2 1 83 0 1 1 23 67 0 3 3 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
6 1 4 0 8 7 4 8 91 0 5 9 1 7 1 5 7 91 0 1 10 1 2 3 1 2 91 0 3 3 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
21 20 73 71 68 66 63 61 55 53 50 48 45 43 31 29 20 39 21 39 40 36 11 17
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = otilde;
unicode = 245;
},
{
glyphname = oe;
kernLeft = c;
kernRight = ae;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(559.401,235,o),
(608.271,236,o),
(642,236,cs),
(678,236,o),
(712.5,236,o),
(745.5,236,cs),
(778.5,236,o),
(806,236.333,o),
(828,237,cs),
(853.333,238.333,o),
(869,269.333,o),
(869,304,cs),
(869,357.333,o),
(813.002,477,o),
(637,477,cs),
(558.834,477,o),
(487.847,458.694,o),
(447,377,c),
(415.001,432.997,o),
(370.338,472,o),
(273,472,cs),
(113.53,472,o),
(26,368.651,o),
(26,228,cs),
(26,80.334,o),
(123.649,-11,o),
(267,-11,cs),
(318.601,-11,o),
(393.227,-3.999,o),
(442,80,c),
(480.667,10.667,o),
(540.333,-11,o),
(627,-11,cs),
(729.353,-11,o),
(801.56,21.398,o),
(837.5,63.5,cs),
(873.916,106.158,o),
(883,142.715,o),
(883,166,cs),
(883,182.926,o),
(875.833,211,o),
(841,211,cs),
(822.333,211,o),
(795,204.333,o),
(795,171,cs),
(795,110.272,o),
(720.556,69,o),
(654,69,cs),
(567.258,69,o),
(520,133.502,o),
(520,196,cs),
(520,206.667,o),
(520.667,220.333,o),
(522,235,c)
);
},
{
closed = 1;
nodes = (
(362.697,394,o),
(424,334.644,o),
(424,236,cs),
(424,105.169,o),
(339.994,68,o),
(279,68,cs),
(205.922,68,o),
(122,122.382,o),
(122,233,cs),
(122,337.174,o),
(196.845,394,o),
(279,394,cs)
);
},
{
closed = 1;
nodes = (
(534.099,353.495,o),
(593.98,395,o),
(659,395,cs),
(720.437,395,o),
(772,360.37,o),
(772,332,cs),
(772,322,o),
(767.333,317,o),
(758,317,cs),
(526,313,l),
(526,313,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
51 1 9 7 31 1 0 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 6 0 6 1 0 104 13 1 9 11 1 6 1 9 6 91 10 12 2 7 7 4 83 5 1 4 4 23 67 8 1 0 0 2 83 3 1 2 2 24 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 6 0 6 1 0 104 5 1 4 10 12 2 7 9 4 7 91 13 1 9 11 1 6 1 9 6 91 8 1 0 0 2 83 3 1 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 6 0 6 1 0 104 0 5 4 7 5 79 0 4 10 12 2 7 9 4 7 91 13 1 9 11 1 6 1 9 6 91 8 1 0 0 2 83 3 1 2 2 24 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
93 92 73 72 0 0 100 98 92 104 93 104 83 81 72 91 73 91 0 71 0 63 40 40 38 42 38 39 14 21
CALL[ ]	/* CallFunction */";
};
width = 904;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(548.1,244,o),
(605.07,245,o),
(645,245,cs),
(677,245,o),
(708.333,245,o),
(739,245,cs),
(769.667,245,o),
(795.333,245.333,o),
(816,246,cs),
(837.333,247.333,o),
(851,276,o),
(851,304,cs),
(851,357.019,o),
(796.368,477,o),
(640,477,cs),
(560,477,o),
(487.333,446.333,o),
(450,365,c),
(419.333,429,o),
(366.333,472,o),
(269,472,cs),
(118.205,472,o),
(29,367.064,o),
(29,229,cs),
(29,83.154,o),
(127.268,-11,o),
(259,-11,cs),
(322.033,-11,o),
(400.667,10.549,o),
(445,94,c),
(479.667,22,o),
(541,-11,o),
(633,-11,cs),
(804.827,-11,o),
(865,106.777,o),
(865,174,cs),
(865,188.667,o),
(862.333,209,o),
(833,209,cs),
(800,209,o),
(801,184.793,o),
(801,177,cs),
(795.639,107.313,o),
(733.932,51,o),
(648,51,cs),
(545.432,51,o),
(502,132.467,o),
(502,204,cs),
(502,214.667,o),
(502.667,229.333,o),
(504,244,c)
);
},
{
closed = 1;
nodes = (
(362.538,412,o),
(427,341.391,o),
(427,232,cs),
(427,104.444,o),
(337.964,50,o),
(267,50,cs),
(192.335,50,o),
(104,107.997,o),
(104,232,cs),
(104,347.008,o),
(182.939,412,o),
(271,412,cs)
);
},
{
closed = 1;
nodes = (
(519.165,359.827,o),
(572.759,414,o),
(652,414,cs),
(729.933,414,o),
(776,361.933,o),
(776,324,cs),
(776,316,o),
(774.333,308,o),
(761,308,cs),
(508,304,l),
(508,304,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
47 1 9 7 29 13 2 0 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 6 0 6 1 0 104 13 1 9 11 1 6 1 9 6 91 10 12 2 7 7 4 83 5 1 4 4 23 67 8 1 0 0 2 83 3 1 2 2 24 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 6 0 6 1 0 104 5 1 4 10 12 2 7 9 4 7 91 13 1 9 11 1 6 1 9 6 91 8 1 0 0 2 83 3 1 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 6 0 6 1 0 104 0 5 4 7 5 79 0 4 10 12 2 7 9 4 7 91 13 1 9 11 1 6 1 9 6 91 8 1 0 0 2 83 3 1 2 2 24 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
87 86 67 66 0 0 95 93 86 99 87 99 77 75 66 85 67 85 0 65 0 57 36 40 38 38 40 39 14 21
CALL[ ]	/* CallFunction */";
};
width = 888;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(323.392,-11,o),
(408.666,31.955,o),
(449,118,c),
(478.333,39.333,o),
(542,-11,o),
(642,-11,cs),
(753.238,-11,o),
(839,80.726,o),
(839,187,cs),
(839,199,o),
(833.333,205,o),
(822,205,cs),
(810.667,205,o),
(805,199,o),
(805,187,cs),
(805,100.906,o),
(748.468,21,o),
(640,21,cs),
(519.956,21,o),
(476,121.555,o),
(476,218,cs),
(476,230,o),
(476.667,244.333,o),
(478,259,c),
(530.605,259,o),
(600.073,260,o),
(649,260,cs),
(675.667,260,o),
(701.5,260,o),
(726.5,260,cs),
(751.5,260,o),
(772.667,260.333,o),
(790,261,cs),
(814,262.333,o),
(825,282.667,o),
(825,304,cs),
(825,359.427,o),
(770.596,477,o),
(645,477,cs),
(561,477,o),
(488.667,426.333,o),
(454,345,c),
(423.333,419.667,o),
(360,472,o),
(264,472,cs),
(130.561,472,o),
(33,370.147,o),
(33,230,cs),
(33,93.164,o),
(126.605,-11,o),
(248,-11,cs)
);
},
{
closed = 1;
nodes = (
(172.347,20,o),
(78,89.962,o),
(78,231,cs),
(78,364.255,o),
(163.017,442,o),
(259,442,cs),
(361.667,442,o),
(431,363.333,o),
(431,226,cs),
(431,88.02,o),
(322.515,20,o),
(250,20,cs)
);
},
{
closed = 1;
nodes = (
(495.337,363.686,o),
(543.119,445,o),
(642,445,cs),
(740.682,445,o),
(782,364.324,o),
(782,311,cs),
(782,299,o),
(776.333,293,o),
(765,293,cs),
(482,289,l),
(482,289,l),
(482,289,l),
(482,289,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
43 1 9 7 25 1 0 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 6 0 6 1 0 104 13 1 9 11 1 6 1 9 6 91 10 12 2 7 7 4 83 5 1 4 4 23 67 8 1 0 0 2 83 3 1 2 2 24 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 6 0 6 1 0 104 5 1 4 10 12 2 7 9 4 7 91 13 1 9 11 1 6 1 9 6 91 8 1 0 0 2 83 3 1 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 6 0 6 1 0 104 0 5 4 7 5 79 0 4 10 12 2 7 9 4 7 91 13 1 9 11 1 6 1 9 6 91 8 1 0 0 2 83 3 1 2 2 24 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
81 80 63 62 0 0 88 86 80 92 81 92 73 71 62 79 63 79 0 61 0 53 36 40 38 37 37 39 14 21
CALL[ ]	/* CallFunction */";
};
width = 865;
}
);
note = oe;
unicode = 339;
},
{
glyphname = p;
kernLeft = p;
kernRight = c_p;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(182,443.667,o),
(175.667,449,o),
(157,449,cs),
(22.518,449,o),
(-22,439.284,o),
(-22,408,cs),
(-22,386.258,o),
(7.004,377,o),
(30,377,cs),
(56,377,ls),
(88,377,o),
(90,373.667,o),
(90,355,cs),
(90,283.611,o),
(94,263.99,o),
(94,124,cs),
(94,54.298,o),
(91,-31.342,o),
(91,-86,cs),
(91,-104,o),
(90.333,-115,o),
(89,-119,cs),
(87.667,-123,o),
(84.667,-125.333,o),
(80,-126,cs),
(44,-134,o),
(17,-139.333,o),
(17,-166,cs),
(17,-192.667,o),
(35.333,-202,o),
(62,-202,cs),
(267,-202,ls),
(293.667,-202,o),
(314,-195.333,o),
(314,-170,cs),
(314,-138,o),
(281.667,-126,o),
(247,-126,cs),
(182,-126,l),
(182,68,l),
(200.018,34.537,o),
(240.319,-11,o),
(330,-11,cs),
(398.374,-11,o),
(536,46.341,o),
(536,238,cs),
(536,347.331,o),
(492.002,471,o),
(356,471,cs),
(267.874,471,o),
(217.457,419.642,o),
(182,346,c),
(182,413,l),
(182,413,l)
);
},
{
closed = 1;
nodes = (
(181,322.63,o),
(252.721,391,o),
(323,391,cs),
(411.871,391,o),
(441,316.198,o),
(441,240,cs),
(441,106.268,o),
(367.18,67,o),
(312,67,cs),
(229.333,67,o),
(181,131,o),
(181,219,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
20 0 2 6 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 5 5 15 67 7 1 4 4 0 83 0 0 0 23 67 0 6 6 1 83 0 1 1 24 67 0 2 2 3 84 0 3 3 17 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 4 7 6 7 4 6 104 0 5 5 15 67 0 7 7 0 83 0 0 0 23 67 0 6 6 1 83 0 1 1 24 67 0 2 2 3 84 0 3 3 17 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 5 0 7 0 5 7 104 0 4 7 6 7 4 6 104 0 0 0 7 4 0 7 91 0 2 0 3 2 3 88 0 6 6 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
80 78 70 68 63 61 53 50 52 37 40 36 8 19
CALL[ ]	/* CallFunction */";
};
width = 564;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(177,443.667,o),
(170.667,449,o),
(152,449,cs),
(49.528,449,o),
(-20,445.248,o),
(-20,418,cs),
(-20,398.57,o),
(16.199,397,o),
(30,397,cs),
(72,397,ls),
(100,397,o),
(106,396.333,o),
(106,375,cs),
(106,300.64,o),
(110,266.127,o),
(110,124,cs),
(110,54.298,o),
(107,-31.342,o),
(107,-86,cs),
(107,-135.872,o),
(109.527,-142.123,o),
(75,-145,cs),
(40.333,-149,o),
(19,-160,o),
(19,-180,cs),
(19,-201.333,o),
(39,-202,o),
(47,-202,cs),
(272,-202,ls),
(282.667,-202,o),
(302,-197.667,o),
(302,-179,cs),
(302,-156.333,o),
(276.667,-144,o),
(242,-144,cs),
(177,-144,l),
(177,68,l),
(195.018,34.537,o),
(235.319,-11,o),
(325,-11,cs),
(393.374,-11,o),
(531,46.341,o),
(531,238,cs),
(531,336.572,o),
(497.146,471,o),
(347,471,cs),
(280.333,471,o),
(211.667,427.333,o),
(177,346,c),
(177,413,l),
(177,413,l)
);
},
{
closed = 1;
nodes = (
(176,345.369,o),
(269.424,410,o),
(343,410,cs),
(441.625,410,o),
(457,304.812,o),
(457,240,cs),
(457,88.505,o),
(372.777,49,o),
(322,49,cs),
(206.52,49,o),
(176,129.193,o),
(176,219,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
18 0 2 6 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 7 7 0 83 0 0 0 23 67 0 4 4 5 83 0 5 5 15 67 0 6 6 1 83 0 1 1 24 67 0 2 2 3 83 0 3 3 17 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 7 4 0 7 91 0 5 0 4 6 5 4 91 0 6 6 1 83 0 1 1 24 67 0 2 2 3 83 0 3 3 17 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 0 0 7 4 0 7 91 0 5 0 4 6 5 4 91 0 2 0 3 2 3 87 0 6 6 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
82 80 72 70 63 60 54 50 52 37 40 34 8 19
CALL[ ]	/* CallFunction */";
};
width = 562;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(265,-202,ls),
(275.667,-202,o),
(285,-198.333,o),
(285,-189,cs),
(285,-185.667,o),
(281,-182.333,o),
(273,-179,cs),
(265,-175.667,o),
(252.333,-174,o),
(235,-174,cs),
(170,-174,l),
(170,68,l),
(188.018,34.537,o),
(228.319,-11,o),
(318,-11,cs),
(386.374,-11,o),
(524,46.341,o),
(524,238,cs),
(524,336.572,o),
(490.146,471,o),
(340,471,cs),
(273.333,471,o),
(204.667,427.333,o),
(170,346,c),
(170,413,ls),
(170,443.667,o),
(163.667,449,o),
(145,449,cs),
(36.732,449,o),
(-17,443.586,o),
(-17,427,cs),
(-17,417.667,o),
(8.333,417,o),
(23,417,cs),
(95,417,ls),
(123,417,o),
(129,415,o),
(129,375,cs),
(129,300.64,o),
(133,266.127,o),
(133,124,cs),
(133,54.298,o),
(130,-31.342,o),
(130,-86,cs),
(130,-162.179,o),
(135.134,-172.081,o),
(68,-175,cs),
(50.667,-176.333,o),
(38.667,-178.167,o),
(32,-180.5,cs),
(25.333,-182.833,o),
(22,-186,o),
(22,-190,cs),
(22,-200.667,o),
(32,-202,o),
(40,-202,cs)
);
},
{
closed = 1;
nodes = (
(198.977,19,o),
(169,113.79,o),
(169,219,cs),
(169,368.628,o),
(264.875,440,o),
(336,440,cs),
(458.96,440,o),
(480,318.502,o),
(480,240,cs),
(480,71.809,o),
(385.293,19,o),
(315,19,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
18 0 2 7 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 8 8 0 83 0 0 0 23 67 0 5 5 6 83 0 6 6 15 67 0 7 7 1 83 0 1 1 24 67 4 1 2 2 3 83 0 3 3 17 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 0 8 5 0 8 91 0 6 0 5 7 6 5 91 0 7 7 1 83 0 1 1 24 67 4 1 2 2 3 83 0 3 3 17 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 0 8 5 0 8 91 0 6 0 5 7 6 5 91 4 1 2 0 3 2 3 87 0 7 7 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
80 78 70 68 61 58 53 50 21 52 37 40 34 9 20
CALL[ ]	/* CallFunction */";
};
width = 559;
}
);
note = p;
unicode = 112;
},
{
glyphname = thorn;
kernLeft = b;
kernRight = b;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(155,800.319,o),
(145.956,818,o),
(129,818,cs),
(39,818,ls),
(3.813,818,o),
(-52,809.124,o),
(-52,775,cs),
(-52,741.673,o),
(-19.344,739,o),
(1,739,cs),
(25,739,ls),
(54.333,739,o),
(63,729.333,o),
(63,712,cs),
(63,670.268,o),
(64,595.89,o),
(64,498,cs),
(64,358.667,o),
(62.5,239.167,o),
(59.5,139.5,cs),
(56.5,39.833,o),
(55,-40.333,o),
(55,-101,cs),
(55,-126.333,o),
(51.833,-142.333,o),
(45.5,-149,cs),
(39.167,-155.667,o),
(32,-159,o),
(24,-159,cs),
(-1.333,-159,o),
(-14,-170,o),
(-14,-192,cs),
(-14,-226.667,o),
(7.667,-235,o),
(45,-235,cs),
(53.637,-235,o),
(81.293,-232,o),
(128,-232,cs),
(129.765,-232,o),
(167.755,-235,o),
(242,-235,cs),
(258,-235,o),
(283,-225.667,o),
(283,-199,cs),
(283,-166.99,o),
(242.876,-158,o),
(211,-158,cs),
(146,-158,l),
(146,36,l),
(172.209,13.067,o),
(192.581,-9,o),
(267,-9,cs),
(394.788,-9,o),
(505,48.691,o),
(505,220,cs),
(505,325.191,o),
(465.103,458,o),
(301,458,cs),
(245,458,o),
(192.333,430,o),
(155,366,c),
(155,734,l),
(155,734,l)
);
},
{
closed = 1;
nodes = (
(154,303.923,o),
(199.642,379,o),
(291,379,cs),
(358.793,379,o),
(411,337.531,o),
(411,218,cs),
(411,93.36,o),
(335.971,70,o),
(269,70,cs),
(210.249,70,o),
(154,114.083,o),
(154,214,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 1 7 8 18 1 1 7 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 5 5 6 83 0 6 6 14 67 0 8 8 0 83 0 0 0 23 67 0 7 7 1 83 0 1 1 24 67 4 1 2 2 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 8 7 0 8 91 4 1 2 0 3 2 3 87 0 5 5 6 83 0 6 6 14 67 0 7 7 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
40 41 56 60 35 198 37 40 34 9 24
CALL[ ]	/* CallFunction */";
};
width = 533;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(136,806.934,o),
(125.771,818,o),
(110,818,cs),
(20,818,ls),
(4.181,818,o),
(-64,815.303,o),
(-64,788,cs),
(-64,757,o),
(-29.025,757,o),
(-8,757,cs),
(20,757,ls),
(50,757,o),
(65,748,o),
(65,730,cs),
(65,685.635,o),
(66,603.759,o),
(66,498,cs),
(66,354.667,o),
(64.5,231.667,o),
(61.5,129,cs),
(58.5,26.333,o),
(57,-56.333,o),
(57,-119,cs),
(57,-170.544,o),
(43.455,-171.136,o),
(24,-176,c),
(10.966,-189.034,o),
(-26,-174.352,o),
(-26,-209,cs),
(-26,-218.333,o),
(-22,-225,o),
(-14,-229,cs),
(-6,-233,o),
(7.333,-235,o),
(26,-235,cs),
(34.637,-235,o),
(62.293,-232,o),
(109,-232,cs),
(110.765,-232,o),
(148.755,-235,o),
(223,-235,cs),
(225.7,-235,o),
(257,-228.284,o),
(257,-208,cs),
(257,-179.725,o),
(209.796,-176,o),
(192,-176,cs),
(127,-176,l),
(127,48,l),
(151.852,20.042,o),
(177.865,-9,o),
(255,-9,cs),
(368.945,-9,o),
(486,48.729,o),
(486,220,cs),
(486,319.868,o),
(446.991,458,o),
(294,458,cs),
(230,458,o),
(173.333,423.333,o),
(136,354,c),
(136,752,l),
(136,752,l)
);
},
{
closed = 1;
nodes = (
(135,308.748,o),
(193.812,397,o),
(285,397,cs),
(349,397,o),
(413,355.667,o),
(413,225,cs),
(413,81.016,o),
(319.897,52,o),
(256,52,cs),
(192.074,52,o),
(135,89.724,o),
(135,182,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 1 6 7 18 1 1 6 48 1 2 1 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 4 5 83 0 5 5 14 67 0 7 7 0 83 0 0 0 23 67 0 6 6 1 83 0 1 1 24 67 0 2 2 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 0 0 7 6 0 7 91 0 4 4 5 83 0 5 5 14 67 0 6 6 1 83 0 1 1 24 67 0 2 2 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 0 0 7 6 0 7 91 0 2 0 3 2 3 87 0 4 4 5 83 0 5 5 14 67 0 6 6 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
97 95 87 85 76 72 66 62 199 53 40 34 8 19
CALL[ ]	/* CallFunction */";
};
width = 517;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(7.637,-235,o),
(35.293,-232,o),
(82,-232,cs),
(83.765,-232,o),
(121.755,-235,o),
(196,-235,cs),
(199.124,-235,o),
(220,-234.599,o),
(220,-223,cs),
(220,-208.317,o),
(171.65,-206,o),
(165,-206,cs),
(100,-206,l),
(100,68,l),
(121.863,29.739,o),
(162.616,-9,o),
(238,-9,cs),
(336.638,-9,o),
(459,50.914,o),
(459,220,cs),
(459,323.713,o),
(414.367,458,o),
(284,458,cs),
(208,458,o),
(146.333,414,o),
(109,334,c),
(109,782,ls),
(109,799.333,o),
(106.167,809.667,o),
(100.5,813,cs),
(94.833,816.333,o),
(89,818,o),
(83,818,cs),
(-7,818,ls),
(-3.923,818,o),
(-81,818.65,o),
(-81,799,cs),
(-81,793.667,o),
(-76.167,790.333,o),
(-66.5,789,cs),
(-56.833,787.667,o),
(-46.333,787,o),
(-35,787,cs),
(23,787,ls),
(52.333,787,o),
(68,780,o),
(68,760,cs),
(68,708.244,o),
(69,617.107,o),
(69,498,cs),
(69,346.667,o),
(67.5,217.5,o),
(64.5,110.5,cs),
(61.5,3.5,o),
(60,-83,o),
(60,-149,cs),
(60,-200.918,o),
(48.718,-202.38,o),
(27,-206,cs),
(9.528,-209.883,o),
(-43,-205.235,o),
(-43,-224,cs),
(-43,-227.333,o),
(-40.667,-230,o),
(-36,-232,cs),
(-31.333,-234,o),
(-19.667,-235,o),
(-1,-235,cs)
);
},
{
closed = 1;
nodes = (
(131.57,22,o),
(108,104.078,o),
(108,182,cs),
(108,317.385,o),
(187.643,427,o),
(277,427,cs),
(336.796,427,o),
(416,372.296,o),
(416,225,cs),
(416,63.697,o),
(313.579,22,o),
(238,22,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
18 0 2 7 8 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 5 5 6 83 0 6 6 14 67 0 8 8 0 83 0 0 0 23 67 0 7 7 1 83 0 1 1 24 67 4 1 2 2 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 0 0 8 7 0 8 91 0 5 5 6 83 0 6 6 14 67 0 7 7 1 83 0 1 1 24 67 4 1 2 2 3 83 0 3 3 25 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 8 7 0 8 91 4 1 2 0 3 2 3 87 0 5 5 6 83 0 6 6 14 67 0 7 7 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
94 92 84 82 75 71 66 63 21 214 53 40 34 9 20
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = thorn;
unicode = 254;
},
{
glyphname = q;
kernLeft = q;
kernRight = q;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(366.333,420,o),
(318,454,o),
(238,454,cs),
(138.518,454,o),
(28,376.143,o),
(28,217,cs),
(28,83.916,o),
(102.542,-10,o),
(219,-10,cs),
(297.667,-10,o),
(351.333,31.667,o),
(370,81,c),
(370,-50,ls),
(370,-73.333,o),
(369.333,-89.333,o),
(368,-98,cs),
(366.667,-106.667,o),
(363.667,-112.667,o),
(359,-116,cs),
(352.546,-122.454,o),
(331.007,-124.789,o),
(289,-127,cs),
(254.333,-128.333,o),
(238,-138.333,o),
(238,-165,cs),
(238,-187.667,o),
(255.333,-203,o),
(278,-203,cs),
(502,-203,ls),
(530,-203,o),
(539,-180.667,o),
(539,-162,cs),
(539,-146,o),
(525.667,-126,o),
(487,-126,cs),
(462,-126,l),
(462,-81.74,o),
(460,-12.88,o),
(460,37,cs),
(460,104.802,o),
(459,196.472,o),
(459,270,cs),
(459,287.333,o),
(466.333,308.333,o),
(477,327,cs),
(487.667,344.333,o),
(501.667,360,o),
(519,376,cs),
(532.333,388,o),
(544,401.667,o),
(544,423,cs),
(544,445.667,o),
(532.667,457,o),
(510,457,cs),
(465.343,457,o),
(447.928,412.301,o),
(413,372,c)
);
},
{
closed = 1;
nodes = (
(166.215,68,o),
(122,142.999,o),
(122,214,cs),
(122,285.255,o),
(156.867,376,o),
(243,376,cs),
(339.731,376,o),
(377,311.288,o),
(377,245,cs),
(377,152.202,o),
(327.574,68,o),
(246,68,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
49 0 2 6 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 7 7 0 83 5 1 0 0 23 67 8 1 6 6 4 83 0 4 4 24 67 3 1 1 1 2 84 0 2 2 17 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
5 1 0 0 7 6 0 7 91 3 1 1 0 2 1 2 88 8 1 6 6 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
66 65 76 74 65 84 66 84 63 61 53 51 41 39 35 32 28 26 36 9 16
CALL[ ]	/* CallFunction */";
};
width = 537;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(374.143,413.476,o),
(318.322,453,o),
(241,453,cs),
(141.518,453,o),
(31,375.143,o),
(31,216,cs),
(31,82.916,o),
(105.542,-11,o),
(222,-11,cs),
(300.667,-11,o),
(354.333,30.667,o),
(373,80,c),
(373,-68,ls),
(373,-91.333,o),
(372.333,-107.333,o),
(371,-116,cs),
(369.667,-124.667,o),
(366.667,-130.667,o),
(362,-134,cs),
(357.333,-137.333,o),
(350.167,-139.667,o),
(340.5,-141,cs),
(330.833,-142.333,o),
(314.667,-143.667,o),
(292,-145,cs),
(265.333,-146.333,o),
(248,-152.667,o),
(248,-174,cs),
(248,-191.333,o),
(261,-203,o),
(281,-203,cs),
(496,-203,ls),
(520,-203,o),
(529,-187.667,o),
(529,-173,cs),
(529,-166.333,o),
(525.167,-159.833,o),
(517.5,-153.5,cs),
(509.833,-147.167,o),
(496.333,-144,o),
(477,-144,cs),
(444,-144,l),
(444,-94.83,o),
(442,-18.773,o),
(442,36,cs),
(442,87.504,o),
(444,155.968,o),
(444,281,cs),
(444,299.667,o),
(443.333,325,o),
(450,337,cs),
(458,354.333,o),
(474.333,354.333,o),
(505,357,cs),
(522.333,358.333,o),
(532,370.333,o),
(532,385,cs),
(532,397,o),
(523.667,411,o),
(501,411,cs),
(466.333,411,o),
(436.667,400.333,o),
(406,371,c)
);
},
{
closed = 1;
nodes = (
(145.966,49,o),
(104,133.143,o),
(104,213,cs),
(104,289.802,o),
(140.258,393,o),
(244,393,cs),
(348.723,393,o),
(383,315.377,o),
(383,241,cs),
(383,147.135,o),
(337.77,49,o),
(240,49,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
46 0 2 6 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 0 5 7 5 0 7 104 0 7 7 5 83 0 5 5 15 67 8 1 6 6 4 83 0 4 4 24 67 3 1 1 1 2 84 0 2 2 17 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 0 5 7 5 0 7 104 0 5 0 7 6 5 7 91 8 1 6 6 4 83 0 4 4 24 67 3 1 1 1 2 84 0 2 2 17 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 0 5 7 5 0 7 104 0 5 0 7 6 5 7 91 3 1 1 0 2 1 2 88 8 1 6 6 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
65 64 75 73 64 83 65 83 60 58 50 48 40 38 34 31 27 25 34 9 16
CALL[ ]	/* CallFunction */";
};
width = 524;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(496,-203,ls),
(514,-203,o),
(523,-199,o),
(523,-191,cs),
(523,-187,o),
(519.167,-183.167,o),
(511.5,-179.5,cs),
(503.833,-175.833,o),
(490.333,-174,o),
(471,-174,cs),
(418,-174,l),
(418,-117.283,o),
(416,-28.297,o),
(416,36,cs),
(416,79.947,o),
(417.692,168.31,o),
(423,301,cs),
(424.333,330.333,o),
(424.333,338.667,o),
(435,352,cs),
(453.505,375.792,o),
(500.51,373.628,o),
(510,376,cs),
(520.667,378,o),
(526,383,o),
(526,391,cs),
(526,401.667,o),
(520,411,o),
(500,411,cs),
(470.667,411,o),
(429.333,389.667,o),
(396,371,c),
(384.404,405.787,o),
(319.561,453,o),
(245,453,cs),
(145.518,453,o),
(35,375.143,o),
(35,216,cs),
(35,82.916,o),
(109.542,-11,o),
(226,-11,cs),
(304.667,-11,o),
(358.333,30.667,o),
(377,80,c),
(377,-98,ls),
(377,-121.333,o),
(376.333,-137.333,o),
(375,-146,cs),
(373.667,-154.667,o),
(370.667,-160.667,o),
(366,-164,cs),
(361.333,-167.333,o),
(354.167,-169.667,o),
(344.5,-171,cs),
(334.833,-172.333,o),
(318.667,-173.667,o),
(296,-175,cs),
(278.667,-176.333,o),
(262,-177,o),
(262,-189,cs),
(262,-198.333,o),
(269.667,-203,o),
(285,-203,cs)
);
},
{
closed = 1;
nodes = (
(117.247,19,o),
(78,118.925,o),
(78,213,cs),
(78,300.464,o),
(111.244,423,o),
(246,423,cs),
(364.185,423,o),
(387,327.254,o),
(387,241,cs),
(387,135.585,o),
(353.383,19,o),
(231,19,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
45 0 2 7 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 0 0 1 7 0 1 91 0 8 8 6 83 0 6 6 15 67 9 1 7 7 5 83 0 5 5 24 67 4 1 2 2 3 83 0 3 3 17 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 6 0 8 0 6 8 91 0 0 0 1 7 0 1 91 9 1 7 7 5 83 0 5 5 24 67 4 1 2 2 3 83 0 3 3 17 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 6 0 8 0 6 8 91 0 0 0 1 7 0 1 91 4 1 2 0 3 2 3 87 9 1 7 7 5 83 0 5 5 24 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
64 63 74 72 63 82 64 82 59 57 49 47 39 38 34 31 28 26 21 34 10 17
CALL[ ]	/* CallFunction */";
};
width = 518;
}
);
note = q;
unicode = 113;
},
{
glyphname = r;
kernLeft = r;
kernRight = r;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(436,410.845,o),
(362.869,439,o),
(312,439,cs),
(258.667,439,o),
(218.667,409.333,o),
(188,364,c),
(188,413,ls),
(188,447.667,o),
(178.667,451,o),
(144,451,cs),
(88.667,451,o),
(49.833,448,o),
(27.5,442,cs),
(5.167,436,o),
(-6,426,o),
(-6,412,cs),
(-6,384.501,o),
(28.812,379,o),
(49,379,cs),
(79,379,ls),
(89,379,o),
(94,374.333,o),
(94,365,cs),
(94,248.707,o),
(93,154.972,o),
(93,118,cs),
(91.667,88.667,o),
(72.333,84.333,o),
(51,79,cs),
(28.333,73.667,o),
(22,59.333,o),
(22,42,cs),
(22,22,o),
(31,0,o),
(63,0,cs),
(102.99,0,o),
(120.325,3,o),
(163,3,cs),
(183,3,o),
(203.5,2.5,o),
(224.5,1.5,cs),
(245.5,0.5,o),
(266.667,0,o),
(288,0,cs),
(312.667,0,o),
(325,11.667,o),
(325,35,cs),
(325,50.333,o),
(318,61.5,o),
(304,68.5,cs),
(290,75.5,o),
(265.667,79,o),
(231,79,cs),
(183,79,l),
(183,195,ls),
(183,316.596,o),
(263.847,370,o),
(311,370,cs),
(336.333,370,o),
(356,357.667,o),
(356,335,cs),
(356,298.861,o),
(304,306.581,o),
(304,264,cs),
(304,233.333,o),
(331.333,222,o),
(358,222,cs),
(416.625,222,o),
(436,278.058,o),
(436,323,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
65 1 0 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 1 2 1 0 2 104 4 1 1 1 5 83 6 1 5 5 15 67 0 2 2 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 0 1 2 1 0 2 104 0 5 6 1 5 79 0 6 4 1 1 0 6 1 91 0 2 2 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 1 2 1 0 2 104 0 5 0 4 1 5 4 91 0 6 0 1 0 6 1 91 0 2 2 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
37 38 62 163 37 41 36 7 22
CALL[ ]	/* CallFunction */";
};
width = 453;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(414,387.523,o),
(366.424,434,o),
(302,434,cs),
(255.333,434,o),
(213,410.667,o),
(181,364,c),
(181,413,ls),
(181,447.667,o),
(171.667,451,o),
(137,451,cs),
(44.502,451,o),
(-6,439.94,o),
(-6,423,cs),
(-6,417.667,o),
(-1.833,412.5,o),
(6.5,407.5,cs),
(14.833,402.5,o),
(27.333,400,o),
(44,400,cs),
(93,400,ls),
(103,400,o),
(108,395.333,o),
(108,386,cs),
(108,250.223,o),
(105.69,129.969,o),
(103,95,cs),
(101.667,76.333,o),
(95,65,o),
(63,61,cs),
(40.333,58.333,o),
(31,42.667,o),
(31,28,cs),
(31,13.333,o),
(41.667,0,o),
(63,0,cs),
(94.04,0,o),
(124.947,3,o),
(156,3,cs),
(168.932,3,o),
(253.286,0,o),
(294,0,cs),
(314,0,o),
(324,9,o),
(324,27,cs),
(324,38.333,o),
(317,46.833,o),
(303,52.5,cs),
(289,58.167,o),
(264.667,61,o),
(230,61,cs),
(176,61,l),
(176,213,ls),
(176,334.558,o),
(249.114,373,o),
(296,373,cs),
(322.667,373,o),
(342,364.333,o),
(342,339,cs),
(342,307.724,o),
(299,327.038,o),
(299,285,cs),
(299,258.333,o),
(322.333,246,o),
(345,246,cs),
(396.513,246,o),
(414,290.927,o),
(414,336,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
67 1 0 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 0 1 2 1 0 2 104 0 4 4 5 83 0 5 5 15 67 0 1 1 6 83 0 6 6 15 67 0 2 2 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 1 2 1 0 2 104 0 5 0 4 1 5 4 91 0 6 0 1 0 6 1 91 0 2 2 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
37 53 62 195 37 41 36 7 22
CALL[ ]	/* CallFunction */";
};
width = 429;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(69.667,0,o),
(85,0.5,o),
(99,1.5,cs),
(113,2.5,o),
(128.667,3,o),
(146,3,cs),
(154.055,3,o),
(240.415,0,o),
(284,0,cs),
(293.333,0,o),
(304,5,o),
(304,13,cs),
(304,18.333,o),
(297,22.667,o),
(283,26,cs),
(269,29.333,o),
(244.667,31,o),
(210,31,cs),
(166,31,l),
(166,243,ls),
(166,364.558,o),
(239.114,403,o),
(286,403,cs),
(312.667,403,o),
(332,391.667,o),
(332,369,cs),
(332,338.204,o),
(291,342.803,o),
(291,308,cs),
(291,289.333,o),
(302.333,276,o),
(325,276,cs),
(363.635,276,o),
(374,315.161,o),
(374,349,cs),
(374,409,o),
(341.333,434,o),
(292,434,cs),
(245.333,434,o),
(203,410.667,o),
(171,364,c),
(171,413,ls),
(171,447.667,o),
(161.667,451,o),
(127,451,cs),
(68.839,451,o),
(-6,443.658,o),
(-6,433,cs),
(-6,429,o),
(0.667,420,o),
(14,420,cs),
(113,420,ls),
(123,420,o),
(128,415.333,o),
(128,406,cs),
(128,294,o),
(127.5,217.5,o),
(125.5,163.5,cs),
(123.5,109.5,o),
(122,78.333,o),
(118,57,cs),
(114,34.333,o),
(113,32.333,o),
(89,31,cs),
(71.667,29.667,o),
(57.667,27.333,o),
(47,24,cs),
(36.333,20.667,o),
(31,17,o),
(31,13,cs),
(31,6.333,o),
(42.333,0,o),
(53,0,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
66 1 0 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 0 1 2 1 0 96 0 6 6 7 83 0 7 7 15 67 0 1 1 8 83 0 8 8 15 67 5 1 2 2 3 83 4 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 0 1 2 1 0 2 104 0 6 6 7 83 0 7 7 15 67 0 1 1 8 83 0 8 8 15 67 5 1 2 2 3 83 4 1 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 0 1 2 1 0 2 104 0 7 0 6 1 7 6 91 0 8 0 1 0 8 1 91 5 1 2 2 3 83 4 1 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
37 53 56 21 33 116 37 41 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 395;
}
);
note = r;
unicode = 114;
},
{
glyphname = racute;
kernLeft = r;
kernRight = r;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(346,665.333,o),
(318.667,686.667,o),
(276,688,cs),
(250.667,688,o),
(220,649.167,o),
(196,608.5,cs),
(175.511,573.783,o),
(154,526.988,o),
(154,522,cs),
(154,507.333,o),
(176.333,500,o),
(191,500,cs),
(208.099,500,o),
(243.389,522.679,o),
(282,557,cs),
(316.627,587.78,o),
(346,622.341,o),
(346,640,cs)
);
},
{
closed = 1;
nodes = (
(436,410.845,o),
(362.869,439,o),
(312,439,cs),
(258.667,439,o),
(218.667,409.333,o),
(188,364,c),
(188,413,ls),
(188,447.667,o),
(178.667,451,o),
(144,451,cs),
(88.667,451,o),
(49.833,448,o),
(27.5,442,cs),
(5.167,436,o),
(-6,426,o),
(-6,412,cs),
(-6,384.501,o),
(28.812,379,o),
(49,379,cs),
(79,379,ls),
(89,379,o),
(94,374.333,o),
(94,365,cs),
(94,248.707,o),
(93,154.972,o),
(93,118,cs),
(91.667,88.667,o),
(72.333,84.333,o),
(51,79,cs),
(28.333,73.667,o),
(22,59.333,o),
(22,42,cs),
(22,22,o),
(31,0,o),
(63,0,cs),
(102.99,0,o),
(120.325,3,o),
(163,3,cs),
(183,3,o),
(203.5,2.5,o),
(224.5,1.5,cs),
(245.5,0.5,o),
(266.667,0,o),
(288,0,cs),
(312.667,0,o),
(325,11.667,o),
(325,35,cs),
(325,50.333,o),
(318,61.5,o),
(304,68.5,cs),
(290,75.5,o),
(265.667,79,o),
(231,79,cs),
(183,79,l),
(183,195,ls),
(183,316.596,o),
(263.847,370,o),
(311,370,cs),
(336.333,370,o),
(356,357.667,o),
(356,335,cs),
(356,298.861,o),
(304,306.581,o),
(304,264,cs),
(304,233.333,o),
(331.333,222,o),
(358,222,cs),
(416.625,222,o),
(436,278.058,o),
(436,323,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
83 1 2 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 7 0 106 0 2 3 4 3 2 4 104 6 1 3 3 7 83 8 1 7 7 15 67 0 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 0 7 0 106 0 2 3 4 3 2 4 104 0 7 8 3 7 79 0 8 6 1 3 2 8 3 92 0 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 0 0 7 0 106 0 2 3 4 3 2 4 104 0 7 0 6 3 7 6 91 0 8 0 3 2 8 3 92 0 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
37 38 62 163 37 41 38 38 38 9 24
CALL[ ]	/* CallFunction */";
};
width = 453;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(312,654.667,o),
(293.667,670,o),
(263,670,cs),
(244.565,670,o),
(216.366,635.522,o),
(193,599.5,cs),
(167.182,559.697,o),
(152,526.174,o),
(152,522,cs),
(152,508.667,o),
(166.333,504,o),
(177,504,cs),
(206.68,504,o),
(312,603.002,o),
(312,632,cs)
);
},
{
closed = 1;
nodes = (
(414,387.523,o),
(366.424,434,o),
(302,434,cs),
(255.333,434,o),
(213,410.667,o),
(181,364,c),
(181,413,ls),
(181,447.667,o),
(171.667,451,o),
(137,451,cs),
(44.502,451,o),
(-6,439.94,o),
(-6,423,cs),
(-6,417.667,o),
(-1.833,412.5,o),
(6.5,407.5,cs),
(14.833,402.5,o),
(27.333,400,o),
(44,400,cs),
(93,400,ls),
(103,400,o),
(108,395.333,o),
(108,386,cs),
(108,250.223,o),
(105.69,129.969,o),
(103,95,cs),
(101.667,76.333,o),
(95,65,o),
(63,61,cs),
(40.333,58.333,o),
(31,42.667,o),
(31,28,cs),
(31,13.333,o),
(41.667,0,o),
(63,0,cs),
(94.04,0,o),
(124.947,3,o),
(156,3,cs),
(168.932,3,o),
(253.286,0,o),
(294,0,cs),
(314,0,o),
(324,9,o),
(324,27,cs),
(324,38.333,o),
(317,46.833,o),
(303,52.5,cs),
(289,58.167,o),
(264.667,61,o),
(230,61,cs),
(176,61,l),
(176,213,ls),
(176,334.558,o),
(249.114,373,o),
(296,373,cs),
(322.667,373,o),
(342,364.333,o),
(342,339,cs),
(342,307.724,o),
(299,327.038,o),
(299,285,cs),
(299,258.333,o),
(322.333,246,o),
(345,246,cs),
(396.513,246,o),
(414,290.927,o),
(414,336,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
85 1 2 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 7 0 106 0 2 3 4 3 2 4 104 0 6 6 7 83 0 7 7 15 67 0 3 3 8 83 0 8 8 15 67 0 4 4 5 83 0 5 5 13 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 0 0 7 0 106 0 2 3 4 3 2 4 104 0 7 0 6 3 7 6 91 0 8 0 3 2 8 3 92 0 4 4 5 83 0 5 5 13 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
37 53 62 195 37 41 38 40 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 429;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(69.667,0,o),
(85,0.5,o),
(99,1.5,cs),
(113,2.5,o),
(128.667,3,o),
(146,3,cs),
(154.055,3,o),
(240.415,0,o),
(284,0,cs),
(293.333,0,o),
(304,5,o),
(304,13,cs),
(304,18.333,o),
(297,22.667,o),
(283,26,cs),
(269,29.333,o),
(244.667,31,o),
(210,31,cs),
(166,31,l),
(166,243,ls),
(166,364.558,o),
(239.114,403,o),
(286,403,cs),
(312.667,403,o),
(332,391.667,o),
(332,369,cs),
(332,338.204,o),
(291,342.803,o),
(291,308,cs),
(291,289.333,o),
(302.333,276,o),
(325,276,cs),
(363.635,276,o),
(374,315.161,o),
(374,349,cs),
(374,409,o),
(341.333,434,o),
(292,434,cs),
(245.333,434,o),
(203,410.667,o),
(171,364,c),
(171,413,ls),
(171,447.667,o),
(161.667,451,o),
(127,451,cs),
(68.839,451,o),
(-6,443.658,o),
(-6,433,cs),
(-6,429,o),
(0.667,420,o),
(14,420,cs),
(113,420,ls),
(123,420,o),
(128,415.333,o),
(128,406,cs),
(128,294,o),
(127.5,217.5,o),
(125.5,163.5,cs),
(123.5,109.5,o),
(122,78.333,o),
(118,57,cs),
(114,34.333,o),
(113,32.333,o),
(89,31,cs),
(71.667,29.667,o),
(57.667,27.333,o),
(47,24,cs),
(36.333,20.667,o),
(31,17,o),
(31,13,cs),
(31,6.333,o),
(42.333,0,o),
(53,0,cs)
);
},
{
closed = 1;
nodes = (
(176.797,510,o),
(264,597.027,o),
(264,618,cs),
(264,636.667,o),
(255.667,640,o),
(245,640,cs),
(224.822,640,o),
(150,545.882,o),
(150,521,cs),
(150,513.667,o),
(152.667,510,o),
(158,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
66 1 0 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 10 9 10 106 0 9 7 9 106 0 0 1 2 1 0 96 0 6 6 7 83 0 7 7 15 67 0 1 1 8 83 0 8 8 15 67 5 1 2 2 3 84 4 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 10 9 10 106 0 9 7 9 106 0 0 1 2 1 0 2 104 0 6 6 7 83 0 7 7 15 67 0 1 1 8 83 0 8 8 15 67 5 1 2 2 3 84 4 1 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 10 9 10 106 0 9 7 9 106 0 0 1 2 1 0 2 104 0 7 0 6 1 7 6 91 0 8 0 1 0 8 1 91 5 1 2 2 3 84 4 1 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
85 83 78 76 37 53 56 21 33 116 37 41 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 395;
}
);
note = racute;
unicode = 341;
},
{
glyphname = rcaron;
kernLeft = r;
kernRight = r;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(308.803,640,o),
(271.614,615.913,o),
(200,578,c),
(150.718,604.09,o),
(93.064,640,o),
(81,640,cs),
(73,640,o),
(68,632.667,o),
(68,626,cs),
(68,599.333,o),
(96.333,565.167,o),
(127,536.5,cs),
(153.897,511.357,o),
(189,486,o),
(200,486,cs),
(223.877,486,o),
(333,578.037,o),
(333,619,cs),
(333,629.667,o),
(329.333,640,o),
(320,640,cs)
);
},
{
closed = 1;
nodes = (
(436,410.845,o),
(362.869,439,o),
(312,439,cs),
(258.667,439,o),
(218.667,409.333,o),
(188,364,c),
(188,413,ls),
(188,447.667,o),
(178.667,451,o),
(144,451,cs),
(88.667,451,o),
(49.833,448,o),
(27.5,442,cs),
(5.167,436,o),
(-6,426,o),
(-6,412,cs),
(-6,384.501,o),
(28.812,379,o),
(49,379,cs),
(79,379,ls),
(89,379,o),
(94,374.333,o),
(94,365,cs),
(94,248.707,o),
(93,154.972,o),
(93,118,cs),
(91.667,88.667,o),
(72.333,84.333,o),
(51,79,cs),
(28.333,73.667,o),
(22,59.333,o),
(22,42,cs),
(22,22,o),
(31,0,o),
(63,0,cs),
(102.99,0,o),
(120.325,3,o),
(163,3,cs),
(183,3,o),
(203.5,2.5,o),
(224.5,1.5,cs),
(245.5,0.5,o),
(266.667,0,o),
(288,0,cs),
(312.667,0,o),
(325,11.667,o),
(325,35,cs),
(325,50.333,o),
(318,61.5,o),
(304,68.5,cs),
(290,75.5,o),
(265.667,79,o),
(231,79,cs),
(183,79,l),
(183,195,ls),
(183,316.596,o),
(263.847,370,o),
(311,370,cs),
(336.333,370,o),
(356,357.667,o),
(356,335,cs),
(356,298.861,o),
(304,306.581,o),
(304,264,cs),
(304,233.333,o),
(331.333,222,o),
(358,222,cs),
(416.625,222,o),
(436,278.058,o),
(436,323,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
21 1 1 0 91 1 3 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
2 10 2 0 1 0 106 0 1 8 1 106 0 3 4 5 4 3 5 104 7 1 4 4 8 83 9 1 8 8 15 67 0 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
2 10 2 0 1 0 106 0 1 8 1 106 0 3 4 5 4 3 5 104 0 8 9 4 8 79 0 9 7 1 4 3 9 4 92 0 5 5 6 83 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
2 10 2 0 1 0 106 0 1 8 1 106 0 3 4 5 4 3 5 104 0 8 0 7 4 8 7 92 0 9 0 4 3 9 4 92 0 5 5 6 83 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 95 93 88 86 80 77 63 53 50 48 43 41 32 30 17 15 9 7 0 25 1 25 11 15
CALL[ ]	/* CallFunction */";
};
width = 453;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(414,387.523,o),
(366.424,434,o),
(302,434,cs),
(255.333,434,o),
(213,410.667,o),
(181,364,c),
(181,413,ls),
(181,447.667,o),
(171.667,451,o),
(137,451,cs),
(44.502,451,o),
(-6,439.94,o),
(-6,423,cs),
(-6,417.667,o),
(-1.833,412.5,o),
(6.5,407.5,cs),
(14.833,402.5,o),
(27.333,400,o),
(44,400,cs),
(93,400,ls),
(103,400,o),
(108,395.333,o),
(108,386,cs),
(108,250.223,o),
(105.69,129.969,o),
(103,95,cs),
(101.667,76.333,o),
(95,65,o),
(63,61,cs),
(40.333,58.333,o),
(31,42.667,o),
(31,28,cs),
(31,13.333,o),
(41.667,0,o),
(63,0,cs),
(94.04,0,o),
(124.947,3,o),
(156,3,cs),
(168.932,3,o),
(253.286,0,o),
(294,0,cs),
(314,0,o),
(324,9,o),
(324,27,cs),
(324,38.333,o),
(317,46.833,o),
(303,52.5,cs),
(289,58.167,o),
(264.667,61,o),
(230,61,cs),
(176,61,l),
(176,213,ls),
(176,334.558,o),
(249.114,373,o),
(296,373,cs),
(322.667,373,o),
(342,364.333,o),
(342,339,cs),
(342,307.724,o),
(299,327.038,o),
(299,285,cs),
(299,258.333,o),
(322.333,246,o),
(345,246,cs),
(396.513,246,o),
(414,290.927,o),
(414,336,cs)
);
},
{
closed = 1;
nodes = (
(300,640,o),
(206,577,o),
(193,569,c),
(120,612,o),
(89,640,o),
(74,640,cs),
(67,640,o),
(63,636,o),
(63,627,cs),
(63,586,o),
(171,495,o),
(193,495,cs),
(218,495,o),
(324,588,o),
(324,623,cs),
(324,632,o),
(321,640,o),
(313,640,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
81 1 9 7 68 1 0 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
8 10 2 7 9 7 106 0 0 1 2 1 0 2 104 0 9 9 23 67 0 4 4 5 83 0 5 5 15 67 0 1 1 6 83 0 6 6 15 67 0 2 2 3 84 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
8 10 2 7 9 7 106 0 9 5 9 106 0 0 1 2 1 0 2 104 0 5 0 4 1 5 4 91 0 6 0 1 0 6 1 91 0 2 2 3 84 0 3 3 13 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
77 76 94 92 87 85 76 100 77 100 37 53 62 195 37 41 37 11 33
CALL[ ]	/* CallFunction */";
};
width = 429;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(69.667,0,o),
(85,0.5,o),
(99,1.5,cs),
(113,2.5,o),
(128.667,3,o),
(146,3,cs),
(154.055,3,o),
(240.415,0,o),
(284,0,cs),
(293.333,0,o),
(304,5,o),
(304,13,cs),
(304,18.333,o),
(297,22.667,o),
(283,26,cs),
(269,29.333,o),
(244.667,31,o),
(210,31,cs),
(166,31,l),
(166,243,ls),
(166,364.558,o),
(239.114,403,o),
(286,403,cs),
(312.667,403,o),
(332,391.667,o),
(332,369,cs),
(332,338.204,o),
(291,342.803,o),
(291,308,cs),
(291,289.333,o),
(302.333,276,o),
(325,276,cs),
(363.635,276,o),
(374,315.161,o),
(374,349,cs),
(374,409,o),
(341.333,434,o),
(292,434,cs),
(245.333,434,o),
(203,410.667,o),
(171,364,c),
(171,413,ls),
(171,447.667,o),
(161.667,451,o),
(127,451,cs),
(68.839,451,o),
(-6,443.658,o),
(-6,433,cs),
(-6,429,o),
(0.667,420,o),
(14,420,cs),
(113,420,ls),
(123,420,o),
(128,415.333,o),
(128,406,cs),
(128,294,o),
(127.5,217.5,o),
(125.5,163.5,cs),
(123.5,109.5,o),
(122,78.333,o),
(118,57,cs),
(114,34.333,o),
(113,32.333,o),
(89,31,cs),
(71.667,29.667,o),
(57.667,27.333,o),
(47,24,cs),
(36.333,20.667,o),
(31,17,o),
(31,13,cs),
(31,6.333,o),
(42.333,0,o),
(53,0,cs)
);
},
{
closed = 1;
nodes = (
(207.852,510,o),
(311,603.671,o),
(311,629,cs),
(311,636.333,o),
(308.333,640,o),
(303,640,cs),
(288.302,640,o),
(259.411,607.937,o),
(183,554,c),
(146.597,579.696,o),
(77.139,640,o),
(64,640,cs),
(58.667,640,o),
(56,636.333,o),
(56,629,cs),
(56,604.067,o),
(159.626,510,o),
(183,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
91 1 10 9 66 1 0 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
11 12 2 9 10 9 106 0 10 7 10 106 0 0 1 2 1 0 96 0 6 6 7 83 0 7 7 15 67 0 1 1 8 83 0 8 8 15 67 5 1 2 2 3 83 4 1 3 3 13 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
11 12 2 9 10 9 106 0 10 7 10 106 0 0 1 2 1 0 2 104 0 6 6 7 83 0 7 7 15 67 0 1 1 8 83 0 8 8 15 67 5 1 2 2 3 83 4 1 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
11 12 2 9 10 9 106 0 10 7 10 106 0 0 1 2 1 0 2 104 0 7 0 6 1 7 6 92 0 8 0 1 0 8 1 92 5 1 2 2 3 83 4 1 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
73 72 87 85 80 78 72 95 73 95 37 53 56 21 33 116 37 41 36 13 24
CALL[ ]	/* CallFunction */";
};
width = 395;
}
);
note = rcaron;
unicode = 345;
},
{
glyphname = rcommaaccent;
kernLeft = r;
kernRight = r;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(436,410.845,o),
(362.869,439,o),
(312,439,cs),
(258.667,439,o),
(218.667,409.333,o),
(188,364,c),
(188,413,ls),
(188,447.667,o),
(178.667,451,o),
(144,451,cs),
(88.667,451,o),
(49.833,448,o),
(27.5,442,cs),
(5.167,436,o),
(-6,426,o),
(-6,412,cs),
(-6,384.501,o),
(28.812,379,o),
(49,379,cs),
(79,379,ls),
(89,379,o),
(94,374.333,o),
(94,365,cs),
(94,248.707,o),
(93,154.972,o),
(93,118,cs),
(91.667,88.667,o),
(72.333,84.333,o),
(51,79,cs),
(28.333,73.667,o),
(22,59.333,o),
(22,42,cs),
(22,22,o),
(31,0,o),
(63,0,cs),
(102.99,0,o),
(120.325,3,o),
(163,3,cs),
(183,3,o),
(203.5,2.5,o),
(224.5,1.5,cs),
(245.5,0.5,o),
(266.667,0,o),
(288,0,cs),
(312.667,0,o),
(325,11.667,o),
(325,35,cs),
(325,50.333,o),
(318,61.5,o),
(304,68.5,cs),
(290,75.5,o),
(265.667,79,o),
(231,79,cs),
(183,79,l),
(183,195,ls),
(183,316.596,o),
(263.847,370,o),
(311,370,cs),
(336.333,370,o),
(356,357.667,o),
(356,335,cs),
(356,298.861,o),
(304,306.581,o),
(304,264,cs),
(304,233.333,o),
(331.333,222,o),
(358,222,cs),
(416.625,222,o),
(436,278.058,o),
(436,323,cs)
);
},
{
closed = 1;
nodes = (
(96,-138.971,o),
(132,-140.557,o),
(132,-158,cs),
(132,-178,o),
(129.5,-192.833,o),
(124.5,-202.5,cs),
(119.5,-212.167,o),
(117,-220.333,o),
(117,-227,cs),
(117,-249.667,o),
(136.333,-250,o),
(143,-250,cs),
(161.413,-250,o),
(224,-207.536,o),
(224,-131,cs),
(224,-73.667,o),
(188,-50,o),
(156,-50,cs),
(112,-50,o),
(96,-80,o),
(96,-108,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
65 1 0 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 0 1 2 1 0 2 104 4 1 1 1 5 83 6 1 5 5 15 67 0 2 2 3 83 0 3 3 13 67 0 7 7 8 83 0 8 8 25 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 0 1 2 1 0 2 104 0 5 6 1 5 79 0 6 4 1 1 0 6 1 91 0 7 0 8 7 8 87 0 2 2 3 83 0 3 3 13 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 0 1 2 1 0 2 104 0 5 0 4 1 5 4 91 0 6 0 1 0 6 1 91 0 7 0 8 7 8 87 0 2 2 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 38 37 38 62 163 37 41 36 9 24
CALL[ ]	/* CallFunction */";
};
width = 454;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(414,387.523,o),
(366.424,434,o),
(302,434,cs),
(255.333,434,o),
(213,410.667,o),
(181,364,c),
(181,413,ls),
(181,447.667,o),
(171.667,451,o),
(137,451,cs),
(44.502,451,o),
(-6,439.94,o),
(-6,423,cs),
(-6,417.667,o),
(-1.833,412.5,o),
(6.5,407.5,cs),
(14.833,402.5,o),
(27.333,400,o),
(44,400,cs),
(93,400,ls),
(103,400,o),
(108,395.333,o),
(108,386,cs),
(108,250.223,o),
(105.69,129.969,o),
(103,95,cs),
(101.667,76.333,o),
(95,65,o),
(63,61,cs),
(40.333,58.333,o),
(31,42.667,o),
(31,28,cs),
(31,13.333,o),
(41.667,0,o),
(63,0,cs),
(94.04,0,o),
(124.947,3,o),
(156,3,cs),
(168.932,3,o),
(253.286,0,o),
(294,0,cs),
(314,0,o),
(324,9,o),
(324,27,cs),
(324,38.333,o),
(317,46.833,o),
(303,52.5,cs),
(289,58.167,o),
(264.667,61,o),
(230,61,cs),
(176,61,l),
(176,213,ls),
(176,334.558,o),
(249.114,373,o),
(296,373,cs),
(322.667,373,o),
(342,364.333,o),
(342,339,cs),
(342,307.724,o),
(299,327.038,o),
(299,285,cs),
(299,258.333,o),
(322.333,246,o),
(345,246,cs),
(396.513,246,o),
(414,290.927,o),
(414,336,cs)
);
},
{
closed = 1;
nodes = (
(99,-137,o),
(135,-136,o),
(135,-153,cs),
(135,-170,o),
(133,-183,o),
(129,-191,cs),
(124,-200,o),
(122,-207,o),
(122,-213,cs),
(122,-230,o),
(136,-232,o),
(143,-232,cs),
(167,-232,o),
(208,-182,o),
(208,-128,cs),
(208,-75,o),
(178,-56,o),
(151,-56,cs),
(114,-56,o),
(99,-81,o),
(99,-105,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
68 1 0 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 0 1 2 1 0 2 104 0 4 4 5 83 0 5 5 15 67 0 1 1 6 83 0 6 6 15 67 0 2 2 3 83 0 3 3 13 67 0 7 7 8 83 0 8 8 25 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 1 2 1 0 2 104 0 5 0 4 1 5 4 91 0 6 0 1 0 6 1 91 0 2 2 3 83 0 3 3 13 67 0 7 7 8 83 0 8 8 25 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 0 1 2 1 0 2 104 0 5 0 4 1 5 4 91 0 6 0 1 0 6 1 91 0 7 0 8 7 8 87 0 2 2 3 83 0 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 38 37 53 62 195 37 41 37 9 35
CALL[ ]	/* CallFunction */";
};
width = 429;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(68.667,0,o),
(84,0.5,o),
(98,1.5,cs),
(112,2.5,o),
(127.667,3,o),
(145,3,cs),
(153.055,3,o),
(239.415,0,o),
(283,0,cs),
(292.333,0,o),
(303,5,o),
(303,13,cs),
(303,18.333,o),
(296,22.667,o),
(282,26,cs),
(268,29.333,o),
(243.667,31,o),
(209,31,cs),
(165,31,l),
(165,243,ls),
(165,364.558,o),
(238.114,403,o),
(285,403,cs),
(311.667,403,o),
(331,391.667,o),
(331,369,cs),
(331,338.204,o),
(290,342.803,o),
(290,308,cs),
(290,289.333,o),
(301.333,276,o),
(324,276,cs),
(362.635,276,o),
(373,315.161,o),
(373,349,cs),
(373,409,o),
(340.333,434,o),
(291,434,cs),
(244.333,434,o),
(202,410.667,o),
(170,364,c),
(170,413,ls),
(170,447.667,o),
(160.667,451,o),
(126,451,cs),
(67.839,451,o),
(-7,443.658,o),
(-7,433,cs),
(-7,429,o),
(-0.333,420,o),
(13,420,cs),
(112,420,ls),
(122,420,o),
(127,415.333,o),
(127,406,cs),
(127,294,o),
(126.5,217.5,o),
(124.5,163.5,cs),
(122.5,109.5,o),
(121,78.333,o),
(117,57,cs),
(113,34.333,o),
(112,32.333,o),
(88,31,cs),
(70.667,29.667,o),
(56.667,27.333,o),
(46,24,cs),
(35.333,20.667,o),
(30,17,o),
(30,13,cs),
(30,6.333,o),
(41.333,0,o),
(52,0,cs)
);
},
{
closed = 1;
nodes = (
(168.943,-203,o),
(185,-153.312,o),
(185,-124,cs),
(185,-78.667,o),
(163,-67,o),
(143,-67,cs),
(116.333,-67,o),
(103,-83.667,o),
(103,-101,cs),
(103,-133.202,o),
(139,-127.69,o),
(139,-145,cs),
(139,-151.667,o),
(137.167,-159.833,o),
(133.5,-169.5,cs),
(129.833,-179.167,o),
(128,-186.333,o),
(128,-191,cs),
(128,-197.667,o),
(135.333,-203,o),
(142,-203,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
66 1 0 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 0 1 2 1 0 96 0 6 6 7 83 0 7 7 15 67 0 1 1 8 83 0 8 8 15 67 5 1 2 2 3 83 4 1 3 3 13 67 0 9 9 10 83 0 10 10 17 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 0 1 2 1 0 2 104 0 6 6 7 83 0 7 7 15 67 0 1 1 8 83 0 8 8 15 67 5 1 2 2 3 83 4 1 3 3 13 67 0 9 9 10 83 0 10 10 17 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 0 1 2 1 0 2 104 0 7 0 6 1 7 6 91 0 8 0 1 0 8 1 91 5 1 2 2 3 83 4 1 3 3 13 67 0 9 9 10 83 0 10 10 17 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 0 1 2 1 0 2 104 0 7 0 6 1 7 6 91 0 8 0 1 0 8 1 91 0 9 0 10 9 10 87 5 1 2 2 3 83 4 1 3 3 13 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
84 82 76 74 37 53 56 21 33 116 37 41 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 394;
}
);
note = rcommaaccent;
unicode = 343;
},
{
glyphname = s;
kernLeft = s;
kernRight = s;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(147.667,-19.667,o),
(192.667,-27,o),
(238,-27,cs),
(326.449,-27,o),
(412,8.488,o),
(412,102,cs),
(412,201.604,o),
(314.892,217.322,o),
(223,244,cs),
(189.896,254.186,o),
(139,269.729,o),
(139,325,cs),
(139,358.333,o),
(158.333,384,o),
(217,384,cs),
(271.667,384,o),
(295,360.667,o),
(307,342,cs),
(317.667,327.333,o),
(328.667,304,o),
(334,280,cs),
(336.667,265.333,o),
(352.667,250,o),
(370,250,cs),
(392.667,250,o),
(399.333,266.333,o),
(402,289,cs),
(405.236,311.649,o),
(408,381.516,o),
(408,422,cs),
(408,468.667,o),
(393.333,475,o),
(372,475,cs),
(353.333,475,o),
(332,469.333,o),
(332,436,cs),
(332,432,o),
(332.667,409.333,o),
(334,392,c),
(314.775,424.042,o),
(285.627,457,o),
(209,457,cs),
(130.045,457,o),
(52,418.344,o),
(52,320,cs),
(52,209.776,o),
(146.085,180.134,o),
(216,164,cs),
(299.483,142.533,o),
(322,120.093,o),
(322,91,cs),
(322,56.333,o),
(284,44,o),
(240,44,cs),
(181.333,44,o),
(146.333,64.333,o),
(129,91,cs),
(110.333,121.667,o),
(107.667,140.667,o),
(105,154,cs),
(102.333,167.333,o),
(89.667,181,o),
(75,181,cs),
(48.333,181,o),
(35,170,o),
(35,148,cs),
(35,132,o),
(35.667,117.333,o),
(37,104,cs),
(38.333,90.667,o),
(39,77.333,o),
(39,64,cs),
(39,54.667,o),
(38.667,45.333,o),
(38,36,cs),
(37.333,26.667,o),
(37,16,o),
(37,4,cs),
(37,-14.667,o),
(41.333,-30,o),
(72,-30,cs),
(96,-30,o),
(110,-16.333,o),
(110,-3,cs),
(110,1,o),
(110,5,o),
(110,9,cs),
(110,13,o),
(109.667,17.667,o),
(109,23,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
49 1 6 3 0 1 0 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 6 6 3 83 0 3 3 23 67 0 5 5 4 83 0 4 4 23 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 0 0 2 79 0 2 2 0 83 7 1 0 2 0 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
94 92 76 74 67 65 56 54 45 43 39 41 37 8 18
CALL[ ]	/* CallFunction */";
};
width = 451;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(125.163,-12.641,o),
(185.815,-24,o),
(234,-24,cs),
(297.581,-24,o),
(399,-4.838,o),
(399,99,cs),
(399,188.135,o),
(322.808,208.565,o),
(225,235,cs),
(167.115,250.1,o),
(114,267.27,o),
(114,322,cs),
(114,366,o),
(146.333,396,o),
(209,396,cs),
(271.667,396,o),
(302,366.667,o),
(318,336,cs),
(322.728,328.12,o),
(330,294.503,o),
(330,284,c),
(332.667,274.667,o),
(339.667,259,o),
(357,259,cs),
(369,259,o),
(387.667,266.333,o),
(389,285,cs),
(389,298.106,o),
(394,346.955,o),
(394,432,cs),
(394,466.667,o),
(376.667,475,o),
(362,475,cs),
(350,475,o),
(330,468.667,o),
(330,438,cs),
(330,431.333,o),
(330.667,409.333,o),
(332,392,c),
(312.96,423.733,o),
(282.843,457,o),
(206,457,cs),
(126.478,457,o),
(48,419.064,o),
(48,320,cs),
(48,218.207,o),
(130.803,191.661,o),
(203,175,cs),
(281.667,155,o),
(331,140.333,o),
(331,95,cs),
(331,48.749,o),
(277.702,33,o),
(231,33,cs),
(169.311,33,o),
(123.363,64,o),
(107,100,cs),
(103.667,106.667,o),
(101.833,112.833,o),
(101.5,118.5,cs),
(101.167,124.167,o),
(100.333,131.667,o),
(99,141,cs),
(96.333,165,o),
(90.667,181,o),
(64,181,cs),
(38.667,181,o),
(37,167.333,o),
(37,146,cs),
(37,131.333,o),
(37.667,115.667,o),
(39,99,cs),
(40.333,82.333,o),
(41,67.333,o),
(41,54,cs),
(41,44.667,o),
(40.667,33.5,o),
(40,20.5,cs),
(39.333,7.5,o),
(39,-0.667,o),
(39,-4,cs),
(39,-22.63,o),
(56.392,-30,o),
(72,-30,cs),
(92,-30,o),
(102,-15,o),
(102,5,cs),
(102,9,o),
(102,13.333,o),
(102,18,cs),
(102,22.667,o),
(101.667,27.667,o),
(101,33,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
74 68 54 3 5 6 1 66 0 1 2 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 6 6 3 83 0 3 3 23 67 0 5 5 4 83 0 4 4 23 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 0 0 2 79 0 2 2 0 83 7 1 0 2 0 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 0 0 1 0 87 0 2 2 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 0 7 0 2 7 91 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
101 99 83 81 72 70 61 59 50 48 41 44 37 8 18
CALL[ ]	/* CallFunction */";
};
width = 435;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(72.667,-30,o),
(75,-15,o),
(75,5,cs),
(75,9,o),
(75,14,o),
(75,20,cs),
(75,26,o),
(74.667,31.667,o),
(74,37,c),
(93.103,1.523,o),
(160.703,-23,o),
(212,-23,cs),
(256.341,-23,o),
(372,-7.324,o),
(372,103,cs),
(372,179.45,o),
(314.58,199.011,o),
(228,220,cs),
(131.045,241.546,o),
(87,254.377,o),
(87,323,cs),
(87,398.084,o),
(138.993,426,o),
(206,426,cs),
(278.609,426,o),
(311.607,390.216,o),
(325,342,cs),
(328.333,332,o),
(330.167,323.5,o),
(330.5,316.5,cs),
(330.833,309.5,o),
(331.333,303.333,o),
(332,298,cs),
(333.333,287.333,o),
(337,273,o),
(349,273,cs),
(361,273,o),
(364,287,o),
(364,299,cs),
(364,306.333,o),
(364.5,323.167,o),
(365.5,349.5,cs),
(366.5,375.833,o),
(367,409,o),
(367,449,cs),
(367,463.667,o),
(361,475,o),
(349,475,cs),
(343.667,475,o),
(339.667,472.667,o),
(337,468,cs),
(334.333,463.333,o),
(333,454.333,o),
(333,441,cs),
(333,430.333,o),
(333.667,409.333,o),
(335,392,c),
(316.003,423.662,o),
(285.892,457,o),
(210,457,cs),
(129.93,457,o),
(51,417.885,o),
(51,323,cs),
(51,247,o),
(100,212.667,o),
(184,194,cs),
(277.323,173.262,o),
(334,158.74,o),
(334,98,cs),
(334,29.139,o),
(264.662,8,o),
(216,8,cs),
(174.667,8,o),
(135.667,18,o),
(105,46,cs),
(79.667,68.667,o),
(74.667,89.333,o),
(72,136,cs),
(70,159.333,o),
(64,171,o),
(54,171,cs),
(44.667,171,o),
(40,160.333,o),
(40,139,cs),
(40,127,o),
(40.667,113,o),
(42,97,cs),
(43.333,81,o),
(44,66.667,o),
(44,54,cs),
(44,44.667,o),
(43.667,33.667,o),
(43,21,cs),
(42.333,8.333,o),
(42,-0.667,o),
(42,-6,cs),
(42,-24.667,o),
(48.667,-30,o),
(58,-30,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
48 1 5 6 19 0 2 2 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 6 6 3 83 0 3 3 23 67 0 5 5 4 83 0 4 4 23 67 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 2 2 7 83 0 7 7 21 67 0 1 1 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 0 0 1 0 87 0 2 2 7 83 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
95 93 75 73 64 62 55 53 44 42 38 41 37 8 18
CALL[ ]	/* CallFunction */";
};
width = 412;
}
);
note = s;
unicode = 115;
},
{
glyphname = sacute;
kernLeft = s;
kernRight = s;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(313,665.333,o),
(285.667,686.667,o),
(243,688,cs),
(217.667,688,o),
(187,649.167,o),
(163,608.5,cs),
(142.511,573.783,o),
(121,526.988,o),
(121,522,cs),
(121,507.333,o),
(143.333,500,o),
(158,500,cs),
(175.099,500,o),
(210.389,522.679,o),
(249,557,cs),
(283.627,587.78,o),
(313,622.341,o),
(313,640,cs)
);
},
{
closed = 1;
nodes = (
(147.667,-19.667,o),
(192.667,-27,o),
(238,-27,cs),
(326.449,-27,o),
(412,8.488,o),
(412,102,cs),
(412,201.604,o),
(314.892,217.322,o),
(223,244,cs),
(189.896,254.186,o),
(139,269.729,o),
(139,325,cs),
(139,358.333,o),
(158.333,384,o),
(217,384,cs),
(271.667,384,o),
(295,360.667,o),
(307,342,cs),
(317.667,327.333,o),
(328.667,304,o),
(334,280,cs),
(336.667,265.333,o),
(352.667,250,o),
(370,250,cs),
(392.667,250,o),
(399.333,266.333,o),
(402,289,cs),
(405.236,311.649,o),
(408,381.516,o),
(408,422,cs),
(408,468.667,o),
(393.333,475,o),
(372,475,cs),
(353.333,475,o),
(332,469.333,o),
(332,436,cs),
(332,432,o),
(332.667,409.333,o),
(334,392,c),
(314.775,424.042,o),
(285.627,457,o),
(209,457,cs),
(130.045,457,o),
(52,418.344,o),
(52,320,cs),
(52,209.776,o),
(146.085,180.134,o),
(216,164,cs),
(299.483,142.533,o),
(322,120.093,o),
(322,91,cs),
(322,56.333,o),
(284,44,o),
(240,44,cs),
(181.333,44,o),
(146.333,64.333,o),
(129,91,cs),
(110.333,121.667,o),
(107.667,140.667,o),
(105,154,cs),
(102.333,167.333,o),
(89.667,181,o),
(75,181,cs),
(48.333,181,o),
(35,170,o),
(35,148,cs),
(35,132,o),
(35.667,117.333,o),
(37,104,cs),
(38.333,90.667,o),
(39,77.333,o),
(39,64,cs),
(39,54.667,o),
(38.667,45.333,o),
(38,36,cs),
(37.333,26.667,o),
(37,16,o),
(37,4,cs),
(37,-14.667,o),
(41.333,-30,o),
(72,-30,cs),
(96,-30,o),
(110,-16.333,o),
(110,-3,cs),
(110,1,o),
(110,5,o),
(110,9,cs),
(110,13,o),
(109.667,17.667,o),
(109,23,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
67 1 8 5 18 1 2 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 1 0 1 106 0 0 6 0 106 0 8 8 5 83 0 5 5 23 67 0 7 7 6 83 0 6 6 23 67 0 3 3 2 83 9 1 2 2 21 67 0 4 4 2 83 9 1 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 0 8 7 5 8 92 0 6 0 7 3 6 7 91 0 3 3 2 83 9 1 2 2 21 67 0 4 4 2 83 9 1 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 0 8 7 5 8 92 0 6 0 7 3 6 7 91 0 3 4 2 3 79 0 4 2 2 4 79 0 4 4 2 83 9 1 2 4 2 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
112 110 94 92 85 83 74 72 63 61 39 41 39 38 38 10 20
CALL[ ]	/* CallFunction */";
};
width = 451;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(285,654.667,o),
(266.667,670,o),
(236,670,cs),
(217.565,670,o),
(189.366,635.522,o),
(166,599.5,cs),
(140.182,559.697,o),
(125,526.174,o),
(125,522,cs),
(125,508.667,o),
(139.333,504,o),
(150,504,cs),
(179.68,504,o),
(285,603.002,o),
(285,632,cs)
);
},
{
closed = 1;
nodes = (
(125.163,-12.641,o),
(185.815,-24,o),
(234,-24,cs),
(297.581,-24,o),
(399,-4.838,o),
(399,99,cs),
(399,188.135,o),
(322.808,208.565,o),
(225,235,cs),
(167.115,250.1,o),
(114,267.27,o),
(114,322,cs),
(114,366,o),
(146.333,396,o),
(209,396,cs),
(271.667,396,o),
(302,366.667,o),
(318,336,cs),
(322.728,328.12,o),
(330,294.503,o),
(330,284,c),
(332.667,274.667,o),
(339.667,259,o),
(357,259,cs),
(369,259,o),
(387.667,266.333,o),
(389,285,cs),
(389,298.106,o),
(394,346.955,o),
(394,432,cs),
(394,466.667,o),
(376.667,475,o),
(362,475,cs),
(350,475,o),
(330,468.667,o),
(330,438,cs),
(330,431.333,o),
(330.667,409.333,o),
(332,392,c),
(312.96,423.733,o),
(282.843,457,o),
(206,457,cs),
(126.478,457,o),
(48,419.064,o),
(48,320,cs),
(48,218.207,o),
(130.803,191.661,o),
(203,175,cs),
(281.667,155,o),
(331,140.333,o),
(331,95,cs),
(331,48.749,o),
(277.702,33,o),
(231,33,cs),
(169.311,33,o),
(123.363,64,o),
(107,100,cs),
(103.667,106.667,o),
(101.833,112.833,o),
(101.5,118.5,cs),
(101.167,124.167,o),
(100.333,131.667,o),
(99,141,cs),
(96.333,165,o),
(90.667,181,o),
(64,181,cs),
(38.667,181,o),
(37,167.333,o),
(37,146,cs),
(37,131.333,o),
(37.667,115.667,o),
(39,99,cs),
(40.333,82.333,o),
(41,67.333,o),
(41,54,cs),
(41,44.667,o),
(40.667,33.5,o),
(40,20.5,cs),
(39.333,7.5,o),
(39,-0.667,o),
(39,-4,cs),
(39,-22.63,o),
(56.392,-30,o),
(72,-30,cs),
(92,-30,o),
(102,-15,o),
(102,5,cs),
(102,9,o),
(102,13.333,o),
(102,18,cs),
(102,22.667,o),
(101.667,27.667,o),
(101,33,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
92 86 72 3 7 8 1 66 18 1 4 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 1 0 1 106 0 0 6 0 106 0 8 8 5 83 0 5 5 23 67 0 7 7 6 83 0 6 6 23 67 0 3 3 2 83 9 1 2 2 21 67 0 4 4 2 83 9 1 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 0 8 7 5 8 92 0 6 0 7 3 6 7 91 0 3 3 2 83 9 1 2 2 21 67 0 4 4 2 83 9 1 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 0 8 7 5 8 92 0 6 0 7 3 6 7 91 0 3 4 2 3 79 0 4 2 2 4 79 0 4 4 2 83 9 1 2 4 2 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 0 8 7 5 8 92 0 6 0 7 3 6 7 91 0 3 0 2 3 2 87 0 4 4 9 83 0 9 9 21 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 0 8 7 5 8 92 0 6 0 7 3 6 7 91 0 3 4 2 3 79 0 4 0 9 2 4 9 91 0 3 3 2 83 0 2 3 2 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
119 117 101 99 90 88 79 77 68 66 41 44 39 40 36 10 20
CALL[ ]	/* CallFunction */";
};
width = 435;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(72.667,-30,o),
(75,-15,o),
(75,5,cs),
(75,9,o),
(75,14,o),
(75,20,cs),
(75,26,o),
(74.667,31.667,o),
(74,37,c),
(93.103,1.523,o),
(160.703,-23,o),
(212,-23,cs),
(256.341,-23,o),
(372,-7.324,o),
(372,103,cs),
(372,179.45,o),
(314.58,199.011,o),
(228,220,cs),
(131.045,241.546,o),
(87,254.377,o),
(87,323,cs),
(87,398.084,o),
(138.993,426,o),
(206,426,cs),
(278.609,426,o),
(311.607,390.216,o),
(325,342,cs),
(328.333,332,o),
(330.167,323.5,o),
(330.5,316.5,cs),
(330.833,309.5,o),
(331.333,303.333,o),
(332,298,cs),
(333.333,287.333,o),
(337,273,o),
(349,273,cs),
(361,273,o),
(364,287,o),
(364,299,cs),
(364,306.333,o),
(364.5,323.167,o),
(365.5,349.5,cs),
(366.5,375.833,o),
(367,409,o),
(367,449,cs),
(367,463.667,o),
(361,475,o),
(349,475,cs),
(343.667,475,o),
(339.667,472.667,o),
(337,468,cs),
(334.333,463.333,o),
(333,454.333,o),
(333,441,cs),
(333,430.333,o),
(333.667,409.333,o),
(335,392,c),
(316.003,423.662,o),
(285.892,457,o),
(210,457,cs),
(129.93,457,o),
(51,417.885,o),
(51,323,cs),
(51,247,o),
(100,212.667,o),
(184,194,cs),
(277.323,173.262,o),
(334,158.74,o),
(334,98,cs),
(334,29.139,o),
(264.662,8,o),
(216,8,cs),
(174.667,8,o),
(135.667,18,o),
(105,46,cs),
(79.667,68.667,o),
(74.667,89.333,o),
(72,136,cs),
(70,159.333,o),
(64,171,o),
(54,171,cs),
(44.667,171,o),
(40,160.333,o),
(40,139,cs),
(40,127,o),
(40.667,113,o),
(42,97,cs),
(43.333,81,o),
(44,66.667,o),
(44,54,cs),
(44,44.667,o),
(43.667,33.667,o),
(43,21,cs),
(42.333,8.333,o),
(42,-0.667,o),
(42,-6,cs),
(42,-24.667,o),
(48.667,-30,o),
(58,-30,cs)
);
},
{
closed = 1;
nodes = (
(160.797,510,o),
(248,597.027,o),
(248,618,cs),
(248,636.667,o),
(239.667,640,o),
(229,640,cs),
(208.822,640,o),
(134,545.882,o),
(134,521,cs),
(134,513.667,o),
(136.667,510,o),
(142,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
63 1 7 8 34 15 2 4 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 1 106 0 0 6 0 106 0 8 8 5 83 0 5 5 23 67 0 7 7 6 83 0 6 6 23 67 0 4 4 9 83 0 9 9 21 67 0 3 3 2 83 0 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 0 8 7 5 8 92 0 6 0 7 3 6 7 91 0 4 4 9 83 0 9 9 21 67 0 3 3 2 83 0 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 0 6 0 106 0 5 0 8 7 5 8 92 0 6 0 7 3 6 7 91 0 3 0 2 3 2 87 0 4 4 9 83 0 9 9 21 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
110 108 90 88 79 77 70 68 59 57 38 41 39 37 36 10 20
CALL[ ]	/* CallFunction */";
};
width = 412;
}
);
note = sacute;
unicode = 347;
},
{
glyphname = scaron;
kernLeft = s;
kernRight = s;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(310.803,640,o),
(273.614,615.913,o),
(202,578,c),
(152.718,604.09,o),
(95.064,640,o),
(83,640,cs),
(75,640,o),
(70,632.667,o),
(70,626,cs),
(70,599.333,o),
(98.333,565.167,o),
(129,536.5,cs),
(155.897,511.357,o),
(191,486,o),
(202,486,cs),
(225.877,486,o),
(335,578.037,o),
(335,619,cs),
(335,629.667,o),
(331.333,640,o),
(322,640,cs)
);
},
{
closed = 1;
nodes = (
(147.667,-19.667,o),
(192.667,-27,o),
(238,-27,cs),
(326.449,-27,o),
(412,8.488,o),
(412,102,cs),
(412,201.604,o),
(314.892,217.322,o),
(223,244,cs),
(189.896,254.186,o),
(139,269.729,o),
(139,325,cs),
(139,358.333,o),
(158.333,384,o),
(217,384,cs),
(271.667,384,o),
(295,360.667,o),
(307,342,cs),
(317.667,327.333,o),
(328.667,304,o),
(334,280,cs),
(336.667,265.333,o),
(352.667,250,o),
(370,250,cs),
(392.667,250,o),
(399.333,266.333,o),
(402,289,cs),
(405.236,311.649,o),
(408,381.516,o),
(408,422,cs),
(408,468.667,o),
(393.333,475,o),
(372,475,cs),
(353.333,475,o),
(332,469.333,o),
(332,436,cs),
(332,432,o),
(332.667,409.333,o),
(334,392,c),
(314.775,424.042,o),
(285.627,457,o),
(209,457,cs),
(130.045,457,o),
(52,418.344,o),
(52,320,cs),
(52,209.776,o),
(146.085,180.134,o),
(216,164,cs),
(299.483,142.533,o),
(322,120.093,o),
(322,91,cs),
(322,56.333,o),
(284,44,o),
(240,44,cs),
(181.333,44,o),
(146.333,64.333,o),
(129,91,cs),
(110.333,121.667,o),
(107.667,140.667,o),
(105,154,cs),
(102.333,167.333,o),
(89.667,181,o),
(75,181,cs),
(48.333,181,o),
(35,170,o),
(35,148,cs),
(35,132,o),
(35.667,117.333,o),
(37,104,cs),
(38.333,90.667,o),
(39,77.333,o),
(39,64,cs),
(39,54.667,o),
(38.667,45.333,o),
(38,36,cs),
(37.333,26.667,o),
(37,16,o),
(37,4,cs),
(37,-14.667,o),
(41.333,-30,o),
(72,-30,cs),
(96,-30,o),
(110,-16.333,o),
(110,-3,cs),
(110,1,o),
(110,5,o),
(110,9,cs),
(110,13,o),
(109.667,17.667,o),
(109,23,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
21 1 1 0 75 1 9 6 26 1 3 5 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
2 11 2 0 1 0 106 0 1 7 1 106 0 9 9 6 83 0 6 6 23 67 0 8 8 7 83 0 7 7 23 67 0 4 4 3 84 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
2 11 2 0 1 0 106 0 1 7 1 106 0 6 0 9 8 6 9 91 0 7 0 8 4 7 8 91 0 4 4 3 84 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
2 11 2 0 1 0 106 0 1 7 1 106 0 6 0 9 8 6 9 91 0 7 0 8 4 7 8 91 0 4 5 3 4 79 0 5 3 3 5 79 0 5 5 3 83 10 1 3 5 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 120 118 102 100 93 91 82 80 71 69 53 51 44 42 33 31 17 15 9 7 0 25 1 25 12 15
CALL[ ]	/* CallFunction */";
};
width = 451;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(125.163,-12.641,o),
(185.815,-24,o),
(234,-24,cs),
(297.581,-24,o),
(399,-4.838,o),
(399,99,cs),
(399,188.135,o),
(322.808,208.565,o),
(225,235,cs),
(167.115,250.1,o),
(114,267.27,o),
(114,322,cs),
(114,366,o),
(146.333,396,o),
(209,396,cs),
(271.667,396,o),
(302,366.667,o),
(318,336,cs),
(322.728,328.12,o),
(330,294.503,o),
(330,284,c),
(332.667,274.667,o),
(339.667,259,o),
(357,259,cs),
(369,259,o),
(387.667,266.333,o),
(389,285,cs),
(389,298.106,o),
(394,346.955,o),
(394,432,cs),
(394,466.667,o),
(376.667,475,o),
(362,475,cs),
(350,475,o),
(330,468.667,o),
(330,438,cs),
(330,431.333,o),
(330.667,409.333,o),
(332,392,c),
(312.96,423.733,o),
(282.843,457,o),
(206,457,cs),
(126.478,457,o),
(48,419.064,o),
(48,320,cs),
(48,218.207,o),
(130.803,191.661,o),
(203,175,cs),
(281.667,155,o),
(331,140.333,o),
(331,95,cs),
(331,48.749,o),
(277.702,33,o),
(231,33,cs),
(169.311,33,o),
(123.363,64,o),
(107,100,cs),
(103.667,106.667,o),
(101.833,112.833,o),
(101.5,118.5,cs),
(101.167,124.167,o),
(100.333,131.667,o),
(99,141,cs),
(96.333,165,o),
(90.667,181,o),
(64,181,cs),
(38.667,181,o),
(37,167.333,o),
(37,146,cs),
(37,131.333,o),
(37.667,115.667,o),
(39,99,cs),
(40.333,82.333,o),
(41,67.333,o),
(41,54,cs),
(41,44.667,o),
(40.667,33.5,o),
(40,20.5,cs),
(39.333,7.5,o),
(39,-0.667,o),
(39,-4,cs),
(39,-22.63,o),
(56.392,-30,o),
(72,-30,cs),
(92,-30,o),
(102,-15,o),
(102,5,cs),
(102,9,o),
(102,13.333,o),
(102,18,cs),
(102,22.667,o),
(101.667,27.667,o),
(101,33,c)
);
},
{
closed = 1;
nodes = (
(310,640,o),
(216,577,o),
(203,569,c),
(130,612,o),
(99,640,o),
(84,640,cs),
(77,640,o),
(73,636,o),
(73,627,cs),
(73,586,o),
(181,495,o),
(203,495,cs),
(228,495,o),
(334,588,o),
(334,623,cs),
(334,632,o),
(331,640,o),
(323,640,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
111 1 10 8 75 69 55 3 5 6 2 66 1 1 2 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
9 11 2 8 10 8 106 0 10 10 23 67 0 6 6 3 83 0 3 3 23 67 0 5 5 4 83 0 4 4 23 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
9 11 2 8 10 8 106 0 10 4 3 10 94 0 3 0 6 5 3 6 92 0 4 0 5 1 4 5 91 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
9 11 2 8 10 8 106 0 10 4 3 10 94 0 3 0 6 5 3 6 92 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 0 0 2 79 0 2 2 0 83 7 1 0 2 0 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
9 11 2 8 10 8 106 0 10 4 10 106 0 3 0 6 5 3 6 92 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 0 0 2 79 0 2 2 0 83 7 1 0 2 0 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
9 11 2 8 10 8 106 0 10 4 10 106 0 3 0 6 5 3 6 92 0 4 0 5 1 4 5 91 0 1 0 0 1 0 87 0 2 2 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
9 11 2 8 10 8 106 0 10 4 10 106 0 3 0 6 5 3 6 92 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 0 7 0 2 7 91 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
107 106 124 122 117 115 106 130 107 130 102 100 84 82 73 71 62 60 51 49 41 44 38 12 29
CALL[ ]	/* CallFunction */";
};
width = 435;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(72.667,-30,o),
(75,-15,o),
(75,5,cs),
(75,9,o),
(75,14,o),
(75,20,cs),
(75,26,o),
(74.667,31.667,o),
(74,37,c),
(93.103,1.523,o),
(160.703,-23,o),
(212,-23,cs),
(256.341,-23,o),
(372,-7.324,o),
(372,103,cs),
(372,179.45,o),
(314.58,199.011,o),
(228,220,cs),
(131.045,241.546,o),
(87,254.377,o),
(87,323,cs),
(87,398.084,o),
(138.993,426,o),
(206,426,cs),
(278.609,426,o),
(311.607,390.216,o),
(325,342,cs),
(328.333,332,o),
(330.167,323.5,o),
(330.5,316.5,cs),
(330.833,309.5,o),
(331.333,303.333,o),
(332,298,cs),
(333.333,287.333,o),
(337,273,o),
(349,273,cs),
(361,273,o),
(364,287,o),
(364,299,cs),
(364,306.333,o),
(364.5,323.167,o),
(365.5,349.5,cs),
(366.5,375.833,o),
(367,409,o),
(367,449,cs),
(367,463.667,o),
(361,475,o),
(349,475,cs),
(343.667,475,o),
(339.667,472.667,o),
(337,468,cs),
(334.333,463.333,o),
(333,454.333,o),
(333,441,cs),
(333,430.333,o),
(333.667,409.333,o),
(335,392,c),
(316.003,423.662,o),
(285.892,457,o),
(210,457,cs),
(129.93,457,o),
(51,417.885,o),
(51,323,cs),
(51,247,o),
(100,212.667,o),
(184,194,cs),
(277.323,173.262,o),
(334,158.74,o),
(334,98,cs),
(334,29.139,o),
(264.662,8,o),
(216,8,cs),
(174.667,8,o),
(135.667,18,o),
(105,46,cs),
(79.667,68.667,o),
(74.667,89.333,o),
(72,136,cs),
(70,159.333,o),
(64,171,o),
(54,171,cs),
(44.667,171,o),
(40,160.333,o),
(40,139,cs),
(40,127,o),
(40.667,113,o),
(42,97,cs),
(43.333,81,o),
(44,66.667,o),
(44,54,cs),
(44,44.667,o),
(43.667,33.667,o),
(43,21,cs),
(42.333,8.333,o),
(42,-0.667,o),
(42,-6,cs),
(42,-24.667,o),
(48.667,-30,o),
(58,-30,cs)
);
},
{
closed = 1;
nodes = (
(228.852,510,o),
(332,603.671,o),
(332,629,cs),
(332,636.333,o),
(329.333,640,o),
(324,640,cs),
(309.302,640,o),
(280.411,607.937,o),
(204,554,c),
(167.597,579.696,o),
(98.139,640,o),
(85,640,cs),
(79.667,640,o),
(77,636.333,o),
(77,629,cs),
(77,604.067,o),
(180.626,510,o),
(204,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
19 1 1 0 72 1 8 9 43 24 2 5 4 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
2 11 2 0 1 0 106 0 1 7 1 106 0 9 9 6 83 0 6 6 23 67 0 8 8 7 83 0 7 7 23 67 0 5 5 10 83 0 10 10 21 67 0 4 4 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
2 11 2 0 1 0 106 0 1 7 1 106 0 6 0 9 8 6 9 91 0 7 0 8 4 7 8 91 0 5 5 10 83 0 10 10 21 67 0 4 4 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
2 11 2 0 1 0 106 0 1 7 1 106 0 6 0 9 8 6 9 91 0 7 0 8 4 7 8 91 0 4 0 3 4 3 87 0 5 5 10 83 0 10 10 21 10 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 119 117 99 97 88 86 79 77 68 66 50 48 42 40 31 29 15 13 8 6 0 23 1 23 12 15
CALL[ ]	/* CallFunction */";
};
width = 412;
}
);
note = scaron;
unicode = 353;
},
{
glyphname = scedilla;
kernLeft = s;
kernRight = s;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(147.667,-19.667,o),
(192.667,-27,o),
(238,-27,cs),
(326.449,-27,o),
(412,8.488,o),
(412,102,cs),
(412,201.604,o),
(314.892,217.322,o),
(223,244,cs),
(189.896,254.186,o),
(139,269.729,o),
(139,325,cs),
(139,358.333,o),
(158.333,384,o),
(217,384,cs),
(271.667,384,o),
(295,360.667,o),
(307,342,cs),
(317.667,327.333,o),
(328.667,304,o),
(334,280,cs),
(336.667,265.333,o),
(352.667,250,o),
(370,250,cs),
(392.667,250,o),
(399.333,266.333,o),
(402,289,cs),
(405.236,311.649,o),
(408,381.516,o),
(408,422,cs),
(408,468.667,o),
(393.333,475,o),
(372,475,cs),
(353.333,475,o),
(332,469.333,o),
(332,436,cs),
(332,432,o),
(332.667,409.333,o),
(334,392,c),
(314.775,424.042,o),
(285.627,457,o),
(209,457,cs),
(130.045,457,o),
(52,418.344,o),
(52,320,cs),
(52,209.776,o),
(146.085,180.134,o),
(216,164,cs),
(299.483,142.533,o),
(322,120.093,o),
(322,91,cs),
(322,56.333,o),
(284,44,o),
(240,44,cs),
(181.333,44,o),
(146.333,64.333,o),
(129,91,cs),
(110.333,121.667,o),
(107.667,140.667,o),
(105,154,cs),
(102.333,167.333,o),
(89.667,181,o),
(75,181,cs),
(48.333,181,o),
(35,170,o),
(35,148,cs),
(35,132,o),
(35.667,117.333,o),
(37,104,cs),
(38.333,90.667,o),
(39,77.333,o),
(39,64,cs),
(39,54.667,o),
(38.667,45.333,o),
(38,36,cs),
(37.333,26.667,o),
(37,16,o),
(37,4,cs),
(37,-14.667,o),
(41.333,-30,o),
(72,-30,cs),
(96,-30,o),
(110,-16.333,o),
(110,-3,cs),
(110,1,o),
(110,5,o),
(110,9,cs),
(110,13,o),
(109.667,17.667,o),
(109,23,c)
);
},
{
closed = 1;
nodes = (
(163,-138.971,o),
(199,-140.557,o),
(199,-158,cs),
(199,-178,o),
(196.5,-192.833,o),
(191.5,-202.5,cs),
(186.5,-212.167,o),
(184,-220.333,o),
(184,-227,cs),
(184,-249.667,o),
(203.333,-250,o),
(210,-250,cs),
(228.413,-250,o),
(291,-207.536,o),
(291,-131,cs),
(291,-73.667,o),
(255,-50,o),
(223,-50,cs),
(179,-50,o),
(163,-80,o),
(163,-108,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
49 1 6 3 0 1 0 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 6 6 3 83 0 3 3 23 67 0 5 5 4 83 0 4 4 23 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 8 0 9 8 9 87 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 7 1 0 8 2 0 91 0 8 9 9 8 79 0 8 8 9 83 0 9 8 9 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
108 106 100 98 94 92 76 74 67 65 56 54 45 43 39 41 37 10 18
CALL[ ]	/* CallFunction */";
};
width = 451;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(125.163,-12.641,o),
(185.815,-24,o),
(234,-24,cs),
(297.581,-24,o),
(399,-4.838,o),
(399,99,cs),
(399,188.135,o),
(322.808,208.565,o),
(225,235,cs),
(167.115,250.1,o),
(114,267.27,o),
(114,322,cs),
(114,366,o),
(146.333,396,o),
(209,396,cs),
(271.667,396,o),
(302,366.667,o),
(318,336,cs),
(322.728,328.12,o),
(330,294.503,o),
(330,284,c),
(332.667,274.667,o),
(339.667,259,o),
(357,259,cs),
(369,259,o),
(387.667,266.333,o),
(389,285,cs),
(389,298.106,o),
(394,346.955,o),
(394,432,cs),
(394,466.667,o),
(376.667,475,o),
(362,475,cs),
(350,475,o),
(330,468.667,o),
(330,438,cs),
(330,431.333,o),
(330.667,409.333,o),
(332,392,c),
(312.96,423.733,o),
(282.843,457,o),
(206,457,cs),
(126.478,457,o),
(48,419.064,o),
(48,320,cs),
(48,218.207,o),
(130.803,191.661,o),
(203,175,cs),
(281.667,155,o),
(331,140.333,o),
(331,95,cs),
(331,48.749,o),
(277.702,33,o),
(231,33,cs),
(169.311,33,o),
(123.363,64,o),
(107,100,cs),
(103.667,106.667,o),
(101.833,112.833,o),
(101.5,118.5,cs),
(101.167,124.167,o),
(100.333,131.667,o),
(99,141,cs),
(96.333,165,o),
(90.667,181,o),
(64,181,cs),
(38.667,181,o),
(37,167.333,o),
(37,146,cs),
(37,131.333,o),
(37.667,115.667,o),
(39,99,cs),
(40.333,82.333,o),
(41,67.333,o),
(41,54,cs),
(41,44.667,o),
(40.667,33.5,o),
(40,20.5,cs),
(39.333,7.5,o),
(39,-0.667,o),
(39,-4,cs),
(39,-22.63,o),
(56.392,-30,o),
(72,-30,cs),
(92,-30,o),
(102,-15,o),
(102,5,cs),
(102,9,o),
(102,13.333,o),
(102,18,cs),
(102,22.667,o),
(101.667,27.667,o),
(101,33,c)
);
},
{
closed = 1;
nodes = (
(146,-145,o),
(182,-144,o),
(182,-161,cs),
(182,-178,o),
(180,-191,o),
(176,-199,cs),
(171,-208,o),
(169,-215,o),
(169,-221,cs),
(169,-238,o),
(183,-240,o),
(190,-240,cs),
(214,-240,o),
(255,-190,o),
(255,-136,cs),
(255,-83,o),
(225,-64,o),
(198,-64,cs),
(161,-64,o),
(146,-89,o),
(146,-113,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
75 69 55 3 5 6 1 66 1 1 2 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 6 6 3 83 0 3 3 23 67 0 5 5 4 83 0 4 4 23 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 8 0 9 8 9 87 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 7 1 0 8 2 0 91 0 8 9 9 8 79 0 8 8 9 83 0 9 8 9 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 0 0 8 1 0 91 0 8 0 9 8 9 87 0 2 2 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 2 0 7 0 2 7 91 0 1 0 0 8 1 0 91 0 8 9 9 8 79 0 8 8 9 83 0 9 8 9 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
118 116 110 108 102 100 84 82 73 71 62 60 51 49 41 44 38 10 29
CALL[ ]	/* CallFunction */";
};
width = 435;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(72.667,-30,o),
(75,-15,o),
(75,5,cs),
(75,9,o),
(75,14,o),
(75,20,cs),
(75,26,o),
(74.667,31.667,o),
(74,37,c),
(93.103,1.523,o),
(160.703,-23,o),
(212,-23,cs),
(256.341,-23,o),
(372,-7.324,o),
(372,103,cs),
(372,179.45,o),
(314.58,199.011,o),
(228,220,cs),
(131.045,241.546,o),
(87,254.377,o),
(87,323,cs),
(87,398.084,o),
(138.993,426,o),
(206,426,cs),
(278.609,426,o),
(311.607,390.216,o),
(325,342,cs),
(328.333,332,o),
(330.167,323.5,o),
(330.5,316.5,cs),
(330.833,309.5,o),
(331.333,303.333,o),
(332,298,cs),
(333.333,287.333,o),
(337,273,o),
(349,273,cs),
(361,273,o),
(364,287,o),
(364,299,cs),
(364,306.333,o),
(364.5,323.167,o),
(365.5,349.5,cs),
(366.5,375.833,o),
(367,409,o),
(367,449,cs),
(367,463.667,o),
(361,475,o),
(349,475,cs),
(343.667,475,o),
(339.667,472.667,o),
(337,468,cs),
(334.333,463.333,o),
(333,454.333,o),
(333,441,cs),
(333,430.333,o),
(333.667,409.333,o),
(335,392,c),
(316.003,423.662,o),
(285.892,457,o),
(210,457,cs),
(129.93,457,o),
(51,417.885,o),
(51,323,cs),
(51,247,o),
(100,212.667,o),
(184,194,cs),
(277.323,173.262,o),
(334,158.74,o),
(334,98,cs),
(334,29.139,o),
(264.662,8,o),
(216,8,cs),
(174.667,8,o),
(135.667,18,o),
(105,46,cs),
(79.667,68.667,o),
(74.667,89.333,o),
(72,136,cs),
(70,159.333,o),
(64,171,o),
(54,171,cs),
(44.667,171,o),
(40,160.333,o),
(40,139,cs),
(40,127,o),
(40.667,113,o),
(42,97,cs),
(43.333,81,o),
(44,66.667,o),
(44,54,cs),
(44,44.667,o),
(43.667,33.667,o),
(43,21,cs),
(42.333,8.333,o),
(42,-0.667,o),
(42,-6,cs),
(42,-24.667,o),
(48.667,-30,o),
(58,-30,cs)
);
},
{
closed = 1;
nodes = (
(224.943,-214,o),
(241,-164.312,o),
(241,-135,cs),
(241,-89.667,o),
(219,-78,o),
(199,-78,cs),
(172.333,-78,o),
(159,-94.667,o),
(159,-112,cs),
(159,-144.202,o),
(195,-138.69,o),
(195,-156,cs),
(195,-162.667,o),
(193.167,-170.833,o),
(189.5,-180.5,cs),
(185.833,-190.167,o),
(184,-197.333,o),
(184,-202,cs),
(184,-208.667,o),
(191.333,-214,o),
(198,-214,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
70 1 7 8 41 22 2 4 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 8 8 5 83 0 5 5 23 67 0 7 7 6 83 0 6 6 23 67 0 4 4 9 83 0 9 9 21 67 0 3 3 2 83 0 2 2 21 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 5 0 8 7 5 8 91 0 6 0 7 3 6 7 91 0 4 4 9 83 0 9 9 21 67 0 3 3 2 83 0 2 2 21 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 5 0 8 7 5 8 91 0 6 0 7 3 6 7 91 0 3 0 2 0 3 2 91 0 4 4 9 83 0 9 9 21 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 5 0 8 7 5 8 91 0 6 0 7 3 6 7 91 0 3 0 2 0 3 2 91 0 0 0 1 0 1 87 0 4 4 9 83 0 9 9 21 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
117 115 97 95 86 84 77 75 66 64 38 41 47 38 34 10 20
CALL[ ]	/* CallFunction */";
};
width = 412;
}
);
note = uni015F;
unicode = 351;
},
{
glyphname = scircumflex;
kernLeft = s;
kernRight = s;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(316.333,510,o),
(320,520.333,o),
(320,531,cs),
(320,571.963,o),
(210.877,664,o),
(187,664,cs),
(176,664,o),
(140.897,638.643,o),
(114,613.5,cs),
(83.333,584.833,o),
(55,549.333,o),
(55,524,cs),
(55,517.333,o),
(60,510,o),
(68,510,cs),
(80.064,510,o),
(137.718,545.91,o),
(187,572,c),
(258.614,534.087,o),
(295.803,510,o),
(307,510,cs)
);
},
{
closed = 1;
nodes = (
(147.667,-19.667,o),
(192.667,-27,o),
(238,-27,cs),
(326.449,-27,o),
(412,8.488,o),
(412,102,cs),
(412,201.604,o),
(314.892,217.322,o),
(223,244,cs),
(189.896,254.186,o),
(139,269.729,o),
(139,325,cs),
(139,358.333,o),
(158.333,384,o),
(217,384,cs),
(271.667,384,o),
(295,360.667,o),
(307,342,cs),
(317.667,327.333,o),
(328.667,304,o),
(334,280,cs),
(336.667,265.333,o),
(352.667,250,o),
(370,250,cs),
(392.667,250,o),
(399.333,266.333,o),
(402,289,cs),
(405.236,311.649,o),
(408,381.516,o),
(408,422,cs),
(408,468.667,o),
(393.333,475,o),
(372,475,cs),
(353.333,475,o),
(332,469.333,o),
(332,436,cs),
(332,432,o),
(332.667,409.333,o),
(334,392,c),
(314.775,424.042,o),
(285.627,457,o),
(209,457,cs),
(130.045,457,o),
(52,418.344,o),
(52,320,cs),
(52,209.776,o),
(146.085,180.134,o),
(216,164,cs),
(299.483,142.533,o),
(322,120.093,o),
(322,91,cs),
(322,56.333,o),
(284,44,o),
(240,44,cs),
(181.333,44,o),
(146.333,64.333,o),
(129,91,cs),
(110.333,121.667,o),
(107.667,140.667,o),
(105,154,cs),
(102.333,167.333,o),
(89.667,181,o),
(75,181,cs),
(48.333,181,o),
(35,170,o),
(35,148,cs),
(35,132,o),
(35.667,117.333,o),
(37,104,cs),
(38.333,90.667,o),
(39,77.333,o),
(39,64,cs),
(39,54.667,o),
(38.667,45.333,o),
(38,36,cs),
(37.333,26.667,o),
(37,16,o),
(37,4,cs),
(37,-14.667,o),
(41.333,-30,o),
(72,-30,cs),
(96,-30,o),
(110,-16.333,o),
(110,-3,cs),
(110,1,o),
(110,5,o),
(110,9,cs),
(110,13,o),
(109.667,17.667,o),
(109,23,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
5 1 0 2 75 1 9 6 26 1 3 5 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 2 0 2 106 1 11 2 0 7 0 106 0 9 9 6 83 0 6 6 23 67 0 8 8 7 83 0 7 7 23 67 0 4 4 3 83 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 2 0 2 106 1 11 2 0 7 0 106 0 6 0 9 8 6 9 92 0 7 0 8 4 7 8 91 0 4 4 3 83 10 1 3 3 21 67 0 5 5 3 83 10 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 2 0 2 106 1 11 2 0 7 0 106 0 6 0 9 8 6 9 92 0 7 0 8 4 7 8 91 0 4 5 3 4 79 0 5 3 3 5 79 0 5 5 3 83 10 1 3 5 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 120 118 102 100 93 91 82 80 71 69 53 51 44 42 33 31 19 17 11 9 0 25 1 25 12 15
CALL[ ]	/* CallFunction */";
};
width = 451;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(125.163,-12.641,o),
(185.815,-24,o),
(234,-24,cs),
(297.581,-24,o),
(399,-4.838,o),
(399,99,cs),
(399,188.135,o),
(322.808,208.565,o),
(225,235,cs),
(167.115,250.1,o),
(114,267.27,o),
(114,322,cs),
(114,366,o),
(146.333,396,o),
(209,396,cs),
(271.667,396,o),
(302,366.667,o),
(318,336,cs),
(322.728,328.12,o),
(330,294.503,o),
(330,284,c),
(332.667,274.667,o),
(339.667,259,o),
(357,259,cs),
(369,259,o),
(387.667,266.333,o),
(389,285,cs),
(389,298.106,o),
(394,346.955,o),
(394,432,cs),
(394,466.667,o),
(376.667,475,o),
(362,475,cs),
(350,475,o),
(330,468.667,o),
(330,438,cs),
(330,431.333,o),
(330.667,409.333,o),
(332,392,c),
(312.96,423.733,o),
(282.843,457,o),
(206,457,cs),
(126.478,457,o),
(48,419.064,o),
(48,320,cs),
(48,218.207,o),
(130.803,191.661,o),
(203,175,cs),
(281.667,155,o),
(331,140.333,o),
(331,95,cs),
(331,48.749,o),
(277.702,33,o),
(231,33,cs),
(169.311,33,o),
(123.363,64,o),
(107,100,cs),
(103.667,106.667,o),
(101.833,112.833,o),
(101.5,118.5,cs),
(101.167,124.167,o),
(100.333,131.667,o),
(99,141,cs),
(96.333,165,o),
(90.667,181,o),
(64,181,cs),
(38.667,181,o),
(37,167.333,o),
(37,146,cs),
(37,131.333,o),
(37.667,115.667,o),
(39,99,cs),
(40.333,82.333,o),
(41,67.333,o),
(41,54,cs),
(41,44.667,o),
(40.667,33.5,o),
(40,20.5,cs),
(39.333,7.5,o),
(39,-0.667,o),
(39,-4,cs),
(39,-22.63,o),
(56.392,-30,o),
(72,-30,cs),
(92,-30,o),
(102,-15,o),
(102,5,cs),
(102,9,o),
(102,13.333,o),
(102,18,cs),
(102,22.667,o),
(101.667,27.667,o),
(101,33,c)
);
},
{
closed = 1;
nodes = (
(317,510,o),
(320,518,o),
(320,527,cs),
(320,562,o),
(214,655,o),
(189,655,cs),
(167,655,o),
(59,564,o),
(59,523,cs),
(59,514,o),
(63,510,o),
(70,510,cs),
(85,510,o),
(116,538,o),
(189,581,c),
(202,573,o),
(296,510,o),
(309,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
111 1 8 10 75 69 55 3 5 6 2 66 1 1 2 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 10 8 10 106 9 11 2 8 4 8 106 0 6 6 3 83 0 3 3 23 67 0 5 5 4 83 0 4 4 23 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 10 8 10 106 9 11 2 8 4 8 106 0 3 0 6 5 3 6 92 0 4 0 5 1 4 5 91 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 10 8 10 106 9 11 2 8 4 8 106 0 3 0 6 5 3 6 92 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 0 0 2 79 0 2 2 0 83 7 1 0 2 0 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 10 8 10 106 9 11 2 8 4 8 106 0 3 0 6 5 3 6 92 0 4 0 5 1 4 5 91 0 1 0 0 1 0 87 0 2 2 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 10 8 10 106 9 11 2 8 4 8 106 0 3 0 6 5 3 6 92 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 0 7 0 2 7 91 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
107 106 124 122 117 115 106 130 107 130 102 100 84 82 73 71 62 60 51 49 41 44 38 12 29
CALL[ ]	/* CallFunction */";
};
width = 435;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(72.667,-30,o),
(75,-15,o),
(75,5,cs),
(75,9,o),
(75,14,o),
(75,20,cs),
(75,26,o),
(74.667,31.667,o),
(74,37,c),
(93.103,1.523,o),
(160.703,-23,o),
(212,-23,cs),
(256.341,-23,o),
(372,-7.324,o),
(372,103,cs),
(372,179.45,o),
(314.58,199.011,o),
(228,220,cs),
(131.045,241.546,o),
(87,254.377,o),
(87,323,cs),
(87,398.084,o),
(138.993,426,o),
(206,426,cs),
(278.609,426,o),
(311.607,390.216,o),
(325,342,cs),
(328.333,332,o),
(330.167,323.5,o),
(330.5,316.5,cs),
(330.833,309.5,o),
(331.333,303.333,o),
(332,298,cs),
(333.333,287.333,o),
(337,273,o),
(349,273,cs),
(361,273,o),
(364,287,o),
(364,299,cs),
(364,306.333,o),
(364.5,323.167,o),
(365.5,349.5,cs),
(366.5,375.833,o),
(367,409,o),
(367,449,cs),
(367,463.667,o),
(361,475,o),
(349,475,cs),
(343.667,475,o),
(339.667,472.667,o),
(337,468,cs),
(334.333,463.333,o),
(333,454.333,o),
(333,441,cs),
(333,430.333,o),
(333.667,409.333,o),
(335,392,c),
(316.003,423.662,o),
(285.892,457,o),
(210,457,cs),
(129.93,457,o),
(51,417.885,o),
(51,323,cs),
(51,247,o),
(100,212.667,o),
(184,194,cs),
(277.323,173.262,o),
(334,158.74,o),
(334,98,cs),
(334,29.139,o),
(264.662,8,o),
(216,8,cs),
(174.667,8,o),
(135.667,18,o),
(105,46,cs),
(79.667,68.667,o),
(74.667,89.333,o),
(72,136,cs),
(70,159.333,o),
(64,171,o),
(54,171,cs),
(44.667,171,o),
(40,160.333,o),
(40,139,cs),
(40,127,o),
(40.667,113,o),
(42,97,cs),
(43.333,81,o),
(44,66.667,o),
(44,54,cs),
(44,44.667,o),
(43.667,33.667,o),
(43,21,cs),
(42.333,8.333,o),
(42,-0.667,o),
(42,-6,cs),
(42,-24.667,o),
(48.667,-30,o),
(58,-30,cs)
);
},
{
closed = 1;
nodes = (
(86.084,510,o),
(138.433,558.894,o),
(191,596,c),
(267.411,542.063,o),
(296.302,510,o),
(311,510,cs),
(316.333,510,o),
(319,513.667,o),
(319,521,cs),
(319,546.329,o),
(215.852,640,o),
(191,640,cs),
(167.626,640,o),
(64,545.933,o),
(64,521,cs),
(64,513.667,o),
(66.667,510,o),
(72,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
5 1 0 2 72 1 8 9 43 24 2 5 4 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 2 0 2 106 1 11 2 0 7 0 106 0 9 9 6 83 0 6 6 23 67 0 8 8 7 83 0 7 7 23 67 0 5 5 10 83 0 10 10 21 67 0 4 4 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 2 0 2 106 1 11 2 0 7 0 106 0 6 0 9 8 6 9 92 0 7 0 8 4 7 8 91 0 5 5 10 83 0 10 10 21 67 0 4 4 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 2 0 2 106 1 11 2 0 7 0 106 0 6 0 9 8 6 9 92 0 7 0 8 4 7 8 91 0 4 0 3 4 3 87 0 5 5 10 83 0 10 10 21 10 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 119 117 99 97 88 86 79 77 68 66 50 48 42 40 31 29 18 16 11 9 0 23 1 23 12 15
CALL[ ]	/* CallFunction */";
};
width = 412;
}
);
note = scircumflex;
unicode = 349;
},
{
glyphname = scommaaccent;
kernLeft = s;
kernRight = s;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(147.667,-19.667,o),
(192.667,-27,o),
(238,-27,cs),
(326.449,-27,o),
(412,8.488,o),
(412,102,cs),
(412,201.604,o),
(314.892,217.322,o),
(223,244,cs),
(189.896,254.186,o),
(139,269.729,o),
(139,325,cs),
(139,358.333,o),
(158.333,384,o),
(217,384,cs),
(271.667,384,o),
(295,360.667,o),
(307,342,cs),
(317.667,327.333,o),
(328.667,304,o),
(334,280,cs),
(336.667,265.333,o),
(352.667,250,o),
(370,250,cs),
(392.667,250,o),
(399.333,266.333,o),
(402,289,cs),
(405.236,311.649,o),
(408,381.516,o),
(408,422,cs),
(408,468.667,o),
(393.333,475,o),
(372,475,cs),
(353.333,475,o),
(332,469.333,o),
(332,436,cs),
(332,432,o),
(332.667,409.333,o),
(334,392,c),
(314.775,424.042,o),
(285.627,457,o),
(209,457,cs),
(130.045,457,o),
(52,418.344,o),
(52,320,cs),
(52,209.776,o),
(146.085,180.134,o),
(216,164,cs),
(299.483,142.533,o),
(322,120.093,o),
(322,91,cs),
(322,56.333,o),
(284,44,o),
(240,44,cs),
(181.333,44,o),
(146.333,64.333,o),
(129,91,cs),
(110.333,121.667,o),
(107.667,140.667,o),
(105,154,cs),
(102.333,167.333,o),
(89.667,181,o),
(75,181,cs),
(48.333,181,o),
(35,170,o),
(35,148,cs),
(35,132,o),
(35.667,117.333,o),
(37,104,cs),
(38.333,90.667,o),
(39,77.333,o),
(39,64,cs),
(39,54.667,o),
(38.667,45.333,o),
(38,36,cs),
(37.333,26.667,o),
(37,16,o),
(37,4,cs),
(37,-14.667,o),
(41.333,-30,o),
(72,-30,cs),
(96,-30,o),
(110,-16.333,o),
(110,-3,cs),
(110,1,o),
(110,5,o),
(110,9,cs),
(110,13,o),
(109.667,17.667,o),
(109,23,c)
);
},
{
closed = 1;
nodes = (
(160,-138.971,o),
(196,-140.557,o),
(196,-158,cs),
(196,-178,o),
(193.5,-192.833,o),
(188.5,-202.5,cs),
(183.5,-212.167,o),
(181,-220.333,o),
(181,-227,cs),
(181,-249.667,o),
(200.333,-250,o),
(207,-250,cs),
(225.413,-250,o),
(288,-207.536,o),
(288,-131,cs),
(288,-73.667,o),
(252,-50,o),
(220,-50,cs),
(176,-50,o),
(160,-80,o),
(160,-108,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
49 1 6 3 0 1 0 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 6 6 3 83 0 3 3 23 67 0 5 5 4 83 0 4 4 23 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 8 0 9 8 9 87 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 7 1 0 8 2 0 91 0 8 9 9 8 79 0 8 8 9 83 0 9 8 9 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
108 106 100 98 94 92 76 74 67 65 56 54 45 43 39 41 37 10 18
CALL[ ]	/* CallFunction */";
};
width = 451;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(125.163,-12.641,o),
(185.815,-24,o),
(234,-24,cs),
(297.581,-24,o),
(399,-4.838,o),
(399,99,cs),
(399,188.135,o),
(322.808,208.565,o),
(225,235,cs),
(167.115,250.1,o),
(114,267.27,o),
(114,322,cs),
(114,366,o),
(146.333,396,o),
(209,396,cs),
(271.667,396,o),
(302,366.667,o),
(318,336,cs),
(322.728,328.12,o),
(330,294.503,o),
(330,284,c),
(332.667,274.667,o),
(339.667,259,o),
(357,259,cs),
(369,259,o),
(387.667,266.333,o),
(389,285,cs),
(389,298.106,o),
(394,346.955,o),
(394,432,cs),
(394,466.667,o),
(376.667,475,o),
(362,475,cs),
(350,475,o),
(330,468.667,o),
(330,438,cs),
(330,431.333,o),
(330.667,409.333,o),
(332,392,c),
(312.96,423.733,o),
(282.843,457,o),
(206,457,cs),
(126.478,457,o),
(48,419.064,o),
(48,320,cs),
(48,218.207,o),
(130.803,191.661,o),
(203,175,cs),
(281.667,155,o),
(331,140.333,o),
(331,95,cs),
(331,48.749,o),
(277.702,33,o),
(231,33,cs),
(169.311,33,o),
(123.363,64,o),
(107,100,cs),
(103.667,106.667,o),
(101.833,112.833,o),
(101.5,118.5,cs),
(101.167,124.167,o),
(100.333,131.667,o),
(99,141,cs),
(96.333,165,o),
(90.667,181,o),
(64,181,cs),
(38.667,181,o),
(37,167.333,o),
(37,146,cs),
(37,131.333,o),
(37.667,115.667,o),
(39,99,cs),
(40.333,82.333,o),
(41,67.333,o),
(41,54,cs),
(41,44.667,o),
(40.667,33.5,o),
(40,20.5,cs),
(39.333,7.5,o),
(39,-0.667,o),
(39,-4,cs),
(39,-22.63,o),
(56.392,-30,o),
(72,-30,cs),
(92,-30,o),
(102,-15,o),
(102,5,cs),
(102,9,o),
(102,13.333,o),
(102,18,cs),
(102,22.667,o),
(101.667,27.667,o),
(101,33,c)
);
},
{
closed = 1;
nodes = (
(146,-145,o),
(182,-144,o),
(182,-161,cs),
(182,-178,o),
(180,-191,o),
(176,-199,cs),
(171,-208,o),
(169,-215,o),
(169,-221,cs),
(169,-238,o),
(183,-240,o),
(190,-240,cs),
(214,-240,o),
(255,-190,o),
(255,-136,cs),
(255,-83,o),
(225,-64,o),
(198,-64,cs),
(161,-64,o),
(146,-89,o),
(146,-113,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
75 69 55 3 5 6 1 66 1 1 2 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 6 6 3 83 0 3 3 23 67 0 5 5 4 83 0 4 4 23 67 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 67 0 8 8 9 83 0 9 9 25 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 8 0 9 8 9 87 0 1 1 0 83 7 1 0 0 21 67 0 2 2 0 83 7 1 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 2 0 1 79 0 2 7 1 0 8 2 0 91 0 8 9 9 8 79 0 8 8 9 83 0 9 8 9 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 1 0 0 8 1 0 91 0 8 0 9 8 9 87 0 2 2 7 83 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 3 0 6 5 3 6 91 0 4 0 5 1 4 5 91 0 2 0 7 0 2 7 91 0 1 0 0 8 1 0 91 0 8 9 9 8 79 0 8 8 9 83 0 9 8 9 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
118 116 110 108 102 100 84 82 73 71 62 60 51 49 41 44 38 10 29
CALL[ ]	/* CallFunction */";
};
width = 435;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(72.667,-30,o),
(75,-15,o),
(75,5,cs),
(75,9,o),
(75,14,o),
(75,20,cs),
(75,26,o),
(74.667,31.667,o),
(74,37,c),
(93.103,1.523,o),
(160.703,-23,o),
(212,-23,cs),
(256.341,-23,o),
(372,-7.324,o),
(372,103,cs),
(372,179.45,o),
(314.58,199.011,o),
(228,220,cs),
(131.045,241.546,o),
(87,254.377,o),
(87,323,cs),
(87,398.084,o),
(138.993,426,o),
(206,426,cs),
(278.609,426,o),
(311.607,390.216,o),
(325,342,cs),
(328.333,332,o),
(330.167,323.5,o),
(330.5,316.5,cs),
(330.833,309.5,o),
(331.333,303.333,o),
(332,298,cs),
(333.333,287.333,o),
(337,273,o),
(349,273,cs),
(361,273,o),
(364,287,o),
(364,299,cs),
(364,306.333,o),
(364.5,323.167,o),
(365.5,349.5,cs),
(366.5,375.833,o),
(367,409,o),
(367,449,cs),
(367,463.667,o),
(361,475,o),
(349,475,cs),
(343.667,475,o),
(339.667,472.667,o),
(337,468,cs),
(334.333,463.333,o),
(333,454.333,o),
(333,441,cs),
(333,430.333,o),
(333.667,409.333,o),
(335,392,c),
(316.003,423.662,o),
(285.892,457,o),
(210,457,cs),
(129.93,457,o),
(51,417.885,o),
(51,323,cs),
(51,247,o),
(100,212.667,o),
(184,194,cs),
(277.323,173.262,o),
(334,158.74,o),
(334,98,cs),
(334,29.139,o),
(264.662,8,o),
(216,8,cs),
(174.667,8,o),
(135.667,18,o),
(105,46,cs),
(79.667,68.667,o),
(74.667,89.333,o),
(72,136,cs),
(70,159.333,o),
(64,171,o),
(54,171,cs),
(44.667,171,o),
(40,160.333,o),
(40,139,cs),
(40,127,o),
(40.667,113,o),
(42,97,cs),
(43.333,81,o),
(44,66.667,o),
(44,54,cs),
(44,44.667,o),
(43.667,33.667,o),
(43,21,cs),
(42.333,8.333,o),
(42,-0.667,o),
(42,-6,cs),
(42,-24.667,o),
(48.667,-30,o),
(58,-30,cs)
);
},
{
closed = 1;
nodes = (
(224.943,-214,o),
(241,-164.312,o),
(241,-135,cs),
(241,-89.667,o),
(219,-78,o),
(199,-78,cs),
(172.333,-78,o),
(159,-94.667,o),
(159,-112,cs),
(159,-144.202,o),
(195,-138.69,o),
(195,-156,cs),
(195,-162.667,o),
(193.167,-170.833,o),
(189.5,-180.5,cs),
(185.833,-190.167,o),
(184,-197.333,o),
(184,-202,cs),
(184,-208.667,o),
(191.333,-214,o),
(198,-214,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
70 1 7 8 41 22 2 4 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 8 8 5 83 0 5 5 23 67 0 7 7 6 83 0 6 6 23 67 0 4 4 9 83 0 9 9 21 67 0 3 3 2 83 0 2 2 21 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 5 0 8 7 5 8 91 0 6 0 7 3 6 7 91 0 4 4 9 83 0 9 9 21 67 0 3 3 2 83 0 2 2 21 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 5 0 8 7 5 8 91 0 6 0 7 3 6 7 91 0 3 0 2 0 3 2 91 0 4 4 9 83 0 9 9 21 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 5 0 8 7 5 8 91 0 6 0 7 3 6 7 91 0 3 0 2 0 3 2 91 0 0 0 1 0 1 87 0 4 4 9 83 0 9 9 21 9 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
117 115 97 95 86 84 77 75 66 64 38 41 47 38 34 10 20
CALL[ ]	/* CallFunction */";
};
width = 412;
}
);
note = uni0219;
unicode = 537;
},
{
glyphname = germandbls;
kernLeft = germandbls;
kernRight = germandbls;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(351,640.059,o),
(316.922,593.922,o),
(277.5,554.5,cs),
(239.611,516.611,o),
(204,476.228,o),
(204,429,cs),
(204,336.243,o),
(297.533,279.328,o),
(339,257,cs),
(383.667,231.667,o),
(418.667,208.333,o),
(444,187,cs),
(469.333,165.667,o),
(482,148.667,o),
(482,136,cs),
(482,101.333,o),
(454.667,78,o),
(416,78,cs),
(365.333,78,o),
(330.333,90,o),
(309,110,cs),
(306.333,112.667,o),
(291.667,125,o),
(285,141,cs),
(274.333,166.333,o),
(265.667,181,o),
(235,181,cs),
(220.333,181,o),
(203,166.667,o),
(203,148,cs),
(203,134,o),
(203.833,120.167,o),
(205.5,106.5,cs),
(207.167,92.833,o),
(208,79.667,o),
(208,67,cs),
(208,57.667,o),
(207.5,48.5,o),
(206.5,39.5,cs),
(205.5,30.5,o),
(205,22.667,o),
(205,16,cs),
(205,1.333,o),
(220.333,-13,o),
(239,-13,cs),
(273.667,-13,o),
(286.667,7.333,o),
(288,50,c),
(310.177,16.735,o),
(369.377,0,o),
(413,0,cs),
(465.952,0,o),
(567,27.462,o),
(567,114,cs),
(567,195.138,o),
(475.097,262.031,o),
(405,300,cs),
(343.849,331.905,o),
(292,368.058,o),
(292,432,cs),
(292,510.751,o),
(443,575.991,o),
(443,698,cs),
(443,734.252,o),
(411.155,825,o),
(306,825,cs),
(186.89,825,o),
(124.589,760.075,o),
(97,698,cs),
(63.51,622.647,o),
(59,546.339,o),
(59,491,cs),
(59,418.594,o),
(61,332.897,o),
(61,263,cs),
(61,193.667,o),
(60,139.667,o),
(56,77,cs),
(54.667,62.333,o),
(53,56,o),
(33,56,cs),
(18.333,56,o),
(-7,50.333,o),
(-7,29,cs),
(-7,7.667,o),
(16.333,0,o),
(35,0,cs),
(35.205,0,o),
(91.415,3,o),
(127,3,cs),
(140.333,3,o),
(153,7.333,o),
(153,30,cs),
(153,484,ls),
(153,531.578,o),
(152.253,589.76,o),
(172.5,650.5,cs),
(189.901,702.703,o),
(228.846,751,o),
(311,751,cs),
(337.667,751,o),
(351,724,o),
(351,700,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
28 1 2 7 73 1 1 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 0 0 3 83 0 3 3 12 67 0 6 6 1 83 5 4 2 1 1 13 67 0 7 7 1 83 5 4 2 1 1 13 67 0 2 2 1 83 5 4 2 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 0 3 83 0 3 3 12 67 0 7 7 1 83 4 1 1 1 13 67 0 2 2 1 83 4 1 1 1 13 67 0 6 6 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 0 0 3 83 0 3 3 14 67 0 7 7 1 83 4 1 1 1 13 67 0 2 2 1 83 4 1 1 1 13 67 0 6 6 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
98 96 89 87 77 75 69 67 44 42 36 121 34 8 18
CALL[ ]	/* CallFunction */";
};
width = 584;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(368,640.059,o),
(333.922,593.922,o),
(294.5,554.5,cs),
(256.611,516.611,o),
(221,476.228,o),
(221,429,cs),
(221,336.243,o),
(314.533,279.328,o),
(356,257,cs),
(445.333,206.333,o),
(499,165.667,o),
(499,123,cs),
(499,84.333,o),
(462.667,60,o),
(412,60,cs),
(361.333,60,o),
(311.667,78,o),
(289,118,cs),
(285,124.667,o),
(283.667,130.333,o),
(281,141,cs),
(276.333,166.333,o),
(264,179,o),
(244,179,cs),
(230.667,179,o),
(220,166.667,o),
(220,148,cs),
(220,134,o),
(220.833,120.167,o),
(222.5,106.5,cs),
(224.167,92.833,o),
(225,79.667,o),
(225,67,cs),
(225,57.667,o),
(224.5,48.5,o),
(223.5,39.5,cs),
(222.5,30.5,o),
(222,22.667,o),
(222,16,cs),
(222,1.333,o),
(236.333,-11,o),
(247,-11,cs),
(271,-11,o),
(283.333,9.333,o),
(284,50,c),
(306.177,16.735,o),
(365.377,0,o),
(409,0,cs),
(460.664,0,o),
(572,25.687,o),
(572,114,cs),
(572,195.161,o),
(476.764,256.92,o),
(412,292,cs),
(352.758,322.909,o),
(294,368.454,o),
(294,432,cs),
(294,511.867,o),
(439,576.274,o),
(439,698,cs),
(439,736.673,o),
(401.074,825,o),
(302,825,cs),
(192.635,825,o),
(136.034,761.396,o),
(110.5,698,cs),
(79.466,620.949,o),
(76,549.088,o),
(76,491,cs),
(76,418.594,o),
(78,332.897,o),
(78,263,cs),
(78,189.425,o),
(77.072,150.506,o),
(73,65,cs),
(71.667,43.667,o),
(61,44,o),
(29,44,cs),
(14.333,44,o),
(-8,42,o),
(-8,22,cs),
(-8,4.667,o),
(12.333,0,o),
(31,0,cs),
(31.205,0,o),
(87.415,3,o),
(123,3,cs),
(136.333,3,o),
(149,7.333,o),
(149,30,cs),
(149,484,ls),
(149,534.426,o),
(148.227,596.414,o),
(168.5,661.5,cs),
(187.192,721.51,o),
(228.461,769,o),
(307,769,cs),
(349.667,769,o),
(368,732,o),
(368,700,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
75 1 2 7 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 0 3 83 0 3 3 12 67 0 7 7 1 83 4 1 1 1 13 67 0 2 2 1 83 4 1 1 1 13 67 0 6 6 5 83 0 5 5 24 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 0 0 3 83 0 3 3 14 67 0 7 7 1 83 4 1 1 1 13 67 0 2 2 1 83 4 1 1 1 13 67 0 6 6 5 83 0 5 5 24 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
98 96 90 88 78 76 71 69 46 44 36 121 34 8 18
CALL[ ]	/* CallFunction */";
};
width = 583;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(264,-7,o),
(268.667,-2.833,o),
(272,5.5,cs),
(275.333,13.833,o),
(277.333,28.667,o),
(278,50,c),
(300.177,16.735,o),
(359.377,0,o),
(403,0,cs),
(454.664,0,o),
(566,25.687,o),
(566,114,cs),
(566,195.161,o),
(470.764,256.92,o),
(406,292,cs),
(346.758,322.909,o),
(288,368.454,o),
(288,432,cs),
(288,511.867,o),
(433,576.274,o),
(433,698,cs),
(433,736.673,o),
(395.074,825,o),
(296,825,cs),
(209.085,825,o),
(156.728,772.015,o),
(130,698,cs),
(103.295,624.047,o),
(100,543.538,o),
(100,491,cs),
(100,418.594,o),
(102,332.897,o),
(102,263,cs),
(102,190.407,o),
(101.107,139.461,o),
(97,45,cs),
(96.333,37.667,o),
(90.5,32.833,o),
(79.5,30.5,cs),
(68.5,28.167,o),
(49.667,26,o),
(23,24,cs),
(8.333,22.667,o),
(-9,21.667,o),
(-9,11,cs),
(-9,5.667,o),
(-5.667,2.5,o),
(1,1.5,cs),
(7.667,0.5,o),
(15.667,0,o),
(25,0,cs),
(25.205,0,o),
(81.415,3,o),
(117,3,cs),
(130.333,3,o),
(143,7.333,o),
(143,30,cs),
(143,484,ls),
(143,539.068,o),
(142.216,608.972,o),
(162.5,680.5,cs),
(182.123,749.696,o),
(224.098,799,o),
(301,799,cs),
(358.465,799,o),
(392,746.797,o),
(392,700,cs),
(392,640.059,o),
(357.922,593.922,o),
(318.5,554.5,cs),
(280.611,516.611,o),
(245,476.228,o),
(245,429,cs),
(245,336.243,o),
(338.533,279.328,o),
(380,257,cs),
(468.048,206.306,o),
(523,172.416,o),
(523,102,cs),
(523,55.333,o),
(474,30,o),
(406,30,cs),
(355.333,30,o),
(310.333,45.333,o),
(289,88,cs),
(281,104,o),
(279,119.667,o),
(275,141,cs),
(272.333,154.333,o),
(270,163.333,o),
(268,168,cs),
(266,172.667,o),
(262.333,175,o),
(257,175,cs),
(246.333,175,o),
(244,166.667,o),
(244,148,cs),
(244,134,o),
(244.833,120.167,o),
(246.5,106.5,cs),
(248.167,92.833,o),
(249,79.667,o),
(249,67,cs),
(249,57.667,o),
(248.5,48.5,o),
(247.5,39.5,cs),
(246.5,30.5,o),
(246,22.667,o),
(246,16,cs),
(246,0.667,o),
(250,-7,o),
(258,-7,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
77 30 2 6 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 2 83 0 2 2 12 67 0 6 6 1 83 3 1 1 1 13 67 0 5 5 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 2 83 0 2 2 12 67 0 6 6 1 83 3 1 1 1 13 67 0 5 5 4 83 0 4 4 16 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 2 83 0 2 2 12 67 0 6 6 1 83 3 1 1 1 13 67 0 5 5 4 83 0 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 2 83 0 2 2 14 67 0 6 6 1 83 3 1 1 1 13 67 0 5 5 4 83 0 4 4 24 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
101 99 92 90 81 79 73 71 48 46 121 36 7 17
CALL[ ]	/* CallFunction */";
};
width = 581;
}
);
note = germandbls;
unicode = 223;
},
{
glyphname = t;
kernLeft = t;
kernRight = c_t;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(101,129.731,o),
(102.272,70.092,o),
(129,30,cs),
(147,2.667,o),
(177,-11,o),
(219,-11,cs),
(307.837,-11,o),
(356,43.97,o),
(356,114,cs),
(356,136.667,o),
(347,150,o),
(323,150,cs),
(300.333,150,o),
(289.333,143.667,o),
(284,121,cs),
(273.333,78.333,o),
(265.333,67,o),
(236,67,cs),
(221.333,67,o),
(210.667,72.833,o),
(204,84.5,cs),
(197.333,96.167,o),
(194,118.667,o),
(194,152,cs),
(194,394,l),
(213.333,395.333,o),
(233.667,396.667,o),
(255,398,cs),
(276.333,399.333,o),
(297.333,400.667,o),
(318,402,cs),
(331.333,403.333,o),
(352,413.667,o),
(352,439,cs),
(352,467,o),
(325,478,o),
(309,478,cs),
(290.175,478,o),
(211.128,474,o),
(194,474,c),
(194,575,ls),
(194,615,o),
(172.333,621,o),
(151,621,cs),
(135,621,o),
(123.333,610.667,o),
(116,590,cs),
(112,579.333,o),
(109.5,565.667,o),
(108.5,549,cs),
(107.5,532.333,o),
(106.333,516,o),
(105,500,cs),
(103.667,480,o),
(94,474.667,o),
(74,472,cs),
(23,465,ls),
(3,462.333,o),
(-18,455.333,o),
(-18,430,cs),
(-18,396.667,o),
(0.667,390,o),
(18,390,cs),
(30,390,o),
(44,390.333,o),
(60,391,cs),
(76,391.667,o),
(90.333,392,o),
(103,392,c),
(101,165,l),
(101,165,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
13 1 2 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 3 1 0 0 2 83 0 2 2 23 67 0 4 4 6 84 0 6 6 24 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 91 0 4 4 6 84 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 1 2 1 106 0 0 3 5 3 0 5 104 0 5 4 3 5 4 102 0 2 0 3 0 2 3 89 0 4 4 6 84 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 36 35 53 99 45 64 7 22
CALL[ ]	/* CallFunction */";
};
width = 366;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(95,133.59,o),
(94.836,72.245,o),
(123,30,cs),
(141,2.667,o),
(169,-11,o),
(207,-11,cs),
(308.572,-11,o),
(349,80.146,o),
(349,117,cs),
(349,124.048,o),
(343.602,147,o),
(324,147,cs),
(292.375,147,o),
(290.303,124.14,o),
(282,102,cs),
(273.921,80.457,o),
(261.167,49,o),
(221,49,cs),
(174.822,49,o),
(167,106.634,o),
(167,152,cs),
(167,406,l),
(189.667,407.333,o),
(213.5,408.333,o),
(238.5,409,cs),
(263.5,409.667,o),
(288,411.333,o),
(312,414,c),
(324,416.667,o),
(339,424.333,o),
(339,443,cs),
(339,464.333,o),
(319,472,o),
(303,472,cs),
(284.523,472,o),
(191.507,468,o),
(167,468,c),
(167,575,ls),
(167,615,o),
(151.333,618,o),
(134,618,cs),
(130.667,618,o),
(125.333,616.667,o),
(118,614,cs),
(110.667,611.333,o),
(105.333,603.333,o),
(102,590,cs),
(95.333,563.333,o),
(96,528,o),
(96,500,cs),
(96,477.333,o),
(94.667,468.667,o),
(68,466,cs),
(17,461,ls),
(-1.667,458.333,o),
(-17,450.667,o),
(-17,432,cs),
(-17,408,o),
(4,402,o),
(12,402,cs),
(24,402,o),
(38,402.333,o),
(54,403,cs),
(70,403.667,o),
(84.333,404,o),
(97,404,c),
(95,165,l),
(95,165,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 3 1 0 0 2 83 0 2 2 23 67 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 91 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 1 2 1 106 0 0 3 5 3 0 5 104 0 5 4 3 5 4 102 0 2 0 3 0 2 3 91 0 4 4 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
40 40 37 38 99 46 64 7 22
CALL[ ]	/* CallFunction */";
};
width = 359;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(300.572,-11,o),
(341,80.146,o),
(341,117,cs),
(341,123.667,o),
(340.667,137,o),
(326,137,cs),
(311.333,137,o),
(310.667,123.333,o),
(304,102,cs),
(293.022,63.577,o),
(263.478,19,o),
(206,19,cs),
(127.773,19,o),
(129,98.109,o),
(129,152,cs),
(129,426,l),
(156.333,427.333,o),
(185,428.333,o),
(215,429,cs),
(245,429.667,o),
(274.667,431.333,o),
(304,434,cs),
(316,435.333,o),
(321,442.333,o),
(321,449,cs),
(321,457.667,o),
(312.333,462,o),
(295,462,cs),
(275.217,462,o),
(150.921,458,o),
(129,458,c),
(129,575,ls),
(129,595,o),
(127.667,607.167,o),
(125,611.5,cs),
(122.333,615.833,o),
(118.333,618,o),
(113,618,cs),
(109.667,618,o),
(106.667,616.667,o),
(104,614,cs),
(101.333,611.333,o),
(98.333,603.333,o),
(95,590,cs),
(88.333,563.333,o),
(88,528,o),
(88,500,cs),
(88,470.667,o),
(86.667,458.667,o),
(60,456,cs),
(9,450,ls),
(-0.333,448.667,o),
(-6.667,446.833,o),
(-10,444.5,cs),
(-13.333,442.167,o),
(-15,439.333,o),
(-15,436,cs),
(-15,425.333,o),
(-4,422,o),
(4,422,cs),
(16,422,o),
(30,422.333,o),
(46,423,cs),
(62,423.667,o),
(76.333,424,o),
(89,424,c),
(87,165,ls),
(87,133.59,o),
(86.836,72.245,o),
(115,30,cs),
(133,2.667,o),
(161,-11,o),
(199,-11,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 3 1 0 0 2 83 0 2 2 23 67 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 91 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 1 2 1 106 0 0 3 5 3 0 5 104 0 5 4 3 5 4 102 0 2 0 3 0 2 3 91 0 4 4 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 38 37 37 99 46 64 7 22
CALL[ ]	/* CallFunction */";
};
width = 349;
}
);
note = t;
unicode = 116;
},
{
glyphname = tbar;
kernLeft = t;
kernRight = c_t;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,129.731,o),
(107.272,70.092,o),
(134,30,cs),
(152,2.667,o),
(182,-11,o),
(224,-11,cs),
(312.837,-11,o),
(361,43.97,o),
(361,114,cs),
(361,136.667,o),
(352,150,o),
(328,150,cs),
(305.333,150,o),
(294.333,143.667,o),
(289,121,cs),
(278.333,78.333,o),
(270.333,67,o),
(241,67,cs),
(226.333,67,o),
(215.667,72.833,o),
(209,84.5,cs),
(202.333,96.167,o),
(199,118.667,o),
(199,152,cs),
(199,228,l),
(224.333,228,o),
(247.5,228.167,o),
(268.5,228.5,cs),
(289.5,228.833,o),
(305.667,229,o),
(317,229,cs),
(345,229,o),
(353,250.333,o),
(353,273,cs),
(353,295.667,o),
(338.333,312,o),
(325,312,cs),
(313.667,312,o),
(296,311.667,o),
(272,311,cs),
(248,310.333,o),
(223.667,309.667,o),
(199,309,c),
(199,394,l),
(218.333,395.333,o),
(238.667,396.667,o),
(260,398,cs),
(281.333,399.333,o),
(302.333,400.667,o),
(323,402,cs),
(336.333,403.333,o),
(357,413.667,o),
(357,439,cs),
(357,467,o),
(330,478,o),
(314,478,cs),
(295.175,478,o),
(216.128,474,o),
(199,474,c),
(199,575,ls),
(199,615,o),
(177.333,621,o),
(156,621,cs),
(140,621,o),
(128.333,610.667,o),
(121,590,cs),
(117,579.333,o),
(114.5,565.667,o),
(113.5,549,cs),
(112.5,532.333,o),
(111.333,516,o),
(110,500,cs),
(108.667,480,o),
(99,474.667,o),
(79,472,cs),
(28,465,ls),
(8,462.333,o),
(-13,455.333,o),
(-13,430,cs),
(-13,396.667,o),
(5.667,390,o),
(23,390,cs),
(35,390,o),
(49,390.333,o),
(65,391,cs),
(81,391.667,o),
(95.333,392,o),
(108,392,c),
(108,309,l),
(74.667,310.333,o),
(38.333,311,o),
(25,311,cs),
(14.333,311,o),
(-8,292.667,o),
(-8,270,cs),
(-8,247.83,o),
(15.402,228,o),
(25,228,cs),
(106,228,l),
(106,165,l),
(106,165,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
26 1 4 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 3 4 3 106 0 9 0 8 0 9 8 104 6 1 1 7 1 0 9 1 0 91 5 1 2 2 4 83 0 4 4 23 67 0 8 8 10 84 0 10 10 24 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 3 4 3 106 0 9 0 8 0 9 8 104 0 4 5 1 2 1 4 2 91 6 1 1 7 1 0 9 1 0 91 0 8 8 10 84 0 10 10 24 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 3 4 3 106 0 2 5 1 5 2 1 104 0 9 0 8 0 9 8 104 0 4 0 5 2 4 5 89 6 1 1 7 1 0 9 1 0 91 0 8 8 10 84 0 10 10 24 10 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
81 79 73 71 35 68 65 53 99 45 65 70 32 11 24
CALL[ ]	/* CallFunction */";
};
width = 373;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(313.145,303,o),
(213.108,300,o),
(140,300,cs),
(97.698,300,o),
(49.437,302,o),
(19,302,cs),
(8.333,302,o),
(-7,287.333,o),
(-7,270,cs),
(-7,252.667,o),
(9.667,237,o),
(19,237,cs),
(102.549,237,o),
(224.164,238,o),
(311,238,cs),
(333.667,238,o),
(340,257,o),
(340,273,cs),
(340,290.333,o),
(329.667,303,o),
(319,303,cs)
);
},
{
closed = 1;
nodes = (
(101,133.59,o),
(100.836,72.245,o),
(129,30,cs),
(147,2.667,o),
(175,-11,o),
(213,-11,cs),
(314.572,-11,o),
(355,80.146,o),
(355,117,cs),
(355,124.048,o),
(349.602,147,o),
(330,147,cs),
(298.375,147,o),
(296.303,124.14,o),
(288,102,cs),
(279.921,80.457,o),
(267.167,49,o),
(227,49,cs),
(180.822,49,o),
(173,106.634,o),
(173,152,cs),
(173,406,l),
(195.667,407.333,o),
(219.5,408.333,o),
(244.5,409,cs),
(269.5,409.667,o),
(294,411.333,o),
(318,414,c),
(330,416.667,o),
(345,424.333,o),
(345,443,cs),
(345,464.333,o),
(325,472,o),
(309,472,cs),
(290.523,472,o),
(197.507,468,o),
(173,468,c),
(173,575,ls),
(173,615,o),
(157.333,618,o),
(140,618,cs),
(136.667,618,o),
(131.333,616.667,o),
(124,614,cs),
(116.667,611.333,o),
(111.333,603.333,o),
(108,590,cs),
(101.333,563.333,o),
(102,528,o),
(102,500,cs),
(102,477.333,o),
(100.667,468.667,o),
(74,466,cs),
(23,461,ls),
(4.333,458.333,o),
(-11,450.667,o),
(-11,432,cs),
(-11,408,o),
(10,402,o),
(18,402,cs),
(30,402,o),
(44,402.333,o),
(60,403,cs),
(76,403.667,o),
(90.333,404,o),
(103,404,c),
(101,165,l),
(101,165,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 4 3 106 0 7 1 6 1 7 6 104 9 1 0 0 1 7 0 1 92 5 1 2 2 4 83 0 4 4 23 67 0 6 6 8 83 0 8 8 24 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 3 4 3 106 0 7 1 6 1 7 6 104 0 4 5 1 2 0 4 2 91 9 1 0 0 1 7 0 1 92 0 6 6 8 83 0 8 8 24 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 3 4 3 106 0 2 5 0 5 2 0 104 0 7 1 6 1 7 6 104 0 4 0 5 2 4 5 91 9 1 0 0 1 7 0 1 92 0 6 6 8 83 0 8 8 24 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
1 0 91 89 81 79 71 69 64 62 56 50 47 45 31 27 12 5 0 26 1 16 10 15
CALL[ ]	/* CallFunction */";
};
width = 366;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(306.572,-11,o),
(347,80.146,o),
(347,117,cs),
(347,123.667,o),
(346.667,137,o),
(332,137,cs),
(317.333,137,o),
(316.667,123.333,o),
(310,102,cs),
(299.022,63.577,o),
(269.478,19,o),
(212,19,cs),
(133.773,19,o),
(135,98.109,o),
(135,152,cs),
(135,252,l),
(168.333,252,o),
(200.833,252.167,o),
(232.5,252.5,cs),
(264.167,252.833,o),
(287.667,253,o),
(303,253,cs),
(317.667,253,o),
(322,266.333,o),
(322,273,cs),
(322,279.667,o),
(316.333,288,o),
(311,288,cs),
(305.425,288,o),
(206.387,285,o),
(135,285,c),
(135,426,l),
(162.333,427.333,o),
(191,428.333,o),
(221,429,cs),
(251,429.667,o),
(280.667,431.333,o),
(310,434,cs),
(322,435.333,o),
(327,442.333,o),
(327,449,cs),
(327,457.667,o),
(318.333,462,o),
(301,462,cs),
(281.217,462,o),
(156.921,458,o),
(135,458,c),
(135,575,ls),
(135,595,o),
(133.667,607.167,o),
(131,611.5,cs),
(128.333,615.833,o),
(124.333,618,o),
(119,618,cs),
(115.667,618,o),
(112.667,616.667,o),
(110,614,cs),
(107.333,611.333,o),
(104.333,603.333,o),
(101,590,cs),
(94.333,563.333,o),
(94,528,o),
(94,500,cs),
(94,470.667,o),
(92.667,458.667,o),
(66,456,cs),
(15,450,ls),
(5.667,448.667,o),
(-0.667,446.833,o),
(-4,444.5,cs),
(-7.333,442.167,o),
(-9,439.333,o),
(-9,436,cs),
(-9,425.333,o),
(2,422,o),
(10,422,cs),
(22,422,o),
(35.833,422.333,o),
(51.5,423,cs),
(67.167,423.667,o),
(81.333,424,o),
(94,424,c),
(94,285,l),
(60.667,286.333,o),
(24.333,287,o),
(11,287,cs),
(0.333,287,o),
(-5,276.667,o),
(-5,270,cs),
(-5,263.333,o),
(1.667,252,o),
(11,252,cs),
(93,252,l),
(93,165,ls),
(93,133.59,o),
(92.836,72.245,o),
(121,30,cs),
(139,2.667,o),
(167,-11,o),
(205,-11,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 3 4 3 106 0 9 0 8 0 9 8 104 6 1 1 7 1 0 9 1 0 91 5 1 2 2 4 83 0 4 4 23 67 0 8 8 10 83 0 10 10 24 10 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 3 4 3 106 0 9 0 8 0 9 8 104 0 4 5 1 2 1 4 2 91 6 1 1 7 1 0 9 1 0 91 0 8 8 10 83 0 10 10 24 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 3 4 3 106 0 2 5 1 5 2 1 104 0 9 0 8 0 9 8 104 0 4 0 5 2 4 5 91 6 1 1 7 1 0 9 1 0 91 0 8 8 10 83 0 10 10 24 10 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
85 83 77 75 37 68 97 37 99 46 65 68 32 11 24
CALL[ ]	/* CallFunction */";
};
width = 356;
}
);
note = tbar;
unicode = 359;
},
{
glyphname = tcaron;
kernLeft = t;
kernRight = c_t;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(221,605.029,o),
(257,603.443,o),
(257,586,cs),
(257,566,o),
(254.5,551.167,o),
(249.5,541.5,cs),
(244.5,531.833,o),
(242,523.667,o),
(242,517,cs),
(242,494.333,o),
(261.333,494,o),
(268,494,cs),
(286.413,494,o),
(349,536.464,o),
(349,613,cs),
(349,670.333,o),
(313,694,o),
(281,694,cs),
(237,694,o),
(221,664,o),
(221,636,cs)
);
},
{
closed = 1;
nodes = (
(101,129.731,o),
(102.272,70.092,o),
(129,30,cs),
(147,2.667,o),
(177,-11,o),
(219,-11,cs),
(307.837,-11,o),
(356,43.97,o),
(356,114,cs),
(356,136.667,o),
(347,150,o),
(323,150,cs),
(300.333,150,o),
(289.333,143.667,o),
(284,121,cs),
(273.333,78.333,o),
(265.333,67,o),
(236,67,cs),
(221.333,67,o),
(210.667,72.833,o),
(204,84.5,cs),
(197.333,96.167,o),
(194,118.667,o),
(194,152,cs),
(194,394,l),
(213.333,395.333,o),
(233.667,396.667,o),
(255,398,cs),
(276.333,399.333,o),
(297.333,400.667,o),
(318,402,cs),
(331.333,403.333,o),
(352,413.667,o),
(352,439,cs),
(352,467,o),
(325,478,o),
(309,478,cs),
(290.175,478,o),
(211.128,474,o),
(194,474,c),
(194,575,ls),
(194,615,o),
(172.333,621,o),
(151,621,cs),
(135,621,o),
(123.333,610.667,o),
(116,590,cs),
(112,579.333,o),
(109.5,565.667,o),
(108.5,549,cs),
(107.5,532.333,o),
(106.333,516,o),
(105,500,cs),
(103.667,480,o),
(94,474.667,o),
(74,472,cs),
(23,465,ls),
(3,462.333,o),
(-18,455.333,o),
(-18,430,cs),
(-18,396.667,o),
(0.667,390,o),
(18,390,cs),
(30,390,o),
(44,390.333,o),
(60,391,cs),
(76,391.667,o),
(90.333,392,o),
(103,392,c),
(101,165,l),
(101,165,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
35 1 1 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 3 0 106 0 3 1 3 106 0 1 4 1 106 0 7 2 6 2 7 6 104 5 1 2 2 4 83 0 4 4 23 67 0 6 6 8 84 0 8 8 24 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 3 0 106 0 3 1 3 106 0 1 4 1 106 0 7 2 6 2 7 6 104 0 4 5 1 2 7 4 2 92 0 6 6 8 84 0 8 8 24 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 0 3 0 106 0 3 1 3 106 0 1 4 1 106 0 2 5 7 5 2 7 104 0 7 6 5 7 6 102 0 4 0 5 2 4 5 90 0 6 6 8 84 0 8 8 24 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 36 35 53 99 45 74 38 34 9 24
CALL[ ]	/* CallFunction */";
};
width = 366;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(95,133.59,o),
(94.836,72.245,o),
(123,30,cs),
(141,2.667,o),
(169,-11,o),
(207,-11,cs),
(308.572,-11,o),
(349,80.146,o),
(349,117,cs),
(349,124.048,o),
(343.602,147,o),
(324,147,cs),
(292.375,147,o),
(290.303,124.14,o),
(282,102,cs),
(273.921,80.457,o),
(261.167,49,o),
(221,49,cs),
(174.822,49,o),
(167,106.634,o),
(167,152,cs),
(167,406,l),
(189.667,407.333,o),
(213.5,408.333,o),
(238.5,409,cs),
(263.5,409.667,o),
(288,411.333,o),
(312,414,c),
(324,416.667,o),
(339,424.333,o),
(339,443,cs),
(339,464.333,o),
(319,472,o),
(303,472,cs),
(284.523,472,o),
(191.507,468,o),
(167,468,c),
(167,575,ls),
(167,615,o),
(151.333,618,o),
(134,618,cs),
(130.667,618,o),
(125.333,616.667,o),
(118,614,cs),
(110.667,611.333,o),
(105.333,603.333,o),
(102,590,cs),
(95.333,563.333,o),
(96,528,o),
(96,500,cs),
(96,477.333,o),
(94.667,468.667,o),
(68,466,cs),
(17,461,ls),
(-1.667,458.333,o),
(-17,450.667,o),
(-17,432,cs),
(-17,408,o),
(4,402,o),
(12,402,cs),
(24,402,o),
(38,402.333,o),
(54,403,cs),
(70,403.667,o),
(84.333,404,o),
(97,404,c),
(95,165,l),
(95,165,l)
);
},
{
closed = 1;
nodes = (
(191,594,o),
(227,595,o),
(227,578,cs),
(227,561,o),
(225,548,o),
(221,540,cs),
(216,531,o),
(214,524,o),
(214,518,cs),
(214,501,o),
(228,499,o),
(235,499,cs),
(259,499,o),
(300,549,o),
(300,603,cs),
(300,656,o),
(270,675,o),
(243,675,cs),
(206,675,o),
(191,650,o),
(191,626,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 7 1 7 106 0 1 8 1 106 0 8 2 8 106 0 5 0 4 0 5 4 104 3 1 0 0 2 83 0 2 2 23 67 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 7 1 7 106 0 1 8 1 106 0 8 2 8 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 92 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 7 1 7 106 0 1 8 1 106 0 8 2 8 106 0 0 3 5 3 0 5 104 0 5 4 3 5 4 102 0 2 0 3 0 2 3 92 0 4 4 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 41 40 40 37 38 99 46 65 9 35
CALL[ ]	/* CallFunction */";
};
width = 359;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(300.572,-11,o),
(341,80.146,o),
(341,117,cs),
(341,123.667,o),
(340.667,137,o),
(326,137,cs),
(311.333,137,o),
(310.667,123.333,o),
(304,102,cs),
(293.022,63.577,o),
(263.478,19,o),
(206,19,cs),
(127.773,19,o),
(129,98.109,o),
(129,152,cs),
(129,426,l),
(156.333,427.333,o),
(185,428.333,o),
(215,429,cs),
(245,429.667,o),
(274.667,431.333,o),
(304,434,cs),
(316,435.333,o),
(321,442.333,o),
(321,449,cs),
(321,457.667,o),
(312.333,462,o),
(295,462,cs),
(275.217,462,o),
(150.921,458,o),
(129,458,c),
(129,575,ls),
(129,595,o),
(127.667,607.167,o),
(125,611.5,cs),
(122.333,615.833,o),
(118.333,618,o),
(113,618,cs),
(109.667,618,o),
(106.667,616.667,o),
(104,614,cs),
(101.333,611.333,o),
(98.333,603.333,o),
(95,590,cs),
(88.333,563.333,o),
(88,528,o),
(88,500,cs),
(88,470.667,o),
(86.667,458.667,o),
(60,456,cs),
(9,450,ls),
(-0.333,448.667,o),
(-6.667,446.833,o),
(-10,444.5,cs),
(-13.333,442.167,o),
(-15,439.333,o),
(-15,436,cs),
(-15,425.333,o),
(-4,422,o),
(4,422,cs),
(16,422,o),
(30,422.333,o),
(46,423,cs),
(62,423.667,o),
(76.333,424,o),
(89,424,c),
(87,165,ls),
(87,133.59,o),
(86.836,72.245,o),
(115,30,cs),
(133,2.667,o),
(161,-11,o),
(199,-11,cs)
);
},
{
closed = 1;
nodes = (
(258.684,510,o),
(279,576.634,o),
(279,601,cs),
(279,627.667,o),
(262.333,645,o),
(237,645,cs),
(215.667,645,o),
(201,629.667,o),
(201,611,cs),
(201,587.909,o),
(227,579.261,o),
(227,567,cs),
(227,559.667,o),
(223.833,552.167,o),
(217.5,544.5,cs),
(211.167,536.833,o),
(208,530.333,o),
(208,525,cs),
(208,517,o),
(217.333,510,o),
(224,510,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 7 1 7 106 0 1 8 1 106 0 8 2 8 106 0 5 0 4 0 5 4 104 3 1 0 0 2 83 0 2 2 23 67 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 7 1 7 106 0 1 8 1 106 0 8 2 8 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 92 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 7 1 7 106 0 1 8 1 106 0 8 2 8 106 0 0 3 5 3 0 5 104 0 5 4 3 5 4 102 0 2 0 3 0 2 3 92 0 4 4 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 41 38 38 37 37 99 46 64 9 24
CALL[ ]	/* CallFunction */";
};
width = 349;
}
);
note = tcaron;
unicode = 357;
},
{
glyphname = tcedilla;
kernLeft = t;
kernRight = c_t;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(146,-133.971,o),
(182,-135.557,o),
(182,-153,cs),
(182,-173,o),
(179.5,-187.833,o),
(174.5,-197.5,cs),
(169.5,-207.167,o),
(167,-215.333,o),
(167,-222,cs),
(167,-244.667,o),
(186.333,-245,o),
(193,-245,cs),
(211.413,-245,o),
(274,-202.536,o),
(274,-126,cs),
(274,-68.667,o),
(238,-45,o),
(206,-45,cs),
(162,-45,o),
(146,-75,o),
(146,-103,cs)
);
},
{
closed = 1;
nodes = (
(101,129.731,o),
(102.272,70.092,o),
(129,30,cs),
(147,2.667,o),
(177,-11,o),
(219,-11,cs),
(307.837,-11,o),
(356,43.97,o),
(356,114,cs),
(356,136.667,o),
(347,150,o),
(323,150,cs),
(300.333,150,o),
(289.333,143.667,o),
(284,121,cs),
(273.333,78.333,o),
(265.333,67,o),
(236,67,cs),
(221.333,67,o),
(210.667,72.833,o),
(204,84.5,cs),
(197.333,96.167,o),
(194,118.667,o),
(194,152,cs),
(194,394,l),
(213.333,395.333,o),
(233.667,396.667,o),
(255,398,cs),
(276.333,399.333,o),
(297.333,400.667,o),
(318,402,cs),
(331.333,403.333,o),
(352,413.667,o),
(352,439,cs),
(352,467,o),
(325,478,o),
(309,478,cs),
(290.175,478,o),
(211.128,474,o),
(194,474,c),
(194,575,ls),
(194,615,o),
(172.333,621,o),
(151,621,cs),
(135,621,o),
(123.333,610.667,o),
(116,590,cs),
(112,579.333,o),
(109.5,565.667,o),
(108.5,549,cs),
(107.5,532.333,o),
(106.333,516,o),
(105,500,cs),
(103.667,480,o),
(94,474.667,o),
(74,472,cs),
(23,465,ls),
(3,462.333,o),
(-18,455.333,o),
(-18,430,cs),
(-18,396.667,o),
(0.667,390,o),
(18,390,cs),
(30,390,o),
(44,390.333,o),
(60,391,cs),
(76,391.667,o),
(90.333,392,o),
(103,392,c),
(101,165,l),
(101,165,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
35 1 4 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 3 4 3 106 0 7 2 6 2 7 6 104 5 1 2 2 4 83 0 4 4 23 67 0 6 6 8 84 0 8 8 24 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 3 4 3 106 0 7 2 6 2 7 6 104 0 4 5 1 2 7 4 2 91 0 0 0 1 0 1 87 0 6 6 8 84 0 8 8 24 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 3 4 3 106 0 2 5 7 5 2 7 104 0 7 6 5 7 6 102 0 4 0 5 2 4 5 89 0 0 0 1 0 1 87 0 6 6 8 84 0 8 8 24 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 36 35 53 99 45 74 38 34 9 24
CALL[ ]	/* CallFunction */";
};
width = 366;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(95,133.59,o),
(94.836,72.245,o),
(123,30,cs),
(141,2.667,o),
(169,-11,o),
(207,-11,cs),
(308.572,-11,o),
(349,80.146,o),
(349,117,cs),
(349,124.048,o),
(343.602,147,o),
(324,147,cs),
(292.375,147,o),
(290.303,124.14,o),
(282,102,cs),
(273.921,80.457,o),
(261.167,49,o),
(221,49,cs),
(174.822,49,o),
(167,106.634,o),
(167,152,cs),
(167,406,l),
(189.667,407.333,o),
(213.5,408.333,o),
(238.5,409,cs),
(263.5,409.667,o),
(288,411.333,o),
(312,414,c),
(324,416.667,o),
(339,424.333,o),
(339,443,cs),
(339,464.333,o),
(319,472,o),
(303,472,cs),
(284.523,472,o),
(191.507,468,o),
(167,468,c),
(167,575,ls),
(167,615,o),
(151.333,618,o),
(134,618,cs),
(130.667,618,o),
(125.333,616.667,o),
(118,614,cs),
(110.667,611.333,o),
(105.333,603.333,o),
(102,590,cs),
(95.333,563.333,o),
(96,528,o),
(96,500,cs),
(96,477.333,o),
(94.667,468.667,o),
(68,466,cs),
(17,461,ls),
(-1.667,458.333,o),
(-17,450.667,o),
(-17,432,cs),
(-17,408,o),
(4,402,o),
(12,402,cs),
(24,402,o),
(38,402.333,o),
(54,403,cs),
(70,403.667,o),
(84.333,404,o),
(97,404,c),
(95,165,l),
(95,165,l)
);
},
{
closed = 1;
nodes = (
(150,-133,o),
(186,-132,o),
(186,-149,cs),
(186,-166,o),
(184,-179,o),
(180,-187,cs),
(175,-196,o),
(173,-203,o),
(173,-209,cs),
(173,-226,o),
(187,-228,o),
(194,-228,cs),
(218,-228,o),
(259,-178,o),
(259,-124,cs),
(259,-71,o),
(229,-52,o),
(202,-52,cs),
(165,-52,o),
(150,-77,o),
(150,-101,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 3 1 0 0 2 83 0 2 2 23 67 0 4 4 6 83 0 6 6 24 67 0 7 7 8 83 0 8 8 25 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 91 0 4 4 6 83 0 6 6 24 67 0 7 7 8 83 0 8 8 25 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 91 0 7 0 8 7 8 87 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 1 2 1 106 0 0 3 5 3 0 5 104 0 5 4 3 5 4 102 0 2 0 3 0 2 3 91 0 7 0 8 7 8 87 0 4 4 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 41 40 40 37 38 99 46 65 9 35
CALL[ ]	/* CallFunction */";
};
width = 359;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(300.572,-11,o),
(341,80.146,o),
(341,117,cs),
(341,123.667,o),
(340.667,137,o),
(326,137,cs),
(311.333,137,o),
(310.667,123.333,o),
(304,102,cs),
(293.022,63.577,o),
(263.478,19,o),
(206,19,cs),
(127.773,19,o),
(129,98.109,o),
(129,152,cs),
(129,426,l),
(156.333,427.333,o),
(185,428.333,o),
(215,429,cs),
(245,429.667,o),
(274.667,431.333,o),
(304,434,cs),
(316,435.333,o),
(321,442.333,o),
(321,449,cs),
(321,457.667,o),
(312.333,462,o),
(295,462,cs),
(275.217,462,o),
(150.921,458,o),
(129,458,c),
(129,575,ls),
(129,595,o),
(127.667,607.167,o),
(125,611.5,cs),
(122.333,615.833,o),
(118.333,618,o),
(113,618,cs),
(109.667,618,o),
(106.667,616.667,o),
(104,614,cs),
(101.333,611.333,o),
(98.333,603.333,o),
(95,590,cs),
(88.333,563.333,o),
(88,528,o),
(88,500,cs),
(88,470.667,o),
(86.667,458.667,o),
(60,456,cs),
(9,450,ls),
(-0.333,448.667,o),
(-6.667,446.833,o),
(-10,444.5,cs),
(-13.333,442.167,o),
(-15,439.333,o),
(-15,436,cs),
(-15,425.333,o),
(-4,422,o),
(4,422,cs),
(16,422,o),
(30,422.333,o),
(46,423,cs),
(62,423.667,o),
(76.333,424,o),
(89,424,c),
(87,165,ls),
(87,133.59,o),
(86.836,72.245,o),
(115,30,cs),
(133,2.667,o),
(161,-11,o),
(199,-11,cs)
);
},
{
closed = 1;
nodes = (
(222.943,-203,o),
(239,-153.312,o),
(239,-124,cs),
(239,-78.667,o),
(217,-67,o),
(197,-67,cs),
(170.333,-67,o),
(157,-83.667,o),
(157,-101,cs),
(157,-133.202,o),
(193,-127.69,o),
(193,-145,cs),
(193,-151.667,o),
(191.167,-159.833,o),
(187.5,-169.5,cs),
(183.833,-179.167,o),
(182,-186.333,o),
(182,-191,cs),
(182,-197.667,o),
(189.333,-203,o),
(196,-203,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 3 1 0 0 2 83 0 2 2 23 67 0 4 4 6 83 0 6 6 24 67 0 7 7 8 83 0 8 8 17 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 91 0 4 4 6 83 0 6 6 24 67 0 7 7 8 83 0 8 8 17 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 91 0 7 0 8 7 8 87 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 1 2 1 106 0 0 3 5 3 0 5 104 0 5 4 3 5 4 102 0 2 0 3 0 2 3 91 0 7 0 8 7 8 87 0 4 4 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 41 38 38 37 37 99 46 64 9 24
CALL[ ]	/* CallFunction */";
};
width = 349;
}
);
note = uni0163;
unicode = 355;
},
{
glyphname = tcommaaccent;
kernLeft = t;
kernRight = c_t;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(148,-128.971,o),
(184,-130.557,o),
(184,-148,cs),
(184,-168,o),
(181.5,-182.833,o),
(176.5,-192.5,cs),
(171.5,-202.167,o),
(169,-210.333,o),
(169,-217,cs),
(169,-239.667,o),
(188.333,-240,o),
(195,-240,cs),
(213.413,-240,o),
(276,-197.536,o),
(276,-121,cs),
(276,-63.667,o),
(240,-40,o),
(208,-40,cs),
(164,-40,o),
(148,-70,o),
(148,-98,cs)
);
},
{
closed = 1;
nodes = (
(100,129.731,o),
(101.272,70.092,o),
(128,30,cs),
(146,2.667,o),
(176,-11,o),
(218,-11,cs),
(306.837,-11,o),
(355,43.97,o),
(355,114,cs),
(355,136.667,o),
(346,150,o),
(322,150,cs),
(299.333,150,o),
(288.333,143.667,o),
(283,121,cs),
(272.333,78.333,o),
(264.333,67,o),
(235,67,cs),
(220.333,67,o),
(209.667,72.833,o),
(203,84.5,cs),
(196.333,96.167,o),
(193,118.667,o),
(193,152,cs),
(193,394,l),
(212.333,395.333,o),
(232.667,396.667,o),
(254,398,cs),
(275.333,399.333,o),
(296.333,400.667,o),
(317,402,cs),
(330.333,403.333,o),
(351,413.667,o),
(351,439,cs),
(351,467,o),
(324,478,o),
(308,478,cs),
(289.175,478,o),
(210.128,474,o),
(193,474,c),
(193,575,ls),
(193,615,o),
(171.333,621,o),
(150,621,cs),
(134,621,o),
(122.333,610.667,o),
(115,590,cs),
(111,579.333,o),
(108.5,565.667,o),
(107.5,549,cs),
(106.5,532.333,o),
(105.333,516,o),
(104,500,cs),
(102.667,480,o),
(93,474.667,o),
(73,472,cs),
(22,465,ls),
(2,462.333,o),
(-19,455.333,o),
(-19,430,cs),
(-19,396.667,o),
(-0.333,390,o),
(17,390,cs),
(29,390,o),
(43,390.333,o),
(59,391,cs),
(75,391.667,o),
(89.333,392,o),
(102,392,c),
(100,165,l),
(100,165,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
35 1 4 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 3 4 3 106 0 7 2 6 2 7 6 104 5 1 2 2 4 83 0 4 4 23 67 0 6 6 8 84 0 8 8 24 67 0 0 0 1 83 0 1 1 25 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 3 4 3 106 0 7 2 6 2 7 6 104 0 4 5 1 2 7 4 2 91 0 0 0 1 0 1 87 0 6 6 8 84 0 8 8 24 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 3 4 3 106 0 2 5 7 5 2 7 104 0 7 6 5 7 6 102 0 4 0 5 2 4 5 89 0 0 0 1 0 1 87 0 6 6 8 84 0 8 8 24 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 36 35 53 99 45 74 38 34 9 24
CALL[ ]	/* CallFunction */";
};
width = 366;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(95,133.59,o),
(94.836,72.245,o),
(123,30,cs),
(141,2.667,o),
(169,-11,o),
(207,-11,cs),
(308.572,-11,o),
(349,80.146,o),
(349,117,cs),
(349,124.048,o),
(343.602,147,o),
(324,147,cs),
(292.375,147,o),
(290.303,124.14,o),
(282,102,cs),
(273.921,80.457,o),
(261.167,49,o),
(221,49,cs),
(174.822,49,o),
(167,106.634,o),
(167,152,cs),
(167,406,l),
(189.667,407.333,o),
(213.5,408.333,o),
(238.5,409,cs),
(263.5,409.667,o),
(288,411.333,o),
(312,414,c),
(324,416.667,o),
(339,424.333,o),
(339,443,cs),
(339,464.333,o),
(319,472,o),
(303,472,cs),
(284.523,472,o),
(191.507,468,o),
(167,468,c),
(167,575,ls),
(167,615,o),
(151.333,618,o),
(134,618,cs),
(130.667,618,o),
(125.333,616.667,o),
(118,614,cs),
(110.667,611.333,o),
(105.333,603.333,o),
(102,590,cs),
(95.333,563.333,o),
(96,528,o),
(96,500,cs),
(96,477.333,o),
(94.667,468.667,o),
(68,466,cs),
(17,461,ls),
(-1.667,458.333,o),
(-17,450.667,o),
(-17,432,cs),
(-17,408,o),
(4,402,o),
(12,402,cs),
(24,402,o),
(38,402.333,o),
(54,403,cs),
(70,403.667,o),
(84.333,404,o),
(97,404,c),
(95,165,l),
(95,165,l)
);
},
{
closed = 1;
nodes = (
(151,-130,o),
(187,-129,o),
(187,-146,cs),
(187,-163,o),
(185,-176,o),
(181,-184,cs),
(176,-193,o),
(174,-200,o),
(174,-206,cs),
(174,-223,o),
(188,-225,o),
(195,-225,cs),
(219,-225,o),
(260,-175,o),
(260,-121,cs),
(260,-68,o),
(230,-49,o),
(203,-49,cs),
(166,-49,o),
(151,-74,o),
(151,-98,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 3 1 0 0 2 83 0 2 2 23 67 0 4 4 6 83 0 6 6 24 67 0 7 7 8 83 0 8 8 25 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 91 0 4 4 6 83 0 6 6 24 67 0 7 7 8 83 0 8 8 25 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 91 0 7 0 8 7 8 87 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 1 2 1 106 0 0 3 5 3 0 5 104 0 5 4 3 5 4 102 0 2 0 3 0 2 3 91 0 7 0 8 7 8 87 0 4 4 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 41 40 40 37 38 99 46 65 9 35
CALL[ ]	/* CallFunction */";
};
width = 359;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(300.572,-11,o),
(341,80.146,o),
(341,117,cs),
(341,123.667,o),
(340.667,137,o),
(326,137,cs),
(311.333,137,o),
(310.667,123.333,o),
(304,102,cs),
(293.022,63.577,o),
(263.478,19,o),
(206,19,cs),
(127.773,19,o),
(129,98.109,o),
(129,152,cs),
(129,426,l),
(156.333,427.333,o),
(185,428.333,o),
(215,429,cs),
(245,429.667,o),
(274.667,431.333,o),
(304,434,cs),
(316,435.333,o),
(321,442.333,o),
(321,449,cs),
(321,457.667,o),
(312.333,462,o),
(295,462,cs),
(275.217,462,o),
(150.921,458,o),
(129,458,c),
(129,575,ls),
(129,595,o),
(127.667,607.167,o),
(125,611.5,cs),
(122.333,615.833,o),
(118.333,618,o),
(113,618,cs),
(109.667,618,o),
(106.667,616.667,o),
(104,614,cs),
(101.333,611.333,o),
(98.333,603.333,o),
(95,590,cs),
(88.333,563.333,o),
(88,528,o),
(88,500,cs),
(88,470.667,o),
(86.667,458.667,o),
(60,456,cs),
(9,450,ls),
(-0.333,448.667,o),
(-6.667,446.833,o),
(-10,444.5,cs),
(-13.333,442.167,o),
(-15,439.333,o),
(-15,436,cs),
(-15,425.333,o),
(-4,422,o),
(4,422,cs),
(16,422,o),
(30,422.333,o),
(46,423,cs),
(62,423.667,o),
(76.333,424,o),
(89,424,c),
(87,165,ls),
(87,133.59,o),
(86.836,72.245,o),
(115,30,cs),
(133,2.667,o),
(161,-11,o),
(199,-11,cs)
);
},
{
closed = 1;
nodes = (
(222.943,-203,o),
(239,-153.312,o),
(239,-124,cs),
(239,-78.667,o),
(217,-67,o),
(197,-67,cs),
(170.333,-67,o),
(157,-83.667,o),
(157,-101,cs),
(157,-133.202,o),
(193,-127.69,o),
(193,-145,cs),
(193,-151.667,o),
(191.167,-159.833,o),
(187.5,-169.5,cs),
(183.833,-179.167,o),
(182,-186.333,o),
(182,-191,cs),
(182,-197.667,o),
(189.333,-203,o),
(196,-203,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 3 1 0 0 2 83 0 2 2 23 67 0 4 4 6 83 0 6 6 24 67 0 7 7 8 83 0 8 8 17 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 91 0 4 4 6 83 0 6 6 24 67 0 7 7 8 83 0 8 8 17 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 1 2 1 106 0 5 0 4 0 5 4 104 0 2 3 1 0 5 2 0 91 0 7 0 8 7 8 87 0 4 4 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 1 2 1 106 0 0 3 5 3 0 5 104 0 5 4 3 5 4 102 0 2 0 3 0 2 3 91 0 7 0 8 7 8 87 0 4 4 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 41 38 38 37 37 99 46 64 9 24
CALL[ ]	/* CallFunction */";
};
width = 349;
}
);
note = uni021B;
unicode = 539;
},
{
glyphname = u;
kernLeft = u;
kernRight = u;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(436,121.465,o),
(370.193,58,o),
(297,58,cs),
(202.831,58,o),
(202,164.217,o),
(202,243,cs),
(202,300.603,o),
(206,389.026,o),
(206,427,cs),
(206,469.461,o),
(190.814,472,o),
(121,472,cs),
(42.126,472,o),
(10,462.824,o),
(10,432,cs),
(10,401.333,o),
(29.667,399,o),
(55,399,cs),
(79,399,ls),
(109.667,399,o),
(111,391.667,o),
(111,361,cs),
(111,187,ls),
(111,83.029,o),
(149.7,-20,o),
(275,-20,cs),
(368.834,-20,o),
(416.808,37.133,o),
(436,81,c),
(436,6.877,o),
(436.804,-22,o),
(466,-22,cs),
(602.894,-22,o),
(609,-6.459,o),
(609,22,cs),
(609,43.333,o),
(599.333,50.333,o),
(586,53,cs),
(580.667,54.333,o),
(565.333,55,o),
(556,55,cs),
(533.333,55,o),
(528,63.333,o),
(528,78,cs),
(528,80,o),
(527.833,86.833,o),
(527.5,98.5,cs),
(527.167,110.167,o),
(527,129.333,o),
(527,156,cs),
(527,265.943,o),
(530,345.993,o),
(530,383,cs),
(530,431,o),
(509.724,432,o),
(436,432,cs),
(351.335,432,o),
(324,420.743,o),
(324,390,cs),
(324,371.333,o),
(335.333,359,o),
(358,359,cs),
(411,359,ls),
(435,359,o),
(438,340.667,o),
(438,318,cs),
(436,191,l),
(436,191,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
44 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 6 0 5 0 6 5 91 0 1 0 0 2 1 0 91 7 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
44 54 55 40 40 61 54 50 8 23
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(429,106.315,o),
(359.789,40,o),
(281,40,cs),
(174.305,40,o),
(175,159.392,o),
(175,243,cs),
(175,300.603,o),
(179,389.026,o),
(179,427,cs),
(179,469.66,o),
(168.337,472,o),
(115,472,cs),
(73,472,o),
(39.833,469.667,o),
(15.5,465,cs),
(-8.833,460.333,o),
(-21,452.667,o),
(-21,442,cs),
(-21,423.333,o),
(0,420,o),
(20,420,cs),
(73,420,ls),
(103.667,420,o),
(105,412.667,o),
(105,382,cs),
(105,187,ls),
(105,83.029,o),
(143.7,-20,o),
(269,-20,cs),
(362.834,-20,o),
(410.808,37.133,o),
(430,81,c),
(430.667,41.667,o),
(432.333,14.667,o),
(435,0,cs),
(437.667,-14.667,o),
(442.667,-22,o),
(450,-22,cs),
(563.057,-22,o),
(596,-11.51,o),
(596,15,cs),
(596,31,o),
(584,39,o),
(560,39,cs),
(549.333,39,o),
(542.167,38.833,o),
(538.5,38.5,cs),
(534.833,38.167,o),
(531.667,38,o),
(529,38,cs),
(506.333,38,o),
(501,45.333,o),
(501,60,cs),
(501,62.667,o),
(500.833,71,o),
(500.5,85,cs),
(500.167,99,o),
(500,122.667,o),
(500,156,cs),
(500,265.943,o),
(503,345.993,o),
(503,383,cs),
(503,430.344,o),
(488.134,432,o),
(430,432,cs),
(382,432,o),
(347.5,429.5,o),
(326.5,424.5,cs),
(305.5,419.5,o),
(295,410.667,o),
(295,398,cs),
(295,386,o),
(306.333,380,o),
(329,380,cs),
(405,380,ls),
(423,380,o),
(432,366.333,o),
(432,339,cs),
(429,180,l),
(429,180,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
37 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 3 2 2 2 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 7 0 6 0 7 6 91 0 1 0 0 2 1 0 91 8 3 2 2 2 4 83 5 1 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
45 36 55 38 37 33 46 35 49 9 24
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(466.534,-22,o),
(578,-23.215,o),
(578,-1,cs),
(578,7,o),
(563,10,o),
(551,10,cs),
(535,10,o),
(522,9.833,o),
(512,9.5,cs),
(502,9.167,o),
(495,9,o),
(491,9,cs),
(468.333,9,o),
(463,16.667,o),
(463,30,cs),
(463,33.333,o),
(462.833,44.167,o),
(462.5,62.5,cs),
(462.167,80.833,o),
(462,112,o),
(462,156,cs),
(462,265.943,o),
(465,345.993,o),
(465,383,cs),
(465,427.927,o),
(458.12,432,o),
(422,432,cs),
(340.015,432,o),
(297,424.364,o),
(297,411,cs),
(297,403.667,o),
(308.333,400,o),
(331,400,cs),
(397,400,ls),
(419.667,400,o),
(424,395,o),
(424,359,cs),
(421,172,ls),
(421,84.242,o),
(347.373,10,o),
(258,10,cs),
(137.92,10,o),
(137,144.057,o),
(137,243,cs),
(137,300.603,o),
(141,389.026,o),
(141,427,cs),
(141,468.333,o),
(135,472,o),
(107,472,cs),
(25.728,472,o),
(-19,463.573,o),
(-19,452,cs),
(-19,448,o),
(-14,440,o),
(-2,440,cs),
(65,440,ls),
(95.667,440,o),
(97,432.667,o),
(97,402,cs),
(97,187,ls),
(97,83.029,o),
(135.7,-20,o),
(261,-20,cs),
(354.834,-20,o),
(402.808,37.133,o),
(422,81,c),
(422.667,41.667,o),
(424.333,14.667,o),
(427,0,cs),
(429.667,-14.667,o),
(434.667,-22,o),
(442,-22,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 6 0 5 1 6 5 91 0 1 0 0 2 1 0 91 7 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
43 53 55 38 53 94 52 50 8 23
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = u;
unicode = 117;
},
{
glyphname = uacute;
kernLeft = u;
kernRight = u;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(386,651.333,o),
(358.667,672.667,o),
(316,674,cs),
(290.667,674,o),
(260,635.167,o),
(236,594.5,cs),
(215.511,559.783,o),
(194,512.988,o),
(194,508,cs),
(194,493.333,o),
(216.333,486,o),
(231,486,cs),
(248.099,486,o),
(283.389,508.679,o),
(322,543,cs),
(356.627,573.78,o),
(386,608.341,o),
(386,626,cs)
);
},
{
closed = 1;
nodes = (
(436,121.465,o),
(370.193,58,o),
(297,58,cs),
(202.831,58,o),
(202,164.217,o),
(202,243,cs),
(202,300.603,o),
(206,389.026,o),
(206,427,cs),
(206,469.461,o),
(190.814,472,o),
(121,472,cs),
(42.126,472,o),
(10,462.824,o),
(10,432,cs),
(10,401.333,o),
(29.667,399,o),
(55,399,cs),
(79,399,ls),
(109.667,399,o),
(111,391.667,o),
(111,361,cs),
(111,187,ls),
(111,83.029,o),
(149.7,-20,o),
(275,-20,cs),
(368.834,-20,o),
(416.808,37.133,o),
(436,81,c),
(436,6.877,o),
(436.804,-22,o),
(466,-22,cs),
(602.894,-22,o),
(609,-6.459,o),
(609,22,cs),
(609,43.333,o),
(599.333,50.333,o),
(586,53,cs),
(580.667,54.333,o),
(565.333,55,o),
(556,55,cs),
(533.333,55,o),
(528,63.333,o),
(528,78,cs),
(528,80,o),
(527.833,86.833,o),
(527.5,98.5,cs),
(527.167,110.167,o),
(527,129.333,o),
(527,156,cs),
(527,265.943,o),
(530,345.993,o),
(530,383,cs),
(530,431,o),
(509.724,432,o),
(436,432,cs),
(351.335,432,o),
(324,420.743,o),
(324,390,cs),
(324,371.333,o),
(335.333,359,o),
(358,359,cs),
(411,359,ls),
(435,359,o),
(438,340.667,o),
(438,318,cs),
(436,191,l),
(436,191,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
62 1 4 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 1 106 0 0 8 0 106 0 7 7 8 83 0 8 8 23 67 0 2 2 3 83 0 3 3 15 67 9 1 4 4 5 83 6 1 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 1 0 1 106 0 0 8 0 106 0 8 0 7 2 8 7 91 0 3 0 2 4 3 2 92 9 1 4 4 5 83 6 1 5 5 21 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
101 99 54 55 40 40 61 54 52 38 38 10 24
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(361,645.667,o),
(342.667,661,o),
(312,661,cs),
(293.565,661,o),
(265.366,626.522,o),
(242,590.5,cs),
(216.182,550.697,o),
(201,517.174,o),
(201,513,cs),
(201,499.667,o),
(215.333,495,o),
(226,495,cs),
(255.68,495,o),
(361,594.002,o),
(361,623,cs)
);
},
{
closed = 1;
nodes = (
(429,106.315,o),
(359.789,40,o),
(281,40,cs),
(174.305,40,o),
(175,159.392,o),
(175,243,cs),
(175,300.603,o),
(179,389.026,o),
(179,427,cs),
(179,469.66,o),
(168.337,472,o),
(115,472,cs),
(73,472,o),
(39.833,469.667,o),
(15.5,465,cs),
(-8.833,460.333,o),
(-21,452.667,o),
(-21,442,cs),
(-21,423.333,o),
(0,420,o),
(20,420,cs),
(73,420,ls),
(103.667,420,o),
(105,412.667,o),
(105,382,cs),
(105,187,ls),
(105,83.029,o),
(143.7,-20,o),
(269,-20,cs),
(362.834,-20,o),
(410.808,37.133,o),
(430,81,c),
(430.667,41.667,o),
(432.333,14.667,o),
(435,0,cs),
(437.667,-14.667,o),
(442.667,-22,o),
(450,-22,cs),
(563.057,-22,o),
(596,-11.51,o),
(596,15,cs),
(596,31,o),
(584,39,o),
(560,39,cs),
(549.333,39,o),
(542.167,38.833,o),
(538.5,38.5,cs),
(534.833,38.167,o),
(531.667,38,o),
(529,38,cs),
(506.333,38,o),
(501,45.333,o),
(501,60,cs),
(501,62.667,o),
(500.833,71,o),
(500.5,85,cs),
(500.167,99,o),
(500,122.667,o),
(500,156,cs),
(500,265.943,o),
(503,345.993,o),
(503,383,cs),
(503,430.344,o),
(488.134,432,o),
(430,432,cs),
(382,432,o),
(347.5,429.5,o),
(326.5,424.5,cs),
(305.5,419.5,o),
(295,410.667,o),
(295,398,cs),
(295,386,o),
(306.333,380,o),
(329,380,cs),
(405,380,ls),
(423,380,o),
(432,366.333,o),
(432,339,cs),
(429,180,l),
(429,180,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
55 1 4 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 106 0 0 9 0 106 0 8 8 9 83 0 9 9 23 67 0 2 2 3 83 0 3 3 15 67 10 5 2 4 4 6 83 7 1 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 1 0 1 106 0 0 9 0 106 0 9 0 8 2 9 8 91 0 3 0 2 4 3 2 92 10 5 2 4 4 6 83 7 1 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
92 90 77 75 55 38 37 33 46 35 51 40 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(466.534,-22,o),
(578,-23.215,o),
(578,-1,cs),
(578,7,o),
(563,10,o),
(551,10,cs),
(535,10,o),
(522,9.833,o),
(512,9.5,cs),
(502,9.167,o),
(495,9,o),
(491,9,cs),
(468.333,9,o),
(463,16.667,o),
(463,30,cs),
(463,33.333,o),
(462.833,44.167,o),
(462.5,62.5,cs),
(462.167,80.833,o),
(462,112,o),
(462,156,cs),
(462,265.943,o),
(465,345.993,o),
(465,383,cs),
(465,427.927,o),
(458.12,432,o),
(422,432,cs),
(340.015,432,o),
(297,424.364,o),
(297,411,cs),
(297,403.667,o),
(308.333,400,o),
(331,400,cs),
(397,400,ls),
(419.667,400,o),
(424,395,o),
(424,359,cs),
(421,172,ls),
(421,84.242,o),
(347.373,10,o),
(258,10,cs),
(137.92,10,o),
(137,144.057,o),
(137,243,cs),
(137,300.603,o),
(141,389.026,o),
(141,427,cs),
(141,468.333,o),
(135,472,o),
(107,472,cs),
(25.728,472,o),
(-19,463.573,o),
(-19,452,cs),
(-19,448,o),
(-14,440,o),
(-2,440,cs),
(65,440,ls),
(95.667,440,o),
(97,432.667,o),
(97,402,cs),
(97,187,ls),
(97,83.029,o),
(135.7,-20,o),
(261,-20,cs),
(354.834,-20,o),
(402.808,37.133,o),
(422,81,c),
(422.667,41.667,o),
(424.333,14.667,o),
(427,0,cs),
(429.667,-14.667,o),
(434.667,-22,o),
(442,-22,cs)
);
},
{
closed = 1;
nodes = (
(238.797,510,o),
(326,597.027,o),
(326,618,cs),
(326,636.667,o),
(317.667,640,o),
(307,640,cs),
(286.822,640,o),
(212,545.882,o),
(212,521,cs),
(212,513.667,o),
(214.667,510,o),
(220,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 9 8 9 106 0 8 6 8 106 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 9 8 9 106 0 8 6 8 106 0 6 0 5 1 6 5 91 0 1 0 0 2 1 0 92 7 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
96 94 41 43 53 55 38 53 94 52 50 10 24
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = uacute;
unicode = 250;
},
{
glyphname = ubreve;
kernLeft = u;
kernRight = u;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(436,121.465,o),
(370.193,58,o),
(297,58,cs),
(202.831,58,o),
(202,164.217,o),
(202,243,cs),
(202,300.603,o),
(206,389.026,o),
(206,427,cs),
(206,469.461,o),
(190.814,472,o),
(121,472,cs),
(42.126,472,o),
(10,462.824,o),
(10,432,cs),
(10,401.333,o),
(29.667,399,o),
(55,399,cs),
(79,399,ls),
(109.667,399,o),
(111,391.667,o),
(111,361,cs),
(111,187,ls),
(111,83.029,o),
(149.7,-20,o),
(275,-20,cs),
(368.834,-20,o),
(416.808,37.133,o),
(436,81,c),
(436,6.877,o),
(436.804,-22,o),
(466,-22,cs),
(602.894,-22,o),
(609,-6.459,o),
(609,22,cs),
(609,43.333,o),
(599.333,50.333,o),
(586,53,cs),
(580.667,54.333,o),
(565.333,55,o),
(556,55,cs),
(533.333,55,o),
(528,63.333,o),
(528,78,cs),
(528,80,o),
(527.833,86.833,o),
(527.5,98.5,cs),
(527.167,110.167,o),
(527,129.333,o),
(527,156,cs),
(527,265.943,o),
(530,345.993,o),
(530,383,cs),
(530,431,o),
(509.724,432,o),
(436,432,cs),
(351.335,432,o),
(324,420.743,o),
(324,390,cs),
(324,371.333,o),
(335.333,359,o),
(358,359,cs),
(411,359,ls),
(435,359,o),
(438,340.667,o),
(438,318,cs),
(436,191,l),
(436,191,l)
);
},
{
closed = 1;
nodes = (
(414,615.667,o),
(396,619,o),
(376,619,cs),
(358.667,619,o),
(344,604.667,o),
(344,590,cs),
(344,584.667,o),
(339.5,579.5,o),
(330.5,574.5,cs),
(321.5,569.5,o),
(307.333,567,o),
(288,567,cs),
(257.535,567,o),
(229,574.638,o),
(229,590,cs),
(229,612.667,o),
(215.667,619,o),
(193,619,cs),
(170.333,619,o),
(161,606.333,o),
(161,589,cs),
(161,546.333,o),
(206.333,510,o),
(293,510,cs),
(344.962,510,o),
(414,536.821,o),
(414,589,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
44 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
11 1 9 10 9 106 0 10 0 8 6 10 8 91 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
11 1 9 10 9 106 0 10 0 8 6 10 8 91 0 6 0 5 0 6 5 91 0 1 0 0 2 1 0 92 7 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
114 112 108 106 100 98 41 44 54 55 40 40 61 54 50 12 24
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(429,106.315,o),
(359.789,40,o),
(281,40,cs),
(174.305,40,o),
(175,159.392,o),
(175,243,cs),
(175,300.603,o),
(179,389.026,o),
(179,427,cs),
(179,469.66,o),
(168.337,472,o),
(115,472,cs),
(73,472,o),
(39.833,469.667,o),
(15.5,465,cs),
(-8.833,460.333,o),
(-21,452.667,o),
(-21,442,cs),
(-21,423.333,o),
(0,420,o),
(20,420,cs),
(73,420,ls),
(103.667,420,o),
(105,412.667,o),
(105,382,cs),
(105,187,ls),
(105,83.029,o),
(143.7,-20,o),
(269,-20,cs),
(362.834,-20,o),
(410.808,37.133,o),
(430,81,c),
(430.667,41.667,o),
(432.333,14.667,o),
(435,0,cs),
(437.667,-14.667,o),
(442.667,-22,o),
(450,-22,cs),
(563.057,-22,o),
(596,-11.51,o),
(596,15,cs),
(596,31,o),
(584,39,o),
(560,39,cs),
(549.333,39,o),
(542.167,38.833,o),
(538.5,38.5,cs),
(534.833,38.167,o),
(531.667,38,o),
(529,38,cs),
(506.333,38,o),
(501,45.333,o),
(501,60,cs),
(501,62.667,o),
(500.833,71,o),
(500.5,85,cs),
(500.167,99,o),
(500,122.667,o),
(500,156,cs),
(500,265.943,o),
(503,345.993,o),
(503,383,cs),
(503,430.344,o),
(488.134,432,o),
(430,432,cs),
(382,432,o),
(347.5,429.5,o),
(326.5,424.5,cs),
(305.5,419.5,o),
(295,410.667,o),
(295,398,cs),
(295,386,o),
(306.333,380,o),
(329,380,cs),
(405,380,ls),
(423,380,o),
(432,366.333,o),
(432,339,cs),
(429,180,l),
(429,180,l)
);
},
{
closed = 1;
nodes = (
(401,616,o),
(384,617,o),
(371,617,cs),
(356,617,o),
(345,605,o),
(345,590,cs),
(345,573,o),
(320,555,o),
(281,555,cs),
(251,555,o),
(216,564,o),
(216,590,cs),
(216,610,o),
(207,617,o),
(188,617,cs),
(171,617,o),
(162,608,o),
(162,589,cs),
(162,548,o),
(208,510,o),
(284,510,cs),
(335,510,o),
(401,537,o),
(401,589,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
38 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
12 1 10 11 10 106 0 11 0 9 7 11 9 91 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 3 2 2 2 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
12 1 10 11 10 106 0 11 0 9 7 11 9 91 0 7 0 6 0 7 6 91 0 1 0 0 2 1 0 92 8 3 2 2 2 4 83 5 1 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
105 103 99 97 91 89 86 84 45 36 55 38 37 33 46 35 50 13 35
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(466.534,-22,o),
(578,-23.215,o),
(578,-1,cs),
(578,7,o),
(563,10,o),
(551,10,cs),
(535,10,o),
(522,9.833,o),
(512,9.5,cs),
(502,9.167,o),
(495,9,o),
(491,9,cs),
(468.333,9,o),
(463,16.667,o),
(463,30,cs),
(463,33.333,o),
(462.833,44.167,o),
(462.5,62.5,cs),
(462.167,80.833,o),
(462,112,o),
(462,156,cs),
(462,265.943,o),
(465,345.993,o),
(465,383,cs),
(465,427.927,o),
(458.12,432,o),
(422,432,cs),
(340.015,432,o),
(297,424.364,o),
(297,411,cs),
(297,403.667,o),
(308.333,400,o),
(331,400,cs),
(397,400,ls),
(419.667,400,o),
(424,395,o),
(424,359,cs),
(421,172,ls),
(421,84.242,o),
(347.373,10,o),
(258,10,cs),
(137.92,10,o),
(137,144.057,o),
(137,243,cs),
(137,300.603,o),
(141,389.026,o),
(141,427,cs),
(141,468.333,o),
(135,472,o),
(107,472,cs),
(25.728,472,o),
(-19,463.573,o),
(-19,452,cs),
(-19,448,o),
(-14,440,o),
(-2,440,cs),
(65,440,ls),
(95.667,440,o),
(97,432.667,o),
(97,402,cs),
(97,187,ls),
(97,83.029,o),
(135.7,-20,o),
(261,-20,cs),
(354.834,-20,o),
(402.808,37.133,o),
(422,81,c),
(422.667,41.667,o),
(424.333,14.667,o),
(427,0,cs),
(429.667,-14.667,o),
(434.667,-22,o),
(442,-22,cs)
);
},
{
closed = 1;
nodes = (
(325.372,510,o),
(383,540.865,o),
(383,589,cs),
(383,610.333,o),
(374.667,613,o),
(364,613,cs),
(352.667,613,o),
(347,605.333,o),
(347,590,cs),
(347,562.695,o),
(307.603,535,o),
(272,535,cs),
(233.333,535,o),
(198,548.667,o),
(198,590,cs),
(198,606,o),
(195.667,613,o),
(181,613,cs),
(169.667,613,o),
(164,605,o),
(164,589,cs),
(164,547.83,o),
(214.193,510,o),
(272,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
11 1 9 10 9 106 0 10 0 8 6 10 8 91 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
11 1 9 10 9 106 0 10 0 8 6 10 8 91 0 6 0 5 1 6 5 91 0 1 0 0 2 1 0 92 7 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
109 107 102 100 96 94 41 43 53 55 38 53 94 52 50 12 24
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = ubreve;
unicode = 365;
},
{
glyphname = ucircumflex;
kernLeft = u;
kernRight = u;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(412.333,510,o),
(416,520.333,o),
(416,531,cs),
(416,571.963,o),
(306.877,664,o),
(283,664,cs),
(272,664,o),
(236.897,638.643,o),
(210,613.5,cs),
(179.333,584.833,o),
(151,549.333,o),
(151,524,cs),
(151,517.333,o),
(156,510,o),
(164,510,cs),
(176.064,510,o),
(233.718,545.91,o),
(283,572,c),
(354.614,534.087,o),
(391.803,510,o),
(403,510,cs)
);
},
{
closed = 1;
nodes = (
(436,121.465,o),
(370.193,58,o),
(297,58,cs),
(202.831,58,o),
(202,164.217,o),
(202,243,cs),
(202,300.603,o),
(206,389.026,o),
(206,427,cs),
(206,469.461,o),
(190.814,472,o),
(121,472,cs),
(42.126,472,o),
(10,462.824,o),
(10,432,cs),
(10,401.333,o),
(29.667,399,o),
(55,399,cs),
(79,399,ls),
(109.667,399,o),
(111,391.667,o),
(111,361,cs),
(111,187,ls),
(111,83.029,o),
(149.7,-20,o),
(275,-20,cs),
(368.834,-20,o),
(416.808,37.133,o),
(436,81,c),
(436,6.877,o),
(436.804,-22,o),
(466,-22,cs),
(602.894,-22,o),
(609,-6.459,o),
(609,22,cs),
(609,43.333,o),
(599.333,50.333,o),
(586,53,cs),
(580.667,54.333,o),
(565.333,55,o),
(556,55,cs),
(533.333,55,o),
(528,63.333,o),
(528,78,cs),
(528,80,o),
(527.833,86.833,o),
(527.5,98.5,cs),
(527.167,110.167,o),
(527,129.333,o),
(527,156,cs),
(527,265.943,o),
(530,345.993,o),
(530,383,cs),
(530,431,o),
(509.724,432,o),
(436,432,cs),
(351.335,432,o),
(324,420.743,o),
(324,390,cs),
(324,371.333,o),
(335.333,359,o),
(358,359,cs),
(411,359,ls),
(435,359,o),
(438,340.667,o),
(438,318,cs),
(436,191,l),
(436,191,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
5 1 0 2 70 1 5 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 0 2 106 1 11 2 0 9 0 106 0 8 8 9 83 0 9 9 23 67 0 3 3 4 83 0 4 4 15 67 10 1 5 5 6 84 7 1 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 2 0 2 106 1 11 2 0 9 0 106 0 9 0 8 3 9 8 91 0 4 0 3 5 4 3 91 10 1 5 5 6 84 7 1 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 109 107 95 92 86 83 76 74 66 64 56 53 40 37 31 28 19 17 11 9 0 25 1 25 12 15
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(429,106.315,o),
(359.789,40,o),
(281,40,cs),
(174.305,40,o),
(175,159.392,o),
(175,243,cs),
(175,300.603,o),
(179,389.026,o),
(179,427,cs),
(179,469.66,o),
(168.337,472,o),
(115,472,cs),
(73,472,o),
(39.833,469.667,o),
(15.5,465,cs),
(-8.833,460.333,o),
(-21,452.667,o),
(-21,442,cs),
(-21,423.333,o),
(0,420,o),
(20,420,cs),
(73,420,ls),
(103.667,420,o),
(105,412.667,o),
(105,382,cs),
(105,187,ls),
(105,83.029,o),
(143.7,-20,o),
(269,-20,cs),
(362.834,-20,o),
(410.808,37.133,o),
(430,81,c),
(430.667,41.667,o),
(432.333,14.667,o),
(435,0,cs),
(437.667,-14.667,o),
(442.667,-22,o),
(450,-22,cs),
(563.057,-22,o),
(596,-11.51,o),
(596,15,cs),
(596,31,o),
(584,39,o),
(560,39,cs),
(549.333,39,o),
(542.167,38.833,o),
(538.5,38.5,cs),
(534.833,38.167,o),
(531.667,38,o),
(529,38,cs),
(506.333,38,o),
(501,45.333,o),
(501,60,cs),
(501,62.667,o),
(500.833,71,o),
(500.5,85,cs),
(500.167,99,o),
(500,122.667,o),
(500,156,cs),
(500,265.943,o),
(503,345.993,o),
(503,383,cs),
(503,430.344,o),
(488.134,432,o),
(430,432,cs),
(382,432,o),
(347.5,429.5,o),
(326.5,424.5,cs),
(305.5,419.5,o),
(295,410.667,o),
(295,398,cs),
(295,386,o),
(306.333,380,o),
(329,380,cs),
(405,380,ls),
(423,380,o),
(432,366.333,o),
(432,339,cs),
(429,180,l),
(429,180,l)
);
},
{
closed = 1;
nodes = (
(405,510,o),
(408,518,o),
(408,527,cs),
(408,562,o),
(302,655,o),
(277,655,cs),
(255,655,o),
(147,564,o),
(147,523,cs),
(147,514,o),
(151,510,o),
(158,510,cs),
(173,510,o),
(204,538,o),
(277,581,c),
(290,573,o),
(384,510,o),
(397,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
85 1 9 11 38 1 2 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 11 9 11 106 10 12 2 9 7 9 106 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 3 2 2 2 4 84 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 11 9 11 106 10 12 2 9 7 9 106 0 7 0 6 0 7 6 91 0 1 0 0 2 1 0 91 8 3 2 2 2 4 84 5 1 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
81 80 98 96 91 89 80 104 81 104 45 36 55 38 37 33 46 35 50 13 35
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(466.534,-22,o),
(578,-23.215,o),
(578,-1,cs),
(578,7,o),
(563,10,o),
(551,10,cs),
(535,10,o),
(522,9.833,o),
(512,9.5,cs),
(502,9.167,o),
(495,9,o),
(491,9,cs),
(468.333,9,o),
(463,16.667,o),
(463,30,cs),
(463,33.333,o),
(462.833,44.167,o),
(462.5,62.5,cs),
(462.167,80.833,o),
(462,112,o),
(462,156,cs),
(462,265.943,o),
(465,345.993,o),
(465,383,cs),
(465,427.927,o),
(458.12,432,o),
(422,432,cs),
(340.015,432,o),
(297,424.364,o),
(297,411,cs),
(297,403.667,o),
(308.333,400,o),
(331,400,cs),
(397,400,ls),
(419.667,400,o),
(424,395,o),
(424,359,cs),
(421,172,ls),
(421,84.242,o),
(347.373,10,o),
(258,10,cs),
(137.92,10,o),
(137,144.057,o),
(137,243,cs),
(137,300.603,o),
(141,389.026,o),
(141,427,cs),
(141,468.333,o),
(135,472,o),
(107,472,cs),
(25.728,472,o),
(-19,463.573,o),
(-19,452,cs),
(-19,448,o),
(-14,440,o),
(-2,440,cs),
(65,440,ls),
(95.667,440,o),
(97,432.667,o),
(97,402,cs),
(97,187,ls),
(97,83.029,o),
(135.7,-20,o),
(261,-20,cs),
(354.834,-20,o),
(402.808,37.133,o),
(422,81,c),
(422.667,41.667,o),
(424.333,14.667,o),
(427,0,cs),
(429.667,-14.667,o),
(434.667,-22,o),
(442,-22,cs)
);
},
{
closed = 1;
nodes = (
(164.084,510,o),
(216.433,558.894,o),
(269,596,c),
(345.411,542.063,o),
(374.302,510,o),
(389,510,cs),
(394.333,510,o),
(397,513.667,o),
(397,521,cs),
(397,546.329,o),
(293.852,640,o),
(269,640,cs),
(245.626,640,o),
(142,545.933,o),
(142,521,cs),
(142,513.667,o),
(144.667,510,o),
(150,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
88 1 8 10 41 1 2 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 10 8 10 106 9 11 2 8 6 8 106 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 84 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 10 8 10 106 9 11 2 8 6 8 106 0 6 0 5 1 6 5 91 0 1 0 0 2 1 0 91 7 1 2 2 3 84 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
84 83 101 99 94 92 83 106 84 106 43 53 55 38 53 94 52 50 12 23
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = ucircumflex;
unicode = 251;
},
{
glyphname = udieresis;
kernLeft = u;
kernRight = u;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(119,536.333,o),
(144.667,509,o),
(178,509,cs),
(207.675,509,o),
(245,523.646,o),
(245,579,cs),
(245,615,o),
(217,640,o),
(185,640,cs),
(138.034,640,o),
(119,598.847,o),
(119,575,cs)
);
},
{
closed = 1;
nodes = (
(326,513.333,o),
(351.667,486,o),
(385,486,cs),
(414.675,486,o),
(452,500.646,o),
(452,556,cs),
(452,592,o),
(424,617,o),
(392,617,cs),
(345.034,617,o),
(326,575.847,o),
(326,552,cs)
);
},
{
closed = 1;
nodes = (
(436,121.465,o),
(370.193,58,o),
(297,58,cs),
(202.831,58,o),
(202,164.217,o),
(202,243,cs),
(202,300.603,o),
(206,389.026,o),
(206,427,cs),
(206,469.461,o),
(190.814,472,o),
(121,472,cs),
(42.126,472,o),
(10,462.824,o),
(10,432,cs),
(10,401.333,o),
(29.667,399,o),
(55,399,cs),
(79,399,ls),
(109.667,399,o),
(111,391.667,o),
(111,361,cs),
(111,187,ls),
(111,83.029,o),
(149.7,-20,o),
(275,-20,cs),
(368.834,-20,o),
(416.808,37.133,o),
(436,81,c),
(436,6.877,o),
(436.804,-22,o),
(466,-22,cs),
(602.894,-22,o),
(609,-6.459,o),
(609,22,cs),
(609,43.333,o),
(599.333,50.333,o),
(586,53,cs),
(580.667,54.333,o),
(565.333,55,o),
(556,55,cs),
(533.333,55,o),
(528,63.333,o),
(528,78,cs),
(528,80,o),
(527.833,86.833,o),
(527.5,98.5,cs),
(527.167,110.167,o),
(527,129.333,o),
(527,156,cs),
(527,265.943,o),
(530,345.993,o),
(530,383,cs),
(530,431,o),
(509.724,432,o),
(436,432,cs),
(351.335,432,o),
(324,420.743,o),
(324,390,cs),
(324,371.333,o),
(335.333,359,o),
(358,359,cs),
(411,359,ls),
(435,359,o),
(438,340.667,o),
(438,318,cs),
(436,191,l),
(436,191,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
76 1 6 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 10 2 3 91 0 9 9 10 83 0 10 10 23 67 0 4 4 5 83 0 5 5 15 67 11 1 6 6 7 83 8 1 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 1 3 0 1 91 0 2 0 3 10 2 3 91 0 10 0 9 4 10 9 91 0 5 0 4 6 5 4 91 11 1 6 6 7 83 8 1 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
115 113 101 98 92 89 40 40 61 54 52 38 38 38 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(429,106.315,o),
(359.789,40,o),
(281,40,cs),
(174.305,40,o),
(175,159.392,o),
(175,243,cs),
(175,300.603,o),
(179,389.026,o),
(179,427,cs),
(179,469.66,o),
(168.337,472,o),
(115,472,cs),
(73,472,o),
(39.833,469.667,o),
(15.5,465,cs),
(-8.833,460.333,o),
(-21,452.667,o),
(-21,442,cs),
(-21,423.333,o),
(0,420,o),
(20,420,cs),
(73,420,ls),
(103.667,420,o),
(105,412.667,o),
(105,382,cs),
(105,187,ls),
(105,83.029,o),
(143.7,-20,o),
(269,-20,cs),
(362.834,-20,o),
(410.808,37.133,o),
(430,81,c),
(430.667,41.667,o),
(432.333,14.667,o),
(435,0,cs),
(437.667,-14.667,o),
(442.667,-22,o),
(450,-22,cs),
(563.057,-22,o),
(596,-11.51,o),
(596,15,cs),
(596,31,o),
(584,39,o),
(560,39,cs),
(549.333,39,o),
(542.167,38.833,o),
(538.5,38.5,cs),
(534.833,38.167,o),
(531.667,38,o),
(529,38,cs),
(506.333,38,o),
(501,45.333,o),
(501,60,cs),
(501,62.667,o),
(500.833,71,o),
(500.5,85,cs),
(500.167,99,o),
(500,122.667,o),
(500,156,cs),
(500,265.943,o),
(503,345.993,o),
(503,383,cs),
(503,430.344,o),
(488.134,432,o),
(430,432,cs),
(382,432,o),
(347.5,429.5,o),
(326.5,424.5,cs),
(305.5,419.5,o),
(295,410.667,o),
(295,398,cs),
(295,386,o),
(306.333,380,o),
(329,380,cs),
(405,380,ls),
(423,380,o),
(432,366.333,o),
(432,339,cs),
(429,180,l),
(429,180,l)
);
},
{
closed = 1;
nodes = (
(123,542,o),
(145,518,o),
(172,518,cs),
(197,518,o),
(228,531,o),
(228,579,cs),
(228,610,o),
(206,631,o),
(179,631,cs),
(141,631,o),
(123,596,o),
(123,575,cs)
);
},
{
closed = 1;
nodes = (
(330,519,o),
(352,495,o),
(379,495,cs),
(404,495,o),
(435,508,o),
(435,556,cs),
(435,587,o),
(413,608,o),
(386,608,cs),
(348,608,o),
(330,573,o),
(330,552,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
38 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 9 0 10 12 9 10 91 0 11 0 12 7 11 12 91 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 3 2 2 2 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 9 0 10 12 9 10 91 0 11 0 12 7 11 12 91 0 7 0 6 0 7 6 91 0 1 0 0 2 1 0 91 8 3 2 2 2 4 83 5 1 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
106 104 100 98 92 90 86 84 45 36 55 38 37 33 46 35 50 13 35
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(466.534,-22,o),
(578,-23.215,o),
(578,-1,cs),
(578,7,o),
(563,10,o),
(551,10,cs),
(535,10,o),
(522,9.833,o),
(512,9.5,cs),
(502,9.167,o),
(495,9,o),
(491,9,cs),
(468.333,9,o),
(463,16.667,o),
(463,30,cs),
(463,33.333,o),
(462.833,44.167,o),
(462.5,62.5,cs),
(462.167,80.833,o),
(462,112,o),
(462,156,cs),
(462,265.943,o),
(465,345.993,o),
(465,383,cs),
(465,427.927,o),
(458.12,432,o),
(422,432,cs),
(340.015,432,o),
(297,424.364,o),
(297,411,cs),
(297,403.667,o),
(308.333,400,o),
(331,400,cs),
(397,400,ls),
(419.667,400,o),
(424,395,o),
(424,359,cs),
(421,172,ls),
(421,84.242,o),
(347.373,10,o),
(258,10,cs),
(137.92,10,o),
(137,144.057,o),
(137,243,cs),
(137,300.603,o),
(141,389.026,o),
(141,427,cs),
(141,468.333,o),
(135,472,o),
(107,472,cs),
(25.728,472,o),
(-19,463.573,o),
(-19,452,cs),
(-19,448,o),
(-14,440,o),
(-2,440,cs),
(65,440,ls),
(95.667,440,o),
(97,432.667,o),
(97,402,cs),
(97,187,ls),
(97,83.029,o),
(135.7,-20,o),
(261,-20,cs),
(354.834,-20,o),
(402.808,37.133,o),
(422,81,c),
(422.667,41.667,o),
(424.333,14.667,o),
(427,0,cs),
(429.667,-14.667,o),
(434.667,-22,o),
(442,-22,cs)
);
},
{
closed = 1;
nodes = (
(182.667,533,o),
(205,543,o),
(205,579,cs),
(205,601.667,o),
(189.667,616,o),
(171,616,cs),
(143.258,616,o),
(130,588.895,o),
(130,575,cs),
(130,551,o),
(145.333,533,o),
(164,533,cs)
);
},
{
closed = 1;
nodes = (
(389.667,510,o),
(412,520,o),
(412,556,cs),
(412,578.667,o),
(396.667,593,o),
(378,593,cs),
(350.258,593,o),
(337,565.895,o),
(337,552,cs),
(337,528,o),
(352.333,510,o),
(371,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 8 0 9 11 8 9 91 0 10 0 11 6 10 11 91 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 8 0 9 11 8 9 91 0 10 0 11 6 10 11 91 0 6 0 5 1 6 5 91 0 1 0 0 2 1 0 91 7 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
109 107 103 101 95 93 41 43 53 55 38 53 94 52 50 12 24
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = udieresis;
unicode = 252;
},
{
glyphname = ugrave;
kernLeft = u;
kernRight = u;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(192,606.193,o),
(309.363,500,o),
(347,500,cs),
(361.667,500,o),
(384,507.333,o),
(384,522,cs),
(384,526.988,o),
(362.489,573.783,o),
(342,608.5,cs),
(318,649.167,o),
(287.333,688,o),
(262,688,cs),
(219.333,686.667,o),
(192,665.333,o),
(192,640,cs)
);
},
{
closed = 1;
nodes = (
(436,121.465,o),
(370.193,58,o),
(297,58,cs),
(202.831,58,o),
(202,164.217,o),
(202,243,cs),
(202,300.603,o),
(206,389.026,o),
(206,427,cs),
(206,469.461,o),
(190.814,472,o),
(121,472,cs),
(42.126,472,o),
(10,462.824,o),
(10,432,cs),
(10,401.333,o),
(29.667,399,o),
(55,399,cs),
(79,399,ls),
(109.667,399,o),
(111,391.667,o),
(111,361,cs),
(111,187,ls),
(111,83.029,o),
(149.7,-20,o),
(275,-20,cs),
(368.834,-20,o),
(416.808,37.133,o),
(436,81,c),
(436,6.877,o),
(436.804,-22,o),
(466,-22,cs),
(602.894,-22,o),
(609,-6.459,o),
(609,22,cs),
(609,43.333,o),
(599.333,50.333,o),
(586,53,cs),
(580.667,54.333,o),
(565.333,55,o),
(556,55,cs),
(533.333,55,o),
(528,63.333,o),
(528,78,cs),
(528,80,o),
(527.833,86.833,o),
(527.5,98.5,cs),
(527.167,110.167,o),
(527,129.333,o),
(527,156,cs),
(527,265.943,o),
(530,345.993,o),
(530,383,cs),
(530,431,o),
(509.724,432,o),
(436,432,cs),
(351.335,432,o),
(324,420.743,o),
(324,390,cs),
(324,371.333,o),
(335.333,359,o),
(358,359,cs),
(411,359,ls),
(435,359,o),
(438,340.667,o),
(438,318,cs),
(436,191,l),
(436,191,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
60 1 4 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 1 0 106 0 1 8 1 106 0 7 7 8 83 0 8 8 23 67 0 2 2 3 83 0 3 3 15 67 9 1 4 4 5 84 6 1 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 0 1 0 106 0 1 8 1 106 0 8 0 7 2 8 7 91 0 3 0 2 4 3 2 91 9 1 4 4 5 84 6 1 5 5 21 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
99 97 54 55 40 40 61 54 54 38 34 10 24
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(201,603.002,o),
(306.32,504,o),
(336,504,cs),
(346.667,504,o),
(361,508.667,o),
(361,522,cs),
(361,527.525,o),
(345.921,556.997,o),
(319.5,599.5,cs),
(297.1,635.535,o),
(267.529,670,o),
(250,670,cs),
(219.333,670,o),
(201,654.667,o),
(201,632,cs)
);
},
{
closed = 1;
nodes = (
(429,106.315,o),
(359.789,40,o),
(281,40,cs),
(174.305,40,o),
(175,159.392,o),
(175,243,cs),
(175,300.603,o),
(179,389.026,o),
(179,427,cs),
(179,469.66,o),
(168.337,472,o),
(115,472,cs),
(73,472,o),
(39.833,469.667,o),
(15.5,465,cs),
(-8.833,460.333,o),
(-21,452.667,o),
(-21,442,cs),
(-21,423.333,o),
(0,420,o),
(20,420,cs),
(73,420,ls),
(103.667,420,o),
(105,412.667,o),
(105,382,cs),
(105,187,ls),
(105,83.029,o),
(143.7,-20,o),
(269,-20,cs),
(362.834,-20,o),
(410.808,37.133,o),
(430,81,c),
(430.667,41.667,o),
(432.333,14.667,o),
(435,0,cs),
(437.667,-14.667,o),
(442.667,-22,o),
(450,-22,cs),
(563.057,-22,o),
(596,-11.51,o),
(596,15,cs),
(596,31,o),
(584,39,o),
(560,39,cs),
(549.333,39,o),
(542.167,38.833,o),
(538.5,38.5,cs),
(534.833,38.167,o),
(531.667,38,o),
(529,38,cs),
(506.333,38,o),
(501,45.333,o),
(501,60,cs),
(501,62.667,o),
(500.833,71,o),
(500.5,85,cs),
(500.167,99,o),
(500,122.667,o),
(500,156,cs),
(500,265.943,o),
(503,345.993,o),
(503,383,cs),
(503,430.344,o),
(488.134,432,o),
(430,432,cs),
(382,432,o),
(347.5,429.5,o),
(326.5,424.5,cs),
(305.5,419.5,o),
(295,410.667,o),
(295,398,cs),
(295,386,o),
(306.333,380,o),
(329,380,cs),
(405,380,ls),
(423,380,o),
(432,366.333,o),
(432,339,cs),
(429,180,l),
(429,180,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
55 1 4 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 0 1 0 106 0 1 9 1 106 0 8 8 9 83 0 9 9 23 67 0 2 2 3 83 0 3 3 15 67 10 5 2 4 4 6 84 7 1 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 0 1 0 106 0 1 9 1 106 0 9 0 8 2 9 8 91 0 3 0 2 4 3 2 91 10 5 2 4 4 6 84 7 1 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
92 90 77 75 55 38 37 33 46 35 53 40 34 11 24
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(466.534,-22,o),
(578,-23.215,o),
(578,-1,cs),
(578,7,o),
(563,10,o),
(551,10,cs),
(535,10,o),
(522,9.833,o),
(512,9.5,cs),
(502,9.167,o),
(495,9,o),
(491,9,cs),
(468.333,9,o),
(463,16.667,o),
(463,30,cs),
(463,33.333,o),
(462.833,44.167,o),
(462.5,62.5,cs),
(462.167,80.833,o),
(462,112,o),
(462,156,cs),
(462,265.943,o),
(465,345.993,o),
(465,383,cs),
(465,427.927,o),
(458.12,432,o),
(422,432,cs),
(340.015,432,o),
(297,424.364,o),
(297,411,cs),
(297,403.667,o),
(308.333,400,o),
(331,400,cs),
(397,400,ls),
(419.667,400,o),
(424,395,o),
(424,359,cs),
(421,172,ls),
(421,84.242,o),
(347.373,10,o),
(258,10,cs),
(137.92,10,o),
(137,144.057,o),
(137,243,cs),
(137,300.603,o),
(141,389.026,o),
(141,427,cs),
(141,468.333,o),
(135,472,o),
(107,472,cs),
(25.728,472,o),
(-19,463.573,o),
(-19,452,cs),
(-19,448,o),
(-14,440,o),
(-2,440,cs),
(65,440,ls),
(95.667,440,o),
(97,432.667,o),
(97,402,cs),
(97,187,ls),
(97,83.029,o),
(135.7,-20,o),
(261,-20,cs),
(354.834,-20,o),
(402.808,37.133,o),
(422,81,c),
(422.667,41.667,o),
(424.333,14.667,o),
(427,0,cs),
(429.667,-14.667,o),
(434.667,-22,o),
(442,-22,cs)
);
},
{
closed = 1;
nodes = (
(324.333,510,o),
(327,513.667,o),
(327,521,cs),
(327,545.882,o),
(252.178,640,o),
(232,640,cs),
(221.333,640,o),
(213,636.667,o),
(213,618,cs),
(213,597.027,o),
(300.203,510,o),
(319,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 8 9 8 106 0 9 6 9 106 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 84 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 8 9 8 106 0 9 6 9 106 0 6 0 5 1 6 5 91 0 1 0 0 2 1 0 91 7 1 2 2 3 84 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
94 92 39 43 53 55 38 53 94 52 50 10 24
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = ugrave;
unicode = 249;
},
{
glyphname = uhungarumlaut;
kernLeft = u;
kernRight = u;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(327,665.333,o),
(299.667,686.667,o),
(257,688,cs),
(231.667,688,o),
(201,649.167,o),
(177,608.5,cs),
(156.511,573.783,o),
(135,526.988,o),
(135,522,cs),
(135,507.333,o),
(157.333,500,o),
(172,500,cs),
(189.099,500,o),
(224.389,522.679,o),
(263,557,cs),
(297.627,587.78,o),
(327,622.341,o),
(327,640,cs)
);
},
{
closed = 1;
nodes = (
(520,665.333,o),
(492.667,686.667,o),
(450,688,cs),
(424.667,688,o),
(394,649.167,o),
(370,608.5,cs),
(349.511,573.783,o),
(328,526.988,o),
(328,522,cs),
(328,507.333,o),
(350.333,500,o),
(365,500,cs),
(382.099,500,o),
(417.389,522.679,o),
(456,557,cs),
(490.627,587.78,o),
(520,622.341,o),
(520,640,cs)
);
},
{
closed = 1;
nodes = (
(436,121.465,o),
(370.193,58,o),
(297,58,cs),
(202.831,58,o),
(202,164.217,o),
(202,243,cs),
(202,300.603,o),
(206,389.026,o),
(206,427,cs),
(206,469.461,o),
(190.814,472,o),
(121,472,cs),
(42.126,472,o),
(10,462.824,o),
(10,432,cs),
(10,401.333,o),
(29.667,399,o),
(55,399,cs),
(79,399,ls),
(109.667,399,o),
(111,391.667,o),
(111,361,cs),
(111,187,ls),
(111,83.029,o),
(149.7,-20,o),
(275,-20,cs),
(368.834,-20,o),
(416.808,37.133,o),
(436,81,c),
(436,6.877,o),
(436.804,-22,o),
(466,-22,cs),
(602.894,-22,o),
(609,-6.459,o),
(609,22,cs),
(609,43.333,o),
(599.333,50.333,o),
(586,53,cs),
(580.667,54.333,o),
(565.333,55,o),
(556,55,cs),
(533.333,55,o),
(528,63.333,o),
(528,78,cs),
(528,80,o),
(527.833,86.833,o),
(527.5,98.5,cs),
(527.167,110.167,o),
(527,129.333,o),
(527,156,cs),
(527,265.943,o),
(530,345.993,o),
(530,383,cs),
(530,431,o),
(509.724,432,o),
(436,432,cs),
(351.335,432,o),
(324,420.743,o),
(324,390,cs),
(324,371.333,o),
(335.333,359,o),
(358,359,cs),
(411,359,ls),
(435,359,o),
(438,340.667,o),
(438,318,cs),
(436,191,l),
(436,191,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
80 1 6 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
3 1 1 0 1 106 2 1 0 10 0 106 0 9 9 10 83 0 10 10 23 67 0 4 4 5 83 0 5 5 15 67 11 1 6 6 7 84 8 1 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
3 1 1 0 1 106 2 1 0 10 0 106 0 10 0 9 4 10 9 91 0 5 0 4 6 5 4 92 11 1 6 6 7 84 8 1 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
119 117 105 102 96 93 40 40 61 54 52 38 40 38 38 12 24
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(307,654.667,o),
(288.667,670,o),
(258,670,cs),
(239.565,670,o),
(211.366,635.522,o),
(188,599.5,cs),
(162.182,559.697,o),
(147,526.174,o),
(147,522,cs),
(147,508.667,o),
(161.333,504,o),
(172,504,cs),
(201.68,504,o),
(307,603.002,o),
(307,632,cs)
);
},
{
closed = 1;
nodes = (
(484,654.667,o),
(465.667,670,o),
(435,670,cs),
(416.565,670,o),
(388.366,635.522,o),
(365,599.5,cs),
(339.182,559.697,o),
(324,526.174,o),
(324,522,cs),
(324,508.667,o),
(338.333,504,o),
(349,504,cs),
(378.68,504,o),
(484,603.002,o),
(484,632,cs)
);
},
{
closed = 1;
nodes = (
(429,106.315,o),
(359.789,40,o),
(281,40,cs),
(174.305,40,o),
(175,159.392,o),
(175,243,cs),
(175,300.603,o),
(179,389.026,o),
(179,427,cs),
(179,469.66,o),
(168.337,472,o),
(115,472,cs),
(73,472,o),
(39.833,469.667,o),
(15.5,465,cs),
(-8.833,460.333,o),
(-21,452.667,o),
(-21,442,cs),
(-21,423.333,o),
(0,420,o),
(20,420,cs),
(73,420,ls),
(103.667,420,o),
(105,412.667,o),
(105,382,cs),
(105,187,ls),
(105,83.029,o),
(143.7,-20,o),
(269,-20,cs),
(362.834,-20,o),
(410.808,37.133,o),
(430,81,c),
(430.667,41.667,o),
(432.333,14.667,o),
(435,0,cs),
(437.667,-14.667,o),
(442.667,-22,o),
(450,-22,cs),
(563.057,-22,o),
(596,-11.51,o),
(596,15,cs),
(596,31,o),
(584,39,o),
(560,39,cs),
(549.333,39,o),
(542.167,38.833,o),
(538.5,38.5,cs),
(534.833,38.167,o),
(531.667,38,o),
(529,38,cs),
(506.333,38,o),
(501,45.333,o),
(501,60,cs),
(501,62.667,o),
(500.833,71,o),
(500.5,85,cs),
(500.167,99,o),
(500,122.667,o),
(500,156,cs),
(500,265.943,o),
(503,345.993,o),
(503,383,cs),
(503,430.344,o),
(488.134,432,o),
(430,432,cs),
(382,432,o),
(347.5,429.5,o),
(326.5,424.5,cs),
(305.5,419.5,o),
(295,410.667,o),
(295,398,cs),
(295,386,o),
(306.333,380,o),
(329,380,cs),
(405,380,ls),
(423,380,o),
(432,366.333,o),
(432,339,cs),
(429,180,l),
(429,180,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
73 1 6 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
3 1 1 0 1 106 2 1 0 11 0 106 0 10 10 11 83 0 11 11 23 67 0 4 4 5 83 0 5 5 15 67 12 7 2 6 6 8 84 9 1 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
3 1 1 0 1 106 2 1 0 11 0 106 0 11 0 10 4 11 10 91 0 5 0 4 6 5 4 92 12 7 2 6 6 8 84 9 1 8 8 21 8 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
110 108 95 93 89 86 79 77 37 33 46 35 51 40 38 40 36 13 24
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(466.534,-22,o),
(578,-23.215,o),
(578,-1,cs),
(578,7,o),
(563,10,o),
(551,10,cs),
(535,10,o),
(522,9.833,o),
(512,9.5,cs),
(502,9.167,o),
(495,9,o),
(491,9,cs),
(468.333,9,o),
(463,16.667,o),
(463,30,cs),
(463,33.333,o),
(462.833,44.167,o),
(462.5,62.5,cs),
(462.167,80.833,o),
(462,112,o),
(462,156,cs),
(462,265.943,o),
(465,345.993,o),
(465,383,cs),
(465,427.927,o),
(458.12,432,o),
(422,432,cs),
(340.015,432,o),
(297,424.364,o),
(297,411,cs),
(297,403.667,o),
(308.333,400,o),
(331,400,cs),
(397,400,ls),
(419.667,400,o),
(424,395,o),
(424,359,cs),
(421,172,ls),
(421,84.242,o),
(347.373,10,o),
(258,10,cs),
(137.92,10,o),
(137,144.057,o),
(137,243,cs),
(137,300.603,o),
(141,389.026,o),
(141,427,cs),
(141,468.333,o),
(135,472,o),
(107,472,cs),
(25.728,472,o),
(-19,463.573,o),
(-19,452,cs),
(-19,448,o),
(-14,440,o),
(-2,440,cs),
(65,440,ls),
(95.667,440,o),
(97,432.667,o),
(97,402,cs),
(97,187,ls),
(97,83.029,o),
(135.7,-20,o),
(261,-20,cs),
(354.834,-20,o),
(402.808,37.133,o),
(422,81,c),
(422.667,41.667,o),
(424.333,14.667,o),
(427,0,cs),
(429.667,-14.667,o),
(434.667,-22,o),
(442,-22,cs)
);
},
{
closed = 1;
nodes = (
(192.797,510,o),
(280,597.027,o),
(280,618,cs),
(280,636.667,o),
(271.667,640,o),
(261,640,cs),
(240.822,640,o),
(166,545.882,o),
(166,521,cs),
(166,513.667,o),
(168.667,510,o),
(174,510,cs)
);
},
{
closed = 1;
nodes = (
(346.797,510,o),
(434,597.027,o),
(434,618,cs),
(434,636.667,o),
(425.667,640,o),
(415,640,cs),
(394.822,640,o),
(320,545.882,o),
(320,521,cs),
(320,513.667,o),
(322.667,510,o),
(328,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
11 1 9 8 9 106 10 1 8 6 8 106 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 84 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
11 1 9 8 9 106 10 1 8 6 8 106 0 6 0 5 1 6 5 91 0 1 0 0 2 1 0 92 7 1 2 2 3 84 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
111 109 104 102 96 94 41 43 53 55 38 53 94 52 50 12 24
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = uhungarumlaut;
unicode = 369;
},
{
glyphname = umacron;
kernLeft = u;
kernRight = u;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(436,121.465,o),
(370.193,58,o),
(297,58,cs),
(202.831,58,o),
(202,164.217,o),
(202,243,cs),
(202,300.603,o),
(206,389.026,o),
(206,427,cs),
(206,469.461,o),
(190.814,472,o),
(121,472,cs),
(42.126,472,o),
(10,462.824,o),
(10,432,cs),
(10,401.333,o),
(29.667,399,o),
(55,399,cs),
(79,399,ls),
(109.667,399,o),
(111,391.667,o),
(111,361,cs),
(111,187,ls),
(111,83.029,o),
(149.7,-20,o),
(275,-20,cs),
(368.834,-20,o),
(416.808,37.133,o),
(436,81,c),
(436,6.877,o),
(436.804,-22,o),
(466,-22,cs),
(602.894,-22,o),
(609,-6.459,o),
(609,22,cs),
(609,43.333,o),
(599.333,50.333,o),
(586,53,cs),
(580.667,54.333,o),
(565.333,55,o),
(556,55,cs),
(533.333,55,o),
(528,63.333,o),
(528,78,cs),
(528,80,o),
(527.833,86.833,o),
(527.5,98.5,cs),
(527.167,110.167,o),
(527,129.333,o),
(527,156,cs),
(527,265.943,o),
(530,345.993,o),
(530,383,cs),
(530,431,o),
(509.724,432,o),
(436,432,cs),
(351.335,432,o),
(324,420.743,o),
(324,390,cs),
(324,371.333,o),
(335.333,359,o),
(358,359,cs),
(411,359,ls),
(435,359,o),
(438,340.667,o),
(438,318,cs),
(436,191,l),
(436,191,l)
);
},
{
closed = 1;
nodes = (
(409,617,o),
(390.667,616.5,o),
(370,615.5,cs),
(349.333,614.5,o),
(325,614,o),
(297,614,cs),
(254.698,614,o),
(206.437,616,o),
(176,616,cs),
(153.333,616,o),
(143,595.667,o),
(143,577,cs),
(143,558.333,o),
(157.333,537,o),
(176,537,cs),
(246.305,537,o),
(343.446,538,o),
(417,538,cs),
(445.782,538,o),
(453,564.801,o),
(453,580,cs),
(453,600,o),
(439.667,617,o),
(425,617,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
44 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
10 1 8 0 9 6 8 9 91 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
10 1 8 0 9 6 8 9 91 0 6 0 5 0 6 5 91 0 1 0 0 2 1 0 91 7 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
89 88 102 95 88 114 89 106 44 54 55 40 40 61 54 50 11 23
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(429,106.315,o),
(359.789,40,o),
(281,40,cs),
(174.305,40,o),
(175,159.392,o),
(175,243,cs),
(175,300.603,o),
(179,389.026,o),
(179,427,cs),
(179,469.66,o),
(168.337,472,o),
(115,472,cs),
(73,472,o),
(39.833,469.667,o),
(15.5,465,cs),
(-8.833,460.333,o),
(-21,452.667,o),
(-21,442,cs),
(-21,423.333,o),
(0,420,o),
(20,420,cs),
(73,420,ls),
(103.667,420,o),
(105,412.667,o),
(105,382,cs),
(105,187,ls),
(105,83.029,o),
(143.7,-20,o),
(269,-20,cs),
(362.834,-20,o),
(410.808,37.133,o),
(430,81,c),
(430.667,41.667,o),
(432.333,14.667,o),
(435,0,cs),
(437.667,-14.667,o),
(442.667,-22,o),
(450,-22,cs),
(563.057,-22,o),
(596,-11.51,o),
(596,15,cs),
(596,31,o),
(584,39,o),
(560,39,cs),
(549.333,39,o),
(542.167,38.833,o),
(538.5,38.5,cs),
(534.833,38.167,o),
(531.667,38,o),
(529,38,cs),
(506.333,38,o),
(501,45.333,o),
(501,60,cs),
(501,62.667,o),
(500.833,71,o),
(500.5,85,cs),
(500.167,99,o),
(500,122.667,o),
(500,156,cs),
(500,265.943,o),
(503,345.993,o),
(503,383,cs),
(503,430.344,o),
(488.134,432,o),
(430,432,cs),
(382,432,o),
(347.5,429.5,o),
(326.5,424.5,cs),
(305.5,419.5,o),
(295,410.667,o),
(295,398,cs),
(295,386,o),
(306.333,380,o),
(329,380,cs),
(405,380,ls),
(423,380,o),
(432,366.333,o),
(432,339,cs),
(429,180,l),
(429,180,l)
);
},
{
closed = 1;
nodes = (
(403,587,o),
(385,587,o),
(364,586,cs),
(343,585,o),
(319,584,o),
(291,584,cs),
(249,584,o),
(200,586,o),
(170,586,cs),
(151,586,o),
(144,571,o),
(144,556,cs),
(144,541,o),
(155,525,o),
(170,525,cs),
(240,525,o),
(337,526,o),
(411,526,cs),
(434,526,o),
(440,548,o),
(440,559,cs),
(440,574,o),
(430,587,o),
(419,587,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
38 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
11 1 9 0 10 7 9 10 91 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 3 2 2 2 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
11 1 9 0 10 7 9 10 91 0 7 0 6 0 7 6 91 0 1 0 0 2 1 0 91 8 3 2 2 2 4 83 5 1 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
81 80 92 85 80 104 81 96 45 36 55 38 37 33 46 35 50 12 35
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(466.534,-22,o),
(578,-23.215,o),
(578,-1,cs),
(578,7,o),
(563,10,o),
(551,10,cs),
(535,10,o),
(522,9.833,o),
(512,9.5,cs),
(502,9.167,o),
(495,9,o),
(491,9,cs),
(468.333,9,o),
(463,16.667,o),
(463,30,cs),
(463,33.333,o),
(462.833,44.167,o),
(462.5,62.5,cs),
(462.167,80.833,o),
(462,112,o),
(462,156,cs),
(462,265.943,o),
(465,345.993,o),
(465,383,cs),
(465,427.927,o),
(458.12,432,o),
(422,432,cs),
(340.015,432,o),
(297,424.364,o),
(297,411,cs),
(297,403.667,o),
(308.333,400,o),
(331,400,cs),
(397,400,ls),
(419.667,400,o),
(424,395,o),
(424,359,cs),
(421,172,ls),
(421,84.242,o),
(347.373,10,o),
(258,10,cs),
(137.92,10,o),
(137,144.057,o),
(137,243,cs),
(137,300.603,o),
(141,389.026,o),
(141,427,cs),
(141,468.333,o),
(135,472,o),
(107,472,cs),
(25.728,472,o),
(-19,463.573,o),
(-19,452,cs),
(-19,448,o),
(-14,440,o),
(-2,440,cs),
(65,440,ls),
(95.667,440,o),
(97,432.667,o),
(97,402,cs),
(97,187,ls),
(97,83.029,o),
(135.7,-20,o),
(261,-20,cs),
(354.834,-20,o),
(402.808,37.133,o),
(422,81,c),
(422.667,41.667,o),
(424.333,14.667,o),
(427,0,cs),
(429.667,-14.667,o),
(434.667,-22,o),
(442,-22,cs)
);
},
{
closed = 1;
nodes = (
(231.305,510,o),
(328.446,511,o),
(402,511,cs),
(416.667,511,o),
(421,522.333,o),
(421,529,cs),
(421,535.667,o),
(415.333,542,o),
(410,542,cs),
(394,542,o),
(375.667,541.5,o),
(355,540.5,cs),
(334.333,539.5,o),
(310,539,o),
(282,539,cs),
(239.698,539,o),
(191.437,541,o),
(161,541,cs),
(150.333,541,o),
(145,532.667,o),
(145,526,cs),
(145,519.333,o),
(151.667,510,o),
(161,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
10 1 8 0 9 6 8 9 91 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
10 1 8 0 9 6 8 9 91 0 6 0 5 1 6 5 91 0 1 0 0 2 1 0 91 7 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
84 83 95 88 83 107 84 99 43 53 55 38 53 94 52 50 11 23
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = umacron;
unicode = 363;
},
{
glyphname = uogonek;
kernLeft = u;
kernRight = u;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(436,121.465,o),
(370.193,58,o),
(297,58,cs),
(202.831,58,o),
(202,164.217,o),
(202,243,cs),
(202,300.603,o),
(206,389.026,o),
(206,427,cs),
(206,469.461,o),
(190.814,472,o),
(121,472,cs),
(42.126,472,o),
(10,462.824,o),
(10,432,cs),
(10,401.333,o),
(29.667,399,o),
(55,399,cs),
(79,399,ls),
(109.667,399,o),
(111,391.667,o),
(111,361,cs),
(111,187,ls),
(111,83.029,o),
(149.7,-20,o),
(275,-20,cs),
(368.834,-20,o),
(416.808,37.133,o),
(436,81,c),
(436,6.877,o),
(436.804,-22,o),
(466,-22,cs),
(481,-22,l),
(455.769,-36.017,o),
(414,-60.558,o),
(414,-104,cs),
(414,-155.579,o),
(474.091,-179,o),
(524,-179,cs),
(576.345,-179,o),
(607,-149.646,o),
(607,-126,cs),
(607,-114,o),
(595.333,-102,o),
(582,-102,cs),
(562.449,-102,o),
(563.136,-126,o),
(522,-126,cs),
(507.333,-126,o),
(493,-119.667,o),
(493,-105,cs),
(493,-75.667,o),
(510.667,-32.333,o),
(544,-19,c),
(601.346,-14.013,o),
(609,-2.184,o),
(609,22,cs),
(609,43.333,o),
(599.333,50.333,o),
(586,53,cs),
(580.667,54.333,o),
(565.333,55,o),
(556,55,cs),
(533.333,55,o),
(528,63.333,o),
(528,78,cs),
(528,80,o),
(527.833,86.833,o),
(527.5,98.5,cs),
(527.167,110.167,o),
(527,129.333,o),
(527,156,cs),
(527,265.943,o),
(530,345.993,o),
(530,383,cs),
(530,431,o),
(509.724,432,o),
(436,432,cs),
(351.335,432,o),
(324,420.743,o),
(324,390,cs),
(324,371.333,o),
(335.333,359,o),
(358,359,cs),
(411,359,ls),
(435,359,o),
(438,340.667,o),
(438,318,cs),
(436,191,l),
(436,191,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
74 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 4 6 3 6 4 3 104 0 8 8 9 83 0 9 9 23 67 0 0 0 1 83 0 1 1 15 67 10 1 2 2 6 83 7 1 6 6 21 67 0 3 3 5 84 0 5 5 17 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 4 6 3 6 4 3 104 0 9 0 8 0 9 8 91 0 1 0 0 2 1 0 91 0 3 0 5 3 5 88 10 1 2 2 6 83 7 1 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
113 111 99 96 55 40 41 38 35 46 61 54 50 11 24
CALL[ ]	/* CallFunction */";
};
width = 598;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(429,106.315,o),
(359.789,40,o),
(281,40,cs),
(174.305,40,o),
(175,159.392,o),
(175,243,cs),
(175,300.603,o),
(179,389.026,o),
(179,427,cs),
(179,469.66,o),
(168.337,472,o),
(115,472,cs),
(73,472,o),
(39.833,469.667,o),
(15.5,465,cs),
(-8.833,460.333,o),
(-21,452.667,o),
(-21,442,cs),
(-21,423.333,o),
(0,420,o),
(20,420,cs),
(73,420,ls),
(103.667,420,o),
(105,412.667,o),
(105,382,cs),
(105,187,ls),
(105,83.029,o),
(143.7,-20,o),
(269,-20,cs),
(362.834,-20,o),
(410.808,37.133,o),
(430,81,c),
(430.667,41.667,o),
(432.333,14.667,o),
(435,0,cs),
(437.667,-14.667,o),
(442.667,-22,o),
(450,-22,cs),
(563.057,-22,o),
(596,-11.51,o),
(596,15,cs),
(596,31,o),
(584,39,o),
(560,39,cs),
(549.333,39,o),
(542.167,38.833,o),
(538.5,38.5,cs),
(534.833,38.167,o),
(531.667,38,o),
(529,38,cs),
(506.333,38,o),
(501,45.333,o),
(501,60,cs),
(501,62.667,o),
(500.833,71,o),
(500.5,85,cs),
(500.167,99,o),
(500,122.667,o),
(500,156,cs),
(500,265.943,o),
(503,345.993,o),
(503,383,cs),
(503,430.344,o),
(488.134,432,o),
(430,432,cs),
(382,432,o),
(347.5,429.5,o),
(326.5,424.5,cs),
(305.5,419.5,o),
(295,410.667,o),
(295,398,cs),
(295,386,o),
(306.333,380,o),
(329,380,cs),
(405,380,ls),
(423,380,o),
(432,366.333,o),
(432,339,cs),
(429,180,l),
(429,180,l)
);
},
{
closed = 1;
nodes = (
(450,-22,o),
(438,-29,o),
(427,-38,cs),
(408,-53,o),
(391,-74,o),
(391,-105,cs),
(391,-148,o),
(433,-178,o),
(492,-178,cs),
(540,-178,o),
(570,-137,o),
(570,-127,cs),
(570,-116,o),
(564,-105,o),
(549,-105,cs),
(545,-105,o),
(541,-107,o),
(536,-111,cs),
(531,-116,o),
(525,-121,o),
(520,-126,cs),
(514,-132,o),
(503,-135,o),
(486,-135,cs),
(470,-135,o),
(455,-120,o),
(455,-104,cs),
(455,-85,o),
(469,-31,o),
(514,-16,c),
(464,-15,l),
(464,-15,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
38 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 10 4 9 4 10 9 104 0 9 0 11 9 11 87 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 3 2 2 2 4 83 5 1 4 4 21 67 13 1 12 12 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 10 4 9 4 10 9 104 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 3 2 2 2 4 83 5 1 4 4 21 67 13 1 12 12 4 83 5 1 4 4 21 67 0 9 9 11 83 0 11 11 17 11 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 10 4 9 4 10 9 104 0 7 0 6 0 7 6 91 0 1 0 0 2 1 0 91 0 9 0 11 9 11 87 8 3 2 2 2 4 83 5 1 4 4 21 67 13 1 12 12 4 83 5 1 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
80 80 80 109 80 109 102 100 94 92 89 87 45 36 55 38 37 33 46 35 50 14 35
CALL[ ]	/* CallFunction */";
};
width = 584;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(516.13,-179,o),
(546,-137.791,o),
(546,-128,cs),
(546,-120,o),
(544,-112,o),
(532,-112,cs),
(512.96,-112,o),
(506.683,-152,o),
(470,-152,cs),
(439.028,-152,o),
(431,-122.466,o),
(431,-105,cs),
(431,-87.264,o),
(439.807,-42.37,o),
(478,-22,c),
(525.894,-22,o),
(578,-15.659,o),
(578,-1,cs),
(578,7,o),
(563,10,o),
(551,10,cs),
(535,10,o),
(522,9.833,o),
(512,9.5,cs),
(502,9.167,o),
(495,9,o),
(491,9,cs),
(468.333,9,o),
(463,16.667,o),
(463,30,cs),
(463,33.333,o),
(462.833,44.167,o),
(462.5,62.5,cs),
(462.167,80.833,o),
(462,112,o),
(462,156,cs),
(462,265.943,o),
(465,345.993,o),
(465,383,cs),
(465,427.927,o),
(458.12,432,o),
(422,432,cs),
(340.015,432,o),
(297,424.364,o),
(297,411,cs),
(297,403.667,o),
(308.333,400,o),
(331,400,cs),
(397,400,ls),
(419.667,400,o),
(424,395,o),
(424,359,cs),
(421,172,ls),
(421,84.242,o),
(347.373,10,o),
(258,10,cs),
(137.92,10,o),
(137,144.057,o),
(137,243,cs),
(137,300.603,o),
(141,389.026,o),
(141,427,cs),
(141,468.333,o),
(135,472,o),
(107,472,cs),
(25.728,472,o),
(-19,463.573,o),
(-19,452,cs),
(-19,448,o),
(-14,440,o),
(-2,440,cs),
(65,440,ls),
(95.667,440,o),
(97,432.667,o),
(97,402,cs),
(97,187,ls),
(97,83.029,o),
(135.7,-20,o),
(261,-20,cs),
(354.834,-20,o),
(402.808,37.133,o),
(422,81,c),
(422.667,41.667,o),
(424.333,14.667,o),
(427,0,cs),
(429.667,-14.667,o),
(434.667,-22,o),
(442,-22,c),
(422.349,-33.229,o),
(387,-62.803,o),
(387,-106,cs),
(387,-148.667,o),
(421.333,-179,o),
(468,-179,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
72 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 5 3 4 3 5 4 104 0 9 9 10 83 0 10 10 23 67 0 0 0 1 83 0 1 1 15 67 11 1 2 2 3 83 8 7 2 3 3 21 67 0 4 4 6 83 0 6 6 17 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 5 3 4 3 5 4 104 0 10 0 9 1 10 9 91 0 1 0 0 2 1 0 91 11 1 2 2 3 83 8 7 2 3 3 21 67 0 4 4 6 83 0 6 6 17 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 5 3 4 3 5 4 104 0 10 0 9 1 10 9 91 0 1 0 0 2 1 0 91 0 4 0 6 4 6 87 11 1 2 2 3 83 8 7 2 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
109 107 96 93 88 85 38 23 38 35 41 22 94 52 50 12 24
CALL[ ]	/* CallFunction */";
};
width = 564;
}
);
note = uogonek;
unicode = 371;
},
{
glyphname = uring;
kernLeft = u;
kernRight = u;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(372,626.333,o),
(346,649,o),
(294,649,cs),
(252.667,649,o),
(219,629.667,o),
(219,579,cs),
(219,532.333,o),
(253.667,510,o),
(299,510,cs),
(339,510,o),
(372,533,o),
(372,581,cs)
);
},
{
closed = 1;
nodes = (
(305.667,607,o),
(317,598.667,o),
(317,580,cs),
(317,558.667,o),
(307,553,o),
(299,553,cs),
(289.667,553,o),
(275,556.333,o),
(275,579,cs),
(275,590.333,o),
(277.5,597.833,o),
(282.5,601.5,cs),
(287.5,605.167,o),
(291.667,607,o),
(295,607,cs)
);
},
{
closed = 1;
nodes = (
(436,121.465,o),
(370.193,58,o),
(297,58,cs),
(202.831,58,o),
(202,164.217,o),
(202,243,cs),
(202,300.603,o),
(206,389.026,o),
(206,427,cs),
(206,469.461,o),
(190.814,472,o),
(121,472,cs),
(42.126,472,o),
(10,462.824,o),
(10,432,cs),
(10,401.333,o),
(29.667,399,o),
(55,399,cs),
(79,399,ls),
(109.667,399,o),
(111,391.667,o),
(111,361,cs),
(111,187,ls),
(111,83.029,o),
(149.7,-20,o),
(275,-20,cs),
(368.834,-20,o),
(416.808,37.133,o),
(436,81,c),
(436,6.877,o),
(436.804,-22,o),
(466,-22,cs),
(602.894,-22,o),
(609,-6.459,o),
(609,22,cs),
(609,43.333,o),
(599.333,50.333,o),
(586,53,cs),
(580.667,54.333,o),
(565.333,55,o),
(556,55,cs),
(533.333,55,o),
(528,63.333,o),
(528,78,cs),
(528,80,o),
(527.833,86.833,o),
(527.5,98.5,cs),
(527.167,110.167,o),
(527,129.333,o),
(527,156,cs),
(527,265.943,o),
(530,345.993,o),
(530,383,cs),
(530,431,o),
(509.724,432,o),
(436,432,cs),
(351.335,432,o),
(324,420.743,o),
(324,390,cs),
(324,371.333,o),
(335.333,359,o),
(358,359,cs),
(411,359,ls),
(435,359,o),
(438,340.667,o),
(438,318,cs),
(436,191,l),
(436,191,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
67 1 6 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
12 1 2 1 3 0 2 96 0 3 0 1 3 94 0 1 0 0 10 1 0 91 0 9 9 10 83 0 10 10 23 67 0 4 4 5 83 0 5 5 15 67 11 1 6 6 7 83 8 1 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
12 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 1 0 0 10 1 0 91 0 9 9 10 83 0 10 10 23 67 0 4 4 5 83 0 5 5 15 67 11 1 6 6 7 83 8 1 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
12 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 1 0 0 10 1 0 91 0 10 0 9 4 10 9 91 0 5 0 4 6 5 4 91 11 1 6 6 7 83 8 1 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
12 11 106 104 92 89 83 80 73 71 63 61 53 50 37 34 28 25 18 16 11 22 12 22 36 34 13 17
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(429,106.315,o),
(359.789,40,o),
(281,40,cs),
(174.305,40,o),
(175,159.392,o),
(175,243,cs),
(175,300.603,o),
(179,389.026,o),
(179,427,cs),
(179,469.66,o),
(168.337,472,o),
(115,472,cs),
(73,472,o),
(39.833,469.667,o),
(15.5,465,cs),
(-8.833,460.333,o),
(-21,452.667,o),
(-21,442,cs),
(-21,423.333,o),
(0,420,o),
(20,420,cs),
(73,420,ls),
(103.667,420,o),
(105,412.667,o),
(105,382,cs),
(105,187,ls),
(105,83.029,o),
(143.7,-20,o),
(269,-20,cs),
(362.834,-20,o),
(410.808,37.133,o),
(430,81,c),
(430.667,41.667,o),
(432.333,14.667,o),
(435,0,cs),
(437.667,-14.667,o),
(442.667,-22,o),
(450,-22,cs),
(563.057,-22,o),
(596,-11.51,o),
(596,15,cs),
(596,31,o),
(584,39,o),
(560,39,cs),
(549.333,39,o),
(542.167,38.833,o),
(538.5,38.5,cs),
(534.833,38.167,o),
(531.667,38,o),
(529,38,cs),
(506.333,38,o),
(501,45.333,o),
(501,60,cs),
(501,62.667,o),
(500.833,71,o),
(500.5,85,cs),
(500.167,99,o),
(500,122.667,o),
(500,156,cs),
(500,265.943,o),
(503,345.993,o),
(503,383,cs),
(503,430.344,o),
(488.134,432,o),
(430,432,cs),
(382,432,o),
(347.5,429.5,o),
(326.5,424.5,cs),
(305.5,419.5,o),
(295,410.667,o),
(295,398,cs),
(295,386,o),
(306.333,380,o),
(329,380,cs),
(405,380,ls),
(423,380,o),
(432,366.333,o),
(432,339,cs),
(429,180,l),
(429,180,l)
);
},
{
closed = 1;
nodes = (
(357,624,o),
(333,649,o),
(286,649,cs),
(246,649,o),
(215,619,o),
(215,579,cs),
(215,538,o),
(247,510,o),
(287,510,cs),
(323,510,o),
(357,533,o),
(357,581,cs)
);
},
{
closed = 1;
nodes = (
(299,615,o),
(312,605,o),
(312,580,cs),
(312,565,o),
(309,555,o),
(302,551,cs),
(295,546,o),
(290,544,o),
(287,544,cs),
(279,544,o),
(260,550,o),
(260,579,cs),
(260,607,o),
(275,615,o),
(286,615,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
38 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
13 1 11 10 12 9 11 96 0 12 9 10 12 94 0 10 0 9 7 10 9 91 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 3 2 2 2 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
13 1 11 10 12 10 11 12 104 0 12 9 10 12 9 102 0 10 0 9 7 10 9 91 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 3 2 2 2 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
13 1 11 10 12 10 11 12 104 0 12 9 10 12 9 102 0 10 0 9 7 10 9 91 0 7 0 6 0 7 6 91 0 1 0 0 2 1 0 91 8 3 2 2 2 4 83 5 1 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
93 92 99 97 92 103 93 103 90 88 84 82 45 36 55 38 37 33 46 35 50 14 35
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(466.534,-22,o),
(578,-23.215,o),
(578,-1,cs),
(578,7,o),
(563,10,o),
(551,10,cs),
(535,10,o),
(522,9.833,o),
(512,9.5,cs),
(502,9.167,o),
(495,9,o),
(491,9,cs),
(468.333,9,o),
(463,16.667,o),
(463,30,cs),
(463,33.333,o),
(462.833,44.167,o),
(462.5,62.5,cs),
(462.167,80.833,o),
(462,112,o),
(462,156,cs),
(462,265.943,o),
(465,345.993,o),
(465,383,cs),
(465,427.927,o),
(458.12,432,o),
(422,432,cs),
(340.015,432,o),
(297,424.364,o),
(297,411,cs),
(297,403.667,o),
(308.333,400,o),
(331,400,cs),
(397,400,ls),
(419.667,400,o),
(424,395,o),
(424,359,cs),
(421,172,ls),
(421,84.242,o),
(347.373,10,o),
(258,10,cs),
(137.92,10,o),
(137,144.057,o),
(137,243,cs),
(137,300.603,o),
(141,389.026,o),
(141,427,cs),
(141,468.333,o),
(135,472,o),
(107,472,cs),
(25.728,472,o),
(-19,463.573,o),
(-19,452,cs),
(-19,448,o),
(-14,440,o),
(-2,440,cs),
(65,440,ls),
(95.667,440,o),
(97,432.667,o),
(97,402,cs),
(97,187,ls),
(97,83.029,o),
(135.7,-20,o),
(261,-20,cs),
(354.834,-20,o),
(402.808,37.133,o),
(422,81,c),
(422.667,41.667,o),
(424.333,14.667,o),
(427,0,cs),
(429.667,-14.667,o),
(434.667,-22,o),
(442,-22,cs)
);
},
{
closed = 1;
nodes = (
(300.667,510,o),
(335,533,o),
(335,581,cs),
(335,617,o),
(314,649,o),
(274,649,cs),
(235.333,649,o),
(208,619,o),
(208,579,cs),
(208,537.667,o),
(235.333,510,o),
(270,510,cs)
);
},
{
closed = 1;
nodes = (
(247.333,529,o),
(238,549.667,o),
(238,579,cs),
(238,607,o),
(246.667,629,o),
(272,629,cs),
(298.667,629,o),
(305,605.333,o),
(305,580,cs),
(305,549.333,o),
(292.667,529,o),
(270,529,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 9 12 1 10 11 9 10 91 0 11 0 8 6 11 8 91 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 9 12 1 10 11 9 10 91 0 11 0 8 6 11 8 91 0 6 0 5 1 6 5 91 0 1 0 0 2 1 0 91 7 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
96 95 102 100 95 106 96 106 93 91 39 43 53 55 38 53 94 52 50 13 24
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = uring;
unicode = 367;
},
{
glyphname = utilde;
kernLeft = u;
kernRight = u;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(436,121.465,o),
(370.193,58,o),
(297,58,cs),
(202.831,58,o),
(202,164.217,o),
(202,243,cs),
(202,300.603,o),
(206,389.026,o),
(206,427,cs),
(206,469.461,o),
(190.814,472,o),
(121,472,cs),
(42.126,472,o),
(10,462.824,o),
(10,432,cs),
(10,401.333,o),
(29.667,399,o),
(55,399,cs),
(79,399,ls),
(109.667,399,o),
(111,391.667,o),
(111,361,cs),
(111,187,ls),
(111,83.029,o),
(149.7,-20,o),
(275,-20,cs),
(368.834,-20,o),
(416.808,37.133,o),
(436,81,c),
(436,6.877,o),
(436.804,-22,o),
(466,-22,cs),
(602.894,-22,o),
(609,-6.459,o),
(609,22,cs),
(609,43.333,o),
(599.333,50.333,o),
(586,53,cs),
(580.667,54.333,o),
(565.333,55,o),
(556,55,cs),
(533.333,55,o),
(528,63.333,o),
(528,78,cs),
(528,80,o),
(527.833,86.833,o),
(527.5,98.5,cs),
(527.167,110.167,o),
(527,129.333,o),
(527,156,cs),
(527,265.943,o),
(530,345.993,o),
(530,383,cs),
(530,431,o),
(509.724,432,o),
(436,432,cs),
(351.335,432,o),
(324,420.743,o),
(324,390,cs),
(324,371.333,o),
(335.333,359,o),
(358,359,cs),
(411,359,ls),
(435,359,o),
(438,340.667,o),
(438,318,cs),
(436,191,l),
(436,191,l)
);
},
{
closed = 1;
nodes = (
(111,514,o),
(118,498,o),
(130,498,cs),
(150.593,498,o),
(174.709,523,o),
(214,523,cs),
(252.662,523,o),
(295.294,499,o),
(351,499,cs),
(383.676,499,o),
(462,516.584,o),
(462,574,cs),
(462,595.333,o),
(446.667,609,o),
(440,609,cs),
(435.333,609,o),
(425.333,604.667,o),
(410,596,cs),
(391.333,585.333,o),
(368.667,579,o),
(350,579,cs),
(310.599,579,o),
(249.495,607,o),
(213,607,cs),
(188.333,607,o),
(165.667,601,o),
(145,589,cs),
(126.333,578.333,o),
(111,563.333,o),
(111,534,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
44 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 6 9 11 91 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 6 9 11 91 0 6 0 5 0 6 5 91 0 1 0 0 2 1 0 91 7 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
122 120 117 115 112 110 104 102 99 97 41 44 54 55 40 40 61 54 50 14 24
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(101,547,o),
(100,541,o),
(100,535,cs),
(100,520,o),
(106,507,o),
(117,507,cs),
(134,507,o),
(161,532,o),
(201,532,cs),
(240,532,o),
(282,508,o),
(338,508,cs),
(394,508,o),
(427,530,o),
(440,553,cs),
(443,559,o),
(445,565,o),
(445,572,cs),
(445,588,o),
(434,600,o),
(427,600,cs),
(424,600,o),
(420,599,o),
(417,598,cs),
(413,596,o),
(406,592,o),
(397,587,cs),
(374,576,o),
(354,570,o),
(337,570,cs),
(298,570,o),
(236,598,o),
(200,598,cs),
(175,598,o),
(153,592,o),
(132,580,cs),
(122,574,o),
(115,569,o),
(111,564,cs),
(107,559,o),
(104,555,o),
(103,552,cs)
);
},
{
closed = 1;
nodes = (
(429,106.315,o),
(359.789,40,o),
(281,40,cs),
(174.305,40,o),
(175,159.392,o),
(175,243,cs),
(175,300.603,o),
(179,389.026,o),
(179,427,cs),
(179,469.66,o),
(168.337,472,o),
(115,472,cs),
(73,472,o),
(39.833,469.667,o),
(15.5,465,cs),
(-8.833,460.333,o),
(-21,452.667,o),
(-21,442,cs),
(-21,423.333,o),
(0,420,o),
(20,420,cs),
(73,420,ls),
(103.667,420,o),
(105,412.667,o),
(105,382,cs),
(105,187,ls),
(105,83.029,o),
(143.7,-20,o),
(269,-20,cs),
(362.834,-20,o),
(410.808,37.133,o),
(430,81,c),
(430.667,41.667,o),
(432.333,14.667,o),
(435,0,cs),
(437.667,-14.667,o),
(442.667,-22,o),
(450,-22,cs),
(563.057,-22,o),
(596,-11.51,o),
(596,15,cs),
(596,31,o),
(584,39,o),
(560,39,cs),
(549.333,39,o),
(542.167,38.833,o),
(538.5,38.5,cs),
(534.833,38.167,o),
(531.667,38,o),
(529,38,cs),
(506.333,38,o),
(501,45.333,o),
(501,60,cs),
(501,62.667,o),
(500.833,71,o),
(500.5,85,cs),
(500.167,99,o),
(500,122.667,o),
(500,156,cs),
(500,265.943,o),
(503,345.993,o),
(503,383,cs),
(503,430.344,o),
(488.134,432,o),
(430,432,cs),
(382,432,o),
(347.5,429.5,o),
(326.5,424.5,cs),
(305.5,419.5,o),
(295,410.667,o),
(295,398,cs),
(295,386,o),
(306.333,380,o),
(329,380,cs),
(405,380,ls),
(423,380,o),
(432,366.333,o),
(432,339,cs),
(429,180,l),
(429,180,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
76 1 8 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 13 1 3 91 0 12 12 13 83 0 13 13 23 67 0 6 6 7 83 0 7 7 15 67 14 9 2 8 8 10 83 11 1 10 10 21 10 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 13 1 3 91 0 13 0 12 6 13 12 91 0 7 0 6 8 7 6 92 14 9 2 8 8 10 83 11 1 10 10 21 10 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
113 111 98 96 92 89 82 80 74 72 67 65 46 35 53 35 35 38 35 35 37 15 35
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(466.534,-22,o),
(578,-23.215,o),
(578,-1,cs),
(578,7,o),
(563,10,o),
(551,10,cs),
(535,10,o),
(522,9.833,o),
(512,9.5,cs),
(502,9.167,o),
(495,9,o),
(491,9,cs),
(468.333,9,o),
(463,16.667,o),
(463,30,cs),
(463,33.333,o),
(462.833,44.167,o),
(462.5,62.5,cs),
(462.167,80.833,o),
(462,112,o),
(462,156,cs),
(462,265.943,o),
(465,345.993,o),
(465,383,cs),
(465,427.927,o),
(458.12,432,o),
(422,432,cs),
(340.015,432,o),
(297,424.364,o),
(297,411,cs),
(297,403.667,o),
(308.333,400,o),
(331,400,cs),
(397,400,ls),
(419.667,400,o),
(424,395,o),
(424,359,cs),
(421,172,ls),
(421,84.242,o),
(347.373,10,o),
(258,10,cs),
(137.92,10,o),
(137,144.057,o),
(137,243,cs),
(137,300.603,o),
(141,389.026,o),
(141,427,cs),
(141,468.333,o),
(135,472,o),
(107,472,cs),
(25.728,472,o),
(-19,463.573,o),
(-19,452,cs),
(-19,448,o),
(-14,440,o),
(-2,440,cs),
(65,440,ls),
(95.667,440,o),
(97,432.667,o),
(97,402,cs),
(97,187,ls),
(97,83.029,o),
(135.7,-20,o),
(261,-20,cs),
(354.834,-20,o),
(402.808,37.133,o),
(422,81,c),
(422.667,41.667,o),
(424.333,14.667,o),
(427,0,cs),
(429.667,-14.667,o),
(434.667,-22,o),
(442,-22,cs)
);
},
{
closed = 1;
nodes = (
(113.791,522,o),
(140.735,547,o),
(182,547,cs),
(220.662,547,o),
(263.294,523,o),
(319,523,cs),
(371.947,523,o),
(421,542.797,o),
(421,568,cs),
(421,577.333,o),
(414.667,585,o),
(408,585,cs),
(404.667,585,o),
(401.167,584.167,o),
(397.5,582.5,cs),
(393.833,580.833,o),
(387.333,577.333,o),
(378,572,cs),
(355.333,560.667,o),
(335.333,555,o),
(318,555,cs),
(278.599,555,o),
(217.495,583,o),
(181,583,cs),
(156.333,583,o),
(133.667,577,o),
(113,565,cs),
(93.667,553.667,o),
(84,544.333,o),
(84,537,cs),
(84,530.333,o),
(91.333,522,o),
(98,522,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 6 9 11 91 0 5 5 6 83 0 6 6 23 67 0 0 0 1 83 0 1 1 15 67 7 1 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
10 1 8 0 12 11 8 12 91 0 9 13 1 11 6 9 11 91 0 6 0 5 1 6 5 91 0 1 0 0 2 1 0 92 7 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
116 114 111 109 106 104 98 96 93 91 40 43 53 55 38 53 94 52 50 14 24
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = utilde;
unicode = 361;
},
{
glyphname = v;
kernLeft = v;
kernRight = v;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(432.333,359.667,o),
(449.333,361.667,o),
(468,363,cs),
(498,365,o),
(518.833,368.667,o),
(530.5,374,cs),
(542.167,379.333,o),
(548,387,o),
(548,397,cs),
(548,418.222,o),
(538.764,423,o),
(410,423,cs),
(322.411,423,o),
(301,423.666,o),
(301,389,cs),
(301,377,o),
(311.333,369.667,o),
(322,367,cs),
(328.667,365.667,o),
(332,362.667,o),
(332,358,cs),
(332,359.367,o),
(309.561,252.149,o),
(260,131,c),
(217.921,259.066,o),
(180,376.307,o),
(180,383,cs),
(180,393.667,o),
(194.333,397.667,o),
(209,399,cs),
(229,400.333,o),
(243,409.333,o),
(243,428,cs),
(243,453.333,o),
(222.333,454,o),
(201,454,cs),
(178.501,454,o),
(126.499,453,o),
(45,453,cs),
(26.333,453,o),
(2,450.333,o),
(2,429,cs),
(2,406.867,o),
(41.427,401.762,o),
(58,399,cs),
(75.333,396.333,o),
(81,390,o),
(93,358,cs),
(139.304,229.982,o),
(146.466,205.987,o),
(203,31,cs),
(213.667,0.333,o),
(229,-14,o),
(257,-14,cs),
(283.667,-14,o),
(302.333,0,o),
(313,36,cs),
(318.384,52.152,o),
(330.933,87.771,o),
(362,174.5,cs),
(388.022,247.146,o),
(411.623,310.453,o),
(423,337,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
48 1 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 2 2 1 83 0 1 1 15 67 0 4 4 3 83 0 3 3 15 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 2 4 1 2 91 0 3 0 4 0 3 4 91 0 0 0 21 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
71 70 65 61 40 39 35 28 41 5 16
CALL[ ]	/* CallFunction */";
};
width = 523;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(423,367.667,o),
(433.333,372.333,o),
(460,375,cs),
(496,379,o),
(529,378,o),
(529,402,cs),
(529,425.839,o),
(492.382,423,o),
(395,423,cs),
(319.35,423,o),
(294,424.416,o),
(294,400,cs),
(294,388,o),
(300.333,378,o),
(311,378,cs),
(333.667,378,o),
(339,375.333,o),
(339,362,cs),
(339,346.928,o),
(304.927,263.59,o),
(255,105,c),
(201.473,260.564,o),
(161,384.444,o),
(161,395,cs),
(161,406.608,o),
(177.208,408,o),
(189,408,cs),
(209,408,o),
(224,418.333,o),
(224,433,cs),
(224,451.667,o),
(207.333,454,o),
(186,454,cs),
(163.501,454,o),
(111.499,453,o),
(30,453,cs),
(11.333,453,o),
(-6,450,o),
(-6,434,cs),
(-6,418,o),
(18,413.667,o),
(38,411,cs),
(62.2,408.311,o),
(81.244,405.717,o),
(94,370,cs),
(149.9,217.011,o),
(156.277,199.028,o),
(216,9,cs),
(222.667,-9.667,o),
(242.333,-14,o),
(253,-14,cs),
(271.667,-14,o),
(284.333,-5.333,o),
(291,12,cs),
(295.89,26.671,o),
(316.349,82.131,o),
(346.5,167,cs),
(376.532,251.536,o),
(401.723,320.549,o),
(415,349,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
49 1 0 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 2 2 1 83 0 1 1 15 67 0 3 3 4 83 0 4 4 15 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 2 3 1 2 91 0 4 0 3 0 4 3 91 0 0 0 21 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
67 63 58 56 41 38 34 27 40 5 16
CALL[ ]	/* CallFunction */";
};
width = 510;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(254.667,-14,o),
(262.333,-5.333,o),
(269,12,cs),
(272.524,22.573,o),
(292.161,77.46,o),
(327,177,cs),
(358.262,266.32,o),
(385.918,338.632,o),
(403,369,cs),
(412.333,387.667,o),
(421.333,392.333,o),
(448,395,cs),
(463.333,396.333,o),
(476.167,397.5,o),
(486.5,398.5,cs),
(496.833,399.5,o),
(502,403,o),
(502,409,cs),
(502,424.06,o),
(449.366,423,o),
(373,423,cs),
(335.667,423,o),
(310.5,422.333,o),
(297.5,421,cs),
(284.5,419.667,o),
(278,416,o),
(278,410,cs),
(278,402,o),
(285,398,o),
(299,398,cs),
(321.667,398,o),
(337,397.167,o),
(345,395.5,cs),
(353,393.833,o),
(357,389.333,o),
(357,382,cs),
(357,373.244,o),
(349.514,349.415,o),
(336,310,cs),
(319.599,262.163,o),
(289.57,179.413,o),
(248,61,c),
(201.198,198.178,o),
(167.899,298.303,o),
(147,361,cs),
(138.237,387.29,o),
(133,405.076,o),
(133,415,cs),
(133,423,o),
(142.333,427.333,o),
(161,428,cs),
(171,428.667,o),
(179.5,429.833,o),
(186.5,431.5,cs),
(193.5,433.167,o),
(197,436.667,o),
(197,442,cs),
(197,450,o),
(186,454,o),
(164,454,cs),
(141.501,454,o),
(89.499,453,o),
(8,453,cs),
(-9.333,453,o),
(-18,449.667,o),
(-18,443,cs),
(-18,435.667,o),
(-8.667,431.667,o),
(10,431,cs),
(44.832,428.512,o),
(82.01,429.173,o),
(96,390,cs),
(118.015,333.389,o),
(142.332,262.066,o),
(156,218.5,cs),
(166.801,184.072,o),
(179.38,142.715,o),
(195.5,95,cs),
(203.833,70.333,o),
(213.333,41.667,o),
(224,9,cs),
(229.333,-6.333,o),
(236.667,-14,o),
(246,-14,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
46 1 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
3 1 1 1 2 83 0 2 2 15 67 0 4 4 5 83 0 5 5 15 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 2 3 1 1 5 2 1 91 0 5 0 4 0 5 4 91 0 0 0 21 0 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
51 47 35 114 29 40 6 21
CALL[ ]	/* CallFunction */";
};
width = 492;
}
);
note = v;
unicode = 118;
},
{
glyphname = w;
kernLeft = w;
kernRight = w;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(515.01,169.259,o),
(475.699,333.506,o),
(465,387,cs),
(457,420.333,o),
(442.333,435,o),
(413,435,cs),
(380.333,435,o),
(359.333,419.333,o),
(350,388,cs),
(338.796,354.388,o),
(305.45,251.981,o),
(266,131,c),
(220.162,273.424,o),
(186,382.808,o),
(186,396,cs),
(186,402.667,o),
(190.667,406,o),
(200,406,cs),
(228,406,ls),
(252,406,o),
(266,412.667,o),
(266,434,cs),
(266,464.667,o),
(244.667,465,o),
(206,465,cs),
(82,465,ls),
(39.333,465,o),
(10,462.667,o),
(10,432,cs),
(10,403.665,o),
(42.968,406,o),
(73,406,cs),
(81,406,o),
(83,404.667,o),
(87,394,cs),
(202,62,ls),
(216.667,20.667,o),
(233.667,8,o),
(259,8,cs),
(287,8,o),
(305.333,20.667,o),
(314,46,cs),
(405,315,l),
(467,43,ls),
(475,5.667,o),
(489.667,-17,o),
(519,-17,cs),
(543,-17,o),
(560,-3.667,o),
(570,23,cs),
(608.667,123,o),
(639.167,201.5,o),
(661.5,258.5,cs),
(683.833,315.5,o),
(697.667,345.667,o),
(703,349,c),
(706.333,352.333,o),
(710.833,354.833,o),
(716.5,356.5,cs),
(722.167,358.167,o),
(732.667,359,o),
(748,359,cs),
(774.667,359,o),
(805,361.333,o),
(805,388,cs),
(805,409.394,o),
(790.92,420,o),
(674,420,cs),
(587.641,420,o),
(558,411.175,o),
(558,383,cs),
(558,364.333,o),
(567.333,359,o),
(578,359,cs),
(583,359,ls),
(593.667,359,o),
(599,355.333,o),
(599,348,cs),
(599,338.566,o),
(582.955,291.711,o),
(562.5,232.5,cs),
(538.795,163.881,o),
(526,127.278,o),
(526,122,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
71 38 0 3 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
2 1 0 5 4 5 0 4 104 0 8 8 15 67 0 1 1 15 67 7 1 5 5 6 83 0 6 6 23 67 0 4 4 13 67 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 8 6 1 6 8 1 104 0 1 5 6 1 5 102 2 1 0 5 4 5 0 4 104 0 6 7 1 5 0 6 5 91 0 4 4 13 67 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
44 52 53 53 37 38 38 38 56 9 24
CALL[ ]	/* CallFunction */";
};
width = 785;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(479.394,227.056,o),
(452.546,345.045,o),
(447,370,cs),
(437.276,413.76,o),
(442.693,386.227,o),
(436,413,c),
(424,429,o),
(412.667,433,o),
(398,433,cs),
(380.667,433,o),
(366.667,427.667,o),
(356,413,c),
(351.333,401.667,o),
(341.167,370.333,o),
(325.5,319,cs),
(309.833,267.667,o),
(287.333,198.333,o),
(258,111,c),
(200.205,270.785,o),
(156,395.224,o),
(156,408,cs),
(156,414.667,o),
(160.667,418,o),
(170,418,cs),
(208,418,ls),
(233.333,418,o),
(246,425.667,o),
(246,441,cs),
(246,452.333,o),
(241.333,459.167,o),
(232,461.5,cs),
(222.667,463.833,o),
(208.333,465,o),
(189,465,cs),
(65,465,ls),
(43.667,465,o),
(27.5,463.667,o),
(16.5,461,cs),
(5.5,458.333,o),
(0,451.333,o),
(0,440,cs),
(0,428.667,o),
(6.167,422.167,o),
(18.5,420.5,cs),
(30.833,418.833,o),
(46.333,418,o),
(65,418,cs),
(77,418,o),
(80.333,416,o),
(83,408,cs),
(216,32,l),
(229.333,14.667,o),
(236.333,8,o),
(255,8,cs),
(273.667,8,o),
(284.333,11.667,o),
(291,29,cs),
(394,345,l),
(469,28,ls),
(478.333,-9.333,o),
(488.333,-17,o),
(511,-17,cs),
(521.667,-17,o),
(540.333,-9,o),
(551,15,cs),
(603,143,o),
(636.667,226.5,o),
(658,280.5,cs),
(677.395,329.594,o),
(688.397,356.798,o),
(694,361,cs),
(698,364.333,o),
(702.333,366.667,o),
(707,368,cs),
(711.667,369.333,o),
(721.667,370,o),
(737,370,cs),
(763.667,370,o),
(793,370,o),
(793,394,cs),
(793,412.726,o),
(777.569,417,o),
(674,417,cs),
(561.6,417,o),
(551,404.847,o),
(551,388,cs),
(551,377.333,o),
(556.667,370,o),
(574,370,cs),
(584,370,ls),
(595.333,370,o),
(601,364.333,o),
(601,353,cs),
(601,334.45,o),
(556.343,197.543,o),
(512,95,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
70 39 0 3 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 8 8 15 67 7 1 5 5 6 83 0 6 6 23 67 2 1 0 0 1 83 0 1 1 15 67 0 4 4 13 67 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 8 6 5 6 8 5 104 0 6 7 1 5 1 6 5 91 0 1 2 1 0 4 1 0 91 0 4 4 13 67 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
43 51 52 37 38 41 37 54 54 9 24
CALL[ ]	/* CallFunction */";
};
width = 770;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(505.667,-17,o),
(516.333,-9,o),
(527,15,cs),
(590.907,172.029,o),
(631.811,277.867,o),
(651.5,324.5,cs),
(664.9,356.237,o),
(672.435,375.29,o),
(681,381,cs),
(685.667,384.333,o),
(690.167,386.667,o),
(694.5,388,cs),
(698.833,389.333,o),
(708.667,390,o),
(724,390,cs),
(737.333,390,o),
(746.5,391,o),
(751.5,393,cs),
(756.5,395,o),
(759,398.667,o),
(759,404,cs),
(759,418.163,o),
(726.249,417,o),
(676,417,cs),
(624.667,417,o),
(588.667,415.833,o),
(568,413.5,cs),
(547.333,411.167,o),
(537,407,o),
(537,401,cs),
(537,394.333,o),
(546.333,390,o),
(561,390,cs),
(596,390,ls),
(610.667,390,o),
(618,384.333,o),
(618,373,cs),
(618,361.033,o),
(611.334,335.946,o),
(598,296.5,cs),
(582,249.167,o),
(553,172.667,o),
(501,50,c),
(459.55,197.513,o),
(432.09,296.784,o),
(417.5,347.5,cs),
(407.242,383.158,o),
(400.227,404.931,o),
(397,413,cs),
(390.333,429,o),
(383.333,433,o),
(374,433,cs),
(363.333,433,o),
(353.667,427.667,o),
(347,413,cs),
(341.041,399.592,o),
(332.831,372.795,o),
(321,333,cs),
(306.333,283.667,o),
(283.333,206,o),
(246,78,c),
(164.618,294.305,o),
(128,411.377,o),
(128,428,cs),
(128,434.667,o),
(132.667,438,o),
(142,438,cs),
(180,438,ls),
(204.667,438,o),
(217,443,o),
(217,453,cs),
(217,457.667,o),
(213.167,460.833,o),
(205.5,462.5,cs),
(197.833,464.167,o),
(184.333,465,o),
(165,465,cs),
(41,465,ls),
(19.667,465,o),
(5.167,464.167,o),
(-2.5,462.5,cs),
(-10.167,460.833,o),
(-14,457.667,o),
(-14,453,cs),
(-14,448.333,o),
(-10.167,444.667,o),
(-2.5,442,cs),
(5.167,439.333,o),
(18.333,438,o),
(37,438,cs),
(67.667,438,o),
(75.667,430.667,o),
(85,408,cs),
(222,32,ls),
(228.667,14.667,o),
(238,8,o),
(246,8,cs),
(254,8,o),
(263,14.333,o),
(267,29,cs),
(371,375,l),
(474,3,ls),
(478,-10.333,o),
(485,-17,o),
(495,-17,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
69 38 0 3 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
7 1 5 5 6 83 0 6 6 23 67 0 8 8 15 67 2 1 0 0 1 83 0 1 1 15 67 0 4 4 13 67 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 8 5 1 5 8 1 104 0 6 7 1 5 8 6 5 91 0 1 2 1 0 4 1 0 91 0 4 4 13 67 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
45 51 52 37 37 43 37 52 54 9 24
CALL[ ]	/* CallFunction */";
};
width = 748;
}
);
note = w;
unicode = 119;
},
{
glyphname = wacute;
kernLeft = w;
kernRight = w;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(530,665.333,o),
(502.667,686.667,o),
(460,688,cs),
(434.667,688,o),
(404,649.167,o),
(380,608.5,cs),
(359.511,573.783,o),
(338,526.988,o),
(338,522,cs),
(338,507.333,o),
(360.333,500,o),
(375,500,cs),
(392.099,500,o),
(427.389,522.679,o),
(466,557,cs),
(500.627,587.78,o),
(530,622.341,o),
(530,640,cs)
);
},
{
closed = 1;
nodes = (
(515.01,169.259,o),
(475.699,333.506,o),
(465,387,cs),
(457,420.333,o),
(442.333,435,o),
(413,435,cs),
(380.333,435,o),
(359.333,419.333,o),
(350,388,cs),
(338.796,354.388,o),
(305.45,251.981,o),
(266,131,c),
(220.162,273.424,o),
(186,382.808,o),
(186,396,cs),
(186,402.667,o),
(190.667,406,o),
(200,406,cs),
(228,406,ls),
(252,406,o),
(266,412.667,o),
(266,434,cs),
(266,464.667,o),
(244.667,465,o),
(206,465,cs),
(82,465,ls),
(39.333,465,o),
(10,462.667,o),
(10,432,cs),
(10,403.665,o),
(42.968,406,o),
(73,406,cs),
(81,406,o),
(83,404.667,o),
(87,394,cs),
(202,62,ls),
(216.667,20.667,o),
(233.667,8,o),
(259,8,cs),
(287,8,o),
(305.333,20.667,o),
(314,46,cs),
(405,315,l),
(467,43,ls),
(475,5.667,o),
(489.667,-17,o),
(519,-17,cs),
(543,-17,o),
(560,-3.667,o),
(570,23,cs),
(608.667,123,o),
(639.167,201.5,o),
(661.5,258.5,cs),
(683.833,315.5,o),
(697.667,345.667,o),
(703,349,c),
(706.333,352.333,o),
(710.833,354.833,o),
(716.5,356.5,cs),
(722.167,358.167,o),
(732.667,359,o),
(748,359,cs),
(774.667,359,o),
(805,361.333,o),
(805,388,cs),
(805,409.394,o),
(790.92,420,o),
(674,420,cs),
(587.641,420,o),
(558,411.175,o),
(558,383,cs),
(558,364.333,o),
(567.333,359,o),
(578,359,cs),
(583,359,ls),
(593.667,359,o),
(599,355.333,o),
(599,348,cs),
(599,338.566,o),
(582.955,291.711,o),
(562.5,232.5,cs),
(538.795,163.881,o),
(526,127.278,o),
(526,122,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
89 56 18 3 6 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 1 106 0 0 8 0 106 4 1 2 7 6 7 2 6 104 0 10 10 15 67 0 3 3 15 67 9 1 7 7 8 83 0 8 8 23 67 0 6 6 13 67 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 1 0 1 106 0 0 8 0 106 0 10 8 3 8 10 3 104 0 3 7 8 3 7 102 4 1 2 7 6 7 2 6 104 0 8 9 1 7 2 8 7 91 0 6 6 13 67 0 5 5 21 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
97 95 83 80 53 53 37 38 38 38 58 38 38 11 24
CALL[ ]	/* CallFunction */";
};
width = 785;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(488,654.667,o),
(469.667,670,o),
(439,670,cs),
(420.565,670,o),
(392.366,635.522,o),
(369,599.5,cs),
(343.182,559.697,o),
(328,526.174,o),
(328,522,cs),
(328,508.667,o),
(342.333,504,o),
(353,504,cs),
(382.68,504,o),
(488,603.002,o),
(488,632,cs)
);
},
{
closed = 1;
nodes = (
(479.394,227.056,o),
(452.546,345.045,o),
(447,370,cs),
(437.276,413.76,o),
(442.693,386.227,o),
(436,413,c),
(424,429,o),
(412.667,433,o),
(398,433,cs),
(380.667,433,o),
(366.667,427.667,o),
(356,413,c),
(351.333,401.667,o),
(341.167,370.333,o),
(325.5,319,cs),
(309.833,267.667,o),
(287.333,198.333,o),
(258,111,c),
(200.205,270.785,o),
(156,395.224,o),
(156,408,cs),
(156,414.667,o),
(160.667,418,o),
(170,418,cs),
(208,418,ls),
(233.333,418,o),
(246,425.667,o),
(246,441,cs),
(246,452.333,o),
(241.333,459.167,o),
(232,461.5,cs),
(222.667,463.833,o),
(208.333,465,o),
(189,465,cs),
(65,465,ls),
(43.667,465,o),
(27.5,463.667,o),
(16.5,461,cs),
(5.5,458.333,o),
(0,451.333,o),
(0,440,cs),
(0,428.667,o),
(6.167,422.167,o),
(18.5,420.5,cs),
(30.833,418.833,o),
(46.333,418,o),
(65,418,cs),
(77,418,o),
(80.333,416,o),
(83,408,cs),
(216,32,l),
(229.333,14.667,o),
(236.333,8,o),
(255,8,cs),
(273.667,8,o),
(284.333,11.667,o),
(291,29,cs),
(394,345,l),
(469,28,ls),
(478.333,-9.333,o),
(488.333,-17,o),
(511,-17,cs),
(521.667,-17,o),
(540.333,-9,o),
(551,15,cs),
(603,143,o),
(636.667,226.5,o),
(658,280.5,cs),
(677.395,329.594,o),
(688.397,356.798,o),
(694,361,cs),
(698,364.333,o),
(702.333,366.667,o),
(707,368,cs),
(711.667,369.333,o),
(721.667,370,o),
(737,370,cs),
(763.667,370,o),
(793,370,o),
(793,394,cs),
(793,412.726,o),
(777.569,417,o),
(674,417,cs),
(561.6,417,o),
(551,404.847,o),
(551,388,cs),
(551,377.333,o),
(556.667,370,o),
(574,370,cs),
(584,370,ls),
(595.333,370,o),
(601,364.333,o),
(601,353,cs),
(601,334.45,o),
(556.343,197.543,o),
(512,95,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
88 57 18 3 6 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 1 0 1 106 0 0 8 0 106 0 10 10 15 67 9 1 7 7 8 83 0 8 8 23 67 4 1 2 2 3 83 0 3 3 15 67 0 6 6 13 67 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 106 0 0 8 0 106 0 10 8 7 8 10 7 104 0 8 9 1 7 3 8 7 91 0 3 4 1 2 6 3 2 91 0 6 6 13 67 0 5 5 21 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
95 93 82 79 52 37 38 41 37 54 56 40 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 770;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(505.667,-17,o),
(516.333,-9,o),
(527,15,cs),
(590.907,172.029,o),
(631.811,277.867,o),
(651.5,324.5,cs),
(664.9,356.237,o),
(672.435,375.29,o),
(681,381,cs),
(685.667,384.333,o),
(690.167,386.667,o),
(694.5,388,cs),
(698.833,389.333,o),
(708.667,390,o),
(724,390,cs),
(737.333,390,o),
(746.5,391,o),
(751.5,393,cs),
(756.5,395,o),
(759,398.667,o),
(759,404,cs),
(759,418.163,o),
(726.249,417,o),
(676,417,cs),
(624.667,417,o),
(588.667,415.833,o),
(568,413.5,cs),
(547.333,411.167,o),
(537,407,o),
(537,401,cs),
(537,394.333,o),
(546.333,390,o),
(561,390,cs),
(596,390,ls),
(610.667,390,o),
(618,384.333,o),
(618,373,cs),
(618,361.033,o),
(611.334,335.946,o),
(598,296.5,cs),
(582,249.167,o),
(553,172.667,o),
(501,50,c),
(459.55,197.513,o),
(432.09,296.784,o),
(417.5,347.5,cs),
(407.242,383.158,o),
(400.227,404.931,o),
(397,413,cs),
(390.333,429,o),
(383.333,433,o),
(374,433,cs),
(363.333,433,o),
(353.667,427.667,o),
(347,413,cs),
(341.041,399.592,o),
(332.831,372.795,o),
(321,333,cs),
(306.333,283.667,o),
(283.333,206,o),
(246,78,c),
(164.618,294.305,o),
(128,411.377,o),
(128,428,cs),
(128,434.667,o),
(132.667,438,o),
(142,438,cs),
(180,438,ls),
(204.667,438,o),
(217,443,o),
(217,453,cs),
(217,457.667,o),
(213.167,460.833,o),
(205.5,462.5,cs),
(197.833,464.167,o),
(184.333,465,o),
(165,465,cs),
(41,465,ls),
(19.667,465,o),
(5.167,464.167,o),
(-2.5,462.5,cs),
(-10.167,460.833,o),
(-14,457.667,o),
(-14,453,cs),
(-14,448.333,o),
(-10.167,444.667,o),
(-2.5,442,cs),
(5.167,439.333,o),
(18.333,438,o),
(37,438,cs),
(67.667,438,o),
(75.667,430.667,o),
(85,408,cs),
(222,32,ls),
(228.667,14.667,o),
(238,8,o),
(246,8,cs),
(254,8,o),
(263,14.333,o),
(267,29,cs),
(371,375,l),
(474,3,ls),
(478,-10.333,o),
(485,-17,o),
(495,-17,cs)
);
},
{
closed = 1;
nodes = (
(341.797,510,o),
(429,597.027,o),
(429,618,cs),
(429,636.667,o),
(420.667,640,o),
(410,640,cs),
(389.822,640,o),
(315,545.882,o),
(315,521,cs),
(315,513.667,o),
(317.667,510,o),
(323,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
69 38 0 3 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 10 9 10 106 0 9 6 9 106 7 1 5 5 6 83 0 6 6 23 67 0 8 8 15 67 2 1 0 0 1 83 0 1 1 15 67 0 4 4 13 67 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 10 9 10 106 0 9 6 9 106 0 8 5 1 5 8 1 104 0 6 7 1 5 8 6 5 91 0 1 2 1 0 4 1 0 91 0 4 4 13 67 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
98 96 91 89 45 51 52 37 37 43 37 52 54 11 24
CALL[ ]	/* CallFunction */";
};
width = 748;
}
);
note = wacute;
unicode = 7811;
},
{
glyphname = wcircumflex;
kernLeft = w;
kernRight = w;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(542.333,510,o),
(546,520.333,o),
(546,531,cs),
(546,571.963,o),
(436.877,664,o),
(413,664,cs),
(402,664,o),
(366.897,638.643,o),
(340,613.5,cs),
(309.333,584.833,o),
(281,549.333,o),
(281,524,cs),
(281,517.333,o),
(286,510,o),
(294,510,cs),
(306.064,510,o),
(363.718,545.91,o),
(413,572,c),
(484.614,534.087,o),
(521.803,510,o),
(533,510,cs)
);
},
{
closed = 1;
nodes = (
(515.01,169.259,o),
(475.699,333.506,o),
(465,387,cs),
(457,420.333,o),
(442.333,435,o),
(413,435,cs),
(380.333,435,o),
(359.333,419.333,o),
(350,388,cs),
(338.796,354.388,o),
(305.45,251.981,o),
(266,131,c),
(220.162,273.424,o),
(186,382.808,o),
(186,396,cs),
(186,402.667,o),
(190.667,406,o),
(200,406,cs),
(228,406,ls),
(252,406,o),
(266,412.667,o),
(266,434,cs),
(266,464.667,o),
(244.667,465,o),
(206,465,cs),
(82,465,ls),
(39.333,465,o),
(10,462.667,o),
(10,432,cs),
(10,403.665,o),
(42.968,406,o),
(73,406,cs),
(81,406,o),
(83,404.667,o),
(87,394,cs),
(202,62,ls),
(216.667,20.667,o),
(233.667,8,o),
(259,8,cs),
(287,8,o),
(305.333,20.667,o),
(314,46,cs),
(405,315,l),
(467,43,ls),
(475,5.667,o),
(489.667,-17,o),
(519,-17,cs),
(543,-17,o),
(560,-3.667,o),
(570,23,cs),
(608.667,123,o),
(639.167,201.5,o),
(661.5,258.5,cs),
(683.833,315.5,o),
(697.667,345.667,o),
(703,349,c),
(706.333,352.333,o),
(710.833,354.833,o),
(716.5,356.5,cs),
(722.167,358.167,o),
(732.667,359,o),
(748,359,cs),
(774.667,359,o),
(805,361.333,o),
(805,388,cs),
(805,409.394,o),
(790.92,420,o),
(674,420,cs),
(587.641,420,o),
(558,411.175,o),
(558,383,cs),
(558,364.333,o),
(567.333,359,o),
(578,359,cs),
(583,359,ls),
(593.667,359,o),
(599,355.333,o),
(599,348,cs),
(599,338.566,o),
(582.955,291.711,o),
(562.5,232.5,cs),
(538.795,163.881,o),
(526,127.278,o),
(526,122,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
5 1 0 2 97 64 26 3 7 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 2 0 2 106 1 12 2 0 9 0 106 5 1 3 8 7 8 3 7 104 0 11 11 15 67 0 4 4 15 67 10 1 8 8 9 83 0 9 9 23 67 0 7 7 13 67 0 6 6 21 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 2 0 2 106 1 12 2 0 9 0 106 0 11 9 4 9 11 4 104 0 4 8 9 4 8 102 5 1 3 8 7 8 3 7 104 0 9 10 1 8 3 9 8 91 0 7 7 13 67 0 6 6 21 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 105 103 91 88 84 81 76 73 68 66 61 59 53 51 45 43 37 34 19 17 11 9 0 25 1 25 13 15
CALL[ ]	/* CallFunction */";
};
width = 785;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(479.394,227.056,o),
(452.546,345.045,o),
(447,370,cs),
(437.276,413.76,o),
(442.693,386.227,o),
(436,413,c),
(424,429,o),
(412.667,433,o),
(398,433,cs),
(380.667,433,o),
(366.667,427.667,o),
(356,413,c),
(351.333,401.667,o),
(341.167,370.333,o),
(325.5,319,cs),
(309.833,267.667,o),
(287.333,198.333,o),
(258,111,c),
(200.205,270.785,o),
(156,395.224,o),
(156,408,cs),
(156,414.667,o),
(160.667,418,o),
(170,418,cs),
(208,418,ls),
(233.333,418,o),
(246,425.667,o),
(246,441,cs),
(246,452.333,o),
(241.333,459.167,o),
(232,461.5,cs),
(222.667,463.833,o),
(208.333,465,o),
(189,465,cs),
(65,465,ls),
(43.667,465,o),
(27.5,463.667,o),
(16.5,461,cs),
(5.5,458.333,o),
(0,451.333,o),
(0,440,cs),
(0,428.667,o),
(6.167,422.167,o),
(18.5,420.5,cs),
(30.833,418.833,o),
(46.333,418,o),
(65,418,cs),
(77,418,o),
(80.333,416,o),
(83,408,cs),
(216,32,l),
(229.333,14.667,o),
(236.333,8,o),
(255,8,cs),
(273.667,8,o),
(284.333,11.667,o),
(291,29,cs),
(394,345,l),
(469,28,ls),
(478.333,-9.333,o),
(488.333,-17,o),
(511,-17,cs),
(521.667,-17,o),
(540.333,-9,o),
(551,15,cs),
(603,143,o),
(636.667,226.5,o),
(658,280.5,cs),
(677.395,329.594,o),
(688.397,356.798,o),
(694,361,cs),
(698,364.333,o),
(702.333,366.667,o),
(707,368,cs),
(711.667,369.333,o),
(721.667,370,o),
(737,370,cs),
(763.667,370,o),
(793,370,o),
(793,394,cs),
(793,412.726,o),
(777.569,417,o),
(674,417,cs),
(561.6,417,o),
(551,404.847,o),
(551,388,cs),
(551,377.333,o),
(556.667,370,o),
(574,370,cs),
(584,370,ls),
(595.333,370,o),
(601,364.333,o),
(601,353,cs),
(601,334.45,o),
(556.343,197.543,o),
(512,95,c)
);
},
{
closed = 1;
nodes = (
(524,510,o),
(527,518,o),
(527,527,cs),
(527,562,o),
(421,655,o),
(396,655,cs),
(374,655,o),
(266,564,o),
(266,523,cs),
(266,514,o),
(270,510,o),
(277,510,cs),
(292,510,o),
(323,538,o),
(396,581,c),
(409,573,o),
(503,510,o),
(516,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
92 1 9 11 71 40 1 3 4 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 11 9 11 106 10 12 2 9 6 9 106 0 8 8 15 67 7 1 5 5 6 83 0 6 6 23 67 2 1 0 0 1 83 0 1 1 15 67 0 4 4 13 67 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 11 9 11 106 10 12 2 9 6 9 106 0 8 6 5 6 8 5 104 0 6 7 1 5 1 6 5 91 0 1 2 1 0 4 1 0 91 0 4 4 13 67 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
88 87 105 103 98 96 87 111 88 111 43 51 52 37 38 41 37 54 55 13 35
CALL[ ]	/* CallFunction */";
};
width = 770;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(505.667,-17,o),
(516.333,-9,o),
(527,15,cs),
(590.907,172.029,o),
(631.811,277.867,o),
(651.5,324.5,cs),
(664.9,356.237,o),
(672.435,375.29,o),
(681,381,cs),
(685.667,384.333,o),
(690.167,386.667,o),
(694.5,388,cs),
(698.833,389.333,o),
(708.667,390,o),
(724,390,cs),
(737.333,390,o),
(746.5,391,o),
(751.5,393,cs),
(756.5,395,o),
(759,398.667,o),
(759,404,cs),
(759,418.163,o),
(726.249,417,o),
(676,417,cs),
(624.667,417,o),
(588.667,415.833,o),
(568,413.5,cs),
(547.333,411.167,o),
(537,407,o),
(537,401,cs),
(537,394.333,o),
(546.333,390,o),
(561,390,cs),
(596,390,ls),
(610.667,390,o),
(618,384.333,o),
(618,373,cs),
(618,361.033,o),
(611.334,335.946,o),
(598,296.5,cs),
(582,249.167,o),
(553,172.667,o),
(501,50,c),
(459.55,197.513,o),
(432.09,296.784,o),
(417.5,347.5,cs),
(407.242,383.158,o),
(400.227,404.931,o),
(397,413,cs),
(390.333,429,o),
(383.333,433,o),
(374,433,cs),
(363.333,433,o),
(353.667,427.667,o),
(347,413,cs),
(341.041,399.592,o),
(332.831,372.795,o),
(321,333,cs),
(306.333,283.667,o),
(283.333,206,o),
(246,78,c),
(164.618,294.305,o),
(128,411.377,o),
(128,428,cs),
(128,434.667,o),
(132.667,438,o),
(142,438,cs),
(180,438,ls),
(204.667,438,o),
(217,443,o),
(217,453,cs),
(217,457.667,o),
(213.167,460.833,o),
(205.5,462.5,cs),
(197.833,464.167,o),
(184.333,465,o),
(165,465,cs),
(41,465,ls),
(19.667,465,o),
(5.167,464.167,o),
(-2.5,462.5,cs),
(-10.167,460.833,o),
(-14,457.667,o),
(-14,453,cs),
(-14,448.333,o),
(-10.167,444.667,o),
(-2.5,442,cs),
(5.167,439.333,o),
(18.333,438,o),
(37,438,cs),
(67.667,438,o),
(75.667,430.667,o),
(85,408,cs),
(222,32,ls),
(228.667,14.667,o),
(238,8,o),
(246,8,cs),
(254,8,o),
(263,14.333,o),
(267,29,cs),
(371,375,l),
(474,3,ls),
(478,-10.333,o),
(485,-17,o),
(495,-17,cs)
);
},
{
closed = 1;
nodes = (
(267.084,510,o),
(319.433,558.894,o),
(372,596,c),
(448.411,542.063,o),
(477.302,510,o),
(492,510,cs),
(497.333,510,o),
(500,513.667,o),
(500,521,cs),
(500,546.329,o),
(396.852,640,o),
(372,640,cs),
(348.626,640,o),
(245,545.933,o),
(245,521,cs),
(245,513.667,o),
(247.667,510,o),
(253,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
90 1 9 11 69 38 0 3 4 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 11 9 11 106 10 12 2 9 6 9 106 7 1 5 5 6 83 0 6 6 23 67 0 8 8 15 67 2 1 0 0 1 83 0 1 1 15 67 0 4 4 13 67 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 11 9 11 106 10 12 2 9 6 9 106 0 8 5 1 5 8 1 104 0 6 7 1 5 8 6 5 91 0 1 2 1 0 4 1 0 91 0 4 4 13 67 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
86 85 103 101 96 94 85 108 86 108 45 51 52 37 37 43 37 52 54 13 24
CALL[ ]	/* CallFunction */";
};
width = 748;
}
);
note = wcircumflex;
unicode = 373;
},
{
glyphname = wdieresis;
kernLeft = w;
kernRight = w;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(247,536.333,o),
(272.667,509,o),
(306,509,cs),
(335.675,509,o),
(373,523.646,o),
(373,579,cs),
(373,615,o),
(345,640,o),
(313,640,cs),
(266.034,640,o),
(247,598.847,o),
(247,575,cs)
);
},
{
closed = 1;
nodes = (
(454,513.333,o),
(479.667,486,o),
(513,486,cs),
(542.675,486,o),
(580,500.646,o),
(580,556,cs),
(580,592,o),
(552,617,o),
(520,617,cs),
(473.034,617,o),
(454,575.847,o),
(454,552,cs)
);
},
{
closed = 1;
nodes = (
(515.01,169.259,o),
(475.699,333.506,o),
(465,387,cs),
(457,420.333,o),
(442.333,435,o),
(413,435,cs),
(380.333,435,o),
(359.333,419.333,o),
(350,388,cs),
(338.796,354.388,o),
(305.45,251.981,o),
(266,131,c),
(220.162,273.424,o),
(186,382.808,o),
(186,396,cs),
(186,402.667,o),
(190.667,406,o),
(200,406,cs),
(228,406,ls),
(252,406,o),
(266,412.667,o),
(266,434,cs),
(266,464.667,o),
(244.667,465,o),
(206,465,cs),
(82,465,ls),
(39.333,465,o),
(10,462.667,o),
(10,432,cs),
(10,403.665,o),
(42.968,406,o),
(73,406,cs),
(81,406,o),
(83,404.667,o),
(87,394,cs),
(202,62,ls),
(216.667,20.667,o),
(233.667,8,o),
(259,8,cs),
(287,8,o),
(305.333,20.667,o),
(314,46,cs),
(405,315,l),
(467,43,ls),
(475,5.667,o),
(489.667,-17,o),
(519,-17,cs),
(543,-17,o),
(560,-3.667,o),
(570,23,cs),
(608.667,123,o),
(639.167,201.5,o),
(661.5,258.5,cs),
(683.833,315.5,o),
(697.667,345.667,o),
(703,349,c),
(706.333,352.333,o),
(710.833,354.833,o),
(716.5,356.5,cs),
(722.167,358.167,o),
(732.667,359,o),
(748,359,cs),
(774.667,359,o),
(805,361.333,o),
(805,388,cs),
(805,409.394,o),
(790.92,420,o),
(674,420,cs),
(587.641,420,o),
(558,411.175,o),
(558,383,cs),
(558,364.333,o),
(567.333,359,o),
(578,359,cs),
(583,359,ls),
(593.667,359,o),
(599,355.333,o),
(599,348,cs),
(599,338.566,o),
(582.955,291.711,o),
(562.5,232.5,cs),
(538.795,163.881,o),
(526,127.278,o),
(526,122,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
103 70 32 3 8 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
6 1 4 9 8 9 4 8 104 0 0 0 1 3 0 1 91 0 2 0 3 10 2 3 91 0 12 12 15 67 0 5 5 15 67 11 1 9 9 10 83 0 10 10 23 67 0 8 8 13 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 12 10 5 10 12 5 104 0 5 9 10 5 9 102 6 1 4 9 8 9 4 8 104 0 0 0 1 3 0 1 91 0 2 0 3 10 2 3 91 0 10 11 1 9 4 10 9 91 0 8 8 13 67 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
111 109 97 94 90 87 82 79 37 38 38 38 58 38 38 38 36 13 24
CALL[ ]	/* CallFunction */";
};
width = 785;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(479.394,227.056,o),
(452.546,345.045,o),
(447,370,cs),
(437.276,413.76,o),
(442.693,386.227,o),
(436,413,c),
(424,429,o),
(412.667,433,o),
(398,433,cs),
(380.667,433,o),
(366.667,427.667,o),
(356,413,c),
(351.333,401.667,o),
(341.167,370.333,o),
(325.5,319,cs),
(309.833,267.667,o),
(287.333,198.333,o),
(258,111,c),
(200.205,270.785,o),
(156,395.224,o),
(156,408,cs),
(156,414.667,o),
(160.667,418,o),
(170,418,cs),
(208,418,ls),
(233.333,418,o),
(246,425.667,o),
(246,441,cs),
(246,452.333,o),
(241.333,459.167,o),
(232,461.5,cs),
(222.667,463.833,o),
(208.333,465,o),
(189,465,cs),
(65,465,ls),
(43.667,465,o),
(27.5,463.667,o),
(16.5,461,cs),
(5.5,458.333,o),
(0,451.333,o),
(0,440,cs),
(0,428.667,o),
(6.167,422.167,o),
(18.5,420.5,cs),
(30.833,418.833,o),
(46.333,418,o),
(65,418,cs),
(77,418,o),
(80.333,416,o),
(83,408,cs),
(216,32,l),
(229.333,14.667,o),
(236.333,8,o),
(255,8,cs),
(273.667,8,o),
(284.333,11.667,o),
(291,29,cs),
(394,345,l),
(469,28,ls),
(478.333,-9.333,o),
(488.333,-17,o),
(511,-17,cs),
(521.667,-17,o),
(540.333,-9,o),
(551,15,cs),
(603,143,o),
(636.667,226.5,o),
(658,280.5,cs),
(677.395,329.594,o),
(688.397,356.798,o),
(694,361,cs),
(698,364.333,o),
(702.333,366.667,o),
(707,368,cs),
(711.667,369.333,o),
(721.667,370,o),
(737,370,cs),
(763.667,370,o),
(793,370,o),
(793,394,cs),
(793,412.726,o),
(777.569,417,o),
(674,417,cs),
(561.6,417,o),
(551,404.847,o),
(551,388,cs),
(551,377.333,o),
(556.667,370,o),
(574,370,cs),
(584,370,ls),
(595.333,370,o),
(601,364.333,o),
(601,353,cs),
(601,334.45,o),
(556.343,197.543,o),
(512,95,c)
);
},
{
closed = 1;
nodes = (
(241,542,o),
(263,518,o),
(290,518,cs),
(315,518,o),
(346,531,o),
(346,579,cs),
(346,610,o),
(324,631,o),
(297,631,cs),
(259,631,o),
(241,596,o),
(241,575,cs)
);
},
{
closed = 1;
nodes = (
(448,519,o),
(470,495,o),
(497,495,cs),
(522,495,o),
(553,508,o),
(553,556,cs),
(553,587,o),
(531,608,o),
(504,608,cs),
(466,608,o),
(448,573,o),
(448,552,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
71 40 1 3 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 9 0 10 12 9 10 91 0 11 0 12 6 11 12 91 0 8 8 15 67 7 1 5 5 6 83 0 6 6 23 67 2 1 0 0 1 83 0 1 1 15 67 0 4 4 13 67 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 8 6 5 6 8 5 104 0 9 0 10 12 9 10 91 0 11 0 12 6 11 12 91 0 6 7 1 5 1 6 5 91 0 1 2 1 0 4 1 0 91 0 4 4 13 67 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
113 111 107 105 99 97 93 91 43 51 52 37 38 41 37 54 55 13 35
CALL[ ]	/* CallFunction */";
};
width = 770;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(505.667,-17,o),
(516.333,-9,o),
(527,15,cs),
(590.907,172.029,o),
(631.811,277.867,o),
(651.5,324.5,cs),
(664.9,356.237,o),
(672.435,375.29,o),
(681,381,cs),
(685.667,384.333,o),
(690.167,386.667,o),
(694.5,388,cs),
(698.833,389.333,o),
(708.667,390,o),
(724,390,cs),
(737.333,390,o),
(746.5,391,o),
(751.5,393,cs),
(756.5,395,o),
(759,398.667,o),
(759,404,cs),
(759,418.163,o),
(726.249,417,o),
(676,417,cs),
(624.667,417,o),
(588.667,415.833,o),
(568,413.5,cs),
(547.333,411.167,o),
(537,407,o),
(537,401,cs),
(537,394.333,o),
(546.333,390,o),
(561,390,cs),
(596,390,ls),
(610.667,390,o),
(618,384.333,o),
(618,373,cs),
(618,361.033,o),
(611.334,335.946,o),
(598,296.5,cs),
(582,249.167,o),
(553,172.667,o),
(501,50,c),
(459.55,197.513,o),
(432.09,296.784,o),
(417.5,347.5,cs),
(407.242,383.158,o),
(400.227,404.931,o),
(397,413,cs),
(390.333,429,o),
(383.333,433,o),
(374,433,cs),
(363.333,433,o),
(353.667,427.667,o),
(347,413,cs),
(341.041,399.592,o),
(332.831,372.795,o),
(321,333,cs),
(306.333,283.667,o),
(283.333,206,o),
(246,78,c),
(164.618,294.305,o),
(128,411.377,o),
(128,428,cs),
(128,434.667,o),
(132.667,438,o),
(142,438,cs),
(180,438,ls),
(204.667,438,o),
(217,443,o),
(217,453,cs),
(217,457.667,o),
(213.167,460.833,o),
(205.5,462.5,cs),
(197.833,464.167,o),
(184.333,465,o),
(165,465,cs),
(41,465,ls),
(19.667,465,o),
(5.167,464.167,o),
(-2.5,462.5,cs),
(-10.167,460.833,o),
(-14,457.667,o),
(-14,453,cs),
(-14,448.333,o),
(-10.167,444.667,o),
(-2.5,442,cs),
(5.167,439.333,o),
(18.333,438,o),
(37,438,cs),
(67.667,438,o),
(75.667,430.667,o),
(85,408,cs),
(222,32,ls),
(228.667,14.667,o),
(238,8,o),
(246,8,cs),
(254,8,o),
(263,14.333,o),
(267,29,cs),
(371,375,l),
(474,3,ls),
(478,-10.333,o),
(485,-17,o),
(495,-17,cs)
);
},
{
closed = 1;
nodes = (
(285.667,533,o),
(308,543,o),
(308,579,cs),
(308,601.667,o),
(292.667,616,o),
(274,616,cs),
(246.258,616,o),
(233,588.895,o),
(233,575,cs),
(233,551,o),
(248.333,533,o),
(267,533,cs)
);
},
{
closed = 1;
nodes = (
(492.667,510,o),
(515,520,o),
(515,556,cs),
(515,578.667,o),
(499.667,593,o),
(481,593,cs),
(453.258,593,o),
(440,565.895,o),
(440,552,cs),
(440,528,o),
(455.333,510,o),
(474,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
69 38 0 3 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 9 0 10 12 9 10 91 0 11 0 12 6 11 12 91 7 1 5 5 6 83 0 6 6 23 67 0 8 8 15 67 2 1 0 0 1 83 0 1 1 15 67 0 4 4 13 67 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 8 5 1 5 8 1 104 0 9 0 10 12 9 10 91 0 11 0 12 6 11 12 91 0 6 7 1 5 8 6 5 91 0 1 2 1 0 4 1 0 91 0 4 4 13 67 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
111 109 105 103 97 95 91 89 45 51 52 37 37 43 37 52 54 13 24
CALL[ ]	/* CallFunction */";
};
width = 748;
}
);
note = wdieresis;
unicode = 7813;
},
{
glyphname = wgrave;
kernLeft = w;
kernRight = w;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(282,607.193,o),
(399.363,501,o),
(437,501,cs),
(451.667,501,o),
(474,508.333,o),
(474,523,cs),
(474,527.988,o),
(452.489,574.783,o),
(432,609.5,cs),
(408,650.167,o),
(377.333,689,o),
(352,689,cs),
(309.333,687.667,o),
(282,666.333,o),
(282,641,cs)
);
},
{
closed = 1;
nodes = (
(515.01,169.259,o),
(475.699,333.506,o),
(465,387,cs),
(457,420.333,o),
(442.333,435,o),
(413,435,cs),
(380.333,435,o),
(359.333,419.333,o),
(350,388,cs),
(338.796,354.388,o),
(305.45,251.981,o),
(266,131,c),
(220.162,273.424,o),
(186,382.808,o),
(186,396,cs),
(186,402.667,o),
(190.667,406,o),
(200,406,cs),
(228,406,ls),
(252,406,o),
(266,412.667,o),
(266,434,cs),
(266,464.667,o),
(244.667,465,o),
(206,465,cs),
(82,465,ls),
(39.333,465,o),
(10,462.667,o),
(10,432,cs),
(10,403.665,o),
(42.968,406,o),
(73,406,cs),
(81,406,o),
(83,404.667,o),
(87,394,cs),
(202,62,ls),
(216.667,20.667,o),
(233.667,8,o),
(259,8,cs),
(287,8,o),
(305.333,20.667,o),
(314,46,cs),
(405,315,l),
(467,43,ls),
(475,5.667,o),
(489.667,-17,o),
(519,-17,cs),
(543,-17,o),
(560,-3.667,o),
(570,23,cs),
(608.667,123,o),
(639.167,201.5,o),
(661.5,258.5,cs),
(683.833,315.5,o),
(697.667,345.667,o),
(703,349,c),
(706.333,352.333,o),
(710.833,354.833,o),
(716.5,356.5,cs),
(722.167,358.167,o),
(732.667,359,o),
(748,359,cs),
(774.667,359,o),
(805,361.333,o),
(805,388,cs),
(805,409.394,o),
(790.92,420,o),
(674,420,cs),
(587.641,420,o),
(558,411.175,o),
(558,383,cs),
(558,364.333,o),
(567.333,359,o),
(578,359,cs),
(583,359,ls),
(593.667,359,o),
(599,355.333,o),
(599,348,cs),
(599,338.566,o),
(582.955,291.711,o),
(562.5,232.5,cs),
(538.795,163.881,o),
(526,127.278,o),
(526,122,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
87 54 16 3 6 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 0 1 0 106 0 1 8 1 106 4 1 2 7 6 7 2 6 104 0 10 10 15 67 0 3 3 15 67 9 1 7 7 8 83 0 8 8 23 67 0 6 6 13 67 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 0 1 0 106 0 1 8 1 106 0 10 8 3 8 10 3 104 0 3 7 8 3 7 102 4 1 2 7 6 7 2 6 104 0 8 9 1 7 2 8 7 91 0 6 6 13 67 0 5 5 21 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
95 93 81 78 53 53 37 38 38 38 60 38 34 11 24
CALL[ ]	/* CallFunction */";
};
width = 785;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(296,603.002,o),
(401.32,504,o),
(431,504,cs),
(441.667,504,o),
(456,508.667,o),
(456,522,cs),
(456,527.525,o),
(440.921,556.997,o),
(414.5,599.5,cs),
(392.05,635.615,o),
(363.158,670,o),
(345,670,cs),
(314.333,670,o),
(296,654.667,o),
(296,632,cs)
);
},
{
closed = 1;
nodes = (
(479.394,227.056,o),
(452.546,345.045,o),
(447,370,cs),
(437.276,413.76,o),
(442.693,386.227,o),
(436,413,c),
(424,429,o),
(412.667,433,o),
(398,433,cs),
(380.667,433,o),
(366.667,427.667,o),
(356,413,c),
(351.333,401.667,o),
(341.167,370.333,o),
(325.5,319,cs),
(309.833,267.667,o),
(287.333,198.333,o),
(258,111,c),
(200.205,270.785,o),
(156,395.224,o),
(156,408,cs),
(156,414.667,o),
(160.667,418,o),
(170,418,cs),
(208,418,ls),
(233.333,418,o),
(246,425.667,o),
(246,441,cs),
(246,452.333,o),
(241.333,459.167,o),
(232,461.5,cs),
(222.667,463.833,o),
(208.333,465,o),
(189,465,cs),
(65,465,ls),
(43.667,465,o),
(27.5,463.667,o),
(16.5,461,cs),
(5.5,458.333,o),
(0,451.333,o),
(0,440,cs),
(0,428.667,o),
(6.167,422.167,o),
(18.5,420.5,cs),
(30.833,418.833,o),
(46.333,418,o),
(65,418,cs),
(77,418,o),
(80.333,416,o),
(83,408,cs),
(216,32,l),
(229.333,14.667,o),
(236.333,8,o),
(255,8,cs),
(273.667,8,o),
(284.333,11.667,o),
(291,29,cs),
(394,345,l),
(469,28,ls),
(478.333,-9.333,o),
(488.333,-17,o),
(511,-17,cs),
(521.667,-17,o),
(540.333,-9,o),
(551,15,cs),
(603,143,o),
(636.667,226.5,o),
(658,280.5,cs),
(677.395,329.594,o),
(688.397,356.798,o),
(694,361,cs),
(698,364.333,o),
(702.333,366.667,o),
(707,368,cs),
(711.667,369.333,o),
(721.667,370,o),
(737,370,cs),
(763.667,370,o),
(793,370,o),
(793,394,cs),
(793,412.726,o),
(777.569,417,o),
(674,417,cs),
(561.6,417,o),
(551,404.847,o),
(551,388,cs),
(551,377.333,o),
(556.667,370,o),
(574,370,cs),
(584,370,ls),
(595.333,370,o),
(601,364.333,o),
(601,353,cs),
(601,334.45,o),
(556.343,197.543,o),
(512,95,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
88 57 18 3 6 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 0 1 0 106 0 1 8 1 106 0 10 10 15 67 9 1 7 7 8 83 0 8 8 23 67 4 1 2 2 3 83 0 3 3 15 67 0 6 6 13 67 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 0 1 0 106 0 1 8 1 106 0 10 8 7 8 10 7 104 0 8 9 1 7 3 8 7 91 0 3 4 1 2 6 3 2 91 0 6 6 13 67 0 5 5 21 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
95 93 82 79 52 37 38 41 37 54 58 40 34 11 24
CALL[ ]	/* CallFunction */";
};
width = 770;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(505.667,-17,o),
(516.333,-9,o),
(527,15,cs),
(590.907,172.029,o),
(631.811,277.867,o),
(651.5,324.5,cs),
(664.9,356.237,o),
(672.435,375.29,o),
(681,381,cs),
(685.667,384.333,o),
(690.167,386.667,o),
(694.5,388,cs),
(698.833,389.333,o),
(708.667,390,o),
(724,390,cs),
(737.333,390,o),
(746.5,391,o),
(751.5,393,cs),
(756.5,395,o),
(759,398.667,o),
(759,404,cs),
(759,418.163,o),
(726.249,417,o),
(676,417,cs),
(624.667,417,o),
(588.667,415.833,o),
(568,413.5,cs),
(547.333,411.167,o),
(537,407,o),
(537,401,cs),
(537,394.333,o),
(546.333,390,o),
(561,390,cs),
(596,390,ls),
(610.667,390,o),
(618,384.333,o),
(618,373,cs),
(618,361.033,o),
(611.334,335.946,o),
(598,296.5,cs),
(582,249.167,o),
(553,172.667,o),
(501,50,c),
(459.55,197.513,o),
(432.09,296.784,o),
(417.5,347.5,cs),
(407.242,383.158,o),
(400.227,404.931,o),
(397,413,cs),
(390.333,429,o),
(383.333,433,o),
(374,433,cs),
(363.333,433,o),
(353.667,427.667,o),
(347,413,cs),
(341.041,399.592,o),
(332.831,372.795,o),
(321,333,cs),
(306.333,283.667,o),
(283.333,206,o),
(246,78,c),
(164.618,294.305,o),
(128,411.377,o),
(128,428,cs),
(128,434.667,o),
(132.667,438,o),
(142,438,cs),
(180,438,ls),
(204.667,438,o),
(217,443,o),
(217,453,cs),
(217,457.667,o),
(213.167,460.833,o),
(205.5,462.5,cs),
(197.833,464.167,o),
(184.333,465,o),
(165,465,cs),
(41,465,ls),
(19.667,465,o),
(5.167,464.167,o),
(-2.5,462.5,cs),
(-10.167,460.833,o),
(-14,457.667,o),
(-14,453,cs),
(-14,448.333,o),
(-10.167,444.667,o),
(-2.5,442,cs),
(5.167,439.333,o),
(18.333,438,o),
(37,438,cs),
(67.667,438,o),
(75.667,430.667,o),
(85,408,cs),
(222,32,ls),
(228.667,14.667,o),
(238,8,o),
(246,8,cs),
(254,8,o),
(263,14.333,o),
(267,29,cs),
(371,375,l),
(474,3,ls),
(478,-10.333,o),
(485,-17,o),
(495,-17,cs)
);
},
{
closed = 1;
nodes = (
(427.333,510,o),
(430,513.667,o),
(430,521,cs),
(430,545.882,o),
(355.178,640,o),
(335,640,cs),
(324.333,640,o),
(316,636.667,o),
(316,618,cs),
(316,597.027,o),
(403.203,510,o),
(422,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
69 38 0 3 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 9 10 9 106 0 10 6 10 106 7 1 5 5 6 83 0 6 6 23 67 0 8 8 15 67 2 1 0 0 1 83 0 1 1 15 67 0 4 4 13 67 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 9 10 9 106 0 10 6 10 106 0 8 5 1 5 8 1 104 0 6 7 1 5 8 6 5 91 0 1 2 1 0 4 1 0 91 0 4 4 13 67 0 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
96 94 89 87 45 51 52 37 37 43 37 52 54 11 24
CALL[ ]	/* CallFunction */";
};
width = 748;
}
);
note = wgrave;
unicode = 7809;
},
{
glyphname = x;
kernLeft = x;
kernRight = x;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(259,31,o),
(252,18.333,o),
(252,1,cs),
(252,-9.667,o),
(256.5,-17.167,o),
(265.5,-21.5,cs),
(274.5,-25.833,o),
(292,-28,o),
(318,-28,cs),
(329.333,-28,o),
(341.5,-27.833,o),
(354.5,-27.5,cs),
(367.5,-27.167,o),
(379.667,-27,o),
(391,-27,cs),
(406.333,-27,o),
(419.833,-27.167,o),
(431.5,-27.5,cs),
(443.167,-27.833,o),
(457.333,-28,o),
(474,-28,cs),
(496.667,-28,o),
(524,-24,o),
(524,4,cs),
(524,29.273,o),
(514.75,38.635,o),
(445,44,cs),
(405.957,46.603,o),
(399.748,53.681,o),
(288,208,c),
(326.211,262.586,o),
(353.091,296.136,o),
(361,308,c),
(382.562,332.643,o),
(393.927,333.086,o),
(475,338,cs),
(521.667,340.667,o),
(527,355,o),
(527,375,cs),
(527,387.667,o),
(522.833,396.333,o),
(514.5,401,cs),
(506.167,405.667,o),
(489.333,408,o),
(464,408,cs),
(290,408,ls),
(259.333,408,o),
(244,394.667,o),
(244,368,cs),
(244,349.333,o),
(250.667,344,o),
(256,340,cs),
(260,336.667,o),
(264.333,334.833,o),
(269,334.5,cs),
(273.667,334.167,o),
(276,333.333,o),
(276,332,cs),
(276,330.667,o),
(275.667,329.167,o),
(275,327.5,cs),
(274.333,325.833,o),
(272.333,322.667,o),
(269,318,cs),
(238,274,l),
(216.667,302,o),
(202.667,322.5,o),
(196,335.5,cs),
(189.333,348.5,o),
(186,357,o),
(186,361,cs),
(186,374.783,o),
(221,374.103,o),
(221,403,cs),
(221,424.478,o),
(214.576,447,o),
(176,447,cs),
(62,447,ls),
(0.836,447,o),
(-12,435.768,o),
(-12,408,cs),
(-12,380,o),
(16,376,o),
(60,372,cs),
(77.985,369.431,o),
(78.169,370.247,o),
(101,336,cs),
(190,207,l),
(176.024,186.813,o),
(150.722,154.097,o),
(106,95,cs),
(82.743,63.99,o),
(7,82.091,o),
(7,39,cs),
(7,0.787,o),
(48.738,1,o),
(63,1,cs),
(72.333,1,o),
(81,1.167,o),
(89,1.5,cs),
(97,1.833,o),
(108.333,2,o),
(123,2,cs),
(146.491,2,o),
(172.509,0,o),
(196,0,cs),
(210.667,0,o),
(232,8.333,o),
(232,35,cs),
(232,51,o),
(225,60.667,o),
(211,64,cs),
(201,66.667,o),
(196,70,o),
(196,74,cs),
(196,79.333,o),
(200.833,88.333,o),
(210.5,101,cs),
(220.167,113.667,o),
(229.667,128.333,o),
(239,145,c),
(270.326,100.774,o),
(293,67.38,o),
(293,57,cs),
(293,53,o),
(291,49.833,o),
(287,47.5,cs),
(283,45.167,o),
(278.333,42.333,o),
(273,39,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
98 69 41 8 4 4 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 2 0 3 4 2 3 91 0 1 1 15 67 0 0 0 13 67 0 4 4 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 2 0 3 4 2 3 91 0 1 1 0 83 0 0 0 13 67 0 4 4 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 2 0 3 4 2 3 91 0 4 0 5 4 5 87 0 1 1 0 83 0 0 0 13 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
118 110 103 102 89 87 83 80 57 54 28 17 6 15
CALL[ ]	/* CallFunction */";
};
width = 559;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(300,24.333,o),
(296,10,o),
(296,2,cs),
(296,-3.333,o),
(299.5,-9.667,o),
(306.5,-17,cs),
(313.5,-24.333,o),
(325.667,-28,o),
(343,-28,cs),
(354.333,-28,o),
(364.833,-27.833,o),
(374.5,-27.5,cs),
(384.167,-27.167,o),
(394.667,-27,o),
(406,-27,cs),
(421.333,-27,o),
(434.833,-27.167,o),
(446.5,-27.5,cs),
(458.167,-27.833,o),
(472.333,-28,o),
(489,-28,cs),
(509,-28,o),
(532,-27.667,o),
(532,-1,cs),
(532,15,o),
(514.333,21.667,o),
(493,23,cs),
(469,24.333,o),
(455.333,25.333,o),
(434,32,cs),
(411.769,39.41,o),
(361.719,108.697,o),
(290,208,c),
(304,227.333,o),
(316.667,245.833,o),
(328,263.5,cs),
(339.333,281.167,o),
(353.333,299.667,o),
(370,319,cs),
(381.333,332.333,o),
(392.667,341,o),
(404,345,cs),
(411.333,348.333,o),
(423.167,350.333,o),
(439.5,351,cs),
(455.833,351.667,o),
(478,352,o),
(506,352,cs),
(519.333,352,o),
(528,367,o),
(528,375,cs),
(528,396.333,o),
(520.333,407,o),
(505,407,cs),
(321,407,ls),
(295.667,407,o),
(277,399.667,o),
(277,377,cs),
(277,361,o),
(292.667,355.667,o),
(298,353,cs),
(301.333,351,o),
(303,349,o),
(303,347,cs),
(303,343.667,o),
(300.5,337.833,o),
(295.5,329.5,cs),
(290.5,321.167,o),
(284,310.667,o),
(276,298,cs),
(251,261,l),
(200.708,327.008,o),
(176,370.151,o),
(176,375,cs),
(176,379.667,o),
(178.833,382.333,o),
(184.5,383,cs),
(190.167,383.667,o),
(197.667,384,o),
(207,384,cs),
(228.333,384,o),
(240,399,o),
(240,411,cs),
(240,425.998,o),
(238.55,443,o),
(184,443,cs),
(69,443,ls),
(37.667,443,o),
(17,440.833,o),
(7,436.5,cs),
(-3,432.167,o),
(-8,424.667,o),
(-8,414,cs),
(-8,392.667,o),
(11.333,388.667,o),
(50,386,cs),
(79.333,383.333,o),
(90.667,379.333,o),
(112,350,cs),
(213,207,l),
(189.148,175.197,o),
(189.95,174.269,o),
(118,81,cs),
(107.333,67.667,o),
(94.667,63,o),
(76,59,c),
(48,56.333,o),
(15,51.667,o),
(15,29,cs),
(15,2.577,o),
(41.611,1,o),
(57,1,cs),
(66.333,1,o),
(78,1.167,o),
(92,1.5,cs),
(106,1.833,o),
(120.333,2,o),
(135,2,cs),
(158.491,2,o),
(184.509,0,o),
(208,0,cs),
(225.333,0,o),
(251,3.333,o),
(251,26,cs),
(251,30.667,o),
(248.333,36.167,o),
(243,42.5,cs),
(237.667,48.833,o),
(224.667,52,o),
(204,52,cs),
(195.333,52,o),
(190.167,53,o),
(188.5,55,cs),
(186.833,57,o),
(186,59.333,o),
(186,62,cs),
(186,67.333,o),
(199.333,86,o),
(206,94,cs),
(213.333,104,o),
(220,113,o),
(226,121,cs),
(232,129,o),
(240.667,140.667,o),
(252,156,c),
(255.592,150.911,o),
(329,54.8,o),
(329,41,cs),
(329,29,o),
(322.667,29.667,o),
(312,27,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
80 1 6 2 100 74 47 8 4 0 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 5 0 6 0 5 6 91 4 1 2 2 3 83 0 3 3 15 67 0 0 0 1 83 0 1 1 13 67 0 7 7 8 83 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 3 4 1 2 6 3 2 91 0 5 0 6 0 5 6 91 0 0 0 1 83 0 1 1 13 67 0 7 7 8 83 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 3 4 1 2 6 3 2 91 0 5 0 6 0 5 6 91 0 7 0 8 7 8 87 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
121 113 109 107 94 91 88 85 67 65 59 56 52 51 32 22 18 16 9 15
CALL[ ]	/* CallFunction */";
};
width = 555;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(376.333,-28,o),
(386.833,-27.833,o),
(396.5,-27.5,cs),
(406.167,-27.167,o),
(416.667,-27,o),
(428,-27,cs),
(443.333,-27,o),
(456.833,-27.167,o),
(468.5,-27.5,cs),
(480.167,-27.833,o),
(494.333,-28,o),
(511,-28,cs),
(521,-28,o),
(529,-27.333,o),
(535,-26,cs),
(541,-24.667,o),
(544,-22.333,o),
(544,-19,cs),
(544,-11.667,o),
(534.333,-7.667,o),
(515,-7,cs),
(491,-5.667,o),
(477.333,-4.667,o),
(456,2,cs),
(438.47,7.843,o),
(386.608,78.389,o),
(293,208,c),
(326.152,254.413,o),
(348.62,288.774,o),
(396,348,cs),
(407.333,361.333,o),
(418.667,370,o),
(430,374,cs),
(446.963,379.654,o),
(457.655,381,o),
(508,381,cs),
(522.667,381,o),
(530,385.333,o),
(530,394,cs),
(530,402,o),
(522.333,406,o),
(507,406,cs),
(347,406,ls),
(323.667,406,o),
(308,405.333,o),
(300,404,cs),
(292,402.667,o),
(288,400,o),
(288,396,cs),
(288,390.667,o),
(290.667,387.167,o),
(296,385.5,cs),
(301.333,383.833,o),
(310.667,382.667,o),
(324,382,cs),
(339.333,381.333,o),
(349,380.5,o),
(353,379.5,cs),
(357,378.5,o),
(359,375.667,o),
(359,371,cs),
(359,363,o),
(346.667,347,o),
(332,327,cs),
(270,239,l),
(200.626,330.053,o),
(162,394.965,o),
(162,398,cs),
(162,402.667,o),
(165,405.333,o),
(171,406,cs),
(177,406.667,o),
(189.667,407,o),
(209,407,cs),
(227.667,407,o),
(240.667,414.667,o),
(242,424,cs),
(242,428.667,o),
(237.333,431.833,o),
(228,433.5,cs),
(218.667,435.167,o),
(199.333,436,o),
(170,436,cs),
(79,436,ls),
(47.667,436,o),
(26.333,435.333,o),
(15,434,cs),
(3.667,432.667,o),
(-2,429.333,o),
(-2,424,cs),
(-2,419.333,o),
(0.667,415.833,o),
(6,413.5,cs),
(11.333,411.167,o),
(21.333,409.667,o),
(36,409,cs),
(85.286,405.92,o),
(103.688,405.416,o),
(128,373,cs),
(246,207,l),
(206.909,154.879,o),
(195.093,133.759,o),
(132,53,cs),
(121.333,38.333,o),
(102.667,33,o),
(68,29,cs),
(40.667,26.333,o),
(27,21,o),
(27,13,cs),
(27,5,o),
(34.333,1,o),
(49,1,cs),
(58.333,1,o),
(70,1.167,o),
(84,1.5,cs),
(98,1.833,o),
(112.333,2,o),
(127,2,cs),
(143.667,2,o),
(161,1.667,o),
(179,1,cs),
(197,0.333,o),
(214,0,o),
(230,0,cs),
(245.333,0,o),
(253,4.333,o),
(253,13,cs),
(253,17.667,o),
(249.667,20.833,o),
(243,22.5,cs),
(236.333,24.167,o),
(220.667,25,o),
(196,25,cs),
(180,25,o),
(172,28.333,o),
(172,35,cs),
(172,40.333,o),
(175,47,o),
(181,55,cs),
(198.333,78.333,o),
(214.333,100.333,o),
(229,121,cs),
(243.667,141.667,o),
(257.333,159.667,o),
(270,175,c),
(306,125.667,o),
(333.5,87.5,o),
(352.5,60.5,cs),
(371.5,33.5,o),
(381,17,o),
(381,11,cs),
(381,-1,o),
(373.333,-1.667,o),
(364,-3,cs),
(344.667,-5,o),
(332.167,-7.333,o),
(326.5,-10,cs),
(320.833,-12.667,o),
(318,-16,o),
(318,-20,cs),
(318,-23.333,o),
(321.5,-25.5,o),
(328.5,-26.5,cs),
(335.5,-27.5,o),
(347.667,-28,o),
(365,-28,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
52 1 2 3 93 63 36 6 4 0 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 6 7 1 5 0 6 5 91 4 1 2 2 3 83 0 3 3 15 67 0 0 0 1 83 0 1 1 13 67 0 8 8 9 83 0 9 9 21 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 4 1 2 6 3 2 91 0 6 7 1 5 0 6 5 91 0 0 0 1 83 0 1 1 13 67 0 8 8 9 83 0 9 9 21 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 3 4 1 2 6 3 2 91 0 6 7 1 5 0 6 5 91 0 8 0 9 8 9 87 0 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
113 105 102 100 84 80 78 75 71 69 56 54 50 47 43 41 131 44 10 17
CALL[ ]	/* CallFunction */";
};
width = 550;
}
);
note = x;
unicode = 120;
},
{
glyphname = y;
kernLeft = y;
kernRight = y;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(149,-71.667,o),
(153.333,-70.667,o),
(160,-68,c),
(198.667,-57.333,o),
(209,-38.333,o),
(209,-13,cs),
(209,11,o),
(188.667,27,o),
(162,27,cs),
(115.333,27,o),
(75,-15.667,o),
(75,-85,cs),
(75,-150.333,o),
(114.667,-196,o),
(196,-196,cs),
(264,-196,o),
(311.667,-165.333,o),
(345,-124,cs),
(370.275,-93.669,o),
(394.827,-41.087,o),
(424,44,cs),
(519,313,ls),
(524.333,327.667,o),
(529.333,335.667,o),
(544,337,cs),
(574.134,339.511,o),
(613,347.23,o),
(613,375,cs),
(613,401.667,o),
(589.667,411,o),
(555,411,cs),
(393,411,ls),
(366.333,411,o),
(343,404.333,o),
(343,375,cs),
(343,356.333,o),
(350.667,345,o),
(380,341,cs),
(396,339,o),
(407,336.167,o),
(413,332.5,cs),
(419,328.833,o),
(422,324.333,o),
(422,319,cs),
(422,309.667,o),
(419.333,297.333,o),
(414,282,cs),
(354,90,l),
(238,299,ls),
(230.667,312.333,o),
(225.833,321.667,o),
(223.5,327,cs),
(221.167,332.333,o),
(220,337.333,o),
(220,342,cs),
(220,347.333,o),
(223.333,350.667,o),
(230,352,cs),
(271.333,360,o),
(287,372,o),
(287,392,cs),
(287,413.333,o),
(276.333,428,o),
(235,428,cs),
(81,428,ls),
(38.333,428,o),
(19,423.333,o),
(19,390,cs),
(19,378.667,o),
(23,370.167,o),
(31,364.5,cs),
(39,358.833,o),
(55.667,354.667,o),
(81,352,cs),
(114.333,349.333,o),
(122.333,342.667,o),
(133,324,cs),
(319,-12,l),
(309.667,-40,o),
(297.333,-71.333,o),
(272,-98,cs),
(253.333,-116.667,o),
(237,-127,o),
(205,-127,cs),
(165,-127,o),
(149,-111.667,o),
(149,-85,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
32 1 4 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 2 1 4 1 2 4 104 0 4 0 1 4 0 102 0 1 1 15 67 0 0 0 3 84 0 3 3 17 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 1 2 1 106 0 2 4 2 106 0 4 0 4 106 0 0 3 3 0 79 0 0 0 3 84 0 3 0 3 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
72 70 66 64 46 43 62 34 5 17
CALL[ ]	/* CallFunction */";
};
width = 621;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(129,-74.667,o),
(135,-62.333,o),
(147,-61,cs),
(163.669,-61,o),
(186,-54.017,o),
(186,-28,cs),
(186,-8,o),
(167.333,2,o),
(150,2,cs),
(112.571,2,o),
(76,-28.682,o),
(76,-84,cs),
(76,-148.999,o),
(130.362,-183,o),
(184,-183,cs),
(237.333,-183,o),
(278.333,-163.333,o),
(317,-118,cs),
(349,-80.667,o),
(371.667,-28,o),
(397,44,cs),
(499,331,ls),
(507,352.333,o),
(513,353.667,o),
(545,355,cs),
(571.667,356.333,o),
(600,360.333,o),
(600,383,cs),
(600,404.333,o),
(574.333,411,o),
(545,411,cs),
(377,411,ls),
(346.333,411,o),
(341,405.667,o),
(341,383,cs),
(341,368.333,o),
(354,355,o),
(386,355,cs),
(402,355,o),
(412.167,353.5,o),
(416.5,350.5,cs),
(420.833,347.5,o),
(423,343.333,o),
(423,338,cs),
(423,328,o),
(420.333,315.333,o),
(415,300,cs),
(340,68,l),
(202,327,ls),
(195.333,340.333,o),
(193,355,o),
(193,359,cs),
(193,372.333,o),
(198.333,372,o),
(205,372,cs),
(231.667,372,o),
(239,386.333,o),
(239,401,cs),
(239,417,o),
(232.667,428,o),
(198,428,cs),
(47,428,ls),
(15,428,o),
(-14,419,o),
(-14,395,cs),
(-14,383.667,o),
(-7.333,376.833,o),
(6,374.5,cs),
(19.333,372.167,o),
(38.667,370.667,o),
(64,370,cs),
(96.067,370,o),
(104.914,366.555,o),
(118,343,cs),
(313,-12,l),
(295.667,-50.667,o),
(280.333,-80.333,o),
(259,-99,cs),
(241.667,-115,o),
(217.667,-128,o),
(195,-128,cs),
(156.333,-128,o),
(129,-106.667,o),
(129,-84,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
35 1 8 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 5 6 1 4 8 5 4 91 0 8 0 9 0 8 9 91 3 1 1 1 2 83 0 2 2 15 67 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 8 0 9 0 8 9 91 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 8 0 9 0 8 9 91 0 0 7 7 0 79 0 0 0 7 83 0 7 0 7 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
82 81 40 40 36 52 43 36 52 42 34 10 24
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(204.333,-183,o),
(240.333,-168.667,o),
(279,-118,cs),
(307.667,-80.667,o),
(334.333,-26.667,o),
(359,44,cs),
(471,361,ls),
(479.365,383.307,o),
(490.783,385,o),
(547,385,cs),
(570.333,385.667,o),
(582,389.667,o),
(582,397,cs),
(582,407.667,o),
(567,411,o),
(547,411,cs),
(379,411,ls),
(363.667,411,o),
(353,410,o),
(347,408,cs),
(341,406,o),
(338,402.333,o),
(338,397,cs),
(338,391.667,o),
(342.333,388.333,o),
(351,387,cs),
(359.667,385.667,o),
(372,385,o),
(388,385,cs),
(404,385,o),
(414.167,383.833,o),
(418.5,381.5,cs),
(422.833,379.167,o),
(425,374.667,o),
(425,368,cs),
(425,358,o),
(422.333,345.333,o),
(417,330,cs),
(320,32,l),
(148,357,ls),
(141.333,370.333,o),
(139,385,o),
(139,389,cs),
(139,402.333,o),
(161,402,o),
(181,402,cs),
(207,402,o),
(220,407,o),
(220,417,cs),
(220,421,o),
(216.667,423.833,o),
(210,425.5,cs),
(203.333,427.167,o),
(191.333,428,o),
(174,428,cs),
(23,428,ls),
(7,428,o),
(-3.833,427,o),
(-9.5,425,cs),
(-15.167,423,o),
(-18,419.333,o),
(-18,414,cs),
(-18,408.667,o),
(-14.667,405.167,o),
(-8,403.5,cs),
(-1.333,401.833,o),
(14.667,400.667,o),
(40,400,cs),
(72.067,400,o),
(80.914,396.555,o),
(94,373,cs),
(305,-12,l),
(287.667,-50.667,o),
(270,-81.667,o),
(254,-103,cs),
(228.667,-136.333,o),
(205.667,-152,o),
(171,-152,cs),
(132.333,-152,o),
(103,-131.667,o),
(103,-109,cs),
(103,-100.333,o),
(108.333,-95,o),
(119,-93,cs),
(133.667,-91.667,o),
(156,-87.333,o),
(156,-58,cs),
(156,-32.667,o),
(139.333,-28,o),
(126,-28,cs),
(96.667,-28,o),
(69,-50.667,o),
(69,-96,cs),
(69,-152.238,o),
(114.961,-183,o),
(167,-183,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 8 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 8 4 0 4 8 0 104 0 5 6 1 4 8 5 4 91 3 1 1 1 2 83 0 2 2 15 67 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 8 4 0 4 8 0 104 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 8 4 0 4 8 0 104 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 7 7 0 79 0 0 0 7 83 0 7 0 7 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 41 35 52 43 35 52 42 34 9 24
CALL[ ]	/* CallFunction */";
};
width = 577;
}
);
note = y;
unicode = 121;
},
{
glyphname = yacute;
kernLeft = y;
kernRight = y;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(410,665.333,o),
(382.667,686.667,o),
(340,688,cs),
(314.667,688,o),
(284,649.167,o),
(260,608.5,cs),
(239.511,573.783,o),
(218,526.988,o),
(218,522,cs),
(218,507.333,o),
(240.333,500,o),
(255,500,cs),
(272.099,500,o),
(307.389,522.679,o),
(346,557,cs),
(380.627,587.78,o),
(410,622.341,o),
(410,640,cs)
);
},
{
closed = 1;
nodes = (
(149,-71.667,o),
(153.333,-70.667,o),
(160,-68,c),
(198.667,-57.333,o),
(209,-38.333,o),
(209,-13,cs),
(209,11,o),
(188.667,27,o),
(162,27,cs),
(115.333,27,o),
(75,-15.667,o),
(75,-85,cs),
(75,-150.333,o),
(114.667,-196,o),
(196,-196,cs),
(264,-196,o),
(311.667,-165.333,o),
(345,-124,cs),
(370.275,-93.669,o),
(394.827,-41.087,o),
(424,44,cs),
(519,313,ls),
(524.333,327.667,o),
(529.333,335.667,o),
(544,337,cs),
(574.134,339.511,o),
(613,347.23,o),
(613,375,cs),
(613,401.667,o),
(589.667,411,o),
(555,411,cs),
(393,411,ls),
(366.333,411,o),
(343,404.333,o),
(343,375,cs),
(343,356.333,o),
(350.667,345,o),
(380,341,cs),
(396,339,o),
(407,336.167,o),
(413,332.5,cs),
(419,328.833,o),
(422,324.333,o),
(422,319,cs),
(422,309.667,o),
(419.333,297.333,o),
(414,282,cs),
(354,90,l),
(238,299,ls),
(230.667,312.333,o),
(225.833,321.667,o),
(223.5,327,cs),
(221.167,332.333,o),
(220,337.333,o),
(220,342,cs),
(220,347.333,o),
(223.333,350.667,o),
(230,352,cs),
(271.333,360,o),
(287,372,o),
(287,392,cs),
(287,413.333,o),
(276.333,428,o),
(235,428,cs),
(81,428,ls),
(38.333,428,o),
(19,423.333,o),
(19,390,cs),
(19,378.667,o),
(23,370.167,o),
(31,364.5,cs),
(39,358.833,o),
(55.667,354.667,o),
(81,352,cs),
(114.333,349.333,o),
(122.333,342.667,o),
(133,324,cs),
(319,-12,l),
(309.667,-40,o),
(297.333,-71.333,o),
(272,-98,cs),
(253.333,-116.667,o),
(237,-127,o),
(205,-127,cs),
(165,-127,o),
(149,-111.667,o),
(149,-85,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
50 1 6 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 3 0 106 0 4 3 6 3 4 6 104 0 6 2 3 6 2 102 0 3 3 15 67 0 2 2 5 84 0 5 5 17 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 106 0 0 3 0 106 0 3 4 3 106 0 4 6 4 106 0 6 2 6 106 0 2 5 5 2 79 0 2 2 5 84 0 5 2 5 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
90 88 84 82 64 61 62 36 38 38 7 19
CALL[ ]	/* CallFunction */";
};
width = 621;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(383,654.667,o),
(364.667,670,o),
(334,670,cs),
(315.565,670,o),
(287.366,635.522,o),
(264,599.5,cs),
(238.182,559.697,o),
(223,526.174,o),
(223,522,cs),
(223,508.667,o),
(237.333,504,o),
(248,504,cs),
(277.68,504,o),
(383,603.002,o),
(383,632,cs)
);
},
{
closed = 1;
nodes = (
(129,-74.667,o),
(135,-62.333,o),
(147,-61,cs),
(163.669,-61,o),
(186,-54.017,o),
(186,-28,cs),
(186,-8,o),
(167.333,2,o),
(150,2,cs),
(112.571,2,o),
(76,-28.682,o),
(76,-84,cs),
(76,-148.999,o),
(130.362,-183,o),
(184,-183,cs),
(237.333,-183,o),
(278.333,-163.333,o),
(317,-118,cs),
(349,-80.667,o),
(371.667,-28,o),
(397,44,cs),
(499,331,ls),
(507,352.333,o),
(513,353.667,o),
(545,355,cs),
(571.667,356.333,o),
(600,360.333,o),
(600,383,cs),
(600,404.333,o),
(574.333,411,o),
(545,411,cs),
(377,411,ls),
(346.333,411,o),
(341,405.667,o),
(341,383,cs),
(341,368.333,o),
(354,355,o),
(386,355,cs),
(402,355,o),
(412.167,353.5,o),
(416.5,350.5,cs),
(420.833,347.5,o),
(423,343.333,o),
(423,338,cs),
(423,328,o),
(420.333,315.333,o),
(415,300,cs),
(340,68,l),
(202,327,ls),
(195.333,340.333,o),
(193,355,o),
(193,359,cs),
(193,372.333,o),
(198.333,372,o),
(205,372,cs),
(231.667,372,o),
(239,386.333,o),
(239,401,cs),
(239,417,o),
(232.667,428,o),
(198,428,cs),
(47,428,ls),
(15,428,o),
(-14,419,o),
(-14,395,cs),
(-14,383.667,o),
(-7.333,376.833,o),
(6,374.5,cs),
(19.333,372.167,o),
(38.667,370.667,o),
(64,370,cs),
(96.067,370,o),
(104.914,366.555,o),
(118,343,cs),
(313,-12,l),
(295.667,-50.667,o),
(280.333,-80.333,o),
(259,-99,cs),
(241.667,-115,o),
(217.667,-128,o),
(195,-128,cs),
(156.333,-128,o),
(129,-106.667,o),
(129,-84,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
53 1 10 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 1 106 0 0 4 0 106 0 7 8 1 6 10 7 6 91 0 10 0 11 2 10 11 91 5 1 3 3 4 83 0 4 4 15 67 0 2 2 9 83 0 9 9 17 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 106 0 0 4 0 106 0 4 5 1 3 6 4 3 91 0 7 8 1 6 10 7 6 91 0 10 0 11 2 10 11 91 0 2 2 9 83 0 9 9 17 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 1 0 1 106 0 0 4 0 106 0 4 5 1 3 6 4 3 91 0 7 8 1 6 10 7 6 91 0 10 0 11 2 10 11 91 0 2 9 9 2 79 0 2 2 9 83 0 9 2 9 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
100 99 93 91 83 81 36 52 43 36 52 42 36 40 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(204.333,-183,o),
(240.333,-168.667,o),
(279,-118,cs),
(307.667,-80.667,o),
(334.333,-26.667,o),
(359,44,cs),
(471,361,ls),
(479.365,383.307,o),
(490.783,385,o),
(547,385,cs),
(570.333,385.667,o),
(582,389.667,o),
(582,397,cs),
(582,407.667,o),
(567,411,o),
(547,411,cs),
(379,411,ls),
(363.667,411,o),
(353,410,o),
(347,408,cs),
(341,406,o),
(338,402.333,o),
(338,397,cs),
(338,391.667,o),
(342.333,388.333,o),
(351,387,cs),
(359.667,385.667,o),
(372,385,o),
(388,385,cs),
(404,385,o),
(414.167,383.833,o),
(418.5,381.5,cs),
(422.833,379.167,o),
(425,374.667,o),
(425,368,cs),
(425,358,o),
(422.333,345.333,o),
(417,330,cs),
(320,32,l),
(148,357,ls),
(141.333,370.333,o),
(139,385,o),
(139,389,cs),
(139,402.333,o),
(161,402,o),
(181,402,cs),
(207,402,o),
(220,407,o),
(220,417,cs),
(220,421,o),
(216.667,423.833,o),
(210,425.5,cs),
(203.333,427.167,o),
(191.333,428,o),
(174,428,cs),
(23,428,ls),
(7,428,o),
(-3.833,427,o),
(-9.5,425,cs),
(-15.167,423,o),
(-18,419.333,o),
(-18,414,cs),
(-18,408.667,o),
(-14.667,405.167,o),
(-8,403.5,cs),
(-1.333,401.833,o),
(14.667,400.667,o),
(40,400,cs),
(72.067,400,o),
(80.914,396.555,o),
(94,373,cs),
(305,-12,l),
(287.667,-50.667,o),
(270,-81.667,o),
(254,-103,cs),
(228.667,-136.333,o),
(205.667,-152,o),
(171,-152,cs),
(132.333,-152,o),
(103,-131.667,o),
(103,-109,cs),
(103,-100.333,o),
(108.333,-95,o),
(119,-93,cs),
(133.667,-91.667,o),
(156,-87.333,o),
(156,-58,cs),
(156,-32.667,o),
(139.333,-28,o),
(126,-28,cs),
(96.667,-28,o),
(69,-50.667,o),
(69,-96,cs),
(69,-152.238,o),
(114.961,-183,o),
(167,-183,cs)
);
},
{
closed = 1;
nodes = (
(257.797,510,o),
(345,597.027,o),
(345,618,cs),
(345,636.667,o),
(336.667,640,o),
(326,640,cs),
(305.822,640,o),
(231,545.882,o),
(231,521,cs),
(231,513.667,o),
(233.667,510,o),
(239,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 8 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 10 9 10 106 0 9 2 9 106 0 8 4 0 4 8 0 104 0 5 6 1 4 8 5 4 91 3 1 1 1 2 83 0 2 2 15 67 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 10 9 10 106 0 9 2 9 106 0 8 4 0 4 8 0 104 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 10 9 10 106 0 9 2 9 106 0 8 4 0 4 8 0 104 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 7 7 0 79 0 0 0 7 83 0 7 0 7 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
92 90 85 83 38 41 35 52 43 35 52 42 34 11 24
CALL[ ]	/* CallFunction */";
};
width = 577;
}
);
note = yacute;
unicode = 253;
},
{
glyphname = ycircumflex;
kernLeft = y;
kernRight = y;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(149,-71.667,o),
(153.333,-70.667,o),
(160,-68,c),
(198.667,-57.333,o),
(209,-38.333,o),
(209,-13,cs),
(209,11,o),
(188.667,27,o),
(162,27,cs),
(115.333,27,o),
(75,-15.667,o),
(75,-85,cs),
(75,-150.333,o),
(114.667,-196,o),
(196,-196,cs),
(264,-196,o),
(311.667,-165.333,o),
(345,-124,cs),
(370.275,-93.669,o),
(394.827,-41.087,o),
(424,44,cs),
(519,313,ls),
(524.333,327.667,o),
(529.333,335.667,o),
(544,337,cs),
(574.134,339.511,o),
(613,347.23,o),
(613,375,cs),
(613,401.667,o),
(589.667,411,o),
(555,411,cs),
(393,411,ls),
(366.333,411,o),
(343,404.333,o),
(343,375,cs),
(343,356.333,o),
(350.667,345,o),
(380,341,cs),
(396,339,o),
(407,336.167,o),
(413,332.5,cs),
(419,328.833,o),
(422,324.333,o),
(422,319,cs),
(422,309.667,o),
(419.333,297.333,o),
(414,282,cs),
(354,90,l),
(238,299,ls),
(230.667,312.333,o),
(225.833,321.667,o),
(223.5,327,cs),
(221.167,332.333,o),
(220,337.333,o),
(220,342,cs),
(220,347.333,o),
(223.333,350.667,o),
(230,352,cs),
(271.333,360,o),
(287,372,o),
(287,392,cs),
(287,413.333,o),
(276.333,428,o),
(235,428,cs),
(81,428,ls),
(38.333,428,o),
(19,423.333,o),
(19,390,cs),
(19,378.667,o),
(23,370.167,o),
(31,364.5,cs),
(39,358.833,o),
(55.667,354.667,o),
(81,352,cs),
(114.333,349.333,o),
(122.333,342.667,o),
(133,324,cs),
(319,-12,l),
(309.667,-40,o),
(297.333,-71.333,o),
(272,-98,cs),
(253.333,-116.667,o),
(237,-127,o),
(205,-127,cs),
(165,-127,o),
(149,-111.667,o),
(149,-85,cs)
);
},
{
closed = 1;
nodes = (
(431.333,510,o),
(435,520.333,o),
(435,531,cs),
(435,571.963,o),
(325.877,664,o),
(302,664,cs),
(291,664,o),
(255.897,638.643,o),
(229,613.5,cs),
(198.333,584.833,o),
(170,549.333,o),
(170,524,cs),
(170,517.333,o),
(175,510,o),
(183,510,cs),
(195.064,510,o),
(252.718,545.91,o),
(302,572,c),
(373.614,534.087,o),
(410.803,510,o),
(422,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
85 1 5 7 32 1 4 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 7 5 7 106 6 8 2 5 1 5 106 0 2 1 4 1 2 4 104 0 4 0 1 4 0 102 0 1 1 15 67 0 0 0 3 84 0 3 3 17 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 7 5 7 106 6 8 2 5 1 5 106 0 1 2 1 106 0 2 4 2 106 0 4 0 4 106 0 0 3 3 0 79 0 0 0 3 84 0 3 0 3 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
81 80 99 97 91 89 80 105 81 105 72 70 66 64 46 43 62 34 9 17
CALL[ ]	/* CallFunction */";
};
width = 621;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(129,-74.667,o),
(135,-62.333,o),
(147,-61,cs),
(163.669,-61,o),
(186,-54.017,o),
(186,-28,cs),
(186,-8,o),
(167.333,2,o),
(150,2,cs),
(112.571,2,o),
(76,-28.682,o),
(76,-84,cs),
(76,-148.999,o),
(130.362,-183,o),
(184,-183,cs),
(237.333,-183,o),
(278.333,-163.333,o),
(317,-118,cs),
(349,-80.667,o),
(371.667,-28,o),
(397,44,cs),
(499,331,ls),
(507,352.333,o),
(513,353.667,o),
(545,355,cs),
(571.667,356.333,o),
(600,360.333,o),
(600,383,cs),
(600,404.333,o),
(574.333,411,o),
(545,411,cs),
(377,411,ls),
(346.333,411,o),
(341,405.667,o),
(341,383,cs),
(341,368.333,o),
(354,355,o),
(386,355,cs),
(402,355,o),
(412.167,353.5,o),
(416.5,350.5,cs),
(420.833,347.5,o),
(423,343.333,o),
(423,338,cs),
(423,328,o),
(420.333,315.333,o),
(415,300,cs),
(340,68,l),
(202,327,ls),
(195.333,340.333,o),
(193,355,o),
(193,359,cs),
(193,372.333,o),
(198.333,372,o),
(205,372,cs),
(231.667,372,o),
(239,386.333,o),
(239,401,cs),
(239,417,o),
(232.667,428,o),
(198,428,cs),
(47,428,ls),
(15,428,o),
(-14,419,o),
(-14,395,cs),
(-14,383.667,o),
(-7.333,376.833,o),
(6,374.5,cs),
(19.333,372.167,o),
(38.667,370.667,o),
(64,370,cs),
(96.067,370,o),
(104.914,366.555,o),
(118,343,cs),
(313,-12,l),
(295.667,-50.667,o),
(280.333,-80.333,o),
(259,-99,cs),
(241.667,-115,o),
(217.667,-128,o),
(195,-128,cs),
(156.333,-128,o),
(129,-106.667,o),
(129,-84,cs)
);
},
{
closed = 1;
nodes = (
(424,510,o),
(427,518,o),
(427,527,cs),
(427,562,o),
(321,655,o),
(296,655,cs),
(274,655,o),
(166,564,o),
(166,523,cs),
(166,514,o),
(170,510,o),
(177,510,cs),
(192,510,o),
(223,538,o),
(296,581,c),
(309,573,o),
(403,510,o),
(416,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
91 1 10 12 36 1 8 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 12 10 12 106 11 13 2 10 2 10 106 0 5 6 1 4 8 5 4 91 0 8 0 9 0 8 9 91 3 1 1 1 2 83 0 2 2 15 67 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 12 10 12 106 11 13 2 10 2 10 106 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 8 0 9 0 8 9 91 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 12 10 12 106 11 13 2 10 2 10 106 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 8 0 9 0 8 9 91 0 0 7 7 0 79 0 0 0 7 83 0 7 0 7 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
87 86 104 102 97 95 86 110 87 110 83 82 40 40 36 52 43 36 52 42 35 14 35
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(204.333,-183,o),
(240.333,-168.667,o),
(279,-118,cs),
(307.667,-80.667,o),
(334.333,-26.667,o),
(359,44,cs),
(471,361,ls),
(479.365,383.307,o),
(490.783,385,o),
(547,385,cs),
(570.333,385.667,o),
(582,389.667,o),
(582,397,cs),
(582,407.667,o),
(567,411,o),
(547,411,cs),
(379,411,ls),
(363.667,411,o),
(353,410,o),
(347,408,cs),
(341,406,o),
(338,402.333,o),
(338,397,cs),
(338,391.667,o),
(342.333,388.333,o),
(351,387,cs),
(359.667,385.667,o),
(372,385,o),
(388,385,cs),
(404,385,o),
(414.167,383.833,o),
(418.5,381.5,cs),
(422.833,379.167,o),
(425,374.667,o),
(425,368,cs),
(425,358,o),
(422.333,345.333,o),
(417,330,cs),
(320,32,l),
(148,357,ls),
(141.333,370.333,o),
(139,385,o),
(139,389,cs),
(139,402.333,o),
(161,402,o),
(181,402,cs),
(207,402,o),
(220,407,o),
(220,417,cs),
(220,421,o),
(216.667,423.833,o),
(210,425.5,cs),
(203.333,427.167,o),
(191.333,428,o),
(174,428,cs),
(23,428,ls),
(7,428,o),
(-3.833,427,o),
(-9.5,425,cs),
(-15.167,423,o),
(-18,419.333,o),
(-18,414,cs),
(-18,408.667,o),
(-14.667,405.167,o),
(-8,403.5,cs),
(-1.333,401.833,o),
(14.667,400.667,o),
(40,400,cs),
(72.067,400,o),
(80.914,396.555,o),
(94,373,cs),
(305,-12,l),
(287.667,-50.667,o),
(270,-81.667,o),
(254,-103,cs),
(228.667,-136.333,o),
(205.667,-152,o),
(171,-152,cs),
(132.333,-152,o),
(103,-131.667,o),
(103,-109,cs),
(103,-100.333,o),
(108.333,-95,o),
(119,-93,cs),
(133.667,-91.667,o),
(156,-87.333,o),
(156,-58,cs),
(156,-32.667,o),
(139.333,-28,o),
(126,-28,cs),
(96.667,-28,o),
(69,-50.667,o),
(69,-96,cs),
(69,-152.238,o),
(114.961,-183,o),
(167,-183,cs)
);
},
{
closed = 1;
nodes = (
(183.084,510,o),
(235.433,558.894,o),
(288,596,c),
(364.411,542.063,o),
(393.302,510,o),
(408,510,cs),
(413.333,510,o),
(416,513.667,o),
(416,521,cs),
(416,546.329,o),
(312.852,640,o),
(288,640,cs),
(264.626,640,o),
(161,545.933,o),
(161,521,cs),
(161,513.667,o),
(163.667,510,o),
(169,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
84 1 9 11 34 1 8 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 11 9 11 106 10 12 2 9 2 9 106 0 8 4 0 4 8 0 104 0 5 6 1 4 8 5 4 91 3 1 1 1 2 83 0 2 2 15 67 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 11 9 11 106 10 12 2 9 2 9 106 0 8 4 0 4 8 0 104 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 11 9 11 106 10 12 2 9 2 9 106 0 8 4 0 4 8 0 104 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 7 7 0 79 0 0 0 7 83 0 7 0 7 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
80 79 97 95 90 88 79 102 80 102 38 41 35 52 43 35 52 42 34 13 24
CALL[ ]	/* CallFunction */";
};
width = 577;
}
);
note = ycircumflex;
unicode = 375;
},
{
glyphname = ydieresis;
kernLeft = y;
kernRight = y;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(149,-71.667,o),
(153.333,-70.667,o),
(160,-68,c),
(198.667,-57.333,o),
(209,-38.333,o),
(209,-13,cs),
(209,11,o),
(188.667,27,o),
(162,27,cs),
(115.333,27,o),
(75,-15.667,o),
(75,-85,cs),
(75,-150.333,o),
(114.667,-196,o),
(196,-196,cs),
(264,-196,o),
(311.667,-165.333,o),
(345,-124,cs),
(370.275,-93.669,o),
(394.827,-41.087,o),
(424,44,cs),
(519,313,ls),
(524.333,327.667,o),
(529.333,335.667,o),
(544,337,cs),
(574.134,339.511,o),
(613,347.23,o),
(613,375,cs),
(613,401.667,o),
(589.667,411,o),
(555,411,cs),
(393,411,ls),
(366.333,411,o),
(343,404.333,o),
(343,375,cs),
(343,356.333,o),
(350.667,345,o),
(380,341,cs),
(396,339,o),
(407,336.167,o),
(413,332.5,cs),
(419,328.833,o),
(422,324.333,o),
(422,319,cs),
(422,309.667,o),
(419.333,297.333,o),
(414,282,cs),
(354,90,l),
(238,299,ls),
(230.667,312.333,o),
(225.833,321.667,o),
(223.5,327,cs),
(221.167,332.333,o),
(220,337.333,o),
(220,342,cs),
(220,347.333,o),
(223.333,350.667,o),
(230,352,cs),
(271.333,360,o),
(287,372,o),
(287,392,cs),
(287,413.333,o),
(276.333,428,o),
(235,428,cs),
(81,428,ls),
(38.333,428,o),
(19,423.333,o),
(19,390,cs),
(19,378.667,o),
(23,370.167,o),
(31,364.5,cs),
(39,358.833,o),
(55.667,354.667,o),
(81,352,cs),
(114.333,349.333,o),
(122.333,342.667,o),
(133,324,cs),
(319,-12,l),
(309.667,-40,o),
(297.333,-71.333,o),
(272,-98,cs),
(253.333,-116.667,o),
(237,-127,o),
(205,-127,cs),
(165,-127,o),
(149,-111.667,o),
(149,-85,cs)
);
},
{
closed = 1;
nodes = (
(139,536.333,o),
(164.667,509,o),
(198,509,cs),
(227.675,509,o),
(265,523.646,o),
(265,579,cs),
(265,615,o),
(237,640,o),
(205,640,cs),
(158.034,640,o),
(139,598.847,o),
(139,575,cs)
);
},
{
closed = 1;
nodes = (
(346,513.333,o),
(371.667,486,o),
(405,486,cs),
(434.675,486,o),
(472,500.646,o),
(472,556,cs),
(472,592,o),
(444,617,o),
(412,617,cs),
(365.034,617,o),
(346,575.847,o),
(346,552,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
32 1 4 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 2 1 4 1 2 4 104 0 4 0 1 4 0 102 0 5 0 6 8 5 6 91 0 7 0 8 1 7 8 91 0 1 1 15 67 0 0 0 3 84 0 3 3 17 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 1 8 2 8 1 2 104 0 2 4 8 2 4 102 0 4 0 8 4 0 102 0 5 0 6 8 5 6 91 0 7 0 8 1 7 8 91 0 0 3 3 0 79 0 0 0 3 84 0 3 0 3 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
110 108 102 100 94 92 86 84 72 70 66 64 46 43 62 34 9 17
CALL[ ]	/* CallFunction */";
};
width = 621;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(129,-74.667,o),
(135,-62.333,o),
(147,-61,cs),
(163.669,-61,o),
(186,-54.017,o),
(186,-28,cs),
(186,-8,o),
(167.333,2,o),
(150,2,cs),
(112.571,2,o),
(76,-28.682,o),
(76,-84,cs),
(76,-148.999,o),
(130.362,-183,o),
(184,-183,cs),
(237.333,-183,o),
(278.333,-163.333,o),
(317,-118,cs),
(349,-80.667,o),
(371.667,-28,o),
(397,44,cs),
(499,331,ls),
(507,352.333,o),
(513,353.667,o),
(545,355,cs),
(571.667,356.333,o),
(600,360.333,o),
(600,383,cs),
(600,404.333,o),
(574.333,411,o),
(545,411,cs),
(377,411,ls),
(346.333,411,o),
(341,405.667,o),
(341,383,cs),
(341,368.333,o),
(354,355,o),
(386,355,cs),
(402,355,o),
(412.167,353.5,o),
(416.5,350.5,cs),
(420.833,347.5,o),
(423,343.333,o),
(423,338,cs),
(423,328,o),
(420.333,315.333,o),
(415,300,cs),
(340,68,l),
(202,327,ls),
(195.333,340.333,o),
(193,355,o),
(193,359,cs),
(193,372.333,o),
(198.333,372,o),
(205,372,cs),
(231.667,372,o),
(239,386.333,o),
(239,401,cs),
(239,417,o),
(232.667,428,o),
(198,428,cs),
(47,428,ls),
(15,428,o),
(-14,419,o),
(-14,395,cs),
(-14,383.667,o),
(-7.333,376.833,o),
(6,374.5,cs),
(19.333,372.167,o),
(38.667,370.667,o),
(64,370,cs),
(96.067,370,o),
(104.914,366.555,o),
(118,343,cs),
(313,-12,l),
(295.667,-50.667,o),
(280.333,-80.333,o),
(259,-99,cs),
(241.667,-115,o),
(217.667,-128,o),
(195,-128,cs),
(156.333,-128,o),
(129,-106.667,o),
(129,-84,cs)
);
},
{
closed = 1;
nodes = (
(143,542,o),
(165,518,o),
(192,518,cs),
(217,518,o),
(248,531,o),
(248,579,cs),
(248,610,o),
(226,631,o),
(199,631,cs),
(161,631,o),
(143,596,o),
(143,575,cs)
);
},
{
closed = 1;
nodes = (
(350,519,o),
(372,495,o),
(399,495,cs),
(424,495,o),
(455,508,o),
(455,556,cs),
(455,587,o),
(433,608,o),
(406,608,cs),
(368,608,o),
(350,573,o),
(350,552,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
36 1 8 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 10 0 11 13 10 11 91 0 12 0 13 2 12 13 91 0 5 6 1 4 8 5 4 91 0 8 0 9 0 8 9 91 3 1 1 1 2 83 0 2 2 15 67 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 10 0 11 13 10 11 91 0 12 0 13 2 12 13 91 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 8 0 9 0 8 9 91 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 10 0 11 13 10 11 91 0 12 0 13 2 12 13 91 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 8 0 9 0 8 9 91 0 0 7 7 0 79 0 0 0 7 83 0 7 0 7 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
112 110 106 104 98 96 92 90 83 82 40 40 36 52 43 36 52 42 35 14 35
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(204.333,-183,o),
(240.333,-168.667,o),
(279,-118,cs),
(307.667,-80.667,o),
(334.333,-26.667,o),
(359,44,cs),
(471,361,ls),
(479.365,383.307,o),
(490.783,385,o),
(547,385,cs),
(570.333,385.667,o),
(582,389.667,o),
(582,397,cs),
(582,407.667,o),
(567,411,o),
(547,411,cs),
(379,411,ls),
(363.667,411,o),
(353,410,o),
(347,408,cs),
(341,406,o),
(338,402.333,o),
(338,397,cs),
(338,391.667,o),
(342.333,388.333,o),
(351,387,cs),
(359.667,385.667,o),
(372,385,o),
(388,385,cs),
(404,385,o),
(414.167,383.833,o),
(418.5,381.5,cs),
(422.833,379.167,o),
(425,374.667,o),
(425,368,cs),
(425,358,o),
(422.333,345.333,o),
(417,330,cs),
(320,32,l),
(148,357,ls),
(141.333,370.333,o),
(139,385,o),
(139,389,cs),
(139,402.333,o),
(161,402,o),
(181,402,cs),
(207,402,o),
(220,407,o),
(220,417,cs),
(220,421,o),
(216.667,423.833,o),
(210,425.5,cs),
(203.333,427.167,o),
(191.333,428,o),
(174,428,cs),
(23,428,ls),
(7,428,o),
(-3.833,427,o),
(-9.5,425,cs),
(-15.167,423,o),
(-18,419.333,o),
(-18,414,cs),
(-18,408.667,o),
(-14.667,405.167,o),
(-8,403.5,cs),
(-1.333,401.833,o),
(14.667,400.667,o),
(40,400,cs),
(72.067,400,o),
(80.914,396.555,o),
(94,373,cs),
(305,-12,l),
(287.667,-50.667,o),
(270,-81.667,o),
(254,-103,cs),
(228.667,-136.333,o),
(205.667,-152,o),
(171,-152,cs),
(132.333,-152,o),
(103,-131.667,o),
(103,-109,cs),
(103,-100.333,o),
(108.333,-95,o),
(119,-93,cs),
(133.667,-91.667,o),
(156,-87.333,o),
(156,-58,cs),
(156,-32.667,o),
(139.333,-28,o),
(126,-28,cs),
(96.667,-28,o),
(69,-50.667,o),
(69,-96,cs),
(69,-152.238,o),
(114.961,-183,o),
(167,-183,cs)
);
},
{
closed = 1;
nodes = (
(201.667,533,o),
(224,543,o),
(224,579,cs),
(224,601.667,o),
(208.667,616,o),
(190,616,cs),
(162.258,616,o),
(149,588.895,o),
(149,575,cs),
(149,551,o),
(164.333,533,o),
(183,533,cs)
);
},
{
closed = 1;
nodes = (
(408.667,510,o),
(431,520,o),
(431,556,cs),
(431,578.667,o),
(415.667,593,o),
(397,593,cs),
(369.258,593,o),
(356,565.895,o),
(356,552,cs),
(356,528,o),
(371.333,510,o),
(390,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 8 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 8 4 0 4 8 0 104 0 9 0 10 12 9 10 91 0 11 0 12 2 11 12 91 0 5 6 1 4 8 5 4 91 3 1 1 1 2 83 0 2 2 15 67 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 8 4 0 4 8 0 104 0 9 0 10 12 9 10 91 0 11 0 12 2 11 12 91 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 8 4 0 4 8 0 104 0 9 0 10 12 9 10 91 0 11 0 12 2 11 12 91 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 7 7 0 79 0 0 0 7 83 0 7 0 7 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
105 103 99 97 91 89 85 83 38 41 35 52 43 35 52 42 34 13 24
CALL[ ]	/* CallFunction */";
};
width = 577;
}
);
note = ydieresis;
unicode = 255;
},
{
glyphname = ygrave;
kernLeft = y;
kernRight = y;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(180,606.193,o),
(297.363,500,o),
(335,500,cs),
(349.667,500,o),
(372,507.333,o),
(372,522,cs),
(372,526.988,o),
(350.489,573.783,o),
(330,608.5,cs),
(306,649.167,o),
(275.333,688,o),
(250,688,cs),
(207.333,686.667,o),
(180,665.333,o),
(180,640,cs)
);
},
{
closed = 1;
nodes = (
(149,-71.667,o),
(153.333,-70.667,o),
(160,-68,c),
(198.667,-57.333,o),
(209,-38.333,o),
(209,-13,cs),
(209,11,o),
(188.667,27,o),
(162,27,cs),
(115.333,27,o),
(75,-15.667,o),
(75,-85,cs),
(75,-150.333,o),
(114.667,-196,o),
(196,-196,cs),
(264,-196,o),
(311.667,-165.333,o),
(345,-124,cs),
(370.275,-93.669,o),
(394.827,-41.087,o),
(424,44,cs),
(519,313,ls),
(524.333,327.667,o),
(529.333,335.667,o),
(544,337,cs),
(574.134,339.511,o),
(613,347.23,o),
(613,375,cs),
(613,401.667,o),
(589.667,411,o),
(555,411,cs),
(393,411,ls),
(366.333,411,o),
(343,404.333,o),
(343,375,cs),
(343,356.333,o),
(350.667,345,o),
(380,341,cs),
(396,339,o),
(407,336.167,o),
(413,332.5,cs),
(419,328.833,o),
(422,324.333,o),
(422,319,cs),
(422,309.667,o),
(419.333,297.333,o),
(414,282,cs),
(354,90,l),
(238,299,ls),
(230.667,312.333,o),
(225.833,321.667,o),
(223.5,327,cs),
(221.167,332.333,o),
(220,337.333,o),
(220,342,cs),
(220,347.333,o),
(223.333,350.667,o),
(230,352,cs),
(271.333,360,o),
(287,372,o),
(287,392,cs),
(287,413.333,o),
(276.333,428,o),
(235,428,cs),
(81,428,ls),
(38.333,428,o),
(19,423.333,o),
(19,390,cs),
(19,378.667,o),
(23,370.167,o),
(31,364.5,cs),
(39,358.833,o),
(55.667,354.667,o),
(81,352,cs),
(114.333,349.333,o),
(122.333,342.667,o),
(133,324,cs),
(319,-12,l),
(309.667,-40,o),
(297.333,-71.333,o),
(272,-98,cs),
(253.333,-116.667,o),
(237,-127,o),
(205,-127,cs),
(165,-127,o),
(149,-111.667,o),
(149,-85,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
48 1 6 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 0 1 0 106 0 1 3 1 106 0 4 3 6 3 4 6 104 0 6 2 3 6 2 102 0 3 3 15 67 0 2 2 5 84 0 5 5 17 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 0 1 0 106 0 1 3 1 106 0 3 4 3 106 0 4 6 4 106 0 6 2 6 106 0 2 5 5 2 79 0 2 2 5 84 0 5 2 5 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
88 86 82 80 62 59 62 38 38 34 7 19
CALL[ ]	/* CallFunction */";
};
width = 621;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(202,603.002,o),
(307.32,504,o),
(337,504,cs),
(347.667,504,o),
(362,508.667,o),
(362,522,cs),
(362,526.174,o),
(346.818,559.697,o),
(321,599.5,cs),
(297.693,635.432,o),
(268.801,670,o),
(251,670,cs),
(220.333,670,o),
(202,654.667,o),
(202,632,cs)
);
},
{
closed = 1;
nodes = (
(129,-74.667,o),
(135,-62.333,o),
(147,-61,cs),
(163.669,-61,o),
(186,-54.017,o),
(186,-28,cs),
(186,-8,o),
(167.333,2,o),
(150,2,cs),
(112.571,2,o),
(76,-28.682,o),
(76,-84,cs),
(76,-148.999,o),
(130.362,-183,o),
(184,-183,cs),
(237.333,-183,o),
(278.333,-163.333,o),
(317,-118,cs),
(349,-80.667,o),
(371.667,-28,o),
(397,44,cs),
(499,331,ls),
(507,352.333,o),
(513,353.667,o),
(545,355,cs),
(571.667,356.333,o),
(600,360.333,o),
(600,383,cs),
(600,404.333,o),
(574.333,411,o),
(545,411,cs),
(377,411,ls),
(346.333,411,o),
(341,405.667,o),
(341,383,cs),
(341,368.333,o),
(354,355,o),
(386,355,cs),
(402,355,o),
(412.167,353.5,o),
(416.5,350.5,cs),
(420.833,347.5,o),
(423,343.333,o),
(423,338,cs),
(423,328,o),
(420.333,315.333,o),
(415,300,cs),
(340,68,l),
(202,327,ls),
(195.333,340.333,o),
(193,355,o),
(193,359,cs),
(193,372.333,o),
(198.333,372,o),
(205,372,cs),
(231.667,372,o),
(239,386.333,o),
(239,401,cs),
(239,417,o),
(232.667,428,o),
(198,428,cs),
(47,428,ls),
(15,428,o),
(-14,419,o),
(-14,395,cs),
(-14,383.667,o),
(-7.333,376.833,o),
(6,374.5,cs),
(19.333,372.167,o),
(38.667,370.667,o),
(64,370,cs),
(96.067,370,o),
(104.914,366.555,o),
(118,343,cs),
(313,-12,l),
(295.667,-50.667,o),
(280.333,-80.333,o),
(259,-99,cs),
(241.667,-115,o),
(217.667,-128,o),
(195,-128,cs),
(156.333,-128,o),
(129,-106.667,o),
(129,-84,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
53 1 10 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 0 1 0 106 0 1 4 1 106 0 7 8 1 6 10 7 6 91 0 10 0 11 2 10 11 91 5 1 3 3 4 83 0 4 4 15 67 0 2 2 9 83 0 9 9 17 9 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 0 1 0 106 0 1 4 1 106 0 4 5 1 3 6 4 3 91 0 7 8 1 6 10 7 6 91 0 10 0 11 2 10 11 91 0 2 2 9 83 0 9 9 17 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 0 1 0 106 0 1 4 1 106 0 4 5 1 3 6 4 3 91 0 7 8 1 6 10 7 6 91 0 10 0 11 2 10 11 91 0 2 9 9 2 79 0 2 2 9 83 0 9 2 9 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
100 99 93 91 83 81 36 52 43 36 52 42 38 40 34 12 24
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(204.333,-183,o),
(240.333,-168.667,o),
(279,-118,cs),
(307.667,-80.667,o),
(334.333,-26.667,o),
(359,44,cs),
(471,361,ls),
(479.365,383.307,o),
(490.783,385,o),
(547,385,cs),
(570.333,385.667,o),
(582,389.667,o),
(582,397,cs),
(582,407.667,o),
(567,411,o),
(547,411,cs),
(379,411,ls),
(363.667,411,o),
(353,410,o),
(347,408,cs),
(341,406,o),
(338,402.333,o),
(338,397,cs),
(338,391.667,o),
(342.333,388.333,o),
(351,387,cs),
(359.667,385.667,o),
(372,385,o),
(388,385,cs),
(404,385,o),
(414.167,383.833,o),
(418.5,381.5,cs),
(422.833,379.167,o),
(425,374.667,o),
(425,368,cs),
(425,358,o),
(422.333,345.333,o),
(417,330,cs),
(320,32,l),
(148,357,ls),
(141.333,370.333,o),
(139,385,o),
(139,389,cs),
(139,402.333,o),
(161,402,o),
(181,402,cs),
(207,402,o),
(220,407,o),
(220,417,cs),
(220,421,o),
(216.667,423.833,o),
(210,425.5,cs),
(203.333,427.167,o),
(191.333,428,o),
(174,428,cs),
(23,428,ls),
(7,428,o),
(-3.833,427,o),
(-9.5,425,cs),
(-15.167,423,o),
(-18,419.333,o),
(-18,414,cs),
(-18,408.667,o),
(-14.667,405.167,o),
(-8,403.5,cs),
(-1.333,401.833,o),
(14.667,400.667,o),
(40,400,cs),
(72.067,400,o),
(80.914,396.555,o),
(94,373,cs),
(305,-12,l),
(287.667,-50.667,o),
(270,-81.667,o),
(254,-103,cs),
(228.667,-136.333,o),
(205.667,-152,o),
(171,-152,cs),
(132.333,-152,o),
(103,-131.667,o),
(103,-109,cs),
(103,-100.333,o),
(108.333,-95,o),
(119,-93,cs),
(133.667,-91.667,o),
(156,-87.333,o),
(156,-58,cs),
(156,-32.667,o),
(139.333,-28,o),
(126,-28,cs),
(96.667,-28,o),
(69,-50.667,o),
(69,-96,cs),
(69,-152.238,o),
(114.961,-183,o),
(167,-183,cs)
);
},
{
closed = 1;
nodes = (
(343.333,510,o),
(346,513.667,o),
(346,521,cs),
(346,545.882,o),
(271.178,640,o),
(251,640,cs),
(240.333,640,o),
(232,636.667,o),
(232,618,cs),
(232,597.027,o),
(319.203,510,o),
(338,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 8 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 9 10 9 106 0 10 2 10 106 0 8 4 0 4 8 0 104 0 5 6 1 4 8 5 4 91 3 1 1 1 2 83 0 2 2 15 67 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 9 10 9 106 0 10 2 10 106 0 8 4 0 4 8 0 104 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 9 10 9 106 0 10 2 10 106 0 8 4 0 4 8 0 104 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 7 7 0 79 0 0 0 7 83 0 7 0 7 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
90 88 83 81 38 41 35 52 43 35 52 42 34 11 24
CALL[ ]	/* CallFunction */";
};
width = 577;
}
);
note = ygrave;
unicode = 7923;
},
{
glyphname = ytilde;
kernLeft = y;
kernRight = y;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(149,-71.667,o),
(153.333,-70.667,o),
(160,-68,c),
(198.667,-57.333,o),
(209,-38.333,o),
(209,-13,cs),
(209,11,o),
(188.667,27,o),
(162,27,cs),
(115.333,27,o),
(75,-15.667,o),
(75,-85,cs),
(75,-150.333,o),
(114.667,-196,o),
(196,-196,cs),
(264,-196,o),
(311.667,-165.333,o),
(345,-124,cs),
(370.275,-93.669,o),
(394.827,-41.087,o),
(424,44,cs),
(519,313,ls),
(524.333,327.667,o),
(529.333,335.667,o),
(544,337,cs),
(574.134,339.511,o),
(613,347.23,o),
(613,375,cs),
(613,401.667,o),
(589.667,411,o),
(555,411,cs),
(393,411,ls),
(366.333,411,o),
(343,404.333,o),
(343,375,cs),
(343,356.333,o),
(350.667,345,o),
(380,341,cs),
(396,339,o),
(407,336.167,o),
(413,332.5,cs),
(419,328.833,o),
(422,324.333,o),
(422,319,cs),
(422,309.667,o),
(419.333,297.333,o),
(414,282,cs),
(354,90,l),
(238,299,ls),
(230.667,312.333,o),
(225.833,321.667,o),
(223.5,327,cs),
(221.167,332.333,o),
(220,337.333,o),
(220,342,cs),
(220,347.333,o),
(223.333,350.667,o),
(230,352,cs),
(271.333,360,o),
(287,372,o),
(287,392,cs),
(287,413.333,o),
(276.333,428,o),
(235,428,cs),
(81,428,ls),
(38.333,428,o),
(19,423.333,o),
(19,390,cs),
(19,378.667,o),
(23,370.167,o),
(31,364.5,cs),
(39,358.833,o),
(55.667,354.667,o),
(81,352,cs),
(114.333,349.333,o),
(122.333,342.667,o),
(133,324,cs),
(319,-12,l),
(309.667,-40,o),
(297.333,-71.333,o),
(272,-98,cs),
(253.333,-116.667,o),
(237,-127,o),
(205,-127,cs),
(165,-127,o),
(149,-111.667,o),
(149,-85,cs)
);
},
{
closed = 1;
nodes = (
(136,514,o),
(143,498,o),
(155,498,cs),
(175.593,498,o),
(199.709,523,o),
(239,523,cs),
(277.662,523,o),
(320.294,499,o),
(376,499,cs),
(408.676,499,o),
(487,516.584,o),
(487,574,cs),
(487,595.333,o),
(471.667,609,o),
(465,609,cs),
(460.333,609,o),
(450.333,604.667,o),
(435,596,cs),
(416.333,585.333,o),
(393.667,579,o),
(375,579,cs),
(335.599,579,o),
(274.495,607,o),
(238,607,cs),
(213.333,607,o),
(190.667,601,o),
(170,589,cs),
(151.333,578.333,o),
(136,563.333,o),
(136,534,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
32 1 4 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 2 1 4 1 2 4 104 0 4 0 1 4 0 102 7 1 5 0 9 8 5 9 91 0 6 10 1 8 1 6 8 91 0 1 1 15 67 0 0 0 3 84 0 3 3 17 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 1 8 2 8 1 2 104 0 2 4 8 2 4 102 0 4 0 8 4 0 102 7 1 5 0 9 8 5 9 91 0 6 10 1 8 1 6 8 91 0 0 3 3 0 79 0 0 0 3 84 0 3 0 3 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
114 112 109 107 104 102 96 94 91 89 86 84 72 70 66 64 46 43 62 34 11 17
CALL[ ]	/* CallFunction */";
};
width = 621;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(133,547,o),
(132,541,o),
(132,535,cs),
(132,520,o),
(138,507,o),
(149,507,cs),
(166,507,o),
(193,532,o),
(233,532,cs),
(272,532,o),
(314,508,o),
(370,508,cs),
(426,508,o),
(459,530,o),
(472,553,cs),
(475,559,o),
(477,565,o),
(477,572,cs),
(477,588,o),
(466,600,o),
(459,600,cs),
(456,600,o),
(452,599,o),
(449,598,cs),
(445,596,o),
(438,592,o),
(429,587,cs),
(406,576,o),
(386,570,o),
(369,570,cs),
(330,570,o),
(268,598,o),
(232,598,cs),
(207,598,o),
(185,592,o),
(164,580,cs),
(154,574,o),
(147,569,o),
(143,564,cs),
(139,559,o),
(136,555,o),
(135,552,cs)
);
},
{
closed = 1;
nodes = (
(129,-74.667,o),
(135,-62.333,o),
(147,-61,cs),
(163.669,-61,o),
(186,-54.017,o),
(186,-28,cs),
(186,-8,o),
(167.333,2,o),
(150,2,cs),
(112.571,2,o),
(76,-28.682,o),
(76,-84,cs),
(76,-148.999,o),
(130.362,-183,o),
(184,-183,cs),
(237.333,-183,o),
(278.333,-163.333,o),
(317,-118,cs),
(349,-80.667,o),
(371.667,-28,o),
(397,44,cs),
(499,331,ls),
(507,352.333,o),
(513,353.667,o),
(545,355,cs),
(571.667,356.333,o),
(600,360.333,o),
(600,383,cs),
(600,404.333,o),
(574.333,411,o),
(545,411,cs),
(377,411,ls),
(346.333,411,o),
(341,405.667,o),
(341,383,cs),
(341,368.333,o),
(354,355,o),
(386,355,cs),
(402,355,o),
(412.167,353.5,o),
(416.5,350.5,cs),
(420.833,347.5,o),
(423,343.333,o),
(423,338,cs),
(423,328,o),
(420.333,315.333,o),
(415,300,cs),
(340,68,l),
(202,327,ls),
(195.333,340.333,o),
(193,355,o),
(193,359,cs),
(193,372.333,o),
(198.333,372,o),
(205,372,cs),
(231.667,372,o),
(239,386.333,o),
(239,401,cs),
(239,417,o),
(232.667,428,o),
(198,428,cs),
(47,428,ls),
(15,428,o),
(-14,419,o),
(-14,395,cs),
(-14,383.667,o),
(-7.333,376.833,o),
(6,374.5,cs),
(19.333,372.167,o),
(38.667,370.667,o),
(64,370,cs),
(96.067,370,o),
(104.914,366.555,o),
(118,343,cs),
(313,-12,l),
(295.667,-50.667,o),
(280.333,-80.333,o),
(259,-99,cs),
(241.667,-115,o),
(217.667,-128,o),
(195,-128,cs),
(156.333,-128,o),
(129,-106.667,o),
(129,-84,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
74 1 14 10 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 8 1 3 91 0 11 12 1 10 14 11 10 91 0 14 0 15 6 14 15 91 9 1 7 7 8 83 0 8 8 15 67 0 6 6 13 83 0 13 13 17 13 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 8 1 3 91 0 8 9 1 7 10 8 7 91 0 11 12 1 10 14 11 10 91 0 14 0 15 6 14 15 91 0 6 6 13 83 0 13 13 17 13 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
2 1 0 0 4 3 0 4 91 0 1 5 1 3 8 1 3 91 0 8 9 1 7 10 8 7 91 0 11 12 1 10 14 11 10 91 0 14 0 15 6 14 15 91 0 6 13 13 6 79 0 6 6 13 83 0 13 6 13 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
121 120 114 112 104 102 94 92 88 85 81 79 68 66 52 42 38 35 35 38 35 35 37 16 35
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(204.333,-183,o),
(240.333,-168.667,o),
(279,-118,cs),
(307.667,-80.667,o),
(334.333,-26.667,o),
(359,44,cs),
(471,361,ls),
(479.365,383.307,o),
(490.783,385,o),
(547,385,cs),
(570.333,385.667,o),
(582,389.667,o),
(582,397,cs),
(582,407.667,o),
(567,411,o),
(547,411,cs),
(379,411,ls),
(363.667,411,o),
(353,410,o),
(347,408,cs),
(341,406,o),
(338,402.333,o),
(338,397,cs),
(338,391.667,o),
(342.333,388.333,o),
(351,387,cs),
(359.667,385.667,o),
(372,385,o),
(388,385,cs),
(404,385,o),
(414.167,383.833,o),
(418.5,381.5,cs),
(422.833,379.167,o),
(425,374.667,o),
(425,368,cs),
(425,358,o),
(422.333,345.333,o),
(417,330,cs),
(320,32,l),
(148,357,ls),
(141.333,370.333,o),
(139,385,o),
(139,389,cs),
(139,402.333,o),
(161,402,o),
(181,402,cs),
(207,402,o),
(220,407,o),
(220,417,cs),
(220,421,o),
(216.667,423.833,o),
(210,425.5,cs),
(203.333,427.167,o),
(191.333,428,o),
(174,428,cs),
(23,428,ls),
(7,428,o),
(-3.833,427,o),
(-9.5,425,cs),
(-15.167,423,o),
(-18,419.333,o),
(-18,414,cs),
(-18,408.667,o),
(-14.667,405.167,o),
(-8,403.5,cs),
(-1.333,401.833,o),
(14.667,400.667,o),
(40,400,cs),
(72.067,400,o),
(80.914,396.555,o),
(94,373,cs),
(305,-12,l),
(287.667,-50.667,o),
(270,-81.667,o),
(254,-103,cs),
(228.667,-136.333,o),
(205.667,-152,o),
(171,-152,cs),
(132.333,-152,o),
(103,-131.667,o),
(103,-109,cs),
(103,-100.333,o),
(108.333,-95,o),
(119,-93,cs),
(133.667,-91.667,o),
(156,-87.333,o),
(156,-58,cs),
(156,-32.667,o),
(139.333,-28,o),
(126,-28,cs),
(96.667,-28,o),
(69,-50.667,o),
(69,-96,cs),
(69,-152.238,o),
(114.961,-183,o),
(167,-183,cs)
);
},
{
closed = 1;
nodes = (
(156.791,522,o),
(183.735,547,o),
(225,547,cs),
(263.662,547,o),
(306.294,523,o),
(362,523,cs),
(414.947,523,o),
(464,542.797,o),
(464,568,cs),
(464,577.333,o),
(457.667,585,o),
(451,585,cs),
(447.667,585,o),
(444.167,584.167,o),
(440.5,582.5,cs),
(436.833,580.833,o),
(430.333,577.333,o),
(421,572,cs),
(398.333,560.667,o),
(378.333,555,o),
(361,555,cs),
(321.599,555,o),
(260.495,583,o),
(224,583,cs),
(199.333,583,o),
(176.667,577,o),
(156,565,cs),
(136.667,553.667,o),
(127,544.333,o),
(127,537,cs),
(127,530.333,o),
(134.333,522,o),
(141,522,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 8 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 8 4 0 4 8 0 104 11 1 9 0 13 12 9 13 91 0 10 14 1 12 2 10 12 91 0 5 6 1 4 8 5 4 91 3 1 1 1 2 83 0 2 2 15 67 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 8 4 0 4 8 0 104 11 1 9 0 13 12 9 13 91 0 10 14 1 12 2 10 12 91 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 0 7 83 0 7 7 17 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 8 4 0 4 8 0 104 11 1 9 0 13 12 9 13 91 0 10 14 1 12 2 10 12 91 0 2 3 1 1 4 2 1 91 0 5 6 1 4 8 5 4 91 0 0 7 7 0 79 0 0 0 7 83 0 7 0 7 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
112 110 107 105 102 100 94 92 89 87 84 82 38 41 35 52 43 35 52 42 34 15 24
CALL[ ]	/* CallFunction */";
};
width = 577;
}
);
note = ytilde;
unicode = 7929;
},
{
glyphname = z;
kernLeft = z;
kernRight = t_z;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(269,358,o),
(272,355.333,o),
(272,350,cs),
(272,341.456,o),
(218.656,281.587,o),
(146.5,195,cs),
(73.934,107.921,o),
(21,41.151,o),
(21,24,cs),
(21,12,o),
(26.167,4.667,o),
(36.5,2,cs),
(46.833,-0.667,o),
(64.667,-2,o),
(90,-2,cs),
(89.512,-2,o),
(179.342,1,o),
(248,1,cs),
(273.422,1,o),
(300.611,0,o),
(322.5,0,cs),
(348.298,0,o),
(382.118,-1,o),
(424,-1,cs),
(433.333,-1,o),
(438,5.333,o),
(438,18,cs),
(438,35.333,o),
(438.667,70.333,o),
(440,85,cs),
(446,181,ls),
(446,193,o),
(438.667,212,o),
(408,212,cs),
(371.811,212,o),
(366.474,183.166,o),
(364,151,cs),
(357,96,ls),
(355.667,85.333,o),
(354.667,77,o),
(348,77,cs),
(198,77,ls),
(186.667,77,o),
(181,79.333,o),
(181,84,cs),
(181,94.886,o),
(225.051,147.522,o),
(310.5,247,cs),
(385.279,334.057,o),
(440,402.296,o),
(440,419,cs),
(440,423.667,o),
(437.667,427.667,o),
(433,431,cs),
(428.333,434.333,o),
(420.333,436,o),
(409,436,cs),
(387.667,436,o),
(363.667,435.667,o),
(337,435,cs),
(310.333,434.333,o),
(286.333,434,o),
(265,434,cs),
(192.952,434,o),
(171.048,435,o),
(99,435,cs),
(49.812,435,o),
(46,413.451,o),
(46,389,cs),
(46,298,ls),
(46,270,o),
(54.333,251,o),
(89,251,cs),
(121,251,o),
(127,271.333,o),
(131,322,cs),
(134,358,l),
(263,358,l),
(263,358,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
47 1 2 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 5 3 5 0 96 0 3 2 2 3 94 6 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 0 5 3 5 0 96 0 3 2 5 3 2 102 6 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 6 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 1 6 1 5 0 1 5 91 0 2 2 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 74 0 73 199 39 58 167 35 7 20
CALL[ ]	/* CallFunction */";
};
width = 480;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(296,376,o),
(299,373.333,o),
(299,368,cs),
(299,360.996,o),
(238.529,291.874,o),
(161,202.5,cs),
(80.225,109.384,o),
(23,36.071,o),
(23,20,cs),
(23,10.667,o),
(26.667,4.667,o),
(34,2,cs),
(41.333,-0.667,o),
(53.667,-2,o),
(71,-2,cs),
(70.512,-2,o),
(160.342,1,o),
(229,1,cs),
(254.422,1,o),
(281.611,0,o),
(303.5,0,cs),
(329.298,0,o),
(363.118,-1,o),
(405,-1,cs),
(414.333,-1,o),
(419,5.333,o),
(419,18,cs),
(419,35.333,o),
(419.667,70.333,o),
(421,85,cs),
(427,181,ls),
(427,191.667,o),
(424.667,206,o),
(402,206,cs),
(372.667,206,o),
(368.667,185.667,o),
(366,151,cs),
(359,78,ls),
(357.667,65.333,o),
(354.667,59,o),
(350,59,cs),
(161,59,ls),
(149.667,59,o),
(144,61.333,o),
(144,66,cs),
(144,79.731,o),
(203.788,147.093,o),
(282.5,238,cs),
(362.135,329.973,o),
(421,399.885,o),
(421,419,cs),
(421,423.667,o),
(418.667,427.667,o),
(414,431,cs),
(409.333,434.333,o),
(401.333,436,o),
(390,436,cs),
(368.667,436,o),
(344.667,435.667,o),
(318,435,cs),
(291.333,434.333,o),
(267.333,434,o),
(246,434,cs),
(199.133,434,o),
(147.867,436,o),
(101,436,cs),
(63.667,436,o),
(48,417.667,o),
(48,395,cs),
(48,298,ls),
(48,272.667,o),
(56,257,o),
(80,257,cs),
(105.333,257,o),
(109.333,283.333,o),
(112,322,cs),
(115,376,l),
(290,376,l),
(290,376,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
42 1 2 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 5 3 5 0 96 0 3 2 2 3 94 6 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 6 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 1 6 1 5 0 1 5 91 0 2 2 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 69 0 68 199 36 58 165 35 7 20
CALL[ ]	/* CallFunction */";
};
width = 463;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(43.512,-2,o),
(133.342,1,o),
(202,1,cs),
(227.422,1,o),
(254.611,0,o),
(276.5,0,cs),
(302.298,0,o),
(336.118,-1,o),
(378,-1,cs),
(387.333,-1,o),
(392,5.333,o),
(392,18,cs),
(392,35.333,o),
(392.667,70.333,o),
(394,85,cs),
(400,181,ls),
(400,191,o),
(395.667,196,o),
(387,196,cs),
(381,196,o),
(376.833,192.833,o),
(374.5,186.5,cs),
(372.167,180.167,o),
(370.333,168.333,o),
(369,151,cs),
(362,48,ls),
(360.667,35.333,o),
(357.667,29,o),
(353,29,cs),
(108,29,ls),
(96.667,29,o),
(91,31.333,o),
(91,36,cs),
(91,49.054,o),
(156.005,125.056,o),
(242.5,222.5,cs),
(329.482,320.493,o),
(394,401.667,o),
(394,419,cs),
(394,423.667,o),
(391.667,427.667,o),
(387,431,cs),
(382.333,434.333,o),
(374.333,436,o),
(363,436,cs),
(341.667,436,o),
(317.667,435.667,o),
(291,435,cs),
(264.333,434.333,o),
(240.333,434,o),
(219,434,cs),
(152.557,434,o),
(136.441,433.398,o),
(74,436,cs),
(56.667,436,o),
(51,427.667,o),
(51,405,cs),
(51,298,ls),
(51,285.333,o),
(52,277,o),
(54,273,cs),
(56,269,o),
(60,267,o),
(66,267,cs),
(72,267,o),
(76.5,271.333,o),
(79.5,280,cs),
(82.5,288.667,o),
(84.333,302.667,o),
(85,322,cs),
(88,406,l),
(329,406,ls),
(335,406,o),
(338,403.333,o),
(338,398,cs),
(338,389.457,o),
(272.503,319.078,o),
(182,215,cs),
(92.052,111.56,o),
(26,32.841,o),
(26,13,cs),
(26,3,o),
(32,-2,o),
(44,-2,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
41 35 34 3 2 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 0 5 3 5 0 96 0 3 2 5 3 2 102 6 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 6 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 1 6 1 5 0 1 5 91 0 2 2 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 67 0 66 198 36 58 165 35 7 20
CALL[ ]	/* CallFunction */";
};
width = 439;
}
);
note = z;
unicode = 122;
},
{
glyphname = zacute;
kernLeft = z;
kernRight = t_z;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(356,665.333,o),
(328.667,686.667,o),
(286,688,cs),
(260.667,688,o),
(230,649.167,o),
(206,608.5,cs),
(185.511,573.783,o),
(164,526.988,o),
(164,522,cs),
(164,507.333,o),
(186.333,500,o),
(201,500,cs),
(218.099,500,o),
(253.389,522.679,o),
(292,557,cs),
(326.627,587.78,o),
(356,622.341,o),
(356,640,cs)
);
},
{
closed = 1;
nodes = (
(269,358,o),
(272,355.333,o),
(272,350,cs),
(272,341.456,o),
(218.656,281.587,o),
(146.5,195,cs),
(73.934,107.921,o),
(21,41.151,o),
(21,24,cs),
(21,12,o),
(26.167,4.667,o),
(36.5,2,cs),
(46.833,-0.667,o),
(64.667,-2,o),
(90,-2,cs),
(89.512,-2,o),
(179.342,1,o),
(248,1,cs),
(273.422,1,o),
(300.611,0,o),
(322.5,0,cs),
(348.298,0,o),
(382.118,-1,o),
(424,-1,cs),
(433.333,-1,o),
(438,5.333,o),
(438,18,cs),
(438,35.333,o),
(438.667,70.333,o),
(440,85,cs),
(446,181,ls),
(446,193,o),
(438.667,212,o),
(408,212,cs),
(371.811,212,o),
(366.474,183.166,o),
(364,151,cs),
(357,96,ls),
(355.667,85.333,o),
(354.667,77,o),
(348,77,cs),
(198,77,ls),
(186.667,77,o),
(181,79.333,o),
(181,84,cs),
(181,94.886,o),
(225.051,147.522,o),
(310.5,247,cs),
(385.279,334.057,o),
(440,402.296,o),
(440,419,cs),
(440,423.667,o),
(437.667,427.667,o),
(433,431,cs),
(428.333,434.333,o),
(420.333,436,o),
(409,436,cs),
(387.667,436,o),
(363.667,435.667,o),
(337,435,cs),
(310.333,434.333,o),
(286.333,434,o),
(265,434,cs),
(192.952,434,o),
(171.048,435,o),
(99,435,cs),
(49.812,435,o),
(46,413.451,o),
(46,389,cs),
(46,298,ls),
(46,270,o),
(54.333,251,o),
(89,251,cs),
(121,251,o),
(127,271.333,o),
(131,322,cs),
(134,358,l),
(263,358,l),
(263,358,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
65 1 4 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 0 0 3 0 106 0 2 7 5 7 2 96 0 5 4 4 5 94 8 1 7 7 3 83 0 3 3 15 67 0 4 4 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 1 106 0 0 3 0 106 0 2 7 5 7 2 96 0 5 4 7 5 4 102 8 1 7 7 3 83 0 3 3 15 67 0 4 4 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 106 0 0 3 0 106 0 2 7 5 7 2 5 104 0 5 4 7 5 4 102 8 1 7 7 3 83 0 3 3 15 67 0 4 4 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 0 0 3 0 106 0 2 7 5 7 2 5 104 0 5 4 7 5 4 102 0 3 8 1 7 2 3 7 91 0 4 4 6 84 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
18 18 18 92 18 91 199 39 58 167 37 38 38 9 22
CALL[ ]	/* CallFunction */";
};
width = 480;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(322,654.667,o),
(303.667,670,o),
(273,670,cs),
(254.565,670,o),
(226.366,635.522,o),
(203,599.5,cs),
(177.182,559.697,o),
(162,526.174,o),
(162,522,cs),
(162,508.667,o),
(176.333,504,o),
(187,504,cs),
(216.68,504,o),
(322,603.002,o),
(322,632,cs)
);
},
{
closed = 1;
nodes = (
(296,376,o),
(299,373.333,o),
(299,368,cs),
(299,360.996,o),
(238.529,291.874,o),
(161,202.5,cs),
(80.225,109.384,o),
(23,36.071,o),
(23,20,cs),
(23,10.667,o),
(26.667,4.667,o),
(34,2,cs),
(41.333,-0.667,o),
(53.667,-2,o),
(71,-2,cs),
(70.512,-2,o),
(160.342,1,o),
(229,1,cs),
(254.422,1,o),
(281.611,0,o),
(303.5,0,cs),
(329.298,0,o),
(363.118,-1,o),
(405,-1,cs),
(414.333,-1,o),
(419,5.333,o),
(419,18,cs),
(419,35.333,o),
(419.667,70.333,o),
(421,85,cs),
(427,181,ls),
(427,191.667,o),
(424.667,206,o),
(402,206,cs),
(372.667,206,o),
(368.667,185.667,o),
(366,151,cs),
(359,78,ls),
(357.667,65.333,o),
(354.667,59,o),
(350,59,cs),
(161,59,ls),
(149.667,59,o),
(144,61.333,o),
(144,66,cs),
(144,79.731,o),
(203.788,147.093,o),
(282.5,238,cs),
(362.135,329.973,o),
(421,399.885,o),
(421,419,cs),
(421,423.667,o),
(418.667,427.667,o),
(414,431,cs),
(409.333,434.333,o),
(401.333,436,o),
(390,436,cs),
(368.667,436,o),
(344.667,435.667,o),
(318,435,cs),
(291.333,434.333,o),
(267.333,434,o),
(246,434,cs),
(199.133,434,o),
(147.867,436,o),
(101,436,cs),
(63.667,436,o),
(48,417.667,o),
(48,395,cs),
(48,298,ls),
(48,272.667,o),
(56,257,o),
(80,257,cs),
(105.333,257,o),
(109.333,283.333,o),
(112,322,cs),
(115,376,l),
(290,376,l),
(290,376,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
60 1 4 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 0 0 3 0 106 0 2 7 5 7 2 96 0 5 4 4 5 94 8 1 7 7 3 83 0 3 3 15 67 0 4 4 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 106 0 0 3 0 106 0 2 7 5 7 2 5 104 0 5 4 7 5 4 102 8 1 7 7 3 83 0 3 3 15 67 0 4 4 6 84 0 6 6 13 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 1 106 0 0 3 0 106 0 2 7 5 7 2 5 104 0 5 4 7 5 4 102 0 3 8 1 7 2 3 7 92 0 4 4 6 84 0 6 6 13 6 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
18 18 18 87 18 86 199 36 58 165 37 40 36 9 22
CALL[ ]	/* CallFunction */";
};
width = 463;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(43.512,-2,o),
(133.342,1,o),
(202,1,cs),
(227.422,1,o),
(254.611,0,o),
(276.5,0,cs),
(302.298,0,o),
(336.118,-1,o),
(378,-1,cs),
(387.333,-1,o),
(392,5.333,o),
(392,18,cs),
(392,35.333,o),
(392.667,70.333,o),
(394,85,cs),
(400,181,ls),
(400,191,o),
(395.667,196,o),
(387,196,cs),
(381,196,o),
(376.833,192.833,o),
(374.5,186.5,cs),
(372.167,180.167,o),
(370.333,168.333,o),
(369,151,cs),
(362,48,ls),
(360.667,35.333,o),
(357.667,29,o),
(353,29,cs),
(108,29,ls),
(96.667,29,o),
(91,31.333,o),
(91,36,cs),
(91,49.054,o),
(156.005,125.056,o),
(242.5,222.5,cs),
(329.482,320.493,o),
(394,401.667,o),
(394,419,cs),
(394,423.667,o),
(391.667,427.667,o),
(387,431,cs),
(382.333,434.333,o),
(374.333,436,o),
(363,436,cs),
(341.667,436,o),
(317.667,435.667,o),
(291,435,cs),
(264.333,434.333,o),
(240.333,434,o),
(219,434,cs),
(152.557,434,o),
(136.441,433.398,o),
(74,436,cs),
(56.667,436,o),
(51,427.667,o),
(51,405,cs),
(51,298,ls),
(51,285.333,o),
(52,277,o),
(54,273,cs),
(56,269,o),
(60,267,o),
(66,267,cs),
(72,267,o),
(76.5,271.333,o),
(79.5,280,cs),
(82.5,288.667,o),
(84.333,302.667,o),
(85,322,cs),
(88,406,l),
(329,406,ls),
(335,406,o),
(338,403.333,o),
(338,398,cs),
(338,389.457,o),
(272.503,319.078,o),
(182,215,cs),
(92.052,111.56,o),
(26,32.841,o),
(26,13,cs),
(26,3,o),
(32,-2,o),
(44,-2,cs)
);
},
{
closed = 1;
nodes = (
(186.797,510,o),
(274,597.027,o),
(274,618,cs),
(274,636.667,o),
(265.667,640,o),
(255,640,cs),
(234.822,640,o),
(160,545.882,o),
(160,521,cs),
(160,513.667,o),
(162.667,510,o),
(168,510,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
41 35 34 3 2 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 7 6 7 106 0 6 1 6 106 0 0 5 3 5 0 96 0 3 2 5 3 2 102 8 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 6 7 106 0 6 1 6 106 0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 8 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 7 6 7 106 0 6 1 6 106 0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 1 8 1 5 0 1 5 92 0 2 2 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 81 79 74 72 0 67 0 66 198 36 58 165 35 9 20
CALL[ ]	/* CallFunction */";
};
width = 439;
}
);
note = zacute;
unicode = 378;
},
{
glyphname = zcaron;
kernLeft = z;
kernRight = t_z;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(367.803,640,o),
(330.614,615.913,o),
(259,578,c),
(209.718,604.09,o),
(152.064,640,o),
(140,640,cs),
(132,640,o),
(127,632.667,o),
(127,626,cs),
(127,599.333,o),
(155.333,565.167,o),
(186,536.5,cs),
(212.897,511.357,o),
(248,486,o),
(259,486,cs),
(282.877,486,o),
(392,578.037,o),
(392,619,cs),
(392,629.667,o),
(388.333,640,o),
(379,640,cs)
);
},
{
closed = 1;
nodes = (
(269,358,o),
(272,355.333,o),
(272,350,cs),
(272,341.456,o),
(218.656,281.587,o),
(146.5,195,cs),
(73.934,107.921,o),
(21,41.151,o),
(21,24,cs),
(21,12,o),
(26.167,4.667,o),
(36.5,2,cs),
(46.833,-0.667,o),
(64.667,-2,o),
(90,-2,cs),
(89.512,-2,o),
(179.342,1,o),
(248,1,cs),
(273.422,1,o),
(300.611,0,o),
(322.5,0,cs),
(348.298,0,o),
(382.118,-1,o),
(424,-1,cs),
(433.333,-1,o),
(438,5.333,o),
(438,18,cs),
(438,35.333,o),
(438.667,70.333,o),
(440,85,cs),
(446,181,ls),
(446,193,o),
(438.667,212,o),
(408,212,cs),
(371.811,212,o),
(366.474,183.166,o),
(364,151,cs),
(357,96,ls),
(355.667,85.333,o),
(354.667,77,o),
(348,77,cs),
(198,77,ls),
(186.667,77,o),
(181,79.333,o),
(181,84,cs),
(181,94.886,o),
(225.051,147.522,o),
(310.5,247,cs),
(385.279,334.057,o),
(440,402.296,o),
(440,419,cs),
(440,423.667,o),
(437.667,427.667,o),
(433,431,cs),
(428.333,434.333,o),
(420.333,436,o),
(409,436,cs),
(387.667,436,o),
(363.667,435.667,o),
(337,435,cs),
(310.333,434.333,o),
(286.333,434,o),
(265,434,cs),
(192.952,434,o),
(171.048,435,o),
(99,435,cs),
(49.812,435,o),
(46,413.451,o),
(46,389,cs),
(46,298,ls),
(46,270,o),
(54.333,251,o),
(89,251,cs),
(121,251,o),
(127,271.333,o),
(131,322,cs),
(134,358,l),
(263,358,l),
(263,358,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
21 1 1 0 73 1 5 6 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
2 9 2 0 1 0 106 0 1 4 1 106 0 3 8 6 8 3 96 0 6 5 5 6 94 10 1 8 8 4 83 0 4 4 15 67 0 5 5 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
2 9 2 0 1 0 106 0 1 4 1 106 0 3 8 6 8 3 96 0 6 5 8 6 5 102 10 1 8 8 4 83 0 4 4 15 67 0 5 5 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
2 9 2 0 1 0 106 0 1 4 1 106 0 3 8 6 8 3 6 104 0 6 5 8 6 5 102 10 1 8 8 4 83 0 4 4 15 67 0 5 5 7 84 0 7 7 13 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
2 9 2 0 1 0 106 0 1 4 1 106 0 3 8 6 8 3 6 104 0 6 5 8 6 5 102 0 4 10 1 8 3 4 8 92 0 5 5 7 84 0 7 7 13 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
26 26 1 0 26 100 26 99 89 77 70 68 61 58 48 38 31 29 17 15 9 7 0 25 1 25 11 15
CALL[ ]	/* CallFunction */";
};
width = 480;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(296,376,o),
(299,373.333,o),
(299,368,cs),
(299,360.996,o),
(238.529,291.874,o),
(161,202.5,cs),
(80.225,109.384,o),
(23,36.071,o),
(23,20,cs),
(23,10.667,o),
(26.667,4.667,o),
(34,2,cs),
(41.333,-0.667,o),
(53.667,-2,o),
(71,-2,cs),
(70.512,-2,o),
(160.342,1,o),
(229,1,cs),
(254.422,1,o),
(281.611,0,o),
(303.5,0,cs),
(329.298,0,o),
(363.118,-1,o),
(405,-1,cs),
(414.333,-1,o),
(419,5.333,o),
(419,18,cs),
(419,35.333,o),
(419.667,70.333,o),
(421,85,cs),
(427,181,ls),
(427,191.667,o),
(424.667,206,o),
(402,206,cs),
(372.667,206,o),
(368.667,185.667,o),
(366,151,cs),
(359,78,ls),
(357.667,65.333,o),
(354.667,59,o),
(350,59,cs),
(161,59,ls),
(149.667,59,o),
(144,61.333,o),
(144,66,cs),
(144,79.731,o),
(203.788,147.093,o),
(282.5,238,cs),
(362.135,329.973,o),
(421,399.885,o),
(421,419,cs),
(421,423.667,o),
(418.667,427.667,o),
(414,431,cs),
(409.333,434.333,o),
(401.333,436,o),
(390,436,cs),
(368.667,436,o),
(344.667,435.667,o),
(318,435,cs),
(291.333,434.333,o),
(267.333,434,o),
(246,434,cs),
(199.133,434,o),
(147.867,436,o),
(101,436,cs),
(63.667,436,o),
(48,417.667,o),
(48,395,cs),
(48,298,ls),
(48,272.667,o),
(56,257,o),
(80,257,cs),
(105.333,257,o),
(109.333,283.333,o),
(112,322,cs),
(115,376,l),
(290,376,l),
(290,376,l)
);
},
{
closed = 1;
nodes = (
(347,640,o),
(253,577,o),
(240,569,c),
(167,612,o),
(136,640,o),
(121,640,cs),
(114,640,o),
(110,636,o),
(110,627,cs),
(110,586,o),
(218,495,o),
(240,495,cs),
(265,495,o),
(371,588,o),
(371,623,cs),
(371,632,o),
(368,640,o),
(360,640,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
76 1 8 6 43 1 2 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
7 10 2 6 8 6 106 0 0 5 3 5 0 96 0 3 2 2 3 94 0 8 8 23 67 9 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
7 10 2 6 8 6 106 0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 8 8 23 67 9 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
7 10 2 6 8 6 106 0 8 1 8 106 0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 1 9 1 5 0 1 5 92 0 2 2 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
72 71 1 1 89 87 82 80 71 95 72 95 1 70 1 69 199 36 58 165 36 11 31
CALL[ ]	/* CallFunction */";
};
width = 463;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(43.512,-2,o),
(133.342,1,o),
(202,1,cs),
(227.422,1,o),
(254.611,0,o),
(276.5,0,cs),
(302.298,0,o),
(336.118,-1,o),
(378,-1,cs),
(387.333,-1,o),
(392,5.333,o),
(392,18,cs),
(392,35.333,o),
(392.667,70.333,o),
(394,85,cs),
(400,181,ls),
(400,191,o),
(395.667,196,o),
(387,196,cs),
(381,196,o),
(376.833,192.833,o),
(374.5,186.5,cs),
(372.167,180.167,o),
(370.333,168.333,o),
(369,151,cs),
(362,48,ls),
(360.667,35.333,o),
(357.667,29,o),
(353,29,cs),
(108,29,ls),
(96.667,29,o),
(91,31.333,o),
(91,36,cs),
(91,49.054,o),
(156.005,125.056,o),
(242.5,222.5,cs),
(329.482,320.493,o),
(394,401.667,o),
(394,419,cs),
(394,423.667,o),
(391.667,427.667,o),
(387,431,cs),
(382.333,434.333,o),
(374.333,436,o),
(363,436,cs),
(341.667,436,o),
(317.667,435.667,o),
(291,435,cs),
(264.333,434.333,o),
(240.333,434,o),
(219,434,cs),
(152.557,434,o),
(136.441,433.398,o),
(74,436,cs),
(56.667,436,o),
(51,427.667,o),
(51,405,cs),
(51,298,ls),
(51,285.333,o),
(52,277,o),
(54,273,cs),
(56,269,o),
(60,267,o),
(66,267,cs),
(72,267,o),
(76.5,271.333,o),
(79.5,280,cs),
(82.5,288.667,o),
(84.333,302.667,o),
(85,322,cs),
(88,406,l),
(329,406,ls),
(335,406,o),
(338,403.333,o),
(338,398,cs),
(338,389.457,o),
(272.503,319.078,o),
(182,215,cs),
(92.052,111.56,o),
(26,32.841,o),
(26,13,cs),
(26,3,o),
(32,-2,o),
(44,-2,cs)
);
},
{
closed = 1;
nodes = (
(237.852,510,o),
(341,603.671,o),
(341,629,cs),
(341,636.333,o),
(338.333,640,o),
(333,640,cs),
(318.302,640,o),
(289.411,607.937,o),
(213,554,c),
(176.597,579.696,o),
(107.139,640,o),
(94,640,cs),
(88.667,640,o),
(86,636.333,o),
(86,629,cs),
(86,604.067,o),
(189.626,510,o),
(213,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
87 1 7 6 41 35 34 3 2 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
8 10 2 6 7 6 106 0 7 1 7 106 0 0 5 3 5 0 96 0 3 2 5 3 2 102 9 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
8 10 2 6 7 6 106 0 7 1 7 106 0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 9 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
8 10 2 6 7 6 106 0 7 1 7 106 0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 1 9 1 5 0 1 5 92 0 2 2 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
69 68 0 0 83 81 76 74 68 91 69 91 0 67 0 66 198 36 58 165 35 11 20
CALL[ ]	/* CallFunction */";
};
width = 439;
}
);
note = zcaron;
unicode = 382;
},
{
glyphname = zdotaccent;
kernLeft = z;
kernRight = t_z;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(269,358,o),
(272,355.333,o),
(272,350,cs),
(272,341.456,o),
(218.656,281.587,o),
(146.5,195,cs),
(73.934,107.921,o),
(21,41.151,o),
(21,24,cs),
(21,12,o),
(26.167,4.667,o),
(36.5,2,cs),
(46.833,-0.667,o),
(64.667,-2,o),
(90,-2,cs),
(89.512,-2,o),
(179.342,1,o),
(248,1,cs),
(273.422,1,o),
(300.611,0,o),
(322.5,0,cs),
(348.298,0,o),
(382.118,-1,o),
(424,-1,cs),
(433.333,-1,o),
(438,5.333,o),
(438,18,cs),
(438,35.333,o),
(438.667,70.333,o),
(440,85,cs),
(446,181,ls),
(446,193,o),
(438.667,212,o),
(408,212,cs),
(371.811,212,o),
(366.474,183.166,o),
(364,151,cs),
(357,96,ls),
(355.667,85.333,o),
(354.667,77,o),
(348,77,cs),
(198,77,ls),
(186.667,77,o),
(181,79.333,o),
(181,84,cs),
(181,94.886,o),
(225.051,147.522,o),
(310.5,247,cs),
(385.279,334.057,o),
(440,402.296,o),
(440,419,cs),
(440,423.667,o),
(437.667,427.667,o),
(433,431,cs),
(428.333,434.333,o),
(420.333,436,o),
(409,436,cs),
(387.667,436,o),
(363.667,435.667,o),
(337,435,cs),
(310.333,434.333,o),
(286.333,434,o),
(265,434,cs),
(192.952,434,o),
(171.048,435,o),
(99,435,cs),
(49.812,435,o),
(46,413.451,o),
(46,389,cs),
(46,298,ls),
(46,270,o),
(54.333,251,o),
(89,251,cs),
(121,251,o),
(127,271.333,o),
(131,322,cs),
(134,358,l),
(263,358,l),
(263,358,l)
);
},
{
closed = 1;
nodes = (
(202,537.333,o),
(227.667,514,o),
(261,514,cs),
(290.675,514,o),
(328,528.646,o),
(328,584,cs),
(328,620,o),
(300,645,o),
(268,645,cs),
(220.488,645,o),
(202,607.161,o),
(202,580,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
47 1 2 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 5 3 5 0 96 0 3 2 2 3 94 0 6 0 7 1 6 7 91 8 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 0 5 3 5 0 96 0 3 2 5 3 2 102 0 6 0 7 1 6 7 91 8 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 6 0 7 1 6 7 91 8 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 6 0 7 1 6 7 91 0 1 8 1 5 0 1 5 91 0 2 2 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 89 87 81 79 0 74 0 73 199 39 58 167 35 9 20
CALL[ ]	/* CallFunction */";
};
width = 480;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(296,376,o),
(299,373.333,o),
(299,368,cs),
(299,360.996,o),
(238.529,291.874,o),
(161,202.5,cs),
(80.225,109.384,o),
(23,36.071,o),
(23,20,cs),
(23,10.667,o),
(26.667,4.667,o),
(34,2,cs),
(41.333,-0.667,o),
(53.667,-2,o),
(71,-2,cs),
(70.512,-2,o),
(160.342,1,o),
(229,1,cs),
(254.422,1,o),
(281.611,0,o),
(303.5,0,cs),
(329.298,0,o),
(363.118,-1,o),
(405,-1,cs),
(414.333,-1,o),
(419,5.333,o),
(419,18,cs),
(419,35.333,o),
(419.667,70.333,o),
(421,85,cs),
(427,181,ls),
(427,191.667,o),
(424.667,206,o),
(402,206,cs),
(372.667,206,o),
(368.667,185.667,o),
(366,151,cs),
(359,78,ls),
(357.667,65.333,o),
(354.667,59,o),
(350,59,cs),
(161,59,ls),
(149.667,59,o),
(144,61.333,o),
(144,66,cs),
(144,79.731,o),
(203.788,147.093,o),
(282.5,238,cs),
(362.135,329.973,o),
(421,399.885,o),
(421,419,cs),
(421,423.667,o),
(418.667,427.667,o),
(414,431,cs),
(409.333,434.333,o),
(401.333,436,o),
(390,436,cs),
(368.667,436,o),
(344.667,435.667,o),
(318,435,cs),
(291.333,434.333,o),
(267.333,434,o),
(246,434,cs),
(199.133,434,o),
(147.867,436,o),
(101,436,cs),
(63.667,436,o),
(48,417.667,o),
(48,395,cs),
(48,298,ls),
(48,272.667,o),
(56,257,o),
(80,257,cs),
(105.333,257,o),
(109.333,283.333,o),
(112,322,cs),
(115,376,l),
(290,376,l),
(290,376,l)
);
},
{
closed = 1;
nodes = (
(194,544,o),
(216,523,o),
(243,523,cs),
(268,523,o),
(299,536,o),
(299,584,cs),
(299,615,o),
(277,636,o),
(250,636,cs),
(208,636,o),
(194,600,o),
(194,580,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
43 1 2 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 5 3 5 0 96 0 3 2 2 3 94 0 6 0 7 1 6 7 91 8 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 6 0 7 1 6 7 91 8 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 6 0 7 1 6 7 91 0 1 8 1 5 0 1 5 91 0 2 2 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
1 1 83 81 77 75 1 70 1 69 199 36 58 165 36 9 31
CALL[ ]	/* CallFunction */";
};
width = 463;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(43.512,-2,o),
(133.342,1,o),
(202,1,cs),
(227.422,1,o),
(254.611,0,o),
(276.5,0,cs),
(302.298,0,o),
(336.118,-1,o),
(378,-1,cs),
(387.333,-1,o),
(392,5.333,o),
(392,18,cs),
(392,35.333,o),
(392.667,70.333,o),
(394,85,cs),
(400,181,ls),
(400,191,o),
(395.667,196,o),
(387,196,cs),
(381,196,o),
(376.833,192.833,o),
(374.5,186.5,cs),
(372.167,180.167,o),
(370.333,168.333,o),
(369,151,cs),
(362,48,ls),
(360.667,35.333,o),
(357.667,29,o),
(353,29,cs),
(108,29,ls),
(96.667,29,o),
(91,31.333,o),
(91,36,cs),
(91,49.054,o),
(156.005,125.056,o),
(242.5,222.5,cs),
(329.482,320.493,o),
(394,401.667,o),
(394,419,cs),
(394,423.667,o),
(391.667,427.667,o),
(387,431,cs),
(382.333,434.333,o),
(374.333,436,o),
(363,436,cs),
(341.667,436,o),
(317.667,435.667,o),
(291,435,cs),
(264.333,434.333,o),
(240.333,434,o),
(219,434,cs),
(152.557,434,o),
(136.441,433.398,o),
(74,436,cs),
(56.667,436,o),
(51,427.667,o),
(51,405,cs),
(51,298,ls),
(51,285.333,o),
(52,277,o),
(54,273,cs),
(56,269,o),
(60,267,o),
(66,267,cs),
(72,267,o),
(76.5,271.333,o),
(79.5,280,cs),
(82.5,288.667,o),
(84.333,302.667,o),
(85,322,cs),
(88,406,l),
(329,406,ls),
(335,406,o),
(338,403.333,o),
(338,398,cs),
(338,389.457,o),
(272.503,319.078,o),
(182,215,cs),
(92.052,111.56,o),
(26,32.841,o),
(26,13,cs),
(26,3,o),
(32,-2,o),
(44,-2,cs)
);
},
{
closed = 1;
nodes = (
(235.667,538,o),
(258,548,o),
(258,584,cs),
(258,606.667,o),
(242.667,621,o),
(224,621,cs),
(196.258,621,o),
(183,593.895,o),
(183,580,cs),
(183,556,o),
(198.333,538,o),
(217,538,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
41 35 34 3 2 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 0 5 3 5 0 96 0 3 2 5 3 2 102 0 6 0 7 1 6 7 91 8 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 6 0 7 1 6 7 91 8 1 5 5 1 83 0 1 1 15 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 0 5 3 5 0 3 104 0 3 2 5 3 2 102 0 6 0 7 1 6 7 91 0 1 8 1 5 0 1 5 91 0 2 2 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 80 78 74 72 0 67 0 66 198 36 58 165 35 9 20
CALL[ ]	/* CallFunction */";
};
width = 439;
}
);
note = zdotaccent;
unicode = 380;
},
{
glyphname = a.salt;
kernLeft = a.salt;
kernRight = a.salt;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(306,242.667,o),
(264.333,249,o),
(239,249,cs),
(97.667,249,o),
(25,190,o),
(25,106,cs),
(25,35.333,o),
(89.333,-11,o),
(228,-11,cs),
(270.667,-11,o),
(313.333,-5.667,o),
(336,29,c),
(356,2.333,o),
(381.667,-11,o),
(443,-11,cs),
(499,-11,o),
(531,8,o),
(531,72,cs),
(531,81.528,o),
(520.904,104,o),
(494,104,cs),
(479.333,104,o),
(469.5,100.167,o),
(464.5,92.5,cs),
(459.5,84.833,o),
(457,79.333,o),
(457,76,cs),
(457,68.667,o),
(452.667,65,o),
(444,65,cs),
(440.667,65,o),
(435.667,68.5,o),
(429,75.5,cs),
(422.333,82.5,o),
(419,96.333,o),
(419,117,cs),
(419,178.497,o),
(422,275.523,o),
(422,287,cs),
(422,416.333,o),
(375.333,475,o),
(270,475,cs),
(215.333,475,o),
(164.667,458.667,o),
(134,412,c),
(135.333,420,o),
(138,436,o),
(138,448,cs),
(138,463.995,o),
(128.301,491,o),
(98,491,cs),
(62.106,491,o),
(55,465.201,o),
(55,449,cs),
(55,409,o),
(55.167,378.167,o),
(55.5,356.5,cs),
(55.833,334.833,o),
(56,320.333,o),
(56,313,cs),
(56,300.31,o),
(60.519,273,o),
(104,273,cs),
(132,273,o),
(138,293.333,o),
(138,312,cs),
(138,364,o),
(164.333,399,o),
(239,399,cs),
(291,399,o),
(335,356.333,o),
(335,287,cs),
(335,280.333,o),
(334.833,273.833,o),
(334.5,267.5,cs),
(334.167,261.167,o),
(334,255.333,o),
(334,250,cs),
(334,232,l),
(334,232,l)
);
},
{
closed = 1;
nodes = (
(116,145.667,o),
(156,173,o),
(232,173,cs),
(278.071,173,o),
(334,147.719,o),
(334,117,cs),
(334,103.667,o),
(325.833,91.667,o),
(309.5,81,cs),
(293.167,70.333,o),
(267.333,65,o),
(232,65,cs),
(198,65,o),
(170.167,68.167,o),
(148.5,74.5,cs),
(126.833,80.833,o),
(116,91.667,o),
(116,107,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
86 78 59 24 2 40
CALL[ ]	/* CallFunction */";
};
width = 522;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(301.667,233.667,o),
(257.667,243,o),
(219,243,cs),
(96.742,243,o),
(26,184.561,o),
(26,106,cs),
(26,35.333,o),
(88,-11,o),
(208,-11,cs),
(258.667,-11,o),
(306.333,0,o),
(337,36,c),
(354.333,4,o),
(381.333,-11,o),
(432,-11,cs),
(482.667,-11,o),
(511,8,o),
(511,72,cs),
(511,78.667,o),
(505,98,o),
(485,98,cs),
(463.667,98,o),
(458,82.667,o),
(458,76,cs),
(458,53.333,o),
(447.667,48,o),
(433,48,cs),
(424.333,48,o),
(416.5,52.5,o),
(409.5,61.5,cs),
(402.5,70.5,o),
(399,89,o),
(399,117,cs),
(399,178.497,o),
(402,275.523,o),
(402,287,cs),
(402,416.333,o),
(355.333,475,o),
(250,475,cs),
(195.333,475,o),
(144.667,458.667,o),
(114,412,c),
(115.333,420,o),
(118,436,o),
(118,448,cs),
(118,462.667,o),
(111.667,485,o),
(89,485,cs),
(59.046,485,o),
(56,462.357,o),
(56,449,cs),
(56,409,o),
(56.167,378.167,o),
(56.5,356.5,cs),
(56.833,334.833,o),
(57,320.333,o),
(57,313,cs),
(57,300.692,o),
(61.954,279,o),
(91,279,cs),
(113.667,279,o),
(118,297.333,o),
(118,312,cs),
(118,374.667,o),
(150.333,417,o),
(233,417,cs),
(287.494,417,o),
(336,365.298,o),
(336,287,cs),
(336,280.333,o),
(335.833,272.833,o),
(335.5,264.5,cs),
(335.167,256.167,o),
(335,248.333,o),
(335,241,cs),
(335,215,l),
(335,215,l)
);
},
{
closed = 1;
nodes = (
(96,152.333,o),
(143,185,o),
(219,185,cs),
(275.967,185,o),
(335,154.368,o),
(335,117,cs),
(335,79.667,o),
(288,47,o),
(212,47,cs),
(144,47,o),
(96,71,o),
(96,107,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
87 79 58 26 2 40
CALL[ ]	/* CallFunction */";
};
width = 504;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(244,-11,o),
(296.333,9.333,o),
(339,48,c),
(351,5.333,o),
(379.667,-11,o),
(417,-11,cs),
(458.333,-11,o),
(483,8,o),
(483,72,cs),
(483,78.667,o),
(478.667,88,o),
(472,88,cs),
(464,88,o),
(460,84,o),
(460,76,cs),
(460,29.333,o),
(435.333,19,o),
(418,19,cs),
(383.761,19,o),
(371,40.504,o),
(371,117,cs),
(371,178.497,o),
(374,275.523,o),
(374,287,cs),
(374,416.333,o),
(327.333,475,o),
(222,475,cs),
(167.333,475,o),
(116.667,458.667,o),
(86,412,c),
(87.333,420,o),
(90,436,o),
(90,448,cs),
(90,462.667,o),
(86.667,475,o),
(76,475,cs),
(64,475,o),
(58,463.667,o),
(58,449,cs),
(58,409,o),
(58.167,378.167,o),
(58.5,356.5,cs),
(58.833,334.833,o),
(59,320.333,o),
(59,313,cs),
(59,302.333,o),
(62.333,289,o),
(73,289,cs),
(86.333,289,o),
(90,305.333,o),
(90,312,cs),
(90,393.333,o),
(129,447,o),
(225,447,cs),
(299.667,447,o),
(338,385.667,o),
(338,287,cs),
(338,280.333,o),
(337.833,271.5,o),
(337.5,260.5,cs),
(337.167,249.5,o),
(337,238.333,o),
(337,227,cs),
(337,187,l),
(295.667,219,o),
(249.667,233,o),
(191,233,cs),
(98.302,233,o),
(28,179.254,o),
(28,106,cs),
(28,35.333,o),
(88,-11,o),
(180,-11,cs)
);
},
{
closed = 1;
nodes = (
(116,17,o),
(68,52.333,o),
(68,107,cs),
(68,163.031,o),
(128.1,205,o),
(201,205,cs),
(278.27,205,o),
(337,164.192,o),
(337,117,cs),
(337,62.19,o),
(262.572,17,o),
(184,17,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
84 74 53 20 2 40
CALL[ ]	/* CallFunction */";
};
width = 479;
}
);
note = a.salt;
},
{
glyphname = c.salt;
kernLeft = c.salt;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(373,90.667,o),
(326,71,o),
(270,71,cs),
(163.737,71,o),
(128,131.706,o),
(128,224,cs),
(128,334.056,o),
(176.817,406,o),
(290,406,cs),
(311.333,406,o),
(324.333,403.5,o),
(329,398.5,cs),
(333.667,393.5,o),
(336,388.667,o),
(336,384,cs),
(336,366.89,o),
(312,366.471,o),
(312,335,cs),
(312,314.552,o),
(322.193,282,o),
(371,282,cs),
(439.709,282,o),
(458,331.283,o),
(458,365,cs),
(458,432.849,o),
(370.981,482,o),
(268,482,cs),
(121.585,482,o),
(26,367.37,o),
(26,227,cs),
(26,97.705,o),
(95.116,-6,o),
(263,-6,cs),
(367.431,-6,o),
(415.944,29.179,o),
(484,92,cs),
(490,98,o),
(493,106.667,o),
(493,118,cs),
(493,136.667,o),
(482.667,151,o),
(460,151,cs),
(444,151,o),
(434.333,142.667,o),
(417,128,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
22 12 1 40
CALL[ ]	/* CallFunction */";
};
width = 500;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(376,84,o),
(327,54,o),
(259,54,cs),
(153.667,54,o),
(110,122.333,o),
(110,225,cs),
(110,343.258,o),
(168.523,424,o),
(279,424,cs),
(305.667,424,o),
(324,420.333,o),
(334,413,cs),
(344,405.667,o),
(349,398.333,o),
(349,391,cs),
(349,371.911,o),
(321,371.893,o),
(321,341,cs),
(321,318.333,o),
(333.667,294,o),
(371,294,cs),
(418.644,294,o),
(440,333.323,o),
(440,367,cs),
(440,434.634,o),
(358.29,482,o),
(267,482,cs),
(126.534,482,o),
(29,368.056,o),
(29,226,cs),
(29,95.408,o),
(108.078,-6,o),
(252,-6,cs),
(346.667,-6,o),
(408.667,32,o),
(466,96,cs),
(472.667,102.667,o),
(475,113,o),
(475,121,cs),
(475,135.667,o),
(467,146,o),
(451,146,cs),
(440.333,146,o),
(434.667,142.667,o),
(420,128,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
21 11 1 40
CALL[ ]	/* CallFunction */";
};
width = 485;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(293,-6,o),
(355.667,19.333,o),
(401,58,cs),
(415.667,70.667,o),
(428.667,85.667,o),
(440,103,cs),
(446.667,113,o),
(450,120.667,o),
(450,126,cs),
(450,133.333,o),
(446,137,o),
(438,137,cs),
(432.667,137,o),
(428,134,o),
(424,128,cs),
(408,106.667,o),
(396.333,92.333,o),
(389,85,cs),
(350.333,43.667,o),
(301.333,24,o),
(248,24,cs),
(145.333,24,o),
(84,103,o),
(84,227,cs),
(84,359.481,o),
(157.728,454,o),
(263,454,cs),
(312.894,454,o),
(368,432.042,o),
(368,403,cs),
(368,380.874,o),
(334,382.275,o),
(334,351,cs),
(334,328.333,o),
(348.333,314,o),
(371,314,cs),
(397.667,314,o),
(415,336.667,o),
(415,370,cs),
(415,432,o),
(351.936,482,o),
(266,482,cs),
(131.407,482,o),
(33,368.624,o),
(33,225,cs),
(33,97.278,o),
(120.796,-6,o),
(237,-6,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
20 10 1 40
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = c.salt;
},
{
glyphname = g.salt;
kernLeft = g;
kernRight = g;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(122.199,460,o),
(53,386.98,o),
(53,294,cs),
(53,243.333,o),
(73.333,193,o),
(116,165,c),
(74.667,146.333,o),
(54,127.667,o),
(54,89,cs),
(54,37,o),
(90,16.333,o),
(142,7,c),
(64.667,-8.333,o),
(26,-44.667,o),
(26,-102,cs),
(26,-201.668,o),
(137.293,-250,o),
(268,-250,cs),
(357.333,-250,o),
(432.833,-233.833,o),
(485.5,-206.5,cs),
(538.167,-179.167,o),
(569,-139,o),
(569,-91,cs),
(569,19.667,o),
(500.333,73,o),
(331,73,cs),
(209.976,73,o),
(147,80.128,o),
(147,95,cs),
(147,123.444,o),
(179.905,130.952,o),
(192,137,c),
(196,137,o),
(199.833,136.833,o),
(203.5,136.5,cs),
(207.167,136.167,o),
(215.333,136,o),
(228,136,cs),
(384.019,136,o),
(444,216.289,o),
(444,301,cs),
(444,369.292,o),
(399.281,429.242,o),
(347,443,c),
(372.333,463,o),
(390.333,472,o),
(413,472,cs),
(458.361,472,o),
(432.161,420,o),
(478,420,cs),
(502,420,o),
(516,437.667,o),
(516,455,cs),
(516,491,o),
(460,517,o),
(388,517,cs),
(342.667,517,o),
(301.333,494.667,o),
(268,456,c),
(259.333,458.667,o),
(248.333,460,o),
(235,460,cs)
);
},
{
closed = 1;
nodes = (
(350.437,-1,o),
(475,-16.364,o),
(475,-91,cs),
(475,-136.775,o),
(408.712,-171,o),
(283,-171,cs),
(214.38,-171,o),
(120,-156.459,o),
(120,-97,cs),
(120,-48.183,o),
(217.63,-1,o),
(285,-1,cs)
);
},
{
closed = 1;
nodes = (
(291.863,382,o),
(350,369.328,o),
(350,301,cs),
(350,222.862,o),
(271.079,215,o),
(242,215,cs),
(228.447,215,o),
(147,221.79,o),
(147,292,cs),
(147,366.544,o),
(213.827,382,o),
(246,382,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
100 91 80 71 49 4 3 40
CALL[ ]	/* CallFunction */";
};
width = 565;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(127.199,460,o),
(58,386.98,o),
(58,294,cs),
(58,243.333,o),
(78.333,193,o),
(121,165,c),
(79.667,146.333,o),
(59,127.667,o),
(59,89,cs),
(59,37,o),
(95,16.333,o),
(147,7,c),
(69.667,-8.333,o),
(31,-44.667,o),
(31,-102,cs),
(31,-201.668,o),
(142.293,-250,o),
(273,-250,cs),
(355.667,-250,o),
(425.667,-233.833,o),
(475,-206.5,cs),
(524.333,-179.167,o),
(553,-139,o),
(553,-91,cs),
(553,19.688,o),
(455.045,53.358,o),
(315,56,cs),
(274.508,56,o),
(131,52.598,o),
(131,95,cs),
(131,126.127,o),
(163.686,134.843,o),
(178,142,c),
(182.667,141.333,o),
(189.167,140.333,o),
(197.5,139,cs),
(205.833,137.667,o),
(216.333,137,o),
(229,137,cs),
(369.099,137,o),
(428,219.315,o),
(428,301,cs),
(428,372.873,o),
(379.203,428.778,o),
(331,444,c),
(354.333,466.667,o),
(376.333,478,o),
(397,478,cs),
(438.917,478,o),
(420.083,426,o),
(462,426,cs),
(486,426,o),
(500,443.667,o),
(500,461,cs),
(500,493,o),
(453,517,o),
(393,517,cs),
(347.667,517,o),
(306.333,494.667,o),
(273,456,c),
(264.333,458.667,o),
(253.333,460,o),
(240,460,cs)
);
},
{
closed = 1;
nodes = (
(307.243,-1,o),
(347.424,-1.589,o),
(395,-14,cs),
(440.379,-25.838,o),
(480,-52.067,o),
(480,-99,cs),
(480,-124.333,o),
(463.667,-145.667,o),
(431,-163,cs),
(398.333,-180.333,o),
(347.333,-189,o),
(278,-189,cs),
(210.866,-189,o),
(104,-162.718,o),
(104,-106,cs),
(104,-32.033,o),
(216.364,-1,o),
(290,-1,cs)
);
},
{
closed = 1;
nodes = (
(291.768,400,o),
(355,378.223,o),
(355,301,cs),
(355,218.902,o),
(282.382,197,o),
(237,197,cs),
(208.621,197,o),
(131,211.263,o),
(131,292,cs),
(131,376.626,o),
(201.063,400,o),
(243,400,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
101 92 81 72 50 4 3 40
CALL[ ]	/* CallFunction */";
};
width = 526;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(424.405,-250,o),
(530,-188.092,o),
(530,-91,cs),
(530,19.819,o),
(393.07,24.34,o),
(292,27,cs),
(174.843,29.493,o),
(108,31.986,o),
(108,95,cs),
(108,125.667,o),
(123.333,135.333,o),
(158,150,c),
(180.667,140.667,o),
(205.667,137,o),
(231,137,cs),
(341.825,137,o),
(405,218.289,o),
(405,301,cs),
(405,372.677,o),
(357.815,422.403,o),
(308,446,c),
(330.667,474,o),
(352.667,488,o),
(374,488,cs),
(415.917,488,o),
(397.083,436,o),
(439,436,cs),
(463,436,o),
(477,453.667,o),
(477,471,cs),
(477,497.667,o),
(442.667,517,o),
(400,517,cs),
(354.667,517,o),
(313.333,494.667,o),
(280,456,c),
(271.333,458.667,o),
(260.333,460,o),
(247,460,cs),
(134.199,460,o),
(65,386.98,o),
(65,294,cs),
(65,243.333,o),
(85.333,193,o),
(128,165,c),
(86.667,146.333,o),
(66,127.667,o),
(66,89,cs),
(66,37,o),
(102,16.333,o),
(154,7,c),
(76.667,-8.333,o),
(38,-44.667,o),
(38,-102,cs),
(38,-201.668,o),
(149.293,-250,o),
(280,-250,cs)
);
},
{
closed = 1;
nodes = (
(184.27,-219,o),
(81,-182.744,o),
(81,-106,cs),
(81,-31.14,o),
(181.608,-1,o),
(297,-1,cs),
(331.839,-1,o),
(487,-5.76,o),
(487,-99,cs),
(487,-168.498,o),
(402.633,-219,o),
(285,-219,cs)
);
},
{
closed = 1;
nodes = (
(151.333,167,o),
(108,212,o),
(108,292,cs),
(108,376,o),
(157.667,430,o),
(239,430,cs),
(317.667,430,o),
(362,381,o),
(362,301,cs),
(362,217,o),
(311.333,167,o),
(230,167,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
95 90 79 70 48 4 3 40
CALL[ ]	/* CallFunction */";
};
width = 470;
}
);
note = g.salt;
},
{
glyphname = k.salt;
kernLeft = germandbls;
kernRight = c_k;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,807.333,o),
(148.667,817,o),
(132,817,cs),
(50.929,817,o),
(-33,806.86,o),
(-33,775,cs),
(-33,752.333,o),
(-9.667,749,o),
(13,749,cs),
(42,749,ls),
(56.667,749,o),
(64,741.333,o),
(64,726,cs),
(64,691.333,o),
(64.667,648.167,o),
(66,591.5,cs),
(67.333,534.833,o),
(68,463.333,o),
(68,370,cs),
(68,268.599,o),
(63,163.435,o),
(63,107,cs),
(63,68.333,o),
(49.667,59,o),
(19,55,cs),
(15.667,54.333,o),
(11.333,52.333,o),
(6,49,cs),
(0.667,45.667,o),
(-2,37.333,o),
(-2,24,cs),
(-2,0,o),
(26.333,-6,o),
(49,-6,cs),
(58.333,-6,o),
(70.167,-5.667,o),
(84.5,-5,cs),
(98.833,-4.333,o),
(111.333,-4,o),
(122,-4,cs),
(147.333,-4,o),
(168.167,-4.333,o),
(184.5,-5,cs),
(200.833,-5.667,o),
(216.333,-6,o),
(231,-6,cs),
(247,-6,o),
(260,-3.667,o),
(260,23,cs),
(260,43,o),
(248.667,53,o),
(218,53,cs),
(157,53,l),
(157,185,l),
(176,205,l),
(189.291,178.417,o),
(218.805,121.33,o),
(255.5,53.5,cs),
(291.293,-12.663,o),
(321.516,-58,o),
(339,-58,cs),
(460.668,-58,o),
(555,-62.024,o),
(555,-28,cs),
(555,-2.178,o),
(506.501,0.375,o),
(475,3,cs),
(447,5.667,o),
(426.667,7.333,o),
(414,8,cs),
(401.333,8.667,o),
(391.333,9,o),
(384,9,cs),
(376.177,9,o),
(294.717,153.514,o),
(246,268,c),
(269.457,288.33,o),
(290.09,311.131,o),
(335,354,cs),
(342.333,361.333,o),
(352.667,365.667,o),
(366,367,cs),
(400.667,370.333,o),
(428.5,374.333,o),
(449.5,379,cs),
(470.5,383.667,o),
(481,391.667,o),
(481,403,cs),
(481,427,o),
(455.667,431,o),
(357,431,cs),
(253.273,431,o),
(200,430.794,o),
(200,396,cs),
(200,380,o),
(209.667,370,o),
(223,370,cs),
(231,370,ls),
(234.333,370,o),
(236,368.667,o),
(236,366,cs),
(236,355.388,o),
(201.827,328.695,o),
(157,282,c),
(157,788,l),
(157,788,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
100 48 1 40
CALL[ ]	/* CallFunction */";
};
width = 549;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(146,807.333,o),
(137.667,817,o),
(121,817,cs),
(17.421,817,o),
(-36,800.997,o),
(-36,781,cs),
(-36,762.333,o),
(-14,761,o),
(2,761,cs),
(52,761,ls),
(66.667,761,o),
(74,753.333,o),
(74,738,cs),
(74,702,o),
(74.667,658.833,o),
(76,599.5,cs),
(77.333,540.167,o),
(78,466,o),
(78,370,cs),
(78,291.525,o),
(76.575,244.686,o),
(75.5,213.5,cs),
(74.382,181.069,o),
(73,146.442,o),
(73,95,cs),
(73,56.333,o),
(62.333,49.667,o),
(29,43,cs),
(6.333,39,o),
(-5,39.667,o),
(-5,17,cs),
(-5,-1.667,o),
(15.333,-6,o),
(38,-6,cs),
(47.333,-6,o),
(59.167,-5.667,o),
(73.5,-5,cs),
(87.833,-4.333,o),
(100.333,-4,o),
(111,-4,cs),
(136.333,-4,o),
(157.167,-4.333,o),
(173.5,-5,cs),
(189.833,-5.667,o),
(205.333,-6,o),
(220,-6,cs),
(236,-6,o),
(249,-2.667,o),
(249,16,cs),
(249,32,o),
(237.667,41,o),
(207,41,cs),
(146,41,l),
(146,185,l),
(179,216,l),
(191.214,193.607,o),
(218.956,136.607,o),
(260,62.5,cs),
(304.684,-18.179,o),
(335.23,-59,o),
(349,-59,cs),
(416.333,-58.333,o),
(464.5,-56.833,o),
(493.5,-54.5,cs),
(522.5,-52.167,o),
(537,-45.333,o),
(537,-34,cs),
(537,-12.676,o),
(501.81,-9,o),
(471,-9,cs),
(443,-9,o),
(422.167,-8.5,o),
(408.5,-7.5,cs),
(394.833,-6.5,o),
(385.333,-3.333,o),
(380,2,cs),
(345.807,33.344,o),
(271.03,176.723,o),
(235,268,c),
(251.415,282.226,o),
(267.392,298.469,o),
(279.5,310,cs),
(294.752,324.526,o),
(314.83,342.928,o),
(339,366,cs),
(346.333,373.333,o),
(356.667,377.667,o),
(370,379,cs),
(404.667,382.333,o),
(430.167,385.667,o),
(446.5,389,cs),
(462.833,392.333,o),
(471,399,o),
(471,409,cs),
(471,419,o),
(463.5,425.167,o),
(448.5,427.5,cs),
(433.5,429.833,o),
(409.333,431,o),
(376,431,cs),
(297,431,ls),
(272.333,431,o),
(253.333,429.833,o),
(240,427.5,cs),
(226.667,425.167,o),
(220,418.333,o),
(220,407,cs),
(220,391,o),
(230.333,384,o),
(245,384,cs),
(249,384,ls),
(255,384,o),
(258,380.667,o),
(258,374,cs),
(258,368.667,o),
(249.167,358,o),
(231.5,342,cs),
(213.833,326,o),
(185.333,300,o),
(146,264,c),
(146,788,l),
(146,788,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
95 42 1 40
CALL[ ]	/* CallFunction */";
};
width = 533;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(411.333,-59,o),
(447.833,-58.333,o),
(473.5,-57,cs),
(499.167,-55.667,o),
(512,-51.333,o),
(512,-44,cs),
(512,-37.333,o),
(508.167,-33.167,o),
(500.5,-31.5,cs),
(492.833,-29.833,o),
(481.333,-29,o),
(466,-29,cs),
(438,-29,o),
(417.333,-28.5,o),
(404,-27.5,cs),
(390.667,-26.5,o),
(382,-23.333,o),
(378,-18,cs),
(307.679,67.704,o),
(231.779,232.662,o),
(220,268,c),
(254.118,297.569,o),
(293.054,336.415,o),
(345,386,cs),
(352.333,393.333,o),
(362.667,397.667,o),
(376,399,cs),
(431.857,403.297,o),
(457,405.782,o),
(457,419,cs),
(457,431.078,o),
(387.242,431,o),
(303,431,cs),
(253,431,o),
(228,426.333,o),
(228,417,cs),
(228,409,o),
(234.667,404.667,o),
(248,404,cs),
(282,402,ls),
(290,402,o),
(294,399.333,o),
(294,394,cs),
(294,384.857,o),
(240.996,328.719,o),
(131,234,c),
(131,788,ls),
(131,807.333,o),
(122.667,817,o),
(106,817,cs),
(8.492,817,o),
(-41,802.098,o),
(-41,791,cs),
(-41,787.667,o),
(-38.333,785.167,o),
(-33,783.5,cs),
(-27.667,781.833,o),
(-21,781,o),
(-13,781,cs),
(67,781,ls),
(81.667,781,o),
(89,773.333,o),
(89,758,cs),
(89,719.333,o),
(89.667,673.5,o),
(91,611.5,cs),
(92.333,549.5,o),
(93,471.333,o),
(93,370,cs),
(93,286.414,o),
(91.563,234.456,o),
(90.5,201.5,cs),
(89.38,166.785,o),
(88,130.045,o),
(88,75,cs),
(88,36.333,o),
(81.333,28.333,o),
(44,23,cs),
(20.667,19.667,o),
(5.833,16.833,o),
(-0.5,14.5,cs),
(-6.833,12.167,o),
(-10,9.333,o),
(-10,6,cs),
(-10,-2,o),
(1,-6,o),
(23,-6,cs),
(32.333,-6,o),
(44.167,-5.667,o),
(58.5,-5,cs),
(72.833,-4.333,o),
(85.333,-4,o),
(96,-4,cs),
(121.333,-4,o),
(142.167,-4.333,o),
(158.5,-5,cs),
(174.833,-5.667,o),
(190.333,-6,o),
(205,-6,cs),
(213,-6,o),
(219.833,-5,o),
(225.5,-3,cs),
(231.167,-1,o),
(234,1.667,o),
(234,5,cs),
(234,9,o),
(230.833,12.667,o),
(224.5,16,cs),
(218.167,19.333,o),
(207.333,21,o),
(192,21,cs),
(131,21,l),
(131,185,l),
(184,235,l),
(196.393,212.28,o),
(225.187,151.536,o),
(269.5,72,cs),
(312.468,-5.123,o),
(347.569,-59,o),
(364,-59,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
95 42 1 40
CALL[ ]	/* CallFunction */";
};
width = 510;
}
);
note = k.salt;
},
{
glyphname = s.salt;
kernLeft = s.salt;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(140.333,12.667,o),
(192.333,0,o),
(239,0,cs),
(313.097,0,o),
(411,15.791,o),
(411,102,cs),
(411,190,o),
(343,228.667,o),
(219,246,cs),
(180.997,251.429,o),
(128,268.549,o),
(128,311,cs),
(128,356.333,o),
(157.667,387,o),
(207,387,cs),
(260.333,387,o),
(299.333,359,o),
(314,343,cs),
(325.333,329.667,o),
(332.167,316.667,o),
(334.5,304,cs),
(336.833,291.333,o),
(338,284,o),
(338,282,cs),
(338,271.773,o),
(349.263,253,o),
(380,253,cs),
(408,253,o),
(420,272.333,o),
(420,283,cs),
(420,290.333,o),
(420.167,307.833,o),
(420.5,335.5,cs),
(420.833,363.167,o),
(421,397,o),
(421,437,cs),
(421,455.667,o),
(415,473,o),
(375,473,cs),
(344.333,473,o),
(338,454,o),
(338,430,cs),
(338,418,o),
(338.667,405.333,o),
(340,388,c),
(331.588,416.039,o),
(289.816,465,o),
(210,465,cs),
(123.13,465,o),
(34,409.346,o),
(34,309,cs),
(34,221.902,o),
(103.945,189.401,o),
(141,178,cs),
(217.553,155.034,o),
(317,157.783,o),
(317,110,cs),
(317,78.12,o),
(235.992,75,o),
(211,75,cs),
(186.582,75,o),
(140.211,83.184,o),
(135,91,c),
(131.667,94.333,o),
(127.833,102.167,o),
(123.5,114.5,cs),
(119.167,126.833,o),
(114,138.667,o),
(108,150,cs),
(104,156.667,o),
(93.333,175,o),
(68,175,cs),
(53.333,175,o),
(38,165.333,o),
(38,148,cs),
(38,134,o),
(38.833,120.167,o),
(40.5,106.5,cs),
(42.167,92.833,o),
(43,79.667,o),
(43,67,cs),
(43,57.667,o),
(42.5,48.5,o),
(41.5,39.5,cs),
(40.5,30.5,o),
(40,22.667,o),
(40,16,cs),
(40,1.333,o),
(55.667,-7,o),
(77,-7,cs),
(115.298,-7,o),
(117.645,7.156,o),
(123,50,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
58 4 1 40
CALL[ ]	/* CallFunction */";
};
width = 458;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(123.397,15.833,o),
(176.989,0,o),
(212,0,cs),
(281.751,0,o),
(393,22.853,o),
(393,102,cs),
(393,181.754,o),
(318.411,212.472,o),
(222,229,cs),
(177.273,236.893,o),
(110,246.802,o),
(110,311,cs),
(110,367,o),
(148.667,405,o),
(210,405,cs),
(263.333,405,o),
(300.333,379.667,o),
(319,353,cs),
(328.333,338.333,o),
(334,324.333,o),
(336,311,cs),
(338,297.667,o),
(339.667,288,o),
(341,282,c),
(341,273.825,o),
(345.852,255,o),
(373,255,cs),
(394.333,255,o),
(402,272.333,o),
(402,283,cs),
(402,290.333,o),
(402.167,307.833,o),
(402.5,335.5,cs),
(402.833,363.167,o),
(403,397,o),
(403,437,cs),
(403,451.667,o),
(401,469,o),
(369,469,cs),
(346.333,469,o),
(341,454,o),
(341,430,cs),
(341,418,o),
(341.667,405.333,o),
(343,388,c),
(334.588,416.039,o),
(292.816,465,o),
(213,465,cs),
(126.13,465,o),
(37,409.346,o),
(37,309,cs),
(37,221.902,o),
(106.945,189.401,o),
(144,178,cs),
(210.352,158.094,o),
(320,160.236,o),
(320,101,cs),
(320,90.333,o),
(310.167,80.5,o),
(290.5,71.5,cs),
(270.833,62.5,o),
(244,58,o),
(210,58,cs),
(170.133,58,o),
(121.63,73.924,o),
(116,88,cs),
(111.333,101.333,o),
(108,111.667,o),
(106,119,cs),
(104,126.333,o),
(101.333,133.667,o),
(98,141,cs),
(91.333,156.333,o),
(85.833,165.833,o),
(81.5,169.5,cs),
(77.167,173.167,o),
(71.333,175,o),
(64,175,cs),
(53.333,175,o),
(41,165.333,o),
(41,148,cs),
(41,134,o),
(41.833,120.167,o),
(43.5,106.5,cs),
(45.167,92.833,o),
(46,79.667,o),
(46,67,cs),
(46,57.667,o),
(45.5,48.5,o),
(44.5,39.5,cs),
(43.5,30.5,o),
(43,22.667,o),
(43,16,cs),
(43,1.333,o),
(62,-7,o),
(70,-7,cs),
(100.667,-7,o),
(102.333,7.333,o),
(105,50,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
54 2 1 40
CALL[ ]	/* CallFunction */";
};
width = 441;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(66,-7,o),
(70.667,-2.833,o),
(74,5.5,cs),
(77.333,13.833,o),
(79.333,28.667,o),
(80,50,c),
(102.177,16.735,o),
(161.377,0,o),
(205,0,cs),
(274.815,0,o),
(368,36.901,o),
(368,102,cs),
(368,173.39,o),
(273.768,188.607,o),
(227,199,cs),
(170.103,209.837,o),
(85,216.956,o),
(85,311,cs),
(85,385.667,o),
(135,435,o),
(215,435,cs),
(267.667,435,o),
(304.667,413,o),
(326,369,cs),
(343.322,334.357,o),
(342.456,296.174,o),
(346,282,cs),
(347.333,275.333,o),
(349.667,259,o),
(363,259,cs),
(373.667,259,o),
(377,272.333,o),
(377,283,cs),
(377,290.333,o),
(377.167,307.833,o),
(377.5,335.5,cs),
(377.833,363.167,o),
(378,397,o),
(378,437,cs),
(378,451.667,o),
(372,463,o),
(360,463,cs),
(354.667,463,o),
(351,460.5,o),
(349,455.5,cs),
(347,450.5,o),
(346,442,o),
(346,430,cs),
(346,418,o),
(346.667,405.333,o),
(348,388,c),
(339.588,416.039,o),
(297.816,465,o),
(218,465,cs),
(131.13,465,o),
(42,409.346,o),
(42,309,cs),
(42,221.902,o),
(111.945,189.401,o),
(149,178,cs),
(215.352,158.094,o),
(325,160.236,o),
(325,101,cs),
(325,58.333,o),
(276,30,o),
(208,30,cs),
(154.667,30,o),
(109.667,48,o),
(91,88,cs),
(84.333,102.667,o),
(82.333,113,o),
(77,141,cs),
(74.333,155.667,o),
(71.833,165,o),
(69.5,169,cs),
(67.167,173,o),
(63.667,175,o),
(59,175,cs),
(48.333,175,o),
(46,165.333,o),
(46,148,cs),
(46,134,o),
(46.833,120.167,o),
(48.5,106.5,cs),
(50.167,92.833,o),
(51,79.667,o),
(51,67,cs),
(51,57.667,o),
(50.5,48.5,o),
(49.5,39.5,cs),
(48.5,30.5,o),
(48,22.667,o),
(48,16,cs),
(48,0.667,o),
(52,-7,o),
(60,-7,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
40 2 1 40
CALL[ ]	/* CallFunction */";
};
width = 417;
}
);
note = s.salt;
},
{
glyphname = c_h;
kernLeft = c;
kernRight = c_h;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(905.657,343.747,o),
(867.852,428,o),
(732,428,cs),
(680,428,o),
(640.667,417.667,o),
(610,375,c),
(610,666,ls),
(610,689.329,o),
(583.807,767,o),
(481,767,cs),
(399.667,767,o),
(355,728.333,o),
(355,615,cs),
(355,547,o),
(369.333,482,o),
(380,442,cs),
(381.333,436.667,o),
(382.833,431.667,o),
(384.5,427,cs),
(386.167,422.333,o),
(387,419.667,o),
(387,419,c),
(353.667,468.333,o),
(307.667,482,o),
(261,482,cs),
(123.6,482,o),
(26,366.658,o),
(26,226,cs),
(26,96.066,o),
(110.843,-6,o),
(248,-6,cs),
(355.477,-6,o),
(420.947,54.304,o),
(448,103,cs),
(452,109.667,o),
(457,118.333,o),
(457,129,cs),
(457,132.333,o),
(455.167,137.667,o),
(451.5,145,cs),
(447.833,152.333,o),
(438.667,156,o),
(424,156,cs),
(406.667,156,o),
(394.167,152.167,o),
(386.5,144.5,cs),
(378.833,136.833,o),
(374.333,131.333,o),
(373,128,cs),
(364.838,107.594,o),
(332.705,74,o),
(260,74,cs),
(161.333,74,o),
(122,133,o),
(122,225,cs),
(122,331.667,o),
(175.667,404,o),
(269,404,cs),
(348.721,404,o),
(364.593,350.222,o),
(375,319,cs),
(385.667,283,o),
(408.333,280,o),
(427,280,cs),
(470.318,280,o),
(475,307.074,o),
(475,322,cs),
(475,371.526,o),
(445,515.071,o),
(445,609,cs),
(445,673.683,o),
(460.713,689,o),
(481,689,cs),
(489,689,o),
(497.333,685.667,o),
(506,679,cs),
(514.667,672.333,o),
(519,657.333,o),
(519,634,cs),
(519,598.032,o),
(520,522.033,o),
(520,406,cs),
(520,360.252,o),
(520.066,259.458,o),
(513,104,cs),
(511.667,73.333,o),
(505.667,68,o),
(487,64,cs),
(433.304,53.261,o),
(423,46.166,o),
(423,24,cs),
(423,2.667,o),
(433.667,0,o),
(455,0,cs),
(465,0,o),
(476.667,0.5,o),
(490,1.5,cs),
(503.333,2.5,o),
(517.333,3,o),
(532,3,cs),
(547.333,3,o),
(565.667,2.5,o),
(587,1.5,cs),
(608.333,0.5,o),
(628.667,0,o),
(648,0,cs),
(665.333,0,o),
(685,8.667,o),
(685,30,cs),
(685,56.509,o),
(652.291,64,o),
(626,64,cs),
(604,64,l),
(604,193,ls),
(604,265.602,o),
(630.228,351,o),
(729,351,cs),
(797.382,351,o),
(813.819,308.722,o),
(819,288,cs),
(823.793,259.239,o),
(825,192.26,o),
(825,137,cs),
(825,116.881,o),
(825.367,30.301,o),
(822,0,cs),
(819.333,-25.333,o),
(809.667,-28.333,o),
(787,-31,cs),
(747.515,-36.265,o),
(705,-38.221,o),
(705,-66,cs),
(705,-87.333,o),
(731,-93,o),
(755,-93,cs),
(757.573,-93,o),
(809.032,-90,o),
(840,-90,cs),
(878.423,-90,o),
(932.309,-93,o),
(931,-93,cs),
(956.333,-93,o),
(980,-86.667,o),
(980,-64,cs),
(980,-37.333,o),
(957,-32,o),
(933,-32,cs),
(916,-32,l),
(916,176,ls),
(916,203.378,o),
(917.055,242.452,o),
(912,293,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
163 12 1 40
CALL[ ]	/* CallFunction */";
};
width = 961;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(888.587,339.015,o),
(859.587,428,o),
(732,428,cs),
(672,428,o),
(624,409,o),
(592,357,c),
(592,666,ls),
(592,690.286,o),
(581.471,767,o),
(478,767,cs),
(403.333,767,o),
(358,726,o),
(358,614,cs),
(358,546,o),
(373.667,479.333,o),
(383,442,cs),
(384.333,435.333,o),
(385.5,430.333,o),
(386.5,427,cs),
(387.5,423.667,o),
(388.333,421.333,o),
(389,420,cs),
(354.333,468,o),
(310.667,482,o),
(264,482,cs),
(127.01,482,o),
(29,367.27,o),
(29,227,cs),
(29,96.466,o),
(115.013,-6,o),
(247,-6,cs),
(343.85,-6,o),
(408.969,49.742,o),
(437,103,cs),
(442.333,112.333,o),
(446,121.333,o),
(446,128,cs),
(446,134.667,o),
(442.667,150,o),
(420,150,cs),
(396,150,o),
(385.667,134.667,o),
(383,128,c),
(366.148,97.666,o),
(337.953,56,o),
(256,56,cs),
(154.667,56,o),
(104,122,o),
(104,226,cs),
(104,340.176,o),
(167.125,422,o),
(270,422,cs),
(356.832,422,o),
(374.34,365.64,o),
(386,319,cs),
(392.667,292.333,o),
(408,286,o),
(424,286,cs),
(453.333,286,o),
(457,306.333,o),
(457,321,cs),
(457,371.912,o),
(427,513.227,o),
(427,610,cs),
(427,703.659,o),
(462.181,707,o),
(477,707,cs),
(498.333,707,o),
(522,698,o),
(522,646,cs),
(522,517,ls),
(522,483.667,o),
(522.333,446.667,o),
(523,406,cs),
(523,332.511,o),
(517.73,130.065,o),
(516,92,cs),
(514.667,61.333,o),
(508.667,54.667,o),
(490,52,cs),
(462,48,o),
(441.333,44,o),
(428,40,cs),
(414.667,36,o),
(408,29,o),
(408,19,cs),
(408,1.667,o),
(426,0,o),
(446,0,cs),
(458.667,0,o),
(472.833,0.5,o),
(488.5,1.5,cs),
(504.167,2.5,o),
(519.667,3,o),
(535,3,cs),
(550.333,3,o),
(568.667,2.5,o),
(590,1.5,cs),
(611.333,0.5,o),
(631.667,0,o),
(651,0,cs),
(661.667,0,o),
(681,6.667,o),
(681,24,cs),
(681,46.667,o),
(650.333,52,o),
(629,52,cs),
(586,52,l),
(586,193,ls),
(586,278.258,o),
(627.261,369,o),
(726,369,cs),
(795.761,369,o),
(818.904,312.768,o),
(822,288,cs),
(826.681,255.232,o),
(828,180.522,o),
(828,132,cs),
(828,124.698,o),
(828.461,31.146,o),
(825,0,cs),
(822.333,-24,o),
(814,-28.333,o),
(790,-31,cs),
(757.595,-33.493,o),
(715,-37.216,o),
(715,-60,cs),
(715,-76,o),
(734.333,-81,o),
(757,-81,cs),
(765.667,-81,o),
(778.667,-80.5,o),
(796,-79.5,cs),
(813.333,-78.5,o),
(829,-78,o),
(843,-78,cs),
(873.254,-78,o),
(912.491,-81,o),
(935,-81,cs),
(957.667,-81,o),
(976,-76,o),
(976,-60,cs),
(976,-36.52,o),
(942.182,-32,o),
(912,-32,cs),
(898,-32,l),
(898,176,ls),
(898,218.667,o),
(898,262.333,o),
(894,293,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
155 12 1 40
CALL[ ]	/* CallFunction */";
};
width = 957;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(769.333,-61,o),
(782.5,-60.5,o),
(799.5,-59.5,cs),
(816.5,-58.5,o),
(832.333,-58,o),
(847,-58,cs),
(861,-58,o),
(877.5,-58.5,o),
(896.5,-59.5,cs),
(915.5,-60.5,o),
(930.333,-61,o),
(941,-61,cs),
(960.333,-61,o),
(970,-57.333,o),
(970,-50,cs),
(970,-36.667,o),
(942.667,-32,o),
(916,-32,cs),
(872,-32,l),
(872,176,ls),
(872,228,o),
(872,258.333,o),
(868,293,cs),
(862.752,340.235,o),
(842.936,428,o),
(732,428,cs),
(660,428,o),
(600.667,391,o),
(566,327,c),
(566,666,ls),
(566,692.915,o),
(560.45,767,o),
(474,767,cs),
(406,767,o),
(362,722.333,o),
(362,613,cs),
(362,552.401,o),
(378.736,475.055,o),
(387,442,cs),
(388.333,436,o),
(389.167,431.333,o),
(389.5,428,cs),
(389.833,424.667,o),
(390.667,422,o),
(392,420,cs),
(353.333,468,o),
(314.667,482,o),
(268,482,cs),
(130.987,482,o),
(33,366.722,o),
(33,228,cs),
(33,94.778,o),
(120.184,-6,o),
(246,-6,cs),
(341.176,-6,o),
(396.015,53.03,o),
(421,103,cs),
(426.333,113.667,o),
(430,123,o),
(430,127,cs),
(430,131,o),
(427,140,o),
(415,140,cs),
(405.667,140,o),
(399.667,134.667,o),
(397,128,c),
(371.313,79.479,o),
(338.158,26,o),
(251,26,cs),
(144.333,26,o),
(78,103,o),
(78,227,cs),
(78,358.051,o),
(153.053,452,o),
(271,452,cs),
(374.427,452,o),
(392.602,377.785,o),
(401,319,cs),
(402.333,312.333,o),
(405.333,296,o),
(420,296,cs),
(432,296,o),
(432,306.667,o),
(432,320,cs),
(432,371.357,o),
(401,516.215,o),
(401,612,cs),
(401,717.225,o),
(441.995,737,o),
(472,737,cs),
(502.667,737,o),
(526,722,o),
(526,666,cs),
(526,499.9,o),
(527,453.634,o),
(527,406,cs),
(527,280.793,o),
(523.825,134.143,o),
(521,72,cs),
(519.667,41.333,o),
(512.667,34.667,o),
(494,32,cs),
(468.667,29.333,o),
(449,26.667,o),
(435,24,cs),
(421,21.333,o),
(414,16.667,o),
(414,10,cs),
(414,5.333,o),
(417.167,2.5,o),
(423.5,1.5,cs),
(429.833,0.5,o),
(437.667,0,o),
(447,0,cs),
(463,0,o),
(478.5,0.5,o),
(493.5,1.5,cs),
(508.5,2.5,o),
(523.667,3,o),
(539,3,cs),
(554.333,3,o),
(572.667,2.5,o),
(594,1.5,cs),
(615.333,0.5,o),
(635.667,0,o),
(655,0,cs),
(665.667,0,o),
(675,6,o),
(675,14,cs),
(675,26,o),
(654.333,32,o),
(633,32,cs),
(560,32,l),
(560,193,ls),
(560,301.03,o),
(620.682,399,o),
(722,399,cs),
(808.081,399,o),
(819.774,331.584,o),
(826,288,cs),
(832.032,233.714,o),
(832,120.226,o),
(832,123,cs),
(832,127.222,o),
(832.451,31.057,o),
(829,0,cs),
(826.333,-22.667,o),
(820.667,-28.333,o),
(794,-31,cs),
(768.205,-33.345,o),
(729,-36.506,o),
(729,-50,cs),
(729,-57.333,o),
(739.333,-61,o),
(760,-61,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
153 9 1 40
CALL[ ]	/* CallFunction */";
};
width = 952;
}
);
note = c_h;
},
{
glyphname = c_k;
kernLeft = c;
kernRight = c_k;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(355.477,-6,o),
(420.947,54.304,o),
(448,103,cs),
(452,109.667,o),
(457,118.333,o),
(457,129,cs),
(457,138.501,o),
(451.981,156,o),
(424,156,cs),
(406.667,156,o),
(394.167,152.167,o),
(386.5,144.5,cs),
(378.833,136.833,o),
(374.333,131.333,o),
(373,128,cs),
(364.838,107.594,o),
(332.705,74,o),
(260,74,cs),
(161.333,74,o),
(122,133,o),
(122,225,cs),
(122,331.667,o),
(175.667,404,o),
(269,404,cs),
(348.721,404,o),
(364.593,350.222,o),
(375,319,cs),
(385.667,285.667,o),
(404.333,280,o),
(427,280,cs),
(470.318,280,o),
(475,307.074,o),
(475,322,cs),
(475,371.526,o),
(445,515.071,o),
(445,609,cs),
(445,673.355,o),
(459.569,689,o),
(482,689,cs),
(500.667,689,o),
(517.667,678.333,o),
(519,633,cs),
(520.333,566.333,o),
(521,521.167,o),
(521,480.5,cs),
(521,443.433,o),
(521,398.849,o),
(521,356,cs),
(521,259.316,o),
(517,202.41,o),
(517,87,cs),
(517,67,o),
(500,60.333,o),
(472,55,cs),
(461.333,52.333,o),
(452,49.333,o),
(452,24,cs),
(452,-2.667,o),
(479.667,-6,o),
(501,-6,cs),
(521.564,-6,o),
(545.284,-4,o),
(570,-4,cs),
(607.799,-4,o),
(643.684,-6,o),
(667,-6,cs),
(677.667,-6,o),
(693,-0.667,o),
(693,22,cs),
(693,43.333,o),
(683,53,o),
(651,53,cs),
(610,53,l),
(610,185,l),
(629,205,l),
(642.291,178.417,o),
(671.805,121.33,o),
(708.5,53.5,cs),
(744.293,-12.663,o),
(774.516,-58,o),
(792,-58,cs),
(921.138,-58,o),
(966,-59.981,o),
(966,-29,cs),
(966,-0.812,o),
(917.709,3,o),
(886,3,cs),
(872.667,3.667,o),
(861.833,4.333,o),
(853.5,5,cs),
(845.167,5.667,o),
(840,7,o),
(838,9,c),
(832.663,11.669,o),
(738.29,142.519,o),
(690,256,c),
(728.667,292,o),
(761,323.333,o),
(789,354,cs),
(795,361.333,o),
(805.333,365.667,o),
(820,367,cs),
(900.324,375.309,o),
(901,383.391,o),
(901,400,cs),
(901,431.504,o),
(860.254,432,o),
(740,432,cs),
(689.333,432,o),
(658,419.667,o),
(658,393,cs),
(658,382.333,o),
(667.333,374,o),
(674,374,cs),
(681,374,ls),
(684.333,374,o),
(687.5,373.667,o),
(690.5,373,cs),
(693.5,372.333,o),
(694.667,371.333,o),
(694,370,cs),
(690.296,358.887,o),
(654.683,326.683,o),
(610,282,c),
(610,666,ls),
(610,682,o),
(600,767,o),
(476,767,cs),
(401.333,767,o),
(355,727.333,o),
(355,614,cs),
(355,543.333,o),
(369.667,483,o),
(379,447,cs),
(381,439,o),
(382.667,432.833,o),
(384,428.5,cs),
(385.333,424.167,o),
(386,421.667,o),
(386,421,c),
(352.667,467.667,o),
(307.667,482,o),
(261,482,cs),
(123.6,482,o),
(26,366.658,o),
(26,226,cs),
(26,96.066,o),
(110.843,-6,o),
(248,-6,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
75 21 1 40
CALL[ ]	/* CallFunction */";
};
width = 943;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(524,291.525,o),
(522.575,244.686,o),
(521.5,213.5,cs),
(520.382,181.069,o),
(519,146.442,o),
(519,95,cs),
(519,56.333,o),
(508.333,49.667,o),
(475,43,cs),
(452.333,39,o),
(441,39.667,o),
(441,17,cs),
(441,-1.667,o),
(461.333,-6,o),
(484,-6,cs),
(493.333,-6,o),
(505.167,-5.667,o),
(519.5,-5,cs),
(533.833,-4.333,o),
(546.333,-4,o),
(557,-4,cs),
(588.117,-4,o),
(629.938,-6,o),
(654,-6,cs),
(670,-6,o),
(683,-2.667,o),
(683,16,cs),
(683,32,o),
(671.667,41,o),
(641,41,cs),
(592,41,l),
(592,185,l),
(625,216,l),
(637.214,193.607,o),
(664.956,136.607,o),
(706,62.5,cs),
(733.62,12.631,o),
(776.071,-59,o),
(795,-59,cs),
(904.628,-59,o),
(958,-58.703,o),
(958,-34,cs),
(958,-12.676,o),
(922.81,-9,o),
(892,-9,cs),
(837.425,-9,o),
(835.432,-7.432,o),
(826,2,cs),
(791.807,33.344,o),
(717.03,176.723,o),
(681,268,c),
(697.415,282.226,o),
(713.392,298.469,o),
(725.5,310,cs),
(740.752,324.526,o),
(760.83,342.928,o),
(785,366,cs),
(792.333,373.333,o),
(802.667,377.667,o),
(816,379,cs),
(875.246,383.557,o),
(897,386.736,o),
(897,409,cs),
(897,419,o),
(889.5,425.167,o),
(874.5,427.5,cs),
(859.5,429.833,o),
(835.333,431,o),
(802,431,cs),
(743,431,ls),
(718.333,431,o),
(698.333,429.833,o),
(683,427.5,cs),
(667.667,425.167,o),
(660,418.333,o),
(660,407,cs),
(660,391,o),
(676.333,384,o),
(691,384,cs),
(695,384,ls),
(701,384,o),
(704,380.667,o),
(704,374,cs),
(704,368.667,o),
(695.167,358,o),
(677.5,342,cs),
(659.833,326,o),
(631.333,300,o),
(592,264,c),
(592,666,ls),
(592,691.853,o),
(576.574,767,o),
(475,767,cs),
(404.333,767,o),
(358,726,o),
(358,614,cs),
(358,546,o),
(373.667,479.333,o),
(383,442,cs),
(384.333,435.333,o),
(385.5,430.333,o),
(386.5,427,cs),
(387.5,423.667,o),
(388.333,421.333,o),
(389,420,cs),
(354.333,468,o),
(310.667,482,o),
(264,482,cs),
(127.01,482,o),
(29,367.27,o),
(29,227,cs),
(29,96.466,o),
(115.013,-6,o),
(247,-6,cs),
(343.85,-6,o),
(408.969,49.742,o),
(437,103,cs),
(442.333,112.333,o),
(446,121.333,o),
(446,128,cs),
(446,134.667,o),
(442.667,150,o),
(420,150,cs),
(396,150,o),
(385.667,134.667,o),
(383,128,c),
(366.148,97.666,o),
(337.953,56,o),
(256,56,cs),
(154.667,56,o),
(104,122,o),
(104,226,cs),
(104,340.176,o),
(167.125,422,o),
(270,422,cs),
(356.832,422,o),
(374.34,365.64,o),
(386,319,cs),
(392.667,292.333,o),
(408,286,o),
(424,286,cs),
(453.333,286,o),
(457,306.333,o),
(457,321,cs),
(457,371.912,o),
(427,513.227,o),
(427,610,cs),
(427,700.28,o),
(461.377,707,o),
(477,707,cs),
(498.333,707,o),
(520.667,695.333,o),
(522,646,cs),
(524.438,543.61,o),
(524,457.562,o),
(524,370,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
131 77 1 40
CALL[ ]	/* CallFunction */";
};
width = 944;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(851.667,-59,o),
(889.5,-58.333,o),
(912.5,-57,cs),
(935.5,-55.667,o),
(947,-50.667,o),
(947,-42,cs),
(947,-33.333,o),
(931.667,-29,o),
(901,-29,cs),
(873,-29,o),
(852.333,-28.5,o),
(839,-27.5,cs),
(825.667,-26.5,o),
(817,-23.333,o),
(813,-18,cs),
(742.679,67.704,o),
(666.779,232.662,o),
(655,268,c),
(677.198,287.238,o),
(708.623,318.105,o),
(780,386,cs),
(787.333,393.333,o),
(797.667,397.667,o),
(811,399,cs),
(839,401.667,o),
(859.5,404,o),
(872.5,406,cs),
(885.5,408,o),
(892,411.667,o),
(892,417,cs),
(892,423,o),
(882.333,426.833,o),
(863,428.5,cs),
(843.667,430.167,o),
(813.333,431,o),
(772,431,cs),
(730.667,431,o),
(702.167,430.167,o),
(686.5,428.5,cs),
(670.833,426.833,o),
(663,422.667,o),
(663,416,cs),
(663,413.333,o),
(664.333,410.833,o),
(667,408.5,cs),
(669.667,406.167,o),
(675,404.667,o),
(683,404,cs),
(717,402,ls),
(723.667,402,o),
(729,399,o),
(729,395,cs),
(729,380.046,o),
(646.042,302.925,o),
(566,234,c),
(566,666,ls),
(566,692.915,o),
(560.45,767,o),
(474,767,cs),
(406,767,o),
(362,722,o),
(362,614,cs),
(362,550.59,o),
(378.294,476.824,o),
(387,442,cs),
(388.333,437.333,o),
(389,433,o),
(389,429,cs),
(389,425,o),
(389.667,421.667,o),
(391,419,c),
(352.333,468.333,o),
(314.667,482,o),
(268,482,cs),
(130.987,482,o),
(33,366.722,o),
(33,228,cs),
(33,94.778,o),
(120.184,-6,o),
(246,-6,cs),
(341.176,-6,o),
(396.015,53.03,o),
(421,103,cs),
(426.333,113.667,o),
(430,123,o),
(430,127,cs),
(430,131,o),
(427,140,o),
(415,140,cs),
(405.667,140,o),
(399.667,134.667,o),
(397,128,c),
(371.313,79.479,o),
(338.158,26,o),
(251,26,cs),
(144.333,26,o),
(78,103,o),
(78,227,cs),
(78,358.051,o),
(153.053,452,o),
(271,452,cs),
(374.427,452,o),
(392.602,377.785,o),
(401,319,cs),
(402.333,312.333,o),
(405.333,296,o),
(420,296,cs),
(432,296,o),
(432,306.667,o),
(432,320,cs),
(432,371.357,o),
(401,516.215,o),
(401,612,cs),
(401,728.911,o),
(452.531,737,o),
(473,737,cs),
(503.667,737,o),
(524.667,723,o),
(526,667,cs),
(526,519.687,o),
(528,434.957,o),
(528,393,cs),
(528,329,o),
(525.667,217.667,o),
(523,75,cs),
(523,33.129,o),
(518.157,30.831,o),
(479,23,cs),
(457.667,19.667,o),
(443.333,17,o),
(436,15,cs),
(428.667,13,o),
(425,10,o),
(425,6,cs),
(425,-2,o),
(436.667,-6,o),
(460,-6,cs),
(468.667,-6,o),
(479.5,-5.667,o),
(492.5,-5,cs),
(505.5,-4.333,o),
(520.667,-4,o),
(538,-4,cs),
(572.672,-4,o),
(610.494,-6,o),
(635,-6,cs),
(657.667,-6,o),
(669,-2,o),
(669,6,cs),
(669,9.333,o),
(665.833,12.667,o),
(659.5,16,cs),
(653.167,19.333,o),
(642.333,21,o),
(627,21,cs),
(566,21,l),
(566,185,l),
(619,235,l),
(631.349,212.36,o),
(661.575,151.993,o),
(705,72,cs),
(746.823,-5.043,o),
(783.003,-59,o),
(799,-59,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
156 40 1 40
CALL[ ]	/* CallFunction */";
};
width = 945;
}
);
note = c_k;
},
{
glyphname = c_p;
kernLeft = c;
kernRight = c_p;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(355.477,-6,o),
(420.947,54.304,o),
(448,103,cs),
(452,109.667,o),
(457,118.333,o),
(457,129,cs),
(457,135.667,o),
(452,156,o),
(424,156,cs),
(406.667,156,o),
(394.167,152.167,o),
(386.5,144.5,cs),
(378.833,136.833,o),
(374.333,131.333,o),
(373,128,cs),
(366.03,116.383,o),
(345.691,74,o),
(260,74,cs),
(161.333,74,o),
(122,132,o),
(122,224,cs),
(122,333.111,o),
(182.556,404,o),
(261,404,cs),
(335.363,404,o),
(362.434,344.132,o),
(375,319,cs),
(387,292.333,o),
(394.333,280,o),
(425,280,cs),
(465.561,280,o),
(475,304.73,o),
(475,320,cs),
(475,361.201,o),
(445,469.018,o),
(445,542,cs),
(445,603.38,o),
(470.225,614,o),
(486,614,cs),
(493.333,614,o),
(500.833,610,o),
(508.5,602,cs),
(516.167,594,o),
(520,579.333,o),
(520,558,cs),
(520,500.265,o),
(521,419.598,o),
(521,316,cs),
(521,215.076,o),
(522,152.741,o),
(522,129,cs),
(522,106.688,o),
(522.184,22.242,o),
(519,-86,cs),
(517.667,-122,o),
(506.333,-143.667,o),
(457,-145,cs),
(423.667,-146.333,o),
(403,-153,o),
(403,-177,cs),
(403,-198.333,o),
(415.667,-202,o),
(429,-202,cs),
(654,-202,ls),
(667.333,-202,o),
(683,-194.667,o),
(683,-176,cs),
(683,-152,o),
(657.333,-142,o),
(624,-142,cs),
(610,-142,l),
(610,20,l),
(624.667,2.667,o),
(670.667,-11,o),
(732,-11,cs),
(852.474,-11,o),
(964,56.619,o),
(964,225,cs),
(964,333.915,o),
(917.319,471,o),
(745,471,cs),
(675.667,471,o),
(640.667,450.667,o),
(610,428,c),
(610,567,ls),
(610,630.817,o),
(602.708,692,o),
(485,692,cs),
(406.333,692,o),
(355,653.667,o),
(355,559,cs),
(355,529.667,o),
(358.5,503.833,o),
(365.5,481.5,cs),
(372.5,459.167,o),
(376.333,444,o),
(377,436,c),
(341,468,o),
(308.333,482,o),
(259,482,cs),
(125.234,482,o),
(26,366.716,o),
(26,226,cs),
(26,96.066,o),
(110.843,-6,o),
(248,-6,cs)
);
},
{
closed = 1;
nodes = (
(655.667,67,o),
(609,128.333,o),
(609,223,cs),
(609,319.472,o),
(657.315,392,o),
(733,392,cs),
(813,392,o),
(869,322,o),
(869,222,cs),
(869,131.585,o),
(812.403,67,o),
(733,67,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
133 124 48 18 2 40
CALL[ ]	/* CallFunction */";
};
width = 992;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(591,335.851,o),
(654.697,410,o),
(736,410,cs),
(824.467,410,o),
(872,321.026,o),
(872,227,cs),
(872,112.717,o),
(801.746,49,o),
(721,49,cs),
(633.808,49,o),
(591,121.524,o),
(591,219,cs)
);
},
{
closed = 1;
nodes = (
(525,114.838,o),
(525.18,18.927,o),
(522,-86,cs),
(522,-146.304,o),
(514.169,-150.841,o),
(460,-156,cs),
(444.977,-158.146,o),
(409,-156.307,o),
(409,-182,cs),
(409,-199.333,o),
(424,-202,o),
(432,-202,cs),
(657,-202,ls),
(669,-202,o),
(682,-195.667,o),
(682,-181,cs),
(682,-162.333,o),
(657.667,-154,o),
(627,-154,cs),
(592,-154,l),
(592,38,l),
(606.667,14,o),
(655.667,-11,o),
(721,-11,cs),
(824.212,-11,o),
(946,50.938,o),
(946,229,cs),
(946,336.132,o),
(903.071,471,o),
(744,471,cs),
(668,471,o),
(624,439.667,o),
(592,397,c),
(592,591,ls),
(592,613.728,o),
(581.362,692,o),
(481,692,cs),
(406.333,692,o),
(358,648,o),
(358,560,cs),
(358,503.547,o),
(380,450.494,o),
(380,436,c),
(341.333,470.667,o),
(310.333,482,o),
(265,482,cs),
(127.408,482,o),
(29,367.875,o),
(29,227,cs),
(29,96.466,o),
(115.013,-6,o),
(247,-6,cs),
(343.85,-6,o),
(408.969,49.742,o),
(437,103,cs),
(442.333,112.333,o),
(446,121.333,o),
(446,128,cs),
(446,134.667,o),
(442.667,150,o),
(420,150,cs),
(396,150,o),
(385.667,134.667,o),
(383,128,c),
(366.148,97.666,o),
(337.953,56,o),
(256,56,cs),
(154.667,56,o),
(104,121,o),
(104,225,cs),
(104,340.194,o),
(167.721,422,o),
(264,422,cs),
(348.534,422,o),
(371.54,359.487,o),
(386,319,cs),
(392.667,299,o),
(400,286,o),
(424,286,cs),
(453.333,286,o),
(457,306.667,o),
(457,320,cs),
(457,370,o),
(427,460.81,o),
(427,540,cs),
(427,616.917,o),
(457.077,632,o),
(480,632,cs),
(497.333,632,o),
(522,621.667,o),
(522,571,cs),
(522,517,ls),
(522,504.333,o),
(522.262,460.536,o),
(523.5,364,cs),
(524.573,280.269,o),
(525,210.607,o),
(525,155,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
129 99 14 4 2 40
CALL[ ]	/* CallFunction */";
};
width = 977;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(661,-202,ls),
(671.667,-202,o),
(681,-196.667,o),
(681,-190,cs),
(681,-179.333,o),
(664.333,-174,o),
(631,-174,cs),
(566,-174,l),
(566,68,l),
(581.925,33.496,o),
(633.513,-11,o),
(705,-11,cs),
(785.342,-11,o),
(920,45.806,o),
(920,236,cs),
(920,335.48,o),
(881.779,471,o),
(743,471,cs),
(659,471,o),
(600.667,422,o),
(566,346,c),
(566,591,ls),
(566,661.667,o),
(528.333,692,o),
(475,692,cs),
(407,692,o),
(362,640.667,o),
(362,562,cs),
(362,506.26,o),
(384,448.391,o),
(384,436,c),
(344,473.333,o),
(313,482,o),
(273,482,cs),
(129.62,482,o),
(33,367.431,o),
(33,228,cs),
(33,96,o),
(119.667,-6,o),
(245,-6,cs),
(340.422,-6,o),
(395.501,52.001,o),
(421,103,cs),
(426.333,113.667,o),
(430,123,o),
(430,127,cs),
(430,131,o),
(427,140,o),
(415,140,cs),
(405.667,140,o),
(399.667,134.667,o),
(397,128,c),
(371.313,79.479,o),
(338.158,26,o),
(251,26,cs),
(144.333,26,o),
(78,103,o),
(78,227,cs),
(78,358.051,o),
(153.053,452,o),
(271,452,cs),
(374.427,452,o),
(392.602,377.785,o),
(401,319,cs),
(402.333,312.333,o),
(405.333,296,o),
(420,296,cs),
(432,296,o),
(432,306.667,o),
(432,320,cs),
(432,370.819,o),
(401,440.8,o),
(401,537,cs),
(401,642.225,o),
(441.995,662,o),
(472,662,cs),
(501.333,662,o),
(526,646.667,o),
(526,592,cs),
(526,559.813,o),
(526.278,506.117,o),
(527.5,392.5,cs),
(528.593,290.837,o),
(529,211.457,o),
(529,135,cs),
(529,41.1,o),
(526,7.884,o),
(526,-86,cs),
(526,-166.256,o),
(518.364,-169.823,o),
(464,-175,cs),
(446.667,-176.333,o),
(434.667,-178,o),
(428,-180,cs),
(421.333,-182,o),
(418,-185.667,o),
(418,-191,cs),
(418,-201.667,o),
(429.333,-202,o),
(436,-202,cs)
);
},
{
closed = 1;
nodes = (
(600.392,19,o),
(565,111.688,o),
(565,212,cs),
(565,370.133,o),
(654.267,440,o),
(740,440,cs),
(852.123,440,o),
(876,316.676,o),
(876,235,cs),
(876,73.992,o),
(782.585,19,o),
(704,19,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
139 129 120 24 2 40
CALL[ ]	/* CallFunction */";
};
width = 955;
}
);
note = c_p;
},
{
glyphname = c_t;
kernLeft = c;
kernRight = c_t;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(355.477,-6,o),
(420.947,54.304,o),
(448,103,cs),
(452,109.667,o),
(457,118.333,o),
(457,129,cs),
(457,138.944,o),
(447.684,159,o),
(420,159,cs),
(388.706,159,o),
(371.776,135.553,o),
(368,128,cs),
(360.619,109.547,o),
(329.894,74,o),
(260,74,cs),
(161.333,74,o),
(122,132,o),
(122,224,cs),
(122,331.506,o),
(180.354,404,o),
(259,404,cs),
(329.295,404,o),
(362.261,347.662,o),
(375,319,cs),
(387,291,o),
(396.333,280,o),
(427,280,cs),
(464.895,280,o),
(475,303.376,o),
(475,320,cs),
(475,360.007,o),
(445,469.987,o),
(445,541,cs),
(445,603.952,o),
(471.872,614,o),
(484,614,cs),
(498.486,614,o),
(517,608.62,o),
(517,573,cs),
(517,505,o),
(516.667,437.167,o),
(516,369.5,cs),
(515.333,301.833,o),
(515,233.667,o),
(515,165,cs),
(515,133.59,o),
(514.836,72.245,o),
(543,30,cs),
(561,2.667,o),
(593,-11,o),
(639,-11,cs),
(734.307,-11,o),
(769,80.614,o),
(769,117,cs),
(769,131.667,o),
(753.333,153,o),
(732,153,cs),
(695.182,153,o),
(688.146,121.055,o),
(681,102,cs),
(676.096,89.74,o),
(676.61,67,o),
(646,67,cs),
(620.47,67,o),
(608,75.599,o),
(608,152,cs),
(608,404,l),
(630,405.333,o),
(652,406.167,o),
(674,406.5,cs),
(696,406.833,o),
(717,408.667,o),
(737,412,cs),
(749,414.667,o),
(771,423.667,o),
(771,449,cs),
(771,477,o),
(744,488,o),
(728,488,cs),
(714.035,488,o),
(627.492,484,o),
(613,484,c),
(612.333,496,o),
(612,507.667,o),
(612,519,cs),
(612,574,ls),
(612,634.588,o),
(563.859,692,o),
(483,692,cs),
(411.402,692,o),
(355,655.82,o),
(355,559,cs),
(355,529.667,o),
(357.667,506.167,o),
(363,488.5,cs),
(368.333,470.833,o),
(373,453.333,o),
(377,436,c),
(341,468,o),
(308.333,482,o),
(259,482,cs),
(125.234,482,o),
(26,366.716,o),
(26,226,cs),
(26,96.066,o),
(110.843,-6,o),
(248,-6,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
66 20 1 40
CALL[ ]	/* CallFunction */";
};
width = 782;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(518,133.59,o),
(517.836,72.245,o),
(546,30,cs),
(564,2.667,o),
(594.333,-11,o),
(637,-11,cs),
(734.571,-11,o),
(772,80.247,o),
(772,117,cs),
(772,127.667,o),
(765.667,147,o),
(747,147,cs),
(715.375,147,o),
(713.303,124.14,o),
(705,102,cs),
(696.921,80.457,o),
(684.167,49,o),
(644,49,cs),
(597.333,49,o),
(590,84,o),
(590,152,cs),
(590,412,l),
(614,413.333,o),
(638.667,414.167,o),
(664,414.5,cs),
(689.333,414.833,o),
(714,416.667,o),
(738,420,cs),
(750,422.667,o),
(765,430.333,o),
(765,449,cs),
(765,470.333,o),
(745,478,o),
(729,478,cs),
(710.523,478,o),
(617.507,474,o),
(593,474,c),
(593,575,ls),
(593,645.667,o),
(551.667,692,o),
(481,692,cs),
(406.333,692,o),
(358,648,o),
(358,560,cs),
(358,503.547,o),
(380,450.494,o),
(380,436,c),
(341.333,470.667,o),
(310.333,482,o),
(265,482,cs),
(127.408,482,o),
(29,367.875,o),
(29,227,cs),
(29,96.466,o),
(115.013,-6,o),
(247,-6,cs),
(343.85,-6,o),
(408.969,49.742,o),
(437,103,cs),
(442.333,112.333,o),
(446,121.333,o),
(446,128,cs),
(446,134.667,o),
(440.667,152,o),
(418,152,cs),
(394,152,o),
(382.667,134.667,o),
(380,128,c),
(366.183,103.129,o),
(342.34,56,o),
(256,56,cs),
(154.667,56,o),
(104,121,o),
(104,225,cs),
(104,340.194,o),
(167.721,422,o),
(264,422,cs),
(348.534,422,o),
(371.54,359.487,o),
(386,319,cs),
(392.667,299,o),
(400,286,o),
(424,286,cs),
(453.333,286,o),
(457,306.667,o),
(457,320,cs),
(457,370,o),
(427,460.81,o),
(427,540,cs),
(427,616.917,o),
(457.077,632,o),
(480,632,cs),
(497.333,632,o),
(522,621.667,o),
(522,571,cs),
(518,165,l),
(518,165,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
111 71 1 40
CALL[ ]	/* CallFunction */";
};
width = 783;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(735.572,-11,o),
(776,80.146,o),
(776,117,cs),
(776,123.667,o),
(775.667,137,o),
(761,137,cs),
(746.333,137,o),
(745.667,123.333,o),
(739,102,cs),
(728.022,63.577,o),
(698.478,19,o),
(641,19,cs),
(562.773,19,o),
(564,98.109,o),
(564,152,cs),
(564,426,l),
(591.333,427.333,o),
(619.833,428.333,o),
(649.5,429,cs),
(679.167,429.667,o),
(709,431.333,o),
(739,434,cs),
(751,435.333,o),
(756,442.333,o),
(756,449,cs),
(756,457.667,o),
(747.333,462,o),
(730,462,cs),
(710.217,462,o),
(585.921,458,o),
(564,458,c),
(564,476.667,o),
(564.333,494,o),
(565,510,cs),
(565,523.333,o),
(565.167,536.5,o),
(565.5,549.5,cs),
(565.833,562.5,o),
(566,571.667,o),
(566,577,cs),
(566,661,o),
(535.333,692,o),
(478,692,cs),
(400.48,692,o),
(362,633.745,o),
(362,561,cs),
(362,506.272,o),
(384,449.226,o),
(384,436,c),
(344,473.333,o),
(313,482,o),
(273,482,cs),
(129.62,482,o),
(33,367.431,o),
(33,228,cs),
(33,96,o),
(119.667,-6,o),
(245,-6,cs),
(340.422,-6,o),
(395.501,52.001,o),
(421,103,cs),
(426.333,113.667,o),
(430,123,o),
(430,127,cs),
(430,131,o),
(427,140,o),
(415,140,cs),
(405.667,140,o),
(399.667,134.667,o),
(397,128,c),
(371.313,79.479,o),
(338.158,26,o),
(251,26,cs),
(144.333,26,o),
(78,103,o),
(78,227,cs),
(78,358.051,o),
(153.053,452,o),
(271,452,cs),
(374.427,452,o),
(392.602,377.785,o),
(401,319,cs),
(402.333,312.333,o),
(405.333,296,o),
(420,296,cs),
(432,296,o),
(432,306.667,o),
(432,320,cs),
(432,372.125,o),
(401,440.976,o),
(401,538,cs),
(401,644.007,o),
(441.064,662,o),
(475,662,cs),
(512.077,662,o),
(526,645.151,o),
(526,567,cs),
(526,546.905,o),
(524,499.28,o),
(524,424,cs),
(522,165,ls),
(522,133.59,o),
(521.836,72.245,o),
(550,30,cs),
(568,2.667,o),
(596,-11,o),
(634,-11,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
123 80 1 40
CALL[ ]	/* CallFunction */";
};
width = 784;
}
);
note = c_t;
},
{
glyphname = f_b;
kernLeft = f;
kernRight = b;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(430,764.799,o),
(426.022,825,o),
(307,825,cs),
(99.499,825,o),
(76,637.461,o),
(76,491,cs),
(76,488.333,o),
(72,487,o),
(64,487,cs),
(41,487,ls),
(17,487,o),
(-1,478.667,o),
(-1,452,cs),
(-1,425.333,o),
(15.333,411,o),
(38,411,cs),
(64,411,ls),
(74.667,411,o),
(77,403.667,o),
(77,385,cs),
(77,300,ls),
(77,158.307,o),
(76.218,143.613,o),
(72,93,c),
(69.333,77,o),
(63.667,74.667,o),
(53,72,cs),
(25,66.667,o),
(21,58.667,o),
(21,36,cs),
(21,12,o),
(36.333,0,o),
(55,0,cs),
(60.479,0,o),
(112.4,3,o),
(151,3,cs),
(166.333,3,o),
(182.5,2.667,o),
(199.5,2,cs),
(216.5,1.333,o),
(231,1,o),
(243,1,cs),
(277.667,1,o),
(285,17.667,o),
(285,39,cs),
(285,63.667,o),
(275.333,76,o),
(256,76,cs),
(165,76,l),
(165,400,ls),
(165,407.333,o),
(171,411,o),
(183,411,cs),
(198.161,411,o),
(222.403,409,o),
(249,409,cs),
(263.667,409,o),
(288,420.333,o),
(288,447,cs),
(288,479,o),
(264.333,487,o),
(251,487,cs),
(173,487,ls),
(167.667,487,o),
(165,488,o),
(165,490,cs),
(165,586.557,o),
(166.387,751,o),
(287,751,cs),
(313.667,751,o),
(336.667,734.333,o),
(338,705,cs),
(338,642.211,o),
(339,623.017,o),
(339,526,cs),
(339,388.667,o),
(337.5,280,o),
(334.5,200,cs),
(331.5,120,o),
(330,65.333,o),
(330,36,cs),
(330,1.333,o),
(341.333,-12,o),
(372,-12,cs),
(414.088,-12,o),
(416.75,-0.244,o),
(422,68,c),
(444.227,29.103,o),
(483.831,-9,o),
(559,-9,cs),
(657.638,-9,o),
(780,50.914,o),
(780,220,cs),
(780,323.713,o),
(735.367,458,o),
(605,458,cs),
(529,458,o),
(467.333,414,o),
(430,334,c),
(430,693,l),
(430,693,l)
);
},
{
closed = 1;
nodes = (
(431,276.933,o),
(485.644,379,o),
(573,379,cs),
(635.319,379,o),
(686,334.555,o),
(686,228,cs),
(686,95.789,o),
(609.722,70,o),
(559,70,cs),
(452.333,70,o),
(431,126,o),
(431,206,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
126 116 105 22 2 40
CALL[ ]	/* CallFunction */";
};
width = 808;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(426,766.289,o),
(420.934,825,o),
(310,825,cs),
(112.228,825,o),
(93,636.226,o),
(93,491,cs),
(93,484.333,o),
(91.667,478,o),
(81,478,cs),
(37,478,ls),
(13,478,o),
(-1,472,o),
(-1,452,cs),
(-1,433.333,o),
(11.333,420,o),
(34,420,cs),
(81,420,ls),
(91.667,420,o),
(94,412.667,o),
(94,394,cs),
(94,300,ls),
(94,273.441,o),
(95.448,113.69,o),
(89,75,cs),
(87.667,59,o),
(80,58,o),
(52,54,cs),
(37.427,51.085,o),
(20,55.661,o),
(20,21,cs),
(20,10.333,o),
(35.333,0,o),
(54,0,cs),
(61.333,0,o),
(74.167,0.5,o),
(92.5,1.5,cs),
(110.833,2.5,o),
(129,3,o),
(147,3,cs),
(182.123,3,o),
(225.061,1,o),
(257,1,cs),
(274.333,1,o),
(285.667,3.667,o),
(291,9,cs),
(296.333,14.333,o),
(299,19.333,o),
(299,24,cs),
(299,52,o),
(290,58,o),
(270,58,cs),
(161,58,l),
(161,409,ls),
(161,416.333,o),
(167,420,o),
(179,420,cs),
(194.161,420,o),
(218.403,418,o),
(245,418,cs),
(259.667,418,o),
(280,425.667,o),
(280,447,cs),
(280,471,o),
(260.333,478,o),
(247,478,cs),
(169,478,ls),
(163.667,478,o),
(161,480,o),
(161,484,cs),
(161,537.878,o),
(160.773,599.4,o),
(178,664,cs),
(194.511,725.916,o),
(231.015,769,o),
(297,769,cs),
(333,769,o),
(353.667,743.667,o),
(355,705,cs),
(355,657.672,o),
(356,579.426,o),
(356,526,cs),
(356,388.667,o),
(354.5,280,o),
(351.5,200,cs),
(348.5,120,o),
(347,65.333,o),
(347,36,cs),
(347,1.333,o),
(355,-12,o),
(379,-12,cs),
(410.445,-12,o),
(412.972,2.641,o),
(418,68,c),
(440.227,29.103,o),
(479.831,-9,o),
(555,-9,cs),
(653.638,-9,o),
(776,50.914,o),
(776,220,cs),
(776,323.713,o),
(731.367,458,o),
(601,458,cs),
(525,458,o),
(463.333,414,o),
(426,334,c),
(426,693,l),
(426,693,l)
);
},
{
closed = 1;
nodes = (
(425,299.745,o),
(504.605,397,o),
(592,397,cs),
(637.208,397,o),
(703,348.603,o),
(703,228,cs),
(703,77.728,o),
(609.872,52,o),
(555,52,cs),
(450.955,52,o),
(425,116.042,o),
(425,179,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
132 122 111 22 2 40
CALL[ ]	/* CallFunction */";
};
width = 807;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(407.288,-12,o),
(407.615,10.995,o),
(412,68,c),
(434.227,29.103,o),
(473.831,-9,o),
(549,-9,cs),
(647.638,-9,o),
(770,50.914,o),
(770,220,cs),
(770,323.713,o),
(725.367,458,o),
(595,458,cs),
(519,458,o),
(457.333,414,o),
(420,334,c),
(420,693,ls),
(420,763.7,o),
(417.65,825,o),
(314,825,cs),
(130.78,825,o),
(122.38,636.262,o),
(117,491,cs),
(117,476.333,o),
(115.667,463,o),
(105,463,cs),
(31,463,ls),
(19,463,o),
(10.667,462.5,o),
(6,461.5,cs),
(1.333,460.5,o),
(-1,457.333,o),
(-1,452,cs),
(-1,448,o),
(1,444.167,o),
(5,440.5,cs),
(9,436.833,o),
(16.667,435,o),
(28,435,cs),
(105,435,ls),
(115.667,435,o),
(118,427.667,o),
(118,409,cs),
(118,300,ls),
(118,267.562,o),
(119.408,86.65,o),
(113,45,cs),
(110.447,29.682,o),
(102.153,26.608,o),
(50,24,cs),
(35.333,22.667,o),
(18,21.667,o),
(18,11,cs),
(18,5.667,o),
(21.333,2.5,o),
(28,1.5,cs),
(34.667,0.5,o),
(42.667,0,o),
(52,0,cs),
(59.333,0,o),
(71.5,0.5,o),
(88.5,1.5,cs),
(105.5,2.5,o),
(123,3,o),
(141,3,cs),
(176.123,3,o),
(219.061,1,o),
(251,1,cs),
(268.333,1,o),
(279.667,2,o),
(285,4,cs),
(290.333,6,o),
(293,9.333,o),
(293,14,cs),
(293,23.333,o),
(283.333,28,o),
(264,28,cs),
(155,28,l),
(155,424,ls),
(155,431.333,o),
(161,435,o),
(173,435,cs),
(188.161,435,o),
(212.403,433,o),
(239,433,cs),
(253.667,433,o),
(268,436.333,o),
(268,447,cs),
(268,457.667,o),
(254.333,463,o),
(241,463,cs),
(163,463,ls),
(160.333,463,o),
(158.333,464.333,o),
(157,467,cs),
(155.667,469.667,o),
(155,475.333,o),
(155,484,cs),
(155,542.12,o),
(154.231,612.591,o),
(174.5,683,cs),
(194.206,751.452,o),
(236.102,799,o),
(311,799,cs),
(361.667,799,o),
(377.667,778.333,o),
(379,705,cs),
(379,637.355,o),
(380,598.319,o),
(380,526,cs),
(380,388.667,o),
(378.5,280,o),
(375.5,200,cs),
(372.5,120,o),
(371,65.333,o),
(371,36,cs),
(371,18.667,o),
(372.167,6.333,o),
(374.5,-1,cs),
(376.833,-8.333,o),
(381.667,-12,o),
(389,-12,cs)
);
},
{
closed = 1;
nodes = (
(443.359,22,o),
(419,102.837,o),
(419,179,cs),
(419,314.371,o),
(497.768,427,o),
(586,427,cs),
(648.439,427,o),
(727,372.078,o),
(727,228,cs),
(727,55.996,o),
(615.663,22,o),
(549,22,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
132 122 111 22 2 40
CALL[ ]	/* CallFunction */";
};
width = 805;
}
);
note = f_b;
},
{
glyphname = f_f;
kernLeft = f_f;
kernRight = f;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(26.617,-110,o),
(91.368,-107,o),
(136,-107,cs),
(151.333,-107,o),
(169.5,-107.333,o),
(190.5,-108,cs),
(211.5,-108.667,o),
(228.333,-109,o),
(241,-109,cs),
(279.667,-109,o),
(300,-99,o),
(300,-71,cs),
(300,-36.333,o),
(280.667,-32,o),
(254,-32,cs),
(146,-32,l),
(146,392,ls),
(146,398.667,o),
(149.333,403,o),
(164,403,cs),
(192,403,o),
(208.333,403.833,o),
(223,404.5,cs),
(235.258,405.057,o),
(252.05,406,o),
(267,406,c),
(268.521,402.958,o),
(270,371.819,o),
(270,316,cs),
(270,277.567,o),
(271,243.898,o),
(271,215,cs),
(271,174.333,o),
(269,133.667,o),
(265,93,cs),
(264.333,85.667,o),
(261.167,80.667,o),
(255.5,78,cs),
(249.833,75.333,o),
(238.333,73.333,o),
(221,72,cs),
(206.333,70.667,o),
(182,64.333,o),
(182,35,cs),
(182,4.333,o),
(199,0,o),
(223,0,cs),
(221.073,0,o),
(291.507,3,o),
(348,3,cs),
(378.74,3,o),
(417.717,1,o),
(459,1,cs),
(492.333,1,o),
(517,8.333,o),
(517,39,cs),
(517,71,o),
(500.333,78,o),
(471,78,cs),
(362,78,l),
(362,392,ls),
(362,395.333,o),
(363,398,o),
(365,400,cs),
(367,402,o),
(372,403,o),
(380,403,cs),
(395.161,403,o),
(419.403,401,o),
(446,401,cs),
(465.706,401,o),
(492,406.782,o),
(492,444,cs),
(492,474.667,o),
(466.667,479,o),
(448,479,cs),
(370,479,ls),
(364.667,479,o),
(362,480.667,o),
(362,484,cs),
(362,541.9,o),
(365.564,604.181,o),
(384.5,658,cs),
(403.974,713.346,o),
(442.733,751,o),
(511,751,cs),
(529.667,751,o),
(549,743.667,o),
(549,737,cs),
(549,733.667,o),
(548,731,o),
(546,729,cs),
(544,727,o),
(540,722.667,o),
(534,716,cs),
(522,701.333,o),
(519,686.667,o),
(519,676,cs),
(519,656,o),
(536.667,627,o),
(578,627,cs),
(605.351,627,o),
(642,649.797,o),
(642,718,cs),
(642,756.669,o),
(613.378,825,o),
(515,825,cs),
(440.333,825,o),
(390,799.667,o),
(354,765,c),
(340,771.667,o),
(322,775,o),
(300,775,cs),
(72.68,775,o),
(52,630.078,o),
(52,491,cs),
(52,483,o),
(48,479,o),
(40,479,cs),
(27,479,ls),
(4.557,479,o),
(-22,479.134,o),
(-22,441,cs),
(-22,410.333,o),
(1.333,403,o),
(24,403,cs),
(40,403,ls),
(45.333,403,o),
(48.833,402.667,o),
(50.5,402,cs),
(52.167,401.333,o),
(53,400.333,o),
(53,399,cs),
(53,389.667,o),
(53.333,370.5,o),
(54,341.5,cs),
(54.667,312.5,o),
(55,272.333,o),
(55,221,cs),
(55,179.069,o),
(53.841,55.614,o),
(49,-17,cs),
(48.333,-30.333,o),
(40.667,-37.333,o),
(26,-38,cs),
(9.428,-38,o),
(-23,-47.396,o),
(-23,-75,cs),
(-23,-105.667,o),
(4,-110,o),
(28,-110,cs)
);
},
{
closed = 1;
nodes = (
(295.667,700,o),
(297.167,700,o),
(299.5,700,cs),
(301.833,700,o),
(304.333,699.333,o),
(307,698,c),
(276.333,616.667,o),
(268,553.667,o),
(268,479,c),
(154,479,ls),
(148.667,479,o),
(146,482.667,o),
(146,490,cs),
(146,629.804,o),
(163.735,700,o),
(295,700,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
40 1 7 4 162 1 6 14 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 6 14 3 7 6 96 0 4 17 1 14 6 4 14 91 13 1 1 16 1 0 1 0 87 0 7 7 5 83 0 5 5 12 67 12 9 2 2 2 3 83 15 8 2 3 3 23 67 0 10 10 11 83 0 11 11 13 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 6 14 3 14 6 3 104 0 4 17 1 14 6 4 14 91 13 1 1 16 1 0 1 0 87 0 7 7 5 83 0 5 5 12 67 12 9 2 2 2 3 83 15 8 2 3 3 23 67 0 10 10 11 83 0 11 11 13 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 6 14 3 14 6 3 104 0 4 17 1 14 6 4 14 91 15 8 2 3 12 9 2 2 10 3 2 91 13 1 1 16 1 0 1 0 87 0 7 7 5 83 0 5 5 12 67 0 10 10 11 83 0 11 11 13 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 6 14 3 14 6 3 104 0 1 13 0 13 1 96 0 4 17 1 14 6 4 14 91 15 8 2 3 12 9 2 2 10 3 2 91 0 13 16 1 0 13 0 87 0 7 7 5 83 0 5 5 12 67 0 10 10 11 83 0 11 11 13 11 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 6 14 3 14 6 3 104 0 1 13 0 13 1 96 0 4 17 1 14 6 4 14 91 15 8 2 3 12 9 2 2 10 3 2 91 0 13 16 1 0 13 0 87 0 7 7 5 83 0 5 5 14 67 0 10 10 11 83 0 11 11 13 11 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
152 151 1 0 159 157 151 164 152 163 138 136 133 127 110 98 94 92 89 82 76 73 66 64 54 52 44 42 39 37 32 28 23 20 9 7 0 150 1 142 18 15
CALL[ ]	/* CallFunction */";
};
width = 517;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(367,761.667,o),
(343.667,775,o),
(301,775,cs),
(202.288,775,o),
(139.368,731.726,o),
(110.5,672,cs),
(80.346,609.612,o),
(77.026,543.672,o),
(75,491,cs),
(75,481.667,o),
(73.667,473,o),
(63,473,cs),
(29,473,ls),
(5,473,o),
(-13,471.667,o),
(-13,445,cs),
(-13,422.333,o),
(3.333,415,o),
(26,415,cs),
(63,415,ls),
(68.333,415,o),
(71.833,414.5,o),
(73.5,413.5,cs),
(75.167,412.5,o),
(76,411,o),
(76,409,cs),
(76,377,o),
(76.333,345,o),
(77,313,cs),
(77.667,281,o),
(78,249,o),
(78,217,cs),
(78,176.732,o),
(76.914,72.445,o),
(72,-16,cs),
(71.333,-23.333,o),
(67.833,-28.333,o),
(61.5,-31,cs),
(55.167,-33.667,o),
(44,-35.667,o),
(28,-37,cs),
(13.154,-37,o),
(-14,-43.501,o),
(-14,-65,cs),
(-14,-90.139,o),
(11.613,-91,o),
(30,-91,cs),
(30.157,-91,o),
(91.957,-88,o),
(134,-88,cs),
(169.123,-88,o),
(212.061,-90,o),
(244,-90,cs),
(278.667,-90,o),
(296,-83.667,o),
(296,-61,cs),
(296,-33,o),
(277,-31,o),
(257,-31,cs),
(148,-31,l),
(148,404,ls),
(148,407.333,o),
(149,410,o),
(151,412,cs),
(153,414,o),
(158,415,o),
(166,415,cs),
(181.161,415,o),
(205.403,413,o),
(232,413,cs),
(248.644,413,o),
(271,414.261,o),
(271,445,cs),
(271,470.333,o),
(247.333,473,o),
(234,473,cs),
(156,473,ls),
(150.667,473,o),
(148,476.667,o),
(148,484,cs),
(148,575.282,o),
(149.329,719,o),
(301,719,cs),
(322.333,719,o),
(332.667,710,o),
(342,702,c),
(387,743,l),
(387,743,l)
);
},
{
closed = 1;
nodes = (
(286.333,67.667,o),
(282.833,62.667,o),
(276.5,60,cs),
(270.167,57.333,o),
(259,55.333,o),
(243,54,cs),
(228.154,54,o),
(201,47.499,o),
(201,26,cs),
(201,0.861,o),
(226.613,0,o),
(245,0,cs),
(245.157,0,o),
(306.957,3,o),
(349,3,cs),
(384.123,3,o),
(427.061,1,o),
(459,1,cs),
(493.667,1,o),
(511,7.333,o),
(511,30,cs),
(511,58,o),
(492,60,o),
(472,60,cs),
(363,60,l),
(363,404,ls),
(363,407.333,o),
(364,410,o),
(366,412,cs),
(368,414,o),
(373,415,o),
(381,415,cs),
(396.161,415,o),
(420.403,413,o),
(447,413,cs),
(463.644,413,o),
(486,414.261,o),
(486,445,cs),
(486,470.333,o),
(462.333,473,o),
(449,473,cs),
(371,473,ls),
(365.667,473,o),
(363,476.667,o),
(363,484,cs),
(363,535.413,o),
(362.453,595.258,o),
(382,661.5,cs),
(400.619,724.599,o),
(442.786,769,o),
(516,769,cs),
(532.667,769,o),
(546,765.5,o),
(556,758.5,cs),
(566,751.5,o),
(571,746,o),
(571,742,cs),
(571,737.333,o),
(569.5,733.667,o),
(566.5,731,cs),
(563.5,728.333,o),
(560,725,o),
(556,721,cs),
(545.333,711.667,o),
(541,696.667,o),
(541,686,cs),
(541,664.667,o),
(557,642,o),
(589,642,cs),
(613,642,o),
(643,662,o),
(643,718,cs),
(643,756.669,o),
(614.378,825,o),
(516,825,cs),
(405.538,825,o),
(350.576,759.257,o),
(325.5,697,cs),
(295.028,621.344,o),
(292.024,543.623,o),
(290,491,cs),
(290,481.667,o),
(288.667,473,o),
(278,473,cs),
(244,473,ls),
(220,473,o),
(202,471.667,o),
(202,445,cs),
(202,422.333,o),
(218.333,415,o),
(241,415,cs),
(278,415,ls),
(283.333,415,o),
(286.833,414.5,o),
(288.5,413.5,cs),
(290.167,412.5,o),
(291,411,o),
(291,409,cs),
(291,377,o),
(291.333,345,o),
(292,313,cs),
(292.667,281,o),
(293,249,o),
(293,217,cs),
(293,169,o),
(291,121.667,o),
(287,75,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
90 1 0 13 0 1 12 0 58 1 3 17 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 12 0 1 0 12 1 104 0 8 0 0 12 8 0 91 5 1 3 0 4 3 4 87 0 13 13 11 83 0 11 11 12 67 15 9 6 3 2 2 1 83 14 10 7 3 1 1 23 67 18 1 16 16 17 83 0 17 17 13 17 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 12 0 1 0 12 1 104 0 8 0 0 12 8 0 91 14 10 7 3 1 15 9 6 3 2 16 1 2 91 5 1 3 0 4 3 4 87 0 13 13 11 83 0 11 11 12 67 18 1 16 16 17 83 0 17 17 13 17 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 12 0 1 0 12 1 104 0 18 16 17 16 18 96 0 5 3 4 3 5 96 0 8 0 0 12 8 0 91 14 10 7 3 1 15 9 6 3 2 16 1 2 91 0 3 0 4 3 4 87 0 13 13 11 83 0 11 11 12 67 0 16 16 17 83 0 17 17 13 17 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 72 values pushed */
0 12 0 1 0 12 1 104 0 18 16 17 16 18 96 0 5 3 4 3 5 96 0 8 0 0 12 8 0 91 14 10 7 3 1 15 9 6 3 2 16 1 2 91 0 3 0 4 3 4 87 0 13 13 11 83 0 11 11 14 67 0 16 16 17 83 0 17 17 13 17 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
191 190 183 170 166 164 161 154 148 145 138 136 126 124 118 116 108 105 101 98 40 52 61 23 212 35 118 53 34 19 24
CALL[ ]	/* CallFunction */";
};
width = 511;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(40.333,-60,o),
(51.667,-59.5,o),
(67,-58.5,cs),
(82.333,-57.5,o),
(99,-57,o),
(117,-57,cs),
(132.333,-57,o),
(148,-57.333,o),
(164,-58,cs),
(180,-58.667,o),
(193.667,-59,o),
(205,-59,cs),
(222.333,-59,o),
(233.833,-57.833,o),
(239.5,-55.5,cs),
(245.167,-53.167,o),
(248,-49.667,o),
(248,-45,cs),
(248,-35,o),
(238.333,-30,o),
(219,-30,cs),
(151,-30,l),
(151,424,ls),
(151,427.333,o),
(152,430,o),
(154,432,cs),
(156,434,o),
(161,435,o),
(169,435,cs),
(194.065,435,o),
(253.27,433,o),
(321,433,c),
(322.333,363.667,o),
(324,285,o),
(324,221,cs),
(324,157,o),
(322,102.333,o),
(318,45,cs),
(316.667,27.667,o),
(299.333,26.667,o),
(274,24,cs),
(259.333,22.667,o),
(242,21.667,o),
(242,11,cs),
(242,5.667,o),
(245.333,2.5,o),
(252,1.5,cs),
(258.667,0.5,o),
(266.667,0,o),
(276,0,cs),
(283.333,0,o),
(293,0.5,o),
(305,1.5,cs),
(317,2.5,o),
(332,3,o),
(350,3,cs),
(385.813,3,o),
(428.842,1,o),
(459,1,cs),
(476.333,1,o),
(487.833,2.167,o),
(493.5,4.5,cs),
(499.167,6.833,o),
(502,10.333,o),
(502,15,cs),
(502,25,o),
(492.333,30,o),
(473,30,cs),
(364,30,l),
(364,424,ls),
(364,427.333,o),
(365,430,o),
(367,432,cs),
(369,434,o),
(374,435,o),
(382,435,cs),
(397.161,435,o),
(421.403,433,o),
(448,433,cs),
(462.667,433,o),
(477,436.333,o),
(477,447,cs),
(477,457.667,o),
(463.333,463,o),
(450,463,cs),
(372,463,ls),
(369.333,463,o),
(367.333,464.333,o),
(366,467,cs),
(364.667,469.667,o),
(364,475.333,o),
(364,484,cs),
(364,539.068,o),
(363.216,608.972,o),
(383.5,680.5,cs),
(403.182,749.903,o),
(446.716,799,o),
(523,799,cs),
(580.333,799,o),
(602,771.333,o),
(602,750,cs),
(602,740.667,o),
(597.667,737,o),
(587,729,cs),
(577,721.667,o),
(572,712.667,o),
(572,702,cs),
(572,679.333,o),
(586.333,667,o),
(605,667,cs),
(629,667,o),
(644,688.667,o),
(644,718,cs),
(644,756.669,o),
(615.378,825,o),
(517,825,cs),
(450.333,825,o),
(407.333,793.667,o),
(378,751,c),
(360.667,764.333,o),
(340.667,775,o),
(302,775,cs),
(214.414,775,o),
(162.523,720.06,o),
(137.5,654,cs),
(111.223,584.628,o),
(108,518.541,o),
(108,491,cs),
(108,476.333,o),
(106.667,463,o),
(96,463,cs),
(32,463,ls),
(20,463,o),
(11.667,462.5,o),
(7,461.5,cs),
(2.333,460.5,o),
(0,457.333,o),
(0,452,cs),
(0,448,o),
(2,444.167,o),
(6,440.5,cs),
(10,436.833,o),
(17.667,435,o),
(29,435,cs),
(96,435,ls),
(106.667,435,o),
(109,427.667,o),
(109,409,cs),
(109,276.335,o),
(111,210,o),
(111,210,c),
(111,162.236,o),
(109.377,76.912,o),
(105,-15,cs),
(104.333,-22.333,o),
(98.833,-27.167,o),
(88.5,-29.5,cs),
(78.167,-31.833,o),
(59,-34,o),
(31,-36,cs),
(16.333,-37.333,o),
(-1,-38.333,o),
(-1,-49,cs),
(-1,-54.333,o),
(2.333,-57.5,o),
(9,-58.5,cs),
(15.667,-59.5,o),
(23.667,-60,o),
(33,-60,cs)
);
},
{
closed = 1;
nodes = (
(156.333,463,o),
(154.333,464.333,o),
(153,467,cs),
(151.667,469.667,o),
(151,475.333,o),
(151,484,cs),
(151,509.815,o),
(150.381,564.791,o),
(170.5,631.5,cs),
(190.163,696.698,o),
(234.312,749,o),
(308,749,cs),
(338.667,749,o),
(354.333,740.667,o),
(365,730,c),
(323.522,652.575,o),
(321,550.173,o),
(321,463,c),
(159,463,l),
(159,463,l),
(159,463,l),
(159,463,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
70 1 15 5 150 1 7 15 41 0 2 11 0 36 1 1 12 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 7 15 4 15 7 4 104 0 5 0 15 7 5 15 91 0 1 0 2 1 2 87 0 8 8 6 83 0 6 6 12 67 10 3 2 0 0 4 83 14 9 2 4 4 23 67 0 11 11 12 83 13 1 12 12 13 12 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 7 15 4 15 7 4 104 0 5 0 15 7 5 15 91 14 9 2 4 10 3 2 0 11 4 0 91 0 1 0 2 1 2 87 0 8 8 6 83 0 6 6 12 67 0 11 11 12 83 13 1 12 12 13 12 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 7 15 4 15 7 4 104 0 5 0 15 7 5 15 91 14 9 2 4 10 3 2 0 11 4 0 91 0 1 0 2 1 2 87 0 8 8 6 83 0 6 6 14 67 0 11 11 12 83 13 1 12 12 13 12 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
154 152 145 143 133 131 130 123 120 118 115 108 104 101 93 91 82 80 74 72 68 66 58 55 51 48 131 35 102 16 18
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = f_f;
},
{
glyphname = f_f_b;
kernLeft = f_f;
kernRight = b;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(889.062,-9,o),
(1012,49.978,o),
(1012,221,cs),
(1012,321.887,o),
(970.465,458,o),
(835,458,cs),
(775.093,458,o),
(709.643,432.406,o),
(661,330,c),
(661,334.667,o),
(661,345.5,o),
(661,362.5,cs),
(661,379.5,o),
(661,400,o),
(661,424,cs),
(661,448,o),
(661.167,474.167,o),
(661.5,502.5,cs),
(661.833,530.833,o),
(662,558.833,o),
(662,586.5,cs),
(662,614.167,o),
(662,640.333,o),
(662,665,cs),
(662,689.667,o),
(662,710,o),
(662,726,cs),
(662,772.475,o),
(651.218,825,o),
(532,825,cs),
(453.333,825,o),
(398.667,801.667,o),
(368,771,c),
(350,781,o),
(329.333,786,o),
(306,786,cs),
(195.818,786,o),
(128.798,750.872,o),
(96,694.5,cs),
(62.523,636.962,o),
(59.146,572.813,o),
(57,502,cs),
(57,495.333,o),
(55.667,490,o),
(45,490,cs),
(32,490,ls),
(9.557,490,o),
(-17,490.134,o),
(-17,452,cs),
(-17,421.333,o),
(6.333,414,o),
(29,414,cs),
(45,414,ls),
(57,414,o),
(58,412.667,o),
(58,406,cs),
(58,349.412,o),
(60,281.497,o),
(60,235,cs),
(60,190.888,o),
(58.769,66.54,o),
(54,-5,cs),
(54,-21.868,o),
(7.495,-26,o),
(-3,-26,cs),
(-17.065,-26,o),
(-52,-32.199,o),
(-52,-63,cs),
(-52,-92.333,o),
(-29,-98,o),
(-1,-98,cs),
(-3.646,-98,o),
(76.199,-95,o),
(151,-95,cs),
(173.65,-95,o),
(194.574,-97,o),
(212,-97,cs),
(246.667,-97,o),
(271,-91,o),
(271,-59,cs),
(271,-25.667,o),
(254.333,-20,o),
(225,-20,cs),
(151,-20,l),
(151,403,ls),
(151,406.333,o),
(152,409,o),
(154,411,cs),
(156,413,o),
(161,414,o),
(169,414,cs),
(189.681,414,o),
(237.399,415,o),
(292,415,c),
(293.932,395.679,o),
(296,362.878,o),
(296,308,cs),
(296,243.579,o),
(297.003,161.039,o),
(292,96,cs),
(290.667,81.333,o),
(286.667,74.667,o),
(272,72,cs),
(257.333,69.333,o),
(240,62.667,o),
(240,32,cs),
(240,16,o),
(255.333,0,o),
(274,0,cs),
(279.479,0,o),
(331.4,3,o),
(370,3,cs),
(385.333,3,o),
(399.5,2.667,o),
(412.5,2,cs),
(425.5,1.333,o),
(438,1,o),
(450,1,cs),
(484.667,1,o),
(492,22.333,o),
(492,41,cs),
(492,64.333,o),
(482.333,76,o),
(463,76,cs),
(384,76,l),
(384,400,ls),
(384,407.333,o),
(390,411,o),
(402,411,cs),
(417.161,411,o),
(441.403,409,o),
(468,409,cs),
(482.667,409,o),
(507,420.333,o),
(507,447,cs),
(507,479,o),
(483.333,487,o),
(470,487,cs),
(392,487,ls),
(386.667,487,o),
(384,489,o),
(384,493,cs),
(384,631.723,o),
(394.796,751,o),
(517,751,cs),
(529.253,751,o),
(570,740.985,o),
(570,719,cs),
(572.318,672.638,o),
(573,663.734,o),
(573,597,cs),
(573,433,o),
(570.833,297,o),
(567.5,201,cs),
(564.024,100.889,o),
(562,48.23,o),
(562,43,cs),
(562,3,o),
(572,-12,o),
(604,-12,cs),
(646.161,-12,o),
(648.658,-1.444,o),
(654,68,c),
(676.227,29.103,o),
(715.831,-9,o),
(791,-9,cs)
);
},
{
closed = 1;
nodes = (
(696.319,70,o),
(661,134.677,o),
(661,188,cs),
(661,292.208,o),
(723.058,379,o),
(810,379,cs),
(880.667,379,o),
(918,328,o),
(918,228,cs),
(918,95.789,o),
(852.442,70,o),
(791,70,cs)
);
},
{
closed = 1;
nodes = (
(153.667,490,o),
(151,491.667,o),
(151,495,cs),
(151,610.639,o),
(151.742,712,o),
(301,712,cs),
(309,712,o),
(316.667,707,o),
(322,703,c),
(298.549,648.28,o),
(296,547.481,o),
(296,490,c),
(159,490,l),
(159,490,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
212 205 194 187 159 108 3 40
CALL[ ]	/* CallFunction */";
};
width = 1041;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(639,299.745,o),
(718.605,397,o),
(806,397,cs),
(851.208,397,o),
(917,348.603,o),
(917,228,cs),
(917,77.728,o),
(823.872,52,o),
(769,52,cs),
(664.955,52,o),
(639,116.042,o),
(639,179,cs)
);
},
{
closed = 1;
nodes = (
(640,766.289,o),
(634.934,825,o),
(524,825,cs),
(452,825,o),
(405,801.667,o),
(373,763,c),
(355.667,773.667,o),
(334.667,782,o),
(304,782,cs),
(205.288,782,o),
(142.368,738.726,o),
(113.5,679,cs),
(83.346,616.612,o),
(80.026,550.672,o),
(78,498,cs),
(78,488.667,o),
(76.667,480,o),
(66,480,cs),
(32,480,ls),
(8,480,o),
(-10,478.667,o),
(-10,452,cs),
(-10,429.333,o),
(6.333,422,o),
(29,422,cs),
(66,422,ls),
(71.333,422,o),
(74.833,421.5,o),
(76.5,420.5,cs),
(78.167,419.5,o),
(79,418,o),
(79,416,cs),
(79,384,o),
(79.333,352,o),
(80,320,cs),
(80.667,288,o),
(81,256,o),
(81,224,cs),
(81,183.732,o),
(79.914,79.445,o),
(75,-9,cs),
(73.667,-23.667,o),
(43,-27.333,o),
(11,-30,cs),
(-3.846,-30,o),
(-31,-36.501,o),
(-31,-58,cs),
(-31,-83.139,o),
(-5.387,-84,o),
(13,-84,cs),
(11.014,-84,o),
(81.116,-81,o),
(137,-81,cs),
(152.333,-81,o),
(168.167,-81.333,o),
(184.5,-82,cs),
(200.833,-82.667,o),
(215,-83,o),
(227,-83,cs),
(261.667,-83,o),
(279,-76.667,o),
(279,-54,cs),
(279,-26,o),
(260,-24,o),
(240,-24,cs),
(151,-24,l),
(151,411,ls),
(151,414.333,o),
(152,417,o),
(154,419,cs),
(156,421,o),
(161,422,o),
(169,422,cs),
(295,422,l),
(305.667,419.333,o),
(308,412.667,o),
(308,394,cs),
(308,300,ls),
(308,273.441,o),
(309.448,113.69,o),
(303,75,cs),
(301.667,59,o),
(294,58,o),
(266,54,cs),
(251.427,51.085,o),
(234,55.661,o),
(234,21,cs),
(234,10.333,o),
(249.333,0,o),
(268,0,cs),
(275.333,0,o),
(288.167,0.5,o),
(306.5,1.5,cs),
(324.833,2.5,o),
(343,3,o),
(361,3,cs),
(396.123,3,o),
(439.061,1,o),
(471,1,cs),
(488.333,1,o),
(499.667,3.667,o),
(505,9,cs),
(510.333,14.333,o),
(513,19.333,o),
(513,24,cs),
(513,52,o),
(504,58,o),
(484,58,cs),
(375,58,l),
(375,409,ls),
(375,416.333,o),
(381,420,o),
(393,420,cs),
(408.161,420,o),
(432.403,418,o),
(459,418,cs),
(473.667,418,o),
(494,425.667,o),
(494,447,cs),
(494,471,o),
(474.333,478,o),
(461,478,cs),
(383,478,ls),
(377.667,478,o),
(375,480,o),
(375,484,cs),
(375,537.878,o),
(374.773,599.4,o),
(392,664,cs),
(408.511,725.916,o),
(445.015,769,o),
(511,769,cs),
(547,769,o),
(567.667,743.667,o),
(569,705,cs),
(569,657.672,o),
(570,579.426,o),
(570,526,cs),
(570,388.667,o),
(568.5,280,o),
(565.5,200,cs),
(562.5,120,o),
(561,65.333,o),
(561,36,cs),
(561,1.333,o),
(569,-12,o),
(593,-12,cs),
(624.445,-12,o),
(626.972,2.641,o),
(632,68,c),
(654.227,29.103,o),
(693.831,-9,o),
(769,-9,cs),
(867.638,-9,o),
(990,50.914,o),
(990,220,cs),
(990,323.713,o),
(945.367,458,o),
(815,458,cs),
(739,458,o),
(677.333,414,o),
(640,334,c),
(640,693,l),
(640,693,l)
);
},
{
closed = 1;
nodes = (
(153.667,480,o),
(151,483.667,o),
(151,491,cs),
(151,582.282,o),
(152.329,726,o),
(304,726,cs),
(322.667,726,o),
(333,718.667,o),
(341,712,c),
(310.333,645.333,o),
(307,563,o),
(307,491,cs),
(307,484.333,o),
(305.667,478,o),
(295,478,cs),
(159,480,l),
(159,480,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
198 190 183 135 14 4 3 40
CALL[ ]	/* CallFunction */";
};
width = 1021;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(40.333,-60,o),
(51.667,-59.5,o),
(67,-58.5,cs),
(82.333,-57.5,o),
(99,-57,o),
(117,-57,cs),
(132.333,-57,o),
(148,-57.333,o),
(164,-58,cs),
(180,-58.667,o),
(193.667,-59,o),
(205,-59,cs),
(222.333,-59,o),
(233.833,-57.833,o),
(239.5,-55.5,cs),
(245.167,-53.167,o),
(248,-49.667,o),
(248,-45,cs),
(248,-35,o),
(238.333,-30,o),
(219,-30,cs),
(151,-30,l),
(151,424,ls),
(151,427.333,o),
(152,430,o),
(154,432,cs),
(156,434,o),
(161,435,o),
(169,435,cs),
(194.376,435,o),
(254.817,433,o),
(324,433,c),
(324,431.667,o),
(324.167,420.333,o),
(324.5,399,cs),
(324.833,377.667,o),
(325,340,o),
(325,286,cs),
(325,285.333,o),
(325,279.667,o),
(325,269,cs),
(325,258.333,o),
(325,244.833,o),
(325,228.5,cs),
(325,174.07,o),
(323.709,122.074,o),
(322.5,72.5,cs),
(322.167,58.833,o),
(321.667,49.667,o),
(321,45,cs),
(319.667,37,o),
(314.333,31.833,o),
(305,29.5,cs),
(295.667,27.167,o),
(279.667,25.333,o),
(257,24,cs),
(242.333,22.667,o),
(225,21.667,o),
(225,11,cs),
(225,5.667,o),
(228.333,2.5,o),
(235,1.5,cs),
(241.667,0.5,o),
(249.667,0,o),
(259,0,cs),
(266.333,0,o),
(278.5,0.5,o),
(295.5,1.5,cs),
(312.5,2.5,o),
(330,3,o),
(348,3,cs),
(383.123,3,o),
(426.061,1,o),
(458,1,cs),
(475.333,1,o),
(486.667,2,o),
(492,4,cs),
(497.333,6,o),
(500,9.333,o),
(500,14,cs),
(500,23.333,o),
(490.333,28,o),
(471,28,cs),
(362,28,l),
(362,424,ls),
(362,431.333,o),
(368,435,o),
(380,435,cs),
(395.161,435,o),
(419.403,433,o),
(446,433,cs),
(460.667,433,o),
(475,436.333,o),
(475,447,cs),
(475,457.667,o),
(461.333,463,o),
(448,463,cs),
(370,463,ls),
(366.667,463,o),
(364.5,464.833,o),
(363.5,468.5,cs),
(362.5,472.167,o),
(362,480.667,o),
(362,494,cs),
(362,539.407,o),
(365.255,609.726,o),
(384,679.5,cs),
(402.349,747.798,o),
(439.732,799,o),
(503,799,cs),
(569.344,799,o),
(567,739.54,o),
(567,683,cs),
(567,584.197,o),
(568,488.398,o),
(568,407,cs),
(568,315,o),
(565.5,254.833,o),
(563.5,199.5,cs),
(561.654,148.419,o),
(559,86.209,o),
(559,24,cs),
(559,0,o),
(565.333,-12,o),
(578,-12,cs),
(585.333,-12,o),
(590.333,-6.667,o),
(593,4,cs),
(595.667,14.667,o),
(598,36,o),
(600,68,c),
(622.227,29.103,o),
(661.831,-9,o),
(737,-9,cs),
(834.115,-9,o),
(958,51.706,o),
(958,219,cs),
(958,321.105,o),
(912.083,458,o),
(787,458,cs),
(727,458,o),
(683.667,428.333,o),
(653,399,cs),
(635.667,381.667,o),
(620.333,362,o),
(607,340,c),
(607,391.333,o),
(607.333,441.667,o),
(608,491,cs),
(608.667,540.333,o),
(609,589.667,o),
(609,639,cs),
(609,767.469,o),
(602.389,825,o),
(513,825,cs),
(451.667,825,o),
(414.667,799.667,o),
(380,749,c),
(364,762.333,o),
(343.667,775,o),
(301,775,cs),
(216.449,775,o),
(163.34,721.217,o),
(137.5,653,cs),
(110.785,582.472,o),
(108,515.753,o),
(108,491,cs),
(108,476.333,o),
(106.667,463,o),
(96,463,cs),
(32,463,ls),
(20,463,o),
(11.667,462.5,o),
(7,461.5,cs),
(2.333,460.5,o),
(0,457.333,o),
(0,452,cs),
(0,448,o),
(2,444.167,o),
(6,440.5,cs),
(10,436.833,o),
(17.667,435,o),
(29,435,cs),
(96,435,ls),
(104.667,435,o),
(109,427.333,o),
(109,412,cs),
(109,376.64,o),
(111,296.956,o),
(111,206,cs),
(111,165.876,o),
(109.459,78.639,o),
(105,-15,cs),
(104.333,-22.333,o),
(98.833,-27.167,o),
(88.5,-29.5,cs),
(78.167,-31.833,o),
(59,-34,o),
(31,-36,cs),
(16.333,-37.333,o),
(-1,-38.333,o),
(-1,-49,cs),
(-1,-54.333,o),
(2.333,-57.5,o),
(9,-58.5,cs),
(15.667,-59.5,o),
(23.667,-60,o),
(33,-60,cs)
);
},
{
closed = 1;
nodes = (
(156.333,463,o),
(154.333,464.333,o),
(153,467,cs),
(151.667,469.667,o),
(151,475.333,o),
(151,484,cs),
(151,510.979,o),
(150.397,565.842,o),
(170.5,632.5,cs),
(190.296,698.14,o),
(233.387,749,o),
(308,749,cs),
(341.333,749,o),
(357.333,739,o),
(368,727,c),
(328,641.667,o),
(323,551,o),
(323,463,c),
(159,463,l),
(159,463,l),
(159,463,l),
(159,463,l)
);
},
{
closed = 1;
nodes = (
(631.359,22,o),
(607,102.837,o),
(607,179,cs),
(607,314.371,o),
(685.768,427,o),
(774,427,cs),
(836.439,427,o),
(915,372.078,o),
(915,228,cs),
(915,55.996,o),
(803.663,22,o),
(737,22,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
197 192 186 176 163 118 3 40
CALL[ ]	/* CallFunction */";
};
width = 993;
}
);
note = f_f_b;
},
{
glyphname = f_f_h;
kernLeft = f_f;
kernRight = c_h;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(53.247,-110,o),
(121.344,-107,o),
(173,-107,cs),
(188.333,-107,o),
(203.167,-107.333,o),
(217.5,-108,cs),
(231.833,-108.667,o),
(245.667,-109,o),
(259,-109,cs),
(292.333,-109,o),
(317,-101.667,o),
(317,-71,cs),
(317,-37.667,o),
(300.333,-32,o),
(271,-32,cs),
(173,-32,l),
(173,395,ls),
(173,401.667,o),
(175,408,o),
(191,408,cs),
(227.022,408,o),
(247.642,412,o),
(299,412,c),
(303.705,397.884,o),
(304,325.505,o),
(304,310,cs),
(304,217.023,o),
(300,111.195,o),
(300,83,cs),
(300,66.466,o),
(266.262,63,o),
(254,63,cs),
(227.333,63,o),
(214,52.667,o),
(214,32,cs),
(214,13.333,o),
(226.667,0,o),
(256,0,cs),
(263.333,0,o),
(275.5,0.5,o),
(292.5,1.5,cs),
(309.5,2.5,o),
(327,3,o),
(345,3,cs),
(356.333,3,o),
(369,2.667,o),
(383,2,cs),
(397,1.333,o),
(407,1,o),
(413,1,cs),
(443.667,1,o),
(456,14,o),
(456,30,cs),
(456,52.667,o),
(448.667,63,o),
(426,63,cs),
(392,63,l),
(392,400,ls),
(392,407.333,o),
(398,411,o),
(410,411,cs),
(416,411,o),
(424.667,410.667,o),
(436,410,cs),
(447.333,409.333,o),
(456,409,o),
(462,409,cs),
(476.667,409,o),
(499,416.333,o),
(499,447,cs),
(499,469.667,o),
(482.667,479,o),
(464,479,cs),
(400,479,ls),
(394.667,479,o),
(392,480.667,o),
(392,484,cs),
(392,616.133,o),
(399.916,751,o),
(527,751,cs),
(546.333,751,o),
(556,742.333,o),
(556,725,cs),
(556,722.333,o),
(556,714.333,o),
(556,701,cs),
(556,687.667,o),
(556,671.333,o),
(556,652,cs),
(556,632.667,o),
(556.167,611.833,o),
(556.5,589.5,cs),
(556.833,567.167,o),
(557,545.667,o),
(557,525,cs),
(557,504.333,o),
(557,486,o),
(557,470,cs),
(557,454,o),
(557,442.667,o),
(557,436,cs),
(557,299.711,o),
(550,182.395,o),
(550,104,cs),
(550,81.333,o),
(546.667,65.333,o),
(532,64,cs),
(517.333,62.667,o),
(512,48,o),
(512,36,cs),
(512,13.333,o),
(527,0,o),
(551,0,cs),
(565.667,0,o),
(577,0.5,o),
(585,1.5,cs),
(593,2.5,o),
(604.667,3,o),
(620,3,cs),
(635.333,3,o),
(652,2.5,o),
(670,1.5,cs),
(688,0.5,o),
(706.667,0,o),
(726,0,cs),
(744.667,0,o),
(752,16.667,o),
(752,30,cs),
(752,52.667,o),
(738.667,64,o),
(704,64,cs),
(641,64,l),
(641,172,ls),
(641,253.744,o),
(681.143,351,o),
(783,351,cs),
(837.74,351,o),
(852.925,307.598,o),
(856,283,cs),
(861.953,229.421,o),
(862,124.822,o),
(862,123,cs),
(862,104.181,o),
(859,73.897,o),
(859,32,cs),
(859,18.667,o),
(857.167,10,o),
(853.5,6,cs),
(849.833,2,o),
(845.333,0,o),
(840,0,cs),
(820,0,o),
(807,-4.667,o),
(807,-34,cs),
(807,-48.667,o),
(815.333,-61,o),
(838,-61,cs),
(847.333,-61,o),
(861,-60.5,o),
(879,-59.5,cs),
(897,-58.5,o),
(913.333,-58,o),
(928,-58,cs),
(948.342,-58,o),
(982.638,-61,o),
(1031,-61,cs),
(1051,-61,o),
(1060,-46,o),
(1060,-34,cs),
(1060,-7.333,o),
(1046,0,o),
(1006,0,cs),
(953,0,l),
(953,176,ls),
(953,228,o),
(953,258.333,o),
(949,293,cs),
(943.752,340.235,o),
(923.936,428,o),
(813,428,cs),
(741,428,o),
(680.667,395,o),
(646,331,c),
(646,478.814,o),
(647,586.275,o),
(647,637.5,cs),
(647,667.116,o),
(648,694.389,o),
(648,713,cs),
(648,756.007,o),
(619.699,825,o),
(512,825,cs),
(456,825,o),
(403.667,807.333,o),
(373,766,c),
(354.333,772.667,o),
(330.333,775,o),
(317,775,cs),
(102.331,775,o),
(84.469,627.726,o),
(79,491,cs),
(79,484.333,o),
(77.667,479,o),
(67,479,cs),
(20,479,ls),
(-2.443,479,o),
(-29,479.134,o),
(-29,441,cs),
(-29,410.333,o),
(-5.667,403,o),
(17,403,cs),
(67,403,ls),
(73,403,o),
(76.667,402.5,o),
(78,401.5,cs),
(79.333,400.5,o),
(80,399,o),
(80,397,cs),
(80,371.908,o),
(81,344.421,o),
(81,324,cs),
(81,298.174,o),
(82,263.857,o),
(82,221,cs),
(82,179.069,o),
(80.841,55.614,o),
(76,-17,cs),
(75.333,-30.333,o),
(67.667,-37.333,o),
(53,-38,cs),
(34.773,-38,o),
(4,-47.945,o),
(4,-75,cs),
(4,-101.667,o),
(25.667,-110,o),
(55,-110,cs)
);
},
{
closed = 1;
nodes = (
(323.667,703,o),
(326,702.833,o),
(328,702.5,cs),
(330,702.167,o),
(332.333,702,o),
(335,702,c),
(315,651.333,o),
(307,581.667,o),
(307,479,c),
(181,479,ls),
(175.667,479,o),
(173,480.667,o),
(173,484,cs),
(173,608.721,o),
(182.335,703,o),
(321,703,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
235 229 46 0 2 40
CALL[ ]	/* CallFunction */";
};
width = 1040;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(451,825,o),
(408.333,799,o),
(379,759,c),
(359.667,769.667,o),
(336.667,775,o),
(310,775,cs),
(216.086,775,o),
(155.916,732.861,o),
(126.5,672,cs),
(96.346,609.612,o),
(93.026,543.672,o),
(91,491,cs),
(91,481.667,o),
(89.667,473,o),
(79,473,cs),
(25,473,ls),
(1,473,o),
(-17,471.667,o),
(-17,445,cs),
(-17,422.333,o),
(-0.667,415,o),
(22,415,cs),
(79,415,ls),
(84.333,415,o),
(87.833,414.5,o),
(89.5,413.5,cs),
(91.167,412.5,o),
(92,411,o),
(92,409,cs),
(92,377,o),
(92.333,345,o),
(93,313,cs),
(93.667,281,o),
(94,249,o),
(94,217,cs),
(94,176.732,o),
(92.914,72.445,o),
(88,-16,cs),
(87.333,-23.333,o),
(83.833,-28.333,o),
(77.5,-31,cs),
(71.167,-33.667,o),
(60,-35.667,o),
(44,-37,cs),
(29.154,-37,o),
(2,-43.501,o),
(2,-65,cs),
(2,-90.139,o),
(27.613,-91,o),
(46,-91,cs),
(46.157,-91,o),
(107.957,-88,o),
(150,-88,cs),
(185.123,-88,o),
(228.061,-90,o),
(260,-90,cs),
(294.667,-90,o),
(312,-83.667,o),
(312,-61,cs),
(312,-33,o),
(293,-31,o),
(273,-31,cs),
(164,-31,l),
(164,404,ls),
(164,407.333,o),
(165,410,o),
(167,412,cs),
(169,414,o),
(174,415,o),
(182,415,cs),
(197.161,415,o),
(221.403,413,o),
(248,413,cs),
(257.333,413,o),
(267.667,413.333,o),
(277,420,c),
(304,420,ls),
(314.667,420,o),
(317,412.667,o),
(317,394,cs),
(317,300,ls),
(317,303.829,o),
(318.053,95.315,o),
(313,65,cs),
(311.667,50.333,o),
(288,49.333,o),
(260,44,cs),
(246.907,41.381,o),
(223,47.39,o),
(223,21,cs),
(223,10.333,o),
(243.333,0,o),
(262,0,cs),
(269.333,0,o),
(281.5,0.5,o),
(298.5,1.5,cs),
(315.5,2.5,o),
(333,3,o),
(351,3,cs),
(370.205,3,o),
(387.54,1,o),
(402,1,cs),
(419.333,1,o),
(430.833,3.667,o),
(436.5,9,cs),
(442.167,14.333,o),
(445,19.333,o),
(445,24,cs),
(445,45.333,o),
(435,48,o),
(415,48,cs),
(384,48,l),
(384,409,ls),
(384,416.333,o),
(390,420,o),
(402,420,cs),
(417.161,420,o),
(441.403,418,o),
(468,418,cs),
(482.667,418,o),
(502,424.333,o),
(502,447,cs),
(502,465.667,o),
(483.333,473,o),
(470,473,cs),
(392,473,ls),
(386.667,473,o),
(384,476.667,o),
(384,484,cs),
(384,531.891,o),
(383.585,594.664,o),
(401.5,660,cs),
(418.595,722.346,o),
(456.216,769,o),
(523,769,cs),
(553.667,769,o),
(569,754.333,o),
(569,725,cs),
(569,574,ls),
(569,532.667,o),
(569.333,486.667,o),
(570,436,cs),
(570,294.616,o),
(563,171.903,o),
(563,92,cs),
(563,61.333,o),
(555.667,54.667,o),
(537,52,c),
(528.279,46.186,o),
(508,58.171,o),
(508,21,cs),
(508,11.667,o),
(519,0,o),
(543,0,cs),
(557.667,0,o),
(569,0.5,o),
(577,1.5,cs),
(585,2.5,o),
(596.667,3,o),
(612,3,cs),
(627.333,3,o),
(645.667,2.5,o),
(667,1.5,cs),
(688.333,0.5,o),
(708.667,0,o),
(728,0,cs),
(738.667,0,o),
(751,16,o),
(751,24,cs),
(751,50.667,o),
(727.333,52,o),
(706,52,cs),
(633,52,l),
(633,180,ls),
(633,268.193,o),
(678.76,369,o),
(783,369,cs),
(852.806,369,o),
(866.394,311.064,o),
(869,285,cs),
(874.973,231.247,o),
(875,123.176,o),
(875,123,cs),
(875,127.258,o),
(875.544,48.35,o),
(872,20,c),
(872,8.667,o),
(871.667,1,o),
(871,-3,cs),
(870.333,-7,o),
(869,-9.667,o),
(867,-11,c),
(838.79,-16.129,o),
(800,-11.429,o),
(800,-40,cs),
(800,-46.667,o),
(808.333,-61,o),
(831,-61,cs),
(840.333,-61,o),
(853.833,-60.5,o),
(871.5,-59.5,cs),
(889.167,-58.5,o),
(905.333,-58,o),
(920,-58,cs),
(953.396,-58,o),
(1016.743,-61,o),
(1019,-61,cs),
(1039,-61,o),
(1048,-48,o),
(1048,-40,cs),
(1048,-13.333,o),
(1020.667,-12,o),
(994,-12,cs),
(945,-12,l),
(945,176,ls),
(945,228,o),
(945,258.333,o),
(941,293,cs),
(935.752,340.235,o),
(915.936,428,o),
(805,428,cs),
(733,428,o),
(673.667,391,o),
(639,327,c),
(639,382.333,o),
(639,429.833,o),
(639,469.5,cs),
(639,509.167,o),
(639,542.667,o),
(639,570,cs),
(639,597.333,o),
(639.167,619.333,o),
(639.5,636,cs),
(639.833,652.667,o),
(640,666.167,o),
(640,676.5,cs),
(640,686.833,o),
(640,694.5,o),
(640,699.5,cs),
(640,704.5,o),
(640,709,o),
(640,713,cs),
(640,752.335,o),
(615.714,825,o),
(515,825,cs)
);
},
{
closed = 1;
nodes = (
(166.667,473,o),
(164,476.667,o),
(164,484,cs),
(164,575.282,o),
(165.329,719,o),
(317,719,cs),
(331.667,719,o),
(343,714.667,o),
(351,708,c),
(324.333,644,o),
(319.333,568.667,o),
(318,506,cs),
(318,486,o),
(316,473,o),
(304,473,cs),
(172,473,l),
(172,473,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 6 values pushed */
249 241 193 0 2 40
CALL[ ]	/* CallFunction */";
};
width = 1029;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(830.333,-61,o),
(843.5,-60.5,o),
(860.5,-59.5,cs),
(877.5,-58.5,o),
(893.333,-58,o),
(908,-58,cs),
(922,-58,o),
(938.5,-58.5,o),
(957.5,-59.5,cs),
(976.5,-60.5,o),
(991.333,-61,o),
(1002,-61,cs),
(1021.333,-61,o),
(1031,-57.333,o),
(1031,-50,cs),
(1031,-36.667,o),
(1003.667,-32,o),
(977,-32,cs),
(933,-32,l),
(933,176,ls),
(933,228,o),
(933,258.333,o),
(929,293,cs),
(923.752,340.235,o),
(903.936,428,o),
(793,428,cs),
(721,428,o),
(661.667,391,o),
(627,327,c),
(627,479.51,o),
(626.806,582.842,o),
(627.5,637,cs),
(627.985,674.849,o),
(628,700.182,o),
(628,713,cs),
(628,756.042,o),
(620.739,825,o),
(519,825,cs),
(443.483,825,o),
(414.143,785.429,o),
(387,742,c),
(369.667,758,o),
(349.333,775,o),
(300,775,cs),
(215.901,775,o),
(163.384,721.334,o),
(137.5,653,cs),
(110.785,582.472,o),
(108,515.753,o),
(108,491,cs),
(108,476.333,o),
(106.667,463,o),
(96,463,cs),
(32,463,ls),
(20,463,o),
(11.667,462.5,o),
(7,461.5,cs),
(2.333,460.5,o),
(0,457.333,o),
(0,452,cs),
(0,448,o),
(2,444.167,o),
(6,440.5,cs),
(10,436.833,o),
(17.667,435,o),
(29,435,cs),
(96,435,ls),
(106.667,435,o),
(109,427.667,o),
(109,409,cs),
(109,276.335,o),
(111,210,o),
(111,210,c),
(111,162.236,o),
(109.377,76.912,o),
(105,-15,cs),
(104.333,-22.333,o),
(98.833,-27.167,o),
(88.5,-29.5,cs),
(78.167,-31.833,o),
(59,-34,o),
(31,-36,cs),
(16.333,-37.333,o),
(-1,-38.333,o),
(-1,-49,cs),
(-1,-54.333,o),
(2.333,-57.5,o),
(9,-58.5,cs),
(15.667,-59.5,o),
(23.667,-60,o),
(33,-60,cs),
(40.333,-60,o),
(51.667,-59.5,o),
(67,-58.5,cs),
(82.333,-57.5,o),
(99,-57,o),
(117,-57,cs),
(132.333,-57,o),
(148,-57.333,o),
(164,-58,cs),
(180,-58.667,o),
(193.667,-59,o),
(205,-59,cs),
(222.333,-59,o),
(233.833,-57.833,o),
(239.5,-55.5,cs),
(245.167,-53.167,o),
(248,-49.667,o),
(248,-45,cs),
(248,-35,o),
(238.333,-30,o),
(219,-30,cs),
(151,-30,l),
(151,424,ls),
(151,427.333,o),
(152,430,o),
(154,432,cs),
(156,434,o),
(161,435,o),
(169,435,cs),
(155.884,435,o),
(248.79,433,o),
(335,433,c),
(335,418.847,o),
(336,362.252,o),
(336,283,cs),
(336,214.333,o),
(335.667,161.167,o),
(335,123.5,cs),
(334.333,85.833,o),
(333,59.667,o),
(331,45,cs),
(327.913,29.565,o),
(318.083,26.276,o),
(268,24,cs),
(253.333,22.667,o),
(236,21.667,o),
(236,11,cs),
(236,5.667,o),
(239.333,2.5,o),
(246,1.5,cs),
(252.667,0.5,o),
(260.667,0,o),
(270,0,cs),
(277.333,0,o),
(289.5,0.5,o),
(306.5,1.5,cs),
(323.5,2.5,o),
(341,3,o),
(359,3,cs),
(380.76,3,o),
(400.605,1,o),
(417,1,cs),
(434.333,1,o),
(445.667,2,o),
(451,4,cs),
(456.333,6,o),
(459,9.333,o),
(459,14,cs),
(459,23.333,o),
(449.333,28,o),
(430,28,cs),
(373,28,l),
(373,424,ls),
(373,431.333,o),
(379,435,o),
(391,435,cs),
(414.523,435,o),
(451.265,433,o),
(477,433,cs),
(491.667,433,o),
(506,436.333,o),
(506,447,cs),
(506,457.667,o),
(492.333,463,o),
(479,463,cs),
(381,463,ls),
(377.667,463,o),
(375.5,465,o),
(374.5,469,cs),
(373.5,473,o),
(373,481.667,o),
(373,495,cs),
(373,544.513,o),
(375.933,617.56,o),
(395.5,684.5,cs),
(414.971,751.11,o),
(453.332,799,o),
(517,799,cs),
(574.171,799,o),
(587,762.105,o),
(587,725,cs),
(587,574,ls),
(587,532.667,o),
(587.333,486.667,o),
(588,436,cs),
(588,313.139,o),
(582.725,109.943,o),
(581,72,cs),
(579.667,41.333,o),
(573.667,34.667,o),
(555,32,cs),
(543.084,30.298,o),
(497,30.614,o),
(497,11,cs),
(497,3.667,o),
(508.333,0,o),
(531,0,cs),
(545.667,0,o),
(557,0.5,o),
(565,1.5,cs),
(573,2.5,o),
(584.667,3,o),
(600,3,cs),
(615.333,3,o),
(633.667,2.5,o),
(655,1.5,cs),
(676.333,0.5,o),
(696.667,0,o),
(716,0,cs),
(726.667,0,o),
(736,6,o),
(736,14,cs),
(736,26,o),
(715.333,32,o),
(694,32,cs),
(621,32,l),
(621,193,ls),
(621,301.03,o),
(681.682,399,o),
(783,399,cs),
(869.081,399,o),
(880.774,331.584,o),
(887,288,cs),
(893.032,233.714,o),
(893,120.226,o),
(893,123,cs),
(893,127.222,o),
(893.451,31.057,o),
(890,0,cs),
(887.333,-22.667,o),
(881.667,-28.333,o),
(855,-31,cs),
(829.205,-33.345,o),
(790,-36.506,o),
(790,-50,cs),
(790,-57.333,o),
(800.333,-61,o),
(821,-61,cs)
);
},
{
closed = 1;
nodes = (
(156.333,463,o),
(154.333,464.333,o),
(153,467,cs),
(151.667,469.667,o),
(151,475.333,o),
(151,484,cs),
(151,507.887,o),
(150.697,560.365,o),
(170,629,cs),
(188.409,694.454,o),
(231.666,749,o),
(304,749,cs),
(342.667,749,o),
(362,734.667,o),
(374,716,c),
(339.333,633.333,o),
(334,547,o),
(334,463,c),
(159,463,l),
(159,463,l),
(159,463,l),
(159,463,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
233 228 27 0 2 40
CALL[ ]	/* CallFunction */";
};
width = 1013;
}
);
note = f_f_h;
},
{
glyphname = f_f_i;
kernLeft = f_f;
kernRight = f_f_i;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(632,462.667,o),
(623.667,487,o),
(593,487,cs),
(368,487,ls),
(361.333,487,o),
(360,487.333,o),
(360,498,cs),
(360,569.814,o),
(371.143,747,o),
(483,747,cs),
(541.036,747,o),
(552,723.145,o),
(552,697,cs),
(552,646.861,o),
(512,651.612,o),
(512,618,cs),
(512,595.333,o),
(524.667,570,o),
(574,570,cs),
(628.572,570,o),
(645,613.615,o),
(645,656,cs),
(645,798.777,o),
(567.58,825,o),
(505,825,cs),
(434.333,825,o),
(386.667,806.667,o),
(352,776,c),
(337.333,782.667,o),
(320.333,785,o),
(299,785,cs),
(190.033,785,o),
(121.515,748.902,o),
(89,692,cs),
(57.07,636.122,o),
(52,568.51,o),
(52,501,cs),
(52,493,o),
(48,489,o),
(40,489,cs),
(27,489,ls),
(-2.333,489,o),
(-22,484.667,o),
(-22,450,cs),
(-22,419.333,o),
(1.333,413,o),
(24,413,cs),
(40,413,ls),
(45.333,413,o),
(48.833,412.667,o),
(50.5,412,cs),
(52.167,411.333,o),
(53,410.333,o),
(53,409,cs),
(53,377,o),
(53.333,346.667,o),
(54,318,cs),
(54.667,289.333,o),
(55,259,o),
(55,227,cs),
(55,194.62,o),
(53.923,66.841,o),
(49,-7,cs),
(47.667,-21.667,o),
(43.333,-31.667,o),
(26,-33,cs),
(8.375,-33,o),
(-23,-43.041,o),
(-23,-70,cs),
(-23,-100.667,o),
(2.667,-105,o),
(28,-105,cs),
(26.247,-105,o),
(94.344,-102,o),
(146,-102,cs),
(161.333,-102,o),
(173,-102.333,o),
(181,-103,cs),
(189,-103.667,o),
(199,-104,o),
(211,-104,cs),
(245.667,-104,o),
(270,-96.667,o),
(270,-66,cs),
(270,-34,o),
(254.667,-27,o),
(224,-27,cs),
(146,-27,l),
(146,402,ls),
(146,410.667,o),
(152.667,415,o),
(166,415,cs),
(183.333,415,o),
(199,414.833,o),
(213,414.5,cs),
(227,414.167,o),
(245.667,414,o),
(269,414,c),
(269,415.751,o),
(272,361.002,o),
(272,300,cs),
(272,268.252,o),
(271.776,119.98,o),
(267,77,cs),
(264.333,62.333,o),
(263,57.333,o),
(255,56,cs),
(240.333,53.333,o),
(214,47,o),
(214,27,cs),
(214,4.333,o),
(230.333,0,o),
(257,0,cs),
(264.333,0,o),
(276.5,0.5,o),
(293.5,1.5,cs),
(310.5,2.5,o),
(328,3,o),
(346,3,cs),
(361.333,3,o),
(375.5,2.667,o),
(388.5,2,cs),
(401.5,1.333,o),
(414,1,o),
(426,1,cs),
(460.667,1,o),
(471,10,o),
(471,30,cs),
(471,50,o),
(460.333,60,o),
(439,60,cs),
(367,60,l),
(366.333,62.667,o),
(364.667,73.833,o),
(362,93.5,cs),
(359.333,113.167,o),
(358,134.333,o),
(358,157,cs),
(358,187.654,o),
(359,229.989,o),
(359,284,cs),
(359,335.874,o),
(360,374.542,o),
(360,400,cs),
(360,407.333,o),
(366,411,o),
(378,411,cs),
(394.735,411,o),
(427.266,409,o),
(464,409,cs),
(471.386,409,o),
(490.279,411,o),
(521,411,cs),
(535.667,411,o),
(537.667,400.667,o),
(539,394,cs),
(540.061,386.573,o),
(543,289.774,o),
(543,149,cs),
(543,107,o),
(542.667,72.5,o),
(542,45.5,cs),
(541.333,18.5,o),
(540.333,-0.667,o),
(539,-12,cs),
(538.333,-18.667,o),
(535.167,-23.5,o),
(529.5,-26.5,cs),
(523.833,-29.5,o),
(513.333,-31.667,o),
(498,-33,cs),
(486.667,-34.333,o),
(481,-42.667,o),
(481,-58,cs),
(481,-86,o),
(503,-94,o),
(555,-94,cs),
(720,-94,ls),
(733.333,-94,o),
(750,-88.333,o),
(750,-63,cs),
(750,-40.333,o),
(732.667,-31,o),
(702,-31,cs),
(628,-31,l),
(628,10.203,o),
(627,5.695,o),
(627,77,cs),
(627,166.176,o),
(632,339.691,o),
(632,428,cs)
);
},
{
closed = 1;
nodes = (
(148.667,487,o),
(146,489.333,o),
(146,494,cs),
(146,633.139,o),
(160.044,711,o),
(295,711,cs),
(298.333,711,o),
(301.333,710.333,o),
(304,709,c),
(277.333,642.333,o),
(271,581.667,o),
(271,487,c),
(154,487,l),
(154,487,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
153 1 15 12 194 1 14 17 34 1 3 2 122 1 0 4 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 14 17 11 17 14 11 104 0 12 0 17 14 12 17 91 9 6 2 0 8 7 2 1 0 1 87 0 15 15 13 83 0 13 13 12 67 10 5 2 2 2 11 83 19 18 16 3 11 11 23 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 14 17 11 17 14 11 104 0 12 0 17 14 12 17 91 19 18 16 3 11 10 5 2 2 3 11 2 91 9 6 2 0 8 7 2 1 0 1 87 0 15 15 13 83 0 13 13 12 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 14 17 11 17 14 11 104 0 12 0 17 14 12 17 91 19 18 16 3 11 10 5 2 2 3 11 2 91 0 1 7 0 1 79 9 6 2 0 8 1 7 0 7 87 0 15 15 13 83 0 13 13 12 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
0 14 17 11 17 14 11 104 0 12 0 17 14 12 17 91 19 18 16 3 11 10 5 2 2 3 11 2 91 0 1 7 0 1 79 9 6 2 0 8 1 7 0 7 87 0 15 15 13 83 0 13 13 14 67 0 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
191 191 191 203 191 202 197 195 189 186 180 178 167 165 157 155 151 149 142 139 135 132 119 118 112 105 104 102 98 96 94 90 72 64 61 59 48 36 52 42 20 17
CALL[ ]	/* CallFunction */";
};
width = 726;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(633,458.667,o),
(626.333,478,o),
(601,478,cs),
(369,478,ls),
(365.667,478,o),
(363.5,479,o),
(362.5,481,cs),
(361.5,483,o),
(361,488.667,o),
(361,498,cs),
(361,542.951,o),
(362.755,599.488,o),
(380,662,cs),
(396.495,721.793,o),
(430.2,765,o),
(488,765,cs),
(550.274,765,o),
(574,730.335,o),
(574,697,cs),
(574,646.861,o),
(534,651.612,o),
(534,618,cs),
(534,595.333,o),
(548.333,575,o),
(587,575,cs),
(633.688,575,o),
(646,612.781,o),
(646,656,cs),
(646,798.777,o),
(568.58,825,o),
(506,825,cs),
(438,825,o),
(391.667,802.667,o),
(361,768,c),
(346.333,776,o),
(327.667,781,o),
(301,781,cs),
(202.288,781,o),
(139.368,737.726,o),
(110.5,678,cs),
(80.346,615.612,o),
(77.026,549.672,o),
(75,497,cs),
(75,487.667,o),
(73.667,479,o),
(63,479,cs),
(29,479,ls),
(5,479,o),
(-13,477.667,o),
(-13,451,cs),
(-13,428.333,o),
(3.333,421,o),
(26,421,cs),
(63,421,ls),
(68.333,421,o),
(71.833,420.5,o),
(73.5,419.5,cs),
(75.167,418.5,o),
(76,417,o),
(76,415,cs),
(76,383,o),
(76.333,351,o),
(77,319,cs),
(77.667,287,o),
(78,255,o),
(78,223,cs),
(78,182.732,o),
(76.914,78.445,o),
(72,-10,cs),
(71.333,-17.333,o),
(67.833,-22.833,o),
(61.5,-26.5,cs),
(55.167,-30.167,o),
(44,-32.667,o),
(28,-34,cs),
(13.154,-34,o),
(-14,-40.501,o),
(-14,-62,cs),
(-14,-87.139,o),
(11.613,-88,o),
(30,-88,cs),
(30.157,-88,o),
(91.957,-85,o),
(134,-85,cs),
(169.123,-85,o),
(212.061,-87,o),
(244,-87,cs),
(278.667,-87,o),
(296,-80.667,o),
(296,-58,cs),
(296,-30,o),
(277,-28,o),
(257,-28,cs),
(148,-28,l),
(148,410,ls),
(148,413.333,o),
(149,416,o),
(151,418,cs),
(153,420,o),
(158,421,o),
(166,421,cs),
(281,421,l),
(291.667,419.667,o),
(294,412.667,o),
(294,394,cs),
(294,300,ls),
(294,287.132,o),
(295.533,100.93,o),
(289,65,cs),
(287.667,57.667,o),
(285.667,52.833,o),
(283,50.5,cs),
(280.333,48.167,o),
(271.333,46,o),
(256,44,cs),
(241.333,41.333,o),
(219,39.667,o),
(219,21,cs),
(219,-0.333,o),
(239.333,0,o),
(258,0,cs),
(265.333,0,o),
(277.5,0.5,o),
(294.5,1.5,cs),
(311.5,2.5,o),
(329,3,o),
(347,3,cs),
(382.123,3,o),
(425.061,1,o),
(457,1,cs),
(474.333,1,o),
(486,2.833,o),
(492,6.5,cs),
(498,10.167,o),
(501,16,o),
(501,24,cs),
(501,40,o),
(490.667,48,o),
(470,48,cs),
(368,48,l),
(367.333,51.333,o),
(365.667,63.667,o),
(363,85,cs),
(360.333,106.333,o),
(359,129.667,o),
(359,155,cs),
(359,187.571,o),
(360,231.573,o),
(360,287,cs),
(360,342.895,o),
(361,383.563,o),
(361,409,cs),
(361,416.333,o),
(367,420,o),
(379,420,cs),
(395.735,420,o),
(428.266,418,o),
(465,418,cs),
(475.947,418,o),
(501.872,420,o),
(543,420,cs),
(557.667,420,o),
(559.667,411,o),
(561,403,cs),
(562.041,395.712,o),
(565,293.785,o),
(565,145,cs),
(565,69,o),
(564,14.667,o),
(560,-12,c),
(560,-20,o),
(557.333,-25,o),
(552,-27,cs),
(546.667,-29,o),
(535.333,-31,o),
(518,-33,cs),
(502,-35.667,o),
(484,-38.333,o),
(484,-57,cs),
(484,-77.913,o),
(520.519,-79,o),
(556,-79,cs),
(717,-79,ls),
(730.333,-79,o),
(747,-77,o),
(747,-57,cs),
(747,-38.333,o),
(729.667,-31,o),
(699,-31,cs),
(629,-31,l),
(629,10.203,o),
(628,5.695,o),
(628,77,cs),
(628,166.176,o),
(633,339.691,o),
(633,428,cs)
);
},
{
closed = 1;
nodes = (
(294,489,o),
(293,478,o),
(281,478,cs),
(156,478,l),
(150.667,479.333,o),
(148,480.667,o),
(148,490,cs),
(148,581.282,o),
(149.329,725,o),
(301,725,cs),
(313,725,o),
(321.333,722,o),
(328,718,c),
(298.667,654,o),
(295.333,574.333,o),
(294,509,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
161 1 14 11 204 1 13 16 37 1 3 2 129 29 2 0 4 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 13 16 10 16 13 10 104 0 11 0 16 13 11 16 91 8 6 2 0 7 1 1 0 1 87 0 14 14 12 83 0 12 12 12 67 9 5 2 2 2 10 83 17 15 2 10 10 23 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 13 16 10 16 13 10 104 0 11 0 16 13 11 16 91 17 15 2 10 9 5 2 2 3 10 2 91 8 6 2 0 7 1 1 0 1 87 0 14 14 12 83 0 12 12 12 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 13 16 10 16 13 10 104 0 11 0 16 13 11 16 91 17 15 2 10 9 5 2 2 3 10 2 91 0 1 7 0 1 79 8 6 2 0 0 7 0 7 87 0 14 14 12 83 0 12 12 12 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
0 13 16 10 16 13 10 104 0 11 0 16 13 11 16 91 17 15 2 10 9 5 2 2 3 10 2 91 0 1 7 0 1 79 8 6 2 0 0 7 0 7 87 0 14 14 12 83 0 12 12 14 67 0 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
217 215 208 206 199 196 188 186 175 173 165 163 159 157 149 146 142 139 126 125 118 105 101 99 96 94 77 67 64 62 51 39 68 42 18 17
CALL[ ]	/* CallFunction */";
};
width = 725;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(40.333,-60,o),
(51.667,-59.5,o),
(67,-58.5,cs),
(82.333,-57.5,o),
(99,-57,o),
(117,-57,cs),
(132.333,-57,o),
(148,-57.333,o),
(164,-58,cs),
(180,-58.667,o),
(194,-59,o),
(206,-59,cs),
(223.333,-59,o),
(234.667,-57.833,o),
(240,-55.5,cs),
(245.333,-53.167,o),
(248,-49.667,o),
(248,-45,cs),
(248,-35,o),
(238.333,-30,o),
(219,-30,cs),
(151,-30,l),
(151,424,ls),
(151,427.333,o),
(152,430,o),
(154,432,cs),
(156,434,o),
(161,435,o),
(169,435,cs),
(195.243,435,o),
(255.784,433,o),
(325,433,c),
(325,412.111,o),
(326,364.377,o),
(326,300,cs),
(326,267.562,o),
(327.408,86.65,o),
(321,45,cs),
(318.447,29.682,o),
(310.153,26.608,o),
(258,24,cs),
(243.333,22.667,o),
(226,21.667,o),
(226,11,cs),
(226,5.667,o),
(229.333,2.5,o),
(236,1.5,cs),
(242.667,0.5,o),
(250.667,0,o),
(260,0,cs),
(267.333,0,o),
(279.5,0.5,o),
(296.5,1.5,cs),
(313.5,2.5,o),
(331,3,o),
(349,3,cs),
(384.123,3,o),
(427.061,1,o),
(459,1,cs),
(476.333,1,o),
(487.667,2,o),
(493,4,cs),
(498.333,6,o),
(501,9.333,o),
(501,14,cs),
(501,23.333,o),
(491.333,28,o),
(472,28,cs),
(370,28,l),
(370,26.282,o),
(361,84.259,o),
(361,151,cs),
(361,183.569,o),
(362,231.07,o),
(362,293.5,cs),
(362,355.099,o),
(363,398.601,o),
(363,424,cs),
(363,431.333,o),
(369,435,o),
(381,435,cs),
(397.735,435,o),
(430.266,433,o),
(467,433,cs),
(481.629,433,o),
(517.575,435,o),
(575,435,cs),
(589.667,435,o),
(591.667,428.667,o),
(593,418,cs),
(593.978,410.18,o),
(597,296.12,o),
(597,138,cs),
(597,57.958,o),
(596.523,55.85,o),
(592,-12,c),
(590.667,-20,o),
(588,-25.167,o),
(584,-27.5,cs),
(580,-29.833,o),
(569.667,-31.667,o),
(553,-33,cs),
(537.667,-34.333,o),
(523.167,-35.667,o),
(509.5,-37,cs),
(495.833,-38.333,o),
(489,-41.667,o),
(489,-47,cs),
(489,-53,o),
(496.5,-56.5,o),
(511.5,-57.5,cs),
(526.5,-58.5,o),
(542,-59,o),
(558,-59,cs),
(713,-59,ls),
(726.333,-59,o),
(743,-57.667,o),
(743,-47,cs),
(743,-41,o),
(738.833,-36.833,o),
(730.5,-34.5,cs),
(722.167,-32.167,o),
(710.333,-31,o),
(695,-31,cs),
(631,-31,l),
(631,10.203,o),
(630,5.695,o),
(630,77,cs),
(630,166.176,o),
(635,339.691,o),
(635,428,cs),
(635,449.333,o),
(629,463,o),
(613,463,cs),
(371,463,ls),
(367.667,463,o),
(365.5,465,o),
(364.5,469,cs),
(363.5,473,o),
(363,482.667,o),
(363,498,cs),
(363,546.172,o),
(362.553,611.881,o),
(380.5,680.5,cs),
(397.892,746.997,o),
(435.853,795,o),
(504,795,cs),
(574.689,795,o),
(606,744.983,o),
(606,697,cs),
(606,646.861,o),
(566,651.612,o),
(566,618,cs),
(566,595.333,o),
(583.333,583,o),
(606,583,cs),
(640.667,583,o),
(648,613.333,o),
(648,656,cs),
(648,798.777,o),
(570.58,825,o),
(508,825,cs),
(442.667,825,o),
(400.667,796.667,o),
(374,754,c),
(358,764.667,o),
(337.333,775,o),
(304,775,cs),
(213.61,775,o),
(163.475,718.667,o),
(138,654,cs),
(110.323,583.742,o),
(108,515.754,o),
(108,491,cs),
(108,476.333,o),
(106.667,463,o),
(96,463,cs),
(32,463,ls),
(20,463,o),
(11.667,462.5,o),
(7,461.5,cs),
(2.333,460.5,o),
(0,457.333,o),
(0,452,cs),
(0,448,o),
(2,444.167,o),
(6,440.5,cs),
(10,436.833,o),
(17.667,435,o),
(29,435,cs),
(96,435,ls),
(106.667,435,o),
(109,427.667,o),
(109,409,cs),
(109,377,o),
(109.333,345,o),
(110,313,cs),
(110.667,281,o),
(111,249,o),
(111,217,cs),
(111,138.848,o),
(108.589,60.375,o),
(105,-15,cs),
(104.333,-22.333,o),
(98.5,-27.167,o),
(87.5,-29.5,cs),
(76.5,-31.833,o),
(57.667,-34,o),
(31,-36,cs),
(16.333,-37.333,o),
(-1,-38.333,o),
(-1,-49,cs),
(-1,-54.333,o),
(2.333,-57.5,o),
(9,-58.5,cs),
(15.667,-59.5,o),
(23.667,-60,o),
(33,-60,cs)
);
},
{
closed = 1;
nodes = (
(156.333,463,o),
(154.333,464.333,o),
(153,467,cs),
(151.667,469.667,o),
(151,475.333,o),
(151,484,cs),
(151,511.403,o),
(150.347,567.239,o),
(170.5,633,cs),
(190.532,698.368,o),
(232.995,749,o),
(309,749,cs),
(335.667,749,o),
(351.333,742.333,o),
(362,733,c),
(332.723,674.446,o),
(325,549.967,o),
(325,463,c),
(159,463,l),
(159,463,l),
(159,463,l),
(159,463,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
161 1 16 11 204 1 13 16 129 27 2 0 4 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 13 16 10 16 13 10 104 0 11 0 16 13 11 16 91 7 1 0 8 1 1 0 1 87 0 14 14 12 83 0 12 12 12 67 9 6 2 2 2 10 83 18 17 15 3 10 10 23 67 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 13 16 10 16 13 10 104 0 11 0 16 13 11 16 91 18 17 15 3 10 9 6 2 2 3 10 2 91 7 1 0 8 1 1 0 1 87 0 14 14 12 83 0 12 12 12 67 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 13 16 10 16 13 10 104 0 11 0 16 13 11 16 91 18 17 15 3 10 9 6 2 2 3 10 2 91 7 1 0 8 1 1 0 1 87 0 14 14 12 83 0 12 12 14 67 5 1 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
199 199 199 217 199 216 208 206 197 194 186 184 173 171 165 163 159 157 149 146 142 139 121 113 110 108 105 99 85 84 79 69 66 64 51 39 68 42 19 17
CALL[ ]	/* CallFunction */";
};
width = 724;
}
);
note = f_f_i;
},
{
glyphname = f_f_j;
kernLeft = f_f;
kernRight = dotlessj;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(547.255,-250,o),
(613.62,-199.607,o),
(630,-44,cs),
(641.011,66.113,o),
(639,310.335,o),
(639,434,cs),
(639,476.667,o),
(625,487,o),
(597,487,cs),
(380,487,ls),
(373.333,487,o),
(372,487.333,o),
(372,498,cs),
(372,539.114,o),
(371.575,594.062,o),
(389.5,651,cs),
(407.216,707.273,o),
(445.911,747,o),
(513,747,cs),
(547.667,747,o),
(564,722.333,o),
(564,697,cs),
(564,650.709,o),
(526,650.923,o),
(526,618,cs),
(526,584.667,o),
(535.667,561,o),
(581,561,cs),
(637,561,o),
(657,594.667,o),
(657,656,cs),
(657,798.777,o),
(579.58,825,o),
(517,825,cs),
(438.333,825,o),
(388.667,801,o),
(354,765,c),
(339.333,771.667,o),
(317.667,775,o),
(299,775,cs),
(68.521,775,o),
(50,627.374,o),
(50,507,cs),
(50,493.667,o),
(45.333,487,o),
(36,487,cs),
(17,487,ls),
(-7,487,o),
(-24,479.667,o),
(-24,449,cs),
(-24,418.333,o),
(-0.667,411,o),
(22,411,cs),
(38,411,ls),
(43.333,411,o),
(46.833,410.5,o),
(48.5,409.5,cs),
(50.167,408.5,o),
(51,406.667,o),
(51,404,cs),
(51,352.389,o),
(53,287.861,o),
(53,222,cs),
(53,183.568,o),
(51.808,60.123,o),
(47,-12,cs),
(45.667,-27.333,o),
(38,-35.333,o),
(24,-36,cs),
(6.838,-36,o),
(-25,-46.059,o),
(-25,-71,cs),
(-25,-99.926,o),
(6.395,-102,o),
(26,-102,cs),
(24.247,-102,o),
(92.344,-99,o),
(144,-99,cs),
(167.892,-99,o),
(190.163,-101,o),
(209,-101,cs),
(242.333,-101,o),
(262,-96.667,o),
(262,-66,cs),
(262,-35.333,o),
(244.667,-30,o),
(206,-30,cs),
(144,-30,l),
(144,400,ls),
(144,407.333,o),
(150,411,o),
(162,411,cs),
(226.892,411,o),
(213.444,414,o),
(278,414,c),
(282,374,o),
(284,330.667,o),
(284,300,cs),
(284,221.633,o),
(280.516,93.64,o),
(279,80,cs),
(277.667,65.333,o),
(256.667,60,o),
(250,60,cs),
(231.333,60,o),
(218,52.333,o),
(218,31,cs),
(218,11,o),
(233.333,3,o),
(252,3,cs),
(251.872,3,o),
(314.35,6,o),
(358,6,cs),
(373.333,6,o),
(389.167,5.667,o),
(405.5,5,cs),
(421.833,4.333,o),
(436,4,o),
(448,4,cs),
(482.667,4,o),
(490,14.333,o),
(490,33,cs),
(490,53,o),
(480.333,63,o),
(461,63,cs),
(375,63,l),
(372.333,89.667,o),
(370,113.667,o),
(370,159,cs),
(370,189.583,o),
(371,231.419,o),
(371,284.5,cs),
(371,335.967,o),
(372,374.468,o),
(372,400,cs),
(372,407.333,o),
(378,411,o),
(390,411,cs),
(411.981,411,o),
(451.913,408,o),
(524,408,cs),
(541.333,408,o),
(551,403,o),
(551,387,cs),
(551,300.333,o),
(550.5,210.167,o),
(548.5,133.5,cs),
(546.5,56.833,o),
(544.333,-6.667,o),
(543,-40,cs),
(536.333,-145.333,o),
(508.667,-181,o),
(454,-181,cs),
(415.333,-181,o),
(387,-169.667,o),
(387,-143,cs),
(387,-132.333,o),
(392.333,-125.333,o),
(403,-124,cs),
(421.667,-121.333,o),
(440,-115.667,o),
(440,-89,cs),
(440,-63.667,o),
(418.667,-49,o),
(392,-49,cs),
(336,-49,o),
(302,-89.667,o),
(302,-131,cs),
(302,-201.667,o),
(353,-250,o),
(473,-250,cs)
);
},
{
closed = 1;
nodes = (
(296.667,701,o),
(303,700,o),
(311,696,c),
(285.667,625.333,o),
(285,556.333,o),
(285,487,c),
(152,487,ls),
(146.667,487,o),
(144,490.333,o),
(144,497,cs),
(144,571.521,o),
(166.086,701,o),
(294,701,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
197 191 147 0 2 40
CALL[ ]	/* CallFunction */";
};
width = 697;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(366,761.667,o),
(342.667,775,o),
(300,775,cs),
(201.115,775,o),
(138.759,733.009,o),
(109.5,675.5,cs),
(79.345,616.231,o),
(76.013,551.314,o),
(74,501,cs),
(74,491.667,o),
(72.667,478,o),
(62,478,cs),
(28,478,ls),
(4,478,o),
(-14,476.667,o),
(-14,450,cs),
(-14,427.333,o),
(2.333,420,o),
(25,420,cs),
(62,420,ls),
(67.333,420,o),
(70.833,419.5,o),
(72.5,418.5,cs),
(74.167,417.5,o),
(75,416,o),
(75,414,cs),
(75,380,o),
(75.333,347.167,o),
(76,315.5,cs),
(76.667,283.833,o),
(77,251,o),
(77,217,cs),
(77,176.41,o),
(75.915,75.469,o),
(71,-13,cs),
(70.333,-20.333,o),
(66.833,-25.667,o),
(60.5,-29,cs),
(54.167,-32.333,o),
(43,-34.667,o),
(27,-36,cs),
(12.154,-36,o),
(-15,-42.501,o),
(-15,-64,cs),
(-15,-89.139,o),
(10.613,-90,o),
(29,-90,cs),
(29.157,-90,o),
(90.957,-87,o),
(133,-87,cs),
(168.123,-87,o),
(211.061,-89,o),
(243,-89,cs),
(277.667,-89,o),
(295,-82.667,o),
(295,-60,cs),
(295,-32,o),
(276,-30,o),
(256,-30,cs),
(147,-30,l),
(147,409,ls),
(147,416.333,o),
(153,420,o),
(165,420,cs),
(241,420,ls),
(263.667,420,o),
(288,423.333,o),
(288,450,cs),
(288,471.67,o),
(262.23,478,o),
(243,478,cs),
(155,478,ls),
(149.667,478,o),
(147,478.333,o),
(147,489,cs),
(147,552.646,o),
(158.479,719,o),
(300,719,cs),
(321.333,719,o),
(331.667,710,o),
(341,702,c),
(386,743,l),
(386,743,l)
);
},
{
closed = 1;
nodes = (
(442,-63.667,o),
(415.667,-53,o),
(401,-53,cs),
(359.667,-53,o),
(325,-81.333,o),
(325,-120,cs),
(325,-182.468,o),
(358.126,-236,o),
(476,-236,cs),
(549.461,-236,o),
(616.751,-193.951,o),
(632,-44,cs),
(634.361,-20.39,o),
(638,26.161,o),
(638,61,cs),
(638,73.27,o),
(638.232,133.934,o),
(639.5,243,cs),
(640.745,350.085,o),
(641,410.748,o),
(641,425,cs),
(641,459.667,o),
(640.667,478,o),
(614,478,cs),
(382,478,ls),
(378.667,478,o),
(376.5,479,o),
(375.5,481,cs),
(374.5,483,o),
(374,488.667,o),
(374,498,cs),
(374,541.968,o),
(373.543,600.734,o),
(391.5,662,cs),
(409.026,721.793,o),
(447.05,765,o),
(515,765,cs),
(564.333,765,o),
(587,730.333,o),
(587,697,cs),
(587,646.861,o),
(547,651.612,o),
(547,618,cs),
(547,595.333,o),
(561,573,o),
(597,573,cs),
(643.667,573,o),
(659,601.333,o),
(659,656,cs),
(659,798.777,o),
(581.58,825,o),
(519,825,cs),
(426.977,825,o),
(367.76,780.617,o),
(340.5,716,cs),
(311.43,647.094,o),
(309.238,580.63,o),
(307,509,cs),
(307,489,o),
(306,478,o),
(294,478,cs),
(250,478,ls),
(226,478,o),
(211,476,o),
(211,452,cs),
(211,437.333,o),
(224.333,420,o),
(247,420,cs),
(294,420,ls),
(304.667,420,o),
(307,412.667,o),
(307,394,cs),
(307,300,ls),
(307,287.132,o),
(308.533,100.93,o),
(302,65,cs),
(301.333,57.667,o),
(297.667,52.833,o),
(291,50.5,cs),
(284.333,48.167,o),
(273.667,46,o),
(259,44,cs),
(244.333,41.333,o),
(227,39.667,o),
(227,21,cs),
(227,3.667,o),
(242.333,0,o),
(261,0,cs),
(263.821,0,o),
(318.353,3,o),
(360,3,cs),
(395.97,3,o),
(439.855,1,o),
(472,1,cs),
(489.333,1,o),
(500.667,3,o),
(506,7,cs),
(511.333,11,o),
(514,16.667,o),
(514,24,cs),
(514,40,o),
(504.333,48,o),
(485,48,cs),
(379,48,l),
(379,60.446,o),
(372,107.46,o),
(372,159,cs),
(372,191.684,o),
(373,235.185,o),
(373,289.5,cs),
(373,343.706,o),
(374,383.541,o),
(374,409,cs),
(374,416.333,o),
(380,420,o),
(392,420,cs),
(390.699,420,o),
(461.929,417,o),
(499,417,cs),
(549,417,ls),
(565.667,417,o),
(574,410,o),
(574,396,cs),
(574,278,ls),
(574,222.508,o),
(571.65,33.453,o),
(566,-40,cs),
(558.238,-138.314,o),
(527.556,-174,o),
(474,-174,cs),
(417.333,-174,o),
(389,-163.667,o),
(389,-143,cs),
(389,-128.333,o),
(394.333,-125.333,o),
(405,-124,cs),
(422.333,-121.333,o),
(442,-117,o),
(442,-89,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
229 179 82 40 2 40
CALL[ ]	/* CallFunction */";
};
width = 701;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(542.768,-221,o),
(619.227,-193.843,o),
(635,-44,cs),
(641.116,6.969,o),
(642,101.643,o),
(642,226,cs),
(642,300.335,o),
(642.793,349.166,o),
(643.5,372.5,cs),
(643.844,383.868,o),
(644,400.879,o),
(644,410,cs),
(644,429.333,o),
(643.167,443,o),
(641.5,451,cs),
(639.833,459,o),
(633.333,463,o),
(622,463,cs),
(385,463,ls),
(381.667,463,o),
(379.5,465,o),
(378.5,469,cs),
(377.5,473,o),
(377,482.667,o),
(377,498,cs),
(377,546.172,o),
(376.553,611.881,o),
(394.5,680.5,cs),
(411.892,746.997,o),
(449.853,795,o),
(518,795,cs),
(588.689,795,o),
(620,744.983,o),
(620,697,cs),
(620,646.861,o),
(580,651.612,o),
(580,618,cs),
(580,595.333,o),
(597.333,583,o),
(620,583,cs),
(654.667,583,o),
(662,613.333,o),
(662,656,cs),
(662,798.777,o),
(584.58,825,o),
(522,825,cs),
(452.667,825,o),
(409.667,792.667,o),
(383,746,c),
(365.667,760.667,o),
(345,775,o),
(301,775,cs),
(216.36,775,o),
(163.262,721.541,o),
(137.5,652.5,cs),
(111.324,582.347,o),
(108,517.119,o),
(108,491,cs),
(108,476.333,o),
(106.667,463,o),
(96,463,cs),
(32,463,ls),
(20,463,o),
(11.667,462.5,o),
(7,461.5,cs),
(2.333,460.5,o),
(0,457.333,o),
(0,452,cs),
(0,448,o),
(2,444.167,o),
(6,440.5,cs),
(10,436.833,o),
(17.667,435,o),
(29,435,cs),
(96,435,ls),
(106.667,435,o),
(109,427.667,o),
(109,409,cs),
(109,276.335,o),
(111,210,o),
(111,210,c),
(111,162.236,o),
(109.377,76.912,o),
(105,-15,cs),
(104.333,-22.333,o),
(98.833,-27.167,o),
(88.5,-29.5,cs),
(78.167,-31.833,o),
(59,-34,o),
(31,-36,cs),
(16.333,-37.333,o),
(-1,-38.333,o),
(-1,-49,cs),
(-1,-54.333,o),
(2.333,-57.5,o),
(9,-58.5,cs),
(15.667,-59.5,o),
(23.667,-60,o),
(33,-60,cs),
(40.333,-60,o),
(51.667,-59.5,o),
(67,-58.5,cs),
(82.333,-57.5,o),
(99,-57,o),
(117,-57,cs),
(132.333,-57,o),
(148,-57.333,o),
(164,-58,cs),
(180,-58.667,o),
(193.667,-59,o),
(205,-59,cs),
(222.333,-59,o),
(233.833,-57.833,o),
(239.5,-55.5,cs),
(245.167,-53.167,o),
(248,-49.667,o),
(248,-45,cs),
(248,-35,o),
(238.333,-30,o),
(219,-30,cs),
(151,-30,l),
(151,424,ls),
(151,427.333,o),
(152,430,o),
(154,432,cs),
(156,434,o),
(161,435,o),
(169,435,cs),
(165.12,435,o),
(247.379,432,o),
(339,432,c),
(339.667,426,o),
(340,421.667,o),
(340,419,cs),
(340,416.333,o),
(340,413,o),
(340,409,cs),
(340,300,ls),
(340,282.248,o),
(341.483,83.898,o),
(335,45,cs),
(332.103,27.617,o),
(316.969,26.141,o),
(272,24,cs),
(257.333,22.667,o),
(240,21.667,o),
(240,11,cs),
(240,5.667,o),
(243.333,2.5,o),
(250,1.5,cs),
(256.667,0.5,o),
(264.667,0,o),
(274,0,cs),
(281.333,0,o),
(293.5,0.5,o),
(310.5,1.5,cs),
(327.5,2.5,o),
(345,3,o),
(363,3,cs),
(398.123,3,o),
(441.061,1,o),
(473,1,cs),
(490.333,1,o),
(501.667,2,o),
(507,4,cs),
(512.333,6,o),
(515,9.333,o),
(515,14,cs),
(515,23.333,o),
(505.333,28,o),
(486,28,cs),
(384,28,l),
(384,26.194,o),
(375,90.213,o),
(375,159,cs),
(375,191.519,o),
(376,237.52,o),
(376,297,cs),
(376,354.275,o),
(377,396.61,o),
(377,424,cs),
(377,431.333,o),
(383,435,o),
(395,435,cs),
(411.735,435,o),
(444.266,433,o),
(481,433,cs),
(495.616,433,o),
(530.279,432,o),
(585,432,cs),
(599.667,432,o),
(607,421.667,o),
(607,411,cs),
(607,312.333,o),
(606.167,221.333,o),
(605.5,144,cs),
(604.833,66.667,o),
(603,2.667,o),
(599,-40,cs),
(585.624,-181.787,o),
(515.238,-189,o),
(481,-189,cs),
(415.123,-189,o),
(392,-163.566,o),
(392,-143,cs),
(392,-125.667,o),
(400,-125.333,o),
(408,-124,cs),
(422.667,-122.667,o),
(445,-118.333,o),
(445,-89,cs),
(445,-63.667,o),
(428.667,-59,o),
(414,-59,cs),
(387.333,-59,o),
(358,-82.333,o),
(358,-121,cs),
(358,-173.476,o),
(391.874,-221,o),
(479,-221,cs)
);
},
{
closed = 1;
nodes = (
(156.333,463,o),
(154.333,464.333,o),
(153,467,cs),
(151.667,469.667,o),
(151,475.333,o),
(151,484,cs),
(151,510.726,o),
(150.41,565.887,o),
(170.5,632.5,cs),
(190.296,698.14,o),
(233.387,749,o),
(308,749,cs),
(346.667,749,o),
(364,735.333,o),
(372,722,c),
(338.667,636.667,o),
(339,548.333,o),
(339,463,c),
(159,463,l),
(159,463,l),
(159,463,l),
(159,463,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
215 210 174 14 2 40
CALL[ ]	/* CallFunction */";
};
width = 707;
}
);
note = f_f_j;
},
{
glyphname = f_f_k;
kernLeft = f_f;
kernRight = c_k;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(24.247,-108,o),
(92.344,-105,o),
(144,-105,cs),
(164.343,-105,o),
(183.098,-107,o),
(199,-107,cs),
(232.333,-107,o),
(257,-99.667,o),
(257,-69,cs),
(257,-29.77,o),
(230.529,-30,o),
(211,-30,cs),
(144,-30,l),
(144,400,ls),
(144,407.333,o),
(150,411,o),
(162,411,cs),
(216.077,411,o),
(224.902,411.881,o),
(280,414,c),
(282.667,391.333,o),
(283,363.667,o),
(283,337,cs),
(283,300,ls),
(283,205.642,o),
(279,98.983,o),
(279,77,cs),
(277.667,63.667,o),
(273.333,56.667,o),
(266,56,cs),
(251.333,53.333,o),
(230,47,o),
(230,27,cs),
(230,0.333,o),
(249.333,0,o),
(268,0,cs),
(275.333,0,o),
(287.5,0.5,o),
(304.5,1.5,cs),
(321.5,2.5,o),
(339,3,o),
(357,3,cs),
(372.333,3,o),
(386.5,2.667,o),
(399.5,2,cs),
(412.5,1.333,o),
(425,1,o),
(437,1,cs),
(471.667,1,o),
(479,10,o),
(479,30,cs),
(479,50,o),
(469.333,60,o),
(450,60,cs),
(371,60,l),
(371,400,ls),
(371,407.333,o),
(377,411,o),
(389,411,cs),
(404.161,411,o),
(428.403,409,o),
(455,409,cs),
(469.667,409,o),
(489,416.333,o),
(489,447,cs),
(489,473.667,o),
(474.333,487,o),
(457,487,cs),
(379,487,ls),
(376.333,487,o),
(374.333,488.167,o),
(373,490.5,cs),
(371.667,492.833,o),
(371,498.667,o),
(371,508,cs),
(371,608.56,o),
(383.21,751,o),
(529,751,cs),
(539.667,751,o),
(546.667,743.833,o),
(550,729.5,cs),
(553.333,715.167,o),
(555,687,o),
(555,645,cs),
(555,557.179,o),
(557,447.996,o),
(557,332,cs),
(557,195.721,o),
(554,103.367,o),
(554,70,cs),
(554,34,o),
(551.667,8.5,o),
(547,-6.5,cs),
(542.333,-21.5,o),
(532,-29.667,o),
(516,-31,cs),
(501.333,-32.333,o),
(489,-34.667,o),
(489,-60,cs),
(489,-84,o),
(515.667,-90,o),
(545,-90,cs),
(549,-90,o),
(556.833,-89.5,o),
(568.5,-88.5,cs),
(580.167,-87.5,o),
(590.333,-87,o),
(599,-87,cs),
(618.333,-87,o),
(634.833,-87.333,o),
(648.5,-88,cs),
(662.167,-88.667,o),
(679,-89,o),
(699,-89,cs),
(711,-89,o),
(726,-84.333,o),
(726,-63,cs),
(726,-38.403,o),
(723.178,-30,o),
(681,-30,cs),
(642,-30,l),
(642,8.486,o),
(643,91.051,o),
(643,185,c),
(660,205,l),
(665.561,194.673,o),
(694.083,133.713,o),
(741,38.5,cs),
(766.852,-13.965,o),
(808.158,-88,o),
(827,-88,cs),
(903.667,-88,o),
(958.833,-86.5,o),
(992.5,-83.5,cs),
(1026.167,-80.5,o),
(1043,-72.333,o),
(1043,-59,cs),
(1043,-32.333,o),
(1009.667,-27,o),
(963,-27,cs),
(936.333,-27,o),
(915,-24.667,o),
(899,-20,cs),
(883,-15.333,o),
(872.667,-10.333,o),
(868,-5,cs),
(832.595,42.207,o),
(790.987,111.635,o),
(722,257,c),
(760.667,293,o),
(795.667,327.333,o),
(825,358,cs),
(831,365.333,o),
(841.333,369.667,o),
(856,371,cs),
(895.333,374.333,o),
(924.333,378,o),
(943,382,cs),
(961.667,386,o),
(971,394.667,o),
(971,408,cs),
(971,420.667,o),
(957.167,429,o),
(929.5,433,cs),
(901.833,437,o),
(862,439,o),
(810,439,cs),
(736.667,439,o),
(700,424.667,o),
(700,396,cs),
(700,386.667,o),
(701.5,380.333,o),
(704.5,377,cs),
(707.5,373.667,o),
(710.667,372,o),
(714,372,cs),
(719,372,ls),
(721.667,372,o),
(723,370.333,o),
(723,367,cs),
(723,357.394,o),
(685.162,325.162,o),
(642,282,c),
(642,713,ls),
(642,768.288,o),
(628.883,825,o),
(532,825,cs),
(448,825,o),
(395.667,800.333,o),
(357,763,c),
(345,771,o),
(321.667,775,o),
(299,775,cs),
(188.329,775,o),
(119.972,739.109,o),
(87,684.5,cs),
(54.312,630.361,o),
(50,565.942,o),
(50,507,cs),
(50,496.333,o),
(47.333,487,o),
(38,487,cs),
(21,487,ls),
(-4.333,487,o),
(-24,483.667,o),
(-24,449,cs),
(-24,418.333,o),
(-0.667,411,o),
(22,411,cs),
(39,411,ls),
(49.667,411,o),
(51,410.667,o),
(51,404,cs),
(51,353.236,o),
(53,287.876,o),
(53,221,cs),
(53,181.961,o),
(51.771,59.564,o),
(47,-12,cs),
(45.667,-27.333,o),
(38,-35.333,o),
(24,-36,cs),
(8.008,-36,o),
(-25,-48.577,o),
(-25,-73,cs),
(-25,-99.667,o),
(-2,-108,o),
(26,-108,cs)
);
},
{
closed = 1;
nodes = (
(289.333,701,o),
(304.667,701,o),
(314,697,c),
(287.333,633,o),
(284,553.667,o),
(284,487,c),
(152,487,ls),
(146.667,487,o),
(144,491.333,o),
(144,500,cs),
(144,572.418,o),
(167.513,701,o),
(288,701,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
226 220 46 0 2 40
CALL[ ]	/* CallFunction */";
};
width = 1015;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(366,761.667,o),
(342.667,775,o),
(300,775,cs),
(201.115,775,o),
(138.759,733.009,o),
(109.5,675.5,cs),
(79.345,616.231,o),
(76.013,551.314,o),
(74,501,cs),
(74,491.667,o),
(72.667,478,o),
(62,478,cs),
(28,478,ls),
(4,478,o),
(-14,476.667,o),
(-14,450,cs),
(-14,427.333,o),
(2.333,420,o),
(25,420,cs),
(62,420,ls),
(67.333,420,o),
(70.833,419.5,o),
(72.5,418.5,cs),
(74.167,417.5,o),
(75,416,o),
(75,414,cs),
(75,380,o),
(75.333,347.167,o),
(76,315.5,cs),
(76.667,283.833,o),
(77,251,o),
(77,217,cs),
(77,176.41,o),
(75.915,75.469,o),
(71,-13,cs),
(70.333,-20.333,o),
(66.833,-25.667,o),
(60.5,-29,cs),
(54.167,-32.333,o),
(43,-34.667,o),
(27,-36,cs),
(12.154,-36,o),
(-15,-42.501,o),
(-15,-64,cs),
(-15,-89.139,o),
(10.613,-90,o),
(29,-90,cs),
(29.157,-90,o),
(90.957,-87,o),
(133,-87,cs),
(168.123,-87,o),
(211.061,-89,o),
(243,-89,cs),
(277.667,-89,o),
(295,-82.667,o),
(295,-60,cs),
(295,-32,o),
(276,-30,o),
(256,-30,cs),
(147,-30,l),
(147,409,ls),
(147,416.333,o),
(153,420,o),
(165,420,cs),
(241,420,ls),
(263.667,420,o),
(288,423.333,o),
(288,450,cs),
(288,471.67,o),
(262.23,478,o),
(243,478,cs),
(155,478,ls),
(149.667,478,o),
(147,478.333,o),
(147,489,cs),
(147,552.646,o),
(158.479,719,o),
(300,719,cs),
(321.333,719,o),
(331.667,710,o),
(341,702,c),
(386,743,l),
(386,743,l)
);
},
{
closed = 1;
nodes = (
(577,625,o),
(577.333,585.167,o),
(578,539.5,cs),
(578.667,493.833,o),
(579,437.667,o),
(579,371,cs),
(579,290.806,o),
(577.538,231.609,o),
(576.5,188,cs),
(575.437,143.367,o),
(574,98.01,o),
(574,43,cs),
(574,4.333,o),
(563,-24.333,o),
(527,-31,cs),
(504.333,-35,o),
(493,-32.333,o),
(493,-55,cs),
(493,-73.667,o),
(513.333,-78,o),
(536,-78,cs),
(545.333,-78,o),
(557.167,-77.667,o),
(571.5,-77,cs),
(585.833,-76.333,o),
(598.333,-76,o),
(609,-76,cs),
(634.333,-76,o),
(655.167,-76.333,o),
(671.5,-77,cs),
(687.833,-77.667,o),
(703.333,-78,o),
(718,-78,cs),
(734,-78,o),
(747,-74.667,o),
(747,-56,cs),
(747,-40,o),
(735.667,-31,o),
(705,-31,cs),
(644,-31,l),
(644,186,l),
(677,218,l),
(684.451,204.34,o),
(713.188,144.079,o),
(759,55,cs),
(785.972,2.554,o),
(830.483,-76,o),
(849,-76,cs),
(916.333,-75.333,o),
(964.5,-73.833,o),
(993.5,-71.5,cs),
(1022.5,-69.167,o),
(1037,-62.333,o),
(1037,-51,cs),
(1037,-29.676,o),
(1001.81,-26,o),
(971,-26,cs),
(919.063,-26,o),
(903.65,-22.65,o),
(888,-7,cs),
(852.898,31.293,o),
(778.081,171.043,o),
(734,269,c),
(750.947,283.687,o),
(767.095,300.095,o),
(779.5,312.5,cs),
(794.536,327.536,o),
(815.116,346.247,o),
(840,370,cs),
(847.333,377.333,o),
(857.667,381.667,o),
(871,383,cs),
(905.667,386.333,o),
(931.167,389.667,o),
(947.5,393,cs),
(963.833,396.333,o),
(972,403,o),
(972,413,cs),
(972,423,o),
(964.5,429.167,o),
(949.5,431.5,cs),
(934.5,433.833,o),
(910.333,435,o),
(877,435,cs),
(798,435,ls),
(773.333,435,o),
(754.333,433.833,o),
(741,431.5,cs),
(727.667,429.167,o),
(721,422.333,o),
(721,411,cs),
(721,395,o),
(731.333,388,o),
(746,388,cs),
(750,388,ls),
(756,388,o),
(759,384.667,o),
(759,378,cs),
(759,372.667,o),
(749.5,361.5,o),
(730.5,344.5,cs),
(711.5,327.5,o),
(682.333,301,o),
(643,265,c),
(643,713,ls),
(643,765.323,o),
(633.695,825,o),
(535,825,cs),
(333.742,825,o),
(308.823,641.584,o),
(306,523,cs),
(305.333,509,o),
(304.333,498,o),
(303,490,cs),
(301.667,482,o),
(298,478,o),
(292,478,cs),
(248,478,ls),
(224,478,o),
(207,476,o),
(207,452,cs),
(207,437.333,o),
(222.333,420,o),
(245,420,cs),
(292,420,ls),
(302.667,420,o),
(305,412.667,o),
(305,394,cs),
(305,300,ls),
(305,295.628,o),
(305.993,94.96,o),
(301,65,cs),
(299.667,50.333,o),
(295,48,o),
(267,44,cs),
(252.333,41.333,o),
(233,39.667,o),
(233,21,cs),
(233,-0.333,o),
(250.333,0,o),
(269,0,cs),
(276.333,0,o),
(288.5,0.5,o),
(305.5,1.5,cs),
(322.5,2.5,o),
(340,3,o),
(358,3,cs),
(393.123,3,o),
(436.061,1,o),
(468,1,cs),
(485.333,1,o),
(496.667,2.833,o),
(502,6.5,cs),
(507.333,10.167,o),
(510,16,o),
(510,24,cs),
(510,40,o),
(500.333,48,o),
(481,48,cs),
(372,48,l),
(372,409,ls),
(372,416.333,o),
(378,420,o),
(390,420,cs),
(405.161,420,o),
(429.403,418,o),
(456,418,cs),
(470.667,418,o),
(488,424.333,o),
(488,447,cs),
(488,468.333,o),
(471.333,478,o),
(458,478,cs),
(380,478,ls),
(377.333,478,o),
(375.333,479.167,o),
(374,481.5,cs),
(372.667,483.833,o),
(372,489.667,o),
(372,499,cs),
(372,581.112,o),
(372.2,769,o),
(530,769,cs),
(577.788,769,o),
(577,730.808,o),
(577,659,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
228 162 82 40 2 40
CALL[ ]	/* CallFunction */";
};
width = 1020;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(40.333,-60,o),
(51.667,-59.5,o),
(67,-58.5,cs),
(82.333,-57.5,o),
(99,-57,o),
(117,-57,cs),
(132.333,-57,o),
(148,-57.333,o),
(164,-58,cs),
(180,-58.667,o),
(193.667,-59,o),
(205,-59,cs),
(222.333,-59,o),
(233.833,-57.833,o),
(239.5,-55.5,cs),
(245.167,-53.167,o),
(248,-49.667,o),
(248,-45,cs),
(248,-35,o),
(238.333,-30,o),
(219,-30,cs),
(151,-30,l),
(151,424,ls),
(151,427.333,o),
(152,430,o),
(154,432,cs),
(156,434,o),
(161,435,o),
(169,435,cs),
(155.827,435,o),
(249.468,433,o),
(336,433,c),
(336,428.333,o),
(336.167,424.167,o),
(336.5,420.5,cs),
(336.833,416.833,o),
(337,413,o),
(337,409,cs),
(337,300,ls),
(337,299.577,o),
(338.059,80.414,o),
(333,45,cs),
(330.279,28.672,o),
(314.538,26.277,o),
(269,24,cs),
(254.333,22.667,o),
(237,21.667,o),
(237,11,cs),
(237,5.667,o),
(240.333,2.5,o),
(247,1.5,cs),
(253.667,0.5,o),
(261.667,0,o),
(271,0,cs),
(278.333,0,o),
(290.5,0.5,o),
(307.5,1.5,cs),
(324.5,2.5,o),
(342,3,o),
(360,3,cs),
(395.123,3,o),
(438.061,1,o),
(470,1,cs),
(487.333,1,o),
(498.667,2,o),
(504,4,cs),
(509.333,6,o),
(512,9.333,o),
(512,14,cs),
(512,23.333,o),
(502.333,28,o),
(483,28,cs),
(374,28,l),
(374,424,ls),
(374,431.333,o),
(380,435,o),
(392,435,cs),
(407.161,435,o),
(431.403,433,o),
(458,433,cs),
(472.667,433,o),
(487,436.333,o),
(487,447,cs),
(487,457.667,o),
(473.333,463,o),
(460,463,cs),
(382,463,ls),
(379.333,463,o),
(377.333,464.333,o),
(376,467,cs),
(374.667,469.667,o),
(374,475.333,o),
(374,484,cs),
(374,533.09,o),
(374.976,608.124,o),
(394.5,678,cs),
(414.05,747.97,o),
(456.775,799,o),
(532,799,cs),
(608.972,799,o),
(609,747.506,o),
(609,683,cs),
(609,634.198,o),
(610,555.752,o),
(610,436,cs),
(610,377.303,o),
(611.919,111.167,o),
(605,-3,cs),
(603.667,-21,o),
(583,-31,o),
(543,-33,cs),
(520,-34,ls),
(512,-34.667,o),
(506.5,-36,o),
(503.5,-38,cs),
(500.5,-40,o),
(499,-42.667,o),
(499,-46,cs),
(499,-49.333,o),
(500.667,-52.167,o),
(504,-54.5,cs),
(507.333,-56.833,o),
(513.667,-58,o),
(523,-58,cs),
(543,-58,o),
(561.5,-57.833,o),
(578.5,-57.5,cs),
(595.5,-57.167,o),
(610.667,-57,o),
(624,-57,cs),
(642.667,-57,o),
(661.833,-57.333,o),
(681.5,-58,cs),
(701.167,-58.667,o),
(714.333,-59,o),
(721,-59,cs),
(735.667,-59,o),
(744.667,-57.333,o),
(748,-54,cs),
(751.333,-50.667,o),
(753,-47.333,o),
(753,-44,cs),
(753,-40,o),
(751,-37,o),
(747,-35,cs),
(743,-33,o),
(735.667,-32,o),
(725,-32,cs),
(647,-32,l),
(647,-14,o),
(646.833,14.5,o),
(646.5,53.5,cs),
(646.167,92.5,o),
(646,137,o),
(646,187,c),
(701,239,l),
(713.349,216.36,o),
(743.575,155.993,o),
(787,76,cs),
(828.823,-1.043,o),
(865.003,-55,o),
(881,-55,cs),
(933.667,-55,o),
(971.5,-54.333,o),
(994.5,-53,cs),
(1017.5,-51.667,o),
(1029,-46.667,o),
(1029,-38,cs),
(1029,-29.333,o),
(1013.667,-25,o),
(983,-25,cs),
(955,-25,o),
(934.333,-24.5,o),
(921,-23.5,cs),
(907.667,-22.5,o),
(899,-19.333,o),
(895,-14,cs),
(824.679,71.704,o),
(748.779,236.662,o),
(737,272,c),
(759.198,291.238,o),
(790.623,322.105,o),
(862,390,cs),
(869.333,397.333,o),
(879.667,401.667,o),
(893,403,cs),
(921,405.667,o),
(941.5,408,o),
(954.5,410,cs),
(967.5,412,o),
(974,415.667,o),
(974,421,cs),
(974,427,o),
(964.333,430.833,o),
(945,432.5,cs),
(925.667,434.167,o),
(895.333,435,o),
(854,435,cs),
(812.667,435,o),
(784.167,434.167,o),
(768.5,432.5,cs),
(752.833,430.833,o),
(745,426.667,o),
(745,420,cs),
(745,417.333,o),
(746.333,414.833,o),
(749,412.5,cs),
(751.667,410.167,o),
(757,408.667,o),
(765,408,cs),
(799,406,ls),
(807,406,o),
(811,403.667,o),
(811,399,cs),
(811,384.843,o),
(724.426,304.08,o),
(645,236,c),
(645,547,ls),
(645,587,o),
(645.167,620.833,o),
(645.5,648.5,cs),
(645.833,676.167,o),
(646,697.667,o),
(646,713,cs),
(646,755.992,o),
(641.992,825,o),
(540,825,cs),
(468,825,o),
(416,790,o),
(388,742,c),
(365.333,760.667,o),
(346,775,o),
(302,775,cs),
(217.016,775,o),
(163.301,721.115,o),
(137.5,653,cs),
(110.785,582.472,o),
(108,515.753,o),
(108,491,cs),
(108,476.333,o),
(106.667,463,o),
(96,463,cs),
(32,463,ls),
(20,463,o),
(11.667,462.5,o),
(7,461.5,cs),
(2.333,460.5,o),
(0,457.333,o),
(0,452,cs),
(0,448,o),
(2,444.167,o),
(6,440.5,cs),
(10,436.833,o),
(17.667,435,o),
(29,435,cs),
(96,435,ls),
(106.667,435,o),
(109,427.667,o),
(109,409,cs),
(109,276.335,o),
(111,210,o),
(111,210,c),
(111,162.236,o),
(109.377,76.912,o),
(105,-15,cs),
(104.333,-22.333,o),
(98.833,-27.167,o),
(88.5,-29.5,cs),
(78.167,-31.833,o),
(59,-34,o),
(31,-36,cs),
(16.333,-37.333,o),
(-1,-38.333,o),
(-1,-49,cs),
(-1,-54.333,o),
(2.333,-57.5,o),
(9,-58.5,cs),
(15.667,-59.5,o),
(23.667,-60,o),
(33,-60,cs)
);
},
{
closed = 1;
nodes = (
(156.333,463,o),
(154.333,464.333,o),
(153,467,cs),
(151.667,469.667,o),
(151,475.333,o),
(151,484,cs),
(151,509.815,o),
(150.381,564.791,o),
(170.5,631.5,cs),
(190.163,696.698,o),
(234.312,749,o),
(308,749,cs),
(352,749,o),
(368.333,730.667,o),
(375,716,c),
(343.403,644.907,o),
(338.415,570.682,o),
(336,491,cs),
(335.333,478.333,o),
(335,471.167,o),
(335,469.5,cs),
(335,467.833,o),
(335,465.667,o),
(335,463,c),
(159,463,l),
(159,463,l),
(159,463,l),
(159,463,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
240 230 165 119 2 40
CALL[ ]	/* CallFunction */";
};
width = 1027;
}
);
note = f_f_k;
},
{
glyphname = f_f_l;
kernLeft = f_f;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(30.734,-110,o),
(86.134,-107,o),
(126,-107,cs),
(156.329,-107,o),
(192.748,-109,o),
(231,-109,cs),
(265.667,-109,o),
(290,-101.667,o),
(290,-71,cs),
(290,-35,o),
(270.667,-32,o),
(244,-32,cs),
(146,-32,l),
(146,392,ls),
(146,395.333,o),
(147,398,o),
(149,400,cs),
(151,402,o),
(156,403,o),
(164,403,cs),
(219.159,403,o),
(224.386,407,o),
(268,407,c),
(271.406,386.564,o),
(272,338.778,o),
(272,292,cs),
(272,147.161,o),
(268,113.943,o),
(268,69,cs),
(268,55.667,o),
(265.667,52.667,o),
(255,50,cs),
(244.292,46.431,o),
(206,42.725,o),
(206,19,cs),
(206,-5.998,o),
(231.778,-8,o),
(257,-8,cs),
(264.333,-8,o),
(276.667,-7.5,o),
(294,-6.5,cs),
(311.333,-5.5,o),
(328,-5,o),
(344,-5,cs),
(361.333,-5,o),
(377.833,-5.333,o),
(393.5,-6,cs),
(409.167,-6.667,o),
(423.667,-7,o),
(437,-7,cs),
(471.667,-7,o),
(478,1.667,o),
(478,23,cs),
(478,42.333,o),
(468.333,52,o),
(449,52,cs),
(360,52,l),
(360,392,ls),
(360,399.333,o),
(366.667,403,o),
(380,403,cs),
(392.683,403,o),
(416.572,401,o),
(443,401,cs),
(459,401,o),
(478,408.667,o),
(478,438,cs),
(478,467.333,o),
(462,479,o),
(446,479,cs),
(368,479,ls),
(362.667,479,o),
(360,481,o),
(360,485,cs),
(360,517.816,o),
(360.725,580.686,o),
(379.5,638,cs),
(398.357,695.563,o),
(438.572,743,o),
(513,743,cs),
(526.333,743,o),
(534.833,737.833,o),
(538.5,727.5,cs),
(542.167,717.167,o),
(544,699.667,o),
(544,675,cs),
(544,626.198,o),
(545,547.752,o),
(545,428,cs),
(545,369.303,o),
(546.919,103.167,o),
(540,-11,cs),
(538.667,-27,o),
(538.333,-39,o),
(529,-39,cs),
(506,-40,ls),
(479.333,-41.333,o),
(468,-55.667,o),
(468,-69,cs),
(468,-87.667,o),
(485,-98,o),
(509,-98,cs),
(528.333,-98,o),
(547.167,-97.833,o),
(565.5,-97.5,cs),
(583.833,-97.167,o),
(597.333,-97,o),
(606,-97,cs),
(635.109,-97,o),
(666.701,-99,o),
(701,-99,cs),
(739.667,-99,o),
(756,-86.667,o),
(756,-68,cs),
(756,-49.333,o),
(732.333,-40,o),
(711,-40,cs),
(633,-40,l),
(633,9.205,o),
(632,91.206,o),
(632,206,cs),
(632,325.164,o),
(631,426.497,o),
(631,510,cs),
(631,571.572,o),
(630.797,616.07,o),
(631.5,643.5,cs),
(631.993,662.724,o),
(632,687.714,o),
(632,705,cs),
(632,762.202,o),
(621.012,817,o),
(518,817,cs),
(444.667,817,o),
(396,795.333,o),
(360,762,c),
(341.333,772.667,o),
(323,775,o),
(299,775,cs),
(78.198,775,o),
(52,629.267,o),
(52,491,cs),
(52,483,o),
(48,479,o),
(40,479,cs),
(27,479,ls),
(4.557,479,o),
(-22,479.134,o),
(-22,441,cs),
(-22,410.333,o),
(1.333,403,o),
(24,403,cs),
(40,403,ls),
(46,403,o),
(49.667,402.667,o),
(51,402,cs),
(52.333,401.333,o),
(53,400.333,o),
(53,399,cs),
(53,367,o),
(53.333,336.667,o),
(54,308,cs),
(54.667,279.333,o),
(55,249,o),
(55,217,cs),
(55,184.62,o),
(53.923,56.841,o),
(49,-17,cs),
(47.667,-31.667,o),
(43.333,-36.667,o),
(26,-38,cs),
(7.773,-38,o),
(-23,-47.945,o),
(-23,-75,cs),
(-23,-105.667,o),
(1.333,-110,o),
(28,-110,cs)
);
},
{
closed = 1;
nodes = (
(300.333,701,o),
(306,699.667,o),
(312,697,c),
(284.696,644.343,o),
(306.469,479,o),
(272,479,cs),
(154,479,ls),
(148.667,479,o),
(146,480.667,o),
(146,484,cs),
(146,626.022,o),
(161.982,701,o),
(295,701,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
42 1 9 4 198 1 3 17 146 1 13 12 87 11 2 1 13 4 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
42 1 9 4 198 1 3 17 146 1 13 12 87 11 2 16 13 4 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 4 20 1 17 3 4 17 91 16 8 6 3 1 7 19 2 0 1 0 87 0 9 9 5 83 0 5 5 14 67 15 14 11 3 2 2 3 83 18 10 2 3 3 23 67 0 12 12 13 83 0 13 13 24 13 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 4 20 1 17 3 4 17 91 16 8 6 3 1 7 19 2 0 1 0 87 0 9 9 5 83 0 5 5 14 67 15 14 11 3 2 2 3 83 18 10 2 3 3 23 67 0 12 12 13 83 0 13 13 16 13 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 4 20 1 17 3 4 17 91 16 8 6 3 1 7 19 2 0 1 0 87 0 9 9 5 83 0 5 5 14 67 15 14 11 3 2 2 3 83 18 10 2 3 3 23 67 0 12 12 13 83 0 13 13 24 13 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 4 20 1 17 3 4 17 91 18 10 2 3 15 14 11 3 2 12 3 2 91 16 8 6 3 1 7 19 2 0 1 0 87 0 9 9 5 83 0 5 5 14 67 0 12 12 13 83 0 13 13 24 13 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 4 20 1 17 3 4 17 91 18 10 2 3 15 14 11 3 2 12 3 2 91 0 7 0 1 7 79 16 8 6 3 1 19 1 0 1 0 87 0 9 9 5 83 0 5 5 14 67 0 12 12 13 83 0 13 13 24 13 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 4 20 1 17 3 4 17 91 18 10 2 3 15 14 11 3 2 12 3 2 91 8 6 2 1 0 7 0 1 7 91 0 16 19 1 0 16 0 87 0 9 9 5 83 0 5 5 14 67 0 12 12 13 83 0 13 13 24 13 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 48 values pushed */
186 185 1 0 194 191 185 199 186 199 170 168 165 162 161 159 138 129 126 124 122 115 111 108 101 99 85 82 78 68 64 62 46 44 40 38 33 29 24 21 8 7 0 184 1 174 21 15
CALL[ ]	/* CallFunction */";
};
width = 703;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(367,761.667,o),
(343.667,775,o),
(301,775,cs),
(202.288,775,o),
(139.368,731.726,o),
(110.5,672,cs),
(80.346,609.612,o),
(77.026,543.672,o),
(75,491,cs),
(75,481.667,o),
(73.667,473,o),
(63,473,cs),
(29,473,ls),
(5,473,o),
(-13,471.667,o),
(-13,445,cs),
(-13,422.333,o),
(3.333,415,o),
(26,415,cs),
(63,415,ls),
(68.333,415,o),
(71.833,414.5,o),
(73.5,413.5,cs),
(75.167,412.5,o),
(76,411,o),
(76,409,cs),
(76,377,o),
(76.333,345,o),
(77,313,cs),
(77.667,281,o),
(78,249,o),
(78,217,cs),
(78,176.732,o),
(76.914,72.445,o),
(72,-16,cs),
(71.333,-23.333,o),
(67.833,-28.333,o),
(61.5,-31,cs),
(55.167,-33.667,o),
(44,-35.667,o),
(28,-37,cs),
(13.154,-37,o),
(-14,-43.501,o),
(-14,-65,cs),
(-14,-90.139,o),
(11.613,-91,o),
(30,-91,cs),
(30.157,-91,o),
(91.957,-88,o),
(134,-88,cs),
(169.123,-88,o),
(212.061,-90,o),
(244,-90,cs),
(278.667,-90,o),
(296,-83.667,o),
(296,-61,cs),
(296,-33,o),
(277,-31,o),
(257,-31,cs),
(148,-31,l),
(148,404,ls),
(148,407.333,o),
(149,410,o),
(151,412,cs),
(153,414,o),
(158,415,o),
(166,415,cs),
(181.161,415,o),
(205.403,413,o),
(232,413,cs),
(248.644,413,o),
(271,414.261,o),
(271,445,cs),
(271,470.333,o),
(247.333,473,o),
(234,473,cs),
(156,473,ls),
(150.667,473,o),
(148,476.667,o),
(148,484,cs),
(148,575.282,o),
(149.329,719,o),
(301,719,cs),
(322.333,719,o),
(332.667,710,o),
(342,702,c),
(387,743,l),
(387,743,l)
);
},
{
closed = 1;
nodes = (
(318.266,820,o),
(297.662,620.142,o),
(295,503,cs),
(293.667,484.333,o),
(292,473,o),
(280,473,cs),
(237,473,ls),
(213,473,o),
(195,467,o),
(195,443,cs),
(195,424.333,o),
(208,415,o),
(234,415,cs),
(281,415,ls),
(291.667,415,o),
(294,407.667,o),
(294,389,cs),
(294,295,ls),
(294,290.628,o),
(294.993,89.96,o),
(290,60,cs),
(289.333,52.667,o),
(287,48,o),
(283,46,cs),
(279,44,o),
(270,42,o),
(256,40,cs),
(238.133,36.427,o),
(214,33.942,o),
(214,16,cs),
(214,-4.016,o),
(240.954,-5,o),
(258,-5,cs),
(265.333,-5,o),
(277.5,-4.5,o),
(294.5,-3.5,cs),
(311.5,-2.5,o),
(329,-2,o),
(347,-2,cs),
(382.123,-2,o),
(425.061,-4,o),
(457,-4,cs),
(474.333,-4,o),
(485.667,-2.167,o),
(491,1.5,cs),
(496.333,5.167,o),
(499,11,o),
(499,19,cs),
(499,35,o),
(489.333,43,o),
(470,43,cs),
(361,43,l),
(361,404,ls),
(361,411.333,o),
(367,415,o),
(379,415,cs),
(394.161,415,o),
(418.403,413,o),
(445,413,cs),
(459.667,413,o),
(477,419.333,o),
(477,442,cs),
(477,463.333,o),
(460.333,473,o),
(447,473,cs),
(369,473,ls),
(363.667,473,o),
(361,475,o),
(361,479,cs),
(361,522.518,o),
(361.837,591.373,o),
(381.5,654.5,cs),
(400.422,715.251,o),
(442.415,764,o),
(519,764,cs),
(567.36,764,o),
(566,723.858,o),
(566,678,cs),
(566,629.198,o),
(567,550.752,o),
(567,431,cs),
(567,372.303,o),
(568.919,106.167,o),
(562,-8,cs),
(560.667,-25.333,o),
(551.333,-38,o),
(530,-38,cs),
(507,-38,ls),
(491,-38,o),
(476,-50.333,o),
(476,-61,cs),
(476,-74.333,o),
(491.333,-83,o),
(510,-83,cs),
(530,-83,o),
(548.5,-82.833,o),
(565.5,-82.5,cs),
(582.5,-82.167,o),
(597.667,-82,o),
(611,-82,cs),
(629.667,-82,o),
(648.833,-82.333,o),
(668.5,-83,cs),
(688.167,-83.667,o),
(701.333,-84,o),
(708,-84,cs),
(737.333,-84,o),
(750,-69.667,o),
(750,-59,cs),
(750,-44.333,o),
(733.333,-37,o),
(712,-37,cs),
(634,-37,l),
(634,14.346,o),
(633,95.846,o),
(633,207.5,cs),
(633,307.935,o),
(632,413.425,o),
(632,524,cs),
(632,576.757,o),
(631.802,617.087,o),
(632.5,645,cs),
(633.056,667.252,o),
(633,690.571,o),
(633,708,cs),
(633,744.586,o),
(634.742,820,o),
(524,820,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
90 1 0 13 216 0 2 1 0 131 58 2 3 17 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 8 0 0 1 8 0 91 12 10 5 3 3 11 1 4 3 4 87 0 13 13 9 83 20 1 9 9 12 67 18 15 6 3 2 2 1 83 19 14 7 3 1 1 23 67 0 16 16 17 83 0 17 17 16 17 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 8 0 0 1 8 0 91 19 14 7 3 1 18 15 6 3 2 16 1 2 91 12 10 5 3 3 11 1 4 3 4 87 0 13 13 9 83 20 1 9 9 12 67 0 16 16 17 83 0 17 17 16 17 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 12 3 11 3 12 96 0 8 0 0 1 8 0 91 19 14 7 3 1 18 15 6 3 2 16 1 2 91 0 11 4 3 11 79 10 5 2 3 0 4 3 4 87 0 13 13 9 83 20 1 9 9 12 67 0 16 16 17 83 0 17 17 16 17 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 8 0 0 1 8 0 91 19 14 7 3 1 18 15 6 3 2 16 1 2 91 12 10 2 5 0 11 4 5 11 91 0 3 0 4 3 4 87 0 13 13 9 83 20 1 9 9 12 67 0 16 16 17 83 0 17 17 16 17 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 8 0 0 1 8 0 91 19 14 7 3 1 18 15 6 3 2 16 1 2 91 12 10 2 5 0 11 4 5 11 91 0 3 0 4 3 4 87 0 13 13 9 83 20 1 9 9 14 67 0 16 16 17 83 0 17 17 16 17 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
92 91 214 211 208 205 186 175 172 170 168 161 157 154 147 145 129 126 122 114 110 108 91 220 92 220 40 52 61 23 212 35 118 53 34 21 24
CALL[ ]	/* CallFunction */";
};
width = 711;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(40.333,-60,o),
(51.667,-59.5,o),
(67,-58.5,cs),
(82.333,-57.5,o),
(99,-57,o),
(117,-57,cs),
(132.333,-57,o),
(148,-57.333,o),
(164,-58,cs),
(180,-58.667,o),
(194,-59,o),
(206,-59,cs),
(223.333,-59,o),
(234.667,-57.833,o),
(240,-55.5,cs),
(245.333,-53.167,o),
(248,-49.667,o),
(248,-45,cs),
(248,-35,o),
(238.333,-30,o),
(219,-30,cs),
(151,-30,l),
(151,424,ls),
(151,427.333,o),
(152,430,o),
(154,432,cs),
(156,434,o),
(161,435,o),
(169,435,cs),
(194.376,435,o),
(254.817,433,o),
(324,433,c),
(324,420.076,o),
(325,369.684,o),
(325,300,cs),
(325,299.577,o),
(326.059,80.414,o),
(321,45,cs),
(318.335,31.674,o),
(307.695,26.668,o),
(257,24,cs),
(242.333,22.667,o),
(225,21.667,o),
(225,11,cs),
(225,5.667,o),
(228.333,2.5,o),
(235,1.5,cs),
(241.667,0.5,o),
(249.667,0,o),
(259,0,cs),
(267,0,o),
(279,0.5,o),
(295,1.5,cs),
(311,2.5,o),
(329.667,3,o),
(351,3,cs),
(378.195,3,o),
(416.166,1,o),
(457,1,cs),
(474.333,1,o),
(485.833,2,o),
(491.5,4,cs),
(497.167,6,o),
(500,9,o),
(500,13,cs),
(500,23,o),
(490.333,28,o),
(471,28,cs),
(362,28,l),
(362,424,ls),
(362,430.667,o),
(364.667,435,o),
(378,435,cs),
(386.667,435,o),
(398.333,434.667,o),
(413,434,cs),
(427.667,433.333,o),
(439.333,433,o),
(448,433,cs),
(462.667,433,o),
(475,436,o),
(475,448,cs),
(475,456,o),
(464,463,o),
(448,463,cs),
(370,463,ls),
(367.333,463,o),
(365.333,464.333,o),
(364,467,cs),
(362.667,469.667,o),
(362,475.333,o),
(362,484,cs),
(362,537.109,o),
(362.489,615.314,o),
(383,683,cs),
(403.701,751.313,o),
(448.427,799,o),
(527,799,cs),
(597.151,799,o),
(597,738.223,o),
(597,683,cs),
(597,634.198,o),
(598,555.752,o),
(598,436,cs),
(598,377.303,o),
(599.919,111.167,o),
(593,-3,cs),
(591.667,-21.667,o),
(568.333,-30.333,o),
(531,-33,cs),
(508,-34,ls),
(494,-34.667,o),
(487,-39,o),
(487,-47,cs),
(487,-54.333,o),
(495,-58,o),
(511,-58,cs),
(557.968,-58,o),
(571.053,-57,o),
(618,-57,cs),
(631.333,-57,o),
(647.833,-57.333,o),
(667.5,-58,cs),
(687.167,-58.667,o),
(704,-59,o),
(718,-59,cs),
(732.667,-59,o),
(741,-50.667,o),
(741,-44,cs),
(741,-40,o),
(739,-37,o),
(735,-35,cs),
(731,-33,o),
(723.667,-32,o),
(713,-32,cs),
(635,-32,l),
(635,25.697,o),
(634,106.697,o),
(634,211,cs),
(634,329.182,o),
(633,422.549,o),
(633,547,cs),
(633,587,o),
(633.167,620.833,o),
(633.5,648.5,cs),
(633.833,676.167,o),
(634,697.667,o),
(634,713,cs),
(634,750.377,o),
(629.659,825,o),
(532,825,cs),
(458.667,825,o),
(410.667,795.667,o),
(380,749,c),
(364,762.333,o),
(342.667,775,o),
(304,775,cs),
(213.61,775,o),
(163.475,718.667,o),
(138,654,cs),
(110.323,583.742,o),
(108,515.754,o),
(108,491,cs),
(108,476.333,o),
(106.667,463,o),
(96,463,cs),
(32,463,ls),
(20,463,o),
(11.667,462.5,o),
(7,461.5,cs),
(2.333,460.5,o),
(0,457.333,o),
(0,452,cs),
(0,448,o),
(2,444.167,o),
(6,440.5,cs),
(10,436.833,o),
(17.667,435,o),
(29,435,cs),
(96,435,ls),
(106.667,435,o),
(109,427.667,o),
(109,409,cs),
(109,377,o),
(109.333,345,o),
(110,313,cs),
(110.667,281,o),
(111,249,o),
(111,217,cs),
(111,138.848,o),
(108.589,60.375,o),
(105,-15,cs),
(104.333,-22.333,o),
(98.5,-27.167,o),
(87.5,-29.5,cs),
(76.5,-31.833,o),
(57.667,-34,o),
(31,-36,cs),
(16.333,-37.333,o),
(-1,-38.333,o),
(-1,-49,cs),
(-1,-54.333,o),
(2.333,-57.5,o),
(9,-58.5,cs),
(15.667,-59.5,o),
(23.667,-60,o),
(33,-60,cs)
);
},
{
closed = 1;
nodes = (
(156.333,463,o),
(154.333,464.333,o),
(153,467,cs),
(151.667,469.667,o),
(151,475.333,o),
(151,484,cs),
(151,511.403,o),
(150.347,567.239,o),
(170.5,633,cs),
(190.532,698.368,o),
(232.995,749,o),
(309,749,cs),
(341,749,o),
(357.333,739,o),
(368,727,c),
(328,641.667,o),
(323,551,o),
(323,463,c),
(159,463,l),
(159,463,l),
(159,463,l),
(159,463,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
180 1 5 16 102 1 7 6 142 38 2 1 8 3 66 174 1 16 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 15 0 16 5 15 16 91 11 3 2 1 12 1 2 1 2 87 0 4 4 0 83 18 1 0 0 12 67 13 10 2 6 6 5 83 19 17 14 3 5 5 23 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 15 0 16 5 15 16 91 19 17 14 3 5 13 10 2 6 7 5 6 91 11 3 2 1 12 1 2 1 2 87 0 4 4 0 83 18 1 0 0 12 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 15 0 16 5 15 16 91 19 17 14 3 5 13 10 2 6 7 5 6 91 11 3 2 1 12 1 2 1 2 87 0 4 4 0 83 18 1 0 0 14 67 9 1 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 46 values pushed */
177 177 1 0 177 193 177 192 184 182 172 170 162 159 155 152 134 126 123 121 118 112 98 97 92 82 79 77 74 69 65 62 54 52 35 33 31 21 17 15 0 176 1 176 20 15
CALL[ ]	/* CallFunction */";
};
width = 723;
}
);
note = f_f_l;
},
{
glyphname = f_h;
kernLeft = f;
kernRight = c_h;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(220.386,825,o),
(152.783,778.058,o),
(119.5,712.5,cs),
(85.134,644.81,o),
(78.964,566.88,o),
(77,506,cs),
(75.667,487.333,o),
(73.667,479,o),
(63,479,cs),
(40,479,ls),
(16,479,o),
(-1,474.667,o),
(-1,452,cs),
(-1,433.333,o),
(5,411,o),
(37,411,cs),
(63,411,ls),
(73.667,411,o),
(76,403.667,o),
(76,385,cs),
(76,300,ls),
(76,264.155,o),
(76.983,116.861,o),
(72,77,cs),
(70.667,66.333,o),
(67,56,o),
(59,56,cs),
(31,54.667,o),
(18,52.333,o),
(18,27,cs),
(18,1.667,o),
(38.333,0,o),
(61,0,cs),
(68.333,0,o),
(80.5,0.5,o),
(97.5,1.5,cs),
(114.5,2.5,o),
(132,3,o),
(150,3,cs),
(165.333,3,o),
(177.5,2.667,o),
(186.5,2,cs),
(195.5,1.333,o),
(206,1,o),
(218,1,cs),
(252.667,1,o),
(261,14,o),
(261,30,cs),
(261,54,o),
(251,60,o),
(231,60,cs),
(164,60,l),
(164,400,ls),
(164,407.333,o),
(170,411,o),
(182,411,cs),
(197.161,411,o),
(221.403,409,o),
(248,409,cs),
(265.333,409,o),
(285,416.333,o),
(285,447,cs),
(285,469.667,o),
(268.667,479,o),
(250,479,cs),
(172,479,ls),
(166.667,479,o),
(164,480.667,o),
(164,484,cs),
(164,527.668,o),
(165.046,589.613,o),
(184.5,649,cs),
(203.865,708.113,o),
(248.209,751,o),
(322,751,cs),
(332.667,751,o),
(347,745,o),
(347,725,cs),
(347,574,ls),
(347,532.667,o),
(347.333,486.667,o),
(348,436,cs),
(348,327.295,o),
(342.644,136.881,o),
(341,104,cs),
(340.333,88,o),
(338.667,77,o),
(336,71,cs),
(333.333,65,o),
(329,62,o),
(323,62,cs),
(316.333,62,o),
(306,51,o),
(306,35,cs),
(306,16.333,o),
(318,0,o),
(342,0,cs),
(356.667,0,o),
(368,0.5,o),
(376,1.5,cs),
(384,2.5,o),
(395.667,3,o),
(411,3,cs),
(426.333,3,o),
(441.333,2.5,o),
(456,1.5,cs),
(470.667,0.5,o),
(487.667,0,o),
(507,0,cs),
(517.667,0,o),
(532,11.333,o),
(532,30,cs),
(532,56.667,o),
(515.667,64,o),
(485,64,cs),
(432,64,l),
(432,172,ls),
(432,252.906,o),
(472.044,351,o),
(573,351,cs),
(631.084,351,o),
(644.245,302.283,o),
(647,283,cs),
(653.513,227.641,o),
(653,110.926,o),
(653,123,cs),
(653,106.656,o),
(651,71.761,o),
(651,32,cs),
(651,8,o),
(647.333,1,o),
(634,1,cs),
(616.667,1,o),
(597,-3.333,o),
(597,-34,cs),
(597,-48.667,o),
(605.333,-61,o),
(628,-61,cs),
(635.126,-61,o),
(689.392,-58,o),
(719,-58,cs),
(753.436,-58,o),
(819.789,-61,o),
(821,-61,cs),
(841,-61,o),
(850,-50,o),
(850,-34,cs),
(850,-3.333,o),
(830.667,0,o),
(796,0,cs),
(744,0,l),
(744,176,ls),
(744,228,o),
(744,258.333,o),
(740,293,cs),
(734.752,340.235,o),
(714.936,428,o),
(604,428,cs),
(532,428,o),
(468.667,401,o),
(434,337,c),
(434,494.97,o),
(435.474,591.732,o),
(436.5,641,cs),
(437.298,679.292,o),
(439,703.662,o),
(439,713,cs),
(439,756.105,o),
(431.701,825,o),
(326,825,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
30 0 1 40
CALL[ ]	/* CallFunction */";
};
width = 830;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(121.759,825,o),
(96.785,634.118,o),
(94,506,cs),
(92.667,486,o),
(92,473,o),
(80,473,cs),
(36,473,ls),
(12,473,o),
(-1,470.667,o),
(-1,452,cs),
(-1,437.333,o),
(10.333,420,o),
(33,420,cs),
(80,420,ls),
(90.667,420,o),
(93,412.667,o),
(93,394,cs),
(93,300,ls),
(93,303.829,o),
(94.053,95.315,o),
(89,65,cs),
(87.667,50.333,o),
(83,48,o),
(55,44,cs),
(41.907,41.381,o),
(18,47.39,o),
(18,21,cs),
(18,10.333,o),
(38.333,0,o),
(57,0,cs),
(64.333,0,o),
(76.5,0.5,o),
(93.5,1.5,cs),
(110.5,2.5,o),
(128,3,o),
(146,3,cs),
(161.333,3,o),
(173.5,2.667,o),
(182.5,2,cs),
(191.5,1.333,o),
(202,1,o),
(214,1,cs),
(231.333,1,o),
(242.833,3.667,o),
(248.5,9,cs),
(254.167,14.333,o),
(257,19.333,o),
(257,24,cs),
(257,45.333,o),
(247,48,o),
(227,48,cs),
(160,48,l),
(160,409,ls),
(160,416.333,o),
(166,420,o),
(178,420,cs),
(193.161,420,o),
(217.403,418,o),
(244,418,cs),
(258.667,418,o),
(278,424.333,o),
(278,447,cs),
(278,465.667,o),
(259.333,473,o),
(246,473,cs),
(168,473,ls),
(162.667,473,o),
(160,476.667,o),
(160,484,cs),
(160,529.716,o),
(160.974,596.283,o),
(180.5,660,cs),
(200,723.632,o),
(244.013,769,o),
(318,769,cs),
(348.667,769,o),
(364,754.333,o),
(364,725,cs),
(364,574,ls),
(364,532.667,o),
(364.333,486.667,o),
(365,436,cs),
(365,294.616,o),
(358,171.903,o),
(358,92,cs),
(358,61.333,o),
(350.667,54.667,o),
(332,52,c),
(323.279,46.186,o),
(303,58.171,o),
(303,21,cs),
(303,11.667,o),
(314,0,o),
(338,0,cs),
(352.667,0,o),
(364,0.5,o),
(372,1.5,cs),
(380,2.5,o),
(391.667,3,o),
(407,3,cs),
(422.333,3,o),
(440.667,2.5,o),
(462,1.5,cs),
(483.333,0.5,o),
(503.667,0,o),
(523,0,cs),
(533.667,0,o),
(546,16,o),
(546,24,cs),
(546,50.667,o),
(522.333,52,o),
(501,52,cs),
(428,52,l),
(428,180,ls),
(428,268.193,o),
(473.76,369,o),
(578,369,cs),
(647.806,369,o),
(661.394,311.064,o),
(664,285,cs),
(669.973,231.247,o),
(670,123.176,o),
(670,123,cs),
(670,127.258,o),
(670.544,48.35,o),
(667,20,c),
(667,8.667,o),
(666.667,1,o),
(666,-3,cs),
(665.333,-7,o),
(664,-9.667,o),
(662,-11,c),
(633.79,-16.129,o),
(595,-11.429,o),
(595,-40,cs),
(595,-46.667,o),
(603.333,-61,o),
(626,-61,cs),
(635.333,-61,o),
(648.833,-60.5,o),
(666.5,-59.5,cs),
(684.167,-58.5,o),
(700.333,-58,o),
(715,-58,cs),
(748.396,-58,o),
(811.743,-61,o),
(814,-61,cs),
(834,-61,o),
(843,-48,o),
(843,-40,cs),
(843,-13.333,o),
(815.667,-12,o),
(789,-12,cs),
(740,-12,l),
(740,176,ls),
(740,228,o),
(740,258.333,o),
(736,293,cs),
(730.752,340.235,o),
(710.936,428,o),
(600,428,cs),
(528,428,o),
(468.667,391,o),
(434,327,c),
(434,382.333,o),
(434,429.833,o),
(434,469.5,cs),
(434,509.167,o),
(434,542.667,o),
(434,570,cs),
(434,597.333,o),
(434.167,619.333,o),
(434.5,636,cs),
(434.833,652.667,o),
(435,666.167,o),
(435,676.5,cs),
(435,686.833,o),
(435,694.5,o),
(435,699.5,cs),
(435,704.5,o),
(435,709,o),
(435,713,cs),
(435,756.105,o),
(427.701,825,o),
(322,825,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
30 0 1 40
CALL[ ]	/* CallFunction */";
};
width = 824;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(632.333,-61,o),
(645.5,-60.5,o),
(662.5,-59.5,cs),
(679.5,-58.5,o),
(695.333,-58,o),
(710,-58,cs),
(724,-58,o),
(740.5,-58.5,o),
(759.5,-59.5,cs),
(778.5,-60.5,o),
(793.333,-61,o),
(804,-61,cs),
(823.333,-61,o),
(833,-57.333,o),
(833,-50,cs),
(833,-36.667,o),
(805.667,-32,o),
(779,-32,cs),
(735,-32,l),
(735,176,ls),
(735,228,o),
(735,258.333,o),
(731,293,cs),
(725.752,340.235,o),
(705.936,428,o),
(595,428,cs),
(523,428,o),
(463.667,391,o),
(429,327,c),
(429,382.333,o),
(429,429.833,o),
(429,469.5,cs),
(429,509.167,o),
(429,542.667,o),
(429,570,cs),
(429,597.333,o),
(429.167,619.333,o),
(429.5,636,cs),
(429.833,652.667,o),
(430,666.167,o),
(430,676.5,cs),
(430,686.833,o),
(430,694.5,o),
(430,699.5,cs),
(430,704.5,o),
(430,709,o),
(430,713,cs),
(430,756.105,o),
(422.701,825,o),
(317,825,cs),
(142.054,825,o),
(121.73,631.583,o),
(119,506,cs),
(118.333,492.667,o),
(117.333,482.167,o),
(116,474.5,cs),
(114.667,466.833,o),
(111,463,o),
(105,463,cs),
(31,463,ls),
(19,463,o),
(10.667,462.5,o),
(6,461.5,cs),
(1.333,460.5,o),
(-1,457.333,o),
(-1,452,cs),
(-1,448,o),
(1,444.167,o),
(5,440.5,cs),
(9,436.833,o),
(16.667,435,o),
(28,435,cs),
(105,435,ls),
(115.667,435,o),
(118,427.667,o),
(118,409,cs),
(118,300,ls),
(118,299.577,o),
(119.059,80.414,o),
(114,45,cs),
(111.279,28.672,o),
(95.538,26.277,o),
(50,24,cs),
(35.333,22.667,o),
(18,21.667,o),
(18,11,cs),
(18,5.667,o),
(21.333,2.5,o),
(28,1.5,cs),
(34.667,0.5,o),
(42.667,0,o),
(52,0,cs),
(59.333,0,o),
(71.5,0.5,o),
(88.5,1.5,cs),
(105.5,2.5,o),
(123,3,o),
(141,3,cs),
(156.333,3,o),
(168.5,2.667,o),
(177.5,2,cs),
(186.5,1.333,o),
(197,1,o),
(209,1,cs),
(226.333,1,o),
(237.667,2,o),
(243,4,cs),
(248.333,6,o),
(251,9.333,o),
(251,14,cs),
(251,23.333,o),
(241.333,28,o),
(222,28,cs),
(155,28,l),
(155,424,ls),
(155,431.333,o),
(161,435,o),
(173,435,cs),
(188.161,435,o),
(212.403,433,o),
(239,433,cs),
(253.667,433,o),
(268,436.333,o),
(268,447,cs),
(268,457.667,o),
(254.333,463,o),
(241,463,cs),
(163,463,ls),
(160.333,463,o),
(158.333,464.333,o),
(157,467,cs),
(155.667,469.667,o),
(155,475.333,o),
(155,484,cs),
(155,533.09,o),
(155.976,608.124,o),
(175.5,678,cs),
(195.05,747.97,o),
(237.775,799,o),
(313,799,cs),
(371.667,799,o),
(389,769,o),
(389,725,cs),
(389,574,ls),
(389,532.667,o),
(389.333,486.667,o),
(390,436,cs),
(390,313.139,o),
(384.725,109.943,o),
(383,72,cs),
(381.667,41.333,o),
(375.667,34.667,o),
(357,32,cs),
(345.084,30.298,o),
(299,30.614,o),
(299,11,cs),
(299,3.667,o),
(310.333,0,o),
(333,0,cs),
(347.667,0,o),
(359,0.5,o),
(367,1.5,cs),
(375,2.5,o),
(386.667,3,o),
(402,3,cs),
(417.333,3,o),
(435.667,2.5,o),
(457,1.5,cs),
(478.333,0.5,o),
(498.667,0,o),
(518,0,cs),
(528.667,0,o),
(538,6,o),
(538,14,cs),
(538,26,o),
(517.333,32,o),
(496,32,cs),
(423,32,l),
(423,193,ls),
(423,301.03,o),
(483.682,399,o),
(585,399,cs),
(671.081,399,o),
(682.774,331.584,o),
(689,288,cs),
(695.032,233.714,o),
(695,120.226,o),
(695,123,cs),
(695,127.222,o),
(695.451,31.057,o),
(692,0,cs),
(689.333,-22.667,o),
(683.667,-28.333,o),
(657,-31,cs),
(631.205,-33.345,o),
(592,-36.506,o),
(592,-50,cs),
(592,-57.333,o),
(602.333,-61,o),
(623,-61,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
29 0 1 40
CALL[ ]	/* CallFunction */";
};
width = 815;
}
);
note = f_h;
},
{
glyphname = f_j;
kernLeft = f;
kernRight = dotlessj;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(237,-63.667,o),
(213,-49,o),
(189,-49,cs),
(138.333,-49,o),
(99,-83.333,o),
(99,-134,cs),
(99,-188.125,o),
(130.395,-249,o),
(268,-249,cs),
(302.667,-249,o),
(338.833,-237.833,o),
(367.5,-206.5,cs),
(396.167,-175.167,o),
(419,-124,o),
(427,-44,cs),
(431,-4,o),
(433,35.667,o),
(433,61,cs),
(433,73.27,o),
(433.232,133.934,o),
(434.5,243,cs),
(435.745,350.085,o),
(436,410.748,o),
(436,425,cs),
(436,448.333,o),
(434,464.5,o),
(430,473.5,cs),
(426,482.5,o),
(418.333,487,o),
(407,487,cs),
(177,487,ls),
(170.333,487,o),
(169,487.333,o),
(169,498,cs),
(169,539.114,o),
(168.575,594.062,o),
(186.5,651,cs),
(204.216,707.273,o),
(242.911,747,o),
(310,747,cs),
(344.667,747,o),
(361,722.333,o),
(361,697,cs),
(361,646.861,o),
(321,651.612,o),
(321,618,cs),
(321,595.333,o),
(336.667,567,o),
(378,567,cs),
(434,567,o),
(454,601.333,o),
(454,656,cs),
(454,798.777,o),
(376.58,825,o),
(314,825,cs),
(100.477,825,o),
(83.704,641.506,o),
(81,509,cs),
(81,494.333,o),
(80,487,o),
(68,487,cs),
(45,487,ls),
(21,487,o),
(1,484,o),
(1,452,cs),
(1,433.333,o),
(19.333,411,o),
(42,411,cs),
(68,411,ls),
(78.667,411,o),
(81,403.667,o),
(81,385,cs),
(81,300,ls),
(81,156.065,o),
(80.281,124.096,o),
(76,77,cs),
(76,66.333,o),
(69.667,60,o),
(47,56,cs),
(36.333,53.333,o),
(15,48.333,o),
(15,27,cs),
(15,5.667,o),
(30.333,0,o),
(49,0,cs),
(48.872,0,o),
(111.35,3,o),
(155,3,cs),
(170.333,3,o),
(185.167,2.667,o),
(199.5,2,cs),
(213.833,1.333,o),
(227,1,o),
(239,1,cs),
(273.667,1,o),
(281,11.333,o),
(281,30,cs),
(281,50,o),
(271.333,60,o),
(252,60,cs),
(173,60,l),
(173,58.489,o),
(167,103.242,o),
(167,159,cs),
(167,189.698,o),
(168,231.2,o),
(168,283.5,cs),
(168,334.325,o),
(169,372.493,o),
(169,398,cs),
(169,406.667,o),
(175,411,o),
(187,411,cs),
(185.699,411,o),
(256.929,408,o),
(294,408,cs),
(323,408,ls),
(339.667,408,o),
(348,401,o),
(348,387,cs),
(348,278,ls),
(348,206,o),
(345.245,38.673,o),
(340,-40,cs),
(336.667,-91.333,o),
(327.833,-127.167,o),
(313.5,-147.5,cs),
(299.167,-167.833,o),
(280.667,-178,o),
(258,-178,cs),
(222,-178,o),
(184,-163,o),
(184,-143,cs),
(184,-128.333,o),
(189.333,-125.333,o),
(200,-124,cs),
(217.333,-121.333,o),
(237,-117,o),
(237,-89,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
135 87 1 40
CALL[ ]	/* CallFunction */";
};
width = 494;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(231,-63.667,o),
(204.667,-53,o),
(190,-53,cs),
(148.667,-53,o),
(114,-81.333,o),
(114,-120,cs),
(114,-182.468,o),
(147.126,-236,o),
(265,-236,cs),
(338.461,-236,o),
(405.751,-193.951,o),
(421,-44,cs),
(423.361,-20.39,o),
(427,26.161,o),
(427,61,cs),
(427,73.27,o),
(427.232,133.934,o),
(428.5,243,cs),
(429.745,350.085,o),
(430,410.748,o),
(430,425,cs),
(430,459.667,o),
(429.667,478,o),
(403,478,cs),
(171,478,ls),
(167.667,478,o),
(165.5,479,o),
(164.5,481,cs),
(163.5,483,o),
(163,488.667,o),
(163,498,cs),
(163,541.968,o),
(162.543,600.734,o),
(180.5,662,cs),
(198.026,721.793,o),
(236.05,765,o),
(304,765,cs),
(353.333,765,o),
(376,730.333,o),
(376,697,cs),
(376,646.861,o),
(336,651.612,o),
(336,618,cs),
(336,595.333,o),
(350,573,o),
(386,573,cs),
(432.667,573,o),
(448,601.333,o),
(448,656,cs),
(448,798.777,o),
(370.58,825,o),
(308,825,cs),
(215.977,825,o),
(156.76,780.617,o),
(129.5,716,cs),
(100.43,647.094,o),
(98.238,580.63,o),
(96,509,cs),
(96,489,o),
(95,478,o),
(83,478,cs),
(39,478,ls),
(15,478,o),
(0,476,o),
(0,452,cs),
(0,437.333,o),
(13.333,420,o),
(36,420,cs),
(83,420,ls),
(93.667,420,o),
(96,412.667,o),
(96,394,cs),
(96,300,ls),
(96,287.132,o),
(97.533,100.93,o),
(91,65,cs),
(90.333,57.667,o),
(86.667,52.833,o),
(80,50.5,cs),
(73.333,48.167,o),
(62.667,46,o),
(48,44,cs),
(33.333,41.333,o),
(16,39.667,o),
(16,21,cs),
(16,3.667,o),
(31.333,0,o),
(50,0,cs),
(52.821,0,o),
(107.353,3,o),
(149,3,cs),
(184.97,3,o),
(228.855,1,o),
(261,1,cs),
(278.333,1,o),
(289.667,3,o),
(295,7,cs),
(300.333,11,o),
(303,16.667,o),
(303,24,cs),
(303,40,o),
(293.333,48,o),
(274,48,cs),
(168,48,l),
(168,60.446,o),
(161,107.46,o),
(161,159,cs),
(161,191.684,o),
(162,235.185,o),
(162,289.5,cs),
(162,343.706,o),
(163,383.541,o),
(163,409,cs),
(163,416.333,o),
(169,420,o),
(181,420,cs),
(179.699,420,o),
(250.929,417,o),
(288,417,cs),
(338,417,ls),
(354.667,417,o),
(363,410,o),
(363,396,cs),
(363,278,ls),
(363,222.508,o),
(360.65,33.453,o),
(355,-40,cs),
(347.238,-138.314,o),
(316.556,-174,o),
(263,-174,cs),
(206.333,-174,o),
(178,-163.667,o),
(178,-143,cs),
(178,-128.333,o),
(183.333,-125.333,o),
(194,-124,cs),
(211.333,-121.333,o),
(231,-117,o),
(231,-89,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
142 92 1 40
CALL[ ]	/* CallFunction */";
};
width = 490;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(329.967,-221,o),
(396.522,-183.298,o),
(412,-44,cs),
(414.361,-20.39,o),
(418,26.161,o),
(418,61,cs),
(418,73.27,o),
(418.232,133.934,o),
(419.5,243,cs),
(420.745,350.085,o),
(421,410.748,o),
(421,425,cs),
(421,450.333,o),
(419.333,463,o),
(398,463,cs),
(162,463,ls),
(158.667,463,o),
(156.5,465,o),
(155.5,469,cs),
(154.5,473,o),
(154,482.667,o),
(154,498,cs),
(154,546.172,o),
(153.553,611.881,o),
(171.5,680.5,cs),
(188.892,746.997,o),
(226.853,795,o),
(295,795,cs),
(365.689,795,o),
(397,744.983,o),
(397,697,cs),
(397,646.861,o),
(357,651.612,o),
(357,618,cs),
(357,595.333,o),
(374.333,583,o),
(397,583,cs),
(431.667,583,o),
(439,613.333,o),
(439,656,cs),
(439,798.777,o),
(361.58,825,o),
(299,825,cs),
(131.685,825,o),
(119.716,642.096,o),
(117,509,cs),
(117,494.333,o),
(116.333,483,o),
(115,475,cs),
(113.667,467,o),
(110,463,o),
(104,463,cs),
(30,463,ls),
(18,463,o),
(9.667,462.5,o),
(5,461.5,cs),
(0.333,460.5,o),
(-2,457.333,o),
(-2,452,cs),
(-2,448,o),
(0,444.167,o),
(4,440.5,cs),
(8,436.833,o),
(15.667,435,o),
(27,435,cs),
(104,435,ls),
(114.667,435,o),
(117,427.667,o),
(117,409,cs),
(117,300,ls),
(117,282.248,o),
(118.483,83.898,o),
(112,45,cs),
(109.103,27.617,o),
(93.969,26.141,o),
(49,24,cs),
(34.333,22.667,o),
(17,21.667,o),
(17,11,cs),
(17,5.667,o),
(20.333,2.5,o),
(27,1.5,cs),
(33.667,0.5,o),
(41.667,0,o),
(51,0,cs),
(58.333,0,o),
(70.5,0.5,o),
(87.5,1.5,cs),
(104.5,2.5,o),
(122,3,o),
(140,3,cs),
(175.123,3,o),
(218.061,1,o),
(250,1,cs),
(267.333,1,o),
(278.667,2,o),
(284,4,cs),
(289.333,6,o),
(292,9.333,o),
(292,14,cs),
(292,23.333,o),
(282.333,28,o),
(263,28,cs),
(161,28,l),
(161,26.194,o),
(152,90.213,o),
(152,159,cs),
(152,191.519,o),
(153,237.52,o),
(153,297,cs),
(153,354.275,o),
(154,396.61,o),
(154,424,cs),
(154,431.333,o),
(160,435,o),
(172,435,cs),
(170.699,435,o),
(241.929,432,o),
(279,432,cs),
(359,432,ls),
(375.667,432,o),
(384,425,o),
(384,411,cs),
(384,278,ls),
(384,222.508,o),
(381.65,33.453,o),
(376,-40,cs),
(365.483,-150.432,o),
(324.15,-189,o),
(254,-189,cs),
(202,-189,o),
(169,-168.333,o),
(169,-143,cs),
(169,-128.333,o),
(174.333,-125.333,o),
(185,-124,cs),
(202.333,-121.333,o),
(222,-117,o),
(222,-89,cs),
(222,-63.667,o),
(205.667,-59,o),
(191,-59,cs),
(164.333,-59,o),
(135,-81.333,o),
(135,-120,cs),
(135,-173.696,o),
(169.931,-221,o),
(256,-221,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
143 91 1 40
CALL[ ]	/* CallFunction */";
};
width = 484;
}
);
note = f_j;
},
{
glyphname = f_k;
kernLeft = f;
kernRight = c_k;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(345.333,-89,o),
(353,-89.167,o),
(363,-89.5,cs),
(373,-89.833,o),
(383,-90,o),
(393,-90,cs),
(455.936,-90,o),
(461.395,-91,o),
(511,-91,cs),
(521.667,-91,o),
(537,-82,o),
(537,-62,cs),
(537,-39.333,o),
(524.667,-32,o),
(486,-32,cs),
(437,-32,l),
(437,26,o),
(437.167,71.333,o),
(437.5,104,cs),
(437.833,136.667,o),
(438,164,o),
(438,186,c),
(455,205,l),
(469.046,178.914,o),
(495.521,117.316,o),
(535.5,38.5,cs),
(572.84,-35.113,o),
(604.32,-88,o),
(621,-88,cs),
(697.667,-88,o),
(752.833,-86.5,o),
(786.5,-83.5,cs),
(820.167,-80.5,o),
(837,-72.333,o),
(837,-59,cs),
(837,-29.747,o),
(789.3,-27,o),
(757,-27,cs),
(727,-27,o),
(704.667,-25.333,o),
(690,-22,cs),
(675.333,-18.667,o),
(665.333,-13,o),
(660,-5,cs),
(654,4.333,o),
(638.833,31,o),
(614.5,75,cs),
(590.167,119,o),
(559.667,180.333,o),
(523,259,c),
(618.483,351.073,o),
(569.611,308.611,o),
(619,358,cs),
(624.333,363.333,o),
(636.667,369.667,o),
(650,371,cs),
(689.333,374.333,o),
(718.333,378,o),
(737,382,cs),
(755.667,386,o),
(765,394.667,o),
(765,408,cs),
(765,432.08,o),
(713.169,440,o),
(604,440,cs),
(570.667,440,o),
(544.5,437,o),
(525.5,431,cs),
(506.5,425,o),
(497,414,o),
(497,398,cs),
(497,382,o),
(506.333,376.333,o),
(513,375,cs),
(523,374,ls),
(525.667,374,o),
(527,373,o),
(527,371,cs),
(527,363.005,o),
(485.403,331.403,o),
(436,282,c),
(436,713,ls),
(436,764.262,o),
(427.268,825,o),
(328,825,cs),
(221.658,825,o),
(152.924,780.283,o),
(119.5,718.5,cs),
(84.934,654.606,o),
(80.076,588.065,o),
(78,532,cs),
(77.333,514,o),
(76,502,o),
(74,496,cs),
(72,490,o),
(68.667,487,o),
(64,487,cs),
(41,487,ls),
(17,487,o),
(-6,484,o),
(-6,452,cs),
(-6,425.333,o),
(14,411,o),
(38,411,cs),
(64,411,ls),
(74.667,411,o),
(77,403.667,o),
(77,385,cs),
(77,300,ls),
(77,192,o),
(75.667,107.667,o),
(73,77,cs),
(73,66.333,o),
(70.667,58.667,o),
(60,56,cs),
(45.333,53.333,o),
(25,48.333,o),
(25,27,cs),
(25,3,o),
(40.667,0,o),
(62,0,cs),
(69.333,0,o),
(81.5,0.5,o),
(98.5,1.5,cs),
(115.5,2.5,o),
(133,3,o),
(151,3,cs),
(166.333,3,o),
(180.5,2.667,o),
(193.5,2,cs),
(206.5,1.333,o),
(219,1,o),
(231,1,cs),
(265.667,1,o),
(273,10,o),
(273,30,cs),
(273,50,o),
(263.333,60,o),
(244,60,cs),
(165,60,l),
(165,400,ls),
(165,407.333,o),
(171,411,o),
(183,411,cs),
(198.161,411,o),
(222.403,409,o),
(249,409,cs),
(263.667,409,o),
(283,416.333,o),
(283,447,cs),
(283,473.667,o),
(264.333,487,o),
(251,487,cs),
(173,487,ls),
(170.333,487,o),
(168.333,488.167,o),
(167,490.5,cs),
(165.667,492.833,o),
(165,498.667,o),
(165,508,cs),
(165,582.154,o),
(165.2,751,o),
(323,751,cs),
(334.333,751,o),
(341.5,743.5,o),
(344.5,728.5,cs),
(347.5,713.5,o),
(349,685.667,o),
(349,645,cs),
(349,532.505,o),
(352,471.928,o),
(352,332,cs),
(352,245.539,o),
(351.727,206.805,o),
(350.5,183.5,cs),
(349.357,161.777,o),
(348.553,130.032,o),
(347,71,cs),
(344.428,-19.019,o),
(341.137,-29.169,o),
(310,-32,cs),
(300.667,-33.333,o),
(283,-36.667,o),
(283,-62,cs),
(283,-84.292,o),
(312.976,-89,o),
(340,-89,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
164 96 1 40
CALL[ ]	/* CallFunction */";
};
width = 810;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(366,625,o),
(366.333,585.167,o),
(367,539.5,cs),
(367.667,493.833,o),
(368,437.667,o),
(368,371,cs),
(368,290.806,o),
(366.538,231.609,o),
(365.5,188,cs),
(364.437,143.367,o),
(363,98.01,o),
(363,43,cs),
(363,4.333,o),
(352,-24.333,o),
(316,-31,cs),
(293.333,-35,o),
(282,-32.333,o),
(282,-55,cs),
(282,-73.667,o),
(302.333,-78,o),
(325,-78,cs),
(334.333,-78,o),
(346.167,-77.667,o),
(360.5,-77,cs),
(374.833,-76.333,o),
(387.333,-76,o),
(398,-76,cs),
(423.333,-76,o),
(444.167,-76.333,o),
(460.5,-77,cs),
(476.833,-77.667,o),
(492.333,-78,o),
(507,-78,cs),
(523,-78,o),
(536,-74.667,o),
(536,-56,cs),
(536,-40,o),
(524.667,-31,o),
(494,-31,cs),
(433,-31,l),
(433,186,l),
(466,218,l),
(473.451,204.34,o),
(502.188,144.079,o),
(548,55,cs),
(574.972,2.554,o),
(619.483,-76,o),
(638,-76,cs),
(705.333,-75.333,o),
(753.5,-73.833,o),
(782.5,-71.5,cs),
(811.5,-69.167,o),
(826,-62.333,o),
(826,-51,cs),
(826,-29.676,o),
(790.81,-26,o),
(760,-26,cs),
(708.063,-26,o),
(692.65,-22.65,o),
(677,-7,cs),
(641.898,31.293,o),
(567.081,171.043,o),
(523,269,c),
(539.947,283.687,o),
(556.095,300.095,o),
(568.5,312.5,cs),
(583.536,327.536,o),
(604.116,346.247,o),
(629,370,cs),
(636.333,377.333,o),
(646.667,381.667,o),
(660,383,cs),
(694.667,386.333,o),
(720.167,389.667,o),
(736.5,393,cs),
(752.833,396.333,o),
(761,403,o),
(761,413,cs),
(761,423,o),
(753.5,429.167,o),
(738.5,431.5,cs),
(723.5,433.833,o),
(699.333,435,o),
(666,435,cs),
(587,435,ls),
(562.333,435,o),
(543.333,433.833,o),
(530,431.5,cs),
(516.667,429.167,o),
(510,422.333,o),
(510,411,cs),
(510,395,o),
(520.333,388,o),
(535,388,cs),
(539,388,ls),
(545,388,o),
(548,384.667,o),
(548,378,cs),
(548,372.667,o),
(538.5,361.5,o),
(519.5,344.5,cs),
(500.5,327.5,o),
(471.333,301,o),
(432,265,c),
(432,713,ls),
(432,765.323,o),
(422.695,825,o),
(324,825,cs),
(122.742,825,o),
(97.823,641.584,o),
(95,523,cs),
(94.333,509,o),
(93.333,498,o),
(92,490,cs),
(90.667,482,o),
(87,478,o),
(81,478,cs),
(37,478,ls),
(13,478,o),
(-4,476,o),
(-4,452,cs),
(-4,437.333,o),
(11.333,420,o),
(34,420,cs),
(81,420,ls),
(91.667,420,o),
(94,412.667,o),
(94,394,cs),
(94,300,ls),
(94,295.628,o),
(94.993,94.96,o),
(90,65,cs),
(88.667,50.333,o),
(84,48,o),
(56,44,cs),
(41.333,41.333,o),
(22,39.667,o),
(22,21,cs),
(22,-0.333,o),
(39.333,0,o),
(58,0,cs),
(65.333,0,o),
(77.5,0.5,o),
(94.5,1.5,cs),
(111.5,2.5,o),
(129,3,o),
(147,3,cs),
(182.123,3,o),
(225.061,1,o),
(257,1,cs),
(274.333,1,o),
(285.667,2.833,o),
(291,6.5,cs),
(296.333,10.167,o),
(299,16,o),
(299,24,cs),
(299,40,o),
(289.333,48,o),
(270,48,cs),
(161,48,l),
(161,409,ls),
(161,416.333,o),
(167,420,o),
(179,420,cs),
(194.161,420,o),
(218.403,418,o),
(245,418,cs),
(259.667,418,o),
(277,424.333,o),
(277,447,cs),
(277,468.333,o),
(260.333,478,o),
(247,478,cs),
(169,478,ls),
(166.333,478,o),
(164.333,479.167,o),
(163,481.5,cs),
(161.667,483.833,o),
(161,489.667,o),
(161,499,cs),
(161,581.112,o),
(161.2,769,o),
(319,769,cs),
(366.788,769,o),
(366,730.808,o),
(366,659,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
141 75 1 40
CALL[ ]	/* CallFunction */";
};
width = 809;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(516.667,-59,o),
(525.667,-57.333,o),
(529,-54,cs),
(532.333,-50.667,o),
(534,-47.333,o),
(534,-44,cs),
(534,-40,o),
(532,-37,o),
(528,-35,cs),
(524,-33,o),
(516.667,-32,o),
(506,-32,cs),
(428,-32,l),
(428,-14,o),
(427.833,14.5,o),
(427.5,53.5,cs),
(427.167,92.5,o),
(427,137,o),
(427,187,c),
(482,239,l),
(494.393,216.28,o),
(523.187,155.536,o),
(567.5,76,cs),
(615.902,-10.875,o),
(648.233,-55,o),
(662,-55,cs),
(714.667,-55,o),
(752.5,-54.333,o),
(775.5,-53,cs),
(798.5,-51.667,o),
(810,-46.667,o),
(810,-38,cs),
(810,-29.333,o),
(794.667,-25,o),
(764,-25,cs),
(736,-25,o),
(715.333,-24.5,o),
(702,-23.5,cs),
(688.667,-22.5,o),
(680,-19.333,o),
(676,-14,cs),
(605.679,71.704,o),
(529.779,236.662,o),
(518,272,c),
(540.198,291.238,o),
(571.623,322.105,o),
(643,390,cs),
(650.333,397.333,o),
(660.667,401.667,o),
(674,403,cs),
(702,405.667,o),
(722.5,408,o),
(735.5,410,cs),
(748.5,412,o),
(755,415.667,o),
(755,421,cs),
(755,427,o),
(745.333,430.833,o),
(726,432.5,cs),
(706.667,434.167,o),
(676.333,435,o),
(635,435,cs),
(593.667,435,o),
(565.167,434.167,o),
(549.5,432.5,cs),
(533.833,430.833,o),
(526,426.667,o),
(526,420,cs),
(526,417.333,o),
(527.333,414.833,o),
(530,412.5,cs),
(532.667,410.167,o),
(538,408.667,o),
(546,408,cs),
(580,406,ls),
(588,406,o),
(592,403.667,o),
(592,399,cs),
(592,384.843,o),
(505.426,304.08,o),
(426,236,c),
(426,547,ls),
(426,587,o),
(426.167,620.833,o),
(426.5,648.5,cs),
(426.833,676.167,o),
(427,697.667,o),
(427,713,cs),
(427,749.586,o),
(428.742,825,o),
(318,825,cs),
(231.551,825,o),
(179.962,777.129,o),
(152.5,710,cs),
(124.43,641.385,o),
(121,565.979,o),
(119,508,cs),
(118.333,494,o),
(117.333,483,o),
(116,475,cs),
(114.667,467,o),
(111,463,o),
(105,463,cs),
(31,463,ls),
(19,463,o),
(10.667,462.5,o),
(6,461.5,cs),
(1.333,460.5,o),
(-1,457.333,o),
(-1,452,cs),
(-1,448,o),
(1,444.167,o),
(5,440.5,cs),
(9,436.833,o),
(16.667,435,o),
(28,435,cs),
(105,435,ls),
(115.667,435,o),
(118,427.667,o),
(118,409,cs),
(118,300,ls),
(118,299.577,o),
(119.059,80.414,o),
(114,45,cs),
(111.279,28.672,o),
(95.538,26.277,o),
(50,24,cs),
(35.333,22.667,o),
(18,21.667,o),
(18,11,cs),
(18,5.667,o),
(21.333,2.5,o),
(28,1.5,cs),
(34.667,0.5,o),
(42.667,0,o),
(52,0,cs),
(59.333,0,o),
(71.5,0.5,o),
(88.5,1.5,cs),
(105.5,2.5,o),
(123,3,o),
(141,3,cs),
(176.123,3,o),
(219.061,1,o),
(251,1,cs),
(268.333,1,o),
(279.667,2,o),
(285,4,cs),
(290.333,6,o),
(293,9.333,o),
(293,14,cs),
(293,23.333,o),
(283.333,28,o),
(264,28,cs),
(155,28,l),
(155,424,ls),
(155,431.333,o),
(161,435,o),
(173,435,cs),
(188.161,435,o),
(212.403,433,o),
(239,433,cs),
(253.667,433,o),
(268,436.333,o),
(268,447,cs),
(268,457.667,o),
(254.333,463,o),
(241,463,cs),
(163,463,ls),
(160.333,463,o),
(158.333,464.333,o),
(157,467,cs),
(155.667,469.667,o),
(155,475.333,o),
(155,484,cs),
(155,533.09,o),
(155.976,608.124,o),
(175.5,678,cs),
(195.05,747.97,o),
(237.775,799,o),
(313,799,cs),
(389.972,799,o),
(390,747.506,o),
(390,683,cs),
(390,634.198,o),
(391,555.752,o),
(391,436,cs),
(391,377.303,o),
(392.919,111.167,o),
(386,-3,cs),
(384.667,-21,o),
(364,-31,o),
(324,-33,cs),
(301,-34,ls),
(293,-34.667,o),
(287.5,-36,o),
(284.5,-38,cs),
(281.5,-40,o),
(280,-42.667,o),
(280,-46,cs),
(280,-49.333,o),
(281.667,-52.167,o),
(285,-54.5,cs),
(288.333,-56.833,o),
(294.667,-58,o),
(304,-58,cs),
(324,-58,o),
(342.5,-57.833,o),
(359.5,-57.5,cs),
(376.5,-57.167,o),
(391.667,-57,o),
(405,-57,cs),
(423.667,-57,o),
(442.833,-57.333,o),
(462.5,-58,cs),
(482.167,-58.667,o),
(495.333,-59,o),
(502,-59,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
116 9 1 40
CALL[ ]	/* CallFunction */";
};
width = 808;
}
);
note = f_k;
},
{
glyphname = f_t;
kernLeft = f;
kernRight = c_t;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(308,126.114,o),
(309.051,66.212,o),
(338,32,cs),
(364.667,0,o),
(413.667,-11,o),
(459,-11,cs),
(587.542,-11,o),
(613,88.734,o),
(613,114,cs),
(613,140.667,o),
(595.667,153,o),
(573,153,cs),
(542.333,153,o),
(529.667,128.667,o),
(523,102,c),
(516.348,85.371,o),
(511.183,67,o),
(471,67,cs),
(405.837,67,o),
(401,113.438,o),
(401,152,cs),
(401,409,l),
(445.072,411.592,o),
(541.7,413.142,o),
(576,416,cs),
(585.964,416,o),
(612,427.514,o),
(612,455,cs),
(612,485.667,o),
(583,492,o),
(563,492,cs),
(566.567,492,o),
(486.978,489,o),
(401,489,c),
(401,615.976,o),
(402,671.158,o),
(402,711,cs),
(402,759.292,o),
(392.287,825,o),
(285,825,cs),
(182.771,825,o),
(133.259,763.183,o),
(111.5,704,cs),
(85.048,632.051,o),
(83,562.963,o),
(83,515,cs),
(83,499,o),
(79.667,487,o),
(65,487,cs),
(48,487,ls),
(24,487,o),
(-1,481.333,o),
(-1,452,cs),
(-1,421.333,o),
(22.333,411,o),
(45,411,cs),
(71,411,ls),
(81.667,411,o),
(84,403.667,o),
(84,385,cs),
(84,300,ls),
(84,162.259,o),
(80,112.927,o),
(80,85,cs),
(80,70.333,o),
(69.667,65.333,o),
(63,64,cs),
(28.333,58.667,o),
(18,50.333,o),
(18,25,cs),
(18,4.611,o),
(40.625,0,o),
(56,0,cs),
(66,0,o),
(81,0.5,o),
(101,1.5,cs),
(121,2.5,o),
(140,3,o),
(158,3,cs),
(172,3,o),
(186.5,2.667,o),
(201.5,2,cs),
(216.5,1.333,o),
(227,1,o),
(233,1,cs),
(270.333,1,o),
(285,13,o),
(285,33,cs),
(285,53,o),
(269.667,69,o),
(251,69,cs),
(172,69,l),
(172,400,ls),
(172,407.333,o),
(178,411,o),
(190,411,cs),
(210.785,411,o),
(256.701,409,o),
(309,409,c),
(308,165,l),
(308,165,l)
);
},
{
closed = 1;
nodes = (
(172,597.616,o),
(191.159,751,o),
(284,751,cs),
(298.206,751,o),
(309,743.538,o),
(309,683,cs),
(309,487,l),
(182,487,ls),
(178.667,487,o),
(176.167,488.333,o),
(174.5,491,cs),
(172.833,493.667,o),
(172,500.333,o),
(172,511,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
127 120 108 58 2 40
CALL[ ]	/* CallFunction */";
};
width = 622;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(322,133.504,o),
(322.535,64.641,o),
(351,31,cs),
(375,0.333,o),
(418.333,-11,o),
(457,-11,cs),
(565.06,-11,o),
(606,77.266,o),
(606,115,cs),
(606,133.667,o),
(592.667,147,o),
(574,147,cs),
(562,147,o),
(554.167,142.333,o),
(550.5,133,cs),
(546.833,123.667,o),
(542.667,113.333,o),
(538,102,cs),
(529.844,80.252,o),
(517.45,49,o),
(467,49,cs),
(392.702,49,o),
(394,115.16,o),
(394,152,cs),
(394,418,l),
(396.43,418.135,o),
(542.187,421.846,o),
(569,425,cs),
(579.667,426.333,o),
(597,435,o),
(597,455,cs),
(597,477.667,o),
(575.667,483,o),
(557,483,cs),
(560.653,483,o),
(480.73,480,o),
(394,480,c),
(394,615.643,o),
(395,669.986,o),
(395,710,cs),
(395,753.34,o),
(386.336,825,o),
(284,825,cs),
(198.361,825,o),
(150.022,773.562,o),
(126,706.5,cs),
(101.087,636.951,o),
(97,561.388,o),
(97,506,cs),
(97,492.667,o),
(95.667,478,o),
(85,478,cs),
(41,478,ls),
(17,478,o),
(-1,474.667,o),
(-1,452,cs),
(-1,429.333,o),
(15.333,420,o),
(38,420,cs),
(85,420,ls),
(95.667,420,o),
(98,412.667,o),
(98,394,cs),
(98,300,ls),
(98,224.667,o),
(97.5,168.833,o),
(96.5,132.5,cs),
(95.5,96.167,o),
(94.667,73.667,o),
(94,65,cs),
(91.333,49,o),
(88,48,o),
(60,44,cs),
(42.827,41.138,o),
(18,37.701,o),
(18,20,cs),
(18,1.333,o),
(45.333,0,o),
(60,0,cs),
(69.333,0,o),
(82.333,0.5,o),
(99,1.5,cs),
(115.667,2.5,o),
(133,3,o),
(151,3,cs),
(187.88,3,o),
(230.928,1,o),
(258,1,cs),
(276,1,o),
(288.5,3.167,o),
(295.5,7.5,cs),
(302.5,11.833,o),
(306,18,o),
(306,26,cs),
(306,42,o),
(292.667,48,o),
(274,48,cs),
(165,48,l),
(165,409,ls),
(165,416.333,o),
(171,420,o),
(183,420,cs),
(207.766,420,o),
(261.692,418,o),
(323,418,c),
(322,165,l),
(322,165,l)
);
},
{
closed = 1;
nodes = (
(165,595.685,o),
(180.672,769,o),
(282,769,cs),
(298.667,769,o),
(309.667,763,o),
(315,751,cs),
(320.333,739,o),
(323,716.333,o),
(323,683,cs),
(323,478,l),
(173,478,ls),
(169.667,478,o),
(167.5,479.667,o),
(166.5,483,cs),
(165.5,486.333,o),
(165,493.667,o),
(165,505,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
125 120 108 60 2 40
CALL[ ]	/* CallFunction */";
};
width = 614;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(555.572,-11,o),
(596,80.146,o),
(596,117,cs),
(596,123.667,o),
(595.667,137,o),
(581,137,cs),
(566.333,137,o),
(565.667,123.333,o),
(559,102,cs),
(548.022,63.577,o),
(518.478,19,o),
(461,19,cs),
(382.773,19,o),
(384,98.109,o),
(384,152,cs),
(384,433,l),
(411.333,434.333,o),
(439.833,435.167,o),
(469.5,435.5,cs),
(499.167,435.833,o),
(529,437.333,o),
(559,440,cs),
(571,441.333,o),
(576,448.333,o),
(576,455,cs),
(576,463.667,o),
(567,468,o),
(549,468,cs),
(552.613,468,o),
(468.423,465,o),
(384,465,c),
(384,604,o),
(385,671.867,o),
(385,708,cs),
(385,745.835,o),
(375.732,825,o),
(282,825,cs),
(136.33,825,o),
(122.441,637.912,o),
(117,491,cs),
(117,477.667,o),
(115.667,463,o),
(105,463,cs),
(31,463,ls),
(19,463,o),
(10.667,462.5,o),
(6,461.5,cs),
(1.333,460.5,o),
(-1,457.333,o),
(-1,452,cs),
(-1,448,o),
(1,444.167,o),
(5,440.5,cs),
(9,436.833,o),
(16.667,435,o),
(28,435,cs),
(105,435,ls),
(115.667,435,o),
(118,427.667,o),
(118,409,cs),
(118,300,ls),
(118,299.577,o),
(119.059,80.414,o),
(114,45,cs),
(111.279,28.672,o),
(95.538,26.277,o),
(50,24,cs),
(35.333,22.667,o),
(18,21.667,o),
(18,11,cs),
(18,5.667,o),
(21.333,2.5,o),
(28,1.5,cs),
(34.667,0.5,o),
(42.667,0,o),
(52,0,cs),
(59.333,0,o),
(71.5,0.5,o),
(88.5,1.5,cs),
(105.5,2.5,o),
(123,3,o),
(141,3,cs),
(176.123,3,o),
(219.061,1,o),
(251,1,cs),
(268.333,1,o),
(279.667,2,o),
(285,4,cs),
(290.333,6,o),
(293,9.333,o),
(293,14,cs),
(293,23.333,o),
(283.333,28,o),
(264,28,cs),
(155,28,l),
(155,424,ls),
(155,431.333,o),
(161,435,o),
(173,435,cs),
(202.403,435,o),
(268.072,433,o),
(343,433,c),
(342,165,ls),
(342,133.59,o),
(341.836,72.245,o),
(370,30,cs),
(388,2.667,o),
(416,-11,o),
(454,-11,cs)
);
},
{
closed = 1;
nodes = (
(159.667,463,o),
(157.5,464.833,o),
(156.5,468.5,cs),
(155.5,472.167,o),
(155,481,o),
(155,495,cs),
(155,544.494,o),
(158.469,617.341,o),
(175,684.5,cs),
(191.303,750.733,o),
(225.806,799,o),
(279,799,cs),
(344.122,799,o),
(343,727.214,o),
(343,683,cs),
(343,463,l),
(163,463,l),
(163,463,l),
(163,463,l),
(163,463,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
120 113 102 57 2 40
CALL[ ]	/* CallFunction */";
};
width = 603;
}
);
note = f_t;
},
{
glyphname = fi;
kernLeft = f;
kernRight = f_f_i;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(436,462.667,o),
(427.667,487,o),
(397,487,cs),
(172,487,ls),
(165.333,487,o),
(164,487.333,o),
(164,498,cs),
(164,571.274,o),
(181.794,747,o),
(281,747,cs),
(338.333,747,o),
(356,719.667,o),
(356,697,cs),
(356,646.578,o),
(316,655.797,o),
(316,618,cs),
(316,595.333,o),
(328.667,570,o),
(378,570,cs),
(432.667,570,o),
(449,609.333,o),
(449,656,cs),
(449,798.777,o),
(371.58,825,o),
(309,825,cs),
(206.935,825,o),
(142.067,780.144,o),
(112,716,cs),
(81.932,651.854,o),
(76,579.296,o),
(76,509,cs),
(76,491.667,o),
(73.667,487,o),
(63,487,cs),
(40,487,ls),
(16,487,o),
(-3,476.667,o),
(-3,450,cs),
(-3,424,o),
(10.333,411,o),
(37,411,cs),
(63,411,ls),
(73.667,411,o),
(76,403.667,o),
(76,385,cs),
(76,300,ls),
(76,220.416,o),
(72.487,91.866,o),
(71,77,cs),
(69.667,65,o),
(68.333,58.667,o),
(59,56,cs),
(36.333,52,o),
(18,44.333,o),
(18,27,cs),
(18,4.333,o),
(38.333,0,o),
(61,0,cs),
(68.333,0,o),
(80.5,0.5,o),
(97.5,1.5,cs),
(114.5,2.5,o),
(132,3,o),
(150,3,cs),
(165.333,3,o),
(181.167,2.667,o),
(197.5,2,cs),
(213.833,1.333,o),
(228,1,o),
(240,1,cs),
(274.667,1,o),
(285,10,o),
(285,30,cs),
(285,50,o),
(274.333,60,o),
(253,60,cs),
(171,60,l),
(168.333,76,o),
(162,109.667,o),
(162,155,cs),
(162,185.701,o),
(163,228.369,o),
(163,283,cs),
(163,335.516,o),
(164,374.518,o),
(164,400,cs),
(164,407.333,o),
(170,411,o),
(182,411,cs),
(198.735,411,o),
(231.266,409,o),
(268,409,cs),
(275.386,409,o),
(294.279,411,o),
(325,411,cs),
(339.667,411,o),
(341.667,402,o),
(343,394,cs),
(344.049,386.658,o),
(347,287.73,o),
(347,145,cs),
(347,101.667,o),
(346.667,68.333,o),
(346,45,cs),
(345.333,21.667,o),
(344.333,2.667,o),
(343,-12,cs),
(342.333,-18,o),
(338.833,-22.167,o),
(332.5,-24.5,cs),
(326.167,-26.833,o),
(314.333,-29.667,o),
(297,-33,cs),
(286.333,-35.667,o),
(284,-47.333,o),
(284,-58,cs),
(284,-71.333,o),
(290.167,-80.167,o),
(302.5,-84.5,cs),
(314.833,-88.833,o),
(333.667,-91,o),
(359,-91,cs),
(524,-91,ls),
(541.333,-91,o),
(554,-81.667,o),
(554,-63,cs),
(554,-40.333,o),
(536.667,-31,o),
(506,-31,cs),
(432,-31,l),
(432,10.203,o),
(431,5.695,o),
(431,77,cs),
(431,166.176,o),
(436,339.691,o),
(436,428,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
35 1 3 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 8 9 6 9 8 6 104 0 0 0 1 0 1 87 0 9 9 7 83 0 7 7 12 67 5 1 2 2 6 83 10 1 6 6 23 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 8 9 6 9 8 6 104 10 1 6 5 1 2 3 6 2 91 0 0 0 1 0 1 87 0 9 9 7 83 0 7 7 12 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 8 9 6 9 8 6 104 10 1 6 5 1 2 3 6 2 91 0 0 0 1 0 1 87 0 9 9 7 83 0 7 7 14 67 0 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
136 133 127 125 116 114 108 106 98 95 92 89 73 65 62 60 49 37 52 42 11 17
CALL[ ]	/* CallFunction */";
};
width = 530;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(432,458.667,o),
(425.333,478,o),
(400,478,cs),
(168,478,ls),
(164.667,478,o),
(162.5,479,o),
(161.5,481,cs),
(160.5,483,o),
(160,488.667,o),
(160,498,cs),
(160,542.951,o),
(161.755,599.488,o),
(179,662,cs),
(195.495,721.793,o),
(229.2,765,o),
(287,765,cs),
(349.274,765,o),
(373,730.335,o),
(373,697,cs),
(373,646.861,o),
(333,651.612,o),
(333,618,cs),
(333,595.333,o),
(347.333,575,o),
(386,575,cs),
(432.688,575,o),
(445,612.781,o),
(445,656,cs),
(445,798.777,o),
(367.58,825,o),
(305,825,cs),
(212.977,825,o),
(153.76,780.617,o),
(126.5,716,cs),
(99.427,651.826,o),
(93,579.396,o),
(93,509,cs),
(93,489,o),
(92,478,o),
(80,478,cs),
(36,478,ls),
(12,478,o),
(-2,471,o),
(-2,451,cs),
(-2,433.667,o),
(10.333,420,o),
(33,420,cs),
(80,420,ls),
(90.667,420,o),
(93,412.667,o),
(93,394,cs),
(93,300,ls),
(93,287.132,o),
(94.533,100.93,o),
(88,65,cs),
(86.667,57.667,o),
(84.667,52.833,o),
(82,50.5,cs),
(79.333,48.167,o),
(70.333,46,o),
(55,44,cs),
(40.333,41.333,o),
(18,39.667,o),
(18,21,cs),
(18,-0.333,o),
(38.333,0,o),
(57,0,cs),
(64.333,0,o),
(76.5,0.5,o),
(93.5,1.5,cs),
(110.5,2.5,o),
(128,3,o),
(146,3,cs),
(181.123,3,o),
(224.061,1,o),
(256,1,cs),
(273.333,1,o),
(285,2.833,o),
(291,6.5,cs),
(297,10.167,o),
(300,16,o),
(300,24,cs),
(300,40,o),
(289.667,48,o),
(269,48,cs),
(167,48,l),
(166.333,51.333,o),
(164.667,63.667,o),
(162,85,cs),
(159.333,106.333,o),
(158,129.667,o),
(158,155,cs),
(158,187.571,o),
(159,231.573,o),
(159,287,cs),
(159,342.895,o),
(160,383.563,o),
(160,409,cs),
(160,416.333,o),
(166,420,o),
(178,420,cs),
(194.735,420,o),
(227.266,418,o),
(264,418,cs),
(274.947,418,o),
(300.872,420,o),
(342,420,cs),
(356.667,420,o),
(358.667,411,o),
(360,403,cs),
(361.041,395.712,o),
(364,293.785,o),
(364,145,cs),
(364,69,o),
(363,14.667,o),
(359,-12,c),
(359,-20,o),
(356.333,-25,o),
(351,-27,cs),
(345.667,-29,o),
(334.333,-31,o),
(317,-33,cs),
(301,-35.667,o),
(283,-38.333,o),
(283,-57,cs),
(283,-77.913,o),
(319.519,-79,o),
(355,-79,cs),
(516,-79,ls),
(529.333,-79,o),
(546,-77,o),
(546,-57,cs),
(546,-38.333,o),
(528.667,-31,o),
(498,-31,cs),
(428,-31,l),
(428,10.203,o),
(427,5.695,o),
(427,77,cs),
(427,166.176,o),
(432,339.691,o),
(432,428,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
37 1 3 2 29 1 0 4 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 8 9 6 9 8 6 104 0 0 0 1 0 1 87 0 9 9 7 83 0 7 7 12 67 5 1 2 2 6 83 10 1 6 6 23 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 8 9 6 9 8 6 104 10 1 6 5 1 2 3 6 2 91 0 0 0 1 0 1 87 0 9 9 7 83 0 7 7 12 67 0 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 8 9 6 9 8 6 104 10 1 6 5 1 2 3 6 2 91 0 0 0 1 0 1 87 0 9 9 7 83 0 7 7 14 67 0 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
147 144 136 134 123 121 113 111 103 100 96 93 77 67 64 62 51 39 68 42 11 17
CALL[ ]	/* CallFunction */";
};
width = 524;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(505,-59,ls),
(518.333,-59,o),
(535,-57.667,o),
(535,-47,cs),
(535,-41,o),
(530.833,-36.833,o),
(522.5,-34.5,cs),
(514.167,-32.167,o),
(502.333,-31,o),
(487,-31,cs),
(423,-31,l),
(423,10.203,o),
(422,5.695,o),
(422,77,cs),
(422,166.176,o),
(427,339.691,o),
(427,428,cs),
(427,449.333,o),
(421,463,o),
(405,463,cs),
(163,463,ls),
(159.667,463,o),
(157.5,465,o),
(156.5,469,cs),
(155.5,473,o),
(155,482.667,o),
(155,498,cs),
(155,546.172,o),
(154.553,611.881,o),
(172.5,680.5,cs),
(189.892,746.997,o),
(227.853,795,o),
(296,795,cs),
(366.689,795,o),
(398,744.983,o),
(398,697,cs),
(398,646.861,o),
(358,651.612,o),
(358,618,cs),
(358,595.333,o),
(375.333,583,o),
(398,583,cs),
(432.667,583,o),
(440,613.333,o),
(440,656,cs),
(440,798.777,o),
(362.58,825,o),
(300,825,cs),
(132.685,825,o),
(120.716,642.096,o),
(118,509,cs),
(118,494.333,o),
(117.333,483,o),
(116,475,cs),
(114.667,467,o),
(111,463,o),
(105,463,cs),
(31,463,ls),
(19,463,o),
(10.667,462.5,o),
(6,461.5,cs),
(1.333,460.5,o),
(-1,457.333,o),
(-1,452,cs),
(-1,448,o),
(1,444.167,o),
(5,440.5,cs),
(9,436.833,o),
(16.667,435,o),
(28,435,cs),
(105,435,ls),
(115.667,435,o),
(118,427.667,o),
(118,409,cs),
(118,300,ls),
(118,282.248,o),
(119.483,83.898,o),
(113,45,cs),
(110.163,27.98,o),
(97.351,26.255,o),
(50,24,cs),
(35.333,22.667,o),
(18,21.667,o),
(18,11,cs),
(18,5.667,o),
(21.333,2.5,o),
(28,1.5,cs),
(34.667,0.5,o),
(42.667,0,o),
(52,0,cs),
(59.333,0,o),
(71.5,0.5,o),
(88.5,1.5,cs),
(105.5,2.5,o),
(123,3,o),
(141,3,cs),
(176.123,3,o),
(219.061,1,o),
(251,1,cs),
(268.333,1,o),
(279.667,2,o),
(285,4,cs),
(290.333,6,o),
(293,9.333,o),
(293,14,cs),
(293,23.333,o),
(283.333,28,o),
(264,28,cs),
(162,28,l),
(162,29.216,o),
(153,84.372,o),
(153,155,cs),
(153,187.444,o),
(154,234.112,o),
(154,295,cs),
(154,353.658,o),
(155,396.659,o),
(155,424,cs),
(155,431.333,o),
(161,435,o),
(173,435,cs),
(189.735,435,o),
(222.266,433,o),
(259,433,cs),
(273.629,433,o),
(309.575,435,o),
(367,435,cs),
(381.667,435,o),
(383.667,428.667,o),
(385,418,cs),
(386.021,409.835,o),
(389,300.1,o),
(389,145,cs),
(389,69,o),
(388,14.667,o),
(384,-12,cs),
(382.667,-20,o),
(380,-25.167,o),
(376,-27.5,cs),
(372,-29.833,o),
(361.667,-31.667,o),
(345,-33,cs),
(329.667,-34.333,o),
(315.167,-35.667,o),
(301.5,-37,cs),
(287.833,-38.333,o),
(281,-41.667,o),
(281,-47,cs),
(281,-53,o),
(288.5,-56.5,o),
(303.5,-57.5,cs),
(318.5,-58.5,o),
(334,-59,o),
(350,-59,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 9 10 7 10 9 7 104 0 0 0 1 0 1 87 0 10 10 8 83 0 8 8 12 67 6 1 2 2 7 83 11 1 7 7 23 67 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 9 10 7 10 9 7 104 11 1 7 6 1 2 3 7 2 91 0 0 0 1 0 1 87 0 10 10 8 83 0 8 8 12 67 5 1 3 3 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 9 10 7 10 9 7 104 11 1 7 6 1 2 3 7 2 91 0 0 0 1 0 1 87 0 10 10 8 83 0 8 8 14 67 5 1 3 3 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
145 142 134 132 121 119 113 111 105 102 98 95 83 82 77 67 64 62 49 37 68 42 12 17
CALL[ ]	/* CallFunction */";
};
width = 516;
}
);
note = f_i;
unicode = 64257;
},
{
glyphname = fl;
kernLeft = f;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(225.185,825,o),
(158.707,777.413,o),
(125.5,711,cs),
(91.163,642.325,o),
(84.972,567.164,o),
(83,508,cs),
(81.667,490.667,o),
(78.667,487,o),
(68,487,cs),
(46,487,ls),
(22,487,o),
(-3,478,o),
(-3,446,cs),
(-3,422,o),
(16.333,411,o),
(43,411,cs),
(69,411,ls),
(79.667,411,o),
(82,403.667,o),
(82,385,cs),
(82,300,ls),
(82,192,o),
(80.667,107.667,o),
(78,77,cs),
(78,66.333,o),
(74.333,62,o),
(65,58,cs),
(54.292,54.431,o),
(16,50.725,o),
(16,27,cs),
(16,3,o),
(40.333,0,o),
(67,0,cs),
(74.333,0,o),
(86.5,0.5,o),
(103.5,1.5,cs),
(120.5,2.5,o),
(138,3,o),
(156,3,cs),
(171.333,3,o),
(187.167,2.667,o),
(203.5,2,cs),
(219.833,1.333,o),
(234,1,o),
(246,1,cs),
(280.667,1,o),
(288,10,o),
(288,30,cs),
(288,50,o),
(278.333,60,o),
(259,60,cs),
(170,60,l),
(170,400,ls),
(170,407.333,o),
(176,411,o),
(188,411,cs),
(203.161,411,o),
(227.403,409,o),
(254,409,cs),
(268.667,409,o),
(288,416.333,o),
(288,447,cs),
(288,473.667,o),
(269.333,487,o),
(256,487,cs),
(178,487,ls),
(172.667,487,o),
(170,488,o),
(170,490,cs),
(170,578.853,o),
(173.058,751,o),
(328,751,cs),
(339.333,751,o),
(346.5,745.167,o),
(349.5,733.5,cs),
(352.5,721.833,o),
(354,705,o),
(354,683,cs),
(354,634.198,o),
(355,555.752,o),
(355,436,cs),
(355,377.303,o),
(356.919,111.167,o),
(350,-3,cs),
(349.333,-11.667,o),
(348.167,-18.833,o),
(346.5,-24.5,cs),
(344.833,-30.167,o),
(342.333,-33,o),
(339,-33,cs),
(316,-33,ls),
(288,-33,o),
(278,-47.333,o),
(278,-62,cs),
(278,-79.333,o),
(293.667,-90,o),
(319,-90,cs),
(339,-90,o),
(357.5,-89.833,o),
(374.5,-89.5,cs),
(391.5,-89.167,o),
(406.667,-89,o),
(420,-89,cs),
(438.667,-89,o),
(457.833,-89.333,o),
(477.5,-90,cs),
(497.167,-90.667,o),
(510.333,-91,o),
(517,-91,cs),
(551.667,-91,o),
(566,-72,o),
(566,-60,cs),
(566,-41.333,o),
(542.333,-32,o),
(521,-32,cs),
(443,-32,l),
(443,19.346,o),
(442,100.846,o),
(442,212.5,cs),
(442,312.935,o),
(441,418.425,o),
(441,529,cs),
(441,581.757,o),
(440.802,622.087,o),
(441.5,650,cs),
(442.056,672.252,o),
(442,695.571,o),
(442,713,cs),
(442,749.586,o),
(443.742,825,o),
(333,825,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
116 1 5 4 98 1 7 6 95 1 8 7 40 1 1 8 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
3 1 1 0 2 1 2 87 0 4 4 0 83 11 1 0 0 12 67 9 1 6 6 5 83 10 1 5 5 23 67 0 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
10 1 5 9 1 6 7 5 6 91 3 1 1 0 2 1 2 87 0 4 4 0 83 11 1 0 0 12 67 0 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
10 1 5 9 1 6 7 5 6 91 3 1 1 0 2 1 2 87 0 4 4 0 83 11 1 0 0 14 67 0 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 114 111 107 104 88 80 77 75 73 66 62 59 54 52 38 35 31 23 19 17 0 122 1 122 12 15
CALL[ ]	/* CallFunction */";
};
width = 543;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(121.266,825,o),
(100.662,625.142,o),
(98,508,cs),
(96.667,489.333,o),
(95,478,o),
(83,478,cs),
(40,478,ls),
(16,478,o),
(-2,472,o),
(-2,448,cs),
(-2,429.333,o),
(11,420,o),
(37,420,cs),
(84,420,ls),
(94.667,420,o),
(97,412.667,o),
(97,394,cs),
(97,300,ls),
(97,295.628,o),
(97.993,94.96,o),
(93,65,cs),
(92.333,57.667,o),
(90,53,o),
(86,51,cs),
(82,49,o),
(73,47,o),
(59,45,cs),
(41.133,41.427,o),
(17,38.942,o),
(17,21,cs),
(17,0.984,o),
(43.954,0,o),
(61,0,cs),
(68.333,0,o),
(80.5,0.5,o),
(97.5,1.5,cs),
(114.5,2.5,o),
(132,3,o),
(150,3,cs),
(185.123,3,o),
(228.061,1,o),
(260,1,cs),
(277.333,1,o),
(288.667,2.833,o),
(294,6.5,cs),
(299.333,10.167,o),
(302,16,o),
(302,24,cs),
(302,40,o),
(292.333,48,o),
(273,48,cs),
(164,48,l),
(164,409,ls),
(164,416.333,o),
(170,420,o),
(182,420,cs),
(197.161,420,o),
(221.403,418,o),
(248,418,cs),
(262.667,418,o),
(280,424.333,o),
(280,447,cs),
(280,468.333,o),
(263.333,478,o),
(250,478,cs),
(172,478,ls),
(166.667,478,o),
(164,480,o),
(164,484,cs),
(164,527.518,o),
(164.837,596.373,o),
(184.5,659.5,cs),
(203.422,720.251,o),
(245.415,769,o),
(322,769,cs),
(370.36,769,o),
(369,728.858,o),
(369,683,cs),
(369,634.198,o),
(370,555.752,o),
(370,436,cs),
(370,377.303,o),
(371.919,111.167,o),
(365,-3,cs),
(363.667,-20.333,o),
(354.333,-33,o),
(333,-33,cs),
(310,-33,ls),
(294,-33,o),
(279,-45.333,o),
(279,-56,cs),
(279,-69.333,o),
(294.333,-78,o),
(313,-78,cs),
(333,-78,o),
(351.5,-77.833,o),
(368.5,-77.5,cs),
(385.5,-77.167,o),
(400.667,-77,o),
(414,-77,cs),
(432.667,-77,o),
(451.833,-77.333,o),
(471.5,-78,cs),
(491.167,-78.667,o),
(504.333,-79,o),
(511,-79,cs),
(540.333,-79,o),
(553,-64.667,o),
(553,-54,cs),
(553,-39.333,o),
(536.333,-32,o),
(515,-32,cs),
(437,-32,l),
(437,19.346,o),
(436,100.846,o),
(436,212.5,cs),
(436,312.935,o),
(435,418.425,o),
(435,529,cs),
(435,581.757,o),
(434.802,622.087,o),
(435.5,650,cs),
(436.056,672.252,o),
(436,695.571,o),
(436,713,cs),
(436,749.586,o),
(437.742,825,o),
(327,825,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
125 1 5 4 40 1 1 8 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
3 1 1 0 2 1 2 87 0 4 4 0 83 11 1 0 0 12 67 9 1 6 6 5 83 10 1 5 5 23 67 0 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
10 1 5 9 1 6 7 5 6 91 3 1 1 0 2 1 2 87 0 4 4 0 83 11 1 0 0 12 67 0 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
10 1 5 9 1 6 7 5 6 91 3 1 1 0 2 1 2 87 0 4 4 0 83 11 1 0 0 14 67 0 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 123 120 117 114 95 84 81 79 77 70 66 63 56 54 38 35 31 23 19 17 0 129 1 129 12 15
CALL[ ]	/* CallFunction */";
};
width = 532;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(516.667,-59,o),
(525.667,-57.333,o),
(529,-54,cs),
(532.333,-50.667,o),
(534,-47.333,o),
(534,-44,cs),
(534,-40,o),
(532,-37,o),
(528,-35,cs),
(524,-33,o),
(516.667,-32,o),
(506,-32,cs),
(428,-32,l),
(428,19.346,o),
(427,100.846,o),
(427,212.5,cs),
(427,312.935,o),
(426,418.425,o),
(426,529,cs),
(426,581.757,o),
(425.802,622.087,o),
(426.5,650,cs),
(427.056,672.252,o),
(427,695.571,o),
(427,713,cs),
(427,749.586,o),
(428.742,825,o),
(318,825,cs),
(231.551,825,o),
(179.962,777.129,o),
(152.5,710,cs),
(124.43,641.385,o),
(121,565.979,o),
(119,508,cs),
(118.333,494,o),
(117.167,483,o),
(115.5,475,cs),
(113.833,467,o),
(110,463,o),
(104,463,cs),
(31,463,ls),
(19,463,o),
(10.667,462.5,o),
(6,461.5,cs),
(1.333,460.5,o),
(-1,457.333,o),
(-1,452,cs),
(-1,448,o),
(1,444.167,o),
(5,440.5,cs),
(9,436.833,o),
(16.667,435,o),
(28,435,cs),
(105,435,ls),
(115.667,435,o),
(118,427.667,o),
(118,409,cs),
(118,300,ls),
(118,299.577,o),
(119.059,80.414,o),
(114,45,cs),
(111.279,28.672,o),
(95.538,26.277,o),
(50,24,cs),
(35.333,22.667,o),
(18,21.667,o),
(18,11,cs),
(18,5.667,o),
(21.333,2.5,o),
(28,1.5,cs),
(34.667,0.5,o),
(42.667,0,o),
(52,0,cs),
(59.333,0,o),
(71.5,0.5,o),
(88.5,1.5,cs),
(105.5,2.5,o),
(123,3,o),
(141,3,cs),
(176.123,3,o),
(219.061,1,o),
(251,1,cs),
(268.333,1,o),
(279.667,2,o),
(285,4,cs),
(290.333,6,o),
(293,9.333,o),
(293,14,cs),
(293,23.333,o),
(283.333,28,o),
(264,28,cs),
(155,28,l),
(155,424,ls),
(155,431.333,o),
(161,435,o),
(173,435,cs),
(188.161,435,o),
(212.403,433,o),
(239,433,cs),
(253.667,433,o),
(268,436.333,o),
(268,447,cs),
(268,457.667,o),
(254.333,463,o),
(241,463,cs),
(163,463,ls),
(160.333,463,o),
(158.333,464.333,o),
(157,467,cs),
(155.667,469.667,o),
(155,475.333,o),
(155,484,cs),
(155,533.09,o),
(155.976,608.124,o),
(175.5,678,cs),
(195.05,747.97,o),
(237.775,799,o),
(313,799,cs),
(389.972,799,o),
(390,747.506,o),
(390,683,cs),
(390,634.198,o),
(391,555.752,o),
(391,436,cs),
(391,377.303,o),
(392.919,111.167,o),
(386,-3,cs),
(384.667,-21,o),
(364,-31,o),
(324,-33,cs),
(301,-34,ls),
(293,-34.667,o),
(287.5,-36,o),
(284.5,-38,cs),
(281.5,-40,o),
(280,-42.667,o),
(280,-46,cs),
(280,-49.333,o),
(281.667,-52.167,o),
(285,-54.5,cs),
(288.333,-56.833,o),
(294.667,-58,o),
(304,-58,cs),
(324,-58,o),
(342.5,-57.833,o),
(359.5,-57.5,cs),
(376.5,-57.167,o),
(391.667,-57,o),
(405,-57,cs),
(423.667,-57,o),
(442.833,-57.333,o),
(462.5,-58,cs),
(482.167,-58.667,o),
(495.333,-59,o),
(502,-59,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
104 1 7 6 39 1 1 8 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
3 1 1 0 2 1 2 87 0 4 4 0 83 12 1 0 0 12 67 10 1 6 6 5 83 11 1 5 5 23 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
11 1 5 10 1 6 7 5 6 91 3 1 1 0 2 1 2 87 0 4 4 0 83 12 1 0 0 12 67 9 1 7 7 8 83 0 8 8 13 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
11 1 5 10 1 6 7 5 6 91 3 1 1 0 2 1 2 87 0 4 4 0 83 12 1 0 0 14 67 9 1 7 7 8 83 0 8 8 13 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 122 119 115 112 100 99 94 84 81 79 77 70 66 63 55 53 38 36 31 23 19 17 0 130 1 130 13 15
CALL[ ]	/* CallFunction */";
};
width = 516;
}
);
note = f_l;
unicode = 64258;
},
{
glyphname = l_l;
kernLeft = l;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(480,738.333,o),
(462.667,744,o),
(412,744,cs),
(374,744,o),
(347,741.333,o),
(331,736,cs),
(315,730.667,o),
(307,722,o),
(307,710,cs),
(307,688.667,o),
(328,682,o),
(360,682,cs),
(370,682,ls),
(387.333,682,o),
(389,675.333,o),
(389,654,cs),
(389,615.736,o),
(388.876,572.567,o),
(389.5,524.5,cs),
(390.177,472.389,o),
(390,407.223,o),
(390,329,cs),
(390,255.199,o),
(390.367,194.04,o),
(389,145.5,cs),
(387.667,98.167,o),
(386.333,61.667,o),
(385,27,cs),
(383.667,7,o),
(367.667,-3.667,o),
(349,-5,cs),
(309,-7,ls),
(306.333,-7,o),
(302.167,-8.833,o),
(296.5,-12.5,cs),
(290.833,-16.167,o),
(288,-25.667,o),
(288,-41,cs),
(288,-55.667,o),
(302,-76,o),
(338,-76,cs),
(360.808,-76,o),
(393.67,-74,o),
(429,-74,cs),
(464.729,-74,o),
(503.067,-77,o),
(529,-77,cs),
(562.333,-77,o),
(574,-54,o),
(574,-42,cs),
(574,-20.667,o),
(563.667,-1,o),
(517,-1,cs),
(481,-1,l),
(481,95.956,o),
(478,275.243,o),
(478,537,cs),
(478,588.954,o),
(480,657.046,o),
(480,709,cs)
);
},
{
closed = 1;
nodes = (
(220,821,o),
(214.351,821,o),
(170,821,cs),
(29.551,821,o),
(6,808.057,o),
(6,779,cs),
(6,771,o),
(9.5,765,o),
(16.5,761,cs),
(23.5,757,o),
(35.667,755,o),
(53,755,cs),
(96,755,ls),
(114.667,755,o),
(129,745.667,o),
(129,723,cs),
(129,683.416,o),
(128.929,643.082,o),
(129.5,602,cs),
(130.181,552.934,o),
(130,489.936,o),
(130,413,cs),
(130,337.421,o),
(130.354,274.928,o),
(129,225.5,cs),
(127.667,176.833,o),
(126.333,137.667,o),
(125,103,cs),
(123.667,84.333,o),
(108,72.333,o),
(88,71,cs),
(51,69,ls),
(37.667,67.667,o),
(25,60.333,o),
(25,39,cs),
(25,17.667,o),
(41,0,o),
(77,0,cs),
(87.667,0,o),
(100.333,0.333,o),
(115,1,cs),
(129.667,1.667,o),
(146,2,o),
(164,2,cs),
(162.551,2,o),
(231.589,-1,o),
(268,-1,cs),
(301.333,-1,o),
(313,22,o),
(313,34,cs),
(313,55.333,o),
(302.667,75,o),
(256,75,cs),
(221,75,l),
(221,117.667,o),
(220.667,183.833,o),
(220,273.5,cs),
(219.333,363.167,o),
(219,480.667,o),
(219,626,cs),
(219,634.667,o),
(219.167,651,o),
(219.5,675,cs),
(219.833,699,o),
(220,727.667,o),
(220,761,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
112 72 56 16 2 40
CALL[ ]	/* CallFunction */";
};
width = 559;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(167,819.667,o),
(147.333,820,o),
(110,820,cs),
(77.017,820,o),
(-30,819.117,o),
(-30,791,cs),
(-30,775,o),
(-12,770,o),
(16,770,cs),
(78,770,ls),
(95.333,770,o),
(97,763.333,o),
(97,742,cs),
(97,701.726,o),
(96.902,658.558,o),
(97.5,612.5,cs),
(98.182,559.966,o),
(98,493.468,o),
(98,413,cs),
(98,332.983,o),
(98.35,266.656,o),
(97,214,cs),
(95.667,162,o),
(94.333,122.333,o),
(93,85,cs),
(91.667,66.333,o),
(76,56,o),
(46,54,cs),
(13,52,ls),
(6.333,52,o),
(-8,46,o),
(-8,26,cs),
(-8,20,o),
(-4.833,14.167,o),
(1.5,8.5,cs),
(7.833,2.833,o),
(19,0,o),
(35,0,cs),
(57.808,0,o),
(90.67,2,o),
(126,2,cs),
(161.729,2,o),
(200.067,-1,o),
(226,-1,cs),
(254,-1,o),
(264,14.333,o),
(264,25,cs),
(264,33,o),
(260.833,40.333,o),
(254.5,47,cs),
(248.167,53.667,o),
(234.667,57,o),
(214,57,cs),
(168,57,l),
(168,101.667,o),
(167.667,170,o),
(167,262,cs),
(166.333,354,o),
(166,475.333,o),
(166,626,cs),
(166,628.162,o),
(167,681.162,o),
(167,785,cs)
);
},
{
closed = 1;
nodes = (
(372,755,o),
(352,755,o),
(315,755,cs),
(282,755,o),
(175,754,o),
(175,726,cs),
(175,710,o),
(193,705,o),
(221,705,cs),
(283,705,ls),
(300,705,o),
(302,698,o),
(302,677,cs),
(302,637,o),
(302,594,o),
(303,548,cs),
(303,495,o),
(303,428,o),
(303,348,cs),
(303,268,o),
(303,202,o),
(302,149,cs),
(301,97,o),
(299,57,o),
(298,20,cs),
(297,1,o),
(281,-9,o),
(251,-11,cs),
(218,-13,ls),
(211,-13,o),
(197,-19,o),
(197,-39,cs),
(197,-45,o),
(200,-51,o),
(207,-56,cs),
(213,-62,o),
(224,-65,o),
(240,-65,cs),
(263,-65,o),
(296,-63,o),
(331,-63,cs),
(367,-63,o),
(405,-66,o),
(431,-66,cs),
(459,-66,o),
(469,-51,o),
(469,-40,cs),
(469,-32,o),
(466,-25,o),
(460,-18,cs),
(453,-11,o),
(440,-8,o),
(419,-8,cs),
(373,-8,l),
(373,37,o),
(373,105,o),
(372,197,cs),
(371,289,o),
(371,410,o),
(371,561,cs),
(371,563,o),
(372,616,o),
(372,720,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
115 74 56 15 2 41
CALL[ ]	/* CallFunction */";
};
width = 453;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(226.667,-1,o),
(234,0,o),
(238,2,cs),
(242,4,o),
(244,6.667,o),
(244,10,cs),
(244,14,o),
(241.5,17.833,o),
(236.5,21.5,cs),
(231.5,25.167,o),
(220.667,27,o),
(204,27,cs),
(143,27,l),
(143,73.667,o),
(142.667,145.5,o),
(142,242.5,cs),
(141.333,339.5,o),
(141,467.333,o),
(141,626,cs),
(141,628.162,o),
(142,681.162,o),
(142,785,cs),
(142,819.667,o),
(126.667,820,o),
(100,820,cs),
(46.785,820,o),
(-30,815.896,o),
(-30,799,cs),
(-30,795.667,o),
(-26.833,793.333,o),
(-20.5,792,cs),
(-14.167,790.667,o),
(-5.333,790,o),
(6,790,cs),
(83,790,ls),
(100.333,790,o),
(102,783.333,o),
(102,762,cs),
(102,718.9,o),
(101.904,672.898,o),
(102.5,624,cs),
(103.18,568.236,o),
(103,497.904,o),
(103,413,cs),
(103,326.791,o),
(103.36,254.463,o),
(102,196,cs),
(100.667,138.667,o),
(99.333,95,o),
(98,55,cs),
(96.667,37,o),
(76,27,o),
(36,25,cs),
(13,24,ls),
(-1,23.333,o),
(-8,19,o),
(-8,11,cs),
(-8,7,o),
(-5.833,4.167,o),
(-1.5,2.5,cs),
(2.833,0.833,o),
(11.667,0,o),
(25,0,cs),
(47.808,0,o),
(80.67,2,o),
(116,2,cs),
(151.729,2,o),
(190.067,-1,o),
(216,-1,cs)
);
},
{
closed = 1;
nodes = (
(430.667,-67,o),
(438,-66,o),
(442,-64,cs),
(446,-62,o),
(448,-59.333,o),
(448,-56,cs),
(448,-52,o),
(445.5,-48.167,o),
(440.5,-44.5,cs),
(435.5,-40.833,o),
(424.667,-39,o),
(408,-39,cs),
(347,-39,l),
(347,4.333,o),
(346.667,78.333,o),
(346,183,cs),
(345.333,287.667,o),
(345,420.333,o),
(345,581,cs),
(345,581.667,o),
(345,592,o),
(345,612,cs),
(345,632,o),
(345.333,667.667,o),
(346,719,cs),
(346,753.667,o),
(331.667,754,o),
(305,754,cs),
(259.586,754,o),
(200,750.666,o),
(200,733,cs),
(200,729.667,o),
(203.167,727.333,o),
(209.5,726,cs),
(215.833,724.667,o),
(224.667,724,o),
(236,724,cs),
(287,724,ls),
(304.333,724,o),
(306,717.333,o),
(306,696,cs),
(306,652.314,o),
(305.929,609.371,o),
(306.5,566,cs),
(307.188,513.683,o),
(307,445.018,o),
(307,360,cs),
(307,271.578,o),
(307.354,196.917,o),
(306,136,cs),
(304.667,76,o),
(303.333,29,o),
(302,-11,cs),
(301.333,-19,o),
(296.167,-25.667,o),
(286.5,-31,cs),
(276.833,-36.333,o),
(261.333,-39.667,o),
(240,-41,cs),
(217,-42,ls),
(203,-42.667,o),
(196,-47,o),
(196,-55,cs),
(196,-59,o),
(198.167,-61.833,o),
(202.5,-63.5,cs),
(206.833,-65.167,o),
(215.667,-66,o),
(229,-66,cs),
(251.808,-66,o),
(284.67,-64,o),
(320,-64,cs),
(355.729,-64,o),
(394.067,-67,o),
(420,-67,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
111 71 53 12 2 40
CALL[ ]	/* CallFunction */";
};
width = 430;
}
);
note = l_l;
},
{
glyphname = s_p;
kernLeft = s;
kernRight = c_p;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(780.621,-11,o),
(916,50.058,o),
(916,239,cs),
(916,334.19,o),
(886.859,471,o),
(727,471,cs),
(670.431,471,o),
(592.251,438.674,o),
(558,357,c),
(558,591,ls),
(558,660.333,o),
(498.333,692,o),
(417,692,cs),
(347.667,692,o),
(303,639.333,o),
(303,566,cs),
(303,527.373,o),
(321.188,447.925,o),
(332,409,c),
(310.667,433,o),
(268,465,o),
(212,465,cs),
(132.384,465,o),
(51,431.203,o),
(51,323,cs),
(51,202.429,o),
(152.973,181.097,o),
(243,162,cs),
(329.298,143.122,o),
(337,123.4,o),
(337,100,cs),
(337,53.153,o),
(282.335,43,o),
(258,43,cs),
(180.91,43,o),
(135.275,86.599,o),
(125,114,cs),
(122.333,123.333,o),
(117.333,144.667,o),
(116,154,cs),
(113.333,176.667,o),
(104.667,197,o),
(70,197,cs),
(36.667,197,o),
(33,180.667,o),
(33,158,cs),
(33,142.667,o),
(33.5,125.667,o),
(34.5,107,cs),
(35.5,88.333,o),
(36,72.333,o),
(36,59,cs),
(36,50.333,o),
(35.833,41.5,o),
(35.5,32.5,cs),
(35.167,23.5,o),
(35,15.333,o),
(35,8,cs),
(35,-18.667,o),
(54,-31,o),
(74,-31,cs),
(109.307,-31,o),
(118,-19.936,o),
(118,36,c),
(145.08,-18.159,o),
(203.129,-26,o),
(256,-26,cs),
(328.218,-26,o),
(423,-7.891,o),
(423,101,cs),
(423,197.546,o),
(347.072,214.405,o),
(226,244,cs),
(166,258.667,o),
(133,278.333,o),
(133,325,cs),
(133,363.667,o),
(159.667,385,o),
(221,385,cs),
(289.53,385,o),
(323.523,350.432,o),
(331,328,cs),
(333.667,321.333,o),
(338.667,306,o),
(340,298,c),
(340,288.251,o),
(353.616,255,o),
(381,255,cs),
(423.667,255,o),
(430,274.667,o),
(430,300,cs),
(430,318.79,o),
(411.746,398.368,o),
(399,457,cs),
(393.667,481,o),
(391,499.333,o),
(391,550,cs),
(391,604.569,o),
(408.993,622,o),
(431,622,cs),
(453.811,622,o),
(467,610.476,o),
(467,530,cs),
(467,414,o),
(468.5,344.5,o),
(470.5,286.5,cs),
(472.5,228.5,o),
(474,182.333,o),
(474,117,cs),
(474,13.188,o),
(471,-36.976,o),
(471,-86,cs),
(471,-101.333,o),
(470,-112,o),
(468,-118,cs),
(466,-124,o),
(461.333,-127,o),
(454,-127,cs),
(419.333,-127,o),
(397,-144.333,o),
(397,-171,cs),
(397,-199,o),
(417.333,-202,o),
(432,-202,cs),
(657,-202,ls),
(678.333,-202,o),
(694,-191.667,o),
(694,-169,cs),
(694,-139.667,o),
(664.333,-126,o),
(627,-126,cs),
(562,-126,l),
(562,68,l),
(580.219,36.767,o),
(611.682,-11,o),
(716,-11,cs)
);
},
{
closed = 1;
nodes = (
(588.588,67,o),
(561,136.649,o),
(561,223,cs),
(561,334.668,o),
(661.687,392,o),
(722,392,cs),
(811.219,392,o),
(821,295.747,o),
(821,243,cs),
(821,110.64,o),
(752.543,67,o),
(712,67,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
175 166 146 12 2 40
CALL[ ]	/* CallFunction */";
};
width = 944;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(531,661.667,o),
(480.333,692,o),
(411,692,cs),
(341.667,692,o),
(297,639.333,o),
(297,566,cs),
(297,523.488,o),
(315.676,445.366,o),
(328,401,c),
(306.723,428.356,o),
(271.65,465,o),
(206,465,cs),
(126.478,465,o),
(48,427.064,o),
(48,328,cs),
(48,226.207,o),
(130.803,199.661,o),
(203,183,cs),
(281.667,163,o),
(331,148.333,o),
(331,103,cs),
(331,56.749,o),
(277.702,41,o),
(231,41,cs),
(169.311,41,o),
(123.363,72,o),
(107,108,cs),
(103.667,114.667,o),
(101.833,120.833,o),
(101.5,126.5,cs),
(101.167,132.167,o),
(100.333,139.667,o),
(99,149,cs),
(96.333,173,o),
(90.667,189,o),
(64,189,cs),
(38.667,189,o),
(37,175.333,o),
(37,154,cs),
(37,139.333,o),
(37.667,123.667,o),
(39,107,cs),
(40.333,90.333,o),
(41,75.333,o),
(41,62,cs),
(41,52.667,o),
(40.667,41.5,o),
(40,28.5,cs),
(39.333,15.5,o),
(39,7.333,o),
(39,4,cs),
(39,-14.63,o),
(56.392,-22,o),
(72,-22,cs),
(92,-22,o),
(102,-7,o),
(102,13,cs),
(102,17,o),
(102,21.333,o),
(102,26,cs),
(102,30.667,o),
(101.667,35.667,o),
(101,41,c),
(125.163,-4.641,o),
(185.815,-16,o),
(234,-16,cs),
(297.581,-16,o),
(399,3.162,o),
(399,107,cs),
(399,196.135,o),
(322.808,216.565,o),
(225,243,cs),
(167.115,258.1,o),
(114,275.27,o),
(114,330,cs),
(114,374,o),
(146.333,404,o),
(209,404,cs),
(271.667,404,o),
(302,374.667,o),
(318,344,cs),
(324.724,332.793,o),
(336,293.794,o),
(336,292,c),
(341.499,275.502,o),
(348.89,257,o),
(369,257,cs),
(399.667,257,o),
(405,274.333,o),
(405,293,cs),
(405,314.964,o),
(387.644,379.371,o),
(378,430,cs),
(368.667,480.667,o),
(366,519.333,o),
(366,550,cs),
(366,616.213,o),
(404.953,632,o),
(420,632,cs),
(433.93,632,o),
(461,622.789,o),
(461,553,cs),
(461,541.667,o),
(461,524.667,o),
(461,502,cs),
(461,479.333,o),
(461.333,453,o),
(462,423,cs),
(462,343.481,o),
(466,256.866,o),
(466,124,cs),
(466,54.298,o),
(463,-31.342,o),
(463,-86,cs),
(463,-135.872,o),
(465.527,-142.123,o),
(431,-145,cs),
(396.333,-149,o),
(375,-160,o),
(375,-180,cs),
(375,-201.333,o),
(395,-202,o),
(403,-202,cs),
(628,-202,ls),
(638.667,-202,o),
(658,-197.667,o),
(658,-179,cs),
(658,-156.333,o),
(632.667,-144,o),
(598,-144,cs),
(533,-144,l),
(533,68,l),
(551.018,34.537,o),
(591.319,-11,o),
(681,-11,cs),
(749.374,-11,o),
(887,46.341,o),
(887,238,cs),
(887,336.572,o),
(853.146,471,o),
(703,471,cs),
(636.333,471,o),
(565.667,434.333,o),
(531,353,c),
(531,591,l),
(531,591,l)
);
},
{
closed = 1;
nodes = (
(532,345.369,o),
(625.424,410,o),
(699,410,cs),
(797.625,410,o),
(813,304.812,o),
(813,240,cs),
(813,88.505,o),
(728.777,49,o),
(678,49,cs),
(562.52,49,o),
(532,129.193,o),
(532,219,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
188 178 169 25 2 40
CALL[ ]	/* CallFunction */";
};
width = 918;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(587,-202,ls),
(597.667,-202,o),
(607,-196.667,o),
(607,-190,cs),
(607,-179.333,o),
(590.333,-174,o),
(557,-174,cs),
(492,-174,l),
(492,68,l),
(507.925,33.496,o),
(559.513,-11,o),
(631,-11,cs),
(711.342,-11,o),
(846,45.806,o),
(846,236,cs),
(846,335.48,o),
(807.779,471,o),
(669,471,cs),
(585,471,o),
(526.667,422,o),
(492,346,c),
(492,591,ls),
(492,661.667,o),
(454,692,o),
(402,692,cs),
(332.667,692,o),
(288,639.333,o),
(288,566,cs),
(288,514.209,o),
(310.74,437.67,o),
(322,387,c),
(308.812,413.376,o),
(280.04,465,o),
(197,465,cs),
(113.39,465,o),
(44,416.261,o),
(44,336,cs),
(44,259.936,o),
(104.856,229.756,o),
(146,218,cs),
(187.398,206.501,o),
(322,188.459,o),
(322,108,cs),
(322,57.333,o),
(273,30,o),
(205,30,cs),
(154.333,30,o),
(109.333,45.333,o),
(88,88,cs),
(84,96,o),
(81.167,104.333,o),
(79.5,113,cs),
(77.833,121.667,o),
(76,131,o),
(74,141,cs),
(71.333,154.333,o),
(69,163.333,o),
(67,168,cs),
(65,172.667,o),
(61.333,175,o),
(56,175,cs),
(45.333,175,o),
(43,166.667,o),
(43,148,cs),
(43,134,o),
(43.833,120.167,o),
(45.5,106.5,cs),
(47.167,92.833,o),
(48,79.667,o),
(48,67,cs),
(48,57.667,o),
(47.5,48.5,o),
(46.5,39.5,cs),
(45.5,30.5,o),
(45,22.667,o),
(45,16,cs),
(45,0.667,o),
(49,-7,o),
(57,-7,cs),
(63,-7,o),
(67.667,-2.833,o),
(71,5.5,cs),
(74.333,13.833,o),
(76.333,28.667,o),
(77,50,c),
(99.177,16.735,o),
(158.377,0,o),
(202,0,cs),
(253.449,0,o),
(365,22.23,o),
(365,117,cs),
(365,194.884,o),
(291.093,219.53,o),
(224,241,cs),
(160.393,260.359,o),
(87,267.805,o),
(87,339,cs),
(87,392.333,o),
(128,435,o),
(192,435,cs),
(232,435,o),
(272,420.667,o),
(300,370,cs),
(318.667,338,o),
(325.333,310,o),
(332,282,cs),
(334.667,271.333,o),
(340,261,o),
(352,261,cs),
(362.667,261,o),
(369,272.667,o),
(369,282,cs),
(369,304.383,o),
(327,461.135,o),
(327,550,cs),
(327,657.299,o),
(385.487,662,o),
(401,662,cs),
(426.333,662,o),
(452,646.667,o),
(452,592,cs),
(452,559.813,o),
(452.278,506.117,o),
(453.5,392.5,cs),
(454.593,290.837,o),
(455,211.457,o),
(455,135,cs),
(455,41.1,o),
(452,7.884,o),
(452,-86,cs),
(452,-160.951,o),
(447.752,-172.381,o),
(398,-175,cs),
(377.333,-176.333,o),
(363.167,-178,o),
(355.5,-180,cs),
(347.833,-182,o),
(344,-185.667,o),
(344,-191,cs),
(344,-201.667,o),
(355.333,-202,o),
(362,-202,cs)
);
},
{
closed = 1;
nodes = (
(526.392,19,o),
(491,111.688,o),
(491,212,cs),
(491,370.133,o),
(580.267,440,o),
(666,440,cs),
(778.123,440,o),
(802,316.676,o),
(802,235,cs),
(802,73.992,o),
(708.585,19,o),
(630,19,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
169 159 122 93 2 40
CALL[ ]	/* CallFunction */";
};
width = 881;
}
);
note = s_p;
},
{
glyphname = s_t;
kernLeft = s;
kernRight = c_t;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(681.572,-11,o),
(722,80.146,o),
(722,117,cs),
(722,130.333,o),
(716.667,153,o),
(690,153,cs),
(650.591,153,o),
(641.823,128.077,o),
(634,102,cs),
(628.809,89.022,o),
(628.721,67,o),
(599,67,cs),
(571.644,67,o),
(561,122.015,o),
(561,152,cs),
(561,394,l),
(580.333,395.333,o),
(600.667,396.167,o),
(622,396.5,cs),
(643.333,396.833,o),
(664.333,398.667,o),
(685,402,cs),
(693,403.333,o),
(719,413.667,o),
(719,439,cs),
(719,467,o),
(692,478,o),
(676,478,cs),
(657.175,478,o),
(578.128,474,o),
(561,474,c),
(561,565,ls),
(561,651.667,o),
(510.333,692,o),
(417,692,cs),
(347.667,692,o),
(303,639.333,o),
(303,566,cs),
(303,527.373,o),
(321.188,447.925,o),
(332,409,c),
(310.667,433,o),
(268,465,o),
(212,465,cs),
(132.384,465,o),
(51,431.203,o),
(51,323,cs),
(51,201.201,o),
(154.339,180.807,o),
(243,162,cs),
(327.006,143.031,o),
(337,127.265,o),
(337,100,cs),
(337,63.093,o),
(290.409,48,o),
(249,48,cs),
(168.325,48,o),
(127.621,99.677,o),
(120,120,cs),
(118.667,122.667,o),
(116,143.333,o),
(116,154,cs),
(116,176.667,o),
(107.333,197,o),
(70,197,cs),
(35.333,197,o),
(33,180.667,o),
(33,158,cs),
(33,142.667,o),
(33.5,125.667,o),
(34.5,107,cs),
(35.5,88.333,o),
(36,72.333,o),
(36,59,cs),
(36,50.333,o),
(35.833,40.5,o),
(35.5,29.5,cs),
(35.167,18.5,o),
(35,12.333,o),
(35,11,cs),
(35,-23.667,o),
(57.333,-31,o),
(72,-31,cs),
(110.667,-31,o),
(116.667,-10.667,o),
(118,36,c),
(146.073,-15.041,o),
(201.707,-26,o),
(256,-26,cs),
(328.218,-26,o),
(423,-7.891,o),
(423,101,cs),
(423,197.546,o),
(347.072,214.405,o),
(226,244,cs),
(166,258.667,o),
(133,278.333,o),
(133,325,cs),
(133,363.667,o),
(159.667,385,o),
(221,385,cs),
(294.23,385,o),
(324.798,349.708,o),
(331,328,cs),
(332.333,324,o),
(333.333,320,o),
(334,316,cs),
(334.667,312,o),
(335.667,308.333,o),
(337,305,cs),
(338.333,301,o),
(339.333,297.333,o),
(340,294,cs),
(341.333,280.667,o),
(358.333,255,o),
(381,255,cs),
(421,255,o),
(430,274.667,o),
(430,300,cs),
(430,324.869,o),
(404.498,408.016,o),
(398,460,cs),
(392.667,506.667,o),
(393,528.667,o),
(393,550,cs),
(393,604.244,o),
(420.97,614,o),
(433,614,cs),
(447.821,614,o),
(469,589.358,o),
(469,530,cs),
(469,165,ls),
(469,119.872,o),
(470.659,68.012,o),
(496,30,cs),
(514,2.667,o),
(542,-11,o),
(580,-11,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
112 1 3 8 34 1 2 3 84 1 12 13 63 1 0 7 4 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
112 1 11 8 34 1 2 3 84 1 12 13 63 1 0 7 4 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 2 3 6 3 2 6 104 0 13 6 12 6 13 12 104 0 9 0 1 8 9 1 91 11 1 3 3 8 83 10 1 8 8 23 67 0 6 6 4 83 5 1 4 4 21 67 0 12 12 0 83 14 1 0 0 24 67 0 7 7 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 2 3 6 3 2 6 104 0 13 6 12 6 13 12 104 0 9 0 1 8 9 1 91 10 1 8 11 1 3 2 8 3 91 0 6 6 4 83 5 1 4 4 21 67 0 12 12 0 83 14 1 0 0 24 67 0 7 7 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 2 3 6 3 2 6 104 0 13 6 12 6 13 12 104 0 9 0 1 10 9 1 91 0 10 8 3 10 79 0 8 11 1 3 2 8 3 91 0 6 6 4 83 5 1 4 4 21 67 0 12 12 0 83 14 1 0 0 24 67 0 7 7 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 2 3 6 3 2 6 104 0 13 6 12 6 13 12 104 0 9 0 1 10 9 1 91 0 10 0 11 3 10 11 91 0 8 0 3 2 8 3 91 0 6 6 4 83 5 1 4 4 21 67 0 12 12 0 83 14 1 0 0 24 67 0 7 7 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 2 3 6 3 2 6 104 0 13 6 12 6 13 12 104 0 9 0 1 10 9 1 91 0 10 0 11 3 10 11 91 0 8 0 3 2 8 3 91 0 6 13 4 6 79 0 7 5 1 4 7 4 87 0 12 12 0 83 14 1 0 0 24 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
0 2 3 6 3 2 6 104 0 13 6 12 6 13 12 104 0 9 0 1 10 9 1 91 0 10 0 11 3 10 11 91 0 8 0 3 2 8 3 91 0 7 0 4 5 7 4 91 0 6 0 5 6 5 87 0 12 12 0 83 14 1 0 0 24 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
1 0 155 153 145 143 138 136 130 124 121 119 110 108 90 88 79 77 67 65 59 57 43 41 30 28 14 12 0 161 1 161 15 15
CALL[ ]	/* CallFunction */";
};
width = 733;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(460,133.59,o),
(459.836,72.245,o),
(488,30,cs),
(506,2.667,o),
(534,-11,o),
(572,-11,cs),
(673.572,-11,o),
(714,80.146,o),
(714,117,cs),
(714,124.048,o),
(708.602,147,o),
(689,147,cs),
(657.375,147,o),
(655.303,124.14,o),
(647,102,cs),
(638.921,80.457,o),
(626.167,49,o),
(586,49,cs),
(539.822,49,o),
(532,106.634,o),
(532,152,cs),
(532,406,l),
(554.667,407.333,o),
(578.5,408.333,o),
(603.5,409,cs),
(628.5,409.667,o),
(653,411.333,o),
(677,414,c),
(689,416.667,o),
(704,424.333,o),
(704,443,cs),
(704,464.333,o),
(684,472,o),
(668,472,cs),
(649.523,472,o),
(556.507,468,o),
(532,468,c),
(532,575,ls),
(532,655,o),
(487,692,o),
(411,692,cs),
(341.667,692,o),
(297,639.333,o),
(297,566,cs),
(297,523.488,o),
(315.676,445.366,o),
(328,401,c),
(306.723,428.356,o),
(271.65,465,o),
(206,465,cs),
(126.478,465,o),
(48,427.064,o),
(48,328,cs),
(48,226.207,o),
(130.803,199.661,o),
(203,183,cs),
(281.667,163,o),
(331,148.333,o),
(331,103,cs),
(331,56.749,o),
(277.702,41,o),
(231,41,cs),
(169.311,41,o),
(123.363,72,o),
(107,108,cs),
(103.667,114.667,o),
(101.833,120.833,o),
(101.5,126.5,cs),
(101.167,132.167,o),
(100.333,139.667,o),
(99,149,cs),
(96.333,173,o),
(90.667,189,o),
(64,189,cs),
(38.667,189,o),
(37,175.333,o),
(37,154,cs),
(37,139.333,o),
(37.667,123.667,o),
(39,107,cs),
(40.333,90.333,o),
(41,75.333,o),
(41,62,cs),
(41,52.667,o),
(40.667,41.5,o),
(40,28.5,cs),
(39.333,15.5,o),
(39,7.333,o),
(39,4,cs),
(39,-14.63,o),
(56.392,-22,o),
(72,-22,cs),
(92,-22,o),
(102,-7,o),
(102,13,cs),
(102,17,o),
(102,21.333,o),
(102,26,cs),
(102,30.667,o),
(101.667,35.667,o),
(101,41,c),
(125.163,-4.641,o),
(185.815,-16,o),
(234,-16,cs),
(297.581,-16,o),
(399,3.162,o),
(399,107,cs),
(399,196.135,o),
(322.808,216.565,o),
(225,243,cs),
(167.115,258.1,o),
(114,275.27,o),
(114,330,cs),
(114,374,o),
(146.333,404,o),
(209,404,cs),
(271.667,404,o),
(302,374.667,o),
(318,344,cs),
(324.724,332.793,o),
(336,293.794,o),
(336,292,c),
(341.499,275.502,o),
(348.89,257,o),
(369,257,cs),
(399.667,257,o),
(405,274.333,o),
(405,293,cs),
(405,314.964,o),
(387.644,379.371,o),
(378,430,cs),
(368.667,480.667,o),
(366,519.333,o),
(366,550,cs),
(366,616.213,o),
(404.953,632,o),
(420,632,cs),
(433.93,632,o),
(461,622.789,o),
(461,553,cs),
(460,165,l),
(460,165,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
111 26 2 1 2 1 66 57 1 6 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 1 2 5 2 1 5 104 0 12 5 6 5 12 6 104 0 8 0 0 7 8 0 91 10 1 2 2 7 83 9 1 7 7 23 67 0 5 5 3 83 13 4 2 3 3 21 67 11 1 6 6 3 83 13 4 2 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 1 2 5 2 1 5 104 0 12 5 6 5 12 6 104 0 8 0 0 7 8 0 91 9 1 7 10 1 2 1 7 2 91 0 5 5 3 83 13 4 2 3 3 21 67 11 1 6 6 3 83 13 4 2 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
0 1 2 5 2 1 5 104 0 12 5 11 5 12 11 104 0 8 0 0 7 8 0 91 9 1 7 10 1 2 1 7 2 91 0 5 5 3 83 13 4 2 3 3 21 67 0 11 11 3 83 13 4 2 3 3 21 67 0 6 6 3 83 13 4 2 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 1 2 5 2 1 5 104 0 12 5 11 5 12 11 104 0 8 0 0 7 8 0 91 9 1 7 10 1 2 1 7 2 91 0 11 11 3 83 13 1 3 3 21 67 0 6 6 3 83 13 1 3 3 21 67 0 5 5 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 70 values pushed */
0 1 2 5 2 1 5 104 0 12 5 11 5 12 11 104 0 8 0 0 9 8 0 91 0 9 7 2 9 79 0 7 10 1 2 1 7 2 91 0 11 11 13 83 0 13 13 24 67 0 6 6 3 83 0 3 3 21 67 0 5 5 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
164 162 154 152 144 142 137 135 129 123 120 118 107 105 89 87 78 76 64 62 53 51 43 46 36 14 18
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(662.572,-11,o),
(703,80.146,o),
(703,117,cs),
(703,123.667,o),
(702.667,137,o),
(688,137,cs),
(673.333,137,o),
(672.667,123.333,o),
(666,102,cs),
(655.022,63.577,o),
(625.478,19,o),
(568,19,cs),
(489.773,19,o),
(491,98.109,o),
(491,152,cs),
(491,426,l),
(518.333,427.333,o),
(547,428.333,o),
(577,429,cs),
(607,429.667,o),
(636.667,431.333,o),
(666,434,cs),
(678,435.333,o),
(683,442.333,o),
(683,449,cs),
(683,457.667,o),
(674.333,462,o),
(657,462,cs),
(637.217,462,o),
(512.921,458,o),
(491,458,c),
(491,591,ls),
(491,661.667,o),
(454,692,o),
(402,692,cs),
(332.667,692,o),
(288,639.333,o),
(288,566,cs),
(288,514.209,o),
(310.74,437.67,o),
(322,387,c),
(308.812,413.376,o),
(280.04,465,o),
(197,465,cs),
(113.39,465,o),
(44,416.261,o),
(44,336,cs),
(44,259.936,o),
(104.856,229.756,o),
(146,218,cs),
(187.398,206.501,o),
(322,188.459,o),
(322,108,cs),
(322,57.333,o),
(273,30,o),
(205,30,cs),
(154.333,30,o),
(109.333,45.333,o),
(88,88,cs),
(84,96,o),
(81.167,104.333,o),
(79.5,113,cs),
(77.833,121.667,o),
(76,131,o),
(74,141,cs),
(71.333,154.333,o),
(69,163.333,o),
(67,168,cs),
(65,172.667,o),
(61.333,175,o),
(56,175,cs),
(45.333,175,o),
(43,166.667,o),
(43,148,cs),
(43,134,o),
(43.833,120.167,o),
(45.5,106.5,cs),
(47.167,92.833,o),
(48,79.667,o),
(48,67,cs),
(48,57.667,o),
(47.5,48.5,o),
(46.5,39.5,cs),
(45.5,30.5,o),
(45,22.667,o),
(45,16,cs),
(45,0.667,o),
(49,-7,o),
(57,-7,cs),
(63,-7,o),
(67.667,-2.833,o),
(71,5.5,cs),
(74.333,13.833,o),
(76.333,28.667,o),
(77,50,c),
(99.177,16.735,o),
(158.377,0,o),
(202,0,cs),
(253.449,0,o),
(365,22.23,o),
(365,117,cs),
(365,194.884,o),
(291.093,219.53,o),
(224,241,cs),
(160.393,260.359,o),
(87,267.805,o),
(87,339,cs),
(87,392.333,o),
(128,435,o),
(192,435,cs),
(232,435,o),
(272.333,419.333,o),
(299,370,cs),
(317.667,336.667,o),
(325.333,310,o),
(332,282,c),
(334.667,275.333,o),
(340,261,o),
(352,261,cs),
(362.667,261,o),
(369,272.667,o),
(369,282,cs),
(369,304.383,o),
(327,461.135,o),
(327,550,cs),
(327,657.299,o),
(385.487,662,o),
(401,662,cs),
(426.333,662,o),
(452,646.667,o),
(452,592,cs),
(449,165,ls),
(449,133.59,o),
(448.836,72.245,o),
(477,30,cs),
(495,2.667,o),
(523,-11,o),
(561,-11,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
94 1 1 10 48 1 6 12 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 79 values pushed */
0 1 10 5 10 1 5 104 0 12 5 6 5 12 6 104 0 8 0 0 7 8 0 91 0 2 2 7 83 9 1 7 7 23 67 0 10 10 7 83 9 1 7 7 23 67 0 5 5 4 83 13 1 4 4 24 67 0 6 6 3 83 0 3 3 13 67 0 11 11 4 83 13 1 4 4 24 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 79 values pushed */
0 1 10 5 10 1 5 104 0 12 5 6 5 12 6 104 0 8 0 0 7 8 0 91 0 2 2 7 83 9 1 7 7 23 67 0 10 10 7 83 9 1 7 7 23 67 0 5 5 4 83 13 1 4 4 16 67 0 6 6 3 83 0 3 3 13 67 0 11 11 4 83 13 1 4 4 16 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 79 values pushed */
0 1 10 5 10 1 5 104 0 12 5 6 5 12 6 104 0 8 0 0 7 8 0 91 0 2 2 7 83 9 1 7 7 23 67 0 10 10 7 83 9 1 7 7 23 67 0 5 5 4 83 13 1 4 4 24 67 0 6 6 3 83 0 3 3 13 67 0 11 11 4 83 13 1 4 4 24 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 1 10 5 10 1 5 104 0 12 5 6 5 12 6 104 0 8 0 0 7 8 0 91 0 2 10 7 2 79 9 1 7 0 10 1 7 10 91 0 5 5 4 83 13 1 4 4 24 67 0 6 6 3 83 0 3 3 13 67 0 11 11 4 83 13 1 4 4 24 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 1 10 5 10 1 5 104 0 12 5 6 5 12 6 104 0 8 0 0 7 8 0 91 0 7 0 2 10 7 2 91 0 9 0 10 1 9 10 91 0 5 5 4 83 13 1 4 4 24 67 0 6 6 3 83 0 3 3 13 67 0 11 11 4 83 13 1 4 4 24 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
142 140 134 132 126 124 119 117 112 106 103 101 90 88 72 70 63 61 52 50 44 42 39 43 34 14 18
CALL[ ]	/* CallFunction */";
};
width = 711;
}
);
note = s_t;
},
{
glyphname = t_t;
kernLeft = t;
kernRight = t_t;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(519.572,-73,o),
(560,18.146,o),
(560,55,cs),
(560,65.619,o),
(553.869,91,o),
(528,91,cs),
(484.882,91,o),
(479.739,60.638,o),
(472,40,cs),
(467.104,27.761,o),
(465.503,5,o),
(437,5,cs),
(409.644,5,o),
(399,60.015,o),
(399,90,cs),
(399,389,l),
(418.333,390.333,o),
(438.667,391.167,o),
(460,391.5,cs),
(481.333,391.833,o),
(502.333,393.667,o),
(523,397,c),
(528.666,397,o),
(557,407.317,o),
(557,435,cs),
(557,461.667,o),
(530,473,o),
(514,473,cs),
(495.175,473,o),
(416.128,469,o),
(399,469,c),
(399,575,ls),
(399,611,o),
(375.333,618,o),
(354,618,cs),
(334,618,o),
(316,612.667,o),
(312,590,cs),
(306.667,563.333,o),
(307,528,o),
(307,500,cs),
(307,477.333,o),
(283.667,469.667,o),
(245,467,cs),
(194,463,l),
(194,575,ls),
(194,612.333,o),
(170.333,618,o),
(149,618,cs),
(133,618,o),
(111,612.667,o),
(107,590,cs),
(101.667,563.333,o),
(102,528,o),
(102,500,cs),
(102,481.333,o),
(99.333,474.667,o),
(74,472,cs),
(23,468,ls),
(4.333,465.333,o),
(-18,456.667,o),
(-18,430,cs),
(-18,396.176,o),
(10.55,390,o),
(18,390,cs),
(30,390,o),
(43.667,390.333,o),
(59,391,cs),
(74.333,391.667,o),
(88.333,392,o),
(101,392,c),
(101,165,ls),
(101,132.679,o),
(103.843,66.022,o),
(127,30,cs),
(148.333,-4.667,o),
(177.333,-22,o),
(214,-22,cs),
(244.667,-22,o),
(278,-10,o),
(314,14,c),
(318,-1.333,o),
(324.667,-16.667,o),
(334,-32,cs),
(352,-59.333,o),
(380,-73,o),
(418,-73,cs)
);
},
{
closed = 1;
nodes = (
(221.496,387,o),
(262.928,388,o),
(308,388,c),
(308,149,ls),
(308,98.333,o),
(274.667,62,o),
(244,62,cs),
(217.333,62,o),
(194,88,o),
(194,152,cs),
(194,387,l),
(194,387,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
102 97 34 0 2 40
CALL[ ]	/* CallFunction */";
};
width = 555;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(96,127.914,o),
(96.535,68.198,o),
(122,30,cs),
(140,2.667,o),
(168,-11,o),
(206,-11,cs),
(235.333,-11,o),
(258,-1,o),
(278,15,c),
(282,-1.667,o),
(288.667,-17.333,o),
(298,-32,cs),
(316,-59.333,o),
(344,-73,o),
(382,-73,cs),
(483.572,-73,o),
(524,18.146,o),
(524,55,cs),
(524,62.048,o),
(518.602,85,o),
(499,85,cs),
(467.375,85,o),
(465.303,62.14,o),
(457,40,cs),
(448.921,18.457,o),
(436.167,-13,o),
(396,-13,cs),
(349.822,-13,o),
(342,44.634,o),
(342,90,cs),
(342,406,l),
(364.667,407.333,o),
(388.5,408.333,o),
(413.5,409,cs),
(438.5,409.667,o),
(463,411.333,o),
(487,414,c),
(499,416.667,o),
(514,424.333,o),
(514,443,cs),
(514,464.333,o),
(494,472,o),
(478,472,cs),
(459.523,472,o),
(366.507,468,o),
(342,468,c),
(342,575,ls),
(342,615,o),
(326.333,618,o),
(309,618,cs),
(305.667,618,o),
(300.333,616.667,o),
(293,614,cs),
(285.667,611.333,o),
(280.333,603.333,o),
(277,590,cs),
(270.333,563.333,o),
(271,528,o),
(271,500,cs),
(271,477.333,o),
(265.667,467.333,o),
(243,466,cs),
(167,461,l),
(167,575,ls),
(167,615,o),
(151.333,618,o),
(134,618,cs),
(130.667,618,o),
(125.333,616.667,o),
(118,614,cs),
(110.667,611.333,o),
(105.333,603.333,o),
(102,590,cs),
(95.333,563.333,o),
(96,528,o),
(96,500,cs),
(96,477.333,o),
(94.667,468.667,o),
(68,466,cs),
(17,461,ls),
(-1.667,458.333,o),
(-17,450.667,o),
(-17,432,cs),
(-17,408,o),
(4,402,o),
(12,402,cs),
(24,402,o),
(37.833,402.333,o),
(53.5,403,cs),
(69.167,403.667,o),
(83.333,404,o),
(96,404,c),
(96,165,l),
(96,165,l)
);
},
{
closed = 1;
nodes = (
(263.333,72.333,o),
(246.667,49,o),
(220,49,cs),
(173.033,49,o),
(167,105.808,o),
(167,152,cs),
(167,402,l),
(199.651,402,o),
(240.626,404,o),
(272,404,c),
(270,103,l),
(270,103,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
102 92 76 18 2 40
CALL[ ]	/* CallFunction */";
};
width = 541;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(475.572,-73,o),
(516,18.146,o),
(516,55,cs),
(516,61.667,o),
(515.667,75,o),
(501,75,cs),
(486.333,75,o),
(485.667,61.333,o),
(479,40,cs),
(468.022,1.577,o),
(438.478,-43,o),
(381,-43,cs),
(302.773,-43,o),
(304,36.109,o),
(304,90,cs),
(304,434,l),
(332,435.333,o),
(360.833,436.333,o),
(390.5,437,cs),
(420.167,437.667,o),
(449.667,439.333,o),
(479,442,cs),
(491,443.333,o),
(496,450.333,o),
(496,457,cs),
(496,465.667,o),
(487.333,470,o),
(470,470,cs),
(450.217,470,o),
(325.921,466,o),
(304,466,c),
(304,575,ls),
(304,595,o),
(302.667,607.167,o),
(300,611.5,cs),
(297.333,615.833,o),
(293.333,618,o),
(288,618,cs),
(284.667,618,o),
(281.667,616.667,o),
(279,614,cs),
(276.333,611.333,o),
(273.333,603.333,o),
(270,590,cs),
(263.333,563.333,o),
(263,536,o),
(263,508,cs),
(263,478.667,o),
(263.333,463.333,o),
(238,462,cs),
(184,460,ls),
(181.333,460,o),
(178,459.333,o),
(174,458,c),
(129,458,l),
(129,575,ls),
(129,595,o),
(127.667,607.167,o),
(125,611.5,cs),
(122.333,615.833,o),
(118.333,618,o),
(113,618,cs),
(109.667,618,o),
(106.667,616.667,o),
(104,614,cs),
(101.333,611.333,o),
(98.333,603.333,o),
(95,590,cs),
(88.333,563.333,o),
(88,528,o),
(88,500,cs),
(88,470.667,o),
(86.667,458.667,o),
(60,456,cs),
(9,450,ls),
(-0.333,448.667,o),
(-6.667,446.833,o),
(-10,444.5,cs),
(-13.333,442.167,o),
(-15,439.333,o),
(-15,436,cs),
(-15,425.333,o),
(-4,422,o),
(4,422,cs),
(16,422,o),
(30,422.333,o),
(46,423,cs),
(62,423.667,o),
(76.333,424,o),
(89,424,c),
(87,165,ls),
(87,133.59,o),
(86.836,72.245,o),
(115,30,cs),
(133,2.667,o),
(161,-11,o),
(199,-11,cs),
(232.333,-11,o),
(254,0,o),
(270,16,c),
(274,-1.333,o),
(279.333,-17.333,o),
(290,-32,cs),
(308,-59.333,o),
(336,-73,o),
(374,-73,cs)
);
},
{
closed = 1;
nodes = (
(127.773,19,o),
(129,98.109,o),
(129,152,cs),
(129,426,l),
(150.333,427.333,o),
(172.333,428.167,o),
(195,428.5,cs),
(217.667,428.833,o),
(240.667,429.667,o),
(264,431,c),
(262,90,ls),
(262,55.051,o),
(248.603,19,o),
(206,19,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
99 91 74 18 2 40
CALL[ ]	/* CallFunction */";
};
width = 532;
}
);
note = t_t;
},
{
glyphname = t_z;
kernLeft = t;
kernRight = t_z;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(225.333,-11,o),
(239,4,o),
(239,20,cs),
(239,42.667,o),
(225.667,51,o),
(215,51,cs),
(189.003,51,o),
(189,110.108,o),
(189,152,cs),
(189,359,l),
(496,359,ls),
(503.333,359,o),
(508.333,358,o),
(511,356,cs),
(513.667,354,o),
(515,352.333,o),
(515,351,cs),
(515,345.051,o),
(459.656,275.335,o),
(391.5,192.5,cs),
(348.821,140.628,o),
(268,37.706,o),
(268,17,cs),
(268,8.333,o),
(272.167,3,o),
(280.5,1,cs),
(288.833,-1,o),
(303,-2,o),
(323,-2,cs),
(322.512,-2,o),
(412.342,1,o),
(481,1,cs),
(506.422,1,o),
(533.611,0,o),
(555.5,0,cs),
(581.298,0,o),
(615.118,-1,o),
(657,-1,cs),
(666.333,-1,o),
(671,5.333,o),
(671,18,cs),
(671,35.333,o),
(671.667,70.333,o),
(673,85,cs),
(679,181,ls),
(679,194.23,o),
(673.951,212,o),
(645,212,cs),
(605,212,o),
(601,185.667,o),
(597,151,cs),
(590,96,ls),
(588.667,83.333,o),
(585.667,77,o),
(581,77,cs),
(431,77,ls),
(419.667,77,o),
(414,79.333,o),
(414,84,cs),
(414,95.068,o),
(457.727,148.364,o),
(543.5,249.5,cs),
(618.298,337.695,o),
(673,404.763,o),
(673,424,cs),
(673,428.667,o),
(671.333,432.5,o),
(668,435.5,cs),
(664.667,438.5,o),
(656,440,o),
(642,440,cs),
(528.032,440,o),
(477.769,436,o),
(370,436,cs),
(272.61,436,o),
(245.079,435,o),
(189,435,c),
(189,575,ls),
(189,615,o),
(174,626,o),
(142,626,cs),
(123.333,626,o),
(110.667,616.667,o),
(104,590,cs),
(97.333,563.333,o),
(97,528,o),
(97,500,cs),
(97,471.783,o),
(95.752,435.675,o),
(69,433,cs),
(18,427,ls),
(-7.333,424.333,o),
(-15,405,o),
(-15,389,cs),
(-15,366.333,o),
(1,354,o),
(13,354,cs),
(25,354,o),
(38.667,354.333,o),
(54,355,cs),
(69.333,355.667,o),
(83.333,356,o),
(96,356,c),
(96,165,ls),
(96,133.59,o),
(95.836,72.245,o),
(124,30,cs),
(142,2.667,o),
(170,-11,o),
(208,-11,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
28 0 1 40
CALL[ ]	/* CallFunction */";
};
width = 711;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(434.667,438,o),
(418.333,437.833,o),
(403,437.5,cs),
(387.667,437.167,o),
(375.667,437,o),
(367,437,cs),
(319.232,437,o),
(280.914,436,o),
(252,436,cs),
(228.88,436,o),
(196.616,435,o),
(165,435,c),
(165,575,ls),
(165,615,o),
(153.667,623,o),
(131,623,cs),
(117.667,623,o),
(107.667,616.667,o),
(101,590,cs),
(94.333,563.333,o),
(94,528,o),
(94,500,cs),
(94,471.783,o),
(92.752,435.675,o),
(66,433,cs),
(15,427,ls),
(-7.667,424.333,o),
(-14,410,o),
(-14,398,cs),
(-14,379.333,o),
(-0.667,371,o),
(10,371,cs),
(22,371,o),
(35.667,371.333,o),
(51,372,cs),
(66.333,372.667,o),
(80.333,373,o),
(93,373,c),
(93,165,ls),
(93,133.59,o),
(92.836,72.245,o),
(121,30,cs),
(139,2.667,o),
(167,-11,o),
(205,-11,cs),
(222.333,-11,o),
(233,0.667,o),
(233,14,cs),
(233,31.333,o),
(222.667,39,o),
(212,39,cs),
(163.936,39,o),
(165,105.292,o),
(165,152,cs),
(165,373,l),
(213,373.667,o),
(260.5,374.667,o),
(307.5,376,cs),
(354.5,377.333,o),
(402,378,o),
(450,378,cs),
(518,378,ls),
(523.333,378,o),
(527.167,377,o),
(529.5,375,cs),
(531.833,373,o),
(533,371.333,o),
(533,370,cs),
(533,365.467,o),
(514.434,345.434,o),
(509,340,cs),
(491.332,319.019,o),
(417.947,233.569,o),
(362.5,163,cs),
(303.743,88.219,o),
(264,29.628,o),
(264,13,cs),
(264,-1.667,o),
(275,-2,o),
(299,-2,cs),
(298.512,-2,o),
(388.342,1,o),
(457,1,cs),
(482.422,1,o),
(509.611,0,o),
(531.5,0,cs),
(557.298,0,o),
(591.118,-1,o),
(633,-1,cs),
(642.333,-1,o),
(647,5.333,o),
(647,18,cs),
(647,35.333,o),
(647.667,70.333,o),
(649,85,cs),
(655,181,ls),
(655,191.667,o),
(652.667,206,o),
(630,206,cs),
(600.667,206,o),
(596.667,185.667,o),
(594,151,cs),
(587,78,ls),
(585.667,65.333,o),
(582.667,59,o),
(578,59,cs),
(389,59,ls),
(377.667,59,o),
(372,61.333,o),
(372,66,cs),
(372,79.545,o),
(429.796,144.52,o),
(510.5,240,cs),
(589.548,333.522,o),
(649,404.09,o),
(649,423,cs),
(649,427.667,o),
(646.667,431.667,o),
(642,435,cs),
(637.333,438.333,o),
(629.333,440,o),
(618,440,cs),
(596.667,440,o),
(572.667,439.667,o),
(546,439,cs),
(519.333,438.333,o),
(495.333,438,o),
(474,438,cs),
(452,438,l),
(452,438,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
103 74 1 40
CALL[ ]	/* CallFunction */";
};
width = 690;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(218.333,-11,o),
(224,-4,o),
(224,4,cs),
(224,10.667,o),
(218.667,19,o),
(208,19,cs),
(129.773,19,o),
(131,98.109,o),
(131,152,cs),
(131,403,l),
(550,409,ls),
(556,409,o),
(559,406.333,o),
(559,401,c),
(559,401,o),
(507.035,343.779,o),
(408.5,224.5,cs),
(335.076,135.619,o),
(258,33.281,o),
(258,6,cs),
(258,0.667,o),
(260.333,-2,o),
(265,-2,cs),
(264.512,-2,o),
(354.342,1,o),
(423,1,cs),
(448.422,1,o),
(475.611,0,o),
(497.5,0,cs),
(523.298,0,o),
(557.118,-1,o),
(599,-1,cs),
(608.333,-1,o),
(613,5.333,o),
(613,18,cs),
(613,35.333,o),
(613.667,70.333,o),
(615,85,cs),
(621,181,ls),
(621,191,o),
(616.667,196,o),
(608,196,cs),
(602,196,o),
(597.833,192.833,o),
(595.5,186.5,cs),
(593.167,180.167,o),
(591.333,168.333,o),
(590,151,cs),
(583,48,ls),
(581.667,35.333,o),
(578.667,29,o),
(574,29,cs),
(329,29,ls),
(317.667,29,o),
(312,31.333,o),
(312,36,cs),
(312,48.406,o),
(377.51,126.036,o),
(463.5,224,cs),
(551.918,324.729,o),
(615,403.789,o),
(615,422,cs),
(615,426.667,o),
(612.667,430.667,o),
(608,434,cs),
(603.333,437.333,o),
(595.333,439,o),
(584,439,cs),
(518.761,439,o),
(428.239,437,o),
(363,437,cs),
(307.107,437,o),
(262.952,436,o),
(230.5,436,cs),
(204.042,436,o),
(167.647,435,o),
(131,435,c),
(131,575,ls),
(131,595,o),
(129.667,607.167,o),
(127,611.5,cs),
(124.333,615.833,o),
(120.333,618,o),
(115,618,cs),
(111.667,618,o),
(108.667,616.667,o),
(106,614,cs),
(103.333,611.333,o),
(100.333,603.333,o),
(97,590,cs),
(90.333,563.333,o),
(90,528,o),
(90,500,cs),
(90,471.783,o),
(88.752,435.675,o),
(62,433,cs),
(11,427,ls),
(1.667,425.667,o),
(-4.667,423.833,o),
(-8,421.5,cs),
(-11.333,419.167,o),
(-13,416.333,o),
(-13,413,cs),
(-13,402.333,o),
(-2,399,o),
(6,399,cs),
(18,399,o),
(31.667,399.333,o),
(47,400,cs),
(62.333,400.667,o),
(76.333,401,o),
(89,401,c),
(89,165,ls),
(89,133.59,o),
(88.836,72.245,o),
(117,30,cs),
(135,2.667,o),
(163,-11,o),
(201,-11,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
40 11 1 40
CALL[ ]	/* CallFunction */";
};
width = 660;
}
);
note = t_z;
},
{
glyphname = ordfeminine;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(137.667,746.667,o),
(119,750,o),
(103,750,cs),
(57.667,750,o),
(32,727.333,o),
(32,698,cs),
(32,670,o),
(56.333,648,o),
(95,648,cs),
(118.333,648,o),
(138.333,655.333,o),
(155,670,c),
(160.333,654,o),
(179,648,o),
(195,648,cs),
(223,648,o),
(248,659,o),
(248,679,cs),
(248,684.333,o),
(247.667,699,o),
(229,699,cs),
(217,699,o),
(212.333,688.667,o),
(211,686,cs),
(209,681.333,o),
(207.333,679,o),
(206,679,cs),
(204.667,679,o),
(203.667,680.167,o),
(203,682.5,cs),
(202.333,684.833,o),
(202,691.333,o),
(202,702,cs),
(202,712.667,o),
(202.167,724,o),
(202.5,736,cs),
(202.833,748,o),
(203,755.667,o),
(203,759,cs),
(203,811,o),
(167.667,838,o),
(117,838,cs),
(74.333,838,o),
(44,817.667,o),
(44,787,cs),
(44,764.333,o),
(57,756,o),
(81,756,cs),
(94.333,756,o),
(110,758.333,o),
(110,773,cs),
(110,776.333,o),
(108.833,778.667,o),
(106.5,780,cs),
(104.167,781.333,o),
(102,782.667,o),
(100,784,cs),
(97.333,785.333,o),
(92,786.667,o),
(92,792,cs),
(92,797.333,o),
(107,797,o),
(111,797,cs),
(145.667,797,o),
(155,775.667,o),
(155,761,cs),
(155,736,l),
(155,736,l)
);
},
{
closed = 1;
nodes = (
(82,709.667,o),
(95,715,o),
(111,715,cs),
(127,715,o),
(145,709.667,o),
(145,699,cs),
(145,688.333,o),
(130.667,684,o),
(112,684,cs),
(92,684,o),
(82,689,o),
(82,699,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
9 1 1 0 55 1 9 7 32 1 3 4 44 1 5 3 4 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
9 1 1 0 55 1 9 7 32 1 8 4 44 1 5 3 4 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 7 0 1 96 0 7 9 3 7 94 0 9 4 0 9 4 102 0 4 3 0 4 3 102 8 1 3 6 1 5 3 5 88 0 0 0 2 83 0 2 2 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 1 0 7 0 1 96 0 7 9 0 7 9 102 0 9 4 0 9 4 102 0 4 3 0 4 3 102 8 1 3 6 1 5 3 5 88 0 0 0 2 83 0 2 2 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 7 0 1 7 104 0 7 9 0 7 9 102 0 9 4 0 9 4 102 0 4 3 0 4 3 102 8 1 3 6 1 5 3 5 88 0 0 0 2 83 0 2 2 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 1 0 7 0 1 7 104 0 7 9 0 7 9 102 0 9 4 0 9 4 102 0 4 8 0 4 8 102 0 2 0 0 1 2 0 91 0 8 3 5 8 79 0 3 5 5 3 79 0 3 3 5 83 6 1 5 3 5 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
65 63 36 36 35 36 35 39 36 41 50 10 24
CALL[ ]	/* CallFunction */";
};
width = 274;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(140.667,744.667,o),
(122.667,749,o),
(104,749,cs),
(61.333,749,o),
(35,727.333,o),
(35,698,cs),
(35,670,o),
(58.333,648,o),
(97,648,cs),
(120.333,648,o),
(140.667,656,o),
(158,672,c),
(163.333,654.667,o),
(179.333,648,o),
(198,648,cs),
(222,648,o),
(242,658.667,o),
(242,680,cs),
(242,685.333,o),
(241.333,697,o),
(228,697,cs),
(217.333,697,o),
(214.333,688.667,o),
(213,686,cs),
(211.667,682.667,o),
(210.833,680,o),
(210.5,678,cs),
(210.167,676,o),
(208.333,675,o),
(205,675,cs),
(201,675,o),
(198.5,677.167,o),
(197.5,681.5,cs),
(196.5,685.833,o),
(196,693,o),
(196,703,cs),
(196,712.333,o),
(196.167,723,o),
(196.5,735,cs),
(196.833,747,o),
(197,755.333,o),
(197,760,cs),
(197,810.667,o),
(163.667,838,o),
(117,838,cs),
(75.667,838,o),
(47,818.333,o),
(47,785,cs),
(47,765.667,o),
(57.333,756,o),
(78,756,cs),
(91.333,756,o),
(104,760,o),
(104,772,cs),
(104,778.667,o),
(98,781.667,o),
(94,783,cs),
(91.333,784.333,o),
(86,785.333,o),
(86,792,cs),
(86,801.333,o),
(100,804,o),
(112,804,cs),
(146.667,804,o),
(158,782.333,o),
(158,761,cs),
(158,734,l),
(158,734,l)
);
},
{
closed = 1;
nodes = (
(76,715,o),
(96.333,720,o),
(111,720,cs),
(128.333,720,o),
(148,714.667,o),
(148,700,cs),
(148,688,o),
(133,679,o),
(109,679,cs),
(87,679,o),
(76,685.667,o),
(76,699,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
9 1 1 0 55 1 9 7 32 1 3 4 44 1 5 3 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
16
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 1 0 7 0 1 7 104 0 7 9 3 7 94 0 9 4 0 9 4 102 0 4 3 0 4 3 102 8 1 3 6 1 5 3 5 88 0 0 0 2 83 0 2 2 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 7 0 1 7 104 0 7 9 0 7 9 102 0 9 4 0 9 4 102 0 4 3 0 4 3 102 8 1 3 6 1 5 3 5 88 0 0 0 2 83 0 2 2 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 1 0 7 0 1 7 104 0 7 9 0 7 9 102 0 9 4 0 9 4 102 0 4 3 0 4 3 102 0 2 0 0 1 2 0 91 8 1 3 5 5 3 79 8 1 3 3 5 84 6 1 5 3 5 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
65 63 36 36 35 36 36 39 35 42 34 10 24
CALL[ ]	/* CallFunction */";
};
width = 271;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(125.333,648,o),
(146,659,o),
(162,675,c),
(166.667,657,o),
(180,648,o),
(202,648,cs),
(220.667,648,o),
(233,658.333,o),
(233,681,cs),
(233,687.667,o),
(232.667,694,o),
(226,694,cs),
(222.667,694,o),
(220.5,693,o),
(219.5,691,cs),
(218.5,689,o),
(217.667,687.333,o),
(217,686,cs),
(215.667,682.667,o),
(214.667,678.833,o),
(214,674.5,cs),
(213.333,670.167,o),
(210,668,o),
(204,668,cs),
(193.333,668,o),
(187,684,o),
(187,704,cs),
(187,712.667,o),
(187.167,723,o),
(187.5,735,cs),
(187.833,747,o),
(188,756,o),
(188,762,cs),
(188,811.333,o),
(158.333,838,o),
(117,838,cs),
(78.333,838,o),
(51,819.667,o),
(51,781,cs),
(51,766.333,o),
(59.333,756,o),
(74,756,cs),
(88,756,o),
(95,760.667,o),
(95,770,cs),
(95,778,o),
(89,782,o),
(85,782,c),
(79.667,783.333,o),
(77,786.667,o),
(77,792,cs),
(77,808,o),
(89,816,o),
(113,816,cs),
(147.667,816,o),
(162,791.667,o),
(162,761,cs),
(162,730,l),
(146,742,o),
(127.333,748,o),
(106,748,cs),
(66,748,o),
(39,727.333,o),
(39,698,cs),
(39,670,o),
(62.667,648,o),
(100,648,cs)
);
},
{
closed = 1;
nodes = (
(78.333,671,o),
(67,684.333,o),
(67,699,cs),
(67,715,o),
(81.667,728,o),
(111,728,cs),
(141.667,728,o),
(152,715.667,o),
(152,701,cs),
(152,686.333,o),
(137,671,o),
(105,671,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
52 1 10 8 41 30 2 4 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 2 3 1 96 0 2 8 0 2 94 0 5 10 4 10 5 4 104 0 8 0 10 5 8 10 91 9 1 4 7 1 6 4 6 87 0 0 0 3 83 0 3 3 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 2 3 1 96 0 2 8 0 2 8 102 0 5 10 4 10 5 4 104 0 8 0 10 5 8 10 91 9 1 4 7 1 6 4 6 87 0 0 0 3 83 0 3 3 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 2 0 1 2 104 0 2 8 0 2 8 102 0 5 10 4 10 5 4 104 0 8 0 10 5 8 10 91 9 1 4 7 1 6 4 6 87 0 0 0 3 83 0 3 3 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 1 0 2 0 1 2 104 0 2 8 0 2 8 102 0 5 10 4 10 5 4 104 0 3 0 0 1 3 0 91 0 8 0 10 5 8 10 91 9 1 4 6 6 4 79 9 1 4 4 6 83 7 1 6 4 6 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
63 61 57 55 36 35 36 36 39 36 35 19 34 11 24
CALL[ ]	/* CallFunction */";
};
width = 267;
}
);
note = ordfeminine;
unicode = 170;
},
{
glyphname = ordmasculine;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(240,794.667,o),
(200,838,o),
(132,838,cs),
(60,838,o),
(30,794.333,o),
(30,741,cs),
(30,685,o),
(66,645,o),
(126,645,cs),
(192.667,645,o),
(240,677.333,o),
(240,744,cs)
);
},
{
closed = 1;
nodes = (
(156.667,781,o),
(174,767,o),
(174,743,cs),
(174,715.667,o),
(160.667,702,o),
(134,702,cs),
(109.333,702,o),
(97,715.333,o),
(97,742,cs),
(97,768.667,o),
(116.667,781,o),
(134,781,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 3 0 0 3 0 87 4 1 2 2 1 83 0 1 1 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 4 1 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
13 12 18 16 12 21 13 21 36 34 5 17
CALL[ ]	/* CallFunction */";
};
width = 270;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(229,794.667,o),
(193.667,838,o),
(131,838,cs),
(65.667,838,o),
(33,795.667,o),
(33,741,cs),
(33,685,o),
(70.333,645,o),
(125,645,cs),
(181,645,o),
(229,677.333,o),
(229,744,cs)
);
},
{
closed = 1;
nodes = (
(158.333,793,o),
(177,773.667,o),
(177,743,cs),
(177,704.333,o),
(158.667,690,o),
(132,690,cs),
(108,690,o),
(86,706,o),
(86,742,cs),
(86,776.667,o),
(109,793,o),
(133,793,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 3 0 0 3 0 87 4 1 2 2 1 83 0 1 1 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 4 1 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
13 12 19 17 12 23 13 23 36 34 5 17
CALL[ ]	/* CallFunction */";
};
width = 262;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(164.436,645,o),
(213,676.015,o),
(213,744,cs),
(213,794.667,o),
(185,838,o),
(129,838,cs),
(74.333,838,o),
(37,797,o),
(37,741,cs),
(37,685,o),
(76.333,645,o),
(123,645,cs)
);
},
{
closed = 1;
nodes = (
(97.333,670,o),
(70,691.333,o),
(70,742,cs),
(70,788.667,o),
(93.667,813,o),
(127,813,cs),
(161.667,813,o),
(181,785.667,o),
(181,743,cs),
(181,691,o),
(150.667,670,o),
(124,670,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 3 0 0 3 0 87 4 1 2 2 1 83 0 1 1 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 4 1 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
15 14 21 19 14 25 15 25 36 36 5 17
CALL[ ]	/* CallFunction */";
};
width = 250;
}
);
note = ordmasculine;
unicode = 186;
},
{
glyphname = mu;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(434,107.668,o),
(364.772,58,o),
(300,58,cs),
(241.941,58,o),
(201,123.916,o),
(201,206,cs),
(201,267.333,o),
(201.667,315.667,o),
(203,351,cs),
(204.333,386.333,o),
(205,411.667,o),
(205,427,cs),
(205,468.333,o),
(199,472,o),
(171,472,cs),
(91.535,472,o),
(-23,468.027,o),
(-23,431,cs),
(-23,416.333,o),
(-1,408,o),
(11,408,cs),
(78,408,ls),
(108.667,408,o),
(110,400.667,o),
(110,370,cs),
(110,322,o),
(110.5,276.667,o),
(111.5,234,cs),
(112.5,191.333,o),
(113,151.667,o),
(113,115,cs),
(113,-1,o),
(111.667,-93,o),
(109,-177,cs),
(109,-193.503,o),
(118.491,-217,o),
(155,-217,cs),
(189.667,-217,o),
(203,-194,o),
(203,-174,cs),
(203,-97.802,o),
(199,-87.154,o),
(199,-1,c),
(208.333,-10.333,o),
(242.333,-20,o),
(277,-20,cs),
(370.396,-20,o),
(415.638,36.745,o),
(435,81,c),
(435.667,41.667,o),
(437.333,14.667,o),
(440,0,cs),
(442.667,-14.667,o),
(448.333,-22,o),
(457,-22,cs),
(497.089,-22,o),
(608,-20.476,o),
(608,15,cs),
(608,39,o),
(584,42,o),
(572,42,cs),
(569.333,42,o),
(565.5,41.833,o),
(560.5,41.5,cs),
(555.5,41.167,o),
(550,41,o),
(544,41,cs),
(529.333,41,o),
(527,43.333,o),
(527,62,cs),
(527,64,o),
(526.833,72,o),
(526.5,86,cs),
(526.167,100,o),
(526,123.333,o),
(526,156,cs),
(526,265.943,o),
(529,345.993,o),
(529,383,cs),
(529,430.744,o),
(511.149,432,o),
(435,432,cs),
(360.281,432,o),
(293,427.51,o),
(293,395,cs),
(293,373.667,o),
(322.667,368,o),
(344,368,cs),
(410,368,ls),
(435.333,368,o),
(437,352.333,o),
(437,327,cs),
(434,172,l),
(434,172,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
42 1 8 0 50 1 3 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 8 3 8 2 3 104 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 0 8 8 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 2 8 3 8 2 3 104 0 5 3 5 107 0 7 0 6 0 7 6 91 0 1 0 0 8 1 0 91 0 8 8 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
41 53 60 41 38 53 93 69 50 9 24
CALL[ ]	/* CallFunction */";
};
width = 597;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(429,97.26,o),
(356.979,40,o),
(283,40,cs),
(204.843,40,o),
(175,122.45,o),
(175,206,cs),
(175,267.333,o),
(175.667,315.667,o),
(177,351,cs),
(178.333,386.333,o),
(179,411.667,o),
(179,427,cs),
(179,468.333,o),
(173,472,o),
(145,472,cs),
(113.206,472,o),
(-21,471.678,o),
(-21,439,cs),
(-21,428.333,o),
(-6,420,o),
(6,420,cs),
(73,420,ls),
(103.667,420,o),
(105,412.667,o),
(105,382,cs),
(105.667,331.333,o),
(106.333,283.833,o),
(107,239.5,cs),
(107.667,195.167,o),
(108,153.667,o),
(108,115,cs),
(108,-1,o),
(106.667,-93,o),
(104,-177,cs),
(104,-194.333,o),
(116.333,-211,o),
(143,-211,cs),
(169.667,-211,o),
(177,-194,o),
(177,-174,cs),
(177,-142,o),
(176.5,-111.667,o),
(175.5,-83,cs),
(174.5,-54.333,o),
(173.667,-21.667,o),
(173,15,c),
(189,-3.667,o),
(227,-20,o),
(271,-20,cs),
(366.285,-20,o),
(411.527,38.776,o),
(430,81,c),
(430.667,41.667,o),
(432.333,14.667,o),
(435,0,cs),
(437.667,-14.667,o),
(442.667,-22,o),
(450,-22,cs),
(493.05,-22,o),
(596,-21.605,o),
(596,9,cs),
(596,27.667,o),
(571,30,o),
(559,30,cs),
(551,30,o),
(544.5,29.833,o),
(539.5,29.5,cs),
(534.5,29.167,o),
(531,29,o),
(529,29,cs),
(506.333,29,o),
(501,28.667,o),
(501,50,cs),
(501,52.667,o),
(500.833,61.833,o),
(500.5,77.5,cs),
(500.167,93.167,o),
(500,119.333,o),
(500,156,cs),
(500,265.943,o),
(503,345.993,o),
(503,383,cs),
(503,430.344,o),
(488.134,432,o),
(430,432,cs),
(375.564,432,o),
(295,429.12,o),
(295,401,cs),
(295,385,o),
(317.667,380,o),
(339,380,cs),
(405,380,ls),
(431.667,380,o),
(432,365.667,o),
(432,339,cs),
(429,172,l),
(429,172,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
42 1 8 0 50 1 3 2 2 66
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
42 1 2 0 50 1 3 2 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
42 1 8 0 50 1 3 2 2 66
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 8 3 8 2 3 104 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 0 8 8 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 1 2 2 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 7 0 6 0 7 6 91 0 1 0 0 2 1 0 91 8 1 2 2 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 8 3 8 2 3 104 0 7 0 6 0 7 6 91 0 1 0 0 8 1 0 91 0 8 8 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 2 8 3 8 2 3 104 0 5 3 5 107 0 7 0 6 0 7 6 91 0 1 0 0 8 1 0 91 0 8 8 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
41 53 58 39 38 53 94 53 50 9 24
CALL[ ]	/* CallFunction */";
};
width = 584;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(133.333,-201,o),
(140,-194,o),
(140,-174,cs),
(140,-142,o),
(139.5,-107.167,o),
(138.5,-69.5,cs),
(137.5,-31.833,o),
(136.667,5.333,o),
(136,42,c),
(162.667,7.333,o),
(203.333,-20,o),
(262,-20,cs),
(355.834,-20,o),
(403.808,37.133,o),
(423,81,c),
(423.667,41.667,o),
(425.333,14.667,o),
(428,0,cs),
(430.667,-14.667,o),
(435.667,-22,o),
(443,-22,cs),
(467.534,-22,o),
(579,-23.215,o),
(579,-1,cs),
(579,7,o),
(564,10,o),
(552,10,cs),
(536,10,o),
(523,9.833,o),
(513,9.5,cs),
(503,9.167,o),
(496,9,o),
(492,9,cs),
(469.333,9,o),
(464,16.667,o),
(464,30,cs),
(464,33.333,o),
(463.833,44.167,o),
(463.5,62.5,cs),
(463.167,80.833,o),
(463,112,o),
(463,156,cs),
(463,265.943,o),
(466,345.993,o),
(466,383,cs),
(466,427.927,o),
(459.12,432,o),
(423,432,cs),
(341.015,432,o),
(298,424.364,o),
(298,411,cs),
(298,403.667,o),
(309.333,400,o),
(332,400,cs),
(398,400,ls),
(420.667,400,o),
(425,395,o),
(425,359,cs),
(422,172,ls),
(422,84.242,o),
(348.373,10,o),
(259,10,cs),
(154.543,10,o),
(138,109.273,o),
(138,206,cs),
(138,267.333,o),
(138.667,315.667,o),
(140,351,cs),
(141.333,386.333,o),
(142,411.667,o),
(142,427,cs),
(142,468.333,o),
(136,472,o),
(108,472,cs),
(26.728,472,o),
(-18,463.573,o),
(-18,452,cs),
(-18,448,o),
(-13,440,o),
(-1,440,cs),
(66,440,ls),
(96.667,440,o),
(98,432.667,o),
(98,402,cs),
(98.667,347.333,o),
(99.333,296.333,o),
(100,249,cs),
(100.667,201.667,o),
(101,157,o),
(101,115,cs),
(101,-1,o),
(99.667,-93,o),
(97,-177,cs),
(97,-194.333,o),
(109.333,-201,o),
(120,-201,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
49 41 2 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 1 2 2 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 7 0 6 1 7 6 91 0 1 0 0 2 1 0 91 8 1 2 2 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 5 3 5 107 0 7 0 6 1 7 6 91 0 1 0 0 2 1 0 91 8 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
41 53 58 39 38 53 94 52 50 9 24
CALL[ ]	/* CallFunction */";
};
width = 566;
}
);
note = uni03BC;
unicode = 956;
},
{
glyphname = zero;
kernRight = zero;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(133,553.965,o),
(185.944,758,o),
(304,758,cs),
(378.681,758,o),
(424.938,703.713,o),
(447,628.5,cs),
(469.572,551.549,o),
(474,467.03,o),
(474,402,cs),
(474,278,o),
(448.5,191.5,o),
(414.5,137.5,cs),
(380.5,83.5,o),
(336,60,o),
(300,60,cs),
(165.458,60,o),
(133,240.813,o),
(133,384,cs)
);
},
{
closed = 1;
nodes = (
(37,218.333,o),
(68.167,122,o),
(115.5,62,cs),
(162.833,2,o),
(225.333,-21,o),
(288,-21,cs),
(410.376,-21,o),
(570,72.399,o),
(570,399,cs),
(570,492.214,o),
(561.523,598.68,o),
(526,686.5,cs),
(490.589,774.044,o),
(422.451,839,o),
(309,839,cs),
(203.718,839,o),
(133.704,775.469,o),
(92.5,681,cs),
(50.652,585.057,o),
(37,474.369,o),
(37,365,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
42 42 42 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 608;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(115,568.655,o),
(173.668,776,o),
(301,776,cs),
(375.918,776,o),
(422.881,718.387,o),
(447,640,cs),
(471.419,560.638,o),
(477,469.823,o),
(477,402,cs),
(477,271.333,o),
(451.333,181.333,o),
(414,124,cs),
(376.667,66.667,o),
(329.333,42,o),
(288,42,cs),
(146.722,42,o),
(115,244.5,o),
(115,384,cs)
);
},
{
closed = 1;
nodes = (
(40,218.333,o),
(72.5,121.833,o),
(118.5,62.5,cs),
(164.5,3.167,o),
(226,-20,o),
(282,-20,cs),
(339.333,-20,o),
(406.667,4.833,o),
(460,69.5,cs),
(513.333,134.167,o),
(552,239,o),
(552,399,cs),
(552,492.197,o),
(541.544,598.628,o),
(506,686.5,cs),
(469.825,775.933,o),
(404.52,838,o),
(303,838,cs),
(104.326,838,o),
(40,580.002,o),
(40,365,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
42 40 42 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 593;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(325,-19,o),
(388.333,7.667,o),
(439,73,cs),
(489.667,138.333,o),
(527,243,o),
(527,399,cs),
(527,496.993,o),
(512.366,602.994,o),
(478,687,cs),
(441.314,776.677,o),
(382.793,837,o),
(295,837,cs),
(205.652,837,o),
(141.893,773.251,o),
(102,680.5,cs),
(62.972,589.761,o),
(45,476.598,o),
(45,365,cs),
(45,218.333,o),
(77.667,122.833,o),
(123,63.5,cs),
(168.333,4.167,o),
(225,-19,o),
(273,-19,cs)
);
},
{
closed = 1;
nodes = (
(131.103,12,o),
(90,222.9,o),
(90,384,cs),
(90,482.667,o),
(105.667,587.667,o),
(139,669,cs),
(172.333,750.333,o),
(225,806,o),
(297,806,cs),
(372.897,806,o),
(420.101,744.24,o),
(447.5,659,cs),
(475.277,572.583,o),
(482,475.26,o),
(482,402,cs),
(482,259.333,o),
(454.167,162.5,o),
(413.5,100.5,cs),
(372.833,38.5,o),
(320.333,12,o),
(271,12,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 1 1 2 83 0 2 2 20 67 0 0 0 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
42 42 42 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = zero;
unicode = 48;
},
{
glyphname = one;
kernLeft = one;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(250,816,o),
(243.333,821,o),
(230,821,cs),
(233.089,821,o),
(143.101,818,o),
(68,818,cs),
(45.333,816.667,o),
(24,810.333,o),
(24,785,cs),
(24,762.333,o),
(46,756,o),
(70,756,cs),
(92.695,756,o),
(101.831,757,o),
(133,757,cs),
(151.667,757,o),
(155,747,o),
(155,723,cs),
(155,656.183,o),
(154.722,627.224,o),
(153.5,593,cs),
(152.407,562.387,o),
(151.733,522.863,o),
(150,457,cs),
(150,391.61,o),
(146.674,192.972,o),
(139,106,cs),
(134.196,69.97,o),
(104.087,60,o),
(70,60,cs),
(35.333,60,o),
(23,50.333,o),
(23,25,cs),
(23,1,o),
(48.667,0,o),
(82,0,cs),
(317,0,ls),
(331.667,0,o),
(344,10.333,o),
(344,29,cs),
(344,57,o),
(323.667,63,o),
(305,63,cs),
(235,63,l),
(250,792,l),
(250,792,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
51 44 40 33 36 52 32 5 18
CALL[ ]	/* CallFunction */";
};
width = 364;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(230,809.333,o),
(228.667,821,o),
(210,821,cs),
(213.027,821,o),
(130.706,818,o),
(59,818,c),
(41.667,816.667,o),
(22,812.333,o),
(22,791,cs),
(22,771,o),
(42.333,768,o),
(61,768,cs),
(88.645,768,o),
(97.849,769,o),
(134,769,cs),
(157.493,769,o),
(157,743.985,o),
(157,735,cs),
(154.333,665.67,o),
(154.689,618.343,o),
(152,457,cs),
(146.741,251.88,o),
(148.039,195.831,o),
(140,94,cs),
(137.416,50.067,o),
(83.355,48,o),
(61,48,cs),
(35.667,48,o),
(22,43,o),
(22,23,cs),
(22,4.333,o),
(46.333,0,o),
(73,0,cs),
(290,0,ls),
(303.333,0,o),
(315,8.333,o),
(315,23,cs),
(315,45.667,o),
(295.667,51,o),
(281,51,cs),
(215,51,l),
(230,792,l),
(230,792,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
19 1 0 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
51 45 40 33 36 52 32 5 18
CALL[ ]	/* CallFunction */";
};
width = 346;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(272,0,ls),
(285.333,0,o),
(292,4.333,o),
(292,13,cs),
(292,23.667,o),
(277.667,31,o),
(263,31,cs),
(187,31,l),
(202,792,ls),
(202,809.333,o),
(200.667,821,o),
(182,821,cs),
(184.759,821,o),
(111.839,818,o),
(46,818,cs),
(28,816.667,o),
(19,811,o),
(19,801,cs),
(19,792.333,o),
(28.667,788,o),
(48,788,cs),
(76.594,788,o),
(112.526,789,o),
(136,789,cs),
(159.493,789,o),
(159,763.985,o),
(159,755,cs),
(157.801,721.416,o),
(158.089,680.754,o),
(157.5,642.5,cs),
(156.805,597.332,o),
(155.208,535.509,o),
(154,457,cs),
(151.333,347.667,o),
(149.5,278.667,o),
(147.5,224,cs),
(145.739,175.862,o),
(143.178,121.114,o),
(142,74,cs),
(142,27.503,o),
(73.771,28,o),
(48,28,cs),
(36,28,o),
(19,25,o),
(19,13,cs),
(19,2.333,o),
(41.333,0,o),
(60,0,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 4 83 0 4 4 12 67 2 1 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 4 83 0 4 4 14 67 2 1 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
48 42 39 32 52 51 32 5 18
CALL[ ]	/* CallFunction */";
};
width = 320;
}
);
note = one;
unicode = 49;
},
{
glyphname = two;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(444.333,82.333,o),
(432.333,79.667,o),
(423,77,cs),
(417.667,75.667,o),
(402.5,74.833,o),
(377.5,74.5,cs),
(352.5,74.167,o),
(324.667,74,o),
(294,74,cs),
(273.333,74,o),
(253.167,74,o),
(233.5,74,cs),
(213.833,74,o),
(196.333,74.667,o),
(181,76,c),
(242.19,130.86,o),
(317.784,215.513,o),
(388.5,318,cs),
(458.738,419.794,o),
(509,531.485,o),
(509,626,cs),
(509,738.922,o),
(445.063,831,o),
(281,831,cs),
(119.535,831,o),
(29,681.181,o),
(29,616,cs),
(29,581.333,o),
(45.333,549,o),
(92,549,cs),
(137.333,549,o),
(152,576.667,o),
(152,602,cs),
(152,626.515,o),
(132,637.185,o),
(132,655,cs),
(132,673.394,o),
(183.798,752,o),
(271,752,cs),
(372.642,752,o),
(413,684.908,o),
(413,628,cs),
(413,530.838,o),
(355.69,411.265,o),
(276.5,301,cs),
(196.907,190.174,o),
(103.586,93.69,o),
(32,40,cs),
(21.333,30.667,o),
(11,23.333,o),
(11,10,cs),
(11,-0.667,o),
(20.333,-14,o),
(47,-14,cs),
(75,-14,o),
(97.667,-3.667,o),
(103,3,c),
(108.333,3,o),
(119.333,2.833,o),
(136,2.5,cs),
(152.667,2.167,o),
(171,2,o),
(191,2,cs),
(271.274,2,o),
(390.237,0,o),
(468,0,cs),
(478.667,0,o),
(490.333,3,o),
(501,23,cs),
(512.333,46.333,o),
(522.667,67,o),
(532,85,cs),
(541.333,103,o),
(546,116.667,o),
(546,126,cs),
(546,147.333,o),
(530.667,153,o),
(512,153,cs),
(493.333,153,o),
(481.333,148,o),
(468,124,cs),
(455,101,l),
(455,101,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
74 1 6 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 3 3 5 83 0 5 5 20 67 0 6 6 1 83 0 1 1 13 67 0 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 5 0 3 4 5 3 91 0 6 6 1 83 0 1 1 13 67 0 2 2 21 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
79 75 63 61 55 53 42 40 34 151 34 7 18
CALL[ ]	/* CallFunction */";
};
width = 571;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(432.333,67,o),
(426.333,63,o),
(417,63,cs),
(376.876,63,o),
(216.977,63.421,o),
(146,68,c),
(204.6,122.559,o),
(289.337,212.17,o),
(361.5,313,cs),
(434.363,414.809,o),
(490,527.098,o),
(490,626,cs),
(490,738.828,o),
(432.569,831,o),
(283,831,cs),
(121.535,831,o),
(31,681.181,o),
(31,616,cs),
(31,605.336,o),
(33,555,o),
(77,555,cs),
(111.667,555,o),
(133,574,o),
(133,602,cs),
(133,628.018,o),
(110,631.036,o),
(110,652,cs),
(110,674.12,o),
(173.876,770,o),
(273,770,cs),
(376.223,770,o),
(415,692.033,o),
(415,628,cs),
(415,530.819,o),
(356.592,410.63,o),
(277.5,299.5,cs),
(199.814,190.346,o),
(103.114,91.342,o),
(34,40,cs),
(28.667,35.333,o),
(23.833,31.167,o),
(19.5,27.5,cs),
(15.167,23.833,o),
(13,19.333,o),
(13,14,cs),
(13,3.333,o),
(20.667,-11,o),
(42,-11,cs),
(60.667,-11,o),
(78.667,-3.667,o),
(84,3,c),
(193,3,ls),
(283.673,3,o),
(355.905,0,o),
(446,0,cs),
(452.667,0,o),
(467.667,6,o),
(477,22,cs),
(495,54,o),
(508.833,77.667,o),
(518.5,93,cs),
(528.167,108.333,o),
(533,119.333,o),
(533,126,cs),
(533,142,o),
(517.667,147,o),
(503,147,cs),
(484.333,147,o),
(476.667,134.667,o),
(470,124,cs),
(443,83,l),
(443,83,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 3 3 5 83 0 5 5 20 67 0 6 6 1 83 0 1 1 13 67 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 5 0 3 4 5 3 91 0 6 6 1 83 0 1 1 13 67 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
80 74 63 61 53 51 40 38 34 119 34 7 18
CALL[ ]	/* CallFunction */";
};
width = 554;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(41.667,-6,o),
(51.667,-3.667,o),
(57,3,c),
(196,3,ls),
(275.483,3,o),
(341.119,0,o),
(420,0,cs),
(434.667,0,o),
(444.667,14,o),
(450,22,cs),
(485.265,85.476,o),
(506,115.013,o),
(506,126,cs),
(506,133.333,o),
(502,137,o),
(494,137,cs),
(485.333,137,o),
(478.333,132.667,o),
(473,124,cs),
(426,53,ls),
(415.333,37,o),
(409.333,33,o),
(400,33,cs),
(355.648,33,o),
(167.269,33.396,o),
(89,38,c),
(147.929,96.929,o),
(237.466,186.643,o),
(320,296,cs),
(401.559,404.066,o),
(463,523.088,o),
(463,626,cs),
(463,736.606,o),
(415.777,831,o),
(286,831,cs),
(124.535,831,o),
(34,681.181,o),
(34,616,cs),
(34,606.349,o),
(37.247,565,o),
(75,565,cs),
(83.374,565,o),
(106,570.118,o),
(106,602,cs),
(106,625.184,o),
(78,629.266,o),
(78,647,cs),
(78,674.48,o),
(159.937,800,o),
(276,800,cs),
(380.122,800,o),
(418,703.947,o),
(418,628,cs),
(418,530.819,o),
(359.592,410.63,o),
(280.5,299.5,cs),
(202.814,190.346,o),
(106.114,91.342,o),
(37,40,cs),
(31.667,35.333,o),
(26.833,31.167,o),
(22.5,27.5,cs),
(18.167,23.833,o),
(16,19.333,o),
(16,14,cs),
(16,3.333,o),
(23,-6,o),
(35,-6,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 3 3 5 83 0 5 5 20 67 0 6 6 1 83 0 1 1 13 67 0 2 2 16 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 5 0 3 4 5 3 91 0 6 6 1 83 0 1 1 13 67 0 2 2 16 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
82 76 65 63 55 53 40 38 34 120 33 7 18
CALL[ ]	/* CallFunction */";
};
width = 530;
}
);
note = two;
unicode = 50;
},
{
glyphname = three;
kernLeft = three;
kernRight = three;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(94,428.333,o),
(77,414.333,o),
(77,381,cs),
(77,356.333,o),
(87.667,344,o),
(109,344,cs),
(159,344,o),
(179.047,368,o),
(255,368,cs),
(331.569,368,o),
(404,344.643,o),
(404,263,cs),
(404,199.131,o),
(363.351,146.578,o),
(309.5,110,cs),
(256.705,74.139,o),
(198.862,56,o),
(163,56,cs),
(141.667,56,o),
(109.333,56,o),
(92,64,cs),
(68.711,75.644,o),
(56.822,101,o),
(30,101,cs),
(7.333,101,o),
(-5,81.333,o),
(-5,56,cs),
(-5,8.93,o),
(62.971,-18,o),
(144,-18,cs),
(329.776,-18,o),
(495,122.808,o),
(495,264,cs),
(495,366.521,o),
(409.577,436,o),
(305,436,cs),
(254.755,436,o),
(233.873,434.038,o),
(198,423,c),
(230.67,433.209,o),
(301.445,467.347,o),
(365,517,cs),
(429.744,567.581,o),
(482,633.78,o),
(482,708,cs),
(482,811.256,o),
(404.406,836,o),
(301,836,cs),
(203.667,836,o),
(137.667,797.667,o),
(95,751,cs),
(52.333,704.333,o),
(34,648,o),
(34,612,cs),
(34,602.541,o),
(40.305,580,o),
(72,580,cs),
(105.271,580,o),
(127.907,621.629,o),
(133,642,cs),
(155.4,723.198,o),
(224.72,765,o),
(283,765,cs),
(359,765,o),
(391,740.667,o),
(391,694,cs),
(391,641.284,o),
(338.316,584.577,o),
(272.5,538,cs),
(202.723,488.619,o),
(144.175,456.473,o),
(106,435,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
42 1 7 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 1 0 3 0 1 3 104 0 8 7 5 7 8 5 104 0 5 6 7 5 6 102 0 0 0 2 83 0 2 2 20 67 0 7 7 3 83 0 3 3 15 67 0 6 6 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 1 0 3 0 1 3 104 0 8 7 5 7 8 5 104 0 5 6 7 5 6 102 0 3 0 7 8 3 7 91 0 0 0 2 83 0 2 2 20 67 0 6 6 4 83 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 3 0 1 3 104 0 8 7 5 7 8 5 104 0 5 6 7 5 6 102 0 2 0 0 1 2 0 91 0 3 0 7 8 3 7 91 0 6 6 4 83 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
35 42 53 38 40 62 40 40 41 9 24
CALL[ ]	/* CallFunction */";
};
width = 548;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(101.333,415.667,o),
(82,403,o),
(82,379,cs),
(82,360.333,o),
(95.333,348,o),
(110,348,cs),
(161.406,348,o),
(177.586,384,o),
(256,384,cs),
(333.337,384,o),
(420,343.723,o),
(420,252,cs),
(420,127.979,o),
(257.988,38,o),
(154,38,cs),
(138,38,o),
(107.333,39.333,o),
(82,58,cs),
(72.667,65.333,o),
(66.333,72.333,o),
(63,79,cs),
(59.667,85.667,o),
(53.333,89,o),
(44,89,cs),
(25.333,89,o),
(17,75.667,o),
(17,57,cs),
(17,9.217,o),
(85.707,-18,o),
(160,-18,cs),
(337.961,-18,o),
(495,129.908,o),
(495,267,cs),
(495,370.896,o),
(403.603,437,o),
(297,437,cs),
(239.661,437,o),
(200.674,425,o),
(200,425,c),
(219.534,432.813,o),
(285.413,461.915,o),
(357,513.5,cs),
(426.065,563.267,o),
(483,631.761,o),
(483,709,cs),
(483,822.294,o),
(361.816,836,o),
(307,836,cs),
(129.767,836,o),
(48,687.429,o),
(48,615,cs),
(48,609.719,o),
(49.065,586,o),
(77,586,cs),
(109.32,586,o),
(118.379,616.343,o),
(128,642,c),
(153.949,727.633,o),
(230.698,774,o),
(301,774,cs),
(354.475,774,o),
(408,745.403,o),
(408,688,cs),
(408,628.75,o),
(351.044,573.191,o),
(282,527.5,cs),
(214.526,482.848,o),
(141.516,446.137,o),
(108,421,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 1 0 4 0 1 4 104 0 8 3 9 3 8 9 104 0 9 6 3 9 6 102 0 6 7 3 6 7 102 0 0 0 2 83 0 2 2 20 67 0 4 4 15 67 0 3 3 15 67 0 7 7 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 1 0 4 0 1 4 104 0 4 3 0 4 3 102 0 3 8 0 3 8 102 0 8 9 0 8 9 102 0 9 6 0 9 6 102 0 6 7 0 6 7 102 0 0 0 2 83 0 2 2 20 67 0 7 7 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 1 0 4 0 1 4 104 0 4 3 0 4 3 102 0 3 8 0 3 8 102 0 8 9 0 8 9 102 0 9 6 0 9 6 102 0 6 7 0 6 7 102 0 2 0 0 1 2 0 91 0 7 7 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
89 87 40 36 38 40 35 27 40 40 43 10 24
CALL[ ]	/* CallFunction */";
};
width = 532;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(312.8,-18,o),
(468,130.849,o),
(468,264,cs),
(468,377.985,o),
(373.244,433,o),
(267,433,cs),
(253,433,o),
(239.167,431.667,o),
(225.5,429,cs),
(211.833,426.333,o),
(204.333,425,o),
(203,425,c),
(207.229,431.343,o),
(253.762,448.855,o),
(332.5,507,cs),
(399.545,556.51,o),
(456,627.628,o),
(456,711,cs),
(456,824.463,o),
(344.048,836,o),
(301,836,cs),
(137.383,836,o),
(51,683.594,o),
(51,620,cs),
(51,613.333,o),
(51,596,o),
(67,596,cs),
(81.667,596,o),
(90.667,616.667,o),
(100,642,cs),
(138.667,744.667,o),
(209,804,o),
(293,804,cs),
(349.924,804,o),
(411,777.089,o),
(411,705,cs),
(411,626.895,o),
(354.457,563.028,o),
(285,514,cs),
(214.092,463.947,o),
(143.144,432.117,o),
(111,406,cs),
(105.667,402,o),
(95,393.333,o),
(95,380,cs),
(95,368,o),
(104.333,363,o),
(111,363,cs),
(157.97,363,o),
(181.562,399,o),
(257,399,cs),
(338.812,399,o),
(423,363.5,o),
(423,259,cs),
(423,122.226,o),
(261.708,11,o),
(156,11,cs),
(106.667,11,o),
(74.667,35,o),
(56,59,cs),
(50.667,65.667,o),
(47,70.5,o),
(45,73.5,cs),
(43,76.5,o),
(39.667,78,o),
(35,78,cs),
(20.333,78,o),
(20,65.667,o),
(20,59,cs),
(20,7.32,o),
(87.863,-18,o),
(154,-18,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 1 0 4 0 1 4 104 0 9 8 6 8 9 6 104 0 6 7 8 6 7 102 0 0 0 2 83 0 2 2 20 67 0 3 3 15 67 0 8 8 4 83 0 4 4 15 67 0 7 7 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 1 0 4 0 1 4 104 0 3 4 8 4 3 8 104 0 9 8 6 8 9 6 104 0 6 7 8 6 7 102 0 4 0 8 9 4 8 91 0 0 0 2 83 0 2 2 20 67 0 7 7 5 83 0 5 5 21 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 1 0 4 0 1 4 104 0 3 4 8 4 3 8 104 0 9 8 6 8 9 6 104 0 6 7 8 6 7 102 0 2 0 0 1 2 0 91 0 4 0 8 9 4 8 91 0 7 7 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
81 79 40 36 38 40 33 27 38 36 43 10 24
CALL[ ]	/* CallFunction */";
};
width = 509;
}
);
note = three;
unicode = 51;
},
{
glyphname = four;
kernLeft = four;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(557,244,o),
(578,254.333,o),
(578,285,cs),
(578,311,o),
(563.667,324.333,o),
(535,325,cs),
(464,328,l),
(464,396.83,o),
(469.809,497.529,o),
(477.5,603,cs),
(485.698,715.436,o),
(491,773.371,o),
(491,777,cs),
(491,803.667,o),
(471.667,820,o),
(437,820,cs),
(410.333,820,o),
(394,803.667,o),
(382,789,cs),
(334.312,729.39,o),
(263.958,640.009,o),
(221.5,584,cs),
(172.739,519.677,o),
(102.867,425.61,o),
(1,291,cs),
(-7,280.333,o),
(-9,272,o),
(-9,264,cs),
(-9,245.333,o),
(10.333,234,o),
(33,234,cs),
(47.667,234,o),
(82.167,235.167,o),
(136.5,237.5,cs),
(190.833,239.833,o),
(269,242,o),
(371,244,c),
(362,101,ls),
(359.333,74.333,o),
(343.667,69.667,o),
(313,63,cs),
(301.558,60.14,o),
(258.858,58.357,o),
(240,56,cs),
(221.333,53.333,o),
(203,50.667,o),
(203,28,cs),
(203,1.273,o),
(230.238,0,o),
(243,0,cs),
(501,0,ls),
(527.667,0,o),
(554,4.333,o),
(554,31,cs),
(554,41.667,o),
(549.167,50,o),
(539.5,56,cs),
(529.833,62,o),
(510.333,65,o),
(481,65,cs),
(461,65,o),
(452,69.667,o),
(452,87,cs),
(452,87.843,o),
(453.666,170.662,o),
(461,244,c),
(541,244,l),
(541,244,l)
);
},
{
closed = 1;
nodes = (
(131.667,316,o),
(128,318,o),
(128,322,cs),
(128,324.667,o),
(128.667,327.167,o),
(130,329.5,cs),
(131.333,331.833,o),
(134.333,336,o),
(139,342,cs),
(400,696,l),
(373,328,l),
(351.186,326.593,o),
(195.185,316,o),
(139,316,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
74 1 5 4 31 1 0 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
9 7 2 5 8 6 2 3 0 5 3 91 0 4 4 12 67 2 1 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 2 0 1 0 2 96 9 7 2 5 8 6 2 3 0 5 3 91 0 4 4 12 67 0 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 2 0 1 0 2 96 8 1 6 3 5 6 79 9 7 2 5 0 3 0 5 3 91 0 4 4 14 67 0 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
73 68 0 0 68 79 73 79 0 67 0 66 41 46 70 25 52 39 10 21
CALL[ ]	/* CallFunction */";
};
width = 580;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(521.667,244,o),
(540,250.333,o),
(540,273,cs),
(540,293,o),
(525.333,304.667,o),
(504,306,cs),
(440,310,l),
(440,384.611,o),
(446.449,487.086,o),
(454.5,609,cs),
(462.393,728.517,o),
(469,793.416,o),
(469,804,cs),
(469,818.667,o),
(451,826,o),
(427,826,cs),
(404.333,826,o),
(383,804.667,o),
(379,798,c),
(315.324,718.405,o),
(260.316,646.118,o),
(206,573,cs),
(151.779,500.01,o),
(85.371,407.495,o),
(-2,291,cs),
(-10,280.333,o),
(-12,272,o),
(-12,264,cs),
(-12,245.333,o),
(7.333,234,o),
(30,234,cs),
(44.667,234,o),
(79.167,235.167,o),
(133.5,237.5,cs),
(187.833,239.833,o),
(266,242,o),
(368,244,c),
(359,89,ls),
(357.667,62.333,o),
(339.333,53.667,o),
(310,51,cs),
(311.206,51,o),
(256.8,45,o),
(220,45,cs),
(206.667,45,o),
(190,41.333,o),
(190,24,cs),
(190,4,o),
(211,0,o),
(223,0,cs),
(468,0,ls),
(494.667,0,o),
(512,6.333,o),
(512,25,cs),
(512,43.667,o),
(497.333,49,o),
(468,49,cs),
(450.667,49,o),
(427,49,o),
(427,65,cs),
(427,50.711,o),
(430.46,175.327,o),
(437,244,c),
(511,244,l),
(511,244,l)
);
},
{
closed = 1;
nodes = (
(94.333,298,o),
(90.5,298.833,o),
(89.5,300.5,cs),
(88.5,302.167,o),
(88,304,o),
(88,306,cs),
(88,310,o),
(89.833,313.833,o),
(93.5,317.5,cs),
(97.167,321.167,o),
(99,324,o),
(99,326,c),
(398,727,l),
(370,310,l),
(253.718,303.54,o),
(126.96,298,o),
(101,298,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
74 73 2 6 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
10 8 2 6 9 7 2 4 0 6 4 91 0 5 5 12 67 3 2 2 0 0 1 84 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
9 1 7 4 6 7 79 10 8 2 6 0 4 0 6 4 91 0 5 5 14 67 3 2 2 0 0 1 84 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
72 67 0 0 67 79 72 79 0 66 0 65 41 46 68 19 36 52 39 11 22
CALL[ ]	/* CallFunction */";
};
width = 569;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(472,0,ls),
(485.333,0,o),
(494.333,1.667,o),
(499,5,cs),
(503.667,8.333,o),
(506,11.667,o),
(506,15,cs),
(506,29.667,o),
(485.333,29,o),
(472,29,cs),
(451.985,29,o),
(401,26.126,o),
(401,45,cs),
(401,27.343,o),
(404.376,167.826,o),
(411,244,c),
(515,244,ls),
(525.667,244,o),
(534,252.333,o),
(534,259,cs),
(534,269.667,o),
(529.333,274.667,o),
(508,276,cs),
(414,280,l),
(415.399,334.558,o),
(423.473,484.566,o),
(430.5,597,cs),
(439.125,734.998,o),
(443,796.805,o),
(443,804,cs),
(443,818.667,o),
(431.667,821,o),
(421,821,cs),
(398.333,821,o),
(387,804.667,o),
(383,798,c),
(319.324,718.405,o),
(264.316,646.118,o),
(210,573,cs),
(155.779,500.01,o),
(89.371,407.495,o),
(2,291,cs),
(-6,280.333,o),
(-8,272,o),
(-8,264,cs),
(-8,245.333,o),
(11.333,234,o),
(34,234,cs),
(48.667,234,o),
(83.167,235.167,o),
(137.5,237.5,cs),
(191.833,239.833,o),
(270,242,o),
(372,244,c),
(363,69,ls),
(361.667,42.333,o),
(343.333,33.667,o),
(314,31,cs),
(315.206,31,o),
(260.8,25,o),
(224,25,cs),
(210.667,25,o),
(204,21.333,o),
(204,14,cs),
(204,3.333,o),
(215,0,o),
(227,0,cs)
);
},
{
closed = 1;
nodes = (
(45,268,o),
(40,270.667,o),
(40,276,cs),
(40,279.333,o),
(41.833,283,o),
(45.5,287,cs),
(49.167,291,o),
(51.667,294,o),
(53,296,cs),
(404,763,l),
(374,280,l),
(341.73,278.499,o),
(133.929,268,o),
(55,268,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
74 1 6 5 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
10 8 2 6 9 7 2 4 0 6 4 92 0 5 5 12 67 3 2 2 0 0 1 83 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
9 1 7 4 6 7 80 10 8 2 6 0 4 0 6 4 92 0 5 5 14 67 3 2 2 0 0 1 83 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
73 68 0 0 68 79 73 79 0 67 0 66 41 46 68 19 35 52 56 11 22
CALL[ ]	/* CallFunction */";
};
width = 554;
}
);
note = four;
unicode = 52;
},
{
glyphname = five;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(375.149,812,o),
(176.04,804.929,o),
(105,794,cs),
(93.667,792,o),
(87.333,785.667,o),
(86,775,cs),
(78.964,662.423,o),
(72.852,611.199,o),
(59,505,cs),
(56.333,487.667,o),
(55,468,o),
(55,460,cs),
(55,431.333,o),
(57.5,410,o),
(62.5,396,cs),
(67.5,382,o),
(77.667,375,o),
(93,375,cs),
(115.326,375,o),
(200.543,412,o),
(300,412,cs),
(408.489,412,o),
(446,353.107,o),
(446,274,cs),
(446,171.649,o),
(366.116,61,o),
(193,61,cs),
(153,61,o),
(113,78.667,o),
(113,100,cs),
(113,136.31,o),
(171,107.205,o),
(171,165,cs),
(171,195.667,o),
(149.333,212,o),
(116,212,cs),
(65.333,212,o),
(29,168,o),
(29,104,cs),
(29,-1.765,o),
(129.021,-12,o),
(211,-12,cs),
(433.702,-12,o),
(542,139.517,o),
(542,269,cs),
(542,318.333,o),
(530,375.333,o),
(494,418,cs),
(458,460.667,o),
(398.333,492,o),
(305,492,cs),
(246.15,492,o),
(155.49,466.796,o),
(146,463,c),
(170,706,l),
(185.262,712.783,o),
(242.273,719.866,o),
(309.5,722,cs),
(400.643,724.893,o),
(411.428,725,o),
(454,725,cs),
(477.025,725,o),
(509,732.031,o),
(509,771,cs),
(509,803,o),
(485,812,o),
(449,812,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
76 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 1 1 0 83 8 1 0 0 14 67 0 6 6 2 83 0 2 2 23 67 0 5 5 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 1 1 0 83 8 1 0 0 14 67 0 6 6 2 83 0 2 2 23 67 0 5 5 3 83 0 3 3 24 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 2 0 6 7 2 6 91 0 1 1 0 83 8 1 0 0 14 67 0 5 5 3 83 0 3 3 24 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
1 0 66 64 61 59 51 49 40 38 32 30 22 20 12 7 0 82 1 80 9 15
CALL[ ]	/* CallFunction */";
};
width = 556;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(354.511,812,o),
(181.298,805.584,o),
(106,794,cs),
(94.667,792,o),
(88.333,785.667,o),
(87,775,cs),
(79.591,656.455,o),
(74.185,604.297,o),
(60,505,cs),
(57.333,487.667,o),
(56,468,o),
(56,460,cs),
(56,421.333,o),
(64,393,o),
(92,393,cs),
(128.045,393,o),
(195.002,424,o),
(277,424,cs),
(409.022,424,o),
(447,347.231,o),
(447,274,cs),
(447,161.537,o),
(366.759,51,o),
(194,51,cs),
(149.462,51,o),
(93,66.162,o),
(93,96,cs),
(93,132.415,o),
(151,103.265,o),
(151,156,cs),
(151,184,o),
(131.667,198,o),
(105,198,cs),
(64.147,198,o),
(30,154.658,o),
(30,104,cs),
(30,-7.904,o),
(146.621,-12,o),
(198,-12,cs),
(419.335,-12,o),
(522,138.335,o),
(522,269,cs),
(522,372.041,o),
(457.218,492,o),
(287,492,cs),
(230.005,492,o),
(146.877,469.959,o),
(126,463,c),
(159,724,l),
(202.096,741.239,o),
(376.179,743,o),
(423,743,cs),
(444.333,743,o),
(471,749.667,o),
(471,779,cs),
(471,805.667,o),
(447.333,812,o),
(418,812,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
76 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 1 1 0 83 8 1 0 0 14 67 0 6 6 2 83 0 2 2 23 67 0 5 5 3 83 0 3 3 24 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 2 0 6 7 2 6 91 0 1 1 0 83 8 1 0 0 14 67 0 5 5 3 83 0 3 3 24 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
1 0 66 64 61 59 51 49 38 36 29 26 18 16 9 5 0 82 1 80 9 15
CALL[ ]	/* CallFunction */";
};
width = 542;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(400.498,-12,o),
(494,137.536,o),
(494,269,cs),
(494,369.723,o),
(438.993,492,o),
(289,492,cs),
(225.389,492,o),
(121.548,469.728,o),
(98,463,c),
(131,754,l),
(149.714,760.805,o),
(208.997,767.921,o),
(274.5,770,cs),
(364.697,772.863,o),
(377.182,773,o),
(425,773,cs),
(446.333,773,o),
(463,780,o),
(463,792,cs),
(463,809.333,o),
(438.667,812,o),
(420,812,cs),
(356.511,812,o),
(183.298,805.584,o),
(108,794,cs),
(96.667,792,o),
(90.333,785.667,o),
(89,775,cs),
(81.591,656.455,o),
(76.185,604.297,o),
(62,505,cs),
(59.333,487.667,o),
(58,468,o),
(58,460,cs),
(58,438.667,o),
(71.333,423,o),
(90,423,cs),
(126.852,423,o),
(196.621,454,o),
(279,454,cs),
(413.796,454,o),
(449,357.742,o),
(449,274,cs),
(449,152.013,o),
(375.159,21,o),
(196,21,cs),
(129.626,21,o),
(65,42.179,o),
(65,93,cs),
(65,128.642,o),
(123,96.616,o),
(123,141,cs),
(123,166.333,o),
(106,175,o),
(90,175,cs),
(63.922,175,o),
(32,152.134,o),
(32,104,cs),
(32,-10.667,o),
(161.333,-12,o),
(180,-12,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
78 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 1 1 0 83 8 1 0 0 14 67 0 6 6 2 83 0 2 2 23 67 0 5 5 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 1 1 0 83 8 1 0 0 14 67 0 6 6 2 83 0 2 2 23 67 0 5 5 3 83 0 3 3 24 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 2 0 6 7 2 6 91 0 1 1 0 83 8 1 0 0 14 67 0 5 5 3 83 0 3 3 24 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
1 0 68 66 63 61 53 51 40 38 30 28 20 18 10 5 0 84 1 82 9 15
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = five;
unicode = 53;
},
{
glyphname = six;
kernLeft = six;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(373,779.333,o),
(377,787.333,o),
(377,796,cs),
(377,818.667,o),
(362,830,o),
(342,830,cs),
(333.333,830,o),
(319.667,825.333,o),
(301,816,cs),
(254.642,791.813,o),
(189.28,713.197,o),
(132,609.5,cs),
(74.278,505.003,o),
(31,372.904,o),
(31,249,cs),
(31,53.377,o),
(145.817,-18,o),
(293,-18,cs),
(481.916,-18,o),
(530,108,o),
(530,214,cs),
(530,302.033,o),
(490.352,420,o),
(315,420,cs),
(231,420,o),
(163,392,o),
(119,324,c),
(126.641,400.41,o),
(135.015,416.701,o),
(166,489,cs),
(202,574.333,o),
(236,630.5,o),
(268,672.5,cs),
(300,714.5,o),
(331.667,741.333,o),
(365,772,cs)
);
},
{
closed = 1;
nodes = (
(229.682,61,o),
(145,95.775,o),
(145,194,cs),
(145,295.623,o),
(230.056,338,o),
(298,338,cs),
(400.667,338,o),
(442,289.667,o),
(442,203,cs),
(442,117.667,o),
(386,61,o),
(290,61,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
10 1 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 2 20 67 0 4 4 0 83 0 0 0 15 67 5 1 3 3 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
16
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 2 12 67 0 4 4 0 83 0 0 0 15 67 5 1 3 3 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 2 20 67 0 4 4 0 83 0 0 0 15 67 5 1 3 3 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 4 3 0 4 92 0 2 2 20 67 5 1 3 3 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 106 0 0 0 4 3 0 4 92 5 1 3 3 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
43 42 49 47 42 57 43 57 44 40 44 6 18
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(378,790.667,o),
(383,796.333,o),
(383,807,cs),
(383,820.333,o),
(374.667,834,o),
(356,834,cs),
(344,834,o),
(330.667,828.667,o),
(320,822,cs),
(267.366,790.419,o),
(201.035,713.929,o),
(139.5,607,cs),
(77.467,499.205,o),
(34,369.772,o),
(34,251,cs),
(34,54.41,o),
(150.044,-18,o),
(286,-18,cs),
(468.255,-18,o),
(520,113.491,o),
(520,207,cs),
(520,286.615,o),
(481.02,420,o),
(311,420,cs),
(187.254,420,o),
(110.272,353.209,o),
(94,261,c),
(92.667,264.333,o),
(92,272.333,o),
(92,285,cs),
(92,342.333,o),
(112,395.667,o),
(148,481,cs),
(182.667,563.667,o),
(223.167,627.833,o),
(262.5,676.5,cs),
(301.833,725.167,o),
(339.333,760,o),
(370,784,cs)
);
},
{
closed = 1;
nodes = (
(212.054,43,o),
(127,87.317,o),
(127,183,cs),
(127,298.378,o),
(210.355,356,o),
(295,356,cs),
(400.636,356,o),
(445,284.711,o),
(445,204,cs),
(445,107.834,o),
(372.574,43,o),
(282,43,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
10 1 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 2 20 67 0 4 4 0 83 0 0 0 15 67 5 1 3 3 1 84 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 4 3 0 4 91 0 2 2 20 67 5 1 3 3 1 84 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 106 0 0 0 4 3 0 4 91 5 1 3 3 1 84 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
47 46 57 55 46 65 47 65 45 40 46 6 18
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(443.325,-18,o),
(494,133.278,o),
(494,214,cs),
(494,282.777,o),
(456.767,420,o),
(305,420,cs),
(189.728,420,o),
(100.194,347.52,o),
(78,231,c),
(76.667,233.667,o),
(75.833,236.833,o),
(75.5,240.5,cs),
(75.167,244.167,o),
(75,250.667,o),
(75,260,cs),
(75,324,o),
(85.667,392,o),
(123,480,cs),
(179.841,614.352,o),
(278.238,746.298,o),
(354,794,cs),
(359.333,796.667,o),
(369,804.333,o),
(369,815,cs),
(369,825.667,o),
(362.333,831,o),
(349,831,cs),
(338.333,831,o),
(330.667,827.333,o),
(324,822,cs),
(265.333,780.667,o),
(193.167,697.5,o),
(136.5,595.5,cs),
(79.833,493.5,o),
(38,371.333,o),
(38,254,cs),
(38,51.327,o),
(161.338,-18,o),
(276,-18,cs)
);
},
{
closed = 1;
nodes = (
(191.395,13,o),
(101,62.594,o),
(101,180,cs),
(101,301.07,o),
(200.107,386,o),
(302,386,cs),
(415.987,386,o),
(449,279.336,o),
(449,205,cs),
(449,87.421,o),
(364.844,13,o),
(270,13,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
11 1 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 2 20 67 0 4 4 0 83 0 0 0 15 67 5 1 3 3 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 4 3 0 4 92 0 2 2 20 67 5 1 3 3 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 106 0 0 0 4 3 0 4 92 5 1 3 3 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
45 44 55 53 44 63 45 63 43 40 47 6 18
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = six;
unicode = 54;
},
{
glyphname = seven;
kernLeft = seven;
kernRight = seven;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,47.667,o),
(-11,28.333,o),
(-11,11,cs),
(-11,-15.667,o),
(10.667,-24,o),
(28,-24,cs),
(53.333,-24,o),
(66.333,-16.333,o),
(77,5,cs),
(457,718,l),
(464.713,741.138,o),
(487,764.874,o),
(487,790,cs),
(487,812.937,o),
(479.679,819,o),
(421,819,cs),
(413,819,o),
(400.167,818.833,o),
(382.5,818.5,cs),
(364.833,818.167,o),
(344.667,818,o),
(322,818,cs),
(299.333,818,o),
(275.5,817.667,o),
(250.5,817,cs),
(225.5,816.333,o),
(201.667,816,o),
(179,816,cs),
(156.333,816,o),
(136.167,815.833,o),
(118.5,815.5,cs),
(100.833,815.167,o),
(88.333,815,o),
(81,815,cs),
(49,815,o),
(25,807.667,o),
(25,777,cs),
(25,750.333,o),
(35.667,730,o),
(57,730,cs),
(109.667,730,o),
(158.833,731.167,o),
(204.5,733.5,cs),
(250.167,735.833,o),
(297.667,737,o),
(347,737,cs),
(356.333,737,o),
(361,733.333,o),
(361,726,cs),
(361,714.754,o),
(322.527,639.096,o),
(247.5,498,cs),
(182.477,375.717,o),
(101.765,230.937,o),
(16,77,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 1 83 0 1 1 14 67 0 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 2 0 2 107 0 0 0 1 83 0 1 1 14 0 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
44 148 88 3 18
CALL[ ]	/* CallFunction */";
};
width = 480;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(4.333,11.333,o),
(2,7.333,o),
(2,-2,cs),
(2,-12.667,o),
(20,-22,o),
(36,-22,cs),
(58.667,-22,o),
(65.667,-13.667,o),
(75,5,cs),
(465,737,l),
(463.722,733.166,o),
(487,774.028,o),
(487,790,cs),
(487,818,o),
(463.667,820,o),
(429,820,cs),
(416.695,820,o),
(340.638,817.841,o),
(256,814.5,cs),
(171.088,811.148,o),
(95.297,809,o),
(85,809,cs),
(54.333,809,o),
(36,805.333,o),
(36,780,cs),
(36,761.333,o),
(45,749,o),
(61,749,cs),
(118.333,749,o),
(171.833,750.167,o),
(221.5,752.5,cs),
(271.167,754.833,o),
(322.667,756,o),
(376,756,cs),
(385.333,756,o),
(390,751.667,o),
(390,743,cs),
(390,735.252,o),
(259.441,495.141,o),
(7,18,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 0 1 83 0 1 1 14 67 0 2 2 21 2 68 42 148 86 3 18
CALL[ ]	/* CallFunction */";
};
width = 467;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(39,-19,o),
(42.667,-13.667,o),
(52,5,cs),
(457,768,ls),
(461,774.667,o),
(465,782.333,o),
(465,789,cs),
(465,805,o),
(455.667,821,o),
(421,821,cs),
(408.629,821,o),
(331.073,818.826,o),
(243.5,815.5,cs),
(154.409,812.117,o),
(77.584,810,o),
(67,810,cs),
(53,810,o),
(43,809.167,o),
(37,807.5,cs),
(31,805.833,o),
(28,801.333,o),
(28,794,cs),
(28,787.333,o),
(33.667,780,o),
(43,780,cs),
(105.667,780,o),
(165.833,781.167,o),
(223.5,783.5,cs),
(281.167,785.833,o),
(339.333,787,o),
(398,787,cs),
(407.333,787,o),
(412,782.667,o),
(412,774,cs),
(412,767.75,o),
(393.965,733.935,o),
(362,674,cs),
(329.535,613.127,o),
(268.7,500.228,o),
(181,334.5,cs),
(135.667,248.833,o),
(80,143.333,o),
(14,18,c),
(11.333,11.333,o),
(9,1,o),
(9,-7,cs),
(9,-15,o),
(13.667,-19,o),
(23,-19,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 0 1 83 0 1 1 14 67 0 2 2 21 2 68 40 148 88 3 18
CALL[ ]	/* CallFunction */";
};
width = 448;
}
);
note = seven;
unicode = 55;
},
{
glyphname = eight;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(21,52.483,o),
(118.445,-20,o),
(257,-20,cs),
(429.012,-20,o),
(527,88.674,o),
(527,214,cs),
(527,327.225,o),
(440.174,406.82,o),
(369,420,c),
(421.023,436.428,o),
(509,511.073,o),
(509,622,cs),
(509,720.661,o),
(449.674,832,o),
(275,832,cs),
(125.805,832,o),
(47,729.875,o),
(47,614,cs),
(47,511.108,o),
(107.584,447.007,o),
(167,420,c),
(114.654,401.679,o),
(21,335.785,o),
(21,193,cs)
);
},
{
closed = 1;
nodes = (
(117,306.209,o),
(185.264,374,o),
(271,374,cs),
(359.425,374,o),
(432,309.434,o),
(432,209,cs),
(432,109,o),
(362,55,o),
(262,55,cs),
(143.097,55,o),
(117,128.259,o),
(117,209,cs)
);
},
{
closed = 1;
nodes = (
(136,676.878,o),
(177.694,753,o),
(279,753,cs),
(366.445,753,o),
(422,693.827,o),
(422,616,cs),
(422,532.155,o),
(355.328,467,o),
(278,467,cs),
(208.2,467,o),
(136,513.769,o),
(136,612,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
25 5 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 5 5 0 83 0 0 0 20 67 0 3 3 4 83 0 4 4 23 67 0 2 2 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 0 3 2 4 3 91 0 5 5 0 83 0 0 0 20 67 0 2 2 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 2 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
74 72 64 62 54 52 46 44 36 34 46 6 16
CALL[ ]	/* CallFunction */";
};
width = 578;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(37,50.509,o),
(141.309,-20,o),
(269,-20,cs),
(419.742,-20,o),
(522,81.836,o),
(522,204,cs),
(522,314.933,o),
(432.705,399.563,o),
(356,416,c),
(410.671,431.62,o),
(509,509.054,o),
(509,622,cs),
(509,720.44,o),
(434.276,832,o),
(286,832,cs),
(144.72,832,o),
(59,729.256,o),
(59,615,cs),
(59,513.966,o),
(128.313,443.255,o),
(191,416,c),
(127.424,391.781,o),
(37,319.3,o),
(37,191,cs)
);
},
{
closed = 1;
nodes = (
(112,311.6,o),
(198.4,377,o),
(279,377,cs),
(355.9,377,o),
(445,315.537,o),
(445,206,cs),
(445,98.947,o),
(360.891,41,o),
(272,41,cs),
(169.862,41,o),
(112,115.203,o),
(112,203,cs)
);
},
{
closed = 1;
nodes = (
(134,681.997,o),
(173.997,771,o),
(286,771,cs),
(390.014,771,o),
(434,695.655,o),
(434,621,cs),
(434,524.813,o),
(361.279,454,o),
(283,454,cs),
(215.015,454,o),
(134,506.058,o),
(134,610,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
25 5 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 5 5 0 83 0 0 0 20 67 0 3 3 4 83 0 4 4 15 67 0 2 2 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 0 3 2 4 3 91 0 5 5 0 83 0 0 0 20 67 0 2 2 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 2 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
76 74 66 64 56 54 46 44 36 34 46 6 16
CALL[ ]	/* CallFunction */";
};
width = 561;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(391.761,-20,o),
(495,87.215,o),
(495,199,cs),
(495,301.467,o),
(404.896,394.316,o),
(329,416,c),
(383.759,431.645,o),
(482,507.524,o),
(482,625,cs),
(482,721.309,o),
(416.462,832,o),
(282,832,cs),
(152.335,832,o),
(62,728.853,o),
(62,617,cs),
(62,515.59,o),
(134.175,442.011,o),
(194,416,c),
(132.553,383.814,o),
(40,315.099,o),
(40,191,cs),
(40,49.15,o),
(158.635,-20,o),
(266,-20,cs)
);
},
{
closed = 1;
nodes = (
(147.807,11,o),
(85,100.862,o),
(85,198,cs),
(85,323.948,o),
(181,392,o),
(268,392,cs),
(355.073,392,o),
(448,323.428,o),
(448,204,cs),
(448,82.43,o),
(358.305,11,o),
(259,11,cs)
);
},
{
closed = 1;
nodes = (
(194.098,439,o),
(107,495.587,o),
(107,612,cs),
(107,698.298,o),
(154.807,801,o),
(281,801,cs),
(406.548,801,o),
(437,698.122,o),
(437,628,cs),
(437,509.526,o),
(350.83,439,o),
(268,439,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
25 5 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 5 5 0 83 0 0 0 20 67 0 3 3 4 83 0 4 4 15 67 0 2 2 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 0 3 2 4 3 91 0 5 5 0 83 0 0 0 20 67 0 2 2 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 2 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
76 74 66 64 56 54 46 44 36 34 46 6 16
CALL[ ]	/* CallFunction */";
};
width = 537;
}
);
note = eight;
unicode = 56;
},
{
glyphname = nine;
kernLeft = nine;
kernRight = nine;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(307,39.333,o),
(370.333,101,o),
(433,217,cs),
(483.752,310.046,o),
(526,449.361,o),
(526,578,cs),
(526,618,o),
(518.5,681.833,o),
(484.5,734.5,cs),
(450.5,787.167,o),
(388.667,830,o),
(282,830,cs),
(88.444,830,o),
(19,694.336,o),
(19,581,cs),
(19,437.392,o),
(112.668,339,o),
(230,339,cs),
(308.667,339,o),
(368.333,349.667,o),
(419,399,c),
(387.343,277.646,o),
(302.178,124.452,o),
(183,45,cs),
(164.333,31.667,o),
(159,22,o),
(159,6,cs),
(159,-19.333,o),
(176.333,-24,o),
(195,-24,cs),
(221.667,-24,o),
(239,-14,o),
(259,2,cs)
);
},
{
closed = 1;
nodes = (
(403.989,753,o),
(437,666.636,o),
(437,583,cs),
(437,518.441,o),
(398.706,418,o),
(256,418,cs),
(171.103,418,o),
(106,489.657,o),
(106,576,cs),
(106,700,o),
(170,753,o),
(278,753,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 1 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
5 1 3 3 2 83 0 2 2 20 67 0 1 1 4 83 0 4 4 15 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
16
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
5 1 3 3 2 83 0 2 2 12 67 0 1 1 4 83 0 4 4 15 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
5 1 3 3 2 83 0 2 2 20 67 0 1 1 4 83 0 4 4 15 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 4 0 1 0 4 1 91 5 1 3 3 2 83 0 2 2 20 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 2 5 1 3 4 2 3 91 0 4 0 1 0 4 1 91 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 1 0 107 0 2 5 1 3 4 2 3 91 0 4 1 1 4 79 0 4 4 1 83 0 1 4 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
41 40 49 47 40 57 41 57 40 44 34 6 18
CALL[ ]	/* CallFunction */";
};
width = 556;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(273.667,33.333,o),
(344,99.667,o),
(408,217,cs),
(456.83,309.519,o),
(508,454.039,o),
(508,591,cs),
(508,690.663,o),
(458.418,830,o),
(267,830,cs),
(82.003,830,o),
(11,691.853,o),
(11,581,cs),
(11,437.157,o),
(108.797,339,o),
(226,339,cs),
(295.148,339,o),
(375.267,371.561,o),
(425,437,c),
(396.26,295.915,o),
(293.64,110.869,o),
(168,28,cs),
(153.333,17.333,o),
(145,11.667,o),
(145,-3,cs),
(145,-21.667,o),
(164.333,-28,o),
(175,-28,cs),
(193.667,-28,o),
(207,-21.333,o),
(223,-8,cs)
);
},
{
closed = 1;
nodes = (
(386.639,769,o),
(434,671.321,o),
(434,595,cs),
(434,522.706,o),
(373.03,406,o),
(247,406,cs),
(154.705,406,o),
(86,478.733,o),
(86,576,cs),
(86,712.417,o),
(175.121,769,o),
(276,769,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 4 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 4 0 1 0 4 1 91 5 1 3 3 2 83 0 2 2 20 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
16
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 4 0 1 0 4 1 91 5 1 3 3 2 83 0 2 2 12 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 4 0 1 0 4 1 91 5 1 3 3 2 83 0 2 2 20 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 1 0 107 0 4 0 1 0 4 1 91 5 1 3 3 2 83 0 2 2 20 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 1 0 107 0 2 5 1 3 4 2 3 91 0 4 1 1 4 79 0 4 4 1 83 0 1 4 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
43 42 53 51 42 61 43 61 40 46 34 6 18
CALL[ ]	/* CallFunction */";
};
width = 541;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(178.333,-19,o),
(187.667,-15.333,o),
(197,-8,cs),
(247.667,33.333,o),
(318,99.667,o),
(382,217,cs),
(434.059,315.639,o),
(482,457.104,o),
(482,591,cs),
(482,687.687,o),
(428.453,830,o),
(256,830,cs),
(89.537,830,o),
(15,695.957,o),
(15,581,cs),
(15,437.157,o),
(112.797,339,o),
(230,339,cs),
(298,339,o),
(380,380.333,o),
(436,467,c),
(405.866,297.154,o),
(294.876,109.046,o),
(172,28,cs),
(157.333,17.333,o),
(149,11.667,o),
(149,-3,cs),
(149,-17.667,o),
(163.667,-19,o),
(169,-19,cs)
);
},
{
closed = 1;
nodes = (
(112.709,376,o),
(60,464.837,o),
(60,576,cs),
(60,735.932,o),
(168.287,799,o),
(250,799,cs),
(386.854,799,o),
(438,686.873,o),
(438,615,cs),
(438,526.212,o),
(379.215,376,o),
(228,376,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
13 1 4 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 4 0 1 0 4 1 91 5 1 3 3 2 83 0 2 2 20 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
16
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 4 0 1 0 4 1 91 5 1 3 3 2 83 0 2 2 12 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 4 0 1 0 4 1 91 5 1 3 3 2 83 0 2 2 20 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 2 5 1 3 4 2 3 91 0 4 0 1 0 4 1 91 0 0 0 21 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
40 39 50 48 39 58 40 58 40 44 33 6 18
CALL[ ]	/* CallFunction */";
};
width = 519;
}
);
note = nine;
unicode = 57;
},
{
glyphname = fraction;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(284,599.706,o),
(233.132,508.339,o),
(135.5,325.5,cs),
(69.337,201.594,o),
(-12,47.894,o),
(-12,37,cs),
(-12,26.333,o),
(-5.667,6,o),
(21,6,cs),
(54.333,6,o),
(72,30,o),
(80,42,cs),
(101.208,73.812,o),
(177.433,217.46,o),
(252.5,363.5,cs),
(318.983,492.839,o),
(395,640.929,o),
(395,650,cs),
(395,655.333,o),
(382,676,o),
(358,676,cs),
(328.078,676,o),
(316.414,647.92,o),
(284,602,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 1 1 0 1 66 0 0 1 0 106 0 1 1 13 1 68 45 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 389;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(287,599.724,o),
(236.118,508.312,o),
(138.5,325.5,cs),
(40.579,142.121,o),
(-9,46.179,o),
(-9,37,cs),
(-9,26.333,o),
(-1.667,12,o),
(17,12,cs),
(41,12,o),
(55.333,28.667,o),
(62,42,cs),
(75.903,69.806,o),
(133.974,176.2,o),
(232,363.5,cs),
(328.403,547.698,o),
(377,643.05,o),
(377,650,cs),
(377,655.333,o),
(367.333,670,o),
(350,670,cs),
(317.886,670,o),
(310.809,641.682,o),
(287,602,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 1 0 106 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 9 values pushed */
0 0 1 0 106 0 1 1 97
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
45 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 374;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(26.667,22,o),
(32,31.333,o),
(36,42,cs),
(49.851,75.243,o),
(100.823,171.756,o),
(203.5,364.5,cs),
(301.341,548.166,o),
(351,643.078,o),
(351,650,cs),
(351,656.667,o),
(346.667,660,o),
(338,660,cs),
(313.842,660,o),
(308.951,640.466,o),
(291,602,c),
(291,599.724,o),
(240.118,508.312,o),
(142.5,325.5,cs),
(44.579,142.121,o),
(-5,46.179,o),
(-5,37,cs),
(-5,27,o),
(0.667,22,o),
(12,22,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 1 0 106 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 9 values pushed */
0 0 1 0 106 0 1 1 97
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
44 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 352;
}
);
note = fraction;
unicode = 8260;
},
{
glyphname = onehalf;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(29.667,16.667,o),
(29,15.333,o),
(29,14,cs),
(29,12.667,o),
(29,11.667,o),
(29,11,cs),
(29,-9,o),
(55.667,-19,o),
(69,-19,cs),
(90.333,-19,o),
(113.333,-7,o),
(120,5,cs),
(525,768,l),
(530.333,776,o),
(539,796.333,o),
(539,807,cs),
(539,817.667,o),
(533.667,837,o),
(507,837,cs),
(473.725,837,o),
(459.328,832.655,o),
(430,774,cs),
(403.421,720.843,o),
(375.038,663.195,o),
(347.5,606.5,cs),
(328.633,567.657,o),
(299.442,515.186,o),
(249,423,cs),
(198.524,328.778,o),
(125.7,197.536,o),
(31,18,c)
);
},
{
closed = 1;
nodes = (
(181.511,713.99,o),
(184,780.579,o),
(184,815,cs),
(184,823,o),
(181.333,827,o),
(176,827,cs),
(170.638,827,o),
(141.279,823,o),
(88,823,cs),
(70.667,823,o),
(55,813.333,o),
(55,796,cs),
(55,773.333,o),
(69.333,770,o),
(88,770,cs),
(90,770,o),
(93.333,770.167,o),
(98,770.5,cs),
(102.667,770.833,o),
(105.667,771,o),
(107,771,cs),
(113.667,771,o),
(116,763.667,o),
(116,757,cs),
(116,722.936,o),
(114,726.817,o),
(114,683,cs),
(111.545,619.162,o),
(111.754,606.046,o),
(109,573,cs),
(107.667,555.667,o),
(102.667,554,o),
(88,554,cs),
(78.667,554,o),
(56,549.333,o),
(56,528,cs),
(56,505.333,o),
(75.667,500,o),
(93,500,cs),
(195,500,ls),
(207,500,o),
(226,502.667,o),
(226,528,cs),
(226,550.667,o),
(205.667,556,o),
(191,556,cs),
(178,556,l),
(178,556,l)
);
},
{
closed = 1;
nodes = (
(489.333,58.667,o),
(485.667,58,o),
(479,58,cs),
(436,60,l),
(470.661,100.438,o),
(536,179.65,o),
(536,253,cs),
(536,298.333,o),
(507.667,335,o),
(433,335,cs),
(356.621,335,o),
(321,278.604,o),
(321,249,cs),
(321,230.333,o),
(326,212,o),
(366,212,cs),
(383.333,212,o),
(396,218.667,o),
(396,240,cs),
(396,248,o),
(394.167,252.667,o),
(390.5,254,cs),
(386.833,255.333,o),
(385,257.667,o),
(385,261,cs),
(385,262.333,o),
(389.333,265.833,o),
(398,271.5,cs),
(406.667,277.167,o),
(417,280,o),
(429,280,cs),
(447.667,280,o),
(464,268.667,o),
(464,254,cs),
(464,176.869,o),
(384.485,65.608,o),
(322,18,cs),
(316.667,14,o),
(314,10.667,o),
(314,8,cs),
(314,6,o),
(315,3.333,o),
(317,0,cs),
(319,-3.333,o),
(324,-5,o),
(332,-5,cs),
(344,-5,o),
(352,-3.667,o),
(356,-1,cs),
(360,1.667,o),
(362.667,4,o),
(364,6,c),
(375.36,6,o),
(447.206,2,o),
(510,2,cs),
(516.667,2,o),
(520.667,8.333,o),
(522,11,c),
(520.268,9.268,o),
(546,47.332,o),
(546,61,cs),
(546,69,o),
(538.667,78,o),
(524,78,cs),
(512,78,o),
(496.667,73.333,o),
(490,60,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
95 1 9 14 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 12 11 8 11 12 8 104 0 8 14 11 8 14 102 4 15 2 2 0 3 13 2 3 91 0 13 0 11 12 13 11 91 6 1 5 5 0 83 7 1 0 0 20 67 0 14 14 9 84 0 9 9 13 67 10 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 12 11 8 11 12 8 104 0 8 14 11 8 14 102 4 15 2 2 0 3 13 2 3 91 0 13 0 11 12 13 11 91 6 1 5 5 0 83 7 1 0 0 20 67 0 14 14 9 84 10 1 9 9 13 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 12 11 8 11 12 8 104 0 8 14 11 8 14 102 4 15 2 2 0 3 13 2 3 91 0 13 0 11 12 13 11 91 0 0 0 20 67 6 1 5 5 7 83 0 7 7 12 67 0 14 14 9 84 10 1 9 9 13 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 12 11 8 11 12 8 104 0 8 14 11 8 14 102 4 15 2 2 0 3 13 2 3 91 0 13 0 11 12 13 11 91 0 0 0 20 67 6 1 5 5 7 83 0 7 7 12 67 0 14 14 9 84 0 9 9 13 67 0 10 10 16 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 70 values pushed */
0 0 7 0 106 0 12 11 8 11 12 8 104 0 8 14 11 8 14 102 4 15 2 2 0 3 13 2 3 91 0 13 0 11 12 13 11 91 6 1 5 5 7 83 0 7 7 14 67 0 14 14 9 84 0 9 9 13 67 0 10 10 16 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
34 33 146 144 137 135 129 127 120 118 107 105 103 97 88 86 77 70 66 64 63 61 47 45 41 38 33 83 34 83 28 26 18 16 16 15
CALL[ ]	/* CallFunction */";
};
width = 583;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(158,610,o),
(159,661,o),
(160,698,cs),
(161,735,o),
(161,762,o),
(162,779,cs),
(163,800,o),
(163,812,o),
(163,815,cs),
(163,820,o),
(162,824,o),
(161,825,cs),
(159,826,o),
(157,827,o),
(155,827,cs),
(150,827,o),
(123,823,o),
(74,823,cs),
(63,823,o),
(48,815,o),
(48,802,cs),
(48,782,o),
(63,782,o),
(74,782,cs),
(77,782,o),
(82,782,o),
(88,783,cs),
(94,783,o),
(98,783,o),
(100,783,cs),
(109,783,o),
(109,772,o),
(109,769,cs),
(109,730,o),
(107,732,o),
(107,683,cs),
(106,650,o),
(104,625,o),
(104,608,cs),
(103,594,o),
(102,576,o),
(102,561,cs),
(102,544,o),
(95,542,o),
(74,542,cs),
(70,542,o),
(49,538,o),
(49,522,cs),
(49,502,o),
(69,500,o),
(79,500,cs),
(181,500,ls),
(190,500,o),
(205,502,o),
(205,522,cs),
(205,543,o),
(185,544,o),
(177,544,cs),
(157,544,l),
(157,544,l)
);
},
{
closed = 1;
nodes = (
(34,16,o),
(33,13,o),
(33,9,cs),
(33,-6,o),
(49,-19,o),
(61,-19,cs),
(80,-19,o),
(96,-10,o),
(103,5,cs),
(508,768,ls),
(513,777,o),
(522,796,o),
(522,807,cs),
(522,815,o),
(521,831,o),
(497,831,cs),
(465,831,o),
(453,815,o),
(433,774,cs),
(394,694,o),
(386,677,o),
(359,621,cs),
(340,582,o),
(308,525,o),
(253,423,cs),
(221,364,o),
(202,331,o),
(190,311,cs),
(180,294,o),
(170,278,o),
(164,267,cs),
(123,194,o),
(109,166,o),
(35,18,cs)
);
},
{
closed = 1;
nodes = (
(488,49,o),
(487,47,o),
(487,47,c),
(486,46,l),
(417,49,l),
(457,89,o),
(530,176,o),
(530,254,cs),
(530,299,o),
(501,336,o),
(436,336,cs),
(364,336,o),
(329,276,o),
(329,250,cs),
(329,231,o),
(333,216,o),
(364,216,cs),
(375,216,o),
(390,223,o),
(390,244,cs),
(390,249,o),
(388,253,o),
(385,255,cs),
(381,256,o),
(379,259,o),
(379,262,cs),
(379,265,o),
(384,271,o),
(393,279,cs),
(402,287,o),
(415,291,o),
(432,291,cs),
(459,291,o),
(472,274,o),
(472,255,cs),
(472,178,o),
(392,67,o),
(330,19,cs),
(325,15,o),
(322,12,o),
(322,9,cs),
(322,7,o),
(323,5,o),
(325,2,cs),
(326,-1,o),
(331,-2,o),
(338,-2,cs),
(348,-2,o),
(355,-1,o),
(358,2,cs),
(361,4,o),
(364,6,o),
(365,7,c),
(382,6,o),
(399,6,o),
(416,5,cs),
(445,4,o),
(479,3,o),
(504,3,cs),
(507,3,o),
(510,4,o),
(512,7,cs),
(513,9,o),
(515,11,o),
(516,12,c),
(521,21,o),
(526,29,o),
(531,38,cs),
(536,47,o),
(539,54,o),
(539,59,cs),
(539,66,o),
(534,73,o),
(521,73,cs),
(512,73,o),
(499,68,o),
(491,53,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
151 1 14 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 12 11 8 11 12 8 104 0 8 14 11 8 14 102 2 15 2 0 0 1 13 0 1 92 0 13 0 11 12 13 11 91 0 3 3 4 83 6 5 2 4 4 12 67 0 14 14 9 83 10 1 9 9 13 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 12 11 8 11 12 8 104 0 8 14 11 8 14 102 2 15 2 0 0 1 13 0 1 92 0 13 0 11 12 13 11 91 0 6 6 20 67 0 3 3 4 83 5 1 4 4 12 67 0 14 14 9 84 10 1 9 9 13 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 12 11 8 11 12 8 104 0 8 14 11 8 14 102 2 15 2 0 0 1 13 0 1 92 0 13 0 11 12 13 11 91 0 6 6 20 67 0 3 3 4 83 5 1 4 4 12 67 0 14 14 9 84 0 9 9 13 67 0 10 10 16 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 70 values pushed */
0 6 4 6 106 0 12 11 8 11 12 8 104 0 8 14 11 8 14 102 2 15 2 0 0 1 13 0 1 92 0 13 0 11 12 13 11 91 0 3 3 4 83 5 1 4 4 14 67 0 14 14 9 84 0 9 9 13 67 0 10 10 16 67 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
2 1 150 149 142 140 134 132 125 123 112 110 108 102 95 93 87 85 77 75 49 45 44 42 38 33 19 17 11 8 1 56 2 56 16 26
CALL[ ]	/* CallFunction */";
};
width = 575;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(66,-19,o),
(69.667,-13.667,o),
(79,5,cs),
(484,768,ls),
(489.333,778.667,o),
(498,796.333,o),
(498,807,cs),
(498,815,o),
(495,821,o),
(483,821,cs),
(458.98,821,o),
(440.908,779.723,o),
(439,774,c),
(401.793,697.815,o),
(376.652,645.101,o),
(364,620.5,cs),
(344.856,583.276,o),
(312.957,522.212,o),
(259,423,cs),
(230.024,369.878,o),
(209.35,332.307,o),
(197.5,310,cs),
(188.767,293.562,o),
(178.671,277.22,o),
(172.5,266,cs),
(152.792,230.167,o),
(107.75,142.229,o),
(41,18,c),
(38.333,11.333,o),
(36,1,o),
(36,-7,cs),
(36,-15,o),
(40.667,-19,o),
(50,-19,cs)
);
},
{
closed = 1;
nodes = (
(353.333,0,o),
(358.167,0.667,o),
(360.5,2,cs),
(362.833,3.333,o),
(364.667,4.667,o),
(366,6,c),
(382.667,5.333,o),
(399,4.667,o),
(415,4,cs),
(441.667,2.667,o),
(473.667,2,o),
(495,2,cs),
(498.333,2,o),
(500.833,3.167,o),
(502.5,5.5,cs),
(504.167,7.833,o),
(505.667,9.667,o),
(507,11,c),
(527.174,48.827,o),
(529,47.266,o),
(529,53,cs),
(529,54.333,o),
(528.333,56.167,o),
(527,58.5,cs),
(525.667,60.833,o),
(522.333,62,o),
(517,62,cs),
(507.667,62,o),
(504.667,56,o),
(502,52,cs),
(494.667,40,o),
(489.333,32.5,o),
(486,29.5,cs),
(482.667,26.5,o),
(480.333,25,o),
(479,25,cs),
(390,28,l),
(438.894,71.461,o),
(521,171.042,o),
(521,253,cs),
(521,298.333,o),
(493,335,o),
(441,335,cs),
(378.313,335,o),
(340,276.846,o),
(340,249,cs),
(340,229.667,o),
(347,220,o),
(361,220,cs),
(362.333,220,o),
(366,221.167,o),
(372,223.5,cs),
(378,225.833,o),
(381,232.333,o),
(381,243,cs),
(381,248.333,o),
(379.167,251.833,o),
(375.5,253.5,cs),
(371.833,255.167,o),
(370,257.667,o),
(370,261,cs),
(370,273.756,o),
(391.84,307,o),
(437,307,cs),
(471.667,307,o),
(483,284.667,o),
(483,254,cs),
(483,176.869,o),
(403.485,65.608,o),
(341,18,cs),
(335.667,14,o),
(333,10.667,o),
(333,8,cs),
(333,2.667,o),
(337.333,0,o),
(346,0,cs)
);
},
{
closed = 1;
nodes = (
(161,500,ls),
(166.333,500,o),
(175,501.333,o),
(175,512,cs),
(175,524,o),
(163.667,524,o),
(157,524,cs),
(127,524,l),
(128.333,595.333,o),
(129.333,650.5,o),
(130,689.5,cs),
(130.667,728.5,o),
(131.333,757.333,o),
(132,776,cs),
(132.667,798,o),
(133,811,o),
(133,815,cs),
(133,820.333,o),
(132.167,823.667,o),
(130.5,825,cs),
(128.833,826.333,o),
(127,827,o),
(125,827,cs),
(121.447,827,o),
(97.789,823,o),
(54,823,cs),
(47.333,823,o),
(38,818.667,o),
(38,812,cs),
(38,801.333,o),
(47.333,802,o),
(54,802,cs),
(58.667,802,o),
(65.167,802.167,o),
(73.5,802.5,cs),
(81.833,802.833,o),
(87.333,803,o),
(90,803,cs),
(99.333,803,o),
(99,794.333,o),
(99,789,cs),
(99,776.803,o),
(99.021,761.443,o),
(98.5,750.5,cs),
(97.833,736.5,o),
(97,717.667,o),
(97,683,cs),
(94.841,611.74,o),
(92,573.554,o),
(92,541,cs),
(92,522.629,o),
(65.228,522,o),
(54,522,cs),
(50,522,o),
(39,520,o),
(39,512,cs),
(39,500,o),
(52.333,500,o),
(59,500,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 12 11 8 11 12 8 104 0 8 14 11 8 14 102 4 15 2 2 0 3 13 2 3 91 0 13 0 11 12 13 11 91 0 5 5 0 83 7 6 2 0 0 12 67 0 14 14 9 84 10 1 9 9 13 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
0 12 11 8 11 12 8 104 0 8 14 11 8 14 102 4 15 2 2 0 3 13 2 3 91 0 13 0 11 12 13 11 91 6 1 0 0 14 67 0 5 5 7 83 0 7 7 14 67 0 14 14 9 84 10 1 9 9 13 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
37 36 152 150 143 141 136 134 125 123 113 111 109 103 94 92 82 78 77 75 71 66 50 48 44 41 36 89 37 89 32 30 22 20 16 15
CALL[ ]	/* CallFunction */";
};
width = 563;
}
);
note = onehalf;
unicode = 189;
},
{
glyphname = onethird;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(179.333,619.333,o),
(180.333,668.333,o),
(181,703,cs),
(181.667,737.667,o),
(182.333,763.333,o),
(183,780,cs),
(183.667,799.333,o),
(184,811,o),
(184,815,cs),
(184,820.333,o),
(183.167,823.667,o),
(181.5,825,cs),
(179.833,826.333,o),
(178,827,o),
(176,827,cs),
(140.748,827,o),
(96.468,823,o),
(88,823,cs),
(73.333,823,o),
(55,813.333,o),
(55,796,cs),
(55,772,o),
(70.667,770,o),
(88,770,cs),
(90,770,o),
(93.167,770.167,o),
(97.5,770.5,cs),
(101.833,770.833,o),
(105,771,o),
(107,771,cs),
(116.333,771,o),
(116,759.667,o),
(116,757,cs),
(116,722.936,o),
(114,726.817,o),
(114,683,cs),
(111.816,626.222,o),
(109,593.045,o),
(109,573,cs),
(107.667,557,o),
(106.667,554,o),
(88,554,cs),
(74.667,554,o),
(56,549.333,o),
(56,528,cs),
(56,504,o),
(78.333,500,o),
(93,500,cs),
(195,500,ls),
(205.667,500,o),
(226,502.667,o),
(226,528,cs),
(226,549.922,o),
(198.57,556,o),
(191,556,cs),
(178,556,l),
(178,556,l)
);
},
{
closed = 1;
nodes = (
(27.667,16.667,o),
(27,15.333,o),
(27,14,cs),
(27,12.667,o),
(27,11.667,o),
(27,11,cs),
(27,-9,o),
(53.667,-19,o),
(67,-19,cs),
(88.333,-19,o),
(111.333,-7,o),
(118,5,cs),
(523,768,l),
(528.333,776,o),
(537,796.333,o),
(537,807,cs),
(537,817.667,o),
(531.667,837,o),
(505,837,cs),
(471.725,837,o),
(457.328,832.655,o),
(428,774,cs),
(401.421,720.843,o),
(373.038,663.195,o),
(345.5,606.5,cs),
(326.633,567.657,o),
(297.442,515.186,o),
(247,423,cs),
(196.524,328.778,o),
(123.7,197.536,o),
(29,18,c)
);
},
{
closed = 1;
nodes = (
(467.915,188.429,o),
(521,211.238,o),
(521,268,cs),
(521,324.265,o),
(471.051,332,o),
(435,332,cs),
(367.847,332,o),
(325,275.461,o),
(325,245,cs),
(325,233,o),
(334,225,o),
(346,225,cs),
(371.333,225,o),
(381,239.667,o),
(385,249,cs),
(393,267.667,o),
(407.667,290,o),
(429,290,cs),
(439.667,290,o),
(449,283.333,o),
(449,270,cs),
(449,224.545,o),
(393.985,198.418,o),
(357,172,cs),
(355.667,170.667,o),
(353,168.167,o),
(349,164.5,cs),
(345,160.833,o),
(343,156.333,o),
(343,151,cs),
(343,140.333,o),
(344.5,133,o),
(347.5,129,cs),
(350.5,125,o),
(353.667,123,o),
(357,123,cs),
(362.333,123,o),
(368.833,124.5,o),
(376.5,127.5,cs),
(384.167,130.5,o),
(393.667,132,o),
(405,132,cs),
(431.667,132,o),
(453,123.667,o),
(453,101,cs),
(453,59.149,o),
(403.129,41,o),
(370,41,cs),
(356.246,41,o),
(365.831,63,o),
(341,63,cs),
(322.333,63,o),
(313,46.333,o),
(313,29,cs),
(313,3.667,o),
(333.333,-9,o),
(374,-9,cs),
(441.728,-9,o),
(525,37.457,o),
(525,105,cs),
(525,149,o),
(490,174,o),
(450,174,cs),
(443.333,174,o),
(439.333,173.333,o),
(434,172,c),
(433,175,l),
(433,175,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
18 1 0 3 157 1 9 16 87 1 13 9 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 16 15 9 15 16 9 104 0 9 13 15 9 13 102 14 1 13 11 15 13 11 102 0 12 11 8 11 12 96 2 18 2 0 0 1 17 0 1 92 0 17 0 15 16 17 15 91 4 1 3 3 5 83 7 6 2 5 5 12 67 0 11 11 8 83 10 1 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 16 15 9 15 16 9 104 0 9 13 15 9 13 102 14 1 13 11 15 13 11 102 0 12 11 8 11 12 96 2 18 2 0 0 1 17 0 1 92 0 17 0 15 16 17 15 91 0 7 7 20 67 4 1 3 3 5 83 6 1 5 5 12 67 0 11 11 8 83 10 1 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 81 values pushed */
0 16 15 9 15 16 9 104 0 9 13 15 9 13 102 14 1 13 11 15 13 11 102 0 12 11 10 11 12 96 2 18 2 0 0 1 17 0 1 92 0 17 0 15 16 17 15 91 0 7 7 20 67 4 1 3 3 5 83 6 1 5 5 12 67 0 11 11 10 83 0 10 10 24 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 87 values pushed */
0 16 15 9 15 16 9 104 0 9 13 15 9 13 102 0 13 14 15 13 14 102 0 14 11 15 14 11 102 0 12 11 10 11 12 96 2 18 2 0 0 1 17 0 1 92 0 17 0 15 16 17 15 91 0 7 7 20 67 4 1 3 3 5 83 6 1 5 5 12 67 0 11 11 10 83 0 10 10 24 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 87 values pushed */
0 7 5 7 106 0 16 15 9 15 16 9 104 0 9 13 15 9 13 102 0 13 14 15 13 14 102 0 14 11 15 14 11 102 0 12 11 10 11 12 96 2 18 2 0 0 1 17 0 1 92 0 17 0 15 16 17 15 91 4 1 3 3 5 83 6 1 5 5 14 67 0 11 11 10 83 0 10 10 24 67 0 8 8 21 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
1 0 148 146 140 138 134 132 120 118 117 115 109 107 104 102 99 97 91 89 82 80 72 70 46 43 42 39 35 33 32 30 16 14 10 7 0 53 1 53 19 15
CALL[ ]	/* CallFunction */";
};
width = 570;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(158,610,o),
(159,661,o),
(160,698,cs),
(161,735,o),
(161,762,o),
(162,779,cs),
(163,800,o),
(163,812,o),
(163,815,cs),
(163,820,o),
(162,824,o),
(161,825,cs),
(159,826,o),
(157,827,o),
(155,827,cs),
(150,827,o),
(123,823,o),
(74,823,cs),
(63,823,o),
(48,815,o),
(48,802,cs),
(48,782,o),
(63,782,o),
(74,782,cs),
(77,782,o),
(82,782,o),
(88,783,cs),
(94,783,o),
(98,783,o),
(100,783,cs),
(109,783,o),
(109,772,o),
(109,769,cs),
(109,730,o),
(107,732,o),
(107,683,cs),
(106,650,o),
(104,625,o),
(104,608,cs),
(103,594,o),
(102,576,o),
(102,561,cs),
(102,544,o),
(95,542,o),
(74,542,cs),
(70,542,o),
(49,538,o),
(49,522,cs),
(49,502,o),
(69,500,o),
(79,500,cs),
(181,500,ls),
(190,500,o),
(205,502,o),
(205,522,cs),
(205,543,o),
(185,544,o),
(177,544,cs),
(157,544,l),
(157,544,l)
);
},
{
closed = 1;
nodes = (
(33,16,o),
(32,13,o),
(32,9,cs),
(32,-6,o),
(48,-19,o),
(60,-19,cs),
(79,-19,o),
(95,-10,o),
(102,5,cs),
(507,768,ls),
(512,777,o),
(521,796,o),
(521,807,cs),
(521,815,o),
(520,831,o),
(496,831,cs),
(464,831,o),
(452,815,o),
(432,774,cs),
(393,694,o),
(385,677,o),
(358,621,cs),
(339,582,o),
(307,525,o),
(252,423,cs),
(220,364,o),
(201,331,o),
(189,311,cs),
(179,294,o),
(169,278,o),
(163,267,cs),
(122,194,o),
(108,166,o),
(34,18,cs)
);
},
{
closed = 1;
nodes = (
(363,172,o),
(360,169,o),
(356,166,cs),
(352,162,o),
(350,157,o),
(350,152,cs),
(350,142,o),
(352,136,o),
(356,134,cs),
(360,131,o),
(363,130,o),
(364,130,cs),
(367,130,o),
(373,132,o),
(382,135,cs),
(391,138,o),
(401,139,o),
(412,139,cs),
(439,139,o),
(460,129,o),
(460,102,cs),
(460,54,o),
(409,33,o),
(377,33,cs),
(358,33,o),
(362,55,o),
(341,55,cs),
(326,55,o),
(320,39,o),
(320,24,cs),
(320,3,o),
(346,-8,o),
(377,-8,cs),
(441,-8,o),
(518,43,o),
(518,106,cs),
(518,150,o),
(478,174,o),
(441,174,cs),
(438,174,o),
(436,174,o),
(434,174,cs),
(431,173,o),
(429,173,o),
(427,173,cs),
(424,172,o),
(422,172,o),
(421,172,c),
(450,185,o),
(514,217,o),
(514,281,cs),
(514,328,o),
(457,333,o),
(433,333,cs),
(368,333,o),
(332,273,o),
(332,246,cs),
(332,235,o),
(342,228,o),
(349,228,cs),
(368,228,o),
(375,241,o),
(378,250,c),
(390,279,o),
(409,297,o),
(426,297,cs),
(446,297,o),
(456,291,o),
(456,278,cs),
(456,222,o),
(401,200,o),
(364,173,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 9 8 11 8 9 11 104 13 12 2 11 17 8 11 17 102 18 1 17 15 8 17 15 102 0 15 16 8 15 16 102 2 19 2 0 0 1 10 0 1 92 0 10 0 8 9 10 8 91 0 3 3 4 83 6 5 2 4 4 12 67 0 16 16 14 83 0 14 14 24 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 9 8 11 8 9 11 104 13 12 2 11 17 8 11 17 102 18 1 17 15 8 17 15 102 0 15 16 8 15 16 102 2 19 2 0 0 1 10 0 1 92 0 10 0 8 9 10 8 91 0 3 3 4 83 6 5 2 4 4 12 67 0 16 16 7 83 14 1 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 9 8 11 8 9 11 104 13 12 2 11 17 8 11 17 102 18 1 17 15 8 17 15 102 0 15 16 8 15 16 102 2 19 2 0 0 1 10 0 1 92 0 10 0 8 9 10 8 91 0 3 3 4 83 6 5 2 4 4 12 67 0 16 16 14 83 0 14 14 24 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 84 values pushed */
0 9 8 11 8 9 11 104 13 12 2 11 17 8 11 17 102 0 17 18 8 17 18 102 0 18 15 8 18 15 102 0 15 16 8 15 16 102 2 19 2 0 0 1 10 0 1 92 0 10 0 8 9 10 8 91 0 3 3 4 83 6 5 2 4 4 12 67 0 16 16 14 83 0 14 14 24 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 88 values pushed */
0 9 8 11 8 9 11 104 13 12 2 11 17 8 11 17 102 0 17 18 8 17 18 102 0 18 15 8 18 15 102 0 15 16 8 15 16 102 2 19 2 0 0 1 10 0 1 92 0 10 0 8 9 10 8 91 0 6 6 20 67 0 3 3 4 83 5 1 4 4 12 67 0 16 16 14 83 0 14 14 24 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 88 values pushed */
0 6 4 6 106 0 9 8 11 8 9 11 104 13 12 2 11 17 8 11 17 102 0 17 18 8 17 18 102 0 18 15 8 18 15 102 0 15 16 8 15 16 102 2 19 2 0 0 1 10 0 1 92 0 10 0 8 9 10 8 91 0 3 3 4 83 5 1 4 4 14 67 0 16 16 14 83 0 14 14 24 67 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 44 values pushed */
2 1 158 156 155 153 147 145 142 140 136 134 128 126 125 124 123 122 113 111 105 103 99 97 87 85 77 75 49 45 44 42 38 33 19 17 11 8 1 56 2 56 20 26
CALL[ ]	/* CallFunction */";
};
width = 562;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(66,-19,o),
(69.667,-13.667,o),
(79,5,cs),
(484,768,ls),
(489.333,778.667,o),
(498,796.333,o),
(498,807,cs),
(498,815,o),
(495,821,o),
(483,821,cs),
(458.98,821,o),
(440.908,779.723,o),
(439,774,c),
(401.793,697.815,o),
(376.652,645.101,o),
(364,620.5,cs),
(344.856,583.276,o),
(312.957,522.212,o),
(259,423,cs),
(230.024,369.878,o),
(209.35,332.307,o),
(197.5,310,cs),
(188.767,293.562,o),
(178.671,277.22,o),
(172.5,266,cs),
(152.792,230.167,o),
(107.75,142.229,o),
(41,18,c),
(38.333,11.333,o),
(36,1,o),
(36,-7,cs),
(36,-15,o),
(40.667,-19,o),
(50,-19,cs)
);
},
{
closed = 1;
nodes = (
(442.596,-9,o),
(508,52.717,o),
(508,105,cs),
(508,148.851,o),
(459.722,171,o),
(428,171,cs),
(425.333,171,o),
(422.833,170.833,o),
(420.5,170.5,cs),
(418.167,170.167,o),
(416,170,o),
(414,170,cs),
(411.333,169.333,o),
(409.333,169,o),
(408,169,c),
(418.667,179.667,o),
(504,213.038,o),
(504,280,cs),
(504,325.901,o),
(463.616,332,o),
(443,332,cs),
(378.145,332,o),
(342,272.35,o),
(342,245,cs),
(342,235,o),
(345.667,230,o),
(353,230,cs),
(361,230,o),
(365.333,239.667,o),
(368,249,cs),
(380,283.667,o),
(400,306,o),
(436,306,cs),
(460,306,o),
(466,295.667,o),
(466,277,cs),
(466,220.702,o),
(411.112,198.509,o),
(374,172,cs),
(372.667,170.667,o),
(370,168.167,o),
(366,164.5,cs),
(362,160.833,o),
(360,156.333,o),
(360,151,cs),
(360,140.333,o),
(371.333,139,o),
(374,139,cs),
(377.333,139,o),
(383.333,140.5,o),
(392,143.5,cs),
(400.667,146.5,o),
(410.667,148,o),
(422,148,cs),
(448.667,148,o),
(470,135.667,o),
(470,101,cs),
(470,47.006,o),
(418.268,17,o),
(387,17,cs),
(360.33,17,o),
(356.582,39,o),
(342,39,cs),
(331.333,39,o),
(330,29.667,o),
(330,23,cs),
(330,0.333,o),
(358.333,-9,o),
(381,-9,cs)
);
},
{
closed = 1;
nodes = (
(161,500,ls),
(166.333,500,o),
(175,501.333,o),
(175,512,cs),
(175,524,o),
(163.667,524,o),
(157,524,cs),
(127,524,l),
(128.333,595.333,o),
(129.333,650.5,o),
(130,689.5,cs),
(130.667,728.5,o),
(131.333,757.333,o),
(132,776,cs),
(132.667,798,o),
(133,811,o),
(133,815,cs),
(133,820.333,o),
(132.167,823.667,o),
(130.5,825,cs),
(128.833,826.333,o),
(127,827,o),
(125,827,cs),
(121.447,827,o),
(97.789,823,o),
(54,823,cs),
(47.333,823,o),
(38,818.667,o),
(38,812,cs),
(38,801.333,o),
(47.333,802,o),
(54,802,cs),
(58.667,802,o),
(65.167,802.167,o),
(73.5,802.5,cs),
(81.833,802.833,o),
(87.333,803,o),
(90,803,cs),
(99.333,803,o),
(99,794.333,o),
(99,789,cs),
(99,776.803,o),
(99.021,761.443,o),
(98.5,750.5,cs),
(97.833,736.5,o),
(97,717.667,o),
(97,683,cs),
(94.841,611.74,o),
(92,573.554,o),
(92,541,cs),
(92,522.629,o),
(65.228,522,o),
(54,522,cs),
(50,522,o),
(39,520,o),
(39,512,cs),
(39,500,o),
(52.333,500,o),
(59,500,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 79 values pushed */
0 9 8 11 8 9 11 104 0 18 17 15 17 18 15 104 0 15 16 17 15 16 102 4 19 2 2 0 3 10 2 3 91 0 10 0 8 9 10 8 91 13 12 2 11 0 17 18 11 17 91 0 5 5 0 83 7 6 2 0 0 12 67 0 16 16 14 83 0 14 14 24 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 83 values pushed */
0 9 8 11 8 9 11 104 0 18 17 15 17 18 15 104 0 15 16 17 15 16 102 4 19 2 2 0 3 10 2 3 91 0 10 0 8 9 10 8 91 13 12 2 11 0 17 18 11 17 91 6 1 0 0 14 67 0 5 5 7 83 0 7 7 14 67 0 16 16 14 83 0 14 14 24 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 44 values pushed */
37 36 159 157 156 154 148 146 143 141 137 135 127 125 124 123 122 121 112 110 105 103 99 97 82 78 77 75 71 66 50 48 44 41 36 89 37 89 32 30 22 20 20 15
CALL[ ]	/* CallFunction */";
};
width = 550;
}
);
note = onethird;
unicode = 8531;
},
{
glyphname = twothirds;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(29.667,16.667,o),
(29,15.333,o),
(29,14,cs),
(29,12.667,o),
(29,11.667,o),
(29,11,cs),
(29,-9,o),
(55.667,-19,o),
(69,-19,cs),
(90.333,-19,o),
(113.333,-7,o),
(120,5,cs),
(525,768,l),
(530.333,776,o),
(539,796.333,o),
(539,807,cs),
(539,817.667,o),
(533.667,837,o),
(507,837,cs),
(473.725,837,o),
(459.328,832.655,o),
(430,774,cs),
(403.421,720.843,o),
(375.038,663.195,o),
(347.5,606.5,cs),
(328.633,567.657,o),
(299.442,515.186,o),
(249,423,cs),
(198.524,328.778,o),
(125.7,197.536,o),
(31,18,c)
);
},
{
closed = 1;
nodes = (
(208.333,559.333,o),
(204,559,o),
(196,559,cs),
(156,561,l),
(190.661,601.438,o),
(256,680.65,o),
(256,754,cs),
(256,799.333,o),
(226.667,836,o),
(152,836,cs),
(76.19,836,o),
(41,779.608,o),
(41,750,cs),
(41,731.333,o),
(49,713,o),
(81,713,cs),
(98.333,713,o),
(116,717.667,o),
(116,739,cs),
(116,746.333,o),
(114.167,750.667,o),
(110.5,752,cs),
(106.833,753.333,o),
(105,755.667,o),
(105,759,cs),
(105,765.667,o),
(125.333,781,o),
(148,781,cs),
(168,781,o),
(184,769.667,o),
(184,755,cs),
(184,677.869,o),
(104.485,566.608,o),
(42,519,cs),
(36.667,515,o),
(34,511.667,o),
(34,509,cs),
(34,507,o),
(35,504.333,o),
(37,501,cs),
(39,497.667,o),
(44,496,o),
(52,496,cs),
(64.667,496,o),
(72.833,497.5,o),
(76.5,500.5,cs),
(80.167,503.5,o),
(82.667,505.667,o),
(84,507,c),
(102,506.333,o),
(119.667,505.667,o),
(137,505,cs),
(167.667,503.667,o),
(203.333,503,o),
(230,503,cs),
(236.667,503,o),
(240.667,509.333,o),
(242,512,c),
(240.268,510.268,o),
(266,548.332,o),
(266,562,cs),
(266,570,o),
(258.667,579,o),
(244,579,cs),
(230.667,579,o),
(221.833,576.167,o),
(217.5,570.5,cs),
(213.167,564.833,o),
(210.333,561.333,o),
(209,560,cs)
);
},
{
closed = 1;
nodes = (
(471.915,188.429,o),
(525,211.238,o),
(525,268,cs),
(525,324.265,o),
(475.051,332,o),
(439,332,cs),
(371.847,332,o),
(329,275.461,o),
(329,245,cs),
(329,233,o),
(338,225,o),
(350,225,cs),
(375.333,225,o),
(385,239.667,o),
(389,249,cs),
(397,267.667,o),
(411.667,290,o),
(433,290,cs),
(443.667,290,o),
(453,283.333,o),
(453,270,cs),
(453,224.545,o),
(397.985,198.418,o),
(361,172,cs),
(359.667,170.667,o),
(357,168.167,o),
(353,164.5,cs),
(349,160.833,o),
(347,156.333,o),
(347,151,cs),
(347,140.333,o),
(348.5,133,o),
(351.5,129,cs),
(354.5,125,o),
(357.667,123,o),
(361,123,cs),
(366.333,123,o),
(372.833,124.5,o),
(380.5,127.5,cs),
(388.167,130.5,o),
(397.667,132,o),
(409,132,cs),
(435.667,132,o),
(457,123.667,o),
(457,101,cs),
(457,59.149,o),
(407.129,41,o),
(374,41,cs),
(360.246,41,o),
(369.831,63,o),
(345,63,cs),
(326.333,63,o),
(317,46.333,o),
(317,29,cs),
(317,3.667,o),
(337.333,-9,o),
(378,-9,cs),
(445.728,-9,o),
(529,37.457,o),
(529,105,cs),
(529,149,o),
(494,174,o),
(454,174,cs),
(447.333,174,o),
(443.333,173.333,o),
(438,172,c),
(437,175,l),
(437,175,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
44 1 3 8 166 1 9 16 96 1 13 9 3 66 33 1 8 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 84 values pushed */
0 6 5 2 5 6 2 104 0 2 8 8 2 94 0 16 15 9 15 16 9 104 0 9 13 15 9 13 102 14 1 13 11 15 13 11 102 0 12 11 1 11 12 96 0 8 4 1 3 17 8 3 92 0 17 0 15 16 17 15 91 0 5 5 0 83 7 1 0 0 20 67 0 11 11 1 83 10 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 88 values pushed */
0 6 5 2 5 6 2 104 0 2 8 8 2 94 0 16 15 9 15 16 9 104 0 9 13 15 9 13 102 14 1 13 11 15 13 11 102 0 12 11 10 11 12 96 0 8 4 1 3 17 8 3 92 0 17 0 15 16 17 15 91 0 5 5 0 83 7 1 0 0 20 67 0 11 11 10 83 0 10 10 24 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 101 values pushed */
0 6 5 2 5 6 2 104 0 2 8 8 2 94 0 4 3 17 3 4 17 104 0 16 15 9 15 16 9 104 0 9 13 15 9 13 102 0 13 14 15 13 14 102 0 14 11 15 14 11 102 0 12 11 10 11 12 96 0 8 0 3 4 8 3 92 0 17 0 15 16 17 15 91 0 5 5 0 83 7 1 0 0 20 67 0 11 11 10 83 0 10 10 24 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 99 values pushed */
0 6 5 2 5 6 2 104 0 2 8 8 2 94 0 4 3 17 3 4 17 104 0 16 15 9 15 16 9 104 0 9 13 15 9 13 102 0 13 14 15 13 14 102 0 14 11 15 14 11 102 0 12 11 10 11 12 96 7 1 0 0 5 6 0 5 91 0 8 0 3 4 8 3 92 0 17 0 15 16 17 15 91 0 11 11 10 83 0 10 10 24 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
157 155 149 147 143 141 129 127 126 124 118 116 113 111 108 106 100 98 95 93 86 84 78 76 69 67 56 54 52 46 37 35 28 26 18 16 18 15
CALL[ ]	/* CallFunction */";
};
width = 571;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(200,549,o),
(199,547,o),
(199,547,c),
(198,546,l),
(129,549,l),
(169,589,o),
(242,676,o),
(242,754,cs),
(242,799,o),
(213,836,o),
(148,836,cs),
(76,836,o),
(41,776,o),
(41,750,cs),
(41,731,o),
(45,716,o),
(76,716,cs),
(87,716,o),
(102,723,o),
(102,744,cs),
(102,749,o),
(100,753,o),
(97,755,cs),
(93,756,o),
(91,759,o),
(91,762,cs),
(91,765,o),
(96,771,o),
(105,779,cs),
(114,787,o),
(127,791,o),
(144,791,cs),
(171,791,o),
(184,774,o),
(184,755,cs),
(184,678,o),
(104,567,o),
(42,519,cs),
(37,515,o),
(34,512,o),
(34,509,cs),
(34,507,o),
(35,505,o),
(37,502,cs),
(38,499,o),
(43,498,o),
(50,498,cs),
(60,498,o),
(67,499,o),
(70,502,cs),
(73,504,o),
(76,506,o),
(77,507,c),
(94,506,o),
(111,506,o),
(128,505,cs),
(157,504,o),
(191,503,o),
(216,503,cs),
(219,503,o),
(222,504,o),
(224,507,cs),
(225,509,o),
(227,511,o),
(228,512,c),
(233,521,o),
(238,529,o),
(243,538,cs),
(248,547,o),
(251,554,o),
(251,559,cs),
(251,566,o),
(246,573,o),
(233,573,cs),
(224,573,o),
(211,568,o),
(203,553,cs)
);
},
{
closed = 1;
nodes = (
(41,16,o),
(40,13,o),
(40,9,cs),
(40,-6,o),
(56,-19,o),
(68,-19,cs),
(87,-19,o),
(103,-10,o),
(110,5,cs),
(515,768,ls),
(520,777,o),
(529,796,o),
(529,807,cs),
(529,815,o),
(528,831,o),
(504,831,cs),
(472,831,o),
(460,815,o),
(440,774,cs),
(401,694,o),
(393,677,o),
(366,621,cs),
(347,582,o),
(315,525,o),
(260,423,cs),
(228,364,o),
(209,331,o),
(197,311,cs),
(187,294,o),
(177,278,o),
(171,267,cs),
(130,194,o),
(116,166,o),
(42,18,cs)
);
},
{
closed = 1;
nodes = (
(373,172,o),
(370,169,o),
(366,166,cs),
(362,162,o),
(360,157,o),
(360,152,cs),
(360,142,o),
(362,136,o),
(366,134,cs),
(370,131,o),
(373,130,o),
(374,130,cs),
(377,130,o),
(383,132,o),
(392,135,cs),
(401,138,o),
(411,139,o),
(422,139,cs),
(449,139,o),
(470,129,o),
(470,102,cs),
(470,54,o),
(419,33,o),
(387,33,cs),
(368,33,o),
(372,55,o),
(351,55,cs),
(336,55,o),
(330,39,o),
(330,24,cs),
(330,3,o),
(356,-8,o),
(387,-8,cs),
(451,-8,o),
(528,43,o),
(528,106,cs),
(528,150,o),
(488,174,o),
(451,174,cs),
(448,174,o),
(446,174,o),
(444,174,cs),
(441,173,o),
(439,173,o),
(437,173,cs),
(434,172,o),
(432,172,o),
(431,172,c),
(460,185,o),
(524,217,o),
(524,281,cs),
(524,328,o),
(467,333,o),
(443,333,cs),
(378,333,o),
(342,273,o),
(342,246,cs),
(342,235,o),
(352,228,o),
(359,228,cs),
(378,228,o),
(385,241,o),
(388,250,c),
(400,279,o),
(419,297,o),
(436,297,cs),
(456,297,o),
(466,291,o),
(466,278,cs),
(466,222,o),
(411,200,o),
(374,173,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
61 1 6 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 91 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 10 9 12 9 10 12 104 14 13 2 12 18 9 12 18 102 19 1 18 16 9 18 16 102 0 16 17 9 16 17 102 0 6 2 1 1 11 6 1 91 0 11 0 9 10 11 9 91 0 3 3 5 83 7 1 5 5 20 67 0 17 17 15 83 0 15 15 24 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 87 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 10 9 12 9 10 12 104 14 13 2 12 18 9 12 18 102 19 1 18 16 9 18 16 102 0 16 17 9 16 17 102 0 6 2 1 1 11 6 1 91 0 11 0 9 10 11 9 91 0 3 3 5 83 7 1 5 5 20 67 0 17 17 8 83 15 1 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 91 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 10 9 12 9 10 12 104 14 13 2 12 18 9 12 18 102 19 1 18 16 9 18 16 102 0 16 17 9 16 17 102 0 6 2 1 1 11 6 1 91 0 11 0 9 10 11 9 91 0 3 3 5 83 7 1 5 5 20 67 0 17 17 15 83 0 15 15 24 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 97 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 10 9 12 9 10 12 104 14 13 2 12 18 9 12 18 102 0 18 19 9 18 19 102 0 19 16 9 19 16 102 0 16 17 9 16 17 102 0 6 2 1 1 11 6 1 91 0 11 0 9 10 11 9 91 0 3 3 5 83 7 1 5 5 20 67 0 17 17 15 83 0 15 15 24 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 104 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 2 1 11 1 2 11 104 0 10 9 12 9 10 12 104 14 13 2 12 18 9 12 18 102 0 18 19 9 18 19 102 0 19 16 9 19 16 102 0 16 17 9 16 17 102 0 6 0 1 2 6 1 91 0 11 0 9 10 11 9 91 0 3 3 5 83 7 1 5 5 20 67 0 17 17 15 83 0 15 15 24 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 109 values pushed */
0 7 5 3 5 7 3 104 0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 2 1 11 1 2 11 104 0 10 9 12 9 10 12 104 14 13 2 12 18 9 12 18 102 0 18 19 9 18 19 102 0 19 16 9 19 16 102 0 16 17 9 16 17 102 0 5 0 3 4 5 3 91 0 6 0 1 2 6 1 91 0 11 0 9 10 11 9 91 0 17 17 15 83 0 15 15 24 67 0 8 8 21 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
164 162 161 159 153 151 148 146 142 140 134 132 131 130 129 128 119 117 111 109 105 103 93 91 83 81 23 38 39 43 34 103 35 20 33
CALL[ ]	/* CallFunction */";
};
width = 570;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(82,-19,o),
(85.667,-13.667,o),
(95,5,cs),
(500,768,ls),
(505.333,778.667,o),
(514,796.333,o),
(514,807,cs),
(514,815,o),
(511,821,o),
(499,821,cs),
(474.98,821,o),
(456.908,779.723,o),
(455,774,c),
(417.793,697.815,o),
(392.652,645.101,o),
(380,620.5,cs),
(360.856,583.276,o),
(328.957,522.212,o),
(275,423,cs),
(246.024,369.878,o),
(225.35,332.307,o),
(213.5,310,cs),
(204.767,293.562,o),
(194.671,277.22,o),
(188.5,266,cs),
(168.792,230.167,o),
(123.75,142.229,o),
(57,18,c),
(54.333,11.333,o),
(52,1,o),
(52,-7,cs),
(52,-15,o),
(56.667,-19,o),
(66,-19,cs)
);
},
{
closed = 1;
nodes = (
(461.596,-9,o),
(527,52.717,o),
(527,105,cs),
(527,148.851,o),
(478.722,171,o),
(447,171,cs),
(444.333,171,o),
(441.833,170.833,o),
(439.5,170.5,cs),
(437.167,170.167,o),
(435,170,o),
(433,170,cs),
(430.333,169.333,o),
(428.333,169,o),
(427,169,c),
(437.667,179.667,o),
(523,213.038,o),
(523,280,cs),
(523,325.901,o),
(482.616,332,o),
(462,332,cs),
(397.145,332,o),
(361,272.35,o),
(361,245,cs),
(361,235,o),
(364.667,230,o),
(372,230,cs),
(380,230,o),
(384.333,239.667,o),
(387,249,cs),
(399,283.667,o),
(419,306,o),
(455,306,cs),
(479,306,o),
(485,295.667,o),
(485,277,cs),
(485,220.702,o),
(430.112,198.509,o),
(393,172,cs),
(391.667,170.667,o),
(389,168.167,o),
(385,164.5,cs),
(381,160.833,o),
(379,156.333,o),
(379,151,cs),
(379,140.333,o),
(390.333,139,o),
(393,139,cs),
(396.333,139,o),
(402.333,140.5,o),
(411,143.5,cs),
(419.667,146.5,o),
(429.667,148,o),
(441,148,cs),
(467.667,148,o),
(489,135.667,o),
(489,101,cs),
(489,47.006,o),
(437.268,17,o),
(406,17,cs),
(379.33,17,o),
(375.582,39,o),
(361,39,cs),
(350.333,39,o),
(349,29.667,o),
(349,23,cs),
(349,0.333,o),
(377.333,-9,o),
(400,-9,cs)
);
},
{
closed = 1;
nodes = (
(53.333,501,o),
(58.167,501.667,o),
(60.5,503,cs),
(62.833,504.333,o),
(64.667,505.667,o),
(66,507,c),
(82.667,506.333,o),
(99,505.667,o),
(115,505,cs),
(141.667,503.667,o),
(173.667,503,o),
(195,503,cs),
(198.333,503,o),
(200.833,504.167,o),
(202.5,506.5,cs),
(204.167,508.833,o),
(205.667,510.667,o),
(207,512,c),
(227.174,549.827,o),
(229,548.266,o),
(229,554,cs),
(229,555.333,o),
(228.333,557.167,o),
(227,559.5,cs),
(225.667,561.833,o),
(222.333,563,o),
(217,563,cs),
(207.667,563,o),
(204.667,557,o),
(202,553,cs),
(194.667,541,o),
(189.333,533.5,o),
(186,530.5,cs),
(182.667,527.5,o),
(180.333,526,o),
(179,526,cs),
(90,529,l),
(138.894,572.461,o),
(221,672.042,o),
(221,754,cs),
(221,799.333,o),
(193,836,o),
(141,836,cs),
(78.313,836,o),
(40,777.846,o),
(40,750,cs),
(40,730.667,o),
(47,721,o),
(61,721,cs),
(62.333,721,o),
(66,722.167,o),
(72,724.5,cs),
(78,726.833,o),
(81,733.333,o),
(81,744,cs),
(81,749.333,o),
(79.167,752.833,o),
(75.5,754.5,cs),
(71.833,756.167,o),
(70,758.667,o),
(70,762,cs),
(70,774.756,o),
(91.84,808,o),
(137,808,cs),
(171.667,808,o),
(183,785.667,o),
(183,755,cs),
(183,677.869,o),
(103.485,566.608,o),
(41,519,cs),
(35.667,515,o),
(33,511.667,o),
(33,509,cs),
(33,503.667,o),
(37.333,501,o),
(46,501,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 96 values pushed */
0 6 5 2 5 6 2 104 0 2 8 5 2 8 102 0 10 9 12 9 10 12 104 0 19 18 16 18 19 16 104 0 16 17 18 16 17 102 0 8 4 1 3 11 8 3 91 0 11 0 9 10 11 9 91 14 13 2 12 0 18 19 12 18 91 0 0 0 12 67 0 5 5 7 83 0 7 7 20 67 0 17 17 15 83 0 15 15 24 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 94 values pushed */
0 6 5 2 5 6 2 104 0 2 8 5 2 8 102 0 10 9 12 9 10 12 104 0 19 18 16 18 19 16 104 0 16 17 18 16 17 102 0 7 0 5 6 7 5 91 0 8 4 1 3 11 8 3 91 0 11 0 9 10 11 9 91 14 13 2 12 0 18 19 12 18 91 0 0 0 14 67 0 17 17 15 83 0 15 15 24 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
169 167 166 164 158 156 153 151 147 145 137 135 134 133 132 131 122 120 115 113 109 107 98 96 89 87 82 80 71 69 59 57 55 49 40 38 32 30 22 20 20 15
CALL[ ]	/* CallFunction */";
};
width = 569;
}
);
note = twothirds;
unicode = 8532;
},
{
glyphname = onequarter;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(177.333,619.333,o),
(178.333,668.333,o),
(179,703,cs),
(179.667,737.667,o),
(180.333,763.333,o),
(181,780,cs),
(181.667,799.333,o),
(182,811,o),
(182,815,cs),
(182,820.333,o),
(181.167,823.667,o),
(179.5,825,cs),
(177.833,826.333,o),
(176,827,o),
(174,827,cs),
(138.748,827,o),
(94.468,823,o),
(86,823,cs),
(71.333,823,o),
(53,813.333,o),
(53,796,cs),
(53,772,o),
(68.667,770,o),
(86,770,cs),
(88,770,o),
(91.167,770.167,o),
(95.5,770.5,cs),
(99.833,770.833,o),
(103,771,o),
(105,771,cs),
(114.333,771,o),
(114,759.667,o),
(114,757,cs),
(114,722.936,o),
(112,726.817,o),
(112,683,cs),
(109.816,626.222,o),
(107,593.045,o),
(107,573,cs),
(105.667,557,o),
(104.667,554,o),
(86,554,cs),
(72.667,554,o),
(54,549.333,o),
(54,528,cs),
(54,504,o),
(76.333,500,o),
(91,500,cs),
(193,500,ls),
(203.667,500,o),
(224,502.667,o),
(224,528,cs),
(224,549.922,o),
(196.57,556,o),
(189,556,cs),
(176,556,l),
(176,556,l)
);
},
{
closed = 1;
nodes = (
(29.667,16.667,o),
(29,15.333,o),
(29,14,cs),
(29,12.667,o),
(29,11.667,o),
(29,11,cs),
(29,-9,o),
(55.667,-19,o),
(69,-19,cs),
(90.333,-19,o),
(113.333,-7,o),
(120,5,cs),
(525,768,l),
(530.333,776,o),
(539,796.333,o),
(539,807,cs),
(539,817.667,o),
(533.667,837,o),
(507,837,cs),
(473.725,837,o),
(459.328,832.655,o),
(430,774,cs),
(403.421,720.843,o),
(375.038,663.195,o),
(347.5,606.5,cs),
(328.633,567.657,o),
(299.442,515.186,o),
(249,423,cs),
(198.524,328.778,o),
(125.7,197.536,o),
(31,18,c)
);
},
{
closed = 1;
nodes = (
(531.333,66,o),
(537,83.333,o),
(537,94,cs),
(537,112.667,o),
(527.667,122,o),
(509,122,cs),
(504,122,l),
(507.81,167.722,o),
(517,228.453,o),
(517,304,cs),
(517,326.667,o),
(498.667,337,o),
(480,337,cs),
(464,337,o),
(447.667,328.333,o),
(441,319,cs),
(407.242,275.597,o),
(410.071,279.802,o),
(382.5,242.5,cs),
(366.162,220.396,o),
(329.928,172.095,o),
(289,117,cs),
(280.333,105.667,o),
(274.667,97.5,o),
(272,92.5,cs),
(269.333,87.5,o),
(268,82.333,o),
(268,77,cs),
(268,71,o),
(270.667,67.333,o),
(276,66,cs),
(281.333,64.667,o),
(289.667,64,o),
(301,64,cs),
(307,64,o),
(317.167,64,o),
(331.5,64,cs),
(345.833,64,o),
(360.333,64.333,o),
(375,65,cs),
(385.667,65.667,o),
(395.167,66,o),
(403.5,66,cs),
(411.833,66,o),
(421.333,66,o),
(432,66,c),
(431,55,ls),
(431,51,o),
(427.333,48.667,o),
(420,48,c),
(418,47.333,o),
(413.167,46.833,o),
(405.5,46.5,cs),
(397.833,46.167,o),
(390.667,45.667,o),
(384,45,cs),
(370.667,43.667,o),
(356,39.667,o),
(356,25,cs),
(356,5,o),
(374,0,o),
(386,0,cs),
(495,0,ls),
(521.667,0,o),
(531,4.333,o),
(531,23,cs),
(531,44.333,o),
(513.667,48,o),
(503,48,cs),
(499.667,48,o),
(498,48.667,o),
(498,50,cs),
(498,50.667,o),
(498.167,52.5,o),
(498.5,55.5,cs),
(498.833,58.5,o),
(499.333,62,o),
(500,66,c),
(510,66,l),
(510,66,l)
);
},
{
closed = 1;
nodes = (
(367,120,o),
(365,121.333,o),
(365,124,cs),
(365,125.333,o),
(365.667,126.667,o),
(367,128,cs),
(368.333,129.333,o),
(369.333,130.667,o),
(370,132,cs),
(445,240,l),
(436,123,l),
(421.333,121.667,o),
(407.333,120.833,o),
(394,120.5,cs),
(380.667,120.167,o),
(373,120,o),
(371,120,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
18 1 0 3 152 1 14 13 110 1 9 12 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 13 1 14 1 13 14 104 2 17 2 0 0 1 13 0 1 92 19 16 2 14 18 15 2 12 9 14 12 91 4 1 3 3 5 83 7 6 2 5 5 12 67 11 1 9 9 10 84 0 10 10 13 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 13 1 14 1 13 14 104 2 17 2 0 0 1 13 0 1 92 19 16 2 14 18 15 2 12 9 14 12 92 0 7 7 20 67 4 1 3 3 5 83 6 1 5 5 12 67 11 1 9 9 10 84 0 10 10 13 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
0 7 5 7 106 0 13 1 14 1 13 14 104 2 17 2 0 0 1 13 0 1 92 19 16 2 14 18 15 2 12 9 14 12 92 4 1 3 3 5 83 6 1 5 5 14 67 11 1 9 9 10 84 0 10 10 13 67 0 8 8 21 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 48 values pushed */
150 148 87 87 1 0 148 157 150 157 87 147 87 146 143 141 134 132 118 111 107 106 100 97 93 91 82 80 72 70 46 43 42 39 35 33 32 30 16 14 10 7 0 53 1 53 20 15
CALL[ ]	/* CallFunction */";
};
width = 573;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(157,610,o),
(158,661,o),
(159,698,cs),
(160,735,o),
(160,762,o),
(161,779,cs),
(162,800,o),
(162,812,o),
(162,815,cs),
(162,820,o),
(161,824,o),
(160,825,cs),
(158,826,o),
(156,827,o),
(154,827,cs),
(149,827,o),
(122,823,o),
(73,823,cs),
(62,823,o),
(47,815,o),
(47,802,cs),
(47,782,o),
(62,782,o),
(73,782,cs),
(76,782,o),
(81,782,o),
(87,783,cs),
(93,783,o),
(97,783,o),
(99,783,cs),
(108,783,o),
(108,772,o),
(108,769,cs),
(108,730,o),
(106,732,o),
(106,683,cs),
(105,650,o),
(103,625,o),
(103,608,cs),
(102,594,o),
(101,576,o),
(101,561,cs),
(101,544,o),
(94,542,o),
(73,542,cs),
(69,542,o),
(48,538,o),
(48,522,cs),
(48,502,o),
(68,500,o),
(78,500,cs),
(180,500,ls),
(189,500,o),
(204,502,o),
(204,522,cs),
(204,543,o),
(184,544,o),
(176,544,cs),
(156,544,l),
(156,544,l)
);
},
{
closed = 1;
nodes = (
(33,16,o),
(32,13,o),
(32,9,cs),
(32,-6,o),
(48,-19,o),
(60,-19,cs),
(79,-19,o),
(95,-10,o),
(102,5,cs),
(507,768,ls),
(512,777,o),
(521,796,o),
(521,807,cs),
(521,815,o),
(520,831,o),
(496,831,cs),
(464,831,o),
(452,815,o),
(432,774,cs),
(393,694,o),
(385,677,o),
(358,621,cs),
(339,582,o),
(307,525,o),
(252,423,cs),
(220,364,o),
(201,331,o),
(189,311,cs),
(179,294,o),
(169,278,o),
(163,267,cs),
(122,194,o),
(108,166,o),
(34,18,cs)
);
},
{
closed = 1;
nodes = (
(526,79,o),
(531,94,o),
(531,101,cs),
(531,116,o),
(522,123,o),
(504,123,cs),
(491,123,l),
(492,144,o),
(504,301,o),
(504,309,cs),
(504,334,o),
(479,335,o),
(474,335,cs),
(461,335,o),
(445,324,o),
(442,320,cs),
(397,264,o),
(356,208,o),
(290,118,cs),
(284,110,o),
(280,104,o),
(279,100,cs),
(277,96,o),
(276,92,o),
(276,89,cs),
(276,80,o),
(285,76,o),
(302,76,cs),
(314,76,o),
(347,77,o),
(376,78,cs),
(387,79,o),
(397,79,o),
(407,79,cs),
(417,79,o),
(427,79,o),
(438,79,c),
(434,55,ls),
(431,44,o),
(425,43,o),
(414,40,cs),
(412,39,o),
(408,39,o),
(403,39,cs),
(397,38,o),
(391,38,o),
(385,37,cs),
(374,37,o),
(364,31,o),
(364,20,cs),
(364,5,o),
(378,1,o),
(387,1,cs),
(496,1,ls),
(511,1,o),
(525,1,o),
(525,20,cs),
(525,40,o),
(504,40,o),
(496,40,cs),
(492,40,o),
(487,42,o),
(487,50,cs),
(487,53,o),
(488,68,o),
(491,79,c),
(507,79,l),
(507,79,l)
);
},
{
closed = 1;
nodes = (
(354,121,o),
(352,122,o),
(352,125,cs),
(352,126,o),
(353,128,o),
(354,129,cs),
(355,130,o),
(356,132,o),
(357,133,cs),
(447,256,l),
(437,124,l),
(419,123,o),
(402,122,o),
(386,122,cs),
(369,121,o),
(360,121,o),
(358,121,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
157 1 14 13 1 66 113 1 8 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 13 1 14 1 13 14 104 2 17 2 0 0 1 13 0 1 92 19 16 2 14 18 15 2 12 8 14 12 91 0 3 3 4 83 6 5 2 4 4 12 67 11 10 2 8 8 9 84 0 9 9 13 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 13 1 14 1 13 14 104 2 17 2 0 0 1 13 0 1 92 19 16 2 14 18 15 2 12 8 14 12 92 0 6 6 20 67 0 3 3 4 83 5 1 4 4 12 67 11 10 2 8 8 9 84 0 9 9 13 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
0 6 4 6 106 0 13 1 14 1 13 14 104 2 17 2 0 0 1 13 0 1 92 19 16 2 14 18 15 2 12 8 14 12 92 0 3 3 4 83 5 1 4 4 14 67 11 10 2 8 8 9 84 0 9 9 13 67 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 48 values pushed */
155 153 91 91 2 1 153 162 155 162 91 152 91 151 148 146 137 135 124 117 112 111 110 109 105 102 98 96 87 85 77 75 49 45 44 42 38 33 19 17 11 8 1 56 2 56 20 26
CALL[ ]	/* CallFunction */";
};
width = 566;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(67,-19,o),
(70.667,-13.667,o),
(80,5,cs),
(485,768,ls),
(490.333,778.667,o),
(499,796.333,o),
(499,807,cs),
(499,815,o),
(496,821,o),
(484,821,cs),
(459.98,821,o),
(441.908,779.723,o),
(440,774,c),
(402.793,697.815,o),
(377.652,645.101,o),
(365,620.5,cs),
(345.856,583.276,o),
(313.957,522.212,o),
(260,423,cs),
(231.024,369.878,o),
(210.35,332.307,o),
(198.5,310,cs),
(189.767,293.562,o),
(179.671,277.22,o),
(173.5,266,cs),
(153.792,230.167,o),
(108.75,142.229,o),
(42,18,c),
(39.333,11.333,o),
(37,1,o),
(37,-7,cs),
(37,-15,o),
(41.667,-19,o),
(51,-19,cs)
);
},
{
closed = 1;
nodes = (
(498,0,ls),
(508.667,0,o),
(517,0,o),
(517,12,cs),
(517,24,o),
(503.333,24,o),
(498,24,cs),
(486,24,o),
(469,23.333,o),
(469,34,cs),
(469,40.667,o),
(470.333,72.667,o),
(473,98,c),
(509,98,ls),
(519.667,98,o),
(523,107.333,o),
(523,110,cs),
(523,118,o),
(517.333,122,o),
(506,122,cs),
(473,122,l),
(476.289,200.946,o),
(486,291.792,o),
(486,308,cs),
(486,329.333,o),
(470,329,o),
(466,329,cs),
(456.667,329,o),
(446.667,321.667,o),
(444,319,cs),
(398.744,263.458,o),
(358.329,207.018,o),
(292,117,cs),
(288,111.667,o),
(288,108.667,o),
(288,106,cs),
(288,98,o),
(293.333,94,o),
(304,94,cs),
(310,94,o),
(320.167,94.333,o),
(334.5,95,cs),
(348.833,95.667,o),
(363.333,96.333,o),
(378,97,cs),
(388.667,97.667,o),
(399,98,o),
(409,98,cs),
(419,98,o),
(429.333,98,o),
(440,98,c),
(436,39,ls),
(436,28.333,o),
(428,25.333,o),
(416,24,c),
(414,23.333,o),
(410.167,22.833,o),
(404.5,22.5,cs),
(398.833,22.167,o),
(393,21.667,o),
(387,21,cs),
(381.667,21,o),
(376,15.667,o),
(376,9,cs),
(376,2.333,o),
(383.667,0,o),
(389,0,cs)
);
},
{
closed = 1;
nodes = (
(336,120,o),
(334,121.333,o),
(334,124,cs),
(334,125.333,o),
(334.667,126.667,o),
(336,128,cs),
(337.333,129.333,o),
(338.333,130.667,o),
(339,132,cs),
(451,280,l),
(439,123,l),
(415.667,121.667,o),
(394,120.833,o),
(374,120.5,cs),
(354,120.167,o),
(342.667,120,o),
(340,120,cs)
);
},
{
closed = 1;
nodes = (
(162,500,ls),
(167.333,500,o),
(176,501.333,o),
(176,512,cs),
(176,524,o),
(164.667,524,o),
(158,524,cs),
(128,524,l),
(129.333,595.333,o),
(130.333,650.5,o),
(131,689.5,cs),
(131.667,728.5,o),
(132.333,757.333,o),
(133,776,cs),
(133.667,798,o),
(134,811,o),
(134,815,cs),
(134,820.333,o),
(133.167,823.667,o),
(131.5,825,cs),
(129.833,826.333,o),
(128,827,o),
(126,827,cs),
(122.447,827,o),
(98.789,823,o),
(55,823,cs),
(48.333,823,o),
(39,818.667,o),
(39,812,cs),
(39,801.333,o),
(48.333,802,o),
(55,802,cs),
(59.667,802,o),
(66.167,802.167,o),
(74.5,802.5,cs),
(82.833,802.833,o),
(88.333,803,o),
(91,803,cs),
(100.333,803,o),
(100,794.333,o),
(100,789,cs),
(100,776.803,o),
(100.021,761.443,o),
(99.5,750.5,cs),
(98.833,736.5,o),
(98,717.667,o),
(98,683,cs),
(95.841,611.74,o),
(93,573.554,o),
(93,541,cs),
(93,522.629,o),
(66.228,522,o),
(55,522,cs),
(51,522,o),
(40,520,o),
(40,512,cs),
(40,500,o),
(53.333,500,o),
(60,500,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
154 1 14 13 1 66 112 1 8 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 13 3 14 3 13 14 104 11 10 2 8 12 9 14 8 96 4 17 2 2 0 3 13 2 3 91 19 16 2 14 18 15 2 12 8 14 12 92 0 5 5 0 83 7 6 2 0 0 12 67 0 9 9 13 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 13 3 14 3 13 14 104 11 10 2 8 12 9 12 8 9 104 4 17 2 2 0 3 13 2 3 91 19 16 2 14 18 15 2 12 8 14 12 92 0 5 5 0 83 7 6 2 0 0 12 67 0 9 9 13 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
0 13 3 14 3 13 14 104 11 10 2 8 12 9 12 8 9 104 4 17 2 2 0 3 13 2 3 91 19 16 2 14 18 15 2 12 8 14 12 92 6 1 0 0 14 67 0 5 5 7 83 0 7 7 14 67 0 9 9 13 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 48 values pushed */
153 150 90 90 37 36 150 159 153 159 90 149 90 148 145 143 136 134 123 116 111 110 109 108 104 101 97 95 82 78 77 75 71 66 50 48 44 41 36 89 37 89 32 30 22 20 20 15
CALL[ ]	/* CallFunction */";
};
width = 556;
}
);
note = onequarter;
unicode = 188;
},
{
glyphname = threequarters;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(26.667,16.667,o),
(26,15.333,o),
(26,14,cs),
(26,12.667,o),
(26,11.667,o),
(26,11,cs),
(26,-9,o),
(52.667,-19,o),
(66,-19,cs),
(87.333,-19,o),
(110.333,-7,o),
(117,5,cs),
(522,768,l),
(527.333,776,o),
(536,796.333,o),
(536,807,cs),
(536,817.667,o),
(530.667,837,o),
(504,837,cs),
(470.725,837,o),
(456.328,832.655,o),
(427,774,cs),
(400.421,720.843,o),
(372.038,663.195,o),
(344.5,606.5,cs),
(325.633,567.657,o),
(296.442,515.186,o),
(246,423,cs),
(195.524,328.778,o),
(122.7,197.536,o),
(28,18,c)
);
},
{
closed = 1;
nodes = (
(525.333,66,o),
(531,83.333,o),
(531,94,cs),
(531,112.667,o),
(521.667,122,o),
(503,122,cs),
(498,122,l),
(501.81,167.722,o),
(511,228.453,o),
(511,304,cs),
(511,326.667,o),
(492.667,337,o),
(474,337,cs),
(458,337,o),
(441.667,328.333,o),
(435,319,cs),
(401.242,275.597,o),
(404.071,279.802,o),
(376.5,242.5,cs),
(360.162,220.396,o),
(323.928,172.095,o),
(283,117,cs),
(274.333,105.667,o),
(268.667,97.5,o),
(266,92.5,cs),
(263.333,87.5,o),
(262,82.333,o),
(262,77,cs),
(262,71,o),
(264.667,67.333,o),
(270,66,cs),
(275.333,64.667,o),
(283.667,64,o),
(295,64,cs),
(301,64,o),
(311.167,64,o),
(325.5,64,cs),
(339.833,64,o),
(354.333,64.333,o),
(369,65,cs),
(379.667,65.667,o),
(389.167,66,o),
(397.5,66,cs),
(405.833,66,o),
(415.333,66,o),
(426,66,c),
(425,55,ls),
(425,51,o),
(421.333,48.667,o),
(414,48,c),
(412,47.333,o),
(407.167,46.833,o),
(399.5,46.5,cs),
(391.833,46.167,o),
(384.667,45.667,o),
(378,45,cs),
(364.667,43.667,o),
(350,39.667,o),
(350,25,cs),
(350,5,o),
(368,0,o),
(380,0,cs),
(489,0,ls),
(515.667,0,o),
(525,4.333,o),
(525,23,cs),
(525,44.333,o),
(507.667,48,o),
(497,48,cs),
(493.667,48,o),
(492,48.667,o),
(492,50,cs),
(492,50.667,o),
(492.167,52.5,o),
(492.5,55.5,cs),
(492.833,58.5,o),
(493.333,62,o),
(494,66,c),
(504,66,l),
(504,66,l)
);
},
{
closed = 1;
nodes = (
(361,120,o),
(359,121.333,o),
(359,124,cs),
(359,125.333,o),
(359.667,126.667,o),
(361,128,cs),
(362.333,129.333,o),
(363.333,130.667,o),
(364,132,cs),
(439,240,l),
(430,123,l),
(415.333,121.667,o),
(401.333,120.833,o),
(388,120.5,cs),
(374.667,120.167,o),
(367,120,o),
(365,120,cs)
);
},
{
closed = 1;
nodes = (
(187.915,692.429,o),
(241,715.238,o),
(241,772,cs),
(241,828.265,o),
(191.051,836,o),
(155,836,cs),
(87.847,836,o),
(45,779.461,o),
(45,749,cs),
(45,737,o),
(54,729,o),
(66,729,cs),
(91.333,729,o),
(101,743.667,o),
(105,753,cs),
(113,771.667,o),
(127.667,794,o),
(149,794,cs),
(159.667,794,o),
(169,787.333,o),
(169,774,cs),
(169,728.545,o),
(113.985,702.418,o),
(77,676,cs),
(75.667,674.667,o),
(73,672.167,o),
(69,668.5,cs),
(65,664.833,o),
(63,660.333,o),
(63,655,cs),
(63,644.333,o),
(64.5,637,o),
(67.5,633,cs),
(70.5,629,o),
(73.667,627,o),
(77,627,cs),
(82.333,627,o),
(88.833,628.5,o),
(96.5,631.5,cs),
(104.167,634.5,o),
(113.667,636,o),
(125,636,cs),
(151.667,636,o),
(173,627.667,o),
(173,605,cs),
(173,563.149,o),
(123.129,545,o),
(90,545,cs),
(76.246,545,o),
(85.831,567,o),
(61,567,cs),
(42.333,567,o),
(33,550.333,o),
(33,533,cs),
(33,507.667,o),
(53.333,495,o),
(94,495,cs),
(161.728,495,o),
(245,541.457,o),
(245,609,cs),
(245,653,o),
(210,678,o),
(170,678,cs),
(163.333,678,o),
(159.333,677.333,o),
(154,676,c),
(153,679,l),
(153,679,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
174 1 10 17 104 1 14 10 98 1 7 6 56 1 2 5 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 86 values pushed */
0 17 16 10 16 17 10 104 0 10 14 16 10 14 102 15 1 14 12 16 14 12 102 0 13 12 11 12 13 96 0 6 11 7 11 6 7 104 0 12 0 11 6 12 11 91 20 9 2 7 19 8 2 5 2 7 5 92 0 16 16 0 83 18 1 0 0 20 67 4 1 2 2 3 84 0 3 3 13 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 92 values pushed */
0 17 16 10 16 17 10 104 0 10 14 16 10 14 102 0 14 15 16 14 15 102 0 15 12 16 15 12 102 0 13 12 11 12 13 96 0 6 11 7 11 6 7 104 0 12 0 11 6 12 11 91 20 9 2 7 19 8 2 5 2 7 5 92 0 16 16 0 83 18 1 0 0 20 67 4 1 2 2 3 84 0 3 3 13 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 90 values pushed */
0 17 16 10 16 17 10 104 0 10 14 16 10 14 102 0 14 15 16 14 15 102 0 15 12 16 15 12 102 0 13 12 11 12 13 96 0 6 11 7 11 6 7 104 18 1 0 0 16 17 0 16 91 0 12 0 11 6 12 11 91 20 9 2 7 19 8 2 5 2 7 5 92 4 1 2 2 3 84 0 3 3 13 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 48 values pushed */
96 94 33 33 165 163 157 155 151 149 137 135 134 132 126 124 121 119 116 114 108 106 94 103 96 103 33 93 33 92 89 87 80 78 64 57 53 52 46 43 39 37 28 26 18 16 21 15
CALL[ ]	/* CallFunction */";
};
width = 568;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(78,675,o),
(75,672,o),
(71,669,cs),
(67,665,o),
(65,660,o),
(65,655,cs),
(65,645,o),
(67,639,o),
(71,637,cs),
(75,634,o),
(78,633,o),
(79,633,cs),
(82,633,o),
(88,635,o),
(97,638,cs),
(106,641,o),
(116,642,o),
(127,642,cs),
(154,642,o),
(175,632,o),
(175,605,cs),
(175,557,o),
(124,536,o),
(92,536,cs),
(73,536,o),
(77,558,o),
(56,558,cs),
(41,558,o),
(35,542,o),
(35,527,cs),
(35,506,o),
(61,495,o),
(92,495,cs),
(156,495,o),
(233,546,o),
(233,609,cs),
(233,653,o),
(193,677,o),
(156,677,cs),
(153,677,o),
(151,677,o),
(149,677,cs),
(146,676,o),
(144,676,o),
(142,676,cs),
(139,675,o),
(137,675,o),
(136,675,c),
(165,688,o),
(229,720,o),
(229,784,cs),
(229,831,o),
(172,836,o),
(148,836,cs),
(83,836,o),
(47,776,o),
(47,749,cs),
(47,738,o),
(57,731,o),
(64,731,cs),
(83,731,o),
(90,744,o),
(93,753,c),
(105,782,o),
(124,800,o),
(141,800,cs),
(161,800,o),
(171,794,o),
(171,781,cs),
(171,725,o),
(116,703,o),
(79,676,cs)
);
},
{
closed = 1;
nodes = (
(36,16,o),
(35,13,o),
(35,9,cs),
(35,-6,o),
(51,-19,o),
(63,-19,cs),
(82,-19,o),
(98,-10,o),
(105,5,cs),
(510,768,ls),
(515,777,o),
(524,796,o),
(524,807,cs),
(524,815,o),
(523,831,o),
(499,831,cs),
(467,831,o),
(455,815,o),
(435,774,cs),
(396,694,o),
(388,677,o),
(361,621,cs),
(342,582,o),
(310,525,o),
(255,423,cs),
(223,364,o),
(204,331,o),
(192,311,cs),
(182,294,o),
(172,278,o),
(166,267,cs),
(125,194,o),
(111,166,o),
(37,18,cs)
);
},
{
closed = 1;
nodes = (
(525,79,o),
(530,94,o),
(530,101,cs),
(530,116,o),
(521,123,o),
(503,123,cs),
(490,123,l),
(491,144,o),
(503,301,o),
(503,309,cs),
(503,334,o),
(478,335,o),
(473,335,cs),
(460,335,o),
(444,324,o),
(441,320,cs),
(396,264,o),
(355,208,o),
(289,118,cs),
(283,110,o),
(279,104,o),
(278,100,cs),
(276,96,o),
(275,92,o),
(275,89,cs),
(275,80,o),
(284,76,o),
(301,76,cs),
(313,76,o),
(346,77,o),
(375,78,cs),
(386,79,o),
(396,79,o),
(406,79,cs),
(416,79,o),
(426,79,o),
(437,79,c),
(433,55,ls),
(430,44,o),
(424,43,o),
(413,40,cs),
(411,39,o),
(407,39,o),
(402,39,cs),
(396,38,o),
(390,38,o),
(384,37,cs),
(373,37,o),
(363,31,o),
(363,20,cs),
(363,5,o),
(377,1,o),
(386,1,cs),
(495,1,ls),
(510,1,o),
(524,1,o),
(524,20,cs),
(524,40,o),
(503,40,o),
(495,40,cs),
(491,40,o),
(486,42,o),
(486,50,cs),
(486,53,o),
(487,68,o),
(490,79,c),
(506,79,l),
(506,79,l)
);
},
{
closed = 1;
nodes = (
(353,121,o),
(351,122,o),
(351,125,cs),
(351,126,o),
(352,128,o),
(353,129,cs),
(354,130,o),
(355,132,o),
(356,133,cs),
(446,256,l),
(436,124,l),
(418,123,o),
(401,122,o),
(385,122,cs),
(368,121,o),
(359,121,o),
(357,121,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
173 1 19 18 1 66 129 1 13 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 87 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 10 1 9 7 0 9 7 102 0 18 6 19 6 18 19 104 0 8 0 6 18 8 6 91 23 21 2 19 22 20 2 17 13 19 17 92 0 0 0 2 83 11 1 2 2 20 67 16 15 2 13 13 14 84 0 14 14 13 67 0 7 7 12 83 0 12 12 21 12 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 93 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 0 9 10 0 9 10 102 0 10 7 0 10 7 102 0 18 6 19 6 18 19 104 0 8 0 6 18 8 6 91 23 21 2 19 22 20 2 17 13 19 17 92 0 0 0 2 83 11 1 2 2 20 67 16 15 2 13 13 14 84 0 14 14 13 67 0 7 7 12 83 0 12 12 21 12 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 98 values pushed */
0 11 2 0 2 11 0 104 0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 0 9 10 0 9 10 102 0 10 7 0 10 7 102 0 18 6 19 6 18 19 104 0 2 0 0 1 2 0 91 0 8 0 6 18 8 6 91 23 21 2 19 22 20 2 17 13 19 17 92 16 15 2 13 13 14 84 0 14 14 13 67 0 7 7 12 83 0 12 12 21 12 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 45 values pushed */
171 169 107 107 169 178 171 178 107 168 107 167 164 162 153 151 140 133 128 127 126 125 121 118 114 112 103 101 93 91 68 66 65 63 35 36 38 33 17 25 38 36 39 24 35
CALL[ ]	/* CallFunction */";
};
width = 565;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(76,-19,o),
(79.667,-13.667,o),
(89,5,cs),
(494,768,ls),
(499.333,778.667,o),
(508,796.333,o),
(508,807,cs),
(508,815,o),
(505,821,o),
(493,821,cs),
(468.98,821,o),
(450.908,779.723,o),
(449,774,c),
(411.793,697.815,o),
(386.652,645.101,o),
(374,620.5,cs),
(354.856,583.276,o),
(322.957,522.212,o),
(269,423,cs),
(240.024,369.878,o),
(219.35,332.307,o),
(207.5,310,cs),
(198.767,293.562,o),
(188.671,277.22,o),
(182.5,266,cs),
(162.792,230.167,o),
(117.75,142.229,o),
(51,18,c),
(48.333,11.333,o),
(46,1,o),
(46,-7,cs),
(46,-15,o),
(50.667,-19,o),
(60,-19,cs)
);
},
{
closed = 1;
nodes = (
(503,0,ls),
(513.667,0,o),
(522,0,o),
(522,12,cs),
(522,24,o),
(508.333,24,o),
(503,24,cs),
(491,24,o),
(474,23.333,o),
(474,34,cs),
(474,40.667,o),
(475.333,72.667,o),
(478,98,c),
(514,98,ls),
(524.667,98,o),
(528,107.333,o),
(528,110,cs),
(528,118,o),
(522.333,122,o),
(511,122,cs),
(478,122,l),
(481.289,200.946,o),
(491,291.792,o),
(491,308,cs),
(491,329.333,o),
(475,329,o),
(471,329,cs),
(461.667,329,o),
(451.667,321.667,o),
(449,319,cs),
(403.744,263.458,o),
(363.329,207.018,o),
(297,117,cs),
(293,111.667,o),
(293,108.667,o),
(293,106,cs),
(293,98,o),
(298.333,94,o),
(309,94,cs),
(315,94,o),
(325.167,94.333,o),
(339.5,95,cs),
(353.833,95.667,o),
(368.333,96.333,o),
(383,97,cs),
(393.667,97.667,o),
(404,98,o),
(414,98,cs),
(424,98,o),
(434.333,98,o),
(445,98,c),
(441,39,ls),
(441,28.333,o),
(433,25.333,o),
(421,24,c),
(419,23.333,o),
(415.167,22.833,o),
(409.5,22.5,cs),
(403.833,22.167,o),
(398,21.667,o),
(392,21,cs),
(386.667,21,o),
(381,15.667,o),
(381,9,cs),
(381,2.333,o),
(388.667,0,o),
(394,0,cs)
);
},
{
closed = 1;
nodes = (
(341,120,o),
(339,121.333,o),
(339,124,cs),
(339,125.333,o),
(339.667,126.667,o),
(341,128,cs),
(342.333,129.333,o),
(343.333,130.667,o),
(344,132,cs),
(456,280,l),
(444,123,l),
(420.667,121.667,o),
(399,120.833,o),
(379,120.5,cs),
(359,120.167,o),
(347.667,120,o),
(345,120,cs)
);
},
{
closed = 1;
nodes = (
(145.596,495,o),
(211,556.717,o),
(211,609,cs),
(211,652.851,o),
(162.722,675,o),
(131,675,cs),
(128.333,675,o),
(125.833,674.833,o),
(123.5,674.5,cs),
(121.167,674.167,o),
(119,674,o),
(117,674,cs),
(114.333,673.333,o),
(112.333,673,o),
(111,673,c),
(121.667,683.667,o),
(207,717.038,o),
(207,784,cs),
(207,829.901,o),
(166.616,836,o),
(146,836,cs),
(81.145,836,o),
(45,776.35,o),
(45,749,cs),
(45,739,o),
(48.667,734,o),
(56,734,cs),
(64,734,o),
(68.333,743.667,o),
(71,753,cs),
(83,787.667,o),
(103,810,o),
(139,810,cs),
(163,810,o),
(169,799.667,o),
(169,781,cs),
(169,724.702,o),
(114.112,702.509,o),
(77,676,cs),
(75.667,674.667,o),
(73,672.167,o),
(69,668.5,cs),
(65,664.833,o),
(63,660.333,o),
(63,655,cs),
(63,644.333,o),
(74.333,643,o),
(77,643,cs),
(80.333,643,o),
(86.333,644.5,o),
(95,647.5,cs),
(103.667,650.5,o),
(113.667,652,o),
(125,652,cs),
(151.667,652,o),
(173,639.667,o),
(173,605,cs),
(173,551.006,o),
(121.268,521,o),
(90,521,cs),
(63.33,521,o),
(59.582,543,o),
(45,543,cs),
(34.333,543,o),
(33,533.667,o),
(33,527,cs),
(33,504.333,o),
(61.333,495,o),
(84,495,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
174 1 19 18 1 66 132 1 13 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 94 values pushed */
0 3 2 5 2 3 5 104 0 12 11 9 11 12 9 104 0 18 8 19 8 18 19 104 16 15 2 13 17 14 19 13 96 7 6 2 5 0 11 12 5 11 91 0 10 0 8 18 10 8 91 23 21 2 19 22 20 2 17 13 19 17 92 0 0 0 12 67 0 2 2 4 83 0 4 4 20 67 0 14 14 13 67 0 9 9 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 95 values pushed */
0 3 2 5 2 3 5 104 0 12 11 9 11 12 9 104 0 18 8 19 8 18 19 104 16 15 2 13 17 14 17 13 14 104 7 6 2 5 0 11 12 5 11 91 0 10 0 8 18 10 8 91 23 21 2 19 22 20 2 17 13 19 17 92 0 0 0 12 67 0 2 2 4 83 0 4 4 20 67 0 14 14 13 67 0 9 9 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 93 values pushed */
0 3 2 5 2 3 5 104 0 12 11 9 11 12 9 104 0 18 8 19 8 18 19 104 16 15 2 13 17 14 17 13 14 104 0 4 0 2 3 4 2 91 7 6 2 5 0 11 12 5 11 91 0 10 0 8 18 10 8 91 23 21 2 19 22 20 2 17 13 19 17 92 0 0 0 14 67 0 14 14 13 67 0 9 9 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 54 values pushed */
173 170 110 110 170 179 173 179 110 169 110 168 165 163 156 154 143 136 131 130 129 128 124 121 117 115 105 103 102 100 94 92 89 87 83 81 73 71 70 69 68 67 58 56 51 49 45 43 32 30 22 20 24 15
CALL[ ]	/* CallFunction */";
};
width = 561;
}
);
note = threequarters;
unicode = 190;
},
{
glyphname = oneeighth;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(30.333,16.667,o),
(30,14.333,o),
(30,11,cs),
(30,-7.667,o),
(54.333,-19,o),
(69,-19,cs),
(90.333,-19,o),
(113.333,-7,o),
(120,5,cs),
(525,768,ls),
(530.333,778.667,o),
(539,800.333,o),
(539,807,cs),
(539,818.25,o),
(533.986,837,o),
(507,837,cs),
(465.338,837,o),
(456.187,826.374,o),
(430,774,cs),
(383.333,678,o),
(355.5,621.333,o),
(329.5,572,cs),
(306.671,528.683,o),
(276.322,474.229,o),
(249,423,cs),
(219.111,368.203,o),
(107.579,179.666,o),
(31,18,cs)
);
},
{
closed = 1;
nodes = (
(177.333,619.333,o),
(178.333,668.333,o),
(179,703,cs),
(179.667,737.667,o),
(180.333,763.333,o),
(181,780,cs),
(181.667,799.333,o),
(182,811,o),
(182,815,cs),
(182,820.333,o),
(181.167,823.667,o),
(179.5,825,cs),
(177.833,826.333,o),
(176,827,o),
(174,827,cs),
(127.07,827,o),
(82.374,823,o),
(86,823,c),
(71.333,820.333,o),
(53,813.333,o),
(53,796,cs),
(53,773.333,o),
(70,770,o),
(86,770,cs),
(88,770,o),
(91.333,770.167,o),
(96,770.5,cs),
(100.667,770.833,o),
(103.667,771,o),
(105,771,cs),
(111.667,771,o),
(114,763.667,o),
(114,757,cs),
(114,722.936,o),
(112,726.817,o),
(112,683,cs),
(110.86,653.372,o),
(109.215,630.736,o),
(108.5,615,cs),
(107.92,602.251,o),
(107,586.719,o),
(107,573,cs),
(107,555.667,o),
(104.667,554,o),
(86,554,cs),
(75.333,554,o),
(54,549.333,o),
(54,528,cs),
(54,504,o),
(76.333,500,o),
(91,500,cs),
(193,500,ls),
(205,500,o),
(224,502.667,o),
(224,528,cs),
(224,552.006,o),
(199.659,556,o),
(189,556,cs),
(176,556,l),
(176,556,l)
);
},
{
closed = 1;
nodes = (
(314,18,o),
(364,-12,o),
(436,-12,cs),
(510.667,-12,o),
(547,29.667,o),
(547,75,cs),
(547,117.667,o),
(524.333,153,o),
(475,161,c),
(501.997,164,o),
(542,190.058,o),
(542,245,cs),
(542,290.333,o),
(499.667,327,o),
(429,327,cs),
(357,327,o),
(324,286.333,o),
(324,241,cs),
(324,201.38,o),
(355.516,163.408,o),
(382,161,c),
(348.667,155.667,o),
(314,128.667,o),
(314,78,cs)
);
},
{
closed = 1;
nodes = (
(385,114.584,o),
(412.685,125,o),
(431,125,cs),
(461,125,o),
(476,109.667,o),
(476,79,cs),
(476,61.667,o),
(465,42,o),
(433,42,cs),
(410.333,42,o),
(385,51,o),
(385,83,cs)
);
},
{
closed = 1;
nodes = (
(394,259.667,o),
(414.333,269,o),
(433,269,cs),
(449,269,o),
(471,263.667,o),
(471,229,cs),
(471,219.667,o),
(462.667,198,o),
(432,198,cs),
(419.715,198,o),
(394,201.614,o),
(394,233,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
105 89 2 12 13 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
6 1 5 0 2 0 5 2 104 4 15 2 2 0 3 9 2 3 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 8 7 2 0 0 20 67 0 11 11 1 83 10 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
6 1 5 7 2 7 5 2 104 4 15 2 2 0 3 9 2 3 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 0 0 0 20 67 8 1 7 7 12 67 0 11 11 1 83 10 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
6 1 5 7 2 7 5 2 104 4 15 2 2 0 3 9 2 3 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 0 0 0 20 67 8 1 7 7 12 67 0 11 11 10 83 0 10 10 24 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 0 7 0 106 6 1 5 7 2 7 5 2 104 4 15 2 2 0 3 9 2 3 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 8 1 7 7 14 67 0 11 11 10 83 0 10 10 24 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
33 32 139 137 133 131 123 121 118 116 112 110 98 96 78 74 73 72 67 65 64 62 48 46 42 39 32 85 33 85 42 46 16 17
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(157,610,o),
(158,661,o),
(159,698,cs),
(160,735,o),
(160,762,o),
(161,779,cs),
(162,800,o),
(162,812,o),
(162,815,cs),
(162,820,o),
(161,824,o),
(160,825,cs),
(158,826,o),
(156,827,o),
(154,827,cs),
(149,827,o),
(122,823,o),
(73,823,cs),
(62,823,o),
(47,815,o),
(47,802,cs),
(47,782,o),
(62,782,o),
(73,782,cs),
(76,782,o),
(81,782,o),
(87,783,cs),
(93,783,o),
(97,783,o),
(99,783,cs),
(108,783,o),
(108,772,o),
(108,769,cs),
(108,730,o),
(106,732,o),
(106,683,cs),
(105,650,o),
(103,625,o),
(103,608,cs),
(102,594,o),
(101,576,o),
(101,561,cs),
(101,544,o),
(94,542,o),
(73,542,cs),
(69,542,o),
(48,538,o),
(48,522,cs),
(48,502,o),
(68,500,o),
(78,500,cs),
(180,500,ls),
(189,500,o),
(204,502,o),
(204,522,cs),
(204,543,o),
(184,544,o),
(176,544,cs),
(156,544,l),
(156,544,l)
);
},
{
closed = 1;
nodes = (
(34,16,o),
(33,13,o),
(33,9,cs),
(33,-6,o),
(49,-19,o),
(61,-19,cs),
(80,-19,o),
(96,-10,o),
(103,5,cs),
(508,768,ls),
(513,777,o),
(522,796,o),
(522,807,cs),
(522,815,o),
(521,831,o),
(497,831,cs),
(465,831,o),
(453,815,o),
(433,774,cs),
(394,694,o),
(386,677,o),
(359,621,cs),
(340,582,o),
(308,525,o),
(253,423,cs),
(221,364,o),
(202,331,o),
(190,311,cs),
(180,294,o),
(170,278,o),
(164,267,cs),
(123,194,o),
(109,166,o),
(35,18,cs)
);
},
{
closed = 1;
nodes = (
(322,16,o),
(373,-11,o),
(434,-11,cs),
(502,-11,o),
(541,31,o),
(541,76,cs),
(541,119,o),
(512,154,o),
(469,162,c),
(491,164,o),
(536,198,o),
(536,246,cs),
(536,283,o),
(499,328,o),
(433,328,cs),
(366,328,o),
(332,287,o),
(332,242,cs),
(332,201,o),
(364,167,o),
(390,162,c),
(361,154,o),
(322,125,o),
(322,72,cs)
);
},
{
closed = 1;
nodes = (
(379,116,o),
(409,132,o),
(432,132,cs),
(465,132,o),
(484,108,o),
(484,79,cs),
(484,54,o),
(464,32,o),
(432,32,cs),
(403,32,o),
(379,48,o),
(379,79,cs)
);
},
{
closed = 1;
nodes = (
(388,267,o),
(410,282,o),
(435,282,cs),
(456,282,o),
(479,271,o),
(479,236,cs),
(479,216,o),
(462,193,o),
(433,193,cs),
(418,193,o),
(388,202,o),
(388,236,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
114 96 2 11 12 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
2 14 2 0 0 1 8 0 1 92 0 8 0 13 12 8 13 91 0 12 0 11 10 12 11 91 0 3 3 4 83 6 5 2 4 4 12 67 0 10 10 7 83 9 1 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
2 14 2 0 0 1 8 0 1 92 0 8 0 13 12 8 13 91 0 12 0 11 10 12 11 91 0 6 6 20 67 0 3 3 4 83 5 1 4 4 12 67 0 10 10 9 84 0 9 9 24 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 6 4 6 106 2 14 2 0 0 1 8 0 1 92 0 8 0 13 12 8 13 91 0 12 0 11 10 12 11 91 0 3 3 4 83 5 1 4 4 14 67 0 10 10 9 84 0 9 9 24 67 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
2 1 147 145 141 139 133 131 127 125 121 119 105 103 87 85 77 75 49 45 44 42 38 33 19 17 11 8 1 56 2 56 15 26
CALL[ ]	/* CallFunction */";
};
width = 578;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(66,-19,o),
(69.667,-13.667,o),
(79,5,cs),
(484,768,ls),
(489.333,778.667,o),
(498,796.333,o),
(498,807,cs),
(498,815,o),
(495,821,o),
(483,821,cs),
(458.98,821,o),
(440.908,779.723,o),
(439,774,c),
(401.793,697.815,o),
(376.652,645.101,o),
(364,620.5,cs),
(344.856,583.276,o),
(312.957,522.212,o),
(259,423,cs),
(230.024,369.878,o),
(209.35,332.307,o),
(197.5,310,cs),
(188.767,293.562,o),
(178.671,277.22,o),
(172.5,266,cs),
(152.792,230.167,o),
(107.75,142.229,o),
(41,18,c),
(38.333,11.333,o),
(36,1,o),
(36,-7,cs),
(36,-15,o),
(40.667,-19,o),
(50,-19,cs)
);
},
{
closed = 1;
nodes = (
(484.233,-12,o),
(532,28.804,o),
(532,75,cs),
(532,117.043,o),
(492.534,152.866,o),
(460,161,c),
(485.92,169.64,o),
(527,197.993,o),
(527,245,cs),
(527,282.847,o),
(498.228,327,o),
(439,327,cs),
(381.667,327,o),
(343,286.333,o),
(343,241,cs),
(343,202.333,o),
(373,171.667,o),
(401,161,c),
(377.134,150.393,o),
(333,124.194,o),
(333,71,cs),
(333,14.125,o),
(386.636,-12,o),
(431,-12,cs)
);
},
{
closed = 1;
nodes = (
(392.667,12,o),
(370,42.667,o),
(370,76,cs),
(370,116,o),
(403.667,141,o),
(433,141,cs),
(462.333,141,o),
(495,117,o),
(495,77,cs),
(495,37,o),
(463.333,12,o),
(430,12,cs)
);
},
{
closed = 1;
nodes = (
(408.667,182,o),
(379,200.333,o),
(379,239,cs),
(379,268.333,o),
(395.333,301,o),
(438,301,cs),
(482.256,301,o),
(490,265.516,o),
(490,245,cs),
(490,206.333,o),
(462,182,o),
(434,182,cs)
);
},
{
closed = 1;
nodes = (
(161,500,ls),
(166.333,500,o),
(175,501.333,o),
(175,512,cs),
(175,524,o),
(163.667,524,o),
(157,524,cs),
(127,524,l),
(128.333,595.333,o),
(129.333,650.5,o),
(130,689.5,cs),
(130.667,728.5,o),
(131.333,757.333,o),
(132,776,cs),
(132.667,798,o),
(133,811,o),
(133,815,cs),
(133,820.333,o),
(132.167,823.667,o),
(130.5,825,cs),
(128.833,826.333,o),
(127,827,o),
(125,827,cs),
(121.447,827,o),
(97.789,823,o),
(54,823,cs),
(47.333,823,o),
(38,818.667,o),
(38,812,cs),
(38,801.333,o),
(47.333,802,o),
(54,802,cs),
(58.667,802,o),
(65.167,802.167,o),
(73.5,802.5,cs),
(81.833,802.833,o),
(87.333,803,o),
(90,803,cs),
(99.333,803,o),
(99,794.333,o),
(99,789,cs),
(99,776.803,o),
(99.021,761.443,o),
(98.5,750.5,cs),
(97.833,736.5,o),
(97,717.667,o),
(97,683,cs),
(94.841,611.74,o),
(92,573.554,o),
(92,541,cs),
(92,522.629,o),
(65.228,522,o),
(54,522,cs),
(50,522,o),
(39,520,o),
(39,512,cs),
(39,500,o),
(52.333,500,o),
(59,500,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
111 95 2 11 12 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
4 14 2 2 0 3 8 2 3 91 0 8 0 13 12 8 13 91 0 12 0 11 10 12 11 91 0 5 5 0 83 7 6 2 0 0 12 67 0 10 10 9 83 0 9 9 21 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
4 14 2 2 0 3 8 2 3 91 0 8 0 13 12 8 13 91 0 12 0 11 10 12 11 91 0 5 5 0 83 7 6 2 0 0 12 67 0 10 10 9 83 0 9 9 24 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
4 14 2 2 0 3 8 2 3 91 0 8 0 13 12 8 13 91 0 12 0 11 10 12 11 91 6 1 0 0 14 67 0 5 5 7 83 0 7 7 14 67 0 10 10 9 83 0 9 9 24 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
37 36 150 148 142 140 136 134 130 128 122 120 102 100 82 78 77 75 71 66 50 48 44 41 36 89 37 89 32 30 22 20 15 15
CALL[ ]	/* CallFunction */";
};
width = 568;
}
);
note = oneeighth;
unicode = 8539;
},
{
glyphname = threeeighths;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(26.667,16.667,o),
(26,15.333,o),
(26,14,cs),
(26,12.667,o),
(26,11.667,o),
(26,11,cs),
(26,-9,o),
(52.667,-19,o),
(66,-19,cs),
(87.333,-19,o),
(110.333,-7,o),
(117,5,cs),
(522,768,l),
(527.333,776,o),
(536,796.333,o),
(536,807,cs),
(536,817.667,o),
(530.667,837,o),
(504,837,cs),
(470.725,837,o),
(456.328,832.655,o),
(427,774,cs),
(400.421,720.843,o),
(372.038,663.195,o),
(344.5,606.5,cs),
(325.633,567.657,o),
(296.442,515.186,o),
(246,423,cs),
(195.524,328.778,o),
(122.7,197.536,o),
(28,18,c)
);
},
{
closed = 1;
nodes = (
(307,18,o),
(357,-12,o),
(429,-12,cs),
(503.667,-12,o),
(540,29.667,o),
(540,75,cs),
(540,117.667,o),
(517.333,153,o),
(468,161,c),
(494.997,164,o),
(535,190.058,o),
(535,245,cs),
(535,290.333,o),
(492.667,327,o),
(422,327,cs),
(350,327,o),
(317,286.333,o),
(317,241,cs),
(317,201.38,o),
(348.516,163.408,o),
(375,161,c),
(341.667,155.667,o),
(307,128.667,o),
(307,78,cs)
);
},
{
closed = 1;
nodes = (
(378,114.584,o),
(405.685,125,o),
(424,125,cs),
(454,125,o),
(469,109.667,o),
(469,79,cs),
(469,61.667,o),
(458,42,o),
(426,42,cs),
(403.333,42,o),
(378,51,o),
(378,83,cs)
);
},
{
closed = 1;
nodes = (
(387,259.667,o),
(407.333,269,o),
(426,269,cs),
(442,269,o),
(464,263.667,o),
(464,229,cs),
(464,219.667,o),
(455.667,198,o),
(425,198,cs),
(412.715,198,o),
(387,201.614,o),
(387,233,cs)
);
},
{
closed = 1;
nodes = (
(187.915,692.429,o),
(241,715.238,o),
(241,772,cs),
(241,828.265,o),
(191.051,836,o),
(155,836,cs),
(87.847,836,o),
(45,779.461,o),
(45,749,cs),
(45,737,o),
(54,729,o),
(66,729,cs),
(91.333,729,o),
(101,743.667,o),
(105,753,cs),
(113,771.667,o),
(127.667,794,o),
(149,794,cs),
(159.667,794,o),
(169,787.333,o),
(169,774,cs),
(169,728.545,o),
(113.985,702.418,o),
(77,676,cs),
(75.667,674.667,o),
(73,672.167,o),
(69,668.5,cs),
(65,664.833,o),
(63,660.333,o),
(63,655,cs),
(63,644.333,o),
(64.5,637,o),
(67.5,633,cs),
(70.5,629,o),
(73.667,627,o),
(77,627,cs),
(82.333,627,o),
(88.833,628.5,o),
(96.5,631.5,cs),
(104.167,634.5,o),
(113.667,636,o),
(125,636,cs),
(151.667,636,o),
(173,627.667,o),
(173,605,cs),
(173,563.149,o),
(123.129,545,o),
(90,545,cs),
(76.246,545,o),
(85.831,567,o),
(61,567,cs),
(42.333,567,o),
(33,550.333,o),
(33,533,cs),
(33,507.667,o),
(53.333,495,o),
(94,495,cs),
(161.728,495,o),
(245,541.457,o),
(245,609,cs),
(245,653,o),
(210,678,o),
(170,678,cs),
(163.333,678,o),
(159.333,677.333,o),
(154,676,c),
(153,679,l),
(153,679,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
158 1 8 15 88 1 12 8 52 36 2 5 6 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 15 14 8 14 15 8 104 0 8 12 14 8 12 102 13 1 12 10 14 12 10 102 0 11 10 9 10 11 96 0 10 0 9 2 10 9 91 0 2 0 7 6 2 7 91 0 6 0 5 4 6 5 91 0 14 14 0 83 16 1 0 0 20 67 0 4 4 1 83 3 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 83 values pushed */
0 15 14 8 14 15 8 104 0 8 12 14 8 12 102 0 12 13 14 12 13 102 0 13 10 14 13 10 102 0 11 10 9 10 11 96 0 10 0 9 2 10 9 91 0 2 0 7 6 2 7 91 0 6 0 5 4 6 5 91 0 14 14 0 83 16 1 0 0 20 67 0 4 4 1 83 3 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 87 values pushed */
0 15 14 8 14 15 8 104 0 8 12 14 8 12 102 0 12 13 14 12 13 102 0 13 10 14 13 10 102 0 11 10 9 10 11 96 0 10 0 9 2 10 9 91 0 2 0 7 6 2 7 91 0 6 0 5 4 6 5 91 0 14 14 0 83 16 1 0 0 20 67 0 4 4 3 83 0 3 3 24 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 85 values pushed */
0 15 14 8 14 15 8 104 0 8 12 14 8 12 102 0 12 13 14 12 13 102 0 13 10 14 13 10 102 0 11 10 9 10 11 96 16 1 0 0 14 15 0 14 91 0 10 0 9 2 10 9 91 0 2 0 7 6 2 7 91 0 6 0 5 4 6 5 91 0 4 4 3 83 0 3 3 24 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
149 147 141 139 135 133 121 119 118 116 110 108 105 103 100 98 92 90 86 84 80 78 70 68 65 63 59 57 45 43 28 26 18 16 17 15
CALL[ ]	/* CallFunction */";
};
width = 576;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(78,675,o),
(75,672,o),
(71,669,cs),
(67,665,o),
(65,660,o),
(65,655,cs),
(65,645,o),
(67,639,o),
(71,637,cs),
(75,634,o),
(78,633,o),
(79,633,cs),
(82,633,o),
(88,635,o),
(97,638,cs),
(106,641,o),
(116,642,o),
(127,642,cs),
(154,642,o),
(175,632,o),
(175,605,cs),
(175,557,o),
(124,536,o),
(92,536,cs),
(73,536,o),
(77,558,o),
(56,558,cs),
(41,558,o),
(35,542,o),
(35,527,cs),
(35,506,o),
(61,495,o),
(92,495,cs),
(156,495,o),
(233,546,o),
(233,609,cs),
(233,653,o),
(193,677,o),
(156,677,cs),
(153,677,o),
(151,677,o),
(149,677,cs),
(146,676,o),
(144,676,o),
(142,676,cs),
(139,675,o),
(137,675,o),
(136,675,c),
(165,688,o),
(229,720,o),
(229,784,cs),
(229,831,o),
(172,836,o),
(148,836,cs),
(83,836,o),
(47,776,o),
(47,749,cs),
(47,738,o),
(57,731,o),
(64,731,cs),
(83,731,o),
(90,744,o),
(93,753,c),
(105,782,o),
(124,800,o),
(141,800,cs),
(161,800,o),
(171,794,o),
(171,781,cs),
(171,725,o),
(116,703,o),
(79,676,cs)
);
},
{
closed = 1;
nodes = (
(36,16,o),
(35,13,o),
(35,9,cs),
(35,-6,o),
(51,-19,o),
(63,-19,cs),
(82,-19,o),
(98,-10,o),
(105,5,cs),
(510,768,ls),
(515,777,o),
(524,796,o),
(524,807,cs),
(524,815,o),
(523,831,o),
(499,831,cs),
(467,831,o),
(455,815,o),
(435,774,cs),
(396,694,o),
(388,677,o),
(361,621,cs),
(342,582,o),
(310,525,o),
(255,423,cs),
(223,364,o),
(204,331,o),
(192,311,cs),
(182,294,o),
(172,278,o),
(166,267,cs),
(125,194,o),
(111,166,o),
(37,18,cs)
);
},
{
closed = 1;
nodes = (
(319,16,o),
(370,-11,o),
(431,-11,cs),
(499,-11,o),
(538,31,o),
(538,76,cs),
(538,119,o),
(509,154,o),
(466,162,c),
(488,164,o),
(533,198,o),
(533,246,cs),
(533,283,o),
(496,328,o),
(430,328,cs),
(363,328,o),
(329,287,o),
(329,242,cs),
(329,201,o),
(361,167,o),
(387,162,c),
(358,154,o),
(319,125,o),
(319,72,cs)
);
},
{
closed = 1;
nodes = (
(376,116,o),
(406,132,o),
(429,132,cs),
(462,132,o),
(481,108,o),
(481,79,cs),
(481,54,o),
(461,32,o),
(429,32,cs),
(400,32,o),
(376,48,o),
(376,79,cs)
);
},
{
closed = 1;
nodes = (
(385,267,o),
(407,282,o),
(432,282,cs),
(453,282,o),
(476,271,o),
(476,236,cs),
(476,216,o),
(459,193,o),
(430,193,cs),
(415,193,o),
(385,202,o),
(385,236,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
130 112 2 16 17 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 83 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 10 1 9 7 0 9 7 102 0 8 0 6 13 8 6 91 0 13 0 18 17 13 18 91 0 17 0 16 15 17 16 91 0 0 0 2 83 11 1 2 2 20 67 0 7 7 12 83 14 1 12 12 21 67 0 15 15 12 84 14 1 12 12 21 12 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 89 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 0 9 10 0 9 10 102 0 10 7 0 10 7 102 0 8 0 6 13 8 6 91 0 13 0 18 17 13 18 91 0 17 0 16 15 17 16 91 0 0 0 2 83 11 1 2 2 20 67 0 7 7 12 83 14 1 12 12 21 67 0 15 15 12 84 14 1 12 12 21 12 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 87 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 0 9 10 0 9 10 102 0 10 7 0 10 7 102 0 8 0 6 13 8 6 91 0 13 0 18 17 13 18 91 0 17 0 16 15 17 16 91 0 0 0 2 83 11 1 2 2 20 67 0 15 15 14 84 0 14 14 24 67 0 7 7 12 83 0 12 12 21 12 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 92 values pushed */
0 11 2 0 2 11 0 104 0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 0 9 10 0 9 10 102 0 10 7 0 10 7 102 0 2 0 0 1 2 0 91 0 8 0 6 13 8 6 91 0 13 0 18 17 13 18 91 0 17 0 16 15 17 16 91 0 15 15 14 84 0 14 14 24 67 0 7 7 12 83 0 12 12 21 12 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
163 161 157 155 149 147 143 141 137 135 121 119 103 101 93 91 68 66 65 63 35 36 38 33 17 25 38 36 39 19 35
CALL[ ]	/* CallFunction */";
};
width = 575;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(76,-19,o),
(79.667,-13.667,o),
(89,5,cs),
(494,768,ls),
(499.333,778.667,o),
(508,796.333,o),
(508,807,cs),
(508,815,o),
(505,821,o),
(493,821,cs),
(468.98,821,o),
(450.908,779.723,o),
(449,774,c),
(411.793,697.815,o),
(386.652,645.101,o),
(374,620.5,cs),
(354.856,583.276,o),
(322.957,522.212,o),
(269,423,cs),
(240.024,369.878,o),
(219.35,332.307,o),
(207.5,310,cs),
(198.767,293.562,o),
(188.671,277.22,o),
(182.5,266,cs),
(162.792,230.167,o),
(117.75,142.229,o),
(51,18,c),
(48.333,11.333,o),
(46,1,o),
(46,-7,cs),
(46,-15,o),
(50.667,-19,o),
(60,-19,cs)
);
},
{
closed = 1;
nodes = (
(488.233,-12,o),
(536,28.804,o),
(536,75,cs),
(536,117.043,o),
(496.534,152.866,o),
(464,161,c),
(489.92,169.64,o),
(531,197.993,o),
(531,245,cs),
(531,282.847,o),
(502.228,327,o),
(443,327,cs),
(385.667,327,o),
(347,286.333,o),
(347,241,cs),
(347,202.333,o),
(377,171.667,o),
(405,161,c),
(381.134,150.393,o),
(337,124.194,o),
(337,71,cs),
(337,14.125,o),
(390.636,-12,o),
(435,-12,cs)
);
},
{
closed = 1;
nodes = (
(396.667,12,o),
(374,42.667,o),
(374,76,cs),
(374,116,o),
(407.667,141,o),
(437,141,cs),
(466.333,141,o),
(499,117,o),
(499,77,cs),
(499,37,o),
(467.333,12,o),
(434,12,cs)
);
},
{
closed = 1;
nodes = (
(412.667,182,o),
(383,200.333,o),
(383,239,cs),
(383,268.333,o),
(399.333,301,o),
(442,301,cs),
(486.256,301,o),
(494,265.516,o),
(494,245,cs),
(494,206.333,o),
(466,182,o),
(438,182,cs)
);
},
{
closed = 1;
nodes = (
(145.596,495,o),
(211,556.717,o),
(211,609,cs),
(211,652.851,o),
(162.722,675,o),
(131,675,cs),
(128.333,675,o),
(125.833,674.833,o),
(123.5,674.5,cs),
(121.167,674.167,o),
(119,674,o),
(117,674,cs),
(114.333,673.333,o),
(112.333,673,o),
(111,673,c),
(121.667,683.667,o),
(207,717.038,o),
(207,784,cs),
(207,829.901,o),
(166.616,836,o),
(146,836,cs),
(81.145,836,o),
(45,776.35,o),
(45,749,cs),
(45,739,o),
(48.667,734,o),
(56,734,cs),
(64,734,o),
(68.333,743.667,o),
(71,753,cs),
(83,787.667,o),
(103,810,o),
(139,810,cs),
(163,810,o),
(169,799.667,o),
(169,781,cs),
(169,724.702,o),
(114.112,702.509,o),
(77,676,cs),
(75.667,674.667,o),
(73,672.167,o),
(69,668.5,cs),
(65,664.833,o),
(63,660.333,o),
(63,655,cs),
(63,644.333,o),
(74.333,643,o),
(77,643,cs),
(80.333,643,o),
(86.333,644.5,o),
(95,647.5,cs),
(103.667,650.5,o),
(113.667,652,o),
(125,652,cs),
(151.667,652,o),
(173,639.667,o),
(173,605,cs),
(173,551.006,o),
(121.268,521,o),
(90,521,cs),
(63.33,521,o),
(59.582,543,o),
(45,543,cs),
(34.333,543,o),
(33,533.667,o),
(33,527,cs),
(33,504.333,o),
(61.333,495,o),
(84,495,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
131 115 2 16 17 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 86 values pushed */
0 3 2 5 2 3 5 104 0 12 11 9 11 12 9 104 7 6 2 5 0 11 12 5 11 91 0 10 0 8 13 10 8 91 0 13 0 18 17 13 18 91 0 17 0 16 15 17 16 91 0 0 0 12 67 0 2 2 4 83 0 4 4 20 67 0 15 15 14 83 0 14 14 21 67 0 9 9 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 86 values pushed */
0 3 2 5 2 3 5 104 0 12 11 9 11 12 9 104 7 6 2 5 0 11 12 5 11 91 0 10 0 8 13 10 8 91 0 13 0 18 17 13 18 91 0 17 0 16 15 17 16 91 0 0 0 12 67 0 2 2 4 83 0 4 4 20 67 0 15 15 14 83 0 14 14 24 67 0 9 9 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 84 values pushed */
0 3 2 5 2 3 5 104 0 12 11 9 11 12 9 104 0 4 0 2 3 4 2 91 7 6 2 5 0 11 12 5 11 91 0 10 0 8 13 10 8 91 0 13 0 18 17 13 18 91 0 17 0 16 15 17 16 91 0 0 0 14 67 0 15 15 14 83 0 14 14 24 67 0 9 9 1 83 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
170 168 162 160 156 154 150 148 142 140 122 120 105 103 102 100 94 92 89 87 83 81 73 71 70 69 68 67 58 56 51 49 45 43 32 30 22 20 19 15
CALL[ ]	/* CallFunction */";
};
width = 574;
}
);
note = threeeighths;
unicode = 8540;
},
{
glyphname = fiveeighths;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(39,31,o),
(34,21.333,o),
(34,12,cs),
(34,-2.667,o),
(48.333,-19,o),
(71,-19,cs),
(97.667,-19,o),
(115.333,-7,o),
(122,5,cs),
(527,768,l),
(532.333,776,o),
(541,796.333,o),
(541,807,cs),
(541,817.667,o),
(535.667,837,o),
(509,837,cs),
(468.317,837,o),
(461.645,833.29,o),
(432,774,cs),
(388.628,687.257,o),
(357.992,623.901,o),
(333,576,cs),
(301.572,515.764,o),
(287.749,490.373,o),
(251,423,cs),
(231.184,385.349,o),
(208.577,349.158,o),
(182.5,301.5,cs),
(146.908,236.452,o),
(109.849,168.766,o),
(43,39,cs)
);
},
{
closed = 1;
nodes = (
(171.578,796.894,o),
(81.913,804.825,o),
(71,783,cs),
(69.914,780.828,o),
(61.875,734.872,o),
(53,655,cs),
(51.667,648.333,o),
(50,639,o),
(50,635,cs),
(50,615.667,o),
(53.667,606,o),
(61,606,cs),
(97.645,606,o),
(104.725,645,o),
(148,645,cs),
(187.348,645,o),
(194,620.317,o),
(194,606,cs),
(194,568.647,o),
(172.791,529,o),
(119,529,cs),
(103,529,o),
(95,539,o),
(95,551,cs),
(95,569.034,o),
(105,557.157,o),
(105,575,cs),
(105,586.333,o),
(95.667,592,o),
(77,592,cs),
(62.333,592,o),
(36,574,o),
(36,542,cs),
(36,518,o),
(53.667,487,o),
(103,487,cs),
(185.335,487,o),
(266,541.608,o),
(266,608,cs),
(266,668,o),
(232,703,o),
(172,703,cs),
(157.288,703,o),
(124.786,691.977,o),
(117,679,c),
(128,735,l),
(140.978,735,o),
(196.122,754.073,o),
(206,760,cs),
(227.624,772.013,o),
(258,802.072,o),
(258,821,cs),
(258,825,o),
(256.333,828.833,o),
(253,832.5,cs),
(249.667,836.167,o),
(242.333,838,o),
(231,838,cs),
(216.333,838,o),
(206.667,829.667,o),
(204,827,cs)
);
},
{
closed = 1;
nodes = (
(310,15,o),
(360,-12,o),
(432,-12,cs),
(506.667,-12,o),
(543,29.667,o),
(543,75,cs),
(543,117.667,o),
(520.333,153,o),
(471,161,c),
(496.207,163.801,o),
(538,198.348,o),
(538,245,cs),
(538,283.785,o),
(492.023,327,o),
(425,327,cs),
(353,327,o),
(320,286.333,o),
(320,241,cs),
(320,201.38,o),
(351.516,163.408,o),
(378,161,c),
(344.667,155.667,o),
(310,121.667,o),
(310,71,cs)
);
},
{
closed = 1;
nodes = (
(381,113.667,o),
(405.667,125,o),
(423,125,cs),
(457.667,125,o),
(472,107,o),
(472,79,cs),
(472,63,o),
(458.667,42,o),
(428,42,cs),
(401.333,42,o),
(381,55,o),
(381,79,cs)
);
},
{
closed = 1;
nodes = (
(390,259.667,o),
(410.333,269,o),
(429,269,cs),
(445.703,269,o),
(467,261.734,o),
(467,229,cs),
(467,219.667,o),
(458.667,198,o),
(428,198,cs),
(409.333,198,o),
(390,207.667,o),
(390,233,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
106 1 3 0 52 1 8 4 132 114 2 13 14 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 3 0 4 0 3 4 104 0 4 8 0 4 8 102 0 8 9 0 8 9 102 0 9 6 0 9 6 102 0 6 7 7 6 94 0 7 0 5 10 7 5 92 0 10 0 15 14 10 15 91 0 14 0 13 12 14 13 91 2 1 0 0 20 67 0 12 12 1 83 11 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 3 0 4 0 3 4 104 0 4 8 0 4 8 102 0 8 9 0 8 9 102 0 9 6 0 9 6 102 0 6 7 0 6 7 102 0 7 0 5 10 7 5 92 0 10 0 15 14 10 15 91 0 14 0 13 12 14 13 91 2 1 0 0 20 67 0 12 12 1 83 11 1 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
0 3 0 4 0 3 4 104 0 4 8 0 4 8 102 0 8 9 0 8 9 102 0 9 6 0 9 6 102 0 6 7 0 6 7 102 0 7 0 5 10 7 5 92 0 10 0 15 14 10 15 91 0 14 0 13 12 14 13 91 2 1 0 0 20 67 0 12 12 11 83 0 11 11 24 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 71 values pushed */
2 1 0 3 0 106 0 3 4 3 106 0 4 8 4 106 0 8 9 8 106 0 9 6 9 106 0 6 7 6 106 0 7 0 5 10 7 5 92 0 10 0 15 14 10 15 91 0 14 0 13 12 14 13 91 0 12 12 11 83 0 11 11 24 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
165 163 157 155 151 149 145 143 139 137 123 121 97 95 92 90 82 80 72 70 66 64 58 56 51 50 39 37 30 28 20 18 16 15
CALL[ ]	/* CallFunction */";
};
width = 580;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(171,797,o),
(81,805,o),
(70,783,cs),
(68,778,o),
(62,736,o),
(51,655,cs),
(50,648,o),
(49,639,o),
(49,635,cs),
(49,620,o),
(53,612,o),
(60,612,cs),
(88,612,o),
(104,651,o),
(147,651,cs),
(184,651,o),
(193,620,o),
(193,606,cs),
(193,565,o),
(166,523,o),
(104,523,cs),
(91,523,o),
(80,530,o),
(80,545,cs),
(80,561,o),
(94,552,o),
(94,569,cs),
(94,580,o),
(86,586,o),
(69,586,cs),
(56,586,o),
(35,570,o),
(35,542,cs),
(35,518,o),
(53,487,o),
(102,487,cs),
(180,487,o),
(251,543,o),
(251,608,cs),
(251,664,o),
(217,697,o),
(161,697,cs),
(140,697,o),
(115,686,o),
(102,673,c),
(115,747,l),
(134,751,o),
(189,764,o),
(204,773,cs),
(223,782,o),
(243,806,o),
(243,821,cs),
(243,824,o),
(242,827,o),
(240,831,cs),
(238,834,o),
(232,836,o),
(223,836,cs),
(212,836,o),
(206,830,o),
(203,827,cs)
);
},
{
closed = 1;
nodes = (
(41,16,o),
(40,13,o),
(40,9,cs),
(40,-6,o),
(56,-19,o),
(68,-19,cs),
(87,-19,o),
(103,-10,o),
(110,5,cs),
(515,768,ls),
(520,777,o),
(529,796,o),
(529,807,cs),
(529,815,o),
(528,831,o),
(504,831,cs),
(472,831,o),
(460,815,o),
(440,774,cs),
(401,694,o),
(393,677,o),
(366,621,cs),
(347,582,o),
(315,525,o),
(260,423,cs),
(228,364,o),
(209,331,o),
(197,311,cs),
(187,294,o),
(177,278,o),
(171,267,cs),
(130,194,o),
(116,166,o),
(42,18,cs)
);
},
{
closed = 1;
nodes = (
(323,16,o),
(374,-11,o),
(435,-11,cs),
(503,-11,o),
(542,31,o),
(542,76,cs),
(542,119,o),
(513,154,o),
(470,162,c),
(492,164,o),
(537,198,o),
(537,246,cs),
(537,283,o),
(500,328,o),
(434,328,cs),
(367,328,o),
(333,287,o),
(333,242,cs),
(333,201,o),
(365,167,o),
(391,162,c),
(362,154,o),
(323,125,o),
(323,72,cs)
);
},
{
closed = 1;
nodes = (
(380,116,o),
(410,132,o),
(433,132,cs),
(466,132,o),
(485,108,o),
(485,79,cs),
(485,54,o),
(465,32,o),
(433,32,cs),
(404,32,o),
(380,48,o),
(380,79,cs)
);
},
{
closed = 1;
nodes = (
(389,267,o),
(411,282,o),
(436,282,cs),
(457,282,o),
(480,271,o),
(480,236,cs),
(480,216,o),
(463,193,o),
(434,193,cs),
(419,193,o),
(389,202,o),
(389,236,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
68 1 1 0 16 1 5 1 130 112 2 12 13 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
68 1 1 7 16 1 5 1 130 112 2 12 13 3 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 6 5 3 5 6 3 104 0 3 4 4 3 94 0 1 0 5 6 1 5 91 0 4 0 2 9 4 2 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 7 1 0 0 20 67 0 11 11 8 84 10 1 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 6 5 3 5 6 3 104 0 3 4 5 3 4 102 0 1 0 5 6 1 5 91 0 4 0 2 9 4 2 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 7 1 0 0 20 67 0 11 11 8 84 10 1 8 8 21 8 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
0 6 5 3 5 6 3 104 0 3 4 5 3 4 102 0 1 0 5 6 1 5 91 0 4 0 2 9 4 2 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 7 1 0 0 20 67 0 11 11 10 84 0 10 10 24 67 0 8 8 21 8 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 0 7 0 106 0 7 1 7 106 0 6 5 3 5 6 3 104 0 3 4 5 3 4 102 0 1 0 5 6 1 5 91 0 4 0 2 9 4 2 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 0 11 11 10 84 0 10 10 24 67 0 8 8 21 8 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
163 161 157 155 149 147 143 141 137 135 121 119 103 101 93 91 35 40 40 36 38 45 35 15 33
CALL[ ]	/* CallFunction */";
};
width = 579;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(80,-19,o),
(83.667,-13.667,o),
(93,5,cs),
(498,768,ls),
(503.333,778.667,o),
(512,796.333,o),
(512,807,cs),
(512,815,o),
(509,821,o),
(497,821,cs),
(472.98,821,o),
(454.908,779.723,o),
(453,774,c),
(415.793,697.815,o),
(390.652,645.101,o),
(378,620.5,cs),
(358.856,583.276,o),
(326.957,522.212,o),
(273,423,cs),
(244.024,369.878,o),
(223.35,332.307,o),
(211.5,310,cs),
(202.767,293.562,o),
(192.671,277.22,o),
(186.5,266,cs),
(166.792,230.167,o),
(121.75,142.229,o),
(55,18,c),
(52.333,11.333,o),
(50,1,o),
(50,-7,cs),
(50,-15,o),
(54.667,-19,o),
(64,-19,cs)
);
},
{
closed = 1;
nodes = (
(492.233,-12,o),
(540,28.804,o),
(540,75,cs),
(540,117.043,o),
(500.534,152.866,o),
(468,161,c),
(493.92,169.64,o),
(535,197.993,o),
(535,245,cs),
(535,282.847,o),
(506.228,327,o),
(447,327,cs),
(389.667,327,o),
(351,286.333,o),
(351,241,cs),
(351,202.333,o),
(381,171.667,o),
(409,161,c),
(385.134,150.393,o),
(341,124.194,o),
(341,71,cs),
(341,14.125,o),
(394.636,-12,o),
(439,-12,cs)
);
},
{
closed = 1;
nodes = (
(400.667,12,o),
(378,42.667,o),
(378,76,cs),
(378,116,o),
(411.667,141,o),
(441,141,cs),
(470.333,141,o),
(503,117,o),
(503,77,cs),
(503,37,o),
(471.333,12,o),
(438,12,cs)
);
},
{
closed = 1;
nodes = (
(416.667,182,o),
(387,200.333,o),
(387,239,cs),
(387,268.333,o),
(403.333,301,o),
(446,301,cs),
(490.256,301,o),
(498,265.516,o),
(498,245,cs),
(498,206.333,o),
(470,182,o),
(442,182,cs)
);
},
{
closed = 1;
nodes = (
(164.67,487,o),
(229,540.858,o),
(229,608,cs),
(229,658.667,o),
(194,687,o),
(146,687,cs),
(115.333,687,o),
(98.667,676.333,o),
(80,663,c),
(97,767,l),
(110.391,770.826,o),
(181.929,782.964,o),
(202,793,cs),
(211.333,798.333,o),
(221,813,o),
(221,821,cs),
(221,826.333,o),
(217.667,833,o),
(211,833,cs),
(208.333,833,o),
(205,831,o),
(201,827,cs),
(168.578,796.894,o),
(78.913,804.825,o),
(68,783,cs),
(65.744,778.487,o),
(60.01,735.742,o),
(49,655,cs),
(47.667,648.333,o),
(47,639,o),
(47,635,cs),
(47,626.333,o),
(50.667,622,o),
(58,622,cs),
(73.526,622,o),
(103.222,661,o),
(145,661,cs),
(187.954,661,o),
(191,621.384,o),
(191,606,cs),
(191,559.925,o),
(164.142,513,o),
(102,513,cs),
(78,513,o),
(58,520.333,o),
(58,535,cs),
(58,549.129,o),
(78,543.365,o),
(78,559,cs),
(78,570.333,o),
(71.333,576,o),
(58,576,cs),
(44.667,576,o),
(33,564.667,o),
(33,542,cs),
(33,518,o),
(50.667,487,o),
(100,487,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
102 1 3 0 50 1 7 3 128 112 2 12 13 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 8 7 5 7 8 5 104 0 5 6 6 5 94 0 3 0 7 8 3 7 91 0 6 0 4 9 6 4 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 0 2 2 20 67 0 0 0 12 67 0 11 11 10 83 0 10 10 21 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 8 7 5 7 8 5 104 0 5 6 6 5 94 0 3 0 7 8 3 7 91 0 6 0 4 9 6 4 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 0 2 2 20 67 0 0 0 12 67 0 11 11 10 83 0 10 10 24 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 8 7 5 7 8 5 104 0 5 6 7 5 6 102 0 3 0 7 8 3 7 91 0 6 0 4 9 6 4 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 0 2 2 20 67 0 0 0 12 67 0 11 11 10 83 0 10 10 24 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 2 0 2 106 0 8 7 5 7 8 5 104 0 5 6 7 5 6 102 0 3 0 7 8 3 7 91 0 6 0 4 9 6 4 92 0 9 0 14 13 9 14 91 0 13 0 12 11 13 12 91 0 0 0 14 67 0 11 11 10 83 0 10 10 24 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
167 165 159 157 153 151 147 145 139 137 119 117 93 91 88 86 78 76 68 66 62 60 54 52 39 37 32 30 22 20 15 15
CALL[ ]	/* CallFunction */";
};
width = 578;
}
);
note = fiveeighths;
unicode = 8541;
},
{
glyphname = seveneighths;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(95,495.333,o),
(109,485,o),
(125,485,cs),
(141.667,485,o),
(153.333,490.333,o),
(160,501,c),
(307,782,ls),
(315,797.333,o),
(320,807.167,o),
(322,811.5,cs),
(324,815.833,o),
(325,819.333,o),
(325,822,cs),
(325,823.333,o),
(324,824.5,o),
(322,825.5,cs),
(320,826.5,o),
(315.333,827,o),
(308,827,cs),
(283.595,827,o),
(156.158,823,o),
(134,823,cs),
(119.333,823,o),
(106,811.667,o),
(106,793,cs),
(106,778.333,o),
(116.333,766,o),
(131,766,cs),
(156.589,766,o),
(187.387,768,o),
(211,768,cs),
(215,768,o),
(217,766.333,o),
(217,763,cs),
(217,757.775,o),
(196.819,714.863,o),
(156,634.5,cs),
(115.181,554.137,o),
(95,511.225,o),
(95,506,cs)
);
},
{
closed = 1;
nodes = (
(26.667,16.667,o),
(26,15.333,o),
(26,14,cs),
(26,12.667,o),
(26,11.667,o),
(26,11,cs),
(26,-9,o),
(52.667,-19,o),
(66,-19,cs),
(87.333,-19,o),
(110.333,-7,o),
(117,5,cs),
(522,768,l),
(527.333,776,o),
(536,796.333,o),
(536,807,cs),
(536,817.667,o),
(530.667,837,o),
(504,837,cs),
(470.725,837,o),
(456.328,832.655,o),
(427,774,cs),
(400.421,720.843,o),
(372.038,663.195,o),
(344.5,606.5,cs),
(325.633,567.657,o),
(296.442,515.186,o),
(246,423,cs),
(195.524,328.778,o),
(122.7,197.536,o),
(28,18,c)
);
},
{
closed = 1;
nodes = (
(307,18,o),
(357,-12,o),
(429,-12,cs),
(503.667,-12,o),
(540,29.667,o),
(540,75,cs),
(540,117.667,o),
(517.333,153,o),
(468,161,c),
(494.997,164,o),
(535,190.058,o),
(535,245,cs),
(535,290.333,o),
(492.667,327,o),
(422,327,cs),
(350,327,o),
(317,286.333,o),
(317,241,cs),
(317,201.38,o),
(348.516,163.408,o),
(375,161,c),
(341.667,155.667,o),
(307,128.667,o),
(307,78,cs)
);
},
{
closed = 1;
nodes = (
(378,114.584,o),
(405.685,125,o),
(424,125,cs),
(454,125,o),
(469,109.667,o),
(469,79,cs),
(469,61.667,o),
(458,42,o),
(426,42,cs),
(403.333,42,o),
(378,51,o),
(378,83,cs)
);
},
{
closed = 1;
nodes = (
(387,259.667,o),
(407.333,269,o),
(426,269,cs),
(442,269,o),
(464,263.667,o),
(464,229,cs),
(464,219.667,o),
(455.667,198,o),
(425,198,cs),
(412.715,198,o),
(387,201.614,o),
(387,233,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
89 73 2 8 9 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 2 0 5 0 2 5 104 0 5 0 10 9 5 10 91 0 9 0 8 7 9 8 91 0 0 0 1 83 3 1 1 1 12 67 0 7 7 4 83 6 1 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 2 0 5 0 2 5 104 0 5 0 10 9 5 10 91 0 9 0 8 7 9 8 91 0 3 3 20 67 0 0 0 1 83 0 1 1 12 67 0 7 7 4 83 6 1 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 2 0 5 0 2 5 104 0 5 0 10 9 5 10 91 0 9 0 8 7 9 8 91 0 3 3 20 67 0 0 0 1 83 0 1 1 12 67 0 7 7 6 83 0 6 6 24 67 0 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 3 1 3 106 0 2 0 5 0 2 5 104 0 5 0 10 9 5 10 91 0 9 0 8 7 9 8 91 0 0 0 1 83 0 1 1 14 67 0 7 7 6 83 0 6 6 24 67 0 4 4 21 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
123 121 117 115 107 105 102 100 96 94 82 80 65 63 55 53 39 116 120 11 18
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(88,496,o),
(92.333,491,o),
(101,491,cs),
(109.667,491,o),
(115.667,494.333,o),
(119,501,cs),
(281,806,l),
(283,808.667,o),
(284,811.333,o),
(284,814,cs),
(284,822.667,o),
(278.333,827,o),
(267,827,cs),
(243.622,827,o),
(127.926,823,o),
(110,823,cs),
(95.333,823,o),
(91,815.667,o),
(91,809,cs),
(91,807.667,o),
(91.833,805.5,o),
(93.5,802.5,cs),
(95.167,799.5,o),
(99.667,798,o),
(107,798,cs),
(132.333,798,o),
(153.833,798.333,o),
(171.5,799,cs),
(189.167,799.667,o),
(209.667,800,o),
(233,800,cs),
(237,800,o),
(239,798.333,o),
(239,795,cs),
(239,787.184,o),
(213.125,740.616,o),
(163.5,649,cs),
(113.59,556.859,o),
(88,512.844,o),
(88,506,cs)
);
},
{
closed = 1;
nodes = (
(87,495.333,o),
(98,487,o),
(110,487,cs),
(123.333,487,o),
(132.667,491.667,o),
(138,501,cs),
(291,791,ls),
(296.333,800.333,o),
(299.667,806.5,o),
(301,809.5,cs),
(302.333,812.5,o),
(303,815.667,o),
(303,819,cs),
(303,824.333,o),
(297.333,827,o),
(286,827,cs),
(260.025,827,o),
(146.323,823,o),
(119,823,cs),
(104.333,823,o),
(95,813.667,o),
(95,799,cs),
(95,788.333,o),
(101.333,778,o),
(116,778,cs),
(149.251,778,o),
(185.957,780,o),
(215,780,cs),
(219,780,o),
(221,778.333,o),
(221,775,cs),
(221,767.282,o),
(191.585,712.96,o),
(154,640,cs),
(116.149,566.524,o),
(87,512.282,o),
(87,506,cs)
);
},
{
closed = 1;
nodes = (
(29.667,16,o),
(29,13,o),
(29,9,cs),
(29,-5.667,o),
(45,-19,o),
(57,-19,cs),
(75.667,-19,o),
(92.333,-9.667,o),
(99,5,cs),
(504,768,ls),
(509.333,777.333,o),
(518,796.333,o),
(518,807,cs),
(518,815,o),
(517,831,o),
(493,831,cs),
(461,831,o),
(449,815.333,o),
(429,774,cs),
(389.775,693.682,o),
(382.126,677.376,o),
(354.5,620.5,cs),
(335.582,581.552,o),
(304.258,524.604,o),
(249,423,cs),
(217,364.333,o),
(198,331.167,o),
(186,310.5,cs),
(176.491,294.124,o),
(165.78,278.417,o),
(159.5,267,cs),
(119.301,193.911,o),
(105.143,166.286,o),
(31,18,cs)
);
},
{
closed = 1;
nodes = (
(313,15,o),
(363.667,-12,o),
(425,-12,cs),
(493,-12,o),
(532,29.667,o),
(532,75,cs),
(532,117.667,o),
(502.667,153,o),
(460,161,c),
(481.662,163.407,o),
(527,197.114,o),
(527,245,cs),
(527,282.009,o),
(489.677,327,o),
(424,327,cs),
(357.333,327,o),
(323,286.333,o),
(323,241,cs),
(323,199.942,o),
(355.101,165.709,o),
(381,161,c),
(352.357,153.188,o),
(313,123.67,o),
(313,71,cs)
);
},
{
closed = 1;
nodes = (
(370,115.333,o),
(400.333,131,o),
(423,131,cs),
(456.333,131,o),
(475,107.333,o),
(475,78,cs),
(475,52.667,o),
(455,31,o),
(423,31,cs),
(393.667,31,o),
(370,47.333,o),
(370,78,cs)
);
},
{
closed = 1;
nodes = (
(379,265.667,o),
(400.667,281,o),
(426,281,cs),
(447.333,281,o),
(470,269.667,o),
(470,235,cs),
(470,215,o),
(453.333,192,o),
(424,192,cs),
(408.565,192,o),
(379,200.877,o),
(379,235,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
125 107 2 11 12 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 3 0 2 0 3 96 5 1 2 8 0 2 8 102 0 8 0 13 12 8 13 91 0 12 0 11 10 12 11 91 0 0 0 1 83 6 4 2 1 1 12 67 0 10 10 7 84 9 1 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 3 0 2 0 3 96 5 1 2 8 0 2 8 102 0 8 0 13 12 8 13 91 0 12 0 11 10 12 11 91 0 0 0 1 83 6 4 2 1 1 12 67 0 10 10 9 84 0 9 9 24 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 3 0 2 0 3 96 5 1 2 8 0 2 8 102 0 8 0 13 12 8 13 91 0 12 0 11 10 12 11 91 0 6 6 20 67 0 0 0 1 83 4 1 1 1 12 67 0 10 10 9 84 0 9 9 24 67 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 6 1 6 106 0 3 0 2 0 3 96 5 1 2 8 0 2 8 102 0 8 0 13 12 8 13 91 0 12 0 11 10 12 11 91 0 0 0 1 83 4 1 1 1 14 67 0 10 10 9 84 0 9 9 24 67 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
158 156 152 150 144 142 138 136 132 130 116 114 98 96 88 86 38 116 121 37 116 88 14 21
CALL[ ]	/* CallFunction */";
};
width = 576;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(60,-19,o),
(63.667,-13.667,o),
(73,5,cs),
(478,768,ls),
(483.333,778.667,o),
(492,796.333,o),
(492,807,cs),
(492,815,o),
(489,821,o),
(477,821,cs),
(452.98,821,o),
(434.908,779.723,o),
(433,774,c),
(395.793,697.815,o),
(370.652,645.101,o),
(358,620.5,cs),
(338.856,583.276,o),
(306.957,522.212,o),
(253,423,cs),
(224.024,369.878,o),
(203.35,332.307,o),
(191.5,310,cs),
(182.767,293.562,o),
(172.671,277.22,o),
(166.5,266,cs),
(146.792,230.167,o),
(101.75,142.229,o),
(35,18,c),
(32.333,11.333,o),
(30,1,o),
(30,-7,cs),
(30,-15,o),
(34.667,-19,o),
(44,-19,cs)
);
},
{
closed = 1;
nodes = (
(472.233,-12,o),
(520,28.804,o),
(520,75,cs),
(520,117.043,o),
(480.534,152.866,o),
(448,161,c),
(473.92,169.64,o),
(515,197.993,o),
(515,245,cs),
(515,282.847,o),
(486.228,327,o),
(427,327,cs),
(369.667,327,o),
(331,286.333,o),
(331,241,cs),
(331,202.333,o),
(361,171.667,o),
(389,161,c),
(365.134,150.393,o),
(321,124.194,o),
(321,71,cs),
(321,14.125,o),
(374.636,-12,o),
(419,-12,cs)
);
},
{
closed = 1;
nodes = (
(380.667,12,o),
(358,42.667,o),
(358,76,cs),
(358,116,o),
(391.667,141,o),
(421,141,cs),
(450.333,141,o),
(483,117,o),
(483,77,cs),
(483,37,o),
(451.333,12,o),
(418,12,cs)
);
},
{
closed = 1;
nodes = (
(396.667,182,o),
(367,200.333,o),
(367,239,cs),
(367,268.333,o),
(383.333,301,o),
(426,301,cs),
(470.256,301,o),
(478,265.516,o),
(478,245,cs),
(478,206.333,o),
(450,182,o),
(422,182,cs)
);
},
{
closed = 1;
nodes = (
(97.667,491,o),
(103.667,494.333,o),
(107,501,cs),
(269,806,l),
(271,808.667,o),
(272,811.333,o),
(272,814,cs),
(272,822.667,o),
(266.333,827,o),
(255,827,cs),
(231.622,827,o),
(115.926,823,o),
(98,823,cs),
(83.333,823,o),
(79,815.667,o),
(79,809,cs),
(79,807.667,o),
(79.833,805.5,o),
(81.5,802.5,cs),
(83.167,799.5,o),
(87.667,798,o),
(95,798,cs),
(120.333,798,o),
(141.833,798.333,o),
(159.5,799,cs),
(177.167,799.667,o),
(197.667,800,o),
(221,800,cs),
(225,800,o),
(227,798.333,o),
(227,795,cs),
(227,787.184,o),
(201.125,740.616,o),
(151.5,649,cs),
(101.59,556.859,o),
(76,512.844,o),
(76,506,cs),
(76,496,o),
(80.333,491,o),
(89,491,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
57 41 2 5 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 10 8 2 8 10 2 104 0 2 0 7 6 2 7 91 0 6 0 5 4 6 5 91 0 8 8 0 83 9 1 0 0 12 67 0 4 4 3 83 0 3 3 21 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 10 8 2 8 10 2 104 0 2 0 7 6 2 7 91 0 6 0 5 4 6 5 91 0 8 8 0 83 9 1 0 0 12 67 0 4 4 3 83 0 3 3 24 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 10 8 2 8 10 2 104 0 2 0 7 6 2 7 91 0 6 0 5 4 6 5 91 0 8 8 0 83 9 1 0 0 14 67 0 4 4 3 83 0 3 3 24 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
129 127 122 115 111 106 96 94 88 86 82 80 76 74 68 66 48 46 32 30 22 20 11 15
CALL[ ]	/* CallFunction */";
};
width = 563;
}
);
note = seveneighths;
unicode = 8542;
},
{
glyphname = zeroinferior;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(101,202.588,o),
(110.476,267,o),
(146,267,cs),
(178.258,267,o),
(184,192.916,o),
(184,150,cs),
(184,106.667,o),
(180.5,77.333,o),
(173.5,62,cs),
(166.5,46.667,o),
(155.667,39,o),
(141,39,cs),
(109.837,39,o),
(101,95.671,o),
(101,143,cs)
);
},
{
closed = 1;
nodes = (
(30,17.973,o),
(79.282,-18,o),
(143,-18,cs),
(203.059,-18,o),
(256,26.837,o),
(256,149,cs),
(256,223.47,o),
(239.284,324,o),
(140,324,cs),
(52.961,324,o),
(30,229.881,o),
(30,135,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68 40 40 38 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 282;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(88,212,o),
(103,283,o),
(140,283,cs),
(177,283,o),
(185,203,o),
(185,154,cs),
(185,55,o),
(160,31,o),
(133,31,cs),
(99,31,o),
(88,94,o),
(88,147,cs)
);
},
{
closed = 1;
nodes = (
(31,25,o),
(79,-14,o),
(135,-14,cs),
(189,-14,o),
(243,34,o),
(243,153,cs),
(243,227,o),
(224,328,o),
(137,328,cs),
(55,328,o),
(31,229,o),
(31,139,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 21 3 68 40 40 40 37 4 30
CALL[ ]	/* CallFunction */";
};
width = 272;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(170.164,-10,o),
(225,38.948,o),
(225,157,cs),
(225,230.864,o),
(203.845,332,o),
(133,332,cs),
(61.277,332,o),
(33,229.459,o),
(33,143,cs),
(33,33.519,o),
(78.809,-10,o),
(124,-10,cs)
);
},
{
closed = 1;
nodes = (
(85.519,15,o),
(70,89.557,o),
(70,151,cs),
(70,224.469,o),
(92.93,307,o),
(133,307,cs),
(175.411,307,o),
(187,218.074,o),
(187,158,cs),
(187,57.733,o),
(155.293,15,o),
(123,15,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
0 2 0 1 0 2 1 91 0 0 0 3 83 0 3 3 24 3 68 40 40 40 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 258;
}
);
note = zeroinferior;
unicode = 8320;
},
{
glyphname = oneinferior;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(145.333,119.333,o),
(146.333,168.333,o),
(147,203,cs),
(147.667,237.667,o),
(148.333,263.333,o),
(149,280,cs),
(149.667,299.333,o),
(150,311,o),
(150,315,cs),
(150,320.333,o),
(149.167,323.667,o),
(147.5,325,cs),
(145.833,326.333,o),
(144,327,o),
(142,327,cs),
(136.638,327,o),
(107.279,323,o),
(54,323,cs),
(39.333,323,o),
(21,313.333,o),
(21,296,cs),
(21,274.667,o),
(31.333,270,o),
(54,270,cs),
(56,270,o),
(59.333,270.167,o),
(64,270.5,cs),
(68.667,270.833,o),
(71.667,271,o),
(73,271,cs),
(79,271,o),
(82,266.333,o),
(82,257,cs),
(82,222.936,o),
(80,226.817,o),
(80,183,cs),
(78.86,153.372,o),
(77.215,130.736,o),
(76.5,115,cs),
(75.92,102.251,o),
(75,86.719,o),
(75,73,cs),
(75,57,o),
(70,54,o),
(54,54,cs),
(39.333,54,o),
(22,46.667,o),
(22,28,cs),
(22,5.333,o),
(43,0,o),
(59,0,cs),
(161,0,ls),
(173,0,o),
(192,2.667,o),
(192,28,cs),
(192,50.667,o),
(175.667,56,o),
(157,56,cs),
(144,56,l),
(144,56,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
0 5 4 1 3 0 5 3 91 2 6 2 0 0 1 83 0 1 1 13 1 68 1 0 43 36 32 30 29 27 14 12 8 5 0 50 1 50 7 15
CALL[ ]	/* CallFunction */";
};
width = 210;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(131,111,o),
(132,162,o),
(133,199,cs),
(134,236,o),
(134,263,o),
(135,280,cs),
(136,301,o),
(136,313,o),
(136,316,cs),
(136,321,o),
(135,325,o),
(134,326,cs),
(132,327,o),
(130,328,o),
(128,328,cs),
(123,328,o),
(96,324,o),
(47,324,cs),
(36,324,o),
(21,316,o),
(21,303,cs),
(21,283,o),
(36,283,o),
(47,283,cs),
(50,283,o),
(55,283,o),
(61,284,cs),
(67,284,o),
(71,284,o),
(73,284,cs),
(82,284,o),
(82,273,o),
(82,270,cs),
(82,231,o),
(80,233,o),
(80,184,cs),
(79,151,o),
(77,126,o),
(77,109,cs),
(76,95,o),
(75,77,o),
(75,62,cs),
(75,45,o),
(68,43,o),
(47,43,cs),
(43,43,o),
(22,39,o),
(22,23,cs),
(22,3,o),
(42,1,o),
(52,1,cs),
(154,1,ls),
(163,1,o),
(178,3,o),
(178,23,cs),
(178,44,o),
(158,45,o),
(150,45,cs),
(130,45,l),
(130,45,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
5 1 4 0 3 0 4 3 91 2 6 2 0 0 1 84 0 1 1 13 1 68 2 1 49 45 44 42 38 33 19 17 11 8 1 56 2 56 7 26
CALL[ ]	/* CallFunction */";
};
width = 197;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(144,0,ls),
(153.333,0,o),
(158,1.333,o),
(158,12,cs),
(158,24,o),
(146.667,24,o),
(140,24,cs),
(110,24,l),
(111.333,95.333,o),
(112.333,150.5,o),
(113,189.5,cs),
(113.667,228.5,o),
(114.333,257.333,o),
(115,276,cs),
(115.667,298,o),
(116,311,o),
(116,315,cs),
(116,320.333,o),
(115.167,323.667,o),
(113.5,325,cs),
(111.833,326.333,o),
(110,327,o),
(108,327,cs),
(104.447,327,o),
(80.789,323,o),
(37,323,cs),
(30.333,323,o),
(21,318.667,o),
(21,312,cs),
(21,301.333,o),
(30.333,302,o),
(37,302,cs),
(41.667,302,o),
(48.167,302.167,o),
(56.5,302.5,cs),
(64.833,302.833,o),
(70.333,303,o),
(73,303,cs),
(82.333,303,o),
(82,294.333,o),
(82,289,cs),
(82,276.803,o),
(82.021,261.443,o),
(81.5,250.5,cs),
(80.833,236.5,o),
(80,217.667,o),
(80,183,cs),
(78.86,145.366,o),
(77.215,116.223,o),
(76.5,95.5,cs),
(75.941,79.284,o),
(75,58.599,o),
(75,41,cs),
(75,23.667,o),
(65,22,o),
(37,22,cs),
(33,22,o),
(22,20,o),
(22,12,cs),
(22,0,o),
(35.333,0,o),
(42,0,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
5 1 4 0 3 0 4 3 91 2 6 2 0 0 1 83 0 1 1 13 1 68 1 0 44 40 39 37 33 28 14 12 8 5 0 51 1 51 7 15
CALL[ ]	/* CallFunction */";
};
width = 178;
}
);
note = oneinferior;
unicode = 8321;
},
{
glyphname = twoinferior;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(189.333,58.333,o),
(185,58,o),
(177,58,cs),
(137,60,l),
(171.661,100.438,o),
(237,179.65,o),
(237,253,cs),
(237,298.333,o),
(207.667,335,o),
(133,335,cs),
(57.19,335,o),
(22,278.608,o),
(22,249,cs),
(22,230.333,o),
(30,212,o),
(62,212,cs),
(79.333,212,o),
(97,216.667,o),
(97,238,cs),
(97,245.333,o),
(95.167,249.667,o),
(91.5,251,cs),
(87.833,252.333,o),
(86,254.667,o),
(86,258,cs),
(86,264.667,o),
(106.333,280,o),
(129,280,cs),
(149,280,o),
(165,268.667,o),
(165,254,cs),
(165,176.869,o),
(85.485,65.608,o),
(23,18,cs),
(17.667,14,o),
(15,10.667,o),
(15,8,cs),
(15,6,o),
(16,3.333,o),
(18,0,cs),
(20,-3.333,o),
(25,-5,o),
(33,-5,cs),
(45.667,-5,o),
(53.833,-3.5,o),
(57.5,-0.5,cs),
(61.167,2.5,o),
(63.667,4.667,o),
(65,6,c),
(83,5.333,o),
(100.667,4.667,o),
(118,4,cs),
(148.667,2.667,o),
(184.333,2,o),
(211,2,cs),
(217.667,2,o),
(221.667,8.333,o),
(223,11,c),
(221.268,9.268,o),
(247,47.332,o),
(247,61,cs),
(247,69,o),
(239.667,78,o),
(225,78,cs),
(211.667,78,o),
(202.833,75.167,o),
(198.5,69.5,cs),
(194.167,63.833,o),
(191.333,60.333,o),
(190,59,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
11 1 1 6 1 66 0 1 6 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 4 3 0 3 4 0 104 0 0 6 6 0 94 0 5 0 3 4 5 3 91 0 6 6 1 84 2 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 4 3 0 3 4 0 104 0 0 6 6 0 94 0 5 0 3 4 5 3 91 0 6 6 1 84 0 1 1 13 67 0 2 2 16 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
39 38 39 43 34 105 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 269;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(184,49,o),
(183,47,o),
(183,47,c),
(182,46,l),
(113,49,l),
(153,89,o),
(226,176,o),
(226,254,cs),
(226,299,o),
(197,336,o),
(132,336,cs),
(60,336,o),
(25,276,o),
(25,250,cs),
(25,231,o),
(29,216,o),
(60,216,cs),
(71,216,o),
(86,223,o),
(86,244,cs),
(86,249,o),
(84,253,o),
(81,255,cs),
(77,256,o),
(75,259,o),
(75,262,cs),
(75,265,o),
(80,271,o),
(89,279,cs),
(98,287,o),
(111,291,o),
(128,291,cs),
(155,291,o),
(168,274,o),
(168,255,cs),
(168,178,o),
(88,67,o),
(26,19,cs),
(21,15,o),
(18,12,o),
(18,9,cs),
(18,7,o),
(19,5,o),
(21,2,cs),
(22,-1,o),
(27,-2,o),
(34,-2,cs),
(44,-2,o),
(51,-1,o),
(54,2,cs),
(57,4,o),
(60,6,o),
(61,7,c),
(78,6,o),
(95,6,o),
(112,5,cs),
(141,4,o),
(175,3,o),
(200,3,cs),
(203,3,o),
(206,4,o),
(208,7,cs),
(209,9,o),
(211,11,o),
(212,12,c),
(217,21,o),
(222,29,o),
(227,38,cs),
(232,47,o),
(235,54,o),
(235,59,cs),
(235,66,o),
(230,73,o),
(217,73,cs),
(208,73,o),
(195,68,o),
(187,53,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
61 1 6 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 5 0 3 4 5 3 91 0 6 6 1 83 2 1 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 5 0 3 4 5 3 91 0 6 6 1 83 0 1 1 13 67 0 2 2 16 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
23 38 39 43 34 103 35 7 33
CALL[ ]	/* CallFunction */";
};
width = 260;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(42.333,0,o),
(47.167,0.667,o),
(49.5,2,cs),
(51.833,3.333,o),
(53.667,4.667,o),
(55,6,c),
(71.667,5.333,o),
(88,4.667,o),
(104,4,cs),
(130.667,2.667,o),
(162.667,2,o),
(184,2,cs),
(187.333,2,o),
(189.833,3.167,o),
(191.5,5.5,cs),
(193.167,7.833,o),
(194.667,9.667,o),
(196,11,c),
(216.174,48.827,o),
(218,47.266,o),
(218,53,cs),
(218,54.333,o),
(217.333,56.167,o),
(216,58.5,cs),
(214.667,60.833,o),
(211.333,62,o),
(206,62,cs),
(196.667,62,o),
(193.667,56,o),
(191,52,cs),
(183.667,40,o),
(178.333,32.5,o),
(175,29.5,cs),
(171.667,26.5,o),
(169.333,25,o),
(168,25,cs),
(79,28,l),
(127.894,71.461,o),
(210,171.042,o),
(210,253,cs),
(210,298.333,o),
(182,335,o),
(130,335,cs),
(67.313,335,o),
(29,276.846,o),
(29,249,cs),
(29,229.667,o),
(36,220,o),
(50,220,cs),
(51.333,220,o),
(55,221.167,o),
(61,223.5,cs),
(67,225.833,o),
(70,232.333,o),
(70,243,cs),
(70,248.333,o),
(68.167,251.833,o),
(64.5,253.5,cs),
(60.833,255.167,o),
(59,257.667,o),
(59,261,cs),
(59,273.756,o),
(80.84,307,o),
(126,307,cs),
(160.667,307,o),
(172,284.667,o),
(172,254,cs),
(172,176.869,o),
(92.485,65.608,o),
(30,18,cs),
(24.667,14,o),
(22,10.667,o),
(22,8,cs),
(22,2.667,o),
(26.333,0,o),
(35,0,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 5 0 3 4 5 3 91 0 6 6 1 83 2 1 1 1 13 1 68 39 37 41 42 34 105 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 247;
}
);
note = twoinferior;
unicode = 8322;
},
{
glyphname = threeinferior;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(170.915,188.429,o),
(224,211.238,o),
(224,268,cs),
(224,324.265,o),
(174.051,332,o),
(138,332,cs),
(70.847,332,o),
(28,275.461,o),
(28,245,cs),
(28,233,o),
(37,225,o),
(49,225,cs),
(74.333,225,o),
(84,239.667,o),
(88,249,cs),
(96,267.667,o),
(110.667,290,o),
(132,290,cs),
(142.667,290,o),
(152,283.333,o),
(152,270,cs),
(152,224.545,o),
(96.985,198.418,o),
(60,172,cs),
(58.667,170.667,o),
(56,168.167,o),
(52,164.5,cs),
(48,160.833,o),
(46,156.333,o),
(46,151,cs),
(46,140.333,o),
(47.5,133,o),
(50.5,129,cs),
(53.5,125,o),
(56.667,123,o),
(60,123,cs),
(65.333,123,o),
(71.833,124.5,o),
(79.5,127.5,cs),
(87.167,130.5,o),
(96.667,132,o),
(108,132,cs),
(134.667,132,o),
(156,123.667,o),
(156,101,cs),
(156,59.149,o),
(106.129,41,o),
(73,41,cs),
(59.246,41,o),
(68.831,63,o),
(44,63,cs),
(25.333,63,o),
(16,46.333,o),
(16,29,cs),
(16,3.667,o),
(36.333,-9,o),
(77,-9,cs),
(144.728,-9,o),
(228,37.457,o),
(228,105,cs),
(228,149,o),
(193,174,o),
(153,174,cs),
(146.333,174,o),
(142.333,173.333,o),
(137,172,c),
(136,175,l),
(136,175,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
70 1 0 7 0 1 4 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 7 6 0 6 7 0 104 0 0 4 6 0 4 102 5 1 4 2 6 4 2 102 0 3 2 1 2 3 96 0 8 0 6 7 8 6 91 0 2 2 1 83 0 1 1 24 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 7 6 0 6 7 0 104 0 0 4 6 0 4 102 0 4 5 6 4 5 102 0 5 2 6 5 2 102 0 3 2 1 2 3 96 0 8 0 6 7 8 6 91 0 2 2 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 36 44 33 38 35 35 38 34 9 24
CALL[ ]	/* CallFunction */";
};
width = 253;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(62,172,o),
(59,169,o),
(55,166,cs),
(51,162,o),
(49,157,o),
(49,152,cs),
(49,142,o),
(51,136,o),
(55,134,cs),
(59,131,o),
(62,130,o),
(63,130,cs),
(66,130,o),
(72,132,o),
(81,135,cs),
(90,138,o),
(100,139,o),
(111,139,cs),
(138,139,o),
(159,129,o),
(159,102,cs),
(159,54,o),
(108,33,o),
(76,33,cs),
(57,33,o),
(61,55,o),
(40,55,cs),
(25,55,o),
(19,39,o),
(19,24,cs),
(19,3,o),
(45,-8,o),
(76,-8,cs),
(140,-8,o),
(217,43,o),
(217,106,cs),
(217,150,o),
(177,174,o),
(140,174,cs),
(137,174,o),
(135,174,o),
(133,174,cs),
(130,173,o),
(128,173,o),
(126,173,cs),
(123,172,o),
(121,172,o),
(120,172,c),
(149,185,o),
(213,217,o),
(213,281,cs),
(213,328,o),
(156,333,o),
(132,333,cs),
(67,333,o),
(31,273,o),
(31,246,cs),
(31,235,o),
(41,228,o),
(48,228,cs),
(67,228,o),
(74,241,o),
(77,250,c),
(89,279,o),
(108,297,o),
(125,297,cs),
(145,297,o),
(155,291,o),
(155,278,cs),
(155,222,o),
(100,200,o),
(63,173,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 10 1 9 7 0 9 7 102 0 7 8 0 7 8 102 0 2 0 0 1 2 0 91 0 8 8 6 83 0 6 6 24 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 0 9 10 0 9 10 102 0 10 7 0 10 7 102 0 7 8 0 7 8 102 0 2 0 0 1 2 0 91 0 8 8 6 83 0 6 6 24 6 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
68 66 65 63 35 36 38 33 17 25 38 36 39 11 35
CALL[ ]	/* CallFunction */";
};
width = 245;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(135.596,-9,o),
(201,52.717,o),
(201,105,cs),
(201,148.851,o),
(152.722,171,o),
(121,171,cs),
(118.333,171,o),
(115.833,170.833,o),
(113.5,170.5,cs),
(111.167,170.167,o),
(109,170,o),
(107,170,cs),
(104.333,169.333,o),
(102.333,169,o),
(101,169,c),
(111.667,179.667,o),
(197,213.038,o),
(197,280,cs),
(197,325.901,o),
(156.616,332,o),
(136,332,cs),
(71.145,332,o),
(35,272.35,o),
(35,245,cs),
(35,235,o),
(38.667,230,o),
(46,230,cs),
(54,230,o),
(58.333,239.667,o),
(61,249,cs),
(73,283.667,o),
(93,306,o),
(129,306,cs),
(153,306,o),
(159,295.667,o),
(159,277,cs),
(159,220.702,o),
(104.112,198.509,o),
(67,172,cs),
(65.667,170.667,o),
(63,168.167,o),
(59,164.5,cs),
(55,160.833,o),
(53,156.333,o),
(53,151,cs),
(53,140.333,o),
(64.333,139,o),
(67,139,cs),
(70.333,139,o),
(76.333,140.5,o),
(85,143.5,cs),
(93.667,146.5,o),
(103.667,148,o),
(115,148,cs),
(141.667,148,o),
(163,135.667,o),
(163,101,cs),
(163,47.006,o),
(111.268,17,o),
(80,17,cs),
(53.33,17,o),
(49.582,39,o),
(35,39,cs),
(24.333,39,o),
(23,29.667,o),
(23,23,cs),
(23,0.333,o),
(51.333,-9,o),
(74,-9,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
0 1 0 3 0 1 3 104 0 10 9 7 9 10 7 104 0 7 8 9 7 8 102 0 2 0 0 1 2 0 91 5 4 2 3 0 9 10 3 9 91 0 8 8 6 83 0 6 6 24 6 68 69 67 66 64 35 36 40 33 17 25 37 36 39 11 24
CALL[ ]	/* CallFunction */";
};
width = 233;
}
);
note = threeinferior;
unicode = 8323;
},
{
glyphname = fourinferior;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(264.333,66,o),
(270,83.333,o),
(270,94,cs),
(270,112.667,o),
(260.667,122,o),
(242,122,cs),
(237,122,l),
(240.81,167.722,o),
(250,228.453,o),
(250,304,cs),
(250,326.667,o),
(231.667,337,o),
(213,337,cs),
(197,337,o),
(180.667,328.333,o),
(174,319,cs),
(140.242,275.597,o),
(143.071,279.802,o),
(115.5,242.5,cs),
(99.162,220.396,o),
(62.928,172.095,o),
(22,117,cs),
(13.333,105.667,o),
(7.667,97.5,o),
(5,92.5,cs),
(2.333,87.5,o),
(1,82.333,o),
(1,77,cs),
(1,71,o),
(3.667,67.333,o),
(9,66,cs),
(14.333,64.667,o),
(22.667,64,o),
(34,64,cs),
(40,64,o),
(50.167,64,o),
(64.5,64,cs),
(78.833,64,o),
(93.333,64.333,o),
(108,65,cs),
(118.667,65.667,o),
(128.167,66,o),
(136.5,66,cs),
(144.833,66,o),
(154.333,66,o),
(165,66,c),
(164,55,ls),
(164,51,o),
(160.333,48.667,o),
(153,48,c),
(151,47.333,o),
(146.167,46.833,o),
(138.5,46.5,cs),
(130.833,46.167,o),
(123.667,45.667,o),
(117,45,cs),
(103.667,43.667,o),
(89,39.667,o),
(89,25,cs),
(89,5,o),
(107,0,o),
(119,0,cs),
(228,0,ls),
(254.667,0,o),
(264,4.333,o),
(264,23,cs),
(264,44.333,o),
(246.667,48,o),
(236,48,cs),
(232.667,48,o),
(231,48.667,o),
(231,50,cs),
(231,50.667,o),
(231.167,52.5,o),
(231.5,55.5,cs),
(231.833,58.5,o),
(232.333,62,o),
(233,66,c),
(243,66,l),
(243,66,l)
);
},
{
closed = 1;
nodes = (
(100,120,o),
(98,121.333,o),
(98,124,cs),
(98,125.333,o),
(98.667,126.667,o),
(100,128,cs),
(101.333,129.333,o),
(102.333,130.667,o),
(103,132,cs),
(178,240,l),
(169,123,l),
(154.333,121.667,o),
(140.333,120.833,o),
(127,120.5,cs),
(113.667,120.167,o),
(106,120,o),
(104,120,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
65 1 5 4 23 1 0 3 2 66 0 4 5 4 106 9 7 2 5 8 6 2 3 0 5 3 91 2 1 0 0 1 84 0 1 1 13 1 68 63 61 0 0 61 70 63 70 0 60 0 59 39 46 116 22 52 36 10 21
CALL[ ]	/* CallFunction */";
};
width = 294;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(254,79,o),
(259,94,o),
(259,101,cs),
(259,116,o),
(250,123,o),
(232,123,cs),
(219,123,l),
(220,144,o),
(232,301,o),
(232,309,cs),
(232,334,o),
(207,335,o),
(202,335,cs),
(189,335,o),
(173,324,o),
(170,320,cs),
(125,264,o),
(84,208,o),
(18,118,cs),
(12,110,o),
(8,104,o),
(7,100,cs),
(5,96,o),
(4,92,o),
(4,89,cs),
(4,80,o),
(13,76,o),
(30,76,cs),
(42,76,o),
(75,77,o),
(104,78,cs),
(115,79,o),
(125,79,o),
(135,79,cs),
(145,79,o),
(155,79,o),
(166,79,c),
(162,55,ls),
(159,44,o),
(153,43,o),
(142,40,cs),
(140,39,o),
(136,39,o),
(131,39,cs),
(125,38,o),
(119,38,o),
(113,37,cs),
(102,37,o),
(92,31,o),
(92,20,cs),
(92,5,o),
(106,1,o),
(115,1,cs),
(224,1,ls),
(239,1,o),
(253,1,o),
(253,20,cs),
(253,40,o),
(232,40,o),
(224,40,cs),
(220,40,o),
(215,42,o),
(215,50,cs),
(215,53,o),
(216,68,o),
(219,79,c),
(235,79,l),
(235,79,l)
);
},
{
closed = 1;
nodes = (
(82,121,o),
(80,122,o),
(80,125,cs),
(80,126,o),
(81,128,o),
(82,129,cs),
(83,130,o),
(84,132,o),
(85,133,cs),
(175,256,l),
(165,124,l),
(147,123,o),
(130,122,o),
(114,122,cs),
(97,121,o),
(88,121,o),
(86,121,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
67 1 6 5 1 66 23 1 0 1 65 0 5 6 5 106 10 8 2 6 9 7 2 4 0 6 4 91 3 2 2 0 0 1 84 0 1 1 13 1 68 65 63 1 1 63 72 65 72 1 62 1 61 41 43 117 17 20 52 38 11 33
CALL[ ]	/* CallFunction */";
};
width = 283;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(218,0,ls),
(228.667,0,o),
(237,0,o),
(237,12,cs),
(237,24,o),
(223.333,24,o),
(218,24,cs),
(206,24,o),
(189,23.333,o),
(189,34,cs),
(189,40.667,o),
(190.333,72.667,o),
(193,98,c),
(229,98,ls),
(239.667,98,o),
(243,107.333,o),
(243,110,cs),
(243,118,o),
(237.333,122,o),
(226,122,cs),
(193,122,l),
(196.289,200.946,o),
(206,291.792,o),
(206,308,cs),
(206,329.333,o),
(190,329,o),
(186,329,cs),
(176.667,329,o),
(166.667,321.667,o),
(164,319,cs),
(118.744,263.458,o),
(78.329,207.018,o),
(12,117,cs),
(8,111.667,o),
(8,108.667,o),
(8,106,cs),
(8,98,o),
(13.333,94,o),
(24,94,cs),
(30,94,o),
(40.167,94.333,o),
(54.5,95,cs),
(68.833,95.667,o),
(83.333,96.333,o),
(98,97,cs),
(108.667,97.667,o),
(119,98,o),
(129,98,cs),
(139,98,o),
(149.333,98,o),
(160,98,c),
(156,39,ls),
(156,28.333,o),
(148,25.333,o),
(136,24,c),
(134,23.333,o),
(130.167,22.833,o),
(124.5,22.5,cs),
(118.833,22.167,o),
(113,21.667,o),
(107,21,cs),
(101.667,21,o),
(96,15.667,o),
(96,9,cs),
(96,2.333,o),
(103.667,0,o),
(109,0,cs)
);
},
{
closed = 1;
nodes = (
(56,120,o),
(54,121.333,o),
(54,124,cs),
(54,125.333,o),
(54.667,126.667,o),
(56,128,cs),
(57.333,129.333,o),
(58.333,130.667,o),
(59,132,cs),
(171,280,l),
(159,123,l),
(135.667,121.667,o),
(114,120.833,o),
(94,120.5,cs),
(74,120.167,o),
(62.667,120,o),
(60,120,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
64 1 6 5 1 66 22 1 0 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 5 6 5 106 3 2 2 0 4 1 6 0 96 10 8 2 6 9 7 2 4 0 6 4 91 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 5 6 5 106 3 2 2 0 4 1 4 0 1 104 10 8 2 6 9 7 2 4 0 6 4 91 0 1 1 13 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
63 60 0 0 60 69 63 69 0 59 0 58 39 43 117 17 20 52 37 11 22
CALL[ ]	/* CallFunction */";
};
width = 267;
}
);
note = fourinferior;
unicode = 8324;
},
{
glyphname = fiveinferior;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(155.578,297.894,o),
(65.913,305.825,o),
(55,284,cs),
(53.108,280.216,o),
(45.08,237.724,o),
(36,156,cs),
(34.667,149.333,o),
(34,140,o),
(34,136,cs),
(34,116.667,o),
(37.667,107,o),
(45,107,cs),
(80.582,107,o),
(88.436,146,o),
(132,146,cs),
(168,146,o),
(178,125.667,o),
(178,107,cs),
(178,71.015,o),
(149.846,30,o),
(110,30,cs),
(86,30,o),
(79,41.333,o),
(79,52,cs),
(79,66.619,o),
(88,60.214,o),
(88,76,cs),
(88,87.333,o),
(78.667,93,o),
(60,93,cs),
(46.667,93,o),
(20,75,o),
(20,43,cs),
(20,27.639,o),
(26.619,-12,o),
(99,-12,cs),
(167.946,-12,o),
(250,42.862,o),
(250,109,cs),
(250,169,o),
(215,204,o),
(155,204,cs),
(139.155,204,o),
(109.011,193.352,o),
(101,180,c),
(111,236,l),
(126.06,236,o),
(177.025,254.512,o),
(190,261,cs),
(211.624,273.013,o),
(242,303.072,o),
(242,322,cs),
(242,324.667,o),
(240.667,328.167,o),
(238,332.5,cs),
(235.333,336.833,o),
(227.667,339,o),
(215,339,cs),
(200.333,339,o),
(190.667,330.667,o),
(188,328,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 1 0 17 1 6 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 1 0 106 0 1 2 1 106 0 7 6 4 6 7 4 104 0 4 5 5 4 94 0 2 0 6 7 2 6 91 0 5 5 3 84 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 1 0 106 0 1 2 1 106 0 7 6 4 6 7 4 104 0 4 5 5 4 94 0 2 0 6 7 2 6 91 0 5 5 3 84 0 3 3 24 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 0 1 0 106 0 1 2 1 106 0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 2 0 6 7 2 6 91 0 5 5 3 84 0 3 3 24 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
35 38 40 38 38 37 27 34 8 23
CALL[ ]	/* CallFunction */";
};
width = 272;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(157,299,o),
(67,307,o),
(56,285,cs),
(54,280,o),
(48,238,o),
(37,157,cs),
(36,150,o),
(35,141,o),
(35,137,cs),
(35,122,o),
(39,114,o),
(46,114,cs),
(74,114,o),
(90,153,o),
(133,153,cs),
(170,153,o),
(179,122,o),
(179,108,cs),
(179,67,o),
(152,25,o),
(90,25,cs),
(77,25,o),
(66,32,o),
(66,47,cs),
(66,63,o),
(80,54,o),
(80,71,cs),
(80,82,o),
(72,88,o),
(55,88,cs),
(42,88,o),
(21,72,o),
(21,44,cs),
(21,20,o),
(39,-11,o),
(88,-11,cs),
(166,-11,o),
(237,45,o),
(237,110,cs),
(237,166,o),
(203,199,o),
(147,199,cs),
(126,199,o),
(101,188,o),
(88,175,c),
(101,249,l),
(120,253,o),
(175,266,o),
(190,275,cs),
(209,284,o),
(229,308,o),
(229,323,cs),
(229,326,o),
(228,329,o),
(226,333,cs),
(224,336,o),
(218,338,o),
(209,338,cs),
(198,338,o),
(192,332,o),
(189,329,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
68 1 1 0 16 1 5 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 1 0 106 0 6 5 3 5 6 3 104 0 3 4 4 3 94 0 1 0 5 6 1 5 91 0 4 4 2 84 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 0 1 0 106 0 6 5 3 5 6 3 104 0 3 4 5 3 4 102 0 1 0 5 6 1 5 91 0 4 4 2 84 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
35 40 40 36 38 45 35 7 33
CALL[ ]	/* CallFunction */";
};
width = 261;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(154.67,-12,o),
(219,41.858,o),
(219,109,cs),
(219,159.667,o),
(184,188,o),
(136,188,cs),
(105.333,188,o),
(88.667,177.333,o),
(70,164,c),
(87,268,l),
(100.391,271.826,o),
(171.929,283.964,o),
(192,294,cs),
(201.333,299.333,o),
(211,314,o),
(211,322,cs),
(211,327.333,o),
(207.667,334,o),
(201,334,cs),
(198.333,334,o),
(195,332,o),
(191,328,cs),
(158.578,297.894,o),
(68.913,305.825,o),
(58,284,cs),
(55.744,279.487,o),
(50.01,236.742,o),
(39,156,cs),
(37.667,149.333,o),
(37,140,o),
(37,136,cs),
(37,127.333,o),
(40.667,123,o),
(48,123,cs),
(63.526,123,o),
(93.222,162,o),
(135,162,cs),
(177.954,162,o),
(181,122.384,o),
(181,107,cs),
(181,60.925,o),
(154.142,14,o),
(92,14,cs),
(68,14,o),
(48,21.333,o),
(48,36,cs),
(48,50.129,o),
(68,44.365,o),
(68,60,cs),
(68,71.333,o),
(61.333,77,o),
(48,77,cs),
(34.667,77,o),
(23,65.667,o),
(23,43,cs),
(23,19,o),
(40.667,-12,o),
(90,-12,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
66 1 1 0 14 1 5 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 1 0 106 0 6 5 3 5 6 3 104 0 3 4 4 3 94 0 1 0 5 6 1 5 91 0 4 4 2 84 0 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 1 0 106 0 6 5 3 5 6 3 104 0 3 4 4 3 94 0 1 0 5 6 1 5 91 0 4 4 2 84 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 0 1 0 106 0 6 5 3 5 6 3 104 0 3 4 5 3 4 102 0 1 0 5 6 1 5 91 0 4 4 2 84 0 2 2 24 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
35 40 40 36 38 45 33 7 22
CALL[ ]	/* CallFunction */";
};
width = 245;
}
);
note = fiveinferior;
unicode = 8325;
},
{
glyphname = sixinferior;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(193,298.667,o),
(194,304,o),
(194,308,cs),
(194,322.667,o),
(170.667,327,o),
(160,327,cs),
(152.667,327,o),
(144.333,323.667,o),
(135,317,cs),
(90.75,283.813,o),
(21,185.477,o),
(21,101,cs),
(21,18.305,o),
(80.231,-12,o),
(142,-12,cs),
(198.914,-12,o),
(247,21.335,o),
(247,77,cs),
(247,125,o),
(212,162,o),
(152,162,cs),
(129.333,162,o),
(111.667,154.667,o),
(101,148,cs),
(94.333,144,o),
(88.667,139.667,o),
(84,135,c),
(84,180.814,o),
(157.512,270.01,o),
(185,292,cs)
);
},
{
closed = 1;
nodes = (
(122.23,38,o),
(95,48.481,o),
(95,82,cs),
(95,100.667,o),
(103,126,o),
(135,126,cs),
(161.667,126,o),
(175,103.667,o),
(175,81,cs),
(175,49.048,o),
(149.069,38,o),
(136,38,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 2 0 2 106 5 1 3 4 1 4 3 1 104 0 0 0 4 3 0 4 91 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 2 0 2 106 5 1 3 4 1 4 3 1 104 0 0 0 4 3 0 4 91 0 1 1 24 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
37 36 45 43 36 51 37 51 42 38 41 6 18
CALL[ ]	/* CallFunction */";
};
width = 255;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(183,300,o),
(188,306,o),
(188,311,cs),
(188,324,o),
(169,328,o),
(162,328,cs),
(155,328,o),
(147,325,o),
(138,318,cs),
(94,288,o),
(24,185,o),
(24,98,cs),
(24,21,o),
(77,-11,o),
(125,-11,cs),
(176,-11,o),
(236,23,o),
(236,80,cs),
(236,125,o),
(198,163,o),
(141,163,cs),
(99,163,o),
(73,138,o),
(73,128,cs),
(73,178,o),
(146,270,o),
(174,293,cs)
);
},
{
closed = 1;
nodes = (
(110,29,o),
(84,42,o),
(84,77,cs),
(84,97,o),
(94,131,o),
(131,131,cs),
(160,131,o),
(178,109,o),
(178,80,cs),
(178,41,o),
(147,29,o),
(129,29,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 2 0 2 106 0 0 0 4 3 0 4 91 5 1 3 3 1 83 0 1 1 24 1 68 37 36 45 43 36 51 37 51 42 38 42 6 29
CALL[ ]	/* CallFunction */";
};
width = 249;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(175.333,-12,o),
(221,24.667,o),
(221,82,cs),
(221,122.01,o),
(198.181,162,o),
(137,162,cs),
(74.512,162,o),
(60.864,124.593,o),
(58,116,c),
(60.727,178.728,o),
(127.272,263.156,o),
(159,292,cs),
(165,297.333,o),
(169.833,301,o),
(173.5,303,cs),
(177.167,305,o),
(179,308.333,o),
(179,313,cs),
(179,325,o),
(167.667,327,o),
(165,327,cs),
(163.667,327,o),
(161,326.167,o),
(157,324.5,cs),
(153,322.833,o),
(148.333,320.333,o),
(143,317,cs),
(98.463,284.34,o),
(29,190.994,o),
(29,91,cs),
(29,16.333,o),
(67.333,-12,o),
(118,-12,cs)
);
},
{
closed = 1;
nodes = (
(92.333,12,o),
(69,30,o),
(69,66,cs),
(69,92.758,o),
(82.339,137,o),
(126,137,cs),
(156.667,137,o),
(183,114.667,o),
(183,76,cs),
(183,31.047,o),
(148.628,12,o),
(119,12,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 106 0 0 0 4 3 0 4 91 5 1 3 3 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 106 0 0 0 4 3 0 4 91 5 1 3 3 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
36 35 44 42 35 50 36 50 41 38 41 6 18
CALL[ ]	/* CallFunction */";
};
width = 240;
}
);
note = sixinferior;
unicode = 8326;
},
{
glyphname = seveninferior;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(13,-0.667,o),
(27,-11,o),
(43,-11,cs),
(59.667,-11,o),
(71.333,-5.667,o),
(78,5,c),
(225,286,ls),
(233,301.333,o),
(238,311.167,o),
(240,315.5,cs),
(242,319.833,o),
(243,323.333,o),
(243,326,cs),
(243,327.333,o),
(242,328.5,o),
(240,329.5,cs),
(238,330.5,o),
(233.333,331,o),
(226,331,cs),
(201.595,331,o),
(74.158,327,o),
(52,327,cs),
(37.333,327,o),
(24,315.667,o),
(24,297,cs),
(24,282.333,o),
(34.333,270,o),
(49,270,cs),
(74.589,270,o),
(105.387,272,o),
(129,272,cs),
(133,272,o),
(135,270.333,o),
(135,267,cs),
(135,261.775,o),
(114.819,218.863,o),
(74,138.5,cs),
(33.181,58.137,o),
(13,15.225,o),
(13,10,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
0 1 0 0 2 1 0 91 0 2 2 24 2 68 39 116 120 3 18
CALL[ ]	/* CallFunction */";
};
width = 237;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(17,0,o),
(28,-8,o),
(40,-8,cs),
(53,-8,o),
(63,-3,o),
(68,6,cs),
(221,296,ls),
(226,305,o),
(230,312,o),
(231,315,cs),
(232,318,o),
(233,321,o),
(233,324,cs),
(233,329,o),
(227,332,o),
(216,332,cs),
(190,332,o),
(76,328,o),
(49,328,cs),
(34,328,o),
(25,319,o),
(25,304,cs),
(25,293,o),
(31,283,o),
(46,283,cs),
(79,283,o),
(116,285,o),
(145,285,cs),
(149,285,o),
(151,283,o),
(151,280,cs),
(151,272,o),
(122,218,o),
(84,145,cs),
(46,72,o),
(17,17,o),
(17,11,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
0 1 0 0 2 1 0 91 0 2 2 24 2 68 38 116 121 3 29
CALL[ ]	/* CallFunction */";
};
width = 229;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(42.667,-5,o),
(48.667,-1.667,o),
(52,5,cs),
(214,310,l),
(216,312.667,o),
(217,315.333,o),
(217,318,cs),
(217,326.667,o),
(211.333,331,o),
(200,331,cs),
(176.622,331,o),
(60.926,327,o),
(43,327,cs),
(28.333,327,o),
(24,319.667,o),
(24,313,cs),
(24,311.667,o),
(24.833,309.5,o),
(26.5,306.5,cs),
(28.167,303.5,o),
(32.667,302,o),
(40,302,cs),
(65.333,302,o),
(86.833,302.333,o),
(104.5,303,cs),
(122.167,303.667,o),
(142.667,304,o),
(166,304,cs),
(170,304,o),
(172,302.333,o),
(172,299,cs),
(172,291.184,o),
(146.125,244.616,o),
(96.5,153,cs),
(46.59,60.859,o),
(21,16.844,o),
(21,10,cs),
(21,0,o),
(25.333,-5,o),
(34,-5,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
0 1 0 0 2 1 0 91 0 2 2 16 2 68 37 116 88 3 18
CALL[ ]	/* CallFunction */";
};
width = 218;
}
);
note = seveninferior;
unicode = 8327;
},
{
glyphname = eightinferior;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(24,15,o),
(68,-12,o),
(140,-12,cs),
(216,-12,o),
(257,25.667,o),
(257,75,cs),
(257,117.667,o),
(234.333,153,o),
(185,161,c),
(212.026,164.003,o),
(252,193.087,o),
(252,245,cs),
(252,284.793,o),
(211.675,327,o),
(144,327,cs),
(70.667,327,o),
(34,286.333,o),
(34,241,cs),
(34,198.333,o),
(64,165,o),
(92,161,c),
(58.667,155.667,o),
(24,121.667,o),
(24,71,cs)
);
},
{
closed = 1;
nodes = (
(95,114.878,o),
(123.3,125,o),
(141,125,cs),
(177,125,o),
(186,101.667,o),
(186,79,cs),
(186,63,o),
(173,42,o),
(141,42,cs),
(118.333,42,o),
(95,51,o),
(95,79,cs)
);
},
{
closed = 1;
nodes = (
(104,263.667,o),
(127,269,o),
(143,269,cs),
(159,269,o),
(181,263.667,o),
(181,229,cs),
(181,215.667,o),
(168.667,198,o),
(142,198,cs),
(127.333,198,o),
(104,205,o),
(104,233,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
19 3 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 2 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 2 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 38 36 36 46 40 6 21
CALL[ ]	/* CallFunction */";
};
width = 282;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(27,16,o),
(78,-11,o),
(139,-11,cs),
(207,-11,o),
(246,31,o),
(246,76,cs),
(246,119,o),
(217,154,o),
(174,162,c),
(196,164,o),
(241,198,o),
(241,246,cs),
(241,283,o),
(204,328,o),
(138,328,cs),
(71,328,o),
(37,287,o),
(37,242,cs),
(37,201,o),
(69,167,o),
(95,162,c),
(66,154,o),
(27,125,o),
(27,72,cs)
);
},
{
closed = 1;
nodes = (
(84,116,o),
(114,132,o),
(137,132,cs),
(170,132,o),
(189,108,o),
(189,79,cs),
(189,54,o),
(169,32,o),
(137,32,cs),
(108,32,o),
(84,48,o),
(84,79,cs)
);
},
{
closed = 1;
nodes = (
(93,267,o),
(115,282,o),
(140,282,cs),
(161,282,o),
(184,271,o),
(184,236,cs),
(184,216,o),
(167,193,o),
(138,193,cs),
(123,193,o),
(93,202,o),
(93,236,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
24 6 2 3 4 1 66 0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 2 1 83 0 1 1 24 1 68 36 38 36 36 46 45 6 32
CALL[ ]	/* CallFunction */";
};
width = 274;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(182.233,-12,o),
(230,28.804,o),
(230,75,cs),
(230,117.043,o),
(190.534,152.866,o),
(158,161,c),
(183.92,169.64,o),
(225,197.993,o),
(225,245,cs),
(225,282.847,o),
(196.228,327,o),
(137,327,cs),
(79.667,327,o),
(41,286.333,o),
(41,241,cs),
(41,202.333,o),
(71,171.667,o),
(99,161,c),
(75.134,150.393,o),
(31,124.194,o),
(31,71,cs),
(31,14.125,o),
(84.636,-12,o),
(129,-12,cs)
);
},
{
closed = 1;
nodes = (
(90.667,12,o),
(68,42.667,o),
(68,76,cs),
(68,116,o),
(101.667,141,o),
(131,141,cs),
(160.333,141,o),
(193,117,o),
(193,77,cs),
(193,37,o),
(161.333,12,o),
(128,12,cs)
);
},
{
closed = 1;
nodes = (
(106.667,182,o),
(77,200.333,o),
(77,239,cs),
(77,268.333,o),
(93.333,301,o),
(136,301,cs),
(180.256,301,o),
(188,265.516,o),
(188,245,cs),
(188,206.333,o),
(160,182,o),
(132,182,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
21 5 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 2 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 2 1 83 0 1 1 24 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
60 58 52 50 46 44 40 38 32 30 42 6 16
CALL[ ]	/* CallFunction */";
};
width = 262;
}
);
note = eightinferior;
unicode = 8328;
},
{
glyphname = nineinferior;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(63,16,o),
(62,13.333,o),
(62,4,cs),
(62,-9.333,o),
(78,-15,o),
(94,-15,cs),
(106,-15,o),
(111.333,-11.667,o),
(122,-5,cs),
(164.667,27,o),
(234,115.667,o),
(234,221,cs),
(234,290.333,o),
(196,327,o),
(128,327,cs),
(69.944,327,o),
(15,302.93,o),
(15,232,cs),
(15,178.667,o),
(49,134,o),
(109,134,cs),
(156.073,134,o),
(173.418,172.253,o),
(176,180,c),
(172,137.333,o),
(132.333,82.667,o),
(75,28,cs)
);
},
{
closed = 1;
nodes = (
(149.333,277,o),
(166,266.333,o),
(166,233,cs),
(166,214.333,o),
(154.667,191,o),
(124,191,cs),
(92,191,o),
(80,211.333,o),
(80,234,cs),
(80,268.667,o),
(104,277,o),
(120,277,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
3 1 0 4 1 66 0 1 5 1 3 4 1 3 91 0 4 0 0 2 4 0 91 0 2 2 21 2 68 34 33 40 38 33 44 34 44 41 38 39 6 18
CALL[ ]	/* CallFunction */";
};
width = 256;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(75,24,o),
(71,20,o),
(68,17,cs),
(64,13,o),
(62,9,o),
(62,4,cs),
(62,-7,o),
(76,-13,o),
(87,-13,cs),
(94,-13,o),
(103,-10,o),
(112,-3,cs),
(155,27,o),
(225,124,o),
(225,223,cs),
(225,295,o),
(192,328,o),
(132,328,cs),
(73,328,o),
(17,297,o),
(17,231,cs),
(17,183,o),
(46,140,o),
(107,140,cs),
(143,140,o),
(170,155,o),
(177,187,c),
(177,138,o),
(114,57,o),
(78,27,cs)
);
},
{
closed = 1;
nodes = (
(145,288,o),
(170,278,o),
(170,238,cs),
(170,211,o),
(155,184,o),
(119,184,cs),
(87,184,o),
(70,206,o),
(70,235,cs),
(70,274,o),
(97,288,o),
(121,288,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
6 1 4 3 1 66 0 1 5 1 3 4 1 3 91 0 4 0 0 2 4 0 91 0 2 2 21 2 68 34 33 40 38 33 44 34 44 40 38 40 6 29
CALL[ ]	/* CallFunction */";
};
width = 250;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(77.333,-12,o),
(80,-11.167,o),
(84,-9.5,cs),
(88,-7.833,o),
(92.667,-5.333,o),
(98,-2,cs),
(142.594,27.729,o),
(212,127.179,o),
(212,224,cs),
(212,298.667,o),
(173.667,327,o),
(123,327,cs),
(65.667,327,o),
(20,285.333,o),
(20,228,cs),
(20,187.99,o),
(42.819,148,o),
(104,148,cs),
(159.747,148,o),
(173.147,178.442,o),
(178,193,c),
(175.275,130.336,o),
(111.333,49.667,o),
(82,23,cs),
(76,17.667,o),
(71.167,14,o),
(67.5,12,cs),
(63.833,10,o),
(62,6.667,o),
(62,2,cs),
(62,-10,o),
(73.333,-12,o),
(76,-12,cs)
);
},
{
closed = 1;
nodes = (
(80.333,171,o),
(55,195.333,o),
(55,234,cs),
(55,278.726,o),
(93.631,304,o),
(122,304,cs),
(148.667,304,o),
(175,285,o),
(175,249,cs),
(175,219.696,o),
(153.71,171,o),
(111,171,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 4 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 5 1 3 4 1 3 91 0 4 0 0 2 4 0 91 0 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 1 5 1 3 4 1 3 91 0 4 0 0 2 4 0 91 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
36 35 44 42 35 50 36 50 41 38 41 6 18
CALL[ ]	/* CallFunction */";
};
width = 241;
}
);
note = nineinferior;
unicode = 8329;
},
{
glyphname = zerosuperior;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,715.588,o),
(108.476,780,o),
(144,780,cs),
(176.258,780,o),
(182,705.916,o),
(182,663,cs),
(182,619.667,o),
(178.5,590.333,o),
(171.5,575,cs),
(164.5,559.667,o),
(153.667,552,o),
(139,552,cs),
(107.837,552,o),
(99,608.671,o),
(99,656,cs)
);
},
{
closed = 1;
nodes = (
(28,530.973,o),
(77.282,495,o),
(141,495,cs),
(201.059,495,o),
(254,539.837,o),
(254,662,cs),
(254,736.47,o),
(237.284,837,o),
(138,837,cs),
(50.961,837,o),
(28,742.881,o),
(28,648,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 3 0 3 87 0 1 1 2 83 0 2 2 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 1 0 2 1 91 0 0 3 3 0 79 0 0 0 3 83 0 3 0 3 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
40 40 38 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 279;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(88,720.933,o),
(102.537,792,o),
(140,792,cs),
(176.593,792,o),
(185,712.371,o),
(185,663,cs),
(185,564.357,o),
(159.974,540,o),
(133,540,cs),
(99.22,540,o),
(88,603.312,o),
(88,656,cs)
);
},
{
closed = 1;
nodes = (
(31,533.82,o),
(78.933,495,o),
(135,495,cs),
(188.91,495,o),
(243,543.163,o),
(243,662,cs),
(243,735.768,o),
(223.808,837,o),
(137,837,cs),
(54.944,837,o),
(31,738.487,o),
(31,648,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 3 0 3 87 0 1 1 2 83 0 2 2 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 1 0 2 1 91 0 0 3 3 0 79 0 0 0 3 83 0 3 0 3 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
40 40 40 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 271;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(172.164,495,o),
(227,543.948,o),
(227,662,cs),
(227,735.864,o),
(205.845,837,o),
(135,837,cs),
(63.277,837,o),
(35,734.459,o),
(35,648,cs),
(35,538.519,o),
(80.809,495,o),
(126,495,cs)
);
},
{
closed = 1;
nodes = (
(87.519,520,o),
(72,594.557,o),
(72,656,cs),
(72,729.469,o),
(94.93,812,o),
(135,812,cs),
(177.411,812,o),
(189,723.074,o),
(189,663,cs),
(189,562.733,o),
(157.293,520,o),
(125,520,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 3 0 3 87 0 1 1 2 83 0 2 2 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 1 0 2 1 91 0 0 3 3 0 79 0 0 0 3 83 0 3 0 3 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
40 40 40 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 260;
}
);
note = zerosuperior;
unicode = 8304;
},
{
glyphname = onesuperior;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(145.333,619.333,o),
(146.333,668.333,o),
(147,703,cs),
(147.667,737.667,o),
(148.333,763.333,o),
(149,780,cs),
(149.667,799.333,o),
(150,811,o),
(150,815,cs),
(150,820.333,o),
(149.167,823.667,o),
(147.5,825,cs),
(145.833,826.333,o),
(144,827,o),
(142,827,cs),
(136.638,827,o),
(107.279,823,o),
(54,823,cs),
(39.333,823,o),
(21,813.333,o),
(21,796,cs),
(21,774.667,o),
(31.333,770,o),
(54,770,cs),
(56,770,o),
(59.333,770.167,o),
(64,770.5,cs),
(68.667,770.833,o),
(71.667,771,o),
(73,771,cs),
(79,771,o),
(82,766.333,o),
(82,757,cs),
(82,722.936,o),
(80,726.817,o),
(80,683,cs),
(78.86,653.372,o),
(77.215,630.736,o),
(76.5,615,cs),
(75.92,602.251,o),
(75,586.719,o),
(75,573,cs),
(75,557,o),
(70,554,o),
(54,554,cs),
(39.333,554,o),
(22,546.667,o),
(22,528,cs),
(22,505.333,o),
(43,500,o),
(59,500,cs),
(161,500,ls),
(173,500,o),
(192,502.667,o),
(192,528,cs),
(192,550.667,o),
(175.667,556,o),
(157,556,cs),
(144,556,l),
(144,556,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
2 6 2 0 0 1 0 1 87 4 1 3 3 5 83 0 5 5 12 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
2 6 2 0 0 1 0 1 87 4 1 3 3 5 83 0 5 5 14 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
1 0 43 36 32 30 29 27 14 12 8 5 0 50 1 50 7 15
CALL[ ]	/* CallFunction */";
};
width = 210;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(131.333,610,o),
(132.333,661.333,o),
(133,698,cs),
(133.667,734.667,o),
(134.333,761.667,o),
(135,779,cs),
(135.667,799.667,o),
(136,811.667,o),
(136,815,cs),
(136,820.333,o),
(135.167,823.667,o),
(133.5,825,cs),
(131.833,826.333,o),
(130,827,o),
(128,827,cs),
(122.63,827,o),
(95.636,823,o),
(47,823,cs),
(36.333,823,o),
(21,815.333,o),
(21,802,cs),
(21,782,o),
(36.333,782,o),
(47,782,cs),
(50.333,782,o),
(55,782.167,o),
(61,782.5,cs),
(67,782.833,o),
(71,783,o),
(73,783,cs),
(82.333,783,o),
(82,771.667,o),
(82,769,cs),
(82,730.223,o),
(80,731.848,o),
(80,683,cs),
(78.832,650.302,o),
(77.206,625.161,o),
(76.5,607.5,cs),
(75.956,593.905,o),
(75,575.904,o),
(75,561,cs),
(75,543.667,o),
(68.333,542,o),
(47,542,cs),
(43,542,o),
(22,538,o),
(22,522,cs),
(22,501.722,o),
(41.722,500,o),
(52,500,cs),
(154,500,ls),
(163.333,500,o),
(178,502,o),
(178,522,cs),
(178,542.939,o),
(158.046,544,o),
(150,544,cs),
(130,544,l),
(130,544,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
2 6 2 0 0 1 0 1 88 0 3 3 4 83 5 1 4 4 12 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
2 6 2 0 0 1 0 1 88 0 3 3 4 83 5 1 4 4 14 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
1 0 48 44 43 41 37 32 18 16 10 7 0 55 1 55 7 15
CALL[ ]	/* CallFunction */";
};
width = 197;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(144,500,ls),
(153.333,500,o),
(158,501.333,o),
(158,512,cs),
(158,524,o),
(146.667,524,o),
(140,524,cs),
(110,524,l),
(111.333,595.333,o),
(112.333,650.5,o),
(113,689.5,cs),
(113.667,728.5,o),
(114.333,757.333,o),
(115,776,cs),
(115.667,798,o),
(116,811,o),
(116,815,cs),
(116,820.333,o),
(115.167,823.667,o),
(113.5,825,cs),
(111.833,826.333,o),
(110,827,o),
(108,827,cs),
(104.447,827,o),
(80.789,823,o),
(37,823,cs),
(30.333,823,o),
(21,818.667,o),
(21,812,cs),
(21,801.333,o),
(30.333,802,o),
(37,802,cs),
(41.667,802,o),
(48.167,802.167,o),
(56.5,802.5,cs),
(64.833,802.833,o),
(70.333,803,o),
(73,803,cs),
(82.333,803,o),
(82,794.333,o),
(82,789,cs),
(82,776.803,o),
(82.021,761.443,o),
(81.5,750.5,cs),
(80.833,736.5,o),
(80,717.667,o),
(80,683,cs),
(78.86,645.366,o),
(77.215,616.223,o),
(76.5,595.5,cs),
(75.941,579.284,o),
(75,558.599,o),
(75,541,cs),
(75,523.667,o),
(65,522,o),
(37,522,cs),
(33,522,o),
(22,520,o),
(22,512,cs),
(22,500,o),
(35.333,500,o),
(42,500,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
2 6 2 0 0 1 0 1 87 0 3 3 4 83 5 1 4 4 12 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
2 6 2 0 0 1 0 1 87 0 3 3 4 83 5 1 4 4 14 3 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
1 0 44 40 39 37 33 28 14 12 8 5 0 51 1 51 7 15
CALL[ ]	/* CallFunction */";
};
width = 179;
}
);
note = onesuperior;
unicode = 185;
},
{
glyphname = twosuperior;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(189.333,559.333,o),
(185,559,o),
(177,559,cs),
(137,561,l),
(171.661,601.438,o),
(237,680.65,o),
(237,754,cs),
(237,799.333,o),
(207.667,836,o),
(133,836,cs),
(57.19,836,o),
(22,779.608,o),
(22,750,cs),
(22,731.333,o),
(30,713,o),
(62,713,cs),
(79.333,713,o),
(97,717.667,o),
(97,739,cs),
(97,746.333,o),
(95.167,750.667,o),
(91.5,752,cs),
(87.833,753.333,o),
(86,755.667,o),
(86,759,cs),
(86,765.667,o),
(106.333,781,o),
(129,781,cs),
(149,781,o),
(165,769.667,o),
(165,755,cs),
(165,677.869,o),
(85.485,566.608,o),
(23,519,cs),
(17.667,515,o),
(15,511.667,o),
(15,509,cs),
(15,507,o),
(16,504.333,o),
(18,501,cs),
(20,497.667,o),
(25,496,o),
(33,496,cs),
(45.667,496,o),
(53.833,497.5,o),
(57.5,500.5,cs),
(61.167,503.5,o),
(63.667,505.667,o),
(65,507,c),
(83,506.333,o),
(100.667,505.667,o),
(118,505,cs),
(148.667,503.667,o),
(184.333,503,o),
(211,503,cs),
(217.667,503,o),
(221.667,509.333,o),
(223,512,c),
(221.268,510.268,o),
(247,548.332,o),
(247,562,cs),
(247,570,o),
(239.667,579,o),
(225,579,cs),
(211.667,579,o),
(202.833,576.167,o),
(198.5,570.5,cs),
(194.167,564.833,o),
(191.333,561.333,o),
(190,560,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
11 1 1 6 1 66 0 1 6 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 3 0 3 4 0 104 0 0 6 6 0 94 0 6 2 1 1 6 1 88 0 3 3 5 83 0 5 5 20 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 4 3 0 3 4 0 104 0 0 6 6 0 94 0 2 1 2 107 0 6 0 1 2 6 1 92 0 3 3 5 83 0 5 5 20 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 4 3 0 3 4 0 104 0 0 6 6 0 94 0 2 1 2 107 0 5 0 3 4 5 3 91 0 6 1 1 6 79 0 6 6 1 84 0 1 6 1 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
39 38 39 43 34 105 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 269;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(184.333,549,o),
(183,547,o),
(183,547,c),
(182,546,l),
(113,549,l),
(152.544,588.544,o),
(226,675.977,o),
(226,754,cs),
(226,799.333,o),
(197.333,836,o),
(132,836,cs),
(59.751,836,o),
(25,776.289,o),
(25,750,cs),
(25,731.333,o),
(29.333,716,o),
(60,716,cs),
(70.667,716,o),
(86,722.667,o),
(86,744,cs),
(86,749.333,o),
(84.167,752.833,o),
(80.5,754.5,cs),
(76.833,756.167,o),
(75,758.667,o),
(75,762,cs),
(75,765.333,o),
(79.667,771,o),
(89,779,cs),
(98.333,787,o),
(111.333,791,o),
(128,791,cs),
(154.667,791,o),
(168,773.667,o),
(168,755,cs),
(168,677.869,o),
(88.485,566.608,o),
(26,519,cs),
(20.667,515,o),
(18,511.667,o),
(18,509,cs),
(18,507,o),
(18.833,504.667,o),
(20.5,502,cs),
(22.167,499.333,o),
(26.667,498,o),
(34,498,cs),
(44,498,o),
(50.667,499.167,o),
(54,501.5,cs),
(57.333,503.833,o),
(59.667,505.667,o),
(61,507,c),
(77.667,506.333,o),
(94.667,505.667,o),
(112,505,cs),
(141.333,503.667,o),
(174.667,503,o),
(200,503,cs),
(203.333,503,o),
(205.833,504.167,o),
(207.5,506.5,cs),
(209.167,508.833,o),
(210.667,510.667,o),
(212,512,c),
(216.667,520.667,o),
(221.667,529.333,o),
(227,538,cs),
(232.333,546.667,o),
(235,553.667,o),
(235,559,cs),
(235,565.667,o),
(230.333,573,o),
(217,573,cs),
(207.667,573,o),
(195,567.667,o),
(187,553,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
60 1 6 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 6 2 1 1 6 1 87 0 3 3 5 83 0 5 5 20 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 2 1 2 107 0 6 0 1 2 6 1 91 0 3 3 5 83 0 5 5 20 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 2 1 2 107 0 5 0 3 4 5 3 91 0 6 1 1 6 77 0 6 6 1 83 0 1 6 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
23 38 39 43 34 103 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 260;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(42.333,501,o),
(47.167,501.667,o),
(49.5,503,cs),
(51.833,504.333,o),
(53.667,505.667,o),
(55,507,c),
(71.667,506.333,o),
(88,505.667,o),
(104,505,cs),
(130.667,503.667,o),
(162.667,503,o),
(184,503,cs),
(187.333,503,o),
(189.833,504.167,o),
(191.5,506.5,cs),
(193.167,508.833,o),
(194.667,510.667,o),
(196,512,c),
(216.174,549.827,o),
(218,548.266,o),
(218,554,cs),
(218,555.333,o),
(217.333,557.167,o),
(216,559.5,cs),
(214.667,561.833,o),
(211.333,563,o),
(206,563,cs),
(196.667,563,o),
(193.667,557,o),
(191,553,cs),
(183.667,541,o),
(178.333,533.5,o),
(175,530.5,cs),
(171.667,527.5,o),
(169.333,526,o),
(168,526,cs),
(79,529,l),
(127.894,572.461,o),
(210,672.042,o),
(210,754,cs),
(210,799.333,o),
(182,836,o),
(130,836,cs),
(67.313,836,o),
(29,777.846,o),
(29,750,cs),
(29,730.667,o),
(36,721,o),
(50,721,cs),
(51.333,721,o),
(55,722.167,o),
(61,724.5,cs),
(67,726.833,o),
(70,733.333,o),
(70,744,cs),
(70,749.333,o),
(68.167,752.833,o),
(64.5,754.5,cs),
(60.833,756.167,o),
(59,758.667,o),
(59,762,cs),
(59,774.756,o),
(80.84,808,o),
(126,808,cs),
(160.667,808,o),
(172,785.667,o),
(172,755,cs),
(172,677.869,o),
(92.485,566.608,o),
(30,519,cs),
(24.667,515,o),
(22,511.667,o),
(22,509,cs),
(22,503.667,o),
(26.333,501,o),
(35,501,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 6 2 1 1 6 1 87 0 3 3 5 83 0 5 5 20 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 4 3 0 3 4 0 104 0 0 6 3 0 6 102 0 5 0 3 4 5 3 91 0 6 1 1 6 79 0 6 6 1 83 2 1 1 6 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
39 37 41 42 34 105 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 247;
}
);
note = twosuperior;
unicode = 178;
},
{
glyphname = threesuperior;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(170.915,692.429,o),
(224,715.238,o),
(224,772,cs),
(224,828.265,o),
(174.051,836,o),
(138,836,cs),
(70.847,836,o),
(28,779.461,o),
(28,749,cs),
(28,737,o),
(37,729,o),
(49,729,cs),
(74.333,729,o),
(84,743.667,o),
(88,753,cs),
(96,771.667,o),
(110.667,794,o),
(132,794,cs),
(142.667,794,o),
(152,787.333,o),
(152,774,cs),
(152,728.545,o),
(96.985,702.418,o),
(60,676,cs),
(58.667,674.667,o),
(56,672.167,o),
(52,668.5,cs),
(48,664.833,o),
(46,660.333,o),
(46,655,cs),
(46,644.333,o),
(47.5,637,o),
(50.5,633,cs),
(53.5,629,o),
(56.667,627,o),
(60,627,cs),
(65.333,627,o),
(71.833,628.5,o),
(79.5,631.5,cs),
(87.167,634.5,o),
(96.667,636,o),
(108,636,cs),
(134.667,636,o),
(156,627.667,o),
(156,605,cs),
(156,563.149,o),
(106.129,545,o),
(73,545,cs),
(59.246,545,o),
(68.831,567,o),
(44,567,cs),
(25.333,567,o),
(16,550.333,o),
(16,533,cs),
(16,507.667,o),
(36.333,495,o),
(77,495,cs),
(144.728,495,o),
(228,541.457,o),
(228,609,cs),
(228,653,o),
(193,678,o),
(153,678,cs),
(146.333,678,o),
(142.333,677.333,o),
(137,676,c),
(136,679,l),
(136,679,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
70 1 0 7 0 1 4 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 7 6 0 6 7 0 104 0 0 4 6 0 4 102 5 1 4 2 6 4 2 102 0 3 2 1 2 3 96 0 2 0 1 2 1 87 0 6 6 8 83 0 8 8 20 6 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 7 6 0 6 7 0 104 0 0 4 6 0 4 102 0 4 5 6 4 5 102 0 5 2 6 5 2 102 0 3 2 1 2 3 96 0 2 0 1 2 1 87 0 6 6 8 83 0 8 8 20 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 7 6 0 6 7 0 104 0 0 4 6 0 4 102 0 4 5 6 4 5 102 0 5 2 6 5 2 102 0 3 2 1 2 3 96 0 8 0 6 7 8 6 91 0 2 3 1 2 79 0 2 2 1 83 0 1 2 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 36 44 33 38 35 35 38 34 9 24
CALL[ ]	/* CallFunction */";
};
width = 253;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(61.667,674.667,o),
(59,672.167,o),
(55,668.5,cs),
(51,664.833,o),
(49,660.333,o),
(49,655,cs),
(49,645,o),
(51,638.833,o),
(55,636.5,cs),
(59,634.167,o),
(61.667,633,o),
(63,633,cs),
(66.333,633,o),
(72.333,634.5,o),
(81,637.5,cs),
(89.667,640.5,o),
(99.667,642,o),
(111,642,cs),
(137.667,642,o),
(159,631.667,o),
(159,605,cs),
(159,556.584,o),
(107.58,536,o),
(76,536,cs),
(57.401,536,o),
(61.305,558,o),
(40,558,cs),
(25.333,558,o),
(19,541.667,o),
(19,527,cs),
(19,505.667,o),
(45.333,495,o),
(76,495,cs),
(139.75,495,o),
(217,545.765,o),
(217,609,cs),
(217,653,o),
(177.333,677,o),
(140,677,cs),
(137.333,677,o),
(134.833,676.833,o),
(132.5,676.5,cs),
(130.167,676.167,o),
(128,676,o),
(126,676,cs),
(123.333,675.333,o),
(121.333,675,o),
(120,675,c),
(148.643,687.73,o),
(213,719.709,o),
(213,784,cs),
(213,831.461,o),
(155.668,836,o),
(132,836,cs),
(67.145,836,o),
(31,776.35,o),
(31,749,cs),
(31,738.333,o),
(41.333,731,o),
(48,731,cs),
(66.667,731,o),
(74.333,743.667,o),
(77,753,c),
(89,782.333,o),
(107.667,800,o),
(125,800,cs),
(145,800,o),
(155,793.667,o),
(155,781,cs),
(155,724.702,o),
(100.112,702.509,o),
(63,676,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 10 1 9 7 0 9 7 102 0 7 8 0 7 8 102 0 8 0 6 8 6 87 0 0 0 2 83 0 2 2 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 0 9 10 0 9 10 102 0 10 7 0 10 7 102 0 7 8 0 7 8 102 0 8 0 6 8 6 87 0 0 0 2 83 0 2 2 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 1 0 3 0 1 3 104 5 4 2 3 9 0 3 9 102 0 9 10 0 9 10 102 0 10 7 0 10 7 102 0 7 8 0 7 8 102 0 2 0 0 1 2 0 91 0 8 6 6 8 79 0 8 8 6 83 0 6 8 6 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
67 65 64 62 35 36 38 33 17 25 38 36 38 11 24
CALL[ ]	/* CallFunction */";
};
width = 245;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(135.596,495,o),
(201,556.717,o),
(201,609,cs),
(201,652.851,o),
(152.722,675,o),
(121,675,cs),
(118.333,675,o),
(115.833,674.833,o),
(113.5,674.5,cs),
(111.167,674.167,o),
(109,674,o),
(107,674,cs),
(104.333,673.333,o),
(102.333,673,o),
(101,673,c),
(111.667,683.667,o),
(197,717.038,o),
(197,784,cs),
(197,829.901,o),
(156.616,836,o),
(136,836,cs),
(71.145,836,o),
(35,776.35,o),
(35,749,cs),
(35,739,o),
(38.667,734,o),
(46,734,cs),
(54,734,o),
(58.333,743.667,o),
(61,753,cs),
(73,787.667,o),
(93,810,o),
(129,810,cs),
(153,810,o),
(159,799.667,o),
(159,781,cs),
(159,724.702,o),
(104.112,702.509,o),
(67,676,cs),
(65.667,674.667,o),
(63,672.167,o),
(59,668.5,cs),
(55,664.833,o),
(53,660.333,o),
(53,655,cs),
(53,644.333,o),
(64.333,643,o),
(67,643,cs),
(70.333,643,o),
(76.333,644.5,o),
(85,647.5,cs),
(93.667,650.5,o),
(103.667,652,o),
(115,652,cs),
(141.667,652,o),
(163,639.667,o),
(163,605,cs),
(163,551.006,o),
(111.268,521,o),
(80,521,cs),
(53.33,521,o),
(49.582,543,o),
(35,543,cs),
(24.333,543,o),
(23,533.667,o),
(23,527,cs),
(23,504.333,o),
(51.333,495,o),
(74,495,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 3 0 1 3 104 0 10 9 7 9 10 7 104 0 7 8 9 7 8 102 5 4 2 3 0 9 10 3 9 91 0 8 0 6 8 6 87 0 0 0 2 83 0 2 2 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 1 0 3 0 1 3 104 0 10 9 7 9 10 7 104 0 7 8 9 7 8 102 0 2 0 0 1 2 0 91 5 4 2 3 0 9 10 3 9 91 0 8 6 6 8 79 0 8 8 6 83 0 6 8 6 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
69 67 66 64 35 36 40 33 17 25 37 36 39 11 24
CALL[ ]	/* CallFunction */";
};
width = 233;
}
);
note = threesuperior;
unicode = 179;
},
{
glyphname = foursuperior;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(264.333,569,o),
(270,586.333,o),
(270,597,cs),
(270,615.667,o),
(260.667,625,o),
(242,625,cs),
(237,625,l),
(240.81,670.722,o),
(250,731.453,o),
(250,807,cs),
(250,829.667,o),
(231.667,840,o),
(213,840,cs),
(197,840,o),
(180.667,831.333,o),
(174,822,cs),
(140.242,778.597,o),
(143.071,782.802,o),
(115.5,745.5,cs),
(99.162,723.396,o),
(62.928,675.095,o),
(22,620,cs),
(13.333,608.667,o),
(7.667,600.5,o),
(5,595.5,cs),
(2.333,590.5,o),
(1,585.333,o),
(1,580,cs),
(1,574,o),
(3.667,570.333,o),
(9,569,cs),
(14.333,567.667,o),
(22.667,567,o),
(34,567,cs),
(40,567,o),
(50.167,567,o),
(64.5,567,cs),
(78.833,567,o),
(93.333,567.333,o),
(108,568,cs),
(118.667,568.667,o),
(128.167,569,o),
(136.5,569,cs),
(144.833,569,o),
(154.333,569,o),
(165,569,c),
(164,558,ls),
(164,554,o),
(160.333,551.667,o),
(153,551,c),
(151,550.333,o),
(146.167,549.833,o),
(138.5,549.5,cs),
(130.833,549.167,o),
(123.667,548.667,o),
(117,548,cs),
(103.667,546.667,o),
(89,542.667,o),
(89,528,cs),
(89,508,o),
(107,503,o),
(119,503,cs),
(228,503,ls),
(254.667,503,o),
(264,507.333,o),
(264,526,cs),
(264,547.333,o),
(246.667,551,o),
(236,551,cs),
(232.667,551,o),
(231,551.667,o),
(231,553,cs),
(231,553.667,o),
(231.167,555.5,o),
(231.5,558.5,cs),
(231.833,561.5,o),
(232.333,565,o),
(233,569,c),
(243,569,l),
(243,569,l)
);
},
{
closed = 1;
nodes = (
(100,623,o),
(98,624.333,o),
(98,627,cs),
(98,628.333,o),
(98.667,629.667,o),
(100,631,cs),
(101.333,632.333,o),
(102.333,633.667,o),
(103,635,cs),
(178,743,l),
(169,626,l),
(154.333,624.667,o),
(140.333,623.833,o),
(127,623.5,cs),
(113.667,623.167,o),
(106,623,o),
(104,623,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
65 1 5 4 23 1 0 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
9 7 2 5 8 6 2 3 0 5 3 91 2 1 0 0 1 0 1 88 0 4 4 20 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 4 5 4 106 9 7 2 5 8 6 2 3 0 5 3 91 2 1 0 1 1 0 79 2 1 0 0 1 84 0 1 0 1 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
63 61 0 0 61 70 63 70 0 60 0 59 39 46 116 22 52 36 10 21
CALL[ ]	/* CallFunction */";
};
width = 295;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(253.667,581,o),
(259,596.333,o),
(259,603,cs),
(259,617.667,o),
(250,625,o),
(232,625,cs),
(219,625,l),
(219.878,646.068,o),
(232,802.664,o),
(232,811,cs),
(232,836.337,o),
(207.319,837,o),
(202,837,cs),
(188.667,837,o),
(172.667,826,o),
(170,822,cs),
(124.744,766.458,o),
(84.329,710.018,o),
(18,620,cs),
(12,612,o),
(8.167,606,o),
(6.5,602,cs),
(4.833,598,o),
(4,594.333,o),
(4,591,cs),
(4,582.333,o),
(12.667,578,o),
(30,578,cs),
(42,578,o),
(74.667,578.667,o),
(104,580,cs),
(114.667,580.667,o),
(125,581,o),
(135,581,cs),
(145,581,o),
(155.333,581,o),
(166,581,c),
(162,557,ls),
(159.333,546.333,o),
(152.667,544.667,o),
(142,542,cs),
(140,541.333,o),
(136.167,540.833,o),
(130.5,540.5,cs),
(124.833,540.167,o),
(119,539.667,o),
(113,539,cs),
(102.333,539,o),
(92,532.667,o),
(92,522,cs),
(92,507.333,o),
(105.667,503,o),
(115,503,cs),
(224,503,ls),
(238.667,503,o),
(253,503.333,o),
(253,522,cs),
(253,542,o),
(232,542,o),
(224,542,cs),
(220,542,o),
(215,544,o),
(215,552,cs),
(215,554.667,o),
(216.333,570.333,o),
(219,581,c),
(235,581,l),
(235,581,l)
);
},
{
closed = 1;
nodes = (
(82,623,o),
(80,624.333,o),
(80,627,cs),
(80,628.333,o),
(80.667,629.667,o),
(82,631,cs),
(83.333,632.333,o),
(84.333,633.667,o),
(85,635,cs),
(175,758,l),
(165,626,l),
(147,624.667,o),
(129.833,623.833,o),
(113.5,623.5,cs),
(97.167,623.167,o),
(88,623,o),
(86,623,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
66 1 6 5 1 66 22 1 0 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
10 8 2 6 9 7 2 4 0 6 4 91 3 2 2 0 0 1 0 1 88 0 5 5 20 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 5 6 5 106 10 8 2 6 9 7 2 4 0 6 4 91 3 2 2 0 1 1 0 79 3 2 2 0 0 1 84 0 1 0 1 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
64 62 0 0 62 71 64 71 0 61 0 60 41 43 117 17 20 52 37 11 22
CALL[ ]	/* CallFunction */";
};
width = 283;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(218,503,ls),
(228.667,503,o),
(237,503,o),
(237,515,cs),
(237,527,o),
(223.333,527,o),
(218,527,cs),
(206,527,o),
(189,526.333,o),
(189,537,cs),
(189,543.667,o),
(190.333,575.667,o),
(193,601,c),
(229,601,ls),
(239.667,601,o),
(243,610.333,o),
(243,613,cs),
(243,621,o),
(237.333,625,o),
(226,625,cs),
(193,625,l),
(196.289,703.946,o),
(206,794.792,o),
(206,811,cs),
(206,832.333,o),
(190,832,o),
(186,832,cs),
(176.667,832,o),
(166.667,824.667,o),
(164,822,cs),
(118.744,766.458,o),
(78.329,710.018,o),
(12,620,cs),
(8,614.667,o),
(8,611.667,o),
(8,609,cs),
(8,601,o),
(13.333,597,o),
(24,597,cs),
(30,597,o),
(40.167,597.333,o),
(54.5,598,cs),
(68.833,598.667,o),
(83.333,599.333,o),
(98,600,cs),
(108.667,600.667,o),
(119,601,o),
(129,601,cs),
(139,601,o),
(149.333,601,o),
(160,601,c),
(156,542,ls),
(156,531.333,o),
(148,528.333,o),
(136,527,c),
(134,526.333,o),
(130.167,525.833,o),
(124.5,525.5,cs),
(118.833,525.167,o),
(113,524.667,o),
(107,524,cs),
(101.667,524,o),
(96,518.667,o),
(96,512,cs),
(96,505.333,o),
(103.667,503,o),
(109,503,cs)
);
},
{
closed = 1;
nodes = (
(56,623,o),
(54,624.333,o),
(54,627,cs),
(54,628.333,o),
(54.667,629.667,o),
(56,631,cs),
(57.333,632.333,o),
(58.333,633.667,o),
(59,635,cs),
(171,783,l),
(159,626,l),
(135.667,624.667,o),
(114,623.833,o),
(94,623.5,cs),
(74,623.167,o),
(62.667,623,o),
(60,623,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
64 1 6 5 1 66 22 1 0 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
3 2 2 0 4 1 6 0 96 0 1 4 1 93 10 8 2 6 9 7 2 4 0 6 4 91 0 5 5 20 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
3 2 2 0 4 1 4 0 1 104 0 1 4 1 93 10 8 2 6 9 7 2 4 0 6 4 91 0 5 5 20 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
3 2 2 0 4 1 4 0 1 104 0 1 1 105 10 8 2 6 9 7 2 4 0 6 4 91 0 5 5 20 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 5 6 5 106 3 2 2 0 4 1 4 0 1 104 0 1 1 105 10 8 2 6 4 4 6 79 10 8 2 6 6 4 83 9 7 2 4 6 4 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
63 60 0 0 60 69 63 69 0 59 0 58 39 43 117 17 20 52 37 11 22
CALL[ ]	/* CallFunction */";
};
width = 266;
}
);
note = foursuperior;
unicode = 8308;
},
{
glyphname = fivesuperior;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(155.578,796.894,o),
(65.913,804.825,o),
(55,783,cs),
(53.108,779.216,o),
(45.08,736.724,o),
(36,655,cs),
(34.667,648.333,o),
(34,639,o),
(34,635,cs),
(34,615.667,o),
(37.667,606,o),
(45,606,cs),
(80.582,606,o),
(88.436,645,o),
(132,645,cs),
(168,645,o),
(178,624.667,o),
(178,606,cs),
(178,570.015,o),
(149.846,529,o),
(110,529,cs),
(86,529,o),
(79,540.333,o),
(79,551,cs),
(79,565.619,o),
(88,559.214,o),
(88,575,cs),
(88,586.333,o),
(78.667,592,o),
(60,592,cs),
(46.667,592,o),
(20,574,o),
(20,542,cs),
(20,526.639,o),
(26.619,487,o),
(99,487,cs),
(167.946,487,o),
(250,541.862,o),
(250,608,cs),
(250,668,o),
(215,703,o),
(155,703,cs),
(139.155,703,o),
(109.011,692.352,o),
(101,679,c),
(111,735,l),
(126.06,735,o),
(177.025,753.512,o),
(190,760,cs),
(211.624,772.013,o),
(242,802.072,o),
(242,821,cs),
(242,823.667,o),
(240.667,827.167,o),
(238,831.5,cs),
(235.333,835.833,o),
(227.667,838,o),
(215,838,cs),
(200.333,838,o),
(190.667,829.667,o),
(188,827,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
71 1 1 0 17 1 6 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 0 2 0 1 2 104 0 7 6 4 6 7 4 104 0 4 5 5 4 94 0 2 0 6 7 2 6 91 0 5 0 3 5 3 88 0 0 0 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 2 0 1 2 104 0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 2 0 6 7 2 6 91 0 5 0 3 5 3 88 0 0 0 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 0 1 0 106 0 1 2 1 106 0 7 6 4 6 7 4 104 0 4 5 6 4 5 102 0 2 0 6 7 2 6 91 0 5 3 3 5 79 0 5 5 3 84 0 3 5 3 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
35 38 40 38 38 37 27 34 8 23
CALL[ ]	/* CallFunction */";
};
width = 272;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(156.578,796.894,o),
(66.913,804.825,o),
(56,783,cs),
(53.744,778.487,o),
(48.01,735.742,o),
(37,655,cs),
(35.667,648.333,o),
(35,639,o),
(35,635,cs),
(35,619.667,o),
(38.667,612,o),
(46,612,cs),
(74.292,612,o),
(90.058,651,o),
(133,651,cs),
(170.164,651,o),
(179,620.174,o),
(179,606,cs),
(179,564.932,o),
(151.653,523,o),
(90,523,cs),
(76.667,523,o),
(66,530.333,o),
(66,545,cs),
(66,560.802,o),
(80,551.631,o),
(80,569,cs),
(80,580.333,o),
(71.667,586,o),
(55,586,cs),
(41.667,586,o),
(21,570,o),
(21,542,cs),
(21,518,o),
(38.667,487,o),
(88,487,cs),
(165.609,487,o),
(237,542.576,o),
(237,608,cs),
(237,664,o),
(203,697,o),
(147,697,cs),
(125.667,697,o),
(101.333,686.333,o),
(88,673,c),
(101,747,l),
(119.93,750.786,o),
(175.275,764.165,o),
(190,773,cs),
(208.667,782.333,o),
(229,806.333,o),
(229,821,cs),
(229,823.667,o),
(228,826.833,o),
(226,830.5,cs),
(224,834.167,o),
(218.333,836,o),
(209,836,cs),
(198.333,836,o),
(191.667,829.667,o),
(189,827,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
67 1 1 0 15 1 5 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 6 5 3 5 6 3 104 0 3 4 4 3 94 0 1 0 5 6 1 5 91 0 4 0 2 4 2 88 0 0 0 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 6 5 3 5 6 3 104 0 3 4 5 3 4 102 0 1 0 5 6 1 5 91 0 4 0 2 4 2 88 0 0 0 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 0 1 0 106 0 6 5 3 5 6 3 104 0 3 4 5 3 4 102 0 1 0 5 6 1 5 91 0 4 2 2 4 79 0 4 4 2 84 0 2 4 2 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
35 40 40 36 38 45 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 261;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(154.67,487,o),
(219,540.858,o),
(219,608,cs),
(219,658.667,o),
(184,687,o),
(136,687,cs),
(105.333,687,o),
(88.667,676.333,o),
(70,663,c),
(87,767,l),
(100.391,770.826,o),
(171.929,782.964,o),
(192,793,cs),
(201.333,798.333,o),
(211,813,o),
(211,821,cs),
(211,826.333,o),
(207.667,833,o),
(201,833,cs),
(198.333,833,o),
(195,831,o),
(191,827,cs),
(158.578,796.894,o),
(68.913,804.825,o),
(58,783,cs),
(55.744,778.487,o),
(50.01,735.742,o),
(39,655,cs),
(37.667,648.333,o),
(37,639,o),
(37,635,cs),
(37,626.333,o),
(40.667,622,o),
(48,622,cs),
(63.526,622,o),
(93.222,661,o),
(135,661,cs),
(177.954,661,o),
(181,621.384,o),
(181,606,cs),
(181,559.925,o),
(154.142,513,o),
(92,513,cs),
(68,513,o),
(48,520.333,o),
(48,535,cs),
(48,549.129,o),
(68,543.365,o),
(68,559,cs),
(68,570.333,o),
(61.333,576,o),
(48,576,cs),
(34.667,576,o),
(23,564.667,o),
(23,542,cs),
(23,518,o),
(40.667,487,o),
(90,487,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
66 1 1 0 14 1 5 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 6 5 3 5 6 3 104 0 3 4 4 3 94 0 1 0 5 6 1 5 91 0 4 0 2 4 2 88 0 0 0 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 6 5 3 5 6 3 104 0 3 4 5 3 4 102 0 1 0 5 6 1 5 91 0 4 0 2 4 2 88 0 0 0 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 0 1 0 106 0 6 5 3 5 6 3 104 0 3 4 5 3 4 102 0 1 0 5 6 1 5 91 0 4 2 2 4 79 0 4 4 2 84 0 2 4 2 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
35 40 40 36 38 45 33 7 22
CALL[ ]	/* CallFunction */";
};
width = 245;
}
);
note = fivesuperior;
unicode = 8309;
},
{
glyphname = sixsuperior;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(193,804.667,o),
(194,810,o),
(194,814,cs),
(194,828.667,o),
(170.667,833,o),
(160,833,cs),
(152.667,833,o),
(144.333,829.667,o),
(135,823,cs),
(90.75,789.813,o),
(21,691.477,o),
(21,607,cs),
(21,524.305,o),
(80.231,494,o),
(142,494,cs),
(198.914,494,o),
(247,527.335,o),
(247,583,cs),
(247,631,o),
(212,668,o),
(152,668,cs),
(129.333,668,o),
(111.667,660.667,o),
(101,654,cs),
(94.333,650,o),
(88.667,645.667,o),
(84,641,c),
(84,686.814,o),
(157.512,776.01,o),
(185,798,cs)
);
},
{
closed = 1;
nodes = (
(122.23,544,o),
(95,554.481,o),
(95,588,cs),
(95,606.667,o),
(103,632,o),
(135,632,cs),
(161.667,632,o),
(175,609.667,o),
(175,587,cs),
(175,555.048,o),
(149.069,544,o),
(136,544,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 4 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
5 1 3 4 1 4 3 1 104 0 1 4 1 93 0 0 0 4 3 0 4 91 0 2 2 20 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
5 1 3 4 1 4 3 1 104 0 1 1 105 0 0 0 4 3 0 4 91 0 2 2 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 0 2 106 5 1 3 4 1 4 3 1 104 0 1 1 105 0 0 4 4 0 79 0 0 0 4 83 0 4 0 4 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
37 36 45 43 36 51 37 51 42 38 41 6 18
CALL[ ]	/* CallFunction */";
};
width = 255;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(183.333,805.333,o),
(188,811.333,o),
(188,816,cs),
(188,829.333,o),
(168.667,833,o),
(162,833,cs),
(155.333,833,o),
(147.333,829.667,o),
(138,823,cs),
(94.416,793.036,o),
(24,690.148,o),
(24,603,cs),
(24,525.541,o),
(77.35,494,o),
(125,494,cs),
(175.809,494,o),
(236,528,o),
(236,585,cs),
(236,630.333,o),
(198.333,668,o),
(141,668,cs),
(99.489,668,o),
(73,642.555,o),
(73,633,cs),
(73,683.446,o),
(145.797,774.925,o),
(174,798,cs)
);
},
{
closed = 1;
nodes = (
(110.333,534,o),
(84,547.333,o),
(84,582,cs),
(84,601.764,o),
(93.743,636,o),
(131,636,cs),
(160.333,636,o),
(178,614.333,o),
(178,585,cs),
(178,545.991,o),
(147.303,534,o),
(129,534,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 0 0 4 3 0 4 91 5 1 3 0 1 3 1 87 0 2 2 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 0 2 106 0 0 0 4 3 0 4 91 5 1 3 1 1 3 79 5 1 3 3 1 83 0 1 3 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
36 35 44 42 35 50 36 50 42 38 41 6 18
CALL[ ]	/* CallFunction */";
};
width = 249;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(175.333,494,o),
(221,530.667,o),
(221,588,cs),
(221,628.01,o),
(198.181,668,o),
(137,668,cs),
(74.512,668,o),
(60.864,630.593,o),
(58,622,c),
(60.727,684.728,o),
(127.272,769.156,o),
(159,798,cs),
(165,803.333,o),
(169.833,807,o),
(173.5,809,cs),
(177.167,811,o),
(179,814.333,o),
(179,819,cs),
(179,831,o),
(167.667,833,o),
(165,833,cs),
(163.667,833,o),
(161,832.167,o),
(157,830.5,cs),
(153,828.833,o),
(148.333,826.333,o),
(143,823,cs),
(98.463,790.34,o),
(29,696.994,o),
(29,597,cs),
(29,522.333,o),
(67.333,494,o),
(118,494,cs)
);
},
{
closed = 1;
nodes = (
(92.333,518,o),
(69,536,o),
(69,572,cs),
(69,598.758,o),
(82.339,643,o),
(126,643,cs),
(156.667,643,o),
(183,620.667,o),
(183,582,cs),
(183,537.047,o),
(148.628,518,o),
(119,518,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 0 0 4 3 0 4 91 5 1 3 0 1 3 1 87 0 2 2 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 0 2 106 0 0 0 4 3 0 4 91 5 1 3 1 1 3 79 5 1 3 3 1 83 0 1 3 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
36 35 44 42 35 50 36 50 41 38 41 6 18
CALL[ ]	/* CallFunction */";
};
width = 240;
}
);
note = sixsuperior;
unicode = 8310;
},
{
glyphname = sevensuperior;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(14,495.333,o),
(28,485,o),
(44,485,cs),
(60.667,485,o),
(72.333,490.333,o),
(79,501,c),
(226,782,ls),
(234,797.333,o),
(239,807.167,o),
(241,811.5,cs),
(243,815.833,o),
(244,819.333,o),
(244,822,cs),
(244,823.333,o),
(243,824.5,o),
(241,825.5,cs),
(239,826.5,o),
(234.333,827,o),
(227,827,cs),
(202.595,827,o),
(75.158,823,o),
(53,823,cs),
(38.333,823,o),
(25,811.667,o),
(25,793,cs),
(25,778.333,o),
(35.333,766,o),
(50,766,cs),
(75.589,766,o),
(106.387,768,o),
(130,768,cs),
(134,768,o),
(136,766.333,o),
(136,763,cs),
(136,757.775,o),
(115.819,714.863,o),
(75,634.5,cs),
(34.181,554.137,o),
(14,511.225,o),
(14,506,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
0 2 0 2 107 0 0 0 1 83 0 1 1 12 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 2 0 2 107 0 0 0 1 83 0 1 1 14 0 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
39 116 120 3 18
CALL[ ]	/* CallFunction */";
};
width = 238;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(17,495.333,o),
(28,487,o),
(40,487,cs),
(53.333,487,o),
(62.667,491.667,o),
(68,501,cs),
(221,791,ls),
(226.333,800.333,o),
(229.667,806.5,o),
(231,809.5,cs),
(232.333,812.5,o),
(233,815.667,o),
(233,819,cs),
(233,824.333,o),
(227.333,827,o),
(216,827,cs),
(190.025,827,o),
(76.323,823,o),
(49,823,cs),
(34.333,823,o),
(25,813.667,o),
(25,799,cs),
(25,788.333,o),
(31.333,778,o),
(46,778,cs),
(79.251,778,o),
(115.957,780,o),
(145,780,cs),
(149,780,o),
(151,778.333,o),
(151,775,cs),
(151,767.282,o),
(121.585,712.96,o),
(84,640,cs),
(46.149,566.524,o),
(17,512.282,o),
(17,506,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
0 2 0 2 107 0 0 0 1 83 0 1 1 12 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 2 0 2 107 0 0 0 1 83 0 1 1 14 0 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
38 116 120 3 18
CALL[ ]	/* CallFunction */";
};
width = 231;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(43.667,491,o),
(49.667,494.333,o),
(53,501,cs),
(215,806,l),
(217,808.667,o),
(218,811.333,o),
(218,814,cs),
(218,822.667,o),
(212.333,827,o),
(201,827,cs),
(177.622,827,o),
(61.926,823,o),
(44,823,cs),
(29.333,823,o),
(25,815.667,o),
(25,809,cs),
(25,807.667,o),
(25.833,805.5,o),
(27.5,802.5,cs),
(29.167,799.5,o),
(33.667,798,o),
(41,798,cs),
(66.333,798,o),
(87.833,798.333,o),
(105.5,799,cs),
(123.167,799.667,o),
(143.667,800,o),
(167,800,cs),
(171,800,o),
(173,798.333,o),
(173,795,cs),
(173,787.184,o),
(147.125,740.616,o),
(97.5,649,cs),
(47.59,556.859,o),
(22,512.844,o),
(22,506,cs),
(22,496,o),
(26.333,491,o),
(35,491,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
0 2 0 2 107 0 0 0 1 83 0 1 1 12 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 2 0 2 107 0 0 0 1 83 0 1 1 14 0 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
37 116 88 3 18
CALL[ ]	/* CallFunction */";
};
width = 221;
}
);
note = sevensuperior;
unicode = 8311;
},
{
glyphname = eightsuperior;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(24,523,o),
(68,496,o),
(140,496,cs),
(216,496,o),
(257,533.667,o),
(257,583,cs),
(257,625.667,o),
(234.333,661,o),
(185,669,c),
(212.026,672.003,o),
(252,701.087,o),
(252,753,cs),
(252,792.793,o),
(211.675,835,o),
(144,835,cs),
(70.667,835,o),
(34,794.333,o),
(34,749,cs),
(34,706.333,o),
(64,673,o),
(92,669,c),
(58.667,663.667,o),
(24,629.667,o),
(24,579,cs)
);
},
{
closed = 1;
nodes = (
(95,622.878,o),
(123.3,633,o),
(141,633,cs),
(177,633,o),
(186,609.667,o),
(186,587,cs),
(186,571,o),
(173,550,o),
(141,550,cs),
(118.333,550,o),
(95,559,o),
(95,587,cs)
);
},
{
closed = 1;
nodes = (
(104,771.667,o),
(127,777,o),
(143,777,cs),
(159,777,o),
(181,771.667,o),
(181,737,cs),
(181,723.667,o),
(168.667,706,o),
(142,706,cs),
(127.333,706,o),
(104,713,o),
(104,741,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
19 3 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 3 2 4 3 91 0 2 0 1 2 1 87 0 5 5 0 83 0 0 0 20 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 1 1 2 79 0 2 2 1 83 0 1 2 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 38 36 36 46 40 6 21
CALL[ ]	/* CallFunction */";
};
width = 282;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(27,523,o),
(77.667,496,o),
(139,496,cs),
(207,496,o),
(246,537.667,o),
(246,583,cs),
(246,625.667,o),
(216.667,661,o),
(174,669,c),
(195.662,671.407,o),
(241,705.114,o),
(241,753,cs),
(241,790.009,o),
(203.677,835,o),
(138,835,cs),
(71.333,835,o),
(37,794.333,o),
(37,749,cs),
(37,707.942,o),
(69.101,673.709,o),
(95,669,c),
(66.357,661.188,o),
(27,631.67,o),
(27,579,cs)
);
},
{
closed = 1;
nodes = (
(84,623.333,o),
(114.333,639,o),
(137,639,cs),
(170.333,639,o),
(189,615.333,o),
(189,586,cs),
(189,560.667,o),
(169,539,o),
(137,539,cs),
(107.667,539,o),
(84,555.333,o),
(84,586,cs)
);
},
{
closed = 1;
nodes = (
(93,773.667,o),
(114.667,789,o),
(140,789,cs),
(161.333,789,o),
(184,777.667,o),
(184,743,cs),
(184,723,o),
(167.333,700,o),
(138,700,cs),
(122.565,700,o),
(93,708.877,o),
(93,743,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
23 5 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 3 2 4 3 91 0 2 0 1 2 1 87 0 5 5 0 83 0 0 0 20 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 1 1 2 79 0 2 2 1 83 0 1 2 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 38 36 36 46 44 6 21
CALL[ ]	/* CallFunction */";
};
width = 274;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(182.233,496,o),
(230,536.804,o),
(230,583,cs),
(230,625.043,o),
(190.534,660.866,o),
(158,669,c),
(183.92,677.64,o),
(225,705.993,o),
(225,753,cs),
(225,790.847,o),
(196.228,835,o),
(137,835,cs),
(79.667,835,o),
(41,794.333,o),
(41,749,cs),
(41,710.333,o),
(71,679.667,o),
(99,669,c),
(75.134,658.393,o),
(31,632.194,o),
(31,579,cs),
(31,522.125,o),
(84.636,496,o),
(129,496,cs)
);
},
{
closed = 1;
nodes = (
(90.667,520,o),
(68,550.667,o),
(68,584,cs),
(68,624,o),
(101.667,649,o),
(131,649,cs),
(160.333,649,o),
(193,625,o),
(193,585,cs),
(193,545,o),
(161.333,520,o),
(128,520,cs)
);
},
{
closed = 1;
nodes = (
(106.667,690,o),
(77,708.333,o),
(77,747,cs),
(77,776.333,o),
(93.333,809,o),
(136,809,cs),
(180.256,809,o),
(188,773.516,o),
(188,753,cs),
(188,714.333,o),
(160,690,o),
(132,690,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
21 5 2 3 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 3 2 4 3 91 0 2 0 1 2 1 87 0 5 5 0 83 0 0 0 20 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 5 4 0 5 91 0 4 0 3 2 4 3 91 0 2 1 1 2 79 0 2 2 1 83 0 1 2 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
60 58 52 50 46 44 40 38 32 30 42 6 16
CALL[ ]	/* CallFunction */";
};
width = 262;
}
);
note = eightsuperior;
unicode = 8312;
},
{
glyphname = ninesuperior;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(63,523,o),
(62,520.333,o),
(62,511,cs),
(62,497.667,o),
(78,492,o),
(94,492,cs),
(106,492,o),
(111.333,495.333,o),
(122,502,cs),
(164.667,534,o),
(234,622.667,o),
(234,728,cs),
(234,797.333,o),
(196,834,o),
(128,834,cs),
(69.944,834,o),
(15,809.93,o),
(15,739,cs),
(15,685.667,o),
(49,641,o),
(109,641,cs),
(156.073,641,o),
(173.418,679.253,o),
(176,687,c),
(172,644.333,o),
(132.333,589.667,o),
(75,535,cs)
);
},
{
closed = 1;
nodes = (
(149.333,784,o),
(166,773.333,o),
(166,740,cs),
(166,721.333,o),
(154.667,698,o),
(124,698,cs),
(92,698,o),
(80,718.333,o),
(80,741,cs),
(80,775.667,o),
(104,784,o),
(120,784,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
3 1 0 4 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 107 0 4 0 0 2 4 0 91 5 1 3 3 1 83 0 1 1 20 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 2 0 2 107 0 1 5 1 3 4 1 3 91 0 4 0 0 4 79 0 4 4 0 83 0 0 4 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
34 33 40 38 33 44 34 44 41 38 39 6 18
CALL[ ]	/* CallFunction */";
};
width = 257;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(74.667,530.667,o),
(71.167,527.167,o),
(67.5,523.5,cs),
(63.833,519.833,o),
(62,515.667,o),
(62,511,cs),
(62,500.333,o),
(76.333,494,o),
(87,494,cs),
(94.333,494,o),
(102.667,497.333,o),
(112,504,cs),
(154.954,533.531,o),
(225,630.627,o),
(225,730,cs),
(225,802,o),
(192,835,o),
(132,835,cs),
(72.769,835,o),
(17,804.192,o),
(17,738,cs),
(17,690,o),
(45.667,647,o),
(107,647,cs),
(143,647,o),
(170.333,662,o),
(177,694,c),
(177,645.276,o),
(114.241,564.201,o),
(78,534,cs)
);
},
{
closed = 1;
nodes = (
(145,795,o),
(170,785,o),
(170,745,cs),
(170,718.333,o),
(155,691,o),
(119,691,cs),
(87,691,o),
(70,712.667,o),
(70,742,cs),
(70,780.667,o),
(97,795,o),
(121,795,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 4 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 107 0 4 0 0 2 4 0 91 5 1 3 3 1 83 0 1 1 20 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 2 0 2 107 0 1 5 1 3 4 1 3 91 0 4 0 0 4 79 0 4 4 0 83 0 0 4 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
33 32 39 37 32 43 33 43 40 38 39 6 18
CALL[ ]	/* CallFunction */";
};
width = 250;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(76.333,497,o),
(79,497.833,o),
(83,499.5,cs),
(87,501.167,o),
(91.667,503.667,o),
(97,507,cs),
(141.594,536.729,o),
(211,636.179,o),
(211,733,cs),
(211,807.667,o),
(172.667,836,o),
(122,836,cs),
(64.667,836,o),
(19,794.333,o),
(19,737,cs),
(19,696.99,o),
(41.819,657,o),
(103,657,cs),
(158.747,657,o),
(172.147,687.442,o),
(177,702,c),
(174.275,639.336,o),
(110.333,558.667,o),
(81,532,cs),
(75,526.667,o),
(70.167,523,o),
(66.5,521,cs),
(62.833,519,o),
(61,515.667,o),
(61,511,cs),
(61,499,o),
(72.333,497,o),
(75,497,cs)
);
},
{
closed = 1;
nodes = (
(79.333,680,o),
(54,704.333,o),
(54,743,cs),
(54,787.726,o),
(92.631,813,o),
(121,813,cs),
(147.667,813,o),
(174,794,o),
(174,758,cs),
(174,728.696,o),
(152.71,680,o),
(110,680,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 1 4 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 107 0 4 0 0 2 4 0 91 5 1 3 3 1 83 0 1 1 20 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 2 0 2 107 0 1 5 1 3 4 1 3 91 0 4 0 0 4 79 0 4 4 0 83 0 0 4 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
36 35 44 42 35 50 36 50 41 38 41 6 18
CALL[ ]	/* CallFunction */";
};
width = 240;
}
);
note = ninesuperior;
unicode = 8313;
},
{
glyphname = space;
kernLeft = space;
kernRight = space;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
width = 212;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
width = 218;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
width = 226;
}
);
note = space;
unicode = 32;
},
{
glyphname = nbspace;
lastChange = "2024-06-13 14:27:16 +0000";
layers = (
{
layerId = m01;
width = 212;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
width = 218;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
width = 226;
}
);
note = uni00A0;
unicode = 160;
},
{
glyphname = CR;
lastChange = "2024-06-13 14:27:02 +0000";
layers = (
{
layerId = m01;
width = 338;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
width = 338;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
width = 338;
}
);
note = CR;
unicode = 13;
},
{
glyphname = NULL;
lastChange = "2024-06-13 14:18:27 +0000";
layers = (
{
layerId = m01;
width = 0;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
width = 0;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
width = 0;
}
);
note = NULL;
},
{
glyphname = .notdef;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(524.787,819.261,o),
(295.87,818,o),
(304,818,cs),
(314.357,818,o),
(174.193,818.825,o),
(113,815,cs),
(98.333,814.333,o),
(91,802.667,o),
(91,780,cs),
(91,560.483,o),
(93,262.227,o),
(93,37,cs),
(93,23,o),
(94.667,13.667,o),
(98,9,cs),
(101.333,4.333,o),
(106,2,o),
(112,2,cs),
(609,2,ls),
(615,2,o),
(619.667,4.333,o),
(623,9,cs),
(626.333,13.667,o),
(628,23,o),
(628,37,cs),
(628,294.815,o),
(628.405,541.281,o),
(631,780,cs),
(631,796,o),
(627.333,813.667,o),
(610,815,cs)
);
},
{
closed = 1;
nodes = (
(177.333,72,o),
(173,75.333,o),
(173,90,cs),
(173,708,ls),
(173,734.667,o),
(178.333,741,o),
(201,741,cs),
(519,741,ls),
(541.667,741,o),
(548,730,o),
(548,714,cs),
(548,93,ls),
(548,79,o),
(541.667,72,o),
(529,72,cs),
(192,72,l),
(192,72,l)
);
},
{
closed = 1;
nodes = (
(489,208,o),
(483.5,217.333,o),
(472.5,232,cs),
(461.5,246.667,o),
(442.667,269.333,o),
(416,300,c),
(440.094,333.732,o),
(459.838,362.311,o),
(487,394,cs),
(491,398.667,o),
(493,403.667,o),
(493,409,cs),
(493,418.073,o),
(463.296,450,o),
(456,450,cs),
(450.667,450,o),
(444,446.5,o),
(436,439.5,cs),
(428,432.5,o),
(416.333,418.333,o),
(401,397,cs),
(371,355,l),
(349.667,383,o),
(333.5,404.167,o),
(322.5,418.5,cs),
(311.5,432.833,o),
(304.667,441.667,o),
(302,445,cs),
(290.667,458.333,o),
(281.333,470.167,o),
(274,480.5,cs),
(266.667,490.833,o),
(259,496,o),
(251,496,cs),
(239.967,496,o),
(214,455.172,o),
(214,452,cs),
(214,442.666,o),
(255.958,390.555,o),
(328,296,c),
(309.893,271.857,o),
(302.924,267.386,o),
(251,203,cs),
(245.667,195.667,o),
(240,189,o),
(234,183,cs),
(228,177,o),
(225,171,o),
(225,165,cs),
(225,156.544,o),
(251.343,126,o),
(260,126,cs),
(266,126,o),
(277.5,135.5,o),
(294.5,154.5,cs),
(311.5,173.5,o),
(338,202,o),
(374,240,c),
(414.18,195.994,o),
(433.046,153,o),
(448,153,cs),
(461.04,153,o),
(489,188.867,o),
(489,204,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
82 59 37 32 25 10 3 40
CALL[ ]	/* CallFunction */";
};
width = 670;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(510.192,819.148,o),
(295.475,818,o),
(304,818,cs),
(314.357,818,o),
(174.193,818.825,o),
(113,815,cs),
(93,813.667,o),
(90,796,o),
(90,780,cs),
(92.595,541.281,o),
(93,294.815,o),
(93,37,cs),
(93,23,o),
(94.667,13.667,o),
(98,9,cs),
(101.333,4.333,o),
(106,2,o),
(112,2,cs),
(588,2,ls),
(594,2,o),
(598.667,4.333,o),
(602,9,cs),
(605.333,13.667,o),
(607,23,o),
(607,37,cs),
(607,294.815,o),
(607.405,541.281,o),
(610,780,cs),
(610,796,o),
(606.333,813.667,o),
(589,815,cs)
);
},
{
closed = 1;
nodes = (
(156.333,54,o),
(152,57.333,o),
(152,72,cs),
(152,726,ls),
(152,752.667,o),
(152,759,o),
(180,759,cs),
(519,759,ls),
(541.667,759,o),
(548,750.667,o),
(548,732,cs),
(548,75,ls),
(548,61,o),
(541.667,54,o),
(529,54,cs),
(171,54,l),
(171,54,l)
);
},
{
closed = 1;
nodes = (
(474,198,o),
(467,208.833,o),
(453,226.5,cs),
(439,244.167,o),
(418.667,268.333,o),
(392,299,c),
(420,337.667,o),
(439,364.333,o),
(471,403,cs),
(475,407.667,o),
(477,412.667,o),
(477,418,cs),
(477,428.585,o),
(455.826,450,o),
(449,450,cs),
(441.667,450,o),
(434,445.833,o),
(426,437.5,cs),
(418,429.167,o),
(407.333,415.667,o),
(394,397,cs),
(356,345,l),
(334.667,373,o),
(318.5,394.167,o),
(307.5,408.5,cs),
(296.5,422.833,o),
(289.667,431.667,o),
(287,435,cs),
(276.333,448.333,o),
(267.167,460.167,o),
(259.5,470.5,cs),
(251.833,480.833,o),
(244,486,o),
(236,486,cs),
(227.648,486,o),
(207,459.503,o),
(207,452,cs),
(207,442.666,o),
(248.958,390.555,o),
(321,296,c),
(302.893,271.857,o),
(295.924,267.386,o),
(244,203,cs),
(238.667,195.667,o),
(233,189,o),
(227,183,cs),
(221,177,o),
(218,171,o),
(218,165,cs),
(218,155.667,o),
(234.667,135,o),
(244,135,cs),
(265.056,135,o),
(305.722,193.971,o),
(358,249,c),
(386,219,o),
(405.5,195.5,o),
(416.5,178.5,cs),
(427.5,161.5,o),
(435.667,153,o),
(441,153,cs),
(453.69,153,o),
(474,180.025,o),
(474,194,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
81 60 38 33 26 10 3 40
CALL[ ]	/* CallFunction */";
};
width = 670;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(558,2,ls),
(564,2,o),
(568.667,4.333,o),
(572,9,cs),
(575.333,13.667,o),
(577,23,o),
(577,37,cs),
(577,294.815,o),
(577.405,541.281,o),
(580,780,cs),
(580,796,o),
(576.333,813.667,o),
(559,815,cs),
(490.286,819.042,o),
(292.756,818,o),
(304,818,cs),
(314.357,818,o),
(174.193,818.825,o),
(113,815,cs),
(93,813.667,o),
(90,796,o),
(90,780,cs),
(92.595,541.281,o),
(93,294.815,o),
(93,37,cs),
(93,23,o),
(94.667,13.667,o),
(98,9,cs),
(101.333,4.333,o),
(106,2,o),
(112,2,cs)
);
},
{
closed = 1;
nodes = (
(126.333,24,o),
(122,27.333,o),
(122,42,cs),
(122,756,ls),
(122,782.667,o),
(127.333,789,o),
(150,789,cs),
(519,789,ls),
(541.667,789,o),
(548,784.667,o),
(548,762,cs),
(548,45,ls),
(548,31,o),
(541.667,24,o),
(529,24,cs),
(141,24,l),
(141,24,l),
(141,24,l),
(141,24,l)
);
},
{
closed = 1;
nodes = (
(252.928,150,o),
(311.914,246.685,o),
(335,264,c),
(363,233.333,o),
(384,206,o),
(400,186,cs),
(413.45,169.188,o),
(425.274,153,o),
(431,153,cs),
(445.667,153,o),
(453,161,o),
(453,177,cs),
(453,185.872,o),
(403.608,244.55,o),
(358,297,c),
(372,316.333,o),
(386.5,336.5,o),
(401.5,357.5,cs),
(416.5,378.5,o),
(432,398.667,o),
(448,418,cs),
(452,422.667,o),
(454,427.667,o),
(454,433,cs),
(454,443.667,o),
(445.667,450,o),
(439,450,cs),
(431.667,450,o),
(424,445.833,o),
(416,437.5,cs),
(408,429.167,o),
(397.333,415.667,o),
(384,397,cs),
(335,328,l),
(313.667,356,o),
(297.5,377.167,o),
(286.5,391.5,cs),
(275.5,405.833,o),
(268.667,414.667,o),
(266,418,cs),
(246,444.667,o),
(231,469,o),
(215,469,cs),
(207,469,o),
(197,460,o),
(197,452,cs),
(197,442.666,o),
(238.958,390.555,o),
(311,296,c),
(292.893,271.857,o),
(285.924,267.386,o),
(234,203,cs),
(228.667,195.667,o),
(223,189,o),
(217,183,cs),
(211,177,o),
(208,171,o),
(208,165,cs),
(208,155,o),
(212.333,150,o),
(221,150,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
77 59 38 33 26 10 3 40
CALL[ ]	/* CallFunction */";
};
width = 670;
}
);
note = .notdef;
},
{
glyphname = period;
kernLeft = comma;
kernRight = comma;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(40,6,o),
(58.667,-28,o),
(108,-28,cs),
(154.667,-28,o),
(178,2.667,o),
(178,36,cs),
(178,65.333,o),
(156.667,98,o),
(110,98,cs),
(56.058,98,o),
(40,58.342,o),
(40,34,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
36 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 218;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(46,10,o),
(61.667,-19,o),
(103,-19,cs),
(141.667,-19,o),
(163,8,o),
(163,36,cs),
(163,61.333,o),
(145,89,o),
(105,89,cs),
(62.437,89,o),
(46,58.211,o),
(46,34,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
0 0 0 1 83 0 1 1 21 1 68 36 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 209;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(125.333,-4,o),
(141,16,o),
(141,36,cs),
(141,54.667,o),
(128.667,74,o),
(98,74,cs),
(66,74,o),
(54,51.333,o),
(54,34,cs),
(54,16.667,o),
(65.333,-4,o),
(96,-4,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
0 0 0 1 83 0 1 1 16 1 68 36 34 2 17
CALL[ ]	/* CallFunction */";
};
width = 196;
}
);
note = period;
unicode = 46;
},
{
glyphname = comma;
kernLeft = comma;
kernRight = comma;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(42,5.029,o),
(78,3.443,o),
(78,-14,cs),
(78,-34,o),
(75.5,-48.833,o),
(70.5,-58.5,cs),
(65.5,-68.167,o),
(63,-76.333,o),
(63,-83,cs),
(63,-105.667,o),
(82.333,-106,o),
(89,-106,cs),
(107.413,-106,o),
(170,-63.536,o),
(170,13,cs),
(170,70.333,o),
(134,94,o),
(102,94,cs),
(58,94,o),
(42,64,o),
(42,36,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 38 34 2 17
CALL[ ]	/* CallFunction */";
};
width = 213;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(46,4.242,o),
(82,5.073,o),
(82,-12,cs),
(82,-29.333,o),
(79.833,-42.167,o),
(75.5,-50.5,cs),
(71.167,-58.833,o),
(69,-66,o),
(69,-72,cs),
(69,-89.333,o),
(83.333,-91,o),
(90,-91,cs),
(114.214,-91,o),
(155,-41.409,o),
(155,13,cs),
(155,66.333,o),
(124.667,85,o),
(98,85,cs),
(60.667,85,o),
(46,60,o),
(46,36,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 38 34 2 17
CALL[ ]	/* CallFunction */";
};
width = 202;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(117.943,-66,o),
(134,-16.312,o),
(134,13,cs),
(134,58.333,o),
(112,70,o),
(92,70,cs),
(65.333,70,o),
(52,53.333,o),
(52,36,cs),
(52,3.798,o),
(88,9.31,o),
(88,-8,cs),
(88,-14.667,o),
(86.167,-22.833,o),
(82.5,-32.5,cs),
(78.833,-42.167,o),
(77,-49.333,o),
(77,-54,cs),
(77,-60.667,o),
(84.333,-66,o),
(91,-66,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 38 34 2 17
CALL[ ]	/* CallFunction */";
};
width = 187;
}
);
note = comma;
unicode = 44;
},
{
glyphname = colon;
kernLeft = colon;
kernRight = colon;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(55,7,o),
(73.667,-27,o),
(123,-27,cs),
(169.667,-27,o),
(193,3.667,o),
(193,37,cs),
(193,66.333,o),
(171.667,99,o),
(125,99,cs),
(71.058,99,o),
(55,59.342,o),
(55,35,cs)
);
},
{
closed = 1;
nodes = (
(55,309.667,o),
(73.667,277,o),
(123,277,cs),
(169.667,277,o),
(193,307.667,o),
(193,341,cs),
(193,370.333,o),
(171.667,403,o),
(125,403,cs),
(77.13,403,o),
(55,367.417,o),
(55,339,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 2 0 3 0 2 3 91 0 0 0 1 83 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 3 0 2 3 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
36 38 36 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 248;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(58,11,o),
(74,-18,o),
(115,-18,cs),
(154,-18,o),
(175,9,o),
(175,37,cs),
(175,62,o),
(157,90,o),
(117,90,cs),
(74,90,o),
(58,59,o),
(58,35,cs)
);
},
{
closed = 1;
nodes = (
(58,314,o),
(74,285,o),
(115,285,cs),
(154,285,o),
(175,312,o),
(175,340,cs),
(175,365,o),
(157,393,o),
(117,393,cs),
(74,393,o),
(58,362,o),
(58,338,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
0 2 0 3 0 2 3 91 0 0 0 1 83 0 1 1 21 1 68 36 38 36 37 4 30
CALL[ ]	/* CallFunction */";
};
width = 233;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(133.333,299,o),
(149,319,o),
(149,339,cs),
(149,357.667,o),
(136.667,377,o),
(106,377,cs),
(74,377,o),
(62,354.333,o),
(62,337,cs),
(62,319.667,o),
(73.333,299,o),
(104,299,cs)
);
},
{
closed = 1;
nodes = (
(133.333,-3,o),
(149,17,o),
(149,37,cs),
(149,55.667,o),
(136.667,75,o),
(106,75,cs),
(74,75,o),
(62,52.333,o),
(62,35,cs),
(62,17.667,o),
(73.333,-3,o),
(104,-3,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
0 2 0 3 0 2 3 91 0 0 0 1 83 0 1 1 16 1 68 36 36 36 34 4 19
CALL[ ]	/* CallFunction */";
};
width = 211;
}
);
note = colon;
unicode = 58;
},
{
glyphname = semicolon;
kernLeft = colon;
kernRight = colon;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(54,309.667,o),
(71.667,277,o),
(121,277,cs),
(167.667,277,o),
(192,307.667,o),
(192,341,cs),
(192,370.333,o),
(169.667,403,o),
(123,403,cs),
(74.259,403,o),
(54,366.648,o),
(54,339,cs)
);
},
{
closed = 1;
nodes = (
(59,5.029,o),
(95,3.443,o),
(95,-14,cs),
(95,-34,o),
(92.5,-48.833,o),
(87.5,-58.5,cs),
(82.5,-68.167,o),
(80,-76.333,o),
(80,-83,cs),
(80,-105.667,o),
(99.333,-106,o),
(106,-106,cs),
(124.413,-106,o),
(187,-63.536,o),
(187,13,cs),
(187,70.333,o),
(151,94,o),
(119,94,cs),
(75,94,o),
(59,64,o),
(59,36,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 0 0 1 2 0 1 91 0 2 3 3 2 79 0 2 2 3 83 0 3 2 3 71 38 36 36 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 246;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(60,4.242,o),
(96,5.073,o),
(96,-12,cs),
(96,-29.333,o),
(93.833,-42.167,o),
(89.5,-50.5,cs),
(85.167,-58.833,o),
(83,-66,o),
(83,-72,cs),
(83,-89.333,o),
(97.333,-91,o),
(104,-91,cs),
(128.214,-91,o),
(169,-41.409,o),
(169,13,cs),
(169,66.333,o),
(138.667,85,o),
(112,85,cs),
(74.667,85,o),
(60,60,o),
(60,36,cs)
);
},
{
closed = 1;
nodes = (
(55,314,o),
(70.667,285,o),
(112,285,cs),
(150.667,285,o),
(172,312,o),
(172,340,cs),
(172,365.333,o),
(154,393,o),
(114,393,cs),
(71.437,393,o),
(55,362.211,o),
(55,338,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 2 0 3 0 2 3 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 36 46 38 34 4 19
CALL[ ]	/* CallFunction */";
};
width = 228;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(127.943,-66,o),
(144,-16.312,o),
(144,13,cs),
(144,58.333,o),
(122,70,o),
(102,70,cs),
(75.333,70,o),
(62,53.333,o),
(62,36,cs),
(62,4.242,o),
(98,5.073,o),
(98,-12,cs),
(98,-18.667,o),
(96.167,-26.167,o),
(92.5,-34.5,cs),
(88.833,-42.833,o),
(87,-49.333,o),
(87,-54,cs),
(87,-60.667,o),
(94.333,-66,o),
(101,-66,cs)
);
},
{
closed = 1;
nodes = (
(128.333,299,o),
(144,319,o),
(144,339,cs),
(144,357.667,o),
(131.667,377,o),
(101,377,cs),
(69,377,o),
(57,354.333,o),
(57,337,cs),
(57,319.667,o),
(68.333,299,o),
(99,299,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 0 0 1 2 0 1 91 0 2 3 3 2 79 0 2 2 3 83 0 3 2 3 71 38 36 36 34 4 19
CALL[ ]	/* CallFunction */";
};
width = 203;
}
);
note = semicolon;
unicode = 59;
},
{
glyphname = ellipsis;
kernLeft = comma;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(40,6,o),
(58.667,-28,o),
(108,-28,cs),
(154.667,-28,o),
(178,2.667,o),
(178,36,cs),
(178,65.333,o),
(156.667,98,o),
(110,98,cs),
(56.058,98,o),
(40,58.342,o),
(40,34,cs)
);
},
{
closed = 1;
nodes = (
(218,6,o),
(237,-28,o),
(285,-28,cs),
(331.667,-28,o),
(356,2.667,o),
(356,36,cs),
(356,65.333,o),
(333.667,98,o),
(287,98,cs),
(234.083,98,o),
(218,59.467,o),
(218,34,cs)
);
},
{
closed = 1;
nodes = (
(388,6,o),
(406.667,-28,o),
(456,-28,cs),
(502.667,-28,o),
(526,2.667,o),
(526,36,cs),
(526,65.333,o),
(504.667,98,o),
(458,98,cs),
(404.058,98,o),
(388,58.342,o),
(388,34,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
4 2 2 0 0 1 83 5 3 2 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
4 2 2 0 1 1 0 79 4 2 2 0 0 1 83 5 3 2 1 0 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 38 36 38 36 36 6 21
CALL[ ]	/* CallFunction */";
};
width = 566;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(46,10,o),
(61.667,-19,o),
(103,-19,cs),
(141.667,-19,o),
(163,8,o),
(163,36,cs),
(163,61.333,o),
(145,89,o),
(105,89,cs),
(62.437,89,o),
(46,58.211,o),
(46,34,cs)
);
},
{
closed = 1;
nodes = (
(222,10,o),
(238,-19,o),
(279,-19,cs),
(318,-19,o),
(339,8,o),
(339,36,cs),
(339,61,o),
(321,89,o),
(281,89,cs),
(238,89,o),
(222,58,o),
(222,34,cs)
);
},
{
closed = 1;
nodes = (
(394,10,o),
(410,-19,o),
(451,-19,cs),
(490,-19,o),
(511,8,o),
(511,36,cs),
(511,61,o),
(493,89,o),
(453,89,cs),
(410,89,o),
(394,58,o),
(394,34,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
4 2 2 0 0 1 83 5 3 2 1 1 21 1 68 36 38 36 38 36 37 6 32
CALL[ ]	/* CallFunction */";
};
width = 557;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(473.333,-4,o),
(489,16,o),
(489,36,cs),
(489,54.667,o),
(476.667,74,o),
(446,74,cs),
(414,74,o),
(402,51.333,o),
(402,34,cs),
(402,16.667,o),
(413.333,-4,o),
(444,-4,cs)
);
},
{
closed = 1;
nodes = (
(125.333,-4,o),
(141,16,o),
(141,36,cs),
(141,54.667,o),
(128.667,74,o),
(98,74,cs),
(66,74,o),
(54,51.333,o),
(54,34,cs),
(54,16.667,o),
(65.333,-4,o),
(96,-4,cs)
);
},
{
closed = 1;
nodes = (
(299.333,-4,o),
(315,16,o),
(315,36,cs),
(315,54.667,o),
(302.667,74,o),
(272,74,cs),
(240,74,o),
(228,51.333,o),
(228,34,cs),
(228,16.667,o),
(239.333,-4,o),
(270,-4,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
4 2 2 0 0 1 83 5 3 2 1 1 16 1 68 36 36 36 36 36 34 6 21
CALL[ ]	/* CallFunction */";
};
width = 544;
}
);
note = ellipsis;
unicode = 8230;
},
{
glyphname = exclam;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(94,119.5,o),
(108.521,101,o),
(134,101,cs),
(170,101,o),
(176,116,o),
(176,172,cs),
(176,795,ls),
(176,840.219,o),
(142.848,842,o),
(129,842,cs),
(110.333,842,o),
(85,833.667,o),
(85,795,cs),
(85,739.99,o),
(86.011,628.628,o),
(87.5,450,cs),
(88.66,310.764,o),
(91.39,134.83,o),
(94,127,c)
);
},
{
closed = 1;
nodes = (
(211,28.688,o),
(191.467,66,o),
(136,66,cs),
(74.748,66,o),
(62,19.292,o),
(62,-1,cs),
(62,-34.981,o),
(85.871,-66,o),
(134,-66,cs),
(183.896,-66,o),
(211,-34.936,o),
(211,2,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 3 0 2 3 2 87 0 1 1 0 83 0 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 0 0 1 3 0 1 91 0 3 2 2 3 79 0 3 3 2 83 0 2 3 2 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
40 40 38 59 4 19
CALL[ ]	/* CallFunction */";
};
width = 265;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(100,104.333,o),
(110.333,101,o),
(125,101,cs),
(151.667,101,o),
(156,125.333,o),
(156,172,cs),
(156,795,ls),
(156,833.521,o),
(134.681,836,o),
(120,836,cs),
(102.667,836,o),
(86,829.667,o),
(86,795,cs),
(86,729.394,o),
(86.231,610.395,o),
(87.5,420,cs),
(88.57,259.56,o),
(91.208,143.772,o),
(96,127,cs)
);
},
{
closed = 1;
nodes = (
(69,-17,o),
(84.667,-46,o),
(126,-46,cs),
(164.667,-46,o),
(186,-19,o),
(186,9,cs),
(186,34.333,o),
(168,62,o),
(128,62,cs),
(85.437,62,o),
(69,31.211,o),
(69,7,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 2 0 3 2 3 87 0 1 1 0 83 0 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 0 0 1 2 0 1 91 0 2 3 3 2 79 0 2 2 3 83 0 3 2 3 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
36 38 39 41 4 19
CALL[ ]	/* CallFunction */";
};
width = 247;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(119.333,101,o),
(123.833,107,o),
(125.5,119,cs),
(127.167,131,o),
(128,148.667,o),
(128,172,cs),
(128,795,ls),
(128,810.333,o),
(126,819.333,o),
(122,822,cs),
(118,824.667,o),
(113,826,o),
(107,826,cs),
(91,826,o),
(88,821.667,o),
(88,795,cs),
(88,728.637,o),
(89.785,586.117,o),
(92,420,cs),
(94.439,237.106,o),
(96.223,139.437,o),
(98,127,cs),
(99.333,115.667,o),
(101.167,108.5,o),
(103.5,105.5,cs),
(105.833,102.5,o),
(108.667,101,o),
(112,101,cs)
);
},
{
closed = 1;
nodes = (
(130,-13,o),
(150,-2.667,o),
(150,20,cs),
(150,40,o),
(135.667,56,o),
(117,56,cs),
(98.333,56,o),
(79,46.333,o),
(79,21,cs),
(79,-3,o),
(96.667,-13,o),
(114,-13,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 3 0 1 3 104 0 0 0 12 67 0 3 3 2 84 0 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 3 0 1 3 104 0 0 0 14 67 0 3 3 2 84 0 2 2 21 2 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
36 36 37 41 4 19
CALL[ ]	/* CallFunction */";
};
width = 222;
}
);
note = exclam;
unicode = 33;
},
{
glyphname = exclamdown;
kernRight = exclamdown;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(210,653.91,o),
(186.105,690,o),
(133,690,cs),
(77.551,690,o),
(60,652.218,o),
(60,625,cs),
(60,604.708,o),
(72.748,558,o),
(134,558,cs),
(187.424,558,o),
(210,591.552,o),
(210,622,cs)
);
},
{
closed = 1;
nodes = (
(88.39,488.17,o),
(85.66,312.236,o),
(84.5,173,cs),
(83.011,-5.628,o),
(82,-116.99,o),
(82,-172,cs),
(82,-210.667,o),
(107.333,-219,o),
(126,-219,cs),
(139.848,-219,o),
(173,-217.219,o),
(173,-172,cs),
(173,451,ls),
(173,507,o),
(167,522,o),
(131,522,cs),
(105.521,522,o),
(91,503.5,o),
(91,496,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 3 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 1 0 0 2 1 0 91 0 2 2 3 83 0 3 3 17 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 0 2 1 0 91 0 2 3 3 2 79 0 2 2 3 83 0 3 2 3 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
54 40 40 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 262;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(89.445,483.038,o),
(87.568,363.23,o),
(86.5,203,cs),
(85.231,12.605,o),
(85,-106.394,o),
(85,-172,cs),
(85,-206.667,o),
(101.667,-213,o),
(119,-213,cs),
(133.681,-213,o),
(155,-210.521,o),
(155,-172,cs),
(155,451,ls),
(155,497.667,o),
(150.667,522,o),
(124,522,cs),
(109.333,522,o),
(99,518.667,o),
(95,496,c)
);
},
{
closed = 1;
nodes = (
(68,601.789,o),
(84.437,571,o),
(127,571,cs),
(167,571,o),
(185,598.667,o),
(185,624,cs),
(185,652,o),
(163.667,679,o),
(125,679,cs),
(83.667,679,o),
(68,650,o),
(68,626,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 2 0 3 0 2 3 91 0 0 0 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 3 0 2 3 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
36 43 39 34 4 19
CALL[ ]	/* CallFunction */";
};
width = 245;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(113,-203,o),
(118.167,-201.667,o),
(122.5,-199,cs),
(126.833,-196.333,o),
(129,-187.333,o),
(129,-172,cs),
(129,451,ls),
(129,474.333,o),
(128,492,o),
(126,504,cs),
(124,516,o),
(119.333,522,o),
(112,522,cs),
(108.667,522,o),
(105.667,520.5,o),
(103,517.5,cs),
(100.333,514.5,o),
(98.333,507.333,o),
(97,496,cs),
(95.223,483.563,o),
(93.439,385.894,o),
(91,203,cs),
(88.785,36.883,o),
(87,-105.637,o),
(87,-172,cs),
(87,-198.667,o),
(91,-203,o),
(107,-203,cs)
);
},
{
closed = 1;
nodes = (
(135.667,592,o),
(150,608,o),
(150,628,cs),
(150,650.667,o),
(130,661,o),
(114,661,cs),
(96.667,661,o),
(79,651,o),
(79,627,cs),
(79,601.667,o),
(98.333,592,o),
(117,592,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 3 0 2 0 3 2 91 0 0 0 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 3 0 2 0 3 2 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
36 43 37 34 4 19
CALL[ ]	/* CallFunction */";
};
width = 221;
}
);
note = exclamdown;
unicode = 161;
},
{
glyphname = question;
kernLeft = question;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(218,520.333,o),
(209.333,536,o),
(188,536,cs),
(158.624,536,o),
(170.526,513,o),
(153,513,cs),
(143.667,513,o),
(135.5,519.667,o),
(128.5,533,cs),
(121.5,546.333,o),
(118,566.333,o),
(118,593,cs),
(118,678.617,o),
(147.784,752,o),
(285,752,cs),
(383.975,752,o),
(477,704.784,o),
(477,594,cs),
(477,493.027,o),
(419.948,419.626,o),
(369,380,cs),
(318.466,340.52,o),
(282.364,328.217,o),
(233,290,cs),
(191.667,258,o),
(161,217.333,o),
(161,152,cs),
(161,134.667,o),
(162.333,110.667,o),
(165,96,cs),
(167.667,81.333,o),
(180.333,58,o),
(211,58,cs),
(241.667,58,o),
(255,77,o),
(255,97,cs),
(255,108.333,o),
(253.167,120.833,o),
(249.5,134.5,cs),
(245.833,148.167,o),
(244,161.333,o),
(244,174,cs),
(244,231.75,o),
(313.033,258.021,o),
(383,303,cs),
(448.057,344.637,o),
(573,450.236,o),
(573,592,cs),
(573,777.404,o),
(408.17,831,o),
(288,831,cs),
(139.963,831,o),
(33,753.841,o),
(33,603,cs),
(33,528.58,o),
(62.557,431,o),
(149,431,cs),
(191.667,431,o),
(218,463,o),
(218,503,cs)
);
},
{
closed = 1;
nodes = (
(140,-63.174,o),
(152.215,-105,o),
(213,-105,cs),
(266.333,-105,o),
(290,-70,o),
(290,-38,cs),
(290,-8.661,o),
(269.41,28,o),
(215,28,cs),
(159.439,28,o),
(140,-13.877,o),
(140,-40,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 4 0 0 2 4 0 91 0 5 0 2 6 5 2 91 0 6 0 7 6 7 87 0 3 3 1 83 0 1 1 20 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 1 0 3 5 1 3 91 0 4 0 0 2 4 0 91 0 5 0 2 6 5 2 91 0 6 7 7 6 79 0 6 6 7 83 0 7 6 7 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
85 83 77 75 69 67 64 62 56 54 35 33 40 34 8 17
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(193,512.333,o),
(185.333,536,o),
(164,536,cs),
(142.582,536,o),
(146.842,513,o),
(131,513,cs),
(121.667,513,o),
(113.5,519.667,o),
(106.5,533,cs),
(99.5,546.333,o),
(96,566.333,o),
(96,593,cs),
(96,686.128,o),
(169.449,770,o),
(275,770,cs),
(372.741,770,o),
(476,718.812,o),
(476,594,cs),
(476,493.027,o),
(418.948,419.626,o),
(368,380,cs),
(317.466,340.52,o),
(281.364,328.217,o),
(232,290,cs),
(190.667,258,o),
(160,217.333,o),
(160,152,cs),
(160,134.667,o),
(161.333,110.667,o),
(164,96,cs),
(166.667,81.333,o),
(176,64,o),
(200,64,cs),
(222.667,64,o),
(233,77,o),
(233,97,cs),
(233,108.333,o),
(231.167,120.833,o),
(227.5,134.5,cs),
(223.833,148.167,o),
(222,161.333,o),
(222,174,cs),
(222,239.329,o),
(311.024,273.873,o),
(375,315,cs),
(447.704,361.531,o),
(551,456.071,o),
(551,592,cs),
(551,775.026,o),
(393.537,831,o),
(279,831,cs),
(145.342,831,o),
(32,754.917,o),
(32,603,cs),
(32,529.329,o),
(59.673,456,o),
(132,456,cs),
(168,456,o),
(193,481.667,o),
(193,503,cs)
);
},
{
closed = 1;
nodes = (
(148,-60,o),
(163.667,-89,o),
(205,-89,cs),
(243.667,-89,o),
(265,-62,o),
(265,-34,cs),
(265,-8.667,o),
(247,19,o),
(207,19,cs),
(164.437,19,o),
(148,-11.789,o),
(148,-36,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 5 3 4 4 5 96 0 2 0 6 0 2 6 104 0 4 0 0 2 4 0 92 0 6 0 7 6 7 87 0 3 3 1 83 0 1 1 20 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 5 3 4 4 5 96 0 2 0 6 0 2 6 104 0 1 0 3 5 1 3 91 0 4 0 0 2 4 0 92 0 6 7 7 6 79 0 6 6 7 83 0 7 6 7 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
83 81 77 75 69 67 64 62 56 54 35 33 40 34 8 17
CALL[ ]	/* CallFunction */";
};
width = 578;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(193,74,o),
(202,77,o),
(202,97,cs),
(202,108.333,o),
(200.167,120.833,o),
(196.5,134.5,cs),
(192.833,148.167,o),
(191,161.333,o),
(191,174,cs),
(191,246.906,o),
(288.783,286.646,o),
(364,335,cs),
(435.048,380.471,o),
(520,455.307,o),
(520,592,cs),
(520,777.006,o),
(362.695,831,o),
(266,831,cs),
(148.142,831,o),
(31,752.301,o),
(31,603,cs),
(31,531.329,o),
(58.116,466,o),
(112,466,cs),
(138.667,466,o),
(158,481.667,o),
(158,503,cs),
(158,512.333,o),
(154.333,536,o),
(133,536,cs),
(111.942,536,o),
(116.894,513,o),
(100,513,cs),
(90.667,513,o),
(82.5,519.667,o),
(75.5,533,cs),
(68.5,546.333,o),
(65,566.333,o),
(65,593,cs),
(65,700.868,o),
(135.284,800,o),
(261,800,cs),
(362.495,800,o),
(475,735.908,o),
(475,594,cs),
(475,493.027,o),
(417.948,419.626,o),
(367,380,cs),
(316.466,340.52,o),
(280.364,328.217,o),
(231,290,cs),
(189.667,258,o),
(159,217.333,o),
(159,152,cs),
(159,134.667,o),
(160.333,110.667,o),
(163,96,cs),
(165,81.333,o),
(172.333,74,o),
(185,74,cs)
);
},
{
closed = 1;
nodes = (
(212.667,-62,o),
(229,-48,o),
(229,-28,cs),
(229,-8,o),
(213.667,4,o),
(195,4,cs),
(176.333,4,o),
(160,-7.667,o),
(160,-29,cs),
(160,-51.667,o),
(178,-62,o),
(194,-62,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 7 5 6 6 7 96 0 4 2 0 2 4 0 104 0 6 0 2 4 6 2 92 0 0 0 1 0 1 87 0 5 5 3 83 0 3 3 20 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 7 5 6 6 7 96 0 4 2 0 2 4 0 104 0 3 0 5 7 3 5 91 0 6 0 2 4 6 2 92 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
80 78 75 73 67 65 47 45 40 36 36 34 8 19
CALL[ ]	/* CallFunction */";
};
width = 548;
}
);
note = question;
unicode = 63;
},
{
glyphname = questiondown;
kernRight = questiondown;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(388,110,o),
(398.667,93,o),
(420,93,cs),
(443.645,93,o),
(437.148,116,o),
(453,116,cs),
(462.333,116,o),
(470.5,109.333,o),
(477.5,96,cs),
(484.5,82.667,o),
(488,62.667,o),
(488,36,cs),
(488,-51.105,o),
(454.669,-123,o),
(321,-123,cs),
(222.025,-123,o),
(129,-75.784,o),
(129,35,cs),
(129,135.973,o),
(186.052,209.374,o),
(237,249,cs),
(287.534,288.48,o),
(323.636,300.783,o),
(373,339,cs),
(414.333,371,o),
(445,411.667,o),
(445,477,cs),
(445,494.333,o),
(443.667,518.333,o),
(441,533,cs),
(438.333,547.667,o),
(425.667,571,o),
(395,571,cs),
(363,571,o),
(351,552,o),
(351,532,cs),
(351,520.667,o),
(352.833,508.167,o),
(356.5,494.5,cs),
(360.167,480.833,o),
(362,467.667,o),
(362,455,cs),
(362,397.25,o),
(292.967,370.979,o),
(223,326,cs),
(149.937,281.038,o),
(33,171.437,o),
(33,37,cs),
(33,-148.237,o),
(197.52,-202,o),
(317,-202,cs),
(465.759,-202,o),
(573,-125.382,o),
(573,26,cs),
(573,97.938,o),
(543.559,198,o),
(456,198,cs),
(413.333,198,o),
(388,166,o),
(388,126,cs)
);
},
{
closed = 1;
nodes = (
(466,694.951,o),
(450.365,734,o),
(393,734,cs),
(339.667,734,o),
(315,699,o),
(315,667,cs),
(315,638.442,o),
(335.362,601,o),
(390,601,cs),
(447.667,601,o),
(466,641.544,o),
(466,669,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 7 0 6 2 7 6 91 0 0 0 4 5 0 4 91 0 2 0 5 3 2 5 91 0 3 3 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 7 0 6 2 7 6 91 0 0 0 4 5 0 4 91 0 2 0 5 3 2 5 91 0 3 1 1 3 79 0 3 3 1 83 0 1 3 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
85 83 77 75 69 67 64 62 56 54 35 33 40 34 8 17
CALL[ ]	/* CallFunction */";
};
width = 593;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(384,116.667,o),
(391.667,93,o),
(413,93,cs),
(434.418,93,o),
(430.158,116,o),
(446,116,cs),
(455.333,116,o),
(463.5,109.333,o),
(470.5,96,cs),
(477.5,82.667,o),
(481,62.667,o),
(481,36,cs),
(481,-57.128,o),
(407.551,-141,o),
(302,-141,cs),
(204.059,-141,o),
(101,-90.012,o),
(101,35,cs),
(101,135.973,o),
(158.052,209.374,o),
(209,249,cs),
(259.534,288.48,o),
(295.636,300.783,o),
(345,339,cs),
(386.333,371,o),
(417,411.667,o),
(417,477,cs),
(417,494.333,o),
(415.667,518.333,o),
(413,533,cs),
(410.333,547.667,o),
(401,565,o),
(377,565,cs),
(354.333,565,o),
(344,552,o),
(344,532,cs),
(344,520.667,o),
(345.833,508.167,o),
(349.5,494.5,cs),
(353.167,480.833,o),
(355,467.667,o),
(355,455,cs),
(355,390.361,o),
(267.096,355.847,o),
(202,314,cs),
(130.309,269.882,o),
(26,172.399,o),
(26,37,cs),
(26,-146.026,o),
(183.463,-202,o),
(298,-202,cs),
(431.658,-202,o),
(545,-125.917,o),
(545,26,cs),
(545,99.671,o),
(517.327,173,o),
(445,173,cs),
(409,173,o),
(384,147.333,o),
(384,126,cs)
);
},
{
closed = 1;
nodes = (
(297,641,o),
(312.667,612,o),
(354,612,cs),
(392.667,612,o),
(414,639,o),
(414,667,cs),
(414,692.333,o),
(396,720,o),
(356,720,cs),
(313.437,720,o),
(297,689.211,o),
(297,665,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 7 0 7 2 0 104 0 5 4 3 4 5 96 0 6 0 7 2 6 7 91 0 0 0 4 5 0 4 91 0 3 3 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 2 7 0 7 2 0 104 0 5 4 3 4 5 96 0 6 0 7 2 6 7 91 0 0 0 4 5 0 4 91 0 3 1 1 3 79 0 3 3 1 83 0 1 3 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
83 81 77 75 69 67 64 62 56 54 35 33 40 34 8 17
CALL[ ]	/* CallFunction */";
};
width = 575;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(385.957,-202,o),
(517,-129.185,o),
(517,31,cs),
(517,107,o),
(487,163,o),
(439,163,cs),
(423.294,163,o),
(391,156.655,o),
(391,125,cs),
(391,106.333,o),
(401.333,93,o),
(416,93,cs),
(434.796,93,o),
(431.679,116,o),
(449,116,cs),
(458.333,116,o),
(466.5,109,o),
(473.5,95,cs),
(480.5,81,o),
(484,61,o),
(484,35,cs),
(484,-78.273,o),
(409.656,-171,o),
(287,-171,cs),
(186.923,-171,o),
(71,-107.656,o),
(71,35,cs),
(71,141.667,o),
(134,215.667,o),
(238,285,cs),
(325.848,342.729,o),
(394,361.381,o),
(394,489,cs),
(394,538.509,o),
(384.67,555,o),
(368,555,cs),
(358.667,555,o),
(351,551.333,o),
(351,534,cs),
(351,523.333,o),
(352.833,510.667,o),
(356.5,496,cs),
(360.167,481.333,o),
(362,467.333,o),
(362,454,cs),
(362,379.977,o),
(277.105,342.992,o),
(203,298,cs),
(137.687,257.18,o),
(27,173.101,o),
(27,33,cs),
(27,-141.62,o),
(197.377,-202,o),
(286,-202,cs)
);
},
{
closed = 1;
nodes = (
(373.667,625,o),
(393,636.667,o),
(393,658,cs),
(393,678,o),
(376.333,691,o),
(359,691,cs),
(339,691,o),
(324,675.667,o),
(324,657,cs),
(324,637,o),
(344.333,625,o),
(359,625,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 4 0 2 0 4 2 104 0 7 6 5 6 7 5 104 0 1 0 0 4 1 0 91 0 2 0 6 7 2 6 91 0 5 5 3 83 0 3 3 17 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 4 0 2 0 4 2 104 0 7 6 5 6 7 5 104 0 1 0 0 4 1 0 91 0 2 0 6 7 2 6 91 0 5 3 3 5 79 0 5 5 3 83 0 3 5 3 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
78 76 73 71 65 63 47 45 38 38 36 34 8 19
CALL[ ]	/* CallFunction */";
};
width = 549;
}
);
note = questiondown;
unicode = 191;
},
{
glyphname = periodcentered;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(40,329,o),
(58.667,295,o),
(108,295,cs),
(154.667,295,o),
(178,325.667,o),
(178,359,cs),
(178,388.333,o),
(156.667,421,o),
(110,421,cs),
(56.058,421,o),
(40,381.342,o),
(40,357,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 0 83 0 0 0 15 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
36 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 219;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(47,333,o),
(62.667,304,o),
(104,304,cs),
(142.667,304,o),
(164,331,o),
(164,359,cs),
(164,384.333,o),
(146,412,o),
(106,412,cs),
(63.437,412,o),
(47,381.211,o),
(47,357,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 0 83 0 0 0 15 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
36 37 2 28
CALL[ ]	/* CallFunction */";
};
width = 211;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(128.333,319,o),
(144,339,o),
(144,359,cs),
(144,377.667,o),
(131.667,397,o),
(101,397,cs),
(69,397,o),
(57,374.333,o),
(57,357,cs),
(57,339.667,o),
(68.333,319,o),
(99,319,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 36 35 2 28
CALL[ ]	/* CallFunction */";
};
width = 200;
}
);
note = periodcentered;
unicode = 183;
},
{
glyphname = bullet;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(254,413.333,o),
(222.333,459,o),
(161,459,cs),
(102.333,459,o),
(63,416.667,o),
(63,358,cs),
(63,298,o),
(105.333,258,o),
(156,258,cs),
(202.515,258,o),
(254,293.119,o),
(254,360,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 1 83 0 1 1 23 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
36 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 316;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(237,408,o),
(209.667,450,o),
(155,450,cs),
(103,450,o),
(67,411.333,o),
(67,358,cs),
(67,303.333,o),
(104.667,267,o),
(150,267,cs),
(191.279,267,o),
(237,300.186,o),
(237,360,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 1 83 0 1 1 15 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
36 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 303;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(173.901,282,o),
(213,307.577,o),
(213,360,cs),
(213,400,o),
(190,435,o),
(146,435,cs),
(103.333,435,o),
(73,402,o),
(73,358,cs),
(73,312.667,o),
(103.667,282,o),
(141,282,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 1 83 0 1 1 15 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
36 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 285;
}
);
note = bullet;
unicode = 8226;
},
{
glyphname = asterisk;
kernLeft = asterisk;
kernRight = asterisk;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(248.515,832,o),
(226.044,776.986,o),
(197,731,c),
(148.253,802.687,o),
(139.374,832,o),
(115,832,cs),
(96.333,832,o),
(85,821,o),
(85,801,cs),
(85,781.97,o),
(114.097,756.098,o),
(158,710,c),
(115.333,714,o),
(98,714,o),
(66,714,cs),
(38,714,o),
(24,696.333,o),
(24,683,cs),
(24,659,o),
(50,655,o),
(66,655,cs),
(80.667,655,o),
(94.833,655,o),
(108.5,655,cs),
(122.167,655,o),
(138.667,655.333,o),
(158,656,c),
(132.299,639.645,o),
(85,594.489,o),
(85,570,cs),
(85,551.333,o),
(96,542,o),
(118,542,cs),
(144.354,542,o),
(192.747,629.493,o),
(196,636,c),
(192.246,639.754,o),
(261.987,542,o),
(288,542,cs),
(302.667,542,o),
(318,548,o),
(318,568,cs),
(318,614.337,o),
(244.802,642.396,o),
(238,656,c),
(254.36,656,o),
(272.93,655,o),
(342,655,cs),
(356.667,655,o),
(371,667,o),
(371,687,cs),
(371,701.667,o),
(357,715,o),
(341,715,cs),
(314.333,715,o),
(266.667,714,o),
(240,710,c),
(240,729.57,o),
(303,771.503,o),
(303,801,cs),
(303,815.667,o),
(295.667,832,o),
(273,832,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
72 1 1 0 59 8 2 2 1 35 1 3 2 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
4 1 3 2 2 3 95 6 1 1 5 1 2 3 1 2 92 7 8 2 0 0 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
4 1 3 2 3 107 6 1 1 5 1 2 3 1 2 92 7 8 2 0 0 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
7 8 2 0 1 0 106 4 1 3 2 3 107 6 1 1 2 2 1 79 6 1 1 1 2 84 5 1 2 1 2 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
1 0 68 66 58 55 51 47 41 39 31 29 22 16 12 9 0 76 1 76 9 15
CALL[ ]	/* CallFunction */";
};
width = 394;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(226.899,828,o),
(202.15,769.823,o),
(182,734,c),
(148.758,783.863,o),
(132.561,828,o),
(110,828,cs),
(94,828,o),
(84,822.667,o),
(84,800,cs),
(84,791.333,o),
(89.667,781.333,o),
(101,770,cs),
(112.333,758.667,o),
(128.667,741.333,o),
(150,718,c),
(115.333,722,o),
(95,722,o),
(67,722,cs),
(43,722,o),
(31,708.333,o),
(31,695,cs),
(31,675,o),
(52.333,671,o),
(67,671,cs),
(92.333,671,o),
(119.333,672.333,o),
(150,675,c),
(135.522,662.331,o),
(84,621.669,o),
(84,595,cs),
(84,578.333,o),
(93.333,570,o),
(112,570,cs),
(137.761,570,o),
(181.306,658.459,o),
(181,658,c),
(199.044,639.956,o),
(237.54,570,o),
(261,570,cs),
(274.333,570,o),
(287,575.667,o),
(287,593,cs),
(287,645.371,o),
(235.973,633.053,o),
(215,675,c),
(212.088,675,o),
(260.832,671,o),
(308,671,cs),
(320,671,o),
(333,679,o),
(333,695,cs),
(333,709.667,o),
(321.667,723,o),
(307,723,cs),
(287.914,723,o),
(241.307,721.472,o),
(217,718,c),
(217,717.923,o),
(274,771.637,o),
(274,800,cs),
(274,813.333,o),
(268,828,o),
(248,828,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
72 1 1 0 61 49 8 3 2 1 37 1 4 2 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
5 1 4 2 2 4 95 7 1 1 6 3 2 2 4 1 2 92 8 9 2 0 0 12 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 4 2 4 107 7 1 1 6 3 2 2 4 1 2 92 8 9 2 0 0 12 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
8 9 2 0 1 0 106 5 1 4 2 4 107 7 1 1 2 2 1 79 7 1 1 1 2 84 6 3 2 2 1 2 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
1 0 68 66 60 57 53 50 43 41 33 31 24 23 22 18 14 10 0 76 1 76 10 15
CALL[ ]	/* CallFunction */";
};
width = 364;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(125.459,617,o),
(146.362,676.043,o),
(159,695,c),
(152.925,699.05,o),
(201.327,617,o),
(222,617,cs),
(232.667,617,o),
(243,621.667,o),
(243,635,cs),
(243,663.228,o),
(185.831,698.338,o),
(182,706,c),
(181.033,706,o),
(231.752,697,o),
(260,697,cs),
(269.333,697,o),
(279,704.333,o),
(279,715,cs),
(279,729.667,o),
(269.667,736,o),
(259,736,cs),
(227.713,736,o),
(211.383,731,o),
(184,731,c),
(184,738.946,o),
(233,780.253,o),
(233,799,cs),
(233,809.667,o),
(227.667,821,o),
(213,821,cs),
(195.507,821,o),
(175.352,769.703,o),
(160,739,c),
(132.047,778.135,o),
(121.584,821,o),
(103,821,cs),
(89.667,821,o),
(82,816.333,o),
(82,799,cs),
(82,791.667,o),
(88.167,782.333,o),
(100.5,771,cs),
(112.833,759.667,o),
(125.667,746.333,o),
(139,731,c),
(127.667,731.667,o),
(116,732.667,o),
(104,734,cs),
(92,735.333,o),
(80.333,736,o),
(69,736,cs),
(50.333,736,o),
(41,729,o),
(41,715,cs),
(41,700.333,o),
(58.333,697,o),
(69,697,cs),
(78.333,697,o),
(90,698.167,o),
(104,700.5,cs),
(118,702.833,o),
(129.667,704.667,o),
(139,706,c),
(132.9,698.68,o),
(82,655.586,o),
(82,637,cs),
(82,623.667,o),
(89.333,617,o),
(104,617,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
71 1 1 0 37 1 5 3 2 66 49 1 4 1 65
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
71 1 8 0 37 1 5 3 2 66 49 1 4 1 65
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 4 1 3 1 4 3 104 9 8 2 3 1 7 1 3 5 1 3 91 6 1 5 5 0 83 10 11 2 0 0 12 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 1 3 1 4 3 104 0 8 1 3 8 79 9 2 2 1 7 1 3 5 1 3 91 6 1 5 5 0 83 10 11 2 0 0 14 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
1 0 67 65 60 59 58 56 53 51 43 41 33 31 24 23 20 18 14 11 9 8 0 75 1 75 12 15
CALL[ ]	/* CallFunction */";
};
width = 321;
}
);
note = asterisk;
unicode = 42;
},
{
glyphname = numbersign;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(104.328,101.188,o),
(82,47.914,o),
(82,37,c),
(84.667,17,o),
(99.667,6,o),
(117,6,cs),
(159.667,6,o),
(167.667,23.333,o),
(173,42,cs),
(176.333,52.667,o),
(184.5,74.167,o),
(197.5,106.5,cs),
(210.5,138.833,o),
(226.333,176.667,o),
(245,220,c),
(273,220,o),
(298.833,220.167,o),
(322.5,220.5,cs),
(346.167,220.833,o),
(363.667,221,o),
(375,221,cs),
(379,221,l),
(330.279,104.07,o),
(308,46.372,o),
(308,37,c),
(310.667,17,o),
(325.667,6,o),
(343,6,cs),
(379,6,o),
(392.333,22,o),
(399,42,cs),
(406.205,58.811,o),
(427.875,119.143,o),
(472,220,c),
(522.123,220,o),
(573.767,219,o),
(627,219,cs),
(643,219,o),
(659,240.333,o),
(659,259,cs),
(657.667,276.333,o),
(642.667,300,o),
(624,300,cs),
(505,300,l),
(551,408,l),
(678,408,ls),
(698.4,408,o),
(712,437.267,o),
(712,451,cs),
(712,469.667,o),
(696.667,489,o),
(682,489,cs),
(675.333,489,o),
(663.333,488.833,o),
(646,488.5,cs),
(628.667,488.167,o),
(608.333,488,o),
(585,488,c),
(627.916,589.159,o),
(649,647.023,o),
(649,650,cs),
(649,663.333,o),
(640.333,676,o),
(627,676,cs),
(574.624,676,o),
(569.711,648.279,o),
(544,602,c),
(543.333,601.333,o),
(538.333,590.333,o),
(529,569,cs),
(519.667,547.667,o),
(507.667,520,o),
(493,486,c),
(357,486,l),
(376.333,530.667,o),
(392.167,568.333,o),
(404.5,599,cs),
(416.833,629.667,o),
(423,646.667,o),
(423,650,cs),
(423,663.333,o),
(414.333,676,o),
(401,676,cs),
(356.762,676,o),
(344.297,662.482,o),
(318,602,c),
(317.333,601.333,o),
(312.5,590.333,o),
(303.5,569,cs),
(294.5,547.667,o),
(282.667,520,o),
(268,486,c),
(178.229,486,o),
(150.736,488,o),
(114,488,cs),
(99.333,488,o),
(83,466.667,o),
(83,448,cs),
(83,425.333,o),
(103.333,407,o),
(118,407,cs),
(233,407,l),
(187,299,l),
(65,299,ls),
(40.476,299,o),
(31,267.871,o),
(31,256,cs),
(31,233.754,o),
(53.445,218,o),
(60,218,cs),
(153,218,l),
(153,218,l)
);
},
{
closed = 1;
nodes = (
(459,407,l),
(413,300,l),
(390.333,300,o),
(367.833,299.833,o),
(345.5,299.5,cs),
(323.167,299.167,o),
(300.667,299,o),
(278,299,c),
(324,407,l),
(324,407,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
72 1 0 1 111 91 2 11 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
6 1 4 3 4 106 14 9 2 1 12 10 16 3 0 11 1 0 91 15 8 2 2 2 3 83 7 5 2 3 3 23 67 13 1 11 11 13 11 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
6 1 4 3 4 106 7 5 2 3 15 8 2 2 1 3 2 92 14 9 2 1 12 10 16 3 0 11 1 0 91 13 1 11 11 13 11 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
1 0 122 121 120 117 109 107 100 96 89 87 80 74 70 68 67 65 59 55 48 46 39 38 33 31 24 18 14 12 11 9 0 116 1 116 17 15
CALL[ ]	/* CallFunction */";
};
width = 739;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(58,227,o),
(71,227,o),
(91,227,cs),
(111,227,o),
(134,227.333,o),
(160,228,c),
(124.591,143.903,o),
(85,47.849,o),
(85,37,c),
(87.667,18.333,o),
(99.667,12,o),
(113,12,cs),
(145,12,o),
(149.333,27.333,o),
(156,42,c),
(159.333,53.333,o),
(167.833,76,o),
(181.5,110,cs),
(195.167,144,o),
(211.667,183.667,o),
(231,229,c),
(259.667,229,o),
(286.5,229.167,o),
(311.5,229.5,cs),
(336.5,229.833,o),
(355,230,o),
(367,230,cs),
(387,230,l),
(349.984,142.086,o),
(311,50.168,o),
(311,37,c),
(313.667,18.333,o),
(325.667,12,o),
(339,12,cs),
(371,12,o),
(375.333,27.333,o),
(382,42,c),
(385.333,53.333,o),
(393.833,76,o),
(407.5,110,cs),
(421.167,144,o),
(437.667,183.667,o),
(457,229,c),
(505.358,229,o),
(559.343,228,o),
(619,228,cs),
(629.667,228,o),
(644,244.333,o),
(644,259,cs),
(642.667,272.333,o),
(625.333,291,o),
(616,291,cs),
(483,291,l),
(537,417,l),
(670,417,ls),
(684.667,417,o),
(697,440.333,o),
(697,451,cs),
(697,465.667,o),
(679.333,480,o),
(674,480,cs),
(666.667,480,o),
(652.833,479.833,o),
(632.5,479.5,cs),
(612.167,479.167,o),
(589,479,o),
(563,479,c),
(609.574,587.674,o),
(631,645.17,o),
(631,650,cs),
(631,660.667,o),
(622.667,670,o),
(612,670,cs),
(572.994,670,o),
(569.109,648.219,o),
(546,602,c),
(492,478,l),
(468,477.333,o),
(445.833,477,o),
(425.5,477,cs),
(405.167,477,o),
(389.667,477,o),
(379,477,cs),
(336,477,l),
(370.522,557.552,o),
(405,642.048,o),
(405,650,cs),
(405,660.667,o),
(396.667,670,o),
(386,670,cs),
(346.994,670,o),
(343.109,648.219,o),
(320,602,c),
(266,477,l),
(173.032,477,o),
(144.439,479,o),
(106,479,cs),
(95.333,479,o),
(82,462.667,o),
(82,448,cs),
(82,430.667,o),
(100.667,416,o),
(110,416,cs),
(240,416,l),
(186,290,l),
(57,290,ls),
(42.333,290,o),
(30,266.667,o),
(30,256,cs),
(30,237.333,o),
(46.667,227,o),
(52,227,cs)
);
},
{
closed = 1;
nodes = (
(412,291,l),
(386.667,291,o),
(360.833,290.833,o),
(334.5,290.5,cs),
(308.167,290.167,o),
(282.333,290,o),
(257,290,c),
(265.667,311.333,o),
(274.5,332.333,o),
(283.5,353,cs),
(292.5,373.667,o),
(301.333,394.667,o),
(310,416,c),
(466,416,l),
(466,416,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
67 1 0 1 102 84 2 11 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
6 1 4 3 4 106 14 9 2 1 12 10 16 3 0 11 1 0 91 17 15 8 3 2 2 3 83 7 5 2 3 3 23 67 13 1 11 11 13 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
6 1 4 3 4 106 7 5 2 3 17 15 8 3 2 1 3 2 92 14 9 2 1 12 10 16 3 0 11 1 0 91 13 1 11 11 13 11 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
6 1 4 3 4 106 13 1 11 0 11 107 7 5 2 3 17 15 8 3 2 1 3 2 92 14 9 2 1 0 0 1 79 14 9 2 1 1 0 83 12 10 16 3 0 1 0 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
110 110 1 0 110 117 110 117 116 113 100 98 93 89 82 80 75 69 65 63 62 60 56 52 45 43 38 34 27 25 20 14 10 8 7 5 0 109 1 107 18 15
CALL[ ]	/* CallFunction */";
};
width = 725;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(122.667,22,o),
(127.333,31.333,o),
(130,42,cs),
(138.171,66.513,o),
(177.687,164.05,o),
(211,244,c),
(241.667,244,o),
(270.333,244.167,o),
(297,244.5,cs),
(323.667,244.833,o),
(343.333,245,o),
(356,245,cs),
(397,245,l),
(357.274,149.191,o),
(315,49.951,o),
(315,37,c),
(317,27,o),
(323.333,22,o),
(334,22,cs),
(348.667,22,o),
(353.333,31.333,o),
(356,42,cs),
(370.378,85.133,o),
(388.229,126.949,o),
(437,244,c),
(487.029,244,o),
(544.015,243,o),
(608,243,cs),
(618.667,243,o),
(623,252.333,o),
(623,259,c),
(621.667,265.667,o),
(614.333,276,o),
(605,276,cs),
(451,276,l),
(517,432,l),
(659,432,ls),
(673.667,432,o),
(676,444.333,o),
(676,451,cs),
(676,457.667,o),
(668.333,465,o),
(663,465,cs),
(647,465,o),
(591.333,464.333,o),
(530,463,c),
(566.104,546.491,o),
(605,643.803,o),
(605,650,cs),
(605,656.667,o),
(600.333,660,o),
(591,660,cs),
(581.667,660,o),
(574.667,655.167,o),
(570,645.5,cs),
(565.333,635.833,o),
(558.667,621.333,o),
(550,602,cs),
(490,463,l),
(464.667,462.333,o),
(440.833,462,o),
(418.5,462,cs),
(396.167,462,o),
(379.333,462,o),
(368,462,cs),
(304,462,l),
(339.855,544.914,o),
(379,643.752,o),
(379,650,cs),
(379,656.667,o),
(374.333,660,o),
(365,660,cs),
(339.756,660,o),
(339.585,640.961,o),
(324,602,cs),
(323.333,600.667,o),
(317.333,587,o),
(306,561,cs),
(294.667,535,o),
(280.667,502,o),
(264,462,c),
(168.52,462,o),
(132.57,464,o),
(95,464,cs),
(84.333,464,o),
(81,454.667,o),
(81,448,cs),
(81,438.667,o),
(89.667,431,o),
(99,431,cs),
(250,431,l),
(184,275,l),
(46,275,ls),
(31.333,275,o),
(29,262.667,o),
(29,256,cs),
(29,246.667,o),
(35.667,242,o),
(41,242,cs),
(48.333,242,o),
(64,242.167,o),
(88,242.5,cs),
(112,242.833,o),
(139.333,243,o),
(170,243,c),
(114.298,111.936,o),
(89,45.563,o),
(89,37,c),
(91,27,o),
(97.333,22,o),
(108,22,cs)
);
},
{
closed = 1;
nodes = (
(291,431,l),
(321.667,431,o),
(352.667,431.167,o),
(384,431.5,cs),
(415.333,431.833,o),
(446.333,432,o),
(477,432,c),
(466.333,406.667,o),
(455.333,381,o),
(444,355,cs),
(432.667,329,o),
(421.333,302.667,o),
(410,276,c),
(379.333,276,o),
(348.167,275.833,o),
(316.5,275.5,cs),
(284.833,275.167,o),
(254,275,o),
(224,275,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
65 1 0 1 102 83 2 11 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
6 1 4 3 4 106 14 9 2 1 12 10 16 3 0 11 1 0 91 15 8 2 2 2 3 83 7 5 2 3 3 23 67 13 1 11 11 13 11 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
6 1 4 3 4 106 7 5 2 3 15 8 2 2 1 3 2 92 14 9 2 1 12 10 16 3 0 11 1 0 91 13 1 11 11 13 11 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
6 1 4 3 4 106 13 1 11 0 11 107 7 5 2 3 15 8 2 2 1 3 2 92 14 9 2 1 0 0 1 79 14 9 2 1 1 0 83 12 10 16 3 0 1 0 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
1 0 119 116 113 110 101 99 92 88 82 80 73 67 63 61 60 58 54 50 44 42 39 35 29 27 20 14 10 8 7 5 0 109 1 107 17 15
CALL[ ]	/* CallFunction */";
};
width = 705;
}
);
note = numbersign;
unicode = 35;
},
{
glyphname = slash;
kernLeft = slash;
kernRight = slash;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(21.667,21.333,o),
(21,16.667,o),
(21,14,cs),
(21,-7.333,o),
(43.333,-19,o),
(58,-19,cs),
(84.667,-19,o),
(102.333,-9.667,o),
(109,5,cs),
(514,768,l),
(519.333,776,o),
(528,796.333,o),
(528,807,cs),
(528,823,o),
(511,838,o),
(483,838,cs),
(454.33,838,o),
(447.921,828.949,o),
(419,774,cs),
(392.421,720.843,o),
(364.038,663.195,o),
(336.5,606.5,cs),
(321.856,576.35,o),
(279.155,498.215,o),
(238,423,cs),
(178.792,313.836,o),
(133.686,233.013,o),
(107,182.5,cs),
(83.383,137.797,o),
(52.284,82.568,o),
(23,24,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 20 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
0 0 1 0 106 0 1 1 21 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
30 28 20 18 2 15
CALL[ ]	/* CallFunction */";
};
width = 548;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(21.667,16,o),
(21,13,o),
(21,9,cs),
(21,-5.667,o),
(37,-19,o),
(49,-19,cs),
(67.667,-19,o),
(84.333,-9.667,o),
(91,5,cs),
(496,768,ls),
(501.333,777.333,o),
(510,796.333,o),
(510,807,cs),
(510,815,o),
(509,831,o),
(485,831,cs),
(453,831,o),
(441,815.333,o),
(421,774,cs),
(381.775,693.682,o),
(374.126,677.376,o),
(346.5,620.5,cs),
(327.582,581.552,o),
(296.258,524.604,o),
(241,423,cs),
(209,364.333,o),
(190,331.167,o),
(178,310.5,cs),
(168.491,294.124,o),
(157.78,278.417,o),
(151.5,267,cs),
(111.301,193.911,o),
(97.143,166.286,o),
(23,18,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 20 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
0 0 1 0 106 0 1 1 21 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
30 28 20 18 2 15
CALL[ ]	/* CallFunction */";
};
width = 530;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(52,-19,o),
(55.667,-13.667,o),
(65,5,cs),
(470,768,ls),
(475.333,778.667,o),
(484,796.333,o),
(484,807,cs),
(484,815,o),
(481,821,o),
(469,821,cs),
(444.98,821,o),
(426.908,779.723,o),
(425,774,c),
(387.793,697.815,o),
(362.652,645.101,o),
(350,620.5,cs),
(330.856,583.276,o),
(298.957,522.212,o),
(245,423,cs),
(216.024,369.878,o),
(195.35,332.307,o),
(183.5,310,cs),
(174.767,293.562,o),
(164.671,277.22,o),
(158.5,266,cs),
(138.792,230.167,o),
(93.75,142.229,o),
(27,18,c),
(24.333,11.333,o),
(22,1,o),
(22,-7,cs),
(22,-15,o),
(26.667,-19,o),
(36,-19,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 12 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 14 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
32 30 22 20 2 15
CALL[ ]	/* CallFunction */";
};
width = 505;
}
);
note = slash;
unicode = 47;
},
{
glyphname = backslash;
kernLeft = backslash;
kernRight = backslash;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(496.519,77.61,o),
(465.921,135.329,o),
(441,182.5,cs),
(414.314,233.013,o),
(369.208,313.836,o),
(310,423,cs),
(268.845,498.215,o),
(226.144,576.35,o),
(211.5,606.5,cs),
(183.962,663.195,o),
(155.579,720.843,o),
(129,774,cs),
(102.276,824.775,o),
(95.318,838,o),
(65,838,cs),
(37,838,o),
(20,823,o),
(20,807,cs),
(20,796.333,o),
(28.667,776,o),
(34,768,c),
(439,5,ls),
(445.667,-9.667,o),
(463.333,-19,o),
(490,-19,cs),
(504.667,-19,o),
(527,-7.333,o),
(527,14,cs),
(527,16.667,o),
(526.333,21.333,o),
(525,24,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 20 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
0 1 0 1 106 0 0 0 21 0 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
40 37 2 17
CALL[ ]	/* CallFunction */";
};
width = 548;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(509,13,o),
(508.333,16,o),
(507,18,cs),
(432.857,166.286,o),
(418.699,193.911,o),
(378.5,267,cs),
(372.22,278.417,o),
(361.509,294.124,o),
(352,310.5,cs),
(340,331.167,o),
(321,364.333,o),
(289,423,cs),
(233.742,524.604,o),
(202.418,581.552,o),
(183.5,620.5,cs),
(155.874,677.376,o),
(148.225,693.682,o),
(109,774,cs),
(89,815.333,o),
(77,831,o),
(45,831,cs),
(21,831,o),
(20,815,o),
(20,807,cs),
(20,796.333,o),
(28.667,777.333,o),
(34,768,cs),
(439,5,ls),
(445.667,-9.667,o),
(462.333,-19,o),
(481,-19,cs),
(493,-19,o),
(509,-5.667,o),
(509,9,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 20 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
0 0 1 0 106 0 1 1 21 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
31 29 21 19 2 26
CALL[ ]	/* CallFunction */";
};
width = 530;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(478.333,-19,o),
(483,-15,o),
(483,-7,cs),
(483,1,o),
(480.667,11.333,o),
(478,18,c),
(411.25,142.229,o),
(366.208,230.167,o),
(346.5,266,cs),
(340.329,277.22,o),
(330.233,293.562,o),
(321.5,310,cs),
(309.65,332.307,o),
(288.976,369.878,o),
(260,423,cs),
(206.043,522.212,o),
(174.144,583.276,o),
(155,620.5,cs),
(142.348,645.101,o),
(117.207,697.815,o),
(80,774,c),
(78.092,779.723,o),
(60.02,821,o),
(36,821,cs),
(24,821,o),
(21,815,o),
(21,807,cs),
(21,796.333,o),
(29.667,778.667,o),
(35,768,cs),
(440,5,ls),
(449.333,-13.667,o),
(453,-19,o),
(469,-19,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 12 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 14 67 0 1 1 21 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
33 31 23 21 2 26
CALL[ ]	/* CallFunction */";
};
width = 505;
}
);
note = backslash;
unicode = 92;
},
{
glyphname = hyphen;
kernLeft = emdash;
kernRight = emdash;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(303,309,o),
(284.667,308.5,o),
(264,307.5,cs),
(243.333,306.5,o),
(219,306,o),
(191,306,cs),
(153.274,306,o),
(114.916,308,o),
(90,308,cs),
(67.333,308,o),
(57,287.667,o),
(57,269,cs),
(57,250.333,o),
(71.333,229,o),
(90,229,cs),
(155.171,229,o),
(242.617,230,o),
(311,230,cs),
(339.782,230,o),
(347,256.801,o),
(347,272,cs),
(347,292,o),
(332.333,309,o),
(319,309,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 14 7 0 26 1 18 3 15
CALL[ ]	/* CallFunction */";
};
width = 402;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(298,300,o),
(279.667,299.5,o),
(259,298.5,cs),
(238.333,297.5,o),
(214,297,o),
(186,297,cs),
(148.274,297,o),
(109.916,299,o),
(85,299,cs),
(66.333,299,o),
(59,283.667,o),
(59,269,cs),
(59,254.333,o),
(70.333,238,o),
(85,238,cs),
(150.171,238,o),
(237.617,239,o),
(306,239,cs),
(328.667,239,o),
(335,261.333,o),
(335,272,cs),
(335,286.667,o),
(324.667,300,o),
(314,300,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 12 5 0 24 1 16 3 15
CALL[ ]	/* CallFunction */";
};
width = 393;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(143.171,253,o),
(230.617,254,o),
(299,254,cs),
(313.667,254,o),
(318,265.333,o),
(318,272,cs),
(318,278.667,o),
(312.333,285,o),
(307,285,cs),
(291,285,o),
(272.667,284.5,o),
(252,283.5,cs),
(231.333,282.5,o),
(207,282,o),
(179,282,cs),
(141.274,282,o),
(102.916,284,o),
(78,284,cs),
(67.333,284,o),
(62,275.667,o),
(62,269,cs),
(62,262.333,o),
(68.667,253,o),
(78,253,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 12 5 0 24 1 16 3 15
CALL[ ]	/* CallFunction */";
};
width = 380;
}
);
note = hyphen;
unicode = 45;
},
{
glyphname = softhyphen;
kernLeft = emdash;
kernRight = emdash;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(303,309,o),
(284.667,308.5,o),
(264,307.5,cs),
(243.333,306.5,o),
(219,306,o),
(191,306,cs),
(153.274,306,o),
(114.916,308,o),
(90,308,cs),
(67.333,308,o),
(57,287.667,o),
(57,269,cs),
(57,250.333,o),
(71.333,229,o),
(90,229,cs),
(155.171,229,o),
(242.617,230,o),
(311,230,cs),
(339.782,230,o),
(347,256.801,o),
(347,272,cs),
(347,292,o),
(332.333,309,o),
(319,309,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 14 7 0 26 1 18 3 15
CALL[ ]	/* CallFunction */";
};
width = 402;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(298,300,o),
(279.667,299.5,o),
(259,298.5,cs),
(238.333,297.5,o),
(214,297,o),
(186,297,cs),
(148.274,297,o),
(109.916,299,o),
(85,299,cs),
(66.333,299,o),
(59,283.667,o),
(59,269,cs),
(59,254.333,o),
(70.333,238,o),
(85,238,cs),
(150.171,238,o),
(237.617,239,o),
(306,239,cs),
(328.667,239,o),
(335,261.333,o),
(335,272,cs),
(335,286.667,o),
(324.667,300,o),
(314,300,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 2 1 13 6 1 25 2 17 3 26
CALL[ ]	/* CallFunction */";
};
width = 393;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(143.171,253,o),
(230.617,254,o),
(299,254,cs),
(313.667,254,o),
(318,265.333,o),
(318,272,cs),
(318,278.667,o),
(312.333,285,o),
(307,285,cs),
(291,285,o),
(272.667,284.5,o),
(252,283.5,cs),
(231.333,282.5,o),
(207,282,o),
(179,282,cs),
(141.274,282,o),
(102.916,284,o),
(78,284,cs),
(67.333,284,o),
(62,275.667,o),
(62,269,cs),
(62,262.333,o),
(68.667,253,o),
(78,253,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 2 1 13 6 1 25 2 17 3 26
CALL[ ]	/* CallFunction */";
};
width = 380;
}
);
note = uni00AD;
unicode = 173;
},
{
glyphname = endash;
kernLeft = emdash;
kernRight = emdash;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(395.333,309,o),
(369.333,308.5,o),
(340,307.5,cs),
(310.667,306.5,o),
(276.667,306,o),
(238,306,cs),
(185.733,306,o),
(131.613,308,o),
(96,308,cs),
(69.333,308,o),
(57,287.667,o),
(57,269,cs),
(57,250.333,o),
(74.667,229,o),
(96,229,cs),
(186.753,229,o),
(309.564,230,o),
(406,230,cs),
(439.703,230,o),
(450,255.976,o),
(450,272,cs),
(450,292,o),
(432.667,309,o),
(418,309,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 14 7 0 26 1 18 3 15
CALL[ ]	/* CallFunction */";
};
width = 505;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(390.333,300,o),
(364.333,299.5,o),
(335,298.5,cs),
(305.667,297.5,o),
(271.667,297,o),
(233,297,cs),
(180.733,297,o),
(126.613,299,o),
(91,299,cs),
(68.333,299,o),
(59,283.667,o),
(59,269,cs),
(59,254.333,o),
(73.667,238,o),
(91,238,cs),
(181.753,238,o),
(304.564,239,o),
(401,239,cs),
(430.333,239,o),
(438,261.333,o),
(438,272,cs),
(438,286.667,o),
(425,300,o),
(413,300,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 12 5 0 24 1 16 3 15
CALL[ ]	/* CallFunction */";
};
width = 496;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(174.753,253,o),
(297.564,254,o),
(394,254,cs),
(404.667,254,o),
(411.833,256.167,o),
(415.5,260.5,cs),
(419.167,264.833,o),
(421,268.667,o),
(421,272,cs),
(421,278.667,o),
(412.667,285,o),
(406,285,cs),
(383.333,285,o),
(357.333,284.5,o),
(328,283.5,cs),
(298.667,282.5,o),
(264.667,282,o),
(226,282,cs),
(173.733,282,o),
(119.613,284,o),
(84,284,cs),
(69.333,284,o),
(62,275.667,o),
(62,269,cs),
(62,262.333,o),
(72,253,o),
(84,253,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 12 5 0 24 1 16 3 15
CALL[ ]	/* CallFunction */";
};
width = 483;
}
);
note = endash;
unicode = 8211;
},
{
glyphname = emdash;
kernLeft = emdash;
kernRight = emdash;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(652.243,309,o),
(517.518,306,o),
(372,306,cs),
(335.701,306,o),
(287.2,307,o),
(226.5,307,cs),
(165.966,307,o),
(121.132,308,o),
(92,308,cs),
(69.333,308,o),
(59,287.667,o),
(59,269,cs),
(59,250.333,o),
(72,229,o),
(92,229,cs),
(100,229,o),
(118,229,o),
(146,229,cs),
(174,229,o),
(207,229,o),
(245,229,cs),
(283,229,o),
(323.667,229.167,o),
(367,229.5,cs),
(410.333,229.833,o),
(451.333,230,o),
(490,230,cs),
(528.667,230,o),
(562.333,230,o),
(591,230,cs),
(619.667,230,o),
(638.333,230,o),
(647,230,cs),
(674.228,230,o),
(683,256.742,o),
(683,272,cs),
(683,292,o),
(668.333,309,o),
(655,309,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 16 7 0 32 1 20 3 15
CALL[ ]	/* CallFunction */";
};
width = 740;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(646.243,300,o),
(511.518,297,o),
(366,297,cs),
(329.701,297,o),
(281.2,298,o),
(220.5,298,cs),
(159.966,298,o),
(115.132,299,o),
(86,299,cs),
(67.333,299,o),
(60,283.667,o),
(60,269,cs),
(60,254.333,o),
(71.333,238,o),
(86,238,cs),
(94,238,o),
(112,238,o),
(140,238,cs),
(168,238,o),
(201,238,o),
(239,238,cs),
(277,238,o),
(317.667,238.167,o),
(361,238.5,cs),
(404.333,238.833,o),
(445.333,239,o),
(484,239,cs),
(522.667,239,o),
(556.333,239,o),
(585,239,cs),
(613.667,239,o),
(632.333,239,o),
(641,239,cs),
(663.667,239,o),
(670,261.333,o),
(670,272,cs),
(670,286.667,o),
(659.667,300,o),
(649,300,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 14 5 0 30 1 18 3 15
CALL[ ]	/* CallFunction */";
};
width = 729;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(86,253,o),
(104,253,o),
(132,253,cs),
(160,253,o),
(193,253,o),
(231,253,cs),
(269,253,o),
(309.667,253.167,o),
(353,253.5,cs),
(396.333,253.833,o),
(437.333,254,o),
(476,254,cs),
(514.667,254,o),
(548.333,254,o),
(577,254,cs),
(605.667,254,o),
(624.333,254,o),
(633,254,cs),
(647.667,254,o),
(652,265.333,o),
(652,272,cs),
(652,278.667,o),
(646.333,285,o),
(641,285,cs),
(638.243,285,o),
(503.518,282,o),
(358,282,cs),
(321.701,282,o),
(273.2,283,o),
(212.5,283,cs),
(151.966,283,o),
(107.132,284,o),
(78,284,cs),
(67.333,284,o),
(62,275.667,o),
(62,269,cs),
(62,262.333,o),
(68.667,253,o),
(78,253,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 14 5 0 30 1 18 3 15
CALL[ ]	/* CallFunction */";
};
width = 714;
}
);
note = emdash;
unicode = 8212;
},
{
glyphname = underscore;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(275.333,-16,o),
(249.333,-16.5,o),
(220,-17.5,cs),
(190.667,-18.5,o),
(156.667,-19,o),
(118,-19,cs),
(65.733,-19,o),
(11.613,-17,o),
(-24,-17,cs),
(-50.667,-17,o),
(-63,-37.333,o),
(-63,-56,cs),
(-63,-74.667,o),
(-45.333,-96,o),
(-24,-96,cs),
(66.753,-96,o),
(189.564,-95,o),
(286,-95,cs),
(319.703,-95,o),
(330,-69.024,o),
(330,-53,cs),
(330,-33,o),
(312.667,-16,o),
(298,-16,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 14 7 0 26 1 18 3 15
CALL[ ]	/* CallFunction */";
};
width = 270;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(319.333,-25,o),
(293.333,-25.5,o),
(264,-26.5,cs),
(234.667,-27.5,o),
(200.667,-28,o),
(162,-28,cs),
(109.733,-28,o),
(55.613,-26,o),
(20,-26,cs),
(-2.667,-26,o),
(-12,-41.333,o),
(-12,-56,cs),
(-12,-70.667,o),
(2.667,-87,o),
(20,-87,cs),
(110.753,-87,o),
(233.564,-86,o),
(330,-86,cs),
(359.333,-86,o),
(367,-63.667,o),
(367,-53,cs),
(367,-38.333,o),
(354,-25,o),
(342,-25,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 12 5 0 24 1 16 3 15
CALL[ ]	/* CallFunction */";
};
width = 357;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(173.753,-72,o),
(296.564,-71,o),
(393,-71,cs),
(403.667,-71,o),
(410.833,-68.833,o),
(414.5,-64.5,cs),
(418.167,-60.167,o),
(420,-56.333,o),
(420,-53,cs),
(420,-46.333,o),
(411.667,-40,o),
(405,-40,cs),
(382.333,-40,o),
(356.333,-40.5,o),
(327,-41.5,cs),
(297.667,-42.5,o),
(263.667,-43,o),
(225,-43,cs),
(172.733,-43,o),
(118.613,-41,o),
(83,-41,cs),
(68.333,-41,o),
(61,-49.333,o),
(61,-56,cs),
(61,-62.667,o),
(71,-72,o),
(83,-72,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 12 5 0 24 1 16 3 15
CALL[ ]	/* CallFunction */";
};
width = 481;
}
);
note = underscore;
unicode = 95;
},
{
glyphname = parenleft;
kernRight = parenleft;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(154.667,-8.667,o),
(167.333,-35,o),
(198,-35,cs),
(228.667,-35,o),
(238,-13.333,o),
(238,0,cs),
(238,26.682,o),
(209.933,77.714,o),
(186.5,139,cs),
(160.5,207,o),
(135,296.333,o),
(135,411,cs),
(135,523,o),
(167.167,612.167,o),
(198.5,679.5,cs),
(227.169,741.107,o),
(262,790.88,o),
(262,819,cs),
(262,831,o),
(253,854,o),
(221,854,cs),
(204.295,854,o),
(175,825,o),
(175,825,c),
(149.667,786.333,o),
(127,744.333,o),
(107,699,cs),
(72.333,621.667,o),
(39,518.333,o),
(39,409,cs),
(39,298.333,o),
(60,204.5,o),
(84,134.5,cs),
(105.962,70.445,o),
(132,20.999,o),
(144,6,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 20 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 0 83 0 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
46 46 2 17
CALL[ ]	/* CallFunction */";
};
width = 284;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(156.333,-8.667,o),
(168.333,-29,o),
(191,-29,cs),
(212.333,-29,o),
(220,-13.333,o),
(220,0,cs),
(220,26.558,o),
(191.828,73.382,o),
(168.5,132,cs),
(142.5,197.333,o),
(117,288.333,o),
(117,411,cs),
(117,531,o),
(149.167,619.667,o),
(180.5,685,cs),
(208.858,744.13,o),
(244,791.01,o),
(244,819,cs),
(244,831,o),
(238,848,o),
(214,848,cs),
(200.292,848,o),
(178,825,o),
(178,825,c),
(152.667,786.333,o),
(130,744.333,o),
(110,699,cs),
(75.333,621.667,o),
(42,518.333,o),
(42,409,cs),
(42,299.667,o),
(63.833,205.5,o),
(88.5,135.5,cs),
(110.406,73.333,o),
(136.378,23.703,o),
(147,6,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 20 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 0 1 107 0 0 0 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 9 values pushed */
0 0 1 0 106 0 1 1 97
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
46 46 2 17
CALL[ ]	/* CallFunction */";
};
width = 267;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(187.667,-19,o),
(195,-13.333,o),
(195,0,cs),
(195,26.432,o),
(166.767,65.018,o),
(143.5,120.5,cs),
(117.5,182.5,o),
(92,272.333,o),
(92,411,cs),
(92,539.85,o),
(125.275,636.214,o),
(155.5,693,cs),
(186.43,751.111,o),
(219,794.577,o),
(219,819,cs),
(219,831,o),
(216,838,o),
(204,838,cs),
(196.667,838,o),
(191.333,835.667,o),
(188,831,cs),
(184.667,826.333,o),
(183,824.333,o),
(183,825,c),
(157.667,786.333,o),
(135,744.333,o),
(115,699,cs),
(80.333,621.667,o),
(47,518.333,o),
(47,409,cs),
(47,299.667,o),
(70.833,206.5,o),
(95.5,136.5,cs),
(124.103,55.331,o),
(138.034,44.407,o),
(152,6,cs),
(157.333,-8.667,o),
(170.333,-19,o),
(181,-19,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
10 1 1 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 20 67 0 1 1 21 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
0 0 1 0 106 0 1 1 21 1 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
32 30 44 2 16
CALL[ ]	/* CallFunction */";
};
width = 243;
}
);
note = parenleft;
unicode = 40;
},
{
glyphname = parenright;
kernLeft = parenright;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(129.333,827.667,o),
(116.667,854,o),
(86,854,cs),
(55.333,854,o),
(46,832.333,o),
(46,819,cs),
(46,792.318,o),
(74.067,741.286,o),
(97.5,680,cs),
(123.5,612,o),
(149,521.333,o),
(149,408,cs),
(149,296,o),
(116.833,206.833,o),
(85.5,139.5,cs),
(56.831,77.893,o),
(22,28.12,o),
(22,0,cs),
(22,-12,o),
(31,-35,o),
(63,-35,cs),
(79.705,-35,o),
(109,-6,o),
(109,-6,c),
(134.333,32.667,o),
(157,74.667,o),
(177,120,cs),
(211.667,197.333,o),
(245,299.333,o),
(245,410,cs),
(245,519.333,o),
(224,614.5,o),
(200,684.5,cs),
(178.004,748.656,o),
(150.831,797.527,o),
(140,813,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 20 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 1 83 0 1 1 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
46 46 2 17
CALL[ ]	/* CallFunction */";
};
width = 284;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(110.667,827.667,o),
(98.667,848,o),
(76,848,cs),
(54.667,848,o),
(47,832.333,o),
(47,819,cs),
(47,792.442,o),
(75.172,745.618,o),
(98.5,687,cs),
(124.5,621.667,o),
(150,530.667,o),
(150,408,cs),
(150,288,o),
(117.833,199.333,o),
(86.5,134,cs),
(58.142,74.87,o),
(23,27.99,o),
(23,0,cs),
(23,-12,o),
(29,-29,o),
(53,-29,cs),
(66.708,-29,o),
(89,-6,o),
(89,-6,c),
(114.333,32.667,o),
(137,74.667,o),
(157,120,cs),
(191.667,197.333,o),
(225,300.667,o),
(225,410,cs),
(225,519.333,o),
(203.167,613.5,o),
(178.5,683.5,cs),
(156.594,745.667,o),
(130.622,795.297,o),
(120,813,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 20 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 1 0 107 0 1 1 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 9 values pushed */
0 1 0 1 106 0 0 0 97
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
46 47 2 28
CALL[ ]	/* CallFunction */";
};
width = 267;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(55.333,838,o),
(48,832.333,o),
(48,819,cs),
(48,792.568,o),
(76.233,753.982,o),
(99.5,698.5,cs),
(125.5,636.5,o),
(151,546.667,o),
(151,408,cs),
(151,279.15,o),
(117.725,182.786,o),
(87.5,126,cs),
(56.57,67.889,o),
(24,24.423,o),
(24,0,cs),
(24,-12,o),
(27,-19,o),
(39,-19,cs),
(46.333,-19,o),
(51.667,-16.667,o),
(55,-12,cs),
(58.333,-7.333,o),
(60,-5.333,o),
(60,-6,c),
(85.333,32.667,o),
(108,74.667,o),
(128,120,cs),
(162.667,197.333,o),
(196,300.667,o),
(196,410,cs),
(196,519.333,o),
(172.167,612.5,o),
(147.5,682.5,cs),
(118.897,763.669,o),
(104.966,774.593,o),
(91,813,cs),
(85.667,827.667,o),
(72.667,838,o),
(62,838,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
11 1 0 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 20 67 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
0 1 0 1 106 0 0 0 21 0 68
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
33 31 45 2 27
CALL[ ]	/* CallFunction */";
};
width = 243;
}
);
note = parenright;
unicode = 41;
},
{
glyphname = braceleft;
kernRight = braceleft;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(209.667,233,o),
(205,261.667,o),
(197,287,cs),
(183.245,331.017,o),
(152.164,374,o),
(99,374,cs),
(153.087,374,o),
(184.043,426.764,o),
(197,476,cs),
(205,506,o),
(209.667,540.333,o),
(211,579,cs),
(211,749,ls),
(211,761.472,o),
(215.652,772.628,o),
(264,778,cs),
(305,783,l),
(312.708,783,o),
(340,788.648,o),
(340,810,cs),
(340,835.555,o),
(316.625,838,o),
(304,838,cs),
(283.744,838,o),
(248.113,835,o),
(197,835,cs),
(132.616,835,o),
(117,772.935,o),
(117,747,cs),
(117,708.333,o),
(117.167,675.167,o),
(117.5,647.5,cs),
(117.833,619.833,o),
(118,597.333,o),
(118,580,cs),
(118,432.411,o),
(74.236,400,o),
(37,400,cs),
(11.667,400,o),
(-5,392.667,o),
(-5,374,cs),
(-5,356.667,o),
(7,348,o),
(31,348,cs),
(55.851,348,o),
(120,328.548,o),
(120,200,cs),
(120,32,ls),
(120,-44.761,o),
(143.641,-58,o),
(188,-58,cs),
(245,-58,ls),
(307,-58,o),
(338,-49,o),
(338,-31,cs),
(338,0.764,o),
(285.162,5,o),
(257,5,cs),
(215.667,5,o),
(211,13.667,o),
(211,59,cs),
(211,201,l),
(211,201,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 5 4 3 4 5 3 104 0 6 3 7 3 6 7 104 0 7 2 3 7 2 102 0 3 0 2 0 3 2 91 0 0 0 1 0 1 88 0 4 4 20 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 4 5 4 106 0 5 3 5 106 0 6 3 7 3 6 7 104 0 7 2 3 7 2 102 0 3 0 2 0 3 2 91 0 0 1 1 0 79 0 0 0 1 84 0 1 0 1 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
16 29 24 123 35 41 53 34 8 23
CALL[ ]	/* CallFunction */";
};
width = 349;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(191.667,233,o),
(187,261.667,o),
(179,287,cs),
(165.245,331.017,o),
(134.164,374,o),
(81,374,cs),
(135.087,374,o),
(166.043,426.764,o),
(179,476,cs),
(187,506,o),
(191.667,540.333,o),
(193,579,cs),
(193,753,ls),
(193,759.906,o),
(202.999,785.85,o),
(246,788,cs),
(297,794,ls),
(311.667,796.667,o),
(325,801.333,o),
(325,816,cs),
(325,836,o),
(306.667,838,o),
(296,838,cs),
(277.811,838,o),
(245.849,835,o),
(200,835,cs),
(121.835,835,o),
(120,763.339,o),
(120,747,cs),
(120,708.333,o),
(120.167,675.167,o),
(120.5,647.5,cs),
(120.833,619.833,o),
(121,597.333,o),
(121,580,cs),
(121,432.411,o),
(77.236,400,o),
(40,400,cs),
(14.667,400,o),
(-2,392.667,o),
(-2,374,cs),
(-2,356.667,o),
(10,348,o),
(34,348,cs),
(58.851,348,o),
(123,328.548,o),
(123,200,cs),
(123,32,ls),
(123,-44.761,o),
(146.641,-58,o),
(191,-58,cs),
(237,-58,ls),
(255.52,-58,o),
(323,-57.697,o),
(323,-36,cs),
(323,-7.821,o),
(265.169,-7,o),
(249,-7,cs),
(200.376,-7,o),
(193,-5.632,o),
(193,47,cs),
(193,201,l),
(193,201,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 6 3 7 3 6 7 104 0 7 2 3 7 2 102 0 3 0 2 0 3 2 91 0 0 0 1 0 1 87 0 5 5 4 83 0 4 4 20 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 6 3 7 3 6 7 104 0 7 2 3 7 2 102 0 4 0 5 3 4 5 91 0 3 0 2 0 3 2 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
16 27 22 123 35 41 70 52 8 23
CALL[ ]	/* CallFunction */";
};
width = 334;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(226,-58,ls),
(275.373,-58,o),
(302,-52.042,o),
(302,-43,cs),
(302,-30.753,o),
(255.002,-27,o),
(238,-27,cs),
(179.3,-27,o),
(167,-25.996,o),
(167,27,cs),
(167,201,ls),
(165.667,233,o),
(161,261.667,o),
(153,287,cs),
(139.245,331.017,o),
(108.164,374,o),
(55,374,cs),
(109.087,374,o),
(140.043,426.764,o),
(153,476,cs),
(161,506,o),
(165.667,540.333,o),
(167,579,cs),
(167,753,ls),
(167,767.61,o),
(171.518,803.152,o),
(220,808,cs),
(286,814,ls),
(293.333,814.667,o),
(298.167,816.5,o),
(300.5,819.5,cs),
(302.833,822.5,o),
(304,824.667,o),
(304,826,cs),
(304,836.667,o),
(295.667,838,o),
(285,838,cs),
(268.094,838,o),
(241.155,835,o),
(204,835,cs),
(125.835,835,o),
(124,763.339,o),
(124,747,cs),
(124,708.333,o),
(124.167,675.167,o),
(124.5,647.5,cs),
(124.833,619.833,o),
(125,597.333,o),
(125,580,cs),
(125,432.411,o),
(81.236,400,o),
(44,400,cs),
(18.667,400,o),
(2,392.667,o),
(2,374,cs),
(2,356.667,o),
(14,348,o),
(38,348,cs),
(62.851,348,o),
(127,328.548,o),
(127,200,cs),
(127,32,ls),
(127,-44.761,o),
(150.641,-58,o),
(195,-58,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 5 3 6 3 5 6 104 0 6 2 3 6 2 102 0 3 0 2 0 3 2 91 0 0 0 1 0 1 88 0 4 4 20 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 4 3 4 106 0 5 3 6 3 5 6 104 0 6 2 3 6 2 102 0 3 0 2 0 3 2 91 0 0 1 1 0 79 0 0 0 1 84 0 1 0 1 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
71 70 70 69 123 35 41 70 52 7 20
CALL[ ]	/* CallFunction */";
};
width = 313;
}
);
note = braceleft;
unicode = 123;
},
{
glyphname = braceright;
kernLeft = braceright;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(139.333,546.333,o),
(144,517.333,o),
(152,492,cs),
(165.058,450.216,o),
(193.078,406,o),
(250,406,cs),
(192.798,406,o),
(164.909,352.054,o),
(152,303,cs),
(144,273,o),
(139.333,239,o),
(138,201,cs),
(138,31,ls),
(138,15.201,o),
(128.292,6.81,o),
(85,2,cs),
(44,-3,ls),
(34.667,-4.333,o),
(9,-8.667,o),
(9,-30,cs),
(9,-55.555,o),
(32.375,-58,o),
(45,-58,cs),
(65.256,-58,o),
(100.887,-55,o),
(152,-55,cs),
(220.692,-55,o),
(232,2.736,o),
(232,33,cs),
(232,71.667,o),
(231.833,104.833,o),
(231.5,132.5,cs),
(231.167,160.167,o),
(231,182.667,o),
(231,200,cs),
(231,348.153,o),
(275.344,380,o),
(312,380,cs),
(337.333,380,o),
(354,387.333,o),
(354,406,cs),
(354,423.333,o),
(342,432,o),
(318,432,cs),
(293.149,432,o),
(229,451.452,o),
(229,580,cs),
(229,748,ls),
(229,824.761,o),
(205.359,838,o),
(161,838,cs),
(104,838,ls),
(42,838,o),
(11,829,o),
(11,811,cs),
(11,779.236,o),
(63.838,775,o),
(92,775,cs),
(133.333,775,o),
(138,766.333,o),
(138,721,cs),
(138,579,l),
(138,579,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 6 2 5 2 6 5 104 0 5 3 2 5 3 102 0 4 3 4 107 0 0 0 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 15 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 6 2 5 2 6 5 104 0 5 3 2 5 3 102 0 4 3 4 107 0 2 0 3 4 2 3 91 0 0 0 1 83 0 1 1 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 6 2 5 2 6 5 104 0 5 3 2 5 3 102 0 4 3 4 107 0 1 0 0 2 1 0 91 0 2 6 3 2 79 0 2 2 3 83 0 3 2 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
68 67 67 66 123 35 41 53 34 7 20
CALL[ ]	/* CallFunction */";
};
width = 349;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(142.333,547,o),
(147,518.333,o),
(155,493,cs),
(168.755,448.983,o),
(199.836,406,o),
(253,406,cs),
(198.913,406,o),
(167.957,353.236,o),
(155,304,cs),
(147,274,o),
(142.333,239.667,o),
(141,201,cs),
(141,27,ls),
(141,20.094,o),
(131.001,-5.85,o),
(88,-8,cs),
(37,-14,ls),
(22.333,-16.667,o),
(9,-21.333,o),
(9,-36,cs),
(9,-56,o),
(27.333,-58,o),
(38,-58,cs),
(56.189,-58,o),
(88.151,-55,o),
(134,-55,cs),
(212.165,-55,o),
(214,16.661,o),
(214,33,cs),
(214,71.667,o),
(213.833,104.833,o),
(213.5,132.5,cs),
(213.167,160.167,o),
(213,182.667,o),
(213,200,cs),
(213,347.589,o),
(256.764,380,o),
(294,380,cs),
(319.333,380,o),
(336,387.333,o),
(336,406,cs),
(336,423.333,o),
(324,432,o),
(300,432,cs),
(275.149,432,o),
(211,451.452,o),
(211,580,cs),
(211,748,ls),
(211,824.761,o),
(187.359,838,o),
(143,838,cs),
(97,838,ls),
(78.48,838,o),
(11,837.697,o),
(11,816,cs),
(11,787.821,o),
(68.831,787,o),
(85,787,cs),
(133.624,787,o),
(141,785.632,o),
(141,733,cs),
(141,579,l),
(141,579,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 7 2 6 2 7 6 104 0 6 3 2 6 3 102 0 5 0 4 5 4 87 0 0 0 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 15 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 7 2 6 2 7 6 104 0 6 3 2 6 3 102 0 2 0 3 5 2 3 91 0 5 0 4 5 4 87 0 0 0 1 83 0 1 1 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 7 2 6 2 7 6 104 0 6 3 2 6 3 102 0 1 0 0 2 1 0 91 0 2 0 3 5 2 3 91 0 5 4 4 5 79 0 5 5 4 83 0 4 5 4 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
16 27 22 123 35 41 70 53 8 34
CALL[ ]	/* CallFunction */";
};
width = 334;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(87,838,ls),
(37.627,838,o),
(11,832.042,o),
(11,823,cs),
(11,810.753,o),
(57.998,807,o),
(75,807,cs),
(133.7,807,o),
(146,805.996,o),
(146,753,cs),
(146,579,ls),
(147.333,547,o),
(152,518.333,o),
(160,493,cs),
(173.755,448.983,o),
(204.836,406,o),
(258,406,cs),
(203.913,406,o),
(172.957,353.236,o),
(160,304,cs),
(152,274,o),
(147.333,239.667,o),
(146,201,cs),
(146,27,ls),
(146,12.39,o),
(141.482,-23.152,o),
(93,-28,cs),
(27,-34,ls),
(19.667,-34.667,o),
(14.833,-36.5,o),
(12.5,-39.5,cs),
(10.167,-42.5,o),
(9,-44.667,o),
(9,-46,cs),
(9,-56.667,o),
(17.333,-58,o),
(28,-58,cs),
(44.906,-58,o),
(71.845,-55,o),
(109,-55,cs),
(187.165,-55,o),
(189,16.661,o),
(189,33,cs),
(189,71.667,o),
(188.833,104.833,o),
(188.5,132.5,cs),
(188.167,160.167,o),
(188,182.667,o),
(188,200,cs),
(188,347.589,o),
(231.764,380,o),
(269,380,cs),
(294.333,380,o),
(311,387.333,o),
(311,406,cs),
(311,423.333,o),
(299,432,o),
(275,432,cs),
(250.149,432,o),
(186,451.452,o),
(186,580,cs),
(186,748,ls),
(186,824.761,o),
(162.359,838,o),
(118,838,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 6 2 5 2 6 5 104 0 5 3 2 5 3 102 0 4 3 4 107 0 0 0 1 83 0 1 1 20 67 0 3 3 2 83 0 2 2 15 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 6 2 5 2 6 5 104 0 5 3 2 5 3 102 0 4 3 4 107 0 2 0 3 4 2 3 91 0 0 0 1 83 0 1 1 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 6 2 5 2 6 5 104 0 5 3 2 5 3 102 0 4 3 4 107 0 1 0 0 2 1 0 91 0 2 6 3 2 79 0 2 2 3 83 0 3 2 3 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
72 71 71 70 123 35 41 70 53 7 31
CALL[ ]	/* CallFunction */";
};
width = 313;
}
);
note = braceright;
unicode = 125;
},
{
glyphname = bracketleft;
kernRight = bracketleft;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(92.333,833.667,o),
(82,816,o),
(82,800,cs),
(83.76,708.457,o),
(84.45,639.691,o),
(85.5,583,cs),
(86.544,526.632,o),
(86,452.268,o),
(86,366,cs),
(86,279.159,o),
(85,149.492,o),
(85,-23,cs),
(85,-37,o),
(86.667,-46.333,o),
(90,-51,cs),
(93.333,-55.667,o),
(98,-58,o),
(104,-58,cs),
(230,-58,ls),
(273.907,-58,o),
(323,-54.281,o),
(323,-27,cs),
(323,-15,o),
(316.5,-6.667,o),
(303.5,-2,cs),
(290.5,2.667,o),
(270,5,o),
(242,5,cs),
(220.667,5,o),
(204.333,5.667,o),
(193,7,cs),
(181.667,8.333,o),
(176,13.333,o),
(176,22,cs),
(176,744,ls),
(176,753.333,o),
(179.667,772.667,o),
(197,774,cs),
(290,782,ls),
(310,784.667,o),
(325,787.333,o),
(325,810,cs),
(325,832.667,o),
(303.667,838,o),
(289,838,cs),
(289.654,838,o),
(187.239,838.51,o),
(103,835,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
0 1 0 2 1 2 88 0 0 0 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 0 106 0 1 2 2 1 79 0 1 1 2 84 0 2 1 2 72
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
69 44 96 3 18
CALL[ ]	/* CallFunction */";
};
width = 334;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(95.333,833.667,o),
(85,816,o),
(85,800,cs),
(86.76,708.457,o),
(87.45,639.691,o),
(88.5,583,cs),
(89.544,526.632,o),
(89,452.268,o),
(89,366,cs),
(89,355.333,o),
(89,339.833,o),
(89,319.5,cs),
(89,299.167,o),
(89,276.333,o),
(89,251,cs),
(89,225.667,o),
(89,199.167,o),
(89,171.5,cs),
(89,143.833,o),
(89,117.333,o),
(89,92,cs),
(89,66.667,o),
(88.833,43.833,o),
(88.5,23.5,cs),
(88.167,3.167,o),
(88,-12.333,o),
(88,-23,cs),
(88,-37,o),
(89.667,-46.333,o),
(93,-51,cs),
(96.333,-55.667,o),
(101,-58,o),
(107,-58,cs),
(222,-58,ls),
(250.838,-58,o),
(308,-57.542,o),
(308,-33,cs),
(308,-13.429,o),
(264.45,-7,o),
(234,-7,cs),
(209.333,-7,o),
(190.5,-6.333,o),
(177.5,-5,cs),
(164.5,-3.667,o),
(158,1.333,o),
(158,10,cs),
(158,756,ls),
(158,765.333,o),
(160.333,784.667,o),
(179,786,cs),
(282,794,ls),
(296.667,795.333,o),
(310,797.333,o),
(310,816,cs),
(310,836,o),
(291.667,838,o),
(281,838,cs),
(284.082,838,o),
(185.327,838.606,o),
(106,835,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
0 1 0 2 1 2 88 0 0 0 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 0 106 0 1 2 2 1 79 0 1 1 2 84 0 2 1 2 72
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
71 44 96 3 18
CALL[ ]	/* CallFunction */";
};
width = 319;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(211,-58,ls),
(260.373,-58,o),
(287,-52.042,o),
(287,-43,cs),
(287,-30.753,o),
(240.002,-27,o),
(223,-27,cs),
(193,-27,o),
(170.333,-26.333,o),
(155,-25,cs),
(139.667,-23.667,o),
(132,-18.667,o),
(132,-10,cs),
(132,776,ls),
(132,785.333,o),
(134.333,804.667,o),
(153,806,cs),
(271,814,ls),
(278.333,814.667,o),
(283.167,816.5,o),
(285.5,819.5,cs),
(287.833,822.5,o),
(289,824.667,o),
(289,826,cs),
(289,836.667,o),
(280.667,838,o),
(270,838,cs),
(270.913,838,o),
(180.769,838.37,o),
(110,835,cs),
(98,833.667,o),
(89,816,o),
(89,800,cs),
(90.76,708.457,o),
(91.45,639.691,o),
(92.5,583,cs),
(93.544,526.632,o),
(93,452.268,o),
(93,366,cs),
(93,355.333,o),
(93,339.833,o),
(93,319.5,cs),
(93,299.167,o),
(93,276.333,o),
(93,251,cs),
(93,225.667,o),
(93,199.167,o),
(93,171.5,cs),
(93,143.833,o),
(93,117.333,o),
(93,92,cs),
(93,66.667,o),
(92.833,43.833,o),
(92.5,23.5,cs),
(92.167,3.167,o),
(92,-12.333,o),
(92,-23,cs),
(92,-37,o),
(93.667,-46.333,o),
(97,-51,cs),
(100.333,-55.667,o),
(105,-58,o),
(111,-58,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 2 0 3 2 3 87 0 1 1 0 83 0 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 0 0 1 2 0 1 89 0 2 3 3 2 79 0 2 2 3 83 0 3 2 3 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
70 54 21 96 4 19
CALL[ ]	/* CallFunction */";
};
width = 298;
}
);
note = bracketleft;
unicode = 91;
},
{
glyphname = bracketright;
kernLeft = bracketright;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(183.085,836.996,o),
(120.284,838,o),
(45,838,cs),
(30.333,838,o),
(9,832.667,o),
(9,810,cs),
(9,787.333,o),
(24,784.667,o),
(44,782,cs),
(137,774,ls),
(154.333,772.667,o),
(158,753.333,o),
(158,744,cs),
(158,22,ls),
(158,13.333,o),
(152.333,8.333,o),
(141,7,cs),
(129.667,5.667,o),
(113.333,5,o),
(92,5,cs),
(64,5,o),
(43.5,2.667,o),
(30.5,-2,cs),
(17.5,-6.667,o),
(11,-15,o),
(11,-27,cs),
(11,-54.281,o),
(60.093,-58,o),
(104,-58,cs),
(230,-58,ls),
(236,-58,o),
(240.667,-55.667,o),
(244,-51,cs),
(247.333,-46.333,o),
(249,-37,o),
(249,-23,cs),
(249,47.566,o),
(248,136.805,o),
(248,366,cs),
(248,400.667,o),
(248,430.667,o),
(248,456,cs),
(248,481.333,o),
(248,504.333,o),
(248,525,cs),
(248,579.092,o),
(249.721,650.762,o),
(250.5,710,cs),
(250.833,735.333,o),
(251.333,765.333,o),
(252,800,cs),
(252,816,o),
(241.667,833.667,o),
(231,835,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
0 1 0 0 1 0 88 3 1 2 2 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
3 1 2 1 2 106 0 1 0 0 1 79 0 1 1 0 84 0 0 1 0 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 45 0 40 28 26 21 17 4 15
CALL[ ]	/* CallFunction */";
};
width = 334;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(166.987,837,o),
(108.252,838,o),
(38,838,cs),
(27.333,838,o),
(9,836,o),
(9,816,cs),
(9,797.333,o),
(22.333,795.333,o),
(37,794,cs),
(140,786,ls),
(158.667,784.667,o),
(161,765.333,o),
(161,756,cs),
(161,10,ls),
(161,1.333,o),
(154.5,-3.667,o),
(141.5,-5,cs),
(128.5,-6.333,o),
(109.667,-7,o),
(85,-7,cs),
(54.55,-7,o),
(11,-13.429,o),
(11,-33,cs),
(11,-57.542,o),
(68.162,-58,o),
(97,-58,cs),
(212,-58,ls),
(218,-58,o),
(222.667,-55.667,o),
(226,-51,cs),
(229.333,-46.333,o),
(231,-37,o),
(231,-23,cs),
(231,-12.333,o),
(230.833,3.167,o),
(230.5,23.5,cs),
(230.167,43.833,o),
(230,66.667,o),
(230,92,cs),
(230,117.333,o),
(230,143.833,o),
(230,171.5,cs),
(230,199.167,o),
(230,225.667,o),
(230,251,cs),
(230,276.333,o),
(230,299.167,o),
(230,319.5,cs),
(230,339.833,o),
(230,355.333,o),
(230,366,cs),
(230,400.667,o),
(230,430.667,o),
(230,456,cs),
(230,481.333,o),
(230,504.333,o),
(230,525,cs),
(230,579.092,o),
(231.721,650.762,o),
(232.5,710,cs),
(232.833,735.333,o),
(233.333,765.333,o),
(234,800,cs),
(234,816,o),
(223.667,833.667,o),
(213,835,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
0 1 0 0 1 0 88 3 1 2 2 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
3 1 2 1 2 106 0 1 0 0 1 79 0 1 1 0 84 0 0 1 0 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 49 0 44 32 30 23 19 4 15
CALL[ ]	/* CallFunction */";
};
width = 319;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(187,-58,ls),
(193,-58,o),
(197.667,-55.667,o),
(201,-51,cs),
(204.333,-46.333,o),
(206,-37,o),
(206,-23,cs),
(206,-12.333,o),
(205.833,3.167,o),
(205.5,23.5,cs),
(205.167,43.833,o),
(205,66.667,o),
(205,92,cs),
(205,117.333,o),
(205,143.833,o),
(205,171.5,cs),
(205,199.167,o),
(205,225.667,o),
(205,251,cs),
(205,276.333,o),
(205,299.167,o),
(205,319.5,cs),
(205,339.833,o),
(205,355.333,o),
(205,366,cs),
(205,400.667,o),
(205,430.667,o),
(205,456,cs),
(205,481.333,o),
(205,504.333,o),
(205,525,cs),
(205,579.092,o),
(206.721,650.762,o),
(207.5,710,cs),
(207.833,735.333,o),
(208.333,765.333,o),
(209,800,cs),
(209,816,o),
(200,833.667,o),
(188,835,cs),
(145.652,837.017,o),
(91.918,838,o),
(28,838,cs),
(17.333,838,o),
(9,836.667,o),
(9,826,cs),
(9,824.667,o),
(10.167,822.5,o),
(12.5,819.5,cs),
(14.833,816.5,o),
(19.667,814.667,o),
(27,814,cs),
(145,806,ls),
(163.667,804.667,o),
(166,785.333,o),
(166,776,cs),
(166,-10,ls),
(166,-18.667,o),
(158.333,-23.667,o),
(143,-25,cs),
(127.667,-26.333,o),
(105,-27,o),
(75,-27,cs),
(76.928,-27,o),
(11,-27.682,o),
(11,-43,cs),
(11,-52.042,o),
(37.627,-58,o),
(87,-58,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 1 0 0 1 0 87 0 2 2 3 83 4 1 3 3 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
4 1 3 0 2 1 3 2 89 0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 49 0 44 39 38 32 29 23 19 5 15
CALL[ ]	/* CallFunction */";
};
width = 298;
}
);
note = bracketright;
unicode = 93;
},
{
glyphname = quotesinglbase;
kernLeft = comma;
kernRight = comma;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(54,39.846,o),
(86,33.477,o),
(86,14,cs),
(86,-2.073,o),
(61,-68.629,o),
(61,-76,cs),
(61,-85.333,o),
(76.333,-94,o),
(83,-94,cs),
(125.75,-94,o),
(153,28.344,o),
(153,58,cs),
(153,91.333,o),
(131.667,113,o),
(101,113,cs),
(74.333,113,o),
(54,95,o),
(54,71,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 38 34 2 17
CALL[ ]	/* CallFunction */";
};
width = 188;
},
{
background = {
shapes = (
{
closed = 1;
nodes = (
(101,-86,o),
(115,-36,o),
(120,-6,q),
(112,-23,o),
(94,-48,o),
(83,-48,qs),
(78,-48,o),
(67,-39,o),
(67,-33,qs),
(67,-29,o),
(73,-10,o),
(80,12,o),
(86,33,o),
(86,39,qs),
(86,44,o),
(78,52,o),
(68,62,o),
(60,74,o),
(60,83,qs),
(60,97,o),
(80,117,o),
(96,117,qs),
(104,117,o),
(112,114,q),
(102,122,o),
(88,122,qs),
(74,122,o),
(59,103,o),
(52,79,o),
(51,55,o),
(51,50,qs),
(51,43,o),
(53,-1,o),
(61,-49,o),
(76,-86,o),
(89,-86,qs)
);
},
{
closed = 1;
nodes = (
(128,16,o),
(138,62,o),
(138,73,qs),
(138,104,o),
(112,114,q),
(123,105,o),
(126,76,o),
(126,65,qs),
(126,62,o),
(123,20,o),
(120,-6,q)
);
}
);
};
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(111,-65,o),
(138,31,o),
(138,68,cs),
(138,98,o),
(119,117,o),
(92,117,cs),
(68,117,o),
(52,100,o),
(52,79,cs),
(52,54,o),
(81,44,o),
(81,31,cs),
(81,13,o),
(60,-37,o),
(60,-49,cs),
(60,-58,o),
(69,-65,o),
(77,-65,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
46 40 24 3 4 2 1 1 66 4 1 0 0 1 2 0 1 91 0 2 3 3 2 79 0 2 2 3 83 0 3 2 3 71 2 1 28 26 22 20 6 4 1 36 2 36 5 26
CALL[ ]	/* CallFunction */";
};
width = 186;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(107,-48,o),
(131,39,o),
(131,73,cs),
(131,100,o),
(114,117,o),
(89,117,cs),
(68,117,o),
(53,102,o),
(53,83,cs),
(53,60,o),
(79,51,o),
(79,39,cs),
(79,23,o),
(60,-22,o),
(60,-33,cs),
(60,-41,o),
(69,-48,o),
(76,-48,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 38 35 2 28
CALL[ ]	/* CallFunction */";
};
width = 183;
}
);
note = quotesinglbase;
unicode = 8218;
},
{
glyphname = quotedblbase;
kernLeft = comma;
kernRight = comma;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(54,39.846,o),
(86,33.477,o),
(86,14,cs),
(86,-2.073,o),
(61,-68.629,o),
(61,-76,cs),
(61,-85.333,o),
(76.333,-94,o),
(83,-94,cs),
(125.75,-94,o),
(153,28.344,o),
(153,58,cs),
(153,91.333,o),
(131.667,113,o),
(101,113,cs),
(74.333,113,o),
(54,95,o),
(54,71,cs)
);
},
{
closed = 1;
nodes = (
(180,39.846,o),
(212,33.477,o),
(212,14,cs),
(212,-2.073,o),
(187,-68.629,o),
(187,-76,cs),
(187,-85.333,o),
(202.333,-94,o),
(209,-94,cs),
(251.75,-94,o),
(279,28.344,o),
(279,58,cs),
(279,91.333,o),
(257.667,113,o),
(227,113,cs),
(200.333,113,o),
(180,95,o),
(180,71,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 3 1 1 0 1 71 38 46 38 34 4 19
CALL[ ]	/* CallFunction */";
};
width = 314;
},
{
background = {
shapes = (
{
closed = 1;
nodes = (
(59,103,o),
(52,79,o),
(51,55,o),
(51,50,qs),
(51,43,o),
(53,-1,o),
(61,-49,o),
(76,-86,o),
(89,-86,qs),
(101,-86,o),
(115,-36,o),
(120,-6,q),
(112,-23,o),
(94,-48,o),
(83,-48,qs),
(78,-48,o),
(67,-39,o),
(67,-33,qs),
(67,-29,o),
(73,-10,o),
(80,12,o),
(86,33,o),
(86,39,qs),
(86,44,o),
(78,52,o),
(68,62,o),
(60,74,o),
(60,83,qs),
(60,97,o),
(80,117,o),
(96,117,qs),
(104,117,o),
(112,114,q),
(102,122,o),
(88,122,qs),
(74,122,o)
);
},
{
closed = 1;
nodes = (
(112,114,q),
(123,105,o),
(126,76,o),
(126,65,qs),
(126,62,o),
(123,20,o),
(120,-6,q),
(128,16,o),
(138,62,o),
(138,73,qs),
(138,104,o)
);
},
{
closed = 1;
nodes = (
(185,103,o),
(178,79,o),
(177,55,o),
(177,50,qs),
(177,43,o),
(179,-1,o),
(187,-49,o),
(202,-86,o),
(215,-86,qs),
(227,-86,o),
(241,-36,o),
(246,-6,q),
(238,-23,o),
(220,-48,o),
(209,-48,qs),
(204,-48,o),
(193,-39,o),
(193,-33,qs),
(193,-29,o),
(199,-10,o),
(206,12,o),
(212,33,o),
(212,39,qs),
(212,44,o),
(204,52,o),
(194,62,o),
(186,74,o),
(186,83,qs),
(186,97,o),
(206,117,o),
(222,117,qs),
(230,117,o),
(238,114,q),
(228,122,o),
(214,122,qs),
(200,122,o)
);
},
{
closed = 1;
nodes = (
(238,114,q),
(249,105,o),
(252,76,o),
(252,65,qs),
(252,62,o),
(249,20,o),
(246,-6,q),
(254,16,o),
(264,62,o),
(264,73,qs),
(264,104,o)
);
}
);
};
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(111,-70,o),
(138,26,o),
(138,63,cs),
(138,93,o),
(119,112,o),
(92,112,cs),
(68,112,o),
(52,95,o),
(52,74,cs),
(52,49,o),
(81,39,o),
(81,26,cs),
(81,8,o),
(60,-42,o),
(60,-54,cs),
(60,-63,o),
(69,-70,o),
(77,-70,cs)
);
},
{
closed = 1;
nodes = (
(231,-70,o),
(258,26,o),
(258,63,cs),
(258,93,o),
(239,112,o),
(212,112,cs),
(188,112,o),
(172,95,o),
(172,74,cs),
(172,49,o),
(201,39,o),
(201,26,cs),
(201,8,o),
(180,-42,o),
(180,-54,cs),
(180,-63,o),
(189,-70,o),
(197,-70,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
93 87 71 50 46 40 24 3 8 2 1 1 66 9 4 8 3 0 5 1 1 2 0 1 91 6 1 2 3 3 2 79 6 1 2 2 3 83 7 1 3 2 3 71 49 48 2 1 75 73 69 67 53 51 48 83 49 83 28 26 22 20 6 4 1 36 2 36 10 26
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(107.444,-48,o),
(131,38.593,o),
(131,73,cs),
(131,99.667,o),
(114.333,117,o),
(89,117,cs),
(67.667,117,o),
(53,101.667,o),
(53,83,cs),
(53,59.909,o),
(79,51.261,o),
(79,39,cs),
(79,22.853,o),
(60,-22.351,o),
(60,-33,cs),
(60,-41,o),
(69.333,-48,o),
(76,-48,cs)
);
},
{
closed = 1;
nodes = (
(233.444,-48,o),
(257,38.593,o),
(257,73,cs),
(257,99.667,o),
(240.333,117,o),
(215,117,cs),
(193.667,117,o),
(179,101.667,o),
(179,83,cs),
(179,59.909,o),
(205,51.261,o),
(205,39,cs),
(205,22.853,o),
(186,-22.351,o),
(186,-33,cs),
(186,-41,o),
(195.333,-48,o),
(202,-48,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 3 1 1 0 1 71 38 46 38 35 4 30
CALL[ ]	/* CallFunction */";
};
width = 309;
}
);
note = quotedblbase;
unicode = 8222;
},
{
glyphname = quotedblleft;
kernLeft = quotedblleft;
kernRight = quotedblleft;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(225.667,718,o),
(246,736,o),
(246,760,cs),
(246,791.154,o),
(214,797.523,o),
(214,817,cs),
(214,830.954,o),
(239,901.91,o),
(239,907,cs),
(239,916.333,o),
(223.667,925,o),
(217,925,cs),
(171.441,925,o),
(147,803.29,o),
(147,773,cs),
(147,739.667,o),
(168.333,718,o),
(199,718,cs)
);
},
{
closed = 1;
nodes = (
(99.667,718,o),
(120,736,o),
(120,760,cs),
(120,791.154,o),
(88,797.523,o),
(88,817,cs),
(88,830.954,o),
(113,901.91,o),
(113,907,cs),
(113,916.333,o),
(97.667,925,o),
(91,925,cs),
(45.441,925,o),
(21,803.29,o),
(21,773,cs),
(21,739.667,o),
(42.333,718,o),
(73,718,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
3 1 1 0 0 1 79 3 1 1 1 0 83 2 1 0 1 0 71 38 46 38 34 4 19
CALL[ ]	/* CallFunction */";
};
width = 285;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(235,720,o),
(251,737,o),
(251,758,cs),
(251,783,o),
(222,793,o),
(222,806,cs),
(222,824,o),
(243,874,o),
(243,886,cs),
(243,895,o),
(234,902,o),
(226,902,cs),
(192,902,o),
(165,806,o),
(165,769,cs),
(165,739,o),
(184,720,o),
(211,720,cs)
);
},
{
closed = 1;
nodes = (
(115,720,o),
(131,737,o),
(131,758,cs),
(131,783,o),
(102,793,o),
(102,806,cs),
(102,824,o),
(123,874,o),
(123,886,cs),
(123,895,o),
(114,902,o),
(106,902,cs),
(72,902,o),
(45,806,o),
(45,769,cs),
(45,739,o),
(64,720,o),
(91,720,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
93 87 71 50 46 40 24 3 8 1 2 1 66 7 1 3 6 1 2 1 3 2 91 5 1 1 0 0 1 79 5 1 1 1 0 83 9 4 8 3 0 1 0 71 49 48 2 1 75 73 69 67 53 51 48 83 49 83 28 26 22 20 6 4 1 36 2 36 10 26
CALL[ ]	/* CallFunction */";
};
width = 282;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(227.333,715,o),
(242,730.333,o),
(242,749,cs),
(242,772.091,o),
(216,780.739,o),
(216,793,cs),
(216,809.147,o),
(235,854.351,o),
(235,865,cs),
(235,873,o),
(225.667,880,o),
(219,880,cs),
(187.556,880,o),
(164,793.407,o),
(164,759,cs),
(164,732.333,o),
(180.667,715,o),
(206,715,cs)
);
},
{
closed = 1;
nodes = (
(101.333,715,o),
(116,730.333,o),
(116,749,cs),
(116,772.091,o),
(90,780.739,o),
(90,793,cs),
(90,809.147,o),
(109,854.351,o),
(109,865,cs),
(109,873,o),
(99.667,880,o),
(93,880,cs),
(61.556,880,o),
(38,793.407,o),
(38,759,cs),
(38,732.333,o),
(54.667,715,o),
(80,715,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
3 1 1 0 0 1 79 3 1 1 1 0 83 2 1 0 1 0 71 38 46 38 35 4 30
CALL[ ]	/* CallFunction */";
};
width = 278;
}
);
note = quotedblleft;
unicode = 8220;
},
{
glyphname = quotedblright;
kernLeft = quoteright;
kernRight = quoteright;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(43,773.846,o),
(75,767.477,o),
(75,748,cs),
(75,731.927,o),
(50,665.371,o),
(50,658,cs),
(50,648.667,o),
(65.333,640,o),
(72,640,cs),
(114.75,640,o),
(142,762.344,o),
(142,792,cs),
(142,825.333,o),
(120.667,847,o),
(90,847,cs),
(63.333,847,o),
(43,829,o),
(43,805,cs)
);
},
{
closed = 1;
nodes = (
(169,773.846,o),
(201,767.477,o),
(201,748,cs),
(201,731.927,o),
(176,665.371,o),
(176,658,cs),
(176,648.667,o),
(191.333,640,o),
(198,640,cs),
(240.75,640,o),
(268,762.344,o),
(268,792,cs),
(268,825.333,o),
(246.667,847,o),
(216,847,cs),
(189.333,847,o),
(169,829,o),
(169,805,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
3 1 1 1 0 83 2 1 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 3 1 1 0 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
38 46 38 34 4 19
CALL[ ]	/* CallFunction */";
};
width = 287;
},
{
background = {
shapes = (
{
closed = 1;
nodes = (
(47,836,o),
(40,812,o),
(39,788,o),
(39,783,qs),
(39,776,o),
(41,732,o),
(49,684,o),
(64,647,o),
(77,647,qs),
(89,647,o),
(103,697,o),
(108,727,q),
(100,710,o),
(82,685,o),
(71,685,qs),
(66,685,o),
(55,694,o),
(55,700,qs),
(55,704,o),
(61,723,o),
(68,745,o),
(74,766,o),
(74,772,qs),
(74,777,o),
(66,785,o),
(56,795,o),
(48,807,o),
(48,816,qs),
(48,830,o),
(68,850,o),
(84,850,qs),
(92,850,o),
(100,847,q),
(90,855,o),
(76,855,qs),
(62,855,o)
);
},
{
closed = 1;
nodes = (
(100,847,q),
(111,838,o),
(114,809,o),
(114,798,qs),
(114,795,o),
(111,753,o),
(108,727,q),
(116,749,o),
(126,795,o),
(126,806,qs),
(126,837,o)
);
},
{
closed = 1;
nodes = (
(173,836,o),
(166,812,o),
(165,788,o),
(165,783,qs),
(165,776,o),
(167,732,o),
(175,684,o),
(190,647,o),
(203,647,qs),
(215,647,o),
(229,697,o),
(234,727,q),
(226,710,o),
(208,685,o),
(197,685,qs),
(192,685,o),
(181,694,o),
(181,700,qs),
(181,704,o),
(187,723,o),
(194,745,o),
(200,766,o),
(200,772,qs),
(200,777,o),
(192,785,o),
(182,795,o),
(174,807,o),
(174,816,qs),
(174,830,o),
(194,850,o),
(210,850,qs),
(218,850,o),
(226,847,q),
(216,855,o),
(202,855,qs),
(188,855,o)
);
},
{
closed = 1;
nodes = (
(226,847,q),
(237,838,o),
(240,809,o),
(240,798,qs),
(240,795,o),
(237,753,o),
(234,727,q),
(242,749,o),
(252,795,o),
(252,806,qs),
(252,837,o)
);
}
);
};
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(61,848,o),
(45,831,o),
(45,810,cs),
(45,785,o),
(74,775,o),
(74,762,cs),
(74,744,o),
(53,694,o),
(53,682,cs),
(53,673,o),
(62,666,o),
(70,666,cs),
(104,666,o),
(131,762,o),
(131,799,cs),
(131,829,o),
(112,848,o),
(85,848,cs)
);
},
{
closed = 1;
nodes = (
(181,848,o),
(165,831,o),
(165,810,cs),
(165,785,o),
(194,775,o),
(194,762,cs),
(194,744,o),
(173,694,o),
(173,682,cs),
(173,673,o),
(182,666,o),
(190,666,cs),
(224,666,o),
(251,762,o),
(251,799,cs),
(251,829,o),
(232,848,o),
(205,848,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
93 87 71 50 46 40 24 3 8 2 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
6 1 2 7 1 3 2 3 87 5 1 1 1 0 83 9 4 8 3 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
9 4 8 3 0 5 1 1 2 0 1 91 6 1 2 3 3 2 79 6 1 2 2 3 83 7 1 3 2 3 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
49 48 2 1 75 73 69 67 53 51 48 83 49 83 28 26 22 20 6 4 1 36 2 36 10 26
CALL[ ]	/* CallFunction */";
};
width = 283;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(94.444,685,o),
(118,771.593,o),
(118,806,cs),
(118,832.667,o),
(101.333,850,o),
(76,850,cs),
(54.667,850,o),
(40,834.667,o),
(40,816,cs),
(40,792.909,o),
(66,784.261,o),
(66,772,cs),
(66,755.853,o),
(47,710.649,o),
(47,700,cs),
(47,692,o),
(56.333,685,o),
(63,685,cs)
);
},
{
closed = 1;
nodes = (
(220.444,685,o),
(244,771.593,o),
(244,806,cs),
(244,832.667,o),
(227.333,850,o),
(202,850,cs),
(180.667,850,o),
(166,834.667,o),
(166,816,cs),
(166,792.909,o),
(192,784.261,o),
(192,772,cs),
(192,755.853,o),
(173,710.649,o),
(173,700,cs),
(173,692,o),
(182.333,685,o),
(189,685,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
3 1 1 1 0 83 2 1 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 3 1 1 0 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
38 46 38 35 4 30
CALL[ ]	/* CallFunction */";
};
width = 278;
}
);
note = quotedblright;
unicode = 8221;
},
{
glyphname = quoteleft;
kernLeft = quotedblleft;
kernRight = quotedblleft;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(120,791.154,o),
(88,797.523,o),
(88,817,cs),
(88,830.954,o),
(113,901.91,o),
(113,907,cs),
(113,916.333,o),
(97.667,925,o),
(91,925,cs),
(45.441,925,o),
(21,803.29,o),
(21,773,cs),
(21,739.667,o),
(42.333,718,o),
(73,718,cs),
(99.667,718,o),
(120,736,o),
(120,760,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71 38 34 2 17
CALL[ ]	/* CallFunction */";
};
width = 159;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(104,720,o),
(120,737,o),
(120,758,cs),
(120,783,o),
(91,793,o),
(91,806,cs),
(91,824,o),
(112,874,o),
(112,886,cs),
(112,895,o),
(103,902,o),
(95,902,cs),
(61,902,o),
(34,806,o),
(34,769,cs),
(34,739,o),
(53,720,o),
(80,720,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
46 40 24 3 4 1 2 1 66 0 3 0 2 1 3 2 91 0 1 0 0 1 79 0 1 1 0 83 4 1 0 1 0 71 2 1 28 26 22 20 6 4 1 36 2 36 5 26
CALL[ ]	/* CallFunction */";
};
width = 156;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(61.556,880,o),
(38,793.407,o),
(38,759,cs),
(38,732.333,o),
(54.667,715,o),
(80,715,cs),
(101.333,715,o),
(116,730.333,o),
(116,749,cs),
(116,772.091,o),
(90,780.739,o),
(90,793,cs),
(90,809.147,o),
(109,854.351,o),
(109,865,cs),
(109,873,o),
(99.667,880,o),
(93,880,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71 38 35 2 28
CALL[ ]	/* CallFunction */";
};
width = 152;
}
);
note = quoteleft;
unicode = 8216;
},
{
glyphname = quoteright;
kernLeft = quoteright;
kernRight = quoteright;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(43,773.846,o),
(75,767.477,o),
(75,748,cs),
(75,731.927,o),
(50,665.371,o),
(50,658,cs),
(50,648.667,o),
(65.333,640,o),
(72,640,cs),
(114.75,640,o),
(142,762.344,o),
(142,792,cs),
(142,825.333,o),
(120.667,847,o),
(90,847,cs),
(63.333,847,o),
(43,829,o),
(43,805,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 0 83 0 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
38 34 2 17
CALL[ ]	/* CallFunction */";
};
width = 161;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(54,848,o),
(38,831,o),
(38,810,cs),
(38,785,o),
(67,775,o),
(67,762,cs),
(67,744,o),
(46,694,o),
(46,682,cs),
(46,673,o),
(55,666,o),
(63,666,cs),
(97,666,o),
(124,762,o),
(124,799,cs),
(124,829,o),
(105,848,o),
(78,848,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
45 39 23 2 4 2 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 2 0 3 2 3 87 0 1 1 0 83 4 1 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
4 1 0 0 1 2 0 1 91 0 2 3 3 2 79 0 2 2 3 83 0 3 2 3 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
1 0 27 25 21 19 5 3 0 35 1 35 5 15
CALL[ ]	/* CallFunction */";
};
width = 157;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(94.444,685,o),
(118,771.593,o),
(118,806,cs),
(118,832.667,o),
(101.333,850,o),
(76,850,cs),
(54.667,850,o),
(40,834.667,o),
(40,816,cs),
(40,792.909,o),
(66,784.261,o),
(66,772,cs),
(66,755.853,o),
(47,710.649,o),
(47,700,cs),
(47,692,o),
(56.333,685,o),
(63,685,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 0 83 0 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
38 34 2 17
CALL[ ]	/* CallFunction */";
};
width = 152;
}
);
note = quoteright;
unicode = 8217;
},
{
glyphname = guillemetleft;
kernLeft = guillemotleft;
kernRight = guillemotleft;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(217,521.333,o),
(214.667,526.333,o),
(210,531,cs),
(205.333,535.667,o),
(195.667,538,o),
(181,538,cs),
(168.797,538,o),
(133.759,509.601,o),
(98.5,469,cs),
(66.488,432.138,o),
(38,393.623,o),
(38,378,cs),
(38,364.745,o),
(61.963,331.073,o),
(98.5,289,cs),
(134.993,246.978,o),
(168.018,219,o),
(181,219,cs),
(195.667,219,o),
(205.333,221.333,o),
(210,226,cs),
(214.667,230.667,o),
(217,235.667,o),
(217,241,cs),
(217,260.58,o),
(183.576,292.04,o),
(132,378,c),
(159.804,424.341,o),
(217,497.429,o),
(217,516,cs)
);
},
{
closed = 1;
nodes = (
(360,521.333,o),
(357.667,526.333,o),
(353,531,cs),
(348.333,535.667,o),
(338.667,538,o),
(324,538,cs),
(311.797,538,o),
(276.759,509.601,o),
(241.5,469,cs),
(209.488,432.138,o),
(181,393.623,o),
(181,378,cs),
(181,364.745,o),
(204.963,331.073,o),
(241.5,289,cs),
(277.993,246.978,o),
(311.018,219,o),
(324,219,cs),
(338.667,219,o),
(348.333,221.333,o),
(353,226,cs),
(357.667,230.667,o),
(360,235.667,o),
(360,241,cs),
(360,260.58,o),
(326.576,292.04,o),
(275,378,c),
(302.804,424.341,o),
(360,497.429,o),
(360,516,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
35 5 2 0 1 1 66 3 1 1 0 0 1 79 3 1 1 1 0 83 2 1 0 1 0 71 44 46 44 44 4 19
CALL[ ]	/* CallFunction */";
};
width = 432;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(199,519.333,o),
(197.333,523,o),
(194,527,cs),
(190.667,531,o),
(183.667,533,o),
(173,533,cs),
(146.115,533,o),
(41,407.174,o),
(41,378,cs),
(41,351.931,o),
(146.797,224,o),
(173,224,cs),
(183.667,224,o),
(190.667,226,o),
(194,230,cs),
(197.333,234,o),
(199,237.667,o),
(199,241,cs),
(199,260.58,o),
(165.576,292.04,o),
(114,378,c),
(141.804,424.341,o),
(199,497.429,o),
(199,516,cs)
);
},
{
closed = 1;
nodes = (
(342,519.333,o),
(340.333,523,o),
(337,527,cs),
(333.667,531,o),
(326.667,533,o),
(316,533,cs),
(289.115,533,o),
(184,407.174,o),
(184,378,cs),
(184,351.931,o),
(289.797,224,o),
(316,224,cs),
(326.667,224,o),
(333.667,226,o),
(337,230,cs),
(340.333,234,o),
(342,237.667,o),
(342,241,cs),
(342,260.58,o),
(308.576,292.04,o),
(257,378,c),
(284.804,424.341,o),
(342,497.429,o),
(342,516,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
32 6 2 0 1 1 66 3 1 1 0 0 1 79 3 1 1 1 0 83 2 1 0 1 0 71 40 46 40 45 4 30
CALL[ ]	/* CallFunction */";
};
width = 406;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(169.333,232,o),
(173,235,o),
(173,241,cs),
(173,260.58,o),
(139.576,292.04,o),
(88,378,c),
(115.804,424.341,o),
(173,497.429,o),
(173,516,cs),
(173,522,o),
(169.333,525,o),
(162,525,cs),
(150.693,525,o),
(124.487,499.762,o),
(94.5,462,cs),
(65.036,424.897,o),
(45,391.189,o),
(45,378,cs),
(45,351.178,o),
(137.925,232,o),
(162,232,cs)
);
},
{
closed = 1;
nodes = (
(312.333,232,o),
(316,235,o),
(316,241,cs),
(316,260.58,o),
(282.576,292.04,o),
(231,378,c),
(258.804,424.341,o),
(316,497.429,o),
(316,516,cs),
(316,522,o),
(312.333,525,o),
(305,525,cs),
(293.693,525,o),
(267.487,499.762,o),
(237.5,462,cs),
(208.036,424.897,o),
(188,391.189,o),
(188,378,cs),
(188,351.178,o),
(280.925,232,o),
(305,232,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
32 6 2 0 1 1 66 3 1 1 0 0 1 79 3 1 1 1 0 83 2 1 0 1 0 71 42 44 42 44 4 30
CALL[ ]	/* CallFunction */";
};
width = 369;
}
);
note = guillemotleft;
unicode = 171;
},
{
glyphname = guillemetright;
kernLeft = guillemotright;
kernRight = guillemotright;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(215,497.429,o),
(272.196,424.341,o),
(300,378,c),
(248.424,292.04,o),
(215,260.58,o),
(215,241,cs),
(215,237.667,o),
(217.333,233.167,o),
(222,227.5,cs),
(226.667,221.833,o),
(236.333,219,o),
(251,219,cs),
(263.982,219,o),
(297.007,246.978,o),
(333.5,289,cs),
(370.037,331.073,o),
(394,364.745,o),
(394,378,cs),
(394,393.623,o),
(365.512,432.138,o),
(333.5,469,cs),
(298.241,509.601,o),
(263.203,538,o),
(251,538,cs),
(236.333,538,o),
(226.667,535.167,o),
(222,529.5,cs),
(217.333,523.833,o),
(215,519.333,o),
(215,516,cs)
);
},
{
closed = 1;
nodes = (
(72,497.429,o),
(129.196,424.341,o),
(157,378,c),
(105.424,292.04,o),
(72,260.58,o),
(72,241,cs),
(72,237.667,o),
(74.333,233.167,o),
(79,227.5,cs),
(83.667,221.833,o),
(93.333,219,o),
(108,219,cs),
(120.982,219,o),
(154.007,246.978,o),
(190.5,289,cs),
(227.037,331.073,o),
(251,364.745,o),
(251,378,cs),
(251,393.623,o),
(222.512,432.138,o),
(190.5,469,cs),
(155.241,509.601,o),
(120.203,538,o),
(108,538,cs),
(93.333,538,o),
(83.667,535.167,o),
(79,529.5,cs),
(74.333,523.833,o),
(72,519.333,o),
(72,516,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
55 25 2 1 0 1 66 2 1 0 1 1 0 79 2 1 0 0 1 83 3 1 1 0 1 71 44 46 44 34 4 19
CALL[ ]	/* CallFunction */";
};
width = 432;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(207,497.429,o),
(264.196,424.341,o),
(292,378,c),
(240.424,292.04,o),
(207,260.58,o),
(207,241,cs),
(207,237.667,o),
(208.667,234,o),
(212,230,cs),
(215.333,226,o),
(222.333,224,o),
(233,224,cs),
(259.203,224,o),
(365,351.931,o),
(365,378,cs),
(365,407.174,o),
(259.885,533,o),
(233,533,cs),
(222.333,533,o),
(215.333,531,o),
(212,527,cs),
(208.667,523,o),
(207,519.333,o),
(207,516,cs)
);
},
{
closed = 1;
nodes = (
(64,497.429,o),
(121.196,424.341,o),
(149,378,c),
(97.424,292.04,o),
(64,260.58,o),
(64,241,cs),
(64,237.667,o),
(65.667,234,o),
(69,230,cs),
(72.333,226,o),
(79.333,224,o),
(90,224,cs),
(116.203,224,o),
(222,351.931,o),
(222,378,cs),
(222,407.174,o),
(116.885,533,o),
(90,533,cs),
(79.333,533,o),
(72.333,531,o),
(69,527,cs),
(65.667,523,o),
(64,519.333,o),
(64,516,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
47 21 2 1 0 1 66 2 1 0 1 1 0 79 2 1 0 0 1 83 3 1 1 0 1 71 40 46 40 34 4 19
CALL[ ]	/* CallFunction */";
};
width = 406;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(231.075,232,o),
(324,351.178,o),
(324,378,cs),
(324,391.189,o),
(303.964,424.897,o),
(274.5,462,cs),
(244.513,499.762,o),
(218.307,525,o),
(207,525,cs),
(199.667,525,o),
(196,522,o),
(196,516,cs),
(196,497.429,o),
(253.196,424.341,o),
(281,378,c),
(229.424,292.04,o),
(196,260.58,o),
(196,241,cs),
(196,235,o),
(199.667,232,o),
(207,232,cs)
);
},
{
closed = 1;
nodes = (
(88.075,232,o),
(181,351.178,o),
(181,378,cs),
(181,391.189,o),
(160.964,424.897,o),
(131.5,462,cs),
(101.513,499.762,o),
(75.307,525,o),
(64,525,cs),
(56.667,525,o),
(53,522,o),
(53,516,cs),
(53,497.429,o),
(110.196,424.341,o),
(138,378,c),
(86.424,292.04,o),
(53,260.58,o),
(53,241,cs),
(53,235,o),
(56.667,232,o),
(64,232,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
47 21 2 1 0 1 66 2 1 0 1 1 0 79 2 1 0 0 1 83 3 1 1 0 1 71 42 44 42 33 4 19
CALL[ ]	/* CallFunction */";
};
width = 369;
}
);
note = guillemotright;
unicode = 187;
},
{
glyphname = guilsinglleft;
kernLeft = guillemotleft;
kernRight = guillemotleft;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(217,521.333,o),
(214.667,526.333,o),
(210,531,cs),
(205.333,535.667,o),
(195.667,538,o),
(181,538,cs),
(168.797,538,o),
(133.759,509.601,o),
(98.5,469,cs),
(66.488,432.138,o),
(38,393.623,o),
(38,378,cs),
(38,364.745,o),
(61.963,331.073,o),
(98.5,289,cs),
(134.993,246.978,o),
(168.018,219,o),
(181,219,cs),
(195.667,219,o),
(205.333,221.333,o),
(210,226,cs),
(214.667,230.667,o),
(217,235.667,o),
(217,241,cs),
(217,260.58,o),
(183.576,292.04,o),
(132,378,c),
(159.804,424.341,o),
(217,497.429,o),
(217,516,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
5 1 0 1 1 66 0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71 44 44 2 17
CALL[ ]	/* CallFunction */";
};
width = 289;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(199,519.333,o),
(197.333,523,o),
(194,527,cs),
(190.667,531,o),
(183.667,533,o),
(173,533,cs),
(146.115,533,o),
(41,407.174,o),
(41,378,cs),
(41,351.931,o),
(146.797,224,o),
(173,224,cs),
(183.667,224,o),
(190.667,226,o),
(194,230,cs),
(197.333,234,o),
(199,237.667,o),
(199,241,cs),
(199,260.58,o),
(165.576,292.04,o),
(114,378,c),
(141.804,424.341,o),
(199,497.429,o),
(199,516,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
5 1 0 1 1 66 0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71 40 44 2 17
CALL[ ]	/* CallFunction */";
};
width = 263;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(169.333,232,o),
(173,235,o),
(173,241,cs),
(173,260.58,o),
(139.576,292.04,o),
(88,378,c),
(115.804,424.341,o),
(173,497.429,o),
(173,516,cs),
(173,522,o),
(169.333,525,o),
(162,525,cs),
(150.693,525,o),
(124.487,499.762,o),
(94.5,462,cs),
(65.036,424.897,o),
(45,391.189,o),
(45,378,cs),
(45,351.178,o),
(137.925,232,o),
(162,232,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
5 1 0 1 1 66 0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71 42 43 2 17
CALL[ ]	/* CallFunction */";
};
width = 226;
}
);
note = guilsinglleft;
unicode = 8249;
},
{
glyphname = guilsinglright;
kernLeft = guillemotright;
kernRight = guillemotright;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(72,497.429,o),
(129.196,424.341,o),
(157,378,c),
(105.424,292.04,o),
(72,260.58,o),
(72,241,cs),
(72,235.667,o),
(74.333,230.667,o),
(79,226,cs),
(83.667,221.333,o),
(93.333,219,o),
(108,219,cs),
(120.982,219,o),
(154.007,246.978,o),
(190.5,289,cs),
(227.037,331.073,o),
(251,364.745,o),
(251,378,cs),
(251,393.623,o),
(222.512,432.138,o),
(190.5,469,cs),
(155.241,509.601,o),
(120.203,538,o),
(108,538,cs),
(93.333,538,o),
(83.667,535.667,o),
(79,531,cs),
(74.333,526.333,o),
(72,521.333,o),
(72,516,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
25 1 1 0 1 66 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 44 34 2 17
CALL[ ]	/* CallFunction */";
};
width = 289;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(79.333,533,o),
(72.333,531,o),
(69,527,cs),
(65.667,523,o),
(64,519.333,o),
(64,516,cs),
(64,497.429,o),
(121.196,424.341,o),
(149,378,c),
(97.424,292.04,o),
(64,260.58,o),
(64,241,cs),
(64,237.667,o),
(65.667,234,o),
(69,230,cs),
(72.333,226,o),
(79.333,224,o),
(90,224,cs),
(116.203,224,o),
(222,351.931,o),
(222,378,cs),
(222,407.174,o),
(116.885,533,o),
(90,533,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
6 1 0 1 1 66 0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71 40 45 2 28
CALL[ ]	/* CallFunction */";
};
width = 263;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(88.075,232,o),
(181,351.178,o),
(181,378,cs),
(181,391.189,o),
(160.964,424.897,o),
(131.5,462,cs),
(101.513,499.762,o),
(75.307,525,o),
(64,525,cs),
(56.667,525,o),
(53,522,o),
(53,516,cs),
(53,497.429,o),
(110.196,424.341,o),
(138,378,c),
(86.424,292.04,o),
(53,260.58,o),
(53,241,cs),
(53,235,o),
(56.667,232,o),
(64,232,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
6 1 0 1 1 66 0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71 42 44 2 28
CALL[ ]	/* CallFunction */";
};
width = 226;
}
);
note = guilsinglright;
unicode = 8250;
},
{
glyphname = quotedbl;
kernLeft = quotedbl;
kernRight = quotedbl;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(38.663,858,o),
(34,805.481,o),
(34,783,cs),
(34,725.961,o),
(46.931,641,o),
(83,641,cs),
(113.603,641,o),
(130,756.669,o),
(130,798,cs),
(130,822,o),
(124.667,858,o),
(82,858,cs)
);
},
{
closed = 1;
nodes = (
(167.663,858,o),
(163,805.481,o),
(163,783,cs),
(163,725.961,o),
(175.931,641,o),
(212,641,cs),
(242.603,641,o),
(259,756.669,o),
(259,798,cs),
(259,822,o),
(253.667,858,o),
(211,858,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
3 1 1 1 0 83 5 2 4 3 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
5 2 4 3 0 1 1 0 79 5 2 4 3 0 0 1 83 3 1 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
21 20 1 0 31 29 20 39 21 39 11 9 0 19 1 19 6 15
CALL[ ]	/* CallFunction */";
};
width = 292;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(39.276,855,o),
(39,797.508,o),
(39,783,cs),
(39,752.179,o),
(44.221,647,o),
(77,647,cs),
(90.113,647,o),
(100.927,676.645,o),
(106.5,719,cs),
(112.598,765.344,o),
(114,789.381,o),
(114,798,cs),
(114,816.856,o),
(114.866,855,o),
(76,855,cs)
);
},
{
closed = 1;
nodes = (
(168.276,855,o),
(168,797.508,o),
(168,783,cs),
(168,752.179,o),
(173.221,647,o),
(206,647,cs),
(219.113,647,o),
(229.927,676.645,o),
(235.5,719,cs),
(241.598,765.344,o),
(243,789.381,o),
(243,798,cs),
(243,816.856,o),
(243.866,855,o),
(205,855,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
3 1 1 1 0 83 5 2 4 3 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
5 2 4 3 0 1 1 0 79 5 2 4 3 0 0 1 83 3 1 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
24 23 2 1 36 34 23 44 24 44 14 12 1 22 2 22 6 26
CALL[ ]	/* CallFunction */";
};
width = 281;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(88.845,657,o),
(91,816.92,o),
(91,798,cs),
(91,812.56,o),
(92.229,850,o),
(68,850,cs),
(47.84,850,o),
(46,802.968,o),
(46,783,cs),
(46,766.202,o),
(47.392,657,o),
(69,657,cs)
);
},
{
closed = 1;
nodes = (
(217.845,657,o),
(220,816.92,o),
(220,798,cs),
(220,812.56,o),
(221.229,850,o),
(197,850,cs),
(176.84,850,o),
(175,802.968,o),
(175,783,cs),
(175,766.202,o),
(176.392,657,o),
(198,657,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
3 1 1 1 0 83 5 2 4 3 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
5 2 4 3 0 1 1 0 79 5 2 4 3 0 0 1 83 3 1 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
22 21 2 1 32 30 21 40 22 40 12 10 1 20 2 20 6 26
CALL[ ]	/* CallFunction */";
};
width = 265;
}
);
note = quotedbl;
unicode = 34;
},
{
glyphname = quotesingle;
kernLeft = quotedbl;
kernRight = quotedbl;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(38.663,858,o),
(34,805.481,o),
(34,783,cs),
(34,725.961,o),
(46.931,641,o),
(83,641,cs),
(113.603,641,o),
(130,756.669,o),
(130,798,cs),
(130,822,o),
(124.667,858,o),
(82,858,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 1 1 0 83 2 1 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
1 0 11 9 0 19 1 19 3 15
CALL[ ]	/* CallFunction */";
};
width = 163;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(39.276,855,o),
(39,797.508,o),
(39,783,cs),
(39,752.179,o),
(44.221,647,o),
(77,647,cs),
(90.113,647,o),
(100.927,676.645,o),
(106.5,719,cs),
(112.598,765.344,o),
(114,789.381,o),
(114,798,cs),
(114,816.856,o),
(114.866,855,o),
(76,855,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 1 1 0 83 2 1 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
1 0 13 11 0 21 1 21 3 15
CALL[ ]	/* CallFunction */";
};
width = 152;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(88.845,657,o),
(91,816.92,o),
(91,798,cs),
(91,812.56,o),
(92.229,850,o),
(68,850,cs),
(47.84,850,o),
(46,802.968,o),
(46,783,cs),
(46,766.202,o),
(47.392,657,o),
(69,657,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 1 1 0 83 2 1 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
1 0 11 9 0 19 1 19 3 15
CALL[ ]	/* CallFunction */";
};
width = 136;
}
);
note = quotesingle;
unicode = 39;
},
{
glyphname = florin;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(375,403.333,o),
(376.167,406,o),
(378.5,408,cs),
(380.833,410,o),
(386,411,o),
(394,411,cs),
(409.161,411,o),
(433.403,409,o),
(460,409,cs),
(481.469,409,o),
(506,420.475,o),
(506,447,cs),
(506,483.585,o),
(477.843,487,o),
(463,487,cs),
(385,487,ls),
(381.667,487,o),
(379.833,488.5,o),
(379.5,491.5,cs),
(379.167,494.5,o),
(379,502.667,o),
(379,516,cs),
(379,530.98,o),
(381.72,588.013,o),
(407,647,cs),
(430.888,702.739,o),
(476.556,751,o),
(554,751,cs),
(572.667,751,o),
(596,748.667,o),
(596,726,cs),
(596,711.333,o),
(585.667,698.667,o),
(563,692,cs),
(555,689.333,o),
(547,684,o),
(547,664,cs),
(547,649.333,o),
(563,630,o),
(595,630,cs),
(631.526,630,o),
(671,664.174,o),
(671,722,cs),
(671,762.249,o),
(644.749,825,o),
(550,825,cs),
(431.829,825,o),
(367.657,758.934,o),
(336,696.5,cs),
(297.444,620.459,o),
(291.564,552.924,o),
(287,505,cs),
(285.667,487.667,o),
(283,487,o),
(271,487,cs),
(258,487,ls),
(235.333,487,o),
(209,477.667,o),
(209,451,cs),
(209,419,o),
(231.333,411,o),
(254,411,cs),
(270,411,ls),
(275.333,411,o),
(278.5,409,o),
(279.5,405,cs),
(280.5,401,o),
(281,394.333,o),
(281,385,cs),
(281,259.667,o),
(272,158.333,o),
(260,45,cs),
(243.73,-98.719,o),
(216.552,-127,o),
(162,-127,cs),
(118.209,-127,o),
(94,-99.419,o),
(94,-87,cs),
(94,-55.837,o),
(154,-70.222,o),
(154,-38,cs),
(154,-14,o),
(144.333,5,o),
(95,5,cs),
(40.333,5,o),
(24,-27.333,o),
(24,-66,cs),
(24,-168.885,o),
(116.918,-204,o),
(166,-204,cs),
(292.815,-204,o),
(338.462,-128.118,o),
(352,56,cs),
(375,400,l),
(375,400,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 1 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 6 7 4 7 6 96 0 1 3 2 3 1 2 104 0 7 7 5 83 0 5 5 12 67 9 1 3 3 4 83 8 1 4 4 23 67 0 2 2 0 83 0 0 0 17 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 6 7 4 7 6 4 104 0 1 3 2 3 1 2 104 0 7 7 5 83 0 5 5 12 67 9 1 3 3 4 83 8 1 4 4 23 67 0 2 2 0 83 0 0 0 17 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 6 7 4 7 6 4 104 0 1 3 2 3 1 2 104 8 1 4 9 1 3 1 4 3 91 0 2 0 0 2 0 87 0 7 7 5 83 0 5 5 12 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 6 7 4 7 6 4 104 0 1 3 2 3 1 2 104 8 1 4 9 1 3 1 4 3 91 0 2 0 0 2 0 87 0 7 7 5 83 0 5 5 14 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
104 97 56 42 40 40 52 57 43 38 36 10 24
CALL[ ]	/* CallFunction */";
};
width = 692;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(359,412.333,o),
(360.167,415,o),
(362.5,417,cs),
(364.833,419,o),
(370,420,o),
(378,420,cs),
(393.161,420,o),
(417.403,418,o),
(444,418,cs),
(458.667,418,o),
(483,424.333,o),
(483,447,cs),
(483,473.667,o),
(461.667,478,o),
(447,478,cs),
(369,478,ls),
(364.333,478,o),
(362,481.333,o),
(362,488,cs),
(362,529.902,o),
(366.388,592.003,o),
(390.5,657,cs),
(414.295,721.144,o),
(461.991,769,o),
(538,769,cs),
(572.667,769,o),
(594,756.333,o),
(594,735,cs),
(594,720.333,o),
(586.667,714,o),
(568,706,cs),
(558.667,702,o),
(552,695.333,o),
(552,678,cs),
(552,660.667,o),
(566.333,644,o),
(593,644,cs),
(623.667,644,o),
(655,672.667,o),
(655,722,cs),
(655,762.249,o),
(628.749,825,o),
(534,825,cs),
(428.006,825,o),
(366.824,764.536,o),
(337,696.5,cs),
(303.217,619.434,o),
(294.271,546.528,o),
(290,491,c),
(288.667,484.333,o),
(286.667,478,o),
(276,478,cs),
(242,478,ls),
(219.333,478,o),
(200,472,o),
(200,452,cs),
(200,429.333,o),
(215.333,420,o),
(238,420,cs),
(275,420,ls),
(280.333,420,o),
(283.5,418,o),
(284.5,414,cs),
(285.5,410,o),
(286,403.333,o),
(286,394,cs),
(286,271.333,o),
(278.333,158.333,o),
(265,45,cs),
(246.174,-116.37,o),
(214.654,-145,o),
(164,-145,cs),
(93.581,-145,o),
(78,-115.128,o),
(78,-100,cs),
(78,-68.388,o),
(136,-90.294,o),
(136,-52,cs),
(136,-32,o),
(121,-14,o),
(89,-14,cs),
(53,-14,o),
(23,-37.667,o),
(23,-83,cs),
(23,-168.447,o),
(99.648,-203,o),
(155,-203,cs),
(211,-203,o),
(253.667,-185.333,o),
(283,-144,cs),
(312.333,-102.667,o),
(329.333,-38.667,o),
(336,56,cs),
(359,409,l),
(359,409,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 6 7 4 7 6 4 104 0 1 3 2 3 1 2 104 0 7 7 5 83 0 5 5 12 67 9 1 3 3 4 83 8 1 4 4 23 67 0 2 2 0 83 0 0 0 17 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 6 7 4 7 6 4 104 0 1 3 2 3 1 2 104 8 1 4 9 1 3 1 4 3 91 0 7 7 5 83 0 5 5 12 67 0 2 2 0 83 0 0 0 17 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 6 7 4 7 6 4 104 0 1 3 2 3 1 2 104 8 1 4 9 1 3 1 4 3 91 0 2 0 0 2 0 87 0 7 7 5 83 0 5 5 12 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 6 7 4 7 6 4 104 0 1 3 2 3 1 2 104 8 1 4 9 1 3 1 4 3 91 0 2 0 0 2 0 87 0 7 7 5 83 0 5 5 14 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
97 90 55 42 38 40 52 57 43 38 36 10 24
CALL[ ]	/* CallFunction */";
};
width = 676;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(183,-202,o),
(223.167,-188.667,o),
(254.5,-150,cs),
(285.833,-111.333,o),
(306.333,-46.667,o),
(313,56,cs),
(336,424,ls),
(336,427.333,o),
(337.167,430,o),
(339.5,432,cs),
(341.833,434,o),
(347,435,o),
(355,435,cs),
(370.161,435,o),
(394.403,433,o),
(421,433,cs),
(435.667,433,o),
(450,436.333,o),
(450,447,cs),
(450,457.667,o),
(437.333,463,o),
(424,463,cs),
(346,463,ls),
(342.667,463,o),
(340.667,464.667,o),
(340,468,cs),
(339.333,471.333,o),
(339,478,o),
(339,488,cs),
(339,533.861,o),
(343.389,603.168,o),
(367.5,675.5,cs),
(391.103,746.31,o),
(438.143,799,o),
(515,799,cs),
(568.408,799,o),
(591,771.764,o),
(591,750,cs),
(591,740.667,o),
(587,737,o),
(575,729,cs),
(564.333,721,o),
(559,714.333,o),
(559,701,cs),
(559,681,o),
(571.333,667,o),
(590,667,cs),
(614,667,o),
(632,690,o),
(632,722,cs),
(632,762.249,o),
(605.749,825,o),
(511,825,cs),
(423.403,825,o),
(368.35,771.64,o),
(338.5,696.5,cs),
(308.569,621.157,o),
(301.06,543.777,o),
(297,491,cs),
(295.667,476.333,o),
(293.667,463,o),
(283,463,cs),
(219,463,ls),
(207.667,463,o),
(199.5,462.5,o),
(194.5,461.5,cs),
(189.5,460.5,o),
(187,457.667,o),
(187,453,cs),
(187,449,o),
(188.833,445,o),
(192.5,441,cs),
(196.167,437,o),
(203.667,435,o),
(215,435,cs),
(282,435,ls),
(287.333,435,o),
(290.5,433,o),
(291.5,429,cs),
(292.5,425,o),
(293,418.333,o),
(293,409,cs),
(293,283,o),
(286,161.667,o),
(272,45,cs),
(261.333,-48.333,o),
(247,-103,o),
(227,-135,cs),
(207,-167,o),
(179.667,-175,o),
(141,-175,cs),
(72.771,-175,o),
(55,-138.873,o),
(55,-130,cs),
(55,-98.069,o),
(111,-121,o),
(111,-75,cs),
(111,-45.2,o),
(88.612,-45,o),
(81,-45,cs),
(70.717,-45,o),
(22,-56.858,o),
(22,-112,cs),
(22,-168,o),
(72.333,-202,o),
(139,-202,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 6 7 4 7 6 4 104 0 1 3 2 3 1 2 104 0 7 7 5 83 0 5 5 12 67 9 1 3 3 4 83 8 1 4 4 23 67 0 2 2 0 83 0 0 0 17 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 6 7 4 7 6 4 104 0 1 3 2 3 1 2 104 8 1 4 9 1 3 1 4 3 91 0 7 7 5 83 0 5 5 12 67 0 2 2 0 83 0 0 0 17 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 6 7 4 7 6 4 104 0 1 3 2 3 1 2 104 8 1 4 9 1 3 1 4 3 91 0 2 0 0 2 0 87 0 7 7 5 83 0 5 5 12 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 6 7 4 7 6 4 104 0 1 3 2 3 1 2 104 8 1 4 9 1 3 1 4 3 91 0 2 0 0 2 0 87 0 7 7 5 83 0 5 5 14 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
101 94 56 44 38 40 52 56 45 38 36 10 24
CALL[ ]	/* CallFunction */";
};
width = 653;
}
);
note = florin;
unicode = 402;
},
{
glyphname = at;
kernLeft = at;
kernRight = at;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(581,166.395,o),
(545.475,133,o),
(530,133,cs),
(522.667,133,o),
(516.833,134.833,o),
(512.5,138.5,cs),
(508.167,142.167,o),
(505.333,154,o),
(504,174,cs),
(503.333,185.333,o),
(503,196,o),
(503,206,cs),
(503,216,o),
(503,226.333,o),
(503,237,cs),
(503,262.333,o),
(503.333,285.333,o),
(504,306,cs),
(504.667,326.667,o),
(505,350,o),
(505,376,cs),
(505,390.667,o),
(491,411,o),
(463,411,cs),
(439,411,o),
(419,398.667,o),
(419,380,cs),
(419,376,o),
(419.167,373,o),
(419.5,371,cs),
(419.833,369,o),
(420.333,365.333,o),
(421,360,c),
(399.667,392,o),
(363,399,o),
(335,399,cs),
(241.817,399,o),
(168,320.641,o),
(168,215,cs),
(168,122.198,o),
(230.624,49,o),
(321,49,cs),
(370.333,49,o),
(403.667,70.333,o),
(425,97,c),
(433,77,o),
(450.667,54,o),
(496,54,cs),
(584.941,54,o),
(665,102.662,o),
(665,237,cs),
(665,396.544,o),
(553.495,541,o),
(344,541,cs),
(168.649,541,o),
(40,409.971,o),
(40,227,cs),
(40,45.422,o),
(169.511,-84,o),
(321,-84,cs),
(345,-84,o),
(368,-77.333,o),
(368,-48,cs),
(368,-18.667,o),
(352.667,-4,o),
(322,-4,cs),
(211.102,-4,o),
(127,92.507,o),
(127,227,cs),
(127,364.308,o),
(214.524,459,o),
(345,459,cs),
(505.467,459,o),
(581,359.363,o),
(581,236,cs)
);
},
{
closed = 1;
nodes = (
(419,191.032,o),
(395.826,127,o),
(326,127,cs),
(286,127,o),
(261,157.333,o),
(261,216,cs),
(261,281.333,o),
(294.333,321,o),
(333,321,cs),
(391.667,321,o),
(419,281.667,o),
(419,231,cs),
(419,223,l),
(419,223,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
59 1 9 6 43 1 4 8 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
59 1 9 6 43 1 4 10 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 3 0 0 6 3 0 91 7 1 6 0 9 8 6 9 91 10 1 8 5 1 4 1 8 4 92 0 1 2 2 1 79 0 1 1 2 83 0 2 1 2 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 7 0 6 0 7 6 104 0 3 0 0 7 3 0 91 0 6 0 9 8 6 9 91 10 1 8 5 1 4 1 8 4 92 0 1 2 2 1 79 0 1 1 2 83 0 2 1 2 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 7 0 6 0 7 6 104 0 3 0 0 7 3 0 91 0 6 0 9 8 6 9 91 0 8 10 4 8 79 0 10 5 1 4 1 10 4 91 0 1 2 2 1 79 0 1 1 2 83 0 2 1 2 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 7 0 6 0 7 6 104 0 3 0 0 7 3 0 91 0 6 0 9 8 6 9 91 0 8 0 4 5 8 4 92 0 10 0 5 1 10 5 91 0 1 2 2 1 79 0 1 1 2 83 0 2 1 2 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
92 90 86 84 42 39 40 36 40 40 35 40 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 704;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(584,155.609,o),
(550.896,115,o),
(520,115,cs),
(496,115,o),
(486,121.333,o),
(486,156,cs),
(486,170,o),
(485.667,183.667,o),
(485,197,cs),
(484.333,210.333,o),
(484,223.667,o),
(484,237,cs),
(484,262.333,o),
(484.5,286.333,o),
(485.5,309,cs),
(486.5,331.667,o),
(487,356,o),
(487,382,cs),
(487,395.333,o),
(475,411,o),
(455,411,cs),
(437.667,411,o),
(422,400,o),
(422,384,cs),
(422,376,o),
(422.667,370.667,o),
(424,360,c),
(402.667,392,o),
(366,399,o),
(338,399,cs),
(244.817,399,o),
(171,320.641,o),
(171,215,cs),
(171,122.198,o),
(233.624,49,o),
(324,49,cs),
(373.333,49,o),
(406.667,70.333,o),
(428,97,c),
(436,77,o),
(453.667,54,o),
(499,54,cs),
(575.409,54,o),
(647,99.557,o),
(647,237,cs),
(647,401.379,o),
(538.532,541,o),
(347,541,cs),
(171.649,541,o),
(43,409.971,o),
(43,227,cs),
(43,45.422,o),
(172.511,-84,o),
(324,-84,cs),
(348,-84,o),
(364,-76.333,o),
(364,-55,cs),
(364,-33.667,o),
(353,-22,o),
(325,-22,cs),
(205.8,-22,o),
(109,76.671,o),
(109,227,cs),
(109,373.942,o),
(203.523,477,o),
(346,477,cs),
(507.739,477,o),
(584,367.062,o),
(584,236,cs)
);
},
{
closed = 1;
nodes = (
(422,171.934,o),
(399.955,109,o),
(329,109,cs),
(275.667,109,o),
(243,146.667,o),
(243,216,cs),
(243,292,o),
(285.333,339,o),
(336,339,cs),
(394.667,339,o),
(422,301.667,o),
(422,243,cs),
(422,205,l),
(422,205,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
60 1 9 6 44 1 4 8 2 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
60 1 9 6 44 1 4 10 2 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 7 0 6 0 7 6 104 0 3 0 0 7 3 0 91 0 6 0 9 8 6 9 91 10 1 8 5 1 4 1 8 4 92 0 1 2 2 1 79 0 1 1 2 83 0 2 1 2 71
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 7 0 6 0 7 6 104 0 3 0 0 7 3 0 91 0 6 0 9 8 6 9 91 0 8 10 4 8 79 0 10 5 1 4 1 10 4 91 0 1 2 2 1 79 0 1 1 2 83 0 2 1 2 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 7 0 6 0 7 6 104 0 3 0 0 7 3 0 91 0 6 0 9 8 6 9 91 0 8 0 4 5 8 4 92 0 10 0 5 1 10 5 91 0 1 2 2 1 79 0 1 1 2 83 0 2 1 2 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
93 91 87 85 42 39 40 36 40 40 36 40 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 688;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(340,-84,o),
(348,-82.167,o),
(352,-78.5,cs),
(356,-74.833,o),
(358,-71,o),
(358,-67,cs),
(358,-63,o),
(356.333,-59.5,o),
(353,-56.5,cs),
(349.667,-53.5,o),
(341.667,-52,o),
(329,-52,cs),
(190.473,-52,o),
(83,59.739,o),
(83,227,cs),
(83,392.941,o),
(190.072,507,o),
(348,507,cs),
(508.968,507,o),
(588,383.626,o),
(588,236,cs),
(588,124.752,o),
(551.192,85,o),
(506,85,cs),
(483.333,85,o),
(472.667,94.333,o),
(466,105,cs),
(462.667,111,o),
(460.667,118,o),
(460,126,cs),
(458.667,163.333,o),
(458,199.667,o),
(458,237,cs),
(458,288.333,o),
(459,340,o),
(461,392,cs),
(461,402.667,o),
(452,411,o),
(444,411,cs),
(436,411,o),
(426,401.667,o),
(426,391,cs),
(426,383,o),
(426.667,370.667,o),
(428,360,c),
(406.667,392,o),
(370,399,o),
(342,399,cs),
(248.817,399,o),
(175,320.641,o),
(175,215,cs),
(175,122.198,o),
(237.624,49,o),
(328,49,cs),
(377.333,49,o),
(410.667,70.333,o),
(432,97,c),
(440,77,o),
(457.667,54,o),
(503,54,cs),
(563.604,54,o),
(621,99.564,o),
(621,237,cs),
(621,400.495,o),
(524.465,541,o),
(351,541,cs),
(175.649,541,o),
(47,409.971,o),
(47,227,cs),
(47,45.422,o),
(176.511,-84,o),
(328,-84,cs)
);
},
{
closed = 1;
nodes = (
(261,79,o),
(217,128,o),
(217,216,cs),
(217,308.623,o),
(270.363,369,o),
(340,369,cs),
(398.667,369,o),
(426,331.667,o),
(426,273,cs),
(426,175,ls),
(426,141.934,o),
(403.955,79,o),
(333,79,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
74 60 44 3 8 9 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 7 0 6 0 7 6 104 0 3 0 0 7 3 0 91 0 6 0 9 8 6 9 91 0 8 10 4 8 79 0 10 5 1 4 1 10 4 91 0 1 2 2 1 79 0 1 1 2 83 0 2 1 2 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 7 0 6 0 7 6 104 0 3 0 0 7 3 0 91 0 6 0 9 8 6 9 91 0 8 0 4 5 8 4 91 0 10 0 5 1 10 5 91 0 1 2 2 1 79 0 1 1 2 83 0 2 1 2 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
96 94 88 86 43 39 40 36 40 40 36 40 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 665;
}
);
note = at;
unicode = 64;
},
{
glyphname = ampersand;
kernLeft = ampersand;
kernRight = ampersand;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(460.667,341,o),
(477,351.333,o),
(477,370,cs),
(477,388.667,o),
(481.333,398,o),
(490,398,cs),
(495.333,398,o),
(500.333,393.833,o),
(505,385.5,cs),
(509.667,377.167,o),
(512,361.333,o),
(512,338,cs),
(512,284.667,o),
(497.333,244,o),
(476,200,c),
(448,240.667,o),
(418.667,282.5,o),
(388,325.5,cs),
(357.333,368.5,o),
(330.667,413.333,o),
(308,460,c),
(369.006,518.354,o),
(456,603.692,o),
(456,715,cs),
(456,812.581,o),
(386.713,838,o),
(321,838,cs),
(220.123,838,o),
(133,778.806,o),
(133,675,cs),
(133,612.333,o),
(163.667,541,o),
(201,469,c),
(156.246,446.623,o),
(26,334.948,o),
(26,188,cs),
(26,33.42,o),
(171.484,-9,o),
(272,-9,cs),
(345.333,-9,o),
(405.667,12.333,o),
(475,79,c),
(514.709,29.947,o),
(548.755,-19,o),
(583,-19,cs),
(730.832,-19,o),
(786,-20.078,o),
(786,13,cs),
(786,24.333,o),
(779.333,32.167,o),
(766,36.5,cs),
(752.667,40.833,o),
(727,43.667,o),
(689,45,cs),
(667,46.333,o),
(648.167,47.167,o),
(632.5,47.5,cs),
(616.833,47.833,o),
(606.333,48.667,o),
(601,50,cs),
(595.667,51.333,o),
(587.333,58.667,o),
(576,72,cs),
(564.667,85.333,o),
(547.333,108,o),
(524,140,c),
(551.428,192.363,o),
(586,253.839,o),
(586,347,cs),
(586,447.249,o),
(533.756,460,o),
(488,460,cs),
(422.527,460,o),
(406,419.738,o),
(406,393,cs),
(406,357,o),
(426,341,o),
(446,341,cs)
);
},
{
closed = 1;
nodes = (
(304.504,286.233,o),
(353.779,203.976,o),
(415,130,c),
(390.504,105.504,o),
(349.33,70,o),
(273,70,cs),
(221.83,70,o),
(122,84.643,o),
(122,196,cs),
(122,284.588,o),
(180.484,344.484,o),
(238,402,c)
);
},
{
closed = 1;
nodes = (
(361,631.311,o),
(276.893,555.872,o),
(262,538,c),
(243.333,586,o),
(229,630.333,o),
(229,673,cs),
(229,727.667,o),
(250.333,759,o),
(305,759,cs),
(353.012,759,o),
(361,732.975,o),
(361,701,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
113 50 2 1 8 82 1 6 1 97 71 37 18 4 7 0 3 66 68 1 1 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
9 1 0 6 7 6 0 7 104 0 8 8 5 83 0 5 5 20 67 0 6 6 1 83 0 1 1 23 67 0 7 7 3 83 4 1 3 3 21 67 0 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
9 1 0 6 7 6 0 7 104 0 1 0 6 0 1 6 91 0 8 8 5 83 0 5 5 20 67 0 7 7 3 83 4 1 3 3 21 67 0 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
9 1 0 6 7 6 0 7 104 0 1 0 6 0 1 6 91 0 8 8 5 83 0 5 5 20 67 0 7 7 4 83 0 4 4 24 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
9 1 0 6 7 6 0 7 104 0 5 0 8 1 5 8 91 0 1 0 6 0 1 6 91 0 7 7 4 83 0 4 4 24 67 0 2 2 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
1 0 108 106 93 91 78 76 59 57 41 39 33 30 25 22 9 7 0 81 1 81 10 15
CALL[ ]	/* CallFunction */";
};
width = 759;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(495.666,349,o),
(464.906,402,o),
(489,402,cs),
(494.333,402,o),
(499.667,397.833,o),
(505,389.5,cs),
(510.333,381.167,o),
(513,363.333,o),
(513,336,cs),
(513,280,o),
(495,230,o),
(471,186,c),
(409.312,274.125,o),
(333.509,369.2,o),
(292,460,c),
(354.245,522.245,o),
(440,603.471,o),
(440,714,cs),
(440,809.498,o),
(373.712,838,o),
(310,838,cs),
(218.294,838,o),
(138,777.804,o),
(138,676,cs),
(138,612,o),
(168.667,541,o),
(206,469,c),
(141.776,419.372,o),
(31,325.555,o),
(31,186,cs),
(31,35.462,o),
(162.617,-9,o),
(259,-9,cs),
(343,-9,o),
(407.667,24.667,o),
(469,90,c),
(509.369,40.132,o),
(554.566,-19,o),
(588,-19,cs),
(707.265,-19,o),
(763,-20.084,o),
(763,8,cs),
(763,19.333,o),
(756.667,26.167,o),
(744,28.5,cs),
(731.333,30.833,o),
(712.333,32.333,o),
(687,33,cs),
(637.609,33,o),
(610.777,32.289,o),
(599,37,cs),
(589.667,40.333,o),
(578,50.333,o),
(564,67,cs),
(550,83.667,o),
(531.333,108,o),
(508,140,c),
(538.667,196,o),
(570,262,o),
(570,342,cs),
(570,433.512,o),
(526.524,459,o),
(481,459,cs),
(429,459,o),
(405,426.667,o),
(405,392,cs),
(405,374.667,o),
(411.333,349,o),
(446,349,cs)
);
},
{
closed = 1;
nodes = (
(312.866,281.234,o),
(361.48,207.754,o),
(425,131,c),
(398.809,99.57,o),
(351.394,52,o),
(260,52,cs),
(205.44,52,o),
(106,68.749,o),
(106,193,cs),
(106,284.497,o),
(160.037,342.345,o),
(237,414,c)
);
},
{
closed = 1;
nodes = (
(366,623.7,o),
(294.107,564.551,o),
(256,521,c),
(230.667,577,o),
(213,627.333,o),
(213,674,cs),
(213,738,o),
(244,777,o),
(300,777,cs),
(352,777,o),
(366,740,o),
(366,704,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
111 66 48 3 1 8 82 1 6 1 97 71 35 14 4 7 0 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
9 1 0 6 7 6 0 96 0 8 8 5 83 0 5 5 20 67 0 6 6 1 83 0 1 1 23 67 0 7 7 3 83 4 1 3 3 21 67 0 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
9 1 0 6 7 6 0 96 0 1 0 6 0 1 6 91 0 8 8 5 83 0 5 5 20 67 0 7 7 3 83 4 1 3 3 21 67 0 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
9 1 0 6 7 6 0 7 104 0 1 0 6 0 1 6 91 0 8 8 5 83 0 5 5 20 67 0 7 7 3 83 4 1 3 3 21 67 0 2 2 3 83 4 1 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
9 1 0 6 7 6 0 7 104 0 1 0 6 0 1 6 91 0 8 8 5 83 0 5 5 20 67 0 7 7 4 83 0 4 4 24 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
9 1 0 6 7 6 0 7 104 0 5 0 8 1 5 8 91 0 1 0 6 0 1 6 91 0 7 7 4 83 0 4 4 24 67 0 2 2 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
1 0 106 104 93 91 78 76 57 55 39 37 31 28 23 19 7 5 0 81 1 81 10 15
CALL[ ]	/* CallFunction */";
};
width = 738;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(642.333,-19,o),
(676.667,-18.167,o),
(698,-16.5,cs),
(719.333,-14.833,o),
(730,-9.333,o),
(730,0,cs),
(730,6.667,o),
(726.167,10.5,o),
(718.5,11.5,cs),
(710.833,12.5,o),
(699.333,13,o),
(684,13,cs),
(629.333,13,o),
(600,14,o),
(596,16,cs),
(575.871,26.065,o),
(519.15,87.461,o),
(485,140,c),
(515.667,196,o),
(547,269,o),
(547,333,cs),
(547,417,o),
(516.667,457,o),
(474,457,cs),
(453.795,457,o),
(403,438.946,o),
(403,391,cs),
(403,379,o),
(414,359,o),
(434,359,cs),
(452.667,359,o),
(470,372.333,o),
(470,391,cs),
(470,404.333,o),
(471.5,412.833,o),
(474.5,416.5,cs),
(477.5,420.167,o),
(481,422,o),
(485,422,cs),
(491.667,422,o),
(498.167,415.5,o),
(504.5,402.5,cs),
(510.833,389.5,o),
(514,366,o),
(514,332,cs),
(514,273.333,o),
(492,207,o),
(464,163,c),
(417.866,228.905,o),
(308.55,367.718,o),
(269,460,c),
(328.779,517.062,o),
(417,605.921,o),
(417,713,cs),
(417,804.499,o),
(354.037,838,o),
(295,838,cs),
(216.425,838,o),
(145,777.046,o),
(145,677,cs),
(145,610.333,o),
(175.667,541,o),
(213,469,c),
(161.107,403.57,o),
(38,327.154,o),
(38,182,cs),
(38,38.326,o),
(151.38,-9,o),
(240,-9,cs),
(336.346,-9,o),
(409.111,45.187,o),
(461,108,c),
(502.055,57.285,o),
(561.172,-19,o),
(595,-19,cs)
);
},
{
closed = 1;
nodes = (
(181.492,22,o),
(83,42.465,o),
(83,188,cs),
(83,284.893,o),
(128.84,335.608,o),
(235,434,c),
(311,298,o),
(376,209.333,o),
(440,132,c),
(410.435,86.308,o),
(345.027,22,o),
(241,22,cs)
);
},
{
closed = 1;
nodes = (
(213.667,559.667,o),
(190,620,o),
(190,676,cs),
(190,752.744,o),
(236.366,807,o),
(293,807,cs),
(350.922,807,o),
(373,750.326,o),
(373,709,cs),
(373,604.466,o),
(301.324,549.793,o),
(247,493,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
113 65 47 3 1 8 82 1 6 1 97 70 32 14 4 7 0 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
9 1 0 6 7 6 0 7 104 0 8 8 5 83 0 5 5 20 67 0 6 6 1 83 0 1 1 23 67 0 7 7 4 83 0 4 4 24 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
9 1 0 6 7 6 0 7 104 0 1 0 6 0 1 6 91 0 8 8 5 83 0 5 5 20 67 0 7 7 4 83 0 4 4 24 67 0 2 2 3 83 0 3 3 21 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
9 1 0 6 7 6 0 7 104 0 5 0 8 1 5 8 91 0 1 0 6 0 1 6 91 0 7 7 4 83 0 4 4 24 67 0 2 2 3 83 0 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
1 0 106 104 93 91 77 75 56 54 38 36 28 26 22 20 9 7 0 81 1 81 10 15
CALL[ ]	/* CallFunction */";
};
width = 708;
}
);
note = ampersand;
unicode = 38;
},
{
glyphname = paragraph;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(381,514.37,o),
(383,645.105,o),
(383,755,c),
(381.303,755,o),
(423.998,756,o),
(439,751,c),
(439,36,ls),
(439,22.667,o),
(450.667,0,o),
(480,0,cs),
(520.272,0,o),
(525,36.952,o),
(525,62,cs),
(525,198.613,o),
(524,295.753,o),
(524,437,cs),
(524,494.333,o),
(525,547.333,o),
(527,596,cs),
(529,644.667,o),
(530,685,o),
(530,717,cs),
(530,738.333,o),
(531.333,757,o),
(574,757,cs),
(593,757,ls),
(615.667,757,o),
(630,765.333,o),
(630,788,cs),
(630,808,o),
(617.667,818,o),
(593,818,cs),
(511.776,818,o),
(452.826,821,o),
(368,821,cs),
(175.237,821,o),
(51,754.048,o),
(51,589,cs),
(51,426.004,o),
(159.048,366.535,o),
(296,356,c),
(296,293.651,o),
(296.232,240.155,o),
(295.5,195.5,cs),
(294.756,150.143,o),
(295,98.98,o),
(295,42,cs),
(295,15.333,o),
(313.333,0,o),
(336,0,cs),
(373.333,0,o),
(383,21.333,o),
(383,52,cs),
(383,153.066,o),
(381,274.667,o),
(381,388,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
57 16 2 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
4 1 2 2 1 83 0 1 1 12 67 3 1 0 0 13 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
4 1 2 2 1 83 0 1 1 14 67 3 1 0 0 13 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
62 59 54 52 38 35 32 25 39 5 16
CALL[ ]	/* CallFunction */";
};
width = 683;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(389,516.978,o),
(391,652.835,o),
(391,767,c),
(408.333,767,o),
(418.667,764,o),
(432,760,c),
(432,32,ls),
(432,18.667,o),
(445.333,0,o),
(468,0,cs),
(501.891,0,o),
(505,33.344,o),
(505,58,cs),
(505,196.792,o),
(504,293.443,o),
(504,437,cs),
(504,497,o),
(505,552.333,o),
(507,603,cs),
(509,653.667,o),
(510,695.667,o),
(510,729,cs),
(510,750.333,o),
(516.333,769,o),
(559,769,cs),
(593,769,ls),
(615,769,o),
(626,777.333,o),
(626,794,cs),
(626,808.667,o),
(617,818,o),
(593,818,cs),
(497.286,818,o),
(460.552,821,o),
(348,821,cs),
(168.458,821,o),
(27,760.017,o),
(27,595,cs),
(27,434.161,o),
(179.508,366.576,o),
(317,356,c),
(317,293.787,o),
(317.232,239.623,o),
(316.5,193.5,cs),
(315.763,147.046,o),
(316,94.883,o),
(316,37,cs),
(316,15.667,o),
(329.333,0,o),
(348,0,cs),
(376.667,0,o),
(391,15.667,o),
(391,47,cs),
(391,149.175,o),
(389,274.109,o),
(389,388,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
56 15 2 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
4 1 2 2 1 83 0 1 1 12 67 3 1 0 0 13 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
4 1 2 2 1 83 0 1 1 14 67 3 1 0 0 13 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
59 58 53 51 37 34 31 24 38 5 16
CALL[ ]	/* CallFunction */";
};
width = 658;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(350.333,0,o),
(362,8.333,o),
(362,39,cs),
(362,143.219,o),
(360,269.601,o),
(360,388,cs),
(360,525.49,o),
(362,668.082,o),
(362,787,c),
(391.333,787,o),
(410.333,784,o),
(433,780,c),
(433,26,ls),
(433,12.667,o),
(443.667,0,o),
(457,0,cs),
(475.667,0,o),
(476,26.667,o),
(476,52,cs),
(476,192.873,o),
(475,291.401,o),
(475,437,cs),
(475,501,o),
(476,560.167,o),
(478,614.5,cs),
(480,668.833,o),
(481,713.667,o),
(481,749,cs),
(481,770.333,o),
(487.333,789,o),
(530,789,cs),
(564,789,ls),
(575.333,789,o),
(582.833,790.667,o),
(586.5,794,cs),
(590.167,797.333,o),
(592,800.667,o),
(592,804,cs),
(592,807.333,o),
(590.333,810.5,o),
(587,813.5,cs),
(583.667,816.5,o),
(576,818,o),
(564,818,cs),
(468.286,818,o),
(431.552,821,o),
(319,821,cs),
(153.988,821,o),
(28,759.127,o),
(28,595,cs),
(28,434.161,o),
(180.508,366.576,o),
(318,356,c),
(318,292.46,o),
(318.224,236.797,o),
(317.5,189,cs),
(316.766,140.525,o),
(317,87.196,o),
(317,29,cs),
(317,7.667,o),
(326.333,0,o),
(337,0,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
56 16 2 0 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
4 1 2 2 1 83 0 1 1 12 67 3 1 0 0 13 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
4 1 2 2 1 83 0 1 1 14 67 3 1 0 0 13 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
59 58 53 51 39 36 32 25 39 5 16
CALL[ ]	/* CallFunction */";
};
width = 623;
}
);
note = paragraph;
unicode = 182;
},
{
glyphname = section;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(86,201.616,o),
(189.688,178.733,o),
(278,160,cs),
(359.096,140.919,o),
(373,130.886,o),
(373,100,cs),
(373,54.247,o),
(314.414,46,o),
(284,46,cs),
(210.39,46,o),
(165.313,90.06,o),
(156,118,cs),
(153.333,124.667,o),
(151,138.667,o),
(151,152,cs),
(151,174.667,o),
(131.667,188,o),
(105,188,cs),
(71.667,188,o),
(68,170.667,o),
(68,148,cs),
(68,132.667,o),
(68.5,117,o),
(69.5,101,cs),
(70.5,85,o),
(71,70.333,o),
(71,57,cs),
(71,46.57,o),
(70,25.9,o),
(70,-5,cs),
(70,-26.333,o),
(94.333,-33,o),
(109,-33,cs),
(139.667,-33,o),
(151.667,-20.667,o),
(153,34,c),
(179.742,-19.484,o),
(239.335,-27,o),
(292,-27,cs),
(365.907,-27,o),
(458,-10.66,o),
(458,101,cs),
(458,157,o),
(433.667,186.333,o),
(383,209,c),
(429.667,231.667,o),
(465,263.333,o),
(465,326,cs),
(465,420.647,o),
(386.763,438.309,o),
(268,468,cs),
(212,481.333,o),
(175,503.333,o),
(175,546,cs),
(175,588,o),
(204,609,o),
(262,609,cs),
(326.606,609,o),
(351.18,576.312,o),
(367,551,cs),
(369.667,545.667,o),
(374,523.667,o),
(374,521,cs),
(374,510.333,o),
(392,495,o),
(412,495,cs),
(428,495,o),
(449.333,503.333,o),
(452,522,cs),
(453.031,529.216,o),
(460,621.699,o),
(460,665,cs),
(460,705,o),
(439.333,718,o),
(418,718,cs),
(394,718,o),
(373,708.333,o),
(373,679,cs),
(373,675,o),
(373.667,648.333,o),
(375,631,c),
(353.765,661.335,o),
(326.043,688,o),
(256,688,cs),
(173.547,688,o),
(93,656.352,o),
(93,545,cs),
(93,494.333,o),
(116.333,445.667,o),
(175,431,c),
(142.033,409.022,o),
(86,378.021,o),
(86,320,cs)
);
},
{
closed = 1;
nodes = (
(168,358,o),
(199.667,377.333,o),
(265,384,c),
(333,373.333,o),
(374,353.667,o),
(374,315,cs),
(374,276.333,o),
(344.333,251.333,o),
(291,246,c),
(226.972,251.336,o),
(168,277.593,o),
(168,318,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
18 1 3 0 126 120 59 5 4 6 2 72 1 4 7 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 0 0 3 2 0 3 91 0 1 0 2 6 1 2 91 0 6 6 4 83 5 1 4 4 21 67 0 7 7 4 83 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 0 0 3 2 0 3 91 0 1 0 2 6 1 2 91 0 6 7 4 6 79 0 7 4 4 7 79 0 7 7 4 83 5 1 4 7 4 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 0 0 3 2 0 3 91 0 1 0 2 6 1 2 91 0 6 7 5 6 79 0 7 0 4 5 7 4 91 0 6 6 5 83 0 5 6 5 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
101 99 90 88 76 74 68 66 41 41 41 44 8 19
CALL[ ]	/* CallFunction */";
};
width = 512;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(79,225.207,o),
(161.803,198.661,o),
(234,182,cs),
(312.667,162,o),
(362,147.333,o),
(362,102,cs),
(362,55.749,o),
(308.702,40,o),
(262,40,cs),
(200.311,40,o),
(154.363,71,o),
(138,107,cs),
(134.667,113.667,o),
(132.833,119.833,o),
(132.5,125.5,cs),
(132.167,131.167,o),
(131.333,138.667,o),
(130,148,cs),
(127.333,172,o),
(121.667,188,o),
(95,188,cs),
(69.667,188,o),
(68,174.333,o),
(68,153,cs),
(68,138.333,o),
(68.667,122.667,o),
(70,106,cs),
(71.333,89.333,o),
(72,74.333,o),
(72,61,cs),
(72,51.667,o),
(71.667,40.5,o),
(71,27.5,cs),
(70.333,14.5,o),
(70,6.333,o),
(70,3,cs),
(70,-15.63,o),
(87.392,-23,o),
(103,-23,cs),
(123,-23,o),
(133,-8,o),
(133,12,cs),
(133,16,o),
(133,20.333,o),
(133,25,cs),
(133,29.667,o),
(132.667,34.667,o),
(132,40,c),
(156.163,-5.641,o),
(216.815,-17,o),
(265,-17,cs),
(328.581,-17,o),
(430,2.162,o),
(430,106,cs),
(430,167.333,o),
(394.667,195.667,o),
(340,217,c),
(387.983,230.329,o),
(434,260.312,o),
(434,331,cs),
(434,420.135,o),
(357.808,440.565,o),
(260,467,cs),
(202.115,482.1,o),
(149,499.27,o),
(149,554,cs),
(149,598,o),
(181.333,628,o),
(244,628,cs),
(306.667,628,o),
(337,598.667,o),
(353,568,cs),
(357.728,560.12,o),
(365,526.503,o),
(365,516,c),
(367.667,506.667,o),
(374.667,491,o),
(392,491,cs),
(404,491,o),
(422.667,498.333,o),
(424,517,cs),
(424,530.106,o),
(429,578.955,o),
(429,664,cs),
(429,698.667,o),
(411.667,707,o),
(397,707,cs),
(385,707,o),
(365,700.667,o),
(365,670,cs),
(365,663.333,o),
(365.667,641.333,o),
(367,624,c),
(347.96,655.733,o),
(317.843,689,o),
(241,689,cs),
(161.478,689,o),
(83,651.064,o),
(83,552,cs),
(83,494.667,o),
(107.333,463.333,o),
(142,442,c),
(104.667,420.667,o),
(79,384.333,o),
(79,327,cs)
);
},
{
closed = 1;
nodes = (
(145,373,o),
(177.333,396.333,o),
(240,403,c),
(278.488,400.434,o),
(363,377.117,o),
(363,327,cs),
(363,283.768,o),
(290.441,256,o),
(239,256,cs),
(194.742,258.603,o),
(145,286.034,o),
(145,329,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
36 30 16 3 2 3 3 1 9 2 62 1 6 8 3 66 75 1 7 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 9 2 8 2 9 8 104 0 8 6 2 8 6 102 0 0 0 3 2 0 3 91 0 1 0 2 9 1 2 91 0 6 6 4 83 5 1 4 4 21 67 0 7 7 4 84 5 1 4 4 21 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 9 2 8 2 9 8 104 0 8 6 2 8 6 102 0 0 0 3 2 0 3 91 0 1 0 2 9 1 2 91 0 7 7 4 84 0 4 4 21 67 0 6 6 5 83 0 5 5 21 5 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
134 133 125 123 107 105 96 94 82 80 71 69 41 41 41 42 10 19
CALL[ ]	/* CallFunction */";
};
width = 488;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(88,-7,o),
(92.667,-2.833,o),
(96,5.5,cs),
(99.333,13.833,o),
(101.333,28.667,o),
(102,50,c),
(124.177,16.735,o),
(183.377,0,o),
(227,0,cs),
(278.664,0,o),
(390,25.687,o),
(390,114,cs),
(390,182.203,o),
(339.268,211.824,o),
(279,231,c),
(331.954,242.148,o),
(390,275.493,o),
(390,339,cs),
(390,422.544,o),
(315.652,444.671,o),
(249,466,cs),
(185.304,486.383,o),
(112,490.12,o),
(112,567,cs),
(112,615.027,o),
(152.833,660,o),
(219,660,cs),
(271,660,o),
(311.667,639.333,o),
(333,594,cs),
(341,577.333,o),
(346,560,o),
(348,542,cs),
(350,524,o),
(351.667,512.333,o),
(353,507,cs),
(354.333,500.333,o),
(356.667,484,o),
(370,484,cs),
(380.667,484,o),
(384,497.333,o),
(384,508,cs),
(384,515.333,o),
(384.167,532.833,o),
(384.5,560.5,cs),
(384.833,588.167,o),
(385,622,o),
(385,662,cs),
(385,676.667,o),
(379,688,o),
(367,688,cs),
(361.667,688,o),
(358,685.5,o),
(356,680.5,cs),
(354,675.5,o),
(353,667,o),
(353,655,cs),
(353,643,o),
(353.667,630.333,o),
(355,613,c),
(346.427,641.578,o),
(301.614,690,o),
(220,690,cs),
(145.028,690,o),
(69,640.727,o),
(69,564,cs),
(69,496.565,o),
(112.24,465.754,o),
(149,450,c),
(102.333,430,o),
(69,391,o),
(69,339,cs),
(69,259.52,o),
(129.258,229.926,o),
(171,218,cs),
(234.116,200.787,o),
(347,185.606,o),
(347,106,cs),
(347,59.333,o),
(298,30,o),
(230,30,cs),
(179.333,30,o),
(134.333,45.333,o),
(113,88,cs),
(105,104,o),
(103,119.667,o),
(99,141,cs),
(96.333,154.333,o),
(94,163.333,o),
(92,168,cs),
(90,172.667,o),
(86.333,175,o),
(81,175,cs),
(70.333,175,o),
(68,166.667,o),
(68,148,cs),
(68,134,o),
(68.833,120.167,o),
(70.5,106.5,cs),
(72.167,92.833,o),
(73,79.667,o),
(73,67,cs),
(73,57.667,o),
(72.5,48.5,o),
(71.5,39.5,cs),
(70.5,30.5,o),
(70,22.667,o),
(70,16,cs),
(70,0.667,o),
(74,-7,o),
(82,-7,cs)
);
},
{
closed = 1;
nodes = (
(176.587,255,o),
(112,278.51,o),
(112,342,cs),
(112,386,o),
(145.333,427.333,o),
(204,434,c),
(260.692,419.211,o),
(347,399.212,o),
(347,331,cs),
(347,284.333,o),
(298,255,o),
(230,255,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
54 1 5 6 126 39 2 8 5 98 1 1 8 0 1 2 1 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 8 5 1 5 8 1 104 0 6 5 3 6 79 4 1 3 0 5 8 3 5 91 0 2 2 7 84 0 7 7 13 67 0 1 1 0 83 0 0 0 24 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 8 5 1 5 8 1 104 0 6 5 3 6 79 4 1 3 0 5 8 3 5 91 0 2 2 7 84 0 7 7 13 67 0 1 1 0 83 0 0 0 16 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 8 5 1 5 8 1 104 0 6 5 3 6 79 4 1 3 0 5 8 3 5 91 0 2 2 7 84 0 7 7 13 67 0 1 1 0 83 0 0 0 24 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
119 117 109 107 79 77 70 68 61 59 50 48 39 41 34 9 18
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = section;
unicode = 167;
},
{
glyphname = copyright;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(665,418,o),
(550.333,558,o),
(353,558,cs),
(165.306,558,o),
(40,425.837,o),
(40,244,cs),
(40,57.665,o),
(168.904,-67,o),
(330,-67,cs),
(475.635,-67,o),
(665,36.808,o),
(665,250,cs)
);
},
{
closed = 1;
nodes = (
(599,78.328,o),
(450.153,-5,o),
(330,-5,cs),
(198.605,-5,o),
(109,95.183,o),
(109,244,cs),
(109,389.637,o),
(195.324,494,o),
(351,494,cs),
(509.24,494,o),
(599,385.217,o),
(599,253,cs)
);
},
{
closed = 1;
nodes = (
(396.667,391.667,o),
(366.667,396,o),
(340,396,cs),
(243.429,396,o),
(185,315.352,o),
(185,232,cs),
(185,144.514,o),
(249.391,79,o),
(343,79,cs),
(411.022,79,o),
(457.509,106.6,o),
(479,146,cs),
(483,154,o),
(484,162,o),
(484,166,cs),
(484,176.667,o),
(475.667,187,o),
(461,187,cs),
(446.333,187,o),
(437.333,175.667,o),
(428,165,cs),
(409.333,145,o),
(387,130,o),
(343,130,cs),
(275,130,o),
(248,168,o),
(248,232,cs),
(248,297.333,o),
(278.333,346,o),
(345,346,cs),
(394.833,346,o),
(405.719,313.604,o),
(414,286,cs),
(416.667,276.667,o),
(423.333,265,o),
(442,265,cs),
(463.333,265,o),
(469,276,o),
(469,300,cs),
(469,305.225,o),
(468,333.23,o),
(468,384,cs),
(468,398.667,o),
(464.333,414,o),
(443,414,cs),
(421.667,414,o),
(416,399.667,o),
(416,385,cs),
(416,379.667,o),
(416.667,369,o),
(418,361,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
40 1 6 10 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 8 5 7 5 8 7 104 0 1 0 2 4 1 2 91 0 10 0 6 5 10 6 91 0 7 0 9 3 7 9 91 0 3 0 0 3 0 87 0 5 5 4 83 0 4 4 15 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 8 5 7 5 8 7 104 0 1 0 2 4 1 2 91 0 10 0 6 5 10 6 91 0 4 0 5 8 4 5 91 0 7 0 9 3 7 9 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
99 97 89 87 36 36 38 41 41 40 40 40 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 706;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(647,419.671,o),
(537.995,558,o),
(352,558,cs),
(167.573,558,o),
(43,423.746,o),
(43,244,cs),
(43,58.439,o),
(172.789,-67,o),
(329,-67,cs),
(475.974,-67,o),
(647,39.999,o),
(647,251,cs)
);
},
{
closed = 1;
nodes = (
(584,79.79,o),
(449.55,-5,o),
(331,-5,cs),
(202.798,-5,o),
(109,94.893,o),
(109,244,cs),
(109,390.891,o),
(200.877,494,o),
(350,494,cs),
(503.346,494,o),
(584,385.323,o),
(584,252,cs)
);
},
{
closed = 1;
nodes = (
(402.667,408,o),
(366,415,o),
(338,415,cs),
(244.817,415,o),
(171,336.641,o),
(171,231,cs),
(171,139.177,o),
(227.96,65,o),
(335,65,cs),
(407,65,o),
(455.333,98,o),
(486,142,cs),
(489.333,147.333,o),
(491,153,o),
(491,159,cs),
(491,171,o),
(483.667,182,o),
(465,182,cs),
(449,182,o),
(442.667,174.333,o),
(432,161,cs),
(403.812,127.687,o),
(367.841,124,o),
(347,124,cs),
(285.667,124,o),
(243,160,o),
(243,236,cs),
(243,308,o),
(281,355,o),
(349,355,cs),
(395.667,355,o),
(412.667,323.667,o),
(422,289,cs),
(424.667,277,o),
(433.333,269,o),
(452,269,cs),
(465.333,269,o),
(474.333,271.667,o),
(479,277,cs),
(483.667,282.333,o),
(486,286.667,o),
(486,290,cs),
(486,295.706,o),
(487,338.039,o),
(487,417,cs),
(487,427.667,o),
(475.667,439,o),
(453,439,cs),
(431.667,439,o),
(422,426.667,o),
(422,416,cs),
(422,402.667,o),
(422.667,386.667,o),
(424,376,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
40 1 6 10 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 8 5 7 5 8 7 104 0 1 0 2 4 1 2 91 0 7 0 9 3 7 9 91 0 3 0 0 3 0 87 0 6 6 10 83 0 10 10 15 67 0 5 5 4 83 0 4 4 15 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 8 5 7 5 8 7 104 0 1 0 2 4 1 2 91 0 10 0 6 5 10 6 91 0 4 0 5 8 4 5 91 0 7 0 9 3 7 9 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
96 94 86 84 38 36 36 41 41 40 40 40 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 691;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(468.86,-67,o),
(621,40.452,o),
(621,253,cs),
(621,416.153,o),
(527.683,558,o),
(351,558,cs),
(175.649,558,o),
(47,426.971,o),
(47,244,cs),
(47,60.254,o),
(175.848,-67,o),
(328,-67,cs)
);
},
{
closed = 1;
nodes = (
(194.712,-35,o),
(83,73.941,o),
(83,244,cs),
(83,409.941,o),
(190.072,524,o),
(348,524,cs),
(512.407,524,o),
(588,399.343,o),
(588,252,cs),
(588,60.014,o),
(456.678,-35,o),
(329,-35,cs)
);
},
{
closed = 1;
nodes = (
(386,65,o),
(430,90.667,o),
(460,142,cs),
(464.667,150,o),
(467,156.333,o),
(467,161,cs),
(467,167.667,o),
(465,175,o),
(453,175,cs),
(445,175,o),
(441.333,169,o),
(436,161,cs),
(406.667,111.667,o),
(379.667,95,o),
(333,95,cs),
(261,95,o),
(217,144,o),
(217,232,cs),
(217,324.623,o),
(270.363,385,o),
(340,385,cs),
(398.667,385,o),
(426,347.667,o),
(426,289,cs),
(426,278.333,o),
(436,274,o),
(444,274,cs),
(450.667,274,o),
(460,282,o),
(460,290,cs),
(460,307.694,o),
(461,350.027,o),
(461,417,cs),
(461,427.667,o),
(452,436,o),
(444,436,cs),
(436,436,o),
(426,426.667,o),
(426,416,cs),
(426,402.667,o),
(426.667,386.667,o),
(428,376,c),
(406.667,408,o),
(370,415,o),
(342,415,cs),
(248.817,415,o),
(175,336.641,o),
(175,231,cs),
(175,138.198,o),
(237.624,65,o),
(328,65,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
40 1 5 6 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 8 5 7 5 8 7 104 0 1 0 2 4 1 2 91 0 7 0 9 3 7 9 91 0 3 0 0 3 0 87 0 6 6 10 83 0 10 10 15 67 0 5 5 4 83 0 4 4 15 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 8 5 7 5 8 7 104 0 1 0 2 4 1 2 91 0 10 0 6 5 10 6 91 0 4 0 5 8 4 5 91 0 7 0 9 3 7 9 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
95 93 85 83 36 38 36 41 41 40 40 40 36 11 24
CALL[ ]	/* CallFunction */";
};
width = 670;
}
);
note = copyright;
unicode = 169;
},
{
glyphname = registered;
kernLeft = registered;
kernRight = registered;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(412,276.467,o),
(366.441,267,o),
(308,267,c),
(308,382,l),
(317.333,383.333,o),
(330.333,385,o),
(341,385,cs),
(377,385,o),
(412,370.333,o),
(412,333,cs)
);
},
{
closed = 1;
nodes = (
(478.641,73,o),
(496,73.577,o),
(496,95,cs),
(496,108.333,o),
(486.333,115,o),
(467,115,cs),
(435,115,l),
(426.333,125,o),
(417,136.167,o),
(407,148.5,cs),
(397,160.833,o),
(387.333,172.667,o),
(378,184,cs),
(367.333,196.667,o),
(356.667,209.667,o),
(346,223,c),
(412.667,232.333,o),
(466,268.333,o),
(466,335,cs),
(466,423.75,o),
(356.249,433,o),
(293,433,cs),
(259.304,433,o),
(211,429.412,o),
(211,410,cs),
(211,383.625,o),
(248.405,401.975,o),
(254,374,c),
(254.667,354.667,o),
(255,336,o),
(255,318,cs),
(255,300,o),
(255,280.333,o),
(255,259,cs),
(255,142,ls),
(255,122.241,o),
(211,135.207,o),
(211,109,cs),
(211,95.667,o),
(214,92,o),
(238,92,cs),
(312,92,ls),
(328,92,o),
(338.167,93.667,o),
(342.5,97,cs),
(346.833,100.333,o),
(349,104.667,o),
(349,110,cs),
(349,131.333,o),
(340,133,o),
(324,133,cs),
(307,133,l),
(307,201,l),
(409,73,l),
(409,73,l)
);
},
{
closed = 1;
nodes = (
(665,418,o),
(550.333,558,o),
(353,558,cs),
(165.306,558,o),
(40,425.837,o),
(40,244,cs),
(40,57.665,o),
(168.904,-67,o),
(330,-67,cs),
(475.635,-67,o),
(665,36.808,o),
(665,250,cs)
);
},
{
closed = 1;
nodes = (
(599,78.328,o),
(450.153,-5,o),
(330,-5,cs),
(198.605,-5,o),
(109,95.183,o),
(109,244,cs),
(109,389.637,o),
(195.324,494,o),
(351,494,cs),
(509.24,494,o),
(599,385.217,o),
(599,253,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
33 6 2 1 0 51 12 2 2 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 0 4 1 9 0 96 0 1 2 2 1 94 0 8 0 9 4 8 9 91 0 2 0 3 6 2 3 92 0 5 0 6 10 5 6 91 0 10 0 7 10 7 87 0 4 4 15 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 0 4 1 9 0 96 0 1 2 4 1 2 102 0 8 0 9 4 8 9 91 0 2 0 3 6 2 3 92 0 5 0 6 10 5 6 91 0 10 0 7 10 7 87 0 4 4 15 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 0 4 1 4 0 1 104 0 1 2 4 1 2 102 0 8 0 9 4 8 9 91 0 2 0 3 6 2 3 92 0 5 0 6 10 5 6 91 0 10 0 7 10 7 87 0 4 4 15 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 4 9 0 9 4 0 104 0 0 1 9 0 1 102 0 1 2 9 1 2 102 0 8 0 9 4 8 9 91 0 2 0 3 6 2 3 92 0 5 0 6 10 5 6 91 0 10 7 7 10 79 0 10 10 7 83 0 7 10 7 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
101 99 91 89 81 79 71 69 64 62 58 56 44 41 52 37 19 34 11 19
CALL[ ]	/* CallFunction */";
};
width = 707;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(647,433.998,o),
(545.515,558,o),
(364,558,cs),
(163.255,558,o),
(43,425.024,o),
(43,244,cs),
(43,60.014,o),
(186.97,-67,o),
(354,-67,cs),
(494.86,-67,o),
(647,40.452,o),
(647,253,cs)
);
},
{
closed = 1;
nodes = (
(584,80.882,o),
(467.038,-5,o),
(353,-5,cs),
(218.497,-5,o),
(109,94.286,o),
(109,244,cs),
(109,392.466,o),
(198.198,494,o),
(355,494,cs),
(494.948,494,o),
(584,386.599,o),
(584,252,cs)
);
},
{
closed = 1;
nodes = (
(344.749,150.334,o),
(405.396,55,o),
(419,55,cs),
(495.666,55,o),
(512,59.486,o),
(512,76,cs),
(512,89.333,o),
(505,98,o),
(485,98,cs),
(464,98,l),
(455.333,108,o),
(445.833,119.667,o),
(435.5,133,cs),
(425.167,146.333,o),
(415.333,159,o),
(406,171,cs),
(394.667,185,o),
(383.667,199.333,o),
(373,214,c),
(406.035,216.753,o),
(467,244.004,o),
(467,331,cs),
(467,409.781,o),
(390.822,435,o),
(337,435,cs),
(295.121,435,o),
(249.323,433,o),
(212,433,cs),
(198.667,433,o),
(189,426.667,o),
(189,412,cs),
(189,397.333,o),
(202.333,391,o),
(213,391,cs),
(217,391,o),
(219.667,390.167,o),
(221,388.5,cs),
(222.333,386.833,o),
(223,381.333,o),
(223,372,cs),
(223,350.667,o),
(223.5,331.167,o),
(224.5,313.5,cs),
(225.5,295.833,o),
(226,276.333,o),
(226,255,cs),
(226,233.667,o),
(225.667,213.667,o),
(225,195,cs),
(224.333,176.333,o),
(224,156.667,o),
(224,136,cs),
(224,117.333,o),
(221,116,o),
(209,116,cs),
(202.333,116,o),
(197,108.333,o),
(197,95,cs),
(197,84.333,o),
(202.667,74,o),
(216,74,cs),
(225.333,74,o),
(236.5,74.167,o),
(249.5,74.5,cs),
(262.5,74.833,o),
(273.667,75,o),
(283,75,cs),
(291,75,o),
(298.167,74.833,o),
(304.5,74.5,cs),
(310.833,74.167,o),
(318.333,74,o),
(327,74,cs),
(333.667,74,o),
(341,83,o),
(341,95,cs),
(341,109.667,o),
(330.667,117,o),
(324,117,cs),
(293,117,l),
(293,214,l),
(297,214,l),
(297,214,l)
);
},
{
closed = 1;
nodes = (
(397,282.333,o),
(364,273,o),
(308,273,cs),
(306.667,273,o),
(304,273.167,o),
(300,273.5,cs),
(296,273.833,o),
(293.667,274,o),
(293,274,c),
(293,372,l),
(295.667,372,o),
(298.333,372.333,o),
(301,373,cs),
(307.667,374.333,o),
(314.333,375,o),
(321,375,cs),
(352.314,375,o),
(397,366.372,o),
(397,325,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
93 1 11 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 7 8 12 12 7 96 15 1 14 12 11 12 14 11 104 16 1 11 4 12 11 4 102 0 1 0 2 8 1 2 91 6 1 4 0 5 10 4 5 92 0 9 0 10 3 9 10 91 0 3 0 0 3 0 87 13 1 12 12 8 84 0 8 8 15 12 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
0 7 8 12 12 7 96 15 1 14 12 11 12 14 11 104 16 1 11 4 12 11 4 102 0 1 0 2 8 1 2 91 0 8 13 1 12 14 8 12 91 6 1 4 0 5 10 4 5 92 0 9 0 10 3 9 10 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
40 40 127 125 124 123 122 121 119 117 40 112 40 112 108 105 100 98 116 42 36 132 37 40 40 40 36 17 24
CALL[ ]	/* CallFunction */";
};
width = 692;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(468.86,-67,o),
(621,40.452,o),
(621,253,cs),
(621,416.153,o),
(527.683,558,o),
(351,558,cs),
(175.649,558,o),
(47,426.971,o),
(47,244,cs),
(47,60.254,o),
(175.848,-67,o),
(328,-67,cs)
);
},
{
closed = 1;
nodes = (
(194.712,-35,o),
(83,73.941,o),
(83,244,cs),
(83,409.941,o),
(190.072,524,o),
(348,524,cs),
(512.407,524,o),
(588,399.343,o),
(588,252,cs),
(588,60.014,o),
(456.678,-35,o),
(329,-35,cs)
);
},
{
closed = 1;
nodes = (
(450.177,55,o),
(480,56.312,o),
(480,67,cs),
(480,69.667,o),
(478.333,72.167,o),
(475,74.5,cs),
(471.667,76.833,o),
(466.333,78,o),
(459,78,cs),
(437,78,l),
(413,104.667,o),
(383.667,142.333,o),
(361,173,cs),
(347.667,191,o),
(334.333,209.667,o),
(321,229,c),
(372.631,229,o),
(441,256.656,o),
(441,335,cs),
(441,409.302,o),
(363.492,435,o),
(311,435,cs),
(270.655,435,o),
(229.345,433,o),
(196,433,cs),
(185.333,433,o),
(183,428.333,o),
(183,423,cs),
(183,415,o),
(187.667,411,o),
(197,411,cs),
(221,411,o),
(227,410.667,o),
(227,392,cs),
(227,367.333,o),
(227.5,344.5,o),
(228.5,323.5,cs),
(229.5,302.5,o),
(230,279.667,o),
(230,255,cs),
(230,230.333,o),
(229.667,207,o),
(229,185,cs),
(228.333,163,o),
(228,140,o),
(228,116,cs),
(228,97.333,o),
(218.333,96,o),
(193,96,cs),
(185,96,o),
(181,89,o),
(181,85,cs),
(181,77.667,o),
(187,74,o),
(199,74,cs),
(207,74,o),
(216.667,74.167,o),
(228,74.5,cs),
(239.333,74.833,o),
(249,75,o),
(257,75,cs),
(265,75,o),
(273,74.833,o),
(281,74.5,cs),
(289,74.167,o),
(297.333,74,o),
(306,74,cs),
(312.667,74,o),
(314,81.333,o),
(314,84,cs),
(314,90.667,o),
(309.667,97,o),
(303,97,cs),
(267,97,l),
(267,229,l),
(276,229,l),
(297.09,201.707,o),
(322.402,164.902,o),
(354,120,cs),
(375.384,89.612,o),
(399.172,55,o),
(408,55,cs)
);
},
{
closed = 1;
nodes = (
(280.667,258,o),
(278,258.167,o),
(274,258.5,cs),
(270,258.833,o),
(267.667,259,o),
(267,259,c),
(267,402,l),
(269.667,402,o),
(272.333,402.333,o),
(275,403,cs),
(281.667,404.333,o),
(288.333,405,o),
(295,405,cs),
(333.863,405,o),
(401,394.456,o),
(401,332,cs),
(401,278.999,o),
(340.428,258,o),
(282,258,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
14 1 13 7 15 7 13 96 16 1 15 9 7 15 9 102 17 12 2 9 4 7 9 4 102 0 1 0 2 8 1 2 91 6 1 4 0 5 11 4 5 92 0 10 0 11 3 10 11 91 0 3 0 0 3 0 87 0 7 7 8 83 0 8 8 15 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
14 1 13 7 15 7 13 96 16 1 15 9 7 15 9 102 17 12 2 9 4 7 9 4 102 0 1 0 2 8 1 2 91 0 8 0 7 13 8 7 91 6 1 4 0 5 11 4 5 92 0 10 0 11 3 10 11 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
40 40 125 123 122 121 120 119 117 115 40 110 40 110 106 103 98 96 91 90 115 42 35 132 37 40 40 40 36 18 24
CALL[ ]	/* CallFunction */";
};
width = 670;
}
);
note = registered;
unicode = 174;
},
{
glyphname = trademark;
kernLeft = trademark;
kernRight = trademark;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(144,711.244,o),
(145,709.756,o),
(145,659,cs),
(145,643,o),
(144.833,628.667,o),
(144.5,616,cs),
(144.167,603.333,o),
(144,589.333,o),
(144,574,cs),
(144,559.333,o),
(137.333,557,o),
(128,557,cs),
(116,557,o),
(115,540.667,o),
(115,530,cs),
(115,524.667,o),
(120.333,504,o),
(131,504,cs),
(138.333,504,o),
(147.667,504.167,o),
(159,504.5,cs),
(170.333,504.833,o),
(179.667,505,o),
(187,505,cs),
(194.333,505,o),
(200.5,504.833,o),
(205.5,504.5,cs),
(210.5,504.167,o),
(216.667,504,o),
(224,504,cs),
(227.333,504,o),
(230.333,505.333,o),
(233,508,cs),
(235.667,510.667,o),
(237,517.667,o),
(237,529,cs),
(237,547.667,o),
(231.667,557,o),
(221,557,cs),
(209,557,l),
(209,762,l),
(241,762,ls),
(255.667,762,o),
(256,755.667,o),
(256,749,cs),
(256,733,ls),
(256,722.333,o),
(270,717,o),
(286,717,cs),
(300.667,717,o),
(317,724.333,o),
(317,739,cs),
(317,743,o),
(316.833,748.333,o),
(316.5,755,cs),
(316.167,761.667,o),
(316,767.333,o),
(316,772,cs),
(316,776,o),
(316.167,781.333,o),
(316.5,788,cs),
(316.833,794.667,o),
(317,800,o),
(317,804,cs),
(317,818.667,o),
(293.333,821,o),
(280,821,cs),
(262.667,821,o),
(245.667,820.833,o),
(229,820.5,cs),
(212.333,820.167,o),
(195.333,820,o),
(178,820,cs),
(160.667,820,o),
(143,820.167,o),
(125,820.5,cs),
(107,820.833,o),
(89.333,821,o),
(72,821,cs),
(58.667,821,o),
(40,818.667,o),
(40,804,cs),
(40,800,o),
(40.167,794.667,o),
(40.5,788,cs),
(40.833,781.333,o),
(41,776,o),
(41,772,cs),
(41,767.333,o),
(40.833,761.667,o),
(40.5,755,cs),
(40.167,748.333,o),
(40,743,o),
(40,739,cs),
(40,725.667,o),
(52.333,719,o),
(67,719,cs),
(85.667,719,o),
(100,725.667,o),
(100,739,cs),
(100,752,ls),
(100,757.333,o),
(103,762,o),
(115,762,cs),
(144,762,l),
(144,762,l)
);
},
{
closed = 1;
nodes = (
(724,764.333,o),
(730,776,o),
(730,792,cs),
(730,814.667,o),
(722.667,821,o),
(704,821,cs),
(632,821,ls),
(613.333,821,o),
(592.333,818.667,o),
(587,804,cs),
(569.671,752.012,o),
(540.028,608.099,o),
(524,552,c),
(495.558,649.966,o),
(464.669,767.322,o),
(455,806,cs),
(453,813.333,o),
(451,817.667,o),
(449,819,cs),
(447,820.333,o),
(444.333,821,o),
(441,821,cs),
(345,821,ls),
(341,821,o),
(326,818.667,o),
(326,800,cs),
(326,774.877,o),
(358,786.024,o),
(358,758,cs),
(358,707.379,o),
(359,704.879,o),
(359,652,cs),
(359,636.667,o),
(359,623.167,o),
(359,611.5,cs),
(359,599.833,o),
(358.333,587.333,o),
(357,574,cs),
(355.667,558,o),
(352.667,557,o),
(342,557,cs),
(330,557,o),
(328,540.667,o),
(328,530,cs),
(328,518,o),
(334.333,504,o),
(345,504,cs),
(351.667,504,o),
(360.167,504.167,o),
(370.5,504.5,cs),
(380.833,504.833,o),
(389.667,505,o),
(397,505,cs),
(404.333,505,o),
(411.333,504.833,o),
(418,504.5,cs),
(424.667,504.167,o),
(431,504,o),
(437,504,cs),
(447.667,504,o),
(453,513.333,o),
(453,532,cs),
(453,544,o),
(450.667,557,o),
(436,557,cs),
(424,557,l),
(424,733,l),
(429.76,705.639,o),
(466.039,570.736,o),
(486,508,cs),
(492.667,489.333,o),
(516,487,o),
(524,487,cs),
(536,487,o),
(558,491.667,o),
(562,509,cs),
(565.333,524.333,o),
(571.5,549.167,o),
(580.5,583.5,cs),
(589.5,617.833,o),
(600,662.333,o),
(612,717,c),
(612,559,ls),
(612,544.333,o),
(608.333,542,o),
(595,542,cs),
(585.667,542,o),
(581,531.333,o),
(581,518,cs),
(581,496.667,o),
(590.667,489,o),
(600,489,cs),
(606.667,489,o),
(614.333,489.167,o),
(623,489.5,cs),
(631.667,489.833,o),
(639.667,490,o),
(647,490,cs),
(654.333,490,o),
(663,489.833,o),
(673,489.5,cs),
(683,489.167,o),
(691.667,489,o),
(699,489,cs),
(705.667,489,o),
(717,495.333,o),
(717,514,cs),
(717,532.667,o),
(705.333,542,o),
(692,542,cs),
(679,542,l),
(679,564.944,o),
(677,605.66,o),
(677,651,cs),
(677,673,o),
(677.167,691.333,o),
(677.5,706,cs),
(677.833,720.667,o),
(678,732.333,o),
(678,741,cs),
(678,751.667,o),
(679.333,758.667,o),
(690,760,cs),
(694.667,760.667,o),
(698.833,761,o),
(702.5,761,cs),
(706.167,761,o),
(710.667,761.667,o),
(716,763,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
164 118 51 18 2 40
CALL[ ]	/* CallFunction */";
};
width = 770;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(155,751.333,o),
(155.167,732.167,o),
(155.5,716.5,cs),
(155.833,700.833,o),
(156,681.667,o),
(156,659,cs),
(156,640.333,o),
(155.833,623.833,o),
(155.5,609.5,cs),
(155.167,595.167,o),
(155,579.333,o),
(155,562,cs),
(155,546,o),
(154.667,545,o),
(132,545,cs),
(120,545,o),
(119,532,o),
(119,524,cs),
(119,518.667,o),
(124.333,504,o),
(135,504,cs),
(142.333,504,o),
(151.667,504.167,o),
(163,504.5,cs),
(174.333,504.833,o),
(183.667,505,o),
(191,505,cs),
(198.333,505,o),
(205.5,504.833,o),
(212.5,504.5,cs),
(219.5,504.167,o),
(226.667,504,o),
(234,504,cs),
(240.667,504,o),
(241,520.333,o),
(241,523,cs),
(241,537.667,o),
(235.667,545,o),
(225,545,cs),
(206,545,l),
(206,774,l),
(252,774,ls),
(266.667,774,o),
(267,769.667,o),
(267,755,cs),
(267,743,ls),
(267,727,o),
(278,719,o),
(290,719,cs),
(300.667,719,o),
(314,724.333,o),
(314,739,cs),
(314,743,o),
(313.833,748.333,o),
(313.5,755,cs),
(313.167,761.667,o),
(313,767.333,o),
(313,772,cs),
(313,776,o),
(313.167,781.333,o),
(313.5,788,cs),
(313.833,794.667,o),
(314,800,o),
(314,804,cs),
(314,818.667,o),
(297.333,821,o),
(284,821,cs),
(266.667,821,o),
(249.667,820.833,o),
(233,820.5,cs),
(216.333,820.167,o),
(199.333,820,o),
(182,820,cs),
(164.667,820,o),
(147,820.167,o),
(129,820.5,cs),
(111,820.833,o),
(93.333,821,o),
(76,821,cs),
(62.667,821,o),
(51,818.667,o),
(51,804,cs),
(51,800,o),
(51.167,794.667,o),
(51.5,788,cs),
(51.833,781.333,o),
(52,776,o),
(52,772,cs),
(52,767.333,o),
(51.833,761.667,o),
(51.5,755,cs),
(51.167,748.333,o),
(51,743,o),
(51,739,cs),
(51,724.333,o),
(62.333,720,o),
(73,720,cs),
(87.667,720,o),
(97,725.667,o),
(97,743,cs),
(97,755,ls),
(97,769.667,o),
(97.333,774,o),
(112,774,cs),
(155,774,l),
(155,774,l)
);
},
{
closed = 1;
nodes = (
(718,776.333,o),
(723,787.333,o),
(723,798,cs),
(723,813.333,o),
(716,821,o),
(702,821,cs),
(636,821,ls),
(617.333,821,o),
(596.333,818.667,o),
(591,804,cs),
(572.923,749.77,o),
(562.178,684.847,o),
(518,546,c),
(497.154,622.434,o),
(457.859,738.108,o),
(439,806,cs),
(437,813.333,o),
(435,817.667,o),
(433,819,cs),
(431,820.333,o),
(428.333,821,o),
(425,821,cs),
(339,821,ls),
(335,821,o),
(320,819,o),
(320,803,cs),
(320,779.704,o),
(359,792.475,o),
(359,768,cs),
(359,746,o),
(359.167,727,o),
(359.5,711,cs),
(359.833,695,o),
(360,675.333,o),
(360,652,cs),
(360,634.667,o),
(360,619.167,o),
(360,605.5,cs),
(360,591.833,o),
(359.333,577.333,o),
(358,562,cs),
(356.667,546,o),
(350.667,545,o),
(336,545,cs),
(324,545,o),
(322,532,o),
(322,524,cs),
(322,518.667,o),
(328.333,504,o),
(339,504,cs),
(345.667,504,o),
(354.167,504.167,o),
(364.5,504.5,cs),
(374.833,504.833,o),
(383.667,505,o),
(391,505,cs),
(398.333,505,o),
(405.667,504.833,o),
(413,504.5,cs),
(420.333,504.167,o),
(427.333,504,o),
(434,504,cs),
(442,504,o),
(447,513,o),
(447,525,cs),
(447,534.333,o),
(444.667,545,o),
(430,545,cs),
(411,545,l),
(411,749,l),
(411.501,747.413,o),
(457.337,589.574,o),
(487,508,cs),
(493.667,490.667,o),
(511.333,489,o),
(518,489,cs),
(526,489,o),
(543.667,493,o),
(549,509,cs),
(554.333,525,o),
(562.5,552.667,o),
(573.5,592,cs),
(584.5,631.333,o),
(597.667,678.333,o),
(613,733,c),
(613,547,ls),
(613,531,o),
(605,530,o),
(589,530,cs),
(578.333,530,o),
(576,520.333,o),
(576,511,cs),
(576,496.333,o),
(583.333,489,o),
(594,489,cs),
(600.667,489,o),
(608.333,489.167,o),
(617,489.5,cs),
(625.667,489.833,o),
(633.667,490,o),
(641,490,cs),
(648.333,490,o),
(657,489.833,o),
(667,489.5,cs),
(677,489.167,o),
(685.667,489,o),
(693,489,cs),
(699.667,489,o),
(707,496,o),
(707,508,cs),
(707,522.667,o),
(700,530,o),
(686,530,cs),
(666,530,l),
(666,553.021,o),
(664,599.153,o),
(664,651,cs),
(664,676.333,o),
(664.167,697.333,o),
(664.5,714,cs),
(664.833,730.667,o),
(665,743.667,o),
(665,753,cs),
(665,762.333,o),
(665,769.333,o),
(677,772,cs),
(683,772.667,o),
(688.5,773,o),
(693.5,773,cs),
(698.5,773,o),
(704,773.667,o),
(710,775,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
160 93 51 18 2 40
CALL[ ]	/* CallFunction */";
};
width = 761;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(592.667,489,o),
(600.333,489.167,o),
(609,489.5,cs),
(617.667,489.833,o),
(625.667,490,o),
(633,490,cs),
(640.333,490,o),
(649,489.833,o),
(659,489.5,cs),
(669,489.167,o),
(677.667,489,o),
(685,489,cs),
(691.667,489,o),
(693,495.333,o),
(693,498,cs),
(693,503.333,o),
(691.333,510,o),
(678,510,cs),
(648,510,l),
(648,537.526,o),
(646,591.139,o),
(646,651,cs),
(646,681,o),
(646.167,706,o),
(646.5,726,cs),
(646.833,746,o),
(647,761.667,o),
(647,773,cs),
(647,782.333,o),
(648.333,789.333,o),
(659,792,c),
(667,792.667,o),
(674.167,793,o),
(680.5,793,cs),
(686.833,793,o),
(694,793.667,o),
(702,795,cs),
(710,796.333,o),
(713,805.333,o),
(713,808,cs),
(713,816.667,o),
(708.333,821,o),
(699,821,cs),
(642,821,ls),
(623.333,821,o),
(602.333,818.667,o),
(597,804,cs),
(576.692,748.154,o),
(532.279,597.267,o),
(510,536,c),
(491.444,596.97,o),
(433.307,754.078,o),
(416,806,cs),
(414,813.333,o),
(412,817.667,o),
(410,819,cs),
(408,820.333,o),
(405.333,821,o),
(402,821,cs),
(331,821,ls),
(327,821,o),
(312,821.333,o),
(312,808,cs),
(312,786.772,o),
(361,803.702,o),
(361,785,cs),
(361,763,o),
(361.167,741.167,o),
(361.5,719.5,cs),
(361.833,697.833,o),
(362,675.333,o),
(362,652,cs),
(362,631.333,o),
(362,612.5,o),
(362,595.5,cs),
(362,578.5,o),
(361.333,560.667,o),
(360,542,cs),
(358.667,526,o),
(350.667,525,o),
(328,525,cs),
(322,525,o),
(318.167,523.5,o),
(316.5,520.5,cs),
(314.833,517.5,o),
(314,515.333,o),
(314,514,cs),
(314,507.333,o),
(319.667,504,o),
(331,504,cs),
(337.667,504,o),
(346.167,504.167,o),
(356.5,504.5,cs),
(366.833,504.833,o),
(375.667,505,o),
(383,505,cs),
(390.333,505,o),
(398.167,504.833,o),
(406.5,504.5,cs),
(414.833,504.167,o),
(422.667,504,o),
(430,504,cs),
(436.667,504,o),
(438,510.333,o),
(438,513,cs),
(438,518.333,o),
(436.667,525,o),
(422,525,cs),
(393,525,l),
(393,776,l),
(411.343,726.211,o),
(462.496,575.733,o),
(489,508,cs),
(492.333,500.667,o),
(496.167,496.333,o),
(500.5,495,cs),
(504.833,493.667,o),
(507.667,493,o),
(509,493,cs),
(513,493,o),
(524.333,495.667,o),
(531,509,cs),
(546.924,540.849,o),
(574.72,649.902,o),
(615,760,c),
(615,527,ls),
(615,511,o),
(602.667,510,o),
(580,510,cs),
(569.333,510,o),
(569,501.667,o),
(569,499,cs),
(569,492.333,o),
(574.667,489,o),
(586,489,cs)
);
},
{
closed = 1;
nodes = (
(134.333,504,o),
(143.667,504.167,o),
(155,504.5,cs),
(166.333,504.833,o),
(175.667,505,o),
(183,505,cs),
(190.333,505,o),
(197.5,504.833,o),
(204.5,504.5,cs),
(211.5,504.167,o),
(218.667,504,o),
(226,504,cs),
(232.667,504,o),
(233,510.333,o),
(233,513,cs),
(233,518.333,o),
(229,525,o),
(217,525,cs),
(188,525,l),
(188,794,l),
(254,794,ls),
(268.667,794,o),
(269,789.667,o),
(269,775,cs),
(269,743,ls),
(269,727,o),
(275.333,722,o),
(282,722,cs),
(286,722,o),
(296,724.333,o),
(296,739,cs),
(296,743,o),
(295.833,748.333,o),
(295.5,755,cs),
(295.167,761.667,o),
(295,767.333,o),
(295,772,cs),
(295,776,o),
(295.167,781.333,o),
(295.5,788,cs),
(295.833,794.667,o),
(296,800,o),
(296,804,cs),
(296,818.667,o),
(289.333,821,o),
(276,821,cs),
(258.667,821,o),
(241.667,820.833,o),
(225,820.5,cs),
(208.333,820.167,o),
(191.333,820,o),
(174,820,cs),
(156.667,820,o),
(139,820.167,o),
(121,820.5,cs),
(103,820.833,o),
(85.333,821,o),
(68,821,cs),
(54.667,821,o),
(53,818.667,o),
(53,804,cs),
(53,800,o),
(53.167,794.667,o),
(53.5,788,cs),
(53.833,781.333,o),
(54,776,o),
(54,772,cs),
(54,767.333,o),
(53.833,761.667,o),
(53.5,755,cs),
(53.167,748.333,o),
(53,743,o),
(53,739,cs),
(53,724.333,o),
(63,722,o),
(67,722,cs),
(70.333,722,o),
(73.167,723.5,o),
(75.5,726.5,cs),
(77.833,729.5,o),
(79,735,o),
(79,743,cs),
(79,775,ls),
(79,789.667,o),
(79.333,794,o),
(94,794,cs),
(157,794,l),
(157,771.333,o),
(157.167,748.833,o),
(157.5,726.5,cs),
(157.833,704.167,o),
(158,681.667,o),
(158,659,cs),
(158,636.333,o),
(157.833,616.5,o),
(157.5,599.5,cs),
(157.167,582.5,o),
(157,563.333,o),
(157,542,cs),
(157,526,o),
(146.667,525,o),
(124,525,cs),
(118,525,o),
(114.333,523.5,o),
(113,520.5,cs),
(111.667,517.5,o),
(111,515.333,o),
(111,514,cs),
(111,507.333,o),
(116.333,504,o),
(127,504,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
161 94 52 18 2 40
CALL[ ]	/* CallFunction */";
};
width = 748;
}
);
note = trademark;
unicode = 8482;
},
{
glyphname = degree;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(226,798,o),
(199.667,837,o),
(129,837,cs),
(58.333,837,o),
(30,800,o),
(30,752,cs),
(30,693.333,o),
(70.333,669,o),
(121,669,cs),
(172.761,669,o),
(226,694.394,o),
(226,754,cs)
);
},
{
closed = 1;
nodes = (
(145.667,782,o),
(155,767.667,o),
(155,753,cs),
(155,734.333,o),
(148,722,o),
(128,722,cs),
(109.333,722,o),
(101,734.667,o),
(101,752,cs),
(101,769.333,o),
(112.333,782,o),
(127,782,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 3 0 0 3 0 87 4 1 2 2 1 83 0 1 1 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 4 1 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
15 14 21 19 14 25 15 25 36 36 5 17
CALL[ ]	/* CallFunction */";
};
width = 253;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(215,798,o),
(190,837,o),
(126,837,cs),
(63.333,837,o),
(33,800,o),
(33,752,cs),
(33,696,o),
(71,669,o),
(119,669,cs),
(165.893,669,o),
(215,695.469,o),
(215,754,cs)
);
},
{
closed = 1;
nodes = (
(147.667,794,o),
(158,774.333,o),
(158,753,cs),
(158,726.333,o),
(148,710,o),
(124,710,cs),
(101.333,710,o),
(90,728,o),
(90,752,cs),
(90,776,o),
(102.333,794,o),
(125,794,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 3 0 0 3 0 87 4 1 2 2 1 83 0 1 1 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 4 1 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
15 14 21 19 14 25 15 25 36 36 5 17
CALL[ ]	/* CallFunction */";
};
width = 246;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(155.976,669,o),
(199,696.572,o),
(199,754,cs),
(199,798,o),
(172.667,837,o),
(122,837,cs),
(71.333,837,o),
(37,800,o),
(37,752,cs),
(37,701.333,o),
(73.333,669,o),
(116,669,cs)
);
},
{
closed = 1;
nodes = (
(88,690,o),
(74,716,o),
(74,752,cs),
(74,786.667,o),
(85.667,814,o),
(119,814,cs),
(152.333,814,o),
(162,783.667,o),
(162,753,cs),
(162,714.333,o),
(145.333,690,o),
(116,690,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 3 0 0 3 0 87 4 1 2 2 1 83 0 1 1 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 4 1 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
15 14 21 19 14 25 15 25 36 36 5 17
CALL[ ]	/* CallFunction */";
};
width = 236;
}
);
note = degree;
unicode = 176;
},
{
glyphname = bar;
kernRight = bar;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(174,824.355,o),
(161.454,856,o),
(129,856,cs),
(114.95,856,o),
(83,847.704,o),
(83,818,cs),
(83,652.847,o),
(84,531.106,o),
(84,348,cs),
(84,182.037,o),
(83,58.549,o),
(83,-131,cs),
(83,-149.667,o),
(102.667,-161,o),
(128,-161,cs),
(162.667,-161,o),
(173,-154.667,o),
(173,-128,cs),
(173,33.963,o),
(172,158.12,o),
(172,342,cs),
(172,492.309,o),
(174,653.464,o),
(174,802,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 1 83 0 1 1 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
32 30 44 2 16
CALL[ ]	/* CallFunction */";
};
width = 257;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(156,822,o),
(147.333,850,o),
(122,850,cs),
(111.381,850,o),
(86,843.869,o),
(86,818,cs),
(86,654.085,o),
(87,502.194,o),
(87,348,cs),
(87,182.037,o),
(86,58.549,o),
(86,-131,cs),
(86,-145.667,o),
(102.333,-155,o),
(121,-155,cs),
(143.667,-155,o),
(156,-149.333,o),
(156,-128,cs),
(153.187,23.894,o),
(154,192.921,o),
(154,342,cs),
(154,492.309,o),
(156,653.464,o),
(156,802,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 1 83 0 1 1 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
32 30 44 2 16
CALL[ ]	/* CallFunction */";
};
width = 242;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(124.333,-145,o),
(131,-139.333,o),
(131,-128,cs),
(128.187,23.894,o),
(129,192.921,o),
(129,342,cs),
(129,492.309,o),
(131,653.464,o),
(131,802,cs),
(131,818,o),
(126.667,840,o),
(112,840,cs),
(105.333,840,o),
(91,836.667,o),
(91,818,cs),
(91,654.085,o),
(92,502.194,o),
(92,348,cs),
(92,182.037,o),
(91,58.549,o),
(91,-131,cs),
(91,-139,o),
(100.333,-145,o),
(111,-145,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 1 83 0 1 1 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
46 43 2 17
CALL[ ]	/* CallFunction */";
};
width = 221;
}
);
note = bar;
unicode = 124;
},
{
glyphname = brokenbar;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(174,830.333,o),
(158.667,856,o),
(128,856,cs),
(113.763,856,o),
(83,838.885,o),
(83,823,cs),
(83,788.333,o),
(83.167,752.833,o),
(83.5,716.5,cs),
(83.833,680.167,o),
(84,644.667,o),
(84,610,cs),
(84,576,o),
(83.833,541,o),
(83.5,505,cs),
(83.167,469,o),
(83,434,o),
(83,400,cs),
(83,385.333,o),
(103,380,o),
(127,380,cs),
(153.667,380,o),
(174,386.667,o),
(174,404,cs),
(174,438,o),
(173.667,472,o),
(173,506,cs),
(172.333,540,o),
(172,574,o),
(172,608,cs),
(172,641.333,o),
(172.333,676,o),
(173,712,cs),
(173.667,748,o),
(174,783,o),
(174,817,cs)
);
},
{
closed = 1;
nodes = (
(172,296,o),
(168.667,300.667,o),
(162,306,cs),
(155.333,311.333,o),
(144,314,o),
(128,314,cs),
(115.86,314,o),
(83,310.708,o),
(83,295,cs),
(83,260.333,o),
(83.167,225.167,o),
(83.5,189.5,cs),
(83.833,153.833,o),
(84,118.667,o),
(84,84,cs),
(84,50,o),
(83.833,15.167,o),
(83.5,-20.5,cs),
(83.167,-56.167,o),
(83,-91,o),
(83,-125,cs),
(83,-151.667,o),
(103,-162,o),
(127,-162,cs),
(153.667,-162,o),
(172,-155,o),
(172,-123,cs),
(172,-89,o),
(171.667,-54.833,o),
(171,-20.5,cs),
(170.333,13.833,o),
(170,48,o),
(170,82,cs),
(170,115.333,o),
(170.333,150.167,o),
(171,186.5,cs),
(171.667,222.833,o),
(172,258,o),
(172,292,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 3 0 2 3 2 87 0 0 0 1 83 0 1 1 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 0 3 1 0 91 0 3 2 2 3 79 0 3 3 2 83 0 2 3 2 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
44 42 44 40 4 19
CALL[ ]	/* CallFunction */";
};
width = 255;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(156,827.667,o),
(143.667,850,o),
(121,850,cs),
(110.083,850,o),
(86,836.027,o),
(86,823,cs),
(86.667,788.333,o),
(87,752.833,o),
(87,716.5,cs),
(87,680.167,o),
(87,644.667,o),
(87,610,cs),
(87,576,o),
(86.833,541,o),
(86.5,505,cs),
(86.167,469,o),
(86,434,o),
(86,400,cs),
(86,385.333,o),
(101.333,380,o),
(120,380,cs),
(141.333,380,o),
(156,386.667,o),
(156,404,cs),
(156,438,o),
(155.667,472,o),
(155,506,cs),
(154.333,540,o),
(154,574,o),
(154,608,cs),
(154,641.333,o),
(154.333,676,o),
(155,712,cs),
(155.667,748,o),
(156,783,o),
(156,817,cs)
);
},
{
closed = 1;
nodes = (
(154,300,o),
(145,314,o),
(121,314,cs),
(110.333,314,o),
(86,309.667,o),
(86,295,cs),
(86,260.333,o),
(86.167,225.167,o),
(86.5,189.5,cs),
(86.833,153.833,o),
(87,118.667,o),
(87,84,cs),
(87,50,o),
(86.833,15.167,o),
(86.5,-20.5,cs),
(86.167,-56.167,o),
(86,-91,o),
(86,-125,cs),
(86,-147.667,o),
(101.333,-156,o),
(120,-156,cs),
(141.333,-156,o),
(154,-149.667,o),
(154,-123,cs),
(154,-89,o),
(153.667,-54.833,o),
(153,-20.5,cs),
(152.333,13.833,o),
(152,48,o),
(152,82,cs),
(152,115.333,o),
(152.333,150.167,o),
(153,186.5,cs),
(153.667,222.833,o),
(154,258,o),
(154,292,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 3 0 2 3 2 87 0 0 0 1 83 0 1 1 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 0 3 1 0 91 0 3 2 2 3 79 0 3 3 2 83 0 2 3 2 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
42 42 44 40 4 19
CALL[ ]	/* CallFunction */";
};
width = 241;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(122,380,o),
(131,386.667,o),
(131,404,cs),
(131,438,o),
(130.667,472,o),
(130,506,cs),
(129.333,540,o),
(129,574,o),
(129,608,cs),
(129,641.333,o),
(129.333,676,o),
(130,712,cs),
(130.667,748,o),
(131,783,o),
(131,817,cs),
(131,825,o),
(124.333,840,o),
(111,840,cs),
(104.333,840,o),
(91,831,o),
(91,823,cs),
(91.667,788.333,o),
(92,752.833,o),
(92,716.5,cs),
(92,680.167,o),
(92,644.667,o),
(92,610,cs),
(92,576,o),
(91.833,541,o),
(91.5,505,cs),
(91.167,469,o),
(91,434,o),
(91,400,cs),
(91,385.333,o),
(99.333,380,o),
(110,380,cs)
);
},
{
closed = 1;
nodes = (
(122,-146,o),
(129,-141.667,o),
(129,-123,cs),
(129,-89,o),
(128.667,-54.833,o),
(128,-20.5,cs),
(127.333,13.833,o),
(127,48,o),
(127,82,cs),
(127,115.333,o),
(127.333,150.167,o),
(128,186.5,cs),
(128.667,222.833,o),
(129,258,o),
(129,292,cs),
(129,300,o),
(124.333,314,o),
(111,314,cs),
(104.333,314,o),
(91,309.667,o),
(91,295,cs),
(91,260.333,o),
(91.167,225.167,o),
(91.5,189.5,cs),
(91.833,153.833,o),
(92,118.667,o),
(92,84,cs),
(92,50,o),
(91.833,15.167,o),
(91.5,-20.5,cs),
(91.167,-56.167,o),
(91,-91,o),
(91,-125,cs),
(91,-139.667,o),
(99.333,-146,o),
(110,-146,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 3 0 2 3 2 87 0 0 0 1 83 0 1 1 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 0 3 1 0 91 0 3 2 2 3 79 0 3 3 2 83 0 2 3 2 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
42 42 42 40 4 19
CALL[ ]	/* CallFunction */";
};
width = 221;
}
);
note = brokenbar;
unicode = 166;
},
{
glyphname = dagger;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(282,469,o),
(271,468.5,o),
(259,467.5,cs),
(247,466.5,o),
(233.333,466,o),
(218,466,c),
(218,562.958,o),
(220,690.304,o),
(220,792,cs),
(220,809.485,o),
(206.975,841,o),
(176,841,cs),
(146.667,841,o),
(129,826.667,o),
(129,808,cs),
(129,672.935,o),
(130,596.211,o),
(130,466,c),
(118,466,o),
(105.167,466.333,o),
(91.5,467,cs),
(77.833,467.667,o),
(68.333,468,o),
(63,468,cs),
(52.333,468,o),
(30,451.667,o),
(30,429,cs),
(30,402.333,o),
(53.667,389,o),
(63,389,cs),
(130,389,l),
(130,247.127,o),
(129,158.556,o),
(129,19,cs),
(129,11,o),
(149.667,-9,o),
(175,-9,cs),
(193.667,-9,o),
(219,-0.667,o),
(219,22,cs),
(219,164.105,o),
(218,247.895,o),
(218,390,c),
(284,390,ls),
(298.667,390,o),
(320,401.333,o),
(320,432,cs),
(320,457.333,o),
(297.333,469,o),
(292,469,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 5 5 20 67 3 1 1 1 0 83 6 4 7 3 0 0 23 67 0 2 2 24 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
6 4 7 3 0 3 1 1 2 0 1 91 0 5 5 20 67 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
6 4 7 3 0 3 1 1 2 0 1 91 0 5 5 2 83 0 2 2 24 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
1 0 52 51 42 40 33 29 25 23 16 14 7 5 0 53 1 53 8 15
CALL[ ]	/* CallFunction */";
};
width = 350;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(276.667,460,o),
(264.167,459.5,o),
(250.5,458.5,cs),
(236.833,457.5,o),
(221.333,457,o),
(204,457,c),
(204,554.004,o),
(206,697.911,o),
(206,802,cs),
(206,818,o),
(197.333,847,o),
(172,847,cs),
(153.333,847,o),
(136,836.667,o),
(136,818,cs),
(136,678.336,o),
(137,594.41,o),
(137,457,c),
(123,457,o),
(108.333,457.333,o),
(93,458,cs),
(77.667,458.667,o),
(66.333,459,o),
(59,459,cs),
(48.333,459,o),
(33,446.333,o),
(33,429,cs),
(33,410.333,o),
(49.667,398,o),
(59,398,cs),
(137,398,l),
(137,248.886,o),
(136,158.112,o),
(136,9,cs),
(136,1,o),
(152.333,-14,o),
(171,-14,cs),
(193.667,-14,o),
(206,-1.333,o),
(206,12,cs),
(203.472,143.473,o),
(204,264.998,o),
(204,399,c),
(280,399,ls),
(294.667,399,o),
(309,410.667,o),
(309,432,cs),
(309,450.667,o),
(293.333,460,o),
(288,460,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 5 5 20 67 3 1 1 1 0 83 6 4 7 3 0 0 23 67 0 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
6 4 7 3 0 3 1 1 2 0 1 91 0 5 5 20 67 0 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
6 4 7 3 0 3 1 1 2 0 1 91 0 5 5 2 83 0 2 2 21 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
1 0 50 49 42 40 33 29 25 23 16 14 7 5 0 51 1 51 8 15
CALL[ ]	/* CallFunction */";
};
width = 342;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(179.333,-5,o),
(186,0.667,o),
(186,12,cs),
(183.39,152.921,o),
(184,261.918,o),
(184,414,c),
(275,414,ls),
(289.667,414,o),
(294,425.333,o),
(294,432,cs),
(294,438.667,o),
(288.333,445,o),
(283,445,cs),
(269.667,445,o),
(254.833,444.5,o),
(238.5,443.5,cs),
(222.167,442.5,o),
(204,442,o),
(184,442,c),
(184,541.695,o),
(186,692.658,o),
(186,802,cs),
(186,818,o),
(181.667,840,o),
(167,840,cs),
(160.333,840,o),
(146,836.667,o),
(146,818,cs),
(146,671.687,o),
(147,583.614,o),
(147,442,c),
(130.333,442,o),
(112.833,442.333,o),
(94.5,443,cs),
(76.167,443.667,o),
(62.667,444,o),
(54,444,cs),
(43.333,444,o),
(38,435.667,o),
(38,429,cs),
(38,422.333,o),
(44.667,413,o),
(54,413,cs),
(147,413,l),
(147,258.929,o),
(146,160.719,o),
(146,9,cs),
(146,1,o),
(155.333,-5,o),
(166,-5,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 5 5 20 67 3 1 1 1 0 83 4 6 2 0 0 15 67 0 2 2 16 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
4 6 2 0 3 1 1 2 0 1 91 0 5 5 20 67 0 2 2 16 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
4 6 2 0 3 1 1 2 0 1 91 0 5 5 2 83 0 2 2 16 2 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
1 0 41 39 32 28 24 22 15 13 7 5 0 50 1 48 7 15
CALL[ ]	/* CallFunction */";
};
width = 331;
}
);
note = dagger;
unicode = 8224;
},
{
glyphname = daggerdbl;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(282,358,o),
(271,357.5,o),
(259,356.5,cs),
(247,355.5,o),
(233.333,355,o),
(218,355,c),
(218,446,l),
(230.667,446,o),
(242.833,446.167,o),
(254.5,446.5,cs),
(266.167,446.833,o),
(276,447,o),
(284,447,cs),
(306.667,447,o),
(320,474.333,o),
(320,489,cs),
(320,509,o),
(306.667,526,o),
(292,526,cs),
(282,526,o),
(271,525.5,o),
(259,524.5,cs),
(247,523.5,o),
(233.333,523,o),
(218,523,c),
(218,599.543,o),
(220,698.291,o),
(220,782,cs),
(220,799.125,o),
(207.765,836,o),
(176,836,cs),
(145.333,836,o),
(129,816.667,o),
(129,798,cs),
(129,683.733,o),
(130,628.009,o),
(130,523,c),
(118,523,o),
(105.167,523.333,o),
(91.5,524,cs),
(77.833,524.667,o),
(68.333,525,o),
(63,525,cs),
(44.333,525,o),
(30,504.667,o),
(30,486,cs),
(30,467.333,o),
(44.333,446,o),
(63,446,cs),
(130,446,l),
(130,355,l),
(118,355,o),
(105.167,355.333,o),
(91.5,356,cs),
(77.833,356.667,o),
(68.333,357,o),
(63,357,cs),
(43,357,o),
(30,336.667,o),
(30,318,cs),
(30,299.333,o),
(43,278,o),
(63,278,cs),
(130,278,l),
(130,175.456,o),
(129,126.468,o),
(129,19,cs),
(129,5.667,o),
(147.667,-11,o),
(173,-11,cs),
(193,-11,o),
(219,-2,o),
(219,22,cs),
(219,130.051,o),
(218,177.199,o),
(218,278,c),
(230.667,278,o),
(242.833,278.167,o),
(254.5,278.5,cs),
(266.167,278.833,o),
(276,279,o),
(284,279,cs),
(309.333,279,o),
(320,306.333,o),
(320,321,cs),
(320,343.667,o),
(304,358,o),
(292,358,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
9 8 2 6 10 1 5 0 6 5 91 11 4 12 3 0 3 1 1 2 0 1 91 0 7 7 20 67 0 2 2 24 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
9 8 2 6 10 1 5 0 6 5 91 11 4 12 3 0 3 1 1 2 0 1 91 0 7 7 2 83 0 2 2 24 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 78 77 76 72 68 66 65 64 55 53 46 42 38 36 35 31 27 25 18 16 9 5 0 79 1 79 13 15
CALL[ ]	/* CallFunction */";
};
width = 349;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(276.667,349,o),
(264.167,348.5,o),
(250.5,347.5,cs),
(236.833,346.5,o),
(221.333,346,o),
(204,346,c),
(204,455,l),
(218.667,455,o),
(232.667,455.167,o),
(246,455.5,cs),
(259.333,455.833,o),
(270.667,456,o),
(280,456,cs),
(294.667,456,o),
(309,478.333,o),
(309,489,cs),
(309,503.667,o),
(293.333,517,o),
(288,517,cs),
(276.667,517,o),
(264.167,516.5,o),
(250.5,515.5,cs),
(236.833,514.5,o),
(221.333,514,o),
(204,514,c),
(204,562.667,o),
(204.333,609.5,o),
(205,654.5,cs),
(205.667,699.5,o),
(206,748.667,o),
(206,802,cs),
(206,817.549,o),
(195.27,850,o),
(172,850,cs),
(152,850,o),
(136,836.667,o),
(136,818,cs),
(136.667,762,o),
(137,710,o),
(137,662,cs),
(137,614,o),
(137,564.667,o),
(137,514,c),
(123,514,o),
(108.333,514.333,o),
(93,515,cs),
(77.667,515.667,o),
(66.333,516,o),
(59,516,cs),
(48.333,516,o),
(33,500.667,o),
(33,486,cs),
(33,471.333,o),
(49.667,455,o),
(59,455,cs),
(137,455,l),
(137,346,l),
(123,346,o),
(108.333,346.333,o),
(93,347,cs),
(77.667,347.667,o),
(66.333,348,o),
(59,348,cs),
(48.333,348,o),
(33,332.667,o),
(33,318,cs),
(33,303.333,o),
(49.667,287,o),
(59,287,cs),
(137,287,l),
(136.333,239,o),
(136,191.667,o),
(136,145,cs),
(136,98.333,o),
(136,49.667,o),
(136,-1,cs),
(136,-9,o),
(152.333,-25,o),
(171,-25,cs),
(193.667,-25,o),
(206,-11.333,o),
(206,2,cs),
(204.667,52,o),
(204,100.167,o),
(204,146.5,cs),
(204,192.833,o),
(204,239.667,o),
(204,287,c),
(218.667,287,o),
(232.667,287.167,o),
(246,287.5,cs),
(259.333,287.833,o),
(270.667,288,o),
(280,288,cs),
(294.667,288,o),
(309,310.333,o),
(309,321,cs),
(309,335.667,o),
(293.333,349,o),
(288,349,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
9 8 2 6 10 1 5 0 6 5 91 11 4 12 3 0 3 1 1 2 0 1 91 0 7 7 20 67 0 2 2 21 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
9 8 2 6 10 1 5 0 6 5 91 11 4 12 3 0 3 1 1 2 0 1 91 0 7 7 2 83 0 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 7 6 2 7 79 9 8 2 6 10 1 5 0 6 5 91 11 4 12 3 0 3 1 1 2 0 1 91 0 7 7 2 83 0 2 7 2 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
1 0 70 69 68 64 60 58 57 56 49 47 42 38 34 32 31 27 23 21 16 14 9 5 0 71 1 71 13 15
CALL[ ]	/* CallFunction */";
};
width = 342;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(179.333,-15,o),
(186,-9.333,o),
(186,2,cs),
(184.667,54.667,o),
(184,105.333,o),
(184,154,cs),
(184,202.667,o),
(184,252,o),
(184,302,c),
(201.333,302,o),
(218,302.167,o),
(234,302.5,cs),
(250,302.833,o),
(263.667,303,o),
(275,303,cs),
(289.667,303,o),
(294,314.333,o),
(294,321,cs),
(294,327.667,o),
(288.333,334,o),
(283,334,cs),
(269.667,334,o),
(254.833,333.5,o),
(238.5,332.5,cs),
(222.167,331.5,o),
(204,331,o),
(184,331,c),
(184,470,l),
(201.333,470,o),
(218,470.167,o),
(234,470.5,cs),
(250,470.833,o),
(263.667,471,o),
(275,471,cs),
(289.667,471,o),
(294,482.333,o),
(294,489,cs),
(294,495.667,o),
(288.333,502,o),
(283,502,cs),
(269.667,502,o),
(254.833,501.5,o),
(238.5,500.5,cs),
(222.167,499.5,o),
(204,499,o),
(184,499,c),
(184,579.508,o),
(186,712.11,o),
(186,802,cs),
(186,818,o),
(181.667,840,o),
(167,840,cs),
(160.333,840,o),
(146,836.667,o),
(146,818,cs),
(146.667,759.333,o),
(147,704.833,o),
(147,654.5,cs),
(147,604.167,o),
(147,552.333,o),
(147,499,c),
(130.333,499,o),
(112.833,499.333,o),
(94.5,500,cs),
(76.167,500.667,o),
(62.667,501,o),
(54,501,cs),
(43.333,501,o),
(38,492.667,o),
(38,486,cs),
(38,479.333,o),
(44.667,470,o),
(54,470,cs),
(147,470,l),
(147,331,l),
(130.333,331,o),
(112.833,331.333,o),
(94.5,332,cs),
(76.167,332.667,o),
(62.667,333,o),
(54,333,cs),
(43.333,333,o),
(38,324.667,o),
(38,318,cs),
(38,311.333,o),
(44.667,302,o),
(54,302,cs),
(147,302,l),
(146.333,251.333,o),
(146,201.5,o),
(146,152.5,cs),
(146,103.5,o),
(146,52.333,o),
(146,-1,cs),
(146,-9,o),
(155.333,-15,o),
(166,-15,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
8 1 6 9 1 5 0 6 5 91 4 10 2 0 3 1 1 2 0 1 91 0 7 7 20 67 0 2 2 21 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
8 1 6 9 1 5 0 6 5 91 4 10 2 0 3 1 1 2 0 1 91 0 7 7 2 83 0 2 2 21 2 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
1 0 67 63 59 55 48 46 41 37 33 31 30 26 22 20 15 13 9 5 0 70 1 68 11 15
CALL[ ]	/* CallFunction */";
};
width = 332;
}
);
note = daggerdbl;
unicode = 8225;
},
{
glyphname = cent;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(304.333,17,o),
(317,39,o),
(317,55,cs),
(317,64.955,o),
(317,78.181,o),
(317,89.5,cs),
(317,104.082,o),
(318,125.896,o),
(318,155,c),
(368.667,164.333,o),
(406.667,190,o),
(464,250,cs),
(470.667,256.667,o),
(472,266.333,o),
(472,277,cs),
(472,295.667,o),
(460,310,o),
(440,310,cs),
(425.333,310,o),
(415.667,305.667,o),
(397,287,cs),
(366.333,257.667,o),
(338.333,241.667,o),
(309,231,c),
(309,564,l),
(321.667,562.667,o),
(330.167,560.5,o),
(334.5,557.5,cs),
(338.833,554.5,o),
(341,550,o),
(341,544,cs),
(341,526.835,o),
(318,525.048,o),
(318,495,cs),
(318,468.974,o),
(330.846,441,o),
(377,441,cs),
(442.103,441,o),
(464,491.986,o),
(464,525,cs),
(464,581.507,o),
(401.749,627.567,o),
(316,639,c),
(316.667,659.667,o),
(317,680.833,o),
(317,702.5,cs),
(317,724.167,o),
(317,746.667,o),
(317,770,cs),
(317,790.895,o),
(304.415,824,o),
(272,824,cs),
(251.211,824,o),
(224,812.205,o),
(224,786,cs),
(224,758.667,o),
(224.167,732.833,o),
(224.5,708.5,cs),
(224.833,684.167,o),
(225,660.333,o),
(225,637,c),
(104.693,615.612,o),
(31,512.113,o),
(31,386,cs),
(31,267.212,o),
(86.905,172.817,o),
(224,154,c),
(224,54,ls),
(224,35.333,o),
(243,17,o),
(271,17,cs)
);
},
{
closed = 1;
nodes = (
(133,467,o),
(157,529.333,o),
(225,556,c),
(225,446.689,o),
(225,368.189,o),
(225,320.5,cs),
(225,284.576,o),
(224,255.433,o),
(224,233,c),
(152,251.667,o),
(133,307,o),
(133,383,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
85 53 30 14 4 2 1 80 69 54 4 4 0 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 1 1 12 67 4 1 0 0 13 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 1 3 1 2 3 104 0 3 0 1 3 0 102 4 1 0 0 1 83 0 1 1 12 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 2 1 3 1 2 3 104 0 3 0 1 3 0 102 4 1 0 0 1 83 0 1 1 14 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
1 0 61 59 41 39 23 21 0 76 1 76 5 15
CALL[ ]	/* CallFunction */";
};
width = 504;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(374.333,254.333,o),
(340.667,227.333,o),
(298,218,c),
(298,327.014,o),
(298,409.514,o),
(298,465.5,cs),
(298,509.753,o),
(299,549.237,o),
(299,584,c),
(319.667,582.667,o),
(334,578.667,o),
(342,572,cs),
(350,565.333,o),
(354,558.667,o),
(354,552,cs),
(354,532.911,o),
(326,532.893,o),
(326,502,cs),
(326,479.333,o),
(338.667,455,o),
(376,455,cs),
(423.644,455,o),
(445,494.323,o),
(445,528,cs),
(445,588.103,o),
(379.522,632.948,o),
(299,641,c),
(299.667,661,o),
(300,681.5,o),
(300,702.5,cs),
(300,723.5,o),
(300,745.667,o),
(300,769,cs),
(300,789,o),
(291.333,817,o),
(266,817,cs),
(255.381,817,o),
(230,810.869,o),
(230,785,cs),
(230,758.333,o),
(230.167,733.167,o),
(230.5,709.5,cs),
(230.833,685.833,o),
(231,662.333,o),
(231,639,c),
(111.723,620.446,o),
(34,512.991,o),
(34,387,cs),
(34,265.996,o),
(103.523,166.54,o),
(230,156,c),
(230,56,ls),
(230,41.333,o),
(243.667,22,o),
(265,22,cs),
(290.333,22,o),
(300,37.667,o),
(300,59,cs),
(300,158,l),
(362.667,168.667,o),
(408.333,203.667,o),
(451,257,c),
(457.667,263.667,o),
(460,274,o),
(460,282,cs),
(460,296.667,o),
(450.667,307,o),
(436,307,cs),
(425.333,307,o),
(418.333,303.667,o),
(405,289,cs)
);
},
{
closed = 1;
nodes = (
(148.667,231.667,o),
(115,294,o),
(115,386,cs),
(115,483.333,o),
(153.667,555.333,o),
(231,578,c),
(231,455.965,o),
(231,368.132,o),
(231,314.5,cs),
(231,277.423,o),
(230,244.951,o),
(230,217,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
44 30 2 4 2 78 1 3 4 73 70 20 12 4 1 0 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 2 3 2 4 3 104 0 3 0 2 3 0 102 0 0 1 2 0 1 102 0 2 2 14 67 0 1 1 13 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 4 2 3 2 4 3 104 0 3 0 2 3 0 102 0 0 1 2 0 1 102 0 1 1 2 83 0 2 2 14 1 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
65 64 55 53 39 37 43 34 5 17
CALL[ ]	/* CallFunction */";
};
width = 492;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(270.333,31,o),
(276,38.333,o),
(276,65,cs),
(276,85,o),
(276,102.833,o),
(276,118.5,cs),
(276,134.167,o),
(275.667,149,o),
(275,163,c),
(317.667,171,o),
(359.333,193.333,o),
(394,224,cs),
(408,235.333,o),
(421,250,o),
(433,268,cs),
(439.667,278,o),
(443,285.667,o),
(443,291,cs),
(443,298.333,o),
(439,302,o),
(431,302,cs),
(425.667,302,o),
(421,299,o),
(417,293,cs),
(401,271.667,o),
(389.333,257.333,o),
(382,250,cs),
(348.667,215.333,o),
(316.333,196.333,o),
(275,191,c),
(275,264.439,o),
(272,297.882,o),
(272,382,cs),
(272,426,o),
(272.333,466.667,o),
(273,504,cs),
(273.667,541.333,o),
(274.333,579,o),
(275,617,c),
(324.172,614.412,o),
(372,593.301,o),
(372,566,cs),
(372,543.874,o),
(338,545.275,o),
(338,514,cs),
(338,492.667,o),
(352.333,478,o),
(375,478,cs),
(400.333,478,o),
(418,501,o),
(418,533,cs),
(418,595.519,o),
(355.844,641.305,o),
(275,644,c),
(275.667,663.333,o),
(276,683.167,o),
(276,703.5,cs),
(276,723.833,o),
(276,745.333,o),
(276,768,cs),
(276,784,o),
(272.667,806,o),
(258,806,cs),
(251.333,806,o),
(238,802.667,o),
(238,784,cs),
(238,758,o),
(238.167,733.333,o),
(238.5,710,cs),
(238.833,686.667,o),
(239,664,o),
(239,642,c),
(122.388,626.098,o),
(39,518.451,o),
(39,389,cs),
(39,261.826,o),
(123.813,162.656,o),
(238,160,c),
(238,59,ls),
(238,40.333,o),
(244.333,31,o),
(257,31,cs)
);
},
{
closed = 1;
nodes = (
(144.667,196.667,o),
(90,273.667,o),
(90,391,cs),
(90,507.508,o),
(147.151,597.791,o),
(239,614,c),
(239,388,ls),
(239,327.947,o),
(238,244.742,o),
(238,190,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
67 1 2 0 85 1 1 2 79 48 32 3 5 3 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 2 3 2 1 3 104 0 3 5 2 3 5 102 0 5 4 2 5 4 102 0 0 0 2 1 0 2 91 0 4 4 6 83 0 6 6 14 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 1 2 3 2 1 3 104 0 3 5 2 3 5 102 0 5 4 2 5 4 102 0 6 0 4 6 79 0 0 0 2 1 0 2 91 0 6 6 4 83 0 4 6 4 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
46 18 45 46 27 38 19 7 22
CALL[ ]	/* CallFunction */";
};
width = 475;
}
);
note = cent;
unicode = 162;
},
{
glyphname = currency;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(315,197,o),
(366.333,209,o),
(409,241,c),
(419.272,212.752,o),
(459.372,173,o),
(484,173,cs),
(502.667,173,o),
(518,193.333,o),
(518,212,cs),
(518,219.767,o),
(495.429,244.571,o),
(452,288,c),
(466.667,313.333,o),
(476,344.333,o),
(476,383,cs),
(476,415.667,o),
(470.333,445,o),
(459,471,c),
(498.221,510.221,o),
(518,535.921,o),
(518,541,cs),
(518,559.667,o),
(510.667,580,o),
(484,580,cs),
(466.168,580,o),
(430.535,543.802,o),
(416,522,c),
(382.667,548,o),
(341.667,561,o),
(293,561,cs),
(242.333,561,o),
(199,550,o),
(163,526,c),
(161.976,529.072,o),
(124.779,580,o),
(97,580,cs),
(74.333,580,o),
(64,561.333,o),
(64,544,cs),
(64,530.1,o),
(103.971,489.029,o),
(118,475,c),
(104,449.667,o),
(97,418,o),
(97,380,cs),
(97,337.333,o),
(105.667,303.333,o),
(119,278,c),
(101.326,262.29,o),
(64,223.848,o),
(64,210,cs),
(64,186,o),
(71.667,173,o),
(97,173,cs),
(122.124,173,o),
(155.377,216.295,o),
(163,229,c),
(197.667,206.333,o),
(237.667,197,o),
(279,197,cs)
);
},
{
closed = 1;
nodes = (
(249.339,275,o),
(190,305.289,o),
(190,379,cs),
(190,446.062,o),
(238.652,484,o),
(279,484,cs),
(347,484,o),
(383,444.667,o),
(383,382,cs),
(383,305.414,o),
(330.721,275,o),
(282,275,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
39 34 2 7 3 57 52 21 16 4 6 7 70 3 2 0 6 3 66 4 1 2 3 1 2 79 0 3 0 7 6 3 7 91 9 1 6 8 1 0 1 6 0 91 4 1 2 2 1 83 5 1 1 2 1 71 74 73 1 0 82 80 73 90 74 90 66 64 45 43 38 36 30 28 9 7 0 72 1 72 10 15
CALL[ ]	/* CallFunction */";
};
width = 583;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(234.333,561,o),
(193,548,o),
(159,522,c),
(151.667,530,o),
(146.333,535.667,o),
(143,539,cs),
(139.667,542.333,o),
(137.333,545,o),
(136,547,cs),
(117.333,569.667,o),
(106.333,579,o),
(93,579,cs),
(74.333,579,o),
(65,563.667,o),
(65,549,cs),
(65,533.873,o),
(99.738,501.262,o),
(122,479,c),
(104.667,451.667,o),
(96,418.333,o),
(96,379,cs),
(96,336.333,o),
(106,300.667,o),
(122,274,c),
(101.584,255.853,o),
(65,216.871,o),
(65,205,cs),
(65,190.333,o),
(74.333,175,o),
(93,175,cs),
(106.333,175,o),
(117.333,184.333,o),
(136,207,cs),
(137.333,209,o),
(139.667,211.667,o),
(143,215,cs),
(146.333,218.333,o),
(151.667,224,o),
(159,232,c),
(191,208,o),
(230,197,o),
(270,197,cs),
(304.667,197,o),
(353.333,210,o),
(392,242,c),
(402.667,230,o),
(409.833,221.667,o),
(413.5,217,cs),
(417.167,212.333,o),
(420.667,209,o),
(424,207,c),
(441.333,184.333,o),
(453.667,175,o),
(467,175,cs),
(481.667,175,o),
(495,190.333,o),
(495,205,cs),
(495,219.246,o),
(448.3,262.7,o),
(428,283,c),
(445.333,309.667,o),
(456,341.667,o),
(456,383,cs),
(456,417.667,o),
(448.667,448.667,o),
(434,476,c),
(453.949,493.732,o),
(495,535.762,o),
(495,549,cs),
(495,563.667,o),
(485.667,579,o),
(467,579,cs),
(453.667,579,o),
(442.667,569.667,o),
(424,547,cs),
(422.667,545,o),
(420.167,542.167,o),
(416.5,538.5,cs),
(412.833,534.833,o),
(407,528.667,o),
(399,520,c),
(367.667,547.333,o),
(329,561,o),
(283,561,cs)
);
},
{
closed = 1;
nodes = (
(341,502,o),
(383,455.333,o),
(383,382,cs),
(383,292.829,o),
(320.368,257,o),
(272,257,cs),
(226.203,257,o),
(169,296.952,o),
(169,379,cs),
(169,462.975,o),
(226.157,502,o),
(273,502,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
74 2 2 6 0 60 55 21 16 4 7 6 41 35 2 3 7 3 66 5 1 1 0 2 1 79 8 1 0 9 1 6 7 0 6 91 0 7 0 3 2 7 3 91 5 1 1 1 2 83 4 1 2 1 2 71 77 76 1 0 87 85 76 93 77 93 69 67 48 46 39 37 30 28 9 7 0 75 1 75 10 15
CALL[ ]	/* CallFunction */";
};
width = 560;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(93,178,o),
(115,197.667,o),
(153,237,c),
(181.667,210.333,o),
(216.333,197,o),
(257,197,cs),
(291.667,197,o),
(333.333,212,o),
(368,244,c),
(413.542,198.458,o),
(430.003,178,o),
(443,178,cs),
(449.667,178,o),
(462,182.333,o),
(462,193,cs),
(462,211.941,o),
(419.308,248.692,o),
(394,274,c),
(414,302,o),
(427,339,o),
(427,383,cs),
(427,421,o),
(417.667,455,o),
(399,485,c),
(419.834,505.834,o),
(462,540.952,o),
(462,562,cs),
(462,572.667,o),
(449.667,577,o),
(443,577,cs),
(431.095,577,o),
(412.159,555.928,o),
(375,517,c),
(348.333,543.667,o),
(311.667,561,o),
(269,561,cs),
(226.333,561,o),
(184.667,544,o),
(154,516,c),
(134.667,535.333,o),
(119.5,550.333,o),
(108.5,561,cs),
(97.5,571.667,o),
(90.333,577,o),
(87,577,cs),
(76.333,577,o),
(66,568.667,o),
(66,558,cs),
(66,552.667,o),
(72,543.5,o),
(84,530.5,cs),
(96,517.5,o),
(110.667,502.333,o),
(128,485,c),
(106.667,455.667,o),
(95,419.333,o),
(95,378,cs),
(95,334.667,o),
(105.333,298,o),
(126,268,c),
(109.333,251.333,o),
(95.167,236.5,o),
(83.5,223.5,cs),
(71.833,210.5,o),
(66,201.667,o),
(66,197,cs),
(66,186.333,o),
(76.333,178,o),
(87,178,cs)
);
},
{
closed = 1;
nodes = (
(198.22,227,o),
(139,274.097,o),
(139,379,cs),
(139,478.36,o),
(200.954,532,o),
(265,532,cs),
(333,532,o),
(383,474,o),
(383,382,cs),
(383,275.885,o),
(310.306,227,o),
(258,227,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
62 49 43 34 29 21 16 3 8 7 6 1 66 5 1 3 4 0 3 79 0 4 8 1 6 7 4 6 91 0 7 0 1 0 7 1 91 5 1 3 3 0 83 2 1 0 3 0 71 65 64 75 73 64 81 65 81 38 36 47 34 38 42 9 21
CALL[ ]	/* CallFunction */";
};
width = 527;
}
);
note = currency;
unicode = 164;
},
{
glyphname = dollar;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(334.667,-83,o),
(350,-75.333,o),
(350,-50,cs),
(350,-44.667,o),
(349.833,-39.333,o),
(349.5,-34,cs),
(349.167,-28.667,o),
(349,-23.333,o),
(349,-18,c),
(451.073,-9.942,o),
(566,33.884,o),
(566,140,cs),
(566,246.986,o),
(448.292,312.772,o),
(348,355,c),
(348,446.696,o),
(350,551.785,o),
(350,708,c),
(407.579,689.679,o),
(491.162,605.965,o),
(502,503,c),
(502,473.667,o),
(514.333,444,o),
(545,444,cs),
(574.333,444,o),
(593,459.333,o),
(593,478,cs),
(593,499.333,o),
(592.667,520.333,o),
(592,541,cs),
(591.333,561.667,o),
(591,582.667,o),
(591,604,cs),
(591,628,o),
(591.667,652.5,o),
(593,677.5,cs),
(594.333,702.5,o),
(595,726.667,o),
(595,750,cs),
(595,756.935,o),
(596.07,789,o),
(550,789,cs),
(511.333,789,o),
(505,764,o),
(505,748,cs),
(505,742.667,o),
(505.667,730.833,o),
(507,712.5,cs),
(508.333,694.167,o),
(510.333,664.333,o),
(513,623,c),
(478.333,721.667,o),
(424.667,772.667,o),
(350,786,c),
(350,804,ls),
(350,830.224,o),
(336.72,858,o),
(305,858,cs),
(283.531,858,o),
(259,846.525,o),
(259,820,cs),
(259,786,l),
(157.596,769.989,o),
(50,704.644,o),
(50,569,cs),
(50,408.434,o),
(123.009,367.838,o),
(260,298,c),
(260,255.333,o),
(259.833,214.833,o),
(259.5,176.5,cs),
(259.167,138.167,o),
(259,99,o),
(259,59,c),
(178.487,72.419,o),
(134,122.33,o),
(134,175,cs),
(134,208.757,o),
(128.795,250,o),
(87,250,cs),
(48.982,250,o),
(42,220.66,o),
(42,200,cs),
(42,167.997,o),
(44,135.003,o),
(44,103,cs),
(44,71.5,o),
(40,20.337,o),
(40,2,cs),
(40,-10,o),
(56.667,-37,o),
(86,-37,cs),
(118,-37,o),
(130,-11,o),
(130,5,cs),
(128,41,ls),
(127.333,51.667,o),
(127,63.667,o),
(127,77,c),
(152.333,14.333,o),
(203,-8.667,o),
(259,-18,c),
(259,-53,ls),
(259,-70.333,o),
(280,-83,o),
(304,-83,cs)
);
},
{
closed = 1;
nodes = (
(142,643.234,o),
(196.885,686.095,o),
(259,705,c),
(259,559.429,o),
(260,454.429,o),
(260,390,c),
(161.737,429.837,o),
(142,475.791,o),
(142,560,cs)
);
},
{
closed = 1;
nodes = (
(347.667,106,o),
(348,145,o),
(348,177,cs),
(348,209,o),
(348,237,o),
(348,261,c),
(409.543,231.46,o),
(474,193.372,o),
(474,140,cs),
(474,102.667,o),
(420.333,70.667,o),
(347,60,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
128 97 92 69 66 54 6 5 4 141 123 102 44 4 2 5 133 112 41 7 4 5 1 2 3 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 4 0 5 2 4 5 91 0 2 2 1 83 0 1 1 21 67 6 1 0 0 3 83 0 3 3 20 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 4 0 5 2 4 5 91 0 2 0 1 0 2 1 91 6 1 0 0 3 83 0 3 3 20 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 3 4 0 3 79 0 4 0 5 2 4 5 91 0 2 0 1 0 2 1 91 0 3 3 0 83 6 1 0 3 0 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
1 0 90 88 76 74 61 59 32 30 14 12 0 117 1 117 7 15
CALL[ ]	/* CallFunction */";
};
width = 632;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(342,823,o),
(333.333,851,o),
(308,851,cs),
(297.381,851,o),
(272,844.869,o),
(272,819,cs),
(272,786,l),
(161.794,772.56,o),
(53,704.652,o),
(53,571,cs),
(53,400.612,o),
(154.185,352.163,o),
(242,311,cs),
(273,296,l),
(273,252,o),
(272.833,209.333,o),
(272.5,168,cs),
(272.167,126.667,o),
(272,84.667,o),
(272,42,c),
(168.944,52.848,o),
(116,117.011,o),
(116,177,cs),
(116,207.841,o),
(112.133,246,o),
(79,246,cs),
(49.667,246,o),
(45,220.667,o),
(45,202,cs),
(45,169.997,o),
(47,137.003,o),
(47,105,cs),
(47,73.5,o),
(43,22.337,o),
(43,4,cs),
(43,-5.333,o),
(55.333,-29,o),
(78,-29,cs),
(102,-29,o),
(112,-10,o),
(112,6,cs),
(110,44,ls),
(109.333,55.333,o),
(109,68,o),
(109,82,c),
(139.667,16.667,o),
(206.667,-10.333,o),
(272,-17,c),
(272,-52,ls),
(272,-66.667,o),
(288.333,-76,o),
(307,-76,cs),
(329.667,-76,o),
(342,-70.333,o),
(342,-49,cs),
(342,-43.667,o),
(341.833,-38.333,o),
(341.5,-33,cs),
(341.167,-27.667,o),
(341,-22.333,o),
(341,-17,c),
(436.608,-9.033,o),
(555,33.969,o),
(555,142,cs),
(555,239.974,o),
(436.218,301.909,o),
(340,342,c),
(340,462,o),
(340.667,599.333,o),
(342,726,c),
(418.098,709.693,o),
(497.039,622.114,o),
(505,508,c),
(505,478.667,o),
(512.333,449,o),
(539,449,cs),
(563,449,o),
(575,464.333,o),
(575,483,cs),
(575,504.333,o),
(574.667,524.333,o),
(574,543,cs),
(573.333,561.667,o),
(573,581.667,o),
(573,603,cs),
(573,627,o),
(573.667,651.5,o),
(575,676.5,cs),
(576.333,701.5,o),
(577,725.667,o),
(577,749,cs),
(577,756.789,o),
(569.917,782,o),
(542,782,cs),
(514,782,o),
(508,763,o),
(508,747,cs),
(508,746.333,o),
(508.667,735.833,o),
(510,715.5,cs),
(511.333,695.167,o),
(513.333,664,o),
(516,622,c),
(480,724.667,o),
(422,775.333,o),
(342,786,c),
(342,803,l),
(342,803,l)
);
},
{
closed = 1;
nodes = (
(124,654,o),
(186.667,709.333,o),
(272,724,c),
(272.667,664.667,o),
(273,604.833,o),
(273,544.5,cs),
(273,484.167,o),
(273,426,o),
(273,370,c),
(266.333,372.667,o),
(259.333,375.333,o),
(254,378,cs),
(190.164,407.258,o),
(124,439.447,o),
(124,562,cs)
);
},
{
closed = 1;
nodes = (
(484,89.179,o),
(415.593,50.559,o),
(340,43,c),
(340,268,l),
(412.892,236.76,o),
(484,197.198,o),
(484,142,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
103 0 2 0 5 124 31 3 3 1 0 132 121 92 34 4 4 1 133 89 57 54 44 5 3 4 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 0 0 1 4 0 1 91 0 4 4 3 83 0 3 3 21 67 0 2 2 5 83 0 5 5 20 2 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 1 4 0 1 91 0 4 0 3 2 4 3 91 0 2 2 5 83 0 5 5 20 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 0 2 5 79 0 0 0 1 4 0 1 91 0 4 0 3 2 4 3 91 0 5 5 2 83 0 2 5 2 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
110 108 80 78 64 62 51 49 44 40 6 17
CALL[ ]	/* CallFunction */";
};
width = 619;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(324.333,-65,o),
(331,-59.333,o),
(331,-48,cs),
(331,-42.667,o),
(330.833,-37.167,o),
(330.5,-31.5,cs),
(330.167,-25.833,o),
(330,-20.333,o),
(330,-15,c),
(417.465,-9.699,o),
(539,35.776,o),
(539,145,cs),
(539,231.51,o),
(419.395,283.779,o),
(329,321,c),
(329,411.558,o),
(329,491.892,o),
(329,562,cs),
(329,631.333,o),
(329.667,693.333,o),
(331,756,c),
(429.997,748.184,o),
(509,641.839,o),
(509,517,cs),
(509,487.667,o),
(511.333,458,o),
(530,458,cs),
(547.333,458,o),
(549,473.333,o),
(549,492,cs),
(549,513.333,o),
(548.667,531.667,o),
(548,547,cs),
(547.333,562.333,o),
(547,580.667,o),
(547,602,cs),
(547,626,o),
(547.667,650.5,o),
(549,675.5,cs),
(550.333,700.5,o),
(551,724.667,o),
(551,748,cs),
(551,757.333,o),
(544.333,771,o),
(531,771,cs),
(518.333,771,o),
(512,762.667,o),
(512,746,cs),
(512,745.333,o),
(512.667,734.833,o),
(514,714.5,cs),
(515.333,694.167,o),
(517.333,663,o),
(520,621,c),
(481.333,729,o),
(419,780.667,o),
(331,786,c),
(331,802,ls),
(331,818,o),
(326.667,840,o),
(312,840,cs),
(305.333,840,o),
(291,836.667,o),
(291,818,cs),
(291,786,l),
(170.107,778.116,o),
(57,705.12,o),
(57,574,cs),
(57,384.185,o),
(195.297,329.264,o),
(292,293,c),
(292,246.333,o),
(291.833,199.833,o),
(291.5,153.5,cs),
(291.167,107.167,o),
(291,60.667,o),
(291,14,c),
(159.524,22.05,o),
(90,100.235,o),
(90,180,cs),
(90,209.333,o),
(86.667,239,o),
(68,239,cs),
(50.667,239,o),
(49,223.667,o),
(49,205,cs),
(49,172.997,o),
(51,140.003,o),
(51,108,cs),
(51,76.5,o),
(47,25.337,o),
(47,7,cs),
(47,-2.333,o),
(53.667,-16,o),
(67,-16,cs),
(79.667,-16,o),
(86,-7.667,o),
(86,9,c),
(85.333,13,o),
(85,17.333,o),
(85,22,cs),
(85,26,o),
(84.833,30.333,o),
(84.5,35,cs),
(84.167,39.667,o),
(84,44.667,o),
(84,50,cs),
(83.333,62,o),
(83,75.667,o),
(83,91,c),
(118.945,21.678,o),
(211.888,-12.363,o),
(291,-15,c),
(291,-51,ls),
(291,-59,o),
(300.333,-65,o),
(311,-65,cs)
);
},
{
closed = 1;
nodes = (
(329.333,59,o),
(329,103,o),
(329,147,cs),
(329,191,o),
(329,235,o),
(329,279,c),
(411.722,244.31,o),
(498,206.896,o),
(498,145,cs),
(498,69.241,o),
(417.648,20.312,o),
(330,15,c)
);
},
{
closed = 1;
nodes = (
(201.869,371.506,o),
(98,421.202,o),
(98,565,cs),
(98,669.674,o),
(172.701,744.485,o),
(291,755,c),
(291,635.288,o),
(292,475.103,o),
(292,336,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
116 82 57 3 7 6 126 111 87 36 4 1 7 0 1 2 1 7 1 0 2 4 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
5 1 3 4 6 4 3 6 104 0 6 0 7 1 6 7 91 0 1 1 0 83 10 8 2 0 0 21 67 11 1 2 2 0 84 10 8 2 0 0 21 67 0 9 9 4 83 0 4 4 20 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
5 1 3 4 6 4 3 6 104 0 6 0 7 1 6 7 91 0 4 0 9 4 9 87 0 1 1 0 83 10 8 2 0 0 21 67 11 1 2 2 0 84 10 8 2 0 0 21 0 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
130 129 107 106 103 101 97 96 42 38 19 35 28 22 46 40 12 23
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = dollar;
unicode = 36;
},
{
glyphname = euro;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(645,184.718,o),
(641.632,211,o),
(607,211,cs),
(564.424,211,o),
(570.986,172.963,o),
(562,149,cs),
(538.801,81.981,o),
(475.994,66,o),
(395,66,cs),
(305.573,66,o),
(231.3,141.261,o),
(218,245,c),
(238.667,245,o),
(259.167,245.167,o),
(279.5,245.5,cs),
(299.833,245.833,o),
(315.333,246,o),
(326,246,cs),
(352.52,246,o),
(362,269.397,o),
(362,289,cs),
(362,307.667,o),
(348.667,327,o),
(334,327,cs),
(322.667,327,o),
(308.167,326.5,o),
(290.5,325.5,cs),
(272.833,324.5,o),
(255,324,o),
(237,324,cs),
(214,324,l),
(210,349.333,o),
(209,376,o),
(209,404,cs),
(209,411,l),
(231,411,o),
(253.167,411.167,o),
(275.5,411.5,cs),
(297.833,411.833,o),
(314.667,412,o),
(326,412,cs),
(352.667,412,o),
(362,437.667,o),
(362,455,cs),
(362,473.667,o),
(348.667,493,o),
(334,493,cs),
(322.667,493,o),
(308.167,492.5,o),
(290.5,491.5,cs),
(272.833,490.5,o),
(255,490,o),
(237,490,cs),
(211,490,l),
(211,592.296,o),
(262.322,759,o),
(414,759,cs),
(522.794,759,o),
(557,700.242,o),
(557,620,cs),
(557,577.416,o),
(562.736,545,o),
(607,545,cs),
(635.137,545,o),
(648,575.341,o),
(648,595,cs),
(648,779.478,o),
(535.058,838,o),
(411,838,cs),
(324.333,838,o),
(258,805.833,o),
(210,746.5,cs),
(162,687.167,o),
(131,600.333,o),
(115,491,c),
(104.333,491,o),
(94.5,491.167,o),
(85.5,491.5,cs),
(76.5,491.833,o),
(69.667,492,o),
(65,492,cs),
(42.333,492,o),
(32,470.667,o),
(32,452,cs),
(32,434.667,o),
(46.333,411,o),
(65,411,cs),
(113,411,l),
(113,405,ls),
(113,374.333,o),
(115.333,349,o),
(118,325,c),
(106.667,325,o),
(96.333,325.167,o),
(87,325.5,cs),
(77.667,325.833,o),
(70.333,326,o),
(65,326,cs),
(42.333,326,o),
(32,304.667,o),
(32,286,cs),
(32,268.667,o),
(46.333,245,o),
(65,245,cs),
(126,245,l),
(151.333,82.333,o),
(252.667,-14,o),
(398,-14,cs),
(496.667,-14,o),
(558.833,10.5,o),
(595.5,44.5,cs),
(632.167,78.5,o),
(645,123.333,o),
(645,166,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 6 7 4 7 6 4 104 0 13 1 12 1 13 12 104 10 1 2 11 1 1 13 2 1 91 0 7 7 5 83 0 5 5 20 67 9 1 3 3 4 83 8 1 4 4 23 67 0 12 12 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 6 7 4 7 6 4 104 0 13 1 12 1 13 12 104 8 1 4 9 1 3 2 4 3 91 10 1 2 11 1 1 13 2 1 91 0 7 7 5 83 0 5 5 20 67 0 12 12 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 6 7 4 7 6 4 104 0 13 1 12 1 13 12 104 0 5 0 7 6 5 7 91 8 1 4 9 1 3 2 4 3 91 10 1 2 11 1 1 13 2 1 91 0 12 12 0 83 0 0 0 21 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
110 108 100 98 94 90 84 79 75 71 84 40 40 36 68 36 68 34 36 14 24
CALL[ ]	/* CallFunction */";
};
width = 682;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(617,184.667,o),
(614.333,205,o),
(589,205,cs),
(559.062,205,o),
(559.401,169.408,o),
(556,149,c),
(532.101,69.337,o),
(468.126,48,o),
(384,48,cs),
(275.416,48,o),
(205.655,136.585,o),
(190,254,c),
(214.667,254,o),
(239.167,254.167,o),
(263.5,254.5,cs),
(287.833,254.833,o),
(306.333,255,o),
(319,255,cs),
(341.667,255,o),
(348,278.333,o),
(348,289,cs),
(348,303.667,o),
(337.667,318,o),
(327,318,cs),
(313.667,318,o),
(296.167,317.5,o),
(274.5,316.5,cs),
(252.833,315.5,o),
(231,315,o),
(209,315,cs),
(186,315,l),
(182,343,o),
(181,373.333,o),
(181,404,cs),
(181,420,l),
(207,420,o),
(233.167,420.167,o),
(259.5,420.5,cs),
(285.833,420.833,o),
(305.667,421,o),
(319,421,cs),
(341.667,421,o),
(348,444.333,o),
(348,455,cs),
(348,469.667,o),
(337.667,484,o),
(327,484,cs),
(313.667,484,o),
(296.167,483.5,o),
(274.5,482.5,cs),
(252.833,481.5,o),
(231,481,o),
(209,481,cs),
(183,481,l),
(188.38,612.821,o),
(249.414,777,o),
(398,777,cs),
(506.117,777,o),
(550,710.581,o),
(550,620,cs),
(550,578.695,o),
(555.375,551,o),
(588,551,cs),
(612,551,o),
(620,576.333,o),
(620,595,cs),
(620,780.126,o),
(509.898,838,o),
(396,838,cs),
(313.333,838,o),
(247,802.5,o),
(199,740.5,cs),
(151,678.5,o),
(121.333,590,o),
(108,482,c),
(97.333,482,o),
(87.5,482.167,o),
(78.5,482.5,cs),
(69.5,482.833,o),
(62.667,483,o),
(58,483,cs),
(39.333,483,o),
(32,466.667,o),
(32,452,cs),
(32,438.667,o),
(43.333,420,o),
(58,420,cs),
(106,420,l),
(106,405,ls),
(106,371.667,o),
(108.333,342.667,o),
(111,316,c),
(99.667,316,o),
(89.333,316.167,o),
(80,316.5,cs),
(70.667,316.833,o),
(63.333,317,o),
(58,317,cs),
(39.333,317,o),
(32,300.667,o),
(32,286,cs),
(32,272.667,o),
(43.333,254,o),
(58,254,cs),
(118,254,l),
(145.016,75.692,o),
(248.618,-14,o),
(383,-14,cs),
(563.778,-14,o),
(617,80.978,o),
(617,166,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 6 7 4 7 6 4 104 0 13 1 12 1 13 12 104 10 1 2 11 1 1 13 2 1 91 0 7 7 5 83 0 5 5 20 67 9 1 3 3 4 83 8 1 4 4 23 67 0 12 12 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 6 7 4 7 6 4 104 0 13 1 12 1 13 12 104 8 1 4 9 1 3 2 4 3 91 10 1 2 11 1 1 13 2 1 91 0 7 7 5 83 0 5 5 20 67 0 12 12 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 6 7 4 7 6 4 104 0 13 1 12 1 13 12 104 0 5 0 7 6 5 7 91 8 1 4 9 1 3 2 4 3 91 10 1 2 11 1 1 13 2 1 91 0 12 12 0 83 0 0 0 21 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
108 106 98 96 92 88 84 79 75 71 84 40 38 36 68 36 68 36 36 14 24
CALL[ ]	/* CallFunction */";
};
width = 657;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(515.383,-14,o),
(577,78.185,o),
(577,166,cs),
(577,185.333,o),
(572.333,195,o),
(563,195,cs),
(549.445,195,o),
(548.648,164.886,o),
(546,149,cs),
(521.523,42.934,o),
(455.998,18,o),
(369,18,cs),
(236.698,18,o),
(171.64,120.227,o),
(150,269,c),
(215.015,269,o),
(262.701,270,o),
(309,270,cs),
(323.667,270,o),
(328,282.333,o),
(328,289,cs),
(328,295.667,o),
(322.333,303,o),
(317,303,cs),
(301,303,o),
(279.333,302.5,o),
(252,301.5,cs),
(224.667,300.5,o),
(197,300,o),
(169,300,cs),
(146,300,l),
(142,333.333,o),
(141,368,o),
(141,404,cs),
(141,435,l),
(210.297,435,o),
(265.939,436,o),
(309,436,cs),
(323.667,436,o),
(328,448.333,o),
(328,455,cs),
(328,461.667,o),
(322.333,469,o),
(317,469,cs),
(301,469,o),
(279.333,468.5,o),
(252,467.5,cs),
(224.667,466.5,o),
(197,466,o),
(169,466,cs),
(143,466,l),
(156.405,650.994,o),
(234.82,807,o),
(375,807,cs),
(483.414,807,o),
(540,728.642,o),
(540,620,cs),
(540,590.667,o),
(542.333,561,o),
(561,561,cs),
(578.333,561,o),
(580,576.333,o),
(580,595,cs),
(580,777.399,o),
(475.903,838,o),
(374,838,cs),
(296.667,838,o),
(231.833,798.667,o),
(184.5,732,cs),
(137.167,665.333,o),
(106,572.333,o),
(98,467,c),
(87.333,467,o),
(77.5,467.167,o),
(68.5,467.5,cs),
(59.5,467.833,o),
(52.667,468,o),
(48,468,cs),
(37.333,468,o),
(32,458.667,o),
(32,452,cs),
(32,445.333,o),
(38.667,435,o),
(48,435,cs),
(96,435,l),
(96,405,ls),
(96,366.333,o),
(98.333,333,o),
(101,301,c),
(89.667,301,o),
(79.333,301.167,o),
(70,301.5,cs),
(60.667,301.833,o),
(53.333,302,o),
(48,302,cs),
(37.333,302,o),
(32,292.667,o),
(32,286,cs),
(32,279.333,o),
(38.667,269,o),
(48,269,cs),
(106,269,l),
(122,169,o),
(154.833,98.5,o),
(199.5,52.5,cs),
(244.167,6.5,o),
(301,-14,o),
(361,-14,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 6 7 4 7 6 4 104 0 13 1 12 1 13 12 104 10 1 2 11 1 1 13 2 1 91 0 7 7 5 83 0 5 5 20 67 9 1 3 3 4 83 8 1 4 4 23 67 0 12 12 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 6 7 4 7 6 4 104 0 13 1 12 1 13 12 104 8 1 4 9 1 3 2 4 3 91 10 1 2 11 1 1 13 2 1 91 0 7 7 5 83 0 5 5 20 67 0 12 12 0 83 0 0 0 21 0 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 6 7 4 7 6 4 104 0 13 1 12 1 13 12 104 0 5 0 7 6 5 7 91 8 1 4 9 1 3 2 4 3 91 10 1 2 11 1 1 13 2 1 91 0 12 12 0 83 0 0 0 21 0 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
110 108 100 98 94 88 84 79 75 69 84 38 38 36 68 36 68 36 36 14 24
CALL[ ]	/* CallFunction */";
};
width = 621;
}
);
note = Euro;
unicode = 8364;
},
{
glyphname = sterling;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(266,686.452,o),
(296.833,760,o),
(358,760,cs),
(422.852,760,o),
(466,677.832,o),
(466,653,cs),
(466,634.876,o),
(470.272,602,o),
(507,602,cs),
(540.608,602,o),
(546,623.341,o),
(546,639,cs),
(546,651.667,o),
(545.667,664.333,o),
(545,677,cs),
(544.333,689.667,o),
(544,702.333,o),
(544,715,cs),
(544,729.667,o),
(544.5,743.167,o),
(545.5,755.5,cs),
(546.5,767.833,o),
(547,781.333,o),
(547,796,cs),
(547,803.782,o),
(538.947,831,o),
(505,831,cs),
(491.667,831,o),
(482.5,828.167,o),
(477.5,822.5,cs),
(472.5,816.833,o),
(470,812,o),
(470,808,cs),
(470,799.837,o),
(471.238,780.671,o),
(473,756,c),
(458.802,792.914,o),
(422.732,838,o),
(357,838,cs),
(224.28,838,o),
(172,729.547,o),
(172,577,cs),
(172,557.667,o),
(172.667,537.333,o),
(174,516,cs),
(175.333,494.667,o),
(176,470,o),
(176,442,c),
(145.333,443.333,o),
(114,444,o),
(102,444,cs),
(89.09,444,o),
(69,435.676,o),
(69,404,cs),
(69,370.882,o),
(91.112,363,o),
(102,363,cs),
(175,363,l),
(174.333,331,o),
(173.667,305.5,o),
(173,286.5,cs),
(172.333,267.5,o),
(172,252.333,o),
(172,241,cs),
(172,106.894,o),
(130.523,76,o),
(80,76,cs),
(57.333,76,o),
(29,62.667,o),
(29,32,cs),
(29,17.333,o),
(46.333,0,o),
(69,0,cs),
(569,0,ls),
(583.667,0,o),
(601.667,2.333,o),
(603,29,cs),
(604.333,64.333,o),
(606.333,95.5,o),
(609,122.5,cs),
(611.667,149.5,o),
(613,175.333,o),
(613,200,cs),
(613,214.667,o),
(604,236,o),
(576,236,cs),
(540.533,236,o),
(536.848,201.332,o),
(534,170,cs),
(534,155.391,o),
(526,131.086,o),
(526,115,c),
(522,88.333,o),
(507.333,84,o),
(486,84,cs),
(221,84,l),
(221,84,o),
(235.175,98.195,o),
(244,117.5,cs),
(254.667,140.833,o),
(266,175.333,o),
(266,226,cs),
(266,363,l),
(286,363,o),
(304.5,363.167,o),
(321.5,363.5,cs),
(338.5,363.833,o),
(352.333,364,o),
(363,364,cs),
(377.667,364,o),
(399,377.333,o),
(399,404,cs),
(399,418,o),
(395,428.333,o),
(387,435,cs),
(379,441.667,o),
(373.667,445,o),
(371,445,cs),
(359,445,o),
(343.667,444.667,o),
(325,444,cs),
(306.333,443.333,o),
(286.667,442.667,o),
(266,442,c),
(266,577,l),
(266,577,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
83 1 10 11 27 22 2 2 3 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 3 1 2 1 3 2 104 0 11 11 8 83 9 1 8 8 20 67 0 10 10 8 83 9 1 8 8 20 67 6 1 1 1 0 83 7 1 0 0 15 67 5 1 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 3 1 2 1 3 2 104 7 1 0 6 1 1 3 0 1 91 0 11 11 8 83 9 1 8 8 20 67 0 10 10 8 83 9 1 8 8 20 67 5 1 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 3 1 2 1 3 2 104 0 5 2 4 2 5 96 7 1 0 6 1 1 3 0 1 91 0 11 11 8 83 9 1 8 8 20 67 0 10 10 8 83 9 1 8 8 20 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 3 1 2 1 3 2 104 0 5 2 4 2 5 96 7 1 0 6 1 1 3 0 1 91 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 20 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 3 1 2 1 3 2 104 0 5 2 4 2 5 96 0 8 0 11 10 8 11 91 0 9 0 10 0 9 10 91 7 1 0 6 1 1 3 0 1 91 0 2 2 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
118 116 108 106 92 90 39 72 39 36 55 43 38 68 64 12 24
CALL[ ]	/* CallFunction */";
};
width = 651;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(239,691.004,o),
(271.627,778,o),
(352,778,cs),
(422.836,778,o),
(460,700.259,o),
(460,653,cs),
(460,637.377,o),
(466.356,608,o),
(494,608,cs),
(519.333,608,o),
(524,627,o),
(524,639,cs),
(524,651.667,o),
(523.667,664.333,o),
(523,677,cs),
(522.333,689.667,o),
(522,702.333,o),
(522,715,cs),
(522,729.667,o),
(522.5,745.333,o),
(523.5,762,cs),
(524.5,778.667,o),
(525,794.333,o),
(525,809,cs),
(525,812.333,o),
(523,816.333,o),
(519,821,cs),
(515,825.667,o),
(505.333,828,o),
(490,828,cs),
(471.333,828,o),
(464,817.333,o),
(464,808,c),
(464,808,o),
(465.44,785.644,o),
(467,756,c),
(452.802,792.914,o),
(416.732,838,o),
(351,838,cs),
(218.28,838,o),
(166,729.547,o),
(166,577,cs),
(166,557,o),
(166.667,535.5,o),
(168,512.5,cs),
(169.333,489.5,o),
(170,463,o),
(170,433,c),
(127.907,433,o),
(83.684,435,o),
(56,435,cs),
(45.333,435,o),
(30,428,o),
(30,404,cs),
(30,380,o),
(46.667,372,o),
(56,372,cs),
(170,372,l),
(169.333,332,o),
(168.5,300.333,o),
(167.5,277,cs),
(166.5,253.667,o),
(166,235.667,o),
(166,223,cs),
(166,88.894,o),
(124.523,58,o),
(74,58,cs),
(51.333,58,o),
(30,46.667,o),
(30,24,cs),
(30,12,o),
(40.333,0,o),
(63,0,cs),
(551,0,ls),
(573.667,0,o),
(584,6.333,o),
(584,29,cs),
(586.667,64.333,o),
(589.167,95.5,o),
(591.5,122.5,cs),
(593.833,149.5,o),
(595,175.333,o),
(595,200,cs),
(595,214.667,o),
(582.667,230,o),
(564,230,cs),
(532,230,o),
(528,200.667,o),
(528,170,cs),
(528,157.096,o),
(521.839,104.357,o),
(520,97,c),
(517.333,74.333,o),
(502.667,66,o),
(480,66,cs),
(194,66,l),
(202,74.667,o),
(209.333,85.667,o),
(216,99,cs),
(226.667,121.667,o),
(239,157.333,o),
(239,208,cs),
(239,373,l),
(317,373,ls),
(331.667,373,o),
(346,386.333,o),
(346,405,cs),
(346,425,o),
(330.333,436,o),
(325,436,cs),
(315,436,o),
(302.5,435.667,o),
(287.5,435,cs),
(272.5,434.333,o),
(256.333,433.667,o),
(239,433,c),
(239,577,l),
(239,577,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
82 1 11 8 77 1 10 11 34 1 4 2 3 66
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
82 1 11 9 77 1 10 11 34 1 4 2 3 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
82 1 11 9 77 1 10 11 34 1 4 5 3 66
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 3 1 2 1 3 2 104 0 11 11 8 83 9 1 8 8 20 67 0 10 10 8 83 9 1 8 8 20 67 6 1 1 1 0 83 7 1 0 0 15 67 5 1 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 3 1 2 1 3 2 104 7 1 0 6 1 1 3 0 1 91 0 11 11 8 83 9 1 8 8 20 67 0 10 10 8 83 9 1 8 8 20 67 5 1 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 3 1 2 1 3 2 104 7 1 0 6 1 1 3 0 1 91 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 12 67 5 1 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 3 1 2 1 3 2 104 0 5 2 4 2 5 96 7 1 0 6 1 1 3 0 1 91 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 12 67 0 2 2 4 84 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 3 1 2 1 3 2 104 0 5 2 4 2 5 96 0 8 0 11 10 8 11 91 0 9 0 10 0 9 10 91 7 1 0 6 1 1 3 0 1 91 0 2 2 4 84 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
108 106 98 96 86 84 39 100 39 36 55 41 38 36 64 12 24
CALL[ ]	/* CallFunction */";
};
width = 626;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(513,0,ls),
(533,0,o),
(543.333,6.333,o),
(546,29,cs),
(548.667,64.333,o),
(551.167,95.5,o),
(553.5,122.5,cs),
(555.833,149.5,o),
(557,175.333,o),
(557,200,cs),
(557,214.667,o),
(544.667,220,o),
(538,220,cs),
(530,220,o),
(525,215.5,o),
(523,206.5,cs),
(521,197.5,o),
(520,185.333,o),
(520,170,cs),
(520,144.359,o),
(512.852,72.109,o),
(512,67,cs),
(509.333,44.333,o),
(494.667,36,o),
(472,36,cs),
(156,36,l),
(164,44.667,o),
(171.333,55.667,o),
(178,69,cs),
(188.667,91.667,o),
(201,127.333,o),
(201,178,cs),
(201,387,l),
(223,387,o),
(243.667,387.167,o),
(263,387.5,cs),
(282.333,387.833,o),
(297.667,388,o),
(309,388,cs),
(323.667,388,o),
(328,400.333,o),
(328,407,cs),
(328,413.667,o),
(322.333,421,o),
(317,421,cs),
(303.667,421,o),
(286.667,420.667,o),
(266,420,cs),
(245.333,419.333,o),
(223.667,418.667,o),
(201,418,c),
(201,577,ls),
(201,711.522,o),
(239.884,808,o),
(344,808,cs),
(422.401,808,o),
(452,743.819,o),
(452,653,cs),
(452,635.667,o),
(458.333,618,o),
(469,618,cs),
(479.667,618,o),
(486,627,o),
(486,639,cs),
(486,651.667,o),
(485.667,664.333,o),
(485,677,cs),
(484.333,689.667,o),
(484,702.333,o),
(484,715,cs),
(484,729.667,o),
(484.5,745.333,o),
(485.5,762,cs),
(486.5,778.667,o),
(487,794.333,o),
(487,809,cs),
(487,815.667,o),
(484,823,o),
(472,823,cs),
(461.333,823,o),
(456,818,o),
(456,808,c),
(456,808,o),
(457.44,785.644,o),
(459,756,c),
(444.802,792.914,o),
(408.732,838,o),
(343,838,cs),
(210.28,838,o),
(158,729.547,o),
(158,577,cs),
(158,555,o),
(158.667,531.167,o),
(160,505.5,cs),
(161.333,479.833,o),
(162,450.667,o),
(162,418,c),
(119.907,418,o),
(75.684,420,o),
(48,420,cs),
(37.333,420,o),
(32,410.667,o),
(32,404,cs),
(32,397.333,o),
(38.667,387,o),
(48,387,cs),
(162,387,l),
(161.333,333.667,o),
(160.5,291.833,o),
(159.5,261.5,cs),
(158.5,231.167,o),
(158,208.333,o),
(158,193,cs),
(158,58.894,o),
(116.523,28,o),
(66,28,cs),
(42.667,28,o),
(31,22.333,o),
(31,11,cs),
(31,7.667,o),
(32.167,5,o),
(34.5,3,cs),
(36.833,1,o),
(43.667,0,o),
(55,0,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
78 1 10 11 1 66 83 1 11 1 65
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 3 1 2 1 3 2 104 0 5 2 4 2 5 96 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 12 67 6 1 1 1 0 83 7 1 0 0 15 67 0 2 2 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 3 1 2 1 3 2 104 0 5 2 4 2 5 96 7 1 0 6 1 1 3 0 1 91 0 11 11 8 83 0 8 8 20 67 0 10 10 9 83 0 9 9 12 67 0 2 2 4 83 0 4 4 13 4 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 3 1 2 1 3 2 104 0 5 2 4 2 5 96 0 8 0 11 10 8 11 91 7 1 0 6 1 1 3 0 1 91 0 10 10 9 83 0 9 9 14 67 0 2 2 4 83 0 4 4 13 4 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
106 104 98 96 86 84 39 100 39 35 55 41 38 68 64 12 24
CALL[ ]	/* CallFunction */";
};
width = 590;
}
);
note = sterling;
unicode = 163;
},
{
glyphname = yen;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(257,761.824,o),
(329,742.223,o),
(329,783,cs),
(329,799,o),
(314,813,o),
(290,813,cs),
(62,813,ls),
(39.333,813,o),
(16,804.333,o),
(16,783,cs),
(16,760.333,o),
(41,751.667,o),
(65,749,cs),
(98.333,745.667,o),
(121.5,741.333,o),
(134.5,736,cs),
(147.5,730.667,o),
(156.667,722.667,o),
(162,712,cs),
(226.802,590.496,o),
(243.309,553.685,o),
(297,435,c),
(287.667,435,o),
(279.333,435.167,o),
(272,435.5,cs),
(264.667,435.833,o),
(259.333,436,o),
(256,436,cs),
(233.333,436,o),
(223,415.667,o),
(223,397,cs),
(223,378.333,o),
(237.333,357,o),
(256,357,cs),
(333,357,l),
(334.333,351.667,o),
(335.167,345.167,o),
(335.5,337.5,cs),
(335.833,329.833,o),
(336.333,319.333,o),
(337,306,c),
(303.667,307.333,o),
(269.333,308,o),
(256,308,cs),
(233.333,308,o),
(223,287.667,o),
(223,269,cs),
(223,250.333,o),
(237.333,229,o),
(256,229,cs),
(337,229,l),
(337,109,ls),
(337,75.667,o),
(311.667,67,o),
(277,63,cs),
(239.667,59,o),
(229,48.667,o),
(229,30,cs),
(229,3.333,o),
(245.667,0,o),
(283,0,cs),
(507,0,ls),
(529.667,0,o),
(545,4.333,o),
(545,31,cs),
(545,57.667,o),
(519.333,63,o),
(494,63,cs),
(428,63,l),
(428,88.333,o),
(427.833,115.833,o),
(427.5,145.5,cs),
(427.167,175.167,o),
(427,203.333,o),
(427,230,c),
(517,230,ls),
(545.782,230,o),
(553,256.801,o),
(553,272,cs),
(553,292,o),
(539.667,309,o),
(525,309,cs),
(513.667,309,o),
(499.167,308.667,o),
(481.5,308,cs),
(463.833,307.333,o),
(445,306.667,o),
(425,306,c),
(425,334,l),
(435,357,l),
(451.667,357,o),
(467.167,357.167,o),
(481.5,357.5,cs),
(495.833,357.833,o),
(507.667,358,o),
(517,358,cs),
(545.782,358,o),
(553,384.801,o),
(553,400,cs),
(553,420,o),
(539.667,437,o),
(525,437,cs),
(518.333,437,o),
(510.5,436.833,o),
(501.5,436.5,cs),
(492.5,436.167,o),
(483,436,o),
(473,436,c),
(491.667,474,o),
(511.667,513.333,o),
(533,554,cs),
(554.333,594.667,o),
(575,634.667,o),
(595,674,cs),
(609.667,700.667,o),
(617.333,705.333,o),
(644,712,cs),
(652.444,714.111,o),
(715.723,718,o),
(730,718,cs),
(743.333,718,o),
(767,722.333,o),
(767,745,cs),
(767,771.667,o),
(751,775,o),
(727,775,cs),
(487,775,ls),
(453.667,775,o),
(445,766.667,o),
(445,744,cs),
(445,721.333,o),
(460.333,714,o),
(487,714,cs),
(495,714,o),
(507,712.667,o),
(507,698,cs),
(507,663.589,o),
(425.888,509.443,o),
(387,440,c),
(362.747,488.506,o),
(352.946,512.413,o),
(311,600.5,cs),
(274.758,676.608,o),
(257,720.224,o),
(257,731,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
7 1 4 0 54 1 6 5 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 1 3 2 2 0 4 1 0 91 11 1 6 10 1 7 8 6 7 91 0 14 14 14 67 12 1 5 5 4 83 13 1 4 4 15 67 0 8 8 9 83 0 9 9 13 9 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 1 3 2 2 0 4 1 0 91 13 1 4 12 1 5 6 4 5 92 11 1 6 10 1 7 8 6 7 91 0 14 14 14 67 0 8 8 9 83 0 9 9 13 9 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
127 124 111 107 103 101 98 94 90 88 79 76 35 38 66 70 72 17 36 52 46 15 24
CALL[ ]	/* CallFunction */";
};
width = 791;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(505,300,o),
(483.333,299.5,o),
(456,298.5,cs),
(428.667,297.5,o),
(401,297,o),
(373,297,cs),
(330.698,297,o),
(282.437,299,o),
(252,299,cs),
(233.333,299,o),
(226,283.667,o),
(226,269,cs),
(226,254.333,o),
(237.333,238,o),
(252,238,cs),
(327.258,238,o),
(434.082,239,o),
(513,239,cs),
(535.667,239,o),
(542,261.333,o),
(542,272,cs),
(542,286.667,o),
(531.667,300,o),
(521,300,cs)
);
},
{
closed = 1;
nodes = (
(315.151,425,o),
(275.59,427,o),
(252,427,cs),
(233.333,427,o),
(226,411.667,o),
(226,397,cs),
(226,382.333,o),
(237.333,366,o),
(252,366,cs),
(367,366,l),
(355,425,l),
(355,425,l)
);
},
{
closed = 1;
nodes = (
(419.333,366,o),
(441.667,366.167,o),
(463,366.5,cs),
(484.333,366.833,o),
(501,367,o),
(513,367,cs),
(535.667,367,o),
(542,389.333,o),
(542,400,cs),
(542,414.667,o),
(531.667,428,o),
(521,428,cs),
(508.333,428,o),
(492,427.667,o),
(472,427,cs),
(452,426.333,o),
(431,425.667,o),
(409,425,c),
(396,366,l),
(396,366,l)
);
},
{
closed = 1;
nodes = (
(237,775.993,o),
(319,753.006,o),
(319,789,cs),
(319,803.667,o),
(307,813,o),
(283,813,cs),
(55,813,ls),
(31.667,813,o),
(20,805,o),
(20,789,cs),
(20,770.333,o),
(37.333,767,o),
(56,767,cs),
(101.333,767,o),
(146,759,o),
(158,735,cs),
(190.937,664.185,o),
(222.115,605.771,o),
(248,554,cs),
(272.443,505.114,o),
(301.752,444.643,o),
(342,355,c),
(342,94,ls),
(342,49.566,o),
(308.498,48,o),
(288,48,cs),
(262,48,o),
(249,40.667,o),
(249,26,cs),
(249,4.667,o),
(270.667,0,o),
(300,0,cs),
(510,0,ls),
(523.333,0,o),
(535,5.333,o),
(535,28,cs),
(535,48,o),
(514.667,51,o),
(500,51,cs),
(414,51,l),
(414,107,o),
(413.333,177.667,o),
(412,235,cs),
(411.333,268.333,o),
(411,301.333,o),
(411,334,c),
(451.278,425.296,o),
(531.939,580.66,o),
(589,687,cs),
(601,709.667,o),
(608.667,722.333,o),
(638,725,cs),
(636.761,725,o),
(687.27,731,o),
(726,731,cs),
(739.333,731,o),
(756,736,o),
(756,752,cs),
(756,776,o),
(735,776,o),
(723,776,cs),
(481,776,ls),
(450.333,776,o),
(442,767,o),
(442,751,cs),
(442,732.333,o),
(459.667,727,o),
(481,727,cs),
(498.333,727,o),
(522,727,o),
(522,711,cs),
(522,693.41,o),
(491.386,634.873,o),
(461,576,cs),
(428.111,512.277,o),
(395.303,453.91,o),
(385,423,c),
(371.682,453.442,o),
(338.994,518.813,o),
(300.5,598,cs),
(258.626,684.14,o),
(237,732.248,o),
(237,743,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
58 1 2 3 118 94 2 0 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 7 9 8 2 6 3 7 6 91 15 1 0 0 1 10 0 1 91 0 13 13 14 83 0 14 14 14 67 5 1 2 2 3 83 4 1 3 3 15 67 12 1 10 10 11 83 0 11 11 13 11 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 7 9 8 2 6 3 7 6 91 4 1 3 5 1 2 0 3 2 91 15 1 0 0 1 10 0 1 91 0 13 13 14 83 0 14 14 14 67 12 1 10 10 11 83 0 11 11 13 11 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
1 0 135 132 129 127 114 111 108 105 101 99 86 85 82 80 76 73 69 67 50 46 42 38 37 31 27 25 12 5 0 24 1 16 16 15
CALL[ ]	/* CallFunction */";
};
width = 780;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(500,0,ls),
(513.333,0,o),
(520,4.333,o),
(520,13,cs),
(520,23.667,o),
(504.667,31,o),
(490,31,cs),
(394,31,l),
(394,132.096,o),
(392,161.216,o),
(392,253,c),
(415.333,253,o),
(437.333,253.167,o),
(458,253.5,cs),
(478.667,253.833,o),
(495,254,o),
(507,254,cs),
(521.667,254,o),
(526,265.333,o),
(526,272,cs),
(526,278.667,o),
(520.333,285,o),
(515,285,cs),
(501.667,285,o),
(483.667,284.5,o),
(461,283.5,cs),
(438.333,282.5,o),
(415.333,282,o),
(392,282,c),
(391.333,289.333,o),
(391,296.333,o),
(391,303,cs),
(391,309.667,o),
(391,315.333,o),
(391,320,cs),
(391,334,l),
(412,381,l),
(431.333,381,o),
(449.5,381.167,o),
(466.5,381.5,cs),
(483.5,381.833,o),
(497,382,o),
(507,382,cs),
(521.667,382,o),
(526,393.333,o),
(526,400,cs),
(526,406.667,o),
(520.333,413,o),
(515,413,cs),
(504.333,413,o),
(491.333,412.667,o),
(476,412,cs),
(460.667,411.333,o),
(444.333,410.667,o),
(427,410,c),
(477.761,514.508,o),
(535.308,623.874,o),
(580,708,cs),
(592,730.667,o),
(599.667,743.333,o),
(629,746,cs),
(627.848,746,o),
(680.782,752,o),
(720,752,cs),
(733.333,752,o),
(740,755.667,o),
(740,763,cs),
(740,773.667,o),
(729,777,o),
(717,777,cs),
(472,777,ls),
(458.667,777,o),
(449.667,775.333,o),
(445,772,cs),
(440.333,768.667,o),
(438,765.333,o),
(438,762,cs),
(438,747.333,o),
(458.667,748,o),
(472,748,cs),
(492.015,748,o),
(543,750.874,o),
(543,732,cs),
(543,714.16,o),
(511.777,653.217,o),
(469.5,573,cs),
(421.841,482.57,o),
(386.364,418.41,o),
(377,395,c),
(364.239,429.028,o),
(324.013,507.872,o),
(283,594,cs),
(240.285,683.701,o),
(208,752.121,o),
(208,763,cs),
(208,795.488,o),
(304,774.276,o),
(304,799,cs),
(304,804.333,o),
(301.833,808,o),
(297.5,810,cs),
(293.167,812,o),
(285,813,o),
(273,813,cs),
(55,813,ls),
(31.667,813,o),
(20,808.333,o),
(20,799,cs),
(20,787,o),
(37.333,787,o),
(56,787,cs),
(120,787,o),
(144.333,780.333,o),
(159,755,cs),
(200.333,680.333,o),
(225,631.333,o),
(249,582,cs),
(270.688,537.42,o),
(298.128,474.674,o),
(327,410,c),
(311,410,o),
(295.167,410.333,o),
(279.5,411,cs),
(263.833,411.667,o),
(252.667,412,o),
(246,412,cs),
(235.333,412,o),
(230,403.667,o),
(230,397,cs),
(230,390.333,o),
(236.667,381,o),
(246,381,cs),
(340,381,l),
(352,355,l),
(352,282,l),
(311.698,282,o),
(270.698,284,o),
(246,284,cs),
(235.333,284,o),
(230,275.667,o),
(230,269,cs),
(230,262.333,o),
(236.667,253,o),
(246,253,cs),
(352,253,l),
(352,74,ls),
(352,30.297,o),
(312.22,28,o),
(279,28,cs),
(267,28,o),
(250,25,o),
(250,13,cs),
(250,2.333,o),
(272.333,0,o),
(291,0,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 107 values pushed */
86 1 7 8 136 46 2 0 7 2 66 0 13 15 14 2 12 8 13 12 91 16 1 8 17 1 7 0 8 7 91 6 18 2 0 5 1 1 2 0 1 91 11 1 9 9 10 83 0 10 10 14 67 4 1 2 2 3 83 0 3 3 13 3 68 1 0 135 131 127 123 115 114 111 109 106 103 99 96 77 76 72 69 66 64 57 53 49 47 45 39 35 33 29 26 22 19 16 14 9 5 0 142 1 140 19 15
CALL[ ]	/* CallFunction */";
};
width = 765;
}
);
note = yen;
unicode = 165;
},
{
glyphname = bulletoperator;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(40,329,o),
(58.667,295,o),
(108,295,cs),
(154.667,295,o),
(178,325.667,o),
(178,359,cs),
(178,388.333,o),
(156.667,421,o),
(110,421,cs),
(56.058,421,o),
(40,381.342,o),
(40,357,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
10 4 1 40
CALL[ ]	/* CallFunction */";
};
width = 219;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(47,333,o),
(62.667,304,o),
(104,304,cs),
(142.667,304,o),
(164,331,o),
(164,359,cs),
(164,384.333,o),
(146,412,o),
(106,412,cs),
(63.437,412,o),
(47,381.211,o),
(47,357,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
11 5 1 41
CALL[ ]	/* CallFunction */";
};
width = 211;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(128.333,319,o),
(144,339,o),
(144,359,cs),
(144,377.667,o),
(131.667,397,o),
(101,397,cs),
(69,397,o),
(57,374.333,o),
(57,357,cs),
(57,339.667,o),
(68.333,319,o),
(99,319,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
9 3 1 41
CALL[ ]	/* CallFunction */";
};
width = 200;
}
);
note = uni2219;
unicode = 8729;
},
{
glyphname = divisionslash;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(291,599.706,o),
(240.132,508.339,o),
(142.5,325.5,cs),
(76.337,201.594,o),
(-5,47.894,o),
(-5,37,cs),
(-5,14.333,o),
(6.333,6,o),
(21,6,cs),
(63.667,6,o),
(78,25.667,o),
(86,43,cs),
(103.182,84.237,o),
(149.651,163.209,o),
(255,364.5,cs),
(351.889,549.627,o),
(402,642.08,o),
(402,650,cs),
(402,663.333,o),
(394.333,676,o),
(381,676,cs),
(339.765,676,o),
(330.737,660.281,o),
(291,602,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
19 4 1 40
CALL[ ]	/* CallFunction */";
};
width = 402;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(294,599.724,o),
(243.118,508.312,o),
(145.5,325.5,cs),
(47.579,142.121,o),
(-2,46.179,o),
(-2,37,cs),
(-2,20.333,o),
(5.333,12,o),
(20,12,cs),
(50.667,12,o),
(59.667,27.333,o),
(69,42,c),
(82.851,75.243,o),
(133.823,171.756,o),
(236.5,364.5,cs),
(334.341,548.166,o),
(384,643.078,o),
(384,650,cs),
(384,660.667,o),
(376.667,670,o),
(366,670,cs),
(328.862,670,o),
(323.409,650.124,o),
(294,602,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
19 4 1 40
CALL[ ]	/* CallFunction */";
};
width = 387;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(33.667,22,o),
(39,31.333,o),
(43,42,cs),
(56.851,75.243,o),
(107.823,171.756,o),
(210.5,364.5,cs),
(308.341,548.166,o),
(358,643.078,o),
(358,650,cs),
(358,656.667,o),
(353.667,660,o),
(345,660,cs),
(320.842,660,o),
(315.951,640.466,o),
(298,602,c),
(298,599.724,o),
(247.118,508.312,o),
(149.5,325.5,cs),
(51.579,142.121,o),
(2,46.179,o),
(2,37,cs),
(2,27,o),
(7.667,22,o),
(19,22,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
18 4 1 40
CALL[ ]	/* CallFunction */";
};
width = 365;
}
);
note = uni2215;
unicode = 8725;
},
{
glyphname = plus;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(153,530.333,o),
(153.5,517.333,o),
(154.5,502,cs),
(155.5,486.667,o),
(156,469,o),
(156,449,c),
(62,449,ls),
(51.333,449,o),
(29,441.333,o),
(29,408,cs),
(29,377.721,o),
(51.291,367,o),
(62,367,cs),
(70.667,367,o),
(83.333,367.333,o),
(100,368,cs),
(116.667,368.667,o),
(134.667,369.333,o),
(154,370,c),
(152.667,339.333,o),
(151,294.667,o),
(151,276,cs),
(151,265.333,o),
(159.333,244,o),
(194,244,cs),
(230,244,o),
(240,262.667,o),
(240,276,cs),
(240,370,l),
(327,370,ls),
(345.667,370,o),
(363,380,o),
(363,412,cs),
(363,429.333,o),
(359.833,440.667,o),
(353.5,446,cs),
(347.167,451.333,o),
(341,454,o),
(335,454,cs),
(323.667,454,o),
(310,453.167,o),
(294,451.5,cs),
(278,449.833,o),
(260,449,o),
(240,449,c),
(240,467,o),
(240.167,484.167,o),
(240.5,500.5,cs),
(240.833,516.833,o),
(241,530.333,o),
(241,541,cs),
(241,555.667,o),
(229.667,576,o),
(195,576,cs),
(168.333,576,o),
(153,555.667,o),
(153,541,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 0 0 4 0 4 87 5 1 3 3 1 83 6 2 2 1 1 15 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 0 1 4 0 79 6 2 2 1 5 1 3 4 1 3 91 0 0 0 4 83 0 4 0 4 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 1 1 2 96 0 0 2 4 0 79 6 1 1 5 1 3 4 1 3 92 0 0 0 4 83 0 4 0 4 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 69 35 36 33 21 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 393;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(157,529.667,o),
(157.5,515.5,o),
(158.5,498.5,cs),
(159.5,481.5,o),
(160,462,o),
(160,440,c),
(56,440,ls),
(45.333,440,o),
(30,430.667,o),
(30,408,cs),
(30,385.333,o),
(46.667,376,o),
(56,376,cs),
(65.333,376,o),
(79.333,376.333,o),
(98,377,cs),
(116.667,377.667,o),
(136.667,378.333,o),
(158,379,c),
(156.667,344.333,o),
(155,297.333,o),
(155,276,cs),
(155,265.333,o),
(165.333,250,o),
(188,250,cs),
(212,250,o),
(223,266.667,o),
(223,276,cs),
(223,379,l),
(321,379,ls),
(335.667,379,o),
(350,390.333,o),
(350,413,cs),
(350,437,o),
(338.333,445,o),
(329,445,cs),
(315.667,445,o),
(300.167,444.167,o),
(282.5,442.5,cs),
(264.833,440.833,o),
(245,440,o),
(223,440,c),
(223,460,o),
(223.167,479,o),
(223.5,497,cs),
(223.833,515,o),
(224,529.667,o),
(224,541,cs),
(224,555.667,o),
(211.667,570,o),
(189,570,cs),
(170.333,570,o),
(157,555.667,o),
(157,541,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 0 0 4 0 4 87 5 1 3 3 1 83 6 2 2 1 1 15 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 0 1 4 0 79 6 2 2 1 5 1 3 4 1 3 91 0 0 0 4 83 0 4 0 4 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 1 1 2 96 0 0 2 4 0 79 6 1 1 5 1 3 4 1 3 92 0 0 0 4 83 0 4 0 4 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
36 69 35 36 33 21 34 7 22
CALL[ ]	/* CallFunction */";
};
width = 380;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(185.667,260,o),
(197.667,266.667,o),
(199,276,c),
(199,394,l),
(312,394,l),
(326.667,396.667,o),
(331,408.333,o),
(331,415,cs),
(331,421.667,o),
(325.333,430,o),
(320,430,cs),
(304.667,429.333,o),
(287,428.333,o),
(267,427,cs),
(247,425.667,o),
(224.333,425,o),
(199,425,c),
(199,448.333,o),
(199.167,470.167,o),
(199.5,490.5,cs),
(199.833,510.833,o),
(200,527.667,o),
(200,541,cs),
(200,555.667,o),
(186.667,560,o),
(180,560,cs),
(173.333,560,o),
(163,555.667,o),
(163,541,cs),
(163,527.667,o),
(163.5,511.333,o),
(164.5,492,cs),
(165.5,472.667,o),
(166,450.333,o),
(166,425,c),
(47,425,ls),
(36.333,425,o),
(31,414.667,o),
(31,408,cs),
(31,401.333,o),
(37.667,391,o),
(47,391,cs),
(58.333,391,o),
(74.5,391.333,o),
(95.5,392,cs),
(116.5,392.667,o),
(139.333,393.333,o),
(164,394,c),
(164,353.409,o),
(161,316.45,o),
(161,276,cs),
(161,265.333,o),
(172.333,260,o),
(179,260,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 3 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 0 0 3 0 3 87 4 1 2 2 1 83 5 1 1 1 15 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 0 1 3 0 79 5 1 1 4 1 2 3 1 2 91 0 0 0 3 83 0 3 0 3 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 71 35 21 69 34 6 21
CALL[ ]	/* CallFunction */";
};
width = 362;
}
);
note = plus;
unicode = 43;
},
{
glyphname = minus;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(340,454,o),
(321,453.167,o),
(299,451.5,cs),
(277,449.833,o),
(252,449,o),
(224,449,cs),
(83,449,ls),
(72.333,449,o),
(50,441.333,o),
(50,408,cs),
(50,377.721,o),
(72.291,367,o),
(83,367,cs),
(137.977,367,o),
(286.069,372,o),
(348,372,cs),
(362.667,372,o),
(384,384.333,o),
(384,415,cs),
(384,431.667,o),
(380,442.333,o),
(372,447,cs),
(364,451.667,o),
(358.667,454,o),
(356,454,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
10 0 1 40
CALL[ ]	/* CallFunction */";
};
width = 436;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(334,444.333,o),
(315,443.333,o),
(293,442,cs),
(271,440.667,o),
(246,440,o),
(218,440,cs),
(77,440,ls),
(66.333,440,o),
(51,430.667,o),
(51,408,cs),
(51,385.333,o),
(67.667,376,o),
(77,376,cs),
(102.136,376,o),
(212.811,381,o),
(342,381,cs),
(356.667,381,o),
(371,393.667,o),
(371,415,cs),
(371,427,o),
(368.167,435,o),
(362.5,439,cs),
(356.833,443,o),
(352.667,445,o),
(350,445,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
10 0 1 40
CALL[ ]	/* CallFunction */";
};
width = 420;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(93.136,391,o),
(203.811,396,o),
(333,396,cs),
(347.667,396,o),
(352,408.333,o),
(352,415,cs),
(352,421.667,o),
(346.333,430,o),
(341,430,cs),
(325,429.333,o),
(306,428.333,o),
(284,427,cs),
(262,425.667,o),
(237,425,o),
(209,425,cs),
(68,425,ls),
(57.333,425,o),
(52,414.667,o),
(52,408,cs),
(52,401.333,o),
(58.667,391,o),
(68,391,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
10 0 1 40
CALL[ ]	/* CallFunction */";
};
width = 397;
}
);
note = minus;
unicode = 8722;
},
{
glyphname = multiply;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(325,306.045,o),
(256.717,347.039,o),
(220,409,c),
(248,447.667,o),
(277.333,488.333,o),
(308,527,cs),
(313.333,533.667,o),
(316,540.667,o),
(316,548,cs),
(316,562.069,o),
(293.577,567,o),
(285,567,cs),
(270.333,567,o),
(249.667,566.333,o),
(227,533,cs),
(178,464,l),
(152.336,497.684,o),
(132.023,521.954,o),
(128,530,cs),
(113.333,552.667,o),
(98,567,o),
(86,567,cs),
(63.333,567,o),
(48,551.667,o),
(48,533,cs),
(48,511.629,o),
(90.382,480.927,o),
(135,414,c),
(129.667,407.333,o),
(121.667,397,o),
(111,383,cs),
(100.333,369,o),
(89,354.333,o),
(77,339,cs),
(71.667,331.667,o),
(66,324.333,o),
(60,317,cs),
(54,309.667,o),
(51,303.333,o),
(51,298,cs),
(51,268.052,o),
(74.409,262,o),
(83,262,cs),
(113.777,262,o),
(157.872,333.847,o),
(178,358,c),
(198.68,326.981,o),
(253.303,245,o),
(289,245,cs),
(318.333,245,o),
(325,261,o),
(325,281,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
54 40 24 8 4 1 2 1 66 3 1 2 0 1 0 2 1 91 3 1 2 2 0 83 0 0 2 0 71 45 43 33 31 40 34 4 17
CALL[ ]	/* CallFunction */";
};
width = 370;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(321,306.045,o),
(252.717,347.039,o),
(216,409,c),
(230,428.333,o),
(244.5,448.5,o),
(259.5,469.5,cs),
(274.5,490.5,o),
(290,510.667,o),
(306,530,cs),
(310,534.667,o),
(312,539.667,o),
(312,545,cs),
(312,561,o),
(294.667,565,o),
(288,565,cs),
(280.667,565,o),
(272.667,562.833,o),
(264,558.5,cs),
(255.333,554.167,o),
(244.333,542.667,o),
(231,524,cs),
(182,455,l),
(147.727,499.983,o),
(127.071,523.859,o),
(124,530,c),
(106.667,555.333,o),
(96.667,565,o),
(82,565,cs),
(63.333,565,o),
(53,551.667,o),
(53,533,cs),
(53,518.625,o),
(90.277,486.449,o),
(147,412,c),
(141.929,405.915,o),
(132.711,394.628,o),
(129.5,390.5,cs),
(124.262,383.765,o),
(108.095,363.598,o),
(81,330,cs),
(75.667,322.667,o),
(70,316,o),
(64,310,cs),
(58,304,o),
(55,297.333,o),
(55,290,cs),
(55,267.333,o),
(69.667,262,o),
(79,262,cs),
(111.601,262,o),
(154.991,337.991,o),
(182,365,c),
(202.68,333.981,o),
(257.303,252,o),
(293,252,cs),
(314.333,252,o),
(321,265,o),
(321,281,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 9 values pushed */
52 40 24 8 4 0 2 1 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 9 values pushed */
52 40 24 8 4 1 2 1 66
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
3 1 2 0 0 2 79 3 1 2 2 0 83 1 1 0 2 0 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
3 1 2 0 1 0 2 1 91 3 1 2 2 0 83 0 0 2 0 71
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
45 43 33 31 40 34 4 17
CALL[ ]	/* CallFunction */";
};
width = 371;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(105.928,262,o),
(164.914,358.685,o),
(188,376,c),
(208.68,344.981,o),
(263.303,263,o),
(299,263,cs),
(309.667,263,o),
(316,270.333,o),
(316,281,cs),
(316,306.045,o),
(247.717,347.039,o),
(211,409,c),
(225,428.333,o),
(239.5,448.5,o),
(254.5,469.5,cs),
(269.5,490.5,o),
(285,510.667,o),
(301,530,cs),
(305,534.667,o),
(307,539.667,o),
(307,545,cs),
(307,555.667,o),
(298.667,562,o),
(292,562,cs),
(284.667,562,o),
(277,557.833,o),
(269,549.5,cs),
(261,541.167,o),
(250.333,527.667,o),
(237,509,cs),
(188,440,l),
(166.667,468,o),
(150.5,489.167,o),
(139.5,503.5,cs),
(128.5,517.833,o),
(121.667,526.667,o),
(119,530,cs),
(99,556.667,o),
(93,561,o),
(77,561,cs),
(69,561,o),
(59,552,o),
(59,544,cs),
(59,534.032,o),
(110.368,478.392,o),
(164,408,c),
(145.893,383.857,o),
(138.924,379.386,o),
(87,315,cs),
(81.667,307.667,o),
(76,301,o),
(70,295,cs),
(64,289,o),
(61,283,o),
(61,277,cs),
(61,267,o),
(65.333,262,o),
(74,262,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
49 37 23 8 4 0 2 1 66 3 1 2 0 0 2 79 3 1 2 2 0 83 1 1 0 2 0 71 42 40 32 30 40 34 4 17
CALL[ ]	/* CallFunction */";
};
width = 372;
}
);
note = multiply;
unicode = 215;
},
{
glyphname = divide;
lastChange = "2024-06-13 14:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(121,203,o),
(139.667,169,o),
(189,169,cs),
(235.667,169,o),
(259,201,o),
(259,233,cs),
(259,263.667,o),
(237.667,295,o),
(191,295,cs),
(137.058,295,o),
(121,255.342,o),
(121,231,cs)
);
},
{
closed = 1;
nodes = (
(121,553,o),
(139.667,519,o),
(189,519,cs),
(235.667,519,o),
(259,551,o),
(259,583,cs),
(259,613.667,o),
(237.667,645,o),
(191,645,cs),
(137.058,645,o),
(121,605.342,o),
(121,581,cs)
);
},
{
closed = 1;
nodes = (
(315,454,o),
(296,453.167,o),
(274,451.5,cs),
(252,449.833,o),
(227,449,o),
(199,449,cs),
(58,449,ls),
(47.333,449,o),
(25,441.333,o),
(25,408,cs),
(25,377.721,o),
(47.291,367,o),
(58,367,cs),
(112.977,367,o),
(261.069,372,o),
(323,372,cs),
(337.667,372,o),
(359,384.333,o),
(359,415,cs),
(359,431.667,o),
(355,442.333,o),
(347,447,cs),
(339,451.667,o),
(333.667,454,o),
(331,454,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 2 0 3 4 2 3 91 0 0 0 1 0 1 87 0 5 5 4 83 6 7 2 4 4 15 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 0 3 4 2 3 91 6 7 2 4 0 5 0 4 5 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
7 1 4 3 6 6 4 96 0 2 0 3 4 2 3 91 0 6 0 5 0 6 5 92 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
29 28 49 46 40 33 28 50 29 50 36 38 36 36 8 19
CALL[ ]	/* CallFunction */";
};
width = 382;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(135,217,o),
(151,188,o),
(192,188,cs),
(231,188,o),
(252,215,o),
(252,243,cs),
(252,268,o),
(234,296,o),
(194,296,cs),
(151,296,o),
(135,265,o),
(135,241,cs)
);
},
{
closed = 1;
nodes = (
(135,549,o),
(151,520,o),
(192,520,cs),
(231,520,o),
(252,547,o),
(252,575,cs),
(252,600,o),
(234,628,o),
(194,628,cs),
(151,628,o),
(135,597,o),
(135,573,cs)
);
},
{
closed = 1;
nodes = (
(317,444,o),
(298,443,o),
(276,442,cs),
(254,441,o),
(229,440,o),
(201,440,cs),
(60,440,ls),
(49,440,o),
(34,431,o),
(34,408,cs),
(34,385,o),
(51,376,o),
(60,376,cs),
(85,376,o),
(196,381,o),
(325,381,cs),
(340,381,o),
(354,394,o),
(354,415,cs),
(354,427,o),
(351,435,o),
(346,439,cs),
(340,443,o),
(336,445,o),
(333,445,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 0 3 4 2 3 91 0 0 0 1 0 1 87 0 5 5 4 83 6 1 4 4 15 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 3 4 2 3 91 6 1 4 0 5 0 4 5 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
30 29 41 34 29 49 30 45 36 38 36 37 7 30
CALL[ ]	/* CallFunction */";
};
width = 385;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(86.136,391,o),
(196.811,396,o),
(326,396,cs),
(340.667,396,o),
(345,408.333,o),
(345,415,cs),
(345,421.667,o),
(339.333,430,o),
(334,430,cs),
(318,429.333,o),
(299,428.333,o),
(277,427,cs),
(255,425.667,o),
(230,425,o),
(202,425,cs),
(61,425,ls),
(50.333,425,o),
(45,414.667,o),
(45,408,cs),
(45,401.333,o),
(51.667,391,o),
(61,391,cs)
);
},
{
closed = 1;
nodes = (
(226.333,219,o),
(242,239,o),
(242,259,cs),
(242,277.667,o),
(229.667,297,o),
(199,297,cs),
(167,297,o),
(155,274.333,o),
(155,257,cs),
(155,239.667,o),
(166.333,219,o),
(197,219,cs)
);
},
{
closed = 1;
nodes = (
(226.333,521,o),
(242,541,o),
(242,561,cs),
(242,579.667,o),
(229.667,599,o),
(199,599,cs),
(167,599,o),
(155,576.333,o),
(155,559,cs),
(155,541.667,o),
(166.333,521,o),
(197,521,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 0 3 4 2 3 91 0 0 0 1 0 1 87 0 5 5 4 83 6 1 4 4 15 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 3 4 2 3 91 6 1 4 0 5 0 4 5 91 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
25 24 36 29 24 44 25 40 36 36 36 34 7 19
CALL[ ]	/* CallFunction */";
};
width = 389;
}
);
note = divide;
unicode = 247;
},
{
glyphname = equal;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(299,325,o),
(280.667,324.5,o),
(260,323.5,cs),
(239.333,322.5,o),
(215,322,o),
(187,322,cs),
(149.274,322,o),
(110.916,324,o),
(86,324,cs),
(63.333,324,o),
(53,303.667,o),
(53,285,cs),
(53,266.333,o),
(67.333,245,o),
(86,245,cs),
(151.171,245,o),
(238.617,246,o),
(307,246,cs),
(335.782,246,o),
(343,272.801,o),
(343,288,cs),
(343,308,o),
(328.333,325,o),
(315,325,cs)
);
},
{
closed = 1;
nodes = (
(299,493,o),
(280.667,492.5,o),
(260,491.5,cs),
(239.333,490.5,o),
(215,490,o),
(187,490,cs),
(149.274,490,o),
(110.916,492,o),
(86,492,cs),
(63.333,492,o),
(53,471.667,o),
(53,453,cs),
(53,434.333,o),
(67.333,413,o),
(86,413,cs),
(151.171,413,o),
(238.617,414,o),
(307,414,cs),
(335.782,414,o),
(343,440.801,o),
(343,456,cs),
(343,476,o),
(328.333,493,o),
(315,493,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
4 1 0 0 1 0 1 87 0 3 3 2 83 5 1 2 2 23 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
5 1 2 0 3 0 2 3 91 4 1 0 1 1 0 79 4 1 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
28 27 1 0 41 34 27 53 28 45 14 7 0 26 1 18 6 15
CALL[ ]	/* CallFunction */";
};
width = 394;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(294,316,o),
(275.667,315.5,o),
(255,314.5,cs),
(234.333,313.5,o),
(210,313,o),
(182,313,cs),
(144.274,313,o),
(105.916,315,o),
(81,315,cs),
(62.333,315,o),
(55,299.667,o),
(55,285,cs),
(55,270.333,o),
(66.333,254,o),
(81,254,cs),
(146.171,254,o),
(233.617,255,o),
(302,255,cs),
(324.667,255,o),
(331,277.333,o),
(331,288,cs),
(331,302.667,o),
(320.667,316,o),
(310,316,cs)
);
},
{
closed = 1;
nodes = (
(294,484,o),
(275.667,483.5,o),
(255,482.5,cs),
(234.333,481.5,o),
(210,481,o),
(182,481,cs),
(144.274,481,o),
(105.916,483,o),
(81,483,cs),
(62.333,483,o),
(55,467.667,o),
(55,453,cs),
(55,438.333,o),
(66.333,422,o),
(81,422,cs),
(146.171,422,o),
(233.617,423,o),
(302,423,cs),
(324.667,423,o),
(331,445.333,o),
(331,456,cs),
(331,470.667,o),
(320.667,484,o),
(310,484,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
4 1 0 0 1 0 1 87 0 3 3 2 83 5 1 2 2 23 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
5 1 2 0 3 0 2 3 91 4 1 0 1 1 0 79 4 1 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
26 25 1 0 37 30 25 49 26 41 12 5 0 24 1 16 6 15
CALL[ ]	/* CallFunction */";
};
width = 385;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(139.171,437,o),
(226.617,438,o),
(295,438,cs),
(309.667,438,o),
(314,449.333,o),
(314,456,cs),
(314,462.667,o),
(308.333,469,o),
(303,469,cs),
(287,469,o),
(268.667,468.5,o),
(248,467.5,cs),
(227.333,466.5,o),
(203,466,o),
(175,466,cs),
(137.274,466,o),
(98.916,468,o),
(74,468,cs),
(63.333,468,o),
(58,459.667,o),
(58,453,cs),
(58,446.333,o),
(64.667,437,o),
(74,437,cs)
);
},
{
closed = 1;
nodes = (
(139.171,269,o),
(226.617,270,o),
(295,270,cs),
(309.667,270,o),
(314,281.333,o),
(314,288,cs),
(314,294.667,o),
(308.333,301,o),
(303,301,cs),
(287,301,o),
(268.667,300.5,o),
(248,299.5,cs),
(227.333,298.5,o),
(203,298,o),
(175,298,cs),
(137.274,298,o),
(98.916,300,o),
(74,300,cs),
(63.333,300,o),
(58,291.667,o),
(58,285,cs),
(58,278.333,o),
(64.667,269,o),
(74,269,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
4 1 0 0 1 0 1 87 0 3 3 2 83 5 1 2 2 23 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
5 1 2 0 3 0 2 3 91 4 1 0 1 1 0 79 4 1 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
26 25 1 0 37 30 25 49 26 41 12 5 0 24 1 16 6 15
CALL[ ]	/* CallFunction */";
};
width = 372;
}
);
note = equal;
unicode = 61;
},
{
glyphname = greater;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,472.853,o),
(127.258,417.571,o),
(151,378,c),
(135,351.333,o),
(108.5,326.167,o),
(86.5,305.5,cs),
(67.119,287.294,o),
(46,269.612,o),
(46,261,cs),
(46,255,o),
(49.667,252,o),
(57,252,cs),
(72.084,252,o),
(117.47,273.293,o),
(173,305.5,cs),
(227.002,336.821,o),
(265,365.216,o),
(265,378,cs),
(265,390.237,o),
(234.837,416.635,o),
(173,452.5,cs),
(118.447,484.141,o),
(71.699,505,o),
(57,505,cs),
(49.667,505,o),
(46,502,o),
(46,496,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
23 1 1 0 1 66 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 44 33 2 17
CALL[ ]	/* CallFunction */";
};
width = 299;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(49,472.853,o),
(130.258,417.571,o),
(154,378,c),
(138,351.333,o),
(111.5,326.167,o),
(89.5,305.5,cs),
(70.119,287.294,o),
(49,269.612,o),
(49,261,cs),
(49,255,o),
(52.667,252,o),
(60,252,cs),
(90.758,252,o),
(247,351.869,o),
(247,378,cs),
(247,389.313,o),
(219.445,417.091,o),
(164.5,452.5,cs),
(115.893,483.825,o),
(73.199,505,o),
(60,505,cs),
(52.667,505,o),
(49,502,o),
(49,496,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
21 1 1 0 1 66 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 42 33 2 17
CALL[ ]	/* CallFunction */";
};
width = 285;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(88.889,252,o),
(222,351.275,o),
(222,378,cs),
(222,406.146,o),
(89.798,505,o),
(65,505,cs),
(57.667,505,o),
(54,502,o),
(54,496,cs),
(54,472.853,o),
(135.258,417.571,o),
(159,378,c),
(143,351.333,o),
(116.5,326.167,o),
(94.5,305.5,cs),
(75.119,287.294,o),
(54,269.612,o),
(54,261,cs),
(54,255,o),
(57.667,252,o),
(65,252,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
19 1 1 0 1 66 0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 40 33 2 17
CALL[ ]	/* CallFunction */";
};
width = 265;
}
);
note = greater;
unicode = 62;
},
{
glyphname = less;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(254,502,o),
(250.333,505,o),
(243,505,cs),
(229.761,505,o),
(180.455,484.433,o),
(126.5,452.5,cs),
(65.216,416.23,o),
(35,390.212,o),
(35,378,cs),
(35,365.062,o),
(72.94,337.199,o),
(126.5,305.5,cs),
(182.429,272.399,o),
(228.171,252,o),
(243,252,cs),
(250.333,252,o),
(254,255,o),
(254,261,cs),
(254,269.612,o),
(232.881,287.294,o),
(213.5,305.5,cs),
(191.5,326.167,o),
(165,351.333,o),
(149,378,c),
(172.742,417.571,o),
(254,472.853,o),
(254,496,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
5 1 0 1 1 66 0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71 44 43 2 17
CALL[ ]	/* CallFunction */";
};
width = 299;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(236,502,o),
(232.333,505,o),
(225,505,cs),
(211.801,505,o),
(169.107,483.825,o),
(120.5,452.5,cs),
(65.555,417.091,o),
(38,389.313,o),
(38,378,cs),
(38,351.869,o),
(194.242,252,o),
(225,252,cs),
(232.333,252,o),
(236,255,o),
(236,261,cs),
(236,269.612,o),
(214.881,287.294,o),
(195.5,305.5,cs),
(173.5,326.167,o),
(147,351.333,o),
(131,378,c),
(154.742,417.571,o),
(236,472.853,o),
(236,496,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
5 1 0 1 1 66 0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71 42 43 2 17
CALL[ ]	/* CallFunction */";
};
width = 285;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(207.333,252,o),
(211,255,o),
(211,261,cs),
(211,269.612,o),
(189.881,287.294,o),
(170.5,305.5,cs),
(148.5,326.167,o),
(122,351.333,o),
(106,378,c),
(129.742,417.571,o),
(211,472.853,o),
(211,496,cs),
(211,502,o),
(207.333,505,o),
(200,505,cs),
(175.202,505,o),
(43,406.146,o),
(43,378,cs),
(43,351.275,o),
(176.111,252,o),
(200,252,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
5 1 0 1 1 66 0 1 0 0 1 79 0 1 1 0 83 0 0 1 0 71 40 43 2 17
CALL[ ]	/* CallFunction */";
};
width = 265;
}
);
note = less;
unicode = 60;
},
{
glyphname = plusminus;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(195,530.333,o),
(195.5,517.333,o),
(196.5,502,cs),
(197.5,486.667,o),
(198,469,o),
(198,449,c),
(104,449,ls),
(93.333,449,o),
(71,441.333,o),
(71,408,cs),
(71,374.882,o),
(93.112,367,o),
(104,367,cs),
(112.667,367,o),
(125.333,367.333,o),
(142,368,cs),
(158.667,368.667,o),
(176.667,369.333,o),
(196,370,c),
(194.667,339.333,o),
(193,294.667,o),
(193,276,cs),
(193,265.333,o),
(209.333,250,o),
(236,250,cs),
(252.667,250,o),
(264.5,253,o),
(271.5,259,cs),
(278.5,265,o),
(282,270.667,o),
(282,276,cs),
(282,370,l),
(369,370,ls),
(387.667,370,o),
(405,383,o),
(405,415,cs),
(405,431.667,o),
(401,442.333,o),
(393,447,cs),
(385,451.667,o),
(379.667,454,o),
(377,454,cs),
(365.667,454,o),
(352,453.167,o),
(336,451.5,cs),
(320,449.833,o),
(302,449,o),
(282,449,c),
(282,467,o),
(282.167,484.167,o),
(282.5,500.5,cs),
(282.833,516.833,o),
(283,530.333,o),
(283,541,cs),
(283,555.667,o),
(265,568,o),
(237,568,cs),
(211.667,568,o),
(195,555.667,o),
(195,541,cs)
);
},
{
closed = 1;
nodes = (
(361,234,o),
(342,233.167,o),
(320,231.5,cs),
(298,229.833,o),
(273,229,o),
(245,229,cs),
(104,229,ls),
(93.333,229,o),
(71,221.333,o),
(71,188,cs),
(71,157.721,o),
(93.291,147,o),
(104,147,cs),
(158.977,147,o),
(307.069,152,o),
(369,152,cs),
(383.667,152,o),
(405,164.333,o),
(405,195,cs),
(405,211.667,o),
(401,222.333,o),
(393,227,cs),
(385,231.667,o),
(379.667,234,o),
(377,234,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 0 4 7 0 4 91 9 10 2 7 0 8 7 8 87 5 1 3 3 1 83 6 2 2 1 1 15 3 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
6 2 2 1 5 1 3 4 1 3 91 0 0 0 4 7 0 4 91 9 10 2 7 8 8 7 79 9 10 2 7 7 8 83 0 8 7 8 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 2 0 1 1 2 96 10 1 7 4 9 9 7 96 6 1 1 5 1 3 4 1 3 92 0 0 0 4 7 0 4 91 0 9 8 8 9 79 0 9 9 8 84 0 8 9 8 72
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
45 44 65 62 56 49 44 66 45 66 38 69 35 36 33 21 34 11 22
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(187,529.667,o),
(187.5,515.5,o),
(188.5,498.5,cs),
(189.5,481.5,o),
(190,462,o),
(190,440,c),
(86,440,ls),
(75.333,440,o),
(60,430.667,o),
(60,408,cs),
(60,384,o),
(76.667,376,o),
(86,376,cs),
(95.333,376,o),
(109.333,376.333,o),
(128,377,cs),
(146.667,377.667,o),
(166.667,378.333,o),
(188,379,c),
(186.667,344.333,o),
(185,297.333,o),
(185,276,cs),
(185,265.333,o),
(199.333,254,o),
(218,254,cs),
(240.667,254,o),
(250.333,266.667,o),
(253,276,c),
(253,379,l),
(351,379,ls),
(365.667,379,o),
(380,392.333,o),
(380,415,cs),
(380,427,o),
(377.167,435,o),
(371.5,439,cs),
(365.833,443,o),
(361.667,445,o),
(359,445,cs),
(345.667,444.333,o),
(330.167,443.333,o),
(312.5,442,cs),
(294.833,440.667,o),
(275,440,o),
(253,440,c),
(253,460,o),
(253.167,479,o),
(253.5,497,cs),
(253.833,515,o),
(254,529.667,o),
(254,541,cs),
(254,555.667,o),
(237.667,565,o),
(219,565,cs),
(200.333,565,o),
(187,555.667,o),
(187,541,cs)
);
},
{
closed = 1;
nodes = (
(343,224.333,o),
(324,223.333,o),
(302,222,cs),
(280,220.667,o),
(255,220,o),
(227,220,cs),
(86,220,ls),
(75.333,220,o),
(60,210.667,o),
(60,188,cs),
(60,165.333,o),
(76.667,156,o),
(86,156,cs),
(111.136,156,o),
(221.811,161,o),
(351,161,cs),
(365.667,161,o),
(380,173.667,o),
(380,195,cs),
(380,207,o),
(377.167,215,o),
(371.5,219,cs),
(365.833,223,o),
(361.667,225,o),
(359,225,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 4 3 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 0 0 4 7 0 4 91 9 1 7 0 8 7 8 87 5 1 3 3 1 83 6 2 2 1 1 15 3 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
6 2 2 1 5 1 3 4 1 3 91 0 0 0 4 7 0 4 91 9 1 7 8 8 7 79 9 1 7 7 8 83 0 8 7 8 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
43 42 54 47 42 62 43 58 36 69 35 36 33 21 34 10 22
CALL[ ]	/* CallFunction */";
};
width = 441;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(198.667,260,o),
(210.667,266.667,o),
(212,276,c),
(212,394,l),
(325,394,l),
(339.667,396.667,o),
(344,408.333,o),
(344,415,cs),
(344,421.667,o),
(338.333,430,o),
(333,430,cs),
(317.667,429.333,o),
(300,428.333,o),
(280,427,cs),
(260,425.667,o),
(237.333,425,o),
(212,425,c),
(212,448.333,o),
(212.167,470.167,o),
(212.5,490.5,cs),
(212.833,510.833,o),
(213,527.667,o),
(213,541,cs),
(213,555.667,o),
(199.667,560,o),
(193,560,cs),
(186.333,560,o),
(176,555.667,o),
(176,541,cs),
(176,527.667,o),
(176.5,511.333,o),
(177.5,492,cs),
(178.5,472.667,o),
(179,450.333,o),
(179,425,c),
(60,425,ls),
(49.333,425,o),
(44,414.667,o),
(44,408,cs),
(44,401.333,o),
(50.667,391,o),
(60,391,cs),
(71.333,391,o),
(87.5,391.333,o),
(108.5,392,cs),
(129.5,392.667,o),
(152.333,393.333,o),
(177,394,c),
(177,353.409,o),
(174,316.45,o),
(174,276,cs),
(174,265.333,o),
(185.333,260,o),
(192,260,cs)
);
},
{
closed = 1;
nodes = (
(85.136,171,o),
(195.811,176,o),
(325,176,cs),
(339.667,176,o),
(344,188.333,o),
(344,195,cs),
(344,201.667,o),
(338.333,210,o),
(333,210,cs),
(317,209.333,o),
(298,208.333,o),
(276,207,cs),
(254,205.667,o),
(229,205,o),
(201,205,cs),
(60,205,ls),
(49.333,205,o),
(44,194.667,o),
(44,188,cs),
(44,181.333,o),
(50.667,171,o),
(60,171,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 3 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 0 0 3 6 0 3 91 8 1 6 0 7 6 7 87 4 1 2 2 1 83 5 1 1 1 15 2 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
5 1 1 4 1 2 3 1 2 91 0 0 0 3 6 0 3 91 8 1 6 7 7 6 79 8 1 6 6 7 83 0 7 6 7 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
45 44 56 49 44 64 45 60 36 71 35 21 69 34 9 21
CALL[ ]	/* CallFunction */";
};
width = 390;
}
);
note = plusminus;
unicode = 177;
},
{
glyphname = asciitilde;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(47,514,o),
(54,498,o),
(66,498,cs),
(86.593,498,o),
(110.709,523,o),
(150,523,cs),
(188.662,523,o),
(231.294,499,o),
(287,499,cs),
(319.676,499,o),
(398,516.584,o),
(398,574,cs),
(398,595.333,o),
(382.667,609,o),
(376,609,cs),
(371.333,609,o),
(361.333,604.667,o),
(346,596,cs),
(327.333,585.333,o),
(304.667,579,o),
(286,579,cs),
(246.599,579,o),
(185.495,607,o),
(149,607,cs),
(124.333,607,o),
(101.667,601,o),
(81,589,cs),
(62.333,578.333,o),
(47,563.333,o),
(47,534,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 4 3 1 79 2 1 0 0 4 3 0 4 91 0 1 1 3 83 5 1 3 1 3 71 35 35 38 35 35 36 6 21
CALL[ ]	/* CallFunction */";
};
width = 441;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(41,546.667,o),
(40,541,o),
(40,535,cs),
(40,520.333,o),
(46.333,507,o),
(57,507,cs),
(73.95,507,o),
(101.392,532,o),
(141,532,cs),
(179.662,532,o),
(222.294,508,o),
(278,508,cs),
(334,508,o),
(366.667,530.333,o),
(380,553,cs),
(383.333,559,o),
(385,565.333,o),
(385,572,cs),
(385,588,o),
(373.667,600,o),
(367,600,cs),
(363.667,600,o),
(360.167,599.167,o),
(356.5,597.5,cs),
(352.833,595.833,o),
(346.333,592.333,o),
(337,587,cs),
(314.333,575.667,o),
(294.333,570,o),
(277,570,cs),
(237.599,570,o),
(176.495,598,o),
(140,598,cs),
(115.333,598,o),
(92.667,592,o),
(72,580,cs),
(62,574,o),
(55,568.667,o),
(51,564,cs),
(47,559.333,o),
(44.333,555.333,o),
(43,552,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 4 3 1 79 2 1 0 0 4 3 0 4 91 0 1 1 3 83 5 1 3 1 3 71 35 35 38 35 35 37 6 32
CALL[ ]	/* CallFunction */";
};
width = 423;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(59.791,522,o),
(86.735,547,o),
(128,547,cs),
(166.662,547,o),
(209.294,523,o),
(265,523,cs),
(317.947,523,o),
(367,542.797,o),
(367,568,cs),
(367,577.333,o),
(360.667,585,o),
(354,585,cs),
(350.667,585,o),
(347.167,584.167,o),
(343.5,582.5,cs),
(339.833,580.833,o),
(333.333,577.333,o),
(324,572,cs),
(301.333,560.667,o),
(281.333,555,o),
(264,555,cs),
(224.599,555,o),
(163.495,583,o),
(127,583,cs),
(102.333,583,o),
(79.667,577,o),
(59,565,cs),
(39.667,553.667,o),
(30,544.333,o),
(30,537,cs),
(30,530.333,o),
(37.333,522,o),
(44,522,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 4 3 1 79 2 1 0 0 4 3 0 4 91 0 1 1 3 83 5 1 3 1 3 71 35 35 38 35 35 36 6 32
CALL[ ]	/* CallFunction */";
};
width = 398;
}
);
note = asciitilde;
unicode = 126;
},
{
glyphname = logicalnot;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(60,310,o),
(43,302.333,o),
(43,269,cs),
(43,246.333,o),
(60.333,227,o),
(79,227,cs),
(215,227,ls),
(234.333,227,o),
(246,226,o),
(250,224,cs),
(254,222,o),
(256,219,o),
(256,215,cs),
(256,183,ls),
(256,165.667,o),
(260,145,o),
(300,145,cs),
(321.333,145,o),
(331.333,152.667,o),
(338,162,cs),
(341.333,167.333,o),
(343.333,173.333,o),
(344,180,cs),
(344,252,ls),
(344,301.333,o),
(318,311,o),
(290,311,cs),
(291.768,311,o),
(238.139,308,o),
(189,308,cs),
(167.357,308,o),
(80,310,o),
(80,310,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 1 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
16
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 1 2 2 1 95 4 3 2 0 2 2 0 79 4 3 2 0 0 2 83 0 2 0 2 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 2 1 107 4 3 2 0 2 2 0 79 4 3 2 0 0 2 83 0 2 0 2 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 32 0 32 53 39 161 5 18
CALL[ ]	/* CallFunction */";
};
width = 401;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(64.333,301,o),
(49,297,o),
(49,269,cs),
(49,250.333,o),
(63.333,236,o),
(78,236,cs),
(225,236,ls),
(244.333,236,o),
(256,234.167,o),
(260,230.5,cs),
(264,226.833,o),
(266,221.667,o),
(266,215,cs),
(266,183,ls),
(266,172.223,o),
(266,151,o),
(299,151,cs),
(315,151,o),
(322.667,158.333,o),
(328,165,cs),
(330.667,169,o),
(332.333,174,o),
(333,180,c),
(333,252,ls),
(333,299.559,o),
(305.914,302,o),
(289,302,cs),
(290.768,302,o),
(237.139,299,o),
(188,299,cs),
(166.357,299,o),
(79,301,o),
(79,301,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
16 1 1 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 1 2 2 1 95 4 3 2 0 2 2 0 79 4 3 2 0 0 2 83 0 2 0 2 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 2 1 107 4 3 2 0 2 2 0 79 4 3 2 0 0 2 83 0 2 0 2 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 36 0 36 55 41 161 5 18
CALL[ ]	/* CallFunction */";
};
width = 390;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(305.333,161,o),
(310.667,164,o),
(314,170,cs),
(315.333,172.667,o),
(316.333,176,o),
(317,180,c),
(317,252,ls),
(317,286.667,o),
(298.667,287,o),
(288,287,cs),
(289.768,287,o),
(236.139,284,o),
(187,284,cs),
(165.357,284,o),
(78,286,o),
(78,286,c),
(68.667,286,o),
(58,283.667,o),
(58,269,cs),
(58,258.333,o),
(67.667,251,o),
(77,251,cs),
(239,251,ls),
(277.667,251,o),
(280,237.667,o),
(280,215,cs),
(280,183,ls),
(280,176.333,o),
(279.333,161,o),
(298,161,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 1 2 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 1 2 2 1 95 4 3 2 0 2 2 0 79 4 3 2 0 0 2 83 0 2 0 2 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 2 1 107 4 3 2 0 2 2 0 79 4 3 2 0 0 2 83 0 2 0 2 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 31 0 31 53 38 161 5 18
CALL[ ]	/* CallFunction */";
};
width = 375;
}
);
note = logicalnot;
unicode = 172;
},
{
glyphname = asciicircum;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(286.333,510,o),
(290,520.333,o),
(290,531,cs),
(290,571.963,o),
(180.877,664,o),
(157,664,cs),
(146,664,o),
(110.897,638.643,o),
(84,613.5,cs),
(53.333,584.833,o),
(25,549.333,o),
(25,524,cs),
(25,517.333,o),
(30,510,o),
(38,510,cs),
(50.064,510,o),
(107.718,545.91,o),
(157,572,c),
(228.614,534.087,o),
(265.803,510,o),
(277,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
5 1 0 2 1 66 0 2 0 2 106 1 3 2 0 0 97 1 0 19 17 11 9 0 25 1 25 4 15
CALL[ ]	/* CallFunction */";
};
width = 315;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(285,510,o),
(288,517.667,o),
(288,527,cs),
(288,562.213,o),
(181.595,655,o),
(157,655,cs),
(134.925,655,o),
(27,563.906,o),
(27,523,cs),
(27,514.333,o),
(30.667,510,o),
(38,510,cs),
(52.506,510,o),
(84.117,538.127,o),
(157,581,c),
(169.77,573.488,o),
(264.478,510,o),
(277,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
6 1 0 2 1 66 0 2 0 2 106 1 3 2 0 0 97 2 1 19 17 12 10 1 25 2 25 4 26
CALL[ ]	/* CallFunction */";
};
width = 315;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(52.084,510,o),
(104.433,558.894,o),
(157,596,c),
(233.411,542.063,o),
(262.302,510,o),
(277,510,cs),
(282.333,510,o),
(285,513.667,o),
(285,521,cs),
(285,546.329,o),
(181.852,640,o),
(157,640,cs),
(133.626,640,o),
(30,545.933,o),
(30,521,cs),
(30,513.667,o),
(32.667,510,o),
(38,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
6 1 0 2 1 66 0 2 0 2 106 1 3 2 0 0 97 2 1 19 17 12 10 1 24 2 24 4 26
CALL[ ]	/* CallFunction */";
};
width = 315;
}
);
note = asciicircum;
unicode = 94;
},
{
glyphname = micro;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(475,107.014,o),
(406.661,58,o),
(341,58,cs),
(282.941,58,o),
(242,123.916,o),
(242,206,cs),
(242,267.333,o),
(242.667,315.667,o),
(244,351,cs),
(245.333,386.333,o),
(246,411.667,o),
(246,427,cs),
(246,468.333,o),
(240,472,o),
(212,472,cs),
(82.667,472,o),
(18,458.333,o),
(18,431,cs),
(18,415.667,o),
(29.333,408,o),
(52,408,cs),
(119,408,ls),
(149.667,408,o),
(151,400.667,o),
(151,370,cs),
(151,322,o),
(151.5,276.667,o),
(152.5,234,cs),
(153.5,191.333,o),
(154,151.667,o),
(154,115,cs),
(154,-1,o),
(152.667,-93,o),
(150,-177,cs),
(150,-194.333,o),
(161.333,-217,o),
(200,-217,cs),
(236,-217,o),
(244,-194,o),
(244,-174,cs),
(244,-142,o),
(243.5,-109.833,o),
(242.5,-77.5,cs),
(241.5,-45.167,o),
(240.667,-10.667,o),
(240,26,c),
(249.333,-8.667,o),
(284.333,-20,o),
(319,-20,cs),
(411.536,-20,o),
(456.786,37.083,o),
(476,81,c),
(476.667,41.667,o),
(478.333,14.667,o),
(481,0,cs),
(483.667,-14.667,o),
(488.667,-22,o),
(496,-22,cs),
(552,-22,o),
(591.5,-18.5,o),
(614.5,-11.5,cs),
(637.5,-4.5,o),
(649,6,o),
(649,20,cs),
(649,37.803,o),
(619.987,42,o),
(609,42,cs),
(606.333,42,o),
(602.667,41.833,o),
(598,41.5,cs),
(593.333,41.167,o),
(590.333,41,o),
(589,41,cs),
(570.333,41,o),
(568,43.333,o),
(568,62,cs),
(568,64,o),
(567.833,72,o),
(567.5,86,cs),
(567.167,100,o),
(567,123.333,o),
(567,156,cs),
(567,265.943,o),
(570,345.993,o),
(570,383,cs),
(570,430.744,o),
(552.149,432,o),
(476,432,cs),
(407.975,432,o),
(334,428.113,o),
(334,395,cs),
(334,373.667,o),
(363.667,368,o),
(385,368,cs),
(451,368,ls),
(477.667,368,o),
(478,352.333,o),
(478,327,cs),
(475,172,l),
(475,172,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
42 1 9 0 50 1 4 2 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
3 1 2 9 4 9 2 4 104 0 7 7 8 83 0 8 8 23 67 0 0 0 1 83 0 1 1 15 67 0 9 9 4 83 5 1 4 4 21 67 0 6 6 17 6 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
3 1 2 9 4 9 2 4 104 0 6 4 6 107 0 8 0 7 0 8 7 91 0 1 0 0 9 1 0 91 0 9 9 4 83 5 1 4 4 21 4 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
85 83 34 58 39 38 38 33 45 69 50 10 24
CALL[ ]	/* CallFunction */";
};
width = 671;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(471,97.26,o),
(398.979,40,o),
(325,40,cs),
(246.843,40,o),
(217,122.45,o),
(217,206,cs),
(217,267.333,o),
(217.667,315.667,o),
(219,351,cs),
(220.333,386.333,o),
(221,411.667,o),
(221,427,cs),
(221,468.333,o),
(215,472,o),
(187,472,cs),
(155.206,472,o),
(21,471.678,o),
(21,439,cs),
(21,428.333,o),
(36,420,o),
(48,420,cs),
(115,420,ls),
(145.667,420,o),
(147,412.667,o),
(147,382,cs),
(147.667,331.333,o),
(148.333,283.833,o),
(149,239.5,cs),
(149.667,195.167,o),
(150,153.667,o),
(150,115,cs),
(150,-1,o),
(148.667,-93,o),
(146,-177,cs),
(146,-194.333,o),
(158.333,-211,o),
(185,-211,cs),
(211.667,-211,o),
(219,-194,o),
(219,-174,cs),
(219,-142,o),
(218.5,-108.833,o),
(217.5,-74.5,cs),
(216.5,-40.167,o),
(215.667,-4.667,o),
(215,32,c),
(231,-2.667,o),
(269,-20,o),
(313,-20,cs),
(408.285,-20,o),
(453.527,38.776,o),
(472,81,c),
(472.667,41.667,o),
(474.333,14.667,o),
(477,0,cs),
(479.667,-14.667,o),
(484.667,-22,o),
(492,-22,cs),
(535.05,-22,o),
(638,-21.605,o),
(638,9,cs),
(638,27.667,o),
(613,30,o),
(601,30,cs),
(593,30,o),
(586.5,29.833,o),
(581.5,29.5,cs),
(576.5,29.167,o),
(573,29,o),
(571,29,cs),
(548.333,29,o),
(543,28.667,o),
(543,50,cs),
(543,52.667,o),
(542.833,61.833,o),
(542.5,77.5,cs),
(542.167,93.167,o),
(542,119.333,o),
(542,156,cs),
(542,265.943,o),
(545,345.993,o),
(545,383,cs),
(545,430.344,o),
(530.134,432,o),
(472,432,cs),
(417.564,432,o),
(337,429.12,o),
(337,401,cs),
(337,385,o),
(359.667,380,o),
(381,380,cs),
(447,380,ls),
(473.667,380,o),
(474,365.667,o),
(474,339,cs),
(471,172,l),
(471,172,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
42 1 8 0 50 1 2 8 2 66
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 7 values pushed */
50 42 2 2 0 1 66
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
42 1 8 0 50 1 2 8 2 66
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 8 3 8 2 3 104 0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 0 8 8 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 1 2 2 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 7 0 6 0 7 6 91 0 1 0 0 2 1 0 91 8 1 2 2 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 8 3 8 2 3 104 0 7 0 6 0 7 6 91 0 1 0 0 8 1 0 91 0 8 8 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 2 8 3 8 2 3 104 0 5 3 5 107 0 7 0 6 0 7 6 91 0 1 0 0 8 1 0 91 0 8 8 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
41 53 58 39 38 53 94 53 50 9 24
CALL[ ]	/* CallFunction */";
};
width = 660;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(176.333,-201,o),
(183,-194,o),
(183,-174,cs),
(183,-142,o),
(182.5,-107.167,o),
(181.5,-69.5,cs),
(180.5,-31.833,o),
(179.667,5.333,o),
(179,42,c),
(205.667,7.333,o),
(246.333,-20,o),
(305,-20,cs),
(398.834,-20,o),
(446.808,37.133,o),
(466,81,c),
(466.667,41.667,o),
(468.333,14.667,o),
(471,0,cs),
(473.667,-14.667,o),
(478.667,-22,o),
(486,-22,cs),
(510.534,-22,o),
(622,-23.215,o),
(622,-1,cs),
(622,7,o),
(607,10,o),
(595,10,cs),
(579,10,o),
(566,9.833,o),
(556,9.5,cs),
(546,9.167,o),
(539,9,o),
(535,9,cs),
(512.333,9,o),
(507,16.667,o),
(507,30,cs),
(507,33.333,o),
(506.833,44.167,o),
(506.5,62.5,cs),
(506.167,80.833,o),
(506,112,o),
(506,156,cs),
(506,265.943,o),
(509,345.993,o),
(509,383,cs),
(509,427.927,o),
(502.12,432,o),
(466,432,cs),
(384.015,432,o),
(341,424.364,o),
(341,411,cs),
(341,403.667,o),
(352.333,400,o),
(375,400,cs),
(441,400,ls),
(463.667,400,o),
(468,395,o),
(468,359,cs),
(465,172,ls),
(465,84.242,o),
(391.373,10,o),
(302,10,cs),
(197.543,10,o),
(181,109.273,o),
(181,206,cs),
(181,267.333,o),
(181.667,315.667,o),
(183,351,cs),
(184.333,386.333,o),
(185,411.667,o),
(185,427,cs),
(185,468.333,o),
(179,472,o),
(151,472,cs),
(69.728,472,o),
(25,463.573,o),
(25,452,cs),
(25,448,o),
(30,440,o),
(42,440,cs),
(109,440,ls),
(139.667,440,o),
(141,432.667,o),
(141,402,cs),
(141.667,347.333,o),
(142.333,296.333,o),
(143,249,cs),
(143.667,201.667,o),
(144,157,o),
(144,115,cs),
(144,-1,o),
(142.667,-93,o),
(140,-177,cs),
(140,-194.333,o),
(152.333,-201,o),
(163,-201,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
49 41 2 2 0 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 6 6 7 83 0 7 7 23 67 0 0 0 1 83 0 1 1 15 67 8 1 2 2 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 7 0 6 1 7 6 91 0 1 0 0 2 1 0 91 8 1 2 2 3 83 4 1 3 3 21 67 0 5 5 17 5 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 5 3 5 107 0 7 0 6 1 7 6 91 0 1 0 0 2 1 0 91 8 1 2 2 3 83 4 1 3 3 21 3 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
41 53 58 39 38 53 94 52 50 9 24
CALL[ ]	/* CallFunction */";
};
width = 644;
}
);
note = mu;
unicode = 181;
},
{
glyphname = percent;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,421.289,o),
(90.375,372,o),
(153,372,cs),
(233.252,372,o),
(283.036,437.94,o),
(291,499,cs),
(292.333,507,o),
(293,512.333,o),
(293,519,c),
(306.333,511,o),
(337.333,504,o),
(360,504,cs),
(373.333,504,o),
(389.333,504.333,o),
(400,507,c),
(400,503.607,o),
(329.929,375.955,o),
(277,277,cs),
(222.943,175.936,o),
(155,47.381,o),
(155,37,cs),
(155,26.333,o),
(167,14,o),
(191,14,cs),
(219,14,o),
(235,32.667,o),
(239,42,cs),
(247.954,62.467,o),
(310.787,185.265,o),
(407.5,364,cs),
(490.895,518.122,o),
(555,644.497,o),
(555,650,cs),
(555,652.667,o),
(553.333,656.667,o),
(550,662,cs),
(546.667,667.333,o),
(536.667,670,o),
(520,670,cs),
(488.736,670,o),
(461.258,604.256,o),
(432,584,cs),
(417.333,573.333,o),
(401,571,o),
(385,571,cs),
(317.227,571,o),
(289.662,593.338,o),
(266.5,616.5,cs),
(243.602,639.398,o),
(215.886,662,o),
(150,662,cs),
(88.971,662,o),
(28,603.424,o),
(28,513,cs)
);
},
{
closed = 1;
nodes = (
(329,51.341,o),
(373.442,-19,o),
(458,-19,cs),
(542,-19,o),
(588,37,o),
(588,125,cs),
(588,206.455,o),
(551.854,266,o),
(463,266,cs),
(388.351,266,o),
(329,207.362,o),
(329,122,cs)
);
},
{
closed = 1;
nodes = (
(402,172,o),
(424.667,195,o),
(462,195,cs),
(486,195,o),
(512,178.667,o),
(512,128,cs),
(512,91.938,o),
(496.19,52,o),
(456,52,cs),
(412.992,52,o),
(402,90.161,o),
(402,124,cs)
);
},
{
closed = 1;
nodes = (
(102,567.897,o),
(130.894,591,o),
(154,591,cs),
(184.667,591,o),
(219,571.667,o),
(219,521,cs),
(219,473,o),
(198.333,443,o),
(157,443,cs),
(125,443,o),
(102,474.333,o),
(102,513,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
51 45 2 4 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 6 0 9 8 6 9 91 0 5 5 10 83 0 10 10 15 67 0 3 3 13 67 0 8 8 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 0 6 0 9 8 6 9 91 0 3 3 13 67 0 8 8 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 2 0 2 106 0 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 0 6 0 9 8 6 9 91 0 3 3 13 67 0 8 8 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 2 0 2 106 0 3 8 7 8 3 7 104 0 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 0 6 0 9 8 6 9 91 0 8 8 7 84 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
108 106 102 100 96 94 40 38 40 41 60 43 38 37 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 632;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(29,416.357,o),
(95.059,372,o),
(149,372,cs),
(216.911,372,o),
(276,435.529,o),
(276,526,cs),
(276,527.333,o),
(275.833,529.167,o),
(275.5,531.5,cs),
(275.167,533.833,o),
(275,535.667,o),
(275,537,c),
(309.667,523.667,o),
(340,520,o),
(384,520,cs),
(398.667,520,o),
(405.333,520.333,o),
(420,523,c),
(420,520.712,o),
(376.426,442.04,o),
(292,285.5,cs),
(208.782,131.199,o),
(165,43.579,o),
(165,37,cs),
(165,26.333,o),
(174.333,17,o),
(193,17,cs),
(215.667,17,o),
(225.333,31.333,o),
(232,42,c),
(245.851,75.243,o),
(296.823,171.756,o),
(399.5,364.5,cs),
(497.341,548.166,o),
(547,643.078,o),
(547,650,cs),
(547,652.667,o),
(545.5,656,o),
(542.5,660,cs),
(539.5,664,o),
(532.333,666,o),
(521,666,cs),
(493.254,666,o),
(473.615,607.711,o),
(442,584,cs),
(426,573.333,o),
(404.667,571,o),
(386,571,cs),
(318,571,o),
(281.765,591.416,o),
(254.5,616.5,cs),
(228.691,640.244,o),
(205.378,662,o),
(151,662,cs),
(89.971,662,o),
(29,603.424,o),
(29,513,cs)
);
},
{
closed = 1;
nodes = (
(347,49.89,o),
(390.658,-19,o),
(467,-19,cs),
(543,-19,o),
(589,37,o),
(589,125,cs),
(589,202.841,o),
(553.623,266,o),
(472,266,cs),
(400.253,266,o),
(347,205.913,o),
(347,122,cs)
);
},
{
closed = 1;
nodes = (
(403,182.667,o),
(432.667,210,o),
(470,210,cs),
(498,210,o),
(530,189.333,o),
(530,128,cs),
(530,87.207,o),
(512.369,37,o),
(465,37,cs),
(411.23,37,o),
(403,95.845,o),
(403,124,cs)
);
},
{
closed = 1;
nodes = (
(85,584.048,o),
(126.499,606,o),
(152,606,cs),
(184,606,o),
(220,582.333,o),
(220,521,cs),
(220,462.333,o),
(188.667,428,o),
(146,428,cs),
(107.333,428,o),
(85,466.333,o),
(85,513,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
53 47 2 4 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 6 0 9 8 6 9 91 0 5 5 10 83 0 10 10 15 67 0 3 3 13 67 0 8 8 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 0 6 0 9 8 6 9 91 0 3 3 13 67 0 8 8 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 3 8 7 8 3 7 104 2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 0 6 0 9 8 6 9 91 0 8 8 7 84 0 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
110 108 104 102 98 96 40 38 40 41 45 45 38 37 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 633;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(210.667,22,o),
(216,31.333,o),
(220,42,cs),
(233.851,75.243,o),
(284.823,171.756,o),
(387.5,364.5,cs),
(485.341,548.166,o),
(535,643.078,o),
(535,650,cs),
(535,656.667,o),
(530.667,660,o),
(522,660,cs),
(496.286,660,o),
(485.954,603.062,o),
(456,584,cs),
(437.333,570.667,o),
(411,571,o),
(387,571,cs),
(226.923,571,o),
(227.107,662,o),
(152,662,cs),
(90.971,662,o),
(30,603.424,o),
(30,513,cs),
(30,421.757,o),
(92.769,372,o),
(144,372,cs),
(204.444,372,o),
(252,438.637,o),
(252,526,cs),
(252,539.333,o),
(251.667,562,o),
(241,582,c),
(283.667,554,o),
(330.333,545,o),
(385,545,cs),
(402.333,545,o),
(430.333,547.333,o),
(449,550,c),
(449,547.716,o),
(403.847,464.25,o),
(313.5,299.5,cs),
(223.992,136.28,o),
(179,43.737,o),
(179,37,cs),
(179,27,o),
(184.667,22,o),
(196,22,cs)
);
},
{
closed = 1;
nodes = (
(542.667,-19,o),
(590,37,o),
(590,125,cs),
(590,203.681,o),
(552.225,266,o),
(485,266,cs),
(419.667,266,o),
(373,207.333,o),
(373,122,cs),
(373,48.885,o),
(411.997,-19,o),
(480,-19,cs)
);
},
{
closed = 1;
nodes = (
(420.195,12,o),
(404,83.029,o),
(404,124,cs),
(404,198.667,o),
(443.667,235,o),
(481,235,cs),
(518.125,235,o),
(556,203.34,o),
(556,128,cs),
(556,74.213,o),
(532.706,12,o),
(478,12,cs)
);
},
{
closed = 1;
nodes = (
(94.135,403,o),
(61,451.336,o),
(61,513,cs),
(61,597.16,o),
(110.031,631,o),
(149,631,cs),
(186.452,631,o),
(221,597.592,o),
(221,521,cs),
(221,446.333,o),
(186.333,403,o),
(141,403,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
49 1 1 11 43 1 4 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 0 6 0 9 3 6 9 91 0 3 3 13 67 0 8 8 7 84 0 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 3 9 8 9 3 8 104 2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 0 6 0 9 3 6 9 91 0 8 8 7 84 0 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
110 108 102 100 94 92 40 38 38 41 44 44 38 35 36 12 24
CALL[ ]	/* CallFunction */";
};
width = 634;
}
);
note = percent;
unicode = 37;
},
{
glyphname = perthousand;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(33,421.289,o),
(95.375,372,o),
(158,372,cs),
(238.252,372,o),
(288.036,437.94,o),
(296,499,cs),
(297.333,507,o),
(298,512.333,o),
(298,519,c),
(311.333,511,o),
(342.333,504,o),
(365,504,cs),
(378.333,504,o),
(394.333,504.333,o),
(405,507,c),
(405,503.607,o),
(334.929,375.955,o),
(282,277,cs),
(227.943,175.936,o),
(160,47.381,o),
(160,37,cs),
(160,26.333,o),
(172,14,o),
(196,14,cs),
(224,14,o),
(240,32.667,o),
(244,42,cs),
(252.954,62.467,o),
(315.787,185.265,o),
(412.5,364,cs),
(495.895,518.122,o),
(560,644.497,o),
(560,650,cs),
(560,652.667,o),
(558.333,656.667,o),
(555,662,cs),
(551.667,667.333,o),
(541.667,670,o),
(525,670,cs),
(493.736,670,o),
(466.258,604.256,o),
(437,584,cs),
(422.333,573.333,o),
(406,571,o),
(390,571,cs),
(322.227,571,o),
(294.662,593.338,o),
(271.5,616.5,cs),
(248.602,639.398,o),
(220.886,662,o),
(155,662,cs),
(93.971,662,o),
(33,603.424,o),
(33,513,cs)
);
},
{
closed = 1;
nodes = (
(334,51.341,o),
(378.442,-19,o),
(463,-19,cs),
(547,-19,o),
(593,37,o),
(593,125,cs),
(593,206.455,o),
(556.854,266,o),
(468,266,cs),
(393.351,266,o),
(334,207.362,o),
(334,122,cs)
);
},
{
closed = 1;
nodes = (
(407,172,o),
(429.667,195,o),
(467,195,cs),
(491,195,o),
(517,178.667,o),
(517,128,cs),
(517,91.938,o),
(501.19,52,o),
(461,52,cs),
(417.992,52,o),
(407,90.161,o),
(407,124,cs)
);
},
{
closed = 1;
nodes = (
(107,567.897,o),
(135.894,591,o),
(159,591,cs),
(189.667,591,o),
(224,571.667,o),
(224,521,cs),
(224,473,o),
(203.333,443,o),
(162,443,cs),
(130,443,o),
(107,474.333,o),
(107,513,cs)
);
},
{
closed = 1;
nodes = (
(643,51.341,o),
(687.442,-19,o),
(772,-19,cs),
(856,-19,o),
(902,37,o),
(902,125,cs),
(902,206.455,o),
(865.854,266,o),
(777,266,cs),
(702.351,266,o),
(643,207.362,o),
(643,122,cs)
);
},
{
closed = 1;
nodes = (
(716,172,o),
(738.667,195,o),
(776,195,cs),
(800,195,o),
(826,178.667,o),
(826,128,cs),
(826,91.938,o),
(810.19,52,o),
(770,52,cs),
(726.992,52,o),
(716,90.161,o),
(716,124,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
51 45 2 4 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 12 1 6 15 1 9 8 6 9 91 0 5 5 10 83 0 10 10 15 67 0 3 3 13 67 14 1 8 8 7 84 13 1 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 12 1 6 15 1 9 8 6 9 91 0 3 3 13 67 14 1 8 8 7 84 13 1 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 2 0 2 106 0 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 12 1 6 15 1 9 8 6 9 91 0 3 3 13 67 14 1 8 8 7 84 13 1 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 2 0 2 106 0 3 8 7 8 3 7 104 0 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 12 1 6 15 1 9 8 6 9 91 14 1 8 8 7 84 13 1 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
144 142 136 134 126 124 118 116 108 106 102 100 96 94 40 38 40 41 60 43 38 37 36 16 24
CALL[ ]	/* CallFunction */";
};
width = 928;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(33,416.357,o),
(99.059,372,o),
(153,372,cs),
(220.911,372,o),
(280,435.529,o),
(280,526,cs),
(280,527.333,o),
(279.833,529.167,o),
(279.5,531.5,cs),
(279.167,533.833,o),
(279,535.667,o),
(279,537,c),
(313.667,523.667,o),
(344,520,o),
(388,520,cs),
(402.667,520,o),
(409.333,520.333,o),
(424,523,c),
(424,520.712,o),
(380.426,442.04,o),
(296,285.5,cs),
(212.782,131.199,o),
(169,43.579,o),
(169,37,cs),
(169,26.333,o),
(178.333,17,o),
(197,17,cs),
(219.667,17,o),
(229.333,31.333,o),
(236,42,c),
(249.851,75.243,o),
(300.823,171.756,o),
(403.5,364.5,cs),
(501.341,548.166,o),
(551,643.078,o),
(551,650,cs),
(551,652.667,o),
(549.5,656,o),
(546.5,660,cs),
(543.5,664,o),
(536.333,666,o),
(525,666,cs),
(497.254,666,o),
(477.615,607.711,o),
(446,584,cs),
(430,573.333,o),
(408.667,571,o),
(390,571,cs),
(322,571,o),
(285.765,591.416,o),
(258.5,616.5,cs),
(232.691,640.244,o),
(209.378,662,o),
(155,662,cs),
(93.971,662,o),
(33,603.424,o),
(33,513,cs)
);
},
{
closed = 1;
nodes = (
(351,49.89,o),
(394.658,-19,o),
(471,-19,cs),
(547,-19,o),
(593,37,o),
(593,125,cs),
(593,202.841,o),
(557.623,266,o),
(476,266,cs),
(404.253,266,o),
(351,205.913,o),
(351,122,cs)
);
},
{
closed = 1;
nodes = (
(407,182.667,o),
(436.667,210,o),
(474,210,cs),
(502,210,o),
(534,189.333,o),
(534,128,cs),
(534,87.207,o),
(516.369,37,o),
(469,37,cs),
(415.23,37,o),
(407,95.845,o),
(407,124,cs)
);
},
{
closed = 1;
nodes = (
(89,584.048,o),
(130.499,606,o),
(156,606,cs),
(188,606,o),
(224,582.333,o),
(224,521,cs),
(224,462.333,o),
(192.667,428,o),
(150,428,cs),
(111.333,428,o),
(89,466.333,o),
(89,513,cs)
);
},
{
closed = 1;
nodes = (
(658,49.89,o),
(701.658,-19,o),
(778,-19,cs),
(854,-19,o),
(900,37,o),
(900,125,cs),
(900,202.841,o),
(864.623,266,o),
(783,266,cs),
(711.253,266,o),
(658,205.913,o),
(658,122,cs)
);
},
{
closed = 1;
nodes = (
(714,182.667,o),
(743.667,210,o),
(781,210,cs),
(809,210,o),
(841,189.333,o),
(841,128,cs),
(841,87.207,o),
(823.369,37,o),
(776,37,cs),
(722.23,37,o),
(714,95.845,o),
(714,124,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
53 47 2 4 1 1 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 12 1 6 15 1 9 8 6 9 91 0 5 5 10 83 0 10 10 15 67 0 3 3 13 67 14 1 8 8 7 84 13 1 7 7 21 7 68
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 12 1 6 15 1 9 8 6 9 91 0 3 3 13 67 14 1 8 8 7 84 13 1 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 3 8 7 8 3 7 104 2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 12 1 6 15 1 9 8 6 9 91 14 1 8 8 7 84 13 1 7 7 21 7 68
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
146 144 138 136 128 126 120 118 110 108 104 102 98 96 40 38 40 41 45 45 38 37 36 16 24
CALL[ ]	/* CallFunction */";
};
width = 927;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(213.667,22,o),
(219,31.333,o),
(223,42,cs),
(236.851,75.243,o),
(287.823,171.756,o),
(390.5,364.5,cs),
(488.341,548.166,o),
(538,643.078,o),
(538,650,cs),
(538,656.667,o),
(533.667,660,o),
(525,660,cs),
(499.286,660,o),
(488.954,603.062,o),
(459,584,cs),
(440.333,570.667,o),
(414,571,o),
(390,571,cs),
(229.923,571,o),
(230.107,662,o),
(155,662,cs),
(93.971,662,o),
(33,603.424,o),
(33,513,cs),
(33,421.757,o),
(95.769,372,o),
(147,372,cs),
(207.444,372,o),
(255,438.637,o),
(255,526,cs),
(255,539.333,o),
(254.667,562,o),
(244,582,c),
(286.667,554,o),
(333.333,545,o),
(388,545,cs),
(405.333,545,o),
(433.333,547.333,o),
(452,550,c),
(452,547.716,o),
(406.847,464.25,o),
(316.5,299.5,cs),
(226.992,136.28,o),
(182,43.737,o),
(182,37,cs),
(182,27,o),
(187.667,22,o),
(199,22,cs)
);
},
{
closed = 1;
nodes = (
(545.667,-19,o),
(593,37,o),
(593,125,cs),
(593,203.681,o),
(555.225,266,o),
(488,266,cs),
(422.667,266,o),
(376,207.333,o),
(376,122,cs),
(376,48.885,o),
(414.997,-19,o),
(483,-19,cs)
);
},
{
closed = 1;
nodes = (
(423.195,12,o),
(407,83.029,o),
(407,124,cs),
(407,198.667,o),
(446.667,235,o),
(484,235,cs),
(521.125,235,o),
(559,203.34,o),
(559,128,cs),
(559,74.213,o),
(535.706,12,o),
(481,12,cs)
);
},
{
closed = 1;
nodes = (
(97.135,403,o),
(64,451.336,o),
(64,513,cs),
(64,597.16,o),
(113.031,631,o),
(152,631,cs),
(189.452,631,o),
(224,597.592,o),
(224,521,cs),
(224,446.333,o),
(189.333,403,o),
(144,403,cs)
);
},
{
closed = 1;
nodes = (
(850.333,-19,o),
(897,39.667,o),
(897,125,cs),
(897,198.115,o),
(858.003,266,o),
(790,266,cs),
(727.333,266,o),
(680,210,o),
(680,122,cs),
(680,43.36,o),
(717.245,-19,o),
(785,-19,cs)
);
},
{
closed = 1;
nodes = (
(751.875,12,o),
(714,43.66,o),
(714,119,cs),
(714,172.787,o),
(737.294,235,o),
(792,235,cs),
(849.805,235,o),
(866,163.971,o),
(866,123,cs),
(866,48.333,o),
(826.333,12,o),
(789,12,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
49 1 1 11 43 1 4 1 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 13 1 6 14 1 9 3 6 9 91 0 3 3 13 67 15 1 8 8 7 84 12 1 7 7 21 7 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 3 9 8 9 3 8 104 2 1 0 0 11 1 0 11 91 0 1 0 4 10 1 4 91 0 10 0 5 6 10 5 91 13 1 6 14 1 9 3 6 9 91 15 1 8 8 7 84 12 1 7 7 21 7 68
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
146 144 136 134 126 124 118 116 110 108 102 100 94 92 40 38 38 41 44 44 38 35 36 16 24
CALL[ ]	/* CallFunction */";
};
width = 925;
}
);
note = perthousand;
unicode = 8240;
},
{
glyphname = dieresis;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(5,536.333,o),
(30.667,509,o),
(64,509,cs),
(93.675,509,o),
(131,523.646,o),
(131,579,cs),
(131,615,o),
(103,640,o),
(71,640,cs),
(24.034,640,o),
(5,598.847,o),
(5,575,cs)
);
},
{
closed = 1;
nodes = (
(212,513.333,o),
(237.667,486,o),
(271,486,cs),
(300.675,486,o),
(338,500.646,o),
(338,556,cs),
(338,592,o),
(310,617,o),
(278,617,cs),
(231.034,617,o),
(212,575.847,o),
(212,552,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 2 1 3 2 79 0 0 0 1 3 0 1 91 0 2 2 3 83 0 3 2 3 71 38 38 38 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 342;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(15,541.667,o),
(37.333,518,o),
(64,518,cs),
(89.333,518,o),
(120,531,o),
(120,579,cs),
(120,609.667,o),
(97.667,631,o),
(71,631,cs),
(32.685,631,o),
(15,595.643,o),
(15,575,cs)
);
},
{
closed = 1;
nodes = (
(222,518.667,o),
(244.333,495,o),
(271,495,cs),
(296.333,495,o),
(327,508,o),
(327,556,cs),
(327,586.667,o),
(304.667,608,o),
(278,608,cs),
(239.685,608,o),
(222,572.643,o),
(222,552,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 2 1 3 2 79 0 0 0 1 3 0 1 91 0 2 2 3 83 0 3 2 3 71 36 38 36 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 342;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(289.667,510,o),
(312,520,o),
(312,556,cs),
(312,578.667,o),
(296.667,593,o),
(278,593,cs),
(250.258,593,o),
(237,565.895,o),
(237,552,cs),
(237,528,o),
(252.333,510,o),
(271,510,cs)
);
},
{
closed = 1;
nodes = (
(82.667,533,o),
(105,543,o),
(105,579,cs),
(105,601.667,o),
(89.667,616,o),
(71,616,cs),
(43.258,616,o),
(30,588.895,o),
(30,575,cs),
(30,551,o),
(45.333,533,o),
(64,533,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 2 1 3 2 79 0 0 0 1 3 0 1 91 0 2 2 3 83 0 3 2 3 71 36 38 36 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 342;
}
);
note = dieresis;
unicode = 168;
},
{
glyphname = dotaccent;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(5,537.333,o),
(30.667,514,o),
(64,514,cs),
(93.675,514,o),
(131,528.646,o),
(131,584,cs),
(131,620,o),
(103,645,o),
(71,645,cs),
(23.488,645,o),
(5,607.161,o),
(5,580,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 38 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 135;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(15,544,o),
(37.333,523,o),
(64,523,cs),
(89.333,523,o),
(120,536,o),
(120,584,cs),
(120,614.667,o),
(97.667,636,o),
(71,636,cs),
(28.986,636,o),
(15,600.483,o),
(15,580,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 36 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 135;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(82.667,538,o),
(105,548,o),
(105,584,cs),
(105,606.667,o),
(89.667,621,o),
(71,621,cs),
(43.258,621,o),
(30,593.895,o),
(30,580,cs),
(30,556,o),
(45.333,538,o),
(64,538,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 1 0 79 0 0 0 1 83 0 1 0 1 71 36 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 135;
}
);
note = dotaccent;
unicode = 729;
},
{
glyphname = grave;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1,633.533,o),
(78.499,499,o),
(129,499,cs),
(143.667,499,o),
(153,509.333,o),
(153,524,cs),
(153,531.67,o),
(146.967,566.46,o),
(129,612.5,cs),
(113.163,653.082,o),
(89.945,690,o),
(61,690,cs),
(36.147,690,o),
(1,676.463,o),
(1,658,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
0 0 1 0 106 0 1 1 97 40 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 154;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(10,624.892,o),
(84.196,520.602,o),
(118,505,cs),
(122,503.667,o),
(125.333,503,o),
(128,503,cs),
(139.333,503,o),
(145,509.667,o),
(145,523,cs),
(145,548.124,o),
(94.431,675.973,o),
(65,684,cs),
(61.667,685.333,o),
(59,686,o),
(57,686,cs),
(55,686,o),
(52.667,686,o),
(50,686,cs),
(28.667,686,o),
(10,674.667,o),
(10,656,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
0 0 1 0 106 0 1 1 97 39 50 2 17
CALL[ ]	/* CallFunction */";
};
width = 154;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(131.333,510,o),
(134,513.667,o),
(134,521,cs),
(134,532.296,o),
(120.161,568.678,o),
(99.5,610,cs),
(76.09,656.82,o),
(57.452,680,o),
(47,680,cs),
(31,680,o),
(23,671,o),
(23,653,cs),
(23,643.589,o),
(41.349,610.339,o),
(67,574,cs),
(97.227,531.178,o),
(117.1,510,o),
(126,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
0 0 1 0 106 0 1 1 97 39 33 2 17
CALL[ ]	/* CallFunction */";
};
width = 154;
}
);
note = grave;
unicode = 96;
},
{
glyphname = acute;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,676.463,o),
(121.853,690,o),
(97,690,cs),
(45.515,690,o),
(5,549.302,o),
(5,524,cs),
(5,509.333,o),
(14.667,499,o),
(28,499,cs),
(75.406,499,o),
(157,615.912,o),
(157,658,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
0 1 0 1 106 0 0 0 97 38 36 2 17
CALL[ ]	/* CallFunction */";
};
width = 154;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(146,674.667,o),
(127.333,686,o),
(106,686,cs),
(103.333,686,o),
(101,686,o),
(99,686,cs),
(97,686,o),
(94.333,685.333,o),
(91,684,cs),
(61.569,675.973,o),
(11,548.124,o),
(11,523,cs),
(11,509.667,o),
(16.667,503,o),
(28,503,cs),
(30.667,503,o),
(34,503.667,o),
(38,505,cs),
(71.804,520.602,o),
(146,624.892,o),
(146,656,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
0 1 0 1 106 0 0 0 97 55 38 2 17
CALL[ ]	/* CallFunction */";
};
width = 154;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(36.9,510,o),
(56.773,531.178,o),
(87,574,cs),
(112.651,610.339,o),
(131,643.589,o),
(131,653,cs),
(131,671,o),
(123,680,o),
(107,680,cs),
(96.548,680,o),
(77.91,656.82,o),
(54.5,610,cs),
(33.839,568.678,o),
(20,532.296,o),
(20,521,cs),
(20,513.667,o),
(22.667,510,o),
(28,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
0 1 0 1 106 0 0 0 97 39 38 2 17
CALL[ ]	/* CallFunction */";
};
width = 154;
}
);
note = acute;
unicode = 180;
},
{
glyphname = hungarumlaut;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,676.463,o),
(121.853,690,o),
(97,690,cs),
(45.515,690,o),
(5,549.302,o),
(5,524,cs),
(5,509.333,o),
(14.667,499,o),
(28,499,cs),
(75.406,499,o),
(157,615.912,o),
(157,658,cs)
);
},
{
closed = 1;
nodes = (
(309,676.463,o),
(273.853,690,o),
(249,690,cs),
(197.515,690,o),
(157,549.302,o),
(157,524,cs),
(157,509.333,o),
(166.667,499,o),
(180,499,cs),
(227.406,499,o),
(309,615.912,o),
(309,658,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
3 1 1 0 1 106 2 1 0 0 97 38 40 38 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 303;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(146,674.667,o),
(127.333,686,o),
(106,686,cs),
(103.333,686,o),
(101,686,o),
(99,686,cs),
(97,686,o),
(94.333,685.333,o),
(91,684,cs),
(61.569,675.973,o),
(11,548.124,o),
(11,523,cs),
(11,509.667,o),
(16.667,503,o),
(28,503,cs),
(30.667,503,o),
(34,503.667,o),
(38,505,cs),
(71.804,520.602,o),
(146,624.892,o),
(146,656,cs)
);
},
{
closed = 1;
nodes = (
(298,674.667,o),
(279.333,686,o),
(258,686,cs),
(255.333,686,o),
(253,686,o),
(251,686,cs),
(249,686,o),
(246.333,685.333,o),
(243,684,cs),
(213.569,675.973,o),
(163,548.124,o),
(163,523,cs),
(163,509.667,o),
(168.667,503,o),
(180,503,cs),
(182.667,503,o),
(186,503.667,o),
(190,505,cs),
(223.804,520.602,o),
(298,624.892,o),
(298,656,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
3 1 1 0 1 106 2 1 0 0 97 55 40 55 39 4 30
CALL[ ]	/* CallFunction */";
};
width = 303;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(36.9,510,o),
(56.773,531.178,o),
(87,574,cs),
(112.651,610.339,o),
(131,643.589,o),
(131,653,cs),
(131,671,o),
(123,680,o),
(107,680,cs),
(96.548,680,o),
(77.91,656.82,o),
(54.5,610,cs),
(33.839,568.678,o),
(20,532.296,o),
(20,521,cs),
(20,513.667,o),
(22.667,510,o),
(28,510,cs)
);
},
{
closed = 1;
nodes = (
(188.9,510,o),
(208.773,531.178,o),
(239,574,cs),
(264.651,610.339,o),
(283,643.589,o),
(283,653,cs),
(283,671,o),
(275,680,o),
(259,680,cs),
(248.548,680,o),
(229.91,656.82,o),
(206.5,610,cs),
(185.839,568.678,o),
(172,532.296,o),
(172,521,cs),
(172,513.667,o),
(174.667,510,o),
(180,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
3 1 1 0 1 106 2 1 0 0 97 39 39 39 39 4 30
CALL[ ]	/* CallFunction */";
};
width = 303;
}
);
note = hungarumlaut;
unicode = 733;
},
{
glyphname = circumflex;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(286.333,510,o),
(290,520.333,o),
(290,531,cs),
(290,571.963,o),
(180.877,664,o),
(157,664,cs),
(146,664,o),
(110.897,638.643,o),
(84,613.5,cs),
(53.333,584.833,o),
(25,549.333,o),
(25,524,cs),
(25,517.333,o),
(30,510,o),
(38,510,cs),
(50.064,510,o),
(107.718,545.91,o),
(157,572,c),
(228.614,534.087,o),
(265.803,510,o),
(277,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
5 1 0 2 1 66 0 2 0 2 106 1 3 2 0 0 97 1 0 19 17 11 9 0 25 1 25 4 15
CALL[ ]	/* CallFunction */";
};
width = 315;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(285,510,o),
(288,517.667,o),
(288,527,cs),
(288,562.213,o),
(181.595,655,o),
(157,655,cs),
(134.925,655,o),
(27,563.906,o),
(27,523,cs),
(27,514.333,o),
(30.667,510,o),
(38,510,cs),
(52.506,510,o),
(84.117,538.127,o),
(157,581,c),
(169.77,573.488,o),
(264.478,510,o),
(277,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
5 1 0 2 1 66 0 2 0 2 106 1 3 2 0 0 97 1 0 18 16 11 9 0 24 1 24 4 15
CALL[ ]	/* CallFunction */";
};
width = 315;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(52.084,510,o),
(104.433,558.894,o),
(157,596,c),
(233.411,542.063,o),
(262.302,510,o),
(277,510,cs),
(282.333,510,o),
(285,513.667,o),
(285,521,cs),
(285,546.329,o),
(181.852,640,o),
(157,640,cs),
(133.626,640,o),
(30,545.933,o),
(30,521,cs),
(30,513.667,o),
(32.667,510,o),
(38,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
5 1 0 2 1 66 0 2 0 2 106 1 3 2 0 0 97 1 0 18 16 11 9 0 23 1 23 4 15
CALL[ ]	/* CallFunction */";
};
width = 315;
}
);
note = circumflex;
unicode = 710;
},
{
glyphname = caron;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(265.803,640,o),
(228.614,615.913,o),
(157,578,c),
(107.718,604.09,o),
(50.064,640,o),
(38,640,cs),
(30,640,o),
(25,632.667,o),
(25,626,cs),
(25,599.333,o),
(53.333,565.167,o),
(84,536.5,cs),
(110.897,511.357,o),
(146,486,o),
(157,486,cs),
(180.877,486,o),
(290,578.037,o),
(290,619,cs),
(290,629.667,o),
(286.333,640,o),
(277,640,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
21 1 1 0 1 66 2 3 2 0 1 0 106 0 1 1 97 1 0 17 15 9 7 0 25 1 25 4 15
CALL[ ]	/* CallFunction */";
};
width = 315;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(288,632.333,o),
(285,640,o),
(277,640,cs),
(263.061,640,o),
(229.175,611.456,o),
(157,569,c),
(84.117,611.873,o),
(52.506,640,o),
(38,640,cs),
(30.667,640,o),
(27,635.667,o),
(27,627,cs),
(27,586.094,o),
(134.925,495,o),
(157,495,cs),
(181.595,495,o),
(288,587.787,o),
(288,623,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
6 1 2 0 1 66 1 3 2 0 2 0 106 0 2 2 97 2 1 19 17 12 10 1 25 2 25 4 26
CALL[ ]	/* CallFunction */";
};
width = 315;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(32.667,640,o),
(30,636.333,o),
(30,629,cs),
(30,604.067,o),
(133.626,510,o),
(157,510,cs),
(181.852,510,o),
(285,603.671,o),
(285,629,cs),
(285,636.333,o),
(282.333,640,o),
(277,640,cs),
(262.302,640,o),
(233.411,607.937,o),
(157,554,c),
(120.597,579.696,o),
(51.139,640,o),
(38,640,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
6 1 2 0 1 66 1 3 2 0 2 0 106 0 2 2 97 2 1 19 17 12 10 1 24 2 24 4 26
CALL[ ]	/* CallFunction */";
};
width = 315;
}
);
note = caron;
unicode = 711;
},
{
glyphname = breve;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(234,615.667,o),
(216,619,o),
(196,619,cs),
(178.667,619,o),
(164,604.667,o),
(164,590,cs),
(164,584.667,o),
(159.5,579.5,o),
(150.5,574.5,cs),
(141.5,569.5,o),
(127.333,567,o),
(108,567,cs),
(77.535,567,o),
(49,574.638,o),
(49,590,cs),
(49,612.667,o),
(35.667,619,o),
(13,619,cs),
(-9.667,619,o),
(-19,606.333,o),
(-19,589,cs),
(-19,546.333,o),
(26.333,510,o),
(113,510,cs),
(164.962,510,o),
(234,536.821,o),
(234,589,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 1 2 1 106 0 2 0 0 2 79 0 2 2 0 83 0 0 2 0 71 36 38 36 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 249;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(234,615.667,o),
(217.333,617,o),
(204,617,cs),
(189.333,617,o),
(178,604.667,o),
(178,590,cs),
(178,572.667,o),
(152.667,555,o),
(114,555,cs),
(84.309,555,o),
(49,564.446,o),
(49,590,cs),
(49,610,o),
(39.667,617,o),
(21,617,cs),
(3.667,617,o),
(-5,607.667,o),
(-5,589,cs),
(-5,547.667,o),
(41,510,o),
(117,510,cs),
(168.467,510,o),
(234,536.998,o),
(234,589,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 1 2 1 106 0 2 0 0 2 79 0 2 2 0 83 0 0 2 0 71 36 38 35 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 249;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(176.372,510,o),
(234,540.865,o),
(234,589,cs),
(234,610.333,o),
(225.667,613,o),
(215,613,cs),
(203.667,613,o),
(198,605.333,o),
(198,590,cs),
(198,562.695,o),
(158.603,535,o),
(123,535,cs),
(84.333,535,o),
(49,548.667,o),
(49,590,cs),
(49,606,o),
(46.667,613,o),
(32,613,cs),
(20.667,613,o),
(15,605,o),
(15,589,cs),
(15,547.83,o),
(65.193,510,o),
(123,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 1 2 1 106 0 2 0 0 2 79 0 2 2 0 83 0 0 2 0 71 37 36 37 36 4 19
CALL[ ]	/* CallFunction */";
};
width = 249;
}
);
note = breve;
unicode = 728;
},
{
glyphname = ring;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(147,626.333,o),
(121,649,o),
(69,649,cs),
(27.667,649,o),
(-6,629.667,o),
(-6,579,cs),
(-6,532.333,o),
(28.667,510,o),
(74,510,cs),
(114,510,o),
(147,533,o),
(147,581,cs)
);
},
{
closed = 1;
nodes = (
(80.667,607,o),
(92,598.667,o),
(92,580,cs),
(92,558.667,o),
(82,553,o),
(74,553,cs),
(64.667,553,o),
(50,556.333,o),
(50,579,cs),
(50,590.333,o),
(52.5,597.833,o),
(57.5,601.5,cs),
(62.5,605.167,o),
(66.667,607,o),
(70,607,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
4 1 2 1 3 0 2 96 0 3 0 1 3 94 0 1 2 0 1 80 0 1 1 0 83 0 0 1 0 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
4 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 1 2 0 1 80 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
12 11 18 16 11 22 12 22 36 34 5 17
CALL[ ]	/* CallFunction */";
};
width = 167;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(147,623.667,o),
(122.667,649,o),
(76,649,cs),
(36,649,o),
(5,619,o),
(5,579,cs),
(5,537.667,o),
(37,510,o),
(77,510,cs),
(113,510,o),
(147,533,o),
(147,581,cs)
);
},
{
closed = 1;
nodes = (
(89.333,615,o),
(102,605.333,o),
(102,580,cs),
(102,564.667,o),
(98.667,554.833,o),
(92,550.5,cs),
(85.333,546.167,o),
(80.333,544,o),
(77,544,cs),
(69,544,o),
(50,549.667,o),
(50,579,cs),
(50,607,o),
(65.333,615,o),
(76,615,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
4 1 2 1 3 0 2 96 0 3 0 1 3 94 0 1 2 0 1 80 0 1 1 0 83 0 0 1 0 71
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
4 1 2 1 3 1 2 3 104 0 3 0 1 3 0 102 0 1 2 0 1 80 0 1 1 0 83 0 0 1 0 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
13 12 19 17 12 23 13 23 36 34 5 17
CALL[ ]	/* CallFunction */";
};
width = 167;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(112.667,510,o),
(147,533,o),
(147,581,cs),
(147,617,o),
(126,649,o),
(86,649,cs),
(47.333,649,o),
(20,619,o),
(20,579,cs),
(20,537.667,o),
(47.333,510,o),
(82,510,cs)
);
},
{
closed = 1;
nodes = (
(59.333,529,o),
(50,549.667,o),
(50,579,cs),
(50,607,o),
(58.667,629,o),
(84,629,cs),
(110.667,629,o),
(117,605.333,o),
(117,580,cs),
(117,549.333,o),
(104.667,529,o),
(82,529,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 1 4 1 2 3 1 2 91 0 3 0 0 3 79 0 3 3 0 83 0 0 3 0 71 13 12 19 17 12 23 13 23 36 34 5 17
CALL[ ]	/* CallFunction */";
};
width = 167;
}
);
note = ring;
unicode = 730;
},
{
glyphname = tilde;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(9,514,o),
(16,498,o),
(28,498,cs),
(48.593,498,o),
(72.709,523,o),
(112,523,cs),
(150.662,523,o),
(193.294,499,o),
(249,499,cs),
(281.676,499,o),
(360,516.584,o),
(360,574,cs),
(360,595.333,o),
(344.667,609,o),
(338,609,cs),
(333.333,609,o),
(323.333,604.667,o),
(308,596,cs),
(289.333,585.333,o),
(266.667,579,o),
(248,579,cs),
(208.599,579,o),
(147.495,607,o),
(111,607,cs),
(86.333,607,o),
(63.667,601,o),
(43,589,cs),
(24.333,578.333,o),
(9,563.333,o),
(9,534,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 4 3 1 79 2 1 0 0 4 3 0 4 91 0 1 1 3 83 5 1 3 1 3 71 35 35 38 35 35 36 6 21
CALL[ ]	/* CallFunction */";
};
width = 369;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(12,546.667,o),
(11,541,o),
(11,535,cs),
(11,520.333,o),
(17.333,507,o),
(28,507,cs),
(44.95,507,o),
(72.392,532,o),
(112,532,cs),
(150.662,532,o),
(193.294,508,o),
(249,508,cs),
(305,508,o),
(337.667,530.333,o),
(351,553,cs),
(354.333,559,o),
(356,565.333,o),
(356,572,cs),
(356,588,o),
(344.667,600,o),
(338,600,cs),
(334.667,600,o),
(331.167,599.167,o),
(327.5,597.5,cs),
(323.833,595.833,o),
(317.333,592.333,o),
(308,587,cs),
(285.333,575.667,o),
(265.333,570,o),
(248,570,cs),
(208.599,570,o),
(147.495,598,o),
(111,598,cs),
(86.333,598,o),
(63.667,592,o),
(43,580,cs),
(33,574,o),
(26,568.667,o),
(22,564,cs),
(18,559.333,o),
(15.333,555.333,o),
(14,552,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 4 3 1 79 2 1 0 0 4 3 0 4 91 0 1 1 3 83 5 1 3 1 3 71 35 35 38 35 35 36 6 21
CALL[ ]	/* CallFunction */";
};
width = 369;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(43.791,522,o),
(70.735,547,o),
(112,547,cs),
(150.662,547,o),
(193.294,523,o),
(249,523,cs),
(301.947,523,o),
(351,542.797,o),
(351,568,cs),
(351,577.333,o),
(344.667,585,o),
(338,585,cs),
(334.667,585,o),
(331.167,584.167,o),
(327.5,582.5,cs),
(323.833,580.833,o),
(317.333,577.333,o),
(308,572,cs),
(285.333,560.667,o),
(265.333,555,o),
(248,555,cs),
(208.599,555,o),
(147.495,583,o),
(111,583,cs),
(86.333,583,o),
(63.667,577,o),
(43,565,cs),
(23.667,553.667,o),
(14,544.333,o),
(14,537,cs),
(14,530.333,o),
(21.333,522,o),
(28,522,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 4 3 1 79 2 1 0 0 4 3 0 4 91 0 1 1 3 83 5 1 3 1 3 71 35 35 38 35 35 35 6 21
CALL[ ]	/* CallFunction */";
};
width = 369;
}
);
note = tilde;
unicode = 732;
},
{
glyphname = macron;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(269,566,o),
(250.667,565.5,o),
(230,564.5,cs),
(209.333,563.5,o),
(185,563,o),
(157,563,cs),
(114.698,563,o),
(66.437,565,o),
(36,565,cs),
(13.333,565,o),
(3,544.667,o),
(3,526,cs),
(3,507.333,o),
(17.333,486,o),
(36,486,cs),
(106.305,486,o),
(203.446,487,o),
(277,487,cs),
(305.782,487,o),
(313,513.801,o),
(313,529,cs),
(313,549,o),
(299.667,566,o),
(285,566,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 14 7 0 26 1 18 3 15
CALL[ ]	/* CallFunction */";
};
width = 316;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(269,557,o),
(250.667,556.5,o),
(230,555.5,cs),
(209.333,554.5,o),
(185,554,o),
(157,554,cs),
(114.698,554,o),
(66.437,556,o),
(36,556,cs),
(17.333,556,o),
(10,540.667,o),
(10,526,cs),
(10,511.333,o),
(21.333,495,o),
(36,495,cs),
(106.305,495,o),
(203.446,496,o),
(277,496,cs),
(299.667,496,o),
(306,518.333,o),
(306,529,cs),
(306,543.667,o),
(295.667,557,o),
(285,557,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 12 5 0 24 1 16 3 15
CALL[ ]	/* CallFunction */";
};
width = 316;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(106.305,510,o),
(203.446,511,o),
(277,511,cs),
(291.667,511,o),
(296,522.333,o),
(296,529,cs),
(296,535.667,o),
(290.333,542,o),
(285,542,cs),
(269,542,o),
(250.667,541.5,o),
(230,540.5,cs),
(209.333,539.5,o),
(185,539,o),
(157,539,cs),
(114.698,539,o),
(66.437,541,o),
(36,541,cs),
(25.333,541,o),
(20,532.667,o),
(20,526,cs),
(20,519.333,o),
(26.667,510,o),
(36,510,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71 1 0 12 5 0 24 1 16 3 15
CALL[ ]	/* CallFunction */";
};
width = 316;
}
);
note = macron;
unicode = 175;
},
{
glyphname = cedilla;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-17.333,1,o),
(-18.833,-10,o),
(-20.5,-26,cs),
(-22.167,-42,o),
(-24.667,-57,o),
(-28,-71,cs),
(-29.333,-76.333,o),
(-31,-84,o),
(-31,-88,cs),
(-31,-102.667,o),
(-23.667,-121,o),
(7,-121,cs),
(48.636,-121,o),
(62.572,-93,o),
(97,-93,cs),
(107.667,-93,o),
(120,-98.333,o),
(120,-109,cs),
(120,-117,o),
(117,-122.667,o),
(111,-126,cs),
(105,-129.333,o),
(93,-131,o),
(75,-131,cs),
(1.546,-131,o),
(0,-150.71,o),
(0,-159,cs),
(0,-167.667,o),
(6.167,-173.5,o),
(18.5,-176.5,cs),
(30.833,-179.5,o),
(51,-181,o),
(79,-181,cs),
(148.658,-181,o),
(208,-154.591,o),
(208,-103,cs),
(208,-64.333,o),
(175,-40,o),
(131,-40,cs),
(103,-40,o),
(83,-50.333,o),
(51,-69,c),
(64,3,l),
(45,7,l),
(-16,7,l),
(-16,7,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
1 1 0 5 2 1 3 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 5 3 5 0 3 104 0 3 4 5 3 4 102 6 1 5 0 4 2 5 4 91 0 2 2 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 0 5 3 5 0 3 104 0 3 4 5 3 4 102 6 1 5 0 4 2 5 4 91 0 2 1 1 2 79 0 2 2 1 83 0 1 2 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 41 0 41 35 36 38 38 36 7 20
CALL[ ]	/* CallFunction */";
};
width = 228;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(3.667,1,o),
(2.167,-10,o),
(0.5,-26,cs),
(-1.167,-42,o),
(-3.667,-57,o),
(-7,-71,cs),
(-8.333,-76.333,o),
(-10,-84,o),
(-10,-88,cs),
(-10,-98.667,o),
(-3.667,-113,o),
(19,-113,cs),
(49.863,-113,o),
(73.805,-85,o),
(110,-85,cs),
(119.333,-85,o),
(141,-90.333,o),
(141,-109,cs),
(141,-135.667,o),
(117.667,-139,o),
(75,-139,cs),
(48.333,-139,o),
(31.5,-141.5,o),
(24.5,-146.5,cs),
(17.5,-151.5,o),
(14,-156.333,o),
(14,-161,cs),
(14,-169.667,o),
(19.5,-175.167,o),
(30.5,-177.5,cs),
(41.5,-179.833,o),
(57.667,-181,o),
(79,-181,cs),
(148.658,-181,o),
(208,-154.591,o),
(208,-103,cs),
(208,-64.333,o),
(175,-40,o),
(131,-40,cs),
(103,-40,o),
(83,-50.333,o),
(51,-69,c),
(64,3,l),
(45,7,l),
(5,7,l),
(5,7,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
1 1 0 5 2 1 3 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 0 0 3 4 0 3 91 6 1 5 0 4 2 5 4 91 0 2 2 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 0 3 4 0 3 91 6 1 5 0 4 2 5 4 91 0 2 1 1 2 79 0 2 2 1 83 0 1 2 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 39 0 39 35 36 36 38 36 7 20
CALL[ ]	/* CallFunction */";
};
width = 228;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(148.658,-181,o),
(208,-154.591,o),
(208,-103,cs),
(208,-64.333,o),
(175,-40,o),
(131,-40,cs),
(103,-40,o),
(83,-50.333,o),
(51,-69,c),
(64,3,l),
(45,7,l),
(35,7,l),
(33.667,1,o),
(32.167,-10,o),
(30.5,-26,cs),
(28.833,-42,o),
(26.333,-57,o),
(23,-71,cs),
(21.667,-76.333,o),
(20,-84,o),
(20,-88,cs),
(20,-93.333,o),
(25.333,-100,o),
(36,-100,cs),
(58.431,-100,o),
(91.636,-72,o),
(128,-72,cs),
(157.333,-72,o),
(171,-90.333,o),
(171,-109,cs),
(171,-139.667,o),
(136.333,-152,o),
(75,-152,cs),
(61.667,-152,o),
(51.5,-152.5,o),
(44.5,-153.5,cs),
(37.5,-154.5,o),
(34,-158,o),
(34,-164,cs),
(34,-168.667,o),
(36.833,-172.667,o),
(42.5,-176,cs),
(48.167,-179.333,o),
(60.333,-181,o),
(79,-181,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
1 1 0 5 2 1 3 0 2 66
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 0 0 3 4 0 3 91 6 1 5 0 4 2 5 4 91 0 2 2 1 83 0 1 1 17 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 0 3 4 0 3 91 6 1 5 0 4 2 5 4 91 0 2 1 1 2 79 0 2 2 1 83 0 1 2 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 39 0 39 35 36 36 38 36 7 20
CALL[ ]	/* CallFunction */";
};
width = 228;
}
);
note = cedilla;
unicode = 184;
},
{
glyphname = ogonek;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(162.345,-149,o),
(193,-119.646,o),
(193,-96,cs),
(193,-84,o),
(181.333,-72,o),
(168,-72,cs),
(148.449,-72,o),
(149.136,-96,o),
(108,-96,cs),
(93.333,-96,o),
(79,-89.667,o),
(79,-75,cs),
(79,-45.71,o),
(100.691,5.219,o),
(137,13,c),
(77,13,l),
(55.532,3.799,o),
(0,-27.282,o),
(0,-74,cs),
(0,-125.579,o),
(60.091,-149,o),
(110,-149,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 3 2 1 94 0 3 2 3 106 0 2 0 0 2 79 0 2 2 0 84 4 1 0 2 0 72
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 1 3 1 106 0 3 2 3 106 0 2 0 0 2 79 0 2 2 0 84 4 1 0 2 0 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
1 0 25 23 20 18 11 10 0 31 1 31 5 15
CALL[ ]	/* CallFunction */";
};
width = 227;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(73,7.333,o),
(60.667,-0.333,o),
(50,-9,cs),
(31.333,-23.667,o),
(14,-45.333,o),
(14,-76,cs),
(14,-118.667,o),
(56.333,-149,o),
(115,-149,cs),
(163.13,-149,o),
(193,-107.791,o),
(193,-98,cs),
(193,-87.333,o),
(186.667,-76,o),
(172,-76,cs),
(168,-76,o),
(163.667,-78,o),
(159,-82,cs),
(153.667,-86.667,o),
(148.167,-91.833,o),
(142.5,-97.5,cs),
(136.833,-103.167,o),
(125.667,-106,o),
(109,-106,cs),
(93,-106,o),
(78,-91,o),
(78,-75,cs),
(78,-55.58,o),
(91.525,-2.158,o),
(137,13,c),
(87,14,l),
(87,14,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
4 1 3 1 0 3 94 0 1 0 1 106 0 0 2 2 0 79 0 0 0 2 84 0 2 0 2 72
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
4 1 3 1 3 106 0 1 0 1 106 0 0 2 2 0 79 0 0 0 2 84 0 2 0 2 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 29 0 29 38 35 39 5 18
CALL[ ]	/* CallFunction */";
};
width = 227;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(163.13,-149,o),
(193,-107.791,o),
(193,-98,cs),
(193,-90,o),
(191,-82,o),
(179,-82,cs),
(159.96,-82,o),
(153.683,-122,o),
(117,-122,cs),
(86.028,-122,o),
(78,-92.466,o),
(78,-75,cs),
(78,-55.58,o),
(91.525,-2.158,o),
(137,13,c),
(102,14,l),
(89.333,7.333,o),
(78,-0.333,o),
(68,-9,cs),
(50.667,-23.667,o),
(34,-45.333,o),
(34,-76,cs),
(34,-118.667,o),
(68.333,-149,o),
(115,-149,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
4 1 3 1 0 3 94 0 1 0 1 106 0 0 2 2 0 79 0 0 0 2 84 0 2 0 2 72
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
4 1 3 1 3 106 0 1 0 1 106 0 0 2 2 0 79 0 0 0 2 84 0 2 0 2 72
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 31 0 31 38 35 41 5 18
CALL[ ]	/* CallFunction */";
};
width = 227;
}
);
note = ogonek;
unicode = 731;
},
{
glyphname = apostrophemod;
kernLeft = apostrophe;
kernRight = apostrophe;
lastChange = "2024-06-13 14:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(121.248,851,o),
(116,806.453,o),
(116,780,cs),
(116,736,o),
(121,702,o),
(131,678,cs),
(141,654,o),
(152,642,o),
(164,642,cs),
(189.589,642,o),
(212,721.571,o),
(212,781,cs),
(212,816.559,o),
(204.306,851,o),
(163,851,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 1 1 0 83 2 1 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
1 0 11 9 0 17 1 17 3 15
CALL[ ]	/* CallFunction */";
};
width = 327;
},
{
layerId = "62092E79-60F6-4D0B-8A38-B9DDC6B60A9E";
shapes = (
{
closed = 1;
nodes = (
(125.841,851,o),
(125,800.817,o),
(125,784,cs),
(125,753.179,o),
(130.221,648,o),
(163,648,cs),
(192.575,648,o),
(200,775.012,o),
(200,790,cs),
(200,813.532,o),
(198.975,851,o),
(162,851,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 1 1 0 83 2 1 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
1 0 11 9 0 19 1 19 3 15
CALL[ ]	/* CallFunction */";
};
width = 324;
},
{
layerId = "E59D8378-1062-4241-9A8F-EEB295F00E05";
shapes = (
{
closed = 1;
nodes = (
(180.845,658,o),
(183,817.92,o),
(183,799,cs),
(183,813.56,o),
(184.229,851,o),
(160,851,cs),
(139.84,851,o),
(138,803.968,o),
(138,784,cs),
(138,767.202,o),
(139.392,658,o),
(161,658,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 1 1 0 83 2 1 0 0 20 1 68
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 0 1 1 0 79 2 1 0 0 1 83 0 1 0 1 71
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
1 0 11 9 0 19 1 19 3 15
CALL[ ]	/* CallFunction */";
};
width = 320;
}
);
note = apostrophe;
unicode = 700;
}
);
instances = (
{
axesValues = (
400
);
instanceInterpolations = {
"E59D8378-1062-4241-9A8F-EEB295F00E05" = 1;
};
name = Regular;
},
{
axesValues = (
700
);
instanceInterpolations = {
"62092E79-60F6-4D0B-8A38-B9DDC6B60A9E" = 1;
};
name = Bold;
weightClass = 700;
},
{
axesValues = (
800
);
instanceInterpolations = {
m01 = 1;
};
name = ExtraBold;
weightClass = 800;
}
);
kerningLTR = {
"E59D8378-1062-4241-9A8F-EEB295F00E05" = {
"@MMK_L_AE" = {
"@MMK_R_b" = 22;
"@MMK_R_p" = -5;
"@MMK_R_u" = -5;
"@MMK_R_v" = -15;
"@MMK_R_w" = -17;
"@MMK_R_y" = -11;
};
"@MMK_L_Aacute" = {
"@MMK_R_C" = -24;
"@MMK_R_T" = -37;
"@MMK_R_U" = -38;
"@MMK_R_V" = -93;
"@MMK_R_W" = -100;
"@MMK_R_Y" = -85;
"@MMK_R_a" = -9;
"@MMK_R_a.salt" = -10;
"@MMK_R_asterisk" = -21;
"@MMK_R_backslash" = -53;
"@MMK_R_braceright" = 61;
"@MMK_R_bracketright" = 60;
"@MMK_R_c" = -27;
"@MMK_R_c.salt" = -28;
"@MMK_R_d" = -25;
"@MMK_R_g" = 17;
"@MMK_R_parenright" = 7;
"@MMK_R_q" = -14;
"@MMK_R_quotedbl" = -24;
"@MMK_R_quotedblleft" = -26;
"@MMK_R_quotedblright" = -24;
"@MMK_R_space" = -28;
"@MMK_R_t" = -24;
"@MMK_R_trademark" = -20;
"@MMK_R_u" = -32;
"@MMK_R_v" = -50;
"@MMK_R_w" = -63;
"@MMK_R_y" = -21;
};
"@MMK_L_B" = {
"@MMK_R_AE" = -26;
"@MMK_R_Aacute" = -9;
"@MMK_R_B" = -14;
"@MMK_R_U" = -16;
"@MMK_R_W" = -15;
"@MMK_R_Y" = -17;
"@MMK_R_dotlessi" = -7;
"@MMK_R_dotlessj" = -8;
"@MMK_R_eng" = -7;
"@MMK_R_f" = -10;
"@MMK_R_f_f" = -11;
"@MMK_R_g" = -8;
"@MMK_R_l" = -6;
"@MMK_R_r" = -7;
"@MMK_R_u" = -6;
"@MMK_R_w" = -20;
"@MMK_R_y" = -17;
};
"@MMK_L_C" = {
"@MMK_R_AE" = -19;
"@MMK_R_b" = 51;
"@MMK_R_g" = -14;
"@MMK_R_y" = -12;
"@MMK_R_z" = -6;
};
"@MMK_L_D" = {
"@MMK_R_AE" = -54;
"@MMK_R_Aacute" = -32;
"@MMK_R_B" = -17;
"@MMK_R_J" = -8;
"@MMK_R_M" = -16;
"@MMK_R_U" = -19;
"@MMK_R_V" = -21;
"@MMK_R_W" = -21;
"@MMK_R_X" = -35;
"@MMK_R_Y" = -38;
"@MMK_R_Z" = -6;
"@MMK_R_a" = -9;
"@MMK_R_a.salt" = -5;
"@MMK_R_backslash" = -13;
"@MMK_R_braceright" = -23;
"@MMK_R_bracketright" = -24;
"@MMK_R_c" = -6;
"@MMK_R_c.salt" = -6;
"@MMK_R_comma" = -23;
"@MMK_R_d" = -6;
"@MMK_R_g" = -17;
"@MMK_R_germandbls" = -12;
"@MMK_R_l" = -12;
"@MMK_R_one" = -19;
"@MMK_R_parenright" = -16;
"@MMK_R_q" = -8;
"@MMK_R_s" = -8;
"@MMK_R_s.salt" = -5;
"@MMK_R_seven" = -20;
"@MMK_R_slash" = -22;
};
"@MMK_L_Eng" = {
"@MMK_R_AE" = -14;
"@MMK_R_C" = -11;
"@MMK_R_J" = -17;
"@MMK_R_S" = -11;
"@MMK_R_a" = -29;
"@MMK_R_a.salt" = -30;
"@MMK_R_ampersand" = -17;
"@MMK_R_b" = 91;
"@MMK_R_c" = -26;
"@MMK_R_c.salt" = -25;
"@MMK_R_comma" = -12;
"@MMK_R_d" = -23;
"@MMK_R_dotlessi" = -14;
"@MMK_R_dotlessj" = -13;
"@MMK_R_emdash" = -12;
"@MMK_R_eng" = -13;
"@MMK_R_f" = -16;
"@MMK_R_f_f" = -20;
"@MMK_R_g" = -34;
"@MMK_R_germandbls" = 42;
"@MMK_R_l" = 37;
"@MMK_R_m" = -14;
"@MMK_R_p" = -15;
"@MMK_R_q" = -24;
"@MMK_R_r" = -13;
"@MMK_R_registered" = -23;
"@MMK_R_s" = -24;
"@MMK_R_s.salt" = -19;
"@MMK_R_slash" = -17;
"@MMK_R_t" = -12;
"@MMK_R_u" = -13;
"@MMK_R_v" = -19;
"@MMK_R_w" = -22;
"@MMK_R_x" = -11;
"@MMK_R_y" = -20;
"@MMK_R_z" = -30;
};
"@MMK_L_F" = {
"@MMK_R_AE" = -70;
"@MMK_R_Aacute" = -67;
"@MMK_R_J" = -53;
"@MMK_R_W" = 33;
"@MMK_R_Y" = 25;
"@MMK_R_a" = -54;
"@MMK_R_b" = 93;
"@MMK_R_c" = -47;
"@MMK_R_comma" = -39;
"@MMK_R_d" = -46;
"@MMK_R_dotlessi" = -16;
"@MMK_R_emdash" = -11;
"@MMK_R_eng" = -27;
"@MMK_R_f" = -18;
"@MMK_R_f_f" = -15;
"@MMK_R_g" = -69;
"@MMK_R_germandbls" = 43;
"@MMK_R_l" = 41;
"@MMK_R_r" = -25;
"@MMK_R_s" = -50;
"@MMK_R_u" = -26;
"@MMK_R_w" = -29;
"@MMK_R_y" = -34;
"@MMK_R_z" = -37;
};
"@MMK_L_G" = {
"@MMK_R_b" = 40;
"@MMK_R_g" = -9;
"@MMK_R_y" = -14;
};
"@MMK_L_H" = {
"@MMK_R_C" = -15;
"@MMK_R_J" = -10;
"@MMK_R_a" = -15;
"@MMK_R_a.salt" = -16;
"@MMK_R_ampersand" = -15;
"@MMK_R_b" = 76;
"@MMK_R_braceright" = 10;
"@MMK_R_bracketright" = 9;
"@MMK_R_c" = -29;
"@MMK_R_c.salt" = -29;
"@MMK_R_d" = -26;
"@MMK_R_dotlessi" = -7;
"@MMK_R_dotlessj" = -13;
"@MMK_R_emdash" = -16;
"@MMK_R_eng" = -11;
"@MMK_R_g" = -5;
"@MMK_R_germandbls" = 27;
"@MMK_R_guillemotleft" = -11;
"@MMK_R_l" = 25;
"@MMK_R_m" = -6;
"@MMK_R_p" = -15;
"@MMK_R_q" = -26;
"@MMK_R_r" = -6;
"@MMK_R_registered" = -19;
"@MMK_R_s.salt" = -15;
"@MMK_R_t" = -15;
"@MMK_R_u" = -20;
"@MMK_R_v" = -27;
"@MMK_R_w" = -32;
"@MMK_R_y" = -24;
"@MMK_R_z" = -6;
};
"@MMK_L_I" = {
"@MMK_R_AE" = 32;
"@MMK_R_C" = -12;
"@MMK_R_b" = 71;
"@MMK_R_c" = -23;
"@MMK_R_c.salt" = -23;
"@MMK_R_d" = -21;
"@MMK_R_dotlessj" = -12;
"@MMK_R_emdash" = -13;
"@MMK_R_g" = -23;
"@MMK_R_germandbls" = 23;
"@MMK_R_l" = 20;
"@MMK_R_p" = -14;
"@MMK_R_q" = -21;
"@MMK_R_t" = -12;
"@MMK_R_u" = -12;
"@MMK_R_v" = -20;
"@MMK_R_w" = -22;
"@MMK_R_y" = -22;
};
"@MMK_L_IJ" = {
"@MMK_R_AE" = -38;
"@MMK_R_Aacute" = -23;
"@MMK_R_C" = -12;
"@MMK_R_J" = -21;
"@MMK_R_S" = -13;
"@MMK_R_a" = -33;
"@MMK_R_a.salt" = -31;
"@MMK_R_ampersand" = -17;
"@MMK_R_at" = -21;
"@MMK_R_b" = 91;
"@MMK_R_braceright" = 15;
"@MMK_R_bracketright" = 14;
"@MMK_R_c" = -29;
"@MMK_R_c.salt" = -28;
"@MMK_R_comma" = -21;
"@MMK_R_d" = -26;
"@MMK_R_dotlessi" = -12;
"@MMK_R_dotlessj" = -12;
"@MMK_R_emdash" = -10;
"@MMK_R_eng" = -12;
"@MMK_R_f" = -17;
"@MMK_R_g" = -33;
"@MMK_R_germandbls" = 41;
"@MMK_R_l" = 41;
"@MMK_R_m" = -13;
"@MMK_R_p" = -14;
"@MMK_R_q" = -27;
"@MMK_R_r" = -12;
"@MMK_R_registered" = -21;
"@MMK_R_s" = -27;
"@MMK_R_s.salt" = -22;
"@MMK_R_six" = -17;
"@MMK_R_slash" = -28;
"@MMK_R_t" = -12;
"@MMK_R_three" = -12;
"@MMK_R_u" = -12;
"@MMK_R_v" = -18;
"@MMK_R_w" = -21;
"@MMK_R_x" = -11;
"@MMK_R_y" = -21;
"@MMK_R_z" = -33;
};
"@MMK_L_K" = {
"@MMK_R_C" = -46;
"@MMK_R_a" = -12;
"@MMK_R_a.salt" = -13;
"@MMK_R_asterisk" = 15;
"@MMK_R_b" = 105;
"@MMK_R_backslash" = 22;
"@MMK_R_braceright" = 20;
"@MMK_R_bracketright" = 20;
"@MMK_R_c" = -54;
"@MMK_R_c.salt" = -56;
"@MMK_R_d" = -50;
"@MMK_R_dotlessj" = -30;
"@MMK_R_emdash" = -48;
"@MMK_R_eng" = -13;
"@MMK_R_g" = -6;
"@MMK_R_germandbls" = 52;
"@MMK_R_guillemotleft" = -49;
"@MMK_R_guillemotright" = -38;
"@MMK_R_l" = 43;
"@MMK_R_p" = -37;
"@MMK_R_parenright" = 6;
"@MMK_R_q" = -43;
"@MMK_R_quotedblright" = 13;
"@MMK_R_slash" = 10;
"@MMK_R_t" = -54;
"@MMK_R_trademark" = 24;
"@MMK_R_u" = -81;
"@MMK_R_v" = -155;
"@MMK_R_w" = -172;
"@MMK_R_y" = -98;
};
"@MMK_L_K.salt" = {
"@MMK_R_AE" = 9;
"@MMK_R_C" = -25;
"@MMK_R_b" = 89;
"@MMK_R_c" = -24;
"@MMK_R_d" = -23;
"@MMK_R_dotlessj" = -40;
"@MMK_R_emdash" = -27;
"@MMK_R_g" = -20;
"@MMK_R_germandbls" = 44;
"@MMK_R_guillemotleft" = -27;
"@MMK_R_guillemotright" = -18;
"@MMK_R_l" = 32;
"@MMK_R_quotedblright" = 5;
"@MMK_R_s" = -5;
"@MMK_R_t" = -28;
"@MMK_R_u" = -51;
"@MMK_R_w" = -83;
"@MMK_R_y" = -65;
};
"@MMK_L_L" = {
"@MMK_R_AE" = 6;
"@MMK_R_Aacute" = 16;
"@MMK_R_T" = -57;
"@MMK_R_U" = -25;
"@MMK_R_V" = -49;
"@MMK_R_W" = -51;
"@MMK_R_Y" = -58;
"@MMK_R_asterisk" = -40;
"@MMK_R_backslash" = -52;
"@MMK_R_dotlessj" = -13;
"@MMK_R_f_f" = -6;
"@MMK_R_p" = -16;
"@MMK_R_question" = -24;
"@MMK_R_quotedbl" = -35;
"@MMK_R_quotedblleft" = -33;
"@MMK_R_quotedblright" = -34;
"@MMK_R_space" = -23;
"@MMK_R_trademark" = -34;
"@MMK_R_u" = -11;
"@MMK_R_v" = -39;
"@MMK_R_w" = -36;
"@MMK_R_y" = -38;
};
"@MMK_L_M" = {
"@MMK_R_C" = -19;
"@MMK_R_J" = -16;
"@MMK_R_a" = -24;
"@MMK_R_c" = -41;
"@MMK_R_d" = -39;
"@MMK_R_dotlessi" = -11;
"@MMK_R_dotlessj" = -25;
"@MMK_R_emdash" = -19;
"@MMK_R_eng" = -12;
"@MMK_R_f" = -7;
"@MMK_R_g" = -28;
"@MMK_R_guillemotleft" = -14;
"@MMK_R_r" = -11;
"@MMK_R_s" = -11;
"@MMK_R_t" = -34;
"@MMK_R_u" = -40;
"@MMK_R_w" = -52;
"@MMK_R_y" = -35;
"@MMK_R_z" = -12;
};
"@MMK_L_O" = {
"@MMK_R_AE" = -28;
"@MMK_R_Aacute" = -12;
"@MMK_R_B" = -11;
"@MMK_R_M" = -11;
"@MMK_R_U" = -14;
"@MMK_R_V" = -17;
"@MMK_R_W" = -15;
"@MMK_R_X" = -28;
"@MMK_R_Y" = -17;
"@MMK_R_a" = -6;
"@MMK_R_apostrophe" = -17;
"@MMK_R_braceright" = -19;
"@MMK_R_bracketright" = -21;
"@MMK_R_comma" = -16;
"@MMK_R_g" = -9;
"@MMK_R_germandbls" = -6;
"@MMK_R_l" = -6;
"@MMK_R_one" = -14;
"@MMK_R_parenright" = -12;
"@MMK_R_q" = -5;
"@MMK_R_s" = -6;
"@MMK_R_seven" = -14;
"@MMK_R_slash" = -15;
};
"@MMK_L_P" = {
"@MMK_R_AE" = -80;
"@MMK_R_Aacute" = -73;
"@MMK_R_B" = -5;
"@MMK_R_J" = -62;
"@MMK_R_a" = -51;
"@MMK_R_b" = 16;
"@MMK_R_c" = -58;
"@MMK_R_comma" = -51;
"@MMK_R_d" = -55;
"@MMK_R_emdash" = -37;
"@MMK_R_g" = -72;
"@MMK_R_s" = -49;
"@MMK_R_y" = -13;
"@MMK_R_z" = -41;
};
"@MMK_L_R" = {
"@MMK_R_C" = -6;
"@MMK_R_J" = -5;
"@MMK_R_U" = -19;
"@MMK_R_V" = -29;
"@MMK_R_W" = -31;
"@MMK_R_Y" = -38;
"@MMK_R_ampersand" = -12;
"@MMK_R_braceright" = 34;
"@MMK_R_bracketright" = 34;
"@MMK_R_c" = -35;
"@MMK_R_c.salt" = -38;
"@MMK_R_d" = -33;
"@MMK_R_dotlessj" = -5;
"@MMK_R_emdash" = -51;
"@MMK_R_p" = -12;
"@MMK_R_parenright" = 21;
"@MMK_R_q" = -25;
"@MMK_R_slash" = 24;
"@MMK_R_space" = -26;
"@MMK_R_t" = -14;
"@MMK_R_u" = -17;
"@MMK_R_v" = -37;
"@MMK_R_w" = -42;
"@MMK_R_y" = -29;
};
"@MMK_L_R.salt" = {
"@MMK_R_AE" = 33;
"@MMK_R_C" = -15;
"@MMK_R_U" = -25;
"@MMK_R_W" = -25;
"@MMK_R_Y" = -19;
"@MMK_R_c" = -24;
"@MMK_R_d" = -24;
"@MMK_R_dotlessj" = 81;
"@MMK_R_emdash" = -24;
"@MMK_R_guillemotleft" = -13;
"@MMK_R_t" = -12;
"@MMK_R_u" = -14;
"@MMK_R_w" = -28;
"@MMK_R_y" = -28;
};
"@MMK_L_S" = {
"@MMK_R_AE" = -10;
"@MMK_R_W" = 7;
"@MMK_R_b" = 65;
"@MMK_R_c" = -5;
"@MMK_R_c.salt" = -5;
"@MMK_R_g" = -25;
"@MMK_R_germandbls" = 16;
"@MMK_R_l" = 15;
"@MMK_R_m" = -6;
"@MMK_R_p" = -7;
"@MMK_R_s.salt" = -5;
"@MMK_R_v" = -7;
"@MMK_R_w" = -7;
"@MMK_R_y" = -20;
"@MMK_R_z" = -11;
};
"@MMK_L_T" = {
"@MMK_R_AE" = -74;
"@MMK_R_Aacute" = -42;
"@MMK_R_J" = -60;
"@MMK_R_V" = 25;
"@MMK_R_W" = 29;
"@MMK_R_Y" = 21;
"@MMK_R_a" = -111;
"@MMK_R_a.salt" = -87;
"@MMK_R_ampersand" = -19;
"@MMK_R_asterisk" = 8;
"@MMK_R_b" = 87;
"@MMK_R_braceright" = 7;
"@MMK_R_bracketright" = 10;
"@MMK_R_c" = -132;
"@MMK_R_c.salt" = -132;
"@MMK_R_colon" = -21;
"@MMK_R_comma" = -20;
"@MMK_R_d" = -101;
"@MMK_R_dotlessi" = -34;
"@MMK_R_dotlessj" = -33;
"@MMK_R_emdash" = -51;
"@MMK_R_eng" = -79;
"@MMK_R_f" = -31;
"@MMK_R_f_f" = -31;
"@MMK_R_g" = -139;
"@MMK_R_germandbls" = 38;
"@MMK_R_guillemotleft" = -19;
"@MMK_R_l" = 37;
"@MMK_R_m" = -79;
"@MMK_R_p" = -81;
"@MMK_R_q" = -128;
"@MMK_R_r" = -76;
"@MMK_R_registered" = -45;
"@MMK_R_s" = -102;
"@MMK_R_s.salt" = -106;
"@MMK_R_slash" = -29;
"@MMK_R_space" = -26;
"@MMK_R_t" = -26;
"@MMK_R_u" = -73;
"@MMK_R_v" = -84;
"@MMK_R_w" = -82;
"@MMK_R_x" = -87;
"@MMK_R_y" = -91;
"@MMK_R_z" = -92;
};
"@MMK_L_Thorn" = {
"@MMK_R_AE" = -80;
"@MMK_R_Aacute" = -46;
"@MMK_R_B" = -24;
"@MMK_R_J" = -30;
"@MMK_R_U" = -21;
"@MMK_R_W" = -33;
"@MMK_R_Y" = -63;
"@MMK_R_Z" = -10;
"@MMK_R_a" = -5;
"@MMK_R_c" = -5;
"@MMK_R_comma" = -35;
"@MMK_R_g" = -12;
"@MMK_R_germandbls" = -8;
"@MMK_R_l" = -8;
"@MMK_R_quotedbl" = -14;
"@MMK_R_quotedblleft" = -30;
"@MMK_R_quotedblright" = -21;
};
"@MMK_L_U" = {
"@MMK_R_AE" = -55;
"@MMK_R_Aacute" = -34;
"@MMK_R_B" = -5;
"@MMK_R_C" = -10;
"@MMK_R_J" = -21;
"@MMK_R_S" = -7;
"@MMK_R_U" = -7;
"@MMK_R_a" = -34;
"@MMK_R_a.salt" = -32;
"@MMK_R_ampersand" = -15;
"@MMK_R_asterisk" = 30;
"@MMK_R_b" = -13;
"@MMK_R_c" = -29;
"@MMK_R_c.salt" = -29;
"@MMK_R_comma" = -23;
"@MMK_R_d" = -29;
"@MMK_R_dotlessi" = -13;
"@MMK_R_dotlessj" = -12;
"@MMK_R_eng" = -12;
"@MMK_R_f" = -18;
"@MMK_R_g" = -35;
"@MMK_R_germandbls" = -19;
"@MMK_R_l" = -18;
"@MMK_R_m" = -13;
"@MMK_R_p" = -14;
"@MMK_R_q" = -30;
"@MMK_R_r" = -13;
"@MMK_R_registered" = -20;
"@MMK_R_s" = -30;
"@MMK_R_s.salt" = -25;
"@MMK_R_slash" = -30;
"@MMK_R_t" = -12;
"@MMK_R_u" = -12;
"@MMK_R_v" = -18;
"@MMK_R_w" = -21;
"@MMK_R_x" = -12;
"@MMK_R_y" = -21;
"@MMK_R_z" = -34;
};
"@MMK_L_V" = {
"@MMK_R_AE" = -108;
"@MMK_R_Aacute" = -66;
"@MMK_R_C" = -7;
"@MMK_R_J" = -51;
"@MMK_R_T" = 34;
"@MMK_R_a" = -115;
"@MMK_R_c" = -115;
"@MMK_R_colon" = -20;
"@MMK_R_comma" = -45;
"@MMK_R_d" = -114;
"@MMK_R_dotlessi" = -67;
"@MMK_R_dotlessj" = -68;
"@MMK_R_emdash" = -27;
"@MMK_R_eng" = -66;
"@MMK_R_f" = -43;
"@MMK_R_f_f" = -58;
"@MMK_R_g" = -137;
"@MMK_R_germandbls" = -15;
"@MMK_R_guillemotleft" = -13;
"@MMK_R_l" = -14;
"@MMK_R_quotedbl" = 28;
"@MMK_R_quotedblleft" = 36;
"@MMK_R_quotedblright" = 25;
"@MMK_R_r" = -65;
"@MMK_R_s" = -114;
"@MMK_R_t" = -59;
"@MMK_R_u" = -63;
"@MMK_R_w" = -75;
"@MMK_R_y" = -74;
"@MMK_R_z" = -100;
};
"@MMK_L_W" = {
"@MMK_R_AE" = -103;
"@MMK_R_Aacute" = -60;
"@MMK_R_C" = -9;
"@MMK_R_J" = -52;
"@MMK_R_T" = 27;
"@MMK_R_a" = -114;
"@MMK_R_a.salt" = -97;
"@MMK_R_asterisk" = 62;
"@MMK_R_backslash" = 28;
"@MMK_R_braceright" = 8;
"@MMK_R_bracketright" = 11;
"@MMK_R_c" = -115;
"@MMK_R_c.salt" = -115;
"@MMK_R_colon" = -20;
"@MMK_R_comma" = -45;
"@MMK_R_d" = -114;
"@MMK_R_dotlessi" = -68;
"@MMK_R_dotlessj" = -69;
"@MMK_R_emdash" = -28;
"@MMK_R_eng" = -68;
"@MMK_R_f" = -44;
"@MMK_R_f_f" = -56;
"@MMK_R_g" = -136;
"@MMK_R_germandbls" = -15;
"@MMK_R_guillemotleft" = -14;
"@MMK_R_l" = -15;
"@MMK_R_m" = -68;
"@MMK_R_p" = -72;
"@MMK_R_q" = -118;
"@MMK_R_question" = 6;
"@MMK_R_quotedbl" = 21;
"@MMK_R_quotedblleft" = 27;
"@MMK_R_quotedblright" = 8;
"@MMK_R_r" = -67;
"@MMK_R_registered" = -50;
"@MMK_R_s" = -114;
"@MMK_R_s.salt" = -109;
"@MMK_R_slash" = -55;
"@MMK_R_space" = -26;
"@MMK_R_t" = -61;
"@MMK_R_trademark" = 50;
"@MMK_R_u" = -65;
"@MMK_R_v" = -74;
"@MMK_R_w" = -77;
"@MMK_R_x" = -77;
"@MMK_R_y" = -76;
"@MMK_R_z" = -100;
};
"@MMK_L_X" = {
"@MMK_R_C" = -31;
"@MMK_R_b" = 98;
"@MMK_R_c" = -28;
"@MMK_R_d" = -24;
"@MMK_R_emdash" = -28;
"@MMK_R_g" = 6;
"@MMK_R_germandbls" = 42;
"@MMK_R_guillemotleft" = -28;
"@MMK_R_guillemotright" = -15;
"@MMK_R_l" = 44;
"@MMK_R_t" = -33;
"@MMK_R_u" = -54;
"@MMK_R_w" = -114;
"@MMK_R_y" = -41;
};
"@MMK_L_Y" = {
"@MMK_R_AE" = -88;
"@MMK_R_Aacute" = -63;
"@MMK_R_C" = -12;
"@MMK_R_J" = -59;
"@MMK_R_T" = 34;
"@MMK_R_a" = -137;
"@MMK_R_a.salt" = -119;
"@MMK_R_asterisk" = 58;
"@MMK_R_b" = 7;
"@MMK_R_backslash" = 40;
"@MMK_R_braceright" = 24;
"@MMK_R_bracketright" = 24;
"@MMK_R_c" = -162;
"@MMK_R_c.salt" = -163;
"@MMK_R_colon" = -16;
"@MMK_R_comma" = -15;
"@MMK_R_d" = -88;
"@MMK_R_dotlessi" = -91;
"@MMK_R_dotlessj" = -88;
"@MMK_R_emdash" = -44;
"@MMK_R_eng" = -92;
"@MMK_R_f" = -50;
"@MMK_R_g" = -157;
"@MMK_R_guillemotleft" = -29;
"@MMK_R_guillemotright" = -18;
"@MMK_R_m" = -102;
"@MMK_R_p" = -102;
"@MMK_R_parenright" = 17;
"@MMK_R_q" = -158;
"@MMK_R_question" = 11;
"@MMK_R_quotedbl" = 28;
"@MMK_R_quotedblleft" = 36;
"@MMK_R_quotedblright" = 10;
"@MMK_R_r" = -92;
"@MMK_R_registered" = -56;
"@MMK_R_s" = -118;
"@MMK_R_s.salt" = -131;
"@MMK_R_slash" = -27;
"@MMK_R_space" = -27;
"@MMK_R_t" = -88;
"@MMK_R_trademark" = 56;
"@MMK_R_u" = -97;
"@MMK_R_v" = -97;
"@MMK_R_w" = -103;
"@MMK_R_x" = -95;
"@MMK_R_y" = -100;
"@MMK_R_z" = -112;
};
"@MMK_L_Z" = {
"@MMK_R_b" = 54;
"@MMK_R_dotlessj" = -5;
"@MMK_R_f_f" = -5;
"@MMK_R_germandbls" = 11;
"@MMK_R_p" = -10;
"@MMK_R_u" = -6;
"@MMK_R_v" = -18;
"@MMK_R_w" = -21;
"@MMK_R_y" = -16;
};
"@MMK_L_a" = {
"@MMK_R_T" = -80;
"@MMK_R_U" = -11;
"@MMK_R_Y" = -104;
"@MMK_R_backslash" = -39;
"@MMK_R_parenright" = 16;
"@MMK_R_slash" = 23;
"@MMK_R_v" = -13;
"@MMK_R_w" = -17;
};
"@MMK_L_a.salt" = {
"@MMK_R_w" = -36;
"@MMK_R_y" = -6;
};
"@MMK_L_ae" = {
"@MMK_R_B" = -20;
"@MMK_R_M" = -22;
"@MMK_R_T" = -120;
"@MMK_R_U" = -34;
"@MMK_R_V" = -114;
"@MMK_R_W" = -122;
"@MMK_R_X" = -7;
"@MMK_R_Y" = -146;
"@MMK_R_Z" = -7;
"@MMK_R_backslash" = -57;
"@MMK_R_braceright" = -20;
"@MMK_R_bracketright" = -17;
"@MMK_R_question" = -17;
"@MMK_R_trademark" = -16;
"@MMK_R_w" = -10;
"@MMK_R_x" = -22;
};
"@MMK_L_ampersand" = {
"@MMK_R_AE" = 91;
"@MMK_R_Aacute" = 101;
"@MMK_R_B" = 21;
"@MMK_R_C" = -22;
"@MMK_R_J" = 12;
"@MMK_R_S" = 6;
"@MMK_R_T" = -35;
"@MMK_R_U" = -38;
"@MMK_R_W" = -56;
"@MMK_R_Y" = -36;
"@MMK_R_Z" = 32;
"@MMK_R_dotlessi" = 26;
"@MMK_R_eng" = 18;
"@MMK_R_germandbls" = 51;
"@MMK_R_l" = 50;
"@MMK_R_quotedbl" = -41;
"@MMK_R_r" = 21;
"@MMK_R_s" = 8;
"@MMK_R_w" = -27;
"@MMK_R_y" = -14;
"@MMK_R_z" = 24;
};
"@MMK_L_apostrophe" = {
"@MMK_R_c" = -22;
"@MMK_R_g" = -47;
};
"@MMK_L_asterisk" = {
"@MMK_R_AE" = -69;
"@MMK_R_Aacute" = -27;
"@MMK_R_J" = -32;
"@MMK_R_T" = 8;
"@MMK_R_W" = 18;
"@MMK_R_Y" = 9;
"@MMK_R_b" = 48;
"@MMK_R_c" = -10;
"@MMK_R_d" = -24;
"@MMK_R_g" = -29;
};
"@MMK_L_at" = {
"@MMK_R_B" = -16;
"@MMK_R_quotedbl" = -12;
};
"@MMK_L_b" = {
"@MMK_R_AE" = -7;
"@MMK_R_B" = -21;
"@MMK_R_M" = -23;
"@MMK_R_T" = -131;
"@MMK_R_U" = -31;
"@MMK_R_V" = -121;
"@MMK_R_W" = -130;
"@MMK_R_X" = -11;
"@MMK_R_Y" = -155;
"@MMK_R_Z" = -14;
"@MMK_R_asterisk" = -46;
"@MMK_R_backslash" = -60;
"@MMK_R_braceright" = -25;
"@MMK_R_bracketright" = -23;
"@MMK_R_f_f" = -6;
"@MMK_R_question" = -23;
"@MMK_R_quotedbl" = -48;
"@MMK_R_quotedblleft" = -48;
"@MMK_R_quotedblright" = -48;
"@MMK_R_trademark" = -30;
"@MMK_R_v" = -13;
"@MMK_R_w" = -20;
"@MMK_R_x" = -33;
};
"@MMK_L_backslash" = {
"@MMK_R_AE" = 49;
"@MMK_R_Aacute" = 58;
"@MMK_R_C" = -15;
"@MMK_R_T" = -34;
"@MMK_R_U" = -32;
"@MMK_R_W" = -62;
"@MMK_R_Y" = -36;
"@MMK_R_germandbls" = 14;
"@MMK_R_l" = 12;
"@MMK_R_quotedbl" = -54;
"@MMK_R_w" = -29;
"@MMK_R_y" = -14;
};
"@MMK_L_bar" = {
"@MMK_R_b" = 17;
"@MMK_R_dotlessj" = 61;
};
"@MMK_L_braceleft" = {
"@MMK_R_AE" = 19;
"@MMK_R_Aacute" = 27;
"@MMK_R_B" = 12;
"@MMK_R_C" = -20;
"@MMK_R_J" = -12;
"@MMK_R_T" = 8;
"@MMK_R_U" = 15;
"@MMK_R_W" = 47;
"@MMK_R_Y" = 36;
"@MMK_R_a" = -12;
"@MMK_R_b" = 76;
"@MMK_R_c" = -22;
"@MMK_R_d" = -21;
"@MMK_R_germandbls" = 30;
"@MMK_R_l" = 30;
"@MMK_R_u" = -14;
"@MMK_R_w" = -25;
};
"@MMK_L_bracketleft" = {
"@MMK_R_AE" = 19;
"@MMK_R_Aacute" = 27;
"@MMK_R_B" = 11;
"@MMK_R_C" = -21;
"@MMK_R_J" = -13;
"@MMK_R_T" = 10;
"@MMK_R_U" = 13;
"@MMK_R_W" = 47;
"@MMK_R_Y" = 36;
"@MMK_R_a" = -12;
"@MMK_R_b" = 76;
"@MMK_R_c" = -23;
"@MMK_R_d" = -21;
"@MMK_R_germandbls" = 30;
"@MMK_R_l" = 30;
"@MMK_R_u" = -14;
"@MMK_R_w" = -24;
};
"@MMK_L_c" = {
"@MMK_R_B" = -13;
"@MMK_R_T" = -82;
"@MMK_R_U" = -30;
"@MMK_R_Y" = -118;
"@MMK_R_backslash" = -34;
"@MMK_R_braceright" = -14;
};
"@MMK_L_c_h" = {
"@MMK_R_B" = -11;
"@MMK_R_C" = -8;
"@MMK_R_T" = -133;
"@MMK_R_U" = -51;
"@MMK_R_Y" = -157;
"@MMK_R_asterisk" = -39;
"@MMK_R_backslash" = -62;
"@MMK_R_braceright" = 35;
"@MMK_R_bracketright" = 31;
"@MMK_R_question" = -17;
"@MMK_R_quotedbl" = -40;
"@MMK_R_quotedblleft" = -41;
"@MMK_R_quotedblright" = -41;
"@MMK_R_t" = -6;
"@MMK_R_trademark" = -32;
"@MMK_R_u" = -19;
"@MMK_R_v" = -40;
"@MMK_R_w" = -42;
};
"@MMK_L_c_k" = {
"@MMK_R_a" = -20;
"@MMK_R_a.salt" = -11;
"@MMK_R_ampersand" = -19;
"@MMK_R_asterisk" = -43;
"@MMK_R_b" = -5;
"@MMK_R_backslash" = -55;
"@MMK_R_braceright" = 20;
"@MMK_R_bracketright" = 18;
"@MMK_R_c" = -39;
"@MMK_R_c.salt" = -37;
"@MMK_R_d" = -29;
"@MMK_R_emdash" = -60;
"@MMK_R_guillemotright" = -13;
"@MMK_R_q" = -41;
"@MMK_R_question" = -18;
"@MMK_R_quotedbl" = -46;
"@MMK_R_quotedblleft" = -47;
"@MMK_R_quotedblright" = -47;
"@MMK_R_registered" = -12;
"@MMK_R_s.salt" = -6;
"@MMK_R_trademark" = -25;
"@MMK_R_w" = -6;
};
"@MMK_L_c_p" = {
"@MMK_R_AE" = -11;
"@MMK_R_B" = -23;
"@MMK_R_M" = -24;
"@MMK_R_T" = -132;
"@MMK_R_U" = -33;
"@MMK_R_V" = -120;
"@MMK_R_W" = -128;
"@MMK_R_X" = -14;
"@MMK_R_Y" = -157;
"@MMK_R_Z" = -17;
"@MMK_R_apostrophe" = -19;
"@MMK_R_backslash" = -59;
"@MMK_R_braceright" = -25;
"@MMK_R_bracketright" = -23;
"@MMK_R_question" = -21;
"@MMK_R_trademark" = -18;
"@MMK_R_v" = -10;
"@MMK_R_w" = -17;
"@MMK_R_x" = -36;
};
"@MMK_L_c_t" = {
"@MMK_R_Aacute" = 7;
"@MMK_R_B" = -6;
"@MMK_R_T" = -94;
"@MMK_R_U" = -25;
"@MMK_R_Y" = -115;
"@MMK_R_asterisk" = -22;
"@MMK_R_backslash" = -40;
"@MMK_R_braceright" = -17;
"@MMK_R_quotedbl" = -19;
"@MMK_R_quotedblleft" = -15;
"@MMK_R_quotedblright" = -17;
"@MMK_R_trademark" = -12;
};
"@MMK_L_colon" = {
"@MMK_R_AE" = 9;
"@MMK_R_Aacute" = 18;
"@MMK_R_T" = -25;
"@MMK_R_V" = -22;
"@MMK_R_W" = -24;
"@MMK_R_Y" = -21;
"@MMK_R_v" = -11;
"@MMK_R_w" = -12;
};
"@MMK_L_comma" = {
"@MMK_R_AE" = 15;
"@MMK_R_Aacute" = 24;
"@MMK_R_C" = -15;
"@MMK_R_T" = -24;
"@MMK_R_U" = -23;
"@MMK_R_V" = -45;
"@MMK_R_W" = -48;
"@MMK_R_Y" = -21;
"@MMK_R_dotlessj" = -10;
"@MMK_R_nine" = -18;
"@MMK_R_p" = -16;
"@MMK_R_quotedbl" = -81;
"@MMK_R_quotedblleft" = -76;
"@MMK_R_quotedblright" = -78;
"@MMK_R_u" = -13;
"@MMK_R_v" = -50;
"@MMK_R_w" = -52;
"@MMK_R_y" = -26;
};
"@MMK_L_d" = {
"@MMK_R_T" = -17;
"@MMK_R_U" = -28;
"@MMK_R_Y" = -19;
"@MMK_R_braceright" = 29;
"@MMK_R_bracketright" = 29;
"@MMK_R_parenright" = 31;
"@MMK_R_slash" = 36;
};
"@MMK_L_dotlessi" = {
"@MMK_R_C" = -6;
"@MMK_R_T" = -27;
"@MMK_R_U" = -41;
"@MMK_R_Y" = -103;
"@MMK_R_backslash" = -28;
"@MMK_R_parenright" = 11;
"@MMK_R_slash" = 13;
"@MMK_R_v" = -7;
"@MMK_R_w" = -13;
};
"@MMK_L_dotlessj" = {
"@MMK_R_B" = -14;
"@MMK_R_M" = -16;
"@MMK_R_T" = -25;
"@MMK_R_U" = -23;
"@MMK_R_V" = -73;
"@MMK_R_W" = -76;
"@MMK_R_Y" = -100;
"@MMK_R_Z" = -5;
"@MMK_R_backslash" = -19;
"@MMK_R_dotlessj" = 62;
};
"@MMK_L_emdash" = {
"@MMK_R_AE" = -29;
"@MMK_R_Aacute" = -18;
"@MMK_R_B" = -13;
"@MMK_R_M" = -14;
"@MMK_R_T" = -50;
"@MMK_R_U" = -12;
"@MMK_R_V" = -31;
"@MMK_R_W" = -33;
"@MMK_R_X" = -25;
"@MMK_R_Y" = -45;
"@MMK_R_Z" = -14;
"@MMK_R_dotlessi" = -10;
"@MMK_R_dotlessj" = -10;
"@MMK_R_eng" = -13;
"@MMK_R_p" = -16;
"@MMK_R_r" = -11;
"@MMK_R_v" = -21;
"@MMK_R_w" = -21;
"@MMK_R_x" = -27;
"@MMK_R_y" = -22;
};
"@MMK_L_eth" = {
"@MMK_R_B" = -18;
"@MMK_R_T" = -26;
};
"@MMK_L_exclamdown" = {
"@MMK_R_U" = -19;
"@MMK_R_W" = -28;
"@MMK_R_Y" = -32;
"@MMK_R_dotlessj" = 58;
};
"@MMK_L_f" = {
"@MMK_R_B" = 91;
"@MMK_R_C" = 45;
"@MMK_R_T" = 150;
"@MMK_R_U" = 89;
"@MMK_R_Y" = 162;
"@MMK_R_c" = -7;
"@MMK_R_c.salt" = -6;
"@MMK_R_emdash" = -17;
"@MMK_R_quotedbl" = 119;
"@MMK_R_quotedblleft" = 124;
"@MMK_R_quotedblright" = 121;
};
"@MMK_L_f_f_i" = {
"@MMK_R_w" = -6;
};
"@MMK_L_g" = {
"@MMK_R_C" = -9;
"@MMK_R_T" = -46;
"@MMK_R_U" = -23;
"@MMK_R_Y" = -85;
"@MMK_R_a" = -8;
"@MMK_R_a.salt" = -8;
"@MMK_R_backslash" = -16;
"@MMK_R_braceright" = 73;
"@MMK_R_bracketright" = 69;
"@MMK_R_parenright" = 31;
"@MMK_R_slash" = 33;
"@MMK_R_v" = -6;
};
"@MMK_L_germandbls" = {
"@MMK_R_B" = -7;
"@MMK_R_C" = -13;
"@MMK_R_T" = -73;
"@MMK_R_dotlessj" = -18;
"@MMK_R_f_f" = -10;
"@MMK_R_guillemotleft" = -21;
"@MMK_R_u" = -12;
"@MMK_R_w" = -64;
"@MMK_R_y" = -58;
};
"@MMK_L_guillemotleft" = {
"@MMK_R_AE" = -31;
"@MMK_R_Aacute" = -11;
"@MMK_R_X" = -14;
"@MMK_R_Y" = -21;
};
"@MMK_L_guillemotright" = {
"@MMK_R_AE" = -40;
"@MMK_R_Aacute" = -18;
"@MMK_R_M" = -10;
"@MMK_R_T" = -18;
"@MMK_R_V" = -15;
"@MMK_R_W" = -16;
"@MMK_R_X" = -27;
"@MMK_R_Y" = -32;
};
"@MMK_L_k" = {
"@MMK_R_T" = -79;
"@MMK_R_U" = -25;
"@MMK_R_Y" = -102;
"@MMK_R_c" = -21;
"@MMK_R_d" = -19;
"@MMK_R_emdash" = -19;
"@MMK_R_quotedbl" = -28;
"@MMK_R_quotedblleft" = -28;
"@MMK_R_quotedblright" = -28;
};
"@MMK_L_l" = {
"@MMK_R_T" = -9;
"@MMK_R_U" = -15;
"@MMK_R_Y" = -5;
"@MMK_R_parenright" = 8;
"@MMK_R_slash" = 11;
};
"@MMK_L_m" = {
"@MMK_R_C" = -6;
"@MMK_R_T" = -107;
"@MMK_R_U" = -43;
"@MMK_R_Y" = -131;
"@MMK_R_u" = -8;
"@MMK_R_w" = -41;
"@MMK_R_y" = -5;
};
"@MMK_L_n" = {
"@MMK_R_C" = -7;
"@MMK_R_T" = -110;
"@MMK_R_U" = -45;
"@MMK_R_Y" = -134;
"@MMK_R_backslash" = -60;
"@MMK_R_braceright" = 21;
"@MMK_R_bracketright" = 21;
"@MMK_R_parenright" = 16;
"@MMK_R_question" = -15;
"@MMK_R_slash" = 21;
"@MMK_R_trademark" = -10;
"@MMK_R_u" = -9;
"@MMK_R_v" = -32;
"@MMK_R_w" = -41;
"@MMK_R_y" = -5;
};
"@MMK_L_nine" = {
"@MMK_R_B" = -13;
"@MMK_R_comma" = -36;
};
"@MMK_L_parenleft" = {
"@MMK_R_AE" = 22;
"@MMK_R_Aacute" = 32;
"@MMK_R_C" = -14;
"@MMK_R_W" = 47;
"@MMK_R_Y" = 35;
"@MMK_R_b" = 79;
"@MMK_R_c" = -16;
"@MMK_R_d" = -16;
"@MMK_R_g" = -14;
"@MMK_R_germandbls" = 28;
"@MMK_R_l" = 31;
"@MMK_R_w" = -17;
"@MMK_R_y" = -15;
};
"@MMK_L_q" = {
"@MMK_R_B" = -11;
"@MMK_R_T" = -90;
"@MMK_R_U" = -14;
"@MMK_R_Y" = -121;
};
"@MMK_L_questiondown" = {
"@MMK_R_AE" = 41;
"@MMK_R_Aacute" = 51;
"@MMK_R_C" = -12;
"@MMK_R_T" = -18;
"@MMK_R_U" = -28;
"@MMK_R_W" = -50;
"@MMK_R_Y" = -37;
"@MMK_R_dotlessj" = 82;
"@MMK_R_w" = -16;
};
"@MMK_L_quotedbl" = {
"@MMK_R_AE" = -67;
"@MMK_R_Aacute" = -30;
"@MMK_R_J" = -25;
"@MMK_R_V" = 21;
"@MMK_R_W" = 26;
"@MMK_R_Y" = 17;
"@MMK_R_at" = -15;
"@MMK_R_b" = 62;
"@MMK_R_comma" = -81;
"@MMK_R_d" = -20;
"@MMK_R_four" = -37;
"@MMK_R_g" = -27;
"@MMK_R_germandbls" = 12;
"@MMK_R_l" = 11;
"@MMK_R_registered" = -15;
"@MMK_R_six" = -14;
"@MMK_R_slash" = -54;
"@MMK_R_space" = -30;
};
"@MMK_L_quotedblleft" = {
"@MMK_R_AE" = -67;
"@MMK_R_Aacute" = -31;
"@MMK_R_J" = -24;
"@MMK_R_V" = 7;
"@MMK_R_W" = 12;
"@MMK_R_X" = 9;
"@MMK_R_b" = 45;
"@MMK_R_comma" = -75;
"@MMK_R_d" = -19;
"@MMK_R_g" = -23;
};
"@MMK_L_quotedblright" = {
"@MMK_R_AE" = -67;
"@MMK_R_Aacute" = -32;
"@MMK_R_J" = -23;
"@MMK_R_V" = 32;
"@MMK_R_W" = 38;
"@MMK_R_Y" = 28;
"@MMK_R_b" = 72;
"@MMK_R_comma" = -81;
"@MMK_R_d" = -19;
"@MMK_R_g" = -29;
"@MMK_R_germandbls" = 22;
"@MMK_R_l" = 22;
};
"@MMK_L_r" = {
"@MMK_R_B" = -23;
"@MMK_R_T" = -121;
"@MMK_R_U" = -32;
"@MMK_R_Y" = -143;
"@MMK_R_backslash" = -47;
"@MMK_R_braceright" = -23;
"@MMK_R_bracketright" = -21;
"@MMK_R_comma" = -10;
};
"@MMK_L_registered" = {
"@MMK_R_B" = -16;
"@MMK_R_T" = -44;
"@MMK_R_U" = -24;
"@MMK_R_W" = -53;
"@MMK_R_Y" = -60;
"@MMK_R_quotedbl" = -12;
};
"@MMK_L_s" = {
"@MMK_R_B" = -13;
"@MMK_R_T" = -80;
"@MMK_R_U" = -35;
"@MMK_R_Y" = -127;
"@MMK_R_backslash" = -44;
"@MMK_R_braceright" = -15;
"@MMK_R_bracketright" = -12;
};
"@MMK_L_seven" = {
"@MMK_R_B" = 26;
"@MMK_R_C" = -14;
"@MMK_R_comma" = -67;
};
"@MMK_L_slash" = {
"@MMK_R_AE" = -85;
"@MMK_R_Aacute" = -58;
"@MMK_R_C" = -15;
"@MMK_R_J" = -48;
"@MMK_R_W" = 53;
"@MMK_R_Y" = 42;
"@MMK_R_a" = -59;
"@MMK_R_b" = 86;
"@MMK_R_c" = -60;
"@MMK_R_d" = -49;
"@MMK_R_dotlessi" = -21;
"@MMK_R_dotlessj" = -15;
"@MMK_R_eng" = -26;
"@MMK_R_g" = -61;
"@MMK_R_germandbls" = 36;
"@MMK_R_l" = 36;
"@MMK_R_r" = -26;
"@MMK_R_s" = -59;
"@MMK_R_t" = -15;
"@MMK_R_u" = -18;
"@MMK_R_w" = -24;
"@MMK_R_y" = -28;
"@MMK_R_z" = -52;
};
"@MMK_L_space" = {
"@MMK_R_AE" = -40;
"@MMK_R_Aacute" = -34;
"@MMK_R_J" = -30;
"@MMK_R_T" = -26;
"@MMK_R_W" = -32;
"@MMK_R_Y" = -30;
"@MMK_R_quotedbl" = -30;
"@MMK_R_w" = -23;
"@MMK_R_y" = -19;
};
"@MMK_L_t_t" = {
"@MMK_R_c" = -8;
};
"@MMK_L_t_z" = {
"@MMK_R_Aacute" = 9;
"@MMK_R_B" = -8;
"@MMK_R_T" = -102;
"@MMK_R_U" = -36;
"@MMK_R_Y" = -128;
"@MMK_R_backslash" = -51;
"@MMK_R_braceright" = -19;
"@MMK_R_question" = -13;
};
"@MMK_L_three" = {
"@MMK_R_comma" = -12;
};
"@MMK_L_trademark" = {
"@MMK_R_AE" = -61;
"@MMK_R_Aacute" = -21;
"@MMK_R_B" = 11;
"@MMK_R_J" = -30;
"@MMK_R_T" = 13;
"@MMK_R_U" = 20;
"@MMK_R_W" = 73;
"@MMK_R_Y" = 60;
"@MMK_R_b" = 92;
"@MMK_R_c" = -12;
"@MMK_R_d" = -14;
"@MMK_R_g" = -15;
"@MMK_R_germandbls" = 54;
"@MMK_R_l" = 54;
"@MMK_R_r" = 6;
"@MMK_R_t" = 10;
"@MMK_R_u" = 22;
"@MMK_R_w" = 15;
"@MMK_R_y" = 5;
};
"@MMK_L_u" = {
"@MMK_R_C" = -10;
"@MMK_R_T" = -108;
"@MMK_R_U" = -49;
"@MMK_R_Y" = -131;
"@MMK_R_backslash" = -58;
"@MMK_R_bracketright" = 8;
"@MMK_R_parenright" = 15;
"@MMK_R_question" = -15;
"@MMK_R_slash" = 19;
"@MMK_R_v" = -9;
"@MMK_R_w" = -24;
};
"@MMK_L_v" = {
"@MMK_R_Aacute" = -50;
"@MMK_R_B" = -22;
"@MMK_R_T" = -89;
"@MMK_R_U" = -20;
"@MMK_R_Y" = -131;
"@MMK_R_comma" = -49;
"@MMK_R_emdash" = -14;
"@MMK_R_g" = -8;
"@MMK_R_germandbls" = -6;
"@MMK_R_l" = -6;
};
"@MMK_L_w" = {
"@MMK_R_Aacute" = -55;
"@MMK_R_B" = -22;
"@MMK_R_T" = -88;
"@MMK_R_U" = -20;
"@MMK_R_Y" = -136;
"@MMK_R_backslash" = -35;
"@MMK_R_braceright" = -33;
"@MMK_R_bracketright" = -26;
"@MMK_R_comma" = -48;
"@MMK_R_emdash" = -10;
"@MMK_R_germandbls" = -6;
"@MMK_R_parenright" = -18;
"@MMK_R_slash" = -23;
"@MMK_R_space" = -20;
};
"@MMK_L_x" = {
"@MMK_R_T" = -94;
"@MMK_R_U" = -34;
"@MMK_R_Y" = -116;
"@MMK_R_c" = -43;
"@MMK_R_d" = -36;
"@MMK_R_emdash" = -26;
"@MMK_R_g" = -14;
"@MMK_R_u" = -5;
"@MMK_R_w" = -24;
};
"@MMK_L_y" = {
"@MMK_R_Aacute" = -46;
"@MMK_R_B" = -25;
"@MMK_R_T" = -91;
"@MMK_R_U" = -22;
"@MMK_R_Y" = -134;
"@MMK_R_backslash" = -37;
"@MMK_R_braceright" = -32;
"@MMK_R_bracketright" = -25;
"@MMK_R_comma" = -50;
"@MMK_R_emdash" = -16;
"@MMK_R_g" = -5;
"@MMK_R_germandbls" = -8;
"@MMK_R_l" = -7;
"@MMK_R_parenright" = -18;
"@MMK_R_q" = -6;
"@MMK_R_slash" = -23;
"@MMK_R_space" = -18;
};
"@MMK_L_zero" = {
"@MMK_R_B" = -12;
"@MMK_R_comma" = -12;
};
A = {
apostrophemod = -55;
four = -13;
schwa = -13;
seven = 19;
zero = -14;
};
Aogonek = {
j = 122;
};
Aringacute = {
space = -39;
};
B = {
M = -12;
V = -17;
X = -44;
apostrophemod = -13;
braceright = -17;
bracketright = -18;
m = -7;
p = -13;
v = -18;
x = -17;
};
C = {
four = 6;
itilde = 9;
k = 14;
k.salt = 14;
kcommaaccent = 14;
};
Cacute = {
k = 14;
k.salt = 14;
};
Ccaron = {
k = 14;
k.salt = 14;
};
Ccedilla = {
k = 14;
k.salt = 14;
};
Ccircumflex = {
k = 14;
k.salt = 14;
};
Cdotaccent = {
k = 14;
k.salt = 14;
};
D = {
apostrophemod = -19;
itilde = 15;
};
Eng = {
germandbls = -21;
k = 54;
k.salt = 54;
};
F = {
V = 28;
a.salt = -36;
ampersand = -13;
asterisk = 15;
at = -23;
braceright = 9;
bracketright = 9;
c.salt = -47;
idotless = -31;
four = -12;
germandbls = -25;
idieresis = 2;
iogonek = -31;
k = 55;
k.salt = 55;
kcommaaccent = 55;
lslash = 19;
m = -33;
p = -22;
q = -51;
registered = -21;
s.salt = -41;
schwa = -41;
slash = -43;
space = -25;
v = -25;
x = -30;
};
H = {
at = -18;
four = -19;
germandbls = 1;
k = 39;
k.salt = 39;
kcommaaccent = 39;
lslash = 3;
schwa = -22;
seven = 10;
six = -18;
zero = -14;
};
Hbar = {
germandbls = 1;
k = 39;
k.salt = 39;
};
Hcircumflex = {
germandbls = 1;
k = 39;
k.salt = 39;
};
I = {
f_f_h = -10;
four = -16;
germandbls = 1;
hcircumflex = 15;
k.salt = 30;
kcommaaccent = 30;
lslash = 1;
schwa = -11;
seven = 5;
};
IJ = {
germandbls = -28;
};
Iacute = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Ibreve = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Icircumflex = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Idieresis = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Idotaccent = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Igrave = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Imacron = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Iogonek = {
f_f_h = -10;
germandbls = 1;
j = 61;
k.salt = 30;
};
Itilde = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
J = {
f_f_h = -16;
germandbls = -28;
hcircumflex = 19;
lslash = 20;
schwa = -23;
};
Jcircumflex = {
f_f_h = -16;
germandbls = -28;
};
K = {
four = -39;
germandbls = 1;
hcircumflex = 66;
k = 75;
k.salt = 68;
kcommaaccent = 68;
lslash = 30;
one = 30;
schwa = -52;
seven = 23;
six = -14;
thorn = 77;
two = 18;
};
K.salt = {
a.salt = -5;
asterisk = 6;
backslash = 9;
braceright = 5;
bracketright = 7;
c.salt = -24;
four = -27;
germandbls = 1;
hcircumflex = 50;
k = 59;
k.salt = 59;
kcommaaccent = 59;
lslash = 19;
one = 18;
p = -50;
q = -23;
registered = -15;
s.salt = -7;
schwa = -20;
seven = 11;
six = -13;
trademark = 8;
v = -72;
};
Kcommaaccent = {
germandbls = 1;
k = 75;
k.salt = 68;
thorn = 77;
};
L = {
apostrophemod = -61;
four = 18;
nine = -32;
};
M = {
a.salt = -24;
ampersand = -15;
asterisk = 31;
at = -22;
backslash = 11;
braceright = 6;
bracketright = 7;
c.salt = -41;
four = -25;
hcircumflex = 58;
m = -11;
one = 17;
p = -31;
q = -39;
registered = -25;
s.salt = -22;
schwa = -29;
seven = 16;
six = -21;
trademark = 16;
v = -48;
x = -11;
};
N = {
at = -23;
four = -15;
germandbls = -21;
k = 54;
k.salt = 54;
kcommaaccent = 54;
lslash = 20;
one = 9;
schwa = -28;
six = -19;
zero = -12;
};
Nacute = {
germandbls = -21;
k = 54;
k.salt = 54;
};
Ncaron = {
germandbls = -21;
k = 54;
k.salt = 54;
};
Ncommaaccent = {
germandbls = -21;
k = 54;
k.salt = 54;
};
Ndotaccent = {
germandbls = -21;
k = 54;
k.salt = 54;
};
Ntilde = {
germandbls = -21;
k = 54;
k.salt = 54;
};
O = {
itilde = 11;
};
P = {
X = -48;
a.salt = -24;
ampersand = -18;
asterisk = 11;
at = -26;
c.salt = -57;
idotless = -9;
four = -21;
germandbls = -15;
hbar = 22;
hcircumflex = 9;
icircumflex = 13;
iogonek = -9;
itilde = 46;
k = 6;
k.salt = 7;
kcommaaccent = 7;
m = -41;
nine = 7;
q = -67;
registered = -22;
s.salt = -43;
schwa = -44;
slash = -51;
space = -25;
x = -8;
};
Q = {
itilde = 11;
};
R = {
apostrophemod = -12;
four = -29;
one = 19;
schwa = -29;
seven = 37;
two = 25;
};
R.salt = {
V = -26;
apostrophemod = -19;
backslash = -17;
c.salt = -24;
four = -23;
p = -15;
q = -23;
registered = -12;
schwa = -13;
seven = 10;
v = -29;
};
S = {
germandbls = 1;
itilde = 22;
k = 27;
k.salt = 27;
kcommaaccent = 27;
lslash = 1;
};
Sacute = {
germandbls = 1;
k = 27;
k.salt = 27;
lslash = 1;
};
Scaron = {
germandbls = 1;
k = 27;
k.salt = 27;
kcommaaccent = 27;
};
Scircumflex = {
germandbls = 1;
k = 27;
k.salt = 27;
};
T = {
abreve = -101;
acircumflex = -86;
adieresis = -69;
at = -47;
atilde = -88;
ccaron = -114;
ccircumflex = -122;
idotless = -77;
ecaron = -113;
ecircumflex = -117;
edieresis = -99;
etilde = -80;
four = -44;
gbreve = -113;
gcircumflex = -113;
gdotaccent = -133;
germandbls = -27;
icircumflex = -9;
idieresis = -4;
iogonek = -77;
itilde = 7;
jcircumflex = -19;
k = 49;
k.salt = 49;
kcommaaccent = 49;
lslash = 15;
ocircumflex = -126;
odieresis = -116;
otilde = -111;
rcaron = -47;
scaron = -68;
schwa = -115;
scircumflex = -87;
six = -20;
utilde = -59;
zcaron = -78;
};
Tbar = {
germandbls = -27;
k = 49;
k.salt = 49;
};
Tcaron = {
germandbls = -27;
k = 49;
k.salt = 49;
};
Thorn = {
M = -25;
V = -31;
X = -77;
backslash = -19;
braceright = -25;
bracketright = -25;
c.salt = -5;
one = -21;
parenright = -19;
q = -7;
seven = -29;
slash = -28;
u = 7;
};
U = {
at = -21;
f_f_h = -17;
germandbls = -31;
schwa = -23;
six = -15;
};
Uacute = {
f_f_h = -17;
germandbls = -31;
};
Ubreve = {
f_f_h = -17;
germandbls = -31;
};
Ucircumflex = {
f_f_h = -17;
germandbls = -31;
};
Udieresis = {
f_f_h = -17;
germandbls = -31;
};
Ugrave = {
f_f_h = -17;
germandbls = -31;
};
Uhungarumlaut = {
f_f_h = -17;
germandbls = -31;
};
Umacron = {
f_f_h = -17;
germandbls = -31;
};
Uogonek = {
f_f_h = -17;
germandbls = -31;
};
Uring = {
f_f_h = -17;
germandbls = -31;
};
Utilde = {
f_f_h = -17;
germandbls = -31;
};
V = {
a.salt = -96;
asterisk = 63;
at = -51;
backslash = 36;
braceright = 17;
bracketright = 19;
c.salt = -115;
eth = -108;
four = -35;
germandbls = -29;
hcircumflex = -3;
m = -67;
nine = 19;
one = 31;
p = -71;
parenright = 12;
q = -119;
question = 18;
registered = -49;
s.salt = -109;
schwa = -96;
seven = 29;
six = -23;
slash = -56;
space = -26;
trademark = 55;
two = 6;
v = -72;
x = -76;
};
W = {
at = -51;
four = -36;
germandbls = -29;
nine = 22;
one = 23;
schwa = -96;
seven = 21;
six = -24;
two = 5;
};
Wacute = {
germandbls = -29;
};
Wcircumflex = {
germandbls = -29;
};
Wdieresis = {
germandbls = -29;
};
Wgrave = {
germandbls = -29;
};
X = {
backslash = 7;
braceright = 40;
bracketright = 40;
c.salt = -32;
four = -26;
germandbls = 1;
hcircumflex = 1;
lslash = 27;
one = 31;
p = -8;
parenright = 35;
q = -17;
schwa = -25;
seven = 49;
slash = 36;
three = 16;
trademark = 9;
two = 34;
v = -94;
};
Y = {
aringacute = -115;
at = -55;
idotless = -100;
eth = -138;
f_f_h = -70;
four = -50;
germandbls = -31;
hcircumflex = 93;
iogonek = -100;
nine = 16;
one = 35;
schwa = -131;
seven = 36;
six = -28;
};
Yacute = {
eth = -138;
f_f_h = -70;
germandbls = -31;
};
Ycircumflex = {
eth = -138;
f_f_h = -70;
germandbls = -31;
};
Ydieresis = {
eth = -138;
f_f_h = -70;
germandbls = -31;
};
Ygrave = {
eth = -138;
germandbls = -31;
};
Ytilde = {
eth = -138;
germandbls = -31;
};
Z = {
germandbls = 1;
k = 17;
k.salt = 19;
kcommaaccent = 19;
lslash = 7;
};
Zacute = {
germandbls = 1;
k = 17;
k.salt = 19;
};
Zcaron = {
germandbls = 1;
k = 17;
k.salt = 19;
};
Zdotaccent = {
germandbls = 1;
k = 17;
k.salt = 19;
lslash = 7;
};
a = {
AE = 57;
J = 25;
V = -120;
W = -132;
Z = 5;
lslash = 28;
};
a.salt = {
apostrophemod = -15;
backslash = -60;
lslash = 9;
question = -16;
slash = 5;
trademark = -12;
v = -25;
};
ampersand = {
B = 33;
D = 32;
Dcaron = 32;
Dcroat = 32;
E = 32;
Eacute = 32;
Ebreve = 32;
Ecaron = 32;
Ecircumflex = 32;
Edieresis = 32;
Edotaccent = 32;
Egrave = 32;
Emacron = 32;
Eogonek = 32;
Eth = 32;
Etilde = 32;
F = 32;
K.salt = 33;
L = 34;
Lacute = 34;
Lcaron = 33;
Lcommaaccent = 34;
Lslash = 36;
M = 19;
P = 32;
R = 31;
R.salt = 33;
Racute = 31;
Rcaron = 31;
Rcommaaccent = 31;
Thorn = 32;
V = -55;
X = 59;
f = 39;
k = 59;
k.salt = 59;
kcommaaccent = 59;
lslash = 32;
m = 21;
quoteright = -41;
v = -24;
x = 24;
};
aogonek = {
g = 34;
g.salt = 34;
j = 196;
lslash = 27;
parenright = 23;
thorn = 11;
};
apostrophemod = {
a = -16;
c.salt = -22;
d = -37;
f = -11;
q = -19;
s = -15;
s.salt = -15;
};
asterisk = {
Lcaron = 14;
V = 13;
c.salt = -10;
hcircumflex = 26;
k = 9;
k.salt = 9;
kcommaaccent = 9;
};
at = {
M = -18;
T = -48;
U = -24;
V = -52;
W = -54;
Y = -61;
};
b = {
apostrophemod = -62;
};
backslash = {
V = -59;
X = 20;
lslash = 1;
nine = -23;
quoteright = -56;
v = -26;
};
braceleft = {
Lcaron = 1;
V = 44;
X = 8;
braceleft = -12;
c.salt = -22;
four = -21;
germandbls = 8;
hcircumflex = 21;
lslash = 15;
one = 9;
p = -12;
parenleft = -17;
q = -19;
s.salt = -12;
seven = 8;
six = -21;
v = -23;
zero = -17;
};
braceright = {
braceright = -12;
};
bracketleft = {
Lcaron = 1;
V = 44;
X = 10;
c.salt = -23;
eight = -13;
four = -25;
germandbls = 8;
hcircumflex = 21;
lslash = 15;
one = 9;
parenleft = -18;
q = -20;
s.salt = -12;
seven = 9;
six = -23;
v = -22;
zero = -18;
};
c = {
M = -16;
V = -93;
W = -95;
};
c.salt = {
apostrophemod = -11;
backslash = -49;
braceright = -15;
};
ccedilla = {
j = 80;
};
comma = {
j = 32;
jcircumflex = 32;
};
d = {
AE = 31;
V = -9;
W = -12;
lslash = 21;
};
dcaron = {
asterisk = 34;
backslash = 52;
braceright = 57;
bracketright = 59;
quotedbl = 25;
quotedblleft = 27;
quotedblright = 31;
quoteleft = 27;
quoteright = 31;
quotesingle = 25;
trademark = 48;
};
degree = {
four = -41;
six = -17;
};
e = {
apostrophemod = -17;
};
eight = {
U = -12;
};
eng = {
backslash = -59;
question = -19;
trademark = -13;
v = -12;
w = -16;
};
eth = {
AE = -9;
M = -20;
U = -29;
V = -70;
W = -71;
X = -12;
Y = -76;
Z = -16;
backslash = -12;
braceright = -13;
bracketright = -12;
x = -12;
};
exclamdown = {
V = -27;
};
f = {
AE = 46;
F = 85;
M = 117;
R = 85;
S = 69;
Thorn = 85;
V = 126;
W = 163;
X = 140;
Z = 113;
ampersand = 23;
apostrophemod = 27;
asterisk = 157;
backslash = 123;
bar = 78;
braceright = 96;
bracketright = 96;
exclam = 80;
lslash = 10;
parenright = 88;
question = 118;
space = 44;
trademark = 144;
};
f_f = {
lslash = 10;
napostrophe = 191;
};
f_f_i = {
napostrophe = 8;
};
f_f_j = {
b = 15;
napostrophe = 38;
thorn = 16;
};
fi = {
napostrophe = 8;
};
f_j = {
b = 16;
napostrophe = 38;
thorn = 16;
};
five = {
AE = -17;
V = 17;
W = 20;
four = 13;
};
four = {
A = 36;
AE = 25;
U = -13;
four = 21;
fraction = 10;
};
fraction = {
four = -22;
nine = 8;
one = -21;
seven = -25;
six = -13;
two = 6;
};
g = {
AE = 34;
Eth = -8;
J = 7;
S = 21;
V = -77;
W = -79;
comma = 6;
icircumflex = 28;
itilde = 46;
jcircumflex = 21;
lslash = 18;
quotedblbase = 17;
quotesinglbase = 17;
};
g.salt = {
eng = 16;
f = 22;
f_b = 28;
f_f = 35;
f_f_b = 35;
f_f_h = 35;
f_f_i = 35;
f_f_j = 35;
f_f_k = 35;
f_f_l = 35;
f_h = 28;
fi = 28;
f_j = 29;
f_k = 28;
fl = 28;
f_t = 28;
imacron = 7;
lslash = 17;
n = 16;
nacute = 16;
ncaron = 16;
ncommaaccent = 16;
ndotaccent = 16;
ntilde = 16;
p = 16;
quotedblbase = 15;
quotesinglbase = 15;
r = 18;
racute = 18;
rcaron = 18;
rcommaaccent = 18;
t = 27;
t_t = 27;
tbar = 21;
tcaron = 27;
u = 43;
uacute = 43;
ubreve = 43;
ucircumflex = 43;
udieresis = 43;
ugrave = 43;
uhungarumlaut = 43;
umacron = 43;
tcedilla = 27;
tcommaaccent = 27;
uogonek = 43;
uring = 43;
utilde = 43;
v = 38;
w = 41;
wacute = 41;
wcircumflex = 41;
wdieresis = 41;
wgrave = 41;
};
gbreve = {
comma = 6;
quotedblbase = 17;
quotesinglbase = 17;
};
gcircumflex = {
comma = 6;
quotedblbase = 17;
quotesinglbase = 17;
};
gcommaaccent = {
comma = 6;
quotedblbase = 17;
quotesinglbase = 17;
};
gdotaccent = {
comma = 6;
quotedblbase = 17;
quotesinglbase = 17;
};
germandbls = {
M = -10;
U = -48;
V = -87;
W = -88;
Y = -92;
backslash = -30;
braceright = -16;
p = -30;
question = -20;
space = -18;
v = -59;
x = -24;
};
h = {
M = -12;
V = -152;
W = -164;
Z = -7;
apostrophemod = -53;
};
hyphen = {
nine = -12;
one = -12;
seven = -13;
};
i = {
AE = 56;
V = -100;
W = -104;
lslash = 19;
};
idieresis = {
question = 14;
};
imacron = {
question = 16;
};
iogonek = {
j = 111;
};
itilde = {
question = 22;
};
jcircumflex = {
question = 13;
};
k = {
AE = 28;
V = -78;
W = -87;
apostrophemod = -46;
asterisk = -25;
backslash = -31;
c.salt = -21;
q = -20;
schwa = -11;
};
k.salt = {
apostrophemod = -61;
schwa = -18;
};
l = {
AE = 53;
V = -16;
lslash = 16;
periodcentered = -50;
};
lcaron = {
asterisk = 32;
b = 145;
backslash = 49;
braceright = 54;
bracketright = 57;
h = 94;
k = 105;
k.salt = 105;
l = 95;
l_l = 95;
parenright = 20;
quotedbl = 22;
quotedblleft = 25;
quotedblright = 29;
quoteleft = 25;
quoteright = 29;
quotesingle = 22;
thorn = 146;
trademark = 46;
};
lslash = {
f = 23;
f_b = 20;
f_f = 15;
f_f_b = 15;
f_f_h = 15;
f_f_i = 15;
f_f_j = 15;
f_f_k = 15;
f_f_l = 15;
f_h = 20;
fi = 20;
f_j = 21;
f_k = 20;
fl = 20;
f_t = 20;
germandbls = 40;
guillemetright = 13;
guilsinglright = 13;
h = 40;
i = 8;
ij = 8;
j = 6;
k = 40;
k.salt = 40;
l = 38;
l_l = 38;
lslash = 17;
n = 14;
p = 11;
question = 22;
r = 14;
t = 16;
t_t = 16;
t_z = 7;
u = 26;
v = 15;
w = 24;
x = 13;
};
m = {
AE = 30;
V = -143;
W = -154;
backslash = -60;
braceright = 10;
bracketright = 11;
lslash = 20;
parenright = 16;
question = -15;
slash = 20;
v = -32;
};
minus = {
seven = -17;
};
n = {
V = -145;
W = -157;
apostrophemod = -11;
};
nine = {
A = -33;
AE = -56;
J = -24;
U = -13;
braceright = -16;
bracketright = -17;
fraction = -30;
one = -12;
seven = -15;
slash = -36;
};
numbersign = {
one = -20;
seven = -26;
};
o = {
f_f_h = -6;
};
oacute = {
f_f_h = -6;
};
obreve = {
f_f_h = -6;
};
ocircumflex = {
f_f_h = -6;
};
odieresis = {
f_f_h = -6;
};
ograve = {
f_f_h = -6;
};
ohungarumlaut = {
f_f_h = -6;
};
omacron = {
f_f_h = -6;
};
one = {
A = 55;
AE = 45;
U = -15;
X = 17;
cent = -15;
fraction = 18;
};
oslash = {
f_f_h = -6;
};
otilde = {
f_f_h = -6;
};
p = {
f_f = -6;
f_f_b = -6;
f_f_h = -6;
f_f_i = -6;
f_f_j = -6;
f_f_k = -6;
f_f_l = -6;
};
parenleft = {
V = 42;
X = 7;
c.salt = -16;
four = -15;
germandbls = 1;
k = 37;
k.salt = 38;
kcommaaccent = 38;
lslash = 13;
q = -15;
six = -12;
v = -15;
};
parenright = {
braceright = -16;
bracketright = -17;
};
periodcentered = {
L = -11;
l = -50;
one = -12;
seven = -17;
};
plus = {
seven = -18;
};
q = {
M = -12;
V = -76;
W = -84;
Z = -12;
backslash = -32;
j = 105;
jcircumflex = 99;
};
questiondown = {
V = -49;
X = 13;
v = -14;
};
quotedbl = {
germandbls = 1;
hcircumflex = 29;
k = 23;
k.salt = 23;
kcommaaccent = 23;
lslash = 1;
};
quotedblleft = {
hcircumflex = 35;
k = 20;
k.salt = 22;
kcommaaccent = 22;
};
quotedblright = {
germandbls = 1;
hcircumflex = 32;
k = 33;
k.salt = 33;
kcommaaccent = 33;
lslash = 1;
};
quoteleft = {
hcircumflex = 35;
k = 20;
k.salt = 22;
kcommaaccent = 22;
};
quoteright = {
at = -16;
germandbls = 1;
hcircumflex = 32;
k = 33;
k.salt = 33;
kcommaaccent = 33;
lslash = 1;
registered = -15;
slash = -58;
space = -30;
};
quotesingle = {
germandbls = 1;
hcircumflex = 30;
k = 23;
k.salt = 23;
kcommaaccent = 23;
lslash = 1;
};
r = {
J = -6;
M = -24;
S = -9;
V = -94;
W = -101;
X = -15;
Z = -23;
};
registered = {
M = -17;
V = -51;
};
s = {
M = -16;
V = -95;
W = -101;
};
s.salt = {
backslash = -43;
braceright = -22;
bracketright = -17;
};
semicolon = {
j = 26;
jcircumflex = 26;
};
seven = {
A = -57;
AE = -84;
J = -48;
M = 32;
N = 33;
T = 34;
U = 35;
V = 82;
W = 87;
X = 44;
Y = 80;
backslash = 27;
braceright = 26;
bracketright = 27;
cent = -26;
degree = 5;
four = -45;
fraction = -70;
hyphen = -39;
minus = -15;
numbersign = -41;
one = 29;
periodcentered = -21;
plus = -12;
seven = 22;
six = -31;
slash = -72;
};
six = {
A = 6;
J = 14;
T = -28;
U = -14;
backslash = -21;
bracketright = -13;
four = 23;
nine = -19;
};
slash = {
V = 48;
X = 11;
a.salt = -48;
c.salt = -60;
f = -14;
four = -46;
germandbls = 1;
hcircumflex = 29;
k = 46;
k.salt = 46;
kcommaaccent = 46;
lslash = 15;
m = -33;
p = -24;
q = -61;
s.salt = -56;
six = -33;
slash = -200;
v = -24;
x = -27;
};
space = {
Aringacute = -42;
V = -32;
lslash = -22;
quoteright = -30;
v = -22;
};
t = {
M = -8;
V = -89;
W = -91;
apostrophemod = -35;
};
t_t = {
c.salt = -7;
q = -5;
};
tcaron = {
j = 6;
n = 9;
ncaron = 9;
p = 15;
r = 14;
t = 13;
t_t = 13;
tcaron = 13;
u = 13;
uacute = 13;
uring = 13;
v = 13;
w = 9;
};
three = {
AE = -26;
};
trademark = {
Eng = 17;
Lcaron = 26;
M = 33;
N = 18;
Nacute = 18;
Ncaron = 18;
Ncommaaccent = 18;
Ndotaccent = 18;
Ntilde = 18;
V = 68;
X = 40;
c.salt = -12;
germandbls = 1;
hcircumflex = 47;
icircumflex = 13;
itilde = 28;
jcircumflex = 7;
k.salt = 62;
kcommaaccent = 62;
lslash = 37;
p = 9;
v = 16;
};
two = {
A = 14;
AE = 7;
J = 11;
U = -13;
};
u = {
AE = 41;
V = -142;
W = -152;
lslash = 22;
};
Scedilla = {
germandbls = 1;
k = 27;
k.salt = 27;
};
Tcedilla = {
abreve = -101;
acircumflex = -86;
germandbls = -27;
icircumflex = -9;
k = 49;
k.salt = 49;
};
Scommaaccent = {
germandbls = 1;
k = 27;
k.salt = 27;
};
Tcommaaccent = {
abreve = -101;
acircumflex = -86;
germandbls = -27;
icircumflex = -9;
k = 49;
k.salt = 49;
};
uogonek = {
j = 129;
};
v = {
AE = -74;
J = -43;
M = -25;
S = -9;
V = -82;
W = -84;
X = -82;
Z = -36;
backslash = -33;
braceright = -32;
bracketright = -25;
parenright = -17;
q = -9;
slash = -24;
space = -20;
};
w = {
AE = -69;
J = -33;
M = -26;
S = -10;
V = -86;
W = -88;
X = -85;
Z = -36;
};
x = {
V = -91;
W = -100;
backslash = -42;
braceright = 7;
bracketright = 5;
c.salt = -42;
parenright = 5;
q = -41;
schwa = -9;
slash = 5;
v = -15;
};
y = {
AE = -67;
J = -49;
M = -28;
S = -15;
V = -86;
W = -94;
X = -75;
Z = -44;
};
z = {
M = -11;
V = -105;
W = -113;
};
zero = {
AE = -22;
M = -12;
U = -14;
braceright = -17;
bracketright = -18;
slash = -12;
};
};
"62092E79-60F6-4D0B-8A38-B9DDC6B60A9E" = {
"@MMK_L_AE" = {
"@MMK_R_b" = 11;
"@MMK_R_dotlessj" = -5;
"@MMK_R_four" = 11;
"@MMK_R_u" = -6;
"@MMK_R_v" = -22;
"@MMK_R_w" = -26;
"@MMK_R_y" = -12;
};
"@MMK_L_Aacute" = {
"@MMK_R_AE" = 11;
"@MMK_R_C" = -19;
"@MMK_R_S" = 10;
"@MMK_R_T" = -41;
"@MMK_R_U" = -34;
"@MMK_R_V" = -75;
"@MMK_R_W" = -89;
"@MMK_R_Y" = -53;
"@MMK_R_asterisk" = -19;
"@MMK_R_backslash" = -52;
"@MMK_R_braceright" = 79;
"@MMK_R_bracketright" = 77;
"@MMK_R_c" = -5;
"@MMK_R_c.salt" = -5;
"@MMK_R_colon" = 13;
"@MMK_R_comma" = 23;
"@MMK_R_d" = -5;
"@MMK_R_dotlessj" = 114;
"@MMK_R_exclam" = 19;
"@MMK_R_g" = 34;
"@MMK_R_parenright" = 52;
"@MMK_R_quotedbl" = -23;
"@MMK_R_quotedblleft" = -25;
"@MMK_R_quotedblright" = -23;
"@MMK_R_s" = 7;
"@MMK_R_slash" = 46;
"@MMK_R_space" = -29;
"@MMK_R_t" = -17;
"@MMK_R_trademark" = -20;
"@MMK_R_u" = -32;
"@MMK_R_v" = -51;
"@MMK_R_w" = -60;
};
"@MMK_L_B" = {
"@MMK_R_AE" = -19;
"@MMK_R_Aacute" = -8;
"@MMK_R_B" = -13;
"@MMK_R_U" = -12;
"@MMK_R_W" = -19;
"@MMK_R_Y" = -19;
"@MMK_R_dotlessj" = -10;
"@MMK_R_g" = -7;
"@MMK_R_u" = -8;
"@MMK_R_w" = -28;
"@MMK_R_y" = -16;
};
"@MMK_L_C" = {
"@MMK_R_AE" = -16;
"@MMK_R_Aacute" = -6;
"@MMK_R_b" = 41;
"@MMK_R_g" = -14;
"@MMK_R_h" = 25;
"@MMK_R_l" = 7;
"@MMK_R_v" = -9;
"@MMK_R_w" = -9;
"@MMK_R_y" = -21;
"@MMK_R_z" = -7;
};
"@MMK_L_D" = {
"@MMK_R_AE" = -54;
"@MMK_R_Aacute" = -24;
"@MMK_R_B" = -15;
"@MMK_R_M" = -11;
"@MMK_R_U" = -14;
"@MMK_R_V" = -23;
"@MMK_R_W" = -18;
"@MMK_R_X" = -23;
"@MMK_R_Y" = -26;
"@MMK_R_Z" = -6;
"@MMK_R_a" = -10;
"@MMK_R_a.salt" = -5;
"@MMK_R_backslash" = -14;
"@MMK_R_braceright" = -21;
"@MMK_R_bracketright" = -22;
"@MMK_R_c" = -6;
"@MMK_R_c.salt" = -6;
"@MMK_R_comma" = -21;
"@MMK_R_d" = -6;
"@MMK_R_g" = -16;
"@MMK_R_germandbls" = -6;
"@MMK_R_l" = -11;
"@MMK_R_one" = -18;
"@MMK_R_parenright" = -17;
"@MMK_R_q" = -7;
"@MMK_R_s" = -8;
"@MMK_R_s.salt" = -5;
"@MMK_R_seven" = -19;
"@MMK_R_slash" = -20;
"@MMK_R_z" = -5;
};
"@MMK_L_Eng" = {
"@MMK_R_AE" = -23;
"@MMK_R_Aacute" = -14;
"@MMK_R_C" = -13;
"@MMK_R_J" = -23;
"@MMK_R_S" = -14;
"@MMK_R_a" = -34;
"@MMK_R_a.salt" = -33;
"@MMK_R_ampersand" = -19;
"@MMK_R_b" = 78;
"@MMK_R_braceright" = 14;
"@MMK_R_bracketright" = 16;
"@MMK_R_c" = -31;
"@MMK_R_c.salt" = -30;
"@MMK_R_colon" = -10;
"@MMK_R_comma" = -14;
"@MMK_R_d" = -27;
"@MMK_R_dotlessi" = -29;
"@MMK_R_dotlessj" = -28;
"@MMK_R_emdash" = -13;
"@MMK_R_eng" = -25;
"@MMK_R_f" = -26;
"@MMK_R_f_f" = -21;
"@MMK_R_g" = -43;
"@MMK_R_germandbls" = -22;
"@MMK_R_h" = 62;
"@MMK_R_l" = 44;
"@MMK_R_m" = -29;
"@MMK_R_p" = -24;
"@MMK_R_q" = -28;
"@MMK_R_r" = -26;
"@MMK_R_registered" = -27;
"@MMK_R_s" = -24;
"@MMK_R_s.salt" = -23;
"@MMK_R_slash" = -21;
"@MMK_R_t" = -25;
"@MMK_R_u" = -26;
"@MMK_R_v" = -44;
"@MMK_R_w" = -49;
"@MMK_R_x" = -17;
"@MMK_R_y" = -29;
"@MMK_R_z" = -34;
};
"@MMK_L_F" = {
"@MMK_R_AE" = -67;
"@MMK_R_Aacute" = -59;
"@MMK_R_J" = -24;
"@MMK_R_W" = 30;
"@MMK_R_Y" = 30;
"@MMK_R_a" = -54;
"@MMK_R_b" = 81;
"@MMK_R_c" = -46;
"@MMK_R_comma" = -32;
"@MMK_R_d" = -45;
"@MMK_R_dotlessi" = -16;
"@MMK_R_dotlessj" = -8;
"@MMK_R_eng" = -22;
"@MMK_R_f" = -13;
"@MMK_R_g" = -66;
"@MMK_R_h" = 66;
"@MMK_R_l" = 48;
"@MMK_R_r" = -20;
"@MMK_R_s" = -50;
"@MMK_R_t" = -5;
"@MMK_R_u" = -8;
"@MMK_R_w" = -26;
"@MMK_R_y" = -24;
"@MMK_R_z" = -39;
};
"@MMK_L_G" = {
"@MMK_R_b" = 30;
"@MMK_R_g" = -7;
"@MMK_R_h" = 14;
"@MMK_R_v" = -12;
"@MMK_R_w" = -11;
"@MMK_R_y" = -16;
};
"@MMK_L_H" = {
"@MMK_R_C" = -16;
"@MMK_R_J" = -5;
"@MMK_R_a" = -13;
"@MMK_R_a.salt" = -14;
"@MMK_R_ampersand" = -14;
"@MMK_R_b" = 62;
"@MMK_R_braceright" = 12;
"@MMK_R_bracketright" = 10;
"@MMK_R_c" = -29;
"@MMK_R_c.salt" = -29;
"@MMK_R_d" = -24;
"@MMK_R_dotlessj" = 77;
"@MMK_R_emdash" = -14;
"@MMK_R_eng" = -11;
"@MMK_R_f_f" = 24;
"@MMK_R_guillemotleft" = -10;
"@MMK_R_guillemotright" = -10;
"@MMK_R_h" = 46;
"@MMK_R_l" = 29;
"@MMK_R_p" = -12;
"@MMK_R_q" = -24;
"@MMK_R_registered" = -20;
"@MMK_R_s.salt" = -9;
"@MMK_R_t" = -22;
"@MMK_R_u" = -26;
"@MMK_R_v" = -49;
"@MMK_R_w" = -55;
"@MMK_R_y" = -29;
};
"@MMK_L_I" = {
"@MMK_R_AE" = 31;
"@MMK_R_C" = -12;
"@MMK_R_b" = 53;
"@MMK_R_c" = -22;
"@MMK_R_c.salt" = -23;
"@MMK_R_d" = -20;
"@MMK_R_dotlessj" = -15;
"@MMK_R_emdash" = -12;
"@MMK_R_g" = -15;
"@MMK_R_h" = 36;
"@MMK_R_l" = 19;
"@MMK_R_p" = -12;
"@MMK_R_q" = -20;
"@MMK_R_registered" = -12;
"@MMK_R_t" = -12;
"@MMK_R_u" = -13;
"@MMK_R_v" = -33;
"@MMK_R_w" = -39;
"@MMK_R_y" = -28;
};
"@MMK_L_IJ" = {
"@MMK_R_AE" = -29;
"@MMK_R_Aacute" = -19;
"@MMK_R_C" = -8;
"@MMK_R_J" = -14;
"@MMK_R_S" = -10;
"@MMK_R_a" = -26;
"@MMK_R_a.salt" = -24;
"@MMK_R_ampersand" = -13;
"@MMK_R_at" = -16;
"@MMK_R_b" = 64;
"@MMK_R_braceright" = 5;
"@MMK_R_c" = -24;
"@MMK_R_c.salt" = -22;
"@MMK_R_comma" = -17;
"@MMK_R_d" = -21;
"@MMK_R_dotlessi" = -8;
"@MMK_R_dotlessj" = -8;
"@MMK_R_eng" = -6;
"@MMK_R_f" = -12;
"@MMK_R_g" = -26;
"@MMK_R_germandbls" = -11;
"@MMK_R_h" = 47;
"@MMK_R_l" = 30;
"@MMK_R_m" = -8;
"@MMK_R_p" = -6;
"@MMK_R_q" = -22;
"@MMK_R_r" = -6;
"@MMK_R_registered" = -16;
"@MMK_R_s" = -17;
"@MMK_R_s.salt" = -16;
"@MMK_R_six" = -13;
"@MMK_R_slash" = -23;
"@MMK_R_t" = -6;
"@MMK_R_u" = -6;
"@MMK_R_v" = -20;
"@MMK_R_w" = -23;
"@MMK_R_y" = -20;
"@MMK_R_z" = -25;
};
"@MMK_L_K" = {
"@MMK_R_AE" = 35;
"@MMK_R_C" = -54;
"@MMK_R_T" = 6;
"@MMK_R_a" = -5;
"@MMK_R_a.salt" = -6;
"@MMK_R_asterisk" = 36;
"@MMK_R_b" = 97;
"@MMK_R_backslash" = 22;
"@MMK_R_braceright" = 24;
"@MMK_R_bracketright" = 28;
"@MMK_R_c" = -41;
"@MMK_R_c.salt" = -43;
"@MMK_R_d" = -37;
"@MMK_R_dotlessj" = -40;
"@MMK_R_emdash" = -43;
"@MMK_R_g" = -12;
"@MMK_R_guillemotleft" = -51;
"@MMK_R_guillemotright" = -38;
"@MMK_R_h" = 73;
"@MMK_R_l" = 58;
"@MMK_R_p" = -26;
"@MMK_R_parenright" = 10;
"@MMK_R_q" = -36;
"@MMK_R_quotedblleft" = 10;
"@MMK_R_slash" = 12;
"@MMK_R_t" = -52;
"@MMK_R_trademark" = 27;
"@MMK_R_u" = -80;
"@MMK_R_v" = -145;
"@MMK_R_w" = -158;
"@MMK_R_y" = -82;
};
"@MMK_L_K.salt" = {
"@MMK_R_AE" = 13;
"@MMK_R_C" = -23;
"@MMK_R_a" = -5;
"@MMK_R_c" = -24;
"@MMK_R_d" = -23;
"@MMK_R_dotlessj" = 26;
"@MMK_R_emdash" = -25;
"@MMK_R_g" = -19;
"@MMK_R_guillemotleft" = -25;
"@MMK_R_guillemotright" = -22;
"@MMK_R_h" = 68;
"@MMK_R_l" = 46;
"@MMK_R_s" = -6;
"@MMK_R_t" = -38;
"@MMK_R_u" = -54;
"@MMK_R_w" = -81;
"@MMK_R_y" = -56;
};
"@MMK_L_L" = {
"@MMK_R_AE" = 10;
"@MMK_R_Aacute" = 7;
"@MMK_R_T" = -57;
"@MMK_R_U" = -19;
"@MMK_R_V" = -47;
"@MMK_R_W" = -49;
"@MMK_R_Y" = -55;
"@MMK_R_asterisk" = -41;
"@MMK_R_backslash" = -52;
"@MMK_R_dotlessj" = -21;
"@MMK_R_p" = -12;
"@MMK_R_question" = -25;
"@MMK_R_quotedbl" = -34;
"@MMK_R_quotedblleft" = -32;
"@MMK_R_quotedblright" = -34;
"@MMK_R_space" = -22;
"@MMK_R_t" = -11;
"@MMK_R_trademark" = -33;
"@MMK_R_u" = -12;
"@MMK_R_v" = -33;
"@MMK_R_w" = -35;
"@MMK_R_y" = -31;
};
"@MMK_L_M" = {
"@MMK_R_AE" = 9;
"@MMK_R_C" = -21;
"@MMK_R_J" = -9;
"@MMK_R_a" = -23;
"@MMK_R_b" = 78;
"@MMK_R_c" = -46;
"@MMK_R_d" = -43;
"@MMK_R_dotlessi" = -6;
"@MMK_R_dotlessj" = 39;
"@MMK_R_emdash" = -21;
"@MMK_R_eng" = -12;
"@MMK_R_f_f" = 11;
"@MMK_R_g" = -28;
"@MMK_R_guillemotleft" = -15;
"@MMK_R_guillemotright" = -15;
"@MMK_R_h" = 45;
"@MMK_R_l" = 39;
"@MMK_R_r" = -11;
"@MMK_R_s" = -11;
"@MMK_R_t" = -44;
"@MMK_R_u" = -50;
"@MMK_R_w" = -76;
"@MMK_R_y" = -43;
"@MMK_R_z" = -8;
};
"@MMK_L_O" = {
"@MMK_R_AE" = -24;
"@MMK_R_Aacute" = -14;
"@MMK_R_B" = -9;
"@MMK_R_M" = -6;
"@MMK_R_U" = -10;
"@MMK_R_V" = -23;
"@MMK_R_W" = -19;
"@MMK_R_X" = -16;
"@MMK_R_Y" = -18;
"@MMK_R_a" = -7;
"@MMK_R_apostrophe" = -16;
"@MMK_R_braceright" = -18;
"@MMK_R_bracketright" = -19;
"@MMK_R_comma" = -15;
"@MMK_R_g" = -11;
"@MMK_R_one" = -13;
"@MMK_R_parenright" = -13;
"@MMK_R_q" = -5;
"@MMK_R_s" = -6;
"@MMK_R_seven" = -13;
"@MMK_R_slash" = -14;
};
"@MMK_L_P" = {
"@MMK_R_AE" = -74;
"@MMK_R_Aacute" = -69;
"@MMK_R_B" = -5;
"@MMK_R_J" = -70;
"@MMK_R_a" = -45;
"@MMK_R_b" = 20;
"@MMK_R_c" = -54;
"@MMK_R_comma" = -46;
"@MMK_R_d" = -51;
"@MMK_R_emdash" = -29;
"@MMK_R_g" = -68;
"@MMK_R_h" = 14;
"@MMK_R_l" = 8;
"@MMK_R_s" = -47;
"@MMK_R_y" = -20;
"@MMK_R_z" = -40;
};
"@MMK_L_R" = {
"@MMK_R_AE" = 32;
"@MMK_R_C" = -10;
"@MMK_R_U" = -17;
"@MMK_R_V" = -30;
"@MMK_R_W" = -32;
"@MMK_R_Y" = -33;
"@MMK_R_Z" = 5;
"@MMK_R_backslash" = -12;
"@MMK_R_braceright" = 41;
"@MMK_R_bracketright" = 40;
"@MMK_R_c" = -22;
"@MMK_R_c.salt" = -22;
"@MMK_R_comma" = 5;
"@MMK_R_d" = -20;
"@MMK_R_dotlessj" = 60;
"@MMK_R_emdash" = -46;
"@MMK_R_f_f" = 22;
"@MMK_R_g" = 13;
"@MMK_R_parenright" = 28;
"@MMK_R_q" = -21;
"@MMK_R_slash" = 30;
"@MMK_R_space" = -27;
"@MMK_R_t" = -15;
"@MMK_R_u" = -18;
"@MMK_R_v" = -42;
"@MMK_R_w" = -48;
"@MMK_R_y" = -37;
};
"@MMK_L_R.salt" = {
"@MMK_R_AE" = 35;
"@MMK_R_C" = -16;
"@MMK_R_T" = -5;
"@MMK_R_U" = -23;
"@MMK_R_W" = -20;
"@MMK_R_Y" = -18;
"@MMK_R_c" = -24;
"@MMK_R_d" = -23;
"@MMK_R_dotlessj" = 89;
"@MMK_R_emdash" = -20;
"@MMK_R_f_f" = 21;
"@MMK_R_guillemotleft" = -11;
"@MMK_R_t" = -13;
"@MMK_R_u" = -18;
"@MMK_R_w" = -48;
"@MMK_R_y" = -33;
};
"@MMK_L_S" = {
"@MMK_R_AE" = -8;
"@MMK_R_a" = -5;
"@MMK_R_b" = 55;
"@MMK_R_c" = -10;
"@MMK_R_c.salt" = -10;
"@MMK_R_d" = -9;
"@MMK_R_dotlessj" = -7;
"@MMK_R_g" = -27;
"@MMK_R_h" = 38;
"@MMK_R_l" = 22;
"@MMK_R_m" = -7;
"@MMK_R_p" = -6;
"@MMK_R_q" = -9;
"@MMK_R_s" = -9;
"@MMK_R_s.salt" = -9;
"@MMK_R_v" = -18;
"@MMK_R_w" = -19;
"@MMK_R_y" = -29;
"@MMK_R_z" = -15;
};
"@MMK_L_T" = {
"@MMK_R_AE" = -74;
"@MMK_R_Aacute" = -47;
"@MMK_R_J" = -50;
"@MMK_R_V" = 16;
"@MMK_R_W" = 24;
"@MMK_R_Y" = 22;
"@MMK_R_a" = -104;
"@MMK_R_a.salt" = -79;
"@MMK_R_ampersand" = -21;
"@MMK_R_asterisk" = 21;
"@MMK_R_b" = 75;
"@MMK_R_c" = -124;
"@MMK_R_c.salt" = -123;
"@MMK_R_colon" = -23;
"@MMK_R_comma" = -21;
"@MMK_R_d" = -95;
"@MMK_R_dotlessi" = -31;
"@MMK_R_dotlessj" = -37;
"@MMK_R_emdash" = -50;
"@MMK_R_eng" = -77;
"@MMK_R_f" = -26;
"@MMK_R_f_f" = -21;
"@MMK_R_g" = -122;
"@MMK_R_germandbls" = -16;
"@MMK_R_guillemotleft" = -14;
"@MMK_R_h" = 59;
"@MMK_R_l" = 41;
"@MMK_R_m" = -82;
"@MMK_R_p" = -75;
"@MMK_R_q" = -120;
"@MMK_R_r" = -72;
"@MMK_R_registered" = -45;
"@MMK_R_s" = -98;
"@MMK_R_s.salt" = -101;
"@MMK_R_slash" = -31;
"@MMK_R_space" = -27;
"@MMK_R_t" = -28;
"@MMK_R_u" = -76;
"@MMK_R_v" = -93;
"@MMK_R_w" = -94;
"@MMK_R_x" = -74;
"@MMK_R_y" = -85;
"@MMK_R_z" = -94;
};
"@MMK_L_Thorn" = {
"@MMK_R_AE" = -78;
"@MMK_R_Aacute" = -38;
"@MMK_R_B" = -22;
"@MMK_R_J" = -14;
"@MMK_R_U" = -13;
"@MMK_R_W" = -30;
"@MMK_R_Y" = -56;
"@MMK_R_Z" = -10;
"@MMK_R_a" = -6;
"@MMK_R_c" = -5;
"@MMK_R_comma" = -31;
"@MMK_R_g" = -10;
"@MMK_R_l" = -6;
"@MMK_R_quotedbl" = -14;
"@MMK_R_quotedblleft" = -30;
"@MMK_R_quotedblright" = -14;
"@MMK_R_t" = 6;
};
"@MMK_L_U" = {
"@MMK_R_AE" = -49;
"@MMK_R_Aacute" = -33;
"@MMK_R_C" = -10;
"@MMK_R_J" = -23;
"@MMK_R_S" = -7;
"@MMK_R_a" = -38;
"@MMK_R_a.salt" = -36;
"@MMK_R_ampersand" = -15;
"@MMK_R_asterisk" = 39;
"@MMK_R_b" = 5;
"@MMK_R_c" = -35;
"@MMK_R_c.salt" = -34;
"@MMK_R_comma" = -23;
"@MMK_R_d" = -32;
"@MMK_R_dotlessi" = -22;
"@MMK_R_dotlessj" = -15;
"@MMK_R_emdash" = -10;
"@MMK_R_eng" = -15;
"@MMK_R_f" = -20;
"@MMK_R_g" = -39;
"@MMK_R_germandbls" = -25;
"@MMK_R_h" = -12;
"@MMK_R_l" = -13;
"@MMK_R_m" = -22;
"@MMK_R_p" = -12;
"@MMK_R_q" = -34;
"@MMK_R_r" = -17;
"@MMK_R_registered" = -23;
"@MMK_R_s" = -29;
"@MMK_R_s.salt" = -27;
"@MMK_R_slash" = -31;
"@MMK_R_t" = -12;
"@MMK_R_trademark" = 9;
"@MMK_R_u" = -13;
"@MMK_R_v" = -27;
"@MMK_R_w" = -30;
"@MMK_R_x" = -10;
"@MMK_R_y" = -29;
"@MMK_R_z" = -37;
};
"@MMK_L_V" = {
"@MMK_R_AE" = -95;
"@MMK_R_Aacute" = -49;
"@MMK_R_J" = -56;
"@MMK_R_T" = 51;
"@MMK_R_Z" = 13;
"@MMK_R_a" = -109;
"@MMK_R_c" = -108;
"@MMK_R_colon" = -19;
"@MMK_R_comma" = -43;
"@MMK_R_d" = -63;
"@MMK_R_dotlessi" = -58;
"@MMK_R_dotlessj" = -66;
"@MMK_R_emdash" = -24;
"@MMK_R_eng" = -57;
"@MMK_R_f" = -18;
"@MMK_R_f_f" = -17;
"@MMK_R_g" = -128;
"@MMK_R_quotedbl" = 48;
"@MMK_R_quotedblleft" = 53;
"@MMK_R_quotedblright" = 48;
"@MMK_R_r" = -54;
"@MMK_R_s" = -109;
"@MMK_R_t" = -55;
"@MMK_R_u" = -60;
"@MMK_R_w" = -76;
"@MMK_R_y" = -68;
"@MMK_R_z" = -97;
};
"@MMK_L_W" = {
"@MMK_R_AE" = -94;
"@MMK_R_Aacute" = -53;
"@MMK_R_J" = -59;
"@MMK_R_T" = 41;
"@MMK_R_a" = -112;
"@MMK_R_a.salt" = -95;
"@MMK_R_asterisk" = 75;
"@MMK_R_b" = 9;
"@MMK_R_backslash" = 36;
"@MMK_R_braceright" = 22;
"@MMK_R_bracketright" = 26;
"@MMK_R_c" = -112;
"@MMK_R_c.salt" = -111;
"@MMK_R_colon" = -21;
"@MMK_R_comma" = -43;
"@MMK_R_d" = -83;
"@MMK_R_dotlessi" = -62;
"@MMK_R_dotlessj" = -69;
"@MMK_R_emdash" = -25;
"@MMK_R_eng" = -61;
"@MMK_R_f" = -20;
"@MMK_R_f_f" = -18;
"@MMK_R_g" = -131;
"@MMK_R_germandbls" = -10;
"@MMK_R_m" = -70;
"@MMK_R_p" = -61;
"@MMK_R_parenright" = 5;
"@MMK_R_q" = -115;
"@MMK_R_question" = 26;
"@MMK_R_quotedbl" = 38;
"@MMK_R_quotedblleft" = 43;
"@MMK_R_quotedblright" = 38;
"@MMK_R_r" = -59;
"@MMK_R_registered" = -48;
"@MMK_R_s" = -111;
"@MMK_R_s.salt" = -106;
"@MMK_R_slash" = -52;
"@MMK_R_space" = -27;
"@MMK_R_t" = -58;
"@MMK_R_trademark" = 64;
"@MMK_R_u" = -63;
"@MMK_R_v" = -77;
"@MMK_R_w" = -79;
"@MMK_R_x" = -59;
"@MMK_R_y" = -68;
"@MMK_R_z" = -100;
};
"@MMK_L_X" = {
"@MMK_R_AE" = 43;
"@MMK_R_C" = -32;
"@MMK_R_Z" = 10;
"@MMK_R_b" = 80;
"@MMK_R_c" = -16;
"@MMK_R_comma" = 11;
"@MMK_R_d" = -12;
"@MMK_R_dotlessj" = -9;
"@MMK_R_emdash" = -25;
"@MMK_R_f_f" = 24;
"@MMK_R_g" = 15;
"@MMK_R_guillemotleft" = -26;
"@MMK_R_guillemotright" = -18;
"@MMK_R_h" = 63;
"@MMK_R_l" = 47;
"@MMK_R_t" = -29;
"@MMK_R_u" = -56;
"@MMK_R_w" = -115;
"@MMK_R_y" = -37;
"@MMK_R_z" = 8;
};
"@MMK_L_Y" = {
"@MMK_R_AE" = -81;
"@MMK_R_Aacute" = -55;
"@MMK_R_C" = -7;
"@MMK_R_J" = -52;
"@MMK_R_T" = 42;
"@MMK_R_a" = -127;
"@MMK_R_a.salt" = -110;
"@MMK_R_asterisk" = 64;
"@MMK_R_b" = 113;
"@MMK_R_backslash" = 42;
"@MMK_R_braceright" = 33;
"@MMK_R_bracketright" = 35;
"@MMK_R_c" = -147;
"@MMK_R_c.salt" = -148;
"@MMK_R_colon" = -16;
"@MMK_R_comma" = -14;
"@MMK_R_d" = -72;
"@MMK_R_dotlessi" = -83;
"@MMK_R_dotlessj" = -88;
"@MMK_R_emdash" = -43;
"@MMK_R_eng" = -92;
"@MMK_R_f" = -32;
"@MMK_R_g" = -137;
"@MMK_R_germandbls" = -17;
"@MMK_R_guillemotleft" = -23;
"@MMK_R_guillemotright" = -18;
"@MMK_R_h" = 89;
"@MMK_R_l" = 51;
"@MMK_R_m" = -100;
"@MMK_R_p" = -98;
"@MMK_R_parenright" = 21;
"@MMK_R_q" = -143;
"@MMK_R_question" = 15;
"@MMK_R_quotedbl" = 38;
"@MMK_R_quotedblleft" = 44;
"@MMK_R_quotedblright" = 38;
"@MMK_R_r" = -91;
"@MMK_R_registered" = -55;
"@MMK_R_s" = -117;
"@MMK_R_s.salt" = -123;
"@MMK_R_slash" = -27;
"@MMK_R_space" = -27;
"@MMK_R_t" = -89;
"@MMK_R_trademark" = 62;
"@MMK_R_u" = -94;
"@MMK_R_v" = -114;
"@MMK_R_w" = -116;
"@MMK_R_x" = -78;
"@MMK_R_y" = -90;
"@MMK_R_z" = -110;
};
"@MMK_L_Z" = {
"@MMK_R_b" = 38;
"@MMK_R_dotlessj" = -8;
"@MMK_R_h" = 25;
"@MMK_R_l" = 14;
"@MMK_R_u" = -10;
"@MMK_R_v" = -25;
"@MMK_R_w" = -28;
"@MMK_R_y" = -15;
};
"@MMK_L_a" = {
"@MMK_R_Aacute" = 7;
"@MMK_R_T" = -74;
"@MMK_R_Y" = -100;
"@MMK_R_ampersand" = 9;
"@MMK_R_backslash" = -42;
"@MMK_R_braceright" = 7;
"@MMK_R_bracketright" = 5;
"@MMK_R_parenright" = 19;
"@MMK_R_slash" = 21;
"@MMK_R_v" = -11;
"@MMK_R_w" = -19;
};
"@MMK_L_a.salt" = {
"@MMK_R_w" = -40;
"@MMK_R_y" = -8;
};
"@MMK_L_ae" = {
"@MMK_R_B" = -19;
"@MMK_R_M" = -18;
"@MMK_R_T" = -116;
"@MMK_R_U" = -25;
"@MMK_R_V" = -108;
"@MMK_R_W" = -120;
"@MMK_R_Y" = -139;
"@MMK_R_Z" = -8;
"@MMK_R_asterisk" = -10;
"@MMK_R_backslash" = -58;
"@MMK_R_question" = -19;
"@MMK_R_trademark" = -19;
"@MMK_R_v" = -8;
"@MMK_R_w" = -13;
"@MMK_R_y" = -5;
};
"@MMK_L_ampersand" = {
"@MMK_R_AE" = 97;
"@MMK_R_Aacute" = 93;
"@MMK_R_B" = 14;
"@MMK_R_C" = -21;
"@MMK_R_J" = 20;
"@MMK_R_S" = 14;
"@MMK_R_T" = -37;
"@MMK_R_U" = -31;
"@MMK_R_W" = -59;
"@MMK_R_Y" = -37;
"@MMK_R_Z" = 38;
"@MMK_R_a" = 12;
"@MMK_R_dotlessi" = 29;
"@MMK_R_eng" = 20;
"@MMK_R_h" = 55;
"@MMK_R_l" = 54;
"@MMK_R_quotedbl" = -44;
"@MMK_R_r" = 24;
"@MMK_R_s" = 14;
"@MMK_R_w" = -30;
"@MMK_R_y" = -13;
"@MMK_R_z" = 29;
};
"@MMK_L_apostrophe" = {
"@MMK_R_c" = -23;
"@MMK_R_g" = -49;
};
"@MMK_L_asterisk" = {
"@MMK_R_AE" = -69;
"@MMK_R_Aacute" = -25;
"@MMK_R_J" = -30;
"@MMK_R_T" = 21;
"@MMK_R_W" = 7;
"@MMK_R_b" = 28;
"@MMK_R_c" = -13;
"@MMK_R_d" = -22;
"@MMK_R_g" = -33;
"@MMK_R_h" = 11;
};
"@MMK_L_at" = {
"@MMK_R_B" = -17;
"@MMK_R_quotedbl" = -16;
};
"@MMK_L_b" = {
"@MMK_R_B" = -19;
"@MMK_R_M" = -16;
"@MMK_R_T" = -128;
"@MMK_R_U" = -25;
"@MMK_R_V" = -113;
"@MMK_R_W" = -126;
"@MMK_R_X" = -9;
"@MMK_R_Y" = -149;
"@MMK_R_Z" = -15;
"@MMK_R_asterisk" = -43;
"@MMK_R_backslash" = -61;
"@MMK_R_braceright" = -14;
"@MMK_R_bracketright" = -15;
"@MMK_R_parenright" = -13;
"@MMK_R_question" = -24;
"@MMK_R_quotedbl" = -48;
"@MMK_R_quotedblleft" = -48;
"@MMK_R_quotedblright" = -48;
"@MMK_R_trademark" = -32;
"@MMK_R_v" = -15;
"@MMK_R_w" = -21;
"@MMK_R_x" = -16;
};
"@MMK_L_backslash" = {
"@MMK_R_AE" = 52;
"@MMK_R_Aacute" = 48;
"@MMK_R_C" = -14;
"@MMK_R_T" = -36;
"@MMK_R_U" = -25;
"@MMK_R_W" = -61;
"@MMK_R_Y" = -37;
"@MMK_R_h" = 9;
"@MMK_R_l" = 16;
"@MMK_R_quotedbl" = -53;
"@MMK_R_w" = -32;
"@MMK_R_y" = -14;
};
"@MMK_L_bar" = {
"@MMK_R_b" = 5;
"@MMK_R_dotlessj" = 55;
};
"@MMK_L_braceleft" = {
"@MMK_R_AE" = 28;
"@MMK_R_Aacute" = 29;
"@MMK_R_C" = -18;
"@MMK_R_T" = 5;
"@MMK_R_U" = 13;
"@MMK_R_W" = 51;
"@MMK_R_Y" = 43;
"@MMK_R_b" = 70;
"@MMK_R_c" = -15;
"@MMK_R_d" = -13;
"@MMK_R_dotlessj" = 91;
"@MMK_R_h" = 46;
"@MMK_R_l" = 37;
"@MMK_R_u" = -14;
"@MMK_R_w" = -32;
"@MMK_R_y" = -16;
};
"@MMK_L_bracketleft" = {
"@MMK_R_AE" = 29;
"@MMK_R_Aacute" = 29;
"@MMK_R_C" = -19;
"@MMK_R_T" = 5;
"@MMK_R_W" = 51;
"@MMK_R_Y" = 44;
"@MMK_R_b" = 72;
"@MMK_R_c" = -14;
"@MMK_R_d" = -13;
"@MMK_R_dotlessj" = 90;
"@MMK_R_h" = 47;
"@MMK_R_l" = 38;
"@MMK_R_u" = -13;
"@MMK_R_w" = -31;
"@MMK_R_y" = -15;
};
"@MMK_L_c" = {
"@MMK_R_B" = -16;
"@MMK_R_T" = -85;
"@MMK_R_U" = -19;
"@MMK_R_Y" = -115;
"@MMK_R_backslash" = -36;
};
"@MMK_L_c.salt" = {
"@MMK_R_w" = -8;
};
"@MMK_L_c_h" = {
"@MMK_R_C" = -13;
"@MMK_R_T" = -115;
"@MMK_R_U" = -48;
"@MMK_R_Y" = -142;
"@MMK_R_asterisk" = -42;
"@MMK_R_backslash" = -65;
"@MMK_R_braceright" = 35;
"@MMK_R_bracketright" = 34;
"@MMK_R_c" = -6;
"@MMK_R_c.salt" = -6;
"@MMK_R_parenright" = 19;
"@MMK_R_q" = -5;
"@MMK_R_question" = -13;
"@MMK_R_quotedbl" = -43;
"@MMK_R_quotedblleft" = -43;
"@MMK_R_quotedblright" = -43;
"@MMK_R_slash" = 15;
"@MMK_R_t" = -15;
"@MMK_R_trademark" = -37;
"@MMK_R_u" = -29;
"@MMK_R_v" = -48;
"@MMK_R_w" = -52;
"@MMK_R_y" = -5;
};
"@MMK_L_c_k" = {
"@MMK_R_T" = -81;
"@MMK_R_U" = -14;
"@MMK_R_Y" = -100;
"@MMK_R_c" = -22;
"@MMK_R_c.salt" = -22;
"@MMK_R_d" = -20;
"@MMK_R_emdash" = -22;
"@MMK_R_q" = -21;
"@MMK_R_quotedbl" = -29;
"@MMK_R_quotedblleft" = -31;
"@MMK_R_quotedblright" = -29;
"@MMK_R_y" = 14;
};
"@MMK_L_c_p" = {
"@MMK_R_B" = -19;
"@MMK_R_T" = -127;
"@MMK_R_U" = -25;
"@MMK_R_Y" = -149;
"@MMK_R_v" = -8;
"@MMK_R_w" = -13;
"@MMK_R_x" = -9;
"@MMK_R_y" = -5;
};
"@MMK_L_c_t" = {
"@MMK_R_Aacute" = 5;
"@MMK_R_B" = -8;
"@MMK_R_T" = -89;
"@MMK_R_U" = -22;
"@MMK_R_Y" = -108;
"@MMK_R_asterisk" = -18;
"@MMK_R_backslash" = -39;
"@MMK_R_quotedbl" = -16;
"@MMK_R_quotedblleft" = -12;
"@MMK_R_quotedblright" = -16;
"@MMK_R_u" = 6;
};
"@MMK_L_colon" = {
"@MMK_R_AE" = 8;
"@MMK_R_T" = -27;
"@MMK_R_V" = -21;
"@MMK_R_W" = -24;
"@MMK_R_Y" = -22;
};
"@MMK_L_comma" = {
"@MMK_R_AE" = 20;
"@MMK_R_Aacute" = 16;
"@MMK_R_C" = -13;
"@MMK_R_T" = -25;
"@MMK_R_U" = -18;
"@MMK_R_V" = -43;
"@MMK_R_W" = -47;
"@MMK_R_Y" = -21;
"@MMK_R_dotlessj" = -17;
"@MMK_R_nine" = -17;
"@MMK_R_quotedbl" = -83;
"@MMK_R_quotedblleft" = -77;
"@MMK_R_quotedblright" = -83;
"@MMK_R_u" = -16;
"@MMK_R_v" = -50;
"@MMK_R_w" = -52;
"@MMK_R_y" = -18;
};
"@MMK_L_d" = {
"@MMK_R_U" = -13;
"@MMK_R_Y" = -13;
"@MMK_R_braceright" = 34;
"@MMK_R_bracketright" = 32;
"@MMK_R_comma" = 9;
"@MMK_R_parenright" = 31;
"@MMK_R_slash" = 33;
"@MMK_R_w" = -7;
"@MMK_R_z" = 8;
};
"@MMK_L_dotlessi" = {
"@MMK_R_T" = -25;
"@MMK_R_U" = -23;
"@MMK_R_Y" = -96;
"@MMK_R_backslash" = -26;
"@MMK_R_braceright" = 7;
"@MMK_R_bracketright" = 7;
"@MMK_R_parenright" = 8;
"@MMK_R_slash" = 17;
"@MMK_R_v" = -15;
"@MMK_R_w" = -19;
};
"@MMK_L_dotlessj" = {
"@MMK_R_B" = -13;
"@MMK_R_M" = -10;
"@MMK_R_T" = -10;
"@MMK_R_U" = -18;
"@MMK_R_V" = -66;
"@MMK_R_W" = -69;
"@MMK_R_Y" = -91;
"@MMK_R_Z" = -5;
"@MMK_R_backslash" = -19;
"@MMK_R_dotlessj" = 56;
};
"@MMK_L_emdash" = {
"@MMK_R_AE" = -30;
"@MMK_R_B" = -11;
"@MMK_R_M" = -10;
"@MMK_R_T" = -48;
"@MMK_R_V" = -25;
"@MMK_R_W" = -29;
"@MMK_R_X" = -15;
"@MMK_R_Y" = -43;
"@MMK_R_Z" = -12;
"@MMK_R_dotlessj" = -19;
"@MMK_R_eng" = -11;
"@MMK_R_v" = -22;
"@MMK_R_w" = -23;
"@MMK_R_y" = -27;
};
"@MMK_L_eth" = {
"@MMK_R_B" = -14;
"@MMK_R_T" = -24;
};
"@MMK_L_exclamdown" = {
"@MMK_R_U" = -13;
"@MMK_R_W" = -24;
"@MMK_R_Y" = -28;
"@MMK_R_dotlessj" = 51;
};
"@MMK_L_f" = {
"@MMK_R_B" = 93;
"@MMK_R_C" = 48;
"@MMK_R_T" = 143;
"@MMK_R_U" = 101;
"@MMK_R_Y" = 144;
"@MMK_R_emdash" = -26;
"@MMK_R_quotedbl" = 116;
"@MMK_R_quotedblleft" = 119;
"@MMK_R_quotedblright" = 116;
};
"@MMK_L_f_f_i" = {
"@MMK_R_a" = -5;
"@MMK_R_c" = -9;
"@MMK_R_c.salt" = -9;
"@MMK_R_d" = -7;
"@MMK_R_q" = -7;
"@MMK_R_v" = -13;
"@MMK_R_w" = -18;
};
"@MMK_L_f_f_l" = {
"@MMK_R_T" = -9;
"@MMK_R_U" = -12;
"@MMK_R_Y" = -5;
"@MMK_R_braceright" = 7;
"@MMK_R_bracketright" = 6;
"@MMK_R_parenright" = 7;
"@MMK_R_slash" = 15;
"@MMK_R_v" = -8;
"@MMK_R_w" = -11;
};
"@MMK_L_f_l" = {
"@MMK_R_c" = -6;
"@MMK_R_w" = -19;
};
"@MMK_L_g" = {
"@MMK_R_C" = -9;
"@MMK_R_T" = -47;
"@MMK_R_U" = -24;
"@MMK_R_Y" = -82;
"@MMK_R_a" = -7;
"@MMK_R_a.salt" = -8;
"@MMK_R_backslash" = -27;
"@MMK_R_braceright" = 67;
"@MMK_R_bracketright" = 65;
"@MMK_R_comma" = 9;
"@MMK_R_parenright" = 36;
"@MMK_R_slash" = 31;
"@MMK_R_v" = -19;
"@MMK_R_w" = -19;
"@MMK_R_y" = -7;
"@MMK_R_z" = 5;
};
"@MMK_L_g.salt" = {
"@MMK_R_c" = -11;
"@MMK_R_d" = -7;
"@MMK_R_emdash" = -11;
"@MMK_R_f_f" = 9;
"@MMK_R_t" = 14;
"@MMK_R_u" = 19;
};
"@MMK_L_germandbls" = {
"@MMK_R_B" = -7;
"@MMK_R_C" = -13;
"@MMK_R_T" = -72;
"@MMK_R_dotlessj" = -33;
"@MMK_R_t" = -10;
"@MMK_R_u" = -17;
"@MMK_R_w" = -65;
"@MMK_R_y" = -54;
};
"@MMK_L_guillemotleft" = {
"@MMK_R_AE" = -33;
"@MMK_R_Y" = -20;
};
"@MMK_L_guillemotright" = {
"@MMK_R_AE" = -38;
"@MMK_R_T" = -14;
"@MMK_R_W" = -11;
"@MMK_R_X" = -16;
"@MMK_R_Y" = -25;
"@MMK_R_Z" = -11;
"@MMK_R_dotlessj" = 5;
"@MMK_R_quotedbl" = -21;
"@MMK_R_quotedblright" = -21;
};
"@MMK_L_k.salt" = {
"@MMK_R_a" = -9;
"@MMK_R_a.salt" = -7;
"@MMK_R_asterisk" = -41;
"@MMK_R_backslash" = -61;
"@MMK_R_braceright" = 21;
"@MMK_R_bracketright" = 20;
"@MMK_R_c" = -29;
"@MMK_R_c.salt" = -29;
"@MMK_R_d" = -25;
"@MMK_R_emdash" = -58;
"@MMK_R_parenright" = 8;
"@MMK_R_q" = -27;
"@MMK_R_question" = -19;
"@MMK_R_quotedbl" = -50;
"@MMK_R_quotedblleft" = -51;
"@MMK_R_quotedblright" = -50;
"@MMK_R_trademark" = -31;
"@MMK_R_v" = -6;
"@MMK_R_w" = -11;
};
"@MMK_L_l_l" = {
"@MMK_R_w" = -10;
};
"@MMK_L_ldot" = {
"@MMK_R_f_f" = 15;
};
"@MMK_L_m" = {
"@MMK_R_C" = -8;
"@MMK_R_T" = -102;
"@MMK_R_U" = -33;
"@MMK_R_Y" = -128;
"@MMK_R_u" = -12;
"@MMK_R_w" = -45;
"@MMK_R_y" = -5;
};
"@MMK_L_n" = {
"@MMK_R_C" = -9;
"@MMK_R_T" = -104;
"@MMK_R_U" = -37;
"@MMK_R_Y" = -130;
"@MMK_R_backslash" = -63;
"@MMK_R_braceright" = 28;
"@MMK_R_bracketright" = 27;
"@MMK_R_parenright" = 21;
"@MMK_R_question" = -13;
"@MMK_R_slash" = 24;
"@MMK_R_trademark" = -13;
"@MMK_R_u" = -16;
"@MMK_R_v" = -42;
"@MMK_R_w" = -46;
"@MMK_R_y" = -6;
};
"@MMK_L_nine" = {
"@MMK_R_B" = -12;
"@MMK_R_comma" = -34;
};
"@MMK_L_o" = {
"@MMK_R_B" = -21;
"@MMK_R_T" = -131;
"@MMK_R_U" = -26;
"@MMK_R_Y" = -151;
"@MMK_R_asterisk" = -12;
"@MMK_R_backslash" = -60;
"@MMK_R_braceright" = -14;
"@MMK_R_bracketright" = -15;
"@MMK_R_parenright" = -12;
"@MMK_R_question" = -22;
"@MMK_R_trademark" = -21;
"@MMK_R_v" = -17;
"@MMK_R_w" = -23;
"@MMK_R_x" = -17;
};
"@MMK_L_parenleft" = {
"@MMK_R_AE" = 22;
"@MMK_R_Aacute" = 18;
"@MMK_R_C" = -15;
"@MMK_R_W" = 37;
"@MMK_R_Y" = 32;
"@MMK_R_b" = 62;
"@MMK_R_c" = -17;
"@MMK_R_d" = -16;
"@MMK_R_g" = -13;
"@MMK_R_h" = 44;
"@MMK_R_l" = 28;
"@MMK_R_w" = -26;
"@MMK_R_y" = -23;
};
"@MMK_L_q" = {
"@MMK_R_B" = -8;
"@MMK_R_T" = -95;
"@MMK_R_U" = -11;
"@MMK_R_Y" = -118;
"@MMK_R_dotlessj" = 107;
"@MMK_R_y" = 26;
};
"@MMK_L_questiondown" = {
"@MMK_R_AE" = 44;
"@MMK_R_Aacute" = 40;
"@MMK_R_C" = -13;
"@MMK_R_T" = -21;
"@MMK_R_U" = -23;
"@MMK_R_W" = -46;
"@MMK_R_Y" = -32;
"@MMK_R_dotlessj" = 82;
"@MMK_R_l" = 6;
"@MMK_R_w" = -24;
};
"@MMK_L_quotedbl" = {
"@MMK_R_AE" = -67;
"@MMK_R_Aacute" = -29;
"@MMK_R_J" = -22;
"@MMK_R_V" = 17;
"@MMK_R_W" = 25;
"@MMK_R_Y" = 22;
"@MMK_R_at" = -18;
"@MMK_R_b" = 53;
"@MMK_R_comma" = -83;
"@MMK_R_d" = -18;
"@MMK_R_four" = -37;
"@MMK_R_g" = -30;
"@MMK_R_guillemotleft" = -22;
"@MMK_R_h" = 36;
"@MMK_R_l" = 19;
"@MMK_R_registered" = -18;
"@MMK_R_six" = -15;
"@MMK_R_slash" = -53;
"@MMK_R_space" = -30;
};
"@MMK_L_quotedblleft" = {
"@MMK_R_AE" = -66;
"@MMK_R_Aacute" = -31;
"@MMK_R_J" = -20;
"@MMK_R_V" = 19;
"@MMK_R_W" = 27;
"@MMK_R_Y" = 25;
"@MMK_R_b" = 55;
"@MMK_R_comma" = -77;
"@MMK_R_d" = -17;
"@MMK_R_g" = -24;
"@MMK_R_h" = 39;
"@MMK_R_l" = 22;
};
"@MMK_L_quotedblright" = {
"@MMK_R_AE" = -67;
"@MMK_R_Aacute" = -29;
"@MMK_R_J" = -22;
"@MMK_R_V" = 23;
"@MMK_R_W" = 31;
"@MMK_R_Y" = 28;
"@MMK_R_b" = 58;
"@MMK_R_c.salt" = -10;
"@MMK_R_comma" = -84;
"@MMK_R_d" = -18;
"@MMK_R_g" = -31;
"@MMK_R_guillemotleft" = -23;
"@MMK_R_h" = 41;
"@MMK_R_l" = 25;
};
"@MMK_L_r" = {
"@MMK_R_B" = -21;
"@MMK_R_T" = -128;
"@MMK_R_U" = -22;
"@MMK_R_Y" = -143;
"@MMK_R_backslash" = -49;
"@MMK_R_braceright" = -17;
"@MMK_R_bracketright" = -18;
"@MMK_R_comma" = -14;
"@MMK_R_parenright" = -15;
"@MMK_R_question" = -14;
};
"@MMK_L_registered" = {
"@MMK_R_B" = -15;
"@MMK_R_T" = -43;
"@MMK_R_U" = -19;
"@MMK_R_W" = -51;
"@MMK_R_Y" = -59;
"@MMK_R_quotedbl" = -14;
};
"@MMK_L_s" = {
"@MMK_R_B" = -14;
"@MMK_R_T" = -83;
"@MMK_R_U" = -25;
"@MMK_R_Y" = -122;
"@MMK_R_backslash" = -46;
};
"@MMK_L_seven" = {
"@MMK_R_B" = 26;
"@MMK_R_C" = -14;
"@MMK_R_comma" = -66;
"@MMK_R_quotedbl" = 12;
};
"@MMK_L_slash" = {
"@MMK_R_AE" = -84;
"@MMK_R_Aacute" = -58;
"@MMK_R_C" = -15;
"@MMK_R_J" = -44;
"@MMK_R_W" = 43;
"@MMK_R_Y" = 39;
"@MMK_R_a" = -60;
"@MMK_R_b" = 69;
"@MMK_R_c" = -61;
"@MMK_R_d" = -48;
"@MMK_R_dotlessi" = -22;
"@MMK_R_dotlessj" = -20;
"@MMK_R_eng" = -28;
"@MMK_R_g" = -61;
"@MMK_R_h" = 52;
"@MMK_R_l" = 35;
"@MMK_R_r" = -29;
"@MMK_R_s" = -60;
"@MMK_R_t" = -17;
"@MMK_R_u" = -20;
"@MMK_R_w" = -34;
"@MMK_R_y" = -37;
"@MMK_R_z" = -55;
};
"@MMK_L_space" = {
"@MMK_R_AE" = -39;
"@MMK_R_Aacute" = -28;
"@MMK_R_J" = -28;
"@MMK_R_T" = -27;
"@MMK_R_W" = -31;
"@MMK_R_Y" = -30;
"@MMK_R_quotedbl" = -30;
"@MMK_R_w" = -23;
"@MMK_R_y" = -21;
};
"@MMK_L_t_t" = {
"@MMK_R_c" = -7;
"@MMK_R_dotlessj" = 6;
};
"@MMK_L_t_z" = {
"@MMK_R_B" = -11;
"@MMK_R_T" = -100;
"@MMK_R_U" = -26;
"@MMK_R_Y" = -123;
"@MMK_R_backslash" = -52;
"@MMK_R_question" = -15;
};
"@MMK_L_trademark" = {
"@MMK_R_AE" = -62;
"@MMK_R_Aacute" = -21;
"@MMK_R_J" = -25;
"@MMK_R_T" = 14;
"@MMK_R_U" = 13;
"@MMK_R_W" = 60;
"@MMK_R_Y" = 58;
"@MMK_R_b" = 82;
"@MMK_R_c" = -12;
"@MMK_R_d" = -14;
"@MMK_R_g" = -15;
"@MMK_R_h" = 65;
"@MMK_R_l" = 49;
"@MMK_R_t" = 5;
"@MMK_R_u" = 13;
};
"@MMK_L_u" = {
"@MMK_R_T" = -94;
"@MMK_R_U" = -23;
"@MMK_R_Y" = -120;
"@MMK_R_backslash" = -55;
"@MMK_R_braceright" = 14;
"@MMK_R_bracketright" = 13;
"@MMK_R_parenright" = 13;
"@MMK_R_slash" = 19;
"@MMK_R_v" = -13;
"@MMK_R_w" = -18;
};
"@MMK_L_v" = {
"@MMK_R_Aacute" = -40;
"@MMK_R_B" = -24;
"@MMK_R_T" = -83;
"@MMK_R_U" = -19;
"@MMK_R_Y" = -110;
"@MMK_R_comma" = -49;
"@MMK_R_dotlessi" = 13;
"@MMK_R_dotlessj" = 24;
"@MMK_R_emdash" = -16;
"@MMK_R_eng" = 15;
"@MMK_R_f_f" = 8;
"@MMK_R_guillemotleft" = 10;
"@MMK_R_r" = 13;
"@MMK_R_t" = 18;
"@MMK_R_u" = 7;
"@MMK_R_y" = 39;
};
"@MMK_L_w" = {
"@MMK_R_Aacute" = -42;
"@MMK_R_B" = -24;
"@MMK_R_T" = -87;
"@MMK_R_U" = -16;
"@MMK_R_Y" = -116;
"@MMK_R_backslash" = -33;
"@MMK_R_braceright" = -32;
"@MMK_R_bracketright" = -26;
"@MMK_R_comma" = -48;
"@MMK_R_dotlessi" = 8;
"@MMK_R_dotlessj" = 12;
"@MMK_R_emdash" = -11;
"@MMK_R_eng" = 7;
"@MMK_R_guillemotleft" = 6;
"@MMK_R_m" = 8;
"@MMK_R_p" = 9;
"@MMK_R_parenright" = -22;
"@MMK_R_r" = 6;
"@MMK_R_slash" = -24;
"@MMK_R_space" = -20;
"@MMK_R_t" = 8;
"@MMK_R_x" = 10;
"@MMK_R_y" = 43;
};
"@MMK_L_x" = {
"@MMK_R_Aacute" = 16;
"@MMK_R_B" = -6;
"@MMK_R_T" = -102;
"@MMK_R_U" = -29;
"@MMK_R_Y" = -120;
"@MMK_R_c" = -5;
"@MMK_R_emdash" = -12;
};
"@MMK_L_y" = {
"@MMK_R_Aacute" = -45;
"@MMK_R_B" = -39;
"@MMK_R_T" = -113;
"@MMK_R_U" = -25;
"@MMK_R_Y" = -145;
"@MMK_R_backslash" = -45;
"@MMK_R_braceright" = -33;
"@MMK_R_bracketright" = -30;
"@MMK_R_comma" = -49;
"@MMK_R_emdash" = -12;
"@MMK_R_g" = -6;
"@MMK_R_l" = -14;
"@MMK_R_parenright" = -25;
"@MMK_R_q" = -6;
"@MMK_R_slash" = -24;
"@MMK_R_space" = -20;
"@MMK_R_y" = 16;
};
"@MMK_L_zero" = {
"@MMK_R_B" = -12;
};
A = {
Iogonek = 13;
apostrophemod = -53;
comma = 3;
f_f_h = 55;
five = 7;
iogonek = 6;
one = 39;
semicolon = 1;
seven = 70;
thorn = 24;
three = 28;
two = 51;
};
Aacute = {
Iogonek = 13;
comma = 3;
f_f_h = 55;
semicolon = 1;
thorn = 24;
};
Abreve = {
Iogonek = 13;
comma = 3;
f_f_h = 55;
semicolon = 1;
thorn = 24;
};
Acircumflex = {
Iogonek = 13;
comma = 3;
f_f_h = 55;
semicolon = 1;
thorn = 24;
};
Adieresis = {
Iogonek = 13;
comma = 3;
f_f_h = 55;
semicolon = 1;
thorn = 24;
};
Agrave = {
Iogonek = 13;
comma = 3;
f_f_h = 55;
semicolon = 1;
thorn = 24;
};
Amacron = {
Iogonek = 13;
comma = 3;
f_f_h = 55;
semicolon = 1;
thorn = 24;
};
Aogonek = {
Iogonek = 13;
comma = 3;
f_f_h = 55;
semicolon = 1;
thorn = 24;
};
Aring = {
Iogonek = 13;
comma = 3;
f_f_h = 55;
semicolon = 1;
thorn = 24;
};
Aringacute = {
Iogonek = 10;
comma = 1;
semicolon = 1;
space = -38;
thorn = 22;
};
Atilde = {
Iogonek = 13;
comma = 3;
f_f_h = 55;
semicolon = 1;
thorn = 24;
};
B = {
M = -10;
V = -23;
X = -31;
apostrophemod = -12;
braceright = -13;
bracketright = -15;
four = 9;
p = -6;
v = -25;
};
C = {
four = 16;
k = 15;
k.salt = 13;
kcommaaccent = 13;
lslash = 1;
};
Cacute = {
k = 15;
k.salt = 13;
};
Ccaron = {
k = 15;
k.salt = 13;
};
Ccedilla = {
k = 15;
k.salt = 13;
};
Ccircumflex = {
k = 15;
k.salt = 13;
};
Cdotaccent = {
k = 15;
k.salt = 13;
};
D = {
apostrophemod = -18;
};
Eng = {
k = 52;
k.salt = 50;
};
F = {
V = 22;
a.salt = -36;
ampersand = -12;
asterisk = 30;
at = -22;
braceright = 15;
bracketright = 10;
c.salt = -46;
four = -12;
germandbls = -12;
icircumflex = -6;
idieresis = 4;
k = 56;
k.salt = 54;
kcommaaccent = 54;
lslash = 40;
m = -24;
nine = 9;
p = -16;
q = -49;
registered = -21;
s.salt = -40;
schwa = -34;
slash = -38;
space = -25;
t_z = -12;
trademark = 9;
v = -26;
x = -20;
};
G = {
k = 5;
k.salt = 2;
kcommaaccent = 2;
};
Gbreve = {
k = 5;
k.salt = 2;
};
Gcircumflex = {
k = 5;
k.salt = 2;
};
Gcommaaccent = {
k = 5;
k.salt = 2;
};
Gdotaccent = {
k = 5;
k.salt = 2;
};
H = {
at = -17;
f_f_b = 37;
f_f_h = 13;
four = -21;
k = 36;
k.salt = 34;
kcommaaccent = 34;
lslash = 20;
one = 5;
schwa = -23;
seven = 24;
six = -18;
two = 14;
zero = -14;
};
Hbar = {
f_f_b = 34;
f_f_h = 11;
k = 33;
k.salt = 31;
};
Hcircumflex = {
f_f_b = 37;
f_f_h = 13;
k = 36;
k.salt = 34;
};
I = {
f_f_h = -8;
four = -16;
k = 27;
k.salt = 26;
kcommaaccent = 26;
lslash = 11;
schwa = -11;
seven = 9;
};
IJ = {
k = 35;
k.salt = 34;
};
Iacute = {
f_f_h = -8;
k = 27;
k.salt = 26;
};
Ibreve = {
f_f_h = -8;
k = 27;
k.salt = 26;
};
Icircumflex = {
f_f_h = -8;
k = 27;
k.salt = 26;
};
Idieresis = {
f_f_h = -8;
k = 27;
k.salt = 26;
};
Idotaccent = {
f_f_h = -8;
k = 27;
k.salt = 26;
};
Igrave = {
f_f_h = -8;
k = 27;
k.salt = 26;
};
Imacron = {
f_f_h = -8;
k = 27;
k.salt = 26;
};
Iogonek = {
f_f_h = -8;
j = 46;
k = 27;
k.salt = 26;
};
Itilde = {
f_f_h = -8;
k = 27;
k.salt = 26;
};
J = {
f_f_h = -6;
k = 34;
k.salt = 33;
kcommaaccent = 33;
lslash = 22;
schwa = -18;
};
Jcircumflex = {
f_f_h = -6;
k = 34;
k.salt = 33;
};
K = {
four = -34;
lslash = 50;
one = 23;
schwa = -44;
seven = 33;
three = 11;
two = 19;
};
K.salt = {
a.salt = -6;
asterisk = 26;
at = -12;
b = 73;
backslash = 11;
braceright = 13;
bracketright = 16;
c.salt = -24;
f_f_b = 8;
four = -27;
k = 60;
k.salt = 57;
kcommaaccent = 57;
lslash = 39;
one = 7;
p = -34;
q = -23;
registered = -17;
s.salt = -8;
schwa = -21;
six = -12;
thorn = 85;
trademark = 14;
v = -75;
};
L = {
apostrophemod = -57;
four = 23;
lslash = 13;
nine = -33;
};
Ldot = {
t_t = -6;
t_z = -6;
};
M = {
a.salt = -23;
ampersand = -14;
asterisk = 32;
at = -22;
backslash = 10;
braceright = 10;
bracketright = 14;
c.salt = -46;
f_f_b = 18;
f_f_h = 2;
four = -28;
k = 56;
k.salt = 54;
kcommaaccent = 54;
lslash = 33;
m = -9;
one = 22;
p = -30;
q = -42;
registered = -26;
s.salt = -19;
schwa = -28;
six = -21;
trademark = 18;
v = -72;
};
N = {
at = -27;
four = -19;
k = 53;
k.salt = 50;
kcommaaccent = 50;
lslash = 36;
schwa = -41;
six = -22;
zero = -15;
};
Nacute = {
k = 53;
k.salt = 50;
};
Ncaron = {
k = 53;
k.salt = 50;
};
Ncommaaccent = {
k = 53;
k.salt = 50;
};
Ndotaccent = {
k = 53;
k.salt = 50;
};
Ntilde = {
k = 53;
k.salt = 50;
};
P = {
X = -38;
a.salt = -21;
ampersand = -17;
asterisk = 32;
at = -24;
c.salt = -53;
four = -19;
hbar = 25;
icircumflex = 12;
idieresis = 13;
imacron = 15;
itilde = 30;
m = -37;
nine = 15;
q = -62;
registered = -20;
s.salt = -39;
schwa = -41;
slash = -48;
space = -25;
};
R = {
apostrophemod = -12;
f_f_b = 35;
f_f_h = 14;
f_f_i = 28;
four = -28;
lslash = 29;
one = 29;
schwa = -15;
seven = 50;
three = 19;
two = 37;
};
R.salt = {
V = -25;
apostrophemod = -18;
backslash = -18;
braceright = 7;
bracketright = 5;
c.salt = -24;
f_f_b = 34;
f_f_h = 7;
four = -23;
lslash = 11;
p = -12;
q = -23;
registered = -14;
schwa = -14;
seven = 20;
t_z = -23;
three = 8;
two = 8;
v = -47;
};
Racute = {
f_f_b = 35;
f_f_h = 14;
f_f_i = 28;
};
Rcaron = {
f_f_b = 35;
f_f_h = 14;
f_f_i = 28;
};
Rcommaaccent = {
f_f_b = 35;
f_f_h = 14;
f_f_i = 28;
};
S = {
itilde = 6;
k = 28;
k.salt = 26;
kcommaaccent = 26;
lslash = 13;
schwa = -7;
};
Sacute = {
k = 28;
k.salt = 26;
lslash = 13;
};
Scaron = {
k = 28;
k.salt = 26;
kcommaaccent = 26;
};
Scircumflex = {
k = 28;
k.salt = 26;
};
T = {
abreve = -95;
acircumflex = -81;
adieresis = -63;
amacron = -82;
at = -47;
atilde = -61;
idotless = -79;
ecaron = -109;
ecircumflex = -110;
edieresis = -85;
emacron = -107;
etilde = -73;
four = -44;
gbreve = -114;
gcircumflex = -110;
icircumflex = -5;
idieresis = 6;
imacron = 7;
iogonek = -78;
itilde = 13;
jcircumflex = -17;
k = 48;
k.salt = 47;
kcommaaccent = 47;
lslash = 33;
nine = 8;
odieresis = -96;
ohungarumlaut = -116;
otilde = -77;
rcaron = -52;
scaron = -62;
schwa = -109;
scircumflex = -72;
six = -20;
};
Tbar = {
k = 48;
k.salt = 47;
};
Tcaron = {
k = 48;
k.salt = 47;
};
Thorn = {
M = -19;
V = -27;
X = -69;
backslash = -20;
braceright = -24;
bracketright = -24;
c.salt = -5;
f_f_h = 6;
j = 7;
one = -21;
p = 9;
parenright = -20;
q = -7;
seven = -28;
slash = -27;
u = 10;
};
U = {
at = -23;
f_f_h = -12;
four = -12;
k = 26;
k.salt = 26;
kcommaaccent = 26;
one = 9;
schwa = -30;
six = -17;
thorn = 41;
};
Uacute = {
f_f_h = -12;
k = 26;
k.salt = 26;
thorn = 41;
};
Ubreve = {
f_f_h = -12;
k = 26;
k.salt = 26;
thorn = 41;
};
Ucircumflex = {
f_f_h = -12;
k = 26;
k.salt = 26;
thorn = 41;
};
Udieresis = {
f_f_h = -12;
k = 26;
k.salt = 26;
thorn = 41;
};
Ugrave = {
f_f_h = -12;
k = 26;
k.salt = 26;
thorn = 41;
};
Uhungarumlaut = {
f_f_h = -12;
k = 26;
k.salt = 26;
thorn = 41;
};
Umacron = {
f_f_h = -12;
k = 26;
k.salt = 26;
kcommaaccent = 26;
thorn = 41;
};
Uogonek = {
f_f_h = -12;
k = 26;
k.salt = 26;
thorn = 41;
};
Uring = {
f_f_h = -12;
k = 26;
k.salt = 26;
thorn = 41;
};
Utilde = {
f_f_h = -12;
k = 26;
k.salt = 26;
thorn = 41;
};
V = {
a.salt = -91;
aringacute = -89;
asterisk = 77;
at = -48;
b = 28;
backslash = 46;
braceright = 32;
bracketright = 35;
c.salt = -108;
idotless = -64;
eight = 12;
eth = -102;
five = 5;
four = -32;
germandbls = -10;
iogonek = -64;
k = 90;
k.salt = 92;
kcommaaccent = 92;
m = -66;
nine = 38;
one = 45;
p = -58;
parenright = 24;
q = -112;
question = 29;
registered = -47;
s.salt = -102;
schwa = -91;
seven = 45;
six = -17;
slash = -51;
space = -27;
thorn = 76;
three = 14;
trademark = 73;
two = 22;
v = -74;
x = -56;
};
W = {
aringacute = -98;
at = -50;
idotless = -68;
eight = 7;
eth = -99;
four = -33;
iogonek = -68;
k = 11;
k.salt = 7;
kcommaaccent = 10;
nine = 33;
one = 37;
schwa = -94;
seven = 37;
six = -19;
thorn = 30;
three = 11;
two = 19;
};
Wacute = {
eth = -99;
k = 12;
k.salt = 7;
thorn = 30;
};
Wcircumflex = {
eth = -99;
k = 12;
k.salt = 7;
thorn = 30;
};
Wdieresis = {
eth = -99;
k = 12;
k.salt = 7;
thorn = 30;
};
Wgrave = {
eth = -99;
k = 12;
k.salt = 7;
thorn = 30;
};
X = {
backslash = 5;
braceright = 48;
bracketright = 47;
c.salt = -18;
f_f_b = 50;
f_f_h = 16;
f_f_i = 31;
four = -23;
k = 48;
k.salt = 48;
kcommaaccent = 48;
lslash = 39;
one = 37;
parenright = 38;
q = -11;
quotedblbase = 3;
quotesinglbase = 3;
schwa = -16;
seven = 59;
slash = 38;
three = 26;
trademark = 8;
two = 45;
v = -101;
};
Y = {
aringacute = -106;
at = -53;
idotless = -99;
eth = -104;
f_f_h = -40;
four = -47;
iogonek = -98;
k = 68;
k.salt = 82;
kcommaaccent = 82;
nine = 28;
one = 45;
schwa = -123;
seven = 39;
six = -24;
t_z = -95;
thorn = 125;
three = 6;
two = 13;
};
Yacute = {
eth = -104;
f_f_h = -40;
k = 68;
k.salt = 82;
t_z = -95;
thorn = 125;
};
Ycircumflex = {
eth = -104;
f_f_h = -40;
k = 68;
k.salt = 82;
t_z = -95;
thorn = 125;
};
Ydieresis = {
eth = -104;
f_f_h = -40;
k = 68;
k.salt = 82;
t_z = -95;
thorn = 125;
};
Ygrave = {
eth = -104;
k = 68;
k.salt = 82;
thorn = 125;
};
Ytilde = {
eth = -104;
k = 68;
k.salt = 82;
thorn = 125;
};
Z = {
four = 8;
k = 15;
k.salt = 14;
kcommaaccent = 14;
lslash = 7;
};
Zacute = {
k = 15;
k.salt = 14;
};
Zcaron = {
k = 15;
k.salt = 14;
};
Zdotaccent = {
k = 15;
k.salt = 14;
lslash = 7;
};
a = {
AE = 62;
J = 20;
V = -111;
W = -126;
X = 5;
Z = 8;
lslash = 41;
};
a.salt = {
apostrophemod = -15;
backslash = -61;
lslash = 25;
parenright = 7;
question = -16;
slash = 9;
trademark = -13;
v = -33;
};
ampersand = {
H = 1;
Hbar = 1;
Hcircumflex = 1;
K = 3;
K.salt = 26;
Kcommaaccent = 3;
L = 29;
Lacute = 29;
Lcaron = 29;
Lcommaaccent = 29;
Lslash = 22;
V = -56;
X = 72;
a.salt = 6;
f = 42;
germandbls = 58;
lslash = 47;
m = 24;
quoteright = -44;
s.salt = 9;
v = -27;
x = 37;
};
aogonek = {
g = 42;
g.salt = 42;
j = 187;
lslash = 41;
p = 20;
thorn = 16;
};
apostrophemod = {
a = -16;
a.salt = -10;
c.salt = -23;
d = -33;
j = -11;
q = -20;
s = -16;
s.salt = -15;
};
asterisk = {
X = 23;
c.salt = -13;
k = 17;
q = -10;
};
at = {
M = -16;
T = -50;
U = -19;
V = -49;
W = -54;
Y = -61;
Z = -14;
quoteright = -16;
};
b = {
apostrophemod = -61;
};
backslash = {
V = -57;
X = 26;
germandbls = 13;
lslash = 10;
nine = -23;
quoteright = -53;
seven = 10;
v = -29;
};
braceleft = {
V = 43;
X = 19;
c.salt = -15;
four = -21;
k = 38;
k.salt = 37;
kcommaaccent = 37;
lslash = 31;
one = 10;
parenleft = -14;
q = -12;
seven = 18;
six = -18;
two = 5;
v = -30;
zero = -15;
};
bracketleft = {
V = 43;
X = 20;
c.salt = -14;
four = -23;
germandbls = 7;
k = 39;
k.salt = 38;
kcommaaccent = 38;
lslash = 32;
one = 7;
parenleft = -15;
q = -12;
seven = 17;
six = -19;
v = -28;
zero = -16;
};
c = {
M = -14;
V = -91;
W = -93;
};
c.salt = {
apostrophemod = -12;
backslash = -52;
question = -13;
trademark = -11;
};
c_k = {
y = 1;
yacute = 1;
ycircumflex = 1;
ydieresis = 1;
};
ccedilla = {
j = 73;
};
comma = {
j = 49;
jcircumflex = 49;
};
d = {
AE = 62;
V = -10;
W = -7;
Z = 12;
lslash = 42;
quotedblbase = 1;
quotesinglbase = 1;
};
dcaron = {
asterisk = 75;
backslash = 80;
bar = 15;
braceright = 86;
bracketright = 88;
exclam = 15;
parenright = 50;
question = 28;
quotedbl = 62;
quotedblbase = 1;
quotedblleft = 67;
quotedblright = 62;
quoteleft = 67;
quoteright = 62;
quotesinglbase = 1;
quotesingle = 62;
trademark = 79;
};
dcroat = {
question = 11;
quotedblbase = 1;
quotesinglbase = 1;
};
degree = {
four = -41;
six = -17;
};
idotless = {
parenright = 17;
};
e = {
apostrophemod = -19;
};
eng = {
backslash = -60;
question = -19;
trademark = -15;
v = -19;
w = -23;
};
eth = {
M = -11;
U = -22;
V = -66;
W = -59;
X = -6;
Y = -53;
Z = -16;
};
exclamdown = {
V = -22;
};
f = {
AE = 45;
D = 87;
E = 84;
Eth = 85;
Etilde = 84;
F = 84;
H = 85;
K = 85;
M = 99;
N = 86;
P = 85;
R = 84;
S = 70;
Thorn = 85;
V = 149;
W = 135;
X = 122;
Z = 107;
ampersand = 20;
apostrophemod = 30;
asterisk = 156;
backslash = 113;
bar = 72;
braceright = 100;
bracketright = 103;
exclam = 73;
icircumflex = 26;
igrave = 57;
jcircumflex = 23;
lslash = 23;
parenright = 73;
question = 113;
slash = 10;
space = 34;
trademark = 135;
};
f_f = {
icircumflex = 26;
igrave = 57;
jcircumflex = 23;
lslash = 23;
napostrophe = 196;
};
f_f_i = {
napostrophe = 6;
};
f_f_j = {
b = 15;
h = 6;
hbar = 6;
hcircumflex = 6;
napostrophe = 44;
thorn = 19;
};
f_f_k = {
y = 1;
yacute = 1;
ycircumflex = 1;
ydieresis = 1;
};
f_f_l = {
napostrophe = 8;
};
fi = {
napostrophe = 6;
};
f_j = {
b = 16;
h = 6;
hbar = 6;
hcircumflex = 6;
napostrophe = 44;
thorn = 18;
};
f_k = {
y = 1;
yacute = 1;
ycircumflex = 1;
ydieresis = 1;
};
fl = {
c.salt = -6;
q = -6;
v = -15;
};
f_t = {
napostrophe = 20;
};
five = {
AE = -14;
four = 25;
};
four = {
A = 13;
AE = 18;
four = 16;
};
fraction = {
four = -22;
nine = 15;
one = -18;
seven = -20;
six = -13;
};
g = {
AE = 45;
Eth = -7;
V = -75;
W = -78;
Z = 9;
apostrophemod = -12;
f_b = 18;
f_f_b = 14;
f_f_i = 15;
f_f_j = 11;
f_f_k = 11;
f_h = 20;
fi = 19;
f_j = 18;
f_k = 20;
fl = 17;
f_t = 18;
icircumflex = 10;
idieresis = 11;
itilde = 18;
lslash = 34;
quotedblbase = 15;
quotesinglbase = 15;
};
g.salt = {
backslash = -34;
braceright = 36;
bracketright = 33;
c.salt = -10;
lslash = 17;
parenright = 13;
q = -9;
slash = 9;
t_z = 1;
v = 5;
};
gbreve = {
f_b = 18;
f_f_b = 14;
f_f_i = 15;
f_f_j = 11;
f_f_k = 11;
f_h = 20;
fi = 19;
f_j = 18;
f_k = 20;
fl = 17;
f_t = 18;
idieresis = 11;
quotedblbase = 15;
quotesinglbase = 15;
};
gcircumflex = {
f_b = 18;
f_f_b = 14;
f_f_i = 15;
f_f_j = 11;
f_f_k = 11;
f_h = 20;
fi = 19;
f_j = 18;
f_k = 20;
fl = 17;
f_t = 18;
quotedblbase = 15;
quotesinglbase = 15;
};
gcommaaccent = {
f_b = 18;
f_f_b = 14;
f_f_i = 15;
f_f_j = 11;
f_f_k = 11;
f_h = 20;
fi = 19;
f_j = 18;
f_k = 20;
fl = 17;
f_t = 18;
imacron = 12;
quotedblbase = 15;
quotesinglbase = 15;
};
gdotaccent = {
f_b = 18;
f_f_b = 14;
f_f_i = 15;
f_f_j = 11;
f_f_k = 11;
f_h = 20;
fi = 19;
f_j = 18;
f_k = 20;
fl = 17;
f_t = 18;
quotedblbase = 15;
quotesinglbase = 15;
};
germandbls = {
AE = 7;
M = -12;
U = -33;
V = -89;
W = -91;
Y = -90;
backslash = -31;
p = -13;
question = -20;
space = -18;
v = -62;
};
h = {
AE = 16;
V = -150;
W = -168;
apostrophemod = -54;
};
i = {
AE = 57;
V = -88;
W = -95;
lslash = 33;
};
idieresis = {
question = 18;
};
iogonek = {
j = 97;
};
itilde = {
question = 30;
};
j = {
apostrophemod = -10;
};
k = {
AE = 31;
V = -76;
W = -83;
apostrophemod = -46;
asterisk = -19;
backslash = -32;
lslash = 7;
schwa = -7;
};
k.salt = {
apostrophemod = -63;
schwa = -14;
};
l = {
AE = 55;
V = -13;
W = -16;
lslash = 30;
periodcentered = -53;
};
l_l = {
napostrophe = 6;
v = -7;
};
lcaron = {
asterisk = 65;
b = 151;
backslash = 70;
braceright = 75;
bracketright = 77;
h = 135;
k = 125;
k.salt = 123;
l = 117;
l_l = 117;
parenright = 40;
question = 19;
quotedbl = 51;
quotedblleft = 57;
quotedblright = 51;
quoteleft = 57;
quoteright = 51;
quotesingle = 51;
thorn = 151;
trademark = 68;
};
ldot = {
f_b = 7;
f_h = 8;
fi = 8;
f_j = 7;
f_k = 8;
fl = 9;
f_t = 7;
t_t = 20;
t_z = 22;
};
lslash = {
a.salt = 14;
f = 34;
f_b = 38;
f_f = 58;
f_f_b = 63;
f_f_h = 62;
f_f_i = 65;
f_f_j = 65;
f_f_k = 65;
f_f_l = 58;
f_h = 41;
fi = 39;
f_j = 38;
f_k = 55;
fl = 37;
f_t = 52;
germandbls = 39;
guillemetright = 13;
guilsinglright = 13;
h = 36;
i = 13;
ij = 13;
j = 18;
k = 38;
k.salt = 36;
l = 39;
l_l = 39;
lslash = 31;
m = 6;
n = 23;
p = 23;
question = 32;
r = 24;
t = 41;
t_t = 41;
t_z = 12;
u = 51;
v = 28;
w = 33;
x = 26;
y = 12;
z = 7;
zacute = 7;
zdotaccent = 7;
};
m = {
AE = 60;
V = -138;
W = -155;
apostrophemod = -12;
backslash = -63;
braceright = 18;
bracketright = 18;
lslash = 35;
parenright = 19;
question = -14;
slash = 23;
trademark = -11;
v = -41;
};
minus = {
seven = -17;
};
n = {
AE = 54;
V = -141;
W = -158;
apostrophemod = -14;
lslash = 33;
};
nine = {
A = -33;
AE = -53;
J = -19;
braceright = -13;
bracketright = -13;
fraction = -31;
parenright = -12;
seven = -14;
slash = -34;
};
numbersign = {
one = -19;
seven = -22;
};
o = {
AE = -7;
M = -20;
V = -113;
W = -125;
X = -10;
Z = -18;
apostrophemod = -21;
};
one = {
A = 39;
AE = 43;
U = -13;
X = 18;
cent = -15;
fraction = 9;
seven = 8;
};
p = {
AE = -5;
M = -16;
V = -110;
W = -121;
X = -10;
Z = -17;
apostrophemod = -17;
backslash = -59;
braceright = -14;
bracketright = -14;
question = -21;
trademark = -16;
};
parenleft = {
V = 30;
X = 6;
c.salt = -17;
four = -16;
k = 34;
k.salt = 33;
kcommaaccent = 33;
lslash = 20;
q = -16;
six = -13;
v = -24;
};
parenright = {
braceright = -13;
bracketright = -14;
};
periodcentered = {
L = -10;
l = -53;
one = -12;
seven = -14;
};
plus = {
seven = -17;
};
q = {
M = -6;
V = -68;
W = -79;
Z = -9;
backslash = -35;
lslash = 7;
thorn = 20;
};
questiondown = {
V = -44;
X = 18;
germandbls = 6;
lslash = 1;
v = -21;
};
quotedbl = {
k = 26;
k.salt = 23;
kcommaaccent = 23;
lslash = 10;
};
quotedblbase = {
A = 8;
AE = 11;
AEacute = 11;
Aacute = 8;
Abreve = 8;
Acircumflex = 8;
Adieresis = 8;
Agrave = 8;
Amacron = 8;
Aogonek = 8;
Aring = 8;
Aringacute = 5;
Atilde = 8;
j = 45;
jcircumflex = 45;
};
quotedblleft = {
k = 29;
k.salt = 27;
kcommaaccent = 27;
lslash = 14;
};
quotedblright = {
k = 30;
k.salt = 28;
kcommaaccent = 28;
lslash = 17;
};
quoteleft = {
k = 29;
k.salt = 27;
kcommaaccent = 27;
lslash = 14;
};
quoteright = {
at = -19;
k = 30;
k.salt = 28;
kcommaaccent = 28;
lslash = 17;
registered = -18;
slash = -54;
space = -30;
};
quotesinglbase = {
A = 8;
AE = 11;
AEacute = 11;
Aacute = 8;
Abreve = 8;
Acircumflex = 8;
Adieresis = 8;
Agrave = 8;
Amacron = 8;
Aogonek = 8;
Aring = 8;
Aringacute = 5;
Atilde = 8;
j = 45;
jcircumflex = 45;
};
quotesingle = {
k = 27;
k.salt = 24;
kcommaaccent = 24;
lslash = 10;
};
r = {
AE = -7;
M = -22;
S = -8;
V = -89;
W = -100;
X = -16;
Z = -24;
};
registered = {
M = -15;
V = -47;
quoteright = -14;
};
s = {
M = -16;
V = -89;
W = -99;
Z = -5;
};
s.salt = {
backslash = -45;
};
semicolon = {
j = 38;
jcircumflex = 38;
};
seven = {
A = -57;
AE = -83;
B = 12;
D = 11;
E = 12;
Eth = 10;
F = 12;
H = 14;
J = -44;
K = 15;
K.salt = 14;
L = 17;
M = 20;
N = 19;
P = 11;
R = 11;
R.salt = 10;
T = 40;
Thorn = 11;
U = 37;
V = 76;
W = 84;
X = 45;
Y = 82;
backslash = 32;
braceright = 36;
bracketright = 38;
cent = -26;
degree = 13;
four = -45;
fraction = -70;
hyphen = -36;
minus = -14;
numbersign = -41;
one = 32;
periodcentered = -20;
seven = 16;
six = -31;
slash = -71;
};
six = {
A = 15;
AE = 15;
J = 24;
T = -30;
V = -15;
W = -13;
Y = -14;
backslash = -23;
four = 30;
nine = -20;
};
slash = {
V = 36;
a.salt = -49;
c.salt = -61;
f = -13;
four = -47;
k = 39;
k.salt = 38;
kcommaaccent = 38;
lslash = 27;
m = -36;
p = -25;
q = -62;
s.salt = -57;
six = -34;
slash = -203;
v = -33;
x = -22;
};
space = {
Aringacute = -39;
V = -31;
quoteright = -30;
v = -23;
};
t = {
AE = 5;
M = -11;
V = -84;
W = -86;
apostrophemod = -31;
};
t_t = {
c.salt = -6;
q = -5;
};
tcaron = {
f_f = 16;
f_f_b = 13;
f_f_h = 20;
f_f_i = 16;
f_f_j = 17;
f_f_k = 17;
f_f_l = 16;
f_k = 7;
i = 8;
iacute = 8;
ij = 8;
j = 17;
m = 8;
n = 11;
ncaron = 11;
p = 20;
r = 13;
t = 19;
t_t = 19;
t_z = 16;
tcaron = 19;
u = 23;
uacute = 23;
uring = 23;
v = 8;
x = 12;
y = 13;
yacute = 13;
};
three = {
AE = -24;
Y = 17;
four = 8;
};
trademark = {
M = 15;
V = 51;
X = 38;
c.salt = -13;
icircumflex = 12;
idieresis = 13;
imacron = 17;
itilde = 23;
k = 59;
k.salt = 58;
kcommaaccent = 58;
lslash = 41;
p = 7;
q = -10;
};
two = {
A = 12;
AE = 14;
J = 17;
};
u = {
AE = 58;
V = -124;
W = -138;
lslash = 33;
};
Scedilla = {
k = 28;
k.salt = 26;
};
Tcedilla = {
abreve = -96;
acircumflex = -82;
icircumflex = -6;
k = 47;
k.salt = 46;
};
Scommaaccent = {
k = 28;
k.salt = 26;
};
Tcommaaccent = {
abreve = -96;
acircumflex = -82;
icircumflex = -6;
k = 47;
k.salt = 46;
};
uogonek = {
j = 122;
};
v = {
AE = -67;
J = -23;
M = -21;
S = -11;
V = -71;
W = -74;
X = -50;
Z = -37;
backslash = -34;
braceright = -33;
bracketright = -27;
f_f_b = 1;
f_f_i = 1;
m = 13;
p = 24;
parenright = -22;
slash = -26;
space = -21;
v = 7;
x = 18;
};
w = {
AE = -72;
J = -21;
M = -20;
S = -11;
V = -76;
W = -78;
X = -54;
Z = -38;
};
x = {
AE = 19;
M = -10;
V = -97;
W = -105;
backslash = -54;
c.salt = -5;
lslash = 6;
q = -6;
question = -15;
};
y = {
AE = -70;
J = -22;
M = -36;
S = -25;
V = -91;
W = -93;
X = -60;
Z = -52;
lslash = -7;
};
z = {
M = -16;
V = -98;
W = -109;
};
zero = {
AE = -20;
braceright = -15;
bracketright = -16;
};
};
m01 = {
"@MMK_L_AE" = {
"@MMK_R_b" = 22;
"@MMK_R_p" = -5;
"@MMK_R_u" = -5;
"@MMK_R_v" = -15;
"@MMK_R_w" = -17;
"@MMK_R_y" = -11;
};
"@MMK_L_Aacute" = {
"@MMK_R_C" = -24;
"@MMK_R_T" = -37;
"@MMK_R_U" = -38;
"@MMK_R_V" = -93;
"@MMK_R_W" = -100;
"@MMK_R_Y" = -85;
"@MMK_R_a" = -9;
"@MMK_R_a.salt" = -10;
"@MMK_R_asterisk" = -21;
"@MMK_R_backslash" = -53;
"@MMK_R_braceright" = 61;
"@MMK_R_bracketright" = 60;
"@MMK_R_c" = -27;
"@MMK_R_c.salt" = -28;
"@MMK_R_d" = -25;
"@MMK_R_g" = 17;
"@MMK_R_parenright" = 7;
"@MMK_R_q" = -14;
"@MMK_R_quotedbl" = -24;
"@MMK_R_quotedblleft" = -26;
"@MMK_R_quoteright" = -24;
"@MMK_R_space" = -28;
"@MMK_R_t" = -24;
"@MMK_R_trademark" = -20;
"@MMK_R_u" = -32;
"@MMK_R_v" = -50;
"@MMK_R_w" = -63;
"@MMK_R_y" = -21;
};
"@MMK_L_B" = {
"@MMK_R_AE" = -26;
"@MMK_R_Aacute" = -9;
"@MMK_R_B" = -14;
"@MMK_R_U" = -16;
"@MMK_R_W" = -15;
"@MMK_R_Y" = -17;
"@MMK_R_dotlessi" = -7;
"@MMK_R_dotlessj" = -8;
"@MMK_R_eng" = -7;
"@MMK_R_f" = -10;
"@MMK_R_f_f" = -11;
"@MMK_R_g" = -8;
"@MMK_R_l" = -6;
"@MMK_R_r" = -7;
"@MMK_R_u" = -6;
"@MMK_R_w" = -20;
"@MMK_R_y" = -17;
};
"@MMK_L_C" = {
"@MMK_R_AE" = -19;
"@MMK_R_b" = 51;
"@MMK_R_g" = -14;
"@MMK_R_y" = -12;
"@MMK_R_z" = -6;
};
"@MMK_L_D" = {
"@MMK_R_AE" = -54;
"@MMK_R_Aacute" = -32;
"@MMK_R_B" = -17;
"@MMK_R_J" = -8;
"@MMK_R_M" = -16;
"@MMK_R_U" = -19;
"@MMK_R_V" = -21;
"@MMK_R_W" = -21;
"@MMK_R_X" = -35;
"@MMK_R_Y" = -38;
"@MMK_R_Z" = -6;
"@MMK_R_a" = -9;
"@MMK_R_a.salt" = -5;
"@MMK_R_backslash" = -13;
"@MMK_R_braceright" = -23;
"@MMK_R_bracketright" = -24;
"@MMK_R_c" = -6;
"@MMK_R_c.salt" = -6;
"@MMK_R_comma" = -23;
"@MMK_R_d" = -6;
"@MMK_R_g" = -17;
"@MMK_R_germandbls" = -12;
"@MMK_R_l" = -12;
"@MMK_R_one" = -19;
"@MMK_R_parenright" = -16;
"@MMK_R_q" = -8;
"@MMK_R_s" = -8;
"@MMK_R_s.salt" = -5;
"@MMK_R_seven" = -20;
"@MMK_R_slash" = -22;
};
"@MMK_L_Eng" = {
"@MMK_R_AE" = -14;
"@MMK_R_C" = -11;
"@MMK_R_J" = -17;
"@MMK_R_S" = -11;
"@MMK_R_a" = -29;
"@MMK_R_a.salt" = -30;
"@MMK_R_ampersand" = -17;
"@MMK_R_b" = 91;
"@MMK_R_c" = -26;
"@MMK_R_c.salt" = -25;
"@MMK_R_comma" = -12;
"@MMK_R_d" = -23;
"@MMK_R_dotlessi" = -14;
"@MMK_R_dotlessj" = -13;
"@MMK_R_emdash" = -12;
"@MMK_R_eng" = -13;
"@MMK_R_f" = -16;
"@MMK_R_f_f" = -20;
"@MMK_R_g" = -34;
"@MMK_R_germandbls" = 42;
"@MMK_R_l" = 37;
"@MMK_R_m" = -14;
"@MMK_R_p" = -15;
"@MMK_R_q" = -24;
"@MMK_R_r" = -13;
"@MMK_R_registered" = -23;
"@MMK_R_s" = -24;
"@MMK_R_s.salt" = -19;
"@MMK_R_slash" = -17;
"@MMK_R_t" = -12;
"@MMK_R_u" = -13;
"@MMK_R_v" = -19;
"@MMK_R_w" = -22;
"@MMK_R_x" = -11;
"@MMK_R_y" = -20;
"@MMK_R_z" = -30;
};
"@MMK_L_F" = {
"@MMK_R_AE" = -70;
"@MMK_R_Aacute" = -67;
"@MMK_R_J" = -53;
"@MMK_R_W" = 33;
"@MMK_R_Y" = 25;
"@MMK_R_a" = -54;
"@MMK_R_b" = 93;
"@MMK_R_c" = -47;
"@MMK_R_comma" = -39;
"@MMK_R_d" = -46;
"@MMK_R_dotlessi" = -16;
"@MMK_R_emdash" = -11;
"@MMK_R_eng" = -27;
"@MMK_R_f" = -18;
"@MMK_R_f_f" = -15;
"@MMK_R_g" = -69;
"@MMK_R_germandbls" = 43;
"@MMK_R_l" = 41;
"@MMK_R_r" = -25;
"@MMK_R_s" = -50;
"@MMK_R_u" = -26;
"@MMK_R_w" = -29;
"@MMK_R_y" = -34;
"@MMK_R_z" = -37;
};
"@MMK_L_G" = {
"@MMK_R_b" = 40;
"@MMK_R_g" = -9;
"@MMK_R_y" = -14;
};
"@MMK_L_H" = {
"@MMK_R_C" = -15;
"@MMK_R_J" = -10;
"@MMK_R_a" = -15;
"@MMK_R_a.salt" = -16;
"@MMK_R_ampersand" = -15;
"@MMK_R_b" = 76;
"@MMK_R_braceright" = 10;
"@MMK_R_bracketright" = 9;
"@MMK_R_c" = -29;
"@MMK_R_c.salt" = -29;
"@MMK_R_d" = -26;
"@MMK_R_dotlessi" = -7;
"@MMK_R_dotlessj" = -13;
"@MMK_R_emdash" = -16;
"@MMK_R_eng" = -11;
"@MMK_R_g" = -5;
"@MMK_R_germandbls" = 27;
"@MMK_R_guillemotleft" = -11;
"@MMK_R_l" = 25;
"@MMK_R_m" = -6;
"@MMK_R_p" = -15;
"@MMK_R_q" = -26;
"@MMK_R_r" = -6;
"@MMK_R_registered" = -19;
"@MMK_R_s.salt" = -15;
"@MMK_R_t" = -15;
"@MMK_R_u" = -20;
"@MMK_R_v" = -27;
"@MMK_R_w" = -32;
"@MMK_R_y" = -24;
"@MMK_R_z" = -6;
};
"@MMK_L_I" = {
"@MMK_R_AE" = 32;
"@MMK_R_C" = -12;
"@MMK_R_b" = 71;
"@MMK_R_c" = -23;
"@MMK_R_c.salt" = -23;
"@MMK_R_d" = -21;
"@MMK_R_dotlessj" = -12;
"@MMK_R_emdash" = -13;
"@MMK_R_g" = -23;
"@MMK_R_germandbls" = 23;
"@MMK_R_l" = 20;
"@MMK_R_p" = -14;
"@MMK_R_q" = -21;
"@MMK_R_t" = -12;
"@MMK_R_u" = -12;
"@MMK_R_v" = -20;
"@MMK_R_w" = -22;
"@MMK_R_y" = -22;
};
"@MMK_L_IJ" = {
"@MMK_R_AE" = -38;
"@MMK_R_Aacute" = -23;
"@MMK_R_C" = -12;
"@MMK_R_J" = -21;
"@MMK_R_S" = -13;
"@MMK_R_a" = -33;
"@MMK_R_a.salt" = -31;
"@MMK_R_ampersand" = -17;
"@MMK_R_at" = -21;
"@MMK_R_b" = 91;
"@MMK_R_braceright" = 15;
"@MMK_R_bracketright" = 14;
"@MMK_R_c" = -29;
"@MMK_R_c.salt" = -28;
"@MMK_R_comma" = -21;
"@MMK_R_d" = -26;
"@MMK_R_dotlessi" = -12;
"@MMK_R_dotlessj" = -12;
"@MMK_R_emdash" = -10;
"@MMK_R_eng" = -12;
"@MMK_R_f" = -17;
"@MMK_R_g" = -33;
"@MMK_R_germandbls" = 41;
"@MMK_R_l" = 41;
"@MMK_R_m" = -13;
"@MMK_R_p" = -14;
"@MMK_R_q" = -27;
"@MMK_R_r" = -12;
"@MMK_R_registered" = -21;
"@MMK_R_s" = -27;
"@MMK_R_s.salt" = -22;
"@MMK_R_six" = -17;
"@MMK_R_slash" = -28;
"@MMK_R_t" = -12;
"@MMK_R_three" = -12;
"@MMK_R_u" = -12;
"@MMK_R_v" = -18;
"@MMK_R_w" = -21;
"@MMK_R_x" = -11;
"@MMK_R_y" = -21;
"@MMK_R_z" = -33;
};
"@MMK_L_K" = {
"@MMK_R_C" = -46;
"@MMK_R_a" = -12;
"@MMK_R_a.salt" = -13;
"@MMK_R_asterisk" = 15;
"@MMK_R_b" = 105;
"@MMK_R_backslash" = 22;
"@MMK_R_braceright" = 20;
"@MMK_R_bracketright" = 20;
"@MMK_R_c" = -54;
"@MMK_R_c.salt" = -56;
"@MMK_R_d" = -50;
"@MMK_R_dotlessj" = -30;
"@MMK_R_emdash" = -48;
"@MMK_R_eng" = -13;
"@MMK_R_g" = -6;
"@MMK_R_germandbls" = 52;
"@MMK_R_guillemotleft" = -49;
"@MMK_R_guillemotright" = -38;
"@MMK_R_l" = 43;
"@MMK_R_p" = -37;
"@MMK_R_parenright" = 6;
"@MMK_R_q" = -43;
"@MMK_R_quoteright" = 13;
"@MMK_R_slash" = 10;
"@MMK_R_t" = -54;
"@MMK_R_trademark" = 24;
"@MMK_R_u" = -81;
"@MMK_R_v" = -155;
"@MMK_R_w" = -172;
"@MMK_R_y" = -98;
};
"@MMK_L_K.salt" = {
"@MMK_R_AE" = 9;
"@MMK_R_C" = -25;
"@MMK_R_b" = 89;
"@MMK_R_c" = -24;
"@MMK_R_d" = -23;
"@MMK_R_dotlessj" = -40;
"@MMK_R_emdash" = -27;
"@MMK_R_g" = -20;
"@MMK_R_germandbls" = 44;
"@MMK_R_guillemotleft" = -27;
"@MMK_R_guillemotright" = -18;
"@MMK_R_l" = 32;
"@MMK_R_quoteright" = 5;
"@MMK_R_s" = -5;
"@MMK_R_t" = -28;
"@MMK_R_u" = -51;
"@MMK_R_w" = -83;
"@MMK_R_y" = -65;
};
"@MMK_L_L" = {
"@MMK_R_AE" = 6;
"@MMK_R_Aacute" = 16;
"@MMK_R_T" = -57;
"@MMK_R_U" = -25;
"@MMK_R_V" = -49;
"@MMK_R_W" = -51;
"@MMK_R_Y" = -58;
"@MMK_R_asterisk" = -40;
"@MMK_R_backslash" = -52;
"@MMK_R_dotlessj" = -13;
"@MMK_R_f_f" = -6;
"@MMK_R_p" = -16;
"@MMK_R_question" = -24;
"@MMK_R_quotedbl" = -35;
"@MMK_R_quotedblleft" = -33;
"@MMK_R_quoteright" = -34;
"@MMK_R_space" = -23;
"@MMK_R_trademark" = -34;
"@MMK_R_u" = -11;
"@MMK_R_v" = -39;
"@MMK_R_w" = -36;
"@MMK_R_y" = -38;
};
"@MMK_L_M" = {
"@MMK_R_C" = -19;
"@MMK_R_J" = -16;
"@MMK_R_a" = -24;
"@MMK_R_c" = -41;
"@MMK_R_d" = -39;
"@MMK_R_dotlessi" = -11;
"@MMK_R_dotlessj" = -25;
"@MMK_R_emdash" = -19;
"@MMK_R_eng" = -12;
"@MMK_R_f" = -7;
"@MMK_R_g" = -28;
"@MMK_R_guillemotleft" = -14;
"@MMK_R_r" = -11;
"@MMK_R_s" = -11;
"@MMK_R_t" = -34;
"@MMK_R_u" = -40;
"@MMK_R_w" = -52;
"@MMK_R_y" = -35;
"@MMK_R_z" = -12;
};
"@MMK_L_O" = {
"@MMK_R_AE" = -28;
"@MMK_R_Aacute" = -12;
"@MMK_R_B" = -11;
"@MMK_R_M" = -11;
"@MMK_R_U" = -14;
"@MMK_R_V" = -17;
"@MMK_R_W" = -15;
"@MMK_R_X" = -28;
"@MMK_R_Y" = -17;
"@MMK_R_a" = -6;
"@MMK_R_apostrophe" = -17;
"@MMK_R_braceright" = -19;
"@MMK_R_bracketright" = -21;
"@MMK_R_comma" = -16;
"@MMK_R_g" = -9;
"@MMK_R_germandbls" = -6;
"@MMK_R_l" = -6;
"@MMK_R_one" = -14;
"@MMK_R_parenright" = -12;
"@MMK_R_q" = -5;
"@MMK_R_s" = -6;
"@MMK_R_seven" = -14;
"@MMK_R_slash" = -15;
};
"@MMK_L_P" = {
"@MMK_R_AE" = -80;
"@MMK_R_Aacute" = -73;
"@MMK_R_B" = -5;
"@MMK_R_J" = -62;
"@MMK_R_a" = -51;
"@MMK_R_b" = 16;
"@MMK_R_c" = -58;
"@MMK_R_comma" = -51;
"@MMK_R_d" = -55;
"@MMK_R_emdash" = -37;
"@MMK_R_g" = -72;
"@MMK_R_s" = -49;
"@MMK_R_y" = -13;
"@MMK_R_z" = -41;
};
"@MMK_L_R" = {
"@MMK_R_C" = -6;
"@MMK_R_J" = -5;
"@MMK_R_U" = -19;
"@MMK_R_V" = -29;
"@MMK_R_W" = -31;
"@MMK_R_Y" = -38;
"@MMK_R_ampersand" = -12;
"@MMK_R_braceright" = 34;
"@MMK_R_bracketright" = 34;
"@MMK_R_c" = -35;
"@MMK_R_c.salt" = -38;
"@MMK_R_d" = -33;
"@MMK_R_dotlessj" = -5;
"@MMK_R_emdash" = -51;
"@MMK_R_p" = -12;
"@MMK_R_parenright" = 21;
"@MMK_R_q" = -25;
"@MMK_R_slash" = 24;
"@MMK_R_space" = -26;
"@MMK_R_t" = -14;
"@MMK_R_u" = -17;
"@MMK_R_v" = -37;
"@MMK_R_w" = -42;
"@MMK_R_y" = -29;
};
"@MMK_L_R.salt" = {
"@MMK_R_AE" = 33;
"@MMK_R_C" = -15;
"@MMK_R_U" = -25;
"@MMK_R_W" = -25;
"@MMK_R_Y" = -19;
"@MMK_R_c" = -24;
"@MMK_R_d" = -24;
"@MMK_R_dotlessj" = 81;
"@MMK_R_emdash" = -24;
"@MMK_R_guillemotleft" = -13;
"@MMK_R_t" = -12;
"@MMK_R_u" = -14;
"@MMK_R_w" = -28;
"@MMK_R_y" = -28;
};
"@MMK_L_S" = {
"@MMK_R_AE" = -10;
"@MMK_R_W" = 7;
"@MMK_R_b" = 65;
"@MMK_R_c" = -5;
"@MMK_R_c.salt" = -5;
"@MMK_R_g" = -25;
"@MMK_R_germandbls" = 16;
"@MMK_R_l" = 15;
"@MMK_R_m" = -6;
"@MMK_R_p" = -7;
"@MMK_R_s.salt" = -5;
"@MMK_R_v" = -7;
"@MMK_R_w" = -7;
"@MMK_R_y" = -20;
"@MMK_R_z" = -11;
};
"@MMK_L_T" = {
"@MMK_R_AE" = -74;
"@MMK_R_Aacute" = -42;
"@MMK_R_J" = -60;
"@MMK_R_V" = 25;
"@MMK_R_W" = 29;
"@MMK_R_Y" = 21;
"@MMK_R_a" = -111;
"@MMK_R_a.salt" = -87;
"@MMK_R_ampersand" = -19;
"@MMK_R_asterisk" = 8;
"@MMK_R_b" = 87;
"@MMK_R_braceright" = 7;
"@MMK_R_bracketright" = 10;
"@MMK_R_c" = -132;
"@MMK_R_c.salt" = -132;
"@MMK_R_colon" = -21;
"@MMK_R_comma" = -20;
"@MMK_R_d" = -101;
"@MMK_R_dotlessi" = -34;
"@MMK_R_dotlessj" = -33;
"@MMK_R_emdash" = -51;
"@MMK_R_eng" = -79;
"@MMK_R_f" = -31;
"@MMK_R_f_f" = -31;
"@MMK_R_g" = -139;
"@MMK_R_germandbls" = 38;
"@MMK_R_guillemotleft" = -19;
"@MMK_R_l" = 37;
"@MMK_R_m" = -79;
"@MMK_R_p" = -81;
"@MMK_R_q" = -128;
"@MMK_R_r" = -76;
"@MMK_R_registered" = -45;
"@MMK_R_s" = -102;
"@MMK_R_s.salt" = -106;
"@MMK_R_slash" = -29;
"@MMK_R_space" = -26;
"@MMK_R_t" = -26;
"@MMK_R_u" = -73;
"@MMK_R_v" = -84;
"@MMK_R_w" = -82;
"@MMK_R_x" = -87;
"@MMK_R_y" = -91;
"@MMK_R_z" = -92;
};
"@MMK_L_Thorn" = {
"@MMK_R_AE" = -80;
"@MMK_R_Aacute" = -46;
"@MMK_R_B" = -24;
"@MMK_R_J" = -30;
"@MMK_R_U" = -21;
"@MMK_R_W" = -33;
"@MMK_R_Y" = -63;
"@MMK_R_Z" = -10;
"@MMK_R_a" = -5;
"@MMK_R_c" = -5;
"@MMK_R_comma" = -35;
"@MMK_R_g" = -12;
"@MMK_R_germandbls" = -8;
"@MMK_R_l" = -8;
"@MMK_R_quotedbl" = -14;
"@MMK_R_quotedblleft" = -30;
"@MMK_R_quoteright" = -21;
};
"@MMK_L_U" = {
"@MMK_R_AE" = -55;
"@MMK_R_Aacute" = -34;
"@MMK_R_B" = -5;
"@MMK_R_C" = -10;
"@MMK_R_J" = -21;
"@MMK_R_S" = -7;
"@MMK_R_U" = -7;
"@MMK_R_a" = -34;
"@MMK_R_a.salt" = -32;
"@MMK_R_ampersand" = -15;
"@MMK_R_asterisk" = 30;
"@MMK_R_b" = -13;
"@MMK_R_c" = -29;
"@MMK_R_c.salt" = -29;
"@MMK_R_comma" = -23;
"@MMK_R_d" = -29;
"@MMK_R_dotlessi" = -13;
"@MMK_R_dotlessj" = -12;
"@MMK_R_eng" = -12;
"@MMK_R_f" = -18;
"@MMK_R_g" = -35;
"@MMK_R_germandbls" = -19;
"@MMK_R_l" = -18;
"@MMK_R_m" = -13;
"@MMK_R_p" = -14;
"@MMK_R_q" = -30;
"@MMK_R_r" = -13;
"@MMK_R_registered" = -20;
"@MMK_R_s" = -30;
"@MMK_R_s.salt" = -25;
"@MMK_R_slash" = -30;
"@MMK_R_t" = -12;
"@MMK_R_u" = -12;
"@MMK_R_v" = -18;
"@MMK_R_w" = -21;
"@MMK_R_x" = -12;
"@MMK_R_y" = -21;
"@MMK_R_z" = -34;
};
"@MMK_L_V" = {
"@MMK_R_AE" = -108;
"@MMK_R_Aacute" = -66;
"@MMK_R_C" = -7;
"@MMK_R_J" = -51;
"@MMK_R_T" = 34;
"@MMK_R_a" = -115;
"@MMK_R_c" = -115;
"@MMK_R_colon" = -20;
"@MMK_R_comma" = -45;
"@MMK_R_d" = -114;
"@MMK_R_dotlessi" = -67;
"@MMK_R_dotlessj" = -68;
"@MMK_R_emdash" = -27;
"@MMK_R_eng" = -66;
"@MMK_R_f" = -43;
"@MMK_R_f_f" = -58;
"@MMK_R_g" = -137;
"@MMK_R_germandbls" = -15;
"@MMK_R_guillemotleft" = -13;
"@MMK_R_l" = -14;
"@MMK_R_quotedbl" = 28;
"@MMK_R_quotedblleft" = 36;
"@MMK_R_quoteright" = 25;
"@MMK_R_r" = -65;
"@MMK_R_s" = -114;
"@MMK_R_t" = -59;
"@MMK_R_u" = -63;
"@MMK_R_w" = -75;
"@MMK_R_y" = -74;
"@MMK_R_z" = -100;
};
"@MMK_L_W" = {
"@MMK_R_AE" = -103;
"@MMK_R_Aacute" = -60;
"@MMK_R_C" = -9;
"@MMK_R_J" = -52;
"@MMK_R_T" = 27;
"@MMK_R_a" = -114;
"@MMK_R_a.salt" = -97;
"@MMK_R_asterisk" = 62;
"@MMK_R_backslash" = 28;
"@MMK_R_braceright" = 8;
"@MMK_R_bracketright" = 11;
"@MMK_R_c" = -115;
"@MMK_R_c.salt" = -115;
"@MMK_R_colon" = -20;
"@MMK_R_comma" = -45;
"@MMK_R_d" = -114;
"@MMK_R_dotlessi" = -68;
"@MMK_R_dotlessj" = -69;
"@MMK_R_emdash" = -28;
"@MMK_R_eng" = -68;
"@MMK_R_f" = -44;
"@MMK_R_f_f" = -56;
"@MMK_R_g" = -136;
"@MMK_R_germandbls" = -15;
"@MMK_R_guillemotleft" = -14;
"@MMK_R_l" = -15;
"@MMK_R_m" = -68;
"@MMK_R_p" = -72;
"@MMK_R_q" = -118;
"@MMK_R_question" = 6;
"@MMK_R_quotedbl" = 21;
"@MMK_R_quotedblleft" = 27;
"@MMK_R_quoteright" = 8;
"@MMK_R_r" = -67;
"@MMK_R_registered" = -50;
"@MMK_R_s" = -114;
"@MMK_R_s.salt" = -109;
"@MMK_R_slash" = -55;
"@MMK_R_space" = -26;
"@MMK_R_t" = -61;
"@MMK_R_trademark" = 50;
"@MMK_R_u" = -65;
"@MMK_R_v" = -74;
"@MMK_R_w" = -77;
"@MMK_R_x" = -77;
"@MMK_R_y" = -76;
"@MMK_R_z" = -100;
};
"@MMK_L_X" = {
"@MMK_R_C" = -31;
"@MMK_R_b" = 98;
"@MMK_R_c" = -28;
"@MMK_R_d" = -24;
"@MMK_R_emdash" = -28;
"@MMK_R_g" = 6;
"@MMK_R_germandbls" = 42;
"@MMK_R_guillemotleft" = -28;
"@MMK_R_guillemotright" = -15;
"@MMK_R_l" = 44;
"@MMK_R_t" = -33;
"@MMK_R_u" = -54;
"@MMK_R_w" = -114;
"@MMK_R_y" = -41;
};
"@MMK_L_Y" = {
"@MMK_R_AE" = -88;
"@MMK_R_Aacute" = -63;
"@MMK_R_C" = -12;
"@MMK_R_J" = -59;
"@MMK_R_T" = 34;
"@MMK_R_a" = -137;
"@MMK_R_a.salt" = -119;
"@MMK_R_asterisk" = 58;
"@MMK_R_b" = 7;
"@MMK_R_backslash" = 40;
"@MMK_R_braceright" = 24;
"@MMK_R_bracketright" = 24;
"@MMK_R_c" = -162;
"@MMK_R_c.salt" = -163;
"@MMK_R_colon" = -16;
"@MMK_R_comma" = -15;
"@MMK_R_d" = -88;
"@MMK_R_dotlessi" = -91;
"@MMK_R_dotlessj" = -88;
"@MMK_R_emdash" = -44;
"@MMK_R_eng" = -92;
"@MMK_R_f" = -50;
"@MMK_R_g" = -157;
"@MMK_R_guillemotleft" = -29;
"@MMK_R_guillemotright" = -18;
"@MMK_R_m" = -102;
"@MMK_R_p" = -102;
"@MMK_R_parenright" = 17;
"@MMK_R_q" = -158;
"@MMK_R_question" = 11;
"@MMK_R_quotedbl" = 28;
"@MMK_R_quotedblleft" = 36;
"@MMK_R_quoteright" = 10;
"@MMK_R_r" = -92;
"@MMK_R_registered" = -56;
"@MMK_R_s" = -118;
"@MMK_R_s.salt" = -131;
"@MMK_R_slash" = -27;
"@MMK_R_space" = -27;
"@MMK_R_t" = -88;
"@MMK_R_trademark" = 56;
"@MMK_R_u" = -97;
"@MMK_R_v" = -97;
"@MMK_R_w" = -103;
"@MMK_R_x" = -95;
"@MMK_R_y" = -100;
"@MMK_R_z" = -112;
};
"@MMK_L_Z" = {
"@MMK_R_b" = 54;
"@MMK_R_dotlessj" = -5;
"@MMK_R_f_f" = -5;
"@MMK_R_germandbls" = 11;
"@MMK_R_p" = -10;
"@MMK_R_u" = -6;
"@MMK_R_v" = -18;
"@MMK_R_w" = -21;
"@MMK_R_y" = -16;
};
"@MMK_L_a" = {
"@MMK_R_T" = -80;
"@MMK_R_U" = -11;
"@MMK_R_Y" = -104;
"@MMK_R_backslash" = -39;
"@MMK_R_parenright" = 16;
"@MMK_R_slash" = 23;
"@MMK_R_v" = -13;
"@MMK_R_w" = -17;
};
"@MMK_L_a.salt" = {
"@MMK_R_w" = -36;
"@MMK_R_y" = -6;
};
"@MMK_L_ae" = {
"@MMK_R_B" = -20;
"@MMK_R_M" = -22;
"@MMK_R_T" = -120;
"@MMK_R_U" = -34;
"@MMK_R_V" = -114;
"@MMK_R_W" = -122;
"@MMK_R_X" = -7;
"@MMK_R_Y" = -146;
"@MMK_R_Z" = -7;
"@MMK_R_backslash" = -57;
"@MMK_R_braceright" = -20;
"@MMK_R_bracketright" = -17;
"@MMK_R_question" = -17;
"@MMK_R_trademark" = -16;
"@MMK_R_w" = -10;
"@MMK_R_x" = -22;
};
"@MMK_L_ampersand" = {
"@MMK_R_AE" = 91;
"@MMK_R_Aacute" = 101;
"@MMK_R_B" = 21;
"@MMK_R_C" = -22;
"@MMK_R_J" = 12;
"@MMK_R_S" = 6;
"@MMK_R_T" = -35;
"@MMK_R_U" = -38;
"@MMK_R_W" = -56;
"@MMK_R_Y" = -36;
"@MMK_R_Z" = 32;
"@MMK_R_dotlessi" = 26;
"@MMK_R_eng" = 18;
"@MMK_R_germandbls" = 51;
"@MMK_R_l" = 50;
"@MMK_R_quotedbl" = -41;
"@MMK_R_r" = 21;
"@MMK_R_s" = 8;
"@MMK_R_w" = -27;
"@MMK_R_y" = -14;
"@MMK_R_z" = 24;
};
"@MMK_L_apostrophe" = {
"@MMK_R_c" = -22;
"@MMK_R_g" = -47;
};
"@MMK_L_asterisk" = {
"@MMK_R_AE" = -69;
"@MMK_R_Aacute" = -27;
"@MMK_R_J" = -32;
"@MMK_R_T" = 8;
"@MMK_R_W" = 18;
"@MMK_R_Y" = 9;
"@MMK_R_b" = 48;
"@MMK_R_c" = -10;
"@MMK_R_d" = -24;
"@MMK_R_g" = -29;
};
"@MMK_L_at" = {
"@MMK_R_B" = -16;
"@MMK_R_quotedbl" = -12;
};
"@MMK_L_b" = {
"@MMK_R_AE" = -7;
"@MMK_R_B" = -21;
"@MMK_R_M" = -23;
"@MMK_R_T" = -131;
"@MMK_R_U" = -31;
"@MMK_R_V" = -121;
"@MMK_R_W" = -130;
"@MMK_R_X" = -11;
"@MMK_R_Y" = -155;
"@MMK_R_Z" = -14;
"@MMK_R_asterisk" = -46;
"@MMK_R_backslash" = -60;
"@MMK_R_braceright" = -25;
"@MMK_R_bracketright" = -23;
"@MMK_R_f_f" = -6;
"@MMK_R_question" = -23;
"@MMK_R_quotedbl" = -48;
"@MMK_R_quotedblleft" = -48;
"@MMK_R_quoteright" = -48;
"@MMK_R_trademark" = -30;
"@MMK_R_v" = -13;
"@MMK_R_w" = -20;
"@MMK_R_x" = -33;
};
"@MMK_L_backslash" = {
"@MMK_R_AE" = 49;
"@MMK_R_Aacute" = 58;
"@MMK_R_C" = -15;
"@MMK_R_T" = -34;
"@MMK_R_U" = -32;
"@MMK_R_W" = -62;
"@MMK_R_Y" = -36;
"@MMK_R_germandbls" = 14;
"@MMK_R_l" = 12;
"@MMK_R_quotedbl" = -54;
"@MMK_R_w" = -29;
"@MMK_R_y" = -14;
};
"@MMK_L_bar" = {
"@MMK_R_b" = 17;
"@MMK_R_dotlessj" = 61;
};
"@MMK_L_braceleft" = {
"@MMK_R_AE" = 19;
"@MMK_R_Aacute" = 27;
"@MMK_R_B" = 12;
"@MMK_R_C" = -20;
"@MMK_R_J" = -12;
"@MMK_R_T" = 8;
"@MMK_R_U" = 15;
"@MMK_R_W" = 47;
"@MMK_R_Y" = 36;
"@MMK_R_a" = -12;
"@MMK_R_b" = 76;
"@MMK_R_c" = -22;
"@MMK_R_d" = -21;
"@MMK_R_germandbls" = 30;
"@MMK_R_l" = 30;
"@MMK_R_u" = -14;
"@MMK_R_w" = -25;
};
"@MMK_L_bracketleft" = {
"@MMK_R_AE" = 19;
"@MMK_R_Aacute" = 27;
"@MMK_R_B" = 11;
"@MMK_R_C" = -21;
"@MMK_R_J" = -13;
"@MMK_R_T" = 10;
"@MMK_R_U" = 13;
"@MMK_R_W" = 47;
"@MMK_R_Y" = 36;
"@MMK_R_a" = -12;
"@MMK_R_b" = 76;
"@MMK_R_c" = -23;
"@MMK_R_d" = -21;
"@MMK_R_germandbls" = 30;
"@MMK_R_l" = 30;
"@MMK_R_u" = -14;
"@MMK_R_w" = -24;
};
"@MMK_L_c" = {
"@MMK_R_B" = -13;
"@MMK_R_T" = -82;
"@MMK_R_U" = -30;
"@MMK_R_Y" = -118;
"@MMK_R_backslash" = -34;
"@MMK_R_braceright" = -14;
};
"@MMK_L_c_h" = {
"@MMK_R_B" = -11;
"@MMK_R_C" = -8;
"@MMK_R_T" = -133;
"@MMK_R_U" = -51;
"@MMK_R_Y" = -157;
"@MMK_R_asterisk" = -39;
"@MMK_R_backslash" = -62;
"@MMK_R_braceright" = 35;
"@MMK_R_bracketright" = 31;
"@MMK_R_question" = -17;
"@MMK_R_quotedbl" = -40;
"@MMK_R_quotedblleft" = -41;
"@MMK_R_quoteright" = -41;
"@MMK_R_t" = -6;
"@MMK_R_trademark" = -32;
"@MMK_R_u" = -19;
"@MMK_R_v" = -40;
"@MMK_R_w" = -42;
};
"@MMK_L_c_k" = {
"@MMK_R_a" = -20;
"@MMK_R_a.salt" = -11;
"@MMK_R_ampersand" = -19;
"@MMK_R_asterisk" = -43;
"@MMK_R_b" = -5;
"@MMK_R_backslash" = -55;
"@MMK_R_braceright" = 20;
"@MMK_R_bracketright" = 18;
"@MMK_R_c" = -39;
"@MMK_R_c.salt" = -37;
"@MMK_R_d" = -29;
"@MMK_R_emdash" = -60;
"@MMK_R_guillemotright" = -13;
"@MMK_R_q" = -41;
"@MMK_R_question" = -18;
"@MMK_R_quotedbl" = -46;
"@MMK_R_quotedblleft" = -47;
"@MMK_R_quoteright" = -47;
"@MMK_R_registered" = -12;
"@MMK_R_s.salt" = -6;
"@MMK_R_trademark" = -25;
"@MMK_R_w" = -6;
};
"@MMK_L_c_p" = {
"@MMK_R_AE" = -11;
"@MMK_R_B" = -23;
"@MMK_R_M" = -24;
"@MMK_R_T" = -132;
"@MMK_R_U" = -33;
"@MMK_R_V" = -120;
"@MMK_R_W" = -128;
"@MMK_R_X" = -14;
"@MMK_R_Y" = -157;
"@MMK_R_Z" = -17;
"@MMK_R_apostrophe" = -19;
"@MMK_R_backslash" = -59;
"@MMK_R_braceright" = -25;
"@MMK_R_bracketright" = -23;
"@MMK_R_question" = -21;
"@MMK_R_trademark" = -18;
"@MMK_R_v" = -10;
"@MMK_R_w" = -17;
"@MMK_R_x" = -36;
};
"@MMK_L_c_t" = {
"@MMK_R_Aacute" = 7;
"@MMK_R_B" = -6;
"@MMK_R_T" = -94;
"@MMK_R_U" = -25;
"@MMK_R_Y" = -115;
"@MMK_R_asterisk" = -22;
"@MMK_R_backslash" = -40;
"@MMK_R_braceright" = -17;
"@MMK_R_quotedbl" = -19;
"@MMK_R_quotedblleft" = -15;
"@MMK_R_quoteright" = -17;
"@MMK_R_trademark" = -12;
};
"@MMK_L_colon" = {
"@MMK_R_AE" = 9;
"@MMK_R_Aacute" = 18;
"@MMK_R_T" = -25;
"@MMK_R_V" = -22;
"@MMK_R_W" = -24;
"@MMK_R_Y" = -21;
"@MMK_R_v" = -11;
"@MMK_R_w" = -12;
};
"@MMK_L_comma" = {
"@MMK_R_AE" = 15;
"@MMK_R_Aacute" = 24;
"@MMK_R_C" = -15;
"@MMK_R_T" = -24;
"@MMK_R_U" = -23;
"@MMK_R_V" = -45;
"@MMK_R_W" = -48;
"@MMK_R_Y" = -21;
"@MMK_R_dotlessj" = -10;
"@MMK_R_nine" = -18;
"@MMK_R_p" = -16;
"@MMK_R_quotedbl" = -81;
"@MMK_R_quotedblleft" = -76;
"@MMK_R_quoteright" = -78;
"@MMK_R_u" = -13;
"@MMK_R_v" = -50;
"@MMK_R_w" = -52;
"@MMK_R_y" = -26;
};
"@MMK_L_d" = {
"@MMK_R_T" = -17;
"@MMK_R_U" = -28;
"@MMK_R_Y" = -19;
"@MMK_R_braceright" = 29;
"@MMK_R_bracketright" = 29;
"@MMK_R_parenright" = 31;
"@MMK_R_slash" = 36;
};
"@MMK_L_dotlessi" = {
"@MMK_R_C" = -6;
"@MMK_R_T" = -27;
"@MMK_R_U" = -41;
"@MMK_R_Y" = -103;
"@MMK_R_backslash" = -28;
"@MMK_R_parenright" = 11;
"@MMK_R_slash" = 13;
"@MMK_R_v" = -7;
"@MMK_R_w" = -13;
};
"@MMK_L_dotlessj" = {
"@MMK_R_B" = -14;
"@MMK_R_M" = -16;
"@MMK_R_T" = -25;
"@MMK_R_U" = -23;
"@MMK_R_V" = -73;
"@MMK_R_W" = -76;
"@MMK_R_Y" = -100;
"@MMK_R_Z" = -5;
"@MMK_R_backslash" = -19;
"@MMK_R_dotlessj" = 62;
};
"@MMK_L_emdash" = {
"@MMK_R_AE" = -29;
"@MMK_R_Aacute" = -18;
"@MMK_R_B" = -13;
"@MMK_R_M" = -14;
"@MMK_R_T" = -50;
"@MMK_R_U" = -12;
"@MMK_R_V" = -31;
"@MMK_R_W" = -33;
"@MMK_R_X" = -25;
"@MMK_R_Y" = -45;
"@MMK_R_Z" = -14;
"@MMK_R_dotlessi" = -10;
"@MMK_R_dotlessj" = -10;
"@MMK_R_eng" = -13;
"@MMK_R_p" = -16;
"@MMK_R_r" = -11;
"@MMK_R_v" = -21;
"@MMK_R_w" = -21;
"@MMK_R_x" = -27;
"@MMK_R_y" = -22;
};
"@MMK_L_eth" = {
"@MMK_R_B" = -18;
"@MMK_R_T" = -26;
};
"@MMK_L_exclamdown" = {
"@MMK_R_U" = -19;
"@MMK_R_W" = -28;
"@MMK_R_Y" = -32;
"@MMK_R_dotlessj" = 58;
};
"@MMK_L_f" = {
"@MMK_R_B" = 91;
"@MMK_R_C" = 45;
"@MMK_R_T" = 150;
"@MMK_R_U" = 89;
"@MMK_R_Y" = 162;
"@MMK_R_c" = -7;
"@MMK_R_c.salt" = -6;
"@MMK_R_emdash" = -17;
"@MMK_R_quotedbl" = 119;
"@MMK_R_quotedblleft" = 124;
"@MMK_R_quoteright" = 121;
};
"@MMK_L_f_f_i" = {
"@MMK_R_w" = -6;
};
"@MMK_L_g" = {
"@MMK_R_C" = -9;
"@MMK_R_T" = -46;
"@MMK_R_U" = -23;
"@MMK_R_Y" = -85;
"@MMK_R_a" = -8;
"@MMK_R_a.salt" = -8;
"@MMK_R_backslash" = -16;
"@MMK_R_braceright" = 73;
"@MMK_R_bracketright" = 69;
"@MMK_R_parenright" = 31;
"@MMK_R_slash" = 33;
"@MMK_R_v" = -6;
};
"@MMK_L_germandbls" = {
"@MMK_R_B" = -7;
"@MMK_R_C" = -13;
"@MMK_R_T" = -73;
"@MMK_R_dotlessj" = -18;
"@MMK_R_f_f" = -10;
"@MMK_R_guillemotleft" = -21;
"@MMK_R_u" = -12;
"@MMK_R_w" = -64;
"@MMK_R_y" = -58;
};
"@MMK_L_guillemotleft" = {
"@MMK_R_AE" = -31;
"@MMK_R_Aacute" = -11;
"@MMK_R_X" = -14;
"@MMK_R_Y" = -21;
};
"@MMK_L_guillemotright" = {
"@MMK_R_AE" = -40;
"@MMK_R_Aacute" = -18;
"@MMK_R_M" = -10;
"@MMK_R_T" = -18;
"@MMK_R_V" = -15;
"@MMK_R_W" = -16;
"@MMK_R_X" = -27;
"@MMK_R_Y" = -32;
};
"@MMK_L_k" = {
"@MMK_R_T" = -79;
"@MMK_R_U" = -25;
"@MMK_R_Y" = -102;
"@MMK_R_c" = -21;
"@MMK_R_d" = -19;
"@MMK_R_emdash" = -19;
"@MMK_R_quotedbl" = -28;
"@MMK_R_quotedblleft" = -28;
"@MMK_R_quoteright" = -28;
};
"@MMK_L_l" = {
"@MMK_R_T" = -9;
"@MMK_R_U" = -15;
"@MMK_R_Y" = -5;
"@MMK_R_parenright" = 8;
"@MMK_R_slash" = 11;
};
"@MMK_L_m" = {
"@MMK_R_C" = -6;
"@MMK_R_T" = -107;
"@MMK_R_U" = -43;
"@MMK_R_Y" = -131;
"@MMK_R_u" = -8;
"@MMK_R_w" = -41;
"@MMK_R_y" = -5;
};
"@MMK_L_n" = {
"@MMK_R_C" = -7;
"@MMK_R_T" = -110;
"@MMK_R_U" = -45;
"@MMK_R_Y" = -134;
"@MMK_R_backslash" = -60;
"@MMK_R_braceright" = 21;
"@MMK_R_bracketright" = 21;
"@MMK_R_parenright" = 16;
"@MMK_R_question" = -15;
"@MMK_R_slash" = 21;
"@MMK_R_trademark" = -10;
"@MMK_R_u" = -9;
"@MMK_R_v" = -32;
"@MMK_R_w" = -41;
"@MMK_R_y" = -5;
};
"@MMK_L_nine" = {
"@MMK_R_B" = -13;
"@MMK_R_comma" = -36;
};
"@MMK_L_parenleft" = {
"@MMK_R_AE" = 22;
"@MMK_R_Aacute" = 32;
"@MMK_R_C" = -14;
"@MMK_R_W" = 47;
"@MMK_R_Y" = 35;
"@MMK_R_b" = 79;
"@MMK_R_c" = -16;
"@MMK_R_d" = -16;
"@MMK_R_g" = -14;
"@MMK_R_germandbls" = 28;
"@MMK_R_l" = 31;
"@MMK_R_w" = -17;
"@MMK_R_y" = -15;
};
"@MMK_L_q" = {
"@MMK_R_B" = -11;
"@MMK_R_T" = -90;
"@MMK_R_U" = -14;
"@MMK_R_Y" = -121;
};
"@MMK_L_questiondown" = {
"@MMK_R_AE" = 41;
"@MMK_R_Aacute" = 51;
"@MMK_R_C" = -12;
"@MMK_R_T" = -18;
"@MMK_R_U" = -28;
"@MMK_R_W" = -50;
"@MMK_R_Y" = -37;
"@MMK_R_dotlessj" = 82;
"@MMK_R_w" = -16;
};
"@MMK_L_quotedbl" = {
"@MMK_R_AE" = -67;
"@MMK_R_Aacute" = -30;
"@MMK_R_J" = -25;
"@MMK_R_V" = 21;
"@MMK_R_W" = 26;
"@MMK_R_Y" = 17;
"@MMK_R_at" = -15;
"@MMK_R_b" = 62;
"@MMK_R_comma" = -81;
"@MMK_R_d" = -20;
"@MMK_R_four" = -37;
"@MMK_R_g" = -27;
"@MMK_R_germandbls" = 12;
"@MMK_R_l" = 11;
"@MMK_R_registered" = -15;
"@MMK_R_six" = -14;
"@MMK_R_slash" = -54;
"@MMK_R_space" = -30;
};
"@MMK_L_quotedblleft" = {
"@MMK_R_AE" = -67;
"@MMK_R_Aacute" = -31;
"@MMK_R_J" = -24;
"@MMK_R_V" = 7;
"@MMK_R_W" = 12;
"@MMK_R_X" = 9;
"@MMK_R_b" = 45;
"@MMK_R_comma" = -75;
"@MMK_R_d" = -19;
"@MMK_R_g" = -23;
};
"@MMK_L_quoteright" = {
"@MMK_R_AE" = -67;
"@MMK_R_Aacute" = -32;
"@MMK_R_J" = -23;
"@MMK_R_V" = 32;
"@MMK_R_W" = 38;
"@MMK_R_Y" = 28;
"@MMK_R_b" = 72;
"@MMK_R_comma" = -81;
"@MMK_R_d" = -19;
"@MMK_R_g" = -29;
"@MMK_R_germandbls" = 22;
"@MMK_R_l" = 22;
};
"@MMK_L_r" = {
"@MMK_R_B" = -23;
"@MMK_R_T" = -121;
"@MMK_R_U" = -32;
"@MMK_R_Y" = -143;
"@MMK_R_backslash" = -47;
"@MMK_R_braceright" = -23;
"@MMK_R_bracketright" = -21;
"@MMK_R_comma" = -10;
};
"@MMK_L_registered" = {
"@MMK_R_B" = -16;
"@MMK_R_T" = -44;
"@MMK_R_U" = -24;
"@MMK_R_W" = -53;
"@MMK_R_Y" = -60;
"@MMK_R_quotedbl" = -12;
};
"@MMK_L_s" = {
"@MMK_R_B" = -13;
"@MMK_R_T" = -80;
"@MMK_R_U" = -35;
"@MMK_R_Y" = -127;
"@MMK_R_backslash" = -44;
"@MMK_R_braceright" = -15;
"@MMK_R_bracketright" = -12;
};
"@MMK_L_seven" = {
"@MMK_R_B" = 26;
"@MMK_R_C" = -14;
"@MMK_R_comma" = -67;
};
"@MMK_L_slash" = {
"@MMK_R_AE" = -85;
"@MMK_R_Aacute" = -58;
"@MMK_R_C" = -15;
"@MMK_R_J" = -48;
"@MMK_R_W" = 53;
"@MMK_R_Y" = 42;
"@MMK_R_a" = -59;
"@MMK_R_b" = 86;
"@MMK_R_c" = -60;
"@MMK_R_d" = -49;
"@MMK_R_dotlessi" = -21;
"@MMK_R_dotlessj" = -15;
"@MMK_R_eng" = -26;
"@MMK_R_g" = -61;
"@MMK_R_germandbls" = 36;
"@MMK_R_l" = 36;
"@MMK_R_r" = -26;
"@MMK_R_s" = -59;
"@MMK_R_t" = -15;
"@MMK_R_u" = -18;
"@MMK_R_w" = -24;
"@MMK_R_y" = -28;
"@MMK_R_z" = -52;
};
"@MMK_L_space" = {
"@MMK_R_AE" = -40;
"@MMK_R_Aacute" = -34;
"@MMK_R_J" = -30;
"@MMK_R_T" = -26;
"@MMK_R_W" = -32;
"@MMK_R_Y" = -30;
"@MMK_R_quotedbl" = -30;
"@MMK_R_w" = -23;
"@MMK_R_y" = -19;
};
"@MMK_L_t_t" = {
"@MMK_R_c" = -8;
};
"@MMK_L_t_z" = {
"@MMK_R_Aacute" = 9;
"@MMK_R_B" = -8;
"@MMK_R_T" = -102;
"@MMK_R_U" = -36;
"@MMK_R_Y" = -128;
"@MMK_R_backslash" = -51;
"@MMK_R_braceright" = -19;
"@MMK_R_question" = -13;
};
"@MMK_L_three" = {
"@MMK_R_comma" = -12;
};
"@MMK_L_trademark" = {
"@MMK_R_AE" = -61;
"@MMK_R_Aacute" = -21;
"@MMK_R_B" = 11;
"@MMK_R_J" = -30;
"@MMK_R_T" = 13;
"@MMK_R_U" = 20;
"@MMK_R_W" = 73;
"@MMK_R_Y" = 60;
"@MMK_R_b" = 92;
"@MMK_R_c" = -12;
"@MMK_R_d" = -14;
"@MMK_R_g" = -15;
"@MMK_R_germandbls" = 54;
"@MMK_R_l" = 54;
"@MMK_R_r" = 6;
"@MMK_R_t" = 10;
"@MMK_R_u" = 22;
"@MMK_R_w" = 15;
"@MMK_R_y" = 5;
};
"@MMK_L_u" = {
"@MMK_R_C" = -10;
"@MMK_R_T" = -108;
"@MMK_R_U" = -49;
"@MMK_R_Y" = -131;
"@MMK_R_backslash" = -58;
"@MMK_R_bracketright" = 8;
"@MMK_R_parenright" = 15;
"@MMK_R_question" = -15;
"@MMK_R_slash" = 19;
"@MMK_R_v" = -9;
"@MMK_R_w" = -24;
};
"@MMK_L_v" = {
"@MMK_R_Aacute" = -50;
"@MMK_R_B" = -22;
"@MMK_R_T" = -89;
"@MMK_R_U" = -20;
"@MMK_R_Y" = -131;
"@MMK_R_comma" = -49;
"@MMK_R_emdash" = -14;
"@MMK_R_g" = -8;
"@MMK_R_germandbls" = -6;
"@MMK_R_l" = -6;
};
"@MMK_L_w" = {
"@MMK_R_Aacute" = -55;
"@MMK_R_B" = -22;
"@MMK_R_T" = -88;
"@MMK_R_U" = -20;
"@MMK_R_Y" = -136;
"@MMK_R_backslash" = -35;
"@MMK_R_braceright" = -33;
"@MMK_R_bracketright" = -26;
"@MMK_R_comma" = -48;
"@MMK_R_emdash" = -10;
"@MMK_R_germandbls" = -6;
"@MMK_R_parenright" = -18;
"@MMK_R_slash" = -23;
"@MMK_R_space" = -20;
};
"@MMK_L_x" = {
"@MMK_R_T" = -94;
"@MMK_R_U" = -34;
"@MMK_R_Y" = -116;
"@MMK_R_c" = -43;
"@MMK_R_d" = -36;
"@MMK_R_emdash" = -26;
"@MMK_R_g" = -14;
"@MMK_R_u" = -5;
"@MMK_R_w" = -24;
};
"@MMK_L_y" = {
"@MMK_R_Aacute" = -46;
"@MMK_R_B" = -25;
"@MMK_R_T" = -91;
"@MMK_R_U" = -22;
"@MMK_R_Y" = -134;
"@MMK_R_backslash" = -37;
"@MMK_R_braceright" = -32;
"@MMK_R_bracketright" = -25;
"@MMK_R_comma" = -50;
"@MMK_R_emdash" = -16;
"@MMK_R_g" = -5;
"@MMK_R_germandbls" = -8;
"@MMK_R_l" = -7;
"@MMK_R_parenright" = -18;
"@MMK_R_q" = -6;
"@MMK_R_slash" = -23;
"@MMK_R_space" = -18;
};
"@MMK_L_zero" = {
"@MMK_R_B" = -12;
"@MMK_R_comma" = -12;
};
A = {
apostrophemod = -55;
four = -13;
schwa = -13;
seven = 19;
zero = -14;
};
Aogonek = {
j = 122;
};
Aringacute = {
space = -39;
};
B = {
M = -12;
V = -17;
X = -44;
apostrophemod = -13;
braceright = -17;
bracketright = -18;
m = -7;
p = -13;
v = -18;
x = -17;
};
C = {
four = 6;
itilde = 9;
k = 14;
k.salt = 14;
kcommaaccent = 14;
};
Cacute = {
k = 14;
k.salt = 14;
};
Ccaron = {
k = 14;
k.salt = 14;
};
Ccedilla = {
k = 14;
k.salt = 14;
};
Ccircumflex = {
k = 14;
k.salt = 14;
};
Cdotaccent = {
k = 14;
k.salt = 14;
};
D = {
apostrophemod = -19;
itilde = 15;
};
Eng = {
germandbls = -21;
k = 54;
k.salt = 54;
};
F = {
V = 28;
a.salt = -36;
ampersand = -13;
asterisk = 15;
at = -23;
braceright = 9;
bracketright = 9;
c.salt = -47;
idotless = -31;
four = -12;
germandbls = -25;
idieresis = 2;
iogonek = -31;
k = 55;
k.salt = 55;
kcommaaccent = 55;
lslash = 19;
m = -33;
p = -22;
q = -51;
registered = -21;
s.salt = -41;
schwa = -41;
slash = -43;
space = -25;
v = -25;
x = -30;
};
H = {
at = -18;
four = -19;
germandbls = 1;
k = 39;
k.salt = 39;
kcommaaccent = 39;
lslash = 3;
schwa = -22;
seven = 10;
six = -18;
zero = -14;
};
Hbar = {
germandbls = 1;
k = 39;
k.salt = 39;
};
Hcircumflex = {
germandbls = 1;
k = 39;
k.salt = 39;
};
I = {
f_f_h = -10;
four = -16;
germandbls = 1;
hcircumflex = 15;
k.salt = 30;
kcommaaccent = 30;
lslash = 1;
schwa = -11;
seven = 5;
};
IJ = {
germandbls = -28;
};
Iacute = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Ibreve = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Icircumflex = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Idieresis = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Idotaccent = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Igrave = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Imacron = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
Iogonek = {
f_f_h = -10;
germandbls = 1;
j = 61;
k.salt = 30;
};
Itilde = {
f_f_h = -10;
germandbls = 1;
k.salt = 30;
};
J = {
f_f_h = -16;
germandbls = -28;
hcircumflex = 19;
lslash = 20;
schwa = -23;
};
Jcircumflex = {
f_f_h = -16;
germandbls = -28;
};
K = {
four = -39;
germandbls = 1;
hcircumflex = 66;
k = 75;
k.salt = 68;
kcommaaccent = 68;
lslash = 30;
one = 30;
schwa = -52;
seven = 23;
six = -14;
thorn = 77;
two = 18;
};
K.salt = {
a.salt = -5;
asterisk = 6;
backslash = 9;
braceright = 5;
bracketright = 7;
c.salt = -24;
four = -27;
germandbls = 1;
hcircumflex = 50;
k = 59;
k.salt = 59;
kcommaaccent = 59;
lslash = 19;
one = 18;
p = -50;
q = -23;
registered = -15;
s.salt = -7;
schwa = -20;
seven = 11;
six = -13;
trademark = 8;
v = -72;
};
Kcommaaccent = {
germandbls = 1;
k = 75;
k.salt = 68;
thorn = 77;
};
L = {
apostrophemod = -61;
four = 18;
nine = -32;
};
M = {
a.salt = -24;
ampersand = -15;
asterisk = 31;
at = -22;
backslash = 11;
braceright = 6;
bracketright = 7;
c.salt = -41;
four = -25;
hcircumflex = 58;
m = -11;
one = 17;
p = -31;
q = -39;
registered = -25;
s.salt = -22;
schwa = -29;
seven = 16;
six = -21;
trademark = 16;
v = -48;
x = -11;
};
N = {
at = -23;
four = -15;
germandbls = -21;
k = 54;
k.salt = 54;
kcommaaccent = 54;
lslash = 20;
one = 9;
schwa = -28;
six = -19;
zero = -12;
};
Nacute = {
germandbls = -21;
k = 54;
k.salt = 54;
};
Ncaron = {
germandbls = -21;
k = 54;
k.salt = 54;
};
Ncommaaccent = {
germandbls = -21;
k = 54;
k.salt = 54;
};
Ndotaccent = {
germandbls = -21;
k = 54;
k.salt = 54;
};
Ntilde = {
germandbls = -21;
k = 54;
k.salt = 54;
};
O = {
itilde = 11;
};
P = {
X = -48;
a.salt = -24;
ampersand = -18;
asterisk = 11;
at = -26;
c.salt = -57;
idotless = -9;
four = -21;
germandbls = -15;
hbar = 22;
hcircumflex = 9;
icircumflex = 13;
iogonek = -9;
itilde = 46;
k = 6;
k.salt = 7;
kcommaaccent = 7;
m = -41;
nine = 7;
q = -67;
registered = -22;
s.salt = -43;
schwa = -44;
slash = -51;
space = -25;
x = -8;
};
Q = {
itilde = 11;
};
R = {
apostrophemod = -12;
four = -29;
one = 19;
schwa = -29;
seven = 37;
two = 25;
};
R.salt = {
V = -26;
apostrophemod = -19;
backslash = -17;
c.salt = -24;
four = -23;
p = -15;
q = -23;
registered = -12;
schwa = -13;
seven = 10;
v = -29;
};
S = {
germandbls = 1;
itilde = 22;
k = 27;
k.salt = 27;
kcommaaccent = 27;
lslash = 1;
};
Sacute = {
germandbls = 1;
k = 27;
k.salt = 27;
lslash = 1;
};
Scaron = {
germandbls = 1;
k = 27;
k.salt = 27;
kcommaaccent = 27;
};
Scircumflex = {
germandbls = 1;
k = 27;
k.salt = 27;
};
T = {
abreve = -101;
acircumflex = -86;
adieresis = -69;
at = -47;
atilde = -88;
ccaron = -114;
ccircumflex = -122;
idotless = -77;
ecaron = -113;
ecircumflex = -117;
edieresis = -99;
etilde = -80;
four = -44;
gbreve = -113;
gcircumflex = -113;
gdotaccent = -133;
germandbls = -27;
icircumflex = -9;
idieresis = -4;
iogonek = -77;
itilde = 7;
jcircumflex = -19;
k = 49;
k.salt = 49;
kcommaaccent = 49;
lslash = 15;
ocircumflex = -126;
odieresis = -116;
otilde = -111;
rcaron = -47;
scaron = -68;
schwa = -115;
scircumflex = -87;
six = -20;
utilde = -59;
zcaron = -78;
};
Tbar = {
germandbls = -27;
k = 49;
k.salt = 49;
};
Tcaron = {
germandbls = -27;
k = 49;
k.salt = 49;
};
Thorn = {
M = -25;
V = -31;
X = -77;
backslash = -19;
braceright = -25;
bracketright = -25;
c.salt = -5;
one = -21;
parenright = -19;
q = -7;
seven = -29;
slash = -28;
u = 7;
};
U = {
at = -21;
f_f_h = -17;
germandbls = -31;
schwa = -23;
six = -15;
};
Uacute = {
f_f_h = -17;
germandbls = -31;
};
Ubreve = {
f_f_h = -17;
germandbls = -31;
};
Ucircumflex = {
f_f_h = -17;
germandbls = -31;
};
Udieresis = {
f_f_h = -17;
germandbls = -31;
};
Ugrave = {
f_f_h = -17;
germandbls = -31;
};
Uhungarumlaut = {
f_f_h = -17;
germandbls = -31;
};
Umacron = {
f_f_h = -17;
germandbls = -31;
};
Uogonek = {
f_f_h = -17;
germandbls = -31;
};
Uring = {
f_f_h = -17;
germandbls = -31;
};
Utilde = {
f_f_h = -17;
germandbls = -31;
};
V = {
a.salt = -96;
asterisk = 63;
at = -51;
backslash = 36;
braceright = 17;
bracketright = 19;
c.salt = -115;
eth = -108;
four = -35;
germandbls = -29;
hcircumflex = -3;
m = -67;
nine = 19;
one = 31;
p = -71;
parenright = 12;
q = -119;
question = 18;
registered = -49;
s.salt = -109;
schwa = -96;
seven = 29;
six = -23;
slash = -56;
space = -26;
trademark = 55;
two = 6;
v = -72;
x = -76;
};
W = {
at = -51;
four = -36;
germandbls = -29;
nine = 22;
one = 23;
schwa = -96;
seven = 21;
six = -24;
two = 5;
};
Wacute = {
germandbls = -29;
};
Wcircumflex = {
germandbls = -29;
};
Wdieresis = {
germandbls = -29;
};
Wgrave = {
germandbls = -29;
};
X = {
backslash = 7;
braceright = 40;
bracketright = 40;
c.salt = -32;
four = -26;
germandbls = 1;
hcircumflex = 1;
lslash = 27;
one = 31;
p = -8;
parenright = 35;
q = -17;
schwa = -25;
seven = 49;
slash = 36;
three = 16;
trademark = 9;
two = 34;
v = -94;
};
Y = {
aringacute = -115;
at = -55;
idotless = -100;
eth = -138;
f_f_h = -70;
four = -50;
germandbls = -31;
hcircumflex = 93;
iogonek = -100;
nine = 16;
one = 35;
schwa = -131;
seven = 36;
six = -28;
};
Yacute = {
eth = -138;
f_f_h = -70;
germandbls = -31;
};
Ycircumflex = {
eth = -138;
f_f_h = -70;
germandbls = -31;
};
Ydieresis = {
eth = -138;
f_f_h = -70;
germandbls = -31;
};
Ygrave = {
eth = -138;
germandbls = -31;
};
Ytilde = {
eth = -138;
germandbls = -31;
};
Z = {
germandbls = 1;
k = 17;
k.salt = 19;
kcommaaccent = 19;
lslash = 7;
};
Zacute = {
germandbls = 1;
k = 17;
k.salt = 19;
};
Zcaron = {
germandbls = 1;
k = 17;
k.salt = 19;
};
Zdotaccent = {
germandbls = 1;
k = 17;
k.salt = 19;
lslash = 7;
};
a = {
AE = 57;
J = 25;
V = -120;
W = -132;
Z = 5;
lslash = 28;
};
a.salt = {
apostrophemod = -15;
backslash = -60;
lslash = 9;
question = -16;
slash = 5;
trademark = -12;
v = -25;
};
ampersand = {
B = 33;
D = 32;
Dcaron = 32;
Dcroat = 32;
E = 32;
Eacute = 32;
Ebreve = 32;
Ecaron = 32;
Ecircumflex = 32;
Edieresis = 32;
Edotaccent = 32;
Egrave = 32;
Emacron = 32;
Eogonek = 32;
Eth = 32;
Etilde = 32;
F = 32;
K.salt = 33;
L = 34;
Lacute = 34;
Lcaron = 33;
Lcommaaccent = 34;
Lslash = 36;
M = 19;
P = 32;
R = 31;
R.salt = 33;
Racute = 31;
Rcaron = 31;
Rcommaaccent = 31;
Thorn = 32;
V = -55;
X = 59;
f = 39;
k = 59;
k.salt = 59;
kcommaaccent = 59;
lslash = 32;
m = 21;
quoteright = -41;
v = -24;
x = 24;
};
aogonek = {
g = 34;
g.salt = 34;
j = 196;
lslash = 27;
parenright = 23;
thorn = 11;
};
apostrophemod = {
a = -16;
c.salt = -22;
d = -37;
f = -11;
q = -19;
s = -15;
s.salt = -15;
};
asterisk = {
Lcaron = 14;
V = 13;
c.salt = -10;
hcircumflex = 26;
k = 9;
k.salt = 9;
kcommaaccent = 9;
};
at = {
M = -18;
T = -48;
U = -24;
V = -52;
W = -54;
Y = -61;
};
b = {
apostrophemod = -62;
};
backslash = {
V = -59;
X = 20;
lslash = 1;
nine = -23;
quoteright = -56;
v = -26;
};
braceleft = {
Lcaron = 1;
V = 44;
X = 8;
braceleft = -12;
c.salt = -22;
four = -21;
germandbls = 8;
hcircumflex = 21;
lslash = 15;
one = 9;
p = -12;
parenleft = -17;
q = -19;
s.salt = -12;
seven = 8;
six = -21;
v = -23;
zero = -17;
};
braceright = {
braceright = -12;
};
bracketleft = {
Lcaron = 1;
V = 44;
X = 10;
c.salt = -23;
eight = -13;
four = -25;
germandbls = 8;
hcircumflex = 21;
lslash = 15;
one = 9;
parenleft = -18;
q = -20;
s.salt = -12;
seven = 9;
six = -23;
v = -22;
zero = -18;
};
c = {
M = -16;
V = -93;
W = -95;
};
c.salt = {
apostrophemod = -11;
backslash = -49;
braceright = -15;
};
ccedilla = {
j = 80;
};
comma = {
j = 32;
jcircumflex = 32;
};
d = {
AE = 31;
V = -9;
W = -12;
lslash = 21;
};
dcaron = {
asterisk = 34;
backslash = 52;
braceright = 57;
bracketright = 59;
quotedbl = 25;
quotedblleft = 27;
quotedblright = 31;
quoteleft = 27;
quoteright = 31;
quotesingle = 25;
trademark = 48;
};
degree = {
four = -41;
six = -17;
};
e = {
apostrophemod = -17;
};
eight = {
U = -12;
};
eng = {
backslash = -59;
question = -19;
trademark = -13;
v = -12;
w = -16;
};
eth = {
AE = -9;
M = -20;
U = -29;
V = -70;
W = -71;
X = -12;
Y = -76;
Z = -16;
backslash = -12;
braceright = -13;
bracketright = -12;
x = -12;
};
exclamdown = {
V = -27;
};
f = {
AE = 46;
F = 85;
M = 117;
R = 85;
S = 69;
Thorn = 85;
V = 126;
W = 163;
X = 140;
Z = 113;
ampersand = 23;
apostrophemod = 27;
asterisk = 157;
backslash = 123;
bar = 78;
braceright = 96;
bracketright = 96;
exclam = 80;
lslash = 10;
parenright = 88;
question = 118;
space = 44;
trademark = 144;
};
f_f = {
lslash = 10;
napostrophe = 191;
};
f_f_i = {
napostrophe = 8;
};
f_f_j = {
b = 15;
napostrophe = 38;
thorn = 16;
};
fi = {
napostrophe = 8;
};
f_j = {
b = 16;
napostrophe = 38;
thorn = 16;
};
five = {
AE = -17;
V = 17;
W = 20;
four = 13;
};
four = {
A = 36;
AE = 25;
U = -13;
four = 21;
fraction = 10;
};
fraction = {
four = -22;
nine = 8;
one = -21;
seven = -25;
six = -13;
two = 6;
};
g = {
AE = 34;
Eth = -8;
J = 7;
S = 21;
V = -77;
W = -79;
comma = 6;
icircumflex = 28;
itilde = 46;
jcircumflex = 21;
lslash = 18;
quotedblbase = 17;
quotesinglbase = 17;
};
g.salt = {
eng = 16;
f = 22;
f_b = 28;
f_f = 35;
f_f_b = 35;
f_f_h = 35;
f_f_i = 35;
f_f_j = 35;
f_f_k = 35;
f_f_l = 35;
f_h = 28;
fi = 28;
f_j = 29;
f_k = 28;
fl = 28;
f_t = 28;
imacron = 7;
lslash = 17;
n = 16;
nacute = 16;
ncaron = 16;
ncommaaccent = 16;
ndotaccent = 16;
ntilde = 16;
p = 16;
quotedblbase = 15;
quotesinglbase = 15;
r = 18;
racute = 18;
rcaron = 18;
rcommaaccent = 18;
t = 27;
t_t = 27;
tbar = 21;
tcaron = 27;
u = 43;
uacute = 43;
ubreve = 43;
ucircumflex = 43;
udieresis = 43;
ugrave = 43;
uhungarumlaut = 43;
umacron = 43;
tcedilla = 27;
tcommaaccent = 27;
uogonek = 43;
uring = 43;
utilde = 43;
v = 38;
w = 41;
wacute = 41;
wcircumflex = 41;
wdieresis = 41;
wgrave = 41;
};
gbreve = {
comma = 6;
quotedblbase = 17;
quotesinglbase = 17;
};
gcircumflex = {
comma = 6;
quotedblbase = 17;
quotesinglbase = 17;
};
gcommaaccent = {
comma = 6;
quotedblbase = 17;
quotesinglbase = 17;
};
gdotaccent = {
comma = 6;
quotedblbase = 17;
quotesinglbase = 17;
};
germandbls = {
M = -10;
U = -48;
V = -87;
W = -88;
Y = -92;
backslash = -30;
braceright = -16;
p = -30;
question = -20;
space = -18;
v = -59;
x = -24;
};
h = {
M = -12;
V = -152;
W = -164;
Z = -7;
apostrophemod = -53;
};
hyphen = {
nine = -12;
one = -12;
seven = -13;
};
i = {
AE = 56;
V = -100;
W = -104;
lslash = 19;
};
idieresis = {
question = 14;
};
imacron = {
question = 16;
};
iogonek = {
j = 111;
};
itilde = {
question = 22;
};
jcircumflex = {
question = 13;
};
k = {
AE = 28;
V = -78;
W = -87;
apostrophemod = -46;
asterisk = -25;
backslash = -31;
c.salt = -21;
q = -20;
schwa = -11;
};
k.salt = {
apostrophemod = -61;
schwa = -18;
};
l = {
AE = 53;
V = -16;
lslash = 16;
periodcentered = -50;
};
lcaron = {
asterisk = 32;
b = 145;
backslash = 49;
braceright = 54;
bracketright = 57;
h = 94;
k = 105;
k.salt = 105;
l = 95;
l_l = 95;
parenright = 20;
quotedbl = 22;
quotedblleft = 25;
quotedblright = 29;
quoteleft = 25;
quoteright = 29;
quotesingle = 22;
thorn = 146;
trademark = 46;
};
lslash = {
f = 23;
f_b = 20;
f_f = 15;
f_f_b = 15;
f_f_h = 15;
f_f_i = 15;
f_f_j = 15;
f_f_k = 15;
f_f_l = 15;
f_h = 20;
fi = 20;
f_j = 21;
f_k = 20;
fl = 20;
f_t = 20;
germandbls = 40;
guillemetright = 13;
guilsinglright = 13;
h = 40;
i = 8;
ij = 8;
j = 6;
k = 40;
k.salt = 40;
l = 38;
l_l = 38;
lslash = 17;
n = 14;
p = 11;
question = 22;
r = 14;
t = 16;
t_t = 16;
t_z = 7;
u = 26;
v = 15;
w = 24;
x = 13;
};
m = {
AE = 30;
V = -143;
W = -154;
backslash = -60;
braceright = 10;
bracketright = 11;
lslash = 20;
parenright = 16;
question = -15;
slash = 20;
v = -32;
};
minus = {
seven = -17;
};
n = {
V = -145;
W = -157;
apostrophemod = -11;
};
nine = {
A = -33;
AE = -56;
J = -24;
U = -13;
braceright = -16;
bracketright = -17;
fraction = -30;
one = -12;
seven = -15;
slash = -36;
};
numbersign = {
one = -20;
seven = -26;
};
o = {
f_f_h = -6;
};
oacute = {
f_f_h = -6;
};
obreve = {
f_f_h = -6;
};
ocircumflex = {
f_f_h = -6;
};
odieresis = {
f_f_h = -6;
};
ograve = {
f_f_h = -6;
};
ohungarumlaut = {
f_f_h = -6;
};
omacron = {
f_f_h = -6;
};
one = {
A = 55;
AE = 45;
U = -15;
X = 17;
cent = -15;
fraction = 18;
};
oslash = {
f_f_h = -6;
};
otilde = {
f_f_h = -6;
};
p = {
f_f = -6;
f_f_b = -6;
f_f_h = -6;
f_f_i = -6;
f_f_j = -6;
f_f_k = -6;
f_f_l = -6;
};
parenleft = {
V = 42;
X = 7;
c.salt = -16;
four = -15;
germandbls = 1;
k = 37;
k.salt = 38;
kcommaaccent = 38;
lslash = 13;
q = -15;
six = -12;
v = -15;
};
parenright = {
braceright = -16;
bracketright = -17;
};
periodcentered = {
L = -11;
l = -50;
one = -12;
seven = -17;
};
plus = {
seven = -18;
};
q = {
M = -12;
V = -76;
W = -84;
Z = -12;
backslash = -32;
j = 105;
jcircumflex = 99;
};
questiondown = {
V = -49;
X = 13;
v = -14;
};
quotedbl = {
germandbls = 1;
hcircumflex = 29;
k = 23;
k.salt = 23;
kcommaaccent = 23;
lslash = 1;
};
quotedblleft = {
hcircumflex = 35;
k = 20;
k.salt = 22;
kcommaaccent = 22;
};
quotedblright = {
germandbls = 1;
hcircumflex = 32;
k = 33;
k.salt = 33;
kcommaaccent = 33;
lslash = 1;
};
quoteleft = {
hcircumflex = 35;
k = 20;
k.salt = 22;
kcommaaccent = 22;
};
quoteright = {
at = -16;
germandbls = 1;
hcircumflex = 32;
k = 33;
k.salt = 33;
kcommaaccent = 33;
lslash = 1;
registered = -15;
slash = -58;
space = -30;
};
quotesingle = {
germandbls = 1;
hcircumflex = 30;
k = 23;
k.salt = 23;
kcommaaccent = 23;
lslash = 1;
};
r = {
J = -6;
M = -24;
S = -9;
V = -94;
W = -101;
X = -15;
Z = -23;
};
registered = {
M = -17;
V = -51;
};
s = {
M = -16;
V = -95;
W = -101;
};
s.salt = {
backslash = -43;
braceright = -22;
bracketright = -17;
};
semicolon = {
j = 26;
jcircumflex = 26;
};
seven = {
A = -57;
AE = -84;
J = -48;
M = 32;
N = 33;
T = 34;
U = 35;
V = 82;
W = 87;
X = 44;
Y = 80;
backslash = 27;
braceright = 26;
bracketright = 27;
cent = -26;
degree = 5;
four = -45;
fraction = -70;
hyphen = -39;
minus = -15;
numbersign = -41;
one = 29;
periodcentered = -21;
plus = -12;
seven = 22;
six = -31;
slash = -72;
};
six = {
A = 6;
J = 14;
T = -28;
U = -14;
backslash = -21;
bracketright = -13;
four = 23;
nine = -19;
};
slash = {
V = 48;
X = 11;
a.salt = -48;
c.salt = -60;
f = -14;
four = -46;
germandbls = 1;
hcircumflex = 29;
k = 46;
k.salt = 46;
kcommaaccent = 46;
lslash = 15;
m = -33;
p = -24;
q = -61;
s.salt = -56;
six = -33;
slash = -200;
v = -24;
x = -27;
};
space = {
Aringacute = -42;
V = -32;
lslash = -22;
quoteright = -30;
v = -22;
};
t = {
M = -8;
V = -89;
W = -91;
apostrophemod = -35;
};
t_t = {
c.salt = -7;
q = -5;
};
tcaron = {
j = 6;
n = 9;
ncaron = 9;
p = 15;
r = 14;
t = 13;
t_t = 13;
tcaron = 13;
u = 13;
uacute = 13;
uring = 13;
v = 13;
w = 9;
};
three = {
AE = -26;
};
trademark = {
Eng = 17;
Lcaron = 26;
M = 33;
N = 18;
Nacute = 18;
Ncaron = 18;
Ncommaaccent = 18;
Ndotaccent = 18;
Ntilde = 18;
V = 68;
X = 40;
c.salt = -12;
germandbls = 1;
hcircumflex = 47;
icircumflex = 13;
itilde = 28;
jcircumflex = 7;
k.salt = 62;
kcommaaccent = 62;
lslash = 37;
p = 9;
v = 16;
};
two = {
A = 14;
AE = 7;
J = 11;
U = -13;
};
u = {
AE = 41;
V = -142;
W = -152;
lslash = 22;
};
Scedilla = {
germandbls = 1;
k = 27;
k.salt = 27;
};
Tcedilla = {
abreve = -101;
acircumflex = -86;
germandbls = -27;
icircumflex = -9;
k = 49;
k.salt = 49;
};
Scommaaccent = {
germandbls = 1;
k = 27;
k.salt = 27;
};
Tcommaaccent = {
abreve = -101;
acircumflex = -86;
germandbls = -27;
icircumflex = -9;
k = 49;
k.salt = 49;
};
uogonek = {
j = 129;
};
v = {
AE = -74;
J = -43;
M = -25;
S = -9;
V = -82;
W = -84;
X = -82;
Z = -36;
backslash = -33;
braceright = -32;
bracketright = -25;
parenright = -17;
q = -9;
slash = -24;
space = -20;
};
w = {
AE = -69;
J = -33;
M = -26;
S = -10;
V = -86;
W = -88;
X = -85;
Z = -36;
};
x = {
V = -91;
W = -100;
backslash = -42;
braceright = 7;
bracketright = 5;
c.salt = -42;
parenright = 5;
q = -41;
schwa = -9;
slash = 5;
v = -15;
};
y = {
AE = -67;
J = -49;
M = -28;
S = -15;
V = -86;
W = -94;
X = -75;
Z = -44;
};
z = {
M = -11;
V = -105;
W = -113;
};
zero = {
AE = -22;
M = -12;
U = -14;
braceright = -17;
bracketright = -18;
slash = -12;
};
};
};
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
}
);
properties = (
{
key = copyrights;
values = (
{
language = ENG;
value = "Copyright 2012 The Life Savers Project Authors (https://github.com/googlefonts/life-savers)";
}
);
},
{
key = designers;
values = (
{
language = ENG;
value = "Pablo Impallari, Rodrigo Fuenzalida, Brenda Gallo";
}
);
},
{
key = designerURL;
value = www.impallari.com;
},
{
key = licenses;
values = (
{
language = ENG;
value = "This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: https://openfontlicense.org";
}
);
},
{
key = licenseURL;
value = "https://openfontlicense.org";
},
{
key = manufacturers;
values = (
{
language = ENG;
value = "Pablo Impallari, Rodrigo Fuenzalida, Brenda Gallo";
}
);
},
{
key = manufacturerURL;
value = www.impallari.com;
},
{
key = trademarks;
values = (
{
language = ENG;
value = "Life Savers is a trademark of Pablo Impallari.";
}
);
}
);
unitsPerEm = 1000;
versionMajor = 3;
versionMinor = 100;
}
